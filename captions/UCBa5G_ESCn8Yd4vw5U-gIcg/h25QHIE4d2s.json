[
  {
    "text": "Should be able to see something. Welcome to another computer amusing.",
    "start": "7290",
    "end": "15100"
  },
  {
    "text": "This is 11 years in a row now that I've been given a lecture this time of the year where I'm",
    "start": "15100",
    "end": "21740"
  },
  {
    "text": "trying to tell you what I think the coolest thing I learned about trees was during the year and.",
    "start": "21740",
    "end": "30180"
  },
  {
    "text": "I guess my main announcement for today is that is that this year I finally got.",
    "start": "30180",
    "end": "40110"
  },
  {
    "text": "I finally finished writing a lot of the stuff up above trees that I've been talking about in past years.",
    "start": "40110",
    "end": "47170"
  },
  {
    "text": "If you can put this on the screen, this is now.",
    "start": "47170",
    "end": "52449"
  },
  {
    "text": "If you go to my home page and and ask for. Wow. OK. Got a funny monitoring. You go to my home page.",
    "start": "52450",
    "end": "61480"
  },
  {
    "text": "And then go to the news page. And it'll it'll tell you how to click and get this.",
    "start": "61480",
    "end": "66790"
  },
  {
    "text": "This preprint. And it includes a lot of stuff that I was talking about.",
    "start": "66790",
    "end": "73300"
  },
  {
    "text": "Like last year. I talked about how to find all spanning trees of a graph. And so that's in here somewhere where we talk spanning trees here.",
    "start": "73300",
    "end": "85470"
  },
  {
    "text": "You know, here we're doing spanning trees. OK. Go back a little bit.",
    "start": "85470",
    "end": "91080"
  },
  {
    "text": "We've got something called the Christmas tree pattern. This is what I talked about two years ago, I think. The title was called Change of Subsets.",
    "start": "91080",
    "end": "100260"
  },
  {
    "text": "But there was I call it the Christmas Tree. There's lots of cool stuff I haven't talked about in class about that.",
    "start": "100260",
    "end": "107700"
  },
  {
    "text": "You know, if you take random trees and then you plot where the where the nodes lie, you get this kind of a pattern.",
    "start": "107700",
    "end": "122329"
  },
  {
    "text": "And many other beautiful stuff. About three, they talked about lattices of trees a few years ago.",
    "start": "122330",
    "end": "127930"
  },
  {
    "text": "I think Lowe remembers that one. So those are those are here pictures of different lattices, of trees and so on.",
    "start": "127930",
    "end": "137530"
  },
  {
    "text": "So I'm happy that at last all the stuff I've been thinking about for years and years, I got down in paper and it seems to be it seems to check out my work.",
    "start": "137530",
    "end": "147910"
  },
  {
    "text": "And today I'm talking about sand piles and spanning trees, which is something I learned about just before I finished writing this section.",
    "start": "147910",
    "end": "156680"
  },
  {
    "text": "In fact, it's exercise 103. And inside these notes.",
    "start": "156680",
    "end": "164879"
  },
  {
    "text": "And in fact, I thought I would find it by looking in the index just just before the lecture today.",
    "start": "164880",
    "end": "173370"
  },
  {
    "text": "And I see that I've committed the world's words sandpile from the index.",
    "start": "173370",
    "end": "178769"
  },
  {
    "text": "Unfortunately, I have to pay myself two out of fifty six cents. But if you find any other errors in this in this version, then then you can get from dollars and fifty six cents for support.",
    "start": "178770",
    "end": "192480"
  },
  {
    "text": "So sandpile should have sat right there on page 42. But here we are, exercise about Sampo. And then the answer coming up.",
    "start": "192480",
    "end": "203580"
  },
  {
    "text": "So this is this is one of the most fantastic things. Like it's almost unbelievable. But it was it was started by some about 15 years ago by a physicist named DA.",
    "start": "203580",
    "end": "218970"
  },
  {
    "text": "And that's you. I'm just training the camera operator here. Can you zoom out here? Here you see, here's how you he writes his name in Hindi.",
    "start": "218970",
    "end": "228630"
  },
  {
    "text": "So he started this all.",
    "start": "228630",
    "end": "233820"
  },
  {
    "text": "And there's been lots of papers in the physics literature about. About sandpile models will sand.",
    "start": "233820",
    "end": "240440"
  },
  {
    "text": "But the curious thing is that it works also for people like me who who want to deal with discrete stuff.",
    "start": "240440",
    "end": "246700"
  },
  {
    "text": "And and as we'll see that, there's a huge number of results about graphs and trees that relate to this physics model of sandpile.",
    "start": "246700",
    "end": "261269"
  },
  {
    "text": "Now, on page 70 is the reference then to the physics, literature and so on.",
    "start": "261270",
    "end": "268560"
  },
  {
    "text": "Now, in the Christmas spirit, I I've decided that whoever has the best question today.",
    "start": "268560",
    "end": "279160"
  },
  {
    "text": "Since you haven't been responding very much to what I'm saying here. So I got to see if anybody's paying attention.",
    "start": "279160",
    "end": "285290"
  },
  {
    "text": "But whoever asks the best question, you know, I'll give you a present.",
    "start": "285290",
    "end": "290460"
  },
  {
    "text": "And you can either have these notes, which, of course, are free on the Web, or you can have a copy of the art of computer programing volume one, two or three.",
    "start": "290460",
    "end": "299440"
  },
  {
    "text": "Or you can have the textbook here. Or you could end up and whoever asks the best question and and reads Japanese can have.",
    "start": "299440",
    "end": "311510"
  },
  {
    "text": "You can have the art of computer programing volume one in Japanese, because they sent me four copies and I, you know, and I only needed to two or actually only needed one.",
    "start": "311510",
    "end": "321280"
  },
  {
    "text": "So so I kept one for next year's Christmas break.",
    "start": "321280",
    "end": "327360"
  },
  {
    "text": "Right. So there you are. I got one, two, three, four, five, six presence here.",
    "start": "327360",
    "end": "334139"
  },
  {
    "text": "You know that you can choose if you if you ask a decent question now.",
    "start": "334140",
    "end": "339570"
  },
  {
    "text": "Yes. Dan. What is the question I will give you a gift.",
    "start": "339570",
    "end": "344740"
  },
  {
    "text": "OK. So we put you in the queue right here, right now. So. So Dan is so far ahead of everybody in these things.",
    "start": "344740",
    "end": "353170"
  },
  {
    "text": "And if he leaves Japanese, he has the choice of 70. OK, but what is this all about, sandpile?",
    "start": "353170",
    "end": "358450"
  },
  {
    "text": "Well, it actually this this model applies to an arbitrary directed graph,",
    "start": "358450",
    "end": "367000"
  },
  {
    "text": "almost arbitrary directed graph, which I think everybody knows with direct graph. And the only condition that I'm putting on a directed graph is that there's a designated vertex in the graph, which we call Vertex Zero.",
    "start": "367000",
    "end": "380770"
  },
  {
    "text": "And there is a path from every every body to Vertex Zero. So the graph is not only connected, it has, as you called, a sink vertex Toombs.",
    "start": "380770",
    "end": "390460"
  },
  {
    "text": "So this means that in particular, there is a way to make a tree as an oriented scanning tree on the graph.",
    "start": "390460",
    "end": "399490"
  },
  {
    "text": "This means for every vertex except X zero or V zero, I guess we call it.",
    "start": "399490",
    "end": "406270"
  },
  {
    "text": "We give one arc coming out of it that gets it closer to be zero. And then and then by following these arcs will eventually get to that root.",
    "start": "406270",
    "end": "415810"
  },
  {
    "text": "So so there's at least one oriented, spanning tree in the graph with the rule to be zero.",
    "start": "415810",
    "end": "422410"
  },
  {
    "text": "And that's the only condition that I put on on a directed graph. So, of course, there's a zillion wonderful direct and graphs that they each have different meanings to us.",
    "start": "422410",
    "end": "431990"
  },
  {
    "text": "And for each one we can play the sandpile game. I'm going to go straight to sandpile again on just a very simple case, which is actually a graph, not a directed graph.",
    "start": "431990",
    "end": "443350"
  },
  {
    "text": "I'm going to consider a three by three Taurus just because it was it is about the right size for the examples that I want to do.",
    "start": "443350",
    "end": "454180"
  },
  {
    "text": "And then it means that there are nine vertices and we call them zero.",
    "start": "454180",
    "end": "459370"
  },
  {
    "text": "One, two, three, four, five, six, seven. That's where you start at eight.",
    "start": "459370",
    "end": "465449"
  },
  {
    "text": "And then each one is is adjacent to the ones next to it horizontally and vertically.",
    "start": "465450",
    "end": "472750"
  },
  {
    "text": "And also it wraps around. That's why I call it the tourist. So so this one goes and wraps around and comes up.",
    "start": "472750",
    "end": "479740"
  },
  {
    "text": "You can think of six as being up here. Six, seven, eight is being up here. Sort of a shadow.",
    "start": "479740",
    "end": "487440"
  },
  {
    "text": "Affect their and. And similarly, zero three and six are over at the right.",
    "start": "487440",
    "end": "492910"
  },
  {
    "text": "Tier one and two at the bottom and so on. So. So this is a graph which every vertex has four neighbors.",
    "start": "492910",
    "end": "500440"
  },
  {
    "text": "And. And it's a directed graph in the sense that each of these lines means there's a you can go there's Arko going to the right and are going to the left.",
    "start": "500440",
    "end": "513260"
  },
  {
    "text": "OK. Now we play the following game on and on the directed graph.",
    "start": "513260",
    "end": "521099"
  },
  {
    "text": "We put we put pieces of sand on every vertex except except the special vertex v0.",
    "start": "521100",
    "end": "527230"
  },
  {
    "text": "Are you put sand on there? And just for the heck of it, let me imagine that I quit for grains of sand on each one.",
    "start": "527230",
    "end": "533820"
  },
  {
    "text": "It can be any number, any non-negative numbers.",
    "start": "533820",
    "end": "540150"
  },
  {
    "text": "And if it was all zero, which we wouldn't have any fun because I care what the rules of the game are, the rules of the game are, if any, any vertex.",
    "start": "540150",
    "end": "551090"
  },
  {
    "text": "I've specialized for this particular graph and you'll see how it works for any director.",
    "start": "551090",
    "end": "556170"
  },
  {
    "text": "So this particular graph, if you have at least four grains of sand on a vertex,",
    "start": "556170",
    "end": "561600"
  },
  {
    "text": "then you can you can not take far away and distribute one to each neighbor.",
    "start": "561600",
    "end": "568810"
  },
  {
    "text": "So, for example, this one has four. So I. So I change it to zero and I put one on each of its neighbors.",
    "start": "568810",
    "end": "577269"
  },
  {
    "text": "That one goes here. I didn't list the number of the Sandmeyer, this guy. So. So one goes here. This guy now has five.",
    "start": "577270",
    "end": "587460"
  },
  {
    "text": "No one goes down. And so this guy has five. And one goes up.",
    "start": "587460",
    "end": "592750"
  },
  {
    "text": "So this guy has five. And one goes to the left. But there. But that's his. That's Vertex V zero. So it disappears.",
    "start": "592750",
    "end": "602050"
  },
  {
    "text": "So we lost the grain of sand there. But otherwise, you know, we we will not.",
    "start": "602050",
    "end": "610830"
  },
  {
    "text": "Now we know we repeat this process until we can't do it anymore. So as long as somebody has at least four grains of sand.",
    "start": "610830",
    "end": "619790"
  },
  {
    "text": "Then we can yell and then then we do this operation is called toppling,",
    "start": "619790",
    "end": "625579"
  },
  {
    "text": "toppling at a vertex and an apt kind of sequence of toplines is called an avalanche.",
    "start": "625580",
    "end": "631310"
  },
  {
    "text": "So so this is what this, you know, comes from from from physics. You are the question. Can Iraq travel to work, sex with the senator?",
    "start": "631310",
    "end": "643760"
  },
  {
    "text": "Yeah. You add one to each of the other neighbors.",
    "start": "643760",
    "end": "649700"
  },
  {
    "text": "But this guy, I didn't write anything there because he's he's actually he's a hole in sand goes down into the into the inner middle earth and disappears.",
    "start": "649700",
    "end": "660500"
  },
  {
    "text": "Yeah. But now you're ahead of them. The question in the question. Competition. OK, now what do you think? No, I'm not going to cycle through here and I'm going to take the first the first guy.",
    "start": "660500",
    "end": "673710"
  },
  {
    "text": "So I got to go. One, two, three, four, five, six, seven, eight. One, two, three, four, five, six, seven, eight. And keep doing this until I've gone through several steps, you know, eight steps in a row without making a change.",
    "start": "673710",
    "end": "683780"
  },
  {
    "text": "And then I'll be stuck. So five comes up next. So what do you think is going to be, you know, test if anybody knows the rules of this game?",
    "start": "683780",
    "end": "692000"
  },
  {
    "text": "What's going to be the situation after afterwards? How many is going to be on in place of the zero here?",
    "start": "692000",
    "end": "698170"
  },
  {
    "text": "You got to learn how much here. One I was one left to take four away. One goes to the left, one goes up, one goes down, one goes to the right in and disappears.",
    "start": "698170",
    "end": "709550"
  },
  {
    "text": "So there's gonna be four, five, five.",
    "start": "709550",
    "end": "715459"
  },
  {
    "text": "And this will be four by five. OK, now once more, two more to one the up and then I'll show you the hole then.",
    "start": "715460",
    "end": "725570"
  },
  {
    "text": "Then come then I'll start doing it myself. OK. So this four again we're going to lose one is going to go up, left, right down from NSW.",
    "start": "725570",
    "end": "732230"
  },
  {
    "text": "So this goes zero. We're going to have six. We're going to have six coming over here.",
    "start": "732230",
    "end": "737329"
  },
  {
    "text": "Five. Five. Five. And. OK, now now I'm at this place. The sex is going to move and it's going to leave to there in the middle and.",
    "start": "737330",
    "end": "748290"
  },
  {
    "text": "OK. So I get two one one two seven five, six, five.",
    "start": "748290",
    "end": "753930"
  },
  {
    "text": "And you can trust me on this. I had a computer program to do this this morning so that I wouldn't see.",
    "start": "753930",
    "end": "759850"
  },
  {
    "text": "OK. All right. So the next step, we're changing the seven and it gives us two, two, two, three, three, five, six, six.",
    "start": "759850",
    "end": "767639"
  },
  {
    "text": "Then we go two, two, three, three, three. One seven seven is the five topples, this first seven is going to topple here,",
    "start": "767640",
    "end": "775690"
  },
  {
    "text": "that's giving us a three, two, three, four, three, two, three, eight eight is toppling.",
    "start": "775690",
    "end": "782620"
  },
  {
    "text": "And we're getting three, three, three, four for this. We're getting some nice and symmetrical. Three, four, four now.",
    "start": "782620",
    "end": "790810"
  },
  {
    "text": "You know, this would make a wonderful Java applet to put on the on the Web where you could just watch this thing toppling away.",
    "start": "790810",
    "end": "800140"
  },
  {
    "text": "Now, before I finish, you know, maybe I'm going to get into a loop. What do you think? Is it possible? Is it possible that this could go on forever? What do you think?",
    "start": "800140",
    "end": "818450"
  },
  {
    "text": "Well, not much time, but lot of the times you're losing one when I'm losing a grain of sand.",
    "start": "818450",
    "end": "824090"
  },
  {
    "text": "I'm certainly not getting in the loop. Yeah, right. So if I'm losing a grain of sand, I'm certainly making some kind of progress toward a different state.",
    "start": "824090",
    "end": "830310"
  },
  {
    "text": "But what could I possibly then go for a cycle and never lose a grain of sand?",
    "start": "830310",
    "end": "836120"
  },
  {
    "text": "You've got one of your grains is always moving towards the hole because there's always a path to the hole. That's true. One is always moving towards upwards.",
    "start": "836120",
    "end": "844459"
  },
  {
    "text": "All right. And that's the and that's the secret in general. In general, I have a directed graph. And every vertex has a certain out degrees.",
    "start": "844460",
    "end": "854810"
  },
  {
    "text": "And and that out degree is the number four. In this example. Right. So. So if you have as many grains of sand as your out degree, then you send sand to every one of the people who you have an ark out of you.",
    "start": "854810",
    "end": "868370"
  },
  {
    "text": "That's the that's the rule for the general directed graph in the general directed graph. I assumed that there was a there was a path to zero from everybody.",
    "start": "868370",
    "end": "878600"
  },
  {
    "text": "That means that I can arrange the the vertices into it into an order so that everybody has",
    "start": "878600",
    "end": "884540"
  },
  {
    "text": "an R coming out that goes to a lower number and vertex are on the outs here by direction.",
    "start": "884540",
    "end": "891079"
  },
  {
    "text": "These are pi directionally in the tourists. But in the general case, not not not every theorem I'm going to talk about today works for every directed graph.",
    "start": "891080",
    "end": "900050"
  },
  {
    "text": "I'll tell you what the restrictions are, but more so that most of the things for every directed graph that has at least one oriented subtree.",
    "start": "900050",
    "end": "908540"
  },
  {
    "text": "We with the Route zero. So. So this is not so good.",
    "start": "908540",
    "end": "917480"
  },
  {
    "text": "So the point is, though, that if every everybody in the directed case is going to have at least one neighbor, that's that's lower number.",
    "start": "917480",
    "end": "925970"
  },
  {
    "text": "That means that if you don't lose any sand, then you're always increasing in lexicographical to your eyes,",
    "start": "925970",
    "end": "931490"
  },
  {
    "text": "increasing the the the the US state where we list the number of pieces of sand on each on each one.",
    "start": "931490",
    "end": "938630"
  },
  {
    "text": "And so you can't increase an increase indefinitely. So you can't have a cycle. So, so the. Now I have a lot of visitors, probably someone who can speak to Japanese.",
    "start": "938630",
    "end": "950150"
  },
  {
    "text": "I have to tell you, the people who came in. There's a prize offered to the people, person who asked the best questions like, you know.",
    "start": "950150",
    "end": "957960"
  },
  {
    "text": "Like what? Like, why didn't why didn't you wait for me?",
    "start": "957960",
    "end": "963690"
  },
  {
    "text": "And then and especially the one who ask the best question and reads Japanese can have the art of computer programing in Japanese.",
    "start": "963690",
    "end": "971870"
  },
  {
    "text": "OK. So as I'm saying, eventually we're gonna get to a stable state and it's stable means that there aren't any any toplines left anymore.",
    "start": "971870",
    "end": "985490"
  },
  {
    "text": "That means that every vertex in this case has for it has has three or less guys.",
    "start": "985490",
    "end": "991860"
  },
  {
    "text": "Yeah. Then you can't topple the skipper.",
    "start": "991860",
    "end": "999970"
  },
  {
    "text": "Right now I'm skipping it. Yeah, so. So I got another. That's my next question. What happens if I took another algorithm for this instead of going to, you know, one, two, three, four, five.",
    "start": "999970",
    "end": "1010180"
  },
  {
    "text": "So maybe what if I what if I use some other like like I've got. So what is this for? Once I had this eight year, you know, maybe I should have known, maybe I could could, you know, double topple from the eighth and send two guys out.",
    "start": "1010180",
    "end": "1021610"
  },
  {
    "text": "You know, I didn't do that. I only went to four here. OK. But anyway, I got stuck full time. I'm still toppling away here.",
    "start": "1021610",
    "end": "1028709"
  },
  {
    "text": "And for the people who just walked in and see if you can guess the rule that I'm using.",
    "start": "1028710",
    "end": "1034199"
  },
  {
    "text": "But what I did is I took the six grains of sand here and I sent one up, one to the left, one down and one to the right let down.",
    "start": "1034200",
    "end": "1041760"
  },
  {
    "text": "It came back in at the top. So this blowing up to a five and going to the right changes forward to a five. So now I got five to two. Not Bob.",
    "start": "1041760",
    "end": "1051750"
  },
  {
    "text": "One, six, five, three, two. I came toppling none.",
    "start": "1051750",
    "end": "1056910"
  },
  {
    "text": "Now this five first five there and deny topolice six.",
    "start": "1056910",
    "end": "1063750"
  },
  {
    "text": "And that gives me two to five three three five three three.",
    "start": "1063750",
    "end": "1071780"
  },
  {
    "text": "Pretty soon we're going to see that we're actually in a wreck. Well, I guess this is getting kind of boring now. So I'll show you. Just see if you can read it off on my golf home.",
    "start": "1071780",
    "end": "1081290"
  },
  {
    "text": "I know it's a cheat sheet here. So we got here and I finally got to this stage. See this one three, three, three, two, two, two, two, two. So on and on and on.",
    "start": "1081290",
    "end": "1089750"
  },
  {
    "text": "It goes to three, three. Trust me. Three, two, two, three, two, two.",
    "start": "1089750",
    "end": "1095270"
  },
  {
    "text": "And the total number of steps was one, two, three, four, five, six, seven, eight, nine, ten, eleven, twelve,",
    "start": "1095270",
    "end": "1101030"
  },
  {
    "text": "thirteen, fourteen, fifteen, twenty three, twenty four and five, six and seven after twenty eight steps.",
    "start": "1101030",
    "end": "1106580"
  },
  {
    "text": "Here we are. Yep. That is the that is an excellent question, and that is what I wanted somebody to ask.",
    "start": "1106580",
    "end": "1116340"
  },
  {
    "text": "So look for your your way. So for now, that's the question.",
    "start": "1116340",
    "end": "1122070"
  },
  {
    "text": "What if I didn't couplings in a different order? OK. And so the first thing is, it doesn't matter.",
    "start": "1122070",
    "end": "1127759"
  },
  {
    "text": "You always get this same final state, no matter which way you did the top.",
    "start": "1127760",
    "end": "1133250"
  },
  {
    "text": "Now, how do we prove that? And, well, the fact is, lots of things in mathematics that are much harder to prove that use the same idea.",
    "start": "1133250",
    "end": "1141170"
  },
  {
    "text": "Yeah, you've got to love the feeling. We'll get to the final state from the initial state.",
    "start": "1141170",
    "end": "1150130"
  },
  {
    "text": "So if we got stuck in the right. So here's so here's the idea. Imagine that this is a state the final state assembly on the initial state army or only on initial state.",
    "start": "1150130",
    "end": "1159350"
  },
  {
    "text": "Not yet. So. So there's some state and maybe maybe there's six vertices that can topple.",
    "start": "1159350",
    "end": "1165770"
  },
  {
    "text": "OK. So I have six ways to go from here to other states, depending on which one I chose to do the toppling.",
    "start": "1165770",
    "end": "1172700"
  },
  {
    "text": "OK. And each of these leaves, again, you know, might each one might topple, might might have different ways of toppling an event.",
    "start": "1172700",
    "end": "1180679"
  },
  {
    "text": "And at the end, we finally get, you know, stable states at the bottom where there's no more toppling possible.",
    "start": "1180680",
    "end": "1186860"
  },
  {
    "text": "All right. Imagine this big, big network. We showed that there is no infinite branches here. And eventually in every every branch eventually comes to a stable state.",
    "start": "1186860",
    "end": "1197750"
  },
  {
    "text": "The firm is the only stable. States are entire identical. So what does it depend on in each state?",
    "start": "1197750",
    "end": "1204630"
  },
  {
    "text": "It depends on the initial state for sure. Yeah. Because if I get the initial state was three three, three, two, two, three, two, two.",
    "start": "1204630",
    "end": "1213120"
  },
  {
    "text": "That would be a final state. But if it was three three three three three three three three, that would be the has.",
    "start": "1213120",
    "end": "1219910"
  },
  {
    "text": "So it certainly does depend on the initial state of being.",
    "start": "1219910",
    "end": "1225090"
  },
  {
    "text": "There are in fact, there are how many stable states either in this case, you know, you've got four choices and at times eight ways.",
    "start": "1225090",
    "end": "1232340"
  },
  {
    "text": "So that's four of the eight. This is due to the 16th. So that's, you know, six five five three six, no stable states that can occur.",
    "start": "1232340",
    "end": "1242520"
  },
  {
    "text": "So for each initial state, there will be one stable state afterwards. And I want to prove that.",
    "start": "1242520",
    "end": "1248960"
  },
  {
    "text": "And and so what the way you prove it is suppose that you have two choices. I mean, you've got more than two. But let's suppose you had two choices.",
    "start": "1248960",
    "end": "1258280"
  },
  {
    "text": "So from one state, you could go either, you know, either Topple and Vertex five, 10 and or topple at Vertex fifteen.",
    "start": "1258280",
    "end": "1266590"
  },
  {
    "text": "OK, well, all you have to realize is that if you at if you can topple at both places, OK, then you could do 10 first.",
    "start": "1266590",
    "end": "1275460"
  },
  {
    "text": "Then one of the options is to come back from ten to fifteen and one of the options from 15 is to come back and 15 to 10.",
    "start": "1275460",
    "end": "1283020"
  },
  {
    "text": "And that gets you to the same to the same one. So in any case, let's called a Diamond Lamai in many in many arguments in mathematics that if you if you want to show that,",
    "start": "1283020",
    "end": "1295020"
  },
  {
    "text": "like, one of the most famous things is the history. Is it the somebody cleaning theorem about lambda expressions? But there are many different things also in unification.",
    "start": "1295020",
    "end": "1304799"
  },
  {
    "text": "So if you can go two ways. But then you come back to the other. Then it turns out these are all going to be all going to be identical.",
    "start": "1304800",
    "end": "1311040"
  },
  {
    "text": "And look. And the proof is that. Well, you could have done it, you know, if you could do first, either in J.",
    "start": "1311040",
    "end": "1318210"
  },
  {
    "text": "Then, you know, then you can always assume that you've got these operations are conclusive.",
    "start": "1318210",
    "end": "1325890"
  },
  {
    "text": "You can always assume that. Yes, you do. You say that. OK. So it's it's true.",
    "start": "1325890",
    "end": "1336150"
  },
  {
    "text": "And therefore, it actually is a state while it's possible to do Iron Jay. It may not be possible to do Jay first. Because you may not gain. May not be comparable.",
    "start": "1336150",
    "end": "1345710"
  },
  {
    "text": "Well, that's OK. That's OK. If there's two ways out, if you if you have two choices as to what to do next, then you can do them in either order.",
    "start": "1345710",
    "end": "1356520"
  },
  {
    "text": "And this is the same argument that you use when you're you know, you're trying to prove that you've been extreme or something like this.",
    "start": "1356520",
    "end": "1361900"
  },
  {
    "text": "It's all these stories are just the same. And in fact, what you would if you if you still aren't convinced, you know,",
    "start": "1361900",
    "end": "1369540"
  },
  {
    "text": "use induction on the length of the number of couplings and then then you see that if something can go two ways that,",
    "start": "1369540",
    "end": "1377760"
  },
  {
    "text": "you know, then then this one has the same number of completely.",
    "start": "1377760",
    "end": "1383850"
  },
  {
    "text": "All outcomes of this one are equal to this. All outcomes of this one are equal to this also.",
    "start": "1383850",
    "end": "1388890"
  },
  {
    "text": "Therefore, these are the same. Therefore, this is the same. This is a ferryman.",
    "start": "1388890",
    "end": "1396030"
  },
  {
    "text": "And so if you have any state X, it goes to a unique state which are called Sigma of X,",
    "start": "1396030",
    "end": "1402060"
  },
  {
    "text": "the stable state that that happens if X is your initial configuration. Yup. I'm getting great questions here.",
    "start": "1402060",
    "end": "1408070"
  },
  {
    "text": "I love this because it shows that the order of something changed the number of iterations before this final step.",
    "start": "1408070",
    "end": "1414659"
  },
  {
    "text": "Is that true? That's not what the sequence swapping sequence changed the number of iterations.",
    "start": "1414660",
    "end": "1423210"
  },
  {
    "text": "Actually, this proof that I just gave shows that it's actually also gonna be the same number of iterations and the same number of toplines that every vertex.",
    "start": "1423210",
    "end": "1436570"
  },
  {
    "text": "In fact, that's also going to be obvious from another thing that's certain when you step vectors are linearly.",
    "start": "1436570",
    "end": "1443070"
  },
  {
    "text": "OK. I just think if you have zeros that are for free. Yeah, right. You'll have to go through one side if you start with a three. It'll be.",
    "start": "1443070",
    "end": "1452320"
  },
  {
    "text": "That'll do, I think, when you do. It's OK. Yeah. But I want the table because a three one tackle.",
    "start": "1452320",
    "end": "1460639"
  },
  {
    "text": "And then the next. Whereas if it did the other way you'd have the food subo. And then there's only one candidate. There's only one candidate here. You have to start with the foreign escape.",
    "start": "1460640",
    "end": "1470929"
  },
  {
    "text": "The failure of toppling does not count as a move. Failure to move in that sense, the others.",
    "start": "1470930",
    "end": "1479770"
  },
  {
    "text": "Some strategies could be very bad because they would always look at things that you don't want to topple.",
    "start": "1479770",
    "end": "1486780"
  },
  {
    "text": "This is the one year. But notice this. It's true for every every directed craft that has a that hasn't oriented spanning three through FEMA.",
    "start": "1486780",
    "end": "1498170"
  },
  {
    "text": "But there's this and then this defines a mapping to stable faith.",
    "start": "1498170",
    "end": "1504380"
  },
  {
    "text": "Presuming that the general rule of this game is that you can top a list, the number of sand grains is the ultimate vertex.",
    "start": "1504380",
    "end": "1514320"
  },
  {
    "text": "Exactly. Yeah. You never, never run out of sand at any vertex.",
    "start": "1514320",
    "end": "1519840"
  },
  {
    "text": "So. So if a vertex has has five arrows going out of it, you know. Take your favorite directly graph. It's probably got this property that you can get from it.",
    "start": "1519840",
    "end": "1528659"
  },
  {
    "text": "OK, then. Then you can play the sandpile game on it and. And you can you can keep on going.",
    "start": "1528660",
    "end": "1533840"
  },
  {
    "text": "You can write your Java applet and you can keep on going until it until it all percolates.",
    "start": "1533840",
    "end": "1540230"
  },
  {
    "text": "And at the end, you've got a data saying that's the complexity of shooting Sigma X given that's unknown to me.",
    "start": "1540230",
    "end": "1551840"
  },
  {
    "text": "In fact, we're gonna you know, there's gonna be a there's gonna be an almost uncountable number of open problems that are raised by rate raised by this.",
    "start": "1551840",
    "end": "1561220"
  },
  {
    "text": "It's a it's a it's a fantastic area to think about, although I have to say, I don't know of any practical applications.",
    "start": "1561220",
    "end": "1572539"
  },
  {
    "text": "So I'm talking beauty here now with given this tourists given a stable stage at four to",
    "start": "1572540",
    "end": "1581050"
  },
  {
    "text": "every knothole Virtua Step and run your algorithm to get back to that stable state.",
    "start": "1581050",
    "end": "1587480"
  },
  {
    "text": "No, no. Because I wouldn't get you seen. That's my equipment to zero. If I if I added the difference between four and three three, then it might happen.",
    "start": "1587480",
    "end": "1597740"
  },
  {
    "text": "That's the next. You're very good. You're anticipating my next idea. So OK, so. So anyway, I can now define what Sigma vexes, ok. X is a vector of color called a state.",
    "start": "1597740",
    "end": "1609190"
  },
  {
    "text": "How many grains of sand do I have? Your exit inheres is an eight tuple thing. How many grains of sand are in each vertex and end up.",
    "start": "1609190",
    "end": "1618480"
  },
  {
    "text": "And we'll focus on this particular tourist graph for now. So. So there is this function sigma of X. That depends on X that.",
    "start": "1618480",
    "end": "1626750"
  },
  {
    "text": "I just told you about this. Okay. Now let's let's try to figure out something about stakes now.",
    "start": "1626750",
    "end": "1632390"
  },
  {
    "text": "Now we know how many stable seats there are. It's obviously you just take the product of the degrees for to the eighth and escape.",
    "start": "1632390",
    "end": "1641500"
  },
  {
    "text": "But some of the stick. But now that the physics forces are interested in what they call recurrent states,",
    "start": "1641500",
    "end": "1648910"
  },
  {
    "text": "and this means that if we if we allow nature to to introduce grains of sand at random from time to time and then that causes toppling to occur,",
    "start": "1648910",
    "end": "1659600"
  },
  {
    "text": "then some states will occur infinitely often.",
    "start": "1659600",
    "end": "1668179"
  },
  {
    "text": "But a state like zero will never occur again. Nothing ever leads to the zero stake.",
    "start": "1668180",
    "end": "1674920"
  },
  {
    "text": "So the interesting ones are the current states, the ones that the ones that you can get to again.",
    "start": "1674920",
    "end": "1681380"
  },
  {
    "text": "So I wrote this computer program. Maybe I should put it on the Web. But you can.",
    "start": "1681380",
    "end": "1687030"
  },
  {
    "text": "Here's a program that I put it on the Web tonight. Simple playing with Santos on a three by three tours.",
    "start": "1687030",
    "end": "1693330"
  },
  {
    "text": "And then I, you know, so I, I explored adding one green at a time. OK. And then I did some more some more experiments.",
    "start": "1693330",
    "end": "1702210"
  },
  {
    "text": "And so I so I said let's let's keep putting one green to it. Let's start with all zeroes. And then we put you know.",
    "start": "1702210",
    "end": "1711090"
  },
  {
    "text": "And then I'll put one grain of sand on this vertex here. So I get one zero zero zero. And then I put another on and another on another. And what happens?",
    "start": "1711090",
    "end": "1720179"
  },
  {
    "text": "And it turned out that, well, it starts to spread around. The sand goes around and around. And I get.",
    "start": "1720180",
    "end": "1730710"
  },
  {
    "text": "Eventually it gets into a loop. Of course. And turn out to be a cycle length. 18. So you think, oh, this this is probably a recurrent state because, you know,",
    "start": "1730710",
    "end": "1741529"
  },
  {
    "text": "it recurs if you keep if if you keep on adding sand on that one vertex, I'm getting these 18 things.",
    "start": "1741530",
    "end": "1749860"
  },
  {
    "text": "But still, there are a lot of states I haven't hit yet. So I went to one of those and I started and again, I, I kept adding adding sand until I got into a cycle, another cycle with a lengthy 18.",
    "start": "1749860",
    "end": "1760070"
  },
  {
    "text": "I do not think cycles were all at length, I think. But I kept doing this until I started with every possible state and I had and I had gone until I reached the cycle.",
    "start": "1760070",
    "end": "1768560"
  },
  {
    "text": "This is quite so. So anytime you have a mapping that goes from X six to sigma of X of this is called a functional digraphs or some mapping of the set into itself.",
    "start": "1768560",
    "end": "1778399"
  },
  {
    "text": "And and the only possible since we started at a vertex X zero Neagle x1 x2 x3 and eventually,",
    "start": "1778400",
    "end": "1787400"
  },
  {
    "text": "you know, actually I should draw it like this because it always looks like a six no matter what.",
    "start": "1787400",
    "end": "1794480"
  },
  {
    "text": "Where you start, there's a certain certain tail. And then eventually you get into a loop. You take any, any mapping of a finite set into it.",
    "start": "1794480",
    "end": "1804470"
  },
  {
    "text": "So then I. So I. I said, okay. I wonder, what about all these? How about all this. All of the vertices that are in these loops.",
    "start": "1804470",
    "end": "1813980"
  },
  {
    "text": "Zero zero zero isn't it. Isn't it a loop. But eventually you did and this was a cycle length they think well they were twenty six thousand and some of these vertices.",
    "start": "1813980",
    "end": "1825200"
  },
  {
    "text": "However, it turns out that the number of recurrent states in his in his stories is actually eleven thousand and something.",
    "start": "1825200",
    "end": "1832549"
  },
  {
    "text": "So that meant there were fifteen thousand in these loops. But but they still aren't recurrent in the sense that they would they would keep occurring in nature if we kept adding.",
    "start": "1832550",
    "end": "1841370"
  },
  {
    "text": "Second kept on adding said there's only a small number of such of such.",
    "start": "1841370",
    "end": "1847040"
  },
  {
    "text": "It's not really what are recurrent vertex is. And so the real definition of recurrent.",
    "start": "1847040",
    "end": "1854240"
  },
  {
    "text": "And by the way, that that's an error in the in the paper that introduced this subject in in combinat Torrico in nineteen ninety nine,",
    "start": "1854240",
    "end": "1865790"
  },
  {
    "text": "the paper which which inspired me to study it, asserts that something is a recurrent state.",
    "start": "1865790",
    "end": "1874310"
  },
  {
    "text": "If, if there's, if it has the property that, that X is a recurrent state, if X is equal to sigma of X plus A for some non-negative a.",
    "start": "1874310",
    "end": "1890290"
  },
  {
    "text": "That was the definition, some positive. So they are a is a is a vector.",
    "start": "1890290",
    "end": "1897070"
  },
  {
    "text": "It says you add sand to it and you get back to yourself again. And that was the definition of a recurrence.",
    "start": "1897070",
    "end": "1902799"
  },
  {
    "text": "But as but it turns out that that's not the right definition. Yeah. Where you're adding grains of sand.",
    "start": "1902800",
    "end": "1913860"
  },
  {
    "text": "And how. So you you add one and then you see if you can. OK. So I saw what I did was I said I go from X, so let's say F of X is equal to sigma of X plus one zero zero zero.",
    "start": "1913860",
    "end": "1935870"
  },
  {
    "text": "That was my that's that's the function. So now that X into F of X.",
    "start": "1935870",
    "end": "1942740"
  },
  {
    "text": "That was experiment that I did. I started with Litha state and then I added one grain of sand and I reduced it.",
    "start": "1942740",
    "end": "1949940"
  },
  {
    "text": "Toppled. And then I. Then that was that that was a recurrent state. And then I go from that. Add another grain of sand over and over again. That's what that's what I was finding these these on the site.",
    "start": "1949940",
    "end": "1961140"
  },
  {
    "text": "What you keep having of the same vertex of this experiment. That's the same vertex. I was always adding it to this vertex number one, which was which was the first name neighbor.",
    "start": "1961140",
    "end": "1970669"
  },
  {
    "text": "Yeah. Oh. How do you talk about the inverse of the inverse. There is no it. Yeah. Yeah. We got a good product retranslate. We'll have an inverse but put a nonrecurring state won't.",
    "start": "1970670",
    "end": "1981259"
  },
  {
    "text": "And that's it. That's important. So I gotta get going. You guys are asking too many good questions, but I have to. But a lot of the questions I can answer by getting onto my next thing,",
    "start": "1981260",
    "end": "1993500"
  },
  {
    "text": "and that is to figure out what are the stakes that would occur infinitely often if we kept that he said at random to Augustus's,",
    "start": "1993500",
    "end": "2001720"
  },
  {
    "text": "not just to the to the first vertex. And that's not that's fewer than the states that would occur if we just add to the add to a particular vertex.",
    "start": "2001720",
    "end": "2011210"
  },
  {
    "text": "OK, now. So the definition that I say is a recurrent state.",
    "start": "2011210",
    "end": "2020620"
  },
  {
    "text": "X and that means that X is equal to sigma of Y where?",
    "start": "2020620",
    "end": "2028520"
  },
  {
    "text": "Where why one? Why is it, you know, has has is a state, which means there's why one grains of sand on the on the um,",
    "start": "2028520",
    "end": "2041810"
  },
  {
    "text": "the first thing and all of these numbers are four or more in my example or knows why Sanjay is greater than or equal to the degree of J.",
    "start": "2041810",
    "end": "2050000"
  },
  {
    "text": "The art degree of J. At every point. So this this means you see that if we if we keep adding enough sand,",
    "start": "2050000",
    "end": "2061370"
  },
  {
    "text": "eventually all of these components are going to are going to get arbitrarily large.",
    "start": "2061370",
    "end": "2067580"
  },
  {
    "text": "And so at some point they're at least going to get as big as as the degree.",
    "start": "2067580",
    "end": "2072590"
  },
  {
    "text": "And as soon as. And. And so for for all of these, you know.",
    "start": "2072590",
    "end": "2078899"
  },
  {
    "text": "So let's just call it a kind of a heavy vertex or a large one. It means that every every vertex has at least dng grains of sand on it, as much sand as as as it will that one.",
    "start": "2078900",
    "end": "2091819"
  },
  {
    "text": "Then we look at all of the stable states that result from those inputs.",
    "start": "2091820",
    "end": "2097810"
  },
  {
    "text": "OK, not so. So certainly there's a finite number of stable states and some of them will occur from big inputs and some of it will never occur from big inputs.",
    "start": "2097810",
    "end": "2110240"
  },
  {
    "text": "So the ones that occur from big inputs, stable states, those are the ones we call recurrent.",
    "start": "2110240",
    "end": "2117750"
  },
  {
    "text": "No, it's sigma y. There is there exists a Y for which Sigma is Sigma's Y and Y is equal to it.",
    "start": "2117750",
    "end": "2130880"
  },
  {
    "text": "Yeah it is. It was a large state. Yeah.",
    "start": "2130880",
    "end": "2136130"
  },
  {
    "text": "That's your definition of good, probably. I don't know. I, I think your definition would have to be true, but I'm not sure it goes one way, but not yet.",
    "start": "2136130",
    "end": "2146840"
  },
  {
    "text": "Maybe not the other. He would be cool and probably cool.",
    "start": "2146840",
    "end": "2158990"
  },
  {
    "text": "Is that something as a stable state or every state?",
    "start": "2158990",
    "end": "2171010"
  },
  {
    "text": "Here's a state that's obviously as big on all vertices that we've set.",
    "start": "2171010",
    "end": "2177150"
  },
  {
    "text": "Yeah, it's not like I know what you're what you're getting at. And that's also in my computer program. So I. So what I for example, like I tried now also looking at what happens if you add to Vertex two and you",
    "start": "2177150",
    "end": "2192960"
  },
  {
    "text": "look at the Cycos that you get there and and three and four and up to eight. And so I took the intersection to something within a cycle, you know, a cycle by adding one.",
    "start": "2192960",
    "end": "2203690"
  },
  {
    "text": "We're fighting to like a memory. And then I had them.",
    "start": "2203690",
    "end": "2208859"
  },
  {
    "text": "I had seventeen thousand instead of twenty five. Twenty six thousand. So. So I still had lots of things that weren't recurrent states.",
    "start": "2208860",
    "end": "2217770"
  },
  {
    "text": "But then. But but the actual condition is this. I got this in this eight vertex graph. The actual condition is this. You can imagine the directed graph that has that has eight colors of arcs and put a red arc.",
    "start": "2217770",
    "end": "2231240"
  },
  {
    "text": "If you if it corresponds to adding sand on vertex one, you know, put a blue arc corresponds to adding center vertex two.",
    "start": "2231240",
    "end": "2238230"
  },
  {
    "text": "And so you have eight colors of arc. So then the the the condition is that you have to have one color over one one arc coming into view of each color from from from a recurrent vertex.",
    "start": "2238230",
    "end": "2251010"
  },
  {
    "text": "And you have to have. And you have to have at least one every everything coming out from you.",
    "start": "2251010",
    "end": "2258260"
  },
  {
    "text": "It's okay if we could form a set that everything coming out stays in the set.",
    "start": "2258260",
    "end": "2265290"
  },
  {
    "text": "And furthermore, everything coming in was in the set as well.",
    "start": "2265290",
    "end": "2272850"
  },
  {
    "text": "Are you know, you had one coming in of each color. It's a complicated thing, but it works.",
    "start": "2272850",
    "end": "2279750"
  },
  {
    "text": "But there's much better. There's a much better way to test for recurrence. Yeah.",
    "start": "2279750",
    "end": "2285780"
  },
  {
    "text": "And so so X is recurrent. If an only if. X equals sigma of X plus T wear a T.",
    "start": "2285780",
    "end": "2298920"
  },
  {
    "text": "She is T is is D minus sigma of D. OK, now D is the D is the state where where everybody has its degree.",
    "start": "2298920",
    "end": "2316119"
  },
  {
    "text": "So it's a D is a state that has everybody has you know, I start out with all fours. That was, that was D so example. D is equal to four for four or not.",
    "start": "2316120",
    "end": "2329730"
  },
  {
    "text": "In my case I voted four four four four four four four four four like this. And Sigma of these was the final state that came out of it was three three, three, two, two, three, two, two.",
    "start": "2329730",
    "end": "2343140"
  },
  {
    "text": "And so T is the difference between them is noticed that Sigma D is always less than D, but every component of T is positive, is strictly positive.",
    "start": "2343140",
    "end": "2353430"
  },
  {
    "text": "And this is one one one two two one, two, two.",
    "start": "2353430",
    "end": "2359190"
  },
  {
    "text": "So in this particular particular case D is the work is it's put four everywhere and sick and that reduces,",
    "start": "2359190",
    "end": "2366839"
  },
  {
    "text": "as we saw to the to the stable pile Sigma D and then we subtract that we get we",
    "start": "2366840",
    "end": "2374010"
  },
  {
    "text": "get something that has got has these components might not want to prove that.",
    "start": "2374010",
    "end": "2379310"
  },
  {
    "text": "I want to prove this result. And you know, if the proof goes to CIC, it's not always nice to prove things in front of an audience and anybody get it.",
    "start": "2379310",
    "end": "2389770"
  },
  {
    "text": "But it is in this it knows and I'm gonna prove a few things and I'm gonna hand wave a few other things.",
    "start": "2389770",
    "end": "2396870"
  },
  {
    "text": "But here's the thing. So, so, so I got to prove both ways. So if X is equal to Sigma of X plus T, you will then it's certainly a stable state because it's a stable state.",
    "start": "2396870",
    "end": "2409700"
  },
  {
    "text": "You know, if Sigma Sigma is always of something, is a stable state, then also then X is also equal to Sigma of X plus Katie for any multiple of of T.",
    "start": "2409700",
    "end": "2424530"
  },
  {
    "text": "I mean I add T and I reduce in and I add T again and I keep keep reducing.",
    "start": "2424530",
    "end": "2429780"
  },
  {
    "text": "OK. So there we go. Now are all components of T are positive though.",
    "start": "2429780",
    "end": "2435140"
  },
  {
    "text": "And so I can make cake, you know, big enough so that this is the vector Y that I needed.",
    "start": "2435140",
    "end": "2440309"
  },
  {
    "text": "OK. So that's good. Now, conversely, if X equals D plus Y.",
    "start": "2440310",
    "end": "2449990"
  },
  {
    "text": "Oh, sorry, sigma R, X equals sigma of Y of little.",
    "start": "2449990",
    "end": "2457540"
  },
  {
    "text": "Let me write it. Sigma D plus Y where we're all components of Y are not negative.",
    "start": "2457540",
    "end": "2465020"
  },
  {
    "text": "OK, so if, if X is Sigma V plus Y that's a recurrent state then D plus plus Y plus T topples two X plus T.",
    "start": "2465020",
    "end": "2478640"
  },
  {
    "text": "Because we know that D plus Y topples to X and I can leave these pieces in there.",
    "start": "2478640",
    "end": "2484279"
  },
  {
    "text": "But also Topo's WHO Sigma of the.",
    "start": "2484280",
    "end": "2489300"
  },
  {
    "text": "Plus, why, plus two, because I know D. Top of Sigma V.",
    "start": "2489300",
    "end": "2494910"
  },
  {
    "text": "But this is equal to. Plus, why?",
    "start": "2494910",
    "end": "2502220"
  },
  {
    "text": "And so, therefore, Sigma of X plus T has to equal Sigma D plus line.",
    "start": "2502220",
    "end": "2511770"
  },
  {
    "text": "You can keep toppling even until the limit states that these are equal. And that's what I wanted to prove because this is a I'm sorry, this is a this is X Sigma of X 50 as equal X.",
    "start": "2511770",
    "end": "2524940"
  },
  {
    "text": "Right. So right now, proof both was way to this thing. So so this is a nice one test characterization of recurrent state.",
    "start": "2524940",
    "end": "2534510"
  },
  {
    "text": "And and now comes the mind boggling theorem says that the number of recurrence dates.",
    "start": "2534510",
    "end": "2544070"
  },
  {
    "text": "And anybody want to guess number of recurse dates.",
    "start": "2544070",
    "end": "2549980"
  },
  {
    "text": "Is. A number of oriented, spanning trees rooted at zero.",
    "start": "2549980",
    "end": "2560350"
  },
  {
    "text": "Let's just say number of spang trees in the case of the graph that the graph, an ordinary graph where we don't have a direct address.",
    "start": "2560350",
    "end": "2568430"
  },
  {
    "text": "But in general, this number of oriented spang trees with me with lude zero.",
    "start": "2568430",
    "end": "2574150"
  },
  {
    "text": "OK. Now that is the beautiful connection because you see mathematics and mathematics goes goes",
    "start": "2574150",
    "end": "2584960"
  },
  {
    "text": "ahead by showing that two things that seem that are a completely different ways actually are,",
    "start": "2584960",
    "end": "2592160"
  },
  {
    "text": "you know, are in some sense the same, that there's a correspondence between between X and Y where X and Y are defined completely different intuitions.",
    "start": "2592160",
    "end": "2602119"
  },
  {
    "text": "And so now this is this this is the first theorem that we know that the DA actually observed.",
    "start": "2602120",
    "end": "2613600"
  },
  {
    "text": "The physicist. And well, the proof is actually there is the proof that he gave was algebraic and just just showed that there's the same number.",
    "start": "2613600",
    "end": "2627380"
  },
  {
    "text": "And I'll show you how it works. But I won't go through the details except to wave my hands. But what you what we do is we we we look at the so called the plussing matrix of the of the graph.",
    "start": "2627380",
    "end": "2641410"
  },
  {
    "text": "And let's take. Let me let let me show up, show what the impossible matrix looks like in the three by three tours.",
    "start": "2641410",
    "end": "2649430"
  },
  {
    "text": "So the plasma matrix is a grid is it is a matrix where we have one row and column for every vertex of the graph.",
    "start": "2649430",
    "end": "2658609"
  },
  {
    "text": "And then in the diagonal, we put the degree.",
    "start": "2658610",
    "end": "2666270"
  },
  {
    "text": "And it's for everybody has has to degree for in his grand.",
    "start": "2666270",
    "end": "2672900"
  },
  {
    "text": "Three, four, five, six, seven, eight. And then we put minus if it's if it's a Jason so zero is a case in two, one, two, three and six.",
    "start": "2672900",
    "end": "2682529"
  },
  {
    "text": "I could write minus one, but I don't have room. And then zero zero zero is everywhere else here.",
    "start": "2682530",
    "end": "2689700"
  },
  {
    "text": "So Vertex one was adjacent to zero and two and two. Four and four seven. And this one was like, this is good.",
    "start": "2689700",
    "end": "2700950"
  },
  {
    "text": "Minus zero zero four minus. Minus. It looks like this in his Guinness Taurus, I'm sure, minus zero.",
    "start": "2700950",
    "end": "2710599"
  },
  {
    "text": "This will be zero zero minus two below zero. This is just up the stairs for two dimensional structure. Is a sign of a chronic product type of thing.",
    "start": "2710600",
    "end": "2722400"
  },
  {
    "text": "A minus minus here, minus zero zero zero minus. OK. This is the pricing of that guy out of the cast.",
    "start": "2722400",
    "end": "2735270"
  },
  {
    "text": "And the well-known Matrix Tree Theorem says that the determinant of of the if if you toss out row zero in column zero and take a determinant,",
    "start": "2735270",
    "end": "2747840"
  },
  {
    "text": "you get the number of standing trees. And similarly for Orien, its branches are also worth the very and its branches of any thing.",
    "start": "2747840",
    "end": "2755430"
  },
  {
    "text": "Now, that's a theory that has lots and lots of practical applications now.",
    "start": "2755430",
    "end": "2761970"
  },
  {
    "text": "But you see this there. You can also think of these vectors of this matrix here as far as what happens under toppling, because every time I'm toppling, I'm subtracting.",
    "start": "2761970",
    "end": "2774320"
  },
  {
    "text": "Like, if I'm toppling a vertex one, I'm subtracting this just a vector from the state.",
    "start": "2774320",
    "end": "2780750"
  },
  {
    "text": "I'm subtracting four four four four four grains of sand here. And I'm adding one grain at a two, four and seven. All right.",
    "start": "2780750",
    "end": "2788339"
  },
  {
    "text": "So. So. So in other words, toppling, you know.",
    "start": "2788340",
    "end": "2793460"
  },
  {
    "text": "Hoplin. At Vertex I.",
    "start": "2793460",
    "end": "2801750"
  },
  {
    "text": "Says that X is being replaced by X minus a Sambi, where a surveyor's the eyes roll here.",
    "start": "2801750",
    "end": "2810060"
  },
  {
    "text": "And so what's happening is then that's I'm I'm looking for the the, um, the number of of vertices that I can get that have on.",
    "start": "2810060",
    "end": "2833350"
  },
  {
    "text": "They have all our companies, less than four. But I say.",
    "start": "2833350",
    "end": "2839420"
  },
  {
    "text": "But toppling preserves is so short. So let me say that X is equivalent to Y if if X minus Y is equal to, you know, some linear combination of the C one,",
    "start": "2839420",
    "end": "2851359"
  },
  {
    "text": "A one plus BNA and effects minus Y is some linear combination of these rows then with so that those that those states are are equivalent.",
    "start": "2851360",
    "end": "2861310"
  },
  {
    "text": "Yeah. A positive, no, not in this definition of equivalence.",
    "start": "2861310",
    "end": "2867710"
  },
  {
    "text": "OK. So now I'm still not done with it. With lipstick, with the theorem. But the. But the but. But I do know that the number of equivalence classes is the determinant of this thing.",
    "start": "2867710",
    "end": "2878690"
  },
  {
    "text": "That's linear algebra. We can we can take this matrix. We can use RO operations and and triangular eyes so that we have all the entries on the diagonal.",
    "start": "2878690",
    "end": "2887060"
  },
  {
    "text": "Ah ah ah. Integers. And then the determinant. And we get the determinant. In fact, that they stay positive. This is a tiny, dominant matrix.",
    "start": "2887060",
    "end": "2895800"
  },
  {
    "text": "So. So we get that. We can prove that the determinates the number of equivalence classes that we want",
    "start": "2895800",
    "end": "2901970"
  },
  {
    "text": "to show is that every equivalence class contains exactly one recurrent state.",
    "start": "2901970",
    "end": "2907070"
  },
  {
    "text": "And then the number of recurrent states equals the number of equivalence classes. Okay.",
    "start": "2907070",
    "end": "2912680"
  },
  {
    "text": "So. So then the next thing is every cookie, every vertex.",
    "start": "2912680",
    "end": "2922130"
  },
  {
    "text": "Is equivalent to OK, is equivalent to a recurrent vertex, is equivalent to some recurrent vertex.",
    "start": "2922130",
    "end": "2933730"
  },
  {
    "text": "O o re. Current and state. All right, Tom.",
    "start": "2933730",
    "end": "2940990"
  },
  {
    "text": "All right. Well, the idea is that, Tom. Well, because I can tranquilizers this this matrix is going to turn out that X is equivalent to X plus N times.",
    "start": "2940990",
    "end": "2957100"
  },
  {
    "text": "B for some vector. Because on.",
    "start": "2957100",
    "end": "2964880"
  },
  {
    "text": "And is the determinant of the matrix. So in terms of the matrix, so I will be able to tranquilize this thing and then I can show that the event is the determinant.",
    "start": "2964880",
    "end": "2977030"
  },
  {
    "text": "Each one of the entries on the diagonals is a divisor event. And so and so I can be sure that this is true for for an arbitrary Vertex V, for our arbitrary V.",
    "start": "2977030",
    "end": "2988820"
  },
  {
    "text": "I can add and I can add N zero zero to X and still EQ. I can have zero.",
    "start": "2988820",
    "end": "2996110"
  },
  {
    "text": "And all of these things are equal. So every class contains a recurrent state.",
    "start": "2996110",
    "end": "3003100"
  },
  {
    "text": "And then the other thing is to show that you can't have two recurrent states that are equivalent to each other.",
    "start": "3003100",
    "end": "3011560"
  },
  {
    "text": "And that's another proof that I that that we that that uses topics that uses toppling in a beautiful way.",
    "start": "3011560",
    "end": "3019160"
  },
  {
    "text": "Solent. Let me mention it. So suppose suppose X. Is equivalent to X prime. And both are recurrent. Fates.",
    "start": "3019160",
    "end": "3031900"
  },
  {
    "text": "OK, then what? That means that X plus M one, a one plus and an end is equal to X. Prime plus a prime X or M1 prime.",
    "start": "3031900",
    "end": "3044890"
  },
  {
    "text": "A one M in prime. And for some non-negative.",
    "start": "3044890",
    "end": "3050799"
  },
  {
    "text": "Ms. This is rich. This is the question that you raised, because I can put it like I can put the negative ones on one side and then put the opposite on the other side.",
    "start": "3050800",
    "end": "3061390"
  },
  {
    "text": "OK, and say this is equal to Y, for example. Now if so, so now X sorry, Y plus Katie, this T is this special special number that I talked about before.",
    "start": "3061390",
    "end": "3077110"
  },
  {
    "text": "Why. Plus Katie for large large K is going to topple.",
    "start": "3077110",
    "end": "3086630"
  },
  {
    "text": "Down to X plus Katy in M m one plus two plus M n steps,",
    "start": "3086630",
    "end": "3096259"
  },
  {
    "text": "because this vertex has so many things I think we're going to be able to keep on removing a one.",
    "start": "3096260",
    "end": "3104860"
  },
  {
    "text": "It may times we want to we're never gonna get to the negative because K is so large that we've made all the components huge.",
    "start": "3104860",
    "end": "3112680"
  },
  {
    "text": "So so when I first topple at Vertex one and one times in a couple of graphics, two M two times.",
    "start": "3112680",
    "end": "3119980"
  },
  {
    "text": "So when I finally get down to explicit Katie from from wireless Katie and on the other",
    "start": "3119980",
    "end": "3126020"
  },
  {
    "text": "hand it also topples two ex prime plus Katie in M1 prime plus I'm in prime step.",
    "start": "3126020",
    "end": "3133640"
  },
  {
    "text": "And so now therefore therefore Sigma X plus Katie equals sigma of X prime plus Katie.",
    "start": "3133640",
    "end": "3144859"
  },
  {
    "text": "And this was equal to X and this is equal to expression bias by assumption. So OK, I prove that, I prove this and and if it is too fast for you you can always look it up.",
    "start": "3144860",
    "end": "3155190"
  },
  {
    "text": "So that's it. Now, now this shows then by this by this long thing that the number of recurrence dates exactly corresponds to the number.",
    "start": "3155190",
    "end": "3164000"
  },
  {
    "text": "Tresa. Orange tree correspond, exactly, exactly, isn't that the question network that you would like to have answered?",
    "start": "3164000",
    "end": "3174080"
  },
  {
    "text": "And so, in fact, some people did find a find such a thing, and I believe the first one were the first people was OK.",
    "start": "3174080",
    "end": "3184670"
  },
  {
    "text": "It was. Somebody named Marina Lopez in a condo approved in the annals of combinatorics in 1997.",
    "start": "3184670",
    "end": "3196559"
  },
  {
    "text": "That this that there was a. That there was a.",
    "start": "3196560",
    "end": "3203650"
  },
  {
    "text": "No, I'm sorry. It wasn't a one to one correspondence explicit.",
    "start": "3203650",
    "end": "3210160"
  },
  {
    "text": "Explicit. One to one correspondence was found by somebody. But it wasn't very. But it was real complicated and it wasn't. And it didn't have the property, but the properties that people wanted so far.",
    "start": "3210160",
    "end": "3225820"
  },
  {
    "text": "However, last year this paper was published Lou.",
    "start": "3225820",
    "end": "3233060"
  },
  {
    "text": "Brian, can you get. Yeah. You found it here. Good for you. So the Sandfire model and Tuck polynomials sits in advances in applied mathematics.",
    "start": "3233060",
    "end": "3241790"
  },
  {
    "text": "By Robert Baer Quarrie. He's the one who wrote the first paper about showing the tying it in nicely with with graphs.",
    "start": "3241790",
    "end": "3251210"
  },
  {
    "text": "And one of his colleagues said in Bordeaux, and it's it's curious that that he happened to be looking at the at the Internet at my home page a day after I announced this this this lecture.",
    "start": "3251210",
    "end": "3266990"
  },
  {
    "text": "He said, Don, did you know that I have this may say one to one correspondence about sand piles and.",
    "start": "3266990",
    "end": "3272840"
  },
  {
    "text": "And I said, how on earth did you know this? Fine, fine. I just I just put I just put a couple of sentences on my Web site.",
    "start": "3272840",
    "end": "3281420"
  },
  {
    "text": "And he said, well, just serendipity. So they're so sure.",
    "start": "3281420",
    "end": "3287240"
  },
  {
    "text": "I learned about this paper and. And in fact, it's I I've got another way to present his his his correspondence, which with which I think is is is great.",
    "start": "3287240",
    "end": "3300740"
  },
  {
    "text": "And I want to show it to you. I think it's really interesting. So here's that.",
    "start": "3300740",
    "end": "3305750"
  },
  {
    "text": "That's the question is that we would like to say here's a recurrent state, what, spanning three, does it correspond to and end and very satisfactory.",
    "start": "3305750",
    "end": "3316040"
  },
  {
    "text": "Let's keep looking. Give me a recurrent state giving me. Give me the recurrent state so that I could do.",
    "start": "3316040",
    "end": "3321380"
  },
  {
    "text": "And the reason is that, as I said, in mathematics, we like to have correspondences between things in one domain and things in another domain.",
    "start": "3321380",
    "end": "3332250"
  },
  {
    "text": "Now, already in Corey's original paper, he he he showed this for for some special cases, for example, the complete graph.",
    "start": "3332250",
    "end": "3342950"
  },
  {
    "text": "He showed that the number of Spanish using the complete graph is known to be. And according to this notation, it's, you know, N minus one to the end plus one.",
    "start": "3342950",
    "end": "3355640"
  },
  {
    "text": "If there are and plus one Bercy. And and he found that he found that it was easy to to get a correspondence between every recurrent state in the complete graph.",
    "start": "3355640",
    "end": "3371150"
  },
  {
    "text": "And what we call parking sequences which arise in the theory of hashing.",
    "start": "3371150",
    "end": "3376460"
  },
  {
    "text": "And it was known that the number of parking sequences was equal to the number of trees. And there's another correspondence that takes parking sequences into spanning three.",
    "start": "3376460",
    "end": "3384300"
  },
  {
    "text": "Well, you also took cases like like like wheels. If people studied concrete mathematics, we have a section.",
    "start": "3384300",
    "end": "3394070"
  },
  {
    "text": "They talk about the spanning trees of fans and Fibonacci numbers come up in there and then. And the number Spanky's relate to Fibonacci numbers.",
    "start": "3394070",
    "end": "3401970"
  },
  {
    "text": "And he had a few Bachu like construction that corresponded to that that showed how he also got the recurrent thing.",
    "start": "3401970",
    "end": "3410000"
  },
  {
    "text": "But it was it was complicated. Now we've got this beautiful move, a fairly new construction.",
    "start": "3410000",
    "end": "3417170"
  },
  {
    "text": "And I want to present that in the next few minutes. OK. We haven't got too much time, but. So I was going to ask for the audience to suggest this spang three.",
    "start": "3417170",
    "end": "3426770"
  },
  {
    "text": "But now I'm going to give you a can spending three in advance. So let's take this. Let's take a three by three tourist and. And I want to take us to an example of a spanning tree on it.",
    "start": "3426770",
    "end": "3439930"
  },
  {
    "text": "But I don't want it to be obvious. Spanning three. I wanted to show you to show some of what goes on.",
    "start": "3439930",
    "end": "3446540"
  },
  {
    "text": "So I thought, I'm going to say that you remember that, that this wraps around.",
    "start": "3446540",
    "end": "3457190"
  },
  {
    "text": "So I'm going to have an arc going from this guy up to here.",
    "start": "3457190",
    "end": "3463400"
  },
  {
    "text": "So that's one connection from Vertex zero and also one coming down to three. Now, I know from from this guy, I'm going to go over here and come in this way, and that's going to get over to Vertex eight over here.",
    "start": "3463400",
    "end": "3476240"
  },
  {
    "text": "Let's put the numbers on here again, zero one, two, three, four, five, six, seven, eight.",
    "start": "3476240",
    "end": "3481560"
  },
  {
    "text": "And I have the numbers. And it's getting very dull. And I can continue. And then from 8:00. Let's go up to five and five can get over to four to seven and down to one and five, maybe up to two.",
    "start": "3481560",
    "end": "3498660"
  },
  {
    "text": "So this is a this is one spanning three. On the on the graph, it has eight arcs.",
    "start": "3498660",
    "end": "3507420"
  },
  {
    "text": "And if we can get from zero to anywhere. And but it but if we if we want to draw it like this, you know, imagine that the that the tourist is a tile.",
    "start": "3507420",
    "end": "3522890"
  },
  {
    "text": "And you can repeat it. And then this. And we are actually getting the spanning three. Looks like this. Except that except that we're clear we're getting different pieces of it are on the same tile with me.",
    "start": "3522890",
    "end": "3537270"
  },
  {
    "text": "But anyway, that's a spanning tree. And I wanted to take one that was that was not. No, not too obvious. So we can see that we have a talk. Now, the question is to to return state that corresponds to this Bantry and Dot dot.",
    "start": "3537270",
    "end": "3551580"
  },
  {
    "text": "So here's the algorithm. Watch out there. I'm going to just play through the algorithm. And this should give the intuition. So. So I list all the arcs of the graph.",
    "start": "3551580",
    "end": "3562380"
  },
  {
    "text": "First thing know, zero one zero two zero three zero six. Then there's one goes to zero and two one four one seven two.",
    "start": "3562380",
    "end": "3573539"
  },
  {
    "text": "I'm going to have to list these all unfortunately, two zero two one two five two eight three.",
    "start": "3573540",
    "end": "3581340"
  },
  {
    "text": "Close to zero three. Goes two or three. Close to five. Three goes to six. Four. Has four things.",
    "start": "3581340",
    "end": "3589589"
  },
  {
    "text": "Five, six, seven, eight. To try to try to go fast.",
    "start": "3589590",
    "end": "3596250"
  },
  {
    "text": "But I won't make a foregoes. Two, three. One three. Five and seven. Five. Goes two to three.",
    "start": "3596250",
    "end": "3609760"
  },
  {
    "text": "Four eight six, close to three zero three seven and eight stone goes to one or six and eight and finally eight goes two to five and six and seven.",
    "start": "3609760",
    "end": "3631050"
  },
  {
    "text": "OK, Melissa, among. In general, you have a directed graph.",
    "start": "3631050",
    "end": "3637070"
  },
  {
    "text": "This thing isn't going to work exactly as it does for four undirected graphs.",
    "start": "3637070",
    "end": "3643400"
  },
  {
    "text": "But we still want to list all the all the arcs in some order now.",
    "start": "3643400",
    "end": "3652549"
  },
  {
    "text": "So that's how I start out. And I and I ask about the spanning tree.",
    "start": "3652550",
    "end": "3662380"
  },
  {
    "text": "So you have a big branching process going here. And the first class question is, does it go?",
    "start": "3662380",
    "end": "3668779"
  },
  {
    "text": "And I have a working set of vertices that I've that I've sort of done with.",
    "start": "3668780",
    "end": "3676040"
  },
  {
    "text": "Initially, the work he said, is just zero. So so I look at a an hour from from one of the vertices that I've already covered to two another one.",
    "start": "3676040",
    "end": "3689450"
  },
  {
    "text": "And I take the smallest such arc. So these are all of all these arcs are listed in complex, graphic order here.",
    "start": "3689450",
    "end": "3696859"
  },
  {
    "text": "So let's take the smallest, in fact.",
    "start": "3696860",
    "end": "3703340"
  },
  {
    "text": "Like, these could be waves. And then then we would. It turns out it does get the release of the minimum spanning tree.",
    "start": "3703340",
    "end": "3710720"
  },
  {
    "text": "If we took this if we took the arcs in order way. But I'm going I'm going to use Lexcen recording here. So for this order, I ask the question is zero one in the spatting tree.",
    "start": "3710720",
    "end": "3722839"
  },
  {
    "text": "And the answer is no. Now, I'm in my diagram here.",
    "start": "3722840",
    "end": "3729860"
  },
  {
    "text": "I'm gonna go to the right. If the answer is no. And to the left if the answer is yes.",
    "start": "3729860",
    "end": "3736670"
  },
  {
    "text": "And if it's not, that means then that I'm not dealing with this out.",
    "start": "3736670",
    "end": "3741920"
  },
  {
    "text": "Now, the next question then, what's the next one?",
    "start": "3741920",
    "end": "3747000"
  },
  {
    "text": "Zero two zero two in this factory. That's not in there either. So, again, the answer is no. But zero three in 03 and sanctuary and the answer is yes.",
    "start": "3747000",
    "end": "3758090"
  },
  {
    "text": "So now what I'm gonna do is I'm gonna set X, but I'm not going to write the wise names anymore.",
    "start": "3758090",
    "end": "3765050"
  },
  {
    "text": "I'm going to set X three, two, three.",
    "start": "3765050",
    "end": "3770060"
  },
  {
    "text": "And this is gonna be my recurrent state. I'm gonna be building it up here and I'm gonna put a three in this position.",
    "start": "3770060",
    "end": "3778360"
  },
  {
    "text": "Now, why did they put a three there? Well. Because three is now a known vertex originally only zero is not was known and there are still.",
    "start": "3778360",
    "end": "3791070"
  },
  {
    "text": "OK. Zero three. By the way, I have to cross out zero three. There are still three things coming out of. Of it.",
    "start": "3791070",
    "end": "3799830"
  },
  {
    "text": "And that's that's where I get the number three. When I when I add a new vertex to my set, I'm going to see how many things haven't been crossed off and it's just coming out of it.",
    "start": "3799830",
    "end": "3808350"
  },
  {
    "text": "And that's going to be the value that I sign here. So you watch the what we play for the algorithm and you pretty soon you'll see what's going on.",
    "start": "3808350",
    "end": "3815910"
  },
  {
    "text": "So my next question is take of all the. I have known vertices zero and three and the things coming out of them, the arcs coming out.",
    "start": "3815910",
    "end": "3827270"
  },
  {
    "text": "The smallest one is zero. Six. Yeah. Two zero.",
    "start": "3827270",
    "end": "3834150"
  },
  {
    "text": "Exactly. Very good. And three zero. Yeah. I got to cross off every time I cross up one guy off the class up.",
    "start": "3834150",
    "end": "3840450"
  },
  {
    "text": "Quite so. Zero six zero six. Part of my tree. The answer. Yes. OK. So zero six is is part of the tree.",
    "start": "3840450",
    "end": "3848160"
  },
  {
    "text": "So that means I'm going to set exec's. And forget the quick knockout. There's going to be a question mark here.",
    "start": "3848160",
    "end": "3854390"
  },
  {
    "text": "But I don't have time to write the question I saw on this ad execs to the number of things left to tech execs.",
    "start": "3854390",
    "end": "3860000"
  },
  {
    "text": "Also get such a three year. OK, now from zero three and six meeting two other vertices, what have I got?",
    "start": "3860000",
    "end": "3871160"
  },
  {
    "text": "Three, four is the next. Next guy to ask about. So three, four is three, four in the three.",
    "start": "3871160",
    "end": "3877250"
  },
  {
    "text": "No. Before he's not there to cross it off for three goes away.",
    "start": "3877250",
    "end": "3885570"
  },
  {
    "text": "What if what's next. Three five three five isn't there either.",
    "start": "3885570",
    "end": "3892970"
  },
  {
    "text": "So it goes out. Next is a three six.",
    "start": "3892970",
    "end": "3902900"
  },
  {
    "text": "Three, six. OK. What did you find?",
    "start": "3902900",
    "end": "3908130"
  },
  {
    "text": "Two. That's a new phenomenon. Three six is not to a new new vertex. That's true. And neither is six three. So really, I'm asking for six seven here.",
    "start": "3908130",
    "end": "3918280"
  },
  {
    "text": "It just. But yeah, I thought this isn't too new.",
    "start": "3918280",
    "end": "3924290"
  },
  {
    "text": "This doesn't go to new guidance. That's a good point. So six, seven is the one that I ask about.",
    "start": "3924290",
    "end": "3929450"
  },
  {
    "text": "And again, six, seven is not there. What's next. Six, eight. And six, eight, is it is there, so I said X eight.",
    "start": "3929450",
    "end": "3941490"
  },
  {
    "text": "OK, so six, seven, I had to cross out six, seven, six. I had to cross out three, five and five three. I hope I'm doing this right.",
    "start": "3941490",
    "end": "3949500"
  },
  {
    "text": "X eight is now being set to three safari's.",
    "start": "3949500",
    "end": "3959930"
  },
  {
    "text": "OK. Eight two is the next thing.",
    "start": "3959930",
    "end": "3967010"
  },
  {
    "text": "And the answer is no. So a two and two eight aren't there.",
    "start": "3967010",
    "end": "3974630"
  },
  {
    "text": "Because six, eight, all right. Wasn't meaning to a new vertex, you see. So six, eight. Well, a guy is the next question to ask an X eight five gets a positive answer.",
    "start": "3974630",
    "end": "3992480"
  },
  {
    "text": "And I'm at the bottom of my feet here, but X five is going to be set.",
    "start": "3992480",
    "end": "3997820"
  },
  {
    "text": "Now, two to. So I'll put it to here.",
    "start": "3997820",
    "end": "4008990"
  },
  {
    "text": "And it will continue in this way. And yet the things that you're raining down on the Latin.",
    "start": "4008990",
    "end": "4019800"
  },
  {
    "text": "You're processing them in a queue. Order. Leave this here.",
    "start": "4019800",
    "end": "4025050"
  },
  {
    "text": "This is my non vertices, then I'm looking. So I've got sort of known vertices. And then then these are these are leaking out to unknown vertices.",
    "start": "4025050",
    "end": "4034529"
  },
  {
    "text": "All the arcs that go from known to unknown. I'm choosing always the smallest.",
    "start": "4034530",
    "end": "4042420"
  },
  {
    "text": "OK, so you've done it by hand, but I think I think I'm choosing the smallest.",
    "start": "4042420",
    "end": "4048170"
  },
  {
    "text": "I have some somebody told me an ordering of the arts and in fact, any ordering is going to work.",
    "start": "4048170",
    "end": "4054200"
  },
  {
    "text": "I chose here alphabetic ordering, but any ordering would work. But I have some ordering and which makes this a deterministic promise me, earlier in the year what you gave me earlier in your order.",
    "start": "4054200",
    "end": "4066349"
  },
  {
    "text": "When you say small this, I mean that a bonding arts that are coming here.",
    "start": "4066350",
    "end": "4071540"
  },
  {
    "text": "There there's some. The one that's earliest in the order. Yes. Yes. But if are ark were always in some way, it would be the one that leastways.",
    "start": "4071540",
    "end": "4081190"
  },
  {
    "text": "Or the greatest weight. Whichever way you want to say so at this point, when you have protests, when you add some vertex to that list,",
    "start": "4081190",
    "end": "4095180"
  },
  {
    "text": "there are pictures that are coming out of the protests that are lower in the order. You immediately start considering those. Yes, indeed.",
    "start": "4095180",
    "end": "4104750"
  },
  {
    "text": "That's all that happens actually, after 5:00 here. I start checking five two and then I check two one and it turns out.",
    "start": "4104750",
    "end": "4113750"
  },
  {
    "text": "So I won't I won't continue with five after I have to bring five into. I'm going to try. I won't ask for two one before I look for all the five.",
    "start": "4113750",
    "end": "4121250"
  },
  {
    "text": "So you're sitting on the vertices, complete a correspondence between Spanish reason and recurrent states.",
    "start": "4121250",
    "end": "4129630"
  },
  {
    "text": "Say that again. I mean, very possible ordering that you can have on the edges. Yes. Is a. He will give me a one to one correspondence with current states.",
    "start": "4129630",
    "end": "4141350"
  },
  {
    "text": "And so Sova is. So I'm not getting only one window in correspondence, I'm getting one for every every ordering of the ages, which means,",
    "start": "4141350",
    "end": "4149420"
  },
  {
    "text": "for example, for every weighting of the of the hedges are like look like can I mean, I'm spending three Eigg rhythm.",
    "start": "4149420",
    "end": "4155900"
  },
  {
    "text": "We always choose the first edge that comes out.",
    "start": "4155900",
    "end": "4161290"
  },
  {
    "text": "So if if I if I had the minimum spatting three and if my edges were ordered by my weight, then I would always take the French deficit down.",
    "start": "4161290",
    "end": "4174150"
  },
  {
    "text": "And that was the help from us to wine was actually good directed draft. Let me bring up later because the direct graph is complicated. OK.",
    "start": "4174150",
    "end": "4184250"
  },
  {
    "text": "So I haven't kind of play out the whole, the whole thing. If you if you do it yourself, you, you would you would find out that the that that you that you fill in X five equals two and then you fill in X two equals one and then X four is two,",
    "start": "4184250",
    "end": "4202370"
  },
  {
    "text": "x seven is two and finally X one is set to zero. And this turns out to be a recurrent state that corresponds to this grand jury that I gave.",
    "start": "4202370",
    "end": "4212240"
  },
  {
    "text": "Now another theorem which I will state that I won't prove in a graph, in a balanced directed graph, or in particular in particular.",
    "start": "4212240",
    "end": "4232760"
  },
  {
    "text": "This means that in degree. And what degree are the same at Elberta? So in particular, for an undirected graph, it's always balanced.",
    "start": "4232760",
    "end": "4239690"
  },
  {
    "text": "Then X is recurrent. If and only if X equals sigma of X plus eight.",
    "start": "4239690",
    "end": "4249160"
  },
  {
    "text": "Where A is equal to the. The neighbors of out of a V zero.",
    "start": "4249160",
    "end": "4260470"
  },
  {
    "text": "In the in the Matrix that I wrote down here is is the negative of this or this.",
    "start": "4260470",
    "end": "4267400"
  },
  {
    "text": "Panopto here. So. So in my case, it's the neighbors of V0. This is a. So so not only is it for X Sigma of X plus T, where he was this fairly large thing with lots and lots of piles of come from.",
    "start": "4267400",
    "end": "4283750"
  },
  {
    "text": "It's also calls for X, X plus A and. Well, the reason is basically that A is equal to a one plus a two plus N.",
    "start": "4283750",
    "end": "4294210"
  },
  {
    "text": "Because they determined that because of the way the form of this matrix, you add up all the rows you get zero of.",
    "start": "4294210",
    "end": "4301650"
  },
  {
    "text": "And so this. So. So some of these guys is that is a negative on the top of the top row.",
    "start": "4301650",
    "end": "4308310"
  },
  {
    "text": "And so you're so adding zero to that. And now the proof in the literature was or was faulty, this theorem.",
    "start": "4308310",
    "end": "4317920"
  },
  {
    "text": "And so I wrote to e-mail two to Coria on Saturday and he confirmed, you know, and showed in my five line proof.",
    "start": "4317920",
    "end": "4327060"
  },
  {
    "text": "That's in them. That's in the hand out here. I mean, in the in the in the book. And he said he agreed that there was a bug in his paper and that he can't think of any shorter proof right now of this.",
    "start": "4327060",
    "end": "4337659"
  },
  {
    "text": "But it's true. So. So now if I have a recurrent sequence, then take for example.",
    "start": "4337660",
    "end": "4348370"
  },
  {
    "text": "OK. If I if if I have a return state now, I want to find the corresponding spanning tree.",
    "start": "4348370",
    "end": "4354750"
  },
  {
    "text": "And what I do is I ask the first, I ask if X1 is equal to three.",
    "start": "4354750",
    "end": "4363480"
  },
  {
    "text": "My first question. And the answer will be yes or no.",
    "start": "4363480",
    "end": "4370290"
  },
  {
    "text": "And and the point is this is going to correspond exactly to my previous to my previous method.",
    "start": "4370290",
    "end": "4381690"
  },
  {
    "text": "Because my first question this one is, is the R is 01 an edge of the spanning tree?",
    "start": "4381690",
    "end": "4390660"
  },
  {
    "text": "And and and the answer was no. So that meant that next time around I would ask, was something coming into one?",
    "start": "4390660",
    "end": "4398880"
  },
  {
    "text": "One was not going to have three guys left. So. So. So if x1. If I take this.",
    "start": "4398880",
    "end": "4407520"
  },
  {
    "text": "If it took the left branch I was going to say x1 equal to three. But if but if I took the right branch somewhere along the line, X1 is going to be set and it's going to end the next time.",
    "start": "4407520",
    "end": "4417360"
  },
  {
    "text": "Excellent. To have a chance to be said is going to be to the next time. It's gonna be one of the next gen is going to be zero. So I'm going to branch say is x1 equal to three and the answer is no.",
    "start": "4417360",
    "end": "4427480"
  },
  {
    "text": "And I'm going to ask is X two equal to three. And again, the answer is no.",
    "start": "4427480",
    "end": "4433380"
  },
  {
    "text": "X three, equal three. And here the answer is, is yes.",
    "start": "4433380",
    "end": "4439690"
  },
  {
    "text": "And so at this point I'll say, oh zero three was in the was in this Bantry.",
    "start": "4439690",
    "end": "4446600"
  },
  {
    "text": "And, um. And if I add if I add this vector eight now so add, add the vector zero,",
    "start": "4446600",
    "end": "4460750"
  },
  {
    "text": "add the vector eight to it and you get two one two four two two four two three.",
    "start": "4460750",
    "end": "4472960"
  },
  {
    "text": "And then there are all topolice for.",
    "start": "4472960",
    "end": "4478360"
  },
  {
    "text": "And so this will now topple. And we'll get one, two, three, three, five, two, three and zero here.",
    "start": "4478360",
    "end": "4490510"
  },
  {
    "text": "And my next question is going to be execs is execs equals.",
    "start": "4490510",
    "end": "4498840"
  },
  {
    "text": "All right, three. And the answer is yes. So I put zero six in the in the thing and I'll topple Ed Vertex six.",
    "start": "4498840",
    "end": "4516719"
  },
  {
    "text": "Three, four. And what's going to happen is, is that the the algorithm asking about asking about the values of these recurrent things is going to exactly parallel the algorithm vector computer,",
    "start": "4516720",
    "end": "4535890"
  },
  {
    "text": "because I'll be able to reconstruct the three that I had. And you have to play with this by yourself.",
    "start": "4535890",
    "end": "4542730"
  },
  {
    "text": "But it's but it's it's very beautiful the way off. It's together. So so this gives us this gives it a very nice, intuitive correspondence.",
    "start": "4542730",
    "end": "4553980"
  },
  {
    "text": "You know, we can we can psych out the way through. It's working. We can see that that looks like a lot of graph algorithms that we play with on Spanky's all the time,",
    "start": "4553980",
    "end": "4562650"
  },
  {
    "text": "because a lot of Sankari algorithms, you know, you start from known vertices and then you look at the arcs to the other ones.",
    "start": "4562650",
    "end": "4570150"
  },
  {
    "text": "And as I'm going through here, I can figure out what are the known vertices. And I can then that bend.",
    "start": "4570150",
    "end": "4576090"
  },
  {
    "text": "And if the next arc that I'm going to ask about in this park was six to seven, in this case, I'll say it is X seven equals.",
    "start": "4576090",
    "end": "4584639"
  },
  {
    "text": "And then I just take the next lower number that I haven't ruled out before in previous branches.",
    "start": "4584640",
    "end": "4591600"
  },
  {
    "text": "And that will be the Converse algorithm. And get me back to starting to set correspondence to the recurrent state.",
    "start": "4591600",
    "end": "4598110"
  },
  {
    "text": "So that's the correspondence and happens. Now, what about some consequences?",
    "start": "4598110",
    "end": "4603960"
  },
  {
    "text": "I brought some pictures here. And one of that one of the the crazy things you see is that sand piles you can add to sand piles together.",
    "start": "4603960",
    "end": "4619340"
  },
  {
    "text": "So so so if you exercise is a recurrent configuration, if X and Y are recurrent configurations,",
    "start": "4619340",
    "end": "4625650"
  },
  {
    "text": "then X plus why we can say is equal to Sigma of X plus Y.",
    "start": "4625650",
    "end": "4632409"
  },
  {
    "text": "This is a associative community of operations. We have an evolving group. We have we can add sandpile together. There's got to be a zero sandpile.",
    "start": "4632410",
    "end": "4643000"
  },
  {
    "text": "There's gonna be you know, there's going to be samples are gonna have certain preventative order.",
    "start": "4643000",
    "end": "4651670"
  },
  {
    "text": "We know the structure of the million groups, but in particular that there's a particular reason that there's a unique recurrent state z.,",
    "start": "4651670",
    "end": "4659920"
  },
  {
    "text": "which corresponds to zero on your addition. So, so and in this, it turned out that that.",
    "start": "4659920",
    "end": "4674830"
  },
  {
    "text": "OK. So under the theory of witchcraft, states allows us to define this this operation of addition on the states.",
    "start": "4674830",
    "end": "4684720"
  },
  {
    "text": "And therefore, we now have an addition on spanning trees, the sum of two spanning three and some spanning trees.",
    "start": "4684720",
    "end": "4693200"
  },
  {
    "text": "The tree that somehow represents zero under a particular ordering of the other thing.",
    "start": "4693200",
    "end": "4698940"
  },
  {
    "text": "This to me is mind boggling. I have no idea how to intuit this. What's it going to mean? And zillions of interesting graphs in the world. You know, you think of you.",
    "start": "4698940",
    "end": "4708510"
  },
  {
    "text": "You think of planer Graff's. Think of of, you know, the grid graphs, Torez graphs, complete graphs, cycles of dykey,",
    "start": "4708510",
    "end": "4719760"
  },
  {
    "text": "all kind of product of graphs, series, parallel graphs, your favorite class of graphs.",
    "start": "4719760",
    "end": "4726539"
  },
  {
    "text": "Each one has a way to understand a Spanky's as sand piles and then to add spending trees together.",
    "start": "4726540",
    "end": "4739350"
  },
  {
    "text": "And who knows if this is going to lead to some great applications until we play with it and find out,",
    "start": "4739350",
    "end": "4745110"
  },
  {
    "text": "you know, and get more experience with these things. OK.",
    "start": "4745110",
    "end": "4755119"
  },
  {
    "text": "A find out, a brilliant group. You always have to have having. You always have a unique element. Zero. So it was not this year.",
    "start": "4755120",
    "end": "4766579"
  },
  {
    "text": "This is you see you have inverses as well.",
    "start": "4766580",
    "end": "4772700"
  },
  {
    "text": "I mean, it's not it's not just community of mind. It's you have it X plus Y equals X plus Z., then Y equals.",
    "start": "4772700",
    "end": "4779650"
  },
  {
    "text": "Yeah. That's the cancelation lot. But you also have you also have a zero in fact that I guess t is it.",
    "start": "4779650",
    "end": "4787989"
  },
  {
    "text": "You know, it's not easy. Anyway, one way to get it is Z.",
    "start": "4787990",
    "end": "4793010"
  },
  {
    "text": "You can take it as for example to D minus sigma of two D.",
    "start": "4793010",
    "end": "4799539"
  },
  {
    "text": "And then reduce that to D is has large components and then we subtract off Sigma to D and then",
    "start": "4799540",
    "end": "4811460"
  },
  {
    "text": "and that that is equivalent to zero and then the reduction of that is in the current state.",
    "start": "4811460",
    "end": "4816850"
  },
  {
    "text": "So there we go. That's one way to compute Zeine for sure. I by the way, I found in every case I tried zie was a multiple of a.",
    "start": "4816850",
    "end": "4827220"
  },
  {
    "text": "Well, I haven't proved that, but that's true. Are there any orderings in which the disease is somehow.",
    "start": "4827220",
    "end": "4836070"
  },
  {
    "text": "Well, first of all, disease is unique. Xena's first was as a sandpile, doesn't depend on an ordering.",
    "start": "4836070",
    "end": "4844500"
  },
  {
    "text": "So so I tried the different Tauruses here. In fact, the first one I tried was the three by three tours, which we have here.",
    "start": "4844500",
    "end": "4852540"
  },
  {
    "text": "It has only three and two, isn't it? The wife needs the the I just take the center of this picture because I'm repeating Majnun on repeating it over and over on a plane,",
    "start": "4852540",
    "end": "4864180"
  },
  {
    "text": "a three by three tiles. And then the next one I tried GA was seven by seven and I had this one right.",
    "start": "4864180",
    "end": "4872340"
  },
  {
    "text": "And I start to think, oh, man, you start to look like the recent election. I had only three and two.",
    "start": "4872340",
    "end": "4881040"
  },
  {
    "text": "But then I had this was the six by six to five by five. So. So here a blue is three and red is two.",
    "start": "4881040",
    "end": "4889020"
  },
  {
    "text": "And yellow is one. No way. And green is green is one in yellow zero.",
    "start": "4889020",
    "end": "4898949"
  },
  {
    "text": "So here's there are some green ones coming in in the eight by eight. Nine by nine. Had had no yellow. This is a ten by ten. It is not given the choice of words.",
    "start": "4898950",
    "end": "4907890"
  },
  {
    "text": "So this doesn't happen. This is the this is one zero sandpile for a small target.",
    "start": "4907890",
    "end": "4913460"
  },
  {
    "text": "It's the uniquely defined as the one that's the equivalence class containing zero. This is the recurrent state. And so I wasn't able to cycle anything in any part of it.",
    "start": "4913460",
    "end": "4924450"
  },
  {
    "text": "It's easy to see that the that the neighbors of these zero have to all be blue.",
    "start": "4924450",
    "end": "4930360"
  },
  {
    "text": "But other than that, that I didn't. I was hoping that this would be a pattern that I could you know, I could extrapolate to infinity.",
    "start": "4930360",
    "end": "4938699"
  },
  {
    "text": "Then I tried squares instead of sort of wrap around. I you I said small squares. What what kind of what are the zero sand piles there?",
    "start": "4938700",
    "end": "4947190"
  },
  {
    "text": "And they you know, so it doesn't. Unfortunately, you know, it's just like I put the hole in the middle to here.",
    "start": "4947190",
    "end": "4956910"
  },
  {
    "text": "I have got like a 15 by 15 square grid and V0 is the middle vertex there and it just,",
    "start": "4956910",
    "end": "4966070"
  },
  {
    "text": "you know, has eight fold symmetry, but it doesn't give you any pattern at the end. It's just like looking through a kaleidoscope.",
    "start": "4966070",
    "end": "4971520"
  },
  {
    "text": "You know, it looks kind of nice because of something, but I don't see anything else. Like to commend it. So maybe. So.",
    "start": "4971520",
    "end": "4980100"
  },
  {
    "text": "So there's lots of open questions here. The answers to some of them might have terrific applications.",
    "start": "4980100",
    "end": "4986760"
  },
  {
    "text": "Some of them might just be interesting. Some of them might just be weird. And, you know, there's just no there's no good mathematics. But, you know, we know that, for example, in the in the complete graft case,",
    "start": "4986760",
    "end": "4999630"
  },
  {
    "text": "the zero sandpile is everything has the maximum make are blue corresponding.",
    "start": "4999630",
    "end": "5006080"
  },
  {
    "text": "You know, if it's a particular complete thing with within vertices and plus some vertices,",
    "start": "5006080",
    "end": "5012230"
  },
  {
    "text": "the complete graph for the zero state is easy to see if just put minus one on every every I'm sorry.",
    "start": "5012230",
    "end": "5018470"
  },
  {
    "text": "In on and and minus one on every on everything.",
    "start": "5018470",
    "end": "5025640"
  },
  {
    "text": "And similarly for a probably there is something you can do with serious paragraphs and things like that,",
    "start": "5025640",
    "end": "5032420"
  },
  {
    "text": "but I don't see any pattern for these terrorists and good graphs at the map.",
    "start": "5032420",
    "end": "5038520"
  },
  {
    "text": "OK. It's getting to be six o'clock so I can't pretty much what I wanted to say except for a couple of really surprising things.",
    "start": "5038520",
    "end": "5051960"
  },
  {
    "text": "OK, I. I said, first of all, that there's this mind boggling connection that is even now,",
    "start": "5051960",
    "end": "5060380"
  },
  {
    "text": "not only it now we have have a have a connection between trees and sandpile.",
    "start": "5060380",
    "end": "5068810"
  },
  {
    "text": "And so that means we can add trees together. Now, this connection depends on the ordering of of the arts.",
    "start": "5068810",
    "end": "5075070"
  },
  {
    "text": "But still, that's not such a weird idea, because when we study minimum spang trees,",
    "start": "5075070",
    "end": "5080420"
  },
  {
    "text": "when we study Metroid theory, we usually order the at the the edges of the Matrix or elements of the Maitreya.",
    "start": "5080420",
    "end": "5088489"
  },
  {
    "text": "We usually order things when we have a lot of algorithms with trees. So it corresponds depending on order is no big deal.",
    "start": "5088490",
    "end": "5096800"
  },
  {
    "text": "And in fact the minimum tree is exactly the one that has every vertex has D j minus one grains",
    "start": "5096800",
    "end": "5106099"
  },
  {
    "text": "of sand on vertex J green minus one because that's the Yes branch all the way through.",
    "start": "5106100",
    "end": "5112220"
  },
  {
    "text": "That's where we find the minimum spanker. But what's the zero standing tree?",
    "start": "5112220",
    "end": "5120330"
  },
  {
    "text": "Dad? I haven't got any any handle on at all. Furthermore, this one one correspondence, I described it, it only works for Graff's, not for directed Graff's with the directly grass.",
    "start": "5120330",
    "end": "5133210"
  },
  {
    "text": "It's very it's very interesting. And as far as I know, it works only for the for the balanced, directed, grass balanced directed grass means or Liron Grass.",
    "start": "5133210",
    "end": "5142670"
  },
  {
    "text": "It means that every vertex has as many things coming out of it as coming in.",
    "start": "5142670",
    "end": "5148190"
  },
  {
    "text": "But but it's but they can go in strange ways. But you have to have as many going out as coming in now.",
    "start": "5148190",
    "end": "5157639"
  },
  {
    "text": "But the funny thing is you try to generalize quarry's one to one correspondence for four directed graphs.",
    "start": "5157640",
    "end": "5166190"
  },
  {
    "text": "And it works a very funny way. It gives you a one to one correspondence between recurrent states.",
    "start": "5166190",
    "end": "5173820"
  },
  {
    "text": "O o o we current states and our trees.",
    "start": "5173820",
    "end": "5182199"
  },
  {
    "text": "From the ground, we know now that I told you what it orien his factory was,",
    "start": "5182200",
    "end": "5189040"
  },
  {
    "text": "it says that every vertex has one except we not has has a branch coming out that goes toward V, not in that.",
    "start": "5189040",
    "end": "5197620"
  },
  {
    "text": "And that's. That means that that's not that's an entry intervenor.",
    "start": "5197620",
    "end": "5203290"
  },
  {
    "text": "But an outreach is one where every vertex other than V not has something coming from.",
    "start": "5203290",
    "end": "5210920"
  },
  {
    "text": "And so that that means that V not to that one in a balanced digraphs.",
    "start": "5210920",
    "end": "5218500"
  },
  {
    "text": "If you have a source, it has also a sink and the the bottom.",
    "start": "5218500",
    "end": "5224890"
  },
  {
    "text": "But this this method that I gave you here despatching method, actually it it doesn't give you a connection between recurrent states and injuries, but with arteries.",
    "start": "5224890",
    "end": "5237650"
  },
  {
    "text": "However, that's something I never realized before I studied this problem.",
    "start": "5237650",
    "end": "5242770"
  },
  {
    "text": "The number of outrages in a directed graph, in a balanced graph is the same as the number of entries.",
    "start": "5242770",
    "end": "5251110"
  },
  {
    "text": "It's because the determinant of a transpose of a matrix is is is the same.",
    "start": "5251110",
    "end": "5256179"
  },
  {
    "text": "So when you when you have a balanced graph, imagine that you have an arbitrary matrix here. But I put on the on the diagonal, I put to the art degree of every vertex and then I know it's not a symmetrical matrix anymore because it cut.",
    "start": "5256180",
    "end": "5270610"
  },
  {
    "text": "But but every everybody has as many things coming in as as going out.",
    "start": "5270610",
    "end": "5276850"
  },
  {
    "text": "So the sum of the rows is still zero. But the matrix is symmetrical anymore.",
    "start": "5276850",
    "end": "5283390"
  },
  {
    "text": "But the but the number of arteries is the determinant of the transpose of this matrix because the diagonal stays the same.",
    "start": "5283390",
    "end": "5291740"
  },
  {
    "text": "And the other thing. So so I never realized before. But nobody has ever, as far as I know, on the one to one correspondence between our trees and increase in a balanced directed graph.",
    "start": "5291740",
    "end": "5304540"
  },
  {
    "text": "Maybe there's one out there in literature. And that would be very interesting to me. And I'm tomorrow I'm leaving for Europe and I'm going to spend three months and I'm gonna be in Sweden with some of the best countries in the world.",
    "start": "5304540",
    "end": "5318040"
  },
  {
    "text": "And we're gonna I'm I'm certainly I'm going to see them can figure out how to do more with these ideas.",
    "start": "5318040",
    "end": "5327280"
  },
  {
    "text": "And one of the things that I think is not obvious is to find a good way to one-to-one correspondence between our trees from the vertical entries.",
    "start": "5327280",
    "end": "5337659"
  },
  {
    "text": "But this this one to one correspondence is big. It is funny because it gives you the tree. OK.",
    "start": "5337660",
    "end": "5347690"
  },
  {
    "text": "And now I think that was the main thing I wanted to mention and the other",
    "start": "5347690",
    "end": "5354080"
  },
  {
    "text": "parties then that if you don't have a balanced digraphs theorem is still true.",
    "start": "5354080",
    "end": "5359120"
  },
  {
    "text": "That's a number of current states, is the number of of Orien spanning trees that there.",
    "start": "5359120",
    "end": "5366170"
  },
  {
    "text": "I have no idea what kind of a one to one correspondence could exist. And I tried the and I tried the simple graph with with three vertices, but any number of arcs going going between them.",
    "start": "5366170",
    "end": "5382160"
  },
  {
    "text": "You have multiple arcs. It doesn't matter in this definition that everything works fine if you have two arcs going",
    "start": "5382160",
    "end": "5389300"
  },
  {
    "text": "between between verses and then you just pass two grains of sand each time you topple.",
    "start": "5389300",
    "end": "5397489"
  },
  {
    "text": "And so it can the three vertex case. You can you know, theorem is still true that the number of recurrent spaces is numbers spankers.",
    "start": "5397490",
    "end": "5410000"
  },
  {
    "text": "But I looked at the you tried to find a correspondence and it just baffled me,",
    "start": "5410000",
    "end": "5417680"
  },
  {
    "text": "even though I'm working on a very small, simple, simple problem with only a few parameter.",
    "start": "5417680",
    "end": "5423560"
  },
  {
    "text": "So there. Oh yeah. One more Kohona more nice idea. And that is if something if you have.",
    "start": "5423560",
    "end": "5431750"
  },
  {
    "text": "If you look at all the recurrent states, if they also form what's called an order ideal means that they're closed under.",
    "start": "5431750",
    "end": "5444840"
  },
  {
    "text": "Okay. Not that if if if one status is greater than or equal to another.",
    "start": "5444840",
    "end": "5450440"
  },
  {
    "text": "If you have a recurrent state and I have another one that's bigger than it is bigger one is obviously also recurrent.",
    "start": "5450440",
    "end": "5458090"
  },
  {
    "text": "Because I could add another grain of sand to this. So the. So. So the set of recurrent states is totally determined by the minimal recurrent states.",
    "start": "5458090",
    "end": "5467600"
  },
  {
    "text": "The ones that that you can't take away any of their grains of sand without being non recurrent.",
    "start": "5467600",
    "end": "5475700"
  },
  {
    "text": "So I computed all the all the minimal.",
    "start": "5475700",
    "end": "5481040"
  },
  {
    "text": "Oh, yeah. Here, see here, here, we can zoom in on this. These are the these are the are this the stable states that are equivalent to zero?",
    "start": "5481040",
    "end": "5490570"
  },
  {
    "text": "Sixteen of them turned out in this in this particular example. Bob, some of them were a little surprising, but they're all equivalent to zero, but only this one is recurring.",
    "start": "5490570",
    "end": "5499640"
  },
  {
    "text": "But now it's the minimal recurrent state, like zero one zero two three three two three is a minimal recurrent state.",
    "start": "5499640",
    "end": "5508370"
  },
  {
    "text": "That means that, you know, zero zero is not for you. Subtract one from any of these guys and it's no longer recurring.",
    "start": "5508370",
    "end": "5516800"
  },
  {
    "text": "And this one is also recurrent and change the two three to the three to two minimal recurring states are now uncomfortable with each other.",
    "start": "5516800",
    "end": "5524449"
  },
  {
    "text": "And the total number of minimal recurrent states was one thousand three I 36. I don't know any good explanation for that number.",
    "start": "5524450",
    "end": "5533300"
  },
  {
    "text": "It was two out of the eight two two cubed times, one hundred and sixty seven or somewhere.",
    "start": "5533300",
    "end": "5538400"
  },
  {
    "text": "But in the case of the complete graph, it's the number of minimal recurring states turns out to be just in factorial.",
    "start": "5538400",
    "end": "5545719"
  },
  {
    "text": "So there's something about minimal recurrence states that also deserves to be investigated.",
    "start": "5545720",
    "end": "5551980"
  },
  {
    "text": "So, so character, you know, figure out how to enumerate and minimal number of minimal recurrent states for for these sandpile.",
    "start": "5551980",
    "end": "5558290"
  },
  {
    "text": "That's another open problem. And I think open problems galore if we keep playing around with it.",
    "start": "5558290",
    "end": "5565090"
  },
  {
    "text": "You know, take a graph, start playing the sandpile game. It raises questions that you can get some answers for.",
    "start": "5565090",
    "end": "5570530"
  },
  {
    "text": "You find out. Oh, what's the Sandfire Group? How many of you know? Is it a secret group? Is it is it the fact it got the prime numbers in it somehow?",
    "start": "5570530",
    "end": "5585409"
  },
  {
    "text": "It's right. The orders are concerned. Lots of questions seem to be natural for every every every graph.",
    "start": "5585410",
    "end": "5593830"
  },
  {
    "text": "Just like people started applying topology to graphs eight years ago. And and so that led to lots of wonderful theories.",
    "start": "5593830",
    "end": "5601940"
  },
  {
    "text": "So I can imagine there's a lot of stuff is ready to bust open as people start studying this connection with samples and graphs.",
    "start": "5601940",
    "end": "5611280"
  },
  {
    "text": "Yeah. They all do not regret it.",
    "start": "5611280",
    "end": "5618239"
  },
  {
    "text": "We have and we can go down to some specific requests.",
    "start": "5618240",
    "end": "5624870"
  },
  {
    "text": "Yes. In a non-recurring state will eventually lead to a reground stake in the group.",
    "start": "5624870",
    "end": "5632160"
  },
  {
    "text": "Now, we can't say that depending on your current state. This is right. And this was the full information. I'll be fine.",
    "start": "5632160",
    "end": "5640949"
  },
  {
    "text": "Do you see any you lose something. Nothing much for meeting or anything. Yes. That's that's knowledge. So I.",
    "start": "5640950",
    "end": "5652020"
  },
  {
    "text": "I haven't got a good idea for how to find out exactly how to compute all of the elements equivalent to a given one.",
    "start": "5652020",
    "end": "5663600"
  },
  {
    "text": "What I did was on my program. I took every state and I just think I took all sixty five thousand states and I used the union find algorithm taking everything,",
    "start": "5663600",
    "end": "5675690"
  },
  {
    "text": "saying X is equivalent to X plus A. And then that reduced me to the right number of equivalence classes.",
    "start": "5675690",
    "end": "5686940"
  },
  {
    "text": "But I haven't got a good algorithm for for solving.",
    "start": "5686940",
    "end": "5692130"
  },
  {
    "text": "There are some good there. I trying to remember what's the, what's the complexity.",
    "start": "5692130",
    "end": "5698730"
  },
  {
    "text": "Maybe God would know that given a given the integer matrix. You know, what is the or integer lattice to tell whether two rectors are equipped or equivalent to each of the.",
    "start": "5698730",
    "end": "5712989"
  },
  {
    "text": "With this little I guess this is fairly easy because I can triangular eyes the U.S. with",
    "start": "5712990",
    "end": "5719020"
  },
  {
    "text": "normal form on the Matrix and and I could I could test whether two things are equivalent.",
    "start": "5719020",
    "end": "5724560"
  },
  {
    "text": "But to test whether they're recurrent. Is is this other test where you add X plus they and then see if it reduces?",
    "start": "5724560",
    "end": "5731340"
  },
  {
    "text": "I haven't I haven't got a good characterization other than this trickle down. Reduce the induction.",
    "start": "5731340",
    "end": "5737260"
  },
  {
    "text": "Now, the there is one other thing I forgot to mention, though, is that when you when you take every current state X and you add this vector to it,",
    "start": "5737260",
    "end": "5746690"
  },
  {
    "text": "is that magic vector eight, which is just the neighbors of of a vertex zero.",
    "start": "5746690",
    "end": "5752050"
  },
  {
    "text": "And then it then what happens always is that you do exactly n toplines.",
    "start": "5752050",
    "end": "5761170"
  },
  {
    "text": "Every vertex topples exactly once. And you get back to X.",
    "start": "5761170",
    "end": "5766390"
  },
  {
    "text": "And the reason is you see that eight is equal to is equal to a one plus a two percent.",
    "start": "5766390",
    "end": "5774400"
  },
  {
    "text": "And so ecstasy is is reducing down to X X and each one of these is toppling.",
    "start": "5774400",
    "end": "5782350"
  },
  {
    "text": "And these vectors are linearly independent. So there's no other way to do so. So you always have to topple each one. Exactly. Once in order to get down to in order to get from ecstasy down to X.",
    "start": "5782350",
    "end": "5795300"
  },
  {
    "text": "And so this is an end step process and step test for Prudy current state.",
    "start": "5795300",
    "end": "5805119"
  },
  {
    "text": "As I said, I conjecture that every that the zero vector is always a multiple of a but I.",
    "start": "5805120",
    "end": "5810460"
  },
  {
    "text": "I didn't. Maybe it's obvious. I just haven't seen it yet. It was true in every case I tried.",
    "start": "5810460",
    "end": "5816880"
  },
  {
    "text": "I looked at zero vectors also on the three by N Tauruses where were three was fixed and was was growing and I didn't see a pattern.",
    "start": "5816880",
    "end": "5826630"
  },
  {
    "text": "That is. What kind of questions are they what? When the physics people study the samples, what kind of questions are they interested in?",
    "start": "5826630",
    "end": "5833580"
  },
  {
    "text": "I think they're trying to find questions like the entropy.",
    "start": "5833580",
    "end": "5841680"
  },
  {
    "text": "They're trying to find out the the some kind of spin numbers about you saying there's something like this.",
    "start": "5841680",
    "end": "5849200"
  },
  {
    "text": "They have certain statistics that they calculate on the on the states.",
    "start": "5849200",
    "end": "5856500"
  },
  {
    "text": "See, DA observed that up in the limit. If we keep if we keep on adding sand at random, each of these recurrent states is equally likely.",
    "start": "5856500",
    "end": "5868980"
  },
  {
    "text": "I don't think he showed how fast it converges to the limit, though, so this wouldn't give us necessarily a good way to generate a random spanning tree.",
    "start": "5868980",
    "end": "5877030"
  },
  {
    "text": "But but that you can anyway. There's a there's a place to the literature and newspapers and TV, you know, to search for the different things that look up sandpile.",
    "start": "5877030",
    "end": "5889740"
  },
  {
    "text": "Sometimes one word, sometimes to end. But they'll they'll they'll more, you know,",
    "start": "5889740",
    "end": "5899990"
  },
  {
    "text": "be concerned about computing and some kind of energy or something temperature or things like that, which is, you know, common topics.",
    "start": "5899990",
    "end": "5908970"
  },
  {
    "text": "People are more interested in the sea, seen one on one correspondences and in smaller, smaller examples.",
    "start": "5908970",
    "end": "5918060"
  },
  {
    "text": "I don't see how I get anything continuous out of out of this right now.",
    "start": "5918060",
    "end": "5924140"
  },
  {
    "text": "Lots of great questions, you people. I need a referee to choose who is going to get these prizes.",
    "start": "5924140",
    "end": "5929930"
  },
  {
    "text": "Yeah. Is isn't an application or risk analysis. It's the application of this Bonos.",
    "start": "5929930",
    "end": "5935730"
  },
  {
    "text": "So that's what this analysis of Petrine as well. I bet. I bet you there is. Yeah, I know. I it certainly it's very much like like firing on Petrina.",
    "start": "5935730",
    "end": "5948020"
  },
  {
    "text": "Yeah. So does that mean there's some kinds of pet.",
    "start": "5948020",
    "end": "5960150"
  },
  {
    "text": "Yeah. So some people have studied it like an infinite infinite number of states.",
    "start": "5960150",
    "end": "5966199"
  },
  {
    "text": "And you keep on going until you I mean there's no new zero.",
    "start": "5966200",
    "end": "5972230"
  },
  {
    "text": "But things sort of go out and go quickly. And then when you only consider small configurations instead of the recurrent states potentially net.",
    "start": "5972230",
    "end": "5982980"
  },
  {
    "text": "So looks very much like this kind of kind of theory, doesn't it?",
    "start": "5982980",
    "end": "5992989"
  },
  {
    "text": "For patroness for the Germans and now, well, thank you very much. And now I don't know how to decide who's going to win the prize, but I think I will.",
    "start": "5992990",
    "end": "6007560"
  },
  {
    "text": "Those of you who think that you deserve it, come up in and I'll choose between. So Merry Christmas to.",
    "start": "6007560",
    "end": "6018682"
  }
]