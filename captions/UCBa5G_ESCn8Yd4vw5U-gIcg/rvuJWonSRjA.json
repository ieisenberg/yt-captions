[
  {
    "text": "OK. I guess we better start today. I still do. I still see a few empty chairs. This morning, it must be the day that problem for us too far is the one that we're trying to solve.",
    "start": "4680",
    "end": "19140"
  },
  {
    "text": "Has anybody solved it? Oh, no.",
    "start": "19140",
    "end": "24160"
  },
  {
    "text": "Amy. No, Marianne. No caffeine. And we just panic.",
    "start": "24160",
    "end": "32070"
  },
  {
    "text": "John. No. Ramsey. Don.",
    "start": "32070",
    "end": "44140"
  },
  {
    "text": "Can you tell me that I've finally stumped the best minds in the world on a problem here?",
    "start": "44140",
    "end": "52110"
  },
  {
    "text": "What do we have any partial results? Do you have any. I mean, you know, versus the third is the total result, which says that, you know exactly what that that you need.",
    "start": "52110",
    "end": "66060"
  },
  {
    "text": "Three, two. And minus something like two or something is a minimum number of configurations.",
    "start": "66060",
    "end": "72630"
  },
  {
    "text": "But what but does anybody have any partial results saying if you're going to get a better construction than that,",
    "start": "72630",
    "end": "77909"
  },
  {
    "text": "then it has to be of a certain restricted form or something like that?",
    "start": "77910",
    "end": "83730"
  },
  {
    "text": "I think you might have things you say Neal might have, but he's not here.",
    "start": "83730",
    "end": "89480"
  },
  {
    "text": "What do you think, Neal? How do you think Neal did of talking to Mike about it yesterday?",
    "start": "89480",
    "end": "96390"
  },
  {
    "text": "Oh, they were working the other night. They thought they had improved and had been bugging him. Oh, well, I don't know if they've gotten any worse since then.",
    "start": "96390",
    "end": "104369"
  },
  {
    "text": "I think Neal decided he should look upon the collection at this point. Yeah, well, there is that.",
    "start": "104370",
    "end": "111930"
  },
  {
    "text": "I, I'm just I understand that you have an absolute deadline of Thursday. And this deadline was I was a little less firm.",
    "start": "111930",
    "end": "121810"
  },
  {
    "text": "OK, so now let's see. Well, I should try to figure out how to play it. And arrested this morning at the end of the hour, you're supposed to do class evaluation.",
    "start": "121810",
    "end": "134250"
  },
  {
    "text": "And so I have I can't just blow it completely. I mean, although when you fill out these forms of evaluation,",
    "start": "134250",
    "end": "141540"
  },
  {
    "text": "please remember all the other all the other great times we've had just in case I do blow it.",
    "start": "141540",
    "end": "148849"
  },
  {
    "text": "OK, well, I've got no idea. Roger, you don't have any partial results anywhere. Didn't get anywhere.",
    "start": "148850",
    "end": "156990"
  },
  {
    "text": "That's interesting. OK, I mean sometimes. I mean, you've got a face we've got to face the prospect of of failure.",
    "start": "156990",
    "end": "166080"
  },
  {
    "text": "I don't know. Maybe you guys are better at it than I am. And giving up a problem is one of the things that happens to me occasionally.",
    "start": "166080",
    "end": "173550"
  },
  {
    "text": "Is that a word that I just can't get over the curiosity I have.",
    "start": "173550",
    "end": "178890"
  },
  {
    "text": "I just have to know whether something is true or false. Night. Forget the sleep eat non-lethal thing, which is then bad for my wife.",
    "start": "178890",
    "end": "188370"
  },
  {
    "text": "I mean for my health, etc. It's almost as bad as timesharing has been for my whole life.",
    "start": "188370",
    "end": "196470"
  },
  {
    "text": "I've had to stay up late using to use computers when I couldn't get good cycles during the day and stuff.",
    "start": "196470",
    "end": "202200"
  },
  {
    "text": "But sometimes. Well, I think that there were at least five times in my life when I worked very hard on a problem and finally decided,",
    "start": "202200",
    "end": "212819"
  },
  {
    "text": "yes, I'm not going to solve it, I'm going to give it up and I'll never get it.",
    "start": "212820",
    "end": "220110"
  },
  {
    "text": "And three times I think I've both by an idea, came to me an hour later, but I wouldn't have probably gotten that idea if I kept grinding on it.",
    "start": "220110",
    "end": "229920"
  },
  {
    "text": "But I finally decided that I was, you know, that I was going to die, that I felt that that there was no way I was going to go on.",
    "start": "229920",
    "end": "235260"
  },
  {
    "text": "I had to go on with the rest of my life and so on. And I was prepared to give it up. And so several problems I have given up on and never solved.",
    "start": "235260",
    "end": "243240"
  },
  {
    "text": "For example, the P equals NDP problem. And I mean, once I thought I had had a four page proof of that and I got to the point where I had",
    "start": "243240",
    "end": "254340"
  },
  {
    "text": "written up the paper proving that P was unequal NDP and it was time to write QED.",
    "start": "254340",
    "end": "261570"
  },
  {
    "text": "And then I realized I haven't proved anything at all. I mean, I thought I was completely done and all I had to do is write.",
    "start": "261570",
    "end": "269460"
  },
  {
    "text": "And that proves the theorem. And then I realized that I had that my whole construction made no sense.",
    "start": "269460",
    "end": "274830"
  },
  {
    "text": "So sometimes I just deluded myself. And then, you know, so there were there are times when I had to come to terms with the fact that I wasn't going to prove that he",
    "start": "274830",
    "end": "281710"
  },
  {
    "text": "was an equal NDP and similarly for a few other things about deterministic languages and things like that.",
    "start": "281710",
    "end": "289919"
  },
  {
    "text": "But other times, somehow, it seems that our subconscious will go to work on a problem after we're after.",
    "start": "289920",
    "end": "297990"
  },
  {
    "text": "We're conscious after we're. We're done with it consciously and all of a sudden middle of the night or something, I'll say, wait a minute.",
    "start": "297990",
    "end": "307069"
  },
  {
    "text": "Doesn't this fit? And then all of a sudden it just. That's the thing you can.",
    "start": "307070",
    "end": "312400"
  },
  {
    "text": "I have what I think. Still that we ought to add some footnotes to what we did on Thursday because there are more powerful results than what we what we did last Thursday.",
    "start": "312400",
    "end": "323350"
  },
  {
    "text": "And this I will read somewhere, if not to the final solution, that at least this is there is a there is more to be said, I think, than we did before.",
    "start": "323350",
    "end": "338050"
  },
  {
    "text": "So I had better mentioned that today. And and if we run out, then if I run out of things to say and if you run out of things to comment on,",
    "start": "338050",
    "end": "344349"
  },
  {
    "text": "then I could talk about half tone, Francis, something like that. Related to that, there's two portraits.",
    "start": "344350",
    "end": "352500"
  },
  {
    "text": "All right. So let's let's see now. Last week, we had a construction that that showed pretty good grounds for believing that if we had three,",
    "start": "352500",
    "end": "369850"
  },
  {
    "text": "two state devices in the system, we were going to have trouble completing it.",
    "start": "369850",
    "end": "377110"
  },
  {
    "text": "And now I wanted to examine that a little bit further.",
    "start": "377110",
    "end": "386979"
  },
  {
    "text": "We started out in that time saying there exists a good cycle and therefore we've got this construction of the alphas and betas that had to march along.",
    "start": "386980",
    "end": "399030"
  },
  {
    "text": "Now, I really haven't worked this out at all, but I've got some ideas that I think should be should be mentioned.",
    "start": "399030",
    "end": "407260"
  },
  {
    "text": "And maybe you can see also how it works in the first place instead of us saying that there exists a good cycle.",
    "start": "407260",
    "end": "422770"
  },
  {
    "text": "We might state if you start with any arbitrary configuration.",
    "start": "422770",
    "end": "427810"
  },
  {
    "text": "Then if we if we follow the if we follow any any continuation of moves from that configuration, we eventually get to a good cycle.",
    "start": "427810",
    "end": "439300"
  },
  {
    "text": "So that's a slightly more powerful statement. And and in fact, we could just say just take the leftmost sequence of moves.",
    "start": "439300",
    "end": "448240"
  },
  {
    "text": "For example, suppose that that if you have a configuration and several processors can move.",
    "start": "448240",
    "end": "454569"
  },
  {
    "text": "Let's just move the one that the leftmost processor say in a in a in a pattern and then see what.",
    "start": "454570",
    "end": "463390"
  },
  {
    "text": "And we end that. That defines a unique. That defines a deterministic sequence from a from a configuration.",
    "start": "463390",
    "end": "474190"
  },
  {
    "text": "Furthermore, even if we take a partial if we have a partial up some part of a configuration in which there is at least one button,",
    "start": "474190",
    "end": "482710"
  },
  {
    "text": "at least one one one, one thing able to move, then we can we can look at what is the the the leftmost consequence of that configuration.",
    "start": "482710",
    "end": "497990"
  },
  {
    "text": "So so we can say, for example, if I have a stream,",
    "start": "497990",
    "end": "503020"
  },
  {
    "text": "I have part of a configuration then and say it's preceded by a zero state to process and can some zero state process there at the right.",
    "start": "503020",
    "end": "512070"
  },
  {
    "text": "And I have some some configuration alpha here.",
    "start": "512070",
    "end": "517719"
  },
  {
    "text": "Either Alpha is stuck or or it can eventually anyway. It defines the leftmost sequence of of of state of moves.",
    "start": "517720",
    "end": "527800"
  },
  {
    "text": "So if Alpha, if any, if any of the processes in Alpha can move at all. Let's move. The left must want us forget about these zeroes here. Let's not move them in any case.",
    "start": "527800",
    "end": "535660"
  },
  {
    "text": "And I'll keep on moving this until I get to Alpha Bar. Which is which is the first time in which it can't move anymore.",
    "start": "535660",
    "end": "548569"
  },
  {
    "text": "Okay. There's got to be some. This is a well-defined mapping from Alpha to Alpha Bar for any for any processor and any any two things in front of it.",
    "start": "548570",
    "end": "559040"
  },
  {
    "text": "We don't mean any any any are assume states before and after saying always move the",
    "start": "559040",
    "end": "564639"
  },
  {
    "text": "leftmost thing you can in Alpha and see what the what the corresponding alpha bar is. So now that that is some mapping from configurations to configurations that might might help up this in this process.",
    "start": "564640",
    "end": "581709"
  },
  {
    "text": "So in other words. Well, you've got to know more than we did last Thursday.",
    "start": "581710",
    "end": "588310"
  },
  {
    "text": "And so the way to do it is to find find a way to have a notation for for the things that we're coming up with.",
    "start": "588310",
    "end": "595210"
  },
  {
    "text": "I see a brief has just arrived. Have you solved the problem? You haven't solved that. Your. Result. OK.",
    "start": "595210",
    "end": "602949"
  },
  {
    "text": "Well, maybe your meal will show up in a minute. OK, now, so let's let's look at this.",
    "start": "602950",
    "end": "614220"
  },
  {
    "text": "This idea that we could we could sort of we could I don't know, this alpha bar might be called Alpha zero zero or something.",
    "start": "614220",
    "end": "623819"
  },
  {
    "text": "Have to have some notation for for it for any friends configuration and certain neighboring states.",
    "start": "623820",
    "end": "631120"
  },
  {
    "text": "And we have a mapping as to what it would what it would go to if we made all the moves that we could.",
    "start": "631120",
    "end": "639850"
  },
  {
    "text": "Whenever there's a choice of more than one, choose the left. Most say not then.",
    "start": "639850",
    "end": "649750"
  },
  {
    "text": "Then we might be then there is a possible chance of getting counterexamples with all with with that.",
    "start": "649750",
    "end": "658390"
  },
  {
    "text": "OK. Now let's look at let's look at the kind of things we had last time.",
    "start": "658390",
    "end": "667660"
  },
  {
    "text": "But I'm going to write out explicitly Alpha zero zero pages.",
    "start": "667660",
    "end": "673209"
  },
  {
    "text": "And for the time being, I want to simplify the setup of overlap over what we had last time.",
    "start": "673210",
    "end": "681640"
  },
  {
    "text": "Because, again, another idea for for working on a problem we can't solve is to say, well, let's add an assumption or simplify something and see if we can't solve a simpler problem.",
    "start": "681640",
    "end": "692930"
  },
  {
    "text": "And then if we if we if we can't even sell the simpler problem, then we're really in trouble.",
    "start": "692930",
    "end": "699339"
  },
  {
    "text": "If we can solve a similar problem, at least we have some idea for what doesn't work on the more complicated problem,",
    "start": "699340",
    "end": "704680"
  },
  {
    "text": "as well as what might work on the more complicated problem. So we've got to simplify it down a little bit. So I'm I'm going to simplify it down to the point where I have two to non-empty patterns instead of three.",
    "start": "704680",
    "end": "715300"
  },
  {
    "text": "So I also assume that I have a two to two state processes and then I have between them some undetermined number of processors,",
    "start": "715300",
    "end": "723970"
  },
  {
    "text": "at least one and some undetermined number of processors. And they're their initial configuration is that is Alpha zero zero.",
    "start": "723970",
    "end": "733230"
  },
  {
    "text": "Let me actually give myself a little room here and I'll say.",
    "start": "733230",
    "end": "742089"
  },
  {
    "text": "We start out in this in this situation. Now, let's see, where were they?",
    "start": "742090",
    "end": "751510"
  },
  {
    "text": "So instead of three, I put two and I'm putting in the B zeros explicitly. The other assumption I want to make is that that in A that in all reasonable things,",
    "start": "751510",
    "end": "765529"
  },
  {
    "text": "I want to look at the the to the motion through a two state process or will I speak to the right.",
    "start": "765530",
    "end": "774720"
  },
  {
    "text": "And so I'm not going to I'm going to assume that I don't back up once this once I've gone through.",
    "start": "774720",
    "end": "785759"
  },
  {
    "text": "So the first move was to hear it in our assumed good cycle.",
    "start": "785760",
    "end": "791560"
  },
  {
    "text": "And I'm going to assume that when I get done, I get to I haven't changed this one back to zero again, but I'm both still sitting at one level.",
    "start": "791560",
    "end": "805140"
  },
  {
    "text": "This is this is an assumption that I can't make in general. I have to verify it later on. But I'm going to assume that, as I first of all, I'm gonna go back to that idea.",
    "start": "805140",
    "end": "814310"
  },
  {
    "text": "Then last week that we have a good cycle and that the baton is moving. But I'm going to say that that once the two state process passes the baton to the right,",
    "start": "814310",
    "end": "822709"
  },
  {
    "text": "he never gets the baton again until it comes to him again from the left. That's the that's the assumption.",
    "start": "822710",
    "end": "829030"
  },
  {
    "text": "I'm going to I'm going to make and see if that if if I can construct it,",
    "start": "829030",
    "end": "837060"
  },
  {
    "text": "if I can show at least that it's impossible to do it under these circumstances. If we can show that.",
    "start": "837060",
    "end": "842150"
  },
  {
    "text": "And then if we say, well, hey, maybe then then the only possible constructions are ones in which the baton gets passed back to the Tuesday processor.",
    "start": "842150",
    "end": "850870"
  },
  {
    "text": "And then we can see if that if that helps us any. But first, let's consider that some simpler cake.",
    "start": "850870",
    "end": "856720"
  },
  {
    "text": "That means that the reason that this this has some effect, because it it gives it Pareto condition zeros to zero always goes to one.",
    "start": "856720",
    "end": "865089"
  },
  {
    "text": "And then on the next lap, one goes back to zero and on next lap zero to one again.",
    "start": "865090",
    "end": "870820"
  },
  {
    "text": "This one. Then we will finally get to a situation where where Alpha Zero has gone, the alpha one.",
    "start": "870820",
    "end": "882850"
  },
  {
    "text": "And then the next move is Alpha woman one to zero now and end.",
    "start": "882850",
    "end": "892209"
  },
  {
    "text": "This pattern continues. Before I go before I go further than this, I want to mention.",
    "start": "892210",
    "end": "899950"
  },
  {
    "text": "We could also go to the notation I had a minute ago saying if I have a one alpha zero zero that this is in and I move the leftmost thing in Alpha zero,",
    "start": "899950",
    "end": "909040"
  },
  {
    "text": "then I can in general. This will take me to two. Alpha one. This will take me to a one alpha one zero.",
    "start": "909040",
    "end": "921879"
  },
  {
    "text": "Which is the first time that there's no more moves left. And at this point, we get to this.",
    "start": "921880",
    "end": "930130"
  },
  {
    "text": "So. So in general, we can assume without it, we know without any assumptions that that that this state that would would lead us to that.",
    "start": "930130",
    "end": "940090"
  },
  {
    "text": "If we start with this configuration, we're gonna have to get to this configuration sooner or later. I mean, if. Let me see. There's a sequence of moves that takes us to this configuration after which somebody else has to move.",
    "start": "940090",
    "end": "951130"
  },
  {
    "text": "Alpha one is now stuck. Alpha one. Alpha one is dead. When it's preceded by one and followed by zero. Now, at this point, then somebody else has to move.",
    "start": "951130",
    "end": "964170"
  },
  {
    "text": "And in our good cycle, if this was a really good cycle, Beta zero was stuck.",
    "start": "964170",
    "end": "970899"
  },
  {
    "text": "When preceded by zero and followed by zero. Therefore, Beta zero can't move. Alpha one can't move. So it's got to be that this one moves or there's zero moves right now.",
    "start": "970900",
    "end": "981430"
  },
  {
    "text": "Now, for now, it comes time to make my assumption that the baton is always going to go to the right. And so it's gonna be it's gonna be this one that moves. That's going to force it to go on here.",
    "start": "981430",
    "end": "991300"
  },
  {
    "text": "The other possibility that we go from here to zero alpha one zero is another stop.",
    "start": "991300",
    "end": "996820"
  },
  {
    "text": "Something else that I would have to explore later. But right now, I want to always consider the two state ones always going to the right, if anything.",
    "start": "996820",
    "end": "1003720"
  },
  {
    "text": "So at this point, I get Alpha on one.",
    "start": "1003720",
    "end": "1010910"
  },
  {
    "text": "OK. Then what happens next? The same kind of thing occurs one day to zero one, followed by a one.",
    "start": "1010910",
    "end": "1017670"
  },
  {
    "text": "It's going to lead eventually to the first case where the betas can't move anymore and that we'll call beta one now.",
    "start": "1017670",
    "end": "1027079"
  },
  {
    "text": "So Beta one is dead, followed by a one. Let's just try.",
    "start": "1027080",
    "end": "1045209"
  },
  {
    "text": "I was thinking we see it, we're assuming that this what this was a good cycle, which also allows us to prove that Alpha two concluded Alpha one, followed by one is dead.",
    "start": "1045210",
    "end": "1055050"
  },
  {
    "text": "But in the more general case, I guess we can do that.",
    "start": "1055050",
    "end": "1060090"
  },
  {
    "text": "Okay, then this will lead us to then buy the same argument. Zero Alpha one one data one. And that will go down to zero Alpha two one data one zero two zero, data one and so on.",
    "start": "1060090",
    "end": "1085330"
  },
  {
    "text": "Two one four, two better two know up, and then this will eventually have to get into a cycle.",
    "start": "1085330",
    "end": "1094909"
  },
  {
    "text": "It'll be eventually cyclic. So the Alphas will be equal in the subscripts, so on the office and Beta's will be modular or something or other.",
    "start": "1094910",
    "end": "1105430"
  },
  {
    "text": "I want to go up a hill, up one from the from the beginning position just to see what it's like.",
    "start": "1105430",
    "end": "1111400"
  },
  {
    "text": "So that would be the corresponding to this one. So there will be a zero four zero zero beta minus one here.",
    "start": "1111400",
    "end": "1122300"
  },
  {
    "text": "Up above in the environment of that, I think eight minus one reading meaning K minus one more case, the period length for P minus.",
    "start": "1122300",
    "end": "1132850"
  },
  {
    "text": "This is the the way it looks. Now in this situation in which we know we know these alphas invaders are going to exist.",
    "start": "1132850",
    "end": "1144270"
  },
  {
    "text": "And if we assume this this this baton always to the right in the in the two state processes.",
    "start": "1144270",
    "end": "1151510"
  },
  {
    "text": "We also we also have this kind of a pattern where where the Alphas have.",
    "start": "1151510",
    "end": "1159530"
  },
  {
    "text": "Well, the office of different subscript keeping on growing and growing. But I haven't done any more. Now, what do we know about these offers?",
    "start": "1159530",
    "end": "1168720"
  },
  {
    "text": "Any. And we know that zero percent 2k zero is dead in zero alpha a 2k one is dead.",
    "start": "1168720",
    "end": "1185620"
  },
  {
    "text": "For example, zero alpha zero is dead because it didn't have the baton.",
    "start": "1185620",
    "end": "1191230"
  },
  {
    "text": "It didn't move from here to here. And zero alpha zero one is dead because it didn't move from here to here with the.",
    "start": "1191230",
    "end": "1204280"
  },
  {
    "text": "And on the other hand, the odd in the odd case, one alpha two K plus one zero and one Alpha QCA plus one one are dead.",
    "start": "1204280",
    "end": "1220150"
  },
  {
    "text": "Now what about the other one then. So one Alpha two came like one alpha zero zero.",
    "start": "1220150",
    "end": "1227620"
  },
  {
    "text": "This leads to one alpha one zero one Alpha two K plus one zero and one alpha switched to K.",
    "start": "1227620",
    "end": "1242470"
  },
  {
    "text": "One is unknown. You don't know what happened to that one.",
    "start": "1242470",
    "end": "1248510"
  },
  {
    "text": "But it can. Oh, yeah.",
    "start": "1248510",
    "end": "1253700"
  },
  {
    "text": "Almost anything can happen. We haven't got that. And the reason is in the in the cycle. Similarly here we got zero Alpha two K plus one.",
    "start": "1253700",
    "end": "1268160"
  },
  {
    "text": "So zero for one one means to zero.",
    "start": "1268160",
    "end": "1275740"
  },
  {
    "text": "Alpha two plus two one. And Euro offers two plus one zero is unknown.",
    "start": "1275740",
    "end": "1294820"
  },
  {
    "text": "Yeah. John, let's see what you can get for having four processors, because there's obviously the case with open beta Tuesday process.",
    "start": "1294820",
    "end": "1303909"
  },
  {
    "text": "Yeah. That's right. Well, there there is a there is a case, one which will actually arise that would that that works with with Tuesday processes.",
    "start": "1303910",
    "end": "1313520"
  },
  {
    "text": "That's correct. So so far. But but but somehow we'll have to battle forces maybe into a into a sort of there's only one way that can work.",
    "start": "1313520",
    "end": "1328940"
  },
  {
    "text": "And so they will force us into into a higher level consequence of this, which then would have to be true if we went to if we went to four,",
    "start": "1328940",
    "end": "1336850"
  },
  {
    "text": "for example, if they were really six, we could absorb it and call it two and four.",
    "start": "1336850",
    "end": "1342289"
  },
  {
    "text": "And then and then we know something about that. These four maybe. And similarly, we could call it four and two.",
    "start": "1342290",
    "end": "1349950"
  },
  {
    "text": "And then we know something about these four. And then we might be able to combine that. I mean, I. I have no idea. But first of all, I wanted to see what or what we can prove about the about it from this level.",
    "start": "1349950",
    "end": "1360500"
  },
  {
    "text": "But your point is very well taken. I'm not going to show it's impossible. I'm not going to definitely come up with it.",
    "start": "1360500",
    "end": "1367200"
  },
  {
    "text": "I can't. There has to be at least one way out of this mess, isn't there?",
    "start": "1367200",
    "end": "1372470"
  },
  {
    "text": "And it must be because of these question marks here. In fact, in the in the in the case of 16 things.",
    "start": "1372470",
    "end": "1383760"
  },
  {
    "text": "Yeah. OK, now, one of the things that might be true is that the period has to be fairly short.",
    "start": "1383760",
    "end": "1393290"
  },
  {
    "text": "For example, in that case, maybe, maybe that period, you know, let's start with P for period.",
    "start": "1393290",
    "end": "1404090"
  },
  {
    "text": "Maybe the period has to be four or eight or something.",
    "start": "1404090",
    "end": "1413720"
  },
  {
    "text": "But let's try to find as many consequences as we can out of the other. So primitive axioms we could we have more things to check.",
    "start": "1413720",
    "end": "1422510"
  },
  {
    "text": "Now, let's see. One of the things we can conclude is that peers even.",
    "start": "1422510",
    "end": "1429950"
  },
  {
    "text": "All righty. Do you see that is when you compare what happens with a two K and a two shape the future and then these two,",
    "start": "1429950",
    "end": "1440029"
  },
  {
    "text": "then a Alpha two K would also have to equal alpha sub to J plus one for some J.",
    "start": "1440030",
    "end": "1446810"
  },
  {
    "text": "Because there would be you know, it would it would it would be Even's and that would get mixed up.",
    "start": "1446810",
    "end": "1453500"
  },
  {
    "text": "And we do have a case that this one is dead and this one is alive.",
    "start": "1453500",
    "end": "1461510"
  },
  {
    "text": "So. So that's a contradiction. So so we we we know that P is even small theorem.",
    "start": "1461510",
    "end": "1471160"
  },
  {
    "text": "Okay. Can you take anything at this time? Now, the next thing is let's look at let's look at what happens if we start out with zero Alpha Phi one or two K zero beta two J minus one or Jane K.",
    "start": "1471160",
    "end": "1497120"
  },
  {
    "text": "Might not be equal. Well in this, if this is a situation like we had on the board on Thursday where we wanted to try to get a cup,",
    "start": "1497120",
    "end": "1508220"
  },
  {
    "text": "a counterexample, and this is a case where we have two things.",
    "start": "1508220",
    "end": "1518809"
  },
  {
    "text": "Oh, I didn't write the V bylaws for.",
    "start": "1518810",
    "end": "1524180"
  },
  {
    "text": "And the laws for the base are exactly the same as the laws of the office, except the right must been complimented.",
    "start": "1524180",
    "end": "1531150"
  },
  {
    "text": "And so, for example, one data, zero one is what we know.",
    "start": "1531150",
    "end": "1537620"
  },
  {
    "text": "Here's one data. Zero one is what we know goes to the next case. It's not one data zero. So that.",
    "start": "1537620",
    "end": "1543990"
  },
  {
    "text": "So when you have a beating or you come to complement the value on the right neighbor, it's too bad for decrements subscript.",
    "start": "1543990",
    "end": "1556760"
  },
  {
    "text": "You say that even not our different on the base. I don't think that's true. Well, because your because the zeroes ours it's going to be for example can be one data.",
    "start": "1556760",
    "end": "1569890"
  },
  {
    "text": "Two K. One goes to just four. You're not you're not considering this is just a substrate or a substrate of process.",
    "start": "1569890",
    "end": "1576990"
  },
  {
    "text": "This is supposedly the flavoring you've got on the board there. Yeah. Yeah. It says that this is a complete. This is this is followed by the explosion here.",
    "start": "1576990",
    "end": "1586310"
  },
  {
    "text": "So we want the one on the right has the complement is right. Input as far as the law is that does satisfy that concerns.",
    "start": "1586310",
    "end": "1595760"
  },
  {
    "text": "So zero followed by an odd data followed by a one would use the same thing for zero, followed by an on way to test.",
    "start": "1595760",
    "end": "1613380"
  },
  {
    "text": "One of the two case zero. Zero.",
    "start": "1613380",
    "end": "1625810"
  },
  {
    "text": "To Kim. Do I have I'm seeing if this checks with my other notation, I'm confused here, sorry.",
    "start": "1625810",
    "end": "1644700"
  },
  {
    "text": "One, two, one zero.",
    "start": "1644700",
    "end": "1653580"
  },
  {
    "text": "Maybe I just wrote it down wrong. I have a zero followed by an odd beta then not followed by a zero then.",
    "start": "1653580",
    "end": "1664380"
  },
  {
    "text": "Then I know what it happens. But here I go. I really don't know what's what's going on on this side, do I?",
    "start": "1664380",
    "end": "1672480"
  },
  {
    "text": "Okay. Well, like so I don't know what's what's happening here, but I do know that this can.",
    "start": "1672480",
    "end": "1682220"
  },
  {
    "text": "This one can take can go. It is two one alpha two K plus one zero.",
    "start": "1682220",
    "end": "1690590"
  },
  {
    "text": "I have to say my one. Now, let's see.",
    "start": "1690590",
    "end": "1700779"
  },
  {
    "text": "So at this point. OK.",
    "start": "1700780",
    "end": "1707540"
  },
  {
    "text": "This differs from mine. It's different from what I thought was true. At this point, think the Alpha two K plus one is dead in between here.",
    "start": "1707540",
    "end": "1721000"
  },
  {
    "text": "Back to J. Minus one was preceded by zero, followed by one. I don't know what it will do. But let's see.",
    "start": "1721000",
    "end": "1734389"
  },
  {
    "text": "It is me, right?",
    "start": "1734390",
    "end": "1740900"
  },
  {
    "text": "What I know about zero data, two K to J minus one followed by zero goes to zero followed by goes to zero.",
    "start": "1740900",
    "end": "1758690"
  },
  {
    "text": "Theta two J zero. To.",
    "start": "1758690",
    "end": "1788450"
  },
  {
    "text": "That's not the case I wanted to consider. We get into something like this in a minute, but let me try.",
    "start": "1788450",
    "end": "1795110"
  },
  {
    "text": "Let me go into this one. I think that's this one. This is the kind of thing that I really had in mind.",
    "start": "1795110",
    "end": "1803179"
  },
  {
    "text": "I think when I started out, I got one to say zero goes into the next case.",
    "start": "1803180",
    "end": "1811820"
  },
  {
    "text": "Zero followed. Now that's dead.",
    "start": "1811820",
    "end": "1819649"
  },
  {
    "text": "Let's watch this one anyway. See what happens. This one. Will, we'll take us to this situation a bit better to J follow.",
    "start": "1819650",
    "end": "1827000"
  },
  {
    "text": "Preceded by zero is dead.",
    "start": "1827000",
    "end": "1832020"
  },
  {
    "text": "It falls into this pattern. And so this we get here and now.",
    "start": "1832020",
    "end": "1837860"
  },
  {
    "text": "This is dead. This is dead. So it's on. One of these two has to move at this point.",
    "start": "1837860",
    "end": "1845030"
  },
  {
    "text": "Either the this one or this one has to move.",
    "start": "1845030",
    "end": "1851570"
  },
  {
    "text": "So if, for example, this one moves.",
    "start": "1851570",
    "end": "1867230"
  },
  {
    "text": "All right. Oh. You have either the one you used to zero or the zero changes to a one or both can happen.",
    "start": "1867230",
    "end": "1884049"
  },
  {
    "text": "But we can't have that. Neither happened because then we'd be turning the whole thing would be dead. And even though this is dead week, we can't have it. This is from.",
    "start": "1884050",
    "end": "1892090"
  },
  {
    "text": "So we've got to have. So let's suppose that that this one changes next, that this one can change at this point.",
    "start": "1892090",
    "end": "1899440"
  },
  {
    "text": "I'll say this one can change. Well, in that case, then we could.",
    "start": "1899440",
    "end": "1906970"
  },
  {
    "text": "Then we can go to beat us to J. Plus one at which time this is dead again.",
    "start": "1906970",
    "end": "1916059"
  },
  {
    "text": "And this one is still as is still dead. And so, again, we're faced with the same situation.",
    "start": "1916060",
    "end": "1926860"
  },
  {
    "text": "Even this one can change. This one can change. And I suppose this one can change now.",
    "start": "1926860",
    "end": "1932350"
  },
  {
    "text": "Well, in that case, we see a way that K and J will be stepping along just as if they were equal.",
    "start": "1932350",
    "end": "1943510"
  },
  {
    "text": "And so that would give us a that would give us a good a a cycle.",
    "start": "1943510",
    "end": "1949970"
  },
  {
    "text": "That looks good. All right. Now, if.",
    "start": "1949970",
    "end": "1955590"
  },
  {
    "text": "If so, if. If this happens all the time for all for our values of K and J.",
    "start": "1955590",
    "end": "1962620"
  },
  {
    "text": "That it always that always turns out that that when there's a choice between these two, these two,",
    "start": "1962620",
    "end": "1969340"
  },
  {
    "text": "which one can move, it's always gonna be the one that are to the right of the of the guy had just moved.",
    "start": "1969340",
    "end": "1981340"
  },
  {
    "text": "The time is always right if it always happens like this for our case and chase. And that gives us a fairly strong condition on our state and our state diagram.",
    "start": "1981340",
    "end": "1989790"
  },
  {
    "text": "So gives us gives us lots of good cycles for whatever peers, our peers, some even number suppose peers 20.",
    "start": "1989790",
    "end": "1998830"
  },
  {
    "text": "Then it says we can start out at Alpha zero, beta zero or Alpha zero. Beta two. Alpha zero. Beta four of the Alpha Zero.",
    "start": "1998830",
    "end": "2006780"
  },
  {
    "text": "Beat eighteen. You go get you get a bunch of, you know, a whole bunch of consequences of what, what the state what, what the states are on that thing.",
    "start": "2006780",
    "end": "2018390"
  },
  {
    "text": "That's one possibility. What's the other possibility. Other possibility is that we would get at least for some value of K and some dry OJ.",
    "start": "2018390",
    "end": "2026640"
  },
  {
    "text": "We'd get to a situation where this one would now be followed by where this where this zero is stuck is dead.",
    "start": "2026640",
    "end": "2036460"
  },
  {
    "text": "When when preceded by these with when K is not equal to J.",
    "start": "2036460",
    "end": "2042909"
  },
  {
    "text": "And in that case, this one would have to be a would have to still be movable and it would take us to zero Alpha to K plus one zero data to J.",
    "start": "2042910",
    "end": "2071080"
  },
  {
    "text": "OK, now. So now no better two days is is still is still dead in that point.",
    "start": "2071080",
    "end": "2081330"
  },
  {
    "text": "But we've got now. So so this is still stuck.",
    "start": "2081330",
    "end": "2090669"
  },
  {
    "text": "This is still stuck. The only thing that can possibly have changed since he made it to jail, followed by either zero or one.",
    "start": "2090670",
    "end": "2098230"
  },
  {
    "text": "Is that so? So it's nothing we can do here.",
    "start": "2098230",
    "end": "2104140"
  },
  {
    "text": "So the only thing that we could possibly do is go in this in this one, which was one of one of our unknown one of our unknown cases.",
    "start": "2104140",
    "end": "2111950"
  },
  {
    "text": "You know, I think if you look at it, you said 032, T.J., you see a stack of Sanzio Alphatech J zero stack.",
    "start": "2111950",
    "end": "2122440"
  },
  {
    "text": "If you look at the time zero, you go back and look at the table on the left and we have it at the top.",
    "start": "2122440",
    "end": "2128440"
  },
  {
    "text": "You will look at you are using that to celebrate it. Data that zero data, T.J. Zero stack, actually. Yeah.",
    "start": "2128440",
    "end": "2137260"
  },
  {
    "text": "That's that's four after that rule that we all the count is complemented. Right. But these are both cases. So it's actually I use this case in this case instead of this case.",
    "start": "2137260",
    "end": "2147720"
  },
  {
    "text": "Right. They're both dead. So. Yeah, right. I'm glad you're watching me because I might make a mistake at any time.",
    "start": "2147720",
    "end": "2156970"
  },
  {
    "text": "I haven't I haven't gone anywhere. OK, enough.",
    "start": "2156970",
    "end": "2162369"
  },
  {
    "text": "So at this point, we got to. We got to move. We've got to move. There the only this our only hope. And so this this must go to something like a we take the left thing that can move at",
    "start": "2162370",
    "end": "2175660"
  },
  {
    "text": "all time or something must go through Alpha two K plus one bar C before it gets stuck.",
    "start": "2175660",
    "end": "2189819"
  },
  {
    "text": "And up. OK.",
    "start": "2189820",
    "end": "2198800"
  },
  {
    "text": "So so I've. So let's see in that case.",
    "start": "2198800",
    "end": "2212520"
  },
  {
    "text": "Now, I've got it now for two K plus one bar that's stuck. And and so each one of these two zeroes has to move again.",
    "start": "2212520",
    "end": "2230350"
  },
  {
    "text": "All right. Let's see if it.",
    "start": "2230350",
    "end": "2238220"
  },
  {
    "text": "It looks so it looks to me as though the way to continue on hacking on this problem is something like this.",
    "start": "2238220",
    "end": "2244490"
  },
  {
    "text": "I would I would try to find property. I would call this maybe Alpha two K plus one super one or something like this, because I'll oh,",
    "start": "2244490",
    "end": "2253400"
  },
  {
    "text": "if I might be able to pursue this and go on to Super two and Super three when I buy that. But I would like to make it a table. That would say what.",
    "start": "2253400",
    "end": "2266730"
  },
  {
    "text": "Oh something like this for the alpha bars as well. Well I have some kind of a mapping between these alphas and that, and I tracked her keep driving properties like this as I as I go on.",
    "start": "2266730",
    "end": "2280670"
  },
  {
    "text": "So I'll know something about Alpha two K plus one bar and I'll know that there are certain pairs of K and J for which which are the zero.",
    "start": "2280670",
    "end": "2289309"
  },
  {
    "text": "These two, this two state machine is stuck in some pairs where which it isn't stuck studying.",
    "start": "2289310",
    "end": "2298430"
  },
  {
    "text": "So there's some maybe no theoretic property commentary or properties of the J. K when junkier equal. We know that this one isn't stuck. So but how, how discriminating is it going to be?",
    "start": "2298430",
    "end": "2309530"
  },
  {
    "text": "In one case, you might think that this second processor here has is just one processor and has lots of states.",
    "start": "2309530",
    "end": "2316130"
  },
  {
    "text": "And then this one gets to look at all those states and decide when it's stuck and when it isn't.",
    "start": "2316130",
    "end": "2323900"
  },
  {
    "text": "And Areif pointed out last week that if we had two of these two to process things in a row,",
    "start": "2323900",
    "end": "2332720"
  },
  {
    "text": "it looked like it was hopeless to get much information across. But, you know, that's sort of where we're confronting it here.",
    "start": "2332720",
    "end": "2343160"
  },
  {
    "text": "Now, you might be able to get people to make more headway as long as you're going to assume that you're always passing the time.",
    "start": "2343160",
    "end": "2351559"
  },
  {
    "text": "Right. You might as well make another assumption. And that is where these states that are question marks, you could assume that those are those are also stuck because,",
    "start": "2351560",
    "end": "2360880"
  },
  {
    "text": "I mean, if you're looking at some setup where you've got it or you've got a sequence, you've got this one can't be stuck.",
    "start": "2360880",
    "end": "2371000"
  },
  {
    "text": "But this one is kind of a tonic. The left. I know, because it it moves in this pattern, if you.",
    "start": "2371000",
    "end": "2378260"
  },
  {
    "text": "Well, I'm sorry. If the offer is only one processor, it it it it could it could be stuck. But if it isn't, if there's more than one processor in here, it can't be stuck.",
    "start": "2378260",
    "end": "2388590"
  },
  {
    "text": "And so if I go why. Oh OK.",
    "start": "2388590",
    "end": "2394370"
  },
  {
    "text": "Suppose there's two processors so then one out for two K looks like one A B something.",
    "start": "2394370",
    "end": "2401030"
  },
  {
    "text": "And in this case it moves. And in this case it's got the one over here is zero doesn't know yet, which it doesn't know yet, but it's kind of stuck.",
    "start": "2401030",
    "end": "2411360"
  },
  {
    "text": "OK is one when N is large enough, at least one of these is going to be more than what Ramsey.",
    "start": "2411360",
    "end": "2419330"
  },
  {
    "text": "Otherwise from the starting state one else to two K one of the two K plus one one four two K one two K plus one.",
    "start": "2419330",
    "end": "2431590"
  },
  {
    "text": "You could get two. Oh wait never mind. I was going to say you couldn't move at all.",
    "start": "2431590",
    "end": "2437760"
  },
  {
    "text": "That's what I was thinking before. She's all you mean. Yeah. I want to get a contradiction in and we can get her but I can't assume that this one is dead.",
    "start": "2437760",
    "end": "2445849"
  },
  {
    "text": "I'm afraid here. I can assume however that it that it dies out quickly.",
    "start": "2445850",
    "end": "2451310"
  },
  {
    "text": "Something like that. See. So let's for example.",
    "start": "2451310",
    "end": "2456990"
  },
  {
    "text": "Okay. Let's let's put it put a assumption on you that one that this goes to one, not two K plus one bar.",
    "start": "2456990",
    "end": "2466280"
  },
  {
    "text": "I'll put one bar on and see if we can get one. Well, it's natural that it goes to some something like that which is dead. That defines Alpha to Kate plus one bar.",
    "start": "2466280",
    "end": "2481119"
  },
  {
    "text": "And now we we try to get some some rules of the game on the on the off of bars as well as the office and sip end.",
    "start": "2481120",
    "end": "2493240"
  },
  {
    "text": "And then if we can, that might lead us to rules on the alpha bar bars and things like this.",
    "start": "2493240",
    "end": "2498280"
  },
  {
    "text": "But this is a general idea. When you're doing research on something and you have a bunch of cases, just, you know, name them, just give a name to the content and see what the pattern is.",
    "start": "2498280",
    "end": "2506319"
  },
  {
    "text": "Anything can shock you and hopefully you don't run out of memory. Well, yeah, that's right. We use a you know, we we are in this case, it looks like there will be a subscription superscripts, the superscript thing.",
    "start": "2506320",
    "end": "2520420"
  },
  {
    "text": "How many buys there are subscript thing somehow where we are,",
    "start": "2520420",
    "end": "2525549"
  },
  {
    "text": "how many steps we've taken from from some starting I'm starting configuration groups and paying them anneal.",
    "start": "2525550",
    "end": "2535500"
  },
  {
    "text": "And I think on Sunday was too soon to try and prove that you couldn't have any process to swallow at the time.",
    "start": "2535500",
    "end": "2543160"
  },
  {
    "text": "You couldn't have a penny processor that would that would swallow up a ton. That would go, in other words, that this was done. How would it see?",
    "start": "2543160",
    "end": "2551320"
  },
  {
    "text": "How would it be used if you have three brothers and three, two processors?",
    "start": "2551320",
    "end": "2556590"
  },
  {
    "text": "OK. And a cycle you could I guess four and four, if you can show that no new pair of Brussels or two Brussels or vice versa can swallow the time that you could definitely show.",
    "start": "2556590",
    "end": "2569440"
  },
  {
    "text": "There were times in the control room. Oh. So you could use the swallowing effect to construct to construct a bad cycle.",
    "start": "2569440",
    "end": "2581349"
  },
  {
    "text": "Because this rawling would get rid of the garbage or something like that. Well, the system was kept from your point last week where you said if you had something that was recognizing the bad times and stopping it,",
    "start": "2581350",
    "end": "2595830"
  },
  {
    "text": "then you found that it stopped the whole machine. Occasionally, people who got stuck trying to show that you couldn't get the the.",
    "start": "2595830",
    "end": "2609570"
  },
  {
    "text": "But you do have that as a result or was this conjecture that was conjecture or conjecture was always being.",
    "start": "2609570",
    "end": "2616180"
  },
  {
    "text": "Yeah. Mm hmm. I wonder if anyone is actually constructing a sequence of events since this is a zombie.",
    "start": "2616180",
    "end": "2626619"
  },
  {
    "text": "Yeah. I mean, let's about how it. That was my my next question. Has anybody tried that? That's sort of that's what I was going to say next, because that's what you're going to try next.",
    "start": "2626620",
    "end": "2635440"
  },
  {
    "text": "Okay. That's exactly what I was gonna bring up next. What time is it going to be on?",
    "start": "2635440",
    "end": "2641069"
  },
  {
    "text": "Okay. Let's, uh, let's talk about that for the next, uh, for the next few minutes, because I got this as far I mean,",
    "start": "2641070",
    "end": "2650080"
  },
  {
    "text": "this is this and this and the next idea I had for a theoretical approach and then would then go to a computer and get some data.",
    "start": "2650080",
    "end": "2657580"
  },
  {
    "text": "A computer will crank out a cycle. And then you say, oh, yes, this might I might have been able to predict this by doing.",
    "start": "2657580",
    "end": "2664630"
  },
  {
    "text": "Okay. So let's so let's forget this now for the time being and go to the day.",
    "start": "2664630",
    "end": "2674349"
  },
  {
    "text": "Another problem. Suppose that I was suppose that you were in the ACM programing contest.",
    "start": "2674350",
    "end": "2679730"
  },
  {
    "text": "That's I think, taking place today in New Orleans with our star programmer, Mike Dixon.",
    "start": "2679730",
    "end": "2687550"
  },
  {
    "text": "Is it Tim, today or tomorrow? Yeah, I think it's why he sees today.",
    "start": "2687550",
    "end": "2694440"
  },
  {
    "text": "So. And and you open up the problem and it says,",
    "start": "2694440",
    "end": "2699940"
  },
  {
    "text": "given a a set of transitions corresponding to convict processing configurations that can follow other configurations",
    "start": "2699940",
    "end": "2711690"
  },
  {
    "text": "and problem for determine whether or not it satisfies the conditions that the five conditions of problem for,",
    "start": "2711690",
    "end": "2723430"
  },
  {
    "text": "namely about, you know, bad configuration. So I can have to leave the good ones and things like that.",
    "start": "2723430",
    "end": "2729940"
  },
  {
    "text": "So how would we write a program that would test this out? What would be so?",
    "start": "2729940",
    "end": "2737290"
  },
  {
    "text": "So you've got a graph. In other words, you've got you've got a graph of configure. You've got some large number of configurations out here and look and sometimes it'll have several successes.",
    "start": "2737290",
    "end": "2751510"
  },
  {
    "text": "Others will have only one success. Everybody has to have at least one success.",
    "start": "2751510",
    "end": "2756880"
  },
  {
    "text": "So you could check that pretty easily. It's not a tough program to check.",
    "start": "2756880",
    "end": "2762710"
  },
  {
    "text": "So how would we check to see whether a set of points and and arrows between configurations satisfy these?",
    "start": "2762710",
    "end": "2775460"
  },
  {
    "text": "These properties. What are the properties, one after another? Somebody have.",
    "start": "2775460",
    "end": "2781800"
  },
  {
    "text": "Yeah. The first property was at least one process that can move configuration assets.",
    "start": "2781800",
    "end": "2789770"
  },
  {
    "text": "It at least one error coming out of every point. Okay. Next, you're reading the rules.",
    "start": "2789770",
    "end": "2795110"
  },
  {
    "text": "You can determine now when you're reading in. Yeah, right. We can read in these transitions that they're given to us.",
    "start": "2795110",
    "end": "2801180"
  },
  {
    "text": "Data. Let's let's say and we just have this, you know,",
    "start": "2801180",
    "end": "2806839"
  },
  {
    "text": "we figure out some kind of data structure where we can least test that everybody has a has at least one successor.",
    "start": "2806840",
    "end": "2812840"
  },
  {
    "text": "OK. Now, what about the next thing? At most one process, it can move in any good configuration.",
    "start": "2812840",
    "end": "2822710"
  },
  {
    "text": "So that tells us then that those that have that have out degree one could possibly be good.",
    "start": "2822710",
    "end": "2831290"
  },
  {
    "text": "But the others couldn't. So it gives us some some handle on what what might be good.",
    "start": "2831290",
    "end": "2837840"
  },
  {
    "text": "It's see, there's there's always a possibility of something like this, but this one has only one way to go.",
    "start": "2837840",
    "end": "2845300"
  },
  {
    "text": "But then this one has three and then but it'll eventually get to a good cycle.",
    "start": "2845300",
    "end": "2850680"
  },
  {
    "text": "But here's a good here's a sequence of four things that have only one success. So we call those good. So press probably two properties, three each each move from good leads to another good and no sequence of moves.",
    "start": "2850680",
    "end": "2867530"
  },
  {
    "text": "Takes a bad into itself. And his cycle includes a move by each processor.",
    "start": "2867530",
    "end": "2872810"
  },
  {
    "text": "Let's forget about pretty fine for the time being and just check the other properties so that the",
    "start": "2872810",
    "end": "2883070"
  },
  {
    "text": "property five says that if there's a cycle each process or moves on that cycle and we haven't a graph,",
    "start": "2883070",
    "end": "2890270"
  },
  {
    "text": "which we haven't looked at it, we haven't identified these moves with with processors,",
    "start": "2890270",
    "end": "2897500"
  },
  {
    "text": "we could put a color on each arrow or something that says which processor it is that's moving and make sure that every cycle has all the colors.",
    "start": "2897500",
    "end": "2905000"
  },
  {
    "text": "But let's forget that. Probably so. So now, first of all, let's just check that there there's no noro infinite, bad, bad things.",
    "start": "2905000",
    "end": "2911150"
  },
  {
    "text": "What's a good algorithm for this? The closure. Compute the transitive closure.",
    "start": "2911150",
    "end": "2916279"
  },
  {
    "text": "So transitive closure of a point is everything you can reach from from middle point. And if you have any bad state, one where you can go in two or more states, if you get back to itself.",
    "start": "2916280",
    "end": "2927590"
  },
  {
    "text": "OK. So if so, if transitive closure would be the the difference of closure.",
    "start": "2927590",
    "end": "2935240"
  },
  {
    "text": "So we have we have some we have a rule. X goes to Y is then we can consider that to be a relation.",
    "start": "2935240",
    "end": "2943280"
  },
  {
    "text": "This is this is in the graph. This means a vertex X constant Y Democrats have closure. X plus Y means that X can go to Y in one or more steps.",
    "start": "2943280",
    "end": "2956240"
  },
  {
    "text": "And if X plus X then you've got a possible problem, then X had better be good.",
    "start": "2956240",
    "end": "2966150"
  },
  {
    "text": "Right. OK, so. So if, if so you would you could impute to transitive closure and see and then say that these have to all be good for all of the ones that do this.",
    "start": "2966150",
    "end": "2979640"
  },
  {
    "text": "Have to be good. And this would be. Then you just check to see that those have all out degree one.",
    "start": "2979640",
    "end": "2986750"
  },
  {
    "text": "Every vertex that can lead to itself must have our degree one and call those the good ones.",
    "start": "2986750",
    "end": "2997010"
  },
  {
    "text": "Well, you also have to show that all bad ones filter into that.",
    "start": "2997010",
    "end": "3004570"
  },
  {
    "text": "If it's yeah. Let's let's say let's take that as I suppose we suppose we just use transitive closure subroutine.",
    "start": "3004570",
    "end": "3011470"
  },
  {
    "text": "Maybe it's built in hardware by machine traffic flow to take her. So we've got a Transicold taken and we look at all of that. That's data that can lead to themselves.",
    "start": "3011470",
    "end": "3021370"
  },
  {
    "text": "And we. And if any of those have our degree, more than one, we say no good.",
    "start": "3021370",
    "end": "3028720"
  },
  {
    "text": "Yeah, I know all those that point to it. And Markov is bad for you. You're talking with another guy and we talk about John's algorithm.",
    "start": "3028720",
    "end": "3040660"
  },
  {
    "text": "I'll get back to you. But let's forget. So we got, first of all, this this property.",
    "start": "3040660",
    "end": "3049180"
  },
  {
    "text": "So we've taken a transfer closure. We look at all those that all all the ex for which this happens.",
    "start": "3049180",
    "end": "3054880"
  },
  {
    "text": "And we and we know that we want all of those to have our degree. Right. Now, if we all to what degree one we call those the good vertices and everything else is bad.",
    "start": "3054880",
    "end": "3064030"
  },
  {
    "text": "Now, is it true then that there is no cycle from a bad configuration into itself?",
    "start": "3064030",
    "end": "3071640"
  },
  {
    "text": "Yes. Yes. Because. By definition, all the ones that could go into the self were declared good.",
    "start": "3071640",
    "end": "3080779"
  },
  {
    "text": "Which means. And furthermore, in any good configuration, it leads to another good configuration.",
    "start": "3080780",
    "end": "3085920"
  },
  {
    "text": "Is that property, too? Yeah. I mean. All right. We've defined all good configurations to be all the extra which X goes to X under the transitive closure.",
    "start": "3085920",
    "end": "3099650"
  },
  {
    "text": "Yeah. Is it true then that every good configuration leads to another good configuration? We all got off the grid optically one and that and that must be part of that same cycle.",
    "start": "3099650",
    "end": "3109950"
  },
  {
    "text": "Well that goes, you know, if X goes to X and X, a successor will go to X and then to X the successor.",
    "start": "3109950",
    "end": "3116280"
  },
  {
    "text": "OK. And and then at most one process can move that.",
    "start": "3116280",
    "end": "3122910"
  },
  {
    "text": "We only checked in a good configuration. So so that that's that's a working algorithm. How fast is it to take a transfer. Closure. It can't be done like squared log in and keep it fairly easily.",
    "start": "3122910",
    "end": "3137070"
  },
  {
    "text": "And Cube, this is what we would use for any n that we would ever expect to program is finite time.",
    "start": "3137070",
    "end": "3146400"
  },
  {
    "text": "Yeah I know it's there. I think it's. Yeah. I think. I don't remember. And you go log in was was the bound at one time which was based on going through log in columns at a time.",
    "start": "3146400",
    "end": "3162950"
  },
  {
    "text": "But, but let's see. That's like shorter than five minutes. It's no way you can do better. Yeah. Because you've got the you've got the matrix multiplication machinery to use.",
    "start": "3162950",
    "end": "3173930"
  },
  {
    "text": "So I think it's like the same as matrix multiplication. So it's ended at the end of the ten point four nine.",
    "start": "3173930",
    "end": "3179760"
  },
  {
    "text": "Except that it. Except that it doesn't start to help you over and cubed because the constant is so big that you have",
    "start": "3179760",
    "end": "3185460"
  },
  {
    "text": "to get in more than 10 to the 10 to the 100th or something before the trade starts to help you.",
    "start": "3185460",
    "end": "3192890"
  },
  {
    "text": "But but but it is less than and and cube. Yeah. Because. Because I believe that's true. That the this transitive closure I don't remember now.",
    "start": "3192890",
    "end": "3206369"
  },
  {
    "text": "Berson got to right. Wrong for something like that.",
    "start": "3206370",
    "end": "3213780"
  },
  {
    "text": "Yeah. Yeah. I think that's I think they they showed that because you can, because you can get transfer closure by multiplying matrices.",
    "start": "3213780",
    "end": "3221880"
  },
  {
    "text": "You have a matrix of zeros and ones and you multiply the matrix like you take a and you go to A squared eight of the forth, eight of the eight.",
    "start": "3221880",
    "end": "3230940"
  },
  {
    "text": "You keep squaring the matrix and pretty soon the after log in steps, it comes to the the non-zero entries in the Matrix.",
    "start": "3230940",
    "end": "3238500"
  },
  {
    "text": "Are the the elements intransitive closure. And she had fairly easily.",
    "start": "3238500",
    "end": "3303710"
  },
  {
    "text": "And Kim, this is what we would use for any end that we would ever probably expect to program.",
    "start": "3303710",
    "end": "3311099"
  },
  {
    "text": "Yes, I. Yeah, I know there are. I think it's.",
    "start": "3311100",
    "end": "3316310"
  },
  {
    "text": "Yeah. I think. I don't remember and can go over log in. Was bound at one time, which was based on going through log in.",
    "start": "3316310",
    "end": "3327290"
  },
  {
    "text": "Comes at a time. But, but let's see like five minutes.",
    "start": "3327290",
    "end": "3333910"
  },
  {
    "text": "It's. Way. I mean you can do better. Yeah. Because you've got the. You've got the matrix multiplication machinery for you.",
    "start": "3333910",
    "end": "3340520"
  },
  {
    "text": "So I think it's like the same as matrix multiplication. So it's end of the end of the ten point four nine.",
    "start": "3340520",
    "end": "3346400"
  },
  {
    "text": "Except that. Except that it doesn't start to help you over and cubed. Because the constant is so big that you have to get in more than, you know,",
    "start": "3346400",
    "end": "3355280"
  },
  {
    "text": "10 to the 10 to the 100th or something before the trade starts to help you. But but but it is less than. And and cube.",
    "start": "3355280",
    "end": "3363310"
  },
  {
    "text": "Yeah. Because. Because I believe that's true. That the this transitive closure.",
    "start": "3363310",
    "end": "3371060"
  },
  {
    "text": "I don't remember now. It's embarrassing to write vying for something like that.",
    "start": "3371060",
    "end": "3380230"
  },
  {
    "text": "Yeah. Yeah. I think that's I think they, they showed that because you can, because you can get Transdev closure by multiplying matrices.",
    "start": "3380230",
    "end": "3388490"
  },
  {
    "text": "You have a matrix of zeros and ones and you multiply the matrix like you take a and you go to A squared eight of the forth, eight of the eight.",
    "start": "3388490",
    "end": "3397550"
  },
  {
    "text": "You keep squaring the matrix and pretty soon the after log in steps,",
    "start": "3397550",
    "end": "3402580"
  },
  {
    "text": "it comes to the the non-zero entries in the Matrix are the the elements in transitive closure,",
    "start": "3402580",
    "end": "3409960"
  },
  {
    "text": "because if there is a path from X to Y, there will be a path that that simple path from X to Y when it doesn't use a cycle again.",
    "start": "3409960",
    "end": "3420920"
  },
  {
    "text": "And then. And so the maximum vertex, an intermediate vertex more than once.",
    "start": "3420920",
    "end": "3426619"
  },
  {
    "text": "And so therefore there would have to be a path less than end. And so. So the H of the N represents all the path of length then.",
    "start": "3426620",
    "end": "3436250"
  },
  {
    "text": "Let's see, I that's not exactly true. You replace A by A squared like the end times a log in time and then you get to closure.",
    "start": "3436250",
    "end": "3451280"
  },
  {
    "text": "So. So that's like matrix multiplication. Yeah, that's a big way to do it, completely enumerating all the possible configurations.",
    "start": "3451280",
    "end": "3462830"
  },
  {
    "text": "Yeah, but that's that's still in square. There's a third. There's a better way. Than it's like she's much more cheaply. Yeah, that's right.",
    "start": "3462830",
    "end": "3469760"
  },
  {
    "text": "That's why I want to get this. But there's a faster way. So what would you do every go through the notes?",
    "start": "3469760",
    "end": "3477250"
  },
  {
    "text": "Because let's find the first one you have. This is more about degree by the zero zero.",
    "start": "3477250",
    "end": "3484250"
  },
  {
    "text": "Obviously, you already know a little more than one. Yeah. And find all the notes. It's fine to simply mock them back.",
    "start": "3484250",
    "end": "3495950"
  },
  {
    "text": "OK. I'll give you a check so that you don't get them. No. OK. So you start out with some, some with with every vertex that's got out degree more than one and call it bad.",
    "start": "3495950",
    "end": "3508430"
  },
  {
    "text": "And let's call it a thirty seven course and call the predecessors of any bad one bad and propagate backwards rendering not to second any any predecessor of a bad is bad.",
    "start": "3508430",
    "end": "3519090"
  },
  {
    "text": "OK, ok. So that's the B. That's a marking algorithm like in garbage collection or something.",
    "start": "3519090",
    "end": "3524420"
  },
  {
    "text": "Where we, where we have, where we, where we, we have a starting set, namely the ones that have our degree, more than one.",
    "start": "3524420",
    "end": "3534020"
  },
  {
    "text": "And then we, then we take all the predecessors of our set and we keep on going until, until we've closed the operation under undertaking predecessor.",
    "start": "3534020",
    "end": "3543950"
  },
  {
    "text": "OK. Now does that does that work? So then then the ones that we weren't able to get under this operation, we call good.",
    "start": "3543950",
    "end": "3551260"
  },
  {
    "text": "Yeah. The subject to the condition, the source changes of processes. Well that's probably five will have to do later.",
    "start": "3551260",
    "end": "3557540"
  },
  {
    "text": "But let's, let's. OK. So now is this because this one work. OK.",
    "start": "3557540",
    "end": "3562580"
  },
  {
    "text": "So first of all, in this case we, we get a different set of Goodwins than the other.",
    "start": "3562580",
    "end": "3568520"
  },
  {
    "text": "In this example for oh we might get a different set of good.",
    "start": "3568520",
    "end": "3575240"
  },
  {
    "text": "Well not always and not in all the examples stuff. So if you had if we had something which whichever Vertex has our degree one then in enshrines construction.",
    "start": "3575240",
    "end": "3591440"
  },
  {
    "text": "Suppose it takes something like this in Chinese construction.",
    "start": "3591440",
    "end": "3599569"
  },
  {
    "text": "This would be called good. But this one not because it's not it can't lead to itself.",
    "start": "3599570",
    "end": "3604740"
  },
  {
    "text": "But in our ease construction, everything has up. Yeah. Up here. This one has this property that it's not part of the cycle but.",
    "start": "3604740",
    "end": "3615150"
  },
  {
    "text": "Yeah. But it has no degree one and it doesn't have any I don't think can be reached as the predecessors of the bad ones.",
    "start": "3615150",
    "end": "3622339"
  },
  {
    "text": "Here are the bad guys are this and this. So so now let's see.",
    "start": "3622340",
    "end": "3631630"
  },
  {
    "text": "What's the next property? If in a good configuration you have art degree one, that's true because we rule out all the all the ones advised that as our first step to get it.",
    "start": "3631630",
    "end": "3645840"
  },
  {
    "text": "We've done our initial bad ones were the ones that that had at least two moves.",
    "start": "3645840",
    "end": "3652920"
  },
  {
    "text": "Every move from a good leads to a good. That was that was the thing that we said. That is that is if we're if your predecessor,",
    "start": "3652920",
    "end": "3663580"
  },
  {
    "text": "the predecessors of all the of all our bads are our bad and therefore the successes of all our goods are good.",
    "start": "3663580",
    "end": "3672180"
  },
  {
    "text": "And I know sequence of moves takes a bad configuration into itself.",
    "start": "3672180",
    "end": "3679500"
  },
  {
    "text": "All we've done so far is classify into good and bad. We still have to have a way of telling whether or not whether or not we lost because it can't lead to that conflagration.",
    "start": "3679500",
    "end": "3693440"
  },
  {
    "text": "It just so. So. So as bad as we're doing this week.",
    "start": "3693440",
    "end": "3699859"
  },
  {
    "text": "We check that that the predecessors have not already been marked. Predecessors already been marked.",
    "start": "3699860",
    "end": "3709220"
  },
  {
    "text": "It's already been marked as bad. Then you've got a cycle.",
    "start": "3709220",
    "end": "3714550"
  },
  {
    "text": "Is that correct? Is that true? Doesn't work. No. You can make your work, but you can always check with.",
    "start": "3714550",
    "end": "3727660"
  },
  {
    "text": "So we started out with the bad ones and we went to their predecessors can make in a box from the back that position where you started.",
    "start": "3727660",
    "end": "3736670"
  },
  {
    "text": "Let's check whether you are you haven't looked at it that. I started at one bad position. You started a bad position. OK, go back. Yes. Maintain the list so that when you at every point check whether it's only that list.",
    "start": "3736670",
    "end": "3751319"
  },
  {
    "text": "Which means that if there's a loop, you'll find it. So there's no loops.",
    "start": "3751320",
    "end": "3757500"
  },
  {
    "text": "When I went back from one bad configuration. OK. Then I start with another one.",
    "start": "3757500",
    "end": "3762710"
  },
  {
    "text": "OK. And I start with another bad configuration. Then I start going back from that.",
    "start": "3762710",
    "end": "3775080"
  },
  {
    "text": "All right. What we do is sort of a checking for loop free property here.",
    "start": "3775080",
    "end": "3790130"
  },
  {
    "text": "So we we've we've we've classified into good and bad. I think that classification is fine.",
    "start": "3790130",
    "end": "3796099"
  },
  {
    "text": "So now let's say I kind of let's let's restrict the graph to the to the bad that vertices.",
    "start": "3796100",
    "end": "3803450"
  },
  {
    "text": "How do we check whether there's any psychos in that tree? Check whether it's a tree.",
    "start": "3803450",
    "end": "3808609"
  },
  {
    "text": "How do you check that. Search for depth for just for a search. OK. One way to do so.",
    "start": "3808610",
    "end": "3818460"
  },
  {
    "text": "All right. Now, you were supposed to take three more minutes to solve that because we had four minutes to go.",
    "start": "3818460",
    "end": "3826300"
  },
  {
    "text": "So that's a depth. First search is a good way. Probably the best. There's also like a type of logical thought, the same kind of thing.",
    "start": "3826300",
    "end": "3834140"
  },
  {
    "text": "You could use the those. There's two competing ways to check for psycho freeness.",
    "start": "3834140",
    "end": "3839569"
  },
  {
    "text": "One is the depth research method where you keep on going down another.",
    "start": "3839570",
    "end": "3847250"
  },
  {
    "text": "The other one is to keep removing source vertices, vertices that have no no predecessor end to end and put them first in and in an ordering.",
    "start": "3847250",
    "end": "3856350"
  },
  {
    "text": "And you can complete the ordering. If, if and only if there's no cycles. And the advantage of the depth for search one is that it gives you the cycles, right, directly.",
    "start": "3856350",
    "end": "3866599"
  },
  {
    "text": "The other one gives it to you more indirect. But that's still there. So that gives a linear algorithm instead of instead of ends to the two plus.",
    "start": "3866600",
    "end": "3880970"
  },
  {
    "text": "And therefore, even Hopcroft and Ollman would believe that it's better.",
    "start": "3880970",
    "end": "3892800"
  },
  {
    "text": "The there's always a question on syntactic methods as to whether or not the constants ah.",
    "start": "3892800",
    "end": "3898250"
  },
  {
    "text": "Are so large that they that they would really apply to, to the problems that we're facing in a real computer program.",
    "start": "3898250",
    "end": "3907250"
  },
  {
    "text": "But in this case it's pretty clear that we got that not only is our algorithm linear, but it's very fact.",
    "start": "3907250",
    "end": "3912270"
  },
  {
    "text": "But it's it's very linear. Hardly anything to do. At each step. And would it would be able to grind up the answer.",
    "start": "3912270",
    "end": "3923750"
  },
  {
    "text": "Okay. This is what the reading waited to do this without enumerating all the possible configurations.",
    "start": "3923750",
    "end": "3933270"
  },
  {
    "text": "Kyra, because it's linear and but it's exponential in in things.",
    "start": "3933270",
    "end": "3939710"
  },
  {
    "text": "Yeah. And it's still in in the neighborhood of a few hundred.",
    "start": "3939710",
    "end": "3945550"
  },
  {
    "text": "So in cases that of interest still filled.",
    "start": "3945550",
    "end": "3951040"
  },
  {
    "text": "That's right. Try to try to do it symbolically if we can.",
    "start": "3951040",
    "end": "3957050"
  },
  {
    "text": "Just kind of. So the instincts of instincts are good on this.",
    "start": "3957050",
    "end": "3974580"
  },
  {
    "text": "Too bad that we haven't solved the problem, but I think we we got somewhere that that makes it so we don't have to be embarrassed about.",
    "start": "3974580",
    "end": "3987540"
  },
  {
    "text": "About not solving the whole affair. OK. So now you've got to fill out these forms.",
    "start": "3987540",
    "end": "3994560"
  },
  {
    "text": "And then Thursday is the real excitement for me anyway.",
    "start": "3994560",
    "end": "4000340"
  },
  {
    "text": "I hope you have fun between now and then. Oh, one last word on this.",
    "start": "4000340",
    "end": "4005450"
  },
  {
    "text": "When you're doing the problems with graphics, it seems to me that sometimes mistakes are are sometimes more interesting than the real the real thing.",
    "start": "4005450",
    "end": "4016970"
  },
  {
    "text": "And I know that I often hate to throw away some of the bugs that I get because the images are kind of kind of amusing to me anyway.",
    "start": "4016970",
    "end": "4026990"
  },
  {
    "text": "So if you walk if you want to bring in some of the class on Thursday,",
    "start": "4026990",
    "end": "4035390"
  },
  {
    "text": "some of the things that that fail is you were developing your final project that we might call one.",
    "start": "4035390",
    "end": "4043309"
  },
  {
    "text": "Look at those two, although we wouldn't display those. You can just, you know, shown to people who are interested in seeing pretty postcard or something of the things that the other of the floppy stuff,",
    "start": "4043310",
    "end": "4057650"
  },
  {
    "text": "because I think graphical bugs are are our lots of fun.",
    "start": "4057650",
    "end": "4063940"
  },
  {
    "text": "OK. So.",
    "start": "4063940",
    "end": "4087338"
  }
]