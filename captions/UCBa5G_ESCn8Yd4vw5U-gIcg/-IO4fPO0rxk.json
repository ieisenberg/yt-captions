[
  {
    "start": "0",
    "end": "6000"
  },
  {
    "start": "0",
    "end": "5340"
  },
  {
    "text": "Hi, In this module, I'm going\nto talk about constraint",
    "start": "5340",
    "end": "8550"
  },
  {
    "start": "6000",
    "end": "11000"
  },
  {
    "text": "satisfaction problems.",
    "start": "8550",
    "end": "9570"
  },
  {
    "start": "9570",
    "end": "12219"
  },
  {
    "start": "11000",
    "end": "55000"
  },
  {
    "text": "So before we get into the\nconstraint satisfaction",
    "start": "12220",
    "end": "14620"
  },
  {
    "text": "problems, I just want to revisit\nwhere we've been in the course.",
    "start": "14620",
    "end": "17770"
  },
  {
    "text": "We started off with\nmachine learning",
    "start": "17770",
    "end": "19960"
  },
  {
    "text": "and applied to reflex-based\nmodels such as classification",
    "start": "19960",
    "end": "24009"
  },
  {
    "text": "or regression where the\ngoal is just to output",
    "start": "24010",
    "end": "26710"
  },
  {
    "text": "a single number or a label.",
    "start": "26710",
    "end": "29470"
  },
  {
    "text": "And then we looked at\nstate-based models,",
    "start": "29470",
    "end": "32320"
  },
  {
    "text": "in which case the goal was\nto output a solution path.",
    "start": "32320",
    "end": "36520"
  },
  {
    "text": "And we thought in terms of\nstates, actions, and cost",
    "start": "36520",
    "end": "40120"
  },
  {
    "text": "or rewards.",
    "start": "40120",
    "end": "41530"
  },
  {
    "text": "And now we're going to\nembark on a new journey",
    "start": "41530",
    "end": "43930"
  },
  {
    "text": "through variable-based models.",
    "start": "43930",
    "end": "46390"
  },
  {
    "text": "It's going to be a new\nparadigm for modeling.",
    "start": "46390",
    "end": "49447"
  },
  {
    "text": "In which case, we're\ngoing to think in terms",
    "start": "49447",
    "end": "51280"
  },
  {
    "text": "of variables and factors.",
    "start": "51280",
    "end": "55190"
  },
  {
    "start": "55000",
    "end": "144000"
  },
  {
    "text": "So the heart of\nvariable-based models",
    "start": "55190",
    "end": "58449"
  },
  {
    "text": "is an object called\na factor graph.",
    "start": "58450",
    "end": "61030"
  },
  {
    "text": "We're going to define\nfactor graphs formally",
    "start": "61030",
    "end": "63129"
  },
  {
    "text": "in the next module.",
    "start": "63130",
    "end": "64610"
  },
  {
    "text": "But for now, let's just\ntry to give some intuition.",
    "start": "64610",
    "end": "67390"
  },
  {
    "text": "So a factor graph consists\nof a set of variables",
    "start": "67390",
    "end": "72250"
  },
  {
    "text": "usually denoted X1, X2, X3.",
    "start": "72250",
    "end": "75910"
  },
  {
    "text": "These are in circles.",
    "start": "75910",
    "end": "78190"
  },
  {
    "text": "And a factor graph\nalso contains a set",
    "start": "78190",
    "end": "80770"
  },
  {
    "text": "of factors usually\ndenoted f1, f2, f3, f4.",
    "start": "80770",
    "end": "85750"
  },
  {
    "text": "These are going\nto be in squares.",
    "start": "85750",
    "end": "87910"
  },
  {
    "text": "So now each factor,\nas you'll notice here,",
    "start": "87910",
    "end": "90880"
  },
  {
    "text": "touches a subset\nof the variables.",
    "start": "90880",
    "end": "94479"
  },
  {
    "text": "And so each factor is going to\nexpress some sort of preference",
    "start": "94480",
    "end": "98200"
  },
  {
    "text": "or determine the relationship\nthat a subset of variables has.",
    "start": "98200",
    "end": "103219"
  },
  {
    "text": "So for example, f2\nis going to specify",
    "start": "103220",
    "end": "105790"
  },
  {
    "text": "how X1 and X2 are related.",
    "start": "105790",
    "end": "108370"
  },
  {
    "text": "And f3 is going to specify\nhow X2 and X3 are related",
    "start": "108370",
    "end": "111730"
  },
  {
    "text": "and f4 is going to specify\nhow f3 should be related.",
    "start": "111730",
    "end": "117940"
  },
  {
    "text": "The objective of a constraint\nsatisfaction problem",
    "start": "117940",
    "end": "120460"
  },
  {
    "text": "is to find the best assignment\nof values to the variables",
    "start": "120460",
    "end": "124930"
  },
  {
    "text": "where we're going to define\nwhat best means in a second.",
    "start": "124930",
    "end": "129800"
  },
  {
    "text": "So let's look at an\nexample of a problem that",
    "start": "129800",
    "end": "135400"
  },
  {
    "text": "can be solved via constraint\nsatisfaction problem.",
    "start": "135400",
    "end": "138950"
  },
  {
    "text": "So here's map coloring,\na classic problem.",
    "start": "138950",
    "end": "142180"
  },
  {
    "text": "Here is a map of Australia.",
    "start": "142180",
    "end": "145150"
  },
  {
    "start": "144000",
    "end": "320000"
  },
  {
    "text": "We have a number of\nprovinces, 7 to be exact.",
    "start": "145150",
    "end": "149950"
  },
  {
    "text": "And each province, Western\nAustralia, Northern Territory,",
    "start": "149950",
    "end": "153580"
  },
  {
    "text": "South Australia, et cetera,\nhas to be assigned a color.",
    "start": "153580",
    "end": "158080"
  },
  {
    "text": "And the question is, how can we\ncolor each province either red,",
    "start": "158080",
    "end": "162410"
  },
  {
    "text": "green, or blue so that no two\nneighboring provinces have",
    "start": "162410",
    "end": "165580"
  },
  {
    "text": "the same color?",
    "start": "165580",
    "end": "166420"
  },
  {
    "text": "So you don't want Western\nAustralia and Northern",
    "start": "166420",
    "end": "169120"
  },
  {
    "text": "Territory to have\nthe same color.",
    "start": "169120",
    "end": "173760"
  },
  {
    "text": "So here is one\npossible solution.",
    "start": "173760",
    "end": "176129"
  },
  {
    "text": "We can call it\nWestern Australia,",
    "start": "176130",
    "end": "177630"
  },
  {
    "text": "red, Northern Territory,\ngreen, and so on.",
    "start": "177630",
    "end": "180130"
  },
  {
    "text": "And you can double check that\nno two adjacent provinces",
    "start": "180130",
    "end": "183720"
  },
  {
    "text": "have the same color here.",
    "start": "183720",
    "end": "186340"
  },
  {
    "text": "So now this is a\nsimple enough problem",
    "start": "186340",
    "end": "188069"
  },
  {
    "text": "that we can just\nsolve it by hand.",
    "start": "188070",
    "end": "190560"
  },
  {
    "text": "But as usual, we\nwant to ask, what",
    "start": "190560",
    "end": "192989"
  },
  {
    "text": "are the algorithmic principles\nor how do we come up",
    "start": "192990",
    "end": "195420"
  },
  {
    "text": "with something more general to\nsolve problems such as these",
    "start": "195420",
    "end": "199470"
  },
  {
    "text": "when we encounter them?",
    "start": "199470",
    "end": "201750"
  },
  {
    "text": "So before we talk about how\nwe do this with constraint",
    "start": "201750",
    "end": "204000"
  },
  {
    "text": "satisfaction problems,\nI want to revisit",
    "start": "204000",
    "end": "206640"
  },
  {
    "text": "how we might do it with\nas a state-based model",
    "start": "206640",
    "end": "212110"
  },
  {
    "text": "because that's the\nhammer we have.",
    "start": "212110",
    "end": "214360"
  },
  {
    "text": "So let's try to cast\nthis as a search problem.",
    "start": "214360",
    "end": "219320"
  },
  {
    "text": "So we're going to start\nwith initial state.",
    "start": "219320",
    "end": "223180"
  },
  {
    "text": "And this state is going to\nrepresent not having assigned",
    "start": "223180",
    "end": "226359"
  },
  {
    "text": "any provinces any colors.",
    "start": "226360",
    "end": "229090"
  },
  {
    "text": "And then from the state, we can\ntake three possible actions.",
    "start": "229090",
    "end": "232180"
  },
  {
    "text": "We can grab WA and assign\nit red, we can grab the WA",
    "start": "232180",
    "end": "236730"
  },
  {
    "text": "and assign it green, or you\ncan grab WA and assign it blue.",
    "start": "236730",
    "end": "242050"
  },
  {
    "text": "And from each of these\npoints, we can take--",
    "start": "242050",
    "end": "245230"
  },
  {
    "text": "NT and sign it red, green, or\nblue, red, green, or blue, red,",
    "start": "245230",
    "end": "250069"
  },
  {
    "text": "green, or blue.",
    "start": "250070",
    "end": "251210"
  },
  {
    "text": "And you can see here that this\nis a search tree as the ones",
    "start": "251210",
    "end": "255640"
  },
  {
    "text": "that we have studied before.",
    "start": "255640",
    "end": "257739"
  },
  {
    "text": "And at the very bottom\nof the search tree,",
    "start": "257740",
    "end": "261699"
  },
  {
    "text": "we have a complete assignment\nto all the variables.",
    "start": "261700",
    "end": "267340"
  },
  {
    "text": "And each assignment\nto all the variables",
    "start": "267340",
    "end": "269830"
  },
  {
    "text": "is going to be labeled\nwith either a 0",
    "start": "269830",
    "end": "273009"
  },
  {
    "text": "if it is inconsistent.",
    "start": "273010",
    "end": "275380"
  },
  {
    "text": "In other words, it\ndoesn't solve the problem.",
    "start": "275380",
    "end": "277420"
  },
  {
    "text": "Here the problem is that NT and\nSA are assigned the same color.",
    "start": "277420",
    "end": "281230"
  },
  {
    "text": "That's bad.",
    "start": "281230",
    "end": "282940"
  },
  {
    "text": "Here's another\ncomplete assignment.",
    "start": "282940",
    "end": "284560"
  },
  {
    "text": "This is also bad because WA\nand NT share the same color.",
    "start": "284560",
    "end": "289389"
  },
  {
    "text": "Here is an assignment\nthat is good.",
    "start": "289390",
    "end": "291170"
  },
  {
    "text": "And you can verify that\nall the provinces that",
    "start": "291170",
    "end": "294760"
  },
  {
    "text": "are neighboring each other\nhave different colors.",
    "start": "294760",
    "end": "297770"
  },
  {
    "text": "And this is going to be\ndenoted with a weight of 1.",
    "start": "297770",
    "end": "302250"
  },
  {
    "text": "So in general, each state here\nrepresents a partial assignment",
    "start": "302250",
    "end": "307410"
  },
  {
    "text": "of colors to variables.",
    "start": "307410",
    "end": "311860"
  },
  {
    "text": "And at the end of the\nday, we can simply",
    "start": "311860",
    "end": "314110"
  },
  {
    "text": "return any leaf\nthat is consistent.",
    "start": "314110",
    "end": "317030"
  },
  {
    "text": "For example this one.",
    "start": "317030",
    "end": "317920"
  },
  {
    "start": "317920",
    "end": "321370"
  },
  {
    "start": "320000",
    "end": "423000"
  },
  {
    "text": "So this is a perfectly fine\nway of solving this problem.",
    "start": "321370",
    "end": "326500"
  },
  {
    "text": "And it goes to show how powerful\nthe state-based models can be.",
    "start": "326500",
    "end": "331870"
  },
  {
    "text": "Just to recap.",
    "start": "331870",
    "end": "332889"
  },
  {
    "text": "The state here is a\npartial assignment",
    "start": "332890",
    "end": "334810"
  },
  {
    "text": "of colors to provinces.",
    "start": "334810",
    "end": "336669"
  },
  {
    "text": "And from each state\nand action, assigns",
    "start": "336670",
    "end": "340390"
  },
  {
    "text": "the next uncolored province\na compatible color.",
    "start": "340390",
    "end": "343930"
  },
  {
    "text": "So what's missing?",
    "start": "343930",
    "end": "345080"
  },
  {
    "text": "Why are we talking about\nthis when we already",
    "start": "345080",
    "end": "347740"
  },
  {
    "text": "know how to solve it\nusing a state-based model?",
    "start": "347740",
    "end": "350470"
  },
  {
    "text": "Well, the question is, can\nwe do better than this?",
    "start": "350470",
    "end": "353630"
  },
  {
    "text": "And the answer is going\nto be, yes because there",
    "start": "353630",
    "end": "356530"
  },
  {
    "text": "is more problem structure.",
    "start": "356530",
    "end": "358540"
  },
  {
    "text": "Let me say what I mean by that.",
    "start": "358540",
    "end": "360890"
  },
  {
    "text": "So notice that in\nthis problem, there's",
    "start": "360890",
    "end": "364510"
  },
  {
    "text": "just a bunch of provinces, they\nneed to get assigned colors.",
    "start": "364510",
    "end": "368230"
  },
  {
    "text": "It doesn't matter which\norder I assign the colors.",
    "start": "368230",
    "end": "372530"
  },
  {
    "text": "In other words, the\nvariable ordering",
    "start": "372530",
    "end": "374650"
  },
  {
    "text": "doesn't affect\ncorrectness, which",
    "start": "374650",
    "end": "377290"
  },
  {
    "text": "means that we can not just\nstick with a fixed ordering,",
    "start": "377290",
    "end": "380800"
  },
  {
    "text": "but we can optimize\nthis ordering.",
    "start": "380800",
    "end": "382603"
  },
  {
    "text": "And this is something\nthat inference algorithm",
    "start": "382603",
    "end": "384520"
  },
  {
    "text": "can do for us.",
    "start": "384520",
    "end": "386539"
  },
  {
    "text": "And secondly, the\nvariables here are",
    "start": "386540",
    "end": "390130"
  },
  {
    "text": "interdependent in\nonly a local way,",
    "start": "390130",
    "end": "393430"
  },
  {
    "text": "and we can decompose\nthe problem.",
    "start": "393430",
    "end": "396139"
  },
  {
    "text": "So for example, here\nwe see that Tasmania",
    "start": "396140",
    "end": "401950"
  },
  {
    "text": "is completely separated from\nthe rest of Australia, which",
    "start": "401950",
    "end": "405970"
  },
  {
    "text": "means that we can\neffectively solve the two",
    "start": "405970",
    "end": "409150"
  },
  {
    "text": "separate independent\nproblems separately",
    "start": "409150",
    "end": "412060"
  },
  {
    "text": "and just combine the solutions.",
    "start": "412060",
    "end": "413980"
  },
  {
    "text": "And this is as we'll\nsee later, is great",
    "start": "413980",
    "end": "417010"
  },
  {
    "text": "because it allows us to\nreally speed up search.",
    "start": "417010",
    "end": "420085"
  },
  {
    "start": "420085",
    "end": "423460"
  },
  {
    "start": "423000",
    "end": "538000"
  },
  {
    "text": "So variable-based\nmodels allow us",
    "start": "423460",
    "end": "427330"
  },
  {
    "text": "to capture these two\nadditional pieces of structure.",
    "start": "427330",
    "end": "431379"
  },
  {
    "text": "Variable-based models\nare an umbrella term",
    "start": "431380",
    "end": "433720"
  },
  {
    "text": "that include constraint\nsatisfaction problems, Markov",
    "start": "433720",
    "end": "437200"
  },
  {
    "text": "networks, and Bayesian\nnetworks which all of which",
    "start": "437200",
    "end": "439540"
  },
  {
    "text": "we're going to get through\nover the next few weeks.",
    "start": "439540",
    "end": "443320"
  },
  {
    "text": "And the key idea behind\nvariable-based models",
    "start": "443320",
    "end": "447070"
  },
  {
    "text": "is we want to think\nin terms of variables.",
    "start": "447070",
    "end": "449680"
  },
  {
    "text": "And in variable-based models,\na solution to a problem",
    "start": "449680",
    "end": "454330"
  },
  {
    "text": "is simply an assignment\nto the variables.",
    "start": "454330",
    "end": "457580"
  },
  {
    "text": "And so when you're modeling\nusing variable-based models,",
    "start": "457580",
    "end": "460389"
  },
  {
    "text": "we want to set up\na set of variables",
    "start": "460390",
    "end": "462200"
  },
  {
    "text": "so that the solution is an\nassignment to the variables.",
    "start": "462200",
    "end": "466960"
  },
  {
    "text": "And the decisions\nabout how to choose",
    "start": "466960",
    "end": "470470"
  },
  {
    "text": "the ordering of the\nvariables and how",
    "start": "470470",
    "end": "472300"
  },
  {
    "text": "to determine which\nvariables to set first,",
    "start": "472300",
    "end": "476409"
  },
  {
    "text": "this is going to be chosen\nby the inference algorithm.",
    "start": "476410",
    "end": "480790"
  },
  {
    "text": "And the key idea\nhere is that you",
    "start": "480790",
    "end": "483130"
  },
  {
    "text": "can think about variable-based\nmodels as a higher level",
    "start": "483130",
    "end": "486340"
  },
  {
    "text": "modeling language than\nstate-based models.",
    "start": "486340",
    "end": "488990"
  },
  {
    "text": "So here's an imperfect analogy\nfrom programming languages.",
    "start": "488990",
    "end": "492800"
  },
  {
    "text": "So if you were just trying\nto solve a problem directly",
    "start": "492800",
    "end": "496360"
  },
  {
    "text": "in an ad hoc way, that's\nwriting and assembling.",
    "start": "496360",
    "end": "499449"
  },
  {
    "text": "You just go at it.",
    "start": "499450",
    "end": "502330"
  },
  {
    "text": "If you were using C, or\nC++, that's kind of using",
    "start": "502330",
    "end": "509139"
  },
  {
    "text": "state-based models.",
    "start": "509140",
    "end": "510260"
  },
  {
    "text": "It gives you a higher level of\nabstraction, which is powerful",
    "start": "510260",
    "end": "514450"
  },
  {
    "text": "and allows you to save a\nlot of kind of headaches.",
    "start": "514450",
    "end": "518679"
  },
  {
    "text": "But variable-based models are\nkind of even a higher level",
    "start": "518679",
    "end": "521500"
  },
  {
    "text": "language like let's\nsay Python, which",
    "start": "521500",
    "end": "524380"
  },
  {
    "text": "allows you to think\npurely in terms of kind",
    "start": "524380",
    "end": "527980"
  },
  {
    "text": "of the variables\nand the modeling",
    "start": "527980",
    "end": "530123"
  },
  {
    "text": "and let the inference algorithm\ndo more of the work, which",
    "start": "530123",
    "end": "532540"
  },
  {
    "text": "is always good because then\nyou can spend more time doing",
    "start": "532540",
    "end": "535570"
  },
  {
    "text": "the fun stuff which is modeling.",
    "start": "535570",
    "end": "539230"
  },
  {
    "start": "538000",
    "end": "726000"
  },
  {
    "text": "So I'm going to talk about\nfirst constraint satisfaction",
    "start": "539230",
    "end": "543310"
  },
  {
    "text": "problems.",
    "start": "543310",
    "end": "544010"
  },
  {
    "text": "Constraint satisfaction\nproblems appear",
    "start": "544010",
    "end": "545980"
  },
  {
    "text": "in a number of\napplications most of which",
    "start": "545980",
    "end": "548829"
  },
  {
    "text": "revolve around large scale\nlogistics, scheduling,",
    "start": "548830",
    "end": "551890"
  },
  {
    "text": "and supply chain management.",
    "start": "551890",
    "end": "553990"
  },
  {
    "text": "So companies such as\nAmazon have to figure out",
    "start": "553990",
    "end": "556630"
  },
  {
    "text": "how to put packages on\nvehicles and deliver them",
    "start": "556630",
    "end": "560000"
  },
  {
    "text": "to customers and at the\nsame time minimizing",
    "start": "560000",
    "end": "563170"
  },
  {
    "text": "costs and meeting all those\npromised delivery times.",
    "start": "563170",
    "end": "566930"
  },
  {
    "text": "And so here the variables might\nbe the assignment of packages",
    "start": "566930",
    "end": "571899"
  },
  {
    "text": "to vehicles and the\nfactors would include",
    "start": "571900",
    "end": "575680"
  },
  {
    "text": "travel times and various costs.",
    "start": "575680",
    "end": "578110"
  },
  {
    "text": "So ridesharing services\nsuch as Uber and Lyft",
    "start": "578110",
    "end": "580630"
  },
  {
    "text": "also have to figure out how to\nbest assign drivers to riders.",
    "start": "580630",
    "end": "585010"
  },
  {
    "text": "And all of these are extensions\nof the classical vehicle",
    "start": "585010",
    "end": "588040"
  },
  {
    "text": "routing problem.",
    "start": "588040",
    "end": "590209"
  },
  {
    "text": "Here's another example\nfrom sports scheduling.",
    "start": "590210",
    "end": "592750"
  },
  {
    "text": "So the NFL every year\nthey have to schedule",
    "start": "592750",
    "end": "596260"
  },
  {
    "text": "which teams play\nwhich other teams",
    "start": "596260",
    "end": "598690"
  },
  {
    "text": "and when these games\nare going to be held.",
    "start": "598690",
    "end": "602080"
  },
  {
    "text": "And the schedule\nhere should minimize",
    "start": "602080",
    "end": "604300"
  },
  {
    "text": "travel times between teams.",
    "start": "604300",
    "end": "607959"
  },
  {
    "text": "They have to be a time where\nthey fit the TV broadcast",
    "start": "607960",
    "end": "610720"
  },
  {
    "text": "schedule, you want to be\nfair across teams and so on.",
    "start": "610720",
    "end": "616240"
  },
  {
    "text": "So other scheduling\nproblems such as these",
    "start": "616240",
    "end": "619899"
  },
  {
    "text": "also involve assigning\ncourses to slots.",
    "start": "619900",
    "end": "624400"
  },
  {
    "text": "So the registrar\noffice has a number",
    "start": "624400",
    "end": "626410"
  },
  {
    "text": "of courses that need to\nbe offered every quarter",
    "start": "626410",
    "end": "628810"
  },
  {
    "text": "and they have to figure\nout which classrooms",
    "start": "628810",
    "end": "631210"
  },
  {
    "text": "to have these courses in and\nwhat various time slots, again,",
    "start": "631210",
    "end": "635620"
  },
  {
    "text": "training off various\nconstraints like preferences",
    "start": "635620",
    "end": "638260"
  },
  {
    "text": "and availability.",
    "start": "638260",
    "end": "642200"
  },
  {
    "text": "So a final application of\nconstraint satisfaction",
    "start": "642200",
    "end": "646330"
  },
  {
    "text": "problems is a little\nbit different,",
    "start": "646330",
    "end": "648130"
  },
  {
    "text": "and this is called the\nformal verification",
    "start": "648130",
    "end": "651670"
  },
  {
    "text": "of circuits and programs.",
    "start": "651670",
    "end": "654050"
  },
  {
    "text": "So say you have a\ncomputer program",
    "start": "654050",
    "end": "655660"
  },
  {
    "text": "and you want to prove that\nthis program is correct.",
    "start": "655660",
    "end": "659371"
  },
  {
    "text": "Let's say the program is\ntrying to do something",
    "start": "659372",
    "end": "661330"
  },
  {
    "text": "like sort numbers.",
    "start": "661330",
    "end": "663830"
  },
  {
    "text": "So here what you can do is\nnormally you would let's say,",
    "start": "663830",
    "end": "668200"
  },
  {
    "text": "test the program, design a bunch\nof test cases, run the program",
    "start": "668200",
    "end": "671350"
  },
  {
    "text": "and see what happens.",
    "start": "671350",
    "end": "672459"
  },
  {
    "text": "But this, how do\nyou know for sure",
    "start": "672460",
    "end": "674380"
  },
  {
    "text": "that it works on all inputs?",
    "start": "674380",
    "end": "676520"
  },
  {
    "text": "So this is where\nverification comes in.",
    "start": "676520",
    "end": "678760"
  },
  {
    "text": "You want to actually check\nthat it works for all inputs.",
    "start": "678760",
    "end": "683030"
  },
  {
    "text": "So the way you\nwould set this up is",
    "start": "683030",
    "end": "684580"
  },
  {
    "text": "that you define a\nset of variables",
    "start": "684580",
    "end": "686630"
  },
  {
    "text": "which corresponds to the\nunknown inputs to the program.",
    "start": "686630",
    "end": "690760"
  },
  {
    "text": "And then the factors\nencode the program itself.",
    "start": "690760",
    "end": "693850"
  },
  {
    "text": "It's going to encode how\nexecution proceeds line",
    "start": "693850",
    "end": "697060"
  },
  {
    "text": "to line.",
    "start": "697060",
    "end": "698080"
  },
  {
    "text": "And then you're going to ask the\nquestion whether there exists",
    "start": "698080",
    "end": "702310"
  },
  {
    "text": "a program input that produces\nan error or an incorrect result.",
    "start": "702310",
    "end": "707630"
  },
  {
    "text": "So unlike the other applications\nof CSPs where you're",
    "start": "707630",
    "end": "711610"
  },
  {
    "text": "trying to find a\nsatisfying assignment,",
    "start": "711610",
    "end": "715060"
  },
  {
    "text": "in formal verification,\nyou're trying",
    "start": "715060",
    "end": "717010"
  },
  {
    "text": "to prove that no such satisfying\nassignment exists because that",
    "start": "717010",
    "end": "722500"
  },
  {
    "text": "would mean an error\nin your program.",
    "start": "722500",
    "end": "724435"
  },
  {
    "start": "724435",
    "end": "727090"
  },
  {
    "start": "726000",
    "end": "830000"
  },
  {
    "text": "So here is a roadmap for the\nrest of the modules on CSPs.",
    "start": "727090",
    "end": "732030"
  },
  {
    "text": "So first, we're going to\ntalk about the definition",
    "start": "732030",
    "end": "735600"
  },
  {
    "text": "of a constraint satisfaction\nproblem and factor graphs,",
    "start": "735600",
    "end": "738959"
  },
  {
    "text": "do it more formally.",
    "start": "738960",
    "end": "740310"
  },
  {
    "text": "Then we're going to give\na few examples of CSPs.",
    "start": "740310",
    "end": "743640"
  },
  {
    "text": "Then we're going to\nmove over to inference.",
    "start": "743640",
    "end": "746040"
  },
  {
    "text": "We're going to start by talking\nabout backtracking search",
    "start": "746040",
    "end": "749670"
  },
  {
    "text": "which is in the worst case\nexponential time unfortunately.",
    "start": "749670",
    "end": "754620"
  },
  {
    "text": "But there are a number of\nways to speed up search.",
    "start": "754620",
    "end": "757080"
  },
  {
    "text": "Taking full\nadvantage of the fact",
    "start": "757080",
    "end": "758610"
  },
  {
    "text": "that we can assign\nvariables in any order,",
    "start": "758610",
    "end": "760680"
  },
  {
    "text": "we can look at dynamic ordering\nwhich we're using heuristics",
    "start": "760680",
    "end": "765300"
  },
  {
    "text": "to figure out which\nvariables are assigned first.",
    "start": "765300",
    "end": "768450"
  },
  {
    "text": "And then we're going to\nlook at a pruning strategy",
    "start": "768450",
    "end": "770910"
  },
  {
    "text": "based on arc consistency,\nwhich is going",
    "start": "770910",
    "end": "773519"
  },
  {
    "text": "to allow us to prune out\nvarious values for each",
    "start": "773520",
    "end": "777690"
  },
  {
    "text": "of the variables which\nare not promising",
    "start": "777690",
    "end": "780330"
  },
  {
    "text": "to explore so that dynamic\nordering can be much more",
    "start": "780330",
    "end": "784050"
  },
  {
    "text": "effective.",
    "start": "784050",
    "end": "786390"
  },
  {
    "text": "But in case you're\nimpatient and don't",
    "start": "786390",
    "end": "788400"
  },
  {
    "text": "want to wait an\nX amount of time,",
    "start": "788400",
    "end": "790500"
  },
  {
    "text": "but you're satisfied with\nan approximate solution,",
    "start": "790500",
    "end": "793980"
  },
  {
    "text": "you can also do\napproximate search.",
    "start": "793980",
    "end": "796199"
  },
  {
    "text": "So here there's two\nalgorithms, beam search,",
    "start": "796200",
    "end": "798900"
  },
  {
    "text": "which is kind of a extension\nof the greedy search algorithm.",
    "start": "798900",
    "end": "804360"
  },
  {
    "text": "But it's a little bit smarter.",
    "start": "804360",
    "end": "805680"
  },
  {
    "text": "It's going to explore\nonly a small fraction",
    "start": "805680",
    "end": "808890"
  },
  {
    "text": "of the exponentially\nsized search tree.",
    "start": "808890",
    "end": "811590"
  },
  {
    "text": "And local search is going to\ntake an initial assignment",
    "start": "811590",
    "end": "814410"
  },
  {
    "text": "to all the variables\nand just trying",
    "start": "814410",
    "end": "816449"
  },
  {
    "text": "to improve it by changing\none variable at a time.",
    "start": "816450",
    "end": "820630"
  },
  {
    "text": "All right.",
    "start": "820630",
    "end": "821130"
  },
  {
    "text": "So that's it for\nthis overview module.",
    "start": "821130",
    "end": "824450"
  },
  {
    "start": "824450",
    "end": "829000"
  }
]