[
  {
    "text": "This presentation is delivered by the Stanford Center for Professional Development.",
    "start": "1100",
    "end": "13080"
  },
  {
    "text": "OK. Welcome. Welcome to the 17th annual Christmas Tree Lecture.",
    "start": "13080",
    "end": "22070"
  },
  {
    "text": "As many of you know, every year for quite a number of years,",
    "start": "22070",
    "end": "27640"
  },
  {
    "text": "I take this time to tell you sort of the coolest thing I learned about trees during the year.",
    "start": "27640",
    "end": "35090"
  },
  {
    "text": "Trees are the greatest, probably the greatest thing unique. Over that, computer science has added to mathematics in some ways.",
    "start": "35090",
    "end": "44220"
  },
  {
    "text": "And and so many things are going on that would never run out of of brand new things that I'm learning about trees.",
    "start": "44220",
    "end": "53990"
  },
  {
    "text": "And this here certainly was no exception. It's really nice to see so many old friends here tonight.",
    "start": "53990",
    "end": "62180"
  },
  {
    "text": "And I must say, I'm in a kind of a mellow mood now because this afternoon was the party that Stanford throws for its emeritus faculty.",
    "start": "62180",
    "end": "70910"
  },
  {
    "text": "And I hope I didn't drink too much wine. And also, I have to say, I am I I'm celebrating a good year.",
    "start": "70910",
    "end": "82340"
  },
  {
    "text": "My wife and I had our fiftieth wedding anniversary in in in June about.",
    "start": "82340",
    "end": "91219"
  },
  {
    "text": "And. And among other things, you know.",
    "start": "91220",
    "end": "96530"
  },
  {
    "text": "And another sort of a lifelong dream came true also just a few weeks ago when when I got this book in the.",
    "start": "96530",
    "end": "104490"
  },
  {
    "text": "Let's see if Jason can can put that on camera. This this book came out and I guess the bookstore actually has it outside.",
    "start": "104490",
    "end": "115799"
  },
  {
    "text": "Now, this is I'm going to show you just quickly what this is because because they say it's something I sort of always dreamed would would be nice.",
    "start": "115800",
    "end": "127470"
  },
  {
    "text": "It's an index to everything I wrote, basically. I certainly hope so.",
    "start": "127470",
    "end": "134610"
  },
  {
    "text": "You want to know how many times I referred to Alan Perlis right here, you know? OK. And a lot of lot of you in the audience are also mentioned.",
    "start": "134610",
    "end": "142200"
  },
  {
    "text": "OK. But, you know, there's all the titles in various languages.",
    "start": "142200",
    "end": "148470"
  },
  {
    "text": "Other things I did and which paper I wrote a little annotation was about.",
    "start": "148470",
    "end": "154170"
  },
  {
    "text": "And, you know, all the books and the people who translated them and in different editions and so on.",
    "start": "154170",
    "end": "160720"
  },
  {
    "text": "And at the beginning, all the problems that I submitted to various journals with ah ah ah given over the years.",
    "start": "160720",
    "end": "169470"
  },
  {
    "text": "And then the answers are only given to the ones that hadn't been published yet.",
    "start": "169470",
    "end": "175260"
  },
  {
    "text": "Otherwise I have a reference to the thing. And you know, a few other and then there's a 150 pages or so of interviews that were taped 15 years ago.",
    "start": "175260",
    "end": "186360"
  },
  {
    "text": "And I've sort of just talking about stuff, so. Oh, this is a picture of me when I was a fraternity, went through [INAUDIBLE] week an undergraduate.",
    "start": "186360",
    "end": "196739"
  },
  {
    "text": "I'm I'm talking a little bit about my undergraduate. Anyway, that's what this book is. And it's up it's distributed in Chicago. And the distributor doesn't have it on his kid's catalog till February.",
    "start": "196740",
    "end": "208230"
  },
  {
    "text": "So Amazon isn't telling it till February. But at Stanford bookstore, you can get it now. So that's this book makes me happy. So, you know, life is full of ups and downs and and it's nice to celebrate ups once in a while.",
    "start": "208230",
    "end": "220510"
  },
  {
    "text": "So that's what I'm so proud of, the way I'm feeling now. So tonight, the subject is what are your Bayesian trees and BDD and.",
    "start": "220510",
    "end": "233310"
  },
  {
    "text": "And so I want to. And I think it it's going to be, as they say, cool things about trees.",
    "start": "233310",
    "end": "240690"
  },
  {
    "text": "But I think and I hope you enjoy it, too. First, I want to talk about a very general idea which goes out across many different fields.",
    "start": "240690",
    "end": "251970"
  },
  {
    "text": "And I'm going to call it factor models.",
    "start": "251970",
    "end": "258049"
  },
  {
    "text": "And and they say it arises many different disciplines, and I'll just give you one simple example and I'll and I'll say a Sabai J.",
    "start": "258050",
    "end": "270500"
  },
  {
    "text": "Times B, sub J. K l times see some some k m.",
    "start": "270500",
    "end": "275750"
  },
  {
    "text": "Let's say where where I j. K, l and M r indices that belong to various domains.",
    "start": "275750",
    "end": "285200"
  },
  {
    "text": "I mean, you might say that they're either they might be binary or they might be, you know, they might range from zero to 100 or something like that or they might be from any, any domain.",
    "start": "285200",
    "end": "297320"
  },
  {
    "text": "You like the A's and B's and C's. Ah. Ah ah ah ah ah.",
    "start": "297320",
    "end": "302330"
  },
  {
    "text": "Numbers. Usually they're real positive numbers, but they could be complex numbers or whatever.",
    "start": "302330",
    "end": "309990"
  },
  {
    "text": "But but I'm going to multiply them together so I what. I want them to be number. And so now. Oh you can think of this as somehow representing a system of five particles that can be various states.",
    "start": "309990",
    "end": "327110"
  },
  {
    "text": "And I j k l and M o this five tuple tells the various states that that these particles can be in and.",
    "start": "327110",
    "end": "339930"
  },
  {
    "text": "And I call this product the weight i j k l m m.",
    "start": "339930",
    "end": "348050"
  },
  {
    "text": "So. So this is the weight associated with that state. You can think of it as importance or equal or or how often the state is.",
    "start": "348050",
    "end": "357569"
  },
  {
    "text": "But anyway, abstractly, it's just the product of these numbers. But we call it the weight now.",
    "start": "357570",
    "end": "363240"
  },
  {
    "text": "So for example, if these A.J. on them are binary, then there's two times, two times, two times to the 32 different states possible.",
    "start": "363240",
    "end": "371479"
  },
  {
    "text": "If there are if these are, say, digits zero to nine, then there's a 10 to the fifth.",
    "start": "371480",
    "end": "377820"
  },
  {
    "text": "You know. One hundred thousand states.",
    "start": "377820",
    "end": "383510"
  },
  {
    "text": "But at the end. Maybe I can go in one domain and you could be in another domain.",
    "start": "383510",
    "end": "389190"
  },
  {
    "text": "You know, each. Each one could be different. But anyway, that's the idea. Now, Aissa by J. Is is basically a matrix of numbers.",
    "start": "389190",
    "end": "397789"
  },
  {
    "text": "So if these are our digits, then it's a ten by 10 matrix. C is also a matrix.",
    "start": "397790",
    "end": "403340"
  },
  {
    "text": "But B is a Tenzer might be ten by ten by ten, for example.",
    "start": "403340",
    "end": "409280"
  },
  {
    "text": "So it's a bunch of numbers that that you multiply together and you get the weights of a state.",
    "start": "409280",
    "end": "416389"
  },
  {
    "text": "Now in. If we're thinking of these as probabilities,",
    "start": "416390",
    "end": "422090"
  },
  {
    "text": "then the probability of being in in this state would be w o of ija j k l m divided",
    "start": "422090",
    "end": "430699"
  },
  {
    "text": "by ws da star star star star which is defined to be but the total weight.",
    "start": "430700",
    "end": "442400"
  },
  {
    "text": "And that's the sum overall. IJI k l m of w i j k l m.",
    "start": "442400",
    "end": "451629"
  },
  {
    "text": "Okay. So this is, this is if the weights are are are not negative then we, then we can, then we can use this probability.",
    "start": "451630",
    "end": "463990"
  },
  {
    "text": "But in of the examples they don't have to be. But, but, but the majority of all examples they are.",
    "start": "463990",
    "end": "471319"
  },
  {
    "text": "So now this is this very general thing called a factor model and it rises in many different cases.",
    "start": "471320",
    "end": "477180"
  },
  {
    "text": "I'm going to give you a whole bunch of examples. First of all, you start with a new page.",
    "start": "477180",
    "end": "483919"
  },
  {
    "text": "So statistical physics as it is, is one of the great big examples.",
    "start": "483920",
    "end": "492110"
  },
  {
    "text": "So statistical physics, these are called gibs states. And instead of a Sabai Jay, the physicist often would write that as E to the minus Vayda times alpha IJA,",
    "start": "492110",
    "end": "508820"
  },
  {
    "text": "let's say where beta is is the reciprocal of the temperature and alpha IJA is the energy associated with with that interaction between particles.",
    "start": "508820",
    "end": "525230"
  },
  {
    "text": "I nj instant's I j. And yet in statistical physics up there thinking of lots,",
    "start": "525230",
    "end": "534860"
  },
  {
    "text": "lots of particles that can be in various kinds of states of magnetism or spin or whatever and.",
    "start": "534860",
    "end": "541339"
  },
  {
    "text": "But you get, you get weight associated with their energy and the temperature in this in this physical way.",
    "start": "541340",
    "end": "547520"
  },
  {
    "text": "And that in physics they this this total a function here is called the partition function of their on their system.",
    "start": "547520",
    "end": "555290"
  },
  {
    "text": "Okay, so that's one well one important set of models, another one database theory.",
    "start": "555290",
    "end": "563899"
  },
  {
    "text": "Database theory really factor miles come up there too. But in the skies lately, in this case they do these things, A, AIG, B are either zero or one and.",
    "start": "563900",
    "end": "580190"
  },
  {
    "text": "And in this thing they will. They will say that, for example, AIG is zero or one equals one.",
    "start": "580190",
    "end": "588170"
  },
  {
    "text": "If if I j is it.",
    "start": "588170",
    "end": "593740"
  },
  {
    "text": "It is a member of a relation. It is a relational database relation IJA.",
    "start": "593740",
    "end": "600560"
  },
  {
    "text": "So, so, so we have that. This will be a database with three relations in it. I, J, J, K, L and K am. And then the set of all i j k l m of with aig b j k l c k an equal one.",
    "start": "600560",
    "end": "625850"
  },
  {
    "text": "This is called the natural join. Of the three relations and or you join together given relations.",
    "start": "625850",
    "end": "634459"
  },
  {
    "text": "And it corresponds to a product really in this, this way.",
    "start": "634460",
    "end": "639590"
  },
  {
    "text": "And so sort of weak connection there. But it's connection between statistical physics and database theory that sort of approaches this.",
    "start": "639590",
    "end": "648829"
  },
  {
    "text": "When the temperature gets infinite, infinite now. However, in its discomfit, if you really think in a small number of states,",
    "start": "648830",
    "end": "656900"
  },
  {
    "text": "while I enjoy you have a big Rangin in big databases and on case smaller number of particles.",
    "start": "656900",
    "end": "664530"
  },
  {
    "text": "OK, now. Now, third example, constraint. Satisfaction problem is becoming so important.",
    "start": "664530",
    "end": "671990"
  },
  {
    "text": "It's now called CSP. I mean, database theory is D.B., I guess.",
    "start": "671990",
    "end": "677040"
  },
  {
    "text": "OK. But strange satisfaction. Problems and constraint, satisfaction problems are also often of this form where where where we have zero one factors.",
    "start": "677040",
    "end": "696610"
  },
  {
    "text": "And then now we're trying to satisfy all of the all of the constraints.",
    "start": "696610",
    "end": "703510"
  },
  {
    "text": "So h. I j represents a certain constraint here. Here it is constraint satisfaction from this usually rare.",
    "start": "703510",
    "end": "710750"
  },
  {
    "text": "To have to have a solution to all up to all of these case well, in the database are used usually have lots and lots of tuples.",
    "start": "710750",
    "end": "718440"
  },
  {
    "text": "And then you have to do other things with him. But now you can also, while it didn't have to be zero zero or one valued here, if you wanted to have things that have,",
    "start": "718440",
    "end": "730990"
  },
  {
    "text": "for example, if if the weights were one and two or one in some large number, then we would then we might try to maximize.",
    "start": "730990",
    "end": "739270"
  },
  {
    "text": "We would track try to find a state that's maximal. OK, for example, take dissatisfy ability, problem, satisfy ability.",
    "start": "739270",
    "end": "749110"
  },
  {
    "text": "Problem is, is the most famous constraint satisfaction problem where we where these are, where these represent clauses of where this would say maybe I or J is true and this would say J.",
    "start": "749110",
    "end": "761890"
  },
  {
    "text": "Or K or L and then Dissatisfy ability problem. You try to, you have lots of clauses and you try to find values of the boolean variables so that all the clauses are true.",
    "start": "761890",
    "end": "773630"
  },
  {
    "text": "And and that's a special case of the constraint satisfaction problem. And there's lots and lots of real world problems that come this problem of Max that could be represented,",
    "start": "773630",
    "end": "783649"
  },
  {
    "text": "this as trying to find a configurations that that are somehow had the maximum weight.",
    "start": "783650",
    "end": "791260"
  },
  {
    "text": "OK. Now, fourth one example is baozi networks and again, factor models.",
    "start": "791260",
    "end": "803800"
  },
  {
    "text": "Very important. And let me show you one sort of a diagram here.",
    "start": "803800",
    "end": "808959"
  },
  {
    "text": "I have I with an arrow coming down here to J. And I'll put a label, a hat on top of that nine arrow G to L and also an arrow from K-Tel.",
    "start": "808960",
    "end": "820770"
  },
  {
    "text": "And I'll put a B there. And then I have an arrow here and with a C on top of it.",
    "start": "820770",
    "end": "827080"
  },
  {
    "text": "And in this case, we might say that AIG is the probability of J.",
    "start": "827080",
    "end": "834100"
  },
  {
    "text": "Given I am b j k l is the probability of L, given J and K and C similarly c K.M. is the probability of M given K.",
    "start": "834100",
    "end": "849029"
  },
  {
    "text": "And then often they add another one. They put a D here.",
    "start": "849030",
    "end": "854920"
  },
  {
    "text": "And CDI is the prior probability of I, for example, of being in State I.",
    "start": "854920",
    "end": "860860"
  },
  {
    "text": "And so then oh it might as well have a prior here on, on, on K as well.",
    "start": "860860",
    "end": "867640"
  },
  {
    "text": "And so then you could figure then the total weight would turn out to be one.",
    "start": "867640",
    "end": "874750"
  },
  {
    "text": "And we'd get the probability that I add in a certain state and then given the state of IE.",
    "start": "874750",
    "end": "880630"
  },
  {
    "text": "There's a certain chance that that J. That, that this variable is in state J.",
    "start": "880630",
    "end": "888880"
  },
  {
    "text": "And so on. OK, so this probability in that case, the weight is it is a probability.",
    "start": "888880",
    "end": "899890"
  },
  {
    "text": "Now in in in all of these examples, we could, we could normalize the things so that the total weight is one year because you could just scale any of these.",
    "start": "899890",
    "end": "908380"
  },
  {
    "text": "You know, you just multiply any of these guys by a by a positive constant, non zero constant.",
    "start": "908380",
    "end": "916990"
  },
  {
    "text": "You pick the weight one. Well, it's a case of of nine negative variables. And. And so a lot of people spend a lot of time dividing these things out.",
    "start": "916990",
    "end": "928580"
  },
  {
    "text": "But when you're working with algorithms, it's often you system scaling is arbitrary.",
    "start": "928580",
    "end": "934720"
  },
  {
    "text": "I don't want to you know, I don't wanna to do the mathematics where I keep dividing and normalizing all the time.",
    "start": "934720",
    "end": "941379"
  },
  {
    "text": "Rather just consider it a simple case where I summing all the time and it's the",
    "start": "941380",
    "end": "946630"
  },
  {
    "text": "probability is proportional to to this weight could not equal to to the weight.",
    "start": "946630",
    "end": "952690"
  },
  {
    "text": "And so I'm thinking of it. Are these not of these these matrices and these.",
    "start": "952690",
    "end": "958200"
  },
  {
    "text": "And you know, eat this data by will be a vector use of cabi a vector. These letters in vectors and Tensas. I'm thinking of these in a projective sense where any positive multiple of the of the Matrix,",
    "start": "958200",
    "end": "970090"
  },
  {
    "text": "it gives you essentially the same matrix or tensor or vector or whatever.",
    "start": "970090",
    "end": "976030"
  },
  {
    "text": "OK. Any questions so far. So that's. No idea factor model.",
    "start": "976030",
    "end": "981520"
  },
  {
    "text": "And so a lot of people have been studying these on and off.",
    "start": "981520",
    "end": "988470"
  },
  {
    "text": "And they all have their own notations for it and they aren't. They all have their own problems that they've got they've focused on.",
    "start": "988470",
    "end": "995730"
  },
  {
    "text": "And I'm not sure if they're talking to each other as much as they as as they should be. But I have seen paper biophysicist that are talking about Bayesian network SOI.",
    "start": "995730",
    "end": "1006500"
  },
  {
    "text": "So it's getting folks are there there's some some communication going on now.",
    "start": "1006500",
    "end": "1012100"
  },
  {
    "text": "As I as I pointed out, when I when I introduced this book, I've written a whole bunch of books. But everyone's will have to stop and read something, too.",
    "start": "1012100",
    "end": "1019340"
  },
  {
    "text": "And so this summer I you know, I had to go into input mode and I and I and I began to read some things that I should have read ages ago.",
    "start": "1019340",
    "end": "1028250"
  },
  {
    "text": "And I and I began to learn more about Bayesian networks in particular. And and I and I learned about a really cool idea that that that Judea Pearl introduced in the 80s.",
    "start": "1028250",
    "end": "1047620"
  },
  {
    "text": "And let me let me say a few few words for and we think that the physicist actually have it.",
    "start": "1047620",
    "end": "1057220"
  },
  {
    "text": "So it rises a lot in A.I. artificial intelligence. But research. But the physicist, I think, have a better in some ways better notation for these for a lot of the applications",
    "start": "1057220",
    "end": "1070419"
  },
  {
    "text": "alone that the people who work in A.I.M. draw these directed graphs.",
    "start": "1070420",
    "end": "1077160"
  },
  {
    "text": "There's a good good point for that, too. But for a lot of the manipulations that we're actually doing in calculation,",
    "start": "1077160",
    "end": "1084140"
  },
  {
    "text": "I like the physicists simple model first, which is really connects it with the mathematical idea of a hyper graph.",
    "start": "1084140",
    "end": "1090710"
  },
  {
    "text": "And so let me let me read. Let me draw the physicists diagram for that small factory model of it's it's it consists of square boxes and circles.",
    "start": "1090710",
    "end": "1107350"
  },
  {
    "text": "And I put the state variables in circles and I put the the names of the matrices or",
    "start": "1107350",
    "end": "1116179"
  },
  {
    "text": "vectors or functions or whatever they are in square boxes and it's always alternating. You always have a circle to square box and the square box to circle. You never have two circles adjacent, never have to square boxes adjacent.",
    "start": "1116180",
    "end": "1127669"
  },
  {
    "text": "So this is a bipartite graph. It has two parts. It has the the estate parts and it has the function parts.",
    "start": "1127670",
    "end": "1134990"
  },
  {
    "text": "And then you have a line joining each function to the dict, to the to the states that that occur.",
    "start": "1134990",
    "end": "1140020"
  },
  {
    "text": "The ace ace of IJA means acres joint I and J. And, and so on.",
    "start": "1140020",
    "end": "1145310"
  },
  {
    "text": "And this this way of looking at it simplifies a lot of the issues. And in a case like this, you notice there's no cycled or no loops in the diagram.",
    "start": "1145310",
    "end": "1155330"
  },
  {
    "text": "And that's where we get to the connection with trees. I think the IDC, the nashed, the definition of a free tree is that it in graph theory is that there is a cycle.",
    "start": "1155330",
    "end": "1168540"
  },
  {
    "text": "And so if if you don't have a free tree, well, you might be able to break it up.",
    "start": "1168540",
    "end": "1176810"
  },
  {
    "text": "It's that into into pieces that are. But but anyway, Lipke, let let's imagine that we're working with free trees like this one.",
    "start": "1176810",
    "end": "1185030"
  },
  {
    "text": "And for this, there's a beautiful way to calculate like like this.",
    "start": "1185030",
    "end": "1191370"
  },
  {
    "text": "This total waste. And also, by the way, I also should mention other thing that people often want to calculate, and that's what they call marginals.",
    "start": "1191370",
    "end": "1201950"
  },
  {
    "text": "And that would be a sun like W star, star, K star star where where I put a few stars, but not all all the stars.",
    "start": "1201950",
    "end": "1213620"
  },
  {
    "text": "And that would be the sum over I g, l and M but not K of of the waves.",
    "start": "1213620",
    "end": "1221390"
  },
  {
    "text": "All right. So, so inject one of the things you want to find out,",
    "start": "1221390",
    "end": "1227930"
  },
  {
    "text": "get a lot of application is what's the probability that that one part of it has a particular state,",
    "start": "1227930",
    "end": "1233470"
  },
  {
    "text": "some overall of the all of the variables in the others. So taking the proper weight into account. OK.",
    "start": "1233470",
    "end": "1240820"
  },
  {
    "text": "So so when you have a tree hypergrowth like this, then Pearl found a beautiful way to calculate all of the all of the marginals for all of the.",
    "start": "1240820",
    "end": "1253059"
  },
  {
    "text": "OK. This one has five marginals. You could fix. I you could fix Jay or so.",
    "start": "1253060",
    "end": "1258380"
  },
  {
    "text": "All of the marginal efficient. If you end, end, end state variables, you know, you can get all in March marginals by passing messages between the nodes of this graph.",
    "start": "1258380",
    "end": "1271789"
  },
  {
    "text": "For example, you know, there might be some some messages that go from B to K. And those messages tell node K.",
    "start": "1271790",
    "end": "1279580"
  },
  {
    "text": "About this part of the graph and then there will also be messages from Kate to be that tell be about this part of the graph.",
    "start": "1279580",
    "end": "1288610"
  },
  {
    "text": "And these messages are computed by doing multiplications and additions in a very clever way, choreographed so that there never any loops you can use.",
    "start": "1288610",
    "end": "1299320"
  },
  {
    "text": "You have to do a few left, a few messages going this way and then you have enough to get some messages coming the other way.",
    "start": "1299320",
    "end": "1306070"
  },
  {
    "text": "But it just works out that a beautiful, beautiful dance where where every everybody finally at the end, they know all the marginals end up.",
    "start": "1306070",
    "end": "1317470"
  },
  {
    "text": "It's linear time. Well, you you have to do a small. You have to you have to work. It depends on the size of the matrix or the tensor or something at each.",
    "start": "1317470",
    "end": "1328870"
  },
  {
    "text": "At each show. Each vector node. But basically it's about as fast as you could imagine to calculate all these marginal by a very clever way of of of combining the calculation.",
    "start": "1328870",
    "end": "1340490"
  },
  {
    "text": "And. And it's called belief propagation.",
    "start": "1340490",
    "end": "1345640"
  },
  {
    "text": "This algorithm. And and it at that.",
    "start": "1345640",
    "end": "1354040"
  },
  {
    "text": "And when I first saw it in July, I thought, oh yeah, I should definitely talk about it at Christmas time because it because it's really",
    "start": "1354040",
    "end": "1360850"
  },
  {
    "text": "nice the way the three of these things come together and and and the book.",
    "start": "1360850",
    "end": "1366929"
  },
  {
    "text": "So I looked at had some really complicated explanations that I thought could be simplified when I hope anyway.",
    "start": "1366930",
    "end": "1375270"
  },
  {
    "text": "But a week later, I thought of another idea. So I'm talking about not gonna talk about belief propagation today.",
    "start": "1375270",
    "end": "1380770"
  },
  {
    "text": "I just use as an introduction to the general area. I want to show you that I ran across something that's even because what I ran across this has even more to do with trees than than belief propagation.",
    "start": "1380770",
    "end": "1394120"
  },
  {
    "text": "So this is really. So so now I'm finally getting to the title where I'm talking about Bayesian trees and.",
    "start": "1394120",
    "end": "1402120"
  },
  {
    "text": "And so here goes. Let's consider a Bayesian network that has the form of a binary tree or star turn and turn a new page in.",
    "start": "1402120",
    "end": "1413380"
  },
  {
    "text": "We have a Bayesian binary tree.",
    "start": "1413380",
    "end": "1419860"
  },
  {
    "text": "And so I have a note. So I'm going to be using a new model.",
    "start": "1419860",
    "end": "1425950"
  },
  {
    "text": "Now I'm going to call this state variable Q and put A here and then I'm going to has a branch down to R and two S.",
    "start": "1425950",
    "end": "1434590"
  },
  {
    "text": "So this is a binary tree. It means that there are two children up at most of every,",
    "start": "1434590",
    "end": "1440740"
  },
  {
    "text": "every node I call is B and C then s has a branch down here to T, a. has a branch down here to you.",
    "start": "1440740",
    "end": "1449320"
  },
  {
    "text": "And another one to V call is D E F and then you know, it's going to be done in a minute.",
    "start": "1449320",
    "end": "1458620"
  },
  {
    "text": "But as you know, I'm running out of letters. So there's W and there's X, Y and Z.",
    "start": "1458620",
    "end": "1465760"
  },
  {
    "text": "And that's it. OK. So h i j. OK, so. So here. So here this case, the weight functions are a six.",
    "start": "1465760",
    "end": "1473190"
  },
  {
    "text": "So the weight of the state. Q last Tuesday is A Q times B Q are c q s d s t e t u v f tv.",
    "start": "1473190",
    "end": "1489129"
  },
  {
    "text": "G as. W h w x i x, y and g.",
    "start": "1489130",
    "end": "1495750"
  },
  {
    "text": "Y, Z, and this could be thought of as the probability of prior probability of Q times, the probability of our given Q probably s given Q and so on and so on until we get probability of Z, given X.",
    "start": "1495750",
    "end": "1509820"
  },
  {
    "text": "And this is this is your weight of state. Q r s all the way through C.",
    "start": "1509820",
    "end": "1516730"
  },
  {
    "text": "Okay, so factor model based on a binary tree. Now let's so let's imagine that the states now are binary.",
    "start": "1516730",
    "end": "1526980"
  },
  {
    "text": "So each each QR, STF one through Z. There's ten of them each, each can be the zero or one.",
    "start": "1526980",
    "end": "1534929"
  },
  {
    "text": "So I have two to the of states nine thousand twenty four states of the system and a A is equal to a zero a one.",
    "start": "1534930",
    "end": "1547110"
  },
  {
    "text": "This is a vector. The others are matrices. So be it is B C through three J.",
    "start": "1547110",
    "end": "1556309"
  },
  {
    "text": "Ah ah ah ah. Two by two. Matrices of complex numbers let's say.",
    "start": "1556310",
    "end": "1564720"
  },
  {
    "text": "And. Now the thing is, instead of just calculating marginals, I want to consider computing a much more general thing,",
    "start": "1564720",
    "end": "1573150"
  },
  {
    "text": "which is the sum of the of all the weights of Q R s and so on up to Z subject to the condition that F of Q,",
    "start": "1573150",
    "end": "1583700"
  },
  {
    "text": "R and so on through Z is one where F is any boolean function whatsoever.",
    "start": "1583700",
    "end": "1589159"
  },
  {
    "text": "So, so either Boolean variable zero or one and I can you know, up to like have all kind of boolean functions that describe a condition on these ten variables.",
    "start": "1589160",
    "end": "1599429"
  },
  {
    "text": "That's either true or false. And so I'm going to some not not not just to get marginals where, you know,",
    "start": "1599430",
    "end": "1606650"
  },
  {
    "text": "the function for the function for a marginal like a like s, you know, W of star star s and all stars.",
    "start": "1606650",
    "end": "1619080"
  },
  {
    "text": "That would correspond to F equals S s equals one.",
    "start": "1619080",
    "end": "1625980"
  },
  {
    "text": "And then S equals zero would be the opposite case at once. I know the whole the whole thing. But here I hear I lot.",
    "start": "1625980",
    "end": "1634310"
  },
  {
    "text": "I wonder what if if we wanted to calculate in any fact in in a binary factor model of this kind.",
    "start": "1634310",
    "end": "1643350"
  },
  {
    "text": "Oh. Wanted to calculate the much more general kinds of of of sums of the weights.",
    "start": "1643350",
    "end": "1653549"
  },
  {
    "text": "Now of course some moving functions are much easier than others.",
    "start": "1653550",
    "end": "1661380"
  },
  {
    "text": "The simple marginals that are normally computed are about as simple as you can get.",
    "start": "1661380",
    "end": "1668510"
  },
  {
    "text": "Very simple boolean functions, no ands and is or anything is just a projection function. Now, my front, my method isn't going to work efficiently on every four on a rebooting function, but it's going to work.",
    "start": "1668510",
    "end": "1679460"
  },
  {
    "text": "Actually, it does work very nicely on great many other functions that are quite different from marginals.",
    "start": "1679460",
    "end": "1686000"
  },
  {
    "text": "And so I'm going to illustrate it in a special case. And the case that I want to show you in detail is where this function is equal to the function that says the sum of the variables is equal to M.",
    "start": "1686000",
    "end": "1704450"
  },
  {
    "text": "Exactly. M m of the M ones.",
    "start": "1704450",
    "end": "1709659"
  },
  {
    "text": "And in this case, 10 minus M zero. Okay. So exactly. M nodes in state one. So, for example, if M equals five, there are exactly.",
    "start": "1709660",
    "end": "1730279"
  },
  {
    "text": "Ten choose five. 252 of the ten, twenty four states have five ones and five zero.",
    "start": "1730280",
    "end": "1743410"
  },
  {
    "text": "In fact, though, if I had if I had anodes and I and I went to half the half the number of states,",
    "start": "1743410",
    "end": "1753670"
  },
  {
    "text": "you know, and no, I would have and choose and over to, let's say and is even.",
    "start": "1753670",
    "end": "1760380"
  },
  {
    "text": "And this is up. If you came to last year's Christmas tree lecture, you'll know that that was equal to two to the.",
    "start": "1760380",
    "end": "1765870"
  },
  {
    "text": "And over a square root of pi and over two. But that was last year anyway. I keep talking about. I know. But something that's related to trees.",
    "start": "1765870",
    "end": "1774010"
  },
  {
    "text": "But this was different. How the. So one way to to to evaluate this obviously then would be just to somehow, you know,",
    "start": "1774010",
    "end": "1782500"
  },
  {
    "text": "to add up to our fifty two terms or and multiply out for each one and you could save a little time.",
    "start": "1782500",
    "end": "1790450"
  },
  {
    "text": "Some of the terms are similar however you know and gets large.",
    "start": "1790450",
    "end": "1795490"
  },
  {
    "text": "This is, this is not a good idea. Go through to the end goes very fast. So I'm going to. So the method I'm going to show you for this problem takes order to enter the two point six number of operations.",
    "start": "1795490",
    "end": "1812169"
  },
  {
    "text": "As you know, no matter how large and his. And so you could do it easily for if N was, you know, ten thousand years or something like that.",
    "start": "1812170",
    "end": "1823560"
  },
  {
    "text": "Right. Quickly and tell. Not at all. OK. So.",
    "start": "1823560",
    "end": "1829150"
  },
  {
    "text": "So that's the setup. I got out of a binary tree. And I've got a boolean function. This is surely the example of this particular symmetric boolean function.",
    "start": "1829150",
    "end": "1842740"
  },
  {
    "text": "But it works. My method will work for unsymmetrical ends. And lots of other cases, as I'll show you after you understand that.",
    "start": "1842740",
    "end": "1850860"
  },
  {
    "text": "The simple case. Right.",
    "start": "1850860",
    "end": "1857920"
  },
  {
    "text": "So now, in order to give you an algorithm. I've got to have I got you.",
    "start": "1857920",
    "end": "1864340"
  },
  {
    "text": "I use some more flexible notation because there's this alphabetic node. You run out of letters pretty quickly. I like to do it in lectures because actually Oilor did that in his papers.",
    "start": "1864340",
    "end": "1876370"
  },
  {
    "text": "He would always go instead of using indices one, two, three. He would use a for the first coefficient and B for the second and so on.",
    "start": "1876370",
    "end": "1884330"
  },
  {
    "text": "And he got a lot of mileage out of that. But then after a while you quit.",
    "start": "1884330",
    "end": "1890990"
  },
  {
    "text": "When I talk to computer you need to have a systematic thing. So I'm gonna redraw that tree.",
    "start": "1890990",
    "end": "1896530"
  },
  {
    "text": "And so I'm I'm given a binary tree with end nodes. And I and I number the nodes in.",
    "start": "1896530",
    "end": "1908990"
  },
  {
    "text": "In in preorder, which is the order of succession to the throne.",
    "start": "1908990",
    "end": "1915200"
  },
  {
    "text": "So here I go. So. So here's the example of the tree that I had a minute ago.",
    "start": "1915200",
    "end": "1923470"
  },
  {
    "text": "And have 10 no's and. And so this is the the king or the queen.",
    "start": "1923470",
    "end": "1929380"
  },
  {
    "text": "And then this is the first born and then the. And then it gets, you know, the next one.",
    "start": "1929380",
    "end": "1935260"
  },
  {
    "text": "If these two are dead, that becomes key. Is this queen is this one in three and then four and then they're left children and so on.",
    "start": "1935260",
    "end": "1945590"
  },
  {
    "text": "And so this is preorder of the note and.",
    "start": "1945590",
    "end": "1952929"
  },
  {
    "text": "And then I'm also given a affected weight function W of X one through X and which is the product overall.",
    "start": "1952930",
    "end": "1963820"
  },
  {
    "text": "K of a weight.",
    "start": "1963820",
    "end": "1972909"
  },
  {
    "text": "Based on. State of of of KEH and its parent parent node's, so that would mean like if case seven, that would mean it's a it's a function of X seven and X three.",
    "start": "1972910",
    "end": "1992870"
  },
  {
    "text": "The parent of three of seven is three. And so in this particular example, there should be a capital, DWC capital W of X one through extending into a tree here would be not w one of X1.",
    "start": "1992870",
    "end": "2009580"
  },
  {
    "text": "X1 has no parent. Then there's W two of X one X two, w three, x one, x three and so on, ending up with W 10 x eight x 10.",
    "start": "2009580",
    "end": "2023149"
  },
  {
    "text": "That's the that's the ins in general for any binary tree.",
    "start": "2023150",
    "end": "2028670"
  },
  {
    "text": "We can put it in preorder and we can give it a wait function like this.",
    "start": "2028670",
    "end": "2034220"
  },
  {
    "text": "Now I'm also I'm going to assume without any law as a generality that the left's the size of the",
    "start": "2034220",
    "end": "2041150"
  },
  {
    "text": "left subtree is less than or equal to the size of the right subtree at every note of the tree.",
    "start": "2041150",
    "end": "2050090"
  },
  {
    "text": "If not, I could swap them around and we can renumber them. You can preorder swapping. This is gonna make the algorithm more work better.",
    "start": "2050090",
    "end": "2060079"
  },
  {
    "text": "And I've done this already in the in our example, so I don't have to redraw the thing.",
    "start": "2060080",
    "end": "2065389"
  },
  {
    "text": "OK. Now the idea is I want to calculate this.",
    "start": "2065390",
    "end": "2071480"
  },
  {
    "text": "This function of something W's overall X1 through X 10 that satisfy the function that here I want x1 plus the sum of the",
    "start": "2071480",
    "end": "2087080"
  },
  {
    "text": "variables to equal m some some given number of of of one bits among the among the ten variables in this particular case.",
    "start": "2087080",
    "end": "2097510"
  },
  {
    "text": "OK. Now we can do this by setting up a nice little bottom up recursion.",
    "start": "2097510",
    "end": "2105140"
  },
  {
    "text": "Well, I want to get ahead of myself to let let me first describe some some other good art.",
    "start": "2105140",
    "end": "2117829"
  },
  {
    "text": "First of all, I. Are you with me so far? Somebody ask a question to see.",
    "start": "2117830",
    "end": "2124680"
  },
  {
    "text": "You don't even know how to ask a question. Two is there's two is it is all over everybody's head.",
    "start": "2124680",
    "end": "2131599"
  },
  {
    "text": "Well, yeah. You've got to if you wouldn't mind, could you give us some examples with this particular tree and how it's, you know, how.",
    "start": "2131600",
    "end": "2140040"
  },
  {
    "text": "OK, well, I mean, for example. Yeah.",
    "start": "2140040",
    "end": "2145990"
  },
  {
    "text": "I could say this is state zero. This is in state one. I got zeroes here.",
    "start": "2145990",
    "end": "2151030"
  },
  {
    "text": "Okay. Oh.",
    "start": "2151030",
    "end": "2156140"
  },
  {
    "text": "Zero zero. These are all each one zero zero.",
    "start": "2156140",
    "end": "2162980"
  },
  {
    "text": "OK. I have it. One, two, three, one, two, three, four, five, six, seven, eight, nine, ten. OK. So now this. I would have to I would have to take a zero.",
    "start": "2162980",
    "end": "2174630"
  },
  {
    "text": "Well w w one of zero times w two of zero comma one w three of zero comma zero.",
    "start": "2174630",
    "end": "2187349"
  },
  {
    "text": "In other words this is zero. That W three. Of of this guy w four of this is known for and its parent is.",
    "start": "2187350",
    "end": "2199570"
  },
  {
    "text": "It is one and I end up with w ten of one zero.",
    "start": "2199570",
    "end": "2204750"
  },
  {
    "text": "Are you with me on that. So, so in other words for any, any of the 1024 ways I can put zeros and ones in here, I get a wait now.",
    "start": "2204750",
    "end": "2215250"
  },
  {
    "text": "And these are, these are numbers they're given but like W three zero zero zero one one zero one one.",
    "start": "2215250",
    "end": "2224940"
  },
  {
    "text": "These are these are four different numbers. There might be three. Eight minus two. Whatever. OK, multiply all those together. And I'm going to try to add up all of these products with the problem.",
    "start": "2224940",
    "end": "2236020"
  },
  {
    "text": "But for the cases that say all that, they're exactly five ones in here. This is this this one this particular case doesn't work out.",
    "start": "2236020",
    "end": "2244610"
  },
  {
    "text": "So. So that's the problem that I'm trying to trying to get at in general. And it's like the kind of problem this solve about systems of states.",
    "start": "2244610",
    "end": "2253410"
  },
  {
    "text": "Instead of saying, I want to I want to know what's the probability that this particular guy is his magnetized or not.",
    "start": "2253410",
    "end": "2261690"
  },
  {
    "text": "Instead, I want to say, what's the probability that this whole system happens to have an magnetize state?",
    "start": "2261690",
    "end": "2267630"
  },
  {
    "text": "OK. OK. Now, however, they're usually they usually have to work on more complicated networks and binary trees to bet.",
    "start": "2267630",
    "end": "2279930"
  },
  {
    "text": "But once we've got a binary tree, I'm all set to calculate these things. OK. But it illustrates a lot of ideas that we use when we study binary.",
    "start": "2279930",
    "end": "2288480"
  },
  {
    "text": "When we do deal with binary trees in general. And that's what I want to show, you know.",
    "start": "2288480",
    "end": "2294090"
  },
  {
    "text": "So I got this. This overall weight function. But I'm going to divide it into it, into parts.",
    "start": "2294090",
    "end": "2302310"
  },
  {
    "text": "So I'm gonna say w some I. Which only depends on the last variables X.",
    "start": "2302310",
    "end": "2307830"
  },
  {
    "text": "I threw X in. And this is gonna be the product of all the W K's functions of of of X j x k.",
    "start": "2307830",
    "end": "2319530"
  },
  {
    "text": "These are. This is the parent of and J is the parent of Node K.",
    "start": "2319530",
    "end": "2327180"
  },
  {
    "text": "Well that don't involve any of the variables before X I.",
    "start": "2327180",
    "end": "2333359"
  },
  {
    "text": "So this means that J has to be greater or equal to. I end up like it's, it's easy to, to see in this example what I'm, what I mean by this.",
    "start": "2333360",
    "end": "2345530"
  },
  {
    "text": "So w one is just w it's the whole function. W two is a function of X two through X 10.",
    "start": "2345530",
    "end": "2354300"
  },
  {
    "text": "It's the story we throw away X1. And so we so I leave off the first two terms.",
    "start": "2354300",
    "end": "2361150"
  },
  {
    "text": "What we had the we had the terms here. I'm sorry. Where did I have it written down here.",
    "start": "2361150",
    "end": "2369600"
  },
  {
    "text": "The double x1 appeared in this term. Appeared in this term and this term. But but but this one starts out a W-4. Keep our tree in mind here.",
    "start": "2369600",
    "end": "2381440"
  },
  {
    "text": "You can see the tree up there. Yeah. So the W4 of X three and X four of times, W5 and et cetera, et cetera, X for X for X five.",
    "start": "2381440",
    "end": "2397650"
  },
  {
    "text": "And all of the other ones, that's W2 W three is the same as W2.",
    "start": "2397650",
    "end": "2404829"
  },
  {
    "text": "But but W4 is going to is going to throw out anything that had a W three in it.",
    "start": "2404830",
    "end": "2412230"
  },
  {
    "text": "And that'll include this to this, this guy here, which also WS kind of had a connection between three and seven.",
    "start": "2412230",
    "end": "2419900"
  },
  {
    "text": "Anyway, I've got this w some idea and, and I'm going to build up to get the whole function by working on these W I's.",
    "start": "2419900",
    "end": "2430039"
  },
  {
    "text": "So working just on the tail end and getting up to the up to the root finally.",
    "start": "2430040",
    "end": "2436290"
  },
  {
    "text": "Now I'm also going to have something that I.",
    "start": "2436290",
    "end": "2441960"
  },
  {
    "text": "That is, is a technical but easy to understand. Once I, once I write it down I hope this is what I. S sub js is depending children when I'm.",
    "start": "2441960",
    "end": "2454650"
  },
  {
    "text": "When I met. No J. And and I'll write down the definition of, you know, if you don't understand this.",
    "start": "2454650",
    "end": "2462059"
  },
  {
    "text": "Now you can always watch this on the Internet. You watch this. You can watch this video over 10 times.",
    "start": "2462060",
    "end": "2467070"
  },
  {
    "text": "I'm sure you'll get it. It's really easy. So this is all the.",
    "start": "2467070",
    "end": "2473550"
  },
  {
    "text": "All the X case where K is. It is a right.",
    "start": "2473550",
    "end": "2478860"
  },
  {
    "text": "Child. Of some.",
    "start": "2478860",
    "end": "2484990"
  },
  {
    "text": "No, I. Where I is is between J and K.",
    "start": "2484990",
    "end": "2490420"
  },
  {
    "text": "Now, this is this is so technical definition. It's only for the people who are watching on the on the video can all show you what it what it means intuitively.",
    "start": "2490420",
    "end": "2498579"
  },
  {
    "text": "As we as as we go through the tree. But if we if we look at this tree, for example, and say J equals four,",
    "start": "2498580",
    "end": "2509770"
  },
  {
    "text": "then I'm saying imagine all of those that are bigger than four that have sort of been spawned by somebody.",
    "start": "2509770",
    "end": "2522010"
  },
  {
    "text": "Their parent is less than four. And so that's seven. Seven seven.",
    "start": "2522010",
    "end": "2527680"
  },
  {
    "text": "Is bigger than four. But its parent is three, which is less than four. And up and up. I'll draw it. I'll draw the S's.",
    "start": "2527680",
    "end": "2536920"
  },
  {
    "text": "And then. And I think you'll see the idea. So s one is always it's always empty.",
    "start": "2536920",
    "end": "2542890"
  },
  {
    "text": "You can't get there's nothing less than one. S two in this case is X three because three is bigger than two.",
    "start": "2542890",
    "end": "2553299"
  },
  {
    "text": "And. And the parent of three is less than two is three is again empty as four is S X seven.",
    "start": "2553300",
    "end": "2564620"
  },
  {
    "text": "As I told you a minute ago, s five. Can anybody guess what s five is going to be?",
    "start": "2564620",
    "end": "2569950"
  },
  {
    "text": "It's gotta be bigger than five, but it has its parent has to be less than five, six and seven.",
    "start": "2569950",
    "end": "2577180"
  },
  {
    "text": "Good X X, X seven. Okay. Now those are you who have played a round binary trees are going to realize this is sort",
    "start": "2577180",
    "end": "2584470"
  },
  {
    "text": "of a stack that that that when I when I go down when I go down the tree from one to two,",
    "start": "2584470",
    "end": "2590800"
  },
  {
    "text": "I put three on the stack. Okay. And then then they come over here to three and I take it take it off the stack again and I put but then I go down to four",
    "start": "2590800",
    "end": "2600099"
  },
  {
    "text": "and I put seven on the stack and then I put six on the stack and in the past five ticks ticks and I take it off again.",
    "start": "2600100",
    "end": "2609220"
  },
  {
    "text": "So it's six sixty seven. That's seven is empty again as eight. Also empty as nine is X ten and and s ten always is and is always empty.",
    "start": "2609220",
    "end": "2622570"
  },
  {
    "text": "So the stacks always starts empty and ends Antek. But it's sort of these things that are pending as we're going down we're waiting for.",
    "start": "2622570",
    "end": "2631180"
  },
  {
    "text": "We haven't process them yet. We you know, we've got we got a handle little extra work because this is a tree, not just a straight line.",
    "start": "2631180",
    "end": "2638740"
  },
  {
    "text": "OK, now. And we were clever by putting the the making all of the right side.",
    "start": "2638740",
    "end": "2645640"
  },
  {
    "text": "The right subtree is bigger than the left subtree so that we didn't have too many things pending. I could have had a bad tree where lots of things depending pending that put stuff in the stack as it's gone, that would slow things down.",
    "start": "2645640",
    "end": "2656380"
  },
  {
    "text": "So it's nice that the stack doesn't get too big. But the general rule is S.J plus one,",
    "start": "2656380",
    "end": "2663549"
  },
  {
    "text": "there are three cases at it and one case is where J is is a childless node node with that has had nothing below it.",
    "start": "2663550",
    "end": "2677020"
  },
  {
    "text": "And in that case I take S.J and I and I remove X J plus one from the left.",
    "start": "2677020",
    "end": "2683060"
  },
  {
    "text": "It's always the nature of of preorder is that if I ever have a child is node J then then J plus one x J plus one has to be at the stack.",
    "start": "2683060",
    "end": "2697810"
  },
  {
    "text": "That's the way preorder works. You know the next guy after I have to get a child is person.",
    "start": "2697810",
    "end": "2704650"
  },
  {
    "text": "The next person to not in preorder is the one you know is the.",
    "start": "2704650",
    "end": "2713260"
  },
  {
    "text": "It turned out is going to be what the company has to be king next. And that's gonna be the guy I had at the top of the stack. And it's in this method.",
    "start": "2713260",
    "end": "2722970"
  },
  {
    "text": "If if Jay has one child. The only child, he always has to be called J.",
    "start": "2722970",
    "end": "2733300"
  },
  {
    "text": "Plus one. In preorder, if you have only one child, that's the way preorder goes.",
    "start": "2733300",
    "end": "2738770"
  },
  {
    "text": "You always after you number the node. You no, it's it's left child or or or it's right jolliffe.",
    "start": "2738770",
    "end": "2746940"
  },
  {
    "text": "There's no left job. And second, and similarly or finally, if if Jay has two kids.",
    "start": "2746940",
    "end": "2757260"
  },
  {
    "text": "So two children of J. Plus one is one of them. And the other one is, is, is K in that case. I put X K to the left.",
    "start": "2757260",
    "end": "2767339"
  },
  {
    "text": "SJ So. So that's the way we build this stack as we're going down whenever we get to a node that has two two children.",
    "start": "2767340",
    "end": "2775980"
  },
  {
    "text": "It'll be J plus one and K. I throw X K onto the stack.",
    "start": "2775980",
    "end": "2782500"
  },
  {
    "text": "And if you think you know if, if there was just one child then I just leave the stack the same.",
    "start": "2782500",
    "end": "2787810"
  },
  {
    "text": "If it had no children, I happen to know that that stack at the left hand had had this guy J plus one.",
    "start": "2787810",
    "end": "2796050"
  },
  {
    "text": "And I can. I can. I can. So. So this is a stack. It's first in. First out. First in.",
    "start": "2796050",
    "end": "2803040"
  },
  {
    "text": "First out. The behavior of these of these X's as we.",
    "start": "2803040",
    "end": "2810000"
  },
  {
    "text": "As we run down the tree. I'll say.",
    "start": "2810000",
    "end": "2815560"
  },
  {
    "text": "Now, what's the point of all this? Well, our goal it is to calculate the summation of all W of X one through extend such that X one plus the sum of all the bits is equal to M.",
    "start": "2815560",
    "end": "2841010"
  },
  {
    "text": "And and we can we can do this bottom up by computing it, but by computing the following functions.",
    "start": "2841010",
    "end": "2848820"
  },
  {
    "text": "When I say T of J. Now, this is this is something that you want to rewind.",
    "start": "2848820",
    "end": "2854320"
  },
  {
    "text": "And when you're watching that tape, you want to rewind this once, but then you get it.",
    "start": "2854320",
    "end": "2859830"
  },
  {
    "text": "Teeth of J of X as J and capital SJ.",
    "start": "2859830",
    "end": "2865050"
  },
  {
    "text": "So T.J., is it. It is a function depending on S and on X j.",
    "start": "2865050",
    "end": "2871260"
  },
  {
    "text": "And however many variables there are an estimated. There might be none. There might be several. And this is defined to be the summation of the W.",
    "start": "2871260",
    "end": "2884550"
  },
  {
    "text": "J of X J through x n.",
    "start": "2884550",
    "end": "2889770"
  },
  {
    "text": "Such that x j. The sum of of of all these binary variables equals s.",
    "start": "2889770",
    "end": "2898160"
  },
  {
    "text": "You know, I have to do a more general problem in order to solve the special.",
    "start": "2898160",
    "end": "2903369"
  },
  {
    "text": "This is the special problem that I'm trying to get. But in order to do this, I'm going to have to do some problems that are of the same form.",
    "start": "2903370",
    "end": "2909550"
  },
  {
    "text": "And I working working bottom up by this recursive conduct or inductive process.",
    "start": "2909550",
    "end": "2915160"
  },
  {
    "text": "And this is the some sum over all. All X K that are not in SJ and K is bigger than J.",
    "start": "2915160",
    "end": "2929010"
  },
  {
    "text": "So can't be J. So. So all of the things that are not NJ Extra, I'm going to sum over the other variables are fixed there in X,",
    "start": "2929010",
    "end": "2938510"
  },
  {
    "text": "J is in here and I'll add any variables that are in the capital s sub J in that on the stack.",
    "start": "2938510",
    "end": "2944530"
  },
  {
    "text": "Those ficke variables are also fixed. I'm going to sum over all the other put extras going some over all the way to that.",
    "start": "2944530",
    "end": "2950780"
  },
  {
    "text": "That's some function or other. And and at the top of the tree.",
    "start": "2950780",
    "end": "2957410"
  },
  {
    "text": "Let me give you an example, because that's what you're going to ask. Right. So let's suppose, for example, J equals six.",
    "start": "2957410",
    "end": "2965820"
  },
  {
    "text": "An S equals two and six equals zero and X seven equals one.",
    "start": "2965820",
    "end": "2973610"
  },
  {
    "text": "And let's remember, that s six was X seven.",
    "start": "2973610",
    "end": "2979730"
  },
  {
    "text": "So now that's. So in other work here, T six of two, comma zero.",
    "start": "2979730",
    "end": "2985700"
  },
  {
    "text": "That's Exec X Jay Capital S of J is is X seven.",
    "start": "2985700",
    "end": "2991130"
  },
  {
    "text": "So this is one. So I have a here a function of of three three variables and this is going to be the summation overall X is that aren't in this thing.",
    "start": "2991130",
    "end": "3004450"
  },
  {
    "text": "So this is the sum over X eight x nine x ten of W six of zero one x eight x nine ten.",
    "start": "3004450",
    "end": "3019089"
  },
  {
    "text": "That's X J through X. And because I happen to know that X six is zero and seven is one subject to the condition that X eight plus X nine plus X ten is equal to what.",
    "start": "3019090",
    "end": "3034480"
  },
  {
    "text": "Well S is two.",
    "start": "3034480",
    "end": "3039880"
  },
  {
    "text": "So I want the sum of all five variables to be two. So therefore X eight, nine, ten had better be equal to one.",
    "start": "3039880",
    "end": "3048549"
  },
  {
    "text": "All right. Because I. Because I know I already got one one in here and so. OK. So, so, so. So. So this is this is one of the functions that that will want to compute hour by hour by hour method.",
    "start": "3048550",
    "end": "3062070"
  },
  {
    "text": "And it's supposed to is supposed to be B of this form. So that's an example. And and the point is that it has a simple recursion that solves this at the very bottom.",
    "start": "3062070",
    "end": "3075060"
  },
  {
    "text": "We have t s s x n capital s sabeen is always empty.",
    "start": "3075060",
    "end": "3081210"
  },
  {
    "text": "So it's just T.S.A. at the bottom. And this is this is a simple fact. It's a sum over no variables. And so it turns out to be to be X and equals S T to zero or one.",
    "start": "3081210",
    "end": "3095490"
  },
  {
    "text": "And it's you have to understand what the what the summation means, but it's either zero or one is.",
    "start": "3095490",
    "end": "3101800"
  },
  {
    "text": "It says that it's it's one if x n equals Esposito's or also depends on the value X and but that's the way we get going.",
    "start": "3101800",
    "end": "3112890"
  },
  {
    "text": "And then of going going up the tree to some J. S x j SJ has three cases.",
    "start": "3112890",
    "end": "3122050"
  },
  {
    "text": "Again, the court expanded to the child estate or not. R.J., one one kid, one child, and Jay has two.",
    "start": "3122050",
    "end": "3134510"
  },
  {
    "text": "He has two children, Jay plus one and K. And so in each case we can calculate this all, write it down just so that you get the idea.",
    "start": "3134510",
    "end": "3144150"
  },
  {
    "text": "So it'll be X minus X J. X, J. Plus one. S.J plus one in this case.",
    "start": "3144150",
    "end": "3154360"
  },
  {
    "text": "And that makes sense because S.J plus one, it was obtained by throwing out X this variable out of it was it was in S.J, but not in RSJ plus one.",
    "start": "3154360",
    "end": "3170770"
  },
  {
    "text": "In this case, it's T of all. It's the submission on X J plus one, some summation exchange plus one of W.J. plus one extra.",
    "start": "3170770",
    "end": "3188020"
  },
  {
    "text": "Try a new formula here. Some Asian X J over X, J, plus one of W.J. plus one, this weight function of x J and x ray plus one.",
    "start": "3188020",
    "end": "3198760"
  },
  {
    "text": "That's that particular function. Times this to subdue. Plus one X minus as I saw.",
    "start": "3198760",
    "end": "3206980"
  },
  {
    "text": "S minus six J. X ray plus one. S.J plus one. And it in the third case where there's two kids.",
    "start": "3206980",
    "end": "3217240"
  },
  {
    "text": "It's, it's very similar. I'll write it quickly if something over x ray plus one x k and you have two of these guys.",
    "start": "3217240",
    "end": "3226720"
  },
  {
    "text": "W.K. of exchange x k and then is a T.J. plus one.",
    "start": "3226720",
    "end": "3231880"
  },
  {
    "text": "And in here it's estimated at six J. S minus X j.",
    "start": "3231880",
    "end": "3238890"
  },
  {
    "text": "Like I shouldn't have had that class one x K plus one extra plus one in S J plus one.",
    "start": "3238890",
    "end": "3247720"
  },
  {
    "text": "And this S.J plus one is equal to X, K and S.J.",
    "start": "3247720",
    "end": "3253930"
  },
  {
    "text": "So it X K does appear in the right place there and makes some sense.",
    "start": "3253930",
    "end": "3260950"
  },
  {
    "text": "So that's the that, that's the recurrent. And we don't have to do this for all values of s.",
    "start": "3260950",
    "end": "3269140"
  },
  {
    "text": "We only have to do it for values of S that are, that are going to contribute to the final sum.",
    "start": "3269140",
    "end": "3274599"
  },
  {
    "text": "So I can, I can restrict it to the case that s is is greater than or equal to the maximum of zero and M plus one minus J.",
    "start": "3274600",
    "end": "3286810"
  },
  {
    "text": "And, and, and the biggest as can be. And, and matter to the final answer is M and plus one.",
    "start": "3286810",
    "end": "3294640"
  },
  {
    "text": "Minus two. Anyway this is all part of the algorithm and no other values of S would contribute to the two Ts T1, which is our final, our, our final goal.",
    "start": "3294640",
    "end": "3304540"
  },
  {
    "text": "And each of these steps, no matter which case we're in, each of these steps of the worst cases that we do six multiplications in and three editions.",
    "start": "3304540",
    "end": "3313030"
  },
  {
    "text": "So I I've got this program on the web if you want to.",
    "start": "3313030",
    "end": "3318220"
  },
  {
    "text": "If you're really interested that you want to play with it. If you look under tree probs on my Web site and up and add it up if it implements this recursion.",
    "start": "3318220",
    "end": "3330640"
  },
  {
    "text": "And here's what here's what the answer looked like. I put here as a as a sequence of mathematical formulas.",
    "start": "3330640",
    "end": "3337720"
  },
  {
    "text": "Solar take. Take for example. Here's one of the notebook Yelich.",
    "start": "3337720",
    "end": "3343900"
  },
  {
    "text": "Can you zoom in? Just click on this top line just to get an idea. OK. So there's some there's some there's some Ts and there's, you know, mall applications in here.",
    "start": "3343900",
    "end": "3353890"
  },
  {
    "text": "I like Mathematica because you don't have to write the multiplication signs.",
    "start": "3353890",
    "end": "3361599"
  },
  {
    "text": "So, you know. So, for example, we certainly know what S. S four was X seven as five as execs and X seven.",
    "start": "3361600",
    "end": "3370060"
  },
  {
    "text": "Like one of these lines here says T. S stand for Ts, T for S, X for F seven.",
    "start": "3370060",
    "end": "3378700"
  },
  {
    "text": "And I have to have to instantiate that for each value of S so. So I have I have values here. This tee, this tee, this four is this is the TSA J.",
    "start": "3378700",
    "end": "3391289"
  },
  {
    "text": "That's the J that the next one is S and then the other two parameters are X for an X seven.",
    "start": "3391290",
    "end": "3397320"
  },
  {
    "text": "And on the right hand side I have this calculation that involves T fives, l, you know, T's at the next level.",
    "start": "3397320",
    "end": "3404100"
  },
  {
    "text": "So it's a record, it's a recurrence. They use it as a small number of of multiplications in additions.",
    "start": "3404100",
    "end": "3410640"
  },
  {
    "text": "And eventually the total number of lines in this file was one hundred and thirty some instead of 252, which is a little bit of a progress.",
    "start": "3410640",
    "end": "3420059"
  },
  {
    "text": "Of course if N was was much larger than ten we would be saving lots and lots of well.",
    "start": "3420060",
    "end": "3428460"
  },
  {
    "text": "But still what's the point. I. Each of these steps is, is small however.",
    "start": "3428460",
    "end": "3440550"
  },
  {
    "text": "There's lots of ways to instantiate this thing. If, if, if S.J has our some J elements in it we need to compute to, to the Arjay plus one.",
    "start": "3440550",
    "end": "3459070"
  },
  {
    "text": "Values of piece of J. S x j SJ for each.",
    "start": "3459070",
    "end": "3467350"
  },
  {
    "text": "For each, for each, yes, for each value of S. That's relevant. And so this can be scary.",
    "start": "3467350",
    "end": "3476210"
  },
  {
    "text": "Two to the power of two here. Two to the one. One of these s had had two elements in it. So this means I have to calculate values, you know.",
    "start": "3476210",
    "end": "3486339"
  },
  {
    "text": "As you saw in that output, there are a whole bunch of calculations. Four four four t four.",
    "start": "3486340",
    "end": "3492850"
  },
  {
    "text": "And then I had to tried four different values. S as well. OK. So how am I gonna get this to be efficient?",
    "start": "3492850",
    "end": "3501490"
  },
  {
    "text": "Well, fortunately there's a theorem which I let you prove by yourself.",
    "start": "3501490",
    "end": "3506530"
  },
  {
    "text": "But RJ is always at most. The logarithm based two of em plus one.",
    "start": "3506530",
    "end": "3512260"
  },
  {
    "text": "So. So it never gets. It never gets bigger than log of N and therefore two to the Arjay plus one is always Biegel event.",
    "start": "3512260",
    "end": "3523240"
  },
  {
    "text": "It's almost to an. Another theory, maybe even better than the first one,",
    "start": "3523240",
    "end": "3532280"
  },
  {
    "text": "is that the sum of overall J of two to our J plus one is equal to bigo of end to the binary log of three,",
    "start": "3532280",
    "end": "3545390"
  },
  {
    "text": "which is and to the one point five eight five.",
    "start": "3545390",
    "end": "3551420"
  },
  {
    "text": "So it's polynomial in N. Not too not too big case.",
    "start": "3551420",
    "end": "3556609"
  },
  {
    "text": "Now this there is also a little more about it.",
    "start": "3556610",
    "end": "3562340"
  },
  {
    "text": "But you can call Treuhaft how you can prove it yourself.",
    "start": "3562340",
    "end": "3567470"
  },
  {
    "text": "Suppose Q N is equal to the worst case. So select Q and B the worst case that can happen.",
    "start": "3567470",
    "end": "3574609"
  },
  {
    "text": "Overall, binary trees and nodes. Which ones has the biggest. Some of the to the Arjay plus one and the. And we get a nice recurrence for this.",
    "start": "3574610",
    "end": "3584990"
  },
  {
    "text": "Q zero zero q n plus one is equal to.",
    "start": "3584990",
    "end": "3590950"
  },
  {
    "text": "Two plus the max. Over Kay.",
    "start": "3590950",
    "end": "3596869"
  },
  {
    "text": "That's between zero and minus K to Q, K, plus Q and minus K.",
    "start": "3596870",
    "end": "3605030"
  },
  {
    "text": "This is an interesting occurrence. The reason for it is you have a binary tree and you have key guys on the left hand and minus K guys on the right.",
    "start": "3605030",
    "end": "3616550"
  },
  {
    "text": "And plus one knows altogether. Then what happens is the stack goes up by one for each of these guys.",
    "start": "3616550",
    "end": "3626050"
  },
  {
    "text": "So we have to multiply this, this sum by two for the left subtree.",
    "start": "3626050",
    "end": "3631910"
  },
  {
    "text": "And we have to do what we have to. But we put this subtree stays the same. So it's as two two times. The worst case on the left plus the worst case on the right.",
    "start": "3631910",
    "end": "3642170"
  },
  {
    "text": "And then we have to add two four for the root here. So that's the that's the idea. And the values of N equals zero.",
    "start": "3642170",
    "end": "3651050"
  },
  {
    "text": "One, two, three, four, five, six. Q Sabeen is equal to zero two four eight, 10, 14.",
    "start": "3651050",
    "end": "3660050"
  },
  {
    "text": "It grows as I claim of order and to the log three.",
    "start": "3660050",
    "end": "3665930"
  },
  {
    "text": "And it's even it's even nicer than that. The reason yet. The fact is that. Q and is equal to two to the new N plus Q and minus one.",
    "start": "3665930",
    "end": "3678970"
  },
  {
    "text": "The new end is the number of one bits in N. So for example.",
    "start": "3678970",
    "end": "3684290"
  },
  {
    "text": "Q seven is eight more than Q six. Q Eight is only two more than Q seven because because eight has only one in seven has three",
    "start": "3684290",
    "end": "3695390"
  },
  {
    "text": "and bits in it and a Q of of for example two to the A plus two to the B plus two to the C.",
    "start": "3695390",
    "end": "3703579"
  },
  {
    "text": "If you have a number that this is a special case of a general theorem,",
    "start": "3703580",
    "end": "3708890"
  },
  {
    "text": "it turns out to equal three to the eight plus one plus two times three to the B plus one plus four times three to the C plus one.",
    "start": "3708890",
    "end": "3719359"
  },
  {
    "text": "And, and generally if, if, if N is composed of this new N powers of, of two,",
    "start": "3719360",
    "end": "3727700"
  },
  {
    "text": "then I have a similar formula here and that goes to show that the Qs aren't Turpie.",
    "start": "3727700",
    "end": "3733369"
  },
  {
    "text": "Okay, so that's the idea. And this in the online encyclopedia in integer sequences, this is sequence how a one nine three four nine four,",
    "start": "3733370",
    "end": "3747500"
  },
  {
    "text": "which I submitted to to this to the thing in July when I when I did this work.",
    "start": "3747500",
    "end": "3753570"
  },
  {
    "text": "Okay. So it's actually twice that. Twice that's equal right now. So so I now explain the algorithm to you and prove to you that it's that, that it's runtime is it is not too bad.",
    "start": "3753570",
    "end": "3771230"
  },
  {
    "text": "The reason that it finally@ for every J. I have only order n possible s is to vector two to work on and so I so I take this number and I and you know,",
    "start": "3771230",
    "end": "3785280"
  },
  {
    "text": "I end up and, and I'm, I summit overall J. But I also can throw in another factor in and that makes that, that,",
    "start": "3785280",
    "end": "3793850"
  },
  {
    "text": "that is it is plenty generous way to show that the total work is end of the 2.5 eight five.",
    "start": "3793850",
    "end": "3801220"
  },
  {
    "text": "OK. So that's that's the algorithm. Now I know I want to summarize by by telling you what you know, what about the general case?",
    "start": "3801220",
    "end": "3813530"
  },
  {
    "text": "So I have a general method which is just almost the same as better one.",
    "start": "3813530",
    "end": "3820530"
  },
  {
    "text": "I've given any Boolean function f not just this particular function, saying that the sum is equal to M and.",
    "start": "3820530",
    "end": "3829000"
  },
  {
    "text": "And for this we use up, as I said in my title for the top BDD binary decision diagrams.",
    "start": "3829000",
    "end": "3836120"
  },
  {
    "text": "And I've given a couple lectures on binary decision diagrams and as nobilities anxieties in the past.",
    "start": "3836120",
    "end": "3842660"
  },
  {
    "text": "Well tonight I'm talking about Kudi D which is a Cois. A binary decision diagram is the same as it as an ordinary one, except that it doesn't allow jumping levels.",
    "start": "3842660",
    "end": "3853220"
  },
  {
    "text": "And so enquirers I get in acquires I bd we evaluate a boolean function by having branch nodes that",
    "start": "3853220",
    "end": "3863450"
  },
  {
    "text": "always go from branch on x j to a branch to branch on x J plus one would never we never skip level.",
    "start": "3863450",
    "end": "3873880"
  },
  {
    "text": "But, but then there's a sequence of there's a sequence of knows that C I have a I have a I could",
    "start": "3873880",
    "end": "3881390"
  },
  {
    "text": "show you a picture of OBD if I like to look do I have volume four in any of these guys.",
    "start": "3881390",
    "end": "3888430"
  },
  {
    "text": "Volume four. Farcical one. Yeah. Here's the Japanese. Version so.",
    "start": "3888430",
    "end": "3895710"
  },
  {
    "text": "How so? So here's an here's an example of a Kudi D, so you want to know if here we actually have several functions.",
    "start": "3895710",
    "end": "3907859"
  },
  {
    "text": "But let's take F5. So it branch and X1. And if either zero or one takes you to these two nodes and then you branch again,",
    "start": "3907860",
    "end": "3917450"
  },
  {
    "text": "this isn't quite a QED and security would have to go all the way to get to the to get to the root node by branching on three and four and.",
    "start": "3917450",
    "end": "3930000"
  },
  {
    "text": "In. But for a symmetric function like the one we did here to count the number of bits.",
    "start": "3930000",
    "end": "3938780"
  },
  {
    "text": "Security is really nice and simple. And in general, the simpler the security d of the you know of anyway.",
    "start": "3938780",
    "end": "3948380"
  },
  {
    "text": "These are very great ways to represent boohooing function. And the simpler that the curity the the faster the algorithm is for the following reason.",
    "start": "3948380",
    "end": "3959960"
  },
  {
    "text": "For every note in the QED. Alpha and then has the descendants data and gamma beta might equal gamma in it, in security and not in ability.",
    "start": "3959960",
    "end": "3972619"
  },
  {
    "text": "But anyway, we have it, we have a recurrence like my T sub Jace and its alpha of x j capital S.J is equal to and then it's on the right hand side.",
    "start": "3972620",
    "end": "3987110"
  },
  {
    "text": "I have three cases beta, gamma x, J plus one x, J plus one.",
    "start": "3987110",
    "end": "3999180"
  },
  {
    "text": "If J is childless, no J is.",
    "start": "3999180",
    "end": "4005440"
  },
  {
    "text": "And in this notation, beta gamma means beta if x J is equal to zero and gamma if x J equals one.",
    "start": "4005440",
    "end": "4017589"
  },
  {
    "text": "So I. So I depending on whether x ray is zero or one, i, I branch from the alpha function to the beta function or the gamma function.",
    "start": "4017590",
    "end": "4027180"
  },
  {
    "text": "It's very simple. And then here it's going to be a summation I x j plus one similar thing with",
    "start": "4027180",
    "end": "4033390"
  },
  {
    "text": "the date and Gambin here is going to be a someone x ray plus one x k of of,",
    "start": "4033390",
    "end": "4039269"
  },
  {
    "text": "of, of weight functions and then there'll be a beta gamma x J plus one s.j plus one or he's coming out here.",
    "start": "4039270",
    "end": "4046280"
  },
  {
    "text": "So in general then given any Kudi D I get it, I get a whole bunch of of of recurrence equations just like my t sub js in the special case that I did.",
    "start": "4046280",
    "end": "4058120"
  },
  {
    "text": "And the total running time in this algorithm is the summation Jake, or one, two and of two to the Arjay of plus one time and some J.",
    "start": "4058120",
    "end": "4071560"
  },
  {
    "text": "Arjay is the number of elements in S in in capital s the J on this number of elements on the stack.",
    "start": "4071560",
    "end": "4077920"
  },
  {
    "text": "At a little answer J is the number of nodes in security D on on level J.",
    "start": "4077920",
    "end": "4084970"
  },
  {
    "text": "And this know is is gonna be small if if NJ is small because I know that is it.",
    "start": "4084970",
    "end": "4094000"
  },
  {
    "text": "I know that this sum is bounded by into the one point five, eight five.",
    "start": "4094000",
    "end": "4099589"
  },
  {
    "text": "And similarly we can evaluate many different weight functions at once simultaneously because it's called a Q D dBASE if you have many functions,",
    "start": "4099590",
    "end": "4117069"
  },
  {
    "text": "but they all are are are given in secuity DBAs, then they can share these sub d sub functions.",
    "start": "4117070",
    "end": "4124210"
  },
  {
    "text": "And so we get a lot of things at the top. So anyway, that's, that's the algorithm and I can describe it in terms of of multiplying numbers and adding numbers.",
    "start": "4124210",
    "end": "4137200"
  },
  {
    "text": "But the same idea would work. It only depends on the of associative and distributive loss of additional motivation.",
    "start": "4137200",
    "end": "4144589"
  },
  {
    "text": "So instead of having multiplying and then adding, I could I could add and then take min or something like that.",
    "start": "4144590",
    "end": "4152529"
  },
  {
    "text": "Any any any operation. If you're careful, you don't even need the commutative law in this particular particular case.",
    "start": "4152530",
    "end": "4158539"
  },
  {
    "text": "Okay. So this gives you an efficient way to evaluate these. These are sons over overbuy states of of trees in in a large, huge number of applications of possible situation.",
    "start": "4158540",
    "end": "4174850"
  },
  {
    "text": "It's not as fast as the as the leaf propagation in the special case of of of just computing simple marginals.",
    "start": "4174850",
    "end": "4185160"
  },
  {
    "text": "I don't know this in this case, all the messages go upward, but in the belief propagation, some message are to go either way and.",
    "start": "4185160",
    "end": "4193850"
  },
  {
    "text": "There might be a way that that because both up and down in Acuity D. Who knows? But I find that OK. So and I've described the algorithm that I still have to ask once again, what's the point?",
    "start": "4193850",
    "end": "4205940"
  },
  {
    "text": "And the end. And OK, the first thing. In other words, I got an algorithm that's quite cute and it's very efficient.",
    "start": "4205940",
    "end": "4215060"
  },
  {
    "text": "But I only thought of the algorithm as something that I could do, not as something I needed.",
    "start": "4215060",
    "end": "4221720"
  },
  {
    "text": "You know, I never in my life have I actually been given a binary tree. And so he said, oh, please evaluate the sum over all the states that are, you know, that have a certain way.",
    "start": "4221720",
    "end": "4230960"
  },
  {
    "text": "Now, this is this. So I've got this great algorithm waiting for waiting for a customer.",
    "start": "4230960",
    "end": "4236480"
  },
  {
    "text": "But, you know, it's still the fact that vector models are so Hartsell common.",
    "start": "4236480",
    "end": "4242820"
  },
  {
    "text": "Now, you know, who knows? There might be and I figure already gotten a captive audience at Christmas time. I know. If it turns out ever to be useful, then somebody will know and then then it'll be great.",
    "start": "4242820",
    "end": "4254510"
  },
  {
    "text": "Otherwise, it's just a nice academic exercise. And we can and we learn some techniques and so that all the stacks are still are good for, you know.",
    "start": "4254510",
    "end": "4262219"
  },
  {
    "text": "Also, you can combine MIDI D technology with Bayesian technology, completely different groups of people never talk to each other, but maybe later.",
    "start": "4262220",
    "end": "4271020"
  },
  {
    "text": "Now, I should also also mention, though, there is hope that maybe somebody else who didn't need this,",
    "start": "4271020",
    "end": "4276860"
  },
  {
    "text": "although I am not sure I got a shot, but I, I, I recently bought Daphne Kohler's great book on.",
    "start": "4276860",
    "end": "4285389"
  },
  {
    "text": "She is the greatest expert on Bayesian networks until I happen to run into her on Tuesday.",
    "start": "4285390",
    "end": "4290690"
  },
  {
    "text": "And I've got her book here. Can you show the book on the camera? So it came out this year, I think. OK.",
    "start": "4290690",
    "end": "4299179"
  },
  {
    "text": "So. So act up and type. I it to our eye tooth and I said I'm going to be talking about being a Bayesian networks on Thursday and I.",
    "start": "4299180",
    "end": "4307950"
  },
  {
    "text": "And you know, so she said if she goes to bed that you know her her daughter has in a holiday program tonight and so on.",
    "start": "4307950",
    "end": "4316400"
  },
  {
    "text": "But anyway I told her that the method I have is inhumane. She said that sounds a little bit like exercise nine point twenty in my book.",
    "start": "4316400",
    "end": "4323989"
  },
  {
    "text": "So. So, you know, so. So there's hope that it might. Now, I have to admit that I haven't read enough of this book to understand how to read ecocide nine point twenty tears.",
    "start": "4323990",
    "end": "4335449"
  },
  {
    "text": "But you can you can look at it here. It's got two stars. And she set it up in kind of a kind of a cute way.",
    "start": "4335450",
    "end": "4341660"
  },
  {
    "text": "You are taking the final exam for a course in computational complexity theory and your professor has sneaked in some unsolvable problems and so on.",
    "start": "4341660",
    "end": "4348710"
  },
  {
    "text": "So anyway, here's an application possibly of this technology, but it might or might not be related.",
    "start": "4348710",
    "end": "4355330"
  },
  {
    "text": "I I've got that she doesn't go into, you know, post order in any maybe she has a much simpler way to do what I did.",
    "start": "4355330",
    "end": "4362970"
  },
  {
    "text": "Or maybe the problems aren't totally the same. I'm not sure. But anyway, there is this possible connection that somebody else has has also had the same thought with,",
    "start": "4362970",
    "end": "4374210"
  },
  {
    "text": "you know, Daphne knows Italy more about these things than I do. But still, I, I think it's instructive, even if I learn that that my whole method was what was a flop.",
    "start": "4374210",
    "end": "4387790"
  },
  {
    "text": "Thank you. Thanks for listening. And your sister.",
    "start": "4387790",
    "end": "4403370"
  },
  {
    "text": "Any residual question before you come up and grab these books here? I noticed before the lecture that I've got books in check.",
    "start": "4403370",
    "end": "4413870"
  },
  {
    "text": "Korean and Japanese, Chinese and an English for the first come first to.",
    "start": "4413870",
    "end": "4429859"
  }
]