[
  {
    "text": "Is to see a lot of new faces, not old faces here. People keep coming in the door.",
    "start": "8780",
    "end": "14950"
  },
  {
    "text": "That's OK. Now, before I forget the Stanford Center for Professional Development,",
    "start": "14950",
    "end": "23500"
  },
  {
    "text": "which which takes care of putting this all on the web and advertising and",
    "start": "23500",
    "end": "29440"
  },
  {
    "text": "everything has given me this this wonderful hat that says Stanford University. Take a look at this close. And it says, As Stanford Center for Development, this is a present for whoever asks the best question today.",
    "start": "29440",
    "end": "43629"
  },
  {
    "text": "And I have to say, I only have one had to give away. And the judge's decision is final. But I do want to point out that I welcome questions.",
    "start": "43630",
    "end": "58810"
  },
  {
    "text": "Don't just sit there and say. OK, now, not today.",
    "start": "58810",
    "end": "64269"
  },
  {
    "text": "My talk. It's another day of show and tell. What did I do last SEC last year?",
    "start": "64270",
    "end": "73179"
  },
  {
    "text": "Title is fun with with BDD binary decision diagrams. How many of you have ever worked with BDD?",
    "start": "73180",
    "end": "81770"
  },
  {
    "text": "About how many of you have never heard of BTD? We've got about a 50/50 distribution.",
    "start": "81770",
    "end": "89509"
  },
  {
    "text": "OK, well that's actually good. What was your answer, Lyle?",
    "start": "89510",
    "end": "94730"
  },
  {
    "text": "I said yes. You said yes. To which one is news?",
    "start": "94730",
    "end": "101230"
  },
  {
    "text": "Very quickly. Yes. Cleanaway, let me start out with just a little bit of history.",
    "start": "101230",
    "end": "109700"
  },
  {
    "text": "I'm writing the art of computer programing. I started in 1962 and this BEATTIES are somehow special in the art of computer",
    "start": "109700",
    "end": "120740"
  },
  {
    "text": "programing because they they weren't anywhere near on the scene in 1962.",
    "start": "120740",
    "end": "125850"
  },
  {
    "text": "It is it's one of the only really fundamental data structures that that came out in the last twenty five years.",
    "start": "125850",
    "end": "137360"
  },
  {
    "text": "They the the germs were there, but nobody.",
    "start": "137360",
    "end": "143030"
  },
  {
    "text": "But it wasn't until 1986 when when Randall Bryant published a paper explaining what",
    "start": "143030",
    "end": "151819"
  },
  {
    "text": "a great new data structure this was and how many things you could do with it, that that they sort of took part of the computer science world by storm.",
    "start": "151820",
    "end": "159140"
  },
  {
    "text": "So I had. So there was no point. There were no part in the table of contents of of the other computer programing",
    "start": "159140",
    "end": "164660"
  },
  {
    "text": "that had anything to do with this data structure because it hadn't existed. Now, when I say taking it by storm, this this kid's paper.",
    "start": "164660",
    "end": "174770"
  },
  {
    "text": "For many of the last five, 10 years.",
    "start": "174770",
    "end": "180530"
  },
  {
    "text": "His paper was cited more often than anything else in Sightseer, according to Sightseer.",
    "start": "180530",
    "end": "185840"
  },
  {
    "text": "He kept his was that his was the number one reference paper.",
    "start": "185840",
    "end": "191459"
  },
  {
    "text": "That's partly because you had to say his paper if you wanted to use BD,",
    "start": "191460",
    "end": "197930"
  },
  {
    "text": "because there wasn't it wasn't mentioned in any textbooks or very many textbooks that there were there were a few textbooks, but also a great paper.",
    "start": "197930",
    "end": "207549"
  },
  {
    "text": "He got it had as clearly. So now, of course I did. I knew about it.",
    "start": "207550",
    "end": "217340"
  },
  {
    "text": "I think it was middle of 90s when I when I first heard about BD myself, because because I was interested in Neitz tours.",
    "start": "217340",
    "end": "225500"
  },
  {
    "text": "And some people in Germany use BDD to try to solve the question of how many ways are",
    "start": "225500",
    "end": "233090"
  },
  {
    "text": "there for a night to go through all 864 cells of the chessboard in a Hamiltonian path? I think he hit every square at exactly one. And and I said, why do they do this with PGD?",
    "start": "233090",
    "end": "244400"
  },
  {
    "text": "How great. Then I looked a little closer and the total number of tours that they gave couldn't be right because it didn't have the right.",
    "start": "244400",
    "end": "252799"
  },
  {
    "text": "It wasn't correct modulo eight. And there is an easy theorem saying that the correct number had to be. Well, it turned out that they had just you know, they had run a program on many, many computers over several months and there was a little slip there.",
    "start": "252800",
    "end": "265220"
  },
  {
    "text": "But when the media use it were her fault, it was, you know, some computer, maybe there was a cosmic break came in or something.",
    "start": "265220",
    "end": "272910"
  },
  {
    "text": "Anyway, they were able to redo the calculations, get the right. But that's when I first heard about meetings and I said, oh, boy, I'd better put that into four of the other computer program.",
    "start": "272910",
    "end": "282440"
  },
  {
    "text": "Well, I started writing this part up a year ago in May. So that's that's more than twelve months more than a year ago. You see, and you've got every other section of the art of computer programing.",
    "start": "282440",
    "end": "295590"
  },
  {
    "text": "I used to be able to polish off a section in six weeks. Now, you know, I'm getting older. And so it's and computer science is getting harder.",
    "start": "295590",
    "end": "305390"
  },
  {
    "text": "And so I think, you know, it's taking longer now. But I had no idea that I was going to spend a whole year on the darn thing. But the more I looked into it, it was it was just I couldn't put it down.",
    "start": "305390",
    "end": "318740"
  },
  {
    "text": "There was just so much stuff that needed to be in in my book that I had to know that I had to spend time on.",
    "start": "318740",
    "end": "327889"
  },
  {
    "text": "And so I'm sitting there. I'm like a kid with a new toy learning about this data structure where I can",
    "start": "327890",
    "end": "334340"
  },
  {
    "text": "solve problems I never thought I'd be able to solve before in my in my lifetime. And and and the funny thing was, although there have been thousands of papers written about the subject, still,",
    "start": "334340",
    "end": "348320"
  },
  {
    "text": "they were there were black holes in the bottom parts of the theory and the fundamental parts of the theory.",
    "start": "348320",
    "end": "355670"
  },
  {
    "text": "There were lots of things that had never yet been explored as far as I can, as far as I can tell. Talking to all the experts that I've been able to find. So so not only here, we have to master the hard things that have been proved.",
    "start": "355670",
    "end": "369440"
  },
  {
    "text": "But I also had to fill in a lot of things that showed that, you know, questions that that people hadn't hadn't asked yet.",
    "start": "369440",
    "end": "376700"
  },
  {
    "text": "That's just seemed natural. Once you start to write a textbook, you know, it's. You say, well, you've got to talk about this one. But nobody has done it, so so now I said show and tell.",
    "start": "376700",
    "end": "391120"
  },
  {
    "text": "I'm going to be showing you a whole bunch of stuff during this talk and telling a little, too.",
    "start": "391120",
    "end": "397870"
  },
  {
    "text": "But this is what I'm working on right now. I still haven't finished the darn thing. But I believe I believe by the end of June, I'll be I'll be done.",
    "start": "397870",
    "end": "404610"
  },
  {
    "text": "I think I'm about I think I've got about five pages of the main text to do and about 10 pages of answers to exercises coming up in the index.",
    "start": "404610",
    "end": "416259"
  },
  {
    "text": "And so that'll be about 20 more pages. And so that. So this is now sitting here are nine ninety.",
    "start": "416260",
    "end": "423030"
  },
  {
    "text": "Well, ninety five pages. I only have a beginning of the index. The hardest part. But there are a few things but.",
    "start": "423030",
    "end": "432870"
  },
  {
    "text": "So that's going to be one hundred and some pages. But I was going to start now. Now. This is this is online at the moment.",
    "start": "432870",
    "end": "441879"
  },
  {
    "text": "But I but I linked to it anywhere. I just I just put it online because a few of the experts in the subject I've been",
    "start": "441880",
    "end": "450010"
  },
  {
    "text": "telling you about some of the things so that they can check out what I've been doing. And tell me I'm not too far off the track.",
    "start": "450010",
    "end": "455830"
  },
  {
    "text": "But but I have to admit that a few people have guessed that you are l because I get because I do pay,",
    "start": "455830",
    "end": "462139"
  },
  {
    "text": "you know, people for errors in these in these drafts even before they go public with them.",
    "start": "462140",
    "end": "468560"
  },
  {
    "text": "You've got to you get to dollar fifty six cents for every error if you were first to report it, and 32 cents if it's a suggestion, not an error.",
    "start": "468560",
    "end": "476200"
  },
  {
    "text": "But you know, something like that that I'd rather use and then then then actually have to refer to your",
    "start": "476200",
    "end": "485980"
  },
  {
    "text": "name saying so-and-so suggested it because I probably should have thought of it myself.",
    "start": "485980",
    "end": "491530"
  },
  {
    "text": "I'm not going to say, you know. Lyle suggested I put a comma here. But anyway, all these things are really are really helpful to me.",
    "start": "491530",
    "end": "502450"
  },
  {
    "text": "And I'm not going the internet is so wonderful because I get this feedback from China and Europe and so on now.",
    "start": "502450",
    "end": "510740"
  },
  {
    "text": "So later in two or three weeks, I'll be linking to it and it will be ready for public consumption right now.",
    "start": "510740",
    "end": "517979"
  },
  {
    "text": "The exercises are somehow out of order. And and this you know, their specialty is things like construction still.",
    "start": "517980",
    "end": "525940"
  },
  {
    "text": "I'm going to show you some pictures of so you can see what it's going to be like when it when it is ready. Wow. I'll put that in context. Volume four of the other computer.",
    "start": "525940",
    "end": "535209"
  },
  {
    "text": "Proby, what's that? Well, this is my wife gave me this shirt as a kind of a joke. Twenty five years ago because she knew that would take me a while to take I could get it done in hand.",
    "start": "535210",
    "end": "546329"
  },
  {
    "text": "And so I could wear it every time I was working on it or something like this. So. Well, now I can finally wear it with a little bit of confidence that I'm not that I'm",
    "start": "546330",
    "end": "554410"
  },
  {
    "text": "getting a little closer now because because so far in April this came out,",
    "start": "554410",
    "end": "561790"
  },
  {
    "text": "which is the beginning of volume for Tom and a couple of years ago, other parts.",
    "start": "561790",
    "end": "567490"
  },
  {
    "text": "So this is called Can you see? Well, let me. Yeah. Let's hold it up. So you got the zero here. See, this is farcical. Zero of volume four and some some time ago, there was farcical.",
    "start": "567490",
    "end": "578829"
  },
  {
    "text": "Two came out farcical three, farcical four. Now, I started with vesicle two because, well, everyone knows about you write a computer program, you have to do the initialization last.",
    "start": "578830",
    "end": "593380"
  },
  {
    "text": "So you start. So so I couldn't start at the beginning of volume four. There was just too much, you know, I didn't know what I what I would need to be getting in.",
    "start": "593380",
    "end": "598899"
  },
  {
    "text": "It's like Star Wars, you know, Star Wars started with episode 14. So. So. So then, you know, so I did.",
    "start": "598900",
    "end": "608830"
  },
  {
    "text": "I did. Farcical two and farcical three if before for what I think like six, six months apart.",
    "start": "608830",
    "end": "618590"
  },
  {
    "text": "And I got these out and and, you know, when I'm writing farcical too,",
    "start": "618590",
    "end": "624610"
  },
  {
    "text": "I didn't know how many how many figures there are going to be in the first part of the chapter and the figures get numbered consecutively.",
    "start": "624610",
    "end": "632260"
  },
  {
    "text": "So the first the first figure in farcical tos is figure ten. Well, I needed more than nine illustrations in the first part of it, but at that time, I didn't know how long the first part was going to be.",
    "start": "632260",
    "end": "643510"
  },
  {
    "text": "So this one, you know, these are these things are going to have to change when we when we get to the real buying.",
    "start": "643510",
    "end": "649210"
  },
  {
    "text": "But also, I found out after I started writing the introduction that there was a heck of a lot had to come before festival, too.",
    "start": "649210",
    "end": "660460"
  },
  {
    "text": "So that's where I started and changed my idea and came up with the idea of having farcical zero.",
    "start": "660460",
    "end": "665980"
  },
  {
    "text": "So I had a chance to put two things in front of two instead instead of one. So. So a fiscal zero was it was an afterthought. But fortunately, a computer scientists are used to counting from zero.",
    "start": "665980",
    "end": "677710"
  },
  {
    "text": "And so now there is this. There's a question about Frasca one.",
    "start": "677710",
    "end": "683360"
  },
  {
    "text": "Well, festival one is what it is, what this is. You know, this this thing I showed here is farcical. One B Vaska, one farcical, pre farcical.",
    "start": "683360",
    "end": "693740"
  },
  {
    "text": "One meets a pre farcical one. A is on the Web now. And and a lot of people have been I have been helping me debug that.",
    "start": "693740",
    "end": "702810"
  },
  {
    "text": "And so then the plan is to package these together, probably September and then and then we'll have about eight hundred pages worth of stuff which which I planted",
    "start": "702810",
    "end": "719300"
  },
  {
    "text": "took to let us sort of sit there and and people can can check it out and see what's it how it should be improved,",
    "start": "719300",
    "end": "727940"
  },
  {
    "text": "especially me. I'm going to spend two years checking it out carefully. Then we're gonna come up with a hard down volume for a which would be the first part of value for an effort",
    "start": "727940",
    "end": "737100"
  },
  {
    "text": "going as it is about combinatorial algorithms that needs algorithms that deal with a gazillion possibilities.",
    "start": "737100",
    "end": "743959"
  },
  {
    "text": "And there's stuff. And that's where the art of computer programing really is necessary.",
    "start": "743960",
    "end": "749210"
  },
  {
    "text": "Because when you're working with this kind of problems, one good idea can save you all factors of six,",
    "start": "749210",
    "end": "758720"
  },
  {
    "text": "eight orders of magnitude between between doing it one way and doing another way.",
    "start": "758720",
    "end": "764939"
  },
  {
    "text": "And so that, on the other hand, we're confronted with problems for which we'll probably never be able to do efficiently.",
    "start": "764940",
    "end": "771050"
  },
  {
    "text": "So we have to so. So that means that that design people have been thinking about how to how to do a little better than that then brute force.",
    "start": "771050",
    "end": "780230"
  },
  {
    "text": "And so there's lots of ideas. That's why people talk about combinatorial explosion, which usually means the size of a problem is getting big to me.",
    "start": "780230",
    "end": "790100"
  },
  {
    "text": "Commentary's explosion means the size of volume four is getting bigger. I mean, there's just so much stuff that has to be that that has to be said about even when I'm even when I'm I'm sticking to what I consider,",
    "start": "790100",
    "end": "802500"
  },
  {
    "text": "you know, the basics instead of the stuff that's really esoteric and specialized. Now, that's the that's the background for for for this.",
    "start": "802500",
    "end": "811160"
  },
  {
    "text": "But I think this I, I, I, I fell in love with with with possibility's abilities and more than a year ago and and I'd Fraker and I",
    "start": "811160",
    "end": "821569"
  },
  {
    "text": "haven't I haven't had a dull moment for the last twelve months and I'm still not quite at the end of that,",
    "start": "821570",
    "end": "829670"
  },
  {
    "text": "although I see the light at the end of the tunnel almost right now.",
    "start": "829670",
    "end": "835040"
  },
  {
    "text": "So let's take a look at what at what they are.",
    "start": "835040",
    "end": "841769"
  },
  {
    "text": "And I just have to say that I sort of feel that with respect to to this this data structure,",
    "start": "841770",
    "end": "852620"
  },
  {
    "text": "it's a little bit like the the status of computer science before Volume one came out in the 1960s when when people",
    "start": "852620",
    "end": "861710"
  },
  {
    "text": "were using if they had a problem that that used any data structure is more complicated than a simple array.",
    "start": "861710",
    "end": "872000"
  },
  {
    "text": "Then the idea was then you use a special like a special package, a special language.",
    "start": "872000",
    "end": "878060"
  },
  {
    "text": "You have like Lisp was the most, most most popular, but it was it.",
    "start": "878060",
    "end": "886370"
  },
  {
    "text": "But that meant that you would use. You would use a library of subroutines that that that somebody from groups had designed",
    "start": "886370",
    "end": "892070"
  },
  {
    "text": "that that we're able to do fancy things like insert and delete things from list.",
    "start": "892070",
    "end": "897740"
  },
  {
    "text": "And people didn't really it was only a few people that were already writing special software in that",
    "start": "897740",
    "end": "903830"
  },
  {
    "text": "time that were using fancy data structures in their own programs and not using somebody else's package.",
    "start": "903830",
    "end": "910100"
  },
  {
    "text": "And it's about it. I feel it's similar now that that that this is a tool that that does a lot of programs can use and they don't have to have effect.",
    "start": "910100",
    "end": "923180"
  },
  {
    "text": "I don't have a hard time, a package that does all the bells and whistles of everything that every error can be done with BDD or generalization.",
    "start": "923180",
    "end": "930890"
  },
  {
    "text": "But you can have you can have special cases of being D and you can use them for simple problems and and combining with other things in your own programs.",
    "start": "930890",
    "end": "939580"
  },
  {
    "text": "And it's not such a mysterious thing where you need to to have to press the high priest to write the library for you.",
    "start": "939580",
    "end": "947940"
  },
  {
    "text": "So, okay, now what? So what the heck is it? Well, it's it's such a simple idea, fortunately, that are that I can even explain it in a public lecture.",
    "start": "947940",
    "end": "961790"
  },
  {
    "text": "Now, the. And so let's let's just let's look.",
    "start": "961790",
    "end": "968480"
  },
  {
    "text": "Zoom in on this on this guy here. This is very simple, BTD, but I want to get it close enough that you can see the definitely dotted lines and solid lines because.",
    "start": "968480",
    "end": "978430"
  },
  {
    "text": "Because that because I. It's important to distinguish between dotted line to tell a lie, no, in a BTD, I've got I can represent a boolean function.",
    "start": "978430",
    "end": "988480"
  },
  {
    "text": "That's the whole point of BDD is is is it's a good way to represent a function that variables that are zero and one.",
    "start": "988480",
    "end": "997070"
  },
  {
    "text": "And the answer is all of the function is zero and one and a function in this case,",
    "start": "997070",
    "end": "1004120"
  },
  {
    "text": "the function that I'm giving is called the majority function of of one X to an X three. That means that at least two out of three of the things are one.",
    "start": "1004120",
    "end": "1013630"
  },
  {
    "text": "Then the answer is one. If two out of three are are are zero. The answer is is zero for the majority. The median function is also probably a better name for it now.",
    "start": "1013630",
    "end": "1027280"
  },
  {
    "text": "So it just means this. You start at the top and you test X1 and you go to the dotted line.",
    "start": "1027280",
    "end": "1033689"
  },
  {
    "text": "If if X1 is zero and you go to the solid line effects, one is one. And so Expo's X1 is zero. Then we test X two.",
    "start": "1033690",
    "end": "1043439"
  },
  {
    "text": "And if it's zero two dotted line we get here. That's the, that thing means that the bottom is zero.",
    "start": "1043440",
    "end": "1051880"
  },
  {
    "text": "The answer to the function is zero. And on the other hand, if X1 was zero and X2 was one, then we're going to test X three and X three is the tiebreaker.",
    "start": "1051880",
    "end": "1065950"
  },
  {
    "text": "If x ray is zero then it's here. Otherwise we went to this guy, which means truth.",
    "start": "1065950",
    "end": "1071169"
  },
  {
    "text": "And this is that. This is true. Yeah. You know, I use these a bottom and top sink.",
    "start": "1071170",
    "end": "1078350"
  },
  {
    "text": "The thing at which Square knows at the bottom are called sinks. That's where you stop.",
    "start": "1078350",
    "end": "1083559"
  },
  {
    "text": "The source is that there's a root at the top. And I use these symbols because I'm using numbers.",
    "start": "1083560",
    "end": "1091210"
  },
  {
    "text": "You know, I going to have one as the answer when one is also the subject of a variable.",
    "start": "1091210",
    "end": "1096409"
  },
  {
    "text": "So we get to one of the two sinks, the false sink or the cruising and.",
    "start": "1096410",
    "end": "1102650"
  },
  {
    "text": "And you notice that this is not a not really a tree because because two branches come together.",
    "start": "1102650",
    "end": "1108640"
  },
  {
    "text": "If you have a if excellent to zero and next to his one, it's the same as if X X1 is one and next to a zero again three is the tiebreaker.",
    "start": "1108640",
    "end": "1118060"
  },
  {
    "text": "So, so, so we don't know six now. Not the the here.",
    "start": "1118060",
    "end": "1126760"
  },
  {
    "text": "Here's here's another thing that that there is a tree which does the same function. It shows all eight possibility. And at the bottom here you've got either, you know, false.",
    "start": "1126760",
    "end": "1136120"
  },
  {
    "text": "False, false, true. False, true, true, true. That's the that's the result of all possibility.",
    "start": "1136120",
    "end": "1145330"
  },
  {
    "text": "Now that's. Talk about that because that's the truth table for a boolean function.",
    "start": "1145330",
    "end": "1151870"
  },
  {
    "text": "And that's the way that I that I that traditionally, if you had to do calculation,",
    "start": "1151870",
    "end": "1158410"
  },
  {
    "text": "would boolean would boolean functions and if you didn't have too many variables,",
    "start": "1158410",
    "end": "1164770"
  },
  {
    "text": "you just made a table of all the possibilities and you could go and you could play with these tables and do all kind of kind of stuff.",
    "start": "1164770",
    "end": "1171430"
  },
  {
    "text": "Because this is just a bite after all. And you can, you can or two bites together or something like that.",
    "start": "1171430",
    "end": "1176920"
  },
  {
    "text": "And it's the same as boring to boolean functions again. But anyway, that's we'll talk more about truth tables in this picture here.",
    "start": "1176920",
    "end": "1189290"
  },
  {
    "text": "It just shows you how easy it is a course to put it in inside a computer chip to represent.",
    "start": "1189290",
    "end": "1196430"
  },
  {
    "text": "This this this data structure. But now I read something anyway that the idea of branching on on variables and coming down like that.",
    "start": "1196430",
    "end": "1206200"
  },
  {
    "text": "That's not that's not such a big deal.",
    "start": "1206200",
    "end": "1211450"
  },
  {
    "text": "It's it's it's like, you know, switching circuits were designed this way long ago. And that's not what Bryant's paper got. She became famous because of.",
    "start": "1211450",
    "end": "1222580"
  },
  {
    "text": "But we have to also do in order in order to make this work efficiently in computer.",
    "start": "1222580",
    "end": "1229929"
  },
  {
    "text": "We got some restrictions. And first of all and first of all, an important restriction.",
    "start": "1229930",
    "end": "1236400"
  },
  {
    "text": "And most important one is that we're going to test the variables in order for first Test X1 and then X2 and X3.",
    "start": "1236400",
    "end": "1247570"
  },
  {
    "text": "Or we might skip. We might get from from here. We might think maybe X1 doesn't even appear in the function.",
    "start": "1247570",
    "end": "1253370"
  },
  {
    "text": "Then we can start with X two, but we're not allowed to do something like this guy here.",
    "start": "1253370",
    "end": "1260140"
  },
  {
    "text": "Which, which is, which is the same function. But it.",
    "start": "1260140",
    "end": "1266170"
  },
  {
    "text": "But on one branch it test to x2 first and on the other branch of Tests X three first. That's, that's a normal. And and the second thing is we have to reduce it.",
    "start": "1266170",
    "end": "1281100"
  },
  {
    "text": "There's no two nodes the same, except I mean, I I'm going to allow the Sync's to appear several places just to make it just to make the I'm in my diagrams that I'm going to show you later today.",
    "start": "1281100",
    "end": "1294210"
  },
  {
    "text": "They're going to be I'm going to put Sync's all over the place because otherwise they use the diagrams.",
    "start": "1294210",
    "end": "1300100"
  },
  {
    "text": "Look, look too messy. But inside the computer, there's only one place for the zero. One place for the one. But but but like like these two nodes here.",
    "start": "1300100",
    "end": "1310440"
  },
  {
    "text": "This this one and this one are the same. So. So we have to collapse them into one.",
    "start": "1310440",
    "end": "1315909"
  },
  {
    "text": "So. So not allowed to switch slots will reduce the things so that it takes the smallest amount of computer memory.",
    "start": "1315910",
    "end": "1322660"
  },
  {
    "text": "And. And and there's another kind of reduction to it. That is when both branches coming below you are the same.",
    "start": "1322660",
    "end": "1330900"
  },
  {
    "text": "Then you just leave. Then you just leave out that node entirely. And whoever was point to you points to your to your common child.",
    "start": "1330900",
    "end": "1339390"
  },
  {
    "text": "So that's why this. This three disappears.",
    "start": "1339390",
    "end": "1344580"
  },
  {
    "text": "And up here, it was two going right. Right. Directly to the second step. So. So now this is it. This is the idea then of.",
    "start": "1344580",
    "end": "1354720"
  },
  {
    "text": "And it is officially in the literature. I have a call here from the Wikipedia.",
    "start": "1354720",
    "end": "1361299"
  },
  {
    "text": "There's a funny story. I have to take my time to tell you about it, but involved Jimmy Wales and Larry Lessig, where I wanted to get permission to quote from the Wikipedia.",
    "start": "1361300",
    "end": "1370200"
  },
  {
    "text": "And they had been working on all the laws for the other way around for when Wikipedia is quoting from from me.",
    "start": "1370200",
    "end": "1378210"
  },
  {
    "text": "But anyway, they said it was OK for me to quote Wikipedia, even though my book is not issued with the with the GPL.",
    "start": "1378210",
    "end": "1387770"
  },
  {
    "text": "So now. OK. So anyway, in popular usage, the term BTD almost always refers to reduced ordered binary decision diagram r obd",
    "start": "1387770",
    "end": "1396730"
  },
  {
    "text": "d literature use when the ordering and reduction aspects need to be emphasized. And so, you know, sort of throughout my talk it out when I say BD, I mean our OBD, but that because that's like when I say tree I usually mean.",
    "start": "1396730",
    "end": "1411070"
  },
  {
    "text": "And you know, in an ordered plain or binary code, you're not to by habit.",
    "start": "1411070",
    "end": "1417090"
  },
  {
    "text": "I have certain special form of the notion that I use its simile all the way through here.",
    "start": "1417090",
    "end": "1423659"
  },
  {
    "text": "I might talk about BD not in the most general sense, where there where you have any kind of a diagram with any number of branches but has to be ordered.",
    "start": "1423660",
    "end": "1432410"
  },
  {
    "text": "You have to have to check the variables in order. If you have a branch that goes from IDG, I has to be less than G and has to be reduced.",
    "start": "1432410",
    "end": "1439710"
  },
  {
    "text": "You can't have any two nodes that are identical. Now, what it boils down to is actually very easy to see in terms of a truth table.",
    "start": "1439710",
    "end": "1449429"
  },
  {
    "text": "And so I can write also that that that function in terms of in terms of truth tables,",
    "start": "1449430",
    "end": "1455430"
  },
  {
    "text": "instead of instead of saying that the node needs a branch on X1, I'm gonna really just give it give a truth table and then end.",
    "start": "1455430",
    "end": "1465940"
  },
  {
    "text": "And if the truth table has a things in it, what we're doing with dealing with the function of three variables.",
    "start": "1465940",
    "end": "1471299"
  },
  {
    "text": "The truth. Hal had eight things in it. If the branch on X1, if it has four things in it, it's a branch on two.",
    "start": "1471300",
    "end": "1476520"
  },
  {
    "text": "And if it has two things, it is a branch and x3 and otherwise it's it's one of the strengths.",
    "start": "1476520",
    "end": "1483330"
  },
  {
    "text": "Now in general, take any book, any book, any truth table.",
    "start": "1483330",
    "end": "1488620"
  },
  {
    "text": "And and this is the this is the definition of in principle a boolean function if every truth table defines a different boolean function.",
    "start": "1488620",
    "end": "1500970"
  },
  {
    "text": "And that that's exactly the if you want to specify a boolean function of eight variables,",
    "start": "1500970",
    "end": "1509159"
  },
  {
    "text": "there are two to the eight possible combinations of the inputs, the zeros and ones and each of those functions, either one or zero.",
    "start": "1509160",
    "end": "1518010"
  },
  {
    "text": "So you have to do the 50. You have to have a witness table at length 256. That tells you what the one all of the values are.",
    "start": "1518010",
    "end": "1525750"
  },
  {
    "text": "And this is the in general, you need that in order to to specify a boolean function of eight variables.",
    "start": "1525750",
    "end": "1535320"
  },
  {
    "text": "There's this incompressible, the idea. If you have a boolean function of one hundred variables, you need a you need a truth table and in principle of a blinks two to the one hundredth to specify the boolean function.",
    "start": "1535320",
    "end": "1549540"
  },
  {
    "text": "That's how many Boolean functions there are, two to the one hundredth. And so how many bits do you need to represent.",
    "start": "1549540",
    "end": "1557370"
  },
  {
    "text": "I'm sorry to do the two to the one hundredth is the number of boolean functions or one hundred variables. So. So you need to those bits to represent the an arbitrary boolean function of a hundred variable.",
    "start": "1557370",
    "end": "1570450"
  },
  {
    "text": "Fortunately, however, most of the functions of a hundred variables are never gonna be of importance to anybody at all in the entire history of the human race.",
    "start": "1570450",
    "end": "1578910"
  },
  {
    "text": "I mean, they couldn't possibly. Then there's two of the two, one hundredth of them. The history of the human race is, you know, I mean, we might go on for a while, but are we going to last that many?",
    "start": "1578910",
    "end": "1590970"
  },
  {
    "text": "You know, that that many give a century. I know so. So only a few boolean functions in terms of the total number of bullet functions of one",
    "start": "1590970",
    "end": "1602240"
  },
  {
    "text": "hundred variables are ever going to be considered by anybody of any relevance whatsoever.",
    "start": "1602240",
    "end": "1610170"
  },
  {
    "text": "In fact, we might even deal with some bullying functions of one hundred and one variables or a thousand variables or something.",
    "start": "1610170",
    "end": "1617310"
  },
  {
    "text": "But anyway, only a few of those vast number of possibilities are important. And that and the wonderful thing about BD is that so many of the functions that are practical importance turn out to have a small BD.",
    "start": "1617310",
    "end": "1632100"
  },
  {
    "text": "So that means that our boolean function, even though does incompressible.",
    "start": "1632100",
    "end": "1637919"
  },
  {
    "text": "There's so much data to describe a boolean function like two to the one hundred bits.",
    "start": "1637920",
    "end": "1646170"
  },
  {
    "text": "Still, there are lots of Bouley functions of one hundred variables. Lots of important boohooing functions of hundred variables that only need.",
    "start": "1646170",
    "end": "1656820"
  },
  {
    "text": "Oh. You know, fit easily in, in a in a megabyte. There BDD doesn't have very, very many nodes.",
    "start": "1656820",
    "end": "1664049"
  },
  {
    "text": "Now how do we figure that out. Which are the truth tables that are our compressible by this way?",
    "start": "1664050",
    "end": "1669920"
  },
  {
    "text": "And the answer is very simple. We start out with the truth. Here's a here's the truth table you see has eight bits in it.",
    "start": "1669920",
    "end": "1676190"
  },
  {
    "text": "So the function of three variables. And now the the if it has two halves, the left half, the first four bits and the right half the second Forbess,",
    "start": "1676190",
    "end": "1687779"
  },
  {
    "text": "the first half is what happens if that variable is zero. And the second half is what happens if the variable is one.",
    "start": "1687780",
    "end": "1693830"
  },
  {
    "text": "Okay. So now if, if, if the left half and the right half are equal, that means we didn't have to branch in this variable at all.",
    "start": "1693830",
    "end": "1702610"
  },
  {
    "text": "And we could have eliminated this node. So in order for it to be a node, it has to.",
    "start": "1702610",
    "end": "1708630"
  },
  {
    "text": "It has to say that the left half is different from the right half. Now, I call it a bead. I need a word for it.",
    "start": "1708630",
    "end": "1716470"
  },
  {
    "text": "And a nice Four-Letter Word hadn't been used for anything else in computer science so far as I know.",
    "start": "1716470",
    "end": "1721590"
  },
  {
    "text": "So I thought. So I say, okay, this is what I mean by a bead. It is a string. That's not a perfect square. It has two parts in the left.",
    "start": "1721590",
    "end": "1731250"
  },
  {
    "text": "Part is it is not equal to the right on it. So now this is a bead. And the number of this is this is a bit of order.",
    "start": "1731250",
    "end": "1742710"
  },
  {
    "text": "Three, because there is a there's eight. There's two of the three elements in the string.",
    "start": "1742710",
    "end": "1749370"
  },
  {
    "text": "Now, below that, then we have the left the left part and the right part and left part.",
    "start": "1749370",
    "end": "1754390"
  },
  {
    "text": "The right part. Turn out. In this case, both of BBJ two. They aren't perfect squares. They aren't. OK, but then when what happens when I take the left part of zero zero zero one, that's zero zero.",
    "start": "1754390",
    "end": "1765930"
  },
  {
    "text": "That's that's not a bead. It's perfect. Square. Zero zero followed by zero.",
    "start": "1765930",
    "end": "1771600"
  },
  {
    "text": "Perfect square and expensive string multiplication. Not not integer. Multiplication of square. Alpha Alpha is a square in when you multiplying strings. And so. And so if if the thing turns out to be not a bead then you just take take half of it.",
    "start": "1771600",
    "end": "1787060"
  },
  {
    "text": "And then that again might, might or might not be a B and you keep on going till you get to B eventually you do get to a B and you point to that.",
    "start": "1787060",
    "end": "1797580"
  },
  {
    "text": "So, so I'm the right hand. Here he has a zero one. That's a beat on the left after we have zero one to beat one one.",
    "start": "1797580",
    "end": "1804000"
  },
  {
    "text": "No. That's not to be. OK. So. So then zero one appears as a node.",
    "start": "1804000",
    "end": "1810150"
  },
  {
    "text": "But it only appears once. So. So the nodes at every level are the number of beads of that order that you take any.",
    "start": "1810150",
    "end": "1818940"
  },
  {
    "text": "Any. Any yo truth table. And you. And you can divide it up. First of all, the whole thing a. If so, put it all at the root of the top if not working any.",
    "start": "1818940",
    "end": "1831480"
  },
  {
    "text": "If you want to know what's going to go into BTD at three levels from the bottom.",
    "start": "1831480",
    "end": "1837760"
  },
  {
    "text": "You look at all the bytes, you look at all eight bad things in there and you see how many of those are are distinct Beebs.",
    "start": "1837760",
    "end": "1843780"
  },
  {
    "text": "And that's the number of notes that you put in at that level. Three below the bottom of the BD.",
    "start": "1843780",
    "end": "1849750"
  },
  {
    "text": "So that's it. That's equivalent to this idea of reducing to the smallest number of thing.",
    "start": "1849750",
    "end": "1855430"
  },
  {
    "text": "And the boolean functions that turn out to be important in practice then are the ones that don't have too many beads inside of their true thing.",
    "start": "1855430",
    "end": "1862470"
  },
  {
    "text": "And now carry here. I got another example just just to just to add this one.",
    "start": "1862470",
    "end": "1868080"
  },
  {
    "text": "I chose at random because I use I use PI. I mean, in pi and binary is three point.",
    "start": "1868080",
    "end": "1875220"
  },
  {
    "text": "Well in octal I happen to know it's three point one.",
    "start": "1875220",
    "end": "1880440"
  },
  {
    "text": "One oh oh, wait a minute now. But I know the Octonal facts about pie.",
    "start": "1880440",
    "end": "1887159"
  },
  {
    "text": "So that's three one one zero three seven five five two.",
    "start": "1887160",
    "end": "1895680"
  },
  {
    "text": "That's a pie. An apple. So so I took the first 16 gives here the function of four variables.",
    "start": "1895680",
    "end": "1903690"
  },
  {
    "text": "Now, why would I need a random billing function? I want to try something out. Let's try the part. That's the pie function. And I could have gone to a pie function fiber anyway.",
    "start": "1903690",
    "end": "1914640"
  },
  {
    "text": "Here it is. And so this is this is a bead. So sweet. So we have to branch out. I want to sub tables are also beads.",
    "start": "1914640",
    "end": "1926190"
  },
  {
    "text": "But then what happens? We break these up and we get eleven hundred kind of one all zeros and one one.",
    "start": "1926190",
    "end": "1936460"
  },
  {
    "text": "One one. You see that you're gonna get only two beads of.",
    "start": "1936460",
    "end": "1942659"
  },
  {
    "text": "I'd like four in there. And so on. So the whole thing turns out to be this, this BDD.",
    "start": "1942660",
    "end": "1948250"
  },
  {
    "text": "When you take that random table based on pie and and combine it, you find out that there's two beads of length.",
    "start": "1948250",
    "end": "1956370"
  },
  {
    "text": "Four are two big beads of length too. And and two bits of length.",
    "start": "1956370",
    "end": "1963460"
  },
  {
    "text": "One button. It all boils down to this. So it's a very nice connection between the truth tables and. And this as far as developing some theory about the thing.",
    "start": "1963460",
    "end": "1976260"
  },
  {
    "text": "Now, any questions? Before I go and launch into this.",
    "start": "1976260",
    "end": "1981370"
  },
  {
    "text": "For. OK. Now. Yes.",
    "start": "1981370",
    "end": "1988240"
  },
  {
    "text": "Really. Explain our eventual reason why you decided to Darity work.",
    "start": "1988240",
    "end": "1994600"
  },
  {
    "text": "We produced all the APD compared with J.R. Why did what? Why did Rantel back? OK, so that's the the the most important thing is that it's it's it's a canonical representation.",
    "start": "1994600",
    "end": "2010289"
  },
  {
    "text": "Like like like the like the truth table. That means that the bullying that if you look at the two and two functions, they're there, the same function if and only if they have the same BDD.",
    "start": "2010290",
    "end": "2024390"
  },
  {
    "text": "This is so, so different from the normal way of talking about boohooing functions where somebody describes his function saying all this function is X one or X two or three,",
    "start": "2024390",
    "end": "2033990"
  },
  {
    "text": "let's say X one or X two bar and somebody else is over. My function is it is it is is the complement of X one bar and X two, you know, and and so there are many,",
    "start": "2033990",
    "end": "2051480"
  },
  {
    "text": "many ways to describe the same booleans function in terms of formulas and one but one up until up up until the time of BDD.",
    "start": "2051480",
    "end": "2062250"
  },
  {
    "text": "If you wanted to describe a boolean function to still your friend acrostic, you know, in France or for you or for for you to kill your friend in California,",
    "start": "2062250",
    "end": "2075359"
  },
  {
    "text": "you would you would have to give him a formula for it or else you have to send him the truth table.",
    "start": "2075360",
    "end": "2081419"
  },
  {
    "text": "And if you give him the truth table, then you could then he would know for sure. I mean, if if two people send the same fruit table, then you have the same function.",
    "start": "2081420",
    "end": "2088830"
  },
  {
    "text": "But what if you see if if if you sent two different formulas, they'd have to puzzle around Samhain? Let me try these values. You know, these two might be the same function.",
    "start": "2088830",
    "end": "2097920"
  },
  {
    "text": "And so it's the card. It. The point is that that work, if you want to represent a symbolic function inside a computer.",
    "start": "2097920",
    "end": "2109450"
  },
  {
    "text": "This is a unique representation. There is exactly there. There's no two ways to represent it.",
    "start": "2109450",
    "end": "2115420"
  },
  {
    "text": "And so when we have several functions in you and you want to test to function for equality, then it's just a matter of either the same node.",
    "start": "2115420",
    "end": "2124020"
  },
  {
    "text": "Exactly the same point inside the computer. If you want to test if one function is is it is contained in another or we want to compute the.",
    "start": "2124020",
    "end": "2133920"
  },
  {
    "text": "If you want to compute the the end of two functions. So you want to know the or the compliment or all these other occlusive or all these other operations you might want to want to do on functions.",
    "start": "2133920",
    "end": "2147150"
  },
  {
    "text": "You want to make take a quantification, all the different logical operations.",
    "start": "2147150",
    "end": "2152869"
  },
  {
    "text": "The thing that Brian discovered was not only is the form unique, but that all these operations are also efficient,",
    "start": "2152870",
    "end": "2161940"
  },
  {
    "text": "that you can do that if you've got a BTD for F and a BTD for G, then you can find the BTD for F and G, D for F exclusive.",
    "start": "2161940",
    "end": "2169359"
  },
  {
    "text": "Orji with us with A. We think with a cool algorithm.",
    "start": "2169360",
    "end": "2175840"
  },
  {
    "text": "And yeah, that's a very good question. I'm glad that I think that your birthday.",
    "start": "2175840",
    "end": "2181020"
  },
  {
    "text": "Now you saw us starting from the table. You can come up with reduced VCT. Yeah. If you had to be to the end, users should use it without having to vote with us.",
    "start": "2181020",
    "end": "2189880"
  },
  {
    "text": "Yes. Yes it is algorithm. Ah. Which is which which is something I will be getting.",
    "start": "2189880",
    "end": "2199800"
  },
  {
    "text": "I will be flashing by that time. But there is a there is there are lots of readings. One of the reasons I love the subject is that the algorithms are also very nice.",
    "start": "2199800",
    "end": "2213299"
  },
  {
    "text": "So I think algorithm is actually coming up sooner than I thought. But I haven't got the index done yet. But let's see your algorithm reduction tool, Beadie.",
    "start": "2213300",
    "end": "2225350"
  },
  {
    "text": "That is coming up on page 14. So, yeah. So you're. Yes, exactly. The right question. And it's now it's unfortunately algorithm fills the entire page.",
    "start": "2225350",
    "end": "2236280"
  },
  {
    "text": "Fifteen, but it's not that, you know. But the point is, I, I'm not giving you just an algorithm to reduce.",
    "start": "2236280",
    "end": "2242970"
  },
  {
    "text": "But this is one that goes optimally. It goes in linear time. So it's you know, it doesn't take any any X there's no there's no fat in this outfit.",
    "start": "2242970",
    "end": "2252540"
  },
  {
    "text": "Okay. All right. Now. Yeah. Good question. So now the lot of the literature about about BD points out how they don't solve every problem in the world and ends it and and,",
    "start": "2252540",
    "end": "2267210"
  },
  {
    "text": "you know, it become traditional. When you when you were Proval, when you write papers, you get a little more kudo's.",
    "start": "2267210",
    "end": "2278730"
  },
  {
    "text": "When you write something, saying something is impossible, it's impossible possible to do this efficiently. And so a lot of people show that. There were functions that don't have good duties and, you know.",
    "start": "2278730",
    "end": "2290310"
  },
  {
    "text": "Yeah, well, sure, there's lots of magnate's incompressible. You know, how many truth tables can you compress?",
    "start": "2290310",
    "end": "2297000"
  },
  {
    "text": "But the there had been comparatively few people saying, but look at all the great things that you can do when you do have beedi.",
    "start": "2297000",
    "end": "2305770"
  },
  {
    "text": "And. And so there's been this dysfunctioning emphasis on the negative.",
    "start": "2305770",
    "end": "2310860"
  },
  {
    "text": "What you can't do with him and what's the positive. So let me. So I start out like on page four after the definition BTD virtues.",
    "start": "2310860",
    "end": "2319020"
  },
  {
    "text": "And what I suppose you do have one of these functions which I claim there are there are many,",
    "start": "2319020",
    "end": "2325860"
  },
  {
    "text": "many Olfert important function and it has RBD that fits nicely in computer memory.",
    "start": "2325860",
    "end": "2331600"
  },
  {
    "text": "Okay, here are some of the things you can do in a bullet. You. This is almost like PowerPoint presentation. You know, we we can we can evaluate the function in a most end step starts.",
    "start": "2331600",
    "end": "2344890"
  },
  {
    "text": "That's obvious because, you know, given any any input vector, you just march down and branch on to a link.",
    "start": "2344890",
    "end": "2355349"
  },
  {
    "text": "If it's if it's the variable zero or or the solid link, if the variable is one. So that's obvious.",
    "start": "2355350",
    "end": "2360940"
  },
  {
    "text": "Now, second, you can find the lexical graphically smallest solution that the lexicon biographically, smallest vector X that satisfies the thing.",
    "start": "2360940",
    "end": "2373329"
  },
  {
    "text": "Was it? If there is a solution, let's try to make X1 zero if we can.",
    "start": "2373330",
    "end": "2380700"
  },
  {
    "text": "And and given that x1 given the value of x1 x2 x3 want to make one final solution, the smallest thing.",
    "start": "2380700",
    "end": "2389540"
  },
  {
    "text": "And that's easy. Again you start at the root and you go on the low branch, the dotted branch unless it goes directly to the sink zero sink.",
    "start": "2389540",
    "end": "2400020"
  },
  {
    "text": "Because if it doesn't go to the zero sink then there's going to be some solution below it that somewhere along the line because it's the truth table,",
    "start": "2400020",
    "end": "2409170"
  },
  {
    "text": "there isn't all zeros. So there's a one summary on that branch. OK. So, so, so, so, you know, you just you just go to the left as often as possible unless you're forced to go on one.",
    "start": "2409170",
    "end": "2425210"
  },
  {
    "text": "On the right branch. On the high branch. OK. So so that's that's another nice thing about, about them you can find.",
    "start": "2425210",
    "end": "2432720"
  },
  {
    "text": "You can you can find the lexigram smallest or largest solution very easily.",
    "start": "2432720",
    "end": "2437980"
  },
  {
    "text": "Now the next thing is more important. You can count how many solutions there are.",
    "start": "2437980",
    "end": "2443570"
  },
  {
    "text": "You don't have to. You don't have to exhibit all the solution. But you can figure out how many solutions there. I'm going to explain that later. But it's going to be easy.",
    "start": "2443570",
    "end": "2452460"
  },
  {
    "text": "It's gonna be easy to say. You've got a boolean function of a hundred variables and you'll be able to say how many",
    "start": "2452460",
    "end": "2458430"
  },
  {
    "text": "X is over that satisfy this without actually counting the ones in the truth table.",
    "start": "2458430",
    "end": "2463650"
  },
  {
    "text": "But just looking at the next F. After you've used this algorithm for counting, you can generate random solutions.",
    "start": "2463650",
    "end": "2475049"
  },
  {
    "text": "You can suppose there are 13 million and 28 solutions for this function.",
    "start": "2475050",
    "end": "2481980"
  },
  {
    "text": "I can generate add. I can generate solutions X for which each solution has a probability.",
    "start": "2481980",
    "end": "2489990"
  },
  {
    "text": "Exactly one over thirteen thousand twenty eight. Thirty million twenty. And always every solution, uniformly everything that solves the thing.",
    "start": "2489990",
    "end": "2498930"
  },
  {
    "text": "I can Mike. I can generate in linear time. I can go through and I can find a random solution to the thing.",
    "start": "2498930",
    "end": "2506280"
  },
  {
    "text": "Because that every branch of the BVA I'll know what's the probability to go down to the zero branch or the one branch for the variable.",
    "start": "2506280",
    "end": "2514170"
  },
  {
    "text": "So I can I can generate a random solution. The next thing is. Well, you can you can you can list all the solutions if you do want to see all the solutions, not just Khanum, but you.",
    "start": "2514170",
    "end": "2524890"
  },
  {
    "text": "But now the the the the the running time is is per solution is that most and it almost always is this and goes away.",
    "start": "2524890",
    "end": "2534599"
  },
  {
    "text": "But in that there are really weird examples where you do need, we do need that.",
    "start": "2534600",
    "end": "2540670"
  },
  {
    "text": "So you can this also if you want to. But here's the here's a great one that that there were books written about this",
    "start": "2540670",
    "end": "2548280"
  },
  {
    "text": "problem in the 60s and people and they didn't know any good ways to solve it. So the whole idea got forgotten. You can solve the linear boolean programing problem, which means find an X, which for which W one,",
    "start": "2548280",
    "end": "2562980"
  },
  {
    "text": "X one and so on through W and X and is is maximized over all solutions that x, F of X equals one.",
    "start": "2562980",
    "end": "2571140"
  },
  {
    "text": "All right. So, so instead of linear programing where you have linear constraints, your boogieing constraint here.",
    "start": "2571140",
    "end": "2578010"
  },
  {
    "text": "But what. But these DVD weights can be positive or negative or zero.",
    "start": "2578010",
    "end": "2584240"
  },
  {
    "text": "But define. A tick to find the best way to do it and the and the algorithm be here, does it?",
    "start": "2584240",
    "end": "2593369"
  },
  {
    "text": "Didn't it? The running time is and plus the size of the of the BTD, you can compute the generating function.",
    "start": "2593370",
    "end": "2601580"
  },
  {
    "text": "This is the. It's a it's a. It's a polynomial. That's the coefficient of a zero.",
    "start": "2601580",
    "end": "2608690"
  },
  {
    "text": "Zeder The J. Is the number of solutions that have J once in X among the X's.",
    "start": "2608690",
    "end": "2614540"
  },
  {
    "text": "And most important, more important than that even is this reliability polynomial, which I'll talk about a little bit.",
    "start": "2614540",
    "end": "2623600"
  },
  {
    "text": "This is if you say probabilistically that the X's are X one is has probability P one of being true.",
    "start": "2623600",
    "end": "2631340"
  },
  {
    "text": "And if you want to be called, what's the probability that the function is going to be true? Now, this is very important reliability calculation.",
    "start": "2631340",
    "end": "2636900"
  },
  {
    "text": "So you want to know what's the problem if the network is done?",
    "start": "2636900",
    "end": "2642680"
  },
  {
    "text": "If if you know the probability of each link in the network, assuming independence of these of these probability and a of boolean functions,",
    "start": "2642680",
    "end": "2653859"
  },
  {
    "text": "is extremely important to know the reliability polynomial. But it wasn't it seemed to be baffling how to calculate the thing.",
    "start": "2653860",
    "end": "2661070"
  },
  {
    "text": "The answer now is if you get the BTD and then you've got to anyway. And if you're if you're [INAUDIBLE]. If your function isn't too weird.",
    "start": "2661070",
    "end": "2671180"
  },
  {
    "text": "Chances are it's gonna have a nice small BTD nine. Not too big BTD with a few thousand nodes and household nodes.",
    "start": "2671180",
    "end": "2679160"
  },
  {
    "text": "But then you can calculate the reliability polynomial instead of the instead of just simulating and hoping and hoping that you've got a good,",
    "start": "2679160",
    "end": "2689990"
  },
  {
    "text": "good answer from Monte Carlo. So anyway, there we are with with with you with some of the bullet points as to as as what's good about the tough questions here.",
    "start": "2689990",
    "end": "2701059"
  },
  {
    "text": "Order variables and B plus easily reorder.",
    "start": "2701060",
    "end": "2708200"
  },
  {
    "text": "So. What do you mean?",
    "start": "2708200",
    "end": "2718020"
  },
  {
    "text": "Easy. Okay.",
    "start": "2718020",
    "end": "2724150"
  },
  {
    "text": "OK, page thirty. Choosing the optimal order, page thirty eight. Local reordering. OK. And here's a nice algorithm to do heuristic reordering.",
    "start": "2724150",
    "end": "2737910"
  },
  {
    "text": "And I'm going to talk a little bit about that later, too. But that comes up on page 37.",
    "start": "2737910",
    "end": "2743130"
  },
  {
    "text": "He talks that way at the beginning, but is a good question to get him help.",
    "start": "2743130",
    "end": "2749180"
  },
  {
    "text": "But I all the way through, I describe it as if you're ordering is X1 first and an X to an extreme.",
    "start": "2749180",
    "end": "2758059"
  },
  {
    "text": "The the the papers in the literature are bogged down with with humongous notation,",
    "start": "2758060",
    "end": "2764280"
  },
  {
    "text": "talking about a particular four feet particular ordering of the variable. Instead I finesse that by talking about it.",
    "start": "2764280",
    "end": "2778600"
  },
  {
    "text": "I'm saying that if I, if I permute, if I, if I interchange x2 next one I, I get a different function instead of f i, I know I f f sub pi.",
    "start": "2778600",
    "end": "2791630"
  },
  {
    "text": "We're pisar permutation and. And in that way all the notation got a lot simpler in all this. All a theory got a lot easier to do to develop. But anyway, that's a very important question.",
    "start": "2791630",
    "end": "2802440"
  },
  {
    "text": "And you guys are this is that that's a good competition here. I'm glad to know that you're doing OK. Now, let me show you some examples.",
    "start": "2802440",
    "end": "2810360"
  },
  {
    "text": "I'm going to walk you through. I won't walk you through these pages of what I've done so far.",
    "start": "2810360",
    "end": "2815970"
  },
  {
    "text": "Just just for some of the highlights here. First of all, on this page, this here we are, page six.",
    "start": "2815970",
    "end": "2822359"
  },
  {
    "text": "I'm on it. Not my interest in this is for combinatorial algorithms.",
    "start": "2822360",
    "end": "2830220"
  },
  {
    "text": "Most of the people who have worked with BDD are when people who had to work with Boolean functions because they're working on hardware design,",
    "start": "2830220",
    "end": "2836220"
  },
  {
    "text": "they're working like they're they're doing model checking of testing, whether circuits can have race conditions, things like this.",
    "start": "2836220",
    "end": "2843340"
  },
  {
    "text": "They need to they need to have good machine to work on boolean functions and and end up.",
    "start": "2843340",
    "end": "2852560"
  },
  {
    "text": "But my book is about combinatorial algorithms where where I'm talking about solving problems with graphs and and optimization problems of various kinds.",
    "start": "2852560",
    "end": "2865859"
  },
  {
    "text": "And an end in barely a few people have realized how how well BEATTIES apply to",
    "start": "2865860",
    "end": "2874470"
  },
  {
    "text": "these sort of pure common taurel problems rather than pure Dubberly problems.",
    "start": "2874470",
    "end": "2880780"
  },
  {
    "text": "And and but, you know, Boolean algebra is so powerful. I mean, it underlies your logic.",
    "start": "2880780",
    "end": "2890460"
  },
  {
    "text": "You can express everything in terms of logic. So again, express our common taurel problems in terms of how we function.",
    "start": "2890460",
    "end": "2897330"
  },
  {
    "text": "And that means you've got BDD and you can you can solve your common problems with with",
    "start": "2897330",
    "end": "2903210"
  },
  {
    "text": "with techniques that were developed by the electrical engineers on the other building.",
    "start": "2903210",
    "end": "2908670"
  },
  {
    "text": "So do it this way. I I've been so happy to be so much fun now. Here, let me talk about some some basic Grasstree problem.",
    "start": "2908670",
    "end": "2919859"
  },
  {
    "text": "Called independent sets. And Col's independent said, I think everybody knows what independent set is in the graph.",
    "start": "2919860",
    "end": "2925500"
  },
  {
    "text": "That means you have here's a graph like a six cycle has had six six vertices to an end and a set of vertices is independent.",
    "start": "2925500",
    "end": "2936810"
  },
  {
    "text": "If there aren't any two that are next to each other. So on the left hand side, I have a BD for an independent set.",
    "start": "2936810",
    "end": "2947880"
  },
  {
    "text": "You start out with its vertex one in in the set or not. If if not, then we test two. If one is in.",
    "start": "2947880",
    "end": "2955990"
  },
  {
    "text": "I test two. And if two is is is it also that then I then I've lost.",
    "start": "2955990",
    "end": "2962840"
  },
  {
    "text": "It's not independent but if it is I keep on going. You can tell what I mean. This is a bit for independent sets in this, in this cycle. And up on the right hand side.",
    "start": "2962840",
    "end": "2976170"
  },
  {
    "text": "I have a kernel. Now this is this is not only independent, but it's maximally independent.",
    "start": "2976170",
    "end": "2983010"
  },
  {
    "text": "That means that if the center is independent, but I can't add any more vertices to it without losing this independence.",
    "start": "2983010",
    "end": "2989910"
  },
  {
    "text": "So that means I love every every neighborhood of every every time I have a vertex in it and all its neighbors.",
    "start": "2989910",
    "end": "3000170"
  },
  {
    "text": "One of those guys has to be present because if. Because if I didn't have them, then I could add it.",
    "start": "3000170",
    "end": "3008390"
  },
  {
    "text": "I mean, like, if all the neighbors weren't. If none of the neighbors were present, I could add this vertex in there and I could still get a bigger independent set.",
    "start": "3008390",
    "end": "3015410"
  },
  {
    "text": "So, Maximilien. Pendent said if this is any penance, said that you can't add any any more guys to without becoming dependent.",
    "start": "3015410",
    "end": "3026640"
  },
  {
    "text": "And that's that's a mouthful to say maximal independent set. And so the shorter word, Colonel, is is fortunately, it's even shorter than the word independence.",
    "start": "3026640",
    "end": "3038390"
  },
  {
    "text": "Let's hope so. The kernels of the cycle here, you see you see what's what what's the colonel going to look like?",
    "start": "3038390",
    "end": "3044990"
  },
  {
    "text": "Well. Well, like if I have one in four, that's a colonel, because I because I can't add two or three or six or five or six Kirschling,",
    "start": "3044990",
    "end": "3053000"
  },
  {
    "text": "you know, that's a colonel has it has has just two guys involved. I could have one, three and five. That's a colonel too.",
    "start": "3053000",
    "end": "3060390"
  },
  {
    "text": "And in general, if you if you have a cycle of length and it's colonels correspond to arrangements, it's independence sets in the cycle of length,",
    "start": "3060390",
    "end": "3076240"
  },
  {
    "text": "then are the cases where you don't have any two ones in a row and the colonels are furthermore,",
    "start": "3076240",
    "end": "3081780"
  },
  {
    "text": "you don't have any three 00 if you go around this sort of thing. So I would this a common Taurel problem, but it's also a boolean function,",
    "start": "3081780",
    "end": "3090029"
  },
  {
    "text": "which is true or false, depending on whether it's a colonel or a or an independent set. So so here's the algorithm for counting that I promised you.",
    "start": "3090030",
    "end": "3105400"
  },
  {
    "text": "You want to know how many independent sets there are in the cycle? C six. We can we can work bottom up into BD and figure out how many how many ways there are to get from each node to it to sink to the one sink.",
    "start": "3105400",
    "end": "3119790"
  },
  {
    "text": "So I put a zero here on the zero sink and I put a one on the one thing.",
    "start": "3119790",
    "end": "3125220"
  },
  {
    "text": "Now with the six. Then I look at the two at the two branches below it.",
    "start": "3125220",
    "end": "3130410"
  },
  {
    "text": "And there's one way to go from that from this five.",
    "start": "3130410",
    "end": "3137130"
  },
  {
    "text": "I can get one solution going this way and I guess I get zero going here. So I put a one there. The complicated cases arise when you jump levels.",
    "start": "3137130",
    "end": "3147750"
  },
  {
    "text": "For example, take this for here. I claim there are four solutions. I think three solutions. That's a little three. There means there are three solution B below it.",
    "start": "3147750",
    "end": "3156690"
  },
  {
    "text": "Why is that? Well, if I go to the right, like I pick up a solution here, if I go to the left, if I go on this dotted line, I pick up a solution here.",
    "start": "3156690",
    "end": "3165300"
  },
  {
    "text": "But there was. But but I dropped two levels. So this solution really has to be doubled because because you have five or not in there.",
    "start": "3165300",
    "end": "3174660"
  },
  {
    "text": "So if if you have to jump, if you have to jump K levels, you multiply by two to the K.",
    "start": "3174660",
    "end": "3182140"
  },
  {
    "text": "You've got to skip K levels. You multiply by two of the K of the two children that you have. But you can cover Urbino working bottom up. You just take one pass through the media and you find out exactly that.",
    "start": "3182140",
    "end": "3192420"
  },
  {
    "text": "There are 18 guys at the top, 18 independent sets in that cycle.",
    "start": "3192420",
    "end": "3197990"
  },
  {
    "text": "Now, if I want to choose a random independent set with probability each each with probability one 18th, I flippa a suitably large coin.",
    "start": "3197990",
    "end": "3208410"
  },
  {
    "text": "And with probability 13 18. I go to that. I go to the dotted line. The probability five, 18th. I go this way. And that tells me what X1 is and.",
    "start": "3208410",
    "end": "3216860"
  },
  {
    "text": "And similarly looks like it. No, no, no. Of course it's, it's, it's not.",
    "start": "3216860",
    "end": "3222750"
  },
  {
    "text": "It's no big deal to be able to choose a random element out of 18 things. I could just make a list of the 18 things and choose and know. Flip a coin.",
    "start": "3222750",
    "end": "3230400"
  },
  {
    "text": "Wow. The 18 gauge one. But when I'm sitting here with a boolean function, the 100 variables that has, you know,",
    "start": "3230400",
    "end": "3236890"
  },
  {
    "text": "as many trillion of solutions and the fact that I can get a random solution very quickly with this algorithm is is a big,",
    "start": "3236890",
    "end": "3244680"
  },
  {
    "text": "big deal because lots of cases that it would look like these are EBD for independent sets of pearls of that six cycle.",
    "start": "3244680",
    "end": "3257369"
  },
  {
    "text": "That's the six cycles. If I have some other graph, it's going to be more or less difficult.",
    "start": "3257370",
    "end": "3263100"
  },
  {
    "text": "That's right. Because some graphs are some graphs are more or less difficult. Are there are families graphs? So here I've got a few things about.",
    "start": "3263100",
    "end": "3272960"
  },
  {
    "text": "You're right. So with the planer graph. They can also be more or less difficult. And the only answer. The general answer to your question is this, that if you want to know which are the.",
    "start": "3272960",
    "end": "3282540"
  },
  {
    "text": "Which are the. Are the only functions that have nice BDD. I like to think of this picture, which, by the way, has figured 23c.",
    "start": "3282540",
    "end": "3292020"
  },
  {
    "text": "You see how far away I am. I flyways off in my in my guessing that I would that I would start with figure ten in the rest of the book.",
    "start": "3292020",
    "end": "3300420"
  },
  {
    "text": "But here I'm Pasterick. Okay. So. So this is this is it.",
    "start": "3300420",
    "end": "3306720"
  },
  {
    "text": "In general you can represent any boolean function as a set, as a set of modules and picture like this.",
    "start": "3306720",
    "end": "3314920"
  },
  {
    "text": "Marja's in a row. Where X1 is an input out one x two as input to M2 and so on.",
    "start": "3314920",
    "end": "3323569"
  },
  {
    "text": "And and what the simpler the diagram of this form, the better your chances having a good Mediha.",
    "start": "3323570",
    "end": "3331070"
  },
  {
    "text": "And it knows what's happening is these models are communicating by by sending signals, zeros and ones to each other.",
    "start": "3331070",
    "end": "3339080"
  },
  {
    "text": "And some of the arrows are going to the right and some are going to the left.",
    "start": "3339080",
    "end": "3344230"
  },
  {
    "text": "And when I say here is that you have a four arrows coming to the right of module and four.",
    "start": "3344230",
    "end": "3352010"
  },
  {
    "text": "And I have before arrows entering and forth from M5.",
    "start": "3352010",
    "end": "3360370"
  },
  {
    "text": "So so you hit your things going forward and the output is coming out here.",
    "start": "3360370",
    "end": "3366530"
  },
  {
    "text": "So hopefully Kado measure a bunch of modules that you had. You hooked the Jawaid together and you have some stuff.",
    "start": "3366530",
    "end": "3375140"
  },
  {
    "text": "Some signals are propagating to the right, some are going to the left. Well, what turns out is that the B size is bounded by two by the some overall modules of two to the AC sub K times two to the base.",
    "start": "3375140",
    "end": "3391550"
  },
  {
    "text": "Okay, that's it. That's a double exponential in there. So if you don't have any any backward connections whatsoever, then yeah.",
    "start": "3391550",
    "end": "3400070"
  },
  {
    "text": "Then it's just the sum of two to the ACA. And so if you're EHS are all if you have always felt like, like at most 10 Y is going to the right,",
    "start": "3400070",
    "end": "3412160"
  },
  {
    "text": "then you have only a thousand nodes in your BD at that level basically.",
    "start": "3412160",
    "end": "3418049"
  },
  {
    "text": "But if you've got, if you've got things coming backwards then, then you might be in trouble.",
    "start": "3418050",
    "end": "3423450"
  },
  {
    "text": "Sook's so rigid in any finance cycle you can arrange a cycle in one straight line",
    "start": "3423450",
    "end": "3429470"
  },
  {
    "text": "without some backward link because there's there's the propagation from from you know, it's a cycle after all, it's not a straight line, but there's only one one Vakhtang coming over.",
    "start": "3429470",
    "end": "3439670"
  },
  {
    "text": "So it's not only introduces the factor two is in, it's as if you double over all the forward links and there's a it's a nice a nice theorem due to guiding Ken Magnet.",
    "start": "3439670",
    "end": "3452990"
  },
  {
    "text": "Ken Macmillan News is QST thesis nineteen ninety years or something like that. I don't remember where I think was a Berkeley student. Yeah. You know what I mean.",
    "start": "3452990",
    "end": "3464180"
  },
  {
    "text": "Really. OK. Did he go with. He's an undergrad at Berkeley. I'm pretty sure he was up. Oh no.",
    "start": "3464180",
    "end": "3472610"
  },
  {
    "text": "Maybe. No I don't. I thought it was a beautiful thesis. Has published a book, Symbolic Money Masters Degree in.",
    "start": "3472610",
    "end": "3479300"
  },
  {
    "text": "Oh, okay. So I enjoyed Estes's very much. And this is this is one of one of the nice and he had another theme like module's originally three, but you can reduce it to this, to this house.",
    "start": "3479300",
    "end": "3493410"
  },
  {
    "text": "Okay. So so that's the general answer to you. If you have a graph that doesn't have much too much feedback on it, then that's the the better it is.",
    "start": "3493410",
    "end": "3504050"
  },
  {
    "text": "And if you have a tree, you can still arrange things in the nose of a tree in a straight line without too much of where we have to send signals",
    "start": "3504050",
    "end": "3516410"
  },
  {
    "text": "through somebody else to get to get their logarithmic curve effect or something like that that goes in your sort.",
    "start": "3516410",
    "end": "3522859"
  },
  {
    "text": "So that's. So a lot of graphs work this way. And even when the graph is pretty bad with lots and lots of interconnections, it's not too bad either.",
    "start": "3522860",
    "end": "3534720"
  },
  {
    "text": "And I'll show you that picture now. Let's take another let's take another thing.",
    "start": "3534720",
    "end": "3544890"
  },
  {
    "text": "Here's a three by three grid. Now, for this I like the question is connectedness.",
    "start": "3544890",
    "end": "3552769"
  },
  {
    "text": "I'm going to variables in this case are not the vertices, but the edges between vertices.",
    "start": "3552770",
    "end": "3559070"
  },
  {
    "text": "So these edges might or might not be present in the graph. And the graph is connected. If I have enough edges to connect up all the vertices. So so here I have the BTD for that guy where the branches are edges.",
    "start": "3559070",
    "end": "3573480"
  },
  {
    "text": "So like it says is there's one to present. And if if not, we go here and test if a one three is present.",
    "start": "3573480",
    "end": "3580850"
  },
  {
    "text": "And if so, we go here. And if one, two is if one, two is not present and one three is not present, then I think time it's not connected because because Vertex one isn't gonna be in it.",
    "start": "3580850",
    "end": "3590400"
  },
  {
    "text": "It is going to be connected to the rest of the guy. Okay. So here's a here's a BTD for this guy.",
    "start": "3590400",
    "end": "3598809"
  },
  {
    "text": "And it's a grid. It's, it's not it's not so nice as a straight line because you've got you've got Rozanne columns.",
    "start": "3598810",
    "end": "3606800"
  },
  {
    "text": "But take the take the eight by eight case. If I agree. You got you've got a hundred and twelve edges.",
    "start": "3606800",
    "end": "3616890"
  },
  {
    "text": "In an eight by eight grid, it's not just 64, but you got a lot of edges and integrate grid.",
    "start": "3616890",
    "end": "3624569"
  },
  {
    "text": "But in a second or two, you can figure out exactly what the how many combinations of these edges make it connected.",
    "start": "3624570",
    "end": "3636310"
  },
  {
    "text": "You know, like like sixty three edges. Is is that it's the number of spanning trees of of that of that eight by eight grid.",
    "start": "3636310",
    "end": "3650100"
  },
  {
    "text": "And, you know, you could start listening all the spanning trees. You can just compute how many Banshee's there.",
    "start": "3650100",
    "end": "3655530"
  },
  {
    "text": "And this is how many trees plus an extra edge there are. And, you know, and then of course, if you have all of the all of the edges, it's certainly connected.",
    "start": "3655530",
    "end": "3663510"
  },
  {
    "text": "So this is a number of solutions with a certain number thing. And from this, you can work out the probability of connectedness if if each edge is present",
    "start": "3663510",
    "end": "3672510"
  },
  {
    "text": "with with probability p you can figure out the reliability for this thing.",
    "start": "3672510",
    "end": "3679200"
  },
  {
    "text": "And FFP and the derivative shows the spike where well, who where most of the cases are more they make it make it connected.",
    "start": "3679200",
    "end": "3692990"
  },
  {
    "text": "So so this is this is like what physicist people talk about the percolation problems and things like this.",
    "start": "3692990",
    "end": "3702150"
  },
  {
    "text": "But how big is this? You know, 112 variables has forty three thousand seven hundred ninety nine.",
    "start": "3702150",
    "end": "3708630"
  },
  {
    "text": "So that's not too bad. You have to get you could get to a 50 by 50 grid then.",
    "start": "3708630",
    "end": "3715200"
  },
  {
    "text": "OK. The BTB has bigger, bigger, but it's only growing as to the square root of N.",
    "start": "3715200",
    "end": "3720730"
  },
  {
    "text": "And and two to the 30th is within reason. And so maybe N squared has to be, you know, nine hundred or something.",
    "start": "3720730",
    "end": "3729589"
  },
  {
    "text": "I mean, it's the square of the number of notes. So the, the even though it grows exponentially, in any case,",
    "start": "3729590",
    "end": "3743410"
  },
  {
    "text": "it grows slow enough that we can still handle lots of problems that that looked like they were beyond the pale.",
    "start": "3743410",
    "end": "3750780"
  },
  {
    "text": "Okay. Now then I talk about friendly function and these are the sofrito.",
    "start": "3750780",
    "end": "3758240"
  },
  {
    "text": "Okay, I'm running all the time, so I can't think of any symmetric function.",
    "start": "3758240",
    "end": "3766230"
  },
  {
    "text": "Has a good the lots of other functions do and I told you about the above is negative. But let me let me get to to what I wanted to show you most today.",
    "start": "3766230",
    "end": "3775230"
  },
  {
    "text": "And that is let's take a let's take a let's take a graph that I showed I think I gave a lecture about cool graphs.",
    "start": "3775230",
    "end": "3781680"
  },
  {
    "text": "And I think I showed this graph here because it's a graph that shows the states of the United States and",
    "start": "3781680",
    "end": "3790349"
  },
  {
    "text": "people in Europe aren't going to appreciate this graph as much as I did because two states are connected. But this if you can drive from one state to another, and this means a lot to me, because during my life, I've driven most of these roads.",
    "start": "3790350",
    "end": "3801539"
  },
  {
    "text": "I mean, I can remember exactly what you know, what what I was doing when I went from West Virginia to Virginia and so on.",
    "start": "3801540",
    "end": "3809650"
  },
  {
    "text": "And so it's just this graph brings back a lot of memories for me. But but also, it turns out it was a planer graph, but otherwise it's a fairly, you know, organic.",
    "start": "3809650",
    "end": "3820859"
  },
  {
    "text": "It's not a it's not a mathematical graph. Like a cycle or a grid. And so we can actually we can show the versatility of things by this and.",
    "start": "3820860",
    "end": "3831329"
  },
  {
    "text": "And for example, independent sets. What's an independent set in this in this graph? It's a bunch of states where you don't have any two states next to each other.",
    "start": "3831330",
    "end": "3841740"
  },
  {
    "text": "Right. So and kernels are maximally independent set so that.",
    "start": "3841740",
    "end": "3847910"
  },
  {
    "text": "No. So I got some pictures here of kernels in this graph.",
    "start": "3847910",
    "end": "3854530"
  },
  {
    "text": "Now, how big this is, this has forty nine. I click through and I threw in D.C. here because there was kind of a hole in the picture.",
    "start": "3854530",
    "end": "3864720"
  },
  {
    "text": "And you can drive, you know, but it doesn't really add that much. And really, I kind of wish I could do without D.C. like lots of times these days.",
    "start": "3864720",
    "end": "3871900"
  },
  {
    "text": "But um. But anyway, I put it in. So I have forty nine variables here. Misbelief multi-function forty I get.",
    "start": "3871900",
    "end": "3880839"
  },
  {
    "text": "How big you think the media is for the independent sets of of this graph. What would you what where would you get David.",
    "start": "3880840",
    "end": "3890220"
  },
  {
    "text": "What would you you know. Three million. Three million. Okay. So it's eight. The fact that we had four and twenty eight.",
    "start": "3890220",
    "end": "3903020"
  },
  {
    "text": "On page eight. But it's three hundred and thirty nine.",
    "start": "3903020",
    "end": "3908400"
  },
  {
    "text": "On page forty three. When I talk about reordering because what happened is that I started out.",
    "start": "3908400",
    "end": "3914539"
  },
  {
    "text": "I know I saw of eyeball this. Graff and I said, well, I went independence, that's what I don't want to have to know as I'm going through the B.V. I don't want have to remember too many things,",
    "start": "3914540",
    "end": "3923210"
  },
  {
    "text": "too many things about about the things I've already looked at, because that makes a BTD laugh.",
    "start": "3923210",
    "end": "3928609"
  },
  {
    "text": "So I want to go through the states in some order so that I don't have to like stand with Maine and New Hampshire,",
    "start": "3928610",
    "end": "3937040"
  },
  {
    "text": "Vermont, Massachusetts, because that's the way I learned the states when I was in fourth grade.",
    "start": "3937040",
    "end": "3942230"
  },
  {
    "text": "But then I started. And then when I got into into the Midwest here, you know, I don't want to start to jump into California or something like this,",
    "start": "3942230",
    "end": "3949940"
  },
  {
    "text": "because knowing that that vertex is is pend or not, I have to remember lots and lots of things,",
    "start": "3949940",
    "end": "3957170"
  },
  {
    "text": "whether they're whether they're present or not, to get an independent set. I'm not allowed to choose another thing that's that's next to one that you have.",
    "start": "3957170",
    "end": "3964490"
  },
  {
    "text": "So I want to keep the boundary between the guys I've looked at and the guys I like to come. I want to keep that boundary as small as possible. So I just, you know, I just eyeball this map.",
    "start": "3964490",
    "end": "3973910"
  },
  {
    "text": "And I kicked my shoulder, fairly arbitrary ordering of the states and plug it into my computer and forty nine variables,",
    "start": "3973910",
    "end": "3981440"
  },
  {
    "text": "which is sort of scary because due to the forty ninth is a big number and the size of truth table is how much is going to compress down.",
    "start": "3981440",
    "end": "3989930"
  },
  {
    "text": "So I was very happy that it came out to four hundred, four hundred and twenty eight on my first step.",
    "start": "3989930",
    "end": "3995690"
  },
  {
    "text": "On my first try. Then Col's. These are maximal independent steps.",
    "start": "3995690",
    "end": "4000849"
  },
  {
    "text": "So it's not only independent but you also have this extra constraint that you've got to throw in this. And that turned out the seven hundred eighty nodes to to to represent all the kernels.",
    "start": "4000850",
    "end": "4012080"
  },
  {
    "text": "And, and here you are. Let's zoom zoom in on this guy. This is a this is a kernel for his people that the black guys get in their dark colored states.",
    "start": "4012080",
    "end": "4024369"
  },
  {
    "text": "They're all independent and. But you but you can't throw in any more.",
    "start": "4024370",
    "end": "4030760"
  },
  {
    "text": "Anybody else without. And you have two in a row.",
    "start": "4030760",
    "end": "4037480"
  },
  {
    "text": "You can you can check it out. OK, so now here I'm waiting.",
    "start": "4037480",
    "end": "4042970"
  },
  {
    "text": "The states by a simple rule, not population, is out. I'm just looking at the some of the letters in their name. So, for example, California's s.A.",
    "start": "4042970",
    "end": "4052900"
  },
  {
    "text": "That's a second. Says three and eight counts as one. So California has has week one and the big heavy heavyweight is Wyoming W plus Y that, you know, I don't even know how to add that number is that big.",
    "start": "4052900",
    "end": "4067029"
  },
  {
    "text": "But why is twenty five WS. Twenty three or so. So anyway that's, that's a heavyweight compared to California's in this state in this case.",
    "start": "4067030",
    "end": "4076750"
  },
  {
    "text": "So what's a kernel of minimum weight. Okay. This is a this is actually a rather difficult combinatorial problem to figure out because because you,",
    "start": "4076750",
    "end": "4088060"
  },
  {
    "text": "you, you have to make it a maximal independent set, but you still don't want to have much weight. So anyway. And then the maximum weight kernel is also a maximum weight independent set because because the weights are all positive in this case.",
    "start": "4088060",
    "end": "4102069"
  },
  {
    "text": "And so, so, so anyway, the fact that we got a BTD of size 780.",
    "start": "4102070",
    "end": "4111369"
  },
  {
    "text": "We can run our bullying algorithm that I didn't have time to show you. But it's similar to the counting algorithm. Just going bottom up and finding and you find it easily going through 780 steps.",
    "start": "4111370",
    "end": "4125469"
  },
  {
    "text": "What's the what's the kernel of smallest way? Not easy to do by hand at all.",
    "start": "4125470",
    "end": "4131049"
  },
  {
    "text": "In fact, the total number of kernels you could do in a sixty six thousand kernels from rapid button.",
    "start": "4131050",
    "end": "4142239"
  },
  {
    "text": "But the running the running time is, is that just a fraction of a less than number of kernels?",
    "start": "4142240",
    "end": "4150759"
  },
  {
    "text": "The total time to count the number of kernels is is it pure memory access?",
    "start": "4150760",
    "end": "4156009"
  },
  {
    "text": "Is it. Well, let me cut. I'm sorry that there's so much to say.",
    "start": "4156010",
    "end": "4162969"
  },
  {
    "text": "I want to show you this this example that I thought of this morning. And I'm not sure if you've got it in the book or not, but probably will.",
    "start": "4162970",
    "end": "4173620"
  },
  {
    "text": "But here is something that nobody has seen before because I haven't seen it before until this morning.",
    "start": "4173620",
    "end": "4180250"
  },
  {
    "text": "I've taken I took out D.C. here, but I know because I, I wanted to,",
    "start": "4180250",
    "end": "4187210"
  },
  {
    "text": "but also also because I have 48 states now and and I wanted to do the four color problem.",
    "start": "4187210",
    "end": "4197130"
  },
  {
    "text": "So no two states, not two adjacencies get the same color. So. So all of the yellow things are independents set.",
    "start": "4197130",
    "end": "4204340"
  },
  {
    "text": "All the orange ones are independent said. All the pink ones are independence and all the green ones are. Yeah. I'm tired of red state. Blue state. So I used only the only green and things like this.",
    "start": "4204340",
    "end": "4215550"
  },
  {
    "text": "Now. What I did was I so, so so I wanted to to solve this would be these and I mean.",
    "start": "4215550",
    "end": "4228059"
  },
  {
    "text": "But I also wanted to use this idea of waiting the state, like California gets C plus eight.",
    "start": "4228060",
    "end": "4234150"
  },
  {
    "text": "That's three plus one. Wait. And and so. So I went out there. I went to optimum solution to this problem. Like, I'm going to have twelve of each color.",
    "start": "4234150",
    "end": "4243040"
  },
  {
    "text": "Exactly twelve of each color. Furthermore, the weight of the yellow ones gets multiplied by one.",
    "start": "4243040",
    "end": "4249900"
  },
  {
    "text": "The orange ones get way o factor of two. The green ones by three.",
    "start": "4249900",
    "end": "4255270"
  },
  {
    "text": "And the pink ones by four. So for example, I picked up the heavyweight here.",
    "start": "4255270",
    "end": "4260610"
  },
  {
    "text": "Wyoming is pink. You see what West Virginia is pink and well, Vermont is pink.",
    "start": "4260610",
    "end": "4268219"
  },
  {
    "text": "These are all near the end of the alphabet. Rhode Island. Well, you know, we got to kind of choose some that aren't so high.",
    "start": "4268220",
    "end": "4275400"
  },
  {
    "text": "The yellow ones, you know, I'm trying to maximize the the weight. But but but I have to hope you understand my problem.",
    "start": "4275400",
    "end": "4284800"
  },
  {
    "text": "I've got to have twelve of each color, and I want to get the best solution I can to this weight problem.",
    "start": "4284800",
    "end": "4292530"
  },
  {
    "text": "Now, this is the unique solution to this problem. There are no other way to do this map coloring.",
    "start": "4292530",
    "end": "4299150"
  },
  {
    "text": "That gets a higher score to this particular problem. Isn't that important interests? No. But how many solutions are there to the four color problem with, you know, with with twelve of each of each color and up for this?",
    "start": "4299150",
    "end": "4320159"
  },
  {
    "text": "How did I set it up for BDD? And that's why one Finnish bike by Slaney and it's exercising here that has the answers.",
    "start": "4320160",
    "end": "4330480"
  },
  {
    "text": "So I hope like I'm fortunate that I have the index yet so. So I'll have to have to be lucky to find this.",
    "start": "4330480",
    "end": "4338489"
  },
  {
    "text": "But the. Let's see. OK. The idea is very simple.",
    "start": "4338490",
    "end": "4348659"
  },
  {
    "text": "So I, yes. I kind of show and tell that I can, I can do for that with the with with the ordering set that I was late last week,",
    "start": "4348660",
    "end": "4362730"
  },
  {
    "text": "though, I finally debug my my algorithms for it for reordering the variables. And I found out that my 428. So I, I could I could improve to three hundred thirty nine.",
    "start": "4362730",
    "end": "4374760"
  },
  {
    "text": "By starting in California and actually starting in Utah and then ending up in Maine. So things like this. But let's see where we are here. Oh yeah.",
    "start": "4374760",
    "end": "4386630"
  },
  {
    "text": "OK, so some I drive a function of ninety-eight variables or actually ninety-six in this case that you're",
    "start": "4386630",
    "end": "4396900"
  },
  {
    "text": "leaving out D.C. So I have six variables and I call it the coloring function of ninety six variables.",
    "start": "4396900",
    "end": "4405060"
  },
  {
    "text": "And what is is is the end of four independent set function. So I say independent of a main and beaming through A California and B California and then so.",
    "start": "4405060",
    "end": "4417860"
  },
  {
    "text": "So that has to be independent set. And then this has to be an independence that also made it a main and B Bahrami and similarly A bar and B and a bar and B bar.",
    "start": "4417860",
    "end": "4430860"
  },
  {
    "text": "So in a sense, every state is being given a two bit code. And if the bits are zero zero, then I get a bar and B bar and all the all the states that have a zero zero code have to be have to be independent.",
    "start": "4430860",
    "end": "4445080"
  },
  {
    "text": "All the states that have a zero one code, you have to be independent. All the states have then one zero code any and so on.",
    "start": "4445080",
    "end": "4450570"
  },
  {
    "text": "OK, so so this is a ruling function that ninety eight variables that describes all the four colorings of the health of the estates.",
    "start": "4450570",
    "end": "4465599"
  },
  {
    "text": "Now there's another constraint that I have to have full of each of each color. And so I have to add that as another N and that into the thing.",
    "start": "4465600",
    "end": "4475170"
  },
  {
    "text": "If I have only, if I had only this coloring I can figure out all the number of how many we throw out of four color foot.",
    "start": "4475170",
    "end": "4483330"
  },
  {
    "text": "Forty nine states that BD has twenty five thousand five hundred nodes and you can count it.",
    "start": "4483330",
    "end": "4490860"
  },
  {
    "text": "You can count on find out that you got 25 quadrillion. Oh no. Twenty five trillion. Six hundred.",
    "start": "4490860",
    "end": "4499560"
  },
  {
    "text": "Twenty three billion. So long ways to do the four coloring. And you divide that by twenty four because you because you can say that there are four factorial ways to interchange the colors.",
    "start": "4499560",
    "end": "4511889"
  },
  {
    "text": "So you get one point, one trillion ways to do it that are essentially different from. I need for this computations down just with with with the the graph 112 lines here.",
    "start": "4511890",
    "end": "4522539"
  },
  {
    "text": "I think it's hundred and one hundred and something. Let it go. Three. Three and a half. Make amends. That's three and a half million references to memory.",
    "start": "4522540",
    "end": "4533890"
  },
  {
    "text": "And and two point two megabytes of memory for the for the calculation.",
    "start": "4533890",
    "end": "4539970"
  },
  {
    "text": "And, you know, this is a fraction of a second on modern computer.",
    "start": "4539970",
    "end": "4547260"
  },
  {
    "text": "And so but then you then you have to add this extra constraint of twelve of each.",
    "start": "4547260",
    "end": "4552750"
  },
  {
    "text": "And for that I.",
    "start": "4552750",
    "end": "4558640"
  },
  {
    "text": "OK. Well I've got I got three statistics here.",
    "start": "4558640",
    "end": "4565290"
  },
  {
    "text": "I ran this this morning. So the total number of nodes was one million. It went up to one million three forty thousand six fifty nine nodes altogether instead of from 2000.",
    "start": "4565290",
    "end": "4577079"
  },
  {
    "text": "You have to have to and in the constraint that there is exactly 12 zero zeros, exactly twelve zero ones.",
    "start": "4577080",
    "end": "4582360"
  },
  {
    "text": "The second twelve one zero. And then there's going to be exactly one ones.",
    "start": "4582360",
    "end": "4588869"
  },
  {
    "text": "And the total time to run this program was two and a half seconds. And that was almost entirely just because I had to communicate to these nodes.",
    "start": "4588870",
    "end": "4598080"
  },
  {
    "text": "I wrote them into a file and temporary files from my from my BTD package through to my package that evaluated the the waiting function.",
    "start": "4598080",
    "end": "4608160"
  },
  {
    "text": "And so it was a two one two seconds to just read these thirty one megabyte file,",
    "start": "4608160",
    "end": "4613620"
  },
  {
    "text": "which was actually kind of describing the BTB and then not and then not to do the calculation.",
    "start": "4613620",
    "end": "4620790"
  },
  {
    "text": "It was just, it was just like this too, to figure out that this was the one only solution.",
    "start": "4620790",
    "end": "4626790"
  },
  {
    "text": "Now how do I maximize it? Well, it's very simple. If the code was zero zero, I gave it away that night multiplied by zero, if the code was zero one and multiply.",
    "start": "4626790",
    "end": "4635210"
  },
  {
    "text": "So, so, so. So eh. So the variable ace of main would would be equal to, let's say, twice the sum of MLSE.",
    "start": "4635210",
    "end": "4648840"
  },
  {
    "text": "While Bisa main would be just the sum of M policy and such. And so I double that. So I have two bits cause in one of them is weighted twice in one way too.",
    "start": "4648840",
    "end": "4659360"
  },
  {
    "text": "So. So that's making the weight zero one, two and three instead of one, two, three and four.",
    "start": "4659360",
    "end": "4664520"
  },
  {
    "text": "But that's just adding a constant to the total. And so. So this is the this is the solution to that to that problem, which.",
    "start": "4664520",
    "end": "4673910"
  },
  {
    "text": "Now, I'm not saying it's the most important problem in the world. But what I'm saying it's it's an example of the kind of problems that Common Core problems that that I've been having loads of fun doing with BDD.",
    "start": "4673910",
    "end": "4690760"
  },
  {
    "text": "And if I had another, I think I could lecture about this for a semester, you know? I mean, I really did. I think I could give an undergrad. If I still teaching, I could give an undergraduate class.",
    "start": "4690760",
    "end": "4700429"
  },
  {
    "text": "I was talking just about Betis for it for the ten weeks, according to Stanford.",
    "start": "4700430",
    "end": "4705810"
  },
  {
    "text": "And and we would never run out of important things to say on an end user.",
    "start": "4705810",
    "end": "4711210"
  },
  {
    "text": "So that's my story on BD.",
    "start": "4711210",
    "end": "4717210"
  },
  {
    "text": "Ready for questions. Yes. It's going to help the angels on the head of the problem, the angels with the head of the foot.",
    "start": "4717210",
    "end": "4726340"
  },
  {
    "text": "Actually, when I get further into this, I talk about I talk about nasti functions.",
    "start": "4726340",
    "end": "4733080"
  },
  {
    "text": "I'm going to have friendly fun NASSI function anyway, would with our comments or problems. You eventually hit it. Hit the wall. You hit a wall and you get.",
    "start": "4733080",
    "end": "4743130"
  },
  {
    "text": "It's not going to solve a lot of problems that you never thought you'd be able to do. But then you then you push it. Then you then you set your sights high.",
    "start": "4743130",
    "end": "4750840"
  },
  {
    "text": "Oh, now let me try this problem. And then then you run out of things. I learned a very interesting time now and that that up until about five years ago,",
    "start": "4750840",
    "end": "4762719"
  },
  {
    "text": "a lot of these problems that you couldn't do with BD, it was because you didn't have enough space.",
    "start": "4762720",
    "end": "4769140"
  },
  {
    "text": "Well, you know, if you were you were frustrated because there weren't enough memory in your computer to to to study the TV.",
    "start": "4769140",
    "end": "4777330"
  },
  {
    "text": "And so there would be a space out problem. But but if you could only if you could only find somebody that had had a bigger,",
    "start": "4777330",
    "end": "4785040"
  },
  {
    "text": "bigger memory, then you could then, you know, then get the answer in a couple of days.",
    "start": "4785040",
    "end": "4790120"
  },
  {
    "text": "Now, however, we're really in a different turning point because it's it's not so hard to get, you know, 32 gigabytes of RAM now.",
    "start": "4790120",
    "end": "4800940"
  },
  {
    "text": "And if you have a BBT that fills 32 gigabytes around it, it's going to get you started to operate on that.",
    "start": "4800940",
    "end": "4809110"
  },
  {
    "text": "It's it's starting to take you a month to do that. And so now I'm going to we're getting to the point where I'm not having this space out anymore,",
    "start": "4809110",
    "end": "4817650"
  },
  {
    "text": "where I got so much space that that that I'm running out of time because I know to you know, I have fairly efficient algorithms.",
    "start": "4817650",
    "end": "4826150"
  },
  {
    "text": "So there's so many bits in there that that that that I'm running all the time. And that never happened to me before with the. You thought that face transition situation for autographs?",
    "start": "4826150",
    "end": "4843730"
  },
  {
    "text": "Oh, oh, yes, lots of things in here. Ah ah ah ah ah ah ah ah.",
    "start": "4843730",
    "end": "4852570"
  },
  {
    "text": "That's one of the reasons it took me a year, because I couldn't. Because I couldn't. Every morning I think of something else that would be worth worth exploring and, you know, so wish.",
    "start": "4852570",
    "end": "4861740"
  },
  {
    "text": "So at least I got enough. You know, I had to finally I had to finally draw the line.",
    "start": "4861740",
    "end": "4866970"
  },
  {
    "text": "I started playing with things with with things that were just for fun, for, you know, the game of life.",
    "start": "4866970",
    "end": "4873450"
  },
  {
    "text": "So you see the game. This is for for the younger people, the audience. This is what we have to call love.",
    "start": "4873450",
    "end": "4883020"
  },
  {
    "text": "We have to call the first line because nuclear is second life now. But my first life was it was John Conways game where where you have zeros and ones in a grid and you have a rule for the way think things.",
    "start": "4883020",
    "end": "4898650"
  },
  {
    "text": "Zero means dead and one means alive. And and you have this very, very, very nice rule deciding at the next sensitive time who's going to be alive, who's gonna be dead.",
    "start": "4898650",
    "end": "4909469"
  },
  {
    "text": "And and the the rule is is pretty symmetrical between between the things that your neighbors.",
    "start": "4909470",
    "end": "4918420"
  },
  {
    "text": "And so BDD are good at symmetric functions. And so I. Okay, let me let me let me play with himself for two weeks, I, I did nothing more than then start to play with the game of life with BTD because",
    "start": "4918420",
    "end": "4930989"
  },
  {
    "text": "I didn't think anything news that there's there's thousands down researchers, but they haven't been using BD on this problem. And so I found out, for example, well I wrote my first Frizell about the game of life.",
    "start": "4930990",
    "end": "4949380"
  },
  {
    "text": "This is how many configurations on a ten by ten board vanish in one step in the game of life,",
    "start": "4949380",
    "end": "4959639"
  },
  {
    "text": "and which is one has the most has has the most other life cells. And this is it. He is unique. OK. And and I found this beautiful on the chessboard.",
    "start": "4959640",
    "end": "4971400"
  },
  {
    "text": "This is the unique thing on a chess board. That's a flip flop in making of light, which means that each state goes to the other one back and forth, back and forth.",
    "start": "4971400",
    "end": "4980460"
  },
  {
    "text": "And it's the only way you can do it with 28 life cells, which is the maximum amount of chess or things like that. So. So anyway, I kept thinking of more and more things to play with that that I could throw BDD at.",
    "start": "4980460",
    "end": "4994350"
  },
  {
    "text": "And sometimes it worked well and, you know, I could do ResultSet. That can be a pain under way. Other times I would hit a wall and end it with me.",
    "start": "4994350",
    "end": "5008500"
  },
  {
    "text": "Oh geez. Now I find I've stated very similar to a five state automaton in the.",
    "start": "5008500",
    "end": "5018920"
  },
  {
    "text": "Yeah. It's just like minimizing the non-deterministic fact when I say the timing on something like this.",
    "start": "5018920",
    "end": "5027210"
  },
  {
    "text": "So yeah. So. So there's a good that's a good analogy to the point, but it's different Bessel.",
    "start": "5027210",
    "end": "5033500"
  },
  {
    "text": "It's not different because of this canonical data structure.",
    "start": "5033500",
    "end": "5040900"
  },
  {
    "text": "Abusing it that that it was a revelation when when Bright showed pulp how easily you could manipulate these data structures it inside.",
    "start": "5040900",
    "end": "5056390"
  },
  {
    "text": "So we had all that. But like one of the fundamental theorems was proved by three authored paper.",
    "start": "5056390",
    "end": "5067900"
  },
  {
    "text": "Were they anyway. Hopcroft I think we in the 1970s.",
    "start": "5067900",
    "end": "5075590"
  },
  {
    "text": "One of the main theorems that but they proved it in an abstract form. They said, they said that if you have a if you have a essentially if you have a BTD and think it here you have if you have a BTD and a free DVD which is which,",
    "start": "5075590",
    "end": "5094790"
  },
  {
    "text": "which is read once but not necessarily in the same order, then you can then you can compute the um,",
    "start": "5094790",
    "end": "5103040"
  },
  {
    "text": "whether one is a subset of the other in polynomial time. And this is what the theoreticians did put it.",
    "start": "5103040",
    "end": "5109270"
  },
  {
    "text": "But it turned out that not only is this part knowing time, but it's a beautiful, simple algorithm and it goes fast and things like this.",
    "start": "5109270",
    "end": "5115160"
  },
  {
    "text": "So and so the the there's not a theory that was that was out there indicating that that had been used.",
    "start": "5115160",
    "end": "5124310"
  },
  {
    "text": "We're going to be a big thing in practice. But that. But it was still a big surprise.",
    "start": "5124310",
    "end": "5129720"
  },
  {
    "text": "Like how how how well they did actually do actually.",
    "start": "5129720",
    "end": "5135410"
  },
  {
    "text": "Were. Their folklore is that there's this thing called Zebedee, these are all suppressed.",
    "start": "5135410",
    "end": "5144670"
  },
  {
    "text": "This is part of because for commendatory. Exactly. And that is that is next week.",
    "start": "5144670",
    "end": "5150370"
  },
  {
    "text": "I mean, I like that. That's exactly what the thing I have to write between now and finishing this section.",
    "start": "5150370",
    "end": "5158750"
  },
  {
    "text": "I left it, you know. You know, there's so much else to cover. But but but but this is this is a following idea.",
    "start": "5158750",
    "end": "5168650"
  },
  {
    "text": "Instead of using beads, the way I define them, we're bkb is something with the left hand.",
    "start": "5168650",
    "end": "5175870"
  },
  {
    "text": "It's not equal to the right. With a ZT, the bead is saying something else.",
    "start": "5175870",
    "end": "5181700"
  },
  {
    "text": "It says the left half is not entirely zero. And because of the left half, is it.",
    "start": "5181700",
    "end": "5189860"
  },
  {
    "text": "So it's when ZT you suppress the left half if it's entirely zero.",
    "start": "5189860",
    "end": "5195679"
  },
  {
    "text": "And the thing is loss of control problems. You're dealing with boolean functions that are sparse. They have only a small number of ones in the true trouble.",
    "start": "5195680",
    "end": "5204890"
  },
  {
    "text": "And so because the ones are the solution to to treat your problem and the right to my solution.",
    "start": "5204890",
    "end": "5212090"
  },
  {
    "text": "And so. And so. So then it's very rare that you get the left hand side equaling the right hand side.",
    "start": "5212090",
    "end": "5219590"
  },
  {
    "text": "But fairly often that you get that you get the left hand side equals zero. And with this redefinition of being used again, you get a canonical form.",
    "start": "5219590",
    "end": "5228710"
  },
  {
    "text": "And and and and you get smaller.",
    "start": "5228710",
    "end": "5234989"
  },
  {
    "text": "But then the two branches can kick can be the same Bubalo A. But that hardly ever happens in your problem. And you can you can save a factor of anywhere.",
    "start": "5234990",
    "end": "5243530"
  },
  {
    "text": "And it's a number of variables. It doesn't say it's not an exponential saving the.",
    "start": "5243530",
    "end": "5250469"
  },
  {
    "text": "In either case, if you didn't have a reduction. If I didn't reduce beads, I just put in the nodes that had that had two to equal the sentence.",
    "start": "5250470",
    "end": "5261900"
  },
  {
    "text": "The same in the CBD. If you if you inner suit if if has left branch of going to all zeros,",
    "start": "5261900",
    "end": "5268560"
  },
  {
    "text": "just put in another note anyway and you just put a note here and then you've increased the size.",
    "start": "5268560",
    "end": "5277120"
  },
  {
    "text": "But the most effective end. And so you only think it. But if it is 100, that's not you.",
    "start": "5277120",
    "end": "5284840"
  },
  {
    "text": "Nothing to sneeze at. It's factor 100. I mean a hundred days versus one day. Pretty good. So. So you have a lot of cognitive problems to work with.",
    "start": "5284840",
    "end": "5293460"
  },
  {
    "text": "The slightly different thing. But with with the CBD, you've got also the the fast elgin's for intersection in union and quantifying the sort of thing and and and functional composition.",
    "start": "5293460",
    "end": "5308480"
  },
  {
    "text": "You're allowed to commute the variables. Can you say anything about good permutation of the variables to himself?",
    "start": "5308480",
    "end": "5315040"
  },
  {
    "text": "So I got him. I got a new algorithm that I'm kind of proud of here, in fact, that I've got in this.",
    "start": "5315040",
    "end": "5323770"
  },
  {
    "text": "I've got more than 40 exercises that that I haven't been able to find in the in the literature. And some of them are just natural things waiting to be to be, you know, flutes to be plucked that somebody just hasn't asked a question before.",
    "start": "5323770",
    "end": "5336280"
  },
  {
    "text": "So on. But there's a lot of work in these notes that that that that was part of my kind of filling the missing theory.",
    "start": "5336280",
    "end": "5346429"
  },
  {
    "text": "But that's like one or two of those exercises. I'm fairly, you know, it took me a while to come up with and were better than I had imagined.",
    "start": "5346430",
    "end": "5355220"
  },
  {
    "text": "And the one that I like, I want one of the ones with Grace. Your question, and that's what I call the master profile chart of a boolean function.",
    "start": "5355220",
    "end": "5363700"
  },
  {
    "text": "And in this chart, I'm not going to go into detail, but but I, I find a cute way to compute this trick with a small footprint so that I can I can for for a function of up to twenty five variables.",
    "start": "5363700",
    "end": "5379570"
  },
  {
    "text": "I can quickly find out the monitoring, but I don't need much memory.",
    "start": "5379570",
    "end": "5385639"
  },
  {
    "text": "Previously the the algorithms that would do this in variable functions took three of the UN cells.",
    "start": "5385640",
    "end": "5391960"
  },
  {
    "text": "A memory and mine only takes two to the end times in cells.",
    "start": "5391960",
    "end": "5397360"
  },
  {
    "text": "A memory cell so I can handle easily n equals twenty five and the running time is about three hours to two to optimize one function and different.",
    "start": "5397360",
    "end": "5411580"
  },
  {
    "text": "If I want to optimize also not only one function, but I can also optimize many functions simultaneously.",
    "start": "5411580",
    "end": "5417670"
  },
  {
    "text": "If the good thing is the same ordering, and if I have a function of of forty nine variables,",
    "start": "5417670",
    "end": "5424449"
  },
  {
    "text": "I can also take windows of size twenty five and I can see these twenty five from level twelve through level thirty six.",
    "start": "5424450",
    "end": "5432930"
  },
  {
    "text": "Now let me put those into the optimum order and in three can and I've been running at Safra database computers.",
    "start": "5432930",
    "end": "5439330"
  },
  {
    "text": "I've been running up and I've been running up. Oh well, well there's twenty five windows of size.",
    "start": "5439330",
    "end": "5447610"
  },
  {
    "text": "Twenty five. And so I suppose I had what I thought was the best ordering for, for these states and, and you know,",
    "start": "5447610",
    "end": "5455530"
  },
  {
    "text": "and I set up several computers going simultaneously on these problems on the different intervals.",
    "start": "5455530",
    "end": "5460570"
  },
  {
    "text": "And I, and I can check that the orderings that I had were locally up only in the sense that, you know,",
    "start": "5460570",
    "end": "5465869"
  },
  {
    "text": "twenty five in a row could be improved using this new algorithm that I had with the footprint, which also works very well with respect to cache memory and things like that.",
    "start": "5465870",
    "end": "5475670"
  },
  {
    "text": "So so now know on the other hand, the ordering is is not a panacea because there are that many boolean functions in the world that are not good and and multiplication.",
    "start": "5475670",
    "end": "5489010"
  },
  {
    "text": "I've been playing around with a lot with multiplication and mindfulness findings, to my surprise. My other not only company to the best auditing, but also Cartledge. The worst order and spins.",
    "start": "5489010",
    "end": "5498800"
  },
  {
    "text": "Is that both at the same time. And and so I find out that with multiplication, which then lots and lots of people are about the ratio between the best and the worst ordering is it is less than 10.",
    "start": "5498800",
    "end": "5512410"
  },
  {
    "text": "Usually with the size of being so so so there are some functions that just it doesn't matter what you are doing.",
    "start": "5512410",
    "end": "5517810"
  },
  {
    "text": "Is that all the time I saw there. So it's after seven o'clock I suspect. I know everybody wants to get their chance that this had here, but yes, it's technical.",
    "start": "5517810",
    "end": "5533020"
  },
  {
    "text": "I was just wondering, people in this subject have been able to avoid using the phrase the venerable Bede, the venerable Beed.",
    "start": "5533020",
    "end": "5542270"
  },
  {
    "text": "Oh, well, here they have, because I introduced the word beed in these notes. No. So, James, this term. But that's that, you know, I, I have a I have an entry in the index to to this volume here.",
    "start": "5542270",
    "end": "5560620"
  },
  {
    "text": "And I got a question from Norway yesterday. It pun resisted, page 62. And so now maybe in the next in the new one, I'll have something saying, you know.",
    "start": "5560620",
    "end": "5578020"
  },
  {
    "text": "You know, resisting a reference to a great cleric or something.",
    "start": "5578020",
    "end": "5585970"
  },
  {
    "text": "OK. But but there is a problem that is not obvious.",
    "start": "5585970",
    "end": "5591940"
  },
  {
    "text": "What pun I resisted on page 60 to. Yeah.",
    "start": "5591940",
    "end": "5602630"
  },
  {
    "text": "So how scalable are being these are like. It depends. Like, for example, if you want to get the colonel's office over the cycle graph, then it's something like nine end nodes for an end cycle.",
    "start": "5602630",
    "end": "5621350"
  },
  {
    "text": "So it's very nice and scalable. Tick, tick, tick. The following the thing where you have a a matrix of zeros and ones and you say, is this the matrix, a permutation matrix or not?",
    "start": "5621350",
    "end": "5641329"
  },
  {
    "text": "Or does it have exactly one. One in every row and every car. So now that turns out the it it has a typed up.",
    "start": "5641330",
    "end": "5654860"
  },
  {
    "text": "I hope it grows as true to the square root of N by a matrix that goes off to the end.",
    "start": "5654860",
    "end": "5664130"
  },
  {
    "text": "And it's actually something like this. Exactly. At end times to the end minus one or something like that.",
    "start": "5664130",
    "end": "5669199"
  },
  {
    "text": "So that means when N is 30. It's not so bad. But when it is 50, forget it.",
    "start": "5669200",
    "end": "5677340"
  },
  {
    "text": "Yes, you can have the your findings about the conclave, Gamefly somewhat so that's what you found about the game of life.",
    "start": "5677340",
    "end": "5687760"
  },
  {
    "text": "Yeah. Let me talk about that later, because we're getting. I do want to mention one thing, because this these are function, these functions.",
    "start": "5687760",
    "end": "5697350"
  },
  {
    "text": "What you wanted to do this, you know, ninety six, ninety six variable boolean variables.",
    "start": "5697350",
    "end": "5704080"
  },
  {
    "text": "So footsore in order to specify the truth table of this, that would be to the ninety six bits.",
    "start": "5704080",
    "end": "5710780"
  },
  {
    "text": "And I just asked myself this morning, you know, how, how, how big is that.",
    "start": "5710780",
    "end": "5717050"
  },
  {
    "text": "We to the 96 bits. And it turns out well that's almost exactly 10 to the 28 bytes.",
    "start": "5717050",
    "end": "5722239"
  },
  {
    "text": "And that is ten thousand yada bytes now. So Wikipedia tells me that the total number of bytes in the world ever all computers ever in",
    "start": "5722240",
    "end": "5732570"
  },
  {
    "text": "the history stored digitally is predicted to be about ten to the twenty one by the year 2010.",
    "start": "5732570",
    "end": "5739489"
  },
  {
    "text": "So. So that would be one almost one zettabytes. And so now this is, you know, ten to the seven times as much as that.",
    "start": "5739490",
    "end": "5750630"
  },
  {
    "text": "So, so, so, so. So these are huge truth tables, but it's compressed down into the function that I needed to find all the solutions to this.",
    "start": "5750630",
    "end": "5759420"
  },
  {
    "text": "And and, you know, the number. And I can count this one and everything.",
    "start": "5759420",
    "end": "5764480"
  },
  {
    "text": "I can find the optimum one in the second just because it's OK. So there are. And this isn't is it?",
    "start": "5764480",
    "end": "5773870"
  },
  {
    "text": "It's just one of many Boulin functions that that the natural problem and it can be done.",
    "start": "5773870",
    "end": "5780960"
  },
  {
    "text": "So certainly there are lots of other functions that grow faster on the site.",
    "start": "5780960",
    "end": "5786980"
  },
  {
    "text": "But the more local it is, the more you can put it into that the straight line of modules without too much feedback.",
    "start": "5786980",
    "end": "5794410"
  },
  {
    "text": "Now, the more likely you are to be able to use this in some kind of problem that you're working on. I can only take one more question. So, yes, I'll start with you about John Doe's S.A.T. instruction.",
    "start": "5794410",
    "end": "5810570"
  },
  {
    "text": "Yes. What I feel is the size of the finding, it is not so much of a concern as size by building.",
    "start": "5810570",
    "end": "5818900"
  },
  {
    "text": "When you're building up a B, we obviously have more issues about auditing sites like the instructional abilities wanted to go.",
    "start": "5818900",
    "end": "5829469"
  },
  {
    "text": "Then finding that for most of the problems that I was saying about the construction to be how I give to algorithms for core construction.",
    "start": "5829470",
    "end": "5841560"
  },
  {
    "text": "One is top down and one is bottom up. And. And then I have on I on the web you can download my my little BTD package with with algorithms for doing this.",
    "start": "5841560",
    "end": "5856220"
  },
  {
    "text": "It it's just got to my, my Web page and look on a downloadable program that's called BDD 14 because it's 14th in a series of programs.",
    "start": "5856220",
    "end": "5865250"
  },
  {
    "text": "I'm writing for myself as I'm writing this section and. And it's a it's a it's a stripped down collection of album.",
    "start": "5865250",
    "end": "5872480"
  },
  {
    "text": "But you call the source code is there and you can read it includes reordering thing.",
    "start": "5872480",
    "end": "5879140"
  },
  {
    "text": "And the way you approach it is that you that there's a little language called DDL,",
    "start": "5879140",
    "end": "5884990"
  },
  {
    "text": "which is a very primitive you say F zero equals F one exclusive or X five or something like this and so on.",
    "start": "5884990",
    "end": "5893540"
  },
  {
    "text": "You give you give just simple straight line commands like this, but the easy to put them in a file. And I have and I can write other programs easily will generally be the element",
    "start": "5893540",
    "end": "5904930"
  },
  {
    "text": "and then input this to her to to all these all these programs as I did here.",
    "start": "5904930",
    "end": "5911960"
  },
  {
    "text": "So anyway, this that's on the web now. Now, for most of the problems that I worked on, it was there was a natural order in that suggested itself to me that just like out here,",
    "start": "5911960",
    "end": "5922910"
  },
  {
    "text": "I said, you know, Maine, New Hampshire, Vermont and so on, and then keep the boundary small.",
    "start": "5922910",
    "end": "5929110"
  },
  {
    "text": "And and Randall Brian in his first paper said, you know, he said that he didn't think about much about the ordering as being a big, big problem.",
    "start": "5929110",
    "end": "5939980"
  },
  {
    "text": "On the other hand, when you're doing something automatically, you have some huge thing that you can't really intuit. You don't really know what your data is. Then you want some Hirose for doing the ordering.",
    "start": "5939980",
    "end": "5949490"
  },
  {
    "text": "And what actually happened to me. I had what I thought was the best what was the best ordering of these things for the independent set problem.",
    "start": "5949490",
    "end": "5957400"
  },
  {
    "text": "And I had started with my ordering Maine, New Hampshire and so on. And then I went through my windowing method that did that.",
    "start": "5957400",
    "end": "5964730"
  },
  {
    "text": "Well, there's also Rick Riddle has this wonderful sifting algorithm that that quick fix really quickly finds it improves.",
    "start": "5964730",
    "end": "5975930"
  },
  {
    "text": "Ordering you. Lots and lots of political chaos. And and so I took my ordering and I sifted it and it got down from 428 to 380 and then I sifted again and then it was 360.",
    "start": "5975930",
    "end": "5988239"
  },
  {
    "text": "And I went through my windowing algorithm, which is a. So then I got to the point where you couldn't improve any 25 guys in a row without doing any better.",
    "start": "5988240",
    "end": "5998360"
  },
  {
    "text": "And I got down to 340. Then I took my dad.",
    "start": "5998360",
    "end": "6004639"
  },
  {
    "text": "But that was before I had gotten gotten on my my cell frequencies.",
    "start": "6004640",
    "end": "6010610"
  },
  {
    "text": "So when I was doing another example from my book and I started with alphabetical order, I took Alabama for us and whatever it is anymore.",
    "start": "6010610",
    "end": "6016750"
  },
  {
    "text": "And it ended with western Wyoming and end and.",
    "start": "6016750",
    "end": "6022020"
  },
  {
    "text": "And I like the automatic ordering algorithm. You go to work on this.",
    "start": "6022020",
    "end": "6028730"
  },
  {
    "text": "And it came down and it's very first try. It got that 417, which was better than my 428 that I had done.",
    "start": "6028730",
    "end": "6037280"
  },
  {
    "text": "We're thinking, you know. And then I you know, I work down from the front at 17 and I and I actually was able to get down through the windowing method.",
    "start": "6037280",
    "end": "6048710"
  },
  {
    "text": "Everything finally got down to three thirty nine, which which which beat well I had thought, thought five days earlier was optimum.",
    "start": "6048710",
    "end": "6055250"
  },
  {
    "text": "And by the way, I also constructed an example that worked for the independents that told me this graph that",
    "start": "6055250",
    "end": "6062180"
  },
  {
    "text": "had more than six hundred nodes and still was opto monder all these treant transformations.",
    "start": "6062180",
    "end": "6067880"
  },
  {
    "text": "So the fact that it's that my three I'm thirty nine is at the moment, all this transformation doesn't really mean much.",
    "start": "6067880",
    "end": "6074210"
  },
  {
    "text": "I don't think I don't think I will live to know the best ordering of the forty nine states absolute best ordering the independent set problem.",
    "start": "6074210",
    "end": "6084150"
  },
  {
    "text": "There's a forty nine factorial orderings and. And. But I'm pretty sure that I could be much less than three thirty nine.",
    "start": "6084150",
    "end": "6098860"
  },
  {
    "text": "Now it's. Thanks very much, guys, for.",
    "start": "6098860",
    "end": "6112003"
  }
]