[
  {
    "text": "All right. We're gonna go ahead and get started. Um, homework two, it should be well underway.",
    "start": "4670",
    "end": "10935"
  },
  {
    "text": "If you have any questions feel, feel free to reach out to us. Um, [NOISE] project proposals,",
    "start": "10935",
    "end": "16830"
  },
  {
    "text": "if you have questions about that, feel free to come to our office hours or to reach out, um, via Piazza.",
    "start": "16830",
    "end": "22020"
  },
  {
    "text": "Somebody have any other questions I can answer right now? All right. So today,",
    "start": "22020",
    "end": "30420"
  },
  {
    "text": "we're gonna start- this is a little bit loud. Um, today we're gonna start talking about policy gradient methods.",
    "start": "30420",
    "end": "36315"
  },
  {
    "text": "Um, policy gradient methods are probably the most well used in reinforcement learning right now. Um, so, I think they're an incredibly useful thing to be familiar with.",
    "start": "36315",
    "end": "44650"
  },
  {
    "text": "Um, [NOISE] whenever we talk about reinforcement learning, we keep coming back to these main properties that we'd like",
    "start": "44650",
    "end": "50629"
  },
  {
    "text": "about agents that learn to make decisions about them, you know, to do this sort of optimization, handling delayed consequences,",
    "start": "50630",
    "end": "57755"
  },
  {
    "text": "doing exploration, um, [NOISE] and do it all through statistically, and efficiently, in really high dimensional spaces.",
    "start": "57755",
    "end": "65040"
  },
  {
    "text": "Um, and what we were sort of talking about last time in terms of imitation learning was sort of a different way to kind of provide",
    "start": "65560",
    "end": "71600"
  },
  {
    "text": "additional structure or additional support for our agents, um, so that they could try to learn how to do things faster.",
    "start": "71600",
    "end": "77225"
  },
  {
    "text": "Um, and imitation learning was one way to provide structural support by leveraging demonstrations from people.",
    "start": "77225",
    "end": "83790"
  },
  {
    "text": "And we've seen other ways to sort of, um, encode structure or human prior knowledge,",
    "start": "83790",
    "end": "90110"
  },
  {
    "text": "um, when we started talking about function approximation. So, when we think about how we define q,",
    "start": "90110",
    "end": "96960"
  },
  {
    "text": "like when we define q as s, a, and w, where this was a set of parameters.",
    "start": "96960",
    "end": "103020"
  },
  {
    "text": "We were implicitly making a choice about sort of imposing some structure in terms of how we are going to represent our value function,",
    "start": "103270",
    "end": "111080"
  },
  {
    "text": "and that choice might be fairly strong like assuming it was linear. So, this is sort of a quite a strong assumption,",
    "start": "111080",
    "end": "117599"
  },
  {
    "text": "or it might be a very weak assumption like using a deep neural net.",
    "start": "117599",
    "end": "122220"
  },
  {
    "text": "And so, when we specify sort of these function approximations, and representations,",
    "start": "123650",
    "end": "129440"
  },
  {
    "text": "we're sort of implicitly making, uh, uh, choices about how much structure and how much domain knowledge we want to put in,",
    "start": "129440",
    "end": "135390"
  },
  {
    "text": "um, in order for our agents to learn. So, what we're gonna start to talk about today and we're gonna talk about this week is",
    "start": "135390",
    "end": "142670"
  },
  {
    "text": "policy search which is another place where it can be very natural to put in domain knowledge. I mean, we'll see that in in some robotics examples today,",
    "start": "142670",
    "end": "150440"
  },
  {
    "text": "and it can be also a very efficient way to try to learn.",
    "start": "150440",
    "end": "154320"
  },
  {
    "text": "So, as I was saying, before we sort of we're approximating where we're doing model-free reinforcement learning,",
    "start": "156560",
    "end": "162355"
  },
  {
    "text": "and when we started to try to scale up to really large state spaces. Um, I've been having several different people ask me about",
    "start": "162355",
    "end": "168610"
  },
  {
    "text": "really large action spaces which is a really important topic. We're not gonna talk too much about that in this quarter,",
    "start": "168610",
    "end": "174300"
  },
  {
    "text": "but we will talk a little bit about when your action space is continuous but low-dimensional. But we have started to talk a lot about when",
    "start": "174300",
    "end": "180549"
  },
  {
    "text": "the state space is really high-dimensional and, and, and really large. And so, we talked about approximating things, um, uh,",
    "start": "180550",
    "end": "187240"
  },
  {
    "text": "with some sort of parameterization, like whether it will be parameters Theta or we often, or we often use w, but some sort of parameterization of the function.",
    "start": "187240",
    "end": "199060"
  },
  {
    "text": "So, we used our value function, um, to define expected discounted sum of rewards from a particular state or state action,",
    "start": "199060",
    "end": "207300"
  },
  {
    "text": "and then we could extract a policy from that value function or at least from a state action value function.",
    "start": "207300",
    "end": "213055"
  },
  {
    "text": "And instead, what we're gonna do today is just directly parameterize the policy. So, when we talked about tabular policies,",
    "start": "213055",
    "end": "220650"
  },
  {
    "text": "our policy was just a mapping from states to actions. And in the tabular setting,",
    "start": "220650",
    "end": "226695"
  },
  {
    "text": "we could just look- do that as a lookup table. For every single state, we could write down what action we would take.",
    "start": "226695",
    "end": "232375"
  },
  {
    "text": "And what we're going to do now is to say, \"Well, it's not gonna be feasible to write down our table of our policy,",
    "start": "232375",
    "end": "238750"
  },
  {
    "text": "so instead what we're going to do is parameterize it, and we're gonna use a set of weights or Thetas.\" Today, we're mostly gonna use Thetas,",
    "start": "238750",
    "end": "245090"
  },
  {
    "text": "but this could equally well think of this as weights. Um, just some way to parameterize our policy.",
    "start": "245090",
    "end": "251230"
  },
  {
    "text": "We'll talk more about particular forms of parameterization. Um, but just like what we saw for state action value functions, um,",
    "start": "251230",
    "end": "259394"
  },
  {
    "text": "this is gonna have a big implication because this is effectively defining the space that you can learn over.",
    "start": "259395",
    "end": "265135"
  },
  {
    "text": "So, it's sort of, um, it's determining the, the class of policies you could possibly learn.",
    "start": "265135",
    "end": "270805"
  },
  {
    "text": "Um, [NOISE] and we're again gonna sort of focus on model-free reinforcement learning, meaning that we're not gonna assume that we have access to",
    "start": "270805",
    "end": "277250"
  },
  {
    "text": "an a priori model of the dynamics or reward of the world.",
    "start": "277250",
    "end": "281520"
  },
  {
    "text": "So, we had thrown some of these diagrams up at the start of the quarter, I just want to go back to it.",
    "start": "282290",
    "end": "287640"
  },
  {
    "text": "Um, we've been talking about sort of value, we- we haven't talked so much about models, the models are also super important.",
    "start": "287640",
    "end": "293580"
  },
  {
    "text": "Um, but we've been talking a lot about sort of value function, based approaches which is this, and now we're gonna talk about policy,",
    "start": "293580",
    "end": "300560"
  },
  {
    "text": "um, direct policy search methods. And as you might expect, there's a lot of work which tries to combine between the two of them,",
    "start": "300560",
    "end": "307000"
  },
  {
    "text": "and these are often called actor-critic methods. Um, where you try to explicitly maintain a parameterized policy,",
    "start": "307000",
    "end": "313395"
  },
  {
    "text": "and explicitly maintain a parameterized critic or value function. So, this is the policy, and this is a Q.",
    "start": "313395",
    "end": "321729"
  },
  {
    "text": "Okay, so, we're gonna start today and we're gonna be talking about policy-based methods. So, why would you wanna do this?",
    "start": "323120",
    "end": "329970"
  },
  {
    "text": "Um, [NOISE] well, uh, it actually goes back a little bit to also what we were talking about last week with imitation learning.",
    "start": "329970",
    "end": "335645"
  },
  {
    "text": "For imitation learning, we talked about the fact that sometimes it's hard for humans to write down a reward function,",
    "start": "335645",
    "end": "340680"
  },
  {
    "text": "and so it might be easier for them just to demonstrate what the policy looks like. Similarly, in some cases,",
    "start": "340680",
    "end": "346100"
  },
  {
    "text": "maybe it's easier to write down sort of a parametrization of, um, the space of policies than it is to write down",
    "start": "346100",
    "end": "351680"
  },
  {
    "text": "a parameterization of the space of state action value functions. Um, in addition, they're often",
    "start": "351680",
    "end": "358790"
  },
  {
    "text": "much more effective in high-dimensional or continuous action spaces, and they allow us to learn stochastic policies which we haven't talked very much about so far,",
    "start": "358790",
    "end": "367449"
  },
  {
    "text": "but I'm gonna give you some illustrations about where we definitely want stochastic policies.",
    "start": "367450",
    "end": "372420"
  },
  {
    "text": "Um, [NOISE] and they sometimes have better convergent policy- convergence, uh, properties um, that can be a little bit debated,",
    "start": "372640",
    "end": "379430"
  },
  {
    "text": "it depends exactly what- whether we're comparing that to model-free or model-based approaches and how much computation we're doing.",
    "start": "379430",
    "end": "385400"
  },
  {
    "text": "Um so, this can be a little bit of a function of computation to computation can matter.",
    "start": "385400",
    "end": "390850"
  },
  {
    "text": "One of the really big disadvantages is that they are typically only gonna converge to a local optimum.",
    "start": "392480",
    "end": "400370"
  },
  {
    "text": "So, where you're going to converge to something that is hopefully a pretty good policy, but we're not generally guaranteed to converge to the global optima.",
    "start": "401660",
    "end": "409599"
  },
  {
    "text": "[NOISE]. Now, there are some techniques that are guaranteed to converge to a local- to the global optima,",
    "start": "409600",
    "end": "414820"
  },
  {
    "text": "and I'll try to highlight some of those today, but generally, almost all of the methods that you see in like deep reinforcement learning that are policy gradient based,",
    "start": "414820",
    "end": "422140"
  },
  {
    "text": "um, only converge to a local optima. Um, and then the other challenge is that typically we're",
    "start": "422140",
    "end": "428710"
  },
  {
    "text": "gonna do this by trying to evaluate a policy and then estimate its gradient, and often that can be somewhat sample inefficient.",
    "start": "428710",
    "end": "435185"
  },
  {
    "text": "So, there might be quite a lot of data to estimate, um, what that gradient is when we're taking a gradient-based approach.",
    "start": "435185",
    "end": "442770"
  },
  {
    "text": "So, why might we want sort of a stochastic policy? So, in what I mentioned before, um,",
    "start": "443990",
    "end": "450410"
  },
  {
    "text": "in the tabular setting, so let me just go back to here. So, in a- now,",
    "start": "450410",
    "end": "456020"
  },
  {
    "text": "why do we want this? Do we want this? If you think back to the very first lectures, um,",
    "start": "456020",
    "end": "463849"
  },
  {
    "text": "what I said is that if we have a tabular MDP, there exist a Pi which is deterministic and optimal.",
    "start": "463850",
    "end": "475780"
  },
  {
    "text": "So, in the tabular MDP setting, we do not need, um, er,",
    "start": "481430",
    "end": "487020"
  },
  {
    "text": "deter- we do not need stochastic policies because there always exists a policy that is deterministic that has the same value as the optimal policy does.",
    "start": "487020",
    "end": "497365"
  },
  {
    "text": "So, this is not needed in the tabular Markov Decision Process case, but we don't always- we're not always",
    "start": "497365",
    "end": "503510"
  },
  {
    "text": "acting in the tabular Markov Decision Process case. So, as an example, um, [NOISE] who here is familiar with rock-paper-scissors ?",
    "start": "503510",
    "end": "510699"
  },
  {
    "text": "Okay. Most people. Um, er, possibly if you're not, you might have played it by another name. So, in rock-paper-scissors, uh,",
    "start": "510700",
    "end": "517205"
  },
  {
    "text": "it's a two player game, um, [NOISE] everyone can either pick, uh, paper or scissors or rock.",
    "start": "517205",
    "end": "523834"
  },
  {
    "text": "And you have to pick one of those, and scissors beats paper, paper- rock beats scissors, and paper beats rock.",
    "start": "523835",
    "end": "529360"
  },
  {
    "text": "Um, and in this case, if you had a deterministic policy, you could lose a lot,",
    "start": "529360",
    "end": "535769"
  },
  {
    "text": "you could easily be exploited by the other agent. Um, but a uniform random policy is basically optimal.",
    "start": "535770",
    "end": "542620"
  },
  {
    "text": "What do I mean by optimality? In this case, I mean, that you, you could say a plus one if you win, and let say zero or minus one if you lose.",
    "start": "542620",
    "end": "550350"
  },
  {
    "text": "We're not gonna talk too much about multi-agent cases, um, er, in this class, but it's a super interesting area of research.",
    "start": "550350",
    "end": "557300"
  },
  {
    "text": "Um, and in this case, um, you know, the environment is not agnostic. Um, the environment can react to, uh,",
    "start": "557300",
    "end": "564310"
  },
  {
    "text": "the policies that we're doing and could be adversarial, and so we want a policy that, um, is robust to an adversary.",
    "start": "564310",
    "end": "571560"
  },
  {
    "text": "So, a second case, um, is Aliased Gridword. So, um, so in this case,",
    "start": "573150",
    "end": "579550"
  },
  {
    "text": "so why, you know, why is being stochastic important here? Well, because we're not really in a stochastic setting,",
    "start": "579550",
    "end": "584800"
  },
  {
    "text": "we are in an adversarial setting, and we have another agent that is playing with us and they can be non-stationary and changing their policy in response to ours.",
    "start": "584800",
    "end": "592404"
  },
  {
    "text": "Um, so it's not, uh, the environment doesn't pick the next- doesn't pick rock-paper-scissors regardless of our actions,",
    "start": "592405",
    "end": "598885"
  },
  {
    "text": "um, in the past it can respond to those. [NOISE] Um, so it's sort of got this non-stationarity or adversarial nature.",
    "start": "598885",
    "end": "605815"
  },
  {
    "text": "Um, another case is where it's not Markov, so it's really partially observable, and you have aliasing,",
    "start": "605815",
    "end": "611994"
  },
  {
    "text": "which means that we can't distinguish between multiple states in terms of our sensors. So, we saw this before a little bit when we talked about robots that, you know,",
    "start": "611994",
    "end": "619720"
  },
  {
    "text": "could have laser range finders and sort of tell where they were in a hallway. By how far away each of the,",
    "start": "619720",
    "end": "627760"
  },
  {
    "text": "um, the, the first point of, um, uh, uh, obstacle was for all of their 180 degrees,",
    "start": "627760",
    "end": "634510"
  },
  {
    "text": "and so that will look the same in lots of different hallways. Um, so this is a simple example of that. So, in an Aliased Gridword, um,",
    "start": "634510",
    "end": "640750"
  },
  {
    "text": "let's say that the agent because of their sensors cannot distinguish the gray states and they have features of a particular form.",
    "start": "640750",
    "end": "647589"
  },
  {
    "text": "Um, they have a feature for whether or not there's a wall to the North, um, er, or East,",
    "start": "647590",
    "end": "653860"
  },
  {
    "text": "or South, or West. So, it can basically, like, if it's here it can tell, like, \"Oh I have walls to either side of me and not in front or behind me.\"",
    "start": "653860",
    "end": "661090"
  },
  {
    "text": "Um, but that could be the same over in that in the, in the other [NOISE], um, grey state.",
    "start": "661090",
    "end": "666940"
  },
  {
    "text": "So, if we did a value-based reinforcement learning approach using some sort of approximate value function,",
    "start": "666940",
    "end": "673884"
  },
  {
    "text": "um, it would take these features which are a combination of what action am I going to take? And whether there are walls around me or not.",
    "start": "673885",
    "end": "680770"
  },
  {
    "text": "Um, or we could have a policy-based approach which also, um, takes some of these features but then just directly",
    "start": "680770",
    "end": "686950"
  },
  {
    "text": "tries to make decisions about what action to take, and those actions can be stochastic.",
    "start": "686950",
    "end": "692170"
  },
  {
    "text": "So, in this case, the agent is trying to figure out how to navigate in this world. It really wants to get to here.",
    "start": "692170",
    "end": "697644"
  },
  {
    "text": "This is where there's a large reward. So, this is good. It wants to avoid the skull and crossbones,",
    "start": "697645",
    "end": "703405"
  },
  {
    "text": "and those will be negative reward. So, because of the aliasing,",
    "start": "703405",
    "end": "708970"
  },
  {
    "text": "the agent can't distinguish whether or not it's here or here.",
    "start": "708970",
    "end": "714129"
  },
  {
    "text": "Um, and so it has to do the same thing in both states. And so either it has to go left or it has to go right,",
    "start": "714130",
    "end": "721180"
  },
  {
    "text": "Call it West or East [NOISE], um, and either way that's not optimal because if it's actually here it should be going that way,",
    "start": "721180",
    "end": "728275"
  },
  {
    "text": "not over here and down. Um, and so it can distinguish whether it's in here or",
    "start": "728275",
    "end": "734560"
  },
  {
    "text": "here but it could just end up moving back and forth, er, or making very bad decisions.",
    "start": "734560",
    "end": "740560"
  },
  {
    "text": "And so it can get stuck and never be able to know when it's safe to go down and reach the money. So, it learns a near-determini- deterministic policy",
    "start": "740560",
    "end": "748540"
  },
  {
    "text": "because that's what we've normally been learning with these, um, and whether it's greedy or e-greedy and generally it will do very poorly.",
    "start": "748540",
    "end": "754720"
  },
  {
    "text": "But if you have a stochastic policy when you're in a state where you're aliased, you could just randomize.",
    "start": "754720",
    "end": "760570"
  },
  {
    "text": "You'd say, \"I'm not sure whether I'm actually in this state- in this state or this state, um, so I'll just go, er,",
    "start": "760570",
    "end": "768040"
  },
  {
    "text": "either East or West with 50 percent probability.\" And then it'll generally reach the goal state quickly.",
    "start": "768040",
    "end": "774220"
  },
  {
    "text": "Because note, it can tell what it should do when it reaches here because that looks different than these two states.",
    "start": "774220",
    "end": "780279"
  },
  {
    "text": "So, once it's in the middle it knows exactly what to do. So, that's just, again, an example where a stochastic policy has a way better value than",
    "start": "780280",
    "end": "788050"
  },
  {
    "text": "a deterministic policy and that's because the domain here is not Markov, it's partially observable.",
    "start": "788050",
    "end": "793959"
  },
  {
    "text": "[NOISE] Okay.",
    "start": "793960",
    "end": "803935"
  },
  {
    "text": "So, that's sort of one of the reasons why we might want to- some of the reasons why you want- might wanna be directly policy-based,",
    "start": "803935",
    "end": "809590"
  },
  {
    "text": "and there's a lot of other reasons. Um, so, so what does this mean? Well, er, we're gonna have",
    "start": "809590",
    "end": "814959"
  },
  {
    "text": "this parameterized policy and the goal is that we wanna find. Yeah, Like you said, can we conclude that when the world is not",
    "start": "814960",
    "end": "823240"
  },
  {
    "text": "Markov, it is partially observed, stochastic policy is always better?",
    "start": "823240",
    "end": "828610"
  },
  {
    "text": "Your name is ? I'm sorry yeah. So what said is can we conclude that, um, if the world is partially observable stochastic policies are always better.",
    "start": "828610",
    "end": "836110"
  },
  {
    "text": "Um, I think it depends on the modeling you wanna do. I think, in this case, better than being stochastic because it's still doing something,",
    "start": "836110",
    "end": "842620"
  },
  {
    "text": "kind of, not very intelligent in the gray states, it's just randomizing, would be to have a partially observable Markov decision process policy, um,",
    "start": "842620",
    "end": "849850"
  },
  {
    "text": "and then you could track, uh, an estimate over where you are in the world. So, you can keep track of a belief state over what state you're in,",
    "start": "849850",
    "end": "857154"
  },
  {
    "text": "and then you could hopefully uniquely identify that, \"Oh, if I was just in this state I have to be in the state now.\"",
    "start": "857155",
    "end": "862630"
  },
  {
    "text": "And then you can deterministically go to the right or left. [NOISE] So, it depends on, on the modeling one's willing to do. Good question.",
    "start": "862630",
    "end": "870920"
  },
  {
    "text": "Okay. So, when we, um, start to do the- go to parameterize policy search, what we're gonna wanna do is find the parameters that yield the best value.",
    "start": "872970",
    "end": "881050"
  },
  {
    "text": "The policy in the class with the best value, and so similar to what we've seen before we can,",
    "start": "881050",
    "end": "886435"
  },
  {
    "text": "we can think about sort of episodic settings and infinite sort of continuing settings. So, in an episodic setting,",
    "start": "886435",
    "end": "892810"
  },
  {
    "text": "that means that the agent will act for a number of time-steps often, let's say, H steps.",
    "start": "892810",
    "end": "898540"
  },
  {
    "text": "But it could be variable, like, it might be until you reach, you know, a terminal state.",
    "start": "898540",
    "end": "903860"
  },
  {
    "text": "And then we can just consider what is the expected value, wha- wher- what is the value?",
    "start": "905400",
    "end": "910750"
  },
  {
    "text": "What is the expected discounted sum of rewards we get from the start state or distribution of start states?",
    "start": "910750",
    "end": "915910"
  },
  {
    "text": "And then what we wanna do is find the parameterized policy that has the highest value. Um, another option is that if we're in",
    "start": "915910",
    "end": "923110"
  },
  {
    "text": "a continuing environment which means we're in the online setting, we don't act for H steps we just act forever.",
    "start": "923110",
    "end": "928254"
  },
  {
    "text": "There's no terminal states and we can either use the, um, average value where we average over the distribution of states.",
    "start": "928255",
    "end": "936490"
  },
  {
    "text": "So, this is, um, like what we saw before thinking about the distribution, the stationary distribution over the Markov chain that is induced by a particular policy.",
    "start": "936490",
    "end": "945580"
  },
  {
    "text": "Because we talked about before about the fact that if you fix the policy, um, then basically, uh,",
    "start": "945580",
    "end": "950649"
  },
  {
    "text": "you get into Markov reward process. You can also just think of the distribution of states you get is a Markov chain.",
    "start": "950650",
    "end": "956260"
  },
  {
    "text": "So, um, if we're acting forever, we're gonna say sort of on average what is the value of the states that we reach under that stationary distribution?",
    "start": "956260",
    "end": "964765"
  },
  {
    "text": "Um, and another way to do it is also to say we just look at sort of the average reward per time step.",
    "start": "964765",
    "end": "970329"
  },
  {
    "text": "Now, for simplicity today we're gonna focus almost exclusively on the episodic setting, but we can think about similar techniques for these other forms of settings.",
    "start": "970330",
    "end": "978769"
  },
  {
    "text": "So, as before and this is an optimization problem similar to what we saw in the value function approximation case, uh,",
    "start": "979380",
    "end": "987055"
  },
  {
    "text": "for linear value functions and using deep neural networks, um, we're gonna wanna be doing optimization, er,",
    "start": "987055",
    "end": "992620"
  },
  {
    "text": "which means that we need to do some sort of optimization tool to try to search for the best data.",
    "start": "992620",
    "end": "998000"
  },
  {
    "text": "So, one option is to do gradient free optimization. We don't tend to do this very much in policy search methods,",
    "start": "999120",
    "end": "1007110"
  },
  {
    "text": "um, but there are lots of different methods that are gradient free optimization. Just for us to find whatever parameters maximize this V Pi Theta.",
    "start": "1007110",
    "end": "1015555"
  },
  {
    "text": "Um, and just to connect this- just like what we saw for Q functions, now we have Theta which is specifying a policy.",
    "start": "1015555",
    "end": "1023100"
  },
  {
    "text": "And it maybe has some interesting landscape, and then we wanna be able to find where's the max.",
    "start": "1023100",
    "end": "1029280"
  },
  {
    "text": "So, we're really trying to find the max of a function as efficiently as we can. And there are lots of methods for doing that that",
    "start": "1029280",
    "end": "1035280"
  },
  {
    "text": "don't rely on the function being differentiable. Um, and these actually can be very good in some cases.",
    "start": "1035280",
    "end": "1042329"
  },
  {
    "text": "Um, so this is some nice work done by a colleague of mine and-",
    "start": "1042330",
    "end": "1047459"
  },
  {
    "text": "We have developed a method for automatically identifying the exoskeleton assistance patterns that minimize metabolic energy costs for",
    "start": "1047460",
    "end": "1055260"
  },
  {
    "text": "individual humans during walking [NOISE].",
    "start": "1055260",
    "end": "1063150"
  },
  {
    "text": "During optimization the user first experiences one control law while respiratory measurements are taken.",
    "start": "1063150",
    "end": "1068745"
  },
  {
    "text": "Steady-state energy cost is estimated by fitting a first-order dynamical model to two minutes of transient",
    "start": "1068745",
    "end": "1074190"
  },
  {
    "text": "data. The control law is then changed and metabolic rate is estimated again.",
    "start": "1074190",
    "end": "1082350"
  },
  {
    "text": "This process is repeated for a prescribed number of control laws forming one generation.",
    "start": "1082350",
    "end": "1087539"
  },
  {
    "text": "[NOISE] A covariance matrix adaptation evolution strategy",
    "start": "1087540",
    "end": "1095850"
  },
  {
    "text": "is then used to create the next generation. The mean of each generation represents the best estimate of the optimal control parameter values.",
    "start": "1095850",
    "end": "1103320"
  },
  {
    "text": "After about an hour of optimization, energy cost was reduced by an averageg of 24 percent, compared to no assistance.",
    "start": "1103320",
    "end": "1111130"
  },
  {
    "text": "So this is work that's done by my colleague uh, Steve Collins, um,",
    "start": "1114500",
    "end": "1119520"
  },
  {
    "text": "who's over in mechanical engineering and we've been collaborating some on whether you can train people to- do this better, um.",
    "start": "1119520",
    "end": "1124740"
  },
  {
    "text": "So, the idea in this case is that, uh, there's lots of instances for which you'd like to use exoskeletons.",
    "start": "1124740",
    "end": "1130020"
  },
  {
    "text": "Um, a lot of people have strokes, a lot of people have mobility problems um, and of course there's a lot of veterans that lose a limb.",
    "start": "1130020",
    "end": "1135150"
  },
  {
    "text": "Um, and in these cases one of the challenges has been is how do you, sort of figure out what are the parameters of these exoskeletons in order to provide um,",
    "start": "1135150",
    "end": "1143835"
  },
  {
    "text": "support for people walking and generally it varies on physiology and for many different people. They're going to need different types of parameters,",
    "start": "1143835",
    "end": "1150480"
  },
  {
    "text": "um, but you want do this really quickly. So, you want to be able to figure out very fast for each individual. What is the right control parameters in order to",
    "start": "1150480",
    "end": "1157559"
  },
  {
    "text": "help them get the most assistance as they walk. Um, and so Steve's lab treated this as,",
    "start": "1157560",
    "end": "1163275"
  },
  {
    "text": "uh, sort of a policy, a policy search problem, where what you're doing is you're having somebody wear their device,",
    "start": "1163275",
    "end": "1169785"
  },
  {
    "text": "you're trying some, uh, control laws, um, that are providing a particular form of support in terms of their exoskeleton.",
    "start": "1169785",
    "end": "1176445"
  },
  {
    "text": "You're measuring their sort of, um, metabolic efficiency, which is, how do you- you know. How hard are they breathing? How hard are they having to work,",
    "start": "1176445",
    "end": "1183554"
  },
  {
    "text": "compared to if they weren't wearing this or under different control laws. And then you can use this information to figure out",
    "start": "1183555",
    "end": "1189300"
  },
  {
    "text": "what's the next set of control laws you use and do this all, in a, closed loop fashion as quickly as possible.",
    "start": "1189300",
    "end": "1194684"
  },
  {
    "text": "Now one of the reasons I bring this up is, both because it was incredibly effective, it's a really nice science paper that, um,",
    "start": "1194685",
    "end": "1200565"
  },
  {
    "text": "illustrates how this could be much more effective than previous techniques. Um, and second because it was using CMA-ES,",
    "start": "1200565",
    "end": "1207044"
  },
  {
    "text": "which is a gradient free approach. So even though most of what we're gonna discuss today in class, is all with gradient based methods.",
    "start": "1207045",
    "end": "1213510"
  },
  {
    "text": "There's some really nice examples of not using gradient based methods also to do policy search for lots of other types of applications.",
    "start": "1213510",
    "end": "1220560"
  },
  {
    "text": "So, I think it's useful to sort of, know in your toolbox that, one doesn't have to be constrained to gradient based methods,",
    "start": "1220560",
    "end": "1226470"
  },
  {
    "text": "and one of the really nice things about, things like CMA-ES is that, they're guaranteed to get towards, uh, to a global optima.",
    "start": "1226470",
    "end": "1232515"
  },
  {
    "text": "So in some cases, uh, you might really want to be guaranteed that you're doing that because it's high stakes situation.",
    "start": "1232515",
    "end": "1238900"
  },
  {
    "text": "Um, and in general, it sort of is, has been noticed repeatedly recently that sometimes these sort of",
    "start": "1240800",
    "end": "1246090"
  },
  {
    "text": "approaches do work kind of embarrassingly well, um, uh, that they tend to be in some ways sort of a brute forced,",
    "start": "1246090",
    "end": "1251265"
  },
  {
    "text": "a smart brute force way, um, that often can be very effective. So they're good to consider, in terms of the applications you look at.",
    "start": "1251265",
    "end": "1257740"
  },
  {
    "text": "But, you know, despite this, um, uh, even though, they can be really good and sometimes, um,",
    "start": "1258110",
    "end": "1264764"
  },
  {
    "text": "they're very, very helpful for parallelization. Um, uh, they're generally not very sample efficient.",
    "start": "1264765",
    "end": "1270240"
  },
  {
    "text": "And so depending on, the domain that you're looking at and what sort of structure you have, often it's useful to go to a gradient-based method,",
    "start": "1270240",
    "end": "1275820"
  },
  {
    "text": "particularly if you might be satisfied with the local solution at the end. Sort of locally optimal.",
    "start": "1275820",
    "end": "1281835"
  },
  {
    "text": "So what we're going to talk about mostly today- just like what we did for, um, value, like, uh, value-based methods is,",
    "start": "1281835",
    "end": "1288735"
  },
  {
    "text": "gradient descent, um, and gradient based methods, um and other methods that try to exploit",
    "start": "1288735",
    "end": "1294270"
  },
  {
    "text": "the sequential structure of decision making problems. So CMA-ES doesn't know anything about the fact that this- the world might be",
    "start": "1294270",
    "end": "1301080"
  },
  {
    "text": "an MDP or any form of sort of, sequential stochastic process. And we're gonna focus on ones that sort of,",
    "start": "1301080",
    "end": "1306615"
  },
  {
    "text": "leverage the structure of the Markov decision process, in the decision process itself. So let's talk about policy gradient methods.",
    "start": "1306615",
    "end": "1315225"
  },
  {
    "text": "Um, where again just sort of, um, define things in terms of theta, so that we're explicit about the parameter and we're",
    "start": "1315225",
    "end": "1322170"
  },
  {
    "text": "gonna focus on episodic MDPs, which means that, we're gonna run our policy for a certain number of time steps,",
    "start": "1322170",
    "end": "1327210"
  },
  {
    "text": "until we reach a terminal state or for certain you know, maybe h steps. Uh, we're going to get some reward during that time period,",
    "start": "1327210",
    "end": "1332895"
  },
  {
    "text": "and then we're going to reset. So, we're going to be looking for a local maximum,",
    "start": "1332895",
    "end": "1339855"
  },
  {
    "text": "and we're going to be taking the gradient, with respect to the parameters that, um, define the policy,",
    "start": "1339855",
    "end": "1345225"
  },
  {
    "text": "and then use some small learning rate [NOISE]. So just this is- this should look very similar,",
    "start": "1345225",
    "end": "1351795"
  },
  {
    "text": "very similar to the, similar to, uh, Q and V based search.",
    "start": "1351795",
    "end": "1361440"
  },
  {
    "text": "And the main difference here is, that instead of taking, uh, the derivative with respect to parameters that define our q function,",
    "start": "1363650",
    "end": "1370200"
  },
  {
    "text": "we're taking them with respect to, the parameters that define our policy.",
    "start": "1370200",
    "end": "1374170"
  },
  {
    "text": "So, the simplest thing to do here, is, um, to do finite differences.",
    "start": "1375470",
    "end": "1381720"
  },
  {
    "text": "Um, so for each of your policy parameters, you just perturb it a little bit, um,",
    "start": "1381720",
    "end": "1387630"
  },
  {
    "text": "and if you do that for every single one of the dimensions, um, that define your policy parameters,",
    "start": "1387630",
    "end": "1394290"
  },
  {
    "text": "then you're going to get an estimate of the gradient. Here, just doing sort of a finite differences estimate of the gradient.",
    "start": "1394290",
    "end": "1400480"
  },
  {
    "text": "And you can use a certain number of evaluations for doing this, in each of the cases.",
    "start": "1401840",
    "end": "1407279"
  },
  {
    "text": "So you can- let's say you have this, um, k dimensional, uh, set of parameters that defined your policy,",
    "start": "1407280",
    "end": "1413309"
  },
  {
    "text": "you try changing one of them a little bit, you repeat it, you get a bunch of samples for that, new policy.",
    "start": "1413310",
    "end": "1418350"
  },
  {
    "text": "Um, you do that for all of the different dimensions, and now you have an approximation of the gradient. It's very simple, it's quite noisy, um,",
    "start": "1418350",
    "end": "1425850"
  },
  {
    "text": "it's not particularly efficient, but, it can sometimes be effective. I mean it was one of the earlier demonstrations of how policy gradient methods could be very useful,",
    "start": "1425850",
    "end": "1433049"
  },
  {
    "text": "in an RL context. Um, and the nice thing is that the policy itself doesn't have to be differentiable because,",
    "start": "1433050",
    "end": "1438840"
  },
  {
    "text": "we're just doing sort of a finite difference approximation of the gradient [NOISE].",
    "start": "1438840",
    "end": "1444419"
  },
  {
    "text": "So, one of the first examples that- I see- well, um, I think of when- I think of,",
    "start": "1444420",
    "end": "1449519"
  },
  {
    "text": "sort of how policy, uh, gradient methods or how policy search methods can be really effective, is Peter Stone's work on doing,",
    "start": "1449520",
    "end": "1457230"
  },
  {
    "text": "uh Robocup and who here's ever seen- like Robocup? Okay. A few people but not everybody.",
    "start": "1457230",
    "end": "1463860"
  },
  {
    "text": "So let's see if we can, get up like a short demonstration of like what these robots look like.",
    "start": "1463860",
    "end": "1468870"
  },
  {
    "text": "So, let's- ah, okay.",
    "start": "1468870",
    "end": "1476160"
  },
  {
    "text": "So you probably can't see it do you? We won't do that right now, um, but essentially what you have is, there's a bunch of different leagues of Robocup.",
    "start": "1476160",
    "end": "1482355"
  },
  {
    "text": "One of the goals has been that, um, I think by 2050, the goal is that, we're going to have, uh, a robotic soccer, uh,",
    "start": "1482355",
    "end": "1489240"
  },
  {
    "text": "team that is going to be able to defeat- like able to, you know, win the, the World Cup.",
    "start": "1489240",
    "end": "1494670"
  },
  {
    "text": "Um, so that's been one of the driving goals, of this Ro- the Robocup initiative. Uh, and there's lot of different leagues within this, and one of them is,",
    "start": "1494670",
    "end": "1502230"
  },
  {
    "text": "these sort of quadruped robots, um, which try to score goals against each other. And one of the key challenges for this is,",
    "start": "1502230",
    "end": "1508920"
  },
  {
    "text": "they look kind of like that. Um, and, you have to figure out the gait for walking, um,",
    "start": "1508920",
    "end": "1514799"
  },
  {
    "text": "and you want them to be able to walk, quickly but you don't want them to fall over. Um, and so just simply that question of like,",
    "start": "1514800",
    "end": "1520680"
  },
  {
    "text": "how do you optimize the gait, is an important question in order, to win, because you need your robots to move fast on the field.",
    "start": "1520680",
    "end": "1526875"
  },
  {
    "text": "So, Peter Stone has been a leading person in, in Robocup for a long time. Um, and their goal was simply to,",
    "start": "1526875",
    "end": "1532380"
  },
  {
    "text": "learn a fast way for these AIBOs to walk. Um, and to do it by, uh, real experience um,",
    "start": "1532380",
    "end": "1538905"
  },
  {
    "text": "and data's really important here because it's expensive um, you have these robots walking back up forth and you want them to very quickly, optimize their gait.",
    "start": "1538905",
    "end": "1546210"
  },
  {
    "text": "Um, and you don't want to have to keep changing batteries and things like that, so you really wanna do this with very little amounts of data.",
    "start": "1546210",
    "end": "1552270"
  },
  {
    "text": "So, what they thought of doing in this case is sort of to, to do a parameterized policy and try to optimize those proper policies.",
    "start": "1552270",
    "end": "1559000"
  },
  {
    "text": "So this is where significant domain knowledge came in and this is a way to inject domain knowledge.",
    "start": "1559070",
    "end": "1564270"
  },
  {
    "text": "So they, um, specified it by this sort of continuous ellipse, of how gait works for,",
    "start": "1564270",
    "end": "1571215"
  },
  {
    "text": "um, the small robot. And so they parameterized it by these 12 continuous parameters. And this completely defines the space of possible policies you could learn.",
    "start": "1571215",
    "end": "1580335"
  },
  {
    "text": "This might not be optimal. Peter Stone and his group have a huge amount of experience on doing Robocup,",
    "start": "1580335",
    "end": "1586200"
  },
  {
    "text": "um, at the time they were doing this paper and so they really had a lot of knowledge they could inject in here. And in some ways it's a way to provide sort of this hierarchical structure about,",
    "start": "1586200",
    "end": "1594045"
  },
  {
    "text": "what sort of policies might be good. And then what they did is they did just this method of finite differencing,",
    "start": "1594045",
    "end": "1599699"
  },
  {
    "text": "in order to try to optimize for all of these parameters. [NOISE] So, one of the important things here, um,",
    "start": "1599699",
    "end": "1606735"
  },
  {
    "text": "is that all of their policy evaluations were going to be done on actual real robots, um, and they just wanted to,",
    "start": "1606735",
    "end": "1612075"
  },
  {
    "text": "have people inter- intervene every once in a while, in order to, replace batteries which took- happened about once an hour.",
    "start": "1612075",
    "end": "1617955"
  },
  {
    "text": "Um, and so they did it on three AIBOs, very small amount of hardware. Um, they did about 15 policies per iteration,",
    "start": "1617955",
    "end": "1624300"
  },
  {
    "text": "and, they evaluated each policy three times. So, it's not very many but it can be a very noisy signal,",
    "start": "1624300",
    "end": "1630285"
  },
  {
    "text": "um, and each iteration took about 7.5 minutes. So- and then they had to pick some learning rate.",
    "start": "1630285",
    "end": "1636095"
  },
  {
    "text": "And so what do we see in this case? Well, we see that, in terms of the number of iterations that they have versus how",
    "start": "1636095",
    "end": "1641750"
  },
  {
    "text": "quickly they're- of course you have to define your optimization criteria in this case, they're looking at speed of stable walking.",
    "start": "1641750",
    "end": "1647735"
  },
  {
    "text": "Um, and a lot of people have been trying to figure out how to do these using hand tuning before, um, uh, including, so they're the UT Austin Villa team.",
    "start": "1647735",
    "end": "1656345"
  },
  {
    "text": "Um, including, them- in the past people have found different ways to sort of hand tune, um, I don't know if we'll be using unsupervised learning et cetera.",
    "start": "1656345",
    "end": "1663315"
  },
  {
    "text": "And you can see, as they do multiple iterations of trying to, search for a better policy using this finite difference method,",
    "start": "1663315",
    "end": "1669524"
  },
  {
    "text": "that they get to faster than everything else. And this is not that many iterations, um, so this is something that was happening over,",
    "start": "1669525",
    "end": "1676095"
  },
  {
    "text": "you know, a few hours. So, I think this was a really compelling example of how,",
    "start": "1676095",
    "end": "1682514"
  },
  {
    "text": "policy gradient methods could really do much better than what we- had happened before and they didn't have to require an enormous amount of data.",
    "start": "1682514",
    "end": "1689385"
  },
  {
    "text": "That's very different than probably what you're experiencing in assignment two, so this is, no total number of iterations.",
    "start": "1689385",
    "end": "1695355"
  },
  {
    "text": "Um, uh, I think this was on the order of, let's see, like, this is on the order of, you know,",
    "start": "1695355",
    "end": "1703110"
  },
  {
    "text": "tens to hundreds of policies, not millions and millions of steps. So these things can be very data efficient.",
    "start": "1703110",
    "end": "1708675"
  },
  {
    "text": "But there was also a lot of information that was given. So, um, if you think about sort of like,",
    "start": "1708675",
    "end": "1716130"
  },
  {
    "text": "uh, I have a little bit on here. So, in their paper they discussed sort of what was actually impacting performance in this case,",
    "start": "1716130",
    "end": "1722775"
  },
  {
    "text": "and there are a lot of things that impact performance. So, um, you know, how do we start?",
    "start": "1722775",
    "end": "1728010"
  },
  {
    "text": "Um, so I may have a sense of why, you know, why does the initial policy parameters used matter for this type of method? Yeah,",
    "start": "1728010",
    "end": "1736080"
  },
  {
    "text": "Well, because we're not guaranteed to have a global optima, only a local optima, so your starting point is gonna",
    "start": "1736080",
    "end": "1741740"
  },
  {
    "text": "affect which local optima you are able to find. Exactly. So what just said is that,",
    "start": "1741740",
    "end": "1746835"
  },
  {
    "text": "um, because these methods are only guaranteed, particularly this method is only guaranteed, to, find a local optima and all of the sort of policy gradient style methods are.",
    "start": "1746835",
    "end": "1754245"
  },
  {
    "text": "Um, then wherever you start you're gonna get to the closest local optima and you have no guarantee that that's the best global optima.",
    "start": "1754245",
    "end": "1760140"
  },
  {
    "text": "Um, so it's important to either try lots of random restarts here in this case or to have domain knowledge.",
    "start": "1760140",
    "end": "1765690"
  },
  {
    "text": "Um, another important question here is, how much you're perturbing sort of the size of your finite differences.",
    "start": "1765690",
    "end": "1771615"
  },
  {
    "text": "And then I think, really most critical is this policy parameterization. Like just how are you writing down the space of possible policies",
    "start": "1771615",
    "end": "1779070"
  },
  {
    "text": "that you can learn within because like, if that's not a good policy space, then you're just not going to learn anything. Um, yeah.",
    "start": "1779070",
    "end": "1788936"
  },
  {
    "text": "on slide 26 What is an open loop policy can you explain a bit more on that.",
    "start": "1788937",
    "end": "1794105"
  },
  {
    "text": "Yeah. Um, uh, so, question was about the open loop policy part. So, these policies that we're learning don't have to be adaptive.",
    "start": "1794105",
    "end": "1801530"
  },
  {
    "text": "And open loop policy is essentially a plan. It's a sequence of actions to take, um, regardless of any additional input that you might have.",
    "start": "1801530",
    "end": "1809000"
  },
  {
    "text": "So, um, we typically have been thinking about policies as mappings from states to actions,",
    "start": "1809000",
    "end": "1814400"
  },
  {
    "text": "but they can also just be a series of actions. And so, when we talk about an open loop policy,",
    "start": "1814400",
    "end": "1819799"
  },
  {
    "text": "that's a non-reactive policy because it's just a sequence of actions that regardless of the state of the robot you just keep going.",
    "start": "1819800",
    "end": "1826505"
  },
  {
    "text": "So, maybe there's a really large wind in the middle, and the robot's next action is the same whether there's a lot of wind or not.",
    "start": "1826505",
    "end": "1832070"
  },
  {
    "text": "It doesn't have to be reactive.",
    "start": "1832070",
    "end": "1834450"
  },
  {
    "text": "Okay. So, but in general, um, you know, finite differences is a reasonable thing to try.",
    "start": "1839560",
    "end": "1846050"
  },
  {
    "text": "Um, often we're gonna want to use gradient information and leverage the fact that our policy for function is actually differentiable.",
    "start": "1846050",
    "end": "1852990"
  },
  {
    "text": "So, what we're gonna do now is, um, compute the policy gradient analytically [NOISE] excuse me.",
    "start": "1853000",
    "end": "1858500"
  },
  {
    "text": "This is most common, um, in most of the techniques that are used right now. Um, we're gonna assume it's differentiable wherever it is non-zero,",
    "start": "1858500",
    "end": "1864860"
  },
  {
    "text": "um, and that we can explicitly compute this. So, when we say, what we- when we say know that means that this is computable.",
    "start": "1864860",
    "end": "1871920"
  },
  {
    "text": "And we can compute this explicitly. And so, now we're gonna be, um, thinking only about gradient-based methods.",
    "start": "1872620",
    "end": "1878914"
  },
  {
    "text": "And so, we're only, [NOISE] we're gonna only converge to a local optima. Hopefully, hopefully, we'll get to a local optima,",
    "start": "1878915",
    "end": "1886505"
  },
  {
    "text": "that's the best we can hope for in this case. Okay. So, we're going to talk- people often talk about likelihood ratio policies,",
    "start": "1886505",
    "end": "1897545"
  },
  {
    "text": "um, and they're gonna proceed as follows. So, let- we're thinking about the episodic case. So, we're gonna think about it as having, um, trajectories.",
    "start": "1897545",
    "end": "1904550"
  },
  {
    "text": "So, state action reward, next state, et cetera, all the way out to some terminal state.",
    "start": "1904550",
    "end": "1909695"
  },
  {
    "text": "So, this is where we terminate. And we're gonna use R of Tau to denote the sum of rewards for a trajectory.",
    "start": "1909695",
    "end": "1918710"
  },
  {
    "text": "Okay. So, the policy value in this case",
    "start": "1918710",
    "end": "1924365"
  },
  {
    "text": "is just gonna be the expected discounted sum of rewards we get by following this policy.",
    "start": "1924365",
    "end": "1930170"
  },
  {
    "text": "And we can represent that as the probability that we observe a particular trajectory times the reward of that trajectory.",
    "start": "1930170",
    "end": "1939030"
  },
  {
    "text": "So, it just says given under this policy what are the, you know, what's the probability of seeing any trajectory,",
    "start": "1939460",
    "end": "1944825"
  },
  {
    "text": "and then what would be the reward of that trajectory? Because the reward is the deterministic function of the trajectory.",
    "start": "1944825",
    "end": "1951140"
  },
  {
    "text": "Once you know the state action rewards, et cetera, then your reward is, um, just the sum of all of those.",
    "start": "1951140",
    "end": "1957245"
  },
  {
    "text": "And so now, in this particular notation, what our goal will be is to find policy parameters Theta,",
    "start": "1957245",
    "end": "1963260"
  },
  {
    "text": "which, um are the arg max of this. Uh, and the reason we sort of- what have we changed here, um,",
    "start": "1963260",
    "end": "1970580"
  },
  {
    "text": "the change now then has been the fact that we've gonna focus on here. So, notice now that the policy parameters only appear in terms of",
    "start": "1970580",
    "end": "1979085"
  },
  {
    "text": "the distribution of trajectories that we might encounter under this policy.",
    "start": "1979085",
    "end": "1984419"
  },
  {
    "text": "And this is, again, a little bit similar to what we talked about for imitation learning before or where in imitation learning,",
    "start": "1984640",
    "end": "1990380"
  },
  {
    "text": "we talked a lot about distributions of states and distributions of states and actions, and trying to find a policy that would match the same state action distribution,",
    "start": "1990380",
    "end": "1998540"
  },
  {
    "text": "as what was demonstrated by an expert. Um, today, we're not gonna talk as much about",
    "start": "1998540",
    "end": "2003549"
  },
  {
    "text": "sort of state action distributions but we are talking about sort of distributions of trajectories that we could encounter under our particular policy.",
    "start": "2003550",
    "end": "2011870"
  },
  {
    "text": "So, what's the gradient of this? Um, so, we wanna take the gradient of this function with respect to Theta.",
    "start": "2013080",
    "end": "2019930"
  },
  {
    "text": "So, we're gonna go for this as follows. We are gonna rewrite what is the probability of a trajectory under Theta.",
    "start": "2019930",
    "end": "2027190"
  },
  {
    "text": "So, sum over Tau.",
    "start": "2027190",
    "end": "2033625"
  },
  {
    "text": "I wanna do probability of Tau [NOISE] times.",
    "start": "2033625",
    "end": "2042490"
  },
  {
    "text": "All right, first actually I'll whip it in here.",
    "start": "2042490",
    "end": "2046010"
  },
  {
    "text": "And then what we're gonna do is, make sure I get the notation the same.",
    "start": "2061470",
    "end": "2070149"
  },
  {
    "text": "Okay.",
    "start": "2070150",
    "end": "2071899"
  },
  {
    "text": "So, then what we're gonna do is, we're gonna do something simple where we just multiply and divide by the same thing.",
    "start": "2080850",
    "end": "2087550"
  },
  {
    "text": "So, we're gonna put in probability of Tau given Theta, divided by probability of Tau given Theta,",
    "start": "2087550",
    "end": "2094389"
  },
  {
    "text": "times the derivative of the probability of Tau given Theta. And the probability- if we instead had a log.",
    "start": "2094390",
    "end": "2104755"
  },
  {
    "text": "So, if you're taking the derivative of log of probability of Tau given Theta,",
    "start": "2104755",
    "end": "2110170"
  },
  {
    "text": "that is exactly equal to the one over the probability",
    "start": "2110170",
    "end": "2116680"
  },
  {
    "text": "of Tau given Theta times the derivative of p of Tau given Theta.",
    "start": "2116680",
    "end": "2123085"
  },
  {
    "text": "So, we can re-express this as follows; Sum over Tau r of Tau,",
    "start": "2123085",
    "end": "2128950"
  },
  {
    "text": "p of Tau given Theta times derivative with respect to log of p of Tau given Theta.",
    "start": "2128950",
    "end": "2139160"
  },
  {
    "text": "Now, so far that doesn't necessarily seem like that's gonna be very useful. Um, [LAUGHTER] So, we've done that,",
    "start": "2140910",
    "end": "2146589"
  },
  {
    "text": "that's a reasonable transformation, but we'll see shortly why that transformation is helpful. And in particular, the reason this transformation is",
    "start": "2146590",
    "end": "2153250"
  },
  {
    "text": "helpful is it's gonna be very useful when we think about wanting to do all of this without knowing the dynamics or reward models.",
    "start": "2153250",
    "end": "2160404"
  },
  {
    "text": "Um, so, we're gonna need to be able to, you know, get reward in terms of, uh, a trajectory, but we wanna be able to evaluate, um,",
    "start": "2160405",
    "end": "2166945"
  },
  {
    "text": "the gradient of a policy without knowing the dynamics model, and this trick is gonna help us get there.",
    "start": "2166945",
    "end": "2172940"
  },
  {
    "text": "So, when, when we do this, this is often, this is often referred to as the likelihood ratio.",
    "start": "2174270",
    "end": "2180145"
  },
  {
    "text": "And we can convert it and just say, \"Well, we noticed that by doing this, this is actually exactly the same as the log.\"",
    "start": "2180145",
    "end": "2186440"
  },
  {
    "text": "Now, why else does this start to look like something that might be useful? Well, what do we have here? We have, if we- this is the sum over all trajectories.",
    "start": "2186660",
    "end": "2194725"
  },
  {
    "text": "Of course, we don't necessarily have access to all possible trajectories, but we can sample them. So, you could imagine starting to be able to approximate this",
    "start": "2194725",
    "end": "2201460"
  },
  {
    "text": "by running your policy a number of times, sampling a number of trajectories, looking at the reward of those,",
    "start": "2201460",
    "end": "2207910"
  },
  {
    "text": "um, and then taking the derivative with respect to this probability of trajectory given Theta.",
    "start": "2207910",
    "end": "2213740"
  },
  {
    "text": "So, typically we're gonna do this by just running the policy m times. Um, and then, that p of the- Tau given Theta,",
    "start": "2215220",
    "end": "2223630"
  },
  {
    "text": "we're gonna just approximate that by the following. So, that part drops out, we're just gonna weigh all of the trajectories that we got during our sampling uniformly,",
    "start": "2223630",
    "end": "2233305"
  },
  {
    "text": "and then we look at the reward of that trajectory, and the log of p of, um, [NOISE] uh, Tau given Theta.",
    "start": "2233305",
    "end": "2240980"
  },
  {
    "text": "So, what is happening in this case? Okay. So, this is saying that the gradient is this sort of,",
    "start": "2242370",
    "end": "2247525"
  },
  {
    "text": "um, [NOISE] uh, the reward that we get Um, times the log of the probability",
    "start": "2247525",
    "end": "2253930"
  },
  {
    "text": "of that trajectory for the reward with associated word times Theta. So, what's happening in that case?",
    "start": "2253930",
    "end": "2260619"
  },
  {
    "text": "So, in this case, we have a function which for our case is the reward,",
    "start": "2260620",
    "end": "2266215"
  },
  {
    "text": "which is sort of measuring how good, um, that particular, um, you know, trajectory is or how good that sample is.",
    "start": "2266215",
    "end": "2272785"
  },
  {
    "text": "And so, what this is doing is we're just moving up and the trajectory of the log probability of that sample based on how good it is.",
    "start": "2272785",
    "end": "2280915"
  },
  {
    "text": "So, we wanna sort of push up our parameters, that, um, are responsible for us getting samples which are good.",
    "start": "2280915",
    "end": "2288955"
  },
  {
    "text": "So, um, we want to have parameters in our policy that are gonna cause us to execute trajectories that give us high reward.",
    "start": "2288955",
    "end": "2296990"
  },
  {
    "text": "So, if we think of just sort of here f of x again is the reward. And we are- this is gonna be our policy or parameterized policy.",
    "start": "2298920",
    "end": "2307870"
  },
  {
    "text": "We want to increase the weight of things in our space that lead to high reward.",
    "start": "2307870",
    "end": "2315110"
  },
  {
    "text": "So, if this is our f of x, which is our reward function and this is the probability of our trajectories,",
    "start": "2315110",
    "end": "2320350"
  },
  {
    "text": "then we wanna reweight our policy to try to increase the probability of trajectories that yield high reward.",
    "start": "2320350",
    "end": "2325940"
  },
  {
    "text": "So, you would end up having larger gradients towards things that have high value, high reward.",
    "start": "2325940",
    "end": "2332829"
  },
  {
    "text": "Okay. So, then the next question is, if I'm gonna do this then I have to be able to approximate the second term,",
    "start": "2336450",
    "end": "2342430"
  },
  {
    "text": "which is this log. You know, the derivative with respect to the probability of a trajectory,",
    "start": "2342430",
    "end": "2347980"
  },
  {
    "text": "um, under some parameters. So, I have to be able to figure out what is the probability of a trajectory under a set of parameters,",
    "start": "2347980",
    "end": "2354579"
  },
  {
    "text": "and we can do that as follows. And so, this is gonna be Delta Theta of",
    "start": "2354580",
    "end": "2361725"
  },
  {
    "text": "log of the pro- of Mu of S_0.",
    "start": "2361725",
    "end": "2367390"
  },
  {
    "text": "So, this is our initial starting state, the probability of our initial starting state, times the product over j equals 0 to t minus 1 of the probability of",
    "start": "2367390",
    "end": "2379690"
  },
  {
    "text": "observing the next state given the action that was taken,",
    "start": "2379690",
    "end": "2388359"
  },
  {
    "text": "times the probability of taking that action under our current policy.",
    "start": "2388360",
    "end": "2393230"
  },
  {
    "text": "So, there's like another bracket at the end.",
    "start": "2399030",
    "end": "2404065"
  },
  {
    "text": "Um, and so, since this is log, we can just decompose this. So, this is gonna be equal to Delta Theta of log of",
    "start": "2404065",
    "end": "2412510"
  },
  {
    "text": "Mu of S naught plus Delta Theta sum over Delta Theta because it's a log term,",
    "start": "2412510",
    "end": "2419320"
  },
  {
    "text": "of J equals 0 to t minus 1 of log of [NOISE] the transition model.",
    "start": "2419320",
    "end": "2426175"
  },
  {
    "text": "Remember, we don't know this in general. This is unknown. You're just gonna hopefully end up with an expression which means we don't need to have it.",
    "start": "2426175",
    "end": "2432955"
  },
  {
    "text": "Um, and what i is indexing here is which trajectory we're on.",
    "start": "2432955",
    "end": "2437480"
  },
  {
    "text": "Add sum over J equals 0 to t minus 1. And this is gonna be our actual policy parameters.",
    "start": "2440700",
    "end": "2450349"
  },
  {
    "text": "All right, can anybody me why this is a useful decomposition? And whether or not it looks like we're gonna need to, so,",
    "start": "2454320",
    "end": "2460435"
  },
  {
    "text": "let me just parameterize all these things, um, does this look hopeful in terms of us not needing to know what the dynamics model is?",
    "start": "2460435",
    "end": "2470140"
  },
  {
    "text": "[inaudible]",
    "start": "2470140",
    "end": "2485680"
  },
  {
    "text": "How about everybody just take a second, talk to your neighbor and, um, then tell me which of these terms are gonna be zero.",
    "start": "2485680",
    "end": "2491450"
  },
  {
    "text": "So we're taking the derivative with respect to Theta. And which of these terms depend on Theta",
    "start": "2494010",
    "end": "2512069"
  },
  {
    "text": "[OVERLAPPING].",
    "start": "2512070",
    "end": "2544660"
  },
  {
    "text": "Remember Theta is what determines your policy parameters. Theta is what determines what action you take in a given state.",
    "start": "2544660",
    "end": "2551359"
  },
  {
    "text": "All right I'm gonna do a quick poll, um, so I'm gonna call these items one, two and three.",
    "start": "2552750",
    "end": "2560349"
  },
  {
    "text": "Does the first term depend on Theta? Raise your hand if yes, raise your hand if no. Great, okay, yeah. So this is independent Theta. So this is gonna be zero.",
    "start": "2560350",
    "end": "2569350"
  },
  {
    "text": "Raise your hand if the second term is independent of Theta. Great, so this goes to zero.",
    "start": "2569350",
    "end": "2575800"
  },
  {
    "text": "So the only thing we have less is this, which is great. So, um, the nice thing and so now it sort of becomes",
    "start": "2575800",
    "end": "2581980"
  },
  {
    "text": "more clear why we did this weird log, um, transformation, because when we did this weird log transformation,",
    "start": "2581980",
    "end": "2587530"
  },
  {
    "text": "it allowed us to take this product of the probability of the action that we took in the state transitions,",
    "start": "2587530",
    "end": "2593455"
  },
  {
    "text": "then instead we can decompose it into sums. And now once we see that we decompose it into sums,",
    "start": "2593455",
    "end": "2599065"
  },
  {
    "text": "we can apply the derivative separately and that means some of these terms just directly disappear which is really cool.",
    "start": "2599065",
    "end": "2605035"
  },
  {
    "text": "So, it means that we don't actually need to know what the transition model is. Um, we don't need to have a explicit representative. Yeah question and name first please.",
    "start": "2605035",
    "end": "2611540"
  },
  {
    "text": "And the question is, I was wondering, doesn't the dynamics of the system depend on the policy though, um, in general?",
    "start": "2611540",
    "end": "2618765"
  },
  {
    "text": "Great question. So question is, does the dynamics of the system depend on the policy? Absolutely, but only through this part.",
    "start": "2618765",
    "end": "2625460"
  },
  {
    "text": "So, it's like um, the agent gets to pick what action they take, but once they pick that, the dynamics is independent of the agent and so it's this de-coupling.",
    "start": "2625460",
    "end": "2633895"
  },
  {
    "text": "So, if you have a different policy, you will absolutely get different trajectories but the way in which you get different trajectories,",
    "start": "2633895",
    "end": "2640135"
  },
  {
    "text": "um, is only affected by the policy in terms of the actions that are selected and then the environment will determine sort of the next states that you get.",
    "start": "2640135",
    "end": "2646870"
  },
  {
    "text": "And so we don't need to know that in terms of, um, estimating the impact of the actions on the environment.",
    "start": "2646870",
    "end": "2653695"
  },
  {
    "text": "It will also come through in terms of the rewards you get. Because the rewards you get are also a function of the state. So you'll absolutely visit different parts of the state depending on the actions you",
    "start": "2653695",
    "end": "2661390"
  },
  {
    "text": "take. Any other questions? I'm and I just want to make sure I understand how I get",
    "start": "2661390",
    "end": "2670390"
  },
  {
    "text": "the estimate for the probability of how given Theta, I mean, most likely we are just saying if we took m episodes and this one showed up,",
    "start": "2670390",
    "end": "2678760"
  },
  {
    "text": "you know, i times it's gonna be i over m. It is that what we are doing here is correct? Great question. So, is asking, um, you know,",
    "start": "2678760",
    "end": "2686395"
  },
  {
    "text": "this is, what I put here is just one of those internal terms that would cover one i, yes,",
    "start": "2686395",
    "end": "2692589"
  },
  {
    "text": "So, what we're doing here is, we're saying, we're gonna take this policy. We're gonna run it m times. We're probably not gonna get any trajectories that are identical.",
    "start": "2692590",
    "end": "2698785"
  },
  {
    "text": "And what we're gonna do is compute this log of the probability of trajectory for each of those separately.",
    "start": "2698785",
    "end": "2703795"
  },
  {
    "text": "And then sum them up. You might end up with that, I mean,",
    "start": "2703795",
    "end": "2708865"
  },
  {
    "text": "you know in deterministic cases you might, um, if your domain doesn't have a lot of stochasticity and neither does your policy, you might end up with multiple trajectories that are identical.",
    "start": "2708865",
    "end": "2716215"
  },
  {
    "text": "In general your trajectories will be completely different. And so will your estimate of their local gradients.",
    "start": "2716215",
    "end": "2722329"
  },
  {
    "text": "So, this is really nice. We're gonna end up with this situation where we only have to be able to have",
    "start": "2723330",
    "end": "2728964"
  },
  {
    "text": "an analytic form for the derivative of our policy with respect to our parameters. So, we still need and we'll talk about this a little bit more later. We still need this.",
    "start": "2728965",
    "end": "2737005"
  },
  {
    "text": "We have to evaluate this. This is about how we parametrized our policy.",
    "start": "2737005",
    "end": "2743820"
  },
  {
    "text": "And if we want this to be analytic, we need to have parametrized our policy in a way that we can compute this exactly for any state and action.",
    "start": "2743820",
    "end": "2751625"
  },
  {
    "text": "So, we'll talk more about some ways, you know, some policy parameterizations which make this computation analytic and nice.",
    "start": "2751625",
    "end": "2758904"
  },
  {
    "text": "In other cases you might have to estimate this thing itself by, you know, brute force or computation or finite differences or something.",
    "start": "2758905",
    "end": "2766240"
  },
  {
    "text": "But if we choose a particular form of parameterized policy, then this part is gonna be analytic.",
    "start": "2766240",
    "end": "2772549"
  },
  {
    "text": "So, another thing is I don't find this, um, er, I don't find",
    "start": "2773040",
    "end": "2778359"
  },
  {
    "text": "this additional terminology particularly helpful but it's used all over the place. So I wanna introduce it which is people often call,",
    "start": "2778360",
    "end": "2783820"
  },
  {
    "text": "um, this part a score function. Just the score function which is not particularly helpful,",
    "start": "2783820",
    "end": "2790210"
  },
  {
    "text": "I think but nevertheless is often used is called this. So that's the quantity that we were just talking about needing to be able to evaluate.",
    "start": "2790210",
    "end": "2799270"
  },
  {
    "text": "So this really gets into, um, er, well, we'll write it out again.",
    "start": "2799270",
    "end": "2805285"
  },
  {
    "text": "So, um, when we take the derivative of the value function we approximate that by getting",
    "start": "2805285",
    "end": "2813595"
  },
  {
    "text": "m samples and we sum over i equals one to m. And we look at the reward for that treject- um,",
    "start": "2813595",
    "end": "2822910"
  },
  {
    "text": "trajectory and then we sum over these per step score functions.",
    "start": "2822910",
    "end": "2834530"
  },
  {
    "text": "Can everybody read that in the back? Yeah. Okay great. Yeah so these are sort of our score functions.",
    "start": "2843780",
    "end": "2850555"
  },
  {
    "text": "And these are our score functions, um, that can be evaluated",
    "start": "2850555",
    "end": "2855865"
  },
  {
    "text": "over every single state action pair that we saw and we do not need to know the dynamics model.",
    "start": "2855865",
    "end": "2861680"
  },
  {
    "text": "So, the policy gradient theorem slightly generalizes this.",
    "start": "2861870",
    "end": "2867790"
  },
  {
    "text": "How is it gonna generalize this? Note in this case, what we're doing here is we're- this is for the episodic setting.",
    "start": "2867790",
    "end": "2873535"
  },
  {
    "text": "And this is for when we just take our raw, our raw reward functions. So we look at the sum of rewards for that trajectory and then, um,",
    "start": "2873535",
    "end": "2881980"
  },
  {
    "text": "we weigh it by this sort of derivative with respect to our policy parameters. Um, it turns out that we can also slightly generalize this.",
    "start": "2881980",
    "end": "2892015"
  },
  {
    "text": "And let's say I'm gonna call, so this is a value function, um, let's say that we had slightly different objective functions.",
    "start": "2892015",
    "end": "2898900"
  },
  {
    "text": "We talked before about how we could have episodic reward or average reward per time step or average value.",
    "start": "2898900",
    "end": "2905005"
  },
  {
    "text": "So, we could either have our objective function be equal to our normal value for episodic or we could have it equal to",
    "start": "2905005",
    "end": "2915069"
  },
  {
    "text": "what I'm gonna call J AVR which is average reward per time step or we could have it as average value.",
    "start": "2915070",
    "end": "2926900"
  },
  {
    "text": "Let's say we're always continuing and we want to average over the distribution of states that we encounter.",
    "start": "2928710",
    "end": "2934480"
  },
  {
    "text": "So we can think about that. It's a good scenario too. It turns out that on all of those cases you can do a similar derivation to what we did here for the episodic case.",
    "start": "2934480",
    "end": "2942430"
  },
  {
    "text": "And what we find is that we have the derivative of our objective function,",
    "start": "2942430",
    "end": "2948204"
  },
  {
    "text": "which now can be kind of any one of these different objective functions, is equal to the expected value under that,",
    "start": "2948205",
    "end": "2954550"
  },
  {
    "text": "the current policy of the derivative with respect to just those policy parameters times Q.",
    "start": "2954550",
    "end": "2966079"
  },
  {
    "text": "And Sutton and Barto in Chapter 13 which we also reference on the schedule, um,",
    "start": "2972450",
    "end": "2978255"
  },
  {
    "text": "have a nice discussion about a number of these different issues, um, and so again, we're not gonna talk too much about",
    "start": "2978255",
    "end": "2985510"
  },
  {
    "text": "these slightly other different objective functions but just know that this all can be extended to the continuing case.",
    "start": "2985510",
    "end": "2991309"
  },
  {
    "text": "Okay, so what we've said here so far is that we have this approximation where what we do is we just take our policy,",
    "start": "2991800",
    "end": "2999609"
  },
  {
    "text": "we run it out phi m times, for each of those m times we get a whole sequence of states and actions and rewards.",
    "start": "2999610",
    "end": "3006270"
  },
  {
    "text": "And then we average. And this is an unbiased estimate of the policy gradient but it's very noisy.",
    "start": "3006270",
    "end": "3013110"
  },
  {
    "text": "So, this is gonna be unbiased and noisy.",
    "start": "3013110",
    "end": "3019710"
  },
  {
    "text": "If you think about what we saw before for things like Monte Carlo methods, it should look vaguely familiar,",
    "start": "3021810",
    "end": "3027670"
  },
  {
    "text": "same sort of spirit, right? We have, um, we're just running out our policy. We're gonna get some",
    "start": "3027670",
    "end": "3032920"
  },
  {
    "text": "sum of rewards just like what we got in Monte Carlo, um, estimates. But, [NOISE] so, it'll be unbiased estimate of the gradient.",
    "start": "3032920",
    "end": "3040030"
  },
  {
    "text": "So, it's unbiased estimate of the gradient, estimate of gradient. But noisy.",
    "start": "3040030",
    "end": "3048589"
  },
  {
    "text": "So, what can make this actually practical? Um, there's a number of different techniques for doing that.",
    "start": "3049290",
    "end": "3056424"
  },
  {
    "text": "Um, but some of the things we'll start to talk about today are temporal structure and baselines. [NOISE] Okay. So, how do we fix this?",
    "start": "3056425",
    "end": "3063420"
  },
  {
    "text": "I'm gonna start to look at, you know, fixes, [NOISE] uh,",
    "start": "3063420",
    "end": "3069210"
  },
  {
    "text": "temporal structure and baselines.",
    "start": "3069210",
    "end": "3079810"
  },
  {
    "text": "And before we keep going on this, um, based on what I just said in terms of Monte Carlo estimates,",
    "start": "3081090",
    "end": "3086305"
  },
  {
    "text": "um, what are some of you guys' ideas for how we could maybe reduce the variance of this estimate?",
    "start": "3086305",
    "end": "3092005"
  },
  {
    "text": "Based on stuff we've seen so far in class. Like, what are the alternative to cut up Monte Carlo methods? Yeah?",
    "start": "3092005",
    "end": "3101650"
  },
  {
    "text": "We could use bootstraps. Um, can I get your name first. Oh, I'm . ? Yeah. What said is exactly, right.",
    "start": "3101650",
    "end": "3107350"
  },
  {
    "text": "So, said we could use bootstrapping. Yeah. So, we've repeatedly seen that, um, we have this trade off between bias and variance,",
    "start": "3107350",
    "end": "3113319"
  },
  {
    "text": "and that bootstrapping, um, like temporal difference methods that we saw in Q-learning that you're doing in DQN,",
    "start": "3113320",
    "end": "3118570"
  },
  {
    "text": "can be helpful in, um, reducing variance and, and speeding the spread of information.",
    "start": "3118570",
    "end": "3123910"
  },
  {
    "text": "So, yeah. So, we could absolutely do things like bootstrapping, um, to kind of replace R with something else or use,",
    "start": "3123910",
    "end": "3133329"
  },
  {
    "text": "um, a covariate in addition to R. To try to reduce the variance of R. Okay.",
    "start": "3133329",
    "end": "3139525"
  },
  {
    "text": "All right. So, what we're gonna do now is, we're first gonna do something that doesn't go all the way to",
    "start": "3139525",
    "end": "3145660"
  },
  {
    "text": "there but tries to [NOISE] at least leverage the fact that we're in a temporal, temporal, um, process.",
    "start": "3145660",
    "end": "3152799"
  },
  {
    "text": "[NOISE] Okay. Um, and for any of you who have played around with importance sampling before,",
    "start": "3152800",
    "end": "3158934"
  },
  {
    "text": "this is closely related to, um, per-decision importance sampling. And basically, the, um,",
    "start": "3158935",
    "end": "3164934"
  },
  {
    "text": "thing that we're going to exploit, is the fact that, um, the rewards, uh, can only,",
    "start": "3164935",
    "end": "3171855"
  },
  {
    "text": "um, of the temporal structure domain. Oh, I'll write it out first. Okay. So, what we had before, is we said that, um,",
    "start": "3171855",
    "end": "3178995"
  },
  {
    "text": "the derivative with respect to Theta of the expected value of Tau of the return is equal to the expected value under",
    "start": "3178995",
    "end": "3189100"
  },
  {
    "text": "the trajectories you could get of the sum over t equals 0 to t minus 1 of rt such as the sum of rewards you get",
    "start": "3189100",
    "end": "3198730"
  },
  {
    "text": "[NOISE] times the sum over t equals 0 to t minus 1 of your derivative with respect to your policy parameters.",
    "start": "3198730",
    "end": "3208599"
  },
  {
    "text": "[NOISE] Um, that's what we had before.",
    "start": "3208600",
    "end": "3217915"
  },
  {
    "text": "So, we just sum up all of our rewards, and then, we'd multiply that by the sum over all of the gradients",
    "start": "3217915",
    "end": "3224470"
  },
  {
    "text": "of our policy at every single action state pair we got in that trajectory. [NOISE] Okay. So, let's think about doing this for a single reward,",
    "start": "3224470",
    "end": "3232765"
  },
  {
    "text": "instead of looking at the whole sum of rewards. So, let's just look at. We take the derivative with respect to Theta of expected value of rt prime.",
    "start": "3232765",
    "end": "3242740"
  },
  {
    "text": "[NOISE] So, this is just a single time step reward that we might encounter you know, along our trajectory,",
    "start": "3242740",
    "end": "3248335"
  },
  {
    "text": "and that's gonna be equal to the expected value of rt prime times sum over t equals zero to t prime of this derivative.",
    "start": "3248335",
    "end": "3259765"
  },
  {
    "text": "So, this is gonna look almost exactly the same as before. [NOISE] Except, the only key difference here is that I'm only summing up to t prime.",
    "start": "3259765",
    "end": "3272530"
  },
  {
    "text": "Okay. So, we're only summing up, um, you could think of this as just like a shortened trajectory.",
    "start": "3272530",
    "end": "3278785"
  },
  {
    "text": "I'm looking at the product of, um, the states, and the actions and the rewards that I, I reached all the way up to when I got to, um, rt prime.",
    "start": "3278785",
    "end": "3287860"
  },
  {
    "text": "Okay. So, I don't have to sum all the way over the future ones. So, we can take this expression,",
    "start": "3287860",
    "end": "3293980"
  },
  {
    "text": "and now, we can sum over all time steps. So, this says, what's the expected reward, uh,",
    "start": "3293980",
    "end": "3299065"
  },
  {
    "text": "or the derivative with respect to the reward for time step t prime? Now, I'm gonna just sum that,",
    "start": "3299065",
    "end": "3304190"
  },
  {
    "text": "and that's gonna be the same as my first expressions. So, what I'm gonna do is I'm gonna say, [NOISE] V of Theta is equal to the derivative with respect to Theta of er,",
    "start": "3304190",
    "end": "3314700"
  },
  {
    "text": "and I'm gonna sum up that internal expression. So, I'm gonna sum over t prime is equal to zero to t minus 1 rt prime,",
    "start": "3314700",
    "end": "3325240"
  },
  {
    "text": "and then insert that second expression. Okay. So, all I did is I put that in there",
    "start": "3325240",
    "end": "3341980"
  },
  {
    "text": "and I summed over t prime is equal to zero, all the way up to t minus 1, and then,",
    "start": "3341980",
    "end": "3347040"
  },
  {
    "text": "what I'm gonna do is I'm going to reorder this and this by making the following observation.",
    "start": "3347040",
    "end": "3354494"
  },
  {
    "text": "So, if we think about, how many terms one of these particular,",
    "start": "3354495",
    "end": "3359650"
  },
  {
    "text": "um, log Pi Theta at st appears in? So, if we look at, um,",
    "start": "3359650",
    "end": "3365440"
  },
  {
    "text": "[NOISE] log of Phi Theta of a_1 s_1.",
    "start": "3365440",
    "end": "3372319"
  },
  {
    "text": "So if you look at how many times that appears, that appears for the early rewards and it appears for all the later rewards too.",
    "start": "3372480",
    "end": "3381400"
  },
  {
    "text": "Okay. This is going to appear for r_1, it's going to appear for r_2, it's gonna appear all the way up to rt for t minus 1.",
    "start": "3381400",
    "end": "3388660"
  },
  {
    "text": "Because we're always summing over everything before that t prime.",
    "start": "3388660",
    "end": "3393744"
  },
  {
    "text": "Okay. So, what we're gonna do now is we're gonna take those terms and we're gonna just reorganize those.",
    "start": "3393745",
    "end": "3400045"
  },
  {
    "text": "So, some of these terms appear a whole bunch of times, some of them, the last one, the [NOISE] log of Pi Theta of at minus 1,",
    "start": "3400045",
    "end": "3409450"
  },
  {
    "text": "st minus 1, it's only gonna appear once. It's only re-responsible for helping dictate the very [NOISE] final reward.",
    "start": "3409450",
    "end": "3419020"
  },
  {
    "text": "So, we can use that insight to just slightly, um, reorganize this equation as follows. [NOISE] So, now, we're gonna say this is equal to",
    "start": "3419020",
    "end": "3426160"
  },
  {
    "text": "the expected value of sum over t equals zero to t minus 1.",
    "start": "3426160",
    "end": "3432325"
  },
  {
    "text": "So, notice before, I put the t prime on the outside and the t was on the inside,",
    "start": "3432325",
    "end": "3437545"
  },
  {
    "text": "and now, what I'm gonna do is put the t on the outside, and I'm gonna say,",
    "start": "3437545",
    "end": "3442599"
  },
  {
    "text": "[NOISE] got Delta Theta, log Pi Theta,",
    "start": "3442600",
    "end": "3447610"
  },
  {
    "text": "at st times sum over t prime is equal to t all the way to t minus 1 of rt prime.",
    "start": "3447610",
    "end": "3457210"
  },
  {
    "text": "Okay. So, all I've done is I've reorganized that sum. Yes? Is that ? Yeah.",
    "start": "3457210",
    "end": "3462265"
  },
  {
    "text": "Yeah. Um, on the second line from the bottom, is it's supposed to be the derivative that- is that a value function [NOISE] with respect to Theta?",
    "start": "3462265",
    "end": "3468865"
  },
  {
    "text": "Um, at the very [NOISE] left. Yeah. Okay. Yes. Oh sorry. You mean[OVERLAPPING] it's supposed to be the derivative of this?",
    "start": "3468865",
    "end": "3474819"
  },
  {
    "text": "Yes. [NOISE] Yeah. Thank you. Okay. So, what we've done in this case was we've reorganized the sum.",
    "start": "3474820",
    "end": "3484150"
  },
  {
    "text": "We-we've just recollected terms in a slightly different way. But it's gonna be the- in a useful way.",
    "start": "3484150",
    "end": "3490299"
  },
  {
    "text": "So, [NOISE] let's move this up, and I'll move this one down. [NOISE].",
    "start": "3490300",
    "end": "3497500"
  },
  {
    "text": "Okay. So, right now, we're still working on the temporal structure. [NOISE] And what is this going to allow us to do?",
    "start": "3497500",
    "end": "3503680"
  },
  {
    "text": "Well that second term there, should look somewhat familiar. What that's saying here is that's saying,",
    "start": "3503680",
    "end": "3508839"
  },
  {
    "text": "what is the reward we get starting at time step, uh, t all the way to the end?",
    "start": "3508839",
    "end": "3514690"
  },
  {
    "text": "And that's just the return. So, we had previously defined that, um, when we are talking about,",
    "start": "3514690",
    "end": "3521589"
  },
  {
    "text": "like, Monte Carlo methods, et cetera, [NOISE] that we could always just look at,",
    "start": "3521590",
    "end": "3526160"
  },
  {
    "text": "um, rt prime at I. This is just equal to the return.",
    "start": "3527100",
    "end": "3533605"
  },
  {
    "text": "The return for the rest of the episode starting in time step t on episode i.",
    "start": "3533605",
    "end": "3539470"
  },
  {
    "text": "So, that, that should look very familiar to what we had seen in Monte Carlo methods, where we could always say from this state and action,",
    "start": "3539470",
    "end": "3546265"
  },
  {
    "text": "what was the sum of rewards we get starting at that state and action until the end of the episode? Okay. So, that means we can re-express the derivative [NOISE] with respect to",
    "start": "3546265",
    "end": "3555390"
  },
  {
    "text": "Theta as approximately one over m sum over all of the trajectories and we're summing over,",
    "start": "3555390",
    "end": "3562860"
  },
  {
    "text": "sum over all the time steps. The derivative with respect to Theta of our actual policy",
    "start": "3562860",
    "end": "3570070"
  },
  {
    "text": "parameter times just the return.",
    "start": "3570070",
    "end": "3576110"
  },
  {
    "text": "And this is gonna be a slightly lower variance estimate than before. Okay. So, instead of us having to sort of separately sum up all of our words, and then,",
    "start": "3580140",
    "end": "3592950"
  },
  {
    "text": "we multiply that by the full sum of all of these derivatives at the logs,",
    "start": "3592950",
    "end": "3598320"
  },
  {
    "text": "we are only kind of needing to take the sum of the logs, um,",
    "start": "3598320",
    "end": "3604585"
  },
  {
    "text": "for some of the reward terms essentially, and so, we can reduce the variance in that case.",
    "start": "3604585",
    "end": "3611530"
  },
  {
    "text": "Because in some ways, what this is doing, this is saying, like, for every single reward, because you could re-express this as a sum of rewards.",
    "start": "3611530",
    "end": "3617890"
  },
  {
    "text": "For every single one of those rewards, you have to, um, sum it by sort of the full trajectory in terms of the derivative of the gradient,",
    "start": "3617890",
    "end": "3625165"
  },
  {
    "text": "uh, the derivative of the policy parameters. And now, we're saying, you don't have to, uh, multiply that by all of those.",
    "start": "3625165",
    "end": "3630670"
  },
  {
    "text": "You only have to multiply it by the ones that are relevant for that particular reward. That means that you're gonna have a slightly lower variance estimator.",
    "start": "3630670",
    "end": "3638170"
  },
  {
    "text": "[NOISE] Okay. So, when we do this we can end up with what's known as REINFORCE which,",
    "start": "3638170",
    "end": "3647020"
  },
  {
    "text": "um, who here has heard of REINFORCE? Yeah. Number of people, not everybody. REINFORCE is one of the most common reinforcement learning policy gradient algorithms.",
    "start": "3647020",
    "end": "3655150"
  },
  {
    "text": "So, you get the REINFORCE algorithm. [NOISE]",
    "start": "3655150",
    "end": "3662065"
  },
  {
    "text": "So how it works is you, um, then the algorithm is you initialize in it, theta randomly.",
    "start": "3662065",
    "end": "3668109"
  },
  {
    "text": "[NOISE] You just always will have to first decide on how you're parameterizing your policy,",
    "start": "3668110",
    "end": "3674860"
  },
  {
    "text": "so somewhere you already defied- decided how you're parameterizing your policy. Now, you're gonna set the values for that policy randomly.",
    "start": "3674860",
    "end": "3681234"
  },
  {
    "text": "And then for each episode, so you're going to run an episode with that policy. [NOISE] Episode.",
    "start": "3681235",
    "end": "3688600"
  },
  {
    "text": "[NOISE] And you're gonna gather a whole bunch of actions and rewards, [NOISE] and this is sampled from your current policy.",
    "start": "3688600",
    "end": "3700495"
  },
  {
    "text": "So, your sample, your current policy according to, um, sample from your current policy,",
    "start": "3700495",
    "end": "3706810"
  },
  {
    "text": "you get a trajectory, and then for every step in that trajectory, you're gonna update your policy parameters.",
    "start": "3706810",
    "end": "3714460"
  },
  {
    "text": "[NOISE] So, [NOISE] for every time step inside of that episode,",
    "start": "3714460",
    "end": "3720534"
  },
  {
    "text": "we're gonna update our policy parameters. [NOISE] So, it's going to be the same as before times some learning rate.",
    "start": "3720534",
    "end": "3726970"
  },
  {
    "text": "[NOISE] I will not use W there, I use alpha, um,",
    "start": "3726970",
    "end": "3734390"
  },
  {
    "text": "times the derivative with respect to Theta, log Pi Theta,",
    "start": "3737400",
    "end": "3742765"
  },
  {
    "text": "st at Gt, where Gt is just in this episode,",
    "start": "3742765",
    "end": "3749125"
  },
  {
    "text": "what is the sum of rewards from st at onwards? [NOISE].",
    "start": "3749125",
    "end": "3756490"
  },
  {
    "text": "So, that's the just the normal return like, what we had with, um, Monte Carlo methods.",
    "start": "3756490",
    "end": "3761545"
  },
  {
    "text": "So, just like, what we did when we were estimating like, the linear value function, and we were using rewards from the state and action onwards.",
    "start": "3761545",
    "end": "3768369"
  },
  {
    "text": "We're going to do the same thing here except for, um, we're going to be updating the policy parameters, and we do this many,",
    "start": "3768370",
    "end": "3774400"
  },
  {
    "text": "many, many times and then at the end, we return the Theta parameters. Yeah? [NOISE]",
    "start": "3774400",
    "end": "3780520"
  },
  {
    "text": "I have a question. So, for each episode, do you sample from the updated, um, policy? We're gonna talk with you. Hope you're ready.",
    "start": "3780520",
    "end": "3786730"
  },
  {
    "text": "Yes. Uh-um. [NOISE] Yeah. So, what just asked is, right. Um, so, in this case you, um,",
    "start": "3786730",
    "end": "3792309"
  },
  {
    "text": "I- after you do all the updates for one episode, so you could do these incremental updates.",
    "start": "3792310",
    "end": "3799195"
  },
  {
    "text": "Um, I- and then, a- at the end of doing all of your incremental updates, then you get another episode with your new updating parameters. Yeah, ?",
    "start": "3799195",
    "end": "3809845"
  },
  {
    "text": "Um, since we're doing every time updates would this be a biased method? Um, good question.",
    "start": "3809845",
    "end": "3814900"
  },
  {
    "text": "So, since we're doing every time estimates, um, this should be an unbiased estimate of the,",
    "start": "3814900",
    "end": "3821859"
  },
  {
    "text": "um, I- It should still be an unbiased estimate of the gradient. It's stochastic, um, but, um,",
    "start": "3821859",
    "end": "3827770"
  },
  {
    "text": "we- there's not a notion of state and actions in the same way.",
    "start": "3827770",
    "end": "3832915"
  },
  {
    "text": "Um, this will be asymptotically consistent. It's a good question. So, the notion of, um,",
    "start": "3832915",
    "end": "3840475"
  },
  {
    "text": "a state and action in this case is different because we have just these policy parameters. So, we're not estimating the value of a state and action here.",
    "start": "3840475",
    "end": "3848755"
  },
  {
    "text": "Um, so, this is certainly asymptotically consistent.",
    "start": "3848755",
    "end": "3854500"
  },
  {
    "text": "I think it's still just unbiased. Um, if I, if I reconsider that later, I'll send a Piazza post, um,",
    "start": "3854500",
    "end": "3861130"
  },
  {
    "text": "but I think it's still just an unbiased estimate of the gradient. It's a good question. Okay. So, I go back to my slide notes.",
    "start": "3861130",
    "end": "3874330"
  },
  {
    "text": "Um, I think the last thing I just wanted- well, I'll- I mention the, uh, probably the things will, um,",
    "start": "3874330",
    "end": "3879700"
  },
  {
    "text": "[NOISE] one critical question here is, whether or not, or how to compute this differential with respect to the policy parameters?",
    "start": "3879700",
    "end": "3887665"
  },
  {
    "text": "So, I think it's useful to talk about, you know, what are the classes of policies that often people consider,",
    "start": "3887665",
    "end": "3893140"
  },
  {
    "text": "[NOISE], um, that have nice differentiable forms. So, um, some of the classes people considers are things like,",
    "start": "3893140",
    "end": "3899950"
  },
  {
    "text": "Softmax, Gaussians, and Neural networks. Those are probably the most common. So, I- what do I mean by that?",
    "start": "3899950",
    "end": "3905290"
  },
  {
    "text": "I mean, that's how we're [NOISE] going to actually, just parameterize our policy. So, let's just look at an example.",
    "start": "3905290",
    "end": "3910825"
  },
  {
    "text": "So, Softmax is where we simply [NOISE] have a linear combination of features,",
    "start": "3910825",
    "end": "3920155"
  },
  {
    "text": "and we take sort of, um, an exponential weight of them. So, what we're gonna do is we're gonna have some features of our state and action space,",
    "start": "3920155",
    "end": "3928570"
  },
  {
    "text": "and we're gonna [NOISE] multiply them by some weights or parameters.",
    "start": "3928570",
    "end": "3933640"
  },
  {
    "text": "These are our parameters. [NOISE] And then, to actually get a probability of taking an action,",
    "start": "3933640",
    "end": "3941755"
  },
  {
    "text": "so if we want to have our policy where we say, what is the probability of action given the state?",
    "start": "3941755",
    "end": "3947260"
  },
  {
    "text": "We're gonna take the exponential of these weighted features. So, we have e [NOISE] to the phi t Theta,",
    "start": "3947260",
    "end": "3956230"
  },
  {
    "text": "divided by the sum over all actions [NOISE].",
    "start": "3956230",
    "end": "3967390"
  },
  {
    "text": "So notice, this is a reasonable thing to do when our action space is discrete, action space discrete [NOISE].",
    "start": "3967390",
    "end": "3977950"
  },
  {
    "text": "So, [NOISE] a lot of  Atari games, a lot of different, um, scenarios you do have a discrete action space, um, so you could just take this exponential, divide by the normalized.",
    "start": "3977950",
    "end": "3986275"
  },
  {
    "text": "Um, sum over the exponential, and that immediately yields our parameterized policy class.",
    "start": "3986275",
    "end": "3993835"
  },
  {
    "text": "And so, then, um, if we want to be able to take the derivative of this with respect to the log,",
    "start": "3993835",
    "end": "3999760"
  },
  {
    "text": "that's quite nice because we have exponentials here, and we have log term. We're taking the log of this.",
    "start": "3999760",
    "end": "4005325"
  },
  {
    "text": "So, um, we want to be able to compute this term from this sort of parameterized policy class.",
    "start": "4005325",
    "end": "4011400"
  },
  {
    "text": "What we get is the derivative with respect to Theta of log of this type of parameterized policy [NOISE] is just equal to our features [NOISE].",
    "start": "4011400",
    "end": "4022710"
  },
  {
    "text": "So, this is whatever feature representation we're using, like in the case of the, um, uh, locomotion robotic case, this would be like all the different.",
    "start": "4022710",
    "end": "4031125"
  },
  {
    "text": "Um, uh, this could be something like, you know, angles, or joints, or things like that.",
    "start": "4031125",
    "end": "4036690"
  },
  {
    "text": "Um, so, this is whatever featurization we're using minus the expected value for",
    "start": "4036690",
    "end": "4042300"
  },
  {
    "text": "Theta of [NOISE] your parameters,",
    "start": "4042300",
    "end": "4048150"
  },
  {
    "text": "um, with an exponent with, um, your expected value [NOISE] over all the actions you might take under that policy.",
    "start": "4048150",
    "end": "4055245"
  },
  {
    "text": "So, it's sort of saying the features that you observed versus the sort of average feature, average, average over the action.",
    "start": "4055245",
    "end": "4062860"
  },
  {
    "text": "Okay? So, that's differentiable. Um, and you can solve it, then it gives you an analytic form.",
    "start": "4063950",
    "end": "4070829"
  },
  {
    "text": "Um, another thing that's really popular is a Gaussian policy. [NOISE] And why might this be good?",
    "start": "4070830",
    "end": "4078630"
  },
  {
    "text": "Well, this might be good because often, we have continuous action spaces. So, this is good if we have discrete action spaces.",
    "start": "4078630",
    "end": "4083760"
  },
  {
    "text": "Often, we have continuous actions spaces. This is very common in, um, controls and robotics.",
    "start": "4083760",
    "end": "4090540"
  },
  {
    "text": "[NOISE] So, you have a number of different parameters and i- in",
    "start": "4090540",
    "end": "4096464"
  },
  {
    "text": "their continuous scalar values that you wanna be able to set. Um, and what we could say here, let's say,",
    "start": "4096465",
    "end": "4102630"
  },
  {
    "text": "we use mu of s. It might be a linear combination of state features, times some parameter.",
    "start": "4102630",
    "end": "4110219"
  },
  {
    "text": "Okay. And let's imagine for simplicity right now that, um, we have a variance but that, that's static.",
    "start": "4110220",
    "end": "4116339"
  },
  {
    "text": "So, we could also consider the case where it's not, but we're gonna assume that we have some variance term that is fixed,",
    "start": "4116340",
    "end": "4123179"
  },
  {
    "text": "[NOISE] so this is not a parameter. This is not something we're gonna try to learn. We're just gonna be trying to learn the Theta that's defining our mu function,",
    "start": "4123180",
    "end": "4131205"
  },
  {
    "text": "and then our policy is gonna be a Gaussian. So, a is going to be drawn from a Gaussian using this mean per features.",
    "start": "4131205",
    "end": "4140355"
  },
  {
    "text": "Okay. So, we compare our current state to the mean,",
    "start": "4140355",
    "end": "4146775"
  },
  {
    "text": "and then we select an action with respect to that, and the score function in this case is the derivative of this Gaussian.",
    "start": "4146775",
    "end": "4154020"
  },
  {
    "text": "[NOISE] So, score's a derivative of, uh, of this Gaussian function [NOISE],",
    "start": "4154020",
    "end": "4160020"
  },
  {
    "text": "which ends up being a minus mu of s times our parameterization",
    "start": "4160020",
    "end": "4167250"
  },
  {
    "text": "of the state features divided by sigma squared [NOISE].",
    "start": "4167250",
    "end": "4175080"
  },
  {
    "text": "So, again, it can be done analytically. And the other really common one is deep neural networks.",
    "start": "4175080",
    "end": "4180330"
  },
  {
    "text": "So, those are, um, [NOISE] those are- those are sort of very common forms, um, I- that people use.",
    "start": "4180330",
    "end": "4187665"
  },
  {
    "text": "We're gonna talk next time about another common way. Before we finish, um, we're gonna do,",
    "start": "4187665",
    "end": "4193680"
  },
  {
    "text": "um, spend about five minutes, um, to do some early class feedback. It's really helpful for us to figure out what's helping you learn,",
    "start": "4193680",
    "end": "4199740"
  },
  {
    "text": "what things do you think could be improved? Um, so, what I'm going to do right now is open, if you guys could go to Piazza.",
    "start": "4199740",
    "end": "4205665"
  },
  {
    "text": "Um, It would be great if you could fill this out. All everything is anonymous. Um, and my goal is to get feedback for you guys on Wednesday about this.",
    "start": "4205665",
    "end": "4213780"
  },
  {
    "text": "So, just- let me see if I could redo that. So, it's posted.",
    "start": "4213780",
    "end": "4219675"
  },
  {
    "text": "Okay. Let me see if I can- I'll pin it, so it's easier to find. [NOISE] So, it should be pinned now at the very top.",
    "start": "4219675",
    "end": "4229365"
  },
  {
    "text": "Yeah. So, a class feedback survey, if you go to Piazza, um, it's a very short survey. You can give us information back. That would be great.",
    "start": "4229365",
    "end": "4235875"
  },
  {
    "text": "What we'll do next time is we'll continue to talk about policy search. We're gonna talk about baselines, which is another way to reduce variance.",
    "start": "4235875",
    "end": "4242565"
  },
  {
    "text": "Um, and this again is a super active area of research, so there's, um, a ton of work on deep reinforcement learning and policy gradients,",
    "start": "4242565",
    "end": "4249125"
  },
  {
    "text": "and so we'll talk about some of that work, and then you'll have a chance to, uh, play around with this a- and, uh,",
    "start": "4249125",
    "end": "4254360"
  },
  {
    "text": "do get sort of hands-on experience with policy gradients after the mid-term. So we're releasing the assignment about this at post the midterm,",
    "start": "4254360",
    "end": "4260915"
  },
  {
    "text": "and that will be the third assignment.",
    "start": "4260915",
    "end": "4263190"
  }
]