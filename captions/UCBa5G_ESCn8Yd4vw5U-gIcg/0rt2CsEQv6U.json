[
  {
    "text": "Okay, hey everyone. So welcome to the final week of the class.",
    "start": "4340",
    "end": "12125"
  },
  {
    "text": "Uh, what I wanna do today, is share with you a few generalizations of,",
    "start": "12125",
    "end": "17690"
  },
  {
    "text": "um, reinforcement learning and of MDPs. So you've learned about the basic MDP formulas of state action,",
    "start": "17690",
    "end": "25660"
  },
  {
    "text": "state transition probability, discount factor and rewards. Um, the first thing you see today is two, you know,",
    "start": "25660",
    "end": "32669"
  },
  {
    "text": "slight generalizations of this framework to state-action rewards and to the finite horizon MDPs.",
    "start": "32670",
    "end": "37899"
  },
  {
    "text": "They're making it a little bit easier for you to model certain types of problems, certain types of robots,",
    "start": "37900",
    "end": "43090"
  },
  {
    "text": "so certain types of factory automation problems will be easier to model with these two small generalizations.",
    "start": "43090",
    "end": "49820"
  },
  {
    "text": "So we'll talk about those first, and then second, we'll talk about linear dynamical systems.",
    "start": "49820",
    "end": "56095"
  },
  {
    "text": "Last Wednesday, you saw a fitted value iteration which was a way to solve for an MDP even when the state-space may be infinite,",
    "start": "56095",
    "end": "66439"
  },
  {
    "text": "even when the state space is a set of real numbers known as RN so it's an infinite list of states.",
    "start": "66440",
    "end": "71550"
  },
  {
    "text": "So a continuous set states, we use fitted value iteration in which we had to use a function approximator,",
    "start": "71550",
    "end": "76895"
  },
  {
    "text": "right, like linear regression, to try to approximate the value function. There's one very important special case of an MDP where even",
    "start": "76895",
    "end": "85040"
  },
  {
    "text": "if the state space is infinite or continuous real numbers,",
    "start": "85040",
    "end": "90120"
  },
  {
    "text": "uh, there's one important special case where you can still compute the value function exactly without needing to use,",
    "start": "90120",
    "end": "98020"
  },
  {
    "text": "you know, like a linear function approximator or to use something like linear regression in the inner loop of fitted value iteration.",
    "start": "98020",
    "end": "104535"
  },
  {
    "text": "Um, and so you also see that today, and when you can take a robot or some factory automation task or whatever problem and model it in this framework,",
    "start": "104535",
    "end": "113945"
  },
  {
    "text": "it turns out to be incredibly efficient because you can fit a continuous- fit a value function as a function of the states without needing to approximate anything,",
    "start": "113945",
    "end": "123080"
  },
  {
    "text": "just compute the exact value function, uh, even though the state space is continuous. So, um, this is a framework that doesn't apply to all problems,",
    "start": "123080",
    "end": "130979"
  },
  {
    "text": "but when it does apply, it's incredibly convenient and incredibly efficient. So you see that in the second half of today.",
    "start": "130980",
    "end": "138065"
  },
  {
    "text": "Um, uh, yes. Uh, uh, one, one tactical uh, two, two tactical things, um, let's see,",
    "start": "138065",
    "end": "144705"
  },
  {
    "text": "from the questions that we're getting from students, some students are asking us, uh, how is grading in CS229?",
    "start": "144705",
    "end": "149870"
  },
  {
    "text": "Whatever I did well and this, you know, didn't do so well in that. Um, for people taking the class, pass-fail, a C minus or better is a passing grade.",
    "start": "149870",
    "end": "157715"
  },
  {
    "text": "This is quite- I think this is standard at Stanford. Uh, and, um, I think CS229 has historically been one of the heavy workload classes.",
    "start": "157715",
    "end": "165830"
  },
  {
    "text": "We know that people taking CS229- yeah, I see a few heads nodding. [LAUGHTER]. I said, sorry, people, uh, uh,",
    "start": "165830",
    "end": "173560"
  },
  {
    "text": "taking CS229 end up, you know, putting a lot of work in this class more, maybe frankly more than average for even Stanford classes.",
    "start": "173560",
    "end": "180500"
  },
  {
    "text": "And so we've usually been quite nice. With respect to, to grading partly, and we acknowledge that.",
    "start": "180500",
    "end": "186230"
  },
  {
    "text": "So I think, uh, uh, yeah I just thought that as well so don't, don't, don't, don't sweat too much. Do work hard for the final project,",
    "start": "186230",
    "end": "192420"
  },
  {
    "text": "but just don't, don't sweat too much. Um, uh and, uh, on Wednesday after class,",
    "start": "192420",
    "end": "198150"
  },
  {
    "text": "I had a funny question. After I talked about the fitted value iteration question, someone came up to me and said, \"Hey Andrew,",
    "start": "198150",
    "end": "203390"
  },
  {
    "text": "um, you know, this algorithm you, you just taught us, does it actually work? Like it- does it actually work on autonomous helicopter?\"",
    "start": "203390",
    "end": "210010"
  },
  {
    "text": "And the answer is yes. Uh, the algorithms I'm teaching, you know, if you, uh, uh,",
    "start": "210010",
    "end": "215490"
  },
  {
    "text": "the fitted evaluation as you learned last week, it will work on a finite autonomous helicopter at low speeds. So if you fly very high speeds, very dynamic maneuvers,",
    "start": "215490",
    "end": "223340"
  },
  {
    "text": "crazy bang, flipping upside down you, you need a bit more than that, but for flying a helicopter at low speeds the,",
    "start": "223340",
    "end": "229140"
  },
  {
    "text": "the exact algorithm that you learned, uh, last Wednesday as well as any of the algorithms you'll learn today including, uh, LQR.",
    "start": "229140",
    "end": "236810"
  },
  {
    "text": "You know, if you actually ever need to fly an autonomous helicopter for real, these algorithms will actually work. These simply will work quite well for flying a helicopter at low speeds,",
    "start": "236810",
    "end": "245465"
  },
  {
    "text": "maybe not at very, very high speeds and crazy dynamic maneuvers. But at those low speeds these algorithms,",
    "start": "245465",
    "end": "250595"
  },
  {
    "text": "pretty much as I'm presenting them, will work. So, um, okay.",
    "start": "250595",
    "end": "256299"
  },
  {
    "text": "So the first generalization to the MDP framework that I want to describe is,",
    "start": "256300",
    "end": "263960"
  },
  {
    "text": "um, state-action rewards. Um, and so, um,",
    "start": "263960",
    "end": "280229"
  },
  {
    "text": "so far we've had the rewards be a function mapping from the states to the set of real numbers,",
    "start": "280230",
    "end": "287175"
  },
  {
    "text": "and with state action rewards- um, this is a slight modification to the MDP formalism.",
    "start": "287175",
    "end": "295115"
  },
  {
    "text": "Where now, the reward function R is a function mapping from states and actions to the rewards.",
    "start": "295115",
    "end": "302930"
  },
  {
    "text": "Um, and so, you know, in an MDP you start from the state S0, you take an action a0,",
    "start": "302930",
    "end": "308945"
  },
  {
    "text": "then based on that, you get S1, take an action a1, take a state S2, uh,",
    "start": "308945",
    "end": "314465"
  },
  {
    "text": "get to a state S2, take an action a2 and so on. And with the state-action rewards,",
    "start": "314465",
    "end": "319485"
  },
  {
    "text": "the total payoff is written like this.",
    "start": "319485",
    "end": "327944"
  },
  {
    "text": "Um, and this is, uh, this, this, this allows you to model that different actions may have different costs.",
    "start": "327945",
    "end": "335270"
  },
  {
    "text": "Uh, for example, in the little robot wandering around the maze example, um, maybe it's more costly for the robot to move than to stay still.",
    "start": "335270",
    "end": "344300"
  },
  {
    "text": "And so, uh, if you have an action for the robot to stay still the reward can be, you know, 0,",
    "start": "344300",
    "end": "349970"
  },
  {
    "text": "for staying still and a slight negative reward for moving because you're burning, uh, because, because you're using electricity.",
    "start": "349970",
    "end": "355965"
  },
  {
    "text": "Um, right, uh, and so in that case,",
    "start": "355965",
    "end": "363840"
  },
  {
    "text": "uh, Bellman's equation becomes this, V star equals,",
    "start": "367120",
    "end": "372849"
  },
  {
    "text": "right. Um, where now,",
    "start": "385610",
    "end": "391419"
  },
  {
    "text": "you still break down the value of a state as the sum of the immediate reward plus the,",
    "start": "395920",
    "end": "403270"
  },
  {
    "text": "you know, expected future rewards. But now, the immediate reward you get depends on",
    "start": "403270",
    "end": "410480"
  },
  {
    "text": "the action that you take in the current state, right? So this is a- and so this is Bellman's equations.",
    "start": "410480",
    "end": "416970"
  },
  {
    "text": "And if, uh, and notice that previously, um, we had the max kind of over here,",
    "start": "416970",
    "end": "423285"
  },
  {
    "text": "but now you need to choose the action, a, that maximizes your immediate reward plus your discounted future reward,",
    "start": "423285",
    "end": "429840"
  },
  {
    "text": "which is why the max kind of moved right. If you look at the equation, uh, if you look at this equation,",
    "start": "429840",
    "end": "435040"
  },
  {
    "text": "I guess the max had to move outside because now the immediate reward you get, uh, depends on the action you choose at this step in time as well.",
    "start": "435040",
    "end": "442640"
  },
  {
    "text": "So these models that different actions, um, may have different costs. Yeah. [inaudible]",
    "start": "442640",
    "end": "453720"
  },
  {
    "text": "Uh, yes. Uh, yes. Yes, this max applies to the entire expression, right, yeah.",
    "start": "453720",
    "end": "460290"
  },
  {
    "text": "[inaudible]",
    "start": "460290",
    "end": "471990"
  },
  {
    "text": "Uh, let's see. So in this formulation, reward is determined based on the state and action,",
    "start": "471990",
    "end": "477360"
  },
  {
    "text": "yes that is correct. So, um, in this formulation, the reward depends on the, uh,",
    "start": "477360",
    "end": "483055"
  },
  {
    "text": "current state and the current action but on the next state you get to.",
    "start": "483055",
    "end": "487229"
  },
  {
    "text": "Right, um, oh, and by the way, there, there are multiple variations of formulations of MDPs, but this is, um,",
    "start": "490180",
    "end": "496240"
  },
  {
    "text": "one convenient one. I guess. The model that different costs and I think the- and, and actually- and you find in a helicopter a common, um,",
    "start": "496240",
    "end": "504724"
  },
  {
    "text": "formulation of this would be to say that yanking aggressive on the control stick, uh,",
    "start": "504725",
    "end": "510095"
  },
  {
    "text": "should be assigned a higher costs because yanking the control stick aggressively causes your helicopter to jerk around more,",
    "start": "510095",
    "end": "516919"
  },
  {
    "text": "and so maybe you want to penalize that by setting reward function that penalizes very aggressive maneuvers.",
    "start": "516920",
    "end": "524450"
  },
  {
    "text": "The, the- this gives you the, uh, as a, as a problem designer, um,",
    "start": "524450",
    "end": "529680"
  },
  {
    "text": "uh, sort of more flexibility. Um, and then, uh,",
    "start": "529680",
    "end": "535259"
  },
  {
    "text": "uh, and then finally- so let me just write this on top. In this formulation, um,",
    "start": "535260",
    "end": "540510"
  },
  {
    "text": "the optimal action- so, uh, right, so in order to compute the value function,",
    "start": "540510",
    "end": "546950"
  },
  {
    "text": "you can still use value iteration, right, which is still,",
    "start": "546950",
    "end": "554930"
  },
  {
    "text": "you know V of S gets updated as basically the right-hand side from Bellman's equations.",
    "start": "554930",
    "end": "561265"
  },
  {
    "text": "So, um, value iteration works just fine for the state-action reward formulation as well.",
    "start": "561265",
    "end": "566870"
  },
  {
    "text": "And, uh, if you apply value iteration until V converges to V star,",
    "start": "566870",
    "end": "572610"
  },
  {
    "text": "then the optimal action is, um, is, is just the argmax of that thing, right?",
    "start": "572610",
    "end": "582450"
  },
  {
    "text": "So, so, pi star is just the, uh, argmax of this thing. Where now, when you're given state,",
    "start": "590090",
    "end": "597030"
  },
  {
    "text": "you wanna choose the action that maximizes your immediate reward plus your expected future rewards.",
    "start": "597030",
    "end": "602120"
  },
  {
    "text": "Okay. Yeah, so I think just maybe another example, um,",
    "start": "602120",
    "end": "609930"
  },
  {
    "text": "if you want to use an MDP to, um, um, plan a shortest route for robot to,",
    "start": "609930",
    "end": "616575"
  },
  {
    "text": "say drive from here in Stanford, to drive up to San Francisco, right? Then, if it cost different amounts to drive",
    "start": "616575",
    "end": "623899"
  },
  {
    "text": "on different road segments because of traffic or because of the, uh, speed limit on different road, then this allows you to say that, well driving",
    "start": "623900",
    "end": "630890"
  },
  {
    "text": "this distance on this road costs this much in terms of fuel consumption or in terms of, uh, time and so on, right?",
    "start": "630890",
    "end": "637310"
  },
  {
    "text": "So the state action rewards. Or, or in factory maintenance,",
    "start": "637310",
    "end": "646090"
  },
  {
    "text": "uh, if you send in a team to maintain a machine that has a certain cost versus if you do nothing that has a different cost.",
    "start": "646090",
    "end": "652820"
  },
  {
    "text": "But then the machine breaks down that has yet another cost depending on your actions. Okay, so that's the first generalization.",
    "start": "652820",
    "end": "660990"
  },
  {
    "text": "Um, the second generalization is the finite horizon MDP.",
    "start": "660990",
    "end": "670709"
  },
  {
    "text": "Um, and in a finite horizon MDP, um,",
    "start": "670710",
    "end": "676630"
  },
  {
    "text": "we're going to replace the discount factor, Gamma, with a horizon time,",
    "start": "679800",
    "end": "687590"
  },
  {
    "text": "T. Uh, and- and we'll- we'll just forget about the discount vector.",
    "start": "688560",
    "end": "694705"
  },
  {
    "text": "And in a finite horizon, um, MDP, the MDP will run for,",
    "start": "694705",
    "end": "702765"
  },
  {
    "text": "um, a fi- a finite number of T steps. You start with state S_0, take an action a_0, get to S_1, take action a_1,",
    "start": "702765",
    "end": "710755"
  },
  {
    "text": "get to state S_T take an action a_T, at time step T and then the world ends,",
    "start": "710755",
    "end": "716530"
  },
  {
    "text": "and then we're done, right? So the payoff is this finite sum and-",
    "start": "716530",
    "end": "728080"
  },
  {
    "text": "and there's just a full stop at the end of that. Um, you can also apply discounting but usually when you have a finite horizon MDP,",
    "start": "728080",
    "end": "735655"
  },
  {
    "text": "maybe there's no need to apply discounting, and so, um, this model is a problem where there are,",
    "start": "735655",
    "end": "742375"
  },
  {
    "text": "you know, T time steps and then the world ends after that, right? Wo- world end sounds a bit dire.",
    "start": "742375",
    "end": "748375"
  },
  {
    "text": "But, uh, um, yeah, if you're flying an airplane or you're flying a helicopter, and you know you only have fuel,",
    "start": "748375",
    "end": "754524"
  },
  {
    "text": "you know, for 30 minutes, right? Uh, er, or an RC helicopter, let say you have 20, 30 minutes of fuel,",
    "start": "754525",
    "end": "759985"
  },
  {
    "text": "then you know that you're going to run this thing for 30 minutes and then you're done and so the goal is to accumulate as many rewards as possible up until you,",
    "start": "759985",
    "end": "769779"
  },
  {
    "text": "you know, run out of fuel and then you have to land, right? So that'll be an example of a finite horizon MDP.",
    "start": "769780",
    "end": "776155"
  },
  {
    "text": "Now, um, and- and- and the goal is to maximize this payoff,",
    "start": "776155",
    "end": "783400"
  },
  {
    "text": "um, or the expected payoff over these T time steps, okay?",
    "start": "783400",
    "end": "791320"
  },
  {
    "text": "Now, one interesting, uh, property of a finite horizon- of, of,",
    "start": "791320",
    "end": "798060"
  },
  {
    "text": "of a finite horizon MDP is that the action you take, um, may depend on what time it is on the clock, right?",
    "start": "798060",
    "end": "805090"
  },
  {
    "text": "So there's a clock marching from, you know, timestep 0 to timestep T whereupon, right, the world ends whe- whereupon that's all the rewards the MDP is trying to collect.",
    "start": "805090",
    "end": "814840"
  },
  {
    "text": "And one interesting effect of this is that, um, this pen isn't that great, is that,",
    "start": "814840",
    "end": "821905"
  },
  {
    "text": "um, the optimal action may depend on what,",
    "start": "821905",
    "end": "829885"
  },
  {
    "text": "uh, what the time is on the clock. So, uh, let's say your robot is running around this maze and there's",
    "start": "829885",
    "end": "836485"
  },
  {
    "text": "a small plus 1 reward here and a much larger plus 10 reward there,",
    "start": "836485",
    "end": "843370"
  },
  {
    "text": "and, um, let's say your robot is here, right,",
    "start": "843370",
    "end": "848785"
  },
  {
    "text": "then the optimal action for whether you go left or go right will depend on how much time you have left on the clock.",
    "start": "848785",
    "end": "855190"
  },
  {
    "text": "If you have only, you know, two or three times steps left on the clock, it's better to just rush and get the plus 1.",
    "start": "855190",
    "end": "861264"
  },
  {
    "text": "But we still have, you know, 10, 20 ticks left on the clock, then you should just go and get the plus 10 reward, right?",
    "start": "861265",
    "end": "868930"
  },
  {
    "text": "And so in this example, Pi star of S, um,",
    "start": "868930",
    "end": "874525"
  },
  {
    "text": "it's not well defined because well, the- the optimal action to take when your robot is here in this stage,",
    "start": "874525",
    "end": "880930"
  },
  {
    "text": "should you go left or should you go right? Um, it actually depends on what time it is on the clock,",
    "start": "880930",
    "end": "886705"
  },
  {
    "text": "and so Pi star in this example, um, should be written as the Pi star subscript T of S,",
    "start": "886705",
    "end": "894220"
  },
  {
    "text": "uh, because the optimal action, um, depends on what time T it is.",
    "start": "894220",
    "end": "899800"
  },
  {
    "text": "The technical term for this is that this is a non-stationary- non-stationary policy.",
    "start": "899800",
    "end": "910135"
  },
  {
    "text": "Um, a non-stationary means, uh, it depends on the time, a- as it changes over time, right.",
    "start": "910135",
    "end": "921385"
  },
  {
    "text": "Whereas in contrast, up until now, we've been seeing, you know, Pi star of S is the optimal policy before we- before this formula, right,",
    "start": "921385",
    "end": "930459"
  },
  {
    "text": "we just said Pi star of S, and that was a stationary policy and stationary means, uh,",
    "start": "930460",
    "end": "938050"
  },
  {
    "text": "there's no change over time, okay?",
    "start": "938050",
    "end": "946540"
  },
  {
    "text": "So one- one- one thing that, um, I didn't quite prove but that was implicit was that the optimal action you take in the original formulation,",
    "start": "946540",
    "end": "954370"
  },
  {
    "text": "uh, is the same action, right, no matter what time it is in the MDP.",
    "start": "954370",
    "end": "959745"
  },
  {
    "text": "So in the original formulation that you saw last week, the optimal policy was stationary,",
    "start": "959745",
    "end": "965430"
  },
  {
    "text": "meaning that the optimal policy is the same policy, you know, no matter what time it is, it doesn't change over time.",
    "start": "965430",
    "end": "970885"
  },
  {
    "text": "Whereas in the final horizon MDP setting, um, the optimal policy, you know,",
    "start": "970885",
    "end": "975959"
  },
  {
    "text": "the optimal action changes over time and so this is a non-stationary policy. So stationary versus non-stationary just means,",
    "start": "975960",
    "end": "981910"
  },
  {
    "text": "does it change over time or does it not change over time? Okay? So, um, right.",
    "start": "981910",
    "end": "991555"
  },
  {
    "text": "If you're using a non-stationary policy anyway, uh, you can also build an MDP with",
    "start": "991555",
    "end": "999130"
  },
  {
    "text": "non-stationary transition probabilities or non-stationary rewards- non-stationary.",
    "start": "999130",
    "end": "1005250"
  },
  {
    "text": "Um, actually so maybe here's an example.",
    "start": "1005250",
    "end": "1015210"
  },
  {
    "text": "Um, let's say you're driving from campus from Palo Alto to San Francisco and we know that rush,",
    "start": "1015210",
    "end": "1021780"
  },
  {
    "text": "hour, is that- what like 5:00 PM or 6:00 PM or something, right? And- and- and maybe- maybe the weather forecasts",
    "start": "1021780",
    "end": "1026939"
  },
  {
    "text": "even says it's going to rain at 6:00 PM or something, right? But so you know that the dynamics of how you drive your car from here to San Francisco will change over time,",
    "start": "1026940",
    "end": "1035430"
  },
  {
    "text": "uh, as in the time it takes, you know, to drive on a certain segment of the road, is a function of time and if you want to build an MDP to solve for,",
    "start": "1035430",
    "end": "1044115"
  },
  {
    "text": "um, the best way to drive from here to San Francisco say, then the state transitions, um,",
    "start": "1044115",
    "end": "1051330"
  },
  {
    "text": "so S_t plus 1 is drawn from state transition probabilities indexed by the state at",
    "start": "1051330",
    "end": "1057600"
  },
  {
    "text": "time T and the action at time T. And if these state transition probabilities change over time,",
    "start": "1057600",
    "end": "1064350"
  },
  {
    "text": "then, um, if you index it by the time t, this would be an example of a non-stationary,",
    "start": "1064350",
    "end": "1071340"
  },
  {
    "text": "um, of a non-stationary state transition probabilities, okay? Um, al- al- alternatively,",
    "start": "1071340",
    "end": "1077220"
  },
  {
    "text": "if you want non-stationary rewards, then you can have R_t T of S_a, uh,",
    "start": "1077220",
    "end": "1085350"
  },
  {
    "text": "is the reward you get for taking a certain action, um, uh, you know, o- o- for being at a certain state at a certain time, okay?",
    "start": "1085350",
    "end": "1092655"
  },
  {
    "text": "Um, so all of these are different variations of- of- of MDPs, um,",
    "start": "1092655",
    "end": "1098130"
  },
  {
    "text": "and so maybe just a few examples of when you want a, ah, finite horizon MDP or use,",
    "start": "1098130",
    "end": "1104669"
  },
  {
    "text": "um, non-stationary, uh, state transitions. Uh, so let's see.",
    "start": "1104670",
    "end": "1111015"
  },
  {
    "text": "Um, if you're flying an airplane, right? For- for- for some airplanes, uh,",
    "start": "1111015",
    "end": "1116520"
  },
  {
    "text": "something like for commercial- for very large commercial airplanes, uh, sometimes over a third of the weight of the airplane comes from the fuel, right?",
    "start": "1116520",
    "end": "1124169"
  },
  {
    "text": "So actually, if you take on a large commercial airplane, you know, when you take off, uh, from, uh, SFO and you fly",
    "start": "1124170",
    "end": "1130620"
  },
  {
    "text": "to- I don't know- I don't know where you guys fly to, I don't know. Fly to- fly to London or something. Right, direct flight from here to London.",
    "start": "1130620",
    "end": "1136710"
  },
  {
    "text": "Uh, by the time the plane lands, you- you get a much lighter airplane than when you took off, um, because, uh, maybe sometimes- maybe like a third of the weight disappears,",
    "start": "1136710",
    "end": "1145320"
  },
  {
    "text": "you know, because of burning fuel. And so the, the dynamics, the, um, how the airplane feels between takeoff and landing is",
    "start": "1145320",
    "end": "1153120"
  },
  {
    "text": "actually different because the weight is dramatically different, and so, um, uh, this would be one example of",
    "start": "1153120",
    "end": "1159330"
  },
  {
    "text": "where the state transition probability changes in a pretty predictable way, right? Um, or- uh, right.",
    "start": "1159330",
    "end": "1165720"
  },
  {
    "text": "I already mentioned, um, uh, weather forecasts, right.",
    "start": "1165720",
    "end": "1171659"
  },
  {
    "text": "Where, uh, weather forecasts or traffic forecasts if you're driving here or, uh, yeah, drivi- yeah, if you're driving over different types of terrain over time,",
    "start": "1171660",
    "end": "1179760"
  },
  {
    "text": "then you know that it's gonna rain tomorrow. Uh, we are gonna know it's gonna rain tonight and the ground will turn muddy,",
    "start": "1179760",
    "end": "1184830"
  },
  {
    "text": "you know, then all- all the traffic will turn bad. Um, uh, and then- and then, I don't know, industrial automation.",
    "start": "1184830",
    "end": "1195000"
  },
  {
    "text": "Um, some of my friends work on industrial automation and I think that maybe one example, um,",
    "start": "1195000",
    "end": "1202860"
  },
  {
    "text": "if you run a factory 24 hours a day, then the cost of labor, you know,",
    "start": "1202860",
    "end": "1208125"
  },
  {
    "text": "getting people to come into the factory to do some work at noon is actually easier,",
    "start": "1208125",
    "end": "1213465"
  },
  {
    "text": "right, and less costly than getting someone to show up in the factory to do some work at 3:00 AM, right? And so depending on, um, uh,",
    "start": "1213465",
    "end": "1220515"
  },
  {
    "text": "really labor availability over time, the cost of taking different actions, uh, and the cost of, um,",
    "start": "1220515",
    "end": "1227025"
  },
  {
    "text": "and the likelihood of transitioning into different state transition probabilities can vary over the 24-hour clock as well, right?",
    "start": "1227025",
    "end": "1232440"
  },
  {
    "text": "And so these are other examples of when, um, uh, uh, you can have a non-stationary policy and non-stationary state transitions, okay?",
    "start": "1232440",
    "end": "1244260"
  },
  {
    "text": "Now, um, let's talk about how you would actually solve for a finite horizon MDP,",
    "start": "1244260",
    "end": "1250935"
  },
  {
    "text": "and I think for the sake of simplicity, uh, for the most part, I'm going to not bother with non-stationary transitions and rewards.",
    "start": "1250935",
    "end": "1257850"
  },
  {
    "text": "Fo- for the most part, I'll focus on- for the most part, I just going to forget about, you know, the fact that this could be varying.",
    "start": "1257850",
    "end": "1264690"
  },
  {
    "text": "Um, I- I- I'll mention it briefly but I- I wanna focus on the finite horizon aspect.",
    "start": "1264690",
    "end": "1271559"
  },
  {
    "text": "So-",
    "start": "1271560",
    "end": "1273970"
  },
  {
    "text": "so let me define, um, the optimal value function.",
    "start": "1282260",
    "end": "1290770"
  },
  {
    "text": "Um, so this is the optimal value function for time t for starting at state S. So this is the,",
    "start": "1322160",
    "end": "1330240"
  },
  {
    "text": "um, ah, expected total payoff.",
    "start": "1330240",
    "end": "1333760"
  },
  {
    "text": "Starting in state S at time t,",
    "start": "1339440",
    "end": "1345870"
  },
  {
    "text": "and if you execute, you know, the best possible policy, okay?",
    "start": "1345870",
    "end": "1353175"
  },
  {
    "text": "So now the, um, optimal value function depends on what time it is, uh, because, if, if you look at, I don't know,",
    "start": "1353175",
    "end": "1359850"
  },
  {
    "text": "that example of the plus 1 reward on the left and the plus 10 reward on the right, depending on how much time you have left on the clock,",
    "start": "1359850",
    "end": "1367125"
  },
  {
    "text": "the amount of rewards you can accumulate can be quite different, right? If you have more time, you have more than, you know, you can- more time to get to the plus 10 reward,",
    "start": "1367125",
    "end": "1374009"
  },
  {
    "text": "in the, the plus 1 and plus 10 reward that I drew- uh, example that I drew just now.",
    "start": "1374010",
    "end": "1379365"
  },
  {
    "text": "And so, um, in this example, value iteration, um, becomes the following.",
    "start": "1379365",
    "end": "1390060"
  },
  {
    "text": "It actually becomes a dynamic programming algorithm, uh, which you'll see in a second, okay?",
    "start": "1390060",
    "end": "1400215"
  },
  {
    "text": "Which is that- let's see, um, [NOISE] all right, I'm gonna need three lines, let me do this here.",
    "start": "1400215",
    "end": "1407809"
  },
  {
    "text": "[NOISE]",
    "start": "1407810",
    "end": "1421400"
  },
  {
    "text": "All right, which is that V star of t of S is equal to max over A,",
    "start": "1421400",
    "end": "1431835"
  },
  {
    "text": "R of S, A plus-",
    "start": "1431835",
    "end": "1435970"
  },
  {
    "text": "okay? Um, and, uh, actually, this is a question for you.",
    "start": "1449240",
    "end": "1454620"
  },
  {
    "text": "So there's, there's one missing thing here, right? So we're saying that the optimal value,",
    "start": "1454620",
    "end": "1462615"
  },
  {
    "text": "you can get when you start off in state as at time t is the max over all actions of",
    "start": "1462615",
    "end": "1468270"
  },
  {
    "text": "the immediate reward plus sum of s prime state transition reward S prime times V star of S prime,",
    "start": "1468270",
    "end": "1474120"
  },
  {
    "text": "and then what should go in that box. T plus 1. Okay. Cool, awesome, great.",
    "start": "1474120",
    "end": "1479279"
  },
  {
    "text": "Right?",
    "start": "1479280",
    "end": "1485810"
  },
  {
    "text": "And then pi star of S is just,",
    "start": "1485810",
    "end": "1491425"
  },
  {
    "text": "you know, argmax of a, right? Of the- of the same thing, of this whole expression up on top.",
    "start": "1491425",
    "end": "1499065"
  },
  {
    "text": "Um, and so this formula defines Vt as a function of Vt plus 1.",
    "start": "1499065",
    "end": "1506445"
  },
  {
    "text": "So this is like, um [NOISE] this is like the iterative step, right? Given V10, you can compute V9,",
    "start": "1506445",
    "end": "1511500"
  },
  {
    "text": "given V9, you can compute V8, given V8, you can compute V7. Um, and so to start this off,",
    "start": "1511500",
    "end": "1517245"
  },
  {
    "text": "there's just one last thing we need to define, which is V capital T at the finite step,",
    "start": "1517245",
    "end": "1524235"
  },
  {
    "text": "uh, at the final step when the clock is about to run out. Um, all you get to do is choose the action a,",
    "start": "1524235",
    "end": "1532870"
  },
  {
    "text": "that maximizes the immediate reward, and then, and then, and then there's no sum after that, right?",
    "start": "1537380",
    "end": "1543360"
  },
  {
    "text": "So, um, if you start off at state S at the final time step t,",
    "start": "1543360",
    "end": "1548580"
  },
  {
    "text": "then you get to take an action and you get an immediate reward, and then there is no next state because the world just ends right after",
    "start": "1548580",
    "end": "1555540"
  },
  {
    "text": "that step which is why the optimal value at time t is just max over a of",
    "start": "1555540",
    "end": "1561900"
  },
  {
    "text": "the immediate reward because what happens after that doesn't matter, okay? So this is a dynamic programming algorithm in which this,",
    "start": "1561900",
    "end": "1571080"
  },
  {
    "text": "um, uh, uh, algorithm- this step on top defines, you know, allows you to compute V star of t,",
    "start": "1571080",
    "end": "1578610"
  },
  {
    "text": "[NOISE] and then the inductive step or the n plus 1 step, I guess, is, uh, if you then having computed V star of t for every state S, right?",
    "start": "1578610",
    "end": "1587265"
  },
  {
    "text": "So, you know, you compute this for every state S. Having done this, you can then compute V star T minus 1 using this,",
    "start": "1587265",
    "end": "1593924"
  },
  {
    "text": "um, inductive step, then V star t minus 2 and so on down to V star of 0.",
    "start": "1593925",
    "end": "1601410"
  },
  {
    "text": "So you compute this at every state, and then based on this, you can compute- oh sorry, 2 pi star of t right?",
    "start": "1601410",
    "end": "1607995"
  },
  {
    "text": "Compute the optimal policy, the non-stationary policy for every state as",
    "start": "1607995",
    "end": "1613289"
  },
  {
    "text": "a function of both the state and the time, okay?",
    "start": "1613290",
    "end": "1617920"
  },
  {
    "text": "Um, all right, cool. And, and I think, uh,",
    "start": "1618440",
    "end": "1624059"
  },
  {
    "text": "again, I don't want to dwell on this, but if you want to work with non-stationary- state transition probabilities or non-stationary rewards,",
    "start": "1624060",
    "end": "1631830"
  },
  {
    "text": "then this algorithm hardly changes in that you can just add you know,  if,",
    "start": "1631830",
    "end": "1640279"
  },
  {
    "text": "if your rewards and state transceiver is indexed by time as well, then this is just a very small modification to this algorithm.",
    "start": "1640280",
    "end": "1646565"
  },
  {
    "text": "And it turns out that once you're using a finite horizon MDP making the rewards and state transition rewards as non-stationary is,",
    "start": "1646565",
    "end": "1655065"
  },
  {
    "text": "is just a small tweak, right? So you could yeah, yeah. [inaudible] Uh, can you say that again.",
    "start": "1655065",
    "end": "1667710"
  },
  {
    "text": "In which form will it disappear? The attributes [inaudible]. This one? Oh a non-stationary.",
    "start": "1667710",
    "end": "1673740"
  },
  {
    "text": "So in the end you get a policy pi star subscript T of S. [inaudible].",
    "start": "1673740",
    "end": "1688440"
  },
  {
    "text": "I'm sorry. This one? This one. Oh,  I see, sure yes.",
    "start": "1688440",
    "end": "1694169"
  },
  {
    "text": "Pi star, this is a non-stationary policy. Yes so that's why I like yeah, yeah. Sorry, yeah, yeah. So this- the optimal policy will be a non-stationary policy.",
    "start": "1694170",
    "end": "1701789"
  },
  {
    "text": "Yes. uh, I, I, think, uh, yes, I think, uh, I was using pi star to, to not, not to denote that it has to be",
    "start": "1701790",
    "end": "1708600"
  },
  {
    "text": "a fixed function type, but yes, [inaudible] . Thank you. Yeah. Right. If you",
    "start": "1708600",
    "end": "1719490"
  },
  {
    "text": "take big T to infinity can it just become the usual value iteration? So the- let me think.",
    "start": "1719490",
    "end": "1726764"
  },
  {
    "text": "So there are two things with that. So the two frameworks are closely related right,",
    "start": "1726765",
    "end": "1733590"
  },
  {
    "text": "you can kind of see relationship between the valuation. One problem with taking this framework to big T to infinity",
    "start": "1733590",
    "end": "1740850"
  },
  {
    "text": "is that the values become unbounded, right? Yeah and that's actually one of the reasons why we",
    "start": "1740850",
    "end": "1748830"
  },
  {
    "text": "use a discount factor when you have an infinite horizon MDP, when the MDP just goes on forever.",
    "start": "1748830",
    "end": "1753914"
  },
  {
    "text": "One of the things that discount factor does is it makes sure that the value function doesn't grow without bound, right?",
    "start": "1753915",
    "end": "1762075"
  },
  {
    "text": "And in fact, you know, if, if the rewards are bounded by- right,",
    "start": "1762075",
    "end": "1768330"
  },
  {
    "text": "by some R max then when you use discounting then V, you know, is bounded by I guess R max over 1 minus Gamma, right?",
    "start": "1768330",
    "end": "1777795"
  },
  {
    "text": "By the sum of a geometric sequence. And so but, but in a finite h orizon repeat because you only add up t rewards it,",
    "start": "1777795",
    "end": "1783930"
  },
  {
    "text": "it can't get bigger than T times R max. Yeah. [inaudible].",
    "start": "1783930",
    "end": "1817920"
  },
  {
    "text": "Let me think. So I think that, boy. So I think, you know, what you find is that- let's see.",
    "start": "1817920",
    "end": "1830190"
  },
  {
    "text": "Um, actually let me just draw a 1D grid just to make life simpler, right?",
    "start": "1830190",
    "end": "1835860"
  },
  {
    "text": "So let's say there's a plus 1 reward there and a plus 10 reward there.",
    "start": "1835860",
    "end": "1841500"
  },
  {
    "text": "If you look at the optimal value function, um, depending on what time it is. If you have two times- and let's say that the dynamics are deterministic, right?",
    "start": "1841500",
    "end": "1851685"
  },
  {
    "text": "Uh, so there's no noise then if you have two times steps left, then I guess V star would be,",
    "start": "1851685",
    "end": "1858630"
  },
  {
    "text": "you know, 10, 10, 10, 1, 1, 1, 0, 0, 0, right?",
    "start": "1858630",
    "end": "1864895"
  },
  {
    "text": "And so, uh, depending on where you are, I guess if you're, uh, uh, uh yeah.",
    "start": "1864895",
    "end": "1871875"
  },
  {
    "text": "Actually, in fact I guess if you're here and there's nothing you can do right, you can't get either reward in time. Uh, but depending on whether you're here or here or here",
    "start": "1871875",
    "end": "1880020"
  },
  {
    "text": "the optimal action will change when we compute with this pi star. This makes sense? Yeah, that's fine.",
    "start": "1880020",
    "end": "1885705"
  },
  {
    "text": "Okay, well yeah. Maybe I do, do encourage you there. If this- if you actually build",
    "start": "1885705",
    "end": "1892875"
  },
  {
    "text": "a little grid simulator and use these equations to compute pi star and V star, you will see that the optimal policy when you have lots of time will be this.",
    "start": "1892875",
    "end": "1903015"
  },
  {
    "text": "Wherever you are go for the 10 rewards, but when the clock runs down then the optimal policy",
    "start": "1903015",
    "end": "1909050"
  },
  {
    "text": "will end up being a mixer, go left and go right.",
    "start": "1909050",
    "end": "1913500"
  },
  {
    "text": "All right, cool. Hope that was okay. Yeah [NOISE].",
    "start": "1915490",
    "end": "1924320"
  },
  {
    "text": "All right. So, um-",
    "start": "1924320",
    "end": "1931279"
  },
  {
    "text": "[NOISE]",
    "start": "1931280",
    "end": "1942830"
  },
  {
    "text": "So the last thing I want to share with you today is, uh, Linear Quadratic Regulation.",
    "start": "1942830",
    "end": "1950040"
  },
  {
    "text": "And as I was saying at the start, um, LQR applies only in a relatively small set of problems.",
    "start": "1955090",
    "end": "1963635"
  },
  {
    "text": "But whenever it applies, this is a great algorithm, and I just, you know, use it whenever, right, it seems reasonable to apply because it's, uh, uh,",
    "start": "1963635",
    "end": "1971045"
  },
  {
    "text": "is very efficient, and sometimes gives very good control policies. And, um, let's see.",
    "start": "1971045",
    "end": "1980920"
  },
  {
    "text": "And so LQR, um, applies in the following setting.",
    "start": "1980920",
    "end": "1986215"
  },
  {
    "text": "So let's see. In order to specify an MDP, we need to specify the states actions,",
    "start": "1986215",
    "end": "1992955"
  },
  {
    "text": "the state transition release. I'm going to use a finite horizon formulation so capital T and rewards.",
    "start": "1992955",
    "end": "2000025"
  },
  {
    "text": "This, this also works with the discounted MDP formalism but this would be a little bit easier,",
    "start": "2000025",
    "end": "2005500"
  },
  {
    "text": "a little bit more convenient to develop with the finite horizon setting, so let me just use that today.",
    "start": "2005500",
    "end": "2010705"
  },
  {
    "text": "And LQR applies under a specific set of circumstances,",
    "start": "2010705",
    "end": "2015820"
  },
  {
    "text": "which is that, this set of states is an RN.",
    "start": "2015820",
    "end": "2022509"
  },
  {
    "text": "Set of actions is in RD and so to specify the state transition probabilities,",
    "start": "2023160",
    "end": "2031630"
  },
  {
    "text": "we need to tell you what's the distribution of the next state given the previous state. So to specify the state transition probabilities,",
    "start": "2031630",
    "end": "2038769"
  },
  {
    "text": "I'm gonna say that the way S t plus 1 evolves is going to be as a linear function.",
    "start": "2038770",
    "end": "2046370"
  },
  {
    "text": "Some matrix A times S t plus some matrix B times A t plus some noise and",
    "start": "2050460",
    "end": "2057580"
  },
  {
    "text": "sorry there's a little bit of notation overloading again, sorry about that, A is both the set of actions as well as this matrix A,",
    "start": "2057580",
    "end": "2064240"
  },
  {
    "text": "right so there's two separate things but same symbol. I think, I think that the field of- a lot",
    "start": "2064240",
    "end": "2071139"
  },
  {
    "text": "the ideas from LQR came from traditional controls. It's from, uh, what- from,",
    "start": "2071140",
    "end": "2076600"
  },
  {
    "text": "um, I guess from EE and Mechanical Engineering. A lot of ideas from reinforcement learning came from computer science.",
    "start": "2076600",
    "end": "2082389"
  },
  {
    "text": "So these two literatures kind of evolved, and then when the literatures merge, you end up with clashing notations.",
    "start": "2082390",
    "end": "2088510"
  },
  {
    "text": "So CS people use A to denote the set of actions and the, the set of mechanical engineering and EE people use A to denote",
    "start": "2088510",
    "end": "2097360"
  },
  {
    "text": "this matrix and when we merge these two literatures the notation ends up being overloaded, right?",
    "start": "2097360",
    "end": "2104390"
  },
  {
    "text": "Okay. Oh and then, uh, it turns out one thing we'll see later is that",
    "start": "2105300",
    "end": "2111550"
  },
  {
    "text": "this noise term it will- we'll see later is actually not super important. But for now, let's just assume that the noise term is distributed Gaussian",
    "start": "2111550",
    "end": "2120414"
  },
  {
    "text": "with some mean 0 and some covariance sigma subscript w, okay?",
    "start": "2120414",
    "end": "2125725"
  },
  {
    "text": "But we'll see later that the noise will, will be less important than you think.",
    "start": "2125725",
    "end": "2131060"
  },
  {
    "text": "Right. And so this matrix A is going to be R n by n. And this matrix B is going to be R n",
    "start": "2133830",
    "end": "2142540"
  },
  {
    "text": "by d where n and d are respectively the dimensions of the state space and the dimension of the action space.",
    "start": "2142540",
    "end": "2150625"
  },
  {
    "text": "So for driving a car, for example, we saw last time that maybe the state space is six dimensional.",
    "start": "2150625",
    "end": "2156880"
  },
  {
    "text": "So if you're driving a car where the state-space is XY theta x dot y dot theta",
    "start": "2156880",
    "end": "2164109"
  },
  {
    "text": "dot and the action space is steering controls so maybe A is two-dimensional right,",
    "start": "2164110",
    "end": "2172420"
  },
  {
    "text": "acceleration and steering, right. Okay. So let's see.",
    "start": "2172420",
    "end": "2179050"
  },
  {
    "text": "So to specify an MDP we need to specify this five tuple, right? So we specify three of the elements.",
    "start": "2179050",
    "end": "2186550"
  },
  {
    "text": "The fourth one, t is just some number, right, so that's easy. And then the final assumption we need to apply LQR,",
    "start": "2186550",
    "end": "2194455"
  },
  {
    "text": "is that the reward function has the following form. That the reward is negative of",
    "start": "2194455",
    "end": "2202015"
  },
  {
    "text": "s transpose U s plus a transpose V a,",
    "start": "2202015",
    "end": "2210859"
  },
  {
    "text": "where U is n by n,",
    "start": "2211170",
    "end": "2216895"
  },
  {
    "text": "V is d by",
    "start": "2216895",
    "end": "2222460"
  },
  {
    "text": "d and U V are a positive semi-definite. Okay? So these are matrices being bigger than zero, so positive semi-definite.",
    "start": "2222460",
    "end": "2231890"
  },
  {
    "text": "Okay. So the fact that U and V are positive semi-definite",
    "start": "2236430",
    "end": "2244545"
  },
  {
    "text": "that implies that S T U s is greater than or equal to 0 and excuse me,",
    "start": "2244545",
    "end": "2251984"
  },
  {
    "text": "S transpose U s sorry, a transpose V a is also greater than or equal to 0.",
    "start": "2251985",
    "end": "2259230"
  },
  {
    "text": "Okay? So here's one example.",
    "start": "2259230",
    "end": "2265359"
  },
  {
    "text": "If you want to fly an autonomous helicopter and if you want,",
    "start": "2268190",
    "end": "2274290"
  },
  {
    "text": "you know, the state, the state vector to be close to 0.",
    "start": "2274290",
    "end": "2279640"
  },
  {
    "text": "So the state vector captures position, orientation, velocity, angular velocity. If you want a helicopter to just hover in place,",
    "start": "2279640",
    "end": "2285760"
  },
  {
    "text": "then maybe you want the state to be regulated or to, to, to be controlled near some zero position and so if",
    "start": "2285760",
    "end": "2295599"
  },
  {
    "text": "you choose U equals the identity matrix,",
    "start": "2295600",
    "end": "2301675"
  },
  {
    "text": "and V also equal to the identity matrix, this, this would be different dimensions, right?",
    "start": "2301675",
    "end": "2307990"
  },
  {
    "text": "This would be an n by n identity matrix, this would be a d by d ide- identity matrix. Then R of s a ends up equal to negative norm of s squared plus norm of a squared.",
    "start": "2307990",
    "end": "2321620"
  },
  {
    "text": "Okay. And so this allows you to,",
    "start": "2322200",
    "end": "2328280"
  },
  {
    "text": "this allows you to specify the reward function that penalizes, you know, we have a quadratic cost function,",
    "start": "2329280",
    "end": "2335935"
  },
  {
    "text": "the state deviating from 0 or, if you want, the actions deviating from 0, thus penalizing very large jerky motions on the control sticks or we set V equal to 0,",
    "start": "2335935",
    "end": "2346600"
  },
  {
    "text": "then this second term goes away. Okay? So these are some of the cost functions you can specify in terms of a quadratic cost function.",
    "start": "2346600",
    "end": "2356365"
  },
  {
    "text": "Okay. Now again, you know, just so that you can see the generalization, um,",
    "start": "2356365",
    "end": "2364640"
  },
  {
    "text": "if you want non-stationary dynamics, this model is quite simple to change where you can",
    "start": "2365700",
    "end": "2373780"
  },
  {
    "text": "say the matrices A and B depend on the time t. You can also say these,",
    "start": "2373780",
    "end": "2379345"
  },
  {
    "text": "you know, the matrices U and V depend on the time t. So if you have",
    "start": "2379345",
    "end": "2385300"
  },
  {
    "text": "non-stationary state transition probabilities or non-stationary cost function that's how you would modify this.",
    "start": "2385300",
    "end": "2392619"
  },
  {
    "text": "But I won't, I won't use this generalization for today, okay?",
    "start": "2392620",
    "end": "2398120"
  },
  {
    "text": "Now, so the two key assumptions",
    "start": "2402120",
    "end": "2422590"
  },
  {
    "text": "of the LQR framework are that first, the state transition dynamics,",
    "start": "2422590",
    "end": "2428500"
  },
  {
    "text": "the way your states change, is as a linear function of the previous state and action plus some noise,",
    "start": "2428500",
    "end": "2435295"
  },
  {
    "text": "and second, that the reward function is a, you know, quadratic cost function, right?",
    "start": "2435295",
    "end": "2440560"
  },
  {
    "text": "So these are the two key assumptions. And so first, you know, where,",
    "start": "2440560",
    "end": "2447010"
  },
  {
    "text": "where do you get the matrices A and B.",
    "start": "2447010",
    "end": "2455095"
  },
  {
    "text": "One thing that we talked about on Wednesday already was- so again this will actually work if you are trying to",
    "start": "2455095",
    "end": "2461559"
  },
  {
    "text": "apply LQR to fly an autonomous helicopter. This would work for helicopter flying at low speeds. Which is if you fly the helicopter around, [NOISE] you know,",
    "start": "2461560",
    "end": "2473710"
  },
  {
    "text": "start with some state S_0, take an action A_0, um, get to state S_1,",
    "start": "2473710",
    "end": "2479425"
  },
  {
    "text": "do this until you get to S t, right? And then this was the first trial,",
    "start": "2479425",
    "end": "2485334"
  },
  {
    "text": "and then you do this m times.",
    "start": "2485334",
    "end": "2488690"
  },
  {
    "text": "So we talked about this on Wednesday. So fly the helicopter through m trajectory so t time steps each and then we know that",
    "start": "2490440",
    "end": "2500500"
  },
  {
    "text": "we want, S t plus 1 is approximately A S t plus B A t and so you can minimize,",
    "start": "2500500",
    "end": "2509030"
  },
  {
    "text": "okay. So we want",
    "start": "2520530",
    "end": "2531460"
  },
  {
    "text": "the left and the right hand side to be close to each other. So you can, you know, minimize the squared difference between the left hand side and the right hand side in a,",
    "start": "2531460",
    "end": "2541855"
  },
  {
    "text": "in a procedure a lot like linear regression in order to fit matrices A and B. So if you actually fly a helicopter",
    "start": "2541855",
    "end": "2549030"
  },
  {
    "text": "around and collect this type of data and fit this model to it, this will work, you know,",
    "start": "2549030",
    "end": "2554940"
  },
  {
    "text": "this is actually a good pretty reasonable model for the dynamics of a helicopter at low speeds.",
    "start": "2554940",
    "end": "2560235"
  },
  {
    "text": "Okay? So this is one way to do it.",
    "start": "2560235",
    "end": "2563000"
  },
  {
    "text": "Um, so let's see. Method 1 is to learn it, right? A second method is to linearize a non-linear model.",
    "start": "2577270",
    "end": "2592160"
  },
  {
    "text": "[NOISE] So um,",
    "start": "2592160",
    "end": "2602000"
  },
  {
    "text": "let me just describe the ideas at a, at a high level, um, which is let's say that- and,",
    "start": "2602000",
    "end": "2609290"
  },
  {
    "text": "and I think for this it might be, um, useful to think of the inverted pendulum, right?",
    "start": "2609290",
    "end": "2614690"
  },
  {
    "text": "So that was a, you know, so imagine you have a, a, a inverted pendulum. That was that, right? You have a pole and you're trying",
    "start": "2614690",
    "end": "2620720"
  },
  {
    "text": "to- you have a long vertical pole and you're trying to keep the pole balanced. Um, so for an inverted pendulum like this,",
    "start": "2620720",
    "end": "2626765"
  },
  {
    "text": "if you download an open source physics simulator or if you have a friend, you know, from, from the wi- with a physics degree to help",
    "start": "2626765",
    "end": "2634280"
  },
  {
    "text": "you derive the Newtonian mechanics equations for this. Um, ah, [NOISE] let's see.",
    "start": "2634280",
    "end": "2640730"
  },
  {
    "text": "I, I actually tried to work through the, the physics equations in the inverted pendulum one. These are pretty complicated. But I don't know [LAUGHTER].",
    "start": "2640730",
    "end": "2648410"
  },
  {
    "text": "Um, but you might have a [NOISE] function that tells",
    "start": "2648410",
    "end": "2654980"
  },
  {
    "text": "you that if the state is a certain position orientation with the pole velocity,",
    "start": "2654980",
    "end": "2660350"
  },
  {
    "text": "angular velocity and you as-, um, ah, what is it? Um, apply a certain acceleration,",
    "start": "2660350",
    "end": "2666095"
  },
  {
    "text": "the actions accelerate left or accelerate right, then, you know, one-tenth of a second later, the state will get to this, right?",
    "start": "2666095",
    "end": "2672080"
  },
  {
    "text": "So, so, your physics friend can help you derive this equation. Um, and, an- and then maybe plus noise, right?",
    "start": "2672080",
    "end": "2680165"
  },
  {
    "text": "Le- let me just ignore the noise for now. Um, and so what you have is a function [NOISE],",
    "start": "2680165",
    "end": "2707140"
  },
  {
    "text": "right? Then maps from the state, um, x x. Theta Theta. That's a position of the cart and the angle of the pole and",
    "start": "2707140",
    "end": "2714730"
  },
  {
    "text": "the velocities and angular velocities that maps from the current state at time t, oh, excuse me, comma [NOISE] at, right?",
    "start": "2714730",
    "end": "2724310"
  },
  {
    "text": "Maps from the, I guess, current state vector to the next state vector, um, as a function of the current state and current action.",
    "start": "2724310",
    "end": "2731405"
  },
  {
    "text": "Okay? So, um, here's what linearization means and,",
    "start": "2731405",
    "end": "2738010"
  },
  {
    "text": "I'm going to use a 1D example. So because I can only draw on a flat board, right?",
    "start": "2738010",
    "end": "2743440"
  },
  {
    "text": "I can't, you know, because, because of the two-dimensional nature of the whiteboard, um, I'm just going to use a- let's,",
    "start": "2743440",
    "end": "2749555"
  },
  {
    "text": "let's suppose that you have St plus 1 equals f of St. And let me just forget- let me just ignore the action for now.",
    "start": "2749555",
    "end": "2756380"
  },
  {
    "text": "So I have one input and one output so I can draw this more easily on the whiteboard. Um, so we have some function like this.",
    "start": "2756380",
    "end": "2767809"
  },
  {
    "text": "So the x-axis is St, and y-axis is St plus 1,",
    "start": "2767810",
    "end": "2773480"
  },
  {
    "text": "and this is the function f, right? We'll plug in back the, um, action later.",
    "start": "2773480",
    "end": "2778730"
  },
  {
    "text": "What the linearization process does is, um, you pick a point and I'm going to call this point St over bar,",
    "start": "2778730",
    "end": "2788045"
  },
  {
    "text": "and we're going to, you know,",
    "start": "2788045",
    "end": "2795140"
  },
  {
    "text": "take the derivative of f and fill a straight line. So we're not drawing a straight line very well. Let's take the tangent straight line at this point St-bar,",
    "start": "2795140",
    "end": "2805535"
  },
  {
    "text": "and uh, what, ah, and, and we're going to use this straight line.",
    "start": "2805535",
    "end": "2811020"
  },
  {
    "text": "Let's draw line green. And we're going to use a green straight line to approximate the function f. Okay.",
    "start": "2813280",
    "end": "2825365"
  },
  {
    "text": "And so if you look at the equation for the green straight line, um, the green straight line is a function mapping from St to St plus 1.",
    "start": "2825365",
    "end": "2834155"
  },
  {
    "text": "And S-bar is the point around which you're linearizing the function. So S-bar, um, is a constant.",
    "start": "2834155",
    "end": "2841595"
  },
  {
    "text": "And this function is actually defined by St plus 1, um, is approximately [NOISE] the derivative of the function at S-bar times",
    "start": "2841595",
    "end": "2852985"
  },
  {
    "text": "St minus S-bar plus f of S-bar t. Okay.",
    "start": "2852985",
    "end": "2860515"
  },
  {
    "text": "Um, and so, ah, so S-bar t is a constant, right?",
    "start": "2860515",
    "end": "2869045"
  },
  {
    "text": "And this equation expresses St plus 1 as a linear function of St.",
    "start": "2869045",
    "end": "2876095"
  },
  {
    "text": "So think of S-bar t as a fixed number, right? It doesn't vary. So given some fixed S-bar, um,",
    "start": "2876095",
    "end": "2883340"
  },
  {
    "text": "this equation here- this is actually the equation of the green straight line, which is it says, you know, if,",
    "start": "2883340",
    "end": "2888744"
  },
  {
    "text": "if you use a green straight line to approximate the function f, just tells you what is St plus 1 as a function of St, and this is a, you know,",
    "start": "2888745",
    "end": "2896240"
  },
  {
    "text": "linear and affine relationship between St plus 1 and St, okay?",
    "start": "2896240",
    "end": "2901805"
  },
  {
    "text": "Um, so that's how you would linearize a function.",
    "start": "2901805",
    "end": "2907744"
  },
  {
    "text": "Um, and, and in the more general case where, um, [NOISE].",
    "start": "2907745",
    "end": "2920570"
  },
  {
    "text": "And in a more general case where, um, St plus 1 is actually a function of, you know,",
    "start": "2920570",
    "end": "2926660"
  },
  {
    "text": "putting this back in where both St and at, um,",
    "start": "2926660",
    "end": "2932405"
  },
  {
    "text": "the formula becomes, um, let me see.",
    "start": "2932405",
    "end": "2940200"
  },
  {
    "text": "Um, well, I'll write out the formula in a second.",
    "start": "2940540",
    "end": "2945800"
  },
  {
    "text": "Ah, but in this example, S-bar t is usually chosen to be a typical value",
    "start": "2945800",
    "end": "2952400"
  },
  {
    "text": "[NOISE] for S, right? And so in particular,",
    "start": "2952400",
    "end": "2960184"
  },
  {
    "text": "if you expect your helicopter to be doing a pretty good job hovering near the state 0,",
    "start": "2960185",
    "end": "2965570"
  },
  {
    "text": "then, uh, it'll be pretty reasonable to choose S-bar t to be the vector of all 0s .",
    "start": "2965570",
    "end": "2970745"
  },
  {
    "text": "Because if you look at how good is the green line as an approximation of the blue line, right, in a small region like this, you know,",
    "start": "2970745",
    "end": "2978020"
  },
  {
    "text": "the green line is actually pretty close to the blue line. And so if you choose S-bar to",
    "start": "2978020",
    "end": "2983420"
  },
  {
    "text": "be the place where you expect your helicopter to spend most of its time, then the green line is not too bad in approximation to the true function to the physics.",
    "start": "2983420",
    "end": "2992630"
  },
  {
    "text": "Oh, excuse me, or if you expect for the inverted pendulum, if you expect that your inverted pendulum will spend most of",
    "start": "2992630",
    "end": "2997790"
  },
  {
    "text": "its time with the pole upright and the velocity not too large, then you choose S-bar to be maybe the 0 vector.",
    "start": "2997790",
    "end": "3003984"
  },
  {
    "text": "Um, and so long as your pendulum- your inverted pendulum is spending most of its time kind of,",
    "start": "3003985",
    "end": "3009444"
  },
  {
    "text": "you know, close to the 0 state, then the green line is not to get an approximation for the blue line, right?",
    "start": "3009445",
    "end": "3015250"
  },
  {
    "text": "So this is an approximation, but you try to choose, um ah, be- because- I mean in,",
    "start": "3015250",
    "end": "3020605"
  },
  {
    "text": "in this little region it's actually not that bad that an approximation, ah, it's only when you go really far away, right,",
    "start": "3020605",
    "end": "3026320"
  },
  {
    "text": "there there's a huge gap between the linear approximation, um, and the true function f, okay?",
    "start": "3026320",
    "end": "3033505"
  },
  {
    "text": "Um, all right. And so, um,",
    "start": "3033505",
    "end": "3039610"
  },
  {
    "text": "in the more general case where f is a function of both the state and the action,",
    "start": "3039610",
    "end": "3044635"
  },
  {
    "text": "then what you have to do is, ah, the input now becomes St, At because f maps from St,",
    "start": "3044635",
    "end": "3052224"
  },
  {
    "text": "At to St plus 1. And then instead of choosing S-bar t,",
    "start": "3052225",
    "end": "3057250"
  },
  {
    "text": "you're choosing S-bar t, a-bar t, which is a typical state and action,",
    "start": "3057250",
    "end": "3062395"
  },
  {
    "text": "ah, around which you linearize the function. Or let me just write down the formula for that.",
    "start": "3062395",
    "end": "3067900"
  },
  {
    "text": "[NOISE]",
    "start": "3067900",
    "end": "3089200"
  },
  {
    "text": "Um, in which you would say, if you linearize f around a point given by S-bar t,",
    "start": "3089200",
    "end": "3098710"
  },
  {
    "text": "a-bar t kind of the typical values, then the formula you have is St plus 1 is given by f of S-bar t,",
    "start": "3098710",
    "end": "3108955"
  },
  {
    "text": "a-bar t plus the gradient with respect to S, [NOISE]",
    "start": "3108955",
    "end": "3119189"
  },
  {
    "text": "transpose S_t minus S_t bar. [NOISE]",
    "start": "3119920",
    "end": "3135819"
  },
  {
    "text": "Okay. So this is the generalization of the 1D function we measured just now,",
    "start": "3135820",
    "end": "3141235"
  },
  {
    "text": "or we wrote down just now, which says that, you know, the next state is approximately this point around you, which you linearize,",
    "start": "3141235",
    "end": "3147909"
  },
  {
    "text": "plus the gradient with respect to S times how much the state differs from the linearization point plus the gradient respect to",
    "start": "3147909",
    "end": "3154900"
  },
  {
    "text": "the actions times how much the actions vary from a-bar, okay?",
    "start": "3154900",
    "end": "3160434"
  },
  {
    "text": "And this kind of generalizes that equation you wrote. [NOISE].",
    "start": "3160435",
    "end": "3173320"
  },
  {
    "text": "So, um, so this equation expresses St plus 1 as a,",
    "start": "3173320",
    "end": "3181090"
  },
  {
    "text": "ah, linear function or technically an affine function of the previous state and the previous action, right?",
    "start": "3181090",
    "end": "3188559"
  },
  {
    "text": "With some matrices in between. And from this, you know, after some algebraic munging,",
    "start": "3188560",
    "end": "3194125"
  },
  {
    "text": "you can re-express this as St plus 1 equals ASt plus Bat.",
    "start": "3194125",
    "end": "3200980"
  },
  {
    "text": "Um, and, and just- there- there's just one other little detail which is, um, you might need to redefine St to add an intercept term.",
    "start": "3200980",
    "end": "3210020"
  },
  {
    "text": "Right. And because this is, is a affine function with an intercept term rather than the linear function.",
    "start": "3211800",
    "end": "3217255"
  },
  {
    "text": "But so from this formula, you know, with a little bit of algebraic munging, you should be able to figure out whether the matrix is a and b, ah, ah,",
    "start": "3217255",
    "end": "3225390"
  },
  {
    "text": "but you might need to add an intercept term to the S, but this is just an affine function to kind of rewrite in terms of matrices a and b, okay?",
    "start": "3225390",
    "end": "3231810"
  },
  {
    "text": "Um, all right.",
    "start": "3231810",
    "end": "3238560"
  },
  {
    "text": "So right, I hope that makes sense, right? That this thing, this linearization thing",
    "start": "3238560",
    "end": "3244705"
  },
  {
    "text": "expresses St plus 1 as a linear function of St and at, right? This is just a linear- is just- the wa- way St plus 1 varies,",
    "start": "3244705",
    "end": "3251920"
  },
  {
    "text": "you know, is just some matrix times St, some matrix times at, um, and that's why with some munging,",
    "start": "3251920",
    "end": "3257230"
  },
  {
    "text": "you can get into this formula for some matrix a and b, okay? Um, but because there are some constants floating around as well, like this,",
    "start": "3257230",
    "end": "3264865"
  },
  {
    "text": "you might need an extra intercept term to multiply to a to give you that extra constant. [NOISE]",
    "start": "3264865",
    "end": "3280060"
  },
  {
    "text": "That's where we are. Um, we now have that for these MDPs either by learning a linear model with the matrices A and B,",
    "start": "3280060",
    "end": "3289915"
  },
  {
    "text": "um, or by taking a nonlinear model and linearizing it. Like you just saw, you can model- hopefully model an MDP as a,",
    "start": "3289915",
    "end": "3298855"
  },
  {
    "text": "um, [NOISE] linear dynamical system, meaning this, you know, S_T plus 1 is this linear function or the previous state and action,",
    "start": "3298855",
    "end": "3306010"
  },
  {
    "text": "as well as hopefully with a quadratic reward function or the- really, the- er, right, in the form that we saw just now.",
    "start": "3306010",
    "end": "3314845"
  },
  {
    "text": "Um, so let me just summarize the problem we want to solve.",
    "start": "3314845",
    "end": "3322300"
  },
  {
    "text": "a_ST, oops sorry, sorry. S_t plus 1 equals A S_T plus B_at plus w_t,",
    "start": "3322300",
    "end": "3332065"
  },
  {
    "text": "so this is a noise term, um, and then R of S, a",
    "start": "3332065",
    "end": "3341800"
  },
  {
    "text": "equals negative S transpose U_S plus a transpose V_a.",
    "start": "3341800",
    "end": "3347860"
  },
  {
    "text": "All right. And this is a finite horizon MDP. And so the total payoff is R of S_0,",
    "start": "3347860",
    "end": "3356230"
  },
  {
    "text": "a_0 plus dot dot dot plus R S_T.",
    "start": "3356230",
    "end": "3365619"
  },
  {
    "text": "Okay. [NOISE] So let's",
    "start": "3365620",
    "end": "3374710"
  },
  {
    "text": "figure out a dynamic programming algorithm for this. [NOISE] The remarkable problem,",
    "start": "3374710",
    "end": "3382405"
  },
  {
    "text": "the- the remarkable property of LQR, um, and what makes this so useful is that if you are",
    "start": "3382405",
    "end": "3390400"
  },
  {
    "text": "willing to model your MDP using those sets of equations, then the value function is a quadratic function, right?",
    "start": "3390400",
    "end": "3398230"
  },
  {
    "text": "Um, and so let me show you what I mean. And so if your- if your model, if your MDP can be modeled as this type of linear dynamical system,",
    "start": "3398230",
    "end": "3405025"
  },
  {
    "text": "with a quadratic cost function, uh, then it turns out that V star is a quadratic function and so you can compute V star exactly, right?",
    "start": "3405025",
    "end": "3413859"
  },
  {
    "text": "Um, so let me show you what I mean. We're going to develop a dynamic programming algorithm to compute the optimal value function V star.",
    "start": "3413860",
    "end": "3427165"
  },
  {
    "text": "Similar to, uh, what we did a bit earlier today with the finite horizon MDP with a finite set of states,",
    "start": "3427165",
    "end": "3434470"
  },
  {
    "text": "let's start with the final time step and we will work backwards. So, um, V star t of S_T is equal",
    "start": "3434470",
    "end": "3444460"
  },
  {
    "text": "to max over a_T of R of S_T , a_T.",
    "start": "3444460",
    "end": "3450700"
  },
  {
    "text": "Um, this is max over a_T over negative, right?",
    "start": "3450700",
    "end": "3466765"
  },
  {
    "text": "Um, but this is always greater than or equal to 0 because V is positive semi-definite.",
    "start": "3466765",
    "end": "3474295"
  },
  {
    "text": "And so the optimal action is actually to just choose the action 0, um,",
    "start": "3474295",
    "end": "3479890"
  },
  {
    "text": "and so the max over this is equal to the negative S_T transpose U S_T because,",
    "start": "3479890",
    "end": "3486519"
  },
  {
    "text": "because V is a positive semi-definite matrix. This thing is always greater than 0. And then- and so this tells us also that Pi star of the final action is the argmax.",
    "start": "3486520",
    "end": "3497830"
  },
  {
    "text": "So the optimal action is to choose, you know, the vector of 0 actions at the last time step, okay?",
    "start": "3497830",
    "end": "3504325"
  },
  {
    "text": "So this is the base case for the dynamic programming step of,",
    "start": "3504325",
    "end": "3509454"
  },
  {
    "text": "um, value iteration where, uh, the optimal value at the last time step",
    "start": "3509455",
    "end": "3515740"
  },
  {
    "text": "is just choose the action that maximizes the immediate reward, uh, which means maximize this, right?",
    "start": "3515740",
    "end": "3521920"
  },
  {
    "text": "And this is maximized by choosing the action 0 at the last time step, okay?",
    "start": "3521920",
    "end": "3527690"
  },
  {
    "text": "Now, these blue pens keep, let's see if this is any better, ooh, okay.",
    "start": "3528000",
    "end": "3548390"
  },
  {
    "text": "Now, the key step to the dynamic programming implementation is the following,",
    "start": "3549120",
    "end": "3554995"
  },
  {
    "text": "which is suppose that V star t",
    "start": "3554995",
    "end": "3560740"
  },
  {
    "text": "plus 1 S_t plus 1 is equal to a quadratic function.",
    "start": "3560740",
    "end": "3567350"
  },
  {
    "text": "Right. Um, okay.",
    "start": "3576300",
    "end": "3589525"
  },
  {
    "text": "So in the- uh-huh. [inaudible].",
    "start": "3589525",
    "end": "3604210"
  },
  {
    "text": "Yes. It's true that this term is also greater than 0 without the minus sign. Without the minus sign, that term is positive and so,",
    "start": "3604210",
    "end": "3611890"
  },
  {
    "text": "but you only get to maximize with respect to 80 right? So, so the best you could do for this term is set it to 0.",
    "start": "3611890",
    "end": "3619375"
  },
  {
    "text": "Thank you. All right, cool, tank you. All right.",
    "start": "3619375",
    "end": "3626920"
  },
  {
    "text": "Now, for the inductive case, um, we want to go from V_t plus 1- V_star t plus 1 to",
    "start": "3626920",
    "end": "3634600"
  },
  {
    "text": "computing V star t, right? And the key observation that makes LQR work is,",
    "start": "3634600",
    "end": "3642175"
  },
  {
    "text": "um, let's suppose V star t plus 1, the optimal value function at the next time step,",
    "start": "3642175",
    "end": "3648190"
  },
  {
    "text": "let's suppose is a quadratic function. So in particular, let's suppose V star t plus 1 is this,",
    "start": "3648190",
    "end": "3654039"
  },
  {
    "text": "you know, quadratic function, uh, parameterized by some matrix capital Phi t plus 1 which is an n",
    "start": "3654040",
    "end": "3662890"
  },
  {
    "text": "by n matrix and some constant offset Psi which is a real number.",
    "start": "3662890",
    "end": "3668829"
  },
  {
    "text": "Um, what we will be able to show is that if you do one step of dynamic programming, uh,",
    "start": "3668830",
    "end": "3675850"
  },
  {
    "text": "if this is true for V star plus 1 that V_t after one step as you go from V star plus",
    "start": "3675850",
    "end": "3681550"
  },
  {
    "text": "1 to V_t that the optimal value function V_t is also going to be a quadratic function with a very similar form,",
    "start": "3681550",
    "end": "3688600"
  },
  {
    "text": "right, with I guess t plus 1 replaced by t, right? Um, and so in the dynamic programming step, um,",
    "start": "3688600",
    "end": "3700150"
  },
  {
    "text": "we are going to update V_t S_t",
    "start": "3700150",
    "end": "3704029"
  },
  {
    "text": "equals max of A_t R of S_t, a_T plus.",
    "start": "3706590",
    "end": "3715000"
  },
  {
    "text": "And then, you know, I- I think you remember, right, previously, um, I'm going to write this in green,",
    "start": "3715000",
    "end": "3722725"
  },
  {
    "text": "previously we had sum of S prime or actually St plus 1 I guess to be S_t a_t S_t plus 1,",
    "start": "3722725",
    "end": "3732655"
  },
  {
    "text": "V star t plus 1 St plus 1. So that's what we had previously where we",
    "start": "3732655",
    "end": "3739060"
  },
  {
    "text": "had a discrete state space and we were summing over it. But now that we have a continuous state space, this formula becomes expected value with respect to S_t plus 1 drawn from",
    "start": "3739060",
    "end": "3749485"
  },
  {
    "text": "the state transition probabilities [NOISE] ,",
    "start": "3749485",
    "end": "3756400"
  },
  {
    "text": "uh, V star t plus 1 S_t plus 1 [NOISE].",
    "start": "3756400",
    "end": "3762099"
  },
  {
    "text": "Uh, yeah. Okay.",
    "start": "3762100",
    "end": "3767240"
  },
  {
    "text": "[NOISE] So the optimal value when the clock is at time t is choose the",
    "start": "3775280",
    "end": "3780840"
  },
  {
    "text": "action a that maximizes immediate reward plus the expected value of, you know, your future rewards when the clock has now ticked from time t to time t plus 1,",
    "start": "3780840",
    "end": "3791385"
  },
  {
    "text": "you're going to state S_t plus 1 at time t plus 1, right?",
    "start": "3791385",
    "end": "3798070"
  },
  {
    "text": "So, um, let's see.",
    "start": "3798560",
    "end": "3805360"
  },
  {
    "text": "So, ah, this is a pretty beefy piece of algebra to do.",
    "start": "3806870",
    "end": "3814950"
  },
  {
    "text": "Um, I think I feel like showing this full result is, I don't know,",
    "start": "3814950",
    "end": "3820290"
  },
  {
    "text": "is like at the level of complexity of a, you know, typical CS 229 homework problem which is quite hard [LAUGHTER].",
    "start": "3820290",
    "end": "3828780"
  },
  {
    "text": "But let me just show the outline of how you do this derivation and why, you know, why this inductive step works.",
    "start": "3828780",
    "end": "3834060"
  },
  {
    "text": "Well, but I think you- but, but if you want you could work through the algebra details yourself at home.",
    "start": "3834060",
    "end": "3839309"
  },
  {
    "text": "Um, which is that- let me do this on the next board.",
    "start": "3839310",
    "end": "3844270"
  },
  {
    "text": "So V star_t of S_t is equal to max over a_t",
    "start": "3863870",
    "end": "3870765"
  },
  {
    "text": "of the immediate reward, right?",
    "start": "3870765",
    "end": "3877500"
  },
  {
    "text": "So that's the immediate reward. And then plus the expected value with respect to S_t plus 1,",
    "start": "3877500",
    "end": "3885450"
  },
  {
    "text": "is drawn from a Gaussian with mean AS_t plus Ba_t and covariance Sigma w. Ah,",
    "start": "3885450",
    "end": "3897075"
  },
  {
    "text": "so remember S_t plus 1 is equal to AS_t plus Ba_t plus W_t,",
    "start": "3897075",
    "end": "3904365"
  },
  {
    "text": "where W_t is Gaussian with mean 0 and covariance Sigma w. Right?",
    "start": "3904365",
    "end": "3910860"
  },
  {
    "text": "So ah, if you choose an action a_t, then this is the distribution of the next state at time t plus 1.",
    "start": "3910860",
    "end": "3918030"
  },
  {
    "text": "Um, and then expected value of [NOISE]",
    "start": "3918030",
    "end": "3931859"
  },
  {
    "text": "this quadratic term. Um, because this quadratic term here, kind of the inductive case was what we showed was",
    "start": "3931860",
    "end": "3939420"
  },
  {
    "text": "V star for the- for the next time step, right?",
    "start": "3939420",
    "end": "3949609"
  },
  {
    "text": "So it turns out that, um, let's see.",
    "start": "3949610",
    "end": "3956775"
  },
  {
    "text": "So this is a quadratic function, and this expectation is the expected value of",
    "start": "3956775",
    "end": "3963330"
  },
  {
    "text": "a quadratic function with respect to s drawn from a Gaussian, right? With a certain mean and certain variance.",
    "start": "3963330",
    "end": "3970440"
  },
  {
    "text": "So it turns out that, um, the expected value of this thing, right?",
    "start": "3970440",
    "end": "3976740"
  },
  {
    "text": "Well, this whole thing that I just circled. This thing simplifies into, er, a big quadratic function",
    "start": "3976740",
    "end": "3984240"
  },
  {
    "text": "[NOISE]",
    "start": "3984240",
    "end": "3993540"
  },
  {
    "text": "of the action a_t, right?",
    "start": "3993540",
    "end": "3998730"
  },
  {
    "text": "Um, and then, ah,",
    "start": "3998730",
    "end": "4008945"
  },
  {
    "text": "and so in order to, you know, derive the argmax or to derive V star of S,",
    "start": "4008945",
    "end": "4014405"
  },
  {
    "text": "you would derive this big quadratic function. Um, take derivatives with respect to a_t,",
    "start": "4014405",
    "end": "4022760"
  },
  {
    "text": "ah, set to 0, right?",
    "start": "4022760",
    "end": "4028295"
  },
  {
    "text": "And solve for a_t.",
    "start": "4028295",
    "end": "4033660"
  },
  {
    "text": "Okay? And if you go through all that algebra, then you actually- then you end up with the formula for a_t as follows.",
    "start": "4033790",
    "end": "4043440"
  },
  {
    "text": "Um,",
    "start": "4043690",
    "end": "4045900"
  },
  {
    "text": "okay? And um, I'm gonna use, I'm gonna do- I'm gonna take that big matrix and denote that L_t.",
    "start": "4059590",
    "end": "4069305"
  },
  {
    "text": "Okay? Um, and so this shows also that pi star",
    "start": "4069305",
    "end": "4075815"
  },
  {
    "text": "at time t of S_t is equal to L_t times S_t.",
    "start": "4075815",
    "end": "4083395"
  },
  {
    "text": "Okay? So, um,",
    "start": "4083395",
    "end": "4094280"
  },
  {
    "text": "[NOISE] one to- to take away from this is that,",
    "start": "4094280",
    "end": "4100850"
  },
  {
    "text": "under the assumptions we have, right? Linear dynamical system with quadratic cost function. Ah, the optimal action is",
    "start": "4100850",
    "end": "4110960"
  },
  {
    "text": "a linear function",
    "start": "4110960",
    "end": "4113068"
  },
  {
    "text": "of the state S_t.",
    "start": "4117280",
    "end": "4123650"
  },
  {
    "text": "Right? And, ah, this is not a claim that is made through functional approximation.",
    "start": "4123650",
    "end": "4129920"
  },
  {
    "text": "Ah, what I'm- I'm not saying that you could fit a straight line t optimal action and if you fit a straight line,",
    "start": "4129920",
    "end": "4136295"
  },
  {
    "text": "that you get this linear function. Right? That's not what we're saying. We're saying that, um, of all the functions,",
    "start": "4136295",
    "end": "4142489"
  },
  {
    "text": "anyone could possibly come up within the world, linear or non-linear, the best function, the best action is linear.",
    "start": "4142490",
    "end": "4148444"
  },
  {
    "text": "So there is no approximation here. Right? So it's just that, you know, it's just a fact that if you have linear dynamical system,",
    "start": "4148445",
    "end": "4154790"
  },
  {
    "text": "the best possible action at any state is going to be a linear function um, ah, of of that state.",
    "start": "4154790",
    "end": "4161525"
  },
  {
    "text": "Right? So there's no there's- we haven't approximated anything. Right? Um,",
    "start": "4161525",
    "end": "4170580"
  },
  {
    "text": "[NOISE]",
    "start": "4171174",
    "end": "4179869"
  },
  {
    "text": "let me see. Yeah, all right. Let me, let me, let me write this here.",
    "start": "4179870",
    "end": "4185420"
  },
  {
    "text": "Um, and then the other step is that ah, if you take the optimal action and plug it into the definition of V star,",
    "start": "4185420",
    "end": "4194194"
  },
  {
    "text": "then by simplifying which again is quite a lot of algebra, but without the simplifying,",
    "start": "4194195",
    "end": "4200014"
  },
  {
    "text": "you end up with this equation.",
    "start": "4200015",
    "end": "4202710"
  },
  {
    "text": "Um, where again I'll- I'll just write out the formula as is, you know. [NOISE]",
    "start": "4208090",
    "end": "4252330"
  },
  {
    "text": "Okay.",
    "start": "4252330",
    "end": "4258340"
  },
  {
    "text": "Okay.",
    "start": "4258340",
    "end": "4264355"
  },
  {
    "text": "All right. [BACKGROUND] Um,",
    "start": "4264355",
    "end": "4280800"
  },
  {
    "text": "so to summarize the whole algorithm, right, let's, let's put everything together. And, and so- sorry.",
    "start": "4280800",
    "end": "4287115"
  },
  {
    "text": "And so what these two equations do is they allow you to go from V star T plus 1 which is defined in terms of Phi T plus 1 and Psi T plus 1.",
    "start": "4287115",
    "end": "4295425"
  },
  {
    "text": "And it allows you to recursively go back to figure out what is V star T using these two equations.",
    "start": "4295425",
    "end": "4301905"
  },
  {
    "text": "Right. So Phi T depends on Phi T plus 1, Psi T depends on Phi T plus 1 and Psi T plus 1.",
    "start": "4301905",
    "end": "4307829"
  },
  {
    "text": "Uh, and this Sigma w, this is the covariance of w_t.",
    "start": "4307830",
    "end": "4315300"
  },
  {
    "text": "Right. This, this Sigma subscript w. This is not a summation over w, this is a Sigma matrix subscripted by w. That was a covariance matrix for",
    "start": "4315300",
    "end": "4322650"
  },
  {
    "text": "the noise terms you are adding on every step in our linear dynamical system.",
    "start": "4322650",
    "end": "4328080"
  },
  {
    "text": "Okay. And, and this are trace operators, some of the diagonals. Okay? So just to summarize.",
    "start": "4328080",
    "end": "4335100"
  },
  {
    "text": "[NOISE] Um, here's the algorithm.",
    "start": "4335100",
    "end": "4340830"
  },
  {
    "text": "You initialize Phi T to be",
    "start": "4340830",
    "end": "4347775"
  },
  {
    "text": "equal to negative u and Psi T equals 0.",
    "start": "4347775",
    "end": "4355050"
  },
  {
    "text": "Um, and so, you know, that's just taking this equation and mapping it there.",
    "start": "4355050",
    "end": "4362565"
  },
  {
    "text": "Right? So the final time step, ah, that those two, oh, sorry,",
    "start": "4362565",
    "end": "4368640"
  },
  {
    "text": "it should be capital T. Right. So that, um, those two equations for Phi and Psi,",
    "start": "4368640",
    "end": "4377430"
  },
  {
    "text": "it defines V star of capital T. And then you would,",
    "start": "4377430",
    "end": "4383565"
  },
  {
    "text": "um, you know, recursively calculate, um,",
    "start": "4383565",
    "end": "4391230"
  },
  {
    "text": "Phi T and Psi T using Phi T plus 1 and Psi T plus 1.",
    "start": "4391230",
    "end": "4400890"
  },
  {
    "text": "So you go from, you know, for T equals T minus 1, T minus 2 and so on and go back when count down from,",
    "start": "4400890",
    "end": "4409680"
  },
  {
    "text": "right, T minus 1 to T minus 2 and so on down to 0. Um, calculate L_t as above.",
    "start": "4409680",
    "end": "4423750"
  },
  {
    "text": "Right. and L_t was a formula I guess we had over there, um,",
    "start": "4423750",
    "end": "4428760"
  },
  {
    "text": "saying how the optimal action is a function of the current state depending on A, and B, and Phi.",
    "start": "4428760",
    "end": "4434700"
  },
  {
    "text": "Ah, and then finally, Pi star of S_t equals L_t of S_t.",
    "start": "4434700",
    "end": "4448320"
  },
  {
    "text": "Okay? Um, and this algorithm, the remarkable thing, what one really cool thing about",
    "start": "4448320",
    "end": "4455310"
  },
  {
    "text": "LQR is that there is no approximation anywhere. Right? You, you might need to, um,",
    "start": "4455310",
    "end": "4461639"
  },
  {
    "text": "make some approximation steps in order to approximate a helicopter as a linear dynamical system by, you know,",
    "start": "4461640",
    "end": "4468705"
  },
  {
    "text": "fitting matrices A and B to data or by taking a nonlinear thing and linearizing it,",
    "start": "4468705",
    "end": "4474120"
  },
  {
    "text": "and you might need to just restrict- constrict, you know, restrict your choice of possible reward functions.",
    "start": "4474120",
    "end": "4479369"
  },
  {
    "text": "Reward function is quadratic. But once you've made those assumptions, none of this is approximate,",
    "start": "4479370",
    "end": "4484500"
  },
  {
    "text": "everything is exact. Right. Question? [inaudible]",
    "start": "4484500",
    "end": "4494790"
  },
  {
    "text": "Yes, that's right. Yep, yeah. So the approximation step needed are, ah, ah, getting your MDP into the form of a linear dynamical system with quadratic reward.",
    "start": "4494790",
    "end": "4503699"
  },
  {
    "text": "So that is approximate. But once you specify the MTP like that, all of these calculations were exact, right?",
    "start": "4503700",
    "end": "4508920"
  },
  {
    "text": "So, so we're not approximating the value function or quadratic function, is that the value function is a quadratic function and you're computing it exactly.",
    "start": "4508920",
    "end": "4517185"
  },
  {
    "text": "And the optimal policy is a linear function and you just computing, computing that exactly.",
    "start": "4517185",
    "end": "4522630"
  },
  {
    "text": "Okay. Um, I want to mention- before we wrap up,",
    "start": "4522630",
    "end": "4528300"
  },
  {
    "text": "I want to mention one, one unusual fun fact about LQR and this is very specific to LQR.",
    "start": "4528300",
    "end": "4533880"
  },
  {
    "text": "Uh, and, and, and it's convenient, uh, but, but, er, let me say what the fact is and just be careful that this doesn't give you",
    "start": "4533880",
    "end": "4541440"
  },
  {
    "text": "the wrong intuition because it doesn't apply to anything other than LQR, which is that if you look at where, um,",
    "start": "4541440",
    "end": "4548940"
  },
  {
    "text": "so first, if you look at the formula for L, ah, let me see.",
    "start": "4548940",
    "end": "4554440"
  },
  {
    "text": "Move this around. [NOISE] All right. If you look at the formula for L_t,",
    "start": "4555260",
    "end": "4560790"
  },
  {
    "text": "you need to compute, I mean the, you know, the goal of doing all this work is to find the optimal policy.",
    "start": "4560790",
    "end": "4566940"
  },
  {
    "text": "Right? So you want to find L_t so that you can compute the optimal policy. You notice that L_t, um,",
    "start": "4566940",
    "end": "4573135"
  },
  {
    "text": "just depends on Phi but not Psi.",
    "start": "4573135",
    "end": "4582255"
  },
  {
    "text": "Right? Um, so, you know, and, and maybe it's gonna make sense. You're going to- when you take an action,",
    "start": "4582255",
    "end": "4588780"
  },
  {
    "text": "you get to some new state and your future payoffs is a quadratic function plus a constant. It doesn't matter what that constant is.",
    "start": "4588780",
    "end": "4594900"
  },
  {
    "text": "Right? And so in order to compute the optimal action, in order to compute L_t, you need to, you need to know Phi or actually Phi T",
    "start": "4594900",
    "end": "4603030"
  },
  {
    "text": "plus 1 but you don't need to know what is Psi T plus 1. Right. Now, if you",
    "start": "4603030",
    "end": "4614849"
  },
  {
    "text": "look at the way we do the dynamic programming, the backwards recursion, um,",
    "start": "4614850",
    "end": "4622454"
  },
  {
    "text": "what if you implement a piece of code that doesn't involve it to compute Psi, right?",
    "start": "4622455",
    "end": "4628410"
  },
  {
    "text": "So these are the two equations you use, update Phi and Psi. But whether, you know, let's say you delete this line of code.",
    "start": "4628410",
    "end": "4635295"
  },
  {
    "text": "Just don't bother to compute it and just don't bother to compute that and don't bother to compute that.",
    "start": "4635295",
    "end": "4641130"
  },
  {
    "text": "Right? So you notice that Phi depends on Phi T plus 1, but it doesn't depend on Psi.",
    "start": "4641130",
    "end": "4647579"
  },
  {
    "text": "Uh, and so you can implement the whole thing and compute the optimal policy and compute the optimal actions without ever computing Psi.",
    "start": "4647580",
    "end": "4656100"
  },
  {
    "text": "Right. Now the funny thing about this is that the only place that Sigma w",
    "start": "4656100",
    "end": "4665100"
  },
  {
    "text": "appears is that it",
    "start": "4665100",
    "end": "4670950"
  },
  {
    "text": "affects only Psi T. Right?",
    "start": "4670950",
    "end": "4678945"
  },
  {
    "text": "So, you know, if, if we do what I've just cross out in orange and just don't bother to compute",
    "start": "4678945",
    "end": "4684510"
  },
  {
    "text": "Psi T. Then the whole algorithm doesn't even use Sigma w. Right.",
    "start": "4684510",
    "end": "4690315"
  },
  {
    "text": "So one very interesting property of the LQR, um, ah, of this formalism is that the optimal policy does not depend on Sigma w. Right.",
    "start": "4690315",
    "end": "4701865"
  },
  {
    "text": "Um, and I think, ah, maybe this is a, ah, so V star depends on Sigma w,",
    "start": "4701865",
    "end": "4713550"
  },
  {
    "text": "because if the noise is very large, if there's a huge gust of wind blowing a helicopter all over the place, then the value would be worse.",
    "start": "4713550",
    "end": "4719969"
  },
  {
    "text": "But Pi star and L_t, uh, do not depend on the Sigma w. Okay.",
    "start": "4719970",
    "end": "4733485"
  },
  {
    "text": "Um, so this is a property that is very specific to LQR, don't, don't, don't overgeneralize it to other reinforcement learning algorithms.",
    "start": "4733485",
    "end": "4740835"
  },
  {
    "text": "But this, um, I think the intuition to, ah, um, take from this is first,",
    "start": "4740835",
    "end": "4747180"
  },
  {
    "text": "if you are actually applying this system, you know, don't bother to, don't, don't- I say don't, don't try to hard to estimate Sigma w, because you,",
    "start": "4747180",
    "end": "4754260"
  },
  {
    "text": "you don't actually need to use it, uh, which is why when we're fitting a linear model, I didn't talk too much about how you actually estimate Sigma w. Because in LQR system,",
    "start": "4754260",
    "end": "4762780"
  },
  {
    "text": "it literally doesn't matter in a mathematical sense in terms of what does the optimal policy you compute.",
    "start": "4762780",
    "end": "4768780"
  },
  {
    "text": "And the second, the maybe slightly more useful intuition to take away from this, is that, ah, for a lot of MDPs,",
    "start": "4768780",
    "end": "4775230"
  },
  {
    "text": "if you're building a robot, you know, ah, um, remember to add some noise to your system",
    "start": "4775230",
    "end": "4780825"
  },
  {
    "text": "but the exact noise you add doesn't matter as much as one might think. So what I've seen in,",
    "start": "4780825",
    "end": "4786320"
  },
  {
    "text": "in working on a lot of robots, a lot of MDPs is, you know, do add some noise to the system and make sure your learning algorithm is robust to noise.",
    "start": "4786320",
    "end": "4793385"
  },
  {
    "text": "And the form of the noise you add, it does matter. I don't say it doesn't matter at all. I mean, in, in LQR, it doesn't matter at all.",
    "start": "4793385",
    "end": "4799670"
  },
  {
    "text": "For other MDPs, it does matter. But I think the fact that you've remembered to add some noise is often",
    "start": "4799670",
    "end": "4805155"
  },
  {
    "text": "in practice more important than the exact details of, you know, is the noise 10%  higher or is the noise 10% lower.",
    "start": "4805155",
    "end": "4811680"
  },
  {
    "text": "If, if the noise is 100% higher or lower, that will often make a big difference, but, ah, but, but when I'm, you know,",
    "start": "4811680",
    "end": "4817155"
  },
  {
    "text": "training a model of our helicopter or something, the noise is something that, you know, I pay a little bit of attention to but I pay much more attention to",
    "start": "4817155",
    "end": "4823530"
  },
  {
    "text": "making sure that the matrices A and B are accurate than, and then, you know, a little bit sloppiness in the",
    "start": "4823530",
    "end": "4830010"
  },
  {
    "text": "act of using your noise model is something that an MDP can probably survive, that your policy can survive. Okay. Let's take one last question. Yes.",
    "start": "4830010",
    "end": "4836130"
  },
  {
    "text": "[inaudible]. Oh V? Uh, ah, oh I see.",
    "start": "4836130",
    "end": "4845260"
  },
  {
    "text": "Sorry, yes. Let me see my notes. Oh V. That was, ah, this is a V. Yes, thanks, yeah.",
    "start": "4845590",
    "end": "4853070"
  },
  {
    "text": "Okay, cool. Thanks everyone. Let's break and I'll see you for the final lecture on [NOISE] Wednesday.",
    "start": "4855470",
    "end": "4861119"
  },
  {
    "text": "Thanks everyone",
    "start": "4861120",
    "end": "4862750"
  }
]