[
  {
    "text": "Um, today what we're gonna be doing is we are gonna be starting to talk about fast reinforcement learning.",
    "start": "4850",
    "end": "10335"
  },
  {
    "text": "Um, so in terms of where we are in the class, we've just finished up policy search. You guys are working on policy gradient,",
    "start": "10335",
    "end": "16850"
  },
  {
    "text": "uh, right now for your homework. And then, that'll be the last homework and then the rest of the time will be on projects.",
    "start": "16850",
    "end": "22710"
  },
  {
    "text": "[NOISE] Excuse me. Um, and then, uh, right now we're gonna start to talk about fast reinforcement learning,",
    "start": "22710",
    "end": "28950"
  },
  {
    "text": "which is something that we haven't talked about so much. So, so the things we've discussed a lot so far in the term are things like optimization,",
    "start": "28950",
    "end": "36200"
  },
  {
    "text": "generalization, and delayed consequences. So, how we do planning and Markov decision processes?",
    "start": "36200",
    "end": "41495"
  },
  {
    "text": "How do we scale up to really large state spaces using like deep neural networks? Um, and how do we do this optimization?",
    "start": "41495",
    "end": "48845"
  },
  {
    "text": "And I think that that works really well for, um, uh, a lot of cases where we have good simulators or where data is pretty cheap.",
    "start": "48845",
    "end": "56300"
  },
  {
    "text": "Um, but a lot of the work that I do in my own lab thinks about how do we teach computers to help us,",
    "start": "56300",
    "end": "61360"
  },
  {
    "text": "uh, which naturally involves reinforcement learning because we're teaching computers about how to make decisions that would help us.",
    "start": "61360",
    "end": "66965"
  },
  {
    "text": "But I think there are a lot of other applications where we'd really like computers to help us. So, things like, uh,",
    "start": "66965",
    "end": "72155"
  },
  {
    "text": "education or healthcare or consumer marketing.",
    "start": "72155",
    "end": "82420"
  },
  {
    "text": "And in each of these cases we can think of them as being reinforcement learning problems because we'd have some sort of agent like our computer, uh,",
    "start": "85210",
    "end": "93320"
  },
  {
    "text": "that is making decisions as it interacts with a person and it's trying to optimize some reward, like,",
    "start": "93320",
    "end": "101000"
  },
  {
    "text": "it's trying to help someone learn something or it's trying to treat a patient or it's trying to, uh, increase revenue for a company by having consumers click on ads.",
    "start": "101000",
    "end": "109220"
  },
  {
    "text": "And in all of those cases, the place where data comes from is people. Um, and so, there's at least two big challenges with that.",
    "start": "109220",
    "end": "116705"
  },
  {
    "text": "The first is that, uh, you know, people are finite. There's not [NOISE] an infinite number of people, um, and also,",
    "start": "116705",
    "end": "121760"
  },
  {
    "text": "that it's expensive and costly to, um, try to gather data when you interact with people.",
    "start": "121760",
    "end": "126979"
  },
  {
    "text": "And so, it raises the concern about sample efficiency. So, in general, of course,",
    "start": "126980",
    "end": "133090"
  },
  {
    "text": "we would love to have reinforcement learning algorithms that are both computationally efficient and sample efficient. But, uh, most of the techniques we've been looking at so far particularly these sort of",
    "start": "133090",
    "end": "141440"
  },
  {
    "text": "Q learning type techniques were really sort of inspired by this need for computational efficiency.",
    "start": "141440",
    "end": "147990"
  },
  {
    "text": "Um, so if we think back to when we were just doing planning at the beginning when we talked about doing dynamic programming versus doing Q learning,",
    "start": "149240",
    "end": "158270"
  },
  {
    "text": "um, in dynamic programming, we had to do a sum over all next states and in TD learning we sampled that.",
    "start": "158270",
    "end": "165250"
  },
  {
    "text": "So, in TD learning we sort of had this constant cost per update versus for dynamic programming where we had this S squared times A and cost.",
    "start": "165250",
    "end": "174540"
  },
  {
    "text": "Um, so it was much more expensive to do things like dynamic programming than it was to do TD learning, um, on a, on a per step basis.",
    "start": "174540",
    "end": "181970"
  },
  {
    "text": "And so, a lot of the techniques that have been developed in reinforcement learning have really been thinking about this computational efficiency issue.",
    "start": "181970",
    "end": "187299"
  },
  {
    "text": "Um, and there are a lot of times where computational efficiency is important. Like, if you wanted to plan from scratch and you were sort of driving",
    "start": "187300",
    "end": "193040"
  },
  {
    "text": "a car at 60 miles per hour,",
    "start": "193040",
    "end": "198349"
  },
  {
    "text": "then if it takes you-. Uh, so if you're driving a car at 60 miles per",
    "start": "199200",
    "end": "204620"
  },
  {
    "text": "hour and it takes your computer one second to make a decision about like, you know, how to turn the wheel or something like that, um,",
    "start": "204620",
    "end": "211055"
  },
  {
    "text": "then during that one second you've traveled, you know, many feet. So, in a lot of cases,",
    "start": "211055",
    "end": "216709"
  },
  {
    "text": "you really do have real-time constraints, uh, on the computation you can do. Uh, and in many situations like for,",
    "start": "216710",
    "end": "222605"
  },
  {
    "text": "you know, in the cases of, uh, some robotics and particularly when we have simulators [NOISE] we really want",
    "start": "222605",
    "end": "231530"
  },
  {
    "text": "computational efficiency because we need to be able to do these things very quickly. Um, we can sort of use our simulators but we need",
    "start": "231530",
    "end": "237140"
  },
  {
    "text": "our simulators to be fast so our agent can learn. Um, in contrast to those sort of examples are things where sample efficiency",
    "start": "237140",
    "end": "243260"
  },
  {
    "text": "is super expens- important and maybe computation is less important. So, whenever experience is costly or hard to gather.",
    "start": "243260",
    "end": "255280"
  },
  {
    "text": "And so, this is particularly things that involve people. Um, uh, so we think about students",
    "start": "257390",
    "end": "264595"
  },
  {
    "text": "or patients or customers,",
    "start": "264595",
    "end": "273370"
  },
  {
    "text": "like the way that our agent will learn about the world is making decisions, um, and that data affects real people.",
    "start": "273620",
    "end": "279215"
  },
  {
    "text": "So, it might be very reasonable for us to take, you know, several days of computation if we could figure out a better way to treat cancer, um,",
    "start": "279215",
    "end": "287500"
  },
  {
    "text": "because we don't wanna randomly experiment on people and we wanna use the data as well as we can to be really really sample efficient,",
    "start": "287500",
    "end": "293935"
  },
  {
    "text": "um, versus in the case of like Atari it's, uh, we wanna be really computationally efficient because we can do many, many simulations.",
    "start": "293935",
    "end": "301210"
  },
  {
    "text": "It's fine. No one's getting hurt. But, um, but we need to eventually learn to make, you know, to derive a good game.",
    "start": "301210",
    "end": "307760"
  },
  {
    "text": "So, one natural question might be, okay, so maybe now we care about sample efficiency.",
    "start": "309320",
    "end": "314884"
  },
  {
    "text": "Um, and before we cared perhaps more about computational efficiency but maybe the algorithms we've already discussed are already sample efficient.",
    "start": "314885",
    "end": "321574"
  },
  {
    "text": "So, does anybody remember like on the order of magnitude or like, you know, somewhere in the rough ballpark how many steps it",
    "start": "321575",
    "end": "328229"
  },
  {
    "text": "took DQN to learn a good policy for Pong? Maybe, there's multiple answers maybe someone could say.",
    "start": "328230",
    "end": "335970"
  },
  {
    "text": "Yeah. [NOISE] I think it varies somewhere partly between 2 to 10,",
    "start": "335970",
    "end": "344640"
  },
  {
    "text": "is my guess. 2 to 10 million. So, um, that's a lot, that's a lot of data [LAUGHTER] to learn to play Pong.",
    "start": "344640",
    "end": "351030"
  },
  {
    "text": "So, I would argue that the techniques we've seen so far, um, are not gonna address this issue and it's not gonna be reasonable for us to need, you know,",
    "start": "351030",
    "end": "358010"
  },
  {
    "text": "somewhere between 2 to 10 million customers before we figure out a good way to target ads or 2 to 10 million patients before we figure out the right decisions to do.",
    "start": "358010",
    "end": "365900"
  },
  {
    "text": "So, the techniques we've seen so far are not gonna be, uh, they're formally not sample efficient and they're also empirically not sample efficient.",
    "start": "365900",
    "end": "372950"
  },
  {
    "text": "Um, so we're gonna need new types of techniques than what we've seen so far. So, of course, when we start to think about this,",
    "start": "372950",
    "end": "379009"
  },
  {
    "text": "we think about the general issue of. you know, what does it mean for an algorithm to be good? We've talked about computational efficiency",
    "start": "379010",
    "end": "384410"
  },
  {
    "text": "and I've mentioned this thing called sample efficiency. But in general, I think one thing we care a lot about is, you know,",
    "start": "384410",
    "end": "389840"
  },
  {
    "text": "how good is our reinforcement learning algorithm and we're going to start to try to quantify that in terms of sample efficiency.",
    "start": "389840",
    "end": "395855"
  },
  {
    "text": "Um, but, of course, you could have an algorithm that's really sample efficient in the sense that",
    "start": "395855",
    "end": "400970"
  },
  {
    "text": "maybe it only uses the first 10 data points and then it never updates its policy. So, it doesn't need very much data to find a policy but the policy is bad.",
    "start": "400970",
    "end": "409240"
  },
  {
    "text": "So, when we talk about sample efficiency, we're gonna want both but we don't need very much data",
    "start": "409240",
    "end": "414290"
  },
  {
    "text": "and we don't need very much data in order to make good decisions. So, we still wanna get good performance we",
    "start": "414290",
    "end": "419720"
  },
  {
    "text": "just don't need- wanna need very much experience to get there. Um, so when we talk about what it means for an algorithm to be good,",
    "start": "419720",
    "end": "427265"
  },
  {
    "text": "you know, one a, one possibility is we can talk about whether or not it converges at all. Um, that just means",
    "start": "427265",
    "end": "432949"
  },
  {
    "text": "whether or not the value function or the policy is stable at some point, like asymptotically because the number of time steps goes to infinity.",
    "start": "432950",
    "end": "441745"
  },
  {
    "text": "And we talked about how sometimes with, uh, value function approximation we don't even have that,",
    "start": "441745",
    "end": "447514"
  },
  {
    "text": "like, ah, things can oscillate. Um, then another thing that's stronger than that that you might wanna us to say, well,",
    "start": "447515",
    "end": "453680"
  },
  {
    "text": "asymptotically as t goes to infinity, um, will we converge to the optimal policy?",
    "start": "453680",
    "end": "458855"
  },
  {
    "text": "And we talked about some algorithms that would do that under some different assumptions. Um, but what we haven't talked about very much is sort of,",
    "start": "458855",
    "end": "466370"
  },
  {
    "text": "you know, well, how quickly do we get there? Asymptotically is a very long time. Um, and so we might wanna be able to say,",
    "start": "466370",
    "end": "474010"
  },
  {
    "text": "if we have two algorithms and one of them gets the optimal policy here, like if this is performance with this time and another algorithm goes like this,",
    "start": "474010",
    "end": "483905"
  },
  {
    "text": "intuitively, algorithm two is better than algorithm one even though they both get to the optimal policy, eventually.",
    "start": "483905",
    "end": "493025"
  },
  {
    "text": "So, we'd like to be able to sort of account for either, we can think about things like how many mistakes our algorithm makes",
    "start": "493025",
    "end": "500240"
  },
  {
    "text": "or its relative performance over time compared to the optimal. And so, we'll start to talk today about",
    "start": "500240",
    "end": "507080"
  },
  {
    "text": "some other forms of measures for how good an algorithm is. So, in this lecture and the next couple of lectures, we're gonna, um,",
    "start": "507080",
    "end": "515360"
  },
  {
    "text": "do several different things trying to talk about sort of how good are these reinforcement learning algorithms and think about algorithms that could be much better in terms of their guarantees for performance.",
    "start": "515360",
    "end": "525230"
  },
  {
    "text": "Um, we're gonna start off and talk about tabular settings. But today we're only gonna talk about simple bandits.",
    "start": "525230",
    "end": "532250"
  },
  {
    "text": "But generally, for the next, um, today and next lecture, we'll talk about tabular settings and then, um,",
    "start": "532250",
    "end": "537740"
  },
  {
    "text": "hopefully also get to some about function approximation plus sample efficiency. But we'll start to talk about sort of settings frameworks and approaches.",
    "start": "537740",
    "end": "546235"
  },
  {
    "text": "So, the settings that we're going to be covering like today and next time, it's gonna be bandits which, uh,",
    "start": "546235",
    "end": "551270"
  },
  {
    "text": "a number of you- who, who, who here is doing the default project? Okay. So, a number of you are,",
    "start": "551270",
    "end": "556550"
  },
  {
    "text": "are already starting to think about this in terms of the project. So, we'll introduce bandits today, um, and then we'll also talk about this for MDPs.",
    "start": "556550",
    "end": "563329"
  },
  {
    "text": "And then, we'll also introduce frameworks, and these are evaluation criteria for formally",
    "start": "563330",
    "end": "568850"
  },
  {
    "text": "assessing the quality of a reinforcement learning algorithm. So, they're way- there's sort of a tool you could use to evaluate",
    "start": "568850",
    "end": "576200"
  },
  {
    "text": "many different algorithms and algorithms will either satisfy this framework or not, or have different properties,",
    "start": "576200",
    "end": "581250"
  },
  {
    "text": "um, under these different frameworks. And then, we'll also start to talk about approaches, which are classes of algorithms for achieving",
    "start": "581250",
    "end": "587840"
  },
  {
    "text": "these different evaluation criteria for these different frameworks in different settings, either for the MDP setting or,",
    "start": "587840",
    "end": "594440"
  },
  {
    "text": "or for the bandit setting. And what we'll shortly see is that there's a couple of main ideas of styles or approaches of algorithms which turned out to both have, um,",
    "start": "594440",
    "end": "602930"
  },
  {
    "text": "be applicable both to bandit settings and MDP settings, um, and function approximation actually",
    "start": "602930",
    "end": "608525"
  },
  {
    "text": "and also that have some really nice formal properties. There's sort of a couple of big conceptual ideas",
    "start": "608525",
    "end": "613610"
  },
  {
    "text": "about how we might do fast reinforcement learning. Okay. So, the, the plan for today will be",
    "start": "613610",
    "end": "620990"
  },
  {
    "text": "that we'll first start with an introduction to multi-armed bandits. Then we'll talk about the definition of regret on a mathematical formal sense.",
    "start": "620990",
    "end": "627230"
  },
  {
    "text": "Um, and then we'll talk about optimism under uncertainty. And then, as we can, we'll talk about Bayesian regret,",
    "start": "627230",
    "end": "632915"
  },
  {
    "text": "um, and probability matching and Thompson sampling. I'm curious, who here has ever seen this sort of material before?",
    "start": "632915",
    "end": "640390"
  },
  {
    "text": "Okay. A couple of people, most people not. I wouldn't- is it covered in AI?",
    "start": "640390",
    "end": "645630"
  },
  {
    "text": "I don't think they would cover it. Oh, good. Okay.",
    "start": "645630",
    "end": "651545"
  },
  {
    "text": "All right. So, for some of you, uh, this will be a review, for most of you, it will be new. So, for multi-armed bandits,",
    "start": "651545",
    "end": "657925"
  },
  {
    "text": "we can think of them as a subset of Reinforcement Learning. So, it's generally considered a set of arms,",
    "start": "657925",
    "end": "663910"
  },
  {
    "text": "the- there's a set of m arms, which were, uh, the equivalent to what we used to call actions.",
    "start": "663910",
    "end": "669745"
  },
  {
    "text": "So, in Reinforcement Learning, in our set of actions, um, we're thinking about like, there being m different actions.",
    "start": "669745",
    "end": "675190"
  },
  {
    "text": "Now we're often gonna call those arms. [NOISE] And then, for each of those arms, they have a distribution of rewards you could get.",
    "start": "675190",
    "end": "682855"
  },
  {
    "text": "So, we haven't talked a lot about sort of having uncertainty over our rewards. We mostly just talked about the expected reward.",
    "start": "682855",
    "end": "689935"
  },
  {
    "text": "Um, and for multi-armed bandits, today we're gonna explicitly think about the fact that, um, rewards might be sampled from a stochastic distribution.",
    "start": "689935",
    "end": "697420"
  },
  {
    "text": "[NOISE] So, there's some distribution that we don't know which is conditioned on the arm.",
    "start": "697420",
    "end": "702820"
  },
  {
    "text": "So, conditioned on the arm, you're gonna get different rewards. So, for example, it could be that for arm 1,",
    "start": "702820",
    "end": "710290"
  },
  {
    "text": "your distribution looks something like this. This is the probability of that reward and this is rewards.",
    "start": "710290",
    "end": "716230"
  },
  {
    "text": "Um, and then for arm 2,",
    "start": "716230",
    "end": "720290"
  },
  {
    "text": "it looks something like this. [NOISE] So, in this particular example, um,",
    "start": "722040",
    "end": "727525"
  },
  {
    "text": "the average reward for arm 1 would be higher than the average reward for arm 2. And then they would have different variances.",
    "start": "727525",
    "end": "734425"
  },
  {
    "text": "But it doesn't have to be Gaussian. You could have lots of different distributions. Um, essentially, what we're trying to capture here is that whenever you,",
    "start": "734425",
    "end": "742180"
  },
  {
    "text": "uh, um, take a particular action, which we also refer to as pulling an arm, um, for the multi-armed bandit, um,",
    "start": "742180",
    "end": "749080"
  },
  {
    "text": "then the reward you get might vary even if you pull the same arm twice. So, in this case, you can imagine that if you pull the arm once,",
    "start": "749080",
    "end": "756265"
  },
  {
    "text": "um, arm 1 once, you might get a reward here and maybe the second time you get a reward there. So, the idea in this case is it's similar to",
    "start": "756265",
    "end": "764560"
  },
  {
    "text": "MDPs except for now there's no transition function. So, there's no state or equivalently,",
    "start": "764560",
    "end": "769990"
  },
  {
    "text": "you can think of it as there's only a single state. Um, and so when you take an arm, um, you stay in the same state.",
    "start": "769990",
    "end": "775345"
  },
  {
    "text": "There's always these m actions available to you, and on each step, you get to pick what action to take and then you observe some reward that is",
    "start": "775345",
    "end": "782140"
  },
  {
    "text": "sampled from the unknown probability distribution associated with that arm. And just like in Reinforcement Learning, um,",
    "start": "782140",
    "end": "789600"
  },
  {
    "text": "we don't know what those reward distributions are in advance and our goal is to maximize the cumulative reward.",
    "start": "789600",
    "end": "796235"
  },
  {
    "text": "So, if someone told you what these distributions were in advance, you would know exactly which arm to pull, whichever one has the highest expected,",
    "start": "796235",
    "end": "802810"
  },
  {
    "text": "uh, as, expected mean. [NOISE] So, we're gonna try to use pretty similar notation to what we had for,",
    "start": "802810",
    "end": "811404"
  },
  {
    "text": "um, the reinforcement learning case. Um, but if you notice things that are confusing, just let me know. Um, so we're gonna define the action value as the mean reward for a particular action.",
    "start": "811405",
    "end": "820990"
  },
  {
    "text": "So, that's Qa, this is unknown, agent doesn't know this in advance.",
    "start": "820990",
    "end": "826150"
  },
  {
    "text": "The optimal value V star is gonna be equal to Q of the best action.",
    "start": "826150",
    "end": "833450"
  },
  {
    "text": "And then, the regret is gonna be the opportunity loss for one step.",
    "start": "833580",
    "end": "839065"
  },
  {
    "text": "So, what that means is that if instead of taking, if, if you could have taken Q of a star and instead you took Q of at.",
    "start": "839065",
    "end": "848695"
  },
  {
    "text": "So, this is the actual arm you selected. How much in expectation did you lose by taking the sub-optimal arm?",
    "start": "848695",
    "end": "858970"
  },
  {
    "text": "And this is how we're gonna mathematically define regret in the case of Reinforcement Learning. So, if you selected the optimal arm, your regret,",
    "start": "858970",
    "end": "867595"
  },
  {
    "text": "your expected regret will be 0 for that time step, um, but for any other arm, there will be some loss.",
    "start": "867595",
    "end": "873430"
  },
  {
    "text": "And the total regret is just, um, the total opportunity loss if you sum over",
    "start": "873430",
    "end": "878845"
  },
  {
    "text": "all the time steps that the agent acts and compare, um, the actions it took and the, um,",
    "start": "878845",
    "end": "884425"
  },
  {
    "text": "the expected reward of each of those actions to the expected reward of the optimal action. So, just to be clear here,",
    "start": "884425",
    "end": "890830"
  },
  {
    "text": "this is not known, this is not known to the agent, and this is unknown to the agent.",
    "start": "890830",
    "end": "896350"
  },
  {
    "text": "[NOISE] Just to check for understanding for a second,",
    "start": "896350",
    "end": "903130"
  },
  {
    "text": "why is this, so why is this second thing unknown to the agent? Yeah.",
    "start": "903130",
    "end": "909655"
  },
  {
    "text": "Because you don't know the probability distribution of Q. Right. So, [NOISE], correct. So, you don't know, er,",
    "start": "909655",
    "end": "915850"
  },
  {
    "text": "what the distribution is, so you don't know what Q is. You get to observe, um, a sample from that.",
    "start": "915850",
    "end": "921325"
  },
  {
    "text": "So, you get to observe R. You get to get an R which was sampled from the probability distribution of rewards given the action that was taken.",
    "start": "921325",
    "end": "929470"
  },
  {
    "text": "[NOISE] But you don't get to observe either, uh, the true expected value of the optimal arm",
    "start": "929470",
    "end": "935440"
  },
  {
    "text": "nor the true expected value of the arm that you selected. So, this isn't something we can normally evaluate unless we're in a simulated domain, okay?",
    "start": "935440",
    "end": "946705"
  },
  {
    "text": "But we're gonna talk about ways that we can bound this and, and think about algorithms or try to minimize the regret.",
    "start": "946705",
    "end": "952370"
  },
  {
    "text": "So, if we think about ways to sort of quantify it, another way to think about it alternatively is that,",
    "start": "955400",
    "end": "961410"
  },
  {
    "text": "um, think about the number of times that you take a particular action. We can call that Nt of a.",
    "start": "961410",
    "end": "966889"
  },
  {
    "text": "So, that's like the number of times we select action 1, action 2, et cetera. And then, we can define a gap which is the difference between [NOISE] the optimal",
    "start": "966890",
    "end": "976570"
  },
  {
    "text": "arm's value and the value of the arm that we selected, and that's the gap. So, that's how much we lost by picking a different arm than the optimal arm.",
    "start": "976570",
    "end": "987285"
  },
  {
    "text": "So, this gap is equal to, gap for a star is equal to 0, if you don't lose anything by taking the optimal arm,",
    "start": "987285",
    "end": "995590"
  },
  {
    "text": "and for all other arms, it's gonna be positive. So, another way to think about the regret which is equivalent is to say,",
    "start": "995590",
    "end": "1002399"
  },
  {
    "text": "this is equivalent to thinking about what are the expected number of times you select each of the arms times their gap.",
    "start": "1002400",
    "end": "1008400"
  },
  {
    "text": "So, how much you would lose by selecting that arm compared to the optimal arm. And what we would like is that sort of an algorithm, um,",
    "start": "1008400",
    "end": "1017310"
  },
  {
    "text": "it should be able to adjust how many times you pull arms which have large gaps. So, if there's a really, really bad arm, uh,",
    "start": "1017310",
    "end": "1025130"
  },
  {
    "text": "like if there's really bad action which has a very low reward, you would like not to pull that as much, to take that action as much as the arms that are close to optimal.",
    "start": "1025130",
    "end": "1032730"
  },
  {
    "text": "[NOISE] So, one approach that we've seen before is greedy.",
    "start": "1032730",
    "end": "1039615"
  },
  {
    "text": "Um, in the case of, ah, bandits, the greedy algorithm is very simple. Um, we just average the,",
    "start": "1039615",
    "end": "1046665"
  },
  {
    "text": "the rewards we've seen for an arm. So, we just look at every single time that we took that arm,",
    "start": "1046665",
    "end": "1051750"
  },
  {
    "text": "we look at the reward we got for each those timestamps, and then we average it. And that just gives us, um,",
    "start": "1051750",
    "end": "1057540"
  },
  {
    "text": "an estimate of the, of Q hat. And then what greedy does is it selects the action with the highest value,",
    "start": "1057540",
    "end": "1063945"
  },
  {
    "text": "um, and takes that arm forever. So, it's probably clear in this case that because the rewards are sampled from",
    "start": "1063945",
    "end": "1072870"
  },
  {
    "text": "a stochastic distribution that if you are unlucky and get samples that are,",
    "start": "1072870",
    "end": "1078780"
  },
  {
    "text": "uh, misrepresentative, then you could lock into the wrong action and stay there forever.",
    "start": "1078780",
    "end": "1084420"
  },
  {
    "text": "So, if we think of that little example I gave before, and I'll work out, uh, a bigger example shortly, so in this case,",
    "start": "1084420",
    "end": "1090480"
  },
  {
    "text": "imagine this is reward, this is probability, and this was a2.",
    "start": "1090480",
    "end": "1097275"
  },
  {
    "text": "Okay. So, let's imagine that the first, um, and I'll make this 1 and this 0.",
    "start": "1097275",
    "end": "1102510"
  },
  {
    "text": "So, if you sample from a1, in this case, you could imagine there's some non-zero probability that the first sample you get is say,",
    "start": "1102510",
    "end": "1109440"
  },
  {
    "text": "0.2 for a1, and the first sample you get for a2 with non-zero probability might be 0.5.",
    "start": "1109440",
    "end": "1116940"
  },
  {
    "text": "So, the true mean of a2 is lower than the mean of a1. But if you sampled each of these once, um,",
    "start": "1116940",
    "end": "1123240"
  },
  {
    "text": "then if you're greedy with respect to that, then you will take the wrong action forever. [NOISE] Yeah.",
    "start": "1123240",
    "end": "1130815"
  },
  {
    "text": "Wrong action forever, is the idea that our policy is gonna be influencing what times we'll get in",
    "start": "1130815",
    "end": "1136799"
  },
  {
    "text": "the future or is the idea that there are some set of samples independent of this greedy policy to begin?",
    "start": "1136800",
    "end": "1142695"
  },
  {
    "text": "Because it seems otherwise, if there is non-zero reward, you just take that one forever. Uh, great question. So, um, is it, yeah,",
    "start": "1142695",
    "end": "1150150"
  },
  {
    "text": "so what [inaudible] said is, um, you know, is there an additional thing that we're doing kind of before this? Normally, for a lot of these algorithms, um,",
    "start": "1150150",
    "end": "1156134"
  },
  {
    "text": "we're gonna assume that all of them operate by selecting each arm once at least if you have a finite set of arms.",
    "start": "1156135",
    "end": "1162030"
  },
  {
    "text": "Um, and equivalently, you [NOISE] can say if you don't have any data, you treat everything equivalently or, um,",
    "start": "1162030",
    "end": "1168000"
  },
  {
    "text": "but essentially most of these ones say, until you have data for all the arms, we are gonna do round robin,",
    "start": "1168000",
    "end": "1173595"
  },
  {
    "text": "you're gonna sample everything once. And after you do that, either you can be greedy or we can do something else. So, there has to be a pre-initialization space. It's a good question.",
    "start": "1173595",
    "end": "1181950"
  },
  {
    "text": "So, and we're also gonna assume for right now that we split ties, um, with equal probability.",
    "start": "1181950",
    "end": "1186960"
  },
  {
    "text": "So, if there are two arms that have the same pro- probability, um, and they both have the max actio- max value,",
    "start": "1186960",
    "end": "1192360"
  },
  {
    "text": "then you would split your time between those until the value is changed. So, this is an example where if we first sampled a1 once [NOISE],",
    "start": "1192360",
    "end": "1199770"
  },
  {
    "text": "then sampled a2 once. Um, and because there's a non-zero probability that those samples would make it look that,",
    "start": "1199770",
    "end": "1205260"
  },
  {
    "text": "um, action a1 has a lower mean than action a2, then you could lock into the wrong action forever.",
    "start": "1205260",
    "end": "1210940"
  },
  {
    "text": "Now, an e-greedy algorithm, which we've seen before in class, um, uh, it does something very similar except for with probability 1 - epsilon, we select,",
    "start": "1212270",
    "end": "1220289"
  },
  {
    "text": "um, the greedy action, and otherwise with epsilon, we split our probability across all the other actions or all the other arms.",
    "start": "1220290",
    "end": "1227610"
  },
  {
    "text": "[NOISE] So, in these cases, um, we have some more robustness.",
    "start": "1227610",
    "end": "1234470"
  },
  {
    "text": "So, in this case, you know, we would continue to sample, um, the other action, but we're always gonna make a sub-optimal decision at least epsilon percent of",
    "start": "1234470",
    "end": "1242059"
  },
  {
    "text": "the time, well, approximately. It's a little bit less than that because if you do it totally randomly not a,",
    "start": "1242060",
    "end": "1249600"
  },
  {
    "text": "um, uh, but it's order epsilon.",
    "start": "1249600",
    "end": "1252940"
  },
  {
    "text": "I mean, er, it's slightly less than that because, um, er, if you uniformly split across all your arms with one over the number of arms probability,",
    "start": "1254900",
    "end": "1263520"
  },
  {
    "text": "we'll be selecting the optimal action. [NOISE]",
    "start": "1263520",
    "end": "1270830"
  },
  {
    "text": "Okay. So let's see these in practice for a second before we talk more about better algorithms. Um, so let's imagine we're trying to figure out how to",
    "start": "1270830",
    "end": "1277610"
  },
  {
    "text": "treat broken toes and this is not a real medical example. Um, but let's imagine there's three different surger- three different options.",
    "start": "1277610",
    "end": "1284135"
  },
  {
    "text": "Um, one is surgery. One is buddy taping the broken toe with another toe, which is what the Internet might tell you to do.",
    "start": "1284135",
    "end": "1289565"
  },
  {
    "text": "Um, and the third is to do nothing. And the outcome measure is gonna be",
    "start": "1289565",
    "end": "1294920"
  },
  {
    "text": "a binary variable of whether or not your toe is healed um, after six weeks as assessed by an x-ray.",
    "start": "1294920",
    "end": "1301530"
  },
  {
    "text": "Okay. So let's imagine that we model this as a multi-armed bandit with three arms, where each arm corresponds to um,",
    "start": "1303000",
    "end": "1310735"
  },
  {
    "text": "well, I'll ask you in a second what it corresponds to. And, and there's an unknown parameter here. So each arm, there's an unknown parameter which is the reward outcome.",
    "start": "1310735",
    "end": "1320030"
  },
  {
    "text": "So let's just take just you know, one or two minutes just to say what does uh, um, a pull of an arm correspond to in",
    "start": "1320030",
    "end": "1326000"
  },
  {
    "text": "this case and why is it reasonable to model it as a bandit, instead of an MDP? [NOISE]",
    "start": "1326000",
    "end": "1359330"
  },
  {
    "text": "Yeah. I'm , and in terms of why we model it as a bandit, one reason is that MDPs usually,",
    "start": "1359330",
    "end": "1367355"
  },
  {
    "text": "think of an agent walking through the world and each, the state, or the world has many different states, and we analyze those.",
    "start": "1367355",
    "end": "1373100"
  },
  {
    "text": "Here we have just one state, a toe is broken and various actions are considered. Right. So  great.",
    "start": "1373100",
    "end": "1379235"
  },
  {
    "text": "So here we just have one there. And, and so what is, what is the, what does it mean to pull an arm in this case or take an action?",
    "start": "1379235",
    "end": "1385265"
  },
  {
    "text": "Which does that correspond to in the real world? [NOISE] That would be",
    "start": "1385265",
    "end": "1392390"
  },
  {
    "text": "a new patient coming in and then making a decision about the care for that patient. Great. So that's like um, uh,",
    "start": "1392390",
    "end": "1397880"
  },
  {
    "text": "a patient coming in and then us deciding to either do surgery on them or giving them um,",
    "start": "1397880",
    "end": "1402920"
  },
  {
    "text": "er, er, in this case a um, like a er, er, doing one of the three options for treatment.",
    "start": "1402920",
    "end": "1409235"
  },
  {
    "text": "Um, and so in this case too, the, each pool is a different patient. So how we treat patient one isn't gonna generally affect how we treat",
    "start": "1409235",
    "end": "1416960"
  },
  {
    "text": "patient two in terms of whether they healed or not, or whether that particularly your you know, surgery worked for them, doesn't affect the next patient coming in.",
    "start": "1416960",
    "end": "1425450"
  },
  {
    "text": "So all the patients are IID. Um, and what we wanna figure out to do,",
    "start": "1425450",
    "end": "1430490"
  },
  {
    "text": "is which of these treatments on average is most effective.",
    "start": "1430490",
    "end": "1433530"
  },
  {
    "text": "Okay. So let's think about these in a particular set- setting. So um, uh, a",
    "start": "1435970",
    "end": "1441755"
  },
  {
    "text": "par- particular set of values. So let's imagine that they're all Bernoulli reward var- variables because either the toe is gonna be be healed or it's not gonna be healed after six weeks.",
    "start": "1441755",
    "end": "1450260"
  },
  {
    "text": "Um, it turns out in this particular fake example, surgery is best. So if you do surgery with 95% probability,",
    "start": "1450260",
    "end": "1456260"
  },
  {
    "text": "it will be healed after six weeks. Buddy taping is 90%, and doing nothing is 0.1.",
    "start": "1456260",
    "end": "1462420"
  },
  {
    "text": "So what would happen if we did something like a greedy algorithm? Oh, yeah. Sorry, is it possible to incorporate other factors into like pulling the arms?",
    "start": "1463270",
    "end": "1471500"
  },
  {
    "text": "For example, surgeries like [inaudible] like cost effective versus buddy taping, are there ways to incorporate that?",
    "start": "1471500",
    "end": "1477215"
  },
  {
    "text": "Yeah. It's a great question. So question's about like uh, you know, could we you know, surgery is a lot more invasive.",
    "start": "1477215",
    "end": "1483230"
  },
  {
    "text": "And there might be other side effects, etc. There's a couple different ways you could imagine putting that information in. One is, you could just change the reward outcome.",
    "start": "1483230",
    "end": "1489650"
  },
  {
    "text": "So you could say um, maybe it's more effective but it's also really costly and I've gotta have some way to combine outcomes with cost.",
    "start": "1489650",
    "end": "1496565"
  },
  {
    "text": "Um, another thing that one might be interested in doing in these sorts of cases is that you might have a distribution of outcome.",
    "start": "1496565",
    "end": "1503659"
  },
  {
    "text": "So in this case, all of them have the same um, distribution. They're all Bernoulli. But in some cases um,",
    "start": "1503660",
    "end": "1509075"
  },
  {
    "text": "your reward outcomes will not be, will be complicated functions, right? Like, so it might be that um,",
    "start": "1509075",
    "end": "1514625"
  },
  {
    "text": "maybe for some people, surgery is really awful and for most people, it's really good.",
    "start": "1514625",
    "end": "1520250"
  },
  {
    "text": "But it's really bad for some people because they have you know, some really bad side effects and so its mean is still better.",
    "start": "1520250",
    "end": "1526775"
  },
  {
    "text": "Um, but there is like, this really bad risk tail of like, maybe people you know, react badly to anesthesia or something like that.",
    "start": "1526775",
    "end": "1533045"
  },
  {
    "text": "So in those cases, you might wanna not focus on expected outcomes. You might wanna look at risk sensitivity. And in fact, one of the things that we're doing in my group is looking at",
    "start": "1533045",
    "end": "1540695"
  },
  {
    "text": "safe reinforcement learning including safe bandits um, and thinking about how you could optimize for risk-sensitive criteria.",
    "start": "1540695",
    "end": "1547940"
  },
  {
    "text": "Another thing that we're not gonna talk about today which you also might wanna do in this case is that, patients are not all identical.",
    "start": "1547940",
    "end": "1553985"
  },
  {
    "text": "Um, and you might wanna incorporate some sort of contextual features about the patient to try to decide which surgery to do or no surgery versus buddy taping.",
    "start": "1553985",
    "end": "1561260"
  },
  {
    "text": "Ah, and hopefully, well, those of you who are doing the default project, we'll think about this definitely.",
    "start": "1561260",
    "end": "1566645"
  },
  {
    "text": "And we'll probably get to this in a couple lectures. In general, we often have sort of, a rich contextual state which will also [NOISE] affect the outcomes.",
    "start": "1566645",
    "end": "1573720"
  },
  {
    "text": "Okay, so in this case, let's imagine that we have these three potential interventions",
    "start": "1573880",
    "end": "1579920"
  },
  {
    "text": "that we can do and we're running the greedy algorithm. So um, as ah,  brought up before,",
    "start": "1579920",
    "end": "1585620"
  },
  {
    "text": "we're gonna sample each of these arms once, and now we're gonna get an empirical average. So let's say that we sample action A1 and we get a plus one.",
    "start": "1585620",
    "end": "1594365"
  },
  {
    "text": "And so now our empirical average of what the expected reward is for action A1 is 1.",
    "start": "1594365",
    "end": "1600830"
  },
  {
    "text": "And then we do A2, and we also get 1 so that's our new average. And then we do A3, we get a 0.",
    "start": "1600830",
    "end": "1607429"
  },
  {
    "text": "And so at this point, what is the probability of greedy selecting each arm assuming",
    "start": "1607430",
    "end": "1614270"
  },
  {
    "text": "that the ties are split randomly? Yeah.",
    "start": "1614270",
    "end": "1620520"
  },
  {
    "text": "Two plus two, then epsilon pair at one, plus or minus a little.",
    "start": "1622150",
    "end": "1628175"
  },
  {
    "text": "And, and your name? . , yeah. So what  said is um, exactly correct for the e-greedy case. So you're jumping ahead a little bit but that's totally right.",
    "start": "1628175",
    "end": "1634715"
  },
  {
    "text": "Um, ah, in this case for greedy, it'll just be 50-50. Yeah. You're already moving to e-greedy. So yes.",
    "start": "1634715",
    "end": "1640610"
  },
  {
    "text": "So the probability of A1 is gonna equal the probability of A2, just gonna equal to a half.",
    "start": "1640610",
    "end": "1646400"
  },
  {
    "text": "So let's imagine that we did this for a few time steps. So, so we can think about what the regret is that we incur along all of this way.",
    "start": "1646400",
    "end": "1653434"
  },
  {
    "text": "So at the beginning um, we have this sort of, an initialization period where we're gonna select each action",
    "start": "1653435",
    "end": "1660830"
  },
  {
    "text": "once and we're always comparing this to what was the reward we could have gotten under the optimal action.",
    "start": "1660830",
    "end": "1666350"
  },
  {
    "text": "So the regret here is gonna be exactly equal, so this is optimal.",
    "start": "1666350",
    "end": "1671640"
  },
  {
    "text": "And remember, the regret is gonna be Q of A star minus Q of the action you took.",
    "start": "1672700",
    "end": "1679850"
  },
  {
    "text": "So in the first case, it's gonna be zero because we took the optimal action.",
    "start": "1679850",
    "end": "1686165"
  },
  {
    "text": "And the second case, it's gonna be 0.95 - 0.9 which is 0.05.",
    "start": "1686165",
    "end": "1691925"
  },
  {
    "text": "And then the third case, it's gonna be 0.95 - 0.1.",
    "start": "1691925",
    "end": "1696000"
  },
  {
    "text": "And then in the third case, it's gonna be zero or fourth case it's gonna be 0 and then it's gonna be 0.05 again.",
    "start": "1697810",
    "end": "1704195"
  },
  {
    "text": "Now, in this situation um, will we ever select a greedy? Will we ever select A3 again given the values we've seen so far?",
    "start": "1704195",
    "end": "1715070"
  },
  {
    "text": "No. Yeah, I see people say you know, no. So why not? [NOISE]",
    "start": "1715070",
    "end": "1729830"
  },
  {
    "text": "Is it possible, what's our current estimate of um, the reward for A3?",
    "start": "1729830",
    "end": "1735300"
  },
  {
    "text": ". Yeah. So I guess I didn't show, put those here but the, this was the actual. These were the rewards we got.",
    "start": "1735820",
    "end": "1742070"
  },
  {
    "text": "So it's 1, 1, 0. So our current estimate for A3 is 0.",
    "start": "1742070",
    "end": "1747424"
  },
  {
    "text": "We know our rewards are bounded between 0 and 1. None of our estimates can ever collapse below 0.",
    "start": "1747425",
    "end": "1755150"
  },
  {
    "text": "Um, and we already have a positive 1 for these other two actions, which means that their averages can never go to 0.",
    "start": "1755150",
    "end": "1763085"
  },
  {
    "text": "So we're never gonna take A3 again. Now, in this case,",
    "start": "1763085",
    "end": "1769790"
  },
  {
    "text": "that's not actually that bad like [LAUGHTER] here, here, that's not actually a problem because A3 is a bad arm and it's got a much lower expected reward.",
    "start": "1769790",
    "end": "1776705"
  },
  {
    "text": "Um, in other cases er, it could be that A3, we just got unlucky.",
    "start": "1776705",
    "end": "1781804"
  },
  {
    "text": "Um, and in that case, it could mean that we never should, never take the optimal action. Yeah.",
    "start": "1781805",
    "end": "1787910"
  },
  {
    "text": "I thought we used B star like in terms of the reward for an action.",
    "start": "1787910",
    "end": "1793610"
  },
  {
    "text": "Yes. And that's the same as this. Good question. So this is the same as B star. Yeah. And I'll go back and forth between notation but yeah, definitely just ask me.",
    "start": "1793610",
    "end": "1803399"
  },
  {
    "text": "So in this case, we're never gonna select A3 again and um, now notice that in the greedy case,",
    "start": "1803500",
    "end": "1809090"
  },
  {
    "text": "there are cases where um, if I had used slightly different values here um, that you might have selected A3 again later.",
    "start": "1809090",
    "end": "1816044"
  },
  {
    "text": "Because if it's the case that um, like if you didn't have Bernoulli rewards but you had Gaussians um,",
    "start": "1816045",
    "end": "1821740"
  },
  {
    "text": "it could be that the rewards for other arms dropped below another arm later and then you start to switch.",
    "start": "1821740",
    "end": "1828525"
  },
  {
    "text": "So you don't necessarily always stick with which other arm looked best at the beginning. But in this particular case with these outcomes",
    "start": "1828525",
    "end": "1834289"
  },
  {
    "text": "then you're not gonna select A3 ever again. [NOISE] All right, now let's do um, e-Greedy.",
    "start": "1834290",
    "end": "1840845"
  },
  {
    "text": "So in this case, we're gonna assume we got exactly the same outcomes for the first few. Um, and then what  said is that we're gonna um,",
    "start": "1840845",
    "end": "1847730"
  },
  {
    "text": "have ah, one-half minus epsilon um, over 2. So we're gonna split ties randomly again.",
    "start": "1847730",
    "end": "1855440"
  },
  {
    "text": "So with probability epsilon, we're gonna take um, with epsilon over 3.",
    "start": "1855440",
    "end": "1861770"
  },
  {
    "text": "We're gonna take A1 or A2 or A3.",
    "start": "1861770",
    "end": "1866250"
  },
  {
    "text": "And with 1 - epsilon over 2, we're gonna take A1 [NOISE] or A2.",
    "start": "1867250",
    "end": "1872390"
  },
  {
    "text": "[NOISE] Interesting, okay.",
    "start": "1872390",
    "end": "1879090"
  },
  {
    "text": "Okay. So in this case, it's gonna look almost identical except we're still gonna have some probability of taking A3 in this case.",
    "start": "1881560",
    "end": "1888635"
  },
  {
    "text": "And we can do a similar computation here. In this case um, we've assumed that all of these are exactly the same.",
    "start": "1888635",
    "end": "1895805"
  },
  {
    "text": "So e- e- e-Greedy in this case, will select A3 again. Yes. Um, if epsilon is fixed,",
    "start": "1895805",
    "end": "1902855"
  },
  {
    "text": "not updating, yeah. [NOISE]",
    "start": "1902855",
    "end": "1912350"
  },
  {
    "text": "Um, if Epsilon is fixed, how many times is it gonna select a_3?",
    "start": "1912350",
    "end": "1917190"
  },
  {
    "text": "Main question's whether it's finite or infinite. Maybe talk to your neighbor for a second and decide whether if Epsilon is fixed,",
    "start": "1924040",
    "end": "1932045"
  },
  {
    "text": "whether it'll be- a_3 will be selected a finite or infinite number of times, and what that means in terms of the regret?",
    "start": "1932045",
    "end": "1938000"
  },
  {
    "text": "[NOISE]",
    "start": "1938000",
    "end": "1967580"
  },
  {
    "text": "Okay. I'm gonna have everybody vote. So if you think it's gonna be selected an infinite number of times, raise your hand.",
    "start": "1967580",
    "end": "1972815"
  },
  {
    "text": "Great. So what's that mean in terms of regret, is there- it gonna be good or bad? It's gonna be bad.",
    "start": "1972815",
    "end": "1979250"
  },
  {
    "text": "Great. Bad, bad regret. I mean, in general, regret's gonna be unbounded unfortunately in these cases. [LAUGHTER] Um, so we're always gonna unfortunately have infinite regret but, um,",
    "start": "1979250",
    "end": "1987710"
  },
  {
    "text": "but the rate at which it grows can be [LAUGHTER] can be much smaller depending on the algorithm you do. [NOISE] So, um, in particular and,",
    "start": "1987710",
    "end": "1995255"
  },
  {
    "text": "uh, yeah, so we can also think about it in this case. So if you have a large gap which we do for a_3",
    "start": "1995255",
    "end": "2001030"
  },
  {
    "text": "here and we're gonna be selecting that arm an infinite number of times, then e-greedy is also gonna have,",
    "start": "2001030",
    "end": "2007090"
  },
  {
    "text": "um, a large regret. So I like this plot, this plot comes from David Silver's slides.",
    "start": "2007090",
    "end": "2012144"
  },
  {
    "text": "Um, uh, so if you explore forever, like, if you just do random, um, which we didn't discuss, but you could also do,",
    "start": "2012145",
    "end": "2018280"
  },
  {
    "text": "then you're gonna have linear total regret, um, which means that with the number of time steps, t, you're- you're gonna scale linearly with t. Essentially,",
    "start": "2018280",
    "end": "2026080"
  },
  {
    "text": "your regret is growing unboundedly and it's growing linearly which is equi- essentially proportio- I mean, it's gonna generally have a constant in front of it but",
    "start": "2026080",
    "end": "2033159"
  },
  {
    "text": "um, it's gonna be a constant times the worst you could do at every time step. Because if you always select the worst arm at every time step,",
    "start": "2033160",
    "end": "2040495"
  },
  {
    "text": "your regret will also grow linearly. So it's pretty bad. Um, if you explore never,",
    "start": "2040495",
    "end": "2045510"
  },
  {
    "text": "if you do greedy, uh, then it also can be linear, and if you do e-greedy, it's also linear.",
    "start": "2045510",
    "end": "2052024"
  },
  {
    "text": "So essentially, it means that all of these algorithms that we've been using so far can have really,",
    "start": "2052025",
    "end": "2057099"
  },
  {
    "text": "really bad performance, um, certainly in bad cases, and so the critical question is whether or not it's better tha- it's possible to do better than that.",
    "start": "2057100",
    "end": "2063700"
  },
  {
    "text": "So can we have sub- what's often called sublinear regret. So we want to have regret. If an algorithm's gonna be considered good in",
    "start": "2063700",
    "end": "2069159"
  },
  {
    "text": "terms of its performance and its sample efficiency, we're gonna want its regret to grow sublinearly. Um, when we think about this,",
    "start": "2069160",
    "end": "2079210"
  },
  {
    "text": "we're generally gonna think about, um, whether the bounds that we create, in the performance bounds are gonna be problem independent or problem dependent.",
    "start": "2079210",
    "end": "2086514"
  },
  {
    "text": "So most of the bounds, i- it depends a little bit. For MDPs, most of the bounds that we can get are gonna be problem independent.",
    "start": "2086515",
    "end": "2093865"
  },
  {
    "text": "For bandits, there's a lot of problem dependent bounds. Um, problem dependent bounds in the case of bandits mean that, um,",
    "start": "2093865",
    "end": "2100045"
  },
  {
    "text": "the amount of regret that we get is gonna be a function of those gaps, and that should be sort of intuitive.",
    "start": "2100045",
    "end": "2107500"
  },
  {
    "text": "So if you have- let's imagine that we just have two arms, like, a_1 and a_2 and the mean,",
    "start": "2107500",
    "end": "2113710"
  },
  {
    "text": "um, the expected reward.",
    "start": "2113710",
    "end": "2116480"
  },
  {
    "text": "So if this is, the expected reward is 1 and this is an expected reward of 0.001,",
    "start": "2118800",
    "end": "2124420"
  },
  {
    "text": "intuitively it should be easier to figure out that arm one is better than arm two that if this is like 0.53 and this is 0.525.",
    "start": "2124420",
    "end": "2132109"
  },
  {
    "text": "Because in one case, really hard to tell the difference between the mean of the two arms and the other case,",
    "start": "2132930",
    "end": "2138700"
  },
  {
    "text": "the means are really, really far apart. So somewhat intuitively if the gap is really large,",
    "start": "2138700",
    "end": "2144760"
  },
  {
    "text": "it should be easier for us to learn, and if it's really small, it should be harder. Yeah. Um, so if the, uh- [NOISE]",
    "start": "2144760",
    "end": "2151090"
  },
  {
    "text": "is that [OVERLAPPING]. [NOISE] Uh, so, uh, optimal reward is deterministic, for some actions.",
    "start": "2151090",
    "end": "2157270"
  },
  {
    "text": "I mean, we have zero regret. [NOISE] Good question. Um, uh, the question is if the optimal are- if the,",
    "start": "2157270",
    "end": "2163480"
  },
  {
    "text": "uh, optimal reward is, uh, are you just saying optimal reward? Yeah. The optimal reward is deterministic till we have zero regret, if you know it.",
    "start": "2163480",
    "end": "2172555"
  },
  {
    "text": "So if you know that all the rewards of the arms are [NOISE] deterministic, then you just need to pull them once. Then you can make a good decision and then you're done.",
    "start": "2172555",
    "end": "2179485"
  },
  {
    "text": "In general, these algorithms aren't going to know that information if you don't- even if it was deterministic you're still gonna have these other forms of bounds.",
    "start": "2179485",
    "end": "2186400"
  },
  {
    "text": "So what about the greedy case then? What if it's deterministic? If it's determinant- if in a greedy [NOISE] case- it's a good question.",
    "start": "2186400",
    "end": "2194485"
  },
  {
    "text": "In a greedy case, if your real rewards are deterministic, um, then you don't need- then you would have pulled all the arms once,",
    "start": "2194485",
    "end": "2199510"
  },
  {
    "text": "and you will make no mistakes. You'll make, uh, you'll have zero regret basically from that point onwards. So we'd consider that as just like you'd have some initial constant regret,",
    "start": "2199510",
    "end": "2206440"
  },
  {
    "text": "and then afterward it would be independent of t. Did you have a question? Yeah. [NOISE] Um- Remind me your name.",
    "start": "2206440",
    "end": "2212320"
  },
  {
    "text": "[NOISE] Is it also a function of the variance of each arm- Oh, good question. - [OVERLAPPING] because in that case like you take upon [inaudible]",
    "start": "2212320",
    "end": "2220569"
  },
  {
    "text": "Yeah. Great question. So we're not gonna ta- uh, question is whether it also depends on the variance in addition to the mean. Um, yes, we're not gonna talk about that,",
    "start": "2220570",
    "end": "2227829"
  },
  {
    "text": "um, uh, but in addition to problem dependent bounds, you can certainly think about parametric, like, if you have some parametric knowledge",
    "start": "2227830",
    "end": "2234085"
  },
  {
    "text": "on the distribution of the rewards, then you can exploit it. Um, so if you know it's a Gaussian or other things like that.",
    "start": "2234085",
    "end": "2239275"
  },
  {
    "text": "Um, I think in general if you know them, or like if you have information about the moments, then you should be able to exploit it.",
    "start": "2239275",
    "end": "2245395"
  },
  {
    "text": "Most of the information that I've seen is, um, looking at the mean and the variance. We very frequently throughout a lot of",
    "start": "2245395",
    "end": "2251170"
  },
  {
    "text": "this stuff is are gonna assume that our rewards are bounded. Um, that's gonna be important for most of the proofs that we do,",
    "start": "2251170",
    "end": "2256915"
  },
  {
    "text": "even without making any other parametric assumptions. Okay. But then the other version of this is problem independent,",
    "start": "2256915",
    "end": "2263215"
  },
  {
    "text": "which just says [NOISE] regardless of the, of the domain you're in, regardless of the gaps, can we also show that, um, uh,",
    "start": "2263215",
    "end": "2270250"
  },
  {
    "text": "regardless of any structure of the problem, can we still ensure that regret grows up linearly, and that's what we're gonna mostly focus on today.",
    "start": "2270250",
    "end": "2277760"
  },
  {
    "text": "So I think lower bounds, lower theoretical bounds are- are helpful to try to understand how hard a problem is.",
    "start": "2278190",
    "end": "2283915"
  },
  {
    "text": "So I said, is it possible for something to be sublinear, um, and there's been previous work to look at sort of,",
    "start": "2283915",
    "end": "2291370"
  },
  {
    "text": "well, how much does the regret have to grow? So, um, in this case, this is regret we're mostly getting,",
    "start": "2291370",
    "end": "2298300"
  },
  {
    "text": "um, to, mu's, to write out regret. But in this case they- they prove that in terms of the gaps, um,",
    "start": "2298300",
    "end": "2304045"
  },
  {
    "text": "and the similarity in the dis- distributions in terms of the KL divergence, the KL divergence, that you can show a lower bound on how much regret grows.",
    "start": "2304045",
    "end": "2313780"
  },
  {
    "text": "[NOISE] So this is where there's a sort of unfortunate [NOISE] aspect of regret growing unboundedly comes up.",
    "start": "2313780",
    "end": "2320050"
  },
  {
    "text": "If you don't make any other assumptions on the distributions of your rewards, um, uh, in general,",
    "start": "2320050",
    "end": "2325765"
  },
  {
    "text": "the regret of your, um, your regret will grow unboundedly, and it will ha- do so in terms of these gaps,",
    "start": "2325765",
    "end": "2332380"
  },
  {
    "text": "and the KL divergence. But it's still sublinear. So that's nice. So it's growing logarithmically with t here. T is the time steps.",
    "start": "2332380",
    "end": "2342140"
  },
  {
    "text": "It's encouraging that, like, our lower bound suggests that there's room for traction, right?",
    "start": "2342780",
    "end": "2347950"
  },
  {
    "text": "That we can definitely, um, at least there's no formal result that says it has to be linear, it says no, we should be able to grow much slower.",
    "start": "2347950",
    "end": "2355330"
  },
  {
    "text": "So how could we do- why- how would we maybe do this? So this is now, um, we've talked about a particular framework which is regret,",
    "start": "2355330",
    "end": "2362095"
  },
  {
    "text": "we talked about a setting, which is bandits, and now we're gonna talk about an approach which is, um, optimism in the face of uncertainty.",
    "start": "2362095",
    "end": "2367990"
  },
  {
    "text": "And the idea is simply to choose actions which might have high value. Why should we do this? Um.",
    "start": "2367990",
    "end": "2374965"
  },
  {
    "text": "I have a question on the- in the previous slide, um, so is that true at every t, or only in the one",
    "start": "2374965",
    "end": "2382540"
  },
  {
    "text": "of because as it's really isn't that just saying that it's greater than infinity? All right. Um, that's a good question.",
    "start": "2382540",
    "end": "2390445"
  },
  {
    "text": "Question is about whether i- it holds. I think this holds on every time step, I'd have to check the exact, like,",
    "start": "2390445",
    "end": "2395920"
  },
  {
    "text": "way that they wrote this, um, uh, there's also constants, um, but I think this should hold on a per time step basis.",
    "start": "2395920",
    "end": "2403810"
  },
  {
    "text": "We're really saying that as time is going along, it should be true [OVERLAPPING] Yeah. The limit as t goes large,",
    "start": "2403810",
    "end": "2410079"
  },
  {
    "text": "this is where I'd have to look back at the original paper, um, there's probably additional constant terms which are transitory,",
    "start": "2410080",
    "end": "2415568"
  },
  {
    "text": "um, and so this is probably the dominant term as t goes large. But in a lot of the regret bounds particularly in our MDP cases,",
    "start": "2415569",
    "end": "2422890"
  },
  {
    "text": "we often have transitory terms that are independent of the time step, but are still large early on. That's my guess. But great question.",
    "start": "2422890",
    "end": "2429535"
  },
  {
    "text": "Okay. So optimism in the face of uncertainty, um, says that we should choose actions that might have a high value.",
    "start": "2429535",
    "end": "2436765"
  },
  {
    "text": "Why? Well, there's two possible outcomes. If we pick something that we think might be good, um, one is it's good.",
    "start": "2436765",
    "end": "2444140"
  },
  {
    "text": "So if it is good, or I'll be more precise in this case. So let's say we select, so, a_1 and 1 is a_1 has high reward.",
    "start": "2447390",
    "end": "2459650"
  },
  {
    "text": "So that's good. If we, um, if we took an action and it actually does- and we- because we thought it",
    "start": "2462210",
    "end": "2467770"
  },
  {
    "text": "might have high reward and actually does have high reward, then we're gonna have small regret. So that's good. Um, what's the other outcome?",
    "start": "2467770",
    "end": "2473635"
  },
  {
    "text": "a_1 does not have high reward. Has lower has, um, when we sample this,",
    "start": "2473635",
    "end": "2479755"
  },
  {
    "text": "we get our r for a_1 with lower reward. [NOISE]",
    "start": "2479755",
    "end": "2492850"
  },
  {
    "text": "Well, if we get something with low reward, we learn something. So, we're like, hey, you know, we tried that restaurant again, we thought it was great the first time.",
    "start": "2492850",
    "end": "2498880"
  },
  {
    "text": "The second time it was horrible. So, now we've learned that that restaurant is not as good and we update our estimate of how good that restaurant is.",
    "start": "2498880",
    "end": "2506155"
  },
  {
    "text": "And that means we don't think that a- that action has as high a value as it did before. So, essentially, either the world really is great,",
    "start": "2506155",
    "end": "2513730"
  },
  {
    "text": "and in which case that's great, we're going to have low regret. Or the world is not that great and then we learn something. So, this gave us information.",
    "start": "2513730",
    "end": "2520730"
  },
  {
    "text": "And so this b, acting optimistically gives us",
    "start": "2523230",
    "end": "2528490"
  },
  {
    "text": "both information about the reward or allows us to achieve high reward. And so it turns out to have been a really nice principle. It's been around since at least Leslie Kaelbling in 1993.",
    "start": "2528490",
    "end": "2539830"
  },
  {
    "text": "Introduced this idea of sort of interval estimation and then there started to be a lot of analysis of these types of optimism under uncertainty techniques.",
    "start": "2539830",
    "end": "2548390"
  },
  {
    "text": "So, how can we do this more formally, or like, where would we get to be more precise about what it means for an action to have a high-value?",
    "start": "2549720",
    "end": "2556690"
  },
  {
    "text": "Let's imagine that we estimate an upper confidence bound for each action value, such that the real value of",
    "start": "2556690",
    "end": "2562750"
  },
  {
    "text": "that action is less than or equal to the upper confidence bound with high probability.",
    "start": "2562750",
    "end": "2569630"
  },
  {
    "text": "And those upper confidence bounds in general are going to depend on how many times we've selected that particular action.",
    "start": "2570660",
    "end": "2577195"
  },
  {
    "text": "Because we would like it to be such that if we've selected that action a lot, that upper confidence bound should be pre- pretty close to Q of A.",
    "start": "2577195",
    "end": "2585295"
  },
  {
    "text": "And if we haven't selected it very much, maybe we're really optimistic.",
    "start": "2585295",
    "end": "2589880"
  },
  {
    "text": "And then we can divide an upper confidence bound bandit algorithm by just selecting whichever action has the highest upper confidence bound.",
    "start": "2590700",
    "end": "2598165"
  },
  {
    "text": "So, for every single action we maintain an upper confidence bound, and then we just select whichever one has the max,",
    "start": "2598165",
    "end": "2603625"
  },
  {
    "text": "and then we update the upper confidence bound for that action after we take it. So, a UCB algorithm would for t = 1 dot, dot, dot,",
    "start": "2603625",
    "end": "2615670"
  },
  {
    "text": "we would first have an initialization phase where we pull each arm once,",
    "start": "2615670",
    "end": "2621020"
  },
  {
    "text": "each arm once, and then we compute UT of at for all A.",
    "start": "2621510",
    "end": "2632650"
  },
  {
    "text": "And then for T = t dot, dot, dot, we would select at equaling this arg max,",
    "start": "2632650",
    "end": "2639590"
  },
  {
    "text": "and then we would get a reward that is sampled from the true reward distribution for that arm.",
    "start": "2642810",
    "end": "2649970"
  },
  {
    "text": "And then we would update Ut of",
    "start": "2652950",
    "end": "2658329"
  },
  {
    "text": "at and all other arms.",
    "start": "2658330",
    "end": "2666050"
  },
  {
    "text": "Turns out that often we have to update not just the action of the arm that we took, but the action of all the other arms we took too.",
    "start": "2668940",
    "end": "2675895"
  },
  {
    "text": "And this basically comes into, you, you don't have to do that, but in terms of the theory we often have to do that in order to",
    "start": "2675895",
    "end": "2682180"
  },
  {
    "text": "account for high probability bounds. And we'll see more about that in just a second. So, every time you get a reward,",
    "start": "2682180",
    "end": "2689260"
  },
  {
    "text": "you update the upper confidence bounds of all your arms, and then you select the next action and you repeat this just over and over again.",
    "start": "2689260",
    "end": "2695810"
  },
  {
    "text": "Okay. So, how are we going to define these U of T? So, we're going to use Hoeffding's inequality, so a refresher.",
    "start": "2696450",
    "end": "2704545"
  },
  {
    "text": "In Hoeffding's inequality, we can apply this to a set of iid random variables.",
    "start": "2704545",
    "end": "2710395"
  },
  {
    "text": "We're going to assume right now that all of them are bounded between 0 and 1, and we're going to define our sample mean just to be a,",
    "start": "2710395",
    "end": "2719155"
  },
  {
    "text": "the average over all of those variables. And then what Hoeffding says is that the probability of that expected mean is,",
    "start": "2719155",
    "end": "2727880"
  },
  {
    "text": "like, this is the true expected mean. So, this is the true mean. This is our empirical mean.",
    "start": "2728220",
    "end": "2735380"
  },
  {
    "text": "And this is, you can think of this as like some epsilon. This is just some constant.",
    "start": "2736500",
    "end": "2742760"
  },
  {
    "text": "Is the probability that your true mean is greater than the empirical mean plus some constant U,",
    "start": "2747270",
    "end": "2754765"
  },
  {
    "text": "is less than or equal to expo- the exponential minus 2nu squared.",
    "start": "2754765",
    "end": "2759940"
  },
  {
    "text": "So, this is the number of samples we have. Okay. So, we can also invert this to say,",
    "start": "2759940",
    "end": "2772390"
  },
  {
    "text": "if you want this to be true with a certain probability, you can pick a mu so that Xn plus mu is gonna be at least as large as the real mean.",
    "start": "2772390",
    "end": "2784265"
  },
  {
    "text": "So, let's say what we wanna do is, we want that this to, we want that the empirical mean plus mu,",
    "start": "2784265",
    "end": "2790435"
  },
  {
    "text": "the probability that that's less than the real mean, to equal to delta over T squared.",
    "start": "2790435",
    "end": "2796910"
  },
  {
    "text": "And we'll see why we might want to choose that particular probability shortly, but let's imagine for a second that's what we want our probability to be,",
    "start": "2796910",
    "end": "2804164"
  },
  {
    "text": "since then we can solve for what mu has to be. Okay, So, that's exponential -2nu squared has to equal to delta over t squared.",
    "start": "2804165",
    "end": "2813880"
  },
  {
    "text": "And then what we do is we just solve for what mu is. Thanks for letting me know.",
    "start": "2817310",
    "end": "2823830"
  },
  {
    "text": "Okay. So, mu in this case is going to be equal to the square root 1 over 2n log of t squared over delta.",
    "start": "2823830",
    "end": "2835730"
  },
  {
    "text": "So, I just solve for that equation. What does that tell us? That says that if we do,",
    "start": "2843480",
    "end": "2848935"
  },
  {
    "text": "if we define our ut of, or in this case we define,",
    "start": "2848935",
    "end": "2854484"
  },
  {
    "text": "I'll keep with the same notation as for Hoeffding. So, if we have Xn plus mu,",
    "start": "2854485",
    "end": "2861295"
  },
  {
    "text": "with that particular choice of mu, that's generally going to be greater than or equal to the true expected value of X,",
    "start": "2861295",
    "end": "2868420"
  },
  {
    "text": "with probability greater than or equal to 1 - delta over t squared.",
    "start": "2868420",
    "end": "2875270"
  },
  {
    "text": "So, this, Hoeffding's inequality gives us a way to define an upper bound. Because instead of these being Xs right now,",
    "start": "2878880",
    "end": "2885700"
  },
  {
    "text": "you can imagine those are just pulled from our arm and those are all rewards. And so this says, if you take your empirical average of your words so far,",
    "start": "2885700",
    "end": "2892540"
  },
  {
    "text": "and you add in this upper bound, which depends on the number of times we pulled that arm and t. So,",
    "start": "2892540",
    "end": "2901030"
  },
  {
    "text": "t here notices the total number of time steps we pulled any arms, and n is the number of times we pulled that arm.",
    "start": "2901030",
    "end": "2907990"
  },
  {
    "text": "So, they're not the same thing. So, we're [NOISE] inside of this competence bound, we have a competence bound that is decreasing at",
    "start": "2907990",
    "end": "2914230"
  },
  {
    "text": "a rate of how many times we pull this particular arm, and then we have a log term which is increasing at",
    "start": "2914230",
    "end": "2919660"
  },
  {
    "text": "the rate of the number of times we pulled any arm. And that is the reason why after each time step,",
    "start": "2919660",
    "end": "2926109"
  },
  {
    "text": "we have to up- um, update the upper confidence bounds of all the arms. So, you kind of have these two competing rates that are going on.",
    "start": "2926110",
    "end": "2934510"
  },
  {
    "text": "As you pull an arm more, you're gonna get a better estimate of its reward, so it's shrinking.",
    "start": "2934510",
    "end": "2939565"
  },
  {
    "text": "But then you also have this slower growing term, this log, which is increasing with the number of time steps. All right.",
    "start": "2939565",
    "end": "2948760"
  },
  {
    "text": "So, this is one way we could define our upper confidence bounds. So, we could use this in the case of our rewards.",
    "start": "2948760",
    "end": "2954579"
  },
  {
    "text": "So, we might wanna say that ut of at is equal to our empirical average of that arm,",
    "start": "2954580",
    "end": "2961465"
  },
  {
    "text": "+ 1 over 2, the number of times we pulled that arm,",
    "start": "2961465",
    "end": "2967465"
  },
  {
    "text": "times log of t squared divided by delta.",
    "start": "2967465",
    "end": "2972230"
  },
  {
    "text": "So this is how, one way for us to define our upper confidence bounds. [NOISE] All right.",
    "start": "2976990",
    "end": "2987005"
  },
  {
    "text": "So now the next question is. Okay. So we've done that, how is that gonna help us in terms of showing that maybe",
    "start": "2987005",
    "end": "2992420"
  },
  {
    "text": "the regret of something which is optimistic is actually sub-linear? Okay. So what we're gonna do now is,",
    "start": "2992420",
    "end": "3000580"
  },
  {
    "text": "um, I'll do a quick poll. Do you guys want me to write it on here or do you guys want me to do it on the board? So raise your hand if you want it on the board. All right.",
    "start": "3000580",
    "end": "3008710"
  },
  {
    "text": "Raise your hand if you want it on here. Okay. We'll do this next part on the board [LAUGHTER] that was easy. Was there a question in the back?",
    "start": "3008710",
    "end": "3014050"
  },
  {
    "text": "Yeah. I have question isn't this derivation about t because it seems like. [OVERLAPPING] About what? You first introduced it, about t?",
    "start": "3014050",
    "end": "3020830"
  },
  {
    "text": "Yes. It seems you first introduced it there was basically a constant the way you moved around but then later you're saying that that's actually the time that we we're updating every time step.",
    "start": "3020830",
    "end": "3027310"
  },
  {
    "text": "So how are we able to do that? Yeah. It's a good question. So, um, you're right. And I'm being slightly imprecise about this.",
    "start": "3027310",
    "end": "3034135"
  },
  {
    "text": "If you know what the time horizon is that you're gonna be acting on a bandit, you could set t to be the maximum.",
    "start": "3034135",
    "end": "3040855"
  },
  {
    "text": "So you, if you know that you're gonna act for t time steps, you can plug that in and then your confidence bounds are, then that log term is fixed basically.",
    "start": "3040855",
    "end": "3049685"
  },
  {
    "text": "Um, in online settings if you don't know that, you can also constantly be updating it with a time step.",
    "start": "3049685",
    "end": "3056290"
  },
  {
    "text": "It's a good question. Yeah. How is delta decided? How is what? Pardon.",
    "start": "3056290",
    "end": "3061630"
  },
  {
    "text": "How is delta, is like what is delta? Okay. Good question. Um, so, question is what is delta.",
    "start": "3061630",
    "end": "3067539"
  },
  {
    "text": "What we're gonna, I did not tell you, uh, in this ca- well, in this case it's telling us, um, it's specifying what is the probability",
    "start": "3067540",
    "end": "3074050"
  },
  {
    "text": "this is holding like what this inequality is holding. Later we're gonna pro- provide a regret bound that is high probability.",
    "start": "3074050",
    "end": "3080319"
  },
  {
    "text": "So we're gonna say we're gonna have a regret bound which is something that like with probability is 1 minus a function of delta,",
    "start": "3080320",
    "end": "3086920"
  },
  {
    "text": "um, your regret will be sub-linear. So that's how. You can get expected regret bounds too and the UCB paper which, um,",
    "start": "3086920",
    "end": "3095815"
  },
  {
    "text": "one of the original UCB papers provides an expected bound but I thought it was a little, the, this bound was a little bit easier to do in class.",
    "start": "3095815",
    "end": "3102160"
  },
  {
    "text": "So I thought I would do the high probability bound. Yeah. So before we were talking about regret,",
    "start": "3102160",
    "end": "3107895"
  },
  {
    "text": "I didn't exactly understand how you use regret to update your estimate of the action value.",
    "start": "3107895",
    "end": "3113700"
  },
  {
    "text": "Oh, good question. Um, so question is, do we use or how would we use the regret bound, the regret to update our estimate action, we don't.",
    "start": "3113700",
    "end": "3121140"
  },
  {
    "text": "Regret is just a tool to analyze our algorithm. Great clarification. So regret is a way for us to analyze whether or not an algorithm is gonna be good or bad",
    "start": "3121140",
    "end": "3128160"
  },
  {
    "text": "in terms of how fast the regret gro- grows but it's not used in the algorithm itself. The algorithm doesn't compute regret.",
    "start": "3128160",
    "end": "3134695"
  },
  {
    "text": "And it's not used in terms of the updating. Excuse me. Okay. So actually I'll leave this one up here.",
    "start": "3134695",
    "end": "3141984"
  },
  {
    "text": "So you guys can continue to see that. All right. So let's do our proof. So what we're gonna wanna do now is we're gonna wanna try to",
    "start": "3141985",
    "end": "3148869"
  },
  {
    "text": "prove something about, um, the regret but before and how quickly it grows for the upper confidence bound algorithm.",
    "start": "3148870",
    "end": "3156609"
  },
  {
    "text": "But before I prove that, I'm gonna try to argue to you that, um, we're gonna look at, sort of, the probability of failure of these regret bounds,",
    "start": "3156610",
    "end": "3167230"
  },
  {
    "text": "of these confidence bounds. So what I said here is that [NOISE] we're gonna define these upper confidence bounds like this in",
    "start": "3167230",
    "end": "3174250"
  },
  {
    "text": "terms of the empirical mean for that arm so far plus this term that depends on the number of times we pulled that arm.",
    "start": "3174250",
    "end": "3180145"
  },
  {
    "text": "And what I wanna convince you now is, what is the probability, what is the probability that on one step, that on some step,",
    "start": "3180145",
    "end": "3195230"
  },
  {
    "text": "step the confidence bounds will fail to hold.",
    "start": "3196530",
    "end": "3200900"
  },
  {
    "text": "Why is this bad? Okay. So we wanna bound the probability that on",
    "start": "3214200",
    "end": "3221410"
  },
  {
    "text": "any step, excuse me, as we're running our algorithm that our confidence bounds fail to hold. Why? Because if they all hold,",
    "start": "3221410",
    "end": "3228805"
  },
  {
    "text": "we can guarantee we're gonna be making some, um, we're gonna have some nice properties. Okay. So note, if all the confidence bounds hold,",
    "start": "3228805",
    "end": "3238545"
  },
  {
    "text": "like, on every step then we can ensure the following. So if all confidence hold, bounds hold then Ut of at,",
    "start": "3238545",
    "end": "3251220"
  },
  {
    "text": "this is the actual arm we selected, is gonna be greater than q of a star.",
    "start": "3251220",
    "end": "3260440"
  },
  {
    "text": "The real value. The real value of the optimal arm.",
    "start": "3260690",
    "end": "3265630"
  },
  {
    "text": "Okay. So why is this true?",
    "start": "3266150",
    "end": "3272289"
  },
  {
    "text": "There's two cases here, either",
    "start": "3274550",
    "end": "3279610"
  },
  {
    "text": "at is equal to a star,  or at is not equal to a star.",
    "start": "3279610",
    "end": "3285730"
  },
  {
    "text": "So let's just take a second and maybe talk to your neighbor [NOISE] to say, if it's the case that our confidence bounds hold which means",
    "start": "3285730",
    "end": "3294210"
  },
  {
    "text": "that really is the case that we have ut with, um, that this confidence bound is,",
    "start": "3294210",
    "end": "3300915"
  },
  {
    "text": "um, gonna be greater than or equal to the mean for that arm. So if these are true confidence bounds,",
    "start": "3300915",
    "end": "3307780"
  },
  {
    "text": "this equation is holding, we're not getting a failure. So we know that Q t which is this is gonna be greater than, um,",
    "start": "3307780",
    "end": "3314560"
  },
  {
    "text": "the real expected value for that arm. Okay. So if that's true,",
    "start": "3314560",
    "end": "3320349"
  },
  {
    "text": "then this is gonna hold at every time step.",
    "start": "3320350",
    "end": "3324050"
  },
  {
    "text": "So maybe, let's take a neighbor or if it's not clear what I'm asking or how to think about that, feel free to raise your hand too.",
    "start": "3327450",
    "end": "3333849"
  },
  {
    "text": "So there's two cases either the arm that we selected is a star or the arm we selected is not a star and in both cases, this is gonna hold,",
    "start": "3333850",
    "end": "3344350"
  },
  {
    "text": "if the confidence bounds are correct.",
    "start": "3344350",
    "end": "3347540"
  },
  {
    "text": "So maybe let's take a second to to think about this or feel free to raise your hand if it's not clear how to,",
    "start": "3351060",
    "end": "3356965"
  },
  {
    "text": "how to get started on that. I wanna be just be clear here so.",
    "start": "3356965",
    "end": "3363430"
  },
  {
    "text": "[NOISE]",
    "start": "3363430",
    "end": "3402099"
  },
  {
    "text": "I just wanted to note at the top there that if the confidence bounds hold, then that upper confidence bounds which is equal to that is going to be greater than",
    "start": "3402100",
    "end": "3410305"
  },
  {
    "text": "the real expected value for that arm. Yeah. On the confidence bound on your other equation, you have written over there?",
    "start": "3410305",
    "end": "3418165"
  },
  {
    "text": "Yeah. So you're saying that the optimal, like your optimal Q value,",
    "start": "3418165",
    "end": "3423250"
  },
  {
    "text": "should be less than all the confidence bounds for any action? No, good question. So just need to clarify what it is.",
    "start": "3423250",
    "end": "3429475"
  },
  {
    "text": "This is saying for the arm that you selected, the upper confidence bound of the arm you selected is- has",
    "start": "3429475",
    "end": "3435730"
  },
  {
    "text": "a value that- that- that upper confidence bound that you use to choose the arm, whichever arm you selected,",
    "start": "3435730",
    "end": "3440860"
  },
  {
    "text": "the upper confidence bound of that arm is higher than the true value of the optimal arm.",
    "start": "3440860",
    "end": "3448615"
  },
  {
    "text": "That's what this equation is saying. Saying that if the confidence bounds hold on all time steps,",
    "start": "3448615",
    "end": "3455875"
  },
  {
    "text": "which they might not, but let's say that they do because these are only high probability bounds, but if they hold on all time steps,",
    "start": "3455875",
    "end": "3461260"
  },
  {
    "text": "then whatever arm you selected, its upper confidence bound is higher than the value of the true arm.",
    "start": "3461260",
    "end": "3468235"
  },
  {
    "text": "The real value of the true arm. Okay, and I just wanted",
    "start": "3468235",
    "end": "3474280"
  },
  {
    "text": "to be clear what I mean for the confidence bound to hold, I put this up there. So that means that the upper confidence bound of an arm holding means that",
    "start": "3474280",
    "end": "3481599"
  },
  {
    "text": "that upper confidence bound which is defined in that way is greater than the true value of that arm.",
    "start": "3481600",
    "end": "3487190"
  },
  {
    "text": "So let's work- work through this a little bit. So let's say there's two cases. So if A T is equal to A star,",
    "start": "3491430",
    "end": "3501650"
  },
  {
    "text": "then that's what this is saying is that saying is, is Ut of a star greater than Q of a star?",
    "start": "3502050",
    "end": "3511240"
  },
  {
    "text": "Does that hold if the confidence bounds hold? Yes. By definition. So if you look up there.",
    "start": "3511240",
    "end": "3517660"
  },
  {
    "text": "So the upper confidence bounds if it holds for an action for that- the upper confidence bound for an action has to",
    "start": "3517660",
    "end": "3524320"
  },
  {
    "text": "be bigger than the mean for that action. If that upper confidence bounds hold.",
    "start": "3524320",
    "end": "3529375"
  },
  {
    "text": "Okay. So this ho- this works. So if we really selected the optimal action,",
    "start": "3529375",
    "end": "3534655"
  },
  {
    "text": "we've defined our upper confidence bounds, so they really are better than the mean of that arm, and so this holds.",
    "start": "3534655",
    "end": "3540760"
  },
  {
    "text": "The other case is that at is not equal to a star. So what does that mean?",
    "start": "3540760",
    "end": "3546640"
  },
  {
    "text": "That means that Ut of at is greater than Ut of a star.",
    "start": "3546640",
    "end": "3553609"
  },
  {
    "text": "Because otherwise, we would have selected a star. It means that some other arm had a higher upper confidence bound than the optimal action,",
    "start": "3554250",
    "end": "3561970"
  },
  {
    "text": "and we know that this is greater than Q of a star. Okay? So if",
    "start": "3561970",
    "end": "3575619"
  },
  {
    "text": "the confidence bound holds, we know at every single time step the upper confidence bound of the arm we selected is",
    "start": "3575620",
    "end": "3582160"
  },
  {
    "text": "better than the true mean of the optimal arm. Yes.",
    "start": "3582160",
    "end": "3589329"
  },
  {
    "text": "Is that true in the epsilon greedy case as well? Is it true in epsilon greedy case as well?",
    "start": "3589330",
    "end": "3595135"
  },
  {
    "text": "I know I- I don't follow your question yet. Like, you're selecting this arm using some strategy, right?",
    "start": "3595135",
    "end": "3606505"
  },
  {
    "text": "Yeah. And it gets some maximizing action, right? No. Ut, so this only holds,",
    "start": "3606505",
    "end": "3614589"
  },
  {
    "text": "this part only holds because we're picking the arg max, you're not going to be able to see this,",
    "start": "3614590",
    "end": "3620050"
  },
  {
    "text": "but the arg max A of Ut of at. So that first inequality,",
    "start": "3620050",
    "end": "3625285"
  },
  {
    "text": "only- well, there might be other algorithms that t holds for too, but it holds in particular for the upper confidence bound.",
    "start": "3625285",
    "end": "3630549"
  },
  {
    "text": "Great- great question. Okay. So this says if we could get it,",
    "start": "3630550",
    "end": "3637075"
  },
  {
    "text": "and we will see shortly why that matters, but kind of intuitively. This says if the confidence bounds hold,",
    "start": "3637075",
    "end": "3643194"
  },
  {
    "text": "then we know that separate confidence bound of the arm we select is going to be better than the optimal arm.",
    "start": "3643195",
    "end": "3648415"
  },
  {
    "text": "And the reason we're going to want that is later when we're doing the regret bounds, we do not want to deal with properties we don't",
    "start": "3648415",
    "end": "3654700"
  },
  {
    "text": "observe namely the value of the optimal arm. Because we don't know what Q of a star is.",
    "start": "3654700",
    "end": "3660595"
  },
  {
    "text": "We can't com- we don't know which arm it is. So when we look at regret bound right now, regret bounds are in terms of Q of a star.",
    "start": "3660595",
    "end": "3667990"
  },
  {
    "text": "We don't know what that quantity is. So we're going to need to figure out some way to get rid of that quantity and we're going to end up using these upper bounds,",
    "start": "3667990",
    "end": "3674965"
  },
  {
    "text": "but we're going to need the fact that the upper bound of the arm we select is better than the Q star, Q of a star.",
    "start": "3674965",
    "end": "3680695"
  },
  {
    "text": "Okay. So- so this is saying that that's true if our upper confidence bounds hold, what is the probability that that occurs?",
    "start": "3680695",
    "end": "3688465"
  },
  {
    "text": "Okay. So what that means is, if we want to say that on all time steps,",
    "start": "3688465",
    "end": "3696550"
  },
  {
    "text": "this is a union bound, this is our union over events. The union over all the events for ut = 1 to t of the probability that",
    "start": "3696550",
    "end": "3705570"
  },
  {
    "text": "Q of a star minus the upper confidence bound of the action that we took.",
    "start": "3705570",
    "end": "3712450"
  },
  {
    "text": "We want this, oops, not that way.",
    "start": "3713480",
    "end": "3720280"
  },
  {
    "text": "We want the probability of this, which is essentially the probability of failure. So this is, what's the pro- this is if all confidence bounds hold things are good,",
    "start": "3720360",
    "end": "3728890"
  },
  {
    "text": "this says, what is the probability that that failed? That the arm that you took it actually is not better.",
    "start": "3728890",
    "end": "3734619"
  },
  {
    "text": "The upper confidence bound is not better than the- the real mean of the optimal arm?",
    "start": "3734620",
    "end": "3739840"
  },
  {
    "text": "So this is the failure case, where the confidence, but um, we're gonna say that if we look at that,",
    "start": "3739840",
    "end": "3745194"
  },
  {
    "text": "we- we don't want this thing to happen. We can upper bound that by making sure our upper confidence bounds hold at all time steps.",
    "start": "3745195",
    "end": "3753640"
  },
  {
    "text": "Okay. So these are the arms.",
    "start": "3753640",
    "end": "3758875"
  },
  {
    "text": "So what I said up there is that if all of our confidence bounds hold on all time steps we can ensure that.",
    "start": "3758875",
    "end": "3764395"
  },
  {
    "text": "So we're now going to write that down in terms of what? The probability that the upper confidence bounds do hold on all time steps.",
    "start": "3764395",
    "end": "3770215"
  },
  {
    "text": "And so we're gonna do probability that Q of at,",
    "start": "3770215",
    "end": "3779755"
  },
  {
    "text": "that's Q hat of at is greater than U.",
    "start": "3779755",
    "end": "3784960"
  },
  {
    "text": "Okay. This is the upper confidence bound we defined over there. This is just saying that the upper confidence bound holds for each arm on each time step.",
    "start": "3784960",
    "end": "3793015"
  },
  {
    "text": "Well, by definition, over there we said we- we picked an upper confidence bound to make sure this held with the least probability of delta over t squared.",
    "start": "3793015",
    "end": "3802940"
  },
  {
    "text": "Because that's how we defined our upper confidence bound. We picked a big enough thing to add onto our empirical means so that we",
    "start": "3808050",
    "end": "3814960"
  },
  {
    "text": "could ensure that the upper confidence bound really was larger than our mean. So now we have a union over all time steps,",
    "start": "3814960",
    "end": "3823420"
  },
  {
    "text": "a union over all arms, delta divided by t squared. And note that if you sum over t = 1 to",
    "start": "3823420",
    "end": "3833440"
  },
  {
    "text": "infinity of t to the -t, that's equal to pi squared over 6 which is less than 2.",
    "start": "3833440",
    "end": "3840385"
  },
  {
    "text": "So when you do the sum you get 2m delta.",
    "start": "3840385",
    "end": "3847100"
  },
  {
    "text": "So what this says is that the probability- that your upper confidence bounds hold over all time steps.",
    "start": "3847200",
    "end": "3854860"
  },
  {
    "text": "So this is the negative, this is that they- that they don't hold is at least 1 - 2m delta.",
    "start": "3854860",
    "end": "3861680"
  },
  {
    "text": "So all our- our- what we're gonna end up doing is we're gonna have a high probability regret bound that says,",
    "start": "3863010",
    "end": "3868420"
  },
  {
    "text": "with probability at least 1 - 2m delta, we're gonna get a smaller regret. Yeah.",
    "start": "3868420",
    "end": "3873730"
  },
  {
    "text": "So what about the infinite horizon case? Great question. Yes. This is all for an infinite horizon case.",
    "start": "3873730",
    "end": "3878800"
  },
  {
    "text": "We're gonna look at the- we're gonna find our regret in terms of t, the number of time steps.",
    "start": "3878800",
    "end": "3883970"
  },
  {
    "text": "Okay, all right. So why is this useful?",
    "start": "3885480",
    "end": "3890090"
  },
  {
    "text": "Do you guys want me to leave this up or we can move that now? Everyone's written it down, who wants it?",
    "start": "3891270",
    "end": "3896905"
  },
  {
    "text": "Okay. So let's- can this go up? Let me see or not.",
    "start": "3896905",
    "end": "3911815"
  },
  {
    "text": "Okay. So why is this useful? Okay. We're now gonna define our regret.",
    "start": "3911815",
    "end": "3917050"
  },
  {
    "text": "So, this part of the board just says that we've made it so these upper confidence bounds holds with high probability.",
    "start": "3917050",
    "end": "3923065"
  },
  {
    "text": "Now we're gonna try to show what our regret is gonna be, oh good.",
    "start": "3923065",
    "end": "3926660"
  },
  {
    "text": "Okay. Thank you. All right.",
    "start": "3930810",
    "end": "3936100"
  },
  {
    "text": "So, what's our regret? Regret of our UCB algorithm after T time steps is just equal to the sum over",
    "start": "3936100",
    "end": "3945610"
  },
  {
    "text": "all those time steps t = 1 to t of Q of a star - Q of at. Okay?",
    "start": "3945610",
    "end": "3954250"
  },
  {
    "text": "Remember, we don't know either of these things. We don't know what the real mean is of any arm we pick and we don't know what the real mean is of the optimal arm.",
    "start": "3954250",
    "end": "3960610"
  },
  {
    "text": "So we need to turn this into things that we know. These are unknown. Okay? So what we're gonna do is one of our favorite tricks in reinforcement learning,",
    "start": "3960610",
    "end": "3971290"
  },
  {
    "text": "which is we add and subtract the same thing. So we do sum over t equal- -t =1  to t of Ut, this upper bound,",
    "start": "3971290",
    "end": "3982140"
  },
  {
    "text": "at - Q of at + Q of",
    "start": "3982140",
    "end": "3988200"
  },
  {
    "text": "A star - Ut at. I just added and subtracted the same thing.",
    "start": "3988200",
    "end": "3996744"
  },
  {
    "text": "I picked the upper confidence bound of the arm that we selected at each time point. Okay? So then the important thing is that what",
    "start": "3996745",
    "end": "4006090"
  },
  {
    "text": "we showed over here is that if all of our confidence bounds hold, then the upper confidence bound of the arm we selected is larger than Q of a star.",
    "start": "4006090",
    "end": "4016694"
  },
  {
    "text": "That's what we showed over there. So that means that this has to be less than or equal to 0.",
    "start": "4016695",
    "end": "4022980"
  },
  {
    "text": "Because the upper confidence bound of whatever arm we selected, we proved over there, is gonna be higher than the real mean of the optimal arm.",
    "start": "4022980",
    "end": "4030555"
  },
  {
    "text": "So this second part of this equation is less than or equal to 0, which means we can upper bound our regret as follows.",
    "start": "4030555",
    "end": "4038430"
  },
  {
    "text": "So now we can drop that second term.",
    "start": "4038430",
    "end": "4041680"
  },
  {
    "text": "So that's nice, right? Because now we don't have any a stars anymore.",
    "start": "4047690",
    "end": "4052809"
  },
  {
    "text": "We only are looking at the actions that we actually took at each time step and we're comparing",
    "start": "4052810",
    "end": "4058040"
  },
  {
    "text": "the upper confidence bound of the- at that time step versus the real mean. But remember the way we've defined our upper confidence bound and put it over here,",
    "start": "4058040",
    "end": "4068880"
  },
  {
    "text": "the way we defined our upper confidence bound Ut of at is exactly equal to, um,",
    "start": "4068880",
    "end": "4076065"
  },
  {
    "text": "the empirical mean, at, plus this square root 1 over 2",
    "start": "4076065",
    "end": "4084900"
  },
  {
    "text": "and at log t squared over delta. Okay?",
    "start": "4084900",
    "end": "4094454"
  },
  {
    "text": "And we said here that this was going to be the difference from",
    "start": "4094455",
    "end": "4101310"
  },
  {
    "text": "Hoeffding between Q of at - Q hat of at.",
    "start": "4101310",
    "end": "4111120"
  },
  {
    "text": "So the probability that this, remember I called this U,",
    "start": "4111120",
    "end": "4116160"
  },
  {
    "text": "the probability that this was greater than U was small.",
    "start": "4116160",
    "end": "4121870"
  },
  {
    "text": "So now we're assuming that all of our confidence bounds hold, which means that we know that the difference between",
    "start": "4122390",
    "end": "4128490"
  },
  {
    "text": "the real empirical mean and the true mean of this arm is bounded by U. Yeah.",
    "start": "4128490",
    "end": "4133830"
  },
  {
    "text": "Going back, for the bottom panel, sorry, it's a little hard to see, two questions. First of all,",
    "start": "4133830",
    "end": "4141029"
  },
  {
    "text": "where does this second, um, so you have a union over i = 1, the number of arms. I don't see where that index actually factors in.",
    "start": "4141030",
    "end": "4147060"
  },
  {
    "text": "And then also if you could just go over the third line with the delta over t squared, and summation, how we derived that.",
    "start": "4147060",
    "end": "4153015"
  },
  {
    "text": "Sure? Yeah, so, um, so what we did there is we said that if,",
    "start": "4153015",
    "end": "4158054"
  },
  {
    "text": "um, are you asking about the second line to the third line? Yes. So what we did that in this case is,",
    "start": "4158055",
    "end": "4163980"
  },
  {
    "text": "um, we said for each, we wanna make sure that on each of the time steps, all of the upper confidence bounds hold.",
    "start": "4163980",
    "end": "4169710"
  },
  {
    "text": "Um, and so that's where we get an additional sum, um, over here over all the arms.",
    "start": "4169710",
    "end": "4175470"
  },
  {
    "text": "So this is conservative, um, trying to make sure we don't know- you could imagine just doing this over the arm that's selected,",
    "start": "4175470",
    "end": "4183359"
  },
  {
    "text": "and but we don't know which arm is selected. We want to be able to show, um, this is going to be a looser upper,",
    "start": "4183360",
    "end": "4189345"
  },
  {
    "text": "upper bound saying this is sufficient. So, um, we're saying that if you want to make sure that Q of",
    "start": "4189345",
    "end": "4194610"
  },
  {
    "text": "a star is greater than the upper bound of the arm that is selected, it is sufficient to ensure that",
    "start": "4194610",
    "end": "4200730"
  },
  {
    "text": "your upper confidence bounds are valid at all time points from this, from this, um, reasoning up here.",
    "start": "4200730",
    "end": "4206055"
  },
  {
    "text": "And so this is the probability that your upper confidence bounds are correct on all times points, for every single time point,",
    "start": "4206055",
    "end": "4212070"
  },
  {
    "text": "for every single arm, your upper confidence bounds have to hold. And then, what we get in this case is,",
    "start": "4212070",
    "end": "4218100"
  },
  {
    "text": "we said that the probability on a particular time-step, the upper confidence bounds holds is delta over t squared.",
    "start": "4218100",
    "end": "4224445"
  },
  {
    "text": "That's how we defined that U term [NOISE] so that according to Hoeffding's inequality,",
    "start": "4224445",
    "end": "4229889"
  },
  {
    "text": "it would hold with the least probability delta over t squared. And then, so this is that,",
    "start": "4229890",
    "end": "4236775"
  },
  {
    "text": "and then I just made a side note that this is not something, some of you guys might have seen this but I certainly wouldn't expected people to,",
    "start": "4236775",
    "end": "4243150"
  },
  {
    "text": "that just it turns out that in terms of the limit, um, if you sum over t = 1 to infinity of t to the -2",
    "start": "4243150",
    "end": "4248640"
  },
  {
    "text": "that's bounded by pi squared over 6 which is less than 2. Um, fun fact. Um [LAUGHTER] so,",
    "start": "4248640",
    "end": "4256320"
  },
  {
    "text": "so you can plug that in, right, because then you just get a 2 here, and then you just get a sum over all arms which is m,",
    "start": "4256320",
    "end": "4262110"
  },
  {
    "text": "um, and you have a delta. So this just allows us to take that infinite sum.",
    "start": "4262110",
    "end": "4269950"
  },
  {
    "text": "So notice also that, um this goes to  question before this holds for the infinite horizon",
    "start": "4270410",
    "end": "4276690"
  },
  {
    "text": "because when we did this summing we're basically making sure that our confidence bounds hold forever.",
    "start": "4276690",
    "end": "4281800"
  },
  {
    "text": "So we're, okay. Great. So we said here now that we're",
    "start": "4283340",
    "end": "4288840"
  },
  {
    "text": "doing all of this part under the assumption that our confidence bounds hold. Our confidence bounds hold mean that the difference between our expected mean",
    "start": "4288840",
    "end": "4296835"
  },
  {
    "text": "and the true mean for that same arm is bounded by mu,",
    "start": "4296835",
    "end": "4301965"
  },
  {
    "text": "bounded by U with high probability where this is the definition of U. So that's what our Hoeffding inequality allowed us to state.",
    "start": "4301965",
    "end": "4308250"
  },
  {
    "text": "So take that quantity now, that's our U and plug it in here. So this is looking exactly the difference between our upper confidence bound and Q.",
    "start": "4308250",
    "end": "4316710"
  },
  {
    "text": "So this is exactly equal to sum over t = 1 to t of U. Um,",
    "start": "4316710",
    "end": "4324435"
  },
  {
    "text": "it's a little confusing in terms of notation. Um, so I'll just plug in the exact expression right there.",
    "start": "4324435",
    "end": "4330225"
  },
  {
    "text": "1 over 2 and t of a, t log t squared over delta.",
    "start": "4330225",
    "end": "4340600"
  },
  {
    "text": "Okay, so we just plugged in that,  the difference between the empirical mean and the true mean is bounded by this quantity U.",
    "start": "4341000",
    "end": "4349349"
  },
  {
    "text": "Okay. All right. So then in this case, what we can do is we can split this up into the different arms that we pulled, okay?",
    "start": "4349350",
    "end": "4358695"
  },
  {
    "text": "So this is sum over all timesteps. We can pull out,",
    "start": "4358695",
    "end": "4363945"
  },
  {
    "text": "note that this is, um, if we upper bound this by big T, this is equal to less than or equal to square root log big T squared over delta,",
    "start": "4363945",
    "end": "4376155"
  },
  {
    "text": "and then we're gonna get a sum over all time steps and we're gonna split this up according to which arms we selected, okay?",
    "start": "4376155",
    "end": "4382875"
  },
  {
    "text": "So for, this is the same as if we look at for each of the arms, how many times did we pull it?",
    "start": "4382875",
    "end": "4390075"
  },
  {
    "text": "So sum over n equals 1 to n, t, i,",
    "start": "4390075",
    "end": "4395640"
  },
  {
    "text": "square root of 1 over n. So we just divided this up,",
    "start": "4395640",
    "end": "4401640"
  },
  {
    "text": "like for each of the arms, we selected them some amount of times. That's here, i is, i is indexing our arms.",
    "start": "4401640",
    "end": "4408480"
  },
  {
    "text": "So nt, i is the total number of times we selected arm i. And then we sum that up, okay.",
    "start": "4408480",
    "end": "4415960"
  },
  {
    "text": "And then, if we note",
    "start": "4416690",
    "end": "4424739"
  },
  {
    "text": "the fact that if you sum from n = 1 to t square root 1 over n,",
    "start": "4424740",
    "end": "4433140"
  },
  {
    "text": "that is less than or equal to 2 square root t. You use an integral argument for that,",
    "start": "4433140",
    "end": "4442245"
  },
  {
    "text": "I'm happy to talk about it offline. Yes, in the back. What happened to the 1 over 2 [inaudible].",
    "start": "4442245",
    "end": "4454290"
  },
  {
    "text": "Thank you, we have a 2, we can put a 2 here. Thanks. I'll be a little loose with constants but definitely catch me on them.",
    "start": "4454290",
    "end": "4464670"
  },
  {
    "text": "Because most of these bounds will all end up being about whether it's sublinear or linear. It's good to be precise.",
    "start": "4464670",
    "end": "4471165"
  },
  {
    "text": "Okay. So we have this quantity here, um, when is this quantity maximized?",
    "start": "4471165",
    "end": "4476640"
  },
  {
    "text": "This quantity is going to be maximized if we pulled all arms an equal number of times. Why? Because, um, 1 over n is decreasing with n. And so the,",
    "start": "4476640",
    "end": "4487934"
  },
  {
    "text": "the largest these can be is if you split, if you split, um, your pools across all arms equally.",
    "start": "4487935",
    "end": "4493349"
  },
  {
    "text": "So if we go back up to here, and I call this a.",
    "start": "4493350",
    "end": "4498375"
  },
  {
    "text": "So a is gonna be less than or equal to, excuse me,",
    "start": "4498375",
    "end": "4508005"
  },
  {
    "text": "square root, 2 log t squared over delta times sum over i equals 1 to m,",
    "start": "4508005",
    "end": "4518850"
  },
  {
    "text": "sum over n equals 1 to t divided by m. So this is as if we split all of our pools equally across all the arms.",
    "start": "4518850",
    "end": "4529890"
  },
  {
    "text": "1 over square root n, okay, and then we can use this expression.",
    "start": "4529890",
    "end": "4535665"
  },
  {
    "text": "Okay? So this is less than or equal to 1 over 2, we're almost there.",
    "start": "4535665",
    "end": "4542370"
  },
  {
    "text": "Um, t squared over delta and then we're gonna get sum",
    "start": "4542370",
    "end": "4549150"
  },
  {
    "text": "over i equals 1 to m of 2 square root t over m. Okay.",
    "start": "4549150",
    "end": "4556570"
  },
  {
    "text": "And then, when you sum this over m, you get less than or equal to square root 1 over",
    "start": "4556610",
    "end": "4563970"
  },
  {
    "text": "2 log t squared over delta that brings in m into there.",
    "start": "4563970",
    "end": "4571050"
  },
  {
    "text": "When we look at another two in here times T, m. And now we're done.",
    "start": "4571050",
    "end": "4580570"
  },
  {
    "text": "So what has this shown? This is shown that if we use upper confidence bounds,",
    "start": "4581630",
    "end": "4586695"
  },
  {
    "text": "that the rate at which our regret grows is sublinear square root times a log.",
    "start": "4586695",
    "end": "4592335"
  },
  {
    "text": "So t here is the number of timesteps. So timesteps, so as if we are,",
    "start": "4592335",
    "end": "4600750"
  },
  {
    "text": "if we use upper confidence bounds, um, in order to make our decisions, then the regret grows much slower.",
    "start": "4600750",
    "end": "4608050"
  },
  {
    "text": "This is a problem independent bound. It doesn't depend on the gaps. There's, there's much nicer ones and tighter ones that depend on the gaps.",
    "start": "4608480",
    "end": "4616125"
  },
  {
    "text": "But this indicates why optimism is fundamentally a sound thing to do in the case of bandits,",
    "start": "4616125",
    "end": "4621600"
  },
  {
    "text": "is that it allows us to grow much, it allows us to have much better performance in terms of regret than it does for the e-greedy case. Yeah.",
    "start": "4621600",
    "end": "4627620"
  },
  {
    "text": "Can you just display one more time the last one on the top board, um, how you went from summation over t1 to big T and you just pulled out the t squared big T,",
    "start": "4627620",
    "end": "4636885"
  },
  {
    "text": "what happens to t = 1 to big T - 1? Great question. Yeah, so this log term here t equals,",
    "start": "4636885",
    "end": "4642315"
  },
  {
    "text": "um, is ranging from t = 1 to t, this log term is maximized when t is big T.",
    "start": "4642315",
    "end": "4648165"
  },
  {
    "text": "So we're upper bounding that log term and then it becomes a constant and we can pull it out.",
    "start": "4648165",
    "end": "4653380"
  },
  {
    "text": "Okay, so the cool thing here is that this is sublinear. That's, that's really the main point.",
    "start": "4656510",
    "end": "4661980"
  },
  {
    "text": "Um, well, I go through an example and we'll go through,",
    "start": "4661980",
    "end": "4668520"
  },
  {
    "text": "um, more of this next time. Um, I, I go, we next go through an example for the toy domain for the broken toes of like what do",
    "start": "4668520",
    "end": "4675360"
  },
  {
    "text": "these upper confidence bounds look like in that case and then what will the algorithm do in these scenarios? Um, so that's what we'll look at next.",
    "start": "4675360",
    "end": "4682845"
  },
  {
    "text": "And then, after that we'll look at, so this is one class of techniques which is this optimism under uncertainty approach,",
    "start": "4682845",
    "end": "4689250"
  },
  {
    "text": "which is saying that we're going to look at what the value is based on a combination of the empirical rewards we've seen so far plus an upper confidence bound over them,",
    "start": "4689250",
    "end": "4697965"
  },
  {
    "text": "um, and use that to make decisions. [NOISE] And then the next thing we'll see too is where we are Bayesian about the world and we",
    "start": "4697965",
    "end": "4703650"
  },
  {
    "text": "instead maintain a prior and we update our prior and use that to figure out how to act. So we'll go through this next week,",
    "start": "4703650",
    "end": "4709830"
  },
  {
    "text": "um, and I'll see you then.",
    "start": "4709830",
    "end": "4712390"
  }
]