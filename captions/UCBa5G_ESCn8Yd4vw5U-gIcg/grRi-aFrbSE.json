[
  {
    "start": "0",
    "end": "83000"
  },
  {
    "text": "um so I guess two preperatory notes um one I speak really fast so feel free",
    "start": "11480",
    "end": "16920"
  },
  {
    "text": "I'll try to slow down but feel free to wave at me if I'm going too fast or interrupt me and ask questions um second",
    "start": "16920",
    "end": "23920"
  },
  {
    "text": "uh I just want to level set a little bit here uh this is this talk is like about",
    "start": "23920",
    "end": "30039"
  },
  {
    "text": "uh communication security which involves cryptography in kind of the same way that plumbing you know involves",
    "start": "30039",
    "end": "35800"
  },
  {
    "text": "hydrodynamics um namely you know we use it but we don't really understand it and we just sort of treat it like a building block but so you don't really need to",
    "start": "35800",
    "end": "42559"
  },
  {
    "text": "understand very much about cryptography to make sense of this make sense of what I'm talking about but you do need to understand what the basic things do so",
    "start": "42559",
    "end": "48360"
  },
  {
    "text": "as a level set like how many people recognize the word RSA okay Diffy Helman signatures Max",
    "start": "48360",
    "end": "56440"
  },
  {
    "text": "fantastic well I'm just going to mostly presume you know that stuff um seriously like the most as I was telling Professor",
    "start": "56440",
    "end": "62640"
  },
  {
    "text": "Benet um earlier just just two minutes ago um the Striking thing about what's sort of gone wrong over the years of TLS",
    "start": "62640",
    "end": "69080"
  },
  {
    "text": "is how little of it actually depends on understanding cryptography and how much depends on understanding sort of logic",
    "start": "69080",
    "end": "74320"
  },
  {
    "text": "of how the systems are put together and what the building blocks actually do um as opposed to sort of breaking The cryptographic Primitives though there",
    "start": "74320",
    "end": "80280"
  },
  {
    "text": "have been pieces of that too so here is sort of my schedule for",
    "start": "80280",
    "end": "85799"
  },
  {
    "start": "83000",
    "end": "129000"
  },
  {
    "text": "what I plan to talk about um I'm going to go over sort of the background of TS and um give a short introduction to some",
    "start": "85799",
    "end": "92560"
  },
  {
    "text": "of how TLS the current version of TLS works and then talk about some of the problems we've actually encountered actually I'm going to start doing that",
    "start": "92560",
    "end": "98280"
  },
  {
    "text": "interstitially so I'll introduce a feature and talk about how some of the problems we've had are um and the idea",
    "start": "98280",
    "end": "104000"
  },
  {
    "text": "here is to motivate a why we're doing something new and B to give you a sense of the kind of things that go wrong and",
    "start": "104000",
    "end": "109640"
  },
  {
    "text": "the rationale for how we're trying to do better this time and why we're and why some of the decisions we made or have",
    "start": "109640",
    "end": "114680"
  },
  {
    "text": "been made um then I want to talk about the objectives for TS 1.3 which is the version we're currently working on show",
    "start": "114680",
    "end": "121479"
  },
  {
    "text": "you what T Point through looks like and then finally spend a slide or two talking about where we are and and how",
    "start": "121479",
    "end": "127119"
  },
  {
    "text": "we plan to move forward so what is TLS as I was writing",
    "start": "127119",
    "end": "132760"
  },
  {
    "start": "129000",
    "end": "311000"
  },
  {
    "text": "this I was distressed to realize how long I've been working on this technology um uh which is now over 20",
    "start": "132760",
    "end": "138959"
  },
  {
    "text": "years which is really kind of depressing at some level um um I was not in any way",
    "start": "138959",
    "end": "144400"
  },
  {
    "text": "the original designer of this um the version that we are using now so TS was",
    "start": "144400",
    "end": "149480"
  },
  {
    "text": "ined basically by Netscape back in the pre prehistory of the web um when um as was suggested earlier they needed",
    "start": "149480",
    "end": "156000"
  },
  {
    "text": "something to do security and they need it very fast and the basic design Criterium was we would like to be able",
    "start": "156000",
    "end": "161319"
  },
  {
    "text": "to have people buy stuff over the internet and put their credit cards into the browser and that was the main thing people cared about um the idea people",
    "start": "161319",
    "end": "168720"
  },
  {
    "text": "had in their heads was that this was going to be like Unix sockets but it was going to be secure and at the time it was called secure socket layer um so",
    "start": "168720",
    "end": "176640"
  },
  {
    "text": "there were sort of several very early versions of SSL um starting with sslv 1 which never really made out of the lab",
    "start": "176640",
    "end": "182760"
  },
  {
    "text": "sslv2 which was relatively widely deployed but had a number of problems the version we're using now is this",
    "start": "182760",
    "end": "188239"
  },
  {
    "text": "thing called um is so the thing that basically supered slv2 was slsl version",
    "start": "188239",
    "end": "193560"
  },
  {
    "text": "3 which is largely similar to TLS now um and that was designed sort of in relatively short time by Netscape by",
    "start": "193560",
    "end": "200239"
  },
  {
    "text": "some people Netscape in order to fix some perceived problems withl version 2o and that got very wide deployment and",
    "start": "200239",
    "end": "207159"
  },
  {
    "text": "then was standardized by ATF with the usual sort of modest modifications in",
    "start": "207159",
    "end": "212200"
  },
  {
    "text": "the service of both improvements and not invented here um so even TLS one goes",
    "start": "212200",
    "end": "218640"
  },
  {
    "text": "back to about I think 1998 at this point andl version 3 goes back to about",
    "start": "218640",
    "end": "223680"
  },
  {
    "text": "goes back to about 95 so at this point um to give the give",
    "start": "223680",
    "end": "229000"
  },
  {
    "text": "people who do this work credit they said we're going to build something with security over um for TCP and that is",
    "start": "229000",
    "end": "234480"
  },
  {
    "text": "proven to be an incredibly powerful primitive because so many things went over TCP and just having a secure",
    "start": "234480",
    "end": "240079"
  },
  {
    "text": "Channel abstraction is very powerful and so now it's used for almost anything you can think of the initial designs were",
    "start": "240079",
    "end": "245480"
  },
  {
    "text": "for HTTP but it's used for vpns it's used for email both for sending and for",
    "start": "245480",
    "end": "250519"
  },
  {
    "text": "retrieval um it's used uh for Internet of Things communication it's even used um for doing security for voice and",
    "start": "250519",
    "end": "258000"
  },
  {
    "text": "video um there's now a version of TLS called datagram TLS which basically is the same concept for UDP um that's",
    "start": "258000",
    "end": "265000"
  },
  {
    "text": "what's that's part of what's used for voice and video um sometimes um and also for iot so as I said Netscape were the",
    "start": "265000",
    "end": "270840"
  },
  {
    "text": "original people that did this but it got taken over by the internet engineering task force or contributed and then picked up and since then there basically",
    "start": "270840",
    "end": "277400"
  },
  {
    "text": "been three versions of TLS version one which I say was their first Standard Version 1.1 which was like a trivial",
    "start": "277400",
    "end": "282919"
  },
  {
    "text": "change and 1.2 which was done in response to the work about I guess about",
    "start": "282919",
    "end": "288960"
  },
  {
    "text": "almost eight years ago now breaking md5 in sha one when everybody was terrified that all our hash functions were going to be destroyed um so when sv3 was Rel",
    "start": "288960",
    "end": "297400"
  },
  {
    "text": "shipped it basically assumed you had had md5 in sha one and what we wanted to do",
    "start": "297400",
    "end": "303800"
  },
  {
    "text": "is make it work with shot two and sha three and whatever so it turned out to be a lot harder to do that than you actually would have thought because things are more brittle than you",
    "start": "303800",
    "end": "311240"
  },
  {
    "start": "311000",
    "end": "400000"
  },
  {
    "text": "think so as I said um TLS and SSL present this secure Channel abstraction",
    "start": "311240",
    "end": "317000"
  },
  {
    "text": "and the basic um model that almost everybody's operating under is this the client knows who he wants to talk to the",
    "start": "317000",
    "end": "322720"
  },
  {
    "text": "client has a domain name for the server and the server does not get to know who",
    "start": "322720",
    "end": "328120"
  },
  {
    "text": "the client is so the client says I want to connect to this website and that although in principle there are",
    "start": "328120",
    "end": "333840"
  },
  {
    "text": "mechanisms in TLS for the client to authenticate to the server in practice those get a fair amount of use but",
    "start": "333840",
    "end": "340199"
  },
  {
    "text": "nowhere near as much use as the basic mode that almost every web browser uses which is the client connects to the",
    "start": "340199",
    "end": "346039"
  },
  {
    "text": "server and the client doesn't authenticate at all and if the client wants to authenticate then they authenticate by typing a password into",
    "start": "346039",
    "end": "351639"
  },
  {
    "text": "some web page which then gets sent over the secure Channel and the reason this is supposed to be safe is because the",
    "start": "351639",
    "end": "357120"
  },
  {
    "text": "browser verified that you were talking to Gmail and therefore whatever they're typing in is going to Gmail um once this is done then all the",
    "start": "357120",
    "end": "365520"
  },
  {
    "text": "data is encrypted and authenticated and so the guarantee from the client's perspective is supposed to be that",
    "start": "365520",
    "end": "371599"
  },
  {
    "text": "everything I send is only going to the server and everything I get back from the server was secured and Transit and really came from the server than",
    "start": "371599",
    "end": "377199"
  },
  {
    "text": "somebody else and the guarantee from the server's perspective is a little fuzzier which is the same person that sent me the",
    "start": "377199",
    "end": "384400"
  },
  {
    "text": "initial block of data is now sending me the later block of data but I don't really know who they are and so you know",
    "start": "384400",
    "end": "389599"
  },
  {
    "text": "if there's a password so hopefully the password I'm getting and the request or read the email from the same guy that's the guarantee you're supposed to be",
    "start": "389599",
    "end": "395479"
  },
  {
    "text": "getting but again you don't know who that are is if you don't authenticate them TLS has this sort of structure back",
    "start": "395479",
    "end": "403880"
  },
  {
    "start": "400000",
    "end": "489000"
  },
  {
    "text": "when SSL and TLS were designed there was a a raft of cure secure protocols being designed um SSH and IPC and a bunch of",
    "start": "403880",
    "end": "410440"
  },
  {
    "text": "other stuff and they all sort of converged after a bunch of FAL starts in the same basic structure which is",
    "start": "410440",
    "end": "416360"
  },
  {
    "text": "there's some handshake protocol which is typically pretty fancy and the hand protocol's job is to actually negotiate",
    "start": "416360",
    "end": "422120"
  },
  {
    "text": "the negotiate the key material so you want to establish a shared key between the client and the server you want to negotiate the algorithms the modes the",
    "start": "422120",
    "end": "428280"
  },
  {
    "text": "parameters what this typically means is like what key exchange you're using what encryption algorithm you're using that kind of stuff um and you want to",
    "start": "428280",
    "end": "434759"
  },
  {
    "text": "authenticate one or both sides I said in TLS that largely means the server but an",
    "start": "434759",
    "end": "440639"
  },
  {
    "text": "IPC or SSH it might mean both the client and the server and so the vast majority of complexity in TLS is that chunk is",
    "start": "440639",
    "end": "447319"
  },
  {
    "text": "the handshake once that handshake is done there's also a record protocol which actually carries the data from the",
    "start": "447319",
    "end": "452560"
  },
  {
    "text": "from the client to the server and vice versa which is comparatively simple though even that we've seen problems",
    "start": "452560",
    "end": "457879"
  },
  {
    "text": "with or didn't provide the advertised security guarantees and I'll have a little bit of material about that",
    "start": "457879",
    "end": "463080"
  },
  {
    "text": "later uh like all like basically all these systems the initial handshake uses",
    "start": "463080",
    "end": "469240"
  },
  {
    "text": "public cryptography uses Diffy Helman us curve Diffy Helman uses RSA something like that and the record protocol but",
    "start": "469240",
    "end": "475280"
  },
  {
    "text": "that just negotiates a key and the record protocol uses some sort of symmetric rography these days typically Al AES or chaa something like",
    "start": "475280",
    "end": "482800"
  },
  {
    "text": "that okay you don't need that this was just there in case people didn't know what I was talking",
    "start": "482800",
    "end": "488319"
  },
  {
    "text": "about so this slide here shows basically the the the handshake skeleton for",
    "start": "488319",
    "end": "494720"
  },
  {
    "start": "489000",
    "end": "649000"
  },
  {
    "text": "essentially the basic TLS 1.2 handshake uh which is almost identical to the T I",
    "start": "494720",
    "end": "500039"
  },
  {
    "text": "think at this level abration is identical to the TL the sslv3 handshake so this is what you this is what people",
    "start": "500039",
    "end": "505800"
  },
  {
    "text": "did for like a very very long time almost all time until basically probably",
    "start": "505800",
    "end": "511400"
  },
  {
    "text": "the F past five years um perhaps past three years perhaps so the client opens up with this",
    "start": "511400",
    "end": "519200"
  },
  {
    "text": "client Hello message which contain which the most important thing for now is it contains a random nons and like all",
    "start": "519200",
    "end": "525000"
  },
  {
    "text": "these so one common problem with cryptographic protocols is replay problem is replay attacks so the random non serves to guarantee to the client",
    "start": "525000",
    "end": "531920"
  },
  {
    "text": "that anything the server the servers messages are fresh the server responds with his own random nons and with a",
    "start": "531920",
    "end": "538000"
  },
  {
    "text": "certificate and the certificate get ties in this case his RSA public key to his identity so at this point the client can",
    "start": "538000",
    "end": "544560"
  },
  {
    "text": "in principle validate he can't validate he's actually talking to the server but you can validate at least that there's some credential that binds an RSA public",
    "start": "544560",
    "end": "551000"
  },
  {
    "text": "key to the claim that end need the server uh until the server this first message the server is done doesn't require knowing the private key so the",
    "start": "551000",
    "end": "557120"
  },
  {
    "text": "client only knows that there's someone out there with this identity then as I said the um the",
    "start": "557120",
    "end": "563240"
  },
  {
    "text": "client then generates some random value um in this What's called the master secret which is basically a random 48",
    "start": "563240",
    "end": "568640"
  },
  {
    "text": "bit 48 by string not 48 bit that would be bad and um enciphers it under the",
    "start": "568640",
    "end": "574680"
  },
  {
    "text": "server's RSA public key and sends it to the server and then follows up with a",
    "start": "574680",
    "end": "579760"
  },
  {
    "text": "Mac over the entire handshake um with the master secret as the key for that Mac and it's called that's called a",
    "start": "579760",
    "end": "586160"
  },
  {
    "text": "finished message so the guarantee the client obviously has at this point is only the true server should be able to",
    "start": "586160",
    "end": "592240"
  },
  {
    "text": "to decrypt this message and so when the server responds with its own Mac over the handshake then the the client knows",
    "start": "592240",
    "end": "598519"
  },
  {
    "text": "he's now talking to the true server at least theoretically because anybody else couldn't have reconstructed the key material to generate the master secret",
    "start": "598519",
    "end": "604360"
  },
  {
    "text": "um also the convention I'm using here is anything in a talic is encrypted so these messages are also encrypted so as",
    "start": "604360",
    "end": "609959"
  },
  {
    "text": "a practical matter the server couldn't even have read the Finish message and he couldn't have sent a finish message which to validate uh historically until",
    "start": "609959",
    "end": "616600"
  },
  {
    "text": "pretty recently TLS has used composite Cipher modes by which I mean you would use AES and You' use hmax shaan and you",
    "start": "616600",
    "end": "622480"
  },
  {
    "text": "put them together TS is now moving uh very aggressively towards um aead authenticated encryption with additional",
    "start": "622480",
    "end": "628440"
  },
  {
    "text": "data Cipher mode um that don't that have better security guarantees at least at least under",
    "start": "628440",
    "end": "633680"
  },
  {
    "text": "implementation parameters so once you've done that stuff as I said you can look at the bulk of this and and just the weight four times as much data in in",
    "start": "633680",
    "end": "640600"
  },
  {
    "text": "four much stuff going on in the handshake as going application data and that's probably actually about right in terms of how the protocol is so once",
    "start": "640600",
    "end": "646000"
  },
  {
    "text": "you've done that you start sending application data back and forth so would the life were that simple um",
    "start": "646000",
    "end": "653200"
  },
  {
    "text": "already life is more complicated so the client in the server have diverse capabilities and one thing that's",
    "start": "653200",
    "end": "659720"
  },
  {
    "text": "actually worked pretty well is when TLS and SSL were first rolled out people had Dez and triple Dez and now we have AES",
    "start": "659720",
    "end": "665519"
  },
  {
    "text": "and chaa and stuff like that and we made that transition pretty smoothly without breaking anybody which is actually quite good so and we've also gone through",
    "start": "665519",
    "end": "673000"
  },
  {
    "text": "several versions of the protocol without breaking anybody too badly which is also pretty good um is this me that is like",
    "start": "673000",
    "end": "679720"
  },
  {
    "text": "doing that just okay great um so there's more stuff",
    "start": "679720",
    "end": "684880"
  },
  {
    "text": "in here the um the client has his version numbers conversion negotiation",
    "start": "684880",
    "end": "689920"
  },
  {
    "text": "the client offers a bunch of Cipher Suites and what's in a cipher Suite is um is basically the cryptographic",
    "start": "689920",
    "end": "695760"
  },
  {
    "text": "parameters you want to use so there's a key exchange algorithm and a signature algorithm and a and a bulk encryption algorithm and a and and a Mac um",
    "start": "695760",
    "end": "702200"
  },
  {
    "text": "although these days those last two become an AED algorithm it's also possible to negotiate compression um that turned out",
    "start": "702200",
    "end": "708639"
  },
  {
    "text": "to have been a bad plan and um we're taking that out I'll talk about that very briefly and somewhere along the way",
    "start": "708639",
    "end": "715360"
  },
  {
    "text": "between sslv3 and version 2 someone decided to be good for the client to be able to send arbitrary stuff in his",
    "start": "715360",
    "end": "721240"
  },
  {
    "text": "client hello um in case you want to say some things which this grammar didn't let you say and so basically get to send",
    "start": "721240",
    "end": "726399"
  },
  {
    "text": "a pile of extensions and the extensions are just tlv pairs I'll come back to that in a little",
    "start": "726399",
    "end": "732360"
  },
  {
    "text": "bit so the basic model that TLS has always followed that goes back to SL version um three is the client offers a",
    "start": "732360",
    "end": "739959"
  },
  {
    "text": "bunch of stuff and the server chooses that at a list so pretty much everything you saw the client offered a list of the server gets to choose one he chooses one",
    "start": "739959",
    "end": "746399"
  },
  {
    "text": "Cipher Suite CH one compression method and then the extensions you actually Echo stuff um by the way I haven't",
    "start": "746399",
    "end": "752079"
  },
  {
    "text": "talked about the session ID I'll get to that in a minute right so this slide is just",
    "start": "752079",
    "end": "757519"
  },
  {
    "text": "redundant the cyppher suite contains basically all the parameters you want to use there's been a huge split in",
    "start": "757519",
    "end": "763440"
  },
  {
    "text": "protocol design by the way in terms of taste about whether you should do individual selection for each of these",
    "start": "763440",
    "end": "769440"
  },
  {
    "text": "or you should do a suite that contains all of them and both of these turn not be terrible approaches the individual",
    "start": "769440",
    "end": "774839"
  },
  {
    "text": "selection you can't actually mix and match because it turns out lots of things aren't compatible with other things and so you have like some Hardware security module which can like",
    "start": "774839",
    "end": "781480"
  },
  {
    "text": "sign stuff with one algorithm but then you have to use another algorithm for key exchange um or over hasing um and",
    "start": "781480",
    "end": "788519"
  },
  {
    "text": "conversely if you do sweets you get common explosion so neither of these things works very well um Ike um ipack",
    "start": "788519",
    "end": "794839"
  },
  {
    "text": "did Chinese menu and TLS does comor explosion um those are the two main",
    "start": "794839",
    "end": "800600"
  },
  {
    "text": "options so hang",
    "start": "801360",
    "end": "806560"
  },
  {
    "text": "on uh so so I'm s that most of that was introductory I want to talk a little bit",
    "start": "807320",
    "end": "812920"
  },
  {
    "text": "about how things have gone wrong over the years so I'm going to give a couple examples of TLS features which turned out not to be as awesome as you might",
    "start": "812920",
    "end": "818839"
  },
  {
    "text": "have hoped so TLS has what superficially seemed like this very elegant mechanism",
    "start": "818839",
    "end": "824519"
  },
  {
    "text": "for renegotiating so the idea would be I've set up a TLS connection to you and for some reason I'm sad about the",
    "start": "824519",
    "end": "830079"
  },
  {
    "text": "parameters and there are a bunch of reasons I might be sad one reason I might be sad is I've been encrypting for the past month with the same keys and I",
    "start": "830079",
    "end": "835279"
  },
  {
    "text": "might think it's time for new keys this is a lot more of an issue if you're using like de then if you're using AES there would still an issue with AES",
    "start": "835279",
    "end": "841680"
  },
  {
    "text": "because you could only encrypt maybe you know two to the 32 blocks before people before it start to fall apart so TLS had",
    "start": "841680",
    "end": "848560"
  },
  {
    "text": "as I say what appeared to be the Super very superficially elegant mechanism where you could just um again everything",
    "start": "848560",
    "end": "854519"
  },
  {
    "text": "that's has encrypted so you could simply take the initial handshake and then you could renegotiate by offering a new",
    "start": "854519",
    "end": "861440"
  },
  {
    "text": "handshake over the encrypted connection and the and the client server would pick up where they left off",
    "start": "861440",
    "end": "867079"
  },
  {
    "text": "so this seems like not bad idea and it works pretty well um sometimes there's a",
    "start": "867079",
    "end": "873639"
  },
  {
    "text": "bit of confusion about what the status of the data is if it isn't relieved between some of these handshake messages",
    "start": "873639",
    "end": "879519"
  },
  {
    "text": "that made people kind of sad and there's in fact a discussion on the Taos Mings right now about how to treat that but",
    "start": "879519",
    "end": "885040"
  },
  {
    "text": "that's not the part that made people sad it turns out um the part that made people sad is this now if you look at",
    "start": "885040",
    "end": "891600"
  },
  {
    "start": "889000",
    "end": "1186000"
  },
  {
    "text": "the date you'll notice that TLS was designed around 94 and this was discovered in 2010 so as I was saying",
    "start": "891600",
    "end": "899320"
  },
  {
    "text": "earlier um the interesting thing about this is you don't need know anything about cryptography at all understand what the problem is here you just have",
    "start": "899320",
    "end": "905199"
  },
  {
    "text": "to see the problem and someone finally solve a problem so the problem is really quite simple which is that remember I",
    "start": "905199",
    "end": "911920"
  },
  {
    "text": "said that we just do a new handshake over the old connection well there's nothing that connects the old connection and the new connection and so it's",
    "start": "911920",
    "end": "918720"
  },
  {
    "text": "possible to have a situation where the sides are confused about how many connections there have been so the basic",
    "start": "918720",
    "end": "923959"
  },
  {
    "text": "attack looks like this the attacker um so we always always assume",
    "start": "923959",
    "end": "929959"
  },
  {
    "text": "Network attacker that can do anything it wants with the packets so the attacker makes their own connection to the server",
    "start": "929959",
    "end": "935959"
  },
  {
    "text": "and um and does their own TS connection remember the attacker like in general for HTP is not",
    "start": "935959",
    "end": "941440"
  },
  {
    "text": "authenticated so the attacker does their own connection absolutely as ordinary to the server and then what they do is they",
    "start": "941440",
    "end": "948800"
  },
  {
    "text": "stuff their own message down the channel so they send like a get um and I wish that error wasn't bidirectional but",
    "start": "948800",
    "end": "954240"
  },
  {
    "text": "there it is so they sound like the beginning of an HTTP request but not the end of an HTTP request so they have the",
    "start": "954240",
    "end": "959600"
  },
  {
    "text": "server sort of warm and the server is sort of reading this and the server is ready to keep reading and then what they do is they take the client's connection",
    "start": "959600",
    "end": "965480"
  },
  {
    "text": "and they intercept it and they take the client's TLS connection and they just",
    "start": "965480",
    "end": "970839"
  },
  {
    "text": "proxy it over their own encrypted channel to the server and at this point",
    "start": "970839",
    "end": "976120"
  },
  {
    "text": "the client and the server have an encrypted connection which the attacker can't read um but that's okay because",
    "start": "976120",
    "end": "982319"
  },
  {
    "text": "doesn't need to read it and then the first thing the client does send his own HTP request on the channel so you're assum I'm assuming web here and",
    "start": "982319",
    "end": "988079"
  },
  {
    "text": "somewhere in that htb request is his cookie um and so and you know if if you",
    "start": "988079",
    "end": "995040"
  },
  {
    "text": "do this exactly right then you get the right number of clifts and this looks like it's all one big request with one",
    "start": "995040",
    "end": "1000639"
  },
  {
    "text": "like malformed header line which is which is the clients's get and so now what the tagers managed to do is he",
    "start": "1000639",
    "end": "1005920"
  },
  {
    "text": "managed to splice his own request onto the client's authentication credentials",
    "start": "1005920",
    "end": "1011360"
  },
  {
    "text": "and gets a bad example I wish I used post here but if that request has any side effects then he's basically",
    "start": "1011360",
    "end": "1016560"
  },
  {
    "text": "convinced the client to do something for him that he would not otherwise have done this is",
    "start": "1016560",
    "end": "1022120"
  },
  {
    "text": "bad so the server client the tack inject an arbitrary prefix on the client's client's connection one thing you'll",
    "start": "1022120",
    "end": "1028520"
  },
  {
    "text": "find by the way is a lot of these attacks um are attacks that don't look very good in traditional Network environments because it's hard for",
    "start": "1028520",
    "end": "1035280"
  },
  {
    "text": "instance if this is like a telet connection or it's a um it's a tet connection or it's like an IMAP",
    "start": "1035280",
    "end": "1041959"
  },
  {
    "text": "connection it's harder to sort of convince the clients to generate the data you want the G to generate but in web connections it's really often very",
    "start": "1041959",
    "end": "1048038"
  },
  {
    "text": "easy because the attacker gives enormous amount of control over what the client actually does and so the the sort traditional thing you'll do is you'll",
    "start": "1048039",
    "end": "1053720"
  },
  {
    "text": "make your own web page that points to the victim's web page and now you can synthesize all sorts of stuff and get the client to do it for you so the",
    "start": "1053720",
    "end": "1061160"
  },
  {
    "text": "Advent of the web has actually made this much made this threat M much more serious and if you look at a number of the attacks that we've seen lately on",
    "start": "1061160",
    "end": "1067799"
  },
  {
    "text": "TLS they basically depend on the attacker having pretty tight control of your web browser but that's okay because",
    "start": "1067799",
    "end": "1073160"
  },
  {
    "text": "you can get that kind of control quite easily but they only really work because of that environment",
    "start": "1073160",
    "end": "1079840"
  },
  {
    "text": "right so this is fine um this is bad for um the client and the server can't tell",
    "start": "1079840",
    "end": "1086760"
  },
  {
    "text": "the server thinks it's a renegotiation and the server May wanted the",
    "start": "1086760",
    "end": "1093400"
  },
  {
    "text": "renegotiation so let me do this first and I'll go back so the first thing we",
    "start": "1093400",
    "end": "1098559"
  },
  {
    "text": "the first idea we had when this came up was let's just turn off renegotiation we won't let anybody renegotiate um that's",
    "start": "1098559",
    "end": "1104960"
  },
  {
    "text": "not the world's worst idea but it turns out that the thing reasons you need renot iation and the most important one",
    "start": "1104960",
    "end": "1110799"
  },
  {
    "text": "of these first two which is concealing the client certificate and post handshake Cent authentication",
    "start": "1110799",
    "end": "1117039"
  },
  {
    "text": "so I don't think I'm not sure I have a slide that shows client authentication but in TLS 1.2 the client certificate is",
    "start": "1117039",
    "end": "1122799"
  },
  {
    "text": "sent in the clear it's not sent encrypted and so that means that that any network attacker can see the client",
    "start": "1122799",
    "end": "1128600"
  },
  {
    "text": "certificate and see who the client is which obviously has bad privacy problems so it's attractive the nice",
    "start": "1128600",
    "end": "1134679"
  },
  {
    "text": "thing about this renegotiation technique is if this second handshake like a legitimate handshake then the client",
    "start": "1134679",
    "end": "1141120"
  },
  {
    "text": "certificate would be encrypted because it' be encrypted by the first connection so that would be good um the other reason why people want to often want to",
    "start": "1141120",
    "end": "1147679"
  },
  {
    "text": "do this is you have often have settings where only part of a website is protected so you have a website which is",
    "start": "1147679",
    "end": "1154280"
  },
  {
    "text": "which is authenticated by client authentication and the client so and the",
    "start": "1154280",
    "end": "1159520"
  },
  {
    "text": "client will surf around the website for a while and then eventually it hit some protective resource and then and only then will the server want to interrogate",
    "start": "1159520",
    "end": "1165400"
  },
  {
    "text": "the client for certificate and this is made even worse by the fact that the U uis and the browsers are really really",
    "start": "1165400",
    "end": "1171039"
  },
  {
    "text": "bad about client certificates and so it's incredibly invasive to ask the client for a certificate and so servers avoid it like at all costs and so the",
    "start": "1171039",
    "end": "1178760"
  },
  {
    "text": "the point being that if you have one of these multi-level sites what you want to do is let the client serve for a while and only then force a",
    "start": "1178760",
    "end": "1184280"
  },
  {
    "text": "renegotiation this is going to be a problem later we'll get to um so the fix for this once you know about this the",
    "start": "1184280",
    "end": "1189919"
  },
  {
    "start": "1186000",
    "end": "1249000"
  },
  {
    "text": "fix for this doesn't seem so bad um we basically made it um made a new many",
    "start": "1189919",
    "end": "1195960"
  },
  {
    "text": "many of the situations you find ourselves in by the way are that we had this really quite complicated apparatus",
    "start": "1195960",
    "end": "1201320"
  },
  {
    "text": "and we'd find things we didn't like and we say what's the minimal change we can make to repair this particular problem",
    "start": "1201320",
    "end": "1207520"
  },
  {
    "text": "and maybe some problems around it but without without totally redesigning everything because that turned out to really expensive as as we're seeing now",
    "start": "1207520",
    "end": "1213880"
  },
  {
    "text": "so the minimal fix for this maybe slightly more than the minimal fix but a modestly minimal fix for this is to add",
    "start": "1213880",
    "end": "1219880"
  },
  {
    "text": "new extension to the client server Holo and the way this works is that basically you Echo these Macs from the previous um",
    "start": "1219880",
    "end": "1227200"
  },
  {
    "text": "the previous handshake in the new handshake and so what happens obviously is in the case here the server thinks",
    "start": "1227200",
    "end": "1235240"
  },
  {
    "text": "he's got a Mac from the from this first handshake but the client doesn't and so you get a handshake failure so that",
    "start": "1235240",
    "end": "1240960"
  },
  {
    "text": "looks like it works pretty well though it turns out that for other reasons this runs into problems a little later though it took again about four years to find",
    "start": "1240960",
    "end": "1249120"
  },
  {
    "start": "1249000",
    "end": "1274000"
  },
  {
    "text": "that so good um right so I wish I done this in the opposite order this is what I was talking about earlier which is to",
    "start": "1249120",
    "end": "1256000"
  },
  {
    "text": "say that the client surfing along just f fine he asked for some secure resource and then the server goes oh now I need",
    "start": "1256000",
    "end": "1261760"
  },
  {
    "text": "your certificate and he prompts him and the way the server does that by the way is he sends this hello request message which says please start a new handshake",
    "start": "1261760",
    "end": "1267760"
  },
  {
    "text": "with me wow imp well that really should have",
    "start": "1267760",
    "end": "1273240"
  },
  {
    "text": "been a backslash shouldn't it uh okay um so in order to understand",
    "start": "1273240",
    "end": "1279080"
  },
  {
    "start": "1274000",
    "end": "1325000"
  },
  {
    "text": "how this fix did not exactly produce the desired outcome you have to understand one more feature at TLS which is a thing",
    "start": "1279080",
    "end": "1284200"
  },
  {
    "text": "called session resumption so back when this stuff was designed public key operations by which I mean like RSA was",
    "start": "1284200",
    "end": "1290799"
  },
  {
    "text": "incredibly expensive and it was the bottleneck for building any kind of secure server and so when the system was",
    "start": "1290799",
    "end": "1296080"
  },
  {
    "text": "built they designed a system that would allow you to amortize one public key exchange over multiple connections this",
    "start": "1296080",
    "end": "1302360"
  },
  {
    "text": "is called resumption and the basic idea is like super simple okay that I'm not really okay oh good okay um so the basic",
    "start": "1302360",
    "end": "1311400"
  },
  {
    "text": "idea was like really was really simple that on your initial connection when you used when you used RSA ory Helman but",
    "start": "1311400",
    "end": "1316600"
  },
  {
    "text": "back then it was RSA that the server would give you an identifier and when you came back you'd say I know about this identifier and the",
    "start": "1316600",
    "end": "1323000"
  },
  {
    "text": "server would like look it up in this table and go I have the key so it looks like this stuff in red is new so the",
    "start": "1323000",
    "end": "1328520"
  },
  {
    "start": "1325000",
    "end": "1354000"
  },
  {
    "text": "client connects this is the new handsheet the client connects to the server and he says here's my session ID the server says fantastic here's the",
    "start": "1328520",
    "end": "1333640"
  },
  {
    "text": "session ID and I wish there wasn't a certificate there because it doesn't belong there um but at this point you're you're encrypted and you're good to go",
    "start": "1333640",
    "end": "1340440"
  },
  {
    "text": "um oh this is very I see this is very embarrassing that's what I wanted um",
    "start": "1340440",
    "end": "1346159"
  },
  {
    "text": "this is the slide so right so the the initial handshake looks like this I thought I had only one slide the initial handshake looks like this with just the",
    "start": "1346159",
    "end": "1352120"
  },
  {
    "text": "new session ID saying this is what it is and and then resumption looks like this so there's no no public crypto so this",
    "start": "1352120",
    "end": "1357799"
  },
  {
    "start": "1354000",
    "end": "1406000"
  },
  {
    "text": "is obviously huge advant huge performance Improvement and and and if",
    "start": "1357799",
    "end": "1362880"
  },
  {
    "text": "you go back and look at the the work that was done when TLS first came out youve seen lots of measurements that",
    "start": "1362880",
    "end": "1368400"
  },
  {
    "text": "basically show here's what your web server will do if you don't have resumption here's like what it will do if you do have resumption and it's just",
    "start": "1368400",
    "end": "1373679"
  },
  {
    "text": "a total no-brainer there's no way there's no way any samean person would not run this and in fact",
    "start": "1373679",
    "end": "1378799"
  },
  {
    "text": "this no-brainer that there was a bunch of later work um done partly done partly here Stanford with um Professor Ben and",
    "start": "1378799",
    "end": "1384840"
  },
  {
    "text": "hav shakam um on offload on figuring out how to remove the server's need to store the database of session IDs by",
    "start": "1384840",
    "end": "1391320"
  },
  {
    "text": "offloading the data to the client because it was so attractive to have this kind of optimization",
    "start": "1391320",
    "end": "1397840"
  },
  {
    "text": "um however it turns out that this does not make the world necessarily as much",
    "start": "1398600",
    "end": "1404240"
  },
  {
    "text": "better as you're hoping so this very nice work um came out of inria um back",
    "start": "1404240",
    "end": "1409520"
  },
  {
    "start": "1406000",
    "end": "1629000"
  },
  {
    "text": "in ' 04 on this thing called a triple handshake so the background here is the inria guys of carth baravan and some",
    "start": "1409520",
    "end": "1415559"
  },
  {
    "text": "other people have built this fully verified TLS implementation out um called MLS that is written in I want to",
    "start": "1415559",
    "end": "1422440"
  },
  {
    "text": "say um FP and they actually have a formal proof of it and so somewhere along the way they discover the proof of",
    "start": "1422440",
    "end": "1428080"
  },
  {
    "text": "them going through and they find this so the first thing um is straightforward",
    "start": "1428080",
    "end": "1434640"
  },
  {
    "text": "and was already known for a while which is that it's it's possible for an attacker to force two TLS connections at",
    "start": "1434640",
    "end": "1441559"
  },
  {
    "text": "the same keying material and the way this works is that if you're doing RSA",
    "start": "1441559",
    "end": "1446799"
  },
  {
    "text": "then if you're connecting to the attacker you just give the attacker the key you want to use and the attacker can",
    "start": "1446799",
    "end": "1453039"
  },
  {
    "text": "make his own connection to the server and give the server the same key and the only diversification in the handshake is",
    "start": "1453039",
    "end": "1458120"
  },
  {
    "text": "the random messages but the attacker can just Echo those and so you end up with the same keying material this has been known for a very long time uh",
    "start": "1458120",
    "end": "1464880"
  },
  {
    "text": "interestingly what wasn't known is it's also possible to do Diffy Helman if you're not careful um and that was sort",
    "start": "1464880",
    "end": "1470279"
  },
  {
    "text": "of new but um so many people use RSA that wasn't that wasn't the big answer so these con have the same met secret",
    "start": "1470279",
    "end": "1476919"
  },
  {
    "text": "but that's not sh out so serious uh ordinarily because look you're connecting the attacker the attacker",
    "start": "1476919",
    "end": "1482320"
  },
  {
    "text": "sees the data he gets anything he wants to the server and having and and having and so he couldent anything he wanted to anyway where this gets serious is when",
    "start": "1482320",
    "end": "1489640"
  },
  {
    "text": "you connect it with resumption so the client disconnects he makes a new connection and he makes a connection um",
    "start": "1489640",
    "end": "1497279"
  },
  {
    "text": "apparently he thinks to the attacker but the attacker proxies the data to the server and now he has a connection with",
    "start": "1497279",
    "end": "1502480"
  },
  {
    "text": "and because the keys are the same and the session IDs are the same now he has a connection with now he's a connection with a server but he has a connection",
    "start": "1502480",
    "end": "1508080"
  },
  {
    "text": "with a server that he know the attacker also knows the keys for and what the attacker does is he does exactly the",
    "start": "1508080",
    "end": "1513919"
  },
  {
    "text": "same thing I just showed you with the reh handshake he sends his own request because he knows the keys down the channel for this secure resource and",
    "start": "1513919",
    "end": "1521159"
  },
  {
    "text": "then he gets out of the way and lets the server request renegotiation at this point the server and the client",
    "start": "1521159",
    "end": "1527120"
  },
  {
    "text": "renegotiate and at this point the client SS a certificate and he signs the handshake and the client is authenticated to the",
    "start": "1527120",
    "end": "1533440"
  },
  {
    "text": "server he thinks he's authenticated to the attacker but he's actually authenticated to the server um and so",
    "start": "1533440",
    "end": "1538559"
  },
  {
    "text": "this is not good I think we can agree um uh so um that was unfortunate",
    "start": "1538559",
    "end": "1546320"
  },
  {
    "text": "um um um so this basically resurrects the",
    "start": "1546320",
    "end": "1552960"
  },
  {
    "text": "this resurrects the um the renegotiation attack um as caric points out but the attacker get to control the quest but he",
    "start": "1552960",
    "end": "1558039"
  },
  {
    "text": "gets the he gets the the client to do something on his behalf with a server um so again unfortunate um the fix for this",
    "start": "1558039",
    "end": "1566559"
  },
  {
    "text": "and you can see a sort of slowly backing into the TL 1.3 design here is the problem is you might think the problem",
    "start": "1566559",
    "end": "1572760"
  },
  {
    "text": "is a resumption but the problem is not the problem is the unknown key share in the first handshake and the fix for this is to stop is to make it not possible to",
    "start": "1572760",
    "end": "1579960"
  },
  {
    "text": "have two TLS handshakes from different people with the same keying material and so the the fix that that the baravan all",
    "start": "1579960",
    "end": "1586200"
  },
  {
    "text": "propose is to to take the server certificate and in fact take the entire handshake transcript up to the point of",
    "start": "1586200",
    "end": "1592240"
  },
  {
    "text": "key exchange and digest that into the key material so that basically that ties the master key into the server's",
    "start": "1592240",
    "end": "1598919"
  },
  {
    "text": "identity so you can't have two connections of two people with the same different identities in the same Keys",
    "start": "1598919",
    "end": "1605080"
  },
  {
    "text": "unless uh well at all actually as long as your r as long as your random numbers are fresh but as long as they have as",
    "start": "1605080",
    "end": "1611960"
  },
  {
    "text": "long as they different identities um unless you break the hash of course and because the resumed handshake is",
    "start": "1611960",
    "end": "1619279"
  },
  {
    "text": "connected to has the same King material from the initial handshake that inherits",
    "start": "1619279",
    "end": "1624320"
  },
  {
    "text": "that inherits the certificate and so that you The Binding continues",
    "start": "1624320",
    "end": "1630720"
  },
  {
    "start": "1629000",
    "end": "1985000"
  },
  {
    "text": "so things to deployed because you got to change all browsers and you got to change all servers yes right so the",
    "start": "1632159",
    "end": "1638120"
  },
  {
    "text": "state of state of play yes state of play is actually somewhat depressing which is that renegotiate the fix for",
    "start": "1638120",
    "end": "1644559"
  },
  {
    "text": "renegotiation has only gotten wide deployment fairly recently um and the",
    "start": "1644559",
    "end": "1649840"
  },
  {
    "text": "fix for triple handshake is literally we is is in a non sh is in a what Alpha",
    "start": "1649840",
    "end": "1657320"
  },
  {
    "text": "version of Firefox now um uh so yes it's not fantastic and it",
    "start": "1657320",
    "end": "1663559"
  },
  {
    "text": "takes a long time to fix these things and the worst part and I'll get to this in a second um is that it's not clear",
    "start": "1663559",
    "end": "1669120"
  },
  {
    "text": "what you do as a client when you encounter somebody who doesn't support these things um so the way this gets negotiated is you have an extension that",
    "start": "1669120",
    "end": "1675519"
  },
  {
    "text": "says please like you know do the session hash thing and what do you do when you run into somebody who doesn't take",
    "start": "1675519",
    "end": "1680640"
  },
  {
    "text": "doesn't it's worth that extension that's not so that's problematic sir what exploits have they",
    "start": "1680640",
    "end": "1685880"
  },
  {
    "text": "been based on this right so that one of these sort of I can't tell if I can't tell if it's",
    "start": "1685880",
    "end": "1692240"
  },
  {
    "text": "good or bad but one of the sort of odd things about working in this field is you get these very very nice pieces of",
    "start": "1692240",
    "end": "1697480"
  },
  {
    "text": "work that show that the protocols are B are badly damaged in some way or another or maybe bad maybe badly maybe not badly",
    "start": "1697480",
    "end": "1703320"
  },
  {
    "text": "but damaged and then you never hear about anybody exploiting them and so we know what you don't know is I mean I",
    "start": "1703320",
    "end": "1709600"
  },
  {
    "text": "mean someone someone demos it I I don't mean that it's not doesn't work I mean someone will show you a demo but you never hear well I was going to Amazon",
    "start": "1709600",
    "end": "1716360"
  },
  {
    "text": "and you know someone bought some stuff um you know using my using my credit card number um I don't actually have an",
    "start": "1716360",
    "end": "1722799"
  },
  {
    "text": "answer to this uh my my my glib answer is that everything else is in so so much",
    "start": "1722799",
    "end": "1729159"
  },
  {
    "text": "worse shape that this is not the easiest way to go after it what about the intelligence agencies can they use this",
    "start": "1729159",
    "end": "1734440"
  },
  {
    "text": "Stu so so neither of these attacks is a fantastic fastic attack on the kind of things I you would probably want to I'm",
    "start": "1734440",
    "end": "1740960"
  },
  {
    "text": "not an intelligence agency but on the kind of things you'd probably want to do if you're an intelligence agency because they're mostly about authentication",
    "start": "1740960",
    "end": "1746320"
  },
  {
    "text": "rather than about confidentiality um some of the some of the attacks have been published over the past few years",
    "start": "1746320",
    "end": "1751720"
  },
  {
    "text": "on confidentiality of TLs are things you might imagine intelligence agency deploying so for instance um the freak",
    "start": "1751720",
    "end": "1757720"
  },
  {
    "text": "attack on L Jam attack that came out earlier this year or the um or or",
    "start": "1757720",
    "end": "1763440"
  },
  {
    "text": "alternately perhaps the Lucky 13 uh work that Kenny Patterson did hallway so some",
    "start": "1763440",
    "end": "1768919"
  },
  {
    "text": "of the thing there there are attacks that are confidentiality threats um so those are things you might imagine",
    "start": "1768919",
    "end": "1774000"
  },
  {
    "text": "intelligence agency deploying in many cases the problem is they're active attacks so the the good news about this",
    "start": "1774000",
    "end": "1779440"
  },
  {
    "text": "by the way I should be clear the good news is that almost all these attacks are active attacks and so that doesn't",
    "start": "1779440",
    "end": "1784720"
  },
  {
    "text": "mean that you can't deploy them in the wild but it means that if you're going to deploy them at scale in the wild you may have some side effects that people",
    "start": "1784720",
    "end": "1789919"
  },
  {
    "text": "people notice and so it's not like we have a bunch of passive attacks that are that are really easy to um the point",
    "start": "1789919",
    "end": "1797080"
  },
  {
    "text": "which is again I don't certainly don't want to say that it's not not possible people deploying this um in the in the field um it's just that it's not trivial",
    "start": "1797080",
    "end": "1804360"
  },
  {
    "text": "uh the other thing of course worth noting is our defenses aren't very good in terms of detecting stuff so it may possible that these attacks are around",
    "start": "1804360",
    "end": "1809880"
  },
  {
    "text": "all time and we simply have no idea course the intelligence AG much better tax because they have access to the",
    "start": "1809880",
    "end": "1815399"
  },
  {
    "text": "infrastructure or can have right so I think I think to give an example of perhaps one where one where be difficult",
    "start": "1815399",
    "end": "1821559"
  },
  {
    "text": "to mount an active attack there's this Lucky 13 attack on that Kenny Patterson's group did where that relied",
    "start": "1821559",
    "end": "1826600"
  },
  {
    "text": "on getting the client to send the same data to the server over and over and over again right so you could mount an attack like that but the consequence",
    "start": "1826600",
    "end": "1832840"
  },
  {
    "text": "would be that the users machine is going to generate a lot of extra traffic and they might notice that under some circumstances so some of the attacks are",
    "start": "1832840",
    "end": "1839120"
  },
  {
    "text": "more detectable than others Dave so two different questions one was from the time the specification became",
    "start": "1839120",
    "end": "1846600"
  },
  {
    "text": "stable you you said you're now starting to get a reasonable amount of deployment",
    "start": "1846600",
    "end": "1852159"
  },
  {
    "text": "use uh calendar time roughly how long one to two years okay",
    "start": "1852159",
    "end": "1857960"
  },
  {
    "text": "second question is um you made reference to client authentication as opposed to",
    "start": "1857960",
    "end": "1863840"
  },
  {
    "text": "server and my impression has been that on the average TLS has been used for",
    "start": "1863840",
    "end": "1869559"
  },
  {
    "text": "client authentication only a tiny amount comparatively yes if that's starting to change uh how and when and by whom right",
    "start": "1869559",
    "end": "1877120"
  },
  {
    "text": "so there are um there are a couple settings in which client authentication is widely deployed interprises do it quite often I so first of all you're",
    "start": "1877120",
    "end": "1883240"
  },
  {
    "text": "absolutely right the vast majority of TLS is one way authenticated server only the settings in which it which it's",
    "start": "1883240",
    "end": "1889360"
  },
  {
    "text": "deployed um widely are these Enterprise settings um and also starting to deploy",
    "start": "1889360",
    "end": "1894720"
  },
  {
    "text": "more on web RTC and stuff like that where you want Mutual authentication that aren't really classic client server settings they're just settings that",
    "start": "1894720",
    "end": "1900480"
  },
  {
    "text": "happen to be client server but it's absolutely the case that um that this is a smaller um a smaller set of things",
    "start": "1900480",
    "end": "1907960"
  },
  {
    "text": "it's worth noting that the renegotiation info attack offer does not depend that's that works against classic client",
    "start": "1907960",
    "end": "1913960"
  },
  {
    "text": "authentication even with even with passwords which is incredible common so this this works primarily with",
    "start": "1913960",
    "end": "1919559"
  },
  {
    "text": "certificate verification because the in this case the attacker could have convinced you to give you to give him",
    "start": "1919559",
    "end": "1925399"
  },
  {
    "text": "your password in any case he he didn't need that um but because the the client thinks he's talking to attacker not not",
    "start": "1925399",
    "end": "1931799"
  },
  {
    "text": "to the not to the victim but um the other one applies like for Amazon Eric since we're slowing you down",
    "start": "1931799",
    "end": "1939039"
  },
  {
    "text": "no please let me jump in with a comment on the berou paper from May uh which",
    "start": "1939039",
    "end": "1945120"
  },
  {
    "text": "showed that over half a dozen popular implementations are seriously flawed as",
    "start": "1945120",
    "end": "1950960"
  },
  {
    "text": "a result of compositions of the client side and the server side with all these these pads that are not supposed to",
    "start": "1950960",
    "end": "1958480"
  },
  {
    "text": "exist you you seem to be concentrating on the spec uh what might you do in 1.3",
    "start": "1958480",
    "end": "1965600"
  },
  {
    "text": "that would uh minimize the vast amount of of",
    "start": "1965600",
    "end": "1971679"
  },
  {
    "text": "paths that shouldn't be there thank you for thank you for poting that um",
    "start": "1971679",
    "end": "1978799"
  },
  {
    "text": "okay so um yes we removing a b we removing a pile of stuff um so um",
    "start": "1978799",
    "end": "1986639"
  },
  {
    "start": "1985000",
    "end": "2109000"
  },
  {
    "text": "so FS 1.3 has become more complicated in terms of um well perhaps in terms of",
    "start": "1986639",
    "end": "1992480"
  },
  {
    "text": "protocol but I mean in terms of an effort size than we initially envisioned um but the objectives remain the same uh",
    "start": "1992480",
    "end": "1999360"
  },
  {
    "text": "so the first objective was to clean things up by which I mean remove a bunch of stuff which is either unsafe or it's",
    "start": "1999360",
    "end": "2004880"
  },
  {
    "text": "not widely used or both and there's some Matrix of how unsafe is it versus how widely used is it um to try to improve",
    "start": "2004880",
    "end": "2012120"
  },
  {
    "text": "the security of the system and I think this goes two ways one is by trying to improve the specification and the other",
    "start": "2012120",
    "end": "2018000"
  },
  {
    "text": "is by making things enough simpler that you could you have a a better shot at doing an implementation that would be uh",
    "start": "2018000",
    "end": "2024000"
  },
  {
    "text": "um that would be secure I'm not sure I want to vouch for how how we done on that second half of it that we're certainly trying",
    "start": "2024000",
    "end": "2030600"
  },
  {
    "text": "um as I said earlier the Privacy properties of ts12 are actually not fantastic and things have and people's",
    "start": "2030600",
    "end": "2037000"
  },
  {
    "text": "view of how much you should encrypt has sort of gotten more aggressive over the past 20 years uh the other thing that's sort of relevant",
    "start": "2037000",
    "end": "2043240"
  },
  {
    "text": "is the we TLS Performance used to concentrate on CPU and CPUs have gotten",
    "start": "2043240",
    "end": "2049560"
  },
  {
    "text": "very very fast and cryptographic algorithms gotten much faster comparatively with especially with the rise of a bit to curve protography but",
    "start": "2049560",
    "end": "2055960"
  },
  {
    "text": "the speed of light unfortunately has not gotten any faster and despite a lot of effort we haven't made much progress in that",
    "start": "2055960",
    "end": "2062560"
  },
  {
    "text": "so so so minimizing the number of round trips has become um has become very important property um and there's been a",
    "start": "2062560",
    "end": "2068919"
  },
  {
    "text": "lot of work on that over the year some of it here um and finally the unfortunate part uh about this is we",
    "start": "2068919",
    "end": "2075560"
  },
  {
    "text": "have a lot of important use cases which we can't throw over so we would like to have a world in which people stop using",
    "start": "2075560",
    "end": "2081760"
  },
  {
    "text": "TLS 1.2 and start using T 1.3 and if we take any large set of use cases that people actually rely on and we abandon",
    "start": "2081760",
    "end": "2087720"
  },
  {
    "text": "those then we'll have a bifurcated World whether there's 1.2 1.3 and we constantly fixing 1.2 and so there has",
    "start": "2087720",
    "end": "2093280"
  },
  {
    "text": "to be there has to be a balance between trying to and then this is where where complexity unfortunately comes in has to",
    "start": "2093280",
    "end": "2098880"
  },
  {
    "text": "be a balance between maintaining all the use cases that people really really care about so that they will convert while",
    "start": "2098880",
    "end": "2104560"
  },
  {
    "text": "also trying to trim off all stuff that's dangerous wish they wouldn't use yes so um an SSL at least there was uh all the",
    "start": "2104560",
    "end": "2112839"
  },
  {
    "start": "2109000",
    "end": "2226000"
  },
  {
    "text": "computation was put on the services and there were dos attacks that leveraged that yes has that changed and are you",
    "start": "2112839",
    "end": "2119800"
  },
  {
    "text": "planning to move more of the computation to the client so litic curve inherently pushes more the computation on the",
    "start": "2119800",
    "end": "2124880"
  },
  {
    "text": "client just because the Crypt maath um it's not a deliberate design decision it's just the way it happens to be um",
    "start": "2124880",
    "end": "2131400"
  },
  {
    "text": "the there's been a bunch of discussion about other anti-dust measures primarily um primarily anti measures that like",
    "start": "2131400",
    "end": "2139359"
  },
  {
    "text": "involve puzzles and stuff like that and hard to know how those are going to really work the bottom line is most of",
    "start": "2139359",
    "end": "2144560"
  },
  {
    "text": "these systems unless you do something unless you do something explicit it's pretty easy for the client to generate garbage and force the server to do",
    "start": "2144560",
    "end": "2150400"
  },
  {
    "text": "something or other um and that's true that's true with almost any protocol which doesn't have an explicit kind of puzzle solving kind of thing and and the",
    "start": "2150400",
    "end": "2157119"
  },
  {
    "text": "difficulty with those is a um they tend to have very unpleasant differential differential impacts on you know slow",
    "start": "2157119",
    "end": "2164160"
  },
  {
    "text": "slow devices versus Fast devices and the other issue is they tend to add R trips um because you because you I mean if you",
    "start": "2164160",
    "end": "2170520"
  },
  {
    "text": "look when I show you the tail from point three hand sh become obvious that the server is asked to do something on the very first message and that something is",
    "start": "2170520",
    "end": "2175960"
  },
  {
    "text": "expensive and the only way and and there's no real way for him to verify the client's done anything beforehand so",
    "start": "2175960",
    "end": "2182079"
  },
  {
    "text": "the only way for him to basically push back on the client is to force the client to eat a round trip order to",
    "start": "2182079",
    "end": "2187160"
  },
  {
    "text": "solve some puzzle and so that cuts into performance Des desires but yes we have talked about it",
    "start": "2187160",
    "end": "2193200"
  },
  {
    "text": "um the other thing is frankly it's just the",
    "start": "2193200",
    "end": "2198280"
  },
  {
    "text": "the degree to which the crypto has gotten so fast has really kind of pushed back on people's concerned that",
    "start": "2198280",
    "end": "2203520"
  },
  {
    "text": "computational dos if you Adam Langley had this very nice talk um at velocity a few years ago about deploying TS at",
    "start": "2203520",
    "end": "2209760"
  },
  {
    "text": "Google and how little impact it had in their infrastructure to do so people have kind of just gotten bored about the whole performance thing the whole the",
    "start": "2209760",
    "end": "2215319"
  },
  {
    "text": "whole CPU performance thing I'm not saying it doesn't matter at all there are still places where it matters but it's a much lower impact thing than it",
    "start": "2215319",
    "end": "2220520"
  },
  {
    "text": "used to be where it's the dominant cost so we have a bunch of things which we took out and I'll go through them",
    "start": "2220520",
    "end": "2227119"
  },
  {
    "start": "2226000",
    "end": "2455000"
  },
  {
    "text": "reasonably quickly the biggest one the one that actually kind of hurts people here is static RSA um so for a very long",
    "start": "2227119",
    "end": "2234000"
  },
  {
    "text": "time TLS had exactly the property you're talking about where it was RSA only largely there was Diffy Helman ecdhe and",
    "start": "2234000",
    "end": "2239760"
  },
  {
    "text": "there people didn't use them because they're too expensive and um that a was",
    "start": "2239760",
    "end": "2245520"
  },
  {
    "text": "very expensive for the server and B had lousy had lousy PFS Properties by which I mean none namely the server's private",
    "start": "2245520",
    "end": "2251319"
  },
  {
    "text": "key were revealed basically was game over um so we've so that was bad and the other thing was",
    "start": "2251319",
    "end": "2257920"
  },
  {
    "text": "It was kind of messing up the handshake in terms of now you had to support both DHE and RSA modes so we just took that",
    "start": "2257920",
    "end": "2263000"
  },
  {
    "text": "out entirely the other thing we took out um is TSU support this thing that we were",
    "start": "2263000",
    "end": "2268880"
  },
  {
    "text": "calling Custom Diffy homeing groups and what I mean by that is it allowed the server to basically make up some Dy",
    "start": "2268880",
    "end": "2275599"
  },
  {
    "text": "Helman group and just tell the client to use it instead of using one of the well-known groups like The NIS groups",
    "start": "2275599",
    "end": "2281680"
  },
  {
    "text": "and this was true this is definitely true this was the the only way you could run finite field to Helman by which I mean I mean you could go you could",
    "start": "2281680",
    "end": "2289160"
  },
  {
    "text": "certainly use a group that someone else had generated but there was no way to say use group 32 you had to actually give give the client the entire group",
    "start": "2289160",
    "end": "2295520"
  },
  {
    "text": "and it was possible with EC but uh but it was possible with EC to use custom groups but nobody did it uh as um both",
    "start": "2295520",
    "end": "2304319"
  },
  {
    "text": "because we want to people to move to EC and we wanted to be the handshake smaller and because there were concerns about the and because and because the",
    "start": "2304319",
    "end": "2312079"
  },
  {
    "text": "triple handshake attack on Diffy Helman actually used a carefully constructed bad group we thought it'd be a good idea",
    "start": "2312079",
    "end": "2317319"
  },
  {
    "text": "not to allow not to allow the serers specify their own group and so um so TLS",
    "start": "2317319",
    "end": "2322359"
  },
  {
    "text": "now B TS 1.3 will only allow you to use a small set of groups that are defined um there's another reason why this is",
    "start": "2322359",
    "end": "2327800"
  },
  {
    "text": "attractive that I'll get to in a second we actually did a survey and we found two sites specify custom groups for for",
    "start": "2327800",
    "end": "2333280"
  },
  {
    "text": "EC for EC yeah break you're going to break two sites those people can have a bad day Amazon",
    "start": "2333280",
    "end": "2340000"
  },
  {
    "text": "and who else those might",
    "start": "2340000",
    "end": "2346240"
  },
  {
    "text": "be so so right so we so we sort of the the the concern that pushes back on this",
    "start": "2346240",
    "end": "2353359"
  },
  {
    "text": "is you say well if you have a small number of groups that makes an attractive Target for pre-computation attacks and the I think we have two",
    "start": "2353359",
    "end": "2361119"
  },
  {
    "text": "basic answers to that that a we did we that and decided do this anyway and the two basic reasons were",
    "start": "2361119",
    "end": "2367280"
  },
  {
    "text": "one that we would like to push Feld a much larger de group so we don't specify any finite field Group 2048 um so that",
    "start": "2367280",
    "end": "2374960"
  },
  {
    "text": "that pushes back that makes that makes it much harder to mount those kinds of attacks because you have much stronger group and the second is you want to push people towards EC and we don't think",
    "start": "2374960",
    "end": "2381040"
  },
  {
    "text": "it's a good idea for people to gener their own EC groups is that correct okay thank you I did not know that um so um and so we",
    "start": "2381040",
    "end": "2389800"
  },
  {
    "text": "want people to use a very small number of EC groups um TLS 13 basically specifies recommends a total of four EC",
    "start": "2389800",
    "end": "2396119"
  },
  {
    "text": "groups um p256 p34 um two Cur 2559 and goldilux",
    "start": "2396119",
    "end": "2402040"
  },
  {
    "text": "448 um which are the new the two new curves specified by cfrg so we don't want to encourage people to invent their",
    "start": "2402040",
    "end": "2408119"
  },
  {
    "text": "own um EC groups um we REM compression which I",
    "start": "2408119",
    "end": "2413480"
  },
  {
    "text": "said was kind of harmful um we removed negotiation but then we had to sort of add back in this special accommodation we'll talk back in a minute um there",
    "start": "2413480",
    "end": "2420440"
  },
  {
    "text": "have been a series of an increasingly dangerous series of attacks on these composite Cipher modes partly because",
    "start": "2420440",
    "end": "2425880"
  },
  {
    "text": "TLS used an odd Cipher construction an odd composite mode construction where it",
    "start": "2425880",
    "end": "2430920"
  },
  {
    "text": "macked and then encrypted rather encrypted then macked and so we just in",
    "start": "2430920",
    "end": "2436240"
  },
  {
    "text": "order to simplify the system and to avoid concerns about this we've just swapped those out entirely and all we're specifying is aad which in practice",
    "start": "2436240",
    "end": "2442760"
  },
  {
    "text": "means G counter mode or chaa po 13 um5 and we've also um rejiggered the",
    "start": "2442760",
    "end": "2448960"
  },
  {
    "text": "resumption quite a bit so I don't think I need to rationalize why we did this so I'm not",
    "start": "2448960",
    "end": "2454520"
  },
  {
    "text": "going to um I rationalized this for a minute so",
    "start": "2454520",
    "end": "2459839"
  },
  {
    "start": "2455000",
    "end": "2621000"
  },
  {
    "text": "there was this nice there's a nice paper of the Beast um the crime attack showing how to exploit compression so the general property is that and this is a",
    "start": "2459839",
    "end": "2466599"
  },
  {
    "text": "great example as I was saying of where the web environment is particularly dangerous so there's a nice attack",
    "start": "2466599",
    "end": "2472640"
  },
  {
    "text": "showing that if the attacker could control part of the data on the wire and then didn't know some of the other data on The Wire they could use compression",
    "start": "2472640",
    "end": "2479000"
  },
  {
    "text": "to determine what the other data on the wire was and the basic idea is that you have some Target data adventur like a",
    "start": "2479000",
    "end": "2484680"
  },
  {
    "text": "cookie or a password and you some data which you know which has a which you",
    "start": "2484680",
    "end": "2490200"
  },
  {
    "text": "want to see how much redundancy it has Visa the cookie or the password and if you get a lot of comp and you look at the output Cipher text size and if you",
    "start": "2490200",
    "end": "2496599"
  },
  {
    "text": "get a lot of compression then you got some good indication that you got a lot of redundancy and if you get bad compression then you're probably off and",
    "start": "2496599",
    "end": "2501760"
  },
  {
    "text": "you keep iterating over and over again until until you actually back out the cookie or the password and it turns out",
    "start": "2501760",
    "end": "2508640"
  },
  {
    "text": "that so as I said this is an example where the web environment is particularly hazardous because the attacker has the ability to implant",
    "start": "2508640",
    "end": "2515079"
  },
  {
    "text": "Javas from the client and make the client do these things over and over and over again with different in different input plane",
    "start": "2515079",
    "end": "2520319"
  },
  {
    "text": "texts so nobody really knows how to do this safely and generically um that's a",
    "start": "2520319",
    "end": "2525400"
  },
  {
    "text": "great open research problem if anybody has an answer to how to use compression andion together um so we don't know how",
    "start": "2525400",
    "end": "2530520"
  },
  {
    "text": "to do this safely generically and the whole point of TS is to provide generic mechanisms so we just taken this out entirely as a side note htb2 recently",
    "start": "2530520",
    "end": "2538119"
  },
  {
    "text": "standardized their own compression mechanism for headers but it's incredibly limited and doesn't do a very",
    "start": "2538119",
    "end": "2543880"
  },
  {
    "text": "good job of compression compared to what the state ofth art is but only leaks a very small amount of information roughly",
    "start": "2543880",
    "end": "2549240"
  },
  {
    "text": "what it is it's a rep it only finds exact replicas so if you have like exactly the same head over and over",
    "start": "2549240",
    "end": "2554680"
  },
  {
    "text": "again it works but if you have things are all by one it doesn't work at all so you don't get as good impression but on the other hand it makes it much harder",
    "start": "2554680",
    "end": "2559839"
  },
  {
    "text": "to attack this this keeps coming up by the way we had just about two months ago",
    "start": "2559839",
    "end": "2565079"
  },
  {
    "text": "someone asking us to put compression back in again and being yelled down um so uh in in in a feeble perhaps feeble",
    "start": "2565079",
    "end": "2573040"
  },
  {
    "text": "attempt to stamp compression out even in 1.2 um Tails 1.3 implantations are forbidden to offer compression um even",
    "start": "2573040",
    "end": "2579440"
  },
  {
    "text": "if they do 1.2 and they're required to choke if anybody offers compression to them so we're kind of hoping that people stop using this in 1.2 to so",
    "start": "2579440",
    "end": "2586640"
  },
  {
    "text": "would in deployment how much rely on compression um people already basically turned it people already starting to",
    "start": "2586640",
    "end": "2592599"
  },
  {
    "text": "turn it off in browsers so I work from Milla we think a lot about browsers but browsers are also the dominant cost",
    "start": "2592599",
    "end": "2598400"
  },
  {
    "text": "where almost all the bandwidth and CPU um on TLS goes it's not that people",
    "start": "2598400",
    "end": "2603680"
  },
  {
    "text": "don't use TLS things it's just that browsers are so big um and people already started turning this off in browsers because because they're",
    "start": "2603680",
    "end": "2609680"
  },
  {
    "text": "terrified of it so the internet of the whole W have a big impact there be some small subpopulations that do use compression",
    "start": "2609680",
    "end": "2615839"
  },
  {
    "text": "these people are kind will cannot get hosted um I don't think I need to",
    "start": "2615839",
    "end": "2621160"
  },
  {
    "start": "2621000",
    "end": "2697000"
  },
  {
    "text": "explain why you're removed onad I don't think I need to explain this either oh we also removed TLS 1.3",
    "start": "2621160",
    "end": "2629240"
  },
  {
    "text": "allowed you to negotiate Point formats so you could have uncompressed points or you could have compressed points with",
    "start": "2629240",
    "end": "2634280"
  },
  {
    "text": "two different kinds of Point compression depending on which kind kind of group you had um and so um we've removed that",
    "start": "2634280",
    "end": "2640200"
  },
  {
    "text": "entirely so um now you can only have uncompressed points which is all anybody ever really cared",
    "start": "2640200",
    "end": "2645440"
  },
  {
    "text": "about so yeah I'll walk through the reasoning for this um the TLs implementation's already essentially",
    "start": "2645440",
    "end": "2652440"
  },
  {
    "text": "only supported on compressed points that was the mandatory thing to have and the um so there wasn't a lot of Hope people",
    "start": "2652440",
    "end": "2659240"
  },
  {
    "text": "were going to move to compressed points only compressed points and then also that would mean you had to do both compressed and uncompressed because you",
    "start": "2659240",
    "end": "2665200"
  },
  {
    "text": "always have to support UNC compressed and so we figured we might as well keep rather than negotiation was bad and keeping uncompress around was was easier",
    "start": "2665200",
    "end": "2672240"
  },
  {
    "text": "and um we for all the new groups the 25519 and the 448 they're they naturally",
    "start": "2672240",
    "end": "2679520"
  },
  {
    "text": "only have one coordinate so the uncompressed form is actually the short form so we're only allowing one form for",
    "start": "2679520",
    "end": "2685200"
  },
  {
    "text": "each group if it turned out to be the case that people were really bad out of shape that p256 was taking up twice as",
    "start": "2685200",
    "end": "2690760"
  },
  {
    "text": "much space we Define p256 compressed and call it the uncompressed format nobody seems to care about this",
    "start": "2690760",
    "end": "2697960"
  },
  {
    "start": "2697000",
    "end": "2947000"
  },
  {
    "text": "so um the basic design the basic design",
    "start": "2698720",
    "end": "2703760"
  },
  {
    "text": "modality of the people learned over the past I don't know 20 years about how to make things faster is to stop being so",
    "start": "2703760",
    "end": "2710079"
  },
  {
    "text": "stupid about what the server knows so if you look at 1 point if you look at 1.2 basically the client assumes nothing",
    "start": "2710079",
    "end": "2717119"
  },
  {
    "text": "at the service capabilities whatsoever and that means that you you lose basically the client's first message",
    "start": "2717119",
    "end": "2722280"
  },
  {
    "text": "essentially is an advertisement and you learn nothing and you and you and spend that first sh largely learning the server public key and so there's a whole",
    "start": "2722280",
    "end": "2731480"
  },
  {
    "text": "long strain of work um going back to FasTrack and then snapart um and stuff",
    "start": "2731480",
    "end": "2737280"
  },
  {
    "text": "like that about how to optimize these exchanges if you believe that the client knows that the server's parameters are",
    "start": "2737280",
    "end": "2742359"
  },
  {
    "text": "in any way and there are two things a client might have he might have specific knowledge you might have general knowledge and TLS 1.3 takes advantage of",
    "start": "2742359",
    "end": "2750240"
  },
  {
    "text": "both and so in order to make the general knowledge problem better we try to narrowly constrain the range of options",
    "start": "2750240",
    "end": "2756040"
  },
  {
    "text": "which servers might actually have so we only have a very small number of Diffy homman groups um and we only have Diffy homman or elliptic curve diyman and this",
    "start": "2756040",
    "end": "2764280"
  },
  {
    "text": "means the client can make a pretty good guess of what the server is capable of doing and in particular if the client generates a Diffy Helman share in one of",
    "start": "2764280",
    "end": "2771079"
  },
  {
    "text": "two basic popular groups that probably the server will accept as extraordinarily high and so basically",
    "start": "2771079",
    "end": "2776280"
  },
  {
    "text": "the two groups that are most likely to be the case are p56 and 25519 so what this means is the client can in",
    "start": "2776280",
    "end": "2783400"
  },
  {
    "text": "his initial handshake offer you offer the server Diffy home and and can actually offer more than one but",
    "start": "2783400",
    "end": "2789440"
  },
  {
    "text": "um I just drawing it here as one and so he picks 2 p256 and he offers the server Dy home and share and this means that",
    "start": "2789440",
    "end": "2794640"
  },
  {
    "text": "the server can start encrypting right away because the server can generate his own de Helman share and start encrypting under the shared key right away so this",
    "start": "2794640",
    "end": "2800319"
  },
  {
    "text": "allows you to shave off a single a round trip off the handshake immediately and it also has the property that basically",
    "start": "2800319",
    "end": "2805640"
  },
  {
    "text": "everything the server sends past the initial def Helman share is encrypted which obviously is attractive if you",
    "start": "2805640",
    "end": "2811520"
  },
  {
    "text": "want to because part of our goal is encrypt more of the handshake you send you to the group in",
    "start": "2811520",
    "end": "2818520"
  },
  {
    "text": "essentially one one of in a group that a group that either on general knowledge you think everybody supports which is",
    "start": "2818520",
    "end": "2824640"
  },
  {
    "text": "probably p56 or 25509 or the last thing the server used with you if you remember um so there's a there there's a there's",
    "start": "2824640",
    "end": "2831440"
  },
  {
    "text": "a if you guess wrong there's a way to deal with it so it doesn't doesn't just fail um there's no way um obviously",
    "start": "2831440",
    "end": "2839880"
  },
  {
    "text": "obviously uh the if you don't have any information at the service capabilities there's no",
    "start": "2839880",
    "end": "2845280"
  },
  {
    "text": "way to do that than this basically um unfortunately so this looks this looks larger like",
    "start": "2845280",
    "end": "2851920"
  },
  {
    "text": "this is is L A rearrangement of the 1.2 handshake largely um but basically by having the client speak first so it used",
    "start": "2851920",
    "end": "2857800"
  },
  {
    "text": "to be that in 1.2 in Diffy Helman the client the server sent his to hel and share in his first message but the",
    "start": "2857800",
    "end": "2863720"
  },
  {
    "text": "client's to hel and share didn't go until his third message and now you just basically moved everything up by one",
    "start": "2863720",
    "end": "2869760"
  },
  {
    "text": "so you recall the target the target we were looking for performance was that the client would experience a one round",
    "start": "2869760",
    "end": "2876839"
  },
  {
    "text": "trip one round trip exchange and the server would experience well we didn't say the server but the server now has a zero round trip exchange basically",
    "start": "2876839",
    "end": "2882079"
  },
  {
    "text": "because the server can start speaking right away now the server doesn't know who he's talking to of course but there are plenty of times when the server actually wants to say something um even",
    "start": "2882079",
    "end": "2888400"
  },
  {
    "text": "though he doesn't know he's talking to so a good example would be um if you're hp2 has a settings frame that basically",
    "start": "2888400",
    "end": "2894520"
  },
  {
    "text": "says these are the properties I like you use for this connection the server can send that right away the other thing the server can do um optimistically um that",
    "start": "2894520",
    "end": "2900640"
  },
  {
    "text": "we're still working with the details is HTTP has this thing called server push where the server can say",
    "start": "2900640",
    "end": "2906200"
  },
  {
    "text": "in case you wanted to ask for this request later here's the data and so um it's pretty plausible that the client",
    "start": "2906200",
    "end": "2912119"
  },
  {
    "text": "comes in and the client looks this naive the client probably wants index.html or he wants favicon.ico and so you could",
    "start": "2912119",
    "end": "2917400"
  },
  {
    "text": "probably push either of those down at this point so you say you say some run trips um",
    "start": "2917400",
    "end": "2923160"
  },
  {
    "text": "so and the client basically get the client sends his finished Mac at the end",
    "start": "2923160",
    "end": "2929040"
  },
  {
    "text": "and uh and he gets to stand his application dat at the same time so the client basically experiences a one- run trip handshake at this",
    "start": "2929040",
    "end": "2934599"
  },
  {
    "text": "point um so as I said this is all Diffy Helman makes it much simpler to assume it's",
    "start": "2934599",
    "end": "2939799"
  },
  {
    "text": "Diffy Helman because then we don't think about what happens if it was if it's the server's public key being carried in",
    "start": "2939799",
    "end": "2945040"
  },
  {
    "text": "this but not the but not the client's sh um so you might very well want to do",
    "start": "2945040",
    "end": "2952160"
  },
  {
    "start": "2947000",
    "end": "3368000"
  },
  {
    "text": "client authentication the client authentication looks about the way you expect namely in",
    "start": "2952160",
    "end": "2957640"
  },
  {
    "text": "the server's second flight the server sends you a s request which is basically please send me aert and then the client",
    "start": "2957640",
    "end": "2963480"
  },
  {
    "text": "basically sends his certificate and Things Are new obviously his certificate and a signature over the handshake at this point so you're still the same one",
    "start": "2963480",
    "end": "2970760"
  },
  {
    "text": "retrip exchange but you'll notice that the client certificate is encrypted so the Privacy properties here are about what you expect namely that the server",
    "start": "2970760",
    "end": "2978480"
  },
  {
    "text": "certificate is encrypted against passive attackers which is of some value in non-web context perhaps not as much in",
    "start": "2978480",
    "end": "2983760"
  },
  {
    "text": "web context because you can just elicit the certificate yourself but the client certificate is encrypted against active attackers because the client validates",
    "start": "2983760",
    "end": "2989200"
  },
  {
    "text": "the server seert prior to sending his own certificate so this is we've already removed one of the reasons to",
    "start": "2989200",
    "end": "2994440"
  },
  {
    "text": "renegotiation which is practing the client certificate at the same time as you improve the performance somewhat um",
    "start": "2994440",
    "end": "2999760"
  },
  {
    "text": "it's worth noting that this is effectively um Sigma um by by cek um uh",
    "start": "2999760",
    "end": "3005280"
  },
  {
    "text": "they took us quite a while to notice that by the way um because um the messages were in kind of a funny order",
    "start": "3005280",
    "end": "3010440"
  },
  {
    "text": "and um and we and and in particular it used to be the Certificate request came between the certificate and the",
    "start": "3010440",
    "end": "3015599"
  },
  {
    "text": "signature um and it's was like and suddenly like caric was staring at this and he's like this is just Sigma like and we start drawing diagrams so um so",
    "start": "3015599",
    "end": "3025240"
  },
  {
    "text": "as say the client can General a pretty good guess about what the servers groups are especially because they're only a few but it's possible client's wrong and",
    "start": "3025240",
    "end": "3031760"
  },
  {
    "text": "the most common thing will be the client say thinks the server wants p256 but the server has a much higher security",
    "start": "3031760",
    "end": "3037480"
  },
  {
    "text": "guarantee there's probably not a much point if and if you have two 256 groups it's possible for the server to support",
    "start": "3037480",
    "end": "3043280"
  },
  {
    "text": "both and so if there are two groups of equivalent strength and the client offers you one the server probably should just pick it but if you want a",
    "start": "3043280",
    "end": "3049640"
  },
  {
    "text": "higher security guarantee and basically the server just says look I see I see",
    "start": "3049640",
    "end": "3054720"
  },
  {
    "text": "you give me but I wish you'd give me p34 so please come back with p34 and the client sends the same thing so this is",
    "start": "3054720",
    "end": "3060400"
  },
  {
    "text": "unfortunate and shouldn't happen very often because it's chewing up a round trip but uh we we given that um as I say",
    "start": "3060400",
    "end": "3068359"
  },
  {
    "text": "clients are beginning to pick up more and more server specific knowledge for things like hsts and hpkp um and cookies",
    "start": "3068359",
    "end": "3074839"
  },
  {
    "text": "so especially on the web it's very common for for the uh for the client to have talked to the server before and know where the service properties are so",
    "start": "3074839",
    "end": "3080640"
  },
  {
    "text": "the client can memorize the stuff yeah okay uh yes",
    "start": "3080640",
    "end": "3087040"
  },
  {
    "text": "so this is for protocol engineering reasons it turns out um I get this in a",
    "start": "3087040",
    "end": "3092119"
  },
  {
    "text": "second so um the in TLS it doesn't really matter but",
    "start": "3092119",
    "end": "3099359"
  },
  {
    "text": "in dtls it's very nice to have a situation where the server can force you to go away and not have to keep any",
    "start": "3099359",
    "end": "3105480"
  },
  {
    "text": "state because you um you were asking earlier about about dos dos attacks one",
    "start": "3105480",
    "end": "3111040"
  },
  {
    "text": "very common anti- dos measure is for the server to say I'm going to give you random value and please come back and",
    "start": "3111040",
    "end": "3116599"
  },
  {
    "text": "prove to me you have that random value thus demonstrating that you're at the IP address you claim to be and so um and so",
    "start": "3116599",
    "end": "3124480"
  },
  {
    "text": "for for stream protocols like TLS like TCP that doesn't help very much because they all have their own mechanism but if",
    "start": "3124480",
    "end": "3130599"
  },
  {
    "text": "you're doing T TCB fast open or you're doing dtls over UDP then you'd like to be able to do this rejection mechanism",
    "start": "3130599",
    "end": "3136880"
  },
  {
    "text": "without having um without having the server have to keep any state whatsoever and I know I know it doesn't sound like",
    "start": "3136880",
    "end": "3143559"
  },
  {
    "text": "an answer to the question but it's I'm getting there and the so the issue is we wanted we wanted to harmonize these",
    "start": "3143559",
    "end": "3148839"
  },
  {
    "text": "mechanisms we the same mechan so every time the server said go away and come back they could do the same thing and so",
    "start": "3148839",
    "end": "3155680"
  },
  {
    "text": "um just just so we didn't have like any more protocol messages and it turns out so the server has to find some way to",
    "start": "3155680",
    "end": "3162480"
  },
  {
    "text": "maintain the um to to maintain the state that of right and I forgot to mention",
    "start": "3162480",
    "end": "3169079"
  },
  {
    "text": "that is zata which is we're very concerned about downgraded tax on this exchange here because what happens if I",
    "start": "3169079",
    "end": "3174520"
  },
  {
    "text": "offer p256 and the server says we'll come back with like you know P1 p160",
    "start": "3174520",
    "end": "3179559"
  },
  {
    "text": "right and so we don't want to allow downgrade attacks and so the the standard way to PR downgrade taxs on TLS is to continue the handshake cash for",
    "start": "3179559",
    "end": "3185799"
  },
  {
    "text": "the entire exchange here right and so it turns out that for protocol engineering reasons like I talking about in more",
    "start": "3185799",
    "end": "3191440"
  },
  {
    "text": "detail offline um if you basically Echo if you basically only add to to the the",
    "start": "3191440",
    "end": "3198599"
  },
  {
    "text": "thing you sent it makes it easier to easier to keep the state floating around which may not sound very",
    "start": "3198599",
    "end": "3204799"
  },
  {
    "text": "convincing I'd be happy to draw it out the the basic observation is that the client the server can basically just",
    "start": "3204799",
    "end": "3210839"
  },
  {
    "text": "look at look at the handshake and say well the last thing on the list must have been must been the thing that was added and then and then back the state",
    "start": "3210839",
    "end": "3217079"
  },
  {
    "text": "out verify the rest of History without actually having to sa exactly yes Ser",
    "start": "3217079",
    "end": "3223079"
  },
  {
    "text": "does start the hash the first Ser well Server doesn't have to that's what I'm saying um um we actually have two",
    "start": "3223079",
    "end": "3228839"
  },
  {
    "text": "mechanisms were're discussing one of which is this and one of which invol is actually offloading it into a cookie but we'd like to retain both and and having",
    "start": "3228839",
    "end": "3234640"
  },
  {
    "text": "having that list makes it easier those are not encrypted these are not encrypted that's correct that can't be because you have no so it's the same",
    "start": "3234640",
    "end": "3241400"
  },
  {
    "text": "random in both messages yes is the same message except that it contains the same thing yes it could be encrypted with a",
    "start": "3241400",
    "end": "3247359"
  },
  {
    "text": "key known to the server but now we only have to store one key um let's pick that up",
    "start": "3247359",
    "end": "3254760"
  },
  {
    "text": "offline okay so the that's how you get to one round trip there's no way to get",
    "start": "3255040",
    "end": "3260160"
  },
  {
    "text": "to zero run trips without doing a bunch of scoring around and in particular there's no way to get zero run trips without having the client talk to the",
    "start": "3260160",
    "end": "3265839"
  },
  {
    "text": "server beforehand as far as I know um if someone knows that' be great come up",
    "start": "3265839",
    "end": "3271760"
  },
  {
    "text": "with yeah um um I mean there are there are if you assume side channels like you",
    "start": "3271760",
    "end": "3277079"
  },
  {
    "text": "say if the keys in the DNS or something like that or you assume um IP but I mean but but generally speaking with Dy you",
    "start": "3277079",
    "end": "3282720"
  },
  {
    "text": "can to this so the basic observation and this goes back at least as far as a snap start with by Adam Langley and migu but",
    "start": "3282720",
    "end": "3289440"
  },
  {
    "text": "I think actually even further um is that the client can cach the service to",
    "start": "3289440",
    "end": "3295799"
  },
  {
    "text": "hel parameters and use those for a future handshake in fact it goes back as far it goes back as far as FasTrack um",
    "start": "3295799",
    "end": "3301240"
  },
  {
    "text": "and then he can send application data on his very first flight by basically piggybacking it on the initial client",
    "start": "3301240",
    "end": "3306599"
  },
  {
    "text": "hello um but obviously it requires the server to Prime the client previously so what does this look like I",
    "start": "3306599",
    "end": "3313319"
  },
  {
    "text": "didn't show the priming handshake but it's actually really straightforward the client sends in his client hello the",
    "start": "3313319",
    "end": "3318400"
  },
  {
    "text": "server configuration which the identifier of the key he's using which is some semi static Dy homing key and then he piggybacks the application data",
    "start": "3318400",
    "end": "3324680"
  },
  {
    "text": "on there I wish my arrows were further apart and you'd be more obvious but the application data is associated with the first Arrow not the second one um so",
    "start": "3324680",
    "end": "3332680"
  },
  {
    "text": "that all works fine it has a number of unfortunate drawbacks which no one knows how to get around um the first drawback",
    "start": "3332680",
    "end": "3339119"
  },
  {
    "text": "is you don't get PFS for this first FL of data and that's obvious you can't get PFS because you're using a a key which",
    "start": "3339119",
    "end": "3345079"
  },
  {
    "text": "the server has to hang on to so you can't have PFS for it I'm getting that the next slide",
    "start": "3345079",
    "end": "3352079"
  },
  {
    "text": "um so the the PFS thing people willing to tolerate so first I should say that",
    "start": "3352079",
    "end": "3358640"
  },
  {
    "text": "I'm going to say a bunch of bad things about this mechanism but this mechanism is so valuable because milliseconds are money that it's going in",
    "start": "3358640",
    "end": "3365440"
  },
  {
    "text": "anyway um so TLS any replay is like the standard any replay mechanism everybody",
    "start": "3365440",
    "end": "3371799"
  },
  {
    "start": "3368000",
    "end": "3411000"
  },
  {
    "text": "uses which is that each side provides some random or at least Fresh Value in their handshake and you mix that into",
    "start": "3371799",
    "end": "3376920"
  },
  {
    "text": "the keying material and then the keys must be fresh obviously this cannot be compatible with jtt because the like the",
    "start": "3376920",
    "end": "3385359"
  },
  {
    "text": "client has to speak first so the server doesn't get a chance to send send him anything um so the client's so the",
    "start": "3385359",
    "end": "3390680"
  },
  {
    "text": "client the data sent to the client doesn't have any reply the data sent to the server does not um once you get past the F once you get past this first",
    "start": "3390680",
    "end": "3396880"
  },
  {
    "text": "message when read then you're fine but the first message is problematic so people thought they knew how to solve",
    "start": "3396880",
    "end": "3402960"
  },
  {
    "text": "this problem everyone understood that solving this problem required server side state no way around it and there been a pile of mechanisms suggested um",
    "start": "3402960",
    "end": "3409400"
  },
  {
    "text": "and people thought they had an answer um so the answer we were planning to use is borrowed um from snapart but also one",
    "start": "3409400",
    "end": "3415480"
  },
  {
    "start": "3411000",
    "end": "3599000"
  },
  {
    "text": "one used in quick which is the um server keeps a list of every client side random",
    "start": "3415480",
    "end": "3420880"
  },
  {
    "text": "this any any client's ever sent him um is indexed by some server provided context token so he doesn't have to keep",
    "start": "3420880",
    "end": "3426160"
  },
  {
    "text": "him forever and the client provides a time stamp so so basically what the server does is he looks up the context",
    "start": "3426160",
    "end": "3431319"
  },
  {
    "text": "token and says what's the earliest thing I know about the latest thing I know about and then is there a duplicate in here if there's no duplicate he says",
    "start": "3431319",
    "end": "3436680"
  },
  {
    "text": "it's new and that seems like it's totally going to work um it doesn't it",
    "start": "3436680",
    "end": "3442359"
  },
  {
    "text": "works fine if you basically have a globally consistent store it does not",
    "start": "3442359",
    "end": "3447520"
  },
  {
    "text": "work if you have a store that can get inconsistent so um the the story this is actually a little entertaining in that",
    "start": "3447520",
    "end": "3453039"
  },
  {
    "text": "we um like I've been giving talks about how we're going to do this and saying we're going to steal a mechanism snapart",
    "start": "3453039",
    "end": "3459200"
  },
  {
    "text": "and so we're in this T C room and I'm like saying we're going to S the mechanism from snapart and Daniel Kong",
    "start": "3459200",
    "end": "3464839"
  },
  {
    "text": "Gore says how does the mechanism from snap start work and I start explaining it and he's like what happens in this case and Langley and I look at each",
    "start": "3464839",
    "end": "3470400"
  },
  {
    "text": "other and go like oh this is not good um so um",
    "start": "3470400",
    "end": "3476039"
  },
  {
    "text": "so the basic so I going to give you a contrived example because it's easy to understand the non-contrived example the",
    "start": "3476039",
    "end": "3481200"
  },
  {
    "text": "non-contrived example involves multiple data centers theti example looks like so one thing I should mention is that the",
    "start": "3481200",
    "end": "3488960"
  },
  {
    "text": "desired application interface is that the zero rtt data be transparent to the application so what I mean by that is",
    "start": "3488960",
    "end": "3495680"
  },
  {
    "text": "what happens when you connect to the server and the server has forgotten all an replay State well what you want to do",
    "start": "3495680",
    "end": "3501359"
  },
  {
    "text": "is you want to take the Des you sent in your rtt and send it in one rtt and let your next message because if you don't do that then like your G got lost and",
    "start": "3501359",
    "end": "3508280"
  },
  {
    "text": "since what you wanted was the homepage that's not going to work for you so imagine say with side that's not it's",
    "start": "3508280",
    "end": "3513760"
  },
  {
    "text": "fine if no side effects now imagine you have side effects so the client connects to the client connects to the server and",
    "start": "3513760",
    "end": "3520960"
  },
  {
    "text": "he sends his client hello and he sends his Urt like thing with buying something and the server like um the ser and and",
    "start": "3520960",
    "end": "3528799"
  },
  {
    "text": "and he sends it attacker as usual and the ATT I mean he thinks he's talking to the server um and the server's credentials but the attacker intercepts",
    "start": "3528799",
    "end": "3534520"
  },
  {
    "text": "it cuz he's a network attacker and and he sends it to the server and the server",
    "start": "3534520",
    "end": "3540200"
  },
  {
    "text": "processes the purchase and sends back an acknowledgement saying everything is good and the attacker eats that and send",
    "start": "3540200",
    "end": "3545520"
  },
  {
    "text": "it to the client um and then the attacker T and then somehow the attacker manages to conv the server to reboot and",
    "start": "3545520",
    "end": "3551160"
  },
  {
    "text": "the server's now lost all its date including its inter replay date that's okay because that's okay because the we have",
    "start": "3551160",
    "end": "3559000"
  },
  {
    "text": "a prated mechanism for recovering which the server says listen I don't have your entry replace date so send this message again once you've Incorporated my random",
    "start": "3559000",
    "end": "3565039"
  },
  {
    "text": "value so the attacker forces the reboot he re retransmits the exact same messages to the server the server says",
    "start": "3565039",
    "end": "3571319"
  },
  {
    "text": "no no I can't do your rtt and here's like a here's like a random nons and the client now retransmits his request at",
    "start": "3571319",
    "end": "3577640"
  },
  {
    "text": "which point this RSE processed it twice so that's bad um and it's easy to convince yourself if you think about it",
    "start": "3577640",
    "end": "3582680"
  },
  {
    "text": "a little bit that if you have multiple data centers you can do the same thing um unless you're willing to basically replicate unless you're willing to not",
    "start": "3582680",
    "end": "3589119"
  },
  {
    "text": "only replicate the an replay store between the data centers but you're also willing to basically say if someone goes",
    "start": "3589119",
    "end": "3595640"
  },
  {
    "text": "to the wrong data center the one that doesn't have doesn't have the master copy of the store that basically you stole his connection until you check to",
    "start": "3595640",
    "end": "3601079"
  },
  {
    "text": "the Master Copy and this just not practical there are many other failure modes that cause exactly this absolutely",
    "start": "3601079",
    "end": "3606799"
  },
  {
    "text": "and operationally you just back it out and have it send the guy a free return",
    "start": "3606799",
    "end": "3611920"
  },
  {
    "text": "lab so is it worth worrying about right okay so the when when when we found when",
    "start": "3611920",
    "end": "3617319"
  },
  {
    "text": "we when this was discovered where so that's exactly correct um one thing to recognize is that many in many places in",
    "start": "3617319",
    "end": "3625400"
  },
  {
    "text": "the browser stack if you send forgetting about any of this zero T nonsense you send you send your post request and if",
    "start": "3625400",
    "end": "3633400"
  },
  {
    "text": "you get like an rst the browser like just sends it again because like it because it wants stuff to happen um and",
    "start": "3633400",
    "end": "3639160"
  },
  {
    "text": "it's really true for Gets By the way anything that is anything is ostensibly idempotent the browser will totally be",
    "start": "3639160",
    "end": "3644480"
  },
  {
    "text": "happy to retransmit and even things that are not idempotent under some circumstances will also retransmit this happens all the way up in the stack and",
    "start": "3644480",
    "end": "3650280"
  },
  {
    "text": "by the way even if the browser doesn't retransmit the next thing that happens is the user what the heck and hit the button",
    "start": "3650280",
    "end": "3656359"
  },
  {
    "text": "again R so right so this isn't great but it's not like it's not clear how how bad",
    "start": "3656359",
    "end": "3661520"
  },
  {
    "text": "it is actually um I mean it's not good don't get me wrong um the so where did",
    "start": "3661520",
    "end": "3668880"
  },
  {
    "text": "things end up um as I say the real problem is these multiple distributed data centers and um the final resolution",
    "start": "3668880",
    "end": "3675960"
  },
  {
    "text": "was basically there was this very fancy mechanism when Crick and snap to try to solve this problem and the resolution that show us working group after a long",
    "start": "3675960",
    "end": "3682440"
  },
  {
    "text": "discussion and also um when you talk to Google what they're going quick I believe is not even try anymore",
    "start": "3682440",
    "end": "3688119"
  },
  {
    "text": "basically say there there's a special mechanism that sends your rtt data only send stuff with a dant there and don't",
    "start": "3688119",
    "end": "3694880"
  },
  {
    "text": "and if you don't do that like it's on you and um so obviously this is not safe to",
    "start": "3694880",
    "end": "3701599"
  },
  {
    "text": "have on by default it has to be a special API everybody agrees on that but it's simply too valuable function to not",
    "start": "3701599",
    "end": "3707640"
  },
  {
    "text": "have is putting the server's IP address in the client Randomness so that multiple data sensors would know that",
    "start": "3707640",
    "end": "3714000"
  },
  {
    "text": "when you do replay the wrong so so there already",
    "start": "3714000",
    "end": "3721319"
  },
  {
    "text": "were let's let's pick this up out line too if you if you if you have a solution to this problem I'm extremely happy um",
    "start": "3721319",
    "end": "3727520"
  },
  {
    "text": "we thought about it pretty hard but it doesn't mean we explored everything um I",
    "start": "3727520",
    "end": "3732559"
  },
  {
    "text": "will say that the the the uh the configuration IDs do have data center to them that's how it works at all so TLS",
    "start": "3732559",
    "end": "3740640"
  },
  {
    "text": "so one thing is TLS has for a long time supported a pre-shared key mode which largely was used for like iot type",
    "start": "3740640",
    "end": "3745920"
  },
  {
    "text": "applications where you did where people couldn't afford publicly crypto at all or also applications where they could",
    "start": "3745920",
    "end": "3751839"
  },
  {
    "text": "afford public crypto but they couldn't afford certificates or they couldn't Fair deploy them and so you have like a password whose job or even a Long Key",
    "start": "3751839",
    "end": "3758440"
  },
  {
    "text": "whose job it was to bootstop off the connection for you so sometimes You' use it with Diffy Helman you use without Diffy helmet so somewhere along the way",
    "start": "3758440",
    "end": "3765400"
  },
  {
    "text": "it became clear that psk and resumption were really really really similar they basically had like a long-term key a",
    "start": "3765400",
    "end": "3770880"
  },
  {
    "text": "long-term symmetric key and all you need to do is like reboot the connection with that and so TLS is basically ts13 is",
    "start": "3770880",
    "end": "3778319"
  },
  {
    "text": "basically removing resumption entirely and replacing it only with psk plus a plus a plus a mechanism for the server",
    "start": "3778319",
    "end": "3783559"
  },
  {
    "text": "to space to send you a label for the existing existing Master secret so basically the way this works is exactly",
    "start": "3783559",
    "end": "3790079"
  },
  {
    "text": "like in um ordinary T 1.2 T um ticket resumption the server sends you here's a",
    "start": "3790079",
    "end": "3796920"
  },
  {
    "text": "label and please attach this label the key we just negotiated and then you can use that label for psk negotiation",
    "start": "3796920",
    "end": "3801960"
  },
  {
    "text": "instead so that that has a nice advantage of merging some stuff um so I",
    "start": "3801960",
    "end": "3807720"
  },
  {
    "text": "like to show this diagram this like a more complicated looking this is less complicated looking actually is TLS Everyone likes to take every individual",
    "start": "3807720",
    "end": "3813960"
  },
  {
    "text": "thing and put it get its own message so like many of these messages like only have a small thing in them but like they're like vertically massive so this",
    "start": "3813960",
    "end": "3821039"
  },
  {
    "text": "is the unified FL for like all for like all Ts 1.3 um so the stuff at the top is",
    "start": "3821039",
    "end": "3827119"
  },
  {
    "text": "is the client hello with the zrt the stuff on the right is the server second flow and the stuff on the left is the",
    "start": "3827119",
    "end": "3832760"
  },
  {
    "text": "client second flow and I as you can see we sort of decorated the stuff with um uh with the Sig with the sigma sections",
    "start": "3832760",
    "end": "3840119"
  },
  {
    "text": "that show the authentication because um I gu that one's wrong um so",
    "start": "3840119",
    "end": "3847920"
  },
  {
    "text": "the when you look at a diagram like that um and you start it for long enough you can convince yourself that we can have",
    "start": "3847920",
    "end": "3853599"
  },
  {
    "text": "one unified authentication logic rather than a pile of different authentication Logics that attached together and this observation um um I think probably",
    "start": "3853599",
    "end": "3860359"
  },
  {
    "text": "starts with with Hugo KK and H Wei um who suggested this thing called op which is basically um a generalization of the",
    "start": "3860359",
    "end": "3867200"
  },
  {
    "text": "sort of this sort of one rtt ZT D framework um and so basically the idea",
    "start": "3867200",
    "end": "3873319"
  },
  {
    "text": "is you have two input Keys one of which is the long-term input key which corresponds to the static the static def",
    "start": "3873319",
    "end": "3880640"
  },
  {
    "text": "exchange you would do for ztt and one of which is the the short the short ephemeral key which corresponds to the Emeral def exchange and then you put",
    "start": "3880640",
    "end": "3886640"
  },
  {
    "text": "them all through the same key derivation diagram and that gives you all the key all the key material out now in different modes you might have different",
    "start": "3886640",
    "end": "3892400"
  },
  {
    "text": "settings for which these keys are so in PS k for instance both of these keys are the pre-shared key but there's a single",
    "start": "3892400",
    "end": "3897599"
  },
  {
    "text": "authentication Logic for all of them um and I think I think uh I think Hugo and",
    "start": "3897599",
    "end": "3903599"
  },
  {
    "text": "Hugo and hotch published um published a draft of their paper on the tals Mist recently um so you get a key derivation",
    "start": "3903599",
    "end": "3910119"
  },
  {
    "text": "schedule looks kind of like this um with the fal secret and the static secret and a bunch of hdfs and then producing these",
    "start": "3910119",
    "end": "3916279"
  },
  {
    "text": "keys at the very end so I guess I have yeah two couple",
    "start": "3916279",
    "end": "3923599"
  },
  {
    "text": "more things to cover the I just said we removed negotiation which made everybody sad and we really",
    "start": "3923599",
    "end": "3929400"
  },
  {
    "text": "thought we were going to get away with nothing here like like a nothing Burger in the slot and Microsoft showed up and",
    "start": "3929400",
    "end": "3935440"
  },
  {
    "text": "they said we have all these applications where people want to do client authentication after the handshake is",
    "start": "3935440",
    "end": "3940480"
  },
  {
    "text": "over and exactly the setting I told you we have a website that's partially secure and partially insecure and like we cannot cut over like for it's a huge",
    "start": "3940480",
    "end": "3947480"
  },
  {
    "text": "burden for us to cut over tail 1.3 without cutting over this over as well and in fact it's such a burden the hdp2",
    "start": "3947480",
    "end": "3953160"
  },
  {
    "text": "ban renegotiation um with TLS 1.2 and they're having to stuff it back in again because it was so",
    "start": "3953160",
    "end": "3958720"
  },
  {
    "text": "dis to have this feature um so a bunch of thought went into this",
    "start": "3958720",
    "end": "3965880"
  },
  {
    "text": "and again thought trying to simplify the logic as much as we could and the basic plan that sort of becomes immediately",
    "start": "3965880",
    "end": "3971920"
  },
  {
    "text": "apparent is that the client the server can send a Certificate request to any part of the handshake and elicit nothing",
    "start": "3971920",
    "end": "3977520"
  },
  {
    "text": "but this authentication block namely the certificate the signature and the Mac which if you recall the sigma paper is exactly what you use for for",
    "start": "3977520",
    "end": "3983480"
  },
  {
    "text": "Authentication or in zigma um and if you think and and the way this works is that",
    "start": "3983480",
    "end": "3989400"
  },
  {
    "text": "the the Signature Signs the handshake transcript plus the certificate and the Max and the Mac Max the everything there",
    "start": "3989400",
    "end": "3995079"
  },
  {
    "text": "plus the signature um that's not the only way to do the sigma composition but it's one of them um this piece is still",
    "start": "3995079",
    "end": "4001359"
  },
  {
    "text": "under a little bit hairy development um and it hasn't made any specification and Midway through this",
    "start": "4001359",
    "end": "4007920"
  },
  {
    "text": "process as people were looking at it um some this team out of world hallay and",
    "start": "4007920",
    "end": "4013279"
  },
  {
    "text": "Oxford asked the question question of what happens if you combine pre-shared keys and potentiate Cent authentication",
    "start": "4013279",
    "end": "4019440"
  },
  {
    "text": "and so this is something we always wanted to work but we weren't quite sure how to make it work and so it hadn't",
    "start": "4019440",
    "end": "4024920"
  },
  {
    "text": "made it in the specification yet um but it's say you obviously want to work because you if you have resume sessions you want to be able to add client",
    "start": "4024920",
    "end": "4030440"
  },
  {
    "text": "authentication afterwards and so again if you go to specification it's like not",
    "start": "4030440",
    "end": "4036119"
  },
  {
    "text": "in the specification but it's something we always have in the back of our heads and so if you take the naive version of doing this and you do what I just said",
    "start": "4036119",
    "end": "4042039"
  },
  {
    "text": "before which is you add the certificate C request and and the authentication",
    "start": "4042039",
    "end": "4047160"
  },
  {
    "text": "block and you do it in psk you run into some problems um so this comes out of a",
    "start": "4047160",
    "end": "4053960"
  },
  {
    "text": "really quite nice analysis these guys did with a formal tool called Tamarind um and so there's this there's a setup",
    "start": "4053960",
    "end": "4059960"
  },
  {
    "text": "phase where the um the attacker basically um you connect to the attacker and the attacker connects to the server",
    "start": "4059960",
    "end": "4066279"
  },
  {
    "text": "and they do a handshake and the server gives you this key label the session ticket and then the attacker fors you",
    "start": "4066279",
    "end": "4072319"
  },
  {
    "text": "exactly the same key label but for his for his keys there are two different keys in the left and right because we already Sol that problem there different",
    "start": "4072319",
    "end": "4077640"
  },
  {
    "text": "keys but the key label is the same there's nothing stopping him doing that",
    "start": "4077640",
    "end": "4084279"
  },
  {
    "text": "and so then what happens is you connect to the attacker and you do a new resumed",
    "start": "4084279",
    "end": "4090160"
  },
  {
    "text": "handshake and the attacker server does a new resumed handshake and again they're totally and and again these are separate",
    "start": "4090160",
    "end": "4096000"
  },
  {
    "text": "keys because the keys are separ because we've already solved that problem um and the ATT and and the server um does AIC",
    "start": "4096000",
    "end": "4101880"
  },
  {
    "text": "request and then you forward the signature over the for the authentication signature over the system right and the attacker remember has both",
    "start": "4101880",
    "end": "4109120"
  },
  {
    "text": "keys even though the keys are different and so for structural reasons the",
    "start": "4109120",
    "end": "4115719"
  },
  {
    "text": "signatures in the current version of TLS do not cover the handshake Max and the",
    "start": "4115719",
    "end": "4122159"
  },
  {
    "text": "reason they look for the handshake Max was because we were trying to actually make the logic of the one RT ZT composition work better and um and it",
    "start": "4122159",
    "end": "4129560"
  },
  {
    "text": "turned out to be a hassle to do that um sorry not the one RT the um the one rtt um sorry one rtt um nonc off and C off",
    "start": "4129560",
    "end": "4138400"
  },
  {
    "text": "um worked better um and so when we when we actually sat down and designed this",
    "start": "4138400",
    "end": "4144758"
  },
  {
    "text": "pr16 316 the post T authentication stuff we put that back in because we found a way found a way to to keep it in that",
    "start": "4144759",
    "end": "4150679"
  },
  {
    "text": "actually made the system even cleaner um but if you don't do that then we have an attack here um because the attack",
    "start": "4150679",
    "end": "4157199"
  },
  {
    "text": "because if you're not signing if you're not sign if you're not signing anything that's drive from the drive from the from the master key then you can just",
    "start": "4157199",
    "end": "4162758"
  },
  {
    "text": "forward the Authentication signature um so um problem averted",
    "start": "4162759",
    "end": "4169199"
  },
  {
    "text": "um the um so you know we were very happy to see",
    "start": "4169199",
    "end": "4174600"
  },
  {
    "text": "see this result for two reasons one because it reinforced that the thing the direction we were planning to go was the right direction and second because it",
    "start": "4174600",
    "end": "4180758"
  },
  {
    "text": "meant that people actually were doing some really substantial work on doing formal analysis of TLS 1.3 to in order to find this um so they I believe they",
    "start": "4180759",
    "end": "4188960"
  },
  {
    "text": "have a pretty complete model at this point in the ter and theor improver so really big thanks to this group for for finding this this and and a really nice",
    "start": "4188960",
    "end": "4194920"
  },
  {
    "text": "really nice catch um because I say reinforces the direction that we decided to go",
    "start": "4194920",
    "end": "4202400"
  },
  {
    "text": "um okay right so the last thing I want to talk about is um defenses against traffic analysis so Tails 1.2 has",
    "start": "4202400",
    "end": "4209280"
  },
  {
    "text": "extremely limited traffic analysis defenses which is to say basically none the um the content type of which I mean",
    "start": "4209280",
    "end": "4216239"
  },
  {
    "text": "the kind of message you're sending whether it's handshake or alert data is in the clear and the the there's a",
    "start": "4216239",
    "end": "4222320"
  },
  {
    "text": "provision for padding of the P but only for block ciphers and only a very small",
    "start": "4222320",
    "end": "4227960"
  },
  {
    "text": "amount of padding up to 255 octets and a practical matter people tend to use minimal padding um there's no padding at all in",
    "start": "4227960",
    "end": "4235719"
  },
  {
    "text": "the streamer AED mode so so you can compute me given the type of the cipher you can compute immediately how long the",
    "start": "4235719",
    "end": "4242239"
  },
  {
    "text": "actual message must have been so as I said people's opinions about what you should do here have moved",
    "start": "4242239",
    "end": "4247520"
  },
  {
    "text": "on since when this just designed and so there's a lot of pressure to do something here and the two main things that happened are",
    "start": "4247520",
    "end": "4254239"
  },
  {
    "text": "one adding um encrypting the content type so that you can't see what kind of message it is so for example in this",
    "start": "4254239",
    "end": "4262199"
  },
  {
    "text": "exchange up here you wouldn't be able to tell there's another authentication handshake happening unless you did like packet size analysis and in order to",
    "start": "4262199",
    "end": "4269120"
  },
  {
    "text": "print packet size analysis we're allowing arbitrary amounts of padding um much like compression no one knows how",
    "start": "4269120",
    "end": "4274280"
  },
  {
    "text": "to do do generic padding that works we know how to add the padding we don't know how big the padding ought to be so if the application job with the padding",
    "start": "4274280",
    "end": "4280679"
  },
  {
    "text": "all we do is mechanism the design here is clever um not mine it's a guy named Martin Thompson um in in cooperation",
    "start": "4280679",
    "end": "4288400"
  },
  {
    "text": "with Adam Langley the um old TS pay like this so the new TS payload um has",
    "start": "4288400",
    "end": "4295320"
  },
  {
    "text": "exactly the same by the way header because everybody's terrified that if we screw this header and there's all these middle boxes which will be like length",
    "start": "4295320",
    "end": "4300679"
  },
  {
    "text": "in the wrong place and they'll choke so so far we're not going to screw the header but we did we took the content type and we made the outer content type",
    "start": "4300679",
    "end": "4307520"
  },
  {
    "text": "fixed and the inner content type is the real content type and it goes at the end and the reason it goes at the end it is",
    "start": "4307520",
    "end": "4314440"
  },
  {
    "text": "is two reasons first because it means that when you decrypt you don't have to MIM copy everything right one um and",
    "start": "4314440",
    "end": "4321120"
  },
  {
    "text": "when you encrypt copy everything right one um and the second is because let's if we pad at the M with zeros and we",
    "start": "4321120",
    "end": "4327719"
  },
  {
    "text": "promise the content type will never never be zero then you can start the padding off by basically moving to the right and Counting leftward um and",
    "start": "4327719",
    "end": "4334440"
  },
  {
    "text": "that's really nice because it means that because it means that the client does not the receiver does not have to know",
    "start": "4334440",
    "end": "4340480"
  },
  {
    "text": "whether padding is in use so first of all you can have you can have no padding at all and doesn't have any impact on on the record size um so you could so all",
    "start": "4340480",
    "end": "4347440"
  },
  {
    "text": "the other structures we had had like a padding length and that always chewed up one bite and that pissed people off because they were like we don't want to",
    "start": "4347440",
    "end": "4352480"
  },
  {
    "text": "we don't want to burn a bite on padding if we don't want padding which almost nobody does um and and so so this allows",
    "start": "4352480",
    "end": "4358000"
  },
  {
    "text": "you to basically trip it off quite easily um which which is quite clever and I can say it's clever because it",
    "start": "4358000",
    "end": "4363360"
  },
  {
    "text": "wasn't me um I I I did have one more thing the",
    "start": "4363360",
    "end": "4368560"
  },
  {
    "text": "other sort of privacy property and this is sort of more work in progress here is this thing called server indic",
    "start": "4368560",
    "end": "4374280"
  },
  {
    "text": "so say you want to be like Amazon and you want to have like a pile of servers all on the same piece of Hardware so",
    "start": "4374280",
    "end": "4382280"
  },
  {
    "text": "each server may have its own certificate so you know you have innocuous decom and hidden. comom and they and they have",
    "start": "4382280",
    "end": "4387520"
  },
  {
    "text": "different certificates so when the and obviously when the client connects to you you've got to prove that you're the right guy you the wrong guy he's going",
    "start": "4387520",
    "end": "4393080"
  },
  {
    "text": "to hopefully disconnect so the old school way is give each server's own own",
    "start": "4393080",
    "end": "4398600"
  },
  {
    "text": "IP address and that isn't really working out very well with this whole like IP address exhaustion thing um",
    "start": "4398600",
    "end": "4404120"
  },
  {
    "text": "believe it or not it's actually people by and large have to do and the reason is that first there are two very",
    "start": "4404120",
    "end": "4409400"
  },
  {
    "text": "unfortunate implementations which do not do the right thing um the right thing is",
    "start": "4409400",
    "end": "4414480"
  },
  {
    "text": "this thing called serame indication which is an extension in the client hell that says I would like to talk to fubar.com",
    "start": "4414480",
    "end": "4420239"
  },
  {
    "text": "unfortunately Android 2.2 and Windows XP shipped without server name indication",
    "start": "4420239",
    "end": "4425480"
  },
  {
    "text": "and what that means is that if you want to run a system that is accessible to everybody in the internet you have to have your own IP address for everything",
    "start": "4425480",
    "end": "4432159"
  },
  {
    "text": "and even now that's a really quite someaction of people's traffic um but there they now are starting to be they",
    "start": "4432159",
    "end": "4438560"
  },
  {
    "text": "now are starting to be sites which um hosting Services which say look we're",
    "start": "4438560",
    "end": "4444120"
  },
  {
    "text": "going to offer you two tiers you can have the your own IP tier which is expensive and you can have the Sni only tier if you don't care about Android 22",
    "start": "4444120",
    "end": "4450280"
  },
  {
    "text": "and that's cheap and so people are stying to move towards this and it's a required feature for TS 1.3 it never was",
    "start": "4450280",
    "end": "4456560"
  },
  {
    "text": "before so unfortunately yesid out there still he",
    "start": "4456560",
    "end": "4464560"
  },
  {
    "text": "um 9% of traffic According to some stats I it's really bad but the good news is",
    "start": "4464560",
    "end": "4471159"
  },
  {
    "text": "like you know if you're building some sort of you know if you're doing something like you know say Google Docs",
    "start": "4471159",
    "end": "4476199"
  },
  {
    "text": "right where you can't really want to like a little media tablet anyway I mean you can build things that like if you're the only raring desktop basically you",
    "start": "4476199",
    "end": "4482920"
  },
  {
    "text": "say well I don't care um I said XP but basically XP is XP browser actually largely dominated by Firefox or Chrome",
    "start": "4482920",
    "end": "4490000"
  },
  {
    "text": "so it's not like and those guys do Sni just fine so it's only like I does new Sni and frankly if you're using that",
    "start": "4490000",
    "end": "4495040"
  },
  {
    "text": "version of IE like you're going to have a bad day no matter what yeah you probably shouldn't bother with TS CU you've got enough other exactly",
    "start": "4495040",
    "end": "4501960"
  },
  {
    "text": "right so the unfortunate thing is Sni leaks the server identity so we had all this trouble to Cur the server",
    "start": "4501960",
    "end": "4507360"
  },
  {
    "text": "certificate and now the identity is being lease that really sucks and it be nice to hide the Sni and the the",
    "start": "4507360",
    "end": "4513239"
  },
  {
    "text": "application which people keep pointing out is anti-censorship so you have it's pretty common for instance to have sites",
    "start": "4513239",
    "end": "4519679"
  },
  {
    "text": "which are innocuous Co collocated with sites which are not innocuous so say have you know you have your hidden site",
    "start": "4519679",
    "end": "4526280"
  },
  {
    "text": "and it's on GitHub GitHub pages right so sitting next to lots of stuff that no sensor cares you talked to and the",
    "start": "4526280",
    "end": "4532480"
  },
  {
    "text": "sensor doesn't want to block it up entirely or it's on Google app engine they want to block Google app engine entirely but if they can look at the Sni",
    "start": "4532480",
    "end": "4537760"
  },
  {
    "text": "they can say well this is the this is the thing I want to censor in this thing I want so be very nice to figure out how to encrypt that um the working group is",
    "start": "4537760",
    "end": "4546239"
  },
  {
    "text": "still struggling with this little feature the difficulty is the general idea the only thing that makes any sense",
    "start": "4546239",
    "end": "4552159"
  },
  {
    "text": "is to stuff that information somewhere in Zer in the zert data and basically",
    "start": "4552159",
    "end": "4558760"
  },
  {
    "text": "say well um and Bas and basically say that if you can't use your rtt you",
    "start": "4558760",
    "end": "4565239"
  },
  {
    "text": "you're falling back in your censor and that's just the way life is um and so the the typical thing would do would say",
    "start": "4565239",
    "end": "4570840"
  },
  {
    "text": "you'd have a bogus Sni in the in in the in in the public header and you'd have somewhere in in the encrypted data you'd",
    "start": "4570840",
    "end": "4576600"
  },
  {
    "text": "have the real Sni and if you connect to somebody and they've forgotten and they've forgotten the Ser the key",
    "start": "4576600",
    "end": "4582000"
  },
  {
    "text": "material they use for decrypting the ZT data then they basically Conn you get whatever theault certificate is and",
    "start": "4582000",
    "end": "4588159"
  },
  {
    "text": "that's probably wrong and you choke and you have and then you and you have to live with it but there are lots of settings where that's plausible in particular if you know that s's a cover",
    "start": "4588159",
    "end": "4594719"
  },
  {
    "text": "site then you can then what happens is you connect to the cover site and then you elicit somehow you elicit from them",
    "start": "4594719",
    "end": "4601080"
  },
  {
    "text": "their news rtt key and you reconnect so the general idea seem straightforward the details are a little complicated and",
    "start": "4601080",
    "end": "4607719"
  },
  {
    "text": "the details largely have to do with exactly how much violence we're prepared to do to the rest of TLS in order to accommodate this feature um there are um",
    "start": "4607719",
    "end": "4614960"
  },
  {
    "text": "there there are some uh there are some very simple designs and oh there there a",
    "start": "4614960",
    "end": "4620040"
  },
  {
    "text": "three-way trade-off which is how much we're going to keep TLS the that way it is um um how good a job it does and how",
    "start": "4620040",
    "end": "4628800"
  },
  {
    "text": "much effort it is to do to do encrypted Sni over non-encrypted Sni so some very nice designs which are don't do any",
    "start": "4628800",
    "end": "4635600"
  },
  {
    "text": "change to TS whatsoever basically and um and work fine but have the consequence I",
    "start": "4635600",
    "end": "4642679"
  },
  {
    "text": "can draw for you later um um but the consequence that it's a lot more work to do encrypted Sni than non- encrypted Sni",
    "start": "4642679",
    "end": "4648440"
  },
  {
    "text": "and so part of the value proposition nice to have a situation where sites were automatically doing crypted us and",
    "start": "4648440",
    "end": "4654600"
  },
  {
    "text": "I if they could and it's not clear we can get that so we're s of struggling with that",
    "start": "4654600",
    "end": "4660440"
  },
  {
    "text": "tension this is my last slide so it's perfect okay um so where do things stand now um we're current this is an ITF",
    "start": "4661159",
    "end": "4668679"
  },
  {
    "text": "effort like I said we're currently in draft 10 um almost every major issue has at least",
    "start": "4668679",
    "end": "4674440"
  },
  {
    "text": "a provisional resolution with the exception of this un crypted s issue um we're really hoping get this encrypt",
    "start": "4674440",
    "end": "4680480"
  },
  {
    "text": "thing without changing much else so it doesn't doesn't doesn't impact very much um we're expecting to have a draft um um",
    "start": "4680480",
    "end": "4689239"
  },
  {
    "text": "the time I'm spending here is time I'm not writing so um but I'm expecting to have by the end of the month basically all the things we have resolutions for",
    "start": "4689239",
    "end": "4695199"
  },
  {
    "text": "in the draft so we'll have a fairly complete draft by then we're already starting to see formal models emerging which is great um and there's this",
    "start": "4695199",
    "end": "4701880"
  },
  {
    "text": "Workshop that is being held in February um hosted by Co NSS um with the program",
    "start": "4701880",
    "end": "4708199"
  },
  {
    "text": "chairs I think Matt Green and Kenny Patterson to um basically get like a final readout on what people think about",
    "start": "4708199",
    "end": "4715040"
  },
  {
    "text": "this protocol before we deploy it hopefully which would be nice um we're trying to this time to like actually have a bunch of analysis prior to",
    "start": "4715040",
    "end": "4721440"
  },
  {
    "text": "deployment um and um implementation are starting to emerge I'm working on the firefight implementation now there's",
    "start": "4721440",
    "end": "4727239"
  },
  {
    "text": "some other people working on impation other other engines um we'll probably be first we expect to have is in some sort",
    "start": "4727239",
    "end": "4733440"
  },
  {
    "text": "of Alpha version of Firefox at least by end of year though it probably won't be on by default um and we expect to be an",
    "start": "4733440",
    "end": "4739080"
  },
  {
    "text": "ITF loss call sometime in q1 late q1 maybe Q2 um with the Stander published later in",
    "start": "4739080",
    "end": "4745638"
  },
  {
    "text": "2016 yes um they're probably they're going to they're gonna they're probably follow us but yeah um we talked to them",
    "start": "4747159",
    "end": "4753280"
  },
  {
    "text": "we don't have we don't have a date yet um if you want to follow this work the way way to do this I second last SL",
    "start": "4753280",
    "end": "4760400"
  },
  {
    "text": "I apologize um is there's an ITF list obviously um we're doing this new thing where we do almost all our work on",
    "start": "4760400",
    "end": "4766239"
  },
  {
    "text": "GitHub so you can just like go to GitHub and see all the all the propos changes and the current state of the draft so",
    "start": "4766239",
    "end": "4771840"
  },
  {
    "text": "and if you find stuff that is small or big I guess you send us po request instead of having to write us some long email message so please do",
    "start": "4771840",
    "end": "4779880"
  },
  {
    "text": "contribute now I'm [Applause]",
    "start": "4779880",
    "end": "4786320"
  },
  {
    "text": "done sir so first thing I have to understand I have no clue what I'm talking about",
    "start": "4786320",
    "end": "4791840"
  },
  {
    "text": "but the pho Alliance has protocols for client authentication that look like they would fit in very nicely here have",
    "start": "4791840",
    "end": "4798760"
  },
  {
    "text": "you looked at those we have in fact we're just we're just meeting with Father guys today um so there basically",
    "start": "4798760",
    "end": "4805120"
  },
  {
    "text": "are two current modalities for doing client authentication via sorry with I",
    "start": "4805120",
    "end": "4812320"
  },
  {
    "text": "mean there's lots of modalities do authentication with reusable tokens of various kinds um but the two basic",
    "start": "4812320",
    "end": "4818080"
  },
  {
    "text": "modalities reading public key based client authentication are one doing at the TLs layer and the second doing the",
    "start": "4818080",
    "end": "4823440"
  },
  {
    "text": "application layer and so the um the the application layer ones",
    "start": "4823440",
    "end": "4829320"
  },
  {
    "text": "are either phto um so phto is not um or their um what's called token binding um",
    "start": "4829320",
    "end": "4835520"
  },
  {
    "text": "which also which also comes out of the same much of the same crew um so token binding is about boosting boosting",
    "start": "4835520",
    "end": "4840639"
  },
  {
    "text": "cookies and pH is about using tokens but they're all kind of the same thing there's some that the client signs um in",
    "start": "4840639",
    "end": "4847320"
  },
  {
    "text": "phto so in token binding is extremely like post clent authentication which is",
    "start": "4847320",
    "end": "4852440"
  },
  {
    "text": "to say you're signing some stuff that came out of the TLs connection Pho you sign the domain rather than the um right",
    "start": "4852440",
    "end": "4861000"
  },
  {
    "text": "that's correct right yes but it's not tied to the TS connection Point unless you the",
    "start": "4861000",
    "end": "4868760"
  },
  {
    "text": "challenges left unspecified the relying party the challeng I do not believe that will TI to the connection even if you",
    "start": "4868760",
    "end": "4874960"
  },
  {
    "text": "that was my question it looked to me like you could you could so so so token binding will sign something that is from",
    "start": "4874960",
    "end": "4883040"
  },
  {
    "text": "the TLs connection and thus it will not be portable between TLS connections and so the the test the mental test you",
    "start": "4883040",
    "end": "4888520"
  },
  {
    "text": "should have is imagine the client certificate validation library is completely busted um what what is the impact on the",
    "start": "4888520",
    "end": "4894920"
  },
  {
    "text": "system right and so with TS client off um the design criter design you would",
    "start": "4894920",
    "end": "4900159"
  },
  {
    "text": "hope to have is even if the client certificate validation library was totally busted that would not allow you",
    "start": "4900159",
    "end": "4905440"
  },
  {
    "text": "to impersonate the client and Pho does not have that property but token binding does it's my",
    "start": "4905440",
    "end": "4911280"
  },
  {
    "text": "understanding so if if you're signing over the server certificate right then even if you completely fail to validate",
    "start": "4911280",
    "end": "4916639"
  },
  {
    "text": "the the certificate is never the case the server will check will check it and and we'll fail anyway um if that's not",
    "start": "4916639",
    "end": "4922800"
  },
  {
    "text": "true I'd be interested in hearing about it because it should be but uh",
    "start": "4922800",
    "end": "4928360"
  },
  {
    "text": "um in HTTP 2 all the traffic is encrypted so I was wondering when you",
    "start": "4928360",
    "end": "4934719"
  },
  {
    "text": "say you're not you taking out compression from uh TLS 1.3 does that",
    "start": "4934719",
    "end": "4941360"
  },
  {
    "text": "mean even a uh web page HTML web page wouldn't be compressed when it's sent",
    "start": "4941360",
    "end": "4947080"
  },
  {
    "text": "down from the server no um the",
    "start": "4947080",
    "end": "4952440"
  },
  {
    "text": "uh so TLS had a native compression mechanism and that you could negotiate",
    "start": "4952440",
    "end": "4957840"
  },
  {
    "text": "in TLS that would be transparent to the application that's what we're removing if there's an application which has it own compression that's totally is fine I",
    "start": "4957840",
    "end": "4964360"
  },
  {
    "text": "mean sorry that will continue to function the way it always functioned it may or may not be fine some of the same attacks that were",
    "start": "4964360",
    "end": "4971880"
  },
  {
    "text": "used on the PS compression the breach attack if you have uh data from two",
    "start": "4971880",
    "end": "4979199"
  },
  {
    "text": "separate providences that are being compressed by the same compression algorithm you are at risk right even if",
    "start": "4979199",
    "end": "4985480"
  },
  {
    "text": "even if tses have it so I mean imagine you put some layer imagine you staple a compression layer on top of TLS between",
    "start": "4985480",
    "end": "4990880"
  },
  {
    "text": "TLS and HTP You' be back in you've had the same problems you have with TLS compression so it's not the case so yes",
    "start": "4990880",
    "end": "4997960"
  },
  {
    "text": "I don't mean to say it's fine to do this I mean to say that it shouldn't we won that we're not breaking you you're just you're no no worse off than you were",
    "start": "4997960",
    "end": "5004400"
  },
  {
    "text": "before we did anything um and as I say HTP do there's at least two HTP compression mechanisms",
    "start": "5004400",
    "end": "5010800"
  },
  {
    "text": "which continue to be active one is the uh one is one is this heter compression",
    "start": "5010800",
    "end": "5016480"
  },
  {
    "text": "mechanism which was specifically added and the other is there a bunch of payload compression mechanisms like gzip which continue to be functional yeah we",
    "start": "5016480",
    "end": "5023320"
  },
  {
    "text": "have no I mean hb2 does not really know much about tsis just a",
    "start": "5023320",
    "end": "5028800"
  },
  {
    "text": "substrate question thank you very much",
    "start": "5030440",
    "end": "5034480"
  },
  {
    "text": "than",
    "start": "5047040",
    "end": "5050040"
  }
]