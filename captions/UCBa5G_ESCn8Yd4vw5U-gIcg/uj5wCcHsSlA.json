[
  {
    "start": "0",
    "end": "306000"
  },
  {
    "text": "Hi, in this module, I'm\ngoing to formally define",
    "start": "5210",
    "end": "8180"
  },
  {
    "text": "constraint satisfaction problems\nand the more general notion",
    "start": "8180",
    "end": "11330"
  },
  {
    "text": "of a factor graph.",
    "start": "11330",
    "end": "13350"
  },
  {
    "text": "So let's begin with an\nexample, a voting example.",
    "start": "13350",
    "end": "16980"
  },
  {
    "text": "So imagine there\nare three people.",
    "start": "16980",
    "end": "19580"
  },
  {
    "text": "Person one, person two, and\nperson three, and each one",
    "start": "19580",
    "end": "24290"
  },
  {
    "text": "is going to cast the\nvote, either blue or red,",
    "start": "24290",
    "end": "27240"
  },
  {
    "text": "blue or red, blue\nor red, and we know",
    "start": "27240",
    "end": "30950"
  },
  {
    "text": "something about these people.",
    "start": "30950",
    "end": "32380"
  },
  {
    "text": "We know that person\none is definitely",
    "start": "32380",
    "end": "34880"
  },
  {
    "text": "going to vote blue here, and\nwe know that person three",
    "start": "34880",
    "end": "39350"
  },
  {
    "text": "is leaning red.",
    "start": "39350",
    "end": "41180"
  },
  {
    "text": "We also know that person\none and person two",
    "start": "41180",
    "end": "43250"
  },
  {
    "text": "are really close friends, so\nthey must agree on their vote,",
    "start": "43250",
    "end": "46220"
  },
  {
    "text": "whereas person two and person\nthree are mere acquaintances,",
    "start": "46220",
    "end": "49070"
  },
  {
    "text": "and their votes\nonly tend to agree.",
    "start": "49070",
    "end": "52100"
  },
  {
    "text": "So the question is\nhow all these people",
    "start": "52100",
    "end": "55550"
  },
  {
    "text": "are going to\ninfluence each other,",
    "start": "55550",
    "end": "57590"
  },
  {
    "text": "and ultimately, cast votes?",
    "start": "57590",
    "end": "60680"
  },
  {
    "text": "So we can model this problem\nusing a factor graph.",
    "start": "60680",
    "end": "64430"
  },
  {
    "text": "We're going to define\na set of variables.",
    "start": "64430",
    "end": "67940"
  },
  {
    "text": "X1 for person one, X2 for\nperson two, X3 for person three,",
    "start": "67940",
    "end": "73100"
  },
  {
    "text": "and we're going to\ndefine a set of factors",
    "start": "73100",
    "end": "76490"
  },
  {
    "text": "that capture each of these four\nconstraints or preferences.",
    "start": "76490",
    "end": "81390"
  },
  {
    "text": "So let's begin with f1.",
    "start": "81390",
    "end": "83479"
  },
  {
    "text": "f1 is going to capture the fact\nthat person one is definitely",
    "start": "83480",
    "end": "86870"
  },
  {
    "text": "blue.",
    "start": "86870",
    "end": "88590"
  },
  {
    "text": "So I'm going to write f1\nas specifying as a table,",
    "start": "88590",
    "end": "93170"
  },
  {
    "text": "specifying for each value of x1.",
    "start": "93170",
    "end": "97850"
  },
  {
    "text": "I'm going to specify a number.",
    "start": "97850",
    "end": "100580"
  },
  {
    "text": "So f1 of x1 is going\nto be 0 if x1 as red,",
    "start": "100580",
    "end": "105620"
  },
  {
    "text": "and it's going to be\n1 if x1 is B or blue.",
    "start": "105620",
    "end": "110840"
  },
  {
    "text": "And this captures\nthe fact that a 0",
    "start": "110840",
    "end": "113390"
  },
  {
    "text": "means no way this is going to\nhappen, and 1 means it's OK.",
    "start": "113390",
    "end": "118909"
  },
  {
    "text": "So mathematically, I\ncan write this factor,",
    "start": "118910",
    "end": "121670"
  },
  {
    "text": "f1, as an indicator function\nof x1 equals B. So now,",
    "start": "121670",
    "end": "128000"
  },
  {
    "text": "I'm going to write these\nindicator functions without--",
    "start": "128000",
    "end": "130759"
  },
  {
    "text": "usually, you would\nwrite a 1 here,",
    "start": "130759",
    "end": "132480"
  },
  {
    "text": "because it's going to drop\nit for notational simplicity.",
    "start": "132480",
    "end": "138530"
  },
  {
    "text": "So let's look at leaning red.",
    "start": "138530",
    "end": "141980"
  },
  {
    "text": "So this factor is\ngoing to be x, f4,",
    "start": "141980",
    "end": "145159"
  },
  {
    "text": "and this is also going\nto correspond to a table",
    "start": "145160",
    "end": "148130"
  },
  {
    "text": "where for every\npossible value of x3,",
    "start": "148130",
    "end": "152630"
  },
  {
    "text": "I'm going to specify a value.",
    "start": "152630",
    "end": "154170"
  },
  {
    "text": "So R is going to be 2,\nand B is going to be a 1.",
    "start": "154170",
    "end": "157849"
  },
  {
    "text": "And mathematically,\nthis is going",
    "start": "157850",
    "end": "160010"
  },
  {
    "text": "to be f4 is equal to x3 equals\nR. This indicator, a function,",
    "start": "160010",
    "end": "165110"
  },
  {
    "text": "plus a smoothing constant of 1.",
    "start": "165110",
    "end": "168200"
  },
  {
    "text": "So remember, this\nindicator is going",
    "start": "168200",
    "end": "169700"
  },
  {
    "text": "to return 1 or 0 depending\non whether its condition is",
    "start": "169700",
    "end": "173120"
  },
  {
    "text": "true or false, and I'm adding 1,\nso I offset that to a 2 or a 1.",
    "start": "173120",
    "end": "178340"
  },
  {
    "text": "So intuitively, you\ncan think about this",
    "start": "178340",
    "end": "180920"
  },
  {
    "text": "as person three prefers R\nto B maybe twice as much.",
    "start": "180920",
    "end": "189160"
  },
  {
    "text": "So now, let's look at\nthese other factors.",
    "start": "189160",
    "end": "191820"
  },
  {
    "text": "So f2 is going to represent the\nfact that person one and person",
    "start": "191820",
    "end": "197910"
  },
  {
    "text": "two have to agree.",
    "start": "197910",
    "end": "200740"
  },
  {
    "text": "So again, I'm going to look at\nall the possible assignments",
    "start": "200740",
    "end": "204360"
  },
  {
    "text": "to the variables\nin the scope of f2.",
    "start": "204360",
    "end": "207990"
  },
  {
    "text": "So these two variables, x1,\nx2, and for every value,",
    "start": "207990",
    "end": "213030"
  },
  {
    "text": "I'm going to assign a\nparticular non-negative number.",
    "start": "213030",
    "end": "216400"
  },
  {
    "text": "So here, R, R. I'm\ngoing to say that's 1.",
    "start": "216400",
    "end": "220019"
  },
  {
    "text": "It's OK.",
    "start": "220020",
    "end": "220620"
  },
  {
    "text": "They agree.",
    "start": "220620",
    "end": "221400"
  },
  {
    "text": "And if they don't\nagree, I'm going",
    "start": "221400",
    "end": "222989"
  },
  {
    "text": "to return 0, because I\nreally don't like that,",
    "start": "222990",
    "end": "225540"
  },
  {
    "text": "and if they agree,\nreturn B. That's agreed.",
    "start": "225540",
    "end": "228329"
  },
  {
    "text": "So that's a 1.",
    "start": "228330",
    "end": "229650"
  },
  {
    "text": "So more succinctly, I can\nwrite this factor as f2",
    "start": "229650",
    "end": "232890"
  },
  {
    "text": "as x1 equals x2.",
    "start": "232890",
    "end": "237000"
  },
  {
    "text": "And now, finally,\nfor f3. f3 is going",
    "start": "237000",
    "end": "240630"
  },
  {
    "text": "to capture whether x2\nand x3 tend to agree,",
    "start": "240630",
    "end": "245340"
  },
  {
    "text": "and this table is going to\nlook like this for x2 and x3.",
    "start": "245340",
    "end": "250920"
  },
  {
    "text": "If they're both R,\nI'm going to return 3.",
    "start": "250920",
    "end": "253349"
  },
  {
    "text": "If they're different,\nI'm going to return 2.",
    "start": "253350",
    "end": "256470"
  },
  {
    "text": "And if they're all both B,\nthen I'm going to return 3.",
    "start": "256470",
    "end": "260100"
  },
  {
    "text": "So mathematically,\nthis factor is",
    "start": "260100",
    "end": "262830"
  },
  {
    "text": "going to indicate a function\nof whether x2 equals",
    "start": "262830",
    "end": "266879"
  },
  {
    "text": "x3 plus a smoothing factor of\n2, which makes it, instead of 1,",
    "start": "266880",
    "end": "272700"
  },
  {
    "text": "0, 0, 1, that gives\nme 3, 2, 2, 3.",
    "start": "272700",
    "end": "276600"
  },
  {
    "text": "So there's a kind of a mild\npreference for these two people",
    "start": "276600",
    "end": "280620"
  },
  {
    "text": "to agree compared\nto not agreeing.",
    "start": "280620",
    "end": "284250"
  },
  {
    "text": "So now, if you click on this\ndemo in the slides here,",
    "start": "284250",
    "end": "287800"
  },
  {
    "text": "this is going to take you to a\nlittle JavaScript application",
    "start": "287800",
    "end": "290819"
  },
  {
    "text": "here where you can actually\nwrite your own factor graph,",
    "start": "290820",
    "end": "295950"
  },
  {
    "text": "and we're going to come\nback to this later.",
    "start": "295950",
    "end": "300290"
  },
  {
    "text": "So this is a first example\nof a factor graph capturing",
    "start": "300290",
    "end": "304060"
  },
  {
    "text": "this simple voting situation.",
    "start": "304060",
    "end": "306800"
  },
  {
    "start": "306000",
    "end": "385000"
  },
  {
    "text": "So now, let's look at\na different example",
    "start": "306800",
    "end": "309580"
  },
  {
    "text": "that we looked at in\nthe overview module.",
    "start": "309580",
    "end": "311810"
  },
  {
    "text": "So this is map\ncoloring Australia.",
    "start": "311810",
    "end": "313630"
  },
  {
    "text": "So remember, Australia has\nthese seven beautiful provinces,",
    "start": "313630",
    "end": "318760"
  },
  {
    "text": "and each one needs to\nbe assigned a color.",
    "start": "318760",
    "end": "322550"
  },
  {
    "text": "So each of these\nprovinces is going",
    "start": "322550",
    "end": "324520"
  },
  {
    "text": "to be represented as a variable.",
    "start": "324520",
    "end": "327740"
  },
  {
    "text": "And here, I'm going to give\narea a variable and name.",
    "start": "327740",
    "end": "332539"
  },
  {
    "text": "WA for Western Australia,\nNT for Northern Territory,",
    "start": "332540",
    "end": "335710"
  },
  {
    "text": "and so on, and I'm going\nto use big X usually",
    "start": "335710",
    "end": "338620"
  },
  {
    "text": "to denote the set\nof all variables.",
    "start": "338620",
    "end": "341410"
  },
  {
    "text": "Each variable is\nalso going to take",
    "start": "341410",
    "end": "343450"
  },
  {
    "text": "on a set of values,\nwhich in this case,",
    "start": "343450",
    "end": "348100"
  },
  {
    "text": "is going to be red,\ngreen, or blue.",
    "start": "348100",
    "end": "351100"
  },
  {
    "text": "And now, I'm going to define the\nfactors of this factor graph.",
    "start": "351100",
    "end": "355940"
  },
  {
    "text": "So for every two\nneighboring provinces,",
    "start": "355940",
    "end": "358990"
  },
  {
    "text": "I want to say that they\ncan't have the same color.",
    "start": "358990",
    "end": "362889"
  },
  {
    "text": "So for example,\nf1 is going to say",
    "start": "362890",
    "end": "366970"
  },
  {
    "text": "WA and NT must be different.",
    "start": "366970",
    "end": "370510"
  },
  {
    "text": "That corresponds to\nthis factor over here.",
    "start": "370510",
    "end": "374590"
  },
  {
    "text": "f2 says NT and Q\nmust be different,",
    "start": "374590",
    "end": "378070"
  },
  {
    "text": "and that's going to\ncorrespond to this factor",
    "start": "378070",
    "end": "380830"
  },
  {
    "text": "here, and so on and so forth.",
    "start": "380830",
    "end": "383485"
  },
  {
    "start": "385000",
    "end": "450000"
  },
  {
    "text": "So now, we're ready to\nformally define a factor graph.",
    "start": "386150",
    "end": "389600"
  },
  {
    "text": "So a factor graph\nis going to consist",
    "start": "389600",
    "end": "393640"
  },
  {
    "text": "of a set of variables, x1\nthrough xn in the general case.",
    "start": "393640",
    "end": "398530"
  },
  {
    "text": "Remember, big X\nis going to denote",
    "start": "398530",
    "end": "400900"
  },
  {
    "text": "the set of all variables,\nwhere each variable xi",
    "start": "400900",
    "end": "404830"
  },
  {
    "text": "takes on values in some set\nof possible values known",
    "start": "404830",
    "end": "409000"
  },
  {
    "text": "as the domain of variable i.",
    "start": "409000",
    "end": "412030"
  },
  {
    "text": "And a factor graph also consists\nof a set of factors generally",
    "start": "412030",
    "end": "417730"
  },
  {
    "text": "denoted f1 through fm.",
    "start": "417730",
    "end": "420130"
  },
  {
    "text": "Each fj is going to\nbe a function that",
    "start": "420130",
    "end": "425860"
  },
  {
    "text": "takes as input an\nassignment to the variables",
    "start": "425860",
    "end": "430030"
  },
  {
    "text": "and going to represent--\nreturn a non-negative number.",
    "start": "430030",
    "end": "435220"
  },
  {
    "text": "So it's really important\nthat this function",
    "start": "435220",
    "end": "437230"
  },
  {
    "text": "return a non-negative number\ninstead of a negative number,",
    "start": "437230",
    "end": "441020"
  },
  {
    "text": "because later, we'll see that\nwe're going to multiply them",
    "start": "441020",
    "end": "444370"
  },
  {
    "text": "together.",
    "start": "444370",
    "end": "446770"
  },
  {
    "text": "So that's the definition\nof a factor graph.",
    "start": "446770",
    "end": "450389"
  },
  {
    "start": "450000",
    "end": "539000"
  },
  {
    "text": "So a bit of terminology here.",
    "start": "450390",
    "end": "453720"
  },
  {
    "text": "So I'm going to define\nthe scope of a factor",
    "start": "453720",
    "end": "459780"
  },
  {
    "text": "as a set of variables\nit depends on.",
    "start": "459780",
    "end": "462360"
  },
  {
    "text": "So in the map coloring\nexample, the scope of f1",
    "start": "462360",
    "end": "467370"
  },
  {
    "text": "is going to be simply WA and NT.",
    "start": "467370",
    "end": "473760"
  },
  {
    "text": "This corresponds to,\nvisually, the set of variables",
    "start": "473760",
    "end": "476940"
  },
  {
    "text": "that this factor is touching.",
    "start": "476940",
    "end": "481020"
  },
  {
    "text": "The arity of a factor is number\nof variables in the scope.",
    "start": "481020",
    "end": "486220"
  },
  {
    "text": "So in this case, you just count\nhow many variables are here.",
    "start": "486220",
    "end": "489660"
  },
  {
    "text": "The answer is two.",
    "start": "489660",
    "end": "492210"
  },
  {
    "text": "Some shorthand notation.",
    "start": "492210",
    "end": "494289"
  },
  {
    "text": "So unary factors are\nones that have arity 1,",
    "start": "494290",
    "end": "497220"
  },
  {
    "text": "and binary factors are\nones that have arity 2,",
    "start": "497220",
    "end": "500580"
  },
  {
    "text": "and constraints are\nfactors that return 0 or 1.",
    "start": "500580",
    "end": "505770"
  },
  {
    "text": "So notice that factor can\nreturn any non-negative number,",
    "start": "505770",
    "end": "509280"
  },
  {
    "text": "but a special case is when\nit returns 0 or 1, which",
    "start": "509280",
    "end": "512640"
  },
  {
    "text": "means yes or no essentially.",
    "start": "512640",
    "end": "515190"
  },
  {
    "text": "And in this context, f1\nis a binary constraint.",
    "start": "515190",
    "end": "519929"
  },
  {
    "text": "So one thing to\nremember about factors",
    "start": "519929",
    "end": "522450"
  },
  {
    "text": "is that each factor\nusually depends only",
    "start": "522450",
    "end": "526260"
  },
  {
    "text": "on a subset of the variables,\nand not all the variables,",
    "start": "526260",
    "end": "532770"
  },
  {
    "text": "and this is going to be\nkind of important when",
    "start": "532770",
    "end": "534960"
  },
  {
    "text": "we talk about an\nalgorithmic efficiency.",
    "start": "534960",
    "end": "539680"
  },
  {
    "start": "539000",
    "end": "677000"
  },
  {
    "text": "So now, we fully define\nwhat a factor graph",
    "start": "539680",
    "end": "543180"
  },
  {
    "text": "is, I'm going to now talk\nabout the notion of assignment",
    "start": "543180",
    "end": "547320"
  },
  {
    "text": "weight.",
    "start": "547320",
    "end": "548500"
  },
  {
    "text": "So let's go back to\nthe voting example.",
    "start": "548500",
    "end": "551010"
  },
  {
    "text": "In the voting sample, we had\nfour factors corresponding",
    "start": "551010",
    "end": "554760"
  },
  {
    "text": "to whether person\none and person three",
    "start": "554760",
    "end": "558600"
  },
  {
    "text": "were voting a certain way,\nand whether person one, person",
    "start": "558600",
    "end": "561449"
  },
  {
    "text": "two, and person two and\nperson three agreed or not.",
    "start": "561450",
    "end": "566230"
  },
  {
    "text": "So an assignment is going to\nbe just assignment of values",
    "start": "566230",
    "end": "572250"
  },
  {
    "text": "to each of the variables.",
    "start": "572250",
    "end": "574690"
  },
  {
    "text": "In this case, there's three\nvariables, x1, x2, x3,",
    "start": "574690",
    "end": "577890"
  },
  {
    "text": "and each assignment is going\nto be associated with a weight.",
    "start": "577890",
    "end": "581280"
  },
  {
    "text": "So here's how the weight\nis going to be calculated.",
    "start": "581280",
    "end": "583830"
  },
  {
    "text": "I'm going to go through\neach of these factors,",
    "start": "583830",
    "end": "586633"
  },
  {
    "text": "and I'm going to\nplug-in this assignment",
    "start": "586633",
    "end": "588300"
  },
  {
    "text": "and read out a\nparticular number.",
    "start": "588300",
    "end": "590529"
  },
  {
    "text": "So let's take this factor, f1.",
    "start": "590530",
    "end": "592860"
  },
  {
    "text": "So what is x1?",
    "start": "592860",
    "end": "594060"
  },
  {
    "text": "It's r.",
    "start": "594060",
    "end": "595260"
  },
  {
    "text": "So I'm going to get a 0.",
    "start": "595260",
    "end": "598980"
  },
  {
    "text": "What about this factor?",
    "start": "598980",
    "end": "600360"
  },
  {
    "text": "What is x1 and x2?",
    "start": "600360",
    "end": "602459"
  },
  {
    "text": "It's going to R, R. I'm\ngoing to return a 1.",
    "start": "602460",
    "end": "605530"
  },
  {
    "text": "I'm going to copy\nthat down here.",
    "start": "605530",
    "end": "607020"
  },
  {
    "text": "What about this factor?\nx2 and x3 are R,",
    "start": "607020",
    "end": "609570"
  },
  {
    "text": "R. I'm going to get a 3.",
    "start": "609570",
    "end": "611700"
  },
  {
    "text": "And finally, the fourth\nfactor, f4, what is x3?",
    "start": "611700",
    "end": "616740"
  },
  {
    "text": "It's R. So I'm going\nto read out a 2.",
    "start": "616740",
    "end": "619620"
  },
  {
    "text": "And all of the outputs of\nthe factors are numbers,",
    "start": "619620",
    "end": "624992"
  },
  {
    "text": "and I'm going to multiply\nall of them together.",
    "start": "624992",
    "end": "626950"
  },
  {
    "text": "I'm going to get a weight, and\nthat weight in this case is 0.",
    "start": "626950",
    "end": "631830"
  },
  {
    "text": "So now, you can\ngo through all of",
    "start": "631830",
    "end": "633480"
  },
  {
    "text": "the other possible assignments\nof values to all the variables.",
    "start": "633480",
    "end": "637889"
  },
  {
    "text": "In this case, there are\neight possible assignments,",
    "start": "637890",
    "end": "641580"
  },
  {
    "text": "and each of them is going\nto have a particular weight.",
    "start": "641580",
    "end": "646320"
  },
  {
    "text": "So now, let's look at the demo.",
    "start": "646320",
    "end": "648540"
  },
  {
    "text": "If you click step\nhere, that's going",
    "start": "648540",
    "end": "650430"
  },
  {
    "text": "to run this inference\nalgorithm and produce",
    "start": "650430",
    "end": "654390"
  },
  {
    "text": "a weight for every\npossible assignment that",
    "start": "654390",
    "end": "660570"
  },
  {
    "text": "has non-zero weight.",
    "start": "660570",
    "end": "662070"
  },
  {
    "text": "So in this case, we\nverified that there",
    "start": "662070",
    "end": "664050"
  },
  {
    "text": "are two possible assignments\nthat have non-zero weight,",
    "start": "664050",
    "end": "669600"
  },
  {
    "text": "assigning BBR and BBB.",
    "start": "669600",
    "end": "672709"
  },
  {
    "start": "677000",
    "end": "784000"
  },
  {
    "text": "OK, so now, let's\nswitch over again",
    "start": "677070",
    "end": "679650"
  },
  {
    "text": "to the map-coloring\nexample just to see",
    "start": "679650",
    "end": "682050"
  },
  {
    "text": "how weights are computed here.",
    "start": "682050",
    "end": "684370"
  },
  {
    "text": "So here is a possible assignment\nof colors to provinces.",
    "start": "684370",
    "end": "691740"
  },
  {
    "text": "So here, notationally, I'm\ngoing to make a slight change.",
    "start": "691740",
    "end": "696029"
  },
  {
    "text": "It's going to be sometimes\nconvenient to be representing",
    "start": "696030",
    "end": "698640"
  },
  {
    "text": "assignments in this kind\nof dictionary format,",
    "start": "698640",
    "end": "701340"
  },
  {
    "text": "where the variables have names.",
    "start": "701340",
    "end": "704830"
  },
  {
    "text": "So here, I have WA\nis assigned red.",
    "start": "704830",
    "end": "709890"
  },
  {
    "text": "NT is assigned green,\nand so on and so forth.",
    "start": "709890",
    "end": "712577"
  },
  {
    "text": "So literally, you can think\nabout this as a Python",
    "start": "712577",
    "end": "714660"
  },
  {
    "text": "dictionary if you like.",
    "start": "714660",
    "end": "717480"
  },
  {
    "text": "What is the weight\nof this assignment?",
    "start": "717480",
    "end": "719250"
  },
  {
    "text": "Well, in this particular\ncase, all neighbors",
    "start": "719250",
    "end": "723900"
  },
  {
    "text": "have different\ncolors, and remember,",
    "start": "723900",
    "end": "726210"
  },
  {
    "text": "each factor is just\ngoing to thumbs up,",
    "start": "726210",
    "end": "730080"
  },
  {
    "text": "return 1 if the two\nadjacent neighbors",
    "start": "730080",
    "end": "734340"
  },
  {
    "text": "have different colors.",
    "start": "734340",
    "end": "736360"
  },
  {
    "text": "So I'm just going to go 1 times\n1 times 1, and that's just 1.",
    "start": "736360",
    "end": "740730"
  },
  {
    "text": "Now, consider an alternative\nassignment, where I simply",
    "start": "740730",
    "end": "743730"
  },
  {
    "text": "replace NT with red here.",
    "start": "743730",
    "end": "746970"
  },
  {
    "text": "So NT becomes red,\nand now, we can",
    "start": "746970",
    "end": "750509"
  },
  {
    "text": "see that the weight of\nthis altered assignment",
    "start": "750510",
    "end": "753030"
  },
  {
    "text": "is going to be 0, because\nthese two factors are",
    "start": "753030",
    "end": "757050"
  },
  {
    "text": "going to evaluate to 0.",
    "start": "757050",
    "end": "759300"
  },
  {
    "text": "These two here, and one thing\nyou might realize very quickly",
    "start": "759300",
    "end": "763380"
  },
  {
    "text": "here is that all it\ntakes is for one factor",
    "start": "763380",
    "end": "768690"
  },
  {
    "text": "to veto the entire assignment.",
    "start": "768690",
    "end": "772230"
  },
  {
    "text": "Because we're multiplying, if\none of the factors returns 0,",
    "start": "772230",
    "end": "776820"
  },
  {
    "text": "then the product of all the\nfactors is also going to be 0.",
    "start": "776820",
    "end": "781125"
  },
  {
    "start": "784000",
    "end": "929000"
  },
  {
    "text": "So here is a general definition\nof assignment weight.",
    "start": "784680",
    "end": "788130"
  },
  {
    "text": "Assignment little x is going to\nbe x1 through xn has a weight,",
    "start": "788130",
    "end": "797070"
  },
  {
    "text": "and this weight is a function\nthat takes an assignment",
    "start": "797070",
    "end": "802260"
  },
  {
    "text": "and returns the product over all\npossible factors of the factor",
    "start": "802260",
    "end": "812310"
  },
  {
    "text": "fj applied to an assignment.",
    "start": "812310",
    "end": "816600"
  },
  {
    "text": "And here, even though\neach factor only",
    "start": "816600",
    "end": "820649"
  },
  {
    "text": "depends on a subset\nof variables,",
    "start": "820650",
    "end": "822390"
  },
  {
    "text": "I'm kind of simplifying\nnotation by just passing",
    "start": "822390",
    "end": "825142"
  },
  {
    "text": "in the entire assignment.",
    "start": "825142",
    "end": "826530"
  },
  {
    "text": "In practice, I would only\npass in only the variables",
    "start": "826530",
    "end": "829590"
  },
  {
    "text": "that are in the scope of fj.",
    "start": "829590",
    "end": "833460"
  },
  {
    "text": "So a bit of terminology.",
    "start": "833460",
    "end": "834990"
  },
  {
    "text": "An assignment is consistent if\nits weight is greater than 0.",
    "start": "834990",
    "end": "841560"
  },
  {
    "text": "A weight can't be negative\nbecause all the factors return",
    "start": "841560",
    "end": "844320"
  },
  {
    "text": "non-negative numbers.",
    "start": "844320",
    "end": "845320"
  },
  {
    "text": "So if a weight is 0, that means\nthe assignment is inconsistent.",
    "start": "845320",
    "end": "851520"
  },
  {
    "text": "And the objective of a\nconstraint-satisfaction",
    "start": "851520",
    "end": "854340"
  },
  {
    "text": "problem, finally getting to\nwhat the point of all this is,",
    "start": "854340",
    "end": "857625"
  },
  {
    "text": "is to find the maximum\nweight assignment.",
    "start": "857625",
    "end": "860040"
  },
  {
    "text": "Mathematically,\nit's written arg max",
    "start": "860040",
    "end": "861870"
  },
  {
    "text": "over all possible assignments\nx of the weight of x.",
    "start": "861870",
    "end": "866430"
  },
  {
    "text": "And a constraint-satisfaction\nproblem",
    "start": "866430",
    "end": "868470"
  },
  {
    "text": "is said to be satisfiable if\nthe weight of a maximum weight",
    "start": "868470",
    "end": "874139"
  },
  {
    "text": "assignment is greater than zero.",
    "start": "874140",
    "end": "877260"
  },
  {
    "text": "Another way to\nsay the same thing",
    "start": "877260",
    "end": "878790"
  },
  {
    "text": "is whether there exists\nsome consistent assignment.",
    "start": "878790",
    "end": "884259"
  },
  {
    "text": "And note one thing is\nthat the weight here",
    "start": "884260",
    "end": "888820"
  },
  {
    "text": "in the context of factor graphs\nand constraint-satisfaction",
    "start": "888820",
    "end": "891610"
  },
  {
    "text": "problems are not\nthe same as a weight",
    "start": "891610",
    "end": "896230"
  },
  {
    "text": "that we study in\nmachine learning.",
    "start": "896230",
    "end": "897670"
  },
  {
    "text": "Those weights can be\nnegative or non-negative,",
    "start": "897670",
    "end": "901389"
  },
  {
    "text": "but these weights in\nconstraint-satisfaction",
    "start": "901390",
    "end": "903610"
  },
  {
    "text": "problems or factor graphs\nhave to be non-negative.",
    "start": "903610",
    "end": "907550"
  },
  {
    "text": "One other small comment is\nthat here we are actually",
    "start": "907550",
    "end": "911350"
  },
  {
    "text": "defining a slight generalization\nof constraint-satisfaction",
    "start": "911350",
    "end": "914560"
  },
  {
    "text": "problems where\nfactors can actually",
    "start": "914560",
    "end": "919090"
  },
  {
    "text": "have not just 0 or 1\nweights, but actually",
    "start": "919090",
    "end": "924790"
  },
  {
    "text": "any non-negative value.",
    "start": "924790",
    "end": "926670"
  },
  {
    "start": "929000",
    "end": "1055000"
  },
  {
    "text": "So constraint-satisfaction\nproblems actually",
    "start": "929480",
    "end": "933399"
  },
  {
    "text": "is a general umbrella\nterm that captures",
    "start": "933400",
    "end": "936010"
  },
  {
    "text": "several important cases.",
    "start": "936010",
    "end": "938990"
  },
  {
    "text": "So the first is Boolean\nsatisfiability problems,",
    "start": "938990",
    "end": "941950"
  },
  {
    "text": "otherwise known as SAT.",
    "start": "941950",
    "end": "943210"
  },
  {
    "text": "So in these cases, the\nvariables are Boolean valued,",
    "start": "943210",
    "end": "947020"
  },
  {
    "text": "and the factors are\na logical formula",
    "start": "947020",
    "end": "949040"
  },
  {
    "text": "such as x1 or not x2 or x5.",
    "start": "949040",
    "end": "953680"
  },
  {
    "text": "So satisfiability problems\nare NP-complete problems,",
    "start": "953680",
    "end": "958183"
  },
  {
    "text": "which means that\nin the worst case",
    "start": "958183",
    "end": "959600"
  },
  {
    "text": "they're really,\nreally hard, and we",
    "start": "959600",
    "end": "961058"
  },
  {
    "text": "don't have efficient\nalgorithms for solving them.",
    "start": "961058",
    "end": "964149"
  },
  {
    "text": "But in practice, it\nturns out that there's",
    "start": "964150",
    "end": "968650"
  },
  {
    "text": "been an extraordinary amount\nof progress in SAT solving,",
    "start": "968650",
    "end": "972460"
  },
  {
    "text": "and we can actually\nroutinely solve SAT problems",
    "start": "972460",
    "end": "975880"
  },
  {
    "text": "with many, many more\nvariables than we",
    "start": "975880",
    "end": "979090"
  },
  {
    "text": "might be able to\npredict by theory alone.",
    "start": "979090",
    "end": "984340"
  },
  {
    "text": "So there's a joke that\nsays, theoreticians",
    "start": "984340",
    "end": "987270"
  },
  {
    "text": "reduce a problem\nset if they want",
    "start": "987270",
    "end": "989160"
  },
  {
    "text": "to show that it's hard to\nsolve, and practitioners",
    "start": "989160",
    "end": "992220"
  },
  {
    "text": "reduce a problem to set if\nthey want to solve the problem.",
    "start": "992220",
    "end": "996579"
  },
  {
    "text": "Another class of problems\nthat is important",
    "start": "996580",
    "end": "999390"
  },
  {
    "text": "is linear programming,\nand in linear programs,",
    "start": "999390",
    "end": "1002690"
  },
  {
    "text": "the variables are\nreal-value numbers,",
    "start": "1002690",
    "end": "1005630"
  },
  {
    "text": "and the factors are\nlinear inequalities",
    "start": "1005630",
    "end": "1007980"
  },
  {
    "text": "such as x2 plus 3x5\nless than or equal to 1.",
    "start": "1007980",
    "end": "1013430"
  },
  {
    "text": "And despite the\nfact that variables",
    "start": "1013430",
    "end": "1015830"
  },
  {
    "text": "can take on an infinite\nnumber of values,",
    "start": "1015830",
    "end": "1017840"
  },
  {
    "text": "linear programs have\nthe special structure",
    "start": "1017840",
    "end": "1019820"
  },
  {
    "text": "that makes them especially\nefficient to solve,",
    "start": "1019820",
    "end": "1021950"
  },
  {
    "text": "and there's been a\nlot of work in solving",
    "start": "1021950",
    "end": "1025010"
  },
  {
    "text": "linear programs efficiently.",
    "start": "1025010",
    "end": "1028189"
  },
  {
    "text": "Integer linear programs are\nsame as linear programs,",
    "start": "1028190",
    "end": "1031309"
  },
  {
    "text": "except for the variables\nare integer valued,",
    "start": "1031310",
    "end": "1035760"
  },
  {
    "text": "and the fact that\nthey're integer values",
    "start": "1035760",
    "end": "1038339"
  },
  {
    "text": "makes these incredibly\nhard again, just",
    "start": "1038339",
    "end": "1040980"
  },
  {
    "text": "like satisfiability problems.",
    "start": "1040980",
    "end": "1042929"
  },
  {
    "text": "Mixed integer\nlinear programs are",
    "start": "1042930",
    "end": "1046680"
  },
  {
    "text": "problems where variables\nare reals and integers,",
    "start": "1046680",
    "end": "1051140"
  },
  {
    "text": "and these problems are\nalso hard to solve.",
    "start": "1051140",
    "end": "1052890"
  },
  {
    "start": "1055000",
    "end": "1151000"
  },
  {
    "text": "So in summary, we formally\ndefined the notion",
    "start": "1055720",
    "end": "1059130"
  },
  {
    "text": "of a factor graph, which\nincludes variables and factors.",
    "start": "1059130",
    "end": "1064930"
  },
  {
    "text": "So variables specify\nunknown quantities",
    "start": "1064930",
    "end": "1067470"
  },
  {
    "text": "that we need to\nascertain, and factors",
    "start": "1067470",
    "end": "1070530"
  },
  {
    "text": "specify preferences\nor constraints",
    "start": "1070530",
    "end": "1073320"
  },
  {
    "text": "for partial assignments.",
    "start": "1073320",
    "end": "1076169"
  },
  {
    "text": "And one thing that's\nspecial about factor graphs",
    "start": "1076170",
    "end": "1079440"
  },
  {
    "text": "is that you're specifying\nconstraints and preferences",
    "start": "1079440",
    "end": "1082350"
  },
  {
    "text": "in a local way.",
    "start": "1082350",
    "end": "1083710"
  },
  {
    "text": "So suppose you're\nmodeling, and you",
    "start": "1083710",
    "end": "1087360"
  },
  {
    "text": "think of a particular\npreference that you have,",
    "start": "1087360",
    "end": "1090570"
  },
  {
    "text": "you can just simply write\ndown a factor in terms",
    "start": "1090570",
    "end": "1093600"
  },
  {
    "text": "of the variables\nthat matter and throw",
    "start": "1093600",
    "end": "1096630"
  },
  {
    "text": "that factor into the\nconstraint-satisfaction",
    "start": "1096630",
    "end": "1099510"
  },
  {
    "text": "problem.",
    "start": "1099510",
    "end": "1101430"
  },
  {
    "text": "And now, the hard work\ncomes in actually processing",
    "start": "1101430",
    "end": "1104970"
  },
  {
    "text": "all these set of factors.",
    "start": "1104970",
    "end": "1107409"
  },
  {
    "text": "So a key definition is\nthe weight of a possible--",
    "start": "1107410",
    "end": "1110850"
  },
  {
    "text": "an assignment is the\nproduct of all the factors,",
    "start": "1110850",
    "end": "1114120"
  },
  {
    "text": "and this is where all\nthe magic happens.",
    "start": "1114120",
    "end": "1115870"
  },
  {
    "text": "This is where you\nhave to think globally",
    "start": "1115870",
    "end": "1119550"
  },
  {
    "text": "about all the factors\ntogether, and the point",
    "start": "1119550",
    "end": "1125310"
  },
  {
    "text": "of a constraint-satisfaction\nproblem, again,",
    "start": "1125310",
    "end": "1127530"
  },
  {
    "text": "is to find the maximum\nweight assignment,",
    "start": "1127530",
    "end": "1129870"
  },
  {
    "text": "and this is, again,\nsomething that",
    "start": "1129870",
    "end": "1131700"
  },
  {
    "text": "requires global reasoning\nover all the factors.",
    "start": "1131700",
    "end": "1136029"
  },
  {
    "text": "And so the model\nhere to remember",
    "start": "1136030",
    "end": "1137610"
  },
  {
    "text": "is specify locally if\nyou're modeling and optimize",
    "start": "1137610",
    "end": "1141600"
  },
  {
    "text": "globally, which is what the\ninference algorithm will do.",
    "start": "1141600",
    "end": "1145230"
  },
  {
    "text": "That's the end of this module.",
    "start": "1145230",
    "end": "1147650"
  }
]