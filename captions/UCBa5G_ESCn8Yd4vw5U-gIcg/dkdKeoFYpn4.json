[
  {
    "text": "right my name is Eric Jonas I'm currently a postdoc at UC Berkeley in EECS working primarily with been wrecked",
    "start": "10750",
    "end": "18360"
  },
  {
    "text": "partly as part of the new Berkeley Center for computational imaging and partly as part of this new thing called",
    "start": "18360",
    "end": "24430"
  },
  {
    "text": "the rise lab which is the evolutionary spiritual successor to what was",
    "start": "24430",
    "end": "29800"
  },
  {
    "text": "previously known as the amp lab and today I'm going to be mostly talking",
    "start": "29800",
    "end": "35079"
  },
  {
    "text": "about a little bit about my my actual day job but mostly about this this",
    "start": "35079",
    "end": "41680"
  },
  {
    "text": "platform that that we've started taking advantage of offered by Amazon Web Services called lambda and a a software",
    "start": "41680",
    "end": "48940"
  },
  {
    "text": "layer we wrote called pyrin that's primarily designed to make a lot of the",
    "start": "48940",
    "end": "54460"
  },
  {
    "text": "data science type calculations that we do easy and what do I mean when I talk",
    "start": "54460",
    "end": "62050"
  },
  {
    "text": "about those types of calculations and I want to say you know it really I'm a little bit older than I think the",
    "start": "62050",
    "end": "67810"
  },
  {
    "text": "average postdoc and it does really in many ways feel like the wheel is has come around again and even again and in",
    "start": "67810",
    "end": "75310"
  },
  {
    "text": "particular a lot of things that used to be very easy or at least I remember them as being very easy now I may have been",
    "start": "75310",
    "end": "80380"
  },
  {
    "text": "22 at the time so who really knows seems like they've gotten very hard and so we're gonna talk about how we can kind",
    "start": "80380",
    "end": "86950"
  },
  {
    "text": "of perhaps reverse that trend a little bit forward for the both the users and the classes of applications I care about",
    "start": "86950",
    "end": "93040"
  },
  {
    "text": "and and what are some of those examples well a lot of what we do oh and going back this is of course all",
    "start": "93040",
    "end": "98770"
  },
  {
    "text": "joint work with with my colleagues Shivaram chiffon and then our advisors Ben and yon the I am NOT a systems",
    "start": "98770",
    "end": "107050"
  },
  {
    "text": "person by I'm much more in the applied math bucket I'm so this has been a fun adventure I think for everyone involved",
    "start": "107050",
    "end": "114570"
  },
  {
    "text": "but a lot of what we work on our problems that are of a computational",
    "start": "114570",
    "end": "119620"
  },
  {
    "text": "imaging nature so problems like adaptive optics where you'd like to kind of in real time adjust parameters of your",
    "start": "119620",
    "end": "125890"
  },
  {
    "text": "imaging system to see things better or super resolution microscopy where you want to use kind of strong priors about",
    "start": "125890",
    "end": "132010"
  },
  {
    "text": "your image to see things you couldn't see before or to problems of tomography where you'd like to see inside some",
    "start": "132010",
    "end": "139210"
  },
  {
    "text": "structure just from boundary value measurements or problems like phase contrast microscopy",
    "start": "139210",
    "end": "144459"
  },
  {
    "text": "we're the actual image that you're trying to receive recover is not visible in your target wavelength but if you can",
    "start": "144459",
    "end": "149530"
  },
  {
    "text": "exploit properties of phase delay then maybe you can see the the target and in all of these application areas we have",
    "start": "149530",
    "end": "156879"
  },
  {
    "text": "this amazing property where we often have very good forward models right physics especially at this scale is kind",
    "start": "156879",
    "end": "162819"
  },
  {
    "text": "of by and large worked out and so what we end up with are very good forward models that would like to run many many",
    "start": "162819",
    "end": "168609"
  },
  {
    "text": "many times and often these are forward",
    "start": "168609",
    "end": "174129"
  },
  {
    "text": "models that are being run using existing legacy pieces of software and perhaps rewriting them all is not a good idea",
    "start": "174129",
    "end": "180549"
  },
  {
    "text": "for certainly not for a postdoc maybe not for a graduate student and so part",
    "start": "180549",
    "end": "186459"
  },
  {
    "text": "of our challenge was how do we convince some of these colleagues though that we're collaborating within these computational imaging spaces to give up",
    "start": "186459",
    "end": "192669"
  },
  {
    "text": "their loved tools right so a lot of these busy physicists and double e's are all real matlab affection autos ryan and",
    "start": "192669",
    "end": "198969"
  },
  {
    "text": "as someone with kind of formal computer science training the idea of writing matlab as part of my day job makes me want to vomit a little bit similarly how",
    "start": "198969",
    "end": "206469"
  },
  {
    "text": "can you convince how can I convince like some my solar physics colleagues to give",
    "start": "206469",
    "end": "211930"
  },
  {
    "text": "up tools like IDL right which is kind of like MATLAB but worse in every way and",
    "start": "211930",
    "end": "217000"
  },
  {
    "text": "it's hard because there's a tremendous amount of legacy software that's been written and in both of these pipelines",
    "start": "217000",
    "end": "222579"
  },
  {
    "text": "and and and so the question becomes kind of how do you convince people what is the hook you can use to get them to",
    "start": "222579",
    "end": "228189"
  },
  {
    "text": "transition over to something that looks more modern or is is kind of more",
    "start": "228189",
    "end": "233199"
  },
  {
    "text": "amenable to say contemporary machine learning techniques like Python and so that this was kind of the other hook",
    "start": "233199",
    "end": "239349"
  },
  {
    "text": "here was can we build a platform that offers kind of sufficient advantage that we can we can use this as a hook here",
    "start": "239349",
    "end": "244989"
  },
  {
    "text": "but of course I hate computers exactly",
    "start": "244989",
    "end": "251799"
  },
  {
    "text": "exactly no and and and and there's this real problem knowing that like you know the reality is that that we all reluctantly",
    "start": "251799",
    "end": "259030"
  },
  {
    "text": "use these these approximations to Turing machines on our desk because they can do",
    "start": "259030",
    "end": "264430"
  },
  {
    "text": "lots of powerful things but also you know as someone who actually spilled coffee on my laptop keyboard two nights",
    "start": "264430",
    "end": "271389"
  },
  {
    "text": "ago and the shift key is not recovered since the physical instantiation of the hardware is an incredible pain point and",
    "start": "271389",
    "end": "277630"
  },
  {
    "text": "then so simply configuring and working with them can be quite a challenge and this isn't this isn't just something that",
    "start": "277630",
    "end": "283150"
  },
  {
    "text": "those of us who aren't real systems people run into I mean we have this weekly computational imaging lunch and",
    "start": "283150",
    "end": "290080"
  },
  {
    "text": "one of our graduate students some of my collaborator Shivaram was trying to explain to everyone when they should be",
    "start": "290080",
    "end": "296229"
  },
  {
    "text": "using cloud infrastructure because you know on one hand as my PI been likes to say cloud is just another word for",
    "start": "296229",
    "end": "302020"
  },
  {
    "text": "someone else's computer and that's true but there are a lot of potential advantages including reproducibility and",
    "start": "302020",
    "end": "308050"
  },
  {
    "text": "and scale and the inability or the the fact that you don't personally have to",
    "start": "308050",
    "end": "313569"
  },
  {
    "text": "be the person making large capital outlays that make a lot of these novel cloud computing environments attractive but what while we were giving this talk",
    "start": "313569",
    "end": "321250"
  },
  {
    "text": "in Shoreham was walking through kind of you know what the different storage mechanisms are and the difference between s3 and DynamoDB and all of these",
    "start": "321250",
    "end": "328150"
  },
  {
    "text": "sorts of things one of the PI's Ren Inge who's now professor at Berkeley said",
    "start": "328150",
    "end": "333250"
  },
  {
    "text": "well why is there no cloud button and at the time we all thought he was nuts and",
    "start": "333250",
    "end": "339430"
  },
  {
    "text": "we're like that's such a Ren thing to say like of course you want to think about like the simple product that we could try and sell it's very a product",
    "start": "339430",
    "end": "345339"
  },
  {
    "text": "focused P I and what would a cloud button even be but when we started talking about it and talking to more and",
    "start": "345339",
    "end": "351969"
  },
  {
    "text": "more of our colleagues we came to this realization that in fact there is no",
    "start": "351969",
    "end": "357069"
  },
  {
    "text": "cloud button but maybe there could be and and in fact it really does seem that the cloud is too damn hard for a large",
    "start": "357069",
    "end": "364210"
  },
  {
    "text": "class of users so so Jamison quill on the the founder of the the rent is too damn high party may have really hit on",
    "start": "364210",
    "end": "369580"
  },
  {
    "text": "something here right and when we did a survey in the amp in the event and Platt",
    "start": "369580",
    "end": "374949"
  },
  {
    "text": "now rise lab of graduate students so these are graduate students for with P is like Yan Stoica Mike Jordan you know",
    "start": "374949",
    "end": "380800"
  },
  {
    "text": "these are these are the people who should be using parallel distributed programming primitives that we're building in-house and less than half of",
    "start": "380800",
    "end": "388300"
  },
  {
    "text": "the graduate students in our group had ever written a spark or Hadoop job and this wasn't necessarily because they you",
    "start": "388300",
    "end": "393669"
  },
  {
    "text": "know they had all taken the I don't where the Berkeley Oakland it is of the theoretical to should be computing class that was taught by like Nancy Lynch at",
    "start": "393669",
    "end": "400060"
  },
  {
    "text": "MIT when when I was an undergrad like everyone understands these primitives but it's just hard there's a lot of",
    "start": "400060",
    "end": "405339"
  },
  {
    "text": "friction and even though we kept running into situations if you're like god I wish I could scale this operation out to",
    "start": "405339",
    "end": "411069"
  },
  {
    "text": "a 10,000 nodes relatively quickly no one was doing it and part of that reason is",
    "start": "411069",
    "end": "417850"
  },
  {
    "text": "that you know when you start trying to use infrastructure like Amazon Web Services right so this is ec2 instances",
    "start": "417850",
    "end": "424150"
  },
  {
    "text": "dot info and it's the kind of easy view of all of the different types of",
    "start": "424150",
    "end": "429250"
  },
  {
    "text": "machines so all the different configurations that Amazon will let you use and you know it's not really that",
    "start": "429250",
    "end": "434410"
  },
  {
    "text": "easy of a list parse right and of course I know what all these things mean now and many of our graduate students do but",
    "start": "434410",
    "end": "440440"
  },
  {
    "text": "it's very bewildering for someone just coming to this ecosystem right and so we",
    "start": "440440",
    "end": "446740"
  },
  {
    "text": "started joking about how the cloud is too damn hard and you do have to start making a lot of these decisions even before you start using this",
    "start": "446740",
    "end": "452860"
  },
  {
    "text": "infrastructure right like what instance type are you going to use what is your base image you want boo bun - do you want some sensuous derivative and if you",
    "start": "452860",
    "end": "459699"
  },
  {
    "text": "start saying these things - like when you're applied physics friends they're gonna say like why are you asking me these questions I just I just want to",
    "start": "459699",
    "end": "465970"
  },
  {
    "text": "run my code and then on top of that when you start thinking about kind of trying to scale up your job for many of these types of em structures including spark",
    "start": "465970",
    "end": "472680"
  },
  {
    "text": "you have to make a lot of commitments at the beginning how many instances are you spinning up how much you want to be spending on them do you want to be using",
    "start": "472680",
    "end": "478720"
  },
  {
    "text": "things like spot instances which are ephemeral but potentially cheaper and you have to make all these decisions one after another after another and that and",
    "start": "478720",
    "end": "485440"
  },
  {
    "text": "then you're left with a naked machine which is kind of a bismal and you have to start doing things like configuring",
    "start": "485440",
    "end": "491949"
  },
  {
    "text": "it with spark receipt or using any of the kind of well curated yet still somewhat fragile pieces of",
    "start": "491949",
    "end": "497650"
  },
  {
    "text": "infrastructure and so what we really wanted was something that people could use for their embarrassingly parallel jobs which had very little overhead for",
    "start": "497650",
    "end": "504849"
  },
  {
    "text": "setup right the hope is that once someone had in Amazon Web Services account and I'm gonna mostly be focusing",
    "start": "504849",
    "end": "510219"
  },
  {
    "text": "on AWS partly because they're kind of pioneers in this space and partly because we have most funding from them",
    "start": "510219",
    "end": "516930"
  },
  {
    "text": "so it's easy to accidentally spend a lot of money once someone has one of these",
    "start": "516930",
    "end": "521979"
  },
  {
    "text": "accounts it would be great if they could just start using it right we don't want there to be some sort of persistent",
    "start": "521979",
    "end": "527589"
  },
  {
    "text": "overhead we don't want someone to have to keep up a larger expensive cluster nor necessarily wait for a 10 minute",
    "start": "527589",
    "end": "533200"
  },
  {
    "text": "classic wait 10 - 20 to 50 minutes for one of these clusters to come up and I know that that might not sound like a",
    "start": "533200",
    "end": "538270"
  },
  {
    "text": "lot of time but it really ends up being this insane piece of research friction to the point where even those of us who",
    "start": "538270",
    "end": "544290"
  },
  {
    "text": "are comfortable with the tools like I'm gonna spin up a cluster I don't really want to like it's it's a lot of friction",
    "start": "544290",
    "end": "549990"
  },
  {
    "text": "so we want this low overhead for setup right and we'd like to have low kind of developer overhead for users as possible",
    "start": "549990",
    "end": "556800"
  },
  {
    "text": "right now now in some sense if you're the sort of person who has been writing Python code for doing your data analysis",
    "start": "556800",
    "end": "563430"
  },
  {
    "text": "right so you're not a systems person but we're these kind of vaulted data scientists that everyone keeps talking about it would be great if you could use",
    "start": "563430",
    "end": "570389"
  },
  {
    "text": "a system like this through a reasonable interface right and ideally support as much of your legacy code as possible for",
    "start": "570389",
    "end": "576990"
  },
  {
    "text": "lots of people you know we've written our serial pipelines we have some function and we really just now want to run 10,000 copies that what would say",
    "start": "576990",
    "end": "582600"
  },
  {
    "text": "different parameter settings right but we've got maybe you know 5,000 10,000 lines that have written for this paper I don't want to have to rejigger that into",
    "start": "582600",
    "end": "589889"
  },
  {
    "text": "some fundamentally different computing paradigm just start using it so we'd like to support as much of your kind of",
    "start": "589889",
    "end": "595230"
  },
  {
    "text": "existing work as possible we're targeting jobs that run in kind of the minutes or more regime I think that's",
    "start": "595230",
    "end": "601649"
  },
  {
    "text": "also important right in any distributed systems as I'm sure you all know there are all these trade offs and and the",
    "start": "601649",
    "end": "607380"
  },
  {
    "text": "kind of transaction overhead that you might pay for making something simple or easy to use would potentially hinder",
    "start": "607380",
    "end": "615269"
  },
  {
    "text": "your ability to run a bunch of say tiny tasks right so so we are we're in general when people are using PI random",
    "start": "615269",
    "end": "621420"
  },
  {
    "text": "like think about jobs and granularity of 30 seconds or more right additionally",
    "start": "621420",
    "end": "626940"
  },
  {
    "text": "here I don't really want to run a service right that is I don't want to offer a front-end for other people to",
    "start": "626940",
    "end": "632190"
  },
  {
    "text": "use I don't personally want to be the person maintaining some server or some batch queuing system or whatever I would",
    "start": "632190",
    "end": "639120"
  },
  {
    "text": "like to directly pay AWS and that that that fits into because you can imagine you could have certainly built something",
    "start": "639120",
    "end": "644610"
  },
  {
    "text": "somewhat like this at any point over the past say 10 years where you're taking in people's jobs you're running them and",
    "start": "644610",
    "end": "649769"
  },
  {
    "text": "you're spitting out the results but I don't want to be doing that I think most people don't want to be doing that either this brings to our next point",
    "start": "649769",
    "end": "655800"
  },
  {
    "text": "that like whatever we're using has to be from a cloud player that's likely to get an academic grant you know Amazon Google",
    "start": "655800",
    "end": "661050"
  },
  {
    "text": "sure there certainly are startups in this space and there have been for the past few years they've been trying to tackle",
    "start": "661050",
    "end": "667079"
  },
  {
    "text": "either this problem or similar problems but generally they're not excited to",
    "start": "667079",
    "end": "672899"
  },
  {
    "text": "give 100k of credits to an academic project right I am and there is also the question of how",
    "start": "672899",
    "end": "678690"
  },
  {
    "text": "long are they going to be around so the hope is that we can kind of take advantage of large established player",
    "start": "678690",
    "end": "684210"
  },
  {
    "text": "technologies so to go through this again we want minimal overhead right we'd like the target kind of vanilla Python users",
    "start": "684210",
    "end": "690500"
  },
  {
    "text": "for jobs that run in kind of the minutes to more regime we really don't want to be the people running some particular",
    "start": "690500",
    "end": "696960"
  },
  {
    "text": "service so we don't want to do our own startup and we'd like to actually not depend on additional kind of players in",
    "start": "696960",
    "end": "702780"
  },
  {
    "text": "the ecosystem outside those who we kind of trust in our gonna give grants so what are the type who are the humans",
    "start": "702780",
    "end": "708240"
  },
  {
    "text": "that we're writing this for because we are these theoretically writing this for humans it's basically ourselves and our",
    "start": "708240",
    "end": "714210"
  },
  {
    "text": "friends right which is not surprising so I want a parameter do pipe a parameter",
    "start": "714210",
    "end": "719220"
  },
  {
    "text": "sweeps over some filter of parameters for looking at every image from the Sun or one of my computational imaging cloud",
    "start": "719220",
    "end": "725910"
  },
  {
    "text": "looking colleagues Nikola Antipa he has a 10-minute algorithm he runs for image recovery and now he wants to do video so",
    "start": "725910",
    "end": "732060"
  },
  {
    "text": "he took you know a thousand frames and he'd like to be able to just do this without having to wait forever or Kevin",
    "start": "732060",
    "end": "737130"
  },
  {
    "text": "Jameson are a group who works on active learning he has a nips paper that's due in six hours this is with you know I",
    "start": "737130",
    "end": "742650"
  },
  {
    "text": "think 27 days before the nips deadline this is increasingly true and you want air bars for that figure and why is it",
    "start": "742650",
    "end": "748020"
  },
  {
    "text": "that I'm gonna have to wait you know and times the job for my job running to do",
    "start": "748020",
    "end": "753930"
  },
  {
    "text": "something that looks like a simple Monte Carlo search so maybe the reality here is not that I hate computers but I hate",
    "start": "753930",
    "end": "759810"
  },
  {
    "text": "servers right I love the idea of computation I hate the fact that there exists these physical entities that I have to manage I have to make all these",
    "start": "759810",
    "end": "765930"
  },
  {
    "text": "decisions about behind the scenes I have to personally worry when they die and so we started building this piece of",
    "start": "765930",
    "end": "771840"
  },
  {
    "text": "software called PI render right so you know you can have a silhouette of a condor in the background some of us have",
    "start": "771840",
    "end": "778350"
  },
  {
    "text": "actually played with with condors as a job scheduling system and what we really wanted was the small version of that",
    "start": "778350",
    "end": "783690"
  },
  {
    "text": "right so most wrens are small and rather inconspicuous birds except they have loud in complex songs and so the hope",
    "start": "783690",
    "end": "790800"
  },
  {
    "text": "was that we could kind of target these sorts of Condor rescues cases right but in a way that preserved a lot of the",
    "start": "790800",
    "end": "797940"
  },
  {
    "text": "elasticity that people have come to expect from the cloud and two pieces of technology kind of fell in our lap right",
    "start": "797940",
    "end": "804240"
  },
  {
    "text": "one is this Python distribution from a company called continuum called anaconda and the other is this",
    "start": "804240",
    "end": "811290"
  },
  {
    "text": "service from Amazon Web Services called lambda right and so I'll start with lambda so lambda is really neat because",
    "start": "811290",
    "end": "819180"
  },
  {
    "text": "what lambda basically does is lets you execute arbitrary functions on Amazon servers on the cloud where there are",
    "start": "819180",
    "end": "825810"
  },
  {
    "text": "some interesting constraints here right you get 300 seconds per job of a single",
    "start": "825810",
    "end": "830940"
  },
  {
    "text": "core right AVX to Eric or you get 512",
    "start": "830940",
    "end": "836400"
  },
  {
    "text": "Meg's in temp you get one-and-a-half gigs of ram and they'll give you let you run Python Java or node code an Amazon's",
    "start": "836400",
    "end": "842700"
  },
  {
    "text": "goal for this has been very much one of building distributed systems for kind of",
    "start": "842700",
    "end": "848190"
  },
  {
    "text": "companies building distributed systems using this kind of idea of micro services where maybe you have one service that takes in images into six",
    "start": "848190",
    "end": "855060"
  },
  {
    "text": "them an s3 you have another one that maybe then you want to grab the images from s3 do some processing on them and",
    "start": "855060",
    "end": "861120"
  },
  {
    "text": "stick the results in a database and you'd like to have that kind of dynamically scale with your customer load and more and more people are trying",
    "start": "861120",
    "end": "866940"
  },
  {
    "text": "to build these sorts of services using these sorts of fast running functions",
    "start": "866940",
    "end": "872490"
  },
  {
    "text": "right and you know they're Amazon's model does very much seem to be people building these sorts of things that",
    "start": "872490",
    "end": "877890"
  },
  {
    "text": "scale of kind of the number of users and Amazon's not the only one providing these things cool has their cloud",
    "start": "877890",
    "end": "884190"
  },
  {
    "text": "functions which actually I think just entered beta and Microsoft has there's your functions which which are similar",
    "start": "884190",
    "end": "890690"
  },
  {
    "text": "so they provided this platform for us to kind of quickly and efficiently run these serve these functions on the cloud so we'd like to provide an interface",
    "start": "890690",
    "end": "897960"
  },
  {
    "text": "which looks like this right we'd like to just be able to have some arbitrary function in this case you know add one",
    "start": "897960",
    "end": "903690"
  },
  {
    "text": "which is not doing anything terribly exciting directly get a handle to an executor and then just map our function",
    "start": "903690",
    "end": "911040"
  },
  {
    "text": "over some list right the primary interface here that we're giving people is simple it's a simply a functional one",
    "start": "911040",
    "end": "919410"
  },
  {
    "text": "right because these functions themselves are stateless all right this is the kind of the neat and weird point in this",
    "start": "919410",
    "end": "924780"
  },
  {
    "text": "ecosystem but of course you can then you get a list of futures back it actually maps to the Python futures interface",
    "start": "924780",
    "end": "930600"
  },
  {
    "text": "very closely and the output is expected this is not terribly exciting right but",
    "start": "930600",
    "end": "936120"
  },
  {
    "text": "the scale that you're potentially capable of achieving with this interface is kind of we found it surprising right",
    "start": "936120",
    "end": "941940"
  },
  {
    "text": "so if you look on the on your left there right we have we see that kind of the",
    "start": "941940",
    "end": "947310"
  },
  {
    "text": "aggregate compute for doing D gem on each of these right so doing dense matrix matrix multiply here",
    "start": "947310",
    "end": "953360"
  },
  {
    "text": "unsurprisingly scales linearly with the number of these these workers that are running right the number of these things",
    "start": "953360",
    "end": "959700"
  },
  {
    "text": "that you're kicking off behind the scenes but the important point here is that you're not telling Amazon I want 2,000 or 3,000 or 5,000 workers you're",
    "start": "959700",
    "end": "967260"
  },
  {
    "text": "saying hey look please give me as many as you possibly can here's my embarrassingly parallel set of jobs",
    "start": "967260",
    "end": "973070"
  },
  {
    "text": "please run them and you see that you know on average this is with using em Kaela's are backing numerix we get kind",
    "start": "973070",
    "end": "981000"
  },
  {
    "text": "of for each of these cores we get about 16 gigaflops of matrix vector multiply the other neat things here include you",
    "start": "981000",
    "end": "988260"
  },
  {
    "text": "there's this little bump here at 32 because of course when they tell you you",
    "start": "988260",
    "end": "993270"
  },
  {
    "text": "get a core you get a hyper threaded core so it's a fake core so on some of the jobs they actually get a full core to",
    "start": "993270",
    "end": "998730"
  },
  {
    "text": "themselves and and they're running at twice as fast mix benchmarking a real fun exercise the other surprising thing",
    "start": "998730",
    "end": "1005630"
  },
  {
    "text": "is that of course so you have these stateless functions but you say oh my gosh Eric I have lots of state right I'm taking in data I want to save the output",
    "start": "1005630",
    "end": "1011630"
  },
  {
    "text": "how do i how do I handle that well we're out all of this through s3 Amazon's",
    "start": "1011630",
    "end": "1017530"
  },
  {
    "text": "object store and okay that's fine but you know isn't that slow and it's",
    "start": "1017530",
    "end": "1023030"
  },
  {
    "text": "certainly the case that you know writing to s3 you can write it about 30 megabytes a second and reading from s3",
    "start": "1023030",
    "end": "1028970"
  },
  {
    "text": "is on average about 40 megabytes per second and that's what that histogram is up there and there's some variance there but the amazing thing is the total",
    "start": "1028970",
    "end": "1035810"
  },
  {
    "text": "aggregate throughput from these simultaneous workers that you can get to s3 approaches you know 80 gigabytes per",
    "start": "1035810",
    "end": "1041689"
  },
  {
    "text": "second for write or for read and 60 gigabytes per second for write and that really surprised us right what that",
    "start": "1041690",
    "end": "1047449"
  },
  {
    "text": "suggests is that you know on the back end there Amazon has kind of this incredibly scalable piece of",
    "start": "1047450",
    "end": "1052730"
  },
  {
    "text": "infrastructure and that's starting to change the way we even on the system side think about building these sorts of",
    "start": "1052730",
    "end": "1058960"
  },
  {
    "text": "distributed systems that do more than even simply offering this kind of map like or MapReduce style interface and I",
    "start": "1058960",
    "end": "1066560"
  },
  {
    "text": "hope I can convince you that there's a lot you can do with map including kind",
    "start": "1066560",
    "end": "1071780"
  },
  {
    "text": "of a large number of ETL type compute right so you want to extract some",
    "start": "1071780",
    "end": "1076970"
  },
  {
    "text": "features from a bucket of images or whatever as well as these sorts of parameter tuning cases and whenever I",
    "start": "1076970",
    "end": "1082160"
  },
  {
    "text": "talk to my my distributed systems or friends or people who are building kind of large-scale machine learning systems",
    "start": "1082160",
    "end": "1088220"
  },
  {
    "text": "like well those cases are all boring and in some sense they're right right like pre-processing all of imagenet computing",
    "start": "1088220",
    "end": "1094970"
  },
  {
    "text": "some deterministic features and then throwing that into some large-scale learner is kind of boring but it's so",
    "start": "1094970",
    "end": "1101180"
  },
  {
    "text": "hard with the existing infrastructure if you don't already have something set up right and so for this example here where",
    "start": "1101180",
    "end": "1107480"
  },
  {
    "text": "we say hey look we have all image net would like to run some basically random Python code for feature ization",
    "start": "1107480",
    "end": "1113630"
  },
  {
    "text": "including now we have people who are using you know early stages or continets for this thing we'd like to kind of run",
    "start": "1113630",
    "end": "1120290"
  },
  {
    "text": "this as quickly as possible how can we do that and so pyrin makes that sort of",
    "start": "1120290",
    "end": "1125300"
  },
  {
    "text": "task easy and I can show you kind of the the job lifetime here where the the x-axis here is the the run time and wall",
    "start": "1125300",
    "end": "1131450"
  },
  {
    "text": "seconds right so we go from 0 to 250 seconds for processing all of imagenet here where the blue dots that you can",
    "start": "1131450",
    "end": "1138140"
  },
  {
    "text": "kind of barely see on the left here or when the jobs are actually submitted from your workstation right",
    "start": "1138140",
    "end": "1143320"
  },
  {
    "text": "unsurprisingly then the jobs get started these are these green dots here right so that's when Amazon actually pulls them",
    "start": "1143320",
    "end": "1149750"
  },
  {
    "text": "out of its queue and begins running them right there's some jobs set up here which all which is this gap here I'll",
    "start": "1149750",
    "end": "1154880"
  },
  {
    "text": "talk about in a bit the jobs run and we retrieve the results unsurprisingly for example there are stragglers because",
    "start": "1154880",
    "end": "1161090"
  },
  {
    "text": "both there's variance in terms of trying to get data in and out of s3 and sometimes for reasons we don't even",
    "start": "1161090",
    "end": "1166760"
  },
  {
    "text": "quite understand terribly well there's contention on the individual nodes I mean these things are all heavily",
    "start": "1166760",
    "end": "1172100"
  },
  {
    "text": "containerized and who really knows what's going on behind the 9 layers of virtualization there but we can look at the histogram of the amount of time that",
    "start": "1172100",
    "end": "1178580"
  },
  {
    "text": "each of these phases is taking right and kind of unsurprisingly that are surprisingly to me actually the starting",
    "start": "1178580",
    "end": "1184250"
  },
  {
    "text": "latency for when your host throws something over to lambda2 when it starts executing it is shockingly low right",
    "start": "1184250",
    "end": "1190340"
  },
  {
    "text": "kind of on the order of the mean is certainly a second and the the max there's roughly let's say 3 or 4 seconds",
    "start": "1190340",
    "end": "1196840"
  },
  {
    "text": "but then there's this the set up time can be up to 20 seconds and again I'll",
    "start": "1196840",
    "end": "1203030"
  },
  {
    "text": "talk about that in a minute and then you do the compute that in this case it's about 120 Berthe compute and fetch the results",
    "start": "1203030",
    "end": "1209630"
  },
  {
    "text": "what's happening behind the scenes and again I really want to stress that this is not this is not rocket science",
    "start": "1209630",
    "end": "1214840"
  },
  {
    "text": "although my aero-astro friends are always telling me that what they do is also not rocket science so it's not",
    "start": "1214840",
    "end": "1220160"
  },
  {
    "text": "clear what that means but this is not this is something an undergrad could put together and indeed the original version",
    "start": "1220160",
    "end": "1227840"
  },
  {
    "text": "of this was all written in a weekend all we're really doing here so if you if the left side is your laptop the right side",
    "start": "1227840",
    "end": "1233120"
  },
  {
    "text": "is the cloud right is when you execute one of these map invocations right from",
    "start": "1233120",
    "end": "1238670"
  },
  {
    "text": "the runner of the executor all we're really doing is we're serializing your function in your data right we're",
    "start": "1238670",
    "end": "1244220"
  },
  {
    "text": "sticking it on to s3 right we're sticking it into amazon's a binary object store we invoke one of these",
    "start": "1244220",
    "end": "1251450"
  },
  {
    "text": "lambdas so lambda as an interface basically is designed such that you",
    "start": "1251450",
    "end": "1256970"
  },
  {
    "text": "upload a function then they want you to invoke that many times so we've built kind of a shim handler here right so",
    "start": "1256970",
    "end": "1262280"
  },
  {
    "text": "that we always invoke it the same way but some of the parameters we pass it tell it which of these functions today to execute on and then remotely what",
    "start": "1262280",
    "end": "1269090"
  },
  {
    "text": "happens is in that lambda they pull the job from s3 they download those two objects right it downloads a Python",
    "start": "1269090",
    "end": "1275510"
  },
  {
    "text": "anaconda run time that we've prepackaged right it actually then begins invoking",
    "start": "1275510",
    "end": "1280580"
  },
  {
    "text": "Python out of process to run your code right meanwhile you're back here in your laptop you've you've invoked the results",
    "start": "1280580",
    "end": "1286400"
  },
  {
    "text": "right so it's now going to block waiting for that result right and the begins polling s3 again like my actual systems",
    "start": "1286400",
    "end": "1292370"
  },
  {
    "text": "friends are like you're polling the object store what the hell is wrong with you but it totally works and it's super reliable which is great",
    "start": "1292370",
    "end": "1299120"
  },
  {
    "text": "eventually that function will return we pick up the result right we serialize the result using Python pickle we stick",
    "start": "1299120",
    "end": "1304280"
  },
  {
    "text": "it back in s3 we get the result return it to you and from your perspective it",
    "start": "1304280",
    "end": "1309500"
  },
  {
    "text": "basically just looked like a map right now to make this happen there's a couple of things we depend upon and I don't",
    "start": "1309500",
    "end": "1315530"
  },
  {
    "text": "actually have good slides for it here but the unsung hero here of I think a lot of this is the underlying",
    "start": "1315530",
    "end": "1320780"
  },
  {
    "text": "serialization technology right so generally one of the the big challenges",
    "start": "1320780",
    "end": "1326180"
  },
  {
    "text": "and trying to get your code to run someplace else is handling dependencies and handling the fact that there's a tremendous amount of State so the",
    "start": "1326180",
    "end": "1332750"
  },
  {
    "text": "dynamism of Python makes kind of a head of time compilation and ginning and all those sorts of things really challenging",
    "start": "1332750",
    "end": "1337790"
  },
  {
    "text": "but it does mean that there's actually kind of a nice in-memory that can be very easy to walk and figure",
    "start": "1337790",
    "end": "1343149"
  },
  {
    "text": "out what those dependencies are so we actually you depend on a package called cloud pickle which is maintained by the",
    "start": "1343149",
    "end": "1348730"
  },
  {
    "text": "PI SPARC team to pick a little closure it's a serialize closures and kind of all of the Associated ecosystem and",
    "start": "1348730",
    "end": "1355509"
  },
  {
    "text": "state and then we also do some module dependency analysis such that if you have pure Python modules on your own",
    "start": "1355509",
    "end": "1361749"
  },
  {
    "text": "machine that don't exist remotely will quite happily upload them and make those work as well right but then we also have",
    "start": "1361749",
    "end": "1369249"
  },
  {
    "text": "this anaconda runtime right so this is this is the world's tiniest snake right it is not a Python and we would like to",
    "start": "1369249",
    "end": "1376090"
  },
  {
    "text": "have a very small version of a runtime that pre includes all of these Python",
    "start": "1376090",
    "end": "1381309"
  },
  {
    "text": "packages right and this is somewhat hard because again remember we only have 512 megabytes of storage on the actual",
    "start": "1381309",
    "end": "1387549"
  },
  {
    "text": "machine that these functions are running on so we have to somehow get an anaconda",
    "start": "1387549",
    "end": "1392619"
  },
  {
    "text": "Python install which is roughly twelve hundred megabytes to fit into that space so we start doing kind of increasingly",
    "start": "1392619",
    "end": "1397929"
  },
  {
    "text": "stupid things right so we first run the conduct healing command which gets rid of a bunch of the the build system derp",
    "start": "1397929",
    "end": "1403450"
  },
  {
    "text": "the the install system detritus we eliminate all of the package related metadata which gets us down to nine here",
    "start": "1403450",
    "end": "1409809"
  },
  {
    "text": "forty six Meg's we manually delete all the non avx2 shared objects from mkl",
    "start": "1409809",
    "end": "1415720"
  },
  {
    "text": "right so that actually saves us a fair amount that gets us down to 670 we strip everything out of the shared libraries",
    "start": "1415720",
    "end": "1421419"
  },
  {
    "text": "that we don't really need including all the debug symbols godspeed that gets us down to five ten",
    "start": "1421419",
    "end": "1427360"
  },
  {
    "text": "and then if we delete all the intermediate python cache compilation output right we can get down to 441",
    "start": "1427360",
    "end": "1433929"
  },
  {
    "text": "megabytes right so we can kind of barely sneak ourselves in under that 512 limit",
    "start": "1433929",
    "end": "1439570"
  },
  {
    "text": "to let us run again kind of the full Python or side eight a sweet",
    "start": "1439570",
    "end": "1444779"
  },
  {
    "text": "behind-the-scenes right then we're downloading this run time we run tarring it and that's where that 20 seconds of",
    "start": "1444779",
    "end": "1451299"
  },
  {
    "text": "sutta of occasional set-up time comes in and then invoking our function now so unfortunately behind the scenes amazon",
    "start": "1451299",
    "end": "1459279"
  },
  {
    "text": "with lambda is caching a lot of this right so in fact that lambdas are",
    "start": "1459279",
    "end": "1464769"
  },
  {
    "text": "running inside containers and these containers are not purged for every",
    "start": "1464769",
    "end": "1470049"
  },
  {
    "text": "function invocation this originally caused a lot of confusion when you'd run one lambda form and then you'd run another one and you'd",
    "start": "1470049",
    "end": "1475780"
  },
  {
    "text": "look in slash temp and there was crap there and you're like well where did where did that come from eventually we realized that it was our",
    "start": "1475780",
    "end": "1481060"
  },
  {
    "text": "own stuff and in fact these and incited an individual container it would be reused for running various lambda",
    "start": "1481060",
    "end": "1486220"
  },
  {
    "text": "functions so we use that to cache these run times when we download them so the first time we do it it takes that 20",
    "start": "1486220",
    "end": "1492010"
  },
  {
    "text": "seconds but all subsequent invocations that take place inside that container are much faster and don't incur this",
    "start": "1492010",
    "end": "1497350"
  },
  {
    "text": "overhead it's actually kind of neat to start trying to then reverse engineer what lambdas doing behind the scenes and",
    "start": "1497350",
    "end": "1503650"
  },
  {
    "text": "particular trying to do things like host identification so of course these are containers running inside like Xen VM is",
    "start": "1503650",
    "end": "1509830"
  },
  {
    "text": "on machines somewhere and like Oregon and so one thing we found for it that's",
    "start": "1509830",
    "end": "1516100"
  },
  {
    "text": "fairly reliable is that the MAC address for the container of course stays the",
    "start": "1516100",
    "end": "1521200"
  },
  {
    "text": "same I guess not of course it stays the same for the the lifecycle of that container as far as we can tell right and we've",
    "start": "1521200",
    "end": "1527050"
  },
  {
    "text": "done things like you know using various measurements of pinging hosts and whatnot to try and make sure that's the",
    "start": "1527050",
    "end": "1532450"
  },
  {
    "text": "case so for the the next little bit when I talk about individual hosts right or",
    "start": "1532450",
    "end": "1538660"
  },
  {
    "text": "individual containers that are running these lambda jobs I'm doing the identification based upon MAC address",
    "start": "1538660",
    "end": "1544600"
  },
  {
    "text": "it's not perfect there's potentially a lot of problems with that but for the",
    "start": "1544600",
    "end": "1550060"
  },
  {
    "text": "time being I think for what I'm trying to show it it's it's fairly viable so what you see then here on the right",
    "start": "1550060",
    "end": "1556710"
  },
  {
    "text": "right is the is the time between job invocations in seconds right and the",
    "start": "1556710",
    "end": "1564550"
  },
  {
    "text": "color of the dot there right a black dot means that when we invoke that job the runtime is already present and a white",
    "start": "1564550",
    "end": "1571780"
  },
  {
    "text": "means that the runtime was not present we had to redownload it right and then the host ID this is from like 0 to 150",
    "start": "1571780",
    "end": "1579550"
  },
  {
    "text": "here are the unique MAC addresses sorted and kind of the order of which we saw",
    "start": "1579550",
    "end": "1585130"
  },
  {
    "text": "them first from one of these results as we just kind of sequentially invoke a hundred jobs so we invoke a hundred jobs",
    "start": "1585130",
    "end": "1591220"
  },
  {
    "text": "we wait like 50 seconds we invoke another hundred jobs we wait fifty seconds just to get a handle on what the",
    "start": "1591220",
    "end": "1597280"
  },
  {
    "text": "caching behavior of these things looks like and unsurprisingly you know initially we have some cached up here",
    "start": "1597280",
    "end": "1602380"
  },
  {
    "text": "left over from the previous run but you can see these white ones here right these are all new hosts that we start talking to that we haven't",
    "start": "1602380",
    "end": "1608870"
  },
  {
    "text": "taught that we haven't seen before and then for reasons we don't really understand the next time we do an",
    "start": "1608870",
    "end": "1613880"
  },
  {
    "text": "invocation some of those hosts are gone right and some new ones get kind of birthed into existence right so we start",
    "start": "1613880",
    "end": "1620060"
  },
  {
    "text": "seeing some new things and of course over the invocation of doing this ten times we end up seeing about 200 unique",
    "start": "1620060",
    "end": "1625910"
  },
  {
    "text": "hosts and then of course we can titrate what that delay looks like right and what you see down here then is on a log",
    "start": "1625910",
    "end": "1631820"
  },
  {
    "text": "scale but what really I think is useful is looking at the time between job and",
    "start": "1631820",
    "end": "1637490"
  },
  {
    "text": "vocation here and again this is in Lagos and one two five ten thirty minutes and so on versus the fraction of new hosts",
    "start": "1637490",
    "end": "1642890"
  },
  {
    "text": "that we've seen and so we see is that kind of after 30 minutes or so all of these instances have been kind of shut",
    "start": "1642890",
    "end": "1648980"
  },
  {
    "text": "down restarted and we're getting a hundred percent new hosts so behind the scenes Amazon is spinning up these",
    "start": "1648980",
    "end": "1654110"
  },
  {
    "text": "containers letting them linger for a bit and then killing them at what looks like roughly somewhere between 30 minutes and",
    "start": "1654110",
    "end": "1660310"
  },
  {
    "text": "an hour and you can start then looking well what happened so right now I've been showing where numbers where we have",
    "start": "1660310",
    "end": "1666350"
  },
  {
    "text": "maybe three thousand of these simultaneous workers what happens when you ask it to do say 10,000 jobs worth",
    "start": "1666350",
    "end": "1672830"
  },
  {
    "text": "of activities right or in this case we know that we have roughly 2,000 simultaneous workers and we're going to",
    "start": "1672830",
    "end": "1678140"
  },
  {
    "text": "invoke many more than that jobs and so what you see here is if this is the job",
    "start": "1678140",
    "end": "1684050"
  },
  {
    "text": "ID here you can see that these jobs are all kind of sequentially started and",
    "start": "1684050",
    "end": "1690020"
  },
  {
    "text": "then when we do it again because there's variance and when the jobs completes you start getting this kind of jumble from",
    "start": "1690020",
    "end": "1696440"
  },
  {
    "text": "when the job itself actually starts but the order is kind of roughly preserved here that said there are real",
    "start": "1696440",
    "end": "1701720"
  },
  {
    "text": "ramifications for trying to build distributed systems on top of lambda and in fact one of my my friend colleague",
    "start": "1701720",
    "end": "1709310"
  },
  {
    "text": "and former graduate school roommate for five years Keith Wynn Steen is a Stanford professor here and he's the person who I had been",
    "start": "1709310",
    "end": "1716600"
  },
  {
    "text": "playing with lammed and he's like well if you're just email Amazon I'll give you 3,000 and they'll let you run up to 3,000 jobs simultaneous that's like it's",
    "start": "1716600",
    "end": "1721820"
  },
  {
    "text": "great so he's actually working very intensely on trying to build kind of real scale distributed systems on top of",
    "start": "1721820",
    "end": "1727790"
  },
  {
    "text": "lambda whereas I'm much more interested in kind of taking advantage of this computing fabric for again the sorts of",
    "start": "1727790",
    "end": "1734900"
  },
  {
    "text": "applications where we really just want it easy as heck map now you can start talking to other Amazon",
    "start": "1734900",
    "end": "1740990"
  },
  {
    "text": "services including s/3 s/3 is interesting because if you imagine if you try and execute a single transaction",
    "start": "1740990",
    "end": "1747410"
  },
  {
    "text": "where you write something to s3 and then read it back immediately where you're just writing a single 16 byte object",
    "start": "1747410",
    "end": "1755059"
  },
  {
    "text": "right so you're writing two doubles and reading them back how many of those transactions can you get per second",
    "start": "1755059",
    "end": "1760400"
  },
  {
    "text": "right in the actual number of those transactions across a large number of lambda 0 so we scale up to 200 we don't",
    "start": "1760400",
    "end": "1766190"
  },
  {
    "text": "actually above that you know we can see we're kind of thresholding out here you can only get roughly let's say four to",
    "start": "1766190",
    "end": "1771470"
  },
  {
    "text": "five thousand simultaneous transactions per second to s3 so when you start",
    "start": "1771470",
    "end": "1777080"
  },
  {
    "text": "thinking about trying to back-end other sorts of distributed computing infrastructure out of this or say use s3",
    "start": "1777080",
    "end": "1782090"
  },
  {
    "text": "as a synchronization layer that ends up being potentially a challenge and what",
    "start": "1782090",
    "end": "1787760"
  },
  {
    "text": "you get is these nice errors from s3 where they're like please reduce your request rate just kind of you know it's",
    "start": "1787760",
    "end": "1792890"
  },
  {
    "text": "nice to have Amazon telling you that you're trying too hard but what we end up having even before we hit these",
    "start": "1792890",
    "end": "1798830"
  },
  {
    "text": "limits is it easy to use map and that means for a lot of kind of data science workloads we're happy but often map is",
    "start": "1798830",
    "end": "1805370"
  },
  {
    "text": "not enough right a lot of data analytics and a lot of the data analytics that we do ends up you have some data where evidently the cool figure for data",
    "start": "1805370",
    "end": "1811940"
  },
  {
    "text": "always looks like some nebulous thing from from a CNN ad from 1999 you do some",
    "start": "1811940",
    "end": "1817250"
  },
  {
    "text": "ETL or some pre-processing on it which is generally embarrassingly parallel and then you do some feature ization which",
    "start": "1817250",
    "end": "1822620"
  },
  {
    "text": "is again embarrassingly parallel right and then you throw it into some machine learning algorithm where that's shown by",
    "start": "1822620",
    "end": "1828860"
  },
  {
    "text": "a bunch of boxes connected to other boxes these sorts of features asian steps write all this embarrassingly",
    "start": "1828860",
    "end": "1834200"
  },
  {
    "text": "parallel stuff is actually a great pyrin fit right it's everywhere that Hadoop has had some sort of success right but",
    "start": "1834200",
    "end": "1840320"
  },
  {
    "text": "on this far state over here especially at scale there's this idea that you need some sort of distributed scale tensorflow deep ml based something",
    "start": "1840320",
    "end": "1846530"
  },
  {
    "text": "something right you need you know this is a hard problem and doing this at scale is a hard problem and so that",
    "start": "1846530",
    "end": "1852140"
  },
  {
    "text": "means that we're not going to be giving Jeff Bezos money here and that that makes Jeff Pizzo sad but we think we can",
    "start": "1852140",
    "end": "1857870"
  },
  {
    "text": "actually you know maybe that's not necessary and and you know frankly sherry and a widely celebrated paper had",
    "start": "1857870",
    "end": "1864620"
  },
  {
    "text": "this great quote from Pat Barnum which is you can have a second computer when you've shown you know how to use the",
    "start": "1864620",
    "end": "1869900"
  },
  {
    "text": "first one and Frank Witcher has all these great figures are these cables in his paper scale at what cost that he had it at Hutto s",
    "start": "1869900",
    "end": "1878360"
  },
  {
    "text": "two years ago where he showed that actually kind of using the right data structure he could get performance on",
    "start": "1878360",
    "end": "1883880"
  },
  {
    "text": "his laptop right and a single-threaded implementation that exceeded a lot of what you could do with these large-scale",
    "start": "1883880",
    "end": "1889760"
  },
  {
    "text": "distributed computing frameworks now two people are building to serve a framework computing frameworks were like well yes obviously that's the case there's a lot",
    "start": "1889760",
    "end": "1897410"
  },
  {
    "text": "of overhead involved in trying to scale these aren't necessarily the right scale but in order to remember that for most of us were not actually at kind of",
    "start": "1897410",
    "end": "1904310"
  },
  {
    "text": "Google scale yet right and and many of us won't be many of us just have this problem where they're in this weird interstitial position between our laptop",
    "start": "1904310",
    "end": "1911180"
  },
  {
    "text": "can do and what we'd like to do in the cloud and so we built in support for kind of scalable single machine reduce",
    "start": "1911180",
    "end": "1917750"
  },
  {
    "text": "right so why not just have a big server right with a lot of RAM and try and do all your machine learning on that thing",
    "start": "1917750",
    "end": "1923450"
  },
  {
    "text": "you say but I don't have a big server but again that's where Jeff Bezos can help right so Amazon now gives you the",
    "start": "1923450",
    "end": "1928790"
  },
  {
    "text": "the ability to rent by the hour these kind of insanely powerful workstations right with large numbers of GPUs or",
    "start": "1928790",
    "end": "1935720"
  },
  {
    "text": "large numbers of CPUs and insane amounts of RAM right the X 1 the X 1 dot 32 X",
    "start": "1935720",
    "end": "1941870"
  },
  {
    "text": "large has 2 terabytes of RAM and 64 like real cores and you can rent it for $14",
    "start": "1941870",
    "end": "1948290"
  },
  {
    "text": "an hour so for comparison we bought a machine with that number of cores but half of that Ram 1 terabyte Ram it was",
    "start": "1948290",
    "end": "1954080"
  },
  {
    "text": "like 55 k so the real substantial capital investment so the idea that you know especially if you're right trying",
    "start": "1954080",
    "end": "1959570"
  },
  {
    "text": "to do something like fit do you use random features to fit a large SVM or something on one of these machines you",
    "start": "1959570",
    "end": "1965360"
  },
  {
    "text": "can get access to this kind of RAM and this kind of compute for only a couple bucks means that building an interface",
    "start": "1965360",
    "end": "1970820"
  },
  {
    "text": "like this where we do our large-scale distributed map over our data with",
    "start": "1970820",
    "end": "1975830"
  },
  {
    "text": "lambda and then we do the reduction all on a single large machine is very possible and of course because this is",
    "start": "1975830",
    "end": "1981380"
  },
  {
    "text": "all happening in Amazon's bubble the data transfers are incredibly quick and",
    "start": "1981380",
    "end": "1986510"
  },
  {
    "text": "so we've been using this sort of framework for what up until what was",
    "start": "1986510",
    "end": "1991610"
  },
  {
    "text": "machine learning up until let's say 2013 right or 2014 so everything before you",
    "start": "1991610",
    "end": "1996920"
  },
  {
    "text": "start talking about deep learning actually tends to fit pretty well in this framework obviously not everything I really want to stress that we're we're",
    "start": "1996920",
    "end": "2006370"
  },
  {
    "text": "making I think no we're trying to make no contentious claims here right the reality is that in",
    "start": "2006370",
    "end": "2011890"
  },
  {
    "text": "fact most of what our colleagues work with fits into this sort of framework and being able to take advantage of a",
    "start": "2011890",
    "end": "2018130"
  },
  {
    "text": "machine like this again for 14 bucks an hour or so for 30 or 40 bucks total depending on your compute is really",
    "start": "2018130",
    "end": "2023950"
  },
  {
    "text": "advantageous right but you can also start trying to do crazier things right so we can spin up via Amazon's elastic",
    "start": "2023950",
    "end": "2031480"
  },
  {
    "text": "cash reticences and start trying to do things like use Redis as a parameter server right and you can imagine that",
    "start": "2031480",
    "end": "2038770"
  },
  {
    "text": "having your lambdas kind of swap information and do coordinated optimization through those so we're using plate recently playing around with",
    "start": "2038770",
    "end": "2045730"
  },
  {
    "text": "using Chiron coupled with Redis for large scale kind of derivative free",
    "start": "2045730",
    "end": "2050800"
  },
  {
    "text": "optimization for various problems that end up looking like reinforcement learning and it works kind of again shockingly well the nice thing is you",
    "start": "2050800",
    "end": "2056260"
  },
  {
    "text": "can just take your existing legacy C library or existing Python and ship it out there right you might say well but",
    "start": "2056260",
    "end": "2063040"
  },
  {
    "text": "for these sorts of systems I don't I can't use Amazon's infrastructure right this doesn't really help me I already",
    "start": "2063040",
    "end": "2068260"
  },
  {
    "text": "have you know a cluster but fortunately you know companies like kubernetes are doing an impressive job of taking this",
    "start": "2068260",
    "end": "2075850"
  },
  {
    "text": "kind of container orchestration technology and providing function like interfaces on top of it right so there's",
    "start": "2075850",
    "end": "2084010"
  },
  {
    "text": "this hope that kind of maybe this idea of not malla conservers to run your jobs",
    "start": "2084010",
    "end": "2089590"
  },
  {
    "text": "that actually malikan kind of tiny little bits of computation via functions might be a path forward even even",
    "start": "2089590",
    "end": "2095860"
  },
  {
    "text": "locally and so for us and one of the things dennis asked me to talk about is what we're what my actual day job is",
    "start": "2095860",
    "end": "2102540"
  },
  {
    "text": "we're using it for a lot of what we think of as interesting applications even if the underlying kind of",
    "start": "2102540",
    "end": "2108960"
  },
  {
    "text": "computation graphs are not terribly interesting right we do a lot of computational imaging so so my group and",
    "start": "2108960",
    "end": "2115720"
  },
  {
    "text": "with Ben works closely with Laura Wohlers group to build imaging systems that exploit computation to let you kind",
    "start": "2115720",
    "end": "2123670"
  },
  {
    "text": "of get away with with with novel or crazy ideas on the hardware so you can imagine for example trying to build a",
    "start": "2123670",
    "end": "2129880"
  },
  {
    "text": "camera where you instead throw away all of the existing optics infrastructure right no lenses but basically take a",
    "start": "2129880",
    "end": "2135730"
  },
  {
    "text": "piece of diffuser so shower privacy glass right the stuff that's in your shower window hopefully",
    "start": "2135730",
    "end": "2142570"
  },
  {
    "text": "and just basically randomizes the incoming direction of light and so if you imagine if you if you take that you",
    "start": "2142570",
    "end": "2147760"
  },
  {
    "text": "place it you know let's say 200 300 microns in front of your CCD you take an image you get something that kind of",
    "start": "2147760",
    "end": "2153220"
  },
  {
    "text": "looks like this right which looks like junk but of course most the information is still there you can do a lot of",
    "start": "2153220",
    "end": "2158440"
  },
  {
    "text": "pre-processing and actually recover the image and what you've really built here algorithmically is a camera system that",
    "start": "2158440",
    "end": "2164500"
  },
  {
    "text": "exploits the underlying physical properties that the diffuser coupled with a lot of kind of compute including",
    "start": "2164500",
    "end": "2170020"
  },
  {
    "text": "exploiting these complex forward models and running large scale solvers to solve this and and and everyone you know most",
    "start": "2170020",
    "end": "2176500"
  },
  {
    "text": "of the people who are working on this it's not actually us right it's very smart kind of applied physicists who",
    "start": "2176500",
    "end": "2182020"
  },
  {
    "text": "again are kind of potentially trapped in this MATLAB hell and we were able to convince them well try rewriting your forward models in Python or porting some",
    "start": "2182020",
    "end": "2189340"
  },
  {
    "text": "of your existing legacy code and see what you can get and now they're capable of kind of doing scale doing these sorts",
    "start": "2189340",
    "end": "2195190"
  },
  {
    "text": "of problems for right now there were previously they were just at the single stage camera phase or single stage image",
    "start": "2195190",
    "end": "2200350"
  },
  {
    "text": "phase and now they're doing video so they're they're the people we're trying to empower here similarly you know I",
    "start": "2200350",
    "end": "2206050"
  },
  {
    "text": "work with with some colleagues here at Stanford on various interesting problems and solar physics including kind of",
    "start": "2206050",
    "end": "2212170"
  },
  {
    "text": "trying to understand what gives rise to various explosions on the surface of the",
    "start": "2212170",
    "end": "2217570"
  },
  {
    "text": "Sun so what you're looking at right now is a picture of the Sun and various wavelengths captured by the NASA Solar",
    "start": "2217570",
    "end": "2223330"
  },
  {
    "text": "Dynamics Observatory which generates about one and a half terabytes a day of solar imaging data and that interesting",
    "start": "2223330",
    "end": "2229570"
  },
  {
    "text": "region there that seems to be doing stuff is called an active region and sometimes for reasons that we don't",
    "start": "2229570",
    "end": "2234820"
  },
  {
    "text": "actually quite understand these very energetic active regions explode and just send large streaming either large",
    "start": "2234820",
    "end": "2242140"
  },
  {
    "text": "bursts of x-rays or large streaming chunks of plasma towards the earth and we'd like to be able to understand what",
    "start": "2242140",
    "end": "2247930"
  },
  {
    "text": "that happens and and potentially even predict it so what we've been doing is is using again the solar data from SDO",
    "start": "2247930",
    "end": "2254440"
  },
  {
    "text": "through lamda to try and do this sort of analysis but there's a tremendous amount of pre-processing that has to happen to",
    "start": "2254440",
    "end": "2260380"
  },
  {
    "text": "each of those images before we just start trying to run some sort of classification or regression algorithm",
    "start": "2260380",
    "end": "2265450"
  },
  {
    "text": "on them and so we've ported all of that we've been using all of that with lamda similarly we do a lot of computational",
    "start": "2265450",
    "end": "2271470"
  },
  {
    "text": "neuroscience right so neuroscience we're increasingly generating these insane data volumes right what you see on the left there is the connectome of a mouse",
    "start": "2271470",
    "end": "2277770"
  },
  {
    "text": "right now so it's literally the the schematic diagram of the connection between a thousand different neurons in",
    "start": "2277770",
    "end": "2283910"
  },
  {
    "text": "the visuals in the early stage of the system so in the retina which actually does a tremendous amount of analog",
    "start": "2283910",
    "end": "2289320"
  },
  {
    "text": "computation of a mouse and the connectivity matrix there is is the the squared labeled a and we've been",
    "start": "2289320",
    "end": "2295080"
  },
  {
    "text": "building kind of probabilistic algorithms with kind of strong nonparametric priors to extract out with",
    "start": "2295080",
    "end": "2300570"
  },
  {
    "text": "those with the circuit diagrams look like and what the underlying cell type and cell morphology is right and all of",
    "start": "2300570",
    "end": "2306840"
  },
  {
    "text": "that is basically large-scale Markov chain Monte Carlo which is anyone who's done MCMC knows you'd like to run a very",
    "start": "2306840",
    "end": "2312630"
  },
  {
    "text": "large number of simultaneous chains to get a good estimate of your posterior so we've been using lambda there for kind",
    "start": "2312630",
    "end": "2318630"
  },
  {
    "text": "of scaling up these sorts of MCMC type tasks and we're even talking with people who are interested in probabilistic programming approaches about backing a",
    "start": "2318630",
    "end": "2325619"
  },
  {
    "text": "using PI R and as a back-end for their computations because again they have large numbers of independent operations",
    "start": "2325619",
    "end": "2332040"
  },
  {
    "text": "that they wish to run simultaneously we've even been you know playing around with what the limits might actually be",
    "start": "2332040",
    "end": "2338430"
  },
  {
    "text": "of neuroscience right so we wrote this paper somewhat for fun where we took a",
    "start": "2338430",
    "end": "2343910"
  },
  {
    "text": "classic system the moss 6502 right we reverse engineered it or some people we",
    "start": "2343910",
    "end": "2349170"
  },
  {
    "text": "were we know of did we have a simulator that's capable of playing Donkey Kong and then we took all of that resulting",
    "start": "2349170",
    "end": "2355800"
  },
  {
    "text": "data from that brain and applied neuroscience data analytic methods to try and understand what was actually",
    "start": "2355800",
    "end": "2361109"
  },
  {
    "text": "going on and for surprising the summon surprising the others actually from purely observational data of high",
    "start": "2361109",
    "end": "2367680"
  },
  {
    "text": "dimensional time series it's difficult to say definitively without strong models about what's going on in the",
    "start": "2367680",
    "end": "2373230"
  },
  {
    "text": "computation and this suggests that maybe you know there may be some challenges for Neuroscience and this big data universe lying ahead but for all of this",
    "start": "2373230",
    "end": "2380580"
  },
  {
    "text": "we were able to use PI R n to both run the forward simulations to do all the per image analysis and kind of push everything forward right and if you're",
    "start": "2380580",
    "end": "2388260"
  },
  {
    "text": "at all interested in kind of what is the neuroscience of a microprocessor look like I'm also speaking on this tomorrow and fill philosophy and symbolic systems",
    "start": "2388260",
    "end": "2396690"
  },
  {
    "text": "class because you know who doesn't want to come down to Stanford twice in one week",
    "start": "2396690",
    "end": "2402050"
  },
  {
    "text": "so we're trying to get to the point where we have large numbers of people and of using this system and teasing out",
    "start": "2402050",
    "end": "2409470"
  },
  {
    "text": "where the challenges are right so we've been ready phone's been running some experiments where we see that you know lambda will scale up to a point but then",
    "start": "2409470",
    "end": "2416310"
  },
  {
    "text": "we're starting to hit with some of those limits are and so we're very curious kind of how can we get around some of those limits including doing things like",
    "start": "2416310",
    "end": "2422820"
  },
  {
    "text": "aggressively spinning up discrete Amazon instances behind the scenes that the users aren't responsible for right now",
    "start": "2422820",
    "end": "2428610"
  },
  {
    "text": "we do a lot of munching of the control and data pipe plane because it was written by some dude in a weekend and so",
    "start": "2428610",
    "end": "2435480"
  },
  {
    "text": "we're trying to segregate that out to potentially kind of allow for more finer grained control over when jobs fail or",
    "start": "2435480",
    "end": "2441960"
  },
  {
    "text": "break or when things are getting retried and then the real the real star of this",
    "start": "2441960",
    "end": "2447060"
  },
  {
    "text": "in some sense is the serialization technology that of course we had very little to do with and a lot of that",
    "start": "2447060",
    "end": "2452100"
  },
  {
    "text": "credit goes first to the PI SPARC team and then before that to a startup called multi vac which was trying to offer a similar service and there I mean there",
    "start": "2452100",
    "end": "2459960"
  },
  {
    "text": "are just a lot of weird weird edge cases in Python right the Python sub-process module that you you know you call to",
    "start": "2459960",
    "end": "2466080"
  },
  {
    "text": "invoke some at a process thing when it throws an exception that exception is actually not pickable for no good reason",
    "start": "2466080",
    "end": "2473040"
  },
  {
    "text": "other than there's a bug and that bug has persisted for like years because why would you be trying to pickle the profit",
    "start": "2473040",
    "end": "2479070"
  },
  {
    "text": "why would you be trying to serialize the processes the exceptions thrown by this random sub process thing so there are",
    "start": "2479070",
    "end": "2484680"
  },
  {
    "text": "lots of these sorts of things that were having a special case and kind of make that technology more more complicated but we're hoping to kind of isolate that",
    "start": "2484680",
    "end": "2490350"
  },
  {
    "text": "out into a separate project so other people including a new distributed systems project that at Berkeley called",
    "start": "2490350",
    "end": "2497100"
  },
  {
    "text": "ray as well as a machine learning project called clipper can use but other",
    "start": "2497100",
    "end": "2504570"
  },
  {
    "text": "than that the again this is this is only due to my colleagues that we've gotten",
    "start": "2504570",
    "end": "2511170"
  },
  {
    "text": "this far but the code is available and you can pip install it if you have an AWS account you can play with it and",
    "start": "2511170",
    "end": "2516360"
  },
  {
    "text": "break it and let me know if you run into any bugs other than that any questions",
    "start": "2516360",
    "end": "2526130"
  },
  {
    "text": "[Applause] yes sir with the MCMC case we're talking about",
    "start": "2529120",
    "end": "2535340"
  },
  {
    "text": "earlier how like there's a burning period right and that kick and that",
    "start": "2535340",
    "end": "2540920"
  },
  {
    "text": "can't be parallelized right like you should get visual subclass testing do that I guess how do",
    "start": "2540920",
    "end": "2547400"
  },
  {
    "text": "you know when you've reached the end great so in fact the the the burn is",
    "start": "2547400",
    "end": "2553730"
  },
  {
    "text": "that burnin is in many ways the thing were most trying to like paralyzed right",
    "start": "2553730",
    "end": "2559130"
  },
  {
    "text": "or run large numbers of chains to get around right for the the question of when you hit the when you're MC MC chain",
    "start": "2559130",
    "end": "2566450"
  },
  {
    "text": "is burned in is an open one that no one has a good answer to right for us what we actually do in practice is we start",
    "start": "2566450",
    "end": "2572840"
  },
  {
    "text": "you know 10,000 chains from different random initializations we run them for a long for a long enough",
    "start": "2572840",
    "end": "2578720"
  },
  {
    "text": "time such that for compared to what we've seen on synthetic data they've",
    "start": "2578720",
    "end": "2583880"
  },
  {
    "text": "mixed well enough that we get the right answer right but there's there's no I mean this is I used to be a real MC MC",
    "start": "2583880",
    "end": "2589190"
  },
  {
    "text": "diehard and now working in a convex analysis lab I may have backed off a",
    "start": "2589190",
    "end": "2595430"
  },
  {
    "text": "little bit for my belief in the probabilistic religion but it's hard it's hard but the nice thing is again",
    "start": "2595430",
    "end": "2600950"
  },
  {
    "text": "for for our belief especially for these kind of structured nonparametric models",
    "start": "2600950",
    "end": "2607510"
  },
  {
    "text": "the thought is that 1 anytime you're there's lots of symmetries present in that resulting posterior because like",
    "start": "2607510",
    "end": "2613760"
  },
  {
    "text": "you know there are lots of equivalent cost strings that have different assignments right so these kind of these label switching problem type things and",
    "start": "2613760",
    "end": "2619310"
  },
  {
    "text": "so starting from a bunch of different RAM random initializations is the only thing we've really found it gives us enough of an accurate kind of estimate",
    "start": "2619310",
    "end": "2625310"
  },
  {
    "text": "of the posterior where we kind of believe the uncertainty coming out of it on the other side but in each of those",
    "start": "2625310",
    "end": "2631070"
  },
  {
    "text": "cases you know we eat the burn in for the first you know 5 or 10 or 15 or 20 minutes and then then take a couple of",
    "start": "2631070",
    "end": "2638420"
  },
  {
    "text": "samples and then call it good other things people have looked at in the MCMC space include techniques like parallel",
    "start": "2638420",
    "end": "2644330"
  },
  {
    "text": "tempering that help you get around this and you know those sorts of things are also kind of super amenable to these",
    "start": "2644330",
    "end": "2649790"
  },
  {
    "text": "sorts of lambda jobs where you run a number of chains and then you kind of do this you know it's a standard BSP type",
    "start": "2649790",
    "end": "2655400"
  },
  {
    "text": "work flow right we're going to change synchronizer no bunch of chains synchronized and lambdas a nice fit so that is your question oh great",
    "start": "2655400",
    "end": "2666489"
  },
  {
    "text": "other questions yes sir so you you download all of the dependencies so",
    "start": "2666489",
    "end": "2675479"
  },
  {
    "text": "still there yes coherent state no you could go and muck about with them if you",
    "start": "2683519",
    "end": "2688539"
  },
  {
    "text": "wanted but yeah we the s3 objects all have are all like hashed for you right",
    "start": "2688539",
    "end": "2694150"
  },
  {
    "text": "they'll have some ie I D which reflects the which is just this hash of the",
    "start": "2694150",
    "end": "2700509"
  },
  {
    "text": "contents so we identify our runtimes based upon those and then we download",
    "start": "2700509",
    "end": "2705819"
  },
  {
    "text": "them if the URL that we're using as our runtime is that particularly ideas changed like slash temp do you provide",
    "start": "2705819",
    "end": "2722829"
  },
  {
    "text": "any sort of soso right so as far as",
    "start": "2722829",
    "end": "2732189"
  },
  {
    "text": "we've been able to tell so Amazon provides no I mean these are we're getting increasingly in the area of",
    "start": "2732189",
    "end": "2737199"
  },
  {
    "text": "things that Amazon doesn't really make claims about in public right so from what we've seen either temp is there and",
    "start": "2737199",
    "end": "2742929"
  },
  {
    "text": "exists in the state that you left it or you're on a completely new machine right",
    "start": "2742929",
    "end": "2747939"
  },
  {
    "text": "and so what we do by caching we don't we do no no no integrity checks at all",
    "start": "2747939",
    "end": "2754749"
  },
  {
    "text": "right so if Amazon had some Dame in the winter and randomly deleted a bunch of crap then would just be it would be a",
    "start": "2754749",
    "end": "2760900"
  },
  {
    "text": "little bit screwed right but we haven't seen that in practice we find that the",
    "start": "2760900",
    "end": "2765939"
  },
  {
    "text": "if if a lambda has some detritus in it than it is both our detritus and has not",
    "start": "2765939",
    "end": "2772689"
  },
  {
    "text": "been mucked in any sort of substantial way does answer your question",
    "start": "2772689",
    "end": "2779009"
  },
  {
    "text": "so they're massive well so that you don't ever share a lambda with a",
    "start": "2780609",
    "end": "2786469"
  },
  {
    "text": "different account and in fact you don't ever share a lambda with a different the",
    "start": "2786469",
    "end": "2792859"
  },
  {
    "text": "as far as we can tell the tuple of your Amazon username and the lambda function",
    "start": "2792859",
    "end": "2800469"
  },
  {
    "text": "are always given unique containers so if I upload two different handlers those",
    "start": "2800469",
    "end": "2806569"
  },
  {
    "text": "two handlers will never see each other's temp at all and we've we've gotten some",
    "start": "2806569",
    "end": "2813259"
  },
  {
    "text": "kind of verbal confirmation from randomly running into AWS people that that's the design of course you know the",
    "start": "2813259",
    "end": "2818390"
  },
  {
    "text": "containers are not I mean part of that the concern here is in fact that the containers actually aren't terribly secure right and in fact when you when",
    "start": "2818390",
    "end": "2825019"
  },
  {
    "text": "you run these things and you start poking around you're like oh I can see other processes here and I can see like you know there's other weird information",
    "start": "2825019",
    "end": "2830390"
  },
  {
    "text": "leaking out from adjacent jobs but as far as we as far as we know all of the",
    "start": "2830390",
    "end": "2837259"
  },
  {
    "text": "containers even on one virtualized host are only unique to that username lambda",
    "start": "2837259",
    "end": "2843949"
  },
  {
    "text": "function tuple right but I'm I'm",
    "start": "2843949",
    "end": "2849079"
  },
  {
    "text": "guessing there exists enterprising security people who are working hard to confirm or deny those statements but",
    "start": "2849079",
    "end": "2855769"
  },
  {
    "text": "that's what we've seen otherwise I mean that actually is one of the challenges and trying to scale something like this",
    "start": "2855769",
    "end": "2861799"
  },
  {
    "text": "up even internally inside an organization right is that you know I'm",
    "start": "2861799",
    "end": "2866869"
  },
  {
    "text": "not sure how much I would want other people's code that I didn't necessarily trust running in an adjacent container",
    "start": "2866869",
    "end": "2873259"
  },
  {
    "text": "on one of these things or kind of one after another yes sir it's exhausting oh",
    "start": "2873259",
    "end": "2885920"
  },
  {
    "text": "I never I don't think I've ever actually asked for system entropy it's a good",
    "start": "2885920",
    "end": "2890989"
  },
  {
    "text": "question the everything I do is with a you know MP 1997 a pseudo-random source",
    "start": "2890989",
    "end": "2899390"
  },
  {
    "text": "I do nothing interesting cryptographically or anything like that so I don't actually know that's a that's a be a neat thing to check I actually",
    "start": "2899390",
    "end": "2906140"
  },
  {
    "text": "have no idea how how even you know hard when droopy works with containers at all right maybe just return zero zero zero",
    "start": "2906140",
    "end": "2911329"
  },
  {
    "text": "all the time I assume not that it might any other questions awesome",
    "start": "2911329",
    "end": "2920979"
  },
  {
    "text": "thank you",
    "start": "2920979",
    "end": "2924099"
  },
  {
    "text": "you",
    "start": "2932630",
    "end": "2934690"
  }
]