[
  {
    "text": "Hey, welcome, everybody, to the twenty first annual Christmas lecture.",
    "start": "10270",
    "end": "15910"
  },
  {
    "text": "This is the first time that it's not called the annual Christmas tree lecture.",
    "start": "15910",
    "end": "21550"
  },
  {
    "text": "The reason is that while I'm still finding out cool things about trees, but they're getting harder and harder to explain in an hour to a general audience.",
    "start": "21550",
    "end": "31150"
  },
  {
    "text": "And the next time I do. Hear, hear. Hear one that that's really appropriate.",
    "start": "31150",
    "end": "37050"
  },
  {
    "text": "And doesn't, you know, doesn't snow half of the people.",
    "start": "37050",
    "end": "42270"
  },
  {
    "text": "I'll do it. But today I got something that's really fun. And it involves quite a few aspects of computer science at once.",
    "start": "42270",
    "end": "51070"
  },
  {
    "text": "And one in one case, a very beautiful algorithm, not a case. It leads to issues of programing, programing, style, how to do it, and especially on questions of recursion.",
    "start": "51070",
    "end": "63760"
  },
  {
    "text": "The algorithm is recursive, but I don't know a good way to write it, except without using recursion explicitly.",
    "start": "63760",
    "end": "71950"
  },
  {
    "text": "And then also there's some really beautiful mathematics goes with it, too.",
    "start": "71950",
    "end": "77320"
  },
  {
    "text": "So it's always fun to give a lecture when you have something interesting to say. And so that's my goal for for the next hour and 10 minutes.",
    "start": "77320",
    "end": "86170"
  },
  {
    "text": "In fact, it's based on a paper that came out in 1965.",
    "start": "86170",
    "end": "93729"
  },
  {
    "text": "And you zoom in on this, Ovadia, just by Willard Eastman on the construction of free codes.",
    "start": "93730",
    "end": "102010"
  },
  {
    "text": "I'm hoping that it will appear on the on the screen in the in the auditorium, too, so they can see it.",
    "start": "102010",
    "end": "111010"
  },
  {
    "text": "Dariel. OK. So. So Willard Eastman,",
    "start": "111010",
    "end": "117280"
  },
  {
    "text": "actually I found out last month that he was he was a friend of Dick Karp's when they both were students at Harvard in graduate school in the late 50s.",
    "start": "117280",
    "end": "125950"
  },
  {
    "text": "And Eastman finished a year earlier than, than carp. And his thesis was about the traveling salesman problem.",
    "start": "125950",
    "end": "132940"
  },
  {
    "text": "And this was before Gomera had come up with methods for injured programing.",
    "start": "132940",
    "end": "141880"
  },
  {
    "text": "So it was it was one of the first attacks on the traveling salesman problem that they did.",
    "start": "141880",
    "end": "147580"
  },
  {
    "text": "And so he worked in a variety of topics over the years. I think you went to work for Motor Corporation afterwards anyway.",
    "start": "147580",
    "end": "157630"
  },
  {
    "text": "Willard Eastman, paper that I'm going to talk about now is about Comfrey codes.",
    "start": "157630",
    "end": "164560"
  },
  {
    "text": "And actually in my title I. I changed a little bit. I also made it. Hi. Hyphen free, comma, free code.",
    "start": "164560",
    "end": "176670"
  },
  {
    "text": "But but he he found a conjecture that had been open for four. Oh I don't know. Seven, eight years. And the conjecture was made by four really good mathematicians at JPL.",
    "start": "176670",
    "end": "189870"
  },
  {
    "text": "Sup. Sol Golem. Lloyd Welch. Basil Gordon. And who is the fourth anyway. So.",
    "start": "189870",
    "end": "198730"
  },
  {
    "text": "So it turned out that he yourself, you know, kind of a well-known open problem.",
    "start": "198730",
    "end": "206810"
  },
  {
    "text": "Well, on the other hand, this paper had been pretty much totally forgotten.",
    "start": "206810",
    "end": "211849"
  },
  {
    "text": "And then somebody came out with it with a slightly shorter proof.",
    "start": "211850",
    "end": "217120"
  },
  {
    "text": "A few years later, and that was picked up by the textbook, although it proved that it isn't an explicit construction, it's very inefficient.",
    "start": "217120",
    "end": "225220"
  },
  {
    "text": "It's only in existence there. And so, anyway, Eastman's beautiful algorithm seems to have gone into the dark.",
    "start": "225220",
    "end": "235270"
  },
  {
    "text": "And I want to resurrect it today and show you how beautiful it is and how interesting.",
    "start": "235270",
    "end": "240340"
  },
  {
    "text": "So I'm not going to tell you why it's useful that speaking to me beauty is it is is good enough.",
    "start": "240340",
    "end": "247410"
  },
  {
    "text": "But but anyway. All beautiful things do turn out to be useful eventually anyway.",
    "start": "247410",
    "end": "255110"
  },
  {
    "text": "So I won't go into that. But to what does it mean. Have a comma free code. The more common term these days now is technically they call it a young self synchronizing block code.",
    "start": "255110",
    "end": "271210"
  },
  {
    "text": "And so a block code means that you have a bunch of code words in every code.",
    "start": "271210",
    "end": "277900"
  },
  {
    "text": "Word has the same length. Same number of letters and self synchronizing.",
    "start": "277900",
    "end": "284169"
  },
  {
    "text": "Well, I like the word comma free. And when it's a black code because it's easy to set to say it, it says that you don't need.",
    "start": "284170",
    "end": "291830"
  },
  {
    "text": "You don't need Duqu commas or spaces or anything else between words. You just send your code words, concatenate them together,",
    "start": "291830",
    "end": "299740"
  },
  {
    "text": "and then the receiver can figure out where one word ends and the next one begins by only looking at a little bit of the message.",
    "start": "299740",
    "end": "309990"
  },
  {
    "text": "So you don't get lost. Now, I, I can give you the idea by by showing you a look.",
    "start": "309990",
    "end": "318789"
  },
  {
    "text": "I have a computer program that we can take a look at. So. So it's it's called Comfrey Checketts, I believe.",
    "start": "318790",
    "end": "330880"
  },
  {
    "text": "And so now this is set up for four letter words. And and so are you.",
    "start": "330880",
    "end": "337480"
  },
  {
    "text": "The idea is I'm going to go go through the audience here and people just tell me a four letter word.",
    "start": "337480",
    "end": "342880"
  },
  {
    "text": "And it's going to either accept your word or not based on whether or not it's coller free with respect to the preceding words.",
    "start": "342880",
    "end": "350450"
  },
  {
    "text": "And then and then I'll I'll explain what Comfrey means by seeing the examples.",
    "start": "350450",
    "end": "355870"
  },
  {
    "text": "So please give me a bit, by the way. This is going on out on the Internet.",
    "start": "355870",
    "end": "361660"
  },
  {
    "text": "So choose your words a little bit flawed or for what you are.",
    "start": "361660",
    "end": "370330"
  },
  {
    "text": "Well, that's pretty good. OK. So. All right. Well, now the first one is almost always accepted. However, it would not have been accepted if it was something like Gaga.",
    "start": "370330",
    "end": "380690"
  },
  {
    "text": "You know, Lady Gaga, you know, maybe lady would beat you ladies, okay, but Gaga is not because it's periodic.",
    "start": "380690",
    "end": "387960"
  },
  {
    "text": "And so if I had Gaga Gaga, I wouldn't know.",
    "start": "387960",
    "end": "394069"
  },
  {
    "text": "OK, I got to go over here. If I have Gaga, Gaga or any periodic word.",
    "start": "394070",
    "end": "402220"
  },
  {
    "text": "Then the then, you know, it appears also in the middle of two other words.",
    "start": "402220",
    "end": "410050"
  },
  {
    "text": "That's the thing that we don't allow we don't allow having having two words in the code and that something.",
    "start": "410050",
    "end": "416110"
  },
  {
    "text": "OK. Another word is also formed by one of these three things in the middle.",
    "start": "416110",
    "end": "422530"
  },
  {
    "text": "So I have a thought. We still have four letters. ABC D is one word of the code and WXYZ is another word of the code.",
    "start": "422530",
    "end": "431740"
  },
  {
    "text": "And and that means that B, C, D, W cannot be a word CDW X cannot be word and D, w, x, y cannot be a word.",
    "start": "431740",
    "end": "441460"
  },
  {
    "text": "That's the condition on common free code. So. So. So give me a four letter word. Lane.",
    "start": "441460",
    "end": "449860"
  },
  {
    "text": "Lane. This is just gonna go fast probably before we get rejected because there's lots of OK.",
    "start": "449860",
    "end": "457800"
  },
  {
    "text": "Four lane highway. You want to try high road. Guess what.",
    "start": "457800",
    "end": "463379"
  },
  {
    "text": "Case c c c a s e c a case.",
    "start": "463380",
    "end": "471200"
  },
  {
    "text": "Yeah. That's where I went to undergrad. You fare better.",
    "start": "471200",
    "end": "479520"
  },
  {
    "text": "Now I know which one. Claw.",
    "start": "479520",
    "end": "488530"
  },
  {
    "text": "See ya. Go ahead.",
    "start": "488530",
    "end": "495360"
  },
  {
    "text": "Oh. What? Oh, gee, frog.",
    "start": "495360",
    "end": "500990"
  },
  {
    "text": "Sorry, I. I do have your hearing aids now. But this this language LIFG like an elevator.",
    "start": "500990",
    "end": "513899"
  },
  {
    "text": "I ask Keith LIFG like a language. They were going fine. You. Okay, so all these all these words can be used commentary without any sink, Unix, Unix and all that.",
    "start": "513900",
    "end": "529730"
  },
  {
    "text": "Oh I'm sorry. I have to say yes.",
    "start": "529730",
    "end": "535010"
  },
  {
    "text": "I mean my ex. Thank you.",
    "start": "535010",
    "end": "541140"
  },
  {
    "text": "He I. S pins to rent when you use a large alphabet.",
    "start": "541140",
    "end": "549530"
  },
  {
    "text": "It's it, it's pretty easy to become and feel like, like, you know, Chinese do it all the time. They have a very large alphabet until they don't have they don't need space between their words.",
    "start": "549530",
    "end": "558800"
  },
  {
    "text": "But in Thailand, they have only 40 characters. And they told me the alphabet, but they don't use spaces between words there. But still 26 letters.",
    "start": "558800",
    "end": "571370"
  },
  {
    "text": "It's pretty good to get on with lots of words. You got books, beauty as books be yujie.",
    "start": "571370",
    "end": "579100"
  },
  {
    "text": "Yes. This is very interesting to see what people still spun.",
    "start": "579100",
    "end": "585920"
  },
  {
    "text": "What are digital? Let's try it. One, two, three, four.",
    "start": "585920",
    "end": "591620"
  },
  {
    "text": "Sorry. No, it's got to be a hard card.",
    "start": "591620",
    "end": "597500"
  },
  {
    "text": "Hey. Now I've got a great statistician in the front row.",
    "start": "597500",
    "end": "603230"
  },
  {
    "text": "David, would you. Can you give me a minute? Can you figure out the probability that that should. I do have one.",
    "start": "603230",
    "end": "617330"
  },
  {
    "text": "Just just three. He uses a letter J. That's all he knows. He's good company in the back. Yes, Earl.",
    "start": "617330",
    "end": "625940"
  },
  {
    "text": "E a r l trl. No. E. Hey. Ah, Earl. That's your name.",
    "start": "625940",
    "end": "634610"
  },
  {
    "text": "No, sir. Well, anyway, here we have an ice pick here.",
    "start": "634610",
    "end": "640190"
  },
  {
    "text": "We have a reason why it was rejected. OK. Because there is some word ending with E. R. Bear.",
    "start": "640190",
    "end": "646220"
  },
  {
    "text": "And there is some word beginning with an L. list. Right. And so there we are. OK, now. So you're getting the idea of comma free code and we don't have time to play with this forever, but it's fine.",
    "start": "646220",
    "end": "659060"
  },
  {
    "text": "But what? But I have a short demo here.",
    "start": "659060",
    "end": "665540"
  },
  {
    "text": "Out of the book. Let me let me show you the book that I've got that I brought with me.",
    "start": "665540",
    "end": "670910"
  },
  {
    "text": "This is not. This is going to be online soon, but I haven't announced that yet.",
    "start": "670910",
    "end": "677139"
  },
  {
    "text": "You have to be clever enough to figure out the URL. But but introduction to backtracking.",
    "start": "677140",
    "end": "682190"
  },
  {
    "text": "One of the main examples in this section is about comma free code. And that's when I that's when I discovered Ethan's algorithm while I was while I was looking at it.",
    "start": "682190",
    "end": "692090"
  },
  {
    "text": "Well, anyway, here, if we look at exercise twenty nine, it has a list of of four letter words that we can try and so I.",
    "start": "692090",
    "end": "702490"
  },
  {
    "text": "And so here it is. AIST these words. You'll notice. You'll notice something strange about these, these four letter words.",
    "start": "702490",
    "end": "708550"
  },
  {
    "text": "See if you can tell me what the rule is. The first person who who guesses the decimal exodus of Hexham.",
    "start": "708550",
    "end": "722649"
  },
  {
    "text": "Yeah, that's right. These. This is Dada's like Gaga.",
    "start": "722650",
    "end": "727990"
  },
  {
    "text": "But it didn't rejected because of Di Di. It rejected it because of two other words that that happened to be there.",
    "start": "727990",
    "end": "733959"
  },
  {
    "text": "But but these are all they are. These are only used letters. ABC, D, E and F. OK, so now dead deaf face lips face is no good.",
    "start": "733960",
    "end": "751120"
  },
  {
    "text": "And then fade. And then feed. So. So now this. I like.",
    "start": "751120",
    "end": "760420"
  },
  {
    "text": "What I wanted to show you is I take the same words and doom in the opposite order. And it won't it won't have the same behavior of course, because it based on the words that are that occur earlier.",
    "start": "760420",
    "end": "773230"
  },
  {
    "text": "So faces is now fine if I haven't had those other words in front of it. So I go dead. Dad is going to be bad for sure. See the seed cafi beef.",
    "start": "773230",
    "end": "787399"
  },
  {
    "text": "Bead, but not now here.",
    "start": "787400",
    "end": "793710"
  },
  {
    "text": "Data, you see, if data is a word, then. Then there's a word ending with D.A. and there's a word beginning with D.A.",
    "start": "793710",
    "end": "802600"
  },
  {
    "text": "It had to be the same word, but that's but data can't be in any said it in the first day.",
    "start": "802600",
    "end": "808250"
  },
  {
    "text": "I could do it first. So this is exactly the same letters that I had before, except that I, I when I tried it at home, I rejected seed and it rejected Ace.",
    "start": "808250",
    "end": "826540"
  },
  {
    "text": "And so so this time the same 13 words in the other order. Now only 10 were accepted. So this doesn't give you a minimum's. You didn't. Doesn't give you a maximum set this method.",
    "start": "826540",
    "end": "836400"
  },
  {
    "text": "But it but it anyway, it's a it's actually a kind of an interesting little programing problem, too.",
    "start": "836400",
    "end": "841870"
  },
  {
    "text": "I like to write a check and I'll accept every word. If and only if you can add it to the previous ones without violating commentary property.",
    "start": "841870",
    "end": "850570"
  },
  {
    "text": "And I have to mention that my first solution to this was wrong, and I didn't realize it for a couple of days.",
    "start": "850570",
    "end": "858500"
  },
  {
    "text": "And so I had to increase the value of the exercise. I'd ask for such a program because it wasn't easy to write the program, as I thought.",
    "start": "858500",
    "end": "866540"
  },
  {
    "text": "OK, now. So that's the idea of Comfrey and. Now, I want to show you Easton's beautiful algorithm.",
    "start": "866540",
    "end": "878990"
  },
  {
    "text": "Well, let me let me go go a little further, though.",
    "start": "878990",
    "end": "886399"
  },
  {
    "text": "Let's let's consider now just three let three letter cases.",
    "start": "886400",
    "end": "893460"
  },
  {
    "text": "Let me see. I thought I had you know, I.",
    "start": "893460",
    "end": "898520"
  },
  {
    "text": "I think I have somewhere I have a couple of cases that were interesting to try.",
    "start": "898520",
    "end": "909480"
  },
  {
    "text": "Let's see. Oh, I'm sorry. Let me. Let me try once more. A cow.",
    "start": "909480",
    "end": "922990"
  },
  {
    "text": "Let's see, I think to try to be a. a and a B.",
    "start": "922990",
    "end": "928920"
  },
  {
    "text": "A. No, that's that wasn't it. OK. Let's. What did I.",
    "start": "928920",
    "end": "939139"
  },
  {
    "text": "That's right. Yeah, I'm sorry. It was a B, A and A B, b a.",
    "start": "939140",
    "end": "946760"
  },
  {
    "text": "No, that didn't work. OK. That's strange.",
    "start": "946760",
    "end": "954170"
  },
  {
    "text": "I thought I was. OK.",
    "start": "954170",
    "end": "965850"
  },
  {
    "text": "OK. So sometimes it's not as obvious as you think, but he even even these days looked like it.",
    "start": "965850",
    "end": "974480"
  },
  {
    "text": "You know, one of them has two B's in it and so on. But it did. But it didn't work now. But but but if it if one of the very important consequences is that if A, B, C, D is a word, then B, C, D, a.",
    "start": "974480",
    "end": "994400"
  },
  {
    "text": "It is not a word, nor in C, D, A, B, and D.A., B, C, all of these are forbidden.",
    "start": "994400",
    "end": "1001560"
  },
  {
    "text": "You can only have one out of four of of any cyclic group.",
    "start": "1001560",
    "end": "1007680"
  },
  {
    "text": "Do you see why that is? Because if ABC d is a word, then then I can put that WXYZ.",
    "start": "1007680",
    "end": "1014010"
  },
  {
    "text": "So that's ABC D, ABC D. So all of these others appear in there. And so they're forbidden. OK. So this gives us an upper bound on the on the total number of words.",
    "start": "1014010",
    "end": "1025030"
  },
  {
    "text": "So, so. So if I go instead to two to a three letter alphabet.",
    "start": "1025030",
    "end": "1031770"
  },
  {
    "text": "Well I could go to, I could go to two letter but that's a bit. But let's two, three letters because little more interesting. So is it.",
    "start": "1031770",
    "end": "1039360"
  },
  {
    "text": "So let's say that I'm going to now have length three instead of length four.",
    "start": "1039360",
    "end": "1047790"
  },
  {
    "text": "So there's twenty seven ways to write zero ones and twos. Right.",
    "start": "1047790",
    "end": "1055110"
  },
  {
    "text": "Three of them. Zero zero one sorry. Zero zero one and then zero one zero one one zero zero.",
    "start": "1055110",
    "end": "1063730"
  },
  {
    "text": "These I can only choose one of these three zero zero zero is definitely out. That's periodic or very one. So then the next one would be zero zero two.",
    "start": "1063730",
    "end": "1074059"
  },
  {
    "text": "And and it's six week shifts. So I have to choose one of these three.",
    "start": "1074060",
    "end": "1079260"
  },
  {
    "text": "And then what? Zero one one and zero one two one two zero two zero one zero two one two.",
    "start": "1079260",
    "end": "1096150"
  },
  {
    "text": "I know one or two. And one on two.",
    "start": "1096150",
    "end": "1104730"
  },
  {
    "text": "One when one is out course. And two things are out. So then one. One, two. One, two. One, two, one. OK.",
    "start": "1104730",
    "end": "1114480"
  },
  {
    "text": "So now there is. Have I got them all.",
    "start": "1114480",
    "end": "1121230"
  },
  {
    "text": "There is twenty seven. Well then. So now I've got six times. Three is 18, 19, 20, 21. So I. So there's six more to go.",
    "start": "1121230",
    "end": "1130799"
  },
  {
    "text": "What. Two to one. That's good. Two to one and one to two.",
    "start": "1130800",
    "end": "1138649"
  },
  {
    "text": "And then there's also what? Two to zero?",
    "start": "1138650",
    "end": "1144410"
  },
  {
    "text": "Very good. OK. Two. Two zero. And it's you. OK. Now I've got 27, so I don't have to look any any further.",
    "start": "1144410",
    "end": "1152940"
  },
  {
    "text": "Why so. So. So now if we're gonna have a comma free code and the three letter alphabet and they block length history,",
    "start": "1152940",
    "end": "1162049"
  },
  {
    "text": "the best we could hope for is eight code words. And so this is what this is the problem that that Eastman solved.",
    "start": "1162050",
    "end": "1171730"
  },
  {
    "text": "If you have any odd block links whatsoever, three five seven block length one isn't too interesting, but three five seven nine eleven then.",
    "start": "1171730",
    "end": "1184970"
  },
  {
    "text": "And you have an M letter alphabet. So m the number of of possible three letter words, name of the alphabet is M cubed.",
    "start": "1184970",
    "end": "1195860"
  },
  {
    "text": "But then you have to throw out the cases that are all equal and then you divide by three in order to figure out, you know, the cycle.",
    "start": "1195860",
    "end": "1207530"
  },
  {
    "text": "So the size an integer and. And this is the best you can get. And and and similarly for any for any odd number instead of three.",
    "start": "1207530",
    "end": "1219289"
  },
  {
    "text": "But it gets more complicated. Like if if, if the length is nine it's M to the ninth minus M cubed over over nine.",
    "start": "1219290",
    "end": "1228230"
  },
  {
    "text": "In order to get the non periodic words of of size nine and four for combination like fifteen m2 is M to the 15th minus M to the fifth minus M,",
    "start": "1228230",
    "end": "1240679"
  },
  {
    "text": "Q plus M over 15 it turns out. So it gets, it gets complicated to find out the number of non periodic words.",
    "start": "1240680",
    "end": "1250760"
  },
  {
    "text": "But in general, for it for any odd number, Eastman showed that there is a way to achieve this many code words.",
    "start": "1250760",
    "end": "1260990"
  },
  {
    "text": "And that means that that that you give him any any non periodic word whatsoever.",
    "start": "1260990",
    "end": "1269150"
  },
  {
    "text": "And then he tells you which way to rotate that word in order to get a code word to his set.",
    "start": "1269150",
    "end": "1275500"
  },
  {
    "text": "That'll become clearer as we as we go on. But that's it. But that's the purpose of his algorithm.",
    "start": "1275500",
    "end": "1281160"
  },
  {
    "text": "And and the first case, three other words is easy.",
    "start": "1281160",
    "end": "1288440"
  },
  {
    "text": "So if we have if we have three, what we do is we if we choose it.",
    "start": "1288440",
    "end": "1295070"
  },
  {
    "text": "So that A is is greater than B and less than or equal C.",
    "start": "1295070",
    "end": "1302269"
  },
  {
    "text": "So if you have any three letter three symbols that that aren't all equal,",
    "start": "1302270",
    "end": "1311330"
  },
  {
    "text": "then you can always you can always permute them cyclically in exactly one way. So that that this this pattern occurs. You have to have to think about it a minute.",
    "start": "1311330",
    "end": "1322880"
  },
  {
    "text": "But, you know, try tried out. One, two, three, two, two, three, one, three, one, two.",
    "start": "1322880",
    "end": "1333380"
  },
  {
    "text": "This is the only one that works. It has to be the first one has to be bigger than the second.",
    "start": "1333380",
    "end": "1338390"
  },
  {
    "text": "The second has to be less than or equal third. So so let's do it for these eight weeks or so.",
    "start": "1338390",
    "end": "1344680"
  },
  {
    "text": "So let's go to Comfrey set out of this one. And so we. So one one is greater than zero. Listen. Equals zero. Here a circle.",
    "start": "1344680",
    "end": "1353600"
  },
  {
    "text": "This guy. What, six zero one one?",
    "start": "1353600",
    "end": "1362630"
  },
  {
    "text": "Yes, it's over here. Oh, I see. I've got it twice. That's not very that's not very nice. Let's try one one zero there.",
    "start": "1362630",
    "end": "1373780"
  },
  {
    "text": "That looks better. Yeah. Thanks a lot. I am sorry I don't pay for four four mistakes in it.",
    "start": "1373780",
    "end": "1381850"
  },
  {
    "text": "But if you. But if if this had. If this had been in my book you would have just won two dollars and fifty six and somehow it is OK.",
    "start": "1381850",
    "end": "1390850"
  },
  {
    "text": "So. So here we, we got this one. There it is. Exactly one that satisfies his condition. The first one is bigger than the second and the second is less than or equal.",
    "start": "1390850",
    "end": "1400630"
  },
  {
    "text": "Third. C two. Two is bigger than one. But but it doesn't work here. So I got to choose this guy and.",
    "start": "1400630",
    "end": "1408010"
  },
  {
    "text": "OK, this is it. And. Well, No. Two. One, two. Looks good. And two. Oh two.",
    "start": "1408010",
    "end": "1418450"
  },
  {
    "text": "OK. So these eight, these eight words are going to are going to work. In fact, that's it. It's easy to see that because if I had ABC and X, Y, Z.",
    "start": "1418450",
    "end": "1430270"
  },
  {
    "text": "And this is greater here and less than or equal here. And this is greater here in less than or equal here.",
    "start": "1430270",
    "end": "1435940"
  },
  {
    "text": "Well then I couldn't possibly have B, C, X because B is isn't greater than C, I couldn't have C, X, Y because X is not less than or equal Y.",
    "start": "1435940",
    "end": "1443320"
  },
  {
    "text": "OK. So. So this was the easy one. And and then you go to block link five and you say,",
    "start": "1443320",
    "end": "1450399"
  },
  {
    "text": "well there there is a similar rule but but there's a whole bunch of cases about greater than in last week.",
    "start": "1450400",
    "end": "1456620"
  },
  {
    "text": "But there's some pattern at work. And but then when in fact these guys say Goldman and Gordon and Welch worked out up to like length 15.",
    "start": "1456620",
    "end": "1474520"
  },
  {
    "text": "But the rule for 15 was so complicated, they only stated it. And you didn't bother to prove it because it was very, very hard. And they and they didn't know how to go to 17.",
    "start": "1474520",
    "end": "1484179"
  },
  {
    "text": "So that's where they made the conjecture, though, that that would work for a lot. One six, since they figured it was going to fail for anything, it would probably fail for 15 15, not being a primer, primary power of prime.",
    "start": "1484180",
    "end": "1496320"
  },
  {
    "text": "So it was gonna be hard. On the other hand, in the case of even block lengths.",
    "start": "1496320",
    "end": "1505919"
  },
  {
    "text": "It doesn't work nicely at all. Even the even two letter words you can't get Ms.",
    "start": "1505920",
    "end": "1512560"
  },
  {
    "text": "You can't get em squared minus M over two unless M is is very tiny.",
    "start": "1512560",
    "end": "1519760"
  },
  {
    "text": "You can easily work that out is more the fact it's it's actually M squared minus. It's like one fourth of all of the possible words. It's the best you can get with block length to and ending a binary code.",
    "start": "1519760",
    "end": "1530770"
  },
  {
    "text": "This is it was open problem until, until two months ago whether or not you could get the maximum OK for binary code of black length.",
    "start": "1530770",
    "end": "1541530"
  },
  {
    "text": "Well and I and I ran out, I converted this to a set problem and and and it turned out that it's not satisfied.",
    "start": "1541530",
    "end": "1552730"
  },
  {
    "text": "So you could you could do it ten blocks, like ten on binary, but not twelve. So anyway, the length of the largest one for first Bucklings twelve is not known.",
    "start": "1552730",
    "end": "1564760"
  },
  {
    "text": "At least it's not it's not the optimum. OK. But let's hope so. But ESPN has this beautiful algorithm that gets the odd ones and I will now demonstrate the algorithm to select.",
    "start": "1564760",
    "end": "1579450"
  },
  {
    "text": "So let's strip. Let me let me show you my my next program, which is called comma Free Eastman.",
    "start": "1579450",
    "end": "1589899"
  },
  {
    "text": "Can you read that? OK. I actually like this. OK, so now what it once is, it wants me to enter.",
    "start": "1589900",
    "end": "1596890"
  },
  {
    "text": "And in this case it's numbers. It's not going to accept letters. So, so, so I will take that.",
    "start": "1596890",
    "end": "1607539"
  },
  {
    "text": "And I want to add some numbers.",
    "start": "1607540",
    "end": "1615080"
  },
  {
    "text": "Let's see. My favorite number, like three one four one five nine two six.",
    "start": "1615080",
    "end": "1623740"
  },
  {
    "text": "What come next here? My favorite tasks. So let's see.",
    "start": "1623740",
    "end": "1634750"
  },
  {
    "text": "OK. Well, actually, now we've got the answer, but it's very inscrutable.",
    "start": "1634750",
    "end": "1642730"
  },
  {
    "text": "Take the program. Told me phase one leaves five. Mm hmm. That's interesting. Let me let let let me try adding a few more digits to what comes next.",
    "start": "1642730",
    "end": "1652830"
  },
  {
    "text": "Let me see. I think I have it. I have. Written down here somewhere.",
    "start": "1652830",
    "end": "1658390"
  },
  {
    "text": "We could try Black Pi in binary, too. But let's let's go for a just anywhere.",
    "start": "1658390",
    "end": "1663670"
  },
  {
    "text": "OK, so let me see. Okay.",
    "start": "1663670",
    "end": "1670060"
  },
  {
    "text": "So eight, nine. And then we put a seven nine three two, three eight.",
    "start": "1670060",
    "end": "1678430"
  },
  {
    "text": "It's seven nine three, two, three. OK, now this is. This is no good because I have to I have to have an odd number, so I got to add an eight.",
    "start": "1678430",
    "end": "1689280"
  },
  {
    "text": "So now I got. Evidently, I have 17 things, I thought it was 19.",
    "start": "1689280",
    "end": "1694570"
  },
  {
    "text": "One, two, three, four, five, six, seven, eight, nine, ten. Yeah, I made a mistake.",
    "start": "1694570",
    "end": "1700899"
  },
  {
    "text": "Let's try it again. Kind of free used man.",
    "start": "1700900",
    "end": "1707670"
  },
  {
    "text": "Case three one four one two six five three five eight seven nine nine.",
    "start": "1707670",
    "end": "1722460"
  },
  {
    "text": "That's it. Three, two, three, eight. That's that's what I wanted. OK, now I'm going to explain to you what what this what this mysterious stuff phrases are.",
    "start": "1722460",
    "end": "1734130"
  },
  {
    "text": "But the net effect, though, is that it's gone in the first one, it says start at digit number five.",
    "start": "1734130",
    "end": "1745410"
  },
  {
    "text": "Oh, I think it is. Let's. Let me let me try a cut.",
    "start": "1745410",
    "end": "1752040"
  },
  {
    "text": "I need a. Let's see. So let's say nine. Let me just try two, one, three, which is OK.",
    "start": "1752040",
    "end": "1763929"
  },
  {
    "text": "You know, to zero. This is you have to shift it that many, many places. So when it said when it said the answer is five, that means throw away the first five guys and then start there.",
    "start": "1763930",
    "end": "1775940"
  },
  {
    "text": "So here it says at the end it said these fifteen.",
    "start": "1775940",
    "end": "1780980"
  },
  {
    "text": "That says, I got to start. I throw away the first fifteen digits, the last. And so I start at this three three, two, three eight three one four one five.",
    "start": "1780980",
    "end": "1790490"
  },
  {
    "text": "That that's the cyclic shift that that will be that will be a code word that has this particular class of of of 19 of 19 digits now.",
    "start": "1790490",
    "end": "1804660"
  },
  {
    "text": "But so what's the solution to the mystery? And that is given by the program that I want to show you.",
    "start": "1804660",
    "end": "1814500"
  },
  {
    "text": "So I got the code. The source code for the program here. And this is let's take a guess.",
    "start": "1814500",
    "end": "1821660"
  },
  {
    "text": "We'll have to zoom out a little bit, Jason. But this is on the Web.",
    "start": "1821660",
    "end": "1827510"
  },
  {
    "text": "And it's not only is it on the Web, but it's written in C Web, which which I think is the only good way to program.",
    "start": "1827510",
    "end": "1834920"
  },
  {
    "text": "So fortunately, this is a nice short example of C Web.",
    "start": "1834920",
    "end": "1840020"
  },
  {
    "text": "So if you haven't if you're not if you don't know much about C Web, you can. You can take a look at this program and then then you then you'll see why I like it so much.",
    "start": "1840020",
    "end": "1849500"
  },
  {
    "text": "OK. So so C Web is a combination of, of English and see it.",
    "start": "1849500",
    "end": "1856280"
  },
  {
    "text": "So it's OK to write English commentary and then I intersperse that with a bit of code and everything.",
    "start": "1856280",
    "end": "1865250"
  },
  {
    "text": "It is in a in a bunch of short modules at the very beginning.",
    "start": "1865250",
    "end": "1870590"
  },
  {
    "text": "I have a long explanation which explain here. I refer to Eastman's paper and I explain about the cyclic shifts.",
    "start": "1870590",
    "end": "1878600"
  },
  {
    "text": "So the the input has to be something at length that that's not equal to any of its cyclic shifts.",
    "start": "1878600",
    "end": "1884660"
  },
  {
    "text": "Basically word. And so then it's OK, we're going to figure out how to shift that word so that we get a code word and",
    "start": "1884660",
    "end": "1892760"
  },
  {
    "text": "all of possible code words that are going to come out of this is is going to work. It's gonna be a comma free black code of this length.",
    "start": "1892760",
    "end": "1901250"
  },
  {
    "text": "So now I explain the the case N equals three and N equals five or seven, but N equals nine.",
    "start": "1901250",
    "end": "1909230"
  },
  {
    "text": "It already gets quite complicated. And so now we go now to the next page which gets into the into the code itself.",
    "start": "1909230",
    "end": "1919640"
  },
  {
    "text": "And so here I am allowing up to one hundred and five. For some reason it inputs and.",
    "start": "1919640",
    "end": "1930440"
  },
  {
    "text": "And so here's the program. It starts out with a bunch of includes statements to get the IO going.",
    "start": "1930440",
    "end": "1937309"
  },
  {
    "text": "And I define an array and couple of arrays.",
    "start": "1937310",
    "end": "1943650"
  },
  {
    "text": "And and then I have subroutines. And then main program has a few variables and registrants.",
    "start": "1943650",
    "end": "1952190"
  },
  {
    "text": "This process, the command line and then do Eastman's algorithm. So process command line is Section three. So we now turn to Section three and section three is the code for process the command line.",
    "start": "1952190",
    "end": "1966210"
  },
  {
    "text": "All right. So the first thing it does is it checks to see if the number of arguments, the program, less than four, if, if, if not, I get the usage line.",
    "start": "1966210",
    "end": "1973630"
  },
  {
    "text": "Now, that happened. If you'll remember, when I first typed it without any arguments,",
    "start": "1973630",
    "end": "1980180"
  },
  {
    "text": "it said it it said usage up at the up read there at the top of the screen gave me that that message.",
    "start": "1980180",
    "end": "1990470"
  },
  {
    "text": "OK, so now then I otherwise I look at the number of inputs and I check that it's.",
    "start": "1990470",
    "end": "2000419"
  },
  {
    "text": "And I get the error message if it should be odd instead of what it wasn't. You already saw that error message as well.",
    "start": "2000420",
    "end": "2007780"
  },
  {
    "text": "And then then another problem is maybe I type in something else that's negative or it's got letters in it or something like that.",
    "start": "2007780",
    "end": "2015850"
  },
  {
    "text": "And so, you know, that's the processing, the command line. But after we've done that with this, we've got all the all those numbers in in the gray X.",
    "start": "2015850",
    "end": "2024460"
  },
  {
    "text": "And so now we get to the algorithm. Now, here's the algorithm. And it's what I say is a beautiful algorithm that we want to talk about.",
    "start": "2024460",
    "end": "2030440"
  },
  {
    "text": "So, so. So think of this. This X that we that we're given as has if it's written as if it's an infinite cycle,",
    "start": "2030440",
    "end": "2038289"
  },
  {
    "text": "going going the same, the same m the same what do call and letters over and over and over again.",
    "start": "2038290",
    "end": "2047890"
  },
  {
    "text": "And so. I guess I, I shouldn't I should work it out with with with Pine as the example.",
    "start": "2047890",
    "end": "2062820"
  },
  {
    "text": "So. So here we have three one four one five nine two.",
    "start": "2062820",
    "end": "2068840"
  },
  {
    "text": "Six, five three five eight nine seven.",
    "start": "2068840",
    "end": "2075870"
  },
  {
    "text": "Nine, three, two, three, eight, OK? Now and then we imagine that that that.",
    "start": "2075870",
    "end": "2084830"
  },
  {
    "text": "That it goes on again. Three one four one five nine 10 are the same thing repeating.",
    "start": "2084830",
    "end": "2090270"
  },
  {
    "text": "So I call this. So I called his X zero and X one. And so on this X 17 at the end of six, Dec 16 and then 17 is going to be the same as X zero and X 18 is the same X one periodic 19.",
    "start": "2090270",
    "end": "2104700"
  },
  {
    "text": "Sorry, this is 19 letter. So everything is a this is a period of 19 sequence and.",
    "start": "2104700",
    "end": "2116720"
  },
  {
    "text": "And I think of it as divided into into sub sequences by boundary, not bug by boundary marker.",
    "start": "2116720",
    "end": "2125450"
  },
  {
    "text": "Now, initially, the boundary markers occur everywhere. So there's a boundary marker between every two, every two digits.",
    "start": "2125450",
    "end": "2136589"
  },
  {
    "text": "But but but that that's a beginning of phase zero. But if phase zero doesn't come up with the answer,",
    "start": "2136590",
    "end": "2143780"
  },
  {
    "text": "it's going to it's going to choose a subset of those boundary markers and divide the thing into smaller groups.",
    "start": "2143780",
    "end": "2152820"
  },
  {
    "text": "And so what actually happened was when I tried it, it said phase one leaves five, eight, fifteen.",
    "start": "2152820",
    "end": "2159620"
  },
  {
    "text": "And so that meant that the that that after phase after phase zero, we left the boundary marker here after the first five guys.",
    "start": "2159620",
    "end": "2170800"
  },
  {
    "text": "And we left the boundary marker half after the first eight guys. And after the first 15 guys. Then we had this district partitioned into three sub strings instead of 19.",
    "start": "2170800",
    "end": "2186740"
  },
  {
    "text": "And um. And so the idea of the algorithm is keep going until you only have one substring left.",
    "start": "2186740",
    "end": "2195940"
  },
  {
    "text": "And that's the one that that that's your answer. That's there. That's that's the final. That's the final code word. So now how do we do this?",
    "start": "2195940",
    "end": "2206160"
  },
  {
    "text": "And the idea is we look at this upwards and we forget. And and can we define.",
    "start": "2206160",
    "end": "2214750"
  },
  {
    "text": "OK. So now here's the here's the whole technical content here.",
    "start": "2214750",
    "end": "2221130"
  },
  {
    "text": "The algorithm can be described with terminology based on the type topography of Nevada that anybody here from Nevada.",
    "start": "2221130",
    "end": "2230529"
  },
  {
    "text": "Nobody from Las Vegas or anything like this will let let me recommend to you some time taking a drive on U.S. highways of 50,",
    "start": "2230530",
    "end": "2239530"
  },
  {
    "text": "which is called the loneliest highway in the world. But it's a beautiful eye because hardly any other cars are on it.",
    "start": "2239530",
    "end": "2247410"
  },
  {
    "text": "And you get that. You get the cross Nevada. And there's the famous book by John McPhee called Basin and Range, which talks about the well, anyway,",
    "start": "2247410",
    "end": "2262780"
  },
  {
    "text": "the beauty of driving across the VATA because you come to a base and then you then you cross a range, you come to a base near cross range or so.",
    "start": "2262780",
    "end": "2269950"
  },
  {
    "text": "And he he he he tells up about how how many think things are going on.",
    "start": "2269950",
    "end": "2276630"
  },
  {
    "text": "You know, it might look boring at first. I all kinds of things are happening in Nevada, in the basin and range.",
    "start": "2276630",
    "end": "2282670"
  },
  {
    "text": "OK, so now I chose the terminology basin and range based on this. And in my book by the index to the book, if you look up, John McPhee and the index are going to see a reference to this page.",
    "start": "2282670",
    "end": "2294190"
  },
  {
    "text": "But nobody when his name never appears in the book. But that's that's my little joke now.",
    "start": "2294190",
    "end": "2300849"
  },
  {
    "text": "Anyway, technically, and just for the purpose of Eastman's algorithm, we say it's a basin.",
    "start": "2300850",
    "end": "2307120"
  },
  {
    "text": "If the if you if we have a condition that that that the previous sub word is bigger than it.",
    "start": "2307120",
    "end": "2314140"
  },
  {
    "text": "And the next one is Gretton RICO. This is a lesson three. I mean, we had this pattern that I that I showed you for the the case of a block size three.",
    "start": "2314140",
    "end": "2324450"
  },
  {
    "text": "And. And so we can easily check and I can put an arrow where all the basins are here.",
    "start": "2324450",
    "end": "2330320"
  },
  {
    "text": "So so here I have three one four four one five. One is a basin because it's four is greater than one and one is less than equal five.",
    "start": "2330320",
    "end": "2340360"
  },
  {
    "text": "Nine is greater than two. So this one is good. Six is greater than five. But five is greater than three. So three is less than five.",
    "start": "2340360",
    "end": "2348510"
  },
  {
    "text": "Here's a base in here. Five. Eight. Nine, seven. Goes up nine. Goes down. Down here. It goes up again. Three, eight down to three.",
    "start": "2348510",
    "end": "2361740"
  },
  {
    "text": "So this one is a base, just as it was before. So these are you know, I already knew that that guy was a beast.",
    "start": "2361740",
    "end": "2371110"
  },
  {
    "text": "So now of that's the definition of basin. The pattern is greater then and then less than or equal.",
    "start": "2371110",
    "end": "2383800"
  },
  {
    "text": "So we look at consecutive basins and and the and and and we also look at whether the length from one to the next is even.",
    "start": "2383800",
    "end": "2399040"
  },
  {
    "text": "Right. So this is even in. And this is even. I'm sorry.",
    "start": "2399040",
    "end": "2408140"
  },
  {
    "text": "This is odd. So you have a four one five nine two. That's odd. And six five three is on five eight nine seven is even nine three.",
    "start": "2408140",
    "end": "2416950"
  },
  {
    "text": "Two is odd. Two three eight three one is even OK now since like since N is odd there's got to be an odd number of odd gaps like this.",
    "start": "2416950",
    "end": "2431680"
  },
  {
    "text": "It's some of the gaps is odd. And so there has to be an odd number of O's in this, in this pattern.",
    "start": "2431680",
    "end": "2437829"
  },
  {
    "text": "And but in each one, each one of these I'm going to choose I'm going to choose one of the one of these elements as the boundary that I'm going to keep for the next phase.",
    "start": "2437830",
    "end": "2450050"
  },
  {
    "text": "So, so, so, so that's what. So that's the next rule.",
    "start": "2450050",
    "end": "2456700"
  },
  {
    "text": "And then and the rule is keep a boundary.",
    "start": "2456700",
    "end": "2463450"
  },
  {
    "text": "You go up by two step, four step six steps or so on until you get to the first case of the greater then.",
    "start": "2463450",
    "end": "2470140"
  },
  {
    "text": "So so here I have an odd one and actually I, I have I have no choice.",
    "start": "2470140",
    "end": "2477430"
  },
  {
    "text": "It has to be greater than here. So I'm going to choose this as as far as my boundary just before a greater than fact.",
    "start": "2477430",
    "end": "2489040"
  },
  {
    "text": "These are all these are all kind of trivial because they're because they're only length three. That's two. That's too bad. But I get the more interesting ones in a minute.",
    "start": "2489040",
    "end": "2498820"
  },
  {
    "text": "So this would be go here.",
    "start": "2498820",
    "end": "2504940"
  },
  {
    "text": "So. So I moved from I'm sorry, I have to move an even number four. I have to move an even number away from the from the basin.",
    "start": "2504940",
    "end": "2514349"
  },
  {
    "text": "And so here I have a bit of an odd gap. And so I go and even number from the base and either go two or four.",
    "start": "2514350",
    "end": "2521350"
  },
  {
    "text": "So here I have only to go to. So. So that's actually five, eight and 15.",
    "start": "2521350",
    "end": "2527020"
  },
  {
    "text": "That's what the that's what the program program told me that I said that in the odd gaps I like, I chose my new boundary points.",
    "start": "2527020",
    "end": "2542350"
  },
  {
    "text": "Right. Drew these vertical lines and now everything between the the vertical line becomes a substring for the next phase.",
    "start": "2542350",
    "end": "2548910"
  },
  {
    "text": "Look to the next phase. Deals with the numbers like ninety to sixty five and then three five eight nine seven nine three two.",
    "start": "2548910",
    "end": "2557920"
  },
  {
    "text": "Three a three one four one five. These are these.",
    "start": "2557920",
    "end": "2563690"
  },
  {
    "text": "Now I have to find a code word from these three guys and it's easy because now I only have three, six or so.",
    "start": "2563690",
    "end": "2572589"
  },
  {
    "text": "So I use the rule that I had before. And so. And so this is where this is my second boundary here.",
    "start": "2572590",
    "end": "2579980"
  },
  {
    "text": "And this is going to come first. So the total code word is that one, that's the introduction to the algorithm.",
    "start": "2579980",
    "end": "2589300"
  },
  {
    "text": "We can watch it. I don't think I'll have time to go into the I go into the debugger, watching it, watching it proceed.",
    "start": "2589300",
    "end": "2602200"
  },
  {
    "text": "But let let's try it out on on, let's say, a binary sequence.",
    "start": "2602200",
    "end": "2610060"
  },
  {
    "text": "So. So pi in binary. This is. I have I have a mnemonic for this.",
    "start": "2610060",
    "end": "2626880"
  },
  {
    "text": "It's it's it. If it goes like this, I remembered in octal.",
    "start": "2626880",
    "end": "2633490"
  },
  {
    "text": "So it says, but I. I know the Octonal facts about PI.",
    "start": "2633490",
    "end": "2639010"
  },
  {
    "text": "And so but has three letters and so I would like. So I type one one. And then I that has one letter.",
    "start": "2639010",
    "end": "2646720"
  },
  {
    "text": "So that's O one. I know that. One for I. And then. No that's like zero. So zero zero zero.",
    "start": "2646720",
    "end": "2655869"
  },
  {
    "text": "And then the is three. Octonal is seven. Fact about pi five five two. So in octal pi is s and so.",
    "start": "2655870",
    "end": "2665619"
  },
  {
    "text": "So too bad I have to add another digit. I don't know the next fit so let's figure it out.",
    "start": "2665620",
    "end": "2671050"
  },
  {
    "text": "Okay. Here's a here's a binary sequence in which if we follow the rules we would find, we would find three odd basin's words.",
    "start": "2671050",
    "end": "2682700"
  },
  {
    "text": "There's a base and every time you have a one in this case, every time we have a one followed by a zero.",
    "start": "2682700",
    "end": "2687990"
  },
  {
    "text": "The zero is a basin. But then then then there are three cases where with an odd one.",
    "start": "2687990",
    "end": "2694630"
  },
  {
    "text": "And we choose a place inside of those as the boundary points to two segment are our input four for the next phase.",
    "start": "2694630",
    "end": "2706599"
  },
  {
    "text": "And similarly, we keep going.",
    "start": "2706600",
    "end": "2711700"
  },
  {
    "text": "And in each time, the code words that that we're forming are at least three of the original.",
    "start": "2711700",
    "end": "2723460"
  },
  {
    "text": "So the size of the problem goes from end to end over three or less every time.",
    "start": "2723460",
    "end": "2730690"
  },
  {
    "text": "So log base three of N is the maximum number of steps that it's gonna take to get the whole thing. So the X so the algorithm is very. Very, very fast.",
    "start": "2730690",
    "end": "2743880"
  },
  {
    "text": "And while I'm well, I'm looking at the sea web program, I might as well show you then how it goes.",
    "start": "2743880",
    "end": "2751410"
  },
  {
    "text": "So here's the code. So so here here is the idea. Then I explain I have an example of the of the basin.",
    "start": "2751410",
    "end": "2764190"
  },
  {
    "text": "So suppose there's a basin starting at two and a base and starting at nine. Then what happens is it sits to.",
    "start": "2764190",
    "end": "2773680"
  },
  {
    "text": "It means that y one is greater than y2 y y one is this substring.",
    "start": "2773680",
    "end": "2778920"
  },
  {
    "text": "The current stage is greater than y two. And then we have less than or equal like three. And now I don't know anything up until nine except that there's a greater than before Y nine and a less than or equal for Y 10.",
    "start": "2778920",
    "end": "2792570"
  },
  {
    "text": "And then but in between that I don't have any base. So that means I must've had a whole bunch of less than equals.",
    "start": "2792570",
    "end": "2798570"
  },
  {
    "text": "And then and then, you know, at least one less than or equal.",
    "start": "2798570",
    "end": "2803730"
  },
  {
    "text": "But. But maybe two. Maybe three and so on. And then maybe some greater than before I finally get here.",
    "start": "2803730",
    "end": "2810210"
  },
  {
    "text": "But there is some point to where it switches from less than or equal to greater that.",
    "start": "2810210",
    "end": "2815940"
  },
  {
    "text": "And so this is real easy, of course, in the computer to figure out what what, what, what CU is.",
    "start": "2815940",
    "end": "2822859"
  },
  {
    "text": "So so I just have to have the rule that if CU is it, I go up one one more.",
    "start": "2822860",
    "end": "2835410"
  },
  {
    "text": "But if CU is even, I stay there. And that's the place that I keep. So it's as easy as algorithm.",
    "start": "2835410",
    "end": "2840460"
  },
  {
    "text": "And that's explicit explanation of an English whole point of writing a programing in C Web.",
    "start": "2840460",
    "end": "2847050"
  },
  {
    "text": "Is that you that you that you explain what you're doing. And then you give a little fragment of code so that you can see what the program actually is formally.",
    "start": "2847050",
    "end": "2857400"
  },
  {
    "text": "And so do Eastman's algorithm consists of two steps. First. We initialize everything. And then secondly, we start out.",
    "start": "2857400",
    "end": "2864240"
  },
  {
    "text": "And let's say TI is the number of suburbs that we have and start times out as N and P is some six something that I don't remember what it means.",
    "start": "2864240",
    "end": "2878820"
  },
  {
    "text": "And then Teege it as long as T is greater than one I like. I do a phase of the algorithm and,",
    "start": "2878820",
    "end": "2884430"
  },
  {
    "text": "and I'm going to set t to the to the size of the number of things that I'm gonna go up one more repeat with told the next day code for initialization.",
    "start": "2884430",
    "end": "2896400"
  },
  {
    "text": "And that's just says that I make some will.",
    "start": "2896400",
    "end": "2903599"
  },
  {
    "text": "Why did this OK? My screen went blank. Jason. But it is so you know, I am replicating the string so that I saw this periodic in memory.",
    "start": "2903600",
    "end": "2919500"
  },
  {
    "text": "Only three copies at the worst. And I. Yikes. I start out the boundary between every letter.",
    "start": "2919500",
    "end": "2928020"
  },
  {
    "text": "Then I have. Then I have a subroutine for comparing submarines. The rule pairing submarines is that if if they're if they're different lengths, the longer one is bigger.",
    "start": "2928020",
    "end": "2938910"
  },
  {
    "text": "But if they're the same length I you use, you use ordinary lexicographical order.",
    "start": "2938910",
    "end": "2944369"
  },
  {
    "text": "So it's very easy to compare adjacent sub words to decide whether one is whether you have a greater than or less than or equal.",
    "start": "2944370",
    "end": "2951140"
  },
  {
    "text": "So. So this is the code for the subroutine. Next page is the do one phase of Eastman's algorithm.",
    "start": "2951140",
    "end": "2958829"
  },
  {
    "text": "And it turns out to be just just very easy to to do it.",
    "start": "2958830",
    "end": "2964710"
  },
  {
    "text": "And so then the app can choose a party point to retain the whole of the whole program fits on a small number of patients.",
    "start": "2964710",
    "end": "2973619"
  },
  {
    "text": "One number line. So.",
    "start": "2973620",
    "end": "2980190"
  },
  {
    "text": "Yeah, I got a lot more to say, so I better not dawdle by doing a mic or doing I mentioned one of the main points and that is this algorithm.",
    "start": "2980190",
    "end": "2993060"
  },
  {
    "text": "It's a recursive algorithm. The way he described it, he says you start out with this, with these with your given digits that you want to figure out.",
    "start": "2993060",
    "end": "3005250"
  },
  {
    "text": "You want to figure out what's going to be the code where among all the cyclic shifts.",
    "start": "3005250",
    "end": "3010650"
  },
  {
    "text": "And then can you break that down into suburbs, which gives you a smaller problem.",
    "start": "3010650",
    "end": "3017549"
  },
  {
    "text": "And then you recursively you find a code word for the smaller crowd.",
    "start": "3017550",
    "end": "3022830"
  },
  {
    "text": "However, I don't know how to write that very nicely as a recursive program, but it's very, very beautiful and very efficient.",
    "start": "3022830",
    "end": "3029730"
  },
  {
    "text": "If I write it this way with iteration. So so I thought that was interesting in itself.",
    "start": "3029730",
    "end": "3036600"
  },
  {
    "text": "Now. I also want to mention that this this this call is universal in the sense that it only it doesn't matter how big the alphabet is.",
    "start": "3036600",
    "end": "3051960"
  },
  {
    "text": "I don't have to define as a separate code for binary ternary or art or something.",
    "start": "3051960",
    "end": "3057970"
  },
  {
    "text": "Here, my example with PI, I was using I was using decimal. But but these these X's could be any non-negative beaners whatsoever.",
    "start": "3057970",
    "end": "3067270"
  },
  {
    "text": "This can be an infinite alphabet, whatever, whatever sequence you give it.",
    "start": "3067270",
    "end": "3076980"
  },
  {
    "text": "Eastman's algorithm will say, oh, shifted button, shift that sequence by this amount. And then that's your code word. But it'll work for any size alphabet and it doesn't and doesn't have to know the size of the alphabet.",
    "start": "3076980",
    "end": "3090869"
  },
  {
    "text": "That's kind of it. That's that's one of the cool features of it. And it's and it's it's very it's very explicit pressure program tells you whether or not you're gonna code word.",
    "start": "3090870",
    "end": "3103230"
  },
  {
    "text": "And and the decoding algorithm is equally equally simple.",
    "start": "3103230",
    "end": "3110330"
  },
  {
    "text": "All right. Now, I. I wanted to show you the binary case because because when that was my first question when I first saw the algorithm is how how is going to work on.",
    "start": "3110330",
    "end": "3131880"
  },
  {
    "text": "On binary string. So I've got it. I've got it here somewhere. I'm sure I can show I brought it with me.",
    "start": "3131880",
    "end": "3159640"
  },
  {
    "text": "No, oh, oh, here we go.",
    "start": "3159640",
    "end": "3172220"
  },
  {
    "text": "So. Let's yeah. Jason, I'm gonna ask you to zoom zoom in on here, here.",
    "start": "3172220",
    "end": "3178320"
  },
  {
    "text": "Here. I tried it with with back all binary codes of length seven.",
    "start": "3178320",
    "end": "3183420"
  },
  {
    "text": "So that's one hundred and twenty eight divided by 128.",
    "start": "3183420",
    "end": "3189030"
  },
  {
    "text": "Minus two divided by seven. So these are all the puzzle.",
    "start": "3189030",
    "end": "3194100"
  },
  {
    "text": "These are representatives of all this. Of all the different cycles that can occur on seven.",
    "start": "3194100",
    "end": "3200250"
  },
  {
    "text": "But I'm seven bit word. And and what what I wrote here in pencil is what the final answer is.",
    "start": "3200250",
    "end": "3207820"
  },
  {
    "text": "So, so so if you say if I give it zeros, zeros over the one, then it would shift it so that the one is first.",
    "start": "3207820",
    "end": "3216660"
  },
  {
    "text": "Here's the code word that you get. If you if you have these two ones in a row and he can.",
    "start": "3216660",
    "end": "3221789"
  },
  {
    "text": "Here's a case where I had one. A one. So Nick, not now here I wrote this is a two and a five.",
    "start": "3221790",
    "end": "3230970"
  },
  {
    "text": "This means that the that the basis there's there's a there's a group of size two and a group of size five.",
    "start": "3230970",
    "end": "3239619"
  },
  {
    "text": "And and sometimes that you know, sometimes I had a group of size four and a group of size three and that had two, two, two, two, two, two, three.",
    "start": "3239620",
    "end": "3249720"
  },
  {
    "text": "I had type two twos and a three. That was I was in this case. So anyway, I was I was trying to see what statistically what's how this algorithm performing and act and with seven.",
    "start": "3249720",
    "end": "3264500"
  },
  {
    "text": "It always finished of course in one round with seven because you divide by three at every time and seven over three is less than three.",
    "start": "3264500",
    "end": "3271680"
  },
  {
    "text": "So. So you're bound to finish in one round of what, one length of seven with nine.",
    "start": "3271680",
    "end": "3279569"
  },
  {
    "text": "There's like there's five hundred and twelve minus eight divided by nine possibilities.",
    "start": "3279570",
    "end": "3286020"
  },
  {
    "text": "And so it's like, you know, if I had the computer figure out what they all are. And I add in some of them took I took two rounds, but but that was kind of rare.",
    "start": "3286020",
    "end": "3296880"
  },
  {
    "text": "Now we're looking at that. I noticed that there's a completely different way to understand this one's algorithm, which turns out to actually be mathematically nicer.",
    "start": "3296880",
    "end": "3310990"
  },
  {
    "text": "But but but not so, not so good for the computer program.",
    "start": "3310990",
    "end": "3316200"
  },
  {
    "text": "And so that's so that's kind of cool.",
    "start": "3316200",
    "end": "3325170"
  },
  {
    "text": "The rule for four basins gives you a really easy way to to take any and any long cyclic word and factor it into it, into parts.",
    "start": "3325170",
    "end": "3336930"
  },
  {
    "text": "By looking at where you have where you have a greater than followed by less than or equal. That was my definition of a basin. So take any string and I have bass in here.",
    "start": "3336930",
    "end": "3347520"
  },
  {
    "text": "And then I have a range between that and I'm a basin and range and a bass. And so I took. So that's got sort of a unique way to factor out a word into sub words corresponding to the bass and range idea.",
    "start": "3347520",
    "end": "3360900"
  },
  {
    "text": "But there's another another rather different factorization that I call a range sequence factorization.",
    "start": "3360900",
    "end": "3373109"
  },
  {
    "text": "And that's an arranged sequence of length. K is is defined like this.",
    "start": "3373110",
    "end": "3380650"
  },
  {
    "text": "It's it has a greater then and then a whole bunch of less than R equals.",
    "start": "3380650",
    "end": "3388410"
  },
  {
    "text": "Until we finally get all the way to X, K minus one. So it's, it's a greater than. And then less than or equal. But.",
    "start": "3388410",
    "end": "3396600"
  },
  {
    "text": "But never. Only one greater than here. And now the claim is that you can also factor any cyclic set of numbers uniquely into range sequences.",
    "start": "3396600",
    "end": "3411840"
  },
  {
    "text": "This is has to be k grid and equal to. So for example, K equals two is just a case of one number being another K equals three is is what we saw.",
    "start": "3411840",
    "end": "3424220"
  },
  {
    "text": "So I graded this. What we saw before cake was four is greater than in.",
    "start": "3424220",
    "end": "3432070"
  },
  {
    "text": "Book but between two rings sequences. I don't know what the condition is.",
    "start": "3432070",
    "end": "3437100"
  },
  {
    "text": "So here's the hook.",
    "start": "3437100",
    "end": "3444200"
  },
  {
    "text": "Here's the setup. Suppose that I suppose that I have a bass in here and a bass in here.",
    "start": "3444200",
    "end": "3453660"
  },
  {
    "text": "And so this means that I have some sum greater than.",
    "start": "3453660",
    "end": "3459660"
  },
  {
    "text": "And then I have a less than at this point. And I have a greater that. And I have a less than or equal at this point. And now.",
    "start": "3459660",
    "end": "3469980"
  },
  {
    "text": "Now in between here, there is there there's various possibilities.",
    "start": "3469980",
    "end": "3477230"
  },
  {
    "text": "And I'm going to I suppose I have lots of less than equals.",
    "start": "3477230",
    "end": "3488280"
  },
  {
    "text": "Or I might have instead of six, I might have five, and then I have to greater than.",
    "start": "3488280",
    "end": "3494700"
  },
  {
    "text": "So these are the possibilities.",
    "start": "3494700",
    "end": "3502869"
  },
  {
    "text": "For all these possibilities, I want to show you how to fact factor the thing into range sequences instead of this was one basin.",
    "start": "3502870",
    "end": "3512030"
  },
  {
    "text": "But this is going to be greater than this is. These are all the possible. So in this case, I've got a rain sequence here.",
    "start": "3512030",
    "end": "3523299"
  },
  {
    "text": "Starting here in this case, I've got a rain sequence.",
    "start": "3523300",
    "end": "3530970"
  },
  {
    "text": "That starts. Here also in this case, I've got I've got this free range sequence and also this ring sequence.",
    "start": "3530970",
    "end": "3544790"
  },
  {
    "text": "This one is of length, too. Here I have the same thing again of lengths to to greater than all of these are arranged sequences on this side.",
    "start": "3544790",
    "end": "3559850"
  },
  {
    "text": "So. So. So what I'm saying is. Here is going to be a is going to this is this.",
    "start": "3559850",
    "end": "3571470"
  },
  {
    "text": "These two are are part of it. These two and these two new things.",
    "start": "3571470",
    "end": "3576690"
  },
  {
    "text": "So so I can throw in range sequences of size two and some.",
    "start": "3576690",
    "end": "3590079"
  },
  {
    "text": "It gives me another way to look at the whole pattern. If I view Eastman's algorithm in terms of this factorization,",
    "start": "3590080",
    "end": "3597240"
  },
  {
    "text": "it turns out that that that that the the elements that that survive according to",
    "start": "3597240",
    "end": "3604980"
  },
  {
    "text": "this factorization are exactly the ones that follow an odd and odd range sequence.",
    "start": "3604980",
    "end": "3614590"
  },
  {
    "text": "It's easy when you sit down and and and you have the radio off.",
    "start": "3614590",
    "end": "3620700"
  },
  {
    "text": "But you take my word for another another completely different way to describe Swan's algorithm is take your word and divided up it into range sequences.",
    "start": "3620700",
    "end": "3630460"
  },
  {
    "text": "There is exactly one way to factor it up in factories. It has a concatenation of range sequences.",
    "start": "3630460",
    "end": "3635849"
  },
  {
    "text": "And then you look at the range sequences that are odd length and. And you take. And you. And you. You put a boundary right at the end there of those of odd length.",
    "start": "3635850",
    "end": "3646829"
  },
  {
    "text": "And that's where that's worked. That's where you start, start, start the next phase.",
    "start": "3646830",
    "end": "3652800"
  },
  {
    "text": "At the end of our thing, idling. OK, so now what's the point of this?",
    "start": "3652800",
    "end": "3660930"
  },
  {
    "text": "The point is, I want I want to figure out what's the probability that I finish in one round?",
    "start": "3660930",
    "end": "3668849"
  },
  {
    "text": "Well, you see a lot of times that the whole the whole game is over.",
    "start": "3668850",
    "end": "3679040"
  },
  {
    "text": "Right. Right away at the beginning. And and so I wanted to I wanted to know mathematically how long how how common",
    "start": "3679040",
    "end": "3687520"
  },
  {
    "text": "it was that that Eastland's algorithm finishes without going into phase two.",
    "start": "3687520",
    "end": "3693760"
  },
  {
    "text": "And the fortunate thing was it has a beautiful answer.",
    "start": "3693760",
    "end": "3700070"
  },
  {
    "text": "And the mathematics is it is nice and not difficult. So, OK, so I'm going to come back I'm going to conclude by showing you that mathematics.",
    "start": "3700070",
    "end": "3710109"
  },
  {
    "text": "So first thing is I define F K of M, which is the number of Emmery range sequences of length.",
    "start": "3710110",
    "end": "3723340"
  },
  {
    "text": "K. Remember what I said, a rain sequence is something that starts with a greater than and then has and then has all less than a equals after.",
    "start": "3723340",
    "end": "3735290"
  },
  {
    "text": "So. So F K of M is the number M. So this means that M is greater than X zero, which is greater than X one,",
    "start": "3735290",
    "end": "3746990"
  },
  {
    "text": "and then that's less than or equal X two and so on, less than or equal X, K minus one, which is also less than M.",
    "start": "3746990",
    "end": "3754110"
  },
  {
    "text": "M is like the M is two. That means binary M is three, that means ternary and so on.",
    "start": "3754110",
    "end": "3760410"
  },
  {
    "text": "So for example, let's try M equals three.",
    "start": "3760410",
    "end": "3766079"
  },
  {
    "text": "So I have three greater than X euro than X one less than or equal to. OK. Less than three here. So I'm gonna, I'm gonna say.",
    "start": "3766080",
    "end": "3776220"
  },
  {
    "text": "Case one is that is X one equals zero.",
    "start": "3776220",
    "end": "3783270"
  },
  {
    "text": "So. So that means I have two choices. For example, it can be either one or two has to be between three and zero. So I have two choices.",
    "start": "3783270",
    "end": "3794099"
  },
  {
    "text": "Choices for X X zero. And then how many choices for X one through X, K minus one.",
    "start": "3794100",
    "end": "3800790"
  },
  {
    "text": "Let's try K equals six as an example. So this will be X five and three.",
    "start": "3800790",
    "end": "3807090"
  },
  {
    "text": "So I have to choose five numbers that are that are X one is zero.",
    "start": "3807090",
    "end": "3815400"
  },
  {
    "text": "So I have to choose four numbers that are either one or two.",
    "start": "3815400",
    "end": "3822329"
  },
  {
    "text": "So this is my choice of of of.",
    "start": "3822330",
    "end": "3831810"
  },
  {
    "text": "I have to do four things. Start starting starting from two.",
    "start": "3831810",
    "end": "3838560"
  },
  {
    "text": "That's two times three times four times five over four times. Three times two times. One is combinations with repetition. So.",
    "start": "3838560",
    "end": "3848340"
  },
  {
    "text": "So if X one equals one then I have one choice for X one and and I have one, two, three, four over four, three,",
    "start": "3848340",
    "end": "3859440"
  },
  {
    "text": "two, one choices four x two x three X for X five because I have a one here and a three here and these.",
    "start": "3859440",
    "end": "3872540"
  },
  {
    "text": "Oh I'm sorry. This is, this is sorry. This is less than or equal. So, so I could use zero one or two here so I'm sorry.",
    "start": "3872540",
    "end": "3878970"
  },
  {
    "text": "This should be three four or five six. And this should be two, three, four or five choices for the general of the general idea for f f K of M is in in case I should have called it case zero.",
    "start": "3878970",
    "end": "3907230"
  },
  {
    "text": "So if X one is equal to zero, that's called that case zero.",
    "start": "3907230",
    "end": "3912690"
  },
  {
    "text": "And it turns out there's K minus one times M plus K minus three, choose K minus one Wavves to do to do that with X with X one equals zero.",
    "start": "3912690",
    "end": "3923849"
  },
  {
    "text": "In case one is K minus one times M plus K minus three over K minus four over K minus one.",
    "start": "3923850",
    "end": "3933120"
  },
  {
    "text": "And in general this number keeps going down until we finally get the case M minus two,",
    "start": "3933120",
    "end": "3939840"
  },
  {
    "text": "which is the which is the last one possibility and that's K minus one times K minus one over three.",
    "start": "3939840",
    "end": "3947120"
  },
  {
    "text": "Nice one. So now I add add this all up and so f K of M is the sum of all these guys and this is equally K minus one times the sum of these,",
    "start": "3947120",
    "end": "3957660"
  },
  {
    "text": "which is M plus K minus to choose K.",
    "start": "3957660",
    "end": "3964049"
  },
  {
    "text": "And this is, this is a formula now. So, so did not. No. No. How many Emery ring sequences there are.",
    "start": "3964050",
    "end": "3973070"
  },
  {
    "text": "And I, and I want to figure out the probability that Eastman's algorithm terminates in one round.",
    "start": "3973070",
    "end": "3980070"
  },
  {
    "text": "That means that I haven't that I have even ran sequence, even rain sequence, even rain sequence, finally followed by exactly one odd ring sequence,",
    "start": "3980070",
    "end": "3988700"
  },
  {
    "text": "the number of AC click things for which it's going to solving in one run is equal to the number of ways to write an Emiri",
    "start": "3988700",
    "end": "3998339"
  },
  {
    "text": "string of digits so that if it starts up with even rain sequences and ends with one exactly when odd rain sequence.",
    "start": "3998340",
    "end": "4008360"
  },
  {
    "text": "One of the strange things about this is that if you put Kagle zero f zero of them is equal",
    "start": "4008360",
    "end": "4017360"
  },
  {
    "text": "to minus one because the binomial coefficient with zero is one and this is minus one.",
    "start": "4017360",
    "end": "4025310"
  },
  {
    "text": "That's a little bit weird because I know I'm counting how many things there are and it's supposed to not never be negative, but I didn't.",
    "start": "4025310",
    "end": "4035390"
  },
  {
    "text": "But this is. How many how many rain sequences are there of length? Zero. And so I was worried about my formula here, but it turned out that this is actually this was actually a blessing.",
    "start": "4035390",
    "end": "4048690"
  },
  {
    "text": "I'm very happy that this is minus one. And the reason is that if we if we try to if we if we unite and I try to do the counting,",
    "start": "4048690",
    "end": "4063380"
  },
  {
    "text": "what I'm trying to come in is the number of ways to take two. Let me let me let me ignore the M four. So I'll have EF two or EF four or F six or so and so and and I and I have any",
    "start": "4063380",
    "end": "4080440"
  },
  {
    "text": "number of these followed by EF three or EF five or seven or something like that.",
    "start": "4080440",
    "end": "4087349"
  },
  {
    "text": "And I'm trying to find all this is a regular expression for all the all the cases that finish in one pass.",
    "start": "4087350",
    "end": "4097810"
  },
  {
    "text": "And and so trying to count how many this is. And the answer is this is equal to one over, which is the coefficient of Zeder, the N in one one minus F to Z squared,",
    "start": "4097810",
    "end": "4112420"
  },
  {
    "text": "minus F for the fourth and so on, times F three Z cubed plus if five Z to the fifth and so on.",
    "start": "4112420",
    "end": "4126339"
  },
  {
    "text": "If I, if I multiply these power series of.",
    "start": "4126340",
    "end": "4138270"
  },
  {
    "text": "And I and I look at the coefficient of see to the end, I get exactly the number of N n length things that are going to finish in one round.",
    "start": "4138270",
    "end": "4146270"
  },
  {
    "text": "So here's the way it looks.",
    "start": "4146270",
    "end": "4157100"
  },
  {
    "text": "The generating function for. Oh, right.",
    "start": "4157100",
    "end": "4165470"
  },
  {
    "text": "So I have f f of F of M of Z.",
    "start": "4165470",
    "end": "4170509"
  },
  {
    "text": "It is is F zero M plus F one.",
    "start": "4170510",
    "end": "4176039"
  },
  {
    "text": "Am Z. And so on f two of them squared.",
    "start": "4176040",
    "end": "4183830"
  },
  {
    "text": "And then I get the even in odd parts of this f even even parts.",
    "start": "4183830",
    "end": "4190130"
  },
  {
    "text": "Is equal to one half F M of Z. Plus F, M, minus C, I, I just add together plugins C, minus C, and then all the odd odd cases go out and end up.",
    "start": "4190130",
    "end": "4205840"
  },
  {
    "text": "And similarly I get rid of the odd cases by some by this former.",
    "start": "4205840",
    "end": "4212400"
  },
  {
    "text": "And and since I knew that F, F, M of Z, that turned out to have a nice formula o m,",
    "start": "4212400",
    "end": "4222739"
  },
  {
    "text": "z minus one over one minus Z to the M because because of my formula for it.",
    "start": "4222740",
    "end": "4228820"
  },
  {
    "text": "So. So they all summarized here.",
    "start": "4228820",
    "end": "4236090"
  },
  {
    "text": "This is the generating function that the coefficient of Zeder, the N is the number of is the number of of of range sequences of given length.",
    "start": "4236090",
    "end": "4249139"
  },
  {
    "text": "If I plug in for example ternary there's, there's minus one of lank zero.",
    "start": "4249140",
    "end": "4255710"
  },
  {
    "text": "There's three of length, one eighth of length to unlink three none of length one, three of length two and so on.",
    "start": "4255710",
    "end": "4262280"
  },
  {
    "text": "And in general for General Emiri sequences, the formulas turn out to be look like this.",
    "start": "4262280",
    "end": "4270050"
  },
  {
    "text": "So I can get the odd ones and separate out the odd coefficients by by this trick of changing Z and minus.",
    "start": "4270050",
    "end": "4278239"
  },
  {
    "text": "We had it together and we have it here, then even ones come out this way. And so the it turns out then.",
    "start": "4278240",
    "end": "4291230"
  },
  {
    "text": "That I can find out exactly how many Emori sequences are going to finish in one round.",
    "start": "4291230",
    "end": "4297230"
  },
  {
    "text": "So when when the length is three, it's M cubed minus M over three, which is just just just right.",
    "start": "4297230",
    "end": "4304440"
  },
  {
    "text": "It's a total number of of of. A periodic sequences of black ice, three, similarily, four, five and so on, all these formulas come out very nice, but but four, four, nine.",
    "start": "4304440",
    "end": "4319630"
  },
  {
    "text": "I don't always fit. I don't always finish in one round. But it turned out the probability of going going to the next round is one minus one over.",
    "start": "4319630",
    "end": "4328900"
  },
  {
    "text": "I think it's M cubed minus one over two. So it's I'm almost always we finish the nine Kason in one run.",
    "start": "4328900",
    "end": "4338140"
  },
  {
    "text": "But the this, this generating function has a beautiful form. When you when you write it out, it turns out to simplify it to be one one plus M.C.",
    "start": "4338140",
    "end": "4350020"
  },
  {
    "text": "Times one minus Z of the M minus one minus NMC, times one plus, is he to the M.",
    "start": "4350020",
    "end": "4358820"
  },
  {
    "text": "And then you divide by the same thing, but put a plus sign here.",
    "start": "4358820",
    "end": "4364610"
  },
  {
    "text": "So so the same formula, but with plus signed in. So this this this very nice formula turns out to describe the behavior is easements algorithm one part.",
    "start": "4364610",
    "end": "4378270"
  },
  {
    "text": "OK, I tried to cover an awful lot in this lecture, but I'm ready for questions.",
    "start": "4378270",
    "end": "4385770"
  },
  {
    "text": "Tense, tense time is running late. The personal.",
    "start": "4385770",
    "end": "4397440"
  },
  {
    "text": "Yes. How did you hear about did. I've been getting about 10 a month.",
    "start": "4397440",
    "end": "4406380"
  },
  {
    "text": "Yeah, it it turns out that a lot of them come from the same people, once somebody finds out that I'm fallible, then they all of sudden they they they spot him everywhere.",
    "start": "4406380",
    "end": "4417210"
  },
  {
    "text": "But no, these are 10 good ones. I also get about 20 bad. I mean, there's there's a lot of people.",
    "start": "4417210",
    "end": "4425840"
  },
  {
    "text": "So if somebody says that they you know, that they didn't get it then.",
    "start": "4425840",
    "end": "4431510"
  },
  {
    "text": "And I think it was stated pretty obviously. Still, I I knew they were pretty motivated. So I still try to find a way to improve the wording so that so that other people aren't going to make that mistake, too.",
    "start": "4431510",
    "end": "4442960"
  },
  {
    "text": "But but but no, I got I get a lot of legitimate error mostly in the new material.",
    "start": "4442960",
    "end": "4449370"
  },
  {
    "text": "So if you can find this this farcical five B, which is going to go online maybe early next year,",
    "start": "4449370",
    "end": "4458610"
  },
  {
    "text": "it probably has more errors in it than than other things. So, you know, so I had like I just put the index in a month ago.",
    "start": "4458610",
    "end": "4467639"
  },
  {
    "text": "And so there were a bunch of errors there. Yes.",
    "start": "4467640",
    "end": "4475040"
  },
  {
    "text": "Big fan of your work. I haven't. I have. It took me a while to understand.",
    "start": "4475040",
    "end": "4480230"
  },
  {
    "text": "Analysis of algorithm in my class. So I wanted to ask you, out of all the huge body of work that you've written.",
    "start": "4480230",
    "end": "4487640"
  },
  {
    "text": "Which one is your favorite algorithm and why? And then also, I have another question. This is regarding your your book on literate programing.",
    "start": "4487640",
    "end": "4499340"
  },
  {
    "text": "And I feel is an excellent way to write programing. What do you think the future would be?",
    "start": "4499340",
    "end": "4505880"
  },
  {
    "text": "Which people write code like you were writing, or will it be written the way it is today?",
    "start": "4505880",
    "end": "4511159"
  },
  {
    "text": "I feel today the way it's written. It's it's it's very error prone and it's it should be more high level like like you described in your.",
    "start": "4511160",
    "end": "4521180"
  },
  {
    "text": "Yeah. No, I do think that the fact it's one to discover the beauties of the how how much better literate programing is in the other ways,",
    "start": "4521180",
    "end": "4532630"
  },
  {
    "text": "then then then it's hard to it's hard to go back. But I can't, I can't see that I'm going to get the world to change for the same reason that that I can't get the world changed.",
    "start": "4532630",
    "end": "4545350"
  },
  {
    "text": "Esperanto or Esperanto might be a much, much better language than than English, but it's just the English works well enough that I don't have to change.",
    "start": "4545350",
    "end": "4554010"
  },
  {
    "text": "So. So. So even though something else can be a lot better than what we have, what we have, if not totally broken.",
    "start": "4554010",
    "end": "4563130"
  },
  {
    "text": "And so, but, but I, you know, I like but I can imagine converting everybody to it.",
    "start": "4563130",
    "end": "4571639"
  },
  {
    "text": "Although if you know, if I if I were president, I could I could threaten people with with with some kind of disaster.",
    "start": "4571640",
    "end": "4580010"
  },
  {
    "text": "If they didn't do it, then they would then I could do it. And there are companies who who use it and they're successful.",
    "start": "4580010",
    "end": "4586260"
  },
  {
    "text": "But, you know, like my favorite algorithm, I can't cook. I refuse to say it's like saying, who's your favorite child? You know, things like that.",
    "start": "4586260",
    "end": "4596030"
  },
  {
    "text": "OK. So, like, so today she's lecture states in 12 minutes.",
    "start": "4596030",
    "end": "4602059"
  },
  {
    "text": "Thank you very much.",
    "start": "4602060",
    "end": "4618333"
  }
]