[
  {
    "start": "0",
    "end": "132000"
  },
  {
    "text": "Okay. Let's start guys. Okay. So our plan for today is to catch up.",
    "start": "5100",
    "end": "11895"
  },
  {
    "text": "So we're a little behind. So, uh, it's okay. So today, I want to talk about MDPs,",
    "start": "11895",
    "end": "17039"
  },
  {
    "text": "Markov decision processes, and my plan is to talk about that for the first hour. And then after that, I want to talk, uh,",
    "start": "17040",
    "end": "23580"
  },
  {
    "text": "for 10 minutes about the previous lecture. So remember, like we went over relaxations kind of quick,",
    "start": "23580",
    "end": "29160"
  },
  {
    "text": "so maybe we can go over that again. And then, the last 10 minutes I want to talk about the project and,",
    "start": "29160",
    "end": "34475"
  },
  {
    "text": "kind of the plan for the project, how we should think about it, this is coming up, so we should start talking about that.",
    "start": "34475",
    "end": "39780"
  },
  {
    "text": "So this is an optimistic plan, so, [LAUGHTER] uh, let's see how it goes with, this is the current plan.",
    "start": "39780",
    "end": "46010"
  },
  {
    "text": "Okay. All right. So. Okay, let's get into it. So Markov decision processes. So let's start with a question.",
    "start": "46010",
    "end": "52675"
  },
  {
    "text": "Um, let's actually do this just by hand, so you don't need to go to the website. So the question is, it's Friday night and you wanna go to Mountain View and you have a bunch of options but,",
    "start": "52675",
    "end": "62020"
  },
  {
    "text": "what, what you wanna do is you want to get to Mountain View with the least amount of time, okay? Which one of these modes of transportation would you use?",
    "start": "62020",
    "end": "69140"
  },
  {
    "text": "Like, how many of you would bike? No one would bike. A couple of you would bike.",
    "start": "69140",
    "end": "74630"
  },
  {
    "text": "How many of you would drive? This is, this is popular in Mountain View, would be good. Caltrainers? Some people would take Caltrain,",
    "start": "74630",
    "end": "82470"
  },
  {
    "text": "sounds good. Uber and Lyft? We have like a good like distribution. Fly? [LAUGHTER] Yes, yeah, a good number of you want to fly,",
    "start": "82470",
    "end": "90960"
  },
  {
    "text": "uh, as flying cars are becoming a thing, like this could be an option in the future. There are a lot of actually startups working on flying cars.",
    "start": "90960",
    "end": "98390"
  },
  {
    "text": "Um, but, but as you think about this problem like the way you think about it is, is there a bunch of uncertainties in the world,",
    "start": "98390",
    "end": "104710"
  },
  {
    "text": "like it's not necessarily a search problem, right. You could, you could bike and you can get a flat tire and you don't really know that right,",
    "start": "104710",
    "end": "110630"
  },
  {
    "text": "you have to kind of take that into account. If you're driving, there could be traffic. Uh, if you are taking the Caltrain,",
    "start": "110630",
    "end": "117100"
  },
  {
    "text": "there are all sorts of delays with the Caltrain, uh, and all sorts of other uncertainties that exist in the world and,",
    "start": "117100",
    "end": "122750"
  },
  {
    "text": "and you need to think about those. So it's not just a pure search problem where you pick your route and then you just go with it,",
    "start": "122750",
    "end": "128554"
  },
  {
    "text": "right, there are, there are things that can happen, uh, that can affect your decision. So, and that kind of takes us to Markov decision processes.",
    "start": "128555",
    "end": "135830"
  },
  {
    "start": "132000",
    "end": "225000"
  },
  {
    "text": "We talked about search problems, where everything was deterministic, and now you're talking about this next class of state-based functions,",
    "start": "135830",
    "end": "141940"
  },
  {
    "text": "which are Markov decision processes. And the idea of it is, you take actions but you might not actually end",
    "start": "141940",
    "end": "147740"
  },
  {
    "text": "up where you expected to because there is this nature around you and there's this world around you that's going to be uncertain and do stuff that you didn't expect, okay.",
    "start": "147740",
    "end": "155690"
  },
  {
    "text": "So, so, so far we've talked about search problems. The idea of it is you start with a state and then you take",
    "start": "155690",
    "end": "161930"
  },
  {
    "text": "an action and you deterministically end up in a new state. If you remember the successor function,",
    "start": "161930",
    "end": "167420"
  },
  {
    "text": "successor of S and A would always give us S prime, and we would deterministically end up in S prime.",
    "start": "167420",
    "end": "172460"
  },
  {
    "text": "So if you have like that graph up there, if you start in S and you decide to take this action one,",
    "start": "172460",
    "end": "178280"
  },
  {
    "text": "you're going to end up in A, like, there's no other option. But that's how you're gonna end up in it, okay.",
    "start": "178280",
    "end": "184310"
  },
  {
    "text": "Uh, and the solution to these search problems are these paths. So we have the sequence of actions because I know if I,",
    "start": "184310",
    "end": "190370"
  },
  {
    "text": "if I take action one, and action three, and action two, I know like what is the path that I'm going to end up at and that would be ideal, okay.",
    "start": "190370",
    "end": "197695"
  },
  {
    "text": "So when we think about Markov decision processes, that is the setting where we have uncertainty in the world and we need to take that into account.",
    "start": "197695",
    "end": "204579"
  },
  {
    "text": "So, so the idea of it is, you start in a state, you decide to take an action but then you can randomly end up in different states.",
    "start": "204580",
    "end": "211300"
  },
  {
    "text": "You can randomly end up in S_1 prime or S_2 prime. And again, because there's just so many other things",
    "start": "211300",
    "end": "216640"
  },
  {
    "text": "that are happening in the world and you need to, you need to worry about that randomness and make decisions based on that, okay.",
    "start": "216640",
    "end": "223190"
  },
  {
    "text": "And, and this actually comes up pretty much like every run- every application. So, uh, this comes up in robotics.",
    "start": "223190",
    "end": "229239"
  },
  {
    "start": "225000",
    "end": "648000"
  },
  {
    "text": "So for example, if you have a robot that wants to go and pick up an object, you decide on your strategy, everything is great,",
    "start": "229240",
    "end": "235020"
  },
  {
    "text": "but like when it comes to actually moving the robot and getting the robot to do the task like the actuators can fail,",
    "start": "235020",
    "end": "240235"
  },
  {
    "text": "or you might have all sorts of obstacles around you that you didn't think about. So there is uncertainty about the environment or",
    "start": "240235",
    "end": "245840"
  },
  {
    "text": "uncertainty about your model like your actuators that, that you didn't necessarily think about and in reality,",
    "start": "245840",
    "end": "251720"
  },
  {
    "text": "they are affecting your decisions and where you're ending up at. This comes up in other settings like resource allocation.",
    "start": "251720",
    "end": "257959"
  },
  {
    "text": "So in resource allocation, maybe you're deciding what to produce, what is the product you would want to produce and,",
    "start": "257960",
    "end": "263830"
  },
  {
    "text": "and that kind of depends on what is the customer demand and, and you might not have a good model of that and,",
    "start": "263830",
    "end": "268940"
  },
  {
    "text": "and that's uncertain, right? It really depends on what, what products customers want and what they don't.",
    "start": "268940",
    "end": "274400"
  },
  {
    "text": "And you might have a model but it's not gonna be like accurate and, and you need, you need to do resource allocation under",
    "start": "274400",
    "end": "280340"
  },
  {
    "text": "those assumptions of uncertainty about the world. Um, similar thing is in agriculture. So for example, you want to decide, uh,",
    "start": "280340",
    "end": "287435"
  },
  {
    "text": "what sort of, uh, what, what to plant but, but again, you might not be sure about the weather,",
    "start": "287435",
    "end": "293585"
  },
  {
    "text": "if it's gonna rain or if the, if the, the crops are going to yield or not. So there's a lot of uncertainty in these decisions that we make and,",
    "start": "293585",
    "end": "300770"
  },
  {
    "text": "and they make these problems to, to go beyond search problems and become problems where, where we have uncertainty and we need to make decisions under uncertainty.",
    "start": "300770",
    "end": "308870"
  },
  {
    "text": "Okay? All right. So let's take another example. So this is a volcano crossing example.",
    "start": "308870",
    "end": "315380"
  },
  {
    "text": "So, so we have an island and we're on one side of the island and what we wanna do, so we are in that black square over there.",
    "start": "315380",
    "end": "321280"
  },
  {
    "text": "And what we wanna do is, you want to go from this black square to this side of the island and here we have the scenic view and that's gonna give us a lot of reward and happiness.",
    "start": "321280",
    "end": "329840"
  },
  {
    "text": "So, so my goal is to go from one side of the island to the other side of the island. But the caveat here is that there's",
    "start": "329840",
    "end": "335690"
  },
  {
    "text": "this volcano in the middle of the island that I need to actually pass, okay. So, and, and if I fall into the volcano,",
    "start": "335690",
    "end": "341425"
  },
  {
    "text": "I'm going to get a minus 50 reward, more like minus infinity. But, but for this example like imagine you are getting a minus 50 reward if,",
    "start": "341425",
    "end": "349490"
  },
  {
    "text": "if you fall into the volcano, okay. So. All right. So, so, if I have this link here in this side,",
    "start": "349490",
    "end": "356835"
  },
  {
    "text": "so if my slip probability is 0 which is- I'm sure I'm not gonna fall into the volcano,",
    "start": "356835",
    "end": "363199"
  },
  {
    "text": "should I cross the island? No or yes?",
    "start": "363200",
    "end": "368655"
  },
  {
    "text": "Well, I should cross the island uh, because I'm not gonna fall, right, like I'm, I'm not gonna fall into that minus 50.",
    "start": "368655",
    "end": "374520"
  },
  {
    "text": "Uh, slip probability is 0, I'll get to my 20 reward, everything will be great, okay.",
    "start": "374520",
    "end": "380500"
  },
  {
    "text": "But the thing is like we've been talking about how the world is, is stochastic and slip probability is not gonna be 0.",
    "start": "380500",
    "end": "386585"
  },
  {
    "text": "Maybe, maybe it's 10%. So if there's 10% chance of falling to, into the volcano, how many of you would,",
    "start": "386585",
    "end": "392375"
  },
  {
    "text": "would still cross the island? Good number, yeah. So, um, the optimal solution is actually shown by these arrows here.",
    "start": "392375",
    "end": "401375"
  },
  {
    "text": "And yes, the optimal solution is still to cross the island. Like your value here,",
    "start": "401375",
    "end": "406460"
  },
  {
    "text": "we're going to talk about all these terms, but the value here is basically the value you're gonna get, uh, at the beginning like state which is the,",
    "start": "406460",
    "end": "413044"
  },
  {
    "text": "kind of- we'll, we'll talk about it, it's the expected utility that you're gonna get. It's gonna go down because there is some probability that you're going to fall into a volcano,",
    "start": "413045",
    "end": "420258"
  },
  {
    "text": "but still like the best thing to do is to cross the island. How about 20%? How many of you would do it with 20%?",
    "start": "420259",
    "end": "427405"
  },
  {
    "text": "Some number of people, [LAUGHTER] it's less. Um, still turns out that the optimal strategy is to cross.",
    "start": "427405",
    "end": "435215"
  },
  {
    "text": "30% percent? One person. [LAUGHTER] So with 30%,",
    "start": "435215",
    "end": "441390"
  },
  {
    "text": "that's actually the point that you kind of you'd rather not, not cross because there's this volcano and then with a large probability you could,",
    "start": "441390",
    "end": "448870"
  },
  {
    "text": "you could fall into the volcano and the value is going to go down. Okay. So these are the types of problems we're gonna,",
    "start": "448870",
    "end": "454465"
  },
  {
    "text": "we're gonna work with. Yes. The value like with respect to two because two is like what you can do with them.",
    "start": "454465",
    "end": "459540"
  },
  {
    "text": "So two is like the value- the reward that you are going to get at, at that state, and then value you compute that you propagated back.",
    "start": "459540",
    "end": "465900"
  },
  {
    "text": "We'll talk about that in details on, on how to compute the value, [NOISE] okay? [NOISE] All right. Okay. So that was just an example.",
    "start": "465900",
    "end": "473175"
  },
  {
    "text": "So, so that was an example of a Markov Decision Process. What we wanna do in this lecture, is we are going to, like, again, model these, er,",
    "start": "473175",
    "end": "479700"
  },
  {
    "text": "types of systems as Markov decision processes, then you are going to talk about inference type algorithms.",
    "start": "479700",
    "end": "485130"
  },
  {
    "text": "So how do we do inference? How do we come up with this best strategy path? Um, and in the middle, I'm going to talk about policy evaluation,",
    "start": "485130",
    "end": "492090"
  },
  {
    "text": "which is not an inference algorithm but it's kind of a step towards it. And it's basically this idea,",
    "start": "492090",
    "end": "497294"
  },
  {
    "text": "if someone tells me this is a policy, can I evaluate how good it is? And then we'll talk about value iteration which tries to figure out",
    "start": "497295",
    "end": "504300"
  },
  {
    "text": "what is the best policy that I can take, okay? So that's the plan for today. Then next lecture we're going to talk about",
    "start": "504300",
    "end": "510479"
  },
  {
    "text": "reinforcement learning where we don't actually know what the reward is, and we don't know what the- where the transitions are.",
    "start": "510480",
    "end": "516270"
  },
  {
    "text": "Uh, so, so that's kind of the learning part of- part of these, er, MDP lectures. So Rita is going to actually do the- do the lecture next,",
    "start": "516270",
    "end": "523289"
  },
  {
    "text": "next- on, on Wednesday, right? Okay. So let's get into- let's get into Markov decision processes.",
    "start": "523290",
    "end": "529485"
  },
  {
    "text": "So we have a bunch of examples throughout this lecture, so this is kind of another example. So all right so actually I do need volunteers for this.",
    "start": "529485",
    "end": "537030"
  },
  {
    "text": "So in this example, uh, we have a bunch of rounds, and the idea is you can at any point in time,",
    "start": "537030",
    "end": "543480"
  },
  {
    "text": "you can choose two actions. You can either stay or you can quit, okay? If you decide to quit,",
    "start": "543480",
    "end": "548970"
  },
  {
    "text": "[NOISE] I'm going to give you $10, I'm, uh, actually I'm not going to give you $10, but imagine I'm gonna give you $10 [NOISE],",
    "start": "548970",
    "end": "555120"
  },
  {
    "text": "and then we'll end the game, okay? And then if you decide to stay, then you're gonna get $4 and then I'll roll the dice.",
    "start": "555120",
    "end": "561975"
  },
  {
    "text": "If I get one or two, we'll end the game [NOISE]. Otherwise, you're going to continue to the next round,",
    "start": "561975",
    "end": "567270"
  },
  {
    "text": "and you can decide again, okay? So who wants to play with this? Okay. All right. Volunteer. Do you want to stay or quit?",
    "start": "567270",
    "end": "574875"
  },
  {
    "text": "Quit. [LAUGHTER] [LAUGHTER] so that was easy. You got your $10. [LAUGHTER]",
    "start": "574875",
    "end": "580320"
  },
  {
    "text": "Does anyone else want to play? Stay, stay again.",
    "start": "580320",
    "end": "589050"
  },
  {
    "text": "Oh, you've got 8, $8. Sorry. [LAUGHTER]. The dice is still. Um, so you kind of get the idea here, right?",
    "start": "589050",
    "end": "596070"
  },
  {
    "text": "So, so you have these actions and then with one of them, like if you decide to quit, you deterministically you will get your $10 and you're done.",
    "start": "596070",
    "end": "602910"
  },
  {
    "text": "Uh, with the other one, it's, it's probabilistic and you kind of wanna see which one is better and what,",
    "start": "602910",
    "end": "608580"
  },
  {
    "text": "what would be the best policy to take in this setting. So we'll come back to this question. We will formalize this, and, and we'll go over this.",
    "start": "608580",
    "end": "615555"
  },
  {
    "text": "I have a question. Is like, I think I see a similar example. Is it better to always, like, just continue once and then quit?",
    "start": "615555",
    "end": "621795"
  },
  {
    "text": "Like, isn't it better to switch or? So when, when not. Okay so, so then you need to actually compute what is the-",
    "start": "621795",
    "end": "627880"
  },
  {
    "text": "Yeah. -expected utility, right? So- and that's what we wanna do, right? So, so [NOISE] you might say, \"Oh, I wanna, I wanna stay and then I get my $4,",
    "start": "627880",
    "end": "634410"
  },
  {
    "text": "and then I want to quit and then I get 14, and maybe that is the way to go. Um, that could be a strategy, but for doing that, right?",
    "start": "634410",
    "end": "640740"
  },
  {
    "text": "Like we are going to actually talk about that. For doing that, we are going to define what would be the optimal policy.",
    "start": "640740",
    "end": "645855"
  },
  {
    "text": "One other thing that, uh, for this particular problem, you're going to keep in mind is,",
    "start": "645855",
    "end": "650865"
  },
  {
    "start": "648000",
    "end": "1126000"
  },
  {
    "text": "I'll, I'll talk about it when, when I define a policy. But, but the policy the way we, we define it is it's a function of state.",
    "start": "650865",
    "end": "657030"
  },
  {
    "text": "So if you decide to stay, that is your policy. If you decide to not stay, that is your policy. Like, you're not allowing switching right now.",
    "start": "657030",
    "end": "663510"
  },
  {
    "text": "Like, as I talk about this later in the lecture. But, but I'll come back to this problem, okay? So if you- if you decide that your policy,",
    "start": "663510",
    "end": "670560"
  },
  {
    "text": "the thing you want to do is to just stay. Uh, keep staying, this is the probability of,",
    "start": "670560",
    "end": "676335"
  },
  {
    "text": "like, the total rewards that you are gonna get. So you're gonna get four with some probability. And then if you're lucky, you're gonna get 8.",
    "start": "676335",
    "end": "682830"
  },
  {
    "text": "And then even if you're luckier, you're gonna get 12, and if you're luckier, you're gonna get 16. But, but the probabilities are going to come down pretty much like really quickly.",
    "start": "682830",
    "end": "692130"
  },
  {
    "text": "So the thing we care about in this setting, is, is the expected utility, right? In expectation, like if I- if I- if I run this,",
    "start": "692130",
    "end": "699990"
  },
  {
    "text": "and if I average all of these possible paths that I can do, what would be the value that I get? And for this particular problem,",
    "start": "699990",
    "end": "706170"
  },
  {
    "text": "it turns out that in expectation if you decide to stay, you should get 12. So, so you got really unlucky that you got 8.",
    "start": "706170",
    "end": "712665"
  },
  {
    "text": "But [LAUGHTER], but in general, in expectation, you should decide to stay, okay? And, and we actually want to spend a little bit of time in",
    "start": "712665",
    "end": "718860"
  },
  {
    "text": "this lecture thinking about how we get that 12, and and how to go about computing this expected utility.",
    "start": "718860",
    "end": "724589"
  },
  {
    "text": "And, and based on that, how to decide what policy to use, right? Okay. And then if you decide to,",
    "start": "724590",
    "end": "731430"
  },
  {
    "text": "to quit, then, then expected utility there is kind of obvious, right? Because that, that, you're quitting and",
    "start": "731430",
    "end": "736769"
  },
  {
    "text": "that's with probability of 1 you're getting $10, so you're just gonna get $10 and that is the expected utility of quitting. Yes.",
    "start": "736770",
    "end": "744089"
  },
  {
    "text": "[inaudible]. [NOISE] Uh, [NOISE] so, so when you- when I say- when you roll a die,",
    "start": "744090",
    "end": "753225"
  },
  {
    "text": "I said if you get one or two- You stay. You, you, you, stay, yeah. And then if you get the other,",
    "start": "753225",
    "end": "758940"
  },
  {
    "text": "so the two-thirds of it, you continue. So, so it's a one-third, two-third comes from there, okay?",
    "start": "758940",
    "end": "764205"
  },
  {
    "text": "All right. I'll, I'll come back [NOISE] to this example. This is actually the, the running example throughout this lecture [NOISE], okay? So [NOISE].",
    "start": "764205",
    "end": "771060"
  },
  {
    "text": "[inaudible] so how are you able to do this calculation? We're going to talk about that next.",
    "start": "771060",
    "end": "777270"
  },
  {
    "text": "That is what the lecture is about. Okay. So let's, let's actually, uh- I do wanna finish it in an hour, that's why maybe I'm rushing things a little bit.",
    "start": "777270",
    "end": "783780"
  },
  {
    "text": "But we are going to talk about this problem like throughout the class. So, so don't worry about it. If it's not clear at the end of it,",
    "start": "783780",
    "end": "789269"
  },
  {
    "text": "we can clarify things, okay? All right. So I do want to formalize this problem. The way I want to [NOISE] formalize this problem is, er, using an MDP.",
    "start": "789270",
    "end": "797415"
  },
  {
    "text": "So I wanna- I wanna formalize this as a ma- as a Markov decision process. Maybe I can [NOISE] just use this [NOISE].",
    "start": "797415",
    "end": "806550"
  },
  {
    "text": "So in Markov decision processes, similar to search problems, you're going to have states. So in this particular game,",
    "start": "806550",
    "end": "813000"
  },
  {
    "text": "I'm going to have two states. I'm either in the game [NOISE] or I'm out of the game.",
    "start": "813000",
    "end": "818655"
  },
  {
    "text": "So I'm in an end state where everything [NOISE] we ended you're out of the game, you're done, okay?",
    "start": "818655",
    "end": "825060"
  },
  {
    "text": "So, so those are my states. Then, um, when I'm in these states, I'm in each of these states, I can take an action.",
    "start": "825060",
    "end": "831660"
  },
  {
    "text": "And if I'm in an end state, I can take two actions, right? I can either decide to stay [NOISE], right?",
    "start": "831660",
    "end": "840570"
  },
  {
    "text": "Or I can quit [NOISE], okay? And if I, if I decide to stay,",
    "start": "840570",
    "end": "848850"
  },
  {
    "text": "from in state, that takes me to something that I'm [NOISE] going to call a chance node.",
    "start": "848850",
    "end": "854685"
  },
  {
    "text": "So a chance node is a node that represents a state and action.",
    "start": "854685",
    "end": "859815"
  },
  {
    "text": "So it's not really like, like the blue things are my states, but I'm creating this chance nodes as a way of kind of going through this example,",
    "start": "859815",
    "end": "866595"
  },
  {
    "text": "to, to see where things are going. So, so the- these blue states [NOISE] are going to be my states.",
    "start": "866595",
    "end": "873465"
  },
  {
    "text": "I'm in S. These chance nodes are over state and action. So basically, this node tells me that I started [NOISE] with in,",
    "start": "873465",
    "end": "881699"
  },
  {
    "text": "and I decided to stay, okay? And the chance node here, basically tells me that I started with in,",
    "start": "881700",
    "end": "889020"
  },
  {
    "text": "and I decided to quit [NOISE], okay? Yes.",
    "start": "889020",
    "end": "894255"
  },
  {
    "text": "Why do we still call it a chance node even though it's deterministically? So I deterministically go through it,",
    "start": "894255",
    "end": "899459"
  },
  {
    "text": "but then from the chance node that's where I'm introducing the probabilities. So from the chance node I can like",
    "start": "899460",
    "end": "904949"
  },
  {
    "text": "probablistically end up in the- these different states. In the case of quit, it's also deterministic. In the case of the quit in this case it's deterministic.",
    "start": "904950",
    "end": "911970"
  },
  {
    "text": "Yeah. So in the case of the quit, we say [NOISE] with probability 1 [NOISE], I'm going to end up in this end state. So I am going to draw that with the no- with the- with the edge",
    "start": "911970",
    "end": "919319"
  },
  {
    "text": "that comes from my chance node, and I'm gonna say, with probability of 1 [NOISE], I'm going to get $10 [NOISE] and just be done, okay?",
    "start": "919320",
    "end": "928110"
  },
  {
    "text": "But if you are in this state, this is actually the state where interesting things can happen with probability two-thirds,",
    "start": "928110",
    "end": "935149"
  },
  {
    "text": "I'm going to go back to [NOISE] in, and get $4,",
    "start": "935150",
    "end": "940815"
  },
  {
    "text": "or with probability one-third, I'm going to end up in end,",
    "start": "940815",
    "end": "947265"
  },
  {
    "text": "and, and do I get still 4, $4 [NOISE] , okay? So, so that is my Markov decision process.",
    "start": "947265",
    "end": "955460"
  },
  {
    "text": "So, so I had maybe we can keep track of a list of things we are defining in this lecture.",
    "start": "955460",
    "end": "960740"
  },
  {
    "text": "So we just defined states [NOISE], and then we said well, we're gonna have these chance nodes [NOISE]",
    "start": "960740",
    "end": "966590"
  },
  {
    "text": "because from these chance nodes probabliistically, we're going to come out of them depending on what happens in nature, right?",
    "start": "966590",
    "end": "972390"
  },
  {
    "text": "Like I end up- this is the decision I've made, now nature kind of decides which one you're going to end up at,",
    "start": "972390",
    "end": "978230"
  },
  {
    "text": "and, and based on that we, we move forward, okay? All right. So, so more formally,",
    "start": "978230",
    "end": "984815"
  },
  {
    "text": "we had a bunch of things when we define an MDP. Similar to search problems, we- like we, we now need to define the same set of things.",
    "start": "984815",
    "end": "991850"
  },
  {
    "text": "So, so we have a set of states. In this case my states are in and end, okay?",
    "start": "991850",
    "end": "997435"
  },
  {
    "text": "We have a start state. I'm starting with in. So that's my start state. I have actions as a function of states.",
    "start": "997435",
    "end": "1004944"
  },
  {
    "text": "So when I ask what are the actions of the state, my actions are going to be stay or quit.",
    "start": "1004945",
    "end": "1010795"
  },
  {
    "text": "What are actions of end? I don't have anything, great, end state doesn't have any actions that come out of it.",
    "start": "1010795",
    "end": "1017710"
  },
  {
    "text": "And then we have these transition probabilities. So transition probabilities more formally,",
    "start": "1017710",
    "end": "1023230"
  },
  {
    "text": "take a state, an action, and, and a new state. So S, A, S prime,",
    "start": "1023230",
    "end": "1029790"
  },
  {
    "text": "and tell me what is the transition probability of that, it's one-third in this case. And then I have a reward which tells me how much was that rewarding,",
    "start": "1029790",
    "end": "1037740"
  },
  {
    "text": "that was $4, okay? So, so I'm defining- so when I'm defining my MDP,",
    "start": "1037740",
    "end": "1043400"
  },
  {
    "text": "kind of the new things I'm defining is this transition probability, which tells me if you're in state S,",
    "start": "1043400",
    "end": "1049240"
  },
  {
    "text": "and take action A, and you end up in S prime. What is the probability of that? I'm in in, I decide to stay,",
    "start": "1049240",
    "end": "1056244"
  },
  {
    "text": "and then end up in end. What's the probability of that? That's one-third. Maybe I'm in in, I decide to quit,",
    "start": "1056244",
    "end": "1062920"
  },
  {
    "text": "I end up in end. What's the probability of that? It's equal to 1, okay? And then over the same state action state primes,",
    "start": "1062920",
    "end": "1071320"
  },
  {
    "text": "like next states we are going to end up at, we're going to define a reward [NOISE] which tells me how much money did I get?",
    "start": "1071320",
    "end": "1077665"
  },
  {
    "text": "Or like how, how good was that. So it was $4 in this case. Or, or if I decide to quit,",
    "start": "1077665",
    "end": "1083500"
  },
  {
    "text": "I got $10, okay? Um, and if you remember in the case of search problems,",
    "start": "1083500",
    "end": "1089600"
  },
  {
    "text": "we're talking about cost. I'm just flipping the sign here, we wanted to minimize cost. Here we want to maximize the reward just a more optimistic view of the world I guess.",
    "start": "1089600",
    "end": "1098140"
  },
  {
    "text": "Um, so, so that is what the rewards are going to be defined, okay? We also have this as end function,",
    "start": "1098140",
    "end": "1105075"
  },
  {
    "text": "which again similar to search problems just checks if you're in an end state or not. And in addition to that,",
    "start": "1105075",
    "end": "1110919"
  },
  {
    "text": "we have something that's called a discount factor. It's, it's this value Gamma [NOISE] which is between 0 and 1.",
    "start": "1110920",
    "end": "1118049"
  },
  {
    "text": "And I'll talk [NOISE] about this later don't worry about [NOISE] it right now. But it's a thing to define for our search pro- er, for our MDPs, okay?",
    "start": "1118050",
    "end": "1127175"
  },
  {
    "start": "1126000",
    "end": "1173000"
  },
  {
    "text": "All right. So how do I compare this with search? Again, these were the things that we had in a search problem.",
    "start": "1127175",
    "end": "1133900"
  },
  {
    "text": "We had the successor function that would deterministically take me to S prime and we had this cost function that would tell me what was the cost",
    "start": "1133900",
    "end": "1141010"
  },
  {
    "text": "of being in state S and taking action A. So, so the major things that are changed is that instead of the successor function,",
    "start": "1141010",
    "end": "1147485"
  },
  {
    "text": "I have transition probabilities these T's, that, that basically tell me what's the probability of starting in S,",
    "start": "1147485",
    "end": "1153549"
  },
  {
    "text": "taking action A, and ending up in S prime. And then the cost just became reward, okay? So, so those are kind of the major differences between search and MDP.",
    "start": "1153550",
    "end": "1162100"
  },
  {
    "text": "Because things are- things are not deterministic here [NOISE], okay? All right, so, so that was the formalism.",
    "start": "1162100",
    "end": "1169230"
  },
  {
    "text": "Now, now I can define any, any MDP model- any Markov Decision Process.",
    "start": "1169230",
    "end": "1174720"
  },
  {
    "start": "1173000",
    "end": "1245000"
  },
  {
    "text": "And then one thing- just one thing to point out is this transition probability is this t,",
    "start": "1174720",
    "end": "1179804"
  },
  {
    "text": "basically specifies the probability of ending up in state S prime if you take action A in state S. So,",
    "start": "1179805",
    "end": "1187230"
  },
  {
    "text": "so these are probabilities, right? So, so for example again, like we have done this example but let's just do it on the slides again,",
    "start": "1187230",
    "end": "1194490"
  },
  {
    "text": "if I'm in state in, I take action quit, I end up in end, what's the probability of that?",
    "start": "1194490",
    "end": "1200505"
  },
  {
    "text": "1. And then if I'm in state in, I take action stay, I end up in state in again,",
    "start": "1200505",
    "end": "1207794"
  },
  {
    "text": "what's the probability of that? I end up in again, two-thirds.",
    "start": "1207795",
    "end": "1212940"
  },
  {
    "text": "And then if I'm state in, I take action stay, I end up in end, what is the probability of that?",
    "start": "1212940",
    "end": "1218595"
  },
  {
    "text": "One-third, okay? And then these are probabilities. So what that means is they need to kind of add up to 1, but one thing to notice is well,",
    "start": "1218595",
    "end": "1228105"
  },
  {
    "text": "just what is going to add up to 1? Like, like all of the things in the column are not going to add up to 1. The thing that's going to add up to 1is if you consider",
    "start": "1228105",
    "end": "1235424"
  },
  {
    "text": "all possible these- different s primes that you're going to end up at, those probabilities are going to add up to 1.",
    "start": "1235425",
    "end": "1242220"
  },
  {
    "text": "So, so if you look at this, this sta- stable again, if you look at deciding and being stay in and taking action stay,",
    "start": "1242220",
    "end": "1251879"
  },
  {
    "start": "1245000",
    "end": "1768000"
  },
  {
    "text": "then the probabilities that, that we have for different s primes are two-thirds and one third, and those two are the things that are going to add up to 1.",
    "start": "1251879",
    "end": "1259530"
  },
  {
    "text": "And in the first case, if you're in stay in and you decide to quit, then wherever- whatever s primes you're gonna end up at,",
    "start": "1259530",
    "end": "1266280"
  },
  {
    "text": "in this case, it's just the end state, those probabilities are going to add up to 1. So, so more formally what that means is,",
    "start": "1266280",
    "end": "1272265"
  },
  {
    "text": "if I'm summing over s primes, these new states that I'm going to end up at, the transition probabilities need to add up to 1.",
    "start": "1272265",
    "end": "1279585"
  },
  {
    "text": "Okay, because they're basically probabilities that tell me what are the- what are the things that can happen if I take an action, okay?",
    "start": "1279585",
    "end": "1287620"
  },
  {
    "text": "And then these transition probabilities are going to be non-negative because they are probabilities.",
    "start": "1287720",
    "end": "1294345"
  },
  {
    "text": "So that's also another property, okay? So usual six. All right.",
    "start": "1294345",
    "end": "1301365"
  },
  {
    "text": "So, so that's a search problem. Let's actually formalize another search problem. This is- let's actually try to code this up.",
    "start": "1301365",
    "end": "1307515"
  },
  {
    "text": "So what is a search problem? This is the tram problem. So remember the tram problem.",
    "start": "1307515",
    "end": "1312975"
  },
  {
    "text": "I have blocks 1 through n. What I wanna do is I have two possible actions,",
    "start": "1312975",
    "end": "1318630"
  },
  {
    "text": "I can either walk from state S to a state S plus 1. Or I can take the magic tram that takes me from state S to state 2S.",
    "start": "1318630",
    "end": "1326684"
  },
  {
    "text": "If I walk, that costs one minute, okay? Means reward of that is minus 1.",
    "start": "1326685",
    "end": "1332940"
  },
  {
    "text": "If I, if I take the tram that costs two minutes, that means that the reward of that is minus 2, okay?",
    "start": "1332940",
    "end": "1339570"
  },
  {
    "text": "And then the question was how- like how do we want to travel from, from 1 to n in the least amount of time?",
    "start": "1339570",
    "end": "1346650"
  },
  {
    "text": "So, so nothing here is, is probabilistic yet, right? So I'm going to add an extra thing here which says",
    "start": "1346650",
    "end": "1352830"
  },
  {
    "text": "the tram is going to fail with probability 0.5. So I'm going to decide maybe you take,",
    "start": "1352830",
    "end": "1358530"
  },
  {
    "text": "take a tram at some point and that tram can, can fail with probability 0.5. If it fails, I end up in my state, like I don't go anywhere.",
    "start": "1358530",
    "end": "1365565"
  },
  {
    "text": "And, and actually like in this case, you're assuming you're still losing two minutes. So if I decide to take a tram,",
    "start": "1365565",
    "end": "1371400"
  },
  {
    "text": "I'm gonna lose two minutes, maybe you'll fail, maybe we will not, okay? All right.",
    "start": "1371400",
    "end": "1377250"
  },
  {
    "text": "So let's try to formalize this. So we're gonna take our tram problem from two lectures ago.",
    "start": "1377250",
    "end": "1384075"
  },
  {
    "text": "So this is from search one. We're gonna just copy that. So all right.",
    "start": "1384075",
    "end": "1392385"
  },
  {
    "text": "So this was what we had from last time. You had this transportation problem and we had all of these algorithms to solve the search problem.",
    "start": "1392385",
    "end": "1399570"
  },
  {
    "text": "You don't really need them because we have a new problem so let's just get rid of them. And now I just want to formalize an MDP.",
    "start": "1399570",
    "end": "1406845"
  },
  {
    "text": "So, so it's a transportation MDP, okay? The initialization looks okay.",
    "start": "1406845",
    "end": "1412275"
  },
  {
    "text": "Start state looks okay. I'm starting from 1, this end looks okay. So the thing I'm going to change is the- first off I need to add this actions function.",
    "start": "1412275",
    "end": "1422264"
  },
  {
    "text": "Okay? So what would actions do? It's going to return a list of actions that are our potential actions in a given state.",
    "start": "1422265",
    "end": "1431205"
  },
  {
    "text": "So I just copy pasted stuff from down there to just edit. So it's going to return a list of valid actions.",
    "start": "1431205",
    "end": "1439235"
  },
  {
    "text": "Okay? So what are the valid actions I can take? I can either walk or I can tram.",
    "start": "1439235",
    "end": "1445070"
  },
  {
    "text": "So I'm going to remove all these extra things that I had from before and just keep it to be I'm either walking or I'm taking the tram, okay?",
    "start": "1445070",
    "end": "1452250"
  },
  {
    "text": "As long as it's a valid state. So, so that looks right for actions. The other thing we had was a successor and cost function.",
    "start": "1452250",
    "end": "1460575"
  },
  {
    "text": "So, so now we want to just change that and return these transition probabilities and end reward.",
    "start": "1460575",
    "end": "1466080"
  },
  {
    "text": "So, so it's basically the successor probabilities and reward. Okay? So I'm putting those",
    "start": "1466080",
    "end": "1472230"
  },
  {
    "text": "two together, similar to before we had successor and cost. Now I'm returning probabilities and reward. Okay? So what this function is going to",
    "start": "1472230",
    "end": "1479610"
  },
  {
    "text": "return is it's going to return this new status S prime, I'm going to end up at and the probability value for that and reward of that.",
    "start": "1479610",
    "end": "1486720"
  },
  {
    "text": "Okay? So, so given that I'm starting in state S and I'm taking action A, then what are the potential S primes that I can end",
    "start": "1486720",
    "end": "1494730"
  },
  {
    "text": "up at and what are the probabilities of that? Then what, what is T of SAS prime and what is the reward of that?",
    "start": "1494730",
    "end": "1501644"
  },
  {
    "text": "What is the reward of SAS prime? I want to have a function that just returns these so I can call it later.",
    "start": "1501645",
    "end": "1507284"
  },
  {
    "text": "Okay? All right.",
    "start": "1507285",
    "end": "1512650"
  },
  {
    "text": "So I need to basically check like for,",
    "start": "1514190",
    "end": "1519539"
  },
  {
    "text": "for each one of these actions, I can for, for action walk. What happens for action walk?",
    "start": "1519540",
    "end": "1525885"
  },
  {
    "text": "What's the new state I'm going to end up at? Well, I'm going to end up at S plus 1.",
    "start": "1525885",
    "end": "1531945"
  },
  {
    "text": "It's a deterministic action. So I'm going to end up there with probability 1 and what's the reward of that?",
    "start": "1531945",
    "end": "1538035"
  },
  {
    "text": "Minus 1 because it's one minute cost, so it's minus 1 reward.",
    "start": "1538035",
    "end": "1543480"
  },
  {
    "text": "Then for action tram, we kind of do the same thing but we have two options here.",
    "start": "1543480",
    "end": "1548745"
  },
  {
    "text": "I can- I can end up in 2S. Tram doesn't fail, I end up in 2S. The probability 0.5 that cause- that reward of that is minus",
    "start": "1548745",
    "end": "1556980"
  },
  {
    "text": "2 or the other option is I'm going to end up in state S because I didn't go anywhere because we had probability of 0.5, the tram did fail.",
    "start": "1556980",
    "end": "1565710"
  },
  {
    "text": "And that, that- the reward of that is minus 2. And that's pretty much it. That, that is my, my MDP.",
    "start": "1565710",
    "end": "1572925"
  },
  {
    "text": "So I can just define this for a city with let's say 10 blocks.",
    "start": "1572925",
    "end": "1578400"
  },
  {
    "text": "Oh, and we need to have the discount factor but we'll talk about that later. Let's say it's just 1 for now, okay?",
    "start": "1578400",
    "end": "1584820"
  },
  {
    "text": "And they'll use right- I'm writing these other states function for later but, okay.",
    "start": "1584820",
    "end": "1590985"
  },
  {
    "text": "Does that look right? We just formalized this MDP.",
    "start": "1590985",
    "end": "1596085"
  },
  {
    "text": "So let's check if it does the right thing. So maybe we want to know what are the actions from state three?",
    "start": "1596085",
    "end": "1602190"
  },
  {
    "text": "What are the actions from state three? Oh, we need to remove this utility function from before because we don't have it in the folder.",
    "start": "1602190",
    "end": "1608100"
  },
  {
    "text": "So remove that. What, what are the actions from state three?",
    "start": "1608100",
    "end": "1613154"
  },
  {
    "text": "I have 10 blocks. If I'm in state three, I can either walk or tram.",
    "start": "1613155",
    "end": "1618285"
  },
  {
    "text": "Either one of them is fine, right? So, so that did the right thing.",
    "start": "1618285",
    "end": "1623580"
  },
  {
    "text": "Maybe we want to just check if this successor probability and the reward function does the right thing.",
    "start": "1623580",
    "end": "1629760"
  },
  {
    "text": "So maybe, maybe we can try that out for state three and walk. So, so for state three and action walk,",
    "start": "1629760",
    "end": "1636405"
  },
  {
    "text": "then what do we get? Well we end up in four and that is,",
    "start": "1636405",
    "end": "1642345"
  },
  {
    "text": "that is with probability 1 with the reward of minus 1. Okay? Let's try it out for tram.",
    "start": "1642345",
    "end": "1650580"
  },
  {
    "text": "Again, remember tram can fail, so I'm gonna get two things here. So these are the things I'm going to get for tram,",
    "start": "1650580",
    "end": "1657825"
  },
  {
    "text": "I'm going to either end up in six with probability 0.5 with the reward of minus 2 or I will not go anywhere.",
    "start": "1657825",
    "end": "1664470"
  },
  {
    "text": "I'm still at three with probability 0.5 and that is with a reward of minus 2.",
    "start": "1664470",
    "end": "1669570"
  },
  {
    "text": "Okay? All right. So that was just the tram problem and we formalized it as an MDP.",
    "start": "1669570",
    "end": "1680085"
  },
  {
    "text": "Again, the reason it's an MDP is, is that the tram can fail with probability 0.5. So we added that in,",
    "start": "1680085",
    "end": "1686355"
  },
  {
    "text": "then we defined our transition function and our problem- and our reward function. Okay? All right, everyone happy with how we are defining MDPs?",
    "start": "1686355",
    "end": "1696875"
  },
  {
    "text": "Yeah? Okay. Pretty similar to search problems except for now we have these probabilities, okay? All right.",
    "start": "1696875",
    "end": "1703710"
  },
  {
    "text": "So, so now I have defined an MDP, that's great. The next question that in general we would like to answer is to give a solution, right?",
    "start": "1703710",
    "end": "1711870"
  },
  {
    "text": "So there's a question here. So what is the Markov part of an MDP?",
    "start": "1711870",
    "end": "1716955"
  },
  {
    "text": "So the Markov part means that you just depe- so, so when you just depend on the state and this current state,",
    "start": "1716955",
    "end": "1723030"
  },
  {
    "text": "like the way we define our state remember, our state is sufficient for us to make optimal decisions for the future. So the Markov part means that you're Markovian, it  only depends on the current state and",
    "start": "1723030",
    "end": "1731130"
  },
  {
    "text": "actions to end up in the probabilistically end up in the next, next state. So yeah.",
    "start": "1731130",
    "end": "1737730"
  },
  {
    "text": "So the interesting question we would like to do is well, we want to find a solution, right? I want to figure out what is the optimal path to actually solve this problem.",
    "start": "1737730",
    "end": "1745005"
  },
  {
    "text": "And again if you remember search problems, the solution to search problems was just a sequence of actions,",
    "start": "1745005",
    "end": "1750450"
  },
  {
    "text": "said that's all I had, like a sequence of actions, a path that was a solution. And the reason that was a good solution was like everything was deterministic,",
    "start": "1750450",
    "end": "1758040"
  },
  {
    "text": "so I could just give you the path and then that was what you would follow. But in the case of MDPs,",
    "start": "1758040",
    "end": "1763620"
  },
  {
    "text": "the way we are defining a solution is by using this notion of a policy. So a policy- let me actually write that here.",
    "start": "1763620",
    "end": "1771315"
  },
  {
    "start": "1768000",
    "end": "1858000"
  },
  {
    "text": "So we have defined an MDP but now I want to say well, what is a solution of an MDP?",
    "start": "1771315",
    "end": "1777150"
  },
  {
    "text": "A solution of an Markov decision pro- process is a policy pi of S.",
    "start": "1777150",
    "end": "1782175"
  },
  {
    "text": "So and this policy basically goes from states,",
    "start": "1782175",
    "end": "1788550"
  },
  {
    "text": "so it takes any state and it tells me what is the- what is the potential action that I would get for that state.",
    "start": "1788550",
    "end": "1796260"
  },
  {
    "text": "Okay? So, so if a policy is a function, it's a mapping from each state S in the set of all possible states,",
    "start": "1796260",
    "end": "1803595"
  },
  {
    "text": "to, to an action and the set of all possible actions. Okay? So in the case",
    "start": "1803595",
    "end": "1808679"
  },
  {
    "text": "of the volcano crossing, like I can have something like this. I can be in state 1, 1 and then a policy of that state could be going south, okay?",
    "start": "1808680",
    "end": "1817580"
  },
  {
    "text": "Or I can be in state 2, 1 and a policy for that state is east. If, if this was a search problem, I would just give a path.",
    "start": "1817580",
    "end": "1825350"
  },
  {
    "text": "I would just say go south and then to- go east and go north, right? So, so that would be my solution.",
    "start": "1825350",
    "end": "1830520"
  },
  {
    "text": "But- but again, like if I decide that well the policy at 1, 1 is to go south, there is no reason for you to end up at south, right?",
    "start": "1830520",
    "end": "1837720"
  },
  {
    "text": "Because this thing, this thing is probabilistic. So, so the best thing I can do is for every state just",
    "start": "1837720",
    "end": "1843120"
  },
  {
    "text": "tell you what is the best thing you can do for that particular state and, and that's why we are defining a policy as opposed to ge- giving like a full path, okay?",
    "start": "1843120",
    "end": "1850480"
  },
  {
    "text": "All right, so policy is the thing you're looking for. And ideally, I would like to find",
    "start": "1850520",
    "end": "1857190"
  },
  {
    "text": "the best policy that would just give me the right solution. But in order to get there, I want to spend a little bit of time talking about how good a policy would be.",
    "start": "1857190",
    "end": "1865620"
  },
  {
    "start": "1858000",
    "end": "2196000"
  },
  {
    "text": "So and that's kind of this idea of evaluating a policy. So in this middle section, I don't want to try to find a policy, I,",
    "start": "1865620",
    "end": "1872970"
  },
  {
    "text": "I just assume you give me a policy and I can evaluate it and tell you how good that is. So, so that's the plan for the middle section, okay?",
    "start": "1872970",
    "end": "1880505"
  },
  {
    "text": "All right. Everyone happy with- so, so far all I've done is I've defined an MDP,",
    "start": "1880505",
    "end": "1885684"
  },
  {
    "text": "which is very similar to a search problem, it's just probabilistic. Okay? So so how would we evaluate a policy?",
    "start": "1885685",
    "end": "1892000"
  },
  {
    "text": "Okay? So if you give me a policy which basically tells me at every state S, take some action,",
    "start": "1892000",
    "end": "1899890"
  },
  {
    "text": "then that policy is going to generate a random path, right? I can get multiple random paths because nature",
    "start": "1899890",
    "end": "1905950"
  },
  {
    "text": "behaves differently and the world is uncertain. So I might get a bunch of random paths and then those are all",
    "start": "1905950",
    "end": "1911230"
  },
  {
    "text": "random variables, uh, random paths, sorry. And, and, and then for each one of those random paths,",
    "start": "1911230",
    "end": "1916825"
  },
  {
    "text": "I can, I can define a utility. So, so what is the utility? Utility is just going to be the sum of rewards that I'm going to get over that path.",
    "start": "1916825",
    "end": "1925285"
  },
  {
    "text": "I'm calling it as, as the discounted sum of the rewards. Remember that discount, we'll talk about that but,",
    "start": "1925285",
    "end": "1931780"
  },
  {
    "text": "but you can- you can discount the future. But, but for now just assume it's just a sum of the rewards on that path, okay?",
    "start": "1931780",
    "end": "1938545"
  },
  {
    "text": "So a util- the utility that we are going to get is also going to be a random variable, right?",
    "start": "1938545",
    "end": "1944020"
  },
  {
    "text": "Because if if you think about a policy, a policy is going to generate a bunch of random paths and",
    "start": "1944020",
    "end": "1950170"
  },
  {
    "text": "and utility is just going to be the sum of rewards [NOISE] of each one of those. So it's a random variable. So, so if you remember this example, right?",
    "start": "1950170",
    "end": "1958360"
  },
  {
    "text": "So I can, I can basically have a path that tells me start in in, and then stay and then that ends.",
    "start": "1958360",
    "end": "1965980"
  },
  {
    "text": "Right? So so this is one random path, and for this particular random path, well, what is the utility I'm gonna get? I'm just gonna get $4.",
    "start": "1965980",
    "end": "1972610"
  },
  {
    "text": "That's one possible thing that can happen. If my, if my, um, policy is to let's say stay,",
    "start": "1972610",
    "end": "1980080"
  },
  {
    "text": "like there is no reason for for the game to end right here. Right? Like I can have a lot of different types of random path.",
    "start": "1980080",
    "end": "1986140"
  },
  {
    "text": "I can have a situation where I'm staying three times and then after that ending the game and utility of that is 12.",
    "start": "1986140",
    "end": "1992245"
  },
  {
    "text": "We can have this situation where we have stay, stay, and end. That's the situation it's all, like you had, you had an utility of eight and so on.",
    "start": "1992245",
    "end": "1999280"
  },
  {
    "text": "So, so you're getting all these utilities for all these random paths. So, so these utilities are also going to be just random variables.",
    "start": "1999280",
    "end": "2005865"
  },
  {
    "text": "Okay? So I can't really play around with the utility. That's not telling me anything. Although it's telling me something but it's a random variable.",
    "start": "2005865",
    "end": "2012225"
  },
  {
    "text": "I can't optimize that. So instead we need to define something that you can actually play around with it and,",
    "start": "2012225",
    "end": "2018450"
  },
  {
    "text": "and that is this idea of a value which is just an expected utility. So, so the value of a policy,",
    "start": "2018450",
    "end": "2025535"
  },
  {
    "text": "is the expected utility of that policy. And then that's not a random variable anymore, that's actually like a number and I can I can compute that number.",
    "start": "2025535",
    "end": "2033020"
  },
  {
    "text": "I can compute that number for every state and and then just play around with value. Okay, next question? What is the value of the policy, does,",
    "start": "2033020",
    "end": "2039450"
  },
  {
    "text": "is that policy needs defined for all possible states or a particular state?",
    "start": "2039450",
    "end": "2045450"
  },
  {
    "text": "For all possible. So so the question is, yeah, so when you say value of policy, uh, is the policy basically telling me, um,",
    "start": "2045450",
    "end": "2052620"
  },
  {
    "text": "is a policy basically telling me, uh, what- what is a strategy for all possible states? Well, um, you're defining policy as a function of state, right?",
    "start": "2052620",
    "end": "2060750"
  },
  {
    "text": "So, and value is the same thing as a function of state. I might ask what is the value of being in in?",
    "start": "2060750",
    "end": "2066330"
  },
  {
    "text": "So the value of being in in is, is, and, and, following,  and following policy stay,",
    "start": "2066330",
    "end": "2071774"
  },
  {
    "text": "is, is going to be the, the value of fo- following policy stay from this particular state which is the expected utility of that,",
    "start": "2071775",
    "end": "2079214"
  },
  {
    "text": "which is, which is basically that 12 value there. I could ask it for about any other state too.",
    "start": "2079215",
    "end": "2084450"
  },
  {
    "text": "So I can be in any other state and then say well, what's the value of that? And, and when we do value iteration and you actually need to",
    "start": "2084450",
    "end": "2090359"
  },
  {
    "text": "compute this value for all states to kind of have an idea of how to get from one state to another state but [OVERLAPPING].",
    "start": "2090360",
    "end": "2097710"
  },
  {
    "text": "[inaudible] will be in state in and the policy given your state in taking the actions stay.",
    "start": "2097710",
    "end": "2103740"
  },
  {
    "text": "Yes. Okay. Yeah. And that is, that is what 12 is. Okay? And 12 like we kind of",
    "start": "2103740",
    "end": "2109260"
  },
  {
    "text": "empirically we have seen, it's 12 but we haven't shown how to get 12 yet. Okay? All right.",
    "start": "2109260",
    "end": "2114870"
  },
  {
    "text": "So, um, actually let me write these in my lists of things. So we talked about the policy. What else did we talk about?",
    "start": "2114870",
    "end": "2121200"
  },
  {
    "text": "We talked about utility. So what is utility? Utility, we said it's sum of rewards.",
    "start": "2121200",
    "end": "2126660"
  },
  {
    "text": "[NOISE] So if I get like reward 1, then I get reward2two. It's a discounted sum of rewards.",
    "start": "2126660",
    "end": "2132930"
  },
  {
    "text": "So I'm gonna use this gamma which is that discount that I'll talk about in a little bit times reward 2, plus gamma squared times reward 3, and so on.",
    "start": "2132930",
    "end": "2141360"
  },
  {
    "text": "So utility is, you give me a random path and I just sum up the rewards of that. Imagine if gamma is 1,",
    "start": "2141360",
    "end": "2147164"
  },
  {
    "text": "I'm just summing up the rewards. If gamma is not 1, I'm summing- I'm looking at this this discounted sum. Okay, so, so that is utility.",
    "start": "2147165",
    "end": "2153914"
  },
  {
    "text": "But value- so this is utility, value is just the expected utility, okay?",
    "start": "2153915",
    "end": "2162110"
  },
  {
    "text": "So you give me a bunch of random paths, I can compute their utilities, I can just sum them up and average them and that gives me value. Yes.",
    "start": "2162110",
    "end": "2170600"
  },
  {
    "text": "If the discount factor is 1, would that be bounded? That's a very good question and we'll get back to that.",
    "start": "2170600",
    "end": "2176940"
  },
  {
    "text": "So, so, so in general, and, and, and. Okay. If if it is acyclic, it is fine,",
    "start": "2176940",
    "end": "2182835"
  },
  {
    "text": "but if you have a cyclic graph you want your gamma to be less than 1. And we'll talk about that when we get to the convergence of these algorithms.",
    "start": "2182835",
    "end": "2191190"
  },
  {
    "text": "All right, how am I doing on time? Okay. All right. So so let's go to the, uh,",
    "start": "2191190",
    "end": "2197430"
  },
  {
    "start": "2196000",
    "end": "2258000"
  },
  {
    "text": "this particular volcano crossing example. Um, so in this case, um, like I can run this game,",
    "start": "2197430",
    "end": "2207960"
  },
  {
    "text": "and every time I run it, I'm gonna get a different utility because like I'm gonna end up in some random path,",
    "start": "2207960",
    "end": "2213420"
  },
  {
    "text": "some of them end up in the volcano, that's pretty bad, right? So I get different utility values,",
    "start": "2213420",
    "end": "2219135"
  },
  {
    "text": "utilities [LAUGHTER] but the value which is the expected utility is not changing really. It's just around 3.7 which is just the average of these utilities.",
    "start": "2219135",
    "end": "2227039"
  },
  {
    "text": "So I can keep running this getting these different utilities, but values is one number that, that I can, I can talk about",
    "start": "2227040",
    "end": "2233055"
  },
  {
    "text": "and, and that's the value of this particular state and that tells me like what would be the best policy that I",
    "start": "2233055",
    "end": "2238860"
  },
  {
    "text": "can take and what's the best amount of utility that I can get from in expectation from that state?",
    "start": "2238860",
    "end": "2244860"
  },
  {
    "text": "Okay? All right, so we've been talking about this utility",
    "start": "2244860",
    "end": "2251070"
  },
  {
    "text": "I've actually written that already on the board. So utility is going to be a discounted sum of rewards.",
    "start": "2251070",
    "end": "2256470"
  },
  {
    "text": "And then we've been talking about this discount factor. And the ideal of the discount factor is I might",
    "start": "2256470",
    "end": "2262485"
  },
  {
    "start": "2258000",
    "end": "3201000"
  },
  {
    "text": "like care about the future differently from how much I care about now. So, so for example, if if you give me $4 today,",
    "start": "2262485",
    "end": "2269910"
  },
  {
    "text": "and you give me $4 tomorrow, like if that $4 tomorrow is the same kinda amount and has the same value to me as as today,",
    "start": "2269910",
    "end": "2276750"
  },
  {
    "text": "then then I might, it's kinda the same idea of having a discount counter of 1, uh, discount of, of 1, gamma of 1.",
    "start": "2276750",
    "end": "2283904"
  },
  {
    "text": "So you're saving for the future, the values of things in the future is the same amount. If you give me $4 now,",
    "start": "2283905",
    "end": "2289980"
  },
  {
    "text": "if you give me $4 10 years from now, it- it's going to be $4. I care about it like $4 amount and I can just add things up.",
    "start": "2289980",
    "end": "2298635"
  },
  {
    "text": "But it could also be the case like you might be in a situation, in a particular MDP,",
    "start": "2298635",
    "end": "2303810"
  },
  {
    "text": "where you don't care about the future as much. Maybe you give me $4 10 years from now and that's that doesn't like, I don't have any value for that.",
    "start": "2303810",
    "end": "2310560"
  },
  {
    "text": "So, uh, if then that is the case and you just want to live in the moment and you don't care about the values you're gonna get in the future,",
    "start": "2310560",
    "end": "2317205"
  },
  {
    "text": "then that's kind of the other extreme when- when this this gamma, this discount is equal to 0. So so that is a situation that if I get $4 in the future,",
    "start": "2317205",
    "end": "2326160"
  },
  {
    "text": "that they don't like val- like they don't have any value to me. They're just like a 0 to me. So, so I only care about right now",
    "start": "2326160",
    "end": "2333255"
  },
  {
    "text": "living in the moment what is the amount I'm going to get. And then in reality you're like somewhere in between, right?",
    "start": "2333255",
    "end": "2339059"
  },
  {
    "text": "Like we're not this, this case where we are living in a moment, we're also not this case that, that everything is just the same amounts like right now or in",
    "start": "2339060",
    "end": "2346440"
  },
  {
    "text": "the future in- and like in balanced life as a setting where we have some discount factor, it's, it's not 0, it's not a 1,",
    "start": "2346440",
    "end": "2353880"
  },
  {
    "text": "it actually discounts values in the future because future maybe doesn't have the same value as now but,",
    "start": "2353880",
    "end": "2359505"
  },
  {
    "text": "um, but we still value things in the future like $4 is still something in the future. And, and that's where we pick like a gamma that's between 0 and 1.",
    "start": "2359505",
    "end": "2367590"
  },
  {
    "text": "So so that is kind of a design choice like depending on what problem you're in, you might want to choose a different gamma. Question, yeah.",
    "start": "2367590",
    "end": "2374115"
  },
  {
    "text": "So is discounting utility, is it an assessment of risk or is there, like, a different way we can assess how much risk you want to take?",
    "start": "2374115",
    "end": "2381645"
  },
  {
    "text": "Um, you could, you could think of it as an, it's not really an assessment of risk in that way.",
    "start": "2381645",
    "end": "2387270"
  },
  {
    "text": "It depends on the problem, right? It depends on like in a particular problem, I do want to get values in the future or have like some sort of",
    "start": "2387270",
    "end": "2393480"
  },
  {
    "text": "long term like goal that I want to get to and I care about the future. Like it it depends, like, if you're solving",
    "start": "2393480",
    "end": "2398720"
  },
  {
    "text": "a game versus you're solving like, I don't know, mo- mo- mobile like a robot manipulation problem",
    "start": "2398720",
    "end": "2403820"
  },
  {
    "text": "like it might just be a very different like discount factor that you would use. For a lot of examples we'd use in this class,",
    "start": "2403820",
    "end": "2409040"
  },
  {
    "text": "we just choose a gamma that's close to 1. Like- like usually like for a, for a lot of problems that we end up dealing with gamma it's like 0.9.",
    "start": "2409040",
    "end": "2416030"
  },
  {
    "text": "That's like the usual. Okay, like for usual problems. Like you might have a very different problem where we don't care about the future.",
    "start": "2416030",
    "end": "2422535"
  },
  {
    "text": "So, so then we just drop it. Yes. [inaudible] is gamma a hyperparameter that needs to be",
    "start": "2422535",
    "end": "2427730"
  },
  {
    "text": "tuned and is a gamma 0 the same as a 3D algorithm? Gamma. Okay. So so that's a good question.",
    "start": "2427730",
    "end": "2433790"
  },
  {
    "text": "So is- is gamma a hyperparameter that you need to tune? I would say gamma is a design choice. It's not a hyperparameter necessarily in that sense that,",
    "start": "2433790",
    "end": "2440609"
  },
  {
    "text": "oh if I pick the right gamma that will do the right thing. You want to pick a gamma that kind of works well with your problem statement.",
    "start": "2440610",
    "end": "2446820"
  },
  {
    "text": "Um, and, and gamma of 0 is kind of greedy, like you are picking like what is the best thing right now and I just don't",
    "start": "2446820",
    "end": "2452310"
  },
  {
    "text": "care about the future ever. Question right there. Does gamma violate the Markov property because like",
    "start": "2452310",
    "end": "2458370"
  },
  {
    "text": "this kind of memory of what you save is. It doesn't violate the Markov property. It's just a discount of like your- it's about the reward.",
    "start": "2458370",
    "end": "2466380"
  },
  {
    "text": "It's not about how this state affects the next state. It basically affects how much reward you're",
    "start": "2466380",
    "end": "2471930"
  },
  {
    "text": "going to get or how much value you reward in the future. It doesn't, it doesn't actually like- it's still a Markov decision process.",
    "start": "2471930",
    "end": "2478410"
  },
  {
    "text": "[inaudible] and make your possible actions [inaudible]? What you are getting with- it's affecting the reward yeah,",
    "start": "2478410",
    "end": "2485490"
  },
  {
    "text": "but it's Markov because if I'm in state s and I take action a, I'm gonna end up in s prime and that doesn't depend on like gamma.",
    "start": "2485490",
    "end": "2491984"
  },
  {
    "text": "Okay. All right. So. Okay. So, so in this section we've been talking",
    "start": "2491985",
    "end": "2497700"
  },
  {
    "text": "about this idea of someone comes in and gives me the policy. So the policy is pi and what I want to do is,",
    "start": "2497700",
    "end": "2503790"
  },
  {
    "text": "I want to figure out what's the value of that policy, and again value is just the expected utility. Okay? So V pi of s is the expected utility",
    "start": "2503790",
    "end": "2511740"
  },
  {
    "text": "received by following this policy pi from state s. Okay? So, so I'm not doing anything fancy.",
    "start": "2511740",
    "end": "2517740"
  },
  {
    "text": "I'm not even trying to figure out what pi is. All I want to do is, I want to just evaluate.",
    "start": "2517740",
    "end": "2522945"
  },
  {
    "text": "If you tell me this is pi, how good is that? What's the value of that? Okay? So, so that's what a value function is.",
    "start": "2522945",
    "end": "2530970"
  },
  {
    "text": "So value of a policy is, is V pi of s. Okay?",
    "start": "2530970",
    "end": "2536940"
  },
  {
    "text": "That's expected utility of starting in some state, um,",
    "start": "2536940",
    "end": "2541964"
  },
  {
    "text": "let me put this here and then I'm going to move these up. [NOISE] Um, yeah, yeah so V pi is,",
    "start": "2541965",
    "end": "2554434"
  },
  {
    "text": "is the value- the expected utility of me starting in some state S. Okay.",
    "start": "2554435",
    "end": "2560690"
  },
  {
    "text": "And state S has value of pi of S. And if someone tells me that,",
    "start": "2560690",
    "end": "2565880"
  },
  {
    "text": "well you're following policy pi, then I already know from state S, the action I'm going to take is pi of S. So that's very clear.",
    "start": "2565880",
    "end": "2574609"
  },
  {
    "text": "So I'll take pi of S. And if I take pi of S we'll- I'm going to end up in some chance node.",
    "start": "2574610",
    "end": "2582110"
  },
  {
    "text": "Okay. And that chance node is, is a state action node.",
    "start": "2582110",
    "end": "2587915"
  },
  {
    "text": "It's going to be S and the action- I've decided the action is pi of S. Okay.",
    "start": "2587915",
    "end": "2594035"
  },
  {
    "text": "And of this- define this new function, this Q function, Q pi of S, a, which is just the expected utility from the chance node.",
    "start": "2594035",
    "end": "2605420"
  },
  {
    "text": "Okay. So, so we've talked about value, value is expected utility from my actual states.",
    "start": "2605420",
    "end": "2610655"
  },
  {
    "text": "I'm going to talk about Q values as expected utilities from the chance nodes. So after you've committed that you,",
    "start": "2610655",
    "end": "2617000"
  },
  {
    "text": "you have taken action a, and, and you're following policy pi. Then, what is the expected utility from that point on, okay.",
    "start": "2617000",
    "end": "2624155"
  },
  {
    "text": "And well what is the expected utility from this point on? We are in a chance node, so many things that can happen because I have",
    "start": "2624155",
    "end": "2630560"
  },
  {
    "text": "like nature is going to play and roll its die, and anything can happen.",
    "start": "2630560",
    "end": "2636230"
  },
  {
    "text": "And they're going to have in transition, S, a, S-prime and with that transition probability,",
    "start": "2636230",
    "end": "2642890"
  },
  {
    "text": "I'm going to end up in a new state. And I'm going to call it S-prime, and the value of that state- again,",
    "start": "2642890",
    "end": "2648170"
  },
  {
    "text": "expected utility of that state is V pi of S-prime, okay. All right.",
    "start": "2648170",
    "end": "2654020"
  },
  {
    "text": "So, okay. So what are these actually equal to? So I've just defined value as expected utility,",
    "start": "2654020",
    "end": "2659855"
  },
  {
    "text": "Q value as expected utility from a chance node, what, what are they actually equal to?",
    "start": "2659855",
    "end": "2664925"
  },
  {
    "text": "Okay. So I'm going to write a recurrence that we are going to use for the rest of the class. So pay attention for five seconds. There is a question there.",
    "start": "2664925",
    "end": "2673025"
  },
  {
    "text": "I understand how semantically how pi and v pi are different, in like actual numbers,",
    "start": "2673025",
    "end": "2680089"
  },
  {
    "text": "like expected value- how are they different? So they're- both of them are expected value. Yeah. So it's just- one is just a function of",
    "start": "2680090",
    "end": "2686450"
  },
  {
    "text": "state the other one you've committed to one action. And the reason I'm defining both of them, is to just writing my recurrence is going to be a little bit easier,",
    "start": "2686450",
    "end": "2694520"
  },
  {
    "text": "because I have this state action nodes, and I can talk about them. And I can talk about how like I get branching from these state action nodes, okay?",
    "start": "2694520",
    "end": "2701450"
  },
  {
    "text": "All right. So I'm going to write a recurrence. It's not hard, but it's kind of the basis of the next like N lectures,",
    "start": "2701450",
    "end": "2708365"
  },
  {
    "text": "so pay attention. So alright. So V pi of S, what is that equal to?",
    "start": "2708365",
    "end": "2715170"
  },
  {
    "text": "Well, that is going to be equal to 0, if I'm in an end state. So if IsEnd of s is equal to true,",
    "start": "2715780",
    "end": "2725540"
  },
  {
    "text": "then there is no expected utility that's equal to 0. That's a easy case. Otherwise- well, I took policy pi S. Someone told me,",
    "start": "2725540",
    "end": "2733609"
  },
  {
    "text": "take policy pi S. So value is just equal to Q, right? So, so in this case, V pi of S,",
    "start": "2733610",
    "end": "2740195"
  },
  {
    "text": "if someone comes and gives me policy pi, it's just equal to Q pi of S, a.",
    "start": "2740195",
    "end": "2747950"
  },
  {
    "text": "Okay. These two are just equal to each other. So the next question one might ask is-",
    "start": "2747950",
    "end": "2755615"
  },
  {
    "text": "actually let me write this a little closer so I'll have some space.",
    "start": "2755615",
    "end": "2760080"
  },
  {
    "text": "Yeah. So this is equal to Q pi of S, a, okay.",
    "start": "2761920",
    "end": "2767690"
  },
  {
    "text": "So, so what is that equal to? What is Q pi of S, a equal to? So this is V pi S. So now,",
    "start": "2767690",
    "end": "2774800"
  },
  {
    "text": "I just want to know what is Q value, Q pi of S, a. What is that equal to?",
    "start": "2774800",
    "end": "2779810"
  },
  {
    "text": "Okay. So if I'm right here then there are a bunch of different things that can happen, right?",
    "start": "2779810",
    "end": "2785285"
  },
  {
    "text": "And I can end up in these different S-prime. So if I'm looking for the expected utility then I'm looking for",
    "start": "2785285",
    "end": "2790400"
  },
  {
    "text": "the probability of me ending up in this state times the utility of this state, plus the probability of me ending up in a new state times the utility of that.",
    "start": "2790400",
    "end": "2798080"
  },
  {
    "text": "So, so that is just equal to sum over all possible S-primes that I can end up at of transition probabilities of S, a, S prime.",
    "start": "2798080",
    "end": "2809135"
  },
  {
    "text": "Transition probability of ending of a new state, times the immediate reward that I'm going to get,",
    "start": "2809135",
    "end": "2815645"
  },
  {
    "text": "reward of S, a, S prime, plus the value here.",
    "start": "2815645",
    "end": "2821060"
  },
  {
    "text": "But I care about the discounted value. So I'm going to add gamma V pi of S-prime,",
    "start": "2821060",
    "end": "2827240"
  },
  {
    "text": "because I've been talking about this, this next state. Okay. There's this, does everyone see this?",
    "start": "2827240",
    "end": "2834215"
  },
  {
    "text": "Okay. So this is the recurrence that we are doing in policy evaluation.",
    "start": "2834215",
    "end": "2839440"
  },
  {
    "text": "Again, remember someone came and gave me policy pi. So I'm writing this policy pi here. Someone gave me policy pi,",
    "start": "2839440",
    "end": "2845360"
  },
  {
    "text": "I just want to know how good policy pi is. I can do that by computing V pi. What is V pi equal to?",
    "start": "2845360",
    "end": "2851195"
  },
  {
    "text": "Someone told me you're following policy pi, so it's gotta be equal to just Q pi. What is Q pi equal to?",
    "start": "2851195",
    "end": "2856924"
  },
  {
    "text": "It's just sum of all the- like the expectation of all the places that I can end up at that sum over S-primes,",
    "start": "2856925",
    "end": "2863239"
  },
  {
    "text": "transition probabilities of ending up in S-prime, times the reward- the total reward you're getting which is the immediate reward,",
    "start": "2863239",
    "end": "2870095"
  },
  {
    "text": "plus discounting in my future, okay. Yes. What if Q values and then following policy pi starting from S-prime?",
    "start": "2870095",
    "end": "2879935"
  },
  {
    "text": "Yes. Yeah, yeah, yeah, starting from S-prime. All right. So okay. So far so good.",
    "start": "2879935",
    "end": "2887150"
  },
  {
    "text": "So so that is how I can evaluate this policy, right? So, so I have these two recurrences- if I have these two recurrences,",
    "start": "2887150",
    "end": "2895280"
  },
  {
    "text": "I can just replace this guy here, and let's imagine we're in the case- maybe I can use a different color up here.",
    "start": "2895280",
    "end": "2903710"
  },
  {
    "text": "Um, I'm just replacing,",
    "start": "2903710",
    "end": "2909500"
  },
  {
    "text": "I'm just replacing this guy right here. I don't know if it's worth writing it. Imagine we we're not in an end state.",
    "start": "2909500",
    "end": "2915830"
  },
  {
    "text": "If you're not in an end state then V pi of S, well, what is that equal to? That is just equal to sum of transition probabilities S,",
    "start": "2915830",
    "end": "2924740"
  },
  {
    "text": "a, S-prime, over S-primes, times immediate reward that I'm going to get,",
    "start": "2924740",
    "end": "2930154"
  },
  {
    "text": "plus discounting V pi of S-prime. Okay. So this is kind of a recurrence that I have.",
    "start": "2930155",
    "end": "2936920"
  },
  {
    "text": "I, I literally just combined these two, and wrote it in green, okay, if you're not in an end state. So if you're not in an end state,",
    "start": "2936920",
    "end": "2943370"
  },
  {
    "text": "this is the recurrence I have. I have V pi here, I have V pi on this side too.",
    "start": "2943370",
    "end": "2948575"
  },
  {
    "text": "So that is nice. And, and that is kind of the, the placer. I can compute V pi.",
    "start": "2948575",
    "end": "2954095"
  },
  {
    "text": "Maybe I can do it literally or maybe I can actually find a closed form solution for some problems, but that is basically what I'm going to do.",
    "start": "2954095",
    "end": "2960020"
  },
  {
    "text": "I have V pi as a function that depends on V pi of S-prime. And I can just solve for this V pi.",
    "start": "2960020",
    "end": "2965225"
  },
  {
    "text": "Okay. It allows me to evaluate policy pi. I haven't figured out a new policy. All have done is evaluating what's the value of pi, okay. All right.",
    "start": "2965225",
    "end": "2977790"
  },
  {
    "text": "Okay, so let's go back to this example. So let's say that someone comes in and tells me",
    "start": "2978700",
    "end": "2986000"
  },
  {
    "text": "well the policy you gotta follow is, is to stay. So my policy is, is to stay. Okay. I want to know- I want to just evaluate that,",
    "start": "2986000",
    "end": "2993500"
  },
  {
    "text": "I want to do policy evaluation. When you're doing policy evaluation, you gotta compute that V pi for all states.",
    "start": "2993500",
    "end": "2999109"
  },
  {
    "text": "So let's start with V pi of end, oh that is equal to 0, because we know V pi at end state is just equal to 0.",
    "start": "2999110",
    "end": "3006340"
  },
  {
    "text": "Now, I want to know what's V pi of in, okay stay, in. What is that equal to? That's just equal to Q pi of in and stay, right?",
    "start": "3006340",
    "end": "3016570"
  },
  {
    "text": "V pi is just equal to Q pi of in and stay.",
    "start": "3016570",
    "end": "3022345"
  },
  {
    "text": "So I'm going to replace that, that's just equal to one-thirds, times immediate reward, which is 4,",
    "start": "3022345",
    "end": "3029185"
  },
  {
    "text": "plus value of the next state I'm going to end up at, which is end in this case, plus two-thirds, times the immediate reward I'm going to to get,",
    "start": "3029185",
    "end": "3037165"
  },
  {
    "text": "which is $4, plus value of the state I'm going to end up at, which is end. Okay. So, so that is just that sum that we have there, right?",
    "start": "3037165",
    "end": "3045445"
  },
  {
    "text": "V pi of end is 0, so let me just put that 0 there. I'm going to put 0 there.",
    "start": "3045445",
    "end": "3051025"
  },
  {
    "text": "I only have one state here too, right? So, so th- I just have this other function of this one, stay, in.",
    "start": "3051025",
    "end": "3056545"
  },
  {
    "text": "So having an equation, I can find the closed form solution of V pi of in. I'm just going to move things around a little bit.",
    "start": "3056545",
    "end": "3064480"
  },
  {
    "text": "And then I will find out that V pi of in is just equal to 12. So, so that's how you get that 12 that I've been talking about.",
    "start": "3064480",
    "end": "3071130"
  },
  {
    "text": "So, so you just found out that if you tell me the policy to follow is stay, if that is the policy,",
    "start": "3071130",
    "end": "3076950"
  },
  {
    "text": "then the value of that policy from state in is equal to 12. Is it you always choose the same or- so you always choosing to state.",
    "start": "3076950",
    "end": "3086455"
  },
  {
    "text": "Yeah. So, so the policy is a function of state. I only have this one state that's interesting here, right?",
    "start": "3086455",
    "end": "3091510"
  },
  {
    "text": "That, that one state is in. So I need to- when, when I defined my policy, I need to kind of choose the same policy for, for that state, right?",
    "start": "3091510",
    "end": "3099760"
  },
  {
    "text": "My policy says, in in you've got to either stay or you've got either quick- quit. Okay. All right.",
    "start": "3099760",
    "end": "3107605"
  },
  {
    "text": "So you can basically do the same thing using an iterative algorithm too. So, so here like in the previous example,",
    "start": "3107605",
    "end": "3113875"
  },
  {
    "text": "it was kind of simple. I just solved the closed form solution. But in, in reality like you might have different states",
    "start": "3113875",
    "end": "3120010"
  },
  {
    "text": "and then the com- it might be a little bit more complicated. So we can actually have an iterative algorithm that allows us to find these V pis.",
    "start": "3120010",
    "end": "3128050"
  },
  {
    "text": "So the way we do that is, we start with the values for all states to be equal to zero.",
    "start": "3128050",
    "end": "3135235"
  },
  {
    "text": "And, and this zero that I- I've put here, is the first iteration. So, so I'm going to count my iterations here.",
    "start": "3135235",
    "end": "3141835"
  },
  {
    "text": "So, so I'm going to just initialize all the values for all states to just be equal to zero. Okay. Then I'm just going to iterate for some number of time,",
    "start": "3141835",
    "end": "3150925"
  },
  {
    "text": "whatever number I care, like I would like to. Then, what I'm going to do is, for every state- again,",
    "start": "3150925",
    "end": "3156670"
  },
  {
    "text": "remember the value needs to be computed for every state. So for every state, I'm going to update my value by the same equation that I have on the board, okay?",
    "start": "3156670",
    "end": "3166675"
  },
  {
    "text": "And the same equation depends on the value at the previous time step. So this is just an iterative algorithm that allows me to",
    "start": "3166675",
    "end": "3174100"
  },
  {
    "text": "compute new values based on previous values that I've had. And I started like everything zero and then I keep",
    "start": "3174100",
    "end": "3180475"
  },
  {
    "text": "updating values of all states and I keep going, okay? So basically, that equation but think of it as like an iterative update every round.",
    "start": "3180475",
    "end": "3192535"
  },
  {
    "text": "So you- you don't run this for multiple rounds. Every round you just update your value.",
    "start": "3192535",
    "end": "3197935"
  },
  {
    "text": "Okay. So like here, is just pictorially you're looking at it,",
    "start": "3197935",
    "end": "3203260"
  },
  {
    "start": "3201000",
    "end": "3323000"
  },
  {
    "text": "imagine you have like, five states here, you initialize all of them to be equal to 0.",
    "start": "3203260",
    "end": "3208839"
  },
  {
    "text": "The first round, you're going to get some value you're going to update it. And then you're going to keep running this and then eventually,",
    "start": "3208840",
    "end": "3216070"
  },
  {
    "text": "you can kind of see that the last two columns are kind of close to each other and you have converged to the true value.",
    "start": "3216070",
    "end": "3221995"
  },
  {
    "text": "So, so again, someone comes and gives you the policy, you start with values equal to 0 for all the states,",
    "start": "3221995",
    "end": "3228730"
  },
  {
    "text": "and then you just update it based on your previous value. Okay. So how long should we run this?",
    "start": "3228730",
    "end": "3236110"
  },
  {
    "text": "Well, we have a heuristic to- to kind of figure out how long we should run this particular algorithm. Uh, one thing you can do is you can kind of keep track of",
    "start": "3236110",
    "end": "3244089"
  },
  {
    "text": "the difference between your value at the previous time step versus this time step. So, so if the difference is below some threshold you can, kind of,",
    "start": "3244090",
    "end": "3252175"
  },
  {
    "text": "call it- call it done and- and say, well I've- I've found the right values. And then in this case,",
    "start": "3252175",
    "end": "3258175"
  },
  {
    "text": "we are basically looking at the difference between value at iteration T versus value at iteration T minus 1.",
    "start": "3258175",
    "end": "3264300"
  },
  {
    "text": "And then we are taking the max of that over all possible states, because I want the values to be close for all states. Okay. Yes.",
    "start": "3264300",
    "end": "3271260"
  },
  {
    "text": "[inaudible] Is this- so I'm going to talk about the convergence when we talk about",
    "start": "3271260",
    "end": "3277240"
  },
  {
    "text": "the gamma factor and- and- and the- the discount factor and acyclicity. Um, also how long you should run this to get these",
    "start": "3277240",
    "end": "3285220"
  },
  {
    "text": "is also a difficult problem and it depends on the properties of your MDP. So if you have an ergodic- if you have an ergodic MDP if this- this should work.",
    "start": "3285220",
    "end": "3292435"
  },
  {
    "text": "Okay, but in general, it's a hard problem to answer for general Markov decision problem processes.",
    "start": "3292435",
    "end": "3299109"
  },
  {
    "text": "Okay. And another thing to notice here is, I'm not storing that whole table. Like the only thing I'm storing,",
    "start": "3299110",
    "end": "3304780"
  },
  {
    "text": "is- is the last two columns of this table because- because that's V pi at iteration T and V pi at iteration T minus 1.",
    "start": "3304780",
    "end": "3313180"
  },
  {
    "text": "Those are like, the only things I'm storing, because that allows me to compute and if I've converged then that kind of",
    "start": "3313180",
    "end": "3318369"
  },
  {
    "text": "allows me to keep going because I only need my previous values to update my new values, right.",
    "start": "3318370",
    "end": "3325465"
  },
  {
    "start": "3323000",
    "end": "3430000"
  },
  {
    "text": "In terms of complexity, well this is going to take order of T times S times S prime. Well, why is that?",
    "start": "3325465",
    "end": "3333295"
  },
  {
    "text": "Because I'm iterating over T times step, and I'm iterating over all my states and I'm summing over all S primes, right.",
    "start": "3333295",
    "end": "3341740"
  },
  {
    "text": "So because of that- that's a complex idea yet, and one thing to notice here, is it- it doesn't depend on actions, right. It doesn't depend on the size of actions.",
    "start": "3341740",
    "end": "3349420"
  },
  {
    "text": "And the reason it doesn't depend on the size of actions as you have given me the policy, you are telling me follow this policy.",
    "start": "3349420",
    "end": "3355240"
  },
  {
    "text": "So if you've given me the policy then I don't really need to worry about, like, the number of actions I have.",
    "start": "3355240",
    "end": "3360625"
  },
  {
    "text": "Okay. All right. Um, here is just another like the same example that we have seen.",
    "start": "3360625",
    "end": "3369370"
  },
  {
    "text": "So at iteration T equal to 1, in, is going to get 4, end is going to get 0,",
    "start": "3369370",
    "end": "3375490"
  },
  {
    "text": "at iteration 2 it gets a slightly better value. And then finally, like at iteration, like,",
    "start": "3375490",
    "end": "3381415"
  },
  {
    "text": "100 let's say, we get the value 12. And then remember for this particular example, like,",
    "start": "3381415",
    "end": "3386695"
  },
  {
    "text": "this example we were able to solve it, like, solve the closed form V- V- of, ah, V- V of policy staying, uh, from state, in, but,",
    "start": "3386695",
    "end": "3396234"
  },
  {
    "text": "uh, but you could also run the iterative algorithm and get the same value of 12. Okay. Yes.",
    "start": "3396235",
    "end": "3402460"
  },
  {
    "text": "Number of actions is just the size of S prime, right? The number of, uh, actions is the size of S prime.",
    "start": "3402460",
    "end": "3410740"
  },
  {
    "text": "Uh, no because the size of S- you might end up in very different, different states. This depends on your probabilities.",
    "start": "3410740",
    "end": "3417009"
  },
  {
    "text": "Oh, okay. The size of S prime is actually the size of, like, size of states is the same thing, right?",
    "start": "3417010",
    "end": "3422170"
  },
  {
    "text": "Like it's you can- worst case scenario, you're going from every state to every state. So just imagine the size of S. [NOISE]",
    "start": "3422170",
    "end": "3429910"
  },
  {
    "text": "Okay. All right. So summary so far where are we? So we have talked about MDPs.",
    "start": "3429910",
    "end": "3435430"
  },
  {
    "start": "3430000",
    "end": "4987000"
  },
  {
    "text": "These are graphs with states and chance nodes and transition probabilities and- and rewards.",
    "start": "3435430",
    "end": "3440905"
  },
  {
    "text": "And you have talked about policy as the solution to an MDP, which is this function that takes a state and gives us an action.",
    "start": "3440905",
    "end": "3448494"
  },
  {
    "text": "Okay. We talked about value of a policy. So value of a policy is the expected utility of- of that policy.",
    "start": "3448495",
    "end": "3455635"
  },
  {
    "text": "So, so if you have like utility you- we have these random values for all these random paths that you're going to get for every policy.",
    "start": "3455635",
    "end": "3463269"
  },
  {
    "text": "The value of utility is just an expectation over all those random, random variables. And so far we have talked about this idea of policy evaluation,",
    "start": "3463270",
    "end": "3471819"
  },
  {
    "text": "which is just an iterative algorithm to compute what's the value of a state. If you'd give me some policy, like,",
    "start": "3471820",
    "end": "3478150"
  },
  {
    "text": "how good is that policy what's the value I'm going to get at every state. Okay. All right.",
    "start": "3478150",
    "end": "3484035"
  },
  {
    "text": "So- okay, that has been all assuming you'd give me the policy. Now, the thing I want to spend a little bit of time on",
    "start": "3484035",
    "end": "3489660"
  },
  {
    "text": "is- is figuring out how to find that policy. Uh, is that possible that the variable actions for problem that is",
    "start": "3489660",
    "end": "3496015"
  },
  {
    "text": "going to change the value of the policies. We learn new actions. So for example here, we only have stay or quit.",
    "start": "3496015",
    "end": "3503425"
  },
  {
    "text": "Uh-huh. If you have a different problem that they can learn another action, like, stay quit or something, uh, um, the trade.",
    "start": "3503425",
    "end": "3511855"
  },
  {
    "text": "Is it going to change the value of the policies because then we had a new action and then we need to update our policies?",
    "start": "3511855",
    "end": "3518165"
  },
  {
    "text": "So in this case so, so far I'm assuming that a set of actions is fixed. I am not like adding new actions,",
    "start": "3518165",
    "end": "3523480"
  },
  {
    "text": "like, the way- even with search problems, like, the way we defined search problems or the way we are defining MDPs is I'm saying, like,",
    "start": "3523480",
    "end": "3530200"
  },
  {
    "text": "I'm starting with a set of states are fixed, actions are fixed, I have stay and quit. Those are, like, the only actions I can take.",
    "start": "3530200",
    "end": "3537085"
  },
  {
    "text": "Uh, the reward is fixed, uh, transition probabilities are fixed under that scenario. Then what is best- the best policy I can",
    "start": "3537085",
    "end": "3544119"
  },
  {
    "text": "take and best policies is just from those set of like, def- already defined actions. Okay. Um, next lecture we will talk about unknowing settings,",
    "start": "3544120",
    "end": "3552640"
  },
  {
    "text": "like when we have transition probabilities that are not known or reward functions that are not known and how we go about learning them.",
    "start": "3552640",
    "end": "3558010"
  },
  {
    "text": "And, and that- that will be the reinforcement learning lecture. So next lecture I might address some of those. Okay. All right, so let's talk about value iteration.",
    "start": "3558010",
    "end": "3564760"
  },
  {
    "text": "So, so that was policy evaluation. So like, that whole thing was policy evaluation. So now, what I would like to do is I want to try to get",
    "start": "3564760",
    "end": "3573115"
  },
  {
    "text": "the maximum expected utility and find the set of policies that gets me the maximum expected utility, okay?",
    "start": "3573115",
    "end": "3580090"
  },
  {
    "text": "So to do that I'm going to define this thing that's called an optimal value. So instead of value of a particular policy,",
    "start": "3580090",
    "end": "3586510"
  },
  {
    "text": "I just want to be opt of S, which is the maximum value attained by any policy.",
    "start": "3586510",
    "end": "3591535"
  },
  {
    "text": "So, so you might have a bunch of different policies, I just want that policy that maximizes the value.",
    "start": "3591535",
    "end": "3597325"
  },
  {
    "text": "Okay. So and that is V opt of S. Okay. So, um, so let me go back to this- this example.",
    "start": "3597325",
    "end": "3604600"
  },
  {
    "text": "So I'm going to have this in parallel to this example of policy evaluation, I want to do value iteration.",
    "start": "3604600",
    "end": "3610390"
  },
  {
    "text": "Okay. So I'm going to start from state S again, state S has V opt of S. Okay.",
    "start": "3610390",
    "end": "3619720"
  },
  {
    "text": "That is what I like to find here I have V pi of S. If I'm looking for V opt of S,",
    "start": "3619720",
    "end": "3626695"
  },
  {
    "text": "then I can have multiple actions that can come out of here and I don't know which one to take,",
    "start": "3626695",
    "end": "3632305"
  },
  {
    "text": "but like, any of them- if I take any of them, if I take this guy, that takes me to a chance node of SA.",
    "start": "3632305",
    "end": "3640315"
  },
  {
    "text": "Okay. And then I'm looking for Q opt of SA.",
    "start": "3640315",
    "end": "3646660"
  },
  {
    "text": "And from here, it's actually pretty similar to what we had right here. So I'm in a chance node, anything can happen, right?",
    "start": "3646660",
    "end": "3654910"
  },
  {
    "text": "Nature plays and with some transition probability of SA,",
    "start": "3654910",
    "end": "3659950"
  },
  {
    "text": "S prime I'm going to end up in some new state S prime and I care about V opt of that S prime.",
    "start": "3659950",
    "end": "3669385"
  },
  {
    "text": "Okay. So if I'm looking for this optimal policy which comes from this optimal value,",
    "start": "3669385",
    "end": "3675520"
  },
  {
    "text": "then I need to find V opt. And if I want to find V opt well, that depends on what action I'm taking here.",
    "start": "3675520",
    "end": "3681849"
  },
  {
    "text": "But let's say, I take one of these. And if I take one of these I end up in a chance node, I have Q opt SA in that chance node.",
    "start": "3681850",
    "end": "3688885"
  },
  {
    "text": "And then from that point on with whatever probabilities I can end up in some S prime. Okay. So I want to write the recurrence for",
    "start": "3688885",
    "end": "3695650"
  },
  {
    "text": "this guy similar to the recurrence that we wrote here. It's going to be actually very similar. So- okay, so I'm going to start with Q because that is easier.",
    "start": "3695650",
    "end": "3704680"
  },
  {
    "text": "So what is Q opt of SA that- that just seems very similar to this previous case.",
    "start": "3704680",
    "end": "3710589"
  },
  {
    "text": "What is that equal to? What was Q pi?",
    "start": "3710590",
    "end": "3715625"
  },
  {
    "text": "Q pi was just sum of transition probabilities times rewards, right. So, so what is Q opt?",
    "start": "3715625",
    "end": "3721260"
  },
  {
    "text": "[inaudible]. Yeah. So, so it would just be basically this equation except for I'm going to replace V pi with V opt.",
    "start": "3721260",
    "end": "3728610"
  },
  {
    "text": "So, so from Q opt, I can end up anywhere like based on the transition probabilities. So I'm going to sum up over S primes and all possible places that I can end up at.",
    "start": "3728610",
    "end": "3738295"
  },
  {
    "text": "I'm going to get an immediate reward which is RSA S-prime.",
    "start": "3738295",
    "end": "3743395"
  },
  {
    "text": "And I'm going to discount the future but the value of the future is V opt of S-prime.",
    "start": "3743395",
    "end": "3750160"
  },
  {
    "text": "Okay. So, so far so good that's Q opt. How about V opt. What is that equal to?",
    "start": "3750160",
    "end": "3758960"
  },
  {
    "text": "Well, it's going to be equal to 0 if you are in an end state that's similar to before.",
    "start": "3759690",
    "end": "3765954"
  },
  {
    "text": "So if end of S is true then- then it is 0.",
    "start": "3765955",
    "end": "3771910"
  },
  {
    "text": "Otherwise, I have- I have a bunch of options here, right. I can take any of these actions and I can get any Q opt.",
    "start": "3771910",
    "end": "3779065"
  },
  {
    "text": "So which one should I pick? Which Q opt should I pick?",
    "start": "3779065",
    "end": "3783589"
  },
  {
    "text": "The one that maximizes, right? Like, um, which actually I should pick an action from the set",
    "start": "3785130",
    "end": "3792640"
  },
  {
    "text": "of actions of that state that maximizes Q opt.",
    "start": "3792640",
    "end": "3797740"
  },
  {
    "text": "So, so the only thing that has changed here is before someone told me what the policy is,",
    "start": "3797740",
    "end": "3802855"
  },
  {
    "text": "I just took the Q of that. Here I'm just picking the maximum value of",
    "start": "3802855",
    "end": "3808120"
  },
  {
    "text": "Q and that actually tells me what action to pick. So what is the optimal policy?",
    "start": "3808120",
    "end": "3814855"
  },
  {
    "text": "What should be the optimal policy? Hmm? I'm going to call it pi opt of S. What is that equal to?",
    "start": "3814855",
    "end": "3828970"
  },
  {
    "text": "It's gotta be the- the thing that maximizes V, right.",
    "start": "3828970",
    "end": "3834070"
  },
  {
    "text": "Which is the thing that maximizes this- this- this Q. So because that gives me the action.",
    "start": "3834070",
    "end": "3840310"
  },
  {
    "text": "So it's going to be the argmax of Q opt of S and A.",
    "start": "3840310",
    "end": "3847210"
  },
  {
    "text": "Where A is an action of S. Okay?",
    "start": "3847210",
    "end": "3853970"
  },
  {
    "text": "All right, so this was policy evaluation.",
    "start": "3855990",
    "end": "3861595"
  },
  {
    "text": "Someone gave me the policy. With that policy I was able to compute V, I was able to compute Q,",
    "start": "3861595",
    "end": "3867340"
  },
  {
    "text": "I was able to write this recurrence, then I had an iterative algorithm to do things, This is called value iteration.",
    "start": "3867340",
    "end": "3874599"
  },
  {
    "text": "This is to find the right policy Iteration. This is to find a policy. How do I do that?",
    "start": "3874600",
    "end": "3881080"
  },
  {
    "text": "Well I have a value that's for the optima- optimal value that I can get and it's going to be",
    "start": "3881080",
    "end": "3886300"
  },
  {
    "text": "maximum over all possible actions I can take of the Q values and Q values are similar to before.",
    "start": "3886300",
    "end": "3892510"
  },
  {
    "text": "So I have this recurrence now and at optimal policy is just an argmax of Q. Yeah.",
    "start": "3892510",
    "end": "3898510"
  },
  {
    "text": "It looks like there are two argmax, right? Sorry? What? Phi for argmax like just two argmax,",
    "start": "3898510",
    "end": "3906580"
  },
  {
    "text": "right, like there are two As? Oh, yes. You could get two A's, So the question is, yeah, like, what if I have two A's that give me the same thing?",
    "start": "3906580",
    "end": "3912925"
  },
  {
    "text": "I can return any of them. It depends on your implementation of max. So you can return any of them. How am I doing on time?",
    "start": "3912925",
    "end": "3919150"
  },
  {
    "text": "[NOISE] We are five minutes over and if you want. [LAUGHTER] So good news is the slides are the same things that I have on the board.",
    "start": "3919150",
    "end": "3929110"
  },
  {
    "text": "So so Q_opt is just equal to the sum that we've talked about V_opt.",
    "start": "3929110",
    "end": "3934855"
  },
  {
    "text": "I just add the max on top of Q_opt same story, okay? And then if I want the policy,",
    "start": "3934855",
    "end": "3941244"
  },
  {
    "text": "then I just do the argmax of Q_opt and that gives me the policy. Right. I can have and again an iterative algorithm that does the same thing.",
    "start": "3941245",
    "end": "3949120"
  },
  {
    "text": "It's actually quite similar to the iterative algorithm for policy evaluation. I just start setting everything to equal to 0.",
    "start": "3949120",
    "end": "3955165"
  },
  {
    "text": "I iterate for some number of times. I go over all possible states. And then, I just update my value based on this new recurrence that has a max, okay?",
    "start": "3955165",
    "end": "3964885"
  },
  {
    "text": "So very similar to before, I just do this update. One thing is the time complexity is going to be order of T times S times A times,",
    "start": "3964885",
    "end": "3973990"
  },
  {
    "text": "S prime because now I have this max value over all possible actions. So I'm actually iterating over all possible actions versus in policy evaluations,",
    "start": "3973990",
    "end": "3982795"
  },
  {
    "text": "I- I didn't have A, because, because someone would give me the policy. I didn't need to worry about this. All right. So let's look at coding this up real quick.",
    "start": "3982795",
    "end": "3992140"
  },
  {
    "text": "Okay, so we have this MDP problem. We define it, it was a Tram problem,",
    "start": "3992140",
    "end": "3998184"
  },
  {
    "text": "it was probabilistic, everything about it was great. So now I just wanna do an algorithm section and inference section where I code up value",
    "start": "3998184",
    "end": "4007640"
  },
  {
    "text": "iteration and I can call a value iteration on this MDP problem to get the best optimal policy.",
    "start": "4007640",
    "end": "4014825"
  },
  {
    "text": "Okay. So I'm going to call value iteration later. All right. So we initialize,",
    "start": "4014825",
    "end": "4030405"
  },
  {
    "text": "so all the values are going to become- I might skip things to make this faster. So we're gonna initialize all the values to",
    "start": "4030405",
    "end": "4037290"
  },
  {
    "text": "just 0, right, because all these values are gonna be 0. So I defined a states function.",
    "start": "4037290",
    "end": "4043380"
  },
  {
    "text": "So i for all of those the value is just going to be equal to 0. So it's initialized with that.",
    "start": "4043380",
    "end": "4049470"
  },
  {
    "text": "Then you're just gonna iterate for some number of time.",
    "start": "4049470",
    "end": "4053230"
  },
  {
    "text": "And what we wanna do is you wanna compute this new value given old values.",
    "start": "4055250",
    "end": "4060375"
  },
  {
    "text": "So it's an iterative algorithm. We have old values, we just update new values based on them.",
    "start": "4060375",
    "end": "4066029"
  },
  {
    "text": "So what should that be equal to?",
    "start": "4066030",
    "end": "4068860"
  },
  {
    "text": "So we iterate over our states. If you are in an end state then what is value equal to? 0, right?",
    "start": "4072020",
    "end": "4080700"
  },
  {
    "text": "If you're not in an end state, then you're just gonna do that- that- that recurrence there.",
    "start": "4080700",
    "end": "4085980"
  },
  {
    "text": "Okay, So new value of a state is going to be equal to max of, what the Q values, okay.",
    "start": "4085980",
    "end": "4094210"
  },
  {
    "text": "So new V is just max of Qs of state and actions. Okay.",
    "start": "4094370",
    "end": "4101279"
  },
  {
    "text": "So now I need to define Q or what does Q do? Q of state and action is just equal to that sum over- over S primes.",
    "start": "4101280",
    "end": "4110880"
  },
  {
    "text": "So it's gonna return sum and it's gonna return sum over S primes.",
    "start": "4110880",
    "end": "4118170"
  },
  {
    "text": "I define this successor probability and reward function that gives me newState probability and reward.",
    "start": "4118170",
    "end": "4124230"
  },
  {
    "text": "So I'm gonna iterate over that and- and call that up here.",
    "start": "4124230",
    "end": "4129569"
  },
  {
    "text": "So given that I have a state and action I can get newState probability and reward. What are we summing, you're summing the probability, the transition",
    "start": "4129570",
    "end": "4137339"
  },
  {
    "text": "probabilities times the immediate reward which is reward here times my- plus my discount times my V",
    "start": "4137340",
    "end": "4145020"
  },
  {
    "text": "which is the old value of V over S prime, over my newState. So that is my Q, that is my V, and that's pretty much done.",
    "start": "4145020",
    "end": "4155790"
  },
  {
    "text": "We just need to check for convergence. To check for convergence, we kind of do the same thing as before. We check if value of V and new V are close enough to,",
    "start": "4155790",
    "end": "4164160"
  },
  {
    "text": "to each other that we can call it done. I'm gonna skip these parts. So- so you can basically check if V minus",
    "start": "4164160",
    "end": "4171315"
  },
  {
    "text": "new V are within some threshold for- for all states. And if they are then,",
    "start": "4171315",
    "end": "4177345"
  },
  {
    "text": "V is equal to new V. We need to read the policy. So policy is just argmax of Q.",
    "start": "4177345",
    "end": "4183870"
  },
  {
    "text": "So I'm gonna make this a little faster. So the policy is just going to be, well, none if we're in an end state and otherwise",
    "start": "4183870",
    "end": "4193290"
  },
  {
    "text": "it's just going to be argmax of- of our Q values.",
    "start": "4193290",
    "end": "4199650"
  },
  {
    "text": "So I'm just writing argmax here pretty much. I'm just returning the action that maximizes the Q.",
    "start": "4199650",
    "end": "4208949"
  },
  {
    "text": "And then we spent a bunch of time getting the printing working. So let me actually get. Yeah, okay.",
    "start": "4208950",
    "end": "4218280"
  },
  {
    "text": "All right actually right here. So I'm running this function. I'm- I'm writing out, actually these are a little shifted grid.",
    "start": "4218280",
    "end": "4225435"
  },
  {
    "text": "States [LAUGHTER] values and then Pi which is the policy K. So it starts off walk, walk, walk.",
    "start": "4225435",
    "end": "4232349"
  },
  {
    "text": "Remember this is the case where we have 50% probability of tram failing and with 50% probability of tram failing,",
    "start": "4232350",
    "end": "4239295"
  },
  {
    "text": "these are the values we are gonna get. And the policies still walk until state five.",
    "start": "4239295",
    "end": "4245430"
  },
  {
    "text": "And then take the tram from, from state five. Okay, just kind of interesting",
    "start": "4245430",
    "end": "4252119"
  },
  {
    "text": "because the policy of the search problem was the same thing too. Okay, so the thing we can do is,",
    "start": "4252120",
    "end": "4258285"
  },
  {
    "text": "we can actually, let me move this a little bit forward. We can actually define this fail probability which becomes just a variable.",
    "start": "4258285",
    "end": "4265350"
  },
  {
    "text": "So you can play around with this. If you pick different fail probabilities you're gonna get different policies.",
    "start": "4265350",
    "end": "4270420"
  },
  {
    "text": "So for example if you pick a fail probability that is large then probably like",
    "start": "4270420",
    "end": "4275429"
  },
  {
    "text": "that policy is going to be just, just walk and never take the tram because the tram is failing all the time.",
    "start": "4275430",
    "end": "4280695"
  },
  {
    "text": "But if you- if you decide to take fail probability is close to 0, then- then this is",
    "start": "4280695",
    "end": "4287159"
  },
  {
    "text": "your optimal policy which is close to the search problem. It's basically the solution to a search problem. So play around with this, the code is online.",
    "start": "4287160",
    "end": "4295965"
  },
  {
    "text": "This was just value iteration- value iteration, um, on this tram problem.",
    "start": "4295965",
    "end": "4304935"
  },
  {
    "text": "Okay. So I'm gonna skip this one too. All right, so yeah.",
    "start": "4304935",
    "end": "4312600"
  },
  {
    "text": "And- and this is also showing like how over multiple iterations you can kind of get to the- get to",
    "start": "4312600",
    "end": "4319920"
  },
  {
    "text": "the optimal- optimal value and optimal policy using value iteration. So in one iteration it hasn't seen it yet.",
    "start": "4319920",
    "end": "4326790"
  },
  {
    "text": "So it think that the value, optimal value is 1.85, it hasn't updated the values. And so with like, I don't know, three iterations,",
    "start": "4326790",
    "end": "4334440"
  },
  {
    "text": "it gets better but it hasn't still updated. It still thinks it can't get to the other side. And remember this is with stick probability of 10%.",
    "start": "4334440",
    "end": "4342405"
  },
  {
    "text": "But if I get to like I think 10, then it eventually learns the best policy is to get to 20 and the value is 13.68.",
    "start": "4342405",
    "end": "4352545"
  },
  {
    "text": "And if you go even like higher iterations after that point it's just fine-tuning. So the values are around 13 still. So you can play around with the volcano problem.",
    "start": "4352545",
    "end": "4361845"
  },
  {
    "text": "Okay. So when does this converge? So if the discount factor is less than 1 or",
    "start": "4361845",
    "end": "4368910"
  },
  {
    "text": "your MDP graph is acyclic then this is going to converge. So if MDP graph is acyclic that's kind of obvious",
    "start": "4368910",
    "end": "4375030"
  },
  {
    "text": "you are just doing dynamic programming over your full-thing. So- so that's going to- that's going to converge.",
    "start": "4375030",
    "end": "4380805"
  },
  {
    "text": "If you have cycles, you- you want your- your discounts to be less than 1. Because if you're, if you have cycles and your discount is",
    "start": "4380805",
    "end": "4388710"
  },
  {
    "text": "let's say 1 and let's say you are getting 0 rewards from, then you're never going to change.",
    "start": "4388710",
    "end": "4394619"
  },
  {
    "text": "You're never going to move, you move from your state. You're always going to be stuck in your state. And if you have non-zero rewards you're going to",
    "start": "4394620",
    "end": "4400949"
  },
  {
    "text": "get this unbounded reward and you keep going because you have cycles and it's just going to end up becoming numerically difficult.",
    "start": "4400950",
    "end": "4407520"
  },
  {
    "text": "So just a good rule of thumb is pick a Gamma that's less than one. Then you kind of get this convergence property.",
    "start": "4407520",
    "end": "4413775"
  },
  {
    "text": "Okay, all right, so summary so far is we have MDPs.",
    "start": "4413775",
    "end": "4420025"
  },
  {
    "text": "Now, you've talked about finding policies, rather than path, policy evaluation is just a way of computing like how good a policy is.",
    "start": "4420025",
    "end": "4430415"
  },
  {
    "text": "And the reason I talked about policy evaluation is there's this other algorithm called policy iteration which uses policy evaluation and we didn't discuss that in the class.",
    "start": "4430415",
    "end": "4438680"
  },
  {
    "text": "But it's kind of like, not equivalent but you could use it in a similar manner as value iteration.",
    "start": "4438680",
    "end": "4444230"
  },
  {
    "text": "It has its pros and cons. So policy evaluation is used in those settings. Do not leave please.",
    "start": "4444230",
    "end": "4449750"
  },
  {
    "text": "We have more stuff to cover. [LAUGHTER] And then we have value iteration, uh, which, uh,",
    "start": "4449750",
    "end": "4456390"
  },
  {
    "text": "computes its optimal value which is the maximum expected utility, okay? And next time, we're going to talk about reinforcement learning,",
    "start": "4456390",
    "end": "4462780"
  },
  {
    "text": "and that's going to be awesome. So let's talk about unknown rewards. All right.",
    "start": "4462780",
    "end": "4468960"
  },
  {
    "text": "So that was MDPs [LAUGHTER] doing inference and, and kind of defining them.",
    "start": "4468960",
    "end": "4474795"
  },
  {
    "text": "I'm going back to the last lecture just to kind of talk about some of the stuff that we didn't cover last time, okay?",
    "start": "4474795",
    "end": "4481125"
  },
  {
    "text": "All right. So if you remember last time, we were talking about search problems. So big switch now.",
    "start": "4481125",
    "end": "4486195"
  },
  {
    "text": "Search problems, where we don't have probabilities, and we talked about A-star as a way of just making things faster,",
    "start": "4486195",
    "end": "4492855"
  },
  {
    "text": "and we talked about this idea of relaxations which was, uh, a way of finding good heuristics.",
    "start": "4492855",
    "end": "4498840"
  },
  {
    "text": "So A-star had this heuristic. Heuristic was an estimate of future costs. We wanted to figure out how to find these heuristics,",
    "start": "4498840",
    "end": "4505800"
  },
  {
    "text": "like, how do you go about finding these heuristics? And one idea was just to relax everything, that",
    "start": "4505800",
    "end": "4510840"
  },
  {
    "text": "allows you to come up with an easier search problem or just an easier problem, and that helps you to find what the heuristic is, okay?",
    "start": "4510840",
    "end": "4517065"
  },
  {
    "text": "So, um, [NOISE] so we talked about this idea of removing constraints, and when you remove constraints,",
    "start": "4517065",
    "end": "4523020"
  },
  {
    "text": "then you can end up in nice situations. Like in some settings, you have a closed-form solution. In some other settings, you have just an easier search problem,",
    "start": "4523020",
    "end": "4530310"
  },
  {
    "text": "and you can solve that, and in some other settings, you have like independent sub-problems. So when you remove constraints then,",
    "start": "4530310",
    "end": "4536400"
  },
  {
    "text": "then you have this easier problem. You can solve that easier problem, and that gives you a heuristic.",
    "start": "4536400",
    "end": "4542295"
  },
  {
    "text": "You're not done yet, right? You're- you have a heuristic. You take that heuristic, and then change your costs,",
    "start": "4542295",
    "end": "4548265"
  },
  {
    "text": "and then just run uniform cost search on your original problem. So, so solving an easier problem",
    "start": "4548265",
    "end": "4553875"
  },
  {
    "text": "is like you're not done when you have solved the easier problem. It just helps you to find a thing that helps for- with the original problem,",
    "start": "4553875",
    "end": "4560310"
  },
  {
    "text": "so it's kind of like a multi-step thing. So examples of that is, if you have walls, remove all the walls,",
    "start": "4560310",
    "end": "4566625"
  },
  {
    "text": "you have an easier problem. If you solve that easier problem, that gives you a heuristic, and in this case,",
    "start": "4566625",
    "end": "4572070"
  },
  {
    "text": "like when you knock down these walls, that easier problem you have a closed-form solution for it. You don't need to do anything fancy.",
    "start": "4572070",
    "end": "4578310"
  },
  {
    "text": "You don't need to do uniform cost search. Any of that. You just compute the Manhattan distance and, and then that gives you the heuristic.",
    "start": "4578310",
    "end": "4583905"
  },
  {
    "text": "With that heuristic, you go and solve the original problem. That was one example. Another example is, when you remove constraints,",
    "start": "4583905",
    "end": "4591420"
  },
  {
    "text": "you have an easier search problem. So you don't have closed-form solutions, but you have an easier search problem.",
    "start": "4591420",
    "end": "4596610"
  },
  {
    "text": "So you might have a really difficult search problem with a bunch of constraints that are hard to do. Remove the constraints.",
    "start": "4596610",
    "end": "4602550"
  },
  {
    "text": "So when you remove the constraints, you have a relaxed problem, which is just the original problem without the constraint.",
    "start": "4602550",
    "end": "4608985"
  },
  {
    "text": "That's a search problem. You can solve that search problem using uniform cost search or dynamic programming and,",
    "start": "4608985",
    "end": "4614570"
  },
  {
    "text": "and solving that allows you to find the heuristic. Again, you're not done yet, right? You take the heuristic,",
    "start": "4614570",
    "end": "4620360"
  },
  {
    "text": "and then you go to the original problem, change the costs, and, and draw your uniform costs there.",
    "start": "4620360",
    "end": "4625560"
  },
  {
    "text": "And just one quick kind of example here was, uh, when you're computing these relax problems,",
    "start": "4625560",
    "end": "4630930"
  },
  {
    "text": "the thing you want to find is the future costs of this, this relaxed problem, and, and to do that, you have this easier search problem.",
    "start": "4630930",
    "end": "4637739"
  },
  {
    "text": "You still need to run uniform cost search or dynamic programming. In this case, if you decide to run uniform cost search,",
    "start": "4637740",
    "end": "4643785"
  },
  {
    "text": "remember, uniform cost search computes past costs. In this case, I really wanna compute future costs.",
    "start": "4643785",
    "end": "4649965"
  },
  {
    "text": "So you need to do a bunch of engineering to get that working. In this particular case, the relaxed problem, you need to reverse it.",
    "start": "4649965",
    "end": "4657270"
  },
  {
    "text": "Because when you reverse it, past costs of the reversed relax problem becomes future cost of the relaxed problem, if that makes sense.",
    "start": "4657270",
    "end": "4665250"
  },
  {
    "text": "So, so the way I'm reversing this is I'm basically saying start state is n. End state is 1,",
    "start": "4665250",
    "end": "4670905"
  },
  {
    "text": "and my walk action takes me to s minus 1, instead of s plus 1, and my tram action takes me to s over 2 instead of S times 2,",
    "start": "4670905",
    "end": "4678614"
  },
  {
    "text": "and the whole reason I'm doing that is- is that the past cost of this new problem is the future costs of the non-reversed version.",
    "start": "4678615",
    "end": "4685995"
  },
  {
    "text": "Okay. Because I, I need to use uniform cost search here, okay? So I run my uniform cost search,",
    "start": "4685995",
    "end": "4692250"
  },
  {
    "text": "that gives me a heuristic, and that heuristic gives me this future cost of the relaxed problem,",
    "start": "4692250",
    "end": "4697635"
  },
  {
    "text": "and everything will be great. Another example is, I can have independent subproblems using my heuristic.",
    "start": "4697635",
    "end": "4702705"
  },
  {
    "text": "So in this case, like we have these tiles, they technically cannot overlap. Instead, what we are allowing is,",
    "start": "4702705",
    "end": "4709170"
  },
  {
    "text": "you're allowing them to overlap. So if we allow them to overlap, I have eight independent subproblems that I can solve.",
    "start": "4709170",
    "end": "4715170"
  },
  {
    "text": "These subproblems give me heuristics, and I can just go with them, okay? So, so these were just a bunch of examples,",
    "start": "4715170",
    "end": "4721155"
  },
  {
    "text": "and kind of the key idea was reducing edge, li- like when we are coming up in these relaxed problems,",
    "start": "4721155",
    "end": "4726570"
  },
  {
    "text": "we're reducing edge costs from infinity to some finite costs. Okay. So I'm getting rid of walls before I couldn't cross, like it was infinity.",
    "start": "4726570",
    "end": "4734040"
  },
  {
    "text": "Cost of that was infinity, but if I get rid of the wall and making it a finite cost. So this type of method,",
    "start": "4734040",
    "end": "4740744"
  },
  {
    "text": "um, this is a general framework. So the point I wanna make is, generally, you can talk about the relaxation of a search problem.",
    "start": "4740745",
    "end": "4748005"
  },
  {
    "text": "So if you have a search problem P, a relaxation of a search problem, I'm going to call that PR, uh, Prel,",
    "start": "4748005",
    "end": "4754304"
  },
  {
    "text": "is going to be a problem where the cost of the relaxation for any state action is less than or equal to cost of state and action.",
    "start": "4754305",
    "end": "4761760"
  },
  {
    "text": "I'll take questions afterwards. All right. So, uh, so that is a relaxed problem, okay?",
    "start": "4761760",
    "end": "4767670"
  },
  {
    "text": "So the cool thing about that is, if you're given a relaxed problem, then you can pick your heuristic to be the future cost of the relaxed problem,",
    "start": "4767670",
    "end": "4775965"
  },
  {
    "text": "and that is called the relaxed heuristic, okay? So, so this is kind of a recipe. A general framework. Like, if someone asks you find a good heuristic,",
    "start": "4775965",
    "end": "4783345"
  },
  {
    "text": "find a relaxed problem, future cost of the relaxed problem is a heuristic. And the cool thing about that is it turns out that, that,",
    "start": "4783345",
    "end": "4791235"
  },
  {
    "text": "that future cost of the relaxed problem, which you are deciding to be a heuristic, is also consistent because we talked about all these consistency properties,",
    "start": "4791235",
    "end": "4798900"
  },
  {
    "text": "and how you want to find the heuristic to be consistent for the solution to be correct, and how in the world am I gonna find a consistent heuristic?",
    "start": "4798900",
    "end": "4805755"
  },
  {
    "text": "Well, here is one. Here is one way of finding consistent heuristics. Pick your problem, make it relaxed.",
    "start": "4805755",
    "end": "4812370"
  },
  {
    "text": "Making it relaxed means that pick your cost that's less- pick, pick your relaxed problem where the cost is less than the cost of the original problem,",
    "start": "4812370",
    "end": "4819525"
  },
  {
    "text": "and then future cost of that relaxed problem is just going to be a heuristic, and, and it's going to be consistent.",
    "start": "4819525",
    "end": "4825315"
  },
  {
    "text": "So proof of that is two lines, so I'm going to skip that. And, and the cool thing about this like,",
    "start": "4825315",
    "end": "4830685"
  },
  {
    "text": "like note about this is, there is a trade-off here. There is a trade-off between efficiency and tightness.",
    "start": "4830685",
    "end": "4836054"
  },
  {
    "text": "So, sure, like making things relaxed and removing constraints. It's kinda fun, right? We have this easier problem,",
    "start": "4836055",
    "end": "4841140"
  },
  {
    "text": "and you just solved it, and everything is great about it. But it's not like, like there is kind of a trade-off between how tight you want your heuristic to be.",
    "start": "4841140",
    "end": "4848699"
  },
  {
    "text": "Like, you shouldn't remove too many constraints, because if you remove too many constraints, then your heuristic is not a good estimate of future costs.",
    "start": "4848700",
    "end": "4855765"
  },
  {
    "text": "Remember, your heuristic is supposed to be an estimate of future costs. So, so if it is not a good estimate of future costs and it's not tight, then it's not that great.",
    "start": "4855765",
    "end": "4862860"
  },
  {
    "text": "So, so there is a balance between how much you are removing your cons- your constraints and, and how that makes finding the heuristic easier,",
    "start": "4862860",
    "end": "4871394"
  },
  {
    "text": "versus the fact that you want your heuristics to be tight and be close to your future costs, so, so don't remove everything.",
    "start": "4871394",
    "end": "4877815"
  },
  {
    "text": "Leave some constraints [LAUGHTER] and then solve it. Um, and you can also do things, like if you have two heuristics that are both consistent,",
    "start": "4877815",
    "end": "4885285"
  },
  {
    "text": "you can take the max of that, and if you take the max of that, it's, it's a little bit more restrictive. Maybe, maybe that is closer to your future costs,",
    "start": "4885285",
    "end": "4891885"
  },
  {
    "text": "and that is- and then you can actually show the max of that, is also consistent, okay? Uh, so we talked about,",
    "start": "4891885",
    "end": "4898170"
  },
  {
    "text": "uh, like relaxations A-star. One other quick thing I want to mention because that wasn't very clear last time,",
    "start": "4898170",
    "end": "4903675"
  },
  {
    "text": "is structured das- perceptron. We talked about that a little bit too, and we talked about convergence of that. So quick things on that.",
    "start": "4903675",
    "end": "4909180"
  },
  {
    "text": "Structured perceptron actually converges. There was this question that, uh, if we have- if that- if, if we have a path,",
    "start": "4909180",
    "end": "4916590"
  },
  {
    "text": "that is let's say walk, tram, and, and we end up recovering another path.",
    "start": "4916590",
    "end": "4923010"
  },
  {
    "text": "That is tram, walk, is that bad, is that good? Well, turns out that the cost of both of these paths are the same thing.",
    "start": "4923010",
    "end": "4930239"
  },
  {
    "text": "So if I end up getting this path, well that's perfectly fine too. Right? Like that, that is also with the same optimal weight.",
    "start": "4930240",
    "end": "4936210"
  },
  {
    "text": "In the example that we have shown, in a tram example, I don't think we are able to get to a  path that",
    "start": "4936210",
    "end": "4942000"
  },
  {
    "text": "looked like this because of the nature of the example. So, so in general things to remember from structured ce- perceptron is, it does converge.",
    "start": "4942000",
    "end": "4949785"
  },
  {
    "text": "It does converge in a way that it can recover the two Ys, but it doesn't necessarily get the exact Ws,",
    "start": "4949785",
    "end": "4955980"
  },
  {
    "text": "as we saw last time, right? Like, you might get two and four, you might get four and eight, like, as long as you have the same relationships,",
    "start": "4955980",
    "end": "4961590"
  },
  {
    "text": "that, that is enough but, but you are going to be able to get the actual Ys, and it does converge.",
    "start": "4961590",
    "end": "4966630"
  },
  {
    "text": "So with that, um, project conversation is going to be next time. Do take a look at,",
    "start": "4966630",
    "end": "4972795"
  },
  {
    "text": "do take a look at the website. So all the information on the project is on the website. So if you have started thinking about it, look at the project page,",
    "start": "4972795",
    "end": "4978780"
  },
  {
    "text": "and that has something for you.",
    "start": "4978780",
    "end": "4980920"
  }
]