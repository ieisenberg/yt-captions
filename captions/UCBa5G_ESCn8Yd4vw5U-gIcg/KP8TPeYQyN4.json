[
  {
    "start": "0",
    "end": "43000"
  },
  {
    "text": "thank you for the introduction and for the honor of um inviting me here to tell you about research that my colleagues I",
    "start": "11840",
    "end": "18160"
  },
  {
    "text": "and many people all over the world have been doing over the past few years tackling some of the pressing realities",
    "start": "18160",
    "end": "25880"
  },
  {
    "text": "of uh information security and the way we build computer system systems",
    "start": "25880",
    "end": "31519"
  },
  {
    "text": "um let me start with a bit of motivation with otherwise uh Doom and Gloom",
    "start": "31519",
    "end": "36920"
  },
  {
    "text": "proclamations that will motivate the later promise of Salvation by snarks",
    "start": "36920",
    "end": "43520"
  },
  {
    "start": "43000",
    "end": "137000"
  },
  {
    "text": "um so we have numerous threads to our computer systems uh we have bugs um we",
    "start": "43520",
    "end": "50440"
  },
  {
    "text": "have random failures the pro proverbial cosmic rays troan",
    "start": "50440",
    "end": "55840"
  },
  {
    "text": "horses um even when we don't we're not supposed to have this the way things were designed uh there are uh supply",
    "start": "55840",
    "end": "63399"
  },
  {
    "text": "chain issues that can induce this along the way and each of these applies at the level of user software at the level of",
    "start": "63399",
    "end": "71119"
  },
  {
    "text": "the hardware at the level of the platform software that's in between the hypervisor and operating system even the",
    "start": "71119",
    "end": "77920"
  },
  {
    "text": "physical environment surrounding the computer as a physical",
    "start": "77920",
    "end": "83040"
  },
  {
    "text": "device each of these um has numerous examples uh for the way it can be",
    "start": "83040",
    "end": "89079"
  },
  {
    "text": "exploited each combination in this cartisian product has made it to papers news and exploitation in the real",
    "start": "89079",
    "end": "97000"
  },
  {
    "text": "world and moreover in the most extreme case we have scenarios when we're not supposed to trust anyone we might be in",
    "start": "97000",
    "end": "104280"
  },
  {
    "text": "a network on unrusted peers that uh may be uh adversarial to us in a game",
    "start": "104280",
    "end": "110920"
  },
  {
    "text": "theoretic sense or economical sense or national sense and um each of these can",
    "start": "110920",
    "end": "118640"
  },
  {
    "text": "compromise the Integrity confidentiality availability",
    "start": "118640",
    "end": "123920"
  },
  {
    "text": "of the information produced on these systems just to give uh one example uh",
    "start": "123920",
    "end": "130319"
  },
  {
    "text": "of a a combination of uh these vectors the",
    "start": "130319",
    "end": "135480"
  },
  {
    "text": "one that we pursue in my lab consider the matter of extracting information",
    "start": "135480",
    "end": "141120"
  },
  {
    "start": "137000",
    "end": "242000"
  },
  {
    "text": "from a computer using physical leakage the computer is sitting there maybe executing algorithms that are perfectly",
    "start": "141120",
    "end": "147920"
  },
  {
    "text": "secure to the best of our knowledge and yet it is a physical device that interacts with the environment by",
    "start": "147920",
    "end": "155319"
  },
  {
    "text": "emitting electromagnetic waves by um changing its power consumption by",
    "start": "155319",
    "end": "161519"
  },
  {
    "text": "creating Noises by changing the electric potential on its ground wires and so on",
    "start": "161519",
    "end": "167959"
  },
  {
    "text": "and each of these can and has been used for extracting secret keys out of computers it can be uh by Touch of hand",
    "start": "167959",
    "end": "175840"
  },
  {
    "text": "to measure electric potential or by putting anal Ator clip on some grounded",
    "start": "175840",
    "end": "182400"
  },
  {
    "text": "wire uh it can be just by putting a sticker under someone's cell phone and measuring the electromagnetic aminations",
    "start": "182400",
    "end": "188840"
  },
  {
    "text": "from its voltage regulator acoustic aminations measured from across a classroom using a microphone observing",
    "start": "188840",
    "end": "195680"
  },
  {
    "text": "the vibrations of capacitors as some cryptographic operation is running and uh conveniently even uh",
    "start": "195680",
    "end": "204000"
  },
  {
    "text": "small semi edible implements that this that is a piece of pet bread that can be",
    "start": "204000",
    "end": "209480"
  },
  {
    "text": "used to measure electromagnetic waves and extract secret keys and when I say extract secret Keys um well you may",
    "start": "209480",
    "end": "216640"
  },
  {
    "text": "recognize some of these logos these uh these are some of the systems that we successfully attacked very common",
    "start": "216640",
    "end": "222599"
  },
  {
    "text": "software very common Hardware algorithms such as RSA lipt curve Dy Helman elgamal",
    "start": "222599",
    "end": "228959"
  },
  {
    "text": "litic curve DSA all of these have been broken by these means and this is just one research",
    "start": "228959",
    "end": "234760"
  },
  {
    "text": "group and its collaborators so there's a there are thousands of papers showing how more can be",
    "start": "234760",
    "end": "240959"
  },
  {
    "text": "done switching over to uh Integrity well in this case let me appeal to the popular media that tells us how uh even",
    "start": "240959",
    "end": "249680"
  },
  {
    "start": "242000",
    "end": "285000"
  },
  {
    "text": "the uh United States Department of Defense cannot fully verify the hardware",
    "start": "249680",
    "end": "255319"
  },
  {
    "text": "that it's using to run its critical computations for example in the",
    "start": "255319",
    "end": "260840"
  },
  {
    "text": "field and of course it goes both ways uh we know that the NSA is retaining the",
    "start": "260840",
    "end": "266919"
  },
  {
    "text": "favor by uh adding features to um a",
    "start": "266919",
    "end": "273039"
  },
  {
    "text": "shipments and route to their customers so how can we ever trust something that comes out of the computer",
    "start": "273039",
    "end": "279479"
  },
  {
    "text": "when this is the reality that we Face how do we know that it hasn't leaked how we know that it is",
    "start": "279479",
    "end": "285440"
  },
  {
    "start": "285000",
    "end": "383000"
  },
  {
    "text": "correct so taking a step back we have a great challenge here and",
    "start": "285680",
    "end": "291919"
  },
  {
    "text": "the traditional ways to cope with it are essentially to be very careful be uh",
    "start": "291919",
    "end": "298039"
  },
  {
    "text": "very sure about where you buy your Hardware where you subcontract your software make sure that everything is",
    "start": "298039",
    "end": "304560"
  },
  {
    "text": "carefully certified and of course bear the expense of that which is unbearable",
    "start": "304560",
    "end": "310000"
  },
  {
    "text": "so even the uh NSA I am told no longer maintains its old Fab it can no longer",
    "start": "310000",
    "end": "315320"
  },
  {
    "text": "produce its old chip chips so what what are uh small companies supposed to do",
    "start": "315320",
    "end": "323240"
  },
  {
    "text": "what are citizens supposed to do to protect their information and what are we all supposed to do in those",
    "start": "323240",
    "end": "328520"
  },
  {
    "text": "adversarial environments Network protocols so I want to make a case uh",
    "start": "328520",
    "end": "335800"
  },
  {
    "text": "that uh modern cryptography offers us wonderful tools to cope with this",
    "start": "335800",
    "end": "341720"
  },
  {
    "text": "problem Ways by which instead of certifying every component we can just use the uh Magic of modern",
    "start": "341720",
    "end": "349440"
  },
  {
    "text": "cryptography um to um somehow get the properties we want a",
    "start": "349440",
    "end": "355560"
  },
  {
    "text": "posterior and this includes both General tools and Theory studying where where um we can apply these technique",
    "start": "355560",
    "end": "363080"
  },
  {
    "text": "such techniques when do they even make sense when they are possible in principle and underw assumptions and",
    "start": "363080",
    "end": "368479"
  },
  {
    "text": "applications to uh specific cases where the things are uh have a need and uh if",
    "start": "368479",
    "end": "375720"
  },
  {
    "text": "efficient enough for execution and in this talk I will focus on the latter for the case of verifying",
    "start": "375720",
    "end": "383360"
  },
  {
    "start": "383000",
    "end": "465000"
  },
  {
    "text": "computation now the Primitive I will discuss the cryptographic Primitive is",
    "start": "383360",
    "end": "388840"
  },
  {
    "text": "called uh snark for succin non-interactive argument of knowledge and we will dwell on the",
    "start": "388840",
    "end": "395560"
  },
  {
    "text": "acronym in a bit but first very informally this uh is a way",
    "start": "395560",
    "end": "401639"
  },
  {
    "text": "to um convince an untrusting party of a computational claim by sending them a",
    "start": "401639",
    "end": "410080"
  },
  {
    "text": "proof of that claim that is short and easy to verify pictorially we have aover",
    "start": "410080",
    "end": "416160"
  },
  {
    "text": "and a verifier there is some computational claim expressed as the claim that some specific function run on",
    "start": "416160",
    "end": "423360"
  },
  {
    "text": "some specific input and some additional witness input ex output some output y",
    "start": "423360",
    "end": "430680"
  },
  {
    "text": "the claim is that there exists such a witness for which this holds and instead",
    "start": "430680",
    "end": "436000"
  },
  {
    "text": "of just trusting that the claim is true snarks let you produce proofs of its of",
    "start": "436000",
    "end": "441039"
  },
  {
    "text": "its truth now we could go both way two ways",
    "start": "441039",
    "end": "446960"
  },
  {
    "text": "we could uh drill down into the formalities of this statements or we can um just uh show a",
    "start": "446960",
    "end": "454240"
  },
  {
    "text": "definition by example motivating each of these properties and that's the track that we'll choose today so I'm going to",
    "start": "454240",
    "end": "461720"
  },
  {
    "text": "motivate the study of snarks by a system called zero cach",
    "start": "461720",
    "end": "469280"
  },
  {
    "start": "465000",
    "end": "529000"
  },
  {
    "text": "decentralized Anonymous payments from Bitcoins uh and um some of you may be",
    "start": "469280",
    "end": "475800"
  },
  {
    "text": "aware of it and may also be aware that it's currently being a commercialized and deployed may be wondering am I",
    "start": "475800",
    "end": "481720"
  },
  {
    "text": "plugging my uh stake in some company well it's the other way around the",
    "start": "481720",
    "end": "488680"
  },
  {
    "text": "reason that deployment is happening in the first place is that zero cache is a",
    "start": "488680",
    "end": "494400"
  },
  {
    "text": "wonderful example of of the power of snarks what they're good for and the properties uh that uh um make them most",
    "start": "494400",
    "end": "502560"
  },
  {
    "text": "pertinent to Applications so let's drill in um just to uh avoid any shade of",
    "start": "502560",
    "end": "508840"
  },
  {
    "text": "doubt or Shadow of Doubt I will uh stay consistent to the original",
    "start": "508840",
    "end": "514518"
  },
  {
    "text": "academic paper so for those who are familiar with zcash the digital currency",
    "start": "514519",
    "end": "520360"
  },
  {
    "text": "um I will use different notation and simplified constructions so um bitcoin's privacy",
    "start": "520360",
    "end": "528800"
  },
  {
    "text": "problem uh I guess everyone here is familiar with Bitcoin but um how many of",
    "start": "528800",
    "end": "533920"
  },
  {
    "start": "529000",
    "end": "687000"
  },
  {
    "text": "you are aware that whenever you use Bitcoin you are essentially broadcasting your transactions everywhere",
    "start": "533920",
    "end": "541440"
  },
  {
    "text": "okay about a fourth of the audience here and let's see why Bitcoin actually does",
    "start": "542320",
    "end": "548079"
  },
  {
    "text": "that horrible thing and why it's inherent so in Bitcoin every coin every",
    "start": "548079",
    "end": "553320"
  },
  {
    "text": "piece of currency is represented by knowledge of a number and payment is represented by sending that number and",
    "start": "553320",
    "end": "558720"
  },
  {
    "text": "that means that the number can be sent over and over to different merchants and they would all accept it this is called",
    "start": "558720",
    "end": "564120"
  },
  {
    "text": "the double spending problem which is obviously uh very bad for the uh for the car",
    "start": "564120",
    "end": "570079"
  },
  {
    "text": "so the way this is solved by Satoshi nakamoto's scheme is using the",
    "start": "570079",
    "end": "576240"
  },
  {
    "text": "blockchain a PL public Ledger where every transaction is broadcast in real time and this makes double spending",
    "start": "576240",
    "end": "583000"
  },
  {
    "text": "detection very easy we just uh make sure whenever we accept a payment that the",
    "start": "583000",
    "end": "590680"
  },
  {
    "text": "the source of the funds for for this payment hasn't been used before and then we broadcast that",
    "start": "590680",
    "end": "597320"
  },
  {
    "text": "payment to make sure that others will know that it's already spent the specifics of this and the assumptions",
    "start": "597320",
    "end": "602440"
  },
  {
    "text": "under which it works are somewhat less trivial but just by saying this we",
    "start": "602440",
    "end": "607560"
  },
  {
    "text": "already see how inherit it is to publish every detail of every transaction who paid whom and how",
    "start": "607560",
    "end": "613600"
  },
  {
    "text": "much and that means that we've completely lost privacy consumers broadcast their",
    "start": "613600",
    "end": "620760"
  },
  {
    "text": "purchases Merchants broadcast their cash flow um account balances are revealed",
    "start": "620760",
    "end": "627279"
  },
  {
    "text": "not something that we would accept um in a regular payment scheme a regular",
    "start": "627279",
    "end": "633760"
  },
  {
    "text": "currency but uh with Bitcoin it has so many other advantages that this uh seems",
    "start": "633760",
    "end": "640480"
  },
  {
    "text": "to have gone unappreciated for a",
    "start": "640480",
    "end": "645199"
  },
  {
    "text": "while now those familiar with Bitcoin should object and say that it's not",
    "start": "646639",
    "end": "652360"
  },
  {
    "text": "people's names that's written there it's only pseudonyms or keys that they can invent but um in practice most users",
    "start": "652360",
    "end": "659720"
  },
  {
    "text": "especially those that have nothing to uh hide uh use few ADV veres and therefore",
    "start": "659720",
    "end": "665000"
  },
  {
    "text": "are easy to track and there are numerous Works showing how the the transaction graph can be analyzed to extract",
    "start": "665000",
    "end": "670920"
  },
  {
    "text": "information it's also a risk to the frangibility of the currency the fact the fact that coins can be distinguished",
    "start": "670920",
    "end": "677480"
  },
  {
    "text": "and their history can be told meaning they may assign different value which undermines another fundamental tenant of",
    "start": "677480",
    "end": "686160"
  },
  {
    "text": "currencies so zero cach the sketch is a privacy preserving protocol",
    "start": "686399",
    "end": "693079"
  },
  {
    "start": "687000",
    "end": "724000"
  },
  {
    "text": "that provides all of the uh functionality of Bitcoin but if you look",
    "start": "693079",
    "end": "699000"
  },
  {
    "text": "at the blockchain what you see is a bunch of meaningless values random",
    "start": "699000",
    "end": "704120"
  },
  {
    "text": "numbers Cipher texts and zero knowledge proof that we' get to in a second that reveal nothing and someone standing on",
    "start": "704120",
    "end": "711320"
  },
  {
    "text": "the side the third party knows nothing about where who paid whom and how much in every individual transactions only",
    "start": "711320",
    "end": "717800"
  },
  {
    "text": "those involved in the transaction know its details and of course and essentially they know that it's",
    "start": "717800",
    "end": "724079"
  },
  {
    "start": "724000",
    "end": "940000"
  },
  {
    "text": "legit and um jumping ahead but just to set the stage uh the system is practical",
    "start": "724440",
    "end": "730680"
  },
  {
    "text": "uh proofs are a few hundred bytes long they take a few milliseconds to verify and less than a minute on a typical",
    "start": "730680",
    "end": "735959"
  },
  {
    "text": "computer to create there are some system parameters that are a bit annoying but practical everything works out there is",
    "start": "735959",
    "end": "743519"
  },
  {
    "text": "a trust assumption that uh is needed in order to create uh those system",
    "start": "743519",
    "end": "749199"
  },
  {
    "text": "parameters the public parameters I will discuss that later uh and there are cryptographic assumptions so um the the",
    "start": "749199",
    "end": "757639"
  },
  {
    "text": "underlying cryptographic scheme namely the snark will require some computational assumptions uh about how",
    "start": "757639",
    "end": "765440"
  },
  {
    "text": "simple some specific simple problems uh are hard to solve and from that the security of the whole system",
    "start": "765440",
    "end": "773760"
  },
  {
    "text": "follows now why do I even mention zero cache and what does it have to do with",
    "start": "774040",
    "end": "779240"
  },
  {
    "text": "arcs so here's a cartoon version of the scheme um and I'll start by a series of",
    "start": "779240",
    "end": "785880"
  },
  {
    "text": "very simple constructions starting with a very silly one then getting to one that's uh",
    "start": "785880",
    "end": "793560"
  },
  {
    "text": "actually secure but very but doesn't have much functionality and then um I'll",
    "start": "793560",
    "end": "799320"
  },
  {
    "text": "get I'll give a glimpse into what the full thing looks like along the way we appreciate the needed properties of",
    "start": "799320",
    "end": "805440"
  },
  {
    "text": "snarks so here's the scenario uh we look at a specific transaction ction and there's a seller and a merchant the",
    "start": "805440",
    "end": "812079"
  },
  {
    "text": "seller the mer sorry um a a consumer in a merchant the consumer wants to",
    "start": "812079",
    "end": "819000"
  },
  {
    "text": "transfer 42 Bitcoins to the merchant so uh he just tells the merchant the merchant here are 42 Bitcoins",
    "start": "819000",
    "end": "827040"
  },
  {
    "text": "represented as some number and the merchant looks at that and has no idea whether that number is okay or not uh",
    "start": "827040",
    "end": "833839"
  },
  {
    "text": "the the legitimacy of that number relates to how it um",
    "start": "833839",
    "end": "840240"
  },
  {
    "text": "connects to previous transactions is it a correct withdrawal of funds from a prior",
    "start": "840240",
    "end": "846440"
  },
  {
    "text": "transaction now the consumer knows that information so they could just s send",
    "start": "846440",
    "end": "852160"
  },
  {
    "text": "that information about where they got the money to the merchant for the merchant to verify and that's essentially what happens in Bitcoins in",
    "start": "852160",
    "end": "858560"
  },
  {
    "text": "Bitcoin that loses privacy and we don't want that well imagine instead if we could",
    "start": "858560",
    "end": "865079"
  },
  {
    "text": "somehow bring in a magical accountant that would look at uh the consumer's books and verify them and make sure that",
    "start": "865079",
    "end": "871920"
  },
  {
    "text": "the money is correctly transferred into this payment and then the accountant would send a signature to the",
    "start": "871920",
    "end": "878480"
  },
  {
    "text": "merchant well if the accountant is available and trusted then that's satisfactory and um it needs to be",
    "start": "878480",
    "end": "885079"
  },
  {
    "text": "trusted both by the merchant that it doesn't falsely sign and by the consumer",
    "start": "885079",
    "end": "891759"
  },
  {
    "text": "that it doesn't leak the information these are Big assumptions it's very awkward um so let's see if we can",
    "start": "891759",
    "end": "898320"
  },
  {
    "text": "somehow aim emulate this digitally so the key point is that this",
    "start": "898320",
    "end": "904800"
  },
  {
    "text": "account that has an algorithm that he's supposed to run and once we are in the realm of algorithms and",
    "start": "904800",
    "end": "910320"
  },
  {
    "text": "computations then we can create we can create proofs that the algorithm run",
    "start": "910320",
    "end": "915920"
  },
  {
    "text": "correctly and that will substitute for the physical accountant and let's see what properties we need for this",
    "start": "915920",
    "end": "924079"
  },
  {
    "text": "proof to um to uh give the properties",
    "start": "924079",
    "end": "930839"
  },
  {
    "text": "needed by the surrounding crypto system and Sorry by the surrounding crypto currency in our",
    "start": "930839",
    "end": "940519"
  },
  {
    "text": "setting so uh let's generalize this just to avoid speaking uh more",
    "start": "940519",
    "end": "947720"
  },
  {
    "text": "About Accountants and uh in books what we have here is some form of NP",
    "start": "947839",
    "end": "953279"
  },
  {
    "text": "statement of the form we showed before and uh there's an NP witness and there's",
    "start": "953279",
    "end": "959000"
  },
  {
    "text": "an NP decision algorithm and we want this system for",
    "start": "959000",
    "end": "964720"
  },
  {
    "text": "producing the proof to actually be a proof system in a sense of providing soundness we're going to relax this to",
    "start": "964720",
    "end": "971199"
  },
  {
    "text": "computational soundness namely soundness against any cheating Pro that is computationally bounded asymptotically",
    "start": "971199",
    "end": "978800"
  },
  {
    "text": "runs in polinomial time concretely bounded by some specific running time",
    "start": "978800",
    "end": "984480"
  },
  {
    "text": "under well accepted cryptographic hardness assumptions so so the nickname",
    "start": "984480",
    "end": "990160"
  },
  {
    "text": "for computationally sound proofs is arguments so we're going to use that the",
    "start": "990160",
    "end": "995240"
  },
  {
    "text": "next property we want is for the proof to be non-interactive uh surely we don't want",
    "start": "995240",
    "end": "1000600"
  },
  {
    "text": "too much back and forth but in this case in the context of a crypto currency",
    "start": "1000600",
    "end": "1006079"
  },
  {
    "text": "these proofs are going to end up on on the public Ledger on the blockchain and other people are going to check them and",
    "start": "1006079",
    "end": "1012160"
  },
  {
    "text": "our po consumer can't interact with everyone into the future going forward so it must be something you can write",
    "start": "1012160",
    "end": "1017319"
  },
  {
    "text": "down on interactively next uh it must be What's called the",
    "start": "1017319",
    "end": "1022720"
  },
  {
    "text": "proof of knowledge uh meaning that um it's not just that there exists",
    "start": "1022720",
    "end": "1029319"
  },
  {
    "text": "a a witness for the NP statement but the consumer actually knows it it's not just",
    "start": "1029319",
    "end": "1035880"
  },
  {
    "text": "that there could have been transactions leading to this payment but the uh consumer actually knows those",
    "start": "1035880",
    "end": "1042240"
  },
  {
    "text": "transactions and the corresponding secret keys that are embedded uh into them as proof of his ownership of the",
    "start": "1042240",
    "end": "1049600"
  },
  {
    "text": "coin this is a s technical condition but it's essential and uh that's why we had the proof of knowledge",
    "start": "1049600",
    "end": "1056480"
  },
  {
    "text": "requirement uh more immediately we want succinctness and in the sense of uh",
    "start": "1056480",
    "end": "1063520"
  },
  {
    "text": "short proofs and easy verification that's important because",
    "start": "1063520",
    "end": "1069160"
  },
  {
    "text": "they they end up on the blockchain and everybody has to verify them to make that the blockchain is correct if they",
    "start": "1069160",
    "end": "1074640"
  },
  {
    "text": "want to be really convinced and conveniently enough if you take this sort of acronym what you get",
    "start": "1074640",
    "end": "1081039"
  },
  {
    "text": "is snark and uh these are the essential properties there is one more",
    "start": "1081039",
    "end": "1087240"
  },
  {
    "text": "property which is uh zero knowledge and that's the property that",
    "start": "1087240",
    "end": "1093400"
  },
  {
    "text": "defends our consumer from leakage of his Secrets because it could have been that",
    "start": "1093400",
    "end": "1099799"
  },
  {
    "text": "uh these proofs actually leak everything that is dear to the consumer's privacy",
    "start": "1099799",
    "end": "1106000"
  },
  {
    "text": "maybe uh the proof is simply a copy of those books right that would be sound um so we want the zero knowledge",
    "start": "1106000",
    "end": "1113600"
  },
  {
    "text": "property that says it doesn't happen the formal definition is uh counterintuitive",
    "start": "1113600",
    "end": "1119000"
  },
  {
    "text": "on the first dozen times you hear it but essentially it says that anything the uh",
    "start": "1119000",
    "end": "1125559"
  },
  {
    "text": "verifier the merchant could have learned um sorry everything he learns from the proof he could have learned just by uh",
    "start": "1125559",
    "end": "1133840"
  },
  {
    "text": "emulating the proof using the information he already has",
    "start": "1133840",
    "end": "1139200"
  },
  {
    "text": "so uh zero knowledge snarks that's what we're after ZK snarks and there's quite",
    "start": "1139200",
    "end": "1146360"
  },
  {
    "start": "1145000",
    "end": "1305000"
  },
  {
    "text": "a few of them in the literature um if you look back the term snar is uh modern",
    "start": "1146360",
    "end": "1152120"
  },
  {
    "text": "but uh variants of the in precursors have been studied for several decades",
    "start": "1152120",
    "end": "1158600"
  },
  {
    "text": "and um it started with um questions about",
    "start": "1158600",
    "end": "1165919"
  },
  {
    "text": "uh fund fundamental properties of computation in in the theoretical sense",
    "start": "1165919",
    "end": "1172360"
  },
  {
    "text": "can computations be summarized into short proofs in principle um it strongly",
    "start": "1172360",
    "end": "1179039"
  },
  {
    "text": "relates to probabilistically checkable proofs motivated until recently mostly",
    "start": "1179039",
    "end": "1184440"
  },
  {
    "text": "by uh uh hardness results in uh theoretical computer science and yet",
    "start": "1184440",
    "end": "1192720"
  },
  {
    "text": "um all of those um older type of snar or pre carer to",
    "start": "1192720",
    "end": "1200159"
  },
  {
    "text": "snarks um they followed a certain pattern which uh is basically taking",
    "start": "1200159",
    "end": "1206679"
  },
  {
    "text": "probabilistically checkable proofs and then applying some lightweight cryptography to compress them this uh",
    "start": "1206679",
    "end": "1213480"
  },
  {
    "text": "unfortunately wasn't very efficient just because those uh probally checkable proofs while polinomial time which is a",
    "start": "1213480",
    "end": "1220000"
  },
  {
    "text": "marvelous theoretical Discovery um are too slow in practice um the ex for a",
    "start": "1220000",
    "end": "1227559"
  },
  {
    "text": "long time it was Al in the sense of n to the 17 uh now we know how to get it down to poly logarithmic but the concrete",
    "start": "1227559",
    "end": "1234799"
  },
  {
    "text": "numbers are still not conducive to the kind of applications I show but much more recently there's a CP of new snarks",
    "start": "1234799",
    "end": "1242280"
  },
  {
    "text": "that uh have a trade-off they introduce some pre-processing or common reference string that is created in advance and in",
    "start": "1242280",
    "end": "1250440"
  },
  {
    "text": "exchange for that they are much more efficient and these are the ones that um",
    "start": "1250440",
    "end": "1255840"
  },
  {
    "text": "are used by zeroc cache and by most other",
    "start": "1255840",
    "end": "1261520"
  },
  {
    "text": "applications so let's uh look how these are used for",
    "start": "1261960",
    "end": "1267960"
  },
  {
    "text": "used Z cach so suppose you have such a snark",
    "start": "1267960",
    "end": "1275520"
  },
  {
    "text": "and um you want to create a",
    "start": "1275520",
    "end": "1281159"
  },
  {
    "text": "cryptocurrency well the first thing you you think to do is to just issue tokens give people random numbers and say uh",
    "start": "1281159",
    "end": "1287679"
  },
  {
    "text": "your know of the random number represents um um your ownership of some",
    "start": "1287679",
    "end": "1293720"
  },
  {
    "text": "unit of currency and in order to Mint to create a new random number you prove",
    "start": "1293720",
    "end": "1299120"
  },
  {
    "text": "that you spent some resource say put into escrow some Bitcoin and then you get",
    "start": "1299120",
    "end": "1306159"
  },
  {
    "text": "serial number and all of these serial numbers are public and then when you want to",
    "start": "1306159",
    "end": "1311760"
  },
  {
    "text": "withdraw uh or to spend such a coin you would um just publish a serial number",
    "start": "1311760",
    "end": "1318799"
  },
  {
    "text": "say hey this is serial number that is in the public Ledger uh I'm entitled to something in return right this would be",
    "start": "1318799",
    "end": "1325279"
  },
  {
    "text": "the spending event unfortunately this is very insecure because everybody sees those numbers so everybody can say okay",
    "start": "1325279",
    "end": "1332039"
  },
  {
    "text": "that one's mine that one's mine and get and get to spend other people's money so",
    "start": "1332039",
    "end": "1337799"
  },
  {
    "text": "we can do that uh here's a a very nice idea by",
    "start": "1337799",
    "end": "1342880"
  },
  {
    "start": "1339000",
    "end": "1605000"
  },
  {
    "text": "sander and tashma um that fixes the the first problem and the IDE is to use",
    "start": "1342880",
    "end": "1348520"
  },
  {
    "text": "cryptographic commitment scheme um a function that has two inputs in our case the serial number and the",
    "start": "1348520",
    "end": "1355120"
  },
  {
    "text": "commitment Randomness it produces a commitment value for the coin um and uh if you haven't seen this",
    "start": "1355120",
    "end": "1362400"
  },
  {
    "text": "before just imagine it's a very random looking cash function that theistically would do and the way that we issue coins",
    "start": "1362400",
    "end": "1368799"
  },
  {
    "text": "now is by saying um I've I'm entitled to a new coin uh because uh I gave",
    "start": "1368799",
    "end": "1376760"
  },
  {
    "text": "something in return and and um here is my coin commitment for that",
    "start": "1376760",
    "end": "1384039"
  },
  {
    "text": "coin under the hood what I did is I uh came up with a serial",
    "start": "1384039",
    "end": "1390679"
  },
  {
    "text": "number and uh a commitment Randomness random through the commitment function and I got the commitment value for the",
    "start": "1390679",
    "end": "1396919"
  },
  {
    "text": "coin which I published and what what goes on the blockchain is just those commitment values so you there's some notation here",
    "start": "1396919",
    "end": "1403960"
  },
  {
    "text": "and color coding uh the brown stuff is what I keep in my private wallet that's proof of my ownership and um the uh blue",
    "start": "1403960",
    "end": "1412440"
  },
  {
    "text": "stuff is what in the public Ledger now when the day comes to spend the coin I'm going to say hey everybody I am now",
    "start": "1412440",
    "end": "1419640"
  },
  {
    "text": "going to use one of those coins whose commitments is in the ledger so uh here's the serial number of",
    "start": "1419640",
    "end": "1426320"
  },
  {
    "text": "the coin here's the randomness and here's the commitment you can make sure that the commitment is in the redger and you can make sure that uh if you plug",
    "start": "1426320",
    "end": "1433600"
  },
  {
    "text": "serial number and Randomness into the function you get the claimed value okay very elegant",
    "start": "1433600",
    "end": "1440440"
  },
  {
    "text": "but there's still a problem here and that's that uh I've just",
    "start": "1440960",
    "end": "1446400"
  },
  {
    "text": "revealed the relation between my spending event and the minting event because this commitment value in",
    "start": "1446400",
    "end": "1454400"
  },
  {
    "text": "the spending event can be linked to the time where the the same value was added to the ledger so that breaks privacy",
    "start": "1454400",
    "end": "1461840"
  },
  {
    "text": "that means that someone who observes the transactions can link the spending and demanding but now",
    "start": "1461840",
    "end": "1469159"
  },
  {
    "text": "we are in a better shape to uh use zero knowledge proofs and here's what we're",
    "start": "1469159",
    "end": "1475039"
  },
  {
    "text": "going to do we're going to build a hash of to run the hash",
    "start": "1475039",
    "end": "1482919"
  },
  {
    "text": "on I'm sorry I'm sa deprived we're going to use a hash function to build a",
    "start": "1482919",
    "end": "1489279"
  },
  {
    "text": "miracle hash tree over all of these commitments and um for those who haven't",
    "start": "1489279",
    "end": "1496159"
  },
  {
    "text": "seen this you just take Pairs and apply the hash function recursively to get the root and this uh forms a commitment to",
    "start": "1496159",
    "end": "1504279"
  },
  {
    "text": "the values of everything in the Ledger now this so far everything is",
    "start": "1504279",
    "end": "1510640"
  },
  {
    "text": "public now in order to spend a value to spend the coin I reveal it serial number",
    "start": "1510640",
    "end": "1517640"
  },
  {
    "text": "and I want to convince everyone that I know the r and CM that",
    "start": "1517640",
    "end": "1522960"
  },
  {
    "text": "match um the serial number without revealing the CM",
    "start": "1522960",
    "end": "1529799"
  },
  {
    "text": "but this is um this is something that uh we can express as an algorithm uh the",
    "start": "1529840",
    "end": "1537039"
  },
  {
    "text": "the fact that a given cm is in a tree whose root is given is something that we",
    "start": "1537039",
    "end": "1543279"
  },
  {
    "text": "can write an algorithm to verify and actually because uh it's a tree structure we can verify it very",
    "start": "1543279",
    "end": "1548880"
  },
  {
    "text": "efficiently in size logarithmic in in the in the number of commitment so far",
    "start": "1548880",
    "end": "1554039"
  },
  {
    "text": "so we end up with a statement saying that the commitment is in the tree and it matches the r and the",
    "start": "1554039",
    "end": "1559200"
  },
  {
    "text": "and this statement we can verify in zero knowledge um and uh that would",
    "start": "1559200",
    "end": "1568320"
  },
  {
    "text": "uh and and that would give us the requisite properties let's have one more run over the properties of the snarks to",
    "start": "1568320",
    "end": "1574120"
  },
  {
    "text": "make sure that we got them right we need soundness we need it to be non- interactive we need zero knowledge to",
    "start": "1574120",
    "end": "1581120"
  },
  {
    "text": "protect CM that gives us privacy and we need of of knowledge because of the uh",
    "start": "1581120",
    "end": "1587000"
  },
  {
    "text": "computational hardness of finding collisions in in the hash function that's the technical condition and we",
    "start": "1587000",
    "end": "1592200"
  },
  {
    "text": "need to sign for efficiency okay so this is the cartoon version of how we use",
    "start": "1592200",
    "end": "1597640"
  },
  {
    "text": "snarks in a zero cach like protocol but now that we here we have the power of General NP",
    "start": "1597640",
    "end": "1606000"
  },
  {
    "start": "1605000",
    "end": "1703000"
  },
  {
    "text": "statements and with great power comes great functionality because now we can extend",
    "start": "1606000",
    "end": "1613799"
  },
  {
    "text": "this uh Tuple of value and relations between them to add a additional values",
    "start": "1613799",
    "end": "1619320"
  },
  {
    "text": "and additional relations to get more out of our cryptocurrency for example we can add uh",
    "start": "1619320",
    "end": "1626520"
  },
  {
    "text": "a denomination or value to every coin so coins will not all have equal Val value",
    "start": "1626520",
    "end": "1634799"
  },
  {
    "text": "economically but uh people can hold a different coins of different",
    "start": "1634799",
    "end": "1641120"
  },
  {
    "text": "denomination clearly needed and to do that we augmented the data structure",
    "start": "1641120",
    "end": "1646159"
  },
  {
    "text": "with some additional values I will not go into the deta dets we also change the zero knowledge proof to check those",
    "start": "1646159",
    "end": "1653159"
  },
  {
    "text": "values if you want to enable direct transfers of payments between people",
    "start": "1653159",
    "end": "1658520"
  },
  {
    "text": "then we need additional Machinery we need to be able to somehow encode a coin",
    "start": "1658520",
    "end": "1663760"
  },
  {
    "text": "in a way that can be decoded only by a designated recipient and then have the",
    "start": "1663760",
    "end": "1669640"
  },
  {
    "text": "recipient know that this coin is addressed to him so and only that recipient can then uh continue using",
    "start": "1669640",
    "end": "1677080"
  },
  {
    "text": "that coin for subsid transaction um and that requires",
    "start": "1677080",
    "end": "1682600"
  },
  {
    "text": "some keys to identify people every user would have a private key and a public",
    "start": "1682600",
    "end": "1687720"
  },
  {
    "text": "key and these keys go into a much larger Tuple with additional relations we won't go into the details",
    "start": "1687720",
    "end": "1694480"
  },
  {
    "text": "they are you can find them all in the zero cach paper and the uh subsequent",
    "start": "1694480",
    "end": "1700080"
  },
  {
    "text": "evolution in the zcash specification let me just say that everything here can be abstracted into a",
    "start": "1700080",
    "end": "1708200"
  },
  {
    "start": "1703000",
    "end": "1793000"
  },
  {
    "text": "transaction that subsumes all the things that need need to be done in a Bitcoin like digital currency we call this the",
    "start": "1708200",
    "end": "1716159"
  },
  {
    "text": "poor transaction in the paper uh it consumes two old zero zero cash coins",
    "start": "1716159",
    "end": "1721880"
  },
  {
    "text": "and it uh creates or means to new zero cash coins and it also can withdraw some",
    "start": "1721880",
    "end": "1729799"
  },
  {
    "text": "of the of that hidden money into public Bitcoins that's uh in case you need to pay transaction fees and",
    "start": "1729799",
    "end": "1736399"
  },
  {
    "text": "such and then um it also get instructions on how much value to send",
    "start": "1736399",
    "end": "1742120"
  },
  {
    "text": "to each uh dtin to each output coin in using the extended scheme that",
    "start": "1742120",
    "end": "1749960"
  },
  {
    "text": "we we've just glimpsed that let us address coins to specific people and how much to send",
    "start": "1749960",
    "end": "1757559"
  },
  {
    "text": "them and um the results fulfill the instructions and then everything gets",
    "start": "1757559",
    "end": "1764000"
  },
  {
    "text": "packed into something that goes on the blockchain consisting of the the the serial numbers of the consumed coins to",
    "start": "1764000",
    "end": "1770320"
  },
  {
    "text": "tell everybody hey these are consumed if you ever see the serial numbers again this this then disregard them this is",
    "start": "1770320",
    "end": "1776080"
  },
  {
    "text": "double span attempt um there's uh the commitments of the new coins and there's a zero",
    "start": "1776080",
    "end": "1782320"
  },
  {
    "text": "knowledge proof that everything held and in particular that the sum of the old coins is consistent with the sum of the",
    "start": "1782320",
    "end": "1789159"
  },
  {
    "text": "newly produced coins so this is a non-trivial system",
    "start": "1789159",
    "end": "1796720"
  },
  {
    "start": "1793000",
    "end": "2579000"
  },
  {
    "text": "actually implementing this uh is a long exercise it starts with an implementation of the snark using lib",
    "start": "1796720",
    "end": "1803200"
  },
  {
    "text": "snark a library that we developed uh then we have to um create the specific",
    "start": "1803200",
    "end": "1810039"
  },
  {
    "text": "tuples and relations for for zero cache and express our",
    "start": "1810039",
    "end": "1816399"
  },
  {
    "text": "computation that um function that checks merul trees and",
    "start": "1816399",
    "end": "1822519"
  },
  {
    "text": "SS and so forth we need to express them in a particular language of constraints that lebs Nar can",
    "start": "1822519",
    "end": "1828679"
  },
  {
    "text": "consume um all of this is encapsulated into a library and then uh there's a a",
    "start": "1828679",
    "end": "1834919"
  },
  {
    "text": "variant of Bitcoin that integrates the old Bitcoin code Bitcoin code called Bitcoin d uh with lib zero cach and uh",
    "start": "1834919",
    "end": "1843760"
  },
  {
    "text": "in the academic paper we had a network simulation showing that everything can run with adequate parameters and",
    "start": "1843760",
    "end": "1848799"
  },
  {
    "text": "efficiency to support something that is Bitcoin scale uh nowadays uh we actually",
    "start": "1848799",
    "end": "1854559"
  },
  {
    "text": "have a test network with thousands of users World Drive who are using the uh evolution of this",
    "start": "1854559",
    "end": "1861760"
  },
  {
    "text": "architecture and U it's uh it supports",
    "start": "1861760",
    "end": "1867360"
  },
  {
    "text": "um the uh efficiency requirements and in terms of security well so far so good uh",
    "start": "1867360",
    "end": "1874760"
  },
  {
    "text": "I should mention the obvious um all of this is uh very carefully analyzed what",
    "start": "1874760",
    "end": "1880080"
  },
  {
    "text": "I've just sketched here in uh in the paper and and spec uh is very precisely",
    "start": "1880080",
    "end": "1885559"
  },
  {
    "text": "specified up to the last bit and and uh the the security properties are",
    "start": "1885559",
    "end": "1891399"
  },
  {
    "text": "precisely defined and proven so",
    "start": "1891399",
    "end": "1898559"
  },
  {
    "text": "um I was hoping to say something about uh house knars are constructed uh but it",
    "start": "1898559",
    "end": "1904799"
  },
  {
    "text": "doesn't look like the time constraints will allow that so let me just",
    "start": "1904799",
    "end": "1911240"
  },
  {
    "text": "um say one thing that is important to know in some applications uh zero cach",
    "start": "1911240",
    "end": "1916519"
  },
  {
    "text": "is one of them and then say a few words about where snarks come from in the grand scheme of things and",
    "start": "1916519",
    "end": "1923639"
  },
  {
    "text": "techniques so we are in the NP setting uh and we want snars to look like",
    "start": "1923639",
    "end": "1929559"
  },
  {
    "text": "this um sorry that's redundant okay but",
    "start": "1929559",
    "end": "1936720"
  },
  {
    "text": "actually they look like this in order to uh use the uh most efficient snarks",
    "start": "1936720",
    "end": "1943159"
  },
  {
    "text": "available those on the bottom left of the of the preceding slide",
    "start": "1943159",
    "end": "1949440"
  },
  {
    "text": "um we need the to create those system parameters public parameters um that's something essential",
    "start": "1949440",
    "end": "1957159"
  },
  {
    "text": "to the way the scheme works it uh you can think about the those parameters as",
    "start": "1957159",
    "end": "1963159"
  },
  {
    "text": "um sort of building a template of what the computation should look like in encrypted form and then uh the actual",
    "start": "1963159",
    "end": "1970480"
  },
  {
    "text": "proofs shows that a particular claim and witness fall into that template so the",
    "start": "1970480",
    "end": "1976240"
  },
  {
    "text": "computation is of the template takes roughly as long as as proving um and uh",
    "start": "1976240",
    "end": "1982519"
  },
  {
    "text": "which is much much slower than uh the native computation um I I should have mentioned",
    "start": "1982519",
    "end": "1991159"
  },
  {
    "text": "this before proving is much much slower the native computation for example the snar for zero cache take about a minute",
    "start": "1991159",
    "end": "1999080"
  },
  {
    "text": "to uh produce a proof for whereas if you just blindly trusted the consumer it",
    "start": "1999080",
    "end": "2005240"
  },
  {
    "text": "would uh take a fraction of mill second but back here so there's the",
    "start": "2005240",
    "end": "2012240"
  },
  {
    "text": "generator and the generator produces Keys a proving key and a verifying key that will be used by the parties",
    "start": "2012240",
    "end": "2020000"
  },
  {
    "text": "later so uh you have to take care of this uh generation you have to do it in a secure way um for example in zerach uh",
    "start": "2020480",
    "end": "2029840"
  },
  {
    "text": "this is a big deal because uh any compromise of those uh proven Keys could",
    "start": "2029840",
    "end": "2036159"
  },
  {
    "text": "lead to a counter feating of coins so uh there was actually very complicated",
    "start": "2036159",
    "end": "2042679"
  },
  {
    "text": "cryptographic ceremony done with a multiparty computation involving multiple nodes that uh participate in",
    "start": "2042679",
    "end": "2050480"
  },
  {
    "text": "order to create those keys and the guarantee is that if even at least one",
    "start": "2050480",
    "end": "2056800"
  },
  {
    "text": "of them is honest and deletes his transient Secrets then the result is safe to use",
    "start": "2056800",
    "end": "2064240"
  },
  {
    "text": "and um the soundness of the SN snark holes that's one way to approach it",
    "start": "2064240",
    "end": "2072398"
  },
  {
    "text": "there also many other variants of snarks that I will not go into Bes beside this question of uh whether the public",
    "start": "2072399",
    "end": "2079320"
  },
  {
    "text": "parameters exist or not they may or may not depend on the choice of function it be expensive or cheap um there's a",
    "start": "2079320",
    "end": "2086560"
  },
  {
    "text": "question of who can verify the snarks or not we're going to uh for now focus on",
    "start": "2086560",
    "end": "2091919"
  },
  {
    "text": "the particular most natural definition of snar which is ex",
    "start": "2091919",
    "end": "2097880"
  },
  {
    "text": "ly what you would expect from the applications except that it does have the trusted setup which is something we",
    "start": "2097880",
    "end": "2104480"
  },
  {
    "text": "have to manage now these snars have evolved marvelously uh since their Inception uh",
    "start": "2104480",
    "end": "2112599"
  },
  {
    "text": "in 2010 by wonderful paper by yes growth he first showed how pre-processing snarks can be built and what and how",
    "start": "2112599",
    "end": "2120119"
  },
  {
    "text": "they uh improve certain parameters most strikingly Su synness uh and um without even going",
    "start": "2120119",
    "end": "2128000"
  },
  {
    "text": "into the specifics you can see that there has been a lot of progress um the",
    "start": "2128000",
    "end": "2134280"
  },
  {
    "text": "particular snark that is the most popular nowadays because it gives the best trade-off the one using lip snark",
    "start": "2134280",
    "end": "2140560"
  },
  {
    "text": "is the based on uh papers by ggpr and pgr and their inter imple re",
    "start": "2140560",
    "end": "2146680"
  },
  {
    "text": "interpretations and tweaks including by by us and um the Striking thing is that",
    "start": "2146680",
    "end": "2153480"
  },
  {
    "text": "uh it the proofs for this snark are just seven or eight field elements uh where",
    "start": "2153480",
    "end": "2160000"
  },
  {
    "text": "the field is that of your typical elliptic curve so a few hundred",
    "start": "2160000",
    "end": "2166559"
  },
  {
    "text": "bytes now showing how this works is something that I would have loved to do",
    "start": "2167200",
    "end": "2172319"
  },
  {
    "text": "here uh time did not allow let me give you that promised Glimpse the way all of",
    "start": "2172319",
    "end": "2178359"
  },
  {
    "text": "these preprocessing snarks work is they start with an algebraic part where they",
    "start": "2178359",
    "end": "2184520"
  },
  {
    "text": "take the witness and encode it into a form that can be probab probabilistically checked a form where",
    "start": "2184520",
    "end": "2192160"
  },
  {
    "text": "if someone actually wrote it down and you could query it then you could very easily make sure that the witness is a",
    "start": "2192160",
    "end": "2198520"
  },
  {
    "text": "correct witness for the claim statement and moreover um the uh those queries are",
    "start": "2198520",
    "end": "2205319"
  },
  {
    "text": "all linear functions so the witness is encoded into",
    "start": "2205319",
    "end": "2211240"
  },
  {
    "text": "um into a string then a few linear queries are done by by Computing linear",
    "start": "2211240",
    "end": "2216599"
  },
  {
    "text": "combinations of the string and then with overwhelming probability um whenever the um some",
    "start": "2216599",
    "end": "2224040"
  },
  {
    "text": "equations hold on the results of these queries the uh computational claim is",
    "start": "2224040",
    "end": "2230960"
  },
  {
    "text": "correct but the problem is that uh we don't this encoding is too big it's bigger than the witness so we don't want",
    "start": "2230960",
    "end": "2237720"
  },
  {
    "text": "the approver to send it over and this is where cryptography comes into the picture we use cryptographic tools to",
    "start": "2237720",
    "end": "2244480"
  },
  {
    "text": "First encode the queries so the adversaries uh can keep the encoded W",
    "start": "2244480",
    "end": "2251960"
  },
  {
    "text": "the adversary being the cheating prover can keep the encoded witness to",
    "start": "2251960",
    "end": "2257960"
  },
  {
    "text": "himself and when he gets the the queries in encrypted form they don't know what's",
    "start": "2257960",
    "end": "2263040"
  },
  {
    "text": "being asked and therefore they can't try to fool the verifier in how he",
    "start": "2263040",
    "end": "2271200"
  },
  {
    "text": "answers so uh we use encrypted queries to prevent um adaptively adaptive choice",
    "start": "2271200",
    "end": "2279480"
  },
  {
    "text": "of the of a false witness or false encoded witness and then moreover remember that",
    "start": "2279480",
    "end": "2284680"
  },
  {
    "text": "the algebraic part uh needed linear queries and we're going to force queries",
    "start": "2284680",
    "end": "2290400"
  },
  {
    "text": "to be linear by using some additional properties of the um encryption scheme",
    "start": "2290400",
    "end": "2299040"
  },
  {
    "text": "and lastly because uh the queries are encrypted necessarily the answers to the",
    "start": "2299040",
    "end": "2305200"
  },
  {
    "text": "queries from the approver to the verifier are also encrypted and that means that no one else can check them so",
    "start": "2305200",
    "end": "2314240"
  },
  {
    "text": "uh we're going to use uh pairings on lipti curves uh for which we are",
    "start": "2314240",
    "end": "2319800"
  },
  {
    "text": "grateful to them to let anyone publicly verify the requisite relations how are",
    "start": "2319800",
    "end": "2325200"
  },
  {
    "text": "we doing on time sorry 5:30",
    "start": "2325200",
    "end": "2331839"
  },
  {
    "text": "okay uh this is what it looks like at the end of the day if you uh shed away all pretens of of abstraction and use a",
    "start": "2331839",
    "end": "2339440"
  },
  {
    "text": "few convenient functions um it ends up being uh a lot of Fielder metic um expressing uh low",
    "start": "2339440",
    "end": "2349440"
  },
  {
    "text": "degree extensions and evaluations of polinomial on the algebraic part and expressing uh that special encryption",
    "start": "2349440",
    "end": "2355720"
  },
  {
    "text": "scheme on the cryptographic",
    "start": "2355720",
    "end": "2359078"
  },
  {
    "text": "part y um so",
    "start": "2361160",
    "end": "2368839"
  },
  {
    "text": "that's that slide and many more",
    "start": "2368839",
    "end": "2373960"
  },
  {
    "text": "um results are actually implemented nowadays in running code we are no longer in the realm of theory uh we have",
    "start": "2373960",
    "end": "2380960"
  },
  {
    "text": "implementations from uh Microsoft the Pinocchio and jepetto system Microsoft",
    "start": "2380960",
    "end": "2386000"
  },
  {
    "text": "and co-authors we have lip snark uh by my co-authors and me uh in a virtual lab",
    "start": "2386000",
    "end": "2392079"
  },
  {
    "text": "we call Skipper lab for uh succinct private succinct",
    "start": "2392079",
    "end": "2398079"
  },
  {
    "text": "Oh by a sync computational integrity and privacy um and there's even someone who",
    "start": "2398079",
    "end": "2405720"
  },
  {
    "text": "took a lib snark and reimplemented it in a different dialect of C++ and called it snark Li um and uh these are just the",
    "start": "2405720",
    "end": "2414359"
  },
  {
    "text": "cryptographic back ends this is uh these things consume a lowlevel",
    "start": "2414359",
    "end": "2421599"
  },
  {
    "text": "representation of uh the circuits you want and apply various snarks to it lip",
    "start": "2421599",
    "end": "2427040"
  },
  {
    "text": "snar supports four or five snarks by now of this form and several extended",
    "start": "2427040",
    "end": "2432640"
  },
  {
    "text": "forms now I would be happy to but uh",
    "start": "2432640",
    "end": "2441760"
  },
  {
    "text": "sorry oh to be oh dear that is a well",
    "start": "2441760",
    "end": "2446960"
  },
  {
    "text": "then um the slide",
    "start": "2446960",
    "end": "2453119"
  },
  {
    "text": "obliges um this is copy page for a",
    "start": "2453640",
    "end": "2459000"
  },
  {
    "text": "tutorial for sufficiently large value of tomorrow so um there are there are",
    "start": "2459000",
    "end": "2467079"
  },
  {
    "text": "also various ways to create those programs those functions those",
    "start": "2467079",
    "end": "2472319"
  },
  {
    "text": "constraints that we need in order to use the snarks we talked about verifying Merkel trees and Psalms how is that",
    "start": "2472319",
    "end": "2479599"
  },
  {
    "text": "expressed for the snarks is expressed as some uh by linear constraints over variables",
    "start": "2479599",
    "end": "2487319"
  },
  {
    "text": "you can think about it as something very close to arithmetic circuit representation but um you don't want",
    "start": "2487319",
    "end": "2495640"
  },
  {
    "text": "such lowlevel representations um like the underlying quadratic arithmetic",
    "start": "2495640",
    "end": "2500800"
  },
  {
    "text": "programs or the arithmetic circuits we prefer something more Humane like uh",
    "start": "2500800",
    "end": "2507400"
  },
  {
    "text": "Boolean circuits you want to claim that some Boolean circuit uh accept some inputs or C programs even better we want",
    "start": "2507400",
    "end": "2515000"
  },
  {
    "text": "to say that a c program executed on some input and uh that that we decide and",
    "start": "2515000",
    "end": "2522440"
  },
  {
    "text": "some other input that uh we know but don't reveal outputs some output that we",
    "start": "2522440",
    "end": "2529319"
  },
  {
    "text": "so the claim is about the function the input that we decided and the output um",
    "start": "2529319",
    "end": "2535599"
  },
  {
    "text": "and it expresses the fact that the C program has that has that that property",
    "start": "2535599",
    "end": "2543079"
  },
  {
    "text": "according to the C language semantics that would be convenient for programmers but is a far cry from arithmetic",
    "start": "2543079",
    "end": "2550240"
  },
  {
    "text": "circuits and of course ideally we would want to represent high high level things",
    "start": "2550240",
    "end": "2555480"
  },
  {
    "text": "like a monetary transaction is correct according to someone's Financial records",
    "start": "2555480",
    "end": "2560520"
  },
  {
    "text": "so this would be of course a chain of reductions we have essentially covered this reduction and um I want to tell you uh a",
    "start": "2560520",
    "end": "2569440"
  },
  {
    "text": "little bit about how uh about what we did uh to get from here to that and from",
    "start": "2569440",
    "end": "2575480"
  },
  {
    "text": "here to that",
    "start": "2575480",
    "end": "2578838"
  },
  {
    "start": "2579000",
    "end": "2646000"
  },
  {
    "text": "um so let's talk about SN for General C programs uh this",
    "start": "2581280",
    "end": "2587040"
  },
  {
    "text": "is the progress over time it start with um starts with theoretical feasibility",
    "start": "2587040",
    "end": "2594640"
  },
  {
    "text": "results and uh fast forward many papers we now have a snugs for General C",
    "start": "2594640",
    "end": "2602400"
  },
  {
    "text": "program uh of any size and they can run for any amount of",
    "start": "2602400",
    "end": "2607960"
  },
  {
    "text": "time and we can even have them talk to each other in the distributed computation that I I'll discuss later",
    "start": "2607960",
    "end": "2616160"
  },
  {
    "text": "and uh it's easy to verify the results of that c program regardless of its size and running",
    "start": "2616160",
    "end": "2621720"
  },
  {
    "text": "time um and this is actually um implemented in working",
    "start": "2621720",
    "end": "2627200"
  },
  {
    "text": "prototypes uh the one thing that I did not dare check is uh the question of",
    "start": "2627200",
    "end": "2633040"
  },
  {
    "text": "fast proving because there is many orders of magnitude Slowdown this case as",
    "start": "2633040",
    "end": "2638440"
  },
  {
    "text": "well in this case due to both the underlying snark and the reduction from",
    "start": "2638440",
    "end": "2643880"
  },
  {
    "text": "C programs now the implementation of this is uh a non-trivial affair that was",
    "start": "2643880",
    "end": "2650400"
  },
  {
    "start": "2646000",
    "end": "2749000"
  },
  {
    "text": "by itself a project that started with interesting Theory questions and culminated in working",
    "start": "2650400",
    "end": "2655599"
  },
  {
    "text": "systems um the bottom line is that the correct execution of any c program can",
    "start": "2655599",
    "end": "2660720"
  },
  {
    "text": "be verified in a few milliseconds and in a few hundred bytes um and and it getting this",
    "start": "2660720",
    "end": "2670040"
  },
  {
    "text": "creates many questions the biggest one of this is how to uh how to handle um",
    "start": "2670040",
    "end": "2676839"
  },
  {
    "text": "variable control flow and random access memory because if you had just a",
    "start": "2676839",
    "end": "2681960"
  },
  {
    "text": "straight line program with no random AIS you could just go instruction by instruction or statement by statement",
    "start": "2681960",
    "end": "2688280"
  },
  {
    "text": "and translate it into arithmetic circuits that's the approach that other systems like Pinocchio and jepetto took",
    "start": "2688280",
    "end": "2694920"
  },
  {
    "text": "that can be a fairly tight reduction it's it's a great way to do things for that class of programs but once you have",
    "start": "2694920",
    "end": "2701280"
  },
  {
    "text": "Random Access Memory what do you do they they expressing them as huge multiplexers uh will be horribly",
    "start": "2701280",
    "end": "2708200"
  },
  {
    "text": "inefficient what about uh a conditional jumps Loop and so",
    "start": "2708200",
    "end": "2713640"
  },
  {
    "text": "forth so the way we tackle the problem is um by uh creating a compiler from C",
    "start": "2713640",
    "end": "2721240"
  },
  {
    "text": "programs into assembly code of a new virtual process that we",
    "start": "2721240",
    "end": "2727599"
  },
  {
    "text": "defined called tiny RAM and then we built uh circuits",
    "start": "2727599",
    "end": "2732720"
  },
  {
    "text": "arithmetic circuits that uh Implement a tiny Ram",
    "start": "2732720",
    "end": "2738280"
  },
  {
    "text": "interpreter conceptually similar to what you would do in a vhdl design for a new processor and then we finish the",
    "start": "2738280",
    "end": "2744599"
  },
  {
    "text": "reduction all the way down to the snarks",
    "start": "2744599",
    "end": "2750839"
  },
  {
    "start": "2749000",
    "end": "2769000"
  },
  {
    "text": "um the compiler use is built on GCC using a new GCC architecture uh and it",
    "start": "2750960",
    "end": "2757200"
  },
  {
    "text": "supports uh all the standard functionality of C uh not all the libraries because some of them talk",
    "start": "2757200",
    "end": "2762720"
  },
  {
    "text": "about things that are outside our machine model but all language constructs are",
    "start": "2762720",
    "end": "2768880"
  },
  {
    "text": "supported this is the specification of the um of the processor it has just the",
    "start": "2768880",
    "end": "2774920"
  },
  {
    "text": "Bare Essentials and it strikes a good trade-off between efficient compilation and running time in terms of virtual",
    "start": "2774920",
    "end": "2781960"
  },
  {
    "text": "Cycles on one hand and the reduction from um",
    "start": "2781960",
    "end": "2788720"
  },
  {
    "text": "um the um circuit the sorry from the uh",
    "start": "2788720",
    "end": "2795040"
  },
  {
    "text": "specification of the processor to to an arithmetic",
    "start": "2795040",
    "end": "2800160"
  },
  {
    "text": "circuit uh we don't have a sh to 56 but it is an natural extension yes you could",
    "start": "2801359",
    "end": "2807280"
  },
  {
    "text": "add uh a accelerators um let me skip that due to",
    "start": "2807280",
    "end": "2814680"
  },
  {
    "text": "the time uh but as you can Glimpse that's nontrivial architecture too um",
    "start": "2814680",
    "end": "2820960"
  },
  {
    "text": "and the um theoretical heart of the matter is a way to take uh those random",
    "start": "2820960",
    "end": "2827200"
  },
  {
    "text": "axises and somehow route them on a permutation Network in order to uh",
    "start": "2827200",
    "end": "2832440"
  },
  {
    "text": "Express them as an arithmetic circuit with just local constraints but that's",
    "start": "2832440",
    "end": "2839078"
  },
  {
    "start": "2839000",
    "end": "3067000"
  },
  {
    "text": "tomorrow uh what I would like to mention in the few remaining minutes is the generalization of snars to distributed",
    "start": "2839480",
    "end": "2846319"
  },
  {
    "text": "computation because just one node isn't enough and part of our motivation was the fact that",
    "start": "2846319",
    "end": "2852480"
  },
  {
    "text": "people talk to each other on and on and um zerach uh as a distributed Network",
    "start": "2852480",
    "end": "2859920"
  },
  {
    "text": "sort of glues together vanilla snarks uh using a blockchain to make sure that",
    "start": "2859920",
    "end": "2865640"
  },
  {
    "text": "everybody has verified all the previous snarks but we could actually do this directly without a blockchain and you",
    "start": "2865640",
    "end": "2872480"
  },
  {
    "text": "get many of the properties though not all the idea is uh what we call proof",
    "start": "2872480",
    "end": "2877839"
  },
  {
    "text": "carrying data you have a distributed computation consisting of nodes producing and consuming inputs on a",
    "start": "2877839",
    "end": "2883599"
  },
  {
    "text": "directed asly graph of computation and uh they don't trust each other at all right that's that's the",
    "start": "2883599",
    "end": "2890000"
  },
  {
    "text": "Assumption we would like to make the worst case um and uh our goal is not to bother",
    "start": "2890000",
    "end": "2896680"
  },
  {
    "text": "make sure making sure that they were all purchased at verified suppliers but rather to make sure that they all",
    "start": "2896680",
    "end": "2902079"
  },
  {
    "text": "produce the right result this is what we really care about so we're going to augment every message with a proof that",
    "start": "2902079",
    "end": "2910280"
  },
  {
    "text": "this me message complies with the prescribed policy of the system and the messages can be verified",
    "start": "2910280",
    "end": "2918359"
  },
  {
    "text": "locally um and moreover um every message attests that all of the history complies",
    "start": "2918359",
    "end": "2926119"
  },
  {
    "text": "as well so you don't have to you don't ever have to go back so just checking this proofs tells me that this is the",
    "start": "2926119",
    "end": "2932319"
  },
  {
    "text": "result of a long computation all of which steps are compliant",
    "start": "2932319",
    "end": "2937760"
  },
  {
    "text": "now what do I mean by compliant right that's a strange word and by compliant I mean that there is a precise functional",
    "start": "2937760",
    "end": "2945280"
  },
  {
    "text": "specification um that says um what relations between inputs outputs and",
    "start": "2945280",
    "end": "2951480"
  },
  {
    "text": "optional additional inputs is allowed there is a predicate a compliance predicate expressed in your favorite",
    "start": "2951480",
    "end": "2957960"
  },
  {
    "text": "language C circuits whatever and",
    "start": "2957960",
    "end": "2963200"
  },
  {
    "text": "uh it it tells you what it means for something to be Lo locally compliant and then once you've decide on",
    "start": "2963200",
    "end": "2970520"
  },
  {
    "text": "the compliance predicate we say that every node is compliant if it fulfills that predicate a distributed computation",
    "start": "2970520",
    "end": "2977480"
  },
  {
    "text": "is compliant if it all nodes fulfill the predicate and the output is compliant if",
    "start": "2977480",
    "end": "2982760"
  },
  {
    "text": "it's output of some distributed computation that is",
    "start": "2982760",
    "end": "2987559"
  },
  {
    "text": "compliant so the first thing to to say is uh um yes we can do that we can",
    "start": "2987839",
    "end": "2995240"
  },
  {
    "text": "actually build PCD and lip snark actually implements it and establishing under what conditions it actually exists",
    "start": "2995240",
    "end": "3002319"
  },
  {
    "text": "is another line of theoretical research that we'll discuss tomorrow um and the",
    "start": "3002319",
    "end": "3008720"
  },
  {
    "text": "other question is what is it good for and there are many interesting examples like I can say within my network with",
    "start": "3008720",
    "end": "3014200"
  },
  {
    "text": "within my organization only specific programs can run and I want proofs of",
    "start": "3014200",
    "end": "3019799"
  },
  {
    "text": "that that every value that passes between nodes is there is compliant in that sense or my my no are only allowed",
    "start": "3019799",
    "end": "3027480"
  },
  {
    "text": "to run programs signed by the sis",
    "start": "3027480",
    "end": "3032319"
  },
  {
    "text": "admin um I can use this uh for map reduce applications for cluster Computing a prototype that we build",
    "start": "3032760",
    "end": "3039760"
  },
  {
    "text": "having a very fully verified map reduce that tells you that the result of some big computation whose input there is a",
    "start": "3039760",
    "end": "3045640"
  },
  {
    "text": "commitment to are the claimed ones think about uh some huge query on a",
    "start": "3045640",
    "end": "3052079"
  },
  {
    "text": "medical database you want to trust the result you want to prove but but there's also a",
    "start": "3052079",
    "end": "3057119"
  },
  {
    "text": "matter of privacy so the proof is your knowledge and it reveals nothing about the values except that they were on the",
    "start": "3057119",
    "end": "3062559"
  },
  {
    "text": "correct database as summarized in some hash commitment another system that we built",
    "start": "3062559",
    "end": "3068799"
  },
  {
    "start": "3067000",
    "end": "3184000"
  },
  {
    "text": "using PCD uh is uh for authentication authentication of images",
    "start": "3068799",
    "end": "3075520"
  },
  {
    "text": "photographic images you want to show that a an image is authentic indeed",
    "start": "3075520",
    "end": "3081200"
  },
  {
    "text": "captured by a camera and you want to um",
    "start": "3081200",
    "end": "3087680"
  },
  {
    "text": "allow some transformations to happen maybe this is a dating website so people are allowed to edit their images by",
    "start": "3087680",
    "end": "3094200"
  },
  {
    "text": "cropping the messy bedroom behind them but they must not heaven forbid change the aspect",
    "start": "3094200",
    "end": "3100920"
  },
  {
    "text": "ratio so how can we express that and enforce that turns out that this has been an open problem for U more than a",
    "start": "3100920",
    "end": "3107839"
  },
  {
    "text": "decade with um about a dozen papers coming mainly from the image processing Community who try to tackle this by",
    "start": "3107839",
    "end": "3115079"
  },
  {
    "text": "various ad hoc techniques the system we built called fult prooof uses cryptographic tool tools to solve",
    "start": "3115079",
    "end": "3122359"
  },
  {
    "text": "the problem generically um once the signing key is embedded in the camera we",
    "start": "3122359",
    "end": "3128280"
  },
  {
    "text": "can say that uh whenever you edit an image uh You' create a proof that you",
    "start": "3128280",
    "end": "3135440"
  },
  {
    "text": "correctly edited the image that is you complied with the list of allowed image",
    "start": "3135440",
    "end": "3142880"
  },
  {
    "text": "Transformations and moreover you edited an image that is self compliant in in the same sense and then the final viewer",
    "start": "3142880",
    "end": "3148720"
  },
  {
    "text": "can verify the result final verification is very lightweight and uh while editing",
    "start": "3148720",
    "end": "3153960"
  },
  {
    "text": "you would need to create proofs on the fly in this chain structure whereas as",
    "start": "3153960",
    "end": "3159359"
  },
  {
    "text": "soon as you try to to uh make to claim a false statement for example claim authenticity of something that was",
    "start": "3159359",
    "end": "3165520"
  },
  {
    "text": "airbrushed you would never be able to produce a convincing proof so conceptually think of jpeg images on",
    "start": "3165520",
    "end": "3172000"
  },
  {
    "text": "Facebook or dating websites as having an extra exif header giving the snack proof",
    "start": "3172000",
    "end": "3178880"
  },
  {
    "text": "that these are compliant with the SES policy and one last uh ongoing project",
    "start": "3178880",
    "end": "3186839"
  },
  {
    "text": "uh and I want to finish with this one because I think it really drives in the",
    "start": "3186839",
    "end": "3192200"
  },
  {
    "text": "uh conceptual transition that I'm advocating um many of you must have seen",
    "start": "3192200",
    "end": "3200640"
  },
  {
    "text": "those uh logic kits where you get uh a an endgate as a box and then orgate as a",
    "start": "3200640",
    "end": "3207400"
  },
  {
    "text": "box and you can build circuits and that's a great way to teach students or kids um the the basics of logical",
    "start": "3207400",
    "end": "3213839"
  },
  {
    "text": "circuits um so uh the problem with that is that is you cannot trust the result",
    "start": "3213839",
    "end": "3221520"
  },
  {
    "text": "and unfortunately that problem applies not just to those toy kits but also to the state-of-the-art vsi technology",
    "start": "3221520",
    "end": "3228319"
  },
  {
    "text": "you're supposed to trust the manufacturer and hope for the best we've seen recent fascinating papers about IC",
    "start": "3228319",
    "end": "3235559"
  },
  {
    "text": "trogen and how how a few erant dopant atoms in the wrong transistors can",
    "start": "3235559",
    "end": "3241400"
  },
  {
    "text": "create a trojan horse so good luck verifying that but imagine",
    "start": "3241400",
    "end": "3247000"
  },
  {
    "text": "instead that you complet don't care about performance at all and moreover that you could uh",
    "start": "3247000",
    "end": "3254760"
  },
  {
    "text": "create um a this kind of authenticated logic gates",
    "start": "3254760",
    "end": "3261839"
  },
  {
    "text": "that you can wire together you tell them uh hey you you should a secure end and",
    "start": "3261839",
    "end": "3268160"
  },
  {
    "text": "uh you should do a secure end and you let them run software uh which implements the proof",
    "start": "3268160",
    "end": "3275960"
  },
  {
    "text": "carrying data for the compliance predicate that enforces that circuit so",
    "start": "3275960",
    "end": "3283160"
  },
  {
    "text": "um the compliance would say that at every point in time uh the evolution of",
    "start": "3283160",
    "end": "3288520"
  },
  {
    "text": "this circuit which can have cycles and state the evolution of the circuit maintains the invariant that every gate",
    "start": "3288520",
    "end": "3295200"
  },
  {
    "text": "operated correctly and over operated on the inputs given by other Gates who also operated correctly with respect to some",
    "start": "3295200",
    "end": "3301839"
  },
  {
    "text": "specific input uh given to the input Gates of the circuit uh so this uh this actually",
    "start": "3301839",
    "end": "3309319"
  },
  {
    "text": "works it's grossly inefficient because every gate is implemented by a cell phone in this",
    "start": "3309319",
    "end": "3315640"
  },
  {
    "text": "prototype but um but but it uh clarifies the basic",
    "start": "3315640",
    "end": "3323280"
  },
  {
    "text": "concept that we can do authenticated computation we can't trust result of results of computation we are hling over",
    "start": "3323280",
    "end": "3330160"
  },
  {
    "text": "the price but this is the most General thing you can imagine this is by uh the",
    "start": "3330160",
    "end": "3335480"
  },
  {
    "text": "citation is missing this is very new uh ongoing work with my student gilad",
    "start": "3335480",
    "end": "3342200"
  },
  {
    "text": "Roth um so the uh on this brand of cell",
    "start": "3343119",
    "end": "3348799"
  },
  {
    "text": "phones it takes a on the order of a minute for",
    "start": "3348799",
    "end": "3354720"
  },
  {
    "text": "a of propag delay so to speak uh yeah that's a strange unit for",
    "start": "3354720",
    "end": "3360440"
  },
  {
    "text": "propagation delay um but it scales in the sense that",
    "start": "3360440",
    "end": "3366000"
  },
  {
    "text": "uh if you did it by hand then at some point in time you'd uh need to get to",
    "start": "3366000",
    "end": "3371319"
  },
  {
    "text": "grab some food or run out of your lifespan whereas this can compute",
    "start": "3371319",
    "end": "3377240"
  },
  {
    "text": "indefinitely and we expect the constants to",
    "start": "3377240",
    "end": "3381680"
  },
  {
    "text": "improve so some discussion uh clearly we wanted to",
    "start": "3382559",
    "end": "3388079"
  },
  {
    "start": "3384000",
    "end": "3599000"
  },
  {
    "text": "improve performance we want to beat the doid by hand barrier um",
    "start": "3388079",
    "end": "3394240"
  },
  {
    "text": "for this is the most extreme case that we ever built doing the whole snug proof per gate uh that that's a huge overhead",
    "start": "3394240",
    "end": "3402640"
  },
  {
    "text": "for particular applications where we really care about performance like zero cache we strip away many layers of",
    "start": "3402640",
    "end": "3408280"
  },
  {
    "text": "abstractions and tailor things and then the overheads are a few orders of magnitude compared to Native execution",
    "start": "3408280",
    "end": "3414559"
  },
  {
    "text": "which may be worth it when you have no altern ative there is no other known way to create for example cryptocurrencies",
    "start": "3414559",
    "end": "3420680"
  },
  {
    "text": "or authentication schemes with the claimed properties we want to get rid of the uh",
    "start": "3420680",
    "end": "3426440"
  },
  {
    "text": "pre-processing and trusted setup that I alluded to um we would love to go back",
    "start": "3426440",
    "end": "3431520"
  },
  {
    "text": "to the old schemes that uh don't have it and we are actively working on in the lab we have a prototype that implements",
    "start": "3431520",
    "end": "3438079"
  },
  {
    "text": "that schemes and we have a an implementation of tiny RAM and the C compiler for that implementation as well",
    "start": "3438079",
    "end": "3445119"
  },
  {
    "text": "without rusted processing unfortunately performance is still far from the state-of-the-art pre-processing",
    "start": "3445119",
    "end": "3452680"
  },
  {
    "text": "snarks yeah some two weeks but yeah um then uh we we are eagerly",
    "start": "3453520",
    "end": "3462799"
  },
  {
    "text": "looking for applications um I mentioned just a few they're actually by now uh I think uh",
    "start": "3462799",
    "end": "3471359"
  },
  {
    "text": "over 10 research groups worldwide that use lipn for all sort of applications uh",
    "start": "3471359",
    "end": "3476440"
  },
  {
    "text": "many of them are in the cryptocurrency arena but doing different things than",
    "start": "3476440",
    "end": "3482039"
  },
  {
    "text": "adding privacy uh in in the sense I described um some are completely",
    "start": "3482039",
    "end": "3487079"
  },
  {
    "text": "different and um this is very exciting uh to be part of facilitating uh such a",
    "start": "3487079",
    "end": "3494520"
  },
  {
    "text": "Dage of fascinating research and um lastly",
    "start": "3494520",
    "end": "3501319"
  },
  {
    "text": "um we want to help users build those applications which raises very interesting question s in the realm of",
    "start": "3501319",
    "end": "3508000"
  },
  {
    "text": "programming languages for expressing statements they behave strangely compared to traditional computation for",
    "start": "3508000",
    "end": "3515480"
  },
  {
    "text": "example in a certain s you get non deterministic advice for free but you still can trust it uh and by linear",
    "start": "3515480",
    "end": "3521839"
  },
  {
    "text": "operations are are the basic ingredient so linear combinations are for free and",
    "start": "3521839",
    "end": "3527079"
  },
  {
    "text": "you want to optimize for that uh so there are good questions there um there is the crucial question of being sure",
    "start": "3527079",
    "end": "3533920"
  },
  {
    "text": "that the statements that we prove the compliance predicates that that whoops",
    "start": "3533920",
    "end": "3539520"
  },
  {
    "text": "that we verify are actually correct in the sense that they have the properties",
    "start": "3539520",
    "end": "3545319"
  },
  {
    "text": "we think they do and that's a question for the uh formal analysis uh people",
    "start": "3545319",
    "end": "3550880"
  },
  {
    "text": "among us and uh there are questions of how to uh integrate this power and this",
    "start": "3550880",
    "end": "3557039"
  },
  {
    "text": "expressive power into larger systems uh built in the old school just uh trust",
    "start": "3557039",
    "end": "3562520"
  },
  {
    "text": "the node Paradigm um and in this direction is ongoing work um where we",
    "start": "3562520",
    "end": "3569160"
  },
  {
    "text": "look at uh verifying the that Java classes for example have the correct",
    "start": "3569160",
    "end": "3576280"
  },
  {
    "text": "provenance according to the Java semantics uh which is something that you cannot trust if you just import them",
    "start": "3576280",
    "end": "3581839"
  },
  {
    "text": "from a network um so I I hope that I've made",
    "start": "3581839",
    "end": "3588079"
  },
  {
    "text": "the case that uh snarks",
    "start": "3588079",
    "end": "3592559"
  },
  {
    "text": "are a paradigm shift uh uh in uh security at least in in those scenarios",
    "start": "3593400",
    "end": "3601400"
  },
  {
    "text": "where they are sufficiently practical and I hope to uh enlist you to the effort to improve and use them thank",
    "start": "3601400",
    "end": "3609880"
  },
  {
    "text": "[Applause] you I'll be happy with take questions so",
    "start": "3610720",
    "end": "3617079"
  },
  {
    "text": "uh we have to ask about the cbon that was used in a setup for Zach can you say",
    "start": "3617079",
    "end": "3622119"
  },
  {
    "text": "a little bit about how that was done um so many details are forthcoming and",
    "start": "3622119",
    "end": "3630160"
  },
  {
    "text": "uh um the first of which should appear today I believe uh at the broad level",
    "start": "3630160",
    "end": "3636160"
  },
  {
    "text": "there was a committee um each um user um",
    "start": "3636160",
    "end": "3641720"
  },
  {
    "text": "each participant in the committee uh was a reputable party so uh it would be",
    "start": "3641720",
    "end": "3647480"
  },
  {
    "text": "extremely surprising if all of them uh colluded in",
    "start": "3647480",
    "end": "3653079"
  },
  {
    "text": "um in keeping secrets that they should not so that's the first line of defense and of course they could have been just",
    "start": "3653079",
    "end": "3659599"
  },
  {
    "text": "hacked by all those vulnerabilities we enumerated at the very beginning so we",
    "start": "3659599",
    "end": "3665000"
  },
  {
    "text": "took very Extreme upsc Measures uh at each of these sites in order to uh have",
    "start": "3665000",
    "end": "3671440"
  },
  {
    "text": "a for example an air gap between the secrets and anything else keep append only logs of every individual",
    "start": "3671440",
    "end": "3678079"
  },
  {
    "text": "transaction uh verify the code in uh every way that was feasible and so forth",
    "start": "3678079",
    "end": "3683160"
  },
  {
    "text": "and um all the details of that uh uh including the code including those logs",
    "start": "3683160",
    "end": "3689839"
  },
  {
    "text": "and uh the participant statements will be fully",
    "start": "3689839",
    "end": "3694240"
  },
  {
    "text": "published as the FBI come here yet said this is too good they want back",
    "start": "3699359",
    "end": "3706119"
  },
  {
    "text": "door so um back during zcash in uh in in",
    "start": "3707440",
    "end": "3713720"
  },
  {
    "text": "uh in this scheme and with in the uh scenario that uh was constructed and",
    "start": "3713720",
    "end": "3719319"
  },
  {
    "text": "documented and will be reviewed is not something that I would know how to do uh",
    "start": "3719319",
    "end": "3724520"
  },
  {
    "text": "all the proofs say that uh under certain assumptions it's it's infusible and uh",
    "start": "3724520",
    "end": "3730240"
  },
  {
    "text": "the I hope that the uh OPC um in of the ceremony will convince people that those",
    "start": "3730240",
    "end": "3735559"
  },
  {
    "text": "assumptions were fulfilled um can you talk about the what",
    "start": "3735559",
    "end": "3743240"
  },
  {
    "text": "overlap there's been so far between the verifiable comp line resarch quum",
    "start": "3743240",
    "end": "3750200"
  },
  {
    "text": "crypto bount the relation between Quantum Computing and verifiable",
    "start": "3751839",
    "end": "3756880"
  },
  {
    "text": "computation that's like Batman versus Superman right uh",
    "start": "3756880",
    "end": "3762319"
  },
  {
    "text": "well uh to spoil the fun um the battle would end very quickly in the sense that",
    "start": "3762319",
    "end": "3769079"
  },
  {
    "text": "at the moment we do not have any snars that are quantum resistant um earlier I alluded uh to cryptographic properties",
    "start": "3769079",
    "end": "3777079"
  },
  {
    "text": "that we require from that encryption scheme used to encrypt the queries in the snark um the only scheme that uh",
    "start": "3777079",
    "end": "3787839"
  },
  {
    "text": "um that we know of that um uh has these properties uh is based on discrete log",
    "start": "3787839",
    "end": "3796440"
  },
  {
    "text": "um and let me actually change my statement there is no efficient snark of",
    "start": "3796440",
    "end": "3801559"
  },
  {
    "text": "the preprocessing kind that is quantum resistant if you go back to those uh old",
    "start": "3801559",
    "end": "3807319"
  },
  {
    "text": "school uh snarks proposed by Sylvio Miki and uh",
    "start": "3807319",
    "end": "3812520"
  },
  {
    "text": "Kilian uh they um rely just on probably",
    "start": "3812520",
    "end": "3817920"
  },
  {
    "text": "checkable proofs which are is provable a algebraic properties under no assumptions and",
    "start": "3817920",
    "end": "3826359"
  },
  {
    "text": "uh in if you believe in random oracles if you believe in very random functions",
    "start": "3826799",
    "end": "3832119"
  },
  {
    "text": "uh they can be Quantum resistant which I think everyone does then um then that's",
    "start": "3832119",
    "end": "3837640"
  },
  {
    "text": "all it needs um if you don't then uh there is a",
    "start": "3837640",
    "end": "3843039"
  },
  {
    "text": "more precise characterization of what's needed in the form of extractable collision resistant hashes um and there um we have better",
    "start": "3843039",
    "end": "3853400"
  },
  {
    "text": "theoretical understanding but actually I'm not sure what's the state of the-art about postquantum extractable Collision",
    "start": "3853400",
    "end": "3859160"
  },
  {
    "text": "resistant hashes that's a great question how do you prevent double",
    "start": "3859160",
    "end": "3864319"
  },
  {
    "text": "spending are you claiming that you can prevent double spending without multiple",
    "start": "3864319",
    "end": "3870240"
  },
  {
    "text": "confirmations um so the uh double spending mechanism in zero cache has",
    "start": "3870400",
    "end": "3876559"
  },
  {
    "text": "similar properties to that of Bitcoin in the sense that uh whenever um the output",
    "start": "3876559",
    "end": "3882559"
  },
  {
    "text": "of the transaction is consumed and should never be consumed again um this is written in The Ledger it's written in",
    "start": "3882559",
    "end": "3889720"
  },
  {
    "text": "a different way in our case it would be the serial number right um but uh once it's written everyone who sees that",
    "start": "3889720",
    "end": "3896200"
  },
  {
    "text": "ledger will know that it's a d spend so the remaining question is does everyone see the same Ledger which is the",
    "start": "3896200",
    "end": "3901640"
  },
  {
    "text": "question of the distributed consensus layer of of Bitcoin and that is nearly",
    "start": "3901640",
    "end": "3907480"
  },
  {
    "text": "orthogonal to the one we've been discussing okay so basically there's no improvement of R Bitcoin in that area",
    "start": "3907480",
    "end": "3913160"
  },
  {
    "text": "there is none",
    "start": "3913160",
    "end": "3916000"
  },
  {
    "text": "okay maybe it's worth pointing out that even if the setup was problematic uh you would have problems with uh coins being",
    "start": "3919039",
    "end": "3926680"
  },
  {
    "text": "um double spent and things like that but privacy would not be hurt right that's that's an important",
    "start": "3926680",
    "end": "3932880"
  },
  {
    "text": "point Thank you Dan um the uh trusted setup is required to ensuring the",
    "start": "3932880",
    "end": "3938400"
  },
  {
    "text": "soundness of the snark hence that coins will not be uh counterfeit and we saw in",
    "start": "3938400",
    "end": "3944520"
  },
  {
    "text": "the scheme where that comes in if someone could convince you of a false statement uh they could withd draw a",
    "start": "3944520",
    "end": "3950160"
  },
  {
    "text": "commitment that that is not really in in The Ledger and Merkel tree however the",
    "start": "3950160",
    "end": "3955359"
  },
  {
    "text": "zero knowledge property is unconditional this is what's called statistical zero knowledge basically all the that the",
    "start": "3955359",
    "end": "3963319"
  },
  {
    "text": "zero knowledge proof contains all that people can see on The Ledger is a bunch",
    "start": "3963319",
    "end": "3968520"
  },
  {
    "text": "of values that are completely random conditioned on that that they are correct proof so there's no further",
    "start": "3968520",
    "end": "3974480"
  },
  {
    "text": "information to learn except that the proof is correct isn't that an answer to my",
    "start": "3974480",
    "end": "3980079"
  },
  {
    "text": "question uh you could back door the uh setup process presumably",
    "start": "3980079",
    "end": "3986279"
  },
  {
    "text": "so if uh a three later agency were interested in violating the uh privacy",
    "start": "3986279",
    "end": "3991319"
  },
  {
    "text": "of users rather than stealing all their money uh then the proof say they can't",
    "start": "3991319",
    "end": "3996599"
  },
  {
    "text": "do that also if the initialization process",
    "start": "3996599",
    "end": "4003760"
  },
  {
    "text": "was back door you wouldn't be able to detect it because there isn't enough information in the public ledger to do",
    "start": "4003760",
    "end": "4009920"
  },
  {
    "text": "that right the uh verification of the uh of The Trusted setup ceremony is",
    "start": "4009920",
    "end": "4016000"
  },
  {
    "text": "completely independent of The Ledger uh we use old school mechanisms to convince",
    "start": "4016000",
    "end": "4021880"
  },
  {
    "text": "people of what went on like um having",
    "start": "4021880",
    "end": "4027160"
  },
  {
    "text": "uh surveillance cameras at the uh nodes that participated in the ceremony",
    "start": "4027160",
    "end": "4033200"
  },
  {
    "text": "running around the clock uh we having journalists on site reviewing everything",
    "start": "4033200",
    "end": "4039760"
  },
  {
    "text": "taking uh hash chains of everything that goes on and posting them on uh Twitter",
    "start": "4039760",
    "end": "4046520"
  },
  {
    "text": "as some of you may have noticed um and um yes these are outof band channels but",
    "start": "4046520",
    "end": "4053319"
  },
  {
    "text": "uh in in conjunction they would be extremely hard to",
    "start": "4053319",
    "end": "4058000"
  },
  {
    "text": "fake did you use Photo proof on the spray",
    "start": "4062480",
    "end": "4067119"
  },
  {
    "text": "C next 288 bytes and a verification proof",
    "start": "4068400",
    "end": "4075000"
  },
  {
    "text": "uh processor um so the size of the proof is independent of the processor um it's",
    "start": "4075000",
    "end": "4081520"
  },
  {
    "text": "just those seven or eight field elements that I mentioned earlier uh it's only function of which",
    "start": "4081520",
    "end": "4087680"
  },
  {
    "text": "snar construction you use and uh what security parameters you choose in terms of the assumptions on the hardness of",
    "start": "4087680",
    "end": "4094480"
  },
  {
    "text": "discrete log in the underlying curve and so forth number like that must have been",
    "start": "4094480",
    "end": "4101440"
  },
  {
    "text": "specific process okay so the number that does require that is the running time so the numbers I gave were",
    "start": "4101440",
    "end": "4109318"
  },
  {
    "text": "um for different architectures um let's see for the um for for zero cache",
    "start": "4109319",
    "end": "4116238"
  },
  {
    "text": "creating the proof uh is takes under a minute on a typical desktop",
    "start": "4116239",
    "end": "4121719"
  },
  {
    "text": "CPU um and uh for the um you for for the variant of",
    "start": "4121719",
    "end": "4132040"
  },
  {
    "text": "tiny Ram that uh can can run forever without",
    "start": "4132040",
    "end": "4137080"
  },
  {
    "text": "without a a memory blow up that's the best case on the on the bottom line uh",
    "start": "4137080",
    "end": "4145159"
  },
  {
    "text": "the the performance is about uh one10 of an Hertz one Cy one cycle every 10",
    "start": "4145159",
    "end": "4152400"
  },
  {
    "text": "minutes sorry every 10 seconds on a um typical server",
    "start": "4152400",
    "end": "4160120"
  },
  {
    "text": "processor um for the even more extreme more wasteful version",
    "start": "4160120",
    "end": "4166000"
  },
  {
    "text": "of using cell phones um those were mesu MX5 phones um but the bottom line is um",
    "start": "4166000",
    "end": "4174640"
  },
  {
    "text": "that when the computation is simple enough when you've managed to um distill",
    "start": "4174640",
    "end": "4181600"
  },
  {
    "text": "your security property into a small symbol specification as in zeroc Cache",
    "start": "4181600",
    "end": "4187318"
  },
  {
    "text": "um then the running times are typically on the order of seconds uh or minutes on",
    "start": "4187319",
    "end": "4194760"
  },
  {
    "text": "a regular processors uh if you do something uh with high higher level of",
    "start": "4194760",
    "end": "4201239"
  },
  {
    "text": "obstruction you lose orders of magnitude and if you do something that uh is more heavy weight in the input size like uh",
    "start": "4201239",
    "end": "4209480"
  },
  {
    "text": "the image processing of photo proof then you would uh then running time would be",
    "start": "4209480",
    "end": "4215040"
  },
  {
    "text": "commensurate to that but for photo proof for small images it is on the order of minutes or tens of minutes that's",
    "start": "4215040",
    "end": "4220880"
  },
  {
    "text": "something you'd run in the background I'll be happy to give more specific numbers for any specific scenario",
    "start": "4220880",
    "end": "4227320"
  },
  {
    "text": "Co [Applause]",
    "start": "4228199",
    "end": "4236210"
  }
]