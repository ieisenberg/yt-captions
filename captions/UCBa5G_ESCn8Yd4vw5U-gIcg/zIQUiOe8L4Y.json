[
  {
    "text": "um today I I think the there's there's various things that U we should go",
    "start": "1920",
    "end": "8040"
  },
  {
    "text": "through but I think the first one is data structures and so I want to start out with a discussion of data structures",
    "start": "8040",
    "end": "13480"
  },
  {
    "text": "for problem three uh so as we mentioned a week ago the uh uh the network is a uh",
    "start": "13480",
    "end": "22560"
  },
  {
    "text": "is a is what compiler writers call a dag directed a cyclic graph in which the um",
    "start": "22560",
    "end": "28560"
  },
  {
    "text": "in which the uh the the elements are classified into",
    "start": "28560",
    "end": "34040"
  },
  {
    "text": "inputs Gates and outputs and the gates have two inputs that have previously been",
    "start": "34040",
    "end": "39680"
  },
  {
    "text": "computed uh and you can write in straight line code as we did as we did in the uh in the handout uh and the qu",
    "start": "39680",
    "end": "47559"
  },
  {
    "text": "the first question is how do you want to represent a dag inside the inside the machine so what are the what are the",
    "start": "47559",
    "end": "53440"
  },
  {
    "text": "winning the winning methods for this that people",
    "start": "53440",
    "end": "58320"
  },
  {
    "text": "have so somebody want to speak don't all speak at once just all smile that's",
    "start": "58600",
    "end": "67080"
  },
  {
    "text": "nice we're using list you're using list that's the data structure other words",
    "start": "67360",
    "end": "73960"
  },
  {
    "text": "put yourself put yourself into somebody's preconceived idea of a data structure data structure is uh each gate",
    "start": "73960",
    "end": "81560"
  },
  {
    "text": "is is has a symbol and in it in its property list are a number of fields and",
    "start": "81560",
    "end": "89520"
  },
  {
    "text": "uh so Each G has a type",
    "start": "89520",
    "end": "94840"
  },
  {
    "text": "okay so a gate type like exclusive or right or and or and",
    "start": "94840",
    "end": "100840"
  },
  {
    "text": "uh um it has a and the property list would say what",
    "start": "100840",
    "end": "106920"
  },
  {
    "text": "like what would it look is it is it easy to do it to do this one for",
    "start": "106920",
    "end": "112240"
  },
  {
    "text": "example U uh yeah you would have you have three",
    "start": "112240",
    "end": "117759"
  },
  {
    "text": "gates oh",
    "start": "117759",
    "end": "121840"
  },
  {
    "text": "i1 I i1 I input and yeah those are inputs they're",
    "start": "129640",
    "end": "136480"
  },
  {
    "text": "Ty the Tye with the",
    "start": "136480",
    "end": "140319"
  },
  {
    "text": "input",
    "start": "148760",
    "end": "151760"
  },
  {
    "text": "and they they would have a field",
    "start": "154760",
    "end": "160120"
  },
  {
    "text": "outputs why put some parentheses in there if there's list maybe they write without parentheses nowadays but oh just",
    "start": "166120",
    "end": "174920"
  },
  {
    "text": "under the property list and here you would get um",
    "start": "174920",
    "end": "181760"
  },
  {
    "text": "it's output would be say",
    "start": "181959",
    "end": "188319"
  },
  {
    "text": "Z and then I won't do the whole thing but then gate Z would have so you I we",
    "start": "188319",
    "end": "194840"
  },
  {
    "text": "just saying where X is used and this is gate zero right and this is gate one",
    "start": "194840",
    "end": "200080"
  },
  {
    "text": "yeah right",
    "start": "200080",
    "end": "203360"
  },
  {
    "text": "okay zero with it looks like almost looks like garbage out garbage",
    "start": "206599",
    "end": "212519"
  },
  {
    "text": "in X and uh",
    "start": "215519",
    "end": "222519"
  },
  {
    "text": "input um i z and i1 right here",
    "start": "223599",
    "end": "228920"
  },
  {
    "text": "the I should write it like this the input M okay and",
    "start": "228920",
    "end": "236200"
  },
  {
    "text": "um right i z i1",
    "start": "236200",
    "end": "241680"
  },
  {
    "text": "so where is we'll call this two yeah",
    "start": "245200",
    "end": "252439"
  },
  {
    "text": "okay okay and then and any other fields that you want to put in there later okay",
    "start": "253040",
    "end": "259280"
  },
  {
    "text": "so for values or something like that mhm okay is that what everybody uses or what",
    "start": "259280",
    "end": "264919"
  },
  {
    "text": "what are the other ideas that people have",
    "start": "264919",
    "end": "271600"
  },
  {
    "text": "everybody's using this for this one no I'm using C but we're using C but uh",
    "start": "271680",
    "end": "277320"
  },
  {
    "text": "it's more or less equivalent to that where you have a type and you have two inputs and then a list of",
    "start": "277320",
    "end": "283479"
  },
  {
    "text": "outputs okay so you're keeping with each one both inputs and outputs even though they even though it's redundant to keep",
    "start": "283479",
    "end": "289880"
  },
  {
    "text": "the to keep the outputs I mean you could always calculate what the outputs are about by looking at all the inputs",
    "start": "289880",
    "end": "298080"
  },
  {
    "text": "but yeah but you have look at every gate to see you'd have to do it over and over again yeah that's why but I meant",
    "start": "298080",
    "end": "303199"
  },
  {
    "text": "redundant means that uh we got extra things in the data structure that aren't strictly um necessary as far as U as as",
    "start": "303199",
    "end": "312000"
  },
  {
    "text": "having a representation is concerned but if you want to you want if yeah if you want to you look at what you're going to",
    "start": "312000",
    "end": "318120"
  },
  {
    "text": "be doing with the data struction you add extra extra unnecessary redundancy as",
    "start": "318120",
    "end": "323759"
  },
  {
    "text": "they say this is the division of of of unnecessary redundancy division",
    "start": "323759",
    "end": "331360"
  },
  {
    "text": "okay the the um U helpful redundancy uh",
    "start": "331360",
    "end": "338360"
  },
  {
    "text": "okay um now uh then but how do you how",
    "start": "338360",
    "end": "344160"
  },
  {
    "text": "do you uh uh decide what the names of the gates are going to be the symbol under the gate g0 how did",
    "start": "344160",
    "end": "353000"
  },
  {
    "text": "where did that G come from this the gates are numbered in the order of in",
    "start": "353000",
    "end": "359639"
  },
  {
    "text": "which they're generated and they're generated by uh the procedural framework just like",
    "start": "359639",
    "end": "367520"
  },
  {
    "text": "the one you gave us okay you got some you got some some C that run through in generary skates and there's a um well",
    "start": "367520",
    "end": "375599"
  },
  {
    "text": "there's a basic there are three basic procedures one which makes an and gate one which makes an orgate one which",
    "start": "375599",
    "end": "382280"
  },
  {
    "text": "makes an exor gate and they're called in the appropriate places in each of the modules that um she",
    "start": "382280",
    "end": "391120"
  },
  {
    "text": "and uh they generate the gates they take they take two",
    "start": "391120",
    "end": "397680"
  },
  {
    "text": "inputs and and they look at the um input might be like",
    "start": "397680",
    "end": "405000"
  },
  {
    "text": "i0 and and and zero might be another inlp crime I mean zero is the capaces",
    "start": "405000",
    "end": "411440"
  },
  {
    "text": "are somewhere in your data structure and then it doesn't it doesn't generate a gate it it doesn't generate a gate if if",
    "start": "411440",
    "end": "417800"
  },
  {
    "text": "the output is predetermined okay um right now yeah okay and then the gate",
    "start": "417800",
    "end": "425479"
  },
  {
    "text": "generators then go back and put themselves into the output lists of the",
    "start": "425479",
    "end": "432319"
  },
  {
    "text": "of their input okay so when this one when when you have a little generation procedure that said generate me",
    "start": "432319",
    "end": "438400"
  },
  {
    "text": "exclusive orgate from I and i1 which then created this this part of the the",
    "start": "438400",
    "end": "446720"
  },
  {
    "text": "structure and added g0 to the output list of of i z and i1",
    "start": "446720",
    "end": "453240"
  },
  {
    "text": "okay and then do you have a a list of all the gates too or something like that then at the",
    "start": "453240",
    "end": "459280"
  },
  {
    "text": "end I'm I'm wondering about two things one is there is there a definite ordering of the gates that that you can",
    "start": "459280",
    "end": "465080"
  },
  {
    "text": "use later on um well in an algorithm some gate is be is before another Gator",
    "start": "465080",
    "end": "471759"
  },
  {
    "text": "that makesense see the gates since the gates are always generated such that um the the inputs",
    "start": "471759",
    "end": "479319"
  },
  {
    "text": "are generated before the gate itself is generated yeah you have you have a a",
    "start": "479319",
    "end": "484919"
  },
  {
    "text": "kind of topological odor on it yeah that's in any any a cyclic uh uh Network",
    "start": "484919",
    "end": "491199"
  },
  {
    "text": "graph there's a way to linearize it so that so that the inputs are are before",
    "start": "491199",
    "end": "497120"
  },
  {
    "text": "the are before the uh the gate and the outputs are after so if you take the",
    "start": "497120",
    "end": "502479"
  },
  {
    "text": "gates in order of the numbers okay uh you can do a straight evaluation at for",
    "start": "502479",
    "end": "508560"
  },
  {
    "text": "example how many do you get all together when you do that process",
    "start": "508560",
    "end": "514360"
  },
  {
    "text": "um I can't remember uh you you you get some somewhere in the high 400s or",
    "start": "514640",
    "end": "521240"
  },
  {
    "text": "something uh and then what how many gates did you get by eliminating",
    "start": "521240",
    "end": "526959"
  },
  {
    "text": "zero that that that was the high 400s and then when you eliminate gates with dangling outputs I think you get 401",
    "start": "526959",
    "end": "534680"
  },
  {
    "text": "okay I got 417 I can't",
    "start": "534680",
    "end": "541200"
  },
  {
    "text": "okay yeah that's it is that right you also eliminate the ones which have the",
    "start": "541880",
    "end": "547399"
  },
  {
    "text": "same uh input both from left and",
    "start": "547399",
    "end": "552240"
  },
  {
    "text": "right this was this happened you had a you had a I don't know I just oh you had it in the program oh okay so it's I",
    "start": "552640",
    "end": "559560"
  },
  {
    "text": "think I think I think all all of those do eventually get 4 and one yeah 4 and one okay now I tried it by the way uh on",
    "start": "559560",
    "end": "567399"
  },
  {
    "text": "32x 32 multiplication and I got 1747 Gates before removing the output",
    "start": "567399",
    "end": "575040"
  },
  {
    "text": "ones and then it went down to 1722 so this number 401 goes up uh to 1722 when",
    "start": "575040",
    "end": "582920"
  },
  {
    "text": "you double the uh uh the number of bits so you get a 30 a parallel 32 by",
    "start": "582920",
    "end": "588200"
  },
  {
    "text": "32 um multiply I mean sorry that's a 16 x 16 multiply and a parallel 32x 32",
    "start": "588200",
    "end": "595519"
  },
  {
    "text": "multiply I tried also and I got 6,900 1 72 Gates before throwing them out and",
    "start": "595519",
    "end": "602360"
  },
  {
    "text": "then 6933 at the end so so the uh 6933 again we're it's going it goes up",
    "start": "602360",
    "end": "609519"
  },
  {
    "text": "by about factor four as you can imagine um uh in the uh uh that's just at the",
    "start": "609519",
    "end": "616320"
  },
  {
    "text": "very beginning the very first round is is the n squ right I mean just to multiply all the X XI *",
    "start": "616320",
    "end": "625000"
  },
  {
    "text": "YJ um is giving you the is giving you most of the gates um and uh that was depth 34 so you could",
    "start": "625000",
    "end": "633000"
  },
  {
    "text": "have a 32x 32 uh um parallel multiplier with 64 bits of",
    "start": "633000",
    "end": "639639"
  },
  {
    "text": "in of output and 34 levels of logic with this with the",
    "start": "639639",
    "end": "644720"
  },
  {
    "text": "same construction and about a little less than 7,000 Gates Al together for",
    "start": "644720",
    "end": "650519"
  },
  {
    "text": "what it's wor um now let's see uh we",
    "start": "650519",
    "end": "657639"
  },
  {
    "text": "also had this possibility that the gate might be um that there might be a gate",
    "start": "657639",
    "end": "663519"
  },
  {
    "text": "uh that has a solid uh zero output is that right all",
    "start": "663519",
    "end": "670240"
  },
  {
    "text": "well I guess there seems to be one each each level above and three out okay that",
    "start": "670240",
    "end": "676040"
  },
  {
    "text": "yeah um there's another gate behind it which only feeds into that gate so you can't check bolts on either of those",
    "start": "676040",
    "end": "683360"
  },
  {
    "text": "Gates check zero oh now say say that again so so you say first of all you for",
    "start": "683360",
    "end": "688680"
  },
  {
    "text": "you you tried three bits four bits and up to I I tried three bits four bits and five bits and that after that my program",
    "start": "688680",
    "end": "694800"
  },
  {
    "text": "gives up okay uh um it finds Gates and and there was a gate that was solidly",
    "start": "694800",
    "end": "700639"
  },
  {
    "text": "Zero yeah okay uh so presumably on 8 Bits this will happen also probably um",
    "start": "700639",
    "end": "706959"
  },
  {
    "text": "which means if you try to detect all stuck at zero faults which means that if we try to detect all stuck at zero",
    "start": "706959",
    "end": "712240"
  },
  {
    "text": "faults we're not going to be able to detect one of them because it will yeah now what what was the other",
    "start": "712240",
    "end": "718120"
  },
  {
    "text": "thing you said that this gate it's stuck at zero I mean it's always zero there's one gate that's",
    "start": "718120",
    "end": "724160"
  },
  {
    "text": "always zero but there seems to be another gate which you can't detect the stuck at zero fault presumably because it goes through the first gate it's one",
    "start": "724160",
    "end": "731000"
  },
  {
    "text": "of the inls of the stuck at zero gate Z so then let's see so it has that gate",
    "start": "731000",
    "end": "739720"
  },
  {
    "text": "as I'm going to erase this",
    "start": "739720",
    "end": "743480"
  },
  {
    "text": "um this is an I bet you so there's some and",
    "start": "747120",
    "end": "752360"
  },
  {
    "text": "gate that that comes in here and it turns out that it's always zero right um and uh now um this one",
    "start": "752360",
    "end": "762800"
  },
  {
    "text": "you're saying that actually um this one is used in a",
    "start": "762800",
    "end": "770600"
  },
  {
    "text": "it's it's used in a exclusive orate afterwards and some other stuff it",
    "start": "770600",
    "end": "776240"
  },
  {
    "text": "actually goes into an or what oh okay well it might be different in a different one let's take a look at the",
    "start": "776240",
    "end": "782680"
  },
  {
    "text": "but I don't understand what you said about the um that that I can understand why this one would never be stuck",
    "start": "782680",
    "end": "789560"
  },
  {
    "text": "at at uh at zero why why why you could never detect this one stuck at",
    "start": "789560",
    "end": "795240"
  },
  {
    "text": "zero of it yeah that only feeds that gate okay so so you say there there's a",
    "start": "795240",
    "end": "800560"
  },
  {
    "text": "gate here that that that comes here only but M such that uh and there's no way of",
    "start": "800560",
    "end": "807880"
  },
  {
    "text": "telling if it's zero or because you'll never",
    "start": "807880",
    "end": "815079"
  },
  {
    "text": "the zero so you can't detect stuff",
    "start": "815920",
    "end": "824320"
  },
  {
    "text": "zero is this true of the of the Circuit of the eight po circuit or just of the small cases you'd have to check all",
    "start": "824320",
    "end": "830639"
  },
  {
    "text": "possible in nobody's done that yet okay um so you're saying that if",
    "start": "830639",
    "end": "839279"
  },
  {
    "text": "this one has only one output uh then then there would be then",
    "start": "839279",
    "end": "845519"
  },
  {
    "text": "we' be we'd be stuck because because this one has a known yeah there anything anything that",
    "start": "845519",
    "end": "852120"
  },
  {
    "text": "has to go through this critical path would be and still detective stuck at one on that upper gate okay well let",
    "start": "852120",
    "end": "859519"
  },
  {
    "text": "Let's uh let's see the uh uh one thing we could do is uh is uh have a proof",
    "start": "859519",
    "end": "865160"
  },
  {
    "text": "that it's always zero and then remove it from the circuit thereby having Gates right but you have to first of all know",
    "start": "865160",
    "end": "870800"
  },
  {
    "text": "which gate it is yeah okay well let me see what do you let me but I I want to do this Democratic what you people think",
    "start": "870800",
    "end": "877040"
  },
  {
    "text": "we should do say say that we have 401 Gates and uh and we we we detect all the",
    "start": "877040",
    "end": "882560"
  },
  {
    "text": "stuck at faults that are of of those 8002 we detect all the detectable ones but we assume that the circuit is",
    "start": "882560",
    "end": "887720"
  },
  {
    "text": "actually built that way um uh so that uh if there's redundant redundant",
    "start": "887720",
    "end": "893079"
  },
  {
    "text": "calculations uh it the circuit is still still supposed to do it um that's one",
    "start": "893079",
    "end": "898279"
  },
  {
    "text": "one approach let me explain for example if this was a if this was a plus coming in here now um but we know that this is",
    "start": "898279",
    "end": "905320"
  },
  {
    "text": "zero uh and this one this is some other gate here um I can still have a fault at",
    "start": "905320",
    "end": "912000"
  },
  {
    "text": "this exclusive or because this this this this XR might still be stuck at one the",
    "start": "912000",
    "end": "918240"
  },
  {
    "text": "same as this one might still be stuck at one or zero um and so so so that gate is actually there and so we would have to",
    "start": "918240",
    "end": "924279"
  },
  {
    "text": "detect the fault for that one as well as a fault for this one on the other hand there they're sort of equ I mean we're",
    "start": "924279",
    "end": "930160"
  },
  {
    "text": "just giving ourselves more chance for fault um and maybe if we if we were",
    "start": "930160",
    "end": "935240"
  },
  {
    "text": "actually designing circuits we would U um uh we would have uh",
    "start": "935240",
    "end": "942720"
  },
  {
    "text": "uh while while testing while while doing our theory of this circuit we would realize that one of the gates is",
    "start": "942720",
    "end": "948720"
  },
  {
    "text": "redundant so we saved the we saved two gates I mean we save not only this one with this one actually the",
    "start": "948720",
    "end": "955199"
  },
  {
    "text": "one I guess Well yeah if there's if this one is only to that you could you could get rid of it too cuz it doesn't have",
    "start": "955199",
    "end": "961600"
  },
  {
    "text": "any I mean if we get rid of this one then there's no outputs for this guy yeah um now which uh now now I I",
    "start": "961600",
    "end": "969680"
  },
  {
    "text": "could I could uh tell the class what the which gate this is and then you could say go down to 399 instead of 401 or you",
    "start": "969680",
    "end": "977000"
  },
  {
    "text": "could leave it at 401 and I mean which what would you kids rather",
    "start": "977000",
    "end": "982360"
  },
  {
    "text": "do I was no I was thinking of something else if the gate before it is stuck at zero it's not a fault in the circuit I",
    "start": "982360",
    "end": "988880"
  },
  {
    "text": "mean the circuit will still work properly so it's not as if if the actual",
    "start": "988880",
    "end": "994880"
  },
  {
    "text": "idea yeah if the idea was to test the circuit to see if it's always going to work properly then it doesn't matter if",
    "start": "994880",
    "end": "999920"
  },
  {
    "text": "it's stuck at zero so it isn't really a fault okay that sense so so we redefine",
    "start": "999920",
    "end": "1005079"
  },
  {
    "text": "the question saying just here's the circuit find all the faults really you have 800 faults than",
    "start": "1005079",
    "end": "1013000"
  },
  {
    "text": "82 well you're presuming that there's somebody with only one yeah let let me go case let me tell you what the fact is",
    "start": "1014199",
    "end": "1021480"
  },
  {
    "text": "because I happen to have the the circuit here uh let's see it identically zero is",
    "start": "1021480",
    "end": "1028480"
  },
  {
    "text": "the end of 721 and 718 721 and 718 they're both used in two",
    "start": "1028480",
    "end": "1036400"
  },
  {
    "text": "in two places so so the this situation doesn't",
    "start": "1036400",
    "end": "1043240"
  },
  {
    "text": "it's there's another outlet for the um you the circuit before it was",
    "start": "1043240",
    "end": "1050480"
  },
  {
    "text": "dangling outputs I'm looking at the that 401 Gates oh okay",
    "start": "1050480",
    "end": "1056240"
  },
  {
    "text": "CC if I if I've done this correctly my programs uh you know over the years I've",
    "start": "1056240",
    "end": "1062440"
  },
  {
    "text": "made one or two bugs in my",
    "start": "1062440",
    "end": "1066120"
  },
  {
    "text": "computer independently written programs agreed there were at least there there were exactly two gates that you could St",
    "start": "1068600",
    "end": "1074039"
  },
  {
    "text": "at zero in the three and four and five cases yeah now this is another Cas let me yeah um Let me let me tell you it was",
    "start": "1074039",
    "end": "1081760"
  },
  {
    "text": "a surpr at first I looked at this I said oh of course this one's always going to be zero in every and and and then uh and",
    "start": "1081760",
    "end": "1086960"
  },
  {
    "text": "then I realized that it was going to take me uh uh that that that I think it's a fairly uh you know one or two page proof",
    "start": "1086960",
    "end": "1095480"
  },
  {
    "text": "uh to show that uh that this particular one cuz it was a different gate than I thought what's happening is that you got",
    "start": "1095480",
    "end": "1101840"
  },
  {
    "text": "these these uh these numbers A1 through a16 which are",
    "start": "1101840",
    "end": "1107320"
  },
  {
    "text": "your wait what are the initial partial products A1 to A8 I guess it is",
    "start": "1107320",
    "end": "1114840"
  },
  {
    "text": "huh or a0 to a what a0 to A7 a0 to A7",
    "start": "1114840",
    "end": "1120640"
  },
  {
    "text": "are the initial ones and then we then we take a0 plus A1 Plus a 2 is equal to a 8",
    "start": "1120640",
    "end": "1126799"
  },
  {
    "text": "+ a 9 and and so on the last one being a what is it",
    "start": "1126799",
    "end": "1135080"
  },
  {
    "text": "a see I got it written out here a18 +",
    "start": "1135080",
    "end": "1142559"
  },
  {
    "text": "a19 was equal to a 15 plus A6 plus a",
    "start": "1142559",
    "end": "1149679"
  },
  {
    "text": "17 um and so we we started out with eight inputs and then after six uh of",
    "start": "1149960",
    "end": "1155000"
  },
  {
    "text": "these of these reductions we have two two left a18 and a19 well it turns out",
    "start": "1155000",
    "end": "1160240"
  },
  {
    "text": "that the uh uh that the bit that's zero is",
    "start": "1160240",
    "end": "1167240"
  },
  {
    "text": "um high order a bit of a19 um it just turned out that U that uh",
    "start": "1167240",
    "end": "1176280"
  },
  {
    "text": "if you if you look at the at the uh uh the leading bits of a of a15 a16 and a17",
    "start": "1176280",
    "end": "1184280"
  },
  {
    "text": "I I was getting 0 0 always for for a15 and",
    "start": "1184280",
    "end": "1192279"
  },
  {
    "text": "01 uh sorry z a bar uh z x bars for some x uh um for a16 and x0 for",
    "start": "1193080",
    "end": "1203640"
  },
  {
    "text": "a17 and um and and therefore a19 which was the which was adding this column and",
    "start": "1203640",
    "end": "1211200"
  },
  {
    "text": "deciding whether the uh whether or not there were at least two ones in it was guaranteed that the leading bit of a19",
    "start": "1211200",
    "end": "1217799"
  },
  {
    "text": "which is the carry from from this column um was always was always zero um and",
    "start": "1217799",
    "end": "1223799"
  },
  {
    "text": "that's the that's what it it turned out to be well now you have to look this is A5",
    "start": "1223799",
    "end": "1229120"
  },
  {
    "text": "if I'm not mistaken uh I might have these numbers wrong yeah I'm sorry this is a13",
    "start": "1229120",
    "end": "1237640"
  },
  {
    "text": "oh no a17 a16 yeah I think it was I think it's a15 a16 a17 but my my proof",
    "start": "1237640",
    "end": "1244720"
  },
  {
    "text": "might be slightly flaky but something like that I might have renumbered things as I went um but but but um based on the",
    "start": "1244720",
    "end": "1253600"
  },
  {
    "text": "uh uh the fact that these original inputs uh are are known to be to come",
    "start": "1253600",
    "end": "1259080"
  },
  {
    "text": "from multiplication this is true it's not going to be true if you start out with any any eight numbers that uh a z",
    "start": "1259080",
    "end": "1265559"
  },
  {
    "text": "is known to start out with leading zeros and A7 is has one one one zero and trailing zeros A6",
    "start": "1265559",
    "end": "1274080"
  },
  {
    "text": "had two leading zeros and um um something like this but in order to show",
    "start": "1274080",
    "end": "1280000"
  },
  {
    "text": "that that that this leading bit of a19 was Zero I believe it's necessary to to to know that A6 and A7 are almost the",
    "start": "1280000",
    "end": "1287799"
  },
  {
    "text": "same except shifted left one or or or both A6 and A7 can either be zero or or",
    "start": "1287799",
    "end": "1295960"
  },
  {
    "text": "or the same as the other one shifted over too and by using all that fact and putting it into the circuit it turned out that the leading bid of",
    "start": "1295960",
    "end": "1302360"
  },
  {
    "text": "a19 uh could had to be zero well this was uh now this this uh might generalize",
    "start": "1302360",
    "end": "1308120"
  },
  {
    "text": "to arbitrary length of of circuits but that's the funny one that is that's the funny one that is zero and and uh uh not",
    "start": "1308120",
    "end": "1317400"
  },
  {
    "text": "so the facts are then that we we we could simplify the circuit but I'm not sure what you people would how You' like",
    "start": "1317400",
    "end": "1323320"
  },
  {
    "text": "to to recast the problem I I I don't think that this in general would be a",
    "start": "1323320",
    "end": "1328600"
  },
  {
    "text": "valid way of doing things merely because if with an arbitrarily complex circuit mhm it might sometimes be very difficult",
    "start": "1328600",
    "end": "1335480"
  },
  {
    "text": "to detect the fact in the first place that a certain thing is not going to matter essentially that it's always",
    "start": "1335480",
    "end": "1341520"
  },
  {
    "text": "going to be at a certain value so I think the programs or whatever that are doing the this which are trying to find",
    "start": "1341520",
    "end": "1349080"
  },
  {
    "text": "such a cover should themselves be capable of pointing out at least pointing out which are the pro which are",
    "start": "1349080",
    "end": "1356000"
  },
  {
    "text": "the probable ones which cannot be checked and then maybe one could check them by the means oh I mean okay you",
    "start": "1356000",
    "end": "1363600"
  },
  {
    "text": "have to essentially solve the problem the question is whether you do it before or after you try finding this yeah that's the that's what we I I think we",
    "start": "1363600",
    "end": "1369880"
  },
  {
    "text": "should all be working on the same problem that's what so I want to get to an agreement you know we're going to take a vote and we're going to we're",
    "start": "1369880",
    "end": "1375039"
  },
  {
    "text": "going to uh uh use majority rule on this so we're all working the same problem um",
    "start": "1375039",
    "end": "1380679"
  },
  {
    "text": "now and John's point is very well taken it says all we have to do is find a set of x's and y's so that if it multiplies",
    "start": "1380679",
    "end": "1387320"
  },
  {
    "text": "these correctly then it multiplies all x's and y's correctly uh and that that that formulation of the problem is",
    "start": "1387320",
    "end": "1393320"
  },
  {
    "text": "independent of the number of uh of gates in the circuit uh there might be uh you know lots of other gates in there",
    "start": "1393320",
    "end": "1400760"
  },
  {
    "text": "753 yes is that what it is without eliminating zeros what yeah yeah okay 7 53 I thought",
    "start": "1400760",
    "end": "1409000"
  },
  {
    "text": "it was even more okay so uh yeah I never got that",
    "start": "1409000",
    "end": "1414320"
  },
  {
    "text": "count because I eliminated them and has say but um okay um well there's a matter",
    "start": "1414320",
    "end": "1421120"
  },
  {
    "text": "of whether you count zero goes to AI as a gate or not I guess it isn't um okay so so that's a uh that's",
    "start": "1421120",
    "end": "1428919"
  },
  {
    "text": "one way to State the the problem otherwise we we would say reduce the the circuit to to a simplified circuit and",
    "start": "1428919",
    "end": "1436360"
  },
  {
    "text": "uh and then um and then solve the problem on that one so how many vote for the the first alternative leaving it at",
    "start": "1436360",
    "end": "1442840"
  },
  {
    "text": "401 Gates we got 1 2 3 4 5 6 7 8 how many",
    "start": "1442840",
    "end": "1451240"
  },
  {
    "text": "vote for the second alternative simplifying the circuit first and then solving the reduced problem we got 1 two",
    "start": "1451240",
    "end": "1457760"
  },
  {
    "text": "3 how many are asleep 8 to three and four",
    "start": "1457760",
    "end": "1464480"
  },
  {
    "text": "asleep okay so the eight carry it so we're going to go with the 401 Gates as",
    "start": "1464480",
    "end": "1470120"
  },
  {
    "text": "it is and we just find a minimum number of test cases that will uh that will",
    "start": "1470120",
    "end": "1475559"
  },
  {
    "text": "suffice to test whether or not it's it either cor multiplies everything correctly or has more than one stuck at",
    "start": "1475559",
    "end": "1481480"
  },
  {
    "text": "fault uh assuming that's stuck at Faults Are the only kind of fault Andy um well",
    "start": "1481480",
    "end": "1487840"
  },
  {
    "text": "but then won't all the groups have to run the same really um Brute Force large program and kind of drag Navajo down I",
    "start": "1487840",
    "end": "1494360"
  },
  {
    "text": "mean is there a way to do it other than brute force uh well this particular proof of this that this was always zero",
    "start": "1494360",
    "end": "1501240"
  },
  {
    "text": "could have been could have been discovered by a heuristic search uh I believe because I I just I did it",
    "start": "1501240",
    "end": "1507919"
  },
  {
    "text": "by by hand looking at uh uh this this bit of a19 and it required some other",
    "start": "1507919",
    "end": "1514240"
  },
  {
    "text": "bits and it it only went down about eight levels and I could get it so so it",
    "start": "1514240",
    "end": "1519320"
  },
  {
    "text": "wasn't necessary to go through I I believe I could do by hand this this thing um on the corresponding thing on",
    "start": "1519320",
    "end": "1527399"
  },
  {
    "text": "the thir 2x 32 circuit um I'm not volunteering to do",
    "start": "1527399",
    "end": "1532720"
  },
  {
    "text": "this but I but I think it could be certainly done by a machine it wouldn't require going through all two to the 64th combinations of 32 by 32 inputs 32",
    "start": "1532720",
    "end": "1541399"
  },
  {
    "text": "plus 32 inputs um and uh to to determine that a",
    "start": "1541399",
    "end": "1546880"
  },
  {
    "text": "corresponding gate in the U in the larger circuit is is is a constant",
    "start": "1546880",
    "end": "1552240"
  },
  {
    "text": "constant zero um right the idea might be to just have whatever heuristics you use to",
    "start": "1552240",
    "end": "1559279"
  },
  {
    "text": "check some proportion of the inputs anyway sort of just indicate that this is a possibility a likely possibility",
    "start": "1559279",
    "end": "1566200"
  },
  {
    "text": "and then you check it from there um yeah I I have a feeling that a variety of methods is going to be useful on this",
    "start": "1566200",
    "end": "1573039"
  },
  {
    "text": "problem uh I'm worried about bringing Navajo down too uh um I mean there are",
    "start": "1573039",
    "end": "1579039"
  },
  {
    "text": "lots of ways to work on problems like this that that will that will uh be be",
    "start": "1579039",
    "end": "1584320"
  },
  {
    "text": "bad and I and I and I have tried some of them person",
    "start": "1584320",
    "end": "1589600"
  },
  {
    "text": "L um in fact I had this one this one her istic search that was using forward and",
    "start": "1589760",
    "end": "1595240"
  },
  {
    "text": "backward propagation as we had in class A week ago and and it worked fine at on on most of the gates and then on on one",
    "start": "1595240",
    "end": "1601799"
  },
  {
    "text": "of the gates um I just for fun I let it run until I shut it off after an hour I mean it was uh it was a sale but um uh",
    "start": "1601799",
    "end": "1612000"
  },
  {
    "text": "just to see if it would ever you know if it would ever converge and it it didn't I mean and uh I I have a dare with Mike",
    "start": "1612000",
    "end": "1619600"
  },
  {
    "text": "janer if to see if any of his programs can do can do so but on the other hand other ones it it did it it worked it",
    "start": "1619600",
    "end": "1627200"
  },
  {
    "text": "worked amazingly fast and uh and uh almost most of them so so uh and and and",
    "start": "1627200",
    "end": "1634919"
  },
  {
    "text": "so I I turned out that my that that I the find the way I when I was exploring",
    "start": "1634919",
    "end": "1640080"
  },
  {
    "text": "this problem I had only three three days to work on it but I worked solid on on",
    "start": "1640080",
    "end": "1645279"
  },
  {
    "text": "those three days um uh then um uh I the",
    "start": "1645279",
    "end": "1651240"
  },
  {
    "text": "final solution I came to was with a combination of of methods no one method was used for the whole for the whole uh",
    "start": "1651240",
    "end": "1657559"
  },
  {
    "text": "problem maybe somebody maybe you'll be able to find a a more Universal uh thing well let me see now",
    "start": "1657559",
    "end": "1666279"
  },
  {
    "text": "um so we we voted and that was the and the decision was that that uh we can all",
    "start": "1666279",
    "end": "1671840"
  },
  {
    "text": "agree that we're working on the same problem if we have these 4 in one gate uh Network and it's it's easier uh to to",
    "start": "1671840",
    "end": "1679080"
  },
  {
    "text": "to agree on it so that's so that's our that's the problem we'll we'll look at um has it has it has",
    "start": "1679080",
    "end": "1687440"
  },
  {
    "text": "this gate in it and and uh this and also this",
    "start": "1687440",
    "end": "1693720"
  },
  {
    "text": "gate even though neither one strictly necessary okay now",
    "start": "1693720",
    "end": "1701919"
  },
  {
    "text": "um uh Rich you said that you wrote in C but it was equ equalent to this well",
    "start": "1702720",
    "end": "1709200"
  },
  {
    "text": "anything is equivalent I mean same basic structure where you have uh a node in a graph for each gate which",
    "start": "1709200",
    "end": "1718399"
  },
  {
    "text": "has inputs and outputs which are Pointers to other nodes right",
    "start": "1718399",
    "end": "1726000"
  },
  {
    "text": "um let me show you one other one other possibility just to just to we did it",
    "start": "1726000",
    "end": "1732480"
  },
  {
    "text": "with arrays um uh we can imagine and an array that's",
    "start": "1732480",
    "end": "1738640"
  },
  {
    "text": "that that has a has a uh the inputs are the numbers that are less than or equal",
    "start": "1738640",
    "end": "1744440"
  },
  {
    "text": "to some some Global variable M say number",
    "start": "1744440",
    "end": "1749559"
  },
  {
    "text": "of inputs um and then uh uh the gates um",
    "start": "1749559",
    "end": "1754679"
  },
  {
    "text": "are represented here in the out so you know this is inputs and and Gates um and",
    "start": "1754679",
    "end": "1764158"
  },
  {
    "text": "outputs and uh then for each for each thing we could have a a a type A type",
    "start": "1764679",
    "end": "1771840"
  },
  {
    "text": "field or or an array called you know where type of one would be would be the code for",
    "start": "1771840",
    "end": "1778519"
  },
  {
    "text": "input and um and uh type uh let's suppose that",
    "start": "1779159",
    "end": "1788840"
  },
  {
    "text": "well there's many ways to do this but let me just give one that um that that",
    "start": "1788840",
    "end": "1794039"
  },
  {
    "text": "generalizes to to to compile there's uh there's there's",
    "start": "1794039",
    "end": "1799200"
  },
  {
    "text": "lots of ways of doing it but here I would put I um one way is to is to use",
    "start": "1799200",
    "end": "1804679"
  },
  {
    "text": "three three words for every gate here where where this one would say four five",
    "start": "1804679",
    "end": "1810120"
  },
  {
    "text": "and six this would really be gate number six this one would be exclusive or uh this one would say",
    "start": "1810120",
    "end": "1817120"
  },
  {
    "text": "fetch and this one would say fetch and then there would be a um an",
    "start": "1817120",
    "end": "1824080"
  },
  {
    "text": "operand um where this one says f f one and this one says fetch two and then um",
    "start": "1824080",
    "end": "1832039"
  },
  {
    "text": "exor is the is the uh um result then",
    "start": "1832039",
    "end": "1837760"
  },
  {
    "text": "let's see I I'll do a couple more and show show what what how this could could work we have always every gate is is a",
    "start": "1837760",
    "end": "1844880"
  },
  {
    "text": "bunch of fetches of its inputs and then it's uh and then um the um",
    "start": "1844880",
    "end": "1850760"
  },
  {
    "text": "operation um uh fetch fetch exclusive or again uh",
    "start": "1850760",
    "end": "1857080"
  },
  {
    "text": "with this one fetches uh seven is fetch um one fetch two and and then fetch uh",
    "start": "1857080",
    "end": "1865960"
  },
  {
    "text": "10 is to fetch um um a which is this six",
    "start": "1865960",
    "end": "1874240"
  },
  {
    "text": "fetch Z which is three and exclusive or now in these other fields we can use",
    "start": "1874240",
    "end": "1879840"
  },
  {
    "text": "that for uh for the list of outputs and so so every gate um um",
    "start": "1879840",
    "end": "1888480"
  },
  {
    "text": "uh the XR and an XR an input can have a field here which points to the uh to the",
    "start": "1888480",
    "end": "1895039"
  },
  {
    "text": "uh um the first use of the of the thing so for example um variable one could",
    "start": "1895039",
    "end": "1902240"
  },
  {
    "text": "Point down here to where it's used in uh this fetch instruction say to seven four",
    "start": "1902240",
    "end": "1909519"
  },
  {
    "text": "um the last use I guess and then this seven could point back to four there's an",
    "start": "1909519",
    "end": "1915159"
  },
  {
    "text": "auxiliary of pointing field let's say if you wanted to keep lists so that this SE",
    "start": "1915159",
    "end": "1920760"
  },
  {
    "text": "this could point to seven which could point to one point back to four and then there's nothing after that this is one",
    "start": "1920760",
    "end": "1926120"
  },
  {
    "text": "way of of of of representing the list of list of outputs in a in a simple link",
    "start": "1926120",
    "end": "1932039"
  },
  {
    "text": "linked fashion um when you compiled this part of the the network it this was",
    "start": "1932039",
    "end": "1937480"
  },
  {
    "text": "pointing to flor uh but then when you when you added this gate you added this added this guy",
    "start": "1937480",
    "end": "1944279"
  },
  {
    "text": "onto the list and it referred back to the to the prev one the list could go in either direction but uh probably",
    "start": "1944279",
    "end": "1950360"
  },
  {
    "text": "pointing back is just as easy now similar to this exclusive or a would then be used in um in in in in 10 and 10",
    "start": "1950360",
    "end": "1959679"
  },
  {
    "text": "would point back to to this and the outputs would uh would all be fetches and so everything that's used in",
    "start": "1959679",
    "end": "1967000"
  },
  {
    "text": "an output would would get moved here that's uh I haven't filled in all these numbers but I think it's fairly clear",
    "start": "1967000",
    "end": "1972960"
  },
  {
    "text": "that that uh you could do it with ordinary in train if you had to by by",
    "start": "1972960",
    "end": "1979720"
  },
  {
    "text": "three arrays like this and then you could have other other arrays uh for",
    "start": "1979720",
    "end": "1984880"
  },
  {
    "text": "Value uh or labels or whatever you you else you want to be calculating on the U",
    "start": "1984880",
    "end": "1991559"
  },
  {
    "text": "on the thing as it goes now um but that's not the only data structure question in here",
    "start": "1991559",
    "end": "1999480"
  },
  {
    "text": "um uh if we're doing a a heris search at least maybe I'm maybe I'm naive but uh",
    "start": "1999480",
    "end": "2007320"
  },
  {
    "text": "um if I'm going to do a a a search that goes forward and backward as we uh as we",
    "start": "2007320",
    "end": "2014320"
  },
  {
    "text": "did in class last Tuesday um I'm I'm solving uh what are",
    "start": "2014320",
    "end": "2020399"
  },
  {
    "text": "the typical problems that I'm that I'm working on let me go over here um I have",
    "start": "2020399",
    "end": "2025760"
  },
  {
    "text": "a gate that um maybe it's exclusive orgate or something like this and I'm and I'm",
    "start": "2025760",
    "end": "2032559"
  },
  {
    "text": "saying that this this gate is I'm going to assume that this gate is zero",
    "start": "2032559",
    "end": "2038000"
  },
  {
    "text": "um and I want to I want to find the values of the input that's going to make this gate zero and there will be sever",
    "start": "2038000",
    "end": "2044600"
  },
  {
    "text": "I'll know properties of other of other Gates too uh so if this one is zero then what",
    "start": "2044600",
    "end": "2052158"
  },
  {
    "text": "do I know about the about the two uh the two",
    "start": "2052159",
    "end": "2058480"
  },
  {
    "text": "gates that feed into it they have the same value that they're the same value so this is somehow Alpha and Alpha that",
    "start": "2058480",
    "end": "2065200"
  },
  {
    "text": "these are that these two are equal um and",
    "start": "2065200",
    "end": "2071079"
  },
  {
    "text": "um uh and then suppose I have a um an an",
    "start": "2071079",
    "end": "2076358"
  },
  {
    "text": "R gate here um and there's some gate like this",
    "start": "2076359",
    "end": "2081720"
  },
  {
    "text": "I also have a a a value uh let's see now let's let's let",
    "start": "2081720",
    "end": "2088000"
  },
  {
    "text": "me make this a one just so that I don't don't need too many so if it's a one then I know that",
    "start": "2088000",
    "end": "2094599"
  },
  {
    "text": "this is Alpha and Alpha bar that the two inputs are uh whatever we don't know what they are but whatever they are",
    "start": "2094599",
    "end": "2100119"
  },
  {
    "text": "they're different um and similarly here at the and gate uh if if uh this one is beta",
    "start": "2100119",
    "end": "2108440"
  },
  {
    "text": "then this one is going to be beta these two will be are known to be equal um",
    "start": "2108440",
    "end": "2114880"
  },
  {
    "text": "because this input is one to the end gate okay and when you have um uh",
    "start": "2114880",
    "end": "2121680"
  },
  {
    "text": "exclusive orgate if this was an exclusive or instead of an N what and this was known to be beta what would",
    "start": "2121680",
    "end": "2127680"
  },
  {
    "text": "this and this is is one we put beta bar here on the on the thing so it looks",
    "start": "2127680",
    "end": "2133520"
  },
  {
    "text": "like a um uh uh the kinds of information",
    "start": "2133520",
    "end": "2139040"
  },
  {
    "text": "that we want to propagate if we want to do an efficient problem solving on this thing um uh would be first of all to",
    "start": "2139040",
    "end": "2146839"
  },
  {
    "text": "know that a gate is is known to be or assumed to be uh",
    "start": "2146839",
    "end": "2152720"
  },
  {
    "text": "constant and secondly that we would that we would uh know or assume some um uh uh",
    "start": "2152720",
    "end": "2161240"
  },
  {
    "text": "relationships between different Gates that these are actually equivalent or inequivalent",
    "start": "2161240",
    "end": "2166839"
  },
  {
    "text": "values now the second according to jzz nobody has has put the second kind of",
    "start": "2166839",
    "end": "2172079"
  },
  {
    "text": "information into into their analogous programs that they were that they were",
    "start": "2172079",
    "end": "2177800"
  },
  {
    "text": "using for with circuits um but it uh if you got a lot of exclusive o it seems",
    "start": "2177800",
    "end": "2183240"
  },
  {
    "text": "like uh like that's a big that could be a big win uh the second kind of information saying that that that that",
    "start": "2183240",
    "end": "2190319"
  },
  {
    "text": "we have equivalence classes between uh between things now now this beta might",
    "start": "2190319",
    "end": "2195560"
  },
  {
    "text": "might propagate a a long ways we might have betas all over the place and we might be able to combine them somewhere",
    "start": "2195560",
    "end": "2200880"
  },
  {
    "text": "else to say that beta and beta bar beta and beta bar is known to be zero for",
    "start": "2200880",
    "end": "2206160"
  },
  {
    "text": "example if you get two inputs to an endgate one is beta and one is beta bar you know that the end is zero even",
    "start": "2206160",
    "end": "2212200"
  },
  {
    "text": "though you don't know what what beta is uh okay so um what what's a good way",
    "start": "2212200",
    "end": "2221119"
  },
  {
    "text": "of representing information that two values or or n values are are are",
    "start": "2221119",
    "end": "2228000"
  },
  {
    "text": "related to each other in this way does anybody have a a good idea for that",
    "start": "2228000",
    "end": "2234640"
  },
  {
    "text": "one everybody now I don't even get Smiles I mean I at the beginning of the day I got",
    "start": "2237640",
    "end": "2243839"
  },
  {
    "text": "smil that's because we all knew and I'm not saying you all knew at at the",
    "start": "2243839",
    "end": "2249240"
  },
  {
    "text": "beginning with the smiles and now nobody knows and and we still not",
    "start": "2249240",
    "end": "2255119"
  },
  {
    "text": "saying okay kind of Silent you could have each value on each line be a function of some certain set of",
    "start": "2255119",
    "end": "2263240"
  },
  {
    "text": "variables okay a set of variables yeah do you know if conversion if conversion",
    "start": "2263240",
    "end": "2269480"
  },
  {
    "text": "no no this is what this is a it's a technique used an optimizing compiler",
    "start": "2269480",
    "end": "2275119"
  },
  {
    "text": "yeah but to get rid of conditional if if sounds like it has to do with NS and rs",
    "start": "2275119",
    "end": "2280240"
  },
  {
    "text": "like if X and Y um and you know that X is false then you",
    "start": "2280240",
    "end": "2285599"
  },
  {
    "text": "don't right and you don't evaluate why uh unless you have to uh it doesn't have",
    "start": "2285599",
    "end": "2292119"
  },
  {
    "text": "to do with not evaluating the Y but it's more like",
    "start": "2292119",
    "end": "2298200"
  },
  {
    "text": "um in dat flow analysis you know if you're at some point Midway down the",
    "start": "2298200",
    "end": "2304040"
  },
  {
    "text": "control flow graph of a program MH and you've taken several if branches you know that a bunch of conditions have to",
    "start": "2304040",
    "end": "2311599"
  },
  {
    "text": "be true that you followed down and in choosing which",
    "start": "2311599",
    "end": "2318800"
  },
  {
    "text": "what in representing the um condition of the data at that point",
    "start": "2318800",
    "end": "2324920"
  },
  {
    "text": "in the program it's like the intersection of a bunch of different things and you could represent generical",
    "start": "2324920",
    "end": "2330359"
  },
  {
    "text": "qu yeah this is but this is a very special case where we just we just have equals and unequals words I I have a",
    "start": "2330359",
    "end": "2335680"
  },
  {
    "text": "bunch of relations in I say X1 is equal to X2 and then I say X3 is equal to X4",
    "start": "2335680",
    "end": "2342160"
  },
  {
    "text": "bar and then I say X2 is equal to X4 um now what's the relation between X1",
    "start": "2342160",
    "end": "2350119"
  },
  {
    "text": "and X3 I have two variable equalities here and and it's always um with bars",
    "start": "2350119",
    "end": "2356359"
  },
  {
    "text": "and and non bars um now from this I I can reduce the relation between X1 and",
    "start": "2356359",
    "end": "2363440"
  },
  {
    "text": "X3 cuz X1 is equal X2 is equal X4 is equal X3 bar so so I want to quickly",
    "start": "2363440",
    "end": "2370240"
  },
  {
    "text": "know X1 is equal X3 bar but there's a data structure that will will tell me",
    "start": "2370240",
    "end": "2375720"
  },
  {
    "text": "this fairly fairly quick Union find Union find yeah okay the union find algorithm is is is a typical name for",
    "start": "2375720",
    "end": "2383079"
  },
  {
    "text": "these for for the class for the keeping track of equivalence classes where we we add another another um feature to Union",
    "start": "2383079",
    "end": "2390680"
  },
  {
    "text": "find where we say where we have things are equivalent but some of them are negated with respect to the",
    "start": "2390680",
    "end": "2397400"
  },
  {
    "text": "others and so what we what we really have is a is an equivalence class here X1",
    "start": "2397400",
    "end": "2403359"
  },
  {
    "text": "X2 um X4 X3 bar X4 somehow is is are",
    "start": "2403359",
    "end": "2409480"
  },
  {
    "text": "known to be equivalent and we want to be able to propagate across equalities quickly all",
    "start": "2409480",
    "end": "2415839"
  },
  {
    "text": "right now there are many there are many U uh ways to represent",
    "start": "2415839",
    "end": "2422359"
  },
  {
    "text": "equivalence passes and um um",
    "start": "2422359",
    "end": "2427720"
  },
  {
    "text": "uh there's and uh the books have have a variety of discussions of this and",
    "start": "2427720",
    "end": "2433359"
  },
  {
    "text": "there's one of them that I that I wanted to uh mention especially because I think",
    "start": "2433359",
    "end": "2439680"
  },
  {
    "text": "it's the easiest one to to undo um you see if we're going to be going if we're",
    "start": "2439680",
    "end": "2446000"
  },
  {
    "text": "going to be exploring this uh this circuit uh uh and we're going to be",
    "start": "2446000",
    "end": "2451720"
  },
  {
    "text": "making hypothesis where we have to Branch um uh",
    "start": "2451720",
    "end": "2456800"
  },
  {
    "text": "it's it's sometimes desirable I guess you either have to save the world so that if your if the branch you took was",
    "start": "2456800",
    "end": "2462720"
  },
  {
    "text": "was unsuccessful and you have to try again uh start over from scratch or you have to have a way of undoing the",
    "start": "2462720",
    "end": "2468640"
  },
  {
    "text": "decisions that you made undoing what what uh what changes to data structure you made based on assumption that later",
    "start": "2468640",
    "end": "2475839"
  },
  {
    "text": "proved to be false so um uh I I want to show you one that uh a structure that uh",
    "start": "2475839",
    "end": "2483599"
  },
  {
    "text": "that is that's guaranteed to be that's known to be very I in practice and also is easy to undo uh for this for this",
    "start": "2483599",
    "end": "2490640"
  },
  {
    "text": "problem and and uh the idea is very simple uh if you have if you have things",
    "start": "2490640",
    "end": "2495800"
  },
  {
    "text": "that are that are known to be equivalent to each other let's suppose uh I'll represent them by circles we just have",
    "start": "2495800",
    "end": "2501720"
  },
  {
    "text": "them pointing we just have we just have each one pointing to the next guy in",
    "start": "2501720",
    "end": "2507200"
  },
  {
    "text": "the in the um in the list um and they also point and they also point to a home",
    "start": "2507200",
    "end": "2514800"
  },
  {
    "text": "to a to a um um a a a header node so each one of",
    "start": "2514800",
    "end": "2520200"
  },
  {
    "text": "these also has a has a pointer to the header which I won't draw to the header but the header here is is",
    "start": "2520200",
    "end": "2526800"
  },
  {
    "text": "um um contains it has an address U that",
    "start": "2526800",
    "end": "2532119"
  },
  {
    "text": "you can say that uh they're all pointing to him and the header says four it's also tells you tells how many there are",
    "start": "2532119",
    "end": "2537680"
  },
  {
    "text": "in the ring um U the header I don't think has",
    "start": "2537680",
    "end": "2543160"
  },
  {
    "text": "has a pointer to anybody in the ring I I think we can get by with only to the header then there's another one over",
    "start": "2543160",
    "end": "2548680"
  },
  {
    "text": "here um that I I'll say these people are are also known to be equivalent and they",
    "start": "2548680",
    "end": "2556400"
  },
  {
    "text": "have their header which equals three so they're also pointing here now um",
    "start": "2556400",
    "end": "2564760"
  },
  {
    "text": "by uh let's forget the complimenting part of it first uh we can represent the",
    "start": "2564760",
    "end": "2569880"
  },
  {
    "text": "complimented part by having the negative of the pointer here for example or another bit in this anyway some other",
    "start": "2569880",
    "end": "2575400"
  },
  {
    "text": "bit in this represent say saying that this is this is equal to the complement of of of of of the other one if if if",
    "start": "2575400",
    "end": "2582480"
  },
  {
    "text": "you don't have the same bits but but um now in order to in order to make uh two",
    "start": "2582480",
    "end": "2588760"
  },
  {
    "text": "things equivalent well first of all it's easy to tell whether two things are equivalent because if because you look",
    "start": "2588760",
    "end": "2594040"
  },
  {
    "text": "at the at the pointer if they point to the same header then they're equivalent if they don't point to the same header then they aren't okay now suppose",
    "start": "2594040",
    "end": "2600760"
  },
  {
    "text": "somebody gives you an equivalence uh which is called the union there's a union and a f the find is to find what",
    "start": "2600760",
    "end": "2607079"
  },
  {
    "text": "equivalence class you're you're in that's that's immediate that just you uh one one reference tells you what what",
    "start": "2607079",
    "end": "2613119"
  },
  {
    "text": "equivalence class you're in as a pointer to the header the union is to take two of these rings that are not equivalent",
    "start": "2613119",
    "end": "2620440"
  },
  {
    "text": "and to merge them into one and uh uh what do we have to do in",
    "start": "2620440",
    "end": "2625880"
  },
  {
    "text": "order to make these two equivalent well we got to change two rings into one",
    "start": "2625880",
    "end": "2632079"
  },
  {
    "text": "ring um and we also have to update uh the some of these pointers",
    "start": "2632079",
    "end": "2640160"
  },
  {
    "text": "okay now that's why that's that's where they the reason for storing four and",
    "start": "2640160",
    "end": "2645240"
  },
  {
    "text": "three comes along in here um uh we can look at those and see which one is the smaller and uh use that and and choose",
    "start": "2645240",
    "end": "2652880"
  },
  {
    "text": "to update the pointers in the smaller one and so so by",
    "start": "2652880",
    "end": "2658760"
  },
  {
    "text": "um uh so suppose somebody suppose this is node p and this is q and somebody",
    "start": "2658760",
    "end": "2664720"
  },
  {
    "text": "says now p is equivalent to Q",
    "start": "2664720",
    "end": "2671160"
  },
  {
    "text": "um then all let's forget about the Q Bar would be another thing but but there's a",
    "start": "2671160",
    "end": "2676920"
  },
  {
    "text": "corresponding thing for qar okay now what what changes have to have to go in",
    "start": "2676920",
    "end": "2682160"
  },
  {
    "text": "the data structure and use another color of chalk orange chalk will be after um what's the smallest number of",
    "start": "2682160",
    "end": "2689480"
  },
  {
    "text": "changes I can do to this data structure to make the uh um uh to to represent the",
    "start": "2689480",
    "end": "2695720"
  },
  {
    "text": "fact that P is equal to Q now one remember I've given pointers to",
    "start": "2695720",
    "end": "2702480"
  },
  {
    "text": "p and Q and I don't know who points to p i you know I I don't there'll be four",
    "start": "2702480",
    "end": "2708720"
  },
  {
    "text": "five four tell me what they are just I mean you you break the connection at some point on U",
    "start": "2708720",
    "end": "2717000"
  },
  {
    "text": "on on any one of them let's on P yeah break the out out connection connect it",
    "start": "2717000",
    "end": "2722400"
  },
  {
    "text": "to Q connect it to Q oops",
    "start": "2722400",
    "end": "2727880"
  },
  {
    "text": "I mean connected to Q remembering that the essentially connected to the one next to Q remembering that Q is this one",
    "start": "2729760",
    "end": "2736319"
  },
  {
    "text": "here no connect it to this one all right no okay this",
    "start": "2736319",
    "end": "2743720"
  },
  {
    "text": "one I I know what that one is because Q is pointing to it I have I have a pointer to that one because Q points to",
    "start": "2743720",
    "end": "2749599"
  },
  {
    "text": "that one right and now you make Q point to the one next to yeah",
    "start": "2749599",
    "end": "2756680"
  },
  {
    "text": "um this always is is true by the way if you have two cycles and you uh and you",
    "start": "2756680",
    "end": "2762520"
  },
  {
    "text": "interchange the pointers you you you always merge the Cycles together uh this is a uh in a",
    "start": "2762520",
    "end": "2770200"
  },
  {
    "text": "permutation if you have two two disjoint cycles and you multiply by a transposition that's equivalent to",
    "start": "2770200",
    "end": "2776800"
  },
  {
    "text": "changing two of the pointers so so now we got a a a circle it comes it's it's a",
    "start": "2776800",
    "end": "2782040"
  },
  {
    "text": "funny thing but it it does tie everything together and it was immediate to how to how to get that because we",
    "start": "2782040",
    "end": "2788520"
  },
  {
    "text": "just change link interchange link of p with link of Q you got furthermore we have to yeah so",
    "start": "2788520",
    "end": "2795880"
  },
  {
    "text": "first of all we got to modify these guys by by going around the the loop to",
    "start": "2795880",
    "end": "2804000"
  },
  {
    "text": "Q in which case we could in fact uh figure out um if we wanted to who was",
    "start": "2804000",
    "end": "2809520"
  },
  {
    "text": "pointing to Q uh but while we were doing that so we could have broken this this",
    "start": "2809520",
    "end": "2815319"
  },
  {
    "text": "one in another point and we also have to change this to seven by adding the",
    "start": "2815319",
    "end": "2820440"
  },
  {
    "text": "two together okay why do you need the the link list at all I mean what are you using it for I mean the circularly",
    "start": "2820440",
    "end": "2828000"
  },
  {
    "text": "linked list to yeah all the why do we keep why don't we just have pointers all",
    "start": "2828000",
    "end": "2834280"
  },
  {
    "text": "the way up otherwise you wouldn't have been able to change the header pointers yeah it's the circular link list is",
    "start": "2834280",
    "end": "2839839"
  },
  {
    "text": "helping us to telling me which which pointers to change um good question I",
    "start": "2839839",
    "end": "2845240"
  },
  {
    "text": "just uh thought that instead of storing in each uh in each node a pointer to the header",
    "start": "2845240",
    "end": "2852480"
  },
  {
    "text": "M the header itself could be an uh let's say a node which contains a value okay",
    "start": "2852480",
    "end": "2857800"
  },
  {
    "text": "and if both of them are just headers which contain a value right you just change the value of",
    "start": "2857800",
    "end": "2863359"
  },
  {
    "text": "the other header and yeah now that that leads to another important class of Union find algorithms that go that uh",
    "start": "2863359",
    "end": "2870359"
  },
  {
    "text": "you keep on on going upward until you get to so so that the find algorithm searches maybe more than one one step",
    "start": "2870359",
    "end": "2876760"
  },
  {
    "text": "that's what you mean yeah and and uh those are that's uh",
    "start": "2876760",
    "end": "2882839"
  },
  {
    "text": "um it's it's very interesting theory of this we could we could spend several weeks just discussing UNIF find",
    "start": "2882839",
    "end": "2888599"
  },
  {
    "text": "algorithms because uh for example um um Tarin has the has uh proved that certain",
    "start": "2888599",
    "end": "2896960"
  },
  {
    "text": "one has a has a worst case that's you need more than the number of things in the universe in order to make",
    "start": "2896960",
    "end": "2903200"
  },
  {
    "text": "it go more than length five and things like this and and uh there's U uh the",
    "start": "2903200",
    "end": "2908520"
  },
  {
    "text": "Andy ya and I have proved that this particular kind of scheme uh is uh is",
    "start": "2908520",
    "end": "2914559"
  },
  {
    "text": "linear on the average that is uh if you if you take uh equivalences on the",
    "start": "2914559",
    "end": "2919920"
  },
  {
    "text": "average then the average amount of work per update is is U something like 1.5",
    "start": "2919920",
    "end": "2927079"
  },
  {
    "text": "updates or something like this um in the worst case it's got to be u n log n",
    "start": "2927079",
    "end": "2932720"
  },
  {
    "text": "because if you're always merging the smaller into the larger it it's known that I mean it's not too",
    "start": "2932720",
    "end": "2938280"
  },
  {
    "text": "hard to see that that you couldn't be um updating something five times unless you unless",
    "start": "2938280",
    "end": "2944839"
  },
  {
    "text": "the the the class has doubled itself five times and every time you you you",
    "start": "2944839",
    "end": "2950799"
  },
  {
    "text": "merge you get into a a larger one so so anyway there's this",
    "start": "2950799",
    "end": "2956040"
  },
  {
    "text": "this one has a good worth case and also good and and Optimum average case in a",
    "start": "2956040",
    "end": "2961160"
  },
  {
    "text": "sense but uh um but there are many other other schemes I uh the point that I wanted to",
    "start": "2961160",
    "end": "2968799"
  },
  {
    "text": "make is that that undoing can also be because we still have saved this number",
    "start": "2968799",
    "end": "2975000"
  },
  {
    "text": "three still exists and I think it's it's it's interesting to observe that if I store the right information about this I",
    "start": "2975000",
    "end": "2982520"
  },
  {
    "text": "think I I have to keep only one or two um uh things um maybe maybe I need to",
    "start": "2982520",
    "end": "2989000"
  },
  {
    "text": "know p and Q but to make p in equivalent to Q again suppose I wanted to undo this",
    "start": "2989000",
    "end": "2994640"
  },
  {
    "text": "operation uh let's see if we can figure out how we could undo",
    "start": "2994640",
    "end": "3000280"
  },
  {
    "text": "it um uh so we're given the orange and now",
    "start": "3000280",
    "end": "3006920"
  },
  {
    "text": "we want to get back the yellow uh so p is so um so if I swap the",
    "start": "3006920",
    "end": "3014240"
  },
  {
    "text": "point if certainly if I swap the pointers of p and Q again then that that",
    "start": "3014240",
    "end": "3019799"
  },
  {
    "text": "would that would give me um my original two rings",
    "start": "3019799",
    "end": "3026280"
  },
  {
    "text": "you still have your old pointer from Q around um yeah I would keep I would keep",
    "start": "3026280",
    "end": "3031680"
  },
  {
    "text": "in a data structure p and Q saying that I that was one of the things I did other words I might I I would keep an",
    "start": "3031680",
    "end": "3038000"
  },
  {
    "text": "undo data structure which would have operations that I that I change the value so that would be setting a setting",
    "start": "3038000",
    "end": "3044440"
  },
  {
    "text": "P to zero setting P to one setting P to Q setting P to Q Bar and then I would",
    "start": "3044440",
    "end": "3050720"
  },
  {
    "text": "know how to undo all four those operations even if you didn't you could still wander around the second ring",
    "start": "3050720",
    "end": "3056400"
  },
  {
    "text": "until you came back to the oh wait a minute all right so you do have to",
    "start": "3056400",
    "end": "3063400"
  },
  {
    "text": "keeped to the old hitter yeah somebody has to remember where that one was oh well with",
    "start": "3063400",
    "end": "3069559"
  },
  {
    "text": "your change you could say that one of the things you did was p uh equivalent to q and then also store the header okay",
    "start": "3069559",
    "end": "3076200"
  },
  {
    "text": "so what if I stored just p and the header could I figure out what Q",
    "start": "3076200",
    "end": "3081240"
  },
  {
    "text": "was no we just three around yeah I know see",
    "start": "3084359",
    "end": "3090280"
  },
  {
    "text": "the header still contains the number three nobody didd with that um and so so it's three steps from",
    "start": "3090280",
    "end": "3097160"
  },
  {
    "text": "from the beginning that's that tells me what Q is um because p is pointing",
    "start": "3097160",
    "end": "3103559"
  },
  {
    "text": "here and I can be changing all these guys to point to the old header and I'll find what Q is and then I can",
    "start": "3103559",
    "end": "3111119"
  },
  {
    "text": "interchange the point the p and Q so so so remembering p and three on my undo list would would be",
    "start": "3111119",
    "end": "3120720"
  },
  {
    "text": "sufficient uh to",
    "start": "3120720",
    "end": "3124440"
  },
  {
    "text": "uh not you have to undo in the order that you uh yeah reverse order backwards",
    "start": "3126440",
    "end": "3131520"
  },
  {
    "text": "order yeah so you have a stack of things to undo and you go back that's a good good point if if you try to go the other",
    "start": "3131520",
    "end": "3137480"
  },
  {
    "text": "other way you'd be in trouble so you so undo uh in last in first out",
    "start": "3137480",
    "end": "3143319"
  },
  {
    "text": "order yeah okay um now there might be other it it might",
    "start": "3143319",
    "end": "3149200"
  },
  {
    "text": "be uh just as easy to do undo other Union F structures and I have to add to this the extra complication of negating",
    "start": "3149200",
    "end": "3157599"
  },
  {
    "text": "uh uh bits um and it turned out that the representation that I",
    "start": "3157599",
    "end": "3163920"
  },
  {
    "text": "had",
    "start": "3174240",
    "end": "3177240"
  },
  {
    "text": "there might be other it it might be uh just as easy to do undo other Union find",
    "start": "3184119",
    "end": "3189200"
  },
  {
    "text": "structures and I have to add to this the extra complication of negating uh uh",
    "start": "3189200",
    "end": "3194880"
  },
  {
    "text": "bits um and it turned out that the representation that I had",
    "start": "3194880",
    "end": "3201200"
  },
  {
    "text": "um sometimes didn't restore this structure exactly um in in the sense",
    "start": "3201200",
    "end": "3206839"
  },
  {
    "text": "that these these bits would either be instead of instead of having like like suppose I suppose I said that this was",
    "start": "3206839",
    "end": "3212880"
  },
  {
    "text": "uh three and this was three bar and this was three bar um it might after I restored it it",
    "start": "3212880",
    "end": "3218960"
  },
  {
    "text": "might be that this is three bar three and three I might have I think in my data structure I might have reversed the",
    "start": "3218960",
    "end": "3224680"
  },
  {
    "text": "sense of a of an equivalence class but that didn't I don't think that matters",
    "start": "3224680",
    "end": "3230200"
  },
  {
    "text": "and I just I just changed the um uh I I",
    "start": "3230200",
    "end": "3235720"
  },
  {
    "text": "all all that matters was the relation of things to each other but not whether or not all of these things it complemented",
    "start": "3235720",
    "end": "3241440"
  },
  {
    "text": "all of the bits representing um I mean this if I change that one to to this",
    "start": "3241440",
    "end": "3250119"
  },
  {
    "text": "one instead that would have a different representation but it's equivalent for pro processing purposes and I think",
    "start": "3250119",
    "end": "3256160"
  },
  {
    "text": "after undoing mine I didn't know the difference between these two and I might have restored this one as this one",
    "start": "3256160",
    "end": "3262119"
  },
  {
    "text": "something like that but it didn't but I shouldn't matter yeah Mike what troubles",
    "start": "3262119",
    "end": "3267160"
  },
  {
    "text": "me is I don't see how to use this s of representation to represent all the information that you get for instance if",
    "start": "3267160",
    "end": "3272760"
  },
  {
    "text": "you have an or whose output is one how do you express the relationship between its inputs okay um now if I have an R",
    "start": "3272760",
    "end": "3281440"
  },
  {
    "text": "whose output is one how do I represent how do I represent the the thing of the inputs and that's we haven't we haven't",
    "start": "3281440",
    "end": "3288400"
  },
  {
    "text": "got any information there we know if one is the one is one or the other is one it's an or and I haven't covered that",
    "start": "3288400",
    "end": "3295200"
  },
  {
    "text": "right if I have an or that's output is zero then we propagate we can push that",
    "start": "3295200",
    "end": "3300480"
  },
  {
    "text": "back to the inputs and we can push it forward if um but there's some kinds of",
    "start": "3300480",
    "end": "3306520"
  },
  {
    "text": "of um of of uh feedback uh that we haven't uh haven't done yet and uh um",
    "start": "3306520",
    "end": "3314839"
  },
  {
    "text": "that's a problem that I'd like to leave till Thursday um has a very interesting solution too",
    "start": "3314839",
    "end": "3322960"
  },
  {
    "text": "of at least one interesting solution but what time is it now 12:01 um we could we could talk about",
    "start": "3322960",
    "end": "3329920"
  },
  {
    "text": "that now but uh I wanted to finish um any other U",
    "start": "3329920",
    "end": "3338880"
  },
  {
    "text": "data structure issues let me see so if somebody so one one of the points then",
    "start": "3338880",
    "end": "3344319"
  },
  {
    "text": "that you could do I'm not I don't mean to force this on anybody I'm saying this is one way to represent equivalence",
    "start": "3344319",
    "end": "3350240"
  },
  {
    "text": "class I think it's valuable to consider four kinds of values um",
    "start": "3350240",
    "end": "3356079"
  },
  {
    "text": "and U incidentally in this in this um case here this particular representation",
    "start": "3356079",
    "end": "3363119"
  },
  {
    "text": "um has happens to have the property that um on on an",
    "start": "3363119",
    "end": "3369000"
  },
  {
    "text": "input on an input or an exclusive Oran these things that have values uh the operand is a pointer to where it's used",
    "start": "3369000",
    "end": "3377240"
  },
  {
    "text": "and um uh the a oxfield hasn't been mentioned yet uh on the case of a of a",
    "start": "3377240",
    "end": "3383000"
  },
  {
    "text": "fetch the operan is a um is is it says where to fetch it from the auxiliary is",
    "start": "3383000",
    "end": "3391000"
  },
  {
    "text": "the next place where this input was was also used so in other words uh you know",
    "start": "3391000",
    "end": "3398079"
  },
  {
    "text": "the previous place where where the same where the same value was fetched it's is here in the case of the fetch uh but but",
    "start": "3398079",
    "end": "3405640"
  },
  {
    "text": "then we have we have the ox field to use on on these other guys for Value so so so you could have the the value here of",
    "start": "3405640",
    "end": "3411960"
  },
  {
    "text": "you know value of uh um uh values on on",
    "start": "3411960",
    "end": "3418400"
  },
  {
    "text": "the in these particular Fields um uh fetch um uh we don't need values",
    "start": "3418400",
    "end": "3427119"
  },
  {
    "text": "and and here we could so here here we have the the value of the gate the known value of the gate so far and the value",
    "start": "3427119",
    "end": "3434720"
  },
  {
    "text": "of the gate so far is um a for of of of three kinds it's either known to be zero",
    "start": "3434720",
    "end": "3441520"
  },
  {
    "text": "or known to be one or known to be a member of an equivalence class initially all the gates are in an",
    "start": "3441520",
    "end": "3447359"
  },
  {
    "text": "equivalence class of size one they're known to be equivalent tosel you know um",
    "start": "3447359",
    "end": "3453640"
  },
  {
    "text": "and so so this gives a um you know this value for example you could represent it",
    "start": "3453640",
    "end": "3459359"
  },
  {
    "text": "the following way zero could represent zero one could represent one and the numbers 2 3 4 could be",
    "start": "3459359",
    "end": "3465240"
  },
  {
    "text": "headers um and minus two could be um uh could be the um uh the the the",
    "start": "3465240",
    "end": "3473280"
  },
  {
    "text": "negative of the of the header in fact I believe what I did was I represented zero as minus",
    "start": "3473280",
    "end": "3479240"
  },
  {
    "text": "one so that complimenting was always taking the negative of a of a value so",
    "start": "3479240",
    "end": "3484680"
  },
  {
    "text": "minus one represented a g a gate value of zero and one represented a gate of of",
    "start": "3484680",
    "end": "3489720"
  },
  {
    "text": "one and then um um minus 3 and three would be would be values that are known",
    "start": "3489720",
    "end": "3496440"
  },
  {
    "text": "to be um uh negatives of each other but minus 3 and four are values that are",
    "start": "3496440",
    "end": "3501920"
  },
  {
    "text": "uncorrelated with each other and then then you could build sub routines that would manipulate these values um and",
    "start": "3501920",
    "end": "3509039"
  },
  {
    "text": "being able to undo the manipulations on values um now",
    "start": "3509039",
    "end": "3517359"
  },
  {
    "text": "um uh let's see the uh",
    "start": "3517359",
    "end": "3524119"
  },
  {
    "text": "uh uh the next thing to is to say what kind of manipulations do we do on values",
    "start": "3524119",
    "end": "3529559"
  },
  {
    "text": "and that's to introduce what we would talk about on Thursday so so um",
    "start": "3529559",
    "end": "3536720"
  },
  {
    "text": "uh we had um there's a there's there's several",
    "start": "3539039",
    "end": "3546760"
  },
  {
    "text": "problems to to work out one is to to figure out what what what our whole goal",
    "start": "3546760",
    "end": "3552520"
  },
  {
    "text": "is of of what whatever we're working on at the time is we might be be um uh",
    "start": "3552520",
    "end": "3557920"
  },
  {
    "text": "trying for example to um well let's let's State the following",
    "start": "3557920",
    "end": "3563039"
  },
  {
    "text": "suppose we have uh suppose I have a um um my my my my complicated dag and I and",
    "start": "3563039",
    "end": "3572559"
  },
  {
    "text": "I want to find a set of inputs so that specific gates are are known to have certain values I guess that's one",
    "start": "3572559",
    "end": "3579160"
  },
  {
    "text": "reasonably General sub problem so suppose I I want to say that say gate five is supposed to equal 1 gate six is",
    "start": "3579160",
    "end": "3587039"
  },
  {
    "text": "supposed to equal 0 and gate um 11 or",
    "start": "3587039",
    "end": "3592359"
  },
  {
    "text": "let's say 300 is supposed to equal one and um now I want to find inputs for and",
    "start": "3592359",
    "end": "3599160"
  },
  {
    "text": "suppose I've decided that this is a sub problem which I'm interested in I find uh I find a set of inputs uh a general",
    "start": "3599160",
    "end": "3606240"
  },
  {
    "text": "set of inputs for which uh uh this these have the property okay now um this is",
    "start": "3606240",
    "end": "3614839"
  },
  {
    "text": "our starting our starting thing and and uh it's very much like a theorem proving",
    "start": "3614839",
    "end": "3620400"
  },
  {
    "text": "problem uh uh in um uh to tie it in with other kinds of of fistic search that is",
    "start": "3620400",
    "end": "3627359"
  },
  {
    "text": "I want to I want to find uh um some axioms which are values of initial",
    "start": "3627359",
    "end": "3633799"
  },
  {
    "text": "variables axioms x0 equal equal 1 might be an axiom X2 = X3 might be an axiom I",
    "start": "3633799",
    "end": "3640760"
  },
  {
    "text": "want to find a set of axioms from which these are theorems so these are un these are un unproven",
    "start": "3640760",
    "end": "3647559"
  },
  {
    "text": "theorems and I and I I um wish to um",
    "start": "3647559",
    "end": "3655680"
  },
  {
    "text": "uh to have a way of of verifying but because the X's are there I want to have a way of verifying that these are",
    "start": "3655680",
    "end": "3661799"
  },
  {
    "text": "theorems and and uh uh thinking of this theorem proving was is I think a",
    "start": "3661799",
    "end": "3668160"
  },
  {
    "text": "helpful a very helpful way to to to look at because you've got a some you've got some things that are that are known to",
    "start": "3668160",
    "end": "3675280"
  },
  {
    "text": "be true um and some things that are assumed to be true and some things that apply other",
    "start": "3675280",
    "end": "3683160"
  },
  {
    "text": "things but if they're but if you if you if you mix up what's what's assumed and what's known um it can get very",
    "start": "3683160",
    "end": "3691799"
  },
  {
    "text": "confusing uh and um uh so so there so there's uh that's",
    "start": "3691799",
    "end": "3700000"
  },
  {
    "text": "the issue that I'm that um I think everybody has to confront for themselves",
    "start": "3700000",
    "end": "3705640"
  },
  {
    "text": "in order to to to understand it it's you don't just I don't know you don't just uh",
    "start": "3705640",
    "end": "3712359"
  },
  {
    "text": "understand it by by hearing about it or seeing somebody else do it you have to have to be confronting with that",
    "start": "3712359",
    "end": "3717680"
  },
  {
    "text": "yourself that's why I don't want to talk much about it until you've actually had a chance to think about it but when we when we do say that G5 is one and G6 is",
    "start": "3717680",
    "end": "3725559"
  },
  {
    "text": "zero one of the things we'll say suppose G5 is an and gate and it's one then we know that both of the inputs to G5 have",
    "start": "3725559",
    "end": "3731520"
  },
  {
    "text": "to be one um and so we're going to have to set as a sub goal to prove that the two",
    "start": "3731520",
    "end": "3737520"
  },
  {
    "text": "inputs are equal to one cuz G5 is one of our goals um now if G5 is uh but we we",
    "start": "3737520",
    "end": "3744079"
  },
  {
    "text": "could also um since G5 someday will be proved",
    "start": "3744079",
    "end": "3749480"
  },
  {
    "text": "we could also use use the fact that G5 equals one uh suppose G5 is the input to",
    "start": "3749480",
    "end": "3755000"
  },
  {
    "text": "a uh to an orgate then we know that that orgate is equal to one G5 is an input to",
    "start": "3755000",
    "end": "3760559"
  },
  {
    "text": "an exclusive orgate then we know that uh we got an equivalence relation U uh of",
    "start": "3760559",
    "end": "3766880"
  },
  {
    "text": "the output of that exclusive orgate and the negative of the input um and uh and",
    "start": "3766880",
    "end": "3773200"
  },
  {
    "text": "that'll be a consequence of what we what we will prove someday so a uh a the general idea is",
    "start": "3773200",
    "end": "3780760"
  },
  {
    "text": "that that you can solve a problem like this uh somehow or other manipulating",
    "start": "3780760",
    "end": "3786599"
  },
  {
    "text": "values saying saying that certain things are forced uh to be true uh as a",
    "start": "3786599",
    "end": "3792400"
  },
  {
    "text": "consequence of things we've we've proved or or or or or someday will prove other",
    "start": "3792400",
    "end": "3798079"
  },
  {
    "text": "things are assumed to be true or sub goals are still are added to the list of things to prove",
    "start": "3798079",
    "end": "3805440"
  },
  {
    "text": "um uh as we as we um uh and but those",
    "start": "3805440",
    "end": "3810520"
  },
  {
    "text": "those list of things to prove are also represented by values um say prove that",
    "start": "3810520",
    "end": "3816000"
  },
  {
    "text": "G5 is one that's a one is a value prove that another sub goal might be prove",
    "start": "3816000",
    "end": "3822039"
  },
  {
    "text": "that G3 is equal to G4 bar um okay",
    "start": "3822039",
    "end": "3829200"
  },
  {
    "text": "so uh uh now when you get to an R gate and",
    "start": "3829200",
    "end": "3834319"
  },
  {
    "text": "you say G6 is zero and G I'm sorry G5 is one but that's an orgate then you then",
    "start": "3834319",
    "end": "3842960"
  },
  {
    "text": "you've got two sub goals you can either you suppos it's its first input is one or its second input is",
    "start": "3842960",
    "end": "3849480"
  },
  {
    "text": "one and U so uh uh you got to bite the",
    "start": "3849480",
    "end": "3855359"
  },
  {
    "text": "bullettin and say well let's let's first let's temporarily assume the first one is one and if that doesn't work out I",
    "start": "3855359",
    "end": "3863760"
  },
  {
    "text": "undo thing back track and uh see if it's uh if the first input is uh and and uh",
    "start": "3863760",
    "end": "3871720"
  },
  {
    "text": "you know the first input is zero and uh the second um is",
    "start": "3871720",
    "end": "3877240"
  },
  {
    "text": "one um now that takes time because every time you you split into two split your",
    "start": "3877240",
    "end": "3884160"
  },
  {
    "text": "problem into two parts you might be doubling the amount of time you spend on so solving the problem so it's a Val",
    "start": "3884160",
    "end": "3891039"
  },
  {
    "text": "it's advantageous to do all the force mov first to do all the all the deductions",
    "start": "3891039",
    "end": "3897039"
  },
  {
    "text": "that don't require branching uh and and and and carry out all consequences forward and backward as",
    "start": "3897039",
    "end": "3902880"
  },
  {
    "text": "far as you can that's why an equivalence scheme like this uh gives you a lot more",
    "start": "3902880",
    "end": "3907920"
  },
  {
    "text": "things to to propagate um uh without branching um yet then there comes a time",
    "start": "3907920",
    "end": "3915760"
  },
  {
    "text": "when a branch has to be made um and uh there's a a question as to which branch",
    "start": "3915760",
    "end": "3921400"
  },
  {
    "text": "to take um and uh uh the or to and and to try to",
    "start": "3921400",
    "end": "3929760"
  },
  {
    "text": "minimize the amount of uh the the amount of branching that's done uh uh the",
    "start": "3929760",
    "end": "3936359"
  },
  {
    "text": "amount of total amount of computation usually if you put a lot of if you it it it it pays to put a lot of extra",
    "start": "3936359",
    "end": "3944359"
  },
  {
    "text": "computation into cutting down the number of branches that you have to do yeah Andy well couldn't you also use some",
    "start": "3944359",
    "end": "3950599"
  },
  {
    "text": "forward that would be backward chaining but couldn't you also use some forward chaining to kind of reduce the search",
    "start": "3950599",
    "end": "3955799"
  },
  {
    "text": "yes like forward chaining for example you mean what um for instance to force a gate near the top of the circuit you",
    "start": "3955799",
    "end": "3961760"
  },
  {
    "text": "know a gate that's not nested too deeply to be one or zero you can explicitly compute as we did a few sessions ago um",
    "start": "3961760",
    "end": "3969680"
  },
  {
    "text": "which patterns of inputs would force it to a zero or one so if you've already forced some of the inputs to be certain",
    "start": "3969680",
    "end": "3975000"
  },
  {
    "text": "things and you get to a gate and you want to know if you can force it you see if the current set of inputs is compatible with the set of inputs that",
    "start": "3975000",
    "end": "3981400"
  },
  {
    "text": "would force the gate to be the zero or the one so so so what I what I was envisioning",
    "start": "3981400",
    "end": "3987440"
  },
  {
    "text": "is that I have a that that I have a value structure here now in these in these um with each gate every third",
    "start": "3987440",
    "end": "3995839"
  },
  {
    "text": "position in this section and and and every position here there's there are values on these things and there's",
    "start": "3995839",
    "end": "4001839"
  },
  {
    "text": "relations between values whenever I know that uh an and gate is one then I know",
    "start": "4001839",
    "end": "4008119"
  },
  {
    "text": "that its inputs are both one whenever I know that an XR gate is one I know that",
    "start": "4008119",
    "end": "4013160"
  },
  {
    "text": "its inputs are both both complements of each other going the other way if an n gate is one oh if it's if an input is",
    "start": "4013160",
    "end": "4022240"
  },
  {
    "text": "one I know something about the other about the um the the value of it um and",
    "start": "4022240",
    "end": "4029680"
  },
  {
    "text": "if if two inputs are complimentary and I'm taking their end I know that I know that the end is zero if they're",
    "start": "4029680",
    "end": "4036160"
  },
  {
    "text": "complimentary I Tak or I know that the or so so I know uh relationships on",
    "start": "4036160",
    "end": "4043480"
  },
  {
    "text": "these values and given any set of values I can explore that to its uh uh completion right it's a its closure um",
    "start": "4043480",
    "end": "4052559"
  },
  {
    "text": "uh all of the uh all the consequences of of any set of of values in the value",
    "start": "4052559",
    "end": "4057799"
  },
  {
    "text": "structure and and uh uh so for example the as you mentioned the input I might",
    "start": "4057799",
    "end": "4064160"
  },
  {
    "text": "know that some inputs are there well those will those can propagate forward all the way to to",
    "start": "4064160",
    "end": "4071039"
  },
  {
    "text": "um uh uh to say that we'll know a lot of the other gates in the circuit",
    "start": "4071039",
    "end": "4078559"
  },
  {
    "text": "too incidentally there's a way but if I if I was starting with this sub problem it might turn out that uh in",
    "start": "4078559",
    "end": "4086640"
  },
  {
    "text": "order to make these three true that I need only 10% of this day and and it would be it would be a",
    "start": "4086640",
    "end": "4093920"
  },
  {
    "text": "big waste of time to be propagating inputs that are never going to affect g300 for example to Gates there so so I",
    "start": "4093920",
    "end": "4100960"
  },
  {
    "text": "believe um I think I I started out by uh whenever I if I was ever trying to solve",
    "start": "4100960",
    "end": "4107238"
  },
  {
    "text": "a problem like this I I immediately subsetted my dag down to to the gates that were really really going to help me",
    "start": "4107239",
    "end": "4114679"
  },
  {
    "text": "in uh since it since it' be a much smaller circuit if I if I didn't need the whole one the whole circuit I didn't",
    "start": "4114679",
    "end": "4120838"
  },
  {
    "text": "have to do forward propagation um into into things that were never going to be of interest did",
    "start": "4120839",
    "end": "4128120"
  },
  {
    "text": "you precompute that in some initial pass like store with gate 300 all the things that affected it or oh well we got that",
    "start": "4128120",
    "end": "4135880"
  },
  {
    "text": "there's a if you okay you can work back from 300 all the things all the things",
    "start": "4135880",
    "end": "4142838"
  },
  {
    "text": "that you so so you could for example that's a you have another another array",
    "start": "4142839",
    "end": "4148758"
  },
  {
    "text": "for example in this structure you can use course list so on um right um if you",
    "start": "4148759",
    "end": "4156040"
  },
  {
    "text": "start out with a certain number of um of gates that are that are marked saying I",
    "start": "4156040",
    "end": "4162600"
  },
  {
    "text": "I I know I want to use these so you put a check mark there well then you then then you scan back and everyone that's",
    "start": "4162600",
    "end": "4168238"
  },
  {
    "text": "marked you mark its inputs and then at the end you've got everything marked that that's relevant",
    "start": "4168239",
    "end": "4175159"
  },
  {
    "text": "and so you don't propagate forward to anything that's not marked see what I mean it's like garbage",
    "start": "4175159",
    "end": "4181520"
  },
  {
    "text": "collection I guess did you did you actually use this data structure in your program",
    "start": "4181520",
    "end": "4188359"
  },
  {
    "text": "yeah it it's just because uh I I write programs in web now days uh um they",
    "start": "4188359",
    "end": "4195560"
  },
  {
    "text": "haven't made a web version of other of other for other languages here yet but",
    "start": "4195560",
    "end": "4202239"
  },
  {
    "text": "this is uh this is the uh my current hobby horse is uh is programming in um",
    "start": "4202239",
    "end": "4209440"
  },
  {
    "text": "uh with documentation as well as uh you know alternating document documentation with",
    "start": "4209440",
    "end": "4216480"
  },
  {
    "text": "u with code yeah you want to see a example",
    "start": "4216480",
    "end": "4222640"
  },
  {
    "text": "um let's see why don't you yeah Ramsey can you hold this up for the guy we only got",
    "start": "4222640",
    "end": "4228440"
  },
  {
    "text": "two minutes left but I I want to show two things on the screen and then we'll go on and then we'll go off cuz this was",
    "start": "4228440",
    "end": "4233520"
  },
  {
    "text": "just to give you an example of how of",
    "start": "4233520",
    "end": "4239360"
  },
  {
    "text": "um okay this is a um this is the way web program looks it starts out there's some",
    "start": "4246520",
    "end": "4253000"
  },
  {
    "text": "documentation here it says 65 now we come to the point a heris for choosing what sub problem is",
    "start": "4253000",
    "end": "4258120"
  },
  {
    "text": "so on function choose um is uh is described move up now",
    "start": "4258120",
    "end": "4265080"
  },
  {
    "text": "that's good okay that's that's longer than I usually write in the web module usually I try to go to about a dozen",
    "start": "4265080",
    "end": "4270400"
  },
  {
    "text": "lines and then these will usually refer to U like here's a here it says do",
    "start": "4270400",
    "end": "4275760"
  },
  {
    "text": "complex calculation for output LL 66 then you go to to to 66 and it explains",
    "start": "4275760",
    "end": "4281840"
  },
  {
    "text": "what that means and um it's I I find it the fastest way to write programs and get them get them",
    "start": "4281840",
    "end": "4288239"
  },
  {
    "text": "going in a hurry um says this code is used in section 65 and so I I I alternate um",
    "start": "4288239",
    "end": "4297400"
  },
  {
    "text": "documentation with uh with program here's an example of the out of the proofs that it",
    "start": "4297400",
    "end": "4305320"
  },
  {
    "text": "produces um here we go trying to prove values this is from the middle of a proof",
    "start": "4306080",
    "end": "4312440"
  },
  {
    "text": "trying to prove values is at 811 817 level zero that's the level zero of of backtracking setting 559 true setting",
    "start": "4312440",
    "end": "4319600"
  },
  {
    "text": "661 true need to Pro 559 need to prove 661 these are sub goals have to be",
    "start": "4319600",
    "end": "4325600"
  },
  {
    "text": "proved proved 811 um that 559 and 661 are true making",
    "start": "4325600",
    "end": "4333560"
  },
  {
    "text": "655 equal minus 568 um that's an equivalence operation",
    "start": "4333560",
    "end": "4340120"
  },
  {
    "text": "um need to prove 655 so on anyway at the it said prove this uh let's see at the",
    "start": "4340120",
    "end": "4346080"
  },
  {
    "text": "bottom do we actually come out branching on 599 something is true um and it just",
    "start": "4346080",
    "end": "4354080"
  },
  {
    "text": "this did a this did a uh a long test and finally it it said um okay so so finally I had a",
    "start": "4354080",
    "end": "4362480"
  },
  {
    "text": "solution here let's see this is this is the climax of the thing here you got how your arms doing on then go up go up go",
    "start": "4362480",
    "end": "4370520"
  },
  {
    "text": "up go up here it is here it is whoops no higher that's it right here look at this 2 - one one one",
    "start": "4370520",
    "end": "4376920"
  },
  {
    "text": "one minus one so on and works this means I found a solution these are the the 16",
    "start": "4376920",
    "end": "4382960"
  },
  {
    "text": "inputs uh this one is equivalence Class 2 it can be any value this one is is is a NE - 1+ one that means it's not has to",
    "start": "4382960",
    "end": "4389920"
  },
  {
    "text": "be zero has to be one so that's that was the solution to the problem um that did",
    "start": "4389920",
    "end": "4395040"
  },
  {
    "text": "it I never didn't need to know X1 in this particular case okay that's that's an example of what of what a program",
    "start": "4395040",
    "end": "4400920"
  },
  {
    "text": "might look like if you if it put out a stream of cons at the end just to just to as an example of one of one approach",
    "start": "4400920",
    "end": "4408199"
  },
  {
    "text": "that's fine good okay um the and I I I",
    "start": "4408199",
    "end": "4414480"
  },
  {
    "text": "didn't know exactly how to handle the discussions for this one uh because there are many uh subtopics to to do so",
    "start": "4414480",
    "end": "4421800"
  },
  {
    "text": "I put these examples in here just to get your mind thinking but probably on Thursday some you'll have a better way so we'll talk about on Thursday how",
    "start": "4421800",
    "end": "4428679"
  },
  {
    "text": "you've done it good see you then",
    "start": "4428679",
    "end": "4435360"
  },
  {
    "text": "um",
    "start": "4440719",
    "end": "4443719"
  }
]