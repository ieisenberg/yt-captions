[
  {
    "text": "[Music] let's embrace the past and in this",
    "start": "6990",
    "end": "13360"
  },
  {
    "text": "session you will see how our past history helps us measure aspects of software development that we haven't",
    "start": "13360",
    "end": "19560"
  },
  {
    "text": "been able to measure before and we will also see how that information helps us",
    "start": "19560",
    "end": "25199"
  },
  {
    "text": "prioritize the improvements we need to do to our code you will see how it helps us get insights into our designs based",
    "start": "25199",
    "end": "32238"
  },
  {
    "text": "on how we have actually worked with the code and you will also see that we are now able to reason about social aspects",
    "start": "32239",
    "end": "39520"
  },
  {
    "text": "of software development things like organizational problems or team productivity ball neck that shows up in",
    "start": "39520",
    "end": "44559"
  },
  {
    "text": "our code I was once given the advice that when you give a presentation always",
    "start": "44559",
    "end": "52280"
  },
  {
    "text": "start with a motivating example because if I do that you will know why you should listen you will know",
    "start": "52280",
    "end": "58640"
  },
  {
    "text": "why you should care you will know why this is important so I went home and thought that if a motivating example is",
    "start": "58640",
    "end": "65158"
  },
  {
    "text": "a good thing more examples must be even better so today you will get not only",
    "start": "65159",
    "end": "70560"
  },
  {
    "text": "one but three different examples and the first example is a personal story this is about a personal",
    "start": "70560",
    "end": "78759"
  },
  {
    "text": "failure but the interesting thing is I failed by actually improving something",
    "start": "78759",
    "end": "83960"
  },
  {
    "text": "so what happened here this was a number of years ago I worked on a fairly large uh system and my task at that time was",
    "start": "83960",
    "end": "90360"
  },
  {
    "text": "to prioritize the improvements we could do to that system in order to become more Pro",
    "start": "90360",
    "end": "95799"
  },
  {
    "text": "productive so the way I approached it at that time was that I used a bunch of different uh tools that were capable of",
    "start": "95799",
    "end": "102479"
  },
  {
    "text": "measuring uh code complexity so I took my tools I threw them at my codebase and outc came a prioritized list of the most",
    "start": "102479",
    "end": "109479"
  },
  {
    "text": "problematic modules and the interesting thing was that those tools they pointed to one component in our system the data",
    "start": "109479",
    "end": "118079"
  },
  {
    "text": "access layer so so I went over to the people who I knew had worked on that",
    "start": "118079",
    "end": "123200"
  },
  {
    "text": "part and I asked them how is that code actually and they pretty much confirmed the findings my tool did so they said",
    "start": "123200",
    "end": "129879"
  },
  {
    "text": "that yeah it's a mess to work with it's a quite nasty code and it's no fun at",
    "start": "129879",
    "end": "135040"
  },
  {
    "text": "all so I thought great we have our candidate so what we did was we took some of our best people and they spent",
    "start": "135040",
    "end": "141200"
  },
  {
    "text": "two months rewriting that whole thing and after two months we had a shiny new",
    "start": "141200",
    "end": "147280"
  },
  {
    "text": "data access layer it looked beautiful and tests passed now what do you think happened to",
    "start": "147280",
    "end": "154720"
  },
  {
    "text": "our productivity what do you think happened to our quality measured in the number of",
    "start": "154720",
    "end": "160519"
  },
  {
    "text": "bugs absolutely nothing there was no difference and this was quite depressing",
    "start": "160519",
    "end": "166360"
  },
  {
    "text": "because it means we not only wasted two months improving something that didn't matter it also means we missed an",
    "start": "166360",
    "end": "173040"
  },
  {
    "text": "opportunity to improve something that could have made a difference another related story",
    "start": "173040",
    "end": "180360"
  },
  {
    "text": "this is about another time where I worked with a different client and this client they had a fairly old code base",
    "start": "180360",
    "end": "186480"
  },
  {
    "text": "had a history that went 15 years back in time and again they used the tool that was capable of measuring code complexity",
    "start": "186480",
    "end": "193840"
  },
  {
    "text": "the interesting thing with this tool is that it was also able to quantify technical depth so we actually got a",
    "start": "193840",
    "end": "201040"
  },
  {
    "text": "number so they used that tool on their 15year old code base and the tool reported that on this code base you have",
    "start": "201040",
    "end": "208400"
  },
  {
    "text": "4,000 years years of technical depth wow 4,000 years just to put that",
    "start": "208400",
    "end": "216840"
  },
  {
    "text": "into perspective 4,000 years ago that was when Moses parted a red",
    "start": "216840",
    "end": "223080"
  },
  {
    "text": "sea and I mean 4,000 years of technical depth it may well be accurate but it",
    "start": "223080",
    "end": "228159"
  },
  {
    "text": "isn't that helpful because where do you start my final example here before we",
    "start": "228159",
    "end": "234920"
  },
  {
    "text": "try to look at how we can solve these challenges is taken from Fred Brook's",
    "start": "234920",
    "end": "240200"
  },
  {
    "text": "classic book the mythical manmon so how many of you have read the myth mythical",
    "start": "240200",
    "end": "245480"
  },
  {
    "text": "manmon so a third of your approximately it's one of my favorite books",
    "start": "245480",
    "end": "251280"
  },
  {
    "text": "and the Myan man mouth is perhaps best known for what we have to what we now",
    "start": "251280",
    "end": "256759"
  },
  {
    "text": "call Brook's law and Brook's law says that adding more manpower to a late",
    "start": "256759",
    "end": "262400"
  },
  {
    "text": "project makes it even later and this is quite interesting",
    "start": "262400",
    "end": "268199"
  },
  {
    "text": "because this is something I've experienced myself several times in the most dramatic uh setting what happened",
    "start": "268199",
    "end": "274240"
  },
  {
    "text": "there was that I joined a project and that project originally was scheduled to take one year to complete they had",
    "start": "274240",
    "end": "280840"
  },
  {
    "text": "historic data that showed them that this will take you approximately one year now of course they decided to well let's do",
    "start": "280840",
    "end": "287639"
  },
  {
    "text": "this in just three months so the question is how do you take something you know takes one year and compress it",
    "start": "287639",
    "end": "294039"
  },
  {
    "text": "down to just three months it's quite easy if you're a manager so what the did was they hired",
    "start": "294039",
    "end": "301160"
  },
  {
    "text": "four times as many consultants and threw them at their code base",
    "start": "301160",
    "end": "306440"
  },
  {
    "text": "and yeah once again that project proved the mythal man month to be true because that project didn't take three months to",
    "start": "306440",
    "end": "312479"
  },
  {
    "text": "complete it didn't took one year either it took more than two years and one of",
    "start": "312479",
    "end": "317680"
  },
  {
    "text": "the reasons was because the developer said that code was really really hard to understand and I had inspected the code",
    "start": "317680",
    "end": "324720"
  },
  {
    "text": "myself and I thought that it's actually not that bad the reason it was hard to",
    "start": "324720",
    "end": "330440"
  },
  {
    "text": "understand that this this was surprising to me was because what actually happened was that even if you wrote a piece of",
    "start": "330440",
    "end": "337400"
  },
  {
    "text": "code yourself today three days later it looked completely different because five",
    "start": "337400",
    "end": "342639"
  },
  {
    "text": "other developers had been working on it in the meantime so they didn't have a technical",
    "start": "342639",
    "end": "348440"
  },
  {
    "text": "problem they had an organizational social problem of access communication and coordination",
    "start": "348440",
    "end": "353800"
  },
  {
    "text": "overhead and when I put together these examples I really asked myself why do we",
    "start": "353800",
    "end": "359720"
  },
  {
    "text": "as an industry keep repeating the same mistakes why is it so hard to prioritize",
    "start": "359720",
    "end": "365800"
  },
  {
    "text": "the improvements you want to do why do we keep violating Brook's law all the",
    "start": "365800",
    "end": "372319"
  },
  {
    "text": "time and I think one of the main reasons is because when you look at human decision making we tend to make",
    "start": "372319",
    "end": "378680"
  },
  {
    "text": "decisions around the things that are easily accessible to us the things we can see and in the case of a a code base",
    "start": "378680",
    "end": "386440"
  },
  {
    "text": "we tend to base our decisions upon this upon the code but I will claim that that's",
    "start": "386440",
    "end": "393479"
  },
  {
    "text": "incomplete information and the most important pieces of information are absent and",
    "start": "393479",
    "end": "399880"
  },
  {
    "text": "those two pieces of information are time and social information and time is important",
    "start": "399880",
    "end": "407000"
  },
  {
    "text": "because without a Time perspective we cannot see any Trends in that we don't know how that code",
    "start": "407000",
    "end": "412599"
  },
  {
    "text": "evolved and I think that it's important because how do you know if a design is",
    "start": "412599",
    "end": "418400"
  },
  {
    "text": "good I think a design is good if it supports the kind of changes we want to do to the code without a Time",
    "start": "418400",
    "end": "425240"
  },
  {
    "text": "perspective we cannot really evaluate that we can only speculate and social information is important too because if",
    "start": "425240",
    "end": "431639"
  },
  {
    "text": "we don't have social information we don't know if that piece of code is a team productivity ball neck where",
    "start": "431639",
    "end": "437440"
  },
  {
    "text": "multiple people on different teams need to coordinate their efforts all the time so I think we need to fix this and we",
    "start": "437440",
    "end": "445280"
  },
  {
    "text": "can fix that by embracing the past so how do we get information on",
    "start": "445280",
    "end": "450400"
  },
  {
    "text": "time and social information the good news are you all already have all the",
    "start": "450400",
    "end": "455680"
  },
  {
    "text": "data you need we're just not used to think about it that way I'm talking",
    "start": "455680",
    "end": "461000"
  },
  {
    "text": "about our Version Control history I've came to view our Version",
    "start": "461000",
    "end": "466080"
  },
  {
    "text": "Control history as a behavioral log of how we as developers have interacted with our",
    "start": "466080",
    "end": "471720"
  },
  {
    "text": "codebase and you see an example here from git and you see that if we look at",
    "start": "471720",
    "end": "477199"
  },
  {
    "text": "that log we see that we actually have a timeline there because the commits are ordered in time and interestingly enough",
    "start": "477199",
    "end": "485080"
  },
  {
    "text": "we also get social information because we know precisely which developer that it will change at what point in time so",
    "start": "485080",
    "end": "492080"
  },
  {
    "text": "let's embrace the past and see how it helps us and my first observation here today",
    "start": "492080",
    "end": "498080"
  },
  {
    "text": "and this is something I learned after many many years is that when we talk about code all code is equal but some code is",
    "start": "498080",
    "end": "506840"
  },
  {
    "text": "more equal than others and to explain what I mean about that we need to take a different perspective on",
    "start": "506840",
    "end": "513279"
  },
  {
    "text": "code we need to take an evolutionary r view here's what that looks",
    "start": "513279",
    "end": "519440"
  },
  {
    "text": "like please have a look at the following graphs they all show the same thing on",
    "start": "519440",
    "end": "525440"
  },
  {
    "text": "the xaxis you have each file in your system and they are sorted according to the change frequencies that is how many",
    "start": "525440",
    "end": "532080"
  },
  {
    "text": "commits have you done that touched that particular file and that's what you see on the y-axis that's the number of",
    "start": "532080",
    "end": "538040"
  },
  {
    "text": "commits now now the interesting thing here is that you see that data is from three radically different systems",
    "start": "538040",
    "end": "544560"
  },
  {
    "text": "developed by different organizations using completely different Technologies they have different",
    "start": "544560",
    "end": "550079"
  },
  {
    "text": "sizes and of course they have different lifetime spans as well but still you see",
    "start": "550079",
    "end": "556560"
  },
  {
    "text": "they all exhibit exactly the same pattern they show a power law",
    "start": "556560",
    "end": "562519"
  },
  {
    "text": "distribution and this is something I've seen in every single codebase that I've analyzed and I haven't analyzed few",
    "start": "562519",
    "end": "568560"
  },
  {
    "text": "hundred code but now so what this means to you is that in your typical code",
    "start": "568560",
    "end": "574920"
  },
  {
    "text": "base most of your development activity tends to be in a fairly small part of the code most of your code is in the",
    "start": "574920",
    "end": "582440"
  },
  {
    "text": "long tail and that means it's RAR if ever touched and this is important",
    "start": "582440",
    "end": "588640"
  },
  {
    "text": "because it gives us a tool to prioritize so let's have a look at",
    "start": "588640",
    "end": "594639"
  },
  {
    "text": "that so this is one of the tools I Ed to prioritize this is something something called a hotspot analysis and this",
    "start": "595240",
    "end": "601959"
  },
  {
    "text": "analysis basically takes the data from the previous slides and shows where it's located in your code so it identifies",
    "start": "601959",
    "end": "609800"
  },
  {
    "text": "the areas of high change frequency and I'm going to walk you through this visualization the first thing I want you",
    "start": "609800",
    "end": "616399"
  },
  {
    "text": "to focus on you see those large Blue circles there the ones that are blinking right now each one of those represents a",
    "start": "616399",
    "end": "624279"
  },
  {
    "text": "folder in your code base so this means this is a hierarchical visualization that follows the F structure of your",
    "start": "624279",
    "end": "632240"
  },
  {
    "text": "code it's also interactive so you can zoom in to the level of detail you're interested in and if you do that you",
    "start": "632240",
    "end": "638519"
  },
  {
    "text": "will see that each file in your code base is represented as a circle and you",
    "start": "638519",
    "end": "643680"
  },
  {
    "text": "will see they have different size that's because the size dimension here represents the complexity of the",
    "start": "643680",
    "end": "649240"
  },
  {
    "text": "underlying code so this is something you measure from the code and you can basically use uh any complexity metric",
    "start": "649240",
    "end": "656519"
  },
  {
    "text": "that you want because what they all have in common is that they're equally bad so I tend to use the simplest Poss",
    "start": "656519",
    "end": "663959"
  },
  {
    "text": "possible thing I can I tend to use just a number of lines of code but whatever you use let me tell you about this that",
    "start": "663959",
    "end": "672440"
  },
  {
    "text": "complexity complex complexity alone is never ever a problem complexity is only",
    "start": "672440",
    "end": "680079"
  },
  {
    "text": "a problem when you need to deal with it so that means we need to find out if we really have to work in that code or not",
    "start": "680079",
    "end": "686560"
  },
  {
    "text": "and again this is something we can mine from our version control system so we calculate the amount of change to each",
    "start": "686560",
    "end": "692920"
  },
  {
    "text": "module based on a Version Control history and the interesting thing here is the overlap between those two",
    "start": "692920",
    "end": "699480"
  },
  {
    "text": "Dimensions because now we're able to identify complicated code that we also have to work with often and that's what",
    "start": "699480",
    "end": "706399"
  },
  {
    "text": "I call hotspots in code so let's return to the",
    "start": "706399",
    "end": "713240"
  },
  {
    "text": "visualization I showed you earlier this is a this is data from a real system this is the open source uh application",
    "start": "713240",
    "end": "719959"
  },
  {
    "text": "Tomcat written in Java so you can identify a number of different hotspots",
    "start": "719959",
    "end": "725360"
  },
  {
    "text": "here right and we know that those hotspots they are complicated code that we have to work with often so how do you",
    "start": "725360",
    "end": "730880"
  },
  {
    "text": "use that information well typically the hotspots make up great targets for",
    "start": "730880",
    "end": "737279"
  },
  {
    "text": "refactorings you can also choose to just do an extra code inspection of the hotspot to see if there's a real problem",
    "start": "737279",
    "end": "744440"
  },
  {
    "text": "or perhaps you just want to direct extra testing efforts to the hotspot areas",
    "start": "744440",
    "end": "750880"
  },
  {
    "text": "and we're going to look at a number of other ways that hotspots help us but before I go there I want to make another",
    "start": "751199",
    "end": "759360"
  },
  {
    "text": "observation I want to claim that code is actually autod destructive",
    "start": "759360",
    "end": "765120"
  },
  {
    "text": "art so how many of you have heard about the concept of autod destructive",
    "start": "765120",
    "end": "770839"
  },
  {
    "text": "art oh no one so I actually got to witness that at Tate modern in London a",
    "start": "770839",
    "end": "776560"
  },
  {
    "text": "few weeks ago this concept cep is something pioneered by the artist Gustav mezer and what you see there uh that's",
    "start": "776560",
    "end": "784199"
  },
  {
    "text": "his Liquid Crystal Light projections and they're quite fascinating because when you look at them they keep changing all",
    "start": "784199",
    "end": "790079"
  },
  {
    "text": "the time so the art looks different tomorrow than it did today and the interesting thing in it is in how it",
    "start": "790079",
    "end": "796920"
  },
  {
    "text": "changes because what happens here is that it necessites the destruction of an",
    "start": "796920",
    "end": "802600"
  },
  {
    "text": "existing form to create a new form and I will claim that that's exactly how Cod",
    "start": "802600",
    "end": "809680"
  },
  {
    "text": "evolves and I think hotspots one of the reasons I love them is because they make it clear that code is never done",
    "start": "809680",
    "end": "817680"
  },
  {
    "text": "successful code evolves and that's a good thing the reason I say it's Auto",
    "start": "817680",
    "end": "823000"
  },
  {
    "text": "destructive is because changes and new features tend to get increasingly more",
    "start": "823000",
    "end": "828920"
  },
  {
    "text": "difficult to implement over time but it doesn't have to be that way so let's have a deeper look at hotspots",
    "start": "828920",
    "end": "835639"
  },
  {
    "text": "and see how they actually help us",
    "start": "835639",
    "end": "840759"
  },
  {
    "text": "so what you see here are examples on Hotspot analysis of three different code bases written in different Technologies",
    "start": "841639",
    "end": "849120"
  },
  {
    "text": "and of different sizes and for example you can see the monu code base here in the middle it's",
    "start": "849120",
    "end": "855959"
  },
  {
    "text": "really hard to see the details and that's not my intent either I just want to show you that even here on the highest level view you can spot the",
    "start": "855959",
    "end": "862360"
  },
  {
    "text": "number of hotspots now remember that those are fairly large those code bases right so",
    "start": "862360",
    "end": "868160"
  },
  {
    "text": "Mo noise almost 7 million lines of code so and you see Docker on your right",
    "start": "868160",
    "end": "876160"
  },
  {
    "text": "hand side it's also half a million lines of code and you see a cluster of hotspots there",
    "start": "876160",
    "end": "881440"
  },
  {
    "text": "right how can we use those hotspots what do they actually mean well let's look at some",
    "start": "881440",
    "end": "888040"
  },
  {
    "text": "numbers and again this is something I find in virtually every codebase that analyze that there's a",
    "start": "888040",
    "end": "893759"
  },
  {
    "text": "disproportion the hotspots tend to bank up a really small part of code yes most",
    "start": "893759",
    "end": "898920"
  },
  {
    "text": "of your development efforts is in that where we code and that means that you",
    "start": "898920",
    "end": "903959"
  },
  {
    "text": "can make a huge impact by just improving a small part of your code all code isn't",
    "start": "903959",
    "end": "909320"
  },
  {
    "text": "equal no you don't need to consider all those 4,000 years of technical depth",
    "start": "909320",
    "end": "914440"
  },
  {
    "text": "most of those years doesn't matter at all they're in the long tail so what we do with hotspots is",
    "start": "914440",
    "end": "922000"
  },
  {
    "text": "basically we identify the parts of the code that you have to work with most of the time and then we'll look for an overlap with complexity and that helps",
    "start": "922000",
    "end": "929199"
  },
  {
    "text": "us take those million lines of code and narrow them down to the parts that really matter for your productivity and",
    "start": "929199",
    "end": "936000"
  },
  {
    "text": "quality and the reason I say quality is because hotspots tend to have a very",
    "start": "936000",
    "end": "941240"
  },
  {
    "text": "strong correlation to",
    "start": "941240",
    "end": "944560"
  },
  {
    "text": "defects all right so remember that I told you that code is auto destructive",
    "start": "947839",
    "end": "954360"
  },
  {
    "text": "art we know that our code will change and we know that some new requirements",
    "start": "954360",
    "end": "959440"
  },
  {
    "text": "they will invalidate the design decisions that we have done earlier and we also know that we need to react when",
    "start": "959440",
    "end": "965160"
  },
  {
    "text": "that happens unfortunately this is where many organizations fail and I want to",
    "start": "965160",
    "end": "971120"
  },
  {
    "text": "explain why and what we can do about it by talking about something completely different something called the",
    "start": "971120",
    "end": "977000"
  },
  {
    "text": "normalization of deviance so the normalization of deviance it's a theory uh coined by",
    "start": "977000",
    "end": "984480"
  },
  {
    "text": "Diane vgan and Diane vgan coined that theory when she investigated space shuttle Challenger",
    "start": "984480",
    "end": "990759"
  },
  {
    "text": "accident so I guess most of you remember the space shuttle Challenger what basically happened was that the space",
    "start": "990759",
    "end": "996639"
  },
  {
    "text": "shutter was launched this was back in 986 and 71 seconds after launch the",
    "start": "996639",
    "end": "1002440"
  },
  {
    "text": "whole thing disintegrated in a large Fireball and what's so interesting with",
    "start": "1002440",
    "end": "1009480"
  },
  {
    "text": "the Diane VG's uh investigation here is that she's not an engineer she's not a rocket science",
    "start": "1009480",
    "end": "1017079"
  },
  {
    "text": "scientist she's a sociologist because she means that the technical failure of Challenger was only",
    "start": "1017079",
    "end": "1023519"
  },
  {
    "text": "a symptom the real problem was organizational and cultural so let's",
    "start": "1023519",
    "end": "1029520"
  },
  {
    "text": "look at that and see how that relates to software first of all the technical reason uh this Challenger blew up is",
    "start": "1029520",
    "end": "1037280"
  },
  {
    "text": "something you can see here do you see this area here of gray smoke that's not",
    "start": "1037280",
    "end": "1042438"
  },
  {
    "text": "a good thing this is the solid rocket booster of the Space Shuttle and that's a huge",
    "start": "1042439",
    "end": "1049039"
  },
  {
    "text": "booster so it's made up of several different segments and it turned out when they started to test that thing in",
    "start": "1049039",
    "end": "1055400"
  },
  {
    "text": "the early' 70s they noted that the joints between those different segments",
    "start": "1055400",
    "end": "1060559"
  },
  {
    "text": "didn't behave as expected so what they did at that time was they discussed their problem and",
    "start": "1060559",
    "end": "1067120"
  },
  {
    "text": "they found out that no this is not desirable but it's an acceptable risk so",
    "start": "1067120",
    "end": "1072240"
  },
  {
    "text": "they moved on some years later they start to fly their space shuttles and they noticed that the the ceiling in",
    "start": "1072240",
    "end": "1079039"
  },
  {
    "text": "that joint they used an O-ring so basically a piece of uh rubber band within that uh joint seal they noted",
    "start": "1079039",
    "end": "1086240"
  },
  {
    "text": "that that uh o-ring got hit by hot gases and that was really unfortunate",
    "start": "1086240",
    "end": "1092640"
  },
  {
    "text": "because the O-ring was never decided never designed to be hit by hot gases so again they discussed the problem and",
    "start": "1092640",
    "end": "1098799"
  },
  {
    "text": "passed it off as an acceptable risk later flights showed that that overing",
    "start": "1098799",
    "end": "1104679"
  },
  {
    "text": "actually eroded when it was hit by gases so it actually put them at risk for a leak again they said it's Desir it's not",
    "start": "1104679",
    "end": "1112480"
  },
  {
    "text": "desirable but let's pass it off as an acceptable risk and that's the normalization of deviance each time you",
    "start": "1112480",
    "end": "1120280"
  },
  {
    "text": "accept a risk you get a new point of reference the deviation becomes your new",
    "start": "1120280",
    "end": "1127600"
  },
  {
    "text": "normal and the reason I'm so fascinated by this has nothing to do with space at",
    "start": "1127600",
    "end": "1133320"
  },
  {
    "text": "all that's because the normalization of deviant is about people and and we have",
    "start": "1133320",
    "end": "1138840"
  },
  {
    "text": "the normalization of devian in software development too so let me give you an example let's",
    "start": "1138840",
    "end": "1145400"
  },
  {
    "text": "say that you start to work on your code base and you inherit a file which has 5,000 lines of",
    "start": "1145400",
    "end": "1151360"
  },
  {
    "text": "code how many of you would be happy with that not so many looks like I'm the only",
    "start": "1151360",
    "end": "1157360"
  },
  {
    "text": "one here so 5,000 lines of code yeah that's likely to be a mess uh but if you",
    "start": "1157360",
    "end": "1163640"
  },
  {
    "text": "work with that long enough that will become your new normal and besides what",
    "start": "1163640",
    "end": "1168679"
  },
  {
    "text": "that's a few extra lines of code do so after a while you have 6,000 lines of code and then you have 7,000 lines of",
    "start": "1168679",
    "end": "1175760"
  },
  {
    "text": "code so what I would suggest that we need is some way of catching the normalization of devian in our code base",
    "start": "1175760",
    "end": "1183799"
  },
  {
    "text": "here's a starting point this is something I call complexity Trends and complexity Trends",
    "start": "1183799",
    "end": "1191000"
  },
  {
    "text": "work like this that you identify the hotspots in your code base then you take",
    "start": "1191000",
    "end": "1196080"
  },
  {
    "text": "each of those hotspots and you go through the verse control history and you pull out each historic version of",
    "start": "1196080",
    "end": "1201799"
  },
  {
    "text": "that code and you measure the complexity of that one and you move on through diversion control history which allows",
    "start": "1201799",
    "end": "1208080"
  },
  {
    "text": "you to plot a trend in time like this now this is real data from a real",
    "start": "1208080",
    "end": "1213919"
  },
  {
    "text": "project this is from the open source project mono where we examine a single hotspot here and we see that that",
    "start": "1213919",
    "end": "1220000"
  },
  {
    "text": "timeline shows the complexity growth over 14 years and the interesting thing",
    "start": "1220000",
    "end": "1225440"
  },
  {
    "text": "here is that over several years that complexity just kept increasing slightly",
    "start": "1225440",
    "end": "1230880"
  },
  {
    "text": "and then we see that back in 2015 someone made a refactoring so you see this dip in the complexity curve right",
    "start": "1230880",
    "end": "1238360"
  },
  {
    "text": "and after that it went upwards quite rapidly so when you talk about the",
    "start": "1238360",
    "end": "1245080"
  },
  {
    "text": "normalization of deviants that's one of the reasons that whistleblowers in organizations are so important and I",
    "start": "1245080",
    "end": "1252039"
  },
  {
    "text": "find that complexity Trends are great whistleblowers when it comes to normalization of deviant in our code",
    "start": "1252039",
    "end": "1257679"
  },
  {
    "text": "base all right one more thing related to the",
    "start": "1257679",
    "end": "1263200"
  },
  {
    "text": "time perspective and uh those of you who attended Dan or's talks yesterday will",
    "start": "1263200",
    "end": "1269080"
  },
  {
    "text": "recognize this because this is an ID I actually get from um participating one of his",
    "start": "1269080",
    "end": "1274919"
  },
  {
    "text": "sessions then nor talks about the software half life and then's idea is that just as we have Decay for physical",
    "start": "1274919",
    "end": "1281840"
  },
  {
    "text": "quantities we have the same thing in code and just so I get it right let me",
    "start": "1281840",
    "end": "1288799"
  },
  {
    "text": "quote Dan on this this is what what Dan actually wrote Dan says that reducing",
    "start": "1288799",
    "end": "1294120"
  },
  {
    "text": "this self life means that any code you look at is likely to be either very old or very",
    "start": "1294120",
    "end": "1300080"
  },
  {
    "text": "recent and he goes on to say that we discover that reasoning about code",
    "start": "1300080",
    "end": "1305240"
  },
  {
    "text": "becomes harder when there's a lot of code in the gray area between the two",
    "start": "1305240",
    "end": "1310880"
  },
  {
    "text": "extremes so one of the reasons I like this concept is because it ties in so nicely with our human memory work a",
    "start": "1310880",
    "end": "1317600"
  },
  {
    "text": "longterm memory right because old code that's been stable for a long time allows us to keep",
    "start": "1317600",
    "end": "1324039"
  },
  {
    "text": "stable mental models in our head of how that code works it's much easier to reason about it we can reason about it",
    "start": "1324039",
    "end": "1330440"
  },
  {
    "text": "as a whole which is basically a Shunk something that our working memory just loves and code that's very recent it's",
    "start": "1330440",
    "end": "1338039"
  },
  {
    "text": "so recent that we remember how it works so I like this and I figured when I heard about this that yeah this is",
    "start": "1338039",
    "end": "1344320"
  },
  {
    "text": "something again that we can actually measure in our code because when we embrace our past we can actually",
    "start": "1344320",
    "end": "1350120"
  },
  {
    "text": "calculate things like code AG so let's have a look at a few examples this is",
    "start": "1350120",
    "end": "1355679"
  },
  {
    "text": "what a code age map of a large code base looks",
    "start": "1355679",
    "end": "1360200"
  },
  {
    "text": "like so what you see here is approximately 600,000 lines of Scola and",
    "start": "1360720",
    "end": "1366159"
  },
  {
    "text": "Java code unfortunately I need to keep the name of the codebase anonymous but you see there uh it's",
    "start": "1366159",
    "end": "1373080"
  },
  {
    "text": "quite interesting here because it's exactly the same visualization that showed you with the hotspots it shows the hierarch iCal folder structure of",
    "start": "1373080",
    "end": "1379279"
  },
  {
    "text": "the code and you see that each file again is a circle but this time the color of that Circle indicates its H so",
    "start": "1379279",
    "end": "1386760"
  },
  {
    "text": "the more dark blue the more recent the code and you also see that there's kind",
    "start": "1386760",
    "end": "1393080"
  },
  {
    "text": "of some kind of breaking symmetry here because the right hand side of the code seems quite Young and the left hand hand",
    "start": "1393080",
    "end": "1399279"
  },
  {
    "text": "side of the code is quite old so what's the most common reason",
    "start": "1399279",
    "end": "1404760"
  },
  {
    "text": "that we manage to stabilize code the most reason is because the code is dead",
    "start": "1404760",
    "end": "1410640"
  },
  {
    "text": "dead as disco so if I reveal to you that the",
    "start": "1410640",
    "end": "1415679"
  },
  {
    "text": "rightand side here is called application code and the left hand code left hand side is called test code you will see",
    "start": "1415679",
    "end": "1422760"
  },
  {
    "text": "that those large uh light blue circles here that represents old code that's",
    "start": "1422760",
    "end": "1428480"
  },
  {
    "text": "actually obsolete test data test data that's no longer used which is the reason that they haven't been changed in",
    "start": "1428480",
    "end": "1434799"
  },
  {
    "text": "several years but we can do even more interesting things with codebase with",
    "start": "1434799",
    "end": "1440360"
  },
  {
    "text": "Cod AG we can use it to get insights into our designs so let me show you an example from another",
    "start": "1440360",
    "end": "1447080"
  },
  {
    "text": "codebase let's look at the development of the programming language closure so this is what closure looks",
    "start": "1447080",
    "end": "1454480"
  },
  {
    "text": "like that's the AG map of closure so what I did now was that I want was interested in all code that's been",
    "start": "1454480",
    "end": "1460880"
  },
  {
    "text": "stable for more than two years we haven't made a single change let's see how that looks here we",
    "start": "1460880",
    "end": "1467679"
  },
  {
    "text": "go oh so we see there's actually a whole",
    "start": "1467679",
    "end": "1473799"
  },
  {
    "text": "package that's been stabled for more than two years where we haven't made a single change now uh closure as you may know is",
    "start": "1473799",
    "end": "1481760"
  },
  {
    "text": "a dynamic language on the jvm which means it compiles to bite code and this package ASM is responsible for helping",
    "start": "1481760",
    "end": "1489120"
  },
  {
    "text": "out with that so if we look at that code we see that we have a stuff like a class",
    "start": "1489120",
    "end": "1494399"
  },
  {
    "text": "reader a method writer and so on so to me me this seems to model a different",
    "start": "1494399",
    "end": "1500279"
  },
  {
    "text": "domain actually so I thought that perhaps that package would be better off",
    "start": "1500279",
    "end": "1505320"
  },
  {
    "text": "extracted into a library so before I make a recommendation like that I always look",
    "start": "1505320",
    "end": "1511799"
  },
  {
    "text": "at the code so let's do that together this is what the heading of each of",
    "start": "1511799",
    "end": "1516919"
  },
  {
    "text": "those files look like it turns out it is already a",
    "start": "1516919",
    "end": "1524360"
  },
  {
    "text": "library it's just been copy pasted into closure base basically the reason is probably because",
    "start": "1524360",
    "end": "1530559"
  },
  {
    "text": "there wasn't a good distribution available of the library but I think this kind of reinforces my point that code that",
    "start": "1530559",
    "end": "1537760"
  },
  {
    "text": "changes at different rates tend to model different aspects of the domain all right one more example for",
    "start": "1537760",
    "end": "1544960"
  },
  {
    "text": "you this is from the development of the Python language and python is interesting because its history goes 25",
    "start": "1544960",
    "end": "1551559"
  },
  {
    "text": "years back in time which means we find a lot of old code inside",
    "start": "1551559",
    "end": "1556679"
  },
  {
    "text": "python and what I do in those cases is that I look for packages where the different files change at different",
    "start": "1556679",
    "end": "1563480"
  },
  {
    "text": "rates and you see one such example here this is a package called cjk",
    "start": "1563480",
    "end": "1569520"
  },
  {
    "text": "codex and you see that some files are much darker blue so they have been changed recently and the other ones are",
    "start": "1569520",
    "end": "1575320"
  },
  {
    "text": "quite old let's look at what that F those files actually",
    "start": "1575320",
    "end": "1580360"
  },
  {
    "text": "are turns out the stable ones have been stable for more than 10 years not a",
    "start": "1580360",
    "end": "1585440"
  },
  {
    "text": "single change those are mappings those are basically encoding Pages for languages",
    "start": "1585440",
    "end": "1591039"
  },
  {
    "text": "like Japanese and Chinese so that's the reason we managed to stabilize them if we look at the more recent code",
    "start": "1591039",
    "end": "1598520"
  },
  {
    "text": "we see things like a multibyte codec that has a much higher change frequency and that we have touched over the past",
    "start": "1598520",
    "end": "1605760"
  },
  {
    "text": "month now I would argue that a multibyte codec is a much more General",
    "start": "1605760",
    "end": "1611159"
  },
  {
    "text": "thing it's much more General than specific language encodings so what I would suggest in this case at that you",
    "start": "1611159",
    "end": "1618159"
  },
  {
    "text": "actually split that package according to age because multi codec is a more General concept that's potentially",
    "start": "1618159",
    "end": "1624399"
  },
  {
    "text": "useful in other places as well so to sum this up and uh again this",
    "start": "1624399",
    "end": "1631880"
  },
  {
    "text": "is an area that I still explore and I still learn a lot here but my finding so far is that Cod AG is a much underused",
    "start": "1631880",
    "end": "1639520"
  },
  {
    "text": "driver of design and I found that there are some recommendations that",
    "start": "1639520",
    "end": "1646520"
  },
  {
    "text": "I tried to explore in deeper and so far I found that what if we organize our code by",
    "start": "1646520",
    "end": "1652080"
  },
  {
    "text": "age what if we turn stable packages into libraries and what if we were Factor",
    "start": "1652080",
    "end": "1657520"
  },
  {
    "text": "code that we failed to stabilize I'm pretty sure that we follow those recommendations we end up with a",
    "start": "1657520",
    "end": "1663240"
  },
  {
    "text": "set of advantages first of all it will help a long-term memory because we will be able",
    "start": "1663240",
    "end": "1668279"
  },
  {
    "text": "to build those stable mental models we'll be able to turn the library into a Shunk for a memory that really fits our",
    "start": "1668279",
    "end": "1675159"
  },
  {
    "text": "head and since we end up up with less code in the code base itself since we're",
    "start": "1675159",
    "end": "1680200"
  },
  {
    "text": "able to stabilize lot of it we also get an easier onboarding because we have less cognitive load as new",
    "start": "1680200",
    "end": "1687880"
  },
  {
    "text": "developers and I also think that the codage is something that can help us to decide where we need to write extra",
    "start": "1687880",
    "end": "1695279"
  },
  {
    "text": "tests and this is interesting because most organizations where I've worked that focuses a lot of test automation",
    "start": "1695279",
    "end": "1701919"
  },
  {
    "text": "what tends to happen is that after a while the build takes like forever so what then happens is that",
    "start": "1701919",
    "end": "1709080"
  },
  {
    "text": "eventually some tests get shut down and using codage this is also not a",
    "start": "1709080",
    "end": "1714200"
  },
  {
    "text": "desirable situation but using codage you can actually use real data to decide which parts of the test Suite that are",
    "start": "1714200",
    "end": "1720440"
  },
  {
    "text": "safe to shut down and which aren't all right let's move on to the",
    "start": "1720440",
    "end": "1726600"
  },
  {
    "text": "final section of this presentation and now this is something really important that I want to tell you",
    "start": "1726600",
    "end": "1732640"
  },
  {
    "text": "and this has everything to do with the social side of software development because I found out that organizational",
    "start": "1732640",
    "end": "1739840"
  },
  {
    "text": "problems are often mistaken as technical issues and again I think the main reason",
    "start": "1739840",
    "end": "1746240"
  },
  {
    "text": "for this is because social information is invisible in the code we cannot see it and still it's vitally important so",
    "start": "1746240",
    "end": "1754480"
  },
  {
    "text": "we need to fix this so let's take a social view of a codebase here's one",
    "start": "1754480",
    "end": "1762440"
  },
  {
    "text": "approach so this is something I call fractal figures and you see an example here from the closure codebase now how",
    "start": "1762440",
    "end": "1769600"
  },
  {
    "text": "fractor figures works is that you basically consider each file as a box",
    "start": "1769600",
    "end": "1774919"
  },
  {
    "text": "and each programmer gets assigned a color and the more that programmer has contributed to the code the larger the",
    "start": "1774919",
    "end": "1781760"
  },
  {
    "text": "area of the box so with fractor figures we get an",
    "start": "1781760",
    "end": "1787320"
  },
  {
    "text": "excellent communication tool let's add a color Legend and see how it works so let's say we want to contribute",
    "start": "1787320",
    "end": "1794840"
  },
  {
    "text": "to closure and we want to make a contribution to to the module over here that module is called evaluation",
    "start": "1794840",
    "end": "1802519"
  },
  {
    "text": "and we see that all of that code is written by the light blue programmer oh that's Stuart hway so if we have a",
    "start": "1802519",
    "end": "1809399"
  },
  {
    "text": "question Stuart can probably guide us through this and you also see that closure in",
    "start": "1809399",
    "end": "1815240"
  },
  {
    "text": "general seems to be written by that dark blue developer and that's a guy named Rich hickey so if we have a question",
    "start": "1815240",
    "end": "1822000"
  },
  {
    "text": "about closure in general well Riki probably knows a thing or two about it",
    "start": "1822000",
    "end": "1828799"
  },
  {
    "text": "but we can do even better than this because instead of focusing on individuals let's use this to",
    "start": "1828799",
    "end": "1834760"
  },
  {
    "text": "investigate teamwork and this is important but first let me ask you in your day job how many",
    "start": "1834760",
    "end": "1841960"
  },
  {
    "text": "of you develop software in teams most of you like almost everyone",
    "start": "1841960",
    "end": "1848440"
  },
  {
    "text": "great I also do that and it's interesting because social psychologists have been studying teamwork for many",
    "start": "1848440",
    "end": "1855519"
  },
  {
    "text": "decades and one thing that they have found out and that is consistently repeating in experiments is that teams",
    "start": "1855519",
    "end": "1862760"
  },
  {
    "text": "constantly underperform so since all of us Works in",
    "start": "1862760",
    "end": "1868600"
  },
  {
    "text": "teams let's investigate and understand why so we can do something about this one of the reasons teams",
    "start": "1868600",
    "end": "1875240"
  },
  {
    "text": "underperform is something called process loss and process loss that's a concept from social psychology and it's borrowed",
    "start": "1875240",
    "end": "1882399"
  },
  {
    "text": "from mechanics so if you think about a mechanical construction a mechanic machine",
    "start": "1882399",
    "end": "1887720"
  },
  {
    "text": "just like it cannot operate at 100% efficiency all the time due to things like friction and heat loss neither can",
    "start": "1887720",
    "end": "1895519"
  },
  {
    "text": "teams and you see the model of process loss here you see that to your left you",
    "start": "1895519",
    "end": "1900799"
  },
  {
    "text": "have a number of individuals and each one of them has a potential productivity if you sum that up you get",
    "start": "1900799",
    "end": "1907880"
  },
  {
    "text": "the whole team's potential productivity however that's never ever",
    "start": "1907880",
    "end": "1913559"
  },
  {
    "text": "what you get out of it you get much less real productivity some of that potential is just lost and",
    "start": "1913559",
    "end": "1921440"
  },
  {
    "text": "that kind of loss depends on the task that you do when we talk about software",
    "start": "1921440",
    "end": "1927600"
  },
  {
    "text": "development the typical reasons for process loss is communication and coordination overhead but also things",
    "start": "1927600",
    "end": "1934120"
  },
  {
    "text": "like motivational losses so perhaps you're assigned to take uh care of that",
    "start": "1934120",
    "end": "1939519"
  },
  {
    "text": "Legacy service written in VB6 and you're not too excited about it you have a motivational loss which influences the",
    "start": "1939519",
    "end": "1946039"
  },
  {
    "text": "whole team so I think the the trick with process",
    "start": "1946039",
    "end": "1951799"
  },
  {
    "text": "loss is that you can never eliminate it it's inevitable it will always be there",
    "start": "1951799",
    "end": "1957880"
  },
  {
    "text": "the trick is to minimize it and the first step towards that Improvement is to measure and understand how severe",
    "start": "1957880",
    "end": "1963720"
  },
  {
    "text": "your process loss is today so what I suggest here is that we take that",
    "start": "1963720",
    "end": "1969399"
  },
  {
    "text": "knowledge mining that we did to generate the freals and group The individuals into teams so in the following",
    "start": "1969399",
    "end": "1975880"
  },
  {
    "text": "visualizations you will will see that each color now represents a",
    "start": "1975880",
    "end": "1981960"
  },
  {
    "text": "team and once we do that we can start to measure a lot of interesting stuff we",
    "start": "1982159",
    "end": "1987440"
  },
  {
    "text": "can start to measure how well aligned our organization is with Conway's law so con law how many of you have",
    "start": "1987440",
    "end": "1995080"
  },
  {
    "text": "heard about it almost everyone right it has received so much attention over the",
    "start": "1995080",
    "end": "2000200"
  },
  {
    "text": "past years that I always almost didn't want to mention it at all but it is an important observation and it's important",
    "start": "2000200",
    "end": "2007440"
  },
  {
    "text": "guiding principle and the interesting thing with con law con law basically says that the way we're",
    "start": "2007440",
    "end": "2013840"
  },
  {
    "text": "organized that will be reflected in the kind of software structure that we design and it's usually used to sell the",
    "start": "2013840",
    "end": "2020559"
  },
  {
    "text": "idea of microservices because with micro Services each team can own their own service and you minimize the",
    "start": "2020559",
    "end": "2026919"
  },
  {
    "text": "coordination overhead between teams now let me tell you that you don't need to go full microservice in order to",
    "start": "2026919",
    "end": "2034159"
  },
  {
    "text": "benefit from K law here's an example example from an architecture that buil on a a principle or pattern called",
    "start": "2034159",
    "end": "2040960"
  },
  {
    "text": "package by feature so you see that each one of those folders here they represent the",
    "start": "2040960",
    "end": "2047159"
  },
  {
    "text": "code for a complete feature and you see that this organization is really really well aligned with con law because each",
    "start": "2047159",
    "end": "2054440"
  },
  {
    "text": "color represents a team right so you see there's very little overlap between people on different",
    "start": "2054440",
    "end": "2060480"
  },
  {
    "text": "teams now conwi law is a great observation but it's also",
    "start": "2060480",
    "end": "2065878"
  },
  {
    "text": "oversimplification because it's always a trade-off if you isolate teams too much",
    "start": "2065879",
    "end": "2072040"
  },
  {
    "text": "you run the risk of running into process loss in terms of increased conflicts",
    "start": "2072040",
    "end": "2077079"
  },
  {
    "text": "between different teams so you always need to balance that but no matter what model you choose I strongly recommend",
    "start": "2077079",
    "end": "2084480"
  },
  {
    "text": "that you measure and see that the reality in your code actually supports the way you work with it otherwise you",
    "start": "2084480",
    "end": "2090560"
  },
  {
    "text": "may end up something like this so this is a different code base uh",
    "start": "2090560",
    "end": "2096599"
  },
  {
    "text": "real word case study that again I have to keep Anonymous and it's something I call The Perils of feature teams feature",
    "start": "2096599",
    "end": "2103400"
  },
  {
    "text": "teams are quite popular these days and again they can work really really well if your architecture supports that way",
    "start": "2103400",
    "end": "2110560"
  },
  {
    "text": "of working if not you run the risk of ending up here so what you see here is",
    "start": "2110560",
    "end": "2116880"
  },
  {
    "text": "basically 12 different teams and if you look at that map it's really really hard to find any patterns",
    "start": "2116880",
    "end": "2123960"
  },
  {
    "text": "sure there's one or maybe two modules where it looks like one team has done",
    "start": "2123960",
    "end": "2129000"
  },
  {
    "text": "most of the work but in most cases what you see here it's it's basically a collective",
    "start": "2129000",
    "end": "2135640"
  },
  {
    "text": "chaos it's Communication Breakdown because you consistently need to coordinate the work and actions between",
    "start": "2135640",
    "end": "2141560"
  },
  {
    "text": "12 different teams in the same parts of the code and let me tell you it's not going to end",
    "start": "2141560",
    "end": "2148000"
  },
  {
    "text": "well and organizations do realize this and one way to typically address it is",
    "start": "2148000",
    "end": "2153480"
  },
  {
    "text": "by something that is known as the gatekeeper pattern so the idea with the gatekeeper pattern",
    "start": "2153480",
    "end": "2159440"
  },
  {
    "text": "is basically that all code that you write has to be reviewed and approved by designated person and quite often that",
    "start": "2159440",
    "end": "2166440"
  },
  {
    "text": "person is someone called an architect and I think that this kind of solves the symptoms but not the real",
    "start": "2166440",
    "end": "2173839"
  },
  {
    "text": "problem in addition you get a number of potential drawbacks and first of all this pattern",
    "start": "2173839",
    "end": "2180160"
  },
  {
    "text": "it reminds me of something it reminds me of something called amal's",
    "start": "2180160",
    "end": "2185720"
  },
  {
    "text": "law so 's law has nothing to do with teamwork it's about the theoretical speed up in parallel Computing so what",
    "start": "2185720",
    "end": "2193480"
  },
  {
    "text": "'s law says is that the speed up of a in a parallel Computing word is limited by",
    "start": "2193480",
    "end": "2198960"
  },
  {
    "text": "the serial part of your program and I think the gatekeeper",
    "start": "2198960",
    "end": "2204880"
  },
  {
    "text": "architect it's exactly like that it's like a global lock upon your organization and in addition it isn't",
    "start": "2204880",
    "end": "2212200"
  },
  {
    "text": "really a cross functional team if you need to depend upon someone else to approve your code",
    "start": "2212200",
    "end": "2217520"
  },
  {
    "text": "so I'm going to talk a little bit about this uh at the end but first let's look at an alternative that I've seen work",
    "start": "2217520",
    "end": "2223560"
  },
  {
    "text": "much better in real word this alternative is to use the whole team as a gatekeeper and the",
    "start": "2223560",
    "end": "2230200"
  },
  {
    "text": "reason I like that is because first of all it doesn't rely on an individual everyone can make changes everywhere but",
    "start": "2230200",
    "end": "2236240"
  },
  {
    "text": "the team decides what code that gets approved and not and second while it do",
    "start": "2236240",
    "end": "2241319"
  },
  {
    "text": "assigns a clear ownership to a team it also helps address other issue with the",
    "start": "2241319",
    "end": "2247000"
  },
  {
    "text": "traditional gatekeeper pattern and this is a social issue this is something psychologists",
    "start": "2247000",
    "end": "2253160"
  },
  {
    "text": "called the fusion of responsibility and the fusion of responsibility relates to accidents and",
    "start": "2253160",
    "end": "2259880"
  },
  {
    "text": "emergencies in the real world so if someone God forbids has an emergency it turns out that the larger",
    "start": "2259880",
    "end": "2267079"
  },
  {
    "text": "any group of bystanders or Witnesses the less likely that any individual will offer their help because they feel less",
    "start": "2267079",
    "end": "2274800"
  },
  {
    "text": "personal responsibility to do so and and just assume that someone else will probably help and we have the same in software",
    "start": "2274800",
    "end": "2282160"
  },
  {
    "text": "and that means that in software we must feel that our individual contributions make a difference and I think it's",
    "start": "2282160",
    "end": "2287920"
  },
  {
    "text": "necessary for good code to have a sense of personal responsibility from everyone",
    "start": "2287920",
    "end": "2295280"
  },
  {
    "text": "involved so there's really no way around that now that we have looked into the",
    "start": "2295960",
    "end": "2301359"
  },
  {
    "text": "social aspects let's tie them together with our hotspots so this is what I typically",
    "start": "2301359",
    "end": "2308920"
  },
  {
    "text": "find when I analyze really old code bases codebases been around for 15 20 years I tend to find that most of the",
    "start": "2308920",
    "end": "2315920"
  },
  {
    "text": "code is quite stable in terms of development activity and then you have a number of really strong central hotspots",
    "start": "2315920",
    "end": "2322319"
  },
  {
    "text": "in the most important parts of your code when I find something like that I always look back in time and I see that",
    "start": "2322319",
    "end": "2329280"
  },
  {
    "text": "those hotspots have been around for years which means we have probably spent",
    "start": "2329280",
    "end": "2334440"
  },
  {
    "text": "a lot of time and effort on code that it's less than optimal in quality so why hasn't anyone improved",
    "start": "2334440",
    "end": "2342200"
  },
  {
    "text": "that code do you know the reason why much existing code isn't improved the reason",
    "start": "2342200",
    "end": "2348040"
  },
  {
    "text": "is because the fral figures look like this so that means no you cannot just",
    "start": "2348040",
    "end": "2354240"
  },
  {
    "text": "redesign the code because at any given time you have 4 different developers from different teams that depend upon",
    "start": "2354240",
    "end": "2359560"
  },
  {
    "text": "the code looking at the way it does right now in different branches and things and this is quite unfortunate it",
    "start": "2359560",
    "end": "2365960"
  },
  {
    "text": "leaves us in a context that I call immutable design now I'm a functional programmer",
    "start": "2365960",
    "end": "2372800"
  },
  {
    "text": "but trust me on this one in this context there's nothing good at all with",
    "start": "2372800",
    "end": "2379000"
  },
  {
    "text": "immutability and I find it quite ironic that the reason we cannot improve the code is because we have so many people",
    "start": "2379000",
    "end": "2384560"
  },
  {
    "text": "working at in the parallel and the reason we have to be that many people working at in the parallel is because we",
    "start": "2384560",
    "end": "2389960"
  },
  {
    "text": "cannot improve the code and the first step towards real Improvement is to measure and understand that this is an",
    "start": "2389960",
    "end": "2396560"
  },
  {
    "text": "organizational social problem not a technical one so please align your",
    "start": "2396560",
    "end": "2401920"
  },
  {
    "text": "architecture and your organization your code is going to thank you for",
    "start": "2401920",
    "end": "2408119"
  },
  {
    "text": "it so I'm almost done now before I take time for questions I just want to sum it up for you so we have seen that once we",
    "start": "2408480",
    "end": "2416440"
  },
  {
    "text": "embrace our past we can get a lot of valuable information that help us get a new perspective on your code base you",
    "start": "2416440",
    "end": "2423319"
  },
  {
    "text": "have seen how hotspots helps us prioritize the code that an extra need of refactorings or other improvements we",
    "start": "2423319",
    "end": "2430599"
  },
  {
    "text": "have seen how we can use complexity Trends as whistleblowers to avoid the normalization of deviants and you have",
    "start": "2430599",
    "end": "2436920"
  },
  {
    "text": "seen how we can reason and measure software he life using Cod H Maps finally we have seen how we can even get",
    "start": "2436920",
    "end": "2444079"
  },
  {
    "text": "insights into how well our architecture fits the way we actually work with it by",
    "start": "2444079",
    "end": "2449119"
  },
  {
    "text": "studying the distribution of teams inside our code and this is a huge topic and this",
    "start": "2449119",
    "end": "2456119"
  },
  {
    "text": "for presentation has really just scratched the surface so if you want to read more I blog about this regularly at",
    "start": "2456119",
    "end": "2462920"
  },
  {
    "text": "Adam Thor hill.com you have a number of links here and of course if want to dive deeper into this you have the whole book",
    "start": "2462920",
    "end": "2469560"
  },
  {
    "text": "about it your code is a crime scene finally a thing I'm working on right now and this is still work in progress is",
    "start": "2469560",
    "end": "2475839"
  },
  {
    "text": "that I want to provide these tools that I use to do those visualizations as a service so if you're interested in that",
    "start": "2475839",
    "end": "2482839"
  },
  {
    "text": "uh you can sign up at code CIO it's free and if you're interested in the tools uh",
    "start": "2482839",
    "end": "2489640"
  },
  {
    "text": "that I use today you can have a look at emp.com and you will see what's available and I'm happy to tell you more",
    "start": "2489640",
    "end": "2495839"
  },
  {
    "text": "about it later so before I take some questions I just want to take this opportunity and say thanks a lot for",
    "start": "2495839",
    "end": "2503079"
  },
  {
    "text": "listening to me and may the code be with you",
    "start": "2503079",
    "end": "2508359"
  },
  {
    "text": "thanks all right right yeah so I think most of the questions also the questions",
    "start": "2514839",
    "end": "2520440"
  },
  {
    "text": "I had was where can I download these awesome tools yeah okay now we know it",
    "start": "2520440",
    "end": "2525880"
  },
  {
    "text": "um yeah so that's emp.com and the reason I had to write my own tools emper is my startup so uh when I started to do this",
    "start": "2525880",
    "end": "2533200"
  },
  {
    "text": "stuff 5 years ago there were no tools available to do the kind of analyses I wanted to do so I wrote my own tools not",
    "start": "2533200",
    "end": "2539400"
  },
  {
    "text": "necessarily because I wanted but out of necessity so uh please have a look at them and uh also have a um the code",
    "start": "2539400",
    "end": "2547359"
  },
  {
    "text": "scene I hope it will be available sometime this summer and uh as I said there is going to be a free option on",
    "start": "2547359",
    "end": "2552720"
  },
  {
    "text": "that one besides uh where can I download these tools um would you recommend",
    "start": "2552720",
    "end": "2560240"
  },
  {
    "text": "marking actually I think it's making making incremental code changes forsus Buck fixes to find Buck",
    "start": "2560240",
    "end": "2567960"
  },
  {
    "text": "hotspots oh yeah I'm not sure I understand that question completely but it's about making small iterative",
    "start": "2567960",
    "end": "2575160"
  },
  {
    "text": "changes yeah I Pro yeah now when I read it yeah would you recommend making",
    "start": "2575160",
    "end": "2580559"
  },
  {
    "text": "increment code changes yeah so uh uh there there I think there are actually",
    "start": "2580559",
    "end": "2586000"
  },
  {
    "text": "two questions there I do my interpretation of it and uh the questioner you're free to approach me afterwards I will be hanging around for",
    "start": "2586000",
    "end": "2592040"
  },
  {
    "text": "a rest of the day but it's basically I did done a lot of case studies on this and what I always find is that the",
    "start": "2592040",
    "end": "2597680"
  },
  {
    "text": "hotspots they always make up this small paral code like 2 to 6% maybe but they",
    "start": "2597680",
    "end": "2603160"
  },
  {
    "text": "tend to be responsible for lots of the bugs in the code so if you look at your bugs they also",
    "start": "2603160",
    "end": "2608400"
  },
  {
    "text": "tend to Cluster bugs like each other right so you will see that the hotspots",
    "start": "2608400",
    "end": "2613720"
  },
  {
    "text": "they are with just the hotspots it typically possible to identify the most bugy areas in your code like 20 to as",
    "start": "2613720",
    "end": "2621359"
  },
  {
    "text": "high as 70% of your defects will be in the hotspots any more",
    "start": "2621359",
    "end": "2628800"
  },
  {
    "text": "questions no okay then thank you very much thanks",
    "start": "2630400",
    "end": "2638078"
  }
]