[
  {
    "start": "0",
    "end": "179000"
  },
  {
    "text": "Welcome to the GOTO Book Club. I'm Steven Nunez, and today I'm thrilled to\ntalk about a book that captures the excitement",
    "start": "4440",
    "end": "10309"
  },
  {
    "text": "and joy when programming Phoenix LiveView. Programming Phoenix LiveView. That's the book.",
    "start": "10309",
    "end": "16230"
  },
  {
    "text": "I'm joined today by its co-authors, Bruce\nTate and Sophie DeBenedetto, and I wanna just dive right into it.",
    "start": "16230",
    "end": "21420"
  },
  {
    "text": "Bruce, can you tell us a little bit about\nyourself? Yes. I am the founder of a company that teaches\nElixir developers to code LiveView and OTP,",
    "start": "21420",
    "end": "30660"
  },
  {
    "text": "and then some of Elixir itself, and I've also\nbeen involved in the Elixir publishing community",
    "start": "30660",
    "end": "35830"
  },
  {
    "text": "for a good long while. I was the original editor of the Elixir source\nline of books at the Pragmatic Bookshelf.",
    "start": "35830",
    "end": "42970"
  },
  {
    "text": "So, I've been involved with Elixir since before\nversion 1.0, and I'm excited to talk about",
    "start": "42970",
    "end": "49250"
  },
  {
    "text": "this topic today. That's so cool. Again, just like so many great Elixir books\nthat you've been not only a part of, but have",
    "start": "49250",
    "end": "55039"
  },
  {
    "text": "written, which we'll get into in a little\nbit. Sophie, how about you? Thank you for introducing us and hanging out\nhere today.",
    "start": "55039",
    "end": "62170"
  },
  {
    "text": "I'm Sophie DeBenedetto. I am also the co-author, along with Bruce\nTate, of the Programming Phoenix LiveView",
    "start": "62170",
    "end": "68250"
  },
  {
    "text": "book, out in beta now Pragmatic Bookshelf. A little bit about sort of my programming\nbackground, I'm a staff engineer now at GitHub,",
    "start": "68250",
    "end": "75830"
  },
  {
    "text": "where, you know, before you ask, we don't\nuse any Elixir or BEAM languages, sadly, or",
    "start": "75830",
    "end": "81340"
  },
  {
    "text": "should I say, yet, you know. Always holding out a tiny spark of hope. My introduction to sort of the Elixir publishing\nworld came through Bruce, when I came on to",
    "start": "81340",
    "end": "90828"
  },
  {
    "text": "co-author this book with him, and Bruce, you\nmentioned that you were formerly the Elixir series editor at Pragmatic Bookshelf.",
    "start": "90829",
    "end": "96548"
  },
  {
    "text": "I am the new Elixir series editor at Pragmatic\nBookshelf, which means that my job is to help",
    "start": "96549",
    "end": "102840"
  },
  {
    "text": "people who want to write books about Elixir\nfor Pragmatic Bookshelf. So, if you have an idea for a book, and you\nwanna talk about it, you should reach out",
    "start": "102840",
    "end": "111320"
  },
  {
    "text": "to me on Twitter. I think our contact information will be available. If you're listening to this recording, I'm\nhere to hear your idea, and to help you get",
    "start": "111320",
    "end": "121328"
  },
  {
    "text": "that proposal submitted to our proposals committee\nif that's something you're interested in doing.",
    "start": "121329",
    "end": "126590"
  },
  {
    "text": "What else? Along with Steven and Bruce, and a couple\nof other fabulous people, including Lars Wikman",
    "start": "126590",
    "end": "132400"
  },
  {
    "text": "and Alex Koutmos, we co-host the \"Beam Radio\"\npodcast. Steven Nunez is showing the \"Beam Radio\" T-shirt,\nand it's a very handsome T-shirt at that,",
    "start": "132400",
    "end": "142000"
  },
  {
    "text": "courtesy, I believe, of Bruce and Maggie,\nwho help produce the show. So, check out the podcast if you haven't yet,\nor if you like what you hear today if you",
    "start": "142000",
    "end": "149270"
  },
  {
    "text": "wanna just listen to us hang out and talk\nabout all things BEAM. What else?",
    "start": "149270",
    "end": "154720"
  },
  {
    "text": "I like to write about Elixir. I like to write Elixir. Wish I could do it a little bit more in my\nprofessional life, but that's one of the reasons",
    "start": "154720",
    "end": "161670"
  },
  {
    "text": "why I've been having such a wonderful time\nworking on this book with Bruce. Chances are, if you're looking for something\nrelated to how to solve a problem in Elixir",
    "start": "161670",
    "end": "169340"
  },
  {
    "text": "or Phoenix, you're gonna run into Sophie's\nwork out there on the blogosphere.",
    "start": "169340",
    "end": "175180"
  },
  {
    "text": "The book is just an extension of that awesome\nwriting. Thank you. So, you guys are directly involved with Pragmatic\nBookshelf's Elixir line, as you mentioned,",
    "start": "175180",
    "end": "183349"
  },
  {
    "start": "179000",
    "end": "663000"
  },
  {
    "text": "and you kind of decide what goes out. This book is important to put out. Not only that, I'll let the readers know,\nit's a bear.",
    "start": "183350",
    "end": "189790"
  },
  {
    "text": "It's a huge book. Like, it's a massive book, incredibly comprehensive,\ntalking about Elixir, Phoenix, LiveView, and",
    "start": "189790",
    "end": "195159"
  },
  {
    "text": "design, which we'll get into, but for listeners\nthat are new to Elixir and Phoenix, what is",
    "start": "195159",
    "end": "202620"
  },
  {
    "text": "LiveView? And, kind of, what problems does it solve? What domain does it sort of exist in? I'll toss that over to Sophie DeBenedetto\nto start.",
    "start": "202620",
    "end": "210349"
  },
  {
    "text": "Cool. So, if you are brand new to LiveView, and\nyou've maybe not heard much about it before,",
    "start": "210349",
    "end": "216090"
  },
  {
    "text": "which was the audience I was, speaking of\nGOTO, I gave some LiveView talks at GOTO Copenhagen, and I asked for, like, a show of hands who's\nworked in LiveView before, and one or two",
    "start": "216090",
    "end": "225360"
  },
  {
    "text": "people raise their hands each time, so it's\nvery cool to see that there is some broader interest in the functional programming community.",
    "start": "225360",
    "end": "231950"
  },
  {
    "text": "If you are tuning in and you don't really\nknow anything about LiveView, but you're just a little curious, you're not alone among other\nfunctional programmers.",
    "start": "231950",
    "end": "240379"
  },
  {
    "text": "So, what is LiveView? It is a real-time web development framework\nthat is incorporated into the Phoenix web",
    "start": "240379",
    "end": "247549"
  },
  {
    "text": "development framework, which is Elixir's web\ndevelopment framework. How many times will I say web development\nframework?",
    "start": "247549",
    "end": "253130"
  },
  {
    "text": "It's kind of the Rails of Elixir, or, the\nRails of functional programming, and I think",
    "start": "253130",
    "end": "260250"
  },
  {
    "text": "one of the cases that I tried to make in my\nrecent talks at GOTO Copenhagen is that LiveView",
    "start": "260250",
    "end": "265680"
  },
  {
    "text": "makes functional programming relevant to web\ndevelopment, because up until, I think, even",
    "start": "265680",
    "end": "271660"
  },
  {
    "text": "more recent versions of LiveView, which makes\nit such a compelling choice for teams, companies,",
    "start": "271661",
    "end": "276860"
  },
  {
    "text": "organizations, we didn't have a go-to web\ndev framework beyond Phoenix, which it is",
    "start": "276860",
    "end": "282349"
  },
  {
    "text": "just an extension of that, that would sort\nof let functional developers build web apps",
    "start": "282350",
    "end": "288730"
  },
  {
    "text": "that take advantage of a lot of the features\nof functional programming. So, it's written in Elixir.",
    "start": "288730",
    "end": "294350"
  },
  {
    "text": "It's written on top of OTP, so as far as functional\nlanguages go, you get the benefits of it being,",
    "start": "294350",
    "end": "301860"
  },
  {
    "text": "working with immutable data structures, and\nyou get all the other benefits that you might be used to just in terms of modeling the world\nwith a functional framework.",
    "start": "301860",
    "end": "310590"
  },
  {
    "text": "I think the actor model is very much the principle\nof LiveView. A LiveView is a process, and it passes messages.",
    "start": "310590",
    "end": "318289"
  },
  {
    "text": "And because it's built on top of OTP, you\nget all the benefits of OTP without having to understand how that works.",
    "start": "318290",
    "end": "323810"
  },
  {
    "text": "So, instead of, like, Rails magic, which abstracts\naway a lot of the internals of how a web application",
    "start": "323810",
    "end": "329690"
  },
  {
    "text": "or a web server works in an object-oriented\nlanguage, you get this kind of OTP magic.",
    "start": "329690",
    "end": "334699"
  },
  {
    "text": "You get massive amounts of concurrency for\nfree. You get fault tolerance for free. A LiveView is a process that backs your webpage.",
    "start": "334699",
    "end": "342340"
  },
  {
    "text": "So, if it crashes, it just starts back up\nagain, and there's lots of kind of niceties",
    "start": "342340",
    "end": "347699"
  },
  {
    "text": "around making that a seamless experience for\nyour user. So, in short, it is a functional web development\nframework that is built on top of Elixir and",
    "start": "347699",
    "end": "357139"
  },
  {
    "text": "OTP, to bring real-time web development to\nfunctional programmers, and everyone else.",
    "start": "357139",
    "end": "363030"
  },
  {
    "text": "What it lets us do, and why I think it's taking\noff so much within the Elixir community, and",
    "start": "363030",
    "end": "368150"
  },
  {
    "text": "we're starting to see it take off outside\nof the Elixir community, is that you're building single-page applications with a pure server-side\nframework. ",
    "start": "368150",
    "end": "373480"
  },
  {
    "text": "It allows you to build single-page web applications\nwith a purely server-side mindset, which isn't",
    "start": "373480",
    "end": "380340"
  },
  {
    "text": "to say that JavaScript won't be running, or\nthat you won't write any JavaScript, but if",
    "start": "380340",
    "end": "385680"
  },
  {
    "text": "you're used to the complexity, and kind of\nthe added overhead of something like React,",
    "start": "385680",
    "end": "392229"
  },
  {
    "text": "where you're coordinating your API, and your\nfront end code, and your backend team, and",
    "start": "392229",
    "end": "398340"
  },
  {
    "text": "your front end team in dealing with onerous\nrelease cycles because of that, and you're",
    "start": "398340",
    "end": "404199"
  },
  {
    "text": "dealing with a lot of cumbersome tests because\nof that, you're gonna pretty much write almost",
    "start": "404200",
    "end": "410120"
  },
  {
    "text": "exclusively server-side code. You're gonna keep the mindset of, you are\ndevelopers, your team, firmly on the server",
    "start": "410120",
    "end": "416990"
  },
  {
    "text": "side, you're gonna execute a purely Elixir\ntest suite, and you're gonna get all the benefits of a highly interactive, real-time, single-page\napp, without, I used to say without JavaScript,",
    "start": "416990",
    "end": "427590"
  },
  {
    "text": "but there's plenty of JavaScript in LiveView. You just don't have to write the boring parts.",
    "start": "427590",
    "end": "432750"
  },
  {
    "text": "You don't have to write any JavaScript at\nall unless you want to or need to add in something extra special and fancy, which LiveView lets\nyou do pretty seamlessly.",
    "start": "432750",
    "end": "440668"
  },
  {
    "text": "Bruce Tate, how about you? Why is this important? Why should people think LiveView is relevant?",
    "start": "440669",
    "end": "447949"
  },
  {
    "text": "I could say everything that Sophie said, but\nthat'd be a little bit less interesting.",
    "start": "447949",
    "end": "453870"
  },
  {
    "text": "So, let's go back to when José first started\nwriting a web application, or a web application",
    "start": "453870",
    "end": "460440"
  },
  {
    "text": "server, and that wasn't Phoenix. That was a little framework called Dynamo.",
    "start": "460440",
    "end": "466099"
  },
  {
    "text": "And it was his first take on what web development\nshould be.",
    "start": "466099",
    "end": "471360"
  },
  {
    "text": "And, unsurprisingly, there's, the use cases\nin Elixir were still evolving.",
    "start": "471360",
    "end": "477550"
  },
  {
    "text": "The abstractions and design patterns were\nstill evolving, and that wasn't exactly what",
    "start": "477550",
    "end": "483340"
  },
  {
    "text": "he wanted it to be. So, when he went looking for a solution to\nhow to build web applications in Elixir, he",
    "start": "483340",
    "end": "492370"
  },
  {
    "text": "started with a web server application...what? Lego, framework, toolkit, or something like\nthat.",
    "start": "492370",
    "end": "502389"
  },
  {
    "text": "And essentially, what this thing was, was\na common data element, called a Plug.Conn,",
    "start": "502389",
    "end": "509159"
  },
  {
    "text": "a connection, and functions that worked on\nit. And every single one of those functions accepted\na connection and returned a connection.",
    "start": "509159",
    "end": "518229"
  },
  {
    "text": "And so, you could think about Phoenix as one\nlong, beautiful function.",
    "start": "518229",
    "end": "523610"
  },
  {
    "text": "And with that abstraction, Chris McCord found\nit, and they worked together to build the Phoenix framework.",
    "start": "523610",
    "end": "528750"
  },
  {
    "text": "The thing that made that interesting to functional\ndevelopers is that we had functional composition,",
    "start": "528750",
    "end": "536330"
  },
  {
    "text": "in a functional language, and it was really\nbeautiful. And LiveView just extends that model to, rather\nthan having a request-response framework,",
    "start": "536330",
    "end": "548100"
  },
  {
    "text": "LiveView supports a single-page framework,\nso that we go through this one long chain",
    "start": "548100",
    "end": "554089"
  },
  {
    "text": "of plugs, we get to a point where we say,\n\"Hey, this is a LiveView,\" and then Phoenix",
    "start": "554089",
    "end": "561450"
  },
  {
    "text": "loads the page, returns the page, and there's\na little bit of pre-written JavaScript on that page that says, \"Establish a connection\non a straight HTTP socket.\"",
    "start": "561450",
    "end": "571140"
  },
  {
    "text": "And then, from that point on, we're doing\none of three things. We're establishing data, we're transforming\nthat data, maybe from a button click on the",
    "start": "571140",
    "end": "582100"
  },
  {
    "text": "page, or maybe somebody fills out a form and\nwe need to validate that. Maybe it's some type of a slider or a link.",
    "start": "582100",
    "end": "589970"
  },
  {
    "text": "And then the last thing is we're rendering\nwhatever's in the socket. So, that old single-page application were\nthis kind of weird, entangled mass of code",
    "start": "589970",
    "end": "601769"
  },
  {
    "text": "and state, and the state came from all different\nplaces. We kind of put that stuff together, in a process.",
    "start": "601769",
    "end": "608610"
  },
  {
    "text": "And then we accessed it, just like Sophie\nsaid, with the actor-based model, so that",
    "start": "608610",
    "end": "613800"
  },
  {
    "text": "you're either establishing state, changing\nstate based on clicks, and rendering state.",
    "start": "613800",
    "end": "619380"
  },
  {
    "text": "So, maybe, in the socket, we have a list of\nusers, we have a button that says remove a user, and then all that button does is remove\na user from the list.",
    "start": "619380",
    "end": "630360"
  },
  {
    "text": "And then, in another dimension, we just render\nthat page whenever the state changes.",
    "start": "630360",
    "end": "635570"
  },
  {
    "text": "So, it's a beautiful way to build web applications. LiveView feels like an inevitability if you\nlook at the OTP framework.",
    "start": "635570",
    "end": "642610"
  },
  {
    "text": "Even in \"Programming Erlang,\" by Joe Armstrong,\ntalks about abstracting away interacting with",
    "start": "642610",
    "end": "648260"
  },
  {
    "text": "a web socket, and it's an actor model. It's all OTP. And when you look and dive into the internals\nof LiveView, you get the same kind of feeling,",
    "start": "648260",
    "end": "656970"
  },
  {
    "text": "that it's like we're just interacting with\na central state, and then how we render it is a bit different.",
    "start": "656970",
    "end": "662070"
  },
  {
    "text": "I wanna talk a little bit about some of the\nconcerns that someone might have coming into LiveView. One of them, or working with a SPA in general,\nis sort of, like, SEO concerns.",
    "start": "662070",
    "end": "671430"
  },
  {
    "start": "663000",
    "end": "1014000"
  },
  {
    "text": "And in addition to that, Sophie DeBenedetto\nmentioned that you're not gonna have to write any JavaScript.",
    "start": "671430",
    "end": "677139"
  },
  {
    "text": "I don't know exactly what you said, but how\ndoes LiveView allow for those things, SEO,",
    "start": "677139",
    "end": "683690"
  },
  {
    "text": "and sort of that big concern of, like, not\nshowing up in Google, and then also, like, okay, if you have to use a library that's\nbeen around forever, how do you do that in",
    "start": "683690",
    "end": "692029"
  },
  {
    "text": "LiveView? SEO is something that you mentioned, and I\nthink it was one of the biggest concerns that",
    "start": "692029",
    "end": "697060"
  },
  {
    "text": "Chris McCord and the team addressed, even\nat the very beginning, kind of baked into the very nature of the LiveView paradigm,\nbecause of course, without SEO, absolutely",
    "start": "697060",
    "end": "704990"
  },
  {
    "text": "no one will use your web development framework\nfor your single-page apps. So, the beauty of LiveView, exactly as Bruce\ndescribed, is that it starts out like a regular",
    "start": "704990",
    "end": "715440"
  },
  {
    "text": "HTTP GET request, and it begins by rendering\na static webpage. So, your LiveView template will first render\nas static HTML.",
    "start": "715440",
    "end": "724490"
  },
  {
    "text": "Then, that little bit of LiveView JavaScript\nthat's embedded on the page for you for free",
    "start": "724490",
    "end": "730100"
  },
  {
    "text": "will kind of kick in and open that persistent\nbidirectional web socket communication, so",
    "start": "730100",
    "end": "735149"
  },
  {
    "text": "that SEO is gonna run on that first static\nrender. So, SEO is not at all a concern for LiveView.",
    "start": "735150",
    "end": "742670"
  },
  {
    "text": "There are many concerns that one may have\nwhen working with a single-page web application,",
    "start": "742670",
    "end": "748889"
  },
  {
    "text": "and I think that these are considerations\nthat are not at all specific to LiveView.",
    "start": "748889",
    "end": "755029"
  },
  {
    "text": "As I said, they're very many considerations\nthat I think anyone building web apps today",
    "start": "755030",
    "end": "761920"
  },
  {
    "text": "may have and may share, and I think LiveView\nhas, like, an ideal solution for all of them.",
    "start": "761920",
    "end": "768630"
  },
  {
    "text": "So, not to sort of, like, flog my GOTO talks\ntoo much, but I did give a talk at GOTO Copenhagen",
    "start": "768630",
    "end": "774980"
  },
  {
    "text": "at the beginning of October, talking about\nreally exactly this topic, sort of laying",
    "start": "774980",
    "end": "780089"
  },
  {
    "text": "out this list of sort of these main and common\nconcerns when it comes to single-page web",
    "start": "780089",
    "end": "788570"
  },
  {
    "text": "apps, and then I kind of went through each\ncategory and talked about the solution that",
    "start": "788570",
    "end": "794900"
  },
  {
    "text": "LiveView has for each one. I'm not gonna try to recap my entire talk\nright now, but I'll give maybe just a little",
    "start": "794900",
    "end": "801170"
  },
  {
    "text": "bit of a taste of it. So, I consider, sort of, this list that I'll\nrecite right now to be some of these common",
    "start": "801170",
    "end": "807060"
  },
  {
    "text": "concerns. There are questions about security. How do you secure your single-page apps? Certainly questions around state recovery.",
    "start": "807060",
    "end": "813389"
  },
  {
    "text": "What happens if the app crashes or if the\nconnection is lost? That's something that JavaScript web frameworks\nhave a lot of answers for.",
    "start": "813389",
    "end": "822079"
  },
  {
    "text": "What about file uploads? File uploading in your single-page app can\nbe notorious, if not difficult, maybe just",
    "start": "822079",
    "end": "827510"
  },
  {
    "text": "kind of laden with toil. There are questions around code organization\nthat I know we're very eager to hear from",
    "start": "827510",
    "end": "832940"
  },
  {
    "text": "Bruce on. Especially if you have ever worked with a\ndense, nested, gnarly React app, I think the",
    "start": "832940",
    "end": "840000"
  },
  {
    "text": "question of code organization may resonate\nwith you. Questions around integrating JavaScript. I mentioned earlier that you don't have to\nwrite JavaScript.",
    "start": "840000",
    "end": "847440"
  },
  {
    "text": "That doesn't mean that you don't get to write\nJavaScript. LiveView has a solution for that as well.",
    "start": "847440",
    "end": "852790"
  },
  {
    "text": "Then there are also questions about efficient\ndata transfer. And maybe I'll just go into a little bit more\ndetail on just this one because this is a",
    "start": "852790",
    "end": "858800"
  },
  {
    "text": "question I would get a lot. And Steven, this is a question you and I would\nget from our students when we taught our LiveView",
    "start": "858800",
    "end": "865180"
  },
  {
    "text": "workshop, which is now sadly out of date because\nLiveView has changed so much since we first",
    "start": "865180",
    "end": "870380"
  },
  {
    "text": "gave it a year or two ago. But one of the main things that people would\nask me when learning LiveView was, \"What if",
    "start": "870380",
    "end": "877139"
  },
  {
    "text": "I have a lot of data that I'm trying to communicate\nbetween the client and the server?\" We know that  LiveView is backed by a process\non the backend.",
    "start": "877139",
    "end": "884740"
  },
  {
    "text": "We know that it's connected to the client\nover this persistent web socket connection. So, let's say you're building some sort of\nSpotify-type web app, and you've got a bazillion",
    "start": "884740",
    "end": "894880"
  },
  {
    "text": "songs to send down to the client, or to make\navailable to the user in some way, and to",
    "start": "894880",
    "end": "900760"
  },
  {
    "text": "allow them to interact with. LiveView always strove to minimize data transfer,\nand make that communication as efficient as",
    "start": "900760",
    "end": "909459"
  },
  {
    "text": "possible, which it did from the outset, and\nstill does, when it comes to rendering the smallest possible page divs when the state\nof your page has changed.",
    "start": "909459",
    "end": "918180"
  },
  {
    "text": "But if you have, like I said, a bazillion\nsongs, you have a bazillion songs. It doesn't solve that problem.",
    "start": "918180",
    "end": "923720"
  },
  {
    "text": "LiveView has solved that problem since a couple\nof months ago, I think, at this point, with the streams feature set in LiveView, which\nallows you to manage really large datasets",
    "start": "923720",
    "end": "934180"
  },
  {
    "text": "in your LiveView by detaching it from the\nserver and storing it primarily client-side. And if it kind of makes you shiver a little\nbit to say you're gonna manage a huge amount",
    "start": "934180",
    "end": "943040"
  },
  {
    "text": "of data client-side, LiveView does it for\nyou, and this is the beauty of LiveView. This is something we haven't talked about\nyet.",
    "start": "943040",
    "end": "949949"
  },
  {
    "text": "LiveView is a declarative framework. You will never have to tell LiveView how to\ndo something, and this is no different.",
    "start": "949949",
    "end": "957120"
  },
  {
    "text": "You don't have to tell LiveView how to manage\nyour 1000 Taylor Swift songs that you are",
    "start": "957120",
    "end": "962500"
  },
  {
    "text": "trying to display to the user to take them\non a walkthrough of the Eras Tour, because",
    "start": "962500",
    "end": "968240"
  },
  {
    "text": "the LiveView framework contains all the code\nthat manages that data client-side, and exposes",
    "start": "968240",
    "end": "974880"
  },
  {
    "text": "to you, the developer, a sleek API for you\nto do things like update data in that data",
    "start": "974880",
    "end": "980270"
  },
  {
    "text": "set, which was called a stream, add something\nto it, clear it out, bulk edit, remove, and",
    "start": "980270",
    "end": "985360"
  },
  {
    "text": "so on. So, LiveView handles the hard parts of that\nfor you, and you kind of just are focused",
    "start": "985360",
    "end": "991279"
  },
  {
    "text": "on what you care about as an application developer. I love it. There's so much power in the framework, and\nit keeps getting better.",
    "start": "991279",
    "end": "998250"
  },
  {
    "text": "I'll just mention this. I wanna move on to some of the things in the\nbook, but, anywhere that Elixir can run, LiveView",
    "start": "998250",
    "end": "1005830"
  },
  {
    "text": "can run. We've seen it in embedded systems, which is\ncool, with the Nerves Project. And then, LiveView native.",
    "start": "1005830",
    "end": "1011829"
  },
  {
    "text": "That exists. We'll have it on mobile. It's great.  Bruce, I wanted to ask you a question. So, you wrote \"Designing Elixir Systems with\nOTP.\"",
    "start": "1011829",
    "end": "1018730"
  },
  {
    "start": "1014000",
    "end": "1459000"
  },
  {
    "text": "I have it here. Bruce, you need to sign this for me. I need it. This is, like, I go to sleep with this every\nnight.",
    "start": "1018730",
    "end": "1024860"
  },
  {
    "text": "It's all about the design for me. This new book, though, is as much about design\nas it is about web development.",
    "start": "1024860",
    "end": "1031640"
  },
  {
    "text": "I know you cover a lot of this in your training,\nbut can you talk about the value of sort of focusing on patterns?",
    "start": "1031640",
    "end": "1037699"
  },
  {
    "text": "A lot of books that are covering a framework\nare just trying to teach you enough to, \"This",
    "start": "1037700",
    "end": "1042730"
  },
  {
    "text": "is kind of how it works. Here's your map function. Here's your render function.\" You guys go the extra mile, and I want to\nunderstand what the thinking is behind that.",
    "start": "1042730",
    "end": "1049760"
  },
  {
    "text": "That's interesting. I've heard it said, by, actually, specifically,\nby a man named Melvin Cedeno, at a conference",
    "start": "1049760",
    "end": "1058360"
  },
  {
    "text": "that we had, called Lonestar Elixir, in 2020,\nthat Elixir is reduce.",
    "start": "1058360",
    "end": "1064220"
  },
  {
    "text": "And what it meant was that Elixir is two different\nthings and one of them is how do you compose",
    "start": "1064220",
    "end": "1072270"
  },
  {
    "text": "functions? And with Elixir, that does mean reduce. How do you take something like that plug connection,\nand do a little bit of work to it, and return",
    "start": "1072270",
    "end": "1079850"
  },
  {
    "text": "another connection? Whether that little bit of work is fetching\na session, or managing some small bit of security,",
    "start": "1079850",
    "end": "1086299"
  },
  {
    "text": "or actually taking us from the actual flow\nof plugs, and into the router, where we actually",
    "start": "1086299",
    "end": "1095750"
  },
  {
    "text": "start to make decisions in the framework. So, at one level, Elixir is about reduce.",
    "start": "1095750",
    "end": "1102640"
  },
  {
    "text": "And at another level, Elixir is all about\nwhat it is in every functional language. It's this ability to manage uncertainty.",
    "start": "1102640",
    "end": "1111279"
  },
  {
    "text": "It's dealing with the worst word in a programmer's\nlanguage, which is \"maybe,\" right?",
    "start": "1111280",
    "end": "1117059"
  },
  {
    "text": "\"Maybe\" is difficult for programmers, and\nthat's where we come from. We come from simple abstractions and simple\npipes in Elixir, and simple composition in",
    "start": "1117059",
    "end": "1128409"
  },
  {
    "text": "Haskell, to the place where we have to deal\nwith the real complex features, like monads,",
    "start": "1128409",
    "end": "1133610"
  },
  {
    "text": "and the composition. But the way that we think about layering applications\nin LiveView determines how beautiful the applications",
    "start": "1133610",
    "end": "1144870"
  },
  {
    "text": "that we build, how easy they will be to maintain,\nand whether we are fighting the framework along the way.",
    "start": "1144870",
    "end": "1150820"
  },
  {
    "text": "It essentially means that we're going to start\nwith some data, and LiveView has graciously",
    "start": "1150820",
    "end": "1156539"
  },
  {
    "text": "defined that for us, and then we're going\nto think through ways to transform that data",
    "start": "1156540",
    "end": "1162070"
  },
  {
    "text": "and test within that realm. And then we're going to put layers on top,\nsome of which are managed by the framework,",
    "start": "1162070",
    "end": "1170340"
  },
  {
    "text": "like our dependencies that handle the complex\nparts of our application, so that we don't",
    "start": "1170340",
    "end": "1176929"
  },
  {
    "text": "have to write them, and the lifecycle management,\nwhich is managed by supervision, but some",
    "start": "1176929",
    "end": "1182170"
  },
  {
    "text": "of those are exposed in additional layers\nin our application. Like, we have a boundary layer, where we'll\nhandle things like, oh, I don't know, external",
    "start": "1182171",
    "end": "1190929"
  },
  {
    "text": "interfaces to a database, or managing user\nuncertainty in the form of user input, and",
    "start": "1190930",
    "end": "1198320"
  },
  {
    "text": "we go through things like schemaless changesets\nin forms, so that we map those abstractions,",
    "start": "1198320",
    "end": "1205100"
  },
  {
    "text": "all the way from the backend, we apply user\ndata, manage that uncertainty with the right",
    "start": "1205100",
    "end": "1210669"
  },
  {
    "text": "data structures, whether it's a changeset\nor a tagged tuple or an exception, and then we're able to consume those beautiful boundaries\nin our application.",
    "start": "1210669",
    "end": "1219630"
  },
  {
    "text": "And that, rather than a list of features,\nseparates the good concepts, the good training,",
    "start": "1219630",
    "end": "1226169"
  },
  {
    "text": "the good books from the bad ones. I think you're right. I think taking the time to build something\nthat is extendable...",
    "start": "1226169",
    "end": "1233250"
  },
  {
    "text": "Because the truth is, we write these books\nand we do these courses, and folks are gonna, like, copy-paste stuff, you know?",
    "start": "1233250",
    "end": "1239909"
  },
  {
    "text": "You don't want that on your conscience. Thanks for that. You've kept me up all night.",
    "start": "1239909",
    "end": "1246880"
  },
  {
    "text": "No, and it's really... I'll add that, I have said this before, and\nI mean it. I have learned so much from you, Bruce, from\nworking on this book, not just about LiveView,",
    "start": "1246880",
    "end": "1257049"
  },
  {
    "text": "which I think we've both been learning as\nwe go, but, especially about how to architect",
    "start": "1257050",
    "end": "1262620"
  },
  {
    "text": "and design Elixir applications and OTP applications,\na callback to your previous book. And I think that's what sets this book apart\nfrom the LiveView documentation, and another",
    "start": "1262620",
    "end": "1273159"
  },
  {
    "text": "shout out to Chris McCord and to the LiveView\nteam is excellent. It's not just, \"Here's a function.",
    "start": "1273160",
    "end": "1278780"
  },
  {
    "text": "Here's what it does.\" There's lots of good narrative stuff in there\nabout how to do uploads, how to set up your",
    "start": "1278780",
    "end": "1285450"
  },
  {
    "text": "forms, and so on. But, the book goes beyond that, to talk about\nhow you should be designing your LiveView",
    "start": "1285450",
    "end": "1292860"
  },
  {
    "text": "applications. And a LiveView application isn't just a LiveView. It's a Phoenix application.",
    "start": "1292860",
    "end": "1297908"
  },
  {
    "text": "So, it goes all the way from the design of\nyour database tables, right? Up through to that front end, with your LiveView\nand your template, that thing that the user",
    "start": "1297909",
    "end": "1306360"
  },
  {
    "text": "sees. So, that's really where Bruce's expertise\nand opinions around how to architect these",
    "start": "1306360",
    "end": "1312200"
  },
  {
    "text": "applications, things like, and this may sound\nfamiliar to readers of his previous book, but things like separating the core from the\nboundary of your application, things like",
    "start": "1312200",
    "end": "1321570"
  },
  {
    "text": "building out really elegant functions to query\nyour database, with, like, this sleek pipeline of these single-purpose reducer functions,\nand sort of applying that same type of design",
    "start": "1321570",
    "end": "1331320"
  },
  {
    "text": "and that same type of thinking that you see\nelsewhere in the Phoenix app to the actual design and architecture of the LiveView itself\nto the way we think about the different types",
    "start": "1331320",
    "end": "1339970"
  },
  {
    "text": "of LiveView components and layer them to build\nthese elegant UIs.",
    "start": "1339970",
    "end": "1345710"
  },
  {
    "text": "I've become a better programmer, just more\nbroadly, from reading this book. Like, never mind learning, reading, and writing\nthis book with Bruce Tate.",
    "start": "1345710",
    "end": "1352220"
  },
  {
    "text": "I would agree with that. I'm kind of in the same boat. One of the things that was fun to see was\nthat, as the book evolved, we started to see",
    "start": "1352220",
    "end": "1361630"
  },
  {
    "text": "the composition strategies in LiveView itself\nchange. A good example was the LiveView components.",
    "start": "1361630",
    "end": "1367100"
  },
  {
    "text": "They went from these stateless components\nto function components that protected us from",
    "start": "1367100",
    "end": "1372700"
  },
  {
    "text": "problems in type, with problems with HTML\nstructure and surfaced this functionality",
    "start": "1372700",
    "end": "1380658"
  },
  {
    "text": "in beautiful ways. Because of the abstractions in the Elixir\nlanguage itself.",
    "start": "1380659",
    "end": "1386299"
  },
  {
    "text": "So, for example, we have these beautiful ~H\nsigils, that allow us to specify quickly the",
    "start": "1386299",
    "end": "1393850"
  },
  {
    "text": "data type for the LiveView components. And these sigils are exposed, in turn, with\na little line that says \"use Phoenix.Component.\"",
    "start": "1393850",
    "end": "1403730"
  },
  {
    "text": "And that \"use Phoenix.Component\" backs up\nto a macro. And there are also some very elegant abstractions\nin the way that we manage forms, that take",
    "start": "1403730",
    "end": "1414250"
  },
  {
    "text": "advantage of Elixir protocols. But all of these things kind of layer on top\nof each other.",
    "start": "1414250",
    "end": "1419690"
  },
  {
    "text": "And so, the opportunity to kind of explore\nthat with Sophie, and kind of have this relationship,",
    "start": "1419690",
    "end": "1427139"
  },
  {
    "text": "through a book, with the team that works on\nPhoenix, and works on the Elixir language",
    "start": "1427140",
    "end": "1433560"
  },
  {
    "text": "itself, has been a fabulous thing. I think Sophie DeBenedetto called out the\ndocumentation, which is really incredible",
    "start": "1433560",
    "end": "1439970"
  },
  {
    "text": "and good. What I love about this book is that it is\nbuilding an application in action. And I'm kind of, like, hearkening to another\nbook series, but seeing it in motion, essentially,",
    "start": "1439970",
    "end": "1448690"
  },
  {
    "text": "right? Let's build a thing, let's ideate, let's design,\nand kind of, like, go through it. It does add a good amount on top of the documentation,\nwhich is already really incredible. ",
    "start": "1448690",
    "end": "1459340"
  },
  {
    "start": "1459000",
    "end": "1794000"
  },
  {
    "text": "One thing that I want to talk about is, in\nyour book, there's a lot of generated code. So, one thing that I like about Phoenix, and\nthe way that it sort of started to shape up",
    "start": "1459340",
    "end": "1468520"
  },
  {
    "text": "its generation strategy is, it...there's a\nlot of taking advantage of Elixir macros, which happens, but when you are, you're running\na generator, it's essentially dumping a bunch",
    "start": "1468520",
    "end": "1476899"
  },
  {
    "text": "of code in your project. This is interesting because it allows you\nto change and manipulate things, get into",
    "start": "1476899",
    "end": "1484020"
  },
  {
    "text": "it, and see how things work. This book dedicates part one to code generation.",
    "start": "1484020",
    "end": "1489620"
  },
  {
    "text": "Can you guys talk a little bit about the benefits\nof using generated code as a way of showing",
    "start": "1489620",
    "end": "1496700"
  },
  {
    "text": "how things work, looking at conventions, and\nsort of what the thinking was behind that? It's funny.",
    "start": "1496700",
    "end": "1502539"
  },
  {
    "text": "You could see both Sophie and me break into\nshakes and cold sweats, because the code generation",
    "start": "1502540",
    "end": "1507851"
  },
  {
    "text": "that makes things so elegant and beautiful\nfor the user, it's a difficult thing to manage",
    "start": "1507851",
    "end": "1513751"
  },
  {
    "text": "when a framework is underway and under development. We thought it was worth this cost, just to\nserve, to better serve the Phoenix community,",
    "start": "1513751",
    "end": "1522820"
  },
  {
    "text": "and I think I'd make that decision again. But the idea that we can learn from experts,\nlike Chris McCord and the rest of the LiveView",
    "start": "1522820",
    "end": "1532490"
  },
  {
    "text": "team, by reading that, kind of, really excellent,\nproven opinions, was a fantastic thing to",
    "start": "1532490",
    "end": "1540789"
  },
  {
    "text": "me. And I'll turn it over to Sophie. I feel like you certainly probably have more\nto say on the generators.",
    "start": "1540789",
    "end": "1547620"
  },
  {
    "text": "Maybe we can drag it out of you. But, yes, there was a lot of churn in writing\nthe book on the generator portion of things,",
    "start": "1547620",
    "end": "1554899"
  },
  {
    "text": "and that's kind of where most of our efforts\nkind of focused as we've had to put out newer",
    "start": "1554899",
    "end": "1560640"
  },
  {
    "text": "and newer releases. So, I just wanna thank our readers for their\npatience. I feel like what often happens is that we'll\nrelease a new version of the book, and then",
    "start": "1560640",
    "end": "1569120"
  },
  {
    "text": "a day later, like, a flood of comments will\ncome in, saying, you know, this, that, and the other thing is out of date because that's\nhow quickly the LiveView has been moving.",
    "start": "1569120",
    "end": "1576309"
  },
  {
    "text": "So, just know that we're working on it, and\neventually, this book will be sealed and printed,",
    "start": "1576309",
    "end": "1582260"
  },
  {
    "text": "but we do appreciate the patience of our readers\nand all the feedback, certainly, that you guys have been putting in.",
    "start": "1582260",
    "end": "1588210"
  },
  {
    "text": "I mean, generators, I think, are part of the\ncompelling story of not just LiveView, but Phoenix in general.",
    "start": "1588210",
    "end": "1593640"
  },
  {
    "text": "They are opinionated, I think, but not too\nopinionated. They generate what you need for your web app\nto kind of take away the boilerplate and the",
    "start": "1593640",
    "end": "1602850"
  },
  {
    "text": "toil, which is one of the sort of biggest\nthemes you'll see running through both Phoenix and LiveView.",
    "start": "1602850",
    "end": "1608720"
  },
  {
    "text": "You see it often in LiveView when we say,\nor when I say a lot that the framework handles the hard parts. You don't have to write the tedious details\nof, let's say, client-server communication",
    "start": "1608720",
    "end": "1617690"
  },
  {
    "text": "over a web socket. Another way that the framework handles the\nhard parts with Phoenix and LiveView is with",
    "start": "1617690",
    "end": "1623720"
  },
  {
    "text": "these generators. You could generate an entire functioning LiveView\napplication with just one line of a command",
    "start": "1623720",
    "end": "1632070"
  },
  {
    "text": "that you're gonna execute, to tell that generator\nwhat to do, and that's not a novel feature",
    "start": "1632070",
    "end": "1637950"
  },
  {
    "text": "for a web framework. I think Rails also has a long history of generators,\nbut you do get a fully functional, highly",
    "start": "1637950",
    "end": "1645278"
  },
  {
    "text": "interactive single-page web application, backed\nwith all of the power of OTP, all the concurrency",
    "start": "1645279",
    "end": "1651929"
  },
  {
    "text": "and the fault tolerance, and all of that real-time\ncapability that is embedded in a Phoenix app,",
    "start": "1651929",
    "end": "1657169"
  },
  {
    "text": "with a pub-sub server, provides to you. And you can do that with, as I said, just\none line, and then hit enter, and then you've",
    "start": "1657170",
    "end": "1664399"
  },
  {
    "text": "generated it. So, what we try to do in the book is use the\ngenerators, because you'll use them as a developer.",
    "start": "1664399",
    "end": "1670350"
  },
  {
    "text": "After all, they are that good. Then we try to walk you through what was generated\nso that you do get an understanding of how",
    "start": "1670350",
    "end": "1675960"
  },
  {
    "text": "the app is architected because the generators\nput out code that is architected correctly.",
    "start": "1675960",
    "end": "1682408"
  },
  {
    "text": "I think that one of the things that tends\nto happen with a generation-type setup is",
    "start": "1682409",
    "end": "1688750"
  },
  {
    "text": "that there are some strong opinions and that\nthese opinions might vary based on the mechanism",
    "start": "1688750",
    "end": "1696610"
  },
  {
    "text": "that you choose to expose your interface,\nright? Like, so, a lot of Phoenix is exposed in,\neffectively, the functions of the framework",
    "start": "1696610",
    "end": "1706980"
  },
  {
    "text": "themselves. And then there are also places where we want\nto kind of add convenience for the users,",
    "start": "1706980",
    "end": "1713919"
  },
  {
    "text": "and so we expose these ideas with things like\nmacros, whether they're in the \"use Phoenix,\"",
    "start": "1713919",
    "end": "1722509"
  },
  {
    "text": "Phoenix.LiveView, or \"use Phoenix.Component.\" And, we also see opinions expressed in the\ngenerators themselves.",
    "start": "1722510",
    "end": "1730640"
  },
  {
    "text": "So, it's a cool thing to see the balance between\nmacro code, which generates compiled code,",
    "start": "1730640",
    "end": "1737659"
  },
  {
    "text": "at compile time, and code generation code,\nwhich generates code one time, when you process",
    "start": "1737659",
    "end": "1746440"
  },
  {
    "text": "the generator, and then hand the keys of this\nnew Ferrari to the customer.",
    "start": "1746440",
    "end": "1751919"
  },
  {
    "text": "And the decisions between putting something\nin a macro or a library or a framework in",
    "start": "1751919",
    "end": "1758700"
  },
  {
    "text": "the generator, it's a really difficult one\nto make and get right over time, and I think",
    "start": "1758700",
    "end": "1764240"
  },
  {
    "text": "that the LiveView, and overall, the Phoenix\nteam, has done an excellent job of keeping",
    "start": "1764240",
    "end": "1769860"
  },
  {
    "text": "this balance. And what that allows is for a framework that\nhas the right level of backward compatibility,",
    "start": "1769860",
    "end": "1778090"
  },
  {
    "text": "and can provide some insulation between the\ncustomer and the framework developers, in",
    "start": "1778090",
    "end": "1785850"
  },
  {
    "text": "slowing down how quickly you have to act on\nthings like deprecation. And it's a wonderful thing to watch.",
    "start": "1785850",
    "end": "1792640"
  },
  {
    "text": "I feel like I should give you guys a trigger\nwarning. Next, we're gonna talk about some of the changes\nthat have happened in the framework over time.",
    "start": "1792640",
    "end": "1800840"
  },
  {
    "start": "1794000",
    "end": "2217000"
  },
  {
    "text": "So, Sophie, I know the first version, the\nfirst production application that you put out with LiveView was on, I think, 0.10.",
    "start": "1800840",
    "end": "1808049"
  },
  {
    "text": "So, you are a super-duper early adopter, which\nis great, you’ve seen a bunch of changes.",
    "start": "1808049",
    "end": "1814730"
  },
  {
    "text": "So, over the course of working on this book,\nthe interest in the project exploded, right?",
    "start": "1814730",
    "end": "1820450"
  },
  {
    "text": "More people started paying attention, because\nthere's something special here, as far as, like, what you can get, how you can become\nmore productive as a developer, how you can",
    "start": "1820450",
    "end": "1827500"
  },
  {
    "text": "put more things out into the world Really\nexciting. So, what are some of the changes that have\nhappened while you guys are working on this",
    "start": "1827500",
    "end": "1834070"
  },
  {
    "text": "project? I think that one of the things that was the\nmost exciting, and also generated the most",
    "start": "1834070",
    "end": "1843960"
  },
  {
    "text": "heartburn for Sophie and me, was the idea\nof what a component is. That started with this API for stateful components\nand stateless components, and everything in",
    "start": "1843960",
    "end": "1857220"
  },
  {
    "text": "that whole component system changed from the\nearly versions of our book to the later ones.",
    "start": "1857220",
    "end": "1863820"
  },
  {
    "text": "And they started changing through a third-party\nframework, called Surface, which was just",
    "start": "1863820",
    "end": "1870610"
  },
  {
    "text": "some beautiful code that gives us a lot of\nthe capabilities that are in the components",
    "start": "1870610",
    "end": "1876450"
  },
  {
    "text": "right now. But if you think about it, there was an input\ncontrol, and to the Phoenix, for the overall",
    "start": "1876450",
    "end": "1884210"
  },
  {
    "text": "Phoenix surface area, that's one function. But in our application, we might have several\nhundreds of input controls, and then you kind",
    "start": "1884210",
    "end": "1894908"
  },
  {
    "text": "of spread that out across the forks and branches\nthat we have to keep in the project, all the",
    "start": "1894909",
    "end": "1900760"
  },
  {
    "text": "way, as we take the user from one chapter\nthrough the last.",
    "start": "1900760",
    "end": "1906799"
  },
  {
    "text": "It turned into kind of a pretty big endeavor\nto keep the book up-to-date.",
    "start": "1906799",
    "end": "1913350"
  },
  {
    "text": "But what I wanna say about the users, what\nthey're seeing in LiveView is just light years",
    "start": "1913350",
    "end": "1918898"
  },
  {
    "text": "beyond what they were before. This kind of beautiful interface, that's more\nof an HTML style, makes templates that are",
    "start": "1918899",
    "end": "1926299"
  },
  {
    "text": "easy to read. And this strategy of allowing some type checking\nand some HTML structure that's actually on",
    "start": "1926299",
    "end": "1935909"
  },
  {
    "text": "the page is going to make much more reliable\napplications as we move forward.",
    "start": "1935909",
    "end": "1941779"
  },
  {
    "text": "So, that's been one of the things that I've\nkind of had a love-hate relationship with",
    "start": "1941779",
    "end": "1948010"
  },
  {
    "text": "them, but they're by far better now than when\nwe started the book.",
    "start": "1948010",
    "end": "1954610"
  },
  {
    "text": "Sophie DeBenedetto:  If anything, I think\nmy experience has been, every time that I",
    "start": "1954610",
    "end": "1962100"
  },
  {
    "text": "identify something that I wish LiveView could\ndo, it then will do, within, like, a matter",
    "start": "1962100",
    "end": "1968750"
  },
  {
    "text": "of days or weeks. Certainly, from the perspective of trying\nto keep this book up-to-date, that can be",
    "start": "1968750",
    "end": "1975440"
  },
  {
    "text": "a little bit stressful, but from the perspective\nof a web developer who wants to use this framework, it's been pretty thrilling.",
    "start": "1975440",
    "end": "1981710"
  },
  {
    "text": "So, for example, we talked a little bit about\nstreams earlier, streams in LiveView, and how it lets you manage large data sets efficiently.",
    "start": "1981710",
    "end": "1990330"
  },
  {
    "text": "That solved one of the biggest blockers, I\nwould say, to LiveView adoption that I would encounter.",
    "start": "1990330",
    "end": "1995630"
  },
  {
    "text": "Uploads, I remember, Steven Nunez, you were\nplaying around with some complicated kind of bespoke. How do I get file uploads in my LiveView app,\nwhich you could do?",
    "start": "1995630",
    "end": "2003028"
  },
  {
    "text": "It was certainly possible... Where's my trigger warning? Okay?\n...for you to write that code. I know, right? I sunk a weekend in that.",
    "start": "2003029",
    "end": "2008629"
  },
  {
    "text": "A couple of days later, and this was an experience\nI've had as well, you know, the new version is released, live uploads are supported, and\nit's super easy to do.",
    "start": "2008630",
    "end": "2016440"
  },
  {
    "text": "I had that experience with, I don't even remember. I gave a whole talk at Elixir Conf one year\nand I don't even remember what aspect of LiveView",
    "start": "2016440",
    "end": "2024399"
  },
  {
    "text": "was about. All I remember is that, like, by the time\nthe last words left my mouth, like, there was a new version of LiveView that meant this\nwhole fancy, crazy workaround that this whole",
    "start": "2024399",
    "end": "2032940"
  },
  {
    "text": "talk was about was, like, unnecessary. I think you had a caveat at the beginning,\nthat was, like, hey, just, like, pretend this",
    "start": "2032940",
    "end": "2039260"
  },
  {
    "text": "talk came out 72 hours ago. Exactly. And it was still fun. It was still a fun thing. It was great.",
    "start": "2039260",
    "end": "2044350"
  },
  {
    "text": "It was great. And then another example with streams, I think,\nBruce, you, and I talked a little bit about this briefly.",
    "start": "2044350",
    "end": "2050540"
  },
  {
    "text": "I don't remember exactly the details, but\nthere was a certain feature, and you had suggested, oh, we'll wanna use streams here as well.",
    "start": "2050540",
    "end": "2056408"
  },
  {
    "text": "Maybe something to do with updating a group\nof products in our, sort of, product catalog",
    "start": "2056409",
    "end": "2063260"
  },
  {
    "text": "at a time. And I said something like, oh, we won't wanna\nuse streams for that yet, because they don't",
    "start": "2063260",
    "end": "2068690"
  },
  {
    "text": "have a bulk update option, so it's kind of\nnot the right fit for that kind of interaction.",
    "start": "2068690",
    "end": "2075200"
  },
  {
    "text": "Now, of course, you can bulk update items\nin your LiveView stream, so, actually, that's,",
    "start": "2075200",
    "end": "2080560"
  },
  {
    "text": "like, a reminder to myself that we can update\nthe book in that section as well.",
    "start": "2080560",
    "end": "2086200"
  },
  {
    "text": "And so, I think the reason for that is the\nincredibly strong dialogue between the LiveView",
    "start": "2086200",
    "end": "2092598"
  },
  {
    "text": "team, Chris McCord, and the Elixir community. There are strong connections there. There are strong relationships there. The people building LiveView use LiveView.",
    "start": "2092599",
    "end": "2100250"
  },
  {
    "text": "The people building LiveView talk to and listen\nto the Elixir community, talk to and listen",
    "start": "2100250",
    "end": "2105910"
  },
  {
    "text": "to their users, and they know what the pain\npoints are. They know what the blockers are, and they're\nworking, like, frankly, tirelessly to address",
    "start": "2105910",
    "end": "2114700"
  },
  {
    "text": "all of them, and to make LiveView, I've said\nthis before, I'll say it again, not just a compelling web framework for folks that are\nin the Elixir community, who are already using",
    "start": "2114700",
    "end": "2122599"
  },
  {
    "text": "Phoenix. I think it's the most compelling web framework\nthat exists today. Steve Nunez: It's really exciting.",
    "start": "2122599",
    "end": "2128588"
  },
  {
    "text": "It does so many things right. I'll shout out one of my favorite features\nthat came out in this sort of, like, period.",
    "start": "2128589",
    "end": "2133870"
  },
  {
    "text": "Verified routes. Like, just the big, the focus on developer\nergonomics, where you don't have to say something.path,",
    "start": "2133870",
    "end": "2142300"
  },
  {
    "text": "and then pass in conn and a bunch of other\narguments. You just say the route, and the compiler will\ncheck it for you.",
    "start": "2142300",
    "end": "2147510"
  },
  {
    "text": "It's really beautiful, and again, really thoughtful,\nand just a sign of sort of what the development team behind this, their focus is.",
    "start": "2147510",
    "end": "2155890"
  },
  {
    "text": "It's on making it easier and better to work\nin this framework and this ecosystem. Funny story.",
    "start": "2155890",
    "end": "2161550"
  },
  {
    "text": "I was working with a professional class in\n\"Programming LiveView,\" which is one of the",
    "start": "2161550",
    "end": "2166740"
  },
  {
    "text": "Groxio classes that we do. And one of the users took a look at some code,\nand I said, can you change that ID to a product?",
    "start": "2166740",
    "end": "2174770"
  },
  {
    "text": "And they said, \"No. You can't. This is a verified route now.\" And I said, \"Well, try it.\"",
    "start": "2174770",
    "end": "2180619"
  },
  {
    "text": "And he dropped it in there, and this is, like,\na seven-year expert Elixir developer, and",
    "start": "2180619",
    "end": "2188029"
  },
  {
    "text": "he said, \"How did they do that?\" And then we kind of dove into the protocol,\nand looked at how that happened, to trace",
    "start": "2188030",
    "end": "2196450"
  },
  {
    "text": "it from the sigil forward, is a cool use of\ntechnology, and a dramatic simplification",
    "start": "2196450",
    "end": "2203760"
  },
  {
    "text": "that makes everybody's life better, every\nday, in LiveView. I couldn't agree more.",
    "start": "2203760",
    "end": "2209700"
  },
  {
    "text": "Like, working with this is just, it's delightful. It feels really good. Everything from putting the markup on the\npage, to testing the story, is just great.",
    "start": "2209700",
    "end": "2216869"
  },
  {
    "text": "I wanna talk a little bit about the app that\nyou built in the book. So, you did not write a chat application,\nso thank you for that, for not writing another",
    "start": "2216869",
    "end": "2224029"
  },
  {
    "start": "2217000",
    "end": "2335000"
  },
  {
    "text": "chat application with Phoenix and LiveView,\nand all the things. I've got all the chat applications I can use,\nor I could need.",
    "start": "2224030",
    "end": "2232220"
  },
  {
    "text": "You guys went with a game, which I found interesting. Can you talk a little bit about why you went\nwith a game to kind of show off LiveView and",
    "start": "2232220",
    "end": "2240069"
  },
  {
    "text": "some of the additional features that being\non the BEAM and using OTP offers?",
    "start": "2240069",
    "end": "2246880"
  },
  {
    "text": "A couple of points here. There's the game and the dashboard, and Sophie\npushed hard on making a live interactive dashboard,",
    "start": "2246880",
    "end": "2253880"
  },
  {
    "text": "with professional features. And that was wonderful and beautifully executed. I also, pushed hard on the game aspect, because\nI think that one of the things that you need",
    "start": "2253880",
    "end": "2264069"
  },
  {
    "text": "to be able to see in LiveView is Elixir is\nreduce. And how easy is it to see it when you press\nthe right key, and then the box moves one",
    "start": "2264069",
    "end": "2275328"
  },
  {
    "text": "square to the right? It's just, it becomes easy to see, and transformative,\nwhen people can see the way that components",
    "start": "2275329",
    "end": "2283530"
  },
  {
    "text": "are layered to that, the way the attributes\nkind of get checked and passed on down, and",
    "start": "2283530",
    "end": "2288619"
  },
  {
    "text": "the way that we could kind of group and manage\ncomplex ideas through one giant reduce cycle.",
    "start": "2288619",
    "end": "2295900"
  },
  {
    "text": "I love that the application sort of lets you\ndive into some of the, I guess, more, not advanced features, but lets you dive deep\non things like pub-sub, and presence, rendering",
    "start": "2295900",
    "end": "2305160"
  },
  {
    "text": "graphics. It's a good problem domain, and it's not just\na matter of implementing game logic and rendering",
    "start": "2305160",
    "end": "2312000"
  },
  {
    "text": "it. You get to use an application like you actually\nwould build one in production. So, I think it's cool.",
    "start": "2312000",
    "end": "2319080"
  },
  {
    "text": "LiveView works on rendered text. And that rendered text isn't limited to just\nHTML.",
    "start": "2319080",
    "end": "2324700"
  },
  {
    "text": "It handles SVG, beautifully, and we're starting\nto see more of that now, but I believe that",
    "start": "2324700",
    "end": "2331828"
  },
  {
    "text": "the book has a particularly good treatment\nof that. Great. Well, I have one last question for you guys,\nand you can keep it short if you'd like.",
    "start": "2331829",
    "end": "2338799"
  },
  {
    "start": "2335000",
    "end": "2473000"
  },
  {
    "text": "You spent all this time investing in writing\nand rewriting this book over at least a year,",
    "start": "2338800",
    "end": "2345930"
  },
  {
    "text": "again, on a boat, three months, Sophie? Three years.",
    "start": "2345930",
    "end": "2351359"
  },
  {
    "text": "Easily, yeah. Three years. Three years. What do you want folks to get out of this\nbook, spending the time with this book?",
    "start": "2351360",
    "end": "2358440"
  },
  {
    "text": "Again, it's a beast. At the current beta, it's about 400 pages. I'll start with Sophie DeBenedetto.",
    "start": "2358440",
    "end": "2363599"
  },
  {
    "text": "What do you want folks to get out of this\nbook? That's a really good question. Is it weird to say that I haven't thought\nabout it, like, that before?",
    "start": "2363599",
    "end": "2370250"
  },
  {
    "text": "I've more just been thinking about what I\noffer to people, not so much what I want them",
    "start": "2370250",
    "end": "2375720"
  },
  {
    "text": "to get out of it. But I think that what I want them to get out\nof it is an understanding of what OTP and",
    "start": "2375720",
    "end": "2386650"
  },
  {
    "text": "what a functional paradigm brings to web development,\nand the way that it empowers you as a developer,",
    "start": "2386650",
    "end": "2392470"
  },
  {
    "text": "and empowers your team, to be productive,\nto build apps that elegantly meet the needs",
    "start": "2392470",
    "end": "2398080"
  },
  {
    "text": "of, I'll say, modern web users that require\nand expect a lot of interaction and, kind of, real-time functionality today.",
    "start": "2398080",
    "end": "2406690"
  },
  {
    "text": "We're offering you all the things in this\nbook. We're offering you how to build a LiveView\napplication. We're offering you a look under the hood,\na lot of the time, about how it works so that",
    "start": "2406690",
    "end": "2414890"
  },
  {
    "text": "you can understand what's going on. But what I want you to get out of it is this\ndeeper understanding of what functional development",
    "start": "2414890",
    "end": "2421828"
  },
  {
    "text": "and what OTP gives you as a web developer. How about you, Bruce? I would say two things.",
    "start": "2421829",
    "end": "2427088"
  },
  {
    "text": "I would say that the first thing is that beautiful\napplications first have to depend on beautiful",
    "start": "2427089",
    "end": "2434079"
  },
  {
    "text": "technology with beautiful abstractions. But second, they depend more on beautiful\ndesign than any punch list of features.",
    "start": "2434079",
    "end": "2443540"
  },
  {
    "text": "I think that that's super important. The second thing is that I believe that every\ngood course, every good book, and every good",
    "start": "2443540",
    "end": "2453780"
  },
  {
    "text": "conference talk that I've ever done has talked\nabout design and abstractions because those",
    "start": "2453780",
    "end": "2458980"
  },
  {
    "text": "are the hard things to read from the pages\nof internet documentation.",
    "start": "2458980",
    "end": "2464020"
  },
  {
    "text": "I think that when I can communicate those\nthings well, I'm happy with the product.",
    "start": "2464020",
    "end": "2469980"
  },
  {
    "text": "And this book certainly qualifies in that\narea. Awesome. This book will help you fall in love with\nLiveView.",
    "start": "2469980",
    "end": "2476550"
  },
  {
    "start": "2473000",
    "end": "2569000"
  },
  {
    "text": "If this was interesting at all, pick up the\nbook, for sure. Give it a read. It covers the base technology and shows you\nwhat amazing things you can do with it, so",
    "start": "2476550",
    "end": "2486088"
  },
  {
    "text": "please pick this book up. If people wanna hear more about you guys,\nwhere can they find you on the internet?",
    "start": "2486089",
    "end": "2492620"
  },
  {
    "text": "Bruce? I'm on LinkedIn. But I'm also on Twitter, I guess, the application\npreviously known as Twitter.",
    "start": "2492620",
    "end": "2500870"
  },
  {
    "text": "I'm @redrapids there. Awesome. How about you, Sophie? I think Twitter's probably the best way.",
    "start": "2500870",
    "end": "2506819"
  },
  {
    "text": "My Twitter handle is @sm_debenedetto, my last\nname.",
    "start": "2506820",
    "end": "2512950"
  },
  {
    "text": "And another shout-out, if you're interested\nin writing something for PragProg about Elixir,",
    "start": "2512950",
    "end": "2518540"
  },
  {
    "text": "I wanna hear about it. Awesome. Well, thanks everyone for tuning in.",
    "start": "2518540",
    "end": "2525099"
  },
  {
    "text": "We've got a lot of this.",
    "start": "2525099",
    "end": "2534089"
  },
  {
    "text": "Pick up this book. It's great. Thanks, Bruce, and thanks Sophie, for spending\nsome time chatting with us about all things",
    "start": "2534089",
    "end": "2543910"
  },
  {
    "text": "LiveView. Thank you, Steven. Thank you. My pleasure. Any time I get to hang out with my friends,\nit's a good day, you know?",
    "start": "2543910",
    "end": "2566328"
  },
  {
    "text": "Yes.",
    "start": "2566329",
    "end": "2566499"
  }
]