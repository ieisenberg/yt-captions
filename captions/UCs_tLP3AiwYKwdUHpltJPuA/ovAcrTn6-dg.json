[
  {
    "text": "hi everyone I'm Thomas vital I'm a",
    "start": "2040",
    "end": "4040"
  },
  {
    "text": "software engineer at systematic really",
    "start": "4040",
    "end": "6359"
  },
  {
    "text": "passionate about anything Java spring",
    "start": "6359",
    "end": "8280"
  },
  {
    "text": "and clown native I also wrote a book",
    "start": "8280",
    "end": "10120"
  },
  {
    "text": "it's called clown native spring in",
    "start": "10120",
    "end": "11599"
  },
  {
    "text": "action with Springwood and kubernetes",
    "start": "11599",
    "end": "14040"
  },
  {
    "text": "Springwood is really an exciting",
    "start": "14040",
    "end": "15879"
  },
  {
    "text": "framework to work with and with the",
    "start": "15879",
    "end": "17600"
  },
  {
    "text": "latest release spring booo 3.1 we got",
    "start": "17600",
    "end": "19800"
  },
  {
    "text": "even more uh and better features to make",
    "start": "19800",
    "end": "22400"
  },
  {
    "text": "developers more productive and to get to",
    "start": "22400",
    "end": "24439"
  },
  {
    "text": "production faster uh in springb 3 we get",
    "start": "24439",
    "end": "27199"
  },
  {
    "text": "native support for GR VM so we can build",
    "start": "27199",
    "end": "29599"
  },
  {
    "text": "native executables and Achieve Java",
    "start": "29599",
    "end": "32040"
  },
  {
    "text": "applications with instant startup time",
    "start": "32040",
    "end": "34600"
  },
  {
    "text": "instant Peak Performance and reduced uh",
    "start": "34600",
    "end": "37079"
  },
  {
    "text": "resource usage which is really great",
    "start": "37079",
    "end": "39280"
  },
  {
    "text": "especially in a cloud environment where",
    "start": "39280",
    "end": "40640"
  },
  {
    "text": "we can consume less resources and start",
    "start": "40640",
    "end": "43079"
  },
  {
    "text": "our application faster uh in springboard",
    "start": "43079",
    "end": "45879"
  },
  {
    "text": "we also have a baseline on Java 17 and",
    "start": "45879",
    "end": "48760"
  },
  {
    "text": "get all the latest and greatest features",
    "start": "48760",
    "end": "50840"
  },
  {
    "text": "that we have in Java not only in terms",
    "start": "50840",
    "end": "53719"
  },
  {
    "text": "of functionality but also in terms of",
    "start": "53719",
    "end": "55480"
  },
  {
    "text": "performance and security for example uh",
    "start": "55480",
    "end": "58680"
  },
  {
    "text": "we can use records we can use text",
    "start": "58680",
    "end": "60800"
  },
  {
    "text": "blocks and in the upcoming Java 21",
    "start": "60800",
    "end": "63800"
  },
  {
    "text": "version we even have virtual threads so",
    "start": "63800",
    "end": "66240"
  },
  {
    "text": "in the uh next iteration of uh the",
    "start": "66240",
    "end": "68799"
  },
  {
    "text": "spring releases uh spring framework 6.1",
    "start": "68799",
    "end": "71520"
  },
  {
    "text": "we're actually going to have support for",
    "start": "71520",
    "end": "73280"
  },
  {
    "text": "virtual threats and I'm really looking",
    "start": "73280",
    "end": "75320"
  },
  {
    "text": "forward to",
    "start": "75320",
    "end": "76360"
  },
  {
    "text": "that a a great uh introduction or a",
    "start": "76360",
    "end": "79920"
  },
  {
    "text": "great new feature in spring boo 3.1 uh",
    "start": "79920",
    "end": "83079"
  },
  {
    "text": "was related to how we work with",
    "start": "83079",
    "end": "84759"
  },
  {
    "text": "development services so we are building",
    "start": "84759",
    "end": "86960"
  },
  {
    "text": "applications locally we want to interact",
    "start": "86960",
    "end": "88840"
  },
  {
    "text": "with the database with a message cue uh",
    "start": "88840",
    "end": "92159"
  },
  {
    "text": "usually we use uh containers in order to",
    "start": "92159",
    "end": "94280"
  },
  {
    "text": "run those Services maybe we Define them",
    "start": "94280",
    "end": "96600"
  },
  {
    "text": "in a doger compost file and then every",
    "start": "96600",
    "end": "98360"
  },
  {
    "text": "time we want to work with the",
    "start": "98360",
    "end": "99399"
  },
  {
    "text": "application we have to operate this",
    "start": "99399",
    "end": "100880"
  },
  {
    "text": "doger compost file explicitly but now",
    "start": "100880",
    "end": "103560"
  },
  {
    "text": "with spring boot 3.1 we have two new",
    "start": "103560",
    "end": "105759"
  },
  {
    "text": "features in order for the application to",
    "start": "105759",
    "end": "108159"
  },
  {
    "text": "automatically find your doger compost",
    "start": "108159",
    "end": "109920"
  },
  {
    "text": "file and start your development service",
    "start": "109920",
    "end": "112240"
  },
  {
    "text": "and even better we can use test",
    "start": "112240",
    "end": "113640"
  },
  {
    "text": "containers test containers is an amazing",
    "start": "113640",
    "end": "115960"
  },
  {
    "text": "Library it's uh we can use it not only",
    "start": "115960",
    "end": "118640"
  },
  {
    "text": "for testing our Integrations with",
    "start": "118640",
    "end": "120719"
  },
  {
    "text": "external services in our spring",
    "start": "120719",
    "end": "122520"
  },
  {
    "text": "applications but we can also use it at",
    "start": "122520",
    "end": "124759"
  },
  {
    "text": "development time so using the same test",
    "start": "124759",
    "end": "126880"
  },
  {
    "text": "containers configuration we can get a",
    "start": "126880",
    "end": "129520"
  },
  {
    "text": "postgressql automatically started both",
    "start": "129520",
    "end": "132480"
  },
  {
    "text": "uh when testing but also at development",
    "start": "132480",
    "end": "134800"
  },
  {
    "text": "time so from a developer productivity",
    "start": "134800",
    "end": "137360"
  },
  {
    "text": "point of view that's",
    "start": "137360",
    "end": "139560"
  },
  {
    "text": "incredible another uh news in uh spring",
    "start": "139560",
    "end": "142840"
  },
  {
    "text": "Booth 3 is that now we are using Jakarta",
    "start": "142840",
    "end": "145680"
  },
  {
    "text": "E10 so if we are migrating from older",
    "start": "145680",
    "end": "148560"
  },
  {
    "text": "versions uh we need to be aware of that",
    "start": "148560",
    "end": "151640"
  },
  {
    "text": "because we are moving from java e to the",
    "start": "151640",
    "end": "155120"
  },
  {
    "text": "successor is called Jakarta e and in",
    "start": "155120",
    "end": "157239"
  },
  {
    "text": "particular we have changes in the",
    "start": "157239",
    "end": "158760"
  },
  {
    "text": "package names from java X to Jakarta but",
    "start": "158760",
    "end": "162200"
  },
  {
    "text": "there are tools that can help us",
    "start": "162200",
    "end": "163680"
  },
  {
    "text": "migrating and upgrading our applications",
    "start": "163680",
    "end": "165599"
  },
  {
    "text": "for example open rewrite is really great",
    "start": "165599",
    "end": "167800"
  },
  {
    "text": "not only to help us upgrade to a new",
    "start": "167800",
    "end": "170400"
  },
  {
    "text": "version of spring boot but in general to",
    "start": "170400",
    "end": "172560"
  },
  {
    "text": "perform upgrades for example from junit",
    "start": "172560",
    "end": "174760"
  },
  {
    "text": "4 to junit 5 and finally a great uh",
    "start": "174760",
    "end": "179360"
  },
  {
    "text": "feature that we have now in Spring Booth",
    "start": "179360",
    "end": "181519"
  },
  {
    "text": "3 is that uh a new focus a new attention",
    "start": "181519",
    "end": "184319"
  },
  {
    "text": "on observability with the spring",
    "start": "184319",
    "end": "186200"
  },
  {
    "text": "observability initiative we gain even",
    "start": "186200",
    "end": "188959"
  },
  {
    "text": "more uh out of the box across the entire",
    "start": "188959",
    "end": "191599"
  },
  {
    "text": "spring portfolio in terms of metrics and",
    "start": "191599",
    "end": "193920"
  },
  {
    "text": "traces in fact now spring boot relies on",
    "start": "193920",
    "end": "197519"
  },
  {
    "text": "an improved and extended version of",
    "start": "197519",
    "end": "199120"
  },
  {
    "text": "micrometer that unifies Magics and",
    "start": "199120",
    "end": "201560"
  },
  {
    "text": "traces into a single API called",
    "start": "201560",
    "end": "203879"
  },
  {
    "text": "Observation API so now all uh projects",
    "start": "203879",
    "end": "207519"
  },
  {
    "text": "within the spring portfolio implement",
    "start": "207519",
    "end": "209760"
  },
  {
    "text": "that API in order to instrument the code",
    "start": "209760",
    "end": "211720"
  },
  {
    "text": "so once we add these libraries to our",
    "start": "211720",
    "end": "214239"
  },
  {
    "text": "application we get out of the box a lot",
    "start": "214239",
    "end": "216200"
  },
  {
    "text": "of metrics and traces for all our",
    "start": "216200",
    "end": "219280"
  },
  {
    "text": "different projects for uh HTTP request",
    "start": "219280",
    "end": "221680"
  },
  {
    "text": "for database connections and that's",
    "start": "221680",
    "end": "223360"
  },
  {
    "text": "really important because when we go to",
    "start": "223360",
    "end": "224720"
  },
  {
    "text": "production we really need to know uh",
    "start": "224720",
    "end": "226799"
  },
  {
    "text": "what is going on how uh traffic is",
    "start": "226799",
    "end": "229000"
  },
  {
    "text": "flowing through our system uh where it's",
    "start": "229000",
    "end": "231599"
  },
  {
    "text": "coming from and more information about",
    "start": "231599",
    "end": "233879"
  },
  {
    "text": "the request for example to troubleshoot",
    "start": "233879",
    "end": "235680"
  },
  {
    "text": "performance issues or to understand why",
    "start": "235680",
    "end": "239120"
  },
  {
    "text": "uh certain things are happening uh for",
    "start": "239120",
    "end": "241640"
  },
  {
    "text": "example after receiving an incident",
    "start": "241640",
    "end": "243480"
  },
  {
    "text": "report from a customer and that's spring",
    "start": "243480",
    "end": "246920"
  },
  {
    "text": "Booth 3 that's a lot of new things",
    "start": "246920",
    "end": "249120"
  },
  {
    "text": "there's a lot of new functionality",
    "start": "249120",
    "end": "251680"
  },
  {
    "text": "performance boost security improvements",
    "start": "251680",
    "end": "253879"
  },
  {
    "text": "because now we can use newer Java",
    "start": "253879",
    "end": "256320"
  },
  {
    "text": "versions so if you want to learn more",
    "start": "256320",
    "end": "258440"
  },
  {
    "text": "about it uh don't miss out on my",
    "start": "258440",
    "end": "261079"
  },
  {
    "text": "presentation where I also demonstrate uh",
    "start": "261079",
    "end": "263800"
  },
  {
    "text": "live all these different features and",
    "start": "263800",
    "end": "265880"
  },
  {
    "text": "how they work in",
    "start": "265880",
    "end": "268520"
  },
  {
    "text": "practice",
    "start": "268520",
    "end": "271520"
  }
]