[
  {
    "start": "0",
    "end": "135000"
  },
  {
    "text": "[Music]",
    "start": "5870",
    "end": "10049"
  },
  {
    "text": "I'm Jonas boner I'm the CTO of typ safe uh been involved in the open source",
    "start": "11160",
    "end": "16600"
  },
  {
    "text": "Community for quite some time and uh I'm here to talk about resilience so let's",
    "start": "16600",
    "end": "22600"
  },
  {
    "text": "get right to it we have a lot of ground to cover so uh",
    "start": "22600",
    "end": "30800"
  },
  {
    "text": "how how many of you would like to go to production this should be",
    "start": "30800",
    "end": "36000"
  },
  {
    "text": "sound anyway I just turn this up then how many of you would like to go to",
    "start": "36000",
    "end": "41600"
  },
  {
    "text": "production with an application that is beautiful responsive scalable highly concurrent resource",
    "start": "41600",
    "end": "48120"
  },
  {
    "text": "efficient uh Loosely coupled well y y y well we all do right guess",
    "start": "48120",
    "end": "54960"
  },
  {
    "text": "what none of that matters unless your application is actually up if it's actually available so I mean really with",
    "start": "54960",
    "end": "62800"
  },
  {
    "text": "without re without resilience Nothing Else Matters really that's it starts and",
    "start": "62800",
    "end": "68840"
  },
  {
    "text": "ends with resilience so most of you probably recognize this song I at least some of",
    "start": "68840",
    "end": "75119"
  },
  {
    "text": "you I hope I mean it's from one of my oldtime favorite movies from since I was a kid uh Rocky the first movie and this",
    "start": "75119",
    "end": "82640"
  },
  {
    "text": "is like it's it's it's a theme it's it's a the the theme song and it's I if you",
    "start": "82640",
    "end": "87759"
  },
  {
    "text": "don't know Ro the Rocky movies it's it's about these under dog media calls him the Italian Stallion and he's he's he",
    "start": "87759",
    "end": "95280"
  },
  {
    "text": "gets a shot at at at a title at the title and and some of you might remember",
    "start": "95280",
    "end": "100920"
  },
  {
    "text": "this quote it's it's one of the most memorable ones but it ain't how hard you get hit but it's how hard you can get",
    "start": "100920",
    "end": "106880"
  },
  {
    "text": "hit and keep moving forward how much you can take and keep moving forward that's",
    "start": "106880",
    "end": "112079"
  },
  {
    "text": "how winning is done this is Fault tolerance right you get hit you",
    "start": "112079",
    "end": "119119"
  },
  {
    "text": "hopefully survive you limp along for a while and hopefully eventually you will win well often you don't like Rocky",
    "start": "119119",
    "end": "125840"
  },
  {
    "text": "actually did didn't didn't do in this in this movie The problem is that fall tolerance in my opinion is not a",
    "start": "125840",
    "end": "131200"
  },
  {
    "text": "sustainable strategy still we talk a lot about it actually what we need and what I'm",
    "start": "131200",
    "end": "137440"
  },
  {
    "start": "135000",
    "end": "298000"
  },
  {
    "text": "going to talk about in this talk is resilience and resilience is beyond fall tolerance so we're going to cover what",
    "start": "137440",
    "end": "145280"
  },
  {
    "text": "what resilience is why it's needed how how other Industries and like and Sciences are more Sciences probably",
    "start": "145280",
    "end": "152720"
  },
  {
    "text": "Industries are are dealing with it and what we can learn from that and apply that in a in in the context of software",
    "start": "152720",
    "end": "160400"
  },
  {
    "text": "development so that's sort of the story for today so what what is resilience",
    "start": "160400",
    "end": "165879"
  },
  {
    "text": "according to Marian Webster it's the ability of a substance or object to spring back into shape the capacity to",
    "start": "165879",
    "end": "173920"
  },
  {
    "text": "recover quickly from difficulties it's not just to limp along like Rocky right",
    "start": "173920",
    "end": "179319"
  },
  {
    "text": "and and so is actually to be able to fully restore original fun fun functionality and and in like in in",
    "start": "179319",
    "end": "186799"
  },
  {
    "text": "order to take yet another beating and yet another beating right not just to survive some",
    "start": "186799",
    "end": "193239"
  },
  {
    "text": "of you have might might have heard about antia fra fragility it's it was",
    "start": "193239",
    "end": "198640"
  },
  {
    "text": "popularized by this the writer in nasm Nicholas talb or taleb and U it's it's it's defined as",
    "start": "198640",
    "end": "206879"
  },
  {
    "text": "anti an anti fragility is beyond resilience and robustness the resilient",
    "start": "206879",
    "end": "212480"
  },
  {
    "text": "resists shocks and stays the same while antifragile gets better uh it really defines systems that",
    "start": "212480",
    "end": "220439"
  },
  {
    "text": "increase the resilience or the or or or the capacity to to to deal with failure",
    "start": "220439",
    "end": "226200"
  },
  {
    "text": "when it's getting hit it gets harder and harder just like like human bones you know they get harder and harder and",
    "start": "226200",
    "end": "232439"
  },
  {
    "text": "harder and can take more and more hit right uh but I really believe that we",
    "start": "232439",
    "end": "237560"
  },
  {
    "text": "have a long way to go in computer science and I mean this all these into like adaptive system systems that introspect themselves and so on and",
    "start": "237560",
    "end": "243799"
  },
  {
    "text": "we're not we're not really there yet so I'm going to focus on resilience in this talk even though I find this concept are",
    "start": "243799",
    "end": "249519"
  },
  {
    "text": "extremely interesting and exciting and intriguing hopefully we will get here as an industry but we we're we we are a",
    "start": "249519",
    "end": "256440"
  },
  {
    "text": "very young industry compared to a lot of other Sciences so we need to have a",
    "start": "256440",
    "end": "261919"
  },
  {
    "text": "little bit patience right uh Sydney Decker said that we can",
    "start": "261919",
    "end": "267520"
  },
  {
    "text": "model and understand in isolation but when released into competitive nominally regulated societies their connections",
    "start": "267520",
    "end": "274080"
  },
  {
    "text": "proliferate their interactions and in interdependencies multiply and their complexity is mushroom and we are caught",
    "start": "274080",
    "end": "281759"
  },
  {
    "text": "short this is from s syid deer's great book drift into failure it's a really good read is not tied to computer",
    "start": "281759",
    "end": "288600"
  },
  {
    "text": "science at all but there's a lot to learn here but the essence of this quote the the way the the way I read in it",
    "start": "288600",
    "end": "294479"
  },
  {
    "text": "like modeling the world is extremely hard and and and and and syst and and",
    "start": "294479",
    "end": "300960"
  },
  {
    "start": "298000",
    "end": "379000"
  },
  {
    "text": "software systems at least most of the ones we write and see out here are incredibly",
    "start": "300960",
    "end": "306800"
  },
  {
    "text": "complex and I think to to really understand resilience in in computer systems we need to understand what it",
    "start": "306800",
    "end": "313000"
  },
  {
    "text": "means to to to build res to to create resilient complex system but what is",
    "start": "313000",
    "end": "319319"
  },
  {
    "text": "complex in and and how is it different from complicated this is a complicated system complicated systems are usually",
    "start": "319319",
    "end": "326120"
  },
  {
    "text": "have many different parts I mean they actually all different and each one has",
    "start": "326120",
    "end": "331199"
  },
  {
    "text": "a precise role in the Machinery somehow and it's possible usually very hard but",
    "start": "331199",
    "end": "336440"
  },
  {
    "text": "it's actually possible to fully comprehend a comp a complicated system a a complex system though instead",
    "start": "336440",
    "end": "344759"
  },
  {
    "text": "is is sorry it's made of many similar interacting parts where you have simple",
    "start": "344759",
    "end": "350520"
  },
  {
    "text": "individual rules that sort of leads to emerging properties and it's it's the interactions that actually produces a",
    "start": "350520",
    "end": "357880"
  },
  {
    "text": "globally coherent and interesting Behavior behavior and it's it's by definition impossible to understand this is Game of Life you know it's extremely",
    "start": "357880",
    "end": "364720"
  },
  {
    "text": "simple rules but anyone can a kid can understand them well but once you start putting them together they can create an",
    "start": "364720",
    "end": "371479"
  },
  {
    "text": "Inc incredibly complex Behavior that's impossible to understand and even more impossible to",
    "start": "371479",
    "end": "377720"
  },
  {
    "text": "predict okay and and so complicated is not the",
    "start": "377720",
    "end": "382759"
  },
  {
    "text": "same thing as is complex that's very important to understand and and Don eletto I don't",
    "start": "382759",
    "end": "389720"
  },
  {
    "text": "know if you know she's written a lot of good she's she she's written a lot of good books about and done a lot of",
    "start": "389720",
    "end": "396560"
  },
  {
    "text": "research on on on thinking in systems and system thinking she she she wrote about points for human intervention in",
    "start": "396560",
    "end": "403759"
  },
  {
    "text": "complex systems I mean we humans actually go in and try to turn the knobs and and she writes and I quote",
    "start": "403759",
    "end": "411160"
  },
  {
    "text": "counterintuitive that's J forester's word to describe complex systems leverage points are not intuitive or if",
    "start": "411160",
    "end": "418240"
  },
  {
    "text": "they are we as humans and intuitively use them backwards systematically worsening whatever problems we are",
    "start": "418240",
    "end": "424840"
  },
  {
    "text": "trying to solve usually humans just makes it worse because we can't comprehend systems like this it's",
    "start": "424840",
    "end": "431520"
  },
  {
    "text": "impossible by definition impossible okay so instead we need good models to learn how to think and and and",
    "start": "431520",
    "end": "439840"
  },
  {
    "text": "understand failure in complex systems why it happens and what we can do about",
    "start": "439840",
    "end": "446240"
  },
  {
    "text": "it and and uh we really all always operate at the edge of failure this is actually the title of",
    "start": "446240",
    "end": "452960"
  },
  {
    "text": "a of a really good talk by Richard cook he wrote about in this paper as well I",
    "start": "452960",
    "end": "458840"
  },
  {
    "text": "have all the but by the way everything I'm talking about here I'm referencing in the long list at the end if you're interested I'm going to share the slides",
    "start": "458840",
    "end": "464120"
  },
  {
    "text": "afterwards if you want to dive into this as well and this is a great talk and he Richard does a lot better job talking",
    "start": "464120",
    "end": "470639"
  },
  {
    "text": "about this than I than I'm doing but I'm going to I found this model of understanding why failure happens",
    "start": "470639",
    "end": "476440"
  },
  {
    "text": "extremely enlightening to me so I'm just going to share it with you okay Rich could by by by by the way he's",
    "start": "476440",
    "end": "483520"
  },
  {
    "text": "an he's an MD Doctor research and that' be studying resilience in in medical systems for for 20 years or",
    "start": "483520",
    "end": "491680"
  },
  {
    "text": "more so in in this model that is that is called rasmon came up with uh in 97 we",
    "start": "491680",
    "end": "498720"
  },
  {
    "text": "have three different boundaries first we have the economic failure failure boundary we as a businessman we need to stay within this boundary if if you if",
    "start": "498720",
    "end": "505039"
  },
  {
    "text": "you cross this boundary and go outside then you go out of business money Runs Out okay then we have the unacceptable",
    "start": "505039",
    "end": "511879"
  },
  {
    "text": "workload boundary this means that if if you cross this you can't produce any useful work you most likely fall asleep",
    "start": "511879",
    "end": "517800"
  },
  {
    "text": "or like you full exhausted burned out or and and and and and so on this actually happens you",
    "start": "517800",
    "end": "524039"
  },
  {
    "text": "know startup shipping 1.0 or like Battlefield situations or like C catastrophist or stuff like that and",
    "start": "524040",
    "end": "531040"
  },
  {
    "text": "then you have the accident boundary if you cross this boundary then then you fail for some definition of",
    "start": "531040",
    "end": "537839"
  },
  {
    "text": "failure uh can can be you know um no money is lost no no no out no outages if",
    "start": "537839",
    "end": "543600"
  },
  {
    "text": "it's medical system the patient doesn't die and things like that and then and then we have an operating point and this",
    "start": "543600",
    "end": "549600"
  },
  {
    "text": "operating Point moves Within These Within These boundaries it constantly is",
    "start": "549600",
    "end": "554720"
  },
  {
    "text": "moving because business changes right the the different pressure is changing and if we cross this boundary again we",
    "start": "554720",
    "end": "561839"
  },
  {
    "text": "get we have a failure okay so now what can we do with this yeah we have three different pressures and the the first",
    "start": "561839",
    "end": "567720"
  },
  {
    "text": "pressure is is like management is always you know trying to to minimize the risk of going out of business pushing for",
    "start": "567720",
    "end": "573800"
  },
  {
    "text": "more e e economic efficiency uh and then we have the gradient towards least effort I mean we",
    "start": "573800",
    "end": "580320"
  },
  {
    "text": "as humans we don't want to do more than absolutely necessary we want to go home to our families and and and and and and",
    "start": "580320",
    "end": "585640"
  },
  {
    "text": "and just get things done right and and and and not do more we're Lazy by by",
    "start": "585640",
    "end": "592480"
  },
  {
    "text": "definition and uh and then we have the so sorry so and these two then naturally",
    "start": "592480",
    "end": "598600"
  },
  {
    "text": "like tend to push the operating Point towards the accident boundary just naturally okay and and then when when we",
    "start": "598600",
    "end": "606480"
  },
  {
    "text": "cross this boundary and we have some sort of outage then everyone's panics right we say oh we we we we need blame",
    "start": "606480",
    "end": "614839"
  },
  {
    "text": "the software blame the architecture blame the processes so we start to mean change the BN of stuff you know CH I",
    "start": "614839",
    "end": "621040"
  },
  {
    "text": "don't know the the the the processes of the rules or something like that and and and that",
    "start": "621040",
    "end": "628040"
  },
  {
    "text": "pushes the operating Point like closer to the middle again but then you time",
    "start": "628040",
    "end": "633600"
  },
  {
    "text": "passes and we forget about it and and we and the operating Point starts to to to drift again towards the the the accident",
    "start": "633600",
    "end": "640760"
  },
  {
    "text": "boundary so history repeats itself and and and so you might wonder",
    "start": "640760",
    "end": "646959"
  },
  {
    "text": "then why don't we have S failures all the time you should expect this drifting and Crossing this operating as so the",
    "start": "646959",
    "end": "653120"
  },
  {
    "text": "accident boundary all the time is actually because we add as normally just intuitively what we call the marginal",
    "start": "653120",
    "end": "660120"
  },
  {
    "text": "boundary here so we have an error margin and and this margin is usually defined by some some sort of rules can",
    "start": "660120",
    "end": "666600"
  },
  {
    "text": "be speed Li on the road can be you know we don't we're not going to accept more users than this simultaneously we and and so",
    "start": "666600",
    "end": "675160"
  },
  {
    "text": "on and and and and uh you know and when we start moving close towards this this",
    "start": "675160",
    "end": "680959"
  },
  {
    "text": "virtual boundary then we realize okay we need to do something and and and this means that we are likely not to actually",
    "start": "680959",
    "end": "686880"
  },
  {
    "text": "cross the error margin uh so so then the question if we have",
    "start": "686880",
    "end": "692880"
  },
  {
    "text": "then if we have this marginal boundary this eror Marin how come we still have failures outages and things like",
    "start": "692880",
    "end": "701199"
  },
  {
    "text": "that it's actually because because uh we you know we know we usually know very we",
    "start": "701519",
    "end": "708240"
  },
  {
    "text": "know a lot about the marginal boundary because we have defined it that's tangible even though virtual is actually",
    "start": "708240",
    "end": "713279"
  },
  {
    "text": "tangible because we had defined you know the numbers and stuff that that that defines this but we knew very very",
    "start": "713279",
    "end": "719040"
  },
  {
    "text": "little about this accident boundary it's not until we actually cross it that we know oh here is where the accident",
    "start": "719040",
    "end": "725839"
  },
  {
    "text": "boundary is I didn't know that we we make a note of that but then that easily like Fades away and so on you know and",
    "start": "725839",
    "end": "732440"
  },
  {
    "text": "and and and and the economic so you know the push towards economic efficiency",
    "start": "732440",
    "end": "738399"
  },
  {
    "text": "means that we all we always like try to to you know try to cross this this boundry I mean Richard cook he he makes",
    "start": "738399",
    "end": "744920"
  },
  {
    "text": "a great example of you know a little little kid that you say um you're you're standing at the stove and you have a",
    "start": "744920",
    "end": "749959"
  },
  {
    "text": "three-year-old I say don't come close here and the kid you know he like you can't cross this you know you know that",
    "start": "749959",
    "end": "757000"
  },
  {
    "text": "line here and he like walks straight up to the line right there you know and then and when he don't look he like takes one step and then one step back",
    "start": "757000",
    "end": "763760"
  },
  {
    "text": "and then next time one step and one step back you know and like soon as you I mean within a few minutes he's standing",
    "start": "763760",
    "end": "769440"
  },
  {
    "text": "right next to you in the kitchen and and this is exactly how we how we do it right we try to to to cross the boundary",
    "start": "769440",
    "end": "777000"
  },
  {
    "text": "and then take a step back and try to cross the boundary and after a while we've been doing it so many times so so",
    "start": "777000",
    "end": "782800"
  },
  {
    "text": "it feels natural we've been doing it for two months now nothing happened and then we move the boundary you know so this is",
    "start": "782800",
    "end": "789880"
  },
  {
    "text": "called normalization of deviant Diane vaugh wrote about this in the Challenger uh launched decision uh sort of uh yeah",
    "start": "789880",
    "end": "800279"
  },
  {
    "text": "when when they when they sort of examined what what actually cost the them to to to to you know to push the",
    "start": "800279",
    "end": "806199"
  },
  {
    "text": "error margin so far that that the Challenger you know the rocket ship actually exploded it's also called",
    "start": "806199",
    "end": "812000"
  },
  {
    "text": "flirting with a with the margin and we get closer and closer and closer and after a while we've crossed the accident",
    "start": "812000",
    "end": "817760"
  },
  {
    "text": "boundary and we're back to zero and need to start over again okay and and I think since we're always operating at the edge",
    "start": "817760",
    "end": "824600"
  },
  {
    "start": "821000",
    "end": "839000"
  },
  {
    "text": "of failure we need to learn to fully Embrace failure I believe we need to design for failure from the start we",
    "start": "824600",
    "end": "831279"
  },
  {
    "text": "need to have a way of managing failure instead of trying to prevent it okay so let's let's let's look at how some other",
    "start": "831279",
    "end": "837680"
  },
  {
    "text": "Sciences manage failure here so starting with resilience in in in Social systems",
    "start": "837680",
    "end": "844680"
  },
  {
    "start": "839000",
    "end": "1071000"
  },
  {
    "text": "a friend a friend of mine that that does research in social ecological",
    "start": "844680",
    "end": "851240"
  },
  {
    "text": "systems and Energy Efficiency and and stuff like that s sent sent me this this great paper it's it's it's a very",
    "start": "851240",
    "end": "858160"
  },
  {
    "text": "interesting one in my in my in my opinion it's called dealing insecurity understanding vital services and how",
    "start": "858160",
    "end": "864800"
  },
  {
    "text": "they keep us safe and it defines you know you have we as individ uals we have",
    "start": "864800",
    "end": "870639"
  },
  {
    "text": "six ways to die three sets of essential services and SE and seven layers or",
    "start": "870639",
    "end": "876199"
  },
  {
    "text": "layers of protection and the six ways to die is that we can die from being too hot too cold hunger thirst illness or",
    "start": "876199",
    "end": "883560"
  },
  {
    "text": "injury and then we have three a core set of services essential services around us as humans to help us prevent from dying",
    "start": "883560",
    "end": "891800"
  },
  {
    "text": "and that is shelter shelter can pretend can can help us against being too hot and too cold we have Supply",
    "start": "891800",
    "end": "899639"
  },
  {
    "text": "you can see here are the different ones like the slices of the pie by the way sorry are are the are the sort of the",
    "start": "899639",
    "end": "907240"
  },
  {
    "text": "the waste you can die and then we have as I say Supply is against H H hunger",
    "start": "907240",
    "end": "912920"
  },
  {
    "text": "and thirst and safety prevents us from illness and injury and and these services are then laid out across in",
    "start": "912920",
    "end": "920240"
  },
  {
    "text": "different layers to prevent us from dying so we have seven layers of infrastructure",
    "start": "920240",
    "end": "925600"
  },
  {
    "text": "there might be more right but but this paper defines seven layers of in of infrastructure that prevents us from",
    "start": "925600",
    "end": "931839"
  },
  {
    "text": "dying so going from from the top we we have the world for example can be that's like can be like markets like food",
    "start": "931839",
    "end": "937560"
  },
  {
    "text": "markets energy markets fuel markets and so on in where the country they can be like the police no the military I mean",
    "start": "937560",
    "end": "944759"
  },
  {
    "text": "Regional can be the police um city we have hospitals and and and and water",
    "start": "944759",
    "end": "950759"
  },
  {
    "text": "plants and stuff like that the neighborhood we have like food shops we can go and buy stuff food you know our",
    "start": "950759",
    "end": "956120"
  },
  {
    "text": "home yeah we have our house we have heating ref refrigerator cooling all these things and and and then all the",
    "start": "956120",
    "end": "962120"
  },
  {
    "text": "way down to the individual so we are like protected by these layers of infrastructure that we don't even think",
    "start": "962120",
    "end": "968560"
  },
  {
    "text": "about to prevent us from from from from the worst outcome being dying and we I",
    "start": "968560",
    "end": "974560"
  },
  {
    "text": "think this model is very interesting I I'll come back to that later in this in this talk and and and we'll try to apply",
    "start": "974560",
    "end": "980720"
  },
  {
    "text": "it to to software engineering ret bigs defines seven principles for building",
    "start": "980720",
    "end": "986120"
  },
  {
    "text": "resilience in general in Social systems and the first one is maintain diversity and redundancy you know you know systems",
    "start": "986120",
    "end": "992920"
  },
  {
    "text": "with many components are usually a lot more resilient than systems with few components because because that if you",
    "start": "992920",
    "end": "998720"
  },
  {
    "text": "have many components that means that some components can compensate for the failure in in in in others it it gives",
    "start": "998720",
    "end": "1004920"
  },
  {
    "text": "you sort of an insurance policy like you know they saying don't put all the eggs in the same basket uh uh manage",
    "start": "1004920",
    "end": "1012040"
  },
  {
    "text": "connectivity is another one you know connectivity can be both good and bad it means like that you can actually recover",
    "start": "1012040",
    "end": "1018319"
  },
  {
    "text": "more more quickly and learn about failures because it also means that disturbances spread more rapidly in the",
    "start": "1018319",
    "end": "1023360"
  },
  {
    "text": "system so it's not it's not all good but it's a core trait for resilient so social systems and uh the other one is",
    "start": "1023360",
    "end": "1031120"
  },
  {
    "text": "is sort of manage slow variables and feedbacks the feedbacks can sort of both",
    "start": "1031120",
    "end": "1036720"
  },
  {
    "text": "help us you reinforce and happen so it's also important to know to know know what",
    "start": "1036720",
    "end": "1042240"
  },
  {
    "text": "to know what to deal with here in General Foster complex adaptive systems thinking this this the this system they",
    "start": "1042240",
    "end": "1048600"
  },
  {
    "text": "introspect and they adapt and learn as well as I said we're probably not there in in in general when it comes to to",
    "start": "1048600",
    "end": "1055799"
  },
  {
    "text": "software systems but I think uh hopefully we're getting there I'm doing a lot I've been doing a lot of reading",
    "start": "1055799",
    "end": "1062120"
  },
  {
    "text": "like to about you know classic control theory and stuff like that trying to apply that to to distributed systems uh",
    "start": "1062120",
    "end": "1069720"
  },
  {
    "text": "but we have as I said a lot of work to do without going through the rest I'm just going to dive into resilience in bi",
    "start": "1069720",
    "end": "1075159"
  },
  {
    "start": "1071000",
    "end": "1267000"
  },
  {
    "text": "in biological systems I I I I learned I I learned a really interesting story about miruts",
    "start": "1075159",
    "end": "1082640"
  },
  {
    "text": "when I was when I was did some research on this and I it it was from this from this Ted Talk by Nicholas Peroni on on",
    "start": "1082640",
    "end": "1089159"
  },
  {
    "text": "complexity Theory and it's it's a it's a it's a story about about miras you know I I I personally really love miras",
    "start": "1089159",
    "end": "1095880"
  },
  {
    "text": "they're I think they're really cute and funny and they they are ex I've actually got carried away a little bit and did a",
    "start": "1095880",
    "end": "1102159"
  },
  {
    "text": "lot of study on Mir and they they are extremely they they are extremely soci",
    "start": "1102159",
    "end": "1107400"
  },
  {
    "text": "social animals they have extremely complex behaviors and and and like and and and it's I won't go go off off off",
    "start": "1107400",
    "end": "1114120"
  },
  {
    "text": "too much of of of a tanion here but you know you know they have it's only the dominant couple in the in the in the in",
    "start": "1114120",
    "end": "1121440"
  },
  {
    "text": "in sort of in the colony in the family or the group that are allowed to have babies all the other ones are are",
    "start": "1121440",
    "end": "1127760"
  },
  {
    "text": "supposed to be servants and you know babysitters and and and uh I think",
    "start": "1127760",
    "end": "1132840"
  },
  {
    "text": "that's really that's one of the really interesting things and and in this experiment GPS like trackers were added",
    "start": "1132840",
    "end": "1138880"
  },
  {
    "text": "to to to everyone in the in in the mirat colony and they were observed going from one feeding place to to the next and it",
    "start": "1138880",
    "end": "1145200"
  },
  {
    "text": "was the dominant female that that that led the whole group to a road that they",
    "start": "1145200",
    "end": "1150600"
  },
  {
    "text": "had to cross to to get to the next feeding place but then when when she got to the road she stopped and she gave",
    "start": "1150600",
    "end": "1156440"
  },
  {
    "text": "like way for all the sub all the subordinates to to to cross the road and to like ensure that that was safe like",
    "start": "1156440",
    "end": "1163440"
  },
  {
    "text": "if they like didn't come back or like she could see them being hit by the road she knew okay I mean I probably",
    "start": "1163440",
    "end": "1169360"
  },
  {
    "text": "shouldn't cross this road uh uh uh so it was like a way of ensuring that she was safe uh by",
    "start": "1169360",
    "end": "1177080"
  },
  {
    "text": "delegating to others okay and and it's actually nature that has sort of evolved",
    "start": "1177080",
    "end": "1182919"
  },
  {
    "text": "this practice for thousands of years because the dominant female she's the only one that can have babies she's extremely important to the group so so",
    "start": "1182919",
    "end": "1189640"
  },
  {
    "text": "so these patterns have evolved like as a way of improving resilience and I think this is a very interesting behavior that",
    "start": "1189640",
    "end": "1195919"
  },
  {
    "text": "I will come back as well to when I talk about resilience in software systems so",
    "start": "1195919",
    "end": "1201799"
  },
  {
    "text": "what can we learn from resilience in biological systems the first top ones as actually I",
    "start": "1201799",
    "end": "1208880"
  },
  {
    "text": "mean I have to said I have all the quotes it's nothing just that I'm just making up uh the top one is yet again feature",
    "start": "1208880",
    "end": "1216400"
  },
  {
    "text": "diversity and redundancy and and then the second one having yet again it's yet",
    "start": "1216400",
    "end": "1222360"
  },
  {
    "text": "again like make sure that your system is really well connected in the sort of network structure where where you have",
    "start": "1222360",
    "end": "1228240"
  },
  {
    "text": "wide distribution across all scales and you have the capacity to self feel to adapt and self organize so very similar",
    "start": "1228240",
    "end": "1235720"
  },
  {
    "text": "to the to the to the top four of resilience in Social systems and Nicholas pron sum sums it up pretty",
    "start": "1235720",
    "end": "1242480"
  },
  {
    "text": "pretty well which says animals show extraordinary social complexity this allows them to adapt and respond to",
    "start": "1242480",
    "end": "1247720"
  },
  {
    "text": "changes in their environment in three words in the animal kingdom Simplicity leads to complexity that leads to",
    "start": "1247720",
    "end": "1254280"
  },
  {
    "text": "resilience and I think we have a lot to learn here when it comes to resilien in computer systems or or software systems",
    "start": "1254280",
    "end": "1260880"
  },
  {
    "text": "as well so I covered like I took up like half of the time up till now to see what",
    "start": "1260880",
    "end": "1267400"
  },
  {
    "start": "1267000",
    "end": "1369000"
  },
  {
    "text": "we can learn and I to try to apply some of these techniques now in ideas in into computer systems and see where we land",
    "start": "1267400",
    "end": "1275240"
  },
  {
    "text": "okay unfortunately we often react something like this you know first not at all and then with complete",
    "start": "1275240",
    "end": "1282520"
  },
  {
    "text": "panic and and and and uh this is actually the great paper that I really",
    "start": "1282520",
    "end": "1287600"
  },
  {
    "text": "encourage you Al to read how complex systems failed by Richard cook I think this is the probably the most important",
    "start": "1287600",
    "end": "1293400"
  },
  {
    "text": "wisdom in this talk if you remember one thing remember this that that complex systems always run in degraded mode",
    "start": "1293400",
    "end": "1300080"
  },
  {
    "text": "complex systems meaning almost any software systems almost any R always run as broken systems okay they are always",
    "start": "1300080",
    "end": "1308760"
  },
  {
    "text": "failing somewhere that's a fact we can't just we shouldn't even try to prevent that from",
    "start": "1308760",
    "end": "1315320"
  },
  {
    "text": "happening because it's a fact I believe in instead we should make sure that we build systems that are resilient by",
    "start": "1315320",
    "end": "1321559"
  },
  {
    "text": "Design so the the the most fundamental lesson that I learned on my journey towards building",
    "start": "1321559",
    "end": "1328360"
  },
  {
    "text": "resilience systems is is that resilience is nothing you can bolt on afterwards even though we've been historically",
    "start": "1328360",
    "end": "1334159"
  },
  {
    "text": "trying to do that for way too long sometimes buying expensive tools you know Turnal",
    "start": "1334159",
    "end": "1339440"
  },
  {
    "text": "clustering BL or whatever hope for the best you know it never ever works it",
    "start": "1339440",
    "end": "1344840"
  },
  {
    "text": "just cost you a bunch of money this is actually this this picture is is from a home in G Gil Christ Texas is is this",
    "start": "1344840",
    "end": "1352200"
  },
  {
    "text": "home was designed to to resist flood waters and it was one of the few houses that survived the Hurricane Ike in",
    "start": "1352200",
    "end": "1359320"
  },
  {
    "text": "2008 just because it was designed for resilience from ground up okay so now",
    "start": "1359320",
    "end": "1366279"
  },
  {
    "text": "let let let's let's look at some patterns and strategies for how to manage failure I really think that we fundamentally have to change the way we",
    "start": "1366279",
    "end": "1372400"
  },
  {
    "start": "1369000",
    "end": "1437000"
  },
  {
    "text": "think about failure failure failure is in is inevitable it's actually something natural you know failures are called",
    "start": "1372400",
    "end": "1378799"
  },
  {
    "text": "exceptions in Java and Scola and C++ it's a terrible name there's nothing",
    "start": "1378799",
    "end": "1383960"
  },
  {
    "text": "exceptional about failures something natural it will happen always happen in",
    "start": "1383960",
    "end": "1389880"
  },
  {
    "text": "in in the complex Software System some somewhere and since since it is completely natural we you just look at",
    "start": "1389880",
    "end": "1395679"
  },
  {
    "text": "this it's a natural state in the application's life cycle you start it up you stop it you might resume it you",
    "start": "1395679",
    "end": "1401799"
  },
  {
    "text": "upgrade it and and and it fails and if and if it's part of the regular life",
    "start": "1401799",
    "end": "1407360"
  },
  {
    "text": "cycle of the application when you end up in the failure state in your state machine there nothing to be ex upset",
    "start": "1407360",
    "end": "1414760"
  },
  {
    "text": "about you know exactly how to get there you actually expected that to happen Okay so we I think we need to start",
    "start": "1414760",
    "end": "1420840"
  },
  {
    "text": "designing for failure and fully embrace it and find a way to manage it Richard",
    "start": "1420840",
    "end": "1426640"
  },
  {
    "text": "cook also in this paper says that post accident attribution to a root cause is fundamentally wrong because avert",
    "start": "1426640",
    "end": "1432520"
  },
  {
    "text": "failure requires multiple faults there is no isolated cause of an accident what is saying that that is there's really no",
    "start": "1432520",
    "end": "1439120"
  },
  {
    "start": "1437000",
    "end": "1462000"
  },
  {
    "text": "root cause not in a complex system don't spend time looking for it you might find something I mean that comes up you might",
    "start": "1439120",
    "end": "1445360"
  },
  {
    "text": "find a credible story but it won't help you much I think you most often will be wrong and it often even misleading",
    "start": "1445360",
    "end": "1452840"
  },
  {
    "text": "actually instead I think you you should spend your time thinking about strategies how to manage failure instead",
    "start": "1452840",
    "end": "1459559"
  },
  {
    "text": "and get out of the failure State and learn from that one core philosophy is to embrace crash only software this is",
    "start": "1459559",
    "end": "1466360"
  },
  {
    "start": "1462000",
    "end": "1593000"
  },
  {
    "text": "the name of a paper by by Canda and fox and and it's it's a very simple model",
    "start": "1466360",
    "end": "1471919"
  },
  {
    "text": "where where you if you distill that down the paper to just one sentence is essentially that stop is Crash safely",
    "start": "1471919",
    "end": "1479080"
  },
  {
    "text": "just crash when you want to stop the application start is recover fast essentially and this can help us recover",
    "start": "1479080",
    "end": "1485240"
  },
  {
    "text": "from like deterministic bugs called caused by in inconsistent State and it's",
    "start": "1485240",
    "end": "1490360"
  },
  {
    "text": "really it's really like having a sledgehammer to to the problem I agree at least if you apply that to quar grain",
    "start": "1490360",
    "end": "1497240"
  },
  {
    "text": "level but it's a very useful one and and also I just want to since I'm on this paper now I just want to want to read",
    "start": "1497240",
    "end": "1503679"
  },
  {
    "text": "read up a quote that I think was was really important then we'll tie into protocols that I will talk about later",
    "start": "1503679",
    "end": "1509520"
  },
  {
    "text": "and I quote to make a system of interconnected components crash only it must be designed so the components can",
    "start": "1509520",
    "end": "1515200"
  },
  {
    "text": "tolerate the crashes and temporary unavailability of their peers this means that one we need strong",
    "start": "1515200",
    "end": "1521640"
  },
  {
    "text": "modularity with relatively impermeable component boundaries two we need timeout",
    "start": "1521640",
    "end": "1526840"
  },
  {
    "text": "based communication and Lease based resource allocation and three we need self-describing requests that carry time",
    "start": "1526840",
    "end": "1534360"
  },
  {
    "text": "to live and information whether they're item potent or not I really think this is something we should bring take with",
    "start": "1534360",
    "end": "1540480"
  },
  {
    "text": "us when we design protocols and and you you might have heard about this like let a crash idea",
    "start": "1540480",
    "end": "1546799"
  },
  {
    "text": "popularized by Joe Armstrong and erl langur it's really fully embracing the the crash only way approach to fail to",
    "start": "1546799",
    "end": "1553600"
  },
  {
    "text": "fail to failure management but these authors K FKS they didn't stop there they in in an upcome in in a follow-up",
    "start": "1553600",
    "end": "1560440"
  },
  {
    "text": "paper that called recursive restartability turning the crash on the sledgehammer into into into into scalpel",
    "start": "1560440",
    "end": "1567880"
  },
  {
    "text": "they argue for that you that you should apply this crash only pattern to any level of",
    "start": "1567880",
    "end": "1573799"
  },
  {
    "text": "granularity recursively if if needed and it's of it often if is needed and I I",
    "start": "1573799",
    "end": "1579720"
  },
  {
    "text": "really believe that this way of looking at it is is a is a very powerful model it allows us to to to write systems that",
    "start": "1579720",
    "end": "1586120"
  },
  {
    "text": "are gracefully tolerate starts at at any at any level usually from inwards and",
    "start": "1586120",
    "end": "1592720"
  },
  {
    "text": "up it's also a pattern that I will come back to later another great quote from",
    "start": "1592720",
    "end": "1598279"
  },
  {
    "start": "1593000",
    "end": "1641000"
  },
  {
    "text": "this paper recursive restartability paper is that software components should",
    "start": "1598279",
    "end": "1603360"
  },
  {
    "text": "be designed such they can deny service for any request or call then if",
    "start": "1603360",
    "end": "1608720"
  },
  {
    "text": "underlying components can say no then apps using that must be designed to take",
    "start": "1608720",
    "end": "1615320"
  },
  {
    "text": "no for an answer how to decide to proceeded give up weight retry reduce Fidelity Etc I think what they're saying",
    "start": "1615320",
    "end": "1622880"
  },
  {
    "text": "here is that Services they first they must be allowed to say no I can't keep up any longer and this also means",
    "start": "1622880",
    "end": "1630720"
  },
  {
    "text": "that that the components using that might might might might be might need need to be able to cope with being told",
    "start": "1630720",
    "end": "1637240"
  },
  {
    "text": "no and know how to proceed and and almost all failures what",
    "start": "1637240",
    "end": "1643200"
  },
  {
    "start": "1641000",
    "end": "1971000"
  },
  {
    "text": "I talked about here the reason driving these crash only with View the world is that almost all failures relate to some",
    "start": "1643200",
    "end": "1649640"
  },
  {
    "text": "sort of State data we have inconsistent State like partial State wrong wrong State wrong data loss data duplication",
    "start": "1649640",
    "end": "1656640"
  },
  {
    "text": "of data and so on and and and let's try to classify what we mean by state okay",
    "start": "1656640",
    "end": "1662799"
  },
  {
    "text": "first this is this is one this is like my classification I didn't make up make this up this something that I learned",
    "start": "1662799",
    "end": "1668399"
  },
  {
    "text": "and found useful is that first we have static data that's other the data that you can read from config files and like",
    "start": "1668399",
    "end": "1674000"
  },
  {
    "text": "we read from like a stable storage somewhere that it does doesn't change it's always available you can always",
    "start": "1674000",
    "end": "1679120"
  },
  {
    "text": "read it in and so on then we have scratch data that's data that you use in computations like like temporary data",
    "start": "1679120",
    "end": "1685039"
  },
  {
    "text": "that you use to to get to result if you lose that that's fine and then you have Dynamic data and",
    "start": "1685039",
    "end": "1691640"
  },
  {
    "text": "dynamic data can be can be Define can like divide into two sort of categories",
    "start": "1691640",
    "end": "1697559"
  },
  {
    "text": "you have Rec recomp computable ones that sort of based on on on on on on static data sort of a variation of static data",
    "start": "1697559",
    "end": "1704880"
  },
  {
    "text": "but then you have the not recomp computable and this is your your your critical state if you lose this then",
    "start": "1704880",
    "end": "1710120"
  },
  {
    "text": "then your host right this can be user input data for example it's hard to go",
    "start": "1710120",
    "end": "1715159"
  },
  {
    "text": "out to ask the user can you like fill in the form again for me please or something stuff like this sure nobody no",
    "start": "1715159",
    "end": "1721760"
  },
  {
    "text": "one probably dies right but it's still it's not an ideal word to lose not",
    "start": "1721760",
    "end": "1726880"
  },
  {
    "text": "recomp computable data because you can't provide the level of service that you that that that that that you hope to do",
    "start": "1726880",
    "end": "1734840"
  },
  {
    "text": "okay so now let's to it take a look at traditional State Management that we sort of all been sort of used to used to",
    "start": "1734840",
    "end": "1742240"
  },
  {
    "text": "use and have have learned to use so the Le the The Legend here is that this blue",
    "start": "1742240",
    "end": "1749440"
  },
  {
    "text": "ball here is is an object of some sort the the white one is a client and this",
    "start": "1749440",
    "end": "1755200"
  },
  {
    "text": "red box is critical state that is that you can't lose I mean if you lose that and you then then you can't provide the",
    "start": "1755200",
    "end": "1761760"
  },
  {
    "text": "level of service you like and this dotted line here is a is a thread boundary okay",
    "start": "1761760",
    "end": "1769000"
  },
  {
    "text": "so so uh often often I mean a regular OB system you looks something like like",
    "start": "1769000",
    "end": "1774720"
  },
  {
    "text": "this you have you have a whole bunch of connect connected objects with the critical States a little bit little bit",
    "start": "1774720",
    "end": "1779840"
  },
  {
    "text": "everywhere I mean somewhere around this object graph and now if a client makes a",
    "start": "1779840",
    "end": "1784919"
  },
  {
    "text": "request it leads to some activity down the line you know and and and and and",
    "start": "1784919",
    "end": "1790039"
  },
  {
    "text": "and in in traditional systems at least the the way I wrote them like 10 years ago or 20 years ago or so on",
    "start": "1790039",
    "end": "1797840"
  },
  {
    "text": "uh when I started uh this career was was that they all mean do synchronous",
    "start": "1797840",
    "end": "1804799"
  },
  {
    "text": "requests so you have this this call chain you know stack frame after stack frame to to another object to another",
    "start": "1804799",
    "end": "1810320"
  },
  {
    "text": "object to to to another object now what if something fails you know down down",
    "start": "1810320",
    "end": "1815840"
  },
  {
    "text": "down here for example down at the bottom here the problem then is that the whole stack is blown right one object fail is",
    "start": "1815840",
    "end": "1822080"
  },
  {
    "text": "need to cascading failure to the next component the whole stack frame like is blown all the way out like and the",
    "start": "1822080",
    "end": "1828159"
  },
  {
    "text": "problem is that if you don't do much about it then then all you get is like that thrown right in the client's",
    "start": "1828159",
    "end": "1833279"
  },
  {
    "text": "face and if there's really no client all you see probably is a log you know out to the all like with with a with",
    "start": "1833279",
    "end": "1840720"
  },
  {
    "text": "exception you know printed out all the way up to the to the new thread or the executive service or something or or or",
    "start": "1840720",
    "end": "1847399"
  },
  {
    "text": "something like then it's complete silence and and and the the the problem is that this is the failure management",
    "start": "1847399",
    "end": "1852919"
  },
  {
    "text": "that we' that we've grown up with but I really believe that it's that is really completely utterly broken because if if",
    "start": "1852919",
    "end": "1861080"
  },
  {
    "text": "a thread blows up you know that's the only context you have so if your thread blows up then you lose complete",
    "start": "1861080",
    "end": "1866880"
  },
  {
    "text": "knowledge about what happened why something went wrong you can you have to go ask the client then or something like",
    "start": "1866880",
    "end": "1872399"
  },
  {
    "text": "that and and and and and and and since this context is the only context you",
    "start": "1872399",
    "end": "1877440"
  },
  {
    "text": "have you need to like sort of you need to like hold on to that as much as you",
    "start": "1877440",
    "end": "1882840"
  },
  {
    "text": "that that that my bag went down there anyway hold on to that like it's as much as you just can because you just simple",
    "start": "1882840",
    "end": "1889039"
  },
  {
    "text": "can cannot cannot lose it because exception don't propagate between contexts between threads between other",
    "start": "1889039",
    "end": "1894960"
  },
  {
    "text": "components unless you actually ask it to do so what you have to do then you need to like since failures can happen",
    "start": "1894960",
    "end": "1901000"
  },
  {
    "text": "anywhere you need to be prepared to handle failure anywhere in the application you to go around and and",
    "start": "1901000",
    "end": "1907159"
  },
  {
    "text": "like sprinkle around try catch statements almost anywhere and be ready to to to deal with failure anywhere in",
    "start": "1907159",
    "end": "1913279"
  },
  {
    "text": "the application you know and then that's where you get systems like where you where often your business logic",
    "start": "1913279",
    "end": "1918960"
  },
  {
    "text": "completely Tangled with with error handling and often more error handling than natur business logic and and it's",
    "start": "1918960",
    "end": "1926080"
  },
  {
    "text": "also scattered across the whole application is a cross cutting concern I used to do as aspect oriented program we",
    "start": "1926080",
    "end": "1932240"
  },
  {
    "text": "actually try to deal with that you know extracting that as like what told the third dimension and stuff like",
    "start": "1932240",
    "end": "1937679"
  },
  {
    "text": "that very cool stuff but it didn't work much because Del is delegating the problem you know still it's still based",
    "start": "1937679",
    "end": "1943960"
  },
  {
    "text": "on TR catch statement just just weave into the code so so I believe we need a better way of dealing with this don't",
    "start": "1943960",
    "end": "1950919"
  },
  {
    "text": "code defensively like this failure is natural we shouldn't try to protect ourselves constantly from it to happen I",
    "start": "1950919",
    "end": "1957960"
  },
  {
    "text": "think structure can bring San sanity back and as as as Sydney Decker said that accident they come from",
    "start": "1957960",
    "end": "1964440"
  },
  {
    "text": "relationships not broken parts it's the relationships that takes down your system okay so I think the requirements",
    "start": "1964440",
    "end": "1972880"
  },
  {
    "start": "1971000",
    "end": "2045000"
  },
  {
    "text": "in my book for saying failure management is the failure first need to be contained so you can't get to leave so",
    "start": "1972880",
    "end": "1979240"
  },
  {
    "text": "so you can't get these cascading failures where where where errors just spread completely without",
    "start": "1979240",
    "end": "1984960"
  },
  {
    "text": "control the errors need to be be able to refi you know sort of the computer term",
    "start": "1984960",
    "end": "1990159"
  },
  {
    "text": "for being turned into something tangible something that you can touch they need to be turned into",
    "start": "1990159",
    "end": "1996960"
  },
  {
    "text": "messages and if if if they are messages that that means that they can be signaled in an asynchronous fashion you",
    "start": "1996960",
    "end": "2004519"
  },
  {
    "text": "know to anyone that's interested they might be others than the client being interested the client actually might not",
    "start": "2004519",
    "end": "2010120"
  },
  {
    "text": "even be interested he doesn't care if the service can't use another service",
    "start": "2010120",
    "end": "2016559"
  },
  {
    "text": "out there why should he care right he might care if you put in the wrong password and so I'll come back to this",
    "start": "2016559",
    "end": "2022320"
  },
  {
    "text": "later but but you know failure should be signal to to to to anyone that that's interested in it and these should be",
    "start": "2022320",
    "end": "2027679"
  },
  {
    "text": "able to observe it and if they can observe it from the context outside the failing context the safe context another",
    "start": "2027679",
    "end": "2036080"
  },
  {
    "text": "component running another thread on another machine or somewhere else just not in the failed context then they can",
    "start": "2036080",
    "end": "2041120"
  },
  {
    "text": "do something about it then they can manage failure okay and and so first we",
    "start": "2041120",
    "end": "2046519"
  },
  {
    "start": "2045000",
    "end": "2140000"
  },
  {
    "text": "need a way to contain failure the bulkhead pattern is a very good pattern here it the",
    "start": "2046519",
    "end": "2052040"
  },
  {
    "text": "voice failures from leaking and call cascading failures is actually the way the the ship industry have constructed",
    "start": "2052040",
    "end": "2058599"
  },
  {
    "text": "ships for hundreds of years and the key here is is compartmentalization where you have you",
    "start": "2058599",
    "end": "2065398"
  },
  {
    "text": "you divide your your your ship into into discrete and fully contained compartments here so if if one or two or",
    "start": "2065399",
    "end": "2072839"
  },
  {
    "text": "three of them sort of start to fill in water the whole ship doesn't sink and",
    "start": "2072839",
    "end": "2079240"
  },
  {
    "text": "and when I when I talk about that everyone brings up yeah but what about Titanic isn't that a counter example",
    "start": "2079240",
    "end": "2085079"
  },
  {
    "text": "actually not you know because what what the Titanic did it it didn't have these walls go all the way up so when when",
    "start": "2085079",
    "end": "2090839"
  },
  {
    "text": "when when three or four I don't remember what it was but enough what got filled up it started tilt Water started going",
    "start": "2090839",
    "end": "2097000"
  },
  {
    "text": "to spill over to the next one to the next one to the next one so Titanic is actually a great example of cascading",
    "start": "2097000",
    "end": "2103280"
  },
  {
    "text": "failure and happening when isolation is not fully happening",
    "start": "2103280",
    "end": "2109720"
  },
  {
    "text": "okay uh so so but I really believe that this way of of of of of dealing with",
    "start": "2109720",
    "end": "2116000"
  },
  {
    "text": "with with with failure is is yet again back to fault tolerance no because you",
    "start": "2116000",
    "end": "2121599"
  },
  {
    "text": "you you get hurt and you can limp along but I think still yet yet another time",
    "start": "2121599",
    "end": "2127280"
  },
  {
    "text": "so yet again I think we can we can do better I think we are actually already in a position to heal these compartments",
    "start": "2127280",
    "end": "2132880"
  },
  {
    "text": "and can actually come back to fully res res resilient",
    "start": "2132880",
    "end": "2138960"
  },
  {
    "text": "systems and to do that we need to enter what I call supervision this is the",
    "start": "2139119",
    "end": "2145160"
  },
  {
    "start": "2140000",
    "end": "2175000"
  },
  {
    "text": "supervisor is the guy that listens to the failures in a safe outside",
    "start": "2145160",
    "end": "2150599"
  },
  {
    "text": "context right to to to and he is able to fully respond to that so so so the this",
    "start": "2150599",
    "end": "2157680"
  },
  {
    "text": "the supervisor is is can learn about the failure and can choose to restore resume or re restart the fail component to",
    "start": "2157680",
    "end": "2165359"
  },
  {
    "text": "restore full full service again there might be temporary hiccup but after a while the system can restore full",
    "start": "2165359",
    "end": "2171560"
  },
  {
    "text": "functionality and really self-heal and let me",
    "start": "2171560",
    "end": "2177040"
  },
  {
    "start": "2175000",
    "end": "2192000"
  },
  {
    "text": "explain I think I have 15 minutes left I should be able to go through this let me explain how this work through through",
    "start": "2177040",
    "end": "2183400"
  },
  {
    "text": "through through a practical example uh that I use that I sometimes tell and it's it's it's about how how a vending",
    "start": "2183400",
    "end": "2189920"
  },
  {
    "text": "machine works so you have this programmer he's really e eager for coffee he's been sitting hacking all day and he walks up",
    "start": "2189920",
    "end": "2196440"
  },
  {
    "text": "to this coffee machine and he puts in like one quarter for example and one konor in in in Swedish or dance or",
    "start": "2196440",
    "end": "2202960"
  },
  {
    "text": "Danish uh and and let's say it cost two right what's happening that the the",
    "start": "2202960",
    "end": "2208240"
  },
  {
    "text": "coffee machine will display an error message right in the programmer's face saying please add more coins or",
    "start": "2208240",
    "end": "2214480"
  },
  {
    "text": "something like that uh then the programmer adds the mean adds all the coins meaning he",
    "start": "2214480",
    "end": "2220960"
  },
  {
    "text": "fulfills his his his contract of the service and he gets his coffee the cop and the program is happy now the next",
    "start": "2220960",
    "end": "2227520"
  },
  {
    "text": "day he walks in and inserts two coins and now he gets like an out of coffee beans eror thrown in his face or like",
    "start": "2227520",
    "end": "2233520"
  },
  {
    "text": "out of out of water or like Bean Jam exception or something like that what",
    "start": "2233520",
    "end": "2238560"
  },
  {
    "text": "should he do with that me where is where is you know the key to the machine where is the the beans right or or where are",
    "start": "2238560",
    "end": "2245880"
  },
  {
    "text": "how can I fix the ground Remer that's not the program is responsibility and that's usually not the way it works",
    "start": "2245880",
    "end": "2251640"
  },
  {
    "text": "either I think that's just completely wrong instead what's happening in an Ideal World I don't know if this is really the way it's happening but is",
    "start": "2251640",
    "end": "2258319"
  },
  {
    "text": "that there there's this service guy runs around the floors you know in the office and he has or a beeper something like",
    "start": "2258319",
    "end": "2263640"
  },
  {
    "text": "that and he gets gets notified that something's wrong with this coffee machine actually might be you know per",
    "start": "2263640",
    "end": "2269280"
  },
  {
    "text": "periodically in the in in in in in real life so he he comes the next day and discovers it but let's say that he he",
    "start": "2269280",
    "end": "2276119"
  },
  {
    "text": "get he has a way of getting signaled he is the guy that is responsible for this coffee machine so he's the guy that",
    "start": "2276119",
    "end": "2282440"
  },
  {
    "text": "should fix it add more beans for example and the the programmer gets his coffee and he's happy the the important thing",
    "start": "2282440",
    "end": "2290800"
  },
  {
    "text": "here is that we need to distinguish between errors that the programmer is responsible for and failures of the",
    "start": "2290800",
    "end": "2297599"
  },
  {
    "text": "service that the programers shouldn't have anything to do with he shouldn't even be aware that this is happening",
    "start": "2297599",
    "end": "2303800"
  },
  {
    "text": "sure I mean if it's a long delay it might be nice to noce ify him that's something that is going to be fixed in",
    "start": "2303800",
    "end": "2309119"
  },
  {
    "text": "in a short time but it shouldn't it's not not his responsibility to fix this and I really think that this is the way",
    "start": "2309119",
    "end": "2314920"
  },
  {
    "text": "we we should build systems we have request response validation errors clients not fulfilling their contract",
    "start": "2314920",
    "end": "2320760"
  },
  {
    "text": "should be thrown right in the client's face but not everything like we like like like you know this synchronous Tri",
    "start": "2320760",
    "end": "2327200"
  },
  {
    "text": "catch model encourages that we throw everything right at the client face because what should what should you do",
    "start": "2327200",
    "end": "2332920"
  },
  {
    "text": "with all of these things these should go to supervisor that should deal with the error and and and as I I program a lot",
    "start": "2332920",
    "end": "2341200"
  },
  {
    "text": "with actors for example and in act in in the actor model it is a supervisor that creates his his his workers and",
    "start": "2341200",
    "end": "2349200"
  },
  {
    "text": "naturally he since he created the workers he should know how to deal with",
    "start": "2349200",
    "end": "2354800"
  },
  {
    "text": "errors in them he should know these these my workers here they use a third party service here for example if that's",
    "start": "2354800",
    "end": "2361760"
  },
  {
    "text": "going down I have some clue what's going on at least and I should be able to deal to deal with that",
    "start": "2361760",
    "end": "2367359"
  },
  {
    "text": "since it's so so I think the model where the guy that creates the service is responsible for it and the failure of it",
    "start": "2367359",
    "end": "2374760"
  },
  {
    "text": "is a is a good model so I I I really like what I call",
    "start": "2374760",
    "end": "2380160"
  },
  {
    "start": "2377000",
    "end": "2486000"
  },
  {
    "text": "them sort of the eroc kernel P or on your own on layer State fa failure fail",
    "start": "2380160",
    "end": "2385640"
  },
  {
    "text": "failure management this is also something that I think I learned about in erlang the",
    "start": "2385640",
    "end": "2390839"
  },
  {
    "text": "first time where they full G fall like all in on this on this way of working and and we have in in in in aka the",
    "start": "2390839",
    "end": "2397839"
  },
  {
    "text": "project that I started some time ago we have also fully",
    "start": "2397839",
    "end": "2403480"
  },
  {
    "text": "embraced this this this this model and the model is that instead of having our our critical State scattered across the",
    "start": "2403480",
    "end": "2409880"
  },
  {
    "text": "whole application we we instead con contain it in what we call the error kernel it's a",
    "start": "2409880",
    "end": "2415839"
  },
  {
    "text": "minimal sort of s sort of minimum would say sort of place where we",
    "start": "2415839",
    "end": "2422520"
  },
  {
    "text": "put everything and that's sort of in the innermost of this of this uh",
    "start": "2422520",
    "end": "2427839"
  },
  {
    "text": "onion here is where we put our or our critical State and then we have so",
    "start": "2427839",
    "end": "2433480"
  },
  {
    "text": "layers you know of Defense protecting us here so this means that that whenever",
    "start": "2433480",
    "end": "2440960"
  },
  {
    "text": "something's going on you can hardly see here right but can just go back here whenever something some whenever this",
    "start": "2440960",
    "end": "2447760"
  },
  {
    "text": "component is supposed to do something dangerous he never does it himself instead he delegates you",
    "start": "2447760",
    "end": "2453079"
  },
  {
    "text": "know to this layer here that might also delegate to this layer that might also",
    "start": "2453079",
    "end": "2458480"
  },
  {
    "text": "delegate right so get you have these layers of Defense so whenever a request is hit hits the error current you can",
    "start": "2458480",
    "end": "2464079"
  },
  {
    "text": "always assume correctness then it's been fully validated I mean all these dependencies have been fully checked",
    "start": "2464079",
    "end": "2470839"
  },
  {
    "text": "nothing can go wrong here in an ideal world I mean you can still might there might be bugs you know it can get out of",
    "start": "2470839",
    "end": "2476400"
  },
  {
    "text": "memory exceptions or whatever someone might just pull the plug of the machine right so but in theory when it when a",
    "start": "2476400",
    "end": "2482400"
  },
  {
    "text": "request hits here everything is fine so let's take a look at at an example here instead of what a coloni on",
    "start": "2482400",
    "end": "2489079"
  },
  {
    "text": "layer State Management is traditional State State Management where you where here you have all the critical state in",
    "start": "2489079",
    "end": "2495560"
  },
  {
    "text": "what you call the era kernel and then you have layers of Defense you might say layers",
    "start": "2495560",
    "end": "2503640"
  },
  {
    "text": "of of of services protecting each each e service higher",
    "start": "2503640",
    "end": "2509119"
  },
  {
    "text": "up and and now and and the interesting thing is that each one of these service",
    "start": "2509119",
    "end": "2514640"
  },
  {
    "text": "runs in its own thread and and the reason for that is just not yeah you get you get concurrency and you can scale",
    "start": "2514640",
    "end": "2519800"
  },
  {
    "text": "things out I that's my that might be nice but the the thing is here the key here is that this this this gives you",
    "start": "2519800",
    "end": "2525359"
  },
  {
    "text": "safe boundary it means that if this thing fail it doesn't affect the rest is",
    "start": "2525359",
    "end": "2531200"
  },
  {
    "text": "fully contained okay think think about these like machines like running physic like",
    "start": "2531200",
    "end": "2537319"
  },
  {
    "text": "physical machines right running you can pull the plug on one no big deal nothing happens it doesn't",
    "start": "2537319",
    "end": "2542839"
  },
  {
    "text": "Cascade so now if if a if a client hits one of these and something then goes",
    "start": "2542839",
    "end": "2550359"
  },
  {
    "text": "wrong then a notification if Will sent up you know they called connection all",
    "start": "2550359",
    "end": "2555720"
  },
  {
    "text": "about up to supervisor will burn they could so it will be notified and the supervisor can take action but",
    "start": "2555720",
    "end": "2561960"
  },
  {
    "text": "restarting this component and the client can continue using him retry he has to",
    "start": "2561960",
    "end": "2567720"
  },
  {
    "text": "do and I sound like Yoda but uh uh but the next time he will",
    "start": "2567720",
    "end": "2575040"
  },
  {
    "text": "actually that will will be healthy component uh and and the interesting",
    "start": "2575040",
    "end": "2581119"
  },
  {
    "text": "thing is that if if if his parent can't deal with it then he can just delegate or or escalate sorry so it",
    "start": "2581119",
    "end": "2589480"
  },
  {
    "text": "might be that there is an error that none of these layers can actually deal with and that will hit the error kernel",
    "start": "2589480",
    "end": "2595200"
  },
  {
    "text": "at least we did as best as we could like for example in out of memory ER it's really hard to deal deal with that in Java that will hit the ER kernel but",
    "start": "2595200",
    "end": "2602319"
  },
  {
    "text": "that is is is is uh I'll I'll I'll come back to that so so as as you probably",
    "start": "2602319",
    "end": "2608800"
  },
  {
    "text": "see like this way of working is very similar to how the Mir Cuts is actually",
    "start": "2608800",
    "end": "2614119"
  },
  {
    "text": "dealing with resilience with a with with a female uh with the dominant female you",
    "start": "2614119",
    "end": "2619520"
  },
  {
    "text": "know stops at the road this is Risky Business and start delegating to his poor subordinate like let them run out",
    "start": "2619520",
    "end": "2625720"
  },
  {
    "text": "of the the road to die to check if some if if if if something is is is is is",
    "start": "2625720",
    "end": "2631319"
  },
  {
    "text": "working this is exactly the same thing by one of these thing doesn't perform dangerous work delegate and watches",
    "start": "2631319",
    "end": "2638240"
  },
  {
    "text": "what's what's really happening here you know is something going wrong or not no it didn't everything's fine and I can I",
    "start": "2638240",
    "end": "2643720"
  },
  {
    "text": "can continue to process the request and and this way of working this onion layers State Management is very",
    "start": "2643720",
    "end": "2650760"
  },
  {
    "text": "similar to how the world actually works around us where we have these layers of infrastructure protecting as individuals",
    "start": "2650760",
    "end": "2656880"
  },
  {
    "text": "without really thinking about it so really really really believe that it's a natural model to deal with the with with",
    "start": "2656880",
    "end": "2663240"
  },
  {
    "text": "with resilience that is really natural to a lot of us and and but this is not sufficient",
    "start": "2663240",
    "end": "2669319"
  },
  {
    "text": "actually because because we need to maintain diversity and redundancy this",
    "start": "2669319",
    "end": "2674599"
  },
  {
    "start": "2670000",
    "end": "2725000"
  },
  {
    "text": "means that you know you can't just bet on that your machine will just be be always up the machine might actually",
    "start": "2674599",
    "end": "2681240"
  },
  {
    "text": "fail you know you can never run a resilience system with just a single machine like the cleaning lady like my",
    "start": "2681240",
    "end": "2686839"
  },
  {
    "text": "my colleague Roland he he actually told me I don't have that much time but this is a funny anecdote he actually he",
    "start": "2686839",
    "end": "2693119"
  },
  {
    "text": "actually told me that that he he you know he he he he he is a physicist and they and they were they were doing this",
    "start": "2693119",
    "end": "2699000"
  },
  {
    "text": "overnight experiment like calculations and they had like full redundancy two different machines you know all all",
    "start": "2699000",
    "end": "2704559"
  },
  {
    "text": "plugged in but the cleaning L but but what they didn't expect was at the night the cleaning lady came up and actually",
    "start": "2704559",
    "end": "2710520"
  },
  {
    "text": "pulled both plugs and stting like swiping the floor and then pull them back and plug them back in right so so I",
    "start": "2710520",
    "end": "2716440"
  },
  {
    "text": "mean you can never expect all failure scenarios in a way right but having more",
    "start": "2716440",
    "end": "2721800"
  },
  {
    "text": "than one machine actually usually helps a lot and and as you as as and and as we",
    "start": "2721800",
    "end": "2727400"
  },
  {
    "start": "2725000",
    "end": "2780000"
  },
  {
    "text": "all know I mean if you start running things on multiple machines then you have a distributed system like most",
    "start": "2727400",
    "end": "2732640"
  },
  {
    "text": "systems today are even if we don't want it or not they are distributed systems and as soon as you have the network",
    "start": "2732640",
    "end": "2739200"
  },
  {
    "text": "weird things start to happen you know the when the network is actually not",
    "start": "2739200",
    "end": "2744440"
  },
  {
    "text": "reliable we we have you know you know you know you have to deal with partial failures me me messages which actually",
    "start": "2744440",
    "end": "2751400"
  },
  {
    "text": "is is is the underlaying Ling communication between uh no knows over the network means that the messages can",
    "start": "2751400",
    "end": "2758599"
  },
  {
    "text": "be delayed lost like reordered duplicated there's a lot of things that can that can go wrong and failure",
    "start": "2758599",
    "end": "2765000"
  },
  {
    "text": "detection just turns into guessing game you just cannot simply know if a Noe is down or if it's just doing GC or it's",
    "start": "2765000",
    "end": "2771160"
  },
  {
    "text": "having like being overloaded or something like that you have to guess take educated guesses of how the if your",
    "start": "2771160",
    "end": "2777240"
  },
  {
    "text": "services are up or down so it's a very different world and in this different world I I actually did a whole talk",
    "start": "2777240",
    "end": "2784359"
  },
  {
    "start": "2780000",
    "end": "2800000"
  },
  {
    "text": "about this so I won't go into too much detail called life beyond the illusion of present but really the strong",
    "start": "2784359",
    "end": "2790599"
  },
  {
    "text": "consistency is the wrong default we might need this in the rare circumstances but we should it's not the",
    "start": "2790599",
    "end": "2796640"
  },
  {
    "text": "way we should fully Embrace and do and and and and design software because I really believe the systems they need to",
    "start": "2796640",
    "end": "2802040"
  },
  {
    "start": "2800000",
    "end": "2844000"
  },
  {
    "text": "be decoupled in time meaning that the sender and receiver are decoupled in time this means that you have this",
    "start": "2802040",
    "end": "2808119"
  },
  {
    "text": "asynchronous boundary this Safe Haven so all of these are are running in like safe boxes safe havens you can say and",
    "start": "2808119",
    "end": "2816319"
  },
  {
    "text": "and the this give you concurrency and Asic message passing it gives you this loose coupling so and and sort of a",
    "start": "2816319",
    "end": "2821839"
  },
  {
    "text": "share nothing design and they need to be be also decoupled in space that means that you that that that you get",
    "start": "2821839",
    "end": "2828720"
  },
  {
    "text": "distribution not just concurrency through through inter leaving which is actually decoupling in time but actually",
    "start": "2828720",
    "end": "2834040"
  },
  {
    "text": "actually have to be able to run things in multiple um sort contexts you know",
    "start": "2834040",
    "end": "2839800"
  },
  {
    "text": "decoupled in space and here reactive principles lead lead lead the way I also think that in order to to to really",
    "start": "2839800",
    "end": "2846400"
  },
  {
    "start": "2844000",
    "end": "2913000"
  },
  {
    "text": "conquer this this sort of this this distributed world we need to have resilient protocols and in my experience resilient",
    "start": "2846400",
    "end": "2853400"
  },
  {
    "text": "protocols depend on two things the asynchronous communication and and eventual consistency because protocols",
    "start": "2853400",
    "end": "2860240"
  },
  {
    "text": "like this are they are tolerant to message loss message reordering and message duplication and there's been one",
    "start": "2860240",
    "end": "2866559"
  },
  {
    "text": "of these terms that s of come up sort a little funky term called acid 2.0 I don't know if you've heard about that",
    "start": "2866559",
    "end": "2872040"
  },
  {
    "text": "most people know what acid is you Atomic consistent isolated durable as 2.0 sort",
    "start": "2872040",
    "end": "2877319"
  },
  {
    "text": "of changes the sort of the the meaning of This Acronym into a standing for",
    "start": "2877319",
    "end": "2882640"
  },
  {
    "text": "associative meaning that that uh it's batch in insensitive you can you can",
    "start": "2882640",
    "end": "2887880"
  },
  {
    "text": "batch in group as as you want C stands for commutative meaning that it's ordering sensitive ordering doesn't",
    "start": "2887880",
    "end": "2894640"
  },
  {
    "text": "matter and I stands for item potent meaning that duplication doesn't matter",
    "start": "2894640",
    "end": "2900319"
  },
  {
    "text": "so so it's fully embracing this way of of Designing protocols actually can can",
    "start": "2900319",
    "end": "2906040"
  },
  {
    "text": "lead to a lot lot more resilient protocols and we should not St like strive for transactional semantics then",
    "start": "2906040",
    "end": "2913079"
  },
  {
    "text": "going back to testing oh sorry sorry ending with with with some with some words on testing I really think",
    "start": "2913079",
    "end": "2919960"
  },
  {
    "text": "that uh that that we have a lot to learn from Arn I",
    "start": "2919960",
    "end": "2925200"
  },
  {
    "text": "think we should just learn to like just blow things up we shouldn't we should we really shouldn't be worried wor worried",
    "start": "2925200",
    "end": "2931359"
  },
  {
    "text": "about that like shoot down your application understand when it breaks where it breaks break how it breaks I",
    "start": "2931359",
    "end": "2937839"
  },
  {
    "text": "think just simply pull the plug I mean the the ethernet cables or or there are",
    "start": "2937839",
    "end": "2943079"
  },
  {
    "text": "great softer actually that that that helps you with this like and and like see what happen take notes because",
    "start": "2943079",
    "end": "2950599"
  },
  {
    "text": "often the results will completely surprise you things will not break where you expected them to to especially not",
    "start": "2950599",
    "end": "2957680"
  },
  {
    "text": "in in like in a complex distributed systems as I said there there's a lot of great tools here's just some of them",
    "start": "2957680",
    "end": "2963960"
  },
  {
    "start": "2961000",
    "end": "3012000"
  },
  {
    "text": "Netflix has this this you know the Sim the Sim Army AKA has this has multi jvm",
    "start": "2963960",
    "end": "2970520"
  },
  {
    "text": "test you know all of these can like simulate Network outages and and and and and like do all kinds of crazy stuff you",
    "start": "2970520",
    "end": "2977280"
  },
  {
    "text": "know messing around with a with the with a network dropping messages delaying",
    "start": "2977280",
    "end": "2982720"
  },
  {
    "text": "messages slowing messages down Etc and and you know and and you have like like",
    "start": "2982720",
    "end": "2988000"
  },
  {
    "text": "like tools for trying to shoot down your application like gaffling here and stuff like that and and and yet again I think",
    "start": "2988000",
    "end": "2993359"
  },
  {
    "text": "you should design for failure and you should like test it as any other code that you",
    "start": "2993359",
    "end": "2999280"
  },
  {
    "text": "test sometimes it might actually be worth to go like do to to do like Netflix go all in and even test in",
    "start": "2999280",
    "end": "3005160"
  },
  {
    "text": "production like like they do because nothing beats production it's a completely different world as soon as",
    "start": "3005160",
    "end": "3010559"
  },
  {
    "text": "you go to production so I covered a lot I just want to sum things",
    "start": "3010559",
    "end": "3015720"
  },
  {
    "start": "3012000",
    "end": "3061000"
  },
  {
    "text": "up as I said one of the biggest thing or main things I want you to remember is that complex system always run as broken",
    "start": "3015720",
    "end": "3022880"
  },
  {
    "text": "systems it's always something failing somewhere and the only way out of that",
    "start": "3022880",
    "end": "3027960"
  },
  {
    "text": "sorry is is to fully is is to fully Embrace",
    "start": "3027960",
    "end": "3033839"
  },
  {
    "text": "resilience as something that you design for and design with right the resilience",
    "start": "3033839",
    "end": "3039520"
  },
  {
    "text": "is really by by Design it's nothing you can bolt on afterwards you need to think about it from day one and see it as a",
    "start": "3039520",
    "end": "3046160"
  },
  {
    "text": "natural state in the application life cycle uh that's everything I had thank",
    "start": "3046160",
    "end": "3053760"
  },
  {
    "text": "you",
    "start": "3054440",
    "end": "3057440"
  },
  {
    "text": "and I have",
    "start": "3060640",
    "end": "3063000"
  }
]