[
  {
    "start": "0",
    "end": "179000"
  },
  {
    "text": "good morning everyone welcome to to Eda day I just want to do a quick poll of the audience so do we have any Taylor",
    "start": "11759",
    "end": "20240"
  },
  {
    "text": "Swift fans in the house a a couple of brave people okay okay a couple of",
    "start": "20240",
    "end": "26279"
  },
  {
    "text": "people all right um what about uh maybe something a bit more popular um in the last 20 years has anybody in the room",
    "start": "26279",
    "end": "33559"
  },
  {
    "text": "tried to go to or been to glastenbury okay a couple a couple more",
    "start": "33559",
    "end": "40000"
  },
  {
    "text": "hands but like tiny amount of hand what about any Opera fans in the house anybody into Neville Holt maybe Neville",
    "start": "40000",
    "end": "46199"
  },
  {
    "text": "Hol Opera no okay definitely Google it beautiful if you're looking for something to go to Black Tie uh all very",
    "start": "46199",
    "end": "54199"
  },
  {
    "text": "Scenic uh Opera outside but um what do all these things have in common and I'm",
    "start": "54199",
    "end": "59399"
  },
  {
    "text": "not just trying understand uh what your music taste is although of course I think that's a wonderful thing for us all to connect",
    "start": "59399",
    "end": "65239"
  },
  {
    "text": "over um but these are all real life events if you like that generate events",
    "start": "65240",
    "end": "72680"
  },
  {
    "text": "and traffic on it systems all of these three events um will generate a certain",
    "start": "72680",
    "end": "79080"
  },
  {
    "text": "amount of hype of Buzz and of uh pressure on our it systems that support",
    "start": "79080",
    "end": "85600"
  },
  {
    "text": "in part ticket sales for these events uh now for those of you who aren't Opera fans I can assure you Neville Holt is",
    "start": "85600",
    "end": "92479"
  },
  {
    "text": "very coveted the members always get the uh the best tables first because they also offer a lovely dinner service so uh",
    "start": "92479",
    "end": "99159"
  },
  {
    "text": "do definitely look that up um but I'm not telling you all of this because I myself am a Taylor Swift fan I'm really",
    "start": "99159",
    "end": "105280"
  },
  {
    "text": "not there is some parts of this uh presentation that are about Taylor Swift um I'm much more of a disco girl myself",
    "start": "105280",
    "end": "111920"
  },
  {
    "text": "but um I'm telling you this because I'm a fan of using event driven principles",
    "start": "111920",
    "end": "117640"
  },
  {
    "text": "for us to start changing our mental models on how we scale our it systems a",
    "start": "117640",
    "end": "125000"
  },
  {
    "text": "lot of our mental models today are based on scaling it systems based on load so",
    "start": "125000",
    "end": "130800"
  },
  {
    "text": "an infrastructure uh characteristic of you like of our it systems and it's really",
    "start": "130800",
    "end": "136640"
  },
  {
    "text": "got nothing to do with our end users so we're scaling our ticket systems for",
    "start": "136640",
    "end": "141680"
  },
  {
    "text": "example not based on the number of Opera fans that are going to be out there trying to buy tickets to Neville halol",
    "start": "141680",
    "end": "147319"
  },
  {
    "text": "or the number of glastry fans or Taylor Swift fans when we're scaling often we're looking at our infrastructure um",
    "start": "147319",
    "end": "153800"
  },
  {
    "text": "as that marker to tell us to scale um and today uh what I'd like to talk to you about is specifically these",
    "start": "153800",
    "end": "161319"
  },
  {
    "text": "sorts of events and how we can start adjusting and how we approach scaling for them um my name is Natasha I'm a",
    "start": "161319",
    "end": "168239"
  },
  {
    "text": "container specialist AWS so this talk is going to be focused on containers it is",
    "start": "168239",
    "end": "173640"
  },
  {
    "text": "going to mention kubernetes so if that is of interest to you you are certainly in the right place um as I mentioned I",
    "start": "173640",
    "end": "180599"
  },
  {
    "start": "179000",
    "end": "200000"
  },
  {
    "text": "am going to talk a little bit about Taylor Swift but don't worry uh it won't be all about Taylor um we're going to",
    "start": "180599",
    "end": "186760"
  },
  {
    "text": "talk a little bit about about scaling with kubernetes um event driven scaling with kubernetes um and how we can help",
    "start": "186760",
    "end": "194760"
  },
  {
    "text": "our kubernetes scalers using um a new system called Carpenter and then some",
    "start": "194760",
    "end": "200000"
  },
  {
    "start": "200000",
    "end": "962000"
  },
  {
    "text": "takeaways so let's let's start with Taylor then so the ear is tall if you haven't heard of it you've probably been",
    "start": "200000",
    "end": "206599"
  },
  {
    "text": "living under a rock it's huge huge quite literally record-breaking uh music event and tour",
    "start": "206599",
    "end": "212959"
  },
  {
    "text": "that's happened uh and it's the highest grossing tour of all time so currently I think it's standing at just over a",
    "start": "212959",
    "end": "218680"
  },
  {
    "text": "billion dollars um experts estimate this could get to nearly two billion dollar",
    "start": "218680",
    "end": "225319"
  },
  {
    "text": "for this tour um now to put that in perspective if there are any El and John fans in the house so we are really Mo",
    "start": "225319",
    "end": "231959"
  },
  {
    "text": "moving through the music genres today um this has gross more than Elton John's farewell tour which was also extremely",
    "start": "231959",
    "end": "238079"
  },
  {
    "text": "difficult to to get tickets for but but it's been it's been huge so it shattered attendance records all over the world um",
    "start": "238079",
    "end": "246360"
  },
  {
    "text": "also resulted in a 40% increase in the sale of friendship bracelets um so there",
    "start": "246360",
    "end": "252280"
  },
  {
    "text": "was a song called uh you're your own kid which talked about giving friendship bracelets to your mates so apparently",
    "start": "252280",
    "end": "258799"
  },
  {
    "text": "that spiked 40% increase there in friendship bracelets um it's the highest gross in concert film of all time so as",
    "start": "258799",
    "end": "265440"
  },
  {
    "text": "well as the people that bought tickets to see Taylor Swift around 250 million dollars was generated from people buying",
    "start": "265440",
    "end": "272600"
  },
  {
    "text": "tickets to see the movie of uh of the concert um the US Travel Association",
    "start": "272600",
    "end": "278840"
  },
  {
    "text": "estimated that it added around um 10 billion to the economy as well through",
    "start": "278840",
    "end": "284039"
  },
  {
    "text": "things like people purchasing travel hotels and food when they went to concerts so real injection there to the",
    "start": "284039",
    "end": "291360"
  },
  {
    "text": "uh economy um and the seismic activity from Taylor Swift fans dancing around",
    "start": "291360",
    "end": "297560"
  },
  {
    "text": "and bouncing quite literally creat Creed an earthquake so that actually measured on the RoR scale so it it's huge so for",
    "start": "297560",
    "end": "305080"
  },
  {
    "text": "many many uh fans across the world of tayor Swift this was sort of the greatest thing that's ever happened to",
    "start": "305080",
    "end": "310160"
  },
  {
    "text": "her to them rather and this has also touched many many other areas but for some Taylor Swift fans it wasn't such a",
    "start": "310160",
    "end": "317440"
  },
  {
    "text": "great story they didn't have such a great event um and let's start with with sort of setting the scene um for the",
    "start": "317440",
    "end": "324000"
  },
  {
    "text": "eras tour so three and a half million fans registered for pre-sale um now our",
    "start": "324000",
    "end": "332560"
  },
  {
    "text": "ticket Merchants that were supporting this pre-sale thought okay three and a half million that's an awful lot given that um we actually don't have that many",
    "start": "332560",
    "end": "339440"
  },
  {
    "text": "tickets so what we're going to do is we're going to divide these fans into two buckets so bucket one million and a",
    "start": "339440",
    "end": "345280"
  },
  {
    "text": "half fans who would be granted pre-sale access and then we had another 2 million fans who would get access to pre-sale at",
    "start": "345280",
    "end": "351759"
  },
  {
    "text": "some point in the future some sort of pre-sale event so already from an IT planning perspective and our it systems",
    "start": "351759",
    "end": "358000"
  },
  {
    "text": "that are going to support the process of actually buying a ticket we've we've done some pre-planning and we feel",
    "start": "358000",
    "end": "364520"
  },
  {
    "text": "pretty confident that we're going to have a million and a half fans who are going to be hitting our pre-sale systems",
    "start": "364520",
    "end": "370080"
  },
  {
    "text": "and trying to purchase um a ticket on pre-sale day um and these numbers that I'm about to talk uh to on this",
    "start": "370080",
    "end": "377199"
  },
  {
    "text": "particular slide can all be found in an article on Sky Sky News which I've referenced at the bottom of the article",
    "start": "377199",
    "end": "382400"
  },
  {
    "text": "if you want to read a little bit more um unfortunately this was not the story uh for many many Taylor Swift fans um so",
    "start": "382400",
    "end": "390000"
  },
  {
    "text": "for our ticket Merchants that were supporting this pre-sale um they got around three and a half billion uh",
    "start": "390000",
    "end": "396919"
  },
  {
    "text": "system requests that actually hit their systems so this is way way more than",
    "start": "396919",
    "end": "401960"
  },
  {
    "text": "they are expecting so in terms of the ticket Merchants that were supporting the pre-sale event um this was about",
    "start": "401960",
    "end": "408080"
  },
  {
    "text": "four times the peak traffic that they'd ever seen on their ticket systems before so huge amount of load there on their it",
    "start": "408080",
    "end": "415240"
  },
  {
    "text": "systems um and this can be gener well really down to a number of different reasons um so one our very keen pre-sale",
    "start": "415240",
    "end": "424120"
  },
  {
    "text": "fans sharing their pre-sale access with their friends um having lots and lots of",
    "start": "424120",
    "end": "429560"
  },
  {
    "text": "browsers open because they were so Keen to get pre-sale and also uh the ticket Merchants believe that Bots played a",
    "start": "429560",
    "end": "435720"
  },
  {
    "text": "huge part in this as well um so 1.5 million fans turned into way way more",
    "start": "435720",
    "end": "441680"
  },
  {
    "text": "traffic than we were we were expecting um and Sky News actually estimate that",
    "start": "441680",
    "end": "447599"
  },
  {
    "text": "if um Taylor had wanted to fulfill all of the requests on that day she would",
    "start": "447599",
    "end": "453720"
  },
  {
    "text": "actually have to run her era's tour 20 times in order to satisfy all that demand so it's a huge huge amount so we",
    "start": "453720",
    "end": "461120"
  },
  {
    "text": "went from having this quite safe uh event where we knew or had an idea",
    "start": "461120",
    "end": "466720"
  },
  {
    "text": "anyway of how much traffic um and load our it systems would experience to something that was that was nearly",
    "start": "466720",
    "end": "473000"
  },
  {
    "text": "unprecedented so more than four times more than our Peak traffic and we've been able to handle um so you might ask",
    "start": "473000",
    "end": "480039"
  },
  {
    "text": "yourself could pre-scaling really have solved this we knew when pre-sale was going to happen for the tickets we knew",
    "start": "480039",
    "end": "486400"
  },
  {
    "text": "how much traffic we were going to expect we had some scaling mechanisms in place you know surely we should have been able",
    "start": "486400",
    "end": "492319"
  },
  {
    "text": "to to handle this and there are a couple of reasons why we couldn't um so first off the traffic estimates completely",
    "start": "492319",
    "end": "499639"
  },
  {
    "text": "wrong we didn't really account all the swifties sharing the link with one another we didn't account for the Bots",
    "start": "499639",
    "end": "505159"
  },
  {
    "text": "we didn't account for all that additional traffic that we would get and certainly didn't account for four times",
    "start": "505159",
    "end": "510360"
  },
  {
    "text": "more than our Peak traffic than we were expecting um some of the systems that make up that endtoend journey of",
    "start": "510360",
    "end": "517080"
  },
  {
    "text": "purchasing a ticket aren't these lovely Loosely coupled modules um that can be",
    "start": "517080",
    "end": "523240"
  },
  {
    "text": "scaled and twin tinkered and changed sometimes we do have tightly coupled components that make up that Journey",
    "start": "523240",
    "end": "529839"
  },
  {
    "text": "perhaps we have applications that have an inbuilt queue they haven't sort of externalize that queue and that means",
    "start": "529839",
    "end": "535640"
  },
  {
    "text": "they have a high BL blast radius if that particular application has a problem",
    "start": "535640",
    "end": "541279"
  },
  {
    "text": "um as I mentioned today we do see traditional scaling mechanisms rely on",
    "start": "541279",
    "end": "547000"
  },
  {
    "text": "things like utilization so we'll wait until an average utilization hits a",
    "start": "547000",
    "end": "552360"
  },
  {
    "text": "particular threshold and then we'll scale but what we don't realize is that at that point say for example we're",
    "start": "552360",
    "end": "558519"
  },
  {
    "text": "scaling our it systems at maybe 80% utilization at 80% we might already have",
    "start": "558519",
    "end": "564600"
  },
  {
    "text": "some very sad upset Taylor Swift fans that the ticket systems that they're interacting with are running slowly so",
    "start": "564600",
    "end": "570560"
  },
  {
    "text": "nothing about that 80% really tells us the experience that our Taylor Swift fans are happening they might already be",
    "start": "570560",
    "end": "576120"
  },
  {
    "text": "unhappy they might have already taken to X and whatever social platform swifties use to vent their frustration at their",
    "start": "576120",
    "end": "583000"
  },
  {
    "text": "experience so far and also in that ticket purchasing Journey we have many dependent systems",
    "start": "583000",
    "end": "589800"
  },
  {
    "text": "that we're interacting with as a ticket Merchant or a ticket retailer rather it's not only you that's part of that",
    "start": "589800",
    "end": "595800"
  },
  {
    "text": "journey to actually purchase a ticket so once you're Swift has selected their ticket added it to",
    "start": "595800",
    "end": "601839"
  },
  {
    "text": "their basket they then need to pay for this ticket so that involves a whole other set of systems which is something",
    "start": "601839",
    "end": "607880"
  },
  {
    "text": "that I kind of want to step through and explore as a bit of a journey today because as a ticket retailer maybe you",
    "start": "607880",
    "end": "614120"
  },
  {
    "text": "pre-scale maybe you know what traffic is about to hit you but these other dependent systems um may",
    "start": "614120",
    "end": "620399"
  },
  {
    "text": "not so if we think about a payment Journey for our Taylor Swift fan there",
    "start": "620399",
    "end": "625600"
  },
  {
    "text": "because there were many fans who got to the point where they got their Taylor Swift ticket they added it to their",
    "start": "625600",
    "end": "630880"
  },
  {
    "text": "basket they entered their credit card information they're super happy they've clicked",
    "start": "630880",
    "end": "636800"
  },
  {
    "text": "pay minutes pass and then bang they see a red text error code don't know what it",
    "start": "636800",
    "end": "643000"
  },
  {
    "text": "is and they get bumped right back to the queue again and they suddenly see you are user 182,183",
    "start": "643000",
    "end": "650880"
  },
  {
    "text": "maybe weren't expecting 3.5 billion system requests to hit them so I want to",
    "start": "660160",
    "end": "666720"
  },
  {
    "text": "step through that payment Journey a little bit so we've got our swifties we've got our ticket buyers um we've got",
    "start": "666720",
    "end": "672320"
  },
  {
    "text": "um the bank that they're using um so these people have a credit card and when they make payments on their credit card",
    "start": "672320",
    "end": "678720"
  },
  {
    "text": "they're going to be interacting with a particular payment um Network we also have our ticket Merchant you know these",
    "start": "678720",
    "end": "684079"
  },
  {
    "text": "are the people that have our tickets um and then we have what's called a merchant acquiring bank and these these",
    "start": "684079",
    "end": "689600"
  },
  {
    "text": "are the institutions or entities that are authorized um to take payments on",
    "start": "689600",
    "end": "695480"
  },
  {
    "text": "behalf of like uh Visa Mastercard these sorts of these sorts of entities so",
    "start": "695480",
    "end": "700639"
  },
  {
    "text": "these are all the players or the actors really in our journey to actually purchase our Taylor Swift",
    "start": "700639",
    "end": "706200"
  },
  {
    "text": "ticket um and what will happen um when we are stepping through this journey is",
    "start": "706200",
    "end": "711760"
  },
  {
    "text": "that our ticket buyers are going to interact with our ticket Merchant and they're going to give their credit card information our ticket Merchant is going",
    "start": "711760",
    "end": "718480"
  },
  {
    "text": "to interact with our our Merchant acquiring Bank um so that they can grab",
    "start": "718480",
    "end": "723800"
  },
  {
    "text": "um using whatever uh card scheme that our ticket buyer is using um to grab",
    "start": "723800",
    "end": "728920"
  },
  {
    "text": "those funds the merchant acquiring bank is going to communicate across our different payment networks which will",
    "start": "728920",
    "end": "734279"
  },
  {
    "text": "then communicate with the card issuing Bank um and finally that will send uh a message back to our Merchant acquiring",
    "start": "734279",
    "end": "741800"
  },
  {
    "text": "bank and then back to our ticket Merchant to say whether this transaction is good and whether this person has",
    "start": "741800",
    "end": "747360"
  },
  {
    "text": "sufficient funds in order to purchase this this ticket so it's this Merchant acquiring bank that I really want to",
    "start": "747360",
    "end": "752519"
  },
  {
    "text": "look at because if we think about these dependent systems in our Taylor Swift payment Journey um maybe our ticket",
    "start": "752519",
    "end": "758920"
  },
  {
    "text": "Merchant has did some pre-scaling because we had our pre-sale access we had users signed up we knew how many",
    "start": "758920",
    "end": "764880"
  },
  {
    "text": "people um were're going to be hitting our our ticket systems but did the merchant acquiring bank now um this",
    "start": "764880",
    "end": "770959"
  },
  {
    "text": "isn't based on an actual uh root cause analysis or postmortem of what happened during the Taylor Swift ticket sale this",
    "start": "770959",
    "end": "777240"
  },
  {
    "text": "is just an example scenario um but I do urge you to go and read some of those post postmortem to to learn a bit more",
    "start": "777240",
    "end": "783360"
  },
  {
    "text": "about this but if we double click then on our Merchant acquiring uh bank so we",
    "start": "783360",
    "end": "788560"
  },
  {
    "text": "have our actors in This in in this journey our swifties our ticket Merchant card issuer the payment networks and",
    "start": "788560",
    "end": "795240"
  },
  {
    "text": "sales and then our our Merchant Bank that's acting on on behalf of zvs as our MasterCard to collect those payments so",
    "start": "795240",
    "end": "802360"
  },
  {
    "text": "uh our swifties will make a payment uh for their Tailor Swift tickets uh we've got here $100 if anybody is is familiar",
    "start": "802360",
    "end": "809800"
  },
  {
    "text": "they were a lot more than $100 but that's you know something else for Taylor to talk about with her tour company um but we've we've authorized uh",
    "start": "809800",
    "end": "816920"
  },
  {
    "text": "we want to pay $100 for our tickets um so our ticket Merchant then um communicates with our acquiring bank and",
    "start": "816920",
    "end": "822959"
  },
  {
    "text": "says can you authorize this much money and our acquiring bank has uh all of their payment systems their clearing and",
    "start": "822959",
    "end": "829160"
  },
  {
    "text": "settlement systems um containerized um and they've deployed those onto kubernetes this is kubernetes talk so",
    "start": "829160",
    "end": "836040"
  },
  {
    "text": "that's where they're going to put those um so we're communicating with our acquiring bank and saying hey we want",
    "start": "836040",
    "end": "841360"
  },
  {
    "text": "you to authorize this um and our acquiring bank has started to adopt EV driven architectures",
    "start": "841360",
    "end": "847120"
  },
  {
    "text": "so let's imagine um they post an event um to some sort of uh stream in this",
    "start": "847120",
    "end": "852240"
  },
  {
    "text": "case maybe they're using some sort of broker or Kinesis something similar um and then the acquiring bank will then",
    "start": "852240",
    "end": "857959"
  },
  {
    "text": "communicate through the payment networks back with the card issuer to say can you authorize this much money for this",
    "start": "857959",
    "end": "864920"
  },
  {
    "text": "ticket that payment's approved that generates another event um and we then send uh a notification back to the",
    "start": "864920",
    "end": "872199"
  },
  {
    "text": "ticket Merchant to say this this amount is okay um at that point our ticket",
    "start": "872199",
    "end": "877360"
  },
  {
    "text": "Merchants like okay we know the money's good let's tell the swifties that you",
    "start": "877360",
    "end": "882480"
  },
  {
    "text": "know they've got their tickets um and then the Taylor Swift fans Rejoice turn to x with in happiness uh and then",
    "start": "882480",
    "end": "889399"
  },
  {
    "text": "behind the scenes um that payment is actually initiated from our Merchant",
    "start": "889399",
    "end": "894480"
  },
  {
    "text": "through their acquiring bank that payment's captured and then the clearing and settlement system system um will uh",
    "start": "894480",
    "end": "901040"
  },
  {
    "text": "kick in um to ensure that everybody knows that this payment has been made this payment um is taken then from our",
    "start": "901040",
    "end": "909040"
  },
  {
    "text": "Swifty bank accounts um a bit is trimmed off the top as a fee",
    "start": "909040",
    "end": "917000"
  },
  {
    "text": "um from our acquiring Bank who have a fee for their particular services but this is all driven through a series of",
    "start": "917000",
    "end": "923440"
  },
  {
    "text": "messages and Communications over the payment networks and it's generating a series of events so so the events for um",
    "start": "923440",
    "end": "930600"
  },
  {
    "text": "yes the payment is approved the payment's authorized the payment has cleared in my system the payment has",
    "start": "930600",
    "end": "936160"
  },
  {
    "text": "cleared in your system that payment is now settled this has all generated a a series um of uh",
    "start": "936160",
    "end": "943759"
  },
  {
    "text": "events and our acquiring bank has containerized all of their systems that can help support this process and",
    "start": "943759",
    "end": "951120"
  },
  {
    "text": "they've deployed them to kubernetes so now if we think about our Taylor Swift problem we now want to ensure that we've",
    "start": "951120",
    "end": "957800"
  },
  {
    "text": "scaled uh what we've deployed to kubernetes so if we think for a second",
    "start": "957800",
    "end": "964079"
  },
  {
    "start": "962000",
    "end": "1426000"
  },
  {
    "text": "then logically about kubernetes and the different bits that make up kubernetes um so first of all we have our",
    "start": "964079",
    "end": "969680"
  },
  {
    "text": "kubernetes control plane and if you are um a user of Amazon eks which is our",
    "start": "969680",
    "end": "974959"
  },
  {
    "text": "elastic kubernetes service when you're using Amazon eks in region you get a managed kubernetes control plane and",
    "start": "974959",
    "end": "981360"
  },
  {
    "text": "your kubernetes control plane is made up of uh things like an API server a",
    "start": "981360",
    "end": "986639"
  },
  {
    "text": "scheduler um an etcd layer to manage the state of your kubernetes cluster if",
    "start": "986639",
    "end": "991959"
  },
  {
    "text": "you're using something like Amazon eks all of this is going to be um managed for you um but when you're thinking",
    "start": "991959",
    "end": "997800"
  },
  {
    "text": "about scaling you need to also think about scaling of your um control plane if you are using um something like uh",
    "start": "997800",
    "end": "1005360"
  },
  {
    "text": "cops kubernetes or a client Custer or something like that you then have your data plane and this is your computes",
    "start": "1005360",
    "end": "1011680"
  },
  {
    "text": "that actually runs your workload so for your containerized application um this is the the layer um that's going to Prov",
    "start": "1011680",
    "end": "1018920"
  },
  {
    "text": "provide compute to your workload really what we're talking about here is like your your worker nodes really that that make up your cluster um we then have",
    "start": "1018920",
    "end": "1026120"
  },
  {
    "text": "cluster services and these are suppose applications extensions add-ons that you",
    "start": "1026120",
    "end": "1031558"
  },
  {
    "text": "deploy onto your cluster that provide functionality to your workloads so this is going to be things like C DNS or",
    "start": "1031559",
    "end": "1038199"
  },
  {
    "text": "scalers uh which is the case in this talk that I want to double click on and then we have your workloads themselves",
    "start": "1038199",
    "end": "1043640"
  },
  {
    "text": "so if you're the merchant uh if you're the Merchant Bank these are going to be your payment clearing settlement systems",
    "start": "1043640",
    "end": "1049840"
  },
  {
    "text": "that are containerized and deployed to your uh your cluster so we're going to explore the",
    "start": "1049840",
    "end": "1056080"
  },
  {
    "text": "scaling of your workloads and then the scaling of the data plane um to explore that um",
    "start": "1056080",
    "end": "1063760"
  },
  {
    "text": "today so let's start then with the scaling of your workloads so you've got",
    "start": "1065360",
    "end": "1070480"
  },
  {
    "text": "these different payment systems that are going to handle all these payment transactions for all these Taylor Swift fans buying their tickets um and there",
    "start": "1070480",
    "end": "1078039"
  },
  {
    "text": "are different mechan mechanisms that you can leverage in kubernetes to scale uh your applications um and all of those uh",
    "start": "1078039",
    "end": "1085240"
  },
  {
    "text": "systems will essentially scale the configuration that's associated with the deployment that you've made to",
    "start": "1085240",
    "end": "1090559"
  },
  {
    "text": "kubernetes so first of all we have horizontal pod autoscaler um now this is",
    "start": "1090559",
    "end": "1095600"
  },
  {
    "text": "all all about how do we scale your application horizontally so how can we",
    "start": "1095600",
    "end": "1101360"
  },
  {
    "text": "add more instances of your application um or replicas in in kubernetes",
    "start": "1101360",
    "end": "1106919"
  },
  {
    "text": "terminology um how can we add more of those as your application is starting to",
    "start": "1106919",
    "end": "1112120"
  },
  {
    "text": "uh experience load um and know knows it needs to scale we then have vertical pod",
    "start": "1112120",
    "end": "1118600"
  },
  {
    "text": "autoscaler um which isn't concerned with adding more instances or replicas of your application it's actually concerned",
    "start": "1118600",
    "end": "1125400"
  },
  {
    "text": "with how do we give more resource to your application how do we give more CPU um and memory and then we have kadada",
    "start": "1125400",
    "end": "1132480"
  },
  {
    "text": "which is our kubernetes event driven autoscaling um so both horizontal pod",
    "start": "1132480",
    "end": "1137640"
  },
  {
    "text": "autoscaler and ver called pod autoscaler interact with the kubernetes metric server which means that they get access",
    "start": "1137640",
    "end": "1144320"
  },
  {
    "text": "to the metrics that kubernetes exposes to them and in short this really means CPU and memory but we know that our",
    "start": "1144320",
    "end": "1153640"
  },
  {
    "text": "credit card transaction is generating lots of events so actually we don't",
    "start": "1153640",
    "end": "1158919"
  },
  {
    "text": "necessarily want to be scaling based on CPU and memory we want to be scaling",
    "start": "1158919",
    "end": "1164000"
  },
  {
    "text": "based on these events that are happening in our system and and cader is an approach that allows us to do that and",
    "start": "1164000",
    "end": "1169120"
  },
  {
    "text": "that's what we're going to be deep diving into today but if you scaled all your workloads you still need somewhere",
    "start": "1169120",
    "end": "1175080"
  },
  {
    "text": "for them to run so this is your data plane these are your worker nodes and when you've got lots of instances of",
    "start": "1175080",
    "end": "1180480"
  },
  {
    "text": "your application um you're also going to need to increase or consider increasing or decreasing the size of your data",
    "start": "1180480",
    "end": "1187400"
  },
  {
    "text": "plane um and there are two approaches here that you could leverage to scale the data plane of your CU benetti's",
    "start": "1187400",
    "end": "1193120"
  },
  {
    "text": "cluster so the first is cluster autoscaler um and this is all about how do we add",
    "start": "1193120",
    "end": "1199280"
  },
  {
    "text": "like or similar compute into your cluster to provide more more compute um",
    "start": "1199280",
    "end": "1204880"
  },
  {
    "text": "to run those containerized workloads we then have car uh Carpenter which I'm also going to be diving into a little",
    "start": "1204880",
    "end": "1211280"
  },
  {
    "text": "bit today this is what we like to consider to be application Centric scaling for your data plane so cluster",
    "start": "1211280",
    "end": "1218320"
  },
  {
    "text": "Auto scaler will work based on a logical configuration that you've defined for your nose in your cluster um whereas",
    "start": "1218320",
    "end": "1225280"
  },
  {
    "text": "Carpenter will Scale based on what your work actually need and I will explain a",
    "start": "1225280",
    "end": "1230960"
  },
  {
    "text": "little bit more about that shortly so let's go back to application scaling then so as we've said this is all about",
    "start": "1230960",
    "end": "1238000"
  },
  {
    "text": "scaling um your containerized workload itself so this is those those Payment",
    "start": "1238000",
    "end": "1243520"
  },
  {
    "text": "Systems those settlement and clearing systems that are going to help us buy our tickets um how do we how do we scale",
    "start": "1243520",
    "end": "1249440"
  },
  {
    "text": "those so HPA and um vpa interacts with the kubernetes metric server so they're",
    "start": "1249440",
    "end": "1256679"
  },
  {
    "text": "using really CPU and memory to understand whether your application needs to scale or not um HPA will scale",
    "start": "1256679",
    "end": "1265520"
  },
  {
    "text": "the number of replicas of your application so once HPA kicks in you might go from one replica to two or from",
    "start": "1265520",
    "end": "1272880"
  },
  {
    "text": "two to four and it will scale the number of replicas horizontally vpa Works a little bit",
    "start": "1272880",
    "end": "1278960"
  },
  {
    "text": "differently as I mentioned it's going to add more resource to your deployment so it's going to increase the amount of CPU",
    "start": "1278960",
    "end": "1285120"
  },
  {
    "text": "and memory um that is provided to your particular deployment it does this dynamically you don't need",
    "start": "1285120",
    "end": "1291960"
  },
  {
    "text": "to go and change your configuration to say oh no my application suddenly resource constrained let me let me give",
    "start": "1291960",
    "end": "1298720"
  },
  {
    "text": "it some more the vpa system is going to do this for you um now in the current version of kubernetes this involves",
    "start": "1298720",
    "end": "1305360"
  },
  {
    "text": "kubernetes restarting that pod so that definitely is something for you to be aware of uh there is a feature on the",
    "start": "1305360",
    "end": "1311159"
  },
  {
    "text": "kubernetes backlog so that this is done dynamically so it will just happen magically in the background now you",
    "start": "1311159",
    "end": "1317840"
  },
  {
    "text": "might be thinking why would I need to use vpa why wouldn't I just use horizontal pod autoscaling",
    "start": "1317840",
    "end": "1324840"
  },
  {
    "text": "I've got my nicely nice kind of well architected Loosely coupled modularized",
    "start": "1324840",
    "end": "1330400"
  },
  {
    "text": "payment system why would I need to use vpa um and we do see customers at AWS",
    "start": "1330400",
    "end": "1336919"
  },
  {
    "text": "use vpa um in a couple of different scenarios so first off we see customers",
    "start": "1336919",
    "end": "1342000"
  },
  {
    "text": "using vpa when they are right at the beginning of their application Journey um and they don't fully understand at",
    "start": "1342000",
    "end": "1348240"
  },
  {
    "text": "that Point as to what the CPU and memory requirements are for their workloads so vpa is a great way to to figure that out",
    "start": "1348240",
    "end": "1356000"
  },
  {
    "text": "so we do see lots of customers that use vpa in like sandbox or testing environments run some load tests to get",
    "start": "1356000",
    "end": "1362480"
  },
  {
    "text": "an idea of what their application needs there are also many customers who",
    "start": "1362480",
    "end": "1368200"
  },
  {
    "text": "are running containerized uh applications or pieces of software that they've purchased from vendors so they",
    "start": "1368200",
    "end": "1374919"
  },
  {
    "text": "are not the ones who are building um that that software that's going into that container and that happens quite a",
    "start": "1374919",
    "end": "1381679"
  },
  {
    "text": "lot when we think about financial uh transaction processing lots of the systems that are run by um our financial",
    "start": "1381679",
    "end": "1389320"
  },
  {
    "text": "services customers will be pieces of software that that are purchased and and then containerized so often these are",
    "start": "1389320",
    "end": "1397279"
  },
  {
    "text": "slightly monolithic in nature um which means that actually when you provide more resource to these applications um",
    "start": "1397279",
    "end": "1404960"
  },
  {
    "text": "sometimes it does help them it does help them run and scaling horizontally may not help your particular problem so we",
    "start": "1404960",
    "end": "1411320"
  },
  {
    "text": "do see different types of applications and customers look at the different scalers um but vertical pod autoscaler",
    "start": "1411320",
    "end": "1418720"
  },
  {
    "text": "is all about more resource horizontal pod autoscaler is all about more instances of your",
    "start": "1418720",
    "end": "1424600"
  },
  {
    "text": "application so where does cada fit in then um so both of those interact with",
    "start": "1424600",
    "end": "1430480"
  },
  {
    "start": "1426000",
    "end": "1972000"
  },
  {
    "text": "the kubernetes metric server so they're both using CPU and memory really to scale but we now know in our credit card",
    "start": "1430480",
    "end": "1438039"
  },
  {
    "text": "transaction action system that we we were generating all these events and we want to be event driven we don't want to",
    "start": "1438039",
    "end": "1444600"
  },
  {
    "text": "Scale based on just resource or just load we want to be able to Scale based",
    "start": "1444600",
    "end": "1450600"
  },
  {
    "text": "on something more intelligent perhaps something that that tells us how much",
    "start": "1450600",
    "end": "1455760"
  },
  {
    "text": "work our systems actually need to do so how many people have clicked by now in",
    "start": "1455760",
    "end": "1461039"
  },
  {
    "text": "their ticket basket for example um and kada allows us to do that so it allows",
    "start": "1461039",
    "end": "1466279"
  },
  {
    "text": "us to interact with a number of different event driven or integration services to capture data and metrics and",
    "start": "1466279",
    "end": "1474080"
  },
  {
    "text": "we can use that to tell us when to scale so rather than just using CPU and memory",
    "start": "1474080",
    "end": "1479480"
  },
  {
    "text": "we can look at the number of messages in a que for example um as a trigger to",
    "start": "1479480",
    "end": "1485000"
  },
  {
    "text": "tell us uh when to scale um all of these colored boxes",
    "start": "1485000",
    "end": "1490240"
  },
  {
    "text": "represent a different type of scaler that's available for kada um there are lots of AWS ones available um sqs is is",
    "start": "1490240",
    "end": "1498840"
  },
  {
    "text": "one that's there if you are looking to build an event driven architecture with with AWS and you want to to use sqs",
    "start": "1498840",
    "end": "1505840"
  },
  {
    "text": "there is an sqs scaler available meaning you can look at the number of messages that are in a que and figure out if you",
    "start": "1505840",
    "end": "1512640"
  },
  {
    "text": "need to scale your system based on that so when you deploy kadada to",
    "start": "1512640",
    "end": "1519080"
  },
  {
    "text": "kubernetes um there are three uh key components I suppose that that make that up so we have our scaler so this is our",
    "start": "1519080",
    "end": "1526640"
  },
  {
    "text": "our logical object if you like that um we look at a particular event component",
    "start": "1526640",
    "end": "1531960"
  },
  {
    "text": "so this will be the thing that either looks at sqs or um Kinesis or whatever",
    "start": "1531960",
    "end": "1537240"
  },
  {
    "text": "event technology uh that you're using um we then have um our metrics adapter and",
    "start": "1537240",
    "end": "1542640"
  },
  {
    "text": "that takes the metrics from the scaler and converts them into a form that kubernetes can understand um you then",
    "start": "1542640",
    "end": "1549200"
  },
  {
    "text": "have your controller which then decides based on those metric do we need to do something now it's important to note",
    "start": "1549200",
    "end": "1556360"
  },
  {
    "text": "that K kada itself doesn't actually scale your application what kadada does",
    "start": "1556360",
    "end": "1562399"
  },
  {
    "text": "is it interacts with horizontal pod autoscaler to increase the number of instances of your application so you're",
    "start": "1562399",
    "end": "1569399"
  },
  {
    "text": "still adding and increasing a number of replicas or decreasing perhaps a number of replicas so cader itself isn't",
    "start": "1569399",
    "end": "1576399"
  },
  {
    "text": "actually scaling what we're doing is we're using some of those native scaling systems that already exist on cuetes um",
    "start": "1576399",
    "end": "1583399"
  },
  {
    "text": "to scale our application when you make a deployment to your kubernetes cluster um you will",
    "start": "1583399",
    "end": "1589480"
  },
  {
    "text": "also Define what's called a scaled object uh and this defines the configuration that your application um",
    "start": "1589480",
    "end": "1597440"
  },
  {
    "text": "should scale under and uh we'll drill into that a little bit now so let's imagine that we want to scale our",
    "start": "1597440",
    "end": "1603840"
  },
  {
    "text": "application based on messages in a que perhaps um so we will Define um a",
    "start": "1603840",
    "end": "1609600"
  },
  {
    "text": "configuration um for our given um application and that will use an sqs uh",
    "start": "1609600",
    "end": "1615640"
  },
  {
    "text": "scaler and this is the configuration that we would would use so first of all we would Define our scale Target um so",
    "start": "1615640",
    "end": "1622919"
  },
  {
    "text": "this is the uh the deployment um that we need to be scaling um once we hit our",
    "start": "1622919",
    "end": "1628679"
  },
  {
    "text": "particular parameters um we then have a polling interv interval so how often we want to poll our queue to see if there's",
    "start": "1628679",
    "end": "1636080"
  },
  {
    "text": "any messages in it um we then have a replica count when idle so sometimes",
    "start": "1636080",
    "end": "1642039"
  },
  {
    "text": "when we've got no work for our system to do we want it to scale right down so that's how we control it here because",
    "start": "1642039",
    "end": "1647520"
  },
  {
    "text": "it's not just about scaling out it's also about scaling in as well um and we then have I don't know if everybody can",
    "start": "1647520",
    "end": "1653880"
  },
  {
    "text": "see it right at the bottom of the screen um the source so this actually says which cue you need to go and look at so",
    "start": "1653880",
    "end": "1660840"
  },
  {
    "text": "and you define this with a URL and a name of your particular queue so with this configuration we can say hey for",
    "start": "1660840",
    "end": "1667000"
  },
  {
    "text": "our particular deployment our credit card transaction settlement system processing system whatever it's called",
    "start": "1667000",
    "end": "1673880"
  },
  {
    "text": "we want you to be looking at a particular Quee and that QE could be Taylor Swift payment request QE for for",
    "start": "1673880",
    "end": "1680760"
  },
  {
    "text": "all intents and purposes the great thing with kada is it doesn't just have to react to what's",
    "start": "1680760",
    "end": "1687640"
  },
  {
    "text": "going on live with your particular event integration technology you can also have",
    "start": "1687640",
    "end": "1693120"
  },
  {
    "text": "uh scheduled scaling with cada as well um where you will scale at a particular",
    "start": "1693120",
    "end": "1698600"
  },
  {
    "text": "time and interval so perhaps if you are that um that Merchant Bank or that acquiring bank and you want to scale",
    "start": "1698600",
    "end": "1704919"
  },
  {
    "text": "your payment and settlement systems the day before or a few hours before pre-sale starts this sort of",
    "start": "1704919",
    "end": "1712000"
  },
  {
    "text": "configuration would allow you to do that so you can Define the date and time when you want to when you want to scale the",
    "start": "1712000",
    "end": "1717720"
  },
  {
    "text": "application so those those known events or that planned event that you've got you can also account for those as well",
    "start": "1717720",
    "end": "1724279"
  },
  {
    "text": "you're not just offloading everything um to your event driven scaling so this allows you to scale your",
    "start": "1724279",
    "end": "1730640"
  },
  {
    "text": "workloads based on some event and we know that there are events flying across our our journey when we are making a",
    "start": "1730640",
    "end": "1737679"
  },
  {
    "text": "credit card transaction but this doesn't actually help us if we don't have sufficient compute in our cluster um to",
    "start": "1737679",
    "end": "1745279"
  },
  {
    "text": "actually run these workloads so if we don't have sufficient uh Compu available through our worker nodes our data plane",
    "start": "1745279",
    "end": "1751840"
  },
  {
    "text": "it doesn't matter that we've got this great system in place what we're going to end up with is a load of instances of",
    "start": "1751840",
    "end": "1757080"
  },
  {
    "text": "our application that don't actually run um so that's when we need a data plane scaler now there are two options there",
    "start": "1757080",
    "end": "1763399"
  },
  {
    "text": "cluster autoscaler and Carpenter and what I want to speak to you about now is Carpenter so Carpenter was uh originally",
    "start": "1763399",
    "end": "1771240"
  },
  {
    "text": "um built by AWS it's about 18 months two years ago now um but it's been contributed to the cncf um as a as a",
    "start": "1771240",
    "end": "1780159"
  },
  {
    "text": "project there um so it's open source um and it's what we consider to be application Centric scaling so it adds",
    "start": "1780159",
    "end": "1787679"
  },
  {
    "text": "compute to your cluster based on what your applications need so it's going to look at what your settlement systems",
    "start": "1787679",
    "end": "1793880"
  },
  {
    "text": "your credit card payment systems it's going to look at what they need and scale and add compute to your cluster",
    "start": "1793880",
    "end": "1799919"
  },
  {
    "text": "based on that so the way cluster autoscaler works",
    "start": "1799919",
    "end": "1805039"
  },
  {
    "text": "just to contrast the two um so cluster autoscaler will kick in when you have",
    "start": "1805039",
    "end": "1811960"
  },
  {
    "text": "what we consider to be unschedulable pods so let's imagine um we have either",
    "start": "1811960",
    "end": "1817279"
  },
  {
    "text": "a cader event or there's some sort of resource threshold that's been breached and horizontal uh pod autoscaler has",
    "start": "1817279",
    "end": "1824880"
  },
  {
    "text": "kicked in and said okay we need to increase the number of replicas um the kubernetes scheduler will attempt",
    "start": "1824880",
    "end": "1831840"
  },
  {
    "text": "to schedule those replicas but if there's no compute available or insufficient compute they will just be",
    "start": "1831840",
    "end": "1837720"
  },
  {
    "text": "marked as unschedulable pods um at that point with cluster autoscaler cluster",
    "start": "1837720",
    "end": "1843039"
  },
  {
    "text": "autoscaler will kick in and it will add compute to the cluster now it does that",
    "start": "1843039",
    "end": "1848880"
  },
  {
    "text": "um you in Amazon eks it does that by interacting with what we could call node groups and node groups are I suppose uh",
    "start": "1848880",
    "end": "1856600"
  },
  {
    "text": "logical collect CS of like or similar compute in AWS terms what we're really",
    "start": "1856600",
    "end": "1862360"
  },
  {
    "text": "saying here is um the same ec2 instance type um and you will Define node groups",
    "start": "1862360",
    "end": "1868639"
  },
  {
    "text": "for your cluster so you might have node group one which uses a particular ec2 instance family you might have node",
    "start": "1868639",
    "end": "1874799"
  },
  {
    "text": "group two which uses perhaps um Amazon ec2 spot instances if you want some cost",
    "start": "1874799",
    "end": "1880440"
  },
  {
    "text": "optimization in your cluster but you will have lots of different node group configurations and cluster autoscaler",
    "start": "1880440",
    "end": "1886240"
  },
  {
    "text": "will pick which one of those node group configurations that it wants to increase and that will add compute into your",
    "start": "1886240",
    "end": "1892080"
  },
  {
    "text": "cluster um this is really great when you've only got one node group configuration when you've got lots um",
    "start": "1892080",
    "end": "1898519"
  },
  {
    "text": "that can be a bit of a challenge because you need to give cluster Auto scalers some Clues as to which ones to pick",
    "start": "1898519",
    "end": "1905200"
  },
  {
    "text": "equally the more node group configurations you have um that's going to be more of an overhead for your teams",
    "start": "1905200",
    "end": "1911080"
  },
  {
    "text": "that are looking after their looking after your kubernetes clusters um they're going to have to be aware of all",
    "start": "1911080",
    "end": "1916720"
  },
  {
    "text": "of those node groups when it comes to things like upgrades and patching um",
    "start": "1916720",
    "end": "1921919"
  },
  {
    "text": "equally it means that your teams who are looking after your cluster need to be",
    "start": "1921919",
    "end": "1927039"
  },
  {
    "text": "aware of the types of application deployed to your cluster to make sure that there's the correct type of compute",
    "start": "1927039",
    "end": "1932559"
  },
  {
    "text": "available say if your teams suddenly want to deploy a gen workload uh to",
    "start": "1932559",
    "end": "1938480"
  },
  {
    "text": "their kubernetes cluster and they now need access to gpus for example um you as a kubernetes administrator will then",
    "start": "1938480",
    "end": "1945480"
  },
  {
    "text": "need to create a node group configuration um which adds gpus to your",
    "start": "1945480",
    "end": "1950880"
  },
  {
    "text": "cluster so this is how cluster autoscaler works and where you have a small number of node groups where you've",
    "start": "1950880",
    "end": "1956440"
  },
  {
    "text": "got lots of similar applications that run on the same type of compute th this is great but where you get lots of",
    "start": "1956440",
    "end": "1961559"
  },
  {
    "text": "different types of applications lots of different compute needs actually this can result sometimes in an increased",
    "start": "1961559",
    "end": "1967679"
  },
  {
    "text": "overhead um for your platform teams so Carpenter Works a little bit differently to this um so Carpenter still responds",
    "start": "1967679",
    "end": "1976399"
  },
  {
    "start": "1972000",
    "end": "2399000"
  },
  {
    "text": "to the same events that cluster autoscaler does so we still have these pods um that need to be scheduled and",
    "start": "1976399",
    "end": "1983240"
  },
  {
    "text": "need to run somewhere so cada HPA have kicked in they've done their thing they",
    "start": "1983240",
    "end": "1988440"
  },
  {
    "text": "say we need more of this credit card um processing system whether it's settlement clearing whatever we need",
    "start": "1988440",
    "end": "1994960"
  },
  {
    "text": "more of these and we've now got these pods that need to be scheduled somewhere kubernetes schedulers has tried to",
    "start": "1994960",
    "end": "2000600"
  },
  {
    "text": "schedule them and we haven't got the right compute so at that point Carpenter kicks in uh and what Carpenter does is",
    "start": "2000600",
    "end": "2008039"
  },
  {
    "text": "it communicates um with our AWS eect Fleet API um now when cluster autoscaler",
    "start": "2008039",
    "end": "2015840"
  },
  {
    "text": "kicks in and tries to add compute into your cluster this is an asynchronous call so um it will wait a period of time",
    "start": "2015840",
    "end": "2023600"
  },
  {
    "text": "when it gets a response back can act on that and that ec2 compute is added to",
    "start": "2023600",
    "end": "2029039"
  },
  {
    "text": "your cluster um with Carpenter the fleet API um is a synchronous call so it kind of gets an instant response back so",
    "start": "2029039",
    "end": "2035720"
  },
  {
    "text": "there is a bit of a a Time benefit there um to using this as a way to add compute",
    "start": "2035720",
    "end": "2042960"
  },
  {
    "text": "uh and what Carpenter actually does is it looks at what your pods need so it",
    "start": "2042960",
    "end": "2048118"
  },
  {
    "text": "looks at all the CPU and memory that your pods need to run and then it calculates the right size of ec2",
    "start": "2048119",
    "end": "2054839"
  },
  {
    "text": "instance that should be added to your cluster in order to run those pods so it's not using a predefined",
    "start": "2054839",
    "end": "2061280"
  },
  {
    "text": "configuration that tells you use this ec2 instance with this much CPU in memory it makes that decision",
    "start": "2061280",
    "end": "2068760"
  },
  {
    "text": "and by offloading that decision- making to Carpenter it means that you don't need to have all these predefined node",
    "start": "2068760",
    "end": "2074679"
  },
  {
    "text": "configurations it means that as AWS is updating its ec2 instance types and",
    "start": "2074679",
    "end": "2079919"
  },
  {
    "text": "families you can benefit from all of those because the logic exists within Carpenter because it's communicating",
    "start": "2079919",
    "end": "2086358"
  },
  {
    "text": "with our AWS apis um and what Carpenter does is it picks the right type of compute to add into the cluster based on",
    "start": "2086359",
    "end": "2093000"
  },
  {
    "text": "what the pods need um and it does this in two different ways dependent on which",
    "start": "2093000",
    "end": "2098240"
  },
  {
    "text": "cost strategy you want to use so if you want to use on demand compute Carpenter will pick the cheapest type of ec2",
    "start": "2098240",
    "end": "2105320"
  },
  {
    "text": "instance that is big enough to run your pending pods if you want to use Amazon",
    "start": "2105320",
    "end": "2110800"
  },
  {
    "text": "ec2 spot instances it uses a slightly different what we call capacity optimized strategy where it looks at um",
    "start": "2110800",
    "end": "2118000"
  },
  {
    "text": "the capacity pull the most spot instances available that's also the cheapest so from a cost optimization",
    "start": "2118000",
    "end": "2124119"
  },
  {
    "text": "perspective Carpenter is also really cool as well so not only is it communic unting with that Fleet API which has",
    "start": "2124119",
    "end": "2130320"
  },
  {
    "text": "performance gains over communicating with the standard ec2 API um it's also making a cost decision when you're",
    "start": "2130320",
    "end": "2136880"
  },
  {
    "text": "adding in compute to your cluster because if you suddenly want to scale to handle these millions and millions of",
    "start": "2136880",
    "end": "2143000"
  },
  {
    "text": "Taylor Swift fans that's also going to have an impact on your bottom line in terms of the cost of running um your",
    "start": "2143000",
    "end": "2149280"
  },
  {
    "text": "compute infrastructure um but you do still want to go Carpenter a bit of a steer as to",
    "start": "2149280",
    "end": "2154640"
  },
  {
    "text": "what type of compute um to pick um you want it to pick the right compute to run the pods and the cheapest compute but",
    "start": "2154640",
    "end": "2161599"
  },
  {
    "text": "sometimes there might be additional configurations that you also want to say um maybe there's particular ec2 instance",
    "start": "2161599",
    "end": "2167240"
  },
  {
    "text": "families you want to avoid maybe you've done particular performance testing on",
    "start": "2167240",
    "end": "2172480"
  },
  {
    "text": "some particular spec of compute and you know that that is optimized for your workload so you only want Carpenter to",
    "start": "2172480",
    "end": "2178720"
  },
  {
    "text": "pick that sort of compute and you can do that using um node configurations that you can pass to",
    "start": "2178720",
    "end": "2185880"
  },
  {
    "text": "Carpenter um and for these node configurations there are some different strategies that you can use um what we",
    "start": "2185880",
    "end": "2192680"
  },
  {
    "text": "call single multiple and weighted um and what these do is they tell car they give",
    "start": "2192680",
    "end": "2197720"
  },
  {
    "text": "Carpenter a bit more of a steer so that it knows what type of compute to",
    "start": "2197720",
    "end": "2202839"
  },
  {
    "text": "actually be picking so it's not just going to always pick um the cheapest compute of all the ec2 instance families",
    "start": "2202839",
    "end": "2209520"
  },
  {
    "text": "available it has some steer to say actually avoid these ec2 instances or",
    "start": "2209520",
    "end": "2215720"
  },
  {
    "text": "maybe favor these ec2 instances is because maybe we have some commercial product in place um like an ec2 instance",
    "start": "2215720",
    "end": "2223880"
  },
  {
    "text": "savings plans and we get discount on these ones so these are the ones we want to we want to focus on and uh and we",
    "start": "2223880",
    "end": "2229760"
  },
  {
    "text": "want to pick so you can control what Carpenter is picking but really you're offloading that decision- making to",
    "start": "2229760",
    "end": "2235560"
  },
  {
    "text": "Carpenter so if we think about um our Taylor Swift problem again we now have",
    "start": "2235560",
    "end": "2241160"
  },
  {
    "text": "cada that's going to Scale based on the number of messages in a queue perhaps those messages are I want to buy this",
    "start": "2241160",
    "end": "2247040"
  },
  {
    "text": "ticket now now and we now have Carpenter that's able to pick an ec2 instance that's got enough resource to run all of",
    "start": "2247040",
    "end": "2253960"
  },
  {
    "text": "those replicas that we now want to schedule and it's going to pick the cheapest ec2 instance which is which is",
    "start": "2253960",
    "end": "2259960"
  },
  {
    "text": "really cool so from a configuration perspective it looks a little bit like",
    "start": "2259960",
    "end": "2265800"
  },
  {
    "text": "this where you can be really specific in terms of the type of compute that you",
    "start": "2265800",
    "end": "2270839"
  },
  {
    "text": "want to be added into your cluster or perhaps not added into your cluster so",
    "start": "2270839",
    "end": "2276240"
  },
  {
    "text": "Carpenter actually lets you control that and Carpenter also keeps count of the",
    "start": "2276240",
    "end": "2282280"
  },
  {
    "text": "amount of CPU in your cluster as a total figure it wants to make sure that your cluster has enough resource to run your",
    "start": "2282280",
    "end": "2289160"
  },
  {
    "text": "applications it doesn't mind if this resource is split across one node or 100",
    "start": "2289160",
    "end": "2294200"
  },
  {
    "text": "nodes but it also wants to but it wants to make sure that you keep within the amount of CPU that you need and that can",
    "start": "2294200",
    "end": "2300640"
  },
  {
    "text": "be controlled with a CPU limits configuration",
    "start": "2300640",
    "end": "2305520"
  },
  {
    "text": "Carpenter allows you to control the type of architecture um that you're using so",
    "start": "2308280",
    "end": "2313400"
  },
  {
    "text": "whether you're using um AMD Intel graviton arm you can use all of these",
    "start": "2313400",
    "end": "2319680"
  },
  {
    "text": "different architecture types equally you can use different purchase options um with Carpenter um using the capacity",
    "start": "2319680",
    "end": "2326839"
  },
  {
    "text": "type configuration so you can select if you want to use spot or on demand or both in your in your cluster um now",
    "start": "2326839",
    "end": "2335119"
  },
  {
    "text": "Carpenter is open source um it's available for you to install today on",
    "start": "2335119",
    "end": "2340359"
  },
  {
    "text": "your clusters so you can have a play and you can really see from a performance",
    "start": "2340359",
    "end": "2345520"
  },
  {
    "text": "perspective and scaling perspective how it differs from from cluster autoscaler by running some of those performance",
    "start": "2345520",
    "end": "2351319"
  },
  {
    "text": "tests one of our AWS Heroes about a year ago did run some performance tests using",
    "start": "2351319",
    "end": "2357040"
  },
  {
    "text": "cluster autoscaler and using Carpenter to scale up to 10,000 pods as quickly as",
    "start": "2357040",
    "end": "2362119"
  },
  {
    "text": "possible uh and did see um some performance gains with using Carpenter overcluster Auto scaler so I'd encourage",
    "start": "2362119",
    "end": "2368640"
  },
  {
    "text": "you to go and go and look at that blog and go and test this out for yourself um there are definitely performance gains",
    "start": "2368640",
    "end": "2373960"
  },
  {
    "text": "um to be had there if you want to test out Carpenter and kadada together we do",
    "start": "2373960",
    "end": "2379920"
  },
  {
    "text": "have a GitHub repo available um with some example code which will provision a",
    "start": "2379920",
    "end": "2385359"
  },
  {
    "text": "cluster for you install Carpenter on it install cader on it and an example app",
    "start": "2385359",
    "end": "2390640"
  },
  {
    "text": "so that you can really step through this and uh and see how it works so that's a",
    "start": "2390640",
    "end": "2395760"
  },
  {
    "text": "little bit about Carpenter and K but does this actually solve our Taylor",
    "start": "2395760",
    "end": "2401119"
  },
  {
    "start": "2399000",
    "end": "2562000"
  },
  {
    "text": "Swift problem so bringing it all back to Taylor Swift um so we still have our millions of fans that that want to",
    "start": "2401119",
    "end": "2406800"
  },
  {
    "text": "purchase these tickets you know they fought the Battle of getting access to pre-sale they fought the Battle of",
    "start": "2406800",
    "end": "2412160"
  },
  {
    "text": "getting access to the ticket retailers so that they can add their tickets to their basket and now they want to make",
    "start": "2412160",
    "end": "2417319"
  },
  {
    "text": "that that payment so we have our our Taylor Swift fans who wants their ticket so that they can um change their lives",
    "start": "2417319",
    "end": "2424079"
  },
  {
    "text": "um forever and they want to make that credit card transaction to do that so that's that uh really nice flow diagram",
    "start": "2424079",
    "end": "2429160"
  },
  {
    "text": "we saw at the beginning with the different events passing through um and what we really want uh to",
    "start": "2429160",
    "end": "2435599"
  },
  {
    "text": "happen is that the TS with ran invokes that credit card transactions and then",
    "start": "2435599",
    "end": "2441160"
  },
  {
    "text": "the systems um that support that credit card transaction so those Merchant Bank systems those settlement and payment",
    "start": "2441160",
    "end": "2447760"
  },
  {
    "text": "clearing systems actually scale up based on the user demands so they're not scaling anymore based on some CPU memory",
    "start": "2447760",
    "end": "2456280"
  },
  {
    "text": "threshold or us utilization they're scaling based on the number of events that they need to process and that can",
    "start": "2456280",
    "end": "2462760"
  },
  {
    "text": "be achieved Now using cada um so what could this look like um",
    "start": "2462760",
    "end": "2467839"
  },
  {
    "text": "in practice um so we've got our our Taylor Swift fans who are making a number of credit card",
    "start": "2467839",
    "end": "2473440"
  },
  {
    "text": "transactions um and that is generating an event which is popped on a",
    "start": "2473440",
    "end": "2478760"
  },
  {
    "text": "queue um that Q is being pulled um by",
    "start": "2478760",
    "end": "2483920"
  },
  {
    "text": "kada um so that Q could be Taylor Swift bands wanting to purchase tickets Q name",
    "start": "2483920",
    "end": "2489599"
  },
  {
    "text": "whatever you want to call it so kada recognizes that there's messages now in the queue um and that we we need to",
    "start": "2489599",
    "end": "2496359"
  },
  {
    "text": "scale so kada will interact with horizontal pod autoscaler and that",
    "start": "2496359",
    "end": "2501440"
  },
  {
    "text": "results in pending pods so these are our our payment systems our settlement clearing systems these need to these",
    "start": "2501440",
    "end": "2507599"
  },
  {
    "text": "need to scale and we now have those pending our kubernetes scheduler needs to schedule these so in the first",
    "start": "2507599",
    "end": "2514839"
  },
  {
    "text": "instance the Schuler is going to try and schedule these on the existing capacity that we that we have um but where that",
    "start": "2514839",
    "end": "2521880"
  },
  {
    "text": "capacity doesn't exist Carpenter will now kick in and add",
    "start": "2521880",
    "end": "2527440"
  },
  {
    "text": "the compute that we need in order to schedule these pods so that compute is",
    "start": "2527440",
    "end": "2533160"
  },
  {
    "text": "added in and Carpenter can now schedule these pods on the system so now we have more replicas or more instances of our",
    "start": "2533160",
    "end": "2540480"
  },
  {
    "text": "payment applications to handle and process all of these messages in our queue which ultimately results in",
    "start": "2540480",
    "end": "2547240"
  },
  {
    "text": "messages being passed to our Merchant Bank or our acquiring Bank to help us make um these um these transactions and",
    "start": "2547240",
    "end": "2555440"
  },
  {
    "text": "help our fans actually buy um their",
    "start": "2555440",
    "end": "2560599"
  },
  {
    "text": "tickets so some takeaways uh then and don't worry none of the takeaways are",
    "start": "2561760",
    "end": "2566839"
  },
  {
    "start": "2562000",
    "end": "2716000"
  },
  {
    "text": "actually about uh Taylor Swift um so kadada in in uh conjunction with",
    "start": "2566839",
    "end": "2572920"
  },
  {
    "text": "Carpenter um helps you optimize um the resources in your cluster it's no longer just about um the compute utilization of",
    "start": "2572920",
    "end": "2581240"
  },
  {
    "text": "your cluster it's really about how do I get the right compute in my cluster and how do I get the right number of",
    "start": "2581240",
    "end": "2586839"
  },
  {
    "text": "replicas and instances of my application to support the load um that I actually need to run using Carpenter and kadada",
    "start": "2586839",
    "end": "2594599"
  },
  {
    "text": "together you now have much more of a dynamic scaling system in place you're scaling based on the events that are",
    "start": "2594599",
    "end": "2600920"
  },
  {
    "text": "happening in the outside world you're not scaling based on your infrastructure you're scaling based on the needs of",
    "start": "2600920",
    "end": "2606520"
  },
  {
    "text": "your tailor Swift fans um by utilizing kada with Carpenter",
    "start": "2606520",
    "end": "2611680"
  },
  {
    "text": "um you can actually enhance the performance of your applications um because you're providing the right",
    "start": "2611680",
    "end": "2616920"
  },
  {
    "text": "compute that your applications need you're not adding in compute to your cluster based on this predefined single",
    "start": "2616920",
    "end": "2623319"
  },
  {
    "text": "node configuration you're letting Carpenter pick the compute which means that there's a much more diverse pull um",
    "start": "2623319",
    "end": "2629480"
  },
  {
    "text": "that can be added into your cluster Carpenter will also allow you to",
    "start": "2629480",
    "end": "2634839"
  },
  {
    "text": "simplify the management of the computer in your class um when I was mentioning node pools you",
    "start": "2634839",
    "end": "2640079"
  },
  {
    "text": "will have a configuration based on each one of your node configurations for cluster autoscaler with Carpenter you",
    "start": "2640079",
    "end": "2645920"
  },
  {
    "text": "can have a single node pool configuration or a single Carpenter configuration if you like and that reduces the overhead on your operations",
    "start": "2645920",
    "end": "2652800"
  },
  {
    "text": "teams when they're thinking about things like upgrades and stuff like that um and you can actually start to shift your",
    "start": "2652800",
    "end": "2660640"
  },
  {
    "text": "entire mental model and your approach for scaling so you're now not scaling on CPU and memory you're now SC in on the",
    "start": "2660640",
    "end": "2667640"
  },
  {
    "text": "metrics that actually matter in your system whether that be qpth whether that be a message that exists in something",
    "start": "2667640",
    "end": "2674800"
  },
  {
    "text": "like Kinesis um so you can now start scaling your applications based on the",
    "start": "2674800",
    "end": "2680800"
  },
  {
    "text": "number of Taylor Swift fans that are trying to buy ticket or maybe not the number of Taylor Swift fans maybe the",
    "start": "2680800",
    "end": "2686040"
  },
  {
    "text": "number of Glaston Brew fans that want to that want to buy a ticket maybe the number of Opera fans that won a ticket",
    "start": "2686040",
    "end": "2692000"
  },
  {
    "text": "to the Neville Hall opening of the summer season and um this is the the one event that they they really want to go",
    "start": "2692000",
    "end": "2697800"
  },
  {
    "text": "to um but this is all about how do we move away from this idea of 80%",
    "start": "2697800",
    "end": "2703280"
  },
  {
    "text": "utilization is when we want to scale because at 80% we might already have",
    "start": "2703280",
    "end": "2708559"
  },
  {
    "text": "unhappy Taylor Swift fans and um as we've seen on social media and Twitter",
    "start": "2708559",
    "end": "2713920"
  },
  {
    "text": "nobody wants an upset Taylor Swift fan so thank you very much",
    "start": "2713920",
    "end": "2720960"
  }
]