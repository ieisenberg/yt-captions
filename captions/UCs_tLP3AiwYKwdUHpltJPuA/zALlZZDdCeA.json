[
  {
    "text": "[Applause]",
    "start": "7760",
    "end": "13320"
  },
  {
    "text": "good",
    "start": "13320",
    "end": "14200"
  },
  {
    "text": "afternoon um first of all thank you very",
    "start": "14200",
    "end": "16760"
  },
  {
    "text": "much to the organizers of the conference",
    "start": "16760",
    "end": "19119"
  },
  {
    "text": "for inviting me over uh to give this",
    "start": "19119",
    "end": "22039"
  },
  {
    "text": "talk and the workshop uh yesterday and",
    "start": "22039",
    "end": "25439"
  },
  {
    "text": "now that it's quite a bit further than",
    "start": "25439",
    "end": "27160"
  },
  {
    "text": "it used to be when I was living in",
    "start": "27160",
    "end": "28720"
  },
  {
    "text": "Sydney so it's very nice to be",
    "start": "28720",
    "end": "31920"
  },
  {
    "text": "here what I want to do today is um talk",
    "start": "31920",
    "end": "35840"
  },
  {
    "text": "about our work at ihk on scripting",
    "start": "35840",
    "end": "39320"
  },
  {
    "text": "blockchains so let me ask who has any",
    "start": "39320",
    "end": "43200"
  },
  {
    "text": "experience in programmatically",
    "start": "43200",
    "end": "45559"
  },
  {
    "text": "interacting with a blockchain Bitcoin",
    "start": "45559",
    "end": "47920"
  },
  {
    "text": "ethereum",
    "start": "47920",
    "end": "49280"
  },
  {
    "text": "whatever okay so let me give you a bit",
    "start": "49280",
    "end": "52000"
  },
  {
    "text": "of background so the idea is we have",
    "start": "52000",
    "end": "53879"
  },
  {
    "text": "this leder thing in the middle and um",
    "start": "53879",
    "end": "56840"
  },
  {
    "text": "people have funds cryptocurrency in this",
    "start": "56840",
    "end": "59079"
  },
  {
    "text": "case Adar that's the cryptocurrency of",
    "start": "59079",
    "end": "61440"
  },
  {
    "text": "uh the cadano blockchain and these",
    "start": "61440",
    "end": "64040"
  },
  {
    "text": "people have wallets from which they",
    "start": "64040",
    "end": "66360"
  },
  {
    "text": "issue transactions and these",
    "start": "66360",
    "end": "68439"
  },
  {
    "text": "transactions are recorded on this ler",
    "start": "68439",
    "end": "72400"
  },
  {
    "text": "but they don't overwrite anything",
    "start": "72400",
    "end": "75240"
  },
  {
    "text": "because this data structure is",
    "start": "75240",
    "end": "77600"
  },
  {
    "text": "immutable hello functional",
    "start": "77600",
    "end": "81560"
  },
  {
    "text": "programming so but it's a bit boring to",
    "start": "82479",
    "end": "86400"
  },
  {
    "text": "just have money on this thing right so",
    "start": "86400",
    "end": "89000"
  },
  {
    "text": "maybe we can have some other information",
    "start": "89000",
    "end": "91360"
  },
  {
    "text": "as well maybe what we are using those",
    "start": "91360",
    "end": "93840"
  },
  {
    "text": "funds for or maybe even more general",
    "start": "93840",
    "end": "97600"
  },
  {
    "text": "information maybe we want to track some",
    "start": "97600",
    "end": "100720"
  },
  {
    "text": "uh real world resources and properties",
    "start": "100720",
    "end": "103880"
  },
  {
    "text": "of them for example we could imagine",
    "start": "103880",
    "end": "106759"
  },
  {
    "text": "somebody in this case atast um is",
    "start": "106759",
    "end": "109759"
  },
  {
    "text": "setting selling some Timber to Bob and",
    "start": "109759",
    "end": "113880"
  },
  {
    "text": "Bob sells it on to um Charlie in the",
    "start": "113880",
    "end": "117360"
  },
  {
    "text": "form of a door frame of which he claim",
    "start": "117360",
    "end": "120439"
  },
  {
    "text": "certain properties where where that",
    "start": "120439",
    "end": "122560"
  },
  {
    "text": "Timber came from now if we want to do",
    "start": "122560",
    "end": "125719"
  },
  {
    "text": "this on a letter and we want to be sure",
    "start": "125719",
    "end": "128679"
  },
  {
    "text": "that the parties um actually follow the",
    "start": "128679",
    "end": "132800"
  },
  {
    "text": "constraints they claiming they're",
    "start": "132800",
    "end": "134120"
  },
  {
    "text": "constraining we need something which we",
    "start": "134120",
    "end": "137160"
  },
  {
    "text": "have called validation we need to check",
    "start": "137160",
    "end": "139760"
  },
  {
    "text": "that this information is consistent by",
    "start": "139760",
    "end": "142599"
  },
  {
    "text": "whatever rules uh we impose now that",
    "start": "142599",
    "end": "145800"
  },
  {
    "text": "means that when we construct this",
    "start": "145800",
    "end": "148440"
  },
  {
    "text": "immutable data structure have to check",
    "start": "148440",
    "end": "150480"
  },
  {
    "text": "for every transaction ah it's okay to",
    "start": "150480",
    "end": "153360"
  },
  {
    "text": "put that transaction in there we have to",
    "start": "153360",
    "end": "155440"
  },
  {
    "text": "do that during the construction but",
    "start": "155440",
    "end": "158360"
  },
  {
    "text": "there's other computation too I mean",
    "start": "158360",
    "end": "161239"
  },
  {
    "text": "outside of The Ledger which you can",
    "start": "161239",
    "end": "163280"
  },
  {
    "text": "regard as a glorified database we also",
    "start": "163280",
    "end": "166239"
  },
  {
    "text": "have to do processing we have to get",
    "start": "166239",
    "end": "168319"
  },
  {
    "text": "events we have to submit transactions to",
    "start": "168319",
    "end": "170440"
  },
  {
    "text": "Ledger and so on so really we doing",
    "start": "170440",
    "end": "173200"
  },
  {
    "text": "computation on two places we really need",
    "start": "173200",
    "end": "175519"
  },
  {
    "text": "a proper programming language at this",
    "start": "175519",
    "end": "177440"
  },
  {
    "text": "point and we need it to to be able to",
    "start": "177440",
    "end": "181360"
  },
  {
    "text": "specify computations on both the chain",
    "start": "181360",
    "end": "185040"
  },
  {
    "text": "itself during validation and with the",
    "start": "185040",
    "end": "188959"
  },
  {
    "text": "clients in those cryptographic",
    "start": "188959",
    "end": "192120"
  },
  {
    "text": "wets now these computations on the",
    "start": "192120",
    "end": "195000"
  },
  {
    "text": "server well there's actually not just",
    "start": "195000",
    "end": "197760"
  },
  {
    "text": "one server there are many servers that's",
    "start": "197760",
    "end": "200159"
  },
  {
    "text": "the whole point about a distributed",
    "start": "200159",
    "end": "203120"
  },
  {
    "text": "consensus leure it's uh many servers",
    "start": "203120",
    "end": "207120"
  },
  {
    "text": "collaborate in constructing this uh",
    "start": "207120",
    "end": "209760"
  },
  {
    "text": "mutable data structure so how do we know",
    "start": "209760",
    "end": "213080"
  },
  {
    "text": "nobody's",
    "start": "213080",
    "end": "214400"
  },
  {
    "text": "cheating well that's where the",
    "start": "214400",
    "end": "216360"
  },
  {
    "text": "cryptography comes in and there are",
    "start": "216360",
    "end": "218640"
  },
  {
    "text": "basically two",
    "start": "218640",
    "end": "220159"
  },
  {
    "text": "ways major ways in which prove that all",
    "start": "220159",
    "end": "224680"
  },
  {
    "text": "the parties constructing the chain do",
    "start": "224680",
    "end": "226959"
  },
  {
    "text": "the right thing is uh constructed these",
    "start": "226959",
    "end": "230280"
  },
  {
    "text": "days so on one hand we have what Bitcoin",
    "start": "230280",
    "end": "232799"
  },
  {
    "text": "and ethereum is using and I'm sure",
    "start": "232799",
    "end": "235000"
  },
  {
    "text": "you've read all the headlines about how",
    "start": "235000",
    "end": "237760"
  },
  {
    "text": "much energy this is using and",
    "start": "237760",
    "end": "240360"
  },
  {
    "text": "um that it's ecologically quite",
    "start": "240360",
    "end": "242720"
  },
  {
    "text": "questionable approach and then there's a",
    "start": "242720",
    "end": "245920"
  },
  {
    "text": "second method uh which is called proof",
    "start": "245920",
    "end": "249000"
  },
  {
    "text": "of stake where we use uh the parties",
    "start": "249000",
    "end": "252079"
  },
  {
    "text": "investment in the system instead of",
    "start": "252079",
    "end": "254280"
  },
  {
    "text": "these um proof of work where really uh",
    "start": "254280",
    "end": "257519"
  },
  {
    "text": "we are wasting energy to solve",
    "start": "257519",
    "end": "259479"
  },
  {
    "text": "cryptographic puzzles um just for the",
    "start": "259479",
    "end": "262040"
  },
  {
    "text": "sake of showing that we've invested this",
    "start": "262040",
    "end": "264960"
  },
  {
    "text": "energy so this is basically the setting",
    "start": "264960",
    "end": "268600"
  },
  {
    "text": "in which um our work um is uh",
    "start": "268600",
    "end": "274600"
  },
  {
    "text": "established and this is in the um on top",
    "start": "274600",
    "end": "278280"
  },
  {
    "text": "of the kadano blockchain so what's",
    "start": "278280",
    "end": "280120"
  },
  {
    "text": "kadano kadano is a proof of stake system",
    "start": "280120",
    "end": "283280"
  },
  {
    "text": "so we don't want to waste any money in",
    "start": "283280",
    "end": "285199"
  },
  {
    "text": "fact um a cardano note has been shown to",
    "start": "285199",
    "end": "288000"
  },
  {
    "text": "run on on a a rock pie that's a little",
    "start": "288000",
    "end": "291600"
  },
  {
    "text": "bit bigger than a raspberry pie so you",
    "start": "291600",
    "end": "293759"
  },
  {
    "text": "don't need a lot of energy to run it and",
    "start": "293759",
    "end": "296000"
  },
  {
    "text": "there are all kinds of interesting",
    "start": "296000",
    "end": "297520"
  },
  {
    "text": "properties to uh that block chain which",
    "start": "297520",
    "end": "300160"
  },
  {
    "text": "I don't want to discuss any further what",
    "start": "300160",
    "end": "301880"
  },
  {
    "text": "I'm interested in here is the functional",
    "start": "301880",
    "end": "304240"
  },
  {
    "text": "programming aspect and especially the",
    "start": "304240",
    "end": "306960"
  },
  {
    "text": "scripting on top of the",
    "start": "306960",
    "end": "309280"
  },
  {
    "text": "train",
    "start": "309280",
    "end": "312280"
  },
  {
    "text": "now this work is um has been done by the",
    "start": "312280",
    "end": "316199"
  },
  {
    "text": "Pluto steam I don't want to get all the",
    "start": "316199",
    "end": "317960"
  },
  {
    "text": "credit here it's quite a few people",
    "start": "317960",
    "end": "320080"
  },
  {
    "text": "involved including Phil wler who will",
    "start": "320080",
    "end": "321960"
  },
  {
    "text": "give the keynote tomorrow and",
    "start": "321960",
    "end": "325600"
  },
  {
    "text": "um the system which we're working is on",
    "start": "325600",
    "end": "328800"
  },
  {
    "text": "is called Pluto",
    "start": "328800",
    "end": "330199"
  },
  {
    "text": "and there are three ways in which it um",
    "start": "330199",
    "end": "333800"
  },
  {
    "text": "is fundamentally different to to other",
    "start": "333800",
    "end": "336280"
  },
  {
    "text": "systems which you um which a few people",
    "start": "336280",
    "end": "339160"
  },
  {
    "text": "here have experience with so on one hand",
    "start": "339160",
    "end": "341360"
  },
  {
    "text": "we use functional programming to gain uh",
    "start": "341360",
    "end": "343880"
  },
  {
    "text": "Safety and Security properties and",
    "start": "343880",
    "end": "345880"
  },
  {
    "text": "actually use formal methods to prove",
    "start": "345880",
    "end": "347960"
  },
  {
    "text": "something about them and I will say very",
    "start": "347960",
    "end": "350160"
  },
  {
    "text": "little about this because I don't think",
    "start": "350160",
    "end": "351960"
  },
  {
    "text": "I have to convince anybody here about",
    "start": "351960",
    "end": "354560"
  },
  {
    "text": "the merits of functional programming but",
    "start": "354560",
    "end": "356800"
  },
  {
    "text": "then what I want to really talk about is",
    "start": "356800",
    "end": "358759"
  },
  {
    "text": "the leder architect Ure how this is",
    "start": "358759",
    "end": "361000"
  },
  {
    "text": "really supporting functional programming",
    "start": "361000",
    "end": "363120"
  },
  {
    "text": "and how we are doing this on and off",
    "start": "363120",
    "end": "365160"
  },
  {
    "text": "chain programming um in one framework",
    "start": "365160",
    "end": "368039"
  },
  {
    "text": "all right so the little bit I want to",
    "start": "368039",
    "end": "369960"
  },
  {
    "text": "say about functional programming is we",
    "start": "369960",
    "end": "372199"
  },
  {
    "text": "have to represent those onchain",
    "start": "372199",
    "end": "374680"
  },
  {
    "text": "computations somehow on the leder",
    "start": "374680",
    "end": "377440"
  },
  {
    "text": "because they're executed during",
    "start": "377440",
    "end": "378840"
  },
  {
    "text": "validation so all the servers which",
    "start": "378840",
    "end": "381080"
  },
  {
    "text": "contribute blocks to the blockchain need",
    "start": "381080",
    "end": "383400"
  },
  {
    "text": "have have access to this code typically",
    "start": "383400",
    "end": "387319"
  },
  {
    "text": "uh Bitcoin is using something called",
    "start": "387319",
    "end": "389720"
  },
  {
    "text": "Bitcoin script ethereum is using",
    "start": "389720",
    "end": "391599"
  },
  {
    "text": "something called the ethereum virtual",
    "start": "391599",
    "end": "393199"
  },
  {
    "text": "machine and its instruction sets so",
    "start": "393199",
    "end": "395400"
  },
  {
    "text": "people are really sad in this space on",
    "start": "395400",
    "end": "397800"
  },
  {
    "text": "stack based machines with bu codes and",
    "start": "397800",
    "end": "401120"
  },
  {
    "text": "stuff which is quite complicated so what",
    "start": "401120",
    "end": "404400"
  },
  {
    "text": "we are doing we're using a typed",
    "start": "404400",
    "end": "406720"
  },
  {
    "text": "calculus in fact we using a typed Lambda",
    "start": "406720",
    "end": "409720"
  },
  {
    "text": "calculus as our Intermediate Language",
    "start": "409720",
    "end": "412280"
  },
  {
    "text": "why is that useful well first of all we",
    "start": "412280",
    "end": "415039"
  },
  {
    "text": "don't have to build a complicated",
    "start": "415039",
    "end": "416360"
  },
  {
    "text": "virtual machine we can do with an",
    "start": "416360",
    "end": "419000"
  },
  {
    "text": "abstract implementation of an abstract",
    "start": "419000",
    "end": "421360"
  },
  {
    "text": "machine derived from the semantics of",
    "start": "421360",
    "end": "423840"
  },
  {
    "text": "this",
    "start": "423840",
    "end": "424720"
  },
  {
    "text": "calculus and secondly it we use system F",
    "start": "424720",
    "end": "429319"
  },
  {
    "text": "Omega which is a a well studied system",
    "start": "429319",
    "end": "432879"
  },
  {
    "text": "there are papers books about the",
    "start": "432879",
    "end": "436240"
  },
  {
    "text": "semantic properties so we actually know",
    "start": "436240",
    "end": "438520"
  },
  {
    "text": "a lot about this language much more than",
    "start": "438520",
    "end": "441479"
  },
  {
    "text": "we know say about etherum vertual",
    "start": "441479",
    "end": "443759"
  },
  {
    "text": "machine instruction codes",
    "start": "443759",
    "end": "446639"
  },
  {
    "text": "and this core language it's cement",
    "start": "446639",
    "end": "449599"
  },
  {
    "text": "Antics that's the entire uh it's a C",
    "start": "449599",
    "end": "452919"
  },
  {
    "text": "Machine that's the rules for the",
    "start": "452919",
    "end": "454560"
  },
  {
    "text": "operational semantics and our H",
    "start": "454560",
    "end": "457360"
  },
  {
    "text": "implementation is quite faithful to",
    "start": "457360",
    "end": "459759"
  },
  {
    "text": "these individual rules so if you look at",
    "start": "459759",
    "end": "461599"
  },
  {
    "text": "this uh lat presentation and you look at",
    "start": "461599",
    "end": "464080"
  },
  {
    "text": "the hle code it's quite easy to see that",
    "start": "464080",
    "end": "466720"
  },
  {
    "text": "the two are in correspondence but we",
    "start": "466720",
    "end": "469800"
  },
  {
    "text": "didn't stop there and I think um uh pH",
    "start": "469800",
    "end": "473919"
  },
  {
    "text": "is going to say some more about this",
    "start": "473919",
    "end": "475440"
  },
  {
    "text": "tomorrow we have a formalization of the",
    "start": "475440",
    "end": "478840"
  },
  {
    "text": "meta theore of Pluto core in ACTA and",
    "start": "478840",
    "end": "482120"
  },
  {
    "text": "we're working on using uh our integrated",
    "start": "482120",
    "end": "485800"
  },
  {
    "text": "test infrastructure to automatically",
    "start": "485800",
    "end": "488080"
  },
  {
    "text": "test the H implementation against a",
    "start": "488080",
    "end": "491280"
  },
  {
    "text": "extracted um interpreter from the actor",
    "start": "491280",
    "end": "494360"
  },
  {
    "text": "formalization so that we can be even",
    "start": "494360",
    "end": "497080"
  },
  {
    "text": "more confident about the the those uh",
    "start": "497080",
    "end": "500879"
  },
  {
    "text": "semantics",
    "start": "500879",
    "end": "502639"
  },
  {
    "text": "coinciding so where do we use this",
    "start": "502639",
    "end": "505560"
  },
  {
    "text": "plutus core that's the point where we",
    "start": "505560",
    "end": "507560"
  },
  {
    "text": "have to look at The Ledger",
    "start": "507560",
    "end": "510879"
  },
  {
    "text": "so I presented the letterers as this",
    "start": "510879",
    "end": "515039"
  },
  {
    "text": "conventional um append only data",
    "start": "515039",
    "end": "518200"
  },
  {
    "text": "structure where well what are you",
    "start": "518200",
    "end": "520440"
  },
  {
    "text": "interested in you're interested in the",
    "start": "520440",
    "end": "522560"
  },
  {
    "text": "funds for every single person so this is",
    "start": "522560",
    "end": "525040"
  },
  {
    "text": "a little bit like a setting in a bank",
    "start": "525040",
    "end": "527839"
  },
  {
    "text": "with bank accounts we call this the",
    "start": "527839",
    "end": "530320"
  },
  {
    "text": "account style ler",
    "start": "530320",
    "end": "532399"
  },
  {
    "text": "model now there's actually an",
    "start": "532399",
    "end": "534600"
  },
  {
    "text": "alternative and this is how Bitcoin",
    "start": "534600",
    "end": "537640"
  },
  {
    "text": "represents its uh information as well so",
    "start": "537640",
    "end": "540640"
  },
  {
    "text": "they that's where the structure",
    "start": "540640",
    "end": "542279"
  },
  {
    "text": "originates from and it's a bit more akin",
    "start": "542279",
    "end": "544560"
  },
  {
    "text": "to how you handle Bank notes so imagine",
    "start": "544560",
    "end": "547519"
  },
  {
    "text": "these three people Ellis Bob and Charlie",
    "start": "547519",
    "end": "550000"
  },
  {
    "text": "they actually have these funds in their",
    "start": "550000",
    "end": "552760"
  },
  {
    "text": "hand and then Ellis does a transaction",
    "start": "552760",
    "end": "555959"
  },
  {
    "text": "and pay something to Bob then she needs",
    "start": "555959",
    "end": "558000"
  },
  {
    "text": "change so we need to split this 100 Ada",
    "start": "558000",
    "end": "561320"
  },
  {
    "text": "into the what I'm going to pay and what",
    "start": "561320",
    "end": "563680"
  },
  {
    "text": "I'm going to get back and I'm going to",
    "start": "563680",
    "end": "566079"
  },
  {
    "text": "keep or Al is going to keep and then",
    "start": "566079",
    "end": "568720"
  },
  {
    "text": "when Bel wants to pay he takes the funds",
    "start": "568720",
    "end": "571959"
  },
  {
    "text": "he took from Alis combines them with",
    "start": "571959",
    "end": "573880"
  },
  {
    "text": "what he already has and then again",
    "start": "573880",
    "end": "576480"
  },
  {
    "text": "there's some left of change and the rest",
    "start": "576480",
    "end": "578519"
  },
  {
    "text": "is going to be paid to to Charlie so now",
    "start": "578519",
    "end": "582000"
  },
  {
    "text": "in this model it's less clear who owns",
    "start": "582000",
    "end": "584839"
  },
  {
    "text": "what in fact ownership is defined by the",
    "start": "584839",
    "end": "588240"
  },
  {
    "text": "ability to spend those nodes which",
    "start": "588240",
    "end": "590880"
  },
  {
    "text": "haven't been used yet now this is why",
    "start": "590880",
    "end": "594000"
  },
  {
    "text": "this structure is called an unspent",
    "start": "594000",
    "end": "597240"
  },
  {
    "text": "transaction output",
    "start": "597240",
    "end": "599560"
  },
  {
    "text": "um ler where uh cryptographic proved",
    "start": "599560",
    "end": "603320"
  },
  {
    "text": "that you can spend funds which haven't",
    "start": "603320",
    "end": "605760"
  },
  {
    "text": "been spent in the data structure yet um",
    "start": "605760",
    "end": "609440"
  },
  {
    "text": "defines ownership basically now this",
    "start": "609440",
    "end": "612640"
  },
  {
    "text": "structure is nice because well it's",
    "start": "612640",
    "end": "615600"
  },
  {
    "text": "actually a a data flow graph it's an",
    "start": "615600",
    "end": "618399"
  },
  {
    "text": "inherently functional structure it all",
    "start": "618399",
    "end": "621800"
  },
  {
    "text": "data dependencies are fully explicit",
    "start": "621800",
    "end": "624959"
  },
  {
    "text": "whereas in the out count based model",
    "start": "624959",
    "end": "627240"
  },
  {
    "text": "well you may remember your introdu C to",
    "start": "627240",
    "end": "629640"
  },
  {
    "text": "object oriented programming or we have",
    "start": "629640",
    "end": "632279"
  },
  {
    "text": "accounts we send messages between",
    "start": "632279",
    "end": "634720"
  },
  {
    "text": "accounts it's an inherently",
    "start": "634720",
    "end": "636240"
  },
  {
    "text": "objectoriented imperative model now",
    "start": "636240",
    "end": "639920"
  },
  {
    "text": "we're talking about concurrent",
    "start": "639920",
    "end": "641600"
  },
  {
    "text": "distributed data structure should you",
    "start": "641600",
    "end": "644160"
  },
  {
    "text": "use something based on an objectoriented",
    "start": "644160",
    "end": "647399"
  },
  {
    "text": "mutable state is everywhere model is",
    "start": "647399",
    "end": "649600"
  },
  {
    "text": "that a good",
    "start": "649600",
    "end": "651440"
  },
  {
    "text": "plan I don't think so I rather have the",
    "start": "651440",
    "end": "654240"
  },
  {
    "text": "functional model which has this explicit",
    "start": "654240",
    "end": "657680"
  },
  {
    "text": "data flow structure so this is the data",
    "start": "657680",
    "end": "660760"
  },
  {
    "text": "structure underlying the um cardano leer",
    "start": "660760",
    "end": "664200"
  },
  {
    "text": "but now if you look at the two main uh",
    "start": "664200",
    "end": "668880"
  },
  {
    "text": "most popular blockchains today then",
    "start": "668880",
    "end": "671560"
  },
  {
    "text": "there's Bitcoin which has this utxo",
    "start": "671560",
    "end": "673680"
  },
  {
    "text": "model as I said and then there's",
    "start": "673680",
    "end": "675600"
  },
  {
    "text": "ethereum which uses this account based",
    "start": "675600",
    "end": "678200"
  },
  {
    "text": "model why well because scripting the",
    "start": "678200",
    "end": "682040"
  },
  {
    "text": "scripting functionality of Bitcoin is",
    "start": "682040",
    "end": "683760"
  },
  {
    "text": "really very",
    "start": "683760",
    "end": "685360"
  },
  {
    "text": "limited and ethereum the whole point",
    "start": "685360",
    "end": "688240"
  },
  {
    "text": "about ethereum was",
    "start": "688240",
    "end": "690000"
  },
  {
    "text": "exploring how we can have maximum",
    "start": "690000",
    "end": "693600"
  },
  {
    "text": "programmability on top of a",
    "start": "693600",
    "end": "696079"
  },
  {
    "text": "blockchain and in fact the ethereum",
    "start": "696079",
    "end": "700000"
  },
  {
    "text": "language solidity is so expressive you",
    "start": "700000",
    "end": "702120"
  },
  {
    "text": "can write all this buggy code with which",
    "start": "702120",
    "end": "705079"
  },
  {
    "text": "you can lose millions of dollar isn't",
    "start": "705079",
    "end": "707720"
  },
  {
    "text": "that",
    "start": "707720",
    "end": "710079"
  },
  {
    "text": "great so can't we maybe have the best of",
    "start": "710600",
    "end": "714519"
  },
  {
    "text": "both",
    "start": "714519",
    "end": "715560"
  },
  {
    "text": "words can we have this functional data",
    "start": "715560",
    "end": "718360"
  },
  {
    "text": "structure but with an expressive",
    "start": "718360",
    "end": "720959"
  },
  {
    "text": "contract",
    "start": "720959",
    "end": "722000"
  },
  {
    "text": "language so let me tell you a little bit",
    "start": "722000",
    "end": "725160"
  },
  {
    "text": "something about how this validation",
    "start": "725160",
    "end": "727120"
  },
  {
    "text": "works so if you have a transaction and",
    "start": "727120",
    "end": "729959"
  },
  {
    "text": "you want to spend an unspent output in",
    "start": "729959",
    "end": "733839"
  },
  {
    "text": "black with another input to another",
    "start": "733839",
    "end": "736600"
  },
  {
    "text": "transaction in red then there are some",
    "start": "736600",
    "end": "739720"
  },
  {
    "text": "scripts involved so the output the black",
    "start": "739720",
    "end": "743680"
  },
  {
    "text": "uh Edge has the value which is being",
    "start": "743680",
    "end": "746199"
  },
  {
    "text": "spent and the script in our case in",
    "start": "746199",
    "end": "748360"
  },
  {
    "text": "Pluto coree which checks that they're",
    "start": "748360",
    "end": "751440"
  },
  {
    "text": "spent in a way which is uh agreeable to",
    "start": "751440",
    "end": "755240"
  },
  {
    "text": "ever put this transaction on the chain",
    "start": "755240",
    "end": "758040"
  },
  {
    "text": "and the spending transaction has to",
    "start": "758040",
    "end": "759920"
  },
  {
    "text": "provide another script the Redeemer in",
    "start": "759920",
    "end": "762160"
  },
  {
    "text": "Bitcoin it's called the",
    "start": "762160",
    "end": "763920"
  },
  {
    "text": "witness which then we apply the valid",
    "start": "763920",
    "end": "767079"
  },
  {
    "text": "data to the Redeemer because the valid",
    "start": "767079",
    "end": "769760"
  },
  {
    "text": "data is just a predicate and run this",
    "start": "769760",
    "end": "772600"
  },
  {
    "text": "code and if the result is true well then",
    "start": "772600",
    "end": "776079"
  },
  {
    "text": "the connection is allowed otherwise the",
    "start": "776079",
    "end": "778399"
  },
  {
    "text": "second CR ction the one on the right",
    "start": "778399",
    "end": "780240"
  },
  {
    "text": "hand side is rejected thrown away now",
    "start": "780240",
    "end": "783199"
  },
  {
    "text": "this model is very limited because the",
    "start": "783199",
    "end": "784880"
  },
  {
    "text": "validator has no information whatsoever",
    "start": "784880",
    "end": "788199"
  },
  {
    "text": "about any environment except what's in",
    "start": "788199",
    "end": "791040"
  },
  {
    "text": "the",
    "start": "791040",
    "end": "792279"
  },
  {
    "text": "redeema so let's extend this model a",
    "start": "792279",
    "end": "794800"
  },
  {
    "text": "little bit let's give the valid data a",
    "start": "794800",
    "end": "796560"
  },
  {
    "text": "little bit more information so in",
    "start": "796560",
    "end": "798839"
  },
  {
    "text": "addition to the actual valid data",
    "start": "798839",
    "end": "800519"
  },
  {
    "text": "computation we provided with some user",
    "start": "800519",
    "end": "804680"
  },
  {
    "text": "defined data it the for example state of",
    "start": "804680",
    "end": "808480"
  },
  {
    "text": "a contra that is currently being",
    "start": "808480",
    "end": "811440"
  },
  {
    "text": "processed and also let's Supply it with",
    "start": "811440",
    "end": "814839"
  },
  {
    "text": "all the information about the current",
    "start": "814839",
    "end": "816440"
  },
  {
    "text": "transaction then validation gets",
    "start": "816440",
    "end": "818800"
  },
  {
    "text": "slightly more complicated we apply the",
    "start": "818800",
    "end": "821120"
  },
  {
    "text": "valid dator to um the Redeemer as before",
    "start": "821120",
    "end": "826480"
  },
  {
    "text": "to the value value the data this extra",
    "start": "826480",
    "end": "829720"
  },
  {
    "text": "data and the transaction",
    "start": "829720",
    "end": "831959"
  },
  {
    "text": "information now this we call the",
    "start": "831959",
    "end": "834360"
  },
  {
    "text": "extended utxo model and it leads to",
    "start": "834360",
    "end": "839279"
  },
  {
    "text": "vastly more expressive scripting",
    "start": "839279",
    "end": "841320"
  },
  {
    "text": "capabilities but it still retains the",
    "start": "841320",
    "end": "843839"
  },
  {
    "text": "same functional data flow structure as",
    "start": "843839",
    "end": "846639"
  },
  {
    "text": "the original utxl model in fact and",
    "start": "846639",
    "end": "849680"
  },
  {
    "text": "that's very crucial computations",
    "start": "849680",
    "end": "853000"
  },
  {
    "text": "evaluation of valid data to Redeemer",
    "start": "853000",
    "end": "855680"
  },
  {
    "text": "applications they're purely functional",
    "start": "855680",
    "end": "858720"
  },
  {
    "text": "pure in the sense of no side",
    "start": "858720",
    "end": "862079"
  },
  {
    "text": "effects so as a",
    "start": "862079",
    "end": "864320"
  },
  {
    "text": "result as a side effect of",
    "start": "864320",
    "end": "867600"
  },
  {
    "text": "that these comp computation which we",
    "start": "867600",
    "end": "869880"
  },
  {
    "text": "have to execute to check that we can",
    "start": "869880",
    "end": "872759"
  },
  {
    "text": "make a connection between two",
    "start": "872759",
    "end": "873959"
  },
  {
    "text": "transactions is a pure",
    "start": "873959",
    "end": "876399"
  },
  {
    "text": "expression which means if I execute this",
    "start": "876399",
    "end": "880279"
  },
  {
    "text": "thing and I use the same transaction and",
    "start": "880279",
    "end": "883279"
  },
  {
    "text": "the same value then I will always get",
    "start": "883279",
    "end": "886399"
  },
  {
    "text": "the same result but it will also always",
    "start": "886399",
    "end": "891040"
  },
  {
    "text": "take exactly the same",
    "start": "891040",
    "end": "893600"
  },
  {
    "text": "resources so if I want to know how much",
    "start": "893600",
    "end": "896560"
  },
  {
    "text": "resources do this computation take on",
    "start": "896560",
    "end": "898600"
  },
  {
    "text": "the chain I just run it off chain",
    "start": "898600",
    "end": "901959"
  },
  {
    "text": "first count the uh the the execution",
    "start": "901959",
    "end": "906639"
  },
  {
    "text": "count of the abstract machine and I know",
    "start": "906639",
    "end": "909320"
  },
  {
    "text": "exactly what the execution fees are now",
    "start": "909320",
    "end": "912800"
  },
  {
    "text": "if you ever used",
    "start": "912800",
    "end": "914639"
  },
  {
    "text": "solidity on ethereum then you may have",
    "start": "914639",
    "end": "918120"
  },
  {
    "text": "come across dech exchange questions like",
    "start": "918120",
    "end": "920199"
  },
  {
    "text": "this oh I tried to run my smart contract",
    "start": "920199",
    "end": "923079"
  },
  {
    "text": "and I didn't give it enough fees and now",
    "start": "923079",
    "end": "925240"
  },
  {
    "text": "all the money is lost and I have to",
    "start": "925240",
    "end": "927000"
  },
  {
    "text": "rerun it again and I still don't know",
    "start": "927000",
    "end": "928800"
  },
  {
    "text": "how what the fees are going to be so in",
    "start": "928800",
    "end": "931360"
  },
  {
    "text": "our system this is impossible because",
    "start": "931360",
    "end": "933399"
  },
  {
    "text": "everything is perfectly",
    "start": "933399",
    "end": "935880"
  },
  {
    "text": "deterministic so this is one of the",
    "start": "935880",
    "end": "938199"
  },
  {
    "text": "payoffs of just sticking to your purely",
    "start": "938199",
    "end": "941600"
  },
  {
    "text": "functional model and not using any of",
    "start": "941600",
    "end": "944319"
  },
  {
    "text": "these side affecting",
    "start": "944319",
    "end": "946720"
  },
  {
    "text": "nonsense all right so much for the",
    "start": "946720",
    "end": "949480"
  },
  {
    "text": "lecture so what's this full stack",
    "start": "949480",
    "end": "951600"
  },
  {
    "text": "business about now if you want to write",
    "start": "951600",
    "end": "955120"
  },
  {
    "text": "um a a contract smart contract",
    "start": "955120",
    "end": "959079"
  },
  {
    "text": "application decentralized application on",
    "start": "959079",
    "end": "961560"
  },
  {
    "text": "something like solidity what what's the",
    "start": "961560",
    "end": "964240"
  },
  {
    "text": "kind of code you're going to write well",
    "start": "964240",
    "end": "967279"
  },
  {
    "text": "let's take a simple example let's say we",
    "start": "967279",
    "end": "969040"
  },
  {
    "text": "do a simple crowdfunding setup so there",
    "start": "969040",
    "end": "971839"
  },
  {
    "text": "we have a crowdfunding campaign there's",
    "start": "971839",
    "end": "974079"
  },
  {
    "text": "a deadline by which everybody paying",
    "start": "974079",
    "end": "977040"
  },
  {
    "text": "into this campaign has to pay enough in",
    "start": "977040",
    "end": "980360"
  },
  {
    "text": "that a particular funding goal is",
    "start": "980360",
    "end": "981959"
  },
  {
    "text": "reached now if this funding goal is",
    "start": "981959",
    "end": "984160"
  },
  {
    "text": "reached then the companion owner can",
    "start": "984160",
    "end": "985959"
  },
  {
    "text": "take out all the funds if the funding",
    "start": "985959",
    "end": "988399"
  },
  {
    "text": "goal is not not reach within the",
    "start": "988399",
    "end": "989880"
  },
  {
    "text": "deadline then everybody gets their stuff",
    "start": "989880",
    "end": "992480"
  },
  {
    "text": "refunded and in case the campaign owner",
    "start": "992480",
    "end": "995040"
  },
  {
    "text": "runs away then of course we also want uh",
    "start": "995040",
    "end": "998880"
  },
  {
    "text": "participants to get a refund now if you",
    "start": "998880",
    "end": "1001480"
  },
  {
    "text": "do this on ethereum you're going to",
    "start": "1001480",
    "end": "1003040"
  },
  {
    "text": "write the",
    "start": "1003040",
    "end": "1004199"
  },
  {
    "text": "solidity random programming language",
    "start": "1004199",
    "end": "1006519"
  },
  {
    "text": "with some random people invented and um",
    "start": "1006519",
    "end": "1011360"
  },
  {
    "text": "then you may think you're done now you",
    "start": "1011360",
    "end": "1014279"
  },
  {
    "text": "have to write all this JavaScript code",
    "start": "1014279",
    "end": "1016560"
  },
  {
    "text": "as well and actually you have to write",
    "start": "1016560",
    "end": "1018319"
  },
  {
    "text": "more JavaScript code usually than",
    "start": "1018319",
    "end": "1020480"
  },
  {
    "text": "solidity and then you can argue about",
    "start": "1020480",
    "end": "1022880"
  },
  {
    "text": "which is the worst programming language",
    "start": "1022880",
    "end": "1024558"
  },
  {
    "text": "but I leave that to",
    "start": "1024559",
    "end": "1026319"
  },
  {
    "text": "you overall you are ending up with this",
    "start": "1026319",
    "end": "1030319"
  },
  {
    "text": "kind of two-level thing for offchain",
    "start": "1030319",
    "end": "1033240"
  },
  {
    "text": "computation in JavaScript which run in a",
    "start": "1033240",
    "end": "1035280"
  },
  {
    "text": "user's wallet onchain computation",
    "start": "1035280",
    "end": "1037798"
  },
  {
    "text": "solidity which run on the",
    "start": "1037799",
    "end": "1040160"
  },
  {
    "text": "blockchain and well we are programming",
    "start": "1040160",
    "end": "1043360"
  },
  {
    "text": "language people we call this a a stage",
    "start": "1043360",
    "end": "1046079"
  },
  {
    "text": "programming model it's a two-level",
    "start": "1046079",
    "end": "1047798"
  },
  {
    "text": "programming model",
    "start": "1047799",
    "end": "1049600"
  },
  {
    "text": "it's not presented as that usually but",
    "start": "1049600",
    "end": "1052080"
  },
  {
    "text": "that's what it is in fact now if you do",
    "start": "1052080",
    "end": "1054480"
  },
  {
    "text": "this with JavaScript and solidity it",
    "start": "1054480",
    "end": "1057000"
  },
  {
    "text": "it's quite inconvenient because",
    "start": "1057000",
    "end": "1059240"
  },
  {
    "text": "sometimes you have to move code from one",
    "start": "1059240",
    "end": "1060919"
  },
  {
    "text": "to the other well then you have to",
    "start": "1060919",
    "end": "1062400"
  },
  {
    "text": "rewrite it in another programming",
    "start": "1062400",
    "end": "1063799"
  },
  {
    "text": "language that's not fun it's also quite",
    "start": "1063799",
    "end": "1067000"
  },
  {
    "text": "complex at the minimum you have to learn",
    "start": "1067000",
    "end": "1069240"
  },
  {
    "text": "two languages and it's fragile because",
    "start": "1069240",
    "end": "1071960"
  },
  {
    "text": "there's no check of apis between the two",
    "start": "1071960",
    "end": "1075080"
  },
  {
    "text": "the two actually communicate via",
    "start": "1075080",
    "end": "1077400"
  },
  {
    "text": "adjacent protocol uh in network",
    "start": "1077400",
    "end": "1080640"
  },
  {
    "text": "connection so it's it's quite at hog now",
    "start": "1080640",
    "end": "1084000"
  },
  {
    "text": "so what we are proposing is hey use",
    "start": "1084000",
    "end": "1088039"
  },
  {
    "text": "hll for the offchain code and by the way",
    "start": "1088039",
    "end": "1091039"
  },
  {
    "text": "also use hle for the onchain code so now",
    "start": "1091039",
    "end": "1094200"
  },
  {
    "text": "we've only got one programming language",
    "start": "1094200",
    "end": "1096080"
  },
  {
    "text": "and we use a meta programming facility",
    "start": "1096080",
    "end": "1098000"
  },
  {
    "text": "of hesel to tie the two",
    "start": "1098000",
    "end": "1100200"
  },
  {
    "text": "together and then we have an integrated",
    "start": "1100200",
    "end": "1103000"
  },
  {
    "text": "system one program language you can copy",
    "start": "1103000",
    "end": "1105760"
  },
  {
    "text": "code from one word to another no problem",
    "start": "1105760",
    "end": "1108480"
  },
  {
    "text": "uh it's",
    "start": "1108480",
    "end": "1109600"
  },
  {
    "text": "Compact and actually we get type",
    "start": "1109600",
    "end": "1112320"
  },
  {
    "text": "checking across the whole system because",
    "start": "1112320",
    "end": "1114919"
  },
  {
    "text": "it's one program in one programming",
    "start": "1114919",
    "end": "1118640"
  },
  {
    "text": "language so how does this look like so",
    "start": "1118640",
    "end": "1122120"
  },
  {
    "text": "let's take this crowdfunding example the",
    "start": "1122120",
    "end": "1124640"
  },
  {
    "text": "the the function where you contribute",
    "start": "1124640",
    "end": "1126480"
  },
  {
    "text": "something uh to the campaign so you C",
    "start": "1126480",
    "end": "1129640"
  },
  {
    "text": "you have a campaign description you have",
    "start": "1129640",
    "end": "1132080"
  },
  {
    "text": "a certain amount value that you want to",
    "start": "1132080",
    "end": "1134320"
  },
  {
    "text": "contribute then well first of all we",
    "start": "1134320",
    "end": "1136760"
  },
  {
    "text": "check you contribute something positive",
    "start": "1136760",
    "end": "1139039"
  },
  {
    "text": "and then all these transactions they're",
    "start": "1139039",
    "end": "1141480"
  },
  {
    "text": "submitted from a wallet because whenever",
    "start": "1141480",
    "end": "1144320"
  },
  {
    "text": "you submit transactions to public",
    "start": "1144320",
    "end": "1145919"
  },
  {
    "text": "blockchain you pay some transaction fees",
    "start": "1145919",
    "end": "1148159"
  },
  {
    "text": "so there's always necessarily some",
    "start": "1148159",
    "end": "1150000"
  },
  {
    "text": "cryptocurrency involved so we get the",
    "start": "1150000",
    "end": "1152919"
  },
  {
    "text": "key of the person paying in because in",
    "start": "1152919",
    "end": "1155360"
  },
  {
    "text": "case we get to refund we need to know",
    "start": "1155360",
    "end": "1157280"
  },
  {
    "text": "where that has to go and then we create",
    "start": "1157280",
    "end": "1160080"
  },
  {
    "text": "a transaction locked by a script so we",
    "start": "1160080",
    "end": "1163120"
  },
  {
    "text": "describe the valid data here",
    "start": "1163120",
    "end": "1165080"
  },
  {
    "text": "basically and how we are describing the",
    "start": "1165080",
    "end": "1167960"
  },
  {
    "text": "valid data code we'll see in a moment in",
    "start": "1167960",
    "end": "1170039"
  },
  {
    "text": "this uh contribution script function and",
    "start": "1170039",
    "end": "1173039"
  },
  {
    "text": "then we State the value that we going to",
    "start": "1173039",
    "end": "1176400"
  },
  {
    "text": "pay in and we put the our public key in",
    "start": "1176400",
    "end": "1181200"
  },
  {
    "text": "as the data script of the um the",
    "start": "1181200",
    "end": "1185640"
  },
  {
    "text": "additional data information which I",
    "start": "1185640",
    "end": "1187799"
  },
  {
    "text": "introduced in the extended utxo model so",
    "start": "1187799",
    "end": "1190480"
  },
  {
    "text": "that the the valid data script knows who",
    "start": "1190480",
    "end": "1193720"
  },
  {
    "text": "is allowed to get a refund",
    "start": "1193720",
    "end": "1196320"
  },
  {
    "text": "basically this part of this particular",
    "start": "1196320",
    "end": "1198760"
  },
  {
    "text": "value and then we register basically a",
    "start": "1198760",
    "end": "1203039"
  },
  {
    "text": "callback we call it a trigger that is",
    "start": "1203039",
    "end": "1206159"
  },
  {
    "text": "triggered in case for example a refund",
    "start": "1206159",
    "end": "1208480"
  },
  {
    "text": "is due due so that uh the contract code",
    "start": "1208480",
    "end": "1211760"
  },
  {
    "text": "can automatically submit a transaction",
    "start": "1211760",
    "end": "1214200"
  },
  {
    "text": "to to get the",
    "start": "1214200",
    "end": "1216360"
  },
  {
    "text": "refund all right so this is our offchain",
    "start": "1216360",
    "end": "1219799"
  },
  {
    "text": "code how about the onchain code the",
    "start": "1219799",
    "end": "1222400"
  },
  {
    "text": "validation code well it's still",
    "start": "1222400",
    "end": "1225320"
  },
  {
    "text": "hasal but we're going to use some",
    "start": "1225320",
    "end": "1228640"
  },
  {
    "text": "template tal",
    "start": "1228640",
    "end": "1230320"
  },
  {
    "text": "magic so that's a blue background",
    "start": "1230320",
    "end": "1232760"
  },
  {
    "text": "basically so we have uh template tesle",
    "start": "1232760",
    "end": "1235840"
  },
  {
    "text": "quotations and we Define a Lambda",
    "start": "1235840",
    "end": "1238320"
  },
  {
    "text": "function which again gets the campaign",
    "start": "1238320",
    "end": "1240720"
  },
  {
    "text": "information as uh one of its arguments",
    "start": "1240720",
    "end": "1244280"
  },
  {
    "text": "an action whether we are collecting the",
    "start": "1244280",
    "end": "1247280"
  },
  {
    "text": "funds from the campaign or getting",
    "start": "1247280",
    "end": "1249360"
  },
  {
    "text": "refund and um the transaction",
    "start": "1249360",
    "end": "1252600"
  },
  {
    "text": "information and then it just pattern",
    "start": "1252600",
    "end": "1254919"
  },
  {
    "text": "matches on the transaction in order to",
    "start": "1254919",
    "end": "1256960"
  },
  {
    "text": "extract some information",
    "start": "1256960",
    "end": "1259400"
  },
  {
    "text": "and does a case distinction over which",
    "start": "1259400",
    "end": "1262400"
  },
  {
    "text": "of the two actions we are currently um",
    "start": "1262400",
    "end": "1265400"
  },
  {
    "text": "in for if there's a refund if it's a",
    "start": "1265400",
    "end": "1267960"
  },
  {
    "text": "refund action well this is only",
    "start": "1267960",
    "end": "1270559"
  },
  {
    "text": "permissible after the collection",
    "start": "1270559",
    "end": "1272880"
  },
  {
    "text": "deadline so in case the compaign hasn't",
    "start": "1272880",
    "end": "1275480"
  },
  {
    "text": "been funded or the owner didn't collect",
    "start": "1275480",
    "end": "1277799"
  },
  {
    "text": "the",
    "start": "1277799",
    "end": "1278480"
  },
  {
    "text": "funds and um we check the outputs",
    "start": "1278480",
    "end": "1283039"
  },
  {
    "text": "secondary and then we check that the",
    "start": "1283039",
    "end": "1285640"
  },
  {
    "text": "signature on the transaction is actually",
    "start": "1285640",
    "end": "1288000"
  },
  {
    "text": "from the person who put those funds in",
    "start": "1288000",
    "end": "1291240"
  },
  {
    "text": "so the refund is going to the person who",
    "start": "1291240",
    "end": "1293600"
  },
  {
    "text": "put in the funds in the first place and",
    "start": "1293600",
    "end": "1295720"
  },
  {
    "text": "that uses as uh information the uh",
    "start": "1295720",
    "end": "1299320"
  },
  {
    "text": "public key which be submitted together",
    "start": "1299320",
    "end": "1301720"
  },
  {
    "text": "in the uh with the original transaction",
    "start": "1301720",
    "end": "1304799"
  },
  {
    "text": "now in the second case if the campaign",
    "start": "1304799",
    "end": "1307640"
  },
  {
    "text": "owner thinks the campaign was successful",
    "start": "1307640",
    "end": "1310240"
  },
  {
    "text": "and they want to collect uh all the paid",
    "start": "1310240",
    "end": "1312480"
  },
  {
    "text": "in funds then well we have to be after",
    "start": "1312480",
    "end": "1315159"
  },
  {
    "text": "the campaign",
    "start": "1315159",
    "end": "1316320"
  },
  {
    "text": "deadline but before the collection",
    "start": "1316320",
    "end": "1318640"
  },
  {
    "text": "deadline before people can CL claim",
    "start": "1318640",
    "end": "1320919"
  },
  {
    "text": "refunds and we need to check that the",
    "start": "1320919",
    "end": "1324559"
  },
  {
    "text": "total amount of paid in value is bigger",
    "start": "1324559",
    "end": "1328039"
  },
  {
    "text": "than what the campaign Target the",
    "start": "1328039",
    "end": "1330039"
  },
  {
    "text": "funding Target was and then of course",
    "start": "1330039",
    "end": "1332559"
  },
  {
    "text": "the transaction has to be signed by",
    "start": "1332559",
    "end": "1334279"
  },
  {
    "text": "actually the person who is really the",
    "start": "1334279",
    "end": "1335840"
  },
  {
    "text": "campaign owner so these are the",
    "start": "1335840",
    "end": "1339919"
  },
  {
    "text": "basically how we the valid datas we see",
    "start": "1339919",
    "end": "1342760"
  },
  {
    "text": "how the validators they're really",
    "start": "1342760",
    "end": "1344159"
  },
  {
    "text": "predicates they check the conditions of",
    "start": "1344159",
    "end": "1347080"
  },
  {
    "text": "whatever particular case in the state",
    "start": "1347080",
    "end": "1351039"
  },
  {
    "text": "space of the contract we are currently",
    "start": "1351039",
    "end": "1353679"
  },
  {
    "text": "looking at and that's it so it's all",
    "start": "1353679",
    "end": "1356679"
  },
  {
    "text": "just simple hle",
    "start": "1356679",
    "end": "1358640"
  },
  {
    "text": "code",
    "start": "1358640",
    "end": "1360240"
  },
  {
    "text": "so I hope you got a little bit of an",
    "start": "1360240",
    "end": "1362960"
  },
  {
    "text": "idea of how these scripts look like and",
    "start": "1362960",
    "end": "1365640"
  },
  {
    "text": "they're really just quite simple hle",
    "start": "1365640",
    "end": "1368080"
  },
  {
    "text": "programs now to look at the big picture",
    "start": "1368080",
    "end": "1371000"
  },
  {
    "text": "so if we have source code like this how",
    "start": "1371000",
    "end": "1373720"
  },
  {
    "text": "how is the execution how does this work",
    "start": "1373720",
    "end": "1376960"
  },
  {
    "text": "so as I said before we have we have to",
    "start": "1376960",
    "end": "1380320"
  },
  {
    "text": "look at onchain computations so that's",
    "start": "1380320",
    "end": "1382720"
  },
  {
    "text": "what happens during transaction",
    "start": "1382720",
    "end": "1384400"
  },
  {
    "text": "validation on the chain and offchain",
    "start": "1384400",
    "end": "1387039"
  },
  {
    "text": "code which happens in the wallets of",
    "start": "1387039",
    "end": "1389720"
  },
  {
    "text": "users now when we",
    "start": "1389720",
    "end": "1392000"
  },
  {
    "text": "compile um Pluto contract then we're",
    "start": "1392000",
    "end": "1396640"
  },
  {
    "text": "generating some offchain code which one",
    "start": "1396640",
    "end": "1400080"
  },
  {
    "text": "way or another gets into user wallet and",
    "start": "1400080",
    "end": "1402640"
  },
  {
    "text": "it includes it actually encapsulates",
    "start": "1402640",
    "end": "1405720"
  },
  {
    "text": "Pluto score for all the possible onchain",
    "start": "1405720",
    "end": "1408559"
  },
  {
    "text": "computations it might want to submit as",
    "start": "1408559",
    "end": "1411760"
  },
  {
    "text": "part of",
    "start": "1411760",
    "end": "1413360"
  },
  {
    "text": "transaction and then let's say a user",
    "start": "1413360",
    "end": "1416679"
  },
  {
    "text": "clicks on the button for the contribute",
    "start": "1416679",
    "end": "1419120"
  },
  {
    "text": "action in their wallet then we submit a",
    "start": "1419120",
    "end": "1422080"
  },
  {
    "text": "transaction which is locked by some of",
    "start": "1422080",
    "end": "1424400"
  },
  {
    "text": "the Pluto core embedded in this",
    "start": "1424400",
    "end": "1426880"
  },
  {
    "text": "particular offchain code and this is",
    "start": "1426880",
    "end": "1429720"
  },
  {
    "text": "then validated by the chain if it's",
    "start": "1429720",
    "end": "1432080"
  },
  {
    "text": "accepted by the chain and we didn't",
    "start": "1432080",
    "end": "1434039"
  },
  {
    "text": "cheat the transaction is",
    "start": "1434039",
    "end": "1436200"
  },
  {
    "text": "integrated and wallet generally monitor",
    "start": "1436200",
    "end": "1440880"
  },
  {
    "text": "blockchains for events on the Chain so",
    "start": "1440880",
    "end": "1443559"
  },
  {
    "text": "usually this is confirmation of blocks",
    "start": "1443559",
    "end": "1446080"
  },
  {
    "text": "and then these events which come from",
    "start": "1446080",
    "end": "1449000"
  },
  {
    "text": "the blockchain into the wallet this is",
    "start": "1449000",
    "end": "1450720"
  },
  {
    "text": "what uh typically leads to these",
    "start": "1450720",
    "end": "1452960"
  },
  {
    "text": "triggers where the offchain contract",
    "start": "1452960",
    "end": "1455559"
  },
  {
    "text": "code gets an event back to which it then",
    "start": "1455559",
    "end": "1458039"
  },
  {
    "text": "can react for example maybe this",
    "start": "1458039",
    "end": "1460200"
  },
  {
    "text": "transaction was the last one needed for",
    "start": "1460200",
    "end": "1463600"
  },
  {
    "text": "this campaign to be successful and then",
    "start": "1463600",
    "end": "1466279"
  },
  {
    "text": "a trigger in the wallet of the campaign",
    "start": "1466279",
    "end": "1468600"
  },
  {
    "text": "would submit a transaction to collect",
    "start": "1468600",
    "end": "1470200"
  },
  {
    "text": "the funds so this is the overall",
    "start": "1470200",
    "end": "1473520"
  },
  {
    "text": "architecture now so Pluto overall is",
    "start": "1473520",
    "end": "1477760"
  },
  {
    "text": "basically hle scripting for the kadano",
    "start": "1477760",
    "end": "1480039"
  },
  {
    "text": "blockchain and if you want to give it a",
    "start": "1480039",
    "end": "1482120"
  },
  {
    "text": "try we have uh what we call plutus",
    "start": "1482120",
    "end": "1485039"
  },
  {
    "text": "playgrounds it's an online web system uh",
    "start": "1485039",
    "end": "1488320"
  },
  {
    "text": "where you can write this code and uh we",
    "start": "1488320",
    "end": "1491399"
  },
  {
    "text": "also have some example contracts for you",
    "start": "1491399",
    "end": "1493840"
  },
  {
    "text": "if you want to go get started and um",
    "start": "1493840",
    "end": "1496679"
  },
  {
    "text": "this is all executed on on a functional",
    "start": "1496679",
    "end": "1499120"
  },
  {
    "text": "simulator of the blockchain um where you",
    "start": "1499120",
    "end": "1501480"
  },
  {
    "text": "then get information about what happened",
    "start": "1501480",
    "end": "1504120"
  },
  {
    "text": "who got what and so on the Utes our",
    "start": "1504120",
    "end": "1506919"
  },
  {
    "text": "graph uh all the code is of course open",
    "start": "1506919",
    "end": "1509440"
  },
  {
    "text": "source it's in uh the Pluto repository",
    "start": "1509440",
    "end": "1512000"
  },
  {
    "text": "of ihk and if you want to know more in",
    "start": "1512000",
    "end": "1515240"
  },
  {
    "text": "December we had an event in Edinburgh",
    "start": "1515240",
    "end": "1517520"
  },
  {
    "text": "with quite a few talks and they're all",
    "start": "1517520",
    "end": "1519799"
  },
  {
    "text": "online as well so thank you very much",
    "start": "1519799",
    "end": "1522200"
  },
  {
    "text": "for your attention",
    "start": "1522200",
    "end": "1523570"
  },
  {
    "text": "[Applause]",
    "start": "1523570",
    "end": "1531580"
  }
]