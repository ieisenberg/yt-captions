[
  {
    "start": "0",
    "end": "156000"
  },
  {
    "text": "[Music]",
    "start": "960",
    "end": "7799"
  },
  {
    "text": "I was very careful there to lead the Applause with the AV crew it's a very silly presenter that doesn't get ahead",
    "start": "12040",
    "end": "17520"
  },
  {
    "text": "of the curve when it comes to thanking the people in charge of the microphone they do have a thankless job so uh and",
    "start": "17520",
    "end": "23119"
  },
  {
    "text": "this is not necessarily a space designed for High-Tech presentations anyway I'm not really here to talk about",
    "start": "23119",
    "end": "28560"
  },
  {
    "text": "microservices at all which is is a nice departure for me because I get sick and",
    "start": "28560",
    "end": "34160"
  },
  {
    "text": "tired talking about them but I'm going to be talking about words and meaning and how we often use words in",
    "start": "34160",
    "end": "43280"
  },
  {
    "text": "ways where we think we know what they mean but it turns out that other people have a very different view I spend a lot",
    "start": "43280",
    "end": "49879"
  },
  {
    "text": "of my time talking about architecture and architecture fundamentally we can think of in terms of boxes and of course",
    "start": "49879",
    "end": "56239"
  },
  {
    "text": "the really important things being the arrows between them we often joke that this is what architecture is sometimes I",
    "start": "56239",
    "end": "63160"
  },
  {
    "text": "get more involved in more interesting conversations like what's actually happening inside the boxes or how big",
    "start": "63160",
    "end": "70640"
  },
  {
    "text": "should the boxes be or maybe how small should the boxes be should we actually",
    "start": "70640",
    "end": "76439"
  },
  {
    "text": "have fewer boxes and maybe take the boxes that we have and break those up into smaller boxes probably we should of",
    "start": "76439",
    "end": "84520"
  },
  {
    "text": "course there's really important conversations to be had which is not necessarily about the size or what's in",
    "start": "84520",
    "end": "90119"
  },
  {
    "text": "the box but more about what shape the Box should be and I have clearly made my",
    "start": "90119",
    "end": "95439"
  },
  {
    "text": "own personal stance because I am part of Team hexagon go team hexagon right but today we're not going to talk about the",
    "start": "95439",
    "end": "101399"
  },
  {
    "text": "boxes at all we're going to be talking about the arrows I did a whole master class on",
    "start": "101399",
    "end": "107840"
  },
  {
    "text": "Monday all about the arrows the arrows between our services and so I do talk about",
    "start": "107840",
    "end": "114520"
  },
  {
    "text": "microservice architecture I talk about these hexagons and these boxes and the interactions between them when I draw an",
    "start": "114520",
    "end": "120479"
  },
  {
    "text": "arrow like this what I'm referring to is a logical dependency I am showing that this",
    "start": "120479",
    "end": "126200"
  },
  {
    "text": "service on the left hand side depends on this other service on the right hand",
    "start": "126200",
    "end": "131720"
  },
  {
    "text": "side and then the conversation becomes how do we Implement those arrows how do we take this logical interaction and",
    "start": "131720",
    "end": "139480"
  },
  {
    "text": "convert it into something that we can Implement and there are lots of different styles of communication in",
    "start": "139480",
    "end": "146599"
  },
  {
    "text": "this example here we're showing that return service depends on something the shipping service wants to",
    "start": "146599",
    "end": "152440"
  },
  {
    "text": "do and this talk is fundamentally about the distinction between these interactions in terms of synchronous",
    "start": "152440",
    "end": "158640"
  },
  {
    "start": "156000",
    "end": "479000"
  },
  {
    "text": "versus asynchronous behavior and I have struggled with this distinction for a",
    "start": "158640",
    "end": "163800"
  },
  {
    "text": "while in general i' instead prefer to start the conversation around the two",
    "start": "163800",
    "end": "169519"
  },
  {
    "text": "main styles of communication that I see and try I've I've tried for years just to sidestep this discussion because it",
    "start": "169519",
    "end": "176920"
  },
  {
    "text": "is a problematic division so instead I talk a lot more about the",
    "start": "176920",
    "end": "182400"
  },
  {
    "text": "stylistic differences between interactions between this idea of request response and event driven and so",
    "start": "182400",
    "end": "188879"
  },
  {
    "text": "when working with teams who say should I use Kafka or graphql and it's like well those are two incredibly different",
    "start": "188879",
    "end": "195599"
  },
  {
    "text": "things maybe we start the conversation here with this particular interaction",
    "start": "195599",
    "end": "200720"
  },
  {
    "text": "you want to create which one of these two camps is closer to what you're looking for and that in turn will help",
    "start": "200720",
    "end": "207080"
  },
  {
    "text": "shrink your solution space we think of request response is being one of the most commonly used interaction models",
    "start": "207080",
    "end": "213080"
  },
  {
    "text": "it's common it's familiar one service is making a request of another service I",
    "start": "213080",
    "end": "218439"
  },
  {
    "text": "asking for something I want some help I want you to do something like this this is not narrowly fetching data this is",
    "start": "218439",
    "end": "225560"
  },
  {
    "text": "how one service requests functionality from another and we hope we really hope",
    "start": "225560",
    "end": "232760"
  },
  {
    "text": "we get a response right that's what we need we need the response and actually I found the distinction between this way of working",
    "start": "232760",
    "end": "240000"
  },
  {
    "text": "and the adventur in world to be one of the most fundamental because it shifts so much of how we think about how we",
    "start": "240000",
    "end": "246159"
  },
  {
    "text": "build our systems with all kinds of benefits and also costs so with eventure",
    "start": "246159",
    "end": "251599"
  },
  {
    "text": "an interaction we get to a more both passive and also reactive model in this situation here an event has been fired",
    "start": "251599",
    "end": "258759"
  },
  {
    "text": "broadcast we think of an event like a fact something has occurred we've just received 10,000",
    "start": "258759",
    "end": "266040"
  },
  {
    "text": "copies of David Hasselhoff's greatest hits in the warehouse and it is vital that we let the world",
    "start": "266040",
    "end": "272880"
  },
  {
    "text": "know we have Hoff so much Hoff and with an event driven system you create these",
    "start": "272880",
    "end": "279320"
  },
  {
    "text": "lovely interactions where different services are able to react to that same",
    "start": "279320",
    "end": "284680"
  },
  {
    "text": "event in the way that suits them in this example here we might have a promotion service that uses the stock level",
    "start": "284680",
    "end": "291120"
  },
  {
    "text": "notification as a way of automatically discounting a product the wish list service might they let people know that",
    "start": "291120",
    "end": "297919"
  },
  {
    "text": "the Hoff's on its way you you ordered it it's coming two different Services",
    "start": "297919",
    "end": "303560"
  },
  {
    "text": "they're not being told what to do they know what to do they know how to react",
    "start": "303560",
    "end": "308720"
  },
  {
    "text": "event driven systems are often much more Loosely coupled have an even distribution of smarts but will also",
    "start": "308720",
    "end": "315680"
  },
  {
    "text": "failed in ways that are utterly bewildering and have a higher degree of complexity tends to be my happy place I",
    "start": "315680",
    "end": "322160"
  },
  {
    "text": "find this distinction easy to talk about they are quite different they're quite",
    "start": "322160",
    "end": "328479"
  },
  {
    "text": "different but unfortunately lots of people really want to talk about",
    "start": "328479",
    "end": "333720"
  },
  {
    "text": "this and so I you know I tried talking about it for a bit couldn't find the right words tried a few more times in",
    "start": "333720",
    "end": "341560"
  },
  {
    "text": "the most recent edition of my book I tried again to Define what these terms mean and realize that I'm still not",
    "start": "341560",
    "end": "348000"
  },
  {
    "text": "happy with them so I I sort of think well I had to take another step at all of this and I",
    "start": "348000",
    "end": "353960"
  },
  {
    "text": "was encouraged to write this talk um because of this blog post well",
    "start": "353960",
    "end": "359639"
  },
  {
    "text": "substack post by Pat Helen Pat Helen is a pioneer of computing this is a very good signal to noise ratio substack and",
    "start": "359639",
    "end": "366759"
  },
  {
    "text": "in this post he's making the argument that we should rename eventual consistency um because he says that we",
    "start": "366759",
    "end": "373720"
  },
  {
    "text": "use the term eventual consistency often in very close proximity to discussions",
    "start": "373720",
    "end": "379400"
  },
  {
    "text": "around consistency in the area of things like database transactions but the word consistency in",
    "start": "379400",
    "end": "385440"
  },
  {
    "text": "a database transaction has absolutely nothing whatsoever to do with eventual",
    "start": "385440",
    "end": "391000"
  },
  {
    "text": "consistency nothing but the words are the same and so it's confusing Pat is",
    "start": "391000",
    "end": "396360"
  },
  {
    "text": "very smart and therefore he's come up with a better term for this eventual convergence the replicas will eventually",
    "start": "396360",
    "end": "403000"
  },
  {
    "text": "converge once they processed all the messages it says he's a smart person I thought maybe I can be a smart person",
    "start": "403000",
    "end": "408759"
  },
  {
    "text": "when I grow up so I thought I'm going to take a run at this and try and get to the bottom of what asynchronous means to",
    "start": "408759",
    "end": "415639"
  },
  {
    "text": "people and maybe I can come up with some better terms spoilers I failed however the journey is",
    "start": "415639",
    "end": "422560"
  },
  {
    "text": "fun but coming out of this journey what I've discovered is that there is no",
    "start": "422560",
    "end": "428240"
  },
  {
    "text": "consistent definition of what asynchronous communication means none at",
    "start": "428240",
    "end": "433479"
  },
  {
    "text": "all so we should probably stop using the word now obviously because I've got a",
    "start": "433479",
    "end": "440919"
  },
  {
    "text": "crack team of researchers that before the um in of Twitter I used to",
    "start": "440919",
    "end": "447879"
  },
  {
    "text": "use Twitter as my hive mind I put out this request I said hello everybody what do you think the term asyrus means to",
    "start": "447879",
    "end": "455160"
  },
  {
    "text": "you when you're thinking about communication between things and like I",
    "start": "455160",
    "end": "461240"
  },
  {
    "text": "read the books and I've read the papers and we'll come to some of that in a moment but I wanted to understand what",
    "start": "461240",
    "end": "467240"
  },
  {
    "text": "people out there thought this term meant and uh what I found was quite",
    "start": "467240",
    "end": "476520"
  },
  {
    "text": "interesting so shocking is maybe not the right word but I want a bit of hyperbole I had to just follow a talk about robots",
    "start": "478080",
    "end": "485800"
  },
  {
    "start": "479000",
    "end": "560000"
  },
  {
    "text": "I mean come on right anyway here's from the first response I got from an old colleague of mine Darren Hobs and so",
    "start": "485800",
    "end": "492080"
  },
  {
    "text": "Darren said well for him asynchronous communication is about the difference between sending an email and having a",
    "start": "492080",
    "end": "498720"
  },
  {
    "text": "phone call and there's something about this that feels like it makes sense I",
    "start": "498720",
    "end": "504440"
  },
  {
    "text": "pick up the phone I ask you something you give me a response we're having a convers we often refer to that in terms",
    "start": "504440",
    "end": "511440"
  },
  {
    "text": "of Team Dynamics and communication as a synchronous form of communication versus asynchronous forms of communication",
    "start": "511440",
    "end": "517200"
  },
  {
    "text": "between people via an email I send you the email and at some point you pick that email up there's something",
    "start": "517200",
    "end": "522959"
  },
  {
    "text": "interesting there about that distinction so there's something there that was kind of",
    "start": "522959",
    "end": "528480"
  },
  {
    "text": "interesting however it does sort of imply a speed or a latency",
    "start": "528480",
    "end": "533720"
  },
  {
    "text": "element if I need a quick answer a phone call is a quicker way to get that answer but email might take longer",
    "start": "533720",
    "end": "540959"
  },
  {
    "text": "however some of the lowest latency systems I've worked on have been fundamentally asynchronous in nature so",
    "start": "540959",
    "end": "546720"
  },
  {
    "text": "in the context of computer-based systems that idea of time doesn't necessarily feel right but there might be something",
    "start": "546720",
    "end": "554360"
  },
  {
    "text": "to that so I sort of thinking okay well that's interesting what else have we got so while this Twitter thread was",
    "start": "554360",
    "end": "560440"
  },
  {
    "start": "560000",
    "end": "803000"
  },
  {
    "text": "going on I thought I'd go and take a look at the reactive Manifesto so hands up if you've read the reactive",
    "start": "560440",
    "end": "567000"
  },
  {
    "text": "Manifesto keep your hands up if you understand the reative manifesto all",
    "start": "567000",
    "end": "572120"
  },
  {
    "text": "right so I'm going to poke fun at the reactive Manifesto I don't like punching down but the people who wrote this is",
    "start": "572120",
    "end": "577760"
  },
  {
    "text": "smarter than me so it feels like I'm punching up and therefore it's okay there's a lot of hard work went into",
    "start": "577760",
    "end": "583120"
  },
  {
    "text": "writing this document and the second edition was such significantly better than the first one but it is flawed and",
    "start": "583120",
    "end": "588720"
  },
  {
    "text": "we'll talk about why but these very smart people have made an attempt to define a synch communication so while my",
    "start": "588720",
    "end": "596000"
  },
  {
    "text": "Twitter thread was going on I thought I'm going to dive deeper again into this try and tease apart what these people",
    "start": "596000",
    "end": "601880"
  },
  {
    "text": "think asynchronous and synchronous means and they've taken an effort to",
    "start": "601880",
    "end": "608200"
  },
  {
    "text": "Define these terms so here we go here's their definition it starts well the",
    "start": "608200",
    "end": "613680"
  },
  {
    "text": "Oxford dictionary defines asynchronous as not existing or occurring at the same",
    "start": "613680",
    "end": "619120"
  },
  {
    "text": "time we'll come back to exactly what the oxa dictionary thinks a little bit later on in the context of this Manifesto we",
    "start": "619120",
    "end": "627320"
  },
  {
    "text": "mean that the processing of a request occurs at an arbitrary point in time",
    "start": "627320",
    "end": "634519"
  },
  {
    "text": "sometime after it has been transmitted from client to server okay let's take another look at this the processing of a",
    "start": "634519",
    "end": "641680"
  },
  {
    "text": "request occurs at an arbitary time sometimes after it has been sent so with",
    "start": "641680",
    "end": "649839"
  },
  {
    "text": "asynchronous communication I process something after it's been sent um what as you mean as opposed to",
    "start": "649839",
    "end": "658399"
  },
  {
    "text": "processing the requ before it was sent like some kind of Doctor Who based networking protocol",
    "start": "658399",
    "end": "664800"
  },
  {
    "text": "where packets would arrive before they were even transmitted in the first place so this is completely meaningless",
    "start": "664800",
    "end": "670399"
  },
  {
    "text": "doesn't mean anything because all communication and interactions work in this way so this is not a helpful",
    "start": "670399",
    "end": "676360"
  },
  {
    "text": "statement but there are other bits in the document which I think are much more healthy and much more useful for us so",
    "start": "676360",
    "end": "681920"
  },
  {
    "text": "here's one so they go on say this is the opposite of synchronous processing which",
    "start": "681920",
    "end": "687959"
  },
  {
    "text": "implies the client only resumes its own execution once the service has processed",
    "start": "687959",
    "end": "694680"
  },
  {
    "text": "the request this is more useful and we are getting closer to",
    "start": "694680",
    "end": "700279"
  },
  {
    "text": "something while this is going on the thread is still going here's a uh Steve Smith who's a friend focuses a lot in",
    "start": "700279",
    "end": "706760"
  },
  {
    "text": "the area of continuous delivery nice man he said for them uh asynchronous means",
    "start": "706760",
    "end": "713040"
  },
  {
    "text": "TCP the connection is open for the duration of a communication uh I said does that mean if I'm not using TCP I'm",
    "start": "713040",
    "end": "719240"
  },
  {
    "text": "not asynchronous and he actually clarified he said what I actually mean is I assume with asynchronous",
    "start": "719240",
    "end": "725920"
  },
  {
    "text": "communication you're not blocking for a response that is",
    "start": "725920",
    "end": "733079"
  },
  {
    "text": "precise that is explicit that is actually what the reactive Manifesto is referring to when",
    "start": "733079",
    "end": "741000"
  },
  {
    "text": "it talks about the client isn't waiting so they're talking about non-blocking",
    "start": "741000",
    "end": "747519"
  },
  {
    "text": "here's the thing the concept of non-blocking is a precise and explicit concept it's a much more useful concept",
    "start": "747519",
    "end": "754279"
  },
  {
    "text": "than talking about asynchronicity so let's take a quick look at what non-blocking is about because it is",
    "start": "754279",
    "end": "760639"
  },
  {
    "text": "useful but also Limited in its use let's take a simple scenario here we've got a",
    "start": "760639",
    "end": "765880"
  },
  {
    "text": "service that's going to handle enrollment so maybe this is like a little simple orchestrated process there a few things that we need to make happen",
    "start": "765880",
    "end": "772240"
  },
  {
    "text": "as part of this process when I'm enrolling a person the F what I'm going to be doing is awarding them some points",
    "start": "772240",
    "end": "777760"
  },
  {
    "text": "so I send a call to the Loyalty service and say hello please can I have some points I also need to go to the",
    "start": "777760",
    "end": "783800"
  },
  {
    "text": "subscription service and upgrade the subscription from a logical coordination point of view these these don't have to",
    "start": "783800",
    "end": "791160"
  },
  {
    "text": "happen sequentially right there's no implied ordering needed here however if we think",
    "start": "791160",
    "end": "798639"
  },
  {
    "text": "about a naive implementation we could imagine a piece of code that looks a little bit like this the first line of",
    "start": "798639",
    "end": "805040"
  },
  {
    "start": "803000",
    "end": "1453000"
  },
  {
    "text": "code here this assumes I'm using some kind of G RPC St abstraction I'm calling",
    "start": "805040",
    "end": "811040"
  },
  {
    "text": "award points on the Loyalty service so that line of code is going to",
    "start": "811040",
    "end": "816160"
  },
  {
    "text": "execute and so when I execute that line of code that's just just imagine I'm using grpc under the hood I'm going to",
    "start": "816160",
    "end": "822320"
  },
  {
    "text": "open a HTTP connection I'm going to send some bits and bites it's going to reach the other server the server is going to",
    "start": "822320",
    "end": "828519"
  },
  {
    "text": "take that information I sent it hopefully handle that and send back a response and once that response comes",
    "start": "828519",
    "end": "834519"
  },
  {
    "text": "back that line of code is finished executing and the next line of code execute in my client right so the award",
    "start": "834519",
    "end": "841639"
  },
  {
    "text": "points call happens it completes I get the response I can then now go on and",
    "start": "841639",
    "end": "847399"
  },
  {
    "text": "execute the next call so this is sort of Fairly",
    "start": "847399",
    "end": "852959"
  },
  {
    "text": "straightforward understood right so it's only once we've completed the call to loyalty that we can make the call to",
    "start": "852959",
    "end": "859320"
  },
  {
    "text": "subscription the this is a what we would refer to as a blocking piece of code we are blocking client execution based on",
    "start": "859320",
    "end": "866600"
  },
  {
    "text": "the results of a server completing some kind of response and blocking calls are not",
    "start": "866600",
    "end": "874240"
  },
  {
    "text": "great and the reason for this is often around is related to latency in this",
    "start": "874240",
    "end": "879639"
  },
  {
    "text": "situation the latency of this operation is now going to be bound to be the sum",
    "start": "879639",
    "end": "885079"
  },
  {
    "text": "of both of these calls so let's say for sake of argument the first call took 50 milliseconds the second call took 150",
    "start": "885079",
    "end": "892560"
  },
  {
    "text": "milliseconds that means the total latency this operation is going to be at least 200 milliseconds in total total",
    "start": "892560",
    "end": "900160"
  },
  {
    "text": "and as we increasingly distribute our work our processing logic latency often ends up being the enemy uh the longer",
    "start": "900160",
    "end": "907759"
  },
  {
    "text": "things take um beyond the fact our users might get frustrated the longer we're holding on to Computing resources which",
    "start": "907759",
    "end": "914000"
  },
  {
    "text": "increases contention which makes these systems harder to scale being fast is",
    "start": "914000",
    "end": "919240"
  },
  {
    "text": "normally better than being slow and of course this gets even more problematic when we consider that",
    "start": "919240",
    "end": "925440"
  },
  {
    "text": "latency is going to vary you look at if you have looked at the history grams of say latency of services if you've got",
    "start": "925440",
    "end": "931880"
  },
  {
    "text": "multiple calls chained together what you'll tend to find is your latency distribution will increase even more",
    "start": "931880",
    "end": "937399"
  },
  {
    "text": "you're more likely going to see things like Tail latencies as well so an obvious Improvement here is to do both",
    "start": "937399",
    "end": "943800"
  },
  {
    "text": "those calls in parallel find a way to not block while we make the other call happen and this is actually something",
    "start": "943800",
    "end": "950000"
  },
  {
    "text": "which in this day and age is very very easy to achieve using something like a reactive extension so these exist for",
    "start": "950000",
    "end": "957040"
  },
  {
    "text": "all the major programming languages but we're basically making use of things like promises and Futures because what we'd like to do is",
    "start": "957040",
    "end": "964759"
  },
  {
    "text": "rather than doing this and then this instead we would just like to do them",
    "start": "964759",
    "end": "969920"
  },
  {
    "text": "both at the same time but do so in a way which is easy for us to write and reason about from a piece of code point of",
    "start": "969920",
    "end": "976880"
  },
  {
    "text": "view so this is an example of some simple syntactic sugar that we might use",
    "start": "976880",
    "end": "982000"
  },
  {
    "text": "to make this happen so in this example we have wrapped the execution of these things in what's known as a future ex",
    "start": "982000",
    "end": "988920"
  },
  {
    "text": "exactly how this will done will vary on the different implementations that you might have so a future is a readon type",
    "start": "988920",
    "end": "995759"
  },
  {
    "text": "and it's a bit like shring as cat right you you know that at some point in the future the future will have the value",
    "start": "995759",
    "end": "1002759"
  },
  {
    "text": "you want I hopefully not a dead cat so in this situation here the way things work",
    "start": "1002759",
    "end": "1009040"
  },
  {
    "text": "is when I execute that first line of code and my you know my client code goes",
    "start": "1009040",
    "end": "1014199"
  },
  {
    "text": "to the next line I haven't actually necessarily made the service call yet what's actually happening is everything inside that parentheses are being",
    "start": "1014199",
    "end": "1020759"
  },
  {
    "text": "packaged up into a thread probably and behind the scenes that call is being executed so when I start executing that",
    "start": "1020759",
    "end": "1027600"
  },
  {
    "text": "next line of code it's possible that the first service call is already happening it may not yet have been scheduled but",
    "start": "1027600",
    "end": "1034720"
  },
  {
    "text": "it's going to happen at somewhere where in the background I'm no longer blocking execution and so if this happens",
    "start": "1034720",
    "end": "1040839"
  },
  {
    "text": "perfectly we would imagine now that we can significantly reduce the overall latency this operation because these",
    "start": "1040839",
    "end": "1046438"
  },
  {
    "text": "calls should now be happening fairly close together and so if we imagine that before it was",
    "start": "1046439",
    "end": "1052160"
  },
  {
    "text": "around 200 milles we'd now be looking around 150 milliseconds because we've managed to do these two calls in",
    "start": "1052160",
    "end": "1057720"
  },
  {
    "text": "parallel this is good stuff this is non-blocking now of course everyone says",
    "start": "1057720",
    "end": "1063400"
  },
  {
    "text": "it's got to be non-blocking you can't block got to be non-blocking non-blocking non-blocking non-blocking is going to solve all your problems and",
    "start": "1063400",
    "end": "1068960"
  },
  {
    "text": "then I'm like yeah but we sometimes need responses right we might need answers",
    "start": "1068960",
    "end": "1075480"
  },
  {
    "text": "that's often the point of request response-based communication maybe I want a piece of information back",
    "start": "1075480",
    "end": "1081400"
  },
  {
    "text": "maybe I just want to know did it work something simple so non-blocking",
    "start": "1081400",
    "end": "1086559"
  },
  {
    "text": "code is great but you need the response so in this situation here once I've got",
    "start": "1086559",
    "end": "1092120"
  },
  {
    "text": "to this point those two calls may still be happening they haven't yet completed",
    "start": "1092120",
    "end": "1098240"
  },
  {
    "text": "but I might need to know the answer from the award points cour did the subscription up upgrading work so how do",
    "start": "1098240",
    "end": "1104679"
  },
  {
    "text": "I solve that well we need to wait don't we and so I might do something like call",
    "start": "1104679",
    "end": "1111760"
  },
  {
    "text": "a wait so this would block and wait until the values of these Futures has",
    "start": "1111760",
    "end": "1118600"
  },
  {
    "text": "been computed and now we're blocking right which is not to say that",
    "start": "1118600",
    "end": "1125400"
  },
  {
    "text": "the concept of non-blocking code is meaningless it's still a good idea but",
    "start": "1125400",
    "end": "1131080"
  },
  {
    "text": "you might need the answers right and the logic of your processing might require you to wait because until you know",
    "start": "1131080",
    "end": "1138400"
  },
  {
    "text": "something worked you don't know whether or not you should do the next thing or the next thing causality turns out is",
    "start": "1138400",
    "end": "1145760"
  },
  {
    "text": "often important so even at non-blocking calls can end up blocking however if you can",
    "start": "1145760",
    "end": "1153720"
  },
  {
    "text": "make use of non-blocking calls in general it's a good idea you'll find",
    "start": "1153720",
    "end": "1158919"
  },
  {
    "text": "that you will decrease latency um and the syntactic sugar we have around the reactive extensions has only got better",
    "start": "1158919",
    "end": "1165200"
  },
  {
    "text": "in most programming languages and so in general you'll end up with with more efficient code if you can embrace the concept of",
    "start": "1165200",
    "end": "1172000"
  },
  {
    "text": "non-blocking the thread's still going at this point right let's come back to our thread here's Graham the definition I've",
    "start": "1172000",
    "end": "1178559"
  },
  {
    "text": "been using is the sending service doesn't wait for completion of the receiving",
    "start": "1178559",
    "end": "1184799"
  },
  {
    "text": "service before continuing and or completing its own work so Graham again",
    "start": "1184799",
    "end": "1189880"
  },
  {
    "text": "is talking here about the concept of non-blocking Graham's uh was one of the Architects at Tyro in the U in Australia",
    "start": "1189880",
    "end": "1196559"
  },
  {
    "text": "which is a sort of payments company in a bank uh but now I think about it I think I",
    "start": "1196559",
    "end": "1202200"
  },
  {
    "text": "also expect temporal decoupling again that sounds like some Doctor Who stuff",
    "start": "1202200",
    "end": "1207760"
  },
  {
    "text": "doesn't it I also expect a temporal decoupling from the receiving Services",
    "start": "1207760",
    "end": "1214159"
  },
  {
    "text": "availability there was a number of other people that said similar things so here's Benjamin Johnson sync",
    "start": "1214159",
    "end": "1221840"
  },
  {
    "text": "communication there's direct communication whatever that means when you look at how networks actually work",
    "start": "1221840",
    "end": "1227679"
  },
  {
    "text": "between the sender and receiver async there's an intermediary involved between the sender",
    "start": "1227679",
    "end": "1233799"
  },
  {
    "text": "and the receiver for example the message broker let's talk a little bit about this idea then of an intermediary this",
    "start": "1233799",
    "end": "1240600"
  },
  {
    "text": "comes up a lot asynchronous to a lot of people means you've got a broker this is the most common",
    "start": "1240600",
    "end": "1247000"
  },
  {
    "text": "intermediary we might see so let's talk about why we might use it and what this temporal decoupling",
    "start": "1247000",
    "end": "1252840"
  },
  {
    "text": "means so I've got something I want to send from A to B I generically say if",
    "start": "1252840",
    "end": "1258000"
  },
  {
    "text": "I'm using a message message broker I'm sending a message a message could contain a request it could contain a response it could contain an event",
    "start": "1258000",
    "end": "1265280"
  },
  {
    "text": "whatever so rather than sending it direct to service b instead I'm going to give it to the broker and the broker is",
    "start": "1265280",
    "end": "1272640"
  },
  {
    "text": "going to deliver that message once the recipient is",
    "start": "1272640",
    "end": "1278559"
  },
  {
    "text": "available so initially perhaps B is already got other work it's doing so it",
    "start": "1278559",
    "end": "1283600"
  },
  {
    "text": "can't take on board any more work maybe it's offline but when it becomes available the broker will deliver it so",
    "start": "1283600",
    "end": "1291360"
  },
  {
    "text": "this is what we call temporal decoupling if we have two Services which are temporally coupled in the context of",
    "start": "1291360",
    "end": "1299039"
  },
  {
    "text": "interprocess communication what we mean is that I need to be able to talk to you at that same moment in time for this",
    "start": "1299039",
    "end": "1305600"
  },
  {
    "text": "operation to complete we are coupled in time with a broker I get to temporally",
    "start": "1305600",
    "end": "1311400"
  },
  {
    "text": "decouple things and that means I can still try and get things moving even if you're not",
    "start": "1311400",
    "end": "1317360"
  },
  {
    "text": "available we we also use temporal decoupling in different context as well but this is how we use temporal",
    "start": "1317360",
    "end": "1322600"
  },
  {
    "text": "decoupling in the context of interprocess communication this is the main P reason people use message Brokers",
    "start": "1322600",
    "end": "1329559"
  },
  {
    "text": "it gives you some improved robustness and it gives you this property of uh kind of guaranteed delivery whatever",
    "start": "1329559",
    "end": "1336880"
  },
  {
    "text": "that means and we're getting the broker to do that for us useful things kind of",
    "start": "1336880",
    "end": "1342679"
  },
  {
    "text": "right let we have this other nice imagery coming this person said asynchronous is like dropping snail ma",
    "start": "1342679",
    "end": "1350480"
  },
  {
    "text": "in a red post box and getting on with your life and then bam one day Postman Pat stuff something into your house",
    "start": "1350480",
    "end": "1356640"
  },
  {
    "text": "mailbox along with millions of coupons and charity mailers I'm aware that Postman Pat might be a UK phenomenon so",
    "start": "1356640",
    "end": "1362919"
  },
  {
    "text": "this is Postman Pat this is the OG Postman Pat Uh the new one apparently is all computer generated has a hovercraft",
    "start": "1362919",
    "end": "1368840"
  },
  {
    "text": "this is Postman Pat and his black and white cat um but we have this idea of that metaphor as of the message broker",
    "start": "1368840",
    "end": "1375520"
  },
  {
    "text": "as a mailbox these are American mailboxes in okay we have letter boxes because we won't automatically shoot",
    "start": "1375520",
    "end": "1381840"
  },
  {
    "text": "people when they come onto our property right but here you putp things in the mailbox you might be away you might be",
    "start": "1381840",
    "end": "1387159"
  },
  {
    "text": "at work you come back from work the letters are waiting for you the mail system and our mailboxes has temporally",
    "start": "1387159",
    "end": "1394200"
  },
  {
    "text": "decoupled us from needing to be at home when our post is delivered it is a useful",
    "start": "1394200",
    "end": "1400760"
  },
  {
    "text": "concept and there are different variations on how we can implement this inbox pattern Brokers are an obvious way",
    "start": "1400760",
    "end": "1406000"
  },
  {
    "text": "of doing it you see people doing it with databases and that can work quite well uh you can do this with file systems a",
    "start": "1406000",
    "end": "1412279"
  },
  {
    "text": "huge amount of interprocess communication historically has been files one program puts a file there and",
    "start": "1412279",
    "end": "1418720"
  },
  {
    "text": "a different program at some point later on picks it up main most mainframes work in this way you could use email for this",
    "start": "1418720",
    "end": "1425080"
  },
  {
    "text": "for implementing interprocess communication between services but don't because it's DED it's theoretically",
    "start": "1425080",
    "end": "1432120"
  },
  {
    "text": "possible the key thing here is the sender of the message doesn't need to worry about whether or not the recipient",
    "start": "1432120",
    "end": "1438440"
  },
  {
    "text": "ient is currently available they might care whether or not it is available later on but at the moment of sending I",
    "start": "1438440",
    "end": "1445440"
  },
  {
    "text": "don't need to worry about it this is really useful it's it's freeing it's mentally",
    "start": "1445440",
    "end": "1451720"
  },
  {
    "text": "freeing however for that to happen we need to have trust in the intermediary",
    "start": "1451720",
    "end": "1457600"
  },
  {
    "start": "1453000",
    "end": "1613000"
  },
  {
    "text": "this is why we need our Brokers to be good Brokers so in this situation here I'm sending a request from A to B I put",
    "start": "1457600",
    "end": "1463679"
  },
  {
    "text": "that request onto a request cu the request CU then when B available delivers that request to b b does the",
    "start": "1463679",
    "end": "1469720"
  },
  {
    "text": "processing and I send the response back this is a classic example of request response over cues and it's absolutely",
    "start": "1469720",
    "end": "1475799"
  },
  {
    "text": "fine and dandy and it's great but oh no we start introducing new problems you see when we deploy Services we typically",
    "start": "1475799",
    "end": "1482159"
  },
  {
    "text": "have multiple instances of a service in this example here I have two instances",
    "start": "1482159",
    "end": "1487279"
  },
  {
    "text": "of service a service the first instance of service a sends the request the",
    "start": "1487279",
    "end": "1492480"
  },
  {
    "text": "response gets processed it comes back on the Queue and theoretically any instance of service a",
    "start": "1492480",
    "end": "1500000"
  },
  {
    "text": "could pick that response up some people see this as a problem I see this as a",
    "start": "1500000",
    "end": "1505559"
  },
  {
    "text": "benefit stateless processing is what we're aiming for here what you want is all the context of the message is all we",
    "start": "1505559",
    "end": "1513039"
  },
  {
    "text": "need to be able to process that message uh whereas if you're doing stateful processing where you're basically",
    "start": "1513039",
    "end": "1519080"
  },
  {
    "text": "keeping memory in state you need that response to come back to the same thing that sent the request and the problem",
    "start": "1519080",
    "end": "1526159"
  },
  {
    "text": "with that of course is well what happens if your machine with all that stateful processing in it falls over and crashes",
    "start": "1526159",
    "end": "1532279"
  },
  {
    "text": "You' then lost all that state and you say don't worry I've got some really smart complicated technology that's I'm",
    "start": "1532279",
    "end": "1537600"
  },
  {
    "text": "going have to pay a vendor for to do magic replication of data between my nodes and it's like why are you making",
    "start": "1537600",
    "end": "1543440"
  },
  {
    "text": "your life difficult just do stateless processing and actually using things like message Brokers for request response based communication tends to",
    "start": "1543440",
    "end": "1549960"
  },
  {
    "text": "force you down that path of stateless processing coming back to this example",
    "start": "1549960",
    "end": "1555480"
  },
  {
    "text": "we do have this issue about what happens if the process dies partway through right in this example because we are",
    "start": "1555480",
    "end": "1562880"
  },
  {
    "text": "probably opening a network connection from one server to another server I'm sending you stuff by definition the",
    "start": "1562880",
    "end": "1569080"
  },
  {
    "text": "responses are going to come back to the same computer however now if that client dies partway through this processing we",
    "start": "1569080",
    "end": "1575960"
  },
  {
    "text": "have a problem what do we need to do in that situation typically the answer is well we'll just restart the whole",
    "start": "1575960",
    "end": "1581679"
  },
  {
    "text": "process and if it's not overly a complicated process and if your operations are ID and potent that's absolutely fine but it's",
    "start": "1581679",
    "end": "1588840"
  },
  {
    "text": "arguable but I think that using intermediaries with thing especially for things like request response based",
    "start": "1588840",
    "end": "1594039"
  },
  {
    "text": "communication but even for event based as well it tends to guide us and force us towards stateless processing which is",
    "start": "1594039",
    "end": "1600760"
  },
  {
    "text": "always preferable if you're somebody who thinks you might want to do stateful processing",
    "start": "1600760",
    "end": "1607360"
  },
  {
    "text": "you're probably wrong but even if you are wrong I hope you're having a good time and you've got some phds knocking around so we've got all these competing",
    "start": "1607360",
    "end": "1614200"
  },
  {
    "start": "1613000",
    "end": "1644000"
  },
  {
    "text": "definitions we've got a definition around immediacy is it fast is it slow I don't think that has any meaning because",
    "start": "1614200",
    "end": "1620960"
  },
  {
    "text": "that's a bit of a different thing there's the temporal coupling problem there's non-blocking calls there's the",
    "start": "1620960",
    "end": "1626880"
  },
  {
    "text": "the concept of you know in intermediaries as well the Brokers the",
    "start": "1626880",
    "end": "1632399"
  },
  {
    "text": "databases so which one of these is asynchronous they all asynchronous some of them asynchronous but some people",
    "start": "1632399",
    "end": "1638440"
  },
  {
    "text": "only think some of these things are asynchronous does it matter words have different",
    "start": "1638440",
    "end": "1646320"
  },
  {
    "start": "1644000",
    "end": "1933000"
  },
  {
    "text": "meanings now I'm aware not all of you will speak English as a first language I barely do",
    "start": "1646320",
    "end": "1651840"
  },
  {
    "text": "myself but maybe quick quiz does anybody know which word in the English language",
    "start": "1651840",
    "end": "1659559"
  },
  {
    "text": "has the most meanings in the dictionary go ahead",
    "start": "1659559",
    "end": "1665200"
  },
  {
    "text": "set I love the fact that set has the most meanings in the current full edition of the ox English dictionary and",
    "start": "1665200",
    "end": "1671960"
  },
  {
    "text": "get is also like a close number two which for me is a computer programmer feels quite nice right they're quite",
    "start": "1671960",
    "end": "1677600"
  },
  {
    "text": "close together so set in the current full edition has the most meanings in the next full",
    "start": "1677600",
    "end": "1683919"
  },
  {
    "text": "edition of the dictionary which is coming out in 20135 or 2037 it's going to be run to put this in context about",
    "start": "1683919",
    "end": "1691360"
  },
  {
    "text": "how many words definitions they have set has 430",
    "start": "1691360",
    "end": "1696720"
  },
  {
    "text": "meanings run currently has around 645",
    "start": "1696720",
    "end": "1702960"
  },
  {
    "text": "meanings do you think you know all of these oh it doesn't matter does it",
    "start": "1702960",
    "end": "1708919"
  },
  {
    "text": "it doesn't really matter we're used to words having different",
    "start": "1708919",
    "end": "1714320"
  },
  {
    "text": "meanings so how do we to work out what these words mean when someone uses the word run how do we know what meaning of",
    "start": "1714320",
    "end": "1720720"
  },
  {
    "text": "run they're thinking of well we derive meaning from the context in which the word is used and one of the ways we",
    "start": "1720720",
    "end": "1727919"
  },
  {
    "text": "enrich that context is putting other words around it I had a great",
    "start": "1727919",
    "end": "1733320"
  },
  {
    "text": "conversation with Ian Cooper um often people have a hint land right there's things they do outside of work in",
    "start": "1733320",
    "end": "1739360"
  },
  {
    "text": "Cooper's Hinterland is like is like the Alps right you know uh because of course he studed semiotics at University so he",
    "start": "1739360",
    "end": "1746320"
  },
  {
    "text": "was explaining to me well about the nature of meaning the meaning of a word becomes more narrow as we add other",
    "start": "1746320",
    "end": "1753480"
  },
  {
    "text": "words around it so let's try an experiment let's pick run I want each of",
    "start": "1753480",
    "end": "1759159"
  },
  {
    "text": "you to imagine right now what run means to you the first definition of what run means to you I want you to have that in",
    "start": "1759159",
    "end": "1764600"
  },
  {
    "text": "your head and I'm going to put some words around it and let's see if we talk about the same thing the issue got worse the moment the",
    "start": "1764600",
    "end": "1772679"
  },
  {
    "text": "program was run maybe some of you were thinking about exercising I mean it's unlikely in a",
    "start": "1772679",
    "end": "1779159"
  },
  {
    "text": "Tech conference but maybe some of you are thinking about exercising let's try it again think of a different definition",
    "start": "1779159",
    "end": "1784399"
  },
  {
    "text": "of the word run that you might have the economy crashed due to run on",
    "start": "1784399",
    "end": "1790720"
  },
  {
    "text": "the banks now it's possible that I use the same meaning that you had in your",
    "start": "1790720",
    "end": "1796120"
  },
  {
    "text": "head but we couldn't confirm that until I put some more words around it so that",
    "start": "1796120",
    "end": "1801600"
  },
  {
    "text": "we now can be on the same page and so when we communicate we are doing this all the time we are putting extra words",
    "start": "1801600",
    "end": "1808360"
  },
  {
    "text": "around other words and from that wider context we are hopefully on the same",
    "start": "1808360",
    "end": "1813559"
  },
  {
    "text": "page and able to communicate context is important coming back to context the",
    "start": "1813559",
    "end": "1818720"
  },
  {
    "text": "reactive Manifesto with their definition of asynchronous the Oxford dictionary",
    "start": "1818720",
    "end": "1823960"
  },
  {
    "text": "defines asynchronous as not existing or occurring at the same time by the way is what you get if you go to Google and say",
    "start": "1823960",
    "end": "1830519"
  },
  {
    "text": "what does asynchronous mean this is the first definition that comes back every time you go to the Oxford English",
    "start": "1830519",
    "end": "1837039"
  },
  {
    "text": "Dictionary if you're in the UK you can get free this is freely available to the full copy if you've got a library card",
    "start": "1837039",
    "end": "1843120"
  },
  {
    "text": "uh and so we can look through all the definitions and it is in fact look it's the top one number one context I",
    "start": "1843120",
    "end": "1850159"
  },
  {
    "text": "mentioned context being important and the Oxford English Dictionary gives us context it explains where these words",
    "start": "1850159",
    "end": "1856240"
  },
  {
    "text": "come from and the context in which they were first used and we look and we see oh look uh originally this was only used",
    "start": "1856240",
    "end": "1862360"
  },
  {
    "text": "in medical contexts and this is a word that was kind of from the 1800s no even earlier than",
    "start": "1862360",
    "end": "1869679"
  },
  {
    "text": "that so I thought well hang on a minute maybe the oxy dictionary has come to my rescue after all this time maybe they've",
    "start": "1869679",
    "end": "1876279"
  },
  {
    "text": "got a definition for asynchronous in the context of computing and they do they",
    "start": "1876279",
    "end": "1881840"
  },
  {
    "text": "have more than one in fact um the one that's closest to communication between Services is is",
    "start": "1881840",
    "end": "1888080"
  },
  {
    "text": "this one down here this one as well is kind of confusing this is all about clock",
    "start": "1888080",
    "end": "1894039"
  },
  {
    "text": "signals and things this is more about internal asynchronicity the one down below is more interesting designated data",
    "start": "1894039",
    "end": "1901360"
  },
  {
    "text": "transmissions in which packets of data are centered irregular intervals with the start and end of each packet being marked by specific signals involving",
    "start": "1901360",
    "end": "1907600"
  },
  {
    "text": "such Transmissions I have no idea what that means this might be interesting to you",
    "start": "1907600",
    "end": "1913600"
  },
  {
    "text": "if you're at the level of Designing packet based you know switching and low Network protocol Design This probably",
    "start": "1913600",
    "end": "1919919"
  },
  {
    "text": "makes sense to you most of us do not work in this context most of us work at higher levels of abstraction so this",
    "start": "1919919",
    "end": "1926840"
  },
  {
    "text": "definition is also uh no bueno software is a type of socio",
    "start": "1926840",
    "end": "1934039"
  },
  {
    "start": "1933000",
    "end": "2269000"
  },
  {
    "text": "technical system this is a talk about meaning we should explain what we mean by a socio technical",
    "start": "1934039",
    "end": "1941240"
  },
  {
    "text": "system a soot technical system is a system which involves people and technology technology defined more",
    "start": "1941240",
    "end": "1947480"
  },
  {
    "text": "broadly than how we think about Information Technology uh and before you think oh God this is going to be some kind of",
    "start": "1947480",
    "end": "1953760"
  },
  {
    "text": "snowflake based talk uh about some liberals saying we why can't we all get along this is woke architecture whatever",
    "start": "1953760",
    "end": "1960799"
  },
  {
    "text": "actually the concept of soci Technical Systems actually came uh from studies into coal mining during World War II um",
    "start": "1960799",
    "end": "1967960"
  },
  {
    "text": "but they were looking at how do we understand systems in which people and complicated Technologies are working",
    "start": "1967960",
    "end": "1973480"
  },
  {
    "text": "together how do we make sure that those organizations and those systems are healthy and achieving the needs that we",
    "start": "1973480",
    "end": "1979240"
  },
  {
    "text": "have for them the amount of software created by an individual is inv",
    "start": "1979240",
    "end": "1984399"
  },
  {
    "text": "vanishingly rare the vast majority of all software we use is about people coming together",
    "start": "1984399",
    "end": "1992039"
  },
  {
    "text": "lonus when he did the first initial version of the Kel that was the last time he did anything by himself the work he then put into was",
    "start": "1992039",
    "end": "1999440"
  },
  {
    "text": "creating a community where tens of thousands of people could contribute to that code base",
    "start": "1999440",
    "end": "2004480"
  },
  {
    "text": "together bringing people together to use technology requires that we can",
    "start": "2004480",
    "end": "2010840"
  },
  {
    "text": "communicate with each other we want to be in a situation where we have the same picture in our head",
    "start": "2010840",
    "end": "2017320"
  },
  {
    "text": "we're going to make this asynchronous but if we have different views about what we're going to do this is going to",
    "start": "2017320",
    "end": "2022960"
  },
  {
    "text": "end badly we're not going to be able to coordinate and this is not a new idea The Importance of Being able to",
    "start": "2022960",
    "end": "2029200"
  },
  {
    "text": "communicate clearly and understand one another and what happens if this isn't the case is well known this is the Tower",
    "start": "2029200",
    "end": "2036720"
  },
  {
    "text": "of Babel it's quite a famous painting this is actually a painting inspired by story in the Old Testament it's actually a very short story it talks about how",
    "start": "2036720",
    "end": "2044240"
  },
  {
    "text": "the the people of babyon were creating a very very tall Grand structure it",
    "start": "2044240",
    "end": "2050760"
  },
  {
    "text": "actually goes on there's a bit in the the passage which is I said very short talking about how Pais is due to them having good technology they probably",
    "start": "2050760",
    "end": "2057200"
  },
  {
    "text": "developed some sort of new concrete but one of the main thrusts of this Parable is this idea that they all spoke of one",
    "start": "2057200",
    "end": "2063878"
  },
  {
    "text": "language now some of you might be aware the Old Testament God was quite different to the New Testament God it",
    "start": "2063879",
    "end": "2070158"
  },
  {
    "text": "was like a real kind of midseason turnaround in character Arc right you know suddenly a different team of",
    "start": "2070159",
    "end": "2075398"
  },
  {
    "text": "writers came in and had a different view of the world right the Old Testament God was a bit capricious and in this",
    "start": "2075399",
    "end": "2080960"
  },
  {
    "text": "situation it's not really ever made clear in the in the parall itself God looks down and thought don't like that",
    "start": "2080960",
    "end": "2087800"
  },
  {
    "text": "and the he didn't Smite the tower he didn't kick it over he just stopped them",
    "start": "2087800",
    "end": "2093118"
  },
  {
    "text": "all speaking the same language that's all they needed to do the Old Testament God said you now have different",
    "start": "2093119",
    "end": "2100320"
  },
  {
    "text": "languages and that's how the tower was not built the term",
    "start": "2100320",
    "end": "2107520"
  },
  {
    "text": "asynchronous even if we look just in the context of interprocess communication",
    "start": "2107520",
    "end": "2113280"
  },
  {
    "text": "had so many meanings that it is effectively",
    "start": "2113280",
    "end": "2119680"
  },
  {
    "text": "meaningless I was going to show you um what was in the distributed systems book",
    "start": "2119680",
    "end": "2125520"
  },
  {
    "text": "in tanon Bound I search the latest Edition the Third Edition freely available should do with Van I think the",
    "start": "2125520",
    "end": "2132000"
  },
  {
    "text": "word asynchronous gets mentioned four times in what is basically an a 100 page",
    "start": "2132000",
    "end": "2138280"
  },
  {
    "text": "book like the authors of the distributed systems book are like we are not touching that word with a barge pole for",
    "start": "2138280",
    "end": "2144040"
  },
  {
    "text": "good reason so what can we do understand what your application",
    "start": "2144040",
    "end": "2151440"
  },
  {
    "text": "needs describe how you want your application or your system to handle",
    "start": "2151440",
    "end": "2157000"
  },
  {
    "text": "different situ situations what is important to the users of your application what do you expect should",
    "start": "2157000",
    "end": "2163960"
  },
  {
    "text": "happen when a server is unreachable how fast do you need your application to be",
    "start": "2163960",
    "end": "2169720"
  },
  {
    "text": "what are you going to do if a client crashes and where possible use more",
    "start": "2169720",
    "end": "2175119"
  },
  {
    "text": "explicit terms and take the time to define those more explicit terms and we have more explicit terms we have terms",
    "start": "2175119",
    "end": "2182119"
  },
  {
    "text": "like request response we have terms like event driven we can say things like the",
    "start": "2182119",
    "end": "2187640"
  },
  {
    "text": "client should be non-blocking we want operations to be run in parallel we are going to use a",
    "start": "2187640",
    "end": "2194560"
  },
  {
    "text": "broker as an intermediary so when talking and communicating internally make sure when",
    "start": "2194560",
    "end": "2200760"
  },
  {
    "text": "you use these words they mean the same thing to you and if they don't take the",
    "start": "2200760",
    "end": "2207240"
  },
  {
    "text": "time to talk about them but don't use",
    "start": "2207240",
    "end": "2212800"
  },
  {
    "text": "words that are so widely used and have so many definitions it's not helpful",
    "start": "2212800",
    "end": "2219000"
  },
  {
    "text": "try not to make this about just correcting people and thinking you're smarter part of the joke in The Princess",
    "start": "2219000",
    "end": "2224280"
  },
  {
    "text": "Bride is that you know vinus has this version in his head of what of what",
    "start": "2224280",
    "end": "2232400"
  },
  {
    "text": "it means and we know as the viewers all of us knows that he's using that word incorrectly it's a bit of fun",
    "start": "2232400",
    "end": "2240079"
  },
  {
    "text": "right but from the point of view of the conversations you have with your colleagues they're not",
    "start": "2240079",
    "end": "2246839"
  },
  {
    "text": "using the words is wrong they're just using the words differently and it's not for you to say if your version of that word is better",
    "start": "2246839",
    "end": "2253280"
  },
  {
    "text": "than their version of the word so next time someone says to you we should make",
    "start": "2253280",
    "end": "2258359"
  },
  {
    "text": "this a synchronous maybe all you need to say is okay what does that mean to",
    "start": "2258359",
    "end": "2265079"
  },
  {
    "text": "you uh because what you find may shock you thank you very much",
    "start": "2265079",
    "end": "2272640"
  }
]