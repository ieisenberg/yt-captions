[
  {
    "start": "0",
    "end": "83000"
  },
  {
    "text": "[Music]",
    "start": "960",
    "end": "8889"
  },
  {
    "text": "so today I'm going to be talking about Advanced Eda patterns at the LEGO Group and this is following on from Sheen's",
    "start": "13740",
    "end": "19920"
  },
  {
    "text": "talk earlier although not a prerequisite to the talk um you've already had a bit of an intro",
    "start": "19920",
    "end": "25920"
  },
  {
    "text": "to me but yes I'm an engineer at the LEGO Group and I'm also an AWS Community builder in the serverless space and my",
    "start": "25920",
    "end": "33540"
  },
  {
    "text": "interest in serverless really did start when I joined Tech consultancy and worked with a different range of clients",
    "start": "33540",
    "end": "38940"
  },
  {
    "text": "and kind of found a love for serverless mainly for how quickly you can build as a developer",
    "start": "38940",
    "end": "45300"
  },
  {
    "text": "um it's really awesome Tech and yeah do follow feel free to follow me on Twitter I took this at the handle",
    "start": "45300",
    "end": "51300"
  },
  {
    "text": "serverless Sarah so it's an easy one to remember so Sheen took us on a journey from where",
    "start": "51300",
    "end": "59039"
  },
  {
    "text": "the LEGO Group started to where we are today I joined the LEGO Group less than a year",
    "start": "59039",
    "end": "64080"
  },
  {
    "text": "ago so I've very much been in the most recent parts of it where a lot of it is serverless",
    "start": "64080",
    "end": "70740"
  },
  {
    "text": "and so I'm going to be talking about the here and now and talking about the patterns that we use and going quite in",
    "start": "70740",
    "end": "77040"
  },
  {
    "text": "depth with those although trying to make them quite understandable to everyone here",
    "start": "77040",
    "end": "83479"
  },
  {
    "start": "83000",
    "end": "110000"
  },
  {
    "text": "so just talk through the topics I'll talk about the squad setups and how it's important as to how we actually code",
    "start": "83479",
    "end": "90900"
  },
  {
    "text": "um at the LEGO Group and then diving into what we're all here for the actual use cases so going through the",
    "start": "90900",
    "end": "96420"
  },
  {
    "text": "architectures a few live examples in the console and then uh we'll wrap up with",
    "start": "96420",
    "end": "102119"
  },
  {
    "text": "some benefits but I feel like we've all kind of heard that because we're now at three o'clock so I think we all know the benefits with end driven architectures",
    "start": "102119",
    "end": "108360"
  },
  {
    "text": "by now so when we think about the LEGO Group I",
    "start": "108360",
    "end": "115200"
  },
  {
    "start": "110000",
    "end": "229000"
  },
  {
    "text": "think a lot of people think about the bricks um a lot of our Revenue comes from the website and the website there's a lot",
    "start": "115200",
    "end": "122640"
  },
  {
    "text": "more to it than often people may think and we split it all up into squads who own different sections of the uh the",
    "start": "122640",
    "end": "129360"
  },
  {
    "text": "website so for example a team will own the product sections we might have a team",
    "start": "129360",
    "end": "135060"
  },
  {
    "text": "owning the cart uh VIP so many different squads and I think that Sheen said that",
    "start": "135060",
    "end": "141900"
  },
  {
    "text": "we have over 25 squads now at Lego so we really are following kind of the model",
    "start": "141900",
    "end": "147000"
  },
  {
    "text": "of splitting teams up and having their own domains so talking about that a bit more",
    "start": "147000",
    "end": "154680"
  },
  {
    "text": "um there was a quote by Jeff Bezos that maybe a lot of people have seen before that we try to create teams that are no",
    "start": "154680",
    "end": "161280"
  },
  {
    "text": "larger than can be fed by two pizzas now I knew that two pizzas wouldn't feed my",
    "start": "161280",
    "end": "166680"
  },
  {
    "text": "team because I'm taking a whole one for myself um but the principle is that the teams",
    "start": "166680",
    "end": "172739"
  },
  {
    "text": "are fairly small and you know between five and ten people so definitely more",
    "start": "172739",
    "end": "178019"
  },
  {
    "text": "of a snack um but the reason for this is something",
    "start": "178019",
    "end": "183180"
  },
  {
    "text": "called the ringleman effect and it's the tendency for individual members of a group to basically become",
    "start": "183180",
    "end": "189060"
  },
  {
    "text": "increasingly less productive as the size of the group increases so there's many different reasons for",
    "start": "189060",
    "end": "196140"
  },
  {
    "text": "this I guess a key one is communication it's much easier to communicate and get along well with fewer members of the",
    "start": "196140",
    "end": "202860"
  },
  {
    "text": "team and there's also more negative reasons such as you can hide away in the shadows",
    "start": "202860",
    "end": "209040"
  },
  {
    "text": "once you have the larger teams and get away with doing less work but the principle is there there's many",
    "start": "209040",
    "end": "214920"
  },
  {
    "text": "different reasons why it may or may not happen but um yeah so that's that's why we tend to",
    "start": "214920",
    "end": "220920"
  },
  {
    "text": "follow this model and I know a lot of places like Netflix Spotify also follow this kind of model so it's the way",
    "start": "220920",
    "end": "225959"
  },
  {
    "text": "things are going but technically how do we decouple the",
    "start": "225959",
    "end": "231180"
  },
  {
    "start": "229000",
    "end": "528000"
  },
  {
    "text": "squads so here's a few examples of a few of the squads that we may have and what",
    "start": "231180",
    "end": "238140"
  },
  {
    "text": "I kind of say is it's kind of a workaround effect that decoupled squads equals decoupled code and I'll talk",
    "start": "238140",
    "end": "243720"
  },
  {
    "text": "about how we achieve that before we get into the examples but essentially at the",
    "start": "243720",
    "end": "249060"
  },
  {
    "text": "heart of it all it is um events that you know talk between",
    "start": "249060",
    "end": "254879"
  },
  {
    "text": "them I think we've heard it all before today so I won't go too much into how events are fired and things like that",
    "start": "254879",
    "end": "260459"
  },
  {
    "text": "um but that's how it's all working and the LEGO Group is a big organization and",
    "start": "260459",
    "end": "265620"
  },
  {
    "text": "it really is a journey you know it's kind of it's never perfect and we've gone from a place of not being event",
    "start": "265620",
    "end": "271199"
  },
  {
    "text": "driven to get into a place where we are fairly event driven um but it's a journey and",
    "start": "271199",
    "end": "278040"
  },
  {
    "text": "unlucky because a lot of the places that I work on really are event driven and we are following amazing principles a lot",
    "start": "278040",
    "end": "284400"
  },
  {
    "text": "of them implemented and designed by Sheen hair himself uh has he's been at the LEGO Group for a much longer time",
    "start": "284400",
    "end": "290759"
  },
  {
    "text": "than me so one of the ways that we actually technically break these things up is to",
    "start": "290759",
    "end": "297660"
  },
  {
    "text": "have separate Cloud accounts um per team so when I joined my team we",
    "start": "297660",
    "end": "302759"
  },
  {
    "text": "requested a cloud account from the it uh department and they essentially own the",
    "start": "302759",
    "end": "308520"
  },
  {
    "text": "root account and we use AWS organizations which I'm sure a lot of you may have heard of to have a root",
    "start": "308520",
    "end": "314880"
  },
  {
    "text": "account and then request a cloud account from the root account and by using this the root account can Implement certain",
    "start": "314880",
    "end": "321540"
  },
  {
    "text": "policies to make sure that we have a standard across the LEGO Group for example we all have to use guard Duty",
    "start": "321540",
    "end": "327300"
  },
  {
    "text": "certain things like that that we implement so that's one way that we split things up and there's benefits to this as well",
    "start": "327300",
    "end": "334199"
  },
  {
    "text": "such as being able to track costs of individual teams so it's much harder when everyone's on one account to",
    "start": "334199",
    "end": "341520"
  },
  {
    "text": "track the course where you can look at One account and see oh that team spends a lot of money so we want to kind of",
    "start": "341520",
    "end": "346860"
  },
  {
    "text": "change that um or not and also it's following the principle of least privilege and that",
    "start": "346860",
    "end": "353220"
  },
  {
    "text": "I can only really be messing around with my client cloud account I can't be messing around in someone else's cloud",
    "start": "353220",
    "end": "358979"
  },
  {
    "text": "account that I knew nothing about um so yeah there's lots of benefits to that",
    "start": "358979",
    "end": "364919"
  },
  {
    "text": "um following on from that we also follow a multi-repro approach which goes hand in hand so it allows for",
    "start": "364919",
    "end": "370380"
  },
  {
    "text": "the separation of concerns so again having the payment Squad working in the payments repo in the payments cloud",
    "start": "370380",
    "end": "375660"
  },
  {
    "text": "account um just allows us to kind of decouple everything and again the well at defined access",
    "start": "375660",
    "end": "382500"
  },
  {
    "text": "control and it allows for team autonomy so some of our teams they do work with",
    "start": "382500",
    "end": "388500"
  },
  {
    "text": "different programming languages whether it's down to the fact that for that team it works for them or different skill",
    "start": "388500",
    "end": "394319"
  },
  {
    "text": "sets and it allows that team to really choose the kind of coding principles that they want to implement in their",
    "start": "394319",
    "end": "399539"
  },
  {
    "text": "repo and it also allows for independent Library versioning which may or may not",
    "start": "399539",
    "end": "406560"
  },
  {
    "text": "be a benefit um depends on your approach and following on from that the team owns",
    "start": "406560",
    "end": "413699"
  },
  {
    "text": "the CI CD pipeline which allows for Less waiting around so when I've worked in huge monoliths",
    "start": "413699",
    "end": "420419"
  },
  {
    "text": "everyone's CI CD checks are in that monolith and you'll be waiting a long",
    "start": "420419",
    "end": "425520"
  },
  {
    "text": "long time and then someone's check will fail because someone pushed an error into their their part of the code and",
    "start": "425520",
    "end": "432360"
  },
  {
    "text": "it's incredibly annoying because it has nothing to do with your PR so having them all separate it really",
    "start": "432360",
    "end": "437880"
  },
  {
    "text": "does lead to less frustration and more likely that the test will pass first time",
    "start": "437880",
    "end": "444259"
  },
  {
    "text": "and starting to finish up on this topic before we go into the in-depth examples this is how we do some of our",
    "start": "444900",
    "end": "451500"
  },
  {
    "text": "deployments at Lego in the back end so we have all of our services uh listed",
    "start": "451500",
    "end": "456840"
  },
  {
    "text": "down the side here and you've got a good overview of the different commits that will have been pushed into our QA",
    "start": "456840",
    "end": "463259"
  },
  {
    "text": "environment acceptance and then production and you can see here that for example this commit was not deployed",
    "start": "463259",
    "end": "469440"
  },
  {
    "text": "into production but we kind of look at this and because the most recent commit was everything before that has gone into",
    "start": "469440",
    "end": "475560"
  },
  {
    "text": "prod and it's a nice way out of hours if our Ops team needs to get involved and",
    "start": "475560",
    "end": "480780"
  },
  {
    "text": "kind of diagnose issues it's all very visual in a UI well there's many different ways of",
    "start": "480780",
    "end": "485880"
  },
  {
    "text": "doing this I suppose at different organizations and the final thing on this topic is the",
    "start": "485880",
    "end": "491220"
  },
  {
    "text": "team owns the monitoring and Analytics so we use a tool called New Relic but",
    "start": "491220",
    "end": "497940"
  },
  {
    "text": "you know other ones lumigo data datadog do the same thing and essentially because the team can own",
    "start": "497940",
    "end": "504900"
  },
  {
    "text": "this I have like alarms set up to alert our teams whereas if it was all going",
    "start": "504900",
    "end": "510539"
  },
  {
    "text": "into one big chamber with 150 Engineers I'm never going to take responsibility for that error so having the team really",
    "start": "510539",
    "end": "517800"
  },
  {
    "text": "owning it and again it's that thing of hiding away in the shadows when uh there's too many people too many chefs",
    "start": "517800",
    "end": "523919"
  },
  {
    "text": "in the kitchen I suppose um okay so moving on to the examples",
    "start": "523919",
    "end": "529920"
  },
  {
    "start": "528000",
    "end": "841000"
  },
  {
    "text": "firstly I want to talk about event streaming so the first use case that I want to",
    "start": "529920",
    "end": "536700"
  },
  {
    "text": "talk about is uh customer emails so we have a customer who navigates the",
    "start": "536700",
    "end": "543180"
  },
  {
    "text": "website they've consented to marketing when they accepted the cookies and then all of",
    "start": "543180",
    "end": "549660"
  },
  {
    "text": "that data goes through into our back end called The Campaign service and the data is processed a bit of logic",
    "start": "549660",
    "end": "557160"
  },
  {
    "text": "to kind of figure out what has kind of happened on this customer's journey and then that backend then sends some uh",
    "start": "557160",
    "end": "565380"
  },
  {
    "text": "data to third-party marketing provider who then sends an email so that email",
    "start": "565380",
    "end": "570420"
  },
  {
    "text": "may be customized because that person's been looking at cars or they're",
    "start": "570420",
    "end": "575760"
  },
  {
    "text": "interested in children's toys uh that sort of thing",
    "start": "575760",
    "end": "580940"
  },
  {
    "text": "and another use case for this event streaming is obviously analytics so all",
    "start": "580940",
    "end": "586200"
  },
  {
    "text": "of this data is being fed into our um observability platform in order to",
    "start": "586200",
    "end": "591660"
  },
  {
    "text": "produce these graphs so how do we implement this well we have",
    "start": "591660",
    "end": "596820"
  },
  {
    "text": "one service to power them all so in our service what you can see here is",
    "start": "596820",
    "end": "603720"
  },
  {
    "text": "our architecture diagram which is where we're going to start going a bit deeper so we have the user who is um",
    "start": "603720",
    "end": "612600"
  },
  {
    "text": "clicking around in lego.com and that data is coming into our backend service",
    "start": "612600",
    "end": "617839"
  },
  {
    "text": "we use Kinesis data fire hose so I'm sure many of you are aware of Kinesis",
    "start": "617839",
    "end": "623580"
  },
  {
    "text": "but the data fire hose we use in particular because of its ability to batch data and to um",
    "start": "623580",
    "end": "631500"
  },
  {
    "text": "send data into an S3 bucket and from here",
    "start": "631500",
    "end": "636540"
  },
  {
    "text": "the event object creation sends an event to trigger the Lambda function and then",
    "start": "636540",
    "end": "642660"
  },
  {
    "text": "this Lambda function will triage the data so depending on the Event Source or different parameters that we decide to",
    "start": "642660",
    "end": "648800"
  },
  {
    "text": "decide upon we'll then send the events out to different microservices so essentially different teams",
    "start": "648800",
    "end": "655680"
  },
  {
    "text": "and what it means is that we can just use this one service for all teams and we can always plug in these different",
    "start": "655680",
    "end": "662459"
  },
  {
    "text": "um services in order to be able to take the data and we just add the rules into the",
    "start": "662459",
    "end": "668100"
  },
  {
    "text": "triage Lambda in order to Define that and just to show here what we have is the campaign service that we discussed",
    "start": "668100",
    "end": "674940"
  },
  {
    "text": "which would be the marketing emails and the analytics which would be the New Relic graphs and there's also different",
    "start": "674940",
    "end": "680940"
  },
  {
    "text": "ones as well but I don't want to go into everything um",
    "start": "680940",
    "end": "686100"
  },
  {
    "text": "so just to take a look at that a bit deeper we have the um the events that come in from the front",
    "start": "686100",
    "end": "691980"
  },
  {
    "text": "end and you can see I mean these will look different depending on where they came from but essentially you know you",
    "start": "691980",
    "end": "697740"
  },
  {
    "text": "can see the event type which is a page event the person was on the URL Hogwarts Castle and that's now coming into",
    "start": "697740",
    "end": "704279"
  },
  {
    "text": "Kinesis fire hose this is happening at huge scale you can imagine how many users we have on the website and then",
    "start": "704279",
    "end": "710760"
  },
  {
    "text": "therefore how many clicks and how much but who's can really handle all of this and",
    "start": "710760",
    "end": "717779"
  },
  {
    "text": "it's really designed to work at this kind of scale",
    "start": "717779",
    "end": "722180"
  },
  {
    "text": "so then the Kinesis fire hose batches this data up and puts it into S3",
    "start": "723360",
    "end": "729360"
  },
  {
    "text": "and how it batches is depending on this buffer size and buffer interval and it's whichever condition is met first",
    "start": "729360",
    "end": "736380"
  },
  {
    "text": "so if the buffer size is one megabyte and the buffer interval is 60 seconds",
    "start": "736380",
    "end": "741600"
  },
  {
    "text": "you can see here in these objects and if I come over here that we never met one",
    "start": "741600",
    "end": "747899"
  },
  {
    "text": "megabyte but we did then meet the one minute so they've been coming in every minute",
    "start": "747899",
    "end": "753540"
  },
  {
    "text": "but on a day like Black Friday we will be hitting the one megabyte and we won't be reaching the 60 seconds so",
    "start": "753540",
    "end": "760260"
  },
  {
    "text": "that's kind of how it works that trade-off for the uh the batching",
    "start": "760260",
    "end": "766940"
  },
  {
    "text": "and just to add to this we add things like S3 lifecycle policies to our buckets uh we don't treat this as a data",
    "start": "767160",
    "end": "774540"
  },
  {
    "text": "warehouse so we expire the objects after five days the only reason why maybe not after one day is just in case of any",
    "start": "774540",
    "end": "781260"
  },
  {
    "text": "downtime we we may want to replay uh this sort of thing but we just don't",
    "start": "781260",
    "end": "786540"
  },
  {
    "text": "want to be keeping data around for the sake of it it's a lot of data as well even though it is only kind of text",
    "start": "786540",
    "end": "791880"
  },
  {
    "text": "objects um but it's just nice things that AWS gives us that just happens automatically",
    "start": "791880",
    "end": "797639"
  },
  {
    "text": "without us thinking and if we take a look at a piece of code",
    "start": "797639",
    "end": "802740"
  },
  {
    "text": "I'll be going into this a bit more when I show you the yaml files but you can see how we have the triage Lambda and we",
    "start": "802740",
    "end": "810120"
  },
  {
    "text": "have a various setup and then in the events it's triggered by S3 we get the",
    "start": "810120",
    "end": "815700"
  },
  {
    "text": "bucket and it's on object created um and then you can set certain rules for where it is in the bucket and so on",
    "start": "815700",
    "end": "823040"
  },
  {
    "text": "so that's how it works and I'm sure many of you are familiar with that style of code um you know the events can be HTTP or",
    "start": "823040",
    "end": "830639"
  },
  {
    "text": "other kind of events after all it is an event driven day so I thought I'd point that out",
    "start": "830639",
    "end": "837060"
  },
  {
    "text": "so if we take a look at a quick example I'd",
    "start": "837060",
    "end": "842519"
  },
  {
    "start": "841000",
    "end": "1203000"
  },
  {
    "text": "just like to show you how I implemented this so I so my framework of choice is serverless",
    "start": "842519",
    "end": "850680"
  },
  {
    "text": "framework but obviously this can be transferred into cdk or a different one of your choosing and if we skip back past the kind of",
    "start": "850680",
    "end": "857639"
  },
  {
    "text": "roles and things like that um I just want to show you how I've set up the Kinesis fire hose so you can see",
    "start": "857639",
    "end": "864360"
  },
  {
    "text": "here I've got the delivery stream and then we have an extended S3 destination configuration so this is how we're",
    "start": "864360",
    "end": "870240"
  },
  {
    "text": "setting up that connection and you can see how it's so um simple in a way like it's",
    "start": "870240",
    "end": "878040"
  },
  {
    "text": "only a few lines of code just to be able to get data to go from Kinesis to S3 uh",
    "start": "878040",
    "end": "883500"
  },
  {
    "text": "which is pretty insane um so you can see here that I mean we've",
    "start": "883500",
    "end": "888720"
  },
  {
    "text": "defined the I am roles and you can see again we've defined the buffering hints and the prefix",
    "start": "888720",
    "end": "895380"
  },
  {
    "text": "and then just quickly we do have the triage a Lambda function which I've added the S3 trigger to and then just",
    "start": "895380",
    "end": "902399"
  },
  {
    "text": "because I wanted to show I'm going to show all of this in the console in a moment I wanted to show how the triage",
    "start": "902399",
    "end": "908040"
  },
  {
    "text": "sends off to different uh Services just to make it a bit simpler I've created three Lambda functions and I want to",
    "start": "908040",
    "end": "914579"
  },
  {
    "text": "show that in those Lambda functions I've put a console log for the different",
    "start": "914579",
    "end": "919760"
  },
  {
    "text": "events so we can what I want you to see in the cloud watch logs is that only",
    "start": "919760",
    "end": "925800"
  },
  {
    "text": "energy events once the Energy Service even though it's a Lander and same for",
    "start": "925800",
    "end": "931019"
  },
  {
    "text": "healthcare and technology and we don't need to go through the code in the triage or essentially it's just invoking",
    "start": "931019",
    "end": "936899"
  },
  {
    "text": "the different Lambda functions based on the various things that's happening and whilst I've simplified this a bit here",
    "start": "936899",
    "end": "943199"
  },
  {
    "text": "this is exactly what happens on lego.com for all our click stream data and it scales beautifully",
    "start": "943199",
    "end": "949560"
  },
  {
    "text": "so if we go to the console I'm going to quickly demo this one so",
    "start": "949560",
    "end": "955920"
  },
  {
    "text": "we've got our Kinesis data fire hose and the nice thing about data fire hose is",
    "start": "955920",
    "end": "961019"
  },
  {
    "text": "that it allows us to just test with demo data so making my life a lot easier so I'll start sending the demo data so I",
    "start": "961019",
    "end": "967440"
  },
  {
    "text": "think this is sending it out something like I don't know one per second and I'm kind of rambling on here because",
    "start": "967440",
    "end": "973800"
  },
  {
    "text": "of our 60 second buffer interval that the object is only going to arrive in S3",
    "start": "973800",
    "end": "979260"
  },
  {
    "text": "in a minute so if we take a look at the S3 bucket",
    "start": "979260",
    "end": "986940"
  },
  {
    "text": "um in the properties no sorry in the management you can see that it's yes I've added the life cycle rules",
    "start": "986940",
    "end": "994260"
  },
  {
    "text": "so yeah I've added the two days just Gap filling here until it comes in and then in the properties you can see that we",
    "start": "994260",
    "end": "1000980"
  },
  {
    "text": "have the event notification so you can see how it's connected to the Lambda triage",
    "start": "1000980",
    "end": "1006019"
  },
  {
    "text": "as well um and I'm sure many of you are familiar I've deployed all of this before saving",
    "start": "1006019",
    "end": "1012019"
  },
  {
    "text": "ourselves the time because that would be incredibly stressful to have to do that up here",
    "start": "1012019",
    "end": "1017120"
  },
  {
    "text": "so yeah let's go into here so you can see we've got our prefix e-commerce basically and then events and then",
    "start": "1017120",
    "end": "1025640"
  },
  {
    "text": "things come it automatically goes in day order so we have 2022 we're in September",
    "start": "1025640",
    "end": "1032418"
  },
  {
    "text": "it is the first and we're on this 14th hour because I think it's a UTC time",
    "start": "1032419",
    "end": "1038660"
  },
  {
    "text": "and yeah we have one so I'm gonna so I'm gonna stop sending this demo data to not rack up my AWS Bill even though I'm sure",
    "start": "1038660",
    "end": "1045620"
  },
  {
    "text": "it's pennies um and let's just take a quick look in here",
    "start": "1045620",
    "end": "1051160"
  },
  {
    "text": "I just wanted to show you what has actually come through so you can see uh how it's batched basically in this text",
    "start": "1057860",
    "end": "1064280"
  },
  {
    "text": "file um and yeah this is just the demo data of course this isn't what the Lego data",
    "start": "1064280",
    "end": "1069740"
  },
  {
    "text": "looks like um so then the final part of this is to go into Cloud watch and check these",
    "start": "1069740",
    "end": "1075320"
  },
  {
    "text": "different lambdas to see well did it actually uh send them off to the correct services so in energy you can see that",
    "start": "1075320",
    "end": "1081799"
  },
  {
    "text": "it was triggered just a minute ago and we have our array uh you can see",
    "start": "1081799",
    "end": "1087620"
  },
  {
    "text": "only one energy event happened but if we go back to say Healthcare",
    "start": "1087620",
    "end": "1093679"
  },
  {
    "text": "uh yes something none came through for healthcare what what was in here",
    "start": "1093679",
    "end": "1098740"
  },
  {
    "text": "technology we had a lot of Technology events we'll go for that",
    "start": "1098740",
    "end": "1103820"
  },
  {
    "text": "um so yeah you can see that the array came",
    "start": "1103820",
    "end": "1109340"
  },
  {
    "text": "through so that that's kind of the end of the demo for the streaming part of the data uh and if we head back to the",
    "start": "1109340",
    "end": "1116179"
  },
  {
    "text": "presentation now just a quick run through about what",
    "start": "1116179",
    "end": "1122360"
  },
  {
    "text": "would happen in the campaign service to send the email um essentially what you can see here is",
    "start": "1122360",
    "end": "1128120"
  },
  {
    "text": "we have the data feeder that we've just discussed and we go all the way and we've triggered the campaigns API and",
    "start": "1128120",
    "end": "1134900"
  },
  {
    "text": "then everything beyond that is then event driven as well so for this particular service we put these events",
    "start": "1134900",
    "end": "1140480"
  },
  {
    "text": "onto a vembridge because we'll have multiple logic Services branching off of that eventbridge",
    "start": "1140480",
    "end": "1146120"
  },
  {
    "text": "so things like um we might look for has a user abandoned",
    "start": "1146120",
    "end": "1151220"
  },
  {
    "text": "their car they've added products into my car and then two hours later we want to send them an email to say like did you",
    "start": "1151220",
    "end": "1157280"
  },
  {
    "text": "forget the things that are in your car and then once we've defined that logic we're then sending the event back onto",
    "start": "1157280",
    "end": "1163220"
  },
  {
    "text": "the event bus to trigger the third party marketing provider to send off the email",
    "start": "1163220",
    "end": "1168799"
  },
  {
    "text": "and the reason for eventbridge really is to have these multiple things coming off of eventbridge",
    "start": "1168799",
    "end": "1173840"
  },
  {
    "text": "um I didn't want to put it all in the diagram but there are multiple Services defined in different Logic for different emails",
    "start": "1173840",
    "end": "1180940"
  },
  {
    "text": "and then the final one was that Second Use case coming back to it that all that click stream data uh we can then look at",
    "start": "1181340",
    "end": "1188179"
  },
  {
    "text": "it and provide these stats to the business so at this moment in time people were interested in the Airbus",
    "start": "1188179",
    "end": "1193220"
  },
  {
    "text": "rescue helicopter um and all this kind of information that provides uh what the business really",
    "start": "1193220",
    "end": "1199400"
  },
  {
    "text": "cares about I suppose so moving on it wouldn't be an Eda day",
    "start": "1199400",
    "end": "1205640"
  },
  {
    "start": "1203000",
    "end": "1444000"
  },
  {
    "text": "without mentioning a vembridge and the example that I want to take here",
    "start": "1205640",
    "end": "1211039"
  },
  {
    "text": "is the payment service and it's one of our most important Services because it's how we make",
    "start": "1211039",
    "end": "1216740"
  },
  {
    "text": "Revenue and in a minute we have to take a thousand orders two hundred thousand API",
    "start": "1216740",
    "end": "1222440"
  },
  {
    "text": "requests and we have 150 concurrent Lambda execution so it's a it's a service that really has",
    "start": "1222440",
    "end": "1230059"
  },
  {
    "text": "to scale and we heavily rely on it we really don't want it to go down",
    "start": "1230059",
    "end": "1235960"
  },
  {
    "text": "and a quick overview of the architecture a very high level just to show you how",
    "start": "1236660",
    "end": "1242660"
  },
  {
    "text": "it works on the bottom here we have Lego business units and in one of these",
    "start": "1242660",
    "end": "1247760"
  },
  {
    "text": "it might be lego.com where someone might want to uh probably the usual way that most of us would buy an item so through",
    "start": "1247760",
    "end": "1254480"
  },
  {
    "text": "the website but a lot of people also will call up customer services to make a purchase through there so there's",
    "start": "1254480",
    "end": "1260900"
  },
  {
    "text": "different ways that people can purchase items on not just the website but all of",
    "start": "1260900",
    "end": "1265940"
  },
  {
    "text": "these have to integrate with our payments back end and then the payments back end integrates with different PSPs so like",
    "start": "1265940",
    "end": "1273980"
  },
  {
    "text": "PayPal those kind of uh providers that obviously we don't do ourselves",
    "start": "1273980",
    "end": "1280179"
  },
  {
    "text": "so a few years ago there was kind of a problem something that we",
    "start": "1280880",
    "end": "1285919"
  },
  {
    "text": "wanted to improve and the way that payments worked on the website was that",
    "start": "1285919",
    "end": "1292280"
  },
  {
    "text": "um Lego Doc from lego.com user would make a purchase it would send a payments request to the payment service that",
    "start": "1292280",
    "end": "1299240"
  },
  {
    "text": "would send a payment request to PayPal or a different payment provider and then a synchronous response would come back",
    "start": "1299240",
    "end": "1305360"
  },
  {
    "text": "to say okay request accepted but it it's not saying whether the payment has been accepted or declined it's just saying",
    "start": "1305360",
    "end": "1311659"
  },
  {
    "text": "we've received your uh request and then",
    "start": "1311659",
    "end": "1317480"
  },
  {
    "text": "essentially we're waiting around for an asynchronous response from the PSP to",
    "start": "1317480",
    "end": "1322760"
  },
  {
    "text": "say okay the payment was declined or it was accepted and it's gone through meanwhile the user is waiting on a",
    "start": "1322760",
    "end": "1328940"
  },
  {
    "text": "loading screen for this payment and the problem that we face is that",
    "start": "1328940",
    "end": "1334179"
  },
  {
    "text": "the lego.com is polling for a status update from the back end and this isn't",
    "start": "1334179",
    "end": "1340580"
  },
  {
    "text": "ideal because I guess the example that I like to give is that imagine on the fifth second it's pulled and then it's",
    "start": "1340580",
    "end": "1347840"
  },
  {
    "text": "got um it says no it's not been accepted and on the 10th second it gets accepted but",
    "start": "1347840",
    "end": "1353360"
  },
  {
    "text": "in reality the async response came back on the sixth second so the customer's waiting around for another four seconds",
    "start": "1353360",
    "end": "1360820"
  },
  {
    "text": "so yeah the problem here is multiple Network quests uh more requests",
    "start": "1362780",
    "end": "1368539"
  },
  {
    "text": "for the payment service to handle as well and it's just inefficient and not as good for the user",
    "start": "1368539",
    "end": "1375320"
  },
  {
    "text": "so of course the solution was event driven it would be to push the status update from the payment service to",
    "start": "1375320",
    "end": "1381320"
  },
  {
    "text": "lego.com and so if we have a look at that what that looks like on a very simple level the payments provider is",
    "start": "1381320",
    "end": "1388700"
  },
  {
    "text": "essentially putting an event into our service which goes onto the event Bridge",
    "start": "1388700",
    "end": "1394039"
  },
  {
    "text": "that asynchronous response to be clear not the synchronous one at the beginning and then the payments of Enbridge is",
    "start": "1394039",
    "end": "1400340"
  },
  {
    "text": "pushing the update to the client of Enbridge which is lego.com and this all works really wonderfully",
    "start": "1400340",
    "end": "1407120"
  },
  {
    "text": "because the front end or that particular part of the website over here and the",
    "start": "1407120",
    "end": "1412640"
  },
  {
    "text": "client service is all hosted on AWS but the question then becomes when I",
    "start": "1412640",
    "end": "1418100"
  },
  {
    "text": "talked about that second example of the customer services what if the client requires us to push",
    "start": "1418100",
    "end": "1424760"
  },
  {
    "text": "to a HTTP endpoint so for various reasons our customer",
    "start": "1424760",
    "end": "1431299"
  },
  {
    "text": "services has a HTTP endpoint rather than an eventbridge to push onto",
    "start": "1431299",
    "end": "1436539"
  },
  {
    "text": "and that's a problem because that's not the way that eventbridge typically works",
    "start": "1436539",
    "end": "1443120"
  },
  {
    "text": "but AWS did come out with something called API destinations where we can send events directly to http endpoints",
    "start": "1443120",
    "end": "1451900"
  },
  {
    "start": "1444000",
    "end": "1526000"
  },
  {
    "text": "so you can see here the same diagram but we've gone we've put the client service",
    "start": "1451960",
    "end": "1456980"
  },
  {
    "text": "in as the customer services API and here we have the API destination and",
    "start": "1456980",
    "end": "1462020"
  },
  {
    "text": "I'm going to show us how we configure that um in the code",
    "start": "1462020",
    "end": "1467980"
  },
  {
    "text": "but first a quick thing on how it works the only way that it's different to eventbridge which I'm hoping that people",
    "start": "1468380",
    "end": "1474320"
  },
  {
    "text": "have heard about before I dive in too much with it everything's essentially the same we",
    "start": "1474320",
    "end": "1479720"
  },
  {
    "text": "have an event and then we can filter out with some rules but the difference is the event transformation so a HTTP",
    "start": "1479720",
    "end": "1486740"
  },
  {
    "text": "endpoint most likely isn't just going to want to accept um a classic eventbridge event so we",
    "start": "1486740",
    "end": "1492980"
  },
  {
    "text": "need to do a bit of transformation um and if I show that here firstly we have the filtering you can see the",
    "start": "1492980",
    "end": "1498320"
  },
  {
    "text": "eventbridge rule on the left hand side um which many of you will be familiar with with standard of Enbridge",
    "start": "1498320",
    "end": "1505640"
  },
  {
    "text": "but then the event transformation you can see here that if the client wants it",
    "start": "1505640",
    "end": "1511880"
  },
  {
    "text": "in this sort of format uh here and that's the original event then we're",
    "start": "1511880",
    "end": "1516980"
  },
  {
    "text": "going to do some transformation and that's simply how it works it's quite self-explanatory that it's just accessing the Json object",
    "start": "1516980",
    "end": "1525039"
  },
  {
    "start": "1526000",
    "end": "1785000"
  },
  {
    "text": "so a quick demo on this one um so with API destinations how I set this",
    "start": "1527240",
    "end": "1534260"
  },
  {
    "text": "up is to create a rest endpoint uh simply for the demo so not the classic way that we would be accessing this but",
    "start": "1534260",
    "end": "1542059"
  },
  {
    "text": "essentially I put a Lambda function behind an API Gateway to be triggered by",
    "start": "1542059",
    "end": "1547700"
  },
  {
    "text": "http and that that's about it for that one I just put a console log in here I just",
    "start": "1547700",
    "end": "1553640"
  },
  {
    "text": "wanted to create a HTTP endpoint for us to hit and so if we close that up in the",
    "start": "1553640",
    "end": "1558679"
  },
  {
    "text": "payment service I have created the eventbridge part so",
    "start": "1558679",
    "end": "1563900"
  },
  {
    "text": "here we have the event bus Which many of you may be used to so just setting up a standard customer membridge",
    "start": "1563900",
    "end": "1570740"
  },
  {
    "text": "but then for the API destination we need to set up a connection so in here I've chosen that the",
    "start": "1570740",
    "end": "1576860"
  },
  {
    "text": "authorization type would be API key but it also handles oauths and various other authorization types but I've gone with",
    "start": "1576860",
    "end": "1583400"
  },
  {
    "text": "the the quick and easy way and then we set up the HTTP endpoint which is the API destination itself and",
    "start": "1583400",
    "end": "1591380"
  },
  {
    "text": "we have to add the connection and then we have to add the invocation endpoint which you can see I've been lazy and not",
    "start": "1591380",
    "end": "1597679"
  },
  {
    "text": "put it behind a domain but that was just what I deployed so there's the",
    "start": "1597679",
    "end": "1602779"
  },
  {
    "text": "essentially the Lambda endpoint it's going to hit the API Gateway and then lastly the eventbridge rule so",
    "start": "1602779",
    "end": "1609020"
  },
  {
    "text": "I only want events that have uh the domain Lego payments to be going to our",
    "start": "1609020",
    "end": "1614419"
  },
  {
    "text": "endpoint and then there's you know there's all the other stuff like I am rolls but I think uh we'll skip out on that one for",
    "start": "1614419",
    "end": "1620960"
  },
  {
    "text": "today it's not the most interesting topic in my opinion okay so let's get rid of what we had",
    "start": "1620960",
    "end": "1628400"
  },
  {
    "text": "before uh so okay let's go to Amazon event Bridge firstly let's take a look at the rule that was created",
    "start": "1628400",
    "end": "1635779"
  },
  {
    "text": "Wi-Fi has been a bit slow so let's see",
    "start": "1635779",
    "end": "1641740"
  },
  {
    "text": "take a sip of water while this is happening",
    "start": "1642620",
    "end": "1646840"
  },
  {
    "text": "thinking am I in the right um region but anyways I think that it is",
    "start": "1654580",
    "end": "1660080"
  },
  {
    "text": "here it's just been a bit slow uh",
    "start": "1660080",
    "end": "1666559"
  },
  {
    "text": "well let's see if we can send events here we go okay oh no",
    "start": "1666559",
    "end": "1674720"
  },
  {
    "text": "oh dear of course it was going to go wrong when I decided to do things live",
    "start": "1674720",
    "end": "1681759"
  },
  {
    "text": "I don't know maybe I'll just talk through it and see if it comes up so we sent ah here we go so we have the",
    "start": "1683000",
    "end": "1690860"
  },
  {
    "text": "customer event bus I'm gonna say that the Event Source let's put it in as Eda day so we can identify it",
    "start": "1690860",
    "end": "1697220"
  },
  {
    "text": "and let's put the detail type ddad because I'm not inventive and then let's go to grab an event that",
    "start": "1697220",
    "end": "1705200"
  },
  {
    "text": "I already have in the readme oh and to be clear I have made all of this public so no need to be taking notes uh you can",
    "start": "1705200",
    "end": "1711320"
  },
  {
    "text": "copy all of this code I'll put a QR code up at the end uh cool so then let's change this to",
    "start": "1711320",
    "end": "1718700"
  },
  {
    "text": "edad so we can identify it",
    "start": "1718700",
    "end": "1723820"
  },
  {
    "text": "right so we've sent the event on to the custom event bus that I set up and then let's go to Cloud watch and what I'm",
    "start": "1724220",
    "end": "1729919"
  },
  {
    "text": "hoping is that this uh Lambda has contoured out our event so let's go to it we have the rest",
    "start": "1729919",
    "end": "1736520"
  },
  {
    "text": "endpoint and you can see here yes uh 349",
    "start": "1736520",
    "end": "1741919"
  },
  {
    "text": "an event came in and so it's got a load of different information but essentially",
    "start": "1741919",
    "end": "1747620"
  },
  {
    "text": "we have the body at the bottom and the way that I can prove this came through with API destinations and not just the",
    "start": "1747620",
    "end": "1753620"
  },
  {
    "text": "standard eventbridge is this user agent says uh API destinations",
    "start": "1753620",
    "end": "1759500"
  },
  {
    "text": "so the setup is really quite simple um but really effective and I think this",
    "start": "1759500",
    "end": "1765200"
  },
  {
    "text": "is really useful especially in bigger organizations where everything can't be perfect we can't just have a beverage to",
    "start": "1765200",
    "end": "1770480"
  },
  {
    "text": "eventbridge all the time we do need to integrate with HTTP endpoints as well",
    "start": "1770480",
    "end": "1776360"
  },
  {
    "text": "so that's the the end of that that demo and let's go back to the presentation",
    "start": "1776360",
    "end": "1784840"
  },
  {
    "start": "1785000",
    "end": "2100000"
  },
  {
    "text": "so next orchestration so I know Sheen touched on this earlier",
    "start": "1785740",
    "end": "1791659"
  },
  {
    "text": "but we have uh we we use a lot of Step functions at the LEGO Group and we're going to go a bit deeper with this about",
    "start": "1791659",
    "end": "1797659"
  },
  {
    "text": "how we go across from service to service with step functions because the general rule is that people tend to use one step",
    "start": "1797659",
    "end": "1803840"
  },
  {
    "text": "function per service or multiple step functions per service but not talking across a service",
    "start": "1803840",
    "end": "1811840"
  },
  {
    "text": "and the example I want to use to that for this is the Loyalty platform so this is a reward center where very",
    "start": "1812179",
    "end": "1819080"
  },
  {
    "text": "keen uh Lego goers will accrue points and essentially be able to spend",
    "start": "1819080",
    "end": "1825620"
  },
  {
    "text": "vouchers and things like that and this is owned by a whole team of Engineers",
    "start": "1825620",
    "end": "1833419"
  },
  {
    "text": "and it relies a lot on orchestration so and what we mean by orchestration is",
    "start": "1833419",
    "end": "1839059"
  },
  {
    "text": "essentially long-running tasks so not something that's synchronous and essentially",
    "start": "1839059",
    "end": "1846440"
  },
  {
    "text": "just can to put it simply in here it's a flow diagram so it's saying okay we want to run this Lambda function and if this",
    "start": "1846440",
    "end": "1853399"
  },
  {
    "text": "is yes then run this other function and if this is no then do this thing so I think we all get the gist of what a step",
    "start": "1853399",
    "end": "1859100"
  },
  {
    "text": "function is um but that's kind of how it's working and the nice thing about step functions",
    "start": "1859100",
    "end": "1865159"
  },
  {
    "text": "is that you can have weights up to a year with no additional cost you're only paying for the different processes that",
    "start": "1865159",
    "end": "1871700"
  },
  {
    "text": "run and you can also have human elements so you can have things like oh of the HR",
    "start": "1871700",
    "end": "1876799"
  },
  {
    "text": "department needs to uh tick box in order to allow the next part to flow that's",
    "start": "1876799",
    "end": "1883940"
  },
  {
    "text": "also something you can do with stat functions which is really cool and it's just always really nice to kind of make",
    "start": "1883940",
    "end": "1891500"
  },
  {
    "text": "all these Lambda functions and things and then piece them all together with a step function and yeah I don't know",
    "start": "1891500",
    "end": "1897080"
  },
  {
    "text": "there's just something quite satisfying about it um so the first use case is a slightly more",
    "start": "1897080",
    "end": "1903980"
  },
  {
    "text": "simple one before we go into the demo um a customer may be in a Lego store",
    "start": "1903980",
    "end": "1910399"
  },
  {
    "text": "places an order and they may want to redeem a voucher and at that point we",
    "start": "1910399",
    "end": "1916640"
  },
  {
    "text": "have to remove the points from their account but the payment may get declined or",
    "start": "1916640",
    "end": "1923059"
  },
  {
    "text": "something like that and the reason why we remove the rewards before the payment goes through is because we don't want",
    "start": "1923059",
    "end": "1928700"
  },
  {
    "text": "someone else spending those rewards at the same time and so we need to kind of come up with a",
    "start": "1928700",
    "end": "1934100"
  },
  {
    "text": "mechanism for this to essentially remove the rewards then take the payment and if it's",
    "start": "1934100",
    "end": "1939380"
  },
  {
    "text": "successful keep the rewards but if it's not successful we need to reimburse the voucher uh to give it back to the",
    "start": "1939380",
    "end": "1946100"
  },
  {
    "text": "customer and we do this with stat functions so in the service we have um various things",
    "start": "1946100",
    "end": "1953720"
  },
  {
    "text": "going on that triggers a step function and the main thing here is that we do a",
    "start": "1953720",
    "end": "1960440"
  },
  {
    "text": "weight and as I've said there's no additional cost this way so we allow two hours for all of to basically make a",
    "start": "1960440",
    "end": "1967340"
  },
  {
    "text": "decision as to whether it's been accepted or not and then we'll perform the session cleanup if the payment was declined or",
    "start": "1967340",
    "end": "1974299"
  },
  {
    "text": "something like that just it was unsuccessful and so the cool thing here is that it's",
    "start": "1974299",
    "end": "1980600"
  },
  {
    "text": "all event driven of course and you can see here that in the session cleanup",
    "start": "1980600",
    "end": "1986000"
  },
  {
    "text": "we're actually triggering event Bridge from the step function in order to basically",
    "start": "1986000",
    "end": "1991659"
  },
  {
    "text": "tidy up the third party rewards manager so we want to reconcile the data across all the systems to make sure that what's",
    "start": "1991659",
    "end": "1997880"
  },
  {
    "text": "shown to the customer is the correct amount of Rewards yeah",
    "start": "1997880",
    "end": "2005260"
  },
  {
    "text": "so the more interesting part to this is what happens when we want to do cross-service orchestration",
    "start": "2005260",
    "end": "2011260"
  },
  {
    "text": "so in a stat function a traditional thing that you may do is in one of the say the",
    "start": "2011260",
    "end": "2017679"
  },
  {
    "text": "Lambda functions let's say that's the process we might make a synchronous API call out to a different service and then",
    "start": "2017679",
    "end": "2024100"
  },
  {
    "text": "come back and that's not too much of a problem like that's a quick",
    "start": "2024100",
    "end": "2029140"
  },
  {
    "text": "um a quick call to make but the problem becomes when you may",
    "start": "2029140",
    "end": "2034299"
  },
  {
    "text": "want to reach out to another service that has a long running process such as another step function or something else",
    "start": "2034299",
    "end": "2041380"
  },
  {
    "text": "generally that might be event driven",
    "start": "2041380",
    "end": "2045240"
  },
  {
    "text": "and so the way that we handle this is with a task token so this may be a New Concept uh to many",
    "start": "2047620",
    "end": "2055658"
  },
  {
    "text": "it was fairly new to me as well but it's pretty cool so from one of the step functions you",
    "start": "2055659",
    "end": "2061419"
  },
  {
    "text": "can essentially in between here you'll put an event onto the event onto an",
    "start": "2061419",
    "end": "2066700"
  },
  {
    "text": "eventbridge it's not in the diagram with a task token so basically an ID and then",
    "start": "2066700",
    "end": "2073599"
  },
  {
    "text": "and that will then trigger the other service so it's all it's all still quite decoupled because you've got the event",
    "start": "2073599",
    "end": "2080020"
  },
  {
    "text": "bridge in between and that will trigger let's say the step function",
    "start": "2080020",
    "end": "2085300"
  },
  {
    "text": "and then the end of the step function will put an event onto back onto the event bridge in order to trigger the",
    "start": "2085300",
    "end": "2092080"
  },
  {
    "text": "other Service uh with the task token and then the step function knows to continue",
    "start": "2092080",
    "end": "2098040"
  },
  {
    "text": "and so final demo of the day before we start to wrap up",
    "start": "2098080",
    "end": "2103540"
  },
  {
    "start": "2100000",
    "end": "2432000"
  },
  {
    "text": "um so this is the more tricky one actually uh I hadn't worked with this before so",
    "start": "2103540",
    "end": "2112720"
  },
  {
    "text": "if we take a look I've got two step functions to try and replicate these two longer running processes so let's have a",
    "start": "2112720",
    "end": "2118599"
  },
  {
    "text": "look at order processing to begin with um and just to add a bit of context to",
    "start": "2118599",
    "end": "2123880"
  },
  {
    "text": "this because you may be wondering well why why even do this at all so in our system we have very much like",
    "start": "2123880",
    "end": "2130480"
  },
  {
    "text": "a distributed uh different sections in the Loyalty platform and we just have one set piece that integrates with a",
    "start": "2130480",
    "end": "2137920"
  },
  {
    "text": "third-party service and we don't want all of the different domains to be integrating with this third party",
    "start": "2137920",
    "end": "2143859"
  },
  {
    "text": "because if one day we want to switch out the third party for someone else we only want to change the code in that one",
    "start": "2143859",
    "end": "2149859"
  },
  {
    "text": "service but for this order processing we actually need a bit of a we need to",
    "start": "2149859",
    "end": "2155020"
  },
  {
    "text": "reconcile the data in this third party so it does need to have a bit of interaction from this step function to",
    "start": "2155020",
    "end": "2161800"
  },
  {
    "text": "the other one so if we look at the order processing we have I'm using the plugin serverless",
    "start": "2161800",
    "end": "2169720"
  },
  {
    "text": "step functions which is really helpful and we have a look at the state machine that I've created so the key Parts here",
    "start": "2169720",
    "end": "2177160"
  },
  {
    "text": "is that we have um we want to in the first part of the step function and this is all very",
    "start": "2177160",
    "end": "2183040"
  },
  {
    "text": "simple in terms of um you know the real system has lots of different steps to the step function",
    "start": "2183040",
    "end": "2189280"
  },
  {
    "text": "um but we put a event onto eventbridge and we have this thing called wait for task token and that's kind of the",
    "start": "2189280",
    "end": "2195579"
  },
  {
    "text": "additional part here with the task token and then you can see here that we've",
    "start": "2195579",
    "end": "2201579"
  },
  {
    "text": "just built up a um an event to put onto eventbridge and so then once that has gone off it's",
    "start": "2201579",
    "end": "2209560"
  },
  {
    "text": "gonna just wait it's gonna wait until the task token comes back so at this point we've triggered this",
    "start": "2209560",
    "end": "2215320"
  },
  {
    "text": "other service and this has the other step function and what I've just put here is that",
    "start": "2215320",
    "end": "2222040"
  },
  {
    "text": "um it essentially updates a dynamodb table which I'm calling the third party service but I really didn't want to",
    "start": "2222040",
    "end": "2228520"
  },
  {
    "text": "integrate with third party service for this it's just updating Dynamo um setting some points and then it's",
    "start": "2228520",
    "end": "2235300"
  },
  {
    "text": "sending the task token back onto the event Bridge once that's all completed",
    "start": "2235300",
    "end": "2242079"
  },
  {
    "text": "um with various different parameters but the key thing here is the task token and then that will then come back",
    "start": "2242079",
    "end": "2249280"
  },
  {
    "text": "and and essentially it will allow the step",
    "start": "2249280",
    "end": "2255040"
  },
  {
    "text": "function to continue and the missing part here is that we do have to have a Lambda function to accept that um that",
    "start": "2255040",
    "end": "2262180"
  },
  {
    "text": "event from novemberage so you can see here I have this task token response Handler which is triggered by the event",
    "start": "2262180",
    "end": "2269020"
  },
  {
    "text": "that came back and in here you can see I have the send task success",
    "start": "2269020",
    "end": "2275380"
  },
  {
    "text": "command which is part of the AWS SDK and that's what's allowing the step function to continue",
    "start": "2275380",
    "end": "2281260"
  },
  {
    "text": "um we were having some interesting discussions about this last night we were kind of suggesting to eventbridge that you know it would be nice if it",
    "start": "2281260",
    "end": "2287260"
  },
  {
    "text": "just directly integrated with the step function but yeah maybe that will come in the future but right now we have to",
    "start": "2287260",
    "end": "2292599"
  },
  {
    "text": "have this Lambda function um so then from there on I've just added in",
    "start": "2292599",
    "end": "2298180"
  },
  {
    "text": "another step to kind of update another table just to make it a bit more interesting but what we're all here to see I guess",
    "start": "2298180",
    "end": "2304359"
  },
  {
    "text": "hopefully the console responds um is the stat functions so here we have",
    "start": "2304359",
    "end": "2309520"
  },
  {
    "text": "the order processing step function this is all going to go quite quickly uh so try to bear in mind everything that",
    "start": "2309520",
    "end": "2315339"
  },
  {
    "text": "I've just said um and if I just grab an example event uh here",
    "start": "2315339",
    "end": "2322859"
  },
  {
    "text": "cool so there's the information that I'm putting into this order processing step function",
    "start": "2327160",
    "end": "2332200"
  },
  {
    "text": "I'm gonna talk quickly you can see here it is sending the event off to eventbridge and it's waiting it's",
    "start": "2332200",
    "end": "2337900"
  },
  {
    "text": "waiting it's waiting um and let's hope that in a moment it",
    "start": "2337900",
    "end": "2343000"
  },
  {
    "text": "comes back it's updated the table and it's finished um so meanwhile in that time when it",
    "start": "2343000",
    "end": "2348940"
  },
  {
    "text": "went off you can see we have this other step function and you can see yeah at four o'clock",
    "start": "2348940",
    "end": "2356099"
  },
  {
    "text": "uh we had yeah it went through so I updated the table and then it sent the task token",
    "start": "2356619",
    "end": "2362140"
  },
  {
    "text": "back and I mean all the information is uh down here uh stat functions is just really cool it's kind of easy to debug",
    "start": "2362140",
    "end": "2368440"
  },
  {
    "text": "because it gives you so much information about what happened at each stage um but various things happened I mean I",
    "start": "2368440",
    "end": "2374800"
  },
  {
    "text": "can show you that in the order processing table uh it it did update because I sent the same",
    "start": "2374800",
    "end": "2381820"
  },
  {
    "text": "one as before but yeah and it looks like it didn't updated it's because I sent the same event that I",
    "start": "2381820",
    "end": "2388180"
  },
  {
    "text": "sent uh just before when I tested that it was all deployed correctly but yeah it updated",
    "start": "2388180",
    "end": "2394780"
  },
  {
    "text": "so that's how these task tokens work essentially and again all this code example will be uploaded online",
    "start": "2394780",
    "end": "2402400"
  },
  {
    "text": "and then back to the presentation we're about to wrap up so just to kind of show you where you",
    "start": "2402400",
    "end": "2409780"
  },
  {
    "text": "can go with this uh you can really have many different arms to this and it you can make kind of make it quite complicated but you're doing quite",
    "start": "2409780",
    "end": "2415960"
  },
  {
    "text": "powerful things it doesn't have to be step functions of Enbridge it can be sqs as well and other kind of messaging",
    "start": "2415960",
    "end": "2422320"
  },
  {
    "text": "services and you can do it on multiple different arms and make it super complex",
    "start": "2422320",
    "end": "2428500"
  },
  {
    "text": "so we're at the end of the heavy kind of part of the talk I guess to wrap up I just wanted to talk about a few benefits",
    "start": "2428500",
    "end": "2434260"
  },
  {
    "start": "2432000",
    "end": "2558000"
  },
  {
    "text": "of event-driven architectures which I'm sure we all know but a key one for us that the LEGO Group is scalability",
    "start": "2434260",
    "end": "2441339"
  },
  {
    "text": "so serverless all these services that we've talked about an event driven architectures they really do go hand in",
    "start": "2441339",
    "end": "2446560"
  },
  {
    "text": "hand and because events are handled asynchronously they can really work at",
    "start": "2446560",
    "end": "2452619"
  },
  {
    "text": "their own rate so on days like Black Friday we really don't have to worry about things as long",
    "start": "2452619",
    "end": "2457660"
  },
  {
    "text": "as it's not a customer facing call then these things can happen at their own rate",
    "start": "2457660",
    "end": "2463060"
  },
  {
    "text": "and with all of these Services we don't have to worry about so much about Black Friday",
    "start": "2463060",
    "end": "2468579"
  },
  {
    "text": "and in terms of a code perspective we can scale in terms of just plugging systems in rather than trying to really",
    "start": "2468579",
    "end": "2475060"
  },
  {
    "text": "mesh them all together and then we have resilience and fault tolerance",
    "start": "2475060",
    "end": "2481780"
  },
  {
    "text": "um of course in case of downtime and we've had this recently where we've not",
    "start": "2481780",
    "end": "2487599"
  },
  {
    "text": "lost data because even though we've had downtime we've replayed all of our events um later on because we've been using",
    "start": "2487599",
    "end": "2493720"
  },
  {
    "text": "cues and things like that and again we've heard it all before if one service fails the other services are",
    "start": "2493720",
    "end": "2500079"
  },
  {
    "text": "unaffected so in that sense it's really cool unless the payments uh platform goes down then then we're not too happy",
    "start": "2500079",
    "end": "2505960"
  },
  {
    "text": "but then faster development a key thing here",
    "start": "2505960",
    "end": "2511960"
  },
  {
    "text": "for me and one that often people miss out is hiring becomes a lot easier because you're not trying to hire for a",
    "start": "2511960",
    "end": "2518260"
  },
  {
    "text": "skill set that is across the whole of the LEGO Group you just hire in for the skills that you need in your team so I",
    "start": "2518260",
    "end": "2526000"
  },
  {
    "text": "like to use serverless framework I haven't used cdk too much but we don't need people who have every single thing",
    "start": "2526000",
    "end": "2532660"
  },
  {
    "text": "like some of those job descriptions ask for where they want like 10 developers in one",
    "start": "2532660",
    "end": "2538180"
  },
  {
    "text": "um we're asking for a much more reasonable skill set and developers really don't need to",
    "start": "2538180",
    "end": "2543579"
  },
  {
    "text": "overthink the system you don't need to be thinking about what if I make this change is it going to break it somewhere else",
    "start": "2543579",
    "end": "2549760"
  },
  {
    "text": "um they don't need to overthink it too much and it's just quick to spin up new services",
    "start": "2549760",
    "end": "2556079"
  },
  {
    "start": "2558000",
    "end": "2599000"
  },
  {
    "text": "so yeah that's me wrapping up if you want to take the code examples you'll find them on my GitHub",
    "start": "2558579",
    "end": "2565420"
  },
  {
    "text": "um yeah everything can be taken it's all public and I just want to say a special thanks to Sheen Brussels who is here",
    "start": "2565420",
    "end": "2571480"
  },
  {
    "text": "proudly watching me at the front uh he's helped me a lot with this presentation in terms of I am an engineer and I do",
    "start": "2571480",
    "end": "2578079"
  },
  {
    "text": "very much sit in my own Squad so I don't necessarily find out about all the different domain knowledge",
    "start": "2578079",
    "end": "2583599"
  },
  {
    "text": "because we are event driven and so he's helped me to kind of reach out to the relevant team members to look through",
    "start": "2583599",
    "end": "2589660"
  },
  {
    "text": "you know all the documentation and be able to pull these code examples together um so yeah I really appreciate everyone",
    "start": "2589660",
    "end": "2595780"
  },
  {
    "text": "coming to watch my talk it's really nice so thank you thank you",
    "start": "2595780",
    "end": "2602280"
  }
]