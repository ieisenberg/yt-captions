[
  {
    "start": "0",
    "end": "190000"
  },
  {
    "text": "I think you can Jazz up what I do for a job and nice introduction but to be honest with you a lot of what I spend my",
    "start": "11799",
    "end": "18000"
  },
  {
    "text": "time talking about really when we get down to it is about boxes and and arrows",
    "start": "18000",
    "end": "23240"
  },
  {
    "text": "and that's the look we can sugar coat it all we want this is a large part of what",
    "start": "23240",
    "end": "28560"
  },
  {
    "text": "I do with my clients I help them with you know architecture and strategy and all these lovely things but it comes",
    "start": "28560",
    "end": "34079"
  },
  {
    "text": "down to boxes boxes and arrows and and and sometimes we're talking about what",
    "start": "34079",
    "end": "40079"
  },
  {
    "text": "how big those boxes should be or or maybe more importantly for some of you how small those boxes should be deeply",
    "start": "40079",
    "end": "46960"
  },
  {
    "text": "important conversations like that more important conversations we often have involve things like well what should be",
    "start": "46960",
    "end": "53079"
  },
  {
    "text": "in the boxes and maybe we should break those boxes up into smaller boxes yes",
    "start": "53079",
    "end": "58680"
  },
  {
    "text": "you probably should do that as well um but even more important than that of course we can have conversations about",
    "start": "58680",
    "end": "64600"
  },
  {
    "text": "what shape the boxes should be and of course I've made my choice I am very",
    "start": "64600",
    "end": "69880"
  },
  {
    "text": "much on board with Team hexagon um this also you know bit advertising because",
    "start": "69880",
    "end": "75360"
  },
  {
    "text": "the hexagon's all over the C my book please buy my book I have a mortgage to pay for so today though we're not really",
    "start": "75360",
    "end": "81240"
  },
  {
    "text": "going to be talking about the boxes that much we're actually going to be talking about the other important constituent of",
    "start": "81240",
    "end": "86400"
  },
  {
    "text": "my job the arrows between them what are these arrows and what do they represent",
    "start": "86400",
    "end": "92960"
  },
  {
    "text": "this is not a talk specifically about microservices um but this is a talk",
    "start": "92960",
    "end": "98759"
  },
  {
    "text": "that's been influenced by my work in that space fundamentally here we're talking about any kind of distributed",
    "start": "98759",
    "end": "104640"
  },
  {
    "text": "system and the way in which we communicate between it but it kind of general service architecture and when I",
    "start": "104640",
    "end": "110079"
  },
  {
    "text": "draw a diagram with a service architecture I think it's important to be clear this is a talk all about",
    "start": "110079",
    "end": "115119"
  },
  {
    "text": "Clarity and meaning so I think it's important that I am clear about why I I draw an arrow and what the direction",
    "start": "115119",
    "end": "122680"
  },
  {
    "text": "means sometimes people use arrows to denote things like data flow and it's like that makes no sense to me because",
    "start": "122680",
    "end": "129280"
  },
  {
    "text": "data normally flows in two directions anyway it's not like I send no data and then data magically appears for me the",
    "start": "129280",
    "end": "135959"
  },
  {
    "text": "arrows that I draw are much simpler than this they are they are referring to some form of",
    "start": "135959",
    "end": "142280"
  },
  {
    "text": "dependency in any services-based architecture whether you think it's micro or not our systems exist because",
    "start": "142280",
    "end": "149280"
  },
  {
    "text": "of relation ships and dependencies between these services so an arrow here",
    "start": "149280",
    "end": "154959"
  },
  {
    "text": "from the returns microservice to the shipping microservice what that is showing is a logical dependency the",
    "start": "154959",
    "end": "160800"
  },
  {
    "text": "returns microservice depends on functionality that shipping provides and often in this context we'll",
    "start": "160800",
    "end": "168000"
  },
  {
    "text": "talk about the thing on the left of the arrow the returns micros here being the consumer I am consuming functionality",
    "start": "168000",
    "end": "174480"
  },
  {
    "text": "that the shipping microservice provides this talk really is about trying to explore some of the different ways in",
    "start": "174480",
    "end": "180840"
  },
  {
    "text": "which this communication can happen how do we Implement these dependencies and",
    "start": "180840",
    "end": "187440"
  },
  {
    "text": "specifically what the hell is the difference between synchronous and asynchronous",
    "start": "187440",
    "end": "193440"
  },
  {
    "start": "190000",
    "end": "597000"
  },
  {
    "text": "communication because turns out there isn't one uh but we'll get to",
    "start": "193440",
    "end": "198879"
  },
  {
    "text": "that a bit later there are other distinctions I like to use when describing service-based communication",
    "start": "198879",
    "end": "204360"
  },
  {
    "text": "that I think are a bit more crystal and a bit more clear they may be operating more at The Logical level when we start",
    "start": "204360",
    "end": "210200"
  },
  {
    "text": "getting into conversations about synchronous versus asynchronous convers communication we're starting to get into implementation detail and I think it's",
    "start": "210200",
    "end": "216720"
  },
  {
    "text": "often useful to start talking about the nature of the interactions first and in that",
    "start": "216720",
    "end": "224480"
  },
  {
    "text": "context excuse me the distinction I found to be most useful is the difference between request response",
    "start": "224480",
    "end": "229959"
  },
  {
    "text": "oriented communication and event driven communication so request response I",
    "start": "229959",
    "end": "236000"
  },
  {
    "text": "think is pretty I think both of these are pretty clear-cut styles of inter ation request response is probably the",
    "start": "236000",
    "end": "241959"
  },
  {
    "text": "most common it's the most familiar to many of you this is what where we sort of almost it Maps the mental model of",
    "start": "241959",
    "end": "248480"
  },
  {
    "text": "treating a service like a big object that you call methods on which is absolutely correct and also completely",
    "start": "248480",
    "end": "255000"
  },
  {
    "text": "wrong at the same time but it does at least fit that model right here in this context here the returns microservice",
    "start": "255000",
    "end": "261160"
  },
  {
    "text": "wants to achieve something it needs to do something it needs to carry out some kind of job how does it carry out that",
    "start": "261160",
    "end": "266800"
  },
  {
    "text": "job it sends a request please please can you help me I need help you can help me so you send a",
    "start": "266800",
    "end": "274440"
  },
  {
    "text": "request I prefer the term request some people use the word command I prefer request because it's a bit softer",
    "start": "274440",
    "end": "280479"
  },
  {
    "text": "command implies something which must be obeyed and actually is completely valid",
    "start": "280479",
    "end": "285680"
  },
  {
    "text": "even in a completely functioning system for sometimes these requests to be rejected for example you might be asking",
    "start": "285680",
    "end": "291440"
  },
  {
    "text": "for an invalid State transition that can happen and it's okay for you to say no so that's why I call them a request I",
    "start": "291440",
    "end": "298039"
  },
  {
    "text": "prefer this language it's also the language we use in the HTTP specification which tends to be the protocol that most of us end up using so",
    "start": "298039",
    "end": "305400"
  },
  {
    "text": "here I'm saying I need a postage label and I'm going to consume the response hopefully in this situation I'm going to get a response the response comes back",
    "start": "305400",
    "end": "312320"
  },
  {
    "text": "and says here you go here's your postage label nice straightforward tends to be one thing talking to one other thing and",
    "start": "312320",
    "end": "319080"
  },
  {
    "text": "you can implement this in a variety of different ways and we're going to look mostly at different ways of implementing this interaction in the context of what",
    "start": "319080",
    "end": "326280"
  },
  {
    "text": "asynchronous means eventually have an interaction are quite different and they can break people's brains but this is my",
    "start": "326280",
    "end": "333400"
  },
  {
    "text": "own preferred natural style of integration rather than telling anybody",
    "start": "333400",
    "end": "338919"
  },
  {
    "text": "to do something we're really talking about events being emitted and things reacting to events so in this situation",
    "start": "338919",
    "end": "344800"
  },
  {
    "text": "here the invent microservice is saying we've just received a large amount of stock so we' we've put out an event that",
    "start": "344800",
    "end": "352680"
  },
  {
    "text": "says we've just received 10,000 copies of Justin Bieber's Greatest Hits and we're alerting you to this fact so you",
    "start": "352680",
    "end": "358880"
  },
  {
    "text": "can get out of the build building or whatever it is you need to do you can think of an event driven system is like with an event you put the event on a",
    "start": "358880",
    "end": "364400"
  },
  {
    "text": "notice board and then you walk away and it is up to other people what they decide to do with that information so in",
    "start": "364400",
    "end": "370599"
  },
  {
    "text": "this particular scenario we've got both promotions and wishlist microservices and they are going to do completely",
    "start": "370599",
    "end": "376240"
  },
  {
    "text": "different things with that same event the promotions microservice is going to say well my job is to automatically",
    "start": "376240",
    "end": "384120"
  },
  {
    "text": "discount products so at certain thresholds of inventory I might take say",
    "start": "384120",
    "end": "389160"
  },
  {
    "text": "5% 10% off the recommended retail price so we've got a lot of Justin Bieber hell",
    "start": "389160",
    "end": "394520"
  },
  {
    "text": "we going to get rid of the Justin Bieber let's discount that same event will trigger different behavior in the wish list",
    "start": "394520",
    "end": "400800"
  },
  {
    "text": "service which is tracking in this example uh all of you Believers out there that said please let me know when",
    "start": "400800",
    "end": "406880"
  },
  {
    "text": "you've got more beibs in so we now we've said we've told the the wish list microservice new beibs is available and",
    "start": "406880",
    "end": "413160"
  },
  {
    "text": "it can go does anyone want this yes let's email them and let them know one event causing different things",
    "start": "413160",
    "end": "419039"
  },
  {
    "text": "to happen and in this context we would talk about the things on the right side being the",
    "start": "419039",
    "end": "425319"
  },
  {
    "text": "consumers they are receiving that information are consuming that information they're sort of dependent on",
    "start": "425319",
    "end": "431039"
  },
  {
    "text": "the event so arguably these arrows can go one or two ways at a certain point the arrow Direction starts getting quite fuzzy with event driven systems we're",
    "start": "431039",
    "end": "437720"
  },
  {
    "text": "mostly not going to be talking about event driven architectures today because I think you naturally fall into a",
    "start": "437720",
    "end": "444000"
  },
  {
    "text": "certain style of implementation with these styles of architecture what we're mostly going to be talking about today",
    "start": "444000",
    "end": "450120"
  },
  {
    "text": "is this synchronous versus asynchronous what does it mean now in the past I",
    "start": "450120",
    "end": "457240"
  },
  {
    "text": "would sort of try and map these terms together I talk about the fact that request response could be synchronous or",
    "start": "457240",
    "end": "463319"
  },
  {
    "text": "asynchronous but the event of an architecture is always inherently asynchronous and as we'll see when we go",
    "start": "463319",
    "end": "470400"
  },
  {
    "text": "through this is probably still true although what that word asynchronous means varies greatly to the point where",
    "start": "470400",
    "end": "477840"
  },
  {
    "text": "even if we look at asynchronous the word asynchronous just in the context of",
    "start": "477840",
    "end": "483360"
  },
  {
    "text": "servico service based communication there are so many conflicting definitions that this term is",
    "start": "483360",
    "end": "490000"
  },
  {
    "text": "essentially meaningless useless and confusing and is also widely used I was",
    "start": "490000",
    "end": "497720"
  },
  {
    "text": "inspired to write this talk by this uh blog post um by Pat Helen it's on his",
    "start": "497720",
    "end": "503159"
  },
  {
    "text": "sublist but you get the idea it's blogs but with email um Pat Helen the pioneers of computing wrote this article where he",
    "start": "503159",
    "end": "509560"
  },
  {
    "text": "posited the hypothesis well not the hypothesis posited the idea that the term eventually consistent is not a",
    "start": "509560",
    "end": "516279"
  },
  {
    "text": "useful term because as he rightly points out we use the term consistency in lots",
    "start": "516279",
    "end": "523200"
  },
  {
    "text": "of different contexts in Computing to mean very different things and they're all quite close to the same places where",
    "start": "523200",
    "end": "528959"
  },
  {
    "text": "we're having conversations around eventual consistency if you want to kind of",
    "start": "528959",
    "end": "534120"
  },
  {
    "text": "understand what he's getting at if you think about an acid transaction the C in an acid transaction stands for consistency",
    "start": "534120",
    "end": "540720"
  },
  {
    "text": "go and look up what that actually means because you will be surprised because it probably has nothing to do with what you think it means it's a very specific",
    "start": "540720",
    "end": "548079"
  },
  {
    "text": "meaning he was arguing in this article that we should be referring to it as eventually convergent systems because",
    "start": "548079",
    "end": "553920"
  },
  {
    "text": "eventually the replicas in an eventually consistent system will Converge on having the same view once they processed",
    "start": "553920",
    "end": "560720"
  },
  {
    "text": "all the messages it's prob a better term I want to say right now that this inspired me to write this talk in the",
    "start": "560720",
    "end": "567079"
  },
  {
    "text": "hope that I could come up with a better term than asynchronous I I I believe in open and honest",
    "start": "567079",
    "end": "572880"
  },
  {
    "text": "communication I have failed but I at least want to take you through where I'm currently at with this whole process so",
    "start": "572880",
    "end": "578720"
  },
  {
    "text": "this was many years ago now this was you know deep in the midst of still being trapped in my uh in in southeast of",
    "start": "578720",
    "end": "586240"
  },
  {
    "text": "England not going anywhere and I think I don't think asynch means anything I put this out on Twitter and I was like well",
    "start": "586240",
    "end": "592000"
  },
  {
    "text": "there someone out there got a good definition of what asynchronous means and you know I mean nowadays saying that",
    "start": "592000",
    "end": "597800"
  },
  {
    "start": "597000",
    "end": "688000"
  },
  {
    "text": "I got some shocking responses on Twitter no one would be surprised but back then it was still you know so I got a whole",
    "start": "597800",
    "end": "603040"
  },
  {
    "text": "bunch of really interesting responses turn a bunch of them from people I actually knew um and it was kind of interesting because for some of these",
    "start": "603040",
    "end": "609000"
  },
  {
    "text": "people I'd worked with them and I got very very different views from a lot of people so Darren Hobs is one of the",
    "start": "609000",
    "end": "614320"
  },
  {
    "text": "first people that came back on EX colleague of mine and he said that for him asynchronous communication is the",
    "start": "614320",
    "end": "621040"
  },
  {
    "text": "diff comparing asynchronous synchronous asyn communication is like sending an email rather than having a phone call",
    "start": "621040",
    "end": "629959"
  },
  {
    "text": "and there's sort of something there that that kind of seems interesting right but it does sort of imply a speed issue when",
    "start": "629959",
    "end": "637760"
  },
  {
    "text": "I pick up the phone the phone calls immediate email takes longer so this sort of implies that asynchronous",
    "start": "637760",
    "end": "643320"
  },
  {
    "text": "communication will somehow be slower which isn't true actually and the",
    "start": "643320",
    "end": "648920"
  },
  {
    "text": "majority of well I think all the low latency systems I've ever worked on um have been using various different forms",
    "start": "648920",
    "end": "655279"
  },
  {
    "text": "of asynchronous network based communication however there's something interesting here right there is",
    "start": "655279",
    "end": "660720"
  },
  {
    "text": "something around this interaction I mean certainly of course we've got the idea that a phone call tends to be from one person to other person point to point",
    "start": "660720",
    "end": "667600"
  },
  {
    "text": "email has the option of there being multiple recipients so is there something there maybe so while this",
    "start": "667600",
    "end": "673360"
  },
  {
    "text": "Twitter thread is going on of course I started thinking okay well where else do we see smart people writing down their",
    "start": "673360",
    "end": "679720"
  },
  {
    "text": "thoughts and can I look at those thoughts and tear them apart for the benefit of a conference talk and of",
    "start": "679720",
    "end": "685760"
  },
  {
    "text": "course it's quite easy to do that because we've got things like the reactive manif right so reactive Manifesto hands up who's who's read the",
    "start": "685760",
    "end": "692560"
  },
  {
    "start": "688000",
    "end": "906000"
  },
  {
    "text": "reactive Manifesto hands up who understands the reactive Manifesto some of you put your hands down that's rude um now this is",
    "start": "692560",
    "end": "699880"
  },
  {
    "text": "written I know a bunch of people that wrote this I consider some of them friends um they've made an attempt here",
    "start": "699880",
    "end": "705279"
  },
  {
    "text": "to put forward a dogmatic view about how we should do basically dish system coordination there's stuff in here I",
    "start": "705279",
    "end": "711959"
  },
  {
    "text": "agree with there's stuff in here I don't agree with they put a lot of hard work into this so I want to you know po say",
    "start": "711959",
    "end": "718760"
  },
  {
    "text": "all of that up front before I rip it apart for fun um there's a bit in this where they do try and distinguish terms",
    "start": "718760",
    "end": "725120"
  },
  {
    "text": "and terminology to try and be precise The Early Edition the first version of the reactive Manifesto was very",
    "start": "725120",
    "end": "731200"
  },
  {
    "text": "different and was kind of very hard to understand so they've attempted to come back and clarify that that work was done",
    "start": "731200",
    "end": "736680"
  },
  {
    "text": "about 2014 so they actually take an attempt to Define what asynchronous means so I'm thinking great smart people",
    "start": "736680",
    "end": "744800"
  },
  {
    "text": "thinking about this for a long time that they would have come up with a definition for asynchronous that absolutely Ely resonates with all of us",
    "start": "744800",
    "end": "751040"
  },
  {
    "text": "so here we go here's asynchronous we look at the highlighted part we'll come back to the bit later so for for them asynchronous communication means in the",
    "start": "751040",
    "end": "757760"
  },
  {
    "text": "context of this Manifesto we mean that the processing of a request occurs at an",
    "start": "757760",
    "end": "764120"
  },
  {
    "text": "arbitrary point in time sometime after it has been transmitted from client to",
    "start": "764120",
    "end": "771399"
  },
  {
    "text": "server the processing of a request occurs at an arbitrary time sometime",
    "start": "771399",
    "end": "778079"
  },
  {
    "text": "after it has been transmitted from client to server one more time the processing of a",
    "start": "778079",
    "end": "784399"
  },
  {
    "text": "request occurs at an arbitrary time sometime after it's being",
    "start": "784399",
    "end": "789600"
  },
  {
    "text": "transmitted would this be as opposed to processing the request before it's been",
    "start": "789600",
    "end": "794760"
  },
  {
    "text": "sent like with some kind of crazy like Time Warp pole Shenanigans or something",
    "start": "794760",
    "end": "800360"
  },
  {
    "text": "or I can that like this this makes no sense right because we know causality is a thing even if time dilation exists",
    "start": "800360",
    "end": "807040"
  },
  {
    "text": "causality is very much a thing we are always going to process a request after it was sent otherwise the world does not",
    "start": "807040",
    "end": "814519"
  },
  {
    "text": "work right so this is kind of meaningless but we look elsewhere and there are other parts where we start",
    "start": "814519",
    "end": "820680"
  },
  {
    "text": "getting closer at least to what the spirit I think of the active Manifesto was from some of the people that wrote it anyway I have spoken to some of the",
    "start": "820680",
    "end": "827079"
  },
  {
    "text": "authors who don't agree with each other but there we are that's life we get into this then talking about the the",
    "start": "827079",
    "end": "832519"
  },
  {
    "text": "comparison now as synchronous communication so they then say this is the opposite of syn processing that",
    "start": "832519",
    "end": "840519"
  },
  {
    "text": "implies that the client only resumes its own execution once the service has processed",
    "start": "840519",
    "end": "847959"
  },
  {
    "text": "the request so that's much more precise but",
    "start": "847959",
    "end": "853720"
  },
  {
    "text": "we have a very specific term for this and it's not",
    "start": "853720",
    "end": "858800"
  },
  {
    "text": "asynchronous we'll come back to that in just a moment so the thread still going on here's my friend Steve Smith Works",
    "start": "858800",
    "end": "865199"
  },
  {
    "text": "equal experts knows Lots about continuous delivery very nice man uh and he said you know initially his first",
    "start": "865199",
    "end": "870720"
  },
  {
    "text": "response to when I put that tweet out was well for him it's about a TCP connection being open for the duration",
    "start": "870720",
    "end": "876440"
  },
  {
    "text": "of communication so I'm opening a TCP connection we're talking and until that communication has ceased and then I'll",
    "start": "876440",
    "end": "882959"
  },
  {
    "text": "close the connection and of course I like poking Steve and saying well what does that mean if I use a different networking protocol this all changes and",
    "start": "882959",
    "end": "890600"
  },
  {
    "text": "he said well actually what he actually meant is I'm assuming you're not blocking for a response so this is the",
    "start": "890600",
    "end": "898160"
  },
  {
    "text": "more precise langage language we're looking for this is much more explicit",
    "start": "898160",
    "end": "904360"
  },
  {
    "text": "nonblocking that's what this is about nonblocking let's talk about what non-blocking is because I think this is",
    "start": "904360",
    "end": "909639"
  },
  {
    "start": "906000",
    "end": "1624000"
  },
  {
    "text": "a much more useful thing to to talk about and it's much more explicit so let's take a look at an example of an",
    "start": "909639",
    "end": "915480"
  },
  {
    "text": "interaction we've got a microservice here we've got the the enrollment microservice we could imagine this is a",
    "start": "915480",
    "end": "920600"
  },
  {
    "text": "little small orchestrated process and we're trying to carry out some activities so one of the things we need",
    "start": "920600",
    "end": "926079"
  },
  {
    "text": "to do is to award some points for a customer for doing something so we're going give you some points right and we",
    "start": "926079",
    "end": "932160"
  },
  {
    "text": "also want to upgrade your subscription so these are two activities and in this",
    "start": "932160",
    "end": "937720"
  },
  {
    "text": "particular implementation they're done one after the other and in this example they don't",
    "start": "937720",
    "end": "943240"
  },
  {
    "text": "have to be but that's just how we've implemented it right we have a line of code we send the first request and then we have a line of code where we send the",
    "start": "943240",
    "end": "949319"
  },
  {
    "text": "second request right now if we implemented these as simple HTTP calls what would happen is that we would do",
    "start": "949319",
    "end": "955639"
  },
  {
    "text": "the first call we would block and wait until we get the resp response and then we would do the second",
    "start": "955639",
    "end": "963880"
  },
  {
    "text": "call and we' block and wait until we get the response so we we're doing these things",
    "start": "963880",
    "end": "970079"
  },
  {
    "text": "sequentially so one of the challenges of course of The Blocking core like this is that we've denied ourselves the",
    "start": "970079",
    "end": "976759"
  },
  {
    "text": "opportunity to do work in parallel so in this particular situation the latency of these operations is now going to be the",
    "start": "976759",
    "end": "983160"
  },
  {
    "text": "sum of the calls whereas actually by looking at the code these things could be done in parallel so if award points",
    "start": "983160",
    "end": "989759"
  },
  {
    "text": "takes 50 milliseconds upgrading subscription takes 150 milliseconds we're looking at a you know a constraint",
    "start": "989759",
    "end": "995319"
  },
  {
    "text": "around our total duration being at least 200 mes so well that's not great right",
    "start": "995319",
    "end": "1002480"
  },
  {
    "text": "and of course there's the added complexity here which is that latency has a deviation and so if you've got",
    "start": "1002480",
    "end": "1008759"
  },
  {
    "text": "lots of different calls happening with different deviations and you multiply them all up together you'll get a much",
    "start": "1008759",
    "end": "1014199"
  },
  {
    "text": "larger distribution of latency which in turn makes your system slightly less hard to under harder to understand",
    "start": "1014199",
    "end": "1020399"
  },
  {
    "text": "because anyway there's different things there but an obvious Improvement not only in term just would just be to",
    "start": "1020399",
    "end": "1025720"
  },
  {
    "text": "reduce that latency by doing these two calls in parallel and so rather than doing this",
    "start": "1025720",
    "end": "1032720"
  },
  {
    "text": "than this lets actually just say well no we want to do them both like this now",
    "start": "1032720",
    "end": "1037880"
  },
  {
    "text": "that's actually quite easy to do nowadays 10 years ago I would probably have to write some of my own syntactic",
    "start": "1037880",
    "end": "1043880"
  },
  {
    "text": "sugar and probably end up deadlocking my Java code because I don't know how to use a semaphor nowadays I can just use",
    "start": "1043880",
    "end": "1049400"
  },
  {
    "text": "something like a reactive extension for the programming language of my choice so in this example here what we've done is",
    "start": "1049400",
    "end": "1055480"
  },
  {
    "text": "we've wrapped that execution in a future so a future is a readon type the value",
    "start": "1055480",
    "end": "1060600"
  },
  {
    "text": "of which is available once the pending operation has completed so you could assume whatever language I'm using here",
    "start": "1060600",
    "end": "1066360"
  },
  {
    "text": "has got some syntactic sugar where the content of that that parentheses is basically being dispatched on a",
    "start": "1066360",
    "end": "1072640"
  },
  {
    "text": "background thread could be a green thread could be an native thread don't really care too much so when I execute",
    "start": "1072640",
    "end": "1078679"
  },
  {
    "text": "that line of code it immediately returns and that future that fut1 becomes a",
    "start": "1078679",
    "end": "1084559"
  },
  {
    "text": "pointer to the pending operation but the key thing is that line of code executes the next line of code executes we're not",
    "start": "1084559",
    "end": "1090520"
  },
  {
    "text": "blocking and waiting the calls are now being made in parallel we're bringing down our latency this obviously seems",
    "start": "1090520",
    "end": "1098039"
  },
  {
    "text": "like a good idea these two calls are not causally linked therefore we should be",
    "start": "1098039",
    "end": "1104039"
  },
  {
    "text": "able to do them in parallel I'm not trying to get the result of one to pass into the second one for example so",
    "start": "1104039",
    "end": "1110120"
  },
  {
    "text": "parallelizing these things just makes sense so now we've got non-blocking",
    "start": "1110120",
    "end": "1115640"
  },
  {
    "text": "clients the heavens have opened the reactive Manifesto has blessed us you are now reactive right um but but but",
    "start": "1115640",
    "end": "1123000"
  },
  {
    "text": "are we are we because um we actually do need",
    "start": "1123000",
    "end": "1128640"
  },
  {
    "text": "the answers don't we when we when we make a call I'm not blocking and waiting but why did you",
    "start": "1128640",
    "end": "1135880"
  },
  {
    "text": "make the call oh because I wanted something so so so you are going to have to wait for that though aren't you because at",
    "start": "1135880",
    "end": "1142960"
  },
  {
    "text": "this point here at the end of those two lines of code being executed at this point in",
    "start": "1142960",
    "end": "1148960"
  },
  {
    "text": "time it's possible the calls those Services have completed or it's possible they haven't we actually don't",
    "start": "1148960",
    "end": "1155799"
  },
  {
    "text": "know we won't know until we look at the state of the future if we actually need the information that comes back we might",
    "start": "1155799",
    "end": "1161799"
  },
  {
    "text": "want clarification that yes the subscription has been upgraded and yes these points have been applied maybe to",
    "start": "1161799",
    "end": "1167799"
  },
  {
    "text": "say to pass back back success to the thing that called our microservice or to carry out some other",
    "start": "1167799",
    "end": "1173120"
  },
  {
    "text": "operation so we actually need to wait somewhere and that's where we do",
    "start": "1173120",
    "end": "1178720"
  },
  {
    "text": "something like an await and what does an await do it blocks and it",
    "start": "1178720",
    "end": "1185320"
  },
  {
    "text": "waits and it's all I've seen lots of people say okay I've got I've made my code all reactive and it's non-blocking",
    "start": "1185320",
    "end": "1190960"
  },
  {
    "text": "and it's just asyn a weits everywhere and that's fine but you're blocking and",
    "start": "1190960",
    "end": "1197120"
  },
  {
    "text": "waiting it's rare in fact you don't end up somewhere in the client code having to actually stop and wait there's other",
    "start": "1197120",
    "end": "1204559"
  },
  {
    "text": "issues we'll get to around failure modes which we'll take a look at later on so the thing is even if you're doing non-blocking",
    "start": "1204559",
    "end": "1210600"
  },
  {
    "text": "calls the logic of your processing may require that you still have to wait for things to happen ultimately if you care",
    "start": "1210600",
    "end": "1218159"
  },
  {
    "text": "about a result in an interaction you're going to have to wait to get the",
    "start": "1218159",
    "end": "1223600"
  },
  {
    "text": "result if you don't care about it fine not a lot of PR response",
    "start": "1223600",
    "end": "1229200"
  },
  {
    "text": "interactions fall into that event stuff does but we tend to work with that at a level different level of abstraction but",
    "start": "1229200",
    "end": "1235679"
  },
  {
    "text": "the way to think about this is that even non-blocking calls can end up blocking that said this is still a good thing to",
    "start": "1235679",
    "end": "1242120"
  },
  {
    "text": "do because even if we ultimately do end up blocking the fact that we've been able to do those calls in parallel is",
    "start": "1242120",
    "end": "1248520"
  },
  {
    "text": "still a good thing so it is still a good idea to do this just be aware of the",
    "start": "1248520",
    "end": "1255320"
  },
  {
    "text": "limitations so we're just getting started we're just getting warmed up what other forms of asynchronous are out",
    "start": "1255320",
    "end": "1260440"
  },
  {
    "text": "there we've got a post here from grle gramlee worked for many years at Tyro which is a payments company in Australia",
    "start": "1260440",
    "end": "1266280"
  },
  {
    "text": "that's this interesting microsof architecture going on um and so Gran came back and he said well the",
    "start": "1266280",
    "end": "1271880"
  },
  {
    "text": "definition I've been using is the sending service doesn't wait for completion of the receiving service's",
    "start": "1271880",
    "end": "1277720"
  },
  {
    "text": "work before continuing Andor completing its work that first kind of sentence you says there is really non-blocking what",
    "start": "1277720",
    "end": "1284799"
  },
  {
    "text": "he's talking about there is non-blocking but he says well now while I think about it I expect temporal",
    "start": "1284799",
    "end": "1291960"
  },
  {
    "text": "decoupling from the receiving Services availability now temporal decoupling is",
    "start": "1291960",
    "end": "1297840"
  },
  {
    "text": "an interesting term because we actually you that is a term that we also use in different places in Computing to mean",
    "start": "1297840",
    "end": "1303400"
  },
  {
    "text": "very different things in the context of system in of service service",
    "start": "1303400",
    "end": "1308559"
  },
  {
    "text": "communication we're talking about service a needs service B to be there to complete some",
    "start": "1308559",
    "end": "1314960"
  },
  {
    "text": "operation so then we have Benjamin Johnson saying for him synchronous communication is direct communication",
    "start": "1314960",
    "end": "1320600"
  },
  {
    "text": "between sender and receiver async is there's an intermediary in involved",
    "start": "1320600",
    "end": "1326679"
  },
  {
    "text": "between the sender and receiver for example the message broker and it's often these",
    "start": "1326679",
    "end": "1332720"
  },
  {
    "text": "intermediaries that we use to deal with this temporal coupling problem and the",
    "start": "1332720",
    "end": "1339640"
  },
  {
    "text": "classic type of a message of an intermediary is as is mentioned a message broker this could be rabbit could be",
    "start": "1339640",
    "end": "1346679"
  },
  {
    "text": "acmq CFA whatever you might might want but some kind of middleware so the way these",
    "start": "1346679",
    "end": "1351880"
  },
  {
    "text": "intermediaries work is and there's different versions of it if I want to get something from A to B rather than talking directly to B so if I talk",
    "start": "1351880",
    "end": "1359360"
  },
  {
    "text": "directly to b b might not be there for this operation to complete B needs to be there needs to be available that's a",
    "start": "1359360",
    "end": "1365400"
  },
  {
    "text": "temporal coupling issue so to remove that we instead deliver the message to the intermediary and the intermediary",
    "start": "1365400",
    "end": "1372200"
  },
  {
    "text": "ensures that the message can get to the recipient and so the broker is doing that for us so in this situation here",
    "start": "1372200",
    "end": "1378559"
  },
  {
    "text": "I've got my message I'm putting it in the broker and then it's the broker's job to make sure that it gets",
    "start": "1378559",
    "end": "1385039"
  },
  {
    "text": "delivered we have other more dumb intermediat you can use a file system like an intermediary in which case the onus is on the recipient to keep pulling",
    "start": "1385039",
    "end": "1392400"
  },
  {
    "text": "a location of a file system for example but in this case the message broker is going to help make sure this thing gets",
    "start": "1392400",
    "end": "1398000"
  },
  {
    "text": "delivered and the reason we often like message Brokers is basically because that temporal decoupling issue we are",
    "start": "1398000",
    "end": "1405080"
  },
  {
    "text": "offloading guarantees around delivery to the broker itself we're not worried as",
    "start": "1405080",
    "end": "1410760"
  },
  {
    "text": "much about client side issues like retries and things like that because we",
    "start": "1410760",
    "end": "1416279"
  },
  {
    "text": "assuming that the message broker itself is a more highly available component than our own services are and the",
    "start": "1416279",
    "end": "1421640"
  },
  {
    "text": "message broker itself has that logic internally for effectively at a low level doing retries and the like so once",
    "start": "1421640",
    "end": "1428200"
  },
  {
    "text": "B becomes available the message will get delivered so it's sort of offloading that requirement and I think in software",
    "start": "1428200",
    "end": "1434520"
  },
  {
    "text": "engineering in general it's always a good idea to offload work to people that",
    "start": "1434520",
    "end": "1439559"
  },
  {
    "text": "are smarter than you which is normally most people right the people that wrote message Brokers are going to write a",
    "start": "1439559",
    "end": "1445080"
  },
  {
    "text": "better message broker than me so I'm going to use their software that's kind of the way I like to",
    "start": "1445080",
    "end": "1450880"
  },
  {
    "text": "operate so I had another tweet kind along these lines so asynchronous communication for them is like dropping",
    "start": "1450919",
    "end": "1457480"
  },
  {
    "text": "snail mail in a red post box and then getting on with your life and then boom one day Postman Pat stuff something into",
    "start": "1457480",
    "end": "1465200"
  },
  {
    "text": "your house mailbox along with millions of coupons and charity mailers now some of you might not necessarily be aware of",
    "start": "1465200",
    "end": "1471960"
  },
  {
    "text": "who Postman Pat is this is the OG Postman Pat there's apparently a new CG Postman P has a hover graph this is the",
    "start": "1471960",
    "end": "1477720"
  },
  {
    "text": "original Postman P Postman Pat represent um and he would go around delivering your mail and he would be relied upon in",
    "start": "1477720",
    "end": "1483480"
  },
  {
    "text": "our metaphor that he is our message broker to an extent well not only he's the kind of delivery mechanism but the",
    "start": "1483480",
    "end": "1490039"
  },
  {
    "text": "message broker also really as a from a metaphorical point of view is giving us this idea of the of a",
    "start": "1490039",
    "end": "1496039"
  },
  {
    "text": "mailbox okay so these are quite common of course in the US because you can't go",
    "start": "1496039",
    "end": "1501200"
  },
  {
    "text": "on people's properties because they'll shoot you so you have to leave the post at the end at the end of the door so but",
    "start": "1501200",
    "end": "1506279"
  },
  {
    "text": "the none this is the idea right so you can be away from home you come back the letters are there waiting for you and that's when you pick them up right it's",
    "start": "1506279",
    "end": "1512360"
  },
  {
    "text": "a lovely idea and so really what we're talking about here is an intermediary providing some kind of durable inbox a",
    "start": "1512360",
    "end": "1520200"
  },
  {
    "text": "place where I can put a message I sort of use a term message as a kind of generic thing that I'm sending over",
    "start": "1520200",
    "end": "1525919"
  },
  {
    "text": "intermediary which could enccompass a request response or anything event so I give you a message I put that in that durable store and it's going to be there",
    "start": "1525919",
    "end": "1532919"
  },
  {
    "text": "for later on so you can use things like databases as",
    "start": "1532919",
    "end": "1538720"
  },
  {
    "text": "intermediaries um I mean Oracle made Millions out of doing this you probably shouldn't do this a lot right but for",
    "start": "1538720",
    "end": "1544600"
  },
  {
    "text": "basic things it's fine you absolutely can use file systems for this a large amount of digital systems out there are",
    "start": "1544600",
    "end": "1550559"
  },
  {
    "text": "basically digital Recreations of existing paper based processes we've gone from moving Bits of Paper around to",
    "start": "1550559",
    "end": "1557039"
  },
  {
    "text": "moving files around large massive Banks still operate mostly by passing files",
    "start": "1557039",
    "end": "1562559"
  },
  {
    "text": "around here we're using the file system as our intermediary you can also use email as an intermediary mechanism for",
    "start": "1562559",
    "end": "1569640"
  },
  {
    "text": "communication between services but don't because it's a stupid idea um but the fundamental fact of this is and the",
    "start": "1569640",
    "end": "1576240"
  },
  {
    "text": "benefit of this style of intermediary based communication is that the sender of the message does not need to worry",
    "start": "1576240",
    "end": "1582440"
  },
  {
    "text": "about whether or not the client or the recipient is currently available that's that temporal decoupling issue coming",
    "start": "1582440",
    "end": "1588720"
  },
  {
    "text": "about we do of course though need to trust the intermediary so we need to make sure",
    "start": "1588720",
    "end": "1594960"
  },
  {
    "text": "that we've got if we're using a message broker a good one one that is not only good software but also that is managed",
    "start": "1594960",
    "end": "1602039"
  },
  {
    "text": "well running and managing message Brokers isn't necessarily A trivial act and I've seen lots of situations where",
    "start": "1602039",
    "end": "1607880"
  },
  {
    "text": "people have lost messages in production systems not through fault the message broker but through the fault the people operating it not reading how to run a",
    "start": "1607880",
    "end": "1614480"
  },
  {
    "text": "message broker so let's look at how we might use a message brok broker for say implementing that request response based",
    "start": "1614480",
    "end": "1620320"
  },
  {
    "text": "communication we looked at earlier so in this example here um service a is going to put a request in a message and send",
    "start": "1620320",
    "end": "1626600"
  },
  {
    "start": "1624000",
    "end": "1959000"
  },
  {
    "text": "that request and so we've got a queue that b is listening from so this would be B's q that effectively is is it",
    "start": "1626600",
    "end": "1633679"
  },
  {
    "text": "request Q so I send the request to the request queue and then assuming B is",
    "start": "1633679",
    "end": "1638720"
  },
  {
    "text": "available right now B might get that request straight away so it's now got the request now I'm going to do the",
    "start": "1638720",
    "end": "1644000"
  },
  {
    "text": "processing I've done the work I've got my result so I'm now going to create the response and I'm going to send it back",
    "start": "1644000",
    "end": "1650000"
  },
  {
    "text": "and probably i' have a separate Cee for this so a will be publishing to the request queue but listening to the",
    "start": "1650000",
    "end": "1656480"
  },
  {
    "text": "response queue so I pop something in there and the result comes back in real",
    "start": "1656480",
    "end": "1662440"
  },
  {
    "text": "straightforward and easy right this is an example of intermediary based request response based",
    "start": "1662440",
    "end": "1668679"
  },
  {
    "text": "communication so pretty easy and clear cut it's not because there's Nuance",
    "start": "1668679",
    "end": "1674919"
  },
  {
    "text": "here when I open a network connection from one process and talk to another machine the responses come back over",
    "start": "1674919",
    "end": "1682000"
  },
  {
    "text": "that same network connection but we don't have a single network path between",
    "start": "1682000",
    "end": "1687159"
  },
  {
    "text": "the two of us we're going via this intermediary so when that response comes back it's not coming back over the same",
    "start": "1687159",
    "end": "1692799"
  },
  {
    "text": "network connection necessarily to the same process that opened that network connection in the first",
    "start": "1692799",
    "end": "1698320"
  },
  {
    "text": "place I've simplified the world at the moment I've implied there's one a and there's one b in reality is much more",
    "start": "1698320",
    "end": "1705039"
  },
  {
    "text": "likely you'll have multiple copies of A's and mult multiple instances of B",
    "start": "1705039",
    "end": "1710640"
  },
  {
    "text": "this is very very likely to be the case so when I send that request to B",
    "start": "1710640",
    "end": "1716200"
  },
  {
    "text": "and B sends back that response on a lot of message Brokers",
    "start": "1716200",
    "end": "1721480"
  },
  {
    "text": "there would not be any way for me to guarantee that the instance that sent the request is going to get the same",
    "start": "1721480",
    "end": "1727880"
  },
  {
    "text": "response back so a different instance of a could",
    "start": "1727880",
    "end": "1733159"
  },
  {
    "text": "get that response and immediately people think oh it's a massive problem",
    "start": "1733159",
    "end": "1739240"
  },
  {
    "text": "that's a real issue because I've sent that that request and I need the response back in my code so then they",
    "start": "1739240",
    "end": "1746279"
  },
  {
    "text": "start thinking of ways they can make sure that the request kind of gets routed back they start sharding cues and",
    "start": "1746279",
    "end": "1751840"
  },
  {
    "text": "all this sort of stuff and I'm like no no no no you're solving the wrong problem what you're basically doing here",
    "start": "1751840",
    "end": "1758360"
  },
  {
    "text": "is you're saying my client code is going to hang around I'm going to maintain inmemory state to be able to handle the",
    "start": "1758360",
    "end": "1766080"
  },
  {
    "text": "response back in this running node and I want to Route the message so it comes back to the same thing that sent",
    "start": "1766080",
    "end": "1771519"
  },
  {
    "text": "the request what happens if that node dies oh okay so if a dies Well what",
    "start": "1771519",
    "end": "1779120"
  },
  {
    "text": "we'll do is we'll replicate the inmemory state uh now you've got another problem",
    "start": "1779120",
    "end": "1785960"
  },
  {
    "text": "right it's much better for you to build your application in such a way that any",
    "start": "1785960",
    "end": "1791080"
  },
  {
    "text": "of the instances of a can process the response that was sent from any of the",
    "start": "1791080",
    "end": "1796120"
  },
  {
    "text": "instances of a because that will make make your system much easier to scale",
    "start": "1796120",
    "end": "1801519"
  },
  {
    "text": "and it will make it much more robust you're not relying on inmemory replication of State Building stateful",
    "start": "1801519",
    "end": "1808000"
  },
  {
    "text": "Systems is a pain in the bum and you should do absolutely everything you can possibly do to never do that ever what",
    "start": "1808000",
    "end": "1815320"
  },
  {
    "text": "we're aiming for here is entirely stateless processing of a request or a response when I get a request I should",
    "start": "1815320",
    "end": "1822919"
  },
  {
    "text": "be able to get everything I need out of that request to know how to process it correctly likewise with a response how",
    "start": "1822919",
    "end": "1828440"
  },
  {
    "text": "do we solve this not most of the time you stick stuff in a database and it's fine right so I've done something I've",
    "start": "1828440",
    "end": "1834360"
  },
  {
    "text": "kicked it off I put some information in a database when the response comes back in my instance of a picks it up says Ah",
    "start": "1834360",
    "end": "1840679"
  },
  {
    "text": "we've got this what do I do with this oh I get some information from my database I bring that stuff back together and",
    "start": "1840679",
    "end": "1845840"
  },
  {
    "text": "away I go and you can do funky functional stuff with continuations if you want to that's very very cool hurts",
    "start": "1845840",
    "end": "1852320"
  },
  {
    "text": "people's brains even more but it does kind of work right so this is good I actually quite like this it's a forcing",
    "start": "1852320",
    "end": "1857600"
  },
  {
    "text": "function this is actually helping us in understand and reason about what happens",
    "start": "1857600",
    "end": "1862880"
  },
  {
    "text": "when nodes fail during orchestrated flows like this we come back to our code",
    "start": "1862880",
    "end": "1868000"
  },
  {
    "text": "from before our lovely non-blocking code where we've got one bit of code running in one program right with our you know",
    "start": "1868000",
    "end": "1874799"
  },
  {
    "text": "we're doing a little dispatching and you do something and then you come back like what",
    "start": "1874799",
    "end": "1880000"
  },
  {
    "text": "happens in this situation we've got the the assumption that everything's coming",
    "start": "1880000",
    "end": "1885039"
  },
  {
    "text": "back to the same instance so what happens if the code dies halfway through what happens if",
    "start": "1885039",
    "end": "1891039"
  },
  {
    "text": "this client dies we've sent those requests out but we haven't yet processed the results of",
    "start": "1891039",
    "end": "1896120"
  },
  {
    "text": "those requests and then our our node dies that can happen right possible now",
    "start": "1896120",
    "end": "1903080"
  },
  {
    "text": "in practice the way we solve this is just you just retry make it operations died and potent and you retry and it",
    "start": "1903080",
    "end": "1908639"
  },
  {
    "text": "really is that simple but you have to at least have reasoned about it and make sure it's okay to retry and know the",
    "start": "1908639",
    "end": "1914559"
  },
  {
    "text": "fact that it has died and know the fact that this overarching operation has not completed it's not as visible to you",
    "start": "1914559",
    "end": "1922080"
  },
  {
    "text": "when you're implementing systems like this I think it becomes a little bit more obvious when you're sending things",
    "start": "1922080",
    "end": "1928080"
  },
  {
    "text": "like over Brokers sometimes about because your H to now think about the routing and then these things come more to the four so I think it's arguable",
    "start": "1928080",
    "end": "1934760"
  },
  {
    "text": "that when you're using intermediaries soort of intermediary based communication I think it's arguable that",
    "start": "1934760",
    "end": "1940519"
  },
  {
    "text": "this actually encourages more stateless processing so what what some people see",
    "start": "1940519",
    "end": "1945679"
  },
  {
    "text": "as a problem I actually see is an opportunity to build better software so we've got all of these",
    "start": "1945679",
    "end": "1951480"
  },
  {
    "text": "competing definitions out there we've grown just a few of them today already there's probably more there are more out there I know that from a fact I've",
    "start": "1951480",
    "end": "1957320"
  },
  {
    "text": "collected a lot more since there's may be a question here about immediacy how quickly do you react",
    "start": "1957320",
    "end": "1963960"
  },
  {
    "start": "1959000",
    "end": "2050000"
  },
  {
    "text": "to the thing being sent in the reactive Manifesto idea maybe we're supposed to react to these things before they're sent we just don't know we've got",
    "start": "1963960",
    "end": "1970240"
  },
  {
    "text": "temporal coupling right how could if for some people asynchronous means we avoid",
    "start": "1970240",
    "end": "1976279"
  },
  {
    "text": "temporal coupling uh other people think it's about",
    "start": "1976279",
    "end": "1981960"
  },
  {
    "text": "non-blocking for others it's that we have to use some kind of intermediary now all of these things can",
    "start": "1981960",
    "end": "1987880"
  },
  {
    "text": "be useful Concepts but they're all different things so it's very hard therefore to",
    "start": "1987880",
    "end": "1994039"
  },
  {
    "text": "say what does asynchronous mean like will the real asynchronous communication please stand up now let's be clear let's",
    "start": "1994039",
    "end": "2003519"
  },
  {
    "text": "ask a simple question right does it does it matter well I hope so because you sat through 35 minutes so far and there's",
    "start": "2003519",
    "end": "2010000"
  },
  {
    "text": "got to be a point of this talk somewhere but fundamentally words have different",
    "start": "2010000",
    "end": "2017039"
  },
  {
    "text": "meanings many of you here are not speaking English as a first language and you will be painfully aware of the fact",
    "start": "2017039",
    "end": "2023480"
  },
  {
    "text": "that words don't have different meanings because when're learning English it is an annoying language",
    "start": "2023480",
    "end": "2029760"
  },
  {
    "text": "sometimes does anyone want to guess for me bit of audience interaction this could always go badly what words in the",
    "start": "2029760",
    "end": "2035440"
  },
  {
    "text": "English language has the most meaning in the ox English dictionary and I mean the full Ox English dictionary can anyone",
    "start": "2035440",
    "end": "2041320"
  },
  {
    "text": "does anyone know not get it's very close well it's no it's the opposite is what's what",
    "start": "2041320",
    "end": "2047399"
  },
  {
    "text": "always goes with get set you're so close it's set in the current edition I mean",
    "start": "2047399",
    "end": "2053919"
  },
  {
    "start": "2050000",
    "end": "2405000"
  },
  {
    "text": "in objects Ori in good objects oriented programming you always have both of those though right so we've got set set",
    "start": "2053919",
    "end": "2060720"
  },
  {
    "text": "now in the new edition of the full Oxford English Dictionary that's coming out in 2037 that's how long it takes takes them",
    "start": "2060720",
    "end": "2068000"
  },
  {
    "text": "to come out with the new editions right it's going to be run set in the current edition has 430",
    "start": "2068000",
    "end": "2075520"
  },
  {
    "text": "meanings right 430 oh run currently has",
    "start": "2075520",
    "end": "2082800"
  },
  {
    "text": "645 so the last Edition with the 430 meanings was the Edition that was",
    "start": "2082800",
    "end": "2088118"
  },
  {
    "text": "completed in 1987 so doesn't get fully reissued very often this thing is 60 volumes the full",
    "start": "2088119",
    "end": "2094520"
  },
  {
    "text": "oish dictionary so but we are used to this though right now I'm not going to expect",
    "start": "2094520",
    "end": "2100680"
  },
  {
    "text": "you to know all 430 meanings but you probably already as people who might speak English as a second third or",
    "start": "2100680",
    "end": "2106040"
  },
  {
    "text": "fourth language you probably already know lots of ways to use the word set and I don't always have to explain to",
    "start": "2106040",
    "end": "2111720"
  },
  {
    "text": "you how I'm using the word set because you can kind of work it out we're used to this because fundamentally what we're",
    "start": "2111720",
    "end": "2118839"
  },
  {
    "text": "very good at doing as humans is basically deriving the understanding of words from the context in which that",
    "start": "2118839",
    "end": "2125520"
  },
  {
    "text": "word is used had a great conversation with Ian Cooper about this a while ago and some people",
    "start": "2125520",
    "end": "2131560"
  },
  {
    "text": "have a hinterland Ian Cooper has like the whole Alps as his Hinterland right because obviously it turns out Beyond",
    "start": "2131560",
    "end": "2136680"
  },
  {
    "text": "knowing an awful lot about messaging and distributed systems he also studies semiotics at University right he's",
    "start": "2136680",
    "end": "2141880"
  },
  {
    "text": "explained to me about this is about meaning he said that the meaning of a word becomes more narrow as we put other",
    "start": "2141880",
    "end": "2149520"
  },
  {
    "text": "words Around It This Is Us adding the context around the word as we",
    "start": "2149520",
    "end": "2154800"
  },
  {
    "text": "communicate to allow the person reading or hearing hearing that word to know what it means and we don't process it",
    "start": "2154800",
    "end": "2161079"
  },
  {
    "text": "like a computer it's all instinctual that's what's going on so we're going to try a little experiment to see how this",
    "start": "2161079",
    "end": "2167000"
  },
  {
    "text": "works so I want you to think about what the word run means you just pick the first definition in your head think of",
    "start": "2167000",
    "end": "2173599"
  },
  {
    "text": "run what does run mean for some of you it might mean running keep picture in your head right what does it mean I'm",
    "start": "2173599",
    "end": "2179480"
  },
  {
    "text": "now going to put some words around run to see if what I was thinking matches your",
    "start": "2179480",
    "end": "2185280"
  },
  {
    "text": "definition the issue got worse the moment the program was run now it's possible many of you were thinking about",
    "start": "2185280",
    "end": "2191560"
  },
  {
    "text": "jogging or something I wasn't thinking about jogging if I just said the word run without any other words it's hard to",
    "start": "2191560",
    "end": "2197960"
  },
  {
    "text": "know now it's become more specific let's try again think of a different definition or different",
    "start": "2197960",
    "end": "2204160"
  },
  {
    "text": "meaning or or different context in which you'd use the word run let's go again this is this time",
    "start": "2204160",
    "end": "2211040"
  },
  {
    "text": "this is what I'm thinking about the economy Crush crashed due to a run on the banks two very different",
    "start": "2211040",
    "end": "2218640"
  },
  {
    "text": "contexts probably all of you had different versions of run in your head but it's okay it's fine because we put",
    "start": "2218640",
    "end": "2225440"
  },
  {
    "text": "other words around it and the context becomes clear so so does it",
    "start": "2225440",
    "end": "2231400"
  },
  {
    "text": "matter the issue is we don't put the word asynchronous then put other words around it to give it meaning we just use",
    "start": "2231400",
    "end": "2238480"
  },
  {
    "text": "the word asynchronous by itself we don't give the context so we can't derive shared",
    "start": "2238480",
    "end": "2245800"
  },
  {
    "text": "meaning from it either I did keep digging Deeper by the way I",
    "start": "2245800",
    "end": "2252319"
  },
  {
    "text": "went back to the reactive Manifesto as well um and they do actually say what the oxid Engish dictionary defines",
    "start": "2252319",
    "end": "2257880"
  },
  {
    "text": "asynchronous as this is actually what Google says the oxid Engish dictionary defines asynchronous as by the way that",
    "start": "2257880",
    "end": "2264440"
  },
  {
    "text": "first sentence uh because if you actually look at the oxid English dictionary and I mean the full one right",
    "start": "2264440",
    "end": "2269760"
  },
  {
    "text": "there are multiple definitions of asynchronous in the oxid dictionary so when I found out about sets and I found",
    "start": "2269760",
    "end": "2274960"
  },
  {
    "text": "out about run I was like well maybe there are other definitions of asynchronous in the oxid English",
    "start": "2274960",
    "end": "2280760"
  },
  {
    "text": "dictionary so maybe they've got a great one for computing so I went to the actual full OED if you're a British",
    "start": "2280760",
    "end": "2287359"
  },
  {
    "text": "citizen you can get this free from any Library you can get online access to it for free um or it helps to have like a",
    "start": "2287359",
    "end": "2293960"
  },
  {
    "text": "you know my brother's a medieval researcher so he has access to it for some reason so he looked it up for me so we looked in there's lots of different",
    "start": "2293960",
    "end": "2300119"
  },
  {
    "text": "definitions of asynchronous in there and they talk to you about the context in which these definitions come from and we",
    "start": "2300119",
    "end": "2305359"
  },
  {
    "text": "find that the definition of asynchronous that the active Manifesto uses and the majority of the internet uses is just",
    "start": "2305359",
    "end": "2312440"
  },
  {
    "text": "the first result and this is specifically a meaning this is not synchronous not",
    "start": "2312440",
    "end": "2318640"
  },
  {
    "text": "existing or occurring at the same time not coinciding in time that's the oxid",
    "start": "2318640",
    "end": "2324440"
  },
  {
    "text": "English dictionary apparently definition singular of asynchronous turns out this",
    "start": "2324440",
    "end": "2329520"
  },
  {
    "text": "definition uh actually comes from medical contexts we working in a medical context",
    "start": "2329520",
    "end": "2336200"
  },
  {
    "text": "I don't believe we are so I thought well is there is there actually a Computing definition in there turns out there is",
    "start": "2336200",
    "end": "2343240"
  },
  {
    "text": "there's a whole section on Computing and asynchronous in the oxid English dictionary and there's actually two",
    "start": "2343240",
    "end": "2348480"
  },
  {
    "text": "separate definitions I there's one that's more about internal sort of Chip Behavior there's one that does actually",
    "start": "2348480",
    "end": "2355240"
  },
  {
    "text": "speak to sort of interprocess communication I thought Pay Dirt I found it great here we go so I dug this",
    "start": "2355240",
    "end": "2362280"
  },
  {
    "text": "definition out and here it is designating data transmission in which packets of data are sent at irregular",
    "start": "2362280",
    "end": "2368760"
  },
  {
    "text": "intervals with the start and end of each packet being marked by specific signals invol involved involving such uh",
    "start": "2368760",
    "end": "2376880"
  },
  {
    "text": "transmission I I don't know what that means I it's probably got to do with the",
    "start": "2376880",
    "end": "2382400"
  },
  {
    "text": "design of of network protocols right i' imagine that means a lot to you if you know the ins and outs of you know things",
    "start": "2382400",
    "end": "2388920"
  },
  {
    "text": "like quick and designing your own low-level networking protocols on Raw sockets and UDP and everything else but",
    "start": "2388920",
    "end": "2394800"
  },
  {
    "text": "this is not although this is still talking about communication it's talking again about",
    "start": "2394800",
    "end": "2400280"
  },
  {
    "text": "it in a different context to where we talk about communication the reason I'm getting to",
    "start": "2400280",
    "end": "2407079"
  },
  {
    "start": "2405000",
    "end": "2767000"
  },
  {
    "text": "all of this is that we have to recognize that software fundamentally is a type of socio technical system right soot",
    "start": "2407079",
    "end": "2415720"
  },
  {
    "text": "technical system what does this mean right soop people human beings Being Human right",
    "start": "2415720",
    "end": "2423520"
  },
  {
    "text": "that's what we are people and Technology this is kind of in the Greek sense of",
    "start": "2423520",
    "end": "2428560"
  },
  {
    "text": "Technology right so it means kind of a knowledge based system we typically think of it in terms of computers and",
    "start": "2428560",
    "end": "2434119"
  },
  {
    "text": "Hardware but it can mean other things so at this point you're thinking oh God there's some sort of liberal snowflake",
    "start": "2434119",
    "end": "2440119"
  },
  {
    "text": "that's going to start ramming politics down our throat talking about how people have just got to get along actually the concept of soot Technical Systems was",
    "start": "2440119",
    "end": "2446599"
  },
  {
    "text": "first kind of explored when looking into coal mining during World War II and this is quite you know rugged it's coal",
    "start": "2446599",
    "end": "2452440"
  },
  {
    "text": "mining right so they for them the technology involved here was the mining equipment and everything else that was going on and they looking into looking",
    "start": "2452440",
    "end": "2458880"
  },
  {
    "text": "at these systems as a whole to make them safer and understand how they worked we have to recognize that the amount of",
    "start": "2458880",
    "end": "2465640"
  },
  {
    "text": "software created by individuals is vanishingly rare the amount of meaningful software created and a lot of",
    "start": "2465640",
    "end": "2472440"
  },
  {
    "text": "the corbs for oh the hero programmer that did all these stuff by themselves they didn't do that stuff all by",
    "start": "2472440",
    "end": "2477640"
  },
  {
    "text": "themselves lonus did the very very first version of the kernel it wasn't useful for anybody else it was hundreds and",
    "start": "2477640",
    "end": "2483400"
  },
  {
    "text": "thousands of people contributing to that that made it work and L for all his faults made that work right people come",
    "start": "2483400",
    "end": "2490599"
  },
  {
    "text": "together to build software that's what what happens bringing people together to work",
    "start": "2490599",
    "end": "2497119"
  },
  {
    "text": "on a problem requires good communication if those people can't work together it",
    "start": "2497119",
    "end": "2502560"
  },
  {
    "text": "doesn't matter how good the technology is it's going to fall apart when you've got two people trying to have a",
    "start": "2502560",
    "end": "2508560"
  },
  {
    "text": "conversation about we're going to make this a synchronous and if you've got two very different views of the world how",
    "start": "2508560",
    "end": "2515880"
  },
  {
    "text": "well is that going to turn out for you you I saw the talk about uh the wle",
    "start": "2515880",
    "end": "2521560"
  },
  {
    "text": "mapping talk before lunch and a lot of that was taking implicit information and",
    "start": "2521560",
    "end": "2526880"
  },
  {
    "text": "making it explicit getting it out on the page visualizing it helping us see the differences but the problem when we use",
    "start": "2526880",
    "end": "2532960"
  },
  {
    "text": "the term like asynchronous is a lot of us just have an assumed knowledge about what that word",
    "start": "2532960",
    "end": "2538720"
  },
  {
    "text": "means and we've got lessons that we've heard before again and again about the",
    "start": "2538720",
    "end": "2544839"
  },
  {
    "text": "downsides of communication failing in the Old Testament we have the story",
    "start": "2544839",
    "end": "2550520"
  },
  {
    "text": "of the Tower of Babel it's quite a short story they talk about how the people of Babel were constructing this glorious",
    "start": "2550520",
    "end": "2557520"
  },
  {
    "text": "tower that was made possible for two reasons one of which turned out to be uh",
    "start": "2557520",
    "end": "2563040"
  },
  {
    "text": "new technology and good like good building materials it's like it's interesting that's a fixation of the Old Testament lots of given that we're",
    "start": "2563040",
    "end": "2570559"
  },
  {
    "text": "having a bit of a a crisis about bad Concrete in the UK right now that's especially problematic anyway but the other reason these people were able to",
    "start": "2570559",
    "end": "2576839"
  },
  {
    "text": "come to together and build this glorious Tower is because they were one people and spoke of one language now the Old Testament god um",
    "start": "2576839",
    "end": "2585760"
  },
  {
    "text": "was a Fickle character let's put it that way and every now and then he would just it was like of sort of the late season",
    "start": "2585760",
    "end": "2592520"
  },
  {
    "text": "Game of Thrones characters they just changed personality from one episode to the next and basically God went don't",
    "start": "2592520",
    "end": "2598400"
  },
  {
    "text": "like that and he said they've all got to speak different languages and the whole thing fell apart there's no actual rationalization given for that in the in",
    "start": "2598400",
    "end": "2604559"
  },
  {
    "text": "the Old Testament there's interpretations to why he did it but basically he would and changed all their languages and they stopped being able to",
    "start": "2604559",
    "end": "2610480"
  },
  {
    "text": "build their glorious Tower so that story is what only 4,000 years old is longer than",
    "start": "2610480",
    "end": "2617960"
  },
  {
    "text": "that we use the term asynchronous assume everyone knows what it means but we're",
    "start": "2617960",
    "end": "2623160"
  },
  {
    "text": "not speaking the same term we're not speaking the same language so what can we do about this I",
    "start": "2623160",
    "end": "2630160"
  },
  {
    "text": "don't have a better word that encompasses all the different meanings of asynchronous and I think that's okay",
    "start": "2630160",
    "end": "2636839"
  },
  {
    "text": "I I think we should use more specific words about what we want before you start you know subscribing to Dogma I've",
    "start": "2636839",
    "end": "2644240"
  },
  {
    "text": "got to be reactive I've got a t-shirt and everything doesn't mean anything start by talking about what does our",
    "start": "2644240",
    "end": "2650640"
  },
  {
    "text": "application need how should our application handle different situations this is the context in which we're",
    "start": "2650640",
    "end": "2656720"
  },
  {
    "text": "operating this is what we need for things to work and then describe how it's going to",
    "start": "2656720",
    "end": "2663200"
  },
  {
    "text": "handle certain situations that any distributed system is going to have to deal with what should happen when a server is",
    "start": "2663200",
    "end": "2670839"
  },
  {
    "text": "unreachable how fast do we want the application to be what should we do if a",
    "start": "2670839",
    "end": "2676160"
  },
  {
    "text": "client crashes based on that you can then describe the nature of the interactions",
    "start": "2676160",
    "end": "2682440"
  },
  {
    "text": "you want and what behaviors you want those interactions use more explicit terms say things like clients should use",
    "start": "2682440",
    "end": "2689960"
  },
  {
    "text": "non-blocking calls say that you should aim to run operations that can be parallelized in parallel talk talk about",
    "start": "2689960",
    "end": "2697559"
  },
  {
    "text": "using a specific broker as an intermediary and why you're doing it this will help people",
    "start": "2697559",
    "end": "2703839"
  },
  {
    "text": "understand try not to use this though as an excuse to go around policing people's language the title of this talk",
    "start": "2703839",
    "end": "2710559"
  },
  {
    "text": "obviously comes from The Princess Bride right and in the whole joke here is in",
    "start": "2710559",
    "end": "2716440"
  },
  {
    "text": "mon Toya along with everybody else in the film and the Watchers at home we all know what inconceivable meaning it's",
    "start": "2716440",
    "end": "2722920"
  },
  {
    "text": "vincus that's having the problem this is why the joke kind of works you keep using that word I do not think",
    "start": "2722920",
    "end": "2730359"
  },
  {
    "text": "it means what you think it means as though that there's one universal definition and in the context of The",
    "start": "2730359",
    "end": "2736000"
  },
  {
    "text": "Princess Bride there is of what inconceivable means but there isn't for us with asynchronous so maybe the next time",
    "start": "2736000",
    "end": "2743079"
  },
  {
    "text": "someone says to you uh we should make this asynchronous just maybe ask the question uh what does that mean to",
    "start": "2743079",
    "end": "2749640"
  },
  {
    "text": "you um because the answer might shock you you can find out lots more",
    "start": "2749640",
    "end": "2754680"
  },
  {
    "text": "information at my website there's things I've done I've been doing these talks for a long time I'm getting older if you",
    "start": "2754680",
    "end": "2761559"
  },
  {
    "text": "watch them all after you'll see me getting grayer um which is you know apparently a thing uh but lots more information over",
    "start": "2761559",
    "end": "2768079"
  },
  {
    "start": "2767000",
    "end": "2790000"
  },
  {
    "text": "at my website you can also see information about the work that I do with my clients and everything else um but other than that thank you",
    "start": "2768079",
    "end": "2776680"
  }
]