[
  {
    "text": "[Music] [Applause]",
    "start": "6990",
    "end": "13679"
  },
  {
    "text": "yeah so my name is Adrien Mo um my official title is Chief scientist at a",
    "start": "13679",
    "end": "19840"
  },
  {
    "text": "company called container Solutions and we basically do uh you know Consulting around microservices Cloud native Etc um",
    "start": "19840",
    "end": "28199"
  },
  {
    "text": "I did write a book on Docker which which is probably the main reason I get invited to give talks now and again um",
    "start": "28199",
    "end": "34760"
  },
  {
    "text": "there's also a free Docker security book that you can download from a that will cover a lot of the the stuff that I'm",
    "start": "34760",
    "end": "40360"
  },
  {
    "text": "going to go through in this it is quite a Docker Focus talk but there's a lot also in there about containers and",
    "start": "40360",
    "end": "46399"
  },
  {
    "text": "micros servic in general if you want to reach me the best way is probably to reach me on Twitter",
    "start": "46399",
    "end": "51680"
  },
  {
    "text": "where my handle is at ad remote um so in this talk I'm going to",
    "start": "51680",
    "end": "58760"
  },
  {
    "text": "start by talking a little bit about um what security is and what the benefits of having security",
    "start": "58760",
    "end": "65280"
  },
  {
    "text": "are uh then we'll talk about some specific um attack vectors that are perhaps more relevant in",
    "start": "65280",
    "end": "71080"
  },
  {
    "text": "containers uh then a philosophy about how you deal with security um I've got a short demo which I was just working on",
    "start": "71080",
    "end": "78280"
  },
  {
    "text": "so it's got the potential to go horribly wrong which I'm sure you all enjoy um yeah and then so the second",
    "start": "78280",
    "end": "85119"
  },
  {
    "text": "half of the talk is just a whole bunch of various tips and techniques on how to secure Microsoft service based system",
    "start": "85119",
    "end": "90799"
  },
  {
    "text": "especially a Docker one okay so one of the funny things",
    "start": "90799",
    "end": "96600"
  },
  {
    "text": "about security is um you know you don't really get",
    "start": "96600",
    "end": "103159"
  },
  {
    "text": "anything um if you think about a footballer if a footballer does well you know you can win medals you can win the",
    "start": "103159",
    "end": "108920"
  },
  {
    "text": "world cup or something you do security well you don't get anything nobody gives you anything at all and it's actually a",
    "start": "108920",
    "end": "115320"
  },
  {
    "text": "bunch of things that don't happen that are the interesting thing so you don't get any medals but some interesting",
    "start": "115320",
    "end": "121600"
  },
  {
    "text": "things don't happen what it doesn't happen is your site doesn't go down because somebody's managed to exploit",
    "start": "121600",
    "end": "126960"
  },
  {
    "text": "some vulnerability your front page hopefully doesn't look like this because some script kites manag to get in and and",
    "start": "126960",
    "end": "133560"
  },
  {
    "text": "give your site a redesign um You probably don't start selling Viagra on the side or at least I",
    "start": "133560",
    "end": "140120"
  },
  {
    "text": "assume tame Town Council in the UK didn't mean to start selling",
    "start": "140120",
    "end": "145560"
  },
  {
    "text": "Viagra and that's actually quite an interesting search because all I did was search for good mement sites and bu",
    "start": "145560",
    "end": "151360"
  },
  {
    "text": "Viagra I assume if you run that search again today you'll find a bunch of similar things and it's all sites that",
    "start": "151360",
    "end": "156519"
  },
  {
    "text": "have been hacked and are doing that um also you don't lose your",
    "start": "156519",
    "end": "163599"
  },
  {
    "text": "customer's credit card details clearly that's about almost the worst thing that can happen and I think this is actually",
    "start": "163599",
    "end": "169360"
  },
  {
    "text": "becoming more and more than Norm is that attackers will go after valuable assets like customer details and so on and you",
    "start": "169360",
    "end": "176360"
  },
  {
    "text": "not won't necessarily hear about it but um then years later it comes out in the new news um there was also one a couple",
    "start": "176360",
    "end": "183480"
  },
  {
    "text": "years ago where excuse me where military and inell intelligence Personnel um",
    "start": "183480",
    "end": "190159"
  },
  {
    "text": "there was sort of um details on them were leaked and that was particularly bad it wasn't just details on them and",
    "start": "190159",
    "end": "195560"
  },
  {
    "text": "their addresses it was also their family and these were people that could be targeted by you know foreign governments",
    "start": "195560",
    "end": "201000"
  },
  {
    "text": "and criminal elements so it put people directly put their lives at risk so that was a particularly bad",
    "start": "201000",
    "end": "207760"
  },
  {
    "text": "one um the next section it's just some things that I think you should be thinking about in particular when trying",
    "start": "207760",
    "end": "213400"
  },
  {
    "text": "to protect a container based system",
    "start": "213400",
    "end": "219200"
  },
  {
    "text": "so um most of you are probably aware that with Docker especially in basically all Container formats and the way it",
    "start": "219200",
    "end": "225920"
  },
  {
    "text": "works so quickly and effectively is that the kernel is shared between all the",
    "start": "225920",
    "end": "231879"
  },
  {
    "text": "containers and the host itself um but that has a bunch of side effects so for example if one container",
    "start": "231879",
    "end": "239400"
  },
  {
    "text": "was to cause a kernel panic it would take down not just that container but all the other containers on the host and",
    "start": "239400",
    "end": "245439"
  },
  {
    "text": "host itself um similarly if one container can use the PO in memory they can starve out",
    "start": "245439",
    "end": "251560"
  },
  {
    "text": "other containers um and result in a denial of service",
    "start": "251560",
    "end": "257919"
  },
  {
    "text": "attack um same goes for CPU and so on if you can steal a CPU and start other containers then you can potentially run",
    "start": "257919",
    "end": "264479"
  },
  {
    "text": "a denial service container breakout so this is just the idea that um containers are",
    "start": "264479",
    "end": "271720"
  },
  {
    "text": "relatively new technology in terms of Docker at least and c groups and",
    "start": "271720",
    "end": "277000"
  },
  {
    "text": "namespaces um and it's not really clear how secure things are yet and so what",
    "start": "277000",
    "end": "282360"
  },
  {
    "text": "are the chances of an attacker that gets into a container being able to break out of that container and access other",
    "start": "282360",
    "end": "288680"
  },
  {
    "text": "containers or the host itself so you should probably move on the assumption that it's unlikely but",
    "start": "288680",
    "end": "297320"
  },
  {
    "text": "possible and poisoned images so hands up to here like who uses image from the docker Hub it's going to be practically",
    "start": "297320",
    "end": "303880"
  },
  {
    "text": "everybody right and but how do you know what's in that image well you pretty much don't you're",
    "start": "303880",
    "end": "310080"
  },
  {
    "text": "trust in a lot of things you're trust in who built the image in the case of the docker official images that's probably",
    "start": "310080",
    "end": "315120"
  },
  {
    "text": "okay but you're also trusting that nobody has tampered with it at rest and you're also trusting that it's not been",
    "start": "315120",
    "end": "320240"
  },
  {
    "text": "tampered with in transit and there are a bunch of bunch of mitigations you can put into place to",
    "start": "320240",
    "end": "327680"
  },
  {
    "text": "um deal with the Providence of I'll talk about that later but it's definitely something to be aware of and I should",
    "start": "327680",
    "end": "333919"
  },
  {
    "text": "point out all these things I'm talking about here they're not um unique to Containers they also exist in the VM",
    "start": "333919",
    "end": "340000"
  },
  {
    "text": "world but perhaps the problems are more acute with containers and that's particularly the case with secrets so if",
    "start": "340000",
    "end": "345759"
  },
  {
    "text": "you have a microservice architecture you probably have dozens possibly hundreds",
    "start": "345759",
    "end": "351360"
  },
  {
    "text": "of containers running and constantly being killed and recreated and moved and so on and the issue is how do you get",
    "start": "351360",
    "end": "358319"
  },
  {
    "text": "like your secrets things like data based passwords API tokens into them because in the old VM world you might just have",
    "start": "358319",
    "end": "365160"
  },
  {
    "text": "had two or three VMS running and you can just manually insert the secrets no way you can do that with containers because",
    "start": "365160",
    "end": "370880"
  },
  {
    "text": "you got so many things coming and going you have to have an automated solution um and to doing that securely is",
    "start": "370880",
    "end": "377120"
  },
  {
    "text": "obviously important okay so I guess this is the",
    "start": "377120",
    "end": "383000"
  },
  {
    "text": "the next bit it's just two slides on security paradigms and it's possibly the most important thing to think about so",
    "start": "383000",
    "end": "389759"
  },
  {
    "text": "the first one is this idea of defense and depth um and it's just the idea that you should not rely on any one thing for",
    "start": "389759",
    "end": "396960"
  },
  {
    "text": "security so some of you might remember like basically back in the '90s there was a lot of trust was placed into the",
    "start": "396960",
    "end": "402800"
  },
  {
    "text": "idea of firewalls uh and basically a lot of companies felt if their firewall was",
    "start": "402800",
    "end": "407919"
  },
  {
    "text": "there they were secure and the issue was Anda got past the firewall already was or perhaps already was on the inside",
    "start": "407919",
    "end": "415000"
  },
  {
    "text": "then everything was open so there's just this one layer of security and once you passed it you basically had access to",
    "start": "415000",
    "end": "420599"
  },
  {
    "text": "everything and clearly that's a bad idea you want multiple levels of security so if attack gets past one there's further",
    "start": "420599",
    "end": "427039"
  },
  {
    "text": "hurdles for them to get past before they have access to sensitive data so things might be encrypted um you might",
    "start": "427039",
    "end": "433440"
  },
  {
    "text": "monitoring things for anonymous Behavior Behavior Etc you might even have intrusion detection systems Etc it's",
    "start": "433440",
    "end": "441199"
  },
  {
    "text": "just this idea of not ring on any one layer and the analogies with a castle so as well as having a remote around the",
    "start": "441199",
    "end": "447240"
  },
  {
    "text": "castle you've uh got a drawbridge just weled draw bridge you got six stone walls but also if an an attacker gets",
    "start": "447240",
    "end": "453840"
  },
  {
    "text": "past the first line of security and gets through the main wall there still several other keeps inside that the",
    "start": "453840",
    "end": "459919"
  },
  {
    "text": "attackers will have to fight their way through before they can get to the crown jewels so just this idea of defense and",
    "start": "459919",
    "end": "465919"
  },
  {
    "text": "depth which is very close and links into the idea of least privilege and this is the idea that a process or in our case a",
    "start": "465919",
    "end": "472680"
  },
  {
    "text": "container should only have access to the data and functions data and resources are essential to its function so perhaps",
    "start": "472680",
    "end": "480680"
  },
  {
    "text": "EAS easiest example is um if my container does not need to",
    "start": "480680",
    "end": "485960"
  },
  {
    "text": "access the database um it should not be able to access the database I should not be able",
    "start": "485960",
    "end": "491159"
  },
  {
    "text": "to open a network connection to the database container for example so you're just uh reducing the Privileges of",
    "start": "491159",
    "end": "498440"
  },
  {
    "text": "containers um this is based on the very old principle of least privilege which was I think jerone saltzer back in the",
    "start": "498440",
    "end": "505680"
  },
  {
    "text": "70s but um there's also a good talk by nth m and dieo Monica who are the",
    "start": "505680",
    "end": "511199"
  },
  {
    "text": "security guys at Docker and they give a talk called least privilege microservices that you can find on YouTube if you want to hear more about",
    "start": "511199",
    "end": "519240"
  },
  {
    "text": "that okay the quick demo so I was playing with this apologies it all goes horribly",
    "start": "519240",
    "end": "524519"
  },
  {
    "text": "wrong is that big enough yeah it's too bad is it running a minute okay so I've",
    "start": "524519",
    "end": "530600"
  },
  {
    "text": "got well I'll take it down so you can see me run",
    "start": "530600",
    "end": "534160"
  },
  {
    "text": "it so I've got a very simple node",
    "start": "538440",
    "end": "544519"
  },
  {
    "text": "application that I'm going to run if I get the syntax",
    "start": "544519",
    "end": "549360"
  },
  {
    "text": "right good so all it is it's a very simple",
    "start": "555079",
    "end": "560519"
  },
  {
    "text": "application um it takes an yaml and pries it for you",
    "start": "560680",
    "end": "566959"
  },
  {
    "text": "so what it's meant to do is take something like",
    "start": "568360",
    "end": "573519"
  },
  {
    "text": "this button and it pries it highlights it Etc so very simple application um",
    "start": "577839",
    "end": "584519"
  },
  {
    "text": "built using node we've intentially made it insecure to show a couple of points",
    "start": "584519",
    "end": "591079"
  },
  {
    "text": "um interesting things we go back get back to the main",
    "start": "591920",
    "end": "596959"
  },
  {
    "text": "page but I also have this evil. yo here this is a",
    "start": "597720",
    "end": "605240"
  },
  {
    "text": "[Music]",
    "start": "611700",
    "end": "614869"
  },
  {
    "text": "problem PB copy and if we paste that in",
    "start": "625399",
    "end": "631320"
  },
  {
    "text": "and you see it looks a bit suspicious and if you can read it basically there's some JavaScript in",
    "start": "633240",
    "end": "638639"
  },
  {
    "text": "there and when we click go back it's overwritten the front page index that that uh index that HTML and",
    "start": "638639",
    "end": "646160"
  },
  {
    "text": "replace our front page um so it's a very basic hack um it's come about because of",
    "start": "646160",
    "end": "652200"
  },
  {
    "text": "a um runability in the yaml libraries that we're using so it wasn't a own vulnerability we just intentionally used",
    "start": "652200",
    "end": "658680"
  },
  {
    "text": "a runner version of yam Library which is something that could happen to you any",
    "start": "658680",
    "end": "664480"
  },
  {
    "text": "day so what should you do if you turn up in the morning and your front page looks",
    "start": "666399",
    "end": "672880"
  },
  {
    "text": "like that any suggestions turn it off I guess is the",
    "start": "672880",
    "end": "679120"
  },
  {
    "text": "the immediate suggestion um ideally in the best case scenario is you've already",
    "start": "679120",
    "end": "684480"
  },
  {
    "text": "thought about this and what you would do if this happens and you have a sort of guidelines",
    "start": "684480",
    "end": "690040"
  },
  {
    "text": "uh incident response handbook or something hands up if you have an incident response handbook come on somebody must have it",
    "start": "690040",
    "end": "698160"
  },
  {
    "text": "seriously normally it's like a few hands nobody has an instant response handbook okay well that's something for",
    "start": "698160",
    "end": "704880"
  },
  {
    "text": "you to all think about when you go back basically all it is is a set of guidelines over what to do if like a a",
    "start": "704880",
    "end": "711320"
  },
  {
    "text": "hack is discovered you know it might not be your front page looks like that but you've discovered some behavior that should not be there and you suspect",
    "start": "711320",
    "end": "717240"
  },
  {
    "text": "somebody's got access to data or machines that shouldn't um and it's just a set of guidelines telling you what",
    "start": "717240",
    "end": "723200"
  },
  {
    "text": "steps to take because the issue is if this happens it's a very high stress situation and it's easy to panic and do",
    "start": "723200",
    "end": "729000"
  },
  {
    "text": "something stupid so if you have a set of guidelines it just deris a situation you follow the guidelines and you can't go",
    "start": "729000",
    "end": "735519"
  },
  {
    "text": "wrong and you can't be blamed for anything um and what they should say",
    "start": "735519",
    "end": "740600"
  },
  {
    "text": "probably as your first step is to isolate um the compromise parts of your system so if that's just a container",
    "start": "740600",
    "end": "747120"
  },
  {
    "text": "perhaps you can just disconnect that container um but it may well be they've got access to the VM as well in which case you need to isolate the VM so first",
    "start": "747120",
    "end": "754880"
  },
  {
    "text": "things are move to establish the what the extent of the compromise is and to isolate that part of the",
    "start": "754880",
    "end": "761399"
  },
  {
    "text": "system um you can do that pretty simply um so this Docker Network",
    "start": "761399",
    "end": "767000"
  },
  {
    "text": "disconnect I get this",
    "start": "767000",
    "end": "770600"
  },
  {
    "text": "right or do I not give it a name",
    "start": "774160",
    "end": "781120"
  },
  {
    "text": "so what I'm saying here is disconnect the container hungry bar from the",
    "start": "784000",
    "end": "792519"
  },
  {
    "text": "network and hopefully I reload this can't be reached",
    "start": "792720",
    "end": "798760"
  },
  {
    "text": "so that's a very simple way of disconnecting something so the attacker doesn't have access if they already got in somehow may still have access but",
    "start": "798760",
    "end": "806199"
  },
  {
    "text": "it's just a an example",
    "start": "806199",
    "end": "811120"
  },
  {
    "text": "um but what you don't want to do is you do not want to delete that container because you need to analyze it and",
    "start": "812000",
    "end": "818880"
  },
  {
    "text": "figure out how the hack occurred because if you just um take things away and restart them what's going to happen is",
    "start": "818880",
    "end": "825079"
  },
  {
    "text": "the attack is going to immediately compromise you again so you have to be able to figure out how the hack occurred",
    "start": "825079",
    "end": "832519"
  },
  {
    "text": "um so if you just disconnect it the nice thing is you leave the processes running",
    "start": "832519",
    "end": "837759"
  },
  {
    "text": "so you can still have a look at at top of whatever and see what processes are running inside the container if you stop",
    "start": "837759",
    "end": "843480"
  },
  {
    "text": "it um it will stop the processes but it won't delete the file system so if you are if you're not sure about running",
    "start": "843480",
    "end": "849560"
  },
  {
    "text": "Docker Network disconnect you can run Docker stop",
    "start": "849560",
    "end": "857199"
  },
  {
    "text": "um I'll take a few seconds um yeah and once that runs the",
    "start": "859440",
    "end": "865160"
  },
  {
    "text": "container will be stopped so definitely nobody can access it but I'll still be able to run Docker diff on the file",
    "start": "865160",
    "end": "871240"
  },
  {
    "text": "system because the file system for that container still exists in disk so I can still run Docker",
    "start": "871240",
    "end": "876360"
  },
  {
    "text": "diff and what that will tell me is the differences in that",
    "start": "876360",
    "end": "881800"
  },
  {
    "text": "container's file system to the image it was created from so in this case it's telling me this file has changed well",
    "start": "881800",
    "end": "890079"
  },
  {
    "text": "saying created but um so it's basically shown me which",
    "start": "890079",
    "end": "895240"
  },
  {
    "text": "files have been changed in this container and so we can see that this file has been",
    "start": "895240",
    "end": "901040"
  },
  {
    "text": "half and there's a few other tools in Docker that can be useful for stuff like that um so the first thing you probably",
    "start": "903160",
    "end": "909959"
  },
  {
    "text": "want to do is try and mitigate the situation um so one very simple way we can do that is we restart the container",
    "start": "909959",
    "end": "916759"
  },
  {
    "text": "but this time going to give exactly the same command but I'm also going to pass",
    "start": "916759",
    "end": "923040"
  },
  {
    "text": "readon and what that's going to do is it's going to tell it to use a readon file system so this time",
    "start": "923040",
    "end": "930959"
  },
  {
    "text": "so this time um when we attempt to run the hack again so we should find our containers",
    "start": "931000",
    "end": "941600"
  },
  {
    "text": "back and if we paste in the ha code again we just get an",
    "start": "941600",
    "end": "946959"
  },
  {
    "text": "exception uh and the reason for that is the the JavaScript tried to write the",
    "start": "946959",
    "end": "952800"
  },
  {
    "text": "file um but couldn't because it's a readon file system so an exception was thrown which resulted in the invalid y",
    "start": "952800",
    "end": "958440"
  },
  {
    "text": "yaml um message it's not actually invalid yaml it's not a correct message it should be exception or something",
    "start": "958440",
    "end": "966040"
  },
  {
    "text": "but anyway the point is this is no longer vulnerable to the same attack",
    "start": "966040",
    "end": "972480"
  },
  {
    "text": "however it is still a vulnerable container you know the attacker is still",
    "start": "972480",
    "end": "978680"
  },
  {
    "text": "able to execute arbitrary JavaScript on our container right it's",
    "start": "978680",
    "end": "983800"
  },
  {
    "text": "just that in this case he couldn't write to file so it cut out that particular attack so the only real solution is well",
    "start": "983800",
    "end": "991199"
  },
  {
    "text": "e to turn the service off completely or to replace the rable library with a non rable version and there is actually",
    "start": "991199",
    "end": "997880"
  },
  {
    "text": "quite a nice way you can find out if your Docker images are vulnerable to attacks like these you can use something",
    "start": "997880",
    "end": "1003319"
  },
  {
    "text": "that's called an image scanner um so a few of you have uh possibly seen the docker security",
    "start": "1003319",
    "end": "1008880"
  },
  {
    "text": "scanning so if you go to the docker Hub hopefully I've",
    "start": "1008880",
    "end": "1016279"
  },
  {
    "text": "got and you look at at the official Images Oh I need to be logged in oh it's",
    "start": "1017399",
    "end": "1023720"
  },
  {
    "text": "not going to work sorry but if you look at the if you log in and you look at the official images um it'll show you a sort of",
    "start": "1023720",
    "end": "1032000"
  },
  {
    "text": "security scan of the image and it'll show you if it's got any vulnerabilities and I'll list the exact",
    "start": "1032000",
    "end": "1037280"
  },
  {
    "text": "vulnerabilities um and that's very nice but the first thing you notice is all images have vulnerabilities literally",
    "start": "1037280",
    "end": "1044600"
  },
  {
    "text": "just about all of them even like sentos Debian a bun to will have",
    "start": "1044600",
    "end": "1050240"
  },
  {
    "text": "vulnerabilities so naively you think well I'm just not going to put my image to production if",
    "start": "1050240",
    "end": "1056320"
  },
  {
    "text": "it has a vulnerability but you can't do that because it will have vulnerabilities so what you actually",
    "start": "1056320",
    "end": "1061400"
  },
  {
    "text": "have to do is analyze each of the vulnerabilities and decide whether or not affects you because a lot of the time it's going to be a piece of code",
    "start": "1061400",
    "end": "1067799"
  },
  {
    "text": "that isn't touched by your application so you're you know you're safe to run with it or there may be some mitigation",
    "start": "1067799",
    "end": "1073240"
  },
  {
    "text": "you can put into place so unfortunately it's not uh as rosy as it may seem",
    "start": "1073240",
    "end": "1079360"
  },
  {
    "text": "as well as Docker security scanning there are some other Solutions uh there's a free open source one called CLA from coreos which is quite nice and",
    "start": "1079360",
    "end": "1086919"
  },
  {
    "text": "you can take a look at um what I particularly like about it is it's API driven so you can easily embed it into",
    "start": "1086919",
    "end": "1092159"
  },
  {
    "text": "like a a continuous delivery system there's also peer from macro security twist lock and atomic scan from",
    "start": "1092159",
    "end": "1098640"
  },
  {
    "text": "Red um so clear and atomic scan I think are both free but I believe both of them",
    "start": "1098640",
    "end": "1105240"
  },
  {
    "text": "operate on a level of package list so there's two they're not all equal some operate on the level of package list and",
    "start": "1105240",
    "end": "1110720"
  },
  {
    "text": "some operate on level of binaries so Docker security scanning will actually go to the file system and take check",
    "start": "1110720",
    "end": "1116600"
  },
  {
    "text": "some of the files it finds and compare those against known vulnerabilities however CLA will just go",
    "start": "1116600",
    "end": "1122600"
  },
  {
    "text": "to Yum or apt and ask for a list of all the packages that are installed and",
    "start": "1122600",
    "end": "1127679"
  },
  {
    "text": "compare those to know abilities so the problem with using the package list approach is that you may not find well",
    "start": "1127679",
    "end": "1133919"
  },
  {
    "text": "you won't find vulnerabilities in software that you've like um say downloaded from a of the curl command",
    "start": "1133919",
    "end": "1140440"
  },
  {
    "text": "and or software that you built yourself for example but Docker security scanning",
    "start": "1140440",
    "end": "1146360"
  },
  {
    "text": "uh and peer May well find those vulnerabilities um there's also dependency Checkers so there's The Oaf",
    "start": "1146360",
    "end": "1153600"
  },
  {
    "text": "dependency Checker which will check um Library dependencies um and stuff like node security project so in the example",
    "start": "1153600",
    "end": "1161760"
  },
  {
    "text": "I just showed you there was a vulnerable node library that did the yo processing and if you run the NSP program that does",
    "start": "1161760",
    "end": "1167559"
  },
  {
    "text": "find that vulnerabilties um these are you know these date Back to Before containers so these are just",
    "start": "1167559",
    "end": "1173320"
  },
  {
    "text": "command line utilities that you can run on your",
    "start": "1173320",
    "end": "1178158"
  },
  {
    "text": "code okay uh so the next part of my talk is basically just a whole bunch of tips and techniques it's reasonably Docker",
    "start": "1180720",
    "end": "1186559"
  },
  {
    "text": "specific but can certainly be generalized a lot of it to uh microservices and orchestration",
    "start": "1186559",
    "end": "1191760"
  },
  {
    "text": "Frameworks in general possibly the first and most important one quite often I get asked uh",
    "start": "1191760",
    "end": "1198960"
  },
  {
    "text": "about the differences in security between VMS and containers uh and a lot of people claim that VMS are a lot more",
    "start": "1198960",
    "end": "1205360"
  },
  {
    "text": "secure because of the hypervisor layer um and there is an argument there but",
    "start": "1205360",
    "end": "1210640"
  },
  {
    "text": "the thing is most people are going to be using VMS and containers together right you're going to run your containers",
    "start": "1210640",
    "end": "1217039"
  },
  {
    "text": "inside VMS most likely um and you can uh leverage that a bit further if you do",
    "start": "1217039",
    "end": "1224080"
  },
  {
    "text": "things like use um put containers different security levels on different",
    "start": "1224080",
    "end": "1230480"
  },
  {
    "text": "hosts so for example if you've got a PHP front end on a JavaScript and a Java",
    "start": "1230480",
    "end": "1237200"
  },
  {
    "text": "back end doing credit card processing put all the containers that are doing a credit card processing on one group of",
    "start": "1237200",
    "end": "1242559"
  },
  {
    "text": "hosts and completely separate from your PHP front end and that way if somebody breaks into the PHP front end they've",
    "start": "1242559",
    "end": "1249360"
  },
  {
    "text": "got a there a couple of hurdles to cross before they can get to your credit card",
    "start": "1249360",
    "end": "1255360"
  },
  {
    "text": "details yeah um this also brings us onto dirty cow",
    "start": "1255360",
    "end": "1263159"
  },
  {
    "text": "who's heard about dirty cow a few of you okay so this was a pretty recent vulnerability a couple of months ago and",
    "start": "1263159",
    "end": "1269880"
  },
  {
    "text": "it's found in a Linux kernel and basically it allows privilege escalation due to a race condition uh when right",
    "start": "1269880",
    "end": "1276919"
  },
  {
    "text": "into a file I think uh interestingly though it can be used to break out of containers and even if you have D Das we",
    "start": "1276919",
    "end": "1283520"
  },
  {
    "text": "only set you can still write to the file system which is annoying to say the least um",
    "start": "1283520",
    "end": "1289200"
  },
  {
    "text": "um so the only way to mitigate this is to run a new kernel so if you've not",
    "start": "1289200",
    "end": "1296520"
  },
  {
    "text": "updated your kernel you probably are runable to this attack so you can figure",
    "start": "1296520",
    "end": "1301760"
  },
  {
    "text": "out runable running this you can actually try it my laptop I suspect I no",
    "start": "1301760",
    "end": "1306799"
  },
  {
    "text": "I just updated the kernel so I think this should be",
    "start": "1306799",
    "end": "1310799"
  },
  {
    "text": "safe yeah but you can run that and I like to say you are safe or you are vulnerable",
    "start": "1312520",
    "end": "1320240"
  },
  {
    "text": "but the point is this was basically a complete own and uh it it is a very",
    "start": "1320240",
    "end": "1325840"
  },
  {
    "text": "worrying attack and uh kind of proves a point that you may need to consider VMS to contain your containers and defend",
    "start": "1325840",
    "end": "1332039"
  },
  {
    "text": "against things like this if you want to read more about it there's a couple of sites",
    "start": "1332039",
    "end": "1337360"
  },
  {
    "text": "there um similar to segregating by host you can also segate by Network and I'm",
    "start": "1338840",
    "end": "1344159"
  },
  {
    "text": "talking about like The Logical networks not the hardware level but the sort of Docker Network create level so what you",
    "start": "1344159",
    "end": "1350039"
  },
  {
    "text": "can do is create different um networks with different areas of your system so your front end will exist in one network",
    "start": "1350039",
    "end": "1356679"
  },
  {
    "text": "and your back end or another Network and only like the the API that goes between the front end and the back end will sit",
    "start": "1356679",
    "end": "1363159"
  },
  {
    "text": "in both networks and that way your frontend containers will not be able to talk to your database containers for",
    "start": "1363159",
    "end": "1368440"
  },
  {
    "text": "example they can only talk to the API that Bridges the two networks and it's pretty simple to do",
    "start": "1368440",
    "end": "1373840"
  },
  {
    "text": "with stuff like Docker Network create front endend",
    "start": "1373840",
    "end": "1379679"
  },
  {
    "text": "um Docker privileges equal root privileges if you give somebody access to Docker you have given them root",
    "start": "1379679",
    "end": "1386360"
  },
  {
    "text": "access to that machine um you probably already realized that you can do Docker run- V amount whatever files you like",
    "start": "1386360",
    "end": "1393679"
  },
  {
    "text": "but if you're a bit sneak here I mean this is just interesting it's not really an exploit because you just have to",
    "start": "1393679",
    "end": "1399360"
  },
  {
    "text": "accept that if you run Docker you have root access but if you run this piece of",
    "start": "1399360",
    "end": "1405919"
  },
  {
    "text": "code so I'm currently",
    "start": "1405919",
    "end": "1410440"
  },
  {
    "text": "my user if I run that code what it'll do is it'll Mount the current",
    "start": "1411159",
    "end": "1417000"
  },
  {
    "text": "directory with this Dash this- V command so that Ms the",
    "start": "1417000",
    "end": "1422600"
  },
  {
    "text": "current directory as SL data and then runs Debian container um copies uh",
    "start": "1422600",
    "end": "1430640"
  },
  {
    "text": "/bin executed Builder SL data sets it to be owned by root and then sets a set uid",
    "start": "1430640",
    "end": "1436720"
  },
  {
    "text": "bit I'll talk a little bit more about set ID later but basically what that results in it",
    "start": "1436720",
    "end": "1442960"
  },
  {
    "text": "saysh execut Bild in my current directory if I run",
    "start": "1442960",
    "end": "1448960"
  },
  {
    "text": "that and I can spell and then root on my host so this",
    "start": "1449880",
    "end": "1457400"
  },
  {
    "text": "isn't in the container this is on my host I only got a root Trail on my host just by copying an executable out of the container so I'm only making the point",
    "start": "1457400",
    "end": "1464480"
  },
  {
    "text": "that if you give somebody Docker privileges they have rout access to your",
    "start": "1464480",
    "end": "1470360"
  },
  {
    "text": "course uh usern name spacing uh by default you know you don't get usern",
    "start": "1473399",
    "end": "1478480"
  },
  {
    "text": "name spacing um yeah so just to explain what Nam spacing is it's just the idea inside",
    "start": "1478480",
    "end": "1484760"
  },
  {
    "text": "a container you get a different view of things so when you run a container you get your own file system that's separate",
    "start": "1484760",
    "end": "1490679"
  },
  {
    "text": "to the file system on the host you get your own um IP address so you get your own network stack that's separate to",
    "start": "1490679",
    "end": "1496480"
  },
  {
    "text": "your host Network stack and you also get your own view of processes but you do not get your own view of users or more",
    "start": "1496480",
    "end": "1503080"
  },
  {
    "text": "accurately uids because that's at the current level what that means is if you're",
    "start": "1503080",
    "end": "1509279"
  },
  {
    "text": "rooting a container that's the same user as root on the host and the issue there",
    "start": "1509279",
    "end": "1515159"
  },
  {
    "text": "is if some a container breakout occurs and the roote in the container they will be root on the",
    "start": "1515159",
    "end": "1520960"
  },
  {
    "text": "host um basically the most sensible thing is just not to run your applications but to run in containers as",
    "start": "1520960",
    "end": "1527240"
  },
  {
    "text": "route you you wouldn't do it in a VM just don't do it in a container just set a user and run your application as a",
    "start": "1527240",
    "end": "1532520"
  },
  {
    "text": "user and that way if they break out there'll be an unprivileged user on the host also quite simply if they break",
    "start": "1532520",
    "end": "1539679"
  },
  {
    "text": "into the Container they'll have less privileges inside the container there is Docker did bring out",
    "start": "1539679",
    "end": "1546279"
  },
  {
    "text": "username spacing and it started in 110 and basically you can turn this on in the Damon and what it will do is",
    "start": "1546279",
    "end": "1552799"
  },
  {
    "text": "it'll map um users inside a container to high numbered users on the host so route and",
    "start": "1552799",
    "end": "1560080"
  },
  {
    "text": "the container will now be like user ID 5,000 on the host um however there are a few gotas",
    "start": "1560080",
    "end": "1566440"
  },
  {
    "text": "the first thing is you set it in the Damon level so you set it for all containers um and that's basically to do",
    "start": "1566440",
    "end": "1574080"
  },
  {
    "text": "with the file permissions so when you do a Docker pool it has to set the file permissions for your mapped",
    "start": "1574080",
    "end": "1582520"
  },
  {
    "text": "user um there's also a couple other things you're going to run into problems with volumes fairly obviously uh",
    "start": "1582520",
    "end": "1588760"
  },
  {
    "text": "and plug also volume plugins may not work with username spacing um you can't",
    "start": "1588760",
    "end": "1594000"
  },
  {
    "text": "use-- pidal to host or-- netal to host if you're using username spacing um and",
    "start": "1594000",
    "end": "1600240"
  },
  {
    "text": "also I think you might have fixed this but you can't didn't be able to you weren't certainly it used to be the case",
    "start": "1600240",
    "end": "1606399"
  },
  {
    "text": "that you couldn't use read only file systems which was annoying uh and finally there are some restrictions on certain operations so",
    "start": "1606399",
    "end": "1613440"
  },
  {
    "text": "you can't run uh you can't create device files for example if you turn on usern name space",
    "start": "1613440",
    "end": "1620240"
  },
  {
    "text": "um however if you use user name space or not um I do suggest you set a user in your Docker file and uh run your",
    "start": "1620399",
    "end": "1627440"
  },
  {
    "text": "applications as a user it's pretty simple you just need a bit of code like this simple units command to create a",
    "start": "1627440",
    "end": "1633600"
  },
  {
    "text": "user and then you can use the docker file command user to switch to that user and that will take effect for um all",
    "start": "1633600",
    "end": "1640240"
  },
  {
    "text": "following Docker file statements and also when you start the container if you need to do something at runtime in your",
    "start": "1640240",
    "end": "1645840"
  },
  {
    "text": "container as root user for example set ownership permissions what I suggest is you use a tool like um gosu or sudu so",
    "start": "1645840",
    "end": "1653520"
  },
  {
    "text": "um you'll start up as route do whatever you need to do as route and then change to an unprivileged user using something",
    "start": "1653520",
    "end": "1659200"
  },
  {
    "text": "like sudu or gosu um be careful when deleting data in",
    "start": "1659200",
    "end": "1666399"
  },
  {
    "text": "Docker files",
    "start": "1666399",
    "end": "1670960"
  },
  {
    "text": "so um you can't well you can do this but it doesn't work the way you think it works so here we've got an example where",
    "start": "1672960",
    "end": "1680000"
  },
  {
    "text": "somebody has uh curled some source code and they've untired it and made it and",
    "start": "1680000",
    "end": "1685320"
  },
  {
    "text": "then they try to tid it up after themselves by removing the tire ball um but there's an issue here because this",
    "start": "1685320",
    "end": "1691399"
  },
  {
    "text": "won't actually save you any disk space each Docker file command results in a",
    "start": "1691399",
    "end": "1696519"
  },
  {
    "text": "image layer um and so this file here has already been written to this image layer",
    "start": "1696519",
    "end": "1702039"
  },
  {
    "text": "up here and you can't get rid of it okay you can hide it in lower levels but you're not saving any dis",
    "start": "1702039",
    "end": "1707120"
  },
  {
    "text": "space and you can still get to it if you know what you're doing um so what you can do is delete",
    "start": "1707120",
    "end": "1715840"
  },
  {
    "text": "the file in the same layer or same instruction in which you create it so if I just blump all those commands together",
    "start": "1715840",
    "end": "1723000"
  },
  {
    "text": "that will work and that file will not exist inside the image um the reason this is important",
    "start": "1723000",
    "end": "1729200"
  },
  {
    "text": "for security is because I actually answered a stack Overflow question where a user had done this they' copied in",
    "start": "1729200",
    "end": "1735240"
  },
  {
    "text": "their GitHub key um they downloaded the private repository they built that",
    "start": "1735240",
    "end": "1741039"
  },
  {
    "text": "repository and then they'd removed the key and they'd uploaded this image to Docker Hub um so that basically meant",
    "start": "1741039",
    "end": "1748000"
  },
  {
    "text": "they'd um given the whole world access to their GitHub key they hadn't realized it but they had um yeah so do not do",
    "start": "1748000",
    "end": "1755919"
  },
  {
    "text": "that do not think you can like delete credentials they still exist in the",
    "start": "1755919",
    "end": "1761518"
  },
  {
    "text": "image uh we've seen this already but very use F uh command to",
    "start": "1762039",
    "end": "1769600"
  },
  {
    "text": "easily increase Security is to set the container file system readon just pass-- readon and you can't write to the file",
    "start": "1769600",
    "end": "1775880"
  },
  {
    "text": "system which cuts out quite a few taxs um people won't be able to change your front page you won't be able to install",
    "start": "1775880",
    "end": "1782399"
  },
  {
    "text": "uh back doors and scripts Etc um only problem is you might find",
    "start": "1782399",
    "end": "1790799"
  },
  {
    "text": "that most applications will want to write to one or two files what you can do is set like a you know a temporary",
    "start": "1790799",
    "end": "1796519"
  },
  {
    "text": "directory to be a volume on the host so or you can use like temp FS so you can sort of poke holes in the video only",
    "start": "1796519",
    "end": "1802720"
  },
  {
    "text": "file system using volumes if you need to uh very similarly you can set volumes",
    "start": "1802720",
    "end": "1808120"
  },
  {
    "text": "we read only um capabilities so the link kernel",
    "start": "1808120",
    "end": "1814760"
  },
  {
    "text": "defines a whole bunch of capabilities does people aware of capabilities some of you so basically",
    "start": "1814760",
    "end": "1821640"
  },
  {
    "text": "capabilities are sort of groups of system of Kernel calls you can make so",
    "start": "1821640",
    "end": "1828559"
  },
  {
    "text": "they govern like whether or not you can do things like uh change your ownership and files and so on it used to be we had",
    "start": "1828559",
    "end": "1834360"
  },
  {
    "text": "only root or non rout you're either a user or you a privileged user and they",
    "start": "1834360",
    "end": "1839480"
  },
  {
    "text": "tried to break it up a bit so you could have more fine grain Privileges and that's where capabilities came in um by",
    "start": "1839480",
    "end": "1845720"
  },
  {
    "text": "default if you're in a dock container it gets most the a large set of",
    "start": "1845720",
    "end": "1851039"
  },
  {
    "text": "privileges but you can drop specific privileges so here we've uh dropped the",
    "start": "1851039",
    "end": "1856159"
  },
  {
    "text": "capability to set the set u ID bit um but you can also drop all",
    "start": "1856159",
    "end": "1862720"
  },
  {
    "text": "capabilities and just add back the ones you need and the reason that's good for security if a a Tacker breaks in um if",
    "start": "1862720",
    "end": "1870559"
  },
  {
    "text": "you've reduce the number of Kernel calls they can make there's going to be less exploits ways they can exploit the the",
    "start": "1870559",
    "end": "1877840"
  },
  {
    "text": "kernel uh CPU shares so if you're worried about people being able to this",
    "start": "1878720",
    "end": "1885360"
  },
  {
    "text": "is to add concern that an attacker May run a denial service by grabbing all the CPU and the",
    "start": "1885360",
    "end": "1891440"
  },
  {
    "text": "host however you probably don't need to worry about this because by default all containers um will get an equal share of",
    "start": "1891440",
    "end": "1900240"
  },
  {
    "text": "CPU in the event of contention so basically if you use this",
    "start": "1900240",
    "end": "1905639"
  },
  {
    "text": "relative weight in so here we got the CPU Shar argument each container gets a default weight in of 1024 so if you do",
    "start": "1905639",
    "end": "1912720"
  },
  {
    "text": "use CPU CPU shares you have to be aware of that so what happens in this case",
    "start": "1912720",
    "end": "1919039"
  },
  {
    "text": "um we've run one image that one gets a default weighting of 1024 then we've run two other images that get a waiting of",
    "start": "1919039",
    "end": "1925679"
  },
  {
    "text": "512 what will happen in the event of of contention is this first image will be able to use up to half the CPU and these",
    "start": "1925679",
    "end": "1932760"
  },
  {
    "text": "two will only get up to a quarter each so it perhaps isn't entirely intuitive how it works you need to be",
    "start": "1932760",
    "end": "1939039"
  },
  {
    "text": "aware of that uh and by default um you will get an equal share so basically don't touch that unless you know what",
    "start": "1939039",
    "end": "1945120"
  },
  {
    "text": "you're doing and there's also the completely Fair schedu can use which might be easier however much more important is",
    "start": "1945120",
    "end": "1952039"
  },
  {
    "text": "memory limits cuz a container can grab as much memory as it likes um and that's you know very easy",
    "start": "1952039",
    "end": "1958320"
  },
  {
    "text": "way to starve out other containers or if you have a memory leak your container may just grow and starve it as the",
    "start": "1958320",
    "end": "1965600"
  },
  {
    "text": "containers so you can quite easily just pass DM and set the maximum amount of memory it can use do be aware if you",
    "start": "1965600",
    "end": "1972960"
  },
  {
    "text": "have swap turned on it will get an equal amount of swap so this container has access to 52 megabytes of memory and 512",
    "start": "1972960",
    "end": "1979840"
  },
  {
    "text": "megab of swap um you can set swap separately nowadays new version of",
    "start": "1979840",
    "end": "1986440"
  },
  {
    "text": "Docker you can also set kernel memory so that's like your your stock pages and stuff and that's interesting because",
    "start": "1986440",
    "end": "1994120"
  },
  {
    "text": "that's one way to print a fork bomb if you set the maximum am of um kernel memory and somebody runs a fork bomb",
    "start": "1994120",
    "end": "2000279"
  },
  {
    "text": "inside a container which you know basically try to use up as many processes as it can to bring down the",
    "start": "2000279",
    "end": "2005639"
  },
  {
    "text": "host um but if you set theur memory uh it just run out of K memory",
    "start": "2005639",
    "end": "2010720"
  },
  {
    "text": "and stop the container rather than bring down the host um set uid and set G",
    "start": "2010720",
    "end": "2018440"
  },
  {
    "text": "binaries um so this goes back to the to the exploit I showed you before where we um created a set binary that give me",
    "start": "2018440",
    "end": "2024760"
  },
  {
    "text": "route in the host um and these are just binaries that run with elevated privileges so you're",
    "start": "2024760",
    "end": "2030559"
  },
  {
    "text": "normal user but if you run this binary that runs as the root user um and",
    "start": "2030559",
    "end": "2036200"
  },
  {
    "text": "there's a whole bunch of binaries like this um if you run this fine command in a",
    "start": "2036200",
    "end": "2042760"
  },
  {
    "text": "Debian container you're going to get stuff like this like CH which is I guess",
    "start": "2042760",
    "end": "2048079"
  },
  {
    "text": "most people have used but there's also stuff like chfn does anybody know what chfn does hands up if you know what chfn",
    "start": "2048079",
    "end": "2055919"
  },
  {
    "text": "does anyone okay so I mean this is an",
    "start": "2055919",
    "end": "2062480"
  },
  {
    "text": "application that's in your containers now and if there's a vulnerability in it it could be exploited by an attacker to",
    "start": "2062480",
    "end": "2067800"
  },
  {
    "text": "gain root privileges CU it runs with a set uad bit but nobody knows what it does so it shouldn't really be there CU",
    "start": "2067800",
    "end": "2073480"
  },
  {
    "text": "you're not using it um what it actually does if you're interested is it's change full name so",
    "start": "2073480",
    "end": "2078919"
  },
  {
    "text": "if anybody used finger it's like changes the data in that but there's I mean there's",
    "start": "2078919",
    "end": "2084240"
  },
  {
    "text": "absolutely no reason for it to be there okay it's a very old Unix utility you're very unlikely to find an exploit in it",
    "start": "2084240",
    "end": "2090040"
  },
  {
    "text": "but all the same you don't need it so why is it there um one thing you can do if you're",
    "start": "2090040",
    "end": "2095760"
  },
  {
    "text": "interested is quite easily turn off the set u ID bit so if you just do CH mod",
    "start": "2095760",
    "end": "2102280"
  },
  {
    "text": "a-s then that removes the set u ID bit so that that binary will not be able to",
    "start": "2102280",
    "end": "2107599"
  },
  {
    "text": "run as root yeah and you use this find command that'll find all the binaries and remove",
    "start": "2107599",
    "end": "2114200"
  },
  {
    "text": "the set ID bit and I bet your application will still run fine if you do",
    "start": "2114200",
    "end": "2120359"
  },
  {
    "text": "that yeah minimal images so this is quite a good one as well if you're probably",
    "start": "2120359",
    "end": "2127079"
  },
  {
    "text": "aware there's stuff like Debian container and the bunter container uh a bunter is probably about 80 megabytes",
    "start": "2127079",
    "end": "2132520"
  },
  {
    "text": "and the Alpine container is maybe about four or 5 megabytes so there's like 70 odd megabytes there of software that you",
    "start": "2132520",
    "end": "2140760"
  },
  {
    "text": "may not need and that software can be potentially exploited by an attacker so",
    "start": "2140760",
    "end": "2146000"
  },
  {
    "text": "if you use less software you have less attack surface",
    "start": "2146000",
    "end": "2152880"
  },
  {
    "text": "um yeah uh you can actually go even further you could you don't need Alpine Linux in some cases if you're using go",
    "start": "2152880",
    "end": "2159079"
  },
  {
    "text": "or C or something you may be able to compile a static binary and just use that um and that's really nice but the",
    "start": "2159079",
    "end": "2166319"
  },
  {
    "text": "problem is you will also lose all your debugging tools so if you've run a static binary in a container you won't",
    "start": "2166319",
    "end": "2171960"
  },
  {
    "text": "even be able to get a shell inside that container to debug things when things go wrong so there is a trade-off to be made",
    "start": "2171960",
    "end": "2177599"
  },
  {
    "text": "there um if you're interested in doing that and go you can have a look at that blog um post which shows you how to",
    "start": "2177599",
    "end": "2183560"
  },
  {
    "text": "create a static binary inside a go container um security",
    "start": "2183560",
    "end": "2190720"
  },
  {
    "text": "modules am I doing for time oh sorry I'll speed up a little bit",
    "start": "2191000",
    "end": "2198040"
  },
  {
    "text": "um so there are security modules um you're using red Center o there's SE",
    "start": "2198040",
    "end": "2203160"
  },
  {
    "text": "Linux which is originally developed by um NSA it's policy based mandatory access",
    "start": "2203160",
    "end": "2208640"
  },
  {
    "text": "control it is quite nice and quite powerful but it's very annoying to use",
    "start": "2208640",
    "end": "2213839"
  },
  {
    "text": "pain in the ass is the acronym there um I tried to Def find my own policy I",
    "start": "2213839",
    "end": "2220119"
  },
  {
    "text": "couldn't do it um it will limit the volumes you can use and the first thing",
    "start": "2220119",
    "end": "2226359"
  },
  {
    "text": "you'll notice if you turn it on and you try to run a container is that volumes don't work and the reason is that you",
    "start": "2226359",
    "end": "2232359"
  },
  {
    "text": "have to apply types and labels to everything so basically you have to use",
    "start": "2232359",
    "end": "2238280"
  },
  {
    "text": "the CHC command to apply the correct label to my data volume here or there is",
    "start": "2238280",
    "end": "2244680"
  },
  {
    "text": "also an easier way you can boot P colon Zed and that'll do do it for you but that's what it does in the",
    "start": "2244680",
    "end": "2250040"
  },
  {
    "text": "background app armor is used by De buntu if you're using de buntu app armor will be on by",
    "start": "2250040",
    "end": "2255760"
  },
  {
    "text": "default so it's a little bit simpler but it's not as fine grain and as powerful as SE",
    "start": "2255760",
    "end": "2261440"
  },
  {
    "text": "Linux um it's also a bit of annoying but there is stuff like Bane that can help you create nap armor",
    "start": "2261440",
    "end": "2268680"
  },
  {
    "text": "profiles um Harden kernels so there's also stuff like um gr Security provide a",
    "start": "2268680",
    "end": "2275520"
  },
  {
    "text": "Harden kernel and you can turn on uh and it'll do stuff like check memory",
    "start": "2275520",
    "end": "2282040"
  },
  {
    "text": "uh and Mark memory as being e data or controls so you can't write to R bits of memory and it'll start things up in",
    "start": "2282040",
    "end": "2287480"
  },
  {
    "text": "random places and they're all very good security features but they have a small",
    "start": "2287480",
    "end": "2294240"
  },
  {
    "text": "effect on performance and for that reason they've never made it into the official Linux kernel um also you'll",
    "start": "2294240",
    "end": "2301040"
  },
  {
    "text": "probably find that'll lag slightly behind the latest version of the the L kernel but certainly something to look",
    "start": "2301040",
    "end": "2306680"
  },
  {
    "text": "at if you're interested uh verify your images this coming back",
    "start": "2306680",
    "end": "2311720"
  },
  {
    "text": "to my point earlier about poisoned images you want to know what you've running you want to know where it came from if you're using a Docker Hub um",
    "start": "2311720",
    "end": "2320000"
  },
  {
    "text": "official images are probably fine automated build so you know you get your automated images that are built on",
    "start": "2320000",
    "end": "2326400"
  },
  {
    "text": "the docker Hub um those are okay I would suggest",
    "start": "2326400",
    "end": "2331720"
  },
  {
    "text": "you go and look at the source code they built from to make sure you're happy with them but at least you can do that you can check the docker file and so on",
    "start": "2331720",
    "end": "2337680"
  },
  {
    "text": "um there's also a bunch of images in the docker Hub that just been pushed uh and don't have any Associated Docker file or",
    "start": "2337680",
    "end": "2343240"
  },
  {
    "text": "source code obviously I'd be very um suspected about using that because you have no idea what's in it if you are",
    "start": "2343240",
    "end": "2349000"
  },
  {
    "text": "worried um and you have access to this Source you can of course just build a Docker images yourself Docker content",
    "start": "2349000",
    "end": "2355880"
  },
  {
    "text": "trust so if you do export Docker content trust equal to one you turn on Docker",
    "start": "2355880",
    "end": "2360960"
  },
  {
    "text": "content trust uh and what that will do is it'll set up keys and it's a little bit like um you know when you sech into",
    "start": "2360960",
    "end": "2367800"
  },
  {
    "text": "a new server and it shows you that fingerprint and says do you still want to connect uh and you have to type yes",
    "start": "2367800",
    "end": "2373480"
  },
  {
    "text": "before you can connect it's the idea of trusting first use and then every subsequent time you connect it just",
    "start": "2373480",
    "end": "2378720"
  },
  {
    "text": "connects immediately um dock content trust is the same so the first time you pull an image it'll grab the key but on",
    "start": "2378720",
    "end": "2386200"
  },
  {
    "text": "subsequent requests um to the same repository it will already have the key it was signed with and we'll just",
    "start": "2386200",
    "end": "2392280"
  },
  {
    "text": "download it so similar trust and first use concept there's also secure digest",
    "start": "2392280",
    "end": "2398520"
  },
  {
    "text": "so if you create an image and push it to HUB it'll give you a little sha hash well not a little sha has a long sha",
    "start": "2398520",
    "end": "2404119"
  },
  {
    "text": "hash you can use that to push and pull the advantage of that is that that sh hash is a hash of the content image so",
    "start": "2404119",
    "end": "2411599"
  },
  {
    "text": "even if that IM you then store that image on a a VM that's been compromised by",
    "start": "2411599",
    "end": "2418280"
  },
  {
    "text": "someone they will be unable to modify that image without you tell them because if you P pull by that sha hash again it",
    "start": "2418280",
    "end": "2424839"
  },
  {
    "text": "will verify the contents of the image against the hash the problem with using digests is it's a",
    "start": "2424839",
    "end": "2430240"
  },
  {
    "text": "little bit awkward to get the digest in the first place and then you've got to get that digest onto your nodes",
    "start": "2430240",
    "end": "2437400"
  },
  {
    "text": "Etc um auditing so this comes back to idea of mutable",
    "start": "2437400",
    "end": "2442480"
  },
  {
    "text": "infrastructure um you want audit your images so if you audit a single image",
    "start": "2442480",
    "end": "2447839"
  },
  {
    "text": "that may correspond to 100 running containers um and that's a bit different to the VM",
    "start": "2447839",
    "end": "2454359"
  },
  {
    "text": "world where VMS tended to because he didn't have a well if youve run a golden image that may work but um with VMS you",
    "start": "2454359",
    "end": "2461160"
  },
  {
    "text": "tend to have to audit each one separately with containers at least you can audit just the image offline uh and",
    "start": "2461160",
    "end": "2467599"
  },
  {
    "text": "then check that that image hasn't the containers run that image haven't diverged from the image uh again coming",
    "start": "2467599",
    "end": "2473640"
  },
  {
    "text": "back to scanning tools um scy loock twister dock um dock security",
    "start": "2473640",
    "end": "2479680"
  },
  {
    "text": "scanning finally if you still have time you okay yeah uh secrets so I've got an image of",
    "start": "2479680",
    "end": "2488079"
  },
  {
    "text": "a cat here this cat was a cat in London and he had a magnetic collar so",
    "start": "2488079",
    "end": "2494119"
  },
  {
    "text": "what he would do was he'd go find his neighbor's Gardens and he would find shiny objects and they would get stuck",
    "start": "2494119",
    "end": "2499240"
  },
  {
    "text": "to his collar and he would take them back home and at first the owner felt sorry for him but it quickly transpired",
    "start": "2499240",
    "end": "2504880"
  },
  {
    "text": "that he was actually looking for these things and taking them back and what he was Finding was like the neighbors had hidden keys underneath plat pots and so",
    "start": "2504880",
    "end": "2512200"
  },
  {
    "text": "so he was stealing like neighbors um car keys and back door keys and so",
    "start": "2512200",
    "end": "2518280"
  },
  {
    "text": "anyway so how do you get your secrets into your containers um so the first",
    "start": "2518280",
    "end": "2524119"
  },
  {
    "text": "idea is to bake it into the image right you can put it into your Docker file like that guy's GitHub key hopefully",
    "start": "2524119",
    "end": "2530280"
  },
  {
    "text": "you're all immediately thinking that's a bad idea and it is cu anybody that has access to your image then has access to",
    "start": "2530280",
    "end": "2537400"
  },
  {
    "text": "your secrets so it's just not the way to do things um environment variables this",
    "start": "2537400",
    "end": "2544440"
  },
  {
    "text": "one's quite popular uh so a lot of people will pass in Secrets by doing things like uh setting environment",
    "start": "2544440",
    "end": "2550559"
  },
  {
    "text": "variables with your your secret and this works um and it's the way that 12 Factor",
    "start": "2550559",
    "end": "2556599"
  },
  {
    "text": "apps tells you to do things if you've heard of 12 Factor apps um and it's not",
    "start": "2556599",
    "end": "2562040"
  },
  {
    "text": "bad but it's not great either and my problem is just that it can be seen in too many places",
    "start": "2562040",
    "end": "2568920"
  },
  {
    "text": "so you know you can if you do Docker inspect you can see the environment variables if you just",
    "start": "2568920",
    "end": "2574720"
  },
  {
    "text": "run uh it's no longer in link containers you know and you dump the environment",
    "start": "2574720",
    "end": "2580520"
  },
  {
    "text": "you get the environment variable so say you're getting support on your database",
    "start": "2580520",
    "end": "2585760"
  },
  {
    "text": "or something that youve run inside a container and the guy asks for a dump of the environment and you send him to that",
    "start": "2585760",
    "end": "2591000"
  },
  {
    "text": "suddenly you send all your secrets as well so it's just too visible in environment variables for my",
    "start": "2591000",
    "end": "2596800"
  },
  {
    "text": "taste yeah to get included in reports um so the next thing you can try",
    "start": "2596800",
    "end": "2603440"
  },
  {
    "text": "doing and I would suggest this is probably the way you'll do it in the short term term it's just to put your secrets into files and mount",
    "start": "2603440",
    "end": "2610440"
  },
  {
    "text": "them um that works but it is a bit icky my main problem with putting secrets",
    "start": "2610440",
    "end": "2616760"
  },
  {
    "text": "into files that get mounted is that files tend to end up checked into to Version Control and yeah you don't want",
    "start": "2616760",
    "end": "2622760"
  },
  {
    "text": "your secrets inversion control uh in the future and hopefully",
    "start": "2622760",
    "end": "2630319"
  },
  {
    "text": "near future the real way of doing this is going to be with uh secure key value stores so if you're using Docker swarm",
    "start": "2630319",
    "end": "2638480"
  },
  {
    "text": "uh you'll be glad to know that in Docker 1.3 they've actually got a solution for secrets and you can look it up",
    "start": "2638480",
    "end": "2645480"
  },
  {
    "text": "here and so basically you'll be able to do things like Docker secret create",
    "start": "2645480",
    "end": "2650760"
  },
  {
    "text": "um and when you use that it will place a file inside your container in a temp FS",
    "start": "2650760",
    "end": "2656720"
  },
  {
    "text": "volume with a secrets you have access to so that's really that will be quite a nice solution when it um lands it will",
    "start": "2656720",
    "end": "2664160"
  },
  {
    "text": "only be available in swarm mode though um you're using kubernetes there is",
    "start": "2664160",
    "end": "2670160"
  },
  {
    "text": "kubernetes secrets that exist at the minute however that stores everything in ETD un encrypted so do be aware of that",
    "start": "2670160",
    "end": "2676000"
  },
  {
    "text": "if you're using kubernetes currently um there's also Vault and a lot of people are working on uh",
    "start": "2676000",
    "end": "2683119"
  },
  {
    "text": "integrating Vault with various orchestration systems such as msos and kubernetes and swarm vault is secure key",
    "start": "2683119",
    "end": "2690960"
  },
  {
    "text": "valy store uh and it's quite nice because it has things like Lis on Secrets it makes sure everything's",
    "start": "2690960",
    "end": "2696240"
  },
  {
    "text": "stored encrypted properly and has a whole bunch of features okay so that's pretty much what",
    "start": "2696240",
    "end": "2702880"
  },
  {
    "text": "I want to go through um the main point I want to make though is if you're using containers and",
    "start": "2702880",
    "end": "2708280"
  },
  {
    "text": "you're using VMS all you're doing is adding a level of isolation you're not getting less secure by using",
    "start": "2708280",
    "end": "2714000"
  },
  {
    "text": "containers they just provide you with another layer of um isolation and an extra set of tools for restricting",
    "start": "2714000",
    "end": "2720240"
  },
  {
    "text": "attackers Etc um if you are concerned about um container security do use them with VMS in the ways I talked to about",
    "start": "2720240",
    "end": "2727720"
  },
  {
    "text": "uh and also remember the principles of defense and depth and least privilege okay thank",
    "start": "2727720",
    "end": "2735119"
  },
  {
    "text": "you so thank you Adrian uh we have time for a few",
    "start": "2741200",
    "end": "2746760"
  },
  {
    "text": "questions if we have anyone in the room no must have been a very thorough",
    "start": "2746760",
    "end": "2755960"
  },
  {
    "text": "there was one one",
    "start": "2755960",
    "end": "2758920"
  },
  {
    "text": "hey great talk very important topic I guess and my question is is there a solution for appearing new",
    "start": "2765200",
    "end": "2773040"
  },
  {
    "text": "vulnerabilities for existing Docker containers you use in production yeah that's a very good point so when I was",
    "start": "2773040",
    "end": "2779680"
  },
  {
    "text": "making that point about security scanning the first thing you think about is like um scanning your images before",
    "start": "2779680",
    "end": "2786079"
  },
  {
    "text": "they go to production but obviously as new vulnerabilities turn up then uh your containers that run",
    "start": "2786079",
    "end": "2791880"
  },
  {
    "text": "in production at the minute will become vulnerable but if you're using something like Docker security scanning um it it",
    "start": "2791880",
    "end": "2800079"
  },
  {
    "text": "maintains like a database of of your container so it will tell you if a container becomes rable and it won't",
    "start": "2800079",
    "end": "2806400"
  },
  {
    "text": "need to scan it again because it already has indexed all the files if you like so they have thought about that to some",
    "start": "2806400",
    "end": "2811520"
  },
  {
    "text": "extent but yeah it's just something to think about I don't does that answer your question",
    "start": "2811520",
    "end": "2818599"
  },
  {
    "text": "yeah okay but yeah the point is you do also have to maintain you do have to keep scanning the images in production",
    "start": "2818599",
    "end": "2824599"
  },
  {
    "text": "as well as your offline images so one more",
    "start": "2824599",
    "end": "2832520"
  },
  {
    "text": "question is uh hi great talk uh is there some system that you can recommend for",
    "start": "2835800",
    "end": "2843040"
  },
  {
    "text": "uh automatically triggering uh Downstream builds for instance you are",
    "start": "2843040",
    "end": "2848359"
  },
  {
    "text": "basing your images on I don't know sento Ubuntu or something and you might have",
    "start": "2848359",
    "end": "2854960"
  },
  {
    "text": "several images like you have sent with your company's tools and then on top of",
    "start": "2854960",
    "end": "2861319"
  },
  {
    "text": "that an image of your application yeah right but when Santos gets updated you",
    "start": "2861319",
    "end": "2866760"
  },
  {
    "text": "need to update all the downstream builds and the their dependencies and so on so",
    "start": "2866760",
    "end": "2872000"
  },
  {
    "text": "is there some nice tool that you can recommend for that uh yeah so if you",
    "start": "2872000",
    "end": "2877079"
  },
  {
    "text": "look at things like Docker Hub um you can actually turn that on so at the minute you can set your images to rebuild automatically if a and you tell",
    "start": "2877079",
    "end": "2884280"
  },
  {
    "text": "what parent image you're interested in and if that image changes it will trigger a rebuild uh and I think there's",
    "start": "2884280",
    "end": "2889880"
  },
  {
    "text": "also hooks so you can set up your system whereby you get notified when an image changes and then you'll have to set up",
    "start": "2889880",
    "end": "2895240"
  },
  {
    "text": "your own cicd system to trigger the rebuild but yeah good question and you can do it but um I'm not sure there's",
    "start": "2895240",
    "end": "2901280"
  },
  {
    "text": "any great tools you've got kind of got to do it a little bit yourself with web hooks",
    "start": "2901280",
    "end": "2908440"
  },
  {
    "text": "okay so any more questions I think we have time for one more if nope okay thank you",
    "start": "2908440",
    "end": "2917100"
  },
  {
    "text": "[Applause]",
    "start": "2917100",
    "end": "2921280"
  },
  {
    "text": "aan",
    "start": "2922319",
    "end": "2925319"
  }
]