[
  {
    "start": "0",
    "end": "65000"
  },
  {
    "text": "[Music]",
    "start": "2550",
    "end": "10419"
  },
  {
    "text": "hello please rate me on this app and my name is Tom wiy thank you for the",
    "start": "12960",
    "end": "18400"
  },
  {
    "text": "introduction Thomas um I'm going to talk about monitoring microservices and yeah",
    "start": "18400",
    "end": "24000"
  },
  {
    "text": "let's start with some uh warmup actually everyone's done this so you feel pretty warmed up so I'm going to skip that I'm",
    "start": "24000",
    "end": "29400"
  },
  {
    "text": "uh running short on time so the thesis of this talk is very much um",
    "start": "29400",
    "end": "35680"
  },
  {
    "text": "microservices have changed the architecture with which you build apps and maybe you need to think about different techniques to monitor uh those",
    "start": "35680",
    "end": "42760"
  },
  {
    "text": "apps when people talk about monitoring I know I instantly go to kind of drawing",
    "start": "42760",
    "end": "47920"
  },
  {
    "text": "nice time series style charts and what I'm really here to talk about is maybe trying to persuade you to think of",
    "start": "47920",
    "end": "53840"
  },
  {
    "text": "monitoring as more than just time series charts so I'm going to break this talk down into traditional monitoring",
    "start": "53840",
    "end": "60199"
  },
  {
    "text": "visualization and tracing so let's start with traditional monitoring your traditional you know",
    "start": "60199",
    "end": "67720"
  },
  {
    "start": "65000",
    "end": "185000"
  },
  {
    "text": "monolith maybe looks a little bit like this it's uh not a particularly interesting diagram um you've got some",
    "start": "67720",
    "end": "74439"
  },
  {
    "text": "load balances you've got some application servers you've probably got some uh databases the thing to to note from this",
    "start": "74439",
    "end": "80880"
  },
  {
    "text": "the character characterization right it doesn't change very often it's reasonably static there's a small number",
    "start": "80880",
    "end": "86280"
  },
  {
    "text": "of moving parts and you probably maybe have dedicated hosts or dedicated VMS",
    "start": "86280",
    "end": "92799"
  },
  {
    "text": "for each of these components you've probably named them other people have covered the kind of named them specially and you care about them your",
    "start": "92799",
    "end": "99720"
  },
  {
    "text": "microservices architecture lots of people have talked about this it's more Dynamic you're pushing you know maybe",
    "start": "99720",
    "end": "105600"
  },
  {
    "text": "every three and a half minutes they're very extreme um you don't really have a prescribed technology you don't really",
    "start": "105600",
    "end": "112880"
  },
  {
    "text": "have a prescribed uh architecture you've delegated a lot of the responsibility",
    "start": "112880",
    "end": "117960"
  },
  {
    "text": "you know this is a good thing that Adrian covered in his keynote yesterday you've delegated the responsibility for the tools they use for the languages",
    "start": "117960",
    "end": "125240"
  },
  {
    "text": "they use for the architecture of the subsystems to the teams responsible for building them and this is fantastic but",
    "start": "125240",
    "end": "130759"
  },
  {
    "text": "it does mean you know it's flexible it's changing you can no longer rely on a single static uh like monitoring",
    "start": "130759",
    "end": "138840"
  },
  {
    "text": "system so you know we've heard the analogy of pets versus cattle I like",
    "start": "138840",
    "end": "145400"
  },
  {
    "text": "this picture anyway we'll cover we'll skip over that one so um what you end up building for a monolithic",
    "start": "145400",
    "end": "152000"
  },
  {
    "text": "application is a big dashboard like this this isn't our dashboard I just pulled this off the internet but if you look at",
    "start": "152000",
    "end": "158720"
  },
  {
    "text": "the uh application you tend to see these are host metrics this is the host's dis",
    "start": "158720",
    "end": "164239"
  },
  {
    "text": "iio the host's CPU these are host Centric",
    "start": "164239",
    "end": "169280"
  },
  {
    "text": "metrics and I suppose the real thesis of this section of the talk is in the old",
    "start": "169280",
    "end": "175080"
  },
  {
    "text": "world your your system the primary key on your monitoring system was host and in the",
    "start": "175080",
    "end": "181400"
  },
  {
    "text": "new world the primary key should be application or service so who who knows",
    "start": "181400",
    "end": "187400"
  },
  {
    "start": "185000",
    "end": "257000"
  },
  {
    "text": "or has heard of Brendan Greg's use method good someone I like this I like",
    "start": "187400",
    "end": "193200"
  },
  {
    "text": "uh simple easy to remember things it makes um it makes your job of of like devops easier anyway Brendan Greg talks",
    "start": "193200",
    "end": "200280"
  },
  {
    "text": "about the way to uh monitor a system is to measure the utilization saturation",
    "start": "200280",
    "end": "206519"
  },
  {
    "text": "and error rate of every resource and whilst I think this is useful especially for things like",
    "start": "206519",
    "end": "212480"
  },
  {
    "text": "capacity planning this is not what I like to use and so this is a little bit tongue and- cheek please don't quote me on this I think we should have the red",
    "start": "212480",
    "end": "219239"
  },
  {
    "text": "method and the red method is for every service we should be monitoring the error rate the uh rate of requests and",
    "start": "219239",
    "end": "227200"
  },
  {
    "text": "the duration I I would want to say latency really but RL doesn't sound as good so um so yeah you should monitor",
    "start": "227200",
    "end": "233640"
  },
  {
    "text": "these three things the primary key should be the service and you really want to be looking at these metrics in",
    "start": "233640",
    "end": "240439"
  },
  {
    "text": "aggregate you really don't want to be looking at these metrics for an individual replica of a given service you want to be looking at these as on",
    "start": "240439",
    "end": "247239"
  },
  {
    "text": "the service as a whole and if you start measuring these kind of metrics this will enable you to have a lot more",
    "start": "247239",
    "end": "252760"
  },
  {
    "text": "confidence in things like your blue green uh blue green deployments so how do we do this well traditionally you",
    "start": "252760",
    "end": "259840"
  },
  {
    "start": "257000",
    "end": "375000"
  },
  {
    "text": "would do something like this it's a lot of code but you basically declare some metrics in your application you measure",
    "start": "259840",
    "end": "266280"
  },
  {
    "text": "them and you export them and so this is going to require you to go out to all your different Services all of the",
    "start": "266280",
    "end": "271680"
  },
  {
    "text": "different binaries you've written and instrument them in this particular way and now one of the kind of uh thesis we",
    "start": "271680",
    "end": "279000"
  },
  {
    "text": "have so if you do this sorry getting ahead of myself you end up with a nice dashboard like this this is grafana um",
    "start": "279000",
    "end": "284800"
  },
  {
    "text": "which is running off a Prometheus back end and this is what we actually use to monitor our service at weave works and",
    "start": "284800",
    "end": "290120"
  },
  {
    "text": "it's quite nice it does a good job but there must be a better way you must you know this when I I",
    "start": "290120",
    "end": "298320"
  },
  {
    "text": "referred earlier to this kind of delegation of responsibility but with a lot of monitoring topics and this is going to",
    "start": "298320",
    "end": "303560"
  },
  {
    "text": "be a reoccurring thing you end up with this kind of top- down mandate everyone must instrument their services in a",
    "start": "303560",
    "end": "310120"
  },
  {
    "text": "particular way with a particular technology and that's completely against this delegation of responsibility right",
    "start": "310120",
    "end": "315520"
  },
  {
    "text": "every team should be able to choose their own tools to also operate their services but it doesn't work that way so",
    "start": "315520",
    "end": "321479"
  },
  {
    "text": "is there a better way can we do something that means teams you don't have to mandate that teams use",
    "start": "321479",
    "end": "328440"
  },
  {
    "text": "Prometheus and I believe you can I believe the platform or the service you're running",
    "start": "328440",
    "end": "334000"
  },
  {
    "text": "on should provide you the metrics you need without you having to instrument your application so if you look at this",
    "start": "334000",
    "end": "340600"
  },
  {
    "text": "is specific to kubernetes but it it works on many things if you look at um",
    "start": "340600",
    "end": "345919"
  },
  {
    "text": "most platforms they have load balancers in there there's one in Cloud Foundry kubernetes has a cube",
    "start": "345919",
    "end": "352039"
  },
  {
    "text": "proxy these load balances see all the requests to all of your instances of all your services and so why not add the",
    "start": "352039",
    "end": "360319"
  },
  {
    "text": "instrumentation there and then you you get uniform consistent metrics out of",
    "start": "360319",
    "end": "366840"
  },
  {
    "text": "all of your uh services and you don't have to do this mandate this is something that someone can do relatively",
    "start": "366840",
    "end": "373440"
  },
  {
    "text": "easily so we have we've worked an open source project it's really really early",
    "start": "373440",
    "end": "378840"
  },
  {
    "text": "like we just released our .2 so I definitely wouldn't run it in production just yet but it's an instrumented",
    "start": "378840",
    "end": "384000"
  },
  {
    "text": "programmable load balancer it uses Prometheus to Dy its metrics because we love Prometheus Prometheus just got",
    "start": "384000",
    "end": "389599"
  },
  {
    "text": "accepted into the cncf by the way which is awesome news uh cncf is the found uh",
    "start": "389599",
    "end": "394720"
  },
  {
    "text": "the foundation that's also uh owns uh kubernetes as well so yeah we think this",
    "start": "394720",
    "end": "401039"
  },
  {
    "text": "is a fantastic approach I would do a demo but I don't really have time so I'm going to skip over this one I've got more demos later I'd encourage you to",
    "start": "401039",
    "end": "406960"
  },
  {
    "text": "try out flux I think it's pretty cool that's really all I've got to say about monitoring you need to you know to",
    "start": "406960",
    "end": "413360"
  },
  {
    "start": "410000",
    "end": "440000"
  },
  {
    "text": "summarize right in the old world your primary key was host and in the new world in the microservices world your",
    "start": "413360",
    "end": "418680"
  },
  {
    "text": "primary key really really needs to be service and then there's different techniques to doing this but the current",
    "start": "418680",
    "end": "425440"
  },
  {
    "text": "state-ofthe-art is instrumenting individual binaries and exporting them to something like",
    "start": "425440",
    "end": "431479"
  },
  {
    "text": "Prometheus the new you know I think we need to move to a a world where the load balances in your platform give you these",
    "start": "431479",
    "end": "437680"
  },
  {
    "text": "kind of metrics so you don't have to do this mandate so that's monitoring visualization this is actually what I",
    "start": "437680",
    "end": "444240"
  },
  {
    "start": "440000",
    "end": "632000"
  },
  {
    "text": "work on so I'm going to spend a little bit more time working on this talking about this so visualization we talked",
    "start": "444240",
    "end": "449280"
  },
  {
    "text": "about about this world where your application the the topology and and the",
    "start": "449280",
    "end": "455800"
  },
  {
    "text": "architecture of your application is rapidly changing so how many people have ever",
    "start": "455800",
    "end": "461120"
  },
  {
    "text": "kind of sat down and explained to someone what their application looks like on a whiteboard I'm kind of kind of",
    "start": "461120",
    "end": "466720"
  },
  {
    "text": "hope all of you right and how many people were wrong when they explained it I know I was right so this is a real problem you",
    "start": "466720",
    "end": "474440"
  },
  {
    "text": "have um the keynote this morning talked about this kind of institutionalized knowledge you have people that taught",
    "start": "474440",
    "end": "480120"
  },
  {
    "text": "this is what the application looks like and then they repeat it and the application's changed between the time",
    "start": "480120",
    "end": "485360"
  },
  {
    "text": "they were taught and the time they repeat it and they don't know about that so wouldn't it be nice if you probably",
    "start": "485360",
    "end": "490599"
  },
  {
    "text": "notice the theme Here wouldn't it be nice if there was a tool out there which Drew you a map of your application and",
    "start": "490599",
    "end": "497280"
  },
  {
    "text": "on top of all of this didn't need anyone to uh to kind of annotate or declare you",
    "start": "497280",
    "end": "504159"
  },
  {
    "text": "know if it kind of just went out there and discovered what the topology of your application was now the reason I'm keen",
    "start": "504159",
    "end": "509319"
  },
  {
    "text": "on is cu that's exactly what I've written uh it's open source it's written in go it's primarily focused on Docker",
    "start": "509319",
    "end": "515240"
  },
  {
    "text": "and kubernetes but we have Integrations with misos as well and this is is called weave scope um the idea here is it draws",
    "start": "515240",
    "end": "521719"
  },
  {
    "text": "you it's kind of a like a bit like a graph database it it goes and scrapes all sorts of information about the",
    "start": "521719",
    "end": "526800"
  },
  {
    "text": "system and renders it in these nice uh visually attractive um topologies we call them so",
    "start": "526800",
    "end": "533680"
  },
  {
    "text": "this is neat what I really want to talk about here is why this is a difficult problem from a technical point of view",
    "start": "533680",
    "end": "539560"
  },
  {
    "text": "to do so getting the getting the nodes that's easy right Docker PS you know you",
    "start": "539560",
    "end": "545880"
  },
  {
    "text": "can do PS in your operating system to get processes get pods from uh from cetes everyone has an API to get the",
    "start": "545880",
    "end": "552440"
  },
  {
    "text": "nodes but it's getting the edges which is difficult there are a couple of Technologies for finding out the current",
    "start": "552440",
    "end": "558040"
  },
  {
    "text": "TCP connections so all the edges in this uh in this app are TCP",
    "start": "558040",
    "end": "564120"
  },
  {
    "text": "connections so the Technologies we have so contract which is uh exposing the",
    "start": "564120",
    "end": "569480"
  },
  {
    "text": "tables used to do like map mapping as far as I understand don't really know that the kernel technology behind that",
    "start": "569480",
    "end": "574800"
  },
  {
    "text": "extremely well contract can give you a live stream of events okay this is great",
    "start": "574800",
    "end": "580360"
  },
  {
    "text": "this will tell you when connections are created and destroyed it's kind of hard to interpret though because it's just IP addresses and so you need to join this",
    "start": "580360",
    "end": "587880"
  },
  {
    "text": "with containers which might have unique IP addresses or if you're all familiar with Docker containers can share network",
    "start": "587880",
    "end": "594120"
  },
  {
    "text": "name spaces so can share IP addresses so you might need to specialize a bit you might need to look at the port and know",
    "start": "594120",
    "end": "599519"
  },
  {
    "text": "this container is listening on this port and this container is listening on this port but you've also got another",
    "start": "599519",
    "end": "604959"
  },
  {
    "text": "approach inside the proc file system you've got the TCP tables and so you can go and look at that and that will tell",
    "start": "604959",
    "end": "610200"
  },
  {
    "text": "you what FD is communicating on what TCP connection what file descriptor which is great but now I also need to scrape the",
    "start": "610200",
    "end": "617120"
  },
  {
    "text": "proc file system and get the mapping between processes and file descriptors and then I need to get the mapping between processes and containers and I",
    "start": "617120",
    "end": "623959"
  },
  {
    "text": "need to do all this big join to get it all working okay so that sounds plausible",
    "start": "623959",
    "end": "629079"
  },
  {
    "text": "that sounds sounds doable it sounds complicated but not complex but it actually gets a little",
    "start": "629079",
    "end": "634120"
  },
  {
    "start": "632000",
    "end": "742000"
  },
  {
    "text": "bit harder so you've got this this is going to be a ven diagram and I haven't seen many ven diagrams in many talks",
    "start": "634120",
    "end": "640200"
  },
  {
    "text": "there should be more so yeah this is all connections that exist in the system and these are",
    "start": "640200",
    "end": "646000"
  },
  {
    "text": "the ones I can scrape from proc and I can't scrape all the connections from proc because reading from the proc file",
    "start": "646000",
    "end": "652040"
  },
  {
    "text": "system is expensive so I have to do it you know I have to rate limit how much I can do or else I'm basically going to",
    "start": "652040",
    "end": "658200"
  },
  {
    "text": "waste all my CPU just monitoring the application I'm supposed to be running so I have to do it periodically which",
    "start": "658200",
    "end": "664200"
  },
  {
    "text": "means any shortlived connections that occur in between my periods I don't see okay that's fine I'm going to use contract that's going to give me a",
    "start": "664200",
    "end": "670839"
  },
  {
    "text": "different set of connections some overlap there's going to be some bugs in contract which is",
    "start": "670839",
    "end": "676079"
  },
  {
    "text": "really annoying where it tells you about Connections that don't exist uh I just got rid of one of those",
    "start": "676079",
    "end": "681240"
  },
  {
    "text": "yesterday so I'm pretty happy about that there's still one left um it's going to have some overlap with prop but it's also going to let me know it's also not",
    "start": "681240",
    "end": "688160"
  },
  {
    "text": "going to let me know about all these connections down in the bottom right and these are connections that might be",
    "start": "688160",
    "end": "693480"
  },
  {
    "text": "coming from processes in the host net namespace okay I can't disambiguate those to the right process or to the",
    "start": "693480",
    "end": "699440"
  },
  {
    "text": "right container so this is things like connections the docker Docker uh demons making I can't figure out what to do",
    "start": "699440",
    "end": "704920"
  },
  {
    "text": "with those and it gets even harder right because we've got these load balanced connections you know modern software",
    "start": "704920",
    "end": "710920"
  },
  {
    "text": "load balancers will be doing uh IP tables based routing so that the kernel is the thing that's actually doing",
    "start": "710920",
    "end": "716399"
  },
  {
    "text": "forwarding of the packets and these these tend to go to a",
    "start": "716399",
    "end": "721440"
  },
  {
    "text": "virtual IP address which doesn't really exist which is great if you're trying to monitor edges because you see these IP addresses which aren't real so now",
    "start": "721440",
    "end": "728279"
  },
  {
    "text": "you've got to translate these fake IP addresses these virtual IP addresses into real IP addresses and what's more I",
    "start": "728279",
    "end": "734839"
  },
  {
    "text": "mean I could draw a lot more circles onto here I'm just trying to show you why drawing these edges is difficult",
    "start": "734839",
    "end": "742240"
  },
  {
    "start": "742000",
    "end": "1064000"
  },
  {
    "text": "anyway I could go on about this but I'm not going to I'm going to do a demo instead",
    "start": "742240",
    "end": "747639"
  },
  {
    "text": "so to show you this nothing up my sleeve I've got a completely empty uh box this",
    "start": "747639",
    "end": "752800"
  },
  {
    "text": "is all running locally on a single VM on a dock machine VM I'm going to run an example app now I normally don't like to",
    "start": "752800",
    "end": "758760"
  },
  {
    "text": "use a big shell script to do my demo but this not actually that important what this is doing under the under the scenes",
    "start": "758760",
    "end": "764079"
  },
  {
    "text": "it's just running some containers and these containers talk to each other there's a load gener generator in there so it it does something and these",
    "start": "764079",
    "end": "771000"
  },
  {
    "text": "containers have like a python app over written some elastic search some reddis",
    "start": "771000",
    "end": "776720"
  },
  {
    "text": "some engine X you name it and okay it's really obvious to everyone right what that does no I could you know",
    "start": "776720",
    "end": "785079"
  },
  {
    "text": "get a whiteboard out and draw it but no we're going to use scope this time so scope",
    "start": "785079",
    "end": "791440"
  },
  {
    "text": "launch it should be that easy to run software and now I'm going to get the UI",
    "start": "791440",
    "end": "799000"
  },
  {
    "text": "up so give it a sec to uh to form its uh scrape of the system zoom in whilst it",
    "start": "799079",
    "end": "804880"
  },
  {
    "text": "does that and there we go scope scope has gone and scraped this app this app",
    "start": "804880",
    "end": "810320"
  },
  {
    "text": "hasn't been annotated it hasn't been modified to run on scope and scope's managed to figure out who's talking to",
    "start": "810320",
    "end": "816360"
  },
  {
    "text": "what and you can clearly see a kind of delineation of you've got a load balance you've got a a load generator a load",
    "start": "816360",
    "end": "822079"
  },
  {
    "text": "balancer some application servers that are really just doing rooting and then a bunch of microservices in the bottom",
    "start": "822079",
    "end": "828519"
  },
  {
    "text": "that really don't do anything it's just there for show but so this is this is the basic idea now one of the features",
    "start": "828519",
    "end": "834320"
  },
  {
    "text": "we're just adding to scope in this Sprint um should be released well it would have been released yesterday if I wasn't here here uh is search so we can",
    "start": "834320",
    "end": "841600"
  },
  {
    "text": "do things like please tell me what's written in Python and we can see that those four apps invoke python in their",
    "start": "841600",
    "end": "847199"
  },
  {
    "text": "command line or we can do I mentioned there were some engine X so what's written in engine X ah they two front",
    "start": "847199",
    "end": "854399"
  },
  {
    "text": "ends okay what about IP addresses we can go 10. 32.0 do11 oh that's that front",
    "start": "854399",
    "end": "860720"
  },
  {
    "text": "end there we've got a really good UI guy who just like comes up with these things",
    "start": "860720",
    "end": "866560"
  },
  {
    "text": "anyway so that's search other stuff we can do well we can click on a given uh node in the in the uh topology and we",
    "start": "866560",
    "end": "874079"
  },
  {
    "text": "can see more information about it and we start collecting basic metrics we start collecting CPU memory we've actually got",
    "start": "874079",
    "end": "879160"
  },
  {
    "text": "a really cool plugin for scope which injects a kernel filter this little ebfs",
    "start": "879160",
    "end": "884519"
  },
  {
    "text": "into the kernel and starts paing HTTP headers in the kernel and emitting like request rates and error rates and things",
    "start": "884519",
    "end": "892480"
  },
  {
    "text": "like this so similar to what we can do with flux but in fact without even a load balancer but that's kind of really really early experimental stuff so I'm",
    "start": "892480",
    "end": "898600"
  },
  {
    "text": "not going to show you that cuz it probably won't work but some other stuff you can do so we know this is an app",
    "start": "898600",
    "end": "903959"
  },
  {
    "text": "let's see if we can get a get some logs out of this machine please get some logs yes oh it's erroring okay that's",
    "start": "903959",
    "end": "909040"
  },
  {
    "text": "interesting but we can get a terminal we can this is just doing a Docker attach maybe I don't want a Docker attach maybe",
    "start": "909040",
    "end": "914519"
  },
  {
    "text": "I actually want to poke around inside there we've got a interactive terminal that's stopped working no there",
    "start": "914519",
    "end": "921279"
  },
  {
    "text": "we go this is what happens when you use unreleased software there you go so the",
    "start": "921279",
    "end": "929000"
  },
  {
    "text": "whole idea here is that you can visualize the app but you can also interact with the app you could",
    "start": "929000",
    "end": "934279"
  },
  {
    "text": "also yeah you could also click on it and and just delete that one because maybe we don't want it let's stop it and then",
    "start": "934279",
    "end": "942680"
  },
  {
    "text": "why did it not stop oh there you go it stopped and now we can delete it there you go it's gone so this is the kind of",
    "start": "942680",
    "end": "948759"
  },
  {
    "text": "stuff we're trying to do with scope we're trying to show you what's going on in your application now this is perhaps",
    "start": "948759",
    "end": "954399"
  },
  {
    "text": "a bit too much information and what we really want to see is a more of a kind of higher level overview well what we can do is group these containers",
    "start": "954399",
    "end": "960680"
  },
  {
    "text": "together and and buy certain metrics buy certain metadata so we could for instance take the DNS name of the",
    "start": "960680",
    "end": "967000"
  },
  {
    "text": "container and maybe that's the thing you're using to kind of indicate what service they belong to and now this is",
    "start": "967000",
    "end": "972560"
  },
  {
    "text": "hopefully the kind of thing you might draw on your whiteboard you know we're not showing all the different replicas we've kind of aggregated the nodes up",
    "start": "972560",
    "end": "978839"
  },
  {
    "text": "and if you ran this against the kubernetes cluster you could do the same thing you could view bi actual service CU kubernetes has a concept of a service",
    "start": "978839",
    "end": "986399"
  },
  {
    "text": "and so on this is why I quite like scope and and scope also understands the relationships between all the containers",
    "start": "986399",
    "end": "992839"
  },
  {
    "text": "not only in edges as TCP connections but also kind of it understands that inside this container is a process so I can go",
    "start": "992839",
    "end": "999720"
  },
  {
    "text": "and see information about that process and I can see it has 21 open files and what pit it is and you know it",
    "start": "999720",
    "end": "1005279"
  },
  {
    "text": "understands that that process is running on this host and it really understands the whole topology how connected",
    "start": "1005279",
    "end": "1010480"
  },
  {
    "text": "everything is on the computer and you can even get a root on the computer so scope is also a root",
    "start": "1010480",
    "end": "1017440"
  },
  {
    "text": "kit uh who am I yes I got to fix that keyboard",
    "start": "1017560",
    "end": "1022639"
  },
  {
    "text": "Focus thing I am root excellent so scope is uh version 0.14 so",
    "start": "1022639",
    "end": "1031720"
  },
  {
    "text": "we're still not you know we're still not released we're still not a 10 it's open source you can go and try it out we're really interested in feedback and",
    "start": "1031720",
    "end": "1038480"
  },
  {
    "text": "obviously we have to do some security work on it so there we go I think that's pretty",
    "start": "1038480",
    "end": "1045640"
  },
  {
    "text": "much all I wanted to show about scope it works it's clustered it supports all sorts of interesting stuff and it we",
    "start": "1045640",
    "end": "1051480"
  },
  {
    "text": "just released in last release plugins and this release is all about search in kubernetes so moving",
    "start": "1051480",
    "end": "1058240"
  },
  {
    "text": "on how am I doing for time not too bad uh if you want to we have a hosted",
    "start": "1058240",
    "end": "1065080"
  },
  {
    "start": "1064000",
    "end": "1092000"
  },
  {
    "text": "version of scope this is what we're hoping to sell and make money one day um but that's a bit a long way off but in",
    "start": "1065080",
    "end": "1070799"
  },
  {
    "text": "the meantime it's just all on GitHub and you can come and talk to me on slack if you want to so that's visualization the",
    "start": "1070799",
    "end": "1076760"
  },
  {
    "text": "whole idea here is your app is changing you know you've delegated responsibility for the",
    "start": "1076760",
    "end": "1083080"
  },
  {
    "text": "architecture to your team and you really need a tool that will visualize that architecture and and help you have like",
    "start": "1083080",
    "end": "1088480"
  },
  {
    "text": "a Common Language across all the teams that's visualization so tracing so",
    "start": "1088480",
    "end": "1093760"
  },
  {
    "start": "1092000",
    "end": "1372000"
  },
  {
    "text": "this is this is now very much you know we've gone from alpha software to Beta software and now we're going all the way",
    "start": "1093760",
    "end": "1099679"
  },
  {
    "text": "back to prototypes um this tracing distributed tracing is not a new topic it starts",
    "start": "1099679",
    "end": "1106480"
  },
  {
    "text": "with the idea that when you had a monolith you could do uh a profile this is a go profile um and you could",
    "start": "1106480",
    "end": "1113520"
  },
  {
    "text": "basically that gives you all the information you need to debug and and and figure out performance issues in",
    "start": "1113520",
    "end": "1118600"
  },
  {
    "text": "your app but now that any given request is probably going to be handled by",
    "start": "1118600",
    "end": "1123679"
  },
  {
    "text": "multiple microservices you know tens of microservices you can't go and profile all those microservices and kind of",
    "start": "1123679",
    "end": "1129799"
  },
  {
    "text": "figure out where the request spent its time so you end up with this idea of distributed tracing which does exactly",
    "start": "1129799",
    "end": "1135440"
  },
  {
    "text": "that it traces single requests as they Traverse through your microser app and draws you a pretty flame frame flame",
    "start": "1135440",
    "end": "1142120"
  },
  {
    "text": "graph so this is pretty cool the most popular version uh in the open source world is called Zipkin it's modeled on",
    "start": "1142120",
    "end": "1148280"
  },
  {
    "text": "something that Google called Dapper like most things Google wrote a paper about it and someone built an open source",
    "start": "1148280",
    "end": "1154000"
  },
  {
    "text": "version of it and it's really cool it works really well but one of the problems I touched on earlier with",
    "start": "1154000",
    "end": "1159120"
  },
  {
    "text": "monitoring right is well I I'll come back to that I just want to talk about some of the literature um Dapper is the",
    "start": "1159120",
    "end": "1166080"
  },
  {
    "text": "Google paper Zipkin I don't think has a paper the one I'm really interested in actually is the second one back and this",
    "start": "1166080",
    "end": "1171880"
  },
  {
    "text": "is a little known paper by Microsoft research in Cambridge UK um where they did distributed request tracing but",
    "start": "1171880",
    "end": "1180440"
  },
  {
    "text": "through operating system instrumentation so instead of the way Dappa does it they",
    "start": "1180440",
    "end": "1186320"
  },
  {
    "text": "kind of modified the windows kernel and and got as much information as they could out of that and this is what gave me the idea for this so how does how",
    "start": "1186320",
    "end": "1192720"
  },
  {
    "text": "does Dappa work why is this difficult the challenge is you've got an incoming request you can time that you can",
    "start": "1192720",
    "end": "1198240"
  },
  {
    "text": "measure that that's easy the challenge is how do you associate that with outgoing",
    "start": "1198240",
    "end": "1203320"
  },
  {
    "text": "requests how do you work out this causality these services are black boxes right you don't know what's going on in",
    "start": "1203320",
    "end": "1208360"
  },
  {
    "text": "there and the solution pretty much everyone's gone with so far is that you inject some unique ID into your incoming",
    "start": "1208360",
    "end": "1215600"
  },
  {
    "text": "requests and you propagate that you you modify all of your applications to",
    "start": "1215600",
    "end": "1220799"
  },
  {
    "text": "propagate this unique ID okay and what was I saying earlier about about microservices and monitoring you you",
    "start": "1220799",
    "end": "1227400"
  },
  {
    "text": "really don't want these top down please go away and modify all your applications and what's going to happen is some teams",
    "start": "1227400",
    "end": "1233280"
  },
  {
    "text": "are going to be releasing every few days some teams are going to be releasing every day some teams actually probably",
    "start": "1233280",
    "end": "1238600"
  },
  {
    "text": "have released this thing and left it there you know not everything has to be revved every minute and so you're going",
    "start": "1238600",
    "end": "1244760"
  },
  {
    "text": "to get this this staggered roll out of this distributed tracing or even not at all some teams might be busy some",
    "start": "1244760",
    "end": "1250039"
  },
  {
    "text": "software might have been disowned in your organization yet it's still there and it still needs to be instrumented so you get this problem",
    "start": "1250039",
    "end": "1256720"
  },
  {
    "text": "where you get an incoming request to a piece of uh a piece of code that hasn't been instrumented and suddenly it's just a black box you don't see what's",
    "start": "1256720",
    "end": "1263640"
  },
  {
    "text": "happening past there and this really hampers the kind of roll out of distributed tracing in an organization",
    "start": "1263640",
    "end": "1270360"
  },
  {
    "text": "so again I've said this for every single topic can this be done without modifying your",
    "start": "1270360",
    "end": "1275679"
  },
  {
    "text": "application and I think it can obviously so the idea here",
    "start": "1275679",
    "end": "1281120"
  },
  {
    "text": "is this is obviously not how a computer works by the way your application talks",
    "start": "1281120",
    "end": "1286919"
  },
  {
    "text": "to the colel it does system calls it does system calls to do io on sockets it does system calls to connect to other",
    "start": "1286919",
    "end": "1294039"
  },
  {
    "text": "processes to connect to other computers so the kernel provide you with a mechanism to intercept those system",
    "start": "1294039",
    "end": "1300120"
  },
  {
    "text": "calls it's called P trce if who's who's used srace the tool right okay you know what I'm talking about so can we",
    "start": "1300120",
    "end": "1307840"
  },
  {
    "text": "intercept these system calls can we build our own little inmemory data structure of which uh thread which",
    "start": "1307840",
    "end": "1315039"
  },
  {
    "text": "process is writing to or reading from given fds which FD represents which IP address which Port you know and who's on",
    "start": "1315039",
    "end": "1322000"
  },
  {
    "text": "the other end of that IP address and port and can we use this to infer causality this is kind of the question",
    "start": "1322000",
    "end": "1327880"
  },
  {
    "text": "and if anyone's paying attention the obvious answer is no because things like asynchronous you",
    "start": "1327880",
    "end": "1335440"
  },
  {
    "text": "know um nety style uh reactor-based um architectures are going to are going",
    "start": "1335440",
    "end": "1342039"
  },
  {
    "text": "to really disam uh disassociate your incoming request IO",
    "start": "1342039",
    "end": "1347240"
  },
  {
    "text": "from your outcoming request IO nor nor it's going to do all all on the same thread or on a small number of reactor",
    "start": "1347240",
    "end": "1352520"
  },
  {
    "text": "threads or something but actually my argument is there's a lot of applications that don't use that there's",
    "start": "1352520",
    "end": "1358400"
  },
  {
    "text": "a lot of applications that are a lot simpler that still do a thread per request and some of the new stuff in um",
    "start": "1358400",
    "end": "1364240"
  },
  {
    "text": "the Linux kernel makes doing threads per requests a lot more performant than it used to be so if you're doing threads",
    "start": "1364240",
    "end": "1369880"
  },
  {
    "text": "per request which I believe is some subset of applications I believe this works and I'm going to show you because",
    "start": "1369880",
    "end": "1376720"
  },
  {
    "start": "1372000",
    "end": "1687000"
  },
  {
    "text": "I have a demo so this one's a little bit less reliable because I say this is a completely um completely prototype piece",
    "start": "1376720",
    "end": "1384960"
  },
  {
    "text": "of software so I'm just going to delete everything and just to show you that that's worked and show me that's worked",
    "start": "1384960",
    "end": "1391320"
  },
  {
    "text": "yes can everyone see what I'm doing good I didn't actually hear a response but",
    "start": "1391320",
    "end": "1396559"
  },
  {
    "text": "that's fine so I'm going to run a slightly",
    "start": "1396559",
    "end": "1401679"
  },
  {
    "text": "smaller demo app this time um just so it's a little bit more",
    "start": "1401679",
    "end": "1406960"
  },
  {
    "text": "understandable and then I'm also going to run scope to show you what that demo app is",
    "start": "1406960",
    "end": "1412440"
  },
  {
    "text": "doing okay give scope a second to scrape everything and show you what it's doing",
    "start": "1415440",
    "end": "1421000"
  },
  {
    "text": "this is where of course it will go instantly wrong and we won't see anything oh there you go so a really",
    "start": "1421000",
    "end": "1427960"
  },
  {
    "text": "simple app here we've got a load generator again it's the same load generator as in the previous example we've got a little python app again the",
    "start": "1427960",
    "end": "1434200"
  },
  {
    "text": "same python app as the last example but this time we've only got two servers an echo server which is really good",
    "start": "1434200",
    "end": "1440880"
  },
  {
    "text": "because you send it a request and it sends it back to you and a quote of the day server that goes out on the internet",
    "start": "1440880",
    "end": "1446559"
  },
  {
    "text": "speaks the actual quote of the day protocol which is like a proper protocol",
    "start": "1446559",
    "end": "1451600"
  },
  {
    "text": "ietf protocol and gets a quote and then and then repli so the app gets a quote",
    "start": "1451600",
    "end": "1456960"
  },
  {
    "text": "it echoes it back and it sends it back to the uh to the user which is a load generator in this case so let's start",
    "start": "1456960",
    "end": "1463080"
  },
  {
    "text": "the Tracer and see what happens Tracer launch okay so that seems to have worked",
    "start": "1463080",
    "end": "1470520"
  },
  {
    "text": "you can see the tracer's running there we'll go to the port for the Tracer okay",
    "start": "1470520",
    "end": "1476039"
  },
  {
    "text": "so this UI obviously isn't that good but it's not really about the UI I'm going to just demonstrate that we can do the",
    "start": "1476039",
    "end": "1482320"
  },
  {
    "text": "causality thing then I'm going to demonstrate that we can join connections between two processes instead of",
    "start": "1482320",
    "end": "1488760"
  },
  {
    "text": "incoming and outgoing we can join them between two processes and then I'm going to just let it run and see what happens",
    "start": "1488760",
    "end": "1493880"
  },
  {
    "text": "so let's start tracing the app container so this maybe Works 50 % of the",
    "start": "1493880",
    "end": "1499760"
  },
  {
    "text": "time we'll we'll let it get another Trace come on who's using the internet",
    "start": "1499760",
    "end": "1507559"
  },
  {
    "text": "there we go so we can see here actually let's use one of these this is easier to see we can see an incoming request and",
    "start": "1507559",
    "end": "1513720"
  },
  {
    "text": "we can see we found two outgoing requests for that incoming request now again this app's not been um it's not",
    "start": "1513720",
    "end": "1521320"
  },
  {
    "text": "been instrumented in any way it's not been modified in any way this is just using p trce to find out what's going on",
    "start": "1521320",
    "end": "1528399"
  },
  {
    "text": "in that app and so we can see these are currently just IP addresses but we can at least see an incoming request has",
    "start": "1528399",
    "end": "1533720"
  },
  {
    "text": "caused two outgoing requests so let's stop that let's go and uh try this quote",
    "start": "1533720",
    "end": "1538919"
  },
  {
    "text": "of the day server can we also do it for Sonic written and C the quote of the day server is just a really minimal P thread",
    "start": "1538919",
    "end": "1545120"
  },
  {
    "text": "C library okay yeah we've got an incoming request that causes a single outgoing request to some random IP",
    "start": "1545120",
    "end": "1551600"
  },
  {
    "text": "address on the internet and now what happens if I trace both of them at the same time can I join the outgoing",
    "start": "1551600",
    "end": "1557960"
  },
  {
    "text": "request from the app to the incoming request from the quote of the day server without having any kind of propagated",
    "start": "1557960",
    "end": "1563240"
  },
  {
    "text": "unique IDs and the answer is maybe there we go",
    "start": "1563240",
    "end": "1569440"
  },
  {
    "text": "you can see this one here this is an outgoing request from the app to the quote of the day server which is then gone to a random IP maybe uh this one",
    "start": "1569440",
    "end": "1577039"
  },
  {
    "text": "will be clearer there you go quote of the day random IP there you go it works this is only on a single machine but I'm",
    "start": "1577039",
    "end": "1584080"
  },
  {
    "text": "quite pleased with that so one of the interesting things here you can see some requests quick and some requests are",
    "start": "1584080",
    "end": "1589279"
  },
  {
    "text": "slow so can we figure out with distributed tracing why that's happening if we click on a slow request we see it's always in the second service what's",
    "start": "1589279",
    "end": "1596080"
  },
  {
    "text": "the second service I wonder so if we go and run the echo Tracer as well we should also start",
    "start": "1596080",
    "end": "1603559"
  },
  {
    "text": "seeing this here ah we've now managed to join the outgoing request from the app to the incoming request of the echo",
    "start": "1603559",
    "end": "1609399"
  },
  {
    "text": "server we can see the echo Server doesn't actually do anything with it it's good to know but then maybe we can",
    "start": "1609399",
    "end": "1614600"
  },
  {
    "text": "see that it's always the echo server that's being slow yeah it's always the echo server that's being slow great good",
    "start": "1614600",
    "end": "1619919"
  },
  {
    "text": "to know so that's distributed tracing with P Trace one of the things to not",
    "start": "1619919",
    "end": "1625080"
  },
  {
    "text": "about P Trace is when you a p Trace attached to an application it gets really slow so we this technique won't",
    "start": "1625080",
    "end": "1630720"
  },
  {
    "text": "work in production yet but as I touched on earlier there's these ebpf filters that you can inject into the kernel and",
    "start": "1630720",
    "end": "1636120"
  },
  {
    "text": "pretty much Hook off anything in the kernel uh we use it to pass HTTP headers in the kernel to get the get the metrics",
    "start": "1636120",
    "end": "1642399"
  },
  {
    "text": "I also believe although I haven't done this yet that we could use the ebpf filters to do the same thing here and actually have a performance version of",
    "start": "1642399",
    "end": "1649640"
  },
  {
    "text": "this kind of no application modifications tracing and for the for the instances",
    "start": "1649640",
    "end": "1654720"
  },
  {
    "text": "where you are using Sonic like NTI or some kind of async iio I'm kind of hoping that we can also use a little bit",
    "start": "1654720",
    "end": "1660399"
  },
  {
    "text": "of instrumentation or maybe even some like language level instrumentation if it's not completely agnostic to uh to get",
    "start": "1660399",
    "end": "1667519"
  },
  {
    "text": "those edges as well to get those uh causality so let's kill that cuz it",
    "start": "1667519",
    "end": "1672799"
  },
  {
    "text": "might kill my machine",
    "start": "1672799",
    "end": "1676240"
  },
  {
    "text": "that was distributed tracing this is really prototype software I kind of this is more of a hobby than something",
    "start": "1678559",
    "end": "1684760"
  },
  {
    "text": "endorsed by weave works but if you think it's interesting I'm looking for people to work on it with me I'm looking for",
    "start": "1684760",
    "end": "1690039"
  },
  {
    "text": "some free coders so yeah please let me know that's tracing the idea here is you",
    "start": "1690039",
    "end": "1695200"
  },
  {
    "text": "really really need distributed tracing if you're going to really understand what's going on inside your application",
    "start": "1695200",
    "end": "1700440"
  },
  {
    "text": "when you're using microservices um and I believe we can do that without application modifications so hopefully I've kind of",
    "start": "1700440",
    "end": "1707519"
  },
  {
    "text": "showed you the three kind of what I see as the three tenants of monitoring a",
    "start": "1707519",
    "end": "1713120"
  },
  {
    "text": "microservices application which is your traditional monitoring where I said what you really want is to change your",
    "start": "1713120",
    "end": "1718840"
  },
  {
    "text": "primary key from host to service and if you're clever about where you collect",
    "start": "1718840",
    "end": "1724720"
  },
  {
    "text": "that data you could do that without this top- down mandate visualization which I",
    "start": "1724720",
    "end": "1729840"
  },
  {
    "text": "think is super important when the architecture of your application is constantly changing and new services are being launched and turned down on a",
    "start": "1729840",
    "end": "1736480"
  },
  {
    "text": "daily basis and again you can do this without application modifications and without annotating your applications and",
    "start": "1736480",
    "end": "1742600"
  },
  {
    "text": "tracing where maybe you can do it without modifying your application um you know that one's yet to yet to be",
    "start": "1742600",
    "end": "1749360"
  },
  {
    "text": "seen yep obligatory we're hiring at weave Works actually just this morning we announced a big series B uh we raised",
    "start": "1749360",
    "end": "1755320"
  },
  {
    "text": "15 million from Google Ventures so we're pretty happy about that and yeah",
    "start": "1755320",
    "end": "1760880"
  },
  {
    "text": "questions I thought I'd try and finish early cuz it's lunch and I'm hungry",
    "start": "1760880",
    "end": "1765919"
  },
  {
    "text": "good and perfect timing because my Apple watch just told me to stand up",
    "start": "1765919",
    "end": "1771679"
  },
  {
    "text": "um oh and by the way there's the links I'll put these slides online they're already online somewhere but I'll put",
    "start": "1771679",
    "end": "1777159"
  },
  {
    "text": "the updated versions online and please rate me so um lot of questions I didn't have",
    "start": "1777159",
    "end": "1784519"
  },
  {
    "text": "is a good thing yeah well let's see you'll be the judge of that I guess um",
    "start": "1784519",
    "end": "1790240"
  },
  {
    "text": "so your V visualization is fine as long as you have maybe dozens of of",
    "start": "1790240",
    "end": "1795880"
  },
  {
    "text": "microservices but what add you you know bigger scale hundreds does this visualization of you",
    "start": "1795880",
    "end": "1802360"
  },
  {
    "text": "know small group still work or would you that's a great question um I don't",
    "start": "1802360",
    "end": "1808000"
  },
  {
    "text": "know we're not the the the journey we're trying to Target with scope is a developer working on their laptop and",
    "start": "1808000",
    "end": "1814919"
  },
  {
    "text": "maybe moving initially through to like initial production stages like scope as",
    "start": "1814919",
    "end": "1820159"
  },
  {
    "text": "I said it's it's still beta software it's still not5 or something so yeah I",
    "start": "1820159",
    "end": "1825679"
  },
  {
    "text": "don't know we're actually just starting to tackle some of the problems scale cuz we use scope on our own service and we're obviously running more than like",
    "start": "1825679",
    "end": "1831880"
  },
  {
    "text": "10 containers now um and yeah we run into a few problems we that's why we added search for one uh we've done loads",
    "start": "1831880",
    "end": "1838159"
  },
  {
    "text": "of performance work so you can just still render everything and we're adding list views that's why we added the",
    "start": "1838159",
    "end": "1843360"
  },
  {
    "text": "grouping functionality so you can kind of take all these containers and dup them and filter them you know we added a",
    "start": "1843360",
    "end": "1848559"
  },
  {
    "text": "whole bunch of filtering stuff in the latest release so you can just look at the system you're organiz you're interested in uh but yeah like it's",
    "start": "1848559",
    "end": "1855159"
  },
  {
    "text": "still you know it's a open question as to whether this technique will scale to 10,000 containers what about if you have",
    "start": "1855159",
    "end": "1862559"
  },
  {
    "text": "an architecture like we talked about earlier in Fred George's talk where you have an event where you have a message",
    "start": "1862559",
    "end": "1868600"
  },
  {
    "text": "bus exactly because here you're talking about connections between individ individual notes and now you're sending",
    "start": "1868600",
    "end": "1874320"
  },
  {
    "text": "messages and doesn't that kind of that obses the the flow of information",
    "start": "1874320",
    "end": "1879399"
  },
  {
    "text": "somewhat intentionally some might say um yeah I mean I personally have had some",
    "start": "1879399",
    "end": "1884720"
  },
  {
    "text": "experience with these message bu based architectures not as much as I have with the non- message bus based ones uh and I",
    "start": "1884720",
    "end": "1891200"
  },
  {
    "text": "prefer the non message bus based ones but like I I guess the the the company",
    "start": "1891200",
    "end": "1896639"
  },
  {
    "text": "line would be we have a plugins architecture and if you can find a way of expressing the relationships between your services you can feed scope that",
    "start": "1896639",
    "end": "1903320"
  },
  {
    "text": "data and it will render it for you yeah and there's nothing stopping you from maybe making a plugin that would support",
    "start": "1903320",
    "end": "1908880"
  },
  {
    "text": "something like CF exactly yeah okay I mean it is you know I think one of the whole points of the message bus B based",
    "start": "1908880",
    "end": "1915120"
  },
  {
    "text": "architecture is there aren't kind of inherent relationship chips and it's very much more Dynamic so I don't know",
    "start": "1915120",
    "end": "1920919"
  },
  {
    "text": "yeah I mean that's that's a unsolved problem as well but a good question um so you you showed us how to",
    "start": "1920919",
    "end": "1928600"
  },
  {
    "text": "run this locally on your machine yep how would you install it on a real Network oh wow well I actually just wrote the",
    "start": "1928600",
    "end": "1935559"
  },
  {
    "text": "docs on how to do that like a couple of days ago but if you're using",
    "start": "1935559",
    "end": "1940960"
  },
  {
    "text": "kubernetes you would uh site installation instructions",
    "start": "1940960",
    "end": "1947440"
  },
  {
    "text": "install so here you go like there's instructions for how to install it on pretty much everything if you've got a big kubernetes cluster it's like one command",
    "start": "1947440",
    "end": "1955120"
  },
  {
    "text": "if it's a misphere cluster then it's in the mosphere store that you saw yesterday in fact you might have even seen the logo if you're paying attention",
    "start": "1955120",
    "end": "1962039"
  },
  {
    "text": "um if you're using Docker swarm you use the same commands I wrote and you just run it multiple times on each host um",
    "start": "1962039",
    "end": "1968639"
  },
  {
    "text": "and what's the other thing we support ECS we've got a a cloud formation recipe I didn't write that I don't know what that is um and yeah basically there's a",
    "start": "1968639",
    "end": "1976200"
  },
  {
    "text": "way of doing it actually I was talking to Casey about how to get this running on uh Cloud Foundry which we haven't done yet but I'm sure we'll do like it",
    "start": "1976200",
    "end": "1982679"
  },
  {
    "text": "it's super generic it just traces TCP connections between processors so it should work on pretty much anything so",
    "start": "1982679",
    "end": "1988840"
  },
  {
    "text": "what about noner people don't use Docker I don't know rocket uh actually yeah I was",
    "start": "1988840",
    "end": "1995720"
  },
  {
    "text": "working with a chat called Alban although I don't know what his real name is that's his Twitter handle um on",
    "start": "1995720",
    "end": "2000840"
  },
  {
    "text": "getting it working on Rocket that's work in progress okay but there's no again no reason why it can't do that again",
    "start": "2000840",
    "end": "2006279"
  },
  {
    "text": "actually scope runs quite nicely on the map where you don't have a Docker container run time so you can actually",
    "start": "2006279",
    "end": "2011399"
  },
  {
    "text": "compile this on Darwin and just just run it and it works fine because it's go because it's go okay but yeah like the",
    "start": "2011399",
    "end": "2016799"
  },
  {
    "text": "idea between the docker packaging is just to make it easy so what about uh processes across several networks you",
    "start": "2016799",
    "end": "2022799"
  },
  {
    "text": "you showed us on one machine here but does it work seamlessly if you have okay yeah quite a lot of work went into",
    "start": "2022799",
    "end": "2029080"
  },
  {
    "text": "especially like an IP address can mean a different thing on one computer than it can on another this is what I was kind of talking about with the IP based load",
    "start": "2029080",
    "end": "2036320"
  },
  {
    "text": "balancing so a lot of Works gone into making sure we can figure out what end of connection works on on two different",
    "start": "2036320",
    "end": "2041919"
  },
  {
    "text": "hosts fun with IP tables yeah I mean nightmares and lost",
    "start": "2041919",
    "end": "2047080"
  },
  {
    "text": "sleep with IP tables is more but yeah so yes it should like if you're working on very large networks as I just refer you",
    "start": "2047080",
    "end": "2053520"
  },
  {
    "text": "to the first question like scope's targeted at you know small deployments right now you know we'll get there eventually thank you Tom thank you very",
    "start": "2053520",
    "end": "2060530"
  },
  {
    "text": "[Applause]",
    "start": "2060530",
    "end": "2066720"
  },
  {
    "text": "much for",
    "start": "2066720",
    "end": "2070720"
  }
]