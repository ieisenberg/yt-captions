[
  {
    "start": "0",
    "end": "52000"
  },
  {
    "text": "[Music]",
    "start": "980",
    "end": "7849"
  },
  {
    "text": "thanks a lot and thanks a lot for coming to this talk microservices journey from a startup perspective so when you",
    "start": "14750",
    "end": "21050"
  },
  {
    "text": "usually hear and read about success stories about micro services you usually hear about large industry players having",
    "start": "21050",
    "end": "28640"
  },
  {
    "text": "introduced micro services successfully like Netflix Amazon eBay and just to name a few and if you look at those",
    "start": "28640",
    "end": "35930"
  },
  {
    "text": "success stories you might end up saying oh that's like what worked there we can apply to us as well let's just copy that",
    "start": "35930",
    "end": "41870"
  },
  {
    "text": "but the problem is that you miss one point is that every journey to micro services is different in every",
    "start": "41870",
    "end": "47989"
  },
  {
    "text": "organization one of the reason is that the circumstances for every organization",
    "start": "47989",
    "end": "55040"
  },
  {
    "start": "52000",
    "end": "151000"
  },
  {
    "text": "are different so ever consensus that effect in your journey so one of the",
    "start": "55040",
    "end": "60980"
  },
  {
    "text": "circumstances could on the other side be your team structure and skill set inside",
    "start": "60980",
    "end": "66020"
  },
  {
    "text": "in size which has a direct impact on your micro services journey so your",
    "start": "66020",
    "end": "71300"
  },
  {
    "text": "transformation process itself it's not running in isolation so for example if",
    "start": "71300",
    "end": "76640"
  },
  {
    "text": "you're a small team with very little DevOps practices in place it has a huge",
    "start": "76640",
    "end": "81710"
  },
  {
    "text": "impact on your transformation process velocity and if you also take into",
    "start": "81710",
    "end": "88520"
  },
  {
    "text": "consideration that you still have to run a legacy system you still have to maintain it you still have to take care",
    "start": "88520",
    "end": "96229"
  },
  {
    "text": "of it and this one is also taking care of your legacy system reduces the time",
    "start": "96229",
    "end": "101240"
  },
  {
    "text": "that is available for a transformation process and also what's impacting your journey is also the runtime environment",
    "start": "101240",
    "end": "107329"
  },
  {
    "text": "are you running on Prem or are you running on cloud native so can you rely on managed services for example an api",
    "start": "107329",
    "end": "114439"
  },
  {
    "text": "gateway or do you have to setup everything from scratch and maintain and monitor everything and also what's very",
    "start": "114439",
    "end": "123530"
  },
  {
    "text": "important is your strategy are you forced to implement new features in a",
    "start": "123530",
    "end": "129320"
  },
  {
    "text": "very short period of time and if you are very very struggled with this one but if",
    "start": "129320",
    "end": "135890"
  },
  {
    "text": "you have a very short period of time and you might struggle with where to implement the new service shall I put it",
    "start": "135890",
    "end": "142790"
  },
  {
    "text": "as a new service or shall I add it to the monitors and feeding the monitor",
    "start": "142790",
    "end": "147890"
  },
  {
    "text": "again instead of shrinking it so to give you a little background",
    "start": "147890",
    "end": "153830"
  },
  {
    "start": "151000",
    "end": "297000"
  },
  {
    "text": "I am Donna Kaiser I used to be the CTO of just software that's a start-up in",
    "start": "153830",
    "end": "158959"
  },
  {
    "text": "Hamburg and just suffer we are developing just social that's a digital",
    "start": "158959",
    "end": "164090"
  },
  {
    "text": "workplace providing collaboration apps for your teams to communicate and collaborate with in teams in your",
    "start": "164090",
    "end": "170150"
  },
  {
    "text": "organization and a long time ago when we",
    "start": "170150",
    "end": "175400"
  },
  {
    "text": "started in 2010 everything was and monitors in every aspect so we had one",
    "start": "175400",
    "end": "180830"
  },
  {
    "text": "team working on one collaboration product and implemented as one code base",
    "start": "180830",
    "end": "186380"
  },
  {
    "text": "based on one technology stack so after a time everything was growing so a team",
    "start": "186380",
    "end": "193820"
  },
  {
    "text": "got bigger we added more and more features our user increased and the codebase got bigger and bigger that's",
    "start": "193820",
    "end": "200209"
  },
  {
    "text": "supposed to be fantastic but the one we had one problem that everything was feeling kind of clunky because",
    "start": "200209",
    "end": "205730"
  },
  {
    "text": "everything was tied together so on the one side is that that the fact is that",
    "start": "205730",
    "end": "214910"
  },
  {
    "text": "we added more and more features the thing is that we had to release these",
    "start": "214910",
    "end": "220970"
  },
  {
    "text": "changes quickly and the problem was that well because our team was growing bigger",
    "start": "220970",
    "end": "227090"
  },
  {
    "text": "and bigger the decisions and discussions and meetings took longer than before and",
    "start": "227090",
    "end": "232100"
  },
  {
    "text": "which we also had didn't have really well-defined responsibilities for example when a backup Mac arrived who's",
    "start": "232100",
    "end": "238160"
  },
  {
    "text": "taking care of it was one team so the processes were slowing down and our productivity suffered and due to the",
    "start": "238160",
    "end": "247670"
  },
  {
    "text": "fact that we were adding more and more features the usability became more and more complex the usability and user",
    "start": "247670",
    "end": "255290"
  },
  {
    "text": "experience suffered through continuous feature amendments and instead of solving our users problems very easily",
    "start": "255290",
    "end": "261739"
  },
  {
    "text": "we were increasingly confusing them and",
    "start": "261739",
    "end": "267490"
  },
  {
    "text": "due to the fact of the nature of a monolith it was not very easy for us to",
    "start": "267490",
    "end": "272780"
  },
  {
    "text": "release changes quickly because whenever you would like to add something you have to rebuild and redeploy the entire ship",
    "start": "272780",
    "end": "279380"
  },
  {
    "text": "the entire mothership even if you have just only one single line of code that you have changed so and this",
    "start": "279380",
    "end": "285759"
  },
  {
    "text": "resulted in high-risk deployments and which happened unless frequently so your new releases you new changes released",
    "start": "285759",
    "end": "292970"
  },
  {
    "text": "very of new features release very slowly so more than two years ago and our",
    "start": "292970",
    "end": "300530"
  },
  {
    "start": "297000",
    "end": "361000"
  },
  {
    "text": "product vision changed and we were focusing on usability and user experience improvements so we divided",
    "start": "300530",
    "end": "307550"
  },
  {
    "text": "our one collaboration app into separate collaboration apps taking in each one",
    "start": "307550",
    "end": "312650"
  },
  {
    "text": "each each of them is taking care of the specific use case are taking care of one problem and solve this problem very well",
    "start": "312650",
    "end": "318560"
  },
  {
    "text": "so we had a collaboration app for exchanging documents for communicating",
    "start": "318560",
    "end": "325340"
  },
  {
    "text": "in real time for managing your tasks and also distributing and sharing corporate",
    "start": "325340",
    "end": "331039"
  },
  {
    "text": "news and content pages throughout your organization and right after this or",
    "start": "331039",
    "end": "338000"
  },
  {
    "text": "probably mostly in the meantime we also split it our one team in multiple smaller teams and assigned to each of",
    "start": "338000",
    "end": "345080"
  },
  {
    "text": "those teams a specific set of collaboration app to enable those teams",
    "start": "345080",
    "end": "350180"
  },
  {
    "text": "to work at well-defined responsibilities and to enable them to work at different parts of the software independently was",
    "start": "350180",
    "end": "358190"
  },
  {
    "text": "minimal impact across the teams and so",
    "start": "358190",
    "end": "363949"
  },
  {
    "start": "361000",
    "end": "416000"
  },
  {
    "text": "as a reasonable the original next step is also to react reflect this autonomy",
    "start": "363949",
    "end": "369080"
  },
  {
    "text": "and also flexible the flexibility also now a self for architecture and by",
    "start": "369080",
    "end": "374500"
  },
  {
    "text": "splitting by introducing microservices to to gain also tana mean our software",
    "start": "374500",
    "end": "380180"
  },
  {
    "text": "architecture as well so the motivation for us from interim micro services was",
    "start": "380180",
    "end": "388070"
  },
  {
    "text": "to enable autonomous teams working at different parts of the software",
    "start": "388070",
    "end": "394570"
  },
  {
    "text": "independently at their own speed at their own pace with minimal impact",
    "start": "394570",
    "end": "400190"
  },
  {
    "text": "across other teams and develop and deploy the collaborations apps",
    "start": "400190",
    "end": "406030"
  },
  {
    "text": "independently and also scale them if more effectively so that in the end we",
    "start": "406030",
    "end": "411289"
  },
  {
    "text": "can release changes quickly",
    "start": "411289",
    "end": "414610"
  },
  {
    "text": "so when you start when you have decided to start this journey to micro-services",
    "start": "416800",
    "end": "422810"
  },
  {
    "text": "the first thing is that you have to identify good candidates for micro services and to model good candidates",
    "start": "422810",
    "end": "430120"
  },
  {
    "text": "one of the key concepts and what a good services is to follow some key principles and the key principles for",
    "start": "430120",
    "end": "437120"
  },
  {
    "text": "modeling good services follow the high cohesion within service and loose",
    "start": "437120",
    "end": "443870"
  },
  {
    "text": "coupling between those services and usually in the domain driven design high",
    "start": "443870",
    "end": "451190"
  },
  {
    "text": "cohesion within a service is usually reflected by related behavior that she'll stay consistent and so bounded",
    "start": "451190",
    "end": "459830"
  },
  {
    "text": "context itself it's a semantic boundary around a domain model where domain model lives in and they describe services that",
    "start": "459830",
    "end": "468530"
  },
  {
    "text": "are responsible for well-defined business function so for us in our case",
    "start": "468530",
    "end": "475669"
  },
  {
    "start": "473000",
    "end": "902000"
  },
  {
    "text": "we identified our collaboration app as the perfect candidates for high-level",
    "start": "475669",
    "end": "480789"
  },
  {
    "text": "coarse-grained bounded context that we can use as our as our starting point for",
    "start": "480789",
    "end": "487010"
  },
  {
    "text": "our decomposition journey and then from starting from this high level to finer grained ones later on so we started with",
    "start": "487010",
    "end": "496390"
  },
  {
    "text": "the with just drive that's the collaboration app for taking care of sharing documents within within your",
    "start": "496390",
    "end": "503479"
  },
  {
    "text": "teams and each document itself is created by an author and the author data",
    "start": "503479",
    "end": "510919"
  },
  {
    "text": "itself is stemming from the profile data and the profile data is stemming from another bounded context which still",
    "start": "510919",
    "end": "517580"
  },
  {
    "text": "resides in the monolith so we started",
    "start": "517580",
    "end": "523010"
  },
  {
    "text": "extracting the bounded context of just drive of our document collaboration app as a coexisting service from scratch and",
    "start": "523010",
    "end": "531020"
  },
  {
    "text": "we modeled the bounded context composed of its domain model and taking care of",
    "start": "531020",
    "end": "538760"
  },
  {
    "text": "the reflecting the business logic but also the application service taking orchestrating use cases and manage",
    "start": "538760",
    "end": "545330"
  },
  {
    "text": "transactions and also the input adapted of this of your of your bounded",
    "start": "545330",
    "end": "551040"
  },
  {
    "text": "context for example we have rest api's and you're persistent management on the",
    "start": "551040",
    "end": "557190"
  },
  {
    "text": "other side and this new service then owns the document state exclusively so",
    "start": "557190",
    "end": "563880"
  },
  {
    "text": "that's the only one that Campos read it on the one side but also modify it and",
    "start": "563880",
    "end": "570829"
  },
  {
    "text": "as mentioned before we had this author data that is related to a document which",
    "start": "570829",
    "end": "579509"
  },
  {
    "text": "we would like to also reflect in our new news service as well and what the author",
    "start": "579509",
    "end": "585120"
  },
  {
    "text": "data is stemming from the profiles day from the profile bounded context which",
    "start": "585120",
    "end": "590670"
  },
  {
    "text": "resides still in the monolith and it's this the modulus itself it owns the profile States exclusively on the",
    "start": "590670",
    "end": "598620"
  },
  {
    "text": "monolith site so and to avoid when we are displaying a document I went to",
    "start": "598620",
    "end": "605069"
  },
  {
    "text": "avoid to request the profile date or the author irrelevant data every time when we display a document we implemented we",
    "start": "605069",
    "end": "615509"
  },
  {
    "text": "implemented an event event driven approach so we the thing is that we kept",
    "start": "615509",
    "end": "622079"
  },
  {
    "text": "a local copy of the author relevant data in ourselves itself and to to to keep",
    "start": "622079",
    "end": "629670"
  },
  {
    "text": "this local copy and thing we we asked the of the monolith was notifying us",
    "start": "629670",
    "end": "637439"
  },
  {
    "text": "about profile update events so whenever a profile has been updated it was publishing the monolith was",
    "start": "637439",
    "end": "643680"
  },
  {
    "text": "publishing the profile updated event to a message broker which our new service subscribe to and when the event got",
    "start": "643680",
    "end": "652380"
  },
  {
    "text": "received Concord consumed it was updating it local copy accordingly so",
    "start": "652380",
    "end": "663170"
  },
  {
    "text": "what I have to say at this thing is at this stage is that the coexisting going",
    "start": "663170",
    "end": "670589"
  },
  {
    "text": "back a little so that the coexisting service that we that we established was",
    "start": "670589",
    "end": "676380"
  },
  {
    "text": "not an exact equivalent of the of the current one instead we also",
    "start": "676380",
    "end": "681470"
  },
  {
    "text": "and weaved in into this transformation process and you user interface we added",
    "start": "681470",
    "end": "689089"
  },
  {
    "text": "new features and we also did significant adjustments to the data structure itself",
    "start": "689089",
    "end": "696319"
  },
  {
    "text": "so and that was causing us troubles so",
    "start": "696319",
    "end": "701920"
  },
  {
    "text": "usually the coexisting service from scratch is in general a good approach a",
    "start": "702699",
    "end": "708620"
  },
  {
    "text": "go-to decomposition approach especially if you would like to move away from something if you would like to move away",
    "start": "708620",
    "end": "713899"
  },
  {
    "text": "from your current business logic if you would like to move away from your text stack for example but what in our case",
    "start": "713899",
    "end": "720920"
  },
  {
    "text": "it was the problem is that we that we put a lot of new things to this transformation process as well as well",
    "start": "720920",
    "end": "728180"
  },
  {
    "text": "so we did too many steps as one especially in the beginning it was not optimal to start with because in the",
    "start": "728180",
    "end": "734300"
  },
  {
    "text": "beginning if you are not if you are starting with no experience in that micro-services world at whereas in this",
    "start": "734300",
    "end": "740480"
  },
  {
    "text": "micro-services world the one thing that you have to focus on that you get early results and get fast results especially",
    "start": "740480",
    "end": "747980"
  },
  {
    "text": "in the beginning because you have to gain experience in that field very early so in was this approach a coexisting",
    "start": "747980",
    "end": "756259"
  },
  {
    "text": "service from scratch and adding on top different a lot of other challenges as",
    "start": "756259",
    "end": "761449"
  },
  {
    "text": "well was wasn't was not optimal for us so with the next bounded context that",
    "start": "761449",
    "end": "768649"
  },
  {
    "text": "was a chat app we followed a different approach we wanted to get earlier results so we followed the decomposition",
    "start": "768649",
    "end": "776449"
  },
  {
    "text": "approach of decomposing it incrementally from top to down so we started to",
    "start": "776449",
    "end": "783050"
  },
  {
    "text": "extract the user interface as the separate web app and provided a REST API",
    "start": "783050",
    "end": "788839"
  },
  {
    "text": "on the monolith that the new web app could address and this allowed us to",
    "start": "788839",
    "end": "797529"
  },
  {
    "text": "develop the user interface independently and iterate on the user interface rapidly so the next step was that we",
    "start": "797529",
    "end": "809120"
  },
  {
    "text": "shifted the business logic to the new service and untangling business logic is causing",
    "start": "809120",
    "end": "816980"
  },
  {
    "text": "significant code changes and in some cases was so it depends on the",
    "start": "816980",
    "end": "822540"
  },
  {
    "text": "dependencies we also had to provide an API for the monitors that the monitors",
    "start": "822540",
    "end": "827999"
  },
  {
    "text": "can then uses our extracted business logic as well at this point we still had",
    "start": "827999",
    "end": "833999"
  },
  {
    "text": "the same data storage and we were addressing the same data storage of the",
    "start": "833999",
    "end": "839519"
  },
  {
    "text": "monolith at this point and - yet to achieve and decoupled independent",
    "start": "839519",
    "end": "848069"
  },
  {
    "text": "service we had to have to move this data storage as well so that was the last step of our incremental top-down",
    "start": "848069",
    "end": "855059"
  },
  {
    "text": "decomposition approach so and when we moved the data storage to the new service we had to reflect the the",
    "start": "855059",
    "end": "862649"
  },
  {
    "text": "circumstance that also in this case each Chet discussion was also was also",
    "start": "862649",
    "end": "871550"
  },
  {
    "text": "created by a chat which had participants the Chet was was was created both",
    "start": "871550",
    "end": "877769"
  },
  {
    "text": "through this shared participants and this Chet participant dater was also streaming from the profile data which",
    "start": "877769",
    "end": "883559"
  },
  {
    "text": "was still resides in the more Ellis itself and we also implemented here the",
    "start": "883559",
    "end": "888990"
  },
  {
    "text": "event-driven state transfer principle to keep a lot of local copy at our news",
    "start": "888990",
    "end": "896129"
  },
  {
    "text": "service and get updated whenever a profile has been updated on the monolith",
    "start": "896129",
    "end": "901878"
  },
  {
    "text": "so um when you have multiple candidates for micro services one of the challenges",
    "start": "903529",
    "end": "909839"
  },
  {
    "text": "is to - to share - to prioritize your",
    "start": "909839",
    "end": "916199"
  },
  {
    "text": "your next candidate and what what really would work better is if you have as we",
    "start": "916199",
    "end": "923339"
  },
  {
    "text": "did was decomposing our drive app and the very first beginning what really works well is if you keep this candidate",
    "start": "923339",
    "end": "930089"
  },
  {
    "text": "very small in the very beginning so if this has very little dependency so if",
    "start": "930089",
    "end": "935670"
  },
  {
    "text": "it's very easy to extract because what you get out of it is that you get early results and you get gained early",
    "start": "935670",
    "end": "943160"
  },
  {
    "text": "experiences micro services yeah but also was a decomposition process in general and also your team",
    "start": "943160",
    "end": "950620"
  },
  {
    "text": "gained gains confidence by getting early experience as microservices and then you",
    "start": "950620",
    "end": "958779"
  },
  {
    "text": "can also move on with the next next focus on those services that generates",
    "start": "958779",
    "end": "964630"
  },
  {
    "text": "the greatest benefit after extraction so one one of the benefit could be that if",
    "start": "964630",
    "end": "970570"
  },
  {
    "text": "you have a service that changes very frequently it's got a good candidate to",
    "start": "970570",
    "end": "975670"
  },
  {
    "text": "focus on next because after extraction you have the possibility to deploy the",
    "start": "975670",
    "end": "981370"
  },
  {
    "text": "change is very often very quickly or you can also focus on those services that",
    "start": "981370",
    "end": "989620"
  },
  {
    "text": "require different resource consumptions for example if you have a service that",
    "start": "989620",
    "end": "995589"
  },
  {
    "text": "requires more memory than others you can",
    "start": "995589",
    "end": "1000660"
  },
  {
    "text": "deploy it on instances with high higher memory power so for our example we had",
    "start": "1000660",
    "end": "1005940"
  },
  {
    "text": "one service that was generating document previews which they needed different",
    "start": "1005940",
    "end": "1012510"
  },
  {
    "text": "resource and in terms of CPU CPU so we after the extraction we could deploy",
    "start": "1012510",
    "end": "1018150"
  },
  {
    "text": "those services on instances with with higher was more CPU power itself and so",
    "start": "1018150",
    "end": "1028230"
  },
  {
    "start": "1026000",
    "end": "1225000"
  },
  {
    "text": "with every was every service that we extracted we got confronted with a",
    "start": "1028230",
    "end": "1033540"
  },
  {
    "text": "question or with most of the service that we had extracted we got confronted with the question how to handle",
    "start": "1033540",
    "end": "1039569"
  },
  {
    "text": "cross-cutting concerns in in this specific case how to handle authorization and to give you a little",
    "start": "1039569",
    "end": "1047310"
  },
  {
    "text": "context our authorization model is very very fine-grained down to object level so for example in Drive you can can",
    "start": "1047310",
    "end": "1055290"
  },
  {
    "text": "control the authorization of a document by setting the authorization of its",
    "start": "1055290",
    "end": "1060600"
  },
  {
    "text": "parent shared folder but which increases the complexity of our authorization",
    "start": "1060600",
    "end": "1065730"
  },
  {
    "text": "model is that it's also in the service dependents so it also relies on the settings of of authorization data that",
    "start": "1065730",
    "end": "1074580"
  },
  {
    "text": "resides in a different service so and this was for example for example if you add documents to a",
    "start": "1074580",
    "end": "1081600"
  },
  {
    "text": "Content page and the access right of this documents are controlled by the",
    "start": "1081600",
    "end": "1087360"
  },
  {
    "text": "authorisation settings of this content page and the document cells is reciting in a different service so this was",
    "start": "1087360",
    "end": "1093539"
  },
  {
    "text": "causing us a lot of headaches and to had",
    "start": "1093539",
    "end": "1098760"
  },
  {
    "text": "to handle authorization and what as a result was that we did not solve the",
    "start": "1098760",
    "end": "1103830"
  },
  {
    "text": "cross country concern of authorization from very early on and said we were postponed it okay we find a solution",
    "start": "1103830",
    "end": "1109380"
  },
  {
    "text": "later we find a solution later but what well the consequences were very very counterproductive because since we have",
    "start": "1109380",
    "end": "1117960"
  },
  {
    "text": "not really provided a distributed authorization handling as one consequence was that we implemented the",
    "start": "1117960",
    "end": "1125640"
  },
  {
    "text": "authorization we added the service service itself that we have identified",
    "start": "1125640",
    "end": "1131720"
  },
  {
    "text": "to that area where authorization has already been solved and that was the",
    "start": "1131720",
    "end": "1137070"
  },
  {
    "text": "monolith so we ended up feeding the monolith again and that was the goal is to shrink Yamada's and we was very",
    "start": "1137070",
    "end": "1143730"
  },
  {
    "text": "counterproductive and as a consequence and the other side was that we were",
    "start": "1143730",
    "end": "1151049"
  },
  {
    "text": "reinterred implementing the authorization for service level and the",
    "start": "1151049",
    "end": "1156929"
  },
  {
    "text": "thing is usually at first glance you would assume or also our early",
    "start": "1156929",
    "end": "1162539"
  },
  {
    "text": "assumption was that authorization itself relates to the domain model but due to",
    "start": "1162539",
    "end": "1168330"
  },
  {
    "text": "the inter-service dependencies that I have described earlier it's a cross-cutting concern and the",
    "start": "1168330",
    "end": "1174690"
  },
  {
    "text": "thing is that when we really meant it per service we we duplicated that are the logic itself but also we were",
    "start": "1174690",
    "end": "1181140"
  },
  {
    "text": "shifting data back and forth and had introduced the risk for collision so",
    "start": "1181140",
    "end": "1186620"
  },
  {
    "text": "that was also very counterproductive so to make a short a long story short we",
    "start": "1186620",
    "end": "1192030"
  },
  {
    "text": "merged the authorization into a centralized service as a cross-cutting",
    "start": "1192030",
    "end": "1197039"
  },
  {
    "text": "concern and but merging a decentralized approach into one is also very very",
    "start": "1197039",
    "end": "1202440"
  },
  {
    "text": "time-consuming so and the thing is to avoid feeding the monolith or to",
    "start": "1202440",
    "end": "1207929"
  },
  {
    "text": "re-implement a cross-cutting concern with every new service that you introduce",
    "start": "1207929",
    "end": "1213380"
  },
  {
    "text": "handle those cross-cutting concerns very early so if you would have had an",
    "start": "1213380",
    "end": "1218490"
  },
  {
    "text": "earlier solution we would not have run into these problems so and the next",
    "start": "1218490",
    "end": "1228420"
  },
  {
    "start": "1225000",
    "end": "1352000"
  },
  {
    "text": "challenge when you introduce especially when you introduce a centralized service is avoid to introduce a distributed more",
    "start": "1228420",
    "end": "1237450"
  },
  {
    "text": "or less so for example when you when you",
    "start": "1237450",
    "end": "1243030"
  },
  {
    "text": "make changes to one side and you need to change the other side at the same time",
    "start": "1243030",
    "end": "1248510"
  },
  {
    "text": "and you can redeploy together that's a strong indicator that you have introduced a distributed model is and so",
    "start": "1248510",
    "end": "1258710"
  },
  {
    "text": "so that we for example when you add a new service or when you introducing yourselves or when you make a change to",
    "start": "1258710",
    "end": "1264900"
  },
  {
    "text": "your new service and your authorization service has to be updated at the same time then you are combining both",
    "start": "1264900",
    "end": "1270920"
  },
  {
    "text": "disadvantages of both worlds like you have a tight coupling system but they",
    "start": "1270920",
    "end": "1276030"
  },
  {
    "text": "are now communicating over the network and one thing how to avoid a distributed",
    "start": "1276030",
    "end": "1284850"
  },
  {
    "text": "model is is to establish one stable common contract contract that the",
    "start": "1284850",
    "end": "1290340"
  },
  {
    "text": "centralized authorization service owns and that all other con other consuming",
    "start": "1290340",
    "end": "1296660"
  },
  {
    "text": "services are our downstream services are have to translate you have to conform to",
    "start": "1296660",
    "end": "1302520"
  },
  {
    "text": "you so whenever a service on the one side is requiring authorization related",
    "start": "1302520",
    "end": "1308550"
  },
  {
    "text": "actions it translates it into this one common contract and can be handled on",
    "start": "1308550",
    "end": "1315450"
  },
  {
    "text": "the asuras authorization service without extra extra translation itself and",
    "start": "1315450",
    "end": "1320880"
  },
  {
    "text": "another prerequisite for this one is that this common contract is stable so the other so that you don't have to",
    "start": "1320880",
    "end": "1328020"
  },
  {
    "text": "update all the services that are translating into this contract every time when you make a change or a",
    "start": "1328020",
    "end": "1334320"
  },
  {
    "text": "breaking change so they also the authorization service so the authorization servers have to make clear",
    "start": "1334320",
    "end": "1339809"
  },
  {
    "text": "that this has to has to follow the the principles of a stable",
    "start": "1339809",
    "end": "1345090"
  },
  {
    "text": "and contract was that which does not change that much that often so and when",
    "start": "1345090",
    "end": "1354810"
  },
  {
    "start": "1352000",
    "end": "1509000"
  },
  {
    "text": "you introduce micro-services as that you have to take care of the service interaction as I in the previous example",
    "start": "1354810",
    "end": "1360990"
  },
  {
    "text": "I was given the event-driven interaction style I was prescribing that one where you",
    "start": "1360990",
    "end": "1366810"
  },
  {
    "text": "have services that are not communicating directly with each other but instead",
    "start": "1366810",
    "end": "1372030"
  },
  {
    "text": "they are publishing events to a message broker or subscribing to events from",
    "start": "1372030",
    "end": "1378930"
  },
  {
    "text": "from this message broker in order to flip the the flow control to the",
    "start": "1378930",
    "end": "1384510"
  },
  {
    "text": "receiving end and to to make this the the services themselves autonomous and",
    "start": "1384510",
    "end": "1391070"
  },
  {
    "text": "decoupled and another interaction Styles",
    "start": "1391070",
    "end": "1396150"
  },
  {
    "text": "the requests driven approach where one service calls one another service",
    "start": "1396150",
    "end": "1401250"
  },
  {
    "text": "directly over its API and where the flow control of the the communication is",
    "start": "1401250",
    "end": "1407100"
  },
  {
    "text": "mostly controlled by the sender itself but where services are more tied together or you can also combine those",
    "start": "1407100",
    "end": "1415110"
  },
  {
    "text": "patterns and patterns in a hybrid model where you combine the question and event-driven model together another",
    "start": "1415110",
    "end": "1424590"
  },
  {
    "text": "challenge when introducing micro services is the question how to manage shared data and as I mentioned before in",
    "start": "1424590",
    "end": "1432060"
  },
  {
    "text": "the interaction model the hybrid model can be can can be used as one solution",
    "start": "1432060",
    "end": "1437570"
  },
  {
    "text": "where you community where your services are communicating over events but only",
    "start": "1437570",
    "end": "1444300"
  },
  {
    "text": "for notification purposes so when one service needs additional data from",
    "start": "1444300",
    "end": "1449910"
  },
  {
    "text": "another context it does a direct call to a remote cross context call directly to",
    "start": "1449910",
    "end": "1455130"
  },
  {
    "text": "the source with the was a downside that you are coupling those both services",
    "start": "1455130",
    "end": "1461700"
  },
  {
    "text": "together so but you might want to go for the simplicity instead of instead of",
    "start": "1461700",
    "end": "1468480"
  },
  {
    "text": "like maintaining of data said locally especially when this data set is growing for example when you go to the next",
    "start": "1468480",
    "end": "1475140"
  },
  {
    "text": "model the event-driven stay transfer keep local couple off of your data and",
    "start": "1475140",
    "end": "1481509"
  },
  {
    "text": "there you use not divisions not only for notification purposes but also for data",
    "start": "1481509",
    "end": "1488299"
  },
  {
    "text": "application for for your various data transfer itself one of the the downside",
    "start": "1488299",
    "end": "1496549"
  },
  {
    "text": "of this one is that you have to maintain the data set locally and this data set this local copy itself might might grow",
    "start": "1496549",
    "end": "1503899"
  },
  {
    "text": "very fast over the time and another data",
    "start": "1503899",
    "end": "1511580"
  },
  {
    "start": "1509000",
    "end": "1672000"
  },
  {
    "text": "related aspect that you have to consider is the source of truth so usually in a",
    "start": "1511580",
    "end": "1517220"
  },
  {
    "text": "traditional event driven system you are usually listening to events and save",
    "start": "1517220",
    "end": "1523820"
  },
  {
    "text": "your actions into a database and you are emitting new events as well so and for",
    "start": "1523820",
    "end": "1532100"
  },
  {
    "text": "your internal service itself for your service itself the internal source of truth is your database but you all your",
    "start": "1532100",
    "end": "1539539"
  },
  {
    "text": "downstream services are for them the the source of truth is the is the the",
    "start": "1539539",
    "end": "1545359"
  },
  {
    "text": "message broker itself for the event so we had stored and the thing is that you",
    "start": "1545359",
    "end": "1551600"
  },
  {
    "text": "have in this one comes the complexity of dual writes you write to the database but also to the message broker and also",
    "start": "1551600",
    "end": "1559909"
  },
  {
    "text": "the another complexity is that the data model between the database itself and also the event format might diverge over",
    "start": "1559909",
    "end": "1567049"
  },
  {
    "text": "time so you have to to consider to be aware of divergence between those both",
    "start": "1567049",
    "end": "1573859"
  },
  {
    "text": "worlds so as an alternative the tentative approach is to merge those",
    "start": "1573859",
    "end": "1580129"
  },
  {
    "text": "boughs into one one event store and where events are considered as first",
    "start": "1580129",
    "end": "1586669"
  },
  {
    "text": "class first class citizens and are the primary source of your services so in",
    "start": "1586669",
    "end": "1593869"
  },
  {
    "text": "this case the services are addressing the same source of the same source for",
    "start": "1593869",
    "end": "1599419"
  },
  {
    "text": "the data a single source of truth and in this context Kafka's comes into play",
    "start": "1599419",
    "end": "1610420"
  },
  {
    "text": "so Kafka is it's a distributed scalable",
    "start": "1610420",
    "end": "1615559"
  },
  {
    "text": "fault tolerant commit lock service which is originally created by developed by",
    "start": "1615559",
    "end": "1620840"
  },
  {
    "text": "Ellington and it combines the capabilities of a messaging systems",
    "start": "1620840",
    "end": "1627380"
  },
  {
    "text": "Darsh system and also a streaming platform so in our case we have",
    "start": "1627380",
    "end": "1632750"
  },
  {
    "text": "introduced Kafka very early on but mostly mainly in the very beginning for",
    "start": "1632750",
    "end": "1638050"
  },
  {
    "text": "notification and data duplication that where are the main cases that we have used Kafka for so but lately we have",
    "start": "1638050",
    "end": "1646580"
  },
  {
    "text": "introduced Kafka streams as well and trying to get some experience with with",
    "start": "1646580",
    "end": "1652730"
  },
  {
    "text": "Kafka streams as well and so Kafka streams or streams in general are an",
    "start": "1652730",
    "end": "1659440"
  },
  {
    "text": "unbounded ordered sequence of structured data records and they are defined as key",
    "start": "1659440",
    "end": "1666559"
  },
  {
    "text": "value pairs which are continuously updated and when you work with Kafka",
    "start": "1666559",
    "end": "1675470"
  },
  {
    "start": "1672000",
    "end": "1904000"
  },
  {
    "text": "streams is when you create a stream in your service it loads on startup of your",
    "start": "1675470",
    "end": "1680809"
  },
  {
    "text": "service an entire Kafka topic into your stream a Kafka topic is a logical",
    "start": "1680809",
    "end": "1686720"
  },
  {
    "text": "category where you the producing services are publishing events to or the",
    "start": "1686720",
    "end": "1695270"
  },
  {
    "text": "consuming services are subscribing to for example the profile bounded context has a profile copy topic or the document",
    "start": "1695270",
    "end": "1702260"
  },
  {
    "text": "service is relying on on a profit in the document liberated services accessing",
    "start": "1702260",
    "end": "1709790"
  },
  {
    "text": "the the document traffic itself so and the stream itself is buffered into a",
    "start": "1709790",
    "end": "1717470"
  },
  {
    "text": "state store which is a lightweight embedded state database which is this based on your service and so the topic",
    "start": "1717470",
    "end": "1726020"
  },
  {
    "text": "itself is loaded into your stream and can be processed in the scope of your own service and the thing is that the",
    "start": "1726020",
    "end": "1733400"
  },
  {
    "text": "stream itself is not running on the broker it's running in the same process as your micro service so the streams",
    "start": "1733400",
    "end": "1739820"
  },
  {
    "text": "make the data available wherever it's and you don't have to do some remote",
    "start": "1739820",
    "end": "1745399"
  },
  {
    "text": "calls which are to accept for example the remote message broker so in Kafka",
    "start": "1745399",
    "end": "1755179"
  },
  {
    "text": "stream Kafka death cams was a streams API and where you can join filter group",
    "start": "1755179",
    "end": "1763190"
  },
  {
    "text": "and aggregate and so on streams themselves and process them in the scope of your service and you can also process",
    "start": "1763190",
    "end": "1770960"
  },
  {
    "text": "each message at a time by function like operations like map peek transform and",
    "start": "1770960",
    "end": "1777470"
  },
  {
    "text": "so on and when implementing stream processing what you usually need is a",
    "start": "1777470",
    "end": "1784879"
  },
  {
    "text": "stream itself but also a database for enrichments and the Kafka stream API provides those functionality by",
    "start": "1784879",
    "end": "1791989"
  },
  {
    "text": "abstracting abstracting streams and tables so a stream itself is a change",
    "start": "1791989",
    "end": "1800119"
  },
  {
    "text": "lock of a table capturing data records",
    "start": "1800119",
    "end": "1806210"
  },
  {
    "text": "as state changes of the table itself and the table is a snapshot of the latest",
    "start": "1806210",
    "end": "1812779"
  },
  {
    "text": "value for each key in the stream so they are very very related to each other they have a very strong connection and you",
    "start": "1812779",
    "end": "1819590"
  },
  {
    "text": "can transform a stream into a table and a table into a stream so and this stream",
    "start": "1819590",
    "end": "1826220"
  },
  {
    "text": "table duality is can be used very powerful in your microservices",
    "start": "1826220",
    "end": "1831679"
  },
  {
    "text": "architecture as well so we started using kafka streams themselves by introducing",
    "start": "1831679",
    "end": "1841039"
  },
  {
    "text": "materialized views so in the previous",
    "start": "1841039",
    "end": "1846200"
  },
  {
    "text": "example when I was talking about documents display was this also relevant data in the kafka streams example we",
    "start": "1846200",
    "end": "1855169"
  },
  {
    "text": "could do following we can create a stream out of the document topic and",
    "start": "1855169",
    "end": "1861249"
  },
  {
    "text": "load it into your service and the author relevant data itself can be loaded from",
    "start": "1861249",
    "end": "1866960"
  },
  {
    "text": "the profile topic as the table for enrichment and we can filter those we",
    "start": "1866960",
    "end": "1872629"
  },
  {
    "text": "can join the join those together the stream the mainstream and the profile table can can",
    "start": "1872629",
    "end": "1879760"
  },
  {
    "text": "be joined together and be stored as a result in a new state store which is",
    "start": "1879760",
    "end": "1886420"
  },
  {
    "text": "then accessible from the outside as an inbuilt materialized view and this is",
    "start": "1886420",
    "end": "1892420"
  },
  {
    "text": "then always updated automatically updated whenever a new document has been",
    "start": "1892420",
    "end": "1898210"
  },
  {
    "text": "added for example or when the profile data has been changed so to compare",
    "start": "1898210",
    "end": "1907420"
  },
  {
    "text": "those event driven mechanisms is that was with Kafka streams you're",
    "start": "1907420",
    "end": "1914080"
  },
  {
    "text": "eliminating the local copy so you don't have to have this the application afford keeping a local copy and seeing whenever",
    "start": "1914080",
    "end": "1921070"
  },
  {
    "text": "for example a profile app that has been has secured and so and pushes also the",
    "start": "1921070",
    "end": "1927100"
  },
  {
    "text": "debt to the data to where it's needed it pushes to your service itself so you don't have to you kind of right away",
    "start": "1927100",
    "end": "1933730"
  },
  {
    "text": "through you three streams API without remote calls and this increases",
    "start": "1933730",
    "end": "1941320"
  },
  {
    "text": "applicability for example when you introduce a new service you can just plug it into your to the stream system",
    "start": "1941320",
    "end": "1947380"
  },
  {
    "text": "itself and was out for example if you're not relying on your own data can can use",
    "start": "1947380",
    "end": "1953140"
  },
  {
    "text": "the stream data right away so in general it lowers the barrier to entry for you",
    "start": "1953140",
    "end": "1959680"
  },
  {
    "text": "for your new service itself and looking",
    "start": "1959680",
    "end": "1967210"
  },
  {
    "text": "now from him hindsight like what we have learned so far is starting small and",
    "start": "1967210",
    "end": "1973920"
  },
  {
    "text": "focused on those one that are easy to extract in the very very first beginning",
    "start": "1973920",
    "end": "1978940"
  },
  {
    "text": "is it's very very helpful because and also do one one step at a time one",
    "start": "1978940",
    "end": "1985630"
  },
  {
    "text": "maneuver manageable step at a time and because if you put too much load on your",
    "start": "1985630",
    "end": "1990940"
  },
  {
    "text": "shoulders in the very beginning you're not gaining early results and you're not",
    "start": "1990940",
    "end": "1996190"
  },
  {
    "text": "really gaining confidence and handling microservices and its really frustrating",
    "start": "1996190",
    "end": "2001320"
  },
  {
    "text": "if you can't if you have very late late experience with those hours and late",
    "start": "2001320",
    "end": "2007110"
  },
  {
    "text": "results and another one is to avoid feeding the monitors again and to",
    "start": "2007110",
    "end": "2012980"
  },
  {
    "text": "reimplementation concerns per service level definitely handle your",
    "start": "2012980",
    "end": "2019170"
  },
  {
    "text": "cross-cutting concerns very early on to avoid all these problems that we ran into and when providing centralized",
    "start": "2019170",
    "end": "2026100"
  },
  {
    "text": "service avoid a distributed model is by",
    "start": "2026100",
    "end": "2031470"
  },
  {
    "text": "introducing a common contract that is stable for for you for your downstream services and and to",
    "start": "2031470",
    "end": "2040320"
  },
  {
    "text": "design your your system to be easy to evolve design an event-driven to achieve",
    "start": "2040320",
    "end": "2046350"
  },
  {
    "text": "high decoupling and autonomy between your services and also I would",
    "start": "2046350",
    "end": "2051830"
  },
  {
    "text": "definitely consider again stream as the shared source of truth a good try as well and to come back to what I've",
    "start": "2051830",
    "end": "2059550"
  },
  {
    "text": "mentioned in the beginning be aware of your circumstances so it's not your transformation process it's not running",
    "start": "2059550",
    "end": "2065280"
  },
  {
    "text": "in isolation and for example if you have to to match a very sharp timeline and do",
    "start": "2065280",
    "end": "2071639"
  },
  {
    "text": "its transformation process in parallel its causes a lot of frustration on both sides and keep in mind that every",
    "start": "2071640",
    "end": "2079260"
  },
  {
    "text": "journey is different and our journey might be totally different than yours thank you for listening",
    "start": "2079260",
    "end": "2086330"
  },
  {
    "text": "[Applause]",
    "start": "2086330",
    "end": "2095909"
  },
  {
    "start": "2091000",
    "end": "2209000"
  },
  {
    "text": "thank you so first of all don't forget to vote that's the 20th time probably",
    "start": "2098200",
    "end": "2106670"
  },
  {
    "text": "that has been said there's a few a few questions asked to the through the app",
    "start": "2106670",
    "end": "2111770"
  },
  {
    "text": "if you have any questions now I'll try to to refresh we have a few minutes left so I was one question is about the",
    "start": "2111770",
    "end": "2121310"
  },
  {
    "text": "maturity of the of the company or the team that you embarked this this journey",
    "start": "2121310",
    "end": "2128450"
  },
  {
    "text": "with so how how experienced was the team and how big was the team that you you",
    "start": "2128450",
    "end": "2134660"
  },
  {
    "text": "took along on this journey so we were the one team was 13 people and they are",
    "start": "2134660",
    "end": "2141470"
  },
  {
    "text": "most mostly senior in full-stack experience and senior people and in that",
    "start": "2141470",
    "end": "2148970"
  },
  {
    "text": "field but was very little DevOps practices in place so that's also one thing that I can also address is that",
    "start": "2148970",
    "end": "2157430"
  },
  {
    "text": "especially when you have to when you're running on Prem for example is that it's",
    "start": "2157430",
    "end": "2163580"
  },
  {
    "text": "also a shift towards a DevOps culture and you have to consider this also reflect this also in your team as well",
    "start": "2163580",
    "end": "2170030"
  },
  {
    "text": "in terms of especially if we have a small team so we had one big scene and splitted into three different ones and",
    "start": "2170030",
    "end": "2176260"
  },
  {
    "text": "but what what's very important is also that you have for example a task force",
    "start": "2176260",
    "end": "2184910"
  },
  {
    "text": "in the beginning handling monitoring distributed logging all these operational complexities and that not",
    "start": "2184910",
    "end": "2192380"
  },
  {
    "text": "every team itself is trying to solve a balanced read provide some some",
    "start": "2192380",
    "end": "2198040"
  },
  {
    "text": "mechanisms that every team can then reuse and they're in the services we",
    "start": "2198040",
    "end": "2206690"
  },
  {
    "text": "have a live question Suzanne thank you for the presentation equation there you",
    "start": "2206690",
    "end": "2212869"
  },
  {
    "start": "2209000",
    "end": "2309000"
  },
  {
    "text": "know building the shared state out of the event stream it's very nice idea all together but you know the startup time",
    "start": "2212869",
    "end": "2219800"
  },
  {
    "text": "of the application of the container depends a lot on the amount of the data which is existing this event stream",
    "start": "2219800",
    "end": "2225200"
  },
  {
    "text": "a few billions of events she needs to be loaded during the start time and basically some of them actually have to",
    "start": "2225200",
    "end": "2231320"
  },
  {
    "text": "be deleted because it's like you know updates often they are just redundant what should be the suggestion that like",
    "start": "2231320",
    "end": "2237170"
  },
  {
    "text": "should you provide like full updates there inside of the event stream or like what's your experience with that one so",
    "start": "2237170",
    "end": "2244820"
  },
  {
    "text": "yeah we are not you're not Netflix have that have to process 1 trillion",
    "start": "2244820",
    "end": "2250760"
  },
  {
    "text": "messages a day we have a few less so but what there's so one challenge is when",
    "start": "2250760",
    "end": "2259490"
  },
  {
    "text": "you and when you have to deal with a lot of data is and you spin up a new service and you have to load this topic engineer",
    "start": "2259490",
    "end": "2266810"
  },
  {
    "text": "service is that you can run into a high load a time a long long time to to load",
    "start": "2266810",
    "end": "2272330"
  },
  {
    "text": "this data it's topic data in your and your in your service itself into the stream so and there are Kafka suggests",
    "start": "2272330",
    "end": "2280460"
  },
  {
    "text": "three three things one is what you are doing mostly is to provide compacted",
    "start": "2280460",
    "end": "2289160"
  },
  {
    "text": "topics so so we are not don't have the keeping not the data itself but we keep",
    "start": "2289160",
    "end": "2295100"
  },
  {
    "text": "the latest snapshot of each data record by its key and this reduces the amount",
    "start": "2295100",
    "end": "2300800"
  },
  {
    "text": "of data that to load up to load your service all right I had my finger on an",
    "start": "2300800",
    "end": "2311300"
  },
  {
    "start": "2309000",
    "end": "2447000"
  },
  {
    "text": "interesting question and then more questions came in so I had to find it again so you mentioned that there's of",
    "start": "2311300",
    "end": "2319640"
  },
  {
    "text": "course overhead in micro services a lot more than in a monolith but now you have",
    "start": "2319640",
    "end": "2324770"
  },
  {
    "text": "both a monolith and then micro services so they dot the the maintenance effort and the overhead increase as you were",
    "start": "2324770",
    "end": "2331040"
  },
  {
    "text": "extracting microservices I'm sorry what was the the overhead increase or did the",
    "start": "2331040",
    "end": "2337370"
  },
  {
    "text": "the effort of maintenance increase as you were extracting these micro services",
    "start": "2337370",
    "end": "2342740"
  },
  {
    "text": "from the big monolith making it harder for the second to extract the second one because now you've got more to do yes",
    "start": "2342740",
    "end": "2349520"
  },
  {
    "text": "especially what I mentioned before is so what we did me so there's also yeah we",
    "start": "2349520",
    "end": "2355460"
  },
  {
    "text": "increase the the maintenance effort especially because we had not every every DevOps practice in",
    "start": "2355460",
    "end": "2362720"
  },
  {
    "text": "place from the very beginning and there's also one thing that if you start with small services at first you definitely have to take care of all your",
    "start": "2362720",
    "end": "2369590"
  },
  {
    "text": "your operational things like definitely a separate CI a CDS pipeline but also",
    "start": "2369590",
    "end": "2375260"
  },
  {
    "text": "monitoring on service level and also lock tracing and distributed locking and",
    "start": "2375260",
    "end": "2380330"
  },
  {
    "text": "aggregate D locks so if you don't have this in place and you are running your monitors and you've micro services in",
    "start": "2380330",
    "end": "2385910"
  },
  {
    "text": "production then you it's causing a lot of headaches and a lot of effort to to",
    "start": "2385910",
    "end": "2391220"
  },
  {
    "text": "to operate them so also with services that you decompose also establish the",
    "start": "2391220",
    "end": "2398440"
  },
  {
    "text": "the core DevOps practices as well did",
    "start": "2398440",
    "end": "2404090"
  },
  {
    "text": "you manage to kill the monolith no not yet and I guess I guess we will still",
    "start": "2404090",
    "end": "2409340"
  },
  {
    "text": "keep it as a tiny ball of mud history",
    "start": "2409340",
    "end": "2415930"
  },
  {
    "text": "then to address this one as yeah with",
    "start": "2415930",
    "end": "2421390"
  },
  {
    "text": "anti-corruption layers just yes it's not so we are trying to focus on those",
    "start": "2421390",
    "end": "2426440"
  },
  {
    "text": "services that we are generating benefit out of it and we are not decomposing on",
    "start": "2426440",
    "end": "2432920"
  },
  {
    "text": "our monoliths in the sake of introducing your services we are trying to to come to focus on what service or what benefit",
    "start": "2432920",
    "end": "2441410"
  },
  {
    "text": "we are retrieving out of it when we extract the service how frequent did you",
    "start": "2441410",
    "end": "2449570"
  },
  {
    "start": "2447000",
    "end": "2559000"
  },
  {
    "text": "release the production with the monolith and how is it now with the micro services yes so there's the problem is",
    "start": "2449570",
    "end": "2457100"
  },
  {
    "text": "we have a polyglot environments that we have cloud and we also have on pram and",
    "start": "2457100",
    "end": "2462400"
  },
  {
    "text": "unfortunately on customer on frame so and this is really that's what I was",
    "start": "2462400",
    "end": "2468980"
  },
  {
    "text": "saying so our journey was totally different and then probably others because we have to face this complexity",
    "start": "2468980",
    "end": "2474950"
  },
  {
    "text": "and we have to reduce it so and so we was a model as itself was",
    "start": "2474950",
    "end": "2483010"
  },
  {
    "text": "probably I can't remember but it was monthly wise and so then the private the",
    "start": "2483010",
    "end": "2490819"
  },
  {
    "text": "private cloud solution we can deploy daily so there's a remark interesting",
    "start": "2490819",
    "end": "2499039"
  },
  {
    "text": "remark with a question from somebody in the audience who says we have several hundred micro services but they're still",
    "start": "2499039",
    "end": "2504200"
  },
  {
    "text": "a core monolith it's stable so splitting it up never seems to get business priority",
    "start": "2504200",
    "end": "2509270"
  },
  {
    "text": "how would you or did you deal with that it was not a problem in your case yeah",
    "start": "2509270",
    "end": "2515750"
  },
  {
    "text": "it was a problem in our case since the fact that we started with this very high",
    "start": "2515750",
    "end": "2524359"
  },
  {
    "text": "level bounded context of just drive and retrieving very late results was also",
    "start": "2524359",
    "end": "2530440"
  },
  {
    "text": "not gain we're not getting confident from the management either so they think",
    "start": "2530440",
    "end": "2535940"
  },
  {
    "text": "they came to us was well it didn't you say that you would like to release changes early but now it takes far",
    "start": "2535940",
    "end": "2542270"
  },
  {
    "text": "longer and so and it was it's a real problem was that one and two but the",
    "start": "2542270",
    "end": "2548869"
  },
  {
    "text": "problem is that it takes longer in the very beginning so you have to deal with it that it's not slow it's slowing down",
    "start": "2548869",
    "end": "2554779"
  },
  {
    "text": "your process instead of speeding a nap",
    "start": "2554779",
    "end": "2559240"
  },
  {
    "start": "2559000",
    "end": "2627000"
  },
  {
    "text": "what kind of scaled agile flavor so somebody has an opinion here did you use",
    "start": "2560529",
    "end": "2568849"
  },
  {
    "text": "in order to manage your teams that you use well safe or the Spotify model or",
    "start": "2568849",
    "end": "2574130"
  },
  {
    "text": "what how did you how did you organize your your teams so we don't have tribes",
    "start": "2574130",
    "end": "2581000"
  },
  {
    "text": "in that way yeah we have so we have product line teams and so as I mentioned",
    "start": "2581000",
    "end": "2588500"
  },
  {
    "text": "before that they these teams are assigned to a set of collaboration apps",
    "start": "2588500",
    "end": "2595700"
  },
  {
    "text": "that take care of from user interface down to data storage as well and they so",
    "start": "2595700",
    "end": "2601609"
  },
  {
    "text": "and my so what I was was enforcing was",
    "start": "2601609",
    "end": "2606950"
  },
  {
    "text": "that they can can do their own autonomous decision to handle their their own collaboration",
    "start": "2606950",
    "end": "2615260"
  },
  {
    "text": "apps so they are more aligned and can also choose their own ideology methods",
    "start": "2615260",
    "end": "2620720"
  },
  {
    "text": "of it perfect I'm tool and one team was running on stram the other one was running on Kanban somebody would like to",
    "start": "2620720",
    "end": "2628760"
  },
  {
    "start": "2627000",
    "end": "2773000"
  },
  {
    "text": "know if you had any external help in this journey or is it all you and the team figuring everything out that's a",
    "start": "2628760",
    "end": "2635600"
  },
  {
    "text": "good question so sometimes I always hope I was thinking gosh why didn't I ask for help so and the thing is we didn't have",
    "start": "2635600",
    "end": "2645250"
  },
  {
    "text": "external help at that mall at that time so but I was yeah attending a lot of conferences and I was yeah we were all",
    "start": "2645250",
    "end": "2653530"
  },
  {
    "text": "digging into you into every book that we could read every article that we can find at the moment and also try to to",
    "start": "2653530",
    "end": "2661160"
  },
  {
    "text": "share this knowledge in our teams to discuss it like to which what model",
    "start": "2661160",
    "end": "2666200"
  },
  {
    "text": "works for us right now but it's no no external sources other than only and",
    "start": "2666200",
    "end": "2672500"
  },
  {
    "text": "apparently somebody's in the room is and somebody in the room is is seeking external help they've noticed your ex",
    "start": "2672500",
    "end": "2678020"
  },
  {
    "text": "CTO is just social and they're wondering if you're for for hire that is not a",
    "start": "2678020",
    "end": "2683930"
  },
  {
    "text": "question to ask through the app because it's anonymous and and you know it's hard to get a working relationship",
    "start": "2683930",
    "end": "2689590"
  },
  {
    "text": "anonymously so if that was you can approach me later so it's a yeah I'm",
    "start": "2689590",
    "end": "2695720"
  },
  {
    "text": "right not on a transition so but it can ask this question later oh no no problem does anyone want to ask a question non",
    "start": "2695720",
    "end": "2703370"
  },
  {
    "text": "anonymously it's scary isn't it it's okay you'll survive most others did as",
    "start": "2703370",
    "end": "2710330"
  },
  {
    "text": "well yes there we go",
    "start": "2710330",
    "end": "2715330"
  },
  {
    "text": "did you consider any kafka alternatives for storing and sending out the events",
    "start": "2717260",
    "end": "2723400"
  },
  {
    "text": "sorry Kafka alternatives on earth now because",
    "start": "2723400",
    "end": "2729850"
  },
  {
    "text": "we already introduced Kafka for notification and for events transfer",
    "start": "2729850",
    "end": "2735950"
  },
  {
    "text": "purposes and for example we did not consider events or something like that",
    "start": "2735950",
    "end": "2741830"
  },
  {
    "text": "because we already had this one in place and we didn't want to introduce another component that we have to run and",
    "start": "2741830",
    "end": "2747440"
  },
  {
    "text": "maintain so that was just a simple reason that we did not consider that one",
    "start": "2747440",
    "end": "2754660"
  },
  {
    "text": "all right times almost up thanks you thank you very much and the things especially if we're leaving a",
    "start": "2754720",
    "end": "2760580"
  },
  {
    "text": "little bit it's time for questions and please give her a warm hand [Applause]",
    "start": "2760580",
    "end": "2774030"
  }
]