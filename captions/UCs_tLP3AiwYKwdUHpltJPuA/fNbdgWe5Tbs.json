[
  {
    "start": "0",
    "end": "106000"
  },
  {
    "text": "[Music]",
    "start": "970",
    "end": "7838"
  },
  {
    "text": "good morning so i am really excited to be here at the very first rev mq summit and the first",
    "start": "13200",
    "end": "18960"
  },
  {
    "text": "speaker a lot of pressure uh and",
    "start": "18960",
    "end": "24000"
  },
  {
    "text": "the journey for me with rabid mq started longer than i care to admit i was an early adopter fleeing from",
    "start": "24160",
    "end": "30480"
  },
  {
    "text": "another message bus technology and trying to stay within the open source space",
    "start": "30480",
    "end": "36239"
  },
  {
    "text": "and in that i was forced to learn a lot of things really early that have helped me develop application",
    "start": "36239",
    "end": "43760"
  },
  {
    "text": "architectures that use robin mq that hopefully most of you wouldn't have to think about these days",
    "start": "43760",
    "end": "50399"
  },
  {
    "text": "one of the very thing early things that came to me was that to truly grok rabbitmq just",
    "start": "50399",
    "end": "57280"
  },
  {
    "text": "at the deepest level is to know amqp specifically these days 0",
    "start": "57280",
    "end": "64960"
  },
  {
    "text": "9 1 back then 0 8 and that's kind of a weird concept right",
    "start": "64960",
    "end": "71360"
  },
  {
    "text": "when you think about how you use other technologies database servers",
    "start": "71360",
    "end": "76400"
  },
  {
    "text": "web servers you generally don't think about the low-level protocol or the the model",
    "start": "76400",
    "end": "84320"
  },
  {
    "text": "implemented in the protocol hopefully if you're a web developer you're thinking about http and using the constructs in it but",
    "start": "84320",
    "end": "91840"
  },
  {
    "text": "you're not thinking about it at say the layer 7 framing",
    "start": "91840",
    "end": "97040"
  },
  {
    "text": "of how it works on the tcp stack and to some degree that knowledge with",
    "start": "97040",
    "end": "103040"
  },
  {
    "text": "rabbit is is truly helpful when you think about as you go through",
    "start": "103040",
    "end": "110000"
  },
  {
    "start": "106000",
    "end": "147000"
  },
  {
    "text": "the life cycle of being a developer who's using rabbitmq",
    "start": "110000",
    "end": "115600"
  },
  {
    "text": "you start off with these questions of how do i take a message and put it in a queue wait what's an exchange again",
    "start": "115600",
    "end": "124320"
  },
  {
    "text": "how do wait i gotta publish to an exchange and then it gets into a queue how does it get into the queue",
    "start": "124320",
    "end": "130479"
  },
  {
    "text": "right a routing key okay so you start working through your mind this idea of",
    "start": "130479",
    "end": "136319"
  },
  {
    "text": "the model of how a message flows through the system to get to where you have it in a queue",
    "start": "136319",
    "end": "142160"
  },
  {
    "text": "and then how do you get it out of the queue",
    "start": "142160",
    "end": "146000"
  },
  {
    "start": "147000",
    "end": "195000"
  },
  {
    "text": "then you're writing your application you're working through this process and you start to run into issues how",
    "start": "148319",
    "end": "155519"
  },
  {
    "text": "many of you have applications in production where there are behaviors that you didn't",
    "start": "155519",
    "end": "161280"
  },
  {
    "text": "expect in your application that's it",
    "start": "161280",
    "end": "167360"
  },
  {
    "text": "a lot of times the the problems that you encounter in your application where the behaviors are not what you're expecting",
    "start": "169120",
    "end": "175120"
  },
  {
    "text": "is because there are some things around the amqp protocol at the lowest level that",
    "start": "175120",
    "end": "182319"
  },
  {
    "text": "rabbitmq implements that maybe aren't as straightforward as you would expect when",
    "start": "182319",
    "end": "188959"
  },
  {
    "text": "you have experience working with other remote systems",
    "start": "188959",
    "end": "194159"
  },
  {
    "start": "195000",
    "end": "1008000"
  },
  {
    "text": "and that's primarily because rabbitmq's identity has evolved and is focused on this",
    "start": "195519",
    "end": "202319"
  },
  {
    "text": "standard called amqp and amqp itself is a standard that is a low-level",
    "start": "202319",
    "end": "211760"
  },
  {
    "text": "um that's like the the the framing on the wire how data gets marshaled and unmarshaled",
    "start": "211760",
    "end": "218720"
  },
  {
    "text": "it's also the classes and methods around how that low-level data",
    "start": "218720",
    "end": "227040"
  },
  {
    "text": "says what it's doing or what it wants uh and then it's the model of the data as it exists in rabbitmq",
    "start": "227040",
    "end": "236720"
  },
  {
    "text": "so if you bear with me here we're gonna we're gonna dive a little deep and then we're gonna come back out and if i'm going too deep for this early in the",
    "start": "237120",
    "end": "243280"
  },
  {
    "text": "morning i apologize but i promise you it's actually really early where i'm from and i'm usually not awake for",
    "start": "243280",
    "end": "249680"
  },
  {
    "text": "another five hours so bear with me uh so at the highest level",
    "start": "249680",
    "end": "256000"
  },
  {
    "text": "you have the model right this is the easiest part to understand but it's these are the beginning questions",
    "start": "256000",
    "end": "261519"
  },
  {
    "text": "uh we have exchanges and and really when it comes down to it exchanges are all about routing right and you have the message",
    "start": "261519",
    "end": "267840"
  },
  {
    "text": "queue that accumulates things and then you have the binding",
    "start": "267840",
    "end": "273280"
  },
  {
    "text": "one of the things that i always have fun when i'm working with a junior developer and i'm explaining this for the first",
    "start": "273280",
    "end": "278560"
  },
  {
    "text": "time and i tell them about routing keys and then i tell them about binding keys and they ask me what's the difference",
    "start": "278560",
    "end": "284400"
  },
  {
    "text": "between a routing key and a binding key well they're the same thing kind of depends on the exchange",
    "start": "284400",
    "end": "292000"
  },
  {
    "text": "and then we have the protocol it's really the foundation of how",
    "start": "293759",
    "end": "299120"
  },
  {
    "text": "everything in rabbitmq talks everything",
    "start": "299120",
    "end": "304400"
  },
  {
    "text": "when things are happening inside rabbitmq you're using any of the functionality for example let's say",
    "start": "304479",
    "end": "310479"
  },
  {
    "text": "shovels or you're using any of the protocol adapters which i'll get to",
    "start": "310479",
    "end": "316400"
  },
  {
    "text": "you're still talking amqp091 it just happens to be doing so internally as opposed to",
    "start": "316400",
    "end": "322960"
  },
  {
    "text": "on the wire over on the right side here",
    "start": "322960",
    "end": "328400"
  },
  {
    "text": "we see basically the state that every connection has to go through when it's establishing",
    "start": "328400",
    "end": "335280"
  },
  {
    "text": "a conversation with rabbitmq the connection starts we basically send a salvo saying hey we",
    "start": "335280",
    "end": "340639"
  },
  {
    "text": "want to talk to you in amqp and the server says okay let's start the connection",
    "start": "340639",
    "end": "345919"
  },
  {
    "text": "and it sends this response back and then we have to say okay we got your response saying you want to start a connection",
    "start": "345919",
    "end": "352720"
  },
  {
    "text": "we're going to skip over secure because that's really not implemented most of the time so we want to tune the connection how",
    "start": "352720",
    "end": "357840"
  },
  {
    "text": "many channels can we have what's our maximum frame size few other things and then",
    "start": "357840",
    "end": "364400"
  },
  {
    "text": "as a response we say okay we got your tuning request here's what we would rather do and um the server responds with okay",
    "start": "364400",
    "end": "371680"
  },
  {
    "text": "your connection is open and we say okay we understand it's open great pretty",
    "start": "371680",
    "end": "377360"
  },
  {
    "text": "chatty that's one of the reasons why",
    "start": "377360",
    "end": "382400"
  },
  {
    "text": "short-lived connections to rab and mq are inefficient because that's a",
    "start": "382400",
    "end": "388400"
  },
  {
    "text": "quite a few frames to go back and forth before you can ever do anything and then the next step is you have to",
    "start": "388400",
    "end": "394000"
  },
  {
    "text": "open a channel right so one of the things that you'll notice",
    "start": "394000",
    "end": "400960"
  },
  {
    "text": "when we're going through that diagram is that we had this prefix called",
    "start": "400960",
    "end": "406080"
  },
  {
    "text": "connection and then we had on the right side open open okay tune tune okay",
    "start": "406080",
    "end": "413520"
  },
  {
    "text": "connection in the amqp protocol is a class and the open and open okay are methods",
    "start": "413520",
    "end": "420880"
  },
  {
    "text": "and the protocol basically calls out for these different top-level classes",
    "start": "420880",
    "end": "427680"
  },
  {
    "text": "connections uh and and one of the interesting things it's a bi-directional rpc protocol",
    "start": "427680",
    "end": "434639"
  },
  {
    "text": "and we have uh something that's kind of weird in in the way that it was written for a",
    "start": "434639",
    "end": "440080"
  },
  {
    "text": "normal developer if you think about how you would have a channel and method you're gonna get a response back",
    "start": "440080",
    "end": "445919"
  },
  {
    "text": "uh but because the way the framing works your responses actually come in the the way of method calls as responses",
    "start": "445919",
    "end": "454639"
  },
  {
    "text": "with arguments so for example the server sends a connection start",
    "start": "454639",
    "end": "460319"
  },
  {
    "text": "connection being class start being the method and we're going to respond with a method",
    "start": "460319",
    "end": "466080"
  },
  {
    "text": "call of connection start okay and we're going to pass arguments along with that",
    "start": "466080",
    "end": "472000"
  },
  {
    "text": "it's a little counterintuitive from that perspective but what you'll basically see as you go",
    "start": "472000",
    "end": "477039"
  },
  {
    "text": "through here and i tried to highlight some of the important methods for these different classes is that almost all of them",
    "start": "477039",
    "end": "485120"
  },
  {
    "text": "have a basically verb okay response method to them",
    "start": "485120",
    "end": "493039"
  },
  {
    "text": "so uh with some exceptions some important exceptions but when you",
    "start": "493039",
    "end": "498960"
  },
  {
    "text": "think through the the life cycle of what happens at the low level when you're establishing a connection to rab and mq",
    "start": "498960",
    "end": "505360"
  },
  {
    "text": "you're going to basically establish that open connection and then you're going to open a channel",
    "start": "505360",
    "end": "510879"
  },
  {
    "text": "and then once you've opened the channel then you're going to do all the work so you want to maybe declare an exchange",
    "start": "510879",
    "end": "518320"
  },
  {
    "text": "declare a queue then you're going to bind the queue to an exchange these have these nice uh call response",
    "start": "518320",
    "end": "525920"
  },
  {
    "text": "call call type of behaviors until you get to the basic",
    "start": "525920",
    "end": "532080"
  },
  {
    "text": "class and i don't mean to be disparaging in any way but i kind of",
    "start": "532080",
    "end": "537279"
  },
  {
    "text": "feel like that was a little lazy catch-all class name because it it basically",
    "start": "537279",
    "end": "542560"
  },
  {
    "text": "revolves around everything that doesn't have something to do with these level model objects when you're",
    "start": "542560",
    "end": "549279"
  },
  {
    "text": "publishing messages consuming messages getting messages maybe it would have been better called message i don't know",
    "start": "549279",
    "end": "555680"
  },
  {
    "text": "but anyway one of the interesting things about basic calls is basic publish on",
    "start": "555680",
    "end": "563200"
  },
  {
    "text": "its own inherently the thing that you use to send a message doesn't get a response",
    "start": "563200",
    "end": "570240"
  },
  {
    "text": "finally one really important thing that any programming rpc style behavior has",
    "start": "571440",
    "end": "579519"
  },
  {
    "text": "are exceptions right and so exceptions in the way of the amqp protocol come",
    "start": "579519",
    "end": "585279"
  },
  {
    "text": "as arguments that are passed by way of a channel close method call and that's a really",
    "start": "585279",
    "end": "591920"
  },
  {
    "text": "important thing to understand when it comes down to it channels in essence primarily are for",
    "start": "591920",
    "end": "598160"
  },
  {
    "text": "the coordination of what messages are being sent across the bus when i'm at the message layer and",
    "start": "598160",
    "end": "605760"
  },
  {
    "text": "letting your client know when it's done something wrong you tried to access a cue that doesn't",
    "start": "605760",
    "end": "610800"
  },
  {
    "text": "exist you published a message and you required that rabbit route it somewhere and it",
    "start": "610800",
    "end": "617519"
  },
  {
    "text": "failed to do so and so that really is what channels are about and it's",
    "start": "617519",
    "end": "624000"
  },
  {
    "text": "important to understand what that is oftentimes as a beginner",
    "start": "624000",
    "end": "629120"
  },
  {
    "text": "mistake might be well i'm going to have this application that publishes messages from all these",
    "start": "629120",
    "end": "635440"
  },
  {
    "text": "different parts so i need to have a channel for each different part that's actually costly when you understand what's going on underneath",
    "start": "635440",
    "end": "641519"
  },
  {
    "text": "the covers in rabbitmq because those are different objects with statistics associated with them it's keeping track of the message rate",
    "start": "641519",
    "end": "648079"
  },
  {
    "text": "it's keeping track of how many bytes are passing through and it's useful for example if you want",
    "start": "648079",
    "end": "654720"
  },
  {
    "text": "to coordinate behaviors because you want to know that this part of the application is causing exceptions within the rpc",
    "start": "654720",
    "end": "661680"
  },
  {
    "text": "but when you can try and keep those things small so this is where we dive deep",
    "start": "661680",
    "end": "669360"
  },
  {
    "text": "we'll go out of this pretty quick but on the wire at layer 7 everybody understand what i'm talking about layer 7 i'm",
    "start": "670160",
    "end": "676399"
  },
  {
    "text": "talking about basically uh in tcp in the space that the tcp frame gives us",
    "start": "676399",
    "end": "684160"
  },
  {
    "text": "to transmit data we have binary data that is basically formatted like",
    "start": "684160",
    "end": "690480"
  },
  {
    "text": "this pretty much every single frame that happens looks like this and always",
    "start": "690480",
    "end": "695920"
  },
  {
    "text": "there are exceptions but uh in essence we have a frame header with the frame type this",
    "start": "695920",
    "end": "701680"
  },
  {
    "text": "number that basically says how am i going to format the payload then you're going to have",
    "start": "701680",
    "end": "707920"
  },
  {
    "text": "the channel number and the number of bytes inside the payload and an end frame delimiter this is somewhat",
    "start": "707920",
    "end": "715920"
  },
  {
    "text": "opaque in that from a low-level perspective uh what we're doing in all client",
    "start": "715920",
    "end": "721839"
  },
  {
    "text": "libraries in essence is we're looking for this part and we're looking for this part",
    "start": "721839",
    "end": "728000"
  },
  {
    "text": "and then we're taking that and passing it to a parser to try and figure out what's next",
    "start": "728000",
    "end": "733920"
  },
  {
    "text": "um next we have basically i'm going to what goes in that that frame part i was",
    "start": "736240",
    "end": "741920"
  },
  {
    "text": "talking about i wanted to break down what happens when you publish a message",
    "start": "741920",
    "end": "747760"
  },
  {
    "text": "when you think about uh communicating so for example when we when we make an analog to http",
    "start": "747920",
    "end": "753440"
  },
  {
    "text": "and we're making a post call at the top part of the post call",
    "start": "753440",
    "end": "759680"
  },
  {
    "text": "on the wire we're going to have headers that say we're going to post this and it's coming from here and here how many bytes are there and",
    "start": "759680",
    "end": "765839"
  },
  {
    "text": "then we have this basically opaque payload",
    "start": "765839",
    "end": "771200"
  },
  {
    "text": "amqp is a little different we basically have a minimum of three frames remember a little",
    "start": "771200",
    "end": "778800"
  },
  {
    "text": "earlier when i was talking about the connection state negotiation one of the things that we negotiate is how big or how many bytes can each frame",
    "start": "778800",
    "end": "786800"
  },
  {
    "text": "be the default is basically 128k and so what we basically we send this",
    "start": "786800",
    "end": "794000"
  },
  {
    "text": "frame that basically says we're doing a basic publish and then we send information",
    "start": "794000",
    "end": "799120"
  },
  {
    "text": "about what we're going to publish that's where the message properties live and information about the payload and so",
    "start": "799120",
    "end": "805839"
  },
  {
    "text": "if you're sending a one megabyte payload you're going to send multiple of these body frames with",
    "start": "805839",
    "end": "811680"
  },
  {
    "text": "opaque chunks",
    "start": "811680",
    "end": "815839"
  },
  {
    "text": "so uh the the method frame the very first frame the basic publish",
    "start": "818480",
    "end": "823680"
  },
  {
    "text": "keeps our our class our method and then the first argument is the exchange that we're going to publish to",
    "start": "823680",
    "end": "830000"
  },
  {
    "text": "now this could be empty if you want to use the implicit direct publishing to a queue behavior",
    "start": "830000",
    "end": "836079"
  },
  {
    "text": "or it could be your exchange name and then the routing key value and then the mandatory flag",
    "start": "836079",
    "end": "843440"
  },
  {
    "text": "every message that's published has that and then every message that's published has this and this is the content header",
    "start": "843440",
    "end": "849839"
  },
  {
    "text": "frame and you'll see there's a pattern here we have these containers that then break down to another container that then",
    "start": "849839",
    "end": "855360"
  },
  {
    "text": "break down to another container in this case we're saying we're a content header frame on channel number",
    "start": "855360",
    "end": "861839"
  },
  {
    "text": "one and we have 45 bytes worth of data and within that we're keeping track of",
    "start": "861839",
    "end": "869440"
  },
  {
    "text": "the body size and then this awesome number here there's a little algorithm with bit packing to",
    "start": "869760",
    "end": "876480"
  },
  {
    "text": "determine what fields out of all of the message properties get carried along so",
    "start": "876480",
    "end": "881760"
  },
  {
    "text": "content type app id the timestamp",
    "start": "881760",
    "end": "887440"
  },
  {
    "text": "and i couldn't see what the right field was but mandatory oh keep it in memory base delivery mode",
    "start": "888079",
    "end": "897279"
  },
  {
    "text": "and finally we have the body frame notice this is a different frame type",
    "start": "897279",
    "end": "902480"
  },
  {
    "text": "3 and on channel 1 and we have 55 bytes worth of data and in this case we have a json payload",
    "start": "902480",
    "end": "911040"
  },
  {
    "text": "the json payload is opaque the actual message body that goes into rabbitmq is opaque",
    "start": "911040",
    "end": "916880"
  },
  {
    "text": "but it's the only thing about your message that's opaque to rabbitmq that it doesn't interrogate",
    "start": "916880",
    "end": "922560"
  },
  {
    "text": "when your message comes in the when you're publishing to rabbitmq it actually is looking at for example",
    "start": "922560",
    "end": "929279"
  },
  {
    "text": "the content headers and decodes the amq frame amqp frame every time how many of you have heard",
    "start": "929279",
    "end": "937519"
  },
  {
    "text": "the uh advice or general philosophy that headers",
    "start": "937519",
    "end": "945600"
  },
  {
    "text": "are slow the amqp message property headers",
    "start": "945600",
    "end": "951279"
  },
  {
    "text": "only a few of you that's cool uh it it actually can be true as a generalization it's not",
    "start": "951440",
    "end": "958800"
  },
  {
    "text": "but one of the reasons why it can be slow is basically for every message that you",
    "start": "958800",
    "end": "965360"
  },
  {
    "text": "have you have this arbitrary key value table that is getting decoded",
    "start": "965360",
    "end": "970639"
  },
  {
    "text": "every time a message comes into rabbitmq so if it's too big it basically needs to",
    "start": "970639",
    "end": "977839"
  },
  {
    "text": "allocate more memory so not only does it have the opaque payload that or the binary payload that",
    "start": "977839",
    "end": "983600"
  },
  {
    "text": "comes in but then it has to basically deserialize all that wire data into objects that it uses",
    "start": "983600",
    "end": "991600"
  },
  {
    "text": "the interesting thing is it's not the headers exchange that's slow but merely the act of decoding",
    "start": "991600",
    "end": "999360"
  },
  {
    "text": "the frame if you have too many values in the header fields themselves",
    "start": "999360",
    "end": "1005680"
  },
  {
    "start": "1008000",
    "end": "1643000"
  },
  {
    "text": "so that's it that was the low level stuff did we go too low well uh so message publishing so it's",
    "start": "1008160",
    "end": "1014959"
  },
  {
    "text": "interesting um when you think about how you answer questions about rabbitmq you may answer them at a",
    "start": "1014959",
    "end": "1021839"
  },
  {
    "text": "high level but really what you're doing is you're answering questions about the protocol or the",
    "start": "1021839",
    "end": "1029038"
  },
  {
    "text": "model so for example in this graph we talk about how do we",
    "start": "1029039",
    "end": "1034160"
  },
  {
    "text": "publish messages as quickly as possible",
    "start": "1034160",
    "end": "1039839"
  },
  {
    "text": "at the fastest end there's no guarantees in message publishing and the reason why that's fast is it's",
    "start": "1039919",
    "end": "1046480"
  },
  {
    "text": "fire and forget right we're just sending those three plus frames for every message",
    "start": "1046480",
    "end": "1052080"
  },
  {
    "text": "as quickly as we can and if something happens to it in rabbitmq",
    "start": "1052080",
    "end": "1057360"
  },
  {
    "text": "that's great if nothing happens i don't care",
    "start": "1057360",
    "end": "1062240"
  },
  {
    "text": "for me in in the ways that i use rabbitmq",
    "start": "1062559",
    "end": "1068400"
  },
  {
    "text": "that doesn't work for our business i would imagine that for most of you that's the case as well",
    "start": "1068400",
    "end": "1073919"
  },
  {
    "text": "so next as we go down here you can see as we get to safer and safer guarantees",
    "start": "1073919",
    "end": "1080240"
  },
  {
    "text": "around message delivery it gets slower and and so then you have",
    "start": "1080240",
    "end": "1085600"
  },
  {
    "text": "to think about why is that and so when we think about notification on failure",
    "start": "1085600",
    "end": "1091520"
  },
  {
    "text": "what does that mean it means that we're telling rabbit hey we want you to take this message and",
    "start": "1091520",
    "end": "1097440"
  },
  {
    "text": "then tell us if you couldn't route it if basically the routing key that we provided you in combination with",
    "start": "1097440",
    "end": "1103120"
  },
  {
    "text": "the exchange left it in a state where you couldn't put it into a queue",
    "start": "1103120",
    "end": "1110400"
  },
  {
    "text": "and then we have publisher confirmations publisher confirmations are awesome",
    "start": "1110400",
    "end": "1116000"
  },
  {
    "text": "they're very lightweight compared to all the other alternatives which is to say that when you send those three",
    "start": "1116000",
    "end": "1121919"
  },
  {
    "text": "plus frames to publish a message rabbitmq is going to acknowledge the",
    "start": "1121919",
    "end": "1127280"
  },
  {
    "text": "fact that you receive that message and if you're a fast publisher it'll acknowledge the fact that you sent",
    "start": "1127280",
    "end": "1133520"
  },
  {
    "text": "that message or maybe multiple messages but really when it comes down to it",
    "start": "1133520",
    "end": "1141600"
  },
  {
    "text": "the notification on failure is going to come in the way of a channel close our pc publisher confirmations are going",
    "start": "1142080",
    "end": "1148320"
  },
  {
    "text": "to come in the way of a basic ack rpc alternate exchanges are not part of",
    "start": "1148320",
    "end": "1153679"
  },
  {
    "text": "the amqp protocol but are an extension to them but put in place by rabbit and basically",
    "start": "1153679",
    "end": "1159280"
  },
  {
    "text": "what it's going to do is in the case of failure to route a message to what you've said to route it to",
    "start": "1159280",
    "end": "1164559"
  },
  {
    "text": "it'll put it somewhere else haq's",
    "start": "1164559",
    "end": "1169760"
  },
  {
    "text": "or mirrored cues they're slower but they're only slower because that",
    "start": "1170160",
    "end": "1177039"
  },
  {
    "text": "message is coming in and it has to replicate out across all the rabbitmq nodes in the cluster that you've defined",
    "start": "1177039",
    "end": "1182559"
  },
  {
    "text": "from a number of uh replicas that you want in the queue",
    "start": "1182559",
    "end": "1189039"
  },
  {
    "text": "think of it like multi-master replication in a database it's gotta arbitrate i've received this",
    "start": "1189039",
    "end": "1194720"
  },
  {
    "text": "message i know it's in all the cues that it's supposed to be in i've published it out i know it's been removed",
    "start": "1194720",
    "end": "1200480"
  },
  {
    "text": "so that's what makes it slower transactions so that's the tx class within amqp",
    "start": "1200480",
    "end": "1208240"
  },
  {
    "text": "that's pretty slow just like with databases in fact it is a database transaction",
    "start": "1208240",
    "end": "1214640"
  },
  {
    "text": "with commit and rollback i would advise you just steer clear of it they implement it it's in the spec",
    "start": "1214640",
    "end": "1221919"
  },
  {
    "text": "but there are other ways to get at that so then when you start combining things like haqqs",
    "start": "1221919",
    "end": "1227280"
  },
  {
    "text": "with transactions obviously these are additive in the operations that they're performing at the protocol level or at",
    "start": "1227280",
    "end": "1233600"
  },
  {
    "text": "the cluster level so that's why they slow down and finally persisted messages",
    "start": "1233600",
    "end": "1238640"
  },
  {
    "text": "now i could have persisted messages with no guarantees but they're still slower and that's because it's writing",
    "start": "1238640",
    "end": "1245200"
  },
  {
    "text": "it to disk so if you think about what rabbitmq is doing underneath the covers",
    "start": "1245200",
    "end": "1250799"
  },
  {
    "text": "it basically has a database and if in that same analog every queue is a table",
    "start": "1250799",
    "end": "1255919"
  },
  {
    "text": "and you're appending rows to those tables and removing rows from those tables when you're dequeuing",
    "start": "1255919",
    "end": "1261520"
  },
  {
    "text": "and so if you have delivery mode 2 where you're persisting messages now we have to write it to disk fsync",
    "start": "1261520",
    "end": "1268880"
  },
  {
    "text": "and wait for the file system to say yes i've written that that message to",
    "start": "1268880",
    "end": "1274159"
  },
  {
    "text": "disk which obviously is slower which means that you need to have hardware that can support the i o that you want",
    "start": "1274159",
    "end": "1281440"
  },
  {
    "text": "to put onto disk oftentimes it's easy to get into something like a message bus",
    "start": "1281440",
    "end": "1287600"
  },
  {
    "text": "and not think of the ramifications of those things of course you want message guarantees of course you don't want to lose anything because you're using",
    "start": "1287600",
    "end": "1294159"
  },
  {
    "text": "brabdmq as a central part of whatever application you're writing it's mission critical or it's important",
    "start": "1294159",
    "end": "1300960"
  },
  {
    "text": "to your business at the very least and you don't want to lose anything but finding the right balance of message",
    "start": "1300960",
    "end": "1306960"
  },
  {
    "text": "guarantees is really important because overdoing it can lead you down the road to why is",
    "start": "1306960",
    "end": "1313440"
  },
  {
    "text": "this so slow",
    "start": "1313440",
    "end": "1318720"
  },
  {
    "text": "likewise we have um the same types of questions about receiving messages generally",
    "start": "1318720",
    "end": "1325600"
  },
  {
    "text": "on the performance side we have the same type of concept why uh",
    "start": "1325600",
    "end": "1332799"
  },
  {
    "text": "what's the fastest way you know how do i get my throughput to be really high for this application again it comes down to the protocol",
    "start": "1332799",
    "end": "1340799"
  },
  {
    "text": "and the things that we're asking of the protocol right uh so for example at the fastest level",
    "start": "1340799",
    "end": "1346799"
  },
  {
    "text": "what you want to do is you want to consume messages and the reason why you want to consume messages",
    "start": "1346799",
    "end": "1353200"
  },
  {
    "text": "as opposed to at the very other side of here of getting messages is because of the protocol consuming",
    "start": "1353200",
    "end": "1360480"
  },
  {
    "text": "messages takes your application and it says hey rabbitmq send me messages as quickly as you can after i",
    "start": "1360480",
    "end": "1368480"
  },
  {
    "text": "ideally acknowledge that i've received them and processed them and told you you can remove it from the cube",
    "start": "1368480",
    "end": "1374559"
  },
  {
    "text": "and so that that from an operational perspective looks like rabbitmq saying hey here's three plus frames for this",
    "start": "1374559",
    "end": "1381360"
  },
  {
    "text": "message your application processing them and sending a basic acknowledge a basic ack back to rabbitmq",
    "start": "1381360",
    "end": "1388559"
  },
  {
    "text": "or a basic reject or knack back to rabbitmq saying hey we're cool send me the next message as",
    "start": "1388559",
    "end": "1395600"
  },
  {
    "text": "opposed to getting messages which is a basic get method that is saying hey",
    "start": "1395600",
    "end": "1400720"
  },
  {
    "text": "rabbitmq do you have any messages in your queue for me and rabbit's going to say hey okay let me go",
    "start": "1400720",
    "end": "1406400"
  },
  {
    "text": "look it can't do any optimization around trying to figure out how to send those messages to you as",
    "start": "1406400",
    "end": "1412240"
  },
  {
    "text": "quickly as possible you're just asking give me one message and then it's going to send it to",
    "start": "1412240",
    "end": "1418000"
  },
  {
    "text": "to you uh in a response and then you're going to process it and then you still have to act it",
    "start": "1418000",
    "end": "1424960"
  },
  {
    "text": "so it's not a very efficient way to get those messages so we look over here at qos greater than",
    "start": "1424960",
    "end": "1430720"
  },
  {
    "text": "one qos prefetch is basically telling rabbit how quickly can this one",
    "start": "1430720",
    "end": "1437840"
  },
  {
    "text": "connection this one channel process messages and based upon that",
    "start": "1437840",
    "end": "1443279"
  },
  {
    "text": "rabbit's going to try and optimize to pre-allocate out of the queue",
    "start": "1443279",
    "end": "1448559"
  },
  {
    "text": "that many messages and send them down to you and so sitting in your tcp buffer on",
    "start": "1448559",
    "end": "1454640"
  },
  {
    "text": "your machine are going to be that many messages for your client to pick up and process if",
    "start": "1454640",
    "end": "1459840"
  },
  {
    "text": "there are that many messages in the queue to give you so it is the fastest way to go but",
    "start": "1459840",
    "end": "1465600"
  },
  {
    "text": "a common mistake is to say okay i want you to send me messages as fast as possible so",
    "start": "1465600",
    "end": "1472000"
  },
  {
    "text": "why don't you send me 100 at a time now the problem with doing that is let's say that you're trying to",
    "start": "1472000",
    "end": "1478000"
  },
  {
    "text": "parallelize so you have a hundred consumers on a queue that have",
    "start": "1478000",
    "end": "1483039"
  },
  {
    "text": "all said give me a hundred messages ahead of time and then they can only process one message a",
    "start": "1483039",
    "end": "1489200"
  },
  {
    "text": "second you get into a very inefficient condition where you've pre-allocated too",
    "start": "1489200",
    "end": "1494480"
  },
  {
    "text": "much and actually your throughput goes down pretty dramatically whereas if you just said qos one because",
    "start": "1494480",
    "end": "1500960"
  },
  {
    "text": "you can process one message a second it's gonna send you those messages as quickly as you can process them",
    "start": "1500960",
    "end": "1507120"
  },
  {
    "text": "and get them into the pipeline and it's gonna distribute them better so that you don't have aging",
    "start": "1507120",
    "end": "1512159"
  },
  {
    "text": "messages sitting in the tcp buffer on your machine make sense",
    "start": "1512159",
    "end": "1519360"
  },
  {
    "text": "so uh noack mode technically you might say this is this",
    "start": "1520640",
    "end": "1526480"
  },
  {
    "text": "could be faster uh but what happens in noack mode and and i probably should have qualified this in the graph",
    "start": "1526480",
    "end": "1532240"
  },
  {
    "text": "is with a single consumer no act mode is going to be the fastest way to consume messages and that is",
    "start": "1532240",
    "end": "1538000"
  },
  {
    "text": "rapid mq is just opening the fire hose and sending you messages as quickly as it can as quickly as it comes into the queue",
    "start": "1538000",
    "end": "1543919"
  },
  {
    "text": "they're going to sit in your tcp buffer the problem with that is unless your",
    "start": "1543919",
    "end": "1549279"
  },
  {
    "text": "applications have some sort of really really awesome way of dealing with",
    "start": "1549279",
    "end": "1555200"
  },
  {
    "text": "understanding what data is available to it before it ever gets to it which probably is not something that's",
    "start": "1555200",
    "end": "1562640"
  },
  {
    "text": "possible if you were to seg fault",
    "start": "1562640",
    "end": "1567760"
  },
  {
    "text": "your application were to be restarted without having some sort of graceful way to to tell rabbit hey i don't want to",
    "start": "1567760",
    "end": "1574159"
  },
  {
    "text": "receive messages from you anymore and then wait to ensure that all your messages have been processed",
    "start": "1574159",
    "end": "1579279"
  },
  {
    "text": "you're leaving messages in the tcp buffer before and they're gone so you've lost data",
    "start": "1579279",
    "end": "1587679"
  },
  {
    "text": "so on the other side consuming with acknowledgements is going to be slower so qos",
    "start": "1588320",
    "end": "1596400"
  },
  {
    "text": "you're not worrying about it you're just saying basic consume uh you're receiving the messages you're acknowledging them and you're",
    "start": "1596400",
    "end": "1603840"
  },
  {
    "text": "just getting them one at a time as they go through transactions are even slower",
    "start": "1603840",
    "end": "1609039"
  },
  {
    "text": "but again getting is the slowest all really low level protocol stuff",
    "start": "1609039",
    "end": "1616799"
  },
  {
    "text": "which you don't really think of as an application or you shouldn't have to think of as an application developer",
    "start": "1616799",
    "end": "1622400"
  },
  {
    "text": "but as a rule of thumb when you're working on these applications in production",
    "start": "1622400",
    "end": "1627679"
  },
  {
    "text": "from an operational perspective and figuring out what's going on you start to just kind of understand the",
    "start": "1627679",
    "end": "1634720"
  },
  {
    "text": "behaviors from this perspective even if you don't know why",
    "start": "1634720",
    "end": "1641840"
  },
  {
    "start": "1643000",
    "end": "1682000"
  },
  {
    "text": "so moving on from the the low level part of the protocol",
    "start": "1645200",
    "end": "1651360"
  },
  {
    "text": "i want to ask the question how will you use rabbitmq",
    "start": "1652559",
    "end": "1658240"
  },
  {
    "text": "so i'm sure most of you are familiar with the term not invented here syndrome",
    "start": "1658240",
    "end": "1666880"
  },
  {
    "text": "basically when you think about how you use rabbitmq and the amq model and the way that you",
    "start": "1667520",
    "end": "1675679"
  },
  {
    "text": "deliver messages there are multiple paths that you can go down",
    "start": "1675679",
    "end": "1682320"
  },
  {
    "start": "1682000",
    "end": "1774000"
  },
  {
    "text": "there is the do it yourself method and i think this is probably one of the more popular ways to use",
    "start": "1682320",
    "end": "1688640"
  },
  {
    "text": "rabbitmq frankly this is the same type of thing that happens",
    "start": "1688640",
    "end": "1693679"
  },
  {
    "text": "within the http stack with web developers we have a protocol that has explicit",
    "start": "1693679",
    "end": "1701279"
  },
  {
    "text": "contracts that allow us to define behaviors and we may bypass",
    "start": "1701279",
    "end": "1706480"
  },
  {
    "text": "that and say hey i've got a message body and so in the message body i'm going to give my other application",
    "start": "1706480",
    "end": "1713120"
  },
  {
    "text": "all the information it needs to be able to know what to do with the message body and the message content itself",
    "start": "1713120",
    "end": "1720960"
  },
  {
    "text": "the same type of thing happens in http where you don't embrace for example status",
    "start": "1720960",
    "end": "1726399"
  },
  {
    "text": "codes in your responses beyond 200 or 404",
    "start": "1726399",
    "end": "1732240"
  },
  {
    "text": "and not realize that for example 429 is used for rate limiting you may just",
    "start": "1732240",
    "end": "1738480"
  },
  {
    "text": "have i'm going to return a 400 error to you and in my json response i'm going to have a",
    "start": "1738480",
    "end": "1744080"
  },
  {
    "text": "error that says you've been rate limited the same thing i've seen in multiple",
    "start": "1744080",
    "end": "1750640"
  },
  {
    "text": "rabbitmq environments where we may have a json and payload that that provides context",
    "start": "1750640",
    "end": "1758480"
  },
  {
    "text": "around the message and the message itself so as the picture kind of says you end up",
    "start": "1758480",
    "end": "1765120"
  },
  {
    "text": "building a tow truck that's sitting on top of another tow truck when rabbitmq provides all that that for",
    "start": "1765120",
    "end": "1772720"
  },
  {
    "text": "you so when i'm working with developers and",
    "start": "1772720",
    "end": "1778480"
  },
  {
    "start": "1774000",
    "end": "2712000"
  },
  {
    "text": "and talking about how to use rabbitmq and you know oftentimes saying hey use the model go look at the message properties",
    "start": "1778480",
    "end": "1786080"
  },
  {
    "text": "figure out uh how you can combine exchanges and routing keys and message",
    "start": "1786080",
    "end": "1792000"
  },
  {
    "text": "properties to provide the context to your messages so that the message body itself is is as",
    "start": "1792000",
    "end": "1799279"
  },
  {
    "text": "terse or limited to the content you actually care about at the message level and go from there",
    "start": "1799279",
    "end": "1806559"
  },
  {
    "text": "so it's really interesting this was a debate that i had very early on at meet me with my vp of engineering",
    "start": "1806559",
    "end": "1814880"
  },
  {
    "text": "i wanted to embrace the the model and use properties to describe the message and he wanted the flexibility to move",
    "start": "1814880",
    "end": "1821440"
  },
  {
    "text": "away from rabbitmq if we wanted to or needed to to something else and so his perspective was",
    "start": "1821440",
    "end": "1827760"
  },
  {
    "text": "we take and we put everything in the payload and our applications then understand how the contract of the payload works",
    "start": "1827760",
    "end": "1835039"
  },
  {
    "text": "to determine how we do messages what the content is when when the message was created what",
    "start": "1835039",
    "end": "1841760"
  },
  {
    "text": "it's supposed to be used for and my perspective was let's use the",
    "start": "1841760",
    "end": "1848320"
  },
  {
    "text": "message properties for that because it's more efficient binary serialization and deserialization",
    "start": "1848320",
    "end": "1854640"
  },
  {
    "text": "in amqp in all of your client libraries is more efficient than json decoding if you're",
    "start": "1854640",
    "end": "1859919"
  },
  {
    "text": "using json as your message payload body which i think is probably the most popular thing to do",
    "start": "1859919",
    "end": "1865600"
  },
  {
    "text": "who has any unusual or non json based bodies that are not things like images",
    "start": "1865600",
    "end": "1871440"
  },
  {
    "text": "very back what are you using",
    "start": "1871440",
    "end": "1874639"
  },
  {
    "text": "very cool i i do the same thing i use avro datums for my payloads uh basically",
    "start": "1876559",
    "end": "1883840"
  },
  {
    "text": "um json uh or other uh serialization formats inside",
    "start": "1883840",
    "end": "1890559"
  },
  {
    "text": "uh non-contract non-contract-based serialization formats inside the payload body mean that you're consuming applications",
    "start": "1890559",
    "end": "1896799"
  },
  {
    "text": "and your publishing applications have to obviously serialize deserialize",
    "start": "1896799",
    "end": "1901919"
  },
  {
    "text": "those as well there may be more efficient ways to get at that",
    "start": "1901919",
    "end": "1907760"
  },
  {
    "text": "um so there are multiple ways to use rabbitmq obviously",
    "start": "1907760",
    "end": "1913919"
  },
  {
    "text": "one of the ones that is is very obvious is to use it for your application's own rpc",
    "start": "1914799",
    "end": "1922720"
  },
  {
    "text": "how many people use rpc within rabbit explicit rpc so",
    "start": "1922720",
    "end": "1929360"
  },
  {
    "text": "when you think about making your explicit rpc i've highlighted in green all of the",
    "start": "1929360",
    "end": "1936159"
  },
  {
    "text": "message properties that you should be thinking about using for example app id perhaps your consumer applications for",
    "start": "1936159",
    "end": "1942880"
  },
  {
    "text": "your rpc care about where the message is coming from as part of their",
    "start": "1942880",
    "end": "1948000"
  },
  {
    "text": "decision process as part of the logic of what's processing the data content and coding and content type are",
    "start": "1948000",
    "end": "1955120"
  },
  {
    "text": "pretty obvious but i highly recommend even if you have an implicit contract in",
    "start": "1955120",
    "end": "1962640"
  },
  {
    "text": "your publishing that embracing content encoding and content type is a very good way to",
    "start": "1962640",
    "end": "1970399"
  },
  {
    "text": "future proof your application content and coding basically saying uh i",
    "start": "1970399",
    "end": "1976000"
  },
  {
    "text": "have compressed content um you know it's g-zipping uh compressed or b-zip or whatever it might",
    "start": "1976000",
    "end": "1982159"
  },
  {
    "text": "be content type being the mime type of the data uh as it's serialized or if it's text or",
    "start": "1982159",
    "end": "1988720"
  },
  {
    "text": "whatever it is correlation id how many people are using correlation ids",
    "start": "1988720",
    "end": "1994799"
  },
  {
    "text": "really useful when you're trying to debug your systems expiration and the idea of an rpc by the",
    "start": "1994799",
    "end": "2001760"
  },
  {
    "text": "time that the remote consumer that's processing and doing the work receives it it may be too late so by setting an expiration you can let",
    "start": "2001760",
    "end": "2009279"
  },
  {
    "text": "that consumer know to throw it away message id is really important when it comes to rpcs because",
    "start": "2009279",
    "end": "2015360"
  },
  {
    "text": "you want to be able to coordinate the response back and know that you're receiving back the right",
    "start": "2015360",
    "end": "2022320"
  },
  {
    "text": "message in a highly concurrent environment so you can correlate those things and reply to so obviously really",
    "start": "2022320",
    "end": "2030080"
  },
  {
    "text": "important and if we come through here we look at this diagram here i'm not using the",
    "start": "2030080",
    "end": "2036320"
  },
  {
    "text": "built-in i forget is it called fast reply to there's a built-in reply to behavior",
    "start": "2036320",
    "end": "2043200"
  },
  {
    "text": "where replies don't have to go through a queue so obviously i'm not talking about that",
    "start": "2043200",
    "end": "2049280"
  },
  {
    "text": "but we have this idea of a publisher and a consumer that is generating an rpc message",
    "start": "2049280",
    "end": "2055599"
  },
  {
    "text": "publishing to an exchange it goes into a worker queue again we have these combination consumer",
    "start": "2055599",
    "end": "2061280"
  },
  {
    "text": "publishers that are processing and doing our work sending it back to a response queue and",
    "start": "2061280",
    "end": "2066720"
  },
  {
    "text": "we're going to use the reply to header to say what that response to queue is is going to be",
    "start": "2066720",
    "end": "2073599"
  },
  {
    "text": "keeping track of the timestamp of when the message itself was published uh is",
    "start": "2073599",
    "end": "2080240"
  },
  {
    "text": "important i would caution against the use of timestamp to describe data within the payload and",
    "start": "2080240",
    "end": "2088720"
  },
  {
    "text": "instead kind of contrary to what i've been saying about everything else i would use this as an attribute of the",
    "start": "2088720",
    "end": "2094480"
  },
  {
    "text": "message type really important even if you're",
    "start": "2094480",
    "end": "2100240"
  },
  {
    "text": "implicitly relying on behaviors in rabbitmq of saying hey i know it's made it into this queue",
    "start": "2100240",
    "end": "2106480"
  },
  {
    "text": "over here so this is the type of rpc that i'm receiving having this data",
    "start": "2106480",
    "end": "2112640"
  },
  {
    "text": "from either debugging or historical purposes or just validating from a consumer perspective",
    "start": "2112640",
    "end": "2118320"
  },
  {
    "text": "in case of operational misconfiguration is really useful you can interrogate this when you",
    "start": "2118320",
    "end": "2123760"
  },
  {
    "text": "receive a message and say hey you know what somebody sent me an rpc to do something and i'm not the type of consumer to do that",
    "start": "2123760",
    "end": "2130960"
  },
  {
    "text": "so i'm just going to discard this message or i'm going to take some sort of alternate behavior and",
    "start": "2130960",
    "end": "2136800"
  },
  {
    "text": "finally user id like app id really useful if you want to be able to",
    "start": "2136800",
    "end": "2143280"
  },
  {
    "text": "interrogate those to determine if you are allowed to do the thing that you want to do",
    "start": "2143280",
    "end": "2150720"
  },
  {
    "text": "this is the way that i prefer to use revenue q how many people use it more like a fire hose of messages or",
    "start": "2153280",
    "end": "2159359"
  },
  {
    "text": "events where you're just kind of publishing and you tack on all sorts of different",
    "start": "2159359",
    "end": "2165280"
  },
  {
    "text": "consumer types to the same messages a few of you okay so again we have uh",
    "start": "2165280",
    "end": "2172640"
  },
  {
    "text": "these properties up here you know the same things apply to what i was saying",
    "start": "2172640",
    "end": "2178160"
  },
  {
    "text": "um coming over here in this concept i may have uh different um things coming in from my",
    "start": "2178160",
    "end": "2186000"
  },
  {
    "text": "various publishers in this case related to images and by using the routing keys and",
    "start": "2186000",
    "end": "2192320"
  },
  {
    "text": "binding keys i can multi-purpose these messages so",
    "start": "2192320",
    "end": "2197599"
  },
  {
    "text": "having a new profile image could do all sorts of cool stuff you know give us our facial recognition",
    "start": "2197599",
    "end": "2203920"
  },
  {
    "text": "uh hash the image so that i could look for abusive patterns or that sort of thing",
    "start": "2203920",
    "end": "2210160"
  },
  {
    "text": "and store it in the case of something like facebook and then i might all the way down here",
    "start": "2210160",
    "end": "2216079"
  },
  {
    "text": "just want to audit everything that's going on in my system and so i could just say give me everything related to images i'm going",
    "start": "2216079",
    "end": "2221920"
  },
  {
    "text": "to audit them and stick them in logs or something like that you know really allows you to",
    "start": "2221920",
    "end": "2227599"
  },
  {
    "text": "multi-purpose that thing coming into rabbit mq in an efficient way",
    "start": "2227599",
    "end": "2233039"
  },
  {
    "text": "so common user problems and all these somewhat come down to not understanding amqp right uh who's",
    "start": "2236960",
    "end": "2244640"
  },
  {
    "text": "had problems with heartbeats there's i know it's more than two or three of you",
    "start": "2244640",
    "end": "2252000"
  },
  {
    "text": "probably using the python library or the php library i would imagine",
    "start": "2252000",
    "end": "2258640"
  },
  {
    "text": "that's because heartbeats are bi-directional rpcs single threaded applications that are",
    "start": "2258640",
    "end": "2265839"
  },
  {
    "text": "doing work after they've received a message can't respond to the heartbeat request coming from the server",
    "start": "2265839",
    "end": "2273200"
  },
  {
    "text": "if you don't know the protocol and you don't understand that what you'll end up with is a consumer",
    "start": "2273200",
    "end": "2279119"
  },
  {
    "text": "application or a publisher application that is doing just fine it's gone it's",
    "start": "2279119",
    "end": "2284640"
  },
  {
    "text": "doing all its stuff and then it disconnects and you don't know why and maybe it disconnects at inopportune",
    "start": "2284640",
    "end": "2291040"
  },
  {
    "text": "times like you're in the middle of of converting a very big video to a",
    "start": "2291040",
    "end": "2296160"
  },
  {
    "text": "different format or something like that not understanding that the throttling of",
    "start": "2296160",
    "end": "2301920"
  },
  {
    "text": "messages you know you're publishing publishing publishing you've got this application",
    "start": "2301920",
    "end": "2307839"
  },
  {
    "text": "that basically is like a super high request rate application that's sending a message on every request to",
    "start": "2307839",
    "end": "2314240"
  },
  {
    "text": "rabbitmq and you're not letting the client library breathe in a single threaded application and you get disconnected or",
    "start": "2314240",
    "end": "2320960"
  },
  {
    "text": "throttled somewhere along the line rabbitmq is trying to say hey slow down",
    "start": "2320960",
    "end": "2327040"
  },
  {
    "text": "uh you're sending you're using too much memory or you're publishing too fast in",
    "start": "2327040",
    "end": "2332720"
  },
  {
    "text": "relation to how fast you're consuming and you're using too many resources",
    "start": "2332720",
    "end": "2338079"
  },
  {
    "text": "and there are multiple ways for rabbitmq to respond to that and the first way is these days is to",
    "start": "2338079",
    "end": "2345599"
  },
  {
    "text": "send you a connection blocked rpc so your application is going to receive a frame from rabbitmq that says",
    "start": "2345599",
    "end": "2352640"
  },
  {
    "text": "hey i want you to slow down or actually it says hey you're publishing too fast and i'm",
    "start": "2352640",
    "end": "2359280"
  },
  {
    "text": "blocking you from publishing but if your application's not breathing if it's not listening",
    "start": "2359280",
    "end": "2365200"
  },
  {
    "text": "for what rabbit's telling you you're never going to know so ultimately the emergency brake in",
    "start": "2365200",
    "end": "2372480"
  },
  {
    "text": "that scenario is tcp back pressure where rabbitmq just stops reading from the socket that you're",
    "start": "2372480",
    "end": "2377839"
  },
  {
    "text": "sending data to it in and that's not intuitive and what ends up happening is your application ends up",
    "start": "2377839",
    "end": "2383760"
  },
  {
    "text": "you know locking up or having some sort of poor performance related behaviors",
    "start": "2383760",
    "end": "2388800"
  },
  {
    "text": "and not understanding that bi-directional nature of the rpc protocol between the server and the",
    "start": "2388800",
    "end": "2394640"
  },
  {
    "text": "client and the fact the server is going to send commands or or invoke methods on your client",
    "start": "2394640",
    "end": "2400560"
  },
  {
    "text": "if you're not thinking about that you can run into weird edge cases that you weren't expecting",
    "start": "2400560",
    "end": "2405920"
  },
  {
    "text": "another fun one which i mentioned before is channels so one of the interesting things of supporting client library",
    "start": "2405920",
    "end": "2413680"
  },
  {
    "text": "in the open source world is the number of support requests you receive from people who are relatively new",
    "start": "2413680",
    "end": "2419760"
  },
  {
    "text": "to using rabbitmq and saying hey i'm trying to write this multi-threaded",
    "start": "2419760",
    "end": "2426880"
  },
  {
    "text": "application or whatever it is and i've got like 50 channels open doing",
    "start": "2426880",
    "end": "2432800"
  },
  {
    "text": "all these different things and i'm either getting poor performance",
    "start": "2432800",
    "end": "2438000"
  },
  {
    "text": "or or application behavior that is hard to figure out what's going on",
    "start": "2438000",
    "end": "2443599"
  },
  {
    "text": "and in essence it's too complex you know simplify bring",
    "start": "2443599",
    "end": "2450400"
  },
  {
    "text": "it down use a channel one channel per connection period and when that closes open another",
    "start": "2450400",
    "end": "2457920"
  },
  {
    "text": "one if you want to have some level of concurrency in your application maybe you need to open multiple",
    "start": "2457920",
    "end": "2463760"
  },
  {
    "text": "connections but beware because connections and channels have overhead and rabbit mq",
    "start": "2463760",
    "end": "2468880"
  },
  {
    "text": "this goes down to understanding how rabbitmq's written and the fact that it's written in erlang and while highly efficient",
    "start": "2468880",
    "end": "2477040"
  },
  {
    "text": "every channel every connection is a process within the rabbitmq server in the erlang vm and so",
    "start": "2477040",
    "end": "2484800"
  },
  {
    "text": "as you're opening them and closing them you're basically using resources on the server side",
    "start": "2484800",
    "end": "2491680"
  },
  {
    "text": "and so if you have more than you actually need to do the work that you're doing you're just making rabbit work harder",
    "start": "2491680",
    "end": "2499760"
  },
  {
    "text": "and then you have slow performance due to poor choices one of the things that happened when i first came into",
    "start": "2500079",
    "end": "2508240"
  },
  {
    "text": "aweber uh it was they had a rabbitmq cluster uh and they were using a python stack",
    "start": "2508240",
    "end": "2514480"
  },
  {
    "text": "and they were using my client library that i had written and they couldn't figure out why it's so slow so they're like kevin you're",
    "start": "2514480",
    "end": "2521040"
  },
  {
    "text": "you know rabbitmq hey you know this client library your stuff sucks it's so slow and really",
    "start": "2521040",
    "end": "2528240"
  },
  {
    "text": "uh like well that doesn't make sense because i have applications that are doing tens of thousands of messages per",
    "start": "2528240",
    "end": "2533440"
  },
  {
    "text": "second and and they're not slow uh and it turned out it was because they didn't",
    "start": "2533440",
    "end": "2538560"
  },
  {
    "text": "understand the ramifications of delivery mode two like i was talking about earlier where rabbitmq was persisting every message to",
    "start": "2538560",
    "end": "2545119"
  },
  {
    "text": "disk they're thinking hey these messages are really important and uh so we're gonna have a three node",
    "start": "2545119",
    "end": "2551280"
  },
  {
    "text": "rabbit cluster running on virtual machines uh with 20 gig hard drives and eight gigs of ram",
    "start": "2551280",
    "end": "2557040"
  },
  {
    "text": "and um four processors and we're gonna publish three to four thousand messages per",
    "start": "2557040",
    "end": "2563599"
  },
  {
    "text": "second with highly available cues where it's synchronized across all three nodes and we're going to write them to disk",
    "start": "2563599",
    "end": "2570960"
  },
  {
    "text": "of course it's going to be slow you're asking rabbit to have multi-master replication with persisted rows",
    "start": "2570960",
    "end": "2578160"
  },
  {
    "text": "not much you can do about that other than say hey where's the level of message deliverability guarantee that i",
    "start": "2578160",
    "end": "2583599"
  },
  {
    "text": "care about and go from there",
    "start": "2583599",
    "end": "2587680"
  },
  {
    "text": "so i talk about how uh knowing rabbit mq or rocking rabbit mq",
    "start": "2590240",
    "end": "2596160"
  },
  {
    "text": "is uh to know amqp and it's really important uh in knowing amqp that there are warts",
    "start": "2596160",
    "end": "2603520"
  },
  {
    "text": "um i i happen to both love and hate the protocol uh i i think it's",
    "start": "2603520",
    "end": "2610240"
  },
  {
    "text": "really uh good in in many ways but if you go to the rabbit site you'll see there are 30 items in the 091",
    "start": "2610240",
    "end": "2618400"
  },
  {
    "text": "errata page and that includes logic errors in the spec",
    "start": "2618400",
    "end": "2623680"
  },
  {
    "text": "incompalit incompatibilities between the versions in the low level marshalling of frames",
    "start": "2623680",
    "end": "2630000"
  },
  {
    "text": "behavioral differences one of the things that's really tough in",
    "start": "2630000",
    "end": "2636880"
  },
  {
    "text": "or at least used to be was dealing with authentication failure issues because you would connect",
    "start": "2637119",
    "end": "2644000"
  },
  {
    "text": "and as spec'd rabbit mq or any other amqp broker if you fail to",
    "start": "2644000",
    "end": "2650240"
  },
  {
    "text": "authenticate it just closes the connection and it doesn't even have an authentication failed uh",
    "start": "2650240",
    "end": "2657280"
  },
  {
    "text": "exception response to that closing it just closes the connection at whatever particular frame part of the",
    "start": "2657280",
    "end": "2662480"
  },
  {
    "text": "sequence it was in that you're trying to establish it so uh in the pica library i created an",
    "start": "2662480",
    "end": "2667760"
  },
  {
    "text": "exception called probable authentication failure which was to say that i think this is probably",
    "start": "2667760",
    "end": "2673440"
  },
  {
    "text": "an authentication failure because of where in the startup sequence that occurred but i don't know because it can't tell me",
    "start": "2673440",
    "end": "2679520"
  },
  {
    "text": "fortunately the rabbitmq team added a capability and an exception code that will",
    "start": "2679520",
    "end": "2686560"
  },
  {
    "text": "explicitly tell you that but uh going back a lot of what you",
    "start": "2686560",
    "end": "2692000"
  },
  {
    "text": "heard me talk about was that bi-directional rpc nature i think ultimately uh the fact that you",
    "start": "2692000",
    "end": "2697280"
  },
  {
    "text": "can multiplex and do multiple things on a connection at any given time um is somewhat of the root of most of",
    "start": "2697280",
    "end": "2704319"
  },
  {
    "text": "the problems with amqp091 and so that the responsibilities of a client really come in there",
    "start": "2704319",
    "end": "2712078"
  },
  {
    "start": "2712000",
    "end": "2951000"
  },
  {
    "text": "um so with those warts we look at what robinhood's rabbitmq has done to",
    "start": "2712319",
    "end": "2718160"
  },
  {
    "text": "address those and that's really cool so amqp is extensible which is awesome",
    "start": "2718160",
    "end": "2726720"
  },
  {
    "text": "first is federation and it's important to think about you think about the features in rabbitmq and they're building on top",
    "start": "2727040",
    "end": "2733200"
  },
  {
    "text": "of amqp so when you think about the behavior federation it's implementing the amq the amq model",
    "start": "2733200",
    "end": "2740079"
  },
  {
    "text": "and it just has built-in consumers and publishers that are working underneath the hood to do the things that you're doing",
    "start": "2740079",
    "end": "2745440"
  },
  {
    "text": "so with federated exchanges we basically have an upstream queue",
    "start": "2745440",
    "end": "2751680"
  },
  {
    "text": "that's an internal queue declared by rabbitmq that's bound to the exchange and so your publishers are going into",
    "start": "2751680",
    "end": "2758720"
  },
  {
    "text": "that upstream queue and then you have the federated uh publisher that's consuming from that",
    "start": "2758720",
    "end": "2764640"
  },
  {
    "text": "queue and publishing to the exchange on the other side that's important to say i box these off but this guy can live here or here",
    "start": "2764640",
    "end": "2770960"
  },
  {
    "text": "and that's the case with all of these if you have federated queues right it's the same",
    "start": "2770960",
    "end": "2776000"
  },
  {
    "text": "it's an amqp model or the amq model i'm sorry and we we publish into the upstream queue and if i",
    "start": "2776000",
    "end": "2781760"
  },
  {
    "text": "have a consumer hanging off this queue over here we basically have this consumer publisher that",
    "start": "2781760",
    "end": "2787760"
  },
  {
    "text": "connects to the upstream and consumes messages and publishes them into that queue",
    "start": "2787760",
    "end": "2792800"
  },
  {
    "text": "it in essence you could write this stuff yourself uh it's the same type of things that you're writing when you're writing",
    "start": "2792800",
    "end": "2798560"
  },
  {
    "text": "publishers and consumers it just happens to be built in same is true with shovel these crap",
    "start": "2798560",
    "end": "2804000"
  },
  {
    "text": "these diagrams are not terribly different but the behaviors of how they work are slightly different",
    "start": "2804000",
    "end": "2810560"
  },
  {
    "text": "if you're going to shovel to an exchange you basically have your source queue and a consumer publisher built into",
    "start": "2810560",
    "end": "2816400"
  },
  {
    "text": "rabbitmq that's publishing to the exchange on the downstream side or the destination side if you're doing",
    "start": "2816400",
    "end": "2822400"
  },
  {
    "text": "a queue you basically have your source queue and you have that consumer publisher that's",
    "start": "2822400",
    "end": "2827680"
  },
  {
    "text": "going to that queue on the other side built into rabbit maybe mysterious because you're just seeing it in the ui",
    "start": "2827680",
    "end": "2833760"
  },
  {
    "text": "or you're seeing it from the command line but ultimately it's just like your",
    "start": "2833760",
    "end": "2839040"
  },
  {
    "text": "applications they're just written in erlang as part of rabbitmq but doing the same exact things basic",
    "start": "2839040",
    "end": "2845760"
  },
  {
    "text": "publish basic hack protocol plugins this might be",
    "start": "2845760",
    "end": "2851359"
  },
  {
    "text": "surprising to some of you how many of you use protocols other than amqp with rabbit",
    "start": "2851359",
    "end": "2857200"
  },
  {
    "text": "mqtt amqp 1.0 underneath the covers the plugins are",
    "start": "2857200",
    "end": "2863440"
  },
  {
    "text": "just translators that are taking whatever protocol you're talking whether you're publishing methods uh or publishing",
    "start": "2863440",
    "end": "2870880"
  },
  {
    "text": "messages or consuming messages and they're turning it into amqp091 with",
    "start": "2870880",
    "end": "2876160"
  },
  {
    "text": "an internal client and talking to it",
    "start": "2876160",
    "end": "2880400"
  },
  {
    "text": "surprise anybody no",
    "start": "2882079",
    "end": "2887839"
  },
  {
    "text": "uh and then there's all these awesome connections i don't have a lot of time left so i'm going to skip over reading",
    "start": "2888079",
    "end": "2893520"
  },
  {
    "text": "through the list but basically the rabbit mq team extended the amq",
    "start": "2893520",
    "end": "2899599"
  },
  {
    "text": "protocol adding new classes and methods so for example",
    "start": "2899599",
    "end": "2905760"
  },
  {
    "text": "consumer or publisher confirmations the confirm class is an extension to the amq protocol",
    "start": "2905760",
    "end": "2913359"
  },
  {
    "text": "a basic knack is a correction of the fact that you can't multi-reject",
    "start": "2913359",
    "end": "2918960"
  },
  {
    "text": "the same way you can multi-act so they added a basic knack frame that or basic neck method i'm sorry that",
    "start": "2918960",
    "end": "2924880"
  },
  {
    "text": "allowed you to negatively acknowledge multiple messages",
    "start": "2924880",
    "end": "2929839"
  },
  {
    "text": "as i mentioned before authentication failure notifications all of the things all the the rabbitmq",
    "start": "2930800",
    "end": "2936559"
  },
  {
    "text": "specific stuff these are extensions to the protocol itself or the spec or the methods",
    "start": "2936559",
    "end": "2943599"
  },
  {
    "text": "their features within rabbit but they build upon the amqp",
    "start": "2943599",
    "end": "2949440"
  },
  {
    "start": "2951000",
    "end": "3066000"
  },
  {
    "text": "finally we'll talk about the architectural impact of embracing amqp when you move beyond this idea of rabbit",
    "start": "2952160",
    "end": "2958640"
  },
  {
    "text": "as a message broker and i'm going to shove all my stuff in the message and let my applications sorted out you get to having",
    "start": "2958640",
    "end": "2965440"
  },
  {
    "text": "simplicity extensibility of your messages using them for multiple purposes",
    "start": "2965440",
    "end": "2970640"
  },
  {
    "text": "you get some robustness in your application framework and flexibility and use",
    "start": "2970640",
    "end": "2977280"
  },
  {
    "text": "so using message properties uh you know basically if you declare",
    "start": "2977280",
    "end": "2985280"
  },
  {
    "text": "instead of implicitly relying on application behaviors that you're compressing them or whatever it",
    "start": "2985280",
    "end": "2990720"
  },
  {
    "text": "is you're doing from an encoding perspective you're specifying the content type you're allowing consumers of those",
    "start": "2990720",
    "end": "2996800"
  },
  {
    "text": "messages no matter what the consumer is something written in go erlang python perl",
    "start": "2996800",
    "end": "3002559"
  },
  {
    "text": "php ruby whatever it is it should be able to know by looking at the content type",
    "start": "3002559",
    "end": "3007920"
  },
  {
    "text": "explicitly how to deal with the way that the content is serialized",
    "start": "3007920",
    "end": "3013760"
  },
  {
    "text": "or stored within the message body type tells those consumers information about the message that it",
    "start": "3013760",
    "end": "3019680"
  },
  {
    "text": "doesn't have to define or divine i'm sorry from the message body itself",
    "start": "3019680",
    "end": "3025760"
  },
  {
    "text": "you get traceability and ease and debugging by using correlation id and message id",
    "start": "3025760",
    "end": "3033200"
  },
  {
    "text": "you know this idea of logging and being able to look across logs of all of your distributed applications and being able",
    "start": "3033200",
    "end": "3039920"
  },
  {
    "text": "to correlate behaviors or or a process by those ids and finally better debugging",
    "start": "3039920",
    "end": "3047839"
  },
  {
    "text": "if you don't use app id today i implore you to go back to your applications and do it because two to three years",
    "start": "3047839",
    "end": "3053440"
  },
  {
    "text": "from now when you're trying to do some sort of upgrade to a process and you don't know where the message is",
    "start": "3053440",
    "end": "3058559"
  },
  {
    "text": "coming from you're going to kick yourself app id is extremely useful from that perspective",
    "start": "3058559",
    "end": "3064960"
  },
  {
    "start": "3066000",
    "end": "3122000"
  },
  {
    "text": "finally uh by embracing this you get flexibility in your messages you can use them for multiple purposes if you're not",
    "start": "3066559",
    "end": "3073440"
  },
  {
    "text": "thinking about your messages beyond the scope of whatever it is that you're doing today",
    "start": "3073440",
    "end": "3079760"
  },
  {
    "text": "you're selling rabbit short so one of the things we do at aweber is we think of these as events",
    "start": "3079760",
    "end": "3086800"
  },
  {
    "text": "what happened in our ecosystem of our application and not only do those events get used by",
    "start": "3086800",
    "end": "3092319"
  },
  {
    "text": "consumer applications to do the tasks that we need to do they also get streamed into a data",
    "start": "3092319",
    "end": "3098640"
  },
  {
    "text": "warehouse so now we have this entire warehouse of an ecosystem of everything that's happened",
    "start": "3098640",
    "end": "3104720"
  },
  {
    "text": "in our environment that now we can use for bi or whatever other types of",
    "start": "3104720",
    "end": "3111119"
  },
  {
    "text": "analytical purposes we want to do or recover from failures because",
    "start": "3111119",
    "end": "3116240"
  },
  {
    "text": "behaviors happened in our environment that we weren't expecting",
    "start": "3116240",
    "end": "3120960"
  },
  {
    "start": "3122000",
    "end": "3140000"
  },
  {
    "text": "any questions i can answer for you",
    "start": "3122800",
    "end": "3139680"
  },
  {
    "text": "you",
    "start": "3139680",
    "end": "3141760"
  }
]