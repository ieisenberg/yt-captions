[
  {
    "text": "hi everyone my name is Jessica Dean and today we're going to be talking about bringing Eda to the containers world now",
    "start": "12360",
    "end": "18960"
  },
  {
    "text": "I realize that this is Eda day but just out of curiosity how many people in the audience already have familiarity and",
    "start": "18960",
    "end": "25840"
  },
  {
    "text": "experience with containers in any way shape or form okay kuber IES elastic container",
    "start": "25840",
    "end": "33600"
  },
  {
    "text": "service perfect okay that's more than I expected that's good so we're going to be talking about bringing Eda into your",
    "start": "33600",
    "end": "39800"
  },
  {
    "text": "specifically elastic container service world today just a brief agenda before we get going is we're going to walk",
    "start": "39800",
    "end": "46360"
  },
  {
    "text": "through understanding the landscape how the technology industry is Shifting and why we would even care to bring Eda into",
    "start": "46360",
    "end": "54399"
  },
  {
    "text": "the world of containers they're going to dive a little deeper and focus on serverless containers and and Eda and",
    "start": "54399",
    "end": "61039"
  },
  {
    "text": "how serverless applies to Containers as well we'll go even further and we'll",
    "start": "61039",
    "end": "66119"
  },
  {
    "text": "focus on some event- driven services at AWS that can integrate with a Amazon ECS",
    "start": "66119",
    "end": "72159"
  },
  {
    "text": "and fargate specifically and then we'll take a look at some real world scenarios of why you would leverage Eda in your",
    "start": "72159",
    "end": "80240"
  },
  {
    "text": "containerized world we'll wrap up with some best practices conclusion and resources for you so diving right in we",
    "start": "80240",
    "end": "88920"
  },
  {
    "text": "are in a chain driven world and this is very much a play on words right because you have event driven but really",
    "start": "88920",
    "end": "95360"
  },
  {
    "text": "everything that is happening in technology is because of the fact that we are driven by the Need For Change",
    "start": "95360",
    "end": "102520"
  },
  {
    "text": "there's increasingly volatile macro conditions in the industry as a result organizations have to be agile right",
    "start": "102520",
    "end": "109159"
  },
  {
    "text": "they have to iterate faster there's no long gone or the days of the traditional way of checking in code I have 10 lines",
    "start": "109159",
    "end": "116159"
  },
  {
    "text": "of code I'm going to push that to the next Sprint okay now I have 50 lines I'm push it another month or two okay but",
    "start": "116159",
    "end": "122159"
  },
  {
    "text": "before I know it by the end of the year I have thousands of lines of code and maybe I'm only doing one or two",
    "start": "122159",
    "end": "127399"
  },
  {
    "text": "deployments because God forbid I push it and everything breaks right we can't do",
    "start": "127399",
    "end": "132520"
  },
  {
    "text": "that anymore and so as a result we have to make sure that technology can be delivered much more rapidly can be",
    "start": "132520",
    "end": "138800"
  },
  {
    "text": "reliable and that we can keep up with that frequent Pace that we were no longer doing like I said the one to two",
    "start": "138800",
    "end": "144640"
  },
  {
    "text": "times a year now we're doing 10 15 times a day what technology can Empower us to",
    "start": "144640",
    "end": "151280"
  },
  {
    "text": "do that reliably as it turns out there's some success factors that customers who",
    "start": "151280",
    "end": "156760"
  },
  {
    "text": "have already gone through this journey have embraced the first big one is devops and the interesting thing about",
    "start": "156760",
    "end": "164000"
  },
  {
    "text": "devops is if you ask five people what devops is you're likely to get 10",
    "start": "164000",
    "end": "169319"
  },
  {
    "text": "different answers so before we focus on some of the other success factors I like to level set on what exactly devops",
    "start": "169319",
    "end": "177080"
  },
  {
    "text": "means because I believe that there's a very specific definition first off",
    "start": "177080",
    "end": "182400"
  },
  {
    "text": "devops is the union of people process and products to enable The Continuous",
    "start": "182400",
    "end": "189080"
  },
  {
    "text": "delivery of value to your end users continuous delivery of value the",
    "start": "189080",
    "end": "197440"
  },
  {
    "text": "most important word in that definition is value because if you're not delivering",
    "start": "197440",
    "end": "202920"
  },
  {
    "text": "value what are you doing and why are you doing it and more importantly how do you",
    "start": "202920",
    "end": "208159"
  },
  {
    "text": "know if you're delivering value that's the focus when we talk about technology and services and products that's the",
    "start": "208159",
    "end": "214720"
  },
  {
    "text": "focus that we're going to talk about today is value and you'll see how that applies to cous to Eda to Containers as",
    "start": "214720",
    "end": "222599"
  },
  {
    "text": "well the second Su success factor is they have small autonomous teams we get",
    "start": "222599",
    "end": "228280"
  },
  {
    "text": "away from silos we get away from these big teams that are scattered and dispersed that aren't communicating they're throwing things over the walls",
    "start": "228280",
    "end": "234840"
  },
  {
    "text": "we start to decouple our people and then we move further into a adopting",
    "start": "234840",
    "end": "241319"
  },
  {
    "text": "microservices we get away from the monolithic application we break everything out and Abstract our apis and",
    "start": "241319",
    "end": "247680"
  },
  {
    "text": "as it turns out by going all in on microservices we're actually able to maximize the benefit with our devops",
    "start": "247680",
    "end": "254879"
  },
  {
    "text": "processes with our cicd we're also able to maximize the strength of our people",
    "start": "254879",
    "end": "260840"
  },
  {
    "text": "and remember that's people's the number one ingredient the first ingredient to successful devops",
    "start": "260840",
    "end": "266560"
  },
  {
    "text": "teams we also notice that there's two common adop option patterns when they're in this change driven world the first is",
    "start": "266560",
    "end": "273680"
  },
  {
    "text": "a serverless first approach this is opinionated and well architected this has the highest abstraction level the",
    "start": "273680",
    "end": "281080"
  },
  {
    "text": "lowest infrastructure management and overall it has the lowest total cost of ownership for new applications services",
    "start": "281080",
    "end": "288560"
  },
  {
    "text": "at AWS that are are serverless first is Amazon ECS alasa container service AWS",
    "start": "288560",
    "end": "295199"
  },
  {
    "text": "fargate Lambda of course app Runner and application inte ation Services the",
    "start": "295199",
    "end": "301400"
  },
  {
    "text": "second adoption pattern we see is on the kubernetes side on the open- source preference this tends to be tailored to",
    "start": "301400",
    "end": "307960"
  },
  {
    "text": "your requirements it has lower abstraction but there is higher infrastructure management there's also",
    "start": "307960",
    "end": "313759"
  },
  {
    "text": "Community Support that as I mentioned is kubernetes Amazon eks Amazon Rosa and",
    "start": "313759",
    "end": "319680"
  },
  {
    "text": "kubernetes on ec2 because today is Eda day and we're focusing on serverless we",
    "start": "319680",
    "end": "325160"
  },
  {
    "text": "are going to be focusing on the serverless first approach and how that ties in so to do that again I'm a big",
    "start": "325160",
    "end": "331600"
  },
  {
    "text": "fan of level setting it's why we level set on the definition of devops but we're also going to level set on what",
    "start": "331600",
    "end": "337360"
  },
  {
    "text": "exactly serverless means a lot of people are like well it's it's serverless there's there's no computer there's no",
    "start": "337360",
    "end": "343759"
  },
  {
    "text": "we don't have to worry about it we all know that that's not exactly the case serverless itself at its core is a",
    "start": "343759",
    "end": "351520"
  },
  {
    "text": "strategy it's a strategy it shifts your efforts away from undifferentiated heavy",
    "start": "351520",
    "end": "356840"
  },
  {
    "text": "lifting and it allows you to shift toward towards focusing your activities on maximizing business value for your",
    "start": "356840",
    "end": "363960"
  },
  {
    "text": "customers there's that word again value that's the end goal for every customer",
    "start": "363960",
    "end": "369479"
  },
  {
    "text": "for every company I don't care what type of Technology you're working on the end goal is to deliver value not just new",
    "start": "369479",
    "end": "375759"
  },
  {
    "text": "features not just new products not just new technology I need to make sure I'm doing something of value and serverless",
    "start": "375759",
    "end": "382880"
  },
  {
    "text": "is a strategy we can use we can implement we can adopt to empower us to be able to do that and James said we I'm",
    "start": "382880",
    "end": "390720"
  },
  {
    "text": "part of a DA team we just recently merged where containers now fall under",
    "start": "390720",
    "end": "395880"
  },
  {
    "text": "this serverless umbrella and I think a lot of times people hear the word cous and they associate it with functions as",
    "start": "395880",
    "end": "401759"
  },
  {
    "text": "a service they associate it with Lambda and that's that's fair but seress is not",
    "start": "401759",
    "end": "406800"
  },
  {
    "text": "just AWS Lambda sure Lambda came out in 2015 and it introduced the very first",
    "start": "406800",
    "end": "412880"
  },
  {
    "text": "concept of serverless compute but fast forwarding just two years later then we introduced the concept of fargate where",
    "start": "412880",
    "end": "419680"
  },
  {
    "text": "it brings the benefits of serverless to the containers world and we'll talk a little bit about how fargate does that",
    "start": "419680",
    "end": "426160"
  },
  {
    "text": "and today the word serverless is a lot more broad it is a larger umbrella it's used across multiple services with the",
    "start": "426160",
    "end": "433520"
  },
  {
    "text": "common goal of simplifying operations if I can simplify these operations then I can Empower you as Engineers developers",
    "start": "433520",
    "end": "440960"
  },
  {
    "text": "operators whatever hat your boss tells you to where we can Empower you to focus on that continuous delivery of value and",
    "start": "440960",
    "end": "448840"
  },
  {
    "text": "let's talk about serverless containers and what that actually means to do that",
    "start": "448840",
    "end": "454160"
  },
  {
    "text": "we have to make sure that we understand the difference between customer responsibility and AWS responsibility",
    "start": "454160",
    "end": "460080"
  },
  {
    "text": "that's what makes containers truly serverless at its core you as the customer only worry about the container",
    "start": "460080",
    "end": "467879"
  },
  {
    "text": "that's everything that goes in your container your encaps your runtime encapsulation you only focus on",
    "start": "467879",
    "end": "473879"
  },
  {
    "text": "delivering your application to your customers through a container that means",
    "start": "473879",
    "end": "478919"
  },
  {
    "text": "everything else underneath it your container orchestration agent your operating system your ec2 instance your",
    "start": "478919",
    "end": "484800"
  },
  {
    "text": "hypervisor everything else becomes aws's responsibility you no longer have to",
    "start": "484800",
    "end": "489840"
  },
  {
    "text": "worry about that infrastructure or that management you are now empowered to only focus on your application and delivering",
    "start": "489840",
    "end": "497159"
  },
  {
    "text": "that to your customers that's what makes containers serverless is it takes the",
    "start": "497159",
    "end": "502360"
  },
  {
    "text": "server part out of the equation we believe here that Amazon ECS",
    "start": "502360",
    "end": "507639"
  },
  {
    "text": "is a serverless container Orchestra and the reason why we are associating ECS with serverless having that be",
    "start": "507639",
    "end": "514919"
  },
  {
    "text": "synonymous is because ECS is managed by ECS or managed by AWS there is no",
    "start": "514919",
    "end": "520919"
  },
  {
    "text": "cluster version there's no data store that you have to worry about maintaining or scaling it's completely free to use",
    "start": "520919",
    "end": "527519"
  },
  {
    "text": "whether you use ec2 or forgate ECS itself is just taken care of by AWS you",
    "start": "527519",
    "end": "533320"
  },
  {
    "text": "don't even have to worry about it when we talk about servess containers that works in general with different compute",
    "start": "533320",
    "end": "540279"
  },
  {
    "text": "options including AWS fargate now what is AWS fargate at its core fargate is a",
    "start": "540279",
    "end": "547360"
  },
  {
    "text": "serverless compute engine for containers and again there's that word with serverless with compute the reason why",
    "start": "547360",
    "end": "554480"
  },
  {
    "text": "we believe fargate is a serverless option for containers is because again",
    "start": "554480",
    "end": "559640"
  },
  {
    "text": "it is managed by AWS there's no Amazon machine images you're having to worry about maintaining amies you don't have",
    "start": "559640",
    "end": "566519"
  },
  {
    "text": "to worry about updating it or patching it you don't have to worry about provisioning or scaling you only pay for",
    "start": "566519",
    "end": "572920"
  },
  {
    "text": "what you need and Amazon will take care of the rest when we talk about the compute engine part of it fargate is",
    "start": "572920",
    "end": "579120"
  },
  {
    "text": "basically where your containers run you don't have to interact with it directly you just get to choose a launch type",
    "start": "579120",
    "end": "585560"
  },
  {
    "text": "fargate and then run your application and consume your compute your networking your",
    "start": "585560",
    "end": "591200"
  },
  {
    "text": "storage ECS fargate is fully managed it's a fully managed control and data",
    "start": "591200",
    "end": "596240"
  },
  {
    "text": "plane as a result there is no control plane that you have to upgrade that you have to patch that you have to secure",
    "start": "596240",
    "end": "602640"
  },
  {
    "text": "fargate is serverless compute as we've mentioned no amies it's secure by Design",
    "start": "602640",
    "end": "607959"
  },
  {
    "text": "this part is Big each task runs in its own separate kernel so if one of the tasks gets compromised or something",
    "start": "607959",
    "end": "613560"
  },
  {
    "text": "happens it's not going to affect your other tasks running side by side it's easy to Auto scale we'll talk a little",
    "start": "613560",
    "end": "619480"
  },
  {
    "text": "bit about scaling and if you want to leverage something like fargate spot and savings plans you can for cost",
    "start": "619480",
    "end": "625600"
  },
  {
    "text": "efficiency as well ECS has simp Le but powerful core constructs for example The",
    "start": "625600",
    "end": "632360"
  },
  {
    "text": "Core Concepts of ECS is you have your task that gives you one or more containers and it allows you to specify",
    "start": "632360",
    "end": "639320"
  },
  {
    "text": "your compute your networking your IM your config everything goes down into your task for your container to actually",
    "start": "639320",
    "end": "646720"
  },
  {
    "text": "run tasks make up a service if you want your service to be connected to an",
    "start": "646720",
    "end": "652160"
  },
  {
    "text": "application load balance or have external traffic you can have a a",
    "start": "652160",
    "end": "657600"
  },
  {
    "text": "containment of one or more identical tasks and the service in ECS will be able to check and maintain and replace",
    "start": "657600",
    "end": "663959"
  },
  {
    "text": "any unhealthy tasks and then outside of that you have your cluster if you're familiar with kubernetes but maybe you",
    "start": "663959",
    "end": "670680"
  },
  {
    "text": "haven't touched DCS this might be controversial but I like to compare a cluster similar to a kubernetes name",
    "start": "670680",
    "end": "676839"
  },
  {
    "text": "space because all it is is a logical grouping of your services of your tasks of Your Capacity providers in a",
    "start": "676839",
    "end": "683440"
  },
  {
    "text": "particular region since there's no charge for the cluster you can have as many clusters as you want and just have",
    "start": "683440",
    "end": "688519"
  },
  {
    "text": "that logic iCal grouping of your services of your tasks and everything else you need and then beyond that is",
    "start": "688519",
    "end": "694920"
  },
  {
    "text": "your compute where you can choose the launch type whether that's ec2 whether that's fargate or if you want to opt for",
    "start": "694920",
    "end": "701120"
  },
  {
    "text": "using spot ECS gives you the ability to optimize cost it gives you the ability",
    "start": "701120",
    "end": "706760"
  },
  {
    "text": "to have consistent tooling across your applications and especially if you're a startup you get to amortize your costs",
    "start": "706760",
    "end": "713760"
  },
  {
    "text": "with long running containers benefits of using fargate specifically speically for event driven",
    "start": "713760",
    "end": "720040"
  },
  {
    "text": "applications we've already talked about we have managed control planes and data planes we have integrated spot and cost",
    "start": "720040",
    "end": "726920"
  },
  {
    "text": "savings and the best part is is you can configure scaling with application Auto scaling now I will say right off the bat",
    "start": "726920",
    "end": "733639"
  },
  {
    "text": "if you are using fargate with application autoscaling there is going to be a cold start time but I have a",
    "start": "733639",
    "end": "739079"
  },
  {
    "text": "creative way to get around that and pretty much launch your containers on demand to be able to process your event",
    "start": "739079",
    "end": "744360"
  },
  {
    "text": "driven applications when you need them and then scale back down when the job is done to do that we have to talk about",
    "start": "744360",
    "end": "750760"
  },
  {
    "text": "Eda because Eda is now going to connect over to your fargate instance and launch your fargate tasks but an honest",
    "start": "750760",
    "end": "758399"
  },
  {
    "text": "question in the room is what exactly is Eda we know what it stands for but what",
    "start": "758399",
    "end": "764320"
  },
  {
    "text": "are the components what makes up an application or architecture that actually is event driven there are key",
    "start": "764320",
    "end": "771079"
  },
  {
    "text": "Concepts in event-driven architecture at its core systems and development teams communicate through events that's that's",
    "start": "771079",
    "end": "778199"
  },
  {
    "text": "the Northstar that's the central you have your event broker and your applications are just communicating",
    "start": "778199",
    "end": "783720"
  },
  {
    "text": "through different events and we need something that can facilitate that a broker that can handle that communication and an event is any change",
    "start": "783720",
    "end": "791959"
  },
  {
    "text": "in state or update that can be a new orders placed for retail in media and",
    "start": "791959",
    "end": "797279"
  },
  {
    "text": "entertainment that can be video uploading and processing that's a very common scenario we see we'll also see",
    "start": "797279",
    "end": "802480"
  },
  {
    "text": "that oftentimes in insurance companies we'll see that with financial services with healthc care with medical data",
    "start": "802480",
    "end": "808199"
  },
  {
    "text": "publication every industry has some sort of data object that's going to have an event",
    "start": "808199",
    "end": "814680"
  },
  {
    "text": "that will trigger a change in state in some way shape or form and event driven Services perform work in response to",
    "start": "814680",
    "end": "822160"
  },
  {
    "text": "those events so if this event happens do this work they're generally asynchronous",
    "start": "822160",
    "end": "828600"
  },
  {
    "text": "they decouple components and they're extensible and resilient some use cases that we hear",
    "start": "828600",
    "end": "834720"
  },
  {
    "text": "from customers for Eda for event- driven implementation is validating and",
    "start": "834720",
    "end": "840040"
  },
  {
    "text": "pre-processing data this one's big like I said insurance companies media we also",
    "start": "840040",
    "end": "845519"
  },
  {
    "text": "see it with fraud departments is how can I monitor transactions to detect fraud there's a new charge I need to go ahead",
    "start": "845519",
    "end": "851839"
  },
  {
    "text": "and scan this and I can detect fraud and act accordingly or I can measure the effectiveness and performance of Health",
    "start": "851839",
    "end": "859120"
  },
  {
    "text": "Care Providers I love this particular sign because the entire time you've been listening me talk you're probably",
    "start": "859120",
    "end": "864880"
  },
  {
    "text": "thinking this is great I I know a bunch of this I can use Lambda for it why would I care about Amazon ECS I'm so",
    "start": "864880",
    "end": "873079"
  },
  {
    "text": "glad you asked with Amazon ECS it really the the the age-old answer anytime you ask a",
    "start": "873079",
    "end": "879120"
  },
  {
    "text": "question to anyone is I'm going to give you an answer that says it depends right everyone's scenario is different so all",
    "start": "879120",
    "end": "884920"
  },
  {
    "text": "I can do is give you the data as to what different what things ECS does versus",
    "start": "884920",
    "end": "890639"
  },
  {
    "text": "Lambda and then you can make an inform decision if you're looking to integrate with different event sources and we'll",
    "start": "890639",
    "end": "896800"
  },
  {
    "text": "talk about event sources shortly but if you're looking to integrate with different event sources event Bridge",
    "start": "896800",
    "end": "902160"
  },
  {
    "text": "step functions self-managed arguably even sqs and SNS because you can connect",
    "start": "902160",
    "end": "907720"
  },
  {
    "text": "those to event bridge and step functions you can look at ECS you could also look at Lambda but if you have compute",
    "start": "907720",
    "end": "915600"
  },
  {
    "text": "restrictions and you want to make sure that you don't have any restrictions you remove any of those restrictions you",
    "start": "915600",
    "end": "921040"
  },
  {
    "text": "might want to look at Amazon ECS with ec2 alternatively if you need more memory you also might want to look at",
    "start": "921040",
    "end": "928000"
  },
  {
    "text": "ECS with fargate where you get four virtual CPU and 32 gigs of RAM on the flip side with Lambda if you need more",
    "start": "928000",
    "end": "934720"
  },
  {
    "text": "CPU power you get six CPU but less Ram the execution time is the re real",
    "start": "934720",
    "end": "941199"
  },
  {
    "text": "differentiating Factor lambda's Max execution time as everyone knows is 15",
    "start": "941199",
    "end": "946240"
  },
  {
    "text": "minutes so what happens when you have event driven jobs that you know are going to take longer than 15 minutes",
    "start": "946240",
    "end": "951800"
  },
  {
    "text": "that you know we going to error out and time out in that instance you can leverage Amazon ECS and using services",
    "start": "951800",
    "end": "959000"
  },
  {
    "text": "and event sources like step functions or event Bridge you can actually use both you can say well if I know this job is",
    "start": "959000",
    "end": "965000"
  },
  {
    "text": "going to take less than 20 minutes sure go ahead and send it over to Lambda if I know it's going to take more than 20",
    "start": "965000",
    "end": "971160"
  },
  {
    "text": "minutes I'm going to go ahead and send a request over to ECS and I'll launch that task on demand and we'll talk about",
    "start": "971160",
    "end": "977319"
  },
  {
    "text": "those scenarios shortly also your scale out response time you want it to be fast",
    "start": "977319",
    "end": "982680"
  },
  {
    "text": "and Fast is okay great you want it to be faster you can look at something like",
    "start": "982680",
    "end": "987720"
  },
  {
    "text": "Lambda now let's talk about event Bridge these are going to be the services that you",
    "start": "987720",
    "end": "993160"
  },
  {
    "text": "can connect over to ECS or Lambda but we're going to focus specifically on how what that looks like for ECS Amazon",
    "start": "993160",
    "end": "1000800"
  },
  {
    "text": "event Bridge as I'm sure you've heard if you've been to a few sessions this morning is a serverless event bus for",
    "start": "1000800",
    "end": "1006440"
  },
  {
    "text": "AWS Services simply put it choreographs events between your application domains",
    "start": "1006440",
    "end": "1012800"
  },
  {
    "text": "it's that broker between your applications between your events it's serverless you only pay for the events",
    "start": "1012800",
    "end": "1018920"
  },
  {
    "text": "that you process this is nice because you don't have to worry about standing up extra infrastructure and paying for everything",
    "start": "1018920",
    "end": "1025038"
  },
  {
    "text": "extra it's simplified scaling so this avoids increasing costs it allows you to sustain and manage your resources",
    "start": "1025039",
    "end": "1031798"
  },
  {
    "text": "there's no initial upfront investment there's no ongoing licensing you have to worry about no maintenance costs and",
    "start": "1031799",
    "end": "1038160"
  },
  {
    "text": "best of all to get started there's no specializ knowledge really needed you can just create an event bus a default",
    "start": "1038160",
    "end": "1044199"
  },
  {
    "text": "one create an event Rule and you're Off to the Races let's talk a little bit",
    "start": "1044199",
    "end": "1050000"
  },
  {
    "text": "about what that event Bridge architecture looks like you have event bridge at the core but you're also going to need to have event sources that are",
    "start": "1050000",
    "end": "1056919"
  },
  {
    "text": "going to communicate with targets event sources could be anything it could be AWS services and there's over 115 AWS",
    "start": "1056919",
    "end": "1064919"
  },
  {
    "text": "Services you can pick from that can use that Source however in the event that",
    "start": "1064919",
    "end": "1070600"
  },
  {
    "text": "that Event Source is not something the one the Event Source that you need is not something that's part of the AWS",
    "start": "1070600",
    "end": "1076120"
  },
  {
    "text": "repertoire you can also choose custom event sources or if you wanted to connect partner applications you could",
    "start": "1076120",
    "end": "1083240"
  },
  {
    "text": "also choose partner event sources there's over 42 different sasap Integrations including data dog Shopify",
    "start": "1083240",
    "end": "1091880"
  },
  {
    "text": "zenes pager Duty you can use anything as that Event Source that's going to be what actually captures the event itself",
    "start": "1091880",
    "end": "1099440"
  },
  {
    "text": "and then you have the event bus that's that mediator that's that broker that's taking okay I've gotten the event now I",
    "start": "1099440",
    "end": "1105520"
  },
  {
    "text": "need to send it somewhere I need to I need to have a rule based on this data in this event I'm",
    "start": "1105520",
    "end": "1111640"
  },
  {
    "text": "going to send it over to a Target whether that's Lambda whether that's fargate whether that's Kinesis it",
    "start": "1111640",
    "end": "1118600"
  },
  {
    "text": "doesn't matter or I can even leverage event Bridge with step functions maybe I take the event now I send it over to",
    "start": "1118600",
    "end": "1124120"
  },
  {
    "text": "Step functions and then I let step functions continue and pass that ultimately to whatever the target is now",
    "start": "1124120",
    "end": "1131919"
  },
  {
    "text": "let's talk a little bit about step functions itself step functions is a serverless",
    "start": "1131919",
    "end": "1137880"
  },
  {
    "text": "workflow also offered by AWS and this is what choreographs the actions on events",
    "start": "1137880",
    "end": "1144320"
  },
  {
    "text": "so for example if I have an event Bridge rule let's take video processing and if",
    "start": "1144320",
    "end": "1149440"
  },
  {
    "text": "I upload an image go ahead and send this to step functions step functions will say yes this is an image I'm going to",
    "start": "1149440",
    "end": "1155919"
  },
  {
    "text": "send that to Lambda if I happen to upload a video and I know that the video processing is going to take longer than",
    "start": "1155919",
    "end": "1161280"
  },
  {
    "text": "15 minutes event Bridge takes that rule sends it over to Step functions step",
    "start": "1161280",
    "end": "1166400"
  },
  {
    "text": "functions validates it it's a video and then it's going to go ahead and send that over to ECS it's a uh it's a workflow that is",
    "start": "1166400",
    "end": "1174520"
  },
  {
    "text": "built on step functions built using a state machine it's composed of steps",
    "start": "1174520",
    "end": "1179720"
  },
  {
    "text": "that are called States and you define this using ASL or Amazon States language",
    "start": "1179720",
    "end": "1185440"
  },
  {
    "text": "you can use Json you can use Amel it doesn't matter and it can be used to orchestrate this communication across",
    "start": "1185440",
    "end": "1190960"
  },
  {
    "text": "multiple AWS Services now there's three different ways that you can integrate your tasks within step function",
    "start": "1190960",
    "end": "1198760"
  },
  {
    "text": "you can do a request response this is where it's going to wait for an HTTP response ideally 200 come back before it",
    "start": "1198760",
    "end": "1205640"
  },
  {
    "text": "moves on to the next step but this one is important because it's not going to wait for the job to complete the only",
    "start": "1205640",
    "end": "1211880"
  },
  {
    "text": "goal of a request response is to get that response from an HTTP request if",
    "start": "1211880",
    "end": "1217360"
  },
  {
    "text": "you want to wait for the job itself to complete you can do a run a t run a job",
    "start": "1217360",
    "end": "1223039"
  },
  {
    "text": "integration this is going to call your service and it's going to have step functions actually wait for the the job",
    "start": "1223039",
    "end": "1228480"
  },
  {
    "text": "to complete more than just a response the third one is where you can wait for a call back this is going to be where I",
    "start": "1228480",
    "end": "1234679"
  },
  {
    "text": "call a service with a task token and then I have step functions actually wait until that task token is returned with",
    "start": "1234679",
    "end": "1240919"
  },
  {
    "text": "some sort of payload and that payload can be anything that I Define we can visualize this a little bit further so",
    "start": "1240919",
    "end": "1247120"
  },
  {
    "text": "for example if I wanted to have service Integrations I wanted to have step functions communicate with Lambda communicate with sqs or fargate I could",
    "start": "1247120",
    "end": "1255559"
  },
  {
    "text": "set up a request response where it's going to invoke oke the task and pause until that task responds with 200 yay",
    "start": "1255559",
    "end": "1263039"
  },
  {
    "text": "I'm safe good or if I want to know that that job if I if I want to turn this",
    "start": "1263039",
    "end": "1268120"
  },
  {
    "text": "into a synchronous task and I want to know that that job is actually done before I move on to the next step I can",
    "start": "1268120",
    "end": "1274200"
  },
  {
    "text": "go ahead and use run a job that's going to invoke the task and then it will wait until that task is complete with",
    "start": "1274200",
    "end": "1280159"
  },
  {
    "text": "whatever it's doing the third option is waiting for a call back and this is where I'm calling some sort of external",
    "start": "1280159",
    "end": "1286799"
  },
  {
    "text": "resource with that token I pause and I wait for that token to come back for me this is really good",
    "start": "1286799",
    "end": "1293240"
  },
  {
    "text": "when I know that I'm going to have long running Services when I know that I'm going to have long running events this",
    "start": "1293240",
    "end": "1298720"
  },
  {
    "text": "could be human activity maybe third party API that I can't control what that's going to look like how long",
    "start": "1298720",
    "end": "1304120"
  },
  {
    "text": "that's going to take or especially if I have a legacy application maybe I haven't refactored and I'm I'm waiting",
    "start": "1304120",
    "end": "1309600"
  },
  {
    "text": "for things to kind of speed up a little bit waiting for a call back is a really good",
    "start": "1309600",
    "end": "1315760"
  },
  {
    "text": "integration now let's talk about building serverless event driven services and leveraging far game there's",
    "start": "1315760",
    "end": "1323120"
  },
  {
    "text": "popular event driven architecture structures when looking at ECS the first one is Task per event this is where your",
    "start": "1323120",
    "end": "1330480"
  },
  {
    "text": "event triggers an ephemeral task just a singular task and it's going to process a singular event it has a singular sole",
    "start": "1330480",
    "end": "1337520"
  },
  {
    "text": "purpose in this instance you're going to want to look at event Bridge or step functions that's going to ultimately",
    "start": "1337520",
    "end": "1342919"
  },
  {
    "text": "invoke the task it takes whatever that event is like I said in the video processing I up a video or an image that",
    "start": "1342919",
    "end": "1349760"
  },
  {
    "text": "now becomes my event it I have an event Bridge rule it communicates with sub functions and then it sends it over to",
    "start": "1349760",
    "end": "1356360"
  },
  {
    "text": "ECS to invoke the task launch it and do whatever it needs to do with the video send that token back over to Step",
    "start": "1356360",
    "end": "1362559"
  },
  {
    "text": "functions and it's complete this is really good for situations where you have less frequent events and longer",
    "start": "1362559",
    "end": "1369320"
  },
  {
    "text": "execution times it's why the video example works so great because sometimes video processing can take quite a while",
    "start": "1369320",
    "end": "1375679"
  },
  {
    "text": "definitely longer than 15 minutes a second type of architecture well here's an example actually visual of that S3",
    "start": "1375679",
    "end": "1382679"
  },
  {
    "text": "with event Bridge with fargate back over to S3 second type of example is event",
    "start": "1382679",
    "end": "1388240"
  },
  {
    "text": "processing and this is where you have long running resilient services that are going to pull in process events this is",
    "start": "1388240",
    "end": "1395240"
  },
  {
    "text": "likely working in conjunction with a transaction notification maybe there is Lambda also scheduling some of this but",
    "start": "1395240",
    "end": "1401840"
  },
  {
    "text": "this is where you're going to have ECS manage deployments you can set up autoscaling based on how large that sqsq",
    "start": "1401840",
    "end": "1408120"
  },
  {
    "text": "is and the cool thing is we'll we'll talk about autoscaling but you can set up different types of policies different",
    "start": "1408120",
    "end": "1413240"
  },
  {
    "text": "types of if you want to do Target tracking if you want to have it set to message Q depth uh if you want to",
    "start": "1413240",
    "end": "1418480"
  },
  {
    "text": "connect it over to Kinesis this type of Architecture is really great for",
    "start": "1418480",
    "end": "1424200"
  },
  {
    "text": "highfrequency events and these often have short execution times my only goal in this scenario is to quickly process",
    "start": "1424200",
    "end": "1431039"
  },
  {
    "text": "the messages in that queue and be able to scale back down within my ECS",
    "start": "1431039",
    "end": "1436559"
  },
  {
    "text": "cluster now let's talk a little bit about autoscaling because there are several different ways that you can autoscale with ECS the first is you can",
    "start": "1436559",
    "end": "1444080"
  },
  {
    "text": "use the default ECS metrics whether that's CPU or memory you can scale up or down on that the deeper you get into",
    "start": "1444080",
    "end": "1451559"
  },
  {
    "text": "integrating Eda into your ECS world you're probably want to going to want to start looking at custom metrics and",
    "start": "1451559",
    "end": "1458000"
  },
  {
    "text": "Diving a little bit deeper into maybe metrics with cloudwatch maybe you do want to scale on that sqs uh Q depth on",
    "start": "1458000",
    "end": "1465279"
  },
  {
    "text": "your message rate maybe you're using per and you want to also look at your sqs backlogs and your tasks or maybe you're",
    "start": "1465279",
    "end": "1472679"
  },
  {
    "text": "using grafana and you want to Define custom rules based on your Cloud watch and your again Prometheus integration",
    "start": "1472679",
    "end": "1480279"
  },
  {
    "text": "using graphon you can easily configure your scaling based on any one of those metrics and then your cluster will go",
    "start": "1480279",
    "end": "1486760"
  },
  {
    "text": "ahead and respond accordingly now let's talk about some real world examples and some of these I've already touched on",
    "start": "1486760",
    "end": "1493039"
  },
  {
    "text": "but I want to take a look at what this actually would look like again in the real world we've we talked about how you",
    "start": "1493039",
    "end": "1498440"
  },
  {
    "text": "can tie in sqs to Lambda to fargate but what would be a real world example of",
    "start": "1498440",
    "end": "1504279"
  },
  {
    "text": "this again I'm so glad you asked this is great the first example is talking about",
    "start": "1504279",
    "end": "1510039"
  },
  {
    "text": "DNA matching customers DNA in a database and this is a real this is a real customer sometimes matching DNA when I",
    "start": "1510039",
    "end": "1516520"
  },
  {
    "text": "provide a sample can take anywhere from five minutes to 30 minutes so I need to be able to have these tasks that can",
    "start": "1516520",
    "end": "1522120"
  },
  {
    "text": "process this quickly but also not time out since we know that Lambda has a 15-minute execution time and this could",
    "start": "1522120",
    "end": "1528559"
  },
  {
    "text": "take up to 30 minutes we're going to go ahead and use fargate now we're we're also using sqs as you can see to be able",
    "start": "1528559",
    "end": "1535720"
  },
  {
    "text": "to cue the data for processing and as this runs through ECS is going to scale",
    "start": "1535720",
    "end": "1541240"
  },
  {
    "text": "the fargate tasks Up and Down based on the number of samples in the queue it's actually doing that by the metric up at",
    "start": "1541240",
    "end": "1547760"
  },
  {
    "text": "the top where it says publish backlog per task metric that's a custom metric that we create that is tied over to an",
    "start": "1547760",
    "end": "1555360"
  },
  {
    "text": "autoscaling policy and then when the customer custom metric exceeds whatever Target",
    "start": "1555360",
    "end": "1560840"
  },
  {
    "text": "value I've set for the ECS cluster ECS is going to scale the tasks up and down to be able to process the messages in",
    "start": "1560840",
    "end": "1567440"
  },
  {
    "text": "the queue in this scenario because you don't want as ECS is scaling those tasks",
    "start": "1567440",
    "end": "1572720"
  },
  {
    "text": "up and down you don't want ECS to accidentally kill any of the execution times because it's getting overloaded",
    "start": "1572720",
    "end": "1578200"
  },
  {
    "text": "with messages you can also enable task scale in protection on your ECS cluster",
    "start": "1578200",
    "end": "1583640"
  },
  {
    "text": "to prevent anything from being killed M execution this is a great example of being able to leverage fargate with",
    "start": "1583640",
    "end": "1590200"
  },
  {
    "text": "Lambda depending on what is actually being processed at this particular time you can leverage both the traditional",
    "start": "1590200",
    "end": "1597600"
  },
  {
    "text": "Eda and traditional serverless and with fargate to kind of launch tasks on",
    "start": "1597600",
    "end": "1602919"
  },
  {
    "text": "demand after the message queue is empty the task scale back down and you're no longer having to pay for anything",
    "start": "1602919",
    "end": "1608039"
  },
  {
    "text": "running in your ECS cluster because remember at the core fargate doesn't have any cost you only pay for what you",
    "start": "1608039",
    "end": "1614760"
  },
  {
    "text": "use a second scenario is using fargate event Bridge Lambda again and SNS in",
    "start": "1614760",
    "end": "1621520"
  },
  {
    "text": "this particular scenario maybe we want to scan our code that we've pushed from a poll request we want to scan it and",
    "start": "1621520",
    "end": "1627640"
  },
  {
    "text": "make sure that there isn't any AWS sensitive information or any company Privacy Information that we're worried",
    "start": "1627640",
    "end": "1633919"
  },
  {
    "text": "about so on push we have an event Bridge event that triggers it communicates over",
    "start": "1633919",
    "end": "1639720"
  },
  {
    "text": "to Lambda Lambda begins to trigger a fargate task that's going to ultimately scan the code if something is found that",
    "start": "1639720",
    "end": "1647600"
  },
  {
    "text": "says hey your account number was published or somehow your SSH key was",
    "start": "1647600",
    "end": "1653600"
  },
  {
    "text": "committed and it happens I'm going to go ahead and send an email notification out to this team to let them know this needs",
    "start": "1653600",
    "end": "1659520"
  },
  {
    "text": "to be remedied this is another great example where we see leveraging both Lambda and fargate in with",
    "start": "1659520",
    "end": "1667640"
  },
  {
    "text": "Eda a third example is the one that I've kind of talked about a lot today is that's where we're leveraging S3 with",
    "start": "1667640",
    "end": "1674679"
  },
  {
    "text": "event Bridge with step functions and then step function is the one based on the rule to schedule or send that task",
    "start": "1674679",
    "end": "1681159"
  },
  {
    "text": "over to Lambda or fargate and it looks like this we have our video or or image",
    "start": "1681159",
    "end": "1687720"
  },
  {
    "text": "we upload it to S3 we have that event Bridge rule that connects over to Step",
    "start": "1687720",
    "end": "1692760"
  },
  {
    "text": "functions and from there based on if it has an image prefix or a video prefix it",
    "start": "1692760",
    "end": "1698200"
  },
  {
    "text": "will either get scheduled or sent over to Lambda or fargate from there Lambda will go ahead and process the image",
    "start": "1698200",
    "end": "1704600"
  },
  {
    "text": "reload re-upload it to S3 or fargate will process the video and re-upload it",
    "start": "1704600",
    "end": "1709799"
  },
  {
    "text": "to S3 the cool thing is in all of these scenarios that I've showed you I don't have to have ECS tasks and services",
    "start": "1709799",
    "end": "1717000"
  },
  {
    "text": "sitting there waiting idly send me in coach send me in let me know let me know when I can play in",
    "start": "1717000",
    "end": "1723559"
  },
  {
    "text": "every scenario step functions or event bridge is the one that's actually launching the task on demand and then",
    "start": "1723559",
    "end": "1729919"
  },
  {
    "text": "when it finishes the job it cut it shuts that task down effectively you get around the cold star issue of relying in",
    "start": "1729919",
    "end": "1737720"
  },
  {
    "text": "completely on autoscaling now you're relying on your Eda to launch that task",
    "start": "1737720",
    "end": "1743240"
  },
  {
    "text": "for you and then shut it down completely so it's more of a on demand scale to zero only scale when I need it",
    "start": "1743240",
    "end": "1751919"
  },
  {
    "text": "scenario now there's some considerations and takeaways that we want to talk about here let me just see kind of where we're",
    "start": "1751919",
    "end": "1757559"
  },
  {
    "text": "at we actually have a little bit of time how many people would like to see a real world example like a demo of what this",
    "start": "1757559",
    "end": "1764480"
  },
  {
    "text": "would look like like in your AWS cluster because I've talked about it a lot okay",
    "start": "1764480",
    "end": "1769519"
  },
  {
    "text": "so before we dive over into this I'm going to switch to Chrome so starting off I have my step",
    "start": "1769519",
    "end": "1776919"
  },
  {
    "text": "functions I also have my event Bridge rules so we're going to focus on that third example right now the video",
    "start": "1776919",
    "end": "1783159"
  },
  {
    "text": "processing example where depending on if it's an image or video Lambda or uh ECS",
    "start": "1783159",
    "end": "1789960"
  },
  {
    "text": "will be able to handle it so for example if I scroll down to my event Bridge rules I can see how my event brid Bridge",
    "start": "1789960",
    "end": "1796679"
  },
  {
    "text": "pattern is def find and it's very simple I have right here on lines nine and lines 10 and let's see if you can can't",
    "start": "1796679",
    "end": "1804240"
  },
  {
    "text": "really see very well I'll zoom in a little bit more this",
    "start": "1804240",
    "end": "1809919"
  },
  {
    "text": "is where it gets super big for me but perfect for you guys hopefully so on lines nine and 10 that's my event Bridge",
    "start": "1809919",
    "end": "1816519"
  },
  {
    "text": "rule where I'm saying based on if I've uploaded this to images or if I've uploaded this to video this is the one",
    "start": "1816519",
    "end": "1822600"
  },
  {
    "text": "part of event bridge that then connects over to my state machine to my step function fun and if I take a look and",
    "start": "1822600",
    "end": "1830640"
  },
  {
    "text": "again zoom out because I can't see anything these are all the jobs that I've run right",
    "start": "1830640",
    "end": "1836519"
  },
  {
    "text": "before this particular event but let's take a look at what this definition looks",
    "start": "1836519",
    "end": "1841640"
  },
  {
    "text": "like and then zooming in a little bit further so you can see on the right I'm going to format the input I get the",
    "start": "1841640",
    "end": "1848200"
  },
  {
    "text": "event from vent bridge I have to check the size how big is this event that I'm processing depending on that I'm going",
    "start": "1848200",
    "end": "1854720"
  },
  {
    "text": "to send it over to either Lambda or I'm going to send it over to EC to ECS run",
    "start": "1854720",
    "end": "1859840"
  },
  {
    "text": "task in this instance we talked about the different ways I can trigger that particular task whether it's waiting for",
    "start": "1859840",
    "end": "1865960"
  },
  {
    "text": "an HTTP response the job to complete or a token in this instance I wanted to wait for the token to come back and I'm",
    "start": "1865960",
    "end": "1872720"
  },
  {
    "text": "going to send my own custom Json payload that says okay I'm successful and the video is completed it makes it better",
    "start": "1872720",
    "end": "1879320"
  },
  {
    "text": "for logging and for visibility for observability or in the event that it failed either way it'll error out and",
    "start": "1879320",
    "end": "1885559"
  },
  {
    "text": "I'll get back to the end let's take a look at what this code looks like and again I'm going to zoom",
    "start": "1885559",
    "end": "1891880"
  },
  {
    "text": "out all right switching over to visual studio code and zooming in here",
    "start": "1891880",
    "end": "1899639"
  },
  {
    "text": "again this is the state machine where essentially I'm defining I have my format input this is where I'm checking",
    "start": "1899639",
    "end": "1905799"
  },
  {
    "text": "the size I have my bucket name when I say that I'm checking the size I'm checking to see if the string matches",
    "start": "1905799",
    "end": "1911399"
  },
  {
    "text": "videos or matches images and that's where I'm going to send it to the next task moving further",
    "start": "1911399",
    "end": "1917720"
  },
  {
    "text": "this is my ECS run task where you can see I have the Run task wait for task",
    "start": "1917720",
    "end": "1922840"
  },
  {
    "text": "token I set a timeout and I set exactly what my environment variables need I set",
    "start": "1922840",
    "end": "1928399"
  },
  {
    "text": "my task token my bucket my object key that's all it takes for it to get sent",
    "start": "1928399",
    "end": "1933639"
  },
  {
    "text": "over to ECS and we can see this live in real time so let's go over to clusters",
    "start": "1933639",
    "end": "1940559"
  },
  {
    "text": "and click on our particular cluster currently I don't have any services or",
    "start": "1940559",
    "end": "1946000"
  },
  {
    "text": "any tasks running as of right now this cluster is costing me absolutely nothing I go over to my terminal here",
    "start": "1946000",
    "end": "1953480"
  },
  {
    "text": "and I'm going to do make upload video and it's going to go ahead and use",
    "start": "1953480",
    "end": "1960159"
  },
  {
    "text": "the S3 API and very simple for the purpose of a demo show you that it's it's uploading",
    "start": "1960159",
    "end": "1967880"
  },
  {
    "text": "something it's always fun on conference Wi-Fi where it's like how long is that going to take there we go okay cool luckily I'm",
    "start": "1971240",
    "end": "1979720"
  },
  {
    "text": "actually remoted into a machine outside of here and just like that I now see",
    "start": "1979720",
    "end": "1985240"
  },
  {
    "text": "that there's a task pending I can refresh it's provisioning my task and step event Bridge already",
    "start": "1985240",
    "end": "1991440"
  },
  {
    "text": "got the event saw that there was something uploaded to S3 and it's already sending that request over to ECS",
    "start": "1991440",
    "end": "1998720"
  },
  {
    "text": "and if I actually do Sam logs I can be able to tail I'm using Sam",
    "start": "1998720",
    "end": "2004440"
  },
  {
    "text": "CLI by the way to be able to handle this and my opinion I would recommend using Sam when you're leveraging when you're",
    "start": "2004440",
    "end": "2010399"
  },
  {
    "text": "leveraging a VD step functions ECS you can be able to tie everything together very",
    "start": "2010399",
    "end": "2016120"
  },
  {
    "text": "easily and now I can start seeing the logs of my container where it's building my video test it's writing audio it's",
    "start": "2016120",
    "end": "2022320"
  },
  {
    "text": "writing the output video before it ends up uploading back over into my S3 bucket",
    "start": "2022320",
    "end": "2029080"
  },
  {
    "text": "and while it's doing that again I can refresh I can see that my task is running once it completes processing",
    "start": "2029080",
    "end": "2034799"
  },
  {
    "text": "that video it'll shut back down and I've evental essentially scaled to zero or what I like to call scaling on demand",
    "start": "2034799",
    "end": "2042360"
  },
  {
    "text": "when we take a look at our state machine logs again and see our executions and I can see that that state machine uh",
    "start": "2042360",
    "end": "2049240"
  },
  {
    "text": "request and execution is now processing that can take depending on the size of that video 15 to 20 minutes doesn't make",
    "start": "2049240",
    "end": "2056040"
  },
  {
    "text": "for a very good demo to just watch that going live but I do want to show you a",
    "start": "2056040",
    "end": "2061158"
  },
  {
    "text": "little bit more of the template here so while that's",
    "start": "2061159",
    "end": "2066240"
  },
  {
    "text": "running in the back let's talk about the different resources that are involved to make this to make",
    "start": "2066240",
    "end": "2071440"
  },
  {
    "text": "this all work it's surprisingly simpler than I expected it to be because coming from the container world even I was",
    "start": "2071440",
    "end": "2077398"
  },
  {
    "text": "thinking how am I tying Eda in why would I want to do that I'll let the Eda people do that it's actually very easy",
    "start": "2077399",
    "end": "2084520"
  },
  {
    "text": "you define your S3 bucket you set up your Lambda function and Lambda gets access over to your S3 bucket in this",
    "start": "2084520",
    "end": "2092320"
  },
  {
    "text": "particular instance I made sure to use x86 architecture you can use Arm if you want to",
    "start": "2092320",
    "end": "2097920"
  },
  {
    "text": "State machine State machine is where it gets a little specific because now I'm also connecting it over to my network to",
    "start": "2097920",
    "end": "2103640"
  },
  {
    "text": "my Subnet but you'll notice under State machine which again is Step functions I then am defining my event",
    "start": "2103640",
    "end": "2110280"
  },
  {
    "text": "Bridge Rule and you can see that same rule that we saw in the console I have my object key prefix here anything that",
    "start": "2110280",
    "end": "2117280"
  },
  {
    "text": "is images is going to get sent over to Lambda anything that is video is going to get sent over to ECS and run that on",
    "start": "2117280",
    "end": "2123960"
  },
  {
    "text": "demand I can also make sure I attach any policies to that I defined my VPC my",
    "start": "2123960",
    "end": "2130119"
  },
  {
    "text": "cluster now my task definition this is just a very simple node container that's",
    "start": "2130119",
    "end": "2137040"
  },
  {
    "text": "I think it's running pillow I can't remember but all it is is just processing the video it's actually",
    "start": "2137040",
    "end": "2142680"
  },
  {
    "text": "watermarking it again maybe this is something you'd want to use in insurance or media it's taking that it's",
    "start": "2142680",
    "end": "2148040"
  },
  {
    "text": "processing it and then it'll re-upload it back over into S3 I make sure to attach a log group that log group name",
    "start": "2148040",
    "end": "2155240"
  },
  {
    "text": "step task that was what I I was using Sam to connect to so I could see that it's processing and see what it's doing",
    "start": "2155240",
    "end": "2161000"
  },
  {
    "text": "I defined my task execution role and then I grabbed some outputs it's less",
    "start": "2161000",
    "end": "2166880"
  },
  {
    "text": "than 200 lines to tie all of these different pieces together and get them to work nicely Better Together rather",
    "start": "2166880",
    "end": "2173839"
  },
  {
    "text": "than having to have different deployments for Lambda different deployments for ECS having them in different infrastructures code I get to",
    "start": "2173839",
    "end": "2180280"
  },
  {
    "text": "keep everything together now I can see that it's still writing that video I would expect that it'll probably run",
    "start": "2180280",
    "end": "2185760"
  },
  {
    "text": "longer this than this particular talk but let's go back over to PowerPoint now and talk about some considerations after",
    "start": "2185760",
    "end": "2192599"
  },
  {
    "text": "we've seen that work very easily all I had to do is upload an image and every or upload a video and everything is",
    "start": "2192599",
    "end": "2198440"
  },
  {
    "text": "handled for me some best practices when you're using event bridge is you want to make sure",
    "start": "2198440",
    "end": "2204720"
  },
  {
    "text": "that you have a single rule per subscriber you want to avoid if you can using the default event bus for custom",
    "start": "2204720",
    "end": "2211400"
  },
  {
    "text": "application events you want to create your own if it's a custom application create your own event bus that is specific specific to what you need it",
    "start": "2211400",
    "end": "2218200"
  },
  {
    "text": "goes back to that it depends I'm I'm not going to trust a default rule when I",
    "start": "2218200",
    "end": "2224160"
  },
  {
    "text": "have to be very definitive and explicit for what exactly my my use case is and what my customers need what's going to",
    "start": "2224160",
    "end": "2230640"
  },
  {
    "text": "ultimately deliver value I want to avoid rout routing at the producer uh you saw",
    "start": "2230640",
    "end": "2236280"
  },
  {
    "text": "in the example on how we were leveraging Sam logs that's just connecting over to cloudwatch logs so I want to be able to",
    "start": "2236280",
    "end": "2242640"
  },
  {
    "text": "rely on cloudwatch logs for debugging if something weren't working and if a event failed I could be able to leverage those",
    "start": "2242640",
    "end": "2248760"
  },
  {
    "text": "logs to to help me understand what exactly is going on and I want to rely on dead letter cu's as",
    "start": "2248760",
    "end": "2255760"
  },
  {
    "text": "well some use cases when you're using EV vent bridge and SNS and we talked about use cases specifically with ECS but",
    "start": "2255760",
    "end": "2262440"
  },
  {
    "text": "let's just talk about generalized use cases one if you want to react to events from SAS applications and AWS Services",
    "start": "2262440",
    "end": "2270240"
  },
  {
    "text": "that's a great use case if you want to create rules that are applied across the entire body to filter before for pushing",
    "start": "2270240",
    "end": "2277160"
  },
  {
    "text": "to your ultimate consumers that are going to handle that event if you have a large number of of Target types if it",
    "start": "2277160",
    "end": "2283920"
  },
  {
    "text": "was going Beyond just ECS fargate and Lambda vent bridge is great if I want to",
    "start": "2283920",
    "end": "2290000"
  },
  {
    "text": "connect also with with SNS I might want to look at high throughput and low latency I want to have very high fan out",
    "start": "2290000",
    "end": "2297599"
  },
  {
    "text": "and maybe I also want to look at application to person for SMS email mobile push notifications we saw that in",
    "start": "2297599",
    "end": "2304040"
  },
  {
    "text": "the Second Use case if I'm doing code coverage scans and I just want to send that notification out and in fact a good",
    "start": "2304040",
    "end": "2310000"
  },
  {
    "text": "example of SNS and email and text notifications is how many people have grabbed coffee from the cus espresso if",
    "start": "2310000",
    "end": "2317160"
  },
  {
    "text": "you haven't you should check out how that works because that's also using event Bridge Cognito SNS and it's",
    "start": "2317160",
    "end": "2323560"
  },
  {
    "text": "sending those application toop person messages allowing you to be able to order your free coffee with your",
    "start": "2323560",
    "end": "2331160"
  },
  {
    "text": "phone another uh set of best practices focusing on step functions is you want to make sure that you choose the the",
    "start": "2331160",
    "end": "2336800"
  },
  {
    "text": "right workflow type this was not a step functions session so we didn't dive deep into how you would configure it but you",
    "start": "2336800",
    "end": "2343200"
  },
  {
    "text": "saw the different type of task Integrations request response run a job wait for call back you also want to make",
    "start": "2343200",
    "end": "2349440"
  },
  {
    "text": "sure that that the workflow type you're selecting is the right one for your particular application you want to make",
    "start": "2349440",
    "end": "2356240"
  },
  {
    "text": "sure that you specify timeouts it was very brief but when I had the code up on the screen I had a timeout of 3600",
    "start": "2356240",
    "end": "2363160"
  },
  {
    "text": "seconds so if things would fail I would be able to fail fast and be able to move on and iterate quickly to avoid getting",
    "start": "2363160",
    "end": "2369599"
  },
  {
    "text": "stuck you saw also the use of S3 you want to use S3 when you have to pass",
    "start": "2369599",
    "end": "2374880"
  },
  {
    "text": "large payloads and you want to try to avoid reaching your history quota you don't want anything that can Max you out",
    "start": "2374880",
    "end": "2381560"
  },
  {
    "text": "you want to handle your Lambda Ser service exceptions and make sure that you're not just leaving that open to",
    "start": "2381560",
    "end": "2387760"
  },
  {
    "text": "where you don't have any insight into what's going on General considerations across the board is you want to decide",
    "start": "2387760",
    "end": "2394240"
  },
  {
    "text": "whether or not you want streams or cues for your event streams allow for near realtime information flow and q's allow you to be",
    "start": "2394240",
    "end": "2401680"
  },
  {
    "text": "a little bit more decoupled in asynchronous again as I mentioned just previously with step functions you want",
    "start": "2401680",
    "end": "2407720"
  },
  {
    "text": "to make sure that there's proper event design and at the end of the day remember that there's no Silver Bullet",
    "start": "2407720",
    "end": "2414079"
  },
  {
    "text": "there's not there's not going to be one siiz fits-all it's going to be the it depends and what works for your scenario",
    "start": "2414079",
    "end": "2419599"
  },
  {
    "text": "may not work for somebody else's but the end goal is to deliver that value to your customers what solution or",
    "start": "2419599",
    "end": "2426800"
  },
  {
    "text": "implementation is going to enable you to do that key takeaways here is when you're looking between ECS and Lambda",
    "start": "2426800",
    "end": "2433760"
  },
  {
    "text": "you'll want to look at ECS for stable high volume event sources and Lambda for pretty much everything else you can",
    "start": "2433760",
    "end": "2440680"
  },
  {
    "text": "optimize your costs with fargate graviton and spot and you can use application autoscaling to Scale based",
    "start": "2440680",
    "end": "2447119"
  },
  {
    "text": "on your needs or you can also set up like what I leveraged with event bridge and step functions to be able to scale",
    "start": "2447119",
    "end": "2452599"
  },
  {
    "text": "on demand remember that serverless is a strategy it's not just a buzzword it's",
    "start": "2452599",
    "end": "2458880"
  },
  {
    "text": "not just Lambda it's the strategy and how you're delivering that value to your customers you want to make sure that you",
    "start": "2458880",
    "end": "2465640"
  },
  {
    "text": "optimize for cost for scaling for tooling you want to consider what kind of events are going to kick off your",
    "start": "2465640",
    "end": "2471640"
  },
  {
    "text": "functions or your task what type of event sources are you looking at as I mentioned briefly that your ECS tasks",
    "start": "2471640",
    "end": "2478599"
  },
  {
    "text": "need to have scale and protection enabled that makes sure that they don't die during mid execution and remember",
    "start": "2478599",
    "end": "2484920"
  },
  {
    "text": "that at the end of the day all all of these services are better together you can mix and match step functions with",
    "start": "2484920",
    "end": "2491520"
  },
  {
    "text": "sqs with SNS with Lambda and ultimately when you start leveraging each service's",
    "start": "2491520",
    "end": "2497280"
  },
  {
    "text": "benefit that's what's going to empower you to live and thrive in this change driven world that's what's going to",
    "start": "2497280",
    "end": "2503359"
  },
  {
    "text": "empower you to be able to deliver that value to your customers if you want to learn more about some of the topics that",
    "start": "2503359",
    "end": "2509720"
  },
  {
    "text": "we talked about today specifically task scale in production or some rate Li limiting strategies for serverless this",
    "start": "2509720",
    "end": "2516400"
  },
  {
    "text": "is your slide and your cue to take a picture I don't see anyone's phones out so I'll move on to the next one and then",
    "start": "2516400",
    "end": "2522359"
  },
  {
    "text": "also if you want some patterns and examples uh as you're integrating Eda with containers this is our containers",
    "start": "2522359",
    "end": "2529119"
  },
  {
    "text": "on AWS Community website that we just launched a few months ago this has a collection of patterns visuals blog",
    "start": "2529119",
    "end": "2536280"
  },
  {
    "text": "posts focusing primarily on containers but also how you would integrate Eda",
    "start": "2536280",
    "end": "2541760"
  },
  {
    "text": "into your containers world the last slide is if you want to learn about a W Cloud skills you want to check out Cloud",
    "start": "2541760",
    "end": "2548520"
  },
  {
    "text": "Builder to access 500 over 500 free digital courses and learning plans and",
    "start": "2548520",
    "end": "2553839"
  },
  {
    "text": "if you're also interested in AWS certifications and accessing new exam guides again this is the slide you will",
    "start": "2553839",
    "end": "2560680"
  },
  {
    "text": "want to take a picture of finally thank you very much thank you for hanging out with me especially after",
    "start": "2560680",
    "end": "2566359"
  },
  {
    "text": "lunch it's always one of those things of I'm so full I just want to take a nap but I appreciate your excitement and",
    "start": "2566359",
    "end": "2572920"
  },
  {
    "text": "your time today",
    "start": "2572920",
    "end": "2578160"
  }
]