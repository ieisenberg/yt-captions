[
  {
    "text": "thank",
    "start": "10599",
    "end": "12759"
  },
  {
    "text": "you okay so welcome to the second I",
    "start": "12759",
    "end": "15320"
  },
  {
    "text": "can't believe we have a databases track",
    "start": "15320",
    "end": "17279"
  },
  {
    "text": "at Lambda Jam I never thought that that",
    "start": "17279",
    "end": "18760"
  },
  {
    "text": "was going to be a thing but welcome to",
    "start": "18760",
    "end": "20240"
  },
  {
    "text": "the second talk in the databases track",
    "start": "20240",
    "end": "22000"
  },
  {
    "text": "and I'm looking forward to the third",
    "start": "22000",
    "end": "23760"
  },
  {
    "text": "one so I claim that functional",
    "start": "23760",
    "end": "26840"
  },
  {
    "text": "programmers spend too little time",
    "start": "26840",
    "end": "29080"
  },
  {
    "text": "thinking about how interact with",
    "start": "29080",
    "end": "31759"
  },
  {
    "text": "databases when we do think about them at",
    "start": "31759",
    "end": "34520"
  },
  {
    "text": "all it's often in terms of like we just",
    "start": "34520",
    "end": "37600"
  },
  {
    "text": "heard so how can I write a types safe om",
    "start": "37600",
    "end": "40200"
  },
  {
    "text": "so that I don't have to deal with SQL",
    "start": "40200",
    "end": "42719"
  },
  {
    "text": "and I can just think in terms of my",
    "start": "42719",
    "end": "44320"
  },
  {
    "text": "favorite functional programming language",
    "start": "44320",
    "end": "47920"
  },
  {
    "text": "which can be great and it can be useful",
    "start": "47920",
    "end": "50879"
  },
  {
    "text": "but it's not the same question as what",
    "start": "50879",
    "end": "53039"
  },
  {
    "text": "is the most effective way for me to deal",
    "start": "53039",
    "end": "56079"
  },
  {
    "text": "with the data that lives in this data",
    "start": "56079",
    "end": "58440"
  },
  {
    "text": "store because I claim that the answer to",
    "start": "58440",
    "end": "60760"
  },
  {
    "text": "that question is sometimes well have you",
    "start": "60760",
    "end": "64239"
  },
  {
    "text": "tried",
    "start": "64239",
    "end": "66119"
  },
  {
    "text": "SQL I think it's too easy for us to",
    "start": "66119",
    "end": "68280"
  },
  {
    "text": "treat the data store as e how icky and",
    "start": "68280",
    "end": "74119"
  },
  {
    "text": "mutable and so our focus goes straight",
    "start": "74119",
    "end": "77159"
  },
  {
    "text": "to how do I get the data out of there as",
    "start": "77159",
    "end": "79400"
  },
  {
    "text": "quickly as possible so that I can handle",
    "start": "79400",
    "end": "81520"
  },
  {
    "text": "it in the application layer in my nice",
    "start": "81520",
    "end": "84079"
  },
  {
    "text": "pure functional programming language of",
    "start": "84079",
    "end": "86320"
  },
  {
    "text": "choice I'd like to put those other",
    "start": "86320",
    "end": "88439"
  },
  {
    "text": "languages aside for a moment",
    "start": "88439",
    "end": "90400"
  },
  {
    "text": "and think about the tool that's already",
    "start": "90400",
    "end": "91680"
  },
  {
    "text": "built into the data store itself think",
    "start": "91680",
    "end": "94000"
  },
  {
    "text": "about SQL and I should say by the way I",
    "start": "94000",
    "end": "97759"
  },
  {
    "text": "I do absolutely agree with Dave uh from",
    "start": "97759",
    "end": "100520"
  },
  {
    "text": "the previous talk that there are many",
    "start": "100520",
    "end": "102520"
  },
  {
    "text": "many ways in which SQL is horrible I am",
    "start": "102520",
    "end": "105240"
  },
  {
    "text": "not here to tell you that it is the",
    "start": "105240",
    "end": "106560"
  },
  {
    "text": "perfect functional programming language",
    "start": "106560",
    "end": "109000"
  },
  {
    "text": "but it's there unless you're using",
    "start": "109000",
    "end": "111479"
  },
  {
    "text": "tutorial D or something we're using it",
    "start": "111479",
    "end": "114600"
  },
  {
    "text": "anyway and I think it's worth diving",
    "start": "114600",
    "end": "116560"
  },
  {
    "text": "further into because sometimes wrapping",
    "start": "116560",
    "end": "118320"
  },
  {
    "text": "a black box around something that you",
    "start": "118320",
    "end": "120039"
  },
  {
    "text": "don't just because you don't like it",
    "start": "120039",
    "end": "122200"
  },
  {
    "text": "just creates",
    "start": "122200",
    "end": "124719"
  },
  {
    "text": "complexity so some expectations",
    "start": "124719",
    "end": "127520"
  },
  {
    "text": "management right at the start I said I'm",
    "start": "127520",
    "end": "131039"
  },
  {
    "text": "I'm not going to be um talking about how",
    "start": "131039",
    "end": "135959"
  },
  {
    "text": "can we create some types safe orms or",
    "start": "135959",
    "end": "138239"
  },
  {
    "text": "anything like that I don't want people",
    "start": "138239",
    "end": "139959"
  },
  {
    "text": "waiting for a big reveal that's not",
    "start": "139959",
    "end": "141319"
  },
  {
    "text": "coming right the FP that we're going to",
    "start": "141319",
    "end": "144120"
  },
  {
    "text": "cover in this talk is basic it's",
    "start": "144120",
    "end": "146160"
  },
  {
    "text": "uncontroversial and look SQL doesn't",
    "start": "146160",
    "end": "149040"
  },
  {
    "text": "have higher functions there is a limit",
    "start": "149040",
    "end": "151440"
  },
  {
    "text": "to how fancy we can get we're not up the",
    "start": "151440",
    "end": "154360"
  },
  {
    "text": "top here um with the funs and the monads",
    "start": "154360",
    "end": "157680"
  },
  {
    "text": "where down at the level of sort of yeah",
    "start": "157680",
    "end": "162040"
  },
  {
    "text": "let's make the most of what we've got",
    "start": "162040",
    "end": "164560"
  },
  {
    "text": "right but the interesting part of this",
    "start": "164560",
    "end": "166560"
  },
  {
    "text": "talk I hope um and what I hope you will",
    "start": "166560",
    "end": "169000"
  },
  {
    "text": "take away from it is that we can apply",
    "start": "169000",
    "end": "171640"
  },
  {
    "text": "at least some of our basic FP techniques",
    "start": "171640",
    "end": "174879"
  },
  {
    "text": "in a context and in particular in a",
    "start": "174879",
    "end": "177400"
  },
  {
    "text": "language where we might not normally",
    "start": "177400",
    "end": "180360"
  },
  {
    "text": "think to to do that while we're on the",
    "start": "180360",
    "end": "183239"
  },
  {
    "text": "subject of expectations management by",
    "start": "183239",
    "end": "184879"
  },
  {
    "text": "the way at the end of this talk it's",
    "start": "184879",
    "end": "187720"
  },
  {
    "text": "going to feel like I've hardly shown you",
    "start": "187720",
    "end": "189200"
  },
  {
    "text": "any code you couldn't have figured out",
    "start": "189200",
    "end": "190560"
  },
  {
    "text": "how to write yourself um and probably oh",
    "start": "190560",
    "end": "194920"
  },
  {
    "text": "yeah if I'd thought about it for a",
    "start": "194920",
    "end": "196000"
  },
  {
    "text": "little bit I would have thought of all",
    "start": "196000",
    "end": "197120"
  },
  {
    "text": "of this myself um I hope you'll forgive",
    "start": "197120",
    "end": "199319"
  },
  {
    "text": "me for that and bear bear with me",
    "start": "199319",
    "end": "201080"
  },
  {
    "text": "through the talk anyway what I really",
    "start": "201080",
    "end": "203720"
  },
  {
    "text": "want to achieve today is to shift your",
    "start": "203720",
    "end": "205760"
  },
  {
    "text": "perspective",
    "start": "205760",
    "end": "207519"
  },
  {
    "text": "subtly more than to teach you new things",
    "start": "207519",
    "end": "210439"
  },
  {
    "text": "so I want you to see data",
    "start": "210439",
    "end": "212319"
  },
  {
    "text": "Transformations that we do in SQL as",
    "start": "212319",
    "end": "214159"
  },
  {
    "text": "fundamentally the same sort of stuff as",
    "start": "214159",
    "end": "217040"
  },
  {
    "text": "data Transformations that we do in other",
    "start": "217040",
    "end": "219159"
  },
  {
    "text": "app player uh languages it's just done",
    "start": "219159",
    "end": "222159"
  },
  {
    "text": "on a different computer so fundamentally",
    "start": "222159",
    "end": "225000"
  },
  {
    "text": "I want you to think of SQL as a",
    "start": "225000",
    "end": "226840"
  },
  {
    "text": "programming language sometimes a",
    "start": "226840",
    "end": "228680"
  },
  {
    "text": "one but a programming language and",
    "start": "228680",
    "end": "230519"
  },
  {
    "text": "sometimes it's worth",
    "start": "230519",
    "end": "233120"
  },
  {
    "text": "using so my aim over the next 20 25",
    "start": "233799",
    "end": "237680"
  },
  {
    "text": "minutes is to show you how some of the",
    "start": "237680",
    "end": "239680"
  },
  {
    "text": "basic FP techniques that we all know and",
    "start": "239680",
    "end": "241280"
  },
  {
    "text": "love can be used effectively in SQL and",
    "start": "241280",
    "end": "244879"
  },
  {
    "text": "when I say that we're going to be using",
    "start": "244879",
    "end": "245920"
  },
  {
    "text": "FP techniques in SQL I mean we're",
    "start": "245920",
    "end": "247439"
  },
  {
    "text": "writing some SQL functions and a lot of",
    "start": "247439",
    "end": "249720"
  },
  {
    "text": "you are probably going to look at me and",
    "start": "249720",
    "end": "250760"
  },
  {
    "text": "say but Sam that sounds like a pretty",
    "start": "250760",
    "end": "252079"
  },
  {
    "text": "pointless talk because I don't really",
    "start": "252079",
    "end": "253799"
  },
  {
    "text": "write any SQL functions I don't write",
    "start": "253799",
    "end": "256239"
  },
  {
    "text": "stored procedures",
    "start": "256239",
    "end": "258560"
  },
  {
    "text": "so I really need to start I suppose by",
    "start": "258560",
    "end": "261239"
  },
  {
    "text": "convincing you that actually maybe you",
    "start": "261239",
    "end": "262479"
  },
  {
    "text": "should do at least some more work in the",
    "start": "262479",
    "end": "265680"
  },
  {
    "text": "database itself then I convince you that",
    "start": "265680",
    "end": "268160"
  },
  {
    "text": "then I can try to convince you that",
    "start": "268160",
    "end": "269639"
  },
  {
    "text": "while you're there you should be doing",
    "start": "269639",
    "end": "270680"
  },
  {
    "text": "it functionally hopefully that'll be the",
    "start": "270680",
    "end": "272360"
  },
  {
    "text": "easy",
    "start": "272360",
    "end": "273280"
  },
  {
    "text": "bit um there's an elephant on this Slide",
    "start": "273280",
    "end": "276320"
  },
  {
    "text": "by the way just to be up front about it",
    "start": "276320",
    "end": "278039"
  },
  {
    "text": "uh when I say SQL here I don't think I'm",
    "start": "278039",
    "end": "280479"
  },
  {
    "text": "going to be showing you much that can't",
    "start": "280479",
    "end": "282039"
  },
  {
    "text": "be done in just about any database I use",
    "start": "282039",
    "end": "284000"
  },
  {
    "text": "postgress you you should too your",
    "start": "284000",
    "end": "286240"
  },
  {
    "text": "mileage may vary if you're using other",
    "start": "286240",
    "end": "290680"
  },
  {
    "text": "implementations I think most",
    "start": "291080",
    "end": "293120"
  },
  {
    "text": "applications these days take the",
    "start": "293120",
    "end": "294560"
  },
  {
    "text": "approach that the database is for",
    "start": "294560",
    "end": "296440"
  },
  {
    "text": "storage",
    "start": "296440",
    "end": "297759"
  },
  {
    "text": "only it's diss it's not",
    "start": "297759",
    "end": "301440"
  },
  {
    "text": "compute when you want to do something",
    "start": "301440",
    "end": "303479"
  },
  {
    "text": "with the data that lives in the database",
    "start": "303479",
    "end": "305240"
  },
  {
    "text": "first thing you do is get that data out",
    "start": "305240",
    "end": "306600"
  },
  {
    "text": "of there into a nice safe zone of your",
    "start": "306600",
    "end": "310520"
  },
  {
    "text": "functional programming language I think",
    "start": "310520",
    "end": "312560"
  },
  {
    "text": "that's kind of weird because a lot of",
    "start": "312560",
    "end": "314160"
  },
  {
    "text": "very smart people and much much better",
    "start": "314160",
    "end": "315960"
  },
  {
    "text": "programmers than I will ever be have put",
    "start": "315960",
    "end": "319039"
  },
  {
    "text": "a lot of very productive effort into",
    "start": "319039",
    "end": "321240"
  },
  {
    "text": "building for us these specialized tools",
    "start": "321240",
    "end": "324440"
  },
  {
    "text": "for data",
    "start": "324440",
    "end": "326160"
  },
  {
    "text": "munging and what we do with them is we",
    "start": "326160",
    "end": "328800"
  },
  {
    "text": "say I'm going to put my data in there",
    "start": "328800",
    "end": "330919"
  },
  {
    "text": "fine but I'm going to treat it as though",
    "start": "330919",
    "end": "333400"
  },
  {
    "text": "it's some simpleton manager of flat",
    "start": "333400",
    "end": "336160"
  },
  {
    "text": "files whose job is to take care of those",
    "start": "336160",
    "end": "338919"
  },
  {
    "text": "nice acid",
    "start": "338919",
    "end": "340319"
  },
  {
    "text": "principles but that's all not going to",
    "start": "340319",
    "end": "342759"
  },
  {
    "text": "do any data munging there I'm going to",
    "start": "342759",
    "end": "344520"
  },
  {
    "text": "pull it out into a higher level",
    "start": "344520",
    "end": "345800"
  },
  {
    "text": "application language and I'm going to do",
    "start": "345800",
    "end": "347160"
  },
  {
    "text": "all of my data munging there and",
    "start": "347160",
    "end": "348639"
  },
  {
    "text": "honestly the closest we really come to",
    "start": "348639",
    "end": "350520"
  },
  {
    "text": "bridging this gap of our general purpose",
    "start": "350520",
    "end": "352639"
  },
  {
    "text": "programming environment and specialized",
    "start": "352639",
    "end": "354240"
  },
  {
    "text": "tool for data munging is oh yeah we",
    "start": "354240",
    "end": "356560"
  },
  {
    "text": "should probably avoid doing n plus1",
    "start": "356560",
    "end": "358720"
  },
  {
    "text": "selects that' be a bad idea I think we",
    "start": "358720",
    "end": "361560"
  },
  {
    "text": "can do better than",
    "start": "361560",
    "end": "363160"
  },
  {
    "text": "that I think the reason that we've ended",
    "start": "363160",
    "end": "365199"
  },
  {
    "text": "up in this position is partly as a sort",
    "start": "365199",
    "end": "366720"
  },
  {
    "text": "of a hangover from the Enterprise Java",
    "start": "366720",
    "end": "368720"
  },
  {
    "text": "days um I think 10 or 20 years ago The",
    "start": "368720",
    "end": "371880"
  },
  {
    "text": "Architects on high were all telling us",
    "start": "371880",
    "end": "373639"
  },
  {
    "text": "how absolutely critical it was that you",
    "start": "373639",
    "end": "376360"
  },
  {
    "text": "do none I repeat none of your work in",
    "start": "376360",
    "end": "379880"
  },
  {
    "text": "the database and instead you do it all",
    "start": "379880",
    "end": "381840"
  },
  {
    "text": "in the web tier and the app tier because",
    "start": "381840",
    "end": "384080"
  },
  {
    "text": "that's where the magic of horizontal",
    "start": "384080",
    "end": "385520"
  },
  {
    "text": "scaling can happen um and I think",
    "start": "385520",
    "end": "388400"
  },
  {
    "text": "there's a couple of problems with that",
    "start": "388400",
    "end": "390160"
  },
  {
    "text": "um I think even if it was ever true it's",
    "start": "390160",
    "end": "392240"
  },
  {
    "text": "maybe not true today one of the problems",
    "start": "392240",
    "end": "394280"
  },
  {
    "text": "is I think actually databases scale",
    "start": "394280",
    "end": "397840"
  },
  {
    "text": "pretty well for most applications if",
    "start": "397840",
    "end": "399400"
  },
  {
    "text": "you're not dealing with terabytes of",
    "start": "399400",
    "end": "401960"
  },
  {
    "text": "data and if you are then maybe you're",
    "start": "401960",
    "end": "403720"
  },
  {
    "text": "looking at doing different architectures",
    "start": "403720",
    "end": "405080"
  },
  {
    "text": "entirely",
    "start": "405080",
    "end": "406160"
  },
  {
    "text": "anyway but often actually vertically",
    "start": "406160",
    "end": "409199"
  },
  {
    "text": "scaling on a modern cloud provider",
    "start": "409199",
    "end": "412440"
  },
  {
    "text": "vertically scaling a database is a",
    "start": "412440",
    "end": "414360"
  },
  {
    "text": "pretty feasible thing to do it's not",
    "start": "414360",
    "end": "416720"
  },
  {
    "text": "hard it's not expensive it's not likely",
    "start": "416720",
    "end": "418759"
  },
  {
    "text": "to fail",
    "start": "418759",
    "end": "420360"
  },
  {
    "text": "and to be honest horizontally scaling",
    "start": "420360",
    "end": "421759"
  },
  {
    "text": "the database by chucking some read",
    "start": "421759",
    "end": "423160"
  },
  {
    "text": "replicas behind it is actually also",
    "start": "423160",
    "end": "424759"
  },
  {
    "text": "pretty straightforward these days and so",
    "start": "424759",
    "end": "427240"
  },
  {
    "text": "I think a lot of the reason for no you",
    "start": "427240",
    "end": "429120"
  },
  {
    "text": "must do all the scaling in the web and",
    "start": "429120",
    "end": "430479"
  },
  {
    "text": "the app TI Falls away but I think",
    "start": "430479",
    "end": "433240"
  },
  {
    "text": "there's also another problem which is",
    "start": "433240",
    "end": "435560"
  },
  {
    "text": "even if your nice theory is that you're",
    "start": "435560",
    "end": "437360"
  },
  {
    "text": "going to do all of your scaling in the",
    "start": "437360",
    "end": "438520"
  },
  {
    "text": "web tier and the app",
    "start": "438520",
    "end": "440879"
  },
  {
    "text": "tier all you're actually doing is okay",
    "start": "440879",
    "end": "444000"
  },
  {
    "text": "let's get the data off to a different",
    "start": "444000",
    "end": "446080"
  },
  {
    "text": "machine and I can horizontally scale",
    "start": "446080",
    "end": "447680"
  },
  {
    "text": "that machine and there I have no scaling",
    "start": "447680",
    "end": "450039"
  },
  {
    "text": "problems but actually the bottleneck",
    "start": "450039",
    "end": "452840"
  },
  {
    "text": "wasn't",
    "start": "452840",
    "end": "454639"
  },
  {
    "text": "necessarily the thing that you've now",
    "start": "454639",
    "end": "456599"
  },
  {
    "text": "scaled out the bottleneck is often I",
    "start": "456599",
    "end": "459160"
  },
  {
    "text": "need to read this stuff from a dis the",
    "start": "459160",
    "end": "462160"
  },
  {
    "text": "bottleneck is often IO and in fact if",
    "start": "462160",
    "end": "465759"
  },
  {
    "text": "you're pulling all of this data off of",
    "start": "465759",
    "end": "468599"
  },
  {
    "text": "your database into your application",
    "start": "468599",
    "end": "470720"
  },
  {
    "text": "layer sending everything across the wire",
    "start": "470720",
    "end": "473240"
  },
  {
    "text": "before you do any processing actually",
    "start": "473240",
    "end": "475800"
  },
  {
    "text": "you've often made your process worse",
    "start": "475800",
    "end": "477840"
  },
  {
    "text": "worse because you've told your database",
    "start": "477840",
    "end": "480039"
  },
  {
    "text": "no you have to go read all of the data",
    "start": "480039",
    "end": "481800"
  },
  {
    "text": "I'm going to do a lot of my filtering",
    "start": "481800",
    "end": "483240"
  },
  {
    "text": "over here and not only do you have to",
    "start": "483240",
    "end": "485159"
  },
  {
    "text": "read it all you have to serialize it all",
    "start": "485159",
    "end": "486800"
  },
  {
    "text": "over the wire so I think there's a",
    "start": "486800",
    "end": "489159"
  },
  {
    "text": "couple of reasons why we just shouldn't",
    "start": "489159",
    "end": "491000"
  },
  {
    "text": "follow this this Enterprise Java rubbish",
    "start": "491000",
    "end": "495280"
  },
  {
    "text": "anymore so at this point I'm going to",
    "start": "495280",
    "end": "497080"
  },
  {
    "text": "decide just on your behalf that you're",
    "start": "497080",
    "end": "498599"
  },
  {
    "text": "all convinced that there's no",
    "start": "498599",
    "end": "499879"
  },
  {
    "text": "architectural or performance reason that",
    "start": "499879",
    "end": "501599"
  },
  {
    "text": "everything needs to be pulled into the",
    "start": "501599",
    "end": "502720"
  },
  {
    "text": "app layer before we do anything interest",
    "start": "502720",
    "end": "504520"
  },
  {
    "text": "interesting with it I realize that's",
    "start": "504520",
    "end": "506319"
  },
  {
    "text": "sort of the Whirlwind overview and that",
    "start": "506319",
    "end": "507879"
  },
  {
    "text": "many people will want to argue that",
    "start": "507879",
    "end": "509280"
  },
  {
    "text": "point and I would love to argue that",
    "start": "509280",
    "end": "510479"
  },
  {
    "text": "point with you later out in the hallway",
    "start": "510479",
    "end": "511840"
  },
  {
    "text": "track um but for now I'm going to assume",
    "start": "511840",
    "end": "514880"
  },
  {
    "text": "that we're up for writing more of our",
    "start": "514880",
    "end": "516479"
  },
  {
    "text": "logic in SQL um so long as I can",
    "start": "516479",
    "end": "519479"
  },
  {
    "text": "convince you that it's possible to do",
    "start": "519479",
    "end": "520919"
  },
  {
    "text": "that in a way that is not fundamentally",
    "start": "520919",
    "end": "523719"
  },
  {
    "text": "terrible and make you going to cry so",
    "start": "523719",
    "end": "526240"
  },
  {
    "text": "it's probably it helpful at this point",
    "start": "526240",
    "end": "527600"
  },
  {
    "text": "to give you a few really really basic",
    "start": "527600",
    "end": "529440"
  },
  {
    "text": "examples of what putting more of that",
    "start": "529440",
    "end": "531600"
  },
  {
    "text": "work into the database might look like",
    "start": "531600",
    "end": "533920"
  },
  {
    "text": "and I mean really basic don't expect to",
    "start": "533920",
    "end": "536240"
  },
  {
    "text": "be wowed by the amazing power of the",
    "start": "536240",
    "end": "537839"
  },
  {
    "text": "code in the next couple of slides",
    "start": "537839",
    "end": "541200"
  },
  {
    "text": "one of the things you might want to do",
    "start": "541200",
    "end": "542360"
  },
  {
    "text": "for example if you're putting a little",
    "start": "542360",
    "end": "543880"
  },
  {
    "text": "bit more of the logic that is currently",
    "start": "543880",
    "end": "545480"
  },
  {
    "text": "in your app layer shifting that across",
    "start": "545480",
    "end": "547480"
  },
  {
    "text": "down into the database is a Json",
    "start": "547480",
    "end": "549320"
  },
  {
    "text": "transformation a lot of the time I see a",
    "start": "549320",
    "end": "551440"
  },
  {
    "text": "lot of code bases with app layers which",
    "start": "551440",
    "end": "553279"
  },
  {
    "text": "are basically run some queries to get",
    "start": "553279",
    "end": "555360"
  },
  {
    "text": "some stuff out of the database your app",
    "start": "555360",
    "end": "557320"
  },
  {
    "text": "layer all this marvelous transformation",
    "start": "557320",
    "end": "559320"
  },
  {
    "text": "that you're doing purely and",
    "start": "559320",
    "end": "560240"
  },
  {
    "text": "functionally is mostly just I ran a",
    "start": "560240",
    "end": "562880"
  },
  {
    "text": "couple of queries and I turned them into",
    "start": "562880",
    "end": "564320"
  },
  {
    "text": "Json you can do that in the database",
    "start": "564320",
    "end": "566839"
  },
  {
    "text": "save yourself to the work in the app",
    "start": "566839",
    "end": "568240"
  },
  {
    "text": "player and it's actually even",
    "start": "568240",
    "end": "569440"
  },
  {
    "text": "particularly complex to do and it",
    "start": "569440",
    "end": "570640"
  },
  {
    "text": "doesn't muddy your Sequel and make it",
    "start": "570640",
    "end": "572640"
  },
  {
    "text": "look look too horrible it's especially",
    "start": "572640",
    "end": "574720"
  },
  {
    "text": "useful by the way if you have one to",
    "start": "574720",
    "end": "576399"
  },
  {
    "text": "many relationships so I haven't shown an",
    "start": "576399",
    "end": "579600"
  },
  {
    "text": "example with a one to menu relationship",
    "start": "579600",
    "end": "581279"
  },
  {
    "text": "in here but if you had a field which was",
    "start": "581279",
    "end": "583360"
  },
  {
    "text": "comments or badges so that we're dealing",
    "start": "583360",
    "end": "586040"
  },
  {
    "text": "with a stack Overflow data set or",
    "start": "586040",
    "end": "587480"
  },
  {
    "text": "something then you can do that",
    "start": "587480",
    "end": "589000"
  },
  {
    "text": "aggregation here in the database side",
    "start": "589000",
    "end": "591240"
  },
  {
    "text": "where if you're doing it all in the app",
    "start": "591240",
    "end": "592399"
  },
  {
    "text": "player you're going to be running at",
    "start": "592399",
    "end": "593760"
  },
  {
    "text": "least two and probably three",
    "start": "593760",
    "end": "596440"
  },
  {
    "text": "queries some of you are going to hate",
    "start": "596440",
    "end": "598320"
  },
  {
    "text": "this example I ECT because it just looks",
    "start": "598320",
    "end": "600640"
  },
  {
    "text": "icky and wrong because you're combining",
    "start": "600640",
    "end": "602760"
  },
  {
    "text": "multiple things into one select",
    "start": "602760",
    "end": "604519"
  },
  {
    "text": "statement that are actually completely",
    "start": "604519",
    "end": "607320"
  },
  {
    "text": "unrelated I'm going to claim that you",
    "start": "607320",
    "end": "609200"
  },
  {
    "text": "should think about doing this anyway at",
    "start": "609200",
    "end": "611079"
  },
  {
    "text": "least on some occasions because really",
    "start": "611079",
    "end": "614279"
  },
  {
    "text": "where you have a piece of code that in",
    "start": "614279",
    "end": "615920"
  },
  {
    "text": "the API wants to go and get three bits",
    "start": "615920",
    "end": "617839"
  },
  {
    "text": "of information and you're executing",
    "start": "617839",
    "end": "619519"
  },
  {
    "text": "three SQL queries and then doing",
    "start": "619519",
    "end": "621560"
  },
  {
    "text": "something with the results doing that on",
    "start": "621560",
    "end": "624120"
  },
  {
    "text": "the other side of the network cable in",
    "start": "624120",
    "end": "626440"
  },
  {
    "text": "the database is actually fundamentally",
    "start": "626440",
    "end": "628640"
  },
  {
    "text": "no worse than doing it in on the",
    "start": "628640",
    "end": "631000"
  },
  {
    "text": "application side of that network cable I",
    "start": "631000",
    "end": "634440"
  },
  {
    "text": "suspect some of you will never agree",
    "start": "634440",
    "end": "635839"
  },
  {
    "text": "with me on that and so I'm just going to",
    "start": "635839",
    "end": "637560"
  },
  {
    "text": "move on though even if that one wasn't",
    "start": "637560",
    "end": "639279"
  },
  {
    "text": "to your taste this one should be a bit",
    "start": "639279",
    "end": "641800"
  },
  {
    "text": "more within your comfort zone what we're",
    "start": "641800",
    "end": "644560"
  },
  {
    "text": "doing here is using a function for one",
    "start": "644560",
    "end": "646160"
  },
  {
    "text": "of the many things that functions are",
    "start": "646160",
    "end": "647839"
  },
  {
    "text": "good for so on the left hand side we",
    "start": "647839",
    "end": "649800"
  },
  {
    "text": "have a query that is doing a left join",
    "start": "649800",
    "end": "651920"
  },
  {
    "text": "I'll tell you about lateral in a moment",
    "start": "651920",
    "end": "653560"
  },
  {
    "text": "that is doing a left join to something",
    "start": "653560",
    "end": "656040"
  },
  {
    "text": "that is being pulled from a function so",
    "start": "656040",
    "end": "658760"
  },
  {
    "text": "we have extracted some logic that we",
    "start": "658760",
    "end": "660399"
  },
  {
    "text": "could have just written in line in the",
    "start": "660399",
    "end": "661839"
  },
  {
    "text": "query there but we've decided that maybe",
    "start": "661839",
    "end": "663920"
  },
  {
    "text": "this is reusable maybe this is something",
    "start": "663920",
    "end": "665720"
  },
  {
    "text": "that deserves a name maybe this is",
    "start": "665720",
    "end": "667240"
  },
  {
    "text": "something that needs a unit test",
    "start": "667240",
    "end": "668720"
  },
  {
    "text": "whatever we've extracted a function made",
    "start": "668720",
    "end": "670959"
  },
  {
    "text": "it a named thing um so that should all",
    "start": "670959",
    "end": "673600"
  },
  {
    "text": "be be pretty familiar and I think that",
    "start": "673600",
    "end": "675440"
  },
  {
    "text": "can be that's something we don't think",
    "start": "675440",
    "end": "677160"
  },
  {
    "text": "about doing in in databases very often",
    "start": "677160",
    "end": "679279"
  },
  {
    "text": "and that can be quite",
    "start": "679279",
    "end": "681440"
  },
  {
    "text": "useful so we're now bit more than 10",
    "start": "681440",
    "end": "684200"
  },
  {
    "text": "minutes in and what have I actually",
    "start": "684200",
    "end": "685920"
  },
  {
    "text": "shown you about doing FP and SQL bugger",
    "start": "685920",
    "end": "689279"
  },
  {
    "text": "all that's what so let's take a step",
    "start": "689279",
    "end": "692800"
  },
  {
    "text": "back a moment talk through what",
    "start": "692800",
    "end": "695040"
  },
  {
    "text": "approaching SQL functionally actually",
    "start": "695040",
    "end": "697160"
  },
  {
    "text": "looks like at a high level um and this",
    "start": "697160",
    "end": "699399"
  },
  {
    "text": "is kind of the core groundwork that I",
    "start": "699399",
    "end": "703120"
  },
  {
    "text": "want to lay for the for the rest of the",
    "start": "703120",
    "end": "704720"
  },
  {
    "text": "slides here this",
    "start": "704720",
    "end": "706839"
  },
  {
    "text": "morning I think you've probably I",
    "start": "706839",
    "end": "709120"
  },
  {
    "text": "imagine you have probably heard of the",
    "start": "709120",
    "end": "711079"
  },
  {
    "text": "notion of writing functional or FP",
    "start": "711079",
    "end": "713920"
  },
  {
    "text": "software with a functional core and an",
    "start": "713920",
    "end": "716320"
  },
  {
    "text": "imperative shell um so that's a",
    "start": "716320",
    "end": "718120"
  },
  {
    "text": "principle described by Gary bernhart in",
    "start": "718120",
    "end": "720680"
  },
  {
    "text": "his destroy all software series and I",
    "start": "720680",
    "end": "722360"
  },
  {
    "text": "think it's a really good FP principle",
    "start": "722360",
    "end": "725079"
  },
  {
    "text": "and I think it applies reasonably well",
    "start": "725079",
    "end": "726480"
  },
  {
    "text": "to squel if you sort of squint a little",
    "start": "726480",
    "end": "729639"
  },
  {
    "text": "bit I think when we're approaching",
    "start": "729639",
    "end": "732200"
  },
  {
    "text": "writing SQL and we want to try to do",
    "start": "732200",
    "end": "734079"
  },
  {
    "text": "things functionally we can think of the",
    "start": "734079",
    "end": "736680"
  },
  {
    "text": "imperative shell part of the sequel that",
    "start": "736680",
    "end": "739120"
  },
  {
    "text": "we're building up being the bits that",
    "start": "739120",
    "end": "741279"
  },
  {
    "text": "are specifying the tables that we're",
    "start": "741279",
    "end": "743240"
  },
  {
    "text": "reading from the global mutable state",
    "start": "743240",
    "end": "745240"
  },
  {
    "text": "that we need to be able to pull in",
    "start": "745240",
    "end": "747040"
  },
  {
    "text": "gathering all that data together in the",
    "start": "747040",
    "end": "748639"
  },
  {
    "text": "front",
    "start": "748639",
    "end": "749760"
  },
  {
    "text": "Clause that's all the imperative shell",
    "start": "749760",
    "end": "751920"
  },
  {
    "text": "bit you're reading Glo Global mutable",
    "start": "751920",
    "end": "753600"
  },
  {
    "text": "state it kind of has to",
    "start": "753600",
    "end": "755199"
  },
  {
    "text": "be and then after that you're doing data",
    "start": "755199",
    "end": "758399"
  },
  {
    "text": "Transformations you're doing filtering",
    "start": "758399",
    "end": "760399"
  },
  {
    "text": "and all of those are things that can be",
    "start": "760399",
    "end": "762199"
  },
  {
    "text": "done functionally and we don't tend to",
    "start": "762199",
    "end": "764639"
  },
  {
    "text": "think separately about those in in",
    "start": "764639",
    "end": "767360"
  },
  {
    "text": "database terms and I think we should um",
    "start": "767360",
    "end": "770240"
  },
  {
    "text": "the stuff that needs that Global mutable",
    "start": "770240",
    "end": "771880"
  },
  {
    "text": "State and the stuff that can be pure",
    "start": "771880",
    "end": "775040"
  },
  {
    "text": "functions so in addition to doing that",
    "start": "775040",
    "end": "777320"
  },
  {
    "text": "sort of heavy lifting at the outmost",
    "start": "777320",
    "end": "778680"
  },
  {
    "text": "level level on referentially transparent",
    "start": "778680",
    "end": "780399"
  },
  {
    "text": "functions inside the one big thing that",
    "start": "780399",
    "end": "783959"
  },
  {
    "text": "I am going to press in this talk is that",
    "start": "783959",
    "end": "788040"
  },
  {
    "text": "we're going to need to write everything",
    "start": "788040",
    "end": "789600"
  },
  {
    "text": "so that it ends up being one SQL",
    "start": "789600",
    "end": "791880"
  },
  {
    "text": "statement that might sound slightly",
    "start": "791880",
    "end": "794199"
  },
  {
    "text": "ridiculous um but it sounds slightly",
    "start": "794199",
    "end": "797639"
  },
  {
    "text": "ridiculous in a SQL context because",
    "start": "797639",
    "end": "799160"
  },
  {
    "text": "we're used to seeing stored procedures",
    "start": "799160",
    "end": "800720"
  },
  {
    "text": "that have sort of step one step two",
    "start": "800720",
    "end": "802639"
  },
  {
    "text": "whatever but if you think about this in",
    "start": "802639",
    "end": "804519"
  },
  {
    "text": "a lisp context or a Lambda calculus it's",
    "start": "804519",
    "end": "807440"
  },
  {
    "text": "actually quite common to say I'm going",
    "start": "807440",
    "end": "808839"
  },
  {
    "text": "going to insist on everything being just",
    "start": "808839",
    "end": "811600"
  },
  {
    "text": "one expression there might be arbitrary",
    "start": "811600",
    "end": "814160"
  },
  {
    "text": "nesting you subselects whatever but",
    "start": "814160",
    "end": "817240"
  },
  {
    "text": "everything has to be one expression",
    "start": "817240",
    "end": "820480"
  },
  {
    "text": "um Without Really explaining it too much",
    "start": "820480",
    "end": "822800"
  },
  {
    "text": "I'm going to insist also that we're",
    "start": "822800",
    "end": "824040"
  },
  {
    "text": "using language SQL in postgress this is",
    "start": "824040",
    "end": "826160"
  },
  {
    "text": "telling the database this is actually",
    "start": "826160",
    "end": "827440"
  },
  {
    "text": "just one SQL statement rather than",
    "start": "827440",
    "end": "829399"
  },
  {
    "text": "plpgsql which is the procedural language",
    "start": "829399",
    "end": "831639"
  },
  {
    "text": "within",
    "start": "831639",
    "end": "833880"
  },
  {
    "text": "postgress so functional programming how",
    "start": "833880",
    "end": "836519"
  },
  {
    "text": "are we going to do that functional",
    "start": "836519",
    "end": "837600"
  },
  {
    "text": "programming is all about map produce",
    "start": "837600",
    "end": "839480"
  },
  {
    "text": "right so when we this is the context",
    "start": "839480",
    "end": "842079"
  },
  {
    "text": "that I want to put in your brains when",
    "start": "842079",
    "end": "843600"
  },
  {
    "text": "we introduce functional programming to",
    "start": "843600",
    "end": "845440"
  },
  {
    "text": "people who maybe don't know very much",
    "start": "845440",
    "end": "846680"
  },
  {
    "text": "about it yet we talk about often how",
    "start": "846680",
    "end": "850160"
  },
  {
    "text": "powerfully General the M produce",
    "start": "850160",
    "end": "853240"
  },
  {
    "text": "Paradigm is because FP is really good at",
    "start": "853240",
    "end": "857040"
  },
  {
    "text": "simple individual data data",
    "start": "857040",
    "end": "859399"
  },
  {
    "text": "Transformations composed together",
    "start": "859399",
    "end": "861199"
  },
  {
    "text": "through generic collection",
    "start": "861199",
    "end": "863920"
  },
  {
    "text": "operations obviously map produce and",
    "start": "863920",
    "end": "866079"
  },
  {
    "text": "Associated functions operate on lists",
    "start": "866079",
    "end": "868800"
  },
  {
    "text": "not going to jump into how foldables",
    "start": "868800",
    "end": "871040"
  },
  {
    "text": "might exist in the database or whatever",
    "start": "871040",
    "end": "872600"
  },
  {
    "text": "I'm going to handwave across whether",
    "start": "872600",
    "end": "874519"
  },
  {
    "text": "we're talking about relations as sets or",
    "start": "874519",
    "end": "876639"
  },
  {
    "text": "lists or whatever collections I'm going",
    "start": "876639",
    "end": "878680"
  },
  {
    "text": "to talk about them as things that we can",
    "start": "878680",
    "end": "880240"
  },
  {
    "text": "map and list map and reduce over so I",
    "start": "880240",
    "end": "883399"
  },
  {
    "text": "want to walk through quickly the sorts",
    "start": "883399",
    "end": "885480"
  },
  {
    "text": "of operations that make FP list or set",
    "start": "885480",
    "end": "888920"
  },
  {
    "text": "processing so powerful and I want to",
    "start": "888920",
    "end": "890600"
  },
  {
    "text": "show you the direct correspondence in",
    "start": "890600",
    "end": "893800"
  },
  {
    "text": "SQL so map I'm going to use some has",
    "start": "893800",
    "end": "896680"
  },
  {
    "text": "Type signatures up the front just",
    "start": "896680",
    "end": "897839"
  },
  {
    "text": "because it is Lambda Jam and that's kind",
    "start": "897839",
    "end": "899160"
  },
  {
    "text": "of obligatory um but I'm going to walk",
    "start": "899160",
    "end": "901959"
  },
  {
    "text": "you through some of these functions so",
    "start": "901959",
    "end": "903279"
  },
  {
    "text": "map has a fairly simple function",
    "start": "903279",
    "end": "905399"
  },
  {
    "text": "signature here taking an a to a function",
    "start": "905399",
    "end": "907720"
  },
  {
    "text": "of a to B we've got a list of A's we're",
    "start": "907720",
    "end": "909639"
  },
  {
    "text": "going to give you a list of B's I think",
    "start": "909639",
    "end": "911399"
  },
  {
    "text": "I don't think anyone would be surprised",
    "start": "911399",
    "end": "913040"
  },
  {
    "text": "by the explanation that this is how you",
    "start": "913040",
    "end": "914639"
  },
  {
    "text": "do that in SQL um I do suspect that",
    "start": "914639",
    "end": "918079"
  },
  {
    "text": "probably when you look at this SQL",
    "start": "918079",
    "end": "919480"
  },
  {
    "text": "you're not so much thinking in terms of",
    "start": "919480",
    "end": "921399"
  },
  {
    "text": "a map function but I think you",
    "start": "921399",
    "end": "924120"
  },
  {
    "text": "should I imagine that no one's going to",
    "start": "924120",
    "end": "926079"
  },
  {
    "text": "be particularly surprised that filter",
    "start": "926079",
    "end": "927880"
  },
  {
    "text": "has a pretty good oper in the data has",
    "start": "927880",
    "end": "929920"
  },
  {
    "text": "pretty good database support because",
    "start": "929920",
    "end": "931399"
  },
  {
    "text": "we're obviously doing a lot of filtering",
    "start": "931399",
    "end": "933759"
  },
  {
    "text": "constructing a lot of predicates in our",
    "start": "933759",
    "end": "935120"
  },
  {
    "text": "wear Clauses in the database so I don't",
    "start": "935120",
    "end": "936560"
  },
  {
    "text": "think there's anything that's a surprise",
    "start": "936560",
    "end": "939399"
  },
  {
    "text": "here reduce is is one that maybe you",
    "start": "939399",
    "end": "942519"
  },
  {
    "text": "don't think about so much as turning up",
    "start": "942519",
    "end": "945040"
  },
  {
    "text": "frequently uh in a database context um",
    "start": "945040",
    "end": "948440"
  },
  {
    "text": "aggregate functions though are in fact",
    "start": "948440",
    "end": "950920"
  },
  {
    "text": "reduction operations um the type",
    "start": "950920",
    "end": "954040"
  },
  {
    "text": "signature here is not one that you would",
    "start": "954040",
    "end": "955560"
  },
  {
    "text": "find on an actual hascal foldar or fold",
    "start": "955560",
    "end": "958759"
  },
  {
    "text": "L just because I've tried to be faithful",
    "start": "958759",
    "end": "960680"
  },
  {
    "text": "to the way that postgress actually",
    "start": "960680",
    "end": "962120"
  },
  {
    "text": "represents an accumulation function",
    "start": "962120",
    "end": "963920"
  },
  {
    "text": "sorry an aggregation function but you",
    "start": "963920",
    "end": "966800"
  },
  {
    "text": "can Define reduced functions this is the",
    "start": "966800",
    "end": "968319"
  },
  {
    "text": "type signature that they would have if",
    "start": "968319",
    "end": "969560"
  },
  {
    "text": "we were in a language like",
    "start": "969560",
    "end": "971040"
  },
  {
    "text": "H can cat probably not particularly",
    "start": "971040",
    "end": "974800"
  },
  {
    "text": "surprising that you can concatenate two",
    "start": "974800",
    "end": "976720"
  },
  {
    "text": "relations together uh in a",
    "start": "976720",
    "end": "980160"
  },
  {
    "text": "database one that maybe is a little bit",
    "start": "980160",
    "end": "982120"
  },
  {
    "text": "more surprising uh is concat map I",
    "start": "982120",
    "end": "985600"
  },
  {
    "text": "promised earlier on that I was going to",
    "start": "985600",
    "end": "987000"
  },
  {
    "text": "explain lateral joins I suspect this is",
    "start": "987000",
    "end": "989839"
  },
  {
    "text": "probably the only bit of SQL syntax that",
    "start": "989839",
    "end": "991600"
  },
  {
    "text": "wouldn't be familiar to to most people",
    "start": "991600",
    "end": "994440"
  },
  {
    "text": "in this room maybe some of you have seen",
    "start": "994440",
    "end": "996000"
  },
  {
    "text": "lateral joins before maybe you haven't",
    "start": "996000",
    "end": "998120"
  },
  {
    "text": "the idea of a lateral join is that it",
    "start": "998120",
    "end": "1000880"
  },
  {
    "text": "allows you to define the right hand side",
    "start": "1000880",
    "end": "1004079"
  },
  {
    "text": "of the join the relation on the right",
    "start": "1004079",
    "end": "1006000"
  },
  {
    "text": "hand side as one which for each row that",
    "start": "1006000",
    "end": "1009440"
  },
  {
    "text": "appears in the relation on the left hand",
    "start": "1009440",
    "end": "1011839"
  },
  {
    "text": "side does something and returns a result",
    "start": "1011839",
    "end": "1014560"
  },
  {
    "text": "set so it allows you to and I'm going to",
    "start": "1014560",
    "end": "1018160"
  },
  {
    "text": "jump to an example it allows you",
    "start": "1018160",
    "end": "1020120"
  },
  {
    "text": "basically to say for each thing on the",
    "start": "1020120",
    "end": "1022160"
  },
  {
    "text": "left maybe I want Z one or many things",
    "start": "1022160",
    "end": "1026000"
  },
  {
    "text": "in the relation on the right so my",
    "start": "1026000",
    "end": "1027880"
  },
  {
    "text": "stupidly contrived example here is maybe",
    "start": "1027880",
    "end": "1029798"
  },
  {
    "text": "we've got a up the top here we've got a",
    "start": "1029799",
    "end": "1032480"
  },
  {
    "text": "table of competition entrance and we've",
    "start": "1032480",
    "end": "1034720"
  },
  {
    "text": "got their names and we've got how many",
    "start": "1034720",
    "end": "1036120"
  },
  {
    "text": "times they've been entered into the",
    "start": "1036120",
    "end": "1037400"
  },
  {
    "text": "competition and we want to get a result",
    "start": "1037400",
    "end": "1039480"
  },
  {
    "text": "set which is okay well John's entered",
    "start": "1039480",
    "end": "1041120"
  },
  {
    "text": "three times so I want him there three",
    "start": "1041120",
    "end": "1042558"
  },
  {
    "text": "times Alice has entered once Bob hasn't",
    "start": "1042559",
    "end": "1044839"
  },
  {
    "text": "entered at all lateral join is how you",
    "start": "1044839",
    "end": "1047520"
  },
  {
    "text": "would do that and has that would be a",
    "start": "1047520",
    "end": "1049160"
  },
  {
    "text": "concat",
    "start": "1049160",
    "end": "1051600"
  },
  {
    "text": "map so that's great we've seen how there",
    "start": "1052760",
    "end": "1056960"
  },
  {
    "text": "are sort of SQL I suppose",
    "start": "1056960",
    "end": "1058679"
  },
  {
    "text": "correspondences to some core higher",
    "start": "1058679",
    "end": "1060840"
  },
  {
    "text": "order functions that we have in",
    "start": "1060840",
    "end": "1062120"
  },
  {
    "text": "functional programming",
    "start": "1062120",
    "end": "1064160"
  },
  {
    "text": "languages now what how do we go forth",
    "start": "1064160",
    "end": "1067120"
  },
  {
    "text": "and use that information to write",
    "start": "1067120",
    "end": "1069400"
  },
  {
    "text": "functional SQL and this is the bit where",
    "start": "1069400",
    "end": "1072200"
  },
  {
    "text": "I stand up here and feel really stupid",
    "start": "1072200",
    "end": "1074280"
  },
  {
    "text": "because the way to write FP in SQL is",
    "start": "1074280",
    "end": "1076760"
  },
  {
    "text": "the same way as you write FP in any",
    "start": "1076760",
    "end": "1078919"
  },
  {
    "text": "language which is that you write pure",
    "start": "1078919",
    "end": "1081000"
  },
  {
    "text": "functions and you compose them",
    "start": "1081000",
    "end": "1084880"
  },
  {
    "text": "um so let",
    "start": "1084880",
    "end": "1086760"
  },
  {
    "text": "me show you what that means but before I",
    "start": "1086760",
    "end": "1089320"
  },
  {
    "text": "do let me just emphasize that when I say",
    "start": "1089320",
    "end": "1091880"
  },
  {
    "text": "pure functions I mean it so certainly",
    "start": "1091880",
    "end": "1095159"
  },
  {
    "text": "we're going to want to avoid mutating or",
    "start": "1095159",
    "end": "1097320"
  },
  {
    "text": "otherwise side affecting functions um",
    "start": "1097320",
    "end": "1100039"
  },
  {
    "text": "but a lot of the time we're also going",
    "start": "1100039",
    "end": "1101320"
  },
  {
    "text": "to want to write fully referentially",
    "start": "1101320",
    "end": "1103520"
  },
  {
    "text": "transparent functions so functions which",
    "start": "1103520",
    "end": "1106240"
  },
  {
    "text": "depend only on their actual arguments",
    "start": "1106240",
    "end": "1108559"
  },
  {
    "text": "and don't in the data in database terms",
    "start": "1108559",
    "end": "1111200"
  },
  {
    "text": "that means that they don't reach out and",
    "start": "1111200",
    "end": "1113080"
  },
  {
    "text": "read from arbitrary tables in the",
    "start": "1113080",
    "end": "1116720"
  },
  {
    "text": "database um and the reason for that is",
    "start": "1116720",
    "end": "1119120"
  },
  {
    "text": "reading arbitrary tables in the database",
    "start": "1119120",
    "end": "1120799"
  },
  {
    "text": "is basically accessing Global mutable",
    "start": "1120799",
    "end": "1123039"
  },
  {
    "text": "State um I do have a caveat here um I",
    "start": "1123039",
    "end": "1127640"
  },
  {
    "text": "say write mostly pure functions um I'm",
    "start": "1127640",
    "end": "1131000"
  },
  {
    "text": "saying that because you will want to",
    "start": "1131000",
    "end": "1132720"
  },
  {
    "text": "write some functions which go out and",
    "start": "1132720",
    "end": "1134039"
  },
  {
    "text": "read from arbitrary tables those are",
    "start": "1134039",
    "end": "1136960"
  },
  {
    "text": "going in the imperative shell bits so",
    "start": "1136960",
    "end": "1140120"
  },
  {
    "text": "when we're writing the sort of",
    "start": "1140120",
    "end": "1141480"
  },
  {
    "text": "functional core Parts when we're writing",
    "start": "1141480",
    "end": "1143480"
  },
  {
    "text": "the map and the filter type functions",
    "start": "1143480",
    "end": "1146200"
  },
  {
    "text": "rather than stuff that we might put in",
    "start": "1146200",
    "end": "1147440"
  },
  {
    "text": "the from Clause then those are the ones",
    "start": "1147440",
    "end": "1151000"
  },
  {
    "text": "we want to be referentially transparent",
    "start": "1151000",
    "end": "1155240"
  },
  {
    "text": "please so trivial example okay what's a",
    "start": "1155440",
    "end": "1158640"
  },
  {
    "text": "pure referentially transparent function",
    "start": "1158640",
    "end": "1161799"
  },
  {
    "text": "you want to write the thing on the left",
    "start": "1161799",
    "end": "1163360"
  },
  {
    "text": "rather than writing the thing on the",
    "start": "1163360",
    "end": "1164640"
  },
  {
    "text": "right okay you want to just take in the",
    "start": "1164640",
    "end": "1167280"
  },
  {
    "text": "arguments that you need in order to be",
    "start": "1167280",
    "end": "1169200"
  },
  {
    "text": "able to construct the result without",
    "start": "1169200",
    "end": "1170559"
  },
  {
    "text": "having to read from anything rather than",
    "start": "1170559",
    "end": "1173559"
  },
  {
    "text": "saying okay well I'm going to take",
    "start": "1173559",
    "end": "1175320"
  },
  {
    "text": "basically a pointer and I'm going to",
    "start": "1175320",
    "end": "1176960"
  },
  {
    "text": "dreference it to go and get the things",
    "start": "1176960",
    "end": "1179240"
  },
  {
    "text": "that I then need to concatenate together",
    "start": "1179240",
    "end": "1180720"
  },
  {
    "text": "it's this level of simple that is this",
    "start": "1180720",
    "end": "1184120"
  },
  {
    "text": "the sort of FP that that I'm encouraging",
    "start": "1184120",
    "end": "1186240"
  },
  {
    "text": "you to write um so on the left good on",
    "start": "1186240",
    "end": "1189360"
  },
  {
    "text": "the right bad um worth noting by the way",
    "start": "1189360",
    "end": "1192360"
  },
  {
    "text": "that postest does actually have a",
    "start": "1192360",
    "end": "1193760"
  },
  {
    "text": "specifically built-in concept of whether",
    "start": "1193760",
    "end": "1195960"
  },
  {
    "text": "something is whether a function is",
    "start": "1195960",
    "end": "1197240"
  },
  {
    "text": "referentially transparent or not you",
    "start": "1197240",
    "end": "1198919"
  },
  {
    "text": "actually if you tell postgress that this",
    "start": "1198919",
    "end": "1201720"
  },
  {
    "text": "function is immutable then you're",
    "start": "1201720",
    "end": "1204360"
  },
  {
    "text": "telling it this is referentially",
    "start": "1204360",
    "end": "1205440"
  },
  {
    "text": "transparent and you can do query planner",
    "start": "1205440",
    "end": "1207520"
  },
  {
    "text": "optimizations safe in that knowledge if",
    "start": "1207520",
    "end": "1209799"
  },
  {
    "text": "you say it's stable you're saying I'm",
    "start": "1209799",
    "end": "1211240"
  },
  {
    "text": "doing a data lookup somewhere in this",
    "start": "1211240",
    "end": "1212640"
  },
  {
    "text": "function and that might affect the way",
    "start": "1212640",
    "end": "1214280"
  },
  {
    "text": "the query optimizations that you can",
    "start": "1214280",
    "end": "1217640"
  },
  {
    "text": "perform um this is very similar to the",
    "start": "1217640",
    "end": "1219880"
  },
  {
    "text": "previous slide but I just wanted to",
    "start": "1219880",
    "end": "1221039"
  },
  {
    "text": "chuck it in here to demonstrate that in",
    "start": "1221039",
    "end": "1223000"
  },
  {
    "text": "fact you you don't just have to have",
    "start": "1223000",
    "end": "1225240"
  },
  {
    "text": "functions which take only scalar values",
    "start": "1225240",
    "end": "1227960"
  },
  {
    "text": "you can actually have competent types in",
    "start": "1227960",
    "end": "1229679"
  },
  {
    "text": "the database I'm not going to go into",
    "start": "1229679",
    "end": "1231120"
  },
  {
    "text": "any sort of type theory in the database",
    "start": "1231120",
    "end": "1233200"
  },
  {
    "text": "context um although that's kind of",
    "start": "1233200",
    "end": "1234960"
  },
  {
    "text": "interesting too um but you can you can",
    "start": "1234960",
    "end": "1238320"
  },
  {
    "text": "construct um you can pass in whole rows",
    "start": "1238320",
    "end": "1240760"
  },
  {
    "text": "of things or you don't just have to be",
    "start": "1240760",
    "end": "1242799"
  },
  {
    "text": "stuck with first name given name sorry",
    "start": "1242799",
    "end": "1246200"
  },
  {
    "text": "given name family",
    "start": "1246200",
    "end": "1249039"
  },
  {
    "text": "name I said that one reason that we want",
    "start": "1249919",
    "end": "1252039"
  },
  {
    "text": "referentially transparent functions is",
    "start": "1252039",
    "end": "1253880"
  },
  {
    "text": "that that's just because what good FP",
    "start": "1253880",
    "end": "1256000"
  },
  {
    "text": "programmers do and we want to be good FP",
    "start": "1256000",
    "end": "1257799"
  },
  {
    "text": "program RM um the other reason that you",
    "start": "1257799",
    "end": "1259919"
  },
  {
    "text": "really want to do that is to support",
    "start": "1259919",
    "end": "1261200"
  },
  {
    "text": "inlining so if I don't have this slide",
    "start": "1261200",
    "end": "1264559"
  },
  {
    "text": "someone is going to ask a question as",
    "start": "1264559",
    "end": "1266080"
  },
  {
    "text": "soon as I finish talking and say well",
    "start": "1266080",
    "end": "1267679"
  },
  {
    "text": "but how about performance isn't going to",
    "start": "1267679",
    "end": "1269080"
  },
  {
    "text": "be terrible um one of the things if you",
    "start": "1269080",
    "end": "1271200"
  },
  {
    "text": "do restrict yourselves to just doing FP",
    "start": "1271200",
    "end": "1274400"
  },
  {
    "text": "style SQL one of the things that you can",
    "start": "1274400",
    "end": "1276360"
  },
  {
    "text": "get is the sort of optimizations from a",
    "start": "1276360",
    "end": "1279760"
  },
  {
    "text": "SQL query planner that you might",
    "start": "1279760",
    "end": "1281640"
  },
  {
    "text": "otherwise get from an FP compiler you're",
    "start": "1281640",
    "end": "1284440"
  },
  {
    "text": "not going to get as sophisticated as say",
    "start": "1284440",
    "end": "1286760"
  },
  {
    "text": "GHC um but you can these two queries on",
    "start": "1286760",
    "end": "1291039"
  },
  {
    "text": "the right where basically this function",
    "start": "1291039",
    "end": "1295039"
  },
  {
    "text": "is being I've manually inlined it in",
    "start": "1295039",
    "end": "1297159"
  },
  {
    "text": "there these have exactly the same query",
    "start": "1297159",
    "end": "1299320"
  },
  {
    "text": "planner sorry these have exactly the",
    "start": "1299320",
    "end": "1301480"
  },
  {
    "text": "same query plan the optimizer is smart",
    "start": "1301480",
    "end": "1303760"
  },
  {
    "text": "enough to you know it's smart enough to",
    "start": "1303760",
    "end": "1306480"
  },
  {
    "text": "do things that are bigger than fits on",
    "start": "1306480",
    "end": "1308440"
  },
  {
    "text": "this slide as well but this is the",
    "start": "1308440",
    "end": "1309880"
  },
  {
    "text": "example that fits on this",
    "start": "1309880",
    "end": "1312320"
  },
  {
    "text": "slide so we wrote some pure functions",
    "start": "1312320",
    "end": "1314720"
  },
  {
    "text": "that wasn't too hard we now have some",
    "start": "1314720",
    "end": "1317039"
  },
  {
    "text": "reusable pieces that we can pick and",
    "start": "1317039",
    "end": "1318480"
  },
  {
    "text": "choose from when we want to build up the",
    "start": "1318480",
    "end": "1320400"
  },
  {
    "text": "full functionality we're trying to",
    "start": "1320400",
    "end": "1321760"
  },
  {
    "text": "implement how do we put them together",
    "start": "1321760",
    "end": "1324200"
  },
  {
    "text": "and this is where I am going to take a",
    "start": "1324200",
    "end": "1325679"
  },
  {
    "text": "little bit of issue with something that",
    "start": "1325679",
    "end": "1327520"
  },
  {
    "text": "Dave said which is you can't compose SQL",
    "start": "1327520",
    "end": "1330559"
  },
  {
    "text": "in fact you can it's not especially",
    "start": "1330559",
    "end": "1333120"
  },
  {
    "text": "pretty and it's pretty basic but you can",
    "start": "1333120",
    "end": "1335640"
  },
  {
    "text": "actually take one SQL operation and sort",
    "start": "1335640",
    "end": "1339520"
  },
  {
    "text": "of pipe that in to a second SQL",
    "start": "1339520",
    "end": "1342159"
  },
  {
    "text": "operation so you can if you want to map",
    "start": "1342159",
    "end": "1345600"
  },
  {
    "text": "twice over something you can do an outer",
    "start": "1345600",
    "end": "1348080"
  },
  {
    "text": "select from an inner select and in fact",
    "start": "1348080",
    "end": "1350799"
  },
  {
    "text": "the query planner knows that it can",
    "start": "1350799",
    "end": "1352240"
  },
  {
    "text": "collapse these together much the same",
    "start": "1352240",
    "end": "1353919"
  },
  {
    "text": "way as we know in hcore that this",
    "start": "1353919",
    "end": "1356279"
  },
  {
    "text": "equivalence",
    "start": "1356279",
    "end": "1358799"
  },
  {
    "text": "holds you can combine filters as well so",
    "start": "1359120",
    "end": "1362120"
  },
  {
    "text": "again you can compose two filter",
    "start": "1362120",
    "end": "1364400"
  },
  {
    "text": "operations together and in fact that's",
    "start": "1364400",
    "end": "1366440"
  },
  {
    "text": "equivalent to applying both of those",
    "start": "1366440",
    "end": "1369240"
  },
  {
    "text": "predicates at the same time so again",
    "start": "1369240",
    "end": "1370880"
  },
  {
    "text": "we've got basically some FP FP is giving",
    "start": "1370880",
    "end": "1374440"
  },
  {
    "text": "us sort of insights that we can get",
    "start": "1374440",
    "end": "1376640"
  },
  {
    "text": "these sorts of combinations for free",
    "start": "1376640",
    "end": "1378880"
  },
  {
    "text": "free um this is a slightly more complex",
    "start": "1378880",
    "end": "1381159"
  },
  {
    "text": "example just because mapping of maps and",
    "start": "1381159",
    "end": "1383840"
  },
  {
    "text": "filtering of filters seems a little bit",
    "start": "1383840",
    "end": "1386440"
  },
  {
    "text": "overly contrived even though that's",
    "start": "1386440",
    "end": "1388000"
  },
  {
    "text": "honestly mostly what you're doing you",
    "start": "1388000",
    "end": "1389799"
  },
  {
    "text": "can also combine a concat map and a map",
    "start": "1389799",
    "end": "1393120"
  },
  {
    "text": "uh to get a concat map and Yep this is",
    "start": "1393120",
    "end": "1397279"
  },
  {
    "text": "not the prettiest it was certainly the",
    "start": "1397279",
    "end": "1399120"
  },
  {
    "text": "one on the left not the prettiest query",
    "start": "1399120",
    "end": "1400760"
  },
  {
    "text": "in the world but actually these are",
    "start": "1400760",
    "end": "1402640"
  },
  {
    "text": "relatively",
    "start": "1402640",
    "end": "1403760"
  },
  {
    "text": "straightforward reusable chunks for us",
    "start": "1403760",
    "end": "1406600"
  },
  {
    "text": "to to reason about",
    "start": "1406600",
    "end": "1409880"
  },
  {
    "text": "and again this is with our friend the",
    "start": "1410640",
    "end": "1412279"
  },
  {
    "text": "lateral",
    "start": "1412279",
    "end": "1414039"
  },
  {
    "text": "join so we've written some pure",
    "start": "1414039",
    "end": "1416080"
  },
  {
    "text": "functions we've composed them what else",
    "start": "1416080",
    "end": "1418279"
  },
  {
    "text": "do we need to",
    "start": "1418279",
    "end": "1419880"
  },
  {
    "text": "do again I'm kind of almost embarrassed",
    "start": "1419880",
    "end": "1422200"
  },
  {
    "text": "to say it because it feels like I",
    "start": "1422200",
    "end": "1423200"
  },
  {
    "text": "haven't shown you anything particularly",
    "start": "1423200",
    "end": "1425039"
  },
  {
    "text": "complex or fascinating but the answer is",
    "start": "1425039",
    "end": "1427279"
  },
  {
    "text": "to be honest we actually don't need to",
    "start": "1427279",
    "end": "1428600"
  },
  {
    "text": "do much if we are going to write SQL",
    "start": "1428600",
    "end": "1432640"
  },
  {
    "text": "slightly more functionally I think the",
    "start": "1432640",
    "end": "1434440"
  },
  {
    "text": "other thing that we typically do is uh",
    "start": "1434440",
    "end": "1438320"
  },
  {
    "text": "in in existing SQL code bases that don't",
    "start": "1438320",
    "end": "1440480"
  },
  {
    "text": "take this approach is we don't treat it",
    "start": "1440480",
    "end": "1442720"
  },
  {
    "text": "like real code So my answer to what else",
    "start": "1442720",
    "end": "1445400"
  },
  {
    "text": "do we need to do to get good FP SQL is",
    "start": "1445400",
    "end": "1447840"
  },
  {
    "text": "you need to treat it like real code it's",
    "start": "1447840",
    "end": "1450120"
  },
  {
    "text": "not just the ugly bit on the edge which",
    "start": "1450120",
    "end": "1451840"
  },
  {
    "text": "is how you get something off the dis it",
    "start": "1451840",
    "end": "1453960"
  },
  {
    "text": "is an actual piece of code it needs",
    "start": "1453960",
    "end": "1455600"
  },
  {
    "text": "tests it needs some sort of API whether",
    "start": "1455600",
    "end": "1458400"
  },
  {
    "text": "that's functions or whether that's views",
    "start": "1458400",
    "end": "1459960"
  },
  {
    "text": "or whether that's whatever it needs",
    "start": "1459960",
    "end": "1463039"
  },
  {
    "text": "thought uh and you need to think about",
    "start": "1463039",
    "end": "1465320"
  },
  {
    "text": "reuse separation of concerns abstraction",
    "start": "1465320",
    "end": "1467480"
  },
  {
    "text": "Etc",
    "start": "1467480",
    "end": "1468480"
  },
  {
    "text": "I think once you've got the",
    "start": "1468480",
    "end": "1470120"
  },
  {
    "text": "understanding of hey we can treat SQL as",
    "start": "1470120",
    "end": "1472200"
  },
  {
    "text": "a language where it's possible to do",
    "start": "1472200",
    "end": "1473799"
  },
  {
    "text": "functional style programming then it",
    "start": "1473799",
    "end": "1476960"
  },
  {
    "text": "becomes a lot more natural to take these",
    "start": "1476960",
    "end": "1478960"
  },
  {
    "text": "additional steps of okay and I'm going",
    "start": "1478960",
    "end": "1480679"
  },
  {
    "text": "to treat that SQL like real",
    "start": "1480679",
    "end": "1485440"
  },
  {
    "text": "code Beyond this there are other",
    "start": "1486200",
    "end": "1488240"
  },
  {
    "text": "Inspirations that we can take from the",
    "start": "1488240",
    "end": "1489960"
  },
  {
    "text": "functional programming world when we're",
    "start": "1489960",
    "end": "1491640"
  },
  {
    "text": "looking at SQL and databases um it",
    "start": "1491640",
    "end": "1494919"
  },
  {
    "text": "doesn't necessarily stop here just",
    "start": "1494919",
    "end": "1496480"
  },
  {
    "text": "because sort of that's all of the amount",
    "start": "1496480",
    "end": "1498360"
  },
  {
    "text": "that I can present to you in one talk I",
    "start": "1498360",
    "end": "1499880"
  },
  {
    "text": "do want to at least give a pointer to",
    "start": "1499880",
    "end": "1501960"
  },
  {
    "text": "the the whoops to Future possibility of",
    "start": "1501960",
    "end": "1506000"
  },
  {
    "text": "um bringing more FP principles in there",
    "start": "1506000",
    "end": "1509399"
  },
  {
    "text": "are some great FP principles one of the",
    "start": "1509399",
    "end": "1511480"
  },
  {
    "text": "things that functional PR programming",
    "start": "1511480",
    "end": "1513039"
  },
  {
    "text": "languages I think typically do extremely",
    "start": "1513039",
    "end": "1515440"
  },
  {
    "text": "well is they're very good at modeling",
    "start": "1515440",
    "end": "1517559"
  },
  {
    "text": "time explicitly thanks um and I think if",
    "start": "1517559",
    "end": "1522080"
  },
  {
    "text": "you move that into the database I think",
    "start": "1522080",
    "end": "1524240"
  },
  {
    "text": "we're getting much better these days at",
    "start": "1524240",
    "end": "1526000"
  },
  {
    "text": "thinking about how we might treat our",
    "start": "1526000",
    "end": "1528240"
  },
  {
    "text": "database as sort of either an event",
    "start": "1528240",
    "end": "1530399"
  },
  {
    "text": "streaming a record of an event streaming",
    "start": "1530399",
    "end": "1532720"
  },
  {
    "text": "system um or in any case something which",
    "start": "1532720",
    "end": "1535720"
  },
  {
    "text": "models facts which arrive and",
    "start": "1535720",
    "end": "1539159"
  },
  {
    "text": "potentially change over time one of the",
    "start": "1539159",
    "end": "1541919"
  },
  {
    "text": "other principles that functional",
    "start": "1541919",
    "end": "1543159"
  },
  {
    "text": "programming is really big on is",
    "start": "1543159",
    "end": "1545760"
  },
  {
    "text": "immutability I think what you want to do",
    "start": "1545760",
    "end": "1547679"
  },
  {
    "text": "is you want to model irrefutable facts",
    "start": "1547679",
    "end": "1549919"
  },
  {
    "text": "in your database so that you don't have",
    "start": "1549919",
    "end": "1551200"
  },
  {
    "text": "to go and change them you want to come",
    "start": "1551200",
    "end": "1552600"
  },
  {
    "text": "up with a model where you can say it",
    "start": "1552600",
    "end": "1555080"
  },
  {
    "text": "will never change that this particular",
    "start": "1555080",
    "end": "1556840"
  },
  {
    "text": "fact was true between these time stamps",
    "start": "1556840",
    "end": "1559200"
  },
  {
    "text": "for example um and so I think there are",
    "start": "1559200",
    "end": "1562200"
  },
  {
    "text": "other ways that we can look at taking FP",
    "start": "1562200",
    "end": "1564559"
  },
  {
    "text": "principles and applying them to the SQL",
    "start": "1564559",
    "end": "1566159"
  },
  {
    "text": "that we write once we've gone beyond",
    "start": "1566159",
    "end": "1567760"
  },
  {
    "text": "this very basic hey this is how I do",
    "start": "1567760",
    "end": "1570080"
  },
  {
    "text": "maps filters um concat Maps whatever",
    "start": "1570080",
    "end": "1572919"
  },
  {
    "text": "else um I do want to show you one",
    "start": "1572919",
    "end": "1575679"
  },
  {
    "text": "additional thing that I suspect many of",
    "start": "1575679",
    "end": "1577279"
  },
  {
    "text": "you even after all of this will find a",
    "start": "1577279",
    "end": "1578760"
  },
  {
    "text": "bit icky um one of the questions that",
    "start": "1578760",
    "end": "1581240"
  },
  {
    "text": "led me down this path was I've got a",
    "start": "1581240",
    "end": "1583120"
  },
  {
    "text": "crud app in a side project where really",
    "start": "1583120",
    "end": "1585960"
  },
  {
    "text": "I felt like the app player wasn't",
    "start": "1585960",
    "end": "1587200"
  },
  {
    "text": "carrying waight because actually all I",
    "start": "1587200",
    "end": "1589120"
  },
  {
    "text": "was doing was Data transformation and if",
    "start": "1589120",
    "end": "1590919"
  },
  {
    "text": "that's just turning stuff into Jason",
    "start": "1590919",
    "end": "1592360"
  },
  {
    "text": "after doing some data munging well the",
    "start": "1592360",
    "end": "1593720"
  },
  {
    "text": "database can do that actually all I need",
    "start": "1593720",
    "end": "1596360"
  },
  {
    "text": "is the HTTP server um and so to point",
    "start": "1596360",
    "end": "1598960"
  },
  {
    "text": "you one of the directions I've taken",
    "start": "1598960",
    "end": "1600559"
  },
  {
    "text": "this is this is the sort of request that",
    "start": "1600559",
    "end": "1602720"
  },
  {
    "text": "my app player now receives as an HTP",
    "start": "1602720",
    "end": "1605840"
  },
  {
    "text": "request this is the the front end saying",
    "start": "1605840",
    "end": "1608200"
  },
  {
    "text": "I want you to call the get school stored",
    "start": "1608200",
    "end": "1610080"
  },
  {
    "text": "proc in the database and I want you to",
    "start": "1610080",
    "end": "1611520"
  },
  {
    "text": "call get classes and I want to call you",
    "start": "1611520",
    "end": "1613320"
  },
  {
    "text": "to call get statistics with this start",
    "start": "1613320",
    "end": "1615159"
  },
  {
    "text": "date and this end date and I want you to",
    "start": "1615159",
    "end": "1617080"
  },
  {
    "text": "give me back the result and so that just",
    "start": "1617080",
    "end": "1619760"
  },
  {
    "text": "gets transformed into this and all of",
    "start": "1619760",
    "end": "1621880"
  },
  {
    "text": "this code lives in the database and all",
    "start": "1621880",
    "end": "1623960"
  },
  {
    "text": "that sits in front of it is an HTTP",
    "start": "1623960",
    "end": "1625559"
  },
  {
    "text": "server that just calls a function with",
    "start": "1625559",
    "end": "1627840"
  },
  {
    "text": "literally a Json payload that it got off",
    "start": "1627840",
    "end": "1629679"
  },
  {
    "text": "the wire I'm not necessarily suggesting",
    "start": "1629679",
    "end": "1632159"
  },
  {
    "text": "that all of you should go away and",
    "start": "1632159",
    "end": "1633720"
  },
  {
    "text": "Implement apps which take it to this",
    "start": "1633720",
    "end": "1635360"
  },
  {
    "text": "extreme but I think it's quite",
    "start": "1635360",
    "end": "1637039"
  },
  {
    "text": "interesting that this is possible one of",
    "start": "1637039",
    "end": "1638440"
  },
  {
    "text": "the things that I find with an app that",
    "start": "1638440",
    "end": "1640159"
  },
  {
    "text": "looks like this is debugging it is",
    "start": "1640159",
    "end": "1642159"
  },
  {
    "text": "actually really easy and testing it is",
    "start": "1642159",
    "end": "1643720"
  },
  {
    "text": "really easy because there's only one",
    "start": "1643720",
    "end": "1645159"
  },
  {
    "text": "place that I have to go I go look in the",
    "start": "1645159",
    "end": "1647120"
  },
  {
    "text": "database",
    "start": "1647120",
    "end": "1648559"
  },
  {
    "text": "the data is there the code is there I",
    "start": "1648559",
    "end": "1650520"
  },
  {
    "text": "don't have to combine these two things",
    "start": "1650520",
    "end": "1652760"
  },
  {
    "text": "like I say I doubt you all want to go",
    "start": "1652760",
    "end": "1654440"
  },
  {
    "text": "that far but I hope you'll at least come",
    "start": "1654440",
    "end": "1657080"
  },
  {
    "text": "a little further than where you are",
    "start": "1657080",
    "end": "1658399"
  },
  {
    "text": "right now thank you very",
    "start": "1658399",
    "end": "1661740"
  },
  {
    "text": "[Applause]",
    "start": "1661740",
    "end": "1666869"
  },
  {
    "text": "much",
    "start": "1667399",
    "end": "1670399"
  }
]