[
  {
    "start": "0",
    "end": "7000"
  },
  {
    "text": "hi I want to talk about the database as a value so what I'm going to talk about is",
    "start": "1840",
    "end": "8760"
  },
  {
    "start": "7000",
    "end": "317000"
  },
  {
    "text": "something that I've implemented uh in datomic and how many people have heard of datomic how have",
    "start": "8760",
    "end": "14879"
  },
  {
    "text": "not heard of datomic okay I'm not going to describe datomic in full I don't have time it's",
    "start": "14879",
    "end": "21119"
  },
  {
    "text": "several hours worth of talks around it um in brief it's a database uh it it focuses on uh taking",
    "start": "21119",
    "end": "29679"
  },
  {
    "text": "the datase apart and giving you those parts as independent pieces in particular so that you can get more uh",
    "start": "29679",
    "end": "37280"
  },
  {
    "text": "power in your applications by having the database as a value which I will talk about today uh it it uh re-evaluates what",
    "start": "37280",
    "end": "46079"
  },
  {
    "text": "should the data model be what should an information model consist of and decides that it must incorporate time I'll talk",
    "start": "46079",
    "end": "52520"
  },
  {
    "text": "more about that and um we can do this now because we have a lot more compute power and resources so that's that's why",
    "start": "52520",
    "end": "60039"
  },
  {
    "text": "it's a good time to revisit these things it's not new in terms of being novel necessarily because all these ideas have",
    "start": "60039",
    "end": "65280"
  },
  {
    "text": "existed for a very long time so uh you know why why why are we",
    "start": "65280",
    "end": "71720"
  },
  {
    "text": "doing any of this stuff why do we do functional programming right how many people here are program in a functional language or",
    "start": "71720",
    "end": "78840"
  },
  {
    "text": "in a functional manner in a non-functional language okay and what's the breakdown",
    "start": "78840",
    "end": "84079"
  },
  {
    "text": "the room closure people scholar people erlang people",
    "start": "84079",
    "end": "90560"
  },
  {
    "text": "other kind hasal people all right who did I miss uh F people who already ruled",
    "start": "90560",
    "end": "97920"
  },
  {
    "text": "out uh uh there was this great paper out of the tarpit how many people have read it I don't read it now but a lot of",
    "start": "97920",
    "end": "105200"
  },
  {
    "text": "people have not read it go grab it after you know tomorrow and read it it's a great uh a great paper it's really a",
    "start": "105200",
    "end": "111640"
  },
  {
    "text": "thought piece uh what they what they were what they were asserting was our programs are too complex for us to get",
    "start": "111640",
    "end": "117719"
  },
  {
    "text": "correct and one of the reasons why is because of uncontrolled State um I don't",
    "start": "117719",
    "end": "123479"
  },
  {
    "text": "disagree with Eric right there is mutation we need to deal with it and and dealing with it is what's important not",
    "start": "123479",
    "end": "129959"
  },
  {
    "text": "pretending it doesn't exist um and they proposed a suite of uh techniques that",
    "start": "129959",
    "end": "135519"
  },
  {
    "text": "we could adopt in our programming that would make uh that would reduce the complexity in our programs uh one was",
    "start": "135519",
    "end": "141319"
  },
  {
    "text": "functional programming another was more declarative programming because even functional programming still has a lot of order in it right A lot of these",
    "start": "141319",
    "end": "148519"
  },
  {
    "text": "concatenated you know functional chains there's order inside that stuff and that",
    "start": "148519",
    "end": "153560"
  },
  {
    "text": "order makes it hard to rearrange things you know some sufficiently smart compiler you know supposed to do that",
    "start": "153560",
    "end": "158599"
  },
  {
    "text": "but we have yet to you know find one uh uh so there interesting points about",
    "start": "158599",
    "end": "164400"
  },
  {
    "text": "State and control but but finally the biggest thing was was the state part and they said you know we we don't we don't",
    "start": "164400",
    "end": "169920"
  },
  {
    "text": "want to have a whole ton of mutable variables what we'd rather have is uh a sound model that that is an information",
    "start": "169920",
    "end": "176879"
  },
  {
    "text": "model that we could use and then every now and then it would change and they chose in this paper uh the relational",
    "start": "176879",
    "end": "182599"
  },
  {
    "text": "model and relational algebra so what they imagined was a system where you would program with functional programming declarative programming in",
    "start": "182599",
    "end": "189200"
  },
  {
    "text": "the form of relational algebra against a data model which was the relational model for data um but there was this",
    "start": "189200",
    "end": "197799"
  },
  {
    "text": "there was this missing uh piece which was uh there was a presumption that this",
    "start": "197799",
    "end": "204239"
  },
  {
    "text": "relational model that you were programming against somehow would become different every now and then",
    "start": "204239",
    "end": "210360"
  },
  {
    "text": "and you know it's like you've seen the the comic strip the comic right where there's this guy on a Blackboard he's",
    "start": "210360",
    "end": "215439"
  },
  {
    "text": "got a this giant equation right in the bottom it says and then a miracle occurs right and then you have a new value of",
    "start": "215439",
    "end": "220560"
  },
  {
    "text": "the database uh and uh this was not implemented it was a great it was a great piece it came out after I had",
    "start": "220560",
    "end": "226680"
  },
  {
    "text": "started closure and when I was trying to decide whether or not to stick with the functional approach and uh was very",
    "start": "226680",
    "end": "232360"
  },
  {
    "text": "inspiring for me to continue to to do that and",
    "start": "232360",
    "end": "237439"
  },
  {
    "text": "uh and in day Tomic what what tried to do is tackle that last bit which is what",
    "start": "237439",
    "end": "242680"
  },
  {
    "text": "is the process that creates a new value of a database and how can we actually provide that value oh look this slide",
    "start": "242680",
    "end": "248439"
  },
  {
    "text": "comes in pieces so how many people are in it basically yeah all of us what does I",
    "start": "248439",
    "end": "254959"
  },
  {
    "text": "stand for information what does information mean this is what it means right you",
    "start": "254959",
    "end": "261840"
  },
  {
    "text": "just go the dictionary has the meanings of stuff to convey knowledge via",
    "start": "261840",
    "end": "267120"
  },
  {
    "text": "facts right to give shape to the mind and what is information it's just",
    "start": "267120",
    "end": "272720"
  },
  {
    "text": "the facts right how many people remember the monkey before it was ripped",
    "start": "272720",
    "end": "280320"
  },
  {
    "text": "apart I hope everybody there's been a lot of drinking happening right how many people could tell a story about what",
    "start": "280320",
    "end": "286680"
  },
  {
    "text": "happened to the monkey good right now you can do those",
    "start": "286680",
    "end": "292720"
  },
  {
    "text": "two things because your brain is not pretending to be the monkey right it's not the job of your",
    "start": "292720",
    "end": "300160"
  },
  {
    "text": "brain to pretend to be the monkey it's not the job of your program to pretend to be the monkey it's the job of your",
    "start": "300160",
    "end": "306240"
  },
  {
    "text": "program to maintain information about what happened to the monkey right that's what it is and in",
    "start": "306240",
    "end": "313440"
  },
  {
    "text": "particular we use databases to store information right so we have a whole ton",
    "start": "313440",
    "end": "319800"
  },
  {
    "start": "317000",
    "end": "417000"
  },
  {
    "text": "of complexity that comes with databases right that this tarpit paper says well the database magically changes",
    "start": "319800",
    "end": "325840"
  },
  {
    "text": "and then you have a value like this big relational model that's immutable and can do all the algebra against it like",
    "start": "325840",
    "end": "331280"
  },
  {
    "text": "you can do Algebra against you know numbers uh but it has all this problem right",
    "start": "331280",
    "end": "338360"
  },
  {
    "text": "it's essentially this place you go to and you ask it for something you get something out of it and you go again you",
    "start": "338360",
    "end": "343639"
  },
  {
    "text": "get something different there's no basis for your calculations um and again it's the same",
    "start": "343639",
    "end": "349600"
  },
  {
    "text": "kind of thing if you wanted to tell a story about the monkey and and the part of your brain that remembered the monkey was just like being Trashed by thoughts",
    "start": "349600",
    "end": "355560"
  },
  {
    "text": "of you know I don't know what some computer game you couldn't you couldn't",
    "start": "355560",
    "end": "360759"
  },
  {
    "text": "do that you couldn't reason about the monkey right you couldn't tell you couldn't do your you know talk about the",
    "start": "360759",
    "end": "366960"
  },
  {
    "text": "monkey if you couldn't go back to some basis that was shared remember the monkey that was all intact okay well",
    "start": "366960",
    "end": "372680"
  },
  {
    "text": "then this happened to it what if I had done something different to that right if we don't share some Foundation we",
    "start": "372680",
    "end": "378759"
  },
  {
    "text": "can't carry out a logical argument and this and this isn't about logic or something fancy right if you have a",
    "start": "378759",
    "end": "384880"
  },
  {
    "text": "business you can't make decisions if you don't know what happened before yesterday you",
    "start": "384880",
    "end": "390960"
  },
  {
    "text": "can't uh but we have this problem we can't go back we can't get any basis we actually can't we're not correctly",
    "start": "390960",
    "end": "396840"
  },
  {
    "text": "implementing memory that's our problem right and we're not going to get there",
    "start": "396840",
    "end": "402639"
  },
  {
    "text": "by pretending to be the monkey right that's not memory other problems with the database",
    "start": "402639",
    "end": "408360"
  },
  {
    "text": "is it's remote so we have this Communications problem that leads to a bunch of a bunch of issues and the",
    "start": "408360",
    "end": "414680"
  },
  {
    "text": "notion of what is an update is poorly defined so what do I mean when I say",
    "start": "414680",
    "end": "419800"
  },
  {
    "start": "417000",
    "end": "473000"
  },
  {
    "text": "basis well I sort of talked about this right it's the it's it's How We Do calculations right you can say there's",
    "start": "419800",
    "end": "425919"
  },
  {
    "text": "no such things as values and value you know anything could change at any time but you really could not Define any mathematical algorithm or anything else",
    "start": "425919",
    "end": "432199"
  },
  {
    "text": "or any decision-making process if in the middle of that process the things you you said were the foundations of a prior",
    "start": "432199",
    "end": "439039"
  },
  {
    "text": "decision have changed in the middle of 42 could change into 57 in the middle of",
    "start": "439039",
    "end": "444199"
  },
  {
    "text": "of calculation if registers in the computer just had you know Quantum effects randomly changing them really",
    "start": "444199",
    "end": "449720"
  },
  {
    "text": "couldn't get any work done so we need this basis and in particular we're going to have multi-step operations and we may",
    "start": "449720",
    "end": "455800"
  },
  {
    "text": "want to revisit the basis more than one time and have that revisiting mean the same",
    "start": "455800",
    "end": "460960"
  },
  {
    "text": "thing anytime we have the notion of simultaneous change this doesn't work",
    "start": "460960",
    "end": "466120"
  },
  {
    "text": "it's not to say that there isn't change in the universe right but when we're trying to think we actually need something stable when we're trying to",
    "start": "466120",
    "end": "471440"
  },
  {
    "text": "make a decision we need something stable to use and that I'm going to call the basis right and we have this problem also with databases update what does it",
    "start": "471440",
    "end": "477479"
  },
  {
    "start": "473000",
    "end": "604000"
  },
  {
    "text": "me what does it mean right does an entire row replace another row ises it a column thing ises the whole document",
    "start": "477479",
    "end": "483599"
  },
  {
    "text": "replace a whole document can you replace an act you know one part of a document if more than people more than one person",
    "start": "483599",
    "end": "489000"
  },
  {
    "text": "is doing this at the same time what's happening right what are the semantics of update it's very tricky right now",
    "start": "489000",
    "end": "495919"
  },
  {
    "text": "traditional databases have gone to Great Lengths to try to Define you know as if sequential operations and things like",
    "start": "495919",
    "end": "502039"
  },
  {
    "text": "that so you can start to reason about it we're starting to discard all that as we adopt no SQL we say oh whatever you know",
    "start": "502039",
    "end": "508639"
  },
  {
    "text": "more than one thing is going to happen and it's eventual consistency like just by saying that we're good it's going to",
    "start": "508639",
    "end": "516279"
  },
  {
    "text": "be fine eventually it's all going to be good right that's a just a lie right",
    "start": "516279",
    "end": "523240"
  },
  {
    "text": "it's a lie and then what can we see why this while this is happening I I'll use the word perception a lot what can we",
    "start": "523240",
    "end": "529320"
  },
  {
    "text": "observe because if if we couldn't actually see light rays right bounce off the monkey if as they traveled back to",
    "start": "529320",
    "end": "536399"
  },
  {
    "text": "us they got all scrambled and if we couldn't observe a consistent view of light coming off the monkey we couldn't",
    "start": "536399",
    "end": "543240"
  },
  {
    "text": "even have experienced his whole little presentation right what do we see when we see",
    "start": "543240",
    "end": "549440"
  },
  {
    "text": "things one we see the past right we don't we don't have a live connection to",
    "start": "549440",
    "end": "554760"
  },
  {
    "text": "the monkey our eyeballs are not on the monkey right we see the past what else what else is characteristic of our of",
    "start": "554760",
    "end": "561440"
  },
  {
    "text": "our neural systems are they continuous no right they save up stuff",
    "start": "561440",
    "end": "569600"
  },
  {
    "text": "you know these light waves are like woo maybe they're Quantum right we don't know but something something wavelike is happening right it's hitting our eyes",
    "start": "569600",
    "end": "575680"
  },
  {
    "text": "the retina is going wow and the nerves are doing what they going like this",
    "start": "575680",
    "end": "580720"
  },
  {
    "text": "woo no they're going they're taking pictures right big",
    "start": "580720",
    "end": "587720"
  },
  {
    "text": "simultaneous snapshots right and that's what we're storing in our memory we need that that's how we work",
    "start": "587720",
    "end": "595480"
  },
  {
    "text": "we're trying to build systems you want to emulate anything don't emulate monkeys getting torn apart emulate",
    "start": "595480",
    "end": "601320"
  },
  {
    "text": "brains because brains are more powerful than stuffed monkeys so what",
    "start": "601320",
    "end": "608120"
  },
  {
    "start": "604000",
    "end": "668000"
  },
  {
    "text": "happens we get wrong programs we have problems trying to scale things we're",
    "start": "608120",
    "end": "613160"
  },
  {
    "text": "afraid of all the roundt trips to the database oh I better go once and make sure I do everything I might I might",
    "start": "613160",
    "end": "618680"
  },
  {
    "text": "need to do we're afraid of overlaying the server right because we collocate all this stuff right we have this big database server brain that does all this",
    "start": "618680",
    "end": "626200"
  },
  {
    "text": "but it really leads to programs that are poorly modularized right right you're going to have one part of your program that decides we should talk",
    "start": "626200",
    "end": "633000"
  },
  {
    "text": "about this person you know and another part of the program that decides well it's going to go on a screen and the",
    "start": "633000",
    "end": "638200"
  },
  {
    "text": "screen should show the you know the email and the whatever who writes those two parts of the program different people I hope maybe if",
    "start": "638200",
    "end": "645800"
  },
  {
    "text": "you have a big enough company right who who writes the query that gets this",
    "start": "645800",
    "end": "651040"
  },
  {
    "text": "data different people no right you're trying to shovel this one query through this these two",
    "start": "651040",
    "end": "658240"
  },
  {
    "text": "conversations through one query because you're afraid if you issue two queries what are you going to get things that",
    "start": "658240",
    "end": "663560"
  },
  {
    "text": "don't match up because you have no basis so we have poor modularity so we",
    "start": "663560",
    "end": "670240"
  },
  {
    "start": "668000",
    "end": "940000"
  },
  {
    "text": "need to pull this apart we need to answer the coordination question obviously some coordination is going to",
    "start": "670240",
    "end": "675279"
  },
  {
    "text": "be required if we don't want eventual consistency magic you know we need to",
    "start": "675279",
    "end": "680760"
  },
  {
    "text": "eventually decide to coordinate that's what needs to be eventual we just need to decide where that happens processes",
    "start": "680760",
    "end": "687000"
  },
  {
    "text": "require a per perception does not perception should not require coordination and almost all the time it",
    "start": "687000",
    "end": "694360"
  },
  {
    "text": "does and that's wrong because that's not how it works right that's not how perception",
    "start": "694360",
    "end": "699839"
  },
  {
    "text": "works that's not how we saw the monkey no anybody asked the monkey send me your your image get get your view of the",
    "start": "699839",
    "end": "708680"
  },
  {
    "text": "orange anybody do that were you all like sending messages to the monkey yeah",
    "start": "708680",
    "end": "714120"
  },
  {
    "text": "please give me whatever did anyone register for updates from the monkey",
    "start": "714120",
    "end": "719760"
  },
  {
    "text": "no that is not how it works it's not how it works right light bounces off the",
    "start": "719839",
    "end": "726800"
  },
  {
    "text": "monkey the monkey has no say about it it comes towards you you can open your eyes or not but that's all just going to",
    "start": "726800",
    "end": "733320"
  },
  {
    "text": "happen right how do we model that right and then we get back to the value",
    "start": "733320",
    "end": "738720"
  },
  {
    "text": "problem right with if you if you can't at some point get out of the state and",
    "start": "738720",
    "end": "744839"
  },
  {
    "text": "say I can get something that's immutable that I can think about you can't really have a conversation beyond that it's",
    "start": "744839",
    "end": "750199"
  },
  {
    "text": "just like well everything is fuzzy and changing and there's no way we can ever make a sound decision there's no way one",
    "start": "750199",
    "end": "755240"
  },
  {
    "text": "person can convince somebody else of something else there's no way we could add up our books or calculate what our",
    "start": "755240",
    "end": "760800"
  },
  {
    "text": "interest rate should be or anything else we just stop so we got to reach",
    "start": "760800",
    "end": "765920"
  },
  {
    "text": "immutability at some point all right so I'm going to talk about value when I say value this is",
    "start": "765920",
    "end": "771440"
  },
  {
    "text": "what I mean something that's immutable the definition of the dictionary starts with small things we all know this 42 is",
    "start": "771440",
    "end": "779360"
  },
  {
    "text": "a value right we've already scaled that up right in how in languages people are using and how many your languages is a",
    "start": "779360",
    "end": "785920"
  },
  {
    "text": "string of value now most right how many people are using",
    "start": "785920",
    "end": "791199"
  },
  {
    "text": "languages with mutable strings right sorry most of you are not and then you",
    "start": "791199",
    "end": "797720"
  },
  {
    "text": "can get bigger right dates eventually Java will learn that dates are immutable but Joda time has learned this right and",
    "start": "797720",
    "end": "805320"
  },
  {
    "text": "it can get bigger still right collections can be immutable and ire collections right how big can we dream",
    "start": "805320",
    "end": "812839"
  },
  {
    "text": "here can we make an entire database immutable or effectively immutable or appear immutable so that we could for",
    "start": "812839",
    "end": "819440"
  },
  {
    "text": "instance see it so that we could for instance remember",
    "start": "819440",
    "end": "824800"
  },
  {
    "text": "it let's try it when I say identity I'm talking about some blank thing oh",
    "start": "824800",
    "end": "833079"
  },
  {
    "text": "that I'm talking about some logical you know logical notion and it's not necessarily the name some logical notion",
    "start": "833079",
    "end": "839800"
  },
  {
    "text": "that we apply to a sequence of values over time right it's not to say that",
    "start": "839800",
    "end": "845680"
  },
  {
    "text": "this entity that we're thinking about doesn't change right but there was definitely was a time when the monkey",
    "start": "845680",
    "end": "852959"
  },
  {
    "text": "was all together and now the monkey is different and we can remember those different times and we can process them",
    "start": "852959",
    "end": "858880"
  },
  {
    "text": "it's and we want to make programs that can do the same kind of thing so we're going to say the state is a value of",
    "start": "858880",
    "end": "864399"
  },
  {
    "text": "identity at a point in time and a lot of what Eric was talking about you know you could say we're like identities right if",
    "start": "864399",
    "end": "870000"
  },
  {
    "text": "you can go to that lazy and ask for the thing out of it right the lazy might be the identity and the thing is the value",
    "start": "870000",
    "end": "875800"
  },
  {
    "text": "you get out or if you can ask for enumerable for the next value and you talk about those kind of values then",
    "start": "875800",
    "end": "881600"
  },
  {
    "text": "that that innumerable thing is acting more like um an identity and time is",
    "start": "881600",
    "end": "887800"
  },
  {
    "text": "just this relative thing that we don't know a lot about so we have this model we could use we could say an identity is",
    "start": "887800",
    "end": "894320"
  },
  {
    "text": "just a succession of States each state is a value right",
    "start": "894320",
    "end": "899800"
  },
  {
    "text": "you know the real world case of you know does a monkey stay around there no but but our memories of the monkey can stay",
    "start": "899800",
    "end": "905360"
  },
  {
    "text": "around there right that's what we're talking about here we need to make programs that can remember things and we make need to make programs that can see",
    "start": "905360",
    "end": "912240"
  },
  {
    "text": "things so we're going to use functions to go from one state to another we all",
    "start": "912240",
    "end": "917399"
  },
  {
    "text": "associate identity with that whole thing and we're able to perceive the",
    "start": "917399",
    "end": "923079"
  },
  {
    "text": "important thing is the perception is uncoordinated you can just see it's like light you don't need to say",
    "start": "923079",
    "end": "930880"
  },
  {
    "text": "stop wait Eric don't do anything so I can look at the monkey now",
    "start": "930880",
    "end": "938480"
  },
  {
    "text": "okay so we we know how to implement values in programs we use persistent data structures I don't have a lot of",
    "start": "938959",
    "end": "944839"
  },
  {
    "start": "940000",
    "end": "951000"
  },
  {
    "text": "time to talk about it but basically their trees they structural sharing we're not talking about persistence on dis we're talking about immutability and",
    "start": "944839",
    "end": "951360"
  },
  {
    "start": "951000",
    "end": "1231000"
  },
  {
    "text": "efficient change right and so the technique that's used is you represent your data structures as trees when you",
    "start": "951360",
    "end": "957800"
  },
  {
    "text": "want a new version you don't copy the entire thing right you copy as little as",
    "start": "957800",
    "end": "963199"
  },
  {
    "text": "possible and you share structure with the old version and that allows this one to be immutable and the next one to be",
    "start": "963199",
    "end": "969800"
  },
  {
    "text": "efficiently created this is how we do it in memory one of the things that this talk will be about is what do we do on",
    "start": "969800",
    "end": "976199"
  },
  {
    "text": "disk what do we do when we want to make this durable um so I think we can go back and that",
    "start": "976199",
    "end": "983160"
  },
  {
    "text": "original slide was from a talk where I was I was talking about something else uh objects it's amazing what",
    "start": "983160",
    "end": "990759"
  },
  {
    "text": "happens to slides when you give them to somebody else and they put them together and it's in a thing this mutability stuff is",
    "start": "990759",
    "end": "998279"
  },
  {
    "text": "awesome I I drew that original diagram in a talk about objects right but it ends up that the database is this big",
    "start": "1000440",
    "end": "1007000"
  },
  {
    "text": "nasty object it's this big object we all have to contend with in our system it's this place we go to right we say please",
    "start": "1007000",
    "end": "1016319"
  },
  {
    "text": "please change somehow and like something happens inside and we go up to it and say oh please please tell me the answer",
    "start": "1016319",
    "end": "1022639"
  },
  {
    "text": "to this question it's like it's like this Oracle says",
    "start": "1022639",
    "end": "1028000"
  },
  {
    "text": "there's it's like that it's a big object and what's what's critical here",
    "start": "1028000",
    "end": "1035120"
  },
  {
    "text": "is what can we remember nothing if we applied our function to",
    "start": "1035120",
    "end": "1041640"
  },
  {
    "text": "something what we apply it to who knows consistent read eventual",
    "start": "1041640",
    "end": "1048160"
  },
  {
    "text": "reads serializable who knows all those things really well",
    "start": "1048160",
    "end": "1054600"
  },
  {
    "text": "yeah great not working so what's missing from this diagram from what we had",
    "start": "1054600",
    "end": "1063000"
  },
  {
    "text": "before that stuff W this is great two talks from in",
    "start": "1063760",
    "end": "1071720"
  },
  {
    "text": "one because that was an image I couldn't like erase the image so I was like the",
    "start": "1072919",
    "end": "1078120"
  },
  {
    "text": "program is not know how to use power keynote very well so we we can say the",
    "start": "1078120",
    "end": "1083240"
  },
  {
    "text": "same we can say the same thing about the database right except what is the identity the database connection before",
    "start": "1083240",
    "end": "1089640"
  },
  {
    "text": "in in a traditional database right that database connection it is all we have it's the thing it's the totality of what",
    "start": "1089640",
    "end": "1095840"
  },
  {
    "text": "we know it's like an object right it only has methods query answer you know",
    "start": "1095840",
    "end": "1101880"
  },
  {
    "text": "change something you know that's it this connection is the only thing we can",
    "start": "1101880",
    "end": "1107640"
  },
  {
    "text": "manipulate we can only write functions of the connection functions of the connection that's how we do quer uh",
    "start": "1107640",
    "end": "1112880"
  },
  {
    "text": "change functions of the connection that's how we do queries we don't want to do that we want to do this right the",
    "start": "1112880",
    "end": "1119679"
  },
  {
    "text": "database connection it's still there it's the identity right yeah tomorrow if you go ask your database for its value",
    "start": "1119679",
    "end": "1127280"
  },
  {
    "text": "it's going to be different if your company is still in operation right and you had power overnight you should",
    "start": "1127280",
    "end": "1133480"
  },
  {
    "text": "expect a different answer that's okay right stuff does happen in the world process happens the world does move",
    "start": "1133480",
    "end": "1139679"
  },
  {
    "text": "forward right but do we really want to be writing functions of connections and queries against connections no we want",
    "start": "1139679",
    "end": "1147000"
  },
  {
    "text": "this good stuff inside database values because if you use this as the identity",
    "start": "1147000",
    "end": "1153679"
  },
  {
    "text": "this way right what is your function a function of whatever serializability mode you're",
    "start": "1153679",
    "end": "1161600"
  },
  {
    "text": "in right what is a query a function of whatever the state the database is in",
    "start": "1161600",
    "end": "1167159"
  },
  {
    "text": "right so it's it's you know it's it's a it's a it's a it's a function of string to what result set or something like it",
    "start": "1167159",
    "end": "1175120"
  },
  {
    "text": "what can you do with the result set not a lot right you can walk through",
    "start": "1175120",
    "end": "1180440"
  },
  {
    "text": "it and print it it's not a really rich thing if if if you could get the value",
    "start": "1180440",
    "end": "1185559"
  },
  {
    "text": "of the database out what could you do with it you query it all freaking day long",
    "start": "1185559",
    "end": "1191720"
  },
  {
    "text": "what else could you do with it what else can you do with values what",
    "start": "1191720",
    "end": "1197400"
  },
  {
    "text": "can you do with 42 apply a function to it apply a function to it what else not have an not have an RM what what can you",
    "start": "1197400",
    "end": "1204360"
  },
  {
    "text": "do how about communication what can you do with it can can you email it to your friend",
    "start": "1204360",
    "end": "1209799"
  },
  {
    "text": "when he gets it is it going to be 57 no if he's little at the",
    "start": "1209799",
    "end": "1216240"
  },
  {
    "text": "end maybe right so it would be nice also it would be a lot easier to reason about",
    "start": "1216240",
    "end": "1223200"
  },
  {
    "text": "applying functions to the value of a database than the value of a database connection right we'd like to we'd like",
    "start": "1223200",
    "end": "1229440"
  },
  {
    "text": "to make transformation functions against that so how can we start talking about um the database as a value right the",
    "start": "1229440",
    "end": "1237360"
  },
  {
    "start": "1231000",
    "end": "1361000"
  },
  {
    "text": "first thing we have to contend with is this notion of state right because everyone knows databases",
    "start": "1237360",
    "end": "1242840"
  },
  {
    "text": "change right change um so they do and so the the",
    "start": "1242840",
    "end": "1248000"
  },
  {
    "text": "question is do they change in place or do they change by",
    "start": "1248000",
    "end": "1253919"
  },
  {
    "text": "growing for most traditional databases what do they do they change in place",
    "start": "1253919",
    "end": "1259640"
  },
  {
    "text": "they pretend to be a monkey that's awesome right they forget everything",
    "start": "1259640",
    "end": "1266039"
  },
  {
    "text": "they ever new every time you tell them something new it's great they're great decision-making tools how many people",
    "start": "1266039",
    "end": "1272760"
  },
  {
    "text": "keep your um source code in a directory and every time you change a file you just overwrite the one in the",
    "start": "1272760",
    "end": "1279159"
  },
  {
    "text": "directory yeah we're doing that right no we're programmers and we know what we need what do we need every freak inv",
    "start": "1279159",
    "end": "1286080"
  },
  {
    "text": "verion we ever made right and what's on every version",
    "start": "1286080",
    "end": "1291360"
  },
  {
    "text": "when it grows anybody care that their git repository keeps growing anyone's",
    "start": "1291360",
    "end": "1296840"
  },
  {
    "text": "like no we'll start overriding that this my like my disc is filling up dude",
    "start": "1296840",
    "end": "1303520"
  },
  {
    "text": "no why did we ever do that it's really not an information system a database",
    "start": "1303520",
    "end": "1309360"
  },
  {
    "text": "that updates in place is not an information system I'm sorry a real information system should accrete facts",
    "start": "1309360",
    "end": "1317640"
  },
  {
    "text": "right it should accumulate because that's what happens in the world yes stuff happens but an",
    "start": "1317640",
    "end": "1323679"
  },
  {
    "text": "information system needs to keep Gathering the stuff that happens not you know pretending to be the world it's",
    "start": "1323679",
    "end": "1330159"
  },
  {
    "text": "supposed to record information about what happened in the world right the past does not change if you're an",
    "start": "1330159",
    "end": "1337000"
  },
  {
    "text": "information system you have to record what happened in the past you don't go back and fix it you don't change who the",
    "start": "1337000",
    "end": "1342799"
  },
  {
    "text": "president was by you know typing in Obama over Bush right that's not what happens that's not what happens in the",
    "start": "1342799",
    "end": "1348720"
  },
  {
    "text": "real world that's not what should happen here so if you have process right change and you're trying to build an",
    "start": "1348720",
    "end": "1354440"
  },
  {
    "text": "information system you should acquire new space to record new information and move away from using",
    "start": "1354440",
    "end": "1361039"
  },
  {
    "start": "1361000",
    "end": "1489000"
  },
  {
    "text": "places so how are we going to do this and this talk is just like about a slice of datomic and it's about the idea of",
    "start": "1361039",
    "end": "1368039"
  },
  {
    "text": "making it an accre you know accumulating database but also a little bit about how that model I showed before that we use",
    "start": "1368039",
    "end": "1374440"
  },
  {
    "text": "in memory right with a new route every time there was a change right when we do persistent data structures in memory",
    "start": "1374440",
    "end": "1380360"
  },
  {
    "text": "every time we change right we end up with a new route and usually we forget about the old Route because often",
    "start": "1380360",
    "end": "1385559"
  },
  {
    "text": "there's a single thread of control that cares about the transformed values and the old values you know get garbage",
    "start": "1385559",
    "end": "1391720"
  },
  {
    "text": "collected but sometimes we could remember them but the only way we could remember them is by having been there",
    "start": "1391720",
    "end": "1397960"
  },
  {
    "text": "right in other words if if you're if you're using persistent data structures in memory and you never saw this value",
    "start": "1397960",
    "end": "1404400"
  },
  {
    "text": "and now you're looking at the later value this old one is unrecoverable right you can't do it but if you're",
    "start": "1404400",
    "end": "1410520"
  },
  {
    "text": "making an information system the PA should be recoverable so we don't want to store a roote per um query both",
    "start": "1410520",
    "end": "1417559"
  },
  {
    "text": "because um it doesn't let us find that we'd have to have a way to find the roots which means another meta mapping",
    "start": "1417559",
    "end": "1423120"
  },
  {
    "text": "to roots and the other thing it's way too expensive to do right so instead what we're going to",
    "start": "1423120",
    "end": "1428880"
  },
  {
    "text": "do is we're going to we're going to have this value that just gets bigger like the rings of a tree is that still a",
    "start": "1428880",
    "end": "1436039"
  },
  {
    "text": "value it's a little bit tricky right because it's not it's a bigger tree but one of the things about a value is if I",
    "start": "1436039",
    "end": "1442840"
  },
  {
    "text": "saw X and I go back looking at x is it any different if you could say of the",
    "start": "1442840",
    "end": "1448799"
  },
  {
    "text": "inner rings of a tree I I I've made a decision based around the inner rings of a tree you know we should we're this is",
    "start": "1448799",
    "end": "1454720"
  },
  {
    "text": "what's happening to the weather and then you send a view of the inner rings of a tree to your fellow tree scientists and",
    "start": "1454720",
    "end": "1461320"
  },
  {
    "text": "and they want to look at the same thing as long as the inner rings of the tree have not changed like maybe five years",
    "start": "1461320",
    "end": "1466720"
  },
  {
    "text": "have passed right as was like the photo you took is still good like people weren't like erasing it and drawing a",
    "start": "1466720",
    "end": "1472799"
  },
  {
    "text": "bigger tree over it right then they could make an independent decision later so I'm going to contend that an Ever",
    "start": "1472799",
    "end": "1480039"
  },
  {
    "text": "cumulating value is still a value by the definition I gave before",
    "start": "1480039",
    "end": "1486600"
  },
  {
    "text": "um so let's talk about facts again it's",
    "start": "1486600",
    "end": "1492120"
  },
  {
    "start": "1489000",
    "end": "2057000"
  },
  {
    "text": "this word stuff the words words the dictionary has entry for fact it says",
    "start": "1492120",
    "end": "1499120"
  },
  {
    "text": "this an event or thing known to have happened or existed right and it's actually from a",
    "start": "1499120",
    "end": "1505360"
  },
  {
    "text": "past participle that's Latin that back when you know they knew what they were",
    "start": "1505360",
    "end": "1510760"
  },
  {
    "text": "doing and it means something done it it is exp a fact says it's about",
    "start": "1510760",
    "end": "1517760"
  },
  {
    "text": "the past it's what fact means it's something that happened it's about the",
    "start": "1517760",
    "end": "1523200"
  },
  {
    "text": "past and and it has to include time right Sally likes Pizza it's it's an",
    "start": "1523200",
    "end": "1528520"
  },
  {
    "text": "insufficient fact right she used to be lactose intolerant right then she got",
    "start": "1528520",
    "end": "1535279"
  },
  {
    "text": "cured and now she likes pizza right it's not an eternal thing that Sally liked Pizza there wasn't always a Sally she",
    "start": "1535279",
    "end": "1541840"
  },
  {
    "text": "might stop liking Pizza she's we're not going to pretend to be the monkey here right we're not going to go to the Sally",
    "start": "1541840",
    "end": "1547360"
  },
  {
    "text": "place and change this right at some point Sally started liking pizza at some point later Sally might stop liking",
    "start": "1547360",
    "end": "1552760"
  },
  {
    "text": "Pizza these are facts we can record all these things we can make decisions about happened in the universe so we wanted we",
    "start": "1552760",
    "end": "1559520"
  },
  {
    "text": "want to record facts so what's our structure what's a fact is a document a",
    "start": "1559520",
    "end": "1565080"
  },
  {
    "text": "fact whole document is that a fact is it something that happened what",
    "start": "1565080",
    "end": "1573080"
  },
  {
    "text": "happens when you want change it did you change the whole document no right it's too big how about",
    "start": "1573080",
    "end": "1580919"
  },
  {
    "text": "a record in a database that a fact when did the record happen and if you update",
    "start": "1580919",
    "end": "1586520"
  },
  {
    "text": "one of the fields of the record when did that happen what's the time of the record later how",
    "start": "1586520",
    "end": "1593000"
  },
  {
    "text": "many people ever tried to build a system that kept a last edited date on records everybody does right how many people",
    "start": "1593000",
    "end": "1599440"
  },
  {
    "text": "thought that was good time yeah no so if we want to um if we",
    "start": "1599440",
    "end": "1606880"
  },
  {
    "text": "want to make a system that records facts we need to boil down what a fact is and and in in datomic I mean the name",
    "start": "1606880",
    "end": "1614600"
  },
  {
    "text": "comes from the word we use for this which is a datum it's not it's not a new IDE idea right entity attribute value",
    "start": "1614600",
    "end": "1621360"
  },
  {
    "text": "right Sally likes pizza and then what when when did Sally like pizza right and",
    "start": "1621360",
    "end": "1628760"
  },
  {
    "text": "we use the transaction to encode that as opposed to the time of day and there's a bunch of other reasons because transactions are first class and we can",
    "start": "1628760",
    "end": "1635399"
  },
  {
    "text": "have facts about transactions like who said that s likes Pizza you know or where did I find that",
    "start": "1635399",
    "end": "1642440"
  },
  {
    "text": "data the other thing we need to do if we want to make a system that can manage information about the world is we need a",
    "start": "1642440",
    "end": "1647960"
  },
  {
    "text": "way to to represent process right the fact that you know the monkey had its",
    "start": "1647960",
    "end": "1654159"
  },
  {
    "text": "head and arms torn apart right what what is the representation of that fact",
    "start": "1654159",
    "end": "1660880"
  },
  {
    "text": "happening right we can say you know the monkey had its head on you know before the talk and then you know then what",
    "start": "1660880",
    "end": "1669600"
  },
  {
    "text": "there'll be a new fact which is at a certain point in time the monkey did not have its head on right um but but our",
    "start": "1669600",
    "end": "1676960"
  },
  {
    "text": "information system is going to need to have that information sent in right so what's the representation of process of",
    "start": "1676960",
    "end": "1682840"
  },
  {
    "text": "that change how do we how do we form that and we're going to say that A Primitive representation is just the",
    "start": "1682840",
    "end": "1689440"
  },
  {
    "text": "assertion and retraction of facts monkey has a head monkey's arm was torn off",
    "start": "1689440",
    "end": "1696200"
  },
  {
    "text": "monkey's leg was torn off we're just going to assert these things if Sally likes pizza and then becomes lactose",
    "start": "1696200",
    "end": "1703039"
  },
  {
    "text": "intolerant we may have to retract that that's okay and and this is minimal",
    "start": "1703039",
    "end": "1708919"
  },
  {
    "text": "but it's insufficient right because we know there are transformations that happen in the world or Transformations we'd like to represent in our business",
    "start": "1708919",
    "end": "1715720"
  },
  {
    "text": "that um uh we can't express by just saying you know your bank account balance is",
    "start": "1715720",
    "end": "1721399"
  },
  {
    "text": "now 110 we really want to say is your bank account balance is a function of what it was plus",
    "start": "1721399",
    "end": "1726799"
  },
  {
    "text": "10 right but we can we can apply those Transformations and then turn them into these and this is what we end up with at",
    "start": "1726799",
    "end": "1733679"
  },
  {
    "text": "the bottom I'll show you how that works in a second so fundamentally what we",
    "start": "1733679",
    "end": "1738720"
  },
  {
    "text": "want to do is take the database apart right try to get the value part out there's other aspects of the system I'm",
    "start": "1738720",
    "end": "1743919"
  },
  {
    "text": "not going to talk about much tonight um but if you look at a traditional database it's doing a bunch of things right it's doing transaction management",
    "start": "1743919",
    "end": "1750320"
  },
  {
    "text": "it's doing IO it's usually in charge of local storage right it's does indexing",
    "start": "1750320",
    "end": "1755480"
  },
  {
    "text": "and it's has the query supports it's what we call the traditional monolithic database um and there's a way to split",
    "start": "1755480",
    "end": "1762919"
  },
  {
    "text": "this apart right because I think this split is really important there's a process side a database which is",
    "start": "1762919",
    "end": "1770200"
  },
  {
    "text": "recording those transactions accepting and recording those transactions right and possibly organizing that information",
    "start": "1770200",
    "end": "1778240"
  },
  {
    "text": "for other people and that's you know the output side the database is going to spit the stuff onto storage and then",
    "start": "1778240",
    "end": "1785679"
  },
  {
    "text": "there's a perception or reaction side and it's not that the reactive stuff is bad in fact Atomic has a push based",
    "start": "1785679",
    "end": "1793720"
  },
  {
    "text": "plugin call me when new stuff happens uh but there're also should be just straight perception I just want to look",
    "start": "1793720",
    "end": "1799600"
  },
  {
    "text": "at the database I want to ask anybody's permission I want to coordinate with anybody I just want to look it should be",
    "start": "1799600",
    "end": "1804640"
  },
  {
    "text": "like light I should just be able to open my eyes and see stuff and that part incorporates both query and by",
    "start": "1804640",
    "end": "1811559"
  },
  {
    "text": "implication the consumption of indexes so we like to take this stuff apart and there's a bunch of reasons to",
    "start": "1811559",
    "end": "1818399"
  },
  {
    "text": "do that one is scalability the other is to address a bunch of the complexity of things before and the point of this talk",
    "start": "1818399",
    "end": "1824120"
  },
  {
    "text": "is to give that value of a database to a program so I'm going to contend that uh if if if",
    "start": "1824120",
    "end": "1832200"
  },
  {
    "text": "what you're using to store data another completely empty word that we use um",
    "start": "1832200",
    "end": "1838440"
  },
  {
    "text": "doesn't organize it it's not really a database right it's like a bag and you",
    "start": "1838440",
    "end": "1844640"
  },
  {
    "text": "put stuff in a bag like you can't query the bag you just have to do fish through",
    "start": "1844640",
    "end": "1849760"
  },
  {
    "text": "it right that's not a database right key value store it's a",
    "start": "1849760",
    "end": "1856279"
  },
  {
    "text": "bag it's not really database there's no leverage there indexing is what gives you leverage organization gives you",
    "start": "1856279",
    "end": "1862720"
  },
  {
    "text": "leverage so what we're going to say is a way to organize these facts is just to sort them and simple sorting it's a",
    "start": "1862720",
    "end": "1869720"
  },
  {
    "text": "powerful tool that we use uh you know that's why we have computer science right they invented",
    "start": "1869720",
    "end": "1875720"
  },
  {
    "text": "sorting uh but but it ends up that this is a hard thing to do right and",
    "start": "1875720",
    "end": "1882039"
  },
  {
    "text": "particular if you want to have an immutable set of values for your database right you cannot afford to sort",
    "start": "1882039",
    "end": "1888600"
  },
  {
    "text": "live and in fact a lot of databases can't afford to sort live even when they're update in place right live",
    "start": "1888600",
    "end": "1894240"
  },
  {
    "text": "sorting live indexing is a huge source of overhead for databases and there's great research from Yale and other",
    "start": "1894240",
    "end": "1900399"
  },
  {
    "text": "places showing we're wasting a lot of time around that stuff um but we have good examples one of which is Big Table",
    "start": "1900399",
    "end": "1906799"
  },
  {
    "text": "of how to do this better and the way to do it better is to do it in batches right you accumulate change in one",
    "start": "1906799",
    "end": "1914000"
  },
  {
    "text": "accessible area and periodically you put that stuff into another area and",
    "start": "1914000",
    "end": "1922039"
  },
  {
    "text": "anybody who wants to see everything merges these two things in the case of big table they do take an immutable",
    "start": "1922039",
    "end": "1928679"
  },
  {
    "text": "approach to storage which means they'll accumulate stuff in memory now they're also logging it so this isn't about",
    "start": "1928679",
    "end": "1935159"
  },
  {
    "text": "durability just because they accumulate in memory doesn't mean if you pull the plug they forget everything they're logging but the information model is a",
    "start": "1935159",
    "end": "1942720"
  },
  {
    "text": "combination of what they've accumulated in memory and what they've put on dis and so what they do is they build up a block in memory they sort it and then",
    "start": "1942720",
    "end": "1950519"
  },
  {
    "text": "every now and then they take that block and they just spit it out on dis and after they've done that they never change it and then they'll get another",
    "start": "1950519",
    "end": "1956480"
  },
  {
    "text": "one they put another one on disk now at the point they' put the second one on disk if you want to see everything what do you need to",
    "start": "1956480",
    "end": "1961600"
  },
  {
    "text": "merge two files on dis and whatever's in memory every now and then they get enough things on disk and they say let's",
    "start": "1961600",
    "end": "1968760"
  },
  {
    "text": "merge all those into a bigger file once they've done that if you want to see everything what do you need to merge",
    "start": "1968760",
    "end": "1974600"
  },
  {
    "text": "that bigger file and what's in memory and that's it so this principle is a sound one and it's very efficient right",
    "start": "1974600",
    "end": "1981799"
  },
  {
    "text": "the only thing that datomic does differently is because we're trying to give all of history and do that",
    "start": "1981799",
    "end": "1987480"
  },
  {
    "text": "efficiently and there's a bunch of other storage related things we're going to use persistent trees on dis instead of ever bigger flat",
    "start": "1987480",
    "end": "1995399"
  },
  {
    "text": "piles so this looks like this there's some process in charge of transactions in the case of datomic we we because we",
    "start": "1995399",
    "end": "2001799"
  },
  {
    "text": "split everything apart we can make independent decisions about the scalability consistency and availability",
    "start": "2001799",
    "end": "2007360"
  },
  {
    "text": "of re and rights and we actually make traditional decisions about rights right",
    "start": "2007360",
    "end": "2013039"
  },
  {
    "text": "single server it only accepts transactions that's all it does um and",
    "start": "2013039",
    "end": "2018760"
  },
  {
    "text": "it keeps a live index which is the novelty it logs to storage as it goes just for durability per purposes but",
    "start": "2018760",
    "end": "2025760"
  },
  {
    "text": "every now and then in the background a process called index merging will take the stuff from the live index and merge",
    "start": "2025760",
    "end": "2031679"
  },
  {
    "text": "it into a persistent Tree on storage and then you can forget the live index and start replenishing it so you just have a",
    "start": "2031679",
    "end": "2038320"
  },
  {
    "text": "small window that you accumulate just like the big table model but with the trees that you saw before except instead",
    "start": "2038320",
    "end": "2044679"
  },
  {
    "text": "of having new Roots we're going to have one big root every time we do an indexing job as opposed to every",
    "start": "2044679",
    "end": "2051800"
  },
  {
    "text": "transaction and the tree will have everything that ever happened not just the",
    "start": "2051800",
    "end": "2057079"
  },
  {
    "start": "2057000",
    "end": "2209000"
  },
  {
    "text": "latest and then what is perception like well perception is just this merging job right if you have access to this live",
    "start": "2057079",
    "end": "2063079"
  },
  {
    "text": "index and access to storage you can see everything",
    "start": "2063079",
    "end": "2069000"
  },
  {
    "text": "any coordinator in here transactor is not here is there a",
    "start": "2069000",
    "end": "2075240"
  },
  {
    "text": "server no just like there wasn't one governing our looking at the monkey",
    "start": "2075240",
    "end": "2080839"
  },
  {
    "text": "nobody's in charge of that we can all do it if we have the rights to storage we",
    "start": "2080839",
    "end": "2085919"
  },
  {
    "text": "can all do it so um this is the highlevel view of",
    "start": "2085919",
    "end": "2091720"
  },
  {
    "text": "the architecture of datomic we've taken all those bubbles from the monolithic server and we've spread them around in",
    "start": "2091720",
    "end": "2098079"
  },
  {
    "text": "particular we moved storage out we said that is just commodity key Value Store",
    "start": "2098079",
    "end": "2105040"
  },
  {
    "text": "old style database I don't care what you want to use anything that can let me put a blob in with a name and get it back",
    "start": "2105040",
    "end": "2110720"
  },
  {
    "text": "it's not database it's just storage right it's like you know squirrels hiding egg horns you know",
    "start": "2110720",
    "end": "2118320"
  },
  {
    "text": "if I can find my egg corn I'm good that kind of a database uh there's a transactor that",
    "start": "2118320",
    "end": "2124440"
  },
  {
    "text": "just does transaction processing if you want to keep it highly available you do what you used to do for databases and just run a second one warm right but",
    "start": "2124440",
    "end": "2131400"
  },
  {
    "text": "this is the key thing the application process has got query in it right app",
    "start": "2131400",
    "end": "2137160"
  },
  {
    "text": "servers have query in them they have the query engine in them because they can access storage themselves the other",
    "start": "2137160",
    "end": "2143800"
  },
  {
    "text": "thing the transactor will do is reflect change so that everybody who wants to play we call them peers has their own",
    "start": "2143800",
    "end": "2150839"
  },
  {
    "text": "view of the live index they all do the same thing right once the new index has been merged they're told and they say",
    "start": "2150839",
    "end": "2157640"
  },
  {
    "text": "say okay do over start over just drop that and they're always merging these two things but now we have potentially",
    "start": "2157640",
    "end": "2165319"
  },
  {
    "text": "horizontally scalable storage right this could be Dynamo DB right any of those",
    "start": "2165319",
    "end": "2171240"
  },
  {
    "text": "big massively redundant highly available things and query is now horizontally",
    "start": "2171240",
    "end": "2178440"
  },
  {
    "text": "scalable because we can just add more app servers and get more query capability and what query is being",
    "start": "2178440",
    "end": "2184800"
  },
  {
    "text": "presented with is not objects now so what's the difference in that old database when I talked to the Oracle",
    "start": "2184800",
    "end": "2191359"
  },
  {
    "text": "right what could I get that best an answer to one question what do I",
    "start": "2191359",
    "end": "2199880"
  },
  {
    "text": "get here the source of all answers to all",
    "start": "2199880",
    "end": "2205359"
  },
  {
    "text": "questions I get the power that's what I want so the memory index is pretty",
    "start": "2205359",
    "end": "2211240"
  },
  {
    "start": "2209000",
    "end": "2256000"
  },
  {
    "text": "straight forward it's a persistent sorted set it's like a it's like a a persistent B tree and you have able",
    "start": "2211240",
    "end": "2217920"
  },
  {
    "text": "comparators and we always maintain a couple of sorts entity oriented which allows you to treat the database like it",
    "start": "2217920",
    "end": "2223079"
  },
  {
    "text": "was objects except they do have history and everything else they're not just you know pretend to be the monkey things and",
    "start": "2223079",
    "end": "2230599"
  },
  {
    "text": "you have uh attribute oriented indexes which allow you to treat the database like a column store it's very important",
    "start": "2230599",
    "end": "2236240"
  },
  {
    "text": "that you can slice the thing two ways if you only have objects you get you're just crappy at queries you can't answer",
    "start": "2236240",
    "end": "2243400"
  },
  {
    "text": "basic questions because it's like a million objects dude I can't ask a million objects for their name I don't",
    "start": "2243400",
    "end": "2248839"
  },
  {
    "text": "have time I want something that has all the names and that's what the other index does and there's also kind other",
    "start": "2248839",
    "end": "2254640"
  },
  {
    "text": "indexes you can ask for on the storage side there's a there's a log and again",
    "start": "2254640",
    "end": "2260040"
  },
  {
    "start": "2256000",
    "end": "2558000"
  },
  {
    "text": "that's just so that you get durability as you go but the fundamental thing is that there's going to be these covering indexes and they're represented on dis",
    "start": "2260040",
    "end": "2266480"
  },
  {
    "text": "or in storage as trees so what the storage engine will what the um database",
    "start": "2266480",
    "end": "2272480"
  },
  {
    "text": "will do is treat the storage engine like a key value store just like a traditional database treat the file",
    "start": "2272480",
    "end": "2278160"
  },
  {
    "text": "system right traditional database stores what in the file system do have a little file with like your name in",
    "start": "2278160",
    "end": "2285119"
  },
  {
    "text": "it no right what does it have blocks of its indexes index segments in nodes",
    "start": "2285119",
    "end": "2292160"
  },
  {
    "text": "that's how it uses the file system right and that's the way datomic uses storage doesn't matter if using a SQL database",
    "start": "2292160",
    "end": "2297960"
  },
  {
    "text": "we don't store Sally likes Pizza in a row in a SQL database right we take a big chunk of our index and store it in",
    "start": "2297960",
    "end": "2304359"
  },
  {
    "text": "the database under a key that's why we can use key value stores or or or um SQL",
    "start": "2304359",
    "end": "2310240"
  },
  {
    "text": "databases so the requirements of the storage system are very minimal you must have key value access occasionally we",
    "start": "2310240",
    "end": "2317280"
  },
  {
    "text": "need consistent read and very occasionally we need conditional put um Dynamo DB satisfies this and SQL",
    "start": "2317280",
    "end": "2324160"
  },
  {
    "text": "database to satisfy it and hopefully we can get things like riok to uh satisfy it as well in memory the database value looks",
    "start": "2324160",
    "end": "2332480"
  },
  {
    "text": "like this merge right there's this live memory index I said is a persistent tree then there's the one that's backed on on",
    "start": "2332480",
    "end": "2337680"
  },
  {
    "text": "dis what's really cool about this is this is that lazy value thing right is the entire database in your on your",
    "start": "2337680",
    "end": "2344720"
  },
  {
    "text": "machine no this is not full replication every peer doesn't have every database every Pier has access to storage right",
    "start": "2344720",
    "end": "2353240"
  },
  {
    "text": "and if and only if you go and ask about some particular thing and you don't yet",
    "start": "2353240",
    "end": "2360880"
  },
  {
    "text": "have it and it's not in your cash it's not in M cash then you go to storage",
    "start": "2360880",
    "end": "2367480"
  },
  {
    "text": "now how can we do all this caching aren't we afraid of monkeys exploding in",
    "start": "2367480",
    "end": "2373400"
  },
  {
    "text": "place no why not it's all immutable it's the facts",
    "start": "2373400",
    "end": "2380400"
  },
  {
    "text": "you can't change the past it's all the past so we can remember it on disk we",
    "start": "2380400",
    "end": "2386040"
  },
  {
    "text": "can stick m cach in between there you can have a local cach in between here",
    "start": "2386040",
    "end": "2391200"
  },
  {
    "text": "and the ends up that that stuff is zipped and it's zipped here and you can remember it unzipped I don't really care",
    "start": "2391200",
    "end": "2397040"
  },
  {
    "text": "you remember all you want you can stick proxies in between you can put your database behind a",
    "start": "2397040",
    "end": "2403240"
  },
  {
    "text": "CDN why can't you put your database behind a CDN you should be able to okay and then there we have this",
    "start": "2403240",
    "end": "2411200"
  },
  {
    "text": "thing look those things from before the identity there's this one little Cass",
    "start": "2411200",
    "end": "2417000"
  },
  {
    "text": "thing one one Cass that's the as much mutability as you need to implement a",
    "start": "2417000",
    "end": "2423680"
  },
  {
    "text": "database one Cass cell one and it's got a pointer to an",
    "start": "2423680",
    "end": "2431119"
  },
  {
    "text": "immutable thing and a pointer to another immutable thing right and yeah when this new process this has grown and this Cass",
    "start": "2431119",
    "end": "2439640"
  },
  {
    "text": "gets a new one of these but if you were thinking about the old one it did not have its head ripped off while you're in",
    "start": "2439640",
    "end": "2446520"
  },
  {
    "text": "the middle of calculating did not will not happen to you and if you told your",
    "start": "2446520",
    "end": "2451960"
  },
  {
    "text": "friend the scientist could you please look at this weather data how many people have ever had a system that",
    "start": "2451960",
    "end": "2457599"
  },
  {
    "text": "exhibited a bug and after you added more data to the database it went away yeah happed more than once for",
    "start": "2457599",
    "end": "2466760"
  },
  {
    "text": "me how many people would like to have gone and said what what was what was",
    "start": "2466760",
    "end": "2472520"
  },
  {
    "text": "happening at 2 o'cl to your database and ask the same question again and then be like wow yeah that is the wrong answer",
    "start": "2472520",
    "end": "2478440"
  },
  {
    "text": "and then like fix your code and run it again against the same version of the database and say fixed woohoo as opposed",
    "start": "2478440",
    "end": "2485280"
  },
  {
    "text": "to doing what troll through logs and hoping there's some evidence of what might have happened",
    "start": "2485280",
    "end": "2492280"
  },
  {
    "text": "right we don't want to do that anymore we really do want this the index storage",
    "start": "2492280",
    "end": "2497960"
  },
  {
    "text": "is not terribly interesting but you know it's a tree on dis right there's three levels there's a roote which points to a",
    "start": "2497960",
    "end": "2503960"
  },
  {
    "text": "directories of segments and the final segments are just sorted data datums they're blobs you you can think of it",
    "start": "2503960",
    "end": "2509400"
  },
  {
    "text": "like B Tre nodes except B Tre node save space so you can like mutate them in place um but that means you can't cash",
    "start": "2509400",
    "end": "2516240"
  },
  {
    "text": "them right it's there's tradeoffs right it's not like all cool there's trade-offs real ones all right so I said",
    "start": "2516240",
    "end": "2524160"
  },
  {
    "text": "before you can't express transformation so we support something else which is a transaction",
    "start": "2524160",
    "end": "2530040"
  },
  {
    "text": "function it's a cool function look at that argument anybody that's not the",
    "start": "2530040",
    "end": "2537119"
  },
  {
    "text": "connection to the database that's the database value right you get past the databas",
    "start": "2537119",
    "end": "2544319"
  },
  {
    "text": "value in any arguments and you return new facts or new database functions and the transformation happens um",
    "start": "2544319",
    "end": "2550680"
  },
  {
    "text": "iteratively until everything's been replaced and So eventually the process bottoms out into a bunch of assertions",
    "start": "2550680",
    "end": "2555839"
  },
  {
    "text": "and retractions that looks like this so you have assertions and retractions and",
    "start": "2555839",
    "end": "2561000"
  },
  {
    "start": "2558000",
    "end": "2588000"
  },
  {
    "text": "maybe a a a database function and that will be applied that yields two more",
    "start": "2561000",
    "end": "2566040"
  },
  {
    "text": "database functions and eventually it all turns into assertions and retractions there's no more functional Transformations but each time they get",
    "start": "2566040",
    "end": "2572440"
  },
  {
    "text": "past the database and you could do whatever you want you can issue queries right how many people wish seq databases",
    "start": "2572440",
    "end": "2577720"
  },
  {
    "text": "were more functional and composable and you could really write functions that return result sets that you could pour",
    "start": "2577720",
    "end": "2583319"
  },
  {
    "text": "into other queries yeah that's what it should be that you're not",
    "start": "2583319",
    "end": "2589920"
  },
  {
    "start": "2588000",
    "end": "2639000"
  },
  {
    "text": "wrong you you're right for wanting to have that the transactor accepts transactions right it expands it just",
    "start": "2589920",
    "end": "2596200"
  },
  {
    "text": "the way I said right it actually applies it to the old value of the database and gets a new value of the database it",
    "start": "2596200",
    "end": "2603040"
  },
  {
    "text": "tells people who cared this was the new process it does not send the whole database to everybody body it sends just",
    "start": "2603040",
    "end": "2608359"
  },
  {
    "text": "the change monkey had head ripped off",
    "start": "2608359",
    "end": "2614079"
  },
  {
    "text": "640 that's it not a new monkey document right the fact right every now",
    "start": "2614079",
    "end": "2622319"
  },
  {
    "text": "and then so broadcast set back to peers and there's indexing in the background unsurprisingly indexing creates garbage",
    "start": "2622319",
    "end": "2628920"
  },
  {
    "text": "it's just like what happens in memory right how many people work in a garbage collected language how many people want",
    "start": "2628920",
    "end": "2634119"
  },
  {
    "text": "to go back yeah right",
    "start": "2634119",
    "end": "2639559"
  },
  {
    "start": "2639000",
    "end": "2695000"
  },
  {
    "text": "okay all right then we have the peers right the pier it's a great word it means like I trust you as much as I",
    "start": "2639559",
    "end": "2646359"
  },
  {
    "text": "trust anybody else we're like equals in this that's how it should be it's not like oh please database give me some",
    "start": "2646359",
    "end": "2652559"
  },
  {
    "text": "give me the right answer right it shouldn't be like that we should all have equal power so you do any Pier has",
    "start": "2652559",
    "end": "2659680"
  },
  {
    "text": "access to the storage service peers have their own built-in query engine right and the query engine is really kind of",
    "start": "2659680",
    "end": "2665240"
  },
  {
    "text": "an orthogonal thing I mean it happens to be the case that datomic ships with a data log engine but you could have any",
    "start": "2665240",
    "end": "2671599"
  },
  {
    "text": "number of query engines it's orthogonal right they have the access to the live index and they know how to merge caching",
    "start": "2671599",
    "end": "2678680"
  },
  {
    "text": "out the wazo right local caching caching in a local mcache then a shared mcash",
    "start": "2678680",
    "end": "2684319"
  },
  {
    "text": "cluster behind everybody else and then finally whatever Dynamo does or whatever a SQL Server does or you could cluster",
    "start": "2684319",
    "end": "2689960"
  },
  {
    "text": "postgress I don't really care do as much as you want it's very straightforward right so what happens if",
    "start": "2689960",
    "end": "2697079"
  },
  {
    "start": "2695000",
    "end": "2791000"
  },
  {
    "text": "after we do this I mean why do this it sounds cool though right uh because it's simpler because",
    "start": "2697079",
    "end": "2705160"
  },
  {
    "text": "programming against connections sucks it just sucks it's not great it sucks it",
    "start": "2705160",
    "end": "2711240"
  },
  {
    "text": "really does suck right so we want this epical state model I showed you before",
    "start": "2711240",
    "end": "2717000"
  },
  {
    "text": "we want to limit the amount of coordination we have to transaction processing we want direct perception",
    "start": "2717000",
    "end": "2723319"
  },
  {
    "text": "right we want to be able to reissue the same query we want to be able to say I found the guy we should be reporting on",
    "start": "2723319",
    "end": "2728559"
  },
  {
    "text": "it's Fred and then somebody else say I need to show Fred on the web page give me his email address and whatever and",
    "start": "2728559",
    "end": "2734079"
  },
  {
    "text": "not be like I don't know what Fred is anymore Fred quit you know or you know I",
    "start": "2734079",
    "end": "2739800"
  },
  {
    "text": "can't make a total of all the sales for the month because I can't issue more than one query to do that per department",
    "start": "2739800",
    "end": "2746440"
  },
  {
    "text": "and get a total that adds up how many people want to work with an accountant that uses a a ledger where he",
    "start": "2746440",
    "end": "2754400"
  },
  {
    "text": "erases stuff and writes new stuff in yeah so we have the stable basis you can",
    "start": "2754400",
    "end": "2761480"
  },
  {
    "text": "communicate a point in time of the database with a long with the transaction ID you can say I think I",
    "start": "2761480",
    "end": "2768359"
  },
  {
    "text": "found something weird um in the in the weather data at this point and you can",
    "start": "2768359",
    "end": "2773640"
  },
  {
    "text": "send it to somebody else they could look at it three months later and see what you saw just like you took a picture",
    "start": "2773640",
    "end": "2780079"
  },
  {
    "text": "just like you remembered the monkey before it had its head ripped off same thing so you had this basis and and a",
    "start": "2780079",
    "end": "2787119"
  },
  {
    "text": "transaction is well defined it's a function of a database right what else happens we have",
    "start": "2787119",
    "end": "2793240"
  },
  {
    "start": "2791000",
    "end": "2988000"
  },
  {
    "text": "that I said this already you have the communicable basis right we can move anything around that we want right we",
    "start": "2793240",
    "end": "2799000"
  },
  {
    "text": "now have this ability to disentangle where things are located you can start in memory you can use a local disc you",
    "start": "2799000",
    "end": "2804680"
  },
  {
    "text": "can put it in SQL Server you can put the same thing in um Dynamo DB don't care",
    "start": "2804680",
    "end": "2810200"
  },
  {
    "text": "right you run your peers wherever you want run half the app in the cloud and half the app locally does not matter",
    "start": "2810200",
    "end": "2816119"
  },
  {
    "text": "then the big payoffs right the big time payoffs the database as as a value not",
    "start": "2816119",
    "end": "2821920"
  },
  {
    "text": "only means that you can issue queries yourself but it means that you can talk about those inner Rings you can talk",
    "start": "2821920",
    "end": "2828559"
  },
  {
    "text": "about the past like just like we can talk about the monkey before it was ripped off and you can tell the the the",
    "start": "2828559",
    "end": "2834359"
  },
  {
    "text": "story of it because you can go back that's what memory is that's what you want your programs to have memory right",
    "start": "2834359",
    "end": "2839839"
  },
  {
    "text": "you don't want them to be simulations of everything there's places for simulations and there's parts of your programs that will behave like machines",
    "start": "2839839",
    "end": "2846359"
  },
  {
    "text": "and M ility is great for that right but for information processing we really would like memory right which means that",
    "start": "2846359",
    "end": "2852240"
  },
  {
    "text": "we can go and say I mean this is this is a function of a database that yields a",
    "start": "2852240",
    "end": "2857599"
  },
  {
    "text": "database value value right yes you will talk to the connection you'll say give",
    "start": "2857599",
    "end": "2863000"
  },
  {
    "text": "me the database then you can say to that database value show me what you look like two months ago or at 2 o'clock when",
    "start": "2863000",
    "end": "2868760"
  },
  {
    "text": "we were having that problem give me the database size of 2 o'clock give me the database sense this point in time give",
    "start": "2868760",
    "end": "2874359"
  },
  {
    "text": "me the database as if I did made this change anybody ever want to see what a",
    "start": "2874359",
    "end": "2879960"
  },
  {
    "text": "speculative change did and tried to do it with rollbacks and stuff like that anybody piss off your sis admin when you",
    "start": "2879960",
    "end": "2885640"
  },
  {
    "text": "were doing that yeah that's sucks that's not right right so now you have a",
    "start": "2885640",
    "end": "2891920"
  },
  {
    "text": "database value in hand if you want to see it as if you did something else what do you do you just do it it's a value",
    "start": "2891920",
    "end": "2899480"
  },
  {
    "text": "it's all you you don't need to talk to the transactor you're not actually saying I'm doing this you're saying what",
    "start": "2899480",
    "end": "2904760"
  },
  {
    "text": "if I rip the head off the monkey would it weigh less yeah look at that a monkey without a",
    "start": "2904760",
    "end": "2910119"
  },
  {
    "text": "head I add up to components and it weighs less that's so cool because I can fit more headless monkeys in a truck let",
    "start": "2910119",
    "end": "2917640"
  },
  {
    "text": "me go do that and then go issue then really do it for real so you can do as if things the other thing is you can do",
    "start": "2917640",
    "end": "2924520"
  },
  {
    "text": "queres at compare times and cross time right this is what businesses need how",
    "start": "2924520",
    "end": "2929720"
  },
  {
    "text": "many people are doing big data on logs yeah or think they might need to",
    "start": "2929720",
    "end": "2935200"
  },
  {
    "text": "and soon yeah why cuz the your business is telling you",
    "start": "2935200",
    "end": "2941880"
  },
  {
    "text": "that database you gave me it sucks it forgets everything after I tell anything new we need to go look in the logs",
    "start": "2941880",
    "end": "2947960"
  },
  {
    "text": "because the logs have everything that ever happened and it doesn't forget anything let's start writing Big Data apps Big Data let's go do it so you can",
    "start": "2947960",
    "end": "2956559"
  },
  {
    "text": "write a query that cross this time how often has this supplier changed their prices if I only knew their latest price",
    "start": "2956559",
    "end": "2962400"
  },
  {
    "text": "I could not answer that question right how many people would like to think how how good would your decision-making",
    "start": "2962400",
    "end": "2968440"
  },
  {
    "text": "process be if you forgot every past value that you ever knew it' be terrible right most business",
    "start": "2968440",
    "end": "2976559"
  },
  {
    "text": "decisions actually involve the past right involve Deltas between things or rates of change so you need to be able",
    "start": "2976559",
    "end": "2983160"
  },
  {
    "text": "to query across time as of different points in time and across time so you can do all this stuff right you can",
    "start": "2983160",
    "end": "2989359"
  },
  {
    "start": "2988000",
    "end": "3383000"
  },
  {
    "text": "issue a query that takes forever anybody youu a long query took a long time again was the sis admin happy with you no if",
    "start": "2989359",
    "end": "2997000"
  },
  {
    "text": "you're doing this and you show a long query who does it impact you that's beautiful want to run long running",
    "start": "2997000",
    "end": "3003599"
  },
  {
    "text": "analytics that's fine right want to figure out if if a quer is really expensive go have at it run it on a",
    "start": "3003599",
    "end": "3010680"
  },
  {
    "text": "spare box right so so the net the net impact here is this is this is just",
    "start": "3010680",
    "end": "3017119"
  },
  {
    "text": "completely different it's super super simple and it really reduces the",
    "start": "3017119",
    "end": "3022480"
  },
  {
    "text": "complexity in your applications it gives you a lot more power right you're not handed you know the function of a",
    "start": "3022480",
    "end": "3027559"
  },
  {
    "text": "database isn't a query isn't a result set it's a real database you can query yourself um you can scale things better",
    "start": "3027559",
    "end": "3034480"
  },
  {
    "text": "we saw scalable reads and scalable queries and it's a real information",
    "start": "3034480",
    "end": "3039520"
  },
  {
    "text": "model that's",
    "start": "3039520",
    "end": "3042720"
  },
  {
    "text": "it you warmed up now you got a question yes that was sky the way you a",
    "start": "3051319",
    "end": "3058559"
  },
  {
    "text": "few times like the way I got confused on one of though",
    "start": "3058559",
    "end": "3064599"
  },
  {
    "text": "which was you were talking about a value as being the inre of you all the values that happened in the past and we can",
    "start": "3064599",
    "end": "3070480"
  },
  {
    "text": "still call that a value and then the",
    "start": "3070480",
    "end": "3074520"
  },
  {
    "text": "beginning I will repeat the question so I got I gotus what the difference between okay so the question is I I",
    "start": "3079200",
    "end": "3086119"
  },
  {
    "text": "talked about a value as an accretion right and I talked about identity as sort of this putative entity right so",
    "start": "3086119",
    "end": "3091640"
  },
  {
    "text": "the identity is the database connection right I want to go talk to you know our Company accounting system about you know",
    "start": "3091640",
    "end": "3099240"
  },
  {
    "text": "our our our balances so the Company accounting system is going to be um some",
    "start": "3099240",
    "end": "3104440"
  },
  {
    "text": "system and it ends up that a system in datomic it's not like one server but it's the combination of the transactor",
    "start": "3104440",
    "end": "3109880"
  },
  {
    "text": "and whatever the storage is plus the name of the database that whole thing is the identity given that identity you you",
    "start": "3109880",
    "end": "3116599"
  },
  {
    "text": "can go and ask for the value of the database as soon as you've done that anything that happens out there it",
    "start": "3116599",
    "end": "3122440"
  },
  {
    "text": "doesn't impact you it can't impact you so now the question is U what does it mean to have an accreting value right so",
    "start": "3122440",
    "end": "3129440"
  },
  {
    "text": "the first thing is once I have this value in hand it's not going to accre right the thing inside the connection is",
    "start": "3129440",
    "end": "3136480"
  },
  {
    "text": "is accumulating new information but this is not growing the other thing is if I",
    "start": "3136480",
    "end": "3141640"
  },
  {
    "text": "communicated this to somebody if I said um check out the answer answer to this",
    "start": "3141640",
    "end": "3146920"
  },
  {
    "text": "query against database I would be communicating to them two things when I communicate a value one is where to come",
    "start": "3146920",
    "end": "3153119"
  },
  {
    "text": "from but the other is that T it's being able to talk about that t that allows you to recover later so I say 2 o'clock",
    "start": "3153119",
    "end": "3160880"
  },
  {
    "text": "we had this problem when I communicate that database to you I'm going to say the identity of the",
    "start": "3160880",
    "end": "3166079"
  },
  {
    "text": "database and just a t with those two things you can recover a value that's",
    "start": "3166079",
    "end": "3172119"
  },
  {
    "text": "the same value that I had in in spite of the fact that the thing inside that identity is now bigger if we look at the",
    "start": "3172119",
    "end": "3178520"
  },
  {
    "text": "inner rings of the tree they're the same ask can you handle schema changes",
    "start": "3178520",
    "end": "3184680"
  },
  {
    "text": "there's hardly any schema to change right so the qu yeah so can we handle schema changes what schema where's a",
    "start": "3184680",
    "end": "3192079"
  },
  {
    "text": "record definition here document definition nothing it's",
    "start": "3192079",
    "end": "3197599"
  },
  {
    "text": "Atomic there's almost nothing to change yes you could rename you can rename attributes because the only scheme of",
    "start": "3197599",
    "end": "3204440"
  },
  {
    "text": "definition there is is attributes of course there's always an implicit schema right but what matters is have you",
    "start": "3204440",
    "end": "3210280"
  },
  {
    "text": "married an explicit schema right relational databases definitely have a problem you need to know this is kept in",
    "start": "3210280",
    "end": "3216720"
  },
  {
    "text": "that table and that's kept in that table and if you ever need to connect those two things you better know the name of that other table right furthermore table",
    "start": "3216720",
    "end": "3224000"
  },
  {
    "text": "names are not first class they can't be components of queries or anything else so yeah question yeah",
    "start": "3224000",
    "end": "3234640"
  },
  {
    "text": "so there's a transactor which coordinates everything it's strictly serialized you can imagine it as a single Observer of the universe and uh",
    "start": "3239680",
    "end": "3247960"
  },
  {
    "text": "if you're if you're talking about coordinating for instance if we both want to increment somebody's balance you",
    "start": "3247960",
    "end": "3253480"
  },
  {
    "text": "would use those transaction functions for that right rather than each of you asserting the new balance is 107 you",
    "start": "3253480",
    "end": "3259079"
  },
  {
    "text": "would say I think the New Balance should be 10 higher than what it was and I think it should be you know five lower",
    "start": "3259079",
    "end": "3264960"
  },
  {
    "text": "those two things commute right and therefore it's fine so you use database functions that are commutative",
    "start": "3264960",
    "end": "3271680"
  },
  {
    "text": "and you can have things that merge transparently without any eventual consistency but of course you know this",
    "start": "3271680",
    "end": "3277640"
  },
  {
    "text": "is a definite trade-off I'm not saying there aren't times you know there are times when you have to choose eventual consistency because of your availability",
    "start": "3277640",
    "end": "3283920"
  },
  {
    "text": "or right scalability requirements so this database is definitely sitting at a point in the space which is a big space",
    "start": "3283920",
    "end": "3291160"
  },
  {
    "text": "that says you are not going to exceed Its Right CA capacity and you value the trans actionality but you want the read",
    "start": "3291160",
    "end": "3298079"
  },
  {
    "text": "scalability which I think is a different place from a monolithic database and the free-for-all that is key value stores",
    "start": "3298079",
    "end": "3305520"
  },
  {
    "text": "last question over here yeah from the developer perspective what implications are there for quering the data for",
    "start": "3305520",
    "end": "3312520"
  },
  {
    "text": "issuing a query implications for issuing a query yeah from the developer perspective as opposed tol",
    "start": "3312520",
    "end": "3319799"
  },
  {
    "text": "orq so again I said the query language is sort of orthogonal I I'm not talking about it here but the query language we",
    "start": "3319799",
    "end": "3326039"
  },
  {
    "text": "include in clude is called data log and it's it's really easy to use it looks like pattern matching if you've ever",
    "start": "3326039",
    "end": "3331280"
  },
  {
    "text": "seen pattern matching in any language um and the joins are implicit um and we also offer you more control over what",
    "start": "3331280",
    "end": "3337839"
  },
  {
    "text": "happens I'm not a big believer in sort of the magic box you know query planner will solve every problem because it's",
    "start": "3337839",
    "end": "3343520"
  },
  {
    "text": "too too hard so you do have more ability to drive it but you also can get direct access to the indexes and build your own",
    "start": "3343520",
    "end": "3349480"
  },
  {
    "text": "quy engine I'm happy to see it and for instance core logic from closure can use",
    "start": "3349480",
    "end": "3355400"
  },
  {
    "text": "this as a backend well this is great uh both Eric and Rich are going to be around for a little bit",
    "start": "3355400",
    "end": "3361680"
  },
  {
    "text": "before we drag them off and put some food in perhaps we could show them both our thanks for making the trip and",
    "start": "3361680",
    "end": "3368319"
  },
  {
    "text": "giving these great talks tonight",
    "start": "3368319",
    "end": "3372319"
  },
  {
    "text": "[Music]",
    "start": "3377360",
    "end": "3382059"
  }
]