[
  {
    "start": "0",
    "end": "66000"
  },
  {
    "text": "hi hello everyone it's great to be here i realized that they put me right after",
    "start": "13599",
    "end": "18720"
  },
  {
    "text": "lunch and they gave you all pull back chairs so uh try to not fall asleep if you can",
    "start": "18720",
    "end": "25039"
  },
  {
    "text": "so we'll be talking about new risks in serverless security um",
    "start": "25039",
    "end": "31519"
  },
  {
    "text": "a bit about me so i've been managing teams and groups of developers",
    "start": "31519",
    "end": "37600"
  },
  {
    "text": "and developing a large-scale cloud-based applications for the past decade or so",
    "start": "37600",
    "end": "42960"
  },
  {
    "text": "part of a cloud lock that was acquired by cisco i was headed the development of cisco cloud",
    "start": "42960",
    "end": "48559"
  },
  {
    "text": "security in israel and i founded with two partners at cloud essence",
    "start": "48559",
    "end": "55039"
  },
  {
    "text": "and that was acquired by contrast and today i'm heading the development of a",
    "start": "55039",
    "end": "60640"
  },
  {
    "text": "contrast securities serverless offer",
    "start": "60640",
    "end": "64800"
  },
  {
    "start": "66000",
    "end": "97000"
  },
  {
    "text": "okay so why is this even interesting um so idc predicts that by",
    "start": "66080",
    "end": "72840"
  },
  {
    "text": "2021 by this year 70 of newly developed applications will be developed as cloud",
    "start": "72840",
    "end": "79280"
  },
  {
    "text": "native applications meaning applications that use hyper agile technologies",
    "start": "79280",
    "end": "84840"
  },
  {
    "text": "microservices and containers and serverless so serverless is part of cloud native it's not just cloud native",
    "start": "84840",
    "end": "92159"
  },
  {
    "text": "um so the shift has already begun",
    "start": "92159",
    "end": "97280"
  },
  {
    "start": "97000",
    "end": "129000"
  },
  {
    "text": "a cloud native transformation is happening a lot of big companies that we know like",
    "start": "97280",
    "end": "103759"
  },
  {
    "text": "irobot roomba in skyscanner and others have already moved",
    "start": "103759",
    "end": "109280"
  },
  {
    "text": "and most of their existing applications are already developed as cloud native applications and other big companies are",
    "start": "109280",
    "end": "115439"
  },
  {
    "text": "moving and shifting more and more applications and we believe that that will be the prominent and most dominant",
    "start": "115439",
    "end": "121040"
  },
  {
    "text": "development in architecture within the next couple of years and most analysts support our",
    "start": "121040",
    "end": "127600"
  },
  {
    "text": "belief um when we see cloud native we see it much",
    "start": "127600",
    "end": "132640"
  },
  {
    "start": "129000",
    "end": "249000"
  },
  {
    "text": "more than just an architecture so yes obviously it's an architecture change right instead of a monolith a big",
    "start": "132640",
    "end": "140160"
  },
  {
    "text": "application and there are a lot more smaller components we're trying to unlock the potential of the cloud we're",
    "start": "140160",
    "end": "147200"
  },
  {
    "text": "using the services that the cloud provide we're using small really small components creating pipelines and trying to make them as",
    "start": "147200",
    "end": "154480"
  },
  {
    "text": "efficient as possible but other than that it's also about how we develop right so",
    "start": "154480",
    "end": "160080"
  },
  {
    "text": "smaller cycles right in the past we had long versions and",
    "start": "160080",
    "end": "165280"
  },
  {
    "text": "older teams probably once in a couple of months newer agile scrum teams would have delivered at the",
    "start": "165280",
    "end": "171760"
  },
  {
    "text": "end of their cycle right at the end of the sprint today um a lot of teams that are working in",
    "start": "171760",
    "end": "177760"
  },
  {
    "text": "cloud native including my teams they push code to production a couple of times a day on a regular basis",
    "start": "177760",
    "end": "184640"
  },
  {
    "text": "so it's much more frequent and it has to be part of your process it has to be in line right and that's the second thing",
    "start": "184640",
    "end": "190640"
  },
  {
    "text": "processes in the past a lot more manual processes that would have been",
    "start": "190640",
    "end": "196560"
  },
  {
    "text": "sort of maintained or demanded today we try to automate everything if it's not part of",
    "start": "196560",
    "end": "202640"
  },
  {
    "text": "my automation part of my flow it won't really work right it's going to slow me down",
    "start": "202640",
    "end": "208560"
  },
  {
    "text": "everything needs to be part of the part of our automated processes and the last thing is decision right we're creating",
    "start": "208560",
    "end": "215519"
  },
  {
    "text": "teams that are supposed to be small efficient multifunctional devsec ops they own what they develop",
    "start": "215519",
    "end": "222879"
  },
  {
    "text": "end to end and that's what we're expecting them to do and part of that is also giving them the responsibility",
    "start": "222879",
    "end": "228319"
  },
  {
    "text": "they're small startups within big organizations but we're giving them um",
    "start": "228319",
    "end": "233439"
  },
  {
    "text": "we're asking them to own everything and also giving them a responsibility so a lot of time they can choose the",
    "start": "233439",
    "end": "239200"
  },
  {
    "text": "technology they can choose the tools they make the decisions right so the decision making is coming bottom up",
    "start": "239200",
    "end": "246799"
  },
  {
    "text": "and instead of top down and so now let's focus a bit about serverless",
    "start": "246799",
    "end": "253120"
  },
  {
    "start": "249000",
    "end": "303000"
  },
  {
    "text": "so serverless is basically a very big puzzle it's a lot of a lot of small components talking",
    "start": "253120",
    "end": "259519"
  },
  {
    "text": "with each other through through some kind of a buffer through some kind of glue um it could be a cues it could be",
    "start": "259519",
    "end": "267280"
  },
  {
    "text": "api calls it could be events that that trigger the whole system and when you have this kind of",
    "start": "267280",
    "end": "274800"
  },
  {
    "text": "enormous amount of resources it's hard to how do you secure them each one has",
    "start": "274800",
    "end": "280320"
  },
  {
    "text": "its own policy each one has a different kind of restraints um",
    "start": "280320",
    "end": "286160"
  },
  {
    "text": "and setting some kind of you can use group policies in some cases but a lot of times you need to be",
    "start": "286160",
    "end": "291919"
  },
  {
    "text": "very precise in what you want to put on each one of those different resources and in order to do that you need to",
    "start": "291919",
    "end": "298320"
  },
  {
    "text": "actually understand what you want to do and what's going on within the platform",
    "start": "298320",
    "end": "303919"
  },
  {
    "start": "303000",
    "end": "408000"
  },
  {
    "text": "so let's talk a bit about serverless and so i'll talk most mostly around aws",
    "start": "303919",
    "end": "310560"
  },
  {
    "text": "serverless so when a serverless when we deploy serverless what happens behind the scene is basically there's a",
    "start": "310560",
    "end": "317280"
  },
  {
    "text": "container and that container spins up when it's requested when when as event has triggered and all",
    "start": "317280",
    "end": "324240"
  },
  {
    "text": "the and most of the the architecture is based on a vendor even so an event happened and that event could could come",
    "start": "324240",
    "end": "331120"
  },
  {
    "text": "from um the end of a processing of an emr it could have it could come from an",
    "start": "331120",
    "end": "336479"
  },
  {
    "text": "s3 bucket that we uploaded a file or a dynamodb stream or whatever",
    "start": "336479",
    "end": "342560"
  },
  {
    "text": "and it runs and when it finishes it basically gets disposed the environment itself is a read only and that's that's",
    "start": "342560",
    "end": "349360"
  },
  {
    "text": "obviously an advantage from a security perspective but you still have access to the slash temp",
    "start": "349360",
    "end": "356639"
  },
  {
    "text": "there's no direct internet access so while the container is up you can't unless you",
    "start": "356639",
    "end": "363600"
  },
  {
    "text": "you do a lot of stuff and can't directly call it it doesn't have an end point that you can actually access so",
    "start": "363600",
    "end": "370240"
  },
  {
    "text": "it also that's also a pro and the data is temporary most of",
    "start": "370240",
    "end": "375919"
  },
  {
    "text": "serverless is a stateless architecture it runs when it's disposable the data is disposed with it",
    "start": "375919",
    "end": "382800"
  },
  {
    "text": "the code is part of the environment and and keys are available as part of environment variables so what gives the",
    "start": "382800",
    "end": "389840"
  },
  {
    "text": "container the serverless function the ability to actually perform the",
    "start": "389840",
    "end": "396000"
  },
  {
    "text": "the activities that it's supposed to perform is based on these environment variables that are set within the",
    "start": "396000",
    "end": "401199"
  },
  {
    "text": "function that give it its privileges and permissions to do what it's supposed to do",
    "start": "401199",
    "end": "408680"
  },
  {
    "start": "408000",
    "end": "462000"
  },
  {
    "text": "but what about security so if we look at google trends uh in the last couple of years we see that",
    "start": "409120",
    "end": "416720"
  },
  {
    "text": "the trend is rising more and more people are searching for serverless computing serverless in general but when we look",
    "start": "416720",
    "end": "423440"
  },
  {
    "text": "at the trend for serverless security it's basically a flat line right nothing has really changed and that's very",
    "start": "423440",
    "end": "430400"
  },
  {
    "text": "common security tools usually lag behind technology a couple of years and we've",
    "start": "430400",
    "end": "436400"
  },
  {
    "text": "heard it in another talk here before um but we all i think agree that we want",
    "start": "436400",
    "end": "443440"
  },
  {
    "text": "to have the same kind of security visibility um on our new technologies like we've",
    "start": "443440",
    "end": "449120"
  },
  {
    "text": "already been used to in the past on other technologies",
    "start": "449120",
    "end": "454720"
  },
  {
    "text": "so the question is can we use traditional apsec tools to be applied on serverless",
    "start": "457120",
    "end": "462639"
  },
  {
    "start": "462000",
    "end": "693000"
  },
  {
    "text": "and let's first understand a bit um the risk the different risks and the things that we want to do in a",
    "start": "462639",
    "end": "468560"
  },
  {
    "text": "serverless security um component so this is an example",
    "start": "468560",
    "end": "474720"
  },
  {
    "text": "of a function a lambda function in python and what we see that the this function",
    "start": "474720",
    "end": "480960"
  },
  {
    "text": "actually does it's very simple right it accepts an event from the event it it",
    "start": "480960",
    "end": "487520"
  },
  {
    "text": "gets a couple of attributes and then it takes those attributes and and saves them into a",
    "start": "487520",
    "end": "493919"
  },
  {
    "text": "dynamodb dynamodb if you're not familiar it's a",
    "start": "493919",
    "end": "498960"
  },
  {
    "text": "it's a database as a key value database as a service that aws provides",
    "start": "498960",
    "end": "504080"
  },
  {
    "text": "it's very common to be used in serverless architectures and cloud native architectures",
    "start": "504080",
    "end": "509360"
  },
  {
    "text": "so overall very simple um",
    "start": "509360",
    "end": "515120"
  },
  {
    "text": "and when we deploy this function we have to right also give it a permission a",
    "start": "515279",
    "end": "521760"
  },
  {
    "text": "policy a role and within that role of policy to uh to enable what it can actually do within",
    "start": "521760",
    "end": "528080"
  },
  {
    "text": "the cloud okay so what happens in aws for example you have a couple of",
    "start": "528080",
    "end": "534399"
  },
  {
    "text": "thousands methods something like 8 000 and you have something like 5 000",
    "start": "534399",
    "end": "539760"
  },
  {
    "text": "different permissions that you need to assign and obviously that's very hard sometimes to",
    "start": "539760",
    "end": "545920"
  },
  {
    "text": "understand what is the right permission to the right action and as developers and seen this with my developers a lot",
    "start": "545920",
    "end": "553279"
  },
  {
    "text": "what we first of all do is we go out and search for it right then we get",
    "start": "553279",
    "end": "558640"
  },
  {
    "text": "an answer back from stack overflow and sometimes it's a good answer but sometimes it's something that's a bit",
    "start": "558640",
    "end": "565440"
  },
  {
    "text": "over permissive and what the developer will will sometimes do is basically because he's not sure about what's the",
    "start": "565440",
    "end": "572160"
  },
  {
    "text": "the exact permission we'll use an asterisk and basically what this says is",
    "start": "572160",
    "end": "577200"
  },
  {
    "text": "that for this specific function you can do all the actions on a dynamodb everything",
    "start": "577200",
    "end": "583760"
  },
  {
    "text": "create a table delete a table get the data list the data query scan it",
    "start": "583760",
    "end": "589040"
  },
  {
    "text": "everything that that they will get that's available on the table another",
    "start": "589040",
    "end": "594080"
  },
  {
    "text": "thing we need to set is the boundaries of those permissions so that's the resource",
    "start": "594080",
    "end": "599360"
  },
  {
    "text": "who am i actually able to to um do those activities on right and",
    "start": "599360",
    "end": "605760"
  },
  {
    "text": "in this case we've set the permissions on all the tables within that account within that",
    "start": "605760",
    "end": "612320"
  },
  {
    "text": "region so maybe this is is running on an orders table but if i have a user table",
    "start": "612320",
    "end": "617920"
  },
  {
    "text": "and from some reason an attacker has compromised that function he will be able to",
    "start": "617920",
    "end": "623279"
  },
  {
    "text": "actually access all my tables and basically have have access to all my data within that",
    "start": "623279",
    "end": "630640"
  },
  {
    "text": "within that region and so what do we want to do",
    "start": "630640",
    "end": "637040"
  },
  {
    "text": "okay so we want to limit the scope of the function the permissions to only what it",
    "start": "637200",
    "end": "643680"
  },
  {
    "text": "actually needs to do and by doing that we're really minimizing the risk so even",
    "start": "643680",
    "end": "648720"
  },
  {
    "text": "if for some reason an attacker has succeeded in compromising and i'll show you even a demo about that later um",
    "start": "648720",
    "end": "656720"
  },
  {
    "text": "succeeded of compromising this function all he'll actually be able to do is put",
    "start": "656720",
    "end": "662160"
  },
  {
    "text": "item in this case it's very easy to see like the permission and it's very similar to the actual method",
    "start": "662160",
    "end": "668800"
  },
  {
    "text": "that's being called you'll only be able to add more items into that table and by",
    "start": "668800",
    "end": "673839"
  },
  {
    "text": "limiting also um to the specific table he'll only be able to do it on my orders table so",
    "start": "673839",
    "end": "680800"
  },
  {
    "text": "i'm really really minimizing the risk that even if something happens um it will be",
    "start": "680800",
    "end": "687120"
  },
  {
    "text": "it will cause a lot of issues in my system",
    "start": "687120",
    "end": "693440"
  },
  {
    "start": "693000",
    "end": "763000"
  },
  {
    "text": "another thing that's different in in serverless architectures is the loss of perimeter um",
    "start": "693440",
    "end": "700640"
  },
  {
    "text": "so if we're used to um in other architectures to sort of have all our micro services or monolith",
    "start": "700640",
    "end": "707760"
  },
  {
    "text": "behind the dmz behind a protected zone and in a serverless architecture that's",
    "start": "707760",
    "end": "713279"
  },
  {
    "text": "um there's no no real perimeter so if in the past i could have",
    "start": "713279",
    "end": "719120"
  },
  {
    "text": "put an api gateway and put all my policies in that api gateway and everything is behind that or a bastion",
    "start": "719120",
    "end": "725279"
  },
  {
    "text": "or a vpn and basically apply all my policies on that specific entry point in",
    "start": "725279",
    "end": "730959"
  },
  {
    "text": "a serverless architecture um functions get triggered based on events",
    "start": "730959",
    "end": "736079"
  },
  {
    "text": "and those events could come from as we said in s3 bucket it could come from an alexa and",
    "start": "736079",
    "end": "742720"
  },
  {
    "text": "my colleague has a demo that he shows how he um triggers an alexa and device",
    "start": "742720",
    "end": "748240"
  },
  {
    "text": "and by that actually um has a triggers an sql injection into a function right",
    "start": "748240",
    "end": "754880"
  },
  {
    "text": "there's no um single perimeter that you can lock that will make your whole application",
    "start": "754880",
    "end": "760959"
  },
  {
    "text": "safe so when we talk about serverless risks",
    "start": "760959",
    "end": "767680"
  },
  {
    "start": "763000",
    "end": "943000"
  },
  {
    "text": "um there's there are a couple first one is event injection similarly",
    "start": "767680",
    "end": "772800"
  },
  {
    "text": "to what we've talked getting um all kinds of parameters and not using them correctly within your code broken",
    "start": "772800",
    "end": "779519"
  },
  {
    "text": "authentication what we just discussed is not having the ability to only limit on",
    "start": "779519",
    "end": "785279"
  },
  {
    "text": "a specific policy and by that you may lose and you may lose the um",
    "start": "785279",
    "end": "792320"
  },
  {
    "text": "the authentication and measures on specific function or specific events coming into the system",
    "start": "792320",
    "end": "799600"
  },
  {
    "text": "um sensitive data exposure we've seen that a lot it's very common misconfigurations that may lose",
    "start": "799600",
    "end": "806160"
  },
  {
    "text": "may lead to um data exposure or based on broken authentication um over privileged function that's",
    "start": "806160",
    "end": "813120"
  },
  {
    "text": "exactly what we discussed right a lot of times and we've seen this with a lot of companies we give the",
    "start": "813120",
    "end": "818800"
  },
  {
    "text": "functions much more privileges than they actually need because it's it's a tough problem to solve",
    "start": "818800",
    "end": "824880"
  },
  {
    "text": "um vulnerable dependencies that's similar to every other architecture basically",
    "start": "824880",
    "end": "832000"
  },
  {
    "text": "you add additional libraries into your code into your system and they bring with them",
    "start": "832000",
    "end": "838800"
  },
  {
    "text": "additional vulnerabilities insufficient logging and monitoring so",
    "start": "838800",
    "end": "844639"
  },
  {
    "text": "um in in network-based architectures when we have the full ability to you know to monitor from a",
    "start": "844639",
    "end": "851680"
  },
  {
    "text": "network and from a process perspective um our services in a serverless",
    "start": "851680",
    "end": "857120"
  },
  {
    "text": "architecture it's a bit different and you have monitoring and login built in but they're pushed into specific",
    "start": "857120",
    "end": "863600"
  },
  {
    "text": "services that you need to overall make sure that you have the visibility",
    "start": "863600",
    "end": "869040"
  },
  {
    "text": "you need to actually add a lot of of processes and code around that in order",
    "start": "869040",
    "end": "874320"
  },
  {
    "text": "to to give you the same kind of visibility that you were used to um open resources similar to sensitive",
    "start": "874320",
    "end": "881680"
  },
  {
    "text": "data open resources that lead to sensitive data denial of service and denial of attack",
    "start": "881680",
    "end": "886800"
  },
  {
    "text": "so one of the pros of serverless architecture is pay as you use right but",
    "start": "886800",
    "end": "892240"
  },
  {
    "text": "they're also very highly scalable and it means that that attacker if you have a um",
    "start": "892240",
    "end": "898560"
  },
  {
    "text": "an api based um lambda that you've left open",
    "start": "898560",
    "end": "904639"
  },
  {
    "text": "and that runs for a couple of seconds an attacker can very easily basically",
    "start": "904639",
    "end": "909920"
  },
  {
    "text": "create a script that will just trigger it again and again and again and if you did not put the right concurrency limit",
    "start": "909920",
    "end": "915519"
  },
  {
    "text": "on top of that it will run indefinitely and it will scale up and scale up and scale up and",
    "start": "915519",
    "end": "920959"
  },
  {
    "text": "eventually you'll see the cost in your payment by the end of the month so denial of wallet",
    "start": "920959",
    "end": "928000"
  },
  {
    "text": "is also a common risk um insecure secret management and also where do i keep my",
    "start": "928000",
    "end": "933839"
  },
  {
    "text": "secrets a lot of time we use environment variables in serverless architectures there are ways",
    "start": "933839",
    "end": "938959"
  },
  {
    "text": "to do that better but that's another risk um there's the owasp serverless top 10.",
    "start": "938959",
    "end": "945920"
  },
  {
    "start": "943000",
    "end": "968000"
  },
  {
    "text": "it's basically an interpretation to the oauth top 10. and it's an open",
    "start": "945920",
    "end": "952399"
  },
  {
    "text": "project um where we're leading it and if you want to",
    "start": "952399",
    "end": "957440"
  },
  {
    "text": "contribute if you want to add and please feel free um",
    "start": "957440",
    "end": "963199"
  },
  {
    "text": "to to reach out to us um okay so let's do a short demo",
    "start": "963199",
    "end": "971120"
  },
  {
    "start": "968000",
    "end": "1269000"
  },
  {
    "text": "what we're going to see here is an attacker that's actually going to",
    "start": "971120",
    "end": "976399"
  },
  {
    "text": "get the access token of a specific lambda and what it can actually do with it in this",
    "start": "977040",
    "end": "983600"
  },
  {
    "text": "case the attacker is going to use a command injection in order to",
    "start": "983600",
    "end": "991120"
  },
  {
    "text": "to expose those environment variables and he's doing that by uploading a file",
    "start": "991279",
    "end": "996880"
  },
  {
    "text": "to an s3 bucket that sv bucket triggers a lambda just to be clear the s3 bucket isn't exposed it's fully secure",
    "start": "996880",
    "end": "1004160"
  },
  {
    "text": "everything is fully configured the problem is um a code injection within the lambda",
    "start": "1004160",
    "end": "1009600"
  },
  {
    "text": "itself okay",
    "start": "1009600",
    "end": "1013440"
  },
  {
    "text": "okay so we're using here an application called dvsa i'll show it",
    "start": "1017120",
    "end": "1023600"
  },
  {
    "text": "a bit later basically it's an e-store um for games",
    "start": "1023600",
    "end": "1029760"
  },
  {
    "text": "online e-store for games and that that e-store has a feedback form",
    "start": "1029760",
    "end": "1036160"
  },
  {
    "text": "right and as a user i can go into that feedback form add my feedback send it up and",
    "start": "1036160",
    "end": "1042880"
  },
  {
    "text": "everything works it also has the ability to attach a file um and if we look at what happens when we",
    "start": "1042880",
    "end": "1049760"
  },
  {
    "text": "attach a file there's a request sent to the backend the backend right receives the the file",
    "start": "1049760",
    "end": "1057200"
  },
  {
    "text": "and then sends back a signed response signed response is basically giving the client the ability to upload a file into",
    "start": "1057200",
    "end": "1064640"
  },
  {
    "text": "an s3 in a secure way okay um",
    "start": "1064640",
    "end": "1070480"
  },
  {
    "text": "so the attacker can easily see this that this is what the application is doing and",
    "start": "1070480",
    "end": "1075840"
  },
  {
    "text": "basically based on that what we're going to do right after we send the file",
    "start": "1075840",
    "end": "1081840"
  },
  {
    "text": "and we're going to change the file name in order to add our command injection",
    "start": "1081840",
    "end": "1087360"
  },
  {
    "text": "and so let's change the file name and we'll add basically a curl request",
    "start": "1087360",
    "end": "1094640"
  },
  {
    "text": "to a to a server that we have um available and basically we're going to and get all",
    "start": "1094640",
    "end": "1102000"
  },
  {
    "text": "the environment variables basics before them and send them in the current request war and available server",
    "start": "1102000",
    "end": "1109840"
  },
  {
    "text": "so attaching the file sending it",
    "start": "1120320",
    "end": "1124639"
  },
  {
    "text": "okay and we got the request back and so we have an ngrok server here basically we're taking what we the the",
    "start": "1129679",
    "end": "1137280"
  },
  {
    "text": "payload that we just got let's say base64 decode it back and let's see what we got",
    "start": "1137280",
    "end": "1144720"
  },
  {
    "text": "so here we have all the environment variables within the the lambda and when we look at what's in that lambda like we",
    "start": "1146799",
    "end": "1153919"
  },
  {
    "text": "mentioned earlier basically it has all the access token access key accurate access secret",
    "start": "1153919",
    "end": "1161280"
  },
  {
    "text": "that give that lambda the ability the permissions to act and and do all the",
    "start": "1161280",
    "end": "1166640"
  },
  {
    "text": "calls within aws now if i add that those um",
    "start": "1166640",
    "end": "1172080"
  },
  {
    "text": "specific permissions into my credentials file in aws basically i'm going to use",
    "start": "1172080",
    "end": "1177360"
  },
  {
    "text": "them from my laptop right directly to the cloud i don't need to be in a lambda",
    "start": "1177360",
    "end": "1182640"
  },
  {
    "text": "right i don't need to be in that micro service in order to exploit it once i have those um keys i can use them from everywhere",
    "start": "1182640",
    "end": "1190840"
  },
  {
    "text": "anywhere and and basically use them in order to um do whatever they allow me and in this",
    "start": "1190840",
    "end": "1197600"
  },
  {
    "text": "case we're going to exploit an s3 bucket because this lambda has over privileged permissions so basically",
    "start": "1197600",
    "end": "1206720"
  },
  {
    "text": "i can just use that and list all the buckets within the environment and now",
    "start": "1206720",
    "end": "1211840"
  },
  {
    "text": "go deeper and deeper start listing all the files within those buckets and again it's all because i'm actually using the",
    "start": "1211840",
    "end": "1219039"
  },
  {
    "text": "permissions of that lambda it's not because those buckets are misconfigured or anything like that it's just because",
    "start": "1219039",
    "end": "1225200"
  },
  {
    "text": "that lambda has been given over privileged [Music]",
    "start": "1225200",
    "end": "1230559"
  },
  {
    "text": "permissions and basically if we go deeper and deeper",
    "start": "1230559",
    "end": "1236720"
  },
  {
    "text": "and we can actually get one of the orders we can change an order basically",
    "start": "1236720",
    "end": "1242000"
  },
  {
    "text": "do whatever this function is is able to do",
    "start": "1242000",
    "end": "1247640"
  },
  {
    "text": "right so here we got an order we can change that order push it back and do all kind of stuff",
    "start": "1262080",
    "end": "1269120"
  },
  {
    "start": "1269000",
    "end": "1308000"
  },
  {
    "text": "okay another thing risk in the environment is scale right so we said we've moved from a monolith we've moved",
    "start": "1269120",
    "end": "1275520"
  },
  {
    "text": "to a to microservices and now we're moving to function as a service and very small",
    "start": "1275520",
    "end": "1283039"
  },
  {
    "text": "functions nanoservices as some people call it and there are a lot of services",
    "start": "1283039",
    "end": "1288080"
  },
  {
    "text": "they're much more frequent deployments right it's happening much faster um it's hard",
    "start": "1288080",
    "end": "1293600"
  },
  {
    "text": "to understand who's talking to who right a lot of services and there are a lot of developers few",
    "start": "1293600",
    "end": "1299600"
  },
  {
    "text": "app sex and it's hard to understand where i start what's the priority what",
    "start": "1299600",
    "end": "1305039"
  },
  {
    "text": "should i actually secure um when we look at traditional laptop",
    "start": "1305039",
    "end": "1311120"
  },
  {
    "start": "1308000",
    "end": "1375000"
  },
  {
    "text": "testing the uh the problems in traditional apps testing is basically first of all um",
    "start": "1311120",
    "end": "1317679"
  },
  {
    "text": "it's ignorant to the context in serverless application the infrastructure or the services that you",
    "start": "1317679",
    "end": "1323360"
  },
  {
    "text": "use with your actual code is the application itself there's not a real",
    "start": "1323360",
    "end": "1328880"
  },
  {
    "text": "big distinction between the two you can't run your code without the underlying architect the underlying",
    "start": "1328880",
    "end": "1335200"
  },
  {
    "text": "infrastructure that's connecting everything every piece to the one to the other so without",
    "start": "1335200",
    "end": "1341200"
  },
  {
    "text": "understanding the context with understanding the big picture i'll probably give a lot of false",
    "start": "1341200",
    "end": "1346640"
  },
  {
    "text": "positives and won't be able to actually detect the right security that needs to be applied it's completely",
    "start": "1346640",
    "end": "1353600"
  },
  {
    "text": "blind to edge devices okay so if we look and we'll talk about that this device says they need an url in an alexa case",
    "start": "1353600",
    "end": "1360480"
  },
  {
    "text": "there's no url in an s3 case there's no url so they don't have an access point they can't actually work on it um it's",
    "start": "1360480",
    "end": "1368400"
  },
  {
    "text": "blocking developers traditional appsec blocks developer and it's hard to escape",
    "start": "1368400",
    "end": "1375520"
  },
  {
    "start": "1375000",
    "end": "1466000"
  },
  {
    "text": "if we look at the traditional sort of pipeline right so the first thing",
    "start": "1375520",
    "end": "1381840"
  },
  {
    "text": "i have mario he's a developer right and luigi he's an apsec so the first thing i want to do is i'll add a",
    "start": "1381840",
    "end": "1388559"
  },
  {
    "text": "sass tool right static analysis on top of my um my source code repository what happens",
    "start": "1388559",
    "end": "1395760"
  },
  {
    "text": "as we said first of all there are a lot of applications right each one of those small components is an application by",
    "start": "1395760",
    "end": "1401360"
  },
  {
    "text": "itself a stats tool does not have the wider context does not understand the interactions between between them",
    "start": "1401360",
    "end": "1407360"
  },
  {
    "text": "because he's actually looking right at the code itself without the connection",
    "start": "1407360",
    "end": "1412880"
  },
  {
    "text": "between them so what will happen is there are going to be a lot of false positives the app stick will need to put",
    "start": "1412880",
    "end": "1418720"
  },
  {
    "text": "a lot of work in it in order to filter those configure etc next thing i can do",
    "start": "1418720",
    "end": "1424240"
  },
  {
    "text": "is add an is tool i went the other way around um",
    "start": "1424240",
    "end": "1429760"
  },
  {
    "text": "so add an is tool that's much more accurate right it runs on on top of my",
    "start": "1429760",
    "end": "1435679"
  },
  {
    "text": "actual payload it's in the environment but in a serverless architecture i don't have a server to actually instrument",
    "start": "1435679",
    "end": "1442640"
  },
  {
    "text": "much harder to do and and can also impact my performance and so i'll try a dust tool but in the",
    "start": "1442640",
    "end": "1449840"
  },
  {
    "text": "dust tool we just said there's problems about what's the entry point what happens after i actually um",
    "start": "1449840",
    "end": "1458480"
  },
  {
    "text": "invoke that entry point so again there's problems with the existing um",
    "start": "1458480",
    "end": "1464000"
  },
  {
    "text": "traditionally abstract tools so let's see how do we",
    "start": "1464000",
    "end": "1470240"
  },
  {
    "start": "1466000",
    "end": "1517000"
  },
  {
    "text": "we secure a serverless application this is a irobot serverless app okay",
    "start": "1470240",
    "end": "1475679"
  },
  {
    "text": "um and in this case what's happening this is taken from aws it's publicly available",
    "start": "1475679",
    "end": "1481360"
  },
  {
    "text": "and so what's happening here is there's an api call that the i robot is actually doing that api call triggers the lambda",
    "start": "1481360",
    "end": "1489120"
  },
  {
    "text": "that column that puts something on the queue that q actually can put",
    "start": "1489120",
    "end": "1494720"
  },
  {
    "text": "the message on a dlq in case it fails um there's a lambda that's actually",
    "start": "1494720",
    "end": "1500799"
  },
  {
    "text": "processing events from that queue and then it sends it to another lambda that lambda creates an iot role and creates",
    "start": "1500799",
    "end": "1507679"
  },
  {
    "text": "another iot policy basically a lot of things are happening here behind the scene",
    "start": "1507679",
    "end": "1514159"
  },
  {
    "text": "and everything is talking to cloud watch logs so if i i try to use the traditional",
    "start": "1514159",
    "end": "1519279"
  },
  {
    "start": "1517000",
    "end": "1557000"
  },
  {
    "text": "tools right i'll add sca scae grade software composition analysis analysis",
    "start": "1519279",
    "end": "1524720"
  },
  {
    "text": "right i'll try and find all the vulnerabilities in my dependencies and that's awesome right we we all use it",
    "start": "1524720",
    "end": "1531679"
  },
  {
    "text": "today i think there are a lot of available tools in all the different stages within the pipeline but it covers",
    "start": "1531679",
    "end": "1538480"
  },
  {
    "text": "only a specific amount of percentage of of the actual application it doesn't",
    "start": "1538480",
    "end": "1545120"
  },
  {
    "text": "cover your actual code right um so it's basically just fixing things",
    "start": "1545120",
    "end": "1551679"
  },
  {
    "text": "that you've imported and we know that it's highly available today",
    "start": "1551679",
    "end": "1556720"
  },
  {
    "text": "so what about using infrastructure as code so obviously when you're using serverless infrastructure as code",
    "start": "1556720",
    "end": "1562720"
  },
  {
    "start": "1557000",
    "end": "1593000"
  },
  {
    "text": "something that you're probably using and there are a lot of frameworks in cloud native in general but infrastructure and",
    "start": "1562720",
    "end": "1568159"
  },
  {
    "text": "code and scanning infrastructure and code doesn't really scan anything within",
    "start": "1568159",
    "end": "1573200"
  },
  {
    "text": "your internal code like the code injection that we've actually seen",
    "start": "1573200",
    "end": "1578640"
  },
  {
    "text": "so it looks more for misconfiguration and that's good and it's shift left in that sense that's awesome but it doesn't",
    "start": "1578640",
    "end": "1586080"
  },
  {
    "text": "really secure your environment with all the different layers that you actually need to secure",
    "start": "1586080",
    "end": "1593120"
  },
  {
    "start": "1593000",
    "end": "1618000"
  },
  {
    "text": "um so we talked about is really modern application security tool",
    "start": "1593120",
    "end": "1599919"
  },
  {
    "text": "right but basically it has a limitation in serverless about how do you actually",
    "start": "1599919",
    "end": "1605600"
  },
  {
    "text": "instrument and about coverage so is needs specific coverage in order to actually",
    "start": "1605600",
    "end": "1612880"
  },
  {
    "text": "inspect and find all the different vulnerabilities within your sas",
    "start": "1612880",
    "end": "1619200"
  },
  {
    "start": "1618000",
    "end": "1642000"
  },
  {
    "text": "a lot of applications sas basically looks for a sync source right analysis data analysis",
    "start": "1619200",
    "end": "1626400"
  },
  {
    "text": "and there's no immediate sync no real source um and there's no real context",
    "start": "1626400",
    "end": "1633919"
  },
  {
    "text": "so creates a lot of false positives and and hard to actually tune",
    "start": "1633919",
    "end": "1641200"
  },
  {
    "text": "dust right no http request it's a event based",
    "start": "1641200",
    "end": "1646320"
  },
  {
    "start": "1642000",
    "end": "1677000"
  },
  {
    "text": "from this irobot api call i get back a 200 response but most of the application",
    "start": "1646320",
    "end": "1652640"
  },
  {
    "text": "happens asynchronously behind the scene and thus tool will never see that right",
    "start": "1652640",
    "end": "1657840"
  },
  {
    "text": "so being outside of the the environment",
    "start": "1657840",
    "end": "1663600"
  },
  {
    "text": "gives it a lot of a blind spot so what do we do um",
    "start": "1663600",
    "end": "1668990"
  },
  {
    "text": "[Music] so these are is this is our approach basically one tool to rule them all",
    "start": "1668990",
    "end": "1676240"
  },
  {
    "text": "and and what we're working on is developing a continuous frictionless and complete",
    "start": "1676240",
    "end": "1681840"
  },
  {
    "start": "1677000",
    "end": "1760000"
  },
  {
    "text": "solution that uses all the existing methodologies but uses them in a cloud-oriented way in a serverless",
    "start": "1681840",
    "end": "1687919"
  },
  {
    "text": "oriented way in order to identify find the root cause be part of your pipeline",
    "start": "1687919",
    "end": "1694399"
  },
  {
    "text": "and and basically identify the problems that we've uh",
    "start": "1694399",
    "end": "1700080"
  },
  {
    "text": "just mentioned so basically what we do is we seamlessly connect we're using the same cloud and",
    "start": "1700080",
    "end": "1706720"
  },
  {
    "text": "abilities that exist today in order to immediately connect there's no real configuration everything happens out of",
    "start": "1706720",
    "end": "1713520"
  },
  {
    "text": "the box and we discover because we have the ability to do that within the infrastructure as code",
    "start": "1713520",
    "end": "1719760"
  },
  {
    "text": "right within the infrastructure discover all the different resources that you have in your environment immediately",
    "start": "1719760",
    "end": "1725679"
  },
  {
    "text": "analyze we simulate right because we understand the context we understand the application we",
    "start": "1725679",
    "end": "1732559"
  },
  {
    "text": "simulate different attacks we analyze and then we simulate those attack we verify that those attacks really",
    "start": "1732559",
    "end": "1738640"
  },
  {
    "text": "happened right and after that we report integrate and the last part is we continuously monitor so we're part of",
    "start": "1738640",
    "end": "1745919"
  },
  {
    "text": "the environment whenever something new happened whenever there's a change we immediately detect it we understand",
    "start": "1745919",
    "end": "1752000"
  },
  {
    "text": "what's the diff what has just changed and we only scan those specific areas",
    "start": "1752000",
    "end": "1757440"
  },
  {
    "text": "that have changed um so this is an example again mario",
    "start": "1757440",
    "end": "1763360"
  },
  {
    "start": "1760000",
    "end": "1912000"
  },
  {
    "text": "just pushed a new api that api calls a function that calls an",
    "start": "1763360",
    "end": "1768559"
  },
  {
    "text": "s3 bucket that calls another function and",
    "start": "1768559",
    "end": "1773679"
  },
  {
    "text": "and in this case what will happen is we'll immediately identify the new api has been deployed",
    "start": "1773679",
    "end": "1779760"
  },
  {
    "text": "we'll identify the flow within that new api and and based on that",
    "start": "1779760",
    "end": "1784880"
  },
  {
    "text": "right we'll basically scan and simulate and attack all each",
    "start": "1784880",
    "end": "1790880"
  },
  {
    "text": "one of those specific components separately and understand where is the actual um",
    "start": "1790880",
    "end": "1798799"
  },
  {
    "text": "where's the actual vulnerability and detect that and similarly you can you can do the same thing right another flow",
    "start": "1798799",
    "end": "1806080"
  },
  {
    "text": "through alexa create an alexa and deploy that will identify automatically and",
    "start": "1806080",
    "end": "1812480"
  },
  {
    "text": "then um find when the where the vulnerability is yes",
    "start": "1812480",
    "end": "1818880"
  },
  {
    "text": "okay um so",
    "start": "1818880",
    "end": "1824320"
  },
  {
    "text": "er dvsa dvsa is a dom dam vulnerable serverless",
    "start": "1824320",
    "end": "1829520"
  },
  {
    "text": "application that you can use and it's part of an oauth project that we help to maintain um you can deploy it",
    "start": "1829520",
    "end": "1837440"
  },
  {
    "text": "there are about 30 different vulnerabilities within it that you can use and learn to not use it in",
    "start": "1837440",
    "end": "1844960"
  },
  {
    "text": "production okay it's vulnerable by design so do not deploy it to any any",
    "start": "1844960",
    "end": "1850320"
  },
  {
    "text": "account that has any um thing that you need to to be secure um but it's a great project to to learn",
    "start": "1850320",
    "end": "1858320"
  },
  {
    "text": "better around um serverless and serverless vulnerabilities in in",
    "start": "1858320",
    "end": "1863840"
  },
  {
    "text": "general",
    "start": "1863840",
    "end": "1866240"
  },
  {
    "text": "um this is a bit more about our product um",
    "start": "1869200",
    "end": "1875200"
  },
  {
    "text": "we call it cast it's cloud application security testing and basically what we provide is a",
    "start": "1875200",
    "end": "1883760"
  },
  {
    "text": "um over privileged functions we detect them",
    "start": "1883760",
    "end": "1891039"
  },
  {
    "text": "least privilege and making sure that you secure your uh your limit you limit your",
    "start": "1891039",
    "end": "1896960"
  },
  {
    "text": "blast radius and os command injection so we detect all",
    "start": "1896960",
    "end": "1902320"
  },
  {
    "text": "kind of the serverless top 10 command injections and also provide oss",
    "start": "1902320",
    "end": "1909760"
  },
  {
    "start": "1912000",
    "end": "1960000"
  },
  {
    "text": "um and we're part of a contrast",
    "start": "1913360",
    "end": "1918399"
  },
  {
    "text": "right and contrast has a lot more um of a",
    "start": "1918399",
    "end": "1923600"
  },
  {
    "text": "of tools within its platform and to support both development testing and",
    "start": "1923600",
    "end": "1930320"
  },
  {
    "text": "prod both the sas scanner today an is tool",
    "start": "1930320",
    "end": "1936159"
  },
  {
    "text": "to secure your testing and also a tool to secure your",
    "start": "1936159",
    "end": "1941519"
  },
  {
    "text": "production workloads and there's also contrast oss to the detects the specific",
    "start": "1941519",
    "end": "1948480"
  },
  {
    "text": "dependencies and now we're adding basically it will be launched in in the",
    "start": "1948480",
    "end": "1953679"
  },
  {
    "text": "second in the next coming weeks a contrast for servers",
    "start": "1953679",
    "end": "1960000"
  },
  {
    "start": "1960000",
    "end": "2002000"
  },
  {
    "text": "that's it um last thing is if you do want to learn more and and by any chance",
    "start": "1961200",
    "end": "1966559"
  },
  {
    "text": "you're participating in re-event and re-event we'll be launching a jam session basically that you can",
    "start": "1966559",
    "end": "1975120"
  },
  {
    "text": "log login use you it creates automatically serverless workload for you that you can actually test",
    "start": "1975120",
    "end": "1982320"
  },
  {
    "text": "and learn um and and understand better what are the serverless risks and how do you actually",
    "start": "1982320",
    "end": "1988559"
  },
  {
    "text": "approach them and secure them thank you so much",
    "start": "1988559",
    "end": "1996360"
  }
]