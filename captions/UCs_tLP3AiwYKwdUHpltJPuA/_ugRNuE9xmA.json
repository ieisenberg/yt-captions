[
  {
    "start": "0",
    "end": "113000"
  },
  {
    "text": "[Music]",
    "start": "960",
    "end": "8889"
  },
  {
    "text": "as Eric said I'm going to be talking about thinking asynchronously but also hopefully you've learned a little bit",
    "start": "13740",
    "end": "19260"
  },
  {
    "text": "more about Eda today already built on your knowledge before coming here so I'm",
    "start": "19260",
    "end": "25260"
  },
  {
    "text": "going to give you a load of patterns bear with me there's a lot of diagrams as Gregor said earlier this this morning",
    "start": "25260",
    "end": "32340"
  },
  {
    "text": "we love a diagram as Architects so I'm going to be showing you loads but I'm",
    "start": "32340",
    "end": "37559"
  },
  {
    "text": "going to try and make it Jazzy I have jokes I do have dance moves the world is now going to see them as this is being",
    "start": "37559",
    "end": "43680"
  },
  {
    "text": "recorded so please laugh it's really important that you laugh otherwise it's been a waste of my time putting this",
    "start": "43680",
    "end": "49500"
  },
  {
    "text": "choreography together first joke of the day but who who am I so I'm Rebecca",
    "start": "49500",
    "end": "55680"
  },
  {
    "text": "Coolidge and I'm a Solutions architect in our UK and Ireland public sector team so I look after our kind of government",
    "start": "55680",
    "end": "61760"
  },
  {
    "text": "customers in that space and government are in a there are loads of government",
    "start": "61760",
    "end": "66840"
  },
  {
    "text": "customers using serverless so dispelling that myth straight away happy to talk to anyone kind of working in regulated",
    "start": "66840",
    "end": "73380"
  },
  {
    "text": "space because I know that could be kind of interesting um for some of the stuff we've talked about today as Eric said I'm a",
    "start": "73380",
    "end": "80159"
  },
  {
    "text": "serverless an event-driven architecture's Enthusiast I've done quite a few talks in this space just",
    "start": "80159",
    "end": "85619"
  },
  {
    "text": "because I find it really really fun um I got into into Tech uh relatively late in in my career I started off in",
    "start": "85619",
    "end": "93180"
  },
  {
    "text": "policy Consulting and did a bit of other things on the side and it's serverless",
    "start": "93180",
    "end": "98640"
  },
  {
    "text": "that really got me interested in it like I didn't want to be laying cables that wasn't my bag I wanted to kind of dive",
    "start": "98640",
    "end": "104220"
  },
  {
    "text": "into the code straight away and and figure out ways to to build applications that made sense to me so that's a little",
    "start": "104220",
    "end": "110579"
  },
  {
    "text": "bit about why I'm here and what I'm going to chat to you about um but again kind of diving a bit deeper",
    "start": "110579",
    "end": "116520"
  },
  {
    "start": "113000",
    "end": "142000"
  },
  {
    "text": "on some of the stuff you heard earlier I'm going to go over the common kind of serverless pattern and problem uh why is",
    "start": "116520",
    "end": "122520"
  },
  {
    "text": "it that we're telling you to use or try out some of our integration Services uh",
    "start": "122520",
    "end": "127860"
  },
  {
    "text": "why did Emily if you enter her talk earlier say about how you should how and when you should decide to remove code",
    "start": "127860",
    "end": "134099"
  },
  {
    "text": "and replace it with something else and then take you through quite a lot of patterns and hopefully you can kind of",
    "start": "134099",
    "end": "140879"
  },
  {
    "text": "bear with me so starting with the common problem most applications look something like",
    "start": "140879",
    "end": "148020"
  },
  {
    "start": "142000",
    "end": "309000"
  },
  {
    "text": "this you have an API that might have some security and routing not routing",
    "start": "148020",
    "end": "154760"
  },
  {
    "text": "you have storage which has storage and then compute kind of holds everything",
    "start": "154760",
    "end": "161040"
  },
  {
    "text": "else so these kind of three three main components are in all of our apps but if",
    "start": "161040",
    "end": "166560"
  },
  {
    "text": "something's going to go wrong who you can have a guess where it's going to be if I put your hands up one two three where's it going to go oh Eric's the",
    "start": "166560",
    "end": "173700"
  },
  {
    "text": "only one and he got it wrong hahaha",
    "start": "173700",
    "end": "177920"
  },
  {
    "text": "um it's so if it's going to go wrong it's going to go wrong here why well because it's my code",
    "start": "179280",
    "end": "185459"
  },
  {
    "text": "how many of you have made a problem in your code once and then realized it's definitely your fault why it's not working yeah a few of us how many of you",
    "start": "185459",
    "end": "192659"
  },
  {
    "text": "have cried because you've missed a comma or a colon yeah me 30 minutes call my manager he read it two seconds found the",
    "start": "192659",
    "end": "199019"
  },
  {
    "text": "problem horrific we've all been there but it's not about human error it's it as Emily touched on earlier if you went",
    "start": "199019",
    "end": "205860"
  },
  {
    "text": "to her talk with cinch writing less code means there's less to maintain which means it's easier for your teams to run",
    "start": "205860",
    "end": "212519"
  },
  {
    "text": "so it's more reliable and what we mean by that it doesn't mean you're going to be writing no code it doesn't mean that",
    "start": "212519",
    "end": "218580"
  },
  {
    "text": "there's going to be no Engineers or developers we still need you we're you're really really important it just means that you're not going to be",
    "start": "218580",
    "end": "224220"
  },
  {
    "text": "wasting time you know writing three lines of code for an API call or something like that so before I dive in dive into",
    "start": "224220",
    "end": "232319"
  },
  {
    "text": "um some of the architecture patterns how do you think we could improve this well throw it all in Lambda that's seems to",
    "start": "232319",
    "end": "239519"
  },
  {
    "text": "be what most modern applications look like for those who aren't aware Lambda are stateless event driven functions in",
    "start": "239519",
    "end": "245280"
  },
  {
    "text": "the cloud um but there aren't that many types of apps with just one function or one entry",
    "start": "245280",
    "end": "251760"
  },
  {
    "text": "point one module they tend to have databases I've put an example of dynamodb here they have some sort of cue",
    "start": "251760",
    "end": "258180"
  },
  {
    "text": "and then you know they may interact with a third-party application or on-premises",
    "start": "258180",
    "end": "263580"
  },
  {
    "text": "server or something else and so this ends up being what most modern applications look like and you'll",
    "start": "263580",
    "end": "270300"
  },
  {
    "text": "also notice that the arrows which are important as Gregor mentioned earlier are also all different colors because",
    "start": "270300",
    "end": "276240"
  },
  {
    "text": "they're also interacting with each other in different ways so not only are the functions quite different and the compute power that you're trying to",
    "start": "276240",
    "end": "282479"
  },
  {
    "text": "provide is different but also those interactions can be quite different too and if you have something like that then",
    "start": "282479",
    "end": "288780"
  },
  {
    "text": "you might start asking yourself the following well what if I want to sequence tasks or run different tasks in",
    "start": "288780",
    "end": "295199"
  },
  {
    "text": "parallel and then in this part of the application I want might might want to retry it or what do I do with my failed",
    "start": "295199",
    "end": "301620"
  },
  {
    "text": "tasks so guess where we're going next he was listening in the keynote he's in the",
    "start": "301620",
    "end": "307440"
  },
  {
    "text": "room so make sure that you were decouple your application yeah",
    "start": "307440",
    "end": "312780"
  },
  {
    "start": "309000",
    "end": "386000"
  },
  {
    "text": "that's when you laugh um so as as you would have heard earlier",
    "start": "312780",
    "end": "319440"
  },
  {
    "text": "and I'm just going to repeat his quote um if you're all listening you should have been at the appropriate level of",
    "start": "319440",
    "end": "325080"
  },
  {
    "text": "coupling depends on the level of control you have over your endpoints um I I'm not saying this just because",
    "start": "325080",
    "end": "330840"
  },
  {
    "text": "he's in the room genuinely one of the best books that I've read in this space it got me really excited about Eda and I",
    "start": "330840",
    "end": "337500"
  },
  {
    "text": "think often compute books can be a little bit boring his one is a page Turner all hundreds of them",
    "start": "337500",
    "end": "345198"
  },
  {
    "text": "um but in case it just kind of reiterate that in your in your brain when you're going through like think it's not a",
    "start": "345360",
    "end": "351180"
  },
  {
    "text": "one-size-fits-all approach um and so when you're thinking about it again it's not a single choice for your",
    "start": "351180",
    "end": "358080"
  },
  {
    "text": "full architecture so as your application grows many of you work for huge Enterprises you're not going to have a",
    "start": "358080",
    "end": "363600"
  },
  {
    "text": "one-size-fits-all to to different parts and so you have things to think about you know that might be technology dependency you know are you using kind",
    "start": "363600",
    "end": "370380"
  },
  {
    "text": "of java versus c-sharp it could be location dependency it could be semantic",
    "start": "370380",
    "end": "375479"
  },
  {
    "text": "dependency it's another theme that comes up with customers quite often or something that I'm going to talk to a little bit more around temporal or",
    "start": "375479",
    "end": "382319"
  },
  {
    "text": "location dependency and that's synchronous versus async so",
    "start": "382319",
    "end": "387419"
  },
  {
    "start": "386000",
    "end": "665000"
  },
  {
    "text": "why am I talking about asynchronously and what does thinking asynchronously really mean well when speaking to",
    "start": "387419",
    "end": "393600"
  },
  {
    "text": "customers many reference kind of rest apis or that sort of thing on their radar for communication",
    "start": "393600",
    "end": "400440"
  },
  {
    "text": "but when we think about asynchronous messaging most of our customers don't really know",
    "start": "400440",
    "end": "406139"
  },
  {
    "text": "where we're going or how they can change one part or they think oh but I do need a response back from kind of every part",
    "start": "406139",
    "end": "412500"
  },
  {
    "text": "of the of the application now asynchronous I'm going to caveat is not the solution to every problem and",
    "start": "412500",
    "end": "419100"
  },
  {
    "text": "it's about you understanding when to use the right tool for the job and being able to think in that architectural way",
    "start": "419100",
    "end": "425520"
  },
  {
    "text": "that Gregor was talking about earlier um but just to recap for those who maybe",
    "start": "425520",
    "end": "430680"
  },
  {
    "text": "don't know to make sure we're all on the same page and the difference between synchronous commands and asynchronous",
    "start": "430680",
    "end": "436560"
  },
  {
    "text": "events um is kind of how it's uh displayed here so for synchronous commands you have a",
    "start": "436560",
    "end": "442199"
  },
  {
    "text": "client that's interacting with service a service a then sends a message to service B and needs that response back",
    "start": "442199",
    "end": "447720"
  },
  {
    "text": "before it can continue now if you have a problem Downstream say in service b or as you can imagine",
    "start": "447720",
    "end": "453960"
  },
  {
    "text": "service c d e all the way down to Z not Z um then you end up blocking your whole",
    "start": "453960",
    "end": "460919"
  },
  {
    "text": "application and it's going to take a long time for that message to return or maybe it just breaks you know how many",
    "start": "460919",
    "end": "466680"
  },
  {
    "text": "times have you been on a website wanting to buy a ticket to something or purchase you know your favorite shoes before they",
    "start": "466680",
    "end": "473580"
  },
  {
    "text": "run out and it doesn't work and you go okay whatever I'm just going to leave that's money lost to your business that's your application is dropped all",
    "start": "473580",
    "end": "481139"
  },
  {
    "text": "because there was a problem potentially in that messaging chain asynchronous events however",
    "start": "481139",
    "end": "487500"
  },
  {
    "text": "client a sends something to service a service a then sends its service B but",
    "start": "487500",
    "end": "493139"
  },
  {
    "text": "does not expect a response why is that well maybe they don't need it if that's an analytics function like your business",
    "start": "493139",
    "end": "499379"
  },
  {
    "text": "intelligence unit or just trying to get some data do you need to send something back to your service B to like tell",
    "start": "499379",
    "end": "505560"
  },
  {
    "text": "service a or yeah we've got that data like probably not taking it out of tech for a second other",
    "start": "505560",
    "end": "511199"
  },
  {
    "text": "thing that's sometimes helpful to to contextualize it have you ever been asked like how are you and you just say",
    "start": "511199",
    "end": "517979"
  },
  {
    "text": "fine good that's kind of like a synchronous response if I ask you how are you doing and",
    "start": "517979",
    "end": "523500"
  },
  {
    "text": "you're going hmm I'm not really sure come back to me after I've had my coffee",
    "start": "523500",
    "end": "528600"
  },
  {
    "text": "asynchronous you're not raise your response you don't need to respond you've moved on you don't come back to",
    "start": "528600",
    "end": "534420"
  },
  {
    "text": "them do you you go and have your coffee and you never respond um so um and uh there's kind of different kind",
    "start": "534420",
    "end": "542040"
  },
  {
    "text": "of advantages and disadvantages to both so I'm not saying never use synchronous it can be really really useful it's low",
    "start": "542040",
    "end": "548220"
  },
  {
    "text": "latency it's simple most developers and Architects know know how it works why",
    "start": "548220",
    "end": "553560"
  },
  {
    "text": "why we need them and you can fail fast which actually in development can be really really useful",
    "start": "553560",
    "end": "558959"
  },
  {
    "text": "but for asynchronous as I said it it helps with that uh decreasing that coupling but also it's resilient to",
    "start": "558959",
    "end": "566640"
  },
  {
    "text": "receive a failure if service B goes down that doesn't mean that Service A and C and others uh stop working",
    "start": "566640",
    "end": "574200"
  },
  {
    "text": "um and it can also use various different kind of cues and buffering mechanisms that I'll go through in a moment",
    "start": "574200",
    "end": "580740"
  },
  {
    "text": "so if you switch off for the rest of the talk and you don't listen to any of the",
    "start": "580740",
    "end": "585839"
  },
  {
    "text": "slides that I have coming if you don't need a response and really ask yourself do I need that response",
    "start": "585839",
    "end": "591060"
  },
  {
    "text": "execute asynchronously if that's the only thing you take from my talk today I've done an okay job so just memorize",
    "start": "591060",
    "end": "597600"
  },
  {
    "text": "this slide get your phones out take a picture this one is the most important slide if you don't need a response xq",
    "start": "597600",
    "end": "603060"
  },
  {
    "text": "asynchronously now a former colleague of ours has a quote that like I can't not show I've to",
    "start": "603060",
    "end": "610260"
  },
  {
    "text": "in all of my talks not just this one um if your application is cloud native large scale or distributed so notice the",
    "start": "610260",
    "end": "617880"
  },
  {
    "text": "or not and and doesn't include a messaging component it's probably a bug now this is a bit tongue-in-cheek but",
    "start": "617880",
    "end": "624300"
  },
  {
    "text": "really when you start building it you know and a lot of you in this room you're interested in the Eda space you're probably thinking about messaging",
    "start": "624300",
    "end": "630660"
  },
  {
    "text": "if not using it a lot already um but you'll be surprised how many of our customers come to us with these huge",
    "start": "630660",
    "end": "637320"
  },
  {
    "text": "monoliths and just go help um and we've all probably been there before joining a new engineering team",
    "start": "637320",
    "end": "643500"
  },
  {
    "text": "going in thinking oh yeah this is amazing this really cool product like love this love this product open it up",
    "start": "643500",
    "end": "648899"
  },
  {
    "text": "in the back end and go whoa I can't believe it's built this way you know we've all been there before and so",
    "start": "648899",
    "end": "654240"
  },
  {
    "text": "hopefully some of the patterns that I'm going to show you will help get your juices flowing and thinking about how you can kind of re-architect build new",
    "start": "654240",
    "end": "661440"
  },
  {
    "text": "and take those ideas back to your teams so I'm talking about them in the context",
    "start": "661440",
    "end": "667560"
  },
  {
    "start": "665000",
    "end": "1532000"
  },
  {
    "text": "of microservices but they're not just kind of uh microservices or serverless they can be useful for lots of different",
    "start": "667560",
    "end": "674040"
  },
  {
    "text": "types of applications and I'm happy to kind of take that offline and chat to you afterwards about your different use cases",
    "start": "674040",
    "end": "680760"
  },
  {
    "text": "so the first one I'm going to talk to is a message Exchange so how we kind of send messages from one",
    "start": "680760",
    "end": "686820"
  },
  {
    "text": "to another this one's quite simple you have a sender and receiver Sending message a it immediately kind of shows",
    "start": "686820",
    "end": "693480"
  },
  {
    "text": "you that messes are decoupled somewhere and there's an expectation that there's no response",
    "start": "693480",
    "end": "698760"
  },
  {
    "text": "so how would I know which messages are being sent through you distinguish that with message intent",
    "start": "698760",
    "end": "705240"
  },
  {
    "text": "so that could be it could be a command message it could be a document message or transfer or it could be an event",
    "start": "705240",
    "end": "711060"
  },
  {
    "text": "message or notification in contrast we have the request response",
    "start": "711060",
    "end": "717240"
  },
  {
    "text": "so the requester sends a message and the responder works on that message and then sends message B",
    "start": "717240",
    "end": "723660"
  },
  {
    "text": "back to the requester two questions you might ask here is how can the responder request a response but",
    "start": "723660",
    "end": "731760"
  },
  {
    "text": "also how can the respond to assign an incoming response to the previous request so you have message a coming through but",
    "start": "731760",
    "end": "738480"
  },
  {
    "text": "how do they know message B is related to message a well again you have a return address which is metadata injected into",
    "start": "738480",
    "end": "744660"
  },
  {
    "text": "the message or you might have a correlate correlation ID which again is kind of a unique ID for that message",
    "start": "744660",
    "end": "750000"
  },
  {
    "text": "pinging back so you know which methods are corresponding to each other but you don't have to kind of wait for that same",
    "start": "750000",
    "end": "755940"
  },
  {
    "text": "message to be pinged back the first one is what we also call an integration pattern which you may see",
    "start": "755940",
    "end": "762680"
  },
  {
    "text": "used quite a lot and on the right hand side is a conversation pattern or",
    "start": "762680",
    "end": "767940"
  },
  {
    "text": "sometimes referred to in literature as a composite pattern now it's",
    "start": "767940",
    "end": "773880"
  },
  {
    "text": "probable that you use most of you are using some sort of kind of message Exchange in your applications",
    "start": "773880",
    "end": "780240"
  },
  {
    "text": "and the next architecture pattern that I want to go through is the message Channel which again are quite commonly",
    "start": "780240",
    "end": "785760"
  },
  {
    "text": "used but in very different ways and so I'm going to go to our two most common ones and the first one is our point to",
    "start": "785760",
    "end": "792180"
  },
  {
    "text": "point queue so you could have multiple senders and multiple receivers but I'm just using",
    "start": "792180",
    "end": "797880"
  },
  {
    "text": "kind of one senderence example for ease of the diagram imagine you have many many messages for",
    "start": "797880",
    "end": "804839"
  },
  {
    "text": "your consumer to consume you add these to a queue a kind of buffer uh while you're waiting for these",
    "start": "804839",
    "end": "811560"
  },
  {
    "text": "requests in this example it kind of acts like a load balancer for those messages to use terms we're all familiar with",
    "start": "811560",
    "end": "819000"
  },
  {
    "text": "a fundamental model which again we talked about quite a lot is that Pub sub or topic and fan out model",
    "start": "819000",
    "end": "825720"
  },
  {
    "text": "so Publishers send topics to subscribers and they receive all of the messages",
    "start": "825720",
    "end": "831180"
  },
  {
    "text": "that they're subscribed to so first answer the day imagine when you",
    "start": "831180",
    "end": "836459"
  },
  {
    "text": "are waking up in the morning you're making your coffee you're listening to your favorite radio station you're like yeah this is the best DJ ever I'm ready",
    "start": "836459",
    "end": "843839"
  },
  {
    "text": "for the day like yeah yeah get into my car still playing it still playing it in",
    "start": "843839",
    "end": "849240"
  },
  {
    "text": "in the tube like hoping that it stays on and then you get to work you've got to turn it off hopefully your manager's",
    "start": "849240",
    "end": "856200"
  },
  {
    "text": "having a good day hopefully your code doesn't break down and you're still in a happy mood you get back into your car on",
    "start": "856200",
    "end": "861420"
  },
  {
    "text": "the way home get back home put that radio station on and again I'm listening to it in the time that you put the radio on",
    "start": "861420",
    "end": "868500"
  },
  {
    "text": "you were listening to those messages you were listening to that favorite music but when you had turned it off you had",
    "start": "868500",
    "end": "873540"
  },
  {
    "text": "nothing and that's kind of how this this works so whilst you're subscribed to it whilst it's turned on that message",
    "start": "873540",
    "end": "879000"
  },
  {
    "text": "Channel you're going to receive all of those messages but as soon as you turn it off you won't receive anything and so",
    "start": "879000",
    "end": "884639"
  },
  {
    "text": "it won't be kind of uh queued up in the back unless we combine these two which I don't have",
    "start": "884639",
    "end": "891839"
  },
  {
    "text": "time to go through but if you want to hear more my colleague Dirk freiner does an amazing talk where he dives into this",
    "start": "891839",
    "end": "898139"
  },
  {
    "text": "and guess what it's called the topic Q Change Model they just combined both names and made",
    "start": "898139",
    "end": "904920"
  },
  {
    "text": "it really long um so yeah there are like different variations of this but I just thought",
    "start": "904920",
    "end": "910079"
  },
  {
    "text": "it's kind of cool to kind of touch on some of these that you might have seen",
    "start": "910079",
    "end": "915180"
  },
  {
    "text": "before now I do work for AWS so I'm going to mention two of our services that help",
    "start": "915180",
    "end": "920940"
  },
  {
    "text": "with this um so AWS offers a number of different messaging services but the two kind of",
    "start": "920940",
    "end": "926880"
  },
  {
    "text": "most commonly used that you probably use in yourself so have tried out and the first is Amazon simple Q service",
    "start": "926880",
    "end": "933540"
  },
  {
    "text": "or sqs that's our simple fully managed and flexible messaging service to",
    "start": "933540",
    "end": "940139"
  },
  {
    "text": "reliably cue and continuously exchange any volume of messages now when I first did this talk we had a record set of",
    "start": "940139",
    "end": "947959"
  },
  {
    "text": "47.7 million messages sent per second at Peak on 2021 Black Friday we recently",
    "start": "947959",
    "end": "955019"
  },
  {
    "text": "hit that again it's over 70 million messages per second we're processed at Peak a couple of months a couple of",
    "start": "955019",
    "end": "962279"
  },
  {
    "text": "months ago this summer with another Amazon sale so our own organization",
    "start": "962279",
    "end": "968279"
  },
  {
    "text": "amazon.com uses these services and I bet you that you're probably not hitting 70",
    "start": "968279",
    "end": "974760"
  },
  {
    "text": "million messages per second but if you are we'll write a blog about it so please try um",
    "start": "974760",
    "end": "981180"
  },
  {
    "text": "um so it really really can handle any load whenever customers talk to me about it like you know I just get them to read",
    "start": "981180",
    "end": "987000"
  },
  {
    "text": "that and please try and push it because our service team would love that um and then the second one is Amazon",
    "start": "987000",
    "end": "992160"
  },
  {
    "text": "simple and notification service so that's for that public subscribe messaging it has high throughput and",
    "start": "992160",
    "end": "997980"
  },
  {
    "text": "again highly reliable and messages are published to that topic to that favorite radio station that",
    "start": "997980",
    "end": "1004579"
  },
  {
    "text": "you're turning on and with multiple subscribers it fans out so that's why you sometimes hear the term fan out it's",
    "start": "1004579",
    "end": "1010880"
  },
  {
    "text": "because it's got multiple subscribers there are other services worth mentioning which some of my colleagues",
    "start": "1010880",
    "end": "1016279"
  },
  {
    "text": "have talked about a bit today Amazon mq if you have a specific software needs",
    "start": "1016279",
    "end": "1021800"
  },
  {
    "text": "and then iot core messaging broker for those of you who enter the server espresso Workshop you will have seen how",
    "start": "1021800",
    "end": "1027558"
  },
  {
    "text": "that was used for messaging and again we're happy to kind of take that offline or in the ask the experts Booth later on",
    "start": "1027559",
    "end": "1035678"
  },
  {
    "text": "now another kind of pattern I'd like to introduce you to is when I first started",
    "start": "1035839",
    "end": "1041058"
  },
  {
    "text": "building this talk the most common question I got asked about was the dead letter Q how many of you in the room are",
    "start": "1041059",
    "end": "1047720"
  },
  {
    "text": "using a deadlift key for your applications right now maybe it's because it's an Eda crowd we've got more hands this time",
    "start": "1047720",
    "end": "1054500"
  },
  {
    "text": "um so it basically allows customers to store message messages that the",
    "start": "1054500",
    "end": "1059780"
  },
  {
    "text": "application couldn't consume without breaking down the rest of the application so an example of that you imagine a",
    "start": "1059780",
    "end": "1066620"
  },
  {
    "text": "producer is trying to send a message to a consumer and then message C out of the three",
    "start": "1066620",
    "end": "1073340"
  },
  {
    "text": "keeps hitting an exception repeatedly again and again and again so we don't want to continue with this",
    "start": "1073340",
    "end": "1079640"
  },
  {
    "text": "otherwise it's going to cause Downstream impacts so we take that message offline it could",
    "start": "1079640",
    "end": "1086960"
  },
  {
    "text": "be a sign of a transient failure or maybe it's a poison pill doesn't mean that it's necessarily malicious but",
    "start": "1086960",
    "end": "1092360"
  },
  {
    "text": "there is some element that you need to inspect there and this sort of message is basically always going to run into a",
    "start": "1092360",
    "end": "1098600"
  },
  {
    "text": "problem so the dead letter Q deals with this it's a separate cue to your main q",
    "start": "1098600",
    "end": "1104539"
  },
  {
    "text": "channel and you can instruct it that after X numbers of times of trying you",
    "start": "1104539",
    "end": "1110120"
  },
  {
    "text": "put a message into that dead letter key for inspection what's really important here is that you can analyze the context",
    "start": "1110120",
    "end": "1117559"
  },
  {
    "text": "of these messages outside of your production application so there's no",
    "start": "1117559",
    "end": "1122960"
  },
  {
    "text": "need for open heart surgery or worrying that you're going to break everything down or that it you know it could just",
    "start": "1122960",
    "end": "1128360"
  },
  {
    "text": "be that your settings were kind of not not quite right for your messages it doesn't necessarily mean that someone's trying to kind of spam your service",
    "start": "1128360",
    "end": "1136220"
  },
  {
    "text": "um but it's really really a useful pattern and we have this both in SNS and",
    "start": "1136220",
    "end": "1141500"
  },
  {
    "text": "sqs and the sqs console has a redrive mechanism which was launched earlier",
    "start": "1141500",
    "end": "1148220"
  },
  {
    "text": "this year and which helps you also redrive messages once they've been inspected in that dead letter queue back",
    "start": "1148220",
    "end": "1154580"
  },
  {
    "text": "into the queue automatically for processing should you want again don't have time to talk into loads of future",
    "start": "1154580",
    "end": "1159620"
  },
  {
    "text": "from this but happy to chat more after today [Applause]",
    "start": "1159620",
    "end": "1164780"
  },
  {
    "text": "the next part pattern I'd like to talk to is the asynchronous point-to-point",
    "start": "1164780",
    "end": "1170600"
  },
  {
    "text": "model or router so event routers need to decide where messages need to go so in this example",
    "start": "1170600",
    "end": "1177559"
  },
  {
    "text": "we've got blue messages going to the blue Channel and green messages go into the green Channel",
    "start": "1177559",
    "end": "1184120"
  },
  {
    "text": "seems like a simple logic just match the messages to the channels that they need to go",
    "start": "1184340",
    "end": "1189620"
  },
  {
    "text": "but quite quickly it can become increase in complexity in logic and then suddenly",
    "start": "1189620",
    "end": "1196220"
  },
  {
    "text": "you have tighter coupling again when you're trying to make it looser how can we manage this",
    "start": "1196220",
    "end": "1204320"
  },
  {
    "text": "with the bus so imagine I'm here bus stop a I've got my blue",
    "start": "1204320",
    "end": "1211340"
  },
  {
    "text": "ticket and I'm looking for my my blue bus to come around oh I don't know where it is I I maybe I can't see it in the",
    "start": "1211340",
    "end": "1218299"
  },
  {
    "text": "dark very very difficult to figure out our bus our event bus helps us root in",
    "start": "1218299",
    "end": "1226160"
  },
  {
    "text": "the right direction so we still have Ascender and receiver we still have green and blue channels but instead of",
    "start": "1226160",
    "end": "1231980"
  },
  {
    "text": "us kind of trying to figure out where everything's going manually kind of moving it around our our event bus",
    "start": "1231980",
    "end": "1237980"
  },
  {
    "text": "handles that for you so you imagine you're here with your message waiting in the bus stop oh that's not my one that's",
    "start": "1237980",
    "end": "1244280"
  },
  {
    "text": "my one oh that is my bus okay cool I'm gonna get on I'm on the bus oh yeah great I haven't",
    "start": "1244280",
    "end": "1249500"
  },
  {
    "text": "played a proper dance routine but here's some choreography then I end up over here at my message B at my service B",
    "start": "1249500",
    "end": "1255260"
  },
  {
    "text": "with my message received so at AWS uh our event bus service called event",
    "start": "1255260",
    "end": "1261200"
  },
  {
    "text": "Bridge so imagine you've got an event bus not name created by us but very handy for my dance routine event bridge",
    "start": "1261200",
    "end": "1267320"
  },
  {
    "text": "that was the bridge that I went on to get there see you guys all gonna do it I ask people to",
    "start": "1267320",
    "end": "1272780"
  },
  {
    "text": "do this nobody has sent me a video on social media not even Eric but if you do like maybe I can get him to send some credits no",
    "start": "1272780",
    "end": "1279620"
  },
  {
    "text": "he doesn't have authority to do that I want to see your bus dances",
    "start": "1279620",
    "end": "1285559"
  },
  {
    "text": "um but yeah and Amazon eventbridge is our um simple uh fully fully managed",
    "start": "1285559",
    "end": "1291380"
  },
  {
    "text": "flexible event bus uh pay as you go service and so it basically helps with",
    "start": "1291380",
    "end": "1296840"
  },
  {
    "text": "that message routing it means that you don't have to worry about you know where the different messages",
    "start": "1296840",
    "end": "1302840"
  },
  {
    "text": "are going and routing it across your application but it also helps reduce uh",
    "start": "1302840",
    "end": "1308179"
  },
  {
    "text": "the the location coupling it help it means that you can focus on uh the the",
    "start": "1308179",
    "end": "1314179"
  },
  {
    "text": "bits of your application that differentiate yourself rather than where your messages are going and which Services they're hitting",
    "start": "1314179",
    "end": "1320480"
  },
  {
    "text": "and it makes life much more efficient for senders and receivers now let's take",
    "start": "1320480",
    "end": "1326240"
  },
  {
    "text": "a look at how eventbridge specifically works so you start um with a number of event",
    "start": "1326240",
    "end": "1332480"
  },
  {
    "text": "sources um and so uh eventbridge can have a",
    "start": "1332480",
    "end": "1337520"
  },
  {
    "text": "number of different sources as you can imagine our AWS Services um but also your own custom applications",
    "start": "1337520",
    "end": "1344380"
  },
  {
    "text": "as well as some SAS application providers some people like Salesforce",
    "start": "1344380",
    "end": "1350120"
  },
  {
    "text": "and others I know many companies use eventbridge allows you to ingest data",
    "start": "1350120",
    "end": "1356539"
  },
  {
    "text": "from those sources um and you then have a kind of a schema",
    "start": "1356539",
    "end": "1361580"
  },
  {
    "text": "in in the center and that helps you react to those events this could include information such as",
    "start": "1361580",
    "end": "1367640"
  },
  {
    "text": "the title The Format validation rules for each piece of event data and the",
    "start": "1367640",
    "end": "1372679"
  },
  {
    "text": "schema registry in novemberage has a load of easy to find schema so they",
    "start": "1372679",
    "end": "1377780"
  },
  {
    "text": "could be your your own if you've never used it before I would recommend using some of the schema already in there and",
    "start": "1377780",
    "end": "1384380"
  },
  {
    "text": "so AWS provides some schema that you can kind of tweak and change based on you know our experience with different",
    "start": "1384380",
    "end": "1390740"
  },
  {
    "text": "customers as well as our SAS Partners providing schema for their platforms you can also download this code as as uh",
    "start": "1390740",
    "end": "1397820"
  },
  {
    "text": "bindings for any kind of schema in the registry for your own IDE which enables",
    "start": "1397820",
    "end": "1403460"
  },
  {
    "text": "you to kind of represent that as as strongly typed object in your code",
    "start": "1403460",
    "end": "1408500"
  },
  {
    "text": "uh but regardless of the events also or where the event lands um subscribers write rules against these",
    "start": "1408500",
    "end": "1415700"
  },
  {
    "text": "events so that's the kind of routing element that it takes that takes care of for you so when I was like jumping on my",
    "start": "1415700",
    "end": "1421520"
  },
  {
    "text": "bus I wasn't worrying about where the bus was taking me I just knew that that was the bust I needed to be on and it",
    "start": "1421520",
    "end": "1426559"
  },
  {
    "text": "was finding the roots for me why because it had rules it knew which streets it was going to go down which stops it was",
    "start": "1426559",
    "end": "1432320"
  },
  {
    "text": "going to stop at you know sometimes you're waiting on one bus and you see it just go past your sock because it wasn't meant to stop there that's kind of how",
    "start": "1432320",
    "end": "1438320"
  },
  {
    "text": "it works with eventbridge rules you set a number of rules uh that match against",
    "start": "1438320",
    "end": "1443780"
  },
  {
    "text": "the incoming events so it knows to pick up the data that it needs and where it needs to go in your application",
    "start": "1443780",
    "end": "1449360"
  },
  {
    "text": "so um and those targets then the next part could be any number of AWS services",
    "start": "1449360",
    "end": "1455960"
  },
  {
    "text": "so that we've put like Lambda and SNS here but it could be ec2 instances it",
    "start": "1455960",
    "end": "1461600"
  },
  {
    "text": "could be you know uh container services it could be an API destination into your",
    "start": "1461600",
    "end": "1467600"
  },
  {
    "text": "SAS applications and and many other uh kind of targets that you can play around with",
    "start": "1467600",
    "end": "1473539"
  },
  {
    "text": "um here's uh a little bit more of how it kind of looks like so again you have your event sources from these three",
    "start": "1473539",
    "end": "1479240"
  },
  {
    "text": "different places your SAS applications will have uh their SAS event bus a lot",
    "start": "1479240",
    "end": "1484700"
  },
  {
    "text": "of our partners have put together um ones for you you can customize your own as you build out and but I would",
    "start": "1484700",
    "end": "1490700"
  },
  {
    "text": "really really recommend you start starting with the D5 members just to get your head around it and then you can",
    "start": "1490700",
    "end": "1496400"
  },
  {
    "text": "start um kind of playing around and then there's over 20 AWS services and API",
    "start": "1496400",
    "end": "1501679"
  },
  {
    "text": "destinations that it works with at the moment and so here's a flavor of the services",
    "start": "1501679",
    "end": "1507799"
  },
  {
    "text": "that it works with and then we're adding more and more all the time so if there are services that at the moment you'd",
    "start": "1507799",
    "end": "1513320"
  },
  {
    "text": "love to use with eventbridge and you can't we've got loads of PMS downstairs and they're going to be on the stage later so just tell them because they can",
    "start": "1513320",
    "end": "1519860"
  },
  {
    "text": "get it on there quicker than I can um but um please do like let us know how",
    "start": "1519860",
    "end": "1525500"
  },
  {
    "text": "you're finding it try it out it's a really really cool service now",
    "start": "1525500",
    "end": "1530659"
  },
  {
    "text": "stop on the sales play I've talked a lot about events you've heard a lot about event driven architecture so a little bit of a recap",
    "start": "1530659",
    "end": "1538640"
  },
  {
    "start": "1532000",
    "end": "2640000"
  },
  {
    "text": "I'm presuming by now you know what an event is",
    "start": "1538640",
    "end": "1544299"
  },
  {
    "text": "I've got one person with their thumbs up where have you been all morning",
    "start": "1545059",
    "end": "1550600"
  },
  {
    "text": "Eric has no thumbs um so I can't believe you said that",
    "start": "1550600",
    "end": "1557419"
  },
  {
    "text": "um uh so an event is a signal that a system state has changed so an example",
    "start": "1557419",
    "end": "1563179"
  },
  {
    "text": "again taking out of tech is Imagine You Turn All the Lights Off in a room",
    "start": "1563179",
    "end": "1569299"
  },
  {
    "text": "you can't unturn that light switch off if you need the light back on but you",
    "start": "1569299",
    "end": "1574880"
  },
  {
    "text": "can produce another event to turn the light on again so this is essentially",
    "start": "1574880",
    "end": "1580159"
  },
  {
    "text": "the concept that events are immutable you can't reverse them and like take them back you can't roll them back but",
    "start": "1580159",
    "end": "1586520"
  },
  {
    "text": "what you can do is create new ones as you're going through the reason why this is important as a",
    "start": "1586520",
    "end": "1593000"
  },
  {
    "text": "concept is it's also how we talk about them in in contrast to directed commands",
    "start": "1593000",
    "end": "1598279"
  },
  {
    "text": "which many of us are used to writing in code so in this example um we have a manager saying Joe please",
    "start": "1598279",
    "end": "1605900"
  },
  {
    "text": "can you create an invoice and Joe says yes we can",
    "start": "1605900",
    "end": "1611059"
  },
  {
    "text": "level events however you'll notice aren't forward-looking they're saying customer X has ordered a",
    "start": "1611059",
    "end": "1618140"
  },
  {
    "text": "widget you know customer has done something the first person says I don't care it's",
    "start": "1618140",
    "end": "1623600"
  },
  {
    "text": "not relevant to them they ignore it moves on the second person working in finance says oh I'll send an invoice out",
    "start": "1623600",
    "end": "1629659"
  },
  {
    "text": "to the customer and then the last person says sure I'll add that to the sales report for analysis so again here you can see the",
    "start": "1629659",
    "end": "1637520"
  },
  {
    "text": "difference between the two is that one is telling someone to do something the other is allowing the other people or in",
    "start": "1637520",
    "end": "1645380"
  },
  {
    "text": "application case the other services decide what they want to be subscribed to and what they want to do with that information",
    "start": "1645380",
    "end": "1652480"
  },
  {
    "text": "but it all starts with business events and this is again some of the talks that",
    "start": "1652940",
    "end": "1658220"
  },
  {
    "text": "we've seen today from Gregor and Emily and others talked about how we pick",
    "start": "1658220",
    "end": "1663679"
  },
  {
    "text": "apart uh business events um so how do we do this well",
    "start": "1663679",
    "end": "1670039"
  },
  {
    "text": "if anyone can guess what business this is retail fulfillment and support you've probably all ordered it from it at some",
    "start": "1670039",
    "end": "1675919"
  },
  {
    "text": "point I know I do quite a lot um but imagine we've got a business that has a retail domain a fulfillment domain",
    "start": "1675919",
    "end": "1682880"
  },
  {
    "text": "and a support domain each of these business areas are going to need information from that one customer",
    "start": "1682880",
    "end": "1689539"
  },
  {
    "text": "interaction that one customer logging onto a website and buying something impacts all of these business domains",
    "start": "1689539",
    "end": "1695779"
  },
  {
    "text": "but in very very different ways and the reason why this is important to our application development is that",
    "start": "1695779",
    "end": "1702260"
  },
  {
    "text": "you're developing an application that can respond in these business contexts to make sure that the messages the",
    "start": "1702260",
    "end": "1708080"
  },
  {
    "text": "information from that customer event hits the business Mains in the right way",
    "start": "1708080",
    "end": "1714140"
  },
  {
    "text": "but also the communication back to the customer is sufficient and so that's where I said it's the right tool for the",
    "start": "1714140",
    "end": "1720020"
  },
  {
    "text": "job sometimes you're going to need synchronous messaging sometimes asynchronous sometimes you won't hit one",
    "start": "1720020",
    "end": "1725659"
  },
  {
    "text": "service sometimes you will depending on what the customer has done so",
    "start": "1725659",
    "end": "1731059"
  },
  {
    "text": "we communicate between these events with choreography with my little dance on the",
    "start": "1731059",
    "end": "1737059"
  },
  {
    "text": "bus stop and this helps create loose coupling between our different communication",
    "start": "1737059",
    "end": "1742480"
  },
  {
    "text": "platforms oh sorry and it's an important concept to again kind of get stick in",
    "start": "1742480",
    "end": "1749419"
  },
  {
    "text": "your head that I've been covering off today and that many of my colleagues have covered if you went to Marcia's session she was talking about this in",
    "start": "1749419",
    "end": "1755720"
  },
  {
    "text": "event design that Publishers of events cannot have an expectation of how and if the",
    "start": "1755720",
    "end": "1763220"
  },
  {
    "text": "subscribers will respond so they when you're thinking asynchronously the big big difference",
    "start": "1763220",
    "end": "1770600"
  },
  {
    "text": "um and how you develop your microservice is you're pushing that data out and just letting the application do what it's",
    "start": "1770600",
    "end": "1777080"
  },
  {
    "text": "doing you're not waiting and expecting that response when there are expectations which you",
    "start": "1777080",
    "end": "1782960"
  },
  {
    "text": "may need in some instances um you're adding title coupling to the model you're adding uh extra complexity",
    "start": "1782960",
    "end": "1790600"
  },
  {
    "text": "and some potentially some Downstream impact should something go wrong so and here we have the publish",
    "start": "1790600",
    "end": "1797960"
  },
  {
    "text": "subscribe model my fulfillment center says notify me when the customer creates an order",
    "start": "1797960",
    "end": "1804860"
  },
  {
    "text": "again the publisher the retail domain where we've bought our item has no",
    "start": "1804860",
    "end": "1810740"
  },
  {
    "text": "awareness of how the Fulfillment domain is going to process but the retail domain doesn't change",
    "start": "1810740",
    "end": "1816760"
  },
  {
    "text": "amazon.com still works regardless of whether that fulfillment center is replying to them it just it it just",
    "start": "1816760",
    "end": "1824299"
  },
  {
    "text": "keeps keeps processing our messages you could have a queue that that keeps them",
    "start": "1824299",
    "end": "1829520"
  },
  {
    "text": "if something goes wrong but that's not of concern to the retail business that their main aim is making sure that",
    "start": "1829520",
    "end": "1835279"
  },
  {
    "text": "website looks great that they've got the information on there for us that the products are up to date but they don't",
    "start": "1835279",
    "end": "1840440"
  },
  {
    "text": "have control of how the Fulfillment center runs its business now I know what you're thinking well I",
    "start": "1840440",
    "end": "1848299"
  },
  {
    "text": "don't want to go on a website order something and it's not really there so how does it work and how does it not",
    "start": "1848299",
    "end": "1855740"
  },
  {
    "text": "communicate with the other parts of the business well there's going to be some areas where you will need tighter",
    "start": "1855740",
    "end": "1861080"
  },
  {
    "text": "coupling and that's outside of choreography in something we call orchestration",
    "start": "1861080",
    "end": "1866360"
  },
  {
    "text": "So within a business domain you will have a number of steps to check before",
    "start": "1866360",
    "end": "1872659"
  },
  {
    "text": "you push that event out into the next part of your application so zooming inside the retail domain here the",
    "start": "1872659",
    "end": "1879679"
  },
  {
    "text": "customer goes in order up looking for its item you then have an inventory manager again",
    "start": "1879679",
    "end": "1885140"
  },
  {
    "text": "could be within your application that checks whether or not something's in stock if it is it sends it to the",
    "start": "1885140",
    "end": "1891559"
  },
  {
    "text": "invoice manager who creates the order for the customer who then pings back order created and the first step that",
    "start": "1891559",
    "end": "1898159"
  },
  {
    "text": "the customer comes back with which is a synchronous response is here's your",
    "start": "1898159",
    "end": "1903440"
  },
  {
    "text": "order confirmation it exists the item exists at some point we'll fulfill it that order created",
    "start": "1903440",
    "end": "1910520"
  },
  {
    "text": "signal then gets sent to the Fulfillment domain as we saw in the last slide",
    "start": "1910520",
    "end": "1916580"
  },
  {
    "text": "but the retail domain doesn't tell it to do anything with it it just says it's happened but what the retail domain was",
    "start": "1916580",
    "end": "1922880"
  },
  {
    "text": "able to do was to check if that item was in stock and send something to the customer and we're all following",
    "start": "1922880",
    "end": "1929240"
  },
  {
    "text": "just about almost um and how we do this in AWS is with AWS",
    "start": "1929240",
    "end": "1937760"
  },
  {
    "text": "step function so again I'm sure you've seen a lot of it today if you haven't it's my absolute favorite service and you should be using it please please use",
    "start": "1937760",
    "end": "1944419"
  },
  {
    "text": "it um it's our workflow tool",
    "start": "1944419",
    "end": "1949760"
  },
  {
    "text": "it helps you build uh workflows um and within that you have a number of",
    "start": "1949760",
    "end": "1955940"
  },
  {
    "text": "State machines and each step of that state machine is called a state now there's a lot of jargon in in this space",
    "start": "1955940",
    "end": "1962539"
  },
  {
    "text": "and I'm not going to bore you with all of it um the recordings will be made available afterwards and I'm happy to chat with you one-on-one but essentially what it",
    "start": "1962539",
    "end": "1970159"
  },
  {
    "text": "helps is enable complex orchestration use cases across distributed workers",
    "start": "1970159",
    "end": "1975620"
  },
  {
    "text": "within your application it allows for resilient workflow automation so those repetitive tasks",
    "start": "1975620",
    "end": "1981080"
  },
  {
    "text": "that your application is running time and time again but also for some complex elements for example human interactions",
    "start": "1981080",
    "end": "1988940"
  },
  {
    "text": "where maybe identity checks need to be sent off for a human to review and that sort of thing",
    "start": "1988940",
    "end": "1994519"
  },
  {
    "text": "it has powerful AWS service Integrations which I'll go through in a moment and you can also integrate with your own",
    "start": "1994519",
    "end": "2000159"
  },
  {
    "text": "services it has an audible history and visual monitoring and it's all defined in Json",
    "start": "2000159",
    "end": "2007299"
  },
  {
    "text": "in our Amazon States language so as I said it's defining Json Amazon State language but also you can write in",
    "start": "2007299",
    "end": "2014980"
  },
  {
    "text": "the languages of your choice through our Cloud development kits and software development kits for data science",
    "start": "2014980",
    "end": "2021700"
  },
  {
    "text": "when you're creating uh workflows um in in Step functions we also have a",
    "start": "2021700",
    "end": "2029620"
  },
  {
    "text": "visualization so you see exactly kind of how it looks and why this is really",
    "start": "2029620",
    "end": "2035559"
  },
  {
    "text": "really important um our customers are telling us that not only is it useful for the development",
    "start": "2035559",
    "end": "2041799"
  },
  {
    "text": "teams to test things to try things out to share with one another how they're working but actually communicating to",
    "start": "2041799",
    "end": "2047860"
  },
  {
    "text": "business stakeholders why they have built the applications in the way they have or as many of our colleagues",
    "start": "2047860",
    "end": "2053138"
  },
  {
    "text": "mentioned earlier why they've restructured the teams in the way that they have and so you can imagine in my",
    "start": "2053139",
    "end": "2059200"
  },
  {
    "text": "initial example with the retail business with the Fulfillment business that it won't just be developers who are",
    "start": "2059200",
    "end": "2064419"
  },
  {
    "text": "interested in why the retail domain has set up the application in the way that it has you might have a finance manager",
    "start": "2064419",
    "end": "2070118"
  },
  {
    "text": "saying hey but when are you checking the the amount of stock and the price comparisons well you could show them",
    "start": "2070119",
    "end": "2076118"
  },
  {
    "text": "we're checking out this point in the customer Journey so it's really really useful tool and visualization to tool to",
    "start": "2076119",
    "end": "2082898"
  },
  {
    "text": "communicate with business stakeholders across your organization who may be a bit further removed from the tech",
    "start": "2082899",
    "end": "2089560"
  },
  {
    "text": "and then finally execute and monitor so quite handily it goes green if it works",
    "start": "2089560",
    "end": "2094599"
  },
  {
    "text": "it goes red if it doesn't it goes Amber if it's kind of stuck in the middle but",
    "start": "2094599",
    "end": "2099940"
  },
  {
    "text": "also you have logging data which is sent to a database if you're using standard",
    "start": "2099940",
    "end": "2105280"
  },
  {
    "text": "workflows or to cloudwatch if you're using Express look so there's two kind of integration",
    "start": "2105280",
    "end": "2113160"
  },
  {
    "text": "types I mentioned it's type directly integrated with a number of our services we have 17 AWS Services where it has",
    "start": "2113160",
    "end": "2121720"
  },
  {
    "text": "optimized Integrations and so there are a few patterns that I'm going to take us",
    "start": "2121720",
    "end": "2126820"
  },
  {
    "text": "through uh to to explain a little bit more about the difference between the",
    "start": "2126820",
    "end": "2132400"
  },
  {
    "text": "SDK Integrations and the optimize Integrations but the SDK Integrations are really really",
    "start": "2132400",
    "end": "2139540"
  },
  {
    "text": "powerful you can now call 220 plus AWS Services I actually don't know how many",
    "start": "2139540",
    "end": "2146440"
  },
  {
    "text": "AWS Services we have but I think it's pretty close to 220 and so I'm not going to say it touches all it doesn't but",
    "start": "2146440",
    "end": "2152619"
  },
  {
    "text": "pretty much most of them and over 10 000 API actions so again uh you know we're",
    "start": "2152619",
    "end": "2160119"
  },
  {
    "text": "probably covering most of what you need but if we're not let us know we have some step functions PM's going to be on",
    "start": "2160119",
    "end": "2165579"
  },
  {
    "text": "stage in a moment so tell him if you if you're if you don't have something that you need",
    "start": "2165579",
    "end": "2171040"
  },
  {
    "text": "um and then there are uh three uh integration patterns so the first one uh",
    "start": "2171040",
    "end": "2177160"
  },
  {
    "text": "request response is where step functions Waits For That HTTP response and you can",
    "start": "2177160",
    "end": "2183099"
  },
  {
    "text": "do that in both um the SDK integration so across that to",
    "start": "2183099",
    "end": "2188619"
  },
  {
    "text": "220 services but also um with our optimized Integrations",
    "start": "2188619",
    "end": "2195099"
  },
  {
    "text": "uh run a job is where you call a service and you have step functions wait for a",
    "start": "2195099",
    "end": "2200920"
  },
  {
    "text": "job to complete um so I'll go through some examples of those in a moment and then the final one",
    "start": "2200920",
    "end": "2206440"
  },
  {
    "text": "wait for a call back is where you have a a service you call a service with a task token sorry",
    "start": "2206440",
    "end": "2212440"
  },
  {
    "text": "and you have step functions wait until that task token is returned with the payload it could be successful failure",
    "start": "2212440",
    "end": "2218200"
  },
  {
    "text": "and that sort of thing for tasks uh like these and and run a",
    "start": "2218200",
    "end": "2224079"
  },
  {
    "text": "job step functions can pause indefinitely to wait for you know an external process or workflow to complete",
    "start": "2224079",
    "end": "2229960"
  },
  {
    "text": "so again I mentioned it can be really useful where you may have some human interactions and if you're using our",
    "start": "2229960",
    "end": "2236200"
  },
  {
    "text": "standard workflows you can have these uh running for up to a year so it can be",
    "start": "2236200",
    "end": "2241839"
  },
  {
    "text": "really really powerful in in cases where you need um you need a bit of a longer time for",
    "start": "2241839",
    "end": "2247839"
  },
  {
    "text": "process to to go through but you still want that automation you don't all want it to be human managed",
    "start": "2247839",
    "end": "2253660"
  },
  {
    "text": "so the first one requests response um so you have you know a request to an S S3 bucket uh to to get um some",
    "start": "2253660",
    "end": "2261820"
  },
  {
    "text": "information some objects you then want to transform something so you send a synchronous request to Lambda",
    "start": "2261820",
    "end": "2267760"
  },
  {
    "text": "to transform something with that object maybe make the thumbnail smaller or something like that",
    "start": "2267760",
    "end": "2272800"
  },
  {
    "text": "and then when it's complete an asynchronous request pushes it into the rest of the application so if you looked",
    "start": "2272800",
    "end": "2278020"
  },
  {
    "text": "if you remember back to that model again we have one business domain doing that orchestration piece and then once the",
    "start": "2278020",
    "end": "2284380"
  },
  {
    "text": "events done it's pushed into the rest of the application and this workflow is independent of the rest of it",
    "start": "2284380",
    "end": "2289420"
  },
  {
    "text": "eventbridge then takes it and just sends it out to the rest of the application um",
    "start": "2289420",
    "end": "2294880"
  },
  {
    "text": "again this is supported across all of the SDK Integrations or 220 Services",
    "start": "2294880",
    "end": "2300940"
  },
  {
    "text": "um so whether it's kind of async or synchronous requests and depends on which service you're kind of linking up",
    "start": "2300940",
    "end": "2307359"
  },
  {
    "text": "with um and which particular API call [Applause]",
    "start": "2307359",
    "end": "2312400"
  },
  {
    "text": "uh another another method is our wait for callback so here we have a queuing",
    "start": "2312400",
    "end": "2318880"
  },
  {
    "text": "mechanism so you send a message to the sqsq you introduce a task token to that",
    "start": "2318880",
    "end": "2325720"
  },
  {
    "text": "queue and and some contexts that might be needed for processing that message",
    "start": "2325720",
    "end": "2331780"
  },
  {
    "text": "a fleet of receivers in this example I've just put one for ease of the diagram then tries to process that",
    "start": "2331780",
    "end": "2337780"
  },
  {
    "text": "message um and in case there's a problem kind of processing",
    "start": "2337780",
    "end": "2343300"
  },
  {
    "text": "uh a failure then it sends a task token failure back and uh completes with the",
    "start": "2343300",
    "end": "2349599"
  },
  {
    "text": "fail State and step functions then catches their error and helps you decide how it should be protest",
    "start": "2349599",
    "end": "2356079"
  },
  {
    "text": "if not if it's successful then they'll receive a censor success pattern back into the workflow and then your workflow",
    "start": "2356079",
    "end": "2362680"
  },
  {
    "text": "completes uh this is supported in our optimized",
    "start": "2362680",
    "end": "2367900"
  },
  {
    "text": "and SDK integration so again with over 220 AWS services",
    "start": "2367900",
    "end": "2373300"
  },
  {
    "text": "and now the final pattern I'm going to go through today and I swear this is the last one thank you for sticking with me",
    "start": "2373300",
    "end": "2378760"
  },
  {
    "text": "we're almost at the end I'm not going to keep you away from drinks any longer um it's run a job",
    "start": "2378760",
    "end": "2385060"
  },
  {
    "text": "um so a really common example that our customers are using and where they find this really useful is for big data jobs",
    "start": "2385060",
    "end": "2390900"
  },
  {
    "text": "where you're querying large data sets for analysis and this can take quite a lot of time you don't want to be sitting",
    "start": "2390900",
    "end": "2397359"
  },
  {
    "text": "there refreshing stuff yourself or it might be a repetitive task you know often data teams run the same sorts of",
    "start": "2397359",
    "end": "2404020"
  },
  {
    "text": "tasks over and over and over again as new data comes through so here",
    "start": "2404020",
    "end": "2409420"
  },
  {
    "text": "um Step functions is running a set of event driven mechanisms to run asynchronous jobs",
    "start": "2409420",
    "end": "2414520"
  },
  {
    "text": "um with Amazon Athena our query service so it kicks off a request to Amazon",
    "start": "2414520",
    "end": "2420460"
  },
  {
    "text": "Athena and says can you query the data set for me and get the data that I need",
    "start": "2420460",
    "end": "2425859"
  },
  {
    "text": "this takes some time because you've got a huge data set you need to wait for it and then step functions kind of monitors",
    "start": "2425859",
    "end": "2432700"
  },
  {
    "text": "and waits for that response then you send you've got the query response back",
    "start": "2432700",
    "end": "2438520"
  },
  {
    "text": "so then you can get the results that are needed for processing you've got your results there and then you publish that",
    "start": "2438520",
    "end": "2443740"
  },
  {
    "text": "into eventbridge take those results to the next part of your application again eventbridge",
    "start": "2443740",
    "end": "2449760"
  },
  {
    "text": "asynchronously concludes um the step functions workflow as before",
    "start": "2449760",
    "end": "2455440"
  },
  {
    "text": "and sends it on to the next part of your application at the moment this isn't supported SDK",
    "start": "2455440",
    "end": "2461740"
  },
  {
    "text": "Integrations but it is supported across our optimized Integrations and a number of services here as you can imagine it",
    "start": "2461740",
    "end": "2468339"
  },
  {
    "text": "can be really really useful for it automation across our code Suite of services like code build for data jobs",
    "start": "2468339",
    "end": "2474160"
  },
  {
    "text": "like EMR glue and Athena for machine learning where things take a lot of time or batch jobs or containers",
    "start": "2474160",
    "end": "2482320"
  },
  {
    "text": "so I really really would advise you trying it out we also published a blog post on how to use step functions with",
    "start": "2482320",
    "end": "2488140"
  },
  {
    "text": "Amazon eks recently which is really really good so I talked about a lot of",
    "start": "2488140",
    "end": "2493300"
  },
  {
    "text": "serverless stuff in this talk that's my area of interest and expertise but step functions works really really well with",
    "start": "2493300",
    "end": "2499960"
  },
  {
    "text": "containers and so I would implore any of those in the room who are thinking about event driven but they still look",
    "start": "2499960",
    "end": "2505900"
  },
  {
    "text": "containers in their application like you can do both it's not just a serverless world",
    "start": "2505900",
    "end": "2511540"
  },
  {
    "text": "um and unlike some of my colleagues would like to think so please do try it out set functions works really really",
    "start": "2511540",
    "end": "2517780"
  },
  {
    "text": "well across both containers and serverless and also with traditional ECT",
    "start": "2517780",
    "end": "2526119"
  },
  {
    "text": "so I've mentioned load of services today lots of jargon words and hopefully you're still with me and but I just",
    "start": "2526119",
    "end": "2533079"
  },
  {
    "text": "wanted to do a bit of a recap before I send you off for a glass of wine so the first one that I mentioned is Amazon sqs",
    "start": "2533079",
    "end": "2539800"
  },
  {
    "text": "or simple queue service that's our messaging service it's durable and highly scalable it's fully managed and",
    "start": "2539800",
    "end": "2547119"
  },
  {
    "text": "has comprehensive security it's also one of our oldest services and as I said",
    "start": "2547119",
    "end": "2552579"
  },
  {
    "text": "earlier if you think you can beat 70 million messages per second please try we'd love to write that blog post the",
    "start": "2552579",
    "end": "2560440"
  },
  {
    "text": "second one is Amazon eventbridge that's for that choreography if you remember nothing remember I made a Fallout of",
    "start": "2560440",
    "end": "2565480"
  },
  {
    "text": "myself and dance and only like four of you laughed that's our event filtering service again fully managed and scalable",
    "start": "2565480",
    "end": "2572200"
  },
  {
    "text": "and has Integrations with many of us as partners Amazon SNS or simple notification",
    "start": "2572200",
    "end": "2578140"
  },
  {
    "text": "service helps with performance at scale again fully managed and Enterprise ready",
    "start": "2578140",
    "end": "2583480"
  },
  {
    "text": "and helps with that published subscribed ill fan art approach and then finally my favorite service AWS step functions and",
    "start": "2583480",
    "end": "2591160"
  },
  {
    "text": "for workflow automation orchestration parallel execution State Management and much much more and I'm happy to hear",
    "start": "2591160",
    "end": "2598660"
  },
  {
    "text": "your questions after this session so again recapping you use orchestration",
    "start": "2598660",
    "end": "2605079"
  },
  {
    "text": "with step functions within that business domain choreography across your application across those microservices",
    "start": "2605079",
    "end": "2611500"
  },
  {
    "text": "with eventbridge and if you went to Mars's session you would have seen the slide already but it's really really",
    "start": "2611500",
    "end": "2617079"
  },
  {
    "text": "good so we're showing it to you twice but they are better together and after this session you're going to see me",
    "start": "2617079",
    "end": "2622359"
  },
  {
    "text": "again interviewing some of our panelists from both eventbridge and step functions and our partners at mongodb and",
    "start": "2622359",
    "end": "2629980"
  },
  {
    "text": "hopefully they will say the same thing here I think they're better working together so please try them out",
    "start": "2629980",
    "end": "2635680"
  },
  {
    "text": "hopefully you've had a bit of a flavor and inspiration today but now you've",
    "start": "2635680",
    "end": "2640900"
  },
  {
    "start": "2640000",
    "end": "2648000"
  },
  {
    "text": "heard me talk I want to see your patterns choose them build upload them to serverless land ping me on Twitter",
    "start": "2640900",
    "end": "2646960"
  },
  {
    "text": "and I'm happy to answer any of your questions thank you all right thank you",
    "start": "2646960",
    "end": "2652200"
  },
  {
    "start": "2648000",
    "end": "2667000"
  },
  {
    "text": "[Applause]",
    "start": "2652200",
    "end": "2656119"
  }
]