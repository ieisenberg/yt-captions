[
  {
    "start": "0",
    "end": "43000"
  },
  {
    "text": "this will actually just be a library talk I hope that's okay with everyone",
    "start": "199",
    "end": "7360"
  },
  {
    "text": "um so the problem is uh you often need",
    "start": "7360",
    "end": "13559"
  },
  {
    "text": "to edit something serious in a web component uh interfaces",
    "start": "13559",
    "end": "18960"
  },
  {
    "text": "of of web pages and web applications are getting more and more complicated and",
    "start": "18960",
    "end": "24279"
  },
  {
    "text": "the common things are you want templates or you want a query or something uh to be written by users uh people are even",
    "start": "24279",
    "end": "31359"
  },
  {
    "text": "building whole integrated development environments inside of the browser and um HTML has a text editor",
    "start": "31359",
    "end": "39719"
  },
  {
    "text": "built in it's the text area element but it's about on par with",
    "start": "39719",
    "end": "45520"
  },
  {
    "start": "43000",
    "end": "108000"
  },
  {
    "text": "notepad if you're talking about serious code editing uh and to make things worse it",
    "start": "45520",
    "end": "51440"
  },
  {
    "text": "has this very very minimalistic programming interface you can get it value out you can give it a",
    "start": "51440",
    "end": "58239"
  },
  {
    "text": "new value you can even if you are willing to put up with some pain on Internet Explorer get uh the selection",
    "start": "58239",
    "end": "66159"
  },
  {
    "text": "and that's pretty much where it stops uh so for typical things where you just want to go in and uh adjust some",
    "start": "66159",
    "end": "73560"
  },
  {
    "text": "code query what the user is actually doing uh it doesn't scale uh also",
    "start": "73560",
    "end": "79439"
  },
  {
    "text": "because uh if you have a few thousand lines of code and you want to get and",
    "start": "79439",
    "end": "84880"
  },
  {
    "text": "set the value of a text area that's still on Modern browsers uh series slow",
    "start": "84880",
    "end": "90880"
  },
  {
    "text": "there used to be uh in the mid 2000 Zer",
    "start": "90880",
    "end": "97000"
  },
  {
    "text": "uh a project called edit area which built a relatively workable code editor on top of a text area but it's since",
    "start": "97000",
    "end": "104360"
  },
  {
    "text": "been superseded by uh better things these are the three main uh",
    "start": "104360",
    "end": "112320"
  },
  {
    "start": "108000",
    "end": "301000"
  },
  {
    "text": "projects currently in existence they're all open source developed in the open with active communities uh open",
    "start": "112320",
    "end": "120200"
  },
  {
    "text": "repositories and buck trackers actually I'm not sure about Orion's Buck tracker but uh as and cod miror on GitHub um Ace",
    "start": "120200",
    "end": "128759"
  },
  {
    "text": "stands for uh the a.org code editor where a.org is the old name of the",
    "start": "128759",
    "end": "135040"
  },
  {
    "text": "company that now does the Cloud9 uh integrated development uh environment",
    "start": "135040",
    "end": "141519"
  },
  {
    "text": "which is a really really slick online um integrated development environment",
    "start": "141519",
    "end": "147480"
  },
  {
    "text": "it's focused on JavaScript mostly uh doing both client and server side stuff with node uh it hooks into a debugger",
    "start": "147480",
    "end": "156360"
  },
  {
    "text": "that it runs on some Amazon server for you uh you have direct access to git",
    "start": "156360",
    "end": "162879"
  },
  {
    "text": "commands and it's it's it's very well done so they built their own editor for this uh around 2000 end of 2010 I think",
    "start": "162879",
    "end": "171480"
  },
  {
    "text": "it was first released Cod mirror is is my baby is my",
    "start": "171480",
    "end": "176760"
  },
  {
    "text": "project um uh the few of you who've seen my name before probably know it from my book",
    "start": "176760",
    "end": "182360"
  },
  {
    "text": "called eloquent JavaScript which uh I published in 2007 online uh it's a book",
    "start": "182360",
    "end": "188840"
  },
  {
    "text": "about JavaScript which has uh an integrated environment for trying out code Snippets editing them running them",
    "start": "188840",
    "end": "196400"
  },
  {
    "text": "and uh I needed a good code editor for that and none was forthcoming so uh",
    "start": "196400",
    "end": "201519"
  },
  {
    "text": "that's when I implemented the first version of code mirror uh around 2011",
    "start": "201519",
    "end": "206560"
  },
  {
    "text": "when Ace had come along uh Ace kind of out turned code mirror on most of the",
    "start": "206560",
    "end": "212840"
  },
  {
    "text": "coolness factor and the speed and the features so I rewrote it from scratch uh",
    "start": "212840",
    "end": "218159"
  },
  {
    "text": "using some of the techniques that I stole from Ace uh and now uh it's pretty",
    "start": "218159",
    "end": "223760"
  },
  {
    "text": "much on par with that then the third one is uh a bit the odd one out this is called Orion it's developed by um the",
    "start": "223760",
    "end": "232040"
  },
  {
    "text": "eclipse foundation for their uh they're also working on an online codeedit their environment",
    "start": "232040",
    "end": "239519"
  },
  {
    "text": "uh uh which is as a whole called Orion but the editor component can be uh run",
    "start": "239519",
    "end": "245400"
  },
  {
    "text": "separately from the rest from the back end um they're not getting quite as much",
    "start": "245400",
    "end": "251079"
  },
  {
    "text": "press at the moment but uh they're hard at work and I think they're building up great",
    "start": "251079",
    "end": "256479"
  },
  {
    "text": "stuff uh it uses a different implementation technique than the other two I'll uh come back to that at the end",
    "start": "256479",
    "end": "264080"
  },
  {
    "text": "of the talk but most of the things I'll be uh illustrating in my talk apply to Cod mirror Direct ly and Ace because it",
    "start": "264080",
    "end": "271720"
  },
  {
    "text": "has a very similar implementation uh Orion is different uh I'll briefly come back to it",
    "start": "271720",
    "end": "279080"
  },
  {
    "text": "later so why would I even uh reimplement",
    "start": "279240",
    "end": "284720"
  },
  {
    "text": "code mirror to use the same techniques that Ace has uh it's mostly a matter of Pride I had this project which was",
    "start": "284720",
    "end": "291759"
  },
  {
    "text": "dominant for a while in the code editor space and then these up starts came along and I wrote something that was better and of course uh I couldn't let",
    "start": "291759",
    "end": "300360"
  },
  {
    "text": "that happen but that's not the only difference um Ace is a very opinionated all bells and whistles",
    "start": "300360",
    "end": "308759"
  },
  {
    "text": "included kind of uh editor you just drop it into your page and you have all the features running and going and uh code",
    "start": "308759",
    "end": "316560"
  },
  {
    "text": "mirror on the other hand is minimal super configurable uh kind of thing",
    "start": "316560",
    "end": "321880"
  },
  {
    "text": "where uh if you really want uh something specific it can do it it can adjust to uh basically almost",
    "start": "321880",
    "end": "328720"
  },
  {
    "text": "everything you'd want to do it's also three times smaller than Ace and uh I'm",
    "start": "328720",
    "end": "335039"
  },
  {
    "start": "334000",
    "end": "742000"
  },
  {
    "text": "biased but I feel that it has a more pleasant interface uh but actually I",
    "start": "335039",
    "end": "340919"
  },
  {
    "text": "should not compare them because it's like uh I don't know asking the pope about uh independent comparing of the",
    "start": "340919",
    "end": "348039"
  },
  {
    "text": "various world religions let's see uh what we can actually do this these slides are uh are",
    "start": "348039",
    "end": "355080"
  },
  {
    "text": "just running in HTML they um",
    "start": "355080",
    "end": "360240"
  },
  {
    "text": "yeah this what you see here is a real text area so um it's a little narrow but uh",
    "start": "360240",
    "end": "368319"
  },
  {
    "text": "here if I press enter it indents all the way back to the side because it doesn't",
    "start": "368319",
    "end": "373720"
  },
  {
    "text": "know anything about code editing Let's uh replace it with code mirror you don't",
    "start": "373720",
    "end": "380120"
  },
  {
    "text": "see the difference because I styled them to be the same but this is actually code mirror and I press enter and it knows",
    "start": "380120",
    "end": "387199"
  },
  {
    "text": "this will probably want to indent uh to the same uh depth as the line before",
    "start": "387199",
    "end": "392639"
  },
  {
    "text": "it but that's all it knows and this is of course configurable you can make it do anything you want when enter is",
    "start": "392639",
    "end": "398599"
  },
  {
    "text": "pressed uh things would probably be better if we told it the language that we're using this is Javascript this is",
    "start": "398599",
    "end": "405680"
  },
  {
    "text": "actually the code that powers these slides it's pretty horrible code you shouldn't actually read it",
    "start": "405680",
    "end": "411520"
  },
  {
    "text": "um but uh it's colored now it knows what a string is what a command is it",
    "start": "411520",
    "end": "417280"
  },
  {
    "text": "recognizes keywords and um it also knows about blocks so if I",
    "start": "417280",
    "end": "422960"
  },
  {
    "text": "press enter here it'll see oh you opened the block so I should probably indent that if I press enter in the middle of a",
    "start": "422960",
    "end": "429879"
  },
  {
    "text": "list that's parenes it'll also nicely align it uh it's gotten slightly more",
    "start": "429879",
    "end": "435000"
  },
  {
    "text": "clever because uh there's a program written called the JavaScript mode and",
    "start": "435000",
    "end": "440440"
  },
  {
    "text": "there's modes for lots of languages I'll come back to that later um which are",
    "start": "440440",
    "end": "445720"
  },
  {
    "text": "basically like little parsers that uh can tell the editor about highlighting",
    "start": "445720",
    "end": "452039"
  },
  {
    "text": "and give some contextual information that it can use for example for",
    "start": "452039",
    "end": "457960"
  },
  {
    "text": "indentation uh that was not what I wanted to do uh the The Styling can be",
    "start": "458160",
    "end": "464199"
  },
  {
    "text": "completely adjusted using stylesheets uh this is a theme uh one of the few tees",
    "start": "464199",
    "end": "471080"
  },
  {
    "text": "that were contributed that were not programmer art style of super simple minimal stuff but done by someone who's",
    "start": "471080",
    "end": "477560"
  },
  {
    "text": "actually somewhat proficient in graphics um we can just tell it to uh add a line",
    "start": "477560",
    "end": "485199"
  },
  {
    "text": "number bar to the S to make it look somewhat more professional all these set option calls",
    "start": "485199",
    "end": "492039"
  },
  {
    "text": "you don't actually have to do that you can usually just initialize it with all the options you want but here I'm like going step by step to see uh where it",
    "start": "492039",
    "end": "499360"
  },
  {
    "text": "starts and uh what you can add let's say we want to add coach",
    "start": "499360",
    "end": "505360"
  },
  {
    "text": "folding first we make some space for uh an extra gutter here we tell it that we",
    "start": "505360",
    "end": "511319"
  },
  {
    "text": "want two gutters one for the line numbers and one for our fault markers the fault marker string is a CSS class",
    "start": "511319",
    "end": "517440"
  },
  {
    "text": "that will specify the width of this next we'll register an event handler uh if",
    "start": "517440",
    "end": "522640"
  },
  {
    "text": "someone clicks on the gutter it will call this function which here is called maybe fault code this is uh not part of",
    "start": "522640",
    "end": "529120"
  },
  {
    "text": "the core uh the core is is very minimal but uh the distribution includes a bunch",
    "start": "529120",
    "end": "534160"
  },
  {
    "text": "of add-ons which for example let you fault code um",
    "start": "534160",
    "end": "541200"
  },
  {
    "text": "other things that are extensions or add-ons are uh search",
    "start": "541399",
    "end": "547360"
  },
  {
    "text": "replace uh if I do search it'll just search through my documents if I do",
    "start": "547360",
    "end": "553640"
  },
  {
    "text": "replace here's a I can replace all the instances of",
    "start": "553640",
    "end": "559320"
  },
  {
    "text": "window and save like 16 bytes on my uh javascrip file with the uh word",
    "start": "559320",
    "end": "566920"
  },
  {
    "text": "top um yeah another thing I wanted to show was here I rigged something to show",
    "start": "567600",
    "end": "573040"
  },
  {
    "text": "a simple autoc completion if you uh press control",
    "start": "573040",
    "end": "578279"
  },
  {
    "text": "space it also does some clever things where it inspects the current environment and well these don't look",
    "start": "578279",
    "end": "584320"
  },
  {
    "text": "right I probably screw it up some Styles sheet uh it looks in your current environment to give you hints you can",
    "start": "584320",
    "end": "591399"
  },
  {
    "text": "actually it's pretty primitive you could write uh a much more clever autocompleter and because it's pluggable",
    "start": "591399",
    "end": "598000"
  },
  {
    "text": "you can uh basically go crazy uh with cleverness uh oh yeah here I added",
    "start": "598000",
    "end": "607079"
  },
  {
    "text": "uh another external program which whenever the content of the editor changes it'll",
    "start": "607079",
    "end": "614240"
  },
  {
    "text": "call this run linter function which is uh based on uh JS hint uh which uh is a",
    "start": "614240",
    "end": "622720"
  },
  {
    "text": "linter static lter for JavaScript and whenever it finds a problem it'll uh",
    "start": "622720",
    "end": "628600"
  },
  {
    "text": "inline show it as a little exclamation mark",
    "start": "628600",
    "end": "635519"
  },
  {
    "text": "widget if we compare with Ace it looks extremely similar",
    "start": "636600",
    "end": "642959"
  },
  {
    "text": "uh like eily similar it's just the theme is different you can probably style them to look exactly the same if you really",
    "start": "642959",
    "end": "649560"
  },
  {
    "text": "wanted to uh but it has all this this is like I I just dropped it in with three",
    "start": "649560",
    "end": "656639"
  },
  {
    "text": "lines of cod and it already has the folding running and uh I think it also",
    "start": "656639",
    "end": "661959"
  },
  {
    "text": "does linting yeah here we are it says missing semicolon",
    "start": "661959",
    "end": "668440"
  },
  {
    "text": "um so it's a more uh opinionated all uh",
    "start": "668440",
    "end": "673720"
  },
  {
    "text": "everything included kind of uh Library I didn't actually set up an",
    "start": "673720",
    "end": "679720"
  },
  {
    "text": "instance of Orion here but it looks very similar because code editors have converged to uh a kind of look I'm",
    "start": "679720",
    "end": "687079"
  },
  {
    "text": "actually coming from an emex background so I had to make some things non weird in the",
    "start": "687079",
    "end": "693000"
  },
  {
    "text": "process of getting feedback from users who were not quite uh familiar with the",
    "start": "693000",
    "end": "699360"
  },
  {
    "text": "uh emex based uh features that I was building",
    "start": "699360",
    "end": "704680"
  },
  {
    "text": "um but yeah I've converged on a standard component which can be configured you",
    "start": "704680",
    "end": "711040"
  },
  {
    "text": "can even add key binding Maps where you just redefine every key to the point that the browser allows unfortunately",
    "start": "711040",
    "end": "717839"
  },
  {
    "text": "the browser captures some things like uh contrl W um contrl p uh at least Chrome does",
    "start": "717839",
    "end": "725839"
  },
  {
    "text": "capture them unconditionally you can't overwrite them so full emex bindings are",
    "start": "725839",
    "end": "731560"
  },
  {
    "text": "only possible in Firefox which lets you redefine every single key on the",
    "start": "731560",
    "end": "736920"
  },
  {
    "text": "planet so as I said browsers don't really do code editing yet we just saw",
    "start": "736920",
    "end": "742360"
  },
  {
    "start": "742000",
    "end": "1182000"
  },
  {
    "text": "two code editors um some magic was required the rest of my talk will be spent",
    "start": "742360",
    "end": "749440"
  },
  {
    "text": "uh looking under the hood of these editors and seeing uh how they actually do uh their",
    "start": "749440",
    "end": "756920"
  },
  {
    "text": "thing first of all you saw a cursor there it's moved when I typed it's",
    "start": "756920",
    "end": "762560"
  },
  {
    "text": "blinked it's behaved exactly like a cursor it's not actually a cursor at",
    "start": "762560",
    "end": "767720"
  },
  {
    "text": "least the browser and the operating system do not think this is a cursor it's actually just a div element that I",
    "start": "767720",
    "end": "773760"
  },
  {
    "text": "absolutely positioned over the text and blink with a set timeout uh to make his",
    "start": "773760",
    "end": "779040"
  },
  {
    "text": "look cursor alike um but of course this is possible you can draw quite a lot it's usually",
    "start": "779040",
    "end": "786800"
  },
  {
    "text": "code mirror doesn't use any kind of canvas it's all Dom noes Dom noes are faster in practice than canvas because",
    "start": "786800",
    "end": "793160"
  },
  {
    "text": "the browser knows more about them and can uh display them more cleverly but you can imagine how this works you just",
    "start": "793160",
    "end": "800279"
  },
  {
    "text": "uh keep your own model of the document keep your own selection draw things in a way that is",
    "start": "800279",
    "end": "807360"
  },
  {
    "text": "expected from an editor listen to key events and uh respond to them in the",
    "start": "807360",
    "end": "813120"
  },
  {
    "text": "appropriate way if someone presses left you move your internal cursor position a bit you update your cursor and uh it",
    "start": "813120",
    "end": "819399"
  },
  {
    "text": "just looks like you have a real edior component um the thing is with key events you actually you could just",
    "start": "819399",
    "end": "826839"
  },
  {
    "text": "listen globally which there's one uh very cool project called YX which is an emex clone which does just that it just",
    "start": "826839",
    "end": "835000"
  },
  {
    "text": "listens to uh key events on the global window object and and and fakes everything from there uh the problem is",
    "start": "835000",
    "end": "842399"
  },
  {
    "text": "that then you're not really being a good citizen anymore the rest of the page will be unable to get Focus because",
    "start": "842399",
    "end": "848759"
  },
  {
    "text": "you're grabbing all events from the top level and uh you can't type into anything else or do anything else with",
    "start": "848759",
    "end": "854959"
  },
  {
    "text": "the keyboard so that's not a good solution what we want is actually respect the",
    "start": "854959",
    "end": "861360"
  },
  {
    "text": "um tabbing uh regime the focus regime of the browser where you can top through",
    "start": "861360",
    "end": "866399"
  },
  {
    "text": "and actually end up in your code editor and then when you press stop again if you didn't B tap to something else in",
    "start": "866399",
    "end": "871959"
  },
  {
    "text": "your editor move to the next field and so on um so to do that there's a text",
    "start": "871959",
    "end": "879040"
  },
  {
    "text": "area actually being created by the code editor and then hidden which accs as our",
    "start": "879040",
    "end": "885079"
  },
  {
    "text": "input uh shim the thing is uh we can't just do",
    "start": "885079",
    "end": "891160"
  },
  {
    "text": "uh display non or visibility hidden on the thing because then the browser will refuse to focus it what we're doing",
    "start": "891160",
    "end": "897680"
  },
  {
    "text": "instead is uh uh wrapping it in an overflow hidden div and making that uh H",
    "start": "897680",
    "end": "902920"
  },
  {
    "text": "zero you still don't see it but the browser doesn't realize that it's invisible so it'll happily uh focus it",
    "start": "902920",
    "end": "909680"
  },
  {
    "text": "for you and at that point we know uh a focus event fires on this thing so we know we're focused uh we register our",
    "start": "909680",
    "end": "917639"
  },
  {
    "text": "key event handlers on this actual uh text area so we can capture them locally",
    "start": "917639",
    "end": "922759"
  },
  {
    "text": "instead of globally and this works very well uh another Advantage is that",
    "start": "922759",
    "end": "929880"
  },
  {
    "text": "um the input is already in this uh text area so when text is typed it'll appear",
    "start": "929880",
    "end": "936519"
  },
  {
    "text": "there we don't have to mangle key events to get uh regularly typed text we can just wait for it to appear in the text",
    "start": "936519",
    "end": "943279"
  },
  {
    "text": "area move it into our own uh representation of the document and there are some some Advanced input things like",
    "start": "943279",
    "end": "950120"
  },
  {
    "text": "there's uh ime input method editor that's used by a lot of uh East Asian",
    "start": "950120",
    "end": "955399"
  },
  {
    "text": "languages to compose characters by multiple key Strokes uh the key events",
    "start": "955399",
    "end": "961160"
  },
  {
    "text": "there will be almost meaningless uh what you want is the actual input that uh the operating system makes of it and this",
    "start": "961160",
    "end": "968920"
  },
  {
    "text": "actual input will end up in the text area so uh this helps us support that",
    "start": "968920",
    "end": "974920"
  },
  {
    "text": "same for paste uh you don't have access to the clipboard uh from",
    "start": "974920",
    "end": "980519"
  },
  {
    "text": "JavaScript but if the user paste his text will end up in the currently focused control so we get uh the text we",
    "start": "980519",
    "end": "988120"
  },
  {
    "text": "want uh there's uh for cut and copy you also want uh",
    "start": "988120",
    "end": "996199"
  },
  {
    "text": "whenever uh this happens the the selection in the text area to",
    "start": "996199",
    "end": "1002240"
  },
  {
    "text": "match the actual selected text in the editor so that you actually get the stuff on your clipboard that you were hoping",
    "start": "1002240",
    "end": "1008240"
  },
  {
    "text": "for uh one solution is just to always put a selection in text area with if someone presses control a in a huge",
    "start": "1008240",
    "end": "1014720"
  },
  {
    "text": "document that'll be a lot of data and as I said setting the value on a text area is is amazingly slow which is probably",
    "start": "1014720",
    "end": "1022560"
  },
  {
    "text": "understandable because it has to populate this editable uh control which is non-trivial and it doesn't know if",
    "start": "1022560",
    "end": "1029319"
  },
  {
    "text": "only a small thing changed it has to just rebuild its whole representation so",
    "start": "1029319",
    "end": "1034438"
  },
  {
    "text": "we want to avoid that uh to do that we can just wait for a a cut or a copy",
    "start": "1034439",
    "end": "1041160"
  },
  {
    "text": "event to fire they fire uh like browser events they fire before the actual uh",
    "start": "1041160",
    "end": "1046319"
  },
  {
    "text": "cut or copy takes place so when this happen we quickly switch in the document",
    "start": "1046319",
    "end": "1051679"
  },
  {
    "text": "the current selection into the text area uh and everything works uh well it last",
    "start": "1051679",
    "end": "1056720"
  },
  {
    "text": "hack doesn't work on Opera which doesn't do cut copy and paste events but there we just put in the whole docu the whole",
    "start": "1056720",
    "end": "1062600"
  },
  {
    "text": "selection and uh if it's too slow they should use another browser or",
    "start": "1062600",
    "end": "1068480"
  },
  {
    "text": "something that's not the whole story of making something uh behave like a convincing editable uh component there's",
    "start": "1068480",
    "end": "1075840"
  },
  {
    "text": "also for example drag and drop you want drag and drop to work uh there's a good",
    "start": "1075840",
    "end": "1082720"
  },
  {
    "text": "API for that which is supported by all modern browsers so that was relatively trivial to hookup uh then there's",
    "start": "1082720",
    "end": "1088919"
  },
  {
    "text": "context menu if you uh right click on your editable component you expect cut",
    "start": "1088919",
    "end": "1095000"
  },
  {
    "text": "copy paste and select all to be present in the menu but people are just clicking some random div uh which is not an",
    "start": "1095000",
    "end": "1101520"
  },
  {
    "text": "editable component so uh we have to track the browser and it's actually possible",
    "start": "1101520",
    "end": "1106760"
  },
  {
    "text": "though weird um this event fires before the menu is opened so when code mirror",
    "start": "1106760",
    "end": "1112880"
  },
  {
    "text": "notices a context menu event or on Firefox a right click event because firefox's context menu event fires too",
    "start": "1112880",
    "end": "1120120"
  },
  {
    "text": "late what we do is we make this text area almost transparent so that it doesn't draw attention to itself we make",
    "start": "1120120",
    "end": "1126320"
  },
  {
    "text": "it small and we shove it under the mouse cursor it actually works it's a horrible horrible heck but um it ises a trick the",
    "start": "1126320",
    "end": "1133640"
  },
  {
    "text": "context menu will actually be associated with the text area at this point which we can hide in immediately afterwards so",
    "start": "1133640",
    "end": "1140559"
  },
  {
    "text": "you don't really see it unless you're looking for it uh and if you paste from",
    "start": "1140559",
    "end": "1146360"
  },
  {
    "text": "there uh it'll end up in the in the text area same we can do the same trick again where we put the selection in there so",
    "start": "1146360",
    "end": "1152000"
  },
  {
    "text": "that if you copy or cut you also get what you want select all requires another step of hackery where uh we add",
    "start": "1152000",
    "end": "1159039"
  },
  {
    "text": "an extra character that's not selected and then after the context menu opens we pull for a while whether that character",
    "start": "1159039",
    "end": "1164960"
  },
  {
    "text": "got selected and if it did then they probably clicked select all so we select the whole",
    "start": "1164960",
    "end": "1171159"
  },
  {
    "text": "document yeah it's a shame a real API would have been great but uh this works",
    "start": "1171159",
    "end": "1177520"
  },
  {
    "text": "and this is not so bad another area where uh we're",
    "start": "1177520",
    "end": "1183320"
  },
  {
    "start": "1182000",
    "end": "1363000"
  },
  {
    "text": "definitely cheating is uh the scrolling because",
    "start": "1183320",
    "end": "1188919"
  },
  {
    "text": "uh supporting huge documents is is important in in a code editor uh we",
    "start": "1188919",
    "end": "1194200"
  },
  {
    "text": "don't want to render everything to the dumb what we do is when you're looking at a scrollable editor actually only the",
    "start": "1194200",
    "end": "1202000"
  },
  {
    "text": "part that's currently visible is is rendered to the D the rest is not there uh can be Illustrated with a little",
    "start": "1202000",
    "end": "1209640"
  },
  {
    "text": "animation um here we're scrolling across this huge",
    "start": "1209640",
    "end": "1214760"
  },
  {
    "text": "document everything is missing except for the part that we could currently see and a small margin around that and the",
    "start": "1214760",
    "end": "1222320"
  },
  {
    "text": "rest of the scroll bar is produced by a big uh statically sized uh div which is set to",
    "start": "1222320",
    "end": "1229520"
  },
  {
    "text": "the ha of the actual content with the result that the scroll bar is correct and whenever a scroll event fires",
    "start": "1229520",
    "end": "1235720"
  },
  {
    "text": "because uh the user Scrolls we quickly repaint whatever he's looking at now",
    "start": "1235720",
    "end": "1242240"
  },
  {
    "text": "um with a small margin so that we don't have to repaint on every tiny scroll event it works almost perfectly except",
    "start": "1242240",
    "end": "1250679"
  },
  {
    "text": "that if you scroll very fast uh scroll events happen after the actual scrolling was done so you'll see briefly an empty",
    "start": "1250679",
    "end": "1259080"
  },
  {
    "text": "space and then the code flips in again and this was very disturbing especially on slower",
    "start": "1259080",
    "end": "1265080"
  },
  {
    "text": "machines so we fake the scroll bar um the scroll bar that you see in the editor is just",
    "start": "1265080",
    "end": "1271200"
  },
  {
    "text": "uh a div overlaid on the actual scroll bar which uh also a note put into it uh",
    "start": "1271200",
    "end": "1278400"
  },
  {
    "text": "which has the actual Haze of the document so it'll be exactly the same scroll bar as the one that the actual",
    "start": "1278400",
    "end": "1283559"
  },
  {
    "text": "scrollable div has but if you scroll it you're not actually causing in the scrollable diff to move so this gives us",
    "start": "1283559",
    "end": "1290520"
  },
  {
    "text": "time uh when the scroll event fires to First redraw and then update the scroll",
    "start": "1290520",
    "end": "1295760"
  },
  {
    "text": "top position of uh of our scrollable div as you see once you start lying to",
    "start": "1295760",
    "end": "1301679"
  },
  {
    "text": "the user you often need more lies and more lies to uh cover them up uh and",
    "start": "1301679",
    "end": "1307400"
  },
  {
    "text": "recently uh OS Mach OS 10 uh Mountain line came out which has a very nice",
    "start": "1307400",
    "end": "1313480"
  },
  {
    "text": "Innovation um transparent scroll bars so now the trick of overlaying the real",
    "start": "1313480",
    "end": "1318960"
  },
  {
    "text": "scroll bar with a fake scroll bar is obviously it's showing you see both of",
    "start": "1318960",
    "end": "1324559"
  },
  {
    "text": "these scroll bars and are slightly out of think and it's it looks horrible so enter another hack um the actual",
    "start": "1324559",
    "end": "1331799"
  },
  {
    "text": "scrollable div which has this this scroll board that we want to hide is made a bit bigger than the actual editor",
    "start": "1331799",
    "end": "1337919"
  },
  {
    "text": "the editor's wrapper is given overflow hidden so you don't actually see the stuff that sticks",
    "start": "1337919",
    "end": "1344320"
  },
  {
    "text": "out uh that makes the scroll bar that the one that you see in Gray here",
    "start": "1344320",
    "end": "1350039"
  },
  {
    "text": "completely invisible and uh everything works happily and fine until the next bug is found and I have to come up with",
    "start": "1350039",
    "end": "1357000"
  },
  {
    "text": "an even more complicated",
    "start": "1357000",
    "end": "1360120"
  },
  {
    "text": "model uh as I mentioned big files are important uh uh Miguel actually",
    "start": "1362600",
    "end": "1368039"
  },
  {
    "start": "1363000",
    "end": "1595000"
  },
  {
    "text": "mentioned in his talk uh that the Chrome Chrome's internal editor has uh problems with big files it just gets slow and uh",
    "start": "1368039",
    "end": "1376400"
  },
  {
    "text": "unresponsive uh there's actually uh an experiment under way to integrate code",
    "start": "1376400",
    "end": "1381720"
  },
  {
    "text": "mirror in Chrome instead of this built-in editor for this very reason that it's scales better",
    "start": "1381720",
    "end": "1389000"
  },
  {
    "text": "um one obvious problem is of course representation of your documents you can't really cheat there you need to put",
    "start": "1389000",
    "end": "1395640"
  },
  {
    "text": "the whole document in memory if you want yeah at least I don't want to deal with any other model where you're getting",
    "start": "1395640",
    "end": "1402200"
  },
  {
    "text": "your document from the server as the user Scrolls you could do it but that's not uh what Cod miror do uh but",
    "start": "1402200",
    "end": "1409679"
  },
  {
    "text": "fortunately modern JavaScript engines are very efficient in the amount of overhead they put on on objects and",
    "start": "1409679",
    "end": "1417120"
  },
  {
    "text": "strings and even if you have a million line document it will be a few megabytes of string data and uh add a few",
    "start": "1417120",
    "end": "1424880"
  },
  {
    "text": "megabytes of rapper data uh to actually put these strings in the data structure that we can access it's still not that",
    "start": "1424880",
    "end": "1432080"
  },
  {
    "text": "bad everyone has 4 GB of RAM and uh if they don't they shouldn't be editing such huge files uh is my current",
    "start": "1432080",
    "end": "1438880"
  },
  {
    "text": "position um an interesting question is how do we",
    "start": "1438880",
    "end": "1443919"
  },
  {
    "text": "represent then this document with all the strings in it the first version of",
    "start": "1443919",
    "end": "1449360"
  },
  {
    "text": "code miror just used a flat array um that worked relatively well uh because",
    "start": "1449360",
    "end": "1456559"
  },
  {
    "text": "uh in the first version of code mirror uh the environment was uh enforced that all lines had exactly the same height so",
    "start": "1456559",
    "end": "1464720"
  },
  {
    "text": "uh one thing that this data structure must support is if you click on the document or uh you do something else",
    "start": "1464720",
    "end": "1471640"
  },
  {
    "text": "where you want to find out which character is under a given XY coordinate on the screen um you have to somehow",
    "start": "1471640",
    "end": "1479120"
  },
  {
    "text": "convert from uh vertical offset to line position",
    "start": "1479120",
    "end": "1484840"
  },
  {
    "text": "if all lines are the same you just divide by the line height and you're there and uh it's easy but then I added",
    "start": "1484840",
    "end": "1491240"
  },
  {
    "text": "features like uh line wrapping and uh",
    "start": "1491240",
    "end": "1496440"
  },
  {
    "text": "code folding which makes some lines vanish and uh I add a feature where you can add inline widgets which was was",
    "start": "1496440",
    "end": "1502960"
  },
  {
    "text": "this what this uh linting feature used before where you just put another domum note in the middle of your editor which",
    "start": "1502960",
    "end": "1509520"
  },
  {
    "text": "also screws up the ha of lines so something more advanced was needed the the operations that this data",
    "start": "1509520",
    "end": "1517200"
  },
  {
    "text": "structure should support is uh converting between three representations of lines uh well three ways to address",
    "start": "1517200",
    "end": "1523840"
  },
  {
    "text": "them first by by line handle which is basically the if you have a line handle that refers to",
    "start": "1523840",
    "end": "1530679"
  },
  {
    "text": "a specific line and someone presses enter before that the line number will will increase but you still have the",
    "start": "1530679",
    "end": "1536159"
  },
  {
    "text": "same text and often you need that the API exposes that where uh for example if you add a widget to some line you later",
    "start": "1536159",
    "end": "1543039"
  },
  {
    "text": "want to be able to remove it so you need to track this line somehow these must be",
    "start": "1543039",
    "end": "1548159"
  },
  {
    "text": "convertible to uh line numbers and line vertical offsets very quickly and the",
    "start": "1548159",
    "end": "1554240"
  },
  {
    "text": "same the other way around go from a line number or a vertical off set to an actual line handle uh internally also",
    "start": "1554240",
    "end": "1561000"
  },
  {
    "text": "the editor does this all the time so this has to be fast another consideration is uh updates have to be",
    "start": "1561000",
    "end": "1567120"
  },
  {
    "text": "fast if someone pastes uh a thousand lines uh there should not be a",
    "start": "1567120",
    "end": "1572399"
  },
  {
    "text": "noticeable pause because all these lines are inserted in some expensive data structure similarly if someone is typing",
    "start": "1572399",
    "end": "1578679"
  },
  {
    "text": "very quickly these tiny micro updates should be uh very very fast uh because",
    "start": "1578679",
    "end": "1585440"
  },
  {
    "text": "an irresponsible code editor which doesn't immediately respond when you do something is is just one recipe for a",
    "start": "1585440",
    "end": "1592799"
  },
  {
    "text": "headache when you're trying to do something um so the the the format that",
    "start": "1592799",
    "end": "1598320"
  },
  {
    "start": "1595000",
    "end": "1977000"
  },
  {
    "text": "uh I came up with was um a tree obviously you want uh to index by some",
    "start": "1598320",
    "end": "1605039"
  },
  {
    "text": "some properties so uh a tree really is an obvious candidate uh but um what I",
    "start": "1605039",
    "end": "1612559"
  },
  {
    "text": "ended up with was not some kind of regular binary tree but a b3e which is a data format used by",
    "start": "1612559",
    "end": "1618360"
  },
  {
    "text": "databases mostly and other on disk file formats which is quite a far cry from a code editor",
    "start": "1618360",
    "end": "1625159"
  },
  {
    "text": "but it fit extremely well uh what it does what a B3 does for those who are",
    "start": "1625159",
    "end": "1630200"
  },
  {
    "text": "not familiar with the DAT structure is that it's it's a tree structure each note has a very high branching Factor so",
    "start": "1630200",
    "end": "1636919"
  },
  {
    "text": "lots of children under one uh parent node and all the data is stored in the leaves which are themselves bigger than",
    "start": "1636919",
    "end": "1643880"
  },
  {
    "text": "a single value they store a whole range of values and they can grow and Shrink",
    "start": "1643880",
    "end": "1649039"
  },
  {
    "text": "like there's a minimum and maximum size for these child nodes so that if you just remove one",
    "start": "1649039",
    "end": "1655679"
  },
  {
    "text": "line you can just remove it from the child where it's in and be done you don't have to rebalance anything unless",
    "start": "1655679",
    "end": "1660880"
  },
  {
    "text": "the child is empty then you kill the child uh and um similarly if you insert the balancing",
    "start": "1660880",
    "end": "1668080"
  },
  {
    "text": "algorithm for B3 is is simple and cheap you just what C does is insert",
    "start": "1668080",
    "end": "1673279"
  },
  {
    "text": "everything in the child node that happens to refer to the current position where it's inserting",
    "start": "1673279",
    "end": "1678640"
  },
  {
    "text": "and then if that overflows this child node it starts splitting it into reasonably sized uh Leaf nodes if",
    "start": "1678640",
    "end": "1686679"
  },
  {
    "text": "there's too many of them in a parent Noe that's split in turn and it propagates upwards uh in a very cheap way which is",
    "start": "1686679",
    "end": "1694960"
  },
  {
    "text": "uh friendly to bulk updates if you have a classic red black tree or something and you want to insert a thousand nodes",
    "start": "1694960",
    "end": "1701720"
  },
  {
    "text": "even if they're all adjacent you have to insert them one by one because the algorithm is defined in single",
    "start": "1701720",
    "end": "1707559"
  },
  {
    "text": "insertions and single deletions uh B3 are much more flexible and and very",
    "start": "1707559",
    "end": "1713039"
  },
  {
    "text": "simple to implement so this was a great fit I guess it's best demonstrated with uh visual demo here you see uh a code",
    "start": "1713039",
    "end": "1720640"
  },
  {
    "text": "mirror instance on the left and a visual representation of the document Tre on the right so here uh this is document",
    "start": "1720640",
    "end": "1728640"
  },
  {
    "text": "with 155 lines uh he of uh 5 a half",
    "start": "1728640",
    "end": "1733679"
  },
  {
    "text": "thousand pixels about it's only the tree has only a",
    "start": "1733679",
    "end": "1739519"
  },
  {
    "text": "depth of one so uh the root note contains a bunch of leaves under each Leaf I",
    "start": "1739519",
    "end": "1745679"
  },
  {
    "text": "display uh the lines that this Leaf contains as as little colored blocks where the color is the hash of the",
    "start": "1745679",
    "end": "1751559"
  },
  {
    "text": "content of the line and the width is the height of the line so I turned on line wrapping in this demo so you can see",
    "start": "1751559",
    "end": "1757840"
  },
  {
    "text": "that some lines are uh wider than others and if I fold something you'll see that",
    "start": "1757840",
    "end": "1763799"
  },
  {
    "text": "some lines become very low and the hate uh",
    "start": "1763799",
    "end": "1770640"
  },
  {
    "text": "changes they propagate to the parents so the root node always has an up to-date view of a the amount of lines in the",
    "start": "1770640",
    "end": "1777159"
  },
  {
    "text": "document and B the total height of those and allows for a quick indexing say we",
    "start": "1777159",
    "end": "1782760"
  },
  {
    "text": "want to find uh line 50 uh no 60 uh we go we start at",
    "start": "1782760",
    "end": "1791679"
  },
  {
    "text": "the root we see that the first Leaf has only a size of 30 so that's not the one we take we track that there's",
    "start": "1791679",
    "end": "1799399"
  },
  {
    "text": "um 30 remaining so the second Leaf has 25 still not the one there's only five",
    "start": "1799399",
    "end": "1805559"
  },
  {
    "text": "remaining we go to the third leaf and that's a match so we just take the fifth line of the third",
    "start": "1805559",
    "end": "1811320"
  },
  {
    "text": "leaf and because these trees are extremely shallow uh because of the high branching Factor these kind of lups are",
    "start": "1811320",
    "end": "1818240"
  },
  {
    "text": "blazingly fast the same is for uh ha because hate and line number both",
    "start": "1818240",
    "end": "1824640"
  },
  {
    "text": "increase in the same order and both monotonically we can use two quantities to index a single tree basically uh",
    "start": "1824640",
    "end": "1833559"
  },
  {
    "text": "which is great and cheap and uh very pleasant uh to work with I'll um try to",
    "start": "1833559",
    "end": "1839440"
  },
  {
    "text": "demonstrate the splitting algorithm the the balancing so here you see little",
    "start": "1839440",
    "end": "1845760"
  },
  {
    "text": "orange nodes appearing because I'm adding empty lines then when the top Leaf hits 50",
    "start": "1845760",
    "end": "1852279"
  },
  {
    "text": "bang it's split in two uh [Music] and half of the it just becomes two",
    "start": "1852279",
    "end": "1860360"
  },
  {
    "text": "leaves uh which is uh a trivial operation uh for the editor to perform",
    "start": "1860360",
    "end": "1866399"
  },
  {
    "text": "if I start to just paste lots of like here you have a very simple uh tree if I",
    "start": "1866399",
    "end": "1872360"
  },
  {
    "text": "start to just paste lots of junk uh here we have a 25,000 line",
    "start": "1872360",
    "end": "1879360"
  },
  {
    "text": "document you can see that is still pretty responsive and um the tree is now four notes five five layers deep",
    "start": "1879360",
    "end": "1888279"
  },
  {
    "text": "so it's still very fast to look something up you have to jump through a few more notes to get somewhere um but",
    "start": "1888279",
    "end": "1894880"
  },
  {
    "text": "not a lot and uh since you're usually editing in a relatively small range of",
    "start": "1894880",
    "end": "1900000"
  },
  {
    "text": "the document the cach will also be used pretty well because these are uh yeah",
    "start": "1900000",
    "end": "1905679"
  },
  {
    "text": "arrays and notes and it's only touching a bunch of them all the time I mean the the memory processor",
    "start": "1905679",
    "end": "1913279"
  },
  {
    "text": "cache and uh deletion is is as I said",
    "start": "1913279",
    "end": "1918480"
  },
  {
    "text": "it's it's actually insertion is is clever enough to always produce a balance tree here but deletion is uh a",
    "start": "1918480",
    "end": "1926399"
  },
  {
    "text": "bit more simple it'll just uh when",
    "start": "1926399",
    "end": "1931120"
  },
  {
    "text": "you oh yeah I need more than one leaf sorry about that",
    "start": "1933200",
    "end": "1938279"
  },
  {
    "text": "um when a leaf becomes no when a leaf becomes empty it",
    "start": "1938279",
    "end": "1944679"
  },
  {
    "text": "just finishes if a branch note falls under a certain size threshold it just merges itself into a single leaf uh",
    "start": "1944679",
    "end": "1952120"
  },
  {
    "text": "so all of this whole implementation is maybe 150 lines of code and uh because",
    "start": "1952120",
    "end": "1958639"
  },
  {
    "text": "code size is also an important consideration in the JavaScript library where the client will always be",
    "start": "1958639",
    "end": "1965200"
  },
  {
    "text": "compiling it and downloading it and uh yeah you don't want to use uh techniques",
    "start": "1965200",
    "end": "1971240"
  },
  {
    "text": "that require megabytes of code because then it's just not usable anymore",
    "start": "1971240",
    "end": "1977559"
  },
  {
    "text": "modes are what are the the word that codar uses for language specializations",
    "start": "1977559",
    "end": "1983600"
  },
  {
    "text": "um these are uh the distribution comes with about 50 modes uh at the moment uh",
    "start": "1983600",
    "end": "1990159"
  },
  {
    "text": "which uh are small JavaScript programs that act like a A tokenizer or",
    "start": "1990159",
    "end": "1996519"
  },
  {
    "text": "optionally even a full parer uh depending on how clever you want your mode to be for a given",
    "start": "1996519",
    "end": "2002519"
  },
  {
    "text": "language um these are the major ones uh they range from 25 lines for the diff",
    "start": "2002519",
    "end": "2010519"
  },
  {
    "text": "mode to 800 lines for the Pearl mode which I didn't write and which I never",
    "start": "2010519",
    "end": "2016200"
  },
  {
    "text": "even dare to look at um and the way they work is uh that the",
    "start": "2016200",
    "end": "2023440"
  },
  {
    "text": "editor uses them to run over the documents one token at a time one syntactic element at a time",
    "start": "2023440",
    "end": "2032039"
  },
  {
    "text": "uh they basically move a stream forward past the synthetic element that they par and then return um a style for this so a",
    "start": "2032039",
    "end": "2040159"
  },
  {
    "text": "style could be string for a quoted string or command for something that looks like a command um to do this uh this is their",
    "start": "2040159",
    "end": "2048720"
  },
  {
    "text": "basic interface uh often you need some kind of memory of what came before uh if",
    "start": "2048720",
    "end": "2055760"
  },
  {
    "text": "you want to assign a style to something for example in a multi-line",
    "start": "2055760",
    "end": "2064440"
  },
  {
    "text": "command you don't know from your current text that you're in a multi-line command but you saw for example SL star and",
    "start": "2064440",
    "end": "2071520"
  },
  {
    "text": "JavaScript earlier so um mod keep is State some modes don't use a state",
    "start": "2071520",
    "end": "2077000"
  },
  {
    "text": "because the language is Trivial enough to Parts without any contextual knowledge most nodes do they Define uh a",
    "start": "2077000",
    "end": "2084200"
  },
  {
    "text": "method uh start state which is uh something that returns a state object for the start of the document and every",
    "start": "2084200",
    "end": "2090919"
  },
  {
    "text": "token they uh every time a token is passed they get access to the state and they may update it for example setting a",
    "start": "2090919",
    "end": "2097400"
  },
  {
    "text": "flag we are now in a command uh and then there's a bunch of optional extra methods that uh these",
    "start": "2097400",
    "end": "2104119"
  },
  {
    "text": "modes can exposed to do more clever things for example uh ination which",
    "start": "2104119",
    "end": "2109680"
  },
  {
    "text": "given a context a state and uh a string which is the line after uh after the",
    "start": "2109680",
    "end": "2116480"
  },
  {
    "text": "current point is being indented uh returns an integer saying uh the amount of space uh to which this should be",
    "start": "2116480",
    "end": "2124119"
  },
  {
    "text": "indented so that uh the context that's already being tracked by the state can",
    "start": "2124119",
    "end": "2129280"
  },
  {
    "text": "be put to good use uh when you're pressing enter and wanting out to",
    "start": "2129280",
    "end": "2134599"
  },
  {
    "text": "indent or selecting a block of text and uh Reinventing",
    "start": "2134599",
    "end": "2139960"
  },
  {
    "text": "it um one problem there is uh [Music]",
    "start": "2142520",
    "end": "2148200"
  },
  {
    "start": "2144000",
    "end": "2347000"
  },
  {
    "text": "you if line 2,51 changes you don't want to reparse",
    "start": "2148200",
    "end": "2155280"
  },
  {
    "text": "the whole document uh because that would be a humongous waste of everyone's CPU",
    "start": "2155280",
    "end": "2160319"
  },
  {
    "text": "Cycles so what Cod maror does it's uh it occasionally copies this state uh",
    "start": "2160319",
    "end": "2165760"
  },
  {
    "text": "they're defined in a way that they are uh copyable and if the mode needs them",
    "start": "2165760",
    "end": "2171119"
  },
  {
    "text": "to be copyable in a specific way it can also Define a method for that and stores these State instances along the document",
    "start": "2171119",
    "end": "2179160"
  },
  {
    "text": "and then uh when for example um well actually when you start uh it only",
    "start": "2179160",
    "end": "2184480"
  },
  {
    "text": "parses the currently visible viewport then as you scroll down it'll par more and more of the document and store uh",
    "start": "2184480",
    "end": "2190839"
  },
  {
    "text": "these State instances everywhere then if you uh sit here for example and uh make",
    "start": "2190839",
    "end": "2197800"
  },
  {
    "text": "a change on the little red line it only parses from the change rep",
    "start": "2197800",
    "end": "2204280"
  },
  {
    "text": "parses from the change down to the end of the current viewport so this is also a very bounded",
    "start": "2204280",
    "end": "2209680"
  },
  {
    "text": "amount of work that needs to be done uh if we assume that the viewport is no more than a few hundred lines most modes",
    "start": "2209680",
    "end": "2215599"
  },
  {
    "text": "can parse about about 50,000 lines per second uh some of the more advanced ones",
    "start": "2215599",
    "end": "2221599"
  },
  {
    "text": "which keep a lot of States they're more like 20,000 lines but still a few milliseconds should be all it takes to",
    "start": "2221599",
    "end": "2228319"
  },
  {
    "text": "uh to reparse uh a screen full of cod and uh make sure everything is consistent again",
    "start": "2228319",
    "end": "2234359"
  },
  {
    "text": "at least everything that you can see uh there's of course also the situation where you scrolled down here and somehow",
    "start": "2234359",
    "end": "2240440"
  },
  {
    "text": "manage to change the third line of the document then it has to par more um",
    "start": "2240440",
    "end": "2247480"
  },
  {
    "text": "in the common case parsing and re highlighting happens synchronously",
    "start": "2247480",
    "end": "2252839"
  },
  {
    "text": "uh if it's can see that there's only a given maximum number of lines between",
    "start": "2252839",
    "end": "2258560"
  },
  {
    "text": "the start of its range and the end it just does it and you don't even notice it because it's uh very very fast there",
    "start": "2258560",
    "end": "2265760"
  },
  {
    "text": "are also situations uh like this or when you scroll down your documents really fast where there's just too much work to",
    "start": "2265760",
    "end": "2272680"
  },
  {
    "text": "be done what it does then is it makes up a state uh uh somewhere in some line it",
    "start": "2272680",
    "end": "2278359"
  },
  {
    "text": "has a urtic where it takes a nearby line that is the least indented which in most languages gives you at least some",
    "start": "2278359",
    "end": "2285880"
  },
  {
    "text": "context uh because the least in end lines usually start the blocks",
    "start": "2285880",
    "end": "2291119"
  },
  {
    "text": "um and uses that madeup state to reh highlight synchronously and then kicks",
    "start": "2291119",
    "end": "2296800"
  },
  {
    "text": "off a pseudo background thread using set timeout to actually do the full uh",
    "start": "2296800",
    "end": "2303040"
  },
  {
    "text": "highlighting work which is like it works for a given time time slice which is",
    "start": "2303040",
    "end": "2308319"
  },
  {
    "text": "configurable if it runs over that it stops and sets a timeout for itself to continue again uh and in that way it",
    "start": "2308319",
    "end": "2314800"
  },
  {
    "text": "doesn't actually hamper responsiveness uh as",
    "start": "2314800",
    "end": "2320240"
  },
  {
    "text": "soon as you're typing it stops background highlighting again so that uh you don't get a noticeable slowdown from",
    "start": "2320240",
    "end": "2326400"
  },
  {
    "text": "this work uh actually that may be Overkill because it's so fast to highlight but",
    "start": "2326400",
    "end": "2332839"
  },
  {
    "text": "uh in older browsers in older version of code miror that was slow enough to justify such an approach and it's",
    "start": "2332839",
    "end": "2339880"
  },
  {
    "text": "probably still uh if you have this 25,000 line document it's still uh",
    "start": "2339880",
    "end": "2346520"
  },
  {
    "start": "2347000",
    "end": "2480000"
  },
  {
    "text": "helps um so what can you do if you have uh an arbitrarily clever real program as",
    "start": "2347119",
    "end": "2353440"
  },
  {
    "text": "a as a highlighter that actually is run over your document you can do actually some",
    "start": "2353440",
    "end": "2360359"
  },
  {
    "text": "analysis more clever than just highlighting uh here we have an XML document uh",
    "start": "2360359",
    "end": "2367000"
  },
  {
    "text": "the parure keeps the current Tech context in its state and when um when it",
    "start": "2367000",
    "end": "2373160"
  },
  {
    "text": "encounters a closing Tech that doesn't match the thing that happened to open uh the current context it can tell you that",
    "start": "2373160",
    "end": "2380040"
  },
  {
    "text": "you probably made a mistake because you have a mitch matching Tech uh and similarly if I that was not",
    "start": "2380040",
    "end": "2389240"
  },
  {
    "text": "what I intended to do if I make a mistake here at the top the highlighting",
    "start": "2389240",
    "end": "2394480"
  },
  {
    "text": "will Cascade down because it reh highlights stuff on change and it'll tell me that uh yes I have a mismatch",
    "start": "2394480",
    "end": "2400960"
  },
  {
    "text": "tag again cooler is the JavaScript mode which knows the difference between local",
    "start": "2400960",
    "end": "2407400"
  },
  {
    "text": "and Global variables um and gives them a different color the definition of a",
    "start": "2407400",
    "end": "2412440"
  },
  {
    "text": "variable is made dark blue here and a use of a local is made light blue uh and",
    "start": "2412440",
    "end": "2418000"
  },
  {
    "text": "you can see for example that console we can even make them bold to make them jump out even more the console is a",
    "start": "2418000",
    "end": "2425040"
  },
  {
    "text": "global whereas the other are uh locals which uh is especially useful if you",
    "start": "2425040",
    "end": "2431359"
  },
  {
    "text": "make some typo somewhere it'll kind of jump out at you that you're not using a",
    "start": "2431359",
    "end": "2436760"
  },
  {
    "text": "variable that's currently in scope and uh since in most code the globals are",
    "start": "2436760",
    "end": "2443400"
  },
  {
    "text": "way outnumbered by the locals this creates a nice visual pattern to warn",
    "start": "2443400",
    "end": "2449319"
  },
  {
    "text": "yourself when you're doing something Global uh",
    "start": "2449319",
    "end": "2455319"
  },
  {
    "text": "the autoc completion actually hooks into this knowledge about local so if I say",
    "start": "2455319",
    "end": "2461440"
  },
  {
    "text": "array here it knows that yes I may want to uh complete to this local whereas if",
    "start": "2461440",
    "end": "2466640"
  },
  {
    "text": "I do the same here I get no completions because the local doesn't exist so it's",
    "start": "2466640",
    "end": "2472480"
  },
  {
    "text": "a very very primitive form of context aware uh",
    "start": "2472480",
    "end": "2477838"
  },
  {
    "text": "completion um this approach to writing modes where they're basically uh a",
    "start": "2478480",
    "end": "2485560"
  },
  {
    "start": "2480000",
    "end": "2554000"
  },
  {
    "text": "function that you the stream makes them extremely composable which uh allows things like this uh mixed mode HTML",
    "start": "2485560",
    "end": "2494359"
  },
  {
    "text": "which is a kind of wrapper multiplexing mode between several other modes it",
    "start": "2494359",
    "end": "2501200"
  },
  {
    "text": "starts using the XML parer well the the HTML configuration of the XML parer and",
    "start": "2501200",
    "end": "2509000"
  },
  {
    "text": "um when it encounters a style tag it switches to the CSS parer so this one",
    "start": "2509000",
    "end": "2516440"
  },
  {
    "text": "here knows uh how that should be uh indented even",
    "start": "2516440",
    "end": "2522280"
  },
  {
    "text": "though it looks like it's inside an HTML document it has the context sensitive uh",
    "start": "2522280",
    "end": "2529400"
  },
  {
    "text": "it gets the context of the CSS file uh and similar if you find script it'll uh",
    "start": "2529400",
    "end": "2535280"
  },
  {
    "text": "switch to the JavaScript mode and at the end of a script tag it'll switch out again uh and that allows these mods to",
    "start": "2535280",
    "end": "2543040"
  },
  {
    "text": "compose uh which is also used for a lot of templating languages and uh PHP and",
    "start": "2543040",
    "end": "2548599"
  },
  {
    "text": "other such",
    "start": "2548599",
    "end": "2551119"
  },
  {
    "text": "things um just uh last week I brought out the",
    "start": "2553839",
    "end": "2560119"
  },
  {
    "start": "2554000",
    "end": "2616000"
  },
  {
    "text": "uh first beta of version three of code mirror which adds some new features like uh bir directional text support like",
    "start": "2560119",
    "end": "2567640"
  },
  {
    "text": "Arabic or Hebrew text which is a huge headache to get right in an editor because you can mix Hebrew and Latin",
    "start": "2567640",
    "end": "2575960"
  },
  {
    "text": "text text in a single line and the hrew text Will kind of flip around uh because it's written right to left so if the",
    "start": "2575960",
    "end": "2583160"
  },
  {
    "text": "cursor is moving through this it has to know a whole bunch about obscure uni code properties of characters to uh",
    "start": "2583160",
    "end": "2590359"
  },
  {
    "text": "properly move uh to the in the correct position Mo move the correct way if you",
    "start": "2590359",
    "end": "2595760"
  },
  {
    "text": "press left uh and similarly selection drawing becomes quite a bit more complicated because it's no",
    "start": "2595760",
    "end": "2602520"
  },
  {
    "text": "longer uh a single uh continuous it may jump all around",
    "start": "2602520",
    "end": "2609000"
  },
  {
    "text": "because the code is basically no longer continuous from left to right",
    "start": "2609000",
    "end": "2615559"
  },
  {
    "text": "um I uh one thing that is on the radar but currently pretty",
    "start": "2615559",
    "end": "2621880"
  },
  {
    "start": "2616000",
    "end": "2731000"
  },
  {
    "text": "sad uh both in COD mirror and Ace is mobile support So",
    "start": "2621880",
    "end": "2628920"
  },
  {
    "text": "mobile violates a whole bunch of assumptions uh that we rely on to do",
    "start": "2628920",
    "end": "2634520"
  },
  {
    "text": "this uh hack the biggest problem is that uh you get these nice selection helper",
    "start": "2634520",
    "end": "2640359"
  },
  {
    "text": "carrot thingies if you select something since it's not a real selection that we're creating we don't get those so a",
    "start": "2640359",
    "end": "2646520"
  },
  {
    "text": "lot of features are locked basically you can't get at them because you don't have this selection interface I haven't",
    "start": "2646520",
    "end": "2652800"
  },
  {
    "text": "looked deeply into how hard it would be to fake this um something will have to be done",
    "start": "2652800",
    "end": "2658640"
  },
  {
    "text": "because Mobile is getting huge and uh we should support it at least relatively decently uh currently",
    "start": "2658640",
    "end": "2665680"
  },
  {
    "text": "the Ed works you can edit you can on most mobile browsers even scroll but",
    "start": "2665680",
    "end": "2671160"
  },
  {
    "text": "that's about the extent of it uh it's it doesn't feel native and it's not a",
    "start": "2671160",
    "end": "2676520"
  },
  {
    "text": "pleasant experience to use um so uh since this is all open",
    "start": "2676520",
    "end": "2681920"
  },
  {
    "text": "source it's slowo I don't have uh I'm not independently wealthy I don't have",
    "start": "2681920",
    "end": "2688040"
  },
  {
    "text": "the time to spend months on this just out of uh my own time uh I had a",
    "start": "2688040",
    "end": "2693119"
  },
  {
    "text": "successful uh crowdfunding round uh two months ago where I spent one month",
    "start": "2693119",
    "end": "2698920"
  },
  {
    "text": "working on a bunch of new features like bir directional text and uh so that that",
    "start": "2698920",
    "end": "2704119"
  },
  {
    "text": "made it into version three who knows I'll probably try something similar again uh this is actually working",
    "start": "2704119",
    "end": "2711040"
  },
  {
    "text": "relatively well for me the the the profitable open source model uh it's I",
    "start": "2711040",
    "end": "2717480"
  },
  {
    "text": "spent the first five years working on this project just completely out of hobbyism but recently uh some big",
    "start": "2717480",
    "end": "2724800"
  },
  {
    "text": "companies are are support for this and it's becoming sustainable for me to uh",
    "start": "2724800",
    "end": "2730640"
  },
  {
    "text": "to maintain this but yeah mobile brings me to uh the other editor I mentioned",
    "start": "2730640",
    "end": "2736079"
  },
  {
    "start": "2731000",
    "end": "2889000"
  },
  {
    "text": "before Orion they use a completely different approach to do this they use uh the",
    "start": "2736079",
    "end": "2742359"
  },
  {
    "text": "browser's uh content editable functionality which allows you to basically create a kind of Rich Text",
    "start": "2742359",
    "end": "2749559"
  },
  {
    "text": "HTML editor inside the browser you can say this element is editable uh and it'll just become",
    "start": "2749559",
    "end": "2757160"
  },
  {
    "text": "editable you can click on it and get a cursor type something and then the browser will do whatever it feels is proper uh to let",
    "start": "2757160",
    "end": "2766119"
  },
  {
    "text": "you edit this this uh this code uh which has the advantage that you're talking",
    "start": "2766119",
    "end": "2772160"
  },
  {
    "text": "about a real editable components so mobile for example becomes a lot more a",
    "start": "2772160",
    "end": "2778000"
  },
  {
    "text": "lot less intimidating uh they claim to work on mobile I haven't actually tried it but I can imagine that they they've",
    "start": "2778000",
    "end": "2784000"
  },
  {
    "text": "gotten that to work because uh they get a lot of the features",
    "start": "2784000",
    "end": "2790240"
  },
  {
    "text": "automatically code mirror one actually the first version of code mirror before the big rewrite uh that I did in 2011",
    "start": "2790240",
    "end": "2798200"
  },
  {
    "text": "worked like this it used content editable um so I have some experience with it and it's it's has its own set of",
    "start": "2798200",
    "end": "2805640"
  },
  {
    "text": "problems as I said the browser can do whatever it wants when you edit this code there's no specification of how content editable",
    "start": "2805640",
    "end": "2813760"
  },
  {
    "text": "or design mode which is a similar feature that some older browsers have instead of it uh how it's supposed to",
    "start": "2813760",
    "end": "2820559"
  },
  {
    "text": "work what it's supposed to do if you press enter for example uh some browsers insert a br break note some of them add",
    "start": "2820559",
    "end": "2828760"
  },
  {
    "text": "paragraph notes uh it's a surprise and um then the editor has to go back in",
    "start": "2828760",
    "end": "2835079"
  },
  {
    "text": "there and somehow renormalize uh what you're looking at to something that's displaying its own view of of your",
    "start": "2835079",
    "end": "2842760"
  },
  {
    "text": "document uh another problem is that selection uh apis in arbitrary uh dump",
    "start": "2842760",
    "end": "2849440"
  },
  {
    "text": "structures are are varying between bar browsers bugy",
    "start": "2849440",
    "end": "2855000"
  },
  {
    "text": "buggy and code Mir one had about 700 lines of selection handling code I'm not",
    "start": "2855000",
    "end": "2860599"
  },
  {
    "text": "anxious to go back to this situation um but yeah as I said it does have advantages one of the main problems with",
    "start": "2860599",
    "end": "2866920"
  },
  {
    "text": "codir one was that it was slow on huge documents because it put everything in the Dom the editable Dom no less which",
    "start": "2866920",
    "end": "2872040"
  },
  {
    "text": "is even slower than normal Dom uh Orion gets around this by using a similar trick where it's only putting the",
    "start": "2872040",
    "end": "2878520"
  },
  {
    "text": "visible part of the document in the actual uh Dom um so I'm very curious how",
    "start": "2878520",
    "end": "2884440"
  },
  {
    "text": "they'll develop further and uh what's going to happen uh",
    "start": "2884440",
    "end": "2889599"
  },
  {
    "text": "there that was my talk uh that's where the project lives my project um yeah and",
    "start": "2889599",
    "end": "2897640"
  },
  {
    "text": "that's me on Twitter I would be very happy to take questions or remarks or uh",
    "start": "2897640",
    "end": "2903559"
  },
  {
    "text": "whatever else you might have to add a VI mode was the question is there a VI mode",
    "start": "2903559",
    "end": "2908680"
  },
  {
    "text": "um this is one of the areas where I've been getting lots of contributions because lots of people apparently want a",
    "start": "2908680",
    "end": "2914599"
  },
  {
    "text": "VI mode and there's there is something that emulates a lot of VI functionality",
    "start": "2914599",
    "end": "2920079"
  },
  {
    "text": "but I can't tell you how good it is to an actual VI user um so I've been uh one of the the",
    "start": "2920079",
    "end": "2927839"
  },
  {
    "text": "the motivations in the rewrite from code mirror 1 to version two was to code",
    "start": "2927839",
    "end": "2933359"
  },
  {
    "text": "mirror 1 was drowning in HEX and it was they're all in interacting and it was getting horrible so uh two takes a",
    "start": "2933359",
    "end": "2939599"
  },
  {
    "text": "conscious effort to keep them to a minimum and isolate them as good as it",
    "start": "2939599",
    "end": "2945079"
  },
  {
    "text": "can um so uh it uses feature detection and wrapping lots of things in in",
    "start": "2945079",
    "end": "2950680"
  },
  {
    "text": "functions as long as that's possible uh and it's constantly looking for ways uh",
    "start": "2950680",
    "end": "2956359"
  },
  {
    "text": "like sometimes the obvious way is buggy in some row shirt the obvious way to do something uh and I've learned to look",
    "start": "2956359",
    "end": "2963119"
  },
  {
    "text": "for another way that's straightforward that actually works cross browser to uh",
    "start": "2963119",
    "end": "2969799"
  },
  {
    "text": "get around writing if Opera then this if IE than this but there is unfortunately",
    "start": "2969799",
    "end": "2976359"
  },
  {
    "text": "still such code it's relatively minor in version two which is how I keep this project sayane",
    "start": "2976359",
    "end": "2983079"
  },
  {
    "text": "because as I said these Hecks tend to interact in unexpected ways but it's there and it's I just deal with it I",
    "start": "2983079",
    "end": "2989599"
  },
  {
    "text": "keep a lot in my head uh unfortunately that's yeah part of the development process have test",
    "start": "2989599",
    "end": "2996400"
  },
  {
    "text": "uh it's been growing like uh I have only recently learned to like no I like",
    "start": "2996400",
    "end": "3003720"
  },
  {
    "text": "testing I have used testing a lot for a long time but only in things that were test friendly a UI component is about",
    "start": "3003720",
    "end": "3010000"
  },
  {
    "text": "the most test unfriendly thing you can think of especially if a lot of the problematic behavior is related to",
    "start": "3010000",
    "end": "3015799"
  },
  {
    "text": "browser bugs that you only see when you run it in that specific browser we currently have uh a relatively big test",
    "start": "3015799",
    "end": "3022720"
  },
  {
    "text": "suit which is run in um phantomjs which is a fake web kit under note uh on every",
    "start": "3022720",
    "end": "3030160"
  },
  {
    "text": "commit and I have uh this test suit is is runnable if you just go to a web page",
    "start": "3030160",
    "end": "3035640"
  },
  {
    "text": "and I run it before every release in every supported browser um but it's not perfect some",
    "start": "3035640",
    "end": "3042680"
  },
  {
    "text": "things I just haven't found a way to test them mechanically like without uh inputting my own events",
    "start": "3042680",
    "end": "3049000"
  },
  {
    "text": "there's this uh framework for this",
    "start": "3049000",
    "end": "3054040"
  },
  {
    "text": "called I forgot there is a framework that let you spawn a browser process uh",
    "start": "3054040",
    "end": "3059440"
  },
  {
    "text": "and then communicates uh to an HP socket to fire events on that browser",
    "start": "3059440",
    "end": "3064480"
  },
  {
    "text": "process uh seli exactly selenium um that",
    "start": "3064480",
    "end": "3070599"
  },
  {
    "text": "kind of work but I still couldn't fire all the events that I really wanted to fire uh like uh input me method editing",
    "start": "3070599",
    "end": "3078440"
  },
  {
    "text": "text is one very flaky very fragile area uh that's not supported by selenium and",
    "start": "3078440",
    "end": "3084760"
  },
  {
    "text": "it's quite a pain to set up so I it's not actually there is a stub that does a",
    "start": "3084760",
    "end": "3089920"
  },
  {
    "text": "few tests through selenium but I'm not developing that because it's just it's very painful then thank you for listening",
    "start": "3089920",
    "end": "3097480"
  },
  {
    "text": "have a good [Applause]",
    "start": "3097480",
    "end": "3105389"
  },
  {
    "text": "day",
    "start": "3109760",
    "end": "3112760"
  }
]