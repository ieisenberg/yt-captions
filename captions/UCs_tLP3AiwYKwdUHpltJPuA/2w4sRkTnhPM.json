[
  {
    "start": "0",
    "end": "8000"
  },
  {
    "text": "so I'm going to talk to you guys about web components and uh a little bit about es6 the next version of JavaScript and",
    "start": "40",
    "end": "6960"
  },
  {
    "text": "uh to do that I'm going to go a little bit backwards in time to start uh and go through how we arrived at web components",
    "start": "6960",
    "end": "13679"
  },
  {
    "start": "8000",
    "end": "42000"
  },
  {
    "text": "uh then I'm going to talk about web components themselves and uh then I'm going to go through a little bit of the",
    "start": "13679",
    "end": "19000"
  },
  {
    "text": "es6 goodness that we're starting to see Pop Up in JavaScript talks just get sense you guys building apps at",
    "start": "19000",
    "end": "25439"
  },
  {
    "text": "JavaScript today and how many people here are using like Babel or Trace to transpile from",
    "start": "25439",
    "end": "32160"
  },
  {
    "text": "es6 okay like three people and I'm one of them that's cool uh es6 is fun so",
    "start": "32160",
    "end": "39440"
  },
  {
    "text": "we'll check it out um I'm going to go through the the sort of the beginning of time here and we'll look at some of the",
    "start": "39440",
    "end": "44559"
  },
  {
    "start": "42000",
    "end": "55000"
  },
  {
    "text": "early JavaScript Frameworks I'm going to put scare quotes around that because I don't really think these things count as",
    "start": "44559",
    "end": "50879"
  },
  {
    "text": "Frameworks they're more like libraries and the big reason that these things kind of came about is because the",
    "start": "50879",
    "end": "57480"
  },
  {
    "start": "55000",
    "end": "147000"
  },
  {
    "text": "browser used to be uh really bad the various browsers um had a lot of inconsistencies especially in the Dom",
    "start": "57480",
    "end": "64119"
  },
  {
    "text": "this is one of the predicates for HTML 5 uh where they standardized all the bugs in the Dom so that everyone had the same",
    "start": "64119",
    "end": "71119"
  },
  {
    "text": "bugs and I'm not kidding that's exactly what happened so around 2006 uh this",
    "start": "71119",
    "end": "76880"
  },
  {
    "text": "Library called prototype came out it had no docs whatsoever uh and everybody kind of just got up to speed with it by",
    "start": "76880",
    "end": "83119"
  },
  {
    "text": "reading the source code and it mostly painted over those differences in Dom implementations across the browsers um",
    "start": "83119",
    "end": "89280"
  },
  {
    "text": "it also kind of made life a little bit easier uh for working with remoting and the term Ajax got coined it used to be",
    "start": "89280",
    "end": "95840"
  },
  {
    "text": "all caps Ajax but that became uncool to do um so I'm not doing anymore if we",
    "start": "95840",
    "end": "101320"
  },
  {
    "text": "look at prototypes API you can see that it's it's pretty pretty simple stuff uh",
    "start": "101320",
    "end": "106680"
  },
  {
    "text": "we grab a div element out of the Dom or we create a div element in the Dom and then we extend it um and this little Act",
    "start": "106680",
    "end": "114479"
  },
  {
    "text": "of extending the div element actually made prototype really unpopular you were you were messing with with built-in",
    "start": "114479",
    "end": "120560"
  },
  {
    "text": "objects and you could change the behavior or the expected behavior of a built-in uh this is the venerable ax",
    "start": "120560",
    "end": "127240"
  },
  {
    "text": "that kicked off uh the browser uh becoming an application thing um you can",
    "start": "127240",
    "end": "132440"
  },
  {
    "text": "see it's pretty verbose and it's interesting that we've sort of moved away from this but the asynchronous",
    "start": "132440",
    "end": "137560"
  },
  {
    "text": "nature where we pass a success and a failure call back is is pretty commonly seen",
    "start": "137560",
    "end": "142959"
  },
  {
    "text": "today um prototype was really good at working with the Dom it painted over the differences in adding and removing",
    "start": "142959",
    "end": "148800"
  },
  {
    "start": "147000",
    "end": "259000"
  },
  {
    "text": "elements it painted over the differences in Eventing um but it didn't do anything for effects then Thomas fuks who's one",
    "start": "148800",
    "end": "154800"
  },
  {
    "text": "of my favorite JavaScript developers in the world who writes amazing code it's totally worth reading even today uh",
    "start": "154800",
    "end": "160440"
  },
  {
    "text": "created an extremely hard to spell and find library called scriptaculous and it",
    "start": "160440",
    "end": "166120"
  },
  {
    "text": "was back when it was like popular to do you know us so it was like scripta Doc",
    "start": "166120",
    "end": "171400"
  },
  {
    "text": "or I can't remember it it doesn't matter because you don't need it today um effectively it would use timeouts and",
    "start": "171400",
    "end": "177000"
  },
  {
    "text": "absolute positioning to move elements and you'd have beautiful code like this where we would inline onclick handlers",
    "start": "177000",
    "end": "183640"
  },
  {
    "text": "uh to move stuff around which interestingly Rea is bringing back um",
    "start": "183640",
    "end": "190080"
  },
  {
    "text": "then the big boy came along jQuery and this sort of changed the entire world um jquery's big win I think uh truly was",
    "start": "190080",
    "end": "197080"
  },
  {
    "text": "that it it gave uh developers a really intuitive API to work with it was very simple for anybody to pick it up and",
    "start": "197080",
    "end": "203120"
  },
  {
    "text": "start running with it and building applications in the browser that um appeared to be fairly um respons",
    "start": "203120",
    "end": "210000"
  },
  {
    "text": "responsive uh it definitely dominated I think it's still in over 90% of the top 100 websites something like that um and",
    "start": "210000",
    "end": "216920"
  },
  {
    "text": "it's around even today there's sometimes that you'll see on the internet about once a year people say you don't need",
    "start": "216920",
    "end": "222360"
  },
  {
    "text": "jQuery anymore and I think they're probably right but jQuery does paint over a lot of browser differences",
    "start": "222360",
    "end": "228200"
  },
  {
    "text": "especially if you have to go back in time to browsers like IE8 so it's still a big deal one of the more interesting",
    "start": "228200",
    "end": "234439"
  },
  {
    "text": "things about jQuery is it had very early on built in an extension model uh where it would map the Prototype of the jQuery",
    "start": "234439",
    "end": "241519"
  },
  {
    "text": "object to a name function and so instead of walking over the Prototype you were walking over this sort of built-in thing",
    "start": "241519",
    "end": "247640"
  },
  {
    "text": "called function this huge ecosystem of plugins erupted and even today and I",
    "start": "247640",
    "end": "253159"
  },
  {
    "text": "think this there's a lesson in there for developers about building uh pluggable uh libraries and so you've probably all",
    "start": "253159",
    "end": "259600"
  },
  {
    "start": "259000",
    "end": "296000"
  },
  {
    "text": "seen code like this you know this is classic jQuery except for usually it turns into this huge pyramid of code",
    "start": "259600",
    "end": "266440"
  },
  {
    "text": "over time um and jqu kind of took a lot of the ideas that we saw in libraries",
    "start": "266440",
    "end": "271680"
  },
  {
    "text": "like prototype uh for doing things like Ajax but made things a little nicer a little cleaner",
    "start": "271680",
    "end": "277759"
  },
  {
    "text": "syntax um jQuery also baked in animation so you didn't need to load a separate library to do that and that was you know",
    "start": "277759",
    "end": "284160"
  },
  {
    "text": "probably something people wanted um and then around the same time another Library came around called M tools",
    "start": "284160",
    "end": "290680"
  },
  {
    "text": "anybody here build anything with M tools few people cool yeah mood tools was pretty sweet actually I I liked it a lot",
    "start": "290680",
    "end": "297360"
  },
  {
    "start": "296000",
    "end": "305000"
  },
  {
    "text": "um very similar API to the other guys uh very similar kind of semantics uh where you're passing callbacks into like these",
    "start": "297360",
    "end": "303919"
  },
  {
    "text": "Constructor objects uh Mo tools was the first one that kind of introduce a class system and a class-based hierarchy uh",
    "start": "303919",
    "end": "311160"
  },
  {
    "start": "305000",
    "end": "318000"
  },
  {
    "text": "the code for this was I felt really beautiful and created kind of nice components um but the internet voted and",
    "start": "311160",
    "end": "317680"
  },
  {
    "text": "it decided that it liked jQuery better I'm going to mention yui because yui actually was really popular for a flash",
    "start": "317680",
    "end": "324039"
  },
  {
    "start": "318000",
    "end": "362000"
  },
  {
    "text": "in the pan and people were building a lot of stuff with it yui a couple years ago was completely deprecating and",
    "start": "324039",
    "end": "329800"
  },
  {
    "text": "walked away uh from the code the code still there it's just not being maintained in any way and I think this",
    "start": "329800",
    "end": "335199"
  },
  {
    "text": "is an interesting thing to note for yourself from a risk profile when you're evaluating Technologies if there's a",
    "start": "335199",
    "end": "340520"
  },
  {
    "text": "single vendor behind that technology it might have some risk in the future when the corporation decides it doesn't want",
    "start": "340520",
    "end": "345960"
  },
  {
    "text": "to fund it anymore um Yi was also pretty verbose and Java like and so they later",
    "start": "345960",
    "end": "351919"
  },
  {
    "text": "changed things to look a bit more like jQuery uh Douglas crockford was a big part of how this Library kind of became",
    "start": "351919",
    "end": "358600"
  },
  {
    "text": "what it was uh so it was very idiomatic JavaScript there's another library and",
    "start": "358600",
    "end": "364039"
  },
  {
    "start": "362000",
    "end": "450000"
  },
  {
    "text": "it's still kicking today and it's called dojo and it does all this stuff too in fact Dojo likes to brag how it already",
    "start": "364039",
    "end": "370000"
  },
  {
    "text": "did it before everybody else um and it really it really quite literally did Dojo has a big Community behind it has a",
    "start": "370000",
    "end": "376759"
  },
  {
    "text": "lot of people that work on it uh there's a ton of Enterprise applications that are built with it still to this day so",
    "start": "376759",
    "end": "381960"
  },
  {
    "text": "it Still Remains pretty important a lot of the concepts that we're now seeing kind of roll into the broader",
    "start": "381960",
    "end": "387120"
  },
  {
    "text": "mainstreamer were probably first protyp in Dojo including things like uh asynchronous module design like we see",
    "start": "387120",
    "end": "394240"
  },
  {
    "text": "with this require function problem is all these things kind of did the same thing and it also",
    "start": "394240",
    "end": "399680"
  },
  {
    "text": "had all the same problems they they they they built on top of the fact that the browsers kind of sucked and now the",
    "start": "399680",
    "end": "406240"
  },
  {
    "text": "browsers don't really suck so maybe we don't need them um animation with CSS and being declarative is kind of like a",
    "start": "406240",
    "end": "412479"
  },
  {
    "text": "thing you want to do now you don't want to use set timeouts this mobile thing appears to be happening and so we want",
    "start": "412479",
    "end": "417680"
  },
  {
    "text": "to have the smallest footprint of code possible so that you get the best execution time",
    "start": "417680",
    "end": "423120"
  },
  {
    "text": "um all of these things had a concept of a module or closure or a module pattern but none of them did it the same way and",
    "start": "423120",
    "end": "430039"
  },
  {
    "text": "so they all had their own Island ecosystems where they couldn't interoperate everybody was recreating",
    "start": "430039",
    "end": "435160"
  },
  {
    "text": "the data grid like a million times um and this actually still persists to this very day um I guess one of the other",
    "start": "435160",
    "end": "442800"
  },
  {
    "text": "things that kind of became tough was uh iterative apply and chaining like we see in jQuery can be really tough to test uh",
    "start": "442800",
    "end": "449639"
  },
  {
    "text": "the big problem really is that these things were really quite bloated depending on what you were doing and had a lot of tightly coupled code it would",
    "start": "449639",
    "end": "456520"
  },
  {
    "start": "450000",
    "end": "507000"
  },
  {
    "text": "be at least two to 300 kilobytes before you can get Hello World on the screen and that's that's a lot of that's a lot",
    "start": "456520",
    "end": "462000"
  },
  {
    "text": "of code to do not much um another issue is that most of these things poke at the Dom and every time you interact with the",
    "start": "462000",
    "end": "468240"
  },
  {
    "text": "Dom you force a repaint and this can be quite slow somewhere around after the iPhone",
    "start": "468240",
    "end": "474199"
  },
  {
    "text": "was released we realized that we would probably need to be building more performant applications um now that",
    "start": "474199",
    "end": "479599"
  },
  {
    "text": "people were accessing these apps with low powered phones and so micro libraries kind of came around very",
    "start": "479599",
    "end": "485560"
  },
  {
    "text": "briefly uh I worked on one called xui back in 2008 I like to think that maybe",
    "start": "485560",
    "end": "491560"
  },
  {
    "text": "we seated the term microlibrary but I doubt we did we just said microtiny um",
    "start": "491560",
    "end": "497039"
  },
  {
    "text": "and xui had like a very jQuery like syntax except for it targeted only mobile browsers and I think we got it",
    "start": "497039",
    "end": "503120"
  },
  {
    "text": "down to something ridiculous like 4 or 5K um it was really tiny lawn chair was",
    "start": "503120",
    "end": "508759"
  },
  {
    "start": "507000",
    "end": "553000"
  },
  {
    "text": "another project I work on it had the concept of models um it's actually still kind of trucking today people do use it",
    "start": "508759",
    "end": "515279"
  },
  {
    "text": "very simple idea where you would just get you know data and you would set it using either local storage or websql or",
    "start": "515279",
    "end": "522880"
  },
  {
    "text": "other things that can store stuff on the uh in the browser like window. name",
    "start": "522880",
    "end": "528600"
  },
  {
    "text": "Thomas fuks that guy from scriptaculous Saw xui and he thought that's pretty sweet I'm going to do the exact same",
    "start": "528600",
    "end": "534519"
  },
  {
    "text": "thing but I'm going to clone the jQuery UI or API and so he took the the spirit",
    "start": "534519",
    "end": "539680"
  },
  {
    "text": "of xui but he applied it directly to jquery's API creating kind of a work alike um zepto is really nice and it's",
    "start": "539680",
    "end": "546440"
  },
  {
    "text": "actually still really popular in a lot of mobile applications and I totally recommend reading the source code um if",
    "start": "546440",
    "end": "552399"
  },
  {
    "text": "you're into doing that sort of thing this code would look just the same as jQuery but there'd be far less code for",
    "start": "552399",
    "end": "558480"
  },
  {
    "start": "553000",
    "end": "583000"
  },
  {
    "text": "it it's also worth noting today jQuery is really wellmaintained it's really battle tested and they have slimmed it",
    "start": "558480",
    "end": "565399"
  },
  {
    "text": "down substantially so maybe you don't need it maybe you do who knows either way this is just redoing the same",
    "start": "565399",
    "end": "571440"
  },
  {
    "text": "thing over and over again and we maybe as collective Consciousness realize that",
    "start": "571440",
    "end": "577240"
  },
  {
    "text": "if we keep doing the same thing over and over again we're probably going to keep having the same problems over and over",
    "start": "577240",
    "end": "582480"
  },
  {
    "text": "again and then the next generation of Frameworks came along and so I'm going to quickly run through these guys",
    "start": "582480",
    "end": "589839"
  },
  {
    "start": "589000",
    "end": "665000"
  },
  {
    "text": "backbone was easily the first of its kind and I think it it disrupted things people realize that hey maybe we should",
    "start": "589839",
    "end": "595560"
  },
  {
    "text": "separate our concerns and start treating our clients a lot more like we' architect our servers we'd separate our",
    "start": "595560",
    "end": "600920"
  },
  {
    "text": "concerns around views and models and even routing backbone is really well written code um and it's really tiny and",
    "start": "600920",
    "end": "608440"
  },
  {
    "text": "as a JavaScript engineer uh it's a joy to read so even I know I recommend doing",
    "start": "608440",
    "end": "613480"
  },
  {
    "text": "this all the time but you learn so much by reading other people's code and I don't know if Jeremy Ash canis was doing meth or what it was but he wrote a lot",
    "start": "613480",
    "end": "620040"
  },
  {
    "text": "of code in a SM small period of time and backbone was one of those things also coffee script yes I did just sneak in a",
    "start": "620040",
    "end": "626440"
  },
  {
    "text": "joke about him doing meth um so so backbone grew quite large uh I think",
    "start": "626440",
    "end": "631680"
  },
  {
    "text": "today A lot of people are sort of moving over to this thing called Ampersand oh it should say JS but whatever and um",
    "start": "631680",
    "end": "639200"
  },
  {
    "text": "this is the the thing I want you to like internalize or check out so you'll notice here we got a view and a view",
    "start": "639200",
    "end": "644760"
  },
  {
    "text": "really is just a tag ultimately um and that tag you know we're going to give it some class names and we're going to bind",
    "start": "644760",
    "end": "650720"
  },
  {
    "text": "some events to it um if I had an open method on this thing when I clicked on the icon thing it would fire that event",
    "start": "650720",
    "end": "658399"
  },
  {
    "text": "you get the idea idea this is really similar to how web components look today",
    "start": "658399",
    "end": "663839"
  },
  {
    "text": "um from 100t Google uh came up with this thing called",
    "start": "663839",
    "end": "670079"
  },
  {
    "start": "665000",
    "end": "779000"
  },
  {
    "text": "angular is anyone building angular apps here yeah that doesn't surprise me quite a few of you are anybody here heard of",
    "start": "670079",
    "end": "677680"
  },
  {
    "text": "ionic yeah ionic is totally sweet I might be biased so angular took a lot of",
    "start": "677680",
    "end": "686079"
  },
  {
    "text": "the nomenclature of serers side Enterprise development and then reassigned it into the client in",
    "start": "686079",
    "end": "691760"
  },
  {
    "text": "different ways um it's sort of weird it has these these things that it calls like controllers or models or whatever",
    "start": "691760",
    "end": "698040"
  },
  {
    "text": "and it does not quite what you think it will um you can't build an angular app",
    "start": "698040",
    "end": "703920"
  },
  {
    "text": "um without buying into this whole set of nomenclature and ways of working you're not going to just like take part of your",
    "start": "703920",
    "end": "709440"
  },
  {
    "text": "app and make it angular if you're going angular you're going all the way on angular uh one nice piece about angular",
    "start": "709440",
    "end": "714880"
  },
  {
    "text": "or one of my favorite pieces is karma testr Runner fantastic software really good for doing development uh it's like",
    "start": "714880",
    "end": "720680"
  },
  {
    "text": "this live reload thing that can test in multiple browsers uh simultaneously um ionic I mentioned it's",
    "start": "720680",
    "end": "727480"
  },
  {
    "text": "rad uh it's a mobile library for building uh Native apps using HTML CSS and JavaScript based on Cordova uh they",
    "start": "727480",
    "end": "735000"
  },
  {
    "text": "basically took Cordova and then they plopped a UI on top with with angular and it's it's quite",
    "start": "735000",
    "end": "741160"
  },
  {
    "text": "good the big deal about angular for me though is angular directives and if you",
    "start": "741160",
    "end": "746240"
  },
  {
    "text": "don't know angular a directive is a custom tag of course CU that makes sense um not really but whatever so this hello",
    "start": "746240",
    "end": "754120"
  },
  {
    "text": "person tag um is defined in this directive right here in order to create",
    "start": "754120",
    "end": "759360"
  },
  {
    "text": "a directive though I have to have a module and in order to actually make it bind to some data I have to have a",
    "start": "759360",
    "end": "765240"
  },
  {
    "text": "controller so that's that coupling I was talking about where you get this sort of like nested dolls situation going on",
    "start": "765240",
    "end": "771440"
  },
  {
    "text": "where you're separating your concerns maybe a little too much um but regardless custom tags interesting",
    "start": "771440",
    "end": "779600"
  },
  {
    "start": "779000",
    "end": "943000"
  },
  {
    "text": "uh Ember is another one is anybody here building Ember apps okay a few of you",
    "start": "779600",
    "end": "784760"
  },
  {
    "text": "are cool it's it's making Headway um Ember is strongly inspired by rails um",
    "start": "784760",
    "end": "792320"
  },
  {
    "text": "whether this is good or bad I don't know but if you're used to using rails um then you're going to be very comfortable",
    "start": "792320",
    "end": "797519"
  },
  {
    "text": "in the Ember ecosystem super well-written docs a super great governance and onboarding for the",
    "start": "797519",
    "end": "803440"
  },
  {
    "text": "community I really really respect how they handle that um it's also kind of big and it's kind of slow it came from a",
    "start": "803440",
    "end": "810120"
  },
  {
    "text": "thing called Sprout core and there's a lot of Legacy code in it it's really not appropriate for mobile uh part of my job",
    "start": "810120",
    "end": "815440"
  },
  {
    "text": "is to test these things on phones and Ember is not quite there yet but it's getting better all the time it's got a",
    "start": "815440",
    "end": "820480"
  },
  {
    "text": "new rendering engine called glimmer and they're doing a thing called Fast boot where um you can pre-render your your",
    "start": "820480",
    "end": "827160"
  },
  {
    "text": "app to a string and load it load it faster interestingly it also has",
    "start": "827160",
    "end": "832279"
  },
  {
    "text": "components and so you're starting to see a theme Here Ember components are actually script tags embedded in your",
    "start": "832279",
    "end": "838320"
  },
  {
    "text": "application I'm not really sure how that Maps back in their docks to web components but this is what what an",
    "start": "838320",
    "end": "843839"
  },
  {
    "text": "ember component would be very much like angular um you end up so this is my my",
    "start": "843839",
    "end": "849000"
  },
  {
    "text": "component I guess or this is me invoking my component this is my component definition and this is me creating an",
    "start": "849000",
    "end": "854399"
  },
  {
    "text": "app U that loads it and so that's kind of like angular where you get this little bit of coupling between the different layers but pretty cool uh",
    "start": "854399",
    "end": "862120"
  },
  {
    "text": "works well anybody here building react applications oh like two of us three",
    "start": "862120",
    "end": "869240"
  },
  {
    "text": "right on okay so react um has been getting a lot of attention because it",
    "start": "869240",
    "end": "875519"
  },
  {
    "text": "instead of copying service side development paradigms and just like wholesale bringing them on to the client",
    "start": "875519",
    "end": "881399"
  },
  {
    "text": "the Facebook team decided to like actually address real problems that they were having and the big real problem they were having is that the Dom was",
    "start": "881399",
    "end": "887639"
  },
  {
    "text": "super slow um it came up with a whole bunch of new Concepts that the other Frameworks are quickly copying now key",
    "start": "887639",
    "end": "894759"
  },
  {
    "text": "one is the virtual Dom um and so instead of touching the Dom and playing with it and modifying it all the time it'll",
    "start": "894759",
    "end": "900639"
  },
  {
    "text": "batch requests using request animation frame and it'll do diffing dynamically for you so you only update what you need",
    "start": "900639",
    "end": "906639"
  },
  {
    "text": "when you want to do it um there's two promising early mobile libraries Touchstone JS and reapp and so if you're",
    "start": "906639",
    "end": "913360"
  },
  {
    "text": "looking for like an equivalent ionic in the react World those are worth checking out I've seen apps built with it that",
    "start": "913360",
    "end": "921360"
  },
  {
    "text": "you seriously no can't tell the difference between a native application um really well done one of the key",
    "start": "921360",
    "end": "927120"
  },
  {
    "text": "things about React 2 is that it's it's a functional programming style and so it explicitly avoids mutating state",
    "start": "927120",
    "end": "933079"
  },
  {
    "text": "which makes it faster but it also makes it a lot easier to reason about um and again custom elements so one thing that",
    "start": "933079",
    "end": "941160"
  },
  {
    "text": "people hate hate hate is that in react you you define jsx files which allow you to inline uh HTML and not a lot of",
    "start": "941160",
    "end": "949120"
  },
  {
    "start": "943000",
    "end": "983000"
  },
  {
    "text": "people like this it's very similar to uh an early proposal in JavaScript called",
    "start": "949120",
    "end": "954399"
  },
  {
    "text": "e4x you would be able to embed XML in your JavaScript not a very popular thing um",
    "start": "954399",
    "end": "962000"
  },
  {
    "text": "but you end up with these neat components and this neat component life cycle that you can just render into a page onto any element that you want to",
    "start": "962000",
    "end": "969600"
  },
  {
    "text": "uh probably the simplest of them all but it also doesn't include a lot of the plumbing and so if you need to like",
    "start": "969600",
    "end": "974680"
  },
  {
    "text": "composer application have things like routes and models and the rest of it that's up for you to solve uh the",
    "start": "974680",
    "end": "980000"
  },
  {
    "text": "Facebook team has a concept around this called flux and if you want to talk about it later we can I've got I have",
    "start": "980000",
    "end": "986160"
  },
  {
    "start": "983000",
    "end": "1058000"
  },
  {
    "text": "opinions um polymers from Google there's a great Eric Schmidt quote from a long",
    "start": "986160",
    "end": "991639"
  },
  {
    "text": "time ago where they were like wait a second you got Chrome OS and you got Android what's going on why do you guys have two operating systems and Eric",
    "start": "991639",
    "end": "997959"
  },
  {
    "text": "Schmidt said well a lot of companies would like to have one nice operating system very humble Eric Schmidt anyways",
    "start": "997959",
    "end": "1004199"
  },
  {
    "text": "I guess they feel the same way about JavaScript so they've got two Frameworks uh polymer is a forward-looking",
    "start": "1004199",
    "end": "1009399"
  },
  {
    "text": "framework it's ideas to battle test um in in kind of like progress specs around",
    "start": "1009399",
    "end": "1016160"
  },
  {
    "text": "web components um they're not really really they're saying now that you can use this and people do use it um in in",
    "start": "1016160",
    "end": "1022720"
  },
  {
    "text": "Anger for production applications the current Google IO app is actually uh a polymer application it's kind of",
    "start": "1022720",
    "end": "1030038"
  },
  {
    "text": "big and it's kind of slow legit once it loads it's good polymer really took this",
    "start": "1030039",
    "end": "1036280"
  },
  {
    "text": "custom tags thing all the way too they it's custom tags all the way down so like everything you do is a custom tag",
    "start": "1036280",
    "end": "1043480"
  },
  {
    "text": "um maybe this is good maybe this is bad I don't know and so this is a custom element here called hello world element",
    "start": "1043480",
    "end": "1049840"
  },
  {
    "text": "um and I'm defining it uh literally almost entirely declaratively which is kind of cool kind of",
    "start": "1049840",
    "end": "1056400"
  },
  {
    "text": "interesting um so this is sort of the state-ofthe-art these are the the various JavaScript Frameworks that are probably the most popular or getting the",
    "start": "1056400",
    "end": "1062480"
  },
  {
    "start": "1058000",
    "end": "1110000"
  },
  {
    "text": "most attention um and uh there's still issues so the module systems generally are",
    "start": "1062480",
    "end": "1069520"
  },
  {
    "text": "incompatible is not totally the case uh transpilers help us get through this but it's it's either commonjs or AMD uh or",
    "start": "1069520",
    "end": "1077200"
  },
  {
    "text": "good luck with that and um they all have kind of different concepts around what networking is going to look like or how",
    "start": "1077200",
    "end": "1083440"
  },
  {
    "text": "routing is done or how it does data synchronization but one thing that these guys all have in common is a custom",
    "start": "1083440",
    "end": "1088720"
  },
  {
    "text": "elements implementation so this is the part where I'm going to go through web components",
    "start": "1088720",
    "end": "1095120"
  },
  {
    "text": "themselves Douglas crockford is really famous for having a book called JavaScript the good parts and everybody likes to joke and put it beside the the",
    "start": "1095120",
    "end": "1101679"
  },
  {
    "text": "JavaScript definitive guide JavaScript definitive guides like this big and web you know JavaScript the good parts is",
    "start": "1101679",
    "end": "1107120"
  },
  {
    "text": "like that big and you can read it in like 10 minutes um web components I think is kind of similar so web",
    "start": "1107120",
    "end": "1113000"
  },
  {
    "start": "1110000",
    "end": "1191000"
  },
  {
    "text": "components is this blanket specific set of specifications for four different things it's uh about the template tag",
    "start": "1113000",
    "end": "1120120"
  },
  {
    "text": "HTML importing the shadow Dom which sounds way cooler than it is custom",
    "start": "1120120",
    "end": "1125320"
  },
  {
    "text": "elements so let's go through these um you noticed in Ember and this is really common in a lot of JavaScript",
    "start": "1125320",
    "end": "1131200"
  },
  {
    "text": "applications to to fake out the the browser and to put inert templates",
    "start": "1131200",
    "end": "1137159"
  },
  {
    "text": "inside of a script tag and we'll call it something else uh the problem is script tags block execution and so if you have",
    "start": "1137159",
    "end": "1143360"
  },
  {
    "text": "a whole bunch of these things your page can get quite janky especially if you're like doing any kind of scrolling and",
    "start": "1143360",
    "end": "1148559"
  },
  {
    "text": "you're dynamically inserting these things um famously Facebook used to do this for its like button and so for",
    "start": "1148559",
    "end": "1155200"
  },
  {
    "text": "every like button on the page as you scrolled you would get this like stutter effect as the thing scrolled um the",
    "start": "1155200",
    "end": "1161480"
  },
  {
    "text": "template tag will fix this problem it'll give you an inert spot to put strings um",
    "start": "1161480",
    "end": "1167720"
  },
  {
    "text": "kind of nice you can put anything you want in there and you can call it like a regular Dom element and do things with it um I don't really care I don't know I",
    "start": "1167720",
    "end": "1175760"
  },
  {
    "text": "don't I don't embed script tags I would compile these things down to a single JavaScript source file you shouldn't be embedding script tags so it's like",
    "start": "1175760",
    "end": "1182919"
  },
  {
    "text": "you're you're almost incur in my view encouraging worse Behavior but that's fine so web components template tag it",
    "start": "1182919",
    "end": "1189120"
  },
  {
    "text": "might help who cares um HTML Imports is an interesting idea this is HTML that",
    "start": "1189120",
    "end": "1195200"
  },
  {
    "start": "1191000",
    "end": "1201000"
  },
  {
    "text": "can load HTML which maybe is a good good idea maybe isn't a good idea um it has a lot",
    "start": "1195200",
    "end": "1201320"
  },
  {
    "start": "1201000",
    "end": "1247000"
  },
  {
    "text": "of problems first of all it's slow you could imagine if you had a complex hierarchy of components it could be calling all making all kinds of network",
    "start": "1201320",
    "end": "1207880"
  },
  {
    "text": "calls that are blocking each other resolution of those Network calls one might fail and then cause the rest of the application to not load um http2",
    "start": "1207880",
    "end": "1215919"
  },
  {
    "text": "should solve a lot of those concerns but you know it's not fully deployed yet U",
    "start": "1215919",
    "end": "1221480"
  },
  {
    "text": "mozilla's put out a statement that they don't want to add HTML Imports Google says they want to Apple says they think",
    "start": "1221480",
    "end": "1227039"
  },
  {
    "text": "it's a good idea but they want to do it differently and Microsoft's just staring at everyone trying to not rock the boat",
    "start": "1227039",
    "end": "1233440"
  },
  {
    "text": "too much we're cool again um so I don't know like HTML Imports might happen it",
    "start": "1233440",
    "end": "1240200"
  },
  {
    "text": "might not it's it's really unclear currently uh from a specification standpoint um the shadow Dom which",
    "start": "1240200",
    "end": "1246320"
  },
  {
    "text": "sounds hella cool um it the idea is that it hides the implementation and so like",
    "start": "1246320",
    "end": "1252480"
  },
  {
    "start": "1247000",
    "end": "1301000"
  },
  {
    "text": "based basic any kind of built-in component right now um you don't have to",
    "start": "1252480",
    "end": "1257679"
  },
  {
    "text": "like drill in and see what's going on and a good example of this would be like the video player in your browser you",
    "start": "1257679",
    "end": "1262960"
  },
  {
    "text": "don't see like individual elements unless you want to the shadow D would give us this capability um possibly in",
    "start": "1262960",
    "end": "1270480"
  },
  {
    "text": "the browser it's it's in a weird State uh it looked like no one was going to",
    "start": "1270480",
    "end": "1275919"
  },
  {
    "text": "implement it and then suddenly in the last couple weeks a lot of the browser implementers have come to the conclusion",
    "start": "1275919",
    "end": "1281400"
  },
  {
    "text": "that maybe having totally Global CSS is a bad thing after all and that we might get some level of encapsulation for",
    "start": "1281400",
    "end": "1287480"
  },
  {
    "text": "styling um but I don't know when that's going to land or how it's going to land there's a",
    "start": "1287480",
    "end": "1292799"
  },
  {
    "text": "lot of complexity associated with it so that's kind of a bummer um but",
    "start": "1292799",
    "end": "1299559"
  },
  {
    "text": "then we get to custom elements and this is a good part uh this is the interesting part and we've I think we've got good validation at this point that",
    "start": "1299559",
    "end": "1306279"
  },
  {
    "start": "1301000",
    "end": "1335000"
  },
  {
    "text": "this is probably an okay idea um we know that all the major Frameworks implement the concept in some fashion um one of",
    "start": "1306279",
    "end": "1314000"
  },
  {
    "text": "the problems with the custom element spec is that it's a single blocking call and so if you have a whole bunch of these things in theory could be a little",
    "start": "1314000",
    "end": "1320679"
  },
  {
    "text": "bit slow um it it supports the idea of extending built-ins and so you can extend already existing HTML elements",
    "start": "1320679",
    "end": "1327880"
  },
  {
    "text": "and win all of their like accessibility features should you so want those um and",
    "start": "1327880",
    "end": "1333240"
  },
  {
    "text": "then otherwise it's just a regular Dom element so this is pretty exciting here's the most simple syntax possible",
    "start": "1333240",
    "end": "1339039"
  },
  {
    "start": "1335000",
    "end": "1376000"
  },
  {
    "text": "that I could cook up um this is the blocking call that registers the element to the page and so we're saying all",
    "start": "1339039",
    "end": "1344880"
  },
  {
    "text": "right I'm going to create a thing called a hello world element um another thing to note and I don't know if it's in Spec",
    "start": "1344880",
    "end": "1350640"
  },
  {
    "text": "or out of spec but custom elements are defined in the Dom parser by having",
    "start": "1350640",
    "end": "1356120"
  },
  {
    "text": "dashes in them which is sort of freaky I don't know why um initially they were",
    "start": "1356120",
    "end": "1361720"
  },
  {
    "text": "talking about doing a leading x dash but then people felt that smelled really bad and so just dashes in them um and then",
    "start": "1361720",
    "end": "1370039"
  },
  {
    "text": "here I just append it into the Dom and it creates this you know tag called",
    "start": "1370039",
    "end": "1375360"
  },
  {
    "text": "hello-world if we want to take this idea a little fur further and I think this is probably the most popular way in the",
    "start": "1375360",
    "end": "1382400"
  },
  {
    "start": "1376000",
    "end": "1465000"
  },
  {
    "text": "more purist web uh thinking um is to extend built-in elements and the reason",
    "start": "1382400",
    "end": "1387640"
  },
  {
    "text": "you'd want to extend a built-in element is that you'd get all of the the accessibility features of the elements",
    "start": "1387640",
    "end": "1392880"
  },
  {
    "text": "and so if I wanted to create a button instead of creating yet another span element that looks like a button maybe I",
    "start": "1392880",
    "end": "1398080"
  },
  {
    "text": "extend button um and this is how you do that the syntax is pretty obtuse um",
    "start": "1398080",
    "end": "1404559"
  },
  {
    "text": "there's a lot of stuff going on here this could definitely be clean up a lot I particularly don't enjoy the fact that",
    "start": "1404559",
    "end": "1411240"
  },
  {
    "text": "I'm defining the tag name and then I'm saying I'm extending something and I'm extending it here it's like I don't know",
    "start": "1411240",
    "end": "1419200"
  },
  {
    "text": "how I feel about that and then this part is very contentious right now uh with Folks at the w3c in particular Apple",
    "start": "1419200",
    "end": "1425840"
  },
  {
    "text": "really doesn't like it and I I kind of don't blame them because you could imagine a world where we'd have something like you know input type",
    "start": "1425840",
    "end": "1434559"
  },
  {
    "text": "equals you know submit is submit thing",
    "start": "1434559",
    "end": "1439960"
  },
  {
    "text": "uh roll equals button it's like I have roll I have you know is I have type I",
    "start": "1439960",
    "end": "1448880"
  },
  {
    "text": "mean that's that's not very easy to follow um my argument against that type",
    "start": "1448880",
    "end": "1454320"
  },
  {
    "text": "of thinking though is that if you think that the web has nice Symmetry and beautiful apis you haven't been paying",
    "start": "1454320",
    "end": "1460520"
  },
  {
    "text": "attention anyways so it we should just do it um so if we're going to have custom",
    "start": "1460520",
    "end": "1467440"
  },
  {
    "start": "1465000",
    "end": "1577000"
  },
  {
    "text": "elements and we're going to have to have a life cycle for these things and this is where stuff starts to get um pretty",
    "start": "1467440",
    "end": "1472760"
  },
  {
    "text": "interesting I think and so very similar in fact to how we see uh all of the the",
    "start": "1472760",
    "end": "1479039"
  },
  {
    "text": "userland Frameworks approaching things we've got these life cycle callbacks and",
    "start": "1479039",
    "end": "1484120"
  },
  {
    "text": "so when I create a new element I can set the inner HTML um this is also contentious Apple",
    "start": "1484120",
    "end": "1491120"
  },
  {
    "text": "thinks it's it's uh redundant to add call back at the end of everything and I I kind of agree it's sort of ugly um",
    "start": "1491120",
    "end": "1498279"
  },
  {
    "text": "once we attach something to the Dom it'll fire this call back we remove something from the Dom and we want to do",
    "start": "1498279",
    "end": "1504520"
  },
  {
    "text": "some cleanup maybe we've got you know hanging event handlers elsewhere in the in the application we can we can hook",
    "start": "1504520",
    "end": "1510080"
  },
  {
    "text": "into this detach call back and then this allows us to create all kinds of problems in our code if we want to um",
    "start": "1510080",
    "end": "1516720"
  },
  {
    "text": "where we can watch on attribute changes and we can programmatically intercept them and add different behaviors um",
    "start": "1516720",
    "end": "1523080"
  },
  {
    "text": "again we have a blocking call down here for this super hello um pretty verbose",
    "start": "1523080",
    "end": "1529000"
  },
  {
    "text": "pretty stinky um code but very",
    "start": "1529000",
    "end": "1534480"
  },
  {
    "text": "powerful um so we can do this now you this isn't you know a fiction this is",
    "start": "1534480",
    "end": "1540000"
  },
  {
    "text": "stuff that we can do today um both Mozilla and Google agreed that it would probably be better if there was only one",
    "start": "1540000",
    "end": "1545840"
  },
  {
    "text": "polyfill as the specs uh were advancing and so there's a a polyfill out there called Web components. JS um it has all",
    "start": "1545840",
    "end": "1552840"
  },
  {
    "text": "of these things baked into it um we really only care about document register element and there's actually there's a",
    "start": "1552840",
    "end": "1558520"
  },
  {
    "text": "dude that works at Twitter um his Twitter handle is web Reflections he's",
    "start": "1558520",
    "end": "1563559"
  },
  {
    "text": "got a fantastic library that just polyfills register element uh if you're feeling like the entire web component JS",
    "start": "1563559",
    "end": "1569720"
  },
  {
    "text": "polyfill is too big it's only a couple hundred K so it's not too bad um and ideally at some point this thing is",
    "start": "1569720",
    "end": "1575520"
  },
  {
    "text": "baked into some form of module system so where where we're at today uh right now",
    "start": "1575520",
    "end": "1581080"
  },
  {
    "start": "1577000",
    "end": "1655000"
  },
  {
    "text": "it's basically only the chromes uh support this natively uh Firefox is extremely likely I.E like I said they're",
    "start": "1581080",
    "end": "1587799"
  },
  {
    "text": "kind of eyeballing the whole thing and uh webkit Safari Apple effectively wants",
    "start": "1587799",
    "end": "1593520"
  },
  {
    "text": "to do this but they just want to do it differently um so let's talk about es6",
    "start": "1593520",
    "end": "1599200"
  },
  {
    "text": "really fast is yeah I asked you guys there's a few of us that are programming es6 I'll I'll try and explain this stuff",
    "start": "1599200",
    "end": "1605840"
  },
  {
    "text": "so everybody always says you know what's the next big thing you know node came along and JavaScript was a big deal all of a sudden and there's got to be",
    "start": "1605840",
    "end": "1612240"
  },
  {
    "text": "another thing to satisfy my ad HD um",
    "start": "1612240",
    "end": "1618120"
  },
  {
    "text": "I don't think it's going to be like go or rust personally I think it's actually going to be JavaScript there's enough new toys that it's an exciting language",
    "start": "1618120",
    "end": "1624640"
  },
  {
    "text": "to learn and to use again um and it's a lot prettier than it used to be so one of the the biggest feature to me is that",
    "start": "1624640",
    "end": "1631320"
  },
  {
    "text": "we actually get a Syntax for defining modules finally um kind of pythonic in a",
    "start": "1631320",
    "end": "1636840"
  },
  {
    "text": "way and so in this case I'm defining a default exports um for my my uh person",
    "start": "1636840",
    "end": "1643360"
  },
  {
    "text": "function here um and we can consume modules also looking a little bit python where I can say all right give me the",
    "start": "1643360",
    "end": "1649399"
  },
  {
    "text": "the high function from this hello module and there you go um pretty",
    "start": "1649399",
    "end": "1654559"
  },
  {
    "text": "neat this is beautiful uh if you've ever worked with object literals um now you",
    "start": "1654559",
    "end": "1660200"
  },
  {
    "start": "1655000",
    "end": "1712000"
  },
  {
    "text": "don't have to append um a function inside there you can just give it a name",
    "start": "1660200",
    "end": "1666080"
  },
  {
    "text": "and you're Off to the Races so much cleaner uh this removes a ton of code",
    "start": "1666080",
    "end": "1672399"
  },
  {
    "text": "looks way better uh we have classes just as Java gets lambdas JavaScript gets",
    "start": "1672399",
    "end": "1677519"
  },
  {
    "text": "gets classes um so that's pretty cool uh this works the way you would think it would work um you've got a Constructor",
    "start": "1677519",
    "end": "1684120"
  },
  {
    "text": "function you've got inheritance uh you can add static members uh pretty clean",
    "start": "1684120",
    "end": "1689600"
  },
  {
    "text": "finally JavaScript sorry can you no you cannot do well it's",
    "start": "1689600",
    "end": "1696279"
  },
  {
    "text": "JavaScript you you can you can create a multiple inheritance nightmare if you want to there's there's ways you could",
    "start": "1696279",
    "end": "1703039"
  },
  {
    "text": "there's a thing called object assign which would allow you to add as many mix in as you want to get that kind of uh",
    "start": "1703039",
    "end": "1711000"
  },
  {
    "text": "Behavior Uh this is another personal favorite of mine the fat Arrow function um if you come from copy script land you",
    "start": "1711000",
    "end": "1717679"
  },
  {
    "start": "1712000",
    "end": "1739000"
  },
  {
    "text": "you've probably seen the single Arrow U so this is now finally uh in JavaScript",
    "start": "1717679",
    "end": "1724080"
  },
  {
    "text": "itself this lets us do a shorthand for a function call so much cleaner than writing out an entire function um in",
    "start": "1724080",
    "end": "1730480"
  },
  {
    "text": "this case I'm I'm passing an you know each fruit one at a time that I'm calling uppercase not really all that",
    "start": "1730480",
    "end": "1737480"
  },
  {
    "text": "that big of a deal remember earlier how I was hating on uh the template tag this",
    "start": "1737480",
    "end": "1742880"
  },
  {
    "start": "1739000",
    "end": "1764000"
  },
  {
    "text": "is kind of why um in es6 we get a concept called template strings which allow us to have multi-line strings and",
    "start": "1742880",
    "end": "1749399"
  },
  {
    "text": "do string interpolation um like right here this is so nice uh if you if you",
    "start": "1749399",
    "end": "1755880"
  },
  {
    "text": "have templates I don't know why you wouldn't use this personally uh it makes a lot more sense to me to embed this",
    "start": "1755880",
    "end": "1761320"
  },
  {
    "text": "type of thing in your program um there's a ton of other niceties uh just a lot of sugar really",
    "start": "1761320",
    "end": "1767600"
  },
  {
    "start": "1764000",
    "end": "1776000"
  },
  {
    "text": "um there's nothing super new in the functionality of JavaScript you just have to write a lot less of it which um",
    "start": "1767600",
    "end": "1773080"
  },
  {
    "text": "usually results in better programs we can't do this natively today",
    "start": "1773080",
    "end": "1778279"
  },
  {
    "start": "1776000",
    "end": "1848000"
  },
  {
    "text": "uh you can do some of this stuff natively today in ijs the node Fork um but for the most part if we're going to",
    "start": "1778279",
    "end": "1784200"
  },
  {
    "text": "go back into browser lamb we have to transpile or compile it uh but the good news is there's great tools for this",
    "start": "1784200",
    "end": "1789399"
  },
  {
    "text": "babeljs is probably the most popular one right now but Tracer from Google also works well um I like to do Babble with",
    "start": "1789399",
    "end": "1796760"
  },
  {
    "text": "browser in a thing called babelify um which you know I like how we've run out",
    "start": "1796760",
    "end": "1802519"
  },
  {
    "text": "of names for things so now just programmer talk is like total nonsense uh I babified my code and that actually",
    "start": "1802519",
    "end": "1809159"
  },
  {
    "text": "meant something um so I personally like to publish modules in mpm um everybody",
    "start": "1809159",
    "end": "1815919"
  },
  {
    "text": "has their own sort of thing that's that's fine um I found mpm to be a little bit better I don't want multiple",
    "start": "1815919",
    "end": "1821960"
  },
  {
    "text": "package systems in my production codebase but you know your mileage may vary one of the things that we do very",
    "start": "1821960",
    "end": "1828440"
  },
  {
    "text": "explicitly when we publish a module is that we compile it back to es5 we don't publish modules as es6 Source or coffee",
    "start": "1828440",
    "end": "1835080"
  },
  {
    "text": "script or typescript or anything if someone's consuming your module they don't you don't want to also put the",
    "start": "1835080",
    "end": "1841279"
  },
  {
    "text": "burden on them to figure out how to compile this thing back to es5 their their build chain would turn into a",
    "start": "1841279",
    "end": "1846720"
  },
  {
    "text": "nightmare um so if we pull all these Concepts",
    "start": "1846720",
    "end": "1851919"
  },
  {
    "start": "1848000",
    "end": "1908000"
  },
  {
    "text": "together we can get a pretty good look at how code might be written in a few years here here um for the web um so you",
    "start": "1851919",
    "end": "1859919"
  },
  {
    "text": "author your source code in es6 you compile it down into es5 and you distribute it that way um we can use",
    "start": "1859919",
    "end": "1866000"
  },
  {
    "text": "package Json to point to the disc folder we can deploy this thing to GitHub pages and we can even use Source maps to have",
    "start": "1866000",
    "end": "1872519"
  },
  {
    "text": "step debugging if we want to to walk through these components um I created a",
    "start": "1872519",
    "end": "1877639"
  },
  {
    "text": "very trivial silly uh date element I actually stole the idea from uh GitHub",
    "start": "1877639",
    "end": "1884080"
  },
  {
    "text": "who uses custom elements themselves uh for the date time uh helper in in their",
    "start": "1884080",
    "end": "1890399"
  },
  {
    "text": "UI um and for fun I did it using es6 syntax and so here we are just extending",
    "start": "1890399",
    "end": "1897080"
  },
  {
    "text": "the built-in span element and when I'm Crea as soon as this thing is created we're going to just insert this uh text",
    "start": "1897080",
    "end": "1904159"
  },
  {
    "text": "node inside of it um where we're going to grab the date um I have the source code for this",
    "start": "1904159",
    "end": "1909960"
  },
  {
    "start": "1908000",
    "end": "2008000"
  },
  {
    "text": "running I'll give you the links for it so you can check it out so there's obviously problems remain this isn't",
    "start": "1909960",
    "end": "1915600"
  },
  {
    "text": "like going to be the ultimate solution but componentized is is definitely a trend that we're seeing in in all the",
    "start": "1915600",
    "end": "1920760"
  },
  {
    "text": "various um JavaScript Frameworks and so it it feels like this is the right direction the collective has kind of",
    "start": "1920760",
    "end": "1926679"
  },
  {
    "text": "agreed that hey maybe encapsulating my code might be a good idea um web components JS uh is kind of big and it's",
    "start": "1926679",
    "end": "1934559"
  },
  {
    "text": "a little bit strange um it has to go backwards in time and support browsers that are a little more hostile so the",
    "start": "1934559",
    "end": "1940840"
  },
  {
    "text": "source code for it's a little weird it is worth checking out um none of this solves CSS so you know you you get to",
    "start": "1940840",
    "end": "1948000"
  },
  {
    "text": "keep that problem um which is kind of unfortunate and I think Shadow Dom's going to help us a",
    "start": "1948000",
    "end": "1953919"
  },
  {
    "text": "lot there but um we're just not there yet um if you're doing a lot of these register elements it's conceivable that",
    "start": "1953919",
    "end": "1960320"
  },
  {
    "text": "your app could get quite slow because you're blocking when you're doing this this is a synchronous call um there's no",
    "start": "1960320",
    "end": "1965519"
  },
  {
    "text": "other way to really do it no one's figured out a way to do it yet anyhow if you're rendering the page and you've got",
    "start": "1965519",
    "end": "1970679"
  },
  {
    "text": "these these um custom elements and it they're they're effectively going to be treated just like a span unless we can",
    "start": "1970679",
    "end": "1977039"
  },
  {
    "text": "can stop execution register this thing with the parser and then do the right thing when when we hit it um something",
    "start": "1977039",
    "end": "1983440"
  },
  {
    "text": "else worth noting in react really forces you from uh writing code that could",
    "start": "1983440",
    "end": "1988559"
  },
  {
    "text": "mutate State and have side effects um which I really like and I think we could learn a lot from um in web components",
    "start": "1988559",
    "end": "1995519"
  },
  {
    "text": "land you know you've got all the rope to hang yourself so if you mutate State um",
    "start": "1995519",
    "end": "2000559"
  },
  {
    "text": "you know it's it's your problem to solve Henrik uh jerg jerg",
    "start": "2000559",
    "end": "2007840"
  },
  {
    "text": "God I can't remember his last name right now I think it's joerg Joe tag anyways the guy behind",
    "start": "2007840",
    "end": "2013320"
  },
  {
    "start": "2008000",
    "end": "2172000"
  },
  {
    "text": "ersan JS says that the future is probably not going to be the same as today and so your best bet is to",
    "start": "2013320",
    "end": "2018760"
  },
  {
    "text": "optimize for the future and I really like that I think that's a nice way of looking at things Andy Hunt uh from the",
    "start": "2018760",
    "end": "2024120"
  },
  {
    "text": "pragmatic programmers recently said you know we should be thinking more about disposable units of code instead of reusable units of code and that's more",
    "start": "2024120",
    "end": "2030799"
  },
  {
    "text": "likely that if your as your code base goes on you're going to be rewriting Parts encapsulating these bits so that",
    "start": "2030799",
    "end": "2035960"
  },
  {
    "text": "we can pull chunks out and change them just makes a whole lot of good sense um CSS is still a mess uh there's really",
    "start": "2035960",
    "end": "2044120"
  },
  {
    "text": "nothing to to be said about it it's it's not a good idea we're combining so many different concepts at the same time from",
    "start": "2044120",
    "end": "2049358"
  },
  {
    "text": "layout to aesthetic to reset um at some point this is going to have to be fixed um and encapsulating these bits would",
    "start": "2049359",
    "end": "2055200"
  },
  {
    "text": "really really help a lot it doesn't make sense that if I have a TBL implementation that it could override I",
    "start": "2055200",
    "end": "2060398"
  },
  {
    "text": "don't know my my side menu implementation um I think react is really proven that immutable state is a",
    "start": "2060399",
    "end": "2067000"
  },
  {
    "text": "good thing um and the vom and the batching Concepts there should probably be brought into your development",
    "start": "2067000",
    "end": "2072560"
  },
  {
    "text": "methodology whatever it might be um and I think it we could see it happening in uh in web components land at some point",
    "start": "2072560",
    "end": "2080280"
  },
  {
    "text": "if you want to check out the source code for this stuff um and actually I'll jump over there right now so you",
    "start": "2080280",
    "end": "2087599"
  },
  {
    "text": "can oh God what did I do so here here's my web",
    "start": "2087599",
    "end": "2094679"
  },
  {
    "text": "component and if I inspect this El element you can see date today which is",
    "start": "2094679",
    "end": "2100079"
  },
  {
    "text": "pretty cool and if I take a look oh no is it only the minified no",
    "start": "2100079",
    "end": "2107000"
  },
  {
    "text": "it's not oh Firefox you failed",
    "start": "2107000",
    "end": "2114000"
  },
  {
    "text": "me I was just about to say Firefox Developer Edition is",
    "start": "2114000",
    "end": "2119480"
  },
  {
    "text": "awesome and it is you can check out the source code anyhow um on my GitHub at",
    "start": "2119480",
    "end": "2126359"
  },
  {
    "text": "github.com /ban ldat today eventually when it",
    "start": "2126359",
    "end": "2132119"
  },
  {
    "text": "loads come on really there we go and so if we see the source code it's like",
    "start": "2132119",
    "end": "2137200"
  },
  {
    "text": "literally almost literally what I had um in that slide where I'm defining a class and I'm registering the element that I'm",
    "start": "2137200",
    "end": "2143560"
  },
  {
    "text": "exporting it and I'm using uh babelify to uh compile this down to es5 code it's",
    "start": "2143560",
    "end": "2150640"
  },
  {
    "text": "pretty clean uh I think this is a nice way to work and I think that we're starting to track onto like building um",
    "start": "2150640",
    "end": "2157079"
  },
  {
    "text": "better apps by doing this sort of thing and uh that's it that's all I got",
    "start": "2157079",
    "end": "2162440"
  },
  {
    "text": "for you guys but I think I have some questions",
    "start": "2162440",
    "end": "2167920"
  },
  {
    "text": "Maybe",
    "start": "2170520",
    "end": "2173520"
  }
]