[
  {
    "start": "0",
    "end": "87000"
  },
  {
    "text": "[Music]",
    "start": "980",
    "end": "7849"
  },
  {
    "text": "hello and welcome everyone this is amazing and this is the last talk before",
    "start": "12500",
    "end": "18300"
  },
  {
    "text": "the keynotes and then we can all go for a beer so that's that's great whoo yes absolutely thank you for being",
    "start": "18300",
    "end": "25590"
  },
  {
    "text": "here hello to all our home viewers look last year I was at this conference and I",
    "start": "25590",
    "end": "32640"
  },
  {
    "text": "spoke about souls architectures and technologies and why I think you know",
    "start": "32640",
    "end": "38340"
  },
  {
    "text": "that this is the future of software architecture and over the past 12 months you know I've kind of had a few",
    "start": "38340",
    "end": "44730"
  },
  {
    "text": "additional thoughts and realizations that I want to share with you in this presentation so this is me I work for a",
    "start": "44730",
    "end": "52500"
  },
  {
    "text": "company called a cloud guru I started as VP of engineering but now I look after",
    "start": "52500",
    "end": "57719"
  },
  {
    "text": "the content after the courses that we produce I've written a book called so",
    "start": "57719",
    "end": "63780"
  },
  {
    "text": "those architectures on AWS and it's being translated to japanese and it's a",
    "start": "63780",
    "end": "69270"
  },
  {
    "text": "beautiful book I obviously cannot read it because I don't read Japanese but people tell me that it looks correct which is excellent I hope to organize a",
    "start": "69270",
    "end": "76979"
  },
  {
    "text": "conference called service con and I have also recently been made an AWS community",
    "start": "76979",
    "end": "83369"
  },
  {
    "text": "hero which is a big honor and very very humbling so yeah as I said this is the",
    "start": "83369",
    "end": "89280"
  },
  {
    "start": "87000",
    "end": "178000"
  },
  {
    "text": "company that I work for a cloud guru and our focus our mission is to produce great courses great content and help to",
    "start": "89280",
    "end": "96090"
  },
  {
    "text": "obscure people on cloud computing and an interesting thing about our company is",
    "start": "96090",
    "end": "101700"
  },
  {
    "text": "that we are entirely service right so we built our platform service from the very start and you know we've grown to be",
    "start": "101700",
    "end": "108899"
  },
  {
    "text": "quite large we have five hundred thousands of students who you know use",
    "start": "108899",
    "end": "114420"
  },
  {
    "text": "our platform who take our courses and that's kind of incredible and we've been",
    "start": "114420",
    "end": "119700"
  },
  {
    "text": "in love this whole idea of service from the very start so we developed a few courses we",
    "start": "119700",
    "end": "126479"
  },
  {
    "text": "organized our conference and we run it in New York and Austin Texas and London",
    "start": "126479",
    "end": "132150"
  },
  {
    "text": "and Tokyo and the next one is actually coming up in San Francisco at the end of July start",
    "start": "132150",
    "end": "138690"
  },
  {
    "text": "off August so anybody can make it please come along and yeah so we've been really",
    "start": "138690",
    "end": "144630"
  },
  {
    "text": "into it and look I'm not gonna go you know into what is serverless I mean you've had a bunch of talks today",
    "start": "144630",
    "end": "150780"
  },
  {
    "text": "already but I just wanted to highlight kind of the comparison between what service is to pass to infrastructure as",
    "start": "150780",
    "end": "158070"
  },
  {
    "text": "a service I mean really to me service is all about function execution right cloud",
    "start": "158070",
    "end": "165170"
  },
  {
    "text": "scalable function execution it's about using managed services and it's about using certain patterns and architectures",
    "start": "165170",
    "end": "172140"
  },
  {
    "text": "in concert to produce scalable event-driven reliable systems so let's",
    "start": "172140",
    "end": "179670"
  },
  {
    "start": "178000",
    "end": "321000"
  },
  {
    "text": "take a look at our platform as I said it's entirely serverless and this is what they have so I went into the AWS",
    "start": "179670",
    "end": "187500"
  },
  {
    "text": "console and I had a look at the stats for the month of February so you can see",
    "start": "187500",
    "end": "193500"
  },
  {
    "text": "we've made nearly 50 million lambda in vacations in that month we had 27",
    "start": "193500",
    "end": "200940"
  },
  {
    "text": "million API requests put for the API gateway in that month as well and we've",
    "start": "200940",
    "end": "209340"
  },
  {
    "text": "transferred something like 37 terabytes of data in February so you know seeing",
    "start": "209340",
    "end": "218940"
  },
  {
    "text": "this 50 million indications of lambda so many millions of API requests for the",
    "start": "218940",
    "end": "225780"
  },
  {
    "text": "API gateway and this much bandwidth can anybody guess what our bill was for AWS",
    "start": "225780",
    "end": "232590"
  },
  {
    "text": "for this month any guesses yes 1500",
    "start": "232590",
    "end": "239130"
  },
  {
    "text": "that's a good guess any other guesses under 200 I wish it was okay that that's",
    "start": "239130",
    "end": "247950"
  },
  {
    "text": "that's that's lovely but no it's a little bit higher than that any other guesses I'll take any office I try I",
    "start": "247950",
    "end": "259500"
  },
  {
    "text": "won't talk to you anymore so this was our bill for the month of tab and so you have to remember that you know we have",
    "start": "259500",
    "end": "264990"
  },
  {
    "text": "you know tens of thousands of users you know this is a very busy system it's",
    "start": "264990",
    "end": "270210"
  },
  {
    "text": "available we have users from 135 countries around the world and yeah it's",
    "start": "270210",
    "end": "275880"
  },
  {
    "text": "it's very busy so kind of a few interesting things here when you look at the stable cloud front accounts for more",
    "start": "275880",
    "end": "282360"
  },
  {
    "text": "than half of our cost obviously you know we our bandwidth is enormous we send a",
    "start": "282360",
    "end": "289680"
  },
  {
    "text": "lot of data so that's that something that was can't counterintuitive to me is",
    "start": "289680",
    "end": "295350"
  },
  {
    "text": "the API gateway pricing I kind of thought that API gateway should be expensive right that's I don't know I",
    "start": "295350",
    "end": "300570"
  },
  {
    "text": "just always thought but it was only $100 lambda was only two hundred and six",
    "start": "300570",
    "end": "306120"
  },
  {
    "text": "dollars for 50 million implications which is kind of incredible so when you",
    "start": "306120",
    "end": "312480"
  },
  {
    "text": "look at this bill it's like wow you know going service purely from an economic perspective makes sense for our system right it's",
    "start": "312480",
    "end": "320790"
  },
  {
    "text": "it's been incredible the other thing that I should mention is agility I just",
    "start": "320790",
    "end": "326070"
  },
  {
    "start": "321000",
    "end": "363000"
  },
  {
    "text": "googled agility and click on image search and this is the image that came up so that's why I'm using it service",
    "start": "326070",
    "end": "333240"
  },
  {
    "text": "has enabled our team to be really agile now we can actually add new features and",
    "start": "333240",
    "end": "340700"
  },
  {
    "text": "quickly kind of solve our business problem with this approach we don't have to worry about infrastructure we don't",
    "start": "340700",
    "end": "346800"
  },
  {
    "text": "need to worry about provisioning service you know managing containers we can focus primarily on our business and that",
    "start": "346800",
    "end": "353220"
  },
  {
    "text": "has been incredible and that has really propelled our growth and got us to where",
    "start": "353220",
    "end": "358230"
  },
  {
    "text": "we are and you know I don't think we could have done it any other way so this has been really really good for us so",
    "start": "358230",
    "end": "367530"
  },
  {
    "start": "363000",
    "end": "451000"
  },
  {
    "text": "this is kind of you know a battery simplified overview of our system from",
    "start": "367530",
    "end": "372900"
  },
  {
    "text": "an architectural perspective so we have a an SP a a single page application that's a mix of react and angular we",
    "start": "372900",
    "end": "379920"
  },
  {
    "text": "have an API gateway that connects to a lambda function which hosts our graph QL",
    "start": "379920",
    "end": "385020"
  },
  {
    "text": "and point and that graph QL endpoint can talk to a bunch of other micro services",
    "start": "385020",
    "end": "390420"
  },
  {
    "text": "right so you can see micro service a which is fronted by another lambda function micro service B which is",
    "start": "390420",
    "end": "396960"
  },
  {
    "text": "fronted by an API gateway and we're kind of moving to that approach where every micro service",
    "start": "396960",
    "end": "402719"
  },
  {
    "text": "is fronted by an API gateway and using",
    "start": "402719",
    "end": "407789"
  },
  {
    "text": "schemas teaching we can kind of you know send our quests off to DynamoDB grab",
    "start": "407789",
    "end": "413999"
  },
  {
    "text": "some data return it back sometimes when we make an update to dynamo DB that",
    "start": "413999",
    "end": "420839"
  },
  {
    "text": "invokes a function as well which then goes and updates firebase and firebase is basically it's it's a database",
    "start": "420839",
    "end": "427679"
  },
  {
    "text": "produced by google and we use it to kind of have a materialized view for our",
    "start": "427679",
    "end": "435719"
  },
  {
    "text": "website if the materialized kind of interface that our website has we also updating",
    "start": "435719",
    "end": "442349"
  },
  {
    "text": "track or Golia which allows us to do searching and then they have cloud front and espree so these are our videos our",
    "start": "442349",
    "end": "449489"
  },
  {
    "text": "terabytes and terabytes of video our CI CD pipeline nothing too fancy I think",
    "start": "449489",
    "end": "455849"
  },
  {
    "text": "you know you would all be familiar but something like this you know we have github which when we need to deploy a",
    "start": "455849",
    "end": "462389"
  },
  {
    "text": "kicks off a Travis CI job we run a bunch of tests using Cypress and gesture and then we go off and we deploy things to",
    "start": "462389",
    "end": "469800"
  },
  {
    "text": "AWS so when you no good maybe we deploy a bunch of new lambda functions we deploy our single page application to",
    "start": "469800",
    "end": "477209"
  },
  {
    "text": "net with PI so we don't run it from an s3 bucket we use notify instead and then",
    "start": "477209",
    "end": "484379"
  },
  {
    "text": "perhaps we update other services like 5:00 a.m. and I'll go Liam we use service framework you know that's it's a",
    "start": "484379",
    "end": "492179"
  },
  {
    "text": "great tool and we use ansible sometimes to spin up some infrastructure in AWS if",
    "start": "492179",
    "end": "499559"
  },
  {
    "text": "we need it for our developers so I kind of want to share some stories and some",
    "start": "499559",
    "end": "506339"
  },
  {
    "start": "502000",
    "end": "554000"
  },
  {
    "text": "learnings with you and I hope you find them interesting I would love some feedback from you whether you think",
    "start": "506339",
    "end": "513388"
  },
  {
    "text": "these are useful or not so front-end failover kind of we pride ourselves on",
    "start": "513389",
    "end": "521518"
  },
  {
    "text": "being available all of the time right we have 500,000 users 135 countries we need",
    "start": "521519",
    "end": "528000"
  },
  {
    "text": "to be always available there's always somebody on the platform watching videos or interacting in our",
    "start": "528000",
    "end": "533140"
  },
  {
    "text": "forums and then back in December Nathalie five and down so people go to",
    "start": "533140",
    "end": "541210"
  },
  {
    "text": "our website and they couldn't load the side right and we can be just set there",
    "start": "541210",
    "end": "546520"
  },
  {
    "text": "going oh oh this isn't good so for 48 minutes nobody could access our website so what do we",
    "start": "546520",
    "end": "553150"
  },
  {
    "text": "do so I had a thought maybe you know we could do we could do something in terms",
    "start": "553150",
    "end": "560650"
  },
  {
    "start": "554000",
    "end": "598000"
  },
  {
    "text": "of failover luckily route 53 has this awesome feature called the health check and what",
    "start": "560650",
    "end": "567190"
  },
  {
    "text": "it does it allows you to basically ping a particular endpoint and then if that",
    "start": "567190",
    "end": "573610"
  },
  {
    "text": "endpoint tails and returns a different status code to what you expect you can",
    "start": "573610",
    "end": "579070"
  },
  {
    "text": "change your DNS to point to a different end point to point to a different record",
    "start": "579070",
    "end": "584440"
  },
  {
    "text": "set so effectively you can point to notify and then if mattify goes down you can quickly without any user kind of",
    "start": "584440",
    "end": "592330"
  },
  {
    "text": "manual intervention you can quickly update your DNS to point to an d'esprit bucket with your website instead so I",
    "start": "592330",
    "end": "599170"
  },
  {
    "start": "598000",
    "end": "708000"
  },
  {
    "text": "thought okay I'm going to do a little experiment so I set up I register the",
    "start": "599170",
    "end": "604240"
  },
  {
    "text": "domain called service architectures calm this is natalja fire I kind of deployed my code my SP a there then I deployed",
    "start": "604240",
    "end": "613600"
  },
  {
    "text": "exactly the same files to an s3 bucket right so two systems entirely separate",
    "start": "613600",
    "end": "619480"
  },
  {
    "text": "same files and awesome so then I went",
    "start": "619480",
    "end": "624640"
  },
  {
    "text": "into route 53 and I created a health check which I called h5 boilerplate I",
    "start": "624640",
    "end": "630430"
  },
  {
    "text": "don't know why it's a very intuitive name as you can see and I configured that health check to look at this URL",
    "start": "630430",
    "end": "637360"
  },
  {
    "text": "that I have there which is just index dot HTML basically of my website I've",
    "start": "637360",
    "end": "643450"
  },
  {
    "text": "configured a request interval of 10 seconds and this is all configurable you can change it it's all up to you and a",
    "start": "643450",
    "end": "650740"
  },
  {
    "text": "fairly fresh hold of fries so in other words if you get three errors then",
    "start": "650740",
    "end": "656260"
  },
  {
    "text": "switch DNS the other thing is the health checker regions so you can perform these",
    "start": "656260",
    "end": "662190"
  },
  {
    "text": "kind of health checks from different regions around the world which is very useful cool i configured",
    "start": "662190",
    "end": "669070"
  },
  {
    "text": "the first record set this is valid points to let notify and then I",
    "start": "669070",
    "end": "674470"
  },
  {
    "text": "configured the second record set which points to s free and you can see there's a routing policy that you specify it's",
    "start": "674470",
    "end": "681399"
  },
  {
    "text": "called failover and you can say that this is a primary record set and then this is the secondary one that's it it's",
    "start": "681399",
    "end": "686470"
  },
  {
    "text": "like it literally takes 30 seconds to do this awesome I was actually going to get",
    "start": "686470",
    "end": "691600"
  },
  {
    "text": "like a teammate to do this for me instead but I didn't get time to do it so yeah there's a smiley face yeah so I",
    "start": "691600",
    "end": "698890"
  },
  {
    "text": "went to the website opened up in Chrome who is the Safari I don't know hit the",
    "start": "698890",
    "end": "704980"
  },
  {
    "text": "web site here's the response it comes from neckla that's great then I went to never have found this big dangerous",
    "start": "704980",
    "end": "711910"
  },
  {
    "start": "708000",
    "end": "751000"
  },
  {
    "text": "button called delete this website delete this side I clicked the button and the",
    "start": "711910",
    "end": "717190"
  },
  {
    "text": "site was gone so health check luckily picked it up and started saying",
    "start": "717190",
    "end": "722770"
  },
  {
    "text": "that look your site looks unhealthy which it really was because it was deleted and it automatically updated our",
    "start": "722770",
    "end": "732220"
  },
  {
    "text": "DNS to point to s3 so I basically refresh the website and there it was",
    "start": "732220",
    "end": "738580"
  },
  {
    "text": "so look something to think about if you're worried about fell over and how things will work you know is my side",
    "start": "738580",
    "end": "744940"
  },
  {
    "text": "going to be up route 53 has this awesome feature that I think not a lot of people",
    "start": "744940",
    "end": "750100"
  },
  {
    "text": "know about alright awesome but then what about api's so let's say you have your",
    "start": "750100",
    "end": "756130"
  },
  {
    "start": "751000",
    "end": "766000"
  },
  {
    "text": "beautiful service architecture with lambdas and api gateways and everything else and something happens can you do",
    "start": "756130",
    "end": "764080"
  },
  {
    "text": "the same thing there well yes you can so",
    "start": "764080",
    "end": "770250"
  },
  {
    "start": "766000",
    "end": "840000"
  },
  {
    "text": "a little disclaimer this is a hugely simplified example right it's kind of",
    "start": "770250",
    "end": "775770"
  },
  {
    "text": "trivial if you add things are caching if you add messaging obviously the story",
    "start": "775770",
    "end": "782760"
  },
  {
    "text": "becomes a lot more complex but I just wanted to illustrate a couple of things for you here I have two identical",
    "start": "782760",
    "end": "789990"
  },
  {
    "text": "systems right one is deployed into US east one the other one is deployed into",
    "start": "789990",
    "end": "797250"
  },
  {
    "text": "u.s. is two same api gateways same lambda functions i am however using",
    "start": "797250",
    "end": "802590"
  },
  {
    "text": "dynamo DB global tables DynamoDB global tables it's an excellent new feature",
    "start": "802590",
    "end": "807900"
  },
  {
    "text": "which was announced by AWS back and reinvent last year it basically synchronizes and replicates",
    "start": "807900",
    "end": "815250"
  },
  {
    "text": "your data across multiple widgets automatically so you write two DynamoDB and then your data is replicated which",
    "start": "815250",
    "end": "822570"
  },
  {
    "text": "is kind of fantastic you don't need to do any of that work yourself so here we",
    "start": "822570",
    "end": "828210"
  },
  {
    "text": "have two systems which are identical and we have a health check as well and that",
    "start": "828210",
    "end": "833550"
  },
  {
    "text": "health check can think the first api gateway and then switch to the other",
    "start": "833550",
    "end": "838680"
  },
  {
    "text": "region if it needs to when you create when you create an api gateway and you",
    "start": "838680",
    "end": "845130"
  },
  {
    "text": "have two options you can create an edge optimized api gateway which is kind of",
    "start": "845130",
    "end": "850770"
  },
  {
    "text": "the default option or you can create what's called a regional endpoint so in",
    "start": "850770",
    "end": "855960"
  },
  {
    "text": "this case you create effectively to regional endpoints one is in US east one",
    "start": "855960",
    "end": "861150"
  },
  {
    "text": "the other one is in u.s. west one by the way this all works with SSL so there's",
    "start": "861150",
    "end": "868080"
  },
  {
    "text": "no problem there so we have two separate API gateways lambda functions and the",
    "start": "868080",
    "end": "875490"
  },
  {
    "text": "system's are identical same thing here we have an a health check that basically",
    "start": "875490",
    "end": "881010"
  },
  {
    "text": "thinks some kind of URI or URL and expects a particular response so here I",
    "start": "881010",
    "end": "889860"
  },
  {
    "start": "888000",
    "end": "928000"
  },
  {
    "text": "am I am kind of looking at the the response it's coming from Virginia",
    "start": "889860",
    "end": "896160"
  },
  {
    "text": "so it's coming from us east one then I just jumped into the API gateway and changed on the settings so now I require",
    "start": "896160",
    "end": "902570"
  },
  {
    "text": "authorization which means that I'll get back a four zero three in third of a 200",
    "start": "902570",
    "end": "908070"
  },
  {
    "text": "response code right and this is what happens so the health check goes or or",
    "start": "908070",
    "end": "913710"
  },
  {
    "text": "something has happened I'm getting the wrong status code which I didn't expect and then luckily it automatically",
    "start": "913710",
    "end": "921330"
  },
  {
    "text": "switches to the other API right so our system continues to function so it's",
    "start": "921330",
    "end": "929430"
  },
  {
    "start": "928000",
    "end": "947000"
  },
  {
    "text": "very powerful have a think about whether you can use this technique with whether you can use this approach because I",
    "start": "929430",
    "end": "935790"
  },
  {
    "text": "think there's something there and not a lot of people are really aware that this is possible and again yes I do",
    "start": "935790",
    "end": "942810"
  },
  {
    "text": "understand that for more complex systems it's yeah the story is trickier if you",
    "start": "942810",
    "end": "948660"
  },
  {
    "start": "947000",
    "end": "1031000"
  },
  {
    "text": "saw my talk from last year I was kind of sharing some of the architectures that we've built internally at a cloud guru",
    "start": "948660",
    "end": "955290"
  },
  {
    "text": "right and one of the architectures is this transcoding pipeline and basically what it does it allows our instructors",
    "start": "955290",
    "end": "962100"
  },
  {
    "text": "to upload videos to our platform directly from the browser right so they can upload a video straight to an s3",
    "start": "962100",
    "end": "968520"
  },
  {
    "text": "bucket that kicks off a lambda function right this whole architecture is",
    "start": "968520",
    "end": "974160"
  },
  {
    "text": "event-driven so that kicks off a lambda function lambda function kicks off an",
    "start": "974160",
    "end": "979890"
  },
  {
    "text": "elastic transcoder job which creates different versions of our video files so",
    "start": "979890",
    "end": "985700"
  },
  {
    "text": "transcodes our files to lock it 1080p version 720p 480p HLS WebM then those files are",
    "start": "985700",
    "end": "993900"
  },
  {
    "text": "placed into another s3 bucket that kicks off that pushes a message to an SNS topic which turns out to a bunch of",
    "start": "993900",
    "end": "1001190"
  },
  {
    "text": "other than the functions that then go and update the database and do other various things again this is hugely",
    "start": "1001190",
    "end": "1006770"
  },
  {
    "text": "simplified but I just wanted to show you how a part of our system functions right",
    "start": "1006770",
    "end": "1011870"
  },
  {
    "text": "it's all event-driven this kind of it's all automated the one tricky thing there",
    "start": "1011870",
    "end": "1018050"
  },
  {
    "text": "though was what happens if a lambda function fails right because things fail all the time and so we had a bunch of",
    "start": "1018050",
    "end": "1024678"
  },
  {
    "text": "kind of code that would kind of you know detect an error and try to handle that error",
    "start": "1024679",
    "end": "1032199"
  },
  {
    "start": "1031000",
    "end": "1107000"
  },
  {
    "text": "luckily now there is support for dead-letter cues so if a function does",
    "start": "1032199",
    "end": "1037668"
  },
  {
    "text": "fail you can tell that function to place that particular event or message that it",
    "start": "1037669",
    "end": "1042829"
  },
  {
    "text": "is trying to process into an SMS topic write a different SMS topic and then you",
    "start": "1042829",
    "end": "1048529"
  },
  {
    "text": "can hang another lambda function of that SMS topic and that lambda function can",
    "start": "1048529",
    "end": "1053690"
  },
  {
    "text": "address the issue so I can pick up the message and say okay maybe I will riku this message again maybe I'll try",
    "start": "1053690",
    "end": "1059029"
  },
  {
    "text": "to process it some some other way maybe I will just notify the developer to say",
    "start": "1059029",
    "end": "1065629"
  },
  {
    "text": "look something has failed and you need to have a look at it so this is I don't know I thought this",
    "start": "1065629",
    "end": "1072529"
  },
  {
    "text": "was a pretty powerful technique that people should be aware of I'm using deadly recuse when things fail and by",
    "start": "1072529",
    "end": "1080090"
  },
  {
    "text": "the way this only works for a synchronous invocations of lambda it doesn't work for synchronous indications",
    "start": "1080090",
    "end": "1086480"
  },
  {
    "text": "so synchronous indications are for example when you invoke a lambda function yourself using the API gateway",
    "start": "1086480",
    "end": "1094129"
  },
  {
    "text": "this only works if you invoke a lambda function through an event that happens in one of the other services like um an",
    "start": "1094129",
    "end": "1101000"
  },
  {
    "text": "s3 bucket or an SNS topic so please be aware of dead lyric use another",
    "start": "1101000",
    "end": "1109370"
  },
  {
    "start": "1107000",
    "end": "1130000"
  },
  {
    "text": "interesting thing is kind of burning down the house right so let's say you have an old relational database and",
    "start": "1109370",
    "end": "1116590"
  },
  {
    "text": "you're using lambda to you know I don't know write things to it if you're not",
    "start": "1116590",
    "end": "1122330"
  },
  {
    "text": "careful you can do bad things right you can saturate your database connection pool and then make everything",
    "start": "1122330",
    "end": "1129399"
  },
  {
    "text": "unresponsive so luckily now we have concurrency controls so you can say that",
    "start": "1129399",
    "end": "1135230"
  },
  {
    "start": "1130000",
    "end": "1163000"
  },
  {
    "text": "you know this function has should have a maximum capacity of 200 right so you",
    "start": "1135230",
    "end": "1142549"
  },
  {
    "text": "cannot just saturate your whole database connection pool if your function talks",
    "start": "1142549",
    "end": "1149600"
  },
  {
    "text": "to a database this is I think this is just a little bit clunky at the moment",
    "start": "1149600",
    "end": "1154759"
  },
  {
    "text": "because you may have multiple functions these functions may have different usage profiles",
    "start": "1154759",
    "end": "1159929"
  },
  {
    "text": "they talk to their base a lot some may talk I don't know not as much there are various kind of approaches for",
    "start": "1159929",
    "end": "1167190"
  },
  {
    "start": "1163000",
    "end": "1210000"
  },
  {
    "text": "dealing with this so this is kind of an example produced by somebody from AWS",
    "start": "1167190",
    "end": "1172789"
  },
  {
    "text": "here you have like another lambda function that basically tells you whether you can or cannot open the",
    "start": "1172789",
    "end": "1180149"
  },
  {
    "text": "connection to a database because you know your connection who may be exhausted so I think this just shows us",
    "start": "1180149",
    "end": "1187619"
  },
  {
    "text": "that you know it's everything like service is getting more advanced but there are still some cases that require",
    "start": "1187619",
    "end": "1195629"
  },
  {
    "text": "work however if you do use DynamoDB then you'll find if you use service Aurora",
    "start": "1195629",
    "end": "1201570"
  },
  {
    "text": "then you find it's really only kind of for the more legacy relational databases that you have to be aware of this some",
    "start": "1201570",
    "end": "1211799"
  },
  {
    "start": "1210000",
    "end": "1319000"
  },
  {
    "text": "tips I think most of you should be aware of these tips you know obviously one",
    "start": "1211799",
    "end": "1218700"
  },
  {
    "text": "function equals one task so avoid having very fat monoliths don't you know create",
    "start": "1218700",
    "end": "1223980"
  },
  {
    "text": "you know a big fat monolith with lots of logic in a single lambda function no",
    "start": "1223980",
    "end": "1229950"
  },
  {
    "text": "state so statelessness is the magic sauce it's the glue if it's what",
    "start": "1229950",
    "end": "1235169"
  },
  {
    "text": "actually makes land are so scalable and so powerful design foe failure things",
    "start": "1235169",
    "end": "1241559"
  },
  {
    "text": "will fail like I said before set function concurrency to zero as a kill",
    "start": "1241559",
    "end": "1246629"
  },
  {
    "text": "switch so if you know your function is doing something crazy it's going out of control there's a thing called the",
    "start": "1246629",
    "end": "1253379"
  },
  {
    "text": "server's cancer right I think Rob grew from Nostrum coined that term it's",
    "start": "1253379",
    "end": "1258450"
  },
  {
    "text": "basically it happens when your function keeps instantiating again and again and just spreading so here's an example and",
    "start": "1258450",
    "end": "1265889"
  },
  {
    "text": "I've done this myself let's say you put a file into an s3 bucket and you can figure that a spree bucket to invoke",
    "start": "1265889",
    "end": "1272309"
  },
  {
    "text": "your lambda function right then that lambda function I don't know maybe it",
    "start": "1272309",
    "end": "1277350"
  },
  {
    "text": "writes back another file into the same as free bucket which invokes another",
    "start": "1277350",
    "end": "1283169"
  },
  {
    "text": "function and it just keeps going in circles what if you write two files back into",
    "start": "1283169",
    "end": "1288360"
  },
  {
    "text": "that espree bucket that wouldn't work two more functions and if we just spiral out of control so you can set function",
    "start": "1288360",
    "end": "1295650"
  },
  {
    "text": "concurrency to zero as a kill switch if something goes wrong incremental",
    "start": "1295650",
    "end": "1300810"
  },
  {
    "text": "architecture I think it's thought a jury thing I think if you're looking to sub books",
    "start": "1300810",
    "end": "1305850"
  },
  {
    "text": "servers just start building something you don't need to you know have it perfect from day one just build it",
    "start": "1305850",
    "end": "1311760"
  },
  {
    "text": "refine it understand how it works there would be my approach to take if I was",
    "start": "1311760",
    "end": "1318120"
  },
  {
    "text": "starting off today I am currently working on a book with Tim Magna and",
    "start": "1318120",
    "end": "1323970"
  },
  {
    "start": "1319000",
    "end": "1357000"
  },
  {
    "text": "your high curiosity on patents and architectures because we realized that",
    "start": "1323970",
    "end": "1330290"
  },
  {
    "text": "one thing that's preventing adoption of service architectures right how do you actually build scalable",
    "start": "1330290",
    "end": "1337950"
  },
  {
    "text": "reliable things it's hard right that's the original kind of for patents",
    "start": "1337950",
    "end": "1343590"
  },
  {
    "text": "book which is amazing it's brilliant 20 years old but but it's our reference but",
    "start": "1343590",
    "end": "1349680"
  },
  {
    "text": "we want to kind of write something for this generation you know and for people",
    "start": "1349680",
    "end": "1355500"
  },
  {
    "text": "who are looking to get into service so we started looking at various patents and how do they work in this new",
    "start": "1355500",
    "end": "1361650"
  },
  {
    "start": "1357000",
    "end": "1401000"
  },
  {
    "text": "interesting service world is there anything that's different should we be thinking of different",
    "start": "1361650",
    "end": "1366810"
  },
  {
    "text": "things and it's interesting when you kind of put dig deep into these patents you realize that they can actually be",
    "start": "1366810",
    "end": "1372870"
  },
  {
    "text": "quite complex you know you have been out we kind of know what it is right but then you start considering synchronous",
    "start": "1372870",
    "end": "1379560"
  },
  {
    "text": "fan-out versus asynchronous span out then you start thinking what about I don't know",
    "start": "1379560",
    "end": "1384630"
  },
  {
    "text": "transactional fan-out how would that work that doesn't work at all interesting questions I guess in the ten",
    "start": "1384630",
    "end": "1392880"
  },
  {
    "text": "or so minutes that I have left I wanted to run through a few interesting patterns that I have personally found",
    "start": "1392880",
    "end": "1398160"
  },
  {
    "text": "useful and I hope you will find useful too the first one is actually my favorite",
    "start": "1398160",
    "end": "1404640"
  },
  {
    "start": "1401000",
    "end": "1415000"
  },
  {
    "text": "one it's the API proxy pattern and it's such a great little pattern when you",
    "start": "1404640",
    "end": "1409980"
  },
  {
    "text": "have two systems that cannot talk to one another",
    "start": "1409980",
    "end": "1415280"
  },
  {
    "text": "so let's say you have a system a which you know is a JSON based system and it",
    "start": "1415280",
    "end": "1420960"
  },
  {
    "text": "talks and understands JSON and then you have system B which is an XML system and they're not comparable but they need to",
    "start": "1420960",
    "end": "1426840"
  },
  {
    "text": "talk to one another so one way to address this problem is obviously to begin modifying both systems to couple",
    "start": "1426840",
    "end": "1433290"
  },
  {
    "text": "them together they can now talk to one another is there a good way they have smart an alternative approach is to have",
    "start": "1433290",
    "end": "1439830"
  },
  {
    "text": "an API Gateway is to have a simple transformation function which takes a request from one of the system's",
    "start": "1439830",
    "end": "1446510"
  },
  {
    "text": "transform it transforms it to kind of to",
    "start": "1446510",
    "end": "1451530"
  },
  {
    "text": "request that the other system can understand and basically mediates between these two systems and I've seen",
    "start": "1451530",
    "end": "1457410"
  },
  {
    "text": "this done in production to like a very very effective degree so if you do need",
    "start": "1457410",
    "end": "1463200"
  },
  {
    "text": "to have two systems talking to one another consider doing something like this it's very quick very easy simple fan-out",
    "start": "1463200",
    "end": "1471630"
  },
  {
    "start": "1469000",
    "end": "1478000"
  },
  {
    "text": "again it's you know allowing multiple endpoints to receive a copy of an input",
    "start": "1471630",
    "end": "1476820"
  },
  {
    "text": "event I think a lot of us have seen it before so you could implement it in a",
    "start": "1476820",
    "end": "1483210"
  },
  {
    "start": "1478000",
    "end": "1500000"
  },
  {
    "text": "few different ways you could have a lambda function just in a synchronously invoke other functions a better way to",
    "start": "1483210",
    "end": "1491040"
  },
  {
    "text": "do it is to use something like SNS which will turn out and invoke other lambda",
    "start": "1491040",
    "end": "1497760"
  },
  {
    "text": "functions for you this is a good one",
    "start": "1497760",
    "end": "1503280"
  },
  {
    "start": "1500000",
    "end": "1520000"
  },
  {
    "text": "inline stream transform so you can transmit data between systems right you",
    "start": "1503280",
    "end": "1510780"
  },
  {
    "text": "can use a stream to do it and you can create a transformation function which",
    "start": "1510780",
    "end": "1516240"
  },
  {
    "text": "will basically transform your data as it comes into the stream so here's what I",
    "start": "1516240",
    "end": "1521580"
  },
  {
    "start": "1520000",
    "end": "1580000"
  },
  {
    "text": "mean so you may have produced a a that pushes data on to a stream you can have",
    "start": "1521580",
    "end": "1528150"
  },
  {
    "text": "a transformation function that kind of just sits on top of it and transforms data transforms wherever is pushed onto",
    "start": "1528150",
    "end": "1535230"
  },
  {
    "text": "the stream then it places that particular bit of",
    "start": "1535230",
    "end": "1541519"
  },
  {
    "text": "data back on to the stream to be consumed by some other consumers so if you use unisys firehose for example this",
    "start": "1541519",
    "end": "1549349"
  },
  {
    "text": "is a feature that's supported right so you don't need to have two separate streams you just have one stream with a",
    "start": "1549349",
    "end": "1555289"
  },
  {
    "text": "transformation function which sits on top I mean yeah you could build it yourself with two separate streams that's completely fine you can do it but",
    "start": "1555289",
    "end": "1563479"
  },
  {
    "text": "this is FiOS actually supports having kind of a function that sits on top and",
    "start": "1563479",
    "end": "1569869"
  },
  {
    "text": "transforms data as it comes in so it's incredibly incredibly powerful so we are",
    "start": "1569869",
    "end": "1574970"
  },
  {
    "text": "please check out if you are kind of doing this kind of work I've been",
    "start": "1574970",
    "end": "1582919"
  },
  {
    "start": "1580000",
    "end": "1636000"
  },
  {
    "text": "getting signs that I should probably wrap up very soon I guess how do you get started this is a very interesting event",
    "start": "1582919",
    "end": "1591200"
  },
  {
    "text": "driven service world it's growing bigger by the day we can feel it we talked to a lot of people who are building systems",
    "start": "1591200",
    "end": "1598970"
  },
  {
    "text": "with service architectures who are creating lambda functions building API",
    "start": "1598970",
    "end": "1604759"
  },
  {
    "text": "gateways and just doing amazing things please check out a cloud guru for with",
    "start": "1604759",
    "end": "1612289"
  },
  {
    "text": "such service we have a lot of good stuff there that you can have a look at and there's this book that I mentioned",
    "start": "1612289",
    "end": "1617779"
  },
  {
    "text": "before probably pretty good I don't know so I'm actually working on a second",
    "start": "1617779",
    "end": "1625099"
  },
  {
    "text": "edition right now please follow iCloud guru a cloud guru and myself we",
    "start": "1625099",
    "end": "1630700"
  },
  {
    "text": "typically like to tweet a lot about serverless things that's it from me I",
    "start": "1630700",
    "end": "1638929"
  },
  {
    "start": "1636000",
    "end": "1651000"
  },
  {
    "text": "hope that wasn't too quick I know that the slides and the video will be available so you can always go back and",
    "start": "1638929",
    "end": "1644720"
  },
  {
    "text": "review but if you have any questions please let me know please ask with email",
    "start": "1644720",
    "end": "1649729"
  },
  {
    "text": "I'd love to chat to you if you have any questions or comments so here you",
    "start": "1649729",
    "end": "1654830"
  },
  {
    "start": "1651000",
    "end": "1685000"
  },
  {
    "text": "actually have plenty of time left oh if you want to keep talking no it's fine I can I can take questions so we have a",
    "start": "1654830",
    "end": "1660109"
  },
  {
    "text": "few questions yes when the Wi-Fi is ready",
    "start": "1660109",
    "end": "1665679"
  },
  {
    "text": "so any questions from the audience while the website is loading okay",
    "start": "1666650",
    "end": "1673400"
  },
  {
    "text": "as if you actually we're going to start over here and I'll come back to",
    "start": "1678370",
    "end": "1684360"
  },
  {
    "start": "1685000",
    "end": "1793000"
  },
  {
    "text": "so when you're using service is there a way to avoid vendor locking yeah it's an",
    "start": "1685760",
    "end": "1692360"
  },
  {
    "text": "interesting question about when the locking it's it's actually funny I don't",
    "start": "1692360",
    "end": "1698270"
  },
  {
    "text": "think that you're probably thinking offender locking in terms of lambda right I'm going to use lambda now be",
    "start": "1698270",
    "end": "1703280"
  },
  {
    "text": "locked into AWS I think when the login actually happens when you use all the",
    "start": "1703280",
    "end": "1708560"
  },
  {
    "text": "other services right it's when you use as free or DynamoDB it's the other with",
    "start": "1708560",
    "end": "1714770"
  },
  {
    "text": "lambda because it is just your code you can pick it up you can wrap it and you can you know transform it you can push",
    "start": "1714770",
    "end": "1722060"
  },
  {
    "text": "it across to Azure or DCP it can be done and kind of the recommended approach to",
    "start": "1722060",
    "end": "1727130"
  },
  {
    "text": "building lambda functions is that you write your code as a library basically and then you can just invoke it from a",
    "start": "1727130",
    "end": "1733100"
  },
  {
    "text": "lambda function right so lambda becomes just a thin layer so I",
    "start": "1733100",
    "end": "1739280"
  },
  {
    "text": "don't think that the issue really is moving functions from one vendor to",
    "start": "1739280",
    "end": "1745430"
  },
  {
    "text": "another it's more about the other services that you might be using within your service architecture",
    "start": "1745430",
    "end": "1751670"
  },
  {
    "text": "now those yeah that's a good question there you know you need to really assess",
    "start": "1751670",
    "end": "1757220"
  },
  {
    "text": "and see if another bandit that you're moving to has similar services it'll do",
    "start": "1757220",
    "end": "1763370"
  },
  {
    "text": "a single thing thank you",
    "start": "1763370",
    "end": "1768790"
  },
  {
    "text": "so I had a question in the back",
    "start": "1769530",
    "end": "1773000"
  },
  {
    "text": "you already touched on a little bit with the RDS and lambda being such as the legacy databases I was going to ask if",
    "start": "1778060",
    "end": "1784180"
  },
  {
    "text": "you had any kind of war stories about large connection pools and you kind of",
    "start": "1784180",
    "end": "1789610"
  },
  {
    "text": "went over with one slide but just any any feedback and insight you had yeah great question so look I don't have any",
    "start": "1789610",
    "end": "1797440"
  },
  {
    "start": "1793000",
    "end": "1824000"
  },
  {
    "text": "war stories myself because we use dynamodb and we use it from the very",
    "start": "1797440",
    "end": "1802450"
  },
  {
    "text": "start so there's but it is an issue and I know people have faced it so that's why I",
    "start": "1802450",
    "end": "1808270"
  },
  {
    "text": "wanted to kind of highlight for people who are considering using relational databases with servers well with",
    "start": "1808270",
    "end": "1813430"
  },
  {
    "text": "functions that you need to be aware of this particular issue if you do use DynamoDB if you use service Aurora then",
    "start": "1813430",
    "end": "1820150"
  },
  {
    "text": "yeah you don't have that same issue it's absolutely ok so the website has loaded",
    "start": "1820150",
    "end": "1826510"
  },
  {
    "start": "1824000",
    "end": "2030000"
  },
  {
    "text": "so from the app we have a lot of questions and so we'll start with this one what are the things you wish the",
    "start": "1826510",
    "end": "1832660"
  },
  {
    "text": "lambda ecosystem had Wow what are the things I wish the lambda equity great",
    "start": "1832660",
    "end": "1838270"
  },
  {
    "text": "question look I wish lambda ran for longer than five minutes for example that would be great yeah who's with me",
    "start": "1838270",
    "end": "1844720"
  },
  {
    "text": "yep there are people with me excellent yes so they'll be great you know it's",
    "start": "1844720",
    "end": "1851580"
  },
  {
    "text": "kind of a simple thing that could do a lot for us you know more languages would",
    "start": "1851580",
    "end": "1858970"
  },
  {
    "text": "be great there are certain languages that I would love to see that are not supported at the moment we finally got",
    "start": "1858970",
    "end": "1863980"
  },
  {
    "text": "go-go is now supported with lambda which is excellent so thank you to the service",
    "start": "1863980",
    "end": "1870010"
  },
  {
    "text": "team it's I don't know I think I have a whole list of features that I would love",
    "start": "1870010",
    "end": "1877480"
  },
  {
    "text": "to see happen and I'm sure that the service that the AWS team is working on",
    "start": "1877480",
    "end": "1883180"
  },
  {
    "text": "it now do you guys want to see any features is there anything in particular that you think",
    "start": "1883180",
    "end": "1888460"
  },
  {
    "text": "lambda needs this will go in video so the service team can watch this and implemental speeches fix cold start",
    "start": "1888460",
    "end": "1897960"
  },
  {
    "text": "server sent events WebSockets maybe yeah yeah yeah yeah we've got a list here I",
    "start": "1897960",
    "end": "1906210"
  },
  {
    "text": "actually don't think that cold stats are such a big issue yeah I mean it's it",
    "start": "1906210",
    "end": "1914220"
  },
  {
    "text": "it's fixable yeah I mean if you are experiencing cold starts there are ways to kind of optimize for that you know",
    "start": "1914220",
    "end": "1921630"
  },
  {
    "text": "you can invoke functions on a schedule like on a scheduler to keep them warm I know it's not ideal but there are ways",
    "start": "1921630",
    "end": "1928020"
  },
  {
    "text": "around it and for our platform at least it's actually we don't see that problem because I think our lambdas get hit so",
    "start": "1928020",
    "end": "1934860"
  },
  {
    "text": "often they never get to go cold and fail so they're always bummed out but yeah",
    "start": "1934860",
    "end": "1940290"
  },
  {
    "text": "for the people who do experience this problem yeah I think there are ways we can kind of work around and try to solve",
    "start": "1940290",
    "end": "1947550"
  },
  {
    "text": "them so WebSocket server sent events any other requests sqs triggers I heard that",
    "start": "1947550",
    "end": "1955290"
  },
  {
    "text": "it's coming yeah team if you're watching this please sqs triggers I think we had",
    "start": "1955290",
    "end": "1962760"
  },
  {
    "text": "a question in the back",
    "start": "1962760",
    "end": "1965690"
  },
  {
    "text": "yes yep payload limits even when you invoke a lambda function right why as an",
    "start": "1972740",
    "end": "1979519"
  },
  {
    "text": "S let's say the payload the event that you can send from SNS to lambda is only",
    "start": "1979519",
    "end": "1985730"
  },
  {
    "text": "128 kilobytes so you know it would be good to increase the athletes so yeah I think there are a lot of features so I'm",
    "start": "1985730",
    "end": "1992149"
  },
  {
    "text": "sure that the team at AWS is busy implementing a lot of them faster API",
    "start": "1992149",
    "end": "1998720"
  },
  {
    "text": "gave for you it's it's an interesting one how often do you do with your API gateways it's okay",
    "start": "1998720",
    "end": "2006629"
  },
  {
    "text": "yeah",
    "start": "2015230",
    "end": "2017799"
  },
  {
    "text": "so excellent so Brian is requesting faster API gateway delete thank you okay",
    "start": "2024710",
    "end": "2031220"
  },
  {
    "start": "2030000",
    "end": "2142000"
  },
  {
    "text": "so back to the app we have more questions so let's go with any thought",
    "start": "2031220",
    "end": "2036799"
  },
  {
    "text": "on how to integrate with a legacy system like a mainframe in traditional infrastructure from and from a service",
    "start": "2036799",
    "end": "2043429"
  },
  {
    "text": "system yeah so integration of legacy systems so what I'm seeing at the moment is that people kind of gradually",
    "start": "2043429",
    "end": "2050480"
  },
  {
    "text": "gradually introduce lambdas or service techniques into their legacy systems and",
    "start": "2050480",
    "end": "2056839"
  },
  {
    "text": "what they do is that they you know they find the feature that needs to be implemented implemented something small",
    "start": "2056839",
    "end": "2061908"
  },
  {
    "text": "they perhaps implement it with one or two lambdas right just to get some experience to get some confidence that",
    "start": "2061909",
    "end": "2067849"
  },
  {
    "text": "this works they see how resilient and robust and scalable it is and as they build kind of confidence that they begin",
    "start": "2067849",
    "end": "2074510"
  },
  {
    "text": "implementing more and more features with a service approach right so they add",
    "start": "2074510",
    "end": "2079638"
  },
  {
    "text": "more landis or they begin to add other managed services into the mix and",
    "start": "2079639",
    "end": "2084819"
  },
  {
    "text": "suddenly you can get this interesting kind of I wouldn't call it a monster but",
    "start": "2084819",
    "end": "2090770"
  },
  {
    "text": "it's a hybrid right so you have your legacy system with some service components and that's actually not a bad",
    "start": "2090770",
    "end": "2096500"
  },
  {
    "text": "thing because your application may actually work better at least some of",
    "start": "2096500",
    "end": "2103010"
  },
  {
    "text": "its components will be most capable than before yeah I think that's the best way that's",
    "start": "2103010",
    "end": "2108380"
  },
  {
    "text": "the best kind of recommendation that I can give just gradually implement little",
    "start": "2108380",
    "end": "2113450"
  },
  {
    "text": "features little by little and make them service so the next question is how does",
    "start": "2113450",
    "end": "2119030"
  },
  {
    "text": "a cloud guru use API gateway caching caching how does well we have caching enabled I",
    "start": "2119030",
    "end": "2125480"
  },
  {
    "text": "cannot give you like a very very detailed technical response but you can",
    "start": "2125480",
    "end": "2131510"
  },
  {
    "text": "come and talk to me later we can investigate it together who isn't it who asked the question perfect let's chat",
    "start": "2131510",
    "end": "2140359"
  },
  {
    "text": "after so the next one is what tools are you using the provision and automate the",
    "start": "2140359",
    "end": "2146590"
  },
  {
    "start": "2142000",
    "end": "2231000"
  },
  {
    "text": "deployment process have you suffered from DDoS attacks how does AWS lambda react to that yeah",
    "start": "2146590",
    "end": "2153240"
  },
  {
    "text": "good question so we use service framework for provisioning and deployment of our",
    "start": "2153240",
    "end": "2159040"
  },
  {
    "text": "entire service architecture well so",
    "start": "2159040",
    "end": "2164050"
  },
  {
    "text": "ghost framework and cloud formation I should say so we use both of them in concert no we haven't been dost please",
    "start": "2164050",
    "end": "2171220"
  },
  {
    "text": "no one do it please obviously neural especially the two people in the front",
    "start": "2171220",
    "end": "2177460"
  },
  {
    "text": "row it's obviously you know APA gateway has",
    "start": "2177460",
    "end": "2182590"
  },
  {
    "text": "some protections against DDoS attacks and it will basically start kind of",
    "start": "2182590",
    "end": "2189190"
  },
  {
    "text": "limiting API requests if that were to happen right so you get a four to nine the response code if you begin abusing",
    "start": "2189190",
    "end": "2196930"
  },
  {
    "text": "your API gateway so look obviously those attacks happen and they're hard to",
    "start": "2196930",
    "end": "2201970"
  },
  {
    "text": "defend against but luckily you know we've been able to cope our system has",
    "start": "2201970",
    "end": "2207070"
  },
  {
    "text": "scaled to all of the demand that would need it so far two more questions and",
    "start": "2207070",
    "end": "2214660"
  },
  {
    "text": "then we'll go yeah we'll go to you yeah actually Brian if you want to go ahead and ask your question go for it",
    "start": "2214660",
    "end": "2221730"
  },
  {
    "text": "this is go to Chicago and the question was are containers still useful I feel",
    "start": "2224900",
    "end": "2232520"
  },
  {
    "start": "2231000",
    "end": "2336000"
  },
  {
    "text": "like we need to be very careful when I answer this question especially given that it's recorded and",
    "start": "2232520",
    "end": "2238400"
  },
  {
    "text": "on camera and I may not be invited back next year containers are very useful now of course",
    "start": "2238400",
    "end": "2245960"
  },
  {
    "text": "containers are useful I mean of course I mean containers are the enabling technology for servers right that's how",
    "start": "2245960",
    "end": "2252650"
  },
  {
    "text": "functions work actually one of the previous speakers use this same line they are the enabling technology when",
    "start": "2252650",
    "end": "2259550"
  },
  {
    "text": "you land the function runs it's basically a container that spins up execute your code so yeah it's",
    "start": "2259550",
    "end": "2265220"
  },
  {
    "text": "absolutely necessary would I want to actually run my own complete containers orchestrate them maybe not unless I had",
    "start": "2265220",
    "end": "2275060"
  },
  {
    "text": "to I have seen systems which are a mixed hybrid of containers and servers and",
    "start": "2275060",
    "end": "2281090"
  },
  {
    "text": "it's kind of used in cases where servers just doesn't work right so let's say we",
    "start": "2281090",
    "end": "2286160"
  },
  {
    "text": "have to do something and it takes longer than five minutes and we cannot decompose and paralyze a task right they",
    "start": "2286160",
    "end": "2293330"
  },
  {
    "text": "cannot use MapReduce so yeah maybe your function then should then spin up a container execute a job that you want to",
    "start": "2293330",
    "end": "2301280"
  },
  {
    "text": "happen that you need to happen and then kill off the container I've seen a company trying to do 3d rendering in",
    "start": "2301280",
    "end": "2307790"
  },
  {
    "text": "lambda that's hard right that's that's that's a very hard task and they were asking me how do we divide the jobs so",
    "start": "2307790",
    "end": "2314150"
  },
  {
    "text": "we can you know pan out to a thousand lambdas and do that 3d scene rendering",
    "start": "2314150",
    "end": "2320570"
  },
  {
    "text": "and you know maybe it's not possible I don't know so yes so I think there are",
    "start": "2320570",
    "end": "2328460"
  },
  {
    "text": "course still use cases where you have to have something running longer than five minutes of course so yes we love",
    "start": "2328460",
    "end": "2335300"
  },
  {
    "text": "containers the next question is when AWS launches new services how does a cloud guru go",
    "start": "2335300",
    "end": "2342440"
  },
  {
    "start": "2336000",
    "end": "2419000"
  },
  {
    "text": "about learning it then creating content to teach it any processes yeah I mean",
    "start": "2342440",
    "end": "2347510"
  },
  {
    "text": "look this is something that we do day in and day out right so we are in the",
    "start": "2347510",
    "end": "2353150"
  },
  {
    "text": "business of Education and we have to stay up to date with all the new events",
    "start": "2353150",
    "end": "2359390"
  },
  {
    "text": "changes happenings that happened within AWS and everywhere else so absolutely we stay we our instructors and you can talk",
    "start": "2359390",
    "end": "2367490"
  },
  {
    "text": "to them directly later but you know they read logs they perform a lot of experiments they build things themselves",
    "start": "2367490",
    "end": "2373250"
  },
  {
    "text": "to make things open-source they talk to the community they do a lot of things we",
    "start": "2373250",
    "end": "2379640"
  },
  {
    "text": "do this show called AWS this week and we do it every week where we try to summarize in five minutes all the",
    "start": "2379640",
    "end": "2386720"
  },
  {
    "text": "changes that has that have happened to AWS in that week and it's insane because we always have content every week like",
    "start": "2386720",
    "end": "2393650"
  },
  {
    "text": "it just it's amazing it never stops right so every week we like alright what we're going to talk about and there's this list of all the changes additions",
    "start": "2393650",
    "end": "2400190"
  },
  {
    "text": "it's incredible so yeah it's I guess look stay my advice stay engaged with",
    "start": "2400190",
    "end": "2406550"
  },
  {
    "text": "the community follow websites like a cloud guru talk to the community read updates look at blogs look at happy news",
    "start": "2406550",
    "end": "2413840"
  },
  {
    "text": "that's what I do personally a lot of hacking news yeah check out our courses okay last question",
    "start": "2413840",
    "end": "2420500"
  },
  {
    "start": "2419000",
    "end": "2506000"
  },
  {
    "text": "any concurrency issue war stories and you can currency issues yeah yeah and",
    "start": "2420500",
    "end": "2426170"
  },
  {
    "text": "we've had to raise our concurrency limit quite a few times so you can do it you",
    "start": "2426170",
    "end": "2431330"
  },
  {
    "text": "can basically message AWS and ask to raise your concurrency limit if you're",
    "start": "2431330",
    "end": "2438440"
  },
  {
    "text": "starting to hit the concurrency limits of your account so a thousand kind of is",
    "start": "2438440",
    "end": "2444440"
  },
  {
    "text": "the default concurrency limit for an account but you can raise that limit to",
    "start": "2444440",
    "end": "2451100"
  },
  {
    "text": "something higher and we've had it happen and as soon as it happens we obviously monitor our logs we have dashboards in",
    "start": "2451100",
    "end": "2457700"
  },
  {
    "text": "cloud watch and we monitor all errors and everything that happens and as soon",
    "start": "2457700",
    "end": "2463190"
  },
  {
    "text": "as we start seeing that yeah we're hearing that ceiling we quickly get in touch with AWS and raise our concurrency",
    "start": "2463190",
    "end": "2469640"
  },
  {
    "text": "minutes further we also have a look at the profile of our functions but what is actually happening why you know is something abnormal why",
    "start": "2469640",
    "end": "2477110"
  },
  {
    "text": "are we hitting these limits or it could just be because we're growing right because we have more students watching our content and it's totally fine to",
    "start": "2477110",
    "end": "2485080"
  },
  {
    "text": "reach those limits so look if you start hitting those limits try to understand",
    "start": "2485080",
    "end": "2490760"
  },
  {
    "text": "why it's happening and if it's normal then just yeah apply to raise your limit",
    "start": "2490760",
    "end": "2496930"
  },
  {
    "text": "great well thank you very much Peter let's give Peter one last round of applause [Applause]",
    "start": "2496930",
    "end": "2508209"
  }
]