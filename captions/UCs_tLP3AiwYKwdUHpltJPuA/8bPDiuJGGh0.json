[
  {
    "start": "0",
    "end": "58000"
  },
  {
    "text": "i am going to be doing some live coding in this talk a lot of live coding actually so i hope you're up for that um",
    "start": "14000",
    "end": "19520"
  },
  {
    "text": "it's interesting to do in a cinema because life coding is always a bit of a tight rope walk if i crash and die",
    "start": "19520",
    "end": "26400"
  },
  {
    "text": "you've got very comfy seats to watch my death in and you know you can just pretend it's a low budget bond film or",
    "start": "26400",
    "end": "32800"
  },
  {
    "text": "something that will um so let me tell you a story years ago i",
    "start": "32800",
    "end": "39040"
  },
  {
    "text": "had a startup with some friends of mine i'm not that old a few years ago not",
    "start": "39040",
    "end": "44320"
  },
  {
    "text": "like loads of years ago and um we had that rare thing in a startup in that we'd actually launched",
    "start": "44320",
    "end": "50960"
  },
  {
    "text": "the product into the world and started to get customers and we were starting to make money which is very",
    "start": "50960",
    "end": "56840"
  },
  {
    "text": "satisfying so one quiet friday afternoon i hacked together this thing",
    "start": "56840",
    "end": "63440"
  },
  {
    "start": "58000",
    "end": "150000"
  },
  {
    "text": "just because it was interesting we were interesting our startup was working right so i hacked together this thing that would show us how much stuff we'd",
    "start": "63440",
    "end": "70720"
  },
  {
    "text": "sold we had um a gold business and you know we were gradually starting",
    "start": "70720",
    "end": "76000"
  },
  {
    "text": "to sell some gold so i hacked together this web page that would show people total sales since the startup began",
    "start": "76000",
    "end": "83840"
  },
  {
    "text": "and i wanted it to be a web page because i wanted everyone in the organization to be able to see",
    "start": "83840",
    "end": "89280"
  },
  {
    "text": "and it was fun and that number grew and you know on a quiet day you'd mash refresh and it would jump up a little",
    "start": "89280",
    "end": "94320"
  },
  {
    "text": "bit on a busy day you'd mash refresh and it would jump up quite a lot it was a nice motivating thing",
    "start": "94320",
    "end": "101200"
  },
  {
    "text": "um but it was it was hacked together in an afternoon and it was never great it was basically",
    "start": "101200",
    "end": "107280"
  },
  {
    "text": "not much more than an sql query spitting out html tags it's fairly horrible",
    "start": "107280",
    "end": "112399"
  },
  {
    "text": "it got slower and slower as the database grew and grew i always wanted to go back and rewrite",
    "start": "112399",
    "end": "118560"
  },
  {
    "text": "it but i never had the chance because it was just below that mission critical line it",
    "start": "118560",
    "end": "123600"
  },
  {
    "text": "was nice to have um tell them i'm not yet",
    "start": "123600",
    "end": "129840"
  },
  {
    "text": "so um as a way of demonstrating a few different technologies and as a way of",
    "start": "131200",
    "end": "137520"
  },
  {
    "text": "revisiting this wart in my past career we're going to build a live dashboard streaming sales for a fictional company",
    "start": "137520",
    "end": "145440"
  },
  {
    "text": "so here we go man diving headlong into lines of code that's me",
    "start": "145440",
    "end": "152160"
  },
  {
    "start": "150000",
    "end": "2119000"
  },
  {
    "text": "so can everyone see that font size especially at the back of course you can it's a cinema it's a",
    "start": "153280",
    "end": "158640"
  },
  {
    "text": "huge screen this is great so i have just to prove there's nothing up",
    "start": "158640",
    "end": "164400"
  },
  {
    "text": "my sleeve i have this completely empty directory right",
    "start": "164400",
    "end": "169440"
  },
  {
    "text": "so where should we start i am going to make a server directory and i am going to i think in another",
    "start": "169440",
    "end": "177440"
  },
  {
    "text": "window i'm going to start here uh mp mpx the",
    "start": "177440",
    "end": "183040"
  },
  {
    "text": "node package manager executory thing create react app",
    "start": "183040",
    "end": "188319"
  },
  {
    "text": "the reason i'm doing that first is it takes ages so hopefully sometime by the time we reach that point in the talk it",
    "start": "188319",
    "end": "194159"
  },
  {
    "text": "will have finished running oh no i've got to type client there we go",
    "start": "194159",
    "end": "200640"
  },
  {
    "text": "okay so we'll leave that running first thing i'm going to do is connect to the database and this is a kafka database",
    "start": "200640",
    "end": "207280"
  },
  {
    "text": "and i'm going to show you that i've imagine this is our production database or hopefully a read-only copy or",
    "start": "207280",
    "end": "212959"
  },
  {
    "text": "something and i have got sales happening in the organization",
    "start": "212959",
    "end": "220239"
  },
  {
    "text": "here we go this part's fiction but you can imagine it would be a real company streaming",
    "start": "220239",
    "end": "226000"
  },
  {
    "text": "this endless list of sales it's all dummy data but the price is what we're interested in can we turn",
    "start": "226000",
    "end": "232560"
  },
  {
    "text": "that into a dashboard in less than a lunchtime's worth of coding that's the question",
    "start": "232560",
    "end": "238400"
  },
  {
    "text": "so hopefully we can without too many hiccups we'll start by um",
    "start": "238400",
    "end": "244640"
  },
  {
    "text": "summarizing that data right kafka is kind of an interesting database because it kind of behaves like an event",
    "start": "244640",
    "end": "251760"
  },
  {
    "text": "it behaves a lot like an event stream it also behaves a bit like a relational database",
    "start": "251760",
    "end": "257199"
  },
  {
    "text": "in that you have series of facts ever growing in time but you can also very easily summarize those facts into the",
    "start": "257199",
    "end": "264639"
  },
  {
    "text": "state of the world that you're interested in so i can do something like create oh",
    "start": "264639",
    "end": "270400"
  },
  {
    "text": "hang on uh i am going to i think i might have give me one second",
    "start": "270400",
    "end": "278240"
  },
  {
    "text": "because i think i might have an old version of this talk already running",
    "start": "278240",
    "end": "284160"
  },
  {
    "text": "so ignore this bit it never happened",
    "start": "284639",
    "end": "291280"
  },
  {
    "text": "i told you it was a tightrope there we go okay so i am going to create a table that",
    "start": "291360",
    "end": "297040"
  },
  {
    "text": "summarizes that stream of purchases i'm going to call it dashboard and i'm going to create it with a select",
    "start": "297040",
    "end": "303199"
  },
  {
    "text": "query so select the sum of the price of things we've sold",
    "start": "303199",
    "end": "308880"
  },
  {
    "text": "as the total from that stream of purchase data",
    "start": "308880",
    "end": "314800"
  },
  {
    "text": "i need to group it because aggregate queries always need a group by clause i don't have a natural grouping",
    "start": "314800",
    "end": "321039"
  },
  {
    "text": "key so i'm just going to make one up uh yeah",
    "start": "321039",
    "end": "328080"
  },
  {
    "text": "that should give me a summary okay and that little query runs in the",
    "start": "328240",
    "end": "335199"
  },
  {
    "text": "background gradually updating that database that table so if i select star from dashboard",
    "start": "335199",
    "end": "342960"
  },
  {
    "text": "i get the total and if i do it again and again you should see it gradually grows right",
    "start": "342960",
    "end": "349280"
  },
  {
    "text": "now i've worked at companies where that's it we're finished if marketing will not want to know the sales totals they better learn sql",
    "start": "349280",
    "end": "355840"
  },
  {
    "text": "because no one's going to give them any more help i think we can be a bit more friendly than that",
    "start": "355840",
    "end": "361360"
  },
  {
    "text": "so we have this stream of purchases going in we have a summary uh the next thing",
    "start": "361360",
    "end": "366880"
  },
  {
    "text": "to realize is that an interesting thing about kafka every table which summarizes the state",
    "start": "366880",
    "end": "373440"
  },
  {
    "text": "of the world can also be seen as a series of events right we've got this static table what's our",
    "start": "373440",
    "end": "379440"
  },
  {
    "text": "total we can also look at it as is it can we can you give me a stream of",
    "start": "379440",
    "end": "384880"
  },
  {
    "text": "the total updating in real time which is really easy we just do select star from dashboard emit changes",
    "start": "384880",
    "end": "392319"
  },
  {
    "text": "and now it becomes itself a stream of summary data",
    "start": "392319",
    "end": "397680"
  },
  {
    "text": "that's what we're going to need to hook into in order to build this dashboard okay so so it's a one-row static table we're",
    "start": "397680",
    "end": "405280"
  },
  {
    "text": "always subscribing to it to see the changes in real time so we'll stop there that's it for the",
    "start": "405280",
    "end": "411440"
  },
  {
    "text": "database next step we need to go into that server",
    "start": "411440",
    "end": "416960"
  },
  {
    "text": "directory and write i'm going to write a websocket server because i think the websocket server is",
    "start": "416960",
    "end": "422160"
  },
  {
    "text": "the right choice for live streaming data right i'm gonna do it in python any python",
    "start": "422160",
    "end": "428319"
  },
  {
    "text": "programmers here you can critique my python code afterwards thank you um",
    "start": "428319",
    "end": "435599"
  },
  {
    "text": "write it to devnet um i'm going to start with the virtual environment",
    "start": "435599",
    "end": "441120"
  },
  {
    "text": "um and i always call them in but that's a bit boring so let's call it go to for this",
    "start": "441120",
    "end": "446560"
  },
  {
    "text": "start of an isolated python environment and i will say source can you see the",
    "start": "446560",
    "end": "452479"
  },
  {
    "text": "code at the bottom yeah i'm not that tall i'm not blocking it good source go to",
    "start": "452479",
    "end": "458960"
  },
  {
    "text": "um bin activate and now we have an isolated python environment",
    "start": "458960",
    "end": "465120"
  },
  {
    "text": "so we need a few packages here i'm i've said i'm going to write a websocket server so we need",
    "start": "465120",
    "end": "470800"
  },
  {
    "text": "the websocket package i know i'm going to need some json wrangling so i'm going to pull in",
    "start": "470800",
    "end": "476879"
  },
  {
    "text": "simple.json and i'm connecting to a kafka database so i'm going to use the confluent kafka",
    "start": "476879",
    "end": "483599"
  },
  {
    "text": "drivers let's install that and we can start to write some python code",
    "start": "483599",
    "end": "490639"
  },
  {
    "text": "okay on to an actual editor",
    "start": "490639",
    "end": "496639"
  },
  {
    "text": "here we go uh so usual preamble user bin m python",
    "start": "496639",
    "end": "505680"
  },
  {
    "text": "how do you write a websocket server in python that connects to a kafka database",
    "start": "505680",
    "end": "511120"
  },
  {
    "text": "let's split it up into two bits let's start with a websocket server so to write a websocket server i'm going",
    "start": "511120",
    "end": "518320"
  },
  {
    "text": "to define an asynchronous main function which says",
    "start": "518320",
    "end": "524959"
  },
  {
    "text": "sorry async with a websocket server",
    "start": "525440",
    "end": "530800"
  },
  {
    "text": "and i need to give it a function that handles each client as it connects so",
    "start": "532560",
    "end": "537600"
  },
  {
    "text": "let's just call that handle connection i tell it where to bind to",
    "start": "537600",
    "end": "542720"
  },
  {
    "text": "and i give it a port could j yeah let's actually let's just do that for now because that will be",
    "start": "542720",
    "end": "548640"
  },
  {
    "text": "illustrative import websockets and then we're in a slightly different world with",
    "start": "548640",
    "end": "554399"
  },
  {
    "text": "asynchronous functions so instead of just calling main directly i need to call it like that",
    "start": "554399",
    "end": "559600"
  },
  {
    "text": "but other than that that's pretty good import async io",
    "start": "559600",
    "end": "565760"
  },
  {
    "text": "and let's define this function the connection handler i'm not gonna do",
    "start": "565760",
    "end": "570880"
  },
  {
    "text": "much with this for now but we'll gradually expand it out connection handler in this library takes two",
    "start": "570880",
    "end": "576320"
  },
  {
    "text": "arguments the first is the connection itself and the second is the uri path that the",
    "start": "576320",
    "end": "582240"
  },
  {
    "text": "client asked for which we're going to ignore for the sake of this and i'm just going to say um when we get",
    "start": "582240",
    "end": "589120"
  },
  {
    "text": "that let's just send a message hello world",
    "start": "589120",
    "end": "594320"
  },
  {
    "text": "nah that's boring hello go-to how about that much better",
    "start": "594320",
    "end": "599839"
  },
  {
    "text": "hang um uh so oh yeah so the thing i need to add in here we are starting up the websocket server",
    "start": "603279",
    "end": "609440"
  },
  {
    "text": "and doing what at the moment there isn't anything really to do but we don't want it to",
    "start": "609440",
    "end": "614560"
  },
  {
    "text": "finish we need this websocket server to just stay up doing nothing listening for connections",
    "start": "614560",
    "end": "620720"
  },
  {
    "text": "so i'm going to do this little async trick to make it just hang there waiting on a future that never gets filled",
    "start": "620720",
    "end": "628000"
  },
  {
    "text": "and that should give me an absolutely bare-bones python websocket server",
    "start": "628000",
    "end": "633920"
  },
  {
    "text": "let's have a look",
    "start": "633920",
    "end": "636800"
  },
  {
    "text": "shouldn't say anything but if i connect to it there's a really useful tool for testing websocket servers it's like an",
    "start": "639440",
    "end": "645200"
  },
  {
    "text": "aside tip ws if you've ever used telnet to connect to networking systems or curl",
    "start": "645200",
    "end": "650720"
  },
  {
    "text": "to test http servers ws is your equivalent for websocket servers",
    "start": "650720",
    "end": "656000"
  },
  {
    "text": "and you can just say that and that's the absolute minimal websocket client",
    "start": "656000",
    "end": "662320"
  },
  {
    "text": "hello go to it connects and it closes commit immediately",
    "start": "662320",
    "end": "668480"
  },
  {
    "text": "so what should we do next i'm going to start by throwing in that same trick to make the client stay open indefinitely",
    "start": "668480",
    "end": "677040"
  },
  {
    "text": "and then i think that's what i need for the websocket server at this stage",
    "start": "677040",
    "end": "682959"
  },
  {
    "text": "so the next step is to connect to the database and start getting the interesting data so we can start sending it out to people",
    "start": "682959",
    "end": "690000"
  },
  {
    "text": "for that i'm going to need to define a function that runs what's called a consumer",
    "start": "690000",
    "end": "697440"
  },
  {
    "text": "in kafka parlance a consumer is just a read-only connection to the database",
    "start": "697440",
    "end": "702800"
  },
  {
    "text": "i am going to run that consumer um this way i'm going to say a consumer",
    "start": "702800",
    "end": "708000"
  },
  {
    "text": "is i happen to know that the particular class i need is a deserializing consumer",
    "start": "708000",
    "end": "715680"
  },
  {
    "text": "and you just configure it right and at this point this is kind of boilerplate stuff",
    "start": "715680",
    "end": "721200"
  },
  {
    "text": "we'll tell the consumer to subscribe to one source of data in kafka and that's",
    "start": "721200",
    "end": "727680"
  },
  {
    "text": "going to be our dashboard and then once we've done that we'll go into a loop and say",
    "start": "727680",
    "end": "734160"
  },
  {
    "text": "this consumer is going to look for new data every 200 milliseconds and get a message and i will deal",
    "start": "734160",
    "end": "742639"
  },
  {
    "text": "with that message somehow so connecting to the database asking for",
    "start": "742639",
    "end": "749040"
  },
  {
    "text": "messages trying to get it into a websocket server we're gradually building this out there are two things",
    "start": "749040",
    "end": "754160"
  },
  {
    "text": "to do to make this sort of start working the first is we need to deal with that",
    "start": "754160",
    "end": "759440"
  },
  {
    "text": "configuration and the other is we need to deal with the message configs um",
    "start": "759440",
    "end": "764500"
  },
  {
    "text": "[Music] let's go with the message so the message can be one of three things",
    "start": "764500",
    "end": "770800"
  },
  {
    "text": "it could be none as in there's no new data there's no new no new total there's no new sale made so there's nothing to",
    "start": "770800",
    "end": "778160"
  },
  {
    "text": "say and in that case i am not going to get fancy i'm just going to say print waiting",
    "start": "778160",
    "end": "783760"
  },
  {
    "text": "so we've got some feedback for the talk it may be an error",
    "start": "783760",
    "end": "789440"
  },
  {
    "text": "and yeah um if it's an error again i'm not going",
    "start": "790399",
    "end": "796079"
  },
  {
    "text": "to do anything fancy here i'm just going to say let's just print it to the screen that's",
    "start": "796079",
    "end": "801680"
  },
  {
    "text": "fine for now okay but what we're really hoping is that",
    "start": "801680",
    "end": "807920"
  },
  {
    "text": "it's an interesting message and i'm going to say in that case the value that we want to see is that messages value",
    "start": "807920",
    "end": "816480"
  },
  {
    "text": "and for now let's print that to the screen",
    "start": "816480",
    "end": "821519"
  },
  {
    "text": "right there we go so that's enough handling for now let's",
    "start": "823600",
    "end": "830399"
  },
  {
    "text": "import that class and think about configuration configuration with databases it's always",
    "start": "830399",
    "end": "836160"
  },
  {
    "text": "boilerplate but let's go through it you need to tell it where the database can be found",
    "start": "836160",
    "end": "841680"
  },
  {
    "text": "and in that in the case of kafka the magic keyword is bootstrap servers",
    "start": "841680",
    "end": "847199"
  },
  {
    "text": "i happen to have one running on my local machine at 1992 i think",
    "start": "847199",
    "end": "853360"
  },
  {
    "text": "yeah the next thing you need to do and this is very specific you need to give it a group id",
    "start": "853360",
    "end": "860079"
  },
  {
    "text": "kind of outside the scope of this talk but a group id lets you say i am part of a group of of readers",
    "start": "860079",
    "end": "866399"
  },
  {
    "text": "and i want to share the work among us so it's good for parallelism partitioning work sharing",
    "start": "866399",
    "end": "872079"
  },
  {
    "text": "doesn't apply here so any sort of fixed string will do just fine i think i will",
    "start": "872079",
    "end": "878480"
  },
  {
    "text": "go with a uuid okay anything will do um and the last thing i",
    "start": "878480",
    "end": "885920"
  },
  {
    "text": "need to do is configure it with how to when you get these bytes coming across the network how do you turn it into a",
    "start": "885920",
    "end": "892160"
  },
  {
    "text": "python object and for that you need to specify the value d",
    "start": "892160",
    "end": "898680"
  },
  {
    "text": "serializer this is particularly hard to type live in front of an audience when you're english but it's written in",
    "start": "898680",
    "end": "904800"
  },
  {
    "text": "american english so i'm trying to do that without typos",
    "start": "904800",
    "end": "911040"
  },
  {
    "text": "the default serialization format in kafka is something like something called avro which is a lot",
    "start": "911040",
    "end": "916880"
  },
  {
    "text": "like google pro google's proto buffs if you know that the main difference to me is that i",
    "start": "916880",
    "end": "923440"
  },
  {
    "text": "think avro does a better job of thinking about migrations as your data schemer changes how do you migrate that",
    "start": "923440",
    "end": "930399"
  },
  {
    "text": "you can use protobuf with kafka but i am using the kafka d serializer",
    "start": "930399",
    "end": "937440"
  },
  {
    "text": "yes uh yes let's import that and i'm going to configure that with a",
    "start": "937440",
    "end": "943920"
  },
  {
    "text": "schema registry which is a thing that tells it where to find the descriptions",
    "start": "943920",
    "end": "949600"
  },
  {
    "text": "of objects so that it can deserialize them into python",
    "start": "949600",
    "end": "955120"
  },
  {
    "text": "i have to define that schema registry as um",
    "start": "955120",
    "end": "961440"
  },
  {
    "text": "oh no sorry that's yeah so sorry i've got that slightly wrong i need to define a serializer",
    "start": "961440",
    "end": "969600"
  },
  {
    "text": "do that and",
    "start": "969600",
    "end": "974720"
  },
  {
    "text": "that almost there that's what i meant to type",
    "start": "974720",
    "end": "982480"
  },
  {
    "text": "sorry so my serializer is an average serializer it connects to a schema registry",
    "start": "982480",
    "end": "990000"
  },
  {
    "text": "registry client and i need to tell it where to find the schema registry which",
    "start": "990120",
    "end": "997440"
  },
  {
    "text": "is you know when you create a database table in say postgres it registers the schema internally",
    "start": "997440",
    "end": "1004320"
  },
  {
    "text": "you know this the description of the table kafka does the same except the screen the schema server is separate you",
    "start": "1004320",
    "end": "1010959"
  },
  {
    "text": "can run it if on a different machine if you want to i am running it locally on port",
    "start": "1010959",
    "end": "1017920"
  },
  {
    "text": "i really hope i've got the right port there yes think so",
    "start": "1017920",
    "end": "1023360"
  },
  {
    "text": "so a couple of imports and i think uh what have i done wrong there comma",
    "start": "1023360",
    "end": "1031520"
  },
  {
    "text": "yeah i think so just form that up nicely",
    "start": "1031600",
    "end": "1039360"
  },
  {
    "text": "so i'm configuring a consumer i'm connecting to the database i'm polling",
    "start": "1039360",
    "end": "1044959"
  },
  {
    "text": "my dashboard table i'm going to print it out hopefully if i",
    "start": "1044959",
    "end": "1050320"
  },
  {
    "text": "rerun that we should",
    "start": "1050320",
    "end": "1056880"
  },
  {
    "text": "either see some data coming through or have a debugging issue i do have some notes in my high wire act",
    "start": "1056880",
    "end": "1064559"
  },
  {
    "text": "what have i missed out uh",
    "start": "1064559",
    "end": "1068159"
  },
  {
    "text": "um i don't i don't know what's missing yet it may let's just it's a good question that we should",
    "start": "1069600",
    "end": "1077280"
  },
  {
    "text": "sorry thank you thank you i haven't called that function anywhere",
    "start": "1077440",
    "end": "1084160"
  },
  {
    "text": "that's what i'm missing right it's good enough to define how to connect but you want to say please",
    "start": "1084160",
    "end": "1090320"
  },
  {
    "text": "connect right so the um that's not running as an asynchronous function so i have to kind",
    "start": "1090320",
    "end": "1096480"
  },
  {
    "text": "of give its own thread to run in so i'm going to get the main i'm going to",
    "start": "1096480",
    "end": "1101840"
  },
  {
    "text": "get the event loop from there and i'm going to say run this kind of in a",
    "start": "1101840",
    "end": "1107440"
  },
  {
    "text": "thread running in an executor with no thread pull and i'm going to say run consumer there we go",
    "start": "1107440",
    "end": "1114880"
  },
  {
    "text": "and what i probably should have done is let's say that starting consumer how",
    "start": "1114880",
    "end": "1120559"
  },
  {
    "text": "about that so if i do that starting consumer",
    "start": "1120559",
    "end": "1127280"
  },
  {
    "text": "with a bit of luck no",
    "start": "1127280",
    "end": "1132799"
  },
  {
    "text": "let's just check that we are getting data from the dashboard",
    "start": "1133679",
    "end": "1139200"
  },
  {
    "text": "so what's gone wrong i am connecting to ah my schema registry url is wrong that's",
    "start": "1139919",
    "end": "1147440"
  },
  {
    "text": "what i've done it's 8081 sorry",
    "start": "1147440",
    "end": "1151840"
  },
  {
    "text": "and i'm printing out the value",
    "start": "1154480",
    "end": "1158080"
  },
  {
    "text": "ah no what have i done wrong",
    "start": "1159840",
    "end": "1165039"
  },
  {
    "text": "awkward silence and poles are consuming",
    "start": "1165039",
    "end": "1173240"
  },
  {
    "text": "um",
    "start": "1178240",
    "end": "1180640"
  },
  {
    "text": "oh let me just see if i should put it in there",
    "start": "1184080",
    "end": "1189200"
  },
  {
    "text": "oh okay that's better um yeah and that's a typo",
    "start": "1191039",
    "end": "1197039"
  },
  {
    "text": "sorry i was just starting off in the wrong place there we go",
    "start": "1197039",
    "end": "1201679"
  },
  {
    "text": "okay we have some data coming through thank you for the one guy that applauded my recovery there i'm gonna buy you a",
    "start": "1204320",
    "end": "1211039"
  },
  {
    "text": "drink later okay we're getting closer let me just zoom that up a little bit",
    "start": "1211039",
    "end": "1217679"
  },
  {
    "text": "um i think the next thing to do is we've got this object and it's time to turn that into some actual json",
    "start": "1217679",
    "end": "1224559"
  },
  {
    "text": "so let's say that the formatted version of that value is simple.json.jump to a string",
    "start": "1224559",
    "end": "1231440"
  },
  {
    "text": "the value change that to the formatted one and import simple json which we",
    "start": "1231440",
    "end": "1238960"
  },
  {
    "text": "installed earlier i think i'll do one other thing because it's bothering me is i'll just install a",
    "start": "1238960",
    "end": "1244880"
  },
  {
    "text": "quick signal handler so when i click control c i can say signal dot sig",
    "start": "1244880",
    "end": "1252880"
  },
  {
    "text": "def uh let me get some auto complete going on there",
    "start": "1252880",
    "end": "1258240"
  },
  {
    "text": "right that should mean that when i kill it off i don't get that",
    "start": "1260480",
    "end": "1266159"
  },
  {
    "text": "from now on okay so run that and jason we're nearly there i promise you",
    "start": "1266159",
    "end": "1274400"
  },
  {
    "text": "right i can run a web circuit server i can uh have clients connect and i can wait and",
    "start": "1274400",
    "end": "1280480"
  },
  {
    "text": "keep them opening while i send some messages in theory i can connect to the database and i'm",
    "start": "1280480",
    "end": "1285760"
  },
  {
    "text": "streaming out the data i can check how i'm doing for time it's actually not so terrible we still have",
    "start": "1285760",
    "end": "1291039"
  },
  {
    "text": "time left in our lunch break to finish this dashboard um",
    "start": "1291039",
    "end": "1296559"
  },
  {
    "text": "probably making you hungry especially this is the slot before lunch time talking about lunch break hacking",
    "start": "1296559",
    "end": "1302640"
  },
  {
    "text": "but hey we can we can generate some anticipation for lunch",
    "start": "1302640",
    "end": "1307840"
  },
  {
    "text": "so how what's the next bit the next bit is to get from this printing to the screen",
    "start": "1307840",
    "end": "1313520"
  },
  {
    "text": "to actually sending it to the um clients right this i've done this a couple of times in",
    "start": "1313520",
    "end": "1320960"
  },
  {
    "text": "java and this is i find this interesting in java it's really really easy to start",
    "start": "1320960",
    "end": "1326159"
  },
  {
    "text": "a websocket server it's much harder to broadcast to your connected clients",
    "start": "1326159",
    "end": "1331440"
  },
  {
    "text": "in python i find there's a bit of machinations to get the websocket server going but broadcast is actually pretty",
    "start": "1331440",
    "end": "1337039"
  },
  {
    "text": "easy all we need to do is instead of printing that to the screen we say websocket.broadcast",
    "start": "1337039",
    "end": "1344360"
  },
  {
    "text": "i don't know slow down um and we tell it which clients we want",
    "start": "1345200",
    "end": "1350720"
  },
  {
    "text": "to broadcast to and we then send it our string right",
    "start": "1350720",
    "end": "1356559"
  },
  {
    "text": "so the only question there is where has this broke this client's thing come from",
    "start": "1356559",
    "end": "1362799"
  },
  {
    "text": "i'm not going to be able to create it there so let's pass it in as an argument and",
    "start": "1362799",
    "end": "1368960"
  },
  {
    "text": "how do you pass in an argument something running in an executor you do not do it like that you have to pass it in",
    "start": "1368960",
    "end": "1375200"
  },
  {
    "text": "separately so that the function can get sent to another thread or whatever it is and then start it running there",
    "start": "1375200",
    "end": "1381919"
  },
  {
    "text": "so when you're calling this running executor thing you supply the arguments that way",
    "start": "1381919",
    "end": "1388240"
  },
  {
    "text": "then we could say our clients is just a set and",
    "start": "1388240",
    "end": "1394080"
  },
  {
    "text": "i would like to pass that this isn't going to work that's basically semantically what i'd like to do i'd",
    "start": "1394080",
    "end": "1400320"
  },
  {
    "text": "like to pass it to handle connection so that as we get a new client we can add it in",
    "start": "1400320",
    "end": "1405679"
  },
  {
    "text": "so in theory this is what i'm doing handle connection with clients when they connect i'm going",
    "start": "1405679",
    "end": "1411280"
  },
  {
    "text": "to do clients.add this connection and we're good",
    "start": "1411280",
    "end": "1416559"
  },
  {
    "text": "the only problem with that is i've just violated the contract for this callback function handle connection takes two arguments connection path",
    "start": "1416559",
    "end": "1423760"
  },
  {
    "text": "so i can fix that with something from functors called partial",
    "start": "1423760",
    "end": "1429200"
  },
  {
    "text": "any functional programmers in the audience a few",
    "start": "1429200",
    "end": "1434320"
  },
  {
    "text": "not that kind of partial different partial um this is uh it takes this is uh",
    "start": "1434320",
    "end": "1441120"
  },
  {
    "text": "carrying right this takes a function and says i'm going to give you some of the arguments now give me back a function",
    "start": "1441120",
    "end": "1446720"
  },
  {
    "text": "that will take the rest of the arguments later so i'm going to use partial to take the first thing clients",
    "start": "1446720",
    "end": "1454000"
  },
  {
    "text": "now then it goes back to fitting in with the api for websocket serve",
    "start": "1454000",
    "end": "1459520"
  },
  {
    "text": "okay so that should be good uh",
    "start": "1459520",
    "end": "1465520"
  },
  {
    "text": "yeah let's see let's see what we've got to",
    "start": "1465520",
    "end": "1469760"
  },
  {
    "text": "it's running it's not crashing it's still getting data from the database let's let's",
    "start": "1470960",
    "end": "1476799"
  },
  {
    "text": "kill that off for now and let's run our ws command again hopefully this is going to say hello",
    "start": "1476799",
    "end": "1483120"
  },
  {
    "text": "world and then whatever it's saying up at the top yes there we go we've got a working",
    "start": "1483120",
    "end": "1489520"
  },
  {
    "text": "websocket server that's streaming data from a database in about 22 minutes",
    "start": "1489520",
    "end": "1494960"
  },
  {
    "text": "okay let's just prove that actually like multi-client proper websocket server",
    "start": "1494960",
    "end": "1500720"
  },
  {
    "text": "right um they're all getting updates whoever's connected gets an update",
    "start": "1500720",
    "end": "1506000"
  },
  {
    "text": "so we're almost done with the python bit i",
    "start": "1506000",
    "end": "1511120"
  },
  {
    "text": "there are a couple of changes i'd like to make to this the big thing that bothers me",
    "start": "1511120",
    "end": "1516720"
  },
  {
    "text": "is i've got a race condition on this client set right",
    "start": "1516720",
    "end": "1521919"
  },
  {
    "text": "i could be writing to this here sorry i could be reading from the list of clients up here while i'm adding a new",
    "start": "1521919",
    "end": "1527919"
  },
  {
    "text": "one down here and that's going to give me an exception there are a few ways to deal with that",
    "start": "1527919",
    "end": "1534240"
  },
  {
    "text": "i'm going to choose the easy one i'm going to say give me a lock from threading dot lock",
    "start": "1534240",
    "end": "1542720"
  },
  {
    "text": "import that and i'm just going to pass that lock around and whenever i'm reading from it",
    "start": "1542720",
    "end": "1548640"
  },
  {
    "text": "you can't write to it and whenever you write to it you can't read from it just block that out so i will need to pass the lock up to my",
    "start": "1548640",
    "end": "1555440"
  },
  {
    "text": "two functions go up here and take that lock",
    "start": "1555440",
    "end": "1561279"
  },
  {
    "text": "go up here and get in the right place and then i can just say",
    "start": "1561279",
    "end": "1567480"
  },
  {
    "text": "[Music] with lock it's quite nice the semantics around getting a lock and acquiring it",
    "start": "1567480",
    "end": "1572880"
  },
  {
    "text": "and releasing it in python with that lock block anyone else out add the connection",
    "start": "1572880",
    "end": "1578159"
  },
  {
    "text": "release the lock and over here with that lock block anyone else out read the clients release the lock that should be",
    "start": "1578159",
    "end": "1585279"
  },
  {
    "text": "fine for the kind of internal dashboard scale we're talking about",
    "start": "1585279",
    "end": "1590640"
  },
  {
    "text": "and with that let's just double check that still runs but i think that's what we want to do",
    "start": "1590640",
    "end": "1597520"
  },
  {
    "text": "one more thing i'd like to do i've got a mixture of hello go to and jason that's annoying so let's just take that",
    "start": "1597520",
    "end": "1604640"
  },
  {
    "text": "out okay so there's no connection message anymore that should make writing the front end",
    "start": "1604640",
    "end": "1610400"
  },
  {
    "text": "easier okay that's it web tier",
    "start": "1610400",
    "end": "1615679"
  },
  {
    "text": "database tier we must now go into the dark and scary regions of javascript",
    "start": "1615679",
    "end": "1622640"
  },
  {
    "text": "certain members of the audience need to brace themselves i've done this talk before like at the when the they give",
    "start": "1622640",
    "end": "1629919"
  },
  {
    "text": "out free beers and then there's one more talk at the conference some people find that a little easier sorry javascript",
    "start": "1629919",
    "end": "1635360"
  },
  {
    "text": "people i love you i'm just teasing shouldn't do that bad person",
    "start": "1635360",
    "end": "1641919"
  },
  {
    "text": "okay so we'll leave the web server happily running like that i now have a client",
    "start": "1641919",
    "end": "1649200"
  },
  {
    "text": "and the client is a javascript react app um i'm just going to keep it in javascript",
    "start": "1649200",
    "end": "1654960"
  },
  {
    "text": "i honestly i slightly prefer typescript but let's keep things simple um",
    "start": "1654960",
    "end": "1660960"
  },
  {
    "text": "so i have started with a template thing and it tells me if i do yarn start it will",
    "start": "1660960",
    "end": "1666080"
  },
  {
    "text": "start running a react app and while that's happening if you recall right at the start with",
    "start": "1666080",
    "end": "1673279"
  },
  {
    "text": "the kafka ksql bit we have this stream of",
    "start": "1673279",
    "end": "1678320"
  },
  {
    "text": "purchases coming in and every time we get a purchase we add it to our running total and make",
    "start": "1678320",
    "end": "1683679"
  },
  {
    "text": "that the new state of the dashboard table and then you can watch that state of the dashboard table and get the latest live",
    "start": "1683679",
    "end": "1689840"
  },
  {
    "text": "information just because it's rolling up events as they come in interestingly react works very very",
    "start": "1689840",
    "end": "1696480"
  },
  {
    "text": "similarly to that in that we are going to connect the web server and every time we get a new message",
    "start": "1696480",
    "end": "1702559"
  },
  {
    "text": "we're going to we're going to add it to our existing state in the web app and",
    "start": "1702559",
    "end": "1708480"
  },
  {
    "text": "just look at that state that's been rolled up over time and print it to the screen somehow",
    "start": "1708480",
    "end": "1714000"
  },
  {
    "text": "so the code looks very different but semantically exactly the same thing is happening in react",
    "start": "1714000",
    "end": "1720880"
  },
  {
    "text": "which is cool because you don't need too many mental models one mental model fewer is a good thing",
    "start": "1720880",
    "end": "1728399"
  },
  {
    "text": "so inside this template app uh you get app.js which is your starting",
    "start": "1728399",
    "end": "1734159"
  },
  {
    "text": "point that's all i'm going to use and over here i will try and get auto",
    "start": "1734159",
    "end": "1739919"
  },
  {
    "text": "complete working audience is divided between people who",
    "start": "1739919",
    "end": "1745760"
  },
  {
    "text": "think emacs doesn't have auto complete and people who think",
    "start": "1745760",
    "end": "1751440"
  },
  {
    "text": "having to get it working is a bit weird and fellow emacs users yes",
    "start": "1751440",
    "end": "1759200"
  },
  {
    "text": "okay so this code if you squint you can see that",
    "start": "1759200",
    "end": "1765679"
  },
  {
    "text": "this thing is being generated by these tags right let's take out that learn react link and",
    "start": "1765679",
    "end": "1772799"
  },
  {
    "text": "think about how we're going to build this the first thing i'll do is define a constant which is where to find the",
    "start": "1772799",
    "end": "1778960"
  },
  {
    "text": "websocket server and it is running at did i say 8080 i",
    "start": "1778960",
    "end": "1784320"
  },
  {
    "text": "think i did okay and i'm going to create a new websocket client which i'll just call",
    "start": "1784320",
    "end": "1791679"
  },
  {
    "text": "ws new web socket with that url okay",
    "start": "1791679",
    "end": "1798799"
  },
  {
    "text": "now i said we're going to be managing the state of this app so how do you do that well you",
    "start": "1798799",
    "end": "1806000"
  },
  {
    "text": "oh where did that go never mind i shall recreate it as i talk",
    "start": "1806000",
    "end": "1812159"
  },
  {
    "text": "um how do you create this piece of state that react deals with right",
    "start": "1812159",
    "end": "1818000"
  },
  {
    "text": "you do it like this you import use state very nice little function they",
    "start": "1818000",
    "end": "1823679"
  },
  {
    "text": "didn't have in the early days of react but they have now which makes it easy to say i would like",
    "start": "1823679",
    "end": "1828960"
  },
  {
    "text": "to use a piece of state and its initial value i think in this",
    "start": "1828960",
    "end": "1834799"
  },
  {
    "text": "case i will make it the string watting waiting the string waiting",
    "start": "1834799",
    "end": "1840080"
  },
  {
    "text": "right that use date function defines an area in memory where the state of the",
    "start": "1840080",
    "end": "1845760"
  },
  {
    "text": "app can live or at least a piece of it and it gives you back two things it gives you the current value",
    "start": "1845760",
    "end": "1852159"
  },
  {
    "text": "of that bit of state which i'm going to call message and it gives you a setter",
    "start": "1852159",
    "end": "1858080"
  },
  {
    "text": "and so you can update it right okay with that i think what i'll do for",
    "start": "1858080",
    "end": "1864399"
  },
  {
    "text": "this is just say when you create the app take that websocket server and say whenever you",
    "start": "1864399",
    "end": "1870640"
  },
  {
    "text": "get a message in this is how you handle that event you",
    "start": "1870640",
    "end": "1876720"
  },
  {
    "text": "run this function and that function should well let's see we've actually got to deal with so let's",
    "start": "1876720",
    "end": "1882399"
  },
  {
    "text": "call console.log that event okay so that should connect to my server",
    "start": "1882399",
    "end": "1890840"
  },
  {
    "text": "um and log it to the screen and let's say that eventually",
    "start": "1890840",
    "end": "1896480"
  },
  {
    "text": "that message we've defined is going to get to the screen there that should be nice okay",
    "start": "1896480",
    "end": "1903518"
  },
  {
    "text": "uh oh i've got the wrong protocol there that should be ws http",
    "start": "1903600",
    "end": "1910720"
  },
  {
    "text": "uh",
    "start": "1910720",
    "end": "1913039"
  },
  {
    "text": "semicolo thank you no",
    "start": "1916960",
    "end": "1922960"
  },
  {
    "text": "i'm gonna check my notes didn't want to have to do that twice",
    "start": "1925360",
    "end": "1931320"
  },
  {
    "text": "[Music] that should be okay",
    "start": "1931470",
    "end": "1938799"
  },
  {
    "text": "uh okay let's do this the old-fashioned way what is websocket if it isn't doesn't",
    "start": "1941679",
    "end": "1948720"
  },
  {
    "text": "have a non-message thing",
    "start": "1948720",
    "end": "1954080"
  },
  {
    "text": "there we go it totally does my friend it hasn't",
    "start": "1960080",
    "end": "1967039"
  },
  {
    "text": "oh i know what i've done wrong sorry i should be assigning nick not calling it that's what i've done wrong",
    "start": "1967039",
    "end": "1972559"
  },
  {
    "text": "okay sorry about that you can tell it's real right a few mistakes make it more real that's why",
    "start": "1972559",
    "end": "1978799"
  },
  {
    "text": "all these mistakes are deliberate honest okay so we're connecting to the",
    "start": "1978799",
    "end": "1984799"
  },
  {
    "text": "web server and um we're getting this message event thing",
    "start": "1984799",
    "end": "1989919"
  },
  {
    "text": "back which is part of the browser api i guess um and it has a",
    "start": "1989919",
    "end": "1996320"
  },
  {
    "text": "data thing here and that's the bit we're interested in right",
    "start": "1996320",
    "end": "2001440"
  },
  {
    "text": "so let's start off by doing that let's call set message with",
    "start": "2001440",
    "end": "2006559"
  },
  {
    "text": "event data and there we go we're almost there",
    "start": "2006559",
    "end": "2014960"
  },
  {
    "text": "that's starting to look like a live dashboard right the one guy who gave me a round of applause can i have a round of applause",
    "start": "2014960",
    "end": "2021200"
  },
  {
    "text": "for that thank you oh that i wasn't fishing for that at all",
    "start": "2021200",
    "end": "2026640"
  },
  {
    "text": "thank you okay so this is almost right i think we can",
    "start": "2026640",
    "end": "2031760"
  },
  {
    "text": "do a bit better than this okay and we've got time to so this is a string which is json let's",
    "start": "2031760",
    "end": "2038799"
  },
  {
    "text": "tidy it up a bit that event data is actually a raw string",
    "start": "2038799",
    "end": "2045039"
  },
  {
    "text": "if we do json.parse we should get an object uh",
    "start": "2045039",
    "end": "2051118"
  },
  {
    "text": "which is that oh let's not quote message let's call it something equally descriptive like value",
    "start": "2051119",
    "end": "2058800"
  },
  {
    "text": "okay so that value is now parsed piece of json and we can say that the total is",
    "start": "2058800",
    "end": "2065839"
  },
  {
    "text": "uh that field yeah and that total is a number so we could",
    "start": "2065839",
    "end": "2073679"
  },
  {
    "text": "get kind of nice and say the formatted version of that is um",
    "start": "2073679",
    "end": "2080320"
  },
  {
    "text": "total dot 2 locale string",
    "start": "2080320",
    "end": "2086398"
  },
  {
    "text": "en really remembering the api here because there's no type checking or anything uh minimum",
    "start": "2086399",
    "end": "2092960"
  },
  {
    "text": "fraction digits i think is the magic object you have to supply",
    "start": "2092960",
    "end": "2098480"
  },
  {
    "text": "and that should give me that so now i can set my message to the formatted version",
    "start": "2098480",
    "end": "2105680"
  },
  {
    "text": "i can come down here and add a dollar symbol in and with a bit of luck there we go",
    "start": "2105680",
    "end": "2111760"
  },
  {
    "text": "that's it a live dashboard in including my preamble call it half an hour",
    "start": "2111760",
    "end": "2117300"
  },
  {
    "text": "[Applause] okay so yeah that's it",
    "start": "2117300",
    "end": "2123920"
  },
  {
    "start": "2119000",
    "end": "2254000"
  },
  {
    "text": "and i used to enjoy lunchtime hacks a lot when i was um when i was really in the",
    "start": "2123920",
    "end": "2130960"
  },
  {
    "text": "trenches and if you can go down to this this is very british thing perhaps if you can get down to the sandwich shop grab a sandwich come back and build",
    "start": "2130960",
    "end": "2137599"
  },
  {
    "text": "something before your allotted hour is up you're kind of in the wrong job that you're monitoring that hour so closely",
    "start": "2137599",
    "end": "2143839"
  },
  {
    "text": "but it is fun to be able to build things quickly right and if it's just internal",
    "start": "2143839",
    "end": "2150000"
  },
  {
    "text": "obviously this isn't like production ready for a million customers showing up tomorrow but if it's just internal you",
    "start": "2150000",
    "end": "2156560"
  },
  {
    "text": "have made it so that the people in marketing and hr and anyone in the organization can quickly access the data",
    "start": "2156560",
    "end": "2163200"
  },
  {
    "text": "you'd like to show them you can knock up a live streaming dashboard",
    "start": "2163200",
    "end": "2168400"
  },
  {
    "text": "to some weird quirky system that doesn't have integration with data dog or",
    "start": "2168400",
    "end": "2173839"
  },
  {
    "text": "whatever it is you can you can build out your own thing and i hope that if you consider yourself",
    "start": "2173839",
    "end": "2182000"
  },
  {
    "text": "a back-end person you'll look at this and think yeah okay i'm not going to become a react expert",
    "start": "2182000",
    "end": "2187520"
  },
  {
    "text": "by tomorrow lunch time it's a big field but i could knock up something useful internally that would put the numbers i",
    "start": "2187520",
    "end": "2195040"
  },
  {
    "text": "think are interesting in front of the people i think need to see them without too much effort",
    "start": "2195040",
    "end": "2201520"
  },
  {
    "text": "if you're more a front-end programmer i hope you'll look at this and think okay i'm not going to become a back-end",
    "start": "2201520",
    "end": "2207599"
  },
  {
    "text": "programmer overnight but if i need to build up a websocket server that will actually get the data i want to show",
    "start": "2207599",
    "end": "2214079"
  },
  {
    "text": "people it's not so desperately hard it was maybe two three pages of code right that you",
    "start": "2214079",
    "end": "2220640"
  },
  {
    "text": "can pause on the youtube stream when it's published um",
    "start": "2220640",
    "end": "2226000"
  },
  {
    "text": "and you know i'm deeply interested in what kafka can do the main thing it can do is stream out",
    "start": "2226000",
    "end": "2232960"
  },
  {
    "text": "data to you live it can be deeply concerned with what the latest data is so if there are events happening",
    "start": "2232960",
    "end": "2240640"
  },
  {
    "text": "right now that are particularly important because they're happening right now i hope you'll have a look at kafka and",
    "start": "2240640",
    "end": "2247280"
  },
  {
    "text": "consider it as being part of your system for live real-time data in motion",
    "start": "2247280",
    "end": "2253599"
  },
  {
    "text": "and with that i think i'll say thank you very much and stop for questions [Applause]",
    "start": "2253599",
    "end": "2262939"
  },
  {
    "start": "2254000",
    "end": "2272000"
  },
  {
    "text": "you",
    "start": "2271280",
    "end": "2273359"
  }
]