[
  {
    "start": "0",
    "end": "32000"
  },
  {
    "text": "okay so we're going to talk about real-time notification so that's a it's a loaded term I think we've heard that",
    "start": "12360",
    "end": "19000"
  },
  {
    "text": "phrase already a few times today but uh real-time notifications specifically inist environments really exciting topic",
    "start": "19000",
    "end": "26000"
  },
  {
    "text": "and there's a lot of Education that I'm excited to let you know about today",
    "start": "26000",
    "end": "31519"
  },
  {
    "text": "so we're going to talk about quite a few things we'll talk a little bit about momento of course that's why I'm here but we're going to we're going to level",
    "start": "31519",
    "end": "37520"
  },
  {
    "start": "32000",
    "end": "83000"
  },
  {
    "text": "set what are realtime notifications what do I mean what are they not we're talk about architecture things that you may",
    "start": "37520",
    "end": "43920"
  },
  {
    "text": "have built in AWS to facilitate real-time notifications we'll talk about",
    "start": "43920",
    "end": "49600"
  },
  {
    "text": "one specifically that I've built have some battle wounds from uh we'll talk about what uh is a new way you can use",
    "start": "49600",
    "end": "56440"
  },
  {
    "text": "momento to make it better make that bold claim uh we'll talk a little bit about",
    "start": "56440",
    "end": "62680"
  },
  {
    "text": "how a serverless service is is built so I'm actually going to go in and show some architecture diagrams of what the",
    "start": "62680",
    "end": "68280"
  },
  {
    "text": "back end under the hood serverless looks like spoiler alert something we already",
    "start": "68280",
    "end": "73600"
  },
  {
    "text": "know there are servers uh and then we're going to talk about some really cool use cases and things that you can build on",
    "start": "73600",
    "end": "79119"
  },
  {
    "text": "top of realtime notifications and how easy momento makes them so talk about momento talk about us",
    "start": "79119",
    "end": "88000"
  },
  {
    "start": "83000",
    "end": "249000"
  },
  {
    "text": "being one of the cool guys really the big thing about momentos is we just we push serverless and if you guys have",
    "start": "88000",
    "end": "95040"
  },
  {
    "text": "been a part of the technical community uh for any length of time it comes in",
    "start": "95040",
    "end": "100079"
  },
  {
    "text": "waves uh whether or not people like the term serverless whether or not uh it has a lot of value but we talk about it in",
    "start": "100079",
    "end": "107119"
  },
  {
    "text": "the non-m markety way we talk about the capabilities that we can provide to end users things like elastic scalability",
    "start": "107119",
    "end": "113479"
  },
  {
    "text": "fast best practices built in you don't have to uh configure everything you don't have to be a domain expert uh and",
    "start": "113479",
    "end": "120439"
  },
  {
    "text": "then the pay as you go kind of thing so that's that's what we're looking at when we're talking about",
    "start": "120439",
    "end": "125680"
  },
  {
    "text": "serverless so like Eric said uh we have a few different services that we offer again all serverless started off with",
    "start": "125680",
    "end": "131920"
  },
  {
    "text": "caching uh just a serverless cach think about that as uh temporary temporarily",
    "start": "131920",
    "end": "137920"
  },
  {
    "text": "storing your data with an elastic scalability that you don't have to manage we moved on to topics which is",
    "start": "137920",
    "end": "144280"
  },
  {
    "text": "realtime notifications which is what we're here to talk about today and then in August of this year we announ",
    "start": "144280",
    "end": "150280"
  },
  {
    "text": "a vector serverless vector index Service as well so can power your AI workloads",
    "start": "150280",
    "end": "156200"
  },
  {
    "text": "if you like and some of the guiding principles like why momento builds what it builds",
    "start": "156200",
    "end": "162800"
  },
  {
    "text": "and what drives us when we get out of bed every day is making things fast easy",
    "start": "162800",
    "end": "169760"
  },
  {
    "text": "uh simple lower the barrier to entry so you can experiment and get to production as",
    "start": "169760",
    "end": "175280"
  },
  {
    "text": "fast as you can about myself uh so my title at",
    "start": "175280",
    "end": "181120"
  },
  {
    "text": "momento is ecosystem engineer I think I'm the only one in the world with that title because it is a madeup title it is",
    "start": "181120",
    "end": "187400"
  },
  {
    "text": "a it's a combination of developer advocacy and solutions architecture you know startup life you do a little bit of",
    "start": "187400",
    "end": "193040"
  },
  {
    "text": "everything so I do a little bit of everything there I'm a serus hero I was named uh hero in Q3 last year been",
    "start": "193040",
    "end": "201000"
  },
  {
    "text": "having a lot of fun with that educating people talking about serverless bringing uh bringing serverless to the hands of",
    "start": "201000",
    "end": "207640"
  },
  {
    "text": "of many uh a big part of my identity I do live on a farm that is actually true",
    "start": "207640",
    "end": "213319"
  },
  {
    "text": "this is actually branded material that I'm wearing for my farm if you're ever in the Dallas area and you need eggs",
    "start": "213319",
    "end": "218959"
  },
  {
    "text": "come talk to me please uh if you have seen anything from Ready Set Cloud it's a podcast it's a Blog it's a newsletter",
    "start": "218959",
    "end": "225799"
  },
  {
    "text": "that's me that's my brand uh that's something that I run the I have one exception only one piece of content on",
    "start": "225799",
    "end": "232720"
  },
  {
    "text": "Ready Set cloud has been published by someone not from me and it's from that guy right there so thank you Matt uh it",
    "start": "232720",
    "end": "238720"
  },
  {
    "text": "was on a anniversary trip in the middle of the ocean and said hey Matt can you",
    "start": "238720",
    "end": "244720"
  },
  {
    "text": "can you send a newsletter for me said sure So thank you all right let's talk about some",
    "start": "244720",
    "end": "250640"
  },
  {
    "start": "249000",
    "end": "457000"
  },
  {
    "text": "definitions let's talk about what is real-time notification because there's a lot of confusion and a lot of assumptions on what real-time",
    "start": "250640",
    "end": "257040"
  },
  {
    "text": "notifications are and some of the things kind of tangental in this space that lead to",
    "start": "257040",
    "end": "263000"
  },
  {
    "text": "misinformation and shutting down of this conversation in general so when I say",
    "start": "263000",
    "end": "269759"
  },
  {
    "text": "time notification I'm going to talk about event triggered I hate using the word to",
    "start": "269759",
    "end": "276600"
  },
  {
    "text": "describe the word but notifications events uh very fast very low latency and then the opinion of this uh of this",
    "start": "276600",
    "end": "285120"
  },
  {
    "text": "presentation is two-way now real time notifications do not have to be two-way",
    "start": "285120",
    "end": "291919"
  },
  {
    "text": "meaning something from the client to the server and the server back to the client uh but for the context of this",
    "start": "291919",
    "end": "297320"
  },
  {
    "text": "conversation it does have to mean that so we'll talk about why that's why that's",
    "start": "297320",
    "end": "302840"
  },
  {
    "text": "important so here's the big piece of Education that I really want you guys to take away now when I was an Enterprise",
    "start": "302840",
    "end": "310720"
  },
  {
    "text": "architect a few years ago the product owner of a of a new product we were",
    "start": "310720",
    "end": "316560"
  },
  {
    "text": "working on said hey I need you to build a real-time application I want an app",
    "start": "316560",
    "end": "322080"
  },
  {
    "text": "where if somebody's interacting with it everybody else sees it actively and I was like oh great so you mean websockets",
    "start": "322080",
    "end": "328960"
  },
  {
    "text": "that's what real time notifications are websockets and while that's technically not wrong it's not the complete answer",
    "start": "328960",
    "end": "335600"
  },
  {
    "text": "websockets are a very specific type of real-time notification so it's like that",
    "start": "335600",
    "end": "341120"
  },
  {
    "text": "saying where they say all uh squares are rectangles but all rectangles are square uh more or less the same thing so",
    "start": "341120",
    "end": "347440"
  },
  {
    "text": "websocket again very specific goes over the Ws protocol it's a it's a stateful",
    "start": "347440",
    "end": "353319"
  },
  {
    "text": "connection from the client in the server that uh shares one or uses one single",
    "start": "353319",
    "end": "358560"
  },
  {
    "text": "TCP connection for communication so it's like a phone call basically when we're talking about",
    "start": "358560",
    "end": "363840"
  },
  {
    "text": "stateful Communications like websockets when you have a phone call connected you know when the other person is there and",
    "start": "363840",
    "end": "370039"
  },
  {
    "text": "you know when they're not now a push notification also is something that I hear a lot uh of",
    "start": "370039",
    "end": "377160"
  },
  {
    "text": "confusion around people's hear real time notifications I think oh push notifications and websockets those are all the same thing no no that's not",
    "start": "377160",
    "end": "385440"
  },
  {
    "text": "again not correct uh a push notification is a is a server side message so it starts on the server side and it goes",
    "start": "385440",
    "end": "392000"
  },
  {
    "text": "one way down to the clients uh conversely from websockets they can go",
    "start": "392000",
    "end": "397560"
  },
  {
    "text": "both ways you can send messages back up from the client but push notification is one way uh so like a a letter they're",
    "start": "397560",
    "end": "405759"
  },
  {
    "text": "completely independent and you don't have any context about uh any of the",
    "start": "405759",
    "end": "411120"
  },
  {
    "text": "previous messages that have gone over the wire now one other thing I've mentioned",
    "start": "411120",
    "end": "416599"
  },
  {
    "text": "this a couple different times but I want to talk about the definition of of these two things when we talk about stateless",
    "start": "416599",
    "end": "421800"
  },
  {
    "text": "and stateful connections a stateful connection is like that phone call you",
    "start": "421800",
    "end": "428039"
  },
  {
    "text": "have a live person on the other end or a live uh entity on the other end of a of",
    "start": "428039",
    "end": "434639"
  },
  {
    "text": "a stateful connection conversely a stateless thing you don't so those those are communication mechanisms like uh web",
    "start": "434639",
    "end": "442560"
  },
  {
    "text": "hooks or things that you don't have information about who your consumers are it's just here you go ship it over and",
    "start": "442560",
    "end": "449400"
  },
  {
    "text": "we have we know a lot of things that are stateless like SNS is a really good example of a a stateless messaging",
    "start": "449400",
    "end": "456840"
  },
  {
    "text": "system okay so that's the quick level set let's talk about architecture now",
    "start": "456840",
    "end": "463400"
  },
  {
    "start": "457000",
    "end": "813000"
  },
  {
    "text": "when we're talking about real-time notifications and event messaging these are the ones that we typically know",
    "start": "463400",
    "end": "468720"
  },
  {
    "text": "about and they all have their very different flavors there's a whole bunch of different ones because there's a bunch of different ways you can tackle",
    "start": "468720",
    "end": "474879"
  },
  {
    "text": "them now if you remember at the beginning I said we're going to talk talk about two-way",
    "start": "474879",
    "end": "480039"
  },
  {
    "text": "Communications so that actually eliminates SNS uh SNS is a one-way it's",
    "start": "480039",
    "end": "485120"
  },
  {
    "text": "that stateless server to fanned out number of",
    "start": "485120",
    "end": "490560"
  },
  {
    "text": "subscribers and so we have appsync iot core if you've been over to seral Espresso it uses iot core for realtime",
    "start": "490560",
    "end": "497039"
  },
  {
    "text": "notifications uh and then API Gateway now specifically we're going to look at the API Gateway version of realtime",
    "start": "497039",
    "end": "504919"
  },
  {
    "text": "notifications because it's the one that I've built before and that's the one that I know the most and I have a lot of opinions on uh because it has hurt me in",
    "start": "504919",
    "end": "513000"
  },
  {
    "text": "the past uh so we're going to talk about what that actually looks like and talk",
    "start": "513000",
    "end": "518640"
  },
  {
    "text": "about what what real-time notifications are with websockets with AWS so on the",
    "start": "518640",
    "end": "524920"
  },
  {
    "text": "leftand side of the screen you see the connection management portion of a",
    "start": "524920",
    "end": "530200"
  },
  {
    "text": "websocket system as simple as I can make it you have your connect and disconnect Lambda functions which are triggered",
    "start": "530200",
    "end": "536920"
  },
  {
    "text": "when somebody actually connects or disconnects to your websocket and then you have uh another action in there for",
    "start": "536920",
    "end": "545760"
  },
  {
    "text": "basically subscribing to topics uh now web sockets themselves don't have the concept of topics so you kind of have to",
    "start": "545760",
    "end": "552519"
  },
  {
    "text": "build that in in yourself uh the other part is the architecture of course is part of any production ready uh solution",
    "start": "552519",
    "end": "559440"
  },
  {
    "text": "you have o that sits on top of API Gateway that validates tokens that come in uh only on the connect websockets do",
    "start": "559440",
    "end": "565880"
  },
  {
    "text": "not validate every single request they validate the connection and then you're authenticated uh but then uh you have to",
    "start": "565880",
    "end": "573560"
  },
  {
    "text": "go and you save connection information and Associate that to users and Damo DB or whatever your database is of choice",
    "start": "573560",
    "end": "580240"
  },
  {
    "text": "really the the point to note there is that API Gateway doesn't manage your connections it keeps them but you have",
    "start": "580240",
    "end": "586959"
  },
  {
    "text": "to figure out who knows what who wants what it's a whole big thing and so when",
    "start": "586959",
    "end": "592399"
  },
  {
    "text": "I've implemented this before I implemented this with a data model that is very similar to what I have down at",
    "start": "592399",
    "end": "598360"
  },
  {
    "text": "the bottom so somebody somebody connects I drop an item in Dynamo DB says here's this connection identifier that I can",
    "start": "598360",
    "end": "605279"
  },
  {
    "text": "send to API Gateway and here's the user that is on the other end of that and subsequently when somebody",
    "start": "605279",
    "end": "612120"
  },
  {
    "text": "makes a call to say hey subscribe me to this topic uh for example give me a",
    "start": "612120",
    "end": "617360"
  },
  {
    "text": "notification when somebody posts about goats or posts about chickens say okay sure I can I can do that so I save",
    "start": "617360",
    "end": "623680"
  },
  {
    "text": "another record about the topics that these people these connections care about back in Dynamo be so when it comes",
    "start": "623680",
    "end": "631000"
  },
  {
    "text": "time to actually send that person a message we have this workflow that you see up in the upper right where uh",
    "start": "631000",
    "end": "638079"
  },
  {
    "text": "there's a event Bridge rule it goes into sqs and then Lambda pulls that it does a",
    "start": "638079",
    "end": "643800"
  },
  {
    "text": "query on Dynamo DB for everybody that cares about that type of event let's say we have a goat event so we're going to",
    "start": "643800",
    "end": "650480"
  },
  {
    "text": "Care uh and look up everybody that wants to learn about goats and then we'll iterate over each one of those",
    "start": "650480",
    "end": "656600"
  },
  {
    "text": "connections and pass that payload down to them really it's a lot there's there's a lot",
    "start": "656600",
    "end": "661920"
  },
  {
    "text": "to it uh I don't I think there's like 12 boxes on that architecture diagram right",
    "start": "661920",
    "end": "667160"
  },
  {
    "text": "now and that's about literally as simple as I can make it and I've been blogging for like five years I've written",
    "start": "667160",
    "end": "672560"
  },
  {
    "text": "hundreds of of Articles and websockets specifically this type of Architecture is the only blog series that I've ever",
    "start": "672560",
    "end": "681200"
  },
  {
    "text": "written because they're so complex because there's so much to them there there's just so much that you can do",
    "start": "681200",
    "end": "687760"
  },
  {
    "text": "wrong and right uh and inefficient it's probably not good there",
    "start": "687760",
    "end": "693560"
  },
  {
    "text": "we go uh so let's talk about sending a",
    "start": "693560",
    "end": "699600"
  },
  {
    "text": "message to that so we've talked about how complex it is but all of that was literally just connection management",
    "start": "699600",
    "end": "707240"
  },
  {
    "text": "it's all it was it's not actually sending a message so what happens when you actually want to send a message so we have our standard data flow up there",
    "start": "707240",
    "end": "714720"
  },
  {
    "text": "at the top and it doesn't really matter what the domain is we'll just talk about farming uh API Gateway Lambda will do",
    "start": "714720",
    "end": "720279"
  },
  {
    "text": "your very uh very basic very standard serverless workflow so Lambda Dynamo we",
    "start": "720279",
    "end": "725839"
  },
  {
    "text": "have a stream that reacts to the Deltas in Dynamo DB then we have a Lambda function and what I've done in the past",
    "start": "725839",
    "end": "731800"
  },
  {
    "text": "is I have this uh stream Handler that will index the change data in open",
    "start": "731800",
    "end": "737120"
  },
  {
    "text": "search and subsequently it will also publish an event to an event bridge that",
    "start": "737120",
    "end": "743600"
  },
  {
    "text": "will trigger that workflow and send a message back down all the way down to the client",
    "start": "743600",
    "end": "750120"
  },
  {
    "text": "about goats and that's a lot that's that really is a lot uh if we take a step",
    "start": "750120",
    "end": "756639"
  },
  {
    "text": "back from it and just look at it in general sending a message being able to connect to a websocket subscribe to a",
    "start": "756639",
    "end": "763639"
  },
  {
    "text": "topic and receive a message is seven Lambda functions 600 lines of",
    "start": "763639",
    "end": "770199"
  },
  {
    "text": "infrastructures code 12 boxes on architecture diagram for just that one piece of functionality",
    "start": "770199",
    "end": "776600"
  },
  {
    "text": "I have kind of in there because is it functionality it's could be a",
    "start": "776600",
    "end": "782160"
  },
  {
    "text": "non-functional requirement it could be a functional requirement really depends how you slice and dice it uh that QR",
    "start": "782160",
    "end": "788360"
  },
  {
    "text": "code points to an open source repository that I have that is this it's this",
    "start": "788360",
    "end": "794320"
  },
  {
    "text": "entire implementation you can uh I know everybody here uses Sam uh for their",
    "start": "794320",
    "end": "800480"
  },
  {
    "text": "deployments so uh it's a Sam template you can just do Sam build Sam deploy and",
    "start": "800480",
    "end": "806040"
  },
  {
    "text": "you get all of this out there in the cloud but I would encourage you to not do that yet because we're going to talk",
    "start": "806040",
    "end": "813199"
  },
  {
    "start": "813000",
    "end": "1243000"
  },
  {
    "text": "about the better way first and I'm going to frame what we're",
    "start": "813199",
    "end": "818959"
  },
  {
    "text": "going to talk about uh right here so very strong opinion that we live in an",
    "start": "818959",
    "end": "825279"
  },
  {
    "text": "age of just do it for me meaning if there's a managed service out",
    "start": "825279",
    "end": "830560"
  },
  {
    "text": "there that does something that I want I'm going to use it pretty much every time why would I rebuild something",
    "start": "830560",
    "end": "837639"
  },
  {
    "text": "that there's an entire team team of dedicated developers out there uh that",
    "start": "837639",
    "end": "842880"
  },
  {
    "text": "is consistently improving maintaining and has domain expertise on that I I",
    "start": "842880",
    "end": "848759"
  },
  {
    "text": "don't have any of that right if I build it myself I'm gonna have to maintain it I'm gonna have to build this domain",
    "start": "848759",
    "end": "855199"
  },
  {
    "text": "knowledge around websockets that I don't really care about because I'm an app Dev",
    "start": "855199",
    "end": "860959"
  },
  {
    "text": "I care about solving business problems I don't care about infrastructure around",
    "start": "860959",
    "end": "866000"
  },
  {
    "text": "websockets so instead the easier way this is going to sound like a sales pitch a swe it's not very excited about",
    "start": "866000",
    "end": "872959"
  },
  {
    "text": "it uh you can use momento topics which is basically managed everything that we just look at uh so instead of web",
    "start": "872959",
    "end": "880600"
  },
  {
    "text": "sockets under the hood it actually uses grpc uh for these stateful connections",
    "start": "880600",
    "end": "887000"
  },
  {
    "text": "it feels just like a websocket but it's it's not uh and it just provides really fast really good scalable connectivity",
    "start": "887000",
    "end": "895440"
  },
  {
    "text": "between producers and consumers we'll get into that uh in a second but really",
    "start": "895440",
    "end": "901399"
  },
  {
    "text": "I want to frame this one as managed real time notifications I don't want to do",
    "start": "901399",
    "end": "907199"
  },
  {
    "text": "all of these really big architecture diagrams I just want one box that says momento and have that handled for me",
    "start": "907199",
    "end": "913800"
  },
  {
    "text": "because they have the domain expertise not me and what's nice about that is",
    "start": "913800",
    "end": "918920"
  },
  {
    "text": "that it gives you the ability to really focus on solving the business problems uh if you guys attended Sam's talk you",
    "start": "918920",
    "end": "925839"
  },
  {
    "text": "figure out like who's the producer who is the consumer not where in my architecture are these",
    "start": "925839",
    "end": "932079"
  },
  {
    "text": "things coming from it's where where's the source where's the business that is driving these events and what do I need",
    "start": "932079",
    "end": "939399"
  },
  {
    "text": "to do to react to the event so I'm not building up all these different architectures around all that really",
    "start": "939399",
    "end": "944839"
  },
  {
    "text": "helps you focus and keep a tight lock on the domain that you work in so let's",
    "start": "944839",
    "end": "951480"
  },
  {
    "text": "look at this again nothing's changed this is just the big way too much",
    "start": "951480",
    "end": "957440"
  },
  {
    "text": "implementation of of a websocket and we don't like it we're going to throw it away what we're going to do is we're",
    "start": "957440",
    "end": "963040"
  },
  {
    "text": "going to bring back just that data flow and this doesn't change I think we've all implemented a workflow very very",
    "start": "963040",
    "end": "969560"
  },
  {
    "text": "similar to this but there's one thing in here that I don't really like and if you",
    "start": "969560",
    "end": "975199"
  },
  {
    "text": "guys have caught it it's that Lambda function at the end best practice really is to have Lambda function dedicated to",
    "start": "975199",
    "end": "981480"
  },
  {
    "text": "one thing and that you can see there's two arrows off of it it's doing two things I don't like that so we're going to change that so in instead of having a",
    "start": "981480",
    "end": "990240"
  },
  {
    "text": "Lambda function index something in open search and publish domain events what",
    "start": "990240",
    "end": "996040"
  },
  {
    "text": "we're going to do instead is we're just going to let that Lambda function live and die with open search doesn't care",
    "start": "996040",
    "end": "1001759"
  },
  {
    "text": "about the domain events but instead what we're going to do is we still need those domain events published so we're just",
    "start": "1001759",
    "end": "1008639"
  },
  {
    "text": "going to use an event Bridge pipe pipe that over to an API destination the API destination is going to call momentos",
    "start": "1008639",
    "end": "1015120"
  },
  {
    "text": "HTTP API that'll say hey publish this domain event for me and Route this to all my subscribers that",
    "start": "1015120",
    "end": "1022880"
  },
  {
    "text": "care now let's take a look at what that actually literally looks like if you're going to implement that uh in JavaScript",
    "start": "1022880",
    "end": "1029240"
  },
  {
    "text": "so you have your guy uh your client over here maybe he's has a web page",
    "start": "1029240",
    "end": "1034760"
  },
  {
    "text": "open you have these three lines of code where one of the lines is a parenthese",
    "start": "1034760",
    "end": "1040400"
  },
  {
    "text": "and a curly bracket and a semicolon where he's subscribing to get updates on farm animals specifically",
    "start": "1040400",
    "end": "1047558"
  },
  {
    "text": "goats so he has we have this dedicated topic for goats and he has a event handler that",
    "start": "1047559",
    "end": "1053520"
  },
  {
    "text": "says whenever a message comes in give it to me let me run this event handler off of it and when that happens when that",
    "start": "1053520",
    "end": "1059919"
  },
  {
    "text": "code actually executes in this browser session what happens is that grpc connection I mentioned earlier gets",
    "start": "1059919",
    "end": "1066559"
  },
  {
    "text": "established between the web browser and momento topics it's acting as that routing layer uh over there so he's",
    "start": "1066559",
    "end": "1073320"
  },
  {
    "text": "subscribed to there so when our friend over there on the left hand side creates",
    "start": "1073320",
    "end": "1080840"
  },
  {
    "text": "a new goat in our farm tracking system we go through the standard",
    "start": "1080840",
    "end": "1085919"
  },
  {
    "text": "workflow the data gets indexed into open search but instead we've transformed the",
    "start": "1085919",
    "end": "1092120"
  },
  {
    "text": "data and sent it off to that API destination which means this is the part that I think is extremely cool we can",
    "start": "1092120",
    "end": "1100120"
  },
  {
    "text": "add publishing domain events in our applications with literally no compute",
    "start": "1100120",
    "end": "1106720"
  },
  {
    "text": "code at all a pipe to an evridge API destination is just configuration so",
    "start": "1106720",
    "end": "1112400"
  },
  {
    "text": "we're just adding configuration to to pipe these things over it's literally no logic that you're adding into your app",
    "start": "1112400",
    "end": "1118360"
  },
  {
    "text": "which I think is very very cool so it gets published it goes over to momento topics which is again acting like that",
    "start": "1118360",
    "end": "1124640"
  },
  {
    "text": "routing layer and then topics will route that message immediately over those grpc",
    "start": "1124640",
    "end": "1130880"
  },
  {
    "text": "connections to the people that care about goats which I assume is everybody and one of the cool things that we're",
    "start": "1130880",
    "end": "1136480"
  },
  {
    "text": "going to get to uh here in a few few minutes but I want to bring it to light at the very beginning is a subscriber",
    "start": "1136480",
    "end": "1143159"
  },
  {
    "text": "can be anywhere it can be a web page and in a browser it can be a service in the",
    "start": "1143159",
    "end": "1149400"
  },
  {
    "text": "in the back end it can even be some deep container in a kubernetes cluster",
    "start": "1149400",
    "end": "1155679"
  },
  {
    "text": "doesn't matter as long as it can establish that grpc connection to topics",
    "start": "1155679",
    "end": "1161000"
  },
  {
    "text": "you can publish to it and And subscribe it's actually really really cool the flexibility that you",
    "start": "1161000",
    "end": "1166320"
  },
  {
    "text": "have so that's great I have to address the elephant in the room which is always security uh this sounds really open and",
    "start": "1166320",
    "end": "1174240"
  },
  {
    "text": "it is but we have ways for you to scope it down so with momento everything of course requires a token an off token and",
    "start": "1174240",
    "end": "1183720"
  },
  {
    "text": "we do access control based on the token that initializes our SDK clients or is",
    "start": "1183720",
    "end": "1189240"
  },
  {
    "text": "passed into the uh HTTP end points and those tokens have scopes of course that",
    "start": "1189240",
    "end": "1195840"
  },
  {
    "text": "you can create and these tokens are shortlived in nature sure they only live like an hour and then they expire uh but",
    "start": "1195840",
    "end": "1201400"
  },
  {
    "text": "what's really cool is that we can add these permissions inside of these tokens that say okay you can only access data",
    "start": "1201400",
    "end": "1207240"
  },
  {
    "text": "in this cache or you can only access uh these topics which are really flexible",
    "start": "1207240",
    "end": "1214640"
  },
  {
    "text": "uh Magic strings again we'll get this get to that in a minute uh but you can also say allow this person to only",
    "start": "1214640",
    "end": "1221280"
  },
  {
    "text": "subscribe or only publish or both you can really hone in on exactly what that",
    "start": "1221280",
    "end": "1226960"
  },
  {
    "text": "person is or isn't allowed to to do and you can do that down to a key level or even a key prefix level so if you have",
    "start": "1226960",
    "end": "1233520"
  },
  {
    "text": "your topics uh prefixed with a tenant ID you can scope tokens down to say only",
    "start": "1233520",
    "end": "1239440"
  },
  {
    "text": "use topics that have that tenant ID leading key so now we're going to look we're",
    "start": "1239440",
    "end": "1245400"
  },
  {
    "start": "1243000",
    "end": "1565000"
  },
  {
    "text": "going to take a peek under the covers a little bit because I actually think this is one of the coolest things about uh",
    "start": "1245400",
    "end": "1250799"
  },
  {
    "text": "topics we're going to look simply this is know an oversimplified graph of what",
    "start": "1250799",
    "end": "1257440"
  },
  {
    "text": "a serverless service looks like behind the scenes there's three major pieces there's a routing tier which Fields all",
    "start": "1257440",
    "end": "1265360"
  },
  {
    "text": "of the incoming requests there's a storage tier you can guess what those do those house cach data it also houses the",
    "start": "1265360",
    "end": "1272840"
  },
  {
    "text": "topic messages and then you have your control plane that's kind of the brains of the entire operation so that's the",
    "start": "1272840",
    "end": "1278120"
  },
  {
    "text": "part that monitors the storage tier for when things get uh close to full when alarms start going off it automatically",
    "start": "1278120",
    "end": "1284960"
  },
  {
    "text": "scales the storage in and out I have a another talk that I give on how the",
    "start": "1284960",
    "end": "1290840"
  },
  {
    "text": "caching service is built uh where I go super in-depth into all this so I'm going to save the super in-depth uh for",
    "start": "1290840",
    "end": "1298960"
  },
  {
    "text": "another time but uh I do have content out there if you are interested in how serverless caching works but since we're",
    "start": "1298960",
    "end": "1305520"
  },
  {
    "text": "here to talk about realtime notifications we're actually going to slice and dice this a couple of different ways really I wanted to just",
    "start": "1305520",
    "end": "1310679"
  },
  {
    "text": "set the groundwork for what are the three major components and then we're going to look at it in a slightly different lens when we're talking about",
    "start": "1310679",
    "end": "1317760"
  },
  {
    "text": "man managing all these connections all these stateful connections with browsers and services and containers how does",
    "start": "1317760",
    "end": "1323600"
  },
  {
    "text": "that work how do we scale that how can we say we provide serverless capabilities and we can do that by",
    "start": "1323600",
    "end": "1329799"
  },
  {
    "text": "saying we have a a two-tier architecture the first layer that routing layer is the thing that Fields all the requests",
    "start": "1329799",
    "end": "1335000"
  },
  {
    "text": "and establishes connections with people out in the field or Services out in the field and internally all the messages",
    "start": "1335000",
    "end": "1342600"
  },
  {
    "text": "are saved on a storage tier on our storage layer and the storage layers are easy2 instances that have a bunch of",
    "start": "1342600",
    "end": "1349039"
  },
  {
    "text": "containers running on them and data partitions different storage mechanisms inside of each one of those now what's",
    "start": "1349039",
    "end": "1355640"
  },
  {
    "text": "really cool about topics it's different about things like SNS or other messaging",
    "start": "1355640",
    "end": "1361480"
  },
  {
    "text": "services that you've seen is that topics are Dynamic you don't have to create uh",
    "start": "1361480",
    "end": "1367400"
  },
  {
    "text": "specific Cloud resources to be able to publish to something you can alluded to this earlier publish to Magic strings",
    "start": "1367400",
    "end": "1374159"
  },
  {
    "text": "and it works and how does that work we actually use a rendevu hashing algorithm",
    "start": "1374159",
    "end": "1382039"
  },
  {
    "text": "based on the name space and the topic name and the customer it all says okay",
    "start": "1382039",
    "end": "1388039"
  },
  {
    "text": "well based on how all this is uh shaped we hash it you're going to go to this",
    "start": "1388039",
    "end": "1393200"
  },
  {
    "text": "specific storage tier to this specific container again it's called a rendevu",
    "start": "1393200",
    "end": "1398400"
  },
  {
    "text": "hashing highly recommend if you're interested in something like that it's a deterministic way to figure out where things need to go uh but because we've",
    "start": "1398400",
    "end": "1406600"
  },
  {
    "text": "implemented it that way uh you can get unlimited number of",
    "start": "1406600",
    "end": "1412120"
  },
  {
    "text": "topics or channels and don't have to do any resource management at all it's",
    "start": "1412120",
    "end": "1417200"
  },
  {
    "text": "really good for ephemeral environments it's really good for uh Dynamic",
    "start": "1417200",
    "end": "1422320"
  },
  {
    "text": "dynamically uh created narrowly scoped topics so it's a really cool thing so",
    "start": "1422320",
    "end": "1428360"
  },
  {
    "text": "we're going to go through an example we're going to again look at this architecture in a different way a simpler way so I've gotten rid of the",
    "start": "1428360",
    "end": "1435440"
  },
  {
    "text": "control plane it's not really necessary as far as our example goes uh but we have the routing layer and we have the",
    "start": "1435440",
    "end": "1440840"
  },
  {
    "text": "storage layer now I have five people that all want to track hail storms in",
    "start": "1440840",
    "end": "1446360"
  },
  {
    "text": "Dallas if you don't live in Texas March to July is hail season and roofers love",
    "start": "1446360",
    "end": "1454679"
  },
  {
    "text": "that big hail all the time they come in at least once a week so this is actually",
    "start": "1454679",
    "end": "1460720"
  },
  {
    "text": "a very applicable use case because they happen all the time so uh our routing layer is round robin so we have an",
    "start": "1460720",
    "end": "1466799"
  },
  {
    "text": "autoscaling uh group of ec2 instances in this routing layer and it's round robin",
    "start": "1466799",
    "end": "1473960"
  },
  {
    "text": "so let's just say three people come in and they all say I want hail uh hail",
    "start": "1473960",
    "end": "1479120"
  },
  {
    "text": "notifications for Dallas so they have a very specific topic that they're subscribing to and it gets fielded by",
    "start": "1479120",
    "end": "1487159"
  },
  {
    "text": "three different routing ec2 instances and they use this rendevu hash that we",
    "start": "1487159",
    "end": "1492799"
  },
  {
    "text": "were just talking about to say okay well based on the information that you're asking for that's going to live on this",
    "start": "1492799",
    "end": "1499760"
  },
  {
    "text": "storage node specifically so all of the tier one ec2",
    "start": "1499760",
    "end": "1505960"
  },
  {
    "text": "instances are establishing grpc connections to the storage layer so it say two tier almost exactly the same",
    "start": "1505960",
    "end": "1512919"
  },
  {
    "text": "thing uh from your end users internally inside of momento now when other people come in",
    "start": "1512919",
    "end": "1522080"
  },
  {
    "text": "and the round robin has restarted uh we're going to have multiple connections really looking at",
    "start": "1522080",
    "end": "1528240"
  },
  {
    "text": "the same thing now one of the reasons we use grpc for these instead of websockets",
    "start": "1528240",
    "end": "1533279"
  },
  {
    "text": "is because they support multiplexing which means you can have shared connections so instead of building",
    "start": "1533279",
    "end": "1541679"
  },
  {
    "text": "another connection from that routing layer to that storage layer we're actually just going to reuse what's",
    "start": "1541679",
    "end": "1547159"
  },
  {
    "text": "already there which allows us to get that uh really high fan out",
    "start": "1547159",
    "end": "1554399"
  },
  {
    "text": "scale uh to uh publish very very very fast very quickly so big advantage of",
    "start": "1554399",
    "end": "1560559"
  },
  {
    "text": "grpc on that one especially over something like websockets so here's the stuff",
    "start": "1560559",
    "end": "1567240"
  },
  {
    "start": "1565000",
    "end": "2513000"
  },
  {
    "text": "that I think is the coolest this is actually the majority of my job coming up with cool things that you can build",
    "start": "1567240",
    "end": "1573960"
  },
  {
    "text": "building them and talking about them uh so let's go through several examples because there are really cool use cases",
    "start": "1573960",
    "end": "1581679"
  },
  {
    "text": "at every level every type of connectivity that you can use with the same code so",
    "start": "1581679",
    "end": "1588159"
  },
  {
    "text": "I haven't seen any reactions go up probably because my QR code is uh is too small but if you happen to scan that QR",
    "start": "1588159",
    "end": "1596200"
  },
  {
    "text": "code it will bring you to a page uh and it will have just these emojis on it",
    "start": "1596200",
    "end": "1602919"
  },
  {
    "text": "thumbs up mind blown love it have one of Eric's face in there and you can uh",
    "start": "1602919",
    "end": "1610080"
  },
  {
    "text": "press these buttons and it will use momento topics to connect a browser session to a browser session so my page",
    "start": "1610080",
    "end": "1616720"
  },
  {
    "text": "that I'm presenting right here here is subscribed to this presentation's topic and the page that you're routed to",
    "start": "1616720",
    "end": "1624399"
  },
  {
    "text": "when you hit that QR code publishes to that topic so all it does is just",
    "start": "1624399",
    "end": "1631000"
  },
  {
    "text": "publish that message my browser picks it up and then displays a very fun Emoji or",
    "start": "1631000",
    "end": "1640440"
  },
  {
    "text": "comment actually uh on the screen but the good thing to note here the really interesting cool I think innovative",
    "start": "1640440",
    "end": "1648559"
  },
  {
    "text": "uh thing that we're doing is I don't really have any serers side components",
    "start": "1648559",
    "end": "1653720"
  },
  {
    "text": "to this I didn't build that architecture uh that we looked at earlier in AWS I",
    "start": "1653720",
    "end": "1659320"
  },
  {
    "text": "have yes two apis in there that are establishing and creating scoped tokens",
    "start": "1659320",
    "end": "1666279"
  },
  {
    "text": "to initialize my sdks but that's it I don't have any connection management I'm",
    "start": "1666279",
    "end": "1672679"
  },
  {
    "text": "not doing anything for managing the connections who does what I just said say publish here subscribe here boom",
    "start": "1672679",
    "end": "1680440"
  },
  {
    "text": "done and it works really cool uh really fun it took",
    "start": "1680440",
    "end": "1685600"
  },
  {
    "text": "me like 10 minutes to implement that the first time and thought it was just the the coolest thing no server side",
    "start": "1685600",
    "end": "1692960"
  },
  {
    "text": "components so let's talk about another one we're in the US I gave this presentation one time to uh people in",
    "start": "1692960",
    "end": "1699600"
  },
  {
    "text": "Europe and Germany and I said fantasy football and it's a whole thing uh but",
    "start": "1699600",
    "end": "1705320"
  },
  {
    "text": "we're where are we we're in Tennessee so we can actually talk about fantasy football the right way so Fantasy",
    "start": "1705320",
    "end": "1711320"
  },
  {
    "text": "Football uh what happens here you have a whole bunch of people that have their uh their fantasy teams they open the app",
    "start": "1711320",
    "end": "1718360"
  },
  {
    "text": "and your app code is just iterating over your players and what it's doing is as it's iterating over the players it is",
    "start": "1718360",
    "end": "1725399"
  },
  {
    "text": "establishing connections to topics dedicated to those specific players so",
    "start": "1725399",
    "end": "1730960"
  },
  {
    "text": "uh we have maybe if there's 10 people on your fantasy team you've opened 10",
    "start": "1730960",
    "end": "1736120"
  },
  {
    "text": "connections to to uh there are 10 topics so you've you've subscribed to 10",
    "start": "1736120",
    "end": "1741200"
  },
  {
    "text": "different things again dedicated channels and what happens is in a real",
    "start": "1741200",
    "end": "1747080"
  },
  {
    "text": "life football game people play so let's say that Patrick Mahomes passes for 44",
    "start": "1747080",
    "end": "1754760"
  },
  {
    "text": "yards very realistic scenario so whatever mechanism is out there on the",
    "start": "1754760",
    "end": "1759840"
  },
  {
    "text": "field reporting all these things does OPP post to our API Gateway maybe the data looks like this here's the player",
    "start": "1759840",
    "end": "1765600"
  },
  {
    "text": "ID here's what they did H that Lambda function does some compute",
    "start": "1765600",
    "end": "1770760"
  },
  {
    "text": "to calculate uh the number of points that's associated with 44 passing yards so it saves it into Dynamo DB in a",
    "start": "1770760",
    "end": "1777200"
  },
  {
    "text": "format like that preserves a little bit of what came in but also has the the number of points that it was worth that",
    "start": "1777200",
    "end": "1783840"
  },
  {
    "text": "goes into the Dynamo DB stream and then what we do is we transform that record",
    "start": "1783840",
    "end": "1789720"
  },
  {
    "text": "in our pipe to API destination pass that over to topics make it look like this",
    "start": "1789720",
    "end": "1796039"
  },
  {
    "text": "which is the HTTP endpoint for for topics and then it will broadcast that",
    "start": "1796039",
    "end": "1802279"
  },
  {
    "text": "down to everybody who has Patrick Mahomes on their team uh in real time so really what we're doing here is we're",
    "start": "1802279",
    "end": "1807640"
  },
  {
    "text": "passing Deltas down and uh the clients the the phones themselves or whatever",
    "start": "1807640",
    "end": "1813760"
  },
  {
    "text": "doesn't have to be a phone uh is responsible for updating the total score",
    "start": "1813760",
    "end": "1819000"
  },
  {
    "text": "so we're just passing in Deltas but really fun use case and this is a good example of a server to a",
    "start": "1819000",
    "end": "1826799"
  },
  {
    "text": "client so the last one that we looked at was client to client this is a server to a client",
    "start": "1826799",
    "end": "1832679"
  },
  {
    "text": "example feature Flags something that we all know probably uh and I wanted to",
    "start": "1832679",
    "end": "1839000"
  },
  {
    "text": "provide a good example uh of service to service so I drew my best example of",
    "start": "1839000",
    "end": "1844679"
  },
  {
    "text": "what I think kubernetes looks like I don't have any idea what it looks like just to be honest with you I assume it",
    "start": "1844679",
    "end": "1849919"
  },
  {
    "text": "looks like that uh but we're gonna we're gonna imagine that we have uh two nodes",
    "start": "1849919",
    "end": "1855720"
  },
  {
    "text": "two pods each two can containers each and what each one of these containers are doing as they start up as they're",
    "start": "1855720",
    "end": "1862279"
  },
  {
    "text": "running their their bootstrapping code is they are doing two things uh one it's fetching the current",
    "start": "1862279",
    "end": "1869600"
  },
  {
    "text": "state of feature flag data now let me take one step back real quick if we don't know what feature flags are let me",
    "start": "1869600",
    "end": "1875440"
  },
  {
    "text": "explain that really fast uh feature Flags really easy way to separate code",
    "start": "1875440",
    "end": "1880960"
  },
  {
    "text": "from configuration uh so uh we can configure",
    "start": "1880960",
    "end": "1886440"
  },
  {
    "text": "features to be turn on and off like if they're in active development let's say I'm adding a new feature into my web",
    "start": "1886440",
    "end": "1891919"
  },
  {
    "text": "application or uh I guess in this situation I'm doing something in the back end maybe I'm limiting the number",
    "start": "1891919",
    "end": "1896960"
  },
  {
    "text": "of threads that are running specific types of background processes uh they let you change things",
    "start": "1896960",
    "end": "1902159"
  },
  {
    "text": "on the fly without redeploying so it's a configuration management system so what a lot of these",
    "start": "1902159",
    "end": "1908840"
  },
  {
    "text": "configuration apps do like app config does this launch darkley does this all the all the big guys is they keep this",
    "start": "1908840",
    "end": "1915080"
  },
  {
    "text": "big object of of your feature flag data out there in memory and then whatever is",
    "start": "1915080",
    "end": "1922679"
  },
  {
    "text": "consuming it just reads off that uh big object to say okay well let me uh divert",
    "start": "1922679",
    "end": "1929240"
  },
  {
    "text": "here for this tenant or divert here for that tenant show this field whatever the use case is so what we're doing is we're",
    "start": "1929240",
    "end": "1936159"
  },
  {
    "text": "loading that Big Blob out of a cache out of remote centralized cache that all these uh containers have access to",
    "start": "1936159",
    "end": "1942519"
  },
  {
    "text": "because it's remote and centralized it's not local on any of them loading that Big Blob and then we're subscribing",
    "start": "1942519",
    "end": "1948440"
  },
  {
    "text": "again for Deltas so what's happening is if I change something what I'll do is I",
    "start": "1948440",
    "end": "1954120"
  },
  {
    "text": "will grab the flag that's changed and then update that giant blob that I have in memory what that actually looks like",
    "start": "1954120",
    "end": "1961320"
  },
  {
    "text": "as far as an implementation goes is maybe you have your feature flag dashboard it's setting the color of a",
    "start": "1961320",
    "end": "1968000"
  },
  {
    "text": "background on a web page or a button it's limiting the number of threads in a",
    "start": "1968000",
    "end": "1973039"
  },
  {
    "text": "background process but I have a web page I change it it goes through I update the",
    "start": "1973039",
    "end": "1981440"
  },
  {
    "text": "cache and then I publish the Delta to topics and as I do that it fans out and",
    "start": "1981440",
    "end": "1988720"
  },
  {
    "text": "goes to everybody at the same time so we have successfully manage to synchronize",
    "start": "1988720",
    "end": "1993880"
  },
  {
    "text": "State across a fleet of containers in real time so this is again an example of",
    "start": "1993880",
    "end": "2000080"
  },
  {
    "text": "server to server or back end to backend Communications with the same mechanism we were doing browser to browser and",
    "start": "2000080",
    "end": "2006559"
  },
  {
    "text": "service to browser so a lot of capabilities on that chat this one always makes me laugh",
    "start": "2006559",
    "end": "2014159"
  },
  {
    "text": "because chat is something it's such an approachable use case because you see it everywhere whether or not you actually",
    "start": "2014159",
    "end": "2020039"
  },
  {
    "text": "realize that's what you're seeing like I was on uh the Home Depot website like I always am because it live on a farm and",
    "start": "2020039",
    "end": "2027200"
  },
  {
    "text": "I was searching for the current cost of 2x4s and I just get a little notification in the bottom right that",
    "start": "2027200",
    "end": "2033360"
  },
  {
    "text": "says hey do you want to chat it's like oh wow okay even Home Depot has a chat",
    "start": "2033360",
    "end": "2038960"
  },
  {
    "text": "uh everybody has it nowadays and what I like about chat specifically at least when we're talking about real time",
    "start": "2038960",
    "end": "2044960"
  },
  {
    "text": "notifications is it's a use case everybody understands and it's a very very easily solved problem in very much",
    "start": "2044960",
    "end": "2052679"
  },
  {
    "text": "the same way that uh we were just looking at with the feature flag uh solution so what happens here is",
    "start": "2052679",
    "end": "2059800"
  },
  {
    "text": "you have two browsers and they hit the same URL to the chat room and when you",
    "start": "2059800",
    "end": "2067398"
  },
  {
    "text": "land on that uh chat page we have some code that's going to do two things one",
    "start": "2067399",
    "end": "2074000"
  },
  {
    "text": "it's going to fetch the message history what happened prior to me getting here out of the cache and then it's going to subscribe",
    "start": "2074000",
    "end": "2080878"
  },
  {
    "text": "for messages I I want the Deltas again give me everything that happened so far",
    "start": "2080879",
    "end": "2085960"
  },
  {
    "text": "and tell me when something new happens so uh what ends up happening is",
    "start": "2085960",
    "end": "2093200"
  },
  {
    "text": "you type in a message hit enter and then that's all the code that you have have to run to actually publish a message and",
    "start": "2093200",
    "end": "2099680"
  },
  {
    "text": "get that to go over to all your different connected chat windows so between oh no that doesn't go backwards",
    "start": "2099680",
    "end": "2107440"
  },
  {
    "text": "uh between the Subscribe and the uh publish we're looking at like six lines",
    "start": "2107440",
    "end": "2113320"
  },
  {
    "text": "of code for an actual chat application which is really neat with no backend",
    "start": "2113320",
    "end": "2119280"
  },
  {
    "text": "serers side components that look familiar to anybody hopefully some of you played The Sims",
    "start": "2119280",
    "end": "2125680"
  },
  {
    "text": "before um but what you can do really easy nowaday or now with topics and",
    "start": "2125680",
    "end": "2131280"
  },
  {
    "text": "realtime notifications is you can pass status updates of long running uh jobs",
    "start": "2131280",
    "end": "2137599"
  },
  {
    "text": "in real time as they happen so you know the Sims they tried to make it fun I think that talks about like llamas and",
    "start": "2137599",
    "end": "2144599"
  },
  {
    "text": "and whatnot and sometimes it's nonsense what they display on the screen but you can actually do real meaningful updates",
    "start": "2144599",
    "end": "2151640"
  },
  {
    "text": "in these longer workflows down to the browser for people that are waiting for long running jobs so one of the the cool",
    "start": "2151640",
    "end": "2157119"
  },
  {
    "text": "use cases that I saw uh I think it was earlier this year was from David Bo he's",
    "start": "2157119",
    "end": "2163560"
  },
  {
    "text": "here today he was uh just speaking and he made an application that creates",
    "start": "2163560",
    "end": "2169599"
  },
  {
    "text": "stories for his kids it writes it uses gen there's my mandatory gen reference",
    "start": "2169599",
    "end": "2177319"
  },
  {
    "text": "uh it uses gen to actually create the story it goes and it creates an image that represents the story and then it",
    "start": "2177319",
    "end": "2183119"
  },
  {
    "text": "translates that or it does speech to text text the speech there we go uh so",
    "start": "2183119",
    "end": "2188800"
  },
  {
    "text": "it actually reads the story so everything is generated for that and that's a semilong running process and if",
    "start": "2188800",
    "end": "2194240"
  },
  {
    "text": "you're waiting for that if you have a web page or uh something that's allowing you to set some parameters to go and",
    "start": "2194240",
    "end": "2200680"
  },
  {
    "text": "build a a story and you're waiting for it you want to know what's happening I don't want to",
    "start": "2200680",
    "end": "2206319"
  },
  {
    "text": "see a 30- second spinny because I don't know when it's done I don't know if",
    "start": "2206319",
    "end": "2211599"
  },
  {
    "text": "there's any progress being made so here's a step function workflow that takes advantage of that API destination",
    "start": "2211599",
    "end": "2218000"
  },
  {
    "text": "we were talking about earlier so before each one of these long running steps I",
    "start": "2218000",
    "end": "2224040"
  },
  {
    "text": "don't know if you can read that or not but uh we have a Lambda function calling Bedrock that says create a story for me",
    "start": "2224040",
    "end": "2230839"
  },
  {
    "text": "here's some parameters uh before we do that I guess after we do that we just",
    "start": "2230839",
    "end": "2236440"
  },
  {
    "text": "publish an event that says here's the status generating story continue the",
    "start": "2236440",
    "end": "2241560"
  },
  {
    "text": "process go down now we need to create an image for it so we're going to drop another event on the event Bridge us",
    "start": "2241560",
    "end": "2247319"
  },
  {
    "text": "that's going to go it's going to publish a status update to all the connected browsers and it's going to say hey now",
    "start": "2247319",
    "end": "2253520"
  },
  {
    "text": "I'm generating a picture for you it's going to in parallel go over and translate the text to speech through",
    "start": "2253520",
    "end": "2261480"
  },
  {
    "text": "poly say now I'm creating audio for you it's just giving you these updates for these things that take seconds to",
    "start": "2261480",
    "end": "2268079"
  },
  {
    "text": "minutes and letting your users know that yes things are actually happening and",
    "start": "2268079",
    "end": "2274480"
  },
  {
    "text": "meaningfully much more so than the Sims and then when it's done you can do the",
    "start": "2274480",
    "end": "2279560"
  },
  {
    "text": "same thing you can publish an event but you can actually send it to a new URL and make that browser that's waiting",
    "start": "2279560",
    "end": "2285880"
  },
  {
    "text": "redirect to the actual story page super cool things that you can do that just keep people",
    "start": "2285880",
    "end": "2293240"
  },
  {
    "text": "hooked so this is one that actually was surfaced to me uh this week from",
    "start": "2293240",
    "end": "2299720"
  },
  {
    "text": "somebody uh named Elias branch and it's something that I just thought was the coolest absolute coolest use case I had",
    "start": "2299720",
    "end": "2305960"
  },
  {
    "text": "not thought of this at all and I think there's a lot of Merit to this so he's",
    "start": "2305960",
    "end": "2311599"
  },
  {
    "text": "using topics to uh test event driven architectures in a unit testy end to-end",
    "start": "2311599",
    "end": "2319839"
  },
  {
    "text": "test way so what he does is he subscribes to an event topic so he's",
    "start": "2319839",
    "end": "2326200"
  },
  {
    "text": "he's testing to make sure that a domain event is being triggered when he creates a new entity so he subscribes to a topic",
    "start": "2326200",
    "end": "2333599"
  },
  {
    "text": "dedicated to that hits the endpoint the endpoint goes",
    "start": "2333599",
    "end": "2338720"
  },
  {
    "text": "asynchronous does its thing it's going to eventbridge eventbridge uh we have a rule that will pick up all the event",
    "start": "2338720",
    "end": "2345839"
  },
  {
    "text": "Bridge messages publish them to a topic and then that topic is connected down to",
    "start": "2345839",
    "end": "2351319"
  },
  {
    "text": "his unit test and and test suite and he just waits for a",
    "start": "2351319",
    "end": "2356640"
  },
  {
    "text": "message you can kind of see the code over there he's waiting for a message to come in that matches the format that he",
    "start": "2356640",
    "end": "2362119"
  },
  {
    "text": "expects and if it doesn't come in in the time that it takes for the test the",
    "start": "2362119",
    "end": "2367960"
  },
  {
    "text": "timeout he knows something went wrong so it's a it's a really cool way to",
    "start": "2367960",
    "end": "2373240"
  },
  {
    "text": "synchronously test asynchronous workflows in a in a meaningful way like",
    "start": "2373240",
    "end": "2379760"
  },
  {
    "text": "you don't have to manage the topics you don't have to do any of that it's all ephemeral and",
    "start": "2379760",
    "end": "2386200"
  },
  {
    "text": "dynamic so I wanted to point this one out because this is one of the cooler things that I think you can build with",
    "start": "2386200",
    "end": "2394520"
  },
  {
    "text": "uh with momento in general and one of the common most common patterns that I",
    "start": "2394520",
    "end": "2400880"
  },
  {
    "text": "use when I'm building apis on AWS is I put a Lambda authorizer on top of my API Gateway as opposed to using Cognito I",
    "start": "2400880",
    "end": "2407760"
  },
  {
    "text": "mean you certainly can use Cognito uh and the the premise applies here but I use L authorizer A lot it validates the",
    "start": "2407760",
    "end": "2414760"
  },
  {
    "text": "JWT and then it loads information about the user that's encoded in that",
    "start": "2414760",
    "end": "2420119"
  },
  {
    "text": "JWT and a lot of systems that I build they ro-based so we do ro based access control and the return turn statement",
    "start": "2420119",
    "end": "2427839"
  },
  {
    "text": "out of a Lambda authorizer is a policy uh and that policy tells API Gateway",
    "start": "2427839",
    "end": "2433079"
  },
  {
    "text": "that yes this person can or cannot access this list of end points but it also provides a context object and you",
    "start": "2433079",
    "end": "2439920"
  },
  {
    "text": "can enrich that context object with like the username really whatever you want uh these are the roles that this person has",
    "start": "2439920",
    "end": "2445280"
  },
  {
    "text": "that you can use in your Downstream services like step function and Lambda and all that I'm going to assume that you guys",
    "start": "2445280",
    "end": "2451720"
  },
  {
    "text": "do that and you've already implemented that and that exists in your apps today so if you wanted to start using momento",
    "start": "2451720",
    "end": "2459319"
  },
  {
    "text": "topics in a meaningful way where you can actually safely limit what people can",
    "start": "2459319",
    "end": "2465160"
  },
  {
    "text": "and can't access just add the Au generation into your L authorizer and pass that in the request context now you",
    "start": "2465160",
    "end": "2472119"
  },
  {
    "text": "have a limited scope token to exactly what the caller has access to that you",
    "start": "2472119",
    "end": "2478800"
  },
  {
    "text": "can use Downstream if you have a get profile API",
    "start": "2478800",
    "end": "2485800"
  },
  {
    "text": "endpoint you can Echo that back uh in the get profile that runs to a",
    "start": "2485800",
    "end": "2492319"
  },
  {
    "text": "browser and get the same token in the browser that you're using in the back end and really just tie a lot of",
    "start": "2492319",
    "end": "2500440"
  },
  {
    "text": "security into one single token so it's it's really cool super low lift be able to actually instrument your apps to use",
    "start": "2500440",
    "end": "2507839"
  },
  {
    "text": "these types of tokens to enable this kind kind of connectivity",
    "start": "2507839",
    "end": "2514440"
  },
  {
    "start": "2513000",
    "end": "2585000"
  },
  {
    "text": "okay so we're slightly early but that's okay we're going to go over the things that uh that",
    "start": "2514440",
    "end": "2521400"
  },
  {
    "text": "we learned so real- time notifications there aren't onetoone",
    "start": "2521400",
    "end": "2526520"
  },
  {
    "text": "websockets websockets are realtime notifications but not all real-time notifications are websockets there's a",
    "start": "2526520",
    "end": "2531680"
  },
  {
    "text": "lot of different other options that you have uh topics can connect everything it can do browser to browser it can do",
    "start": "2531680",
    "end": "2538400"
  },
  {
    "text": "service to browser it can do service to service really the the possibilities are",
    "start": "2538400",
    "end": "2543720"
  },
  {
    "text": "are Limitless and it uses the same code it doesn't matter where you're subscribing or where you're publishing from it's the",
    "start": "2543720",
    "end": "2550680"
  },
  {
    "text": "same and then hopefully you guys learned a little bit about how serverless Services work I know I kind of blew",
    "start": "2550680",
    "end": "2555960"
  },
  {
    "text": "through that but uh it's a it's a really cool interesting way of how you can take",
    "start": "2555960",
    "end": "2561480"
  },
  {
    "text": "advantage of some of these uh technical implementations like grpc to maximize",
    "start": "2561480",
    "end": "2566680"
  },
  {
    "text": "fan out and scaling capabilities you know reusing or taking advantage of multiplexing to scale out connections so",
    "start": "2566680",
    "end": "2573839"
  },
  {
    "text": "it is a lot of fun uh to to build with this because it's in a lot of cases",
    "start": "2573839",
    "end": "2580599"
  },
  {
    "text": "three six lines of code to actually get something that works so thank you very",
    "start": "2580599",
    "end": "2586000"
  },
  {
    "start": "2585000",
    "end": "2601000"
  },
  {
    "text": "[Applause]",
    "start": "2586000",
    "end": "2591949"
  },
  {
    "text": "much",
    "start": "2599760",
    "end": "2602760"
  }
]