[
  {
    "start": "0",
    "end": "180000"
  },
  {
    "text": "[Music]",
    "start": "960",
    "end": "8889"
  },
  {
    "text": "I did stick my Twitter handle in the bottom corner because I love it when people tweet offensive things about me uh something I would say is I've spent",
    "start": "13740",
    "end": "21359"
  },
  {
    "text": "the day talking to many of you lovely people so I've almost lost my voice if unfortunately I do lose my voice I will",
    "start": "21359",
    "end": "26939"
  },
  {
    "text": "continue in the medium of interpretive dance uh but also yeah we'll make sure that there's a version of this you can",
    "start": "26939",
    "end": "32940"
  },
  {
    "text": "see later and it has been recorded also my slide deck when the slide deck gets published has the entire script so if",
    "start": "32940",
    "end": "39300"
  },
  {
    "text": "you can't make out my broad Scottish accent you're covered uh and you press down for the next slide",
    "start": "39300",
    "end": "47040"
  },
  {
    "text": "so um firstly who am I a maker I love to build things uh I",
    "start": "47040",
    "end": "54059"
  },
  {
    "text": "build uh many kind of different things and I don't I'm a distinguished engineer",
    "start": "54059",
    "end": "61020"
  },
  {
    "text": "at mongodb but I don't work in product development I actually work these days in developer relations so I don't build",
    "start": "61020",
    "end": "66600"
  },
  {
    "text": "the core products themselves I build things with them and I feed that back my",
    "start": "66600",
    "end": "72119"
  },
  {
    "text": "experiences to our product teams to our developers and I also feed it back to to groups like yourself so I get paid to",
    "start": "72119",
    "end": "78960"
  },
  {
    "text": "build cool stuff and tell you all about it which is in fact the best job in the world",
    "start": "78960",
    "end": "84000"
  },
  {
    "text": "um I'm also a full stack engineer and when I say a full stack engineer I trained as a geologist so that I could",
    "start": "84000",
    "end": "89640"
  },
  {
    "text": "find silicon to build the chips um and uh and I will but these days I don't",
    "start": "89640",
    "end": "95820"
  },
  {
    "text": "I don't so much make my own chips these days but I do build my own Hardware my own firmware my own operating systems",
    "start": "95820",
    "end": "102200"
  },
  {
    "text": "all the way up to kind of large-scale Enterprise and the highest level of software development building something",
    "start": "102200",
    "end": "108299"
  },
  {
    "text": "called documentation um so a little bit about me",
    "start": "108299",
    "end": "113399"
  },
  {
    "text": "um I basically I build fun stuff for a living uh using Enterprise technology",
    "start": "113399",
    "end": "118439"
  },
  {
    "text": "principally using mongodb's Atlas developer data platform and occasionally",
    "start": "118439",
    "end": "124259"
  },
  {
    "text": "turning to AWS when I need some heavy lifting I also have a family",
    "start": "124259",
    "end": "131160"
  },
  {
    "text": "um I'm a husband I'm a father and one of the things I have to do is help care for an elderly relative and this is this is",
    "start": "131160",
    "end": "137340"
  },
  {
    "text": "relevant we will get to event driven bits don't worry um so they live alone they are in their",
    "start": "137340",
    "end": "142860"
  },
  {
    "text": "90s they have uh fairly severe dementia to the extent that they do not remember",
    "start": "142860",
    "end": "148560"
  },
  {
    "text": "what happened three minutes previously um but they're very keen to stay living",
    "start": "148560",
    "end": "153599"
  },
  {
    "text": "at home and we're keen for them to stay living at home as long as possible as long as they remember to eat drink as",
    "start": "153599",
    "end": "161280"
  },
  {
    "text": "long as we know if they've had visitors you know even if you pick up the phone even if they answer the phone and you say has anybody visited you today the",
    "start": "161280",
    "end": "167580"
  },
  {
    "text": "answer is going to be no you know even though 12 people could be in to see them",
    "start": "167580",
    "end": "172680"
  },
  {
    "text": "so um it is one of the tragedies of the elderly",
    "start": "172680",
    "end": "178080"
  },
  {
    "text": "um and in the end we decided that we needed to keep an eye on this person literally a few incidents meant that we",
    "start": "178080",
    "end": "186060"
  },
  {
    "start": "180000",
    "end": "398000"
  },
  {
    "text": "had to be able to tell you know had we eaten had we got up that morning had they had the visitors they were supposed",
    "start": "186060",
    "end": "192540"
  },
  {
    "text": "to have and for those of you worrying about privacy this particular person is is deemed actually not to have the mental",
    "start": "192540",
    "end": "199260"
  },
  {
    "text": "capacity to make their own decisions on this their care team on the other hand and those with power of attorney said no",
    "start": "199260",
    "end": "204840"
  },
  {
    "text": "we need a camera we need to be able to see what this elderly person is doing",
    "start": "204840",
    "end": "210300"
  },
  {
    "text": "and of course being the technical one in the family it fell to me to build or buy",
    "start": "210300",
    "end": "215580"
  },
  {
    "text": "this so they came and they said so uh camera can you come up with a discrete camera that we can put in there and we",
    "start": "215580",
    "end": "221340"
  },
  {
    "text": "can see what's happening now as I said earlier I don't like to buy stuff it's never quite what I want",
    "start": "221340",
    "end": "228599"
  },
  {
    "text": "I'd rather build it myself and so I decided that I would build a",
    "start": "228599",
    "end": "233940"
  },
  {
    "text": "camera subtly I'd done this before to watch this person it would upload the images",
    "start": "233940",
    "end": "239099"
  },
  {
    "text": "to something where we could view it with a browser on a mobile phone and importantly",
    "start": "239099",
    "end": "245360"
  },
  {
    "text": "nobody wants to spend their time sitting watching a video of an old person at least nobody normal does uh you know",
    "start": "245360",
    "end": "252720"
  },
  {
    "text": "this person's life there's a degree of privacy this is not a soap opera this is not reality TV and so I decided that",
    "start": "252720",
    "end": "259380"
  },
  {
    "text": "rather than watching it I would let artificial intelligence watch it for me and just give me a summary of the bits",
    "start": "259380",
    "end": "266460"
  },
  {
    "text": "and pieces I need to know I I don't need to look at what this old person is doing unless I'm told to",
    "start": "266460",
    "end": "273660"
  },
  {
    "text": "so this slide shows the overall architecture now there's lots of boxes there and I'm hoping you can read what's",
    "start": "273660",
    "end": "279419"
  },
  {
    "text": "written in them we're actually going to work our way around this and talk about the various parts of this architecture",
    "start": "279419",
    "end": "284840"
  },
  {
    "text": "roughly oranges AWS things blue is mongodb atlas developer data platform",
    "start": "284840",
    "end": "290940"
  },
  {
    "text": "things gray as a browser and red is a camera so red is this little thing here this is",
    "start": "290940",
    "end": "298680"
  },
  {
    "text": "uh an esp32 camera it's basically a camera with a microprocessor I've stuck",
    "start": "298680",
    "end": "304500"
  },
  {
    "text": "a USB power board on the back of it they cost about 10 pounds you program them with python or C plus plus",
    "start": "304500",
    "end": "312600"
  },
  {
    "text": "um they have Wi-Fi although they're very very slow the CPU in them is you know by",
    "start": "312600",
    "end": "318300"
  },
  {
    "text": "modern standards very slow they have dedicated encryption chips in them which means they can do https and so I wrote",
    "start": "318300",
    "end": "325979"
  },
  {
    "text": "code for this all right I modified code I'd already written for this which basically every minute takes a",
    "start": "325979",
    "end": "332220"
  },
  {
    "text": "photograph and it uploads it to mongodb using mongodb's data API",
    "start": "332220",
    "end": "337860"
  },
  {
    "text": "so mongodb has an API which is doesn't require any particular libraries it just",
    "start": "337860",
    "end": "343139"
  },
  {
    "text": "uses uh https I did consider encrypting the images in the camera",
    "start": "343139",
    "end": "349680"
  },
  {
    "text": "before I uploaded them and then I would decrypt them in the browser when I retrieve them so that they were",
    "start": "349680",
    "end": "354960"
  },
  {
    "text": "encrypted in Cloud this is actually something that mongodb is quite big on is this idea of why ever trust your",
    "start": "354960",
    "end": "361800"
  },
  {
    "text": "cloud provider if you can have end-to-end encryption where the client ends encrypt the data upload it and",
    "start": "361800",
    "end": "367800"
  },
  {
    "text": "download it that's good and we have stuff built into our libraries to actually do that for you automatically so that no decrypted data",
    "start": "367800",
    "end": "376259"
  },
  {
    "text": "or is ever in the cloud ditto the decryption keys are never in the cloud so you can have a zero trust",
    "start": "376259",
    "end": "382080"
  },
  {
    "text": "relationship with your cloud provider but in this case I didn't do that",
    "start": "382080",
    "end": "387240"
  },
  {
    "text": "because I do actually need to have the back end service literally look at the",
    "start": "387240",
    "end": "392340"
  },
  {
    "text": "image for me to work out what it's showing so we can let me know if there's anything out of the ordinary",
    "start": "392340",
    "end": "398900"
  },
  {
    "start": "398000",
    "end": "531000"
  },
  {
    "text": "now this is probably a good time to talk about mongodb unsurprisingly I'm here to talk about mongodb it's not a sales",
    "start": "399180",
    "end": "405900"
  },
  {
    "text": "pitch but it is somewhat informative so just to explain what is mongodb mongodb",
    "start": "405900",
    "end": "411840"
  },
  {
    "text": "is a is a document database okay so it's a strongly typed transactional document",
    "start": "411840",
    "end": "417180"
  },
  {
    "text": "database it's not Json database we'll cover that in a moment or two",
    "start": "417180",
    "end": "422580"
  },
  {
    "text": "um it has records records have Fields Fields have names names have values with data types it's not storing Json inside",
    "start": "422580",
    "end": "429720"
  },
  {
    "text": "it's actually binary data the real difference between a document database and a traditional rdbms tabular",
    "start": "429720",
    "end": "437639"
  },
  {
    "text": "database is that we say it's okay for a given field to have multiple values in a",
    "start": "437639",
    "end": "443819"
  },
  {
    "text": "record we have arrays if you like as a first order data type that's really the key difference between a document",
    "start": "443819",
    "end": "450060"
  },
  {
    "text": "database and a traditional rdbmx but it means then that where previously you might have needed two tables sometimes",
    "start": "450060",
    "end": "456360"
  },
  {
    "text": "you can get away with just one um so I store my images in mongodb and I",
    "start": "456360",
    "end": "464160"
  },
  {
    "text": "store the image as a as a binary blob I store the date of the image as a date not as a string representing the date uh",
    "start": "464160",
    "end": "471720"
  },
  {
    "text": "and the other thing I store in there up front is the the name of the camera because although I've built this for",
    "start": "471720",
    "end": "477240"
  },
  {
    "text": "myself it's built on an Enterprise stack that could easily support a hundred thousand cameras",
    "start": "477240",
    "end": "483900"
  },
  {
    "text": "um just to be clear on the Json thing we do use Json to represent mongodb data to",
    "start": "483900",
    "end": "489419"
  },
  {
    "text": "humans like here because if we show you just a bunch of bytes it doesn't look good but really you know the",
    "start": "489419",
    "end": "495960"
  },
  {
    "text": "relationship the mongodb has with Jason is the same one that Oracle has with CSV",
    "start": "495960",
    "end": "503160"
  },
  {
    "text": "that didn't even get a sticker it's a hard audience at this time of the day it wasn't very funny to be fair",
    "start": "503160",
    "end": "509940"
  },
  {
    "text": "um so the advantage of doing this is you can co-locate your data if I choose to embed one table inside another if you",
    "start": "509940",
    "end": "516899"
  },
  {
    "text": "like it's cool located it's explicitly joined it's easier to query it's quicker to query it's quicker to retrieve",
    "start": "516899",
    "end": "523919"
  },
  {
    "text": "um so that's basically what a date document database is it's mostly like a relational database but it's got a bit",
    "start": "523919",
    "end": "530220"
  },
  {
    "text": "of depth to it the real secret sauce for mongodb is its",
    "start": "530220",
    "end": "535260"
  },
  {
    "start": "531000",
    "end": "750000"
  },
  {
    "text": "API so when we can I'd say we created this kind of database but we didn't it was created in",
    "start": "535260",
    "end": "541620"
  },
  {
    "text": "the 1970s by the company I worked for previously but when mongodb popularized the idea of a document database the real",
    "start": "541620",
    "end": "548700"
  },
  {
    "text": "thing that they got right was the API the secrets Automotive is its API which",
    "start": "548700",
    "end": "553860"
  },
  {
    "text": "is a really nice way of interacting with objects you could have used SQL but SQL doesn't",
    "start": "553860",
    "end": "561240"
  },
  {
    "text": "have support for arrays and objects and we would have to have a custom one what mongodb did is it said look actually",
    "start": "561240",
    "end": "567779"
  },
  {
    "text": "most of the time you don't want your queries your operations to be text you literally want an API an SDK to interact",
    "start": "567779",
    "end": "575220"
  },
  {
    "text": "with that using objects and so um as in this example here you know what",
    "start": "575220",
    "end": "581399"
  },
  {
    "text": "we do is we get connections the database we create an object we'll call it a document we set some fields in that and",
    "start": "581399",
    "end": "588300"
  },
  {
    "text": "then we say find what objects are like this and we get back in Array of those objects everything is done with objects",
    "start": "588300",
    "end": "595019"
  },
  {
    "text": "even more importantly when we're updating data we're going to pass two things to that API call one is find",
    "start": "595019",
    "end": "602459"
  },
  {
    "text": "documents that match this like our find and the other is modify them in a way like this and that's an atomic operation",
    "start": "602459",
    "end": "609120"
  },
  {
    "text": "where it can say if the document is in this state modify it like this so we",
    "start": "609120",
    "end": "614399"
  },
  {
    "text": "don't read the document from the database change it at the client write it back again that's both inefficient in terms",
    "start": "614399",
    "end": "621300"
  },
  {
    "text": "of a network but also it gives you all kinds of contention issues now",
    "start": "621300",
    "end": "626519"
  },
  {
    "text": "I'm kind of confident in saying that this API the query API is the best way to work",
    "start": "626519",
    "end": "633959"
  },
  {
    "text": "with this and the reason I'm confident that saying that is that Oracle Amazon Microsoft and",
    "start": "633959",
    "end": "643740"
  },
  {
    "text": "IBM have all implemented this exact same mongodb API on top of their own databases because they acknowledge that",
    "start": "643740",
    "end": "651060"
  },
  {
    "text": "this is a great way to work with this data unfortunately at best they have about 35 of the functionality",
    "start": "651060",
    "end": "657899"
  },
  {
    "text": "but the will is there so anyway the thing about this uh and if",
    "start": "657899",
    "end": "664019"
  },
  {
    "text": "I just go back a slide [Applause] um if we look down kind of halfway down",
    "start": "664019",
    "end": "669360"
  },
  {
    "text": "the screen we'll see it says query dot salary is LT 50 000. that means less than 50 000. so we can",
    "start": "669360",
    "end": "676560"
  },
  {
    "text": "express not just an exact match but we can express things like you know find where the salary is less than 50 000.",
    "start": "676560",
    "end": "682260"
  },
  {
    "text": "that's all part of it being a software development kit an SDK where we've defined that LT function in your",
    "start": "682260",
    "end": "688140"
  },
  {
    "text": "programming language um and this can be you know programming language of your choice we have this for",
    "start": "688140",
    "end": "693720"
  },
  {
    "text": "Java we have it for C sharp we have it for JavaScript we have it for python we have it for Ruby you can get the idea",
    "start": "693720",
    "end": "700560"
  },
  {
    "text": "but sometimes you cannot use that SDK it's a library you'd link it in",
    "start": "700560",
    "end": "705899"
  },
  {
    "text": "sometimes you're programming in an environment where you can't do that guess what if you're programming on a",
    "start": "705899",
    "end": "711180"
  },
  {
    "text": "microcontroller which only has like 64 kilobytes of memory on it you're not going to be including this SDK so that's",
    "start": "711180",
    "end": "718260"
  },
  {
    "text": "why we created um the data API the data API is that",
    "start": "718260",
    "end": "723720"
  },
  {
    "text": "same API without the library so basically if you want to call from home mongodb but you do not want to include",
    "start": "723720",
    "end": "731100"
  },
  {
    "text": "the libraries um or rather you're unable to include the libraries because it not including",
    "start": "731100",
    "end": "737519"
  },
  {
    "text": "the libraries when you could just not a great idea uh that's what the data API",
    "start": "737519",
    "end": "742740"
  },
  {
    "text": "is for I'm still going to get to events don't worry so anyway we upload the images to the",
    "start": "742740",
    "end": "747899"
  },
  {
    "text": "system next and and we program it using the in my",
    "start": "747899",
    "end": "754320"
  },
  {
    "start": "750000",
    "end": "838000"
  },
  {
    "text": "case the Arduino IDE which is a lovely little IDE that we can use for programming microprocessor boards quick",
    "start": "754320",
    "end": "759480"
  },
  {
    "text": "show of hands anybody done any microprocessor Arduino IDE small Computing yeah actually that's about",
    "start": "759480",
    "end": "764820"
  },
  {
    "text": "half the room that's nice to see I know you're a guy big Computing Enterprise people nowadays but small computers can",
    "start": "764820",
    "end": "770639"
  },
  {
    "text": "be fun too so the next thing",
    "start": "770639",
    "end": "776420"
  },
  {
    "text": "information I need to be able to see these images that I've uploaded so all that's built on Monday B's",
    "start": "776760",
    "end": "784139"
  },
  {
    "text": "developer data platform so we have static hosting I'm hosting basically a single web page which I use to do this",
    "start": "784139",
    "end": "791240"
  },
  {
    "text": "uh obviously the data is held in the mongodb cluster because that's what we uploaded it to I have Atlas functions",
    "start": "791240",
    "end": "797760"
  },
  {
    "text": "and triggers so in that I'm actually able to define a function on the server",
    "start": "797760",
    "end": "803519"
  },
  {
    "text": "which returns me not just the image but Associated metadata and then call it from the web page so mongodb has a",
    "start": "803519",
    "end": "810360"
  },
  {
    "text": "browser SDK that lets you call serverless functions you know think if you like of a browser SDK that lets you",
    "start": "810360",
    "end": "817860"
  },
  {
    "text": "call Lambda functions but without you actually having to do all of the https",
    "start": "817860",
    "end": "823880"
  },
  {
    "text": "endpoints making https calls but that all wrapped up in a secure RPC mechanism",
    "start": "823880",
    "end": "831180"
  },
  {
    "text": "and then that's all tied into app Services authentication because obviously if I'm going to build an app like this I need somebody to log in",
    "start": "831180",
    "end": "837839"
  },
  {
    "text": "now because I like showing code samples this is the code that needs to go in the",
    "start": "837839",
    "end": "843120"
  },
  {
    "start": "838000",
    "end": "914000"
  },
  {
    "text": "browser for this so just to quickly walk through this uh I include the uh the",
    "start": "843120",
    "end": "848940"
  },
  {
    "text": "appropriate library at the top or the appropriate JavaScript from a CDN I create a realm.app object and I pass",
    "start": "848940",
    "end": "857339"
  },
  {
    "text": "it my unique ID for my application which the back end gives me I check if there",
    "start": "857339",
    "end": "862500"
  },
  {
    "text": "is a currently user logged in and if not I can pass it different kinds of credentials here I'm passing username",
    "start": "862500",
    "end": "868680"
  },
  {
    "text": "and password I've simplified this code slightly just to make it easier I wait",
    "start": "868680",
    "end": "873720"
  },
  {
    "text": "for the login and then I can actually just call a function on the server so that's all the code I need in a web page",
    "start": "873720",
    "end": "880019"
  },
  {
    "text": "to securely and authenticatedly call a server side function that knows who I am",
    "start": "880019",
    "end": "885720"
  },
  {
    "text": "and can pass that credentials down to the the database really really nice for building",
    "start": "885720",
    "end": "891959"
  },
  {
    "text": "applications everybody thinks yeah I'm going to build a web service and I'm going to call it with axios that's a",
    "start": "891959",
    "end": "897660"
  },
  {
    "text": "ugly kind of uh way of doing it it's much nicer to actually have a proper RPC",
    "start": "897660",
    "end": "902820"
  },
  {
    "text": "mechanism that deals all the data typing and everything else and bear in mind data typing matters you know adjacent",
    "start": "902820",
    "end": "908940"
  },
  {
    "text": "doesn't do dates so you know you end up having to process all of that yourself",
    "start": "908940",
    "end": "914699"
  },
  {
    "start": "914000",
    "end": "1429000"
  },
  {
    "text": "and then the second part of this is I created a serverless function so rather than call the database API I prefer Once",
    "start": "914699",
    "end": "923100"
  },
  {
    "text": "Upon a Time It's called three-tier architecture I'm going to make business functions that do just what I want them to do and then I'm going to call them from my client end so I have a function",
    "start": "923100",
    "end": "930480"
  },
  {
    "text": "that I can call that says get me the latest image in this case this is a server-side serverless function that is",
    "start": "930480",
    "end": "936779"
  },
  {
    "text": "literally all the code it needs to go to a particular collection a particular table find the latest image and send it",
    "start": "936779",
    "end": "943980"
  },
  {
    "text": "back to me as a binary type I've actually improved on this function a little bit in the latest version",
    "start": "943980",
    "end": "949740"
  },
  {
    "text": "because it not only Returns the image but it returns various bits of metadata like what's the id of the previous image",
    "start": "949740",
    "end": "956699"
  },
  {
    "text": "what's the idea of the previous image that had more than two people in it and so on we'll get to that in a moment and",
    "start": "956699",
    "end": "964139"
  },
  {
    "text": "at this point I can start talking about events but this is literally what this app looks like I have this on my phone",
    "start": "964139",
    "end": "969300"
  },
  {
    "text": "just now um yes it's ugly because I am not a graphic designer but fundamentally",
    "start": "969300",
    "end": "976380"
  },
  {
    "text": "um what I did is I changed the CSS on it just to black out those boxes those boxes would normally just be a green",
    "start": "976380",
    "end": "982139"
  },
  {
    "text": "outline um showing inside my my relative's house somebody is actually sitting on the",
    "start": "982139",
    "end": "987360"
  },
  {
    "text": "floor talking to somebody sitting on the chair and I can say you know go back 15 minutes show me the previous photo show",
    "start": "987360",
    "end": "993839"
  },
  {
    "text": "me the last time somebody was seen what you will see in that of course is it's tagged",
    "start": "993839",
    "end": "999540"
  },
  {
    "text": "where the people are this is where the event driven magic comes in",
    "start": "999540",
    "end": "1004759"
  },
  {
    "text": "so here's where we're going to be going with this architecture so the camera",
    "start": "1004759",
    "end": "1009980"
  },
  {
    "text": "throws the image into the database the database is then going to uh",
    "start": "1009980",
    "end": "1015500"
  },
  {
    "text": "trigger a trigger I don't really know what the word is for that but the database has triggers which are I am",
    "start": "1015500",
    "end": "1021139"
  },
  {
    "text": "going to execute this code or I'm going to perform this action when there is a data change inside me of a certain kind",
    "start": "1021139",
    "end": "1029058"
  },
  {
    "text": "um that is going to send it to eventbridge and then eventbridge is going to use a rule to trigger a Lambda",
    "start": "1029059",
    "end": "1035360"
  },
  {
    "text": "function which will send it to recognition along what's doing in cloudwatch recognition if you're not familiar with",
    "start": "1035360",
    "end": "1041720"
  },
  {
    "text": "it is aws's uh give me a picture and I'll tell you stuff about it serverless",
    "start": "1041720",
    "end": "1046880"
  },
  {
    "text": "function so in terms of Atlas triggers uh Atlas has three kinds of triggers",
    "start": "1046880",
    "end": "1053419"
  },
  {
    "text": "Triggers on the data change and that has a huge amount of flexibility it's like oh an update where this field was",
    "start": "1053419",
    "end": "1059539"
  },
  {
    "text": "changed to a value greater than three um it has timed triggers which literally",
    "start": "1059539",
    "end": "1065780"
  },
  {
    "text": "just run on a schedule please please execute the following code on a schedule and it also has uh authentication",
    "start": "1065780",
    "end": "1071720"
  },
  {
    "text": "triggers so when somebody creates a new user in the system for example we can trigger creating data for them",
    "start": "1071720",
    "end": "1078500"
  },
  {
    "text": "um in this case what I've done is I've set up a trigger that says win a new image or a new document that's inserted",
    "start": "1078500",
    "end": "1085220"
  },
  {
    "text": "in the images collection I want you to send that to AWS eventbridge now I can",
    "start": "1085220",
    "end": "1090799"
  },
  {
    "text": "send it just to a JavaScript serverless function on the mongodb side and that can include npm modules so I could do",
    "start": "1090799",
    "end": "1097160"
  },
  {
    "text": "processing in there I could have sent it to that and then sent it to AWS via",
    "start": "1097160",
    "end": "1103580"
  },
  {
    "text": "um the HTTP sdks for AWS but this is an",
    "start": "1103580",
    "end": "1109160"
  },
  {
    "text": "event driven conference and so I thought I'm just going to send it via eventbridge and that is as simple as basically saying this database this",
    "start": "1109160",
    "end": "1115940"
  },
  {
    "text": "collection on insert and you click the box that says eventbridge and it does ask you to put your AWS account ID in",
    "start": "1115940",
    "end": "1122419"
  },
  {
    "text": "which is just cut off the bottom there uh sorry personal wrong direction that",
    "start": "1122419",
    "end": "1129980"
  },
  {
    "text": "then appears in AWS as a partner Event Source so partner event sources",
    "start": "1129980",
    "end": "1135080"
  },
  {
    "text": "basically have their own event bus where events that are coming in from an external thing appear so getting stuff",
    "start": "1135080",
    "end": "1142460"
  },
  {
    "text": "from mongodb to AWS given certain conditions you just set up the",
    "start": "1142460",
    "end": "1147860"
  },
  {
    "text": "conditions and say if this happens send it to the event boss",
    "start": "1147860",
    "end": "1152559"
  },
  {
    "text": "um what I then do is once it arrives on my event bus and I'm not going to tell you lots about how waws works at this",
    "start": "1152960",
    "end": "1159320"
  },
  {
    "text": "point because I'm just kind of assuming that you know some of that stuff um but basically that's going to call a",
    "start": "1159320",
    "end": "1165080"
  },
  {
    "text": "Lambda function I wrote my Lambda function in Python why is it written in Python uh one I like writing python",
    "start": "1165080",
    "end": "1172340"
  },
  {
    "text": "two I also like writing Java but if I write it in Java I have to write it separately and upload it I actually just",
    "start": "1172340",
    "end": "1177740"
  },
  {
    "text": "wanted to write it in the nice little box in the GUI um and three I don't particularly like",
    "start": "1177740",
    "end": "1184100"
  },
  {
    "text": "JavaScript so I thought I'll write it in Python so I have a python function here that receives the incoming data",
    "start": "1184100",
    "end": "1191179"
  },
  {
    "text": "and what it then does is it sends it off to recognition now how does it send it to recognition I use the bottle 2",
    "start": "1191179",
    "end": "1198679"
  },
  {
    "text": "Library so I use the the actual uh SDK for AWS inside that python function and",
    "start": "1198679",
    "end": "1204919"
  },
  {
    "text": "I send it off to recognition and originally I was just asking recognition to just basically tell me what was in",
    "start": "1204919",
    "end": "1211580"
  },
  {
    "text": "the image and where it was so it returns you there's a person here's a bounding box there's a person's bounding box there's a dog",
    "start": "1211580",
    "end": "1218600"
  },
  {
    "text": "um I then had some amazing Insight reading the documentation for recognition it has a moderation API",
    "start": "1218600",
    "end": "1226580"
  },
  {
    "text": "somebody's smiling because they've seen what's coming here okay the moderation API tells you if images are not safe for",
    "start": "1226580",
    "end": "1232760"
  },
  {
    "text": "work do you know what I don't want to do I don't want to look at a camera with a naked old person on it",
    "start": "1232760",
    "end": "1238120"
  },
  {
    "text": "so so it actually Flags these images to let me know the state of dress I've said",
    "start": "1238120",
    "end": "1244100"
  },
  {
    "text": "person and that goes in the database as well so that the viewer will not show me those unless I explicitly click the it's",
    "start": "1244100",
    "end": "1251000"
  },
  {
    "text": "okay to show me not safe for work so I make two API calls to recognition one is what's in the image the two is is it",
    "start": "1251000",
    "end": "1258559"
  },
  {
    "text": "okay to look at this um and then the errors from this for those",
    "start": "1258559",
    "end": "1264799"
  },
  {
    "text": "who don't know get thrown into a cloud watch log so that was kind of Handy while I was debugging it and understanding it now I was new to this",
    "start": "1264799",
    "end": "1271880"
  },
  {
    "text": "the first time I'd kind of played with with Lambda like this and so what I should have done because what I want to",
    "start": "1271880",
    "end": "1277520"
  },
  {
    "text": "do now is I want to put it back on eventbridge what I probably should have done is hooked up the output side of this",
    "start": "1277520",
    "end": "1284240"
  },
  {
    "text": "function to um an event Bridge uh bus and just",
    "start": "1284240",
    "end": "1289580"
  },
  {
    "text": "output and put back on it but I didn't realize that so actually uh incorrectly I make an API call from this function",
    "start": "1289580",
    "end": "1296179"
  },
  {
    "text": "using that same Library the the SDK to write it back to eventbridge but that works for me anyway",
    "start": "1296179",
    "end": "1303220"
  },
  {
    "text": "um and I didn't rewrite it because it worked so the results get sent back to",
    "start": "1303380",
    "end": "1308720"
  },
  {
    "text": "eventbridge so what we're getting here is the output from the uh recognition",
    "start": "1308720",
    "end": "1314000"
  },
  {
    "text": "functions gets sent back to the default event boss and then the default event bus is going",
    "start": "1314000",
    "end": "1320179"
  },
  {
    "text": "to write that back to mongodb using that HTTP based data API again",
    "start": "1320179",
    "end": "1325880"
  },
  {
    "text": "because it's HTTP based we can actually call it directly from the event bus",
    "start": "1325880",
    "end": "1331940"
  },
  {
    "text": "rules so event bus can take things eventbridge can take things and send",
    "start": "1331940",
    "end": "1337700"
  },
  {
    "text": "them to external apis you just have to configure it to do that I don't have to write code could have sent it directly",
    "start": "1337700",
    "end": "1343820"
  },
  {
    "text": "from the Lambda function but again you know why not use the event bus um",
    "start": "1343820",
    "end": "1349039"
  },
  {
    "text": "that ran into an interesting problem as in I set it up I configured it I",
    "start": "1349039",
    "end": "1354320"
  },
  {
    "text": "thought correctly and it didn't work and I could see at the mongodbn that the function had been called to update the",
    "start": "1354320",
    "end": "1360500"
  },
  {
    "text": "database but the update was not happening and mongodbn just said I got a call and",
    "start": "1360500",
    "end": "1366919"
  },
  {
    "text": "I did nothing the logs didn't tell me anything useful in the end I realized what I needed to",
    "start": "1366919",
    "end": "1372140"
  },
  {
    "text": "do to find out what was going on was set up a dead letter box on the event Bridge",
    "start": "1372140",
    "end": "1377840"
  },
  {
    "text": "end of this then set the number of retries to one so that I could see what",
    "start": "1377840",
    "end": "1382880"
  },
  {
    "text": "the output of this was and at that point I discovered that the function was failing and mongodb was returning an",
    "start": "1382880",
    "end": "1388220"
  },
  {
    "text": "error message I just didn't know at first how to get that error message back when it was eventbridge writing directly",
    "start": "1388220",
    "end": "1394220"
  },
  {
    "text": "to an external API now here comes the fun bit uh the reason",
    "start": "1394220",
    "end": "1400760"
  },
  {
    "text": "it complained was because AWS was sending this content type application.json Char set utf-8 which",
    "start": "1400760",
    "end": "1408260"
  },
  {
    "text": "seems an entirely reasonable thing to send to an https API the error message said",
    "start": "1408260",
    "end": "1413960"
  },
  {
    "text": "content type must be application Json or application e Json",
    "start": "1413960",
    "end": "1419659"
  },
  {
    "text": "bit strange this is where I have to explain a little bit so to be clear it's a bug",
    "start": "1419659",
    "end": "1426140"
  },
  {
    "text": "but I'd like to explain why and also how to fix it so one of the problems with Json",
    "start": "1426140",
    "end": "1433640"
  },
  {
    "start": "1429000",
    "end": "1510000"
  },
  {
    "text": "is Jason has some really horrible limitations Jason is just text it's a",
    "start": "1433640",
    "end": "1438919"
  },
  {
    "text": "textual representation of data and it misses some important type",
    "start": "1438919",
    "end": "1444440"
  },
  {
    "text": "information so for example I have an object at the top there and",
    "start": "1444440",
    "end": "1451460"
  },
  {
    "text": "I'm inserting it into mongodb but actually I don't need to insert it into mongodb I literally can just Define that object",
    "start": "1451460",
    "end": "1457520"
  },
  {
    "text": "and you'll see the score at the bottom is a fairly big number the problem is Jason and indeed JavaScript in general",
    "start": "1457520",
    "end": "1465380"
  },
  {
    "text": "cannot represent that number it changes it to the number below and you'll see the last digit has changed you get",
    "start": "1465380",
    "end": "1471380"
  },
  {
    "text": "rounding errors because Jason and JavaScript by implication",
    "start": "1471380",
    "end": "1476659"
  },
  {
    "text": "only has IEEE floating Point numbers unless somebody's explicitly defined 64-bit integers and things like that",
    "start": "1476659",
    "end": "1483400"
  },
  {
    "text": "mongodb on the other hand has proper data types for dealing with big numbers money stuff like that so",
    "start": "1483400",
    "end": "1491900"
  },
  {
    "text": "we don't advise using Json to read and write stuff into mongodb because it's lossy dates are another problem that",
    "start": "1491900",
    "end": "1498140"
  },
  {
    "text": "date is a string mongodb has dates Jace JavaScript has dates but Jason",
    "start": "1498140",
    "end": "1505159"
  },
  {
    "text": "doesn't have dates so we have a thing called ejson an e-jacent or extended Json basically",
    "start": "1505159",
    "end": "1512960"
  },
  {
    "start": "1510000",
    "end": "1567000"
  },
  {
    "text": "allows us to give you the information about the data types it's Json but it's extended to include information about",
    "start": "1512960",
    "end": "1518659"
  },
  {
    "text": "this is a date this is not a string this is a long and here is the value and",
    "start": "1518659",
    "end": "1524720"
  },
  {
    "text": "actually the value has to be a string there because JavaScript cameras that represent that as a number correctly",
    "start": "1524720",
    "end": "1531020"
  },
  {
    "text": "so mongodb has this concept of e Json and when we send data to the API it",
    "start": "1531020",
    "end": "1537500"
  },
  {
    "text": "would like us to tell it if it's Json or ejson so it knows whether to store exactly what you see there or convert",
    "start": "1537500",
    "end": "1543020"
  },
  {
    "text": "those types to the correct data types when this relatively new code was implemented the developer made a mistake",
    "start": "1543020",
    "end": "1550220"
  },
  {
    "text": "where they thought they were just checking for the string prefix and they didn't they accidentally checked the",
    "start": "1550220",
    "end": "1555620"
  },
  {
    "text": "whole string so because uh AWS was correctly sending this and this is utf-8",
    "start": "1555620",
    "end": "1562159"
  },
  {
    "text": "it failed so it's a bug it's now fixed but it didn't slow me up long because",
    "start": "1562159",
    "end": "1569360"
  },
  {
    "start": "1567000",
    "end": "1702000"
  },
  {
    "text": "remember I said we can do these server-side functions these serverless functions I created this serverless function",
    "start": "1569360",
    "end": "1575559"
  },
  {
    "text": "which basically does the exact same thing that the data API would do it takes the incoming record and it uses it",
    "start": "1575559",
    "end": "1581840"
  },
  {
    "text": "to update the database um it is it's almost identical to the code that the actual data API uses the",
    "start": "1581840",
    "end": "1589460"
  },
  {
    "text": "data API actually uses these functions and this mechanism and then we just tie it to an",
    "start": "1589460",
    "end": "1594919"
  },
  {
    "text": "https endpoint so this is in AWS terms what is this this is um",
    "start": "1594919",
    "end": "1601100"
  },
  {
    "text": "um help me out here API Gateway you know here's HTTP please point it at uh this",
    "start": "1601100",
    "end": "1607460"
  },
  {
    "text": "Lambda function so I was able to basically create my own function that did update one and didn't have this bug",
    "start": "1607460",
    "end": "1613039"
  },
  {
    "text": "so that it took me no time at all to get around that that then means the event Bridge can now",
    "start": "1613039",
    "end": "1620840"
  },
  {
    "text": "write directly to mongodb it just wasn't calling the actual API it was calling my",
    "start": "1620840",
    "end": "1625940"
  },
  {
    "text": "function in my own API so now I've I've closed that loop we're getting the data out via event Bridge from a trigger",
    "start": "1625940",
    "end": "1633380"
  },
  {
    "text": "we're enhancing it and we're writing it back again",
    "start": "1633380",
    "end": "1637900"
  },
  {
    "text": "so yeah not everything goes perfectly in software there are bugs we as a company are pretty good at fixing them that bug",
    "start": "1640340",
    "end": "1646340"
  },
  {
    "text": "you know took less than a month to fix but they're always workarounds as well",
    "start": "1646340",
    "end": "1651799"
  },
  {
    "text": "no as I said up front though I really don't want to keep an eye on this old person I",
    "start": "1651799",
    "end": "1659360"
  },
  {
    "text": "don't want to be you know watching this I don't want a video monitor at the corner of my living room just no nobody",
    "start": "1659360",
    "end": "1664700"
  },
  {
    "text": "would um it also you know this concept doesn't scale either because with the best will",
    "start": "1664700",
    "end": "1670460"
  },
  {
    "text": "in the world we're not going to be sitting in shifts seeing if somebody's lying on the floor um",
    "start": "1670460",
    "end": "1675740"
  },
  {
    "text": "so what I needed was an overview of the information and the behavior I want to be able to look once a day and see how",
    "start": "1675740",
    "end": "1683360"
  },
  {
    "text": "has this day been you know did they get out of bed this day um equally I want some immediate",
    "start": "1683360",
    "end": "1688580"
  },
  {
    "text": "notification for exception conditions specifically hey there's somebody lying on the floor because this old person",
    "start": "1688580",
    "end": "1695120"
  },
  {
    "text": "should not be lying on the floor of their living room and just to be clear we only have a camera in the living room",
    "start": "1695120",
    "end": "1701980"
  },
  {
    "start": "1702000",
    "end": "1848000"
  },
  {
    "text": "um so if you forgive the pun I have to be event driven too uh an old person in",
    "start": "1703460",
    "end": "1709400"
  },
  {
    "text": "the bottom of the frame like this bad Photoshop uh not not actual old person",
    "start": "1709400",
    "end": "1716000"
  },
  {
    "text": "um needs an immediate response so I need each New Image to be checked to see",
    "start": "1716000",
    "end": "1721340"
  },
  {
    "text": "whether or not it looks like this now actually this is fairly simple because this is there is a person",
    "start": "1721340",
    "end": "1728120"
  },
  {
    "text": "with a certain confidence that it is actually a person and they're bounding rectangle top is in the bottom",
    "start": "1728120",
    "end": "1736340"
  },
  {
    "text": "um 40 of the frame so basically if their head is in the bottom 40 frame",
    "start": "1736340",
    "end": "1742460"
  },
  {
    "text": "then we need to do something about it remember I said we have triggers so",
    "start": "1742460",
    "end": "1747679"
  },
  {
    "text": "triggers can happen on any update of the data so then Bridge calls my pseudo data",
    "start": "1747679",
    "end": "1753620"
  },
  {
    "text": "API that updates the data I can then have a trigger that says if",
    "start": "1753620",
    "end": "1758720"
  },
  {
    "text": "there is an edit to this data and I can add a query that says and for example uh",
    "start": "1758720",
    "end": "1766279"
  },
  {
    "text": "in the updated Fields the field called labels which is an array has an element where the name field is person and the",
    "start": "1766279",
    "end": "1776679"
  },
  {
    "text": "instances.boningbox.top is greater than 0.6 then and only then will this trigger fire",
    "start": "1776679",
    "end": "1782419"
  },
  {
    "text": "now at that point it's like well what do I do and I have a couple of choices with what I can do with this trigger I can",
    "start": "1782419",
    "end": "1787880"
  },
  {
    "text": "having another event Bridge trigger so old person falls down this goes to event Bridge uh I then use SES or SNS to send",
    "start": "1787880",
    "end": "1797240"
  },
  {
    "text": "it to myself actually I decided when this trigger fired it would run a",
    "start": "1797240",
    "end": "1802580"
  },
  {
    "text": "mongodb serverless function which would then be able to fire it via twilio and if there was any problem with twilio",
    "start": "1802580",
    "end": "1808460"
  },
  {
    "text": "then send it over to AWS and send it via SMS so it gives me that extra",
    "start": "1808460",
    "end": "1815059"
  },
  {
    "text": "flexibility but that was just a kind of personal choice on how I did it plus I like working with twilio",
    "start": "1815059",
    "end": "1821659"
  },
  {
    "text": "um I really do want that message to be delivered now not queued cues are great okay the idea of of you",
    "start": "1821659",
    "end": "1829760"
  },
  {
    "text": "know this message will get there eventually is great but if that message is there is an old person lying on the",
    "start": "1829760",
    "end": "1835039"
  },
  {
    "text": "floor right I want many mechanisms that deliver now and ideally tell me they've had a delivery so maybe that's a that's",
    "start": "1835039",
    "end": "1841640"
  },
  {
    "text": "a non-event bridge event sorry I'm still pressing the wrong",
    "start": "1841640",
    "end": "1847039"
  },
  {
    "text": "buttons I also wanted a daily Roundup I want to be able to see on my phone what's",
    "start": "1847039",
    "end": "1853039"
  },
  {
    "start": "1848000",
    "end": "2141000"
  },
  {
    "text": "happened that day so this is one of the dullest graphs in the world in terms of layout and I feel sad because this is",
    "start": "1853039",
    "end": "1859880"
  },
  {
    "text": "built with mongodb charts and charts is a graphical business",
    "start": "1859880",
    "end": "1865460"
  },
  {
    "text": "intelligence tool so you can get your data and you can drag and drop and build all kinds of pretty charts whereas I",
    "start": "1865460",
    "end": "1870679"
  },
  {
    "text": "just wanted one that had the table on the bottom for the last three days and then the top picture it tells me how",
    "start": "1870679",
    "end": "1876380"
  },
  {
    "text": "many people are in the room and in the bottom picture I'm actually filtering that down to there is a person",
    "start": "1876380",
    "end": "1882799"
  },
  {
    "text": "in this particular area of the image which is the kitchen so how many times did our old person go",
    "start": "1882799",
    "end": "1888679"
  },
  {
    "text": "in the kitchen which I'm going to equate to is eating or drinking or getting something so this is basically telling me I can",
    "start": "1888679",
    "end": "1894980"
  },
  {
    "text": "see that over the course of three days um they uh had one visitor on a couple",
    "start": "1894980",
    "end": "1902299"
  },
  {
    "text": "of the days they had two visitors on on the last day um and also at the bottom I can see that",
    "start": "1902299",
    "end": "1908240"
  },
  {
    "text": "they've been getting up and they've been going into the kitchen and interestingly I can see that every day at roughly 5 30",
    "start": "1908240",
    "end": "1914539"
  },
  {
    "text": "a.m they go and get a glass of water and I can I can see the image for this so I can go why were they in the kitchen",
    "start": "1914539",
    "end": "1920419"
  },
  {
    "text": "at 5 30 a.m oh getting a glass of water you know I can literally jump to that image so that's nice so you create these",
    "start": "1920419",
    "end": "1927440"
  },
  {
    "text": "charts with a GUI you drag you drop they generally look much prettier than this",
    "start": "1927440",
    "end": "1933440"
  },
  {
    "text": "um gooey looks like this you know I've got my data on the side and I have lots",
    "start": "1933440",
    "end": "1938480"
  },
  {
    "text": "of different kinds of charts I can do and I can I can build them and then when I want to take this and put it into my",
    "start": "1938480",
    "end": "1944899"
  },
  {
    "text": "application there's a nice embedding SDK so um adding that chart to my mobile app",
    "start": "1944899",
    "end": "1951740"
  },
  {
    "text": "was actually a trivial amount of code and it uses the same authorization the same authentication that I did to be",
    "start": "1951740",
    "end": "1958039"
  },
  {
    "text": "able to call that function so it knows who I am it only shows me data I'm allowed to see I can publish these",
    "start": "1958039",
    "end": "1964100"
  },
  {
    "text": "charts to world I can publish individual charts or a whole dashboard of charts to World public and anyone can see them but",
    "start": "1964100",
    "end": "1971240"
  },
  {
    "text": "I can also apply all the security rules on top of it and then just with a few lines of JavaScript embed it in my own",
    "start": "1971240",
    "end": "1977299"
  },
  {
    "text": "web page still with that same Authentication",
    "start": "1977299",
    "end": "1981520"
  },
  {
    "text": "um I didn't originally I was just using the charts to do this and so I dragged",
    "start": "1983299",
    "end": "1989779"
  },
  {
    "text": "the stuff over and I created the chart but the thing about the charts is the AI that identifies things is a",
    "start": "1989779",
    "end": "1997880"
  },
  {
    "text": "little bit imperfect as you'd expect from something that has to look at an image and identify where things are so I",
    "start": "1997880",
    "end": "2004419"
  },
  {
    "text": "wanted to summarize it somewhat now the charts have what's called binning where you can say roll up the data for every",
    "start": "2004419",
    "end": "2011620"
  },
  {
    "text": "minute or every hour or every day and so I could say what was the maximum number",
    "start": "2011620",
    "end": "2018100"
  },
  {
    "text": "of people that were present in a day or a minute or an hour but I didn't want to do a minute because I have an image once",
    "start": "2018100",
    "end": "2024820"
  },
  {
    "text": "a minute and I didn't want to do an error because I want to know finer granularity than what was happening you",
    "start": "2024820",
    "end": "2031720"
  },
  {
    "text": "know what were the maximum number of people present in an hour I wanted like five or ten minutes so I ended up",
    "start": "2031720",
    "end": "2037659"
  },
  {
    "text": "digging into the time series analytics in mongodb so mongodb has window functions so that you can run time",
    "start": "2037659",
    "end": "2044200"
  },
  {
    "text": "series analysis over your data and I used it in a fairly simple way here to say analyze this data and basically tell",
    "start": "2044200",
    "end": "2051040"
  },
  {
    "text": "me the maximum number of people present over a 15 minute period good and the maximum number of people present in the",
    "start": "2051040",
    "end": "2056919"
  },
  {
    "text": "kitchen over a 15 minute period I'm also working on another one which will use the same time series analytics to alert",
    "start": "2056919",
    "end": "2064060"
  },
  {
    "text": "me if my person doesn't move for a certain amount of time so basically time",
    "start": "2064060",
    "end": "2070599"
  },
  {
    "text": "series analytics and window functions is often the case of given a piece of data X look at the data around it look at the",
    "start": "2070599",
    "end": "2076060"
  },
  {
    "text": "preceding five minutes so what I'm doing is I'm using that to basically look at the amount of movement",
    "start": "2076060",
    "end": "2081940"
  },
  {
    "text": "that happens over a given time span to see if you know there's a problem and they've just not moved they've sat down",
    "start": "2081940",
    "end": "2088179"
  },
  {
    "text": "and they've not moved for two hours I want to know about it it's although sleeping in a chair is a thing you still",
    "start": "2088179",
    "end": "2095080"
  },
  {
    "text": "generally remove so I built this using mongodb compass",
    "start": "2095080",
    "end": "2100599"
  },
  {
    "text": "compass is a graphical development tool that lets you build these aggregation pipelines these data transformations to",
    "start": "2100599",
    "end": "2107320"
  },
  {
    "text": "to look at your data step by step so we have a pipeline based approach to analysis and then what's kind of nice is",
    "start": "2107320",
    "end": "2113560"
  },
  {
    "text": "you can go in this once you've got it you've got the right output and go save as View and what that will do is it will",
    "start": "2113560",
    "end": "2118960"
  },
  {
    "text": "create a new view in your underlying database like an rdbms view it will encapsulate that pipeline as like a",
    "start": "2118960",
    "end": "2124240"
  },
  {
    "text": "virtual table a virtual collection which meant from the charts I can just drag that data in and graph it so it's a",
    "start": "2124240",
    "end": "2131260"
  },
  {
    "text": "pre-processing stage I could have copied the pipeline and the stuff into charts but actually save as view just seems",
    "start": "2131260",
    "end": "2138040"
  },
  {
    "text": "like a much nicer way of doing it and then last thing I have is tidying up",
    "start": "2138040",
    "end": "2144940"
  },
  {
    "start": "2141000",
    "end": "2278000"
  },
  {
    "text": "so I am taking one photograph at no reasonable resolution once a minute",
    "start": "2144940",
    "end": "2151300"
  },
  {
    "text": "you can imagine that becomes a respectable amount of data um I have chosen a mongodb cluster this",
    "start": "2151300",
    "end": "2157540"
  },
  {
    "text": "is running on a on a free tier mongodb clusters free for life this whole thing the only costs associated with it are",
    "start": "2157540",
    "end": "2166359"
  },
  {
    "text": "the AWS cost but I'd get that free for a year if I had their their service as well",
    "start": "2166359",
    "end": "2172420"
  },
  {
    "text": "um but that only gives me 512 megabytes of data storage I don't want to keep",
    "start": "2172420",
    "end": "2178660"
  },
  {
    "text": "images longer than I need to I want to be able to go back if there was an incident and have a look back 24 or 48",
    "start": "2178660",
    "end": "2185260"
  },
  {
    "text": "errors I don't want to keep the images longer than I need to and they're taking up space",
    "start": "2185260",
    "end": "2190359"
  },
  {
    "text": "so movie gives me a few options the simplest one is what's called time to live mongodb will automatically delete",
    "start": "2190359",
    "end": "2195820"
  },
  {
    "text": "records for you at a certain age you can set that up a bigger simple it also has",
    "start": "2195820",
    "end": "2201520"
  },
  {
    "text": "a thing called online archive that's much more fun what that will do is it will automatically take them and move",
    "start": "2201520",
    "end": "2207220"
  },
  {
    "text": "them to files in S3 for you on a schedule anything that's more than 48 hours old please automatically put this",
    "start": "2207220",
    "end": "2212440"
  },
  {
    "text": "record as a file in S3 and Jason or Beason or whatever you want to store it as and even allow you to still query",
    "start": "2212440",
    "end": "2219640"
  },
  {
    "text": "against it so you can have it as if it hadn't moved from the database but it's moved to rest to S3 in the background",
    "start": "2219640",
    "end": "2225300"
  },
  {
    "text": "saving and storage costs but I genuinely don't need this data",
    "start": "2225300",
    "end": "2230440"
  },
  {
    "text": "Beyond about 48 errors so what I have instead is a schedule trigger that looks for any record more than 48 hours old",
    "start": "2230440",
    "end": "2237820"
  },
  {
    "text": "and it goes in and it just nulls out the image field so I keep all of the metadata so I can",
    "start": "2237820",
    "end": "2243040"
  },
  {
    "text": "do long-term analysis we can look at is our old person getting up later getting",
    "start": "2243040",
    "end": "2248619"
  },
  {
    "text": "up moving around less you know we can actually start and this is it seems creepy but this is definitely very",
    "start": "2248619",
    "end": "2255099"
  },
  {
    "text": "helpful for their welfare um so in the end I have a schedule trigger",
    "start": "2255099",
    "end": "2260619"
  },
  {
    "text": "that basically just removes the image field from things that more than 48 hours old but keeps all the metadata for",
    "start": "2260619",
    "end": "2266079"
  },
  {
    "text": "me and that's it that's a kind of end to end of my process I should probably have another architecture slide in here but",
    "start": "2266079",
    "end": "2272560"
  },
  {
    "text": "I'm sure if any of you are actually interested you're going to go and download these slides and read that code and look more interested I'd like to say",
    "start": "2272560",
    "end": "2279160"
  },
  {
    "start": "2278000",
    "end": "2299000"
  },
  {
    "text": "thank you very much for your time I hope this was interesting uh",
    "start": "2279160",
    "end": "2285280"
  }
]