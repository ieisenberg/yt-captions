[
  {
    "text": "[Music]",
    "start": "6990",
    "end": "9320"
  },
  {
    "text": "hi I'm Sven and we're here at goto with",
    "start": "9320",
    "end": "13360"
  },
  {
    "text": "Adrian M and Adrian who are you and what",
    "start": "13360",
    "end": "17400"
  },
  {
    "text": "are you doing for living so as you said",
    "start": "17400",
    "end": "20240"
  },
  {
    "text": "my name is Adrian Mo um my official",
    "start": "20240",
    "end": "23080"
  },
  {
    "text": "title is um Chief scientist at container",
    "start": "23080",
    "end": "25199"
  },
  {
    "text": "Solutions which is a consultancy",
    "start": "25199",
    "end": "28119"
  },
  {
    "text": "specializing in an everything sort of",
    "start": "28119",
    "end": "29480"
  },
  {
    "text": "microser is in Cloud native um yeah I'm",
    "start": "29480",
    "end": "33120"
  },
  {
    "text": "currently working on sort of stuff",
    "start": "33120",
    "end": "34719"
  },
  {
    "text": "around image tooling with Docker",
    "start": "34719",
    "end": "36399"
  },
  {
    "text": "Registries and so on and you also wrote",
    "start": "36399",
    "end": "39120"
  },
  {
    "text": "a book on on Docker right so I I wrote a",
    "start": "39120",
    "end": "41760"
  },
  {
    "text": "book for Riley called um using Docker",
    "start": "41760",
    "end": "44160"
  },
  {
    "text": "what are the main concerns around",
    "start": "44160",
    "end": "46320"
  },
  {
    "text": "container security yeah so there A lot",
    "start": "46320",
    "end": "48879"
  },
  {
    "text": "has been made about container security",
    "start": "48879",
    "end": "50480"
  },
  {
    "text": "and I guess it comes from this idea of",
    "start": "50480",
    "end": "52120"
  },
  {
    "text": "comparing it to um virtual machines and",
    "start": "52120",
    "end": "54199"
  },
  {
    "text": "Security in Virtual machines so there's",
    "start": "54199",
    "end": "56399"
  },
  {
    "text": "the argument that virtual machines are",
    "start": "56399",
    "end": "58640"
  },
  {
    "text": "naturally more secure because because",
    "start": "58640",
    "end": "60039"
  },
  {
    "text": "they have a hypervisor there um and",
    "start": "60039",
    "end": "62719"
  },
  {
    "text": "there's a certain amount of Truth to",
    "start": "62719",
    "end": "63960"
  },
  {
    "text": "that but what I would say in most cases",
    "start": "63960",
    "end": "66720"
  },
  {
    "text": "is you're you're going to be using",
    "start": "66720",
    "end": "67920"
  },
  {
    "text": "containers with virtual machines so if",
    "start": "67920",
    "end": "70479"
  },
  {
    "text": "you're using containers inside virtual",
    "start": "70479",
    "end": "72119"
  },
  {
    "text": "machines you're only adding another",
    "start": "72119",
    "end": "73880"
  },
  {
    "text": "layer of security you're not removing",
    "start": "73880",
    "end": "76159"
  },
  {
    "text": "Anything Could you give us some guidance",
    "start": "76159",
    "end": "78840"
  },
  {
    "text": "or best practices for",
    "start": "78840",
    "end": "80880"
  },
  {
    "text": "addressing a typical typical security",
    "start": "80880",
    "end": "83920"
  },
  {
    "text": "issues in containers sure um probably",
    "start": "83920",
    "end": "86920"
  },
  {
    "text": "the biggest one I see is people um the",
    "start": "86920",
    "end": "90280"
  },
  {
    "text": "application do route in a container so",
    "start": "90280",
    "end": "92600"
  },
  {
    "text": "if you use one of the base images like",
    "start": "92600",
    "end": "94159"
  },
  {
    "text": "Debian or sentos it'll be set up um so",
    "start": "94159",
    "end": "97000"
  },
  {
    "text": "that when you enter it you're the root",
    "start": "97000",
    "end": "98240"
  },
  {
    "text": "user and but if you want an application",
    "start": "98240",
    "end": "100399"
  },
  {
    "text": "inside there what you need to do is",
    "start": "100399",
    "end": "101799"
  },
  {
    "text": "change to a different user so that's",
    "start": "101799",
    "end": "103799"
  },
  {
    "text": "either setting a user in the docker file",
    "start": "103799",
    "end": "105920"
  },
  {
    "text": "or when your container starts up using",
    "start": "105920",
    "end": "107479"
  },
  {
    "text": "something like sudu or there's a tool",
    "start": "107479",
    "end": "109280"
  },
  {
    "text": "called goou that's a little bit nicer",
    "start": "109280",
    "end": "111119"
  },
  {
    "text": "that will change to a different user and",
    "start": "111119",
    "end": "113360"
  },
  {
    "text": "the reason to do that is um if for",
    "start": "113360",
    "end": "116920"
  },
  {
    "text": "example a container breakup was to occur",
    "start": "116920",
    "end": "118920"
  },
  {
    "text": "and somebody got out of container uh and",
    "start": "118920",
    "end": "121240"
  },
  {
    "text": "onto the host because users aren't",
    "start": "121240",
    "end": "123600"
  },
  {
    "text": "namespaced by default they would be root",
    "start": "123600",
    "end": "126039"
  },
  {
    "text": "on the host if they were also root in",
    "start": "126039",
    "end": "127479"
  },
  {
    "text": "the container uh and also simply if if a",
    "start": "127479",
    "end": "131760"
  },
  {
    "text": "an attacker is rooted inside a container",
    "start": "131760",
    "end": "133640"
  },
  {
    "text": "then they're going to have more",
    "start": "133640",
    "end": "134720"
  },
  {
    "text": "privileges than they should have it's",
    "start": "134720",
    "end": "136000"
  },
  {
    "text": "just inside that container so it's all",
    "start": "136000",
    "end": "138480"
  },
  {
    "text": "about this idea of um lease privilege if",
    "start": "138480",
    "end": "141080"
  },
  {
    "text": "I download an official Docker image from",
    "start": "141080",
    "end": "142800"
  },
  {
    "text": "Docker Hub isn't that automatically",
    "start": "142800",
    "end": "147160"
  },
  {
    "text": "secure",
    "start": "147160",
    "end": "148760"
  },
  {
    "text": "well it should be reasonably high level",
    "start": "148760",
    "end": "151680"
  },
  {
    "text": "security if it's an official image so",
    "start": "151680",
    "end": "153040"
  },
  {
    "text": "the official image is the ones that been",
    "start": "153040",
    "end": "154480"
  },
  {
    "text": "Ved by Docker but they won't have a the",
    "start": "154480",
    "end": "157280"
  },
  {
    "text": "user will be normally um root by default",
    "start": "157280",
    "end": "160560"
  },
  {
    "text": "so if it's a base image like red like",
    "start": "160560",
    "end": "162840"
  },
  {
    "text": "sentos or Debian the default user will",
    "start": "162840",
    "end": "166080"
  },
  {
    "text": "be root and you need to change that in",
    "start": "166080",
    "end": "167400"
  },
  {
    "text": "your application the reason it's root is",
    "start": "167400",
    "end": "169280"
  },
  {
    "text": "so that you can install software and so",
    "start": "169280",
    "end": "170760"
  },
  {
    "text": "on so in your own image you'll need to",
    "start": "170760",
    "end": "172400"
  },
  {
    "text": "do things that need root privileges like",
    "start": "172400",
    "end": "174519"
  },
  {
    "text": "install software but once you've done",
    "start": "174519",
    "end": "176360"
  },
  {
    "text": "that you change your user um",
    "start": "176360",
    "end": "180519"
  },
  {
    "text": "there's also application images like",
    "start": "180519",
    "end": "182480"
  },
  {
    "text": "redis and so on and if you look at those",
    "start": "182480",
    "end": "184760"
  },
  {
    "text": "images they will change to an",
    "start": "184760",
    "end": "186080"
  },
  {
    "text": "unprivileged user so the reddest image",
    "start": "186080",
    "end": "188480"
  },
  {
    "text": "runs as the reddest user for example and",
    "start": "188480",
    "end": "191159"
  },
  {
    "text": "that's actually quite a good tip for",
    "start": "191159",
    "end": "192799"
  },
  {
    "text": "picking up security tips if you look at",
    "start": "192799",
    "end": "194799"
  },
  {
    "text": "the docker files for the way the",
    "start": "194799",
    "end": "196000"
  },
  {
    "text": "official images have been put together",
    "start": "196000",
    "end": "198319"
  },
  {
    "text": "and if I don't have an official uh",
    "start": "198319",
    "end": "200879"
  },
  {
    "text": "Docker image um can I still use it and",
    "start": "200879",
    "end": "204720"
  },
  {
    "text": "if yes how do I verify that you know I",
    "start": "204720",
    "end": "207720"
  },
  {
    "text": "don't use some shady",
    "start": "207720",
    "end": "210680"
  },
  {
    "text": "software right so if",
    "start": "210680",
    "end": "213200"
  },
  {
    "text": "you've so I guess what you're saying is",
    "start": "213200",
    "end": "215200"
  },
  {
    "text": "you found an image in a Ducker Hub it's",
    "start": "215200",
    "end": "216680"
  },
  {
    "text": "not an official image but you'd like to",
    "start": "216680",
    "end": "218120"
  },
  {
    "text": "use it exactly the first thing I would",
    "start": "218120",
    "end": "219799"
  },
  {
    "text": "look at is is it an automated build and",
    "start": "219799",
    "end": "221879"
  },
  {
    "text": "if it's an automated build you'll be",
    "start": "221879",
    "end": "223480"
  },
  {
    "text": "able to go and find the docker file and",
    "start": "223480",
    "end": "225000"
  },
  {
    "text": "the source that it was built from and",
    "start": "225000",
    "end": "226920"
  },
  {
    "text": "you can verify it via that so you know",
    "start": "226920",
    "end": "229840"
  },
  {
    "text": "you can look at what's actually in it um",
    "start": "229840",
    "end": "232280"
  },
  {
    "text": "you can also go a step further you could",
    "start": "232280",
    "end": "233720"
  },
  {
    "text": "download that Docker file and source and",
    "start": "233720",
    "end": "235200"
  },
  {
    "text": "build it yourself and then you're",
    "start": "235200",
    "end": "236799"
  },
  {
    "text": "absolutely sure what's in it um as well",
    "start": "236799",
    "end": "240200"
  },
  {
    "text": "as automated builds people can't just",
    "start": "240200",
    "end": "241840"
  },
  {
    "text": "push any images they like up um so I",
    "start": "241840",
    "end": "245360"
  },
  {
    "text": "would probably stay away from those",
    "start": "245360",
    "end": "247360"
  },
  {
    "text": "because there could be anything at all",
    "start": "247360",
    "end": "248760"
  },
  {
    "text": "not how am I going to deal with",
    "start": "248760",
    "end": "250920"
  },
  {
    "text": "passwords or secrets in general if I",
    "start": "250920",
    "end": "253040"
  },
  {
    "text": "deploy let's say microservices uh",
    "start": "253040",
    "end": "255479"
  },
  {
    "text": "architecture with containers right so as",
    "start": "255479",
    "end": "258440"
  },
  {
    "text": "you said you don't put it in your image",
    "start": "258440",
    "end": "259680"
  },
  {
    "text": "you got to add your secrets at runtime",
    "start": "259680",
    "end": "262720"
  },
  {
    "text": "um there's a few different ways that",
    "start": "262720",
    "end": "264600"
  },
  {
    "text": "people do it um you can use environment",
    "start": "264600",
    "end": "267440"
  },
  {
    "text": "variables I mean there are some issues",
    "start": "267440",
    "end": "268919"
  },
  {
    "text": "with that because the quite visible um",
    "start": "268919",
    "end": "271199"
  },
  {
    "text": "you can put them in files and mount the",
    "start": "271199",
    "end": "272880"
  },
  {
    "text": "file but what's what's that we're moving",
    "start": "272880",
    "end": "275639"
  },
  {
    "text": "to and it's perhaps not quite here yet",
    "start": "275639",
    "end": "277759"
  },
  {
    "text": "but we're moving to um sort of secret",
    "start": "277759",
    "end": "279680"
  },
  {
    "text": "management with um key value stores so",
    "start": "279680",
    "end": "282720"
  },
  {
    "text": "in Docker 113 that's coming out in swore",
    "start": "282720",
    "end": "285680"
  },
  {
    "text": "mode there'll be a Secrets API and you",
    "start": "285680",
    "end": "288360"
  },
  {
    "text": "can create Secrets using that and map",
    "start": "288360",
    "end": "290479"
  },
  {
    "text": "them into containers at runtime uh and",
    "start": "290479",
    "end": "293600"
  },
  {
    "text": "there's also tools like Vault from hash",
    "start": "293600",
    "end": "295400"
  },
  {
    "text": "Corp that do something very similar",
    "start": "295400",
    "end": "297440"
  },
  {
    "text": "although you'll have to set up the apis",
    "start": "297440",
    "end": "298800"
  },
  {
    "text": "yourself how does passing in a secret",
    "start": "298800",
    "end": "301039"
  },
  {
    "text": "and accessing the um the the Secret",
    "start": "301039",
    "end": "305320"
  },
  {
    "text": "store works and what about the the",
    "start": "305320",
    "end": "308039"
  },
  {
    "text": "lifetime of these secrets right so if",
    "start": "308039",
    "end": "310680"
  },
  {
    "text": "you're using an external key valy store",
    "start": "310680",
    "end": "312560"
  },
  {
    "text": "like Vault there's obviously an issue",
    "start": "312560",
    "end": "314280"
  },
  {
    "text": "whereby how does your container",
    "start": "314280",
    "end": "315440"
  },
  {
    "text": "authenticate to the Vault so one way you",
    "start": "315440",
    "end": "318800"
  },
  {
    "text": "could do this is with having like a",
    "start": "318800",
    "end": "320400"
  },
  {
    "text": "onetime password or a shortlived um",
    "start": "320400",
    "end": "323880"
  },
  {
    "text": "password that you pass into the",
    "start": "323880",
    "end": "325680"
  },
  {
    "text": "Container perhaps as an environment",
    "start": "325680",
    "end": "328039"
  },
  {
    "text": "variable um",
    "start": "328039",
    "end": "330000"
  },
  {
    "text": "and once it's used that token it gets",
    "start": "330000",
    "end": "332199"
  },
  {
    "text": "access to the secrets that it wants for",
    "start": "332199",
    "end": "334720"
  },
  {
    "text": "the rest of its lifetime like the",
    "start": "334720",
    "end": "335919"
  },
  {
    "text": "database token or the API token um and",
    "start": "335919",
    "end": "339840"
  },
  {
    "text": "if needs to um access the Vault again so",
    "start": "339840",
    "end": "342240"
  },
  {
    "text": "it just uses that um secret once and",
    "start": "342240",
    "end": "344280"
  },
  {
    "text": "then it's no longer good e because it's",
    "start": "344280",
    "end": "346199"
  },
  {
    "text": "expired or because it's only good for",
    "start": "346199",
    "end": "347680"
  },
  {
    "text": "one",
    "start": "347680",
    "end": "348600"
  },
  {
    "text": "access um alternatively you can also use",
    "start": "348600",
    "end": "352080"
  },
  {
    "text": "um a file system plugin so the way for",
    "start": "352080",
    "end": "355919"
  },
  {
    "text": "example the secrets API and Docker swarm",
    "start": "355919",
    "end": "357880"
  },
  {
    "text": "mode that's coite works is um it will",
    "start": "357880",
    "end": "361000"
  },
  {
    "text": "actually place a file with the secrets",
    "start": "361000",
    "end": "362840"
  },
  {
    "text": "you have access to in the root of the",
    "start": "362840",
    "end": "364199"
  },
  {
    "text": "container so it never needs to access",
    "start": "364199",
    "end": "365840"
  },
  {
    "text": "the key value store at all it's actually",
    "start": "365840",
    "end": "367160"
  },
  {
    "text": "done outside before the container starts",
    "start": "367160",
    "end": "370120"
  },
  {
    "text": "and hopefully there will be I believe",
    "start": "370120",
    "end": "371720"
  },
  {
    "text": "there already is some attempts at volume",
    "start": "371720",
    "end": "373840"
  },
  {
    "text": "plugins for stuff like cop's Vault that",
    "start": "373840",
    "end": "376720"
  },
  {
    "text": "does roughly the same",
    "start": "376720",
    "end": "378400"
  },
  {
    "text": "thing okay thanks Adrian for the",
    "start": "378400",
    "end": "382319"
  },
  {
    "text": "interview thank",
    "start": "382319",
    "end": "385479"
  },
  {
    "text": "you",
    "start": "385880",
    "end": "388880"
  }
]