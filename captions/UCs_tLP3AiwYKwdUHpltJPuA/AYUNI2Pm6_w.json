[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "Hello, everybody. Welcome to another \nepisode of GOTO Unscripted. This time,  ",
    "start": "13120",
    "end": "20360"
  },
  {
    "text": "I am Adrienne Braganza, author of \"Looks Good \nto Me\" and a senior developer advocate at  ",
    "start": "20360",
    "end": "27600"
  },
  {
    "text": "Viam Robotics. And I'm here today with Saša \nJurić. Saša, would you introduce yourself? ",
    "start": "27600",
    "end": "35480"
  },
  {
    "text": "Yes, thank you. My name is Saša Jurić, \nand I am an independent Elixir mentor,  ",
    "start": "35480",
    "end": "42880"
  },
  {
    "text": "freelancer, helping people work with Elixir in \nproduction., I guess the topic that we settled on  ",
    "start": "42880",
    "end": "52320"
  },
  {
    "start": "50000",
    "end": "887000"
  },
  {
    "text": "for today is going to be about pull requests, \nright? And Adrienne humbly omitted that you  ",
    "start": "52320",
    "end": "61120"
  },
  {
    "text": "wrote a book about pull requests, right?\nI did. I'm very excited about it. It is  ",
    "start": "61120",
    "end": "67400"
  },
  {
    "text": "finally in print. It's called \"Looks Good to \nMe: Constructive Code Reviews.\" And it's two  ",
    "start": "67400",
    "end": "74280"
  },
  {
    "text": "years of my life that I put into this book, \nbasically, trying to show developers that  ",
    "start": "74280",
    "end": "81200"
  },
  {
    "text": "pull requests or code reviews in general can be so \nmuch better than what we may have experienced, so. ",
    "start": "81200",
    "end": "89039"
  },
  {
    "text": "I had the pleasure of reading the book recently, \nand I have to say, it's a wonderful book. ",
    "start": "89600",
    "end": "95590"
  },
  {
    "text": "Thank you.\nIt's something that, as far as   I know, does not exist in the space of technical \nliterature. So it's pretty much unique and a very  ",
    "start": "95590",
    "end": "106200"
  },
  {
    "text": "much-needed book, right? So the reason I wanted \nto be a part of this conversation is because,  ",
    "start": "106200",
    "end": "111600"
  },
  {
    "text": "as a part of my job, I use a lot of code reviews \nand pull requests because I'm not doing, like,  ",
    "start": "111600",
    "end": "118360"
  },
  {
    "text": "regular development of features. I'm working with \nteams a lot, you know, trying to see what kind of  ",
    "start": "118360",
    "end": "124400"
  },
  {
    "text": "code they write and how they can improve. I find \nthat pull requests are a natural driver of such  ",
    "start": "124400",
    "end": "131800"
  },
  {
    "text": "flow of my job. I've been, actually, I think, \nin the past five years, doing more code reviews  ",
    "start": "131800",
    "end": "137760"
  },
  {
    "text": "than actually writing code. So I feel like it's \na subject that is very close to the heart. Even,  ",
    "start": "137760",
    "end": "145439"
  },
  {
    "text": "you know, doing a lot of that stuff, a lot of \ncode reviews, and even before that as well, I feel  ",
    "start": "145440",
    "end": "151280"
  },
  {
    "text": "that I have learned a bunch of tricks from your \nbook. So, congratulations. One author to another.  ",
    "start": "151280",
    "end": "157520"
  },
  {
    "text": "Excellent job. And I'm very happy for you.\nThank you so much.  So, why don't you tell us? Let's start very \nlightly. I know that people probably watching  ",
    "start": "157520",
    "end": "167480"
  },
  {
    "text": "this, like, understand, but we need to ease into \nthis. This is an unscripted episode, so we're  ",
    "start": "167480",
    "end": "172720"
  },
  {
    "text": "kind of trying to ease into the topic. So, what is \ncode review anyway? And why should we care, right? ",
    "start": "172720",
    "end": "180000"
  },
  {
    "text": "Yes. So code review, most people are familiar with \nit via pull requests. But at the lowest common  ",
    "start": "180000",
    "end": "186040"
  },
  {
    "text": "denominator, because it's not always done through \npull requests, at the lowest common denominator, a  ",
    "start": "186040",
    "end": "191719"
  },
  {
    "text": "code review is a process that software developers \nuse to inspect each other's code and to make sure  ",
    "start": "191720",
    "end": "199320"
  },
  {
    "text": "it passes a set of agreed-upon standards. So \neverything there was very ambiguous but on  ",
    "start": "199320",
    "end": "205720"
  },
  {
    "text": "purpose because it's different for every team. And \nthere are teams who review via over-the-shoulder  ",
    "start": "205720",
    "end": "212880"
  },
  {
    "text": "or pair programming. There are teams who don't use \nany automation at all. Maybe they just do some mob  ",
    "start": "212880",
    "end": "218280"
  },
  {
    "text": "programming, and then the set of agreed-upon \nstandards could be maybe two people reviewing  ",
    "start": "218280",
    "end": "224360"
  },
  {
    "text": "and approving a pull request. Maybe someone \njust says, \"No, this is okay.\" Maybe it goes   through an automated process. There's so many \ndifferent ways that they can go. So at the lowest  ",
    "start": "224360",
    "end": "232440"
  },
  {
    "text": "common denominator, it's a process. We inspect \neach other's code, make sure it's good to go. ",
    "start": "232440",
    "end": "238760"
  },
  {
    "text": "Now, why is this important? There's a lot of \nreasons why code reviews are important and  ",
    "start": "238760",
    "end": "246080"
  },
  {
    "text": "good for software development teams, but the two \nthat I like to call out and I wrote about in the  ",
    "start": "246080",
    "end": "251480"
  },
  {
    "text": "book was that, number one, it tends to develop \nbetter applications, whether that's because you  ",
    "start": "251480",
    "end": "258519"
  },
  {
    "text": "have another set of eyes looking at the code to \nmaybe point things out that you may not have seen  ",
    "start": "258520",
    "end": "264479"
  },
  {
    "text": "before, whether that's you're running automations \nto double-check that there are silly things like   formatting or syntax issues or something like \nan early return, things that we may have missed  ",
    "start": "264480",
    "end": "278840"
  },
  {
    "text": "initially, those can be removed, and ideally, \nwe find these things before we deploy this  ",
    "start": "278840",
    "end": "284360"
  },
  {
    "text": "code out. So a lot of the things that we do in \ncode reviews and the things that lead up to code  ",
    "start": "284360",
    "end": "290199"
  },
  {
    "text": "reviews tend to lead to better applications.\nThe other part of it is an elevated team  ",
    "start": "290200",
    "end": "296440"
  },
  {
    "text": "understanding, and I think that's the \nmore important thing with code reviews.   This could be a place where teams can kind of \ntransfer the knowledge about the code base that  ",
    "start": "296440",
    "end": "307520"
  },
  {
    "text": "they're all working on. For some teams, that's the \nonly place that they ever kind of share knowledge  ",
    "start": "307520",
    "end": "313639"
  },
  {
    "text": "and know what's going on in another part of \nthe code base that they may not be touching.   So it's a crucial part for people to transfer \nthat knowledge. And also, the more that people  ",
    "start": "313640",
    "end": "323680"
  },
  {
    "text": "get used to it and review others' code and see how \nother people work, especially on their team, the  ",
    "start": "323680",
    "end": "330919"
  },
  {
    "text": "better they can get the context, the nuance, the \nhistory, the decisions behind all the other things  ",
    "start": "330920",
    "end": "337880"
  },
  {
    "text": "that go into actually writing the code. Sometimes \nyou get that in the code review, and that's very,  ",
    "start": "337880",
    "end": "343280"
  },
  {
    "text": "very important for you to not only have a better \napplication but for you to also write better  ",
    "start": "343280",
    "end": "348600"
  },
  {
    "text": "code. Because, as I'm sure we all know, the more \nparameters we have and the more context we have,  ",
    "start": "348600",
    "end": "355240"
  },
  {
    "text": "usually, we tend to produce better code from that. \nSo those are the two things, the best benefits,  ",
    "start": "355240",
    "end": "361120"
  },
  {
    "text": "I think, that come out of doing code reviews.\nI would definitely agree with both of those  ",
    "start": "361120",
    "end": "367440"
  },
  {
    "text": "things, especially sharing the knowledge, you \nknow. So I had a lot of experience working  ",
    "start": "367440",
    "end": "374120"
  },
  {
    "text": "on projects without code reviews, right? \nAnd there was, like, you know, basically,  ",
    "start": "374120",
    "end": "381800"
  },
  {
    "text": "it was like almost each one for themselves, you \nknow. So, like, I write some of my own helper   functions and then I know someone else \nwrites a similar set of those functions,  ",
    "start": "381800",
    "end": "390720"
  },
  {
    "text": "because we don't know that those even exist. And \nso there will be, like, a lot of overlapping,   and nobody really knows anything about anyone \nelse's code. There was no...there was less sense  ",
    "start": "390720",
    "end": "399800"
  },
  {
    "text": "of collective ownership of the code. It was more \nlike, you know, there is my code and your code. ",
    "start": "399800",
    "end": "405280"
  },
  {
    "text": "Another thing is that because, of course, again, \nthere were no reviews, we didn't have any sort of,  ",
    "start": "407520",
    "end": "413160"
  },
  {
    "text": "like, shared enforcement of a standard way of \nwriting things. And so, like, you could literally  ",
    "start": "413160",
    "end": "420520"
  },
  {
    "text": "tell by looking at the code who wrote the code, \nright, without looking at the history, you know.   By looking at the variable names or whether \nthey use long functions or short functions,  ",
    "start": "420520",
    "end": "431919"
  },
  {
    "text": "you can be pretty certain, \"Okay, this is probably \nJoe's code,\" or, \"This was written by Alex,\" or   something like that. That's not necessarily good.\nI totally get that, and that's actually part of  ",
    "start": "431920",
    "end": "445520"
  },
  {
    "text": "why I wrote this book, is because sometimes the \npractices that you experience in your first few  ",
    "start": "445520",
    "end": "452919"
  },
  {
    "text": "jobs, that's kind of the standard that you \nbring to the rest of your other jobs or your  ",
    "start": "452920",
    "end": "458760"
  },
  {
    "text": "other teams. So if you start out, like you said, \nand you start out with a place where there's no  ",
    "start": "458760",
    "end": "463800"
  },
  {
    "text": "code reviews and then you go to another one and \nthere are code reviews, hopefully, you see the  ",
    "start": "463800",
    "end": "468919"
  },
  {
    "text": "difference of why it's important and why it's \ngreat. And then vice versa, if you start with   a place and you have always started with a place \nwith code reviews and some sort of structure and  ",
    "start": "468920",
    "end": "478400"
  },
  {
    "text": "some sign-off conditions that were by the team and \nthen you go to a place where it doesn't happen,  ",
    "start": "478400",
    "end": "483960"
  },
  {
    "text": "it's also very frustrating. And hopefully, you \ntry to share that knowledge and try... You'd  ",
    "start": "483960",
    "end": "489160"
  },
  {
    "text": "be the pioneer and instill the practices \non that next team to make the team better. ",
    "start": "489160",
    "end": "494640"
  },
  {
    "text": "So a lot of these things that you explained, I \ncan relate with, especially, you kind of know who  ",
    "start": "494640",
    "end": "501320"
  },
  {
    "text": "wrote the code because people can...you know, \nthey have their own kind of signature of how   people write code, which is, again, not a not a \ngood thing. If you want to be a cohesive code base  ",
    "start": "501320",
    "end": "512640"
  },
  {
    "text": "and a code base that you can maintain, you should \nnot have these one-off things that you can say,  ",
    "start": "512640",
    "end": "519640"
  },
  {
    "text": "\"Oh, only that person can take care of \nit.\" It should be synonymous throughout. ",
    "start": "519640",
    "end": "525800"
  },
  {
    "text": "I have to say, like, basically, about 10 \nyears ago, a little bit more, I switched  ",
    "start": "526400",
    "end": "532920"
  },
  {
    "text": "from one position to another, and in the new \nposition, they were doing the code reviews,   right? This was my first proper constant code \nreview, if you will, right? Before that, we would  ",
    "start": "532920",
    "end": "543560"
  },
  {
    "text": "maybe have, like, you know, occasionally reviewing \njuniors' code and things like that. But this was,   like, the first time where we were doing it \ncontinuously. I was scared shitless, you know,  ",
    "start": "543560",
    "end": "554240"
  },
  {
    "text": "I'm not going to lie. At that time, I was, like, \nsenior and confident about my code and anything,   but still, I was kind of very worried about it, \nboth as the author and as the reviewer. But after,  ",
    "start": "554240",
    "end": "565839"
  },
  {
    "text": "you know, doing this for a while, it became one of \nmy favorite practices, right? But yeah, the thing  ",
    "start": "565840",
    "end": "574520"
  },
  {
    "text": "is, like, for people or teams starting with the \ncode review, like, how can you start with that,  ",
    "start": "574520",
    "end": "580640"
  },
  {
    "text": "you know? So, what should, like, the author \ndo? What should the reviewer do? That is, like,  ",
    "start": "580640",
    "end": "585800"
  },
  {
    "text": "a huge subject that you cover in your book.\nThat's a great question, because you'd be  ",
    "start": "585800",
    "end": "591839"
  },
  {
    "text": "surprised at how many people and how many teams I \ntalk to and have worked with that did not have a  ",
    "start": "591840",
    "end": "598840"
  },
  {
    "text": "code review in place. So that's number one. I \nwon't go through it too much here, or maybe I  ",
    "start": "598840",
    "end": "605840"
  },
  {
    "text": "can. I do a TL;DR version. But if you don't have \na code review, that's a great place to start. And   there's no better place to know, a better thing \nto discuss with your team than to talk about  ",
    "start": "605840",
    "end": "616800"
  },
  {
    "text": "introducing a code review into your process. So \nmaybe you had an experience like you talked about,  ",
    "start": "616800",
    "end": "623480"
  },
  {
    "text": "Saša Jurić, where, you know, you're overwriting or \nyou're writing the same functions without knowing,  ",
    "start": "623480",
    "end": "629560"
  },
  {
    "text": "and you're wasting time because two people \nare writing the same thing. Or in my case,  ",
    "start": "629560",
    "end": "634600"
  },
  {
    "text": "there were a lot of silly nitpicks and \nissues, formatting issues, debates,  ",
    "start": "634600",
    "end": "640319"
  },
  {
    "text": "PRs that go way too long because they are fighting \nabout some standard that they're going to hold  ",
    "start": "640320",
    "end": "646120"
  },
  {
    "text": "on to and this is the hill they're going to die \non because this is the right way to write code.  So all of these little things that you think \nwon't cause an argument between your team, like,  ",
    "start": "646120",
    "end": "656640"
  },
  {
    "text": "start talking about that on your team. What are \nthose standards? What does everyone think a code  ",
    "start": "656640",
    "end": "662160"
  },
  {
    "text": "review should be? You'd be surprised at how \ndifferent these answers are for people. Some  ",
    "start": "662160",
    "end": "667480"
  },
  {
    "text": "developers will have a very stringent idea of a \ncode review, while others are, like, \"Mm, I mean,  ",
    "start": "667480",
    "end": "672920"
  },
  {
    "text": "if somebody looks at it and one says it looks \ngood, great.\" There's very different standards.  ",
    "start": "672920",
    "end": "679240"
  },
  {
    "text": "So I think that's the first place to start, is \nto talk about, what are those standards? How  ",
    "start": "679240",
    "end": "684640"
  },
  {
    "text": "do you want to review? What are you looking \nfor in a review? What can you automate away? ",
    "start": "684640",
    "end": "691360"
  },
  {
    "text": "That's another thing I dedicate a whole \nchapter to, is a lot of these arguments  ",
    "start": "691360",
    "end": "696519"
  },
  {
    "text": "can be gone because you just put some automation \ninto your process and before the code review,  ",
    "start": "696520",
    "end": "702880"
  },
  {
    "text": "things like spacing, formatting, code \nstandards. Again, a lot of people don't  ",
    "start": "702880",
    "end": "708480"
  },
  {
    "text": "like to hear it because it involves a lot of \ntalking, but these are the things you got to   agree upon with your team. Because if you can't \nagree with those things on your team, then some  ",
    "start": "708480",
    "end": "718639"
  },
  {
    "text": "of these things you might not be able to use. \nYou know, we say, \"Use a linter,\" for example,   where a linter involves some rules, and those \nrules, you all need to agree on. So again,  ",
    "start": "718640",
    "end": "729360"
  },
  {
    "text": "it comes back to why some people can't say, \"This \nrule works. Well, this rule, I'm not going to  ",
    "start": "729360",
    "end": "734760"
  },
  {
    "text": "follow.\" In order for you to get a cohesive code \nbase, you all need to agree to those standards  ",
    "start": "734760",
    "end": "741840"
  },
  {
    "text": "and to those rules, for example, in the linter.\nSo once we get past that part, assuming you now  ",
    "start": "741840",
    "end": "747560"
  },
  {
    "text": "have a code review, but now you're like, \n\"Oh, it's not really working for us,\" or   \"There are some bottlenecks or there are things \nwe can improve,\" for the author specifically,  ",
    "start": "747560",
    "end": "757560"
  },
  {
    "text": "be your own first reviewer. I cannot stress \nthis enough. So many folks make their code  ",
    "start": "758360",
    "end": "765959"
  },
  {
    "text": "review process so much longer because they missed \nsomething themselves. And what I mean by this is  ",
    "start": "765960",
    "end": "771760"
  },
  {
    "text": "they didn't put enough context in their PR, their \ntitle is not descriptive, they're missing a file,  ",
    "start": "771760",
    "end": "778840"
  },
  {
    "text": "they have files that don't belong in the PR, their \nPR is too large and cannot possibly be reviewed  ",
    "start": "778840",
    "end": "786800"
  },
  {
    "text": "by somebody in a coherent way. There are all these \nlittle things that it is the responsibility of the  ",
    "start": "786800",
    "end": "793120"
  },
  {
    "text": "author to create a pull request that is manageable \nfor the reviewer to view. And the better that you  ",
    "start": "793120",
    "end": "800520"
  },
  {
    "text": "have the information, the context, and, you \nknow, just imagine you are going to be the  ",
    "start": "800520",
    "end": "807920"
  },
  {
    "text": "reviewer of that PR, would you be able to review \nit? Would you need to talk to yourself, call you,  ",
    "start": "807920",
    "end": "814519"
  },
  {
    "text": "ask you questions? Or is everything pretty much \nthere and self-explanatory? You want to get to  ",
    "start": "814520",
    "end": "819840"
  },
  {
    "text": "that state of self-explanatory and have everything \nin the PR so that the reviewer can do their job. ",
    "start": "819840",
    "end": "827160"
  },
  {
    "text": "Another thing for authors, there's a lot of \nthings, but the one thing I'll call out is do   not take feedback personally. So a lot, myself \nincluded, when I had my first code review,  ",
    "start": "827160",
    "end": "838519"
  },
  {
    "text": "I was very self-conscious and I was very worried \nbecause I feel like this is a critique, right? I'm  ",
    "start": "838520",
    "end": "846800"
  },
  {
    "text": "working so hard on this code. I think it's good \ncode. And then I'm just going to get critiqued   and shit on. And like, this is terrible, you know. \nYou're not supposed to do this. There's a way to  ",
    "start": "846800",
    "end": "857680"
  },
  {
    "text": "give critique back that's on the reviewer, \nbut if you do have constructive criticism   or comments on your review, you know, just as \nwe're asking the reviewer to keep it objective,  ",
    "start": "857680",
    "end": "868720"
  },
  {
    "text": "we also need to be objective and not assume \nwe're being attacked, that we're just getting  ",
    "start": "868720",
    "end": "874560"
  },
  {
    "text": "feedback because it's an opportunity to improve \nour code. It has nothing to do with us. It just  ",
    "start": "874560",
    "end": "880360"
  },
  {
    "text": "has to do with the code. So that's another \nthing I say, don't involve yourself in there.",
    "start": "880360",
    "end": "886360"
  },
  {
    "start": "887000",
    "end": "1422000"
  },
  {
    "text": "Has any of that ever happened? \nBefore I go into the reviewers,   have you felt any of that at \nall, Saša, in your career?",
    "start": "887160",
    "end": "892519"
  },
  {
    "text": "Yes. I think that's... So it feels to me that \na lot of the culture in development is that the  ",
    "start": "893200",
    "end": "902160"
  },
  {
    "text": "task of the author is to implement the feature \nand hand it off, you know, and this needs to...  Here you go. No longer my problem.\nThen the reviewer is going to make some comments,  ",
    "start": "902160",
    "end": "911880"
  },
  {
    "text": "and the author is going to address them. And \nit's all, you know, good, then. This leads to,  ",
    "start": "911880",
    "end": "919680"
  },
  {
    "text": "I think, like, two major problems from my point \nof view for efficient and nice reviews are over  ",
    "start": "919680",
    "end": "928640"
  },
  {
    "text": "large pull requests and, in general, unorganized \npull requests, which are kind of not split into  ",
    "start": "928640",
    "end": "934040"
  },
  {
    "text": "commits, which I think you mentioned as well \nin your book. You touched on the topic. So we  ",
    "start": "934040",
    "end": "942600"
  },
  {
    "text": "often conflate implementing a feature with a \nsingle pull request, and that doesn't really  ",
    "start": "942600",
    "end": "949160"
  },
  {
    "text": "have to be the case, right? So you can split \nit into multiple pieces. And I usually do this,  ",
    "start": "949160",
    "end": "956800"
  },
  {
    "text": "not upfront, necessarily. I just kind of start \ncoding, and then at some point, I think, \"Okay,   this seems to be dragging on, and I'm nowhere near \nfinished.\" And I'm going to look at my history,  ",
    "start": "956800",
    "end": "966480"
  },
  {
    "text": "and I see, what can I carve out and submit for \nsome well-shaped review, you know, so I don't  ",
    "start": "966480",
    "end": "974199"
  },
  {
    "text": "hand you off thousands of lines of code, right?\nI think you mentioned something along the  ",
    "start": "974200",
    "end": "979800"
  },
  {
    "text": "lines of a few hundred lines of code, preferably, \nwhich is something I agree on. I'm not a fan of  ",
    "start": "979800",
    "end": "985399"
  },
  {
    "text": "these sizes because, obviously, there are going to \nbe exceptions, like you make a global, code-wise,  ",
    "start": "985400",
    "end": "990880"
  },
  {
    "text": "search and replace or something like that, and \nthere are going to be some cases where it makes   sense to have a large PR. But mostly, it should \nbe small, something which is reviewable within,  ",
    "start": "990880",
    "end": "1000200"
  },
  {
    "text": "like, 5 to 20 minutes, you know, depending \non whether you actually have some comments   or not. And my main message to the wider community \nbased on my small experience is, like, make small  ",
    "start": "1000200",
    "end": "1012320"
  },
  {
    "text": "PRs. You know, split the feature into small PRs.\nAnother one is to organize your commits to tell  ",
    "start": "1012320",
    "end": "1019160"
  },
  {
    "text": "the story incrementally, right? So \nthis is another thing, you know,   just people hand you off this single commit, \nright, and it tackles five different things,  ",
    "start": "1019160",
    "end": "1029439"
  },
  {
    "text": "like, you know, adding something, changing the \ndatabase structure, adding some business logic,   doing some refactoring along the way, and it's \nall kind of crammed into that single thing. And  ",
    "start": "1029440",
    "end": "1039039"
  },
  {
    "text": "it's very hard to understand, right? So I'm \nreading, like, a few lines, and they make one   type of change. And then I read some other lines \nof code, and it's another type of change. And  ",
    "start": "1039040",
    "end": "1047600"
  },
  {
    "text": "then the next file in the same commit is, again, \nabout the first type of change. And my mind blows,   you know. So I really cannot fathom all of this.\nAnd what do I do? I do LGTM, or I'm going to  ",
    "start": "1047600",
    "end": "1061840"
  },
  {
    "text": "focus on nitpicks, but then it becomes \nvery counterproductive because I want to  ",
    "start": "1061840",
    "end": "1068480"
  },
  {
    "text": "be a constructive reviewer, but then I'm just \nsubmitting some unimportant comments because I  ",
    "start": "1068480",
    "end": "1074480"
  },
  {
    "text": "fail to see this forest for the trees. And so try \nto organize your commits incrementally. This is,  ",
    "start": "1074480",
    "end": "1081760"
  },
  {
    "text": "actually, once you get into this habit, it's not \nso time-consuming. You just kind of are mindful,  ",
    "start": "1081760",
    "end": "1087720"
  },
  {
    "text": "like, \"Okay, device some plan. I'm going to, \nlike, change the database structure, commit,   you know, and then I'm going to implement \nsome business logic, the happy path commit,  ",
    "start": "1087720",
    "end": "1095640"
  },
  {
    "text": "you know. And so I kind of try to make this thin \nvertical going from the bottom to the interface,  ",
    "start": "1095640",
    "end": "1101600"
  },
  {
    "text": "you know, just dealing with the smallest subset \nof the happy path, and then I'm going to start   adding, you know, making it wider, adding, \nlike, one edge case, another edge case,  ",
    "start": "1101600",
    "end": "1110440"
  },
  {
    "text": "you know, with the tests and what-not.\nThat's one approach. There are, like, a bunch of   different approaches. But what I want to have is \nsmall commits showing you the story incrementally  ",
    "start": "1110440",
    "end": "1118400"
  },
  {
    "text": "such that when you read those commits in, \nsay, GitHub or whatever you're using, you  ",
    "start": "1118400",
    "end": "1125280"
  },
  {
    "text": "see the change usually on a single screen and you \nlook, \"Okay, it makes sense.\" Maybe you type some  ",
    "start": "1125280",
    "end": "1130680"
  },
  {
    "text": "comments. Then you go next, makes sense. And in \nmy experience, like, it's very straightforward to  ",
    "start": "1130680",
    "end": "1136760"
  },
  {
    "text": "review such pull requests. You're actually going \nto be able to provide faster feedback, right? So  ",
    "start": "1136760",
    "end": "1143920"
  },
  {
    "text": "you're going to be more inclined to actually \ndo the review sooner rather than later. The   feedback is going to be of better quality because \nyou're going to be able to focus on important  ",
    "start": "1143920",
    "end": "1152760"
  },
  {
    "text": "issues. And so it's a win-win situation, right?\nAnd this is how I think, you know, authors should,  ",
    "start": "1152760",
    "end": "1161120"
  },
  {
    "text": "in big part, think about, you know, making \ntheir pull requests presentable. Just like we,   we are the authors of the books, right, \nand I presume, before you submitted for  ",
    "start": "1161120",
    "end": "1169640"
  },
  {
    "text": "the first review, you did, like, a bunch \nof re-reads, yourselves, and corrections,  ",
    "start": "1169640",
    "end": "1174920"
  },
  {
    "text": "just as I did with my book. You know, I think I \ndid at least five passes of each chapter before   I would let anyone else even read it, you know. \nBut that's why I got good feedback for the book,  ",
    "start": "1174920",
    "end": "1185040"
  },
  {
    "text": "and I was able to make it even better owing to \nthe feedback, right? So, does that all make sense? ",
    "start": "1186120",
    "end": "1192760"
  },
  {
    "text": "Absolutely. I really am happy that you brought \nup the fact that even you, someone like you,  ",
    "start": "1192760",
    "end": "1198880"
  },
  {
    "text": "gets lost in a pull request that's too large \nbecause it's so much so that you're just like,  ",
    "start": "1198880",
    "end": "1204240"
  },
  {
    "text": "\"Well, I mean, I don't think I could possibly give \na thorough review. There's too much to go through  ",
    "start": "1204240",
    "end": "1209800"
  },
  {
    "text": "here,\" or you have to try to make sense. You now \ngive extra mental load to the reviewer to say,  ",
    "start": "1209800",
    "end": "1217760"
  },
  {
    "text": "\"How does this make sense? How does this fit?\" \nSo instead of focusing their time on reviewing  ",
    "start": "1217760",
    "end": "1223880"
  },
  {
    "text": "and actually giving some good feedback, if there \nis any to give now, they're spending the time  ",
    "start": "1223880",
    "end": "1228640"
  },
  {
    "text": "putting the pieces together, just trying to draw a \nspider web of connections and trying to understand  ",
    "start": "1229160",
    "end": "1235400"
  },
  {
    "text": "it in the first place. So I totally agree with you \nthat that is another thing that authors definitely  ",
    "start": "1235400",
    "end": "1241120"
  },
  {
    "text": "should try to focus on, is the smaller, the \nbetter. Obviously, there are exceptions,   but even if they are large, that's all the more \nreason why it's large and why it is the exception. ",
    "start": "1241120",
    "end": "1252760"
  },
  {
    "text": "But other than that, do it incrementally. Do it \nstory-wise. It's not even just for the reviewer.  ",
    "start": "1252760",
    "end": "1259400"
  },
  {
    "text": "In the future, when you look back at this or you \nmay need to work on this again, you can now see  ",
    "start": "1259400",
    "end": "1265400"
  },
  {
    "text": "the evolution of your code and fully understand, \n\"Oh, okay, this is how we made this change. This  ",
    "start": "1265400",
    "end": "1271520"
  },
  {
    "text": "is why we made this change.\" And it's a little \nbit easier for you to understand in the future  ",
    "start": "1271520",
    "end": "1276960"
  },
  {
    "text": "for yourself. So it's not just the reviewer. \nIt's yourself as well. But yeah, everything  ",
    "start": "1276960",
    "end": "1282679"
  },
  {
    "text": "that we've been talking about is just...it could \nbe summed up with that. Make your reviews smaller.  ",
    "start": "1283240",
    "end": "1288520"
  },
  {
    "text": "Just make them smaller and it will all be okay.\nVery important message here is that, like,  ",
    "start": "1289160",
    "end": "1296560"
  },
  {
    "text": "be aware. I think you mentioned it even in \nthe book, if I remember, that there are, like,   more reviewers than there are authors, right? \nSo there is one author, and usually, you would  ",
    "start": "1296560",
    "end": "1306640"
  },
  {
    "text": "expect at least two approvals in a, at least, \nmoderate team, right? But even if it's just one,   still, you might expect multiple people to read \nthis thing. So whatever time the author loses to  ",
    "start": "1306640",
    "end": "1319160"
  },
  {
    "text": "organize this pull request is going to be saved \nfor multiple people and for the team, in general. ",
    "start": "1319160",
    "end": "1325320"
  },
  {
    "text": "Absolutely.To the book analogy that you \nmade, when I was going through my chapters,  ",
    "start": "1326560",
    "end": "1332960"
  },
  {
    "text": "I would go through them, but I would do them \nin very specific categories, which, to me,  ",
    "start": "1333520",
    "end": "1339680"
  },
  {
    "text": "is the equivalent of doing small pull requests. \nSo for example, right before I'm about to send my  ",
    "start": "1339680",
    "end": "1345120"
  },
  {
    "text": "chapter back, I first do one check, spelling and \ngrammar. That's, like, formatting, syntax issues,  ",
    "start": "1345120",
    "end": "1351000"
  },
  {
    "text": "right? Get those out of the way. Automated, \nalso. I'm not going through them one by one.  ",
    "start": "1351000",
    "end": "1356080"
  },
  {
    "text": "Automate that stuff. Then, number two, go through \nand actually read through and read the flow of  ",
    "start": "1356080",
    "end": "1363399"
  },
  {
    "text": "every single paragraph. Does it make sense? Am \nI rereading something because it's not making  ",
    "start": "1363400",
    "end": "1369120"
  },
  {
    "text": "sense? Is it too long? Are there some sentences \nthat are too long? Do those types of checks.  ",
    "start": "1369120",
    "end": "1375559"
  },
  {
    "text": "Then try to go through, again, are there any code \nsamples or technical things that I'm explaining?  ",
    "start": "1375560",
    "end": "1381360"
  },
  {
    "text": "Do they make sense? Are they matching?\nThen another category is, if I do refer   to figures, are the figures there? Are they the \ncorrect figures? Are they in the right place? Are  ",
    "start": "1381360",
    "end": "1391440"
  },
  {
    "text": "they labeled correctly? Is the subtext or subtitle \nof the figure correct? So doing it and chunking it  ",
    "start": "1391440",
    "end": "1398320"
  },
  {
    "text": "in that way is so much easier to understand for \na person, an author, anyone, a human to do. And  ",
    "start": "1398320",
    "end": "1405480"
  },
  {
    "text": "it's the same in a code review. When you're able \nto give the reviewer something small, something  ",
    "start": "1405480",
    "end": "1411600"
  },
  {
    "text": "concise to focus on, it's much easier for them to \ncritically think about it and look at it and give  ",
    "start": "1411600",
    "end": "1418000"
  },
  {
    "text": "that feedback that we're all looking for.\nExactly. So you mentioned that, again, I'll bring up the \nfact that if it's too large, that we're just like,  ",
    "start": "1418000",
    "end": "1427680"
  },
  {
    "start": "1422000",
    "end": "1671000"
  },
  {
    "text": "\"Okay, it looks good to me.\" And I know I've done \nit. I'll admit it. Before, when I've gotten pull  ",
    "start": "1428480",
    "end": "1435240"
  },
  {
    "text": "requests that are that long, I'm like, \"I trust \nyou. I trust my colleague. It looks good to me.\"  ",
    "start": "1435240",
    "end": "1440640"
  },
  {
    "text": "And so that's a great place to bring up what \nreviewers should do. And even though it's so  ",
    "start": "1440640",
    "end": "1446640"
  },
  {
    "text": "tempting to do this, the one thing I will say is \nthe one part of it is you should not be afraid  ",
    "start": "1446640",
    "end": "1455320"
  },
  {
    "text": "to send those large PRs back to the author. \nThat's number one. So if you receive something   or you're assigned and there's, like, 100 files \nor something that's crazy that you know you can't  ",
    "start": "1455320",
    "end": "1466720"
  },
  {
    "text": "go and you yourself are getting confused, don't be \nafraid to send it back to the author and be like,  ",
    "start": "1466720",
    "end": "1472240"
  },
  {
    "text": "\"Can you split this up into something more \ncohesive? I can't understand it.\" That's fair. ",
    "start": "1472240",
    "end": "1477440"
  },
  {
    "text": "And then, number two, we also have a \nresponsibility as a reviewer to actually  ",
    "start": "1477440",
    "end": "1482519"
  },
  {
    "text": "review the pull requests. So a lot of folks are \njust like, \"If it passes through my review but  ",
    "start": "1482520",
    "end": "1491360"
  },
  {
    "text": "there's a bug, it's the developer's fault.\" \nBut nobody ever thinks, \"How did I miss that  ",
    "start": "1491360",
    "end": "1497240"
  },
  {
    "text": "as a reviewer?\" And I think that's a mindset shift \nfor reviewers to try to switch to because if we're  ",
    "start": "1497240",
    "end": "1505240"
  },
  {
    "text": "going to talk about collective ownership of a code \nbase, then that's part of it. That's not blaming  ",
    "start": "1505240",
    "end": "1511200"
  },
  {
    "text": "the developer because you did a really crappy \nreview or a quick review, or you didn't even  ",
    "start": "1511200",
    "end": "1516320"
  },
  {
    "text": "look at it and just rubber-stamped it through. So \nthat's now on you if something does go wrong. So  ",
    "start": "1516320",
    "end": "1521919"
  },
  {
    "text": "that's one thing reviewers can be doing better.\nThe other thing I will say and I talk about  ",
    "start": "1521920",
    "end": "1527360"
  },
  {
    "text": "extensively in the book, so much I dedicated a \nwhole chapter to it, is how to write comments  ",
    "start": "1527360",
    "end": "1533840"
  },
  {
    "text": "effectively. And to do comments effectively, you \nneed to be objective, you need to have an outcome  ",
    "start": "1533840",
    "end": "1541440"
  },
  {
    "text": "focus, and you need to be specific. I don't \nknow how many times I've gotten comments where  ",
    "start": "1541440",
    "end": "1547039"
  },
  {
    "text": "it's like, \"Oh, I think there's something wrong \nhere,\" and that's the only comment. I'm like,  ",
    "start": "1547040",
    "end": "1552080"
  },
  {
    "text": "\"What am I supposed to do with this as an \nauthor?\" Now, I'm spending time searching through,  ",
    "start": "1552080",
    "end": "1556480"
  },
  {
    "text": "what do you want me to do? Other times, I've \nhad the comments where they're really mean,  ",
    "start": "1557640",
    "end": "1563560"
  },
  {
    "text": "like, \"Oh, this is an idiotic way to do this.\"\nThere are better ways to give constructive   feedback. Or sometimes people try to give their \nversion of, \"Oh, I would have implemented it this  ",
    "start": "1563560",
    "end": "1574640"
  },
  {
    "text": "way.\" And if you only give your way without any \nother reasoning, then, as an author, I have full  ",
    "start": "1574640",
    "end": "1582000"
  },
  {
    "text": "rein to be like, \"Why is your way better than my \nway? You didn't give me any objective reasoning  ",
    "start": "1582000",
    "end": "1588600"
  },
  {
    "text": "why your way is better.\" Is it faster? Does \nit align with code standards better? Do we  ",
    "start": "1588600",
    "end": "1594640"
  },
  {
    "text": "do this in other parts of the code base? \nGive me something that helps justify why  ",
    "start": "1594640",
    "end": "1601600"
  },
  {
    "text": "your way is better. Otherwise, it's just very \nsubjective that you're pointing something out. ",
    "start": "1601600",
    "end": "1606919"
  },
  {
    "text": "So those are two things that I seem to find myself \ntalking about a lot when it comes to reviewers,  ",
    "start": "1606920",
    "end": "1612640"
  },
  {
    "text": "is you have a responsibility too, and please, just \nbe nice to each other and give some justification  ",
    "start": "1612640",
    "end": "1621040"
  },
  {
    "text": "when you're leaving feedback on a pull request.\nThe snarky comments are probably, like, the pain  ",
    "start": "1621040",
    "end": "1629480"
  },
  {
    "text": "point number one, right, of all the reviews. And \nI'm hoping I didn't make those at all, hopefully,  ",
    "start": "1629480",
    "end": "1638440"
  },
  {
    "text": "or very little, trying to be nice. And I think \nit really, really helps because, when you get,  ",
    "start": "1638440",
    "end": "1643879"
  },
  {
    "text": "like, that kind of comment, it really hurts \nyou, and it's kind of hard to focus on,   right? I do, occasionally, and I'm going to \nhave to think about it, I do this thing of,  ",
    "start": "1643880",
    "end": "1654120"
  },
  {
    "text": "like, \"I would have done this like that,\" although \nmy job is kind of a mentoring and trying to teach  ",
    "start": "1654120",
    "end": "1660200"
  },
  {
    "text": "people a different way of using Elixir as a sort \nof a specialist of the language. So that's part  ",
    "start": "1660200",
    "end": "1667919"
  },
  {
    "text": "of the reason.\nThat's fair. But when I write that kind of comment, I typically \nsay, \"We should get back, I think. Let's circle  ",
    "start": "1667920",
    "end": "1676680"
  },
  {
    "start": "1671000",
    "end": "1944000"
  },
  {
    "text": "back on this thing.\" So I try to say, \"Okay, this \nis not mandatory. Your way is fine as well. This  ",
    "start": "1676680",
    "end": "1682480"
  },
  {
    "text": "is how I would have done it.\" And so you can maybe \ntake a pic, like I'm just sharing it out there  ",
    "start": "1682480",
    "end": "1688559"
  },
  {
    "text": "because... And this is kind of a good question, \nreally. Should I only leave comments which are  ",
    "start": "1689400",
    "end": "1694640"
  },
  {
    "text": "completely actionable? So, like, you will solve \nthem or you will say like, \"Oh, no, what you think  ",
    "start": "1694640",
    "end": "1699920"
  },
  {
    "text": "is an issue is not an issue because of that.\" \nBut should I only leave those kind of comments,   or is it fine if I leave some kind of side \ncomments which kind of adds to the discussion? ",
    "start": "1699920",
    "end": "1710799"
  },
  {
    "text": "That is a great question, and I think that \ndepends on the team. So in my opinion,  ",
    "start": "1710800",
    "end": "1718280"
  },
  {
    "text": "this is where the things I call comment signals \ncome into play, and that is basically labeling  ",
    "start": "1718280",
    "end": "1725120"
  },
  {
    "text": "your comments to classify what type of action the \nauthor should take. So for example, on my team,  ",
    "start": "1725120",
    "end": "1733240"
  },
  {
    "text": "we did \"needs work,\" which means, \"This absolutely \nneeds to change. This is an actionable comment.  ",
    "start": "1733240",
    "end": "1739080"
  },
  {
    "text": "You need to take care of this.\" And then there's \nan optional comment or possibility or...what was  ",
    "start": "1739080",
    "end": "1747399"
  },
  {
    "text": "the tag that we called it? It was, oh, level \nup. Level up was a comment that we added,  ",
    "start": "1747400",
    "end": "1757920"
  },
  {
    "text": "which you don't need to do right now, but it \ncould improve the code base at a later time.  ",
    "start": "1757920",
    "end": "1763320"
  },
  {
    "text": "So those were the ones that we used on my team.\nSo to answer your question, no, it doesn't always  ",
    "start": "1763320",
    "end": "1768880"
  },
  {
    "text": "have to be actionable at the moment. And like we \nsaid, this is a place of knowledge transfer and  ",
    "start": "1768880",
    "end": "1774640"
  },
  {
    "text": "knowledge sharing. So if you have something \nto share with the team that is applicable,  ",
    "start": "1774640",
    "end": "1779840"
  },
  {
    "text": "just make sure you are specific about it, \nwhether or not you need to act on it right   then and there. Another way that you can \nclassify comments like that are non-blocking  ",
    "start": "1779840",
    "end": "1790400"
  },
  {
    "text": "versus blocking comments. So you basically say \nblocking and then you put your comment, like,  ",
    "start": "1790400",
    "end": "1796200"
  },
  {
    "text": "something very serious needs to be changed, you're \nnot going to approve it. And then non-blocking,  ",
    "start": "1796200",
    "end": "1801399"
  },
  {
    "text": "which, again, that would fall under something like \nthat, something that you would want to share that   could be helpful for the author. This is also \nvery great for juniors or, in your case, because  ",
    "start": "1801400",
    "end": "1811640"
  },
  {
    "text": "you are being asked to in a consultant capacity, \nit makes sense to make comments like that. But  ",
    "start": "1811640",
    "end": "1817840"
  },
  {
    "text": "as long as they know what kind of comment it \nis, I think that's the more important part. ",
    "start": "1817840",
    "end": "1822520"
  },
  {
    "text": "This is something that I've been thinking about \nmyself and I wasn't aware of, but, of course, it   makes sense that you have this kind of practice of \ntagging the comments, right? Because what I would  ",
    "start": "1823520",
    "end": "1833480"
  },
  {
    "text": "do is I would make 20 comments, and of those, \nmaybe, say, 3 or 4 are really, let's call them  ",
    "start": "1833480",
    "end": "1840120"
  },
  {
    "text": "mandatory or something that needs addressing. But \nthen I would, as a reviewer, have to go through   the list of all these comments and do the summary \nof, \"This is what you actually have to address and  ",
    "start": "1840120",
    "end": "1848760"
  },
  {
    "text": "the rest is optional,\" which, thinking back, \nI just should have made it immediately in the  ",
    "start": "1848760",
    "end": "1855520"
  },
  {
    "text": "comment like, \"Okay, this is an issue, and this \nis kind of as an aside, so do what you will.\" ",
    "start": "1855520",
    "end": "1861000"
  },
  {
    "text": "I'm glad you still made a summary though. That's \nnice. See, if you put in some extra effort,   other folks don't do that. Because when you think \nabout it, let's say you receive 20 comments as an  ",
    "start": "1862880",
    "end": "1874760"
  },
  {
    "text": "author and they're not tagged, you don't \nknow. Now you have to go like, \"Oh, crap,   now I have to go through and fix all of this.\" I \nknow I always had a heart attack whenever I would  ",
    "start": "1874760",
    "end": "1883960"
  },
  {
    "text": "get a bunch of comments on my pull request, \nbecause I automatically assumed that every  ",
    "start": "1883960",
    "end": "1889120"
  },
  {
    "text": "single one meant I had to do something, I had \nto fix something. But in reality, like you said,  ",
    "start": "1889120",
    "end": "1894160"
  },
  {
    "text": "there's only maybe two or three real actionable \nthings that had to be done. The rest were just  ",
    "start": "1894160",
    "end": "1899240"
  },
  {
    "text": "like, \"Hey, this is good to know,\" or, \"Hey, \nthis is something, an opportunity to improve   for the future. You can do it at a later time.\"\nThis can actually lead to a feature creep or a  ",
    "start": "1899240",
    "end": "1911200"
  },
  {
    "text": "scope creep, right? I think you actually mentioned \nthis as one possible pain point. And I think I had   this situation a few times in my career, both as \nthe author and as the reviewer, which I probably  ",
    "start": "1911200",
    "end": "1922799"
  },
  {
    "text": "shouldn't talk about publicly but here we are, \nthat you just add some comments and then the  ",
    "start": "1922800",
    "end": "1929120"
  },
  {
    "text": "author addresses those comments, and it kind of \ndrags on and on and on and just starts being this  ",
    "start": "1929120",
    "end": "1935480"
  },
  {
    "text": "monstrosity of a pull request. So that's one \nissue that can happen with unfocused review.",
    "start": "1935480",
    "end": "1945160"
  },
  {
    "start": "1944000",
    "end": "2168000"
  },
  {
    "text": "Absolutely. The thing is, when it starts to go \neven just five, six comments back and forth in  ",
    "start": "1945160",
    "end": "1953160"
  },
  {
    "text": "a thread between author and reviewer, that's \nwhere I'm like, just take it offline. Give  ",
    "start": "1953160",
    "end": "1958880"
  },
  {
    "text": "a quick call. If you're in-person, tap \nthem on the shoulder and be like, \"Hey,   let's just talk this out really quick.\" Or do a \nvideo call if you're remote. But almost always,  ",
    "start": "1958880",
    "end": "1970159"
  },
  {
    "text": "you will get more context, more resolution, much \nfaster if you just talk synchronously rather than  ",
    "start": "1970160",
    "end": "1977840"
  },
  {
    "text": "asynchronously. Sometimes this is not possible. \nSometimes your teammates are in a time zone that  ",
    "start": "1977840",
    "end": "1983880"
  },
  {
    "text": "doesn't allow you to do that. But I still think \nit is worth it to try to make that time to talk  ",
    "start": "1983880",
    "end": "1989880"
  },
  {
    "text": "synchronously if you're just going over each \nother's heads and it doesn't make sense to you. ",
    "start": "1989880",
    "end": "1996400"
  },
  {
    "text": "Another one is if you have a comment and if \nyou find yourself as a reviewer and you're  ",
    "start": "1996400",
    "end": "2002200"
  },
  {
    "text": "writing a novel in one of your comments, \nthat's a sign to just be like, don't try to  ",
    "start": "2002200",
    "end": "2007919"
  },
  {
    "text": "put everything in your head in there. Just, again, \ndo a call, give a call, do it synchronously,  ",
    "start": "2007920",
    "end": "2013120"
  },
  {
    "text": "because it's usually too complex. There's \ntoo much context that you're trying to fit,  ",
    "start": "2013120",
    "end": "2019120"
  },
  {
    "text": "and it's just better to have that conversation.\nThen the other thing I'll add to that is anytime  ",
    "start": "2019120",
    "end": "2025040"
  },
  {
    "text": "you have an offline conversation, please, please, \ncome back to the PR and just add another comment  ",
    "start": "2025040",
    "end": "2032280"
  },
  {
    "text": "that says, \"What did you decide? What was the \noutcome of your conversation?\" Because that   helps so much in knowledge transfer. And if \nyou talk about that, you and me, for example,  ",
    "start": "2032280",
    "end": "2043600"
  },
  {
    "text": "and we don't add a comment back on our pull \nrequest, the rest of our team is not going   to know what we talked about. The rest of our \nteam is not going to understand, \"Oh, that's  ",
    "start": "2043600",
    "end": "2052320"
  },
  {
    "text": "why that decision was made because Saša Jurić and \nAdrienne Braganza talked about it offline and this  ",
    "start": "2052320",
    "end": "2058200"
  },
  {
    "text": "is the conclusion of that conversation. So just \nadding a simple comment at the end that says,  ",
    "start": "2058200",
    "end": "2063399"
  },
  {
    "text": "\"Hey, Saša and I spoke offline. We realized \nwe didn't actually have to do it in this way,  ",
    "start": "2063400",
    "end": "2069359"
  },
  {
    "text": "so we're removing it because of X, Y, Z.\" Done. \nNow the whole team is on the same page as you,  ",
    "start": "2069360",
    "end": "2076600"
  },
  {
    "text": "and you do a better job of eliminating \nthose knowledge silos that tend to happen. ",
    "start": "2076600",
    "end": "2082640"
  },
  {
    "text": "Another, I think, useful technique for when you \nhave these debates, which inevitably happen,  ",
    "start": "2084200",
    "end": "2089960"
  },
  {
    "text": "right, is to try to pair and solve \ntogether, right? Because when we are  ",
    "start": "2089960",
    "end": "2095839"
  },
  {
    "text": "debating on a pull request, then we are kind \nof in a sort of a power struggle, you know,   and trying to enforce my way and you try to \nenforce your way, right? But when we pair,  ",
    "start": "2095840",
    "end": "2105080"
  },
  {
    "text": "then we actually have a common goal of solving \nthis thing, right? And I think that kind of shifts  ",
    "start": "2105080",
    "end": "2111040"
  },
  {
    "text": "the perspective, and all of a sudden, you know, we \nactually start working together to make it happen,  ",
    "start": "2111040",
    "end": "2116520"
  },
  {
    "text": "right? So I find that sometimes it can help.\nI find that when you are having that argument,  ",
    "start": "2116520",
    "end": "2123560"
  },
  {
    "text": "especially when, for example, a common thing \nis you're arguing because you think your  ",
    "start": "2123560",
    "end": "2129960"
  },
  {
    "text": "implementation is actually more clear and then \nthe other person thinks, \"Actually, no, I think   mine is more clear or more straightforward,\" \nso then you start pairing, and typically,  ",
    "start": "2129960",
    "end": "2140080"
  },
  {
    "text": "what happens is you end up finding a better \nsolution, like a middle ground or a completely  ",
    "start": "2140080",
    "end": "2145320"
  },
  {
    "text": "new solution that you both develop together, and \nnow you're both happy and you come up with even  ",
    "start": "2145320",
    "end": "2151040"
  },
  {
    "text": "better implementation. And so I do like that a lot \nas a solution because now instead of just arguing  ",
    "start": "2151040",
    "end": "2157280"
  },
  {
    "text": "it out and debating it out here, you know, work \ntogether. You're two adults. You're two highly   paid developers. You can pair-program and find \nsomething together and develop something together.",
    "start": "2157280",
    "end": "2169160"
  },
  {
    "start": "2168000",
    "end": "2335000"
  },
  {
    "text": "Exactly. And I just want to say this, so \nI know there's, like, a camp of people who   suggest that pairing can replace reviews. And \nagain, this is something you touch on in your  ",
    "start": "2170000",
    "end": "2181040"
  },
  {
    "text": "book as well. It's a very complete treatment \nof the whole topic, right? I don't think that  ",
    "start": "2181040",
    "end": "2187680"
  },
  {
    "text": "pairing can replace reviews. I think it's \na different kind of technique that can   complement them, right? And this would be one \ngreat example where it can literally enhance  ",
    "start": "2187680",
    "end": "2197680"
  },
  {
    "text": "or unblock the process, if you will, right?\nA lot of people, the camp that does say it can  ",
    "start": "2197680",
    "end": "2205680"
  },
  {
    "text": "replace it, they tend to like it because they \ndo review, right? They do a faster iterative  ",
    "start": "2205680",
    "end": "2212240"
  },
  {
    "text": "review on each other when they're pairing. \nAnd so, in a sense, yeah, you still do the  ",
    "start": "2212240",
    "end": "2218280"
  },
  {
    "text": "same things. You have the review mechanism \nin a faster way. But the same problems still  ",
    "start": "2218280",
    "end": "2224480"
  },
  {
    "text": "lie because now the context and the nuance is now \njust between two people instead of one. So again,  ",
    "start": "2224480",
    "end": "2231520"
  },
  {
    "text": "if you just completely replace code reviews and \nyou only say, \"Oh, you know, one other person,  ",
    "start": "2231520",
    "end": "2236640"
  },
  {
    "text": "the person I'm pairing with, says it looks good,\" \nwell, yeah, they've been in the weeds with you.   They only have that same narrow scope as you do.\nExactly. ",
    "start": "2236640",
    "end": "2244440"
  },
  {
    "text": "So you still need fresh eyes to look at it. And \nthen the last part that's a hill I will die on is  ",
    "start": "2244440",
    "end": "2251960"
  },
  {
    "text": "code reviews are a very good place to document \nwhat is happening with your code base. So even  ",
    "start": "2251960",
    "end": "2259119"
  },
  {
    "text": "if you do the pair programming and you do the \nreview in that way, just make your code review  ",
    "start": "2259120",
    "end": "2264720"
  },
  {
    "text": "a little bit smaller and less formal. Just have \nother folks take a look at it and see if there's  ",
    "start": "2264720",
    "end": "2273400"
  },
  {
    "text": "anything to leave feedback on, and that way, you \nstill get those benefits of knowledge sharing,   knowledge transfer, and documentation \nof what's happening in your code. ",
    "start": "2273400",
    "end": "2282600"
  },
  {
    "text": "I would also add that, to me, pairing means \nauthoring. So the pair, both people are the  ",
    "start": "2283280",
    "end": "2289080"
  },
  {
    "text": "authors. They are reviewing themselves, but it's \na form of self-review, so to speak, and it's bound  ",
    "start": "2289080",
    "end": "2294320"
  },
  {
    "text": "to, I think, suffer from the author's bias, right, \nbecause things are much clearer to the author than  ",
    "start": "2294320",
    "end": "2299400"
  },
  {
    "text": "to other people looking around. I don't think \nit's going to be as efficient as someone looking  ",
    "start": "2299400",
    "end": "2305160"
  },
  {
    "text": "at the code who was not involved in the process \nof making that code, right? And this is, to me,   actually the main benefit or the thing that I \nwant from a review, the very first thing is,  ",
    "start": "2305160",
    "end": "2315000"
  },
  {
    "text": "can I understand this code? Because if I cannot \nunderstand it, then I cannot find any problems  ",
    "start": "2315000",
    "end": "2320240"
  },
  {
    "text": "with it anyway. And so any other benefits kind \nof fall if I don't even understand what this code  ",
    "start": "2320240",
    "end": "2326760"
  },
  {
    "text": "is about. To do this properly, you need a fresh \npair of eyes, right? You need someone who was not  ",
    "start": "2326760",
    "end": "2332600"
  },
  {
    "text": "involved in the process of making that code.\nTotally. This is a good segue. Maybe the last thing we \ncan talk about is you can even have AI take a  ",
    "start": "2332600",
    "end": "2344599"
  },
  {
    "start": "2335000",
    "end": "2512000"
  },
  {
    "text": "look at your code, maybe do a very superficial \nfirst-pass review. So I know a lot of folks are  ",
    "start": "2344600",
    "end": "2353040"
  },
  {
    "text": "probably thinking about AI and if it can \ndo code reviews for us. There are already   tools out there that are reporting this. And \nsome of them that I have seen, they do a good  ",
    "start": "2353040",
    "end": "2364080"
  },
  {
    "text": "job of summarizing. They do a good job of code \nsuggestions, especially if you let them learn  ",
    "start": "2364080",
    "end": "2370640"
  },
  {
    "text": "how your team works and what type of fixes your \nteam usually suggests. So it starts to learn  ",
    "start": "2370640",
    "end": "2376839"
  },
  {
    "text": "what your team would typically suggest for certain \nproblems. But I will say, for anybody listening at  ",
    "start": "2376840",
    "end": "2385120"
  },
  {
    "text": "this moment in time, it's still January 2025, \nI do not think AI can replace code reviews. ",
    "start": "2385120",
    "end": "2390880"
  },
  {
    "text": "It can help. It can do all of the mundane stuff. \nHave it summarize your PR for you. So all that  ",
    "start": "2390880",
    "end": "2396440"
  },
  {
    "text": "context we want you to add as an author, let AI \nwrite that for you. Have it write a title. Have it  ",
    "start": "2396440",
    "end": "2403880"
  },
  {
    "text": "enforce that the titles are all the same on your \nPRs so that you can do some automation on your  ",
    "start": "2403880",
    "end": "2409559"
  },
  {
    "text": "CI/CD builds. Those are the things that I think \nAI can definitely do. But I can't understand the  ",
    "start": "2409560",
    "end": "2417000"
  },
  {
    "text": "nuance just yet. It can't understand your team and \nhow it may operate what your project's quirks are.  ",
    "start": "2417000",
    "end": "2425200"
  },
  {
    "text": "It can get there. I'm not saying it will never \nbe able to do that. But at the current state,   I still don't think that is possible.\nThe last part I'll say about that is,  ",
    "start": "2425200",
    "end": "2434440"
  },
  {
    "text": "especially now because more and more folks are \nusing AI to write code, I think it's even more  ",
    "start": "2434440",
    "end": "2440920"
  },
  {
    "text": "imperative that we do code reviews. So take \nadvantage of having AI tools help you author  ",
    "start": "2440920",
    "end": "2448520"
  },
  {
    "text": "the code and write it, but know that your human \neye is more needed than ever to take a look at  ",
    "start": "2448520",
    "end": "2456000"
  },
  {
    "text": "that code and to make sure it's actually right, \nto make sure it's not hallucinating, to make sure  ",
    "start": "2456000",
    "end": "2461080"
  },
  {
    "text": "it doesn't have some very glaring security issues \nin it. These are the things that we are definitely  ",
    "start": "2461080",
    "end": "2467480"
  },
  {
    "text": "going to need to do now more than ever.\nThis is a great point really. I feel,  ",
    "start": "2467480",
    "end": "2474680"
  },
  {
    "text": "these days, that I have to review a lot of the \nmachine-generated stuff, right? So as software  ",
    "start": "2475240",
    "end": "2481960"
  },
  {
    "text": "developers, we are going to have to read more \nand more. Maybe that's not a bad thing, though.   We're going to have to learn how to actually \nunderstand the details and the ins and outs  ",
    "start": "2481960",
    "end": "2492640"
  },
  {
    "text": "of someone else's code, and maybe that's going \nto make us better reviewers. What do you think?  I hope so. My hope is that code reviews help us \nactually become more critical thinkers because  ",
    "start": "2492640",
    "end": "2503120"
  },
  {
    "text": "we have to review so much more. I mean, we read \nso much code. But that is my hope, that we become  ",
    "start": "2503120",
    "end": "2509400"
  },
  {
    "text": "better critical thinkers and we read a lot more.\nOkay. So on that thought, shall we wrap it up?  ",
    "start": "2509400",
    "end": "2517240"
  },
  {
    "start": "2512000",
    "end": "2633000"
  },
  {
    "text": "What do you say? We don't have \na script, as the title says.  This was really, really great. I appreciate \nhearing your experiences, especially in your  ",
    "start": "2517240",
    "end": "2528280"
  },
  {
    "text": "capacity as a consultant and freelance mentor. \nI really enjoyed talking about this. Hopefully,  ",
    "start": "2528280",
    "end": "2536000"
  },
  {
    "text": "we can do part two. There's so much \nmore that we could talk about that   we haven't even touched on. But, yeah.\nI have to say the time flew by too fast.  ",
    "start": "2536000",
    "end": "2545240"
  },
  {
    "text": "I was hoping we were going to be able to touch on \nsome other things as well. It's a very fascinating   topic. And as I said, for me, it became one of \nmy favorite programming practices that I've been  ",
    "start": "2545240",
    "end": "2555040"
  },
  {
    "text": "doing, and I started doing it somewhere in \nthe middle of my career. So at that point,   I already tried a bunch of different stuff. I'm \na huge fan of code reviews. When done right,  ",
    "start": "2555040",
    "end": "2564200"
  },
  {
    "text": "they are really pleasant. And your book, \nAdrienne Braganza, actually tells us how  ",
    "start": "2564200",
    "end": "2570599"
  },
  {
    "text": "to do them right. So it's full of a lot \nof practical advice. It's a very complete  ",
    "start": "2570600",
    "end": "2577320"
  },
  {
    "text": "treatment of the subject. So I was really amazed \nat how many different areas you covered in there,  ",
    "start": "2577320",
    "end": "2582680"
  },
  {
    "text": "including even the AI at the very end, right? So I \ntotally recommend it. I'm not invested in any way  ",
    "start": "2582680",
    "end": "2592400"
  },
  {
    "text": "in this book. I just read it, and I think it's a \ngreat book. So I totally recommend it to anyone.  ",
    "start": "2592400",
    "end": "2598039"
  },
  {
    "text": "And I wish you best of luck. And to all people \nwatching this and listening, do the code reviews,  ",
    "start": "2598040",
    "end": "2603560"
  },
  {
    "text": "do them well, and if you have problems, ask \nAdrienne Braganza about how to fix them.  Thank you so much, Saša Jurić. That means a lot. \nThank you. And, yes, please ask me the questions.  ",
    "start": "2603560",
    "end": "2613080"
  },
  {
    "text": "I want to make code reviews better for everybody.\nThank you for doing that work.",
    "start": "2613080",
    "end": "2632720"
  }
]