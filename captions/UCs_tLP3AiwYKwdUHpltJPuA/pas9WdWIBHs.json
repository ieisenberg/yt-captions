[
  {
    "start": "0",
    "end": "88000"
  },
  {
    "text": "thank you uh that was a good warm up so to continue the warm up so uh this talk",
    "start": "4520",
    "end": "10080"
  },
  {
    "text": "is going to be about the alexir programming language I'm going to give it through a tool called live book so to",
    "start": "10080",
    "end": "16000"
  },
  {
    "text": "war up who here has used Elixir before in any capacity like play with it okay",
    "start": "16000",
    "end": "23279"
  },
  {
    "text": "and uh anybody running production from this crowd all right beautiful so and",
    "start": "23279",
    "end": "30519"
  },
  {
    "text": "and so Alex is a programming language we're going to go into the details and in order to do that I'm going to use a tool called Life Book which is a uh code",
    "start": "30519",
    "end": "39360"
  },
  {
    "text": "notebook platform like Jupiter notebooks who H who here has used something like",
    "start": "39360",
    "end": "44760"
  },
  {
    "text": "Jupiter notebooks before or similar all right yeah beautiful so we're going to see there are many similarities and many",
    "start": "44760",
    "end": "51320"
  },
  {
    "text": "differences so let's get started we have a lot to go through so what I have here",
    "start": "51320",
    "end": "56719"
  },
  {
    "text": "so and if you haven't used any of those don't worry I'm going to explain and everything so what we have here is a so",
    "start": "56719",
    "end": "62920"
  },
  {
    "text": "live book is an open source application that you can install in your machine it's this interface that we are seeing",
    "start": "62920",
    "end": "68799"
  },
  {
    "text": "right now and I was on the homepage and here is uh a notebook okay and what a",
    "start": "68799",
    "end": "75799"
  },
  {
    "text": "notebook does is that you are mixing uh documentation text Pros with code so for",
    "start": "75799",
    "end": "82479"
  },
  {
    "text": "example if we if I want to write a notebook that explains us about Elixir we're going to have exactly that I have",
    "start": "82479",
    "end": "88400"
  },
  {
    "start": "88000",
    "end": "267000"
  },
  {
    "text": "a section saying okay El alir is a dynamic uh is a dynamic programming language so we're going to say alixir is",
    "start": "88400",
    "end": "94119"
  },
  {
    "text": "a dynamic programming language that runs on the airline virtual machine right and then we can write the the text the",
    "start": "94119",
    "end": "100799"
  },
  {
    "text": "documentation and we can write some code so here's our first alixir code so to show it's a dynamic programming language",
    "start": "100799",
    "end": "106920"
  },
  {
    "text": "one possible example is to say hey I am creating a variable called list and in",
    "start": "106920",
    "end": "112000"
  },
  {
    "text": "this list I have uh and in this variable I'm going to set a list with three elements the first elements they string",
    "start": "112000",
    "end": "118600"
  },
  {
    "text": "hello the number one two three and the atom banana so for the purpose of this",
    "start": "118600",
    "end": "124200"
  },
  {
    "text": "talk think about atoms as tags okay we are going to uh explore them throughout",
    "start": "124200",
    "end": "129239"
  },
  {
    "text": "the talk and then because it's code I can go I can execute this code so that's going to return uh whatever we set to",
    "start": "129239",
    "end": "136200"
  },
  {
    "text": "the variable and because we set that variable now I can execute the function",
    "start": "136200",
    "end": "141840"
  },
  {
    "text": "fetch uh in the module we know saying Hey I want to get the the whatever is on",
    "start": "141840",
    "end": "148239"
  },
  {
    "text": "the index zero of that of that list right so the first element of that list and that returns hello okay so that's it",
    "start": "148239",
    "end": "154959"
  },
  {
    "text": "like that's a notebook pretty much right we write the commentation we write code and then we can execute those things and",
    "start": "154959",
    "end": "162720"
  },
  {
    "text": "so and we already learned that alixir is a dynamic programming language but the second thing you likely learn about Elixir is that Elixir is a functional",
    "start": "162720",
    "end": "170120"
  },
  {
    "text": "programming language who here has used uh functional programming language before all right can you give me some",
    "start": "170120",
    "end": "175760"
  },
  {
    "text": "names shout me some names hasco f c o camo lisp right and",
    "start": "175760",
    "end": "183799"
  },
  {
    "text": "the thing about functional programming language is that like object orientation we do not really have an agreement on",
    "start": "183799",
    "end": "190440"
  },
  {
    "text": "what it means to be a functional programming language okay so I want to talk a little bit about that and because",
    "start": "190440",
    "end": "197200"
  },
  {
    "text": "this is my talk we are going to go with my definition of what it is uh to be a functional programming language and I",
    "start": "197200",
    "end": "203159"
  },
  {
    "text": "like to say that my definition starts really bad but I hope it will make sense rather quickly so think about",
    "start": "203159",
    "end": "210400"
  },
  {
    "text": "mathematical functions and that's why it starts bad right because as soon as I say that some people are going to be like ah I knew that this functional",
    "start": "210400",
    "end": "216239"
  },
  {
    "text": "programming thing is just like Academy stuff right like there's nobody using this uh but think about mathemat",
    "start": "216239",
    "end": "222640"
  },
  {
    "text": "mathematical functions stay with me think like s cosine or even the plus operator right with plus whenever I give",
    "start": "222640",
    "end": "230120"
  },
  {
    "text": "it one and two the result is always three right and then what whenever I give it uh some arguments I have an",
    "start": "230120",
    "end": "236799"
  },
  {
    "text": "expression if that expression does not change the result is always the same",
    "start": "236799",
    "end": "242079"
  },
  {
    "text": "right one and two the result is always going to be three if we put variables in there right and if those variables don't",
    "start": "242079",
    "end": "248040"
  },
  {
    "text": "change the result is always the same and it's a great way of writing Expressions",
    "start": "248040",
    "end": "254560"
  },
  {
    "text": "right because we have like this guarantee that things are not going to change and you may say well she that's",
    "start": "254560",
    "end": "259959"
  },
  {
    "text": "that's obvious right but if that's obvious why are we not writing our code like that so for example here I have",
    "start": "259959",
    "end": "267759"
  },
  {
    "start": "267000",
    "end": "710000"
  },
  {
    "text": "some example of some JavaScript code uh as an example of objectoriented language and we can write this code like so in",
    "start": "267759",
    "end": "273960"
  },
  {
    "text": "JavaScript so here we have a list uh with one two and three in JavaScript we would call it an array right and then I",
    "start": "273960",
    "end": "280639"
  },
  {
    "text": "do list. pop list. pop and every time I call the same expression right I get a",
    "start": "280639",
    "end": "286840"
  },
  {
    "text": "different result back okay and that's because every time we call that the list is actually changing internally like the",
    "start": "286840",
    "end": "293840"
  },
  {
    "text": "list is mutating right and uh and sometimes it's even hard to see how the",
    "start": "293840",
    "end": "301080"
  },
  {
    "text": "object that we are calling a method is mutating because one of the goals of object is to encapsulate State it's",
    "start": "301080",
    "end": "306360"
  },
  {
    "text": "meant to hide that so if you want to see how things are changed would have to go to the implementation go inside right",
    "start": "306360",
    "end": "313039"
  },
  {
    "text": "but in Elixir how would that going to work so imagine that we have the list one two three again okay and then we",
    "start": "313039",
    "end": "319160"
  },
  {
    "text": "want to remove the last element of the list so in Elixir we can call a delete at function right and say I want to",
    "start": "319160",
    "end": "326479"
  },
  {
    "text": "remove from the back so we say minus one so if I execute this code we get one and two right and then if I execute the same",
    "start": "326479",
    "end": "334360"
  },
  {
    "text": "code again right once again I get one and two back right and this happens",
    "start": "334360",
    "end": "341160"
  },
  {
    "text": "because alexir da structures they are immutable we cannot just go there and change the list if you have a list and",
    "start": "341160",
    "end": "347240"
  },
  {
    "text": "you want to remove something from the list right we are going to get a new list back right we're not going to",
    "start": "347240",
    "end": "352919"
  },
  {
    "text": "change the previous one okay so um this",
    "start": "352919",
    "end": "358039"
  },
  {
    "text": "is great we are passing the the inputs and getting the outputs back but then you can say but Jose in the JavaScript",
    "start": "358039",
    "end": "364319"
  },
  {
    "text": "example right it was not only removing something from the list it was actually returning what was removed okay so if we",
    "start": "364319",
    "end": "372160"
  },
  {
    "text": "go to so how we're going to do that in Elixir so it's very similar instead of calling delete at we are going to call",
    "start": "372160",
    "end": "378840"
  },
  {
    "text": "Pop at and when we do that what we get you can see that what we get back is a pair saying look here's the element that",
    "start": "378840",
    "end": "386919"
  },
  {
    "text": "you wanted that you removed and here's the list with that element right and the difference here is that we are no we are",
    "start": "386919",
    "end": "393800"
  },
  {
    "text": "not changing the list behind the scenes right so what we have in this code is that when we writing the functional",
    "start": "393800",
    "end": "400319"
  },
  {
    "text": "style in Elixir right everything that a function needs to work you are going to",
    "start": "400319",
    "end": "405599"
  },
  {
    "text": "pass it as an input and everything that the function needs to change around",
    "start": "405599",
    "end": "411000"
  },
  {
    "text": "right it's going to be explicitly returned as an output okay and this is a beautiful property because we don't we",
    "start": "411000",
    "end": "417199"
  },
  {
    "text": "don't have to be guessing oh when I call that me what is that going to change right you",
    "start": "417199",
    "end": "422280"
  },
  {
    "text": "don't have to guess right whatever is giv as an input whatever a function needs is going to be given as an input",
    "start": "422280",
    "end": "428919"
  },
  {
    "text": "whatever the function needs to change is going to be there as an output so just another very quick example on this topic",
    "start": "428919",
    "end": "435319"
  },
  {
    "text": "right like let's try to be a little bit more practical imagine that you're building an e-commerce one of the things that you want to do on an e-commerce is",
    "start": "435319",
    "end": "442759"
  },
  {
    "text": "to you you're going to have a shopping cart right so and you want to add items to the C to this cart in JavaScript you",
    "start": "442759",
    "end": "449400"
  },
  {
    "text": "can can write this code I have the cart object it's going to have the add item method where you pass an item and what",
    "start": "449400",
    "end": "455160"
  },
  {
    "text": "does that return it could even return like void or undefined right because",
    "start": "455160",
    "end": "460199"
  },
  {
    "text": "you're like well I'm going to add the item to the cart and then the cart is going to be like it's going to store it",
    "start": "460199",
    "end": "465240"
  },
  {
    "text": "somewhere right you don't really need to care what it stored just like oh it want to store it somewhere and the cart's",
    "start": "465240",
    "end": "470479"
  },
  {
    "text": "going to do something and if you want to know what it does you can go like inside implementation right but in Elixir again",
    "start": "470479",
    "end": "476560"
  },
  {
    "text": "the idea is that everything that a function needs to work work is going to be given as an input so I have the add",
    "start": "476560",
    "end": "482319"
  },
  {
    "text": "item function on the cart module and I pass all the inputs implicit explicitly that it needs and if that function needs",
    "start": "482319",
    "end": "488919"
  },
  {
    "text": "to change the cart it's going to return the updated card it's not going to say hey I changed the card somewhere right",
    "start": "488919",
    "end": "496159"
  },
  {
    "text": "is going to return the updated card and that's what functional programming to is about making the data flow very explicit",
    "start": "496159",
    "end": "503280"
  },
  {
    "text": "right when we are looking at our code it's easy to see all the data that comes in all the data that go uh comes I don't",
    "start": "503280",
    "end": "510000"
  },
  {
    "text": "need to be guessing and this style is so common in Elixir that we use the pipe operator so let's write some uh some",
    "start": "510000",
    "end": "516680"
  },
  {
    "text": "examples here okay so here is a an alixir cell we can write some code so I'm going to say imagine that you have",
    "start": "516680",
    "end": "523919"
  },
  {
    "text": "uh imagine that you have this string and what we want to do is that we want to get the last word uh of this string okay",
    "start": "523920",
    "end": "531480"
  },
  {
    "text": "so I can do something like this I want to split this string by space and you",
    "start": "531480",
    "end": "536880"
  },
  {
    "text": "can see that it it returns like a list with Alex school and so what the pipe operator here is doing is that it gets",
    "start": "536880",
    "end": "543640"
  },
  {
    "text": "the argument on the the the value on the left and pass it as the first argument",
    "start": "543640",
    "end": "549279"
  },
  {
    "text": "in the function call we piping to so those two things would be equivalent right but now we thinking about",
    "start": "549279",
    "end": "554519"
  },
  {
    "text": "transforming data we can start thinking about this pipeline so well I have this string I'm going to split on space so",
    "start": "554519",
    "end": "561279"
  },
  {
    "text": "probably the next thing we want to do is to get the last element of that list right and imagine that you want to say",
    "start": "561279",
    "end": "568079"
  },
  {
    "text": "hey actually I I don't want to have I want to remove uh the exclamation mark then I can say uh",
    "start": "568079",
    "end": "575920"
  },
  {
    "text": "string replace suffix I can remove the exclamation mark and then that's cool",
    "start": "575920",
    "end": "582079"
  },
  {
    "text": "and imagine that for some reason you want to upcase that as well right so we Define like we are",
    "start": "582079",
    "end": "589519"
  },
  {
    "text": "constantly defining this pipeline where we can think where the data is going through when the results are coming back",
    "start": "589519",
    "end": "594760"
  },
  {
    "text": "out right and for me to me like if we talk more about functional programming from the point of view of",
    "start": "594760",
    "end": "599880"
  },
  {
    "text": "maintainability from code that we can look at it and clearly see you know when we come back to it 6 months later or",
    "start": "599880",
    "end": "607160"
  },
  {
    "text": "when a coworker comes and look at it and can clearly see the data we don't have to be second guessing ourselves most of",
    "start": "607160",
    "end": "613160"
  },
  {
    "text": "the time I think that would be a great way of talking and promoting functional programming all right enough about this",
    "start": "613160",
    "end": "619720"
  },
  {
    "text": "topic um the other thing that uh we can talk about Elixir and it's often associated with functional programming",
    "start": "619720",
    "end": "626519"
  },
  {
    "text": "is concurrency right and why is that so if we go back about 20 years ago functional",
    "start": "626519",
    "end": "634040"
  },
  {
    "text": "programming started gaining a lot of Attraction and I one of the reasons for that I believe is that uh what was",
    "start": "634040",
    "end": "641680"
  },
  {
    "text": "happening about 20 years ago a little bit less right is that we were starting to talk about multi-core machines",
    "start": "641680",
    "end": "647480"
  },
  {
    "text": "machines where can have multiple cores and today I like to say you know even your wrist watch has four cores right so",
    "start": "647480",
    "end": "655480"
  },
  {
    "text": "uh we want we there was a concern like how can we write code that is going to use all cores of our machine efficiently",
    "start": "655480",
    "end": "663200"
  },
  {
    "text": "and it happens that immutability is quite good for that because let's go back to objectoriented languages what",
    "start": "663200",
    "end": "669839"
  },
  {
    "text": "happens when you have two cores running your machine right they're running at the same time and they try to change the",
    "start": "669839",
    "end": "676240"
  },
  {
    "text": "same list imagine like two of them try to pop something in the same list right or they try to change the same place in",
    "start": "676240",
    "end": "682279"
  },
  {
    "text": "memory at the same time if you don't account for that you can end up corrupting the list corrupting memory",
    "start": "682279",
    "end": "688279"
  },
  {
    "text": "and then your software breaks right but in functional programming languages again we're not mutating things in place",
    "start": "688279",
    "end": "694320"
  },
  {
    "text": "right we are transforming them so there's a huge category of concurrency issues like data races that we are not",
    "start": "694320",
    "end": "701440"
  },
  {
    "text": "really concerned about when you're writing functional programming code and it was one of the reasons why people started looking more and more to",
    "start": "701440",
    "end": "706959"
  },
  {
    "text": "functional programming languages and elixir is not different Elixir is really good for concurrency so what we do in",
    "start": "706959",
    "end": "713160"
  },
  {
    "start": "710000",
    "end": "1049000"
  },
  {
    "text": "Elixir is that uh we create those uh very cheap very lightweight prad of",
    "start": "713160",
    "end": "719680"
  },
  {
    "text": "executions called processes so from now on to the rest of the talk whenever I say process I do not mean like the",
    "start": "719680",
    "end": "726120"
  },
  {
    "text": "operating system process I mean a naring virtual machine process which is the virtual machine that alixir runs on and",
    "start": "726120",
    "end": "732639"
  },
  {
    "text": "those are very cheap so in this piece of code here I'm going to create 1 million of them right I'm just going to create 1",
    "start": "732639",
    "end": "737760"
  },
  {
    "text": "million processes and it finished in about 2.8 seconds those are very short",
    "start": "737760",
    "end": "743360"
  },
  {
    "text": "LIF they just you know they start and then immediately terminate but yeah we created a million of those things",
    "start": "743360",
    "end": "749680"
  },
  {
    "text": "right and all those process they are isolated from each other okay and because they're isolated they can just",
    "start": "749680",
    "end": "755560"
  },
  {
    "text": "you know all around concurrently each go about their own life right whatever they want to do but sometimes you need to",
    "start": "755560",
    "end": "761880"
  },
  {
    "text": "coordinate you need to do like things together so how do we do that in Elixir we do that by passing messages by",
    "start": "761880",
    "end": "769040"
  },
  {
    "text": "sending messages between processes so here is a bigger piece of Elixir code let's go through it together okay so on",
    "start": "769040",
    "end": "775360"
  },
  {
    "text": "the first line I'm saying I'm storing in the parent variable the value of self okay and self is what",
    "start": "775360",
    "end": "782199"
  },
  {
    "text": "is the current process so I'm starting the current process and then I'm going to start to Spa a child process and what",
    "start": "782199",
    "end": "790600"
  },
  {
    "text": "this process is going to do is that it's going to wait it's going to match on the",
    "start": "790600",
    "end": "795720"
  },
  {
    "text": "Ping atom the Ping tag so this process saying look I'm going to wait until somebody sends me a ping and when",
    "start": "795720",
    "end": "801920"
  },
  {
    "text": "somebody sends me a ping I'm going to send a pong message back to my parent",
    "start": "801920",
    "end": "807240"
  },
  {
    "text": "all right and then we go back back to the parent right so this is the child right so we go back to the parent and",
    "start": "807240",
    "end": "812519"
  },
  {
    "text": "the parent going to say hey child ping the child is going to receive that message send the pong back so the",
    "start": "812519",
    "end": "820160"
  },
  {
    "text": "parents now okay when I get pong I'm going to return it worked or we could return a string whatever right so when I",
    "start": "820160",
    "end": "826399"
  },
  {
    "text": "execute this code it returns it worked right so here's the NIT thing right",
    "start": "826399",
    "end": "831880"
  },
  {
    "text": "before when I was working on Elixir and I you know I I would think about how users are interacting with the language",
    "start": "831880",
    "end": "837920"
  },
  {
    "text": "I would think oh somebody's to use the terminal right or somebody is going to be at you know at best using an ID but",
    "start": "837920",
    "end": "845240"
  },
  {
    "text": "because we have live book right it's running on a browser there are a lot of interesting things that we can do on a",
    "start": "845240",
    "end": "850680"
  },
  {
    "text": "browser so instead of asking you to kind of build in your head like oh how this message work like how you know there's a",
    "start": "850680",
    "end": "857160"
  },
  {
    "text": "child there's a parent how does this work what I can do here is that I can use a library called Kino and Kino means",
    "start": "857160",
    "end": "863519"
  },
  {
    "text": "to animate to move so Kino is how we animate a live book so I can use Kino I",
    "start": "863519",
    "end": "868839"
  },
  {
    "text": "can call I can get the same code that we have here be before it's the same code I'm just going to put it inside this",
    "start": "868839",
    "end": "874320"
  },
  {
    "text": "render SE Trace function and now when I execute this we get back um an event",
    "start": "874320",
    "end": "880839"
  },
  {
    "text": "diagram of what is happening so now we can we don't have to build everything in our head right we can start visualizing",
    "start": "880839",
    "end": "886680"
  },
  {
    "text": "things so we like oh okay I have self which is the current process it's going to spawn a child process cool and then",
    "start": "886680",
    "end": "894240"
  },
  {
    "text": "you can see that every process has a ped that's the process identifier it's a random number okay so yeah I'm sping a",
    "start": "894240",
    "end": "902199"
  },
  {
    "text": "child process and then I'm sending a ping message and getting a pong message",
    "start": "902199",
    "end": "907399"
  },
  {
    "text": "back so now we can you know we don't have to start don't have to imagine everything can start visualizing things",
    "start": "907399",
    "end": "913560"
  },
  {
    "text": "so let's show another example here so imagine that you're using Elixir and then you're building a service and what",
    "start": "913560",
    "end": "919160"
  },
  {
    "text": "this service needs to do is that it needs to talk to four other services okay and those four other services you",
    "start": "919160",
    "end": "926279"
  },
  {
    "text": "could talk to them at the same time all right like one do not depend on each other so we could do this by saying hey",
    "start": "926279",
    "end": "932920"
  },
  {
    "text": "I'm going to request this one and then I request the other one and then the other one and then the other one but because",
    "start": "932920",
    "end": "938279"
  },
  {
    "text": "they're independent can say I just want to request the four of them at the same time right so this sample code is meant",
    "start": "938279",
    "end": "945120"
  },
  {
    "text": "to exemplify that so imagine that this is a list of URLs and we want to go through those URLs like asynchronously",
    "start": "945120",
    "end": "951839"
  },
  {
    "text": "right we want to go through them at the same time one not blocking on the other so I can use this function called a sync",
    "start": "951839",
    "end": "957279"
  },
  {
    "text": "stream which Alex your developers are constantly using so we want to like stream through this list of URLs like",
    "start": "957279",
    "end": "963800"
  },
  {
    "text": "asynchronously okay and what I did instead of accessing a URL I'm sleeping for a random amount of time okay I'm",
    "start": "963800",
    "end": "970040"
  },
  {
    "text": "just saying oh I'm going to sleep like to simulate doing a web request um yeah and then I have this code and then",
    "start": "970040",
    "end": "975759"
  },
  {
    "text": "alexir developers we can use this but you can think hey how does that actually work behind the scenes right well now",
    "start": "975759",
    "end": "984160"
  },
  {
    "text": "with live book you can get that piece of code put in the notebook and call render SE trace and we can see exactly how that",
    "start": "984160",
    "end": "991319"
  },
  {
    "text": "works like it starts a process and then starting a b bunch of child processes to do the the to do the part of accessing",
    "start": "991319",
    "end": "999560"
  },
  {
    "text": "the URL and what is really cool is because because we're sleeping by a random amount every time we execute this",
    "start": "999560",
    "end": "1005959"
  },
  {
    "text": "we get a slightly different diagram right depending on who's going to be to slower or who is going to be faster",
    "start": "1005959",
    "end": "1012920"
  },
  {
    "text": "right and this is not only like for code Snippets you can actually get life book",
    "start": "1012920",
    "end": "1018680"
  },
  {
    "text": "and Connect into into your actual exer system be it the development system or",
    "start": "1018680",
    "end": "1023959"
  },
  {
    "text": "be it something that are running production and use that so if you want to like write documentation about how your application works yeah plug Life",
    "start": "1023959",
    "end": "1031000"
  },
  {
    "text": "Book into that you can write the documentation and then you can say hey here's how it is in practice do a render",
    "start": "1031000",
    "end": "1036640"
  },
  {
    "text": "sack trace and you can see all the how all the communication is going through that particular system all right so uh",
    "start": "1036640",
    "end": "1044839"
  },
  {
    "text": "even more examples of things that we can visualize right let's visualize even more things all right so I've been talking a lot about processes right",
    "start": "1044839",
    "end": "1051640"
  },
  {
    "start": "1049000",
    "end": "1468000"
  },
  {
    "text": "everything we can have we have those processes we can run literally millions of them and here's the thing all of your",
    "start": "1051640",
    "end": "1057799"
  },
  {
    "text": "alexir code right runs inside this processes those processes and we can",
    "start": "1057799",
    "end": "1062880"
  },
  {
    "text": "actually list them we can say hey give me all those Pro all the processes that are running right now so here's what I'm",
    "start": "1062880",
    "end": "1069320"
  },
  {
    "text": "doing I'm saying look I want to go through all those processes and for each of those processes I wanted to return uh",
    "start": "1069320",
    "end": "1076840"
  },
  {
    "text": "I wanted to fetch the following information I wanted to fetch the status which means if the process is doing some",
    "start": "1076840",
    "end": "1082760"
  },
  {
    "text": "computation right now or if it's waiting to receive a message like we saw before like receive I want to see how much",
    "start": "1082760",
    "end": "1089159"
  },
  {
    "text": "memory it's using and how many reductions this process has spent okay",
    "start": "1089159",
    "end": "1094840"
  },
  {
    "text": "and a reduction think about it as a gas as fuel okay so a process that cannot",
    "start": "1094840",
    "end": "1100520"
  },
  {
    "text": "run forever processes in The Elixir they are preemptive they can only do some amount of work until they have to be",
    "start": "1100520",
    "end": "1106559"
  },
  {
    "text": "scheduled out and let another process run and we measure this amount of work",
    "start": "1106559",
    "end": "1111760"
  },
  {
    "text": "like this Fu right uh with reductions We call we call it reductions so okay so",
    "start": "1111760",
    "end": "1116880"
  },
  {
    "text": "let's return this information okay so I'm going to say okay I want to get all of the I want to get all the processes",
    "start": "1116880",
    "end": "1123600"
  },
  {
    "text": "and returns information about the memory the process identifier the reductions and the status and that's what we get",
    "start": "1123600",
    "end": "1129960"
  },
  {
    "text": "back we we get like this huge list right and but here's the thing right as I said",
    "start": "1129960",
    "end": "1135480"
  },
  {
    "text": "we are on the rich medium can we plot this data then so if you are anything like me like I I",
    "start": "1135480",
    "end": "1142320"
  },
  {
    "text": "work on programming languages I can do web stuff but I am absolutely horrible at plotting anything at all right so",
    "start": "1142320",
    "end": "1150280"
  },
  {
    "text": "Life Book can help me with that so what we're going to do uh we're I'm going to show you a feature called smart cells",
    "start": "1150280",
    "end": "1156720"
  },
  {
    "text": "and this feature has a really nice plot twist that that I'm going to share at the end okay so imagine that you're",
    "start": "1156720",
    "end": "1162280"
  },
  {
    "text": "using live book you have some data right and then you want to plot it so how can we do that we can come here and say hey",
    "start": "1162280",
    "end": "1168039"
  },
  {
    "text": "I have a smart cell and it has and smart cells they are like predefined tasks okay to to do something particular so we",
    "start": "1168039",
    "end": "1175320"
  },
  {
    "text": "have a bunch of those what we want to chart something so I'm just going to say hey I want to chart something and then it returns this UI and I can start like",
    "start": "1175320",
    "end": "1183000"
  },
  {
    "text": "it's a UI so now we can okay I want to chart the processes it already figure",
    "start": "1183000",
    "end": "1188360"
  },
  {
    "text": "out that from this notebook the only data that I can actually plot is the processes variable that we defined here",
    "start": "1188360",
    "end": "1196000"
  },
  {
    "text": "so it already put it there uh point chart I guess I don't know so and then",
    "start": "1196000",
    "end": "1201200"
  },
  {
    "text": "we want to on the x-axis we want to plot the memory and on the y- axis we want to plot the reductions right so oops we",
    "start": "1201200",
    "end": "1208120"
  },
  {
    "text": "want to plot the reductions and for the color I'm going to use the status so by",
    "start": "1208120",
    "end": "1215480"
  },
  {
    "text": "doing that I can now execute this smart cell like we were executing the previous cells and you can see that it plotted a",
    "start": "1215480",
    "end": "1223240"
  },
  {
    "text": "chart for us okay so uh interesting uh it's a good beginning but it's not",
    "start": "1223240",
    "end": "1228720"
  },
  {
    "text": "really good right let's give a little bit more width to this chart all right",
    "start": "1228720",
    "end": "1234400"
  },
  {
    "text": "but you can see here that there seem to be a lot of points right here right in in the corner so let's try changing the",
    "start": "1234400",
    "end": "1242799"
  },
  {
    "text": "scale so uh a log scale ooh that's better right now we got some spread here",
    "start": "1242799",
    "end": "1249280"
  },
  {
    "text": "on the x- axis so let's do the same for y and yeah that's it that's a pretty",
    "start": "1249280",
    "end": "1257240"
  },
  {
    "text": "good beginning right to start visualizing on a chart how my processes and how much memory how much work they",
    "start": "1257240",
    "end": "1264360"
  },
  {
    "text": "have done right so this is a really good beginning and at this point you can say",
    "start": "1264360",
    "end": "1270000"
  },
  {
    "text": "well Jose that's cool but that's you know I have used a dozens of UI before",
    "start": "1270000",
    "end": "1275880"
  },
  {
    "text": "for plotting a chart right so what is really cool about smart cells is that what they do at the end of the day the",
    "start": "1275880",
    "end": "1283919"
  },
  {
    "text": "the only thing they can do is that they can only execute a code some piece of code code and we have direct access to",
    "start": "1283919",
    "end": "1290960"
  },
  {
    "text": "the piece of code that it executes so if I come here to the smart cell and I click on this button okay I can see the",
    "start": "1290960",
    "end": "1298640"
  },
  {
    "text": "source I can see exactly what is been used to generate this chart and because it's called now if you want to learn how",
    "start": "1298640",
    "end": "1304919"
  },
  {
    "text": "to plot things right you can go you can Mouse over things you can click on the documentation and figure out what is the",
    "start": "1304919",
    "end": "1311000"
  },
  {
    "text": "API for plotting things but more importantly what is really nice about this is because if all we had is the Y",
    "start": "1311000",
    "end": "1318080"
  },
  {
    "text": "what happened when you want to do something that the Y does not allow you to do right you are stuck you have to start from scratch right but with a",
    "start": "1318080",
    "end": "1324919"
  },
  {
    "text": "smart cell we have the code we can even click this button and say Hey I want to convert the smart cell to a regular code",
    "start": "1324919",
    "end": "1331159"
  },
  {
    "text": "cell and now we can go ahead and start modifying it so for example you can say",
    "start": "1331159",
    "end": "1336840"
  },
  {
    "text": "well J processes we can see a static view of processes but processes they are running all the time right and they are",
    "start": "1336840",
    "end": "1343640"
  },
  {
    "text": "you can create new processes processes can terminate what if we try to visualize that we can can just get this",
    "start": "1343640",
    "end": "1349600"
  },
  {
    "text": "initial code right and start changing it so we can say well uh let's we want to",
    "start": "1349600",
    "end": "1355200"
  },
  {
    "text": "animate this chart and as we know what we do when we want to animate things is that we use Kino so I'm going to use",
    "start": "1355200",
    "end": "1361039"
  },
  {
    "text": "Kino vegalite to render the chart and then what what I want to do is that on",
    "start": "1361039",
    "end": "1367880"
  },
  {
    "text": "every 5 Seconds every 5,000 milliseconds okay I want to uh plot the processes",
    "start": "1367880",
    "end": "1375799"
  },
  {
    "text": "again right I want to refresh the chart every 5 seconds so I'm going to do something that we never did before I'm",
    "start": "1375799",
    "end": "1382360"
  },
  {
    "text": "sure I'm going to just copy and paste some code and uh and what I'll do so I'm",
    "start": "1382360",
    "end": "1387720"
  },
  {
    "text": "going to compute all the process information again and I'm going to say look I want to clear the chart uh and",
    "start": "1387720",
    "end": "1395640"
  },
  {
    "text": "then after I clear clear it I want to push the new points um processes okay so",
    "start": "1395640",
    "end": "1404400"
  },
  {
    "text": "if I do that we got the chart and",
    "start": "1404400",
    "end": "1409919"
  },
  {
    "text": "it updated I think there's something happening because of the zoom because my screen zoomed in but you can see now you",
    "start": "1409919",
    "end": "1415200"
  },
  {
    "text": "know very quickly we use the smart cell to get started right and very quickly we're able to say hey now I'm plotting",
    "start": "1415200",
    "end": "1421400"
  },
  {
    "text": "live data right and so that's it right so that's the first part of the talk I",
    "start": "1421400",
    "end": "1427200"
  },
  {
    "text": "forgot to say at the beginning this talk has two parts as we just uh found out so",
    "start": "1427200",
    "end": "1432880"
  },
  {
    "text": "the first one is like this very uh brief introduction into Elixir and live book",
    "start": "1432880",
    "end": "1437960"
  },
  {
    "text": "we we learned that Elixir is a dynamic functional and concurrent programming language here we have some code that is",
    "start": "1437960",
    "end": "1444400"
  },
  {
    "text": "running concurrently right and updating the the chart updating the plot right and we learned how we can use live book",
    "start": "1444400",
    "end": "1450799"
  },
  {
    "text": "to write documentation write code and how smart cells they are really useful for us to you know if we want to tackle",
    "start": "1450799",
    "end": "1457520"
  },
  {
    "text": "a problem that we really don't know we haven't tackled before we can use Smart cells to help us do that so the second",
    "start": "1457520",
    "end": "1463640"
  },
  {
    "text": "part of the talk is going to be the live coding part and what I'm going to do is that I'm going to build a very simple",
    "start": "1463640",
    "end": "1469559"
  },
  {
    "start": "1468000",
    "end": "2625000"
  },
  {
    "text": "web application that can do tax specification so you're going to use web and AI to do that and I'm going to do",
    "start": "1469559",
    "end": "1476840"
  },
  {
    "text": "all of that within live book all right are you ready yeah so let's do this so okay so",
    "start": "1476840",
    "end": "1485919"
  },
  {
    "text": "I'm going to write some code so I'm going to create a new Elixir cell and in Elixir all the code that we write it",
    "start": "1485919",
    "end": "1491360"
  },
  {
    "text": "exists inside modules okay so I'm going to create a new module called uh web Ai",
    "start": "1491360",
    "end": "1497360"
  },
  {
    "text": "and in Elixir you want to write uh a web application there is one library that we can use called plug and plug is",
    "start": "1497360",
    "end": "1503440"
  },
  {
    "text": "basically a specification of how you write a web applications pretty much",
    "start": "1503440",
    "end": "1508520"
  },
  {
    "text": "every ecosystem has something similar to plug so in order to write the plug I'm going to use this function called I'm",
    "start": "1508520",
    "end": "1515360"
  },
  {
    "text": "going to bring the functionality called plug Builder and what plug Builder allows us to do is to define a series of",
    "start": "1515360",
    "end": "1521159"
  },
  {
    "text": "steps that receive the connection the connection is something where we can read information about the request send",
    "start": "1521159",
    "end": "1526880"
  },
  {
    "text": "a response back so we have have a Define a Ser of steps that receive the connection and work with this connection",
    "start": "1526880",
    "end": "1532720"
  },
  {
    "text": "in our case and those steps we call them plug so in our case we have a single step called plug so and and now we need",
    "start": "1532720",
    "end": "1540559"
  },
  {
    "text": "to implement our step so our step is going to do that it's going to receive the connection and it's going to receive",
    "start": "1540559",
    "end": "1545919"
  },
  {
    "text": "some options that we don't care about I could pass options here okay but we don't care about those and what we want",
    "start": "1545919",
    "end": "1552120"
  },
  {
    "text": "to do is that we want to call plug con and send our response with the status",
    "start": "1552120",
    "end": "1558760"
  },
  {
    "text": "code true 100 and a body hell Ro okay so this is most likely the simplest",
    "start": "1558760",
    "end": "1567080"
  },
  {
    "text": "smallest web application that you can write in Elixir okay we Define a series of steps we have just one step and our",
    "start": "1567080",
    "end": "1573960"
  },
  {
    "text": "step what it does is it sends a response on the connection uh saying hello Road",
    "start": "1573960",
    "end": "1579640"
  },
  {
    "text": "and so this is the code in order to uh make this actually uh listen to on a",
    "start": "1579640",
    "end": "1585799"
  },
  {
    "text": "socket and receive requests and return we need a web server so I'm going to write some code here that I'm going to",
    "start": "1585799",
    "end": "1591480"
  },
  {
    "text": "explain uh later so what I'm going to do is that I'm going to call kinar child",
    "start": "1591480",
    "end": "1597120"
  },
  {
    "text": "and we have several web servers in in Elixir one of them is called Bandit so I want to use the Bandit web server which",
    "start": "1597120",
    "end": "1602840"
  },
  {
    "text": "I added uh previously as a dependency to this notebook and say look uh I want to",
    "start": "1602840",
    "end": "1608799"
  },
  {
    "text": "run the Bandit web server I'm going to pass this plug that we created as argument and I want to use the port",
    "start": "1608799",
    "end": "1616120"
  },
  {
    "text": "6789 and let's hope it's not being used used all right so I'm going to execute this code and you can see it says",
    "start": "1616120",
    "end": "1621760"
  },
  {
    "text": "running web AI with bendit version 1.1.1 at this uh at this boort so it",
    "start": "1621760",
    "end": "1627840"
  },
  {
    "text": "seems to have worked and in order to test that it works I'm going to use an HTTP client",
    "start": "1627840",
    "end": "1634640"
  },
  {
    "text": "HTTP Local Host directly from live book as well and if we do the request yeah we",
    "start": "1634640",
    "end": "1640919"
  },
  {
    "text": "can see that we got hello world back all right so that's it very quickly we start writing our web application okay bu",
    "start": "1640919",
    "end": "1648360"
  },
  {
    "text": "beautiful um before we move forward right uh we can let's talk a little bit",
    "start": "1648360",
    "end": "1654080"
  },
  {
    "text": "about kinar child so we can see when we executed the cell it returned a process",
    "start": "1654080",
    "end": "1659279"
  },
  {
    "text": "it returned a PID right so it's a process identifier right and you can see",
    "start": "1659279",
    "end": "1664679"
  },
  {
    "text": "that live book automatically recognize that yes like Kino star child returns a process but this process has like more",
    "start": "1664679",
    "end": "1673000"
  },
  {
    "text": "information attached to it it has like the supervision trade tab so let's click that",
    "start": "1673000",
    "end": "1679399"
  },
  {
    "text": "and you can see that what it returns is this right like it returns this very",
    "start": "1679399",
    "end": "1686480"
  },
  {
    "text": "very very large tree apparently right with a bunch of processes so what is",
    "start": "1686480",
    "end": "1692760"
  },
  {
    "text": "happening here okay so again because in Elixir we're writing concurrent code if you have a web server what you want to",
    "start": "1692760",
    "end": "1699080"
  },
  {
    "text": "do is that you say hey web server I wanted to listen uh on Port 6 7 8 9 what",
    "start": "1699080",
    "end": "1705159"
  },
  {
    "text": "that's going to do is that it's going to start a bunch of processes to work as listeners on that Port so as soon as",
    "start": "1705159",
    "end": "1711960"
  },
  {
    "text": "something external connects to that Port one of the process going to say all right I have this one and that process",
    "start": "1711960",
    "end": "1717720"
  },
  {
    "text": "is going to handle that connection and then another another client connects on that port and then another process is",
    "start": "1717720",
    "end": "1723799"
  },
  {
    "text": "going to say hey all right I'm going to handle that one right so we are doing this so we get concurrency right that's",
    "start": "1723799",
    "end": "1730000"
  },
  {
    "text": "the idea behind this we are starting a bunch of listeners I think by Def is 100 um to listen on that port and as soon as",
    "start": "1730000",
    "end": "1737480"
  },
  {
    "text": "somebody connects one of those processes they're going to like all right I'm going to work on this one and with this we get concurrency we",
    "start": "1737480",
    "end": "1743760"
  },
  {
    "text": "get scalability right not only that what we also do is that if you're using http2",
    "start": "1743760",
    "end": "1749559"
  },
  {
    "text": "with http2 you can send several requests over the same connection right so what",
    "start": "1749559",
    "end": "1754799"
  },
  {
    "text": "we do is that for every request we start another process another process so we can handle multiple requests at the same",
    "start": "1754799",
    "end": "1760760"
  },
  {
    "text": "time so what this is giving us in in this case is concurrency is scalability",
    "start": "1760760",
    "end": "1766200"
  },
  {
    "text": "but not only that another feature that the earling virtual machine is known for",
    "start": "1766200",
    "end": "1771600"
  },
  {
    "text": "is Fault tolerance because here's the thing we have this tree of processes right and we know that those process",
    "start": "1771600",
    "end": "1777480"
  },
  {
    "text": "they are isolated from each other so what happens is that imagine that for some reason this process crashes there",
    "start": "1777480",
    "end": "1784600"
  },
  {
    "text": "is an narrow in it okay imagine that somebody is trying to be malicious and once it connects it's trying to do",
    "start": "1784600",
    "end": "1790399"
  },
  {
    "text": "something weird with it okay so imagine that this crashes because those process are isolated if this thing crashes right",
    "start": "1790399",
    "end": "1797720"
  },
  {
    "text": "if this process handling one connection uh something goes wrong with it the other processes handling other",
    "start": "1797720",
    "end": "1803760"
  },
  {
    "text": "connections they're going to be fine because that's what we want right it would be really bad if one person with one bad connection made everything crash",
    "start": "1803760",
    "end": "1811559"
  },
  {
    "text": "right so because it's isolated we say all right it's fine if you crash but because those processes also have a",
    "start": "1811559",
    "end": "1817960"
  },
  {
    "text": "parent the parent going to be like oh I can see that this process like one of my children it terminated for some",
    "start": "1817960",
    "end": "1824279"
  },
  {
    "text": "unexpected reason so what I'm going to do is that I'm going to start new process in its place to handle future",
    "start": "1824279",
    "end": "1831240"
  },
  {
    "text": "connections to handle uh potentially future requests right and that's how we get the idea of all tolerance for hey",
    "start": "1831240",
    "end": "1837840"
  },
  {
    "text": "it's fine if a process crash because those processes they have supervisors the supervisor is going to notice there",
    "start": "1837840",
    "end": "1843679"
  },
  {
    "text": "was a failure and it's going to start a new process going to start from the beginning for that particular entity to",
    "start": "1843679",
    "end": "1849760"
  },
  {
    "text": "continue handling connections right and that's why we have a supervision tree right because we have processes",
    "start": "1849760",
    "end": "1854840"
  },
  {
    "text": "supervising other processes and that gives us tolerance so that's what it",
    "start": "1854840",
    "end": "1860159"
  },
  {
    "text": "means to say hey start child right because we are starting a child on this large supervision 3 all right let's",
    "start": "1860159",
    "end": "1868080"
  },
  {
    "text": "let's close this one because I don't want to scroll that much all the time all right so yeah Kino star child",
    "start": "1868080",
    "end": "1873440"
  },
  {
    "text": "beautiful and then uh let's go back to our web server there's one thing I want to do before we head into the AI part",
    "start": "1873440",
    "end": "1880720"
  },
  {
    "text": "okay which is well we can H we can render our response but it would be nice",
    "start": "1880720",
    "end": "1885919"
  },
  {
    "text": "if we could like pass parameters to our web server right so let's do that so let's say instead of saying hello road",
    "start": "1885919",
    "end": "1891960"
  },
  {
    "text": "we want to say hello name okay we want to say hello Jose so how we going to handle this functionality uh in plug so",
    "start": "1891960",
    "end": "1900919"
  },
  {
    "text": "we we could do something like this I want to get the name the name is going to be one of the request prms name right",
    "start": "1900919",
    "end": "1907880"
  },
  {
    "text": "and then we want to do hello Road name then we interpolate that value there so if I render",
    "start": "1907880",
    "end": "1913840"
  },
  {
    "text": "this um you can see yeah I I I upd dat my application now I need to do the",
    "start": "1913840",
    "end": "1919399"
  },
  {
    "text": "request again you can see that as soon as I do this it crashes right something did not work and it say Hey you cannot",
    "start": "1919399",
    "end": "1925000"
  },
  {
    "text": "fetch name from parameters because the parameters they were not fetched and that's because plug by default is not",
    "start": "1925000",
    "end": "1930360"
  },
  {
    "text": "going to try to parse the request because you don't care about the request information so you need to tell it hey I",
    "start": "1930360",
    "end": "1935720"
  },
  {
    "text": "wanted to fetch the C parameters so we are adding a new step to our Pipeline",
    "start": "1935720",
    "end": "1941279"
  },
  {
    "text": "and once we do that and then we do the request it works it says hello Jose all",
    "start": "1941279",
    "end": "1947080"
  },
  {
    "text": "right so that's it we have our very simple web server working so now it's time to do the AI part okay so once",
    "start": "1947080",
    "end": "1955559"
  },
  {
    "text": "again I can work with languages I can work with web but I'm horrible at AI stuff I have no idea how to get started",
    "start": "1955559",
    "end": "1962480"
  },
  {
    "text": "luckily once again is smart cells they can uh they can help us right so what we",
    "start": "1962480",
    "end": "1967519"
  },
  {
    "text": "have in Elixir is that we have a library called anex which stands for numerical",
    "start": "1967519",
    "end": "1973279"
  },
  {
    "text": "Elixir and that allows you to compile a subset of Elixir to run on the GPU and",
    "start": "1973279",
    "end": "1979039"
  },
  {
    "text": "on top of this Library we created a b we implemented a bunch of machine learning models like popular models like stable",
    "start": "1979039",
    "end": "1985200"
  },
  {
    "text": "diffusion gpt2 Yama and so on so and we can use the smart cells to help us get",
    "start": "1985200",
    "end": "1991159"
  },
  {
    "text": "started so let's do this I'm going to there's a new network task smart cell so I'm going to click that so it generates",
    "start": "1991159",
    "end": "1997279"
  },
  {
    "text": "once again Ai and what this AI does is that uh it has like many tasks for",
    "start": "1997279",
    "end": "2003559"
  },
  {
    "text": "different things we can do machine learning so one of those tasks for example one of my favorite is speech to",
    "start": "2003559",
    "end": "2008799"
  },
  {
    "text": "text so uh let's give that a try so I'm going to evaluate the cell and what this does is that it's going to build the",
    "start": "2008799",
    "end": "2015080"
  },
  {
    "text": "machine learning model and the form that allows us to interact with that model okay so I can",
    "start": "2015080",
    "end": "2021440"
  },
  {
    "text": "say hello darkness my old friend so I record some Modio let's try",
    "start": "2021440",
    "end": "2027559"
  },
  {
    "text": "to run it the first time we run it takes a while because we have to compile the machine learning model and I don't have GPU on this machine so it runs but yeah",
    "start": "2027559",
    "end": "2035200"
  },
  {
    "text": "you can see it just we just did some machine learning task we did speech to text just by clicking around right and",
    "start": "2035200",
    "end": "2042360"
  },
  {
    "text": "it works and uh and then we have a bunch of models here we have a bunch of tasks so",
    "start": "2042360",
    "end": "2047840"
  },
  {
    "text": "for Simplicity let's do something like text related okay so like text classification because working with taex",
    "start": "2047840",
    "end": "2054280"
  },
  {
    "text": "is going to be simpler so I'm going to evaluate this again and that's going to generate another model with a form to",
    "start": "2054280",
    "end": "2062280"
  },
  {
    "text": "work with it so I can say oh wow I didn't know that so let's run this and it's going to say that is surprise looks",
    "start": "2062280",
    "end": "2071079"
  },
  {
    "text": "good uh alexir is awesome Joy yeah that makes",
    "start": "2071079",
    "end": "2078760"
  },
  {
    "text": "sense uh Jose talk is boring disgust wow yeah but so again we",
    "start": "2078760",
    "end": "2087800"
  },
  {
    "text": "have another machine learning model running here and we know from a smart sales that with smart sales we can",
    "start": "2087800",
    "end": "2093839"
  },
  {
    "text": "actually go and look at the code so we can actually understand what is happening here with the goal that we can",
    "start": "2093839",
    "end": "2099560"
  },
  {
    "text": "look at the code then get it and put it as part of our web app okay so let's do that so let's look at the code I'm just",
    "start": "2099560",
    "end": "2106680"
  },
  {
    "text": "going to go ahead and convert like the code into code cells because we're going to change it",
    "start": "2106680",
    "end": "2113640"
  },
  {
    "text": "so sorry we can break the code here uh in two parts right so the first part",
    "start": "2113640",
    "end": "2118760"
  },
  {
    "text": "saying Hey I want to load the model because in machine learning you have to define the model but we need somebody to have pre-trained the model already so we",
    "start": "2118760",
    "end": "2125880"
  },
  {
    "text": "can load those models from hugging face and we also load a tokenizer because a machine learning model only understands",
    "start": "2125880",
    "end": "2132720"
  },
  {
    "text": "numbers right so we need something that is going to convert the text into numbers that's what the tokenizer does",
    "start": "2132720",
    "end": "2138880"
  },
  {
    "text": "and then we start a serving the serving is something that encapsulates a machine learning task so it's starting a serving",
    "start": "2138880",
    "end": "2144960"
  },
  {
    "text": "that does tax classification again we don't need to understand all the details here right we if you want you can go",
    "start": "2144960",
    "end": "2151839"
  },
  {
    "text": "Mouse over go to the library documentation right but what you need to know is that bumblebee is where we have",
    "start": "2151839",
    "end": "2157240"
  },
  {
    "text": "a bunch of those machine learning Models All right so the first part is defining the machine learning test defining the",
    "start": "2157240",
    "end": "2163160"
  },
  {
    "text": "serving the second part is defining the form that we are interacting with uh with the machine learning model so we",
    "start": "2163160",
    "end": "2169760"
  },
  {
    "text": "Define a text area right which we had the default oh wow I didn't know that uh we Define the form the form has a single",
    "start": "2169760",
    "end": "2177000"
  },
  {
    "text": "text input and we Define a frame which is where we're going to render the results and then we say kol listen form",
    "start": "2177000",
    "end": "2184480"
  },
  {
    "text": "right before we use K listen just to do something and every 5 Seconds now we are using K listen to do something every",
    "start": "2184480",
    "end": "2191079"
  },
  {
    "text": "time somebody submits the form so every time somebody submits the form I'm going to render the text running in the frame",
    "start": "2191079",
    "end": "2197640"
  },
  {
    "text": "so let's let's run this right um it's going to be very quick right but you can",
    "start": "2197640",
    "end": "2203040"
  },
  {
    "text": "see that as soon as I click run the this part here below is going to show running very quickly right running right and",
    "start": "2203040",
    "end": "2210079"
  },
  {
    "text": "then it show the result so we say hey I want to render in the frame that we are running and then I'm going to run the",
    "start": "2210079",
    "end": "2216119"
  },
  {
    "text": "machine learning model say Hey sir in hey machine learning task do the Tex classification on this text that we got",
    "start": "2216119",
    "end": "2222079"
  },
  {
    "text": "from the input and that returns uh predictions each prediction has a label and a score that we can see here right",
    "start": "2222079",
    "end": "2229839"
  },
  {
    "text": "and then we use a a rich uh AI uh a",
    "start": "2229839",
    "end": "2235359"
  },
  {
    "text": "component to to handle the results beautiful like this okay and that's it right that's what this code is doing and",
    "start": "2235359",
    "end": "2240560"
  },
  {
    "text": "if you want to go deep into it we can do that so all we need to do to bring like",
    "start": "2240560",
    "end": "2245920"
  },
  {
    "text": "machine learning functionality to our web applications is to start moving this code to our web app but before we do",
    "start": "2245920",
    "end": "2252040"
  },
  {
    "text": "that I want to do one small change to this code okay because what this code is doing is the following every time there",
    "start": "2252040",
    "end": "2259000"
  },
  {
    "text": "is uh somebody sends some text for us to do like the this the the classification",
    "start": "2259000",
    "end": "2264640"
  },
  {
    "text": "the sentiment analyis we are going and running the machine learning model but if you're running this for example with",
    "start": "2264640",
    "end": "2270319"
  },
  {
    "text": "a GPU right GPU they're really good at parallel processing so you don't want to say hey every time I get a text I'm",
    "start": "2270319",
    "end": "2276800"
  },
  {
    "text": "going to Adit send that to the GPU what you want to do is that I'm going to wait like 100",
    "start": "2276800",
    "end": "2282680"
  },
  {
    "text": "milliseconds and try to collect a bunch of text that people are sending to my application at the same time so you want",
    "start": "2282680",
    "end": "2288760"
  },
  {
    "text": "to batch them together and then send the batch to the GPU because that's going to be more efficient okay so we want to do",
    "start": "2288760",
    "end": "2294960"
  },
  {
    "text": "some sort of batching uh and the idea here is exactly that you know you're going to have your serving and you're",
    "start": "2294960",
    "end": "2301560"
  },
  {
    "text": "going to have a bunch of processes right sending some text to the analyzis it's going to batch them together and send",
    "start": "2301560",
    "end": "2307160"
  },
  {
    "text": "the suppes back we do that in Elixir by saying look uh I want to use once again",
    "start": "2307160",
    "end": "2315280"
  },
  {
    "text": "can start child I want to start a child right and this child is going to be before it was a bandit right that was",
    "start": "2315280",
    "end": "2321359"
  },
  {
    "text": "the web server here we're going to start a next serving we are going to pass the serving that we created oops",
    "start": "2321359",
    "end": "2330480"
  },
  {
    "text": "serving and we are going to we need to give it a name which I'm just going to call uh um I don't know my web AI it can",
    "start": "2330480",
    "end": "2339119"
  },
  {
    "text": "be anything right as long as the name is consistent right so when I do that we are going to start a process uh similar",
    "start": "2339119",
    "end": "2346000"
  },
  {
    "text": "to what we've done before once again it sees a supervision 3 uh luckily this one is much smaller than the one we had",
    "start": "2346000",
    "end": "2352359"
  },
  {
    "text": "before okay and now all I need to do is to change this code to say instead",
    "start": "2352359",
    "end": "2358839"
  },
  {
    "text": "of doing run I wanted to do a batchet run and I'm going to pass the",
    "start": "2358839",
    "end": "2365200"
  },
  {
    "text": "name of the serving of the process right that we started to deal with that so I do those changes and everything should",
    "start": "2365200",
    "end": "2371599"
  },
  {
    "text": "still work okay that's it we are just like preparing our code to be more scalable if there are a bunch of request",
    "start": "2371599",
    "end": "2377560"
  },
  {
    "text": "coming at the same time that's going to work and now that we did this let's just migrate this to the web app so I'm going",
    "start": "2377560",
    "end": "2384040"
  },
  {
    "text": "to literally uh you know copy and paste this code",
    "start": "2384040",
    "end": "2389880"
  },
  {
    "text": "to to our web app I'm going to say look uh I want to start both the web server",
    "start": "2389880",
    "end": "2395079"
  },
  {
    "text": "and the Machine learning tasks okay and uh the second part and once we copy",
    "start": "2395079",
    "end": "2400440"
  },
  {
    "text": "and paste that code the second thing that we need to do right is to to now",
    "start": "2400440",
    "end": "2405640"
  },
  {
    "text": "get the text and uh send them to our serving process all right so I copy and",
    "start": "2405640",
    "end": "2411079"
  },
  {
    "text": "paste the code that started the serving that started the process and now every time there is a request uh instead of",
    "start": "2411079",
    "end": "2417160"
  },
  {
    "text": "receiving a name let's say that we're expecting a text as parameter so I'm going to receive a text I'm going to",
    "start": "2417160",
    "end": "2422440"
  },
  {
    "text": "call batet run right the same code that we are calling uh down there passing the",
    "start": "2422440",
    "end": "2427960"
  },
  {
    "text": "text that's going to give an output and we know that the output Has a Field called predictions with all the",
    "start": "2427960",
    "end": "2433640"
  },
  {
    "text": "predictions and we know that it's a list right like Joy disgust like it's a list of labels and the likelihood that that's",
    "start": "2433640",
    "end": "2441440"
  },
  {
    "text": "the the answer that we want right and for this case for Simplicity we are only",
    "start": "2441440",
    "end": "2446599"
  },
  {
    "text": "interested in the first element of the list we don't want to show all predictions just want to show the first one so uh we want to get the first and",
    "start": "2446599",
    "end": "2453960"
  },
  {
    "text": "we ignore the rest so this is a feature in Elixir called pattern matching where we can match on the dative structures so",
    "start": "2453960",
    "end": "2459640"
  },
  {
    "text": "here I'm saying hey I have a list but I'm only interested in the first element you can discard the rest and of the",
    "start": "2459640",
    "end": "2464960"
  },
  {
    "text": "first element we know that it has a label and a score and we don't care",
    "start": "2464960",
    "end": "2471359"
  },
  {
    "text": "about the score so I'm just going to get the label and I'm going to say this was",
    "start": "2471359",
    "end": "2477800"
  },
  {
    "text": "label okay so that's it I got the code that there Mar generated right we look",
    "start": "2477800",
    "end": "2483200"
  },
  {
    "text": "around try to understand it and we brought into the web application so let's if this works I'm going to compile",
    "start": "2483200",
    "end": "2488560"
  },
  {
    "text": "this code uh update our application and now we're going to say instead of name I'm",
    "start": "2488560",
    "end": "2495040"
  },
  {
    "text": "going to pass text and we're going to say alexir is awesome and this was Joy it worked right",
    "start": "2495040",
    "end": "2503040"
  },
  {
    "text": "so the machine learning is running inside our web app we can say let's try just as talk is",
    "start": "2503040",
    "end": "2509200"
  },
  {
    "text": "boring and it was disgusted fantastic right so that's it we are working with",
    "start": "2509200",
    "end": "2514240"
  },
  {
    "text": "our code we are improving our application we are adding machine learning features all right there is one last thing I want to show okay so",
    "start": "2514240",
    "end": "2521480"
  },
  {
    "text": "imagine that you build this web application uh you put it in production you start adding more features and it",
    "start": "2521480",
    "end": "2528280"
  },
  {
    "text": "becomes really successful now like uh VCS they are knocking at your door like hey take my money right and you but now",
    "start": "2528280",
    "end": "2535839"
  },
  {
    "text": "the number of users are growing at the same time and you need to scale this okay so what you want to do one of the",
    "start": "2535839",
    "end": "2541800"
  },
  {
    "text": "potential ways that you want to scale this that are going to say look okay I want to have like my web servers right like in your infrastructure in your",
    "start": "2541800",
    "end": "2548319"
  },
  {
    "text": "Cloud you're going to have your web servers handling the request and you're going to buy like four machines with",
    "start": "2548319",
    "end": "2554880"
  },
  {
    "text": "really large gpus to deal only with the machine learning part okay so you have like in the front like have a bunch of",
    "start": "2554880",
    "end": "2561119"
  },
  {
    "text": "web servers machine running the web server and then some machines with specific gpus to help you do the work",
    "start": "2561119",
    "end": "2566400"
  },
  {
    "text": "all right if you're doing that in other Technologies that's going to be a lot of work right because going to say yeah I",
    "start": "2566400",
    "end": "2572440"
  },
  {
    "text": "need to I need to run like something separate on those machines maybe set up",
    "start": "2572440",
    "end": "2577839"
  },
  {
    "text": "like some RPC mechanism maybe set up like some message queue maybe I put things to sqs so I can read from S3",
    "start": "2577839",
    "end": "2585520"
  },
  {
    "text": "right you can do this you can complicate this in many many ways but there's one thing that alexir has that also comes",
    "start": "2585520",
    "end": "2592800"
  },
  {
    "text": "from Aang which is that uh we can also write distributed applications with Elixir okay and the idea here is that",
    "start": "2592800",
    "end": "2600800"
  },
  {
    "text": "remember that when processes they are communicating by sending messages that works in a way that it doesn't really",
    "start": "2600800",
    "end": "2606640"
  },
  {
    "text": "matter if those processes they are in the same machine or in different machines so what I'm going to do here is",
    "start": "2606640",
    "end": "2612640"
  },
  {
    "text": "that I'm going to say look if we need to scale this application imagine that we need to move our machine learning model",
    "start": "2612640",
    "end": "2619240"
  },
  {
    "text": "to another uh machine to another web server in a cluster how we going to do that with Elixir so what I'm going to do",
    "start": "2619240",
    "end": "2625280"
  },
  {
    "start": "2625000",
    "end": "2827000"
  },
  {
    "text": "here is that I'm going to start a new notebook okay and this notebook is empty",
    "start": "2625280",
    "end": "2632160"
  },
  {
    "text": "there is nothing here okay and what I'm going to do is that I will get all the",
    "start": "2632160",
    "end": "2639160"
  },
  {
    "text": "dependencies all the code that we are using for for the notebook that we're working on and I'm going to paste it",
    "start": "2639160",
    "end": "2645400"
  },
  {
    "text": "here so I'm going to get all the dependencies and say Hey you know install all this dependencies so every notebook is a separate Elixir uh",
    "start": "2645400",
    "end": "2653880"
  },
  {
    "text": "instance is a separate Airline virtual machine those are not related okay at the beginning they're not related at all",
    "start": "2653880",
    "end": "2659559"
  },
  {
    "text": "right so I started a new notebook and what I'm going to do is that we'll go back to the code to our web app code",
    "start": "2659559",
    "end": "2669040"
  },
  {
    "text": "and I'm going to yank the machine learning model okay I'm just going to get it I'm going to remove it completely",
    "start": "2669040",
    "end": "2674720"
  },
  {
    "text": "from The Notebook and I'm going to put it on the other one all right so if I do",
    "start": "2674720",
    "end": "2680359"
  },
  {
    "text": "this and now I execute the code I update my web server right and then I execute the code it's going to crash right and",
    "start": "2680359",
    "end": "2687240"
  },
  {
    "text": "it crashes because it's like hey you're like you're trying to run like the machine learning model but there's no",
    "start": "2687240",
    "end": "2692760"
  },
  {
    "text": "such thing here there's no such thing running on on on this notebook right this doesn't exist but again like what",
    "start": "2692760",
    "end": "2701160"
  },
  {
    "text": "we can do is that we can start relying on the airling distribution so I'm going to do here is that um every airlan",
    "start": "2701160",
    "end": "2708960"
  },
  {
    "text": "virtual machine instance right it has it has a node",
    "start": "2708960",
    "end": "2714520"
  },
  {
    "text": "name and it has a cookie and the cookie is a secret that allows us to to reach",
    "start": "2714520",
    "end": "2721040"
  },
  {
    "text": "to that node okay so in the new notebook that we created which is pretty much empty which is pretty much just the machine learning model I'm I I want to",
    "start": "2721040",
    "end": "2728000"
  },
  {
    "text": "get its node name and its cookie so I'm going to copy this thing here and now we are going to go back to our web",
    "start": "2728000",
    "end": "2733960"
  },
  {
    "text": "application and we're going to say look the node name is this and the cookie name is this so I'm",
    "start": "2733960",
    "end": "2741559"
  },
  {
    "text": "going to set that the cookie for that node is exactly uh that pair and I want",
    "start": "2741559",
    "end": "2748640"
  },
  {
    "text": "to connect to that node okay so as soon as I do this right now when I execute",
    "start": "2748640",
    "end": "2754559"
  },
  {
    "text": "this code this instance is going to connect using a socket over the",
    "start": "2754559",
    "end": "2760559"
  },
  {
    "text": "distribution to that other one and now if I do the request again once again I didn't change a single line of code here",
    "start": "2760559",
    "end": "2767119"
  },
  {
    "text": "all right when I do the request again it's going to work right because it went",
    "start": "2767119",
    "end": "2773000"
  },
  {
    "text": "to the other instance right and say Hey you know uh here I wanted to do this tax classification for me and what is really",
    "start": "2773000",
    "end": "2779440"
  },
  {
    "text": "cool about this is that if you have like 30 machines in the front of our cluster",
    "start": "2779440",
    "end": "2784800"
  },
  {
    "text": "receiving web requests and four machines with the GPU those for Machines of the GPU they are now batching requests from",
    "start": "2784800",
    "end": "2790400"
  },
  {
    "text": "the whole cluster right and we didn't have to change a single line of code right we just had to connect those",
    "start": "2790400",
    "end": "2796520"
  },
  {
    "text": "things together right which is beautiful and even the connection it doesn't need",
    "start": "2796520",
    "end": "2801559"
  },
  {
    "text": "to be manual right like if you're running kubernetes if you're running on AWS we have libraries that is pinging",
    "start": "2801559",
    "end": "2806960"
  },
  {
    "text": "like hey kubernetes what are the nodes and it's going to automatically set up the connection for you so once again",
    "start": "2806960",
    "end": "2812400"
  },
  {
    "text": "like compare how much work it would be to build something similar right any else you would have to bring a bunch of",
    "start": "2812400",
    "end": "2818960"
  },
  {
    "text": "external tools and external dependencies to achieve something that we are pretty much getting for free thanks to the",
    "start": "2818960",
    "end": "2825400"
  },
  {
    "text": "airling virtual machine so yeah that's what I had to to share for today I hope you enjoyed I",
    "start": "2825400",
    "end": "2830680"
  },
  {
    "start": "2827000",
    "end": "2841000"
  },
  {
    "text": "hope you learned a little bit about Elixir and Life Book and that we are going to give it a try thank you very",
    "start": "2830680",
    "end": "2836220"
  },
  {
    "text": "[Applause] much",
    "start": "2836220",
    "end": "2842559"
  }
]