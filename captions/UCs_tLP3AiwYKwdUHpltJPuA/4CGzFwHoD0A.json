[
  {
    "start": "0",
    "end": "53000"
  },
  {
    "text": "[Music]",
    "start": "970",
    "end": "7838"
  },
  {
    "text": "all right i'm mark volkman i work at a company called object computing in the st louis area we provide all kinds of",
    "start": "12960",
    "end": "19760"
  },
  {
    "text": "software consulting and i've been very focused on web development for the past 10 years or so",
    "start": "19760",
    "end": "24960"
  },
  {
    "text": "and worked in many different frameworks and my latest interest is in svelt and i",
    "start": "24960",
    "end": "30160"
  },
  {
    "text": "wrote the book silt and sapper in action for manning recently that came out",
    "start": "30160",
    "end": "35840"
  },
  {
    "text": "last fall and so i want to tell you all the things that i love about svelt you'll notice in the middle there it has",
    "start": "35840",
    "end": "41360"
  },
  {
    "text": "a github url where i have slides for all of my talks so if you go to that at that url there's",
    "start": "41360",
    "end": "48079"
  },
  {
    "text": "a felt directory and you'll find these slides there so svelt is an alternative to other web",
    "start": "48079",
    "end": "55520"
  },
  {
    "start": "53000",
    "end": "142000"
  },
  {
    "text": "frameworks you might be familiar with like react and view and angular but one thing that makes it really different is",
    "start": "55520",
    "end": "60879"
  },
  {
    "text": "that it's a compiler not a runtime library and what that means is that it you write your components in files with",
    "start": "60879",
    "end": "68320"
  },
  {
    "text": "a dot svelt extension and they get compiled into javascript",
    "start": "68320",
    "end": "73840"
  },
  {
    "text": "and so there's a lot of benefits to that that i'll be talking about in just a bit but svelt doesn't have any",
    "start": "73840",
    "end": "80320"
  },
  {
    "text": "dependencies it only has dev dependencies some kind of developer tooling that's because everything you need in",
    "start": "80320",
    "end": "86640"
  },
  {
    "text": "your app gets compiled into javascript going along with that it doesn't use a virtual dom so other",
    "start": "86640",
    "end": "92960"
  },
  {
    "text": "frameworks like react and view use a virtual dom and that can be really inefficient and",
    "start": "92960",
    "end": "99520"
  },
  {
    "text": "it just isn't necessary if you use this compiler approach so rich harris who created svelt did a",
    "start": "99520",
    "end": "106000"
  },
  {
    "text": "talk called rethinking reactivity where he goes into quite a bit of detail on why",
    "start": "106000",
    "end": "111439"
  },
  {
    "text": "the virtual dom is uh unnecessarily expensive in terms of code size and the time to do diffing of",
    "start": "111439",
    "end": "119280"
  },
  {
    "text": "the virtual dome so i recommend checking out that talk so rich harris he used to work at the",
    "start": "119280",
    "end": "124880"
  },
  {
    "text": "guardian now he works at the new york times and he's got quite a lot of experience in creating open source libraries he created the raptive",
    "start": "124880",
    "end": "131680"
  },
  {
    "text": "framework which as far as i know is still in use at the guardian he also created the roll-up module",
    "start": "131680",
    "end": "137200"
  },
  {
    "text": "bundler so he's got a lot of experience in the open source world so",
    "start": "137200",
    "end": "142319"
  },
  {
    "start": "142000",
    "end": "390000"
  },
  {
    "text": "uh sveltkit is a framework that builds on top of svelt and there was an earlier framework",
    "start": "142319",
    "end": "149120"
  },
  {
    "text": "called sapper that i talk about in my book sveltkit replaces that",
    "start": "149120",
    "end": "154239"
  },
  {
    "text": "most of the concepts are the same names of some things have been changed the implementation has been improved",
    "start": "154239",
    "end": "160400"
  },
  {
    "text": "and spelt kit is in beta right now but i do want to tell you about some of the things coming there",
    "start": "160400",
    "end": "166720"
  },
  {
    "text": "so when you create an application in svelt you don't get a setup of page routing",
    "start": "166720",
    "end": "172959"
  },
  {
    "text": "out of the box to make it so when the users go to different urls they go to different pages in your app",
    "start": "172959",
    "end": "178720"
  },
  {
    "text": "and there are many ways that you can set that up and my book talks about a lot of those but stealth kit makes",
    "start": "178720",
    "end": "184080"
  },
  {
    "text": "that much easier by giving you file based page routing and what that means is that you just",
    "start": "184080",
    "end": "189200"
  },
  {
    "text": "drop your svelt components into a certain directory the ones that you want to treat as pages",
    "start": "189200",
    "end": "194640"
  },
  {
    "text": "of your app and they are automatically treated as routes so that if you add slash in the name of that component",
    "start": "194640",
    "end": "202159"
  },
  {
    "text": "to your url it navigates to that component similarly it's really easy to implement rest",
    "start": "202159",
    "end": "208879"
  },
  {
    "text": "services in selpkit you just put a javascript file in a certain directory",
    "start": "208879",
    "end": "214159"
  },
  {
    "text": "it picks up the name of that file or the name of the subdirectory as the route to that rest service and",
    "start": "214159",
    "end": "220799"
  },
  {
    "text": "then you just write functions like get and put and post and delete and that turns into your rest",
    "start": "220799",
    "end": "227599"
  },
  {
    "text": "services now you don't have to take advantage of that if you want to implement rest services using some other tech stack",
    "start": "227599",
    "end": "234159"
  },
  {
    "text": "maybe you want to write them in go or java or c-sharp you can still do that",
    "start": "234159",
    "end": "239360"
  },
  {
    "text": "but if you're open to implementing the rest services with node.js it can be part of this one",
    "start": "239360",
    "end": "244560"
  },
  {
    "text": "spelt kit app spell kit gives you layouts and that means that you can specify that all the pages in my app have a",
    "start": "244560",
    "end": "251680"
  },
  {
    "text": "common header footer maybe a left nav but then that main area is where i want to display the content of each page",
    "start": "251680",
    "end": "258880"
  },
  {
    "text": "if something goes wrong in the app there's a common error page that can be displayed for users",
    "start": "258880",
    "end": "264720"
  },
  {
    "text": "spell kit gives you code splitting for javascript and css and what that means is that with most frameworks you're",
    "start": "264720",
    "end": "271280"
  },
  {
    "text": "bundling the whole thing into one ball of javascript that has to get downloaded before the app",
    "start": "271280",
    "end": "277280"
  },
  {
    "text": "begins but with this code splitting it can make it so that when you hit the first page of your app",
    "start": "277280",
    "end": "283199"
  },
  {
    "text": "you're only downloading the javascript and css needed for that one page and then when you visit the next page",
    "start": "283199",
    "end": "288800"
  },
  {
    "text": "it'll download what is needed for that one and so the whole experience is faster for users because they're only pulling",
    "start": "288800",
    "end": "295040"
  },
  {
    "text": "down the parts that they actually need still kit provides hot module reloading",
    "start": "295040",
    "end": "300400"
  },
  {
    "text": "which is great for iterative development it makes it so that when you save a change to a component all it",
    "start": "300400",
    "end": "307120"
  },
  {
    "text": "needs to do is compile that component and reload its javascript it doesn't have to take the time to rebundle the",
    "start": "307120",
    "end": "313759"
  },
  {
    "text": "whole application and download it to the browser again it also provides static pages and sites",
    "start": "313759",
    "end": "321199"
  },
  {
    "text": "so you could say this whole site is static so add build time generate html for the",
    "start": "321199",
    "end": "327199"
  },
  {
    "text": "whole thing or only certain pages are static and generate html for those",
    "start": "327199",
    "end": "333360"
  },
  {
    "text": "then stealth kit sets up a lot of tooling for you and i won't spend much time talking about this but it's",
    "start": "333360",
    "end": "338400"
  },
  {
    "text": "basically letting you use typescript if you want to using a css processor if you'd like to setting up",
    "start": "338400",
    "end": "345600"
  },
  {
    "text": "eslint for checking for issues in your code and setting up prettier for formatting your code and then the last thing i want to",
    "start": "345600",
    "end": "352080"
  },
  {
    "text": "mention is the use of adapters so sveltkit bills itself as a serverless",
    "start": "352080",
    "end": "357440"
  },
  {
    "text": "first platform and what they mean by that is they want to make it really easy for you to deploy the backend functionality of",
    "start": "357440",
    "end": "364319"
  },
  {
    "text": "your app as serverless functions and so this ties into those file-based endpoints that i",
    "start": "364319",
    "end": "369840"
  },
  {
    "text": "talked about earlier where i'm just writing simple functions like get and post and then if i say i want to use a",
    "start": "369840",
    "end": "377440"
  },
  {
    "text": "adapter like netlify or bracel then when i deploy my app it's going to deploy those functions as",
    "start": "377440",
    "end": "384000"
  },
  {
    "text": "serverless functions for me without me having to understand all the details of that",
    "start": "384000",
    "end": "390160"
  },
  {
    "start": "390000",
    "end": "427000"
  },
  {
    "text": "so if i want to get started with felt kit i can create a new project by running npm init spelt at next",
    "start": "390160",
    "end": "397199"
  },
  {
    "text": "and then give it the name of my project it's going to ask me some questions like do i want to use typescript do i want to",
    "start": "397199",
    "end": "403039"
  },
  {
    "text": "use a css preprocessor do i want eslint and prettier and then it'll set up everything for me",
    "start": "403039",
    "end": "410000"
  },
  {
    "text": "all of those boxes on the right are just my recommendations for how i like to configure those tools but that's totally",
    "start": "410000",
    "end": "416319"
  },
  {
    "text": "up to you how you'd like to do that then you just cd into the directory of your project and run an npm",
    "start": "416319",
    "end": "422560"
  },
  {
    "text": "install and now you're ready to run the app so to run it you can enter npm run dev",
    "start": "422560",
    "end": "429199"
  },
  {
    "start": "427000",
    "end": "472000"
  },
  {
    "text": "and you're running in development mode where it gives you watch and live reload so it's watching to see",
    "start": "429199",
    "end": "434639"
  },
  {
    "text": "if you make changes to any of the files like the components and then if you do it'll compile those",
    "start": "434639",
    "end": "440800"
  },
  {
    "text": "and then live reload those changes into the browser if you want you can tell that command to",
    "start": "440800",
    "end": "446319"
  },
  {
    "text": "open the app in your default web browser so that you don't have to go to the browser yourself and type in localhost",
    "start": "446319",
    "end": "452560"
  },
  {
    "text": "3000 and you can also tell it to run on a different porch then once the app is",
    "start": "452560",
    "end": "457680"
  },
  {
    "text": "running correctly and you want to deploy it you can do an npm build and it will populate the build directory with the",
    "start": "457680",
    "end": "463440"
  },
  {
    "text": "files that you need to deploy and if you want to check for issues in the code npm run lint and if you want to",
    "start": "463440",
    "end": "468960"
  },
  {
    "text": "format the code npm run format so with all that background behind us",
    "start": "468960",
    "end": "474720"
  },
  {
    "start": "472000",
    "end": "1372000"
  },
  {
    "text": "let's walk through a sample app and i want to go through the to do app i know it's kind of a old thing that",
    "start": "474720",
    "end": "481360"
  },
  {
    "text": "we're used to seeing but i think it's useful because you already know what the functionality is and you can compare it to an",
    "start": "481360",
    "end": "487199"
  },
  {
    "text": "implementation that you've seen with other frameworks so you can find this code at the github repo there i have two repos",
    "start": "487199",
    "end": "494000"
  },
  {
    "text": "listed the second one is a work in progress where i'm taking this to an extreme and",
    "start": "494000",
    "end": "500240"
  },
  {
    "text": "tying into a database and adding user authentication and all those kind of things so for now we're just focusing",
    "start": "500240",
    "end": "506639"
  },
  {
    "text": "on the first part of this and i'm going to jump out to my web browser and demonstrate this really",
    "start": "506639",
    "end": "512080"
  },
  {
    "text": "quickly so here's what we're trying to build and i can type in a to-do item like",
    "start": "512080",
    "end": "517839"
  },
  {
    "text": "get milk and it adds that for me and i can select that to say that that",
    "start": "517839",
    "end": "523919"
  },
  {
    "text": "task is done and then if i want to clear out all the ones that are done i can click this",
    "start": "523919",
    "end": "528959"
  },
  {
    "text": "archive completed button and those are going to go away okay and uh i could just delete a task",
    "start": "528959",
    "end": "536240"
  },
  {
    "text": "and notice the animation that's happening here it's kind of subtle but well when i add a new item you can see",
    "start": "536240",
    "end": "542480"
  },
  {
    "text": "it kind of fades into view and the same thing happens if i delete one it's going to fade out of you",
    "start": "542480",
    "end": "549440"
  },
  {
    "text": "okay a little bit subtle but we'll see that in the code coming up here [Music] okay so this app is really made up of",
    "start": "549440",
    "end": "557920"
  },
  {
    "text": "two components there's the part outlined in red which i call the to do component the to do component is a list item and",
    "start": "557920",
    "end": "565920"
  },
  {
    "text": "it has three things inside it a check box the text of the item and then a button for deleting it an",
    "start": "565920",
    "end": "572160"
  },
  {
    "text": "interesting thing about the to do component is that it doesn't know about the whole list of to do's",
    "start": "572160",
    "end": "577600"
  },
  {
    "text": "and so if i say i want to delete it it doesn't really know how to do that however its parent component does the",
    "start": "577600",
    "end": "583920"
  },
  {
    "text": "same thing if i toggle its done state by clicking the check box and so it's going to dispatch events up to its",
    "start": "583920",
    "end": "590560"
  },
  {
    "text": "parent component and let it take care of those kinds of changes the part where it says one of two",
    "start": "590560",
    "end": "596959"
  },
  {
    "text": "remaining that i refer to as the status and you'll see how that gets updated here",
    "start": "596959",
    "end": "603040"
  },
  {
    "text": "so we'll start with the to do component and here's the whole thing on one slide demonstrating a bunch of",
    "start": "603040",
    "end": "609040"
  },
  {
    "text": "felt uh features so the first thing we'll notice here is that the svelt component has three sections to it all these",
    "start": "609040",
    "end": "616079"
  },
  {
    "text": "sections are optional but many components have all three so at the top i've got all of my",
    "start": "616079",
    "end": "621600"
  },
  {
    "text": "javascript code and in the middle i have all the html that i want to render and at the bottom i have all the css for",
    "start": "621600",
    "end": "628480"
  },
  {
    "text": "styling this so starting at the top remember i said that this component",
    "start": "628480",
    "end": "633600"
  },
  {
    "text": "doesn't really know how to delete it the to do or how to toggle its state instead what",
    "start": "633600",
    "end": "639519"
  },
  {
    "text": "i want to do is dispatch an event and so you see those red dispatch calls there in order to use that feature of svelt i",
    "start": "639519",
    "end": "646160"
  },
  {
    "text": "have to import create event dispatcher and then i call that on line four which gives me a dispatch function and",
    "start": "646160",
    "end": "653200"
  },
  {
    "text": "then that's what i'm calling on lines 12 and 15. that animation that i mentioned that's",
    "start": "653200",
    "end": "659200"
  },
  {
    "text": "done with a fade transition so i'm importing that on line three and then i apply it on line eight",
    "start": "659200",
    "end": "665920"
  },
  {
    "text": "and so on line eight what i'm saying is if when that list item enters the dom it should fade into view",
    "start": "665920",
    "end": "672720"
  },
  {
    "text": "and if it leaves the dom it should fade out of you and that's all i have to do to get that special effect line",
    "start": "672720",
    "end": "680720"
  },
  {
    "text": "five is where i'm declaring a prop this is how data comes into components so it's one way that",
    "start": "680720",
    "end": "686800"
  },
  {
    "text": "that can happen so the use of the export keyword there is what makes that a prop okay",
    "start": "686800",
    "end": "694480"
  },
  {
    "text": "and then skipping down to the html inside the list item as i said there are three things there's the check box",
    "start": "694480",
    "end": "700160"
  },
  {
    "text": "there's the text of the to-do and then there's the delete button so that prop coming in on line five is actually an",
    "start": "700160",
    "end": "707040"
  },
  {
    "text": "object that has two well three properties it has a unique id",
    "start": "707040",
    "end": "712079"
  },
  {
    "text": "it has the text of the to do and then it has a done boolean to tell me whether",
    "start": "712079",
    "end": "717120"
  },
  {
    "text": "it's already been completed and so that input on line 9 you see on",
    "start": "717120",
    "end": "722240"
  },
  {
    "text": "line 11 i'm saying the input should already be checked if to do.done is true",
    "start": "722240",
    "end": "728720"
  },
  {
    "text": "and then i have some event handling set up if you change the state of the check box i'm going to dispatch a toggle done",
    "start": "728720",
    "end": "735920"
  },
  {
    "text": "event and we'll see in a bit how the parent component reacts to that",
    "start": "735920",
    "end": "741200"
  },
  {
    "text": "then we have the text of the to do and you see in the middle of that span there's curly braces with to do dot text",
    "start": "741200",
    "end": "748480"
  },
  {
    "text": "so that's called an interpolation that's going to display the text of my to-do",
    "start": "748480",
    "end": "753519"
  },
  {
    "text": "but the other thing i want to do is add a css class to this span and i want it to either be",
    "start": "753519",
    "end": "759680"
  },
  {
    "text": "done dash true or done dash false and you see down in the style section on line 19 i'm telling it that",
    "start": "759680",
    "end": "767200"
  },
  {
    "text": "if this task is done i want the color to be gray and i want to draw a line through the text",
    "start": "767200",
    "end": "773279"
  },
  {
    "text": "so that's the purpose of that css class and then we have the delete button and if you click that i'm going to",
    "start": "773279",
    "end": "779519"
  },
  {
    "text": "dispatch a delete event and the parent component is going to take care of that for me",
    "start": "779519",
    "end": "784959"
  },
  {
    "text": "uh then the styling we've already kind of talked about there's a little bit of a margin above each list item to separate them and then",
    "start": "784959",
    "end": "792320"
  },
  {
    "text": "another interesting point about this is that when you look at this code nowhere in here do you see the name of",
    "start": "792320",
    "end": "798160"
  },
  {
    "text": "the component that i'm defining the file name is to do dots filled but",
    "start": "798160",
    "end": "803519"
  },
  {
    "text": "actually the way this works is when another component wants to use this one and it imports it it can decide at that",
    "start": "803519",
    "end": "810240"
  },
  {
    "text": "point what it wants to call the component and so we'll see that on the next slide when this gets imported all right so",
    "start": "810240",
    "end": "818480"
  },
  {
    "text": "here is my topmost component that represents the entire app and you see the first thing happening in",
    "start": "818480",
    "end": "824480"
  },
  {
    "text": "the script tag is that it imports the to do component everything on this slide is the javascript and then we'll see the",
    "start": "824480",
    "end": "831040"
  },
  {
    "text": "html on the next slide and then the css after that so my to do items have a",
    "start": "831040",
    "end": "837279"
  },
  {
    "text": "unique id and so line four is where i'm setting last id so i can keep track of which",
    "start": "837279",
    "end": "843920"
  },
  {
    "text": "what was the id i used last and then on line five i've got a function for creating a",
    "start": "843920",
    "end": "849040"
  },
  {
    "text": "brand new to do object it's written as an arrow function and i can pass it the text of the to-do",
    "start": "849040",
    "end": "855519"
  },
  {
    "text": "and then optionally tell it if this is already done usually when you create it to do it's",
    "start": "855519",
    "end": "860639"
  },
  {
    "text": "not done yet but if you want you can pass true for that and all i'm doing is",
    "start": "860639",
    "end": "866079"
  },
  {
    "text": "returning an object that has those three properties so the id property gets set to the very",
    "start": "866079",
    "end": "871839"
  },
  {
    "text": "next last id value so there's two things happening there it's incrementing last id",
    "start": "871839",
    "end": "877040"
  },
  {
    "text": "and then i use it as the id of this to do i'm creating then i use the text and i use the done",
    "start": "877040",
    "end": "882959"
  },
  {
    "text": "boolean on line seven i have the variable that's going to hold the text",
    "start": "882959",
    "end": "888959"
  },
  {
    "text": "that the user types in for creating a brand new to do and then lines eight through eleven i'm",
    "start": "888959",
    "end": "894959"
  },
  {
    "text": "creating an array of to do's that i want to exist right away just for demo purposes so",
    "start": "894959",
    "end": "900560"
  },
  {
    "text": "that it doesn't start out empty and so i'll create a to-do for learning svelte and i say that's already",
    "start": "900560",
    "end": "906720"
  },
  {
    "text": "done and then create to do build a svelt app that isn't done yet so an interesting",
    "start": "906720",
    "end": "912720"
  },
  {
    "text": "thing about svilt is that top level variables in a script tag like this they are the state of my component and",
    "start": "912720",
    "end": "920399"
  },
  {
    "text": "what i mean by saying that they're the state is if some of my javascript code changes",
    "start": "920399",
    "end": "925600"
  },
  {
    "text": "those values and i use them in my html it's going to know to update all i have",
    "start": "925600",
    "end": "932079"
  },
  {
    "text": "to do is to change those values so when you compare this to something like say react where you might use the use",
    "start": "932079",
    "end": "938160"
  },
  {
    "text": "state hook i don't have to set up anything like that here i just create a variable",
    "start": "938160",
    "end": "944399"
  },
  {
    "text": "lines 13 and 14 are reactive declarations this is another key feature of svelt that is a bit like",
    "start": "944399",
    "end": "951839"
  },
  {
    "text": "working with spreadsheets so you're probably used to spreadsheets where you put a formula inside a cell that refers",
    "start": "951839",
    "end": "959040"
  },
  {
    "text": "to other cells and you know that if you change the values in those other cells that formula is going to trigger and",
    "start": "959040",
    "end": "965440"
  },
  {
    "text": "recompute the value for the cell that it is in that's kind of what's happening with line 13 and 14.",
    "start": "965440",
    "end": "972079"
  },
  {
    "text": "so just looking at 13 that is saying if the value of to do's which is an",
    "start": "972079",
    "end": "977920"
  },
  {
    "text": "array ever changes we need to run that line again and so the purpose of this line is to",
    "start": "977920",
    "end": "983839"
  },
  {
    "text": "look through all the to do's in the array find all the ones that are not done and then give me the length of that",
    "start": "983839",
    "end": "990160"
  },
  {
    "text": "resulting array and that's my uncompleted count so when is that going to get triggered",
    "start": "990160",
    "end": "996639"
  },
  {
    "text": "well if i check a check box in front of a to do or i uncheck it",
    "start": "996639",
    "end": "1001839"
  },
  {
    "text": "either way i'm going to be changing the to-do's array and it's going to trigger that line 13 to run again",
    "start": "1001839",
    "end": "1007759"
  },
  {
    "text": "and i'll get a new value for uncompleted count line 14 is looking at two things to do's",
    "start": "1007759",
    "end": "1013920"
  },
  {
    "text": "and also the uncompleted count so if either of those change i'm going to compute a new string value",
    "start": "1013920",
    "end": "1019920"
  },
  {
    "text": "for status so that feature reactive declarations",
    "start": "1019920",
    "end": "1025280"
  },
  {
    "text": "saves a lot of lines of code because it's an easy way for you to say hey the value of this variable really",
    "start": "1025280",
    "end": "1032160"
  },
  {
    "text": "depends on the values of some others and so i'm just going to tell you what the relationship is and then you make sure you recompute it",
    "start": "1032160",
    "end": "1039120"
  },
  {
    "text": "when it's necessary then we get into some of the functions that are needed here if i want to add a",
    "start": "1039120",
    "end": "1045120"
  },
  {
    "text": "brand new to do well i'm counting on the value of to do text getting updated when the user types",
    "start": "1045120",
    "end": "1052160"
  },
  {
    "text": "into that input so that should already have a good value i just need to call create to do pass it that text and then",
    "start": "1052160",
    "end": "1060320"
  },
  {
    "text": "i'm going to concatenate that to do onto my array and assign it back to to",
    "start": "1060320",
    "end": "1065679"
  },
  {
    "text": "do's that's kind of an important point here svelt won't know that you've updated an array",
    "start": "1065679",
    "end": "1072480"
  },
  {
    "text": "unless you assign a value to that same variable and i'll touch on that again a bit later also after i've created a",
    "start": "1072480",
    "end": "1079919"
  },
  {
    "text": "brand new to do i want to clear out the the input so you're ready to type in another one and that's why on line 18 i",
    "start": "1079919",
    "end": "1086400"
  },
  {
    "text": "set to do text to an empty string if you click the archive button i'll call",
    "start": "1086400",
    "end": "1092000"
  },
  {
    "text": "archive completed and in a real implementation i would be saving these in a database",
    "start": "1092000",
    "end": "1097360"
  },
  {
    "text": "somewhere but in this simple version i'm really just deleting all of the ones that are",
    "start": "1097360",
    "end": "1102960"
  },
  {
    "text": "done keeping the ones that are not done line 23 i'm deleting a specific to do",
    "start": "1102960",
    "end": "1109919"
  },
  {
    "text": "i'll be past its id and i just need to filter my array of to-do's and say",
    "start": "1109919",
    "end": "1115919"
  },
  {
    "text": "only keep the ones that are not the one i want to delete and then the toggle done function",
    "start": "1115919",
    "end": "1123360"
  },
  {
    "text": "that is going to loop through all of the to do's and say if this is the one with the id that i",
    "start": "1123360",
    "end": "1129520"
  },
  {
    "text": "want to toggle then in the curly braces here the dot dot t says keep all the same properties",
    "start": "1129520",
    "end": "1137919"
  },
  {
    "text": "that were in that to do but i want to change the value of done to be not what it was before but if it's not",
    "start": "1137919",
    "end": "1146080"
  },
  {
    "text": "the one i'm looking to toggle then just keep the whole to-do object so that's a real compact way of writing",
    "start": "1146080",
    "end": "1152160"
  },
  {
    "text": "that so one thing you'll notice about this code is that there's no use of the this keyword",
    "start": "1152160",
    "end": "1157200"
  },
  {
    "text": "anywhere all of this is just plain javascript functions which makes it really easy to write",
    "start": "1157200",
    "end": "1162559"
  },
  {
    "text": "and really easy to understand so this is the javascript portion of our topmost",
    "start": "1162559",
    "end": "1168480"
  },
  {
    "text": "component now we're ready to look at the html and if you can imagine back to that ui that",
    "start": "1168480",
    "end": "1174400"
  },
  {
    "text": "we saw before you'll see all of those pieces here so we've got an h2 tag with to-do list",
    "start": "1174400",
    "end": "1180480"
  },
  {
    "text": "as the header then we had that line where i was displaying the status that would say like one of two completed",
    "start": "1180480",
    "end": "1187120"
  },
  {
    "text": "so that's in the variable status all i have to do is print that string and remember from the previous screen",
    "start": "1187120",
    "end": "1193760"
  },
  {
    "text": "that we're going to recompute that status anytime the uncompleted count changes or the",
    "start": "1193760",
    "end": "1199280"
  },
  {
    "text": "to-do's array changes so if that changes this bit is going to get re-rendered and",
    "start": "1199280",
    "end": "1205200"
  },
  {
    "text": "show me the new status then i've got my button for archiving the completed ones if you click it i",
    "start": "1205200",
    "end": "1211679"
  },
  {
    "text": "call archive completed which we saw in the previous slide then i've got a form where you can enter",
    "start": "1211679",
    "end": "1217760"
  },
  {
    "text": "a new to-do so i've got a text input and then i've got a button that you can click for adding it",
    "start": "1217760",
    "end": "1224720"
  },
  {
    "text": "but notice that this is inside a form which makes it so that if i'm in the input and i type something and i just",
    "start": "1224720",
    "end": "1230960"
  },
  {
    "text": "hit the enter key that's also going to trigger a submit and so up here on the form i'm saying",
    "start": "1230960",
    "end": "1237200"
  },
  {
    "text": "if there's a submit event first i don't want you to do the default thing so prevent the default what i really",
    "start": "1237200",
    "end": "1243760"
  },
  {
    "text": "want to do is call my add to do function which we saw on the previous slide",
    "start": "1243760",
    "end": "1249360"
  },
  {
    "text": "notice that the input has this bind colon value and so that means whatever the",
    "start": "1249360",
    "end": "1255440"
  },
  {
    "text": "value of to do text is now that's what will be displayed in the input and if the user changes the input",
    "start": "1255440",
    "end": "1262080"
  },
  {
    "text": "that's going to update the variable so they're tied together with that bind",
    "start": "1262080",
    "end": "1267919"
  },
  {
    "text": "the button needs to be disabled if the user hasn't typed in any text yet and so",
    "start": "1267919",
    "end": "1273200"
  },
  {
    "text": "this is a simple way to do that it's disabled if not to do text then at the bottom i need",
    "start": "1273200",
    "end": "1279840"
  },
  {
    "text": "to loop through all the to do's in my array so i use pound sign each so this is a mustache style syntax",
    "start": "1279840",
    "end": "1287200"
  },
  {
    "text": "for the markup and so for each of the to do's in the array i want to render a to-do component",
    "start": "1287200",
    "end": "1294000"
  },
  {
    "text": "and i'm passing the to-do into that component as a prop in other frameworks what you would see",
    "start": "1294000",
    "end": "1300400"
  },
  {
    "text": "on line 20 is to do equals curly brace to do curly brace",
    "start": "1300400",
    "end": "1305440"
  },
  {
    "text": "but in svelte there's a shortcut that says if the name of the variable is the same as the name of the prop you",
    "start": "1305440",
    "end": "1311840"
  },
  {
    "text": "don't need to tell me the name of the prop you just put it in curly braces then remember the",
    "start": "1311840",
    "end": "1317280"
  },
  {
    "text": "to do component dispatched some events and this is how i can listen for them this says if the to do component",
    "start": "1317280",
    "end": "1324400"
  },
  {
    "text": "dispatches a delete event then this is what i want to do i want to call delete to do and give it",
    "start": "1324400",
    "end": "1330240"
  },
  {
    "text": "the id of the one to delete and if it dispatches a toggle done event i want to call toggle done",
    "start": "1330240",
    "end": "1336480"
  },
  {
    "text": "and pass it the whole to-do object so very simple for components to communicate back to the",
    "start": "1336480",
    "end": "1343360"
  },
  {
    "text": "parent and by dispatching events those events can even contain custom data if you need to do that",
    "start": "1343360",
    "end": "1351600"
  },
  {
    "text": "the only thing left is the css and there's really not a lot fancy going on here it's mostly just focused on lines 11",
    "start": "1351600",
    "end": "1358559"
  },
  {
    "text": "through 15 where i'm making my unordered list not have bullets in front of the list items",
    "start": "1358559",
    "end": "1366000"
  },
  {
    "text": "okay so that's the whole thing a lot of the features of of svelt that we've seen",
    "start": "1366000",
    "end": "1372080"
  },
  {
    "start": "1372000",
    "end": "1386000"
  },
  {
    "text": "there now in the interest of time there's some things that i need to skip over and this is one of those slides that you might",
    "start": "1372080",
    "end": "1377919"
  },
  {
    "text": "want to check out later but this is just comparing how you implement logic and the markup",
    "start": "1377919",
    "end": "1383039"
  },
  {
    "text": "of different frameworks but this is a concise list of what i",
    "start": "1383039",
    "end": "1388240"
  },
  {
    "start": "1386000",
    "end": "1548000"
  },
  {
    "text": "view as the top features of svelt and so the first thing is that it's very fast and so if you go to that url you",
    "start": "1388240",
    "end": "1395280"
  },
  {
    "text": "can see some benchmarks comparing different frameworks and see just how svelt is compared to",
    "start": "1395280",
    "end": "1401520"
  },
  {
    "text": "the others another feature is really small bundle sizes so when you compile",
    "start": "1401520",
    "end": "1407360"
  },
  {
    "text": "a svelt app to a single javascript file that file is really small compared to",
    "start": "1407360",
    "end": "1413280"
  },
  {
    "text": "the bundles that you get from the other frameworks and the benefit of that is that it loads much faster in the browser",
    "start": "1413280",
    "end": "1420159"
  },
  {
    "text": "self has file based component definitions and what i mean by that is that what defines a component is a",
    "start": "1420159",
    "end": "1427200"
  },
  {
    "text": "dot svelt file with those three sections in it and i'll talk more about the benefits of",
    "start": "1427200",
    "end": "1432320"
  },
  {
    "text": "that in a couple more slides css is scoped by default that means for",
    "start": "1432320",
    "end": "1437600"
  },
  {
    "text": "example in that to do component if i said hey i want the button to have a red background that",
    "start": "1437600",
    "end": "1444080"
  },
  {
    "text": "doesn't mean that all the buttons in the application should be read it's just scoped to that one component",
    "start": "1444080",
    "end": "1451039"
  },
  {
    "text": "but if there's a global css that i want to define i still can do that and svelt gives me a",
    "start": "1451039",
    "end": "1457200"
  },
  {
    "text": "clear place to put that global css svelten has really easy component state",
    "start": "1457200",
    "end": "1463360"
  },
  {
    "text": "management and what i mean by that is the fact that whatever variables i",
    "start": "1463360",
    "end": "1469200"
  },
  {
    "text": "have that are top level in a component that is my state and if i want to change it",
    "start": "1469200",
    "end": "1474480"
  },
  {
    "text": "i just set the variable there's nothing special i need to do and svelte is watching for those",
    "start": "1474480",
    "end": "1480159"
  },
  {
    "text": "variable changes and will update the appropriate parts of the dom for me reactive statements we saw the use of",
    "start": "1480159",
    "end": "1486880"
  },
  {
    "text": "dollar colon and i mentioned how this is kind of like working in a spreadsheet i think that that really cuts down on",
    "start": "1486880",
    "end": "1493120"
  },
  {
    "text": "your code quite a bit makes the components very simple the two-way data binding we saw an example",
    "start": "1493120",
    "end": "1499440"
  },
  {
    "text": "of that in the input where i use bind colon value for an input so i could tie the value of a variable",
    "start": "1499440",
    "end": "1505919"
  },
  {
    "text": "to what the user might type into that input built in animations we saw an example of",
    "start": "1505919",
    "end": "1511919"
  },
  {
    "text": "the fade animation but there are many more built in to svelte and so that really encourages adding animation to your app",
    "start": "1511919",
    "end": "1519279"
  },
  {
    "text": "because it's so easy to do and then the last feature that we haven't actually seen yet is state management across components",
    "start": "1519279",
    "end": "1527200"
  },
  {
    "text": "using stores we need some way that we can store data outside any single component but",
    "start": "1527200",
    "end": "1533200"
  },
  {
    "text": "make it so that multiple components can access that data and if any one of them changes the data",
    "start": "1533200",
    "end": "1539200"
  },
  {
    "text": "the others need to react to that and update based on the change so i'll talk in a bit more detail about",
    "start": "1539200",
    "end": "1545360"
  },
  {
    "text": "that just a little bit here so i mentioned that the smelt gives you",
    "start": "1545360",
    "end": "1551600"
  },
  {
    "start": "1548000",
    "end": "1575000"
  },
  {
    "text": "really small bundle sizes and i don't want to spend too much time on this but there's a url that you can go to there",
    "start": "1551600",
    "end": "1557840"
  },
  {
    "text": "and you can see in the blue boxes pretty drastic difference between the gzip size of a web app across these",
    "start": "1557840",
    "end": "1565679"
  },
  {
    "text": "different frameworks and then the number of lines you'd have to write and this is all implementing the same web application",
    "start": "1565679",
    "end": "1574400"
  },
  {
    "text": "i mentioned that svelt gives you file based components and that just means that there's no kind of javascript",
    "start": "1574400",
    "end": "1580559"
  },
  {
    "start": "1575000",
    "end": "1602000"
  },
  {
    "text": "container that defines a component it's not like angular where you have to write a typescript class",
    "start": "1580559",
    "end": "1586559"
  },
  {
    "text": "or react where you define a component in a function or a class or view where you define an object",
    "start": "1586559",
    "end": "1592960"
  },
  {
    "text": "literal with certain properties with felt it's just a dot stop file",
    "start": "1592960",
    "end": "1598000"
  },
  {
    "text": "that has those three sections in it and i really like that approach i mentioned that the css is scoped by",
    "start": "1598000",
    "end": "1604400"
  },
  {
    "start": "1602000",
    "end": "1612000"
  },
  {
    "text": "default and there's a clear place to put your global css and so this slide summarizes that bit",
    "start": "1604400",
    "end": "1610559"
  },
  {
    "text": "for you but i really want to focus on the next couple of slides and so this one is just hammering away",
    "start": "1610559",
    "end": "1617600"
  },
  {
    "start": "1612000",
    "end": "1714000"
  },
  {
    "text": "on component state management and here i'm focused on just managing state within a single component",
    "start": "1617600",
    "end": "1624799"
  },
  {
    "text": "and this is a really simple example where all i want to do is have a counter component",
    "start": "1624799",
    "end": "1630240"
  },
  {
    "text": "and so i have a piece of state and a variable called count and i have an increment function",
    "start": "1630240",
    "end": "1637760"
  },
  {
    "text": "and you see down below that in my html i'm rendering the count and i have a button and if you click it",
    "start": "1637760",
    "end": "1643600"
  },
  {
    "text": "i'm going to call increment all that does is bump up the count it's just modifying the variable",
    "start": "1643600",
    "end": "1648960"
  },
  {
    "text": "and svelt is going to notice that and re-render the content of that div below the only caveat to this is that",
    "start": "1648960",
    "end": "1656960"
  },
  {
    "text": "when you're updating something like an array if all you do is concatenate or if you push",
    "start": "1656960",
    "end": "1663440"
  },
  {
    "text": "a value on to an array spelt won't notice that you've modified it because it thinks well that array is",
    "start": "1663440",
    "end": "1669600"
  },
  {
    "text": "still pointing to the same address so there are a few ways that you can address this as long as you're assigning",
    "start": "1669600",
    "end": "1675520"
  },
  {
    "text": "back to it svelte is going to notice that and know that it needs to update anything that",
    "start": "1675520",
    "end": "1681520"
  },
  {
    "text": "was using that data but there's a trick at the very bottom that i like to use because",
    "start": "1681520",
    "end": "1686559"
  },
  {
    "text": "if i've got a large array and i make a copy of it that could be expensive so using the",
    "start": "1686559",
    "end": "1693200"
  },
  {
    "text": "trick at the bottom i can push something onto the array and just assign it to itself and when",
    "start": "1693200",
    "end": "1698240"
  },
  {
    "text": "you look at that last line you're thinking well that doesn't do anything but actually this felt compiler sees",
    "start": "1698240",
    "end": "1704000"
  },
  {
    "text": "that and that's a clue to svelt that you actually want it to consider that to be a change",
    "start": "1704000",
    "end": "1710000"
  },
  {
    "text": "so that's kind of an optimization that i take advantage of a lot",
    "start": "1710000",
    "end": "1715039"
  },
  {
    "start": "1714000",
    "end": "1748000"
  },
  {
    "text": "we've been talking about these reactive statements and i've said that if anything you use in that expression changes it's",
    "start": "1715039",
    "end": "1721039"
  },
  {
    "text": "going to rerun that line and you can take advantage of that for debugging like in that console log so that's",
    "start": "1721039",
    "end": "1727440"
  },
  {
    "text": "saying if the value of count changes write it out to the dev tools console again so that's a neat way to do some",
    "start": "1727440",
    "end": "1734399"
  },
  {
    "text": "debugging you can apply that dollar colon to a block of code as well to say i want to re-execute all the",
    "start": "1734399",
    "end": "1741360"
  },
  {
    "text": "lines of code in that block if anything they use changes and you can also put it in front of an if statement",
    "start": "1741360",
    "end": "1748240"
  },
  {
    "start": "1748000",
    "end": "1849000"
  },
  {
    "text": "here's a really interesting example where i'm calculating a home loan and so i have some starting values",
    "start": "1748240",
    "end": "1755679"
  },
  {
    "text": "for an interest rate a loan amount and a number of years and then a bunch of reactive statements",
    "start": "1755679",
    "end": "1761120"
  },
  {
    "text": "that calculate what i need ending up in a payment so notice that if the number of years",
    "start": "1761120",
    "end": "1766720"
  },
  {
    "text": "changes i need to recompute the months and if the months change that's going to",
    "start": "1766720",
    "end": "1771840"
  },
  {
    "text": "trigger this denominator to recompute and if the denominator changes that's going to cause the payment to recompute",
    "start": "1771840",
    "end": "1779039"
  },
  {
    "text": "so once you've got that all set up this is really the entire app you see all of",
    "start": "1779039",
    "end": "1784159"
  },
  {
    "text": "these inputs that have a bind to a variable so if i change the value in the input",
    "start": "1784159",
    "end": "1789919"
  },
  {
    "text": "it's going to change that and because the loan amount is used up here in the payment it will",
    "start": "1789919",
    "end": "1795279"
  },
  {
    "text": "recalculate the payment so let me jump out of here and go over to my browser and demonstrate this",
    "start": "1795279",
    "end": "1803039"
  },
  {
    "text": "so this is running in something called the svelt repel where you can type in code and test it out without even having",
    "start": "1803200",
    "end": "1809440"
  },
  {
    "text": "to download anything and so this is that same example and look at how if i increase the interest rate my monthly",
    "start": "1809440",
    "end": "1816240"
  },
  {
    "text": "payment goes up and if i increase the number of years my monthly payment goes down",
    "start": "1816240",
    "end": "1822559"
  },
  {
    "text": "or if i just change the loan amount it automatically recomputes and this is the entire app all based on",
    "start": "1822559",
    "end": "1830720"
  },
  {
    "text": "the fact that i'm binding to variables with my inputs and i have these reactive",
    "start": "1830720",
    "end": "1835840"
  },
  {
    "text": "statements that know to recompute if anything that you use changes so i think this is a really compelling",
    "start": "1835840",
    "end": "1842000"
  },
  {
    "text": "example to show some of the benefits of silt [Music]",
    "start": "1842000",
    "end": "1847600"
  },
  {
    "text": "okay so stores is the last big topic i want to touch on and so this is a way",
    "start": "1847600",
    "end": "1853440"
  },
  {
    "start": "1849000",
    "end": "1864000"
  },
  {
    "text": "that you can communicate between components and have data that's stored outside any components",
    "start": "1853440",
    "end": "1859279"
  },
  {
    "text": "often i put this in a file called stores.js and there are four kinds of stores you",
    "start": "1859279",
    "end": "1866720"
  },
  {
    "start": "1864000",
    "end": "1885000"
  },
  {
    "text": "can create they can be writable they could be read only derived means that they get data",
    "start": "1866720",
    "end": "1872799"
  },
  {
    "text": "from other stores and combine it in some way and then custom you're just really controlling the api",
    "start": "1872799",
    "end": "1879360"
  },
  {
    "text": "for how you get the data into that store so if i want to create one of these",
    "start": "1879360",
    "end": "1885200"
  },
  {
    "start": "1885000",
    "end": "1951000"
  },
  {
    "text": "writable stores it's as easy as importing the writable function and then i call it and i pass to it the starting",
    "start": "1885200",
    "end": "1892320"
  },
  {
    "text": "value of that store so maybe this is going to be a collection of descriptions of dogs and i start off",
    "start": "1892320",
    "end": "1898080"
  },
  {
    "text": "with no dogs in the collection i could also do it in a more fancy way where i",
    "start": "1898080",
    "end": "1903679"
  },
  {
    "text": "pass it a function that could do something like call a rest service that is pulling data",
    "start": "1903679",
    "end": "1910320"
  },
  {
    "text": "from a database and then when it returns it to me i call the set function",
    "start": "1910320",
    "end": "1915440"
  },
  {
    "text": "and that's how my store got its initial data and then if i want i can return a",
    "start": "1915440",
    "end": "1920640"
  },
  {
    "text": "function that will be called when i'm no longer using this store to clean up okay and so this slide talks about how",
    "start": "1920640",
    "end": "1928399"
  },
  {
    "text": "you can use a store inside one of your components there's a long way and there's a short way and you",
    "start": "1928399",
    "end": "1934159"
  },
  {
    "text": "probably never want to do it the long way so that's the top box here the easy way",
    "start": "1934159",
    "end": "1939360"
  },
  {
    "text": "is that you just import your store so if i flip back to this slide you see that my",
    "start": "1939360",
    "end": "1944960"
  },
  {
    "text": "storage js is exporting this variable called dog store and right here i'm importing that from",
    "start": "1944960",
    "end": "1952720"
  },
  {
    "start": "1951000",
    "end": "1982000"
  },
  {
    "text": "stores.js and now inside my component as long as i refer to it with dollar dog store svelt knows that that",
    "start": "1952720",
    "end": "1960880"
  },
  {
    "text": "refers to a store and if the data in the store changes my component can re-render",
    "start": "1960880",
    "end": "1968000"
  },
  {
    "text": "anything that is using that data and if i change the value of dollar dog store",
    "start": "1968000",
    "end": "1973440"
  },
  {
    "text": "other components can re-render as well so it's a really easy way to set up",
    "start": "1973440",
    "end": "1979600"
  },
  {
    "text": "state for the whole application so some things to consider about using svelt",
    "start": "1979600",
    "end": "1984640"
  },
  {
    "start": "1982000",
    "end": "2043000"
  },
  {
    "text": "popularity well svelth isn't as popular as angular and react and view",
    "start": "1984640",
    "end": "1990799"
  },
  {
    "text": "at the moment so that means that it's not as easy to find developers that already know it",
    "start": "1990799",
    "end": "1996159"
  },
  {
    "text": "however i think it's so easy to learn svelte that i don't see that as a very large barrier to entry of course the other",
    "start": "1996159",
    "end": "2003679"
  },
  {
    "text": "frameworks have been around for longer and so there are more open source libraries for those",
    "start": "2003679",
    "end": "2009279"
  },
  {
    "text": "they're growing for svelt but they're not as many uh yet as there are for the other frameworks and then a last thing i would",
    "start": "2009279",
    "end": "2016080"
  },
  {
    "text": "mention is that when you're using react you might be used to the idea that you can split up a",
    "start": "2016080",
    "end": "2021600"
  },
  {
    "text": "component into a bunch of functions that each return some jsx that are responsible for",
    "start": "2021600",
    "end": "2028960"
  },
  {
    "text": "rendering a part of the component and you can't do anything like that in svelt so that kind of encourages you to split",
    "start": "2028960",
    "end": "2036159"
  },
  {
    "text": "up your components into multiple dots files which has its own pros and cons",
    "start": "2036159",
    "end": "2042799"
  },
  {
    "text": "there are a lot of related tools to svelt and so i have a list of some of those",
    "start": "2042799",
    "end": "2048158"
  },
  {
    "start": "2043000",
    "end": "2083000"
  },
  {
    "text": "here including a vs code extension i mentioned sveltkit which is in beta right now",
    "start": "2048159",
    "end": "2054079"
  },
  {
    "text": "should be out of beta fairly soon there's libraries for writing tests with felt storybook is an",
    "start": "2054079",
    "end": "2061118"
  },
  {
    "text": "excellent tool for testing out your components in kind of an isolated manner and then smelt native can be used to",
    "start": "2061119",
    "end": "2067358"
  },
  {
    "text": "write mobile apps with svelt it's not a ground up new thing it's",
    "start": "2067359",
    "end": "2072398"
  },
  {
    "text": "built on top of native script which is a very mature framework for building mobile apps and you can use that with",
    "start": "2072399",
    "end": "2078720"
  },
  {
    "text": "many frameworks felt being just one of those there's a lot of topics i didn't have time to cover that are covered in detail",
    "start": "2078720",
    "end": "2085919"
  },
  {
    "start": "2083000",
    "end": "2094000"
  },
  {
    "text": "in my book so i encourage you to grab the slides and check out this list and maybe dig into those topics",
    "start": "2085919",
    "end": "2092158"
  },
  {
    "text": "in a bit more detail so earlier i mentioned that talk by rich harris called rethinking",
    "start": "2092159",
    "end": "2097920"
  },
  {
    "start": "2094000",
    "end": "2112000"
  },
  {
    "text": "reactivity i highly recommend finding that talk there's of course this felt home page",
    "start": "2097920",
    "end": "2103200"
  },
  {
    "text": "with all the api documentation and a really nice tutorial it's a web page where you can read up on",
    "start": "2103200",
    "end": "2108560"
  },
  {
    "text": "svelt kit and a few more resources there so my conclusion is that svelt is",
    "start": "2108560",
    "end": "2114480"
  },
  {
    "start": "2112000",
    "end": "2183000"
  },
  {
    "text": "definitely a worthy alternative to the other frameworks for me a big emphasis is developer",
    "start": "2114480",
    "end": "2121119"
  },
  {
    "text": "experience that's the dx on the side here and this is kind of my assessment of the state of things",
    "start": "2121119",
    "end": "2127119"
  },
  {
    "text": "you could write a web application just using the native dom and not using a framework but if you use a framework",
    "start": "2127119",
    "end": "2133280"
  },
  {
    "text": "i think the developer experience is better and so angular certainly improves on that",
    "start": "2133280",
    "end": "2138400"
  },
  {
    "text": "but i think react and view are a big step up over angular in terms of developer",
    "start": "2138400",
    "end": "2143760"
  },
  {
    "text": "experience and i think svelte just takes that even further the user experience is",
    "start": "2143760",
    "end": "2149040"
  },
  {
    "text": "similar for all of these in my view but you might say that svelt has a slight edge because of how",
    "start": "2149040",
    "end": "2155040"
  },
  {
    "text": "easy it is to add animations to an app you might end up delivering a better user experience just because that was so",
    "start": "2155040",
    "end": "2161760"
  },
  {
    "text": "easy to do so i encourage you to check out my books felt and sapper in action and we've got",
    "start": "2161760",
    "end": "2167040"
  },
  {
    "text": "a few minutes left for questions if you have any",
    "start": "2167040",
    "end": "2173839"
  },
  {
    "text": "you",
    "start": "2182640",
    "end": "2184720"
  }
]