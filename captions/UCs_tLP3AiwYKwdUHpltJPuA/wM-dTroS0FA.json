[
  {
    "start": "0",
    "end": "198000"
  },
  {
    "text": "[Music]",
    "start": "960",
    "end": "8889"
  },
  {
    "text": "welcome everyone hope everyone is having a phenomenal Eda day I know I am it's wonderful to see everybody here and in",
    "start": "13620",
    "end": "20220"
  },
  {
    "text": "person and there's been such an amazing lineup of talks so far so wonderful to have you all here",
    "start": "20220",
    "end": "25320"
  },
  {
    "text": "so um I'm super excited to be presenting um and just kind of lining up the talk",
    "start": "25320",
    "end": "31619"
  },
  {
    "text": "here for Charlie who's going to take us all the way through the Cinch Journey with event driven architectures my name",
    "start": "31619",
    "end": "36719"
  },
  {
    "text": "is Emily Shea I lead our application integration go to market team at AWS which includes a lot of the services",
    "start": "36719",
    "end": "42899"
  },
  {
    "text": "that you've probably heard about today eventbridge step functions sqs SNS all those good ones and I just have been",
    "start": "42899",
    "end": "50039"
  },
  {
    "text": "super excited about this story since I first heard it and so I'm really excited to get to kind of unpack it and go into",
    "start": "50039",
    "end": "55500"
  },
  {
    "text": "it today but first off I'm going to start off just with a couple of the kind of key Concepts and some of the background kind of Concepts to",
    "start": "55500",
    "end": "62280"
  },
  {
    "text": "understand as we get into it before I hand over to Tully",
    "start": "62280",
    "end": "66798"
  },
  {
    "text": "so there are a bazillion talks out there that talk about your application's code",
    "start": "68280",
    "end": "73640"
  },
  {
    "text": "writing the code testing the code deploying the code we focus a ton on the code but a question that I want to pose",
    "start": "73640",
    "end": "80340"
  },
  {
    "text": "to you today is what do you think about deleting code throwing it away starting over with",
    "start": "80340",
    "end": "86100"
  },
  {
    "text": "something new I think this is a really fundamental part of being able to experiment and be agile in the",
    "start": "86100",
    "end": "91500"
  },
  {
    "text": "applications that we're building and so many people that we talk to are just really they hold tight to that code that",
    "start": "91500",
    "end": "96960"
  },
  {
    "text": "they have today and maybe give up opportunities to try something new",
    "start": "96960",
    "end": "102438"
  },
  {
    "text": "so the reason that we want to hold tight to our code and we have this reflex of I've built this I want to keep kind of",
    "start": "103259",
    "end": "108360"
  },
  {
    "text": "maintaining it and working on it is because building a new feature and writing that code takes a lot of energy",
    "start": "108360",
    "end": "114420"
  },
  {
    "text": "um you need to to spin up that infrastructure you need to write any kind of Integrations or connect that uh",
    "start": "114420",
    "end": "119640"
  },
  {
    "text": "that piece of code that you're writing to the other pieces of code within your application another huge piece of it is just",
    "start": "119640",
    "end": "125219"
  },
  {
    "text": "coordinating with other teams so maybe there's other teams that are working on related microservices and you need to make sure that your changes aren't going",
    "start": "125219",
    "end": "131400"
  },
  {
    "text": "to impact them or that they've haven't made changes to their maybe apis and you need to coordinate around those so",
    "start": "131400",
    "end": "137340"
  },
  {
    "text": "that's a huge piece of it and then lastly you finally get down to the piece that you really intended to set out to do which was write the",
    "start": "137340",
    "end": "143760"
  },
  {
    "text": "business logic and actually deploy the feature so a lot of that work is going into just getting any new feature out and so it",
    "start": "143760",
    "end": "149280"
  },
  {
    "text": "makes total sense that we're kind of concerned about deleting any code and being able to start over and try something new",
    "start": "149280",
    "end": "156440"
  },
  {
    "text": "so when I'm talking to customers today I find that a ton of time is being spent on operating and maintaining the",
    "start": "157440",
    "end": "164580"
  },
  {
    "text": "existing code that we have and that really limits the amount of time they're able to experiment and have the kind of agile responsiveness to customer",
    "start": "164580",
    "end": "170819"
  },
  {
    "text": "requests that you'd like to have at AWS with the services and the products that we're building our goal is",
    "start": "170819",
    "end": "176580"
  },
  {
    "text": "to take you take us all into a world in which the only code that we're writing is that business logic and getting features out the door",
    "start": "176580",
    "end": "183980"
  },
  {
    "text": "and the way that we think is is super helpful to be able to do that is with serverless services and event-driven architectures this really whittles down",
    "start": "184560",
    "end": "190980"
  },
  {
    "text": "that list of things that need to go into a new feature develop being developed and leaves you with just the business logic piece",
    "start": "190980",
    "end": "198260"
  },
  {
    "start": "198000",
    "end": "419000"
  },
  {
    "text": "so quick recap of what is serverless serverless services are all about just uploading your code never touching or",
    "start": "198900",
    "end": "204659"
  },
  {
    "text": "managing the underlying infrastructure behind those that infrastructure will scale up and down as traffic changes and",
    "start": "204659",
    "end": "210659"
  },
  {
    "text": "lastly a ton of managed Integrations and manage functionality that's built into those that you're not needing to code",
    "start": "210659",
    "end": "216060"
  },
  {
    "text": "yourself so what are some of the things that you're going to have built into",
    "start": "216060",
    "end": "221159"
  },
  {
    "text": "serverless Services uh thinking about connections between Services maybe it's invoking a Lambda function or sending an",
    "start": "221159",
    "end": "226980"
  },
  {
    "text": "eventbridge event to another service a lot of those are going to be built into Services right out of the box another amazing thing is that there's",
    "start": "226980",
    "end": "233280"
  },
  {
    "text": "hundreds of ABS services that emit events by default so if you're building an event driven architecture uh if you",
    "start": "233280",
    "end": "239159"
  },
  {
    "text": "were in kind of a traditional environment you might have to admit those events yourself versus just responding to them coming out of the AWS",
    "start": "239159",
    "end": "245099"
  },
  {
    "text": "Services automatically uh there's also a lot of cool stuff that comes into Services when we think about",
    "start": "245099",
    "end": "251099"
  },
  {
    "text": "for example step functions and having that retry logic and error handling built in and not needing to build that",
    "start": "251099",
    "end": "256919"
  },
  {
    "text": "yourself and also with step functions has a lot of SDK Integrations that will make API",
    "start": "256919",
    "end": "262560"
  },
  {
    "text": "calls for you to different AWS Services um and so that and again limits the amount of code that you're having to",
    "start": "262560",
    "end": "268380"
  },
  {
    "text": "write to test and maintain over time so there's a lot of things that you're kind of getting built into the services",
    "start": "268380",
    "end": "273600"
  },
  {
    "text": "that you're not needing to to write yourself so we've talked a little bit about the",
    "start": "273600",
    "end": "279720"
  },
  {
    "text": "serverless piece just some of the benefits that we're seeing customers have as they're building event driven",
    "start": "279720",
    "end": "285240"
  },
  {
    "text": "architectures if we take a typical microservice application as an example maybe this is an e-commerce app with",
    "start": "285240",
    "end": "291240"
  },
  {
    "text": "order inventory search a lot of different kind of common components we see but when we look at this application",
    "start": "291240",
    "end": "296820"
  },
  {
    "text": "again Gregor told us to remember the lines that go between those boxes that really Define how it interacts",
    "start": "296820",
    "end": "302699"
  },
  {
    "text": "you'll oftentimes see this so loads of direct connections loads of different kind of uh connections that need to be",
    "start": "302699",
    "end": "308880"
  },
  {
    "text": "written between different services and that is a lot of kind of complexity that suddenly is uh happening within this",
    "start": "308880",
    "end": "314160"
  },
  {
    "text": "microservice application one of the challenges with this is say",
    "start": "314160",
    "end": "319440"
  },
  {
    "text": "that one of those Services has a new idea or a bug fix that they're desperate to get out and they really want to they",
    "start": "319440",
    "end": "325259"
  },
  {
    "text": "have the code already written and they're ready to launch it the problem is is that they first need",
    "start": "325259",
    "end": "330960"
  },
  {
    "text": "to coordinate with all of the teams that they have those direct connections with uh to be able to launch it and make sure that it's deployed safely and there's no",
    "start": "330960",
    "end": "337259"
  },
  {
    "text": "risk involved with that launch and that can take a lot of time and have developers kind of stepping on each one of those toes as they're trying to get",
    "start": "337259",
    "end": "342720"
  },
  {
    "text": "something out with an adventure of an architecture what we do is we take those kind of",
    "start": "342720",
    "end": "349860"
  },
  {
    "text": "direct connections away and put an event broker in the middle and now you've got a kind of centralized location for all",
    "start": "349860",
    "end": "355139"
  },
  {
    "text": "of these services to be communicating now the services are only needing to be aware of the event broker and maybe the",
    "start": "355139",
    "end": "360479"
  },
  {
    "text": "event schema or what's in those events that are being sent and they're able to kind of free up that that time and that",
    "start": "360479",
    "end": "365639"
  },
  {
    "text": "energy to just focus on the features that they're they themselves are developing",
    "start": "365639",
    "end": "370580"
  },
  {
    "text": "another really cool thing about this is say that you have a new service idea using those existing events you can",
    "start": "370979",
    "end": "376680"
  },
  {
    "text": "build that right on top of those existing events so no need to change any of the other services or really mess",
    "start": "376680",
    "end": "382080"
  },
  {
    "text": "around with those at all just build brand new features on top of existing events um and those can be kind of completely",
    "start": "382080",
    "end": "387660"
  },
  {
    "text": "their own development project so the core benefits that we see with",
    "start": "387660",
    "end": "394020"
  },
  {
    "text": "customers that are building serverless and event driven architectures are the ability to decouple teams not have teams",
    "start": "394020",
    "end": "399780"
  },
  {
    "text": "needing to coordinate closely with another before launching something freeing up that ability to experiment",
    "start": "399780",
    "end": "405060"
  },
  {
    "text": "and so losing that kind of need to hold on and not be able to delete any code and instead be able to try new things",
    "start": "405060",
    "end": "411000"
  },
  {
    "text": "all the time and then fundamentally all these things come together to allow you to build features faster and get them out to your",
    "start": "411000",
    "end": "416759"
  },
  {
    "text": "end customers and cinch is an amazing example of That So for anybody that's not familiar with",
    "start": "416759",
    "end": "423600"
  },
  {
    "start": "419000",
    "end": "697000"
  },
  {
    "text": "cinch hasn't seen the taxis driving by or the Billboards all over the place they launched in October of 2020.",
    "start": "423600",
    "end": "429419"
  },
  {
    "text": "they're a fully digital used car e-commerce site lots of different features like home delivery payment",
    "start": "429419",
    "end": "434940"
  },
  {
    "text": "financing part exchange all those different components built into the e-commerce application",
    "start": "434940",
    "end": "440819"
  },
  {
    "text": "foreign and the amazing thing about this platform is that it was really built in",
    "start": "440819",
    "end": "446160"
  },
  {
    "text": "and launched in just six months and the team and tally will tell you that a huge part of that was the serverless and",
    "start": "446160",
    "end": "451380"
  },
  {
    "text": "event driven architecture that's behind it uh so some of the amazing things they were able to achieve uh the scalability",
    "start": "451380",
    "end": "456599"
  },
  {
    "text": "of the platform with the request exceeding 1 million per minute and actually latency going down is the late",
    "start": "456599",
    "end": "461699"
  },
  {
    "text": "as the load increased the application also moving from from a kubernetes-based environment to serverless Services",
    "start": "461699",
    "end": "467639"
  },
  {
    "text": "reduce the total cost by about 30 percent um and then hugely that agility piece that we've been talking about about",
    "start": "467639",
    "end": "473460"
  },
  {
    "text": "teams be able to move so much faster and own the entire stack for the microservice that they're working on",
    "start": "473460",
    "end": "478800"
  },
  {
    "text": "um and finally I think the really cool thing is that all of this kind of agility and ability to experiment really",
    "start": "478800",
    "end": "483960"
  },
  {
    "text": "accelerated the business's growth um allowing them to achieve 10x conversion rate of people coming to the",
    "start": "483960",
    "end": "489120"
  },
  {
    "text": "site and making a purchase in just the first 12 months of the platform",
    "start": "489120",
    "end": "493639"
  },
  {
    "text": "so with that intro I'd love to welcome up Tully to take us through their Journey",
    "start": "494699",
    "end": "499740"
  },
  {
    "text": "okay [Applause]",
    "start": "499740",
    "end": "505139"
  },
  {
    "text": "right uh thank you thanks Emily um when when Emily reached out the first time to",
    "start": "505139",
    "end": "510780"
  },
  {
    "text": "say would you like to ask us would you like to tell us in the story I was very excited and very happy about this because we we went through a journey",
    "start": "510780",
    "end": "517860"
  },
  {
    "text": "um that was very steep learning curve very aggressive deadlines and we had a lot of learnings and what I'm trying to",
    "start": "517860",
    "end": "523919"
  },
  {
    "text": "what I'm going to try and do today is uh try and confirm a bit of the stuff that Emily's talked about and give give you",
    "start": "523919",
    "end": "531240"
  },
  {
    "text": "guys our experience on this so first of all hello my um engineering practice lead at",
    "start": "531240",
    "end": "537060"
  },
  {
    "text": "cinch what that means is I work with teams to continuously help them to help them continuously improve the",
    "start": "537060",
    "end": "542640"
  },
  {
    "text": "engineering practices especially with a devops mindset and a bit of a focus on observability",
    "start": "542640",
    "end": "548399"
  },
  {
    "text": "um so I'm half British half Greek specifically Jody basically County Durham",
    "start": "548399",
    "end": "554040"
  },
  {
    "text": "that's a bit of a middle ground I don't know if anyone's anyone from County Durham here",
    "start": "554040",
    "end": "559200"
  },
  {
    "text": "no okay good so you're not Malcolm you're not Geordie something in the tune anyway",
    "start": "559200",
    "end": "564480"
  },
  {
    "text": "um I started out in maths and mathematical physics and I got into software um a bit later on and I played",
    "start": "564480",
    "end": "570600"
  },
  {
    "text": "basketball professionally and I since I stopped all that I'm I'm doing a lot of",
    "start": "570600",
    "end": "575700"
  },
  {
    "text": "yoga so that's about me I got into software by being hired as a mathematician to solve the right",
    "start": "575700",
    "end": "581700"
  },
  {
    "text": "algorithms and for a shadowing system and I learned to become a software",
    "start": "581700",
    "end": "588300"
  },
  {
    "text": "engineer over the years and I've been a software engineer well I've been building software for the last 10 years so",
    "start": "588300",
    "end": "595380"
  },
  {
    "text": "why am I saying this well when we first started this was this was cinch",
    "start": "595380",
    "end": "600420"
  },
  {
    "text": "in one room the entirety of cinch and I'm I'm there uh luckily not wearing the same stuff",
    "start": "600420",
    "end": "606360"
  },
  {
    "text": "same same top but that was literally everyone towards the end of 2019 and we",
    "start": "606360",
    "end": "611580"
  },
  {
    "text": "were starting to build a team in Manchester the challenge we had was can we deliver",
    "start": "611580",
    "end": "617339"
  },
  {
    "text": "an e-commerce platform that Emily was talking about in more or less six months when we say six months in April that's",
    "start": "617339",
    "end": "623640"
  },
  {
    "text": "that's who we were we didn't have more people so we were actually hiring people as well and we want to deliver in",
    "start": "623640",
    "end": "629399"
  },
  {
    "text": "September remember in heavy lockdown in the pandemic and all this but we didn't want to just deliver and",
    "start": "629399",
    "end": "635459"
  },
  {
    "text": "then forget we wanted to deliver and then accelerate that was very very important so we wanted to still",
    "start": "635459",
    "end": "640740"
  },
  {
    "text": "um use the same architecture we didn't want to want to kind of necessarily throw everything away",
    "start": "640740",
    "end": "646260"
  },
  {
    "text": "um so fast forward to 2032 we're still evolving with existing architecture",
    "start": "646260",
    "end": "652380"
  },
  {
    "text": "so we had three considerations to start with we're going into an industry the automotive industry when we want to",
    "start": "652380",
    "end": "657540"
  },
  {
    "text": "disrupt it and we want to we make a digital experience that's very different to what we had up till then",
    "start": "657540",
    "end": "663180"
  },
  {
    "text": "and how do we do it when they have different different Tech stack different engineering practices and how do we",
    "start": "663180",
    "end": "668519"
  },
  {
    "text": "integrate with these without affecting our customers how do we build momentum but then keep",
    "start": "668519",
    "end": "674399"
  },
  {
    "text": "that momentum very important and how do we avoid building stuff that we don't really need that that was",
    "start": "674399",
    "end": "681060"
  },
  {
    "text": "probably something our biggest realization wants to be hyper focused on products how can we make a great product",
    "start": "681060",
    "end": "687480"
  },
  {
    "text": "so for that spoiler alerts we chose AWS serverless and event driven architecture and to satisfy those three",
    "start": "687480",
    "end": "694380"
  },
  {
    "text": "considerations that we had early on first question why serverless Emily said",
    "start": "694380",
    "end": "700079"
  },
  {
    "start": "697000",
    "end": "752000"
  },
  {
    "text": "some talked about some of the benefits of serverless but we looked at what you might want to care",
    "start": "700079",
    "end": "705480"
  },
  {
    "text": "about and we actually inherited a heavily containerized platform in the form of kubernetes and Docker everything",
    "start": "705480",
    "end": "711600"
  },
  {
    "text": "was document containers and it's perfectly fine really good system built by an agency but we didn't want to do any of that we didn't want to care about",
    "start": "711600",
    "end": "718079"
  },
  {
    "text": "kubernetes clusters we just wanted to think about our application",
    "start": "718079",
    "end": "723360"
  },
  {
    "text": "and the reason for that is because if you think about what you might care about you might care about fault tolerance security",
    "start": "723360",
    "end": "728459"
  },
  {
    "text": "scalability these kind of things we want to Outsource all of that to AWS",
    "start": "728459",
    "end": "733980"
  },
  {
    "text": "happily and they can maintain it they can think about all the scalability and we just focus on using the platform we",
    "start": "733980",
    "end": "740640"
  },
  {
    "text": "just wanted to use so we chose serverless for that because we just wanted to use the platform we didn't want to",
    "start": "740640",
    "end": "746100"
  },
  {
    "text": "um be thinking about things that would distract us from our goal",
    "start": "746100",
    "end": "752000"
  },
  {
    "start": "752000",
    "end": "802000"
  },
  {
    "text": "second question why event driven um",
    "start": "752579",
    "end": "757680"
  },
  {
    "text": "so if you think about there's many benefits for event driven and I'm going to call them event driven",
    "start": "757680",
    "end": "763380"
  },
  {
    "text": "um but with apis you have a commitment you have a contract that you're going to have a",
    "start": "763380",
    "end": "768899"
  },
  {
    "text": "performance that it's going to be generally up that it's going to respond in a timely manner and you also have as",
    "start": "768899",
    "end": "774720"
  },
  {
    "text": "an Enterprise interface contract so you think about rest apis they don't break that you you kind of commit to that so your consumers",
    "start": "774720",
    "end": "781320"
  },
  {
    "text": "can use them with events you Outsource the performance SLA again to AWS",
    "start": "781320",
    "end": "786720"
  },
  {
    "text": "in the form of eventbridge or serverless and you don't care they handle that and you own the only",
    "start": "786720",
    "end": "793260"
  },
  {
    "text": "thing you care about is the interface SLA so the in this case eventbridge event so hopefully that makes sense",
    "start": "793260",
    "end": "800040"
  },
  {
    "text": "um just to kind of um one thing that I want to maybe do today is from uh from from the keynote",
    "start": "800040",
    "end": "807899"
  },
  {
    "start": "802000",
    "end": "1036000"
  },
  {
    "text": "there were some questions posed and hopefully we can answer some of those questions even even if his is loosely",
    "start": "807899",
    "end": "814620"
  },
  {
    "text": "so the thing I'm going to go through is what what do our systems look like what are the teams what's the tech stocks so",
    "start": "814620",
    "end": "820860"
  },
  {
    "text": "we can get context and then the the critical bit is about what patterns emerge and how we evolved from those",
    "start": "820860",
    "end": "827459"
  },
  {
    "text": "patterns so first of all systems teams and Tech stack the thing about the user journey",
    "start": "827459",
    "end": "834839"
  },
  {
    "text": "of a carbine platform you need to search for a car you need to pay it or apply for finance you need to order you need",
    "start": "834839",
    "end": "841440"
  },
  {
    "text": "to deliver a vehicle at their home and you need to do some post-order stuff but also critically you need an inventory of",
    "start": "841440",
    "end": "848100"
  },
  {
    "text": "cars because otherwise you can't sell cars right and we put we start building a teams",
    "start": "848100",
    "end": "853380"
  },
  {
    "text": "cross-functional teams behind each of these systems that's the first thing we did in 2020 we started building that",
    "start": "853380",
    "end": "859320"
  },
  {
    "text": "that April 2020 that I was talking about that's what we started doing and we used",
    "start": "859320",
    "end": "864480"
  },
  {
    "text": "um as we alluded to serverless so Lambda specifically node.js we use cdk we",
    "start": "864480",
    "end": "870060"
  },
  {
    "text": "actually use serverless framework first and but then when cdk became more mature we quickly adopted that and we chose",
    "start": "870060",
    "end": "877320"
  },
  {
    "text": "typescript because our front end was already typescript and that made loads of sense to have the same language",
    "start": "877320",
    "end": "882779"
  },
  {
    "text": "across all Stacks front-end back-end and infrastructure use dynamodb for our storage and this is",
    "start": "882779",
    "end": "891120"
  },
  {
    "text": "a link to a couple of blog posts that we use from Adrian hesketh which was from",
    "start": "891120",
    "end": "896880"
  },
  {
    "text": "in Print Works which was our kind of partner consultant it helped us a lot with Skilling Us opening expertise and",
    "start": "896880",
    "end": "903540"
  },
  {
    "text": "giving us the initial patterns I'm not going to talk about this too much but it's worth mentioning it",
    "start": "903540",
    "end": "909839"
  },
  {
    "text": "eventbridge I think uh launched in 2019 we started thinking about since in 2019",
    "start": "909839",
    "end": "915300"
  },
  {
    "text": "so it was kind of a match made in heaven we thought okay we'll do this um we're going all in with the",
    "start": "915300",
    "end": "921120"
  },
  {
    "text": "serverless event broker and finally it's worth mentioning that we use sqs I'm not going to go through it too much",
    "start": "921120",
    "end": "927660"
  },
  {
    "text": "but three things we kind of more or less use it for dead letter cues",
    "start": "927660",
    "end": "933860"
  },
  {
    "text": "yes because Brits love the queue and I'm bitter so I can I can do that I can I",
    "start": "935699",
    "end": "941760"
  },
  {
    "text": "can do some humor there and buffering data on First and first out and exactly once delivery which there's some nuances",
    "start": "941760",
    "end": "947339"
  },
  {
    "text": "for that again we'll get into it but it's worth mentioning it so what's the time well",
    "start": "947339",
    "end": "953820"
  },
  {
    "text": "um we have a collection of lambdas that um that",
    "start": "953820",
    "end": "958920"
  },
  {
    "text": "form a component a microservice if you like and these there's a number of single purpose lambdas that and you have",
    "start": "958920",
    "end": "965399"
  },
  {
    "text": "a Dynamo single table more or less if you abstract it that's what a component",
    "start": "965399",
    "end": "970440"
  },
  {
    "text": "has contained inside it and there's any any kind of trigger in AWS trigger another eventbridge event",
    "start": "970440",
    "end": "976680"
  },
  {
    "text": "would start the process store some some data and then publish a domain event to",
    "start": "976680",
    "end": "982620"
  },
  {
    "text": "the shared event bus that's that's a basically schematic approach a drawing like like was said in the keynote",
    "start": "982620",
    "end": "989639"
  },
  {
    "text": "um and we also use the sqs for dlqs",
    "start": "989639",
    "end": "995459"
  },
  {
    "text": "if you scale that out like Emily was saying you can go from um having component publishing to Shared event bus",
    "start": "995459",
    "end": "1000920"
  },
  {
    "text": "and another component consuming from the shared event bus obviously components can both publish and consume but just for schematic",
    "start": "1000920",
    "end": "1007639"
  },
  {
    "text": "approach for kind of demonstrating this you can this is the the relationship and",
    "start": "1007639",
    "end": "1013220"
  },
  {
    "text": "then that scales up with components publishing components consuming and using the shadow event bus as",
    "start": "1013220",
    "end": "1018560"
  },
  {
    "text": "integration point quite early on we actually use partner event buses as well and an example is",
    "start": "1018560",
    "end": "1024199"
  },
  {
    "text": "indesk and we integrated them into our shared event bus and the kind of the same the same flow continued",
    "start": "1024199",
    "end": "1031220"
  },
  {
    "text": "so that's our teams our our systems and our Tech stack so let's get into the kind of the beef",
    "start": "1031220",
    "end": "1037339"
  },
  {
    "start": "1036000",
    "end": "1841000"
  },
  {
    "text": "of it which is the patterns that emerged so rather than talking about all the systems I'm going to focus on search",
    "start": "1037339",
    "end": "1042620"
  },
  {
    "text": "and inventory two systems and how they interacted throughout the rest of the talk what search looks at after if you've",
    "start": "1042620",
    "end": "1048919"
  },
  {
    "text": "gone to any kind of standard um search search a car website it looks",
    "start": "1048919",
    "end": "1054440"
  },
  {
    "text": "after this this page basically you can filter you can search on the free search text search and you can look for the car",
    "start": "1054440",
    "end": "1061580"
  },
  {
    "text": "that you want uh inventory actually does do things it it looks after the car information but",
    "start": "1061580",
    "end": "1068480"
  },
  {
    "text": "also the car status and you can view the car details on the website so if you click through on one",
    "start": "1068480",
    "end": "1073940"
  },
  {
    "text": "of the things on search you go into the box and Twig one and you see all the details that you need now this was very",
    "start": "1073940",
    "end": "1079460"
  },
  {
    "text": "important we wanted to offer a digital experience and this is the actual car you're buying it's not representation of the car we wanted this to be very deep",
    "start": "1079460",
    "end": "1086419"
  },
  {
    "text": "strong experience and you get all the information you need to buy the car straight away",
    "start": "1086419",
    "end": "1093200"
  },
  {
    "text": "what inventory does just to give you that context it's an aggregator of the cars state so we'll take external data",
    "start": "1093200",
    "end": "1098600"
  },
  {
    "text": "or internal events aggregate the data and publish events with the state of the car",
    "start": "1098600",
    "end": "1105679"
  },
  {
    "text": "examples it would consume events like vehicle acquired Vehicles sold vehicle delivered I know publish events like",
    "start": "1105679",
    "end": "1112640"
  },
  {
    "text": "vehicle imported vehicle published and vehicle updated so these are kind of real examples that we use I'm going to",
    "start": "1112640",
    "end": "1118340"
  },
  {
    "text": "focus a bit more on this event because that's very very interesting and I hope you can take some takeaways from this",
    "start": "1118340",
    "end": "1125200"
  },
  {
    "text": "tldr inventor component asynchronously Powers both the search page and the",
    "start": "1125360",
    "end": "1131059"
  },
  {
    "text": "vehicle detail page so the big question how do these two systems interact",
    "start": "1131059",
    "end": "1137660"
  },
  {
    "text": "inventor component takes all the external data or the domain events puts an event on shared event bus search",
    "start": "1137660",
    "end": "1144080"
  },
  {
    "text": "component responds to that and ultimately that that information gets on the on the website",
    "start": "1144080",
    "end": "1149720"
  },
  {
    "text": "this is the first pattern that we kind of noticed and I called it the event Ledger pattern by the way all the patterns that I'm kind of talking about",
    "start": "1149720",
    "end": "1156260"
  },
  {
    "text": "today is not patterns that I suggest we everyone should do it's more things that we noticed",
    "start": "1156260",
    "end": "1161660"
  },
  {
    "text": "so what the event Ledger pattern is is ultimately you have any trigger on this side",
    "start": "1161660",
    "end": "1167299"
  },
  {
    "text": "a Lambda response to it writes domain event and state to a single table",
    "start": "1167299",
    "end": "1173059"
  },
  {
    "text": "on state change use Dynamo chain streams you publish a domain event to the shred",
    "start": "1173059",
    "end": "1178400"
  },
  {
    "text": "event bus now when we first started this we didn't use Dynamo change streams and that",
    "start": "1178400",
    "end": "1183919"
  },
  {
    "text": "caused some issues with atomic operations so you might Source something in Dynamo and then it doesn't get published in the shared event bus so",
    "start": "1183919",
    "end": "1190280"
  },
  {
    "text": "that that's that's a problem that you need to solve so um Dynamic change streams really really help with that",
    "start": "1190280",
    "end": "1195740"
  },
  {
    "text": "so ultimately one of the benefits of this pattern is that you can store and forget",
    "start": "1195740",
    "end": "1201020"
  },
  {
    "text": "um with Dynamo chain streams and you can Outsource that consistency AWS which is great and one of the things that we did",
    "start": "1201020",
    "end": "1206900"
  },
  {
    "text": "very early on because we're learning how to do Eda right is uh publish events by default so whatever we did we're",
    "start": "1206900",
    "end": "1212539"
  },
  {
    "text": "publishing events of this shared event bus as a result the the things to consider that we kind of started noticing is that",
    "start": "1212539",
    "end": "1220100"
  },
  {
    "text": "because we were hiring people that had crowd experience they were not familiar with these Eda patterns so a lot of the",
    "start": "1220100",
    "end": "1225679"
  },
  {
    "text": "things started leaking some crud maybe patterns if you like so it's hard to kind of",
    "start": "1225679",
    "end": "1230960"
  },
  {
    "text": "understand this pattern and such and executes it um with the events because we wanted to",
    "start": "1230960",
    "end": "1236360"
  },
  {
    "text": "share that share everything we did expose the database schema to an extent in the events themselves I'll show you a",
    "start": "1236360",
    "end": "1241460"
  },
  {
    "text": "bit about what that means a bit later on and we also mixed private and public events so some events were never ever",
    "start": "1241460",
    "end": "1247400"
  },
  {
    "text": "going to actually be consumed by another component another team another system it",
    "start": "1247400",
    "end": "1252740"
  },
  {
    "text": "was always going to be consumed by the same system so that was a bit a bit confusing for the teams and finally we",
    "start": "1252740",
    "end": "1258919"
  },
  {
    "text": "mixed event and state store so one single table had both the events and the states if you look at that pattern that I",
    "start": "1258919",
    "end": "1265160"
  },
  {
    "text": "talked about earlier you'll get the details of how we did that so critical question how are we solving",
    "start": "1265160",
    "end": "1270380"
  },
  {
    "text": "this one of the ways we're solving it because we have other other ways as well is we",
    "start": "1270380",
    "end": "1275660"
  },
  {
    "text": "use this this dual event and state store pattern so we would have write an event to an event store a",
    "start": "1275660",
    "end": "1281960"
  },
  {
    "text": "single table and then another change stream um with another Lambda would write state to the state store so have completely",
    "start": "1281960",
    "end": "1288559"
  },
  {
    "text": "separate Dynamo tables and again publish the main events off the back of that",
    "start": "1288559",
    "end": "1293720"
  },
  {
    "text": "event store really does help with debugging I think that was mentioned earlier on as well and this pattern just",
    "start": "1293720",
    "end": "1300320"
  },
  {
    "text": "generally has a consistent and stateless flow of data it's fits in people's heads people understand it there's a clear separation and it's an interesting",
    "start": "1300320",
    "end": "1308000"
  },
  {
    "text": "effect that that's this state store has which is it becomes more of a cache sometimes when you want to go and grab",
    "start": "1308000",
    "end": "1313880"
  },
  {
    "text": "some dates at the latest State you can you can get that quite easily and ultimately the state store almost serves",
    "start": "1313880",
    "end": "1319220"
  },
  {
    "text": "as a presentation layer as well for your API or your front end so we went from the event Ledger pattern to the event",
    "start": "1319220",
    "end": "1325760"
  },
  {
    "text": "state store pattern and this is not kind of we didn't do it for all systems but this is more or less something that we",
    "start": "1325760",
    "end": "1331580"
  },
  {
    "text": "noticed so going away from inventors again we've got this example of inventory and search",
    "start": "1331580",
    "end": "1337880"
  },
  {
    "text": "how do we share vehicle updates how does inventory as an aggregator of events of",
    "start": "1337880",
    "end": "1343159"
  },
  {
    "text": "of the vehicle how does it share these updates with other systems and this is",
    "start": "1343159",
    "end": "1348200"
  },
  {
    "text": "one of the the biggest pattern that we noticed earlier on the what I call the god event pattern and actually we call",
    "start": "1348200",
    "end": "1353360"
  },
  {
    "text": "it internally the god of n pattern and what that means is that inventory does it stuff here as as I",
    "start": "1353360",
    "end": "1360919"
  },
  {
    "text": "said earlier and it published a single event called vehicle updated as you can tell from the name of the",
    "start": "1360919",
    "end": "1366860"
  },
  {
    "text": "event it's not very specific it's not very contextual um it contains the latest date of the",
    "start": "1366860",
    "end": "1372620"
  },
  {
    "text": "event it's a general purpose update event and it has all the state about a vehicle so whatever you need it will be",
    "start": "1372620",
    "end": "1379700"
  },
  {
    "text": "in there last time I checked it had eight plus fields and the contract never breaks is",
    "start": "1379700",
    "end": "1385039"
  },
  {
    "text": "something that's always always there you can rely on it and because it was mentioned earlier in the keynote this is",
    "start": "1385039",
    "end": "1390200"
  },
  {
    "text": "more or less I think an event of encourage State transfer which I can never remember the name of there's a lot",
    "start": "1390200",
    "end": "1395600"
  },
  {
    "text": "of words there um example so our event would kind of look",
    "start": "1395600",
    "end": "1400820"
  },
  {
    "text": "like this you would have information about the car things like the color they make the model number of doors things like that",
    "start": "1400820",
    "end": "1407179"
  },
  {
    "text": "but it'll also have information about the car status is it published is refurb complete",
    "start": "1407179",
    "end": "1414320"
  },
  {
    "text": "um the what's the kind of spec data status things like that but you'd also have information about",
    "start": "1414320",
    "end": "1420260"
  },
  {
    "text": "the method about the events or metadata so Event Source and event version and this is the the implementation",
    "start": "1420260",
    "end": "1426740"
  },
  {
    "text": "detail that we leaked which is around the vehicle vehicle ID and so in information from Dynamo really",
    "start": "1426740",
    "end": "1434299"
  },
  {
    "text": "now so this what this is what the pattern looked like you would have a vehicle updated and that would be used by consumed by search components but",
    "start": "1434299",
    "end": "1441200"
  },
  {
    "text": "then other components would also use it like the orders or delivery or Finance would also use this this event because",
    "start": "1441200",
    "end": "1449179"
  },
  {
    "text": "builds a rich view of the vehicle from very diverse sources it published all",
    "start": "1449179",
    "end": "1454400"
  },
  {
    "text": "the things vehicle in a single event so all you need to do is consume that event you get all the information you need",
    "start": "1454400",
    "end": "1460280"
  },
  {
    "text": "and it indirectly defines many states and many reports across cinch",
    "start": "1460280",
    "end": "1465440"
  },
  {
    "text": "so there's positive to this this pattern you can trust you'll find whatever you need",
    "start": "1465440",
    "end": "1470720"
  },
  {
    "text": "you don't need to hit an API it's like the fat event if you like um",
    "start": "1470720",
    "end": "1476179"
  },
  {
    "text": "but and it becomes the only integration point between systems the inventory and search the only thing they need to talk",
    "start": "1476179",
    "end": "1482299"
  },
  {
    "text": "about is this vehicle updated event and um at the time we're scaling a unicorn",
    "start": "1482299",
    "end": "1487820"
  },
  {
    "text": "so as we're moving really really fast this this really really helped and we just talked about vehicle updated event",
    "start": "1487820",
    "end": "1493460"
  },
  {
    "text": "and other events like this and that's it [Applause] considerations an important we'll talk",
    "start": "1493460",
    "end": "1500360"
  },
  {
    "text": "about this with Emily earlier that um the component and the team in this case inventing component becomes an",
    "start": "1500360",
    "end": "1505580"
  },
  {
    "text": "accidental proxy of information what that means is that a mentor may be getting the information",
    "start": "1505580",
    "end": "1510919"
  },
  {
    "text": "about whether the car refurbishment is complete from a further Downstream system",
    "start": "1510919",
    "end": "1516140"
  },
  {
    "text": "and including that in the events and then the these components were actually using them using that information but",
    "start": "1516140",
    "end": "1522260"
  },
  {
    "text": "what if inventors didn't want to publish that information in more it becomes this kind of responsible it becomes",
    "start": "1522260",
    "end": "1527720"
  },
  {
    "text": "responsible for that information without necessarily wanting to or being intended intending to",
    "start": "1527720",
    "end": "1534080"
  },
  {
    "text": "um so as a result components coupled with many components for many reasons because of this God event and change",
    "start": "1534080",
    "end": "1541159"
  },
  {
    "text": "becomes hard you can't really change things because there's there's loose coupling but also quite a bit of coupling as well it's a bit weird and",
    "start": "1541159",
    "end": "1548840"
  },
  {
    "text": "when when it's used by reporting systems you are really stuck because they really rely on this this God event",
    "start": "1548840",
    "end": "1555440"
  },
  {
    "text": "so how are we solving this there's no kind of pattern that we're going to necessarily but the number one",
    "start": "1555440",
    "end": "1562100"
  },
  {
    "text": "thing we're doing is we're thinking about more specific and the textual events so as an example we have vehicle price",
    "start": "1562100",
    "end": "1568880"
  },
  {
    "text": "increased from the pricing component or vehicle valuation decrease from the valuation components",
    "start": "1568880",
    "end": "1574400"
  },
  {
    "text": "and these are in addition to the vehicle updated that's still there to be backwards compatible one of the side",
    "start": "1574400",
    "end": "1580640"
  },
  {
    "text": "effects of this is that we ended up having smaller components build up because the result of having this this",
    "start": "1580640",
    "end": "1588380"
  },
  {
    "text": "God event was that inventor components started becoming really really big because I wanted to serve this big event",
    "start": "1588380",
    "end": "1595039"
  },
  {
    "text": "so there was a direct correlation between size of components and and size of events",
    "start": "1595039",
    "end": "1600380"
  },
  {
    "text": "to give you an example of a more contextual event um and I just started publishing listing updated which has four fields and it's",
    "start": "1600380",
    "end": "1608299"
  },
  {
    "text": "um the event is published from a vehicle's price uh or published status changes and that's it you have four",
    "start": "1608299",
    "end": "1614299"
  },
  {
    "text": "fields and you could you it's a lot smaller and thinner and contextual but other than",
    "start": "1614299",
    "end": "1620960"
  },
  {
    "text": "um other than that other than thinking about a kind of smaller contextual events we're also trying to",
    "start": "1620960",
    "end": "1626539"
  },
  {
    "text": "look at think about contract testing between components so the consumer to try and keep the publisher a bit and",
    "start": "1626539",
    "end": "1633980"
  },
  {
    "text": "keep their accountability so are you gonna are you gonna make sure that this contract doesn't break and I want um I",
    "start": "1633980",
    "end": "1639860"
  },
  {
    "text": "want I want the test to break if that's not the case and the second thing we're doing is this a general kind of exercise of",
    "start": "1639860",
    "end": "1646760"
  },
  {
    "text": "rationalizing about events thinking about naming conventions thinking about the the structure of events because we",
    "start": "1646760",
    "end": "1652340"
  },
  {
    "text": "don't have have that in place right now but as you might see from other talks today there's a big thing about it's not",
    "start": "1652340",
    "end": "1659480"
  },
  {
    "text": "only Technical Solutions that we need to look at there's also more social Technical Solutions so when we first",
    "start": "1659480",
    "end": "1665179"
  },
  {
    "text": "started out back in April 2020 we did a lot of domain domain driven design",
    "start": "1665179",
    "end": "1670880"
  },
  {
    "text": "um practices so we did things like event modeling and there's some elaborate event models that we've used but then we",
    "start": "1670880",
    "end": "1676279"
  },
  {
    "text": "kind of went away from it and that socked at the show in an architecture so we have people internally at Central really really good",
    "start": "1676279",
    "end": "1683120"
  },
  {
    "text": "with the major in design Workshop so we're starting to build up our practice around domain-driven design",
    "start": "1683120",
    "end": "1689900"
  },
  {
    "text": "second thing we did is a bit of a technical both of social technical impact is that we built out a cinch",
    "start": "1689900",
    "end": "1696140"
  },
  {
    "text": "back-end template a starter pack I think someone mentioned it in the talk earlier uh whereby you can create a component",
    "start": "1696140",
    "end": "1701419"
  },
  {
    "text": "quite easily with kind of some defaults that you you don't need to think about because that was one of the things that we had a lot with I don't know how many",
    "start": "1701419",
    "end": "1708200"
  },
  {
    "text": "people use node um here but it there's a lot of Plumbing you have to do it's our component and",
    "start": "1708200",
    "end": "1714080"
  },
  {
    "text": "that was a high bar for entry so we lowered the bar for entry as a result we had a lot more smaller",
    "start": "1714080",
    "end": "1720559"
  },
  {
    "text": "contextual components and it also served as a blueprint so what that meant is that if you in each",
    "start": "1720559",
    "end": "1727520"
  },
  {
    "text": "template in the template we might have a bit of a nudge to event-driven practices event-driven design",
    "start": "1727520",
    "end": "1734059"
  },
  {
    "text": "and finally we're looking into using a central place for for documentation of",
    "start": "1734059",
    "end": "1739400"
  },
  {
    "text": "events and we're using backstage backstage has evolved quite a bit since it first launched by Spotify and we're",
    "start": "1739400",
    "end": "1745159"
  },
  {
    "text": "looking to get all the teams on on Backstage so that they can self-serve so that's it that's the god event",
    "start": "1745159",
    "end": "1751039"
  },
  {
    "text": "pattern that's that's what we kind of noticed under the the pros and the cons and how we evolved question now is how",
    "start": "1751039",
    "end": "1757520"
  },
  {
    "text": "did how how do teams consume this got event what does that look like well",
    "start": "1757520",
    "end": "1762620"
  },
  {
    "text": "initially I was part of this team actually search at the time search inventory had a lot of chatter",
    "start": "1762620",
    "end": "1768740"
  },
  {
    "text": "going on we literally now chat tool we had a slack Channel called search inventory there's a lot of conversation",
    "start": "1768740",
    "end": "1773779"
  },
  {
    "text": "can you include this in that event of um what do you need from this all sorts of conversation",
    "start": "1773779",
    "end": "1779240"
  },
  {
    "text": "and that was a bit problematic to start with um but ultimately search",
    "start": "1779240",
    "end": "1785179"
  },
  {
    "text": "actually uh consume loads of events one of them being from inventory it would validate and parse these events and then",
    "start": "1785179",
    "end": "1792559"
  },
  {
    "text": "it would write the state to a shallow copy of vehicle say in Dynamo",
    "start": "1792559",
    "end": "1798919"
  },
  {
    "text": "and then every minute there would be a Lambda that would load the vehicle snap load",
    "start": "1798919",
    "end": "1804200"
  },
  {
    "text": "the get the latest vehicles from Dynamo load the vehicle snapshot and store an S3 so we started very very lean we",
    "start": "1804200",
    "end": "1810260"
  },
  {
    "text": "didn't we didn't want to have elaborate Solutions we wanted to get the data in the most lean uh leanest possible way",
    "start": "1810260",
    "end": "1818779"
  },
  {
    "text": "and ultimately users would browse the websites hit API Gateway hit a Lambda Lambda would fit that fetch that",
    "start": "1818779",
    "end": "1824720"
  },
  {
    "text": "snapshot within the memory of the Lambda would sort and filter we only had about 5000 cars at the time when we launched",
    "start": "1824720",
    "end": "1830779"
  },
  {
    "text": "so that was easily done and that was our lean approach to consuming the event and ultimately getting the the cars to for",
    "start": "1830779",
    "end": "1838399"
  },
  {
    "text": "the for our customers to browse so those are the patterns and one of the big things about Eda is that you can you",
    "start": "1838399",
    "end": "1846140"
  },
  {
    "start": "1841000",
    "end": "2191000"
  },
  {
    "text": "can evolve it and you can evolve it quite in a decoupled manner um",
    "start": "1846140",
    "end": "1851539"
  },
  {
    "text": "so one question you might have is how do you extend this system if you try and buy a car and what was",
    "start": "1851539",
    "end": "1859159"
  },
  {
    "text": "happening early on you would you would find the car you really want you would go through get to check out and only to find out that someone else had reserved",
    "start": "1859159",
    "end": "1865159"
  },
  {
    "text": "that car because they were in the process of finance application or they would they were doing checkout at the same time but they got there first so we",
    "start": "1865159",
    "end": "1872419"
  },
  {
    "text": "want to kind of bring that further up in the funnel and tell the customer that well this is reserved don't click through don't bother",
    "start": "1872419",
    "end": "1878779"
  },
  {
    "text": "and essentially add this tag so how do we do that in event-driven way well",
    "start": "1878779",
    "end": "1883940"
  },
  {
    "text": "going back to the inventory search pattern you have um vehicle updated published search",
    "start": "1883940",
    "end": "1890059"
  },
  {
    "text": "consumes vehicle updated it builds this vehicle snapshot that we talked about and ultimately service the cars in",
    "start": "1890059",
    "end": "1895220"
  },
  {
    "text": "search well to surface this information you would um consume a vehicle reserved event from",
    "start": "1895220",
    "end": "1901580"
  },
  {
    "text": "a different component build the vehicle snapshot and vehicle Reserve status included in that snapshot",
    "start": "1901580",
    "end": "1907159"
  },
  {
    "text": "and then surface the cars with the the vehicle reserved status on the as a tag",
    "start": "1907159",
    "end": "1913940"
  },
  {
    "text": "there we go done we've done the feature and easy",
    "start": "1913940",
    "end": "1918980"
  },
  {
    "text": "there's nuances to that and complexities but that's more or less the pattern that you would follow",
    "start": "1918980",
    "end": "1925039"
  },
  {
    "text": "second question is a bit more social technical how do we evolve this system how to evolve the architecture and the teams",
    "start": "1925039",
    "end": "1930980"
  },
  {
    "text": "the initial thing that was happening that we had is that we had search and filter for cars um that was",
    "start": "1930980",
    "end": "1937399"
  },
  {
    "text": "built by looked after by search and then we had inventor of cars on this what we call internally the full page ad for",
    "start": "1937399",
    "end": "1943580"
  },
  {
    "text": "cars looked after by inventory so what was happening there so um inventory was published publishing",
    "start": "1943580",
    "end": "1949820"
  },
  {
    "text": "vehicle state for anyone who might care but end up considering the presentation layer for search all that chatter that was going on",
    "start": "1949820",
    "end": "1956659"
  },
  {
    "text": "um and search has control of its own data but it has to consume loads of events which",
    "start": "1956659",
    "end": "1962840"
  },
  {
    "text": "is problematic or you might say it's the right thing to do but it search had to think about a lot of complexity",
    "start": "1962840",
    "end": "1970159"
  },
  {
    "text": "so for that reason we we launched a different team who would look after the full page ad for cars called vehicle",
    "start": "1970159",
    "end": "1975799"
  },
  {
    "text": "detail and inventory inventory would still have a website to look after this is an internal admin website that they",
    "start": "1975799",
    "end": "1982399"
  },
  {
    "text": "look after for sourcing vehicles but vehicle detail will take over the vehicle detail as you'd expect Paige",
    "start": "1982399",
    "end": "1989539"
  },
  {
    "text": "so how that would happen you would literally go from inventory vehicle updated to vehicle detail uh vehicle",
    "start": "1989539",
    "end": "1996620"
  },
  {
    "text": "State updated that that's literally the transition that you go through so rather than search consuming vehicle updated",
    "start": "1996620",
    "end": "2003760"
  },
  {
    "text": "um vehicle detail would take would consume it and then publish a vehicle stay updated that then would be consumed",
    "start": "2003760",
    "end": "2010000"
  },
  {
    "text": "by search so decoupling search inventory by doing this and what that would look like",
    "start": "2010000",
    "end": "2015940"
  },
  {
    "text": "um that would end up becoming this lazy consumer pattern which is an interesting one because ultimately you would say",
    "start": "2015940",
    "end": "2021700"
  },
  {
    "text": "that actually what search was doing earlier was the right thing but what they wanted to do is they wanted to",
    "start": "2021700",
    "end": "2026980"
  },
  {
    "text": "consume the single event just give us the vehicle State updated and this event was a lot closer to what they wanted for",
    "start": "2026980",
    "end": "2032740"
  },
  {
    "text": "their presentation layer rather than what was in inventory",
    "start": "2032740",
    "end": "2037620"
  },
  {
    "text": "so the pros for this for this laser consumer pattern is that um you would only care about one event and search",
    "start": "2037899",
    "end": "2044679"
  },
  {
    "text": "would only speak to one team it would be coupled but it would be coupled with a more suitable team and it could",
    "start": "2044679",
    "end": "2051520"
  },
  {
    "text": "ultimately focus on what makes them awesome example for that I know not example that yet so considerations",
    "start": "2051520",
    "end": "2058419"
  },
  {
    "text": "um search or in this case doesn't control its own destiny it relies on",
    "start": "2058419",
    "end": "2063460"
  },
  {
    "text": "documentation being up to date and it has to translate data from inventory to vehicle detail and there was a",
    "start": "2063460",
    "end": "2070300"
  },
  {
    "text": "consideration of what if the event stops getting published but that would all be dealt with an event driven way how are we solving this",
    "start": "2070300",
    "end": "2076540"
  },
  {
    "text": "again contract tests um documenting events again with using",
    "start": "2076540",
    "end": "2081700"
  },
  {
    "text": "backstage and for those of you who know me I couldn't go through a talk without mentioning observability and we're very",
    "start": "2081700",
    "end": "2088540"
  },
  {
    "text": "big with observability I think have quite a mature practices and and tool set",
    "start": "2088540",
    "end": "2094060"
  },
  {
    "text": "so we did we do the same with events if an event hasn't published for a while or it hasn't been consumed for a while the",
    "start": "2094060",
    "end": "2100660"
  },
  {
    "text": "teams generally know if that's the case we trust AWS to do the right thing and eventbridge to to to do its thing but we",
    "start": "2100660",
    "end": "2106780"
  },
  {
    "text": "might be doing something wrong and that that happens so we have really really good good observability so we know about",
    "start": "2106780",
    "end": "2112480"
  },
  {
    "text": "that early on so what did this mean for teams the social technical thing that I was talking about we went from inventory and",
    "start": "2112480",
    "end": "2119440"
  },
  {
    "text": "search to this inventor vehicle detail and search uh pattern and we did that in an event-driven way and it only took us",
    "start": "2119440",
    "end": "2125380"
  },
  {
    "text": "a few weeks to do it benefits we can focus on inventory but",
    "start": "2125380",
    "end": "2130660"
  },
  {
    "text": "um inventor gets a new consumer vehicle detail has control of its own data but accepts complexity in favor of",
    "start": "2130660",
    "end": "2138040"
  },
  {
    "text": "consumers in this case search and search for search conversations and events reduced to one a lot less complexity and",
    "start": "2138040",
    "end": "2144579"
  },
  {
    "text": "better relies heavily in vehicle detail ultimately inventory could focus on the car in its status vehicle detail had",
    "start": "2144579",
    "end": "2151240"
  },
  {
    "text": "ownership ownership of its own car detail and search could focus on making search awesome and this is where I've",
    "start": "2151240",
    "end": "2156339"
  },
  {
    "text": "got an example product example search made filters awesome so what they so filters uh when you select a make",
    "start": "2156339",
    "end": "2164260"
  },
  {
    "text": "then it gives you the number of models that the number of models for each model there",
    "start": "2164260",
    "end": "2170619"
  },
  {
    "text": "um so what they did here and remember the S3 pattern so getting the snapshot from fetching the snapshot from S3 they",
    "start": "2170619",
    "end": "2177460"
  },
  {
    "text": "took the time so they reduce the complex with consuming the event and they took the",
    "start": "2177460",
    "end": "2182680"
  },
  {
    "text": "time to actually um build up build out an Amazon open search um pattern so they can do some Advanced",
    "start": "2182680",
    "end": "2188859"
  },
  {
    "text": "fasting stuff right those are the the patterns that we",
    "start": "2188859",
    "end": "2196540"
  },
  {
    "start": "2191000",
    "end": "2393000"
  },
  {
    "text": "observed over the last two or three years my my conclusion so we chose serverless",
    "start": "2196540",
    "end": "2202119"
  },
  {
    "text": "CDA and we ran with it we literally just started and started a building with the help of um and Prince works as a",
    "start": "2202119",
    "end": "2209440"
  },
  {
    "text": "consultancy we evolved our systems with very little friction and Eda and",
    "start": "2209440",
    "end": "2215079"
  },
  {
    "text": "serverless Ada enable teams to be autonomous that Emily was talking about and move at PACE that we were literally",
    "start": "2215079",
    "end": "2220599"
  },
  {
    "text": "we're literally able to do that we built and eventually consistent decoupled system to protect our",
    "start": "2220599",
    "end": "2226540"
  },
  {
    "text": "customers from third parties or other components within cinch it's a cool one for me is that everyone",
    "start": "2226540",
    "end": "2232420"
  },
  {
    "text": "at science talks about events they don't talk about apis they don't talk about resources they talk about events and they become our protagonists",
    "start": "2232420",
    "end": "2238720"
  },
  {
    "text": "and we only need an interface contract we don't need to care about performance",
    "start": "2238720",
    "end": "2243820"
  },
  {
    "text": "especially because we're serverless but because we're Eda as well I think Emily mentioned this but",
    "start": "2243820",
    "end": "2249940"
  },
  {
    "text": "ultimately we did scale without having to manage much um interestingly serverless and Eda gets",
    "start": "2249940",
    "end": "2255940"
  },
  {
    "text": "quicker the more it gets used I mean it costs a lot less than the container of solutions that we adopted",
    "start": "2255940",
    "end": "2262859"
  },
  {
    "text": "so talked about four patterns the event Ledger pattern they've got event pattern the event state store pattern and the",
    "start": "2263079",
    "end": "2268180"
  },
  {
    "text": "laser consumer pattern if you take anything away from these patterns I would say that for a bent Ledger pattern",
    "start": "2268180",
    "end": "2275619"
  },
  {
    "text": "maybe think about separating the store do something that makes it easier to fit in developers and teams heads",
    "start": "2275619",
    "end": "2283119"
  },
  {
    "text": "the god event pattern with a god event pattern think about smaller more contextual events would we do it differently if we started again maybe I",
    "start": "2283119",
    "end": "2289720"
  },
  {
    "text": "don't know the good event work for us but if you can um learn about Eda quickly and have good",
    "start": "2289720",
    "end": "2295180"
  },
  {
    "text": "documentation early on and have good designs early on maybe it's worth doing the with the event state store pattern",
    "start": "2295180",
    "end": "2302260"
  },
  {
    "text": "and use Dynamo chain streams absolutely Outsource that complexity to AWS and with the laser consumer pattern I think",
    "start": "2302260",
    "end": "2308260"
  },
  {
    "text": "this is very interesting and it's probably my takeaway from this conference is that be intentional with your trade-offs you don't have to be",
    "start": "2308260",
    "end": "2314500"
  },
  {
    "text": "doing the right pattern it's about reducing the complexity and cognitive",
    "start": "2314500",
    "end": "2319660"
  },
  {
    "text": "load think about your trade-offs of the the the the option that of the solution that you're you're designing and with",
    "start": "2319660",
    "end": "2326680"
  },
  {
    "text": "search the event that they could innovate in a space where they'd make a difference",
    "start": "2326680",
    "end": "2331720"
  },
  {
    "text": "ultimately events are simple they're declarative they serve as a data transfer mechanism system is extensible",
    "start": "2331720",
    "end": "2338020"
  },
  {
    "text": "and crucially seems like it no one says oh why are we doing all this event driven stuff",
    "start": "2338020",
    "end": "2344140"
  },
  {
    "text": "but I'll leave you with with one last thing and it kind of ties into what Emily was saying it doesn't really",
    "start": "2344140",
    "end": "2349839"
  },
  {
    "text": "matter because ultimately event-driven serverless systems allow you to",
    "start": "2349839",
    "end": "2355480"
  },
  {
    "text": "experiment and evolve and we've we've experienced that we've evolved our systems you can't make mistakes",
    "start": "2355480",
    "end": "2362079"
  },
  {
    "text": "but you can recover for them it's not a massive upfront investment",
    "start": "2362079",
    "end": "2367420"
  },
  {
    "text": "the only thing I would say to think about is think an event to be deliberate about their design ahead of time if you",
    "start": "2367420",
    "end": "2373480"
  },
  {
    "text": "can put those practices in and finally um I can agree more with what Emily said",
    "start": "2373480",
    "end": "2379599"
  },
  {
    "text": "and throw it away and start again maybe maybe start thinking less about",
    "start": "2379599",
    "end": "2385420"
  },
  {
    "text": "refactoring and more about can I throw this entire thing away and start again subscribe to consume a different event",
    "start": "2385420",
    "end": "2391599"
  },
  {
    "text": "and do something different that's it thanks very much and yeah",
    "start": "2391599",
    "end": "2399240"
  },
  {
    "start": "2393000",
    "end": "2414000"
  },
  {
    "text": "[Applause]",
    "start": "2399370",
    "end": "2403890"
  }
]