[
  {
    "text": "[Music] so for this next session um I'm going to",
    "start": "6990",
    "end": "13519"
  },
  {
    "text": "speak a little bit uh and I'm then I'm going to hand over to aelio so I will introduce him first and then myself uh",
    "start": "13519",
    "end": "20439"
  },
  {
    "text": "aelio I guess we could wait for the slides where we have you want to wait for this yeah sure that's fine we can do that I'll I'll do it in a minute um I'll",
    "start": "20439",
    "end": "27199"
  },
  {
    "text": "I'll start and and uh introduce myself in fact oh by the way we both work at",
    "start": "27199",
    "end": "32920"
  },
  {
    "text": "Oracle so you get the pleasure of seeing this slide right yeah anything about the",
    "start": "32920",
    "end": "39160"
  },
  {
    "text": "future it's just a plan don't Bank on it yeah it's the future um and and this is",
    "start": "39160",
    "end": "45719"
  },
  {
    "text": "sort of the uh another version of our title which is uh you can't make an",
    "start": "45719",
    "end": "51160"
  },
  {
    "text": "omelette without breaking some eggs so we're going to talk about omelet making um so uh I am the uh vice president of",
    "start": "51160",
    "end": "59519"
  },
  {
    "text": "development for the Java SE group at Oracle I'm also the chairperson for the open jdk governing board um and orelo is",
    "start": "59519",
    "end": "69280"
  },
  {
    "text": "uh director of product management at the uh also at the the Java SE group at Oracle um and was previously at Sun and",
    "start": "69280",
    "end": "78280"
  },
  {
    "text": "around working on Java for many many years almost a decade right yeah that makes me one of the now I think I'm just",
    "start": "78280",
    "end": "85280"
  },
  {
    "text": "shy of being the junior person in the team because we got people that been there for 15 20 years so I'm still sort",
    "start": "85280",
    "end": "91720"
  },
  {
    "text": "of new and before going over to the dark side of management I worked as an engineer on Java um back I I think I",
    "start": "91720",
    "end": "99320"
  },
  {
    "text": "started at Sun in 1996 um and uh so I have uh there's a",
    "start": "99320",
    "end": "107240"
  },
  {
    "text": "lot to blame me for let's put it that way um and then um the the third presenter um is Charley hunt um who",
    "start": "107240",
    "end": "116000"
  },
  {
    "text": "actually uh is Chicago based and so we were hoping to have him come and and talk to you he uh uh is on the",
    "start": "116000",
    "end": "123640"
  },
  {
    "text": "performance team he's a performance architect um for Java and the jvm unfortunately uh he was not able to make",
    "start": "123640",
    "end": "131120"
  },
  {
    "text": "it today all right",
    "start": "131120",
    "end": "137120"
  },
  {
    "text": "so some headlines as you guys can see everyone",
    "start": "137120",
    "end": "142519"
  },
  {
    "text": "is predicting the death of java it's horrible horrible really sad um of",
    "start": "142519",
    "end": "149599"
  },
  {
    "text": "course if you take a look at some of the dates you can see that uh these were",
    "start": "149599",
    "end": "157519"
  },
  {
    "text": "headlines at various releases of java over the last 20 years um so basically",
    "start": "157519",
    "end": "164879"
  },
  {
    "text": "we have a trend here right a bunch of stuff comes along there's new stuff it's a little bit scary um everyone's a",
    "start": "164879",
    "end": "170319"
  },
  {
    "text": "afraid that uh the world is is going to end um and of course as as we've seen it",
    "start": "170319",
    "end": "175879"
  },
  {
    "text": "hasn't ended um there have been you know different releases some bringing more functionality some some less um but by",
    "start": "175879",
    "end": "183200"
  },
  {
    "text": "and large as a development Community we've embraced these and we found ways to uh both take advantage of the",
    "start": "183200",
    "end": "189120"
  },
  {
    "text": "positive aspects they bring and also deal with with negative aspects to the extent that there have been",
    "start": "189120",
    "end": "194959"
  },
  {
    "text": "those and the reason that I bring this up is that we now find ourselves uh on",
    "start": "194959",
    "end": "200159"
  },
  {
    "text": "the cusp of a new major release of java coming uh scheduled for July of this",
    "start": "200159",
    "end": "206319"
  },
  {
    "text": "year um and this is one of these releases releases which is not so much",
    "start": "206319",
    "end": "212120"
  },
  {
    "text": "evolutionary as revolutionary this uh brings the module system for Java it also modularizes the jdk um and so we're",
    "start": "212120",
    "end": "220319"
  },
  {
    "text": "going to talk a little bit today about both that and other things that are in nine that you may be interested in um as",
    "start": "220319",
    "end": "227000"
  },
  {
    "text": "well as possibly a little bit of of you know what what we think the future is going going to look like um I think one",
    "start": "227000",
    "end": "232760"
  },
  {
    "text": "thing that we can definitely predict um is that uh it will take longer for",
    "start": "232760",
    "end": "238720"
  },
  {
    "text": "people to adopt jigsaw because of the fact that the module system brings along with it strong encapsulation um and and",
    "start": "238720",
    "end": "246799"
  },
  {
    "text": "I think that is something that will be a little bit of a challenge for for people to get their heads around initially um",
    "start": "246799",
    "end": "252000"
  },
  {
    "text": "we're also trying to do a lot to make that transition easy um I think above all one of the things that we've tried",
    "start": "252000",
    "end": "258000"
  },
  {
    "text": "to do is uh do all of the development of nine in the open in open jdk so you've",
    "start": "258000",
    "end": "263639"
  },
  {
    "text": "been able to look at everything that's happening look at the code download weekly bills uh and we've had a lot of",
    "start": "263639",
    "end": "270240"
  },
  {
    "text": "people doing that and not just people who are you know interested in jdk implementation or jvm implementation um",
    "start": "270240",
    "end": "277240"
  },
  {
    "text": "but also a lot of makers of Frameworks and libraries um as well as application developers um so let's let's go ahead",
    "start": "277240",
    "end": "284840"
  },
  {
    "text": "and look at this what what kinds of things is this for um well you know",
    "start": "284840",
    "end": "290600"
  },
  {
    "text": "clearly a modern programming language and platform need the module system right I mean you know you'd hardly build",
    "start": "290600",
    "end": "297080"
  },
  {
    "text": "one today without finding some way of of doing that um but of course a challenge for Java is",
    "start": "297080",
    "end": "303199"
  },
  {
    "text": "it didn't have one originally right it had a a fairly simple way of organizing your code um a pretty simple way of",
    "start": "303199",
    "end": "310919"
  },
  {
    "text": "indicating to you the developer what code is actually public API that I",
    "start": "310919",
    "end": "316160"
  },
  {
    "text": "should be using or what is something that's meant to be an internal uh implementation detail which may be",
    "start": "316160",
    "end": "322360"
  },
  {
    "text": "available to other classes in my package but is not really something that someone from outside is intended to reach in and",
    "start": "322360",
    "end": "328400"
  },
  {
    "text": "use um however Java didn't provide for a way to prevent you're doing that um and",
    "start": "328400",
    "end": "335840"
  },
  {
    "text": "of course at at some levels that can be a feature right it makes it very very flexible it's really convenient to me",
    "start": "335840",
    "end": "341960"
  },
  {
    "text": "that I can go and look at a bunch of code that exists somewhere uh and I can call it um on the other hand you know if",
    "start": "341960",
    "end": "348759"
  },
  {
    "text": "you are trying to maintain this as a system over time and evolve it and make it better um it's very very hard to do",
    "start": "348759",
    "end": "355440"
  },
  {
    "text": "that if absolutely anything could be called and changing it would be",
    "start": "355440",
    "end": "361039"
  },
  {
    "text": "considered something or could be considered something that breaks users um and so you know this is this is where",
    "start": "361039",
    "end": "368360"
  },
  {
    "text": "this desire to evolve and improve um sort of comes up against another",
    "start": "368360",
    "end": "373880"
  },
  {
    "text": "principle uh which you know we like to think we hold very strongly in developing Java which is not to break",
    "start": "373880",
    "end": "379840"
  },
  {
    "text": "users right we want our releases to be compatible we want your existing code to continue to work um so you know the",
    "start": "379840",
    "end": "387440"
  },
  {
    "text": "challenge in this case is how how do you evolve something when nothing can change well clearly that's not something that",
    "start": "387440",
    "end": "393800"
  },
  {
    "text": "is tenable forever um and in fact you know you can go back and look at the",
    "start": "393800",
    "end": "398840"
  },
  {
    "text": "documentation um from java all along from you know mid90s and see all of the",
    "start": "398840",
    "end": "404000"
  },
  {
    "text": "places where it says you know this is public API that you can change uh that",
    "start": "404000",
    "end": "409120"
  },
  {
    "text": "you can use these other things that are here you really are strongly discouraged from using um so we'll have a little bit",
    "start": "409120",
    "end": "416440"
  },
  {
    "text": "more about that in in a few minutes um but you know some I've I've heard some",
    "start": "416440",
    "end": "421800"
  },
  {
    "text": "people sort of say well you know okay look I can kind of understand the idea of modules for the jdk right for",
    "start": "421800",
    "end": "427639"
  },
  {
    "text": "actually modularizing the jdk libraries but you know do we really need to go and",
    "start": "427639",
    "end": "432800"
  },
  {
    "text": "extend that to Frameworks into applications well you know interestingly um a lot of the people that we speak",
    "start": "432800",
    "end": "439199"
  },
  {
    "text": "with and many people on the team have you know not always just been working on Java but have actually used it in other",
    "start": "439199",
    "end": "445840"
  },
  {
    "text": "programming systems over the years to you know to make end user applications and you know one of the things that we",
    "start": "445840",
    "end": "451639"
  },
  {
    "text": "use universally find is that this challenge that we that I just described for implementing the jdk exists for",
    "start": "451639",
    "end": "458599"
  },
  {
    "text": "those Frameworks as well right so if I'm writing a framework or a library I want to be able to evolve it but I'm",
    "start": "458599",
    "end": "465039"
  },
  {
    "text": "similarly uh you know in a in a bad state if I can't change anything because",
    "start": "465039",
    "end": "470080"
  },
  {
    "text": "everyone is sort of reaching in and and dealing with stuff that's um internal implementation detail so it is something",
    "start": "470080",
    "end": "476680"
  },
  {
    "text": "that libraries need and want um even at at sort of the higher level writing an application um you know how many of you",
    "start": "476680",
    "end": "483560"
  },
  {
    "text": "have been in a you know a larger project in your company where all of a sudden you found that something you wrote that",
    "start": "483560",
    "end": "489680"
  },
  {
    "text": "you didn't even think about you know how to do it because this is all internal you know somebody else ended up using and depending on and you changed",
    "start": "489680",
    "end": "496639"
  },
  {
    "text": "something without uh realizing that and everything broke right happens happens a",
    "start": "496639",
    "end": "503560"
  },
  {
    "text": "lot um so I I think that need is there but it's sort of greater than this as",
    "start": "503560",
    "end": "509800"
  },
  {
    "text": "well because in addition to this sort of encapsulation challenge um a number of",
    "start": "509800",
    "end": "515719"
  },
  {
    "text": "the other things that we hear from users is well look you know we want performance to be better we want",
    "start": "515719",
    "end": "520919"
  },
  {
    "text": "footprint to be smaller and when we say performance we also mean startup time right so that has been one of the things",
    "start": "520919",
    "end": "527399"
  },
  {
    "text": "that people have felt over the years with Java that we kind of carry around too much stuff like do I really need to",
    "start": "527399",
    "end": "532959"
  },
  {
    "text": "have corbo when I'm not using it um exactly um and uh in in in addition",
    "start": "532959",
    "end": "540399"
  },
  {
    "text": "the startup time which you know again it's wonderful with Java that you have the flexibility of things actually being",
    "start": "540399",
    "end": "546760"
  },
  {
    "text": "loaded at runtime right and then things starting to compile over time so with Java you have both the initial startup",
    "start": "546760",
    "end": "553760"
  },
  {
    "text": "which is the jvm runtime coming up as well as your file being uh you know",
    "start": "553760",
    "end": "560880"
  },
  {
    "text": "being read in and initially interpreted and then over time compiled as well as all the things that it's depending on",
    "start": "560880",
    "end": "566480"
  },
  {
    "text": "and and importing um having the same thing happen there now we have had you know over the years a few um productive",
    "start": "566480",
    "end": "573480"
  },
  {
    "text": "experiments with things like uh class data sharing and other things that allow some of the the stuff to be done ahead",
    "start": "573480",
    "end": "580000"
  },
  {
    "text": "of time um but what we really want to get to is something where you know when you start your application it comes up",
    "start": "580000",
    "end": "586360"
  },
  {
    "text": "super quickly um because all of the work of uh validating classes of even",
    "start": "586360",
    "end": "592560"
  },
  {
    "text": "compiling um resolving dependencies everything that's done by the class loader magically for you at runtime can",
    "start": "592560",
    "end": "598800"
  },
  {
    "text": "actually be done in advance okay so uh so that's a big that's a big piece as",
    "start": "598800",
    "end": "604279"
  },
  {
    "text": "well so as you can see I think there are you know a bunch of uh benefits that the",
    "start": "604279",
    "end": "610360"
  },
  {
    "text": "module system brings with it um however even some of those advantages are also",
    "start": "610360",
    "end": "616200"
  },
  {
    "text": "things that could be regarded as as disadvantages right so you know a lot of the the sort of resolution of",
    "start": "616200",
    "end": "623000"
  },
  {
    "text": "dependencies and and avoiding ambiguity of which actual version of this class",
    "start": "623000",
    "end": "628640"
  },
  {
    "text": "that was on my gigantic class path did the runtime choose for me right now it's",
    "start": "628640",
    "end": "633800"
  },
  {
    "text": "pointed out you know you're going to resolve that dependency um you're going to have to and before you might have",
    "start": "633800",
    "end": "638880"
  },
  {
    "text": "thought a system was doing it for you but you were actually just deceiving yourself you were lucky if if your code",
    "start": "638880",
    "end": "644000"
  },
  {
    "text": "got the right one um so you know there are a bunch of things like that that are are going to be interesting to uh to",
    "start": "644000",
    "end": "650200"
  },
  {
    "text": "look at all right so I'm going to actually hand off now to my colleague Aurelio who's going to go through a",
    "start": "650200",
    "end": "656360"
  },
  {
    "text": "bunch more detail in in jigon and other areas thanks George I think yeah I've got that by the way who noticed that the",
    "start": "656360",
    "end": "664040"
  },
  {
    "text": "last two in the good section is actually the first two in the bad section right",
    "start": "664040",
    "end": "670480"
  },
  {
    "text": "yeah that's not a typo that's because for some people people that are desing jigo you don't want any ambiguity you",
    "start": "670480",
    "end": "677079"
  },
  {
    "text": "want to know which class you're loading there are Frameworks that you know exploit that option and consider",
    "start": "677079",
    "end": "683680"
  },
  {
    "text": "anything that fixes that a bug likewise we now have a clear",
    "start": "683680",
    "end": "688720"
  },
  {
    "text": "separation of what is you know intended for you to use and what is intended to be used by the platform which we think is a good",
    "start": "688720",
    "end": "695880"
  },
  {
    "text": "thing will allow us to evolve the platform that's probably going to be the hardest pill to swallow for people",
    "start": "695880",
    "end": "702320"
  },
  {
    "text": "moving to jdk9 which is things that they expected to use and were always used to",
    "start": "702320",
    "end": "708720"
  },
  {
    "text": "having access to are disappearing so why is that it's a bit",
    "start": "708720",
    "end": "715279"
  },
  {
    "text": "of background there's always been a bunch of different categories of apis in the",
    "start": "715279",
    "end": "720800"
  },
  {
    "text": "jdk there's a couple of them that were supported and intended for use for",
    "start": "720800",
    "end": "726440"
  },
  {
    "text": "external use so there's some Java apis that are part of the Java specification",
    "start": "726440",
    "end": "732480"
  },
  {
    "text": "you cannot have something and call it a Java implementation if you don't provide those apis so of course developers you",
    "start": "732480",
    "end": "738959"
  },
  {
    "text": "know that's the contract that's what we say Java provides if you stick to that",
    "start": "738959",
    "end": "744440"
  },
  {
    "text": "um you can write Java that will run on the Oracle jdk or in ibms or in any other vendors right because they all",
    "start": "744440",
    "end": "750959"
  },
  {
    "text": "have to provide those apis then we have other apis that were jdk specific that's you know Sun now",
    "start": "750959",
    "end": "758600"
  },
  {
    "text": "Oracle those are apis that are only in that product but that were meant to be",
    "start": "758600",
    "end": "765399"
  },
  {
    "text": "used by developers an example of that is when we introduce Java FX it's not part of the Java specification but the Java",
    "start": "765399",
    "end": "772399"
  },
  {
    "text": "FX API you know it's it's meant to be used if you look at the documentation it says go ahead and use it and then there",
    "start": "772399",
    "end": "779360"
  },
  {
    "text": "another set those are the unsupported jdk internal don't touch this",
    "start": "779360",
    "end": "785399"
  },
  {
    "text": "apis those are mostly under sand. star okay there's a couple of s. star apis",
    "start": "785399",
    "end": "792480"
  },
  {
    "text": "that we think are good to use but the vast majority of the sand doar are don't touch that and I mean you're not",
    "start": "792480",
    "end": "801120"
  },
  {
    "text": "supposed to be able to read that but that's just a screenshot you can find it uh with a um internet archive over",
    "start": "801120",
    "end": "809880"
  },
  {
    "text": "1996 that's what this little warning from Sun telling you not",
    "start": "809880",
    "end": "816560"
  },
  {
    "text": "to use these apis as of jdk 6 um you get warnings if you try to",
    "start": "816560",
    "end": "822839"
  },
  {
    "text": "compile using these apis now just out of curiosity how many people here ignore",
    "start": "822839",
    "end": "828639"
  },
  {
    "text": "the compiler warnings as a you know regular part of their day come on face up right A lot of",
    "start": "828639",
    "end": "836360"
  },
  {
    "text": "people they're just like oh yeah it compiled give me warnings who cares about the warning compile let's run it you shouldn't right there's a reason we",
    "start": "836360",
    "end": "842839"
  },
  {
    "text": "put those warnings in there um so when we were",
    "start": "842839",
    "end": "849120"
  },
  {
    "text": "considering well we have jigel the truth is we could have just done jigel and not",
    "start": "849120",
    "end": "855199"
  },
  {
    "text": "turn on this feature and just leave it so that those internal apis would remain",
    "start": "855199",
    "end": "860880"
  },
  {
    "text": "open and that would have made the adoption of jdk9 simpler and we will",
    "start": "860880",
    "end": "866440"
  },
  {
    "text": "just be having this conversation with jdk 10 or jdk 11 so we would just be kicking the bucket for a little later",
    "start": "866440",
    "end": "872920"
  },
  {
    "text": "and we would still be in the same problem so we've decided no we we should do the right thing right now that we",
    "start": "872920",
    "end": "879079"
  },
  {
    "text": "have a mechanism let's go ahead and use it so we went and looked at a bunch of different products we have the same",
    "start": "879079",
    "end": "886079"
  },
  {
    "text": "access that you do to libraries that are open source and we look at their code to see whether there was indeed some",
    "start": "886079",
    "end": "892560"
  },
  {
    "text": "internal API that was required and you know maybe we should just make that into a Java SE",
    "start": "892560",
    "end": "899720"
  },
  {
    "text": "API and this is what we found out you can see that there's couple of apis that are widely",
    "start": "899720",
    "end": "906839"
  },
  {
    "text": "used but then what we have is a very long tail of you know one of two use cases of products uh trivia question",
    "start": "906839",
    "end": "914639"
  },
  {
    "text": "which one do you think it's the most used internal API anybody wild",
    "start": "914639",
    "end": "922600"
  },
  {
    "text": "guas unsafe this is by the way this is I love this question because everybody says unsafe it's not",
    "start": "922600",
    "end": "929480"
  },
  {
    "text": "Bas 64 encoder okay about twice as much well",
    "start": "929480",
    "end": "934600"
  },
  {
    "text": "not twice as much but that's that's number one lead um Bas 64 there's apis that have been doing",
    "start": "934600",
    "end": "941560"
  },
  {
    "text": "this for a long time there's a lot of external libraries uh we introduced a b 64 encoder in jdk8 and still the most",
    "start": "941560",
    "end": "948519"
  },
  {
    "text": "commonly used API is B 64 um as a just a bit of trivia when we",
    "start": "948519",
    "end": "956560"
  },
  {
    "text": "introduced the B 64 encoder the IAL one that's in jdk8 we have a customer called",
    "start": "956560",
    "end": "962800"
  },
  {
    "text": "us and tell us there's a bug in the new class it's encoding incorrectly um so oh what is it encoded",
    "start": "962800",
    "end": "969560"
  },
  {
    "text": "incorrectly he gave us the value and they're like no no the original one the internal one that's not following the",
    "start": "969560",
    "end": "975120"
  },
  {
    "text": "exact specification we use it to encode a certain set of characters that character was not in our test case so",
    "start": "975120",
    "end": "981800"
  },
  {
    "text": "the new one does it correctly the older one has an error and what was the the",
    "start": "981800",
    "end": "987319"
  },
  {
    "text": "customer's answer could you put a flux so that the new one gives you the same",
    "start": "987319",
    "end": "992399"
  },
  {
    "text": "error so that's how entrenched people are to using these things right um well",
    "start": "992399",
    "end": "998639"
  },
  {
    "text": "when we saw this we realized there's a bunch of internal apis that are used for convenience but like the B 64 incoder",
    "start": "998639",
    "end": "1005399"
  },
  {
    "text": "one um there's a quite an easy migration path Right Use the official one uh there",
    "start": "1005399",
    "end": "1011880"
  },
  {
    "text": "are other cases on which yeah there may not be a clear migration path but really",
    "start": "1011880",
    "end": "1017560"
  },
  {
    "text": "you know what you're trying to do is just such antrem Edge case that we can live without that thing existing you",
    "start": "1017560",
    "end": "1023680"
  },
  {
    "text": "know if your code doesn't do that that's fine there were however a handful of apis that we found like sanan safe where",
    "start": "1023680",
    "end": "1032959"
  },
  {
    "text": "there's a valid use case for it and there is no officially supported API that will support it so if you look at",
    "start": "1032959",
    "end": "1039199"
  },
  {
    "text": "the um the Jeet where we introduced this we called out I think it's about five classes that we say those are internal",
    "start": "1039199",
    "end": "1045839"
  },
  {
    "text": "apis that we do intend to remove at some point but there's no good answer for in",
    "start": "1045839",
    "end": "1051080"
  },
  {
    "text": "jdk9 so we're going to leave those exposed those remain publicly available visible you don't have to pass any",
    "start": "1051080",
    "end": "1057799"
  },
  {
    "text": "parameter they're still there go ahead and use them with the warning that we're actively working on providing you with",
    "start": "1057799",
    "end": "1064720"
  },
  {
    "text": "officially supported versions for those apis when we do we will remove them so",
    "start": "1064720",
    "end": "1070280"
  },
  {
    "text": "this is not a you know new contract we've introduced them to the standard that's not what we're doing here we're",
    "start": "1070280",
    "end": "1075440"
  },
  {
    "text": "just saying yeah we need more time for those everybody else is going to be",
    "start": "1075440",
    "end": "1081120"
  },
  {
    "text": "hidden by default and notice I carefully chose the word it's hidden by default meaning you",
    "start": "1081120",
    "end": "1087400"
  },
  {
    "text": "can unhide them right so uh but don't okay it's just a bad idea but this is",
    "start": "1087400",
    "end": "1094280"
  },
  {
    "text": "going to be the thing that's going to keep most people uh that's going to give a lot of grief sorry about that but we",
    "start": "1094280",
    "end": "1100520"
  },
  {
    "text": "think it's the right thing to do then we have other changes and in some",
    "start": "1100520",
    "end": "1105679"
  },
  {
    "text": "cases you know anything that we change trips somebody up one of my favorite",
    "start": "1105679",
    "end": "1111640"
  },
  {
    "text": "examples was I don't know if you guys heard that sun was acquired by Oracle yeah you know it's news um we of",
    "start": "1111640",
    "end": "1120799"
  },
  {
    "text": "course went and changed some of the properties so if you look at the vendor properties of the J it used to say sun",
    "start": "1120799",
    "end": "1129000"
  },
  {
    "text": "right after the acquisition what would you expect it would say Oracle right",
    "start": "1129000",
    "end": "1134880"
  },
  {
    "text": "it's the vendor property on the file who's that going to affect yeah um I think was Eclipse that was going to",
    "start": "1134880",
    "end": "1141320"
  },
  {
    "text": "break if we did that because they were using the vendor property to decide which startup parameters to use and they",
    "start": "1141320",
    "end": "1148000"
  },
  {
    "text": "said if it's Sun you know it's Hotpot and if it's not Sun it must be IBM and",
    "start": "1148000",
    "end": "1154960"
  },
  {
    "text": "it's j9 and it uses different startup parameters and um you know oracle is not sun no pun intended so therefore when we",
    "start": "1154960",
    "end": "1163559"
  },
  {
    "text": "give them the Early Access build of this it broke and we had to provide them if you look at the J now if you download it you",
    "start": "1163559",
    "end": "1170200"
  },
  {
    "text": "will see there's a little text file which has a lot of information including you know it's whether it's Oracle or not",
    "start": "1170200",
    "end": "1177360"
  },
  {
    "text": "and that's the kind of stuff that would trip us up right we think nobody's going to rely on that and sure enough somebody",
    "start": "1177360",
    "end": "1182559"
  },
  {
    "text": "does similar the version scen anybody download the latest version well it's",
    "start": "1182559",
    "end": "1188280"
  },
  {
    "text": "now 31 rather than 21 that's the ver if you do a Java minus version on the 21",
    "start": "1188280",
    "end": "1194400"
  },
  {
    "text": "version this is what you get right now anybody knows what all of those pieces",
    "start": "1194400",
    "end": "1201640"
  },
  {
    "text": "mean here you go the one dot it's a historical leftover every version of",
    "start": "1201640",
    "end": "1207360"
  },
  {
    "text": "java all the version strings have always started with one dot what does it mean by now nothing it's just well you don't",
    "start": "1207360",
    "end": "1215000"
  },
  {
    "text": "want to change it because you know it's always been there uh the eight is the major version that makes sense the zero",
    "start": "1215000",
    "end": "1222080"
  },
  {
    "text": "we had something called revisions last time we Ed it was for version four remember 1.4.2",
    "start": "1222080",
    "end": "1228880"
  },
  {
    "text": "there hasn't been a revision since and we don't expect there will ever be actually that's not true there has been",
    "start": "1228880",
    "end": "1234760"
  },
  {
    "text": "a revision of eight we just didn't rip the number because it's not such a big deal anymore right so we don't try to keep it in sync so even though the",
    "start": "1234760",
    "end": "1242159"
  },
  {
    "text": "version the spec of eight has changed we didn't change that number it's still zero then there's a non-standard Dieter",
    "start": "1242159",
    "end": "1247880"
  },
  {
    "text": "um there's an a number over there that's the update number and the rule is pretty",
    "start": "1247880",
    "end": "1253440"
  },
  {
    "text": "straightforward ought for Security even for features right this is a left over",
    "start": "1253440",
    "end": "1258919"
  },
  {
    "text": "from when sun alternated and it was every 3 months it was like SEC synchronized security release that's",
    "start": "1258919",
    "end": "1265200"
  },
  {
    "text": "what they called it and then a feature release then a synchronized security release so it wasn't planned but it",
    "start": "1265200",
    "end": "1270320"
  },
  {
    "text": "turned out that it was out for security except and then the bill number except that you know it didn't stay there we",
    "start": "1270320",
    "end": "1277159"
  },
  {
    "text": "decided to do more frequent security updates so that sort of broke that even odd but we liked it so we changed the",
    "start": "1277159",
    "end": "1283960"
  },
  {
    "text": "rule and we said uh you we'll make it end in five or in one for SC critical",
    "start": "1283960",
    "end": "1289159"
  },
  {
    "text": "patch updates right and we will keep other numbers for unplan security updates and",
    "start": "1289159",
    "end": "1295840"
  },
  {
    "text": "multiples of 20 for our features and I can see the laughter going I mean all of",
    "start": "1295840",
    "end": "1301880"
  },
  {
    "text": "these each one of these decisions made sense at the time but once you string",
    "start": "1301880",
    "end": "1306919"
  },
  {
    "text": "them all together you end up with something ridiculous by the way we realize yeah we introduce PPU PSU it's",
    "start": "1306919",
    "end": "1312400"
  },
  {
    "text": "not in five it's going to be in groups of 10 it went completely Bonkers right so jdk9 we're ditching",
    "start": "1312400",
    "end": "1319440"
  },
  {
    "text": "this and we're going for something that it's closer to semantic versioning um we provide you an API so",
    "start": "1319440",
    "end": "1327000"
  },
  {
    "text": "that you can you version string and Pars in validation so the ga version of nine if you look at version string it'll be",
    "start": "1327000",
    "end": "1333640"
  },
  {
    "text": "nine not 1.9.0 blah blah blah blah security updates we incred you know we",
    "start": "1333640",
    "end": "1341080"
  },
  {
    "text": "have another digit this is for when we add new features if security is all you're doing you're not adding new",
    "start": "1341080",
    "end": "1346880"
  },
  {
    "text": "features so that one remains unchanged zero and we just keep incrementing this one we also leave some gaps because you",
    "start": "1346880",
    "end": "1352799"
  },
  {
    "text": "know there may be a security alert that we didn't plan for and we don't want to have to rumber everything further out so",
    "start": "1352799",
    "end": "1358279"
  },
  {
    "text": "after 9 we'll release 903 the next plan security update will be 906 if we were to do a feature update",
    "start": "1358279",
    "end": "1366679"
  },
  {
    "text": "after 906 it would be 91.6 notice that the six didn't move because we didn't fix security",
    "start": "1366679",
    "end": "1373039"
  },
  {
    "text": "vulnerabilities we just added new features now does that is that a little bit more readable no okay we hope so um we also",
    "start": "1373039",
    "end": "1380880"
  },
  {
    "text": "found when we were looking at code code that would just go and say well let me figure out the version number delete the",
    "start": "1380880",
    "end": "1386279"
  },
  {
    "text": "first two right because it's one dot you don't have to yeah it's going to break",
    "start": "1386279",
    "end": "1391559"
  },
  {
    "text": "sorry um also this means that all of the file names for the J and the jdk change",
    "start": "1391559",
    "end": "1398200"
  },
  {
    "text": "so if you have some sort of automated build system that grabbed the file for you and concatenated things and",
    "start": "1398200",
    "end": "1403440"
  },
  {
    "text": "downloaded the correct one guess what sorry and you know in order to add a",
    "start": "1403440",
    "end": "1409360"
  },
  {
    "text": "little insult to it this is not retroactive and we expect jdka to be",
    "start": "1409360",
    "end": "1414520"
  },
  {
    "text": "around for a long long time so I Envision a long future where we have if",
    "start": "1414520",
    "end": "1420840"
  },
  {
    "text": "version less than you know nine this is your logic if LS n above this is your logic but we think again the only way",
    "start": "1420840",
    "end": "1428320"
  },
  {
    "text": "that you you know stop progressing is if you die so this is the cost of progress this is you know we have to break some",
    "start": "1428320",
    "end": "1434880"
  },
  {
    "text": "eggs there's some other subtle changes in jdk9 that may trip some people up uh",
    "start": "1434880",
    "end": "1442080"
  },
  {
    "text": "there's a bunch of tools that we ship with the jdk that are not really to the same",
    "start": "1442080",
    "end": "1447559"
  },
  {
    "text": "level of standard as the jdk itself in some cases we don't develop them so for",
    "start": "1447559",
    "end": "1453679"
  },
  {
    "text": "example Java DB it's just a repackaging of Apache Derby and it's in the in jdk8",
    "start": "1453679",
    "end": "1460520"
  },
  {
    "text": "it it started shipping with jdk 6 I think or seven in any case we're not going to ship it anymore we figure you",
    "start": "1460520",
    "end": "1466840"
  },
  {
    "text": "know now it's not AIG deal back when we did this it was a big issue to go and try to download some separate",
    "start": "1466840",
    "end": "1472440"
  },
  {
    "text": "software um and this creates a lot of problems right what happens if they rev at a different speed than we do are we",
    "start": "1472440",
    "end": "1477919"
  },
  {
    "text": "going to rev just to keep you n so a bunch of tools are not no longer going to ship in some cases like visual VM we",
    "start": "1477919",
    "end": "1484799"
  },
  {
    "text": "really like it but we don't maintain it you know our team doesn't so it just remains in GitHub go grab it from there",
    "start": "1484799",
    "end": "1491480"
  },
  {
    "text": "um there's some other experimental tools that we thought oh these are cool but",
    "start": "1491480",
    "end": "1496840"
  },
  {
    "text": "you know it's kind of hard to keep up with those experimental tools and now they have better Alternatives so those are going",
    "start": "1496840",
    "end": "1502240"
  },
  {
    "text": "away and we're also changing a few defaults um anybody is familiar with",
    "start": "1502240",
    "end": "1507480"
  },
  {
    "text": "what's the default garbage collection algorithm for the jdk right now and the trivia question is how many",
    "start": "1507480",
    "end": "1515080"
  },
  {
    "text": "people do you think really care yet don't specify it and just rely on the",
    "start": "1515080",
    "end": "1522120"
  },
  {
    "text": "default yeah for those guys they're going to have a problem because we're switching the default right and that's",
    "start": "1522120",
    "end": "1527360"
  },
  {
    "text": "going to be G1 simple fix don't rely on the default you know pass a parameter and tell it which",
    "start": "1527360",
    "end": "1533840"
  },
  {
    "text": "one you want but again um some unified",
    "start": "1533840",
    "end": "1539760"
  },
  {
    "text": "login we don't expect this be a big issue but if you were parsing the output of the",
    "start": "1539760",
    "end": "1545240"
  },
  {
    "text": "log again you may need to just go and rework it we think it makes more sense now and we also have something called a",
    "start": "1545240",
    "end": "1551760"
  },
  {
    "text": "jnlp parsing that was um very permissive if you didn't quite match the spec",
    "start": "1551760",
    "end": "1559080"
  },
  {
    "text": "we would try our best to guess what you intended and we've discovered that that's not a good thing to do because we",
    "start": "1559080",
    "end": "1564799"
  },
  {
    "text": "you know not always get it right and you never correct the mistake if you you",
    "start": "1564799",
    "end": "1570240"
  },
  {
    "text": "know have this thing fixed for you so jlp parsing now if you got something wrong I'll just error out and tell you",
    "start": "1570240",
    "end": "1576840"
  },
  {
    "text": "what do you want me to do please provide the right values and I'll work again then um there's how many um",
    "start": "1576840",
    "end": "1586200"
  },
  {
    "text": "deprecated apis have been removed we started deprecated with Java 1.2 right about I don't know 17 18 years ago",
    "start": "1586200",
    "end": "1596080"
  },
  {
    "text": "how many have we removed none right so I apologize but",
    "start": "1596080",
    "end": "1604600"
  },
  {
    "text": "that means we've trained developers to think that deprecated is just a warning generator what's more we've we've abused",
    "start": "1604600",
    "end": "1611840"
  },
  {
    "text": "deprecated there were some swing classes that have a show and hide option right",
    "start": "1611840",
    "end": "1617640"
  },
  {
    "text": "to show a form form or something and in Java we don't like show and hide so we introduced a set visible true set",
    "start": "1617640",
    "end": "1624279"
  },
  {
    "text": "visible false and show and hide we Mark as deprecated not because we ever planned to remove them or because they",
    "start": "1624279",
    "end": "1630080"
  },
  {
    "text": "were wrong but it's just not as pretty as said visible true and false um jdk9",
    "start": "1630080",
    "end": "1635480"
  },
  {
    "text": "UND deprecates that deprecation you know so it prates",
    "start": "1635480",
    "end": "1641039"
  },
  {
    "text": "them okay so we've deprecated a couple of deprecations um there's also in some",
    "start": "1641039",
    "end": "1646440"
  },
  {
    "text": "cases there's nothing wrong with the API that's there you shouldn't worry about",
    "start": "1646440",
    "end": "1652200"
  },
  {
    "text": "it but there's a better alternative so if you're writing a new program you should use the new one but if you've got",
    "start": "1652200",
    "end": "1658360"
  },
  {
    "text": "some old library that works fine it's okay to continue using the deprecated one right and there's a handful of other",
    "start": "1658360",
    "end": "1664320"
  },
  {
    "text": "deprecated stuff which is we're just trying to get rid of it and we plan to drop it in the next version so even if",
    "start": "1664320",
    "end": "1671200"
  },
  {
    "text": "it's an old stuff if you wanted to run with the next version it'd be great if you go ahead and remove it and before",
    "start": "1671200",
    "end": "1676799"
  },
  {
    "text": "jdk9 there was you could read in the documentation one by one but there was no programmatic way of figuring out",
    "start": "1676799",
    "end": "1682880"
  },
  {
    "text": "which one was which we've added something called enhanced replication which is an annotation where we say yeah",
    "start": "1682880",
    "end": "1689840"
  },
  {
    "text": "this one we plan to remove in the next version there's a four removal to and since we all like tools there is",
    "start": "1689840",
    "end": "1696799"
  },
  {
    "text": "a new tool called J deer scan that you can run against your code and it'll find all of the instance of deprecated and if",
    "start": "1696799",
    "end": "1703519"
  },
  {
    "text": "you pass it the right flag you'll find the ones that are deprecated with for removal equals true so uh We've we're",
    "start": "1703519",
    "end": "1711559"
  },
  {
    "text": "you know you guys are not like the first people to complain about some of these changes we also have to deal with a lot",
    "start": "1711559",
    "end": "1717960"
  },
  {
    "text": "of people within Oracle that use the jdk and unlike most",
    "start": "1717960",
    "end": "1723600"
  },
  {
    "text": "of you they are forced to test it and they're very vocal about these things so they tell us things like you know just",
    "start": "1723600",
    "end": "1730519"
  },
  {
    "text": "having the compiler tell you that's not enough I need to have a tool that will work when I don't have the source code",
    "start": "1730519",
    "end": "1736679"
  },
  {
    "text": "when I'm not going to compile what happens if I use a third party library right I don't have the source code I don't know what they're doing you guys",
    "start": "1736679",
    "end": "1742760"
  },
  {
    "text": "do tell me so there's a bunch of new tools that will help you with",
    "start": "1742760",
    "end": "1748240"
  },
  {
    "text": "this um a bunch of things as I said they're gone most of them we don't think",
    "start": "1748240",
    "end": "1753840"
  },
  {
    "text": "you know uh unsupported Apple apis you know they were Apple specific",
    "start": "1753840",
    "end": "1759799"
  },
  {
    "text": "now there's an equivalent version that's platform independent uh some GC combinations that",
    "start": "1759799",
    "end": "1765159"
  },
  {
    "text": "were deprecated in jdk8 remember those warnings I was mentioning yeah those are warnings on eight they're going to be",
    "start": "1765159",
    "end": "1771600"
  },
  {
    "text": "errors in nine so if you see those warnings do something about them",
    "start": "1771600",
    "end": "1777279"
  },
  {
    "text": "please um and you know perm gen and things like that now I know nobody here ever would",
    "start": "1777279",
    "end": "1785840"
  },
  {
    "text": "choose to use an internal um API and you are very careful you know you don't let",
    "start": "1785840",
    "end": "1791320"
  },
  {
    "text": "any warming pass however when we went and looked at all of those open source",
    "start": "1791320",
    "end": "1797240"
  },
  {
    "text": "libraries we discover uh anybody care to guess about what percentage of them use",
    "start": "1797240",
    "end": "1803120"
  },
  {
    "text": "internal apis I'm talking about non-trivial code anybody thinks more than",
    "start": "1803120",
    "end": "1810320"
  },
  {
    "text": "half more than half more than 80% how about 100% we couldn't find a",
    "start": "1810320",
    "end": "1817480"
  },
  {
    "text": "single non-trivial library that didn't use internal apis as I said in some cases it was for some convenience thing",
    "start": "1817480",
    "end": "1823559"
  },
  {
    "text": "it's not a big deal but what we expect is unless you're writing something really small and you're not using log",
    "start": "1823559",
    "end": "1829919"
  },
  {
    "text": "forj or spring or anything at least you'll have to rev to the next version",
    "start": "1829919",
    "end": "1835440"
  },
  {
    "text": "of those uh libraries so we've been contacting them we've been telling them",
    "start": "1835440",
    "end": "1840600"
  },
  {
    "text": "hey please upgrade these we're seeing your source code and we expect that some of them if not all will have a version",
    "start": "1840600",
    "end": "1847880"
  },
  {
    "text": "ready by the time jdk releases jdk9 and we hope the others will catch up soon after but in the meantime I keep",
    "start": "1847880",
    "end": "1856279"
  },
  {
    "text": "reminding people you are respons for choosing your libraries you inherit whatever vices and virtues they have so",
    "start": "1856279",
    "end": "1862720"
  },
  {
    "text": "it's now on you to ref the library uh likewise there's a few things",
    "start": "1862720",
    "end": "1869880"
  },
  {
    "text": "that we have deprecated in nine some of them we may want to remove later there is a a screenshot of an early access",
    "start": "1869880",
    "end": "1877320"
  },
  {
    "text": "documentation page there has a whole duplicated section you cannot really see it here but there's a long list of",
    "start": "1877320",
    "end": "1883440"
  },
  {
    "text": "things that will remain during nine you can use them but you should plan in removing them for a lat version",
    "start": "1883440",
    "end": "1890840"
  },
  {
    "text": "okay another thing that's important and this is not well there's a long list",
    "start": "1890840",
    "end": "1895880"
  },
  {
    "text": "laundry list of things there uh applets anybody needs to know why that is being",
    "start": "1895880",
    "end": "1901679"
  },
  {
    "text": "deprecated yeah some codex jar jar that's grabbing the same jar and running",
    "start": "1901679",
    "end": "1908799"
  },
  {
    "text": "it through jar twice which for some bizarre reason was supported won't be",
    "start": "1908799",
    "end": "1915559"
  },
  {
    "text": "anymore um other important changes and this is not",
    "start": "1915559",
    "end": "1920760"
  },
  {
    "text": "just nine by the way this happens right now with six seven and eight anybody heard about uh what happened with md5 as",
    "start": "1920760",
    "end": "1927639"
  },
  {
    "text": "a hashing function was a great idea it's no longer considered secure what's the next one",
    "start": "1927639",
    "end": "1934159"
  },
  {
    "text": "that's going that way shaan thank you so what happens your version you know you grab a version of the jdk when you",
    "start": "1934159",
    "end": "1942000"
  },
  {
    "text": "downloaded this thing in 2011 shaan was you know consider save that was the",
    "start": "1942000",
    "end": "1947120"
  },
  {
    "text": "default you went and you signed a bunch of jars with Shawan uh guess what's going to happen",
    "start": "1947120",
    "end": "1953120"
  },
  {
    "text": "soon you're going to have to Reign that jar right",
    "start": "1953120",
    "end": "1958279"
  },
  {
    "text": "so this is one of the few cases in which we go out of our way to tell you with as",
    "start": "1958279",
    "end": "1964120"
  },
  {
    "text": "much warning as possible of a change in security you don't know what you know",
    "start": "1964120",
    "end": "1970360"
  },
  {
    "text": "creating this the internal Braha that it was to be able to publish this so there's a page java.com SL crypto road",
    "start": "1970360",
    "end": "1979000"
  },
  {
    "text": "map where we tell you which algorithms are going to be disabled in what version",
    "start": "1979000",
    "end": "1984559"
  },
  {
    "text": "uh in some cases we cannot say anything because you know if there's a security vulnerability we'll just do it and we'll",
    "start": "1984559",
    "end": "1990159"
  },
  {
    "text": "tell you after the fact but for the ones that we can we'll set it as far away into the future as possible we'll give",
    "start": "1990159",
    "end": "1996760"
  },
  {
    "text": "you instructions if possible so that you can configure your GRE to behave as it will in the future that way you can test",
    "start": "1996760",
    "end": "2003600"
  },
  {
    "text": "it and see whether you're impacted and when we do disable the algorithm or something there",
    "start": "2003600",
    "end": "2010880"
  },
  {
    "text": "are instructions in there for how to turn it back on that is a really bad",
    "start": "2010880",
    "end": "2017600"
  },
  {
    "text": "idea it's no no good no good bad idea so the only excuse on why you should do",
    "start": "2017600",
    "end": "2024080"
  },
  {
    "text": "that it's because you were you know you were sleeping you didn't see any of this you updated and now your choices are",
    "start": "2024080",
    "end": "2030559"
  },
  {
    "text": "downgrade the J even worse idea or temporarily configure the JRE to for",
    "start": "2030559",
    "end": "2037519"
  },
  {
    "text": "examp example accept md5 while you go and resign I've gotten a few questions",
    "start": "2037519",
    "end": "2042799"
  },
  {
    "text": "from groups about well we didn't sign in time what should we do resign and I mean",
    "start": "2042799",
    "end": "2048800"
  },
  {
    "text": "either leave the company or sign your jar either of those works for me",
    "start": "2048800",
    "end": "2056240"
  },
  {
    "text": "okay so prepare for the future now all of this sounds a little scary plenty of warning plenty of time",
    "start": "2056240",
    "end": "2063839"
  },
  {
    "text": "we currently have Early Access builds of jdk9 where all of these things that we're telling you are already in place",
    "start": "2063839",
    "end": "2070878"
  },
  {
    "text": "so if you go to uh jdk9 EA now here's a trick by the way if you search for jdk9",
    "start": "2070879",
    "end": "2077480"
  },
  {
    "text": "Early Access we've recently changed the servers and as far as I can tell no",
    "start": "2077480",
    "end": "2082560"
  },
  {
    "text": "search engine has yet found the correct one so as a stop Gap you can go to the",
    "start": "2082560",
    "end": "2088800"
  },
  {
    "text": "main jdk download page there's a button that says Early Access click on that one",
    "start": "2088800",
    "end": "2094158"
  },
  {
    "text": "that one has the updated links I'm sure you know all the Google being they will catch up eventually you know duck duck",
    "start": "2094159",
    "end": "2100520"
  },
  {
    "text": "all of those guys uh but you can download jdk9 now try all of these we",
    "start": "2100520",
    "end": "2106200"
  },
  {
    "text": "introduced knowing that what was going to trip everybody up was the hiding of the internal apis there's a new tool",
    "start": "2106200",
    "end": "2113200"
  },
  {
    "text": "that's available in jdk 8 and of course early AIS of nine called JPS Java",
    "start": "2113200",
    "end": "2119839"
  },
  {
    "text": "dependencies you run it against bite code so I don't care if you don't have the source code you're meant to run this",
    "start": "2119839",
    "end": "2125560"
  },
  {
    "text": "against your whole project even the libraries that downloaded from GitHub and it'll tell you which modules that",
    "start": "2125560",
    "end": "2133680"
  },
  {
    "text": "particular class uses there's an option that says I don't care about the full verbos thing just tell me about internal",
    "start": "2133680",
    "end": "2139359"
  },
  {
    "text": "ones and it'll tell you in advance yeah here are the ones that are going to blow up if you try to run this on jdk9 so you",
    "start": "2139359",
    "end": "2146800"
  },
  {
    "text": "can use it to find the new ones or at least you'll know which ones to reenable using that command that we mentioned",
    "start": "2146800",
    "end": "2153160"
  },
  {
    "text": "about how to turn it back on okay you know where my preference lies find the correct",
    "start": "2153160",
    "end": "2158400"
  },
  {
    "text": "one so update your own code as I said stop Gap use the combine L options to",
    "start": "2158400",
    "end": "2163720"
  },
  {
    "text": "turn this back on and in some cases you will discover that your favorite library that you downloaded back in you know",
    "start": "2163720",
    "end": "2170920"
  },
  {
    "text": "2001 it's no longer being maintained and it's now a good time to go and find an alternative library that does something",
    "start": "2170920",
    "end": "2177520"
  },
  {
    "text": "better okay um this is the current page we have Early Access builds that we",
    "start": "2177520",
    "end": "2183359"
  },
  {
    "text": "update I think it's weekly if not if not every other week so the bill number is probably off by now but you know when I",
    "start": "2183359",
    "end": "2190319"
  },
  {
    "text": "took this screenshot last week it was 167 um we are done feature wise so what",
    "start": "2190319",
    "end": "2196920"
  },
  {
    "text": "we're doing now is Buck fixes so if you're the kind of person that Waits until it's stable enough",
    "start": "2196920",
    "end": "2203240"
  },
  {
    "text": "because you don't want things to break you're good go get it now it's got a little label saying developer preview",
    "start": "2203240",
    "end": "2209560"
  },
  {
    "text": "that means we're in Buck fixing mode you're in the sweet spot where it's not changing so it's good to change to check",
    "start": "2209560",
    "end": "2216319"
  },
  {
    "text": "it but you still have a little bit of a window so if you find a bug that's important we might be able to fix it",
    "start": "2216319",
    "end": "2222960"
  },
  {
    "text": "please don't be the guy that files a critical bug two days before the release we've been there we don't like them you",
    "start": "2222960",
    "end": "2230359"
  },
  {
    "text": "know you create a lot of problems for us give us a couple of months we'll be very thankful for that",
    "start": "2230359",
    "end": "2238078"
  },
  {
    "text": "okay this is the output of J deps the Java dependencies analysis tool right as",
    "start": "2238520",
    "end": "2245839"
  },
  {
    "text": "I said it's in the since GA version for jdk8 so you already have it I forgot to ask anybody here using",
    "start": "2245839",
    "end": "2253839"
  },
  {
    "text": "anything older than jdk8 right and I'm hoping you have plans",
    "start": "2253839",
    "end": "2261480"
  },
  {
    "text": "to fix that soon yeah some people have good reason but even if you're not using jdka you can still use JBS against your",
    "start": "2261480",
    "end": "2268960"
  },
  {
    "text": "code you know it's it's an external tool it doesn't you don't have to recompile anything so that's good run it I run it here against our",
    "start": "2268960",
    "end": "2276200"
  },
  {
    "text": "own um t updater the tool that we give you to update the time zones and you can",
    "start": "2276200",
    "end": "2281880"
  },
  {
    "text": "see that yeah we use some internal apis and yeah this is the jdk we have to use internal apis um in some cases we will",
    "start": "2281880",
    "end": "2290319"
  },
  {
    "text": "tell you you're using this API here is the recommended um alternative so if you're",
    "start": "2290319",
    "end": "2297400"
  },
  {
    "text": "using B 64 here's the official one in some cases we'll say we have no idea",
    "start": "2297400",
    "end": "2303079"
  },
  {
    "text": "what you should use instead but just get out of that one okay um if you look at the jdk9 Early Access one we have a",
    "start": "2303079",
    "end": "2309920"
  },
  {
    "text": "slightly better recommendations but they will either the jdk8 or 9 will still find all of the internal",
    "start": "2309920",
    "end": "2317240"
  },
  {
    "text": "apis and this is my screenshot of that secret command well",
    "start": "2317680",
    "end": "2323960"
  },
  {
    "text": "not secret but here's what you do you do add exports you say the module and which",
    "start": "2323960",
    "end": "2330319"
  },
  {
    "text": "package and who do you want to expose that to all unnamed is the automatic",
    "start": "2330319",
    "end": "2337079"
  },
  {
    "text": "name that that all code that it's not module gets so more likely than not that's the one you're going to get and",
    "start": "2337079",
    "end": "2342200"
  },
  {
    "text": "you have to do this not at the API level but at the package level so you may have to have as in this case several",
    "start": "2342200",
    "end": "2349079"
  },
  {
    "text": "instances and no we're not going to make it any easier and yes we could but that would be missing the",
    "start": "2349079",
    "end": "2355319"
  },
  {
    "text": "point okay as I said we have a new development Paradigm we're going to",
    "start": "2355319",
    "end": "2361599"
  },
  {
    "text": "switch to uh try to get to a faster release model I'll let George cover that in a minute um we're trying to adapt uh",
    "start": "2361599",
    "end": "2369839"
  },
  {
    "text": "a lot of new changes that we've been holding back on so here are some",
    "start": "2369839",
    "end": "2375400"
  },
  {
    "text": "additional tools to adopt to the new paradigm right ahead of time",
    "start": "2375400",
    "end": "2383119"
  },
  {
    "text": "compilation um I think I have a different slide on this one because yeah I forgot about the protip on this one so",
    "start": "2383119",
    "end": "2390000"
  },
  {
    "text": "as you know Java interpret interprets your code and it compiles it while it's",
    "start": "2390000",
    "end": "2396160"
  },
  {
    "text": "running optim for that particular machine so we figure H could we do that",
    "start": "2396160",
    "end": "2401599"
  },
  {
    "text": "for you and give you an an optional step so we now with jdk9 offer the",
    "start": "2401599",
    "end": "2407640"
  },
  {
    "text": "alternative of instead of you having to compile every single time you can compile ahead of time pretty sure I had a little Pro tip",
    "start": "2407640",
    "end": "2415040"
  },
  {
    "text": "here at the bottom which is there's a reason why we don't pre-compile something for example the jdk and put it",
    "start": "2415040",
    "end": "2420480"
  },
  {
    "text": "out there the reason is because you should really use this on a system that's as close as possible to the the",
    "start": "2420480",
    "end": "2427440"
  },
  {
    "text": "one that matches your production environment because this thing optimizes for your environment right the jdk will",
    "start": "2427440",
    "end": "2434880"
  },
  {
    "text": "produce different bite code if you're running on a crappy machine with one core and a lot you know very little",
    "start": "2434880",
    "end": "2440359"
  },
  {
    "text": "memory than if you have a monster machine with multicores and a lot of memory so do not be as foolish as to",
    "start": "2440359",
    "end": "2447119"
  },
  {
    "text": "think that you can ahead of time compile it in one machine and then give it to everybody that's why this is a tool that comes with the jdk you're supposed to",
    "start": "2447119",
    "end": "2453920"
  },
  {
    "text": "run it on your production machine or as close as possible okay for now we",
    "start": "2453920",
    "end": "2459960"
  },
  {
    "text": "support ahead of time compiling That Base module and experimentally everything else okay",
    "start": "2459960",
    "end": "2468400"
  },
  {
    "text": "so another point that we've heard is yeah that's a cool new API but I want my",
    "start": "2468400",
    "end": "2474400"
  },
  {
    "text": "jar file to work as well with older versions so that means that I cannot use",
    "start": "2474400",
    "end": "2479520"
  },
  {
    "text": "these new apis I canot use Lambda because somebody may be running it on seven and you know I don't want to have",
    "start": "2479520",
    "end": "2486319"
  },
  {
    "text": "a jdk for seven a jdk 48 so since we want to avoid that we've created the",
    "start": "2486319",
    "end": "2491520"
  },
  {
    "text": "option of a multi-release jar file in this example over here if you run this",
    "start": "2491520",
    "end": "2496640"
  },
  {
    "text": "jar against jdk 8 or lower these are the classes a b c d however if you run it on",
    "start": "2496640",
    "end": "2503480"
  },
  {
    "text": "jdk 9 instead of this a class use this a class which will use some API that's",
    "start": "2503480",
    "end": "2509200"
  },
  {
    "text": "only available in nine and instead of this B Class here is a more efficient way using apis that are already",
    "start": "2509200",
    "end": "2514839"
  },
  {
    "text": "available in nine you still have to maintain the code for 9 and8 but now you can just package it in a single thing",
    "start": "2514839",
    "end": "2520280"
  },
  {
    "text": "and give it to somebody and it will do the right thing depending on which environment it's running",
    "start": "2520280",
    "end": "2526000"
  },
  {
    "text": "on I told you I had see I copied the slide and that was the pro tip so I've already covered this and the pro tip use",
    "start": "2526000",
    "end": "2533359"
  },
  {
    "text": "it on your production machine not on the development one okay another thing that has",
    "start": "2533359",
    "end": "2541240"
  },
  {
    "text": "changed we went from one J to rule them all to a customized runtime we did this",
    "start": "2541240",
    "end": "2546920"
  },
  {
    "text": "for embedded not wa for cloud deployments the point is we started this",
    "start": "2546920",
    "end": "2552079"
  },
  {
    "text": "with a use case which was embedded devices right uh where you have um a",
    "start": "2552079",
    "end": "2557720"
  },
  {
    "text": "machine that's not escapable and we figured well do you really need a full",
    "start": "2557720",
    "end": "2563720"
  },
  {
    "text": "JRE if you're only trying to run a very small application right the J has a bunch of libraries uh to your point it",
    "start": "2563720",
    "end": "2570119"
  },
  {
    "text": "has corba it has login it has you know a large number of you know desktop modules",
    "start": "2570119",
    "end": "2576400"
  },
  {
    "text": "what if I don't need any of that why do I have to ship with it and the Paradigm",
    "start": "2576400",
    "end": "2581520"
  },
  {
    "text": "has shipped right back when this was decided the idea was you're going to have one J in your system and it's going",
    "start": "2581520",
    "end": "2588760"
  },
  {
    "text": "to run every Java application so therefore you needed that J to be",
    "start": "2588760",
    "end": "2594040"
  },
  {
    "text": "complete to have everything because even though you may want to run just a hello world somebody else is going to try to",
    "start": "2594040",
    "end": "2600040"
  },
  {
    "text": "run some very different Java application and the J must be able to take it right",
    "start": "2600040",
    "end": "2605680"
  },
  {
    "text": "and this was to minimize down download size you remember when you had to dial up and thing took forever for download",
    "start": "2605680",
    "end": "2612119"
  },
  {
    "text": "you don't want to have multiple Gres for that um 300 megabytes that was gigantic right",
    "start": "2612119",
    "end": "2620359"
  },
  {
    "text": "you don't want to have multiple instances of that on your system and serious applications require one large",
    "start": "2620359",
    "end": "2626520"
  },
  {
    "text": "app container and you know they you set that up and everything runs against that now we're better off minimizing",
    "start": "2626520",
    "end": "2635359"
  },
  {
    "text": "interdependencies each application can have its own custom runtime and I have in my phone 600 megab of games and 20 20",
    "start": "2635359",
    "end": "2642839"
  },
  {
    "text": "GB of media right so 200 that's nothing and you require hundreds of thousands of",
    "start": "2642839",
    "end": "2649599"
  },
  {
    "text": "instances so these are the jdk modules blue ones are the Java specification",
    "start": "2649599",
    "end": "2657160"
  },
  {
    "text": "green ones are some jdk black ones are I'm sorry Java FX black ones are jdk and",
    "start": "2657160",
    "end": "2663079"
  },
  {
    "text": "there's one incubator module which is a special module which means this one is not part of the specification we're",
    "start": "2663079",
    "end": "2669200"
  },
  {
    "text": "still working on it go ahead and try it but don't build production systems on it because it's not going to be there in",
    "start": "2669200",
    "end": "2674760"
  },
  {
    "text": "the next version it's going to change right we want feedback my example I just these are the",
    "start": "2674760",
    "end": "2681280"
  },
  {
    "text": "Java modules and their own dependencies imagine that I write an application and I decide of these I need",
    "start": "2681280",
    "end": "2689079"
  },
  {
    "text": "apis that say I want SQL roset and Java activation right U since those modules",
    "start": "2689079",
    "end": "2697480"
  },
  {
    "text": "depend on other modules I could create my little graph and say that's what my application needs so rather than having",
    "start": "2697480",
    "end": "2703359"
  },
  {
    "text": "a full JRE which is I don't know couple of hundred megabytes how about I create",
    "start": "2703359",
    "end": "2708720"
  },
  {
    "text": "a custom runtime and by the way let's include my application in that runtime no need to put it as a separate jar it's",
    "start": "2708720",
    "end": "2714520"
  },
  {
    "text": "just another module the whole thing now it's at 40 megabytes so I can since I'm",
    "start": "2714520",
    "end": "2721000"
  },
  {
    "text": "not sharing the J this is notice that the title has changed I'm going to roll back Java modules",
    "start": "2721000",
    "end": "2727839"
  },
  {
    "text": "this is no longer a Java runtime this is a custom runtime for your application it can only run applications that rely on",
    "start": "2727839",
    "end": "2733480"
  },
  {
    "text": "that so this is what you can do now with jlink and jdk9 we think this will make a lot of",
    "start": "2733480",
    "end": "2740040"
  },
  {
    "text": "sense when you are trying to create an application in a container that it's self-contained and now I'm going to give",
    "start": "2740040",
    "end": "2745559"
  },
  {
    "text": "it back give the mic back to George and let's see if we can come back for questions thanks",
    "start": "2745559",
    "end": "2752680"
  },
  {
    "text": "reia okay so um aelo is already started uh sort of hinting towards uh a",
    "start": "2754280",
    "end": "2760160"
  },
  {
    "text": "direction that we're going I think it is important to remember that um even with the benefits that the module system",
    "start": "2760160",
    "end": "2765920"
  },
  {
    "text": "brings you in nine we look at that as not you know just the end of a many many",
    "start": "2765920",
    "end": "2771040"
  },
  {
    "text": "year process I think we started uh gosh 2008 or earlier yeah so so that's",
    "start": "2771040",
    "end": "2778720"
  },
  {
    "text": "that's been running for quite a long time um but we also think that this is really the start of something new",
    "start": "2778720",
    "end": "2784520"
  },
  {
    "text": "because I think what's going to happen here is um the facilities that the module system provides are going to make",
    "start": "2784520",
    "end": "2790400"
  },
  {
    "text": "it you know even easier for people in the ecosystem to create and maintain",
    "start": "2790400",
    "end": "2795520"
  },
  {
    "text": "libraries over time um and and so I I I think that's clearly something that's you know been a strength for Java over",
    "start": "2795520",
    "end": "2802040"
  },
  {
    "text": "the years um and and this will just make that even even easier for people uh that",
    "start": "2802040",
    "end": "2807119"
  },
  {
    "text": "along with things like multi-release jars and and that sort of thing and in terms of you know what you see when you",
    "start": "2807119",
    "end": "2813200"
  },
  {
    "text": "download the version now and you try out these tools you try out the system you try out jlink um is is really sort of",
    "start": "2813200",
    "end": "2820240"
  },
  {
    "text": "the starting point the things aelia was talking about with experiments in aot and and uh footprint reduction and that",
    "start": "2820240",
    "end": "2826760"
  },
  {
    "text": "sort of thing um we're going to be able to do a lot of things over the coming versions that continue down the path of",
    "start": "2826760",
    "end": "2833480"
  },
  {
    "text": "making improvements to that um what we've really done in nine is sort of shown that that sort of thing is possible and tried to make it good it's",
    "start": "2833480",
    "end": "2840240"
  },
  {
    "text": "sort of like with um with lambdas when we introduced them in eight um our goal was really to try to make sure that the",
    "start": "2840240",
    "end": "2846400"
  },
  {
    "text": "performance of lambas uh and streams were basically as good as or slightly",
    "start": "2846400",
    "end": "2853960"
  },
  {
    "text": "better than the equivalent if you you know use the old way of doing things um you know with uh Anonymous internet",
    "start": "2853960",
    "end": "2860240"
  },
  {
    "text": "classes and fun stuff like that um but basically you know we knew that uh",
    "start": "2860240",
    "end": "2865920"
  },
  {
    "text": "there's sort of a continuing road map of things that we can do to make the performance there even better over time um and so we certainly intend to do that",
    "start": "2865920",
    "end": "2873280"
  },
  {
    "text": "um in terms of other things that are coming you know I get a lot of people starting to ask me now well you know what's what's going to happen after 9",
    "start": "2873280",
    "end": "2880480"
  },
  {
    "text": "and uh you know you can kind of look at this you'll notice there are no dates on this but this is just to give you an",
    "start": "2880480",
    "end": "2885640"
  },
  {
    "text": "idea of sort of what the release model looked like right which is a period",
    "start": "2885640",
    "end": "2890920"
  },
  {
    "text": "where we're doing uh development and Early Access bills uh a period where there's sort of um free publicly",
    "start": "2890920",
    "end": "2897040"
  },
  {
    "text": "available bills and then sort of a a long tail of of support that exists um",
    "start": "2897040",
    "end": "2903040"
  },
  {
    "text": "you know usually commercial support from us and and from other vendors um and and so you know that's quite a long period",
    "start": "2903040",
    "end": "2909200"
  },
  {
    "text": "of time and as you can see there's a lot of stuff that's being maintained at the same time um now on the one hand that's",
    "start": "2909200",
    "end": "2915040"
  },
  {
    "text": "that's very good it means that there's sort of stability and predictability well except there isn't always predictability and one of the reasons is",
    "start": "2915040",
    "end": "2921599"
  },
  {
    "text": "that uh in the past for Java SE there's always been this mode of tying a a big",
    "start": "2921599",
    "end": "2927760"
  },
  {
    "text": "driving major feature um to a release even before you've started the release",
    "start": "2927760",
    "end": "2933079"
  },
  {
    "text": "and so we we we all know now in 2017 software developers that that's really",
    "start": "2933079",
    "end": "2939040"
  },
  {
    "text": "not such a great idea that's kind of a recipe for uh you know things being delayed or or other things happening and",
    "start": "2939040",
    "end": "2945240"
  },
  {
    "text": "indeed we've seen that with with major releases over the year over the years and so you know what what we are hoping",
    "start": "2945240",
    "end": "2951119"
  },
  {
    "text": "to do um is get to a point where instead of releasing major functionality on a",
    "start": "2951119",
    "end": "2956920"
  },
  {
    "text": "very very long schedule we actually have regular releases that come out far more often and then we work on features in",
    "start": "2956920",
    "end": "2964960"
  },
  {
    "text": "projects in open jdk until are done and when they're done they go in right but",
    "start": "2964960",
    "end": "2970520"
  },
  {
    "text": "done actually means not we're going to put it in and then it's going to have two years of bug fixing right it's like",
    "start": "2970520",
    "end": "2975960"
  },
  {
    "text": "it's already fixed we know that the quality is good etc etc um and so you know that's sort of a different mode of",
    "start": "2975960",
    "end": "2982079"
  },
  {
    "text": "working now to be fair we have actually had that mode of working for the update releases right so basically when you saw",
    "start": "2982079",
    "end": "2989359"
  },
  {
    "text": "I think aelo showed the version string before 820 840 860 you know these are",
    "start": "2989359",
    "end": "2995040"
  },
  {
    "text": "releases that were essentially minor update releases but had functionality improvements in them right and what",
    "start": "2995040",
    "end": "3001040"
  },
  {
    "text": "we're talking about doing now is the same thing except not only having minor",
    "start": "3001040",
    "end": "3006960"
  },
  {
    "text": "minor release changes that is to say implementation improvements but also introducing new things in the language",
    "start": "3006960",
    "end": "3013599"
  },
  {
    "text": "new apis um and and more substantial changes in in the VM and so basically",
    "start": "3013599",
    "end": "3019400"
  },
  {
    "text": "what that will allow us to do I think is go to a model that is far",
    "start": "3019400",
    "end": "3024960"
  },
  {
    "text": "Tighter and then ALS ultimately I think what we've seen in in a lot of um programming uh communities that have",
    "start": "3024960",
    "end": "3031559"
  },
  {
    "text": "gone to this model is that you know rather than doing um support for every every one of these there's typically",
    "start": "3031559",
    "end": "3038520"
  },
  {
    "text": "some kind of long-term support type of model right where uh every few releases",
    "start": "3038520",
    "end": "3043839"
  },
  {
    "text": "there's something that's designated as a long-term support Branch um so anyway I I do want to kind of make it clear you",
    "start": "3043839",
    "end": "3050480"
  },
  {
    "text": "know this is something that uh we're considering right now there's a bunch of discussion in open jdk and amongst",
    "start": "3050480",
    "end": "3056960"
  },
  {
    "text": "people who are are collaborating there about that um we're very committed to",
    "start": "3056960",
    "end": "3062280"
  },
  {
    "text": "the stability and quality of java and keeping that high we know that's something that all of our all of our users uh value tremendously um so you",
    "start": "3062280",
    "end": "3070319"
  },
  {
    "text": "know what we want to do is make sure that if we're going to a more rapid delivery model we're you know doing it",
    "start": "3070319",
    "end": "3076839"
  },
  {
    "text": "in a way that's going to be able to help let us keep those core principles um strong um and we really think that this",
    "start": "3076839",
    "end": "3084119"
  },
  {
    "text": "shift with nine and with modules is a very very key part of being able to get there right because basically by",
    "start": "3084119",
    "end": "3090680"
  },
  {
    "text": "reducing the security attack area um by you know reducing the compatibility surface area and making it possible to",
    "start": "3090680",
    "end": "3098280"
  },
  {
    "text": "evolve the internal implementation because uh you know it's far less likely that code out there is going to be",
    "start": "3098280",
    "end": "3103920"
  },
  {
    "text": "depending on it um that will let us get to a point where we can actually validate the changes that we're making",
    "start": "3103920",
    "end": "3109760"
  },
  {
    "text": "are not going to break you and your applications uh and libraries that you're using okay so you know basically",
    "start": "3109760",
    "end": "3117559"
  },
  {
    "text": "uh I I hope that you you know this has given you a little bit of insight into how we think about this some of the kind",
    "start": "3117559",
    "end": "3123880"
  },
  {
    "text": "of balancing that we do um all the time with all the decisions that we make um you know trying to continue to evolve",
    "start": "3123880",
    "end": "3130640"
  },
  {
    "text": "Java um and you know bring you new functionality um and bring it to you in a timely fashion not make you have to",
    "start": "3130640",
    "end": "3136799"
  },
  {
    "text": "wait you know another two years for the next major release including major functionality but also smaller things",
    "start": "3136799",
    "end": "3142599"
  },
  {
    "text": "you know we' like to get those in your hands sooner um and uh we hope that you have a great experience with nine as",
    "start": "3142599",
    "end": "3148079"
  },
  {
    "text": "aelo said um eight is going to be around for a long time so if you find when you start using things with nine that it's a",
    "start": "3148079",
    "end": "3154559"
  },
  {
    "text": "bit challenging don't stress out about it um you can continue using eight but look at nine as you know what what's",
    "start": "3154559",
    "end": "3161520"
  },
  {
    "text": "coming how can I take advantage of of what's there so uh that is it for the",
    "start": "3161520",
    "end": "3167200"
  },
  {
    "text": "talk",
    "start": "3167200",
    "end": "3170200"
  }
]