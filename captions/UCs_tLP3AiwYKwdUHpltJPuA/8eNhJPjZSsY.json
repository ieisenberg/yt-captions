[
  {
    "text": "[Applause] thank",
    "start": "210",
    "end": "5560"
  },
  {
    "text": "you hello can you all hear me excellent hi um my name is Sebastian",
    "start": "5919",
    "end": "13360"
  },
  {
    "text": "uh you already got an introduction I'm from Sweden uh which is why I've got a bit of an accent but I've been here in",
    "start": "13360",
    "end": "19439"
  },
  {
    "text": "Australia for nearly 10 years and this year I'll actually be celebrating Christmas in Sweden for the first time",
    "start": "19439",
    "end": "25720"
  },
  {
    "text": "in 10 years I'm really not looking forward to the weather um",
    "start": "25720",
    "end": "30800"
  },
  {
    "text": "uh as Luke was saying uh I'm currently working at culture amp it's been 3 weeks so far uh and before that I was at enado",
    "start": "30800",
    "end": "39480"
  },
  {
    "text": "for well over 5 years and for the last two or three years there I I was heading up to software architecture efforts and",
    "start": "39480",
    "end": "46320"
  },
  {
    "text": "particularly around event sourcing So today we're going to be talking about event sourcing event sourcing with cqs",
    "start": "46320",
    "end": "53640"
  },
  {
    "text": "which will include a little bit of DDD in it I want to give you a more balanced",
    "start": "53640",
    "end": "58800"
  },
  {
    "text": "View at both the up side and the downside and we'll also be talking about this thing that you may or may not have heard of which is called eventual",
    "start": "58800",
    "end": "65400"
  },
  {
    "text": "consistency so let's Dive Right In what is event sourcing well many",
    "start": "65400",
    "end": "73439"
  },
  {
    "text": "systems uh that you're familiar with probably log events you you send it to a log file or you store it in a database",
    "start": "73439",
    "end": "80360"
  },
  {
    "text": "table somewhere you send it into Splunk you do something with it but it's really important to know that event logging is",
    "start": "80360",
    "end": "86840"
  },
  {
    "text": "not the same as event sourcing logging event uh for whatever reasons is not the same",
    "start": "86840",
    "end": "93360"
  },
  {
    "text": "as sourcing events because with event sourcing we're forcing the current state",
    "start": "93360",
    "end": "98399"
  },
  {
    "text": "at any point in time to be derived from the events that we have in our",
    "start": "98399",
    "end": "104040"
  },
  {
    "text": "system um I want to mention this guy his name is Greg young",
    "start": "104040",
    "end": "109520"
  },
  {
    "text": "um most of what I'm telling you today is going to be uh his work uh I offer very",
    "start": "109520",
    "end": "116920"
  },
  {
    "text": "few original thoughts it's mostly stolen directly from him but he even though he",
    "start": "116920",
    "end": "122159"
  },
  {
    "text": "popularized event sourcing he didn't invent it um event sourcing as a concept",
    "start": "122159",
    "end": "127360"
  },
  {
    "text": "is at least 500 years old um Greg says that he has tracked event sourcing back",
    "start": "127360",
    "end": "134400"
  },
  {
    "text": "to ancient Mesopotamia which is way longer than 500 years I'm not sure about the the Mesopotamia thing but I do",
    "start": "134400",
    "end": "142200"
  },
  {
    "text": "believe in the 500 years and the reason for why this is true is that most mature",
    "start": "142200",
    "end": "148040"
  },
  {
    "text": "Industries as we know them today are already event sourced and have been for a long time the finance world the",
    "start": "148040",
    "end": "154959"
  },
  {
    "text": "accounting World insurance medical legal all of these industries that are way more mature than our computer and",
    "start": "154959",
    "end": "161879"
  },
  {
    "text": "Technology Industries are already EV sourced and the canonical example is of course your bank",
    "start": "161879",
    "end": "168720"
  },
  {
    "text": "account do you think that the balance of your bank account is simply a column",
    "start": "168720",
    "end": "176840"
  },
  {
    "text": "sitting somewhere in a Rel current state database table",
    "start": "176840",
    "end": "182879"
  },
  {
    "text": "somewhere really it might be might be sitting there but is that the source of Truth for it because what if you",
    "start": "182879",
    "end": "188760"
  },
  {
    "text": "disagree with your bank what if you say I actually think I should have $1,000 and your bank says no it's $100",
    "start": "188760",
    "end": "196080"
  },
  {
    "text": "the column says so no no the account balance is an",
    "start": "196080",
    "end": "203159"
  },
  {
    "text": "equation it is the sum of all of the transactions that have occurred over",
    "start": "203159",
    "end": "209360"
  },
  {
    "text": "Theory history of that account and this this is event sourcing we can manually",
    "start": "209360",
    "end": "215360"
  },
  {
    "text": "calculate going through Hand by hand which is what they used to do when there weren computers around and and add up",
    "start": "215360",
    "end": "222400"
  },
  {
    "text": "all the debits and the credits and we can derive the balance from that and this is event",
    "start": "222400",
    "end": "228040"
  },
  {
    "text": "sourcing in event sourcing all of your current state is is is transient um your source of Truth are",
    "start": "228040",
    "end": "235480"
  },
  {
    "text": "the events not the state and in this context when I say events we",
    "start": "235480",
    "end": "244079"
  },
  {
    "text": "describe things that have happened that are of s uh are of significant interest",
    "start": "244079",
    "end": "249760"
  },
  {
    "text": "to you they are business facts they're expressed in the past tense because they are facts they have",
    "start": "249760",
    "end": "256120"
  },
  {
    "text": "there are things that have happened so in your bank domain I know there's probably a few people that may already work at Banks here so you know your",
    "start": "256120",
    "end": "263120"
  },
  {
    "text": "domain better than I do but you'd probably see events that look something like this new account application",
    "start": "263120",
    "end": "269360"
  },
  {
    "text": "received custom identity verified we've opened an account funds have been deposited",
    "start": "269360",
    "end": "274919"
  },
  {
    "text": "withdrawn transferred and we've issued an account statement and so on and so forth in another domain the calendar",
    "start": "274919",
    "end": "281600"
  },
  {
    "text": "domain you probably all have calendars uh we have appointments that have been scheduled and rescheduled invitations",
    "start": "281600",
    "end": "288440"
  },
  {
    "text": "that have been extended sent accepted declined etc etc at culture amp what we",
    "start": "288440",
    "end": "294320"
  },
  {
    "text": "do is uh we make it easy for people to um rece receive an act on feedback from",
    "start": "294320",
    "end": "301680"
  },
  {
    "text": "their employees and so what we do is we send out surveys that measure employment Employee Engagement these are some of",
    "start": "301680",
    "end": "309440"
  },
  {
    "text": "the events that we see in our systems adding new employees uh launching survey",
    "start": "309440",
    "end": "315320"
  },
  {
    "text": "answering questions and so on and so forth with event sourcing these type of",
    "start": "315320",
    "end": "320360"
  },
  {
    "text": "events become the very center of your domain and modeling them well is very",
    "start": "320360",
    "end": "327600"
  },
  {
    "text": "crucial putting it more into prti practice uh one of the other examples",
    "start": "327600",
    "end": "333000"
  },
  {
    "text": "that I can give is is if we were to build a shopping cart for an e-commerce website that's what inv was doing we we",
    "start": "333000",
    "end": "339120"
  },
  {
    "text": "had a big e-commerce website well they still do I but you know",
    "start": "339120",
    "end": "345560"
  },
  {
    "text": "um the way that you would probably model this in your current state relational",
    "start": "345560",
    "end": "350960"
  },
  {
    "text": "database or in your document database or whatever technology you would choose is is that you would have a cut model uh uh",
    "start": "350960",
    "end": "359680"
  },
  {
    "text": "would have some line items that were associated with that it would have a shipping address and so on and so forth and we've been told or at least I've",
    "start": "359680",
    "end": "366360"
  },
  {
    "text": "been told when I was learning how to do all of this that the shape of this the",
    "start": "366360",
    "end": "371680"
  },
  {
    "text": "shape of this data is the most important thing being able to tease out these",
    "start": "371680",
    "end": "377240"
  },
  {
    "text": "Concepts and these these uh uh these things that's the most important thing",
    "start": "377240",
    "end": "383319"
  },
  {
    "text": "but we can also express the same data in events here's shpping card we we start",
    "start": "383319",
    "end": "390599"
  },
  {
    "text": "with an empty one and then we add an item and then we add another item and then we provide a shipping",
    "start": "390599",
    "end": "396360"
  },
  {
    "text": "address and then we can build this from this so using these events we can",
    "start": "396360",
    "end": "404599"
  },
  {
    "text": "constitute we can rebuild this current state but what we end up storing are the",
    "start": "404599",
    "end": "412280"
  },
  {
    "text": "events and all of this current state all all all of all of this that becomes",
    "start": "413240",
    "end": "418759"
  },
  {
    "text": "disposable it becomes a case a case that can be",
    "start": "418759",
    "end": "424280"
  },
  {
    "text": "deleted or regenerated at any at any time and and at the fundamental Heart Of It event sourcing is nothing but a",
    "start": "424280",
    "end": "430800"
  },
  {
    "text": "different way of storing information but it is a different way",
    "start": "430800",
    "end": "437199"
  },
  {
    "text": "that has fundamental consequences because with event sourcing all of your data is a penned only and this is a big",
    "start": "437199",
    "end": "443759"
  },
  {
    "text": "deal because it means that all of your data is immutable you can't change it",
    "start": "443759",
    "end": "449759"
  },
  {
    "text": "so what happens when there are mistakes because of course there are going to be mistakes people people do things that",
    "start": "449759",
    "end": "457680"
  },
  {
    "text": "they shouldn't do or or uh they changed their minds or whatever well my question",
    "start": "457680",
    "end": "463919"
  },
  {
    "text": "back to you is how does an accountant deal with a mistake if they accidentally transfer $1,000 and they were meant to",
    "start": "463919",
    "end": "471240"
  },
  {
    "text": "transfer $10,000 what what what what what do they do do they simply go back",
    "start": "471240",
    "end": "476919"
  },
  {
    "text": "and add zero to the that initial transaction no of course not that's not how the accounting World Works what they",
    "start": "476919",
    "end": "483000"
  },
  {
    "text": "would do is they would then transfer an additional $9,000 or actually they probably wouldn't do that either because",
    "start": "483000",
    "end": "489360"
  },
  {
    "text": "that's not how accountants work they would get the receiving party to transfer back the original $1,000 and",
    "start": "489360",
    "end": "495680"
  },
  {
    "text": "then they would transfer the full 10,000 back again um and in event sourcing we",
    "start": "495680",
    "end": "501639"
  },
  {
    "text": "call these correction events so in our shopping cart",
    "start": "501639",
    "end": "507159"
  },
  {
    "text": "example if we add an item to the shopping cart and we didn't mean to or",
    "start": "507159",
    "end": "512240"
  },
  {
    "text": "we changed our mind we don't we no longer want to buy it we can remove that and we do that by capturing this item",
    "start": "512240",
    "end": "519719"
  },
  {
    "text": "removed from cart event instead now are these the same",
    "start": "519719",
    "end": "527480"
  },
  {
    "text": "thing anyone yes no no the current state is the",
    "start": "530000",
    "end": "538000"
  },
  {
    "text": "same right the actual result if we run all of these",
    "start": "538000",
    "end": "543240"
  },
  {
    "text": "events is exactly the same but they're they're different",
    "start": "543240",
    "end": "550480"
  },
  {
    "text": "right in your system the thing that you're going to go back on on Monday and work on can you think of two separate",
    "start": "550480",
    "end": "557680"
  },
  {
    "text": "use cases that result in the same current",
    "start": "557680",
    "end": "563200"
  },
  {
    "text": "state if you can then you're losing data somewhere along the way you are losing",
    "start": "563200",
    "end": "570480"
  },
  {
    "text": "data because you have two different news cases that end up in the same current state now my follow-up question to that",
    "start": "570480",
    "end": "576880"
  },
  {
    "text": "is how do you determine what data you're happy to lose and did you get your CEO's",
    "start": "576880",
    "end": "583600"
  },
  {
    "text": "permission to lose that data chances are probably not I try to never lose data it's one of",
    "start": "583600",
    "end": "592399"
  },
  {
    "text": "the fundamental tenants that I uh try to try to use in my career and",
    "start": "592399",
    "end": "600800"
  },
  {
    "text": "and with everything that I do and I do this because I don't know how to Value",
    "start": "600800",
    "end": "606760"
  },
  {
    "text": "data the data that we that we that we have today has potential future value",
    "start": "606760",
    "end": "612440"
  },
  {
    "text": "that I can't qualify or quantify um and this is the main benefit",
    "start": "612440",
    "end": "618360"
  },
  {
    "text": "that we get from event sourcing is we don't lose it because at some point the",
    "start": "618360",
    "end": "624000"
  },
  {
    "text": "CEO will come and say you know what people that have removed stuff from the shopping shopping carts chances are they",
    "start": "624000",
    "end": "630800"
  },
  {
    "text": "might still want to buy that right so can we do like a direct marketing",
    "start": "630800",
    "end": "636160"
  },
  {
    "text": "campaign to every use that's removed something from it you know all that sort of stuff and if my world is current",
    "start": "636160",
    "end": "643160"
  },
  {
    "text": "state I would say absolutely sure we'll start capturing that data now and come back in six months and we can run the",
    "start": "643160",
    "end": "649399"
  },
  {
    "text": "campaign but in an event sourcing world we can just go back look at all those",
    "start": "649399",
    "end": "655440"
  },
  {
    "text": "events and we can write what we call a projection and we'll talk more about that is in a",
    "start": "655440",
    "end": "661240"
  },
  {
    "text": "minute the point is we're not loosing data and when we're not loosing data we can come up with very new and",
    "start": "661240",
    "end": "666760"
  },
  {
    "text": "interesting ways to interpret that data over time and we also get a time machine which is which is cool",
    "start": "666760",
    "end": "674920"
  },
  {
    "text": "um do you want to know what the states of a particular thing look like",
    "start": "674920",
    "end": "680760"
  },
  {
    "text": "approximately I I try to get the timing right but uh it's supposed to be exactly",
    "start": "680760",
    "end": "685880"
  },
  {
    "text": "one year ago but I'm about 3 minutes out um anyhow no problem I can I can I can",
    "start": "685880",
    "end": "693959"
  },
  {
    "text": "we can we can get the current state of the system as of this particular point in time because an event an eventsour",
    "start": "693959",
    "end": "700160"
  },
  {
    "text": "system is deterministic you're probably thinking",
    "start": "700160",
    "end": "706320"
  },
  {
    "text": "sure sure that's all well and good but it can't possible possibly scale um what",
    "start": "706320",
    "end": "711399"
  },
  {
    "text": "if you have a lot of events and that's where this whole cqrs thing comes in",
    "start": "711399",
    "end": "718519"
  },
  {
    "text": "cqrs is is short for command query responsibility segregation um it's built on another",
    "start": "718519",
    "end": "726160"
  },
  {
    "text": "pattern called cqs which is command query separation command query separation or",
    "start": "726160",
    "end": "731760"
  },
  {
    "text": "cqs states that a method in a class is only allowed to ever return state or mutate State it's not allowed to do both",
    "start": "731760",
    "end": "739160"
  },
  {
    "text": "cqrs is what I call CQ cqrs is what I call cqs on steroids which takes that",
    "start": "739160",
    "end": "745639"
  },
  {
    "text": "same concept of separating the mutation and the turning of state to one level up",
    "start": "745639",
    "end": "751920"
  },
  {
    "text": "or several layers up effectively what it does is it separates reads from",
    "start": "751920",
    "end": "758120"
  },
  {
    "text": "rights um and the a famous quote that I really like to use when talking about",
    "start": "758120",
    "end": "764199"
  },
  {
    "text": "cqs and cqs is this asking a question should not change the",
    "start": "764199",
    "end": "771279"
  },
  {
    "text": "answer now it's entirely possible to use event sourcing without cqs a lot of",
    "start": "772240",
    "end": "777760"
  },
  {
    "text": "people get these two things complain conflated and it's also really very possible to use cqs without event",
    "start": "777760",
    "end": "783519"
  },
  {
    "text": "sourcing it's just that they go really well together um so bear that in mind as we",
    "start": "783519",
    "end": "790440"
  },
  {
    "text": "talk about these things they are not the same thing they just go really well together but in building out this",
    "start": "790440",
    "end": "796440"
  },
  {
    "text": "architecture there are four major building blocks that we're going going to be talking about well the first three",
    "start": "796440",
    "end": "801920"
  },
  {
    "text": "really the fourth we just mention briefly so let's start with the events",
    "start": "801920",
    "end": "807399"
  },
  {
    "text": "store events are I kept in a database that's called the event store I think that's pretty straightforward uh the",
    "start": "807399",
    "end": "814399"
  },
  {
    "text": "event store is usually considered a subsystem of its own right there are",
    "start": "814399",
    "end": "819760"
  },
  {
    "text": "both commercial and open-source event stores available but it's actually easy",
    "start": "819760",
    "end": "825519"
  },
  {
    "text": "enough to roll your own um and that's what I've done for the most",
    "start": "825519",
    "end": "832440"
  },
  {
    "text": "part the simplest event store has a single event stream so all of the events go into a single stream uh and it has",
    "start": "832440",
    "end": "839759"
  },
  {
    "text": "three single features only three features uh you can",
    "start": "839759",
    "end": "845800"
  },
  {
    "text": "put an event in it you can get all of the events in order starting at a",
    "start": "845800",
    "end": "851560"
  },
  {
    "text": "particular offset or you can get all of the events in order scoped by a particular something and we'll talk",
    "start": "851560",
    "end": "856800"
  },
  {
    "text": "about what that something is a little bit later these are all of the features of an event store that we're going to",
    "start": "856800",
    "end": "863199"
  },
  {
    "text": "need we're not going to need any others as we build out the architecture so let's start with",
    "start": "863199",
    "end": "872320"
  },
  {
    "text": "reading any system has clients that needs to read and display",
    "start": "873480",
    "end": "879759"
  },
  {
    "text": "information and clients are usually usually interested in current",
    "start": "879759",
    "end": "886079"
  },
  {
    "text": "state and I think it's not a stretch uh to try to convince you that",
    "start": "886079",
    "end": "892519"
  },
  {
    "text": "the event store in and of itself which only has all of the events in order and so on and so forth is not actually",
    "start": "892519",
    "end": "899560"
  },
  {
    "text": "particularly suitable for presenting current state so what we need is something that",
    "start": "899560",
    "end": "906839"
  },
  {
    "text": "clients can query for current state and we call this a query Handler and it's a you know if we're",
    "start": "906839",
    "end": "913720"
  },
  {
    "text": "drawing out our diagram it's a little bit of a detour now the way that this works is",
    "start": "913720",
    "end": "919000"
  },
  {
    "text": "that the quate Handler kind of Tails it keeps it's keeps listening to the event",
    "start": "919000",
    "end": "924079"
  },
  {
    "text": "stream and and and and and keeps up with all of the events that are happening",
    "start": "924079",
    "end": "929959"
  },
  {
    "text": "and he uses this to build up a projection and that could be your current",
    "start": "929959",
    "end": "935040"
  },
  {
    "text": "state and when a client wants to know something the query Handler just looks inside that projection it doesn't look",
    "start": "935040",
    "end": "941959"
  },
  {
    "text": "at the events it looks at the projection that it's built up and of course returns that data to the client and the query",
    "start": "941959",
    "end": "948079"
  },
  {
    "text": "Handler will build up multiple of these projections uh and they tend to be",
    "start": "948079",
    "end": "953759"
  },
  {
    "text": "optimized for a particular query they're not a single it's not a single one there's multiple ones and if you have",
    "start": "953759",
    "end": "960199"
  },
  {
    "text": "multiple endpoints in our apis or multiple screens or pages in our",
    "start": "960199",
    "end": "965319"
  },
  {
    "text": "interface we'll have a separate one for each one of those and depending on what the query is",
    "start": "965319",
    "end": "972680"
  },
  {
    "text": "um the query Handler will pick the appropriate projection to to return the",
    "start": "972680",
    "end": "980720"
  },
  {
    "text": "data and this little process that sits in Tails uh sits and listens for the events",
    "start": "981120",
    "end": "989319"
  },
  {
    "text": "they are individual and independent for each of these projections it's worth noting that this",
    "start": "989319",
    "end": "996160"
  },
  {
    "text": "is not used in The Observer pattern if you're familiar with that instead we're making use of this one feature in our",
    "start": "996160",
    "end": "1002440"
  },
  {
    "text": "event store which is get all events in order from an offset what happens is that these little",
    "start": "1002440",
    "end": "1009480"
  },
  {
    "text": "things which we call projectors they keep a pointer or a bookmark to where in the this big event stream they're",
    "start": "1009480",
    "end": "1017480"
  },
  {
    "text": "at um so it knows how far along it",
    "start": "1017480",
    "end": "1023160"
  },
  {
    "text": "is the projections are disposable and we can just throw away the data reset it",
    "start": "1023160",
    "end": "1028720"
  },
  {
    "text": "back to zero and start it all over again what this means is that these projectors and the projections are",
    "start": "1028720",
    "end": "1035240"
  },
  {
    "text": "completely decoupled from each other um which in turn there are",
    "start": "1035240",
    "end": "1040319"
  },
  {
    "text": "multiple benefits of doing that of course but one of them is that it allows for different data storage options",
    "start": "1040319",
    "end": "1046600"
  },
  {
    "text": "depending on what type of queries you have have you might choose a relational database or a document database or a",
    "start": "1046600",
    "end": "1052960"
  },
  {
    "text": "graph database or a search engine or something like that so all of these projections and the projectors can use",
    "start": "1052960",
    "end": "1058840"
  },
  {
    "text": "different Technologies this means that we can",
    "start": "1058840",
    "end": "1064160"
  },
  {
    "text": "optimize for how we want to read the data and for many systems this is very",
    "start": "1064160",
    "end": "1072679"
  },
  {
    "text": "important because most of the current kind of current state read models that",
    "start": "1072679",
    "end": "1078000"
  },
  {
    "text": "we see in in monoliths and and in big systems they tend to be",
    "start": "1078000",
    "end": "1083520"
  },
  {
    "text": "normalized uh which is actually optimized for how we want to write data we don't want to duplicate data so we",
    "start": "1083520",
    "end": "1088880"
  },
  {
    "text": "write it in a very normalized form but projections can be and often are",
    "start": "1088880",
    "end": "1094600"
  },
  {
    "text": "denormalized which means that we are really optimizing for how we want to uh read the",
    "start": "1094600",
    "end": "1101159"
  },
  {
    "text": "data they're cheap they're easy to rebuild if we have if we want to change",
    "start": "1101159",
    "end": "1106640"
  },
  {
    "text": "something and we want to create a new interpretation of our data it's fine we'll just copy the projector and spin",
    "start": "1106640",
    "end": "1113039"
  },
  {
    "text": "it up again and we run them in in parallel and the the new one builds up",
    "start": "1113039",
    "end": "1118200"
  },
  {
    "text": "and then we can eyeball the new projection and see does it actually look like what we want and if so we just swap",
    "start": "1118200",
    "end": "1124520"
  },
  {
    "text": "see how easy it was we just swap from one or the other um and then we just get rid of the",
    "start": "1124520",
    "end": "1131200"
  },
  {
    "text": "old one this means that we never have to do any database migrations on production",
    "start": "1131200",
    "end": "1137159"
  },
  {
    "text": "tables ever again we simp replace the tables with new projections when we need",
    "start": "1137159",
    "end": "1142799"
  },
  {
    "text": "them so in summary clients never query the events",
    "start": "1142799",
    "end": "1148840"
  },
  {
    "text": "directly instead they query denormalized projections that are optimized for querying these projections are built up",
    "start": "1148840",
    "end": "1156480"
  },
  {
    "text": "by projectors that process the event stream in order uh they're completely decoupled",
    "start": "1156480",
    "end": "1163039"
  },
  {
    "text": "from each other and they don't share any state or often don't share code either",
    "start": "1163039",
    "end": "1168960"
  },
  {
    "text": "and they're cheap and easy to rebuild so what about the other side what about the command side and the and",
    "start": "1168960",
    "end": "1176799"
  },
  {
    "text": "the writing because in addition to reading clients often wants want to write data as",
    "start": "1176799",
    "end": "1182840"
  },
  {
    "text": "well and just as we establish that client should never query the event",
    "start": "1182840",
    "end": "1188039"
  },
  {
    "text": "store directly nor should they be writing into the event store directly either because the event store is not",
    "start": "1188039",
    "end": "1194520"
  },
  {
    "text": "responsible for validation so so giving clients direct access is is kind of",
    "start": "1194520",
    "end": "1200520"
  },
  {
    "text": "dangerous instead what we have is clients expressing their intentions to",
    "start": "1200520",
    "end": "1205559"
  },
  {
    "text": "do something in the form of a command and just like we had something that was responsible for handling queries we need",
    "start": "1205559",
    "end": "1211640"
  },
  {
    "text": "something responsible for handling commands and of course you figured out the naming scheme it's called the",
    "start": "1211640",
    "end": "1218679"
  },
  {
    "text": "command Handler Now commands Express",
    "start": "1218679",
    "end": "1224080"
  },
  {
    "text": "intent and this is important because if we look at our event and and what what",
    "start": "1224080",
    "end": "1230640"
  },
  {
    "text": "how they are named in the past tense because there's something that's happened the commands are named in the",
    "start": "1230640",
    "end": "1236799"
  },
  {
    "text": "imperative instead of account open we say open account instead of funds deposited we say deposit",
    "start": "1236799",
    "end": "1243000"
  },
  {
    "text": "funds and this is the key right here commands represent intent and they can",
    "start": "1243000",
    "end": "1249559"
  },
  {
    "text": "be rejected events are facts and they cannot but when a command is accepted",
    "start": "1249559",
    "end": "1256960"
  },
  {
    "text": "they result in an event does that make sense so how does the command handle",
    "start": "1256960",
    "end": "1263880"
  },
  {
    "text": "commands well this is where we start borrowing from DDD how hands up how many people have read the DDD",
    "start": "1263880",
    "end": "1270480"
  },
  {
    "text": "book I am so sorry I've I've it's it's not a good",
    "start": "1270480",
    "end": "1277440"
  },
  {
    "text": "read I mean I probably shouldn't say that but it's not a good read it's very dry it's very boring but it's so useful",
    "start": "1277440",
    "end": "1284760"
  },
  {
    "text": "like the information that exists in this book is just amazing so if you can stomach it I would highly",
    "start": "1284760",
    "end": "1292559"
  },
  {
    "text": "recommend trying it there are some distilled versions as well which which are which are quite interesting too now",
    "start": "1292559",
    "end": "1299200"
  },
  {
    "text": "how we use DDD in in in our event sourcing world is that these events they kind of have to happen to",
    "start": "1299200",
    "end": "1306640"
  },
  {
    "text": "something and that's something we call an Aggregate and this is a DDD term this",
    "start": "1306640",
    "end": "1313159"
  },
  {
    "text": "is what we're borrowing from from DDD and the Aggregates are kind of the nouns",
    "start": "1313159",
    "end": "1318240"
  },
  {
    "text": "in system so if we look at these events again the account application received",
    "start": "1318240",
    "end": "1323320"
  },
  {
    "text": "and customer identity verified and we open an account and we deposit stuff and",
    "start": "1323320",
    "end": "1328760"
  },
  {
    "text": "transfer funds and so on and so forth then the Aggregates that these things happen to is of course the account",
    "start": "1328760",
    "end": "1334400"
  },
  {
    "text": "application Aggregate and the customer Aggregate and the account Aggregate and the transfer Aggregate and the account",
    "start": "1334400",
    "end": "1340640"
  },
  {
    "text": "statement aggregate in a calendar domain our Aggregates would probably be the well",
    "start": "1340640",
    "end": "1346880"
  },
  {
    "text": "the calendar itself but also also the appointment the the invitation a culture",
    "start": "1346880",
    "end": "1352480"
  },
  {
    "text": "amp our Aggregates are you know the employee the demographic the survey the question the response uh comments and",
    "start": "1352480",
    "end": "1360240"
  },
  {
    "text": "reports and so on and so forth and these Aggregates they have identity that need to be tracked over time often they have",
    "start": "1360240",
    "end": "1366760"
  },
  {
    "text": "life cycles which means that they have a beginning and an end an appointment of course you know you schedule the",
    "start": "1366760",
    "end": "1371919"
  },
  {
    "text": "appointment and then you actually have the appointment and at that point that's kind of like the life cycle of of of",
    "start": "1371919",
    "end": "1376960"
  },
  {
    "text": "that aggregate they often refer to each other so uh",
    "start": "1376960",
    "end": "1382880"
  },
  {
    "text": "there's Meant to Be an Arrow in between there which I tried to changed last minute and clearly it didn't work uh but",
    "start": "1382880",
    "end": "1390080"
  },
  {
    "text": "basically the idea that a response is connected to a survey or an invitation to an appointment is obviously connected",
    "start": "1390080",
    "end": "1396760"
  },
  {
    "text": "to a particular appointment so when the command is received by the command hander it is",
    "start": "1396760",
    "end": "1402720"
  },
  {
    "text": "executed against the Aggregate and the aggregate is the thing that determines whether this command is",
    "start": "1402720",
    "end": "1410400"
  },
  {
    "text": "either accepted or rejected and to do that it needs to know its current",
    "start": "1410400",
    "end": "1416120"
  },
  {
    "text": "state so the way that that works is we start by just loading all of the events",
    "start": "1416120",
    "end": "1422120"
  },
  {
    "text": "for a particular Aggregate and then we instantiate a",
    "start": "1422120",
    "end": "1428159"
  },
  {
    "text": "brand new instance of that Aggregate and we ask that aggregate to replay all of",
    "start": "1428159",
    "end": "1433600"
  },
  {
    "text": "its events in order to constitute its own current state",
    "start": "1433600",
    "end": "1439000"
  },
  {
    "text": "and then we attempt to process the command against that Aggregate and that",
    "start": "1439000",
    "end": "1444640"
  },
  {
    "text": "is either turns are true or a false",
    "start": "1444640",
    "end": "1449919"
  },
  {
    "text": "um and if true then the we persist the",
    "start": "1449919",
    "end": "1455760"
  },
  {
    "text": "event here are the features that we're using where we're putting an event into the event store and we're getting all of",
    "start": "1455760",
    "end": "1462159"
  },
  {
    "text": "the event in order scoped by a particular something and now we know what that something is it's of course",
    "start": "1462159",
    "end": "1468720"
  },
  {
    "text": "the aggregate ID you're probably thinking isn't all of this replaying slow you're going to have",
    "start": "1468720",
    "end": "1474799"
  },
  {
    "text": "to do it an awful lot yeah it can be but remember first of all it's only on wres",
    "start": "1474799",
    "end": "1480679"
  },
  {
    "text": "never on reads and if we keep the number of events per aggregate low we can actually",
    "start": "1480679",
    "end": "1486360"
  },
  {
    "text": "mitigate a lot of these problems I always think that an aggregate that accumulates an unbounded",
    "start": "1486360",
    "end": "1492799"
  },
  {
    "text": "number of events over time is is a smell that should be avoided and wherever possible we want",
    "start": "1492799",
    "end": "1498399"
  },
  {
    "text": "fixed life aggregate so they can't just accumulate events over time for example we would not put the order placed event",
    "start": "1498399",
    "end": "1505880"
  },
  {
    "text": "on the customer aggregate because even though it's the customer that per that places the",
    "start": "1505880",
    "end": "1511240"
  },
  {
    "text": "order um that would just keep accumulating events over time so instead",
    "start": "1511240",
    "end": "1517799"
  },
  {
    "text": "for each order we create a separate order aggregate that references the",
    "start": "1517799",
    "end": "1523559"
  },
  {
    "text": "customer domain modeling is hard and event sourcing doesn't change that so",
    "start": "1523559",
    "end": "1529279"
  },
  {
    "text": "often a lot of the complexity in how to build events or systems is how do we uh",
    "start": "1529279",
    "end": "1535159"
  },
  {
    "text": "how do we create our Aggregates and the events that are associated so in",
    "start": "1535159",
    "end": "1542559"
  },
  {
    "text": "summary clients never write events directly instead they express an intent",
    "start": "1543200",
    "end": "1549000"
  },
  {
    "text": "to do something via commands these commands are validated by",
    "start": "1549000",
    "end": "1554480"
  },
  {
    "text": "Aggregates which is a concept that we borrowed from DDD these Aggregates they fetch events from the event store and",
    "start": "1554480",
    "end": "1561399"
  },
  {
    "text": "replay them to reconstitute rehydrate we sometimes call it as well their current",
    "start": "1561399",
    "end": "1566600"
  },
  {
    "text": "state if the aggregate accepts the command it results in an event so where does this leave us well this is what we",
    "start": "1566600",
    "end": "1575159"
  },
  {
    "text": "call the circular architecture",
    "start": "1575159",
    "end": "1580279"
  },
  {
    "text": "um clients Express their intent through commands we just covered that and they result in events projectors they hail",
    "start": "1580279",
    "end": "1589080"
  },
  {
    "text": "the event store and they build up projections that the clients then query this is what the architecture looks",
    "start": "1589080",
    "end": "1596120"
  },
  {
    "text": "like what this allows us to do is decoupling reads and writes almost",
    "start": "1596120",
    "end": "1602559"
  },
  {
    "text": "completely they can scale independently we can take our whole query side all of",
    "start": "1602559",
    "end": "1608159"
  },
  {
    "text": "these projections and we can replicate them in multiple regions in multiple places because they read only",
    "start": "1608159",
    "end": "1614840"
  },
  {
    "text": "right wrs are fast or usually fast depending on how well you model your",
    "start": "1614840",
    "end": "1620679"
  },
  {
    "text": "Aggregates and they're always consistent reads are fast and they're eventually",
    "start": "1620679",
    "end": "1626440"
  },
  {
    "text": "consistent and we'll talk more about that later I want to cover very very briefly the fourth building block in",
    "start": "1626440",
    "end": "1633880"
  },
  {
    "text": "this architecture which is called reactors I don't have time to go into it in detail unfortunately but uh it's",
    "start": "1633880",
    "end": "1640120"
  },
  {
    "text": "actually a really cool thing we have to extend the architecture in order to talk about them and they are kind of like",
    "start": "1640120",
    "end": "1646960"
  },
  {
    "text": "projectors in that they um uh tail",
    "start": "1646960",
    "end": "1652840"
  },
  {
    "text": "the event stream but instead of building up projections what they do is they react to events and they can react by",
    "start": "1652840",
    "end": "1660600"
  },
  {
    "text": "triggering external Behavior like sending an email for instance or by emitting new events back into the event",
    "start": "1660600",
    "end": "1667159"
  },
  {
    "text": "store so for instance you could have an uh a reactor that sits and watches",
    "start": "1667159",
    "end": "1673039"
  },
  {
    "text": "orders and when it discovers the tenth order from a particular customer it can issue another event that says customer",
    "start": "1673039",
    "end": "1679600"
  },
  {
    "text": "promoter to Gold Class or of course it can do both as well reactors are cool because they are",
    "start": "1679600",
    "end": "1686799"
  },
  {
    "text": "single responsibility units that have uh",
    "start": "1686799",
    "end": "1691919"
  },
  {
    "text": "very clear uh focus on implementing a particular business rule uh and what they what they do is",
    "start": "1691919",
    "end": "1699360"
  },
  {
    "text": "they encourage a business oriented decomposition of the system so all in all recapping",
    "start": "1699360",
    "end": "1708880"
  },
  {
    "text": "event sourcing makes you store business fact as the source of Truth and these facts are immutable you can't change",
    "start": "1708880",
    "end": "1714880"
  },
  {
    "text": "them once they've happened event sourcing makes the system",
    "start": "1714880",
    "end": "1720039"
  },
  {
    "text": "deterministic cqs in the circular architecture is something that works quite well with event sourcing uh they",
    "start": "1720039",
    "end": "1727720"
  },
  {
    "text": "clients Express command Express their intent via commands which if accepted",
    "start": "1727720",
    "end": "1733000"
  },
  {
    "text": "become events and are appended to an event stream a synchronous projectors",
    "start": "1733000",
    "end": "1739080"
  },
  {
    "text": "process the event stream and build up denormalized projections with the which the clients then can query if they when they want to",
    "start": "1739080",
    "end": "1745760"
  },
  {
    "text": "know something and then we have these asynchronized reactors that process the event stream and reacts to events",
    "start": "1745760",
    "end": "1752039"
  },
  {
    "text": "according to their business logic often outputting new events so why would you",
    "start": "1752039",
    "end": "1757440"
  },
  {
    "text": "want to do this the first reason I think is because",
    "start": "1757440",
    "end": "1764799"
  },
  {
    "text": "it treats the core of your business with respect you can place no more respect to",
    "start": "1764799",
    "end": "1770200"
  },
  {
    "text": "your data than placing it at the very core at the very heart of your system and then never change it walk",
    "start": "1770200",
    "end": "1776919"
  },
  {
    "text": "away we're not losing data that we can't value in the future because we can't",
    "start": "1776919",
    "end": "1782559"
  },
  {
    "text": "predict the future so the data that we're capturing today have potential value in the future and we're not",
    "start": "1782559",
    "end": "1789360"
  },
  {
    "text": "throwing it away the whole idea of event sourcing as well is compatible with reality not only",
    "start": "1789360",
    "end": "1796399"
  },
  {
    "text": "have all of these industries been using it for for hundreds of years but event sourcing actually seeks to emulate the",
    "start": "1796399",
    "end": "1801559"
  },
  {
    "text": "real world uh because just like in the real world time is a first class",
    "start": "1801559",
    "end": "1808640"
  },
  {
    "text": "citizen in the real world the past is done and if you don't like it sorry all",
    "start": "1808640",
    "end": "1815000"
  },
  {
    "text": "you can do is compensate for it you can't go back and change it unless you have a time machine which if you do why",
    "start": "1815000",
    "end": "1822000"
  },
  {
    "text": "you're sitting here listening to me um",
    "start": "1822000",
    "end": "1828159"
  },
  {
    "text": "the real world is also eventually consistent because there is no central control and the real world is made up by",
    "start": "1828559",
    "end": "1835880"
  },
  {
    "text": "independent actors that do the best that they can with all the information that they",
    "start": "1835880",
    "end": "1841679"
  },
  {
    "text": "have I also think that this pattern allows for Rapid iteration and reinterpretation because what we're",
    "start": "1841679",
    "end": "1847880"
  },
  {
    "text": "effectively doing is we're separating the recording of what's happened from interpreting what that thing",
    "start": "1847880",
    "end": "1856000"
  },
  {
    "text": "means interpretations and experiments are easy to get rid of when they're no longer relevant just throw away that",
    "start": "1856159",
    "end": "1863200"
  },
  {
    "text": "projection it encourages a bunch of good practices like separation of concerns like through through these isolated",
    "start": "1863200",
    "end": "1871039"
  },
  {
    "text": "asynchronous components um it encourages code that is expressed",
    "start": "1871039",
    "end": "1877399"
  },
  {
    "text": "in business and user terms so all of these event names that we've been talking about are often how our business",
    "start": "1877399",
    "end": "1883240"
  },
  {
    "text": "and product stakeholders think about the systems they think in terms of events events already a customer goes and",
    "start": "1883240",
    "end": "1890320"
  },
  {
    "text": "places an order or they add something to the shopping cart that's how they think about it and what it does is it removes",
    "start": "1890320",
    "end": "1897120"
  },
  {
    "text": "abstractions and forms an uous language between engineering teams and product teams and business owners love",
    "start": "1897120",
    "end": "1906039"
  },
  {
    "text": "this it avoids a bunch of common pain points like database migration RMS Etc",
    "start": "1906039",
    "end": "1911960"
  },
  {
    "text": "and it allows you to use the best tool for the job like whatever technology that you",
    "start": "1911960",
    "end": "1919120"
  },
  {
    "text": "that is most suited for a particular task you get a free time machine as well which we' already talked about which is",
    "start": "1919120",
    "end": "1925080"
  },
  {
    "text": "kind of cool not the real kind of time machine but in your system at",
    "start": "1925080",
    "end": "1930320"
  },
  {
    "text": "least but there's there are downsides as well first of all obviously mistakes are",
    "start": "1930320",
    "end": "1939720"
  },
  {
    "text": "forever make make makes sense Natural Evolution of event schemas will and do",
    "start": "1939720",
    "end": "1946399"
  },
  {
    "text": "happen uh and you can't change these events after the fact so if you make a mistake or",
    "start": "1946399",
    "end": "1952919"
  },
  {
    "text": "even through Natural Evolution you still have to maintain schemas and all of",
    "start": "1952919",
    "end": "1958960"
  },
  {
    "text": "these things forever if there are any mistakes you",
    "start": "1958960",
    "end": "1965200"
  },
  {
    "text": "you have to create compensating events rather than doing the quick fix up of just going into the database table and",
    "start": "1965200",
    "end": "1970320"
  },
  {
    "text": "changing the column which is both an advantage and a disadvantage in and of",
    "start": "1970320",
    "end": "1975519"
  },
  {
    "text": "its own self because it discourages hacking but sometimes you just need to fix the goddamn",
    "start": "1975519",
    "end": "1981120"
  },
  {
    "text": "thing there are strategies on how to manage this and deal with this but they can be painful and some of them are not",
    "start": "1981120",
    "end": "1986639"
  },
  {
    "text": "for the faint of heart as well opacity is another is another big",
    "start": "1986639",
    "end": "1992760"
  },
  {
    "text": "downside as well um traditional relational models mean kind of mean that",
    "start": "1992760",
    "end": "1998760"
  },
  {
    "text": "any developer or anyone really with who's got some SQL knowledge and access",
    "start": "1998760",
    "end": "2003960"
  },
  {
    "text": "to the database can just go in and po around um you can ask answer questions",
    "start": "2003960",
    "end": "2010120"
  },
  {
    "text": "pretty quickly but an event store renders all of those tools and the uut a is",
    "start": "2010120",
    "end": "2017039"
  },
  {
    "text": "completely irrelevant and this is actually a really big deal because the data that you have is way more opaque in",
    "start": "2017039",
    "end": "2024559"
  },
  {
    "text": "your event store and in order to make sense of anything you have to create",
    "start": "2024559",
    "end": "2030679"
  },
  {
    "text": "projections we're going to go on a slight little little little you know what's what's the",
    "start": "2033679",
    "end": "2040840"
  },
  {
    "text": "word seg seg yes maybe no uh I'm going to go off on a on a tangent that's the",
    "start": "2040840",
    "end": "2048040"
  },
  {
    "text": "word I was looking for we shouldn't conflate the ne the inherent necessary",
    "start": "2048040",
    "end": "2056040"
  },
  {
    "text": "domain complexity with accidental complexity we can't avoid complexity our",
    "start": "2056040",
    "end": "2063480"
  },
  {
    "text": "business domains are complex if our business domains aren't comple complex then we're in the wrong line of business",
    "start": "2063480",
    "end": "2069520"
  },
  {
    "text": "because it means anyone can copy them but we can choose how to implement",
    "start": "2069520",
    "end": "2075398"
  },
  {
    "text": "this complexity uh and we really need to to avoid conflating The Accidental",
    "start": "2075399",
    "end": "2081960"
  },
  {
    "text": "complexity that comes from how we build systems with the inherent domain complexity now one of my beliefs is that",
    "start": "2081960",
    "end": "2089440"
  },
  {
    "text": "monoliths are kind of meant to be this this simple arrangement of of complex things so why simple arrangement I mean",
    "start": "2089440",
    "end": "2096760"
  },
  {
    "text": "it's usually it one big thing that you go and you deploy and off off you go right usually one or a couple of",
    "start": "2096760",
    "end": "2103000"
  },
  {
    "text": "processes that you run and it's kind of simple to deploy and get started with but the things inside it becomes very",
    "start": "2103000",
    "end": "2109680"
  },
  {
    "text": "complicated over time event sourcing with SEC is meant to be kind of the opposite which is that",
    "start": "2109680",
    "end": "2116520"
  },
  {
    "text": "it's a very complex Arrangement there are a lot of these independent autonomous actors um which each one of them is",
    "start": "2116520",
    "end": "2126640"
  },
  {
    "text": "simple but in aggregate the arrangement of them is far more",
    "start": "2126640",
    "end": "2132680"
  },
  {
    "text": "complex event sourcing with seek has a lot of moving",
    "start": "2132680",
    "end": "2137760"
  },
  {
    "text": "parts and you really have to beware of devolving into a complex arrangement of",
    "start": "2137760",
    "end": "2143320"
  },
  {
    "text": "complex things and this is the number one issue that I've",
    "start": "2143320",
    "end": "2149359"
  },
  {
    "text": "seen your mileage might vary of course and it's really easy to get here because",
    "start": "2149359",
    "end": "2156440"
  },
  {
    "text": "of the cognitive low that that's that's introduced by this fundamental paradigm shift",
    "start": "2156440",
    "end": "2161920"
  },
  {
    "text": "so if you are a team who's used to building a this simple arrangement of",
    "start": "2161920",
    "end": "2168680"
  },
  {
    "text": "complex things well guess what you're used to building complex things so when",
    "start": "2168680",
    "end": "2174240"
  },
  {
    "text": "you go and you try to build a complex arrangement of simple things those things tend to become more and more",
    "start": "2174240",
    "end": "2181720"
  },
  {
    "text": "complex and many developers will struggle and I've seen this in practice as well",
    "start": "2181920",
    "end": "2188480"
  },
  {
    "text": "and it doesn't help that it isn't mainstream there aren't enough resources out there there aren't enough conference",
    "start": "2188480",
    "end": "2195359"
  },
  {
    "text": "talks of books or or general information I'm trying to fix some of that but it's",
    "start": "2195359",
    "end": "2203119"
  },
  {
    "text": "it's it's hard I will say one thing though which is that it's gaining traction I've been talking about event sourcing for about three years now and",
    "start": "2203119",
    "end": "2212480"
  },
  {
    "text": "the uh the difference that I've seen in that time I don't think it was just",
    "start": "2212480",
    "end": "2217920"
  },
  {
    "text": "because of me I actually don't think it was because of me at all but it's definitely changed over",
    "start": "2217920",
    "end": "2224200"
  },
  {
    "text": "time if you want to get started though you're going to run into the J cover productivity has anyone have has anyone",
    "start": "2224640",
    "end": "2229800"
  },
  {
    "text": "seen the J cover productivity before it's one of my favorite curves it looks like",
    "start": "2229800",
    "end": "2236599"
  },
  {
    "text": "this basically what it means is that things will get worse before they get better and this is absolutely true if",
    "start": "2237800",
    "end": "2244160"
  },
  {
    "text": "you're embarking on a mission to the to build an Event Source system you will",
    "start": "2244160",
    "end": "2250160"
  },
  {
    "text": "slow down hopefully by the at some point you'll get through that that part of the",
    "start": "2250160",
    "end": "2257920"
  },
  {
    "text": "curve where it gets better and and and you're actually saving time but it will take a while before you get there and",
    "start": "2257920",
    "end": "2264720"
  },
  {
    "text": "especially how many people in the room are team leads or managers or Architects",
    "start": "2264720",
    "end": "2270839"
  },
  {
    "text": "or people that have the authority or power to impose",
    "start": "2270839",
    "end": "2277920"
  },
  {
    "text": "things on other people a few yeah cool awesome do not",
    "start": "2277920",
    "end": "2284880"
  },
  {
    "text": "impose a event sourcing in a team that doesn't have the buying who doesn't have the stakeholder support and who lacks",
    "start": "2284880",
    "end": "2292520"
  },
  {
    "text": "the intestinal fortitude required to try something like this from the",
    "start": "2292520",
    "end": "2299200"
  },
  {
    "text": "beginning and then then there is that other thing that other thing that we're",
    "start": "2299200",
    "end": "2304920"
  },
  {
    "text": "not supposed to talk about but we do anyway it's called eventual consistency and I I",
    "start": "2304920",
    "end": "2310760"
  },
  {
    "text": "I know mention it this morning because commands are",
    "start": "2310760",
    "end": "2317560"
  },
  {
    "text": "synchronous it's you send a request the command is validated you you you issue a",
    "start": "2317560",
    "end": "2322960"
  },
  {
    "text": "command and you effectively receive immediately an act or an act for whether you this thing was happened or",
    "start": "2322960",
    "end": "2329920"
  },
  {
    "text": "not queries are also synchronous which means that you send a request and it",
    "start": "2329920",
    "end": "2335640"
  },
  {
    "text": "gives you a response from the projection uh receives the data synchronously as well but the projectors are",
    "start": "2335640",
    "end": "2343240"
  },
  {
    "text": "asynchronous right it can take some time before the command happens and the event gets",
    "start": "2343240",
    "end": "2349200"
  },
  {
    "text": "stored in the event store for that change to show up in the projection and that's kind of it just is right now",
    "start": "2349200",
    "end": "2357839"
  },
  {
    "text": "the reactors that undertake all these complex business rules are also asynchronous which is even more",
    "start": "2357839",
    "end": "2364960"
  },
  {
    "text": " and because all of these things are autonomous and and independent and",
    "start": "2364960",
    "end": "2370760"
  },
  {
    "text": "decoupled from each other these changes can show up in different parts of your systems at different times and that's",
    "start": "2370760",
    "end": "2377359"
  },
  {
    "text": "triple  and when're not all parts of one system has the same idea of what the",
    "start": "2377359",
    "end": "2384640"
  },
  {
    "text": "current state is this is what we call eventual consistency the real world is eventually",
    "start": "2384640",
    "end": "2391760"
  },
  {
    "text": "consistent um just kind of by the by",
    "start": "2391760",
    "end": "2396800"
  },
  {
    "text": "independent like independent actors in the real world Act without consulting each other",
    "start": "2396800",
    "end": "2402680"
  },
  {
    "text": "I'll give you an example um while you're talking to me right or while you're",
    "start": "2402680",
    "end": "2407960"
  },
  {
    "text": "listening to me talk uh your car might get stolen in your copy of the world right",
    "start": "2407960",
    "end": "2415800"
  },
  {
    "text": "your your car is exactly where you left it because you're not in lock step with the real",
    "start": "2415800",
    "end": "2423040"
  },
  {
    "text": "world and hours from now when you find that your car has been stol en um that's",
    "start": "2423640",
    "end": "2429880"
  },
  {
    "text": "when you made when your copy of the world is made consistent and this is",
    "start": "2429880",
    "end": "2435920"
  },
  {
    "text": "eventual consistency the interesting thing though",
    "start": "2435920",
    "end": "2442640"
  },
  {
    "text": "is your system whether you already know it or not or whether is is that you're it's already eventually consistent once",
    "start": "2442640",
    "end": "2449160"
  },
  {
    "text": "you let go of a database Connection in your and you're figuring out how to return that data back to the client that",
    "start": "2449160",
    "end": "2456160"
  },
  {
    "text": "data could already change on you so the data that you're actually sending back to your client could be out of date and",
    "start": "2456160",
    "end": "2462000"
  },
  {
    "text": "you don't know it the data that sits on the web page could be out of date and the client doesn't know it",
    "start": "2462000",
    "end": "2468880"
  },
  {
    "text": "either we can narrow the time window for all of all of these event for eventual",
    "start": "2468880",
    "end": "2474040"
  },
  {
    "text": "consistency but we can't eliminate it completely and if we can't eliminate",
    "start": "2474040",
    "end": "2479319"
  },
  {
    "text": "eventual consistency all we can do is manage",
    "start": "2479319",
    "end": "2484680"
  },
  {
    "text": "it and modeling systems here here based on the real world is very helpful for",
    "start": "2484960",
    "end": "2490319"
  },
  {
    "text": "dealing with eventual consistency because the risk with eventual consistency is a function of",
    "start": "2490319",
    "end": "2496839"
  },
  {
    "text": "time when people complain about eventual consistency I say is one nond of",
    "start": "2496839",
    "end": "2502400"
  },
  {
    "text": "eventual consistency okay what would you what would you say if I if I asked you that question one nond of eventual",
    "start": "2502400",
    "end": "2509119"
  },
  {
    "text": "consistency is that f is that okay yeah people usually say yes cool what about",
    "start": "2509119",
    "end": "2515280"
  },
  {
    "text": "one month is that okay no no cool awesome so that means that somewhere in",
    "start": "2515280",
    "end": "2522119"
  },
  {
    "text": "between one nond and one month we have your threshold of what an acceptable",
    "start": "2522119",
    "end": "2528040"
  },
  {
    "text": "level of eventual consistency is this threshold is contextual of",
    "start": "2528040",
    "end": "2534240"
  },
  {
    "text": "course it depends if we're showing an order status to use it we probably want that to show",
    "start": "2534240",
    "end": "2540920"
  },
  {
    "text": "up in a matter of seconds right at at the very most because if we don't they might",
    "start": "2540920",
    "end": "2546720"
  },
  {
    "text": "actually think that it hasn't gone through and so they try to buy it again or something like that but if we're showing a sales",
    "start": "2546720",
    "end": "2553280"
  },
  {
    "text": "report to a marketing team is trying to figure out what the what next what marketing strategies to do next then",
    "start": "2553280",
    "end": "2559520"
  },
  {
    "text": "probably a an eventual consistency of a couple of hours is is not a big",
    "start": "2559520",
    "end": "2565680"
  },
  {
    "text": "deal and all of this is a business risk not a technical one and the key question",
    "start": "2565680",
    "end": "2571440"
  },
  {
    "text": "to ask is what is the risk of making a decision with out-of-date information",
    "start": "2571440",
    "end": "2578318"
  },
  {
    "text": "now there are ways to manage eventual consistency as well and there there are five main ones the first one is educate",
    "start": "2578400",
    "end": "2583800"
  },
  {
    "text": "your uses every email newsletters you've ever subscribed to do a really good job of educating you on eventual consistency",
    "start": "2583800",
    "end": "2591119"
  },
  {
    "text": "because when you try to unsubscribe it says please allow for seven days for this to take effect that's eventual",
    "start": "2591119",
    "end": "2597400"
  },
  {
    "text": "consistency you can lie to your users as well you know depending on your use case",
    "start": "2597400",
    "end": "2603599"
  },
  {
    "text": "that's that's probably uh valid uh or might be valid I call this read your own",
    "start": "2603599",
    "end": "2608839"
  },
  {
    "text": "rights so the client knows that it just made a change and the client knows that that change was uh accepted so you can",
    "start": "2608839",
    "end": "2617119"
  },
  {
    "text": "cache that bit of State in the client in the browser or",
    "start": "2617119",
    "end": "2623119"
  },
  {
    "text": "somewhere so that they see what they think is",
    "start": "2623119",
    "end": "2628680"
  },
  {
    "text": "consistent while the rest of your system catches up you can build new interfaces that deemphasizes the whole idea of of",
    "start": "2628680",
    "end": "2637119"
  },
  {
    "text": "immediately seeing a response after you do something you can slow down the user you",
    "start": "2637119",
    "end": "2642960"
  },
  {
    "text": "can show spinners for them if you if you want that's also a valid strategy or you",
    "start": "2642960",
    "end": "2648119"
  },
  {
    "text": "can of course speed up the back end",
    "start": "2648119",
    "end": "2653559"
  },
  {
    "text": "but while all of this is manageable while there are strategies while the",
    "start": "2653559",
    "end": "2659920"
  },
  {
    "text": "world is eventually consistent it can be an absolute blocker and an absolute",
    "start": "2659920",
    "end": "2665440"
  },
  {
    "text": "issue for you for for people and it could mean that you can't build this",
    "start": "2665440",
    "end": "2671240"
  },
  {
    "text": "sort of architecture at the end of the day event",
    "start": "2671240",
    "end": "2676839"
  },
  {
    "text": "sourcing in cqs is is is a pattern I want to emphasize that I don't think it's appropriate for every single use",
    "start": "2676839",
    "end": "2682880"
  },
  {
    "text": "case and it's absolutely not a silver bullet I think that it's got a lot of awesome benefits but also significant",
    "start": "2682880",
    "end": "2690800"
  },
  {
    "text": "disadvantages that have to be um that have to be taken into account but if you",
    "start": "2690800",
    "end": "2696160"
  },
  {
    "text": "can overcome the these challenges it's incredibly powerful one of my uh former colleagues now at enado",
    "start": "2696160",
    "end": "2704680"
  },
  {
    "text": "said this which I think is really apt he said event sourcing is a",
    "start": "2704680",
    "end": "2710440"
  },
  {
    "text": "multiplier if you do it well it gives you magical powers in terms of flexibility and",
    "start": "2710440",
    "end": "2715760"
  },
  {
    "text": "scalability but if you do it poorly it becomes worse than the crappiest bow of",
    "start": "2715760",
    "end": "2722799"
  },
  {
    "text": "mud this is the sun well this is an emoji of the Sun but it's a warm day",
    "start": "2725960",
    "end": "2731640"
  },
  {
    "text": "today right the light that you see today the",
    "start": "2731640",
    "end": "2738839"
  },
  {
    "text": "heat that you feel when you step outside was light that left the sun 8 minutes",
    "start": "2738839",
    "end": "2746960"
  },
  {
    "text": "ago the sun could have exploded 6 minutes ago and we don't know it yet right we'll find out very soon this is",
    "start": "2746960",
    "end": "2754800"
  },
  {
    "text": "eventual consistency if you look for eventual consistency",
    "start": "2754800",
    "end": "2759880"
  },
  {
    "text": "you'll find it everywhere when you walk out this door you'll tap on an iPad hopefully you said green",
    "start": "2759880",
    "end": "2767400"
  },
  {
    "text": "but that you know at that point in time what you're voting I will know at some",
    "start": "2767400",
    "end": "2773240"
  },
  {
    "text": "point what you voted not you specifically of course but in Aggregate and that's also eventually consistency I",
    "start": "2773240",
    "end": "2779640"
  },
  {
    "text": "will eventually be brought up uh I will be eventually consistent to",
    "start": "2779640",
    "end": "2785480"
  },
  {
    "text": "the feedback on my talk and that's really all I have to say",
    "start": "2785480",
    "end": "2791520"
  },
  {
    "text": "thank you very much for listening",
    "start": "2791520",
    "end": "2795319"
  }
]