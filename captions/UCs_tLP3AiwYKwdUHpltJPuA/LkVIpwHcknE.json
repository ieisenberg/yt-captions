[
  {
    "start": "0",
    "end": "147000"
  },
  {
    "text": "welcome it's always like impressive being in rooms like these right so um",
    "start": "12599",
    "end": "19080"
  },
  {
    "text": "so everything about me has been said already I've been um my name Isom I work",
    "start": "19080",
    "end": "25000"
  },
  {
    "text": "for broadcom these days we've been I'm part have been part of the engineering team in the spring framework for uh",
    "start": "25000",
    "end": "31759"
  },
  {
    "text": "almost 15 years now and I'm like most known for working on",
    "start": "31759",
    "end": "37960"
  },
  {
    "text": "the spring data projects uh within the spring ecosystems essentially the repository abstractions in in them and",
    "start": "37960",
    "end": "46640"
  },
  {
    "text": "um the way that that works work connects to what what I'm going to talk about today is that the repository abstraction",
    "start": "46640",
    "end": "53960"
  },
  {
    "text": "is actually a concept uh coming from the DDD books and my interest has always been how to make these architectural",
    "start": "53960",
    "end": "60719"
  },
  {
    "text": "abstractions workable and usable in application code and there's a couple of",
    "start": "60719",
    "end": "65880"
  },
  {
    "text": "like theoretical discussion or a bit of theoretical discussion and a couple of practical examples that I'm going to",
    "start": "65880",
    "end": "71200"
  },
  {
    "text": "show you um how that that idea or that or these approaches have evolved over",
    "start": "71200",
    "end": "76759"
  },
  {
    "text": "the last couple of years and like essentially what kind of tool tools you have available uh today to to do exactly",
    "start": "76759",
    "end": "84840"
  },
  {
    "text": "that so with that um I guess you all agree with this statement right who",
    "start": "84840",
    "end": "91159"
  },
  {
    "text": "agrees with this statement so why is that I mean I just made it up I just I",
    "start": "91159",
    "end": "98200"
  },
  {
    "text": "just put something on a slide and you agree that's kind of nice but um but why is",
    "start": "98200",
    "end": "103520"
  },
  {
    "text": "that it's usually or it is because um while technology marketing is usually",
    "start": "103520",
    "end": "109719"
  },
  {
    "text": "around how to build something initially quickly right how to build this rest web service with this new framework in under",
    "start": "109719",
    "end": "116520"
  },
  {
    "text": "5 minutes or something um I guess most of us here in the room do not work on",
    "start": "116520",
    "end": "122520"
  },
  {
    "text": "Purely Green Field software right we're busy in that area so we actually need to",
    "start": "122520",
    "end": "128879"
  },
  {
    "text": "build our software in a way that we can actually take it from version one to version 1.1 to version 1.2 so what do we",
    "start": "128879",
    "end": "136879"
  },
  {
    "text": "actually need or what's what's the the most fundamental thing that we find in software that allows us to do that or",
    "start": "136879",
    "end": "143760"
  },
  {
    "text": "that lets us stay productive in that space and it's it's understandability",
    "start": "143760",
    "end": "149480"
  },
  {
    "start": "147000",
    "end": "579000"
  },
  {
    "text": "right we need to be able to understand our code and there's a lot of literature and interesting books um surrounding um",
    "start": "149480",
    "end": "158280"
  },
  {
    "text": "this area um I wanted to pick out two of them one of been uh one of them being",
    "start": "158280",
    "end": "164000"
  },
  {
    "text": "felen H Hammond's book um the programmer brain um she's very close to how we",
    "start": "164000",
    "end": "170519"
  },
  {
    "text": "write source code and how we organize source code to actually make it more understandable um there is also k a",
    "start": "170519",
    "end": "178760"
  },
  {
    "text": "German colleague of mine uh she's written a sustainable software architecture and she's concentrating",
    "start": "178760",
    "end": "184519"
  },
  {
    "text": "more on let's say the large scale artifacts that we find in code in code basis and how they the the what kind of",
    "start": "184519",
    "end": "191400"
  },
  {
    "text": "means we use in software architecture to uh make it understandable because essentially we're managing complexity",
    "start": "191400",
    "end": "197360"
  },
  {
    "text": "right we have to wrap our heads um around complexity and that's what software architectural Concepts allow us",
    "start": "197360",
    "end": "204000"
  },
  {
    "text": "to do what are the means and the to to achieve that uh Cola points out three",
    "start": "204000",
    "end": "210360"
  },
  {
    "text": "primary primary aspects one of them is chunking right we talk about modules so",
    "start": "210360",
    "end": "215480"
  },
  {
    "text": "that we don't have to talk about like the set of classes that a certain module uh uh makes or is is comprised of uh",
    "start": "215480",
    "end": "224439"
  },
  {
    "text": "hierarchization right we have let's say we have our Deployable deploy units we have our build units we have in Java we",
    "start": "224439",
    "end": "231120"
  },
  {
    "text": "have packages and we have classes we're kind of creating a hierarchy of of Scopes um to when looking at the",
    "start": "231120",
    "end": "237640"
  },
  {
    "text": "individual level um we kind of we're able to deal with a limited number of",
    "start": "237640",
    "end": "243680"
  },
  {
    "text": "other things that we have to keep in our mind and to to understand this and and yeah work this and the third thing being",
    "start": "243680",
    "end": "250200"
  },
  {
    "text": "pattern languages not necessarily meaning pattern in terms of um the",
    "start": "250200",
    "end": "255400"
  },
  {
    "text": "classical gang of four book right like a Singleton or proxy or what have you but rather generally purpose pattern",
    "start": "255400",
    "end": "262160"
  },
  {
    "text": "languages stuff like the D DDD building blocks right the where you introduce stereotypes Concepts and attach certain",
    "start": "262160",
    "end": "269840"
  },
  {
    "text": "rules to them uh so that they when I say Aggregate and you say aggregate then",
    "start": "269840",
    "end": "275360"
  },
  {
    "text": "we're not I mean some people say we end up in a giant debate about what that really is right but it's it's at least",
    "start": "275360",
    "end": "282280"
  },
  {
    "text": "okay we have a scope of consistency and it's supposed to enforce business rules and then we can discuss how we how we",
    "start": "282280",
    "end": "288039"
  },
  {
    "text": "actually uh Implement that um so the the fundamental question stays around right",
    "start": "288039",
    "end": "295560"
  },
  {
    "text": "we we have these we have architectural Concepts um and we actually need to turn",
    "start": "295560",
    "end": "301120"
  },
  {
    "text": "them into into code why do we actually need need to do that well architectural Concepts alone don't really produce",
    "start": "301120",
    "end": "308240"
  },
  {
    "text": "working software right or as I phrases usually is posted don't run in production unfortunately right so except",
    "start": "308240",
    "end": "315360"
  },
  {
    "text": "you work at my role um but the code is the actual deliverable right for us to",
    "start": "315360",
    "end": "320880"
  },
  {
    "text": "actually produce functionality so uh we actually need the architectural Concepts to relate to parts of the code base and",
    "start": "320880",
    "end": "327600"
  },
  {
    "text": "actually also vice versa right um so there's a a book that has as I found",
    "start": "327600",
    "end": "336000"
  },
  {
    "text": "um influenced the work that I've done over the past decade quite significantly it's George fairbank's just enough",
    "start": "336000",
    "end": "341240"
  },
  {
    "text": "software architecture and there was I was just reading or skimming through the book especially this uh model code model",
    "start": "341240",
    "end": "348919"
  },
  {
    "text": "chapter model code chapter um on the flight to Amsterdam actually because I",
    "start": "348919",
    "end": "354720"
  },
  {
    "text": "knew I read it in 2017 or something and I thought okay this a lot of interesting ideas in here",
    "start": "354720",
    "end": "361080"
  },
  {
    "text": "let's see whether we can actually put some of them in practice and I was like sitting in on the plane I was literally",
    "start": "361080",
    "end": "367319"
  },
  {
    "text": "every paragraph was like directly connectable to something that we actually can now do these days or it was",
    "start": "367319",
    "end": "373880"
  },
  {
    "text": "outlining a limitation from 2012 I think the book is that they or he perceived as",
    "start": "373880",
    "end": "379919"
  },
  {
    "text": "a limitation to uh being able to build that uh that bridge and I was like oh",
    "start": "379919",
    "end": "386599"
  },
  {
    "text": "we're actually doing the stuff that he's kind of deemed unreasonable or being too",
    "start": "386599",
    "end": "391800"
  },
  {
    "text": "much effort these days with part of some of the technology that we that I'm that I'm working on so so what is what does",
    "start": "391800",
    "end": "400440"
  },
  {
    "text": "he point out in that particular code model chapter he points out that architecture and code they differ vastly",
    "start": "400440",
    "end": "408759"
  },
  {
    "text": "in various degrees but they're also somehow somehow connected right the first thing is of course the level of",
    "start": "408759",
    "end": "413880"
  },
  {
    "text": "abstraction uh as I said architecture talks about modules um",
    "start": "413880",
    "end": "420080"
  },
  {
    "text": "in a in a in a logical sense whereas code is very very specific there's classes there's methods and what have",
    "start": "420080",
    "end": "426199"
  },
  {
    "text": "you also the encapsulation mechanisms are rather abstract in a in in the architectural world with modules where",
    "start": "426199",
    "end": "432879"
  },
  {
    "text": "it's um rather technical uh in in in the in the individual programming language",
    "start": "432879",
    "end": "438919"
  },
  {
    "text": "although some Java like the Java ecosystem have come up with with let's say a module system or a concept of",
    "start": "438919",
    "end": "445240"
  },
  {
    "text": "modules in the in the language as well right um we talk about different things",
    "start": "445240",
    "end": "450360"
  },
  {
    "text": "in domain terms here doesn't mean like domain in terms of customer or order or what have you but architecture in itself",
    "start": "450360",
    "end": "456599"
  },
  {
    "text": "is a domain and code in itself as a domain right we have in code we have a class we have a method right this is",
    "start": "456599",
    "end": "462520"
  },
  {
    "text": "like this totally different totally different uh vocabularies and um as I",
    "start": "462520",
    "end": "467680"
  },
  {
    "text": "said the pattern languages he identifies them as well similarly to Cora um that",
    "start": "467680",
    "end": "473319"
  },
  {
    "text": "that that come up with Concepts and rules um so as I mentioned aggregate and",
    "start": "473319",
    "end": "479680"
  },
  {
    "text": "then there's certain rules surrounding um Aggregates how they are allowed to relate to each other and we coming back",
    "start": "479680",
    "end": "485240"
  },
  {
    "text": "to that in a in a minute he then once he's pointed this",
    "start": "485240",
    "end": "490479"
  },
  {
    "text": "out he points to a paper it's like this book is really a rabbit hole right here's a paper and then in that paper",
    "start": "490479",
    "end": "495560"
  },
  {
    "text": "you find references to other papers so there's a paper by um Eden and kasman um architecture design implementation that",
    "start": "495560",
    "end": "502720"
  },
  {
    "text": "differentiates architectural and design elements into extensional elements and",
    "start": "502720",
    "end": "507879"
  },
  {
    "text": "intentional elements some tricky it's not too hard to understand extensional elements are elements that you describe",
    "start": "507879",
    "end": "514360"
  },
  {
    "text": "by enumerating them right and you see that I've kind of place them in in between abstraction and vocabulary in a",
    "start": "514360",
    "end": "520919"
  },
  {
    "text": "in a software system you at some point come up with some decomposition strategy and then you say here is my order module",
    "start": "520919",
    "end": "527560"
  },
  {
    "text": "and here's my inventory module so you enumerate what kind of Parts you",
    "start": "527560",
    "end": "532680"
  },
  {
    "text": "actually uh want to want to implement code is entirely ex extensional right",
    "start": "532680",
    "end": "538279"
  },
  {
    "text": "you just you actually enumerate the order Cloud you you put things in place whereas intentional elements are",
    "start": "538279",
    "end": "544560"
  },
  {
    "text": "specified meaning it's exactly relating to this concept and rules thing on the left um meaning we come up with ideas",
    "start": "544560",
    "end": "553240"
  },
  {
    "text": "like there's something something like a layer right and the layer is allowed to depend on other layers but not on layers",
    "start": "553240",
    "end": "559760"
  },
  {
    "text": "above him or above it um so there is these Concepts and rules and the",
    "start": "559760",
    "end": "565920"
  },
  {
    "text": "elements that are intentionally uh intentionally described not",
    "start": "565920",
    "end": "571000"
  },
  {
    "text": "intentionally uh are usually much harder to uh to translate into a into a code",
    "start": "571000",
    "end": "576920"
  },
  {
    "text": "base and to make a connection to them right",
    "start": "576920",
    "end": "582320"
  },
  {
    "start": "579000",
    "end": "910000"
  },
  {
    "text": "right George ends up at coining a term that I've read in this book the first time I think it's been like popularized",
    "start": "582320",
    "end": "588480"
  },
  {
    "text": "by um folks like Simon Brown he's talking a lot about this stuff as well um architecturally evident code what is",
    "start": "588480",
    "end": "594920"
  },
  {
    "text": "that it's actually code that represents or expresses the architectural ideas and",
    "start": "594920",
    "end": "601880"
  },
  {
    "text": "design the design intent that it's kind of like been designed for basically",
    "start": "601880",
    "end": "607360"
  },
  {
    "text": "right the intent so looking at the extensional elements stuff like components and modules there's a very",
    "start": "607360",
    "end": "614360"
  },
  {
    "text": "direct or quote unquote easy U mapping to artifacts in in the code world so we",
    "start": "614360",
    "end": "621640"
  },
  {
    "text": "can of course have a debate on whether we want to let's say or want to implement our order and inventory",
    "start": "621640",
    "end": "627920"
  },
  {
    "text": "modules or shipment as individual systems right ending up with a microservices architecture or",
    "start": "627920",
    "end": "635040"
  },
  {
    "text": "whether we want to basically map them to build modules or let's say just log have a way to express logical modules in in",
    "start": "635040",
    "end": "642480"
  },
  {
    "text": "our application and map them on packages or or what what have we um the same",
    "start": "642480",
    "end": "647519"
  },
  {
    "text": "applies to just the general business domain language that we use um this is",
    "start": "647519",
    "end": "653560"
  },
  {
    "text": "usually reflected I mean if you've if you're like been uh busy with the DDD",
    "start": "653560",
    "end": "658639"
  },
  {
    "text": "tactical build blocks uh that's usually like a language that you establish and this is somehow translated into code by",
    "start": "658639",
    "end": "665600"
  },
  {
    "text": "naming classes by naming methods um Fields might be less important because they're like encapsulated already right",
    "start": "665600",
    "end": "673480"
  },
  {
    "text": "but just coming up with expressing an email address as a value object for example is a classical thing that that",
    "start": "673480",
    "end": "678959"
  },
  {
    "text": "someone um using the DDD building blocks would would do right so for intentional",
    "start": "678959",
    "end": "684600"
  },
  {
    "text": "elements though um I actually came up with um with or mentioned value objects",
    "start": "684600",
    "end": "690000"
  },
  {
    "text": "um already right so we have these these pattern languages again DDD or um layers",
    "start": "690000",
    "end": "696360"
  },
  {
    "text": "um onion rings or ports and adapters we're going to look at that later um so how do we actually bake this into uh",
    "start": "696360",
    "end": "704000"
  },
  {
    "text": "into our code base these Concepts right how do we express that a class is a value object or that a set of classes",
    "start": "704000",
    "end": "711959"
  },
  {
    "text": "form or belong to um a layer or an or an onion ring or some of them are adapters",
    "start": "711959",
    "end": "719399"
  },
  {
    "text": "ports so um you can of course have naming conventions about them right that's kind of um that's possible U",
    "start": "719399",
    "end": "726880"
  },
  {
    "text": "George then this in the book he this differentiates between soft means to establish those con those those",
    "start": "726880",
    "end": "733720"
  },
  {
    "text": "connections by using naming conventions and um stronger means so um stuff that",
    "start": "733720",
    "end": "740360"
  },
  {
    "text": "can actually be enforced and verified we're going to get to that in a second right so that the space is pretty um",
    "start": "740360",
    "end": "747880"
  },
  {
    "text": "pretty like broad here so we have like strategic patterns or like what are the",
    "start": "747880",
    "end": "753360"
  },
  {
    "text": "things that we could actually try to represent in the code base like bounded context like context Maps modules on a",
    "start": "753360",
    "end": "760040"
  },
  {
    "text": "on a strategic level when we talk about DDD and the Tactical ones I've already mentioned those there's this space of",
    "start": "760040",
    "end": "767320"
  },
  {
    "text": "like event based systems and um or event based Communication in between",
    "start": "767320",
    "end": "772880"
  },
  {
    "text": "components um and there's this entire architectural space with uh layers rings",
    "start": "772880",
    "end": "779240"
  },
  {
    "text": "ports and adapters command and queries so something is something similar that we have here let's start with the with",
    "start": "779240",
    "end": "785199"
  },
  {
    "text": "the uh tactical part um and have a look at an example here so just a very simple",
    "start": "785199",
    "end": "791560"
  },
  {
    "text": "example what what you see here is um an order that contains or consists of a a",
    "start": "791560",
    "end": "796839"
  },
  {
    "text": "set of line items and uh the order like belongs to a customer some customer has has placed",
    "start": "796839",
    "end": "803800"
  },
  {
    "text": "that forgive me that I'm using a uml here it's like I'm a bit bit busy in the",
    "start": "803800",
    "end": "808839"
  },
  {
    "text": "univ diversity environment so I'm kind of used to work with that so what have we done here we've kind of there are",
    "start": "808839",
    "end": "815160"
  },
  {
    "text": "these model elements that we that we that AR these architectural model elements that we've already assigned or",
    "start": "815160",
    "end": "820639"
  },
  {
    "text": "I basically just put them into the uml diagram so I've I assigned um both the order the customer and the line item",
    "start": "820639",
    "end": "828519"
  },
  {
    "text": "stereotypes that's uml stereotypes here so there's an aggregate this is an aggregate or an aggregate root to be",
    "start": "828519",
    "end": "834759"
  },
  {
    "text": "precise and this is an arbitrary entity could even be a value but but yeah just",
    "start": "834759",
    "end": "840440"
  },
  {
    "text": "for that for that sake so these model elements as I've mentioned these Concepts have rules attached to them",
    "start": "840440",
    "end": "846959"
  },
  {
    "text": "which means there are certain rules uh about the way that Aggregates might",
    "start": "846959",
    "end": "852120"
  },
  {
    "text": "relate to other Aggregates um they've been like especially when it comes to how to represent them code there's you",
    "start": "852120",
    "end": "858199"
  },
  {
    "text": "have to mention vaugh Vernon's book implementing domain driv design where he like comes or first formalizes these",
    "start": "858199",
    "end": "864839"
  },
  {
    "text": "these rules explicitly about how to how to actually um them right and if if we",
    "start": "864839",
    "end": "870680"
  },
  {
    "text": "actually apply them to the model we already find out that there's something wrong here right did anyone see that",
    "start": "870680",
    "end": "876079"
  },
  {
    "text": "before I now mention it right uh there is this rule I think it's first",
    "start": "876079",
    "end": "881120"
  },
  {
    "text": "materialized in V's book Aggregates must not depend on other Aggregates uh except",
    "start": "881120",
    "end": "886759"
  },
  {
    "text": "via identifiers right so that's something we can do and that's something we can like logically and manually",
    "start": "886759",
    "end": "893959"
  },
  {
    "text": "verify when we work with the model but it might also be a good idea to be able to um if we can actually somehow bake",
    "start": "893959",
    "end": "901959"
  },
  {
    "text": "that information into the code uh we can actually do the verification in the code and then get feedback about uh the",
    "start": "901959",
    "end": "908000"
  },
  {
    "text": "correctness of our code um there's a couple of tools that you can use to to um yeah Define",
    "start": "908000",
    "end": "914680"
  },
  {
    "start": "910000",
    "end": "1334000"
  },
  {
    "text": "Concepts and rules uh with or with your code base like Arc unit is like a I",
    "start": "914680",
    "end": "920360"
  },
  {
    "text": "think it's both the Germans right it's both German Le um projects we like order",
    "start": "920360",
    "end": "926639"
  },
  {
    "text": "we like things to be we we like think oh I just I'm sorry",
    "start": "926639",
    "end": "932199"
  },
  {
    "text": "jump back we like things to be on time as well but that doesn't work out with especially with the bar but it's it's",
    "start": "932199",
    "end": "939480"
  },
  {
    "text": "interesting why are you laughing it's it's it's interesting that like okay there's like a apparently this interest",
    "start": "939480",
    "end": "945839"
  },
  {
    "text": "in in verifying code and coming up with rules um on the code basis so what do these tools look like uh with JQ",
    "start": "945839",
    "end": "951800"
  },
  {
    "text": "assistant uh you using you're basically persisting um the the of your code into",
    "start": "951800",
    "end": "958560"
  },
  {
    "text": "a Gra database NE J and then you define queries that both Mark or Define the",
    "start": "958560",
    "end": "966639"
  },
  {
    "text": "concepts and the rules right this is you don't have to fully understand this but it's kind of um the what it's doing here",
    "start": "966639",
    "end": "973319"
  },
  {
    "text": "is it selects a certain set of types within the the types that it has persisted or scanned and added to the",
    "start": "973319",
    "end": "979959"
  },
  {
    "text": "database in the first place and for all the ones that that match that criteria here it adds a label to them right it",
    "start": "979959",
    "end": "986560"
  },
  {
    "text": "marks a certain set of types as aggregates and um yeah returns a bit of information and what's what's remarkable",
    "start": "986560",
    "end": "993120"
  },
  {
    "text": "here is that in this case um how does it know where how to find an aggregate in",
    "start": "993120",
    "end": "999800"
  },
  {
    "text": "the first place right we actually have to teach it and what we're doing here and we're going to come back to that in",
    "start": "999800",
    "end": "1006160"
  },
  {
    "text": "in a second as well um is that this in this case represents or references a",
    "start": "1006160",
    "end": "1012120"
  },
  {
    "text": "spring data repository base interface right so we make use of a certain of a",
    "start": "1012120",
    "end": "1017519"
  },
  {
    "text": "particular technology to identify the logical concept that feels",
    "start": "1017519",
    "end": "1022920"
  },
  {
    "text": "a bit backwards right the idea here is that um if we find an entity I think",
    "start": "1022920",
    "end": "1028079"
  },
  {
    "text": "that's the uh no we we look at the repositories because a repository by definition man manages Aggregates and",
    "start": "1028079",
    "end": "1034360"
  },
  {
    "text": "there's a generic type structure in the in the repository type and we find out we take the first one here the the index",
    "start": "1034360",
    "end": "1040600"
  },
  {
    "text": "zero right which is neat because that gets the job done but it's kind of like",
    "start": "1040600",
    "end": "1046120"
  },
  {
    "text": "it just worked with with spring and we have to come in come up with it ourselves right the Second Step that you",
    "start": "1046120",
    "end": "1052039"
  },
  {
    "text": "can then do is basically use the information that we' that we've created here uh there's an",
    "start": "1052039",
    "end": "1057080"
  },
  {
    "text": "aggregate um and we can then basically say oh if we have an Aggregate and that has a field that's an AG aggregate turn",
    "start": "1057080",
    "end": "1063919"
  },
  {
    "text": "then we we return these elements and the rules kind of work that way that if the query yields any results those results",
    "start": "1063919",
    "end": "1071880"
  },
  {
    "text": "are a violation right that's kind of the way it does it's extremely powerful um",
    "start": "1071880",
    "end": "1077000"
  },
  {
    "text": "you usually integrate it in a in in a build step and it cannot only it's especially powerful because it cannot",
    "start": "1077000",
    "end": "1083360"
  },
  {
    "text": "only um look at your source code but it can also in scan through your git commit",
    "start": "1083360",
    "end": "1089120"
  },
  {
    "text": "history and you can do all kinds of correlations like which commits touched",
    "start": "1089120",
    "end": "1094159"
  },
  {
    "text": "which parts of the code base and Define rules about about all of this kind of stuff so extremely powerful it takes a",
    "start": "1094159",
    "end": "1100440"
  },
  {
    "text": "bit of getting used to especially if you're not familiar with NE forj and the cipher query language but I mean that's",
    "start": "1100440",
    "end": "1105799"
  },
  {
    "text": "something okay if you want to do this then that's a nice tool similarly uh similar tool is Arc unit AR unit is",
    "start": "1105799",
    "end": "1112840"
  },
  {
    "text": "entirely Java based um the idea is that you formulate the rules you both",
    "start": "1112840",
    "end": "1118840"
  },
  {
    "text": "identify Concepts and formulate the rules in Java code right there an it's an API that I've like neatly hidden uh",
    "start": "1118840",
    "end": "1125960"
  },
  {
    "text": "with in within the aggregate ex Aggregates extractor class here that's basically a customization of of Arc unit",
    "start": "1125960",
    "end": "1132799"
  },
  {
    "text": "how I tell it to find um all the um Aggregates and then there is this rule",
    "start": "1132799",
    "end": "1138520"
  },
  {
    "text": "that I can put here right this is the where where we established the concepts and then um we establish the rule in a",
    "start": "1138520",
    "end": "1145080"
  },
  {
    "text": "all Aggregates should not refer to other Aggregates and then we check the the types of our of our project that's kind",
    "start": "1145080",
    "end": "1151400"
  },
  {
    "text": "of neat again um it's I think a bit more approachable than than um JQ assistant",
    "start": "1151400",
    "end": "1159039"
  },
  {
    "text": "because it's plain Java you can just write a test class you execute the classes the tests or the verification as",
    "start": "1159039",
    "end": "1166440"
  },
  {
    "text": "part of your tests but it of course is more limited to the to defining to",
    "start": "1166440",
    "end": "1171880"
  },
  {
    "text": "defining rules about the actual code base right so let's zoom out a bit again and",
    "start": "1171880",
    "end": "1179720"
  },
  {
    "text": "have a look at what we've kind of done in both of these examples right we had our user code um we had these",
    "start": "1179720",
    "end": "1185840"
  },
  {
    "text": "architectural Concepts and the rules attached to them and there was technology involved the",
    "start": "1185840",
    "end": "1192240"
  },
  {
    "text": "spring framework um spring framework repositories were referenced and there",
    "start": "1192240",
    "end": "1197360"
  },
  {
    "text": "were tools that um we were actually using to teach them how to actually",
    "start": "1197360",
    "end": "1203280"
  },
  {
    "text": "identify the concept and the rules that's kind of the way that we've worked right so um the the concept definition",
    "start": "1203280",
    "end": "1210679"
  },
  {
    "text": "is actually um rather residing on the tool side so as you've seen there was no",
    "start": "1210679",
    "end": "1217200"
  },
  {
    "text": "unique expression of something is an aggregate we had to formulate how to identify the concept in both the JQ",
    "start": "1217200",
    "end": "1224480"
  },
  {
    "text": "assistant way and the AR unit way right both the the concepts and the rules",
    "start": "1224480",
    "end": "1229760"
  },
  {
    "text": "were defined by referring to like both the tool and the the the spring data",
    "start": "1229760",
    "end": "1236000"
  },
  {
    "text": "repositories and we were responsible to Define both of them right we defined the",
    "start": "1236000",
    "end": "1242039"
  },
  {
    "text": "what how to find an aggregate in the first place and the actual rules surrounding it so that feels that I mean",
    "start": "1242039",
    "end": "1248919"
  },
  {
    "text": "enables us to do what we kind of want it's just that if you start a new project I don't think the first thing",
    "start": "1248919",
    "end": "1255960"
  },
  {
    "text": "you want to do is um actually come up with okay we need to",
    "start": "1255960",
    "end": "1261080"
  },
  {
    "text": "decide on a tool and then we actually have to uh find out how we identify the concepts that we want to use and then",
    "start": "1261080",
    "end": "1267200"
  },
  {
    "text": "Define the rules and do this over and over again maybe copy the stuff from from another project that if maybe used",
    "start": "1267200",
    "end": "1272799"
  },
  {
    "text": "DDD building blocks in your code already so what can we what can we do about this so let's assume we had some",
    "start": "1272799",
    "end": "1279600"
  },
  {
    "text": "kind of magic superpower something we could actually use to actually embed",
    "start": "1279600",
    "end": "1284880"
  },
  {
    "text": "these Concepts in the user code directly so that all we need to do is just Express",
    "start": "1284880",
    "end": "1291400"
  },
  {
    "text": "that something this order is supposed to be an aggregate root and by that we can",
    "start": "1291400",
    "end": "1297279"
  },
  {
    "text": "actually prepare the tools externally or we can prepare reusable extensions to",
    "start": "1297279",
    "end": "1302440"
  },
  {
    "text": "certain tools that then Iden find the concepts in the codebase and uh actually",
    "start": "1302440",
    "end": "1309360"
  },
  {
    "text": "um also implement the rules that are supposed to be verified so they could be provided by the tool slf framework",
    "start": "1309360",
    "end": "1316400"
  },
  {
    "text": "Windows to actually integrate with that right the framework um the framework",
    "start": "1316400",
    "end": "1322039"
  },
  {
    "text": "Windows as well so one of the projects or that I've been involved with for a couple of years now and that's been kind",
    "start": "1322039",
    "end": "1328279"
  },
  {
    "text": "of the result of a discussion of of these topics at various conferences is",
    "start": "1328279",
    "end": "1334440"
  },
  {
    "start": "1334000",
    "end": "1500000"
  },
  {
    "text": "uh the X molecules project and the idea was it's primarily driven by um Stefan",
    "start": "1334440",
    "end": "1340039"
  },
  {
    "text": "pbom actually the one of the guys behind JQ assistant and Henning schwentner he's a colleague of the aforementioned carola",
    "start": "1340039",
    "end": "1347520"
  },
  {
    "text": "Le we thinking okay what if there were like programming",
    "start": "1347520",
    "end": "1353240"
  },
  {
    "text": "language specific means to express these architectural Concepts in the code base right and then I'm working primarily in",
    "start": "1353240",
    "end": "1359880"
  },
  {
    "text": "the Java space so I was like okay let's have this J molecules thing and um Henning was like oh no no no we need to",
    "start": "1359880",
    "end": "1366440"
  },
  {
    "text": "touch net as well and and PHP or whatever um the reason that I'm I'm",
    "start": "1366440",
    "end": "1372080"
  },
  {
    "text": "spending a bit of time on on this project or on this project especially the J molecules one and that's why it",
    "start": "1372080",
    "end": "1378520"
  },
  {
    "text": "compared to the other projects is a bit more farther ahead in terms of like integration with various tools and and",
    "start": "1378520",
    "end": "1384960"
  },
  {
    "text": "Frameworks but um if there's anyone working in the net or PHP space please",
    "start": "1384960",
    "end": "1391000"
  },
  {
    "text": "reach out to me we're looking for people to to get in touch with to populate these ideas in in other programming",
    "start": "1391000",
    "end": "1397679"
  },
  {
    "text": "language communities as well all right so what what does it do right um let's",
    "start": "1397679",
    "end": "1402919"
  },
  {
    "text": "start with some basically a representation of the order example that I've shown you I've",
    "start": "1402919",
    "end": "1408960"
  },
  {
    "text": "already added a bit of mess to that right you see some jpa annotations and there is like lumbo involved here so you",
    "start": "1408960",
    "end": "1416320"
  },
  {
    "text": "can argue that there's not much of the like domain kind of left it's like a bit",
    "start": "1416320",
    "end": "1421360"
  },
  {
    "text": "of the forest for the trees here and um what can we do about this right so the first thing we can do is um oh that that",
    "start": "1421360",
    "end": "1429520"
  },
  {
    "text": "this J molecues Library allows us is to exp use types to actually Express the",
    "start": "1429520",
    "end": "1435200"
  },
  {
    "text": "architectural role of a type in in the type system right so we can actually Implement a",
    "start": "1435200",
    "end": "1440559"
  },
  {
    "text": "market interface aggregate root and that then in turn already uh has generics",
    "start": "1440559",
    "end": "1446240"
  },
  {
    "text": "declared so that it actually requires the the identifier type to actually Implement identifier in turn right so",
    "start": "1446240",
    "end": "1454440"
  },
  {
    "text": "this is the idea behind that is that we use the type system and the the kind of",
    "start": "1454440",
    "end": "1459559"
  },
  {
    "text": "restricting means of a type system to already like for one uh of course we can",
    "start": "1459559",
    "end": "1465320"
  },
  {
    "text": "we can think about this as some kind of verification validation that the order ID is really an identifier but it's also",
    "start": "1465320",
    "end": "1471640"
  },
  {
    "text": "it has some some um some viral effect on on the code base right that we kind of",
    "start": "1471640",
    "end": "1477159"
  },
  {
    "text": "uh promote these these types into uh into other into other related types um",
    "start": "1477159",
    "end": "1483080"
  },
  {
    "text": "the primary idea being we don't actually need for some or for some parts of the verification we don't even need extra",
    "start": "1483080",
    "end": "1489679"
  },
  {
    "text": "tools other than the ones that we already use and the compiler is actually quite helpful um W with that right so we",
    "start": "1489679",
    "end": "1496919"
  },
  {
    "text": "get a bit of Base verific a for that so with only that in place we can already",
    "start": "1496919",
    "end": "1503760"
  },
  {
    "start": "1500000",
    "end": "1702000"
  },
  {
    "text": "get a step ahead because we can now in JQ assistant we don't have to formulate all the queries and all the cipher stuff",
    "start": "1503760",
    "end": "1509840"
  },
  {
    "text": "ourselves but we can simply use the predefined uh the predefined oh my gosh",
    "start": "1509840",
    "end": "1515640"
  },
  {
    "text": "um yeah dependency that you just hand into the plug-in so JQ assistant allows you to prepare those rules in consumable",
    "start": "1515640",
    "end": "1523880"
  },
  {
    "text": "jars and then you basically use them in a way that I I've shown you here right with with with Maven um and there's a",
    "start": "1523880",
    "end": "1531080"
  },
  {
    "text": "bit of configuration where you can enable different levels of verifications by that with an with ar unit it's kind",
    "start": "1531080",
    "end": "1537880"
  },
  {
    "text": "of the same uh there's just basically a class that gives you access to a factory method that produces this this AR unit",
    "start": "1537880",
    "end": "1544039"
  },
  {
    "text": "Rule and in this uh jddd J molecules DDD rules all there is like a couple of",
    "start": "1544039",
    "end": "1550039"
  },
  {
    "text": "things like value objects must not depend on entities and all these kind of uh model specific rules including the",
    "start": "1550039",
    "end": "1556760"
  },
  {
    "text": "one that um Aggregates must not depend on other Aggregates except",
    "start": "1556760",
    "end": "1562159"
  },
  {
    "text": "um via identifier um there's bit of a recent development um that we were were",
    "start": "1562159",
    "end": "1569200"
  },
  {
    "text": "looking okay this still requires you to either execute the tests or even the entire build to get the feedback and um",
    "start": "1569200",
    "end": "1577159"
  },
  {
    "text": "I've been experimenting with a bit of um or there's some API in in Java The",
    "start": "1577159",
    "end": "1583080"
  },
  {
    "text": "annotation processing tool kit uh that that basically hooks into the compiler so you actually get a chance to post",
    "start": "1583080",
    "end": "1590399"
  },
  {
    "text": "process all the um all the classes that have been part of a compile step which",
    "start": "1590399",
    "end": "1595799"
  },
  {
    "text": "is usually used to uh generate Downstream source code which is then compiled again um but you can also in",
    "start": "1595799",
    "end": "1603799"
  },
  {
    "text": "that very step you can attach additional compiler errors to an existing class",
    "start": "1603799",
    "end": "1609039"
  },
  {
    "text": "right and that's basically what I'm doing here you see I've kind of artificially introduced the same mistake that we had in the in the um in the",
    "start": "1609039",
    "end": "1616559"
  },
  {
    "text": "example before so that order is is an aggregate root and it still references the customer which is an aggregate route",
    "start": "1616559",
    "end": "1622880"
  },
  {
    "text": "itself that's not on the on the slide here but down here uh it basically says what I've like printed out in the back",
    "start": "1622880",
    "end": "1629000"
  },
  {
    "text": "so it's ined aggregate root reference it's exactly the error message that you would get if you ran this via um via J",
    "start": "1629000",
    "end": "1636799"
  },
  {
    "text": "molecules or not J molecules JQ assistant or ar unit right so there an an additional dependency AJ molecules AP",
    "start": "1636799",
    "end": "1643159"
  },
  {
    "text": "dependency that you put into your project and you get basically your compil TR verification of your DDD model",
    "start": "1643159",
    "end": "1648880"
  },
  {
    "text": "so the question that usually comes up is like if I have this why would I use the other tools um one of the the the cases",
    "start": "1648880",
    "end": "1657399"
  },
  {
    "text": "where where you would basically refrain from using that versus the others is if you have an existing project and you",
    "start": "1657399",
    "end": "1662960"
  },
  {
    "text": "would want to gradually uh introduce these verifications and you end up with like the code not compiling anymore",
    "start": "1662960",
    "end": "1668760"
  },
  {
    "text": "right with this thing because that's the strictest uh flavor you can get of this whereas the other tools allow you to",
    "start": "1668760",
    "end": "1674679"
  },
  {
    "text": "basically limit the set of classes that are checked uh Arc unit has a way to kind of freeze the rules so you can run",
    "start": "1674679",
    "end": "1681720"
  },
  {
    "text": "it once it captures all of the violations and then it only barks at you if you introduce new violations right",
    "start": "1681720",
    "end": "1689720"
  },
  {
    "text": "you can basically say okay we don't care about the current code but whenever I change stuff uh when I add new code I I",
    "start": "1689720",
    "end": "1696559"
  },
  {
    "text": "don't want want that to um um appear here right so there's another thing that",
    "start": "1696559",
    "end": "1703320"
  },
  {
    "start": "1702000",
    "end": "1976000"
  },
  {
    "text": "I want to just briefly touch upon um before we move up the stack a bit um is that the expression of those um of those",
    "start": "1703320",
    "end": "1710919"
  },
  {
    "text": "Concepts or is Al allows us to get rid of a bit of a bit of boilerplate code um",
    "start": "1710919",
    "end": "1716080"
  },
  {
    "text": "that I've that You' just seen here in the examples so w with the um the concepts and the rules are usually if",
    "start": "1716080",
    "end": "1722600"
  },
  {
    "text": "we're thinking in in onion architecture are usually located both in the domain uh core and the application ring that's",
    "start": "1722600",
    "end": "1729000"
  },
  {
    "text": "where you basically represent your your domain abstractions like and your your application rules Services what have you",
    "start": "1729000",
    "end": "1735919"
  },
  {
    "text": "um there is this infrastructuring around uh the the application ring that then",
    "start": "1735919",
    "end": "1741080"
  },
  {
    "text": "kind of touches into let's say database access or web apis right so this is",
    "start": "1741080",
    "end": "1746640"
  },
  {
    "text": "where uh Frameworks like spring jpa or Jackson come into play and there's a",
    "start": "1746640",
    "end": "1752519"
  },
  {
    "text": "certain set or if you follow let's say if you use let's say a lot of a lot of value objects in your domain um or these",
    "start": "1752519",
    "end": "1759679"
  },
  {
    "text": "aggregate structures those has an effect of you actually need um to teach let's",
    "start": "1759679",
    "end": "1766000"
  },
  {
    "text": "say spring framework that it can actually resolve an identifier that you send via a web request it can actually resol",
    "start": "1766000",
    "end": "1773000"
  },
  {
    "text": "automatically resolve that into the full aggregate instance for you so there's some integration points with technology",
    "start": "1773000",
    "end": "1780039"
  },
  {
    "text": "Frameworks um and and one example that I that I've basically pulled out here is",
    "start": "1780039",
    "end": "1785080"
  },
  {
    "text": "that in this example we uh there's a lot of boiler plate induced in the class by",
    "start": "1785080",
    "end": "1792320"
  },
  {
    "text": "jpa right we need to add all kinds of metadata to get that class mapped onto",
    "start": "1792320",
    "end": "1798559"
  },
  {
    "text": "um onto a data store right and this is uh rightfully frown upon by like DDD",
    "start": "1798559",
    "end": "1804240"
  },
  {
    "text": "people like you don't want to don't want your your uh applic or your domain entities um be dependent on jpa whereas",
    "start": "1804240",
    "end": "1812600"
  },
  {
    "text": "like annotations might be the might be the the the slightest form of dependency here but there's other stuff in here",
    "start": "1812600",
    "end": "1818360"
  },
  {
    "text": "that's even like more problematic and subtly problematic right jpa requires you to have a a default Constructor",
    "start": "1818360",
    "end": "1825039"
  },
  {
    "text": "which kind of yeah sub somehow subverts our ability to keep uh Fields non",
    "start": "1825039",
    "end": "1830640"
  },
  {
    "text": "nullable and whatnot so long story short Tech bleeds into your into your code",
    "start": "1830640",
    "end": "1835960"
  },
  {
    "text": "base and the question is or most of that or not most yeah almost all of the",
    "start": "1835960",
    "end": "1842080"
  },
  {
    "text": "annotations the jpa specific annotations in here are kind of they're not really",
    "start": "1842080",
    "end": "1847559"
  },
  {
    "text": "like room for creativity right because if this thing really is an aggregate",
    "start": "1847559",
    "end": "1853039"
  },
  {
    "text": "there's not so many ways that that that thing could be actually mapped to a relational database except you have an",
    "start": "1853039",
    "end": "1860039"
  },
  {
    "text": "existing database schema that you need to adhere to but if you start from scratch then this is kind of there's a",
    "start": "1860039",
    "end": "1865559"
  },
  {
    "text": "certain kind of rules like uh references into collections of entities always have",
    "start": "1865559",
    "end": "1870720"
  },
  {
    "text": "to Cascade and they also have to use off and delete and whatnot certain rules that kind of apply to a technology",
    "start": "1870720",
    "end": "1876960"
  },
  {
    "text": "projection of uh a certain architectural concept so we can go ahead and basically",
    "start": "1876960",
    "end": "1883679"
  },
  {
    "text": "um attach again the metadata to the class and we've also changed uh the",
    "start": "1883679",
    "end": "1888880"
  },
  {
    "text": "simple customer ID reference to something we call or we have in J molecules called an association and with",
    "start": "1888880",
    "end": "1895600"
  },
  {
    "text": "that we can actually get rid of all the um jpa metadata by using some code",
    "start": "1895600",
    "end": "1901440"
  },
  {
    "text": "generation in in bbody that we would actually when you compile your code it would actually add the persistent",
    "start": "1901440",
    "end": "1909039"
  },
  {
    "text": "specific metadata that's needed to your code right uh there's support for that for jpa for jdbc for mongodb so we're",
    "start": "1909039",
    "end": "1916080"
  },
  {
    "text": "not kind of uh just focused on on on one of one of them um so the idea",
    "start": "1916080",
    "end": "1921200"
  },
  {
    "text": "fundamentally is you again you express something in your code that's an this order is an Aggregate and we make uh",
    "start": "1921200",
    "end": "1928120"
  },
  {
    "text": "make sure that it uh correctly maps onto onto some persistence mechanism that you",
    "start": "1928120",
    "end": "1934000"
  },
  {
    "text": "that you chose so basically this is where you started this is what you get rid of and this is what you end up with",
    "start": "1934000",
    "end": "1940519"
  },
  {
    "text": "which already looks like much cleaner right there's a bit of uh lombok induced boiler plate oh and there's this one",
    "start": "1940519",
    "end": "1945880"
  },
  {
    "text": "special thing about order because order there's a keyword in SQL so we need to either quote it or in this case I just",
    "start": "1945880",
    "end": "1952720"
  },
  {
    "text": "thought okay it would be nice to rename The annotation and it kind of it's it's",
    "start": "1952720",
    "end": "1957880"
  },
  {
    "text": "in a you end up in a much better place because that's customization that's the only thing that's special about jpa in",
    "start": "1957880",
    "end": "1964240"
  },
  {
    "text": "this case right uh and that's the only thing that that that we end up having to add and everything else is just being",
    "start": "1964240",
    "end": "1970240"
  },
  {
    "text": "being taken care of right and we made of course the the",
    "start": "1970240",
    "end": "1975320"
  },
  {
    "text": "code more expressible all right so we have have 10 minutes left 10 minutes 50",
    "start": "1975320",
    "end": "1980600"
  },
  {
    "start": "1976000",
    "end": "2358000"
  },
  {
    "text": "minutes right 15 15 nice um so with that it's kind of what you should take from",
    "start": "1980600",
    "end": "1986799"
  },
  {
    "text": "this section is there's like these these fundamental building blocks DDD related",
    "start": "1986799",
    "end": "1991840"
  },
  {
    "text": "uh that you can actually Express via the type system uh in your code base and",
    "start": "1991840",
    "end": "1997720"
  },
  {
    "text": "then it get like the verification and the reduction of boiler plateform um if we move out a bit and",
    "start": "1997720",
    "end": "2005440"
  },
  {
    "text": "basically um look at back look at have a look back at um the um onion",
    "start": "2005440",
    "end": "2011320"
  },
  {
    "text": "architecture for example right we can also have a look at okay how do we actually represent that in in in our",
    "start": "2011320",
    "end": "2017600"
  },
  {
    "text": "code base um or the question is whether we should actually do that primarily so",
    "start": "2017600",
    "end": "2023200"
  },
  {
    "text": "onion architecture for the rest of us it's basically a domain core and application ring around that so it's",
    "start": "2023200",
    "end": "2029720"
  },
  {
    "text": "basically assigning code to certain logical Parts domain being at the core application services and whatnot uh",
    "start": "2029720",
    "end": "2036799"
  },
  {
    "text": "surrounding that and um the infrastructure uh components being kind of located on the",
    "start": "2036799",
    "end": "2044080"
  },
  {
    "text": "on the outer rim of the application and there's a um kind of predefined allowed",
    "start": "2044080",
    "end": "2049480"
  },
  {
    "text": "dependency direction that um the infrastructure depends on the application layer the application here depends on or the ring depends basically",
    "start": "2049480",
    "end": "2056919"
  },
  {
    "text": "from outside to the inside right so the fundamental or what I found interesting",
    "start": "2056919",
    "end": "2063960"
  },
  {
    "text": "about any of the of these separation of concerns architectures be hexagonal or onion architecture or what have you um",
    "start": "2063960",
    "end": "2070720"
  },
  {
    "text": "they're they're kind of telling you how to separate your technical code everything that's an infrastructure from",
    "start": "2070720",
    "end": "2076480"
  },
  {
    "text": "your business code primarily for the sake of testability which is a good idea",
    "start": "2076480",
    "end": "2081599"
  },
  {
    "text": "but it's also a bit like especially for people working in the spring ecosystem like that's kind of what we've done",
    "start": "2081599",
    "end": "2088240"
  },
  {
    "text": "forever really right so I mean blame us for all the XML stuff but",
    "start": "2088240",
    "end": "2094200"
  },
  {
    "text": "um we've always like we've always incentivized you write your your business code and then you say p package",
    "start": "2094200",
    "end": "2101400"
  },
  {
    "text": "that in in a service and that's unit testable and then you have your controller that's like a separate piece",
    "start": "2101400",
    "end": "2107320"
  },
  {
    "text": "of code that um then exposes that functionality to http for example right",
    "start": "2107320",
    "end": "2114040"
  },
  {
    "text": "um so the fundamental question is this is kind of kind of formally describing",
    "start": "2114040",
    "end": "2119200"
  },
  {
    "text": "what we've kind of informally done especially in that ecosystem for a while already and we can also raise the",
    "start": "2119200",
    "end": "2124800"
  },
  {
    "text": "question of whether the thing or the problem this is solving achieving testability is a is a",
    "start": "2124800",
    "end": "2131599"
  },
  {
    "text": "honorable goal I guess but is this really the primary thing that we need to solve when we're talking about like",
    "start": "2131599",
    "end": "2137640"
  },
  {
    "text": "system decomposition um and yeah we have the basically the infrastructure on the",
    "start": "2137640",
    "end": "2143359"
  },
  {
    "text": "outside so if we um isn't the the primary problem of of software",
    "start": "2143359",
    "end": "2149920"
  },
  {
    "text": "architecture here Define a decomposition of your domain in the first place right like we need to actually separate want",
    "start": "2149920",
    "end": "2156599"
  },
  {
    "text": "to separate the order Stu stuff from the inventory stuff from the shipment stuff and what have you so these architectures",
    "start": "2156599",
    "end": "2162359"
  },
  {
    "text": "do not really care about that right and they are not I'm not saying they do not",
    "start": "2162359",
    "end": "2167960"
  },
  {
    "text": "care but they're not helpful in achieving that or basically yeah that that separation so how would you",
    "start": "2167960",
    "end": "2174280"
  },
  {
    "text": "actually do that so if you let's say have like two of these domains order in inventory um do you basically copy the",
    "start": "2174280",
    "end": "2180760"
  },
  {
    "text": "the onion right so two onions that kind of I mean that's that's a perfectly reasonable approach it kind of leads",
    "start": "2180760",
    "end": "2186520"
  },
  {
    "text": "toward looks like bit of we're heading towards microservices right so we have like separate systems that all contain",
    "start": "2186520",
    "end": "2193560"
  },
  {
    "text": "the infrastructure and like apis and what have you um or even like the self-contained systems uh approach",
    "start": "2193560",
    "end": "2200040"
  },
  {
    "text": "really because the apis and uis are included here but it kind of raises the question how do these things then talk",
    "start": "2200040",
    "end": "2206079"
  },
  {
    "text": "to each other right if we need to notify the um notify the inventory about like",
    "start": "2206079",
    "end": "2211160"
  },
  {
    "text": "an order that's been completed then we actually have to go through all of these these uh components or through the",
    "start": "2211160",
    "end": "2216720"
  },
  {
    "text": "infrastructure probably a message broker that works fine can nicely be mapped to a microservices system however do we",
    "start": "2216720",
    "end": "2224960"
  },
  {
    "text": "really want to equate oh we want to decompose a domain with we always need to do microservices um that's probably",
    "start": "2224960",
    "end": "2232000"
  },
  {
    "text": "not the case so a different approach could be like okay let's just have multiple domains inside here does that",
    "start": "2232000",
    "end": "2237720"
  },
  {
    "text": "get us very far probably not because there's like domain specific code in each of the application Rings there's",
    "start": "2237720",
    "end": "2243839"
  },
  {
    "text": "probably controllers and repositories that relate to certain domain abstractions so what else can we do um",
    "start": "2243839",
    "end": "2251960"
  },
  {
    "text": "and who likes to prepare food what's the best part of prepare I I have a I have a task when I'm at home",
    "start": "2251960",
    "end": "2259240"
  },
  {
    "text": "and we're cooking and then there's like one task that I'm kind of feel or I seem qualify qualified enough to be tasked",
    "start": "2259240",
    "end": "2266400"
  },
  {
    "text": "with that which is cutting onions right um and the the idea is as follows and",
    "start": "2266400",
    "end": "2272920"
  },
  {
    "text": "it's usually involving tears um is we we basically cut the on and by that we kind",
    "start": "2272920",
    "end": "2280000"
  },
  {
    "text": "of open up parts of the application ring to the not necessarily to the outside",
    "start": "2280000",
    "end": "2285359"
  },
  {
    "text": "but to potentially other cut onions right um and if we get to that kind of",
    "start": "2285359",
    "end": "2290680"
  },
  {
    "text": "arrangement we can just like wrap this in a nice strink wrap and then we kind of package these individual onions in an",
    "start": "2290680",
    "end": "2299079"
  },
  {
    "text": "application and then it's could be just like a modulith arrangement I guess you see where I'm heading because in the end",
    "start": "2299079",
    "end": "2306599"
  },
  {
    "text": "what happens inside of these boxes in inside of these green boxes doesn't really matter anymore right so they",
    "start": "2306599",
    "end": "2313640"
  },
  {
    "text": "these they could individually expose let's say in in in the spring space spring beans like object references that",
    "start": "2313640",
    "end": "2319880"
  },
  {
    "text": "we could call from uh one uh one um one module to another or it could expose",
    "start": "2319880",
    "end": "2326160"
  },
  {
    "text": "events right and I mentioned the word already it's not really about like onions or or hexagonal or ports or",
    "start": "2326160",
    "end": "2333119"
  },
  {
    "text": "adapters in on that level of arrangement but it's like we have individual modules",
    "start": "2333119",
    "end": "2338359"
  },
  {
    "text": "right logical modules and whether you you use um onion architecture to",
    "start": "2338359",
    "end": "2343480"
  },
  {
    "text": "technically decompose them internally is an implementation detail to these individual modules and it can be even in",
    "start": "2343480",
    "end": "2350400"
  },
  {
    "text": "a monolith monolithic Arrangement the way the same way it can be an internal arrangement in a in a microservices",
    "start": "2350400",
    "end": "2357760"
  },
  {
    "text": "envirment so that's kind of leading towards the um um the project that I'm currently working on uh I don't want to",
    "start": "2357760",
    "end": "2364640"
  },
  {
    "start": "2358000",
    "end": "2860000"
  },
  {
    "text": "give you a full overview about this but rather connect um uh basically the all",
    "start": "2364640",
    "end": "2371640"
  },
  {
    "text": "the ideas that I've just basically presented to you already to how this",
    "start": "2371640",
    "end": "2376960"
  },
  {
    "text": "basically Maps into the spring world in in more detail and how we can actually uh just to give you a rough idea of what",
    "start": "2376960",
    "end": "2383079"
  },
  {
    "text": "what it's trying to achieve um there is as your Standard Spring boot application right you have your um it's located in a",
    "start": "2383079",
    "end": "2390319"
  },
  {
    "text": "in a in some package here com ACM modulus and you can then uh go ahead or",
    "start": "2390319",
    "end": "2396640"
  },
  {
    "text": "what it kind of does it it it it implies that all the direct sub packages form the entry points of into a logical",
    "start": "2396640",
    "end": "2404359"
  },
  {
    "text": "application module system as we call it to application module uh system",
    "start": "2404359",
    "end": "2409839"
  },
  {
    "text": "explicitly because there already is a Java module system which has kind of different goals and kind of does other",
    "start": "2409839",
    "end": "2416560"
  },
  {
    "text": "thing like certain things much better it can integrate on the jvm level and um basically allowed the jdk team to",
    "start": "2416560",
    "end": "2423000"
  },
  {
    "text": "decompose it into um individual um artifacts but it also um doesn't and for",
    "start": "2423000",
    "end": "2429400"
  },
  {
    "text": "a reason doesn't actually consider let's say application Level developer concerns like creating documentation about this",
    "start": "2429400",
    "end": "2437040"
  },
  {
    "text": "um making tests easy or whatnot we're going to get to that in a second so there's an a spring boot specific kind",
    "start": "2437040",
    "end": "2444200"
  },
  {
    "text": "of idea of how you structure your application into logical modules and it allows you to um have code that's",
    "start": "2444200",
    "end": "2451880"
  },
  {
    "text": "exposed to other modules and code that's uh hidden from other modules it doesn't have they these packages don't have to",
    "start": "2451880",
    "end": "2458319"
  },
  {
    "text": "be named internal it's just that every subpackage of these um base packages here is just kind of hidden by default",
    "start": "2458319",
    "end": "2465440"
  },
  {
    "text": "and there means to actually um yeah design the API of a",
    "start": "2465440",
    "end": "2472240"
  },
  {
    "text": "module quote unquote um also important difference to the jpms is we can have multiple logical modules inside a very",
    "start": "2472240",
    "end": "2478800"
  },
  {
    "text": "inside a very jar right so what do you what do you need to do to actually get the",
    "start": "2478800",
    "end": "2484160"
  },
  {
    "text": "relationships between the modules verified there's a again it's test uh class where you say application modules",
    "start": "2484160",
    "end": "2489480"
  },
  {
    "text": "off point to the uh main application class so that's that's the spring boot application class and you just call",
    "start": "2489480",
    "end": "2495480"
  },
  {
    "text": "verify on them uh and then you basically uh we are using Arc unit under the covers and you get these Arc unit rules",
    "start": "2495480",
    "end": "2503079"
  },
  {
    "text": "that you would have to write manually module a is allowed to only to allowed",
    "start": "2503079",
    "end": "2508960"
  },
  {
    "text": "uh to depend on classes of module B that are reside in certain package automatically basically um applied to",
    "start": "2508960",
    "end": "2515520"
  },
  {
    "text": "your to your core base right that's kind of that's kind of the idea for the verification",
    "start": "2515520",
    "end": "2521440"
  },
  {
    "text": "um we also extend that into into testability when it comes to to spring so with uh the spring boot you actually",
    "start": "2521440",
    "end": "2529680"
  },
  {
    "text": "um Can horizontally carve out slices of your application to only test those",
    "start": "2529680",
    "end": "2535800"
  },
  {
    "text": "right so there's web MVC test to only bootstrap controllers and um data jpa",
    "start": "2535800",
    "end": "2541640"
  },
  {
    "text": "data test that only bootstraps repositories and that's already kind of a reflection of a similar idea that we",
    "start": "2541640",
    "end": "2548240"
  },
  {
    "text": "started with right so the The Stereotype annotations you find in Spring framework",
    "start": "2548240",
    "end": "2554400"
  },
  {
    "text": "achieve the same um kind of the same goal and they were developed in the same spirit so that you logically assign a",
    "start": "2554400",
    "end": "2561319"
  },
  {
    "text": "certain role to a class um and then the framework in turn uses that assignment",
    "start": "2561319",
    "end": "2566920"
  },
  {
    "text": "to find out which components to bootstrap the reason we've kind of moved or started this J molecules thing uh in",
    "start": "2566920",
    "end": "2574079"
  },
  {
    "text": "parallel to that was that for one why does it have to be spring specific right",
    "start": "2574079",
    "end": "2579640"
  },
  {
    "text": "and the other thing is that spring naturally doesn't have any kind of um interest in like being or allowing you",
    "start": "2579640",
    "end": "2586559"
  },
  {
    "text": "to express um like other part like DDD Concepts or what have you right so there's a natural limitation of what the",
    "start": "2586559",
    "end": "2592960"
  },
  {
    "text": "framework is interested in and this is usually horizontal layers because the framework is interested in um applying",
    "start": "2592960",
    "end": "2600200"
  },
  {
    "text": "technical uh guidance um on these layers right controllers are basically exposed",
    "start": "2600200",
    "end": "2606520"
  },
  {
    "text": "as you Dev through your web uh through your web server or in data accesses there's like exception translation from",
    "start": "2606520",
    "end": "2613319"
  },
  {
    "text": "jdbc exceptions into a general purpose data access exception hierarchy so if spring boot can do that with the uh",
    "start": "2613319",
    "end": "2621280"
  },
  {
    "text": "module um uh package convention that we've established in in Spring modulith",
    "start": "2621280",
    "end": "2626480"
  },
  {
    "text": "we can also basically allow you to carve out a tests horizonally uh so there's an",
    "start": "2626480",
    "end": "2632680"
  },
  {
    "text": "add application module test annotation and then if you locate an integration test in uh in basically the very same",
    "start": "2632680",
    "end": "2639079"
  },
  {
    "text": "package then you it would only bootstrap the the vertical the vertical slice for you the final thing is that we can look",
    "start": "2639079",
    "end": "2646359"
  },
  {
    "text": "at the components um as um or the look at the modules as some kind of component",
    "start": "2646359",
    "end": "2652839"
  },
  {
    "text": "right they're kind of encapsulating stuff they have a provided interface and a required interface so provided is the",
    "start": "2652839",
    "end": "2658760"
  },
  {
    "text": "API but required is everything that is require yeah as the name suggest or the",
    "start": "2658760",
    "end": "2664200"
  },
  {
    "text": "term suggest required by other modules and we can actually go ahead and with uh",
    "start": "2664200",
    "end": "2670400"
  },
  {
    "text": "with the help of the J molecules abstractions that you could use in your in your application code we can find",
    "start": "2670400",
    "end": "2676319"
  },
  {
    "text": "these things right we can find like um exposed services like if you use the in this case spring framework stereotype",
    "start": "2676319",
    "end": "2682240"
  },
  {
    "text": "annotations but there's also the DDD service annotation is available in J molecules um Aggregates you have you",
    "start": "2682240",
    "end": "2688520"
  },
  {
    "text": "have seen uh there's also a marker event for domain events um to express those um",
    "start": "2688520",
    "end": "2695319"
  },
  {
    "text": "and we can then basically do the same thing for the required uh interface there's a spring boot specific specialty",
    "start": "2695319",
    "end": "2701640"
  },
  {
    "text": "in here for configuration properties right that's like an architectual term to some degree as well but it's kind of",
    "start": "2701640",
    "end": "2707839"
  },
  {
    "text": "reflected in Spring boot as a certain mechanism how to implement um external",
    "start": "2707839",
    "end": "2713960"
  },
  {
    "text": "configuration and there's also of course the the consumed events right the event we have event listeners and means to",
    "start": "2713960",
    "end": "2721200"
  },
  {
    "text": "express something is supposed to listen to an event in the codebase and because",
    "start": "2721200",
    "end": "2726760"
  },
  {
    "text": "that information is available in the codebase we can kind of extract it and from the 500 classes that you have to",
    "start": "2726760",
    "end": "2733520"
  },
  {
    "text": "deal with in your application we can just pull out the ones that are quote unquote interesting or interesting to be",
    "start": "2733520",
    "end": "2740400"
  },
  {
    "text": "documented because they form an API um and then we can actually create um this is like from a university project I'm",
    "start": "2740400",
    "end": "2746800"
  },
  {
    "text": "doing it with the uh Tu in Dron uh it's that's just a um sample project that the",
    "start": "2746800",
    "end": "2752520"
  },
  {
    "text": "students get to write um applications with but it's kind of considering each module as a uml component here writing",
    "start": "2752520",
    "end": "2759640"
  },
  {
    "text": "out um a component diagram with different kinds of relationships in there there's an overview diagram that",
    "start": "2759640",
    "end": "2766359"
  },
  {
    "text": "we create there is a diagram that just carves out an a subtree of the of the um",
    "start": "2766359",
    "end": "2771880"
  },
  {
    "text": "of the overall tree to basically in this case show oh if I want to understand the inventory then these are the direct",
    "start": "2771880",
    "end": "2779559"
  },
  {
    "text": "dependencies that I have and this stuff is all like pulled out of out of the",
    "start": "2779559",
    "end": "2784760"
  },
  {
    "text": "code and we also pull out a what we call application module canvas it's like a",
    "start": "2784760",
    "end": "2789839"
  },
  {
    "text": "textual description in originally asid do that then can be rendered uh and",
    "start": "2789839",
    "end": "2795680"
  },
  {
    "text": "produces that table in which you see oh we find like all the spring components by stereotype uh so if you were using",
    "start": "2795680",
    "end": "2803000"
  },
  {
    "text": "that's probably um interesting to mention here if you were using J molecules has means to um Express onion",
    "start": "2803000",
    "end": "2809520"
  },
  {
    "text": "and hexagonal architecture so if you were um declaring your classes at this",
    "start": "2809520",
    "end": "2815000"
  },
  {
    "text": "class is a port and this class is is an adapter you would not see service and controller here but you would see port",
    "start": "2815000",
    "end": "2822040"
  },
  {
    "text": "and adapter right so we kind of extract the information again that you put into the C base aggregate Roots value types",
    "start": "2822040",
    "end": "2829040"
  },
  {
    "text": "uh the same stuff so everything that if you have a new team member coming into into your team and they're supposed to",
    "start": "2829040",
    "end": "2835760"
  },
  {
    "text": "change something about the the cbase you can actually Point them to to that kind of stuff and it gives them a high level",
    "start": "2835760",
    "end": "2841040"
  },
  {
    "text": "overview without the need to immediately jump um into the code base and uh all of",
    "start": "2841040",
    "end": "2846960"
  },
  {
    "text": "that documentation the nice thing about it is it's by definition is it's up to date I'm not saying it's correct because",
    "start": "2846960",
    "end": "2852960"
  },
  {
    "text": "like it could be uh stuff in there but it's it's direct a direct reflection of the code base that you generate",
    "start": "2852960",
    "end": "2858240"
  },
  {
    "text": "basically through through each build all right um so with that we're",
    "start": "2858240",
    "end": "2863680"
  },
  {
    "start": "2860000",
    "end": "2935000"
  },
  {
    "text": "just basically um we're putting architectural Concepts in code We There",
    "start": "2863680",
    "end": "2868839"
  },
  {
    "text": "are means um available in the form in in the Javas space and inj molecules um",
    "start": "2868839",
    "end": "2874960"
  },
  {
    "text": "we're not kind of coming up with with new stuff here there like pre-established pattern languages that",
    "start": "2874960",
    "end": "2880079"
  },
  {
    "text": "we support um the architectural um approaches that I've that I've mentioned and um yeah J",
    "start": "2880079",
    "end": "2887440"
  },
  {
    "text": "molecules is the vehicle and there's like a lot of framework integration as you've like seen um in in a certain",
    "start": "2887440",
    "end": "2894640"
  },
  {
    "text": "way and with that oh oh yeah there's a paper um that we've written on J",
    "start": "2894640",
    "end": "2900400"
  },
  {
    "text": "molecules in particular um it kind of summarizes basically everything I've said like in the last 50 minutes uh in a",
    "start": "2900400",
    "end": "2908040"
  },
  {
    "text": "five uh five-page document and there's going to be a book coming hopefully end of this year um I've been saying this",
    "start": "2908040",
    "end": "2915200"
  },
  {
    "text": "for quite a few years already but books are like software right they're always late um but I'm I'm confident and I'm",
    "start": "2915200",
    "end": "2922880"
  },
  {
    "text": "making progress that's nice um and with that of course links to the projects uh",
    "start": "2922880",
    "end": "2929040"
  },
  {
    "text": "there's a ga Community uh there's a lot of books in their papers and I think with that I'm done",
    "start": "2929040",
    "end": "2937880"
  },
  {
    "start": "2935000",
    "end": "2955000"
  },
  {
    "text": "thank you for your attention and enjoy the rest of the conference",
    "start": "2937880",
    "end": "2942599"
  }
]