[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "it's quite an intro thank you very much um hi I'm Marty yes I'm the founder of",
    "start": "3200",
    "end": "9720"
  },
  {
    "text": "Vine and um uh I created a language that we now build at my company",
    "start": "9720",
    "end": "15540"
  },
  {
    "text": "um and the purpose of my talk here is I'm going to talk about semantic metadata and how we can use it to create",
    "start": "15540",
    "end": "21660"
  },
  {
    "text": "an automated data mesh so this is this is the title of the talk building an",
    "start": "21660",
    "end": "26699"
  },
  {
    "text": "automated data mesh using semantic metadata and it's a fairly Punchy title right there's a lot of um a lot of jargon in",
    "start": "26699",
    "end": "34079"
  },
  {
    "text": "there so we're going to unpack it and explore the title a little bit so I'm going to start off with here",
    "start": "34079",
    "end": "39719"
  },
  {
    "start": "38000",
    "end": "108000"
  },
  {
    "text": "I'm going to talk about what a data mesh is for a little bit so if we look across kind of a Enterprise organization there's a bunch",
    "start": "39719",
    "end": "46440"
  },
  {
    "text": "of different places that we can go to to get information a bunch of services that we can query a bunch of databases a",
    "start": "46440",
    "end": "52980"
  },
  {
    "text": "bunch of cues bunch of lambdas all the different things that we are all very busy building in our day jobs to create",
    "start": "52980",
    "end": "58559"
  },
  {
    "text": "things that vend information and the idea of a data mesh is to give me a place that I can ask and interact",
    "start": "58559",
    "end": "66240"
  },
  {
    "text": "with these services that kind of sits above it right and a data layer that sits above it where I can ask for",
    "start": "66240",
    "end": "72240"
  },
  {
    "text": "information and for data products that are vended from each of these things in a decentralized way so we're not talking",
    "start": "72240",
    "end": "80220"
  },
  {
    "text": "about ETL in this in this talk this is not a conversation about how do I pick up and lift and shift my data into into",
    "start": "80220",
    "end": "87299"
  },
  {
    "text": "a data Lake we're talking about how do I how do I gather data from these services and let",
    "start": "87299",
    "end": "92820"
  },
  {
    "text": "it stay decentralized I want to query them in place and I want to be able to do it on demand",
    "start": "92820",
    "end": "98759"
  },
  {
    "text": "so a data mesh is a place where On Demand I can query my data services my databases my queues all that good stuff",
    "start": "98759",
    "end": "105659"
  },
  {
    "text": "but I want to do it automated so as you can imagine if I'm integrating with all of these different data sources there's",
    "start": "105659",
    "end": "111720"
  },
  {
    "start": "108000",
    "end": "280000"
  },
  {
    "text": "a huge amount of Plumbing work that I have to do relatively uninteresting boring integration work connecting a to",
    "start": "111720",
    "end": "118320"
  },
  {
    "text": "B piping data around the place there's lots of different tools that we can use for doing this",
    "start": "118320",
    "end": "125219"
  },
  {
    "text": "a lot of them don't really kind of live up to the litmus test of what we consider to be automated so",
    "start": "125219",
    "end": "131099"
  },
  {
    "text": "there's a couple of things a couple of tests I like to apply for is something truly automated",
    "start": "131099",
    "end": "137040"
  },
  {
    "text": "the first litmus test is can it connect on demand can it can it do what I need",
    "start": "137040",
    "end": "142379"
  },
  {
    "text": "it to when I ask it to or more specifically can it do it without having someone come along beforehand to has",
    "start": "142379",
    "end": "149940"
  },
  {
    "text": "preconceived of my specific use case and wired it up so we think about integration and the",
    "start": "149940",
    "end": "155400"
  },
  {
    "text": "ways that we do integration the way that we solve them today typically there's a handful of tools that we that we will",
    "start": "155400",
    "end": "161099"
  },
  {
    "text": "reach for pretty much everyone in this room will probably open up their IDE and write a bunch of code and let's be honest that's our preferred way of",
    "start": "161099",
    "end": "167280"
  },
  {
    "text": "solving it um but that's not exactly automated and that doesn't scale particularly well when you've got thousands of services",
    "start": "167280",
    "end": "173519"
  },
  {
    "text": "lots of different things that we're trying to connect to so it's not it's not particularly automated",
    "start": "173519",
    "end": "179640"
  },
  {
    "text": "we might use some kind of drag and drop orchestration flow Builder where I can pull some nodes onto a canvas and draw",
    "start": "179640",
    "end": "186540"
  },
  {
    "text": "some lines to connect them and deploy that as an integration orchestration layer and that's cool there's a lot less",
    "start": "186540",
    "end": "193319"
  },
  {
    "text": "code involved but it's not automated right when someone comes along with a new requirement like giving this",
    "start": "193319",
    "end": "199500"
  },
  {
    "text": "customer's email address what's their account balance we need to have already built that integration flow for that to work so",
    "start": "199500",
    "end": "206519"
  },
  {
    "text": "it's not automated or we might reach for something like graphql and do some kind of funkier",
    "start": "206519",
    "end": "211800"
  },
  {
    "text": "newer stuff in the graphql space but again we're still having to write resolvers we're still having to build",
    "start": "211800",
    "end": "217680"
  },
  {
    "text": "the connections between the services ahead of time so again cool but not automated",
    "start": "217680",
    "end": "223920"
  },
  {
    "text": "so the first let me test is can it connect on demand can it do what I want it to do the second one is Canada debt",
    "start": "223920",
    "end": "230879"
  },
  {
    "text": "as I make changes as I push changes into my organization as I replace my database with an API whereas I take a series of",
    "start": "230879",
    "end": "238080"
  },
  {
    "text": "apis and replace them with a database thus completing the circle of life have we you know can I can my integration",
    "start": "238080",
    "end": "245099"
  },
  {
    "text": "layer automatically adapt or do I have to go back into my drag and drop UI and",
    "start": "245099",
    "end": "250920"
  },
  {
    "text": "fix it do I have to go and update my graphql resolver to say that method was a put now it's a post or we've gone from",
    "start": "250920",
    "end": "257699"
  },
  {
    "text": "HTTP to https or someone's refactored that field name so if I have to constantly go and",
    "start": "257699",
    "end": "263100"
  },
  {
    "text": "maintain my integration layer it is by definition not automated",
    "start": "263100",
    "end": "268620"
  },
  {
    "text": "so we want to build an automated data mesh and in order to do it in order to realize that Vision we need a lot of",
    "start": "268620",
    "end": "277620"
  },
  {
    "text": "metadata in order to do it which brings us to semantic metadata now we have no shortage of metadata today in",
    "start": "277620",
    "end": "285180"
  },
  {
    "start": "280000",
    "end": "392000"
  },
  {
    "text": "the way that we build our systems right we are all creating open API specs we",
    "start": "285180",
    "end": "291360"
  },
  {
    "text": "might be tuning up protobuf Avro Jason schema ddl Ram or rdf what it like",
    "start": "291360",
    "end": "297000"
  },
  {
    "text": "whatever your graphql whatever your schema languages of choice you are producing schemas to describe your",
    "start": "297000",
    "end": "302340"
  },
  {
    "text": "systems or you're not and you're doing it directly from code and that's fine too but this metadata these things that we",
    "start": "302340",
    "end": "309600"
  },
  {
    "text": "build to describe our systems they tend to be very how oriented they",
    "start": "309600",
    "end": "314639"
  },
  {
    "text": "talk about here's how to connect to my service here's where it is it's running on this port at this address it's",
    "start": "314639",
    "end": "320280"
  },
  {
    "text": "speaking HTTP at speaking https these are the field names that you'll get back",
    "start": "320280",
    "end": "325320"
  },
  {
    "text": "so when you want to read my data here's how to navigate the tree that you're getting back or they'll talk about",
    "start": "325320",
    "end": "332039"
  },
  {
    "text": "here's how to serialize data to to send it onto a queue well here's how to deserialize it to read it off it's very",
    "start": "332039",
    "end": "337919"
  },
  {
    "text": "how oriented very important but it doesn't really talk much about",
    "start": "337919",
    "end": "343080"
  },
  {
    "text": "what it is what the information is that I'm getting out it doesn't talk about how the integration from my service",
    "start": "343080",
    "end": "349259"
  },
  {
    "text": "connects to your service doesn't talk about what the what the relationships are between all of our data",
    "start": "349259",
    "end": "355860"
  },
  {
    "text": "and that's why we want semantic metadata we want metadata that enriches our existing specs to describe the what the",
    "start": "355860",
    "end": "363240"
  },
  {
    "text": "semantics and that's what taxi is it's a it's a metadata language for",
    "start": "363240",
    "end": "368460"
  },
  {
    "text": "describing data and services not about the not so much about how to interact with them but what you'll find when you",
    "start": "368460",
    "end": "374940"
  },
  {
    "text": "get there how the data interacts how it um how it relates",
    "start": "374940",
    "end": "380759"
  },
  {
    "text": "I'm going to talk about how to use these two things in combination to build an",
    "start": "380759",
    "end": "386100"
  },
  {
    "text": "automated data mesh using semantic metadata so that's the title of the talk let's begin",
    "start": "386100",
    "end": "392580"
  },
  {
    "start": "392000",
    "end": "1190000"
  },
  {
    "text": "so I want to talk a little bit about structural versus semantic contracts right this is a big this is a big concept that kind of underpins this we",
    "start": "392580",
    "end": "400139"
  },
  {
    "text": "touched on it briefly structural contracts are very much about the how do I do this right how do I connect to",
    "start": "400139",
    "end": "407340"
  },
  {
    "text": "you what protocol do I speak what information do I need to give you what are the fields name field names you're going to give me back",
    "start": "407340",
    "end": "414440"
  },
  {
    "text": "contracts that talk about what is the information I'm going to find when I get there what is the data that you're going",
    "start": "415319",
    "end": "420600"
  },
  {
    "text": "to give me so if we take a look at this contract right here is a bit of pseudo code on",
    "start": "420600",
    "end": "426060"
  },
  {
    "text": "the left with a customer and he's got three fields and then on the right we have got a Json",
    "start": "426060",
    "end": "432539"
  },
  {
    "text": "representation of that same thing so we've got three Fields an idea name and email and if we look at this Json blob",
    "start": "432539",
    "end": "438840"
  },
  {
    "text": "we kind of get what it is right like we can look at it and we can go yeah that's Jimmy like I know Jimmy it's got a cool",
    "start": "438840",
    "end": "445139"
  },
  {
    "text": "email address he's got a short catchy three digit customer ID I get it",
    "start": "445139",
    "end": "451440"
  },
  {
    "text": "the left hand side on our domain everything that we're looking at here is structural it tells me the names of the",
    "start": "451440",
    "end": "457380"
  },
  {
    "text": "fields that I can expect to receive if I want to interact with this blob of Json right it's structure",
    "start": "457380",
    "end": "463680"
  },
  {
    "text": "more specifically it's telling me how do I navigate this map that's really all it's saying right how do I how do I",
    "start": "463680",
    "end": "471060"
  },
  {
    "text": "navigate this map to find the stuff that you knew ahead of time would be there waiting for you",
    "start": "471060",
    "end": "477440"
  },
  {
    "text": "so if I was to change the structure if I was to break that structural contract everything would fall apart right I if I",
    "start": "478020",
    "end": "484560"
  },
  {
    "text": "I can't just go into a Json blob and change the name of a field from name to given name that's just not allowed it",
    "start": "484560",
    "end": "490259"
  },
  {
    "text": "breaks the contract that said I can still look at the blob on the right and it still looks like Jimmy right the fact that I've renamed",
    "start": "490259",
    "end": "497819"
  },
  {
    "text": "this field hasn't changed the meaning of the data that's there it's just changed the way that I go to read it",
    "start": "497819",
    "end": "504120"
  },
  {
    "text": "likewise I can restructure it a bit more I can take his email address and I can shove it down a level and wrap it up in",
    "start": "504120",
    "end": "509340"
  },
  {
    "text": "this context object rename changing the structure a bit further but still if I look at the blob",
    "start": "509340",
    "end": "514560"
  },
  {
    "text": "I can still like work out I can still guess where his email address is it's j at foo.com",
    "start": "514560",
    "end": "522260"
  },
  {
    "text": "true if I change his email address and I stick his postcode in there we've broken a contract",
    "start": "523620",
    "end": "529800"
  },
  {
    "text": "virtual contract hasn't changed this the Json that I was reading I can still read but I can't access this email address",
    "start": "529800",
    "end": "536459"
  },
  {
    "text": "anymore that's quite clearly the post postcode I've broken a structural contract but",
    "start": "536459",
    "end": "542459"
  },
  {
    "text": "that that semantic contract sorry it's not really represented on the left hand",
    "start": "542459",
    "end": "547500"
  },
  {
    "text": "side there's no way for me to kind of understand or represent that this is supposed to be an email address other than a field name",
    "start": "547500",
    "end": "555079"
  },
  {
    "text": "if we expand that concept over a few different systems so here we've got three different systems that want to",
    "start": "555360",
    "end": "560700"
  },
  {
    "text": "chat to each other we've got a customer system we've got some cards with credit card information we've got a balance",
    "start": "560700",
    "end": "566399"
  },
  {
    "text": "okay again three different um pseudo contracts and three different Blobs of data down the bottom that kind",
    "start": "566399",
    "end": "572700"
  },
  {
    "text": "of that that show the data that's coming out of them and if we look at this we can if we squint a bit we can start to",
    "start": "572700",
    "end": "578940"
  },
  {
    "text": "see some relationships emerge between the data and this is in practice the way that we do integration today right yeah",
    "start": "578940",
    "end": "584940"
  },
  {
    "text": "look at a blob of Jason you fire it up and post it and you go I recognize that number and you're stitched together ID",
    "start": "584940",
    "end": "590519"
  },
  {
    "text": "and customer number and so we can recognize that the data that's in here is related even though",
    "start": "590519",
    "end": "595740"
  },
  {
    "text": "the field names are different there's a contract between these two bits of information that if I was to break stuff",
    "start": "595740",
    "end": "600899"
  },
  {
    "text": "would fall apart likewise our card number and account ID",
    "start": "600899",
    "end": "606540"
  },
  {
    "text": "the card number is exactly the same it's present in both places but the field names are completely different and it",
    "start": "606540",
    "end": "612779"
  },
  {
    "text": "doesn't matter it doesn't matter that one team called this field card number and another team called it account ID it's a good thing",
    "start": "612779",
    "end": "619920"
  },
  {
    "text": "right it's why we do domain driven design it's why we have small autonomous teams so I can create software that",
    "start": "619920",
    "end": "625980"
  },
  {
    "text": "relates that's meaningful to me as a team rather than subscribing to some overarching naming principle",
    "start": "625980",
    "end": "631860"
  },
  {
    "text": "the reality is that the data that's in here is it has a semantic contract we're",
    "start": "631860",
    "end": "636899"
  },
  {
    "text": "just not doing a great job in our in our specs here of defining what it is",
    "start": "636899",
    "end": "642540"
  },
  {
    "text": "so it's it's not a huge leap to explore them what that might look like if we just start this is really hard to see",
    "start": "642540",
    "end": "648959"
  },
  {
    "text": "but start tagging and introducing that the idea isn't just any old string but",
    "start": "648959",
    "end": "654360"
  },
  {
    "text": "it's a customer ID and actually that the customer number in the cards model",
    "start": "654360",
    "end": "660420"
  },
  {
    "text": "is the same semantic bit of information as the ID from the customer model semantically there's a contract here and",
    "start": "660420",
    "end": "667320"
  },
  {
    "text": "so what we can start doing is introducing ways of modeling and defining that contract to start saying",
    "start": "667320",
    "end": "672420"
  },
  {
    "text": "Beyond this being just a string there's actually some there's actually a semantic contract associated with this",
    "start": "672420",
    "end": "678600"
  },
  {
    "text": "data we can then take those semantic contracts we can start embedding them in",
    "start": "678600",
    "end": "685200"
  },
  {
    "text": "our structural contracts so we can we can embed them in our open API spec",
    "start": "685200",
    "end": "691500"
  },
  {
    "text": "we can say that this just isn't a isn't any old type any old string but it has a taxi type of customer ID there's a",
    "start": "691500",
    "end": "698040"
  },
  {
    "text": "semantic contract associated with this field or in my protobuf message I can add some decorators to start saying what the",
    "start": "698040",
    "end": "704700"
  },
  {
    "text": "meaning is of the data that I'll find here or if I'm code based I might just embed",
    "start": "704700",
    "end": "710760"
  },
  {
    "text": "it directly in some annotations in um in kotlin whatever your language of choices",
    "start": "710760",
    "end": "716700"
  },
  {
    "text": "but I can I I have mechanisms now to start enriching my structural schemas that I was already using to start saying",
    "start": "716700",
    "end": "722519"
  },
  {
    "text": "well what what am I going to find here so that kind of leads us into the idea",
    "start": "722519",
    "end": "727620"
  },
  {
    "text": "of semantic metadata which I like to Define as a collection of terms",
    "start": "727620",
    "end": "733140"
  },
  {
    "text": "which form a semantic contract and are shared between systems",
    "start": "733140",
    "end": "738420"
  },
  {
    "text": "so let's break that down let's start with a collection of terms and we've already seen this right customer ID card",
    "start": "738420",
    "end": "744300"
  },
  {
    "text": "number account balance we've seen how we can start using these to describe the ideas in our data that's flowing around",
    "start": "744300",
    "end": "749820"
  },
  {
    "text": "it doesn't really matter what the field name is that I'm using to describe these the semantic contract is what matters",
    "start": "749820",
    "end": "757320"
  },
  {
    "text": "you will find in this field a customer ID you will find in this field a card number",
    "start": "757320",
    "end": "763079"
  },
  {
    "text": "so taxi gives us a way of taking those ideas those those collection of terms",
    "start": "763079",
    "end": "768540"
  },
  {
    "text": "and turning them into a type system so we end up with a strongly typed collection of terms that lets us say",
    "start": "768540",
    "end": "774600"
  },
  {
    "text": "that this is a customer ID that is also a string a card number is a string and account balance is a decimal and because",
    "start": "774600",
    "end": "780899"
  },
  {
    "text": "it's a type system it's rather rather than just being a series of tags it's an actual type system we can start doing",
    "start": "780899",
    "end": "786660"
  },
  {
    "text": "cool stuff with it so we can say that actually this field is not just any old",
    "start": "786660",
    "end": "792240"
  },
  {
    "text": "name but it's a first name and because it's a type system all of the good old-fashioned oo principles apply so we",
    "start": "792240",
    "end": "798720"
  },
  {
    "text": "can say that all first names are names but not all names are first names so we can inject specificity through the",
    "start": "798720",
    "end": "805740"
  },
  {
    "text": "type system or sometimes we can inject contact context if I'm in a transaction that has",
    "start": "805740",
    "end": "811740"
  },
  {
    "text": "a buyer and a seller both of whom are modeled by customer IDs the context is",
    "start": "811740",
    "end": "816779"
  },
  {
    "text": "actually really important so we might want to say that this ID is not just any old customer ID but it is a",
    "start": "816779",
    "end": "822480"
  },
  {
    "text": "buyer customer ID and has a seller customer ID that goes with it so because it's a type system we can move up and",
    "start": "822480",
    "end": "828660"
  },
  {
    "text": "down the abstraction levels to either inject specificity or inject context",
    "start": "828660",
    "end": "835579"
  },
  {
    "text": "which takes us onto semantic contracts so the idea of a semantic contract is",
    "start": "836700",
    "end": "842399"
  },
  {
    "text": "scalar data elements that have the same semantic meanings and and really what we're saying here is that they don't",
    "start": "842399",
    "end": "847620"
  },
  {
    "text": "have structure so scalar in the sense that it's a string it's a date it's a Boolean it's an integer right there's no",
    "start": "847620",
    "end": "853920"
  },
  {
    "text": "structure involved here that's actually a really important principle for one we've got great tools today in open API",
    "start": "853920",
    "end": "860820"
  },
  {
    "text": "and protobuf we've already got great tools for modeling structure what we're trying to fill the Gap in here is what's",
    "start": "860820",
    "end": "866040"
  },
  {
    "text": "the meaning of the data we want to enter and it's important and we want to form",
    "start": "866040",
    "end": "872100"
  },
  {
    "text": "consensus and agree around semantic meaning so we saw this before we saw that it",
    "start": "872100",
    "end": "878220"
  },
  {
    "text": "doesn't really matter the name of the field it doesn't matter hugely what's on the left of the colon that's how software is going to navigate to get to",
    "start": "878220",
    "end": "885000"
  },
  {
    "text": "the bit of information that I want but the bit of information that I want is categorized with the tag on the right",
    "start": "885000",
    "end": "890160"
  },
  {
    "text": "with the type customer ID with card number",
    "start": "890160",
    "end": "894860"
  },
  {
    "text": "if we take a look at a slightly different example if I imagine I've got two different systems that are filming that are serving up film reviews for me",
    "start": "895440",
    "end": "902579"
  },
  {
    "text": "one is IMDb another is Rotten Tomatoes both have the same field name of film ID",
    "start": "902579",
    "end": "908880"
  },
  {
    "text": "the field name is exactly the same but if we look at the data we can just look at that and go that is",
    "start": "908880",
    "end": "914279"
  },
  {
    "text": "not the same bit of information they are not interchangeable I cannot take the ID from IMDb and shove",
    "start": "914279",
    "end": "920820"
  },
  {
    "text": "it into Rotten Tomatoes and expect to get something meaningful back that just doesn't compute so these pieces of information are",
    "start": "920820",
    "end": "927300"
  },
  {
    "text": "semantically different therefore they violate the semantic contract we can't say that they are the same thing",
    "start": "927300",
    "end": "934380"
  },
  {
    "text": "we can name space them we could say that these are one is a film ID in IMDb one is a film ID from",
    "start": "934380",
    "end": "941220"
  },
  {
    "text": "Rotten Tomatoes and then because we have this nice type system we can say they're both ID they're both film IDs",
    "start": "941220",
    "end": "948240"
  },
  {
    "text": "but they're more specific than that one relates to IMDb one relates to Rotten",
    "start": "948240",
    "end": "953339"
  },
  {
    "text": "Tomatoes I could ask for a collection of all of the film IDs and I would get all of them back or I could ask for a",
    "start": "953339",
    "end": "958680"
  },
  {
    "text": "collection of just the film IDs that relate to IMDb and I'll only get a subset back because we have a nice",
    "start": "958680",
    "end": "963720"
  },
  {
    "text": "semantic type system finally semantic contracts are great for",
    "start": "963720",
    "end": "969480"
  },
  {
    "text": "sharing across systems in fact at this point I would argue that semantic contracts are better for sharing across",
    "start": "969480",
    "end": "974940"
  },
  {
    "text": "systems than structural contracts and if we if we drill into that a little bit if we explore again the concept of",
    "start": "974940",
    "end": "981779"
  },
  {
    "text": "structural versus semantic concept contracts structural contracts change all the time",
    "start": "981779",
    "end": "988500"
  },
  {
    "text": "and we know this to be true because we have worked very very very very very hard as an industry over the last 10",
    "start": "988500",
    "end": "993779"
  },
  {
    "text": "years to make this possible right I can destroy my entire AWS ecosystem and rebuild it with just a",
    "start": "993779",
    "end": "1000860"
  },
  {
    "text": "terraform script I can move something from https to http I can refactor a Field's name I can tear down a database",
    "start": "1000860",
    "end": "1008180"
  },
  {
    "text": "and replace it with an API and I can deploy that API 30 times a day so we are",
    "start": "1008180",
    "end": "1013220"
  },
  {
    "text": "very very very good at making changes to structure where will I find this thing where can I interact with it what",
    "start": "1013220",
    "end": "1020120"
  },
  {
    "text": "protocol do I do I speak to it we're really great at making those things change and we want the freedom to be",
    "start": "1020120",
    "end": "1026839"
  },
  {
    "text": "able to make those things change semantics change a lot less frequently",
    "start": "1026839",
    "end": "1031880"
  },
  {
    "text": "my date of birth is my date of birth regardless of whether it was served from a database query or over https",
    "start": "1031880",
    "end": "1039438"
  },
  {
    "text": "my customer ID doesn't change its meaning just because I got it back from a put versus a get right the semantic",
    "start": "1039439",
    "end": "1045380"
  },
  {
    "text": "meaning of that field the semantic contract doesn't change anywhere nearly as frequently as the structure that we",
    "start": "1045380",
    "end": "1052280"
  },
  {
    "text": "use to serve the information structural contracts are really hard to",
    "start": "1052280",
    "end": "1058460"
  },
  {
    "text": "form consensus around it's if you get a bunch of different Engineers into a room and say design the API a design the",
    "start": "1058460",
    "end": "1065900"
  },
  {
    "text": "customer domain model that is not going to be a fun conversation right because you've got lots of different people from lots of",
    "start": "1065900",
    "end": "1071480"
  },
  {
    "text": "different teams where structure means different things by Design again that's a good thing we've followed DDD",
    "start": "1071480",
    "end": "1078620"
  },
  {
    "text": "principles we've embraced microservices we have different teams that care about things in different ways so structurally",
    "start": "1078620",
    "end": "1084919"
  },
  {
    "text": "structural contracts are hard to hard to agree on semantics are really easy we've already done it three times in this",
    "start": "1084919",
    "end": "1091400"
  },
  {
    "text": "course in this conversation we've already agreed on customer ID we already agreed on account balance",
    "start": "1091400",
    "end": "1097580"
  },
  {
    "text": "fear I have the microphone so it's made it easier",
    "start": "1097580",
    "end": "1102400"
  },
  {
    "text": "structural contracts also tend to lead to tight coupling right if I take your open API spec and I pull it into my code",
    "start": "1103220",
    "end": "1109640"
  },
  {
    "text": "then whenever you change your open API spec my code needs to change with you we",
    "start": "1109640",
    "end": "1114799"
  },
  {
    "text": "are by definition tightly coupled whereas semantic contracts when I'm",
    "start": "1114799",
    "end": "1120140"
  },
  {
    "text": "using these types these small semantic types to talk about the data I want to find or the data that I'm going to give",
    "start": "1120140",
    "end": "1125780"
  },
  {
    "text": "you it's much looser so in actual fact you could go one step",
    "start": "1125780",
    "end": "1131419"
  },
  {
    "text": "further and say that structural contracts are ideal for producers open API specs protobuf let me describe",
    "start": "1131419",
    "end": "1139039"
  },
  {
    "text": "to you what you get let me describe to you how to interact with me but consumers",
    "start": "1139039",
    "end": "1145039"
  },
  {
    "text": "structural contracts open API specs they're a raw deal right that's a bunch of work that I'm",
    "start": "1145039",
    "end": "1150620"
  },
  {
    "text": "signing up for I'm not tightly couple sorry I'm tightly coupled if I'm pulling in your speak into my system and that is",
    "start": "1150620",
    "end": "1156559"
  },
  {
    "text": "true regardless of the integration pattern that you are using if I'm if I'm integrating with your system if we've",
    "start": "1156559",
    "end": "1162620"
  },
  {
    "text": "deployed a message bus to decouple producers and consumers all I've done is moved the point of coupling from rest to",
    "start": "1162620",
    "end": "1169880"
  },
  {
    "text": "the message bus because I'm still pulling in your protobuf spec we are tightly coupled as soon as we share",
    "start": "1169880",
    "end": "1175580"
  },
  {
    "text": "contracts whereas if we share semantics we're nice and loose",
    "start": "1175580",
    "end": "1181700"
  },
  {
    "text": "so semantic metadata a collection of terms which form a semantic contract and",
    "start": "1181700",
    "end": "1187039"
  },
  {
    "text": "are shared across systems which leads us back to our title building an automated data mesh using",
    "start": "1187039",
    "end": "1193700"
  },
  {
    "start": "1190000",
    "end": "1364000"
  },
  {
    "text": "Symantec metadata I want to drill in a little bit further into into this idea of automation how do we how do we",
    "start": "1193700",
    "end": "1199220"
  },
  {
    "text": "automate this so now that we understand what a semantic contract is and how I might design and deploy one across my",
    "start": "1199220",
    "end": "1205220"
  },
  {
    "text": "organization how do I use it to automate stuff and our two litmus tests can it connect",
    "start": "1205220",
    "end": "1210980"
  },
  {
    "text": "on demand and when I change stuff can it adapt so here's my three systems that I was",
    "start": "1210980",
    "end": "1218299"
  },
  {
    "text": "looking at before and this might be a little bit small I'm sorry on the left hand side we've got our customer system which is a rest API in the middle we've",
    "start": "1218299",
    "end": "1224900"
  },
  {
    "text": "got a SQL database and on the on the right we've got our soap API for our transactional system and because we Now",
    "start": "1224900",
    "end": "1231860"
  },
  {
    "text": "understand what semantic contracts are we've embedded these semantic meta tags directly into our apis",
    "start": "1231860",
    "end": "1238940"
  },
  {
    "text": "so then we can take those apis and publish them somewhere and by taking all of taking that combination of structural metadata and",
    "start": "1238940",
    "end": "1245539"
  },
  {
    "text": "semantic metadata I can build this massive big graph which I can start navigating I",
    "start": "1245539",
    "end": "1251299"
  },
  {
    "text": "understand all of a sudden not just how to talk to your system not just that it's a HTTP request on poor AC this IP",
    "start": "1251299",
    "end": "1259039"
  },
  {
    "text": "address but I understand that what I'm going to get back is customer information and this collection of fields and I understand what I need to",
    "start": "1259039",
    "end": "1265520"
  },
  {
    "text": "give you in order to get that back so when I get this requirement of given",
    "start": "1265520",
    "end": "1271100"
  },
  {
    "text": "this email address what is the customer's account balance even though for me to answer that question today I",
    "start": "1271100",
    "end": "1277340"
  },
  {
    "text": "have to integrate three different systems across three different protocols with three different API specs",
    "start": "1277340",
    "end": "1282559"
  },
  {
    "text": "there's enough metadata here through the combination of structural and semantic for me to work out the first thing I've",
    "start": "1282559",
    "end": "1288140"
  },
  {
    "text": "got to do is take Jimmy's email address and do a rest API call to swap it from email address to customer ID",
    "start": "1288140",
    "end": "1295340"
  },
  {
    "text": "to then do a database query to swap his customer ID for a card number before finally doing a soap request to",
    "start": "1295340",
    "end": "1301700"
  },
  {
    "text": "go from card number to account balance and find out that Jimmy's got 29 quid on his account",
    "start": "1301700",
    "end": "1307658"
  },
  {
    "text": "so we didn't have to build that ahead of time there was enough metadata there for us to be able to work it out",
    "start": "1308000",
    "end": "1313280"
  },
  {
    "text": "between the combination of API specs and mid and semantic metadata there were",
    "start": "1313280",
    "end": "1318679"
  },
  {
    "text": "enough breadcrumbs there for tooling to go I know how to do this and because we didn't have to build",
    "start": "1318679",
    "end": "1324740"
  },
  {
    "text": "anything when we inevitably rip out that soap API and replace it with grpc or when we take",
    "start": "1324740",
    "end": "1331400"
  },
  {
    "text": "away that SQL database and stick a an API Gateway in front of it because we",
    "start": "1331400",
    "end": "1336559"
  },
  {
    "text": "didn't have to build the first round of integration there's nothing for me to change the API specs are republished with their",
    "start": "1336559",
    "end": "1344480"
  },
  {
    "text": "richer metadata that tell me now where this information is and our integration layer can automatically adapt",
    "start": "1344480",
    "end": "1350600"
  },
  {
    "text": "and that's so we have a we have a thing that does that which is called Vine but I mean you",
    "start": "1350600",
    "end": "1356059"
  },
  {
    "text": "can pretty much look at this and work out how to do it right I get I get how to build graphs from semantic metadata",
    "start": "1356059",
    "end": "1362380"
  },
  {
    "text": "[Music] so now that we have this thing that is able to build the integration for us we",
    "start": "1362380",
    "end": "1368539"
  },
  {
    "start": "1364000",
    "end": "1478000"
  },
  {
    "text": "need a way to communicate it with it we need a way to ask it given this customer's email address what's your account balance",
    "start": "1368539",
    "end": "1374539"
  },
  {
    "text": "we already have a collection of terms we've already just used them for describing all of our producer apis they",
    "start": "1374539",
    "end": "1380600"
  },
  {
    "text": "are a collection of terms they don't couple 20 specific system they just describe our business",
    "start": "1380600",
    "end": "1386780"
  },
  {
    "text": "so it means that I can say given a customer ID of one two three find me their account balance okay nice and",
    "start": "1386780",
    "end": "1393380"
  },
  {
    "text": "simple the same metadata that I used in order to write a question in order to describe my apis I can use to ask a",
    "start": "1393380",
    "end": "1399559"
  },
  {
    "text": "question there's nothing here that talks about how there's no join this table to that table",
    "start": "1399559",
    "end": "1405140"
  },
  {
    "text": "there's no do this request to that thing that's because how is up to the mesh because hell will change but my",
    "start": "1405140",
    "end": "1412340"
  },
  {
    "text": "requirement doesn't right I want to stay decoupled from the different deployments",
    "start": "1412340",
    "end": "1417500"
  },
  {
    "text": "that are going on frankly it's not my like so long as the data that I'm getting back is accurate I just don't",
    "start": "1417500",
    "end": "1423380"
  },
  {
    "text": "care about how things are meant to change maybe I want more than just account",
    "start": "1423380",
    "end": "1428720"
  },
  {
    "text": "balance maybe I want a couple of fields I want the customer name and the account balance here rather than here I'm actually",
    "start": "1428720",
    "end": "1436220"
  },
  {
    "text": "actually able to define a consumer contract that says this is the information that I want but also this is",
    "start": "1436220",
    "end": "1441500"
  },
  {
    "text": "the way that I want it and again it doesn't really matter to me what the field name was that was applied at",
    "start": "1441500",
    "end": "1447919"
  },
  {
    "text": "customer name the system that was producing it whatever they happened to call it don't care I want it called name",
    "start": "1447919",
    "end": "1453980"
  },
  {
    "text": "so that when for me when that field changes its name when it goes to a different system when it adopts a",
    "start": "1453980",
    "end": "1459799"
  },
  {
    "text": "different naming convention it's not my problem right my integration code doesn't break this is the contract that",
    "start": "1459799",
    "end": "1465740"
  },
  {
    "text": "I want fulfilled I want these bits of information for this customer ID and I want it served to me looking like this",
    "start": "1465740",
    "end": "1472460"
  },
  {
    "text": "that's a customer contract the consumer contract",
    "start": "1472460",
    "end": "1476620"
  },
  {
    "start": "1478000",
    "end": "1496000"
  },
  {
    "text": "so putting it all together on the left we've got taxi which is a semantic language for describing data letting me",
    "start": "1478220",
    "end": "1484159"
  },
  {
    "text": "build up these semantic contracts and on the right we have a data product that lets us take all of those contracts",
    "start": "1484159",
    "end": "1490520"
  },
  {
    "text": "Stitch it together and serve up a data mesh automating and adapting as we go",
    "start": "1490520",
    "end": "1496580"
  },
  {
    "start": "1496000",
    "end": "2091000"
  },
  {
    "text": "demo so this is our ecosystem so we are going to move past the world of customer IDs",
    "start": "1496580",
    "end": "1504080"
  },
  {
    "text": "and account balances and into the highfalutin world of films so we've got a bunch of different data services down",
    "start": "1504080",
    "end": "1509720"
  },
  {
    "text": "the bottom we're a film producing company and so we've got a catalog of films that we have produced",
    "start": "1509720",
    "end": "1515539"
  },
  {
    "text": "uh we've got a rest API that tells me where I can watch it is it on Netflix is it on Hulu is it on HBO",
    "start": "1515539",
    "end": "1522020"
  },
  {
    "text": "we've got a uh wrist API that gives me film reviews that tells me what people",
    "start": "1522020",
    "end": "1527179"
  },
  {
    "text": "are saying is it any good and then finally we've got a Kafka topic that is streaming protobuf anytime Netflix",
    "start": "1527179",
    "end": "1533000"
  },
  {
    "text": "reboots 1980s franchise so here we go demo at a conference this",
    "start": "1533000",
    "end": "1539600"
  },
  {
    "text": "should go well oh there we go Okay so",
    "start": "1539600",
    "end": "1546620"
  },
  {
    "text": "we have those semantic contracts that I was talking about that have been published up to Vine so we can see here",
    "start": "1546620",
    "end": "1551840"
  },
  {
    "text": "for example we've got a database that has film information it gives me back a",
    "start": "1551840",
    "end": "1557000"
  },
  {
    "text": "collection of films and I can drill into that and start seeing how semantic metadata can be used to build this big",
    "start": "1557000",
    "end": "1563240"
  },
  {
    "text": "mesh of data across my organization we're not talking about protocols here we're talking about tags of information",
    "start": "1563240",
    "end": "1568700"
  },
  {
    "text": "so I can see that I can get a film ID it's got a title it's got a description and that film ID I can feed into another",
    "start": "1568700",
    "end": "1575360"
  },
  {
    "text": "service that can give me back film reviews for example so by publishing up both the contracts",
    "start": "1575360",
    "end": "1582020"
  },
  {
    "text": "that tell us where the data is and what it means we can start doing cool stuff like we can start asking for it back",
    "start": "1582020",
    "end": "1588620"
  },
  {
    "text": "so I can write a query that says find me all of the films",
    "start": "1588620",
    "end": "1595820"
  },
  {
    "text": "and there we go Academy dinosaur an epic drama of a feminist and a mad scient",
    "start": "1595820",
    "end": "1600919"
  },
  {
    "text": "these are these are randomly generated um this is from a postgres thing so",
    "start": "1600919",
    "end": "1606380"
  },
  {
    "text": "there is a um there is a collection of data coming back",
    "start": "1606380",
    "end": "1611720"
  },
  {
    "text": "um nothing particularly interesting going on there but what we will notice is I haven't I haven't specified how",
    "start": "1611720",
    "end": "1617480"
  },
  {
    "text": "I've just said what I want okay so I'm going to trim it back to just a handful of fields",
    "start": "1617480",
    "end": "1625360"
  },
  {
    "text": "uh okay so I want the film ID I want the name which is a title and give me the",
    "start": "1627679",
    "end": "1633140"
  },
  {
    "text": "description there she might leave the description off so there's the there's the um there's the ID in the title",
    "start": "1633140",
    "end": "1640279"
  },
  {
    "text": "um nothing hugely interesting going on here yet but let's enrich that to say um where can I watch this",
    "start": "1640279",
    "end": "1647120"
  },
  {
    "text": "we're gonna watch this so I want to know um which streaming service is it on",
    "start": "1647120",
    "end": "1653419"
  },
  {
    "text": "so it is uh give me the name and give me the cost",
    "start": "1653419",
    "end": "1658240"
  },
  {
    "text": "and finally is it any good is it any good give me the review of",
    "start": "1658820",
    "end": "1666080"
  },
  {
    "text": "give me the score and the chicks",
    "start": "1666080",
    "end": "1671080"
  },
  {
    "text": "oops okay so now if I run my query we're",
    "start": "1675200",
    "end": "1684020"
  },
  {
    "text": "getting a bunch of information back right what's a little bit so I'm getting the",
    "start": "1684020",
    "end": "1689059"
  },
  {
    "text": "data back with the field names that I've asked for complete with spelling mistakes to prove that this is a real thing",
    "start": "1689059",
    "end": "1695779"
  },
  {
    "text": "um but if we jump into the profiler and see what's actually going on it's a little bit more interesting right so we",
    "start": "1695779",
    "end": "1701000"
  },
  {
    "text": "can see that we ran a query against the database to get back our collection of films",
    "start": "1701000",
    "end": "1706279"
  },
  {
    "text": "and then we took the information from those films and we fed them into two different places we feed them into a into one rest",
    "start": "1706279",
    "end": "1713419"
  },
  {
    "text": "API that tells me where can I watch these which streaming service has got it and another one that tells me if they're",
    "start": "1713419",
    "end": "1719179"
  },
  {
    "text": "any good to get their reviews back we can drill into those in a little bit more detail so if I go back into my",
    "start": "1719179",
    "end": "1724880"
  },
  {
    "text": "table if we take a look at the review score of 4.8",
    "start": "1724880",
    "end": "1730600"
  },
  {
    "text": "we can see the actual flow of data that went on right because we're we understand both semantically what data I",
    "start": "1730700",
    "end": "1736340"
  },
  {
    "text": "need to provide we can trace the lineage of this data to see how did I come up with this number well we ran a query it",
    "start": "1736340",
    "end": "1742460"
  },
  {
    "text": "gave me a film ID which I then fit into a review service to get back a score of 4.8 we understand how to do this",
    "start": "1742460",
    "end": "1748340"
  },
  {
    "text": "automatically I haven't had to talk about how to do this all I've had to say is this is what I",
    "start": "1748340",
    "end": "1754220"
  },
  {
    "text": "want so we didn't have to provide this up in advance so if there's what the other",
    "start": "1754220",
    "end": "1760039"
  },
  {
    "text": "test was if I break something if I make a change will it adapt",
    "start": "1760039",
    "end": "1767200"
  },
  {
    "text": "okay let's try it so this is the code that is running my film review service and I apologize that it's very hard to",
    "start": "1767779",
    "end": "1774799"
  },
  {
    "text": "see against the model against the thing but basically it's very simple it's a this happens to be spring boot it's a",
    "start": "1774799",
    "end": "1781520"
  },
  {
    "text": "very simple spring boot in kotlin that is taking in a film ID and giving you back a film review and",
    "start": "1781520",
    "end": "1787640"
  },
  {
    "text": "as I mentioned earlier these these values have semantic contracts so if I swap out my film ID if we swap from our",
    "start": "1787640",
    "end": "1794179"
  },
  {
    "text": "film provider being our in-house film IDs to now our new external service called squash Tomatoes",
    "start": "1794179",
    "end": "1801080"
  },
  {
    "text": "where we're going to go and get all of our film reviews and the data that it gives you back is no longer just has any",
    "start": "1801080",
    "end": "1807620"
  },
  {
    "text": "old film ID but has a squashed tomatoes for my day now if we jump back into",
    "start": "1807620",
    "end": "1813679"
  },
  {
    "text": "sorry I'll just deploy that",
    "start": "1813679",
    "end": "1817059"
  },
  {
    "text": "so we're going to put um I'm just going to bounce the service all that will happen there is we'll republish the",
    "start": "1821120",
    "end": "1826159"
  },
  {
    "text": "schema so different semantic metadata if we take a look back in the app at the profiler that was going on that we were",
    "start": "1826159",
    "end": "1832700"
  },
  {
    "text": "running here remember that in order to get this review information back",
    "start": "1832700",
    "end": "1838640"
  },
  {
    "text": "in order to get the text and the review we were doing a database query that we then took the ID straight out of there",
    "start": "1838640",
    "end": "1844520"
  },
  {
    "text": "and fed it into our review service and we've just broken that because the ID that came out of our database doesn't work here anymore",
    "start": "1844520",
    "end": "1851840"
  },
  {
    "text": "that's a pretty significant change if I rerun my query",
    "start": "1851840",
    "end": "1856840"
  },
  {
    "text": "okay we're still getting the same data back right so for me as a consumer even though my integration landscape has",
    "start": "1857120",
    "end": "1862820"
  },
  {
    "text": "changed for me to run the query I didn't have to do any work but if we jump into the",
    "start": "1862820",
    "end": "1867980"
  },
  {
    "text": "profiler we should see that there's a different integration path so the ID that I got out of the",
    "start": "1867980",
    "end": "1874640"
  },
  {
    "text": "database semantically wasn't good enough for me to pass directly into an a into another service",
    "start": "1874640",
    "end": "1880880"
  },
  {
    "text": "instead I had to go and do some other internal lookup to go how do I swap from one ID scheme to another and we all have",
    "start": "1880880",
    "end": "1887120"
  },
  {
    "text": "these Services running in our organization right the really the really interesting part",
    "start": "1887120",
    "end": "1892460"
  },
  {
    "text": "is Not only was I not affected by that for me as a consumer I just don't care",
    "start": "1892460",
    "end": "1898120"
  },
  {
    "text": "right the fact that there are 19 different ID schemes going on in my organization is not my day job that is",
    "start": "1898120",
    "end": "1905240"
  },
  {
    "text": "how that is stuff that I have to know about in order to deliver the integration and so the less that I need",
    "start": "1905240",
    "end": "1910940"
  },
  {
    "text": "to know about it the less amount of archeology that I need to do in order to find out how to string together the",
    "start": "1910940",
    "end": "1916279"
  },
  {
    "text": "sequence of IDs the better um okay I've clearly been talking fast",
    "start": "1916279",
    "end": "1921919"
  },
  {
    "text": "because I normally ran out of time here so I've got enough time for one more demo",
    "start": "1921919",
    "end": "1928039"
  },
  {
    "text": "um actually a couple more why don't we this has been why don't we introduce",
    "start": "1928039",
    "end": "1933320"
  },
  {
    "text": "another breaking change so rather than",
    "start": "1933320",
    "end": "1940000"
  },
  {
    "text": "so here's my here's my service that is telling me about where I can go to watch it sorry",
    "start": "1940820",
    "end": "1947120"
  },
  {
    "text": "let me blow that up here's my service that tells me where I",
    "start": "1947120",
    "end": "1953179"
  },
  {
    "text": "can go to watch it right again data's just um just randomly done it's a get request that sits on a URL it takes a",
    "start": "1953179",
    "end": "1960020"
  },
  {
    "text": "film film ID and gives me back um a structure of data up the top which has names and price per month so let's",
    "start": "1960020",
    "end": "1966500"
  },
  {
    "text": "let's really let's really mess that up so I'm going to just comment out the old version",
    "start": "1966500",
    "end": "1972100"
  },
  {
    "text": "and bring in the new version",
    "start": "1973820",
    "end": "1977620"
  },
  {
    "text": "okay so what have we done we've swapped our git for a post we've broken the verb we've changed what I was looking for",
    "start": "1981559",
    "end": "1988700"
  },
  {
    "text": "before we were just passing in an ID now I've got this whole request object that I need to construct and the contract of",
    "start": "1988700",
    "end": "1995179"
  },
  {
    "text": "the data is now much richer so same deal I'm just going to redeploy",
    "start": "1995179",
    "end": "2000340"
  },
  {
    "text": "that",
    "start": "2000340",
    "end": "2002580"
  },
  {
    "text": "and in a sec we should see the schema update",
    "start": "2011080",
    "end": "2015658"
  },
  {
    "text": "compiling what are the odds um so if we take a look at the profiler while that's running let's take a look",
    "start": "2025539",
    "end": "2031539"
  },
  {
    "text": "at the profile to understand what was going on so we were taking this request coming out of our database query we're",
    "start": "2031539",
    "end": "2037360"
  },
  {
    "text": "passing it into a get request which was giving us back two attributes there we go",
    "start": "2037360",
    "end": "2044580"
  },
  {
    "text": "there we go skim has been updated okay so let's rerun the query",
    "start": "2050919",
    "end": "2056220"
  },
  {
    "text": "hang on",
    "start": "2064599",
    "end": "2067200"
  },
  {
    "text": "this is not a good sign from the demo gods",
    "start": "2078580",
    "end": "2082618"
  },
  {
    "text": "oh my goodness it's still doing its thing okay I'm not going to do that demo",
    "start": "2086200",
    "end": "2092020"
  },
  {
    "start": "2091000",
    "end": "2104000"
  },
  {
    "text": "we're going to call it but it's a good time for me to stop and take questions if anyone hears any",
    "start": "2092020",
    "end": "2098770"
  },
  {
    "text": "[Applause]",
    "start": "2098770",
    "end": "2104079"
  }
]