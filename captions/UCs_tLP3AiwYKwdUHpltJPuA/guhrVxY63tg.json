[
  {
    "text": "thanks so much Dave all right well thank you very much and thanks to",
    "start": "6500",
    "end": "13320"
  },
  {
    "text": "Yao for giving me the opportunity to present to all of you today I really appreciate it and uh",
    "start": "13320",
    "end": "20039"
  },
  {
    "text": "you know I first learned about functional programming near the beginning of my career about 10 years",
    "start": "20039",
    "end": "26039"
  },
  {
    "text": "ago and I was extremely excited about the potential that I saw",
    "start": "26039",
    "end": "33780"
  },
  {
    "text": "but the problem with potential is that it's not really worth anything on its own",
    "start": "33780",
    "end": "38940"
  },
  {
    "text": "what matters is how you realize that potential and so for the last 10 years",
    "start": "38940",
    "end": "44460"
  },
  {
    "text": "starting slowly at first and then building up I kept my eye open for ways that I could",
    "start": "44460",
    "end": "52379"
  },
  {
    "text": "get functional programming to give me a real advantage in the work that I was doing I've always been someone who's really",
    "start": "52379",
    "end": "60260"
  },
  {
    "text": "motivated by getting real world results more so than pure Theory",
    "start": "60260",
    "end": "66659"
  },
  {
    "text": "and so I've been interested in functional programming from that perspective now at my last job",
    "start": "66659",
    "end": "73140"
  },
  {
    "text": "I was able to use Haskell to get a back-end server that was fantastic I pre",
    "start": "73140",
    "end": "80520"
  },
  {
    "text": "I replaced something that was not working so well rebuilt it all in Haskell",
    "start": "80520",
    "end": "85560"
  },
  {
    "text": "it was great we got to production loved it the project went really well and at one point",
    "start": "85560",
    "end": "90960"
  },
  {
    "text": "it was going so well that we almost had trouble coming up with work to do but the reason is that the front end was in",
    "start": "90960",
    "end": "96840"
  },
  {
    "text": "JavaScript and that was holding everything back so I kept looking at the ecosystem the",
    "start": "96840",
    "end": "102540"
  },
  {
    "text": "open source ecosystem and you know",
    "start": "102540",
    "end": "108000"
  },
  {
    "text": "around the beginning of 2015 maybe late 2014 I saw some things coalescing",
    "start": "108000",
    "end": "115740"
  },
  {
    "text": "and what they really meant was that it was finally possible to work full stack",
    "start": "115740",
    "end": "122520"
  },
  {
    "text": "in Haskell and functional programming Technologies in particular",
    "start": "122520",
    "end": "129380"
  },
  {
    "text": "ghcjs came along and it got to a level of maturity where I felt comfortable",
    "start": "129380",
    "end": "135420"
  },
  {
    "text": "putting it into production the other thing was reflex which really",
    "start": "135420",
    "end": "141780"
  },
  {
    "text": "came out of a huge amount of frustration on my part in being able to write in a pure functional",
    "start": "141780",
    "end": "149879"
  },
  {
    "text": "style you know I don't know if any of you tried to use like pre-frp Haskell",
    "start": "149879",
    "end": "156300"
  },
  {
    "text": "um you know for to write front ends or anything like that but it sort of ended up with an object-oriented style and it",
    "start": "156300",
    "end": "162900"
  },
  {
    "text": "really wasn't a lot of fun um didn't didn't really have all the advantages that you normally have in",
    "start": "162900",
    "end": "168120"
  },
  {
    "text": "Haskell so in March 2015",
    "start": "168120",
    "end": "173340"
  },
  {
    "text": "along with my business partner Alia Brar I decided to take the plunge and see if",
    "start": "173340",
    "end": "180000"
  },
  {
    "text": "we could really make this happen it was just us with two laptops working out of our",
    "start": "180000",
    "end": "185580"
  },
  {
    "text": "Apartments all we really had as an asset was the open source tools that we had found that",
    "start": "185580",
    "end": "193200"
  },
  {
    "text": "we had learned that we loved and a few that we built ourselves",
    "start": "193200",
    "end": "198560"
  },
  {
    "text": "the idea was we can build web and mobile apps better",
    "start": "199200",
    "end": "204659"
  },
  {
    "text": "faster and cheaper using full stack functional programming it's a dead simple business plan we were not at all",
    "start": "204659",
    "end": "211739"
  },
  {
    "text": "innovating on the product that we delivered it was just you know standard Consulting custom",
    "start": "211739",
    "end": "218760"
  },
  {
    "text": "software development it's nothing that hasn't been done by hundreds or probably thousands of companies around the world very",
    "start": "218760",
    "end": "225480"
  },
  {
    "text": "successfully but we thought we could do it better with functional programming and so we bet everything on that",
    "start": "225480",
    "end": "233099"
  },
  {
    "text": "three years later we've grown from two people to 22 people and we've worked with over a dozen",
    "start": "233099",
    "end": "239519"
  },
  {
    "text": "clients building all kinds of apps and tools using functional programming from",
    "start": "239519",
    "end": "245940"
  },
  {
    "text": "the ground up we use NYX to manage all of our",
    "start": "245940",
    "end": "251220"
  },
  {
    "text": "infrastructure we use Haskell on the back end and we use Haskell on the front end",
    "start": "251220",
    "end": "257419"
  },
  {
    "text": "I'm really proud of the relationships and the level of service we've been able",
    "start": "258120",
    "end": "263460"
  },
  {
    "text": "to deliver to our clients and I really don't think it would have been possible without functional programming the",
    "start": "263460",
    "end": "269759"
  },
  {
    "text": "advantages that functional programming give us are that we are we're able to focus",
    "start": "269759",
    "end": "276180"
  },
  {
    "text": "because we have a high level of quality by default we're able to focus on the client's needs not the technical minutia",
    "start": "276180",
    "end": "283320"
  },
  {
    "text": "necessary to just keep everything running but it has not all been smooth sailing",
    "start": "283320",
    "end": "291960"
  },
  {
    "text": "there were some things that went better than we expected for example full stack development is",
    "start": "291960",
    "end": "298500"
  },
  {
    "text": "just phenomenal I can't really Express how well this works",
    "start": "298500",
    "end": "303540"
  },
  {
    "text": "um to give a developer responsibility for one entire feature end to end and",
    "start": "303540",
    "end": "310199"
  },
  {
    "text": "have them be able to work in a consistent technology stack means that most of the time they can focus entirely",
    "start": "310199",
    "end": "317100"
  },
  {
    "text": "on what's necessary from a client perspective and what impact that has all",
    "start": "317100",
    "end": "322919"
  },
  {
    "text": "the way from the back end to the front end including devops and everything else it's still collaborative you know you",
    "start": "322919",
    "end": "329280"
  },
  {
    "text": "can you can always you know poke the guy next to you and say hey you know I think you know better than me about this so",
    "start": "329280",
    "end": "335880"
  },
  {
    "text": "why don't you help me out and I think we have a great culture of collaboration",
    "start": "335880",
    "end": "341600"
  },
  {
    "text": "but collaboration is not mandatory for everything all the time",
    "start": "343620",
    "end": "349800"
  },
  {
    "text": "you don't have to sit in a meeting and hash out in great detail the back end front-end interaction between the front",
    "start": "349800",
    "end": "356639"
  },
  {
    "text": "end team and the back end team and you don't have to hash out between mobile",
    "start": "356639",
    "end": "361740"
  },
  {
    "text": "and web how all that's going to be slightly different one guy or girl can",
    "start": "361740",
    "end": "368699"
  },
  {
    "text": "go through and do the whole thing end to end now",
    "start": "368699",
    "end": "374699"
  },
  {
    "text": "this also means that we have less latency the front end team doesn't have to wait",
    "start": "374699",
    "end": "380340"
  },
  {
    "text": "on the back end team and the back end team doesn't have to wait on the front end team which means that",
    "start": "380340",
    "end": "385560"
  },
  {
    "text": "per developer we have fewer features in flight at any given point in time and this means that each of those features",
    "start": "385560",
    "end": "392759"
  },
  {
    "text": "as it gets completed can be delivered to the client put into production and real world people can start getting real",
    "start": "392759",
    "end": "399120"
  },
  {
    "text": "Advantage out of it sooner that's huge that's sort of the dream of agile programming and full stack makes a huge",
    "start": "399120",
    "end": "406919"
  },
  {
    "text": "huge difference it's also just more fun right if you can",
    "start": "406919",
    "end": "412020"
  },
  {
    "text": "see your whole feature end to end and you can understand why you're making all the changes you're making it's a much",
    "start": "412020",
    "end": "417900"
  },
  {
    "text": "more enjoyable way to work you don't just have some spec that comes down from above and then you implement it because that's what they said to implement",
    "start": "417900",
    "end": "425639"
  },
  {
    "text": "now it's not just full stack development as such",
    "start": "425639",
    "end": "430919"
  },
  {
    "text": "functional programming is even better at full stack development than non-functional programming and",
    "start": "430919",
    "end": "436259"
  },
  {
    "text": "especially strongly typed functional programming is great at this because when you make a change in one part of a",
    "start": "436259",
    "end": "444419"
  },
  {
    "text": "code base using full stack Haskell the compiler gives you a to-do list of",
    "start": "444419",
    "end": "451199"
  },
  {
    "text": "every other place in the code base that you need to change you got 30 errors you crank through them",
    "start": "451199",
    "end": "457740"
  },
  {
    "text": "and then more often than not you're done and I'm sure many of you have had the",
    "start": "457740",
    "end": "463380"
  },
  {
    "text": "experience of feeling like your Haskell compiles and then it works",
    "start": "463380",
    "end": "469020"
  },
  {
    "text": "and that happens a lot of the time and by making it full stack we've reduced the number of integration points that",
    "start": "469020",
    "end": "475199"
  },
  {
    "text": "can fail by a huge number it's also interestingly the case that",
    "start": "475199",
    "end": "481860"
  },
  {
    "text": "because Haskell code is pure and because it's",
    "start": "481860",
    "end": "487639"
  },
  {
    "text": "explicitly stating all of the things that it might do might depend on",
    "start": "487639",
    "end": "493680"
  },
  {
    "text": "it makes a lot more code reusable so one example of this is that every",
    "start": "493680",
    "end": "500340"
  },
  {
    "text": "reflex widget that works with reflex Dom can be compiled in three different ways",
    "start": "500340",
    "end": "507479"
  },
  {
    "text": "it can become a javascript-based you know web widget",
    "start": "507479",
    "end": "513779"
  },
  {
    "text": "which is what most people probably think of when they think of reflex and reflex Dom but it can also become a native mobile",
    "start": "513779",
    "end": "521279"
  },
  {
    "text": "uh widget that runs everything natively and just uses the Dom for rendering and",
    "start": "521279",
    "end": "527700"
  },
  {
    "text": "CSS and HTML kind of display purposes none of the logic runs in JavaScript",
    "start": "527700",
    "end": "533820"
  },
  {
    "text": "and it can also become a byte string that can just be served from the back end as raw HTML with no JavaScript",
    "start": "533820",
    "end": "541740"
  },
  {
    "text": "involved at any point and this was not a complex project for",
    "start": "541740",
    "end": "547080"
  },
  {
    "text": "us to make this happen we did this in fact one newly hired",
    "start": "547080",
    "end": "552300"
  },
  {
    "text": "relatively Junior developer implemented the static rendering feature in under two weeks",
    "start": "552300",
    "end": "558060"
  },
  {
    "text": "so the reason we were able to do that is that Haskell forces you to say",
    "start": "558060",
    "end": "564660"
  },
  {
    "text": "exactly what you're depending on and most widgets don't depend on that much so we can go in and just replace the way",
    "start": "564660",
    "end": "570899"
  },
  {
    "text": "that it does the rendering logic very straightforwardly",
    "start": "570899",
    "end": "575420"
  },
  {
    "text": "a habit that my business partner and I had developed when we were working sort of in our spare time on open source",
    "start": "576720",
    "end": "582959"
  },
  {
    "text": "projects was to contribute fixes Upstream as much",
    "start": "582959",
    "end": "588120"
  },
  {
    "text": "as possible and I sort of noticed that we did this naturally",
    "start": "588120",
    "end": "595260"
  },
  {
    "text": "maybe because we liked feeling like we were contributing to the community maybe because you know a number of reasons",
    "start": "595260",
    "end": "601560"
  },
  {
    "text": "but I also noticed that almost nobody in industry was doing this every team that I worked on sort of treated like treated",
    "start": "601560",
    "end": "608459"
  },
  {
    "text": "Upstream dependencies as these Untouchable blobs and maybe you'd submit an issue sometimes and then hope it gets",
    "start": "608459",
    "end": "615120"
  },
  {
    "text": "fixed in six months um I I never worked on a team previously that that really got in there",
    "start": "615120",
    "end": "622080"
  },
  {
    "text": "uh the way that we did and we just kept doing it once we started obsidian we kept doing it the same way we were doing it before and we keep doing that to this",
    "start": "622080",
    "end": "628980"
  },
  {
    "text": "day I would say 95 of the time if we encounter a bug or a you know limitation",
    "start": "628980",
    "end": "634440"
  },
  {
    "text": "in one of the libraries we're using we just fix it we just send a PR and so I started thinking about why we are able",
    "start": "634440",
    "end": "641279"
  },
  {
    "text": "to do this and how it's different and this also comes down to functional programming in particular",
    "start": "641279",
    "end": "647160"
  },
  {
    "text": "Haskell makes it much easier to dive into foreign code bases and actually get something done",
    "start": "647160",
    "end": "653220"
  },
  {
    "text": "because of the strong types you have these guide posts all throughout the code which are not just you know",
    "start": "653220",
    "end": "660000"
  },
  {
    "text": "something for the compiler's benefit but there there's something for your benefit they tell you exactly what is available",
    "start": "660000",
    "end": "665279"
  },
  {
    "text": "in any given context and they tell you exactly what you can you need to provide",
    "start": "665279",
    "end": "670500"
  },
  {
    "text": "so once you identify where a bug is coming from it's usually not that hard to figure out how to tweak something to",
    "start": "670500",
    "end": "676500"
  },
  {
    "text": "fix it now another benefit of Haskell for this",
    "start": "676500",
    "end": "681839"
  },
  {
    "text": "purpose is purity in a lot of code bases there's spooky action at a distance all over the place",
    "start": "681839",
    "end": "687959"
  },
  {
    "text": "and so if you're not a seasoned veteran of that particular code base there's no way",
    "start": "687959",
    "end": "693540"
  },
  {
    "text": "you're going to figure out what you're allowed to do in this place and what you're not allowed to do in that place and what you have to do over here and",
    "start": "693540",
    "end": "699660"
  },
  {
    "text": "what you know it's crazy I've seen a few code bases that do well",
    "start": "699660",
    "end": "705000"
  },
  {
    "text": "with that like postgres has copious copious documentation and if you read it all I bet you'll figure it out",
    "start": "705000",
    "end": "711420"
  },
  {
    "text": "but in most code bases that documentation doesn't even exist so you just have no hope",
    "start": "711420",
    "end": "717199"
  },
  {
    "text": "so we're much more able to dive in and make a quick fix but we're also much more",
    "start": "718079",
    "end": "724140"
  },
  {
    "text": "able to do all the things that are necessary to make that even possible to try",
    "start": "724140",
    "end": "729720"
  },
  {
    "text": "NYX is fantastic here because NYX gives you the ability with Nick's shell to",
    "start": "729720",
    "end": "735480"
  },
  {
    "text": "drop into an envelopment development environment for any package you use instantly you just do Nick shell Dash a",
    "start": "735480",
    "end": "743579"
  },
  {
    "text": "name of the package and then you've got the compiler you've got all the Upstream dependencies from",
    "start": "743579",
    "end": "749579"
  },
  {
    "text": "that dependency you've got all the tools necessary to build and you even have a consistent way of running that build",
    "start": "749579",
    "end": "756839"
  },
  {
    "text": "which is documented in the nics and Nix packages manuals so you can make your change figuring it",
    "start": "756839",
    "end": "763800"
  },
  {
    "text": "out with Haskell you can dive in with NYX and actually get it all built and then NYX makes it incredibly easy to Fork",
    "start": "763800",
    "end": "771660"
  },
  {
    "text": "that package run on a fork temporarily while you have your PR going Upstream",
    "start": "771660",
    "end": "777540"
  },
  {
    "text": "and then switch seamlessly and the reason this is so powerful is because binary caching and purity",
    "start": "777540",
    "end": "785279"
  },
  {
    "text": "mean that if anybody on your team needs this forked version of the library it",
    "start": "785279",
    "end": "790440"
  },
  {
    "text": "will be seamlessly pulled from your company binary cache just as easily as the original released",
    "start": "790440",
    "end": "797459"
  },
  {
    "text": "version of the library would have been pulled so it's really no harder for the team to work on a fork than it is to",
    "start": "797459",
    "end": "803459"
  },
  {
    "text": "work on a native uh you know official release and",
    "start": "803459",
    "end": "809000"
  },
  {
    "text": "obsidian has run on Forks of GHC for months at a time we've forked uh even",
    "start": "809000",
    "end": "814560"
  },
  {
    "text": "even some really core libraries um in in Linux and it works great every",
    "start": "814560",
    "end": "820260"
  },
  {
    "text": "single time",
    "start": "820260",
    "end": "822620"
  },
  {
    "text": "oh yeah and it's not just cheaper uh it's also better right like fixing bugs",
    "start": "827279",
    "end": "833279"
  },
  {
    "text": "in place is way more reliable than fixing them by",
    "start": "833279",
    "end": "838320"
  },
  {
    "text": "working around Downstream you know workarounds are almost always brittle they break when you are most depending",
    "start": "838320",
    "end": "844980"
  },
  {
    "text": "on them uh and uh you know it's it's they're just a mess",
    "start": "844980",
    "end": "850800"
  },
  {
    "text": "um but of course it's understandable if The Upfront cost is ridiculously high um",
    "start": "850800",
    "end": "856200"
  },
  {
    "text": "now another advantage of fixing bugs Upstream uh since it's possible now",
    "start": "856200",
    "end": "861540"
  },
  {
    "text": "is that you get to meet lots of developers work with them and get to know them way better than you could ever know somebody from an interview",
    "start": "861540",
    "end": "868380"
  },
  {
    "text": "and this has been actually a very large part of obsidian's hiring practices we",
    "start": "868380",
    "end": "873600"
  },
  {
    "text": "have hired maybe a third of our people out of the open source Community because we've worked with them on something",
    "start": "873600",
    "end": "879720"
  },
  {
    "text": "before and this is one of the ways that we get an opportunity to do that in a legitimate",
    "start": "879720",
    "end": "885300"
  },
  {
    "text": "way that you know moves the community forward and you know our success is",
    "start": "885300",
    "end": "890519"
  },
  {
    "text": "going to depend on the success of Haskell and the Haskell community so when we get an opportunity to contribute",
    "start": "890519",
    "end": "895800"
  },
  {
    "text": "to the community in a way that also saves US money it's just gold",
    "start": "895800",
    "end": "901279"
  },
  {
    "text": "now we don't believe in prototypes",
    "start": "903600",
    "end": "909959"
  },
  {
    "text": "and I say this sort of like uh conspiracy theory person or a",
    "start": "909959",
    "end": "916699"
  },
  {
    "text": "non-conspiracy theory person but a real actual prototype",
    "start": "916699",
    "end": "923940"
  },
  {
    "text": "where you actually delete everything and start over afterwards is like Bigfoot",
    "start": "923940",
    "end": "930420"
  },
  {
    "text": "I can't prove to you that they don't exist but I've never seen one in the wild",
    "start": "930420",
    "end": "937339"
  },
  {
    "text": "so we don't pretend that we can operate in that way and and I think",
    "start": "937920",
    "end": "943139"
  },
  {
    "text": "usually when this happens someone thinks that they're okay I'm going to build a prototype and then they",
    "start": "943139",
    "end": "951060"
  },
  {
    "text": "get in there they build something great and then boss comes over and he's like that's great",
    "start": "951060",
    "end": "956940"
  },
  {
    "text": "let's put it in production and then miraculously and reliably there's no",
    "start": "956940",
    "end": "964980"
  },
  {
    "text": "time to rewrite it before putting into production right um",
    "start": "964980",
    "end": "970019"
  },
  {
    "text": "and and so you don't and and often this is looked at as a process failure right okay we",
    "start": "970019",
    "end": "976620"
  },
  {
    "text": "failed to plan for the time to rewrite our prototype",
    "start": "976620",
    "end": "981899"
  },
  {
    "text": "I don't I don't agree I actually think that the problem is a technology problem",
    "start": "981899",
    "end": "988079"
  },
  {
    "text": "and the problem is not failing to rewrite the Prototype the problem is",
    "start": "988079",
    "end": "993300"
  },
  {
    "text": "thinking that we should be doing prototypes in the first place the way that we look at it is that",
    "start": "993300",
    "end": "1000079"
  },
  {
    "text": "writing code should be a computer-aided activity where you put down some things that you know you get feedback from the",
    "start": "1000079",
    "end": "1006620"
  },
  {
    "text": "compiler you put down some more things and you go back and forth one of the things that I've learned over",
    "start": "1006620",
    "end": "1012500"
  },
  {
    "text": "the course of my career is that refactoring Haskell is actually really easy",
    "start": "1012500",
    "end": "1018560"
  },
  {
    "text": "so it almost never makes sense to throw away code and start over from scratch instead",
    "start": "1018560",
    "end": "1024678"
  },
  {
    "text": "you refactor and you keep things working as you do it we've found that approaching things this",
    "start": "1024679",
    "end": "1031938"
  },
  {
    "text": "way requires some support from the tooling right we have to build our Tech stack so",
    "start": "1031939",
    "end": "1038360"
  },
  {
    "text": "that the easy way is also the production ready way and we've done that and we've had to",
    "start": "1038360",
    "end": "1044360"
  },
  {
    "text": "work hard to do that not every Tech stack works that way but when you look at the Haskell if it compiles it works",
    "start": "1044360",
    "end": "1050480"
  },
  {
    "text": "which is of course not always true but often it is true more often than anyone I think would expect",
    "start": "1050480",
    "end": "1056360"
  },
  {
    "text": "that is the kind of thing that supports not having prototypes that supports",
    "start": "1056360",
    "end": "1061580"
  },
  {
    "text": "always writing code for production so we never write code that we intend to get rid of",
    "start": "1061580",
    "end": "1068260"
  },
  {
    "text": "it ends up making our process much more predictable much less stressful we never assume that",
    "start": "1068419",
    "end": "1074480"
  },
  {
    "text": "we're going to have time to rewrite because we know we won't and It ultimately leads to a much better",
    "start": "1074480",
    "end": "1080059"
  },
  {
    "text": "quality product because as you go along you can sort of really embrace the agile approach of getting real actual feedback",
    "start": "1080059",
    "end": "1087140"
  },
  {
    "text": "from the client maybe even from early users it's just a much smoother project plan",
    "start": "1087140",
    "end": "1095360"
  },
  {
    "text": "and also because we never have this like chickens running around with our heads cut off at the last minute kind of thing",
    "start": "1095360",
    "end": "1101960"
  },
  {
    "text": "it means that we actually end up getting into production quicker than a prototype and then rewrite because you know we",
    "start": "1101960",
    "end": "1110660"
  },
  {
    "text": "don't have an emergency to deal with not everything",
    "start": "1110660",
    "end": "1116660"
  },
  {
    "text": "was fantastic about using functional programming",
    "start": "1116660",
    "end": "1121820"
  },
  {
    "text": "one of the things that I had to learn personally and that I've had to work with my team to create",
    "start": "1121820",
    "end": "1128360"
  },
  {
    "text": "a proper sort of approach to is perfectionism I think a lot of people in this community and and developers in",
    "start": "1128360",
    "end": "1134960"
  },
  {
    "text": "general but I think a lot of people have a perfectionistic tendency I know I do where you want to write code that's",
    "start": "1134960",
    "end": "1140840"
  },
  {
    "text": "really great you know you want to when you when you write something and you say this is done I'm sending a PR",
    "start": "1140840",
    "end": "1146660"
  },
  {
    "text": "you want to say this code is just as good as it can be",
    "start": "1146660",
    "end": "1152600"
  },
  {
    "text": "and I found that that is deadly in Haskell",
    "start": "1152600",
    "end": "1157700"
  },
  {
    "text": "because Haskell is not like object-oriented programming when I was in oop I would sit down I would write a",
    "start": "1157700",
    "end": "1165500"
  },
  {
    "text": "class and I would think about what are all the methods I need to write I'd write a list of them and then I'd",
    "start": "1165500",
    "end": "1170780"
  },
  {
    "text": "Implement them all and I'd be like all right that class does everything it should and no more it's perfect",
    "start": "1170780",
    "end": "1178280"
  },
  {
    "text": "it didn't happen all the time but it happened a lot and then there's nowhere to go from there there's no way to",
    "start": "1178280",
    "end": "1183380"
  },
  {
    "text": "improve it beyond that in Haskell almost any problem you can",
    "start": "1183380",
    "end": "1188419"
  },
  {
    "text": "imagine could be turned into a PhD thesis you could keep adding more and more",
    "start": "1188419",
    "end": "1195200"
  },
  {
    "text": "algebraic laws you could keep expressing more and more at the type level you could keep you know getting the laziness",
    "start": "1195200",
    "end": "1201679"
  },
  {
    "text": "just right there's so many things you can do so many different axes of perfection you will never get there",
    "start": "1201679",
    "end": "1210559"
  },
  {
    "text": "and so it's really important to recognize that there's a cost benefit here and the",
    "start": "1210559",
    "end": "1217700"
  },
  {
    "text": "middle of the curve somewhere in the middle is what you need for almost any project and it depends on what project",
    "start": "1217700",
    "end": "1223039"
  },
  {
    "text": "it is if you're trying to you know build build some piece of military Tech that",
    "start": "1223039",
    "end": "1228440"
  },
  {
    "text": "has to be completely unhackable and it you know or you're sending people to the Moon with the Apollo guidance computer",
    "start": "1228440",
    "end": "1233900"
  },
  {
    "text": "then yeah maybe spend more time on types and stuff like that but if you're trying to ship a web app",
    "start": "1233900",
    "end": "1241340"
  },
  {
    "text": "you probably don't need to prove at the type level that your email addresses",
    "start": "1241340",
    "end": "1247460"
  },
  {
    "text": "must always be perfectly formatted you can probably use text and check with a regex somewhere",
    "start": "1247460",
    "end": "1254360"
  },
  {
    "text": "so and that's not to say you can't use a new type and bundle up what you've done you just don't have to always prove",
    "start": "1254360",
    "end": "1260179"
  },
  {
    "text": "everything out I think that sometimes Haskell developers lose sight of the fact that strong types can have a cost",
    "start": "1260179",
    "end": "1267260"
  },
  {
    "text": "when you are proving too much with them we get a lot of type system stuff for free in Haskell because of the inference",
    "start": "1267260",
    "end": "1273679"
  },
  {
    "text": "engine and because it's all so very nicely designed but when you find yourself getting into g80ts and",
    "start": "1273679",
    "end": "1279980"
  },
  {
    "text": "dependently typed kinds of things and very complex type classes there is a point at which the cost outweighs the",
    "start": "1279980",
    "end": "1286460"
  },
  {
    "text": "benefit so it's important to recognize that and and learn when you've hit that point",
    "start": "1286460",
    "end": "1291919"
  },
  {
    "text": "I've also found that it's really important to not try to guess the future",
    "start": "1291919",
    "end": "1299600"
  },
  {
    "text": "it's you're going to fail so don't bother and Haskell gives us some great tools for reducing assumptions right almost",
    "start": "1299600",
    "end": "1306620"
  },
  {
    "text": "any time that you can take a concrete type in your type signature and replace it just with a type variable",
    "start": "1306620",
    "end": "1313159"
  },
  {
    "text": "that's going to be a more General function and often you don't have to change any other code you just say I",
    "start": "1313159",
    "end": "1319159"
  },
  {
    "text": "don't care about this thing and that lack of caring is going to make your code more reusable and more robust",
    "start": "1319159",
    "end": "1325220"
  },
  {
    "text": "so that's a great one that's free it's also extremely helpful because you",
    "start": "1325220",
    "end": "1331760"
  },
  {
    "text": "can go so deep on all these various rabbit holes it's really really helpful to go for",
    "start": "1331760",
    "end": "1338539"
  },
  {
    "text": "end-to-end Solutions first don't break down your project into components and then build each component until it's",
    "start": "1338539",
    "end": "1345799"
  },
  {
    "text": "quote done what you're going to end up with is it's like if you try to build a bridge all",
    "start": "1345799",
    "end": "1351500"
  },
  {
    "text": "from one end and then just connect it at the very end it's going to fall over and you're not going to get there the",
    "start": "1351500",
    "end": "1358100"
  },
  {
    "text": "better approach is to send one rope all the way over",
    "start": "1358100",
    "end": "1363919"
  },
  {
    "text": "and use that to go back and forth adding more and more functionality end to end",
    "start": "1363919",
    "end": "1370159"
  },
  {
    "text": "and that way you won't be tempted on each individual component to go for complete Perfection instead you'll just",
    "start": "1370159",
    "end": "1377780"
  },
  {
    "text": "want to perfect the things that it really needs to do in the system and this you know this is not some",
    "start": "1377780",
    "end": "1382900"
  },
  {
    "text": "earth-shattering new thing that a lot of people call this you ain't going to need it but I think in Haskell because of the",
    "start": "1382900",
    "end": "1389539"
  },
  {
    "text": "potential damage of perfectionism it's especially important to keep this in mind",
    "start": "1389539",
    "end": "1394700"
  },
  {
    "text": "and I always always remember refactoring is easy it took me years to",
    "start": "1394700",
    "end": "1400280"
  },
  {
    "text": "remember this I would always try to design something so that I wouldn't have to refactor it later",
    "start": "1400280",
    "end": "1405740"
  },
  {
    "text": "that's almost always been a mistake",
    "start": "1405740",
    "end": "1409960"
  },
  {
    "text": "Haskell has a lot of this one uh there's a lot of impressive amazing",
    "start": "1411620",
    "end": "1418460"
  },
  {
    "text": "stuff coming out of the Haskell research Community all the time language extensions phenomenal Loop new libraries",
    "start": "1418460",
    "end": "1426159"
  },
  {
    "text": "you know everything from you know look at linear types look at compact regions",
    "start": "1426159",
    "end": "1432640"
  },
  {
    "text": "Singletons there's a ton of stuff out there that's extremely impressive",
    "start": "1432640",
    "end": "1438080"
  },
  {
    "text": "academic research but there's a tendency with developers and",
    "start": "1438080",
    "end": "1445280"
  },
  {
    "text": "I've been subject to this just like everybody else to look at something new and shiny and say",
    "start": "1445280",
    "end": "1450740"
  },
  {
    "text": "great I know this solution now and then the next time you see a problem that matches that or maybe doesn't quite",
    "start": "1450740",
    "end": "1457820"
  },
  {
    "text": "match it you say I'm going to use this solution",
    "start": "1457820",
    "end": "1462820"
  },
  {
    "text": "but a lot of the time with these sorts of things the cost outweighs the benefit and we",
    "start": "1462860",
    "end": "1470299"
  },
  {
    "text": "have to keep in mind that there is a lot of cognitive overhead associated with",
    "start": "1470299",
    "end": "1475940"
  },
  {
    "text": "language extensions and libraries which in Haskell can resemble language Extensions by the sheer level of",
    "start": "1475940",
    "end": "1483140"
  },
  {
    "text": "functionality they provide I mean Singleton's is almost like a dependently typed language living inside of Haskell",
    "start": "1483140",
    "end": "1489740"
  },
  {
    "text": "with just terrible syntax um and and by the way Richard Eisenberg would agree with me on that one",
    "start": "1489740",
    "end": "1496820"
  },
  {
    "text": "um so especially on a team you know you don't want everybody to have to learn",
    "start": "1496820",
    "end": "1502700"
  },
  {
    "text": "your new pet favorite thing so you know we try to keep it under",
    "start": "1502700",
    "end": "1508520"
  },
  {
    "text": "control it's another just aspect of self-discipline that's necessary and one thing that's helpful to keep in",
    "start": "1508520",
    "end": "1514580"
  },
  {
    "text": "mind is that the vast majority of the great software that is shipped every single day is built without some types",
    "start": "1514580",
    "end": "1522260"
  },
  {
    "text": "without type classes without most of the features that we love about Haskell 98",
    "start": "1522260",
    "end": "1528500"
  },
  {
    "text": "if they can do it with those functionalities you can probably do it without",
    "start": "1528500",
    "end": "1534559"
  },
  {
    "text": "Singletons just saying",
    "start": "1534559",
    "end": "1539200"
  },
  {
    "text": "and finally oh this forget that one so the things that we",
    "start": "1540860",
    "end": "1548419"
  },
  {
    "text": "have had to build in order to make what we want a reality",
    "start": "1548419",
    "end": "1556340"
  },
  {
    "text": "have been pretty interesting we've taken a lot of small things here and there like contributing to Upstream libraries",
    "start": "1556340",
    "end": "1562820"
  },
  {
    "text": "and we've also done a few larger projects when we saw a large gap but we knew that we need to cross it",
    "start": "1562820",
    "end": "1569659"
  },
  {
    "text": "the first one and this was really right when we were starting obsidian and so we felt this very severely was it was very",
    "start": "1569659",
    "end": "1578360"
  },
  {
    "text": "challenging to manage ghcjs as part of a build process uh just getting a new developer up and running on ghcjs back",
    "start": "1578360",
    "end": "1585380"
  },
  {
    "text": "in the day required using vagrant to build a virtual machine with all kinds of",
    "start": "1585380",
    "end": "1590779"
  },
  {
    "text": "dependencies in there and then you'd have this virtual machine with uh you know a binary inside of it now you've",
    "start": "1590779",
    "end": "1596659"
  },
  {
    "text": "got to integrate that into your compiler tool chain and so we built uh along with John Wigley a nixification of ghcjs that made",
    "start": "1596659",
    "end": "1606200"
  },
  {
    "text": "ghcjs just another uh you know Haskell compiler in Nix packages",
    "start": "1606200",
    "end": "1613580"
  },
  {
    "text": "uh you know we we started to really see the benefits of Nix then that that was",
    "start": "1613580",
    "end": "1619039"
  },
  {
    "text": "that was maybe one of the first really large things uh that I had done with Nick's uh packaging something complex",
    "start": "1619039",
    "end": "1625720"
  },
  {
    "text": "and this enabled us to provide binary caches to everybody on the internet who wants to try reflex",
    "start": "1625720",
    "end": "1631880"
  },
  {
    "text": "um that was actually the original name of the solution try reflex um and uh you know it really gives you a",
    "start": "1631880",
    "end": "1638779"
  },
  {
    "text": "lot of advantages um NYX knocked it out of the park on this one",
    "start": "1638779",
    "end": "1644380"
  },
  {
    "text": "the next really big thing that we had to build",
    "start": "1645140",
    "end": "1650679"
  },
  {
    "text": "was something to let us do mobile applications as we started to have success with web full stack applications",
    "start": "1650840",
    "end": "1657679"
  },
  {
    "text": "we got more and more requests from clients and potential clients to do mobile apps",
    "start": "1657679",
    "end": "1663799"
  },
  {
    "text": "and we didn't want to start spinning up you know an objective-c team or a swift",
    "start": "1663799",
    "end": "1669980"
  },
  {
    "text": "team or a Java team or a kotlin team um because we knew that we would lose a",
    "start": "1669980",
    "end": "1676159"
  },
  {
    "text": "lot of the benefits that I've spoken about earlier in this talk um it wouldn't be full stack in the same",
    "start": "1676159",
    "end": "1681980"
  },
  {
    "text": "way you know that it would be really painful so we bit the bullet and we went all in",
    "start": "1681980",
    "end": "1687080"
  },
  {
    "text": "on this one we decided that we would do whatever it took to get Haskell to work on mobile",
    "start": "1687080",
    "end": "1694640"
  },
  {
    "text": "we added a whole lot of fixes to GHC we built a NYX infrastructure around all",
    "start": "1694640",
    "end": "1703520"
  },
  {
    "text": "of this we built some Haskell packages to handle you know bootstrapping and",
    "start": "1703520",
    "end": "1708860"
  },
  {
    "text": "application on Android for example where there's no traditional use of of a main function you have all kinds of callbacks",
    "start": "1708860",
    "end": "1715820"
  },
  {
    "text": "and iOS is very similar and we worked with the people Upstream we worked with",
    "start": "1715820",
    "end": "1721100"
  },
  {
    "text": "Ben gamari on GHC we worked with uh Hamish on J saddle",
    "start": "1721100",
    "end": "1727100"
  },
  {
    "text": "and we ended up with something where it lets you build hybrid mobile apps",
    "start": "1727100",
    "end": "1733100"
  },
  {
    "text": "that run all of your code natively so you can access native apis you can you",
    "start": "1733100",
    "end": "1738559"
  },
  {
    "text": "get full performance for your Haskell code um you get the ability to uh and you",
    "start": "1738559",
    "end": "1745100"
  },
  {
    "text": "know you can basically do everything that you would do in a native app",
    "start": "1745100",
    "end": "1751720"
  },
  {
    "text": "now due to our specific requirements of the clients that we had at the time and",
    "start": "1751720",
    "end": "1757820"
  },
  {
    "text": "really we've seen this is actually pretty common um we we went with the the hybrid app",
    "start": "1757820",
    "end": "1764419"
  },
  {
    "text": "approach of having all the visuals rendered with dom",
    "start": "1764419",
    "end": "1770299"
  },
  {
    "text": "now this is a choice but it's a choice that a lot of businesses make because it means you don't have to pay the",
    "start": "1770299",
    "end": "1777080"
  },
  {
    "text": "designers three times as much for three designs you don't have to have uh QA do",
    "start": "1777080",
    "end": "1782240"
  },
  {
    "text": "quite as much work on every single different platform it's a quicker way to get business applications and things",
    "start": "1782240",
    "end": "1788059"
  },
  {
    "text": "into a native mobile deployment in a way that really solves",
    "start": "1788059",
    "end": "1794419"
  },
  {
    "text": "your solves your needs without additional cost now",
    "start": "1794419",
    "end": "1799520"
  },
  {
    "text": "all of this has been upstreamed uh it's it's something that we believe would be",
    "start": "1799520",
    "end": "1804860"
  },
  {
    "text": "silly for us to keep in-house um and it's also something that we want the community to be able to benefit from",
    "start": "1804860",
    "end": "1810320"
  },
  {
    "text": "as well now today I'm announcing obelisk",
    "start": "1810320",
    "end": "1817880"
  },
  {
    "text": "which is something that we created to solve the problem of how we get new people into",
    "start": "1817880",
    "end": "1825980"
  },
  {
    "text": "this ecosystem as we've been hiring more and more people it's become increasingly difficult to teach people the ins and",
    "start": "1825980",
    "end": "1832100"
  },
  {
    "text": "outs of every single part of a web and mobile application there's really only so much somebody can",
    "start": "1832100",
    "end": "1838520"
  },
  {
    "text": "stand to learn before getting something on the screen and as I mentioned before we always want",
    "start": "1838520",
    "end": "1844220"
  },
  {
    "text": "to build for production so we don't want to give people toy stuff to work with as",
    "start": "1844220",
    "end": "1850039"
  },
  {
    "text": "part of an extended learning process that you know it's expensive for us it's not very fun for them there's really",
    "start": "1850039",
    "end": "1856220"
  },
  {
    "text": "it's it's not it's not good so obelisk provides sensible defaults",
    "start": "1856220",
    "end": "1862279"
  },
  {
    "text": "for every aspect of web and mobile app development it gives you an easy way to set up a",
    "start": "1862279",
    "end": "1868760"
  },
  {
    "text": "project it gives you tools for development and it gives you tools for deployment",
    "start": "1868760",
    "end": "1874159"
  },
  {
    "text": "you can get it today on GitHub and it's the easiest way now to get up",
    "start": "1874159",
    "end": "1880159"
  },
  {
    "text": "and running with reflex in a production environment",
    "start": "1880159",
    "end": "1885320"
  },
  {
    "text": "now I'll give you a brief demo of how to work with obelisk",
    "start": "1885320",
    "end": "1891820"
  },
  {
    "text": "so I'm starting here with a bear git repo it's got nothing in it",
    "start": "1892580",
    "end": "1898760"
  },
  {
    "text": "and I'm going to run OB in it OB is a command that comes with Obelisk",
    "start": "1898760",
    "end": "1905240"
  },
  {
    "text": "that automates various common tasks so now we have a complete reflex based",
    "start": "1905240",
    "end": "1913039"
  },
  {
    "text": "project skeleton we can build it locally for development with ob run",
    "start": "1913039",
    "end": "1920980"
  },
  {
    "text": "so there it is and this will automatically reload",
    "start": "1926480",
    "end": "1931880"
  },
  {
    "text": "whenever we make a change so you know I want to make a website to help with Yao publicity so",
    "start": "1931880",
    "end": "1939500"
  },
  {
    "text": "obviously can't say welcome to Obelisk let's let's get the brand in there",
    "start": "1939500",
    "end": "1946000"
  },
  {
    "text": "so this is just a standard reflex Dom app and",
    "start": "1953960",
    "end": "1959360"
  },
  {
    "text": "Obelisk knows how to integrate this very nicely into a complete web application",
    "start": "1959360",
    "end": "1966398"
  },
  {
    "text": "all right so now I refresh my browser and it's updated",
    "start": "1970340",
    "end": "1975559"
  },
  {
    "text": "and that would be the same if you've made a back-end change or a change to the common libraries or any other piece",
    "start": "1975559",
    "end": "1980899"
  },
  {
    "text": "of it now this looks like a pretty good V1 all",
    "start": "1980899",
    "end": "1986899"
  },
  {
    "text": "right let's ship it so now I can do OB deploy init",
    "start": "1986899",
    "end": "1994640"
  },
  {
    "text": "and I need to give it a host name this is where we're going to deploy to a server that I've got running",
    "start": "1994640",
    "end": "2002279"
  },
  {
    "text": "and then we need to give access to that server",
    "start": "2004480",
    "end": "2008640"
  },
  {
    "text": "and we need to tell it where we want to put our deployment configuration",
    "start": "2010960",
    "end": "2015960"
  },
  {
    "text": "and conventionally we name it based on the project and then the production environment or whatever other",
    "start": "2018039",
    "end": "2023679"
  },
  {
    "text": "environment it is oh I forgot I need to commit my code to",
    "start": "2023679",
    "end": "2029019"
  },
  {
    "text": "GitHub so that it's not just living on my machine",
    "start": "2029019",
    "end": "2034260"
  },
  {
    "text": "so this will ask me to confirm the identity of the server before I start pushing all my code to it",
    "start": "2062320",
    "end": "2068080"
  },
  {
    "text": "but it remembers that you don't have to do it every time",
    "start": "2068080",
    "end": "2072780"
  },
  {
    "text": "and now to go to production I just do OB deploy push",
    "start": "2073599",
    "end": "2080580"
  },
  {
    "text": "so this uses Nix to build everything and then it'll push it to the server",
    "start": "2081820",
    "end": "2088179"
  },
  {
    "text": "using nice incremental transfer and everything else and so in just a few seconds",
    "start": "2088179",
    "end": "2095138"
  },
  {
    "text": "we go from a wish to a production server and you",
    "start": "2095139",
    "end": "2100599"
  },
  {
    "text": "can go to this now it'll be live foreign",
    "start": "2100599",
    "end": "2107140"
  },
  {
    "text": "but we don't just want a website we want a mobile app",
    "start": "2111400",
    "end": "2118300"
  },
  {
    "text": "so I'm not going to walk you through the process of submitting yourself to Google",
    "start": "2118300",
    "end": "2124000"
  },
  {
    "text": "and Apple's whims through their app stores but I'll show you how I can get it right",
    "start": "2124000",
    "end": "2130000"
  },
  {
    "text": "on my phone here",
    "start": "2130000",
    "end": "2132900"
  },
  {
    "text": "there it is [Applause]",
    "start": "2151180",
    "end": "2161740"
  },
  {
    "text": "but we've started to get some feedback from the end users",
    "start": "2161740",
    "end": "2167079"
  },
  {
    "text": "this website has a critical defect The Styling it just doesn't pop",
    "start": "2167079",
    "end": "2175320"
  },
  {
    "text": "let's fix that we're going to have to push a hotfix",
    "start": "2175420",
    "end": "2180000"
  },
  {
    "text": "hmm what can we do all right a little bit of CSS",
    "start": "2180460",
    "end": "2187720"
  },
  {
    "text": "should solve that problem so we go to our source",
    "start": "2187720",
    "end": "2194400"
  },
  {
    "text": "oh actually let's let's test first that's always a good idea",
    "start": "2196839",
    "end": "2202180"
  },
  {
    "text": "well OB run has been running this whole time so it already rebuilt everything that looks perfect this fixes our bug",
    "start": "2202180",
    "end": "2210900"
  },
  {
    "text": "so we'll push this",
    "start": "2213520",
    "end": "2217560"
  },
  {
    "text": "and thanks y'all for the great Wi-Fi by the way this is smooth",
    "start": "2231640",
    "end": "2237420"
  },
  {
    "text": "now we can run OB deploy update",
    "start": "2240820",
    "end": "2246099"
  },
  {
    "text": "and this will pull the latest from our release branch",
    "start": "2246760",
    "end": "2250980"
  },
  {
    "text": "OB deploy push",
    "start": "2256900",
    "end": "2260099"
  },
  {
    "text": "and now ta-da problem solved",
    "start": "2270400",
    "end": "2276530"
  },
  {
    "text": "[Applause]",
    "start": "2276530",
    "end": "2284200"
  },
  {
    "text": "all right so that's obelisk try it out let me know how you like it",
    "start": "2284200",
    "end": "2292180"
  },
  {
    "text": "now we have a few improvements to Obelisk that are already scheduled",
    "start": "2292180",
    "end": "2299260"
  },
  {
    "text": "we're going to be putting ghcjs 8.2 and 8.4 support in that was just released a",
    "start": "2299260",
    "end": "2305140"
  },
  {
    "text": "couple of weeks ago and we're working to update everything to work flawlessly with that we handle synchronizing all",
    "start": "2305140",
    "end": "2312040"
  },
  {
    "text": "the dependencies between Android iOS native and ghcjs so that you don't have",
    "start": "2312040",
    "end": "2317380"
  },
  {
    "text": "to deal with incompatibilities that might sneak up on you and we're also building more",
    "start": "2317380",
    "end": "2323079"
  },
  {
    "text": "documentation we've got enough docs that you can do what I just showed you on the website and we've got a few more than",
    "start": "2323079",
    "end": "2328180"
  },
  {
    "text": "that but we're going to be documenting how to do all of the common processes that you need when you're working on a",
    "start": "2328180",
    "end": "2335500"
  },
  {
    "text": "web or mobile app um so that you know it's very easy for people to get started and nobody ever",
    "start": "2335500",
    "end": "2341200"
  },
  {
    "text": "gets stuck we're also going to be documenting a lot of the internals and we've already",
    "start": "2341200",
    "end": "2346240"
  },
  {
    "text": "started on this um because we want to make it easy for you to contribute if you want to help",
    "start": "2346240",
    "end": "2352119"
  },
  {
    "text": "move this project along if you want to help with getting mobile and web uh you",
    "start": "2352119",
    "end": "2358119"
  },
  {
    "text": "know out into the community we want it to be easy to dive in and you know hey maybe you'll find a bug",
    "start": "2358119",
    "end": "2365140"
  },
  {
    "text": "and you'll want to fix it Upstream and we're also looking for as much",
    "start": "2365140",
    "end": "2371020"
  },
  {
    "text": "feedback as possible so if you do find any issues or if you think of improvements please submit issues on",
    "start": "2371020",
    "end": "2376119"
  },
  {
    "text": "GitHub and we or other people in the community will you know look into it",
    "start": "2376119",
    "end": "2381820"
  },
  {
    "text": "I want to thank the many people who did amazing work to make the bones of this even possible",
    "start": "2381820",
    "end": "2390160"
  },
  {
    "text": "lauta did a phenomenal job with ghcjs that is some of the finest work I've",
    "start": "2390160",
    "end": "2396040"
  },
  {
    "text": "I've ever seen in my life Hamish built the interface",
    "start": "2396040",
    "end": "2401859"
  },
  {
    "text": "J saddle between Haskell and JavaScript in the Dom and will Fancher has been",
    "start": "2401859",
    "end": "2409359"
  },
  {
    "text": "prolifically contributing to Nick's packages to reflex platform and to many other technologies that we rely on",
    "start": "2409359",
    "end": "2416380"
  },
  {
    "text": "Doug Beardsley has dived in I think he was the first person to really start seriously trying this stuff out giving",
    "start": "2416380",
    "end": "2422800"
  },
  {
    "text": "us feedback and showing us where it broke Dave Lang and qfpl have done a",
    "start": "2422800",
    "end": "2429099"
  },
  {
    "text": "phenomenal job writing tutorials documentation and giving workshops I",
    "start": "2429099",
    "end": "2434140"
  },
  {
    "text": "know about 20 of you attended the workshop on Monday if you didn't you",
    "start": "2434140",
    "end": "2439420"
  },
  {
    "text": "really missed out because it was phenomenal",
    "start": "2439420",
    "end": "2443700"
  },
  {
    "text": "he does run them frequently though right",
    "start": "2444520",
    "end": "2448380"
  },
  {
    "text": "Ben gomari and well-typed have been extremely valuable resources they have",
    "start": "2449560",
    "end": "2455260"
  },
  {
    "text": "always been available when we needed them to fix things to teach us how the",
    "start": "2455260",
    "end": "2460720"
  },
  {
    "text": "ghcj the GHC internals work and to generally support all of the efforts",
    "start": "2460720",
    "end": "2465880"
  },
  {
    "text": "that we've been making and of course all of their work in turn relies on the",
    "start": "2465880",
    "end": "2472060"
  },
  {
    "text": "work of many many developers throughout the Haskell ecosystem far too many to name but they are doing amazing stuff",
    "start": "2472060",
    "end": "2479859"
  },
  {
    "text": "I also want to thank the team at obsidian especially on behalf of me and Ali I'd",
    "start": "2479859",
    "end": "2485859"
  },
  {
    "text": "really like to thank Luigi who has taken the lead on Obelisk itself and made sure",
    "start": "2485859",
    "end": "2490960"
  },
  {
    "text": "that it it's not just technically excellent but also has a great user experience and uh you know communicates",
    "start": "2490960",
    "end": "2498640"
  },
  {
    "text": "to users what it needs to Isaac Dan Elliott Alex srid and Tom have",
    "start": "2498640",
    "end": "2505359"
  },
  {
    "text": "all also contributed majorly to the development of Obelisk and not just on a",
    "start": "2505359",
    "end": "2511720"
  },
  {
    "text": "technical level of course but all of them have given input into what it should be because of course this is",
    "start": "2511720",
    "end": "2518560"
  },
  {
    "text": "something that we've started replacing our own internal infrastructure with uh and Obelisk is where we hope to open",
    "start": "2518560",
    "end": "2525339"
  },
  {
    "text": "source many many things that we've been relying on internally for a long time and of course the rest of obsidian has",
    "start": "2525339",
    "end": "2531579"
  },
  {
    "text": "has contributed uh in many ways as well",
    "start": "2531579",
    "end": "2536160"
  },
  {
    "text": "Haskell for me has been an exceptional breeding ground for",
    "start": "2536700",
    "end": "2542380"
  },
  {
    "text": "phenomenal ideas in programming theory in software",
    "start": "2542380",
    "end": "2547420"
  },
  {
    "text": "engineering and for my own personal development and I think it's going to continue to be this for a very long time",
    "start": "2547420",
    "end": "2553599"
  },
  {
    "text": "despite or because of the Void success of all costs at all costs mantra",
    "start": "2553599",
    "end": "2561220"
  },
  {
    "text": "and I think that we're now over the last couple of years we've approached a turning point",
    "start": "2561220",
    "end": "2567339"
  },
  {
    "text": "where we can start to move Haskell its community and its ecosystem",
    "start": "2567339",
    "end": "2573820"
  },
  {
    "text": "from a prototype mentality to a production mentality we have excellent tools that enable us",
    "start": "2573820",
    "end": "2581079"
  },
  {
    "text": "to do better than we could do without them and what I want to see",
    "start": "2581079",
    "end": "2586480"
  },
  {
    "text": "and what I'm continuing to work towards is taking these phenomenal developments",
    "start": "2586480",
    "end": "2592420"
  },
  {
    "text": "the great research all of the things that the community has produced and turning them into real world",
    "start": "2592420",
    "end": "2598660"
  },
  {
    "text": "benefits by getting into web and mobile app",
    "start": "2598660",
    "end": "2604060"
  },
  {
    "text": "development you know I didn't do that because I had a specific love for those things I did",
    "start": "2604060",
    "end": "2609700"
  },
  {
    "text": "them because that is an area where we can have an enormous impact on the world it you know we can take the benefits of",
    "start": "2609700",
    "end": "2617020"
  },
  {
    "text": "functional programming and get them out there and have a huge impact",
    "start": "2617020",
    "end": "2622780"
  },
  {
    "text": "so thank you very much I look forward to seeing all of you uh out there",
    "start": "2622780",
    "end": "2628840"
  },
  {
    "text": "[Applause]",
    "start": "2628840",
    "end": "2633349"
  }
]