[
  {
    "start": "0",
    "end": "73000"
  },
  {
    "text": "uh all right so yeah uh as Lara said I'm",
    "start": "10040",
    "end": "13440"
  },
  {
    "text": "Andrew McCluskey and I work at data 61",
    "start": "13440",
    "end": "15480"
  },
  {
    "text": "as part of the Queensland functional",
    "start": "15480",
    "end": "17520"
  },
  {
    "text": "programming lab and I'm going to talk",
    "start": "17520",
    "end": "19080"
  },
  {
    "text": "about property-based State machine",
    "start": "19080",
    "end": "20400"
  },
  {
    "text": "testing",
    "start": "20400",
    "end": "22020"
  },
  {
    "text": "so the what and the why",
    "start": "22020",
    "end": "24840"
  },
  {
    "text": "um I'm going to assume and hope that",
    "start": "24840",
    "end": "26820"
  },
  {
    "text": "we're all pretty familiar with the",
    "start": "26820",
    "end": "28320"
  },
  {
    "text": "basics of property-based testing so",
    "start": "28320",
    "end": "30420"
  },
  {
    "text": "here's the kind of canonical example of",
    "start": "30420",
    "end": "32340"
  },
  {
    "text": "the reversible reversible list is the",
    "start": "32340",
    "end": "35100"
  },
  {
    "text": "original list",
    "start": "35100",
    "end": "36899"
  },
  {
    "text": "uh but what about testing properties uh",
    "start": "36899",
    "end": "39540"
  },
  {
    "text": "more of like a system level",
    "start": "39540",
    "end": "41640"
  },
  {
    "text": "so",
    "start": "41640",
    "end": "43140"
  },
  {
    "text": "um we might want to test that data we've",
    "start": "43140",
    "end": "44879"
  },
  {
    "text": "submitted to a web application comes",
    "start": "44879",
    "end": "47040"
  },
  {
    "text": "back",
    "start": "47040",
    "end": "47820"
  },
  {
    "text": "um the same as we put it in",
    "start": "47820",
    "end": "49500"
  },
  {
    "text": "we might want to ensure that our",
    "start": "49500",
    "end": "51239"
  },
  {
    "text": "uniqueness constraints hold and we might",
    "start": "51239",
    "end": "53879"
  },
  {
    "text": "want to check that our authentication is",
    "start": "53879",
    "end": "55199"
  },
  {
    "text": "doing what it should",
    "start": "55199",
    "end": "56520"
  },
  {
    "text": "so given our property-based testing",
    "start": "56520",
    "end": "59699"
  },
  {
    "text": "tools in the small like testing our",
    "start": "59699",
    "end": "61079"
  },
  {
    "text": "reverse function it's not necessarily",
    "start": "61079",
    "end": "62699"
  },
  {
    "text": "immediately obvious how we might be able",
    "start": "62699",
    "end": "64978"
  },
  {
    "text": "to use these property-based testing",
    "start": "64979",
    "end": "66720"
  },
  {
    "text": "tools in the large",
    "start": "66720",
    "end": "69299"
  },
  {
    "text": "but we have state machine testing which",
    "start": "69299",
    "end": "71340"
  },
  {
    "text": "I'm going to talk to you about today",
    "start": "71340",
    "end": "74220"
  },
  {
    "start": "73000",
    "end": "88000"
  },
  {
    "text": "So the plan from here",
    "start": "74220",
    "end": "76200"
  },
  {
    "text": "I'm going to give a very quick",
    "start": "76200",
    "end": "77640"
  },
  {
    "text": "introduction to State machines",
    "start": "77640",
    "end": "79799"
  },
  {
    "text": "we're going to have a look at",
    "start": "79799",
    "end": "81360"
  },
  {
    "text": "property-based testing for State",
    "start": "81360",
    "end": "82920"
  },
  {
    "text": "machines using the Hedgehog Library",
    "start": "82920",
    "end": "85259"
  },
  {
    "text": "and then we're going to jump into some",
    "start": "85259",
    "end": "87240"
  },
  {
    "text": "examples",
    "start": "87240",
    "end": "89040"
  },
  {
    "start": "88000",
    "end": "145000"
  },
  {
    "text": "so State machines",
    "start": "89040",
    "end": "91140"
  },
  {
    "text": "this is about the simplest date machine",
    "start": "91140",
    "end": "93299"
  },
  {
    "text": "you'll find it's one of the examples",
    "start": "93299",
    "end": "95100"
  },
  {
    "text": "from Wikipedia so illustrate from there",
    "start": "95100",
    "end": "98159"
  },
  {
    "text": "so a state machine has States as you",
    "start": "98159",
    "end": "100740"
  },
  {
    "text": "might expect so this is a state machine",
    "start": "100740",
    "end": "102600"
  },
  {
    "text": "for a Turn Style it can be either locked",
    "start": "102600",
    "end": "105299"
  },
  {
    "text": "or unlocked",
    "start": "105299",
    "end": "107100"
  },
  {
    "text": "it has an initial state which is marked",
    "start": "107100",
    "end": "109259"
  },
  {
    "text": "by this filled in black circle",
    "start": "109259",
    "end": "112560"
  },
  {
    "text": "and it has inputs so if we have a locked",
    "start": "112560",
    "end": "115560"
  },
  {
    "text": "Turn Style and we put a coin in it",
    "start": "115560",
    "end": "116939"
  },
  {
    "text": "becomes unlocked if we push the unlock",
    "start": "116939",
    "end": "118860"
  },
  {
    "text": "Turn Style it becomes locked again",
    "start": "118860",
    "end": "122600"
  },
  {
    "text": "I'm also going to guess that most of you",
    "start": "123240",
    "end": "125880"
  },
  {
    "text": "aren't writing software that models turn",
    "start": "125880",
    "end": "127560"
  },
  {
    "text": "Styles uh so what else can we model as a",
    "start": "127560",
    "end": "130319"
  },
  {
    "text": "state machine",
    "start": "130319",
    "end": "131400"
  },
  {
    "text": "games make use of State machines",
    "start": "131400",
    "end": "133440"
  },
  {
    "text": "hopefully some of you are writing games",
    "start": "133440",
    "end": "135239"
  },
  {
    "text": "sounds fun",
    "start": "135239",
    "end": "136700"
  },
  {
    "text": "routing so the internet uses State",
    "start": "136700",
    "end": "139500"
  },
  {
    "text": "machines",
    "start": "139500",
    "end": "140819"
  },
  {
    "text": "and what we're going to talk about today",
    "start": "140819",
    "end": "142500"
  },
  {
    "text": "web applications they can be thought of",
    "start": "142500",
    "end": "144180"
  },
  {
    "text": "as state machines as well",
    "start": "144180",
    "end": "146640"
  },
  {
    "start": "145000",
    "end": "172000"
  },
  {
    "text": "so what does a web application look like",
    "start": "146640",
    "end": "148379"
  },
  {
    "text": "as a state machine",
    "start": "148379",
    "end": "149879"
  },
  {
    "text": "so our states will be the states of the",
    "start": "149879",
    "end": "153120"
  },
  {
    "text": "various states of the database and any",
    "start": "153120",
    "end": "154500"
  },
  {
    "text": "in-memory stuff that we're storing the",
    "start": "154500",
    "end": "156720"
  },
  {
    "text": "inputs will be HTTP requests so when we",
    "start": "156720",
    "end": "158940"
  },
  {
    "text": "send a request to a web application",
    "start": "158940",
    "end": "160920"
  },
  {
    "text": "often we're hoping that its state will",
    "start": "160920",
    "end": "162480"
  },
  {
    "text": "change somehow",
    "start": "162480",
    "end": "163680"
  },
  {
    "text": "and the initial state will be the",
    "start": "163680",
    "end": "165120"
  },
  {
    "text": "application before we've actually sent",
    "start": "165120",
    "end": "166920"
  },
  {
    "text": "any requests so empty database all that",
    "start": "166920",
    "end": "168959"
  },
  {
    "text": "sort of stuff",
    "start": "168959",
    "end": "171379"
  },
  {
    "text": "so the web application we're going to",
    "start": "171540",
    "end": "173099"
  },
  {
    "start": "172000",
    "end": "256000"
  },
  {
    "text": "talk about today is called leaderboard",
    "start": "173099",
    "end": "175280"
  },
  {
    "text": "it's saying that we've been playing with",
    "start": "175280",
    "end": "177780"
  },
  {
    "text": "the data 61 it's kind of more of a",
    "start": "177780",
    "end": "179640"
  },
  {
    "text": "testing ground than a finished",
    "start": "179640",
    "end": "180660"
  },
  {
    "text": "application",
    "start": "180660",
    "end": "181860"
  },
  {
    "text": "um",
    "start": "181860",
    "end": "182640"
  },
  {
    "text": "so the idea is that eventually it will",
    "start": "182640",
    "end": "185099"
  },
  {
    "text": "keep track of game scores and player",
    "start": "185099",
    "end": "186720"
  },
  {
    "text": "ratings we're pretty big fans of table",
    "start": "186720",
    "end": "188160"
  },
  {
    "text": "tennis at qfpl",
    "start": "188160",
    "end": "191459"
  },
  {
    "text": "so the API we're just going to look at",
    "start": "191459",
    "end": "193560"
  },
  {
    "text": "the player registration API today",
    "start": "193560",
    "end": "196440"
  },
  {
    "text": "so the first input in end point we have",
    "start": "196440",
    "end": "199200"
  },
  {
    "text": "is register first so this is used when",
    "start": "199200",
    "end": "201060"
  },
  {
    "text": "the applications first started we can",
    "start": "201060",
    "end": "203220"
  },
  {
    "text": "register our first user so it's",
    "start": "203220",
    "end": "205379"
  },
  {
    "text": "basically the first person in who",
    "start": "205379",
    "end": "207120"
  },
  {
    "text": "registers they become the admin user",
    "start": "207120",
    "end": "211140"
  },
  {
    "text": "after that we can register subsequent",
    "start": "211140",
    "end": "213420"
  },
  {
    "text": "users but we can only do that if we're",
    "start": "213420",
    "end": "215819"
  },
  {
    "text": "an administrator",
    "start": "215819",
    "end": "218760"
  },
  {
    "text": "uh we have a me endpoint which just",
    "start": "218760",
    "end": "220799"
  },
  {
    "text": "retrieves the player information for the",
    "start": "220799",
    "end": "222540"
  },
  {
    "text": "player who's submitting the request so",
    "start": "222540",
    "end": "224459"
  },
  {
    "text": "again requires authentication and we",
    "start": "224459",
    "end": "226500"
  },
  {
    "text": "have a player count which is a public",
    "start": "226500",
    "end": "227940"
  },
  {
    "text": "endpoint so anyone can hit this and get",
    "start": "227940",
    "end": "230220"
  },
  {
    "text": "back a count of players",
    "start": "230220",
    "end": "232620"
  },
  {
    "text": "so there are some properties we might",
    "start": "232620",
    "end": "234360"
  },
  {
    "text": "want to test for this API we might want",
    "start": "234360",
    "end": "237900"
  },
  {
    "text": "to check that we can only register our",
    "start": "237900",
    "end": "240000"
  },
  {
    "text": "first user once right makes sense",
    "start": "240000",
    "end": "242640"
  },
  {
    "text": "we might also want to check that our",
    "start": "242640",
    "end": "244319"
  },
  {
    "text": "Play account matches the number of",
    "start": "244319",
    "end": "245640"
  },
  {
    "text": "successful registrations",
    "start": "245640",
    "end": "248459"
  },
  {
    "text": "and we also want to check that the data",
    "start": "248459",
    "end": "251099"
  },
  {
    "text": "we've put in for our players matches",
    "start": "251099",
    "end": "253739"
  },
  {
    "text": "um what we get back",
    "start": "253739",
    "end": "256500"
  },
  {
    "start": "256000",
    "end": "362000"
  },
  {
    "text": "so that brings us to State machine",
    "start": "256500",
    "end": "257940"
  },
  {
    "text": "testing",
    "start": "257940",
    "end": "259320"
  },
  {
    "text": "so the kind of elevator pitch of the big",
    "start": "259320",
    "end": "261239"
  },
  {
    "text": "picture of State machine testing is that",
    "start": "261239",
    "end": "262860"
  },
  {
    "text": "we have a state machine to model our",
    "start": "262860",
    "end": "264960"
  },
  {
    "text": "application and its state",
    "start": "264960",
    "end": "267600"
  },
  {
    "text": "we randomly generate inputs and then",
    "start": "267600",
    "end": "269520"
  },
  {
    "text": "execute those inputs like we do with",
    "start": "269520",
    "end": "271199"
  },
  {
    "text": "property-based testing",
    "start": "271199",
    "end": "272940"
  },
  {
    "text": "and then we update our model of the",
    "start": "272940",
    "end": "274979"
  },
  {
    "text": "application State locally",
    "start": "274979",
    "end": "277740"
  },
  {
    "text": "and then we check that our model agrees",
    "start": "277740",
    "end": "279360"
  },
  {
    "text": "with reality so we make our assertions",
    "start": "279360",
    "end": "281280"
  },
  {
    "text": "about the world",
    "start": "281280",
    "end": "283500"
  },
  {
    "text": "and now enter the Hedgehog",
    "start": "283500",
    "end": "286860"
  },
  {
    "text": "so uh as you would expect we're talking",
    "start": "286860",
    "end": "289620"
  },
  {
    "text": "about State machines Hedgehog requires",
    "start": "289620",
    "end": "291840"
  },
  {
    "text": "that we have a type to capture our state",
    "start": "291840",
    "end": "295340"
  },
  {
    "text": "in this case we're just wrapping up a",
    "start": "295340",
    "end": "298080"
  },
  {
    "text": "Boolean value but things will get more",
    "start": "298080",
    "end": "299520"
  },
  {
    "text": "interesting later",
    "start": "299520",
    "end": "300660"
  },
  {
    "text": "you'll also notice that this type is",
    "start": "300660",
    "end": "302400"
  },
  {
    "text": "parameterized by this type Constructor V",
    "start": "302400",
    "end": "304800"
  },
  {
    "text": "and we're going to willfully ignore that",
    "start": "304800",
    "end": "307560"
  },
  {
    "text": "for now",
    "start": "307560",
    "end": "308639"
  },
  {
    "text": "we'll get back to it though",
    "start": "308639",
    "end": "311160"
  },
  {
    "text": "um so as we saw from our state Machine",
    "start": "311160",
    "end": "312900"
  },
  {
    "text": "model before we also need some inputs so",
    "start": "312900",
    "end": "315360"
  },
  {
    "text": "in the case of this application some",
    "start": "315360",
    "end": "316860"
  },
  {
    "text": "examples of the Play account so this is",
    "start": "316860",
    "end": "318960"
  },
  {
    "text": "just a nullary Constructor we make the",
    "start": "318960",
    "end": "321900"
  },
  {
    "text": "request we get back a account value",
    "start": "321900",
    "end": "324120"
  },
  {
    "text": "when we want to register our first",
    "start": "324120",
    "end": "326100"
  },
  {
    "text": "player we need some registration",
    "start": "326100",
    "end": "328139"
  },
  {
    "text": "information so that's an argument to",
    "start": "328139",
    "end": "329639"
  },
  {
    "text": "this input",
    "start": "329639",
    "end": "330780"
  },
  {
    "text": "and finally when we want to register",
    "start": "330780",
    "end": "332220"
  },
  {
    "text": "subsequent users we need an",
    "start": "332220",
    "end": "334199"
  },
  {
    "text": "administrator token and we need that",
    "start": "334199",
    "end": "335759"
  },
  {
    "text": "registration information",
    "start": "335759",
    "end": "338479"
  },
  {
    "text": "and the final piece we need for our",
    "start": "339000",
    "end": "340740"
  },
  {
    "text": "state machine is an initial state so",
    "start": "340740",
    "end": "342660"
  },
  {
    "text": "this is just a value of our state type",
    "start": "342660",
    "end": "344340"
  },
  {
    "text": "and here we're initializing it to false",
    "start": "344340",
    "end": "348060"
  },
  {
    "text": "so we have our state machine stuff now",
    "start": "348060",
    "end": "349740"
  },
  {
    "text": "we need to worry about all of the",
    "start": "349740",
    "end": "351180"
  },
  {
    "text": "property-based testing stuff how do we",
    "start": "351180",
    "end": "352680"
  },
  {
    "text": "fit all this together so how do we",
    "start": "352680",
    "end": "354539"
  },
  {
    "text": "generate our inputs how do we execute",
    "start": "354539",
    "end": "356220"
  },
  {
    "text": "them in the application and how do we",
    "start": "356220",
    "end": "358979"
  },
  {
    "text": "handle things like shrinking",
    "start": "358979",
    "end": "362060"
  },
  {
    "text": "so before we go much further there's one",
    "start": "362940",
    "end": "365940"
  },
  {
    "text": "something I want to consider which is",
    "start": "365940",
    "end": "368220"
  },
  {
    "text": "that all of our inputs in this model are",
    "start": "368220",
    "end": "370919"
  },
  {
    "text": "generated before we've executed anything",
    "start": "370919",
    "end": "372780"
  },
  {
    "text": "against the application",
    "start": "372780",
    "end": "374880"
  },
  {
    "text": "so in our state machine testing this",
    "start": "374880",
    "end": "377100"
  },
  {
    "text": "makes things a little interesting so in",
    "start": "377100",
    "end": "379680"
  },
  {
    "text": "this pretend pseudo code here",
    "start": "379680",
    "end": "381900"
  },
  {
    "text": "if we run our register first input we",
    "start": "381900",
    "end": "384840"
  },
  {
    "text": "have this potential output we're",
    "start": "384840",
    "end": "386400"
  },
  {
    "text": "expecting to get back this token right",
    "start": "386400",
    "end": "388699"
  },
  {
    "text": "and we're still generating our inputs we",
    "start": "388699",
    "end": "391259"
  },
  {
    "text": "generate another input that we're",
    "start": "391259",
    "end": "392400"
  },
  {
    "text": "planning to run which is a register",
    "start": "392400",
    "end": "394259"
  },
  {
    "text": "command and you'll notice that one of",
    "start": "394259",
    "end": "396000"
  },
  {
    "text": "its arguments is this authentication",
    "start": "396000",
    "end": "398759"
  },
  {
    "text": "token",
    "start": "398759",
    "end": "399900"
  },
  {
    "text": "so it begs the question now",
    "start": "399900",
    "end": "402780"
  },
  {
    "text": "um or it kind of highlights that we need",
    "start": "402780",
    "end": "404699"
  },
  {
    "text": "some way to talk about our state and the",
    "start": "404699",
    "end": "407039"
  },
  {
    "text": "values we're getting back from our",
    "start": "407039",
    "end": "408180"
  },
  {
    "text": "application before we've actually",
    "start": "408180",
    "end": "410460"
  },
  {
    "text": "executed anything against the",
    "start": "410460",
    "end": "411720"
  },
  {
    "text": "application",
    "start": "411720",
    "end": "413699"
  },
  {
    "text": "so Hedgehog's solution to this is this",
    "start": "413699",
    "end": "416220"
  },
  {
    "text": "VAR type so it's a VAR of some type A",
    "start": "416220",
    "end": "419819"
  },
  {
    "text": "and A V the V is going to be symbolic or",
    "start": "419819",
    "end": "423060"
  },
  {
    "text": "concrete",
    "start": "423060",
    "end": "424080"
  },
  {
    "text": "and these are both type Constructors and",
    "start": "424080",
    "end": "427080"
  },
  {
    "text": "as you might imagine a symbolic VAR is",
    "start": "427080",
    "end": "429780"
  },
  {
    "text": "representing some value that we expect",
    "start": "429780",
    "end": "432360"
  },
  {
    "text": "to get back from the application while",
    "start": "432360",
    "end": "434039"
  },
  {
    "text": "we're executing tests but we don't",
    "start": "434039",
    "end": "435300"
  },
  {
    "text": "actually have a value yet",
    "start": "435300",
    "end": "436979"
  },
  {
    "text": "and likewise a concrete value is one",
    "start": "436979",
    "end": "439380"
  },
  {
    "text": "that we've actually received back from",
    "start": "439380",
    "end": "440940"
  },
  {
    "text": "the application so we have a real value",
    "start": "440940",
    "end": "442680"
  },
  {
    "text": "now",
    "start": "442680",
    "end": "444419"
  },
  {
    "text": "um this will hopefully become a bit",
    "start": "444419",
    "end": "445860"
  },
  {
    "text": "clearer when we start getting to some",
    "start": "445860",
    "end": "447240"
  },
  {
    "text": "examples",
    "start": "447240",
    "end": "449220"
  },
  {
    "text": "um and so now that we've got all of this",
    "start": "449220",
    "end": "451080"
  },
  {
    "text": "uh behind us we can start talking about",
    "start": "451080",
    "end": "453000"
  },
  {
    "text": "commands so commands bundle together the",
    "start": "453000",
    "end": "455699"
  },
  {
    "text": "generation of our inputs the execution",
    "start": "455699",
    "end": "458160"
  },
  {
    "text": "of the inputs the preconditions our",
    "start": "458160",
    "end": "461280"
  },
  {
    "text": "state updates and our post conditions",
    "start": "461280",
    "end": "464340"
  },
  {
    "text": "so what does that look like this is an",
    "start": "464340",
    "end": "466740"
  },
  {
    "text": "Abridged version of the command type",
    "start": "466740",
    "end": "468479"
  },
  {
    "text": "from Hedgehog's code",
    "start": "468479",
    "end": "471000"
  },
  {
    "text": "uh it's parameterized by an n and an m",
    "start": "471000",
    "end": "473400"
  },
  {
    "text": "and a state the N is our generator monad",
    "start": "473400",
    "end": "476220"
  },
  {
    "text": "the m is the moment in which we get our",
    "start": "476220",
    "end": "478380"
  },
  {
    "text": "outputs and our state type",
    "start": "478380",
    "end": "482280"
  },
  {
    "text": "so we need a generator our generator",
    "start": "482280",
    "end": "484560"
  },
  {
    "text": "will take some symbolic state so we",
    "start": "484560",
    "end": "486660"
  },
  {
    "text": "haven't actually got values back yet and",
    "start": "486660",
    "end": "488880"
  },
  {
    "text": "then it will optionally provide a",
    "start": "488880",
    "end": "490740"
  },
  {
    "text": "generator for an input",
    "start": "490740",
    "end": "492720"
  },
  {
    "text": "so it might not make sense to generate",
    "start": "492720",
    "end": "495840"
  },
  {
    "text": "an input given the state so as we saw",
    "start": "495840",
    "end": "498360"
  },
  {
    "text": "before if we were looking at generating",
    "start": "498360",
    "end": "500699"
  },
  {
    "text": "our register command it's not going to",
    "start": "500699",
    "end": "502919"
  },
  {
    "text": "make sense to generate that input unless",
    "start": "502919",
    "end": "505199"
  },
  {
    "text": "we've already run register first and",
    "start": "505199",
    "end": "507000"
  },
  {
    "text": "have a token that we need to run this",
    "start": "507000",
    "end": "508740"
  },
  {
    "text": "input",
    "start": "508740",
    "end": "511099"
  },
  {
    "text": "um we then need to specify how to",
    "start": "511620",
    "end": "513060"
  },
  {
    "text": "execute this input so if we've got a",
    "start": "513060",
    "end": "515159"
  },
  {
    "text": "concrete input how do we run that and",
    "start": "515159",
    "end": "517440"
  },
  {
    "text": "get an output back from the application",
    "start": "517440",
    "end": "519479"
  },
  {
    "text": "and finally callbacks so what a",
    "start": "519479",
    "end": "522060"
  },
  {
    "text": "callbacks look like they're a sum type",
    "start": "522060",
    "end": "524700"
  },
  {
    "text": "here and the first Constructor is",
    "start": "524700",
    "end": "527220"
  },
  {
    "text": "require which is for preconditions so if",
    "start": "527220",
    "end": "530700"
  },
  {
    "text": "we have a symbolic view of the state and",
    "start": "530700",
    "end": "533100"
  },
  {
    "text": "a symbolic input we need to be able to",
    "start": "533100",
    "end": "535080"
  },
  {
    "text": "tell Hedgehog whether or not it makes",
    "start": "535080",
    "end": "536580"
  },
  {
    "text": "sense to still run this input so this is",
    "start": "536580",
    "end": "539399"
  },
  {
    "text": "particularly useful when we're shrinking",
    "start": "539399",
    "end": "541080"
  },
  {
    "text": "you can imagine the case where some",
    "start": "541080",
    "end": "542880"
  },
  {
    "text": "input down the line requires an output",
    "start": "542880",
    "end": "546000"
  },
  {
    "text": "from earlier in our sequence of inputs",
    "start": "546000",
    "end": "549660"
  },
  {
    "text": "um and when we're shrinking on in the",
    "start": "549660",
    "end": "551279"
  },
  {
    "text": "event of failure we may have removed",
    "start": "551279",
    "end": "552959"
  },
  {
    "text": "that earlier input so we no longer have",
    "start": "552959",
    "end": "555000"
  },
  {
    "text": "the output in the state that we need to",
    "start": "555000",
    "end": "556920"
  },
  {
    "text": "run our future one so this is where the",
    "start": "556920",
    "end": "559740"
  },
  {
    "text": "preconditions can help",
    "start": "559740",
    "end": "562080"
  },
  {
    "text": "next we have updates so this is how do",
    "start": "562080",
    "end": "564839"
  },
  {
    "text": "we update our state so given",
    "start": "564839",
    "end": "567060"
  },
  {
    "text": "um the Old State the input and output",
    "start": "567060",
    "end": "569339"
  },
  {
    "text": "how do I produce a new state",
    "start": "569339",
    "end": "571740"
  },
  {
    "text": "you'll notice here that this isn't",
    "start": "571740",
    "end": "573600"
  },
  {
    "text": "symbolic or a parameterized on symbolic",
    "start": "573600",
    "end": "575880"
  },
  {
    "text": "or concrete",
    "start": "575880",
    "end": "577040"
  },
  {
    "text": "that's because this update function is",
    "start": "577040",
    "end": "579540"
  },
  {
    "text": "used for both symbolic and concrete",
    "start": "579540",
    "end": "581519"
  },
  {
    "text": "State updates so when we're generating",
    "start": "581519",
    "end": "584100"
  },
  {
    "text": "our list of inputs that we're going to",
    "start": "584100",
    "end": "585540"
  },
  {
    "text": "run against the application we have a",
    "start": "585540",
    "end": "587760"
  },
  {
    "text": "symbolic view right we haven't run",
    "start": "587760",
    "end": "589019"
  },
  {
    "text": "anything against the application we",
    "start": "589019",
    "end": "590339"
  },
  {
    "text": "don't have values everything's symbolic",
    "start": "590339",
    "end": "592200"
  },
  {
    "text": "likewise when we're actually executing",
    "start": "592200",
    "end": "594180"
  },
  {
    "text": "all of our inputs against the",
    "start": "594180",
    "end": "595320"
  },
  {
    "text": "application we're building up a concrete",
    "start": "595320",
    "end": "597060"
  },
  {
    "text": "version of the state and we want that to",
    "start": "597060",
    "end": "599040"
  },
  {
    "text": "be coherent so we use the same state",
    "start": "599040",
    "end": "600899"
  },
  {
    "text": "sorry the same update function",
    "start": "600899",
    "end": "604440"
  },
  {
    "text": "and finally we have our post conditions",
    "start": "604440",
    "end": "606480"
  },
  {
    "text": "so given the Old State the new state",
    "start": "606480",
    "end": "609839"
  },
  {
    "text": "after we've updated the input and the",
    "start": "609839",
    "end": "612360"
  },
  {
    "text": "output where everything is concrete",
    "start": "612360",
    "end": "613860"
  },
  {
    "text": "because everything's been executed now",
    "start": "613860",
    "end": "615320"
  },
  {
    "text": "we can actually do something in our test",
    "start": "615320",
    "end": "618360"
  },
  {
    "text": "mode and start making some assertions",
    "start": "618360",
    "end": "622040"
  },
  {
    "text": "the final piece of the puzzle I want to",
    "start": "622500",
    "end": "624240"
  },
  {
    "text": "talk about is H reversible so this is",
    "start": "624240",
    "end": "627240"
  },
  {
    "text": "for higher order traversable functors",
    "start": "627240",
    "end": "630000"
  },
  {
    "text": "which is a bit of a mouthful",
    "start": "630000",
    "end": "631940"
  },
  {
    "text": "so hopefully I can make this explain",
    "start": "631940",
    "end": "634860"
  },
  {
    "text": "this make a little bit more clear so",
    "start": "634860",
    "end": "636980"
  },
  {
    "text": "we've got the Traverse from regular",
    "start": "636980",
    "end": "639959"
  },
  {
    "text": "traversable on top and H Traverse down",
    "start": "639959",
    "end": "642600"
  },
  {
    "text": "the bottom the regular Traverse where",
    "start": "642600",
    "end": "645480"
  },
  {
    "text": "transforming at the value level so we're",
    "start": "645480",
    "end": "647399"
  },
  {
    "text": "transforming an a to a b with some",
    "start": "647399",
    "end": "649019"
  },
  {
    "text": "effect f",
    "start": "649019",
    "end": "650339"
  },
  {
    "text": "in h reverse we're doing a similar thing",
    "start": "650339",
    "end": "653399"
  },
  {
    "text": "but we're doing it with the type",
    "start": "653399",
    "end": "654480"
  },
  {
    "text": "Constructors so you'll see here that we",
    "start": "654480",
    "end": "656339"
  },
  {
    "text": "go from a g of a to an H of a with some",
    "start": "656339",
    "end": "659100"
  },
  {
    "text": "applicative f",
    "start": "659100",
    "end": "661019"
  },
  {
    "text": "so hopefully make that even clearer if",
    "start": "661019",
    "end": "663600"
  },
  {
    "text": "we start to substitute in some type",
    "start": "663600",
    "end": "665160"
  },
  {
    "text": "Constructors that we have lying around",
    "start": "665160",
    "end": "666480"
  },
  {
    "text": "we'll see that this gives us a way to",
    "start": "666480",
    "end": "668579"
  },
  {
    "text": "take a an instance of H reversible that",
    "start": "668579",
    "end": "671760"
  },
  {
    "text": "is full of symbolic values and produce",
    "start": "671760",
    "end": "674339"
  },
  {
    "text": "one",
    "start": "674339",
    "end": "675420"
  },
  {
    "text": "um that is full of concrete values with",
    "start": "675420",
    "end": "677519"
  },
  {
    "text": "the option of failure",
    "start": "677519",
    "end": "680279"
  },
  {
    "text": "so if we go back to our inputs where we",
    "start": "680279",
    "end": "682500"
  },
  {
    "text": "were ignoring this parameter V we'll see",
    "start": "682500",
    "end": "684899"
  },
  {
    "text": "that if we've got inputs that are full",
    "start": "684899",
    "end": "686700"
  },
  {
    "text": "of symbolic values their arguments are",
    "start": "686700",
    "end": "688440"
  },
  {
    "text": "symbolic because we haven't generated",
    "start": "688440",
    "end": "689640"
  },
  {
    "text": "any sorry I haven't executed anything",
    "start": "689640",
    "end": "691140"
  },
  {
    "text": "yet when we go to execute them we can",
    "start": "691140",
    "end": "693540"
  },
  {
    "text": "use this haverse function to swap the",
    "start": "693540",
    "end": "696000"
  },
  {
    "text": "symbolic values for concrete ones that",
    "start": "696000",
    "end": "698160"
  },
  {
    "text": "will then allow us to execute them",
    "start": "698160",
    "end": "699720"
  },
  {
    "text": "against the application",
    "start": "699720",
    "end": "702560"
  },
  {
    "start": "703000",
    "end": "879000"
  },
  {
    "text": "all right some examples",
    "start": "703440",
    "end": "705839"
  },
  {
    "text": "so the first one we're going to look at",
    "start": "705839",
    "end": "707279"
  },
  {
    "text": "is registering our first property only",
    "start": "707279",
    "end": "709680"
  },
  {
    "text": "only six Keys once",
    "start": "709680",
    "end": "713300"
  },
  {
    "text": "so again we start with our state as we",
    "start": "713399",
    "end": "715440"
  },
  {
    "text": "saw before again we're just using a",
    "start": "715440",
    "end": "716940"
  },
  {
    "text": "Boolean flag here to Mark whether we",
    "start": "716940",
    "end": "718800"
  },
  {
    "text": "registered our first user or not",
    "start": "718800",
    "end": "721560"
  },
  {
    "text": "and then we need some inputs so we have",
    "start": "721560",
    "end": "723540"
  },
  {
    "text": "a reg first input which takes our player",
    "start": "723540",
    "end": "726120"
  },
  {
    "text": "registration information and we'll use",
    "start": "726120",
    "end": "728459"
  },
  {
    "text": "this input for the success case",
    "start": "728459",
    "end": "731040"
  },
  {
    "text": "and then we have another input the reg",
    "start": "731040",
    "end": "733740"
  },
  {
    "text": "first forbidden it's very similar to the",
    "start": "733740",
    "end": "736380"
  },
  {
    "text": "first one except we use this input to",
    "start": "736380",
    "end": "738480"
  },
  {
    "text": "test for failures so once we've",
    "start": "738480",
    "end": "740640"
  },
  {
    "text": "registered our first user we'd also like",
    "start": "740640",
    "end": "742260"
  },
  {
    "text": "to make sure that if we try and register",
    "start": "742260",
    "end": "743760"
  },
  {
    "text": "that first user again that we get the",
    "start": "743760",
    "end": "746040"
  },
  {
    "text": "appropriate error value or the error",
    "start": "746040",
    "end": "747899"
  },
  {
    "text": "response",
    "start": "747899",
    "end": "750260"
  },
  {
    "text": "so our commands our Command to register",
    "start": "750660",
    "end": "753839"
  },
  {
    "text": "first looks like this it as we saw",
    "start": "753839",
    "end": "756180"
  },
  {
    "text": "before it takes a generator and execute",
    "start": "756180",
    "end": "758100"
  },
  {
    "text": "and some callbacks",
    "start": "758100",
    "end": "760320"
  },
  {
    "text": "so what does the generator look like as",
    "start": "760320",
    "end": "762240"
  },
  {
    "text": "we saw before it takes the symbolic view",
    "start": "762240",
    "end": "763920"
  },
  {
    "text": "of the state and then optionally",
    "start": "763920",
    "end": "765600"
  },
  {
    "text": "produces an input",
    "start": "765600",
    "end": "769200"
  },
  {
    "text": "so it's as you'd expect we check if we",
    "start": "769200",
    "end": "772260"
  },
  {
    "text": "registered our first user already if we",
    "start": "772260",
    "end": "774720"
  },
  {
    "text": "have it doesn't make sense to produce",
    "start": "774720",
    "end": "776339"
  },
  {
    "text": "this because we're expecting this to be",
    "start": "776339",
    "end": "777660"
  },
  {
    "text": "the success case and if we haven't",
    "start": "777660",
    "end": "779760"
  },
  {
    "text": "registered our first user then we can",
    "start": "779760",
    "end": "781320"
  },
  {
    "text": "produce this input",
    "start": "781320",
    "end": "784339"
  },
  {
    "text": "to execute this particular input",
    "start": "784560",
    "end": "787620"
  },
  {
    "text": "we have our register first function",
    "start": "787620",
    "end": "790079"
  },
  {
    "text": "which comes from servant client so we",
    "start": "790079",
    "end": "793079"
  },
  {
    "text": "use serving to do all this testing which",
    "start": "793079",
    "end": "795360"
  },
  {
    "text": "is kind of incidental to the talk but",
    "start": "795360",
    "end": "796980"
  },
  {
    "text": "has a nice benefit that we get all of",
    "start": "796980",
    "end": "798420"
  },
  {
    "text": "these client functions for free so it",
    "start": "798420",
    "end": "799860"
  },
  {
    "text": "makes the testing a lot a lot easier",
    "start": "799860",
    "end": "801480"
  },
  {
    "text": "rather than dealing with some HTTP",
    "start": "801480",
    "end": "803220"
  },
  {
    "text": "Library",
    "start": "803220",
    "end": "805200"
  },
  {
    "text": "um we then passed that to success client",
    "start": "805200",
    "end": "807240"
  },
  {
    "text": "so the type for that type here and it",
    "start": "807240",
    "end": "809399"
  },
  {
    "text": "takes a servant client environment a",
    "start": "809399",
    "end": "812160"
  },
  {
    "text": "servant client action and then either",
    "start": "812160",
    "end": "814320"
  },
  {
    "text": "Returns the error response or the value",
    "start": "814320",
    "end": "817079"
  },
  {
    "text": "that we're expecting to get back",
    "start": "817079",
    "end": "819420"
  },
  {
    "text": "we then bind that through to eval either",
    "start": "819420",
    "end": "822060"
  },
  {
    "text": "and that's from Hedgehog and what that",
    "start": "822060",
    "end": "824579"
  },
  {
    "text": "does for us is if we have a left value",
    "start": "824579",
    "end": "827880"
  },
  {
    "text": "in our either it will fail the test case",
    "start": "827880",
    "end": "830220"
  },
  {
    "text": "and give us a nice debugging output",
    "start": "830220",
    "end": "832740"
  },
  {
    "text": "which we'll see later and again if we",
    "start": "832740",
    "end": "835079"
  },
  {
    "text": "get a success then it just lifts it up",
    "start": "835079",
    "end": "836820"
  },
  {
    "text": "into our marinade for us",
    "start": "836820",
    "end": "839579"
  },
  {
    "text": "all right so the callbacks",
    "start": "839579",
    "end": "842279"
  },
  {
    "text": "so this is similar to the logic in the",
    "start": "842279",
    "end": "845700"
  },
  {
    "text": "generation when we're shrinking we don't",
    "start": "845700",
    "end": "848279"
  },
  {
    "text": "want to run this input unless we haven't",
    "start": "848279",
    "end": "851279"
  },
  {
    "text": "already registered our first user",
    "start": "851279",
    "end": "854100"
  },
  {
    "text": "our updates very straightforward once",
    "start": "854100",
    "end": "856320"
  },
  {
    "text": "we've registered our first user we just",
    "start": "856320",
    "end": "858060"
  },
  {
    "text": "update our flag to true so that's what",
    "start": "858060",
    "end": "859920"
  },
  {
    "text": "we've done",
    "start": "859920",
    "end": "861480"
  },
  {
    "text": "and then in our post conditions when we",
    "start": "861480",
    "end": "863339"
  },
  {
    "text": "get our actual value back from the",
    "start": "863339",
    "end": "865380"
  },
  {
    "text": "application after running this request",
    "start": "865380",
    "end": "866940"
  },
  {
    "text": "we're just going to check that our",
    "start": "866940",
    "end": "868860"
  },
  {
    "text": "authentication token isn't null always",
    "start": "868860",
    "end": "871680"
  },
  {
    "text": "an empty and that we have a player ID",
    "start": "871680",
    "end": "873660"
  },
  {
    "text": "greater than or equal to zero not very",
    "start": "873660",
    "end": "876120"
  },
  {
    "text": "interesting but the properties get more",
    "start": "876120",
    "end": "878459"
  },
  {
    "text": "interesting",
    "start": "878459",
    "end": "880320"
  },
  {
    "text": "so forbidden",
    "start": "880320",
    "end": "882240"
  },
  {
    "text": "so this is very similar to the first",
    "start": "882240",
    "end": "884399"
  },
  {
    "text": "case except",
    "start": "884399",
    "end": "887040"
  },
  {
    "text": "um we switched around the logic in the",
    "start": "887040",
    "end": "888839"
  },
  {
    "text": "generator now because we're expecting",
    "start": "888839",
    "end": "890279"
  },
  {
    "text": "failure so if we have registered our",
    "start": "890279",
    "end": "891839"
  },
  {
    "text": "first user we want to try and run that",
    "start": "891839",
    "end": "893579"
  },
  {
    "text": "again to make sure we get the right",
    "start": "893579",
    "end": "894660"
  },
  {
    "text": "failure",
    "start": "894660",
    "end": "896639"
  },
  {
    "text": "to execute that very similar again",
    "start": "896639",
    "end": "899339"
  },
  {
    "text": "except we're using failure client here",
    "start": "899339",
    "end": "901320"
  },
  {
    "text": "instead of success client which is",
    "start": "901320",
    "end": "902579"
  },
  {
    "text": "another helper function we've defined",
    "start": "902579",
    "end": "903839"
  },
  {
    "text": "which just flips the either values",
    "start": "903839",
    "end": "905699"
  },
  {
    "text": "around so now our error values are on",
    "start": "905699",
    "end": "907320"
  },
  {
    "text": "the right because that's what we're",
    "start": "907320",
    "end": "908279"
  },
  {
    "text": "expecting",
    "start": "908279",
    "end": "910760"
  },
  {
    "text": "and then our callbacks again very",
    "start": "910920",
    "end": "912660"
  },
  {
    "text": "similar we only want to run this if",
    "start": "912660",
    "end": "915240"
  },
  {
    "text": "we've already registered our first user",
    "start": "915240",
    "end": "917639"
  },
  {
    "text": "and then in our post conditions there",
    "start": "917639",
    "end": "920279"
  },
  {
    "text": "are no State updates because obviously",
    "start": "920279",
    "end": "921959"
  },
  {
    "text": "we're not expecting this to change the",
    "start": "921959",
    "end": "923160"
  },
  {
    "text": "state we're expecting to get an error",
    "start": "923160",
    "end": "924959"
  },
  {
    "text": "and in this case we're expecting a 403.",
    "start": "924959",
    "end": "927839"
  },
  {
    "text": "if we don't get a 403 we also want that",
    "start": "927839",
    "end": "930300"
  },
  {
    "text": "to be a test failure because if the",
    "start": "930300",
    "end": "932699"
  },
  {
    "text": "server produced a 500 response say an",
    "start": "932699",
    "end": "935760"
  },
  {
    "text": "error then that means something's gone",
    "start": "935760",
    "end": "937620"
  },
  {
    "text": "horribly wrong",
    "start": "937620",
    "end": "940459"
  },
  {
    "start": "939000",
    "end": "1139000"
  },
  {
    "text": "okay we're almost there",
    "start": "940680",
    "end": "942480"
  },
  {
    "text": "register first so we put this together",
    "start": "942480",
    "end": "944760"
  },
  {
    "text": "into our property we'd find our initial",
    "start": "944760",
    "end": "946980"
  },
  {
    "text": "State here so it starts off as false",
    "start": "946980",
    "end": "949139"
  },
  {
    "text": "because we haven't registered any users",
    "start": "949139",
    "end": "950820"
  },
  {
    "text": "yet",
    "start": "950820",
    "end": "951899"
  },
  {
    "text": "uh we specify the commands we want",
    "start": "951899",
    "end": "954000"
  },
  {
    "text": "Hedgehog to choose from when it's",
    "start": "954000",
    "end": "955860"
  },
  {
    "text": "generating a sequence of commands to run",
    "start": "955860",
    "end": "958560"
  },
  {
    "text": "we ask Hedgehog to again produce that",
    "start": "958560",
    "end": "961320"
  },
  {
    "text": "randomly generated list of commands",
    "start": "961320",
    "end": "963959"
  },
  {
    "text": "and then we run in a reset action which",
    "start": "963959",
    "end": "966600"
  },
  {
    "text": "resets our application State and then we",
    "start": "966600",
    "end": "968820"
  },
  {
    "text": "go on and execute our commands",
    "start": "968820",
    "end": "971100"
  },
  {
    "text": "so something I want to call out here",
    "start": "971100",
    "end": "972360"
  },
  {
    "text": "which tripped me up when I was first",
    "start": "972360",
    "end": "973560"
  },
  {
    "text": "playing with this library is that my",
    "start": "973560",
    "end": "976320"
  },
  {
    "text": "reset action was earlier on in this",
    "start": "976320",
    "end": "980040"
  },
  {
    "text": "function before I had finished doing all",
    "start": "980040",
    "end": "982320"
  },
  {
    "text": "of the generation of random inputs so",
    "start": "982320",
    "end": "984060"
  },
  {
    "text": "the call to for all there and what that",
    "start": "984060",
    "end": "986639"
  },
  {
    "text": "meant was that when Hedgehog was",
    "start": "986639",
    "end": "988440"
  },
  {
    "text": "shrinking in the event of failure it",
    "start": "988440",
    "end": "990420"
  },
  {
    "text": "wasn't re it wasn't running my reset",
    "start": "990420",
    "end": "992220"
  },
  {
    "text": "action which meant that I'd get an error",
    "start": "992220",
    "end": "995279"
  },
  {
    "text": "Hedgehog would shrink it wouldn't run",
    "start": "995279",
    "end": "997620"
  },
  {
    "text": "the reset action and then it would",
    "start": "997620",
    "end": "999180"
  },
  {
    "text": "execute the shrink which meant that my",
    "start": "999180",
    "end": "1001160"
  },
  {
    "text": "initial State and the application state",
    "start": "1001160",
    "end": "1002660"
  },
  {
    "text": "were no longer in sync and I would get a",
    "start": "1002660",
    "end": "1004699"
  },
  {
    "text": "totally unrelated error which was very",
    "start": "1004699",
    "end": "1007519"
  },
  {
    "text": "very confusing until I worked out this",
    "start": "1007519",
    "end": "1009800"
  },
  {
    "text": "was happening",
    "start": "1009800",
    "end": "1012279"
  },
  {
    "text": "um okay so a quick note on the test",
    "start": "1013040",
    "end": "1015139"
  },
  {
    "text": "setup",
    "start": "1015139",
    "end": "1017060"
  },
  {
    "text": "um I'm not going to go into the details",
    "start": "1017060",
    "end": "1018440"
  },
  {
    "text": "of this because it's kind of incidental",
    "start": "1018440",
    "end": "1019639"
  },
  {
    "text": "but to make all of this work we start a",
    "start": "1019639",
    "end": "1021920"
  },
  {
    "text": "temporary database instance we Fork a",
    "start": "1021920",
    "end": "1024558"
  },
  {
    "text": "thread to run our server in using the",
    "start": "1024559",
    "end": "1027100"
  },
  {
    "text": "database instances configuration and we",
    "start": "1027100",
    "end": "1029839"
  },
  {
    "text": "start that off with a database migration",
    "start": "1029839",
    "end": "1031339"
  },
  {
    "text": "because we want to start off with a",
    "start": "1031339",
    "end": "1032600"
  },
  {
    "text": "fresh sane schema",
    "start": "1032600",
    "end": "1034938"
  },
  {
    "text": "and then we run our properties using the",
    "start": "1034939",
    "end": "1037760"
  },
  {
    "text": "servant client environment for the",
    "start": "1037760",
    "end": "1039798"
  },
  {
    "text": "server that we've just kicked off",
    "start": "1039799",
    "end": "1042140"
  },
  {
    "text": "and now we get to make our Hedgehog run",
    "start": "1042140",
    "end": "1046600"
  },
  {
    "text": "and we get a test pass not so exciting",
    "start": "1046819",
    "end": "1050120"
  },
  {
    "text": "what happens if Val pull a little",
    "start": "1050120",
    "end": "1051980"
  },
  {
    "text": "hedgehog fails though",
    "start": "1051980",
    "end": "1053900"
  },
  {
    "text": "there he goes",
    "start": "1053900",
    "end": "1056980"
  },
  {
    "text": "um we won't make him do it again not yet",
    "start": "1057020",
    "end": "1058880"
  },
  {
    "text": "anyway",
    "start": "1058880",
    "end": "1059960"
  },
  {
    "text": "um so to simulate a failure",
    "start": "1059960",
    "end": "1062539"
  },
  {
    "text": "we're going to change the generator for",
    "start": "1062539",
    "end": "1064580"
  },
  {
    "text": "our register First Command",
    "start": "1064580",
    "end": "1066500"
  },
  {
    "text": "so we're going to tell it that it's",
    "start": "1066500",
    "end": "1068000"
  },
  {
    "text": "always okay to produce this command to",
    "start": "1068000",
    "end": "1070820"
  },
  {
    "text": "register first and expect success",
    "start": "1070820",
    "end": "1073220"
  },
  {
    "text": "likewise in our callbacks for the",
    "start": "1073220",
    "end": "1075559"
  },
  {
    "text": "register First Command we're going to",
    "start": "1075559",
    "end": "1076820"
  },
  {
    "text": "get rid of the precondition again",
    "start": "1076820",
    "end": "1078320"
  },
  {
    "text": "because we want to make sure that we can",
    "start": "1078320",
    "end": "1079820"
  },
  {
    "text": "always run this command rightly or",
    "start": "1079820",
    "end": "1081980"
  },
  {
    "text": "wrongly",
    "start": "1081980",
    "end": "1083360"
  },
  {
    "text": "so with these modifications if we run",
    "start": "1083360",
    "end": "1085460"
  },
  {
    "text": "again",
    "start": "1085460",
    "end": "1086419"
  },
  {
    "text": "we get some pretty error output because",
    "start": "1086419",
    "end": "1089419"
  },
  {
    "text": "we're not Mark hebbid we even get colors",
    "start": "1089419",
    "end": "1093340"
  },
  {
    "text": "so",
    "start": "1093919",
    "end": "1095720"
  },
  {
    "text": "um right so as I mentioned before in our",
    "start": "1095720",
    "end": "1098179"
  },
  {
    "text": "eval either",
    "start": "1098179",
    "end": "1100400"
  },
  {
    "text": "um because we've used this eval either",
    "start": "1100400",
    "end": "1102460"
  },
  {
    "text": "function it means that our error output",
    "start": "1102460",
    "end": "1104900"
  },
  {
    "text": "and all of our context here is right",
    "start": "1104900",
    "end": "1106460"
  },
  {
    "text": "where the failure actually occurred",
    "start": "1106460",
    "end": "1109460"
  },
  {
    "text": "um which is great and not only that but",
    "start": "1109460",
    "end": "1111740"
  },
  {
    "text": "eval either is also printed for us the",
    "start": "1111740",
    "end": "1113840"
  },
  {
    "text": "error value that we got when we're",
    "start": "1113840",
    "end": "1115100"
  },
  {
    "text": "expecting a success so if you look below",
    "start": "1115100",
    "end": "1117500"
  },
  {
    "text": "you'll see that it's a failure response",
    "start": "1117500",
    "end": "1119000"
  },
  {
    "text": "it's a 403 and we've got our message",
    "start": "1119000",
    "end": "1121100"
  },
  {
    "text": "saying that the first user's already",
    "start": "1121100",
    "end": "1122299"
  },
  {
    "text": "been added",
    "start": "1122299",
    "end": "1123980"
  },
  {
    "text": "not only that Hedgehog will also give us",
    "start": "1123980",
    "end": "1126320"
  },
  {
    "text": "this which is the list of inputs that it",
    "start": "1126320",
    "end": "1128419"
  },
  {
    "text": "shrunk down to to reproduce the failure",
    "start": "1128419",
    "end": "1130340"
  },
  {
    "text": "so this is a minimal example to",
    "start": "1130340",
    "end": "1132140"
  },
  {
    "text": "reproduce this failure and not",
    "start": "1132140",
    "end": "1134600"
  },
  {
    "text": "surprisingly we've registered our first",
    "start": "1134600",
    "end": "1136340"
  },
  {
    "text": "user twice an expected success",
    "start": "1136340",
    "end": "1140080"
  },
  {
    "start": "1139000",
    "end": "1224000"
  },
  {
    "text": "all right so Play account so this is",
    "start": "1140299",
    "end": "1142820"
  },
  {
    "text": "where things get a little bit more",
    "start": "1142820",
    "end": "1144020"
  },
  {
    "text": "interesting",
    "start": "1144020",
    "end": "1145280"
  },
  {
    "text": "the property that we're testing is that",
    "start": "1145280",
    "end": "1147200"
  },
  {
    "text": "successfully registering a player",
    "start": "1147200",
    "end": "1148640"
  },
  {
    "text": "increments the number of players",
    "start": "1148640",
    "end": "1152419"
  },
  {
    "text": "so I even have a state machine diagram",
    "start": "1152419",
    "end": "1154039"
  },
  {
    "text": "for this",
    "start": "1154039",
    "end": "1155360"
  },
  {
    "text": "pretty straightforward",
    "start": "1155360",
    "end": "1158080"
  },
  {
    "text": "and so the first change we're going to",
    "start": "1158080",
    "end": "1160460"
  },
  {
    "text": "look at is our state so you might expect",
    "start": "1160460",
    "end": "1162440"
  },
  {
    "text": "we're keeping a count of things now so",
    "start": "1162440",
    "end": "1164539"
  },
  {
    "text": "we could just use",
    "start": "1164539",
    "end": "1166039"
  },
  {
    "text": "an integer value in our state instead of",
    "start": "1166039",
    "end": "1167780"
  },
  {
    "text": "a bull unfortunately that's not the case",
    "start": "1167780",
    "end": "1170059"
  },
  {
    "text": "because all of our register commands",
    "start": "1170059",
    "end": "1172900"
  },
  {
    "text": "require that we have an authentication",
    "start": "1172900",
    "end": "1175820"
  },
  {
    "text": "token for an administrator so now we",
    "start": "1175820",
    "end": "1178039"
  },
  {
    "text": "need to keep track of those in our state",
    "start": "1178039",
    "end": "1179480"
  },
  {
    "text": "and those come as outputs from the",
    "start": "1179480",
    "end": "1183260"
  },
  {
    "text": "application itself which means now we're",
    "start": "1183260",
    "end": "1185059"
  },
  {
    "text": "getting into actually using bars and",
    "start": "1185059",
    "end": "1186559"
  },
  {
    "text": "symbolics and things",
    "start": "1186559",
    "end": "1189399"
  },
  {
    "text": "um so as you can see we've got a player",
    "start": "1189559",
    "end": "1191179"
  },
  {
    "text": "map which Maps their emails to this",
    "start": "1191179",
    "end": "1193160"
  },
  {
    "text": "player with RSP value which we'll have a",
    "start": "1193160",
    "end": "1194960"
  },
  {
    "text": "look at in a sec and we're also keeping",
    "start": "1194960",
    "end": "1196760"
  },
  {
    "text": "track of the set of admin emails so that",
    "start": "1196760",
    "end": "1198679"
  },
  {
    "text": "we can find these admin tokens that",
    "start": "1198679",
    "end": "1200419"
  },
  {
    "text": "we'll need",
    "start": "1200419",
    "end": "1202720"
  },
  {
    "text": "um so this is our player with RSP type",
    "start": "1203360",
    "end": "1204799"
  },
  {
    "text": "we're using the vars that we saw earlier",
    "start": "1204799",
    "end": "1207380"
  },
  {
    "text": "it's storing a value of type response",
    "start": "1207380",
    "end": "1210200"
  },
  {
    "text": "player and it's parameterized with this",
    "start": "1210200",
    "end": "1212900"
  },
  {
    "text": "V so it can be symbolical concrete",
    "start": "1212900",
    "end": "1215840"
  },
  {
    "text": "everything else in this type we know at",
    "start": "1215840",
    "end": "1217820"
  },
  {
    "text": "generation time so it doesn't need to be",
    "start": "1217820",
    "end": "1219500"
  },
  {
    "text": "wrapped up in a VAR it doesn't come back",
    "start": "1219500",
    "end": "1221600"
  },
  {
    "text": "from the the application",
    "start": "1221600",
    "end": "1224799"
  },
  {
    "text": "all right now we can look at our",
    "start": "1225380",
    "end": "1226760"
  },
  {
    "text": "commands so first cab off the rank is",
    "start": "1226760",
    "end": "1229100"
  },
  {
    "text": "our register First Command so we're",
    "start": "1229100",
    "end": "1230419"
  },
  {
    "text": "still using this command as you would",
    "start": "1230419",
    "end": "1232400"
  },
  {
    "text": "expect all of our checks where we were",
    "start": "1232400",
    "end": "1234799"
  },
  {
    "text": "checking this Boolean flag have now been",
    "start": "1234799",
    "end": "1236419"
  },
  {
    "text": "switched to checks that our Play account",
    "start": "1236419",
    "end": "1238340"
  },
  {
    "text": "is zero or not",
    "start": "1238340",
    "end": "1240919"
  },
  {
    "text": "um and so the most important change is",
    "start": "1240919",
    "end": "1243020"
  },
  {
    "text": "how we're updating the state",
    "start": "1243020",
    "end": "1245539"
  },
  {
    "text": "so looking at our update callback",
    "start": "1245539",
    "end": "1248840"
  },
  {
    "text": "we combine our registration information",
    "start": "1248840",
    "end": "1251360"
  },
  {
    "text": "with our response from the server and to",
    "start": "1251360",
    "end": "1254240"
  },
  {
    "text": "create our new player with RSP value",
    "start": "1254240",
    "end": "1256039"
  },
  {
    "text": "that we're storing in our player map",
    "start": "1256039",
    "end": "1258440"
  },
  {
    "text": "uh we create the Singleton map because",
    "start": "1258440",
    "end": "1260240"
  },
  {
    "text": "this is the first user likewise the",
    "start": "1260240",
    "end": "1263000"
  },
  {
    "text": "first user to get registered is always",
    "start": "1263000",
    "end": "1264500"
  },
  {
    "text": "an admin so we add them to the admins",
    "start": "1264500",
    "end": "1267559"
  },
  {
    "text": "and then we wrap it up in our new state",
    "start": "1267559",
    "end": "1270860"
  },
  {
    "start": "1270000",
    "end": "1307000"
  },
  {
    "text": "the next command we'll look at is",
    "start": "1270860",
    "end": "1272240"
  },
  {
    "text": "getting the Play account so we need to",
    "start": "1272240",
    "end": "1274280"
  },
  {
    "text": "get this back from the server now to",
    "start": "1274280",
    "end": "1275600"
  },
  {
    "text": "verify that we've kept our model up to",
    "start": "1275600",
    "end": "1278720"
  },
  {
    "text": "date",
    "start": "1278720",
    "end": "1279520"
  },
  {
    "text": "it's not a very interesting input it's",
    "start": "1279520",
    "end": "1282140"
  },
  {
    "text": "just another reconstructor here to say",
    "start": "1282140",
    "end": "1283880"
  },
  {
    "text": "that that's the request we'd like to run",
    "start": "1283880",
    "end": "1287240"
  },
  {
    "text": "the most interesting thing about the",
    "start": "1287240",
    "end": "1289340"
  },
  {
    "text": "Play account is obviously the post",
    "start": "1289340",
    "end": "1290600"
  },
  {
    "text": "condition so when we get the count back",
    "start": "1290600",
    "end": "1292940"
  },
  {
    "text": "from the server we want to compare it to",
    "start": "1292940",
    "end": "1294919"
  },
  {
    "text": "the size of our player map and make sure",
    "start": "1294919",
    "end": "1296600"
  },
  {
    "text": "that they agree and we also have a",
    "start": "1296600",
    "end": "1298940"
  },
  {
    "text": "sanity check in here to make sure that",
    "start": "1298940",
    "end": "1300380"
  },
  {
    "text": "our the number of players we have is",
    "start": "1300380",
    "end": "1301760"
  },
  {
    "text": "greater than or equal to the number of",
    "start": "1301760",
    "end": "1303200"
  },
  {
    "text": "admins so just making sure that our",
    "start": "1303200",
    "end": "1305240"
  },
  {
    "text": "state updates are working",
    "start": "1305240",
    "end": "1309039"
  },
  {
    "start": "1307000",
    "end": "1418000"
  },
  {
    "text": "and the register command so this is",
    "start": "1309380",
    "end": "1311360"
  },
  {
    "text": "where things get more interesting again",
    "start": "1311360",
    "end": "1313120"
  },
  {
    "text": "so as we saw before the register",
    "start": "1313120",
    "end": "1316880"
  },
  {
    "text": "um",
    "start": "1316880",
    "end": "1317659"
  },
  {
    "text": "sorry register input takes the",
    "start": "1317659",
    "end": "1319760"
  },
  {
    "text": "registration information and the player",
    "start": "1319760",
    "end": "1322039"
  },
  {
    "text": "information for an administrator so we",
    "start": "1322039",
    "end": "1323659"
  },
  {
    "text": "can use that token to run this against",
    "start": "1323659",
    "end": "1326000"
  },
  {
    "text": "the application",
    "start": "1326000",
    "end": "1328100"
  },
  {
    "text": "so our generator as you expect if we",
    "start": "1328100",
    "end": "1331280"
  },
  {
    "text": "don't have any admin users we can't",
    "start": "1331280",
    "end": "1332840"
  },
  {
    "text": "generate this input we need that",
    "start": "1332840",
    "end": "1334520"
  },
  {
    "text": "administrator token",
    "start": "1334520",
    "end": "1337100"
  },
  {
    "text": "if we do have an administrator we can",
    "start": "1337100",
    "end": "1339559"
  },
  {
    "text": "randomly select one from our set of",
    "start": "1339559",
    "end": "1341299"
  },
  {
    "text": "Administrators using gen.element from",
    "start": "1341299",
    "end": "1343460"
  },
  {
    "text": "Hedgehog and then use that to look up",
    "start": "1343460",
    "end": "1345440"
  },
  {
    "text": "our player in our player map",
    "start": "1345440",
    "end": "1348799"
  },
  {
    "text": "and from there we can wrap everything up",
    "start": "1348799",
    "end": "1351080"
  },
  {
    "text": "into our register input",
    "start": "1351080",
    "end": "1354559"
  },
  {
    "text": "to execute it's very similar to the",
    "start": "1354559",
    "end": "1356900"
  },
  {
    "text": "executes we've seen before the main",
    "start": "1356900",
    "end": "1358640"
  },
  {
    "text": "difference being that we're pulling our",
    "start": "1358640",
    "end": "1360080"
  },
  {
    "text": "client token out of our administrator",
    "start": "1360080",
    "end": "1361520"
  },
  {
    "text": "player now because that will form part",
    "start": "1361520",
    "end": "1363500"
  },
  {
    "text": "of the request",
    "start": "1363500",
    "end": "1366640"
  },
  {
    "text": "and then we've got some callbacks so our",
    "start": "1367159",
    "end": "1369679"
  },
  {
    "text": "precondition here is that if we are",
    "start": "1369679",
    "end": "1372260"
  },
  {
    "text": "shrinking we need to make sure that our",
    "start": "1372260",
    "end": "1374120"
  },
  {
    "text": "administrator is still an administrator",
    "start": "1374120",
    "end": "1376280"
  },
  {
    "text": "so the email for that player is still in",
    "start": "1376280",
    "end": "1378320"
  },
  {
    "text": "the administrator's list",
    "start": "1378320",
    "end": "1380659"
  },
  {
    "text": "and then we have our state update",
    "start": "1380659",
    "end": "1383720"
  },
  {
    "text": "so this is similar to the register first",
    "start": "1383720",
    "end": "1386720"
  },
  {
    "text": "except in this case we're inserting into",
    "start": "1386720",
    "end": "1388280"
  },
  {
    "text": "the map rather than producing the",
    "start": "1388280",
    "end": "1389480"
  },
  {
    "text": "Singleton",
    "start": "1389480",
    "end": "1391900"
  },
  {
    "text": "and we also now need to check whether",
    "start": "1392000",
    "end": "1394039"
  },
  {
    "text": "our new player that we've registered is",
    "start": "1394039",
    "end": "1395659"
  },
  {
    "text": "an admin if they are we add them into",
    "start": "1395659",
    "end": "1396980"
  },
  {
    "text": "the admins if not we don't",
    "start": "1396980",
    "end": "1401120"
  },
  {
    "text": "alrighty so wrapping this up into our",
    "start": "1401120",
    "end": "1403580"
  },
  {
    "text": "second property",
    "start": "1403580",
    "end": "1404840"
  },
  {
    "text": "our initial States now change because we",
    "start": "1404840",
    "end": "1407120"
  },
  {
    "text": "have an empty player map and an empty",
    "start": "1407120",
    "end": "1408740"
  },
  {
    "text": "set of admins",
    "start": "1408740",
    "end": "1410659"
  },
  {
    "text": "and we have a couple of new commands",
    "start": "1410659",
    "end": "1412880"
  },
  {
    "text": "otherwise everything's the same we run",
    "start": "1412880",
    "end": "1415159"
  },
  {
    "text": "out Hedgehog again",
    "start": "1415159",
    "end": "1416720"
  },
  {
    "text": "and we get success",
    "start": "1416720",
    "end": "1419480"
  },
  {
    "start": "1418000",
    "end": "1550000"
  },
  {
    "text": "all right so our third example here",
    "start": "1419480",
    "end": "1421940"
  },
  {
    "text": "is a round trip property so now we're",
    "start": "1421940",
    "end": "1423860"
  },
  {
    "text": "checking that the data we get back from",
    "start": "1423860",
    "end": "1425299"
  },
  {
    "text": "the server matches what we've entered",
    "start": "1425299",
    "end": "1428659"
  },
  {
    "text": "um we're adding another command here",
    "start": "1428659",
    "end": "1429980"
  },
  {
    "text": "which is the me command",
    "start": "1429980",
    "end": "1432679"
  },
  {
    "text": "its generator is uses this gen player",
    "start": "1432679",
    "end": "1435860"
  },
  {
    "text": "with RSP which optionally produces a",
    "start": "1435860",
    "end": "1438260"
  },
  {
    "text": "player depending on whether our Play",
    "start": "1438260",
    "end": "1439940"
  },
  {
    "text": "account is greater than zero",
    "start": "1439940",
    "end": "1442340"
  },
  {
    "text": "um and then we use that to produce our",
    "start": "1442340",
    "end": "1443720"
  },
  {
    "text": "wrap it up with our me",
    "start": "1443720",
    "end": "1446059"
  },
  {
    "text": "to execute as we expected before",
    "start": "1446059",
    "end": "1449539"
  },
  {
    "text": "um as we saw before rather",
    "start": "1449539",
    "end": "1452559"
  },
  {
    "text": "callbacks so our precondition here is",
    "start": "1452559",
    "end": "1455240"
  },
  {
    "text": "that our player is still a player so we",
    "start": "1455240",
    "end": "1458600"
  },
  {
    "text": "can't get information for a player that",
    "start": "1458600",
    "end": "1459980"
  },
  {
    "text": "doesn't exist",
    "start": "1459980",
    "end": "1461720"
  },
  {
    "text": "and then we don't have any State updates",
    "start": "1461720",
    "end": "1463580"
  },
  {
    "text": "because we're just retrieving data from",
    "start": "1463580",
    "end": "1465020"
  },
  {
    "text": "the system here but we have our post",
    "start": "1465020",
    "end": "1467240"
  },
  {
    "text": "conditions so one thing to note is the",
    "start": "1467240",
    "end": "1470740"
  },
  {
    "text": "application State Stores the admin flag",
    "start": "1470740",
    "end": "1473900"
  },
  {
    "text": "as a Boolean but when we're registering",
    "start": "1473900",
    "end": "1476539"
  },
  {
    "text": "a player it's an optional field and so",
    "start": "1476539",
    "end": "1478580"
  },
  {
    "text": "we have this defaulting logic where we",
    "start": "1478580",
    "end": "1480799"
  },
  {
    "text": "default the admin flag to true",
    "start": "1480799",
    "end": "1484220"
  },
  {
    "text": "and then we checked the rest of our",
    "start": "1484220",
    "end": "1485600"
  },
  {
    "text": "properties um sorry the rest of our",
    "start": "1485600",
    "end": "1487280"
  },
  {
    "text": "values and our player match up",
    "start": "1487280",
    "end": "1490280"
  },
  {
    "text": "but we've made a mistake our Hedgehog's",
    "start": "1490280",
    "end": "1492740"
  },
  {
    "text": "gonna fall over again",
    "start": "1492740",
    "end": "1494960"
  },
  {
    "text": "he's a poor guy",
    "start": "1494960",
    "end": "1496880"
  },
  {
    "text": "um so again we get some really helpful",
    "start": "1496880",
    "end": "1498559"
  },
  {
    "text": "output from a hedgehog we see here that",
    "start": "1498559",
    "end": "1501320"
  },
  {
    "text": "our admin flag we expected to be true",
    "start": "1501320",
    "end": "1504799"
  },
  {
    "text": "and actually it was false",
    "start": "1504799",
    "end": "1507919"
  },
  {
    "text": "and again we also get our list of inputs",
    "start": "1507919",
    "end": "1510200"
  },
  {
    "text": "that show us a minimal example after",
    "start": "1510200",
    "end": "1512059"
  },
  {
    "text": "shrinking of how to reproduce this",
    "start": "1512059",
    "end": "1513440"
  },
  {
    "text": "failure so we register our first user we",
    "start": "1513440",
    "end": "1515900"
  },
  {
    "text": "register a second user and then we ask",
    "start": "1515900",
    "end": "1518240"
  },
  {
    "text": "for that user's information the second",
    "start": "1518240",
    "end": "1519679"
  },
  {
    "text": "uses information",
    "start": "1519679",
    "end": "1521559"
  },
  {
    "text": "and then we get our value and we'll see",
    "start": "1521559",
    "end": "1523880"
  },
  {
    "text": "here that our is admin flag was nothing",
    "start": "1523880",
    "end": "1525980"
  },
  {
    "text": "so it's our defaulting logic has come",
    "start": "1525980",
    "end": "1528140"
  },
  {
    "text": "into play",
    "start": "1528140",
    "end": "1529880"
  },
  {
    "text": "so if you remember back to our callbacks",
    "start": "1529880",
    "end": "1533299"
  },
  {
    "text": "here our post conditions we have this",
    "start": "1533299",
    "end": "1535340"
  },
  {
    "text": "defaulting logic to default our admin",
    "start": "1535340",
    "end": "1537440"
  },
  {
    "text": "flag to True when it was nothing but",
    "start": "1537440",
    "end": "1539720"
  },
  {
    "text": "actually it should be false right um",
    "start": "1539720",
    "end": "1541340"
  },
  {
    "text": "which kind of makes sense you don't want",
    "start": "1541340",
    "end": "1542539"
  },
  {
    "text": "to just assume Everyone's an admin",
    "start": "1542539",
    "end": "1545120"
  },
  {
    "text": "so if we run this again",
    "start": "1545120",
    "end": "1546740"
  },
  {
    "text": "a Hedgehog's happy",
    "start": "1546740",
    "end": "1548360"
  },
  {
    "text": "we get a success",
    "start": "1548360",
    "end": "1551320"
  },
  {
    "start": "1550000",
    "end": "1590000"
  },
  {
    "text": "and that's it",
    "start": "1551480",
    "end": "1552799"
  },
  {
    "text": "um so I've got some references to the",
    "start": "1552799",
    "end": "1555320"
  },
  {
    "text": "talk our slides will be up soon the",
    "start": "1555320",
    "end": "1558320"
  },
  {
    "text": "application's already up on GitHub so if",
    "start": "1558320",
    "end": "1560179"
  },
  {
    "text": "anything didn't make sense so if you",
    "start": "1560179",
    "end": "1562039"
  },
  {
    "text": "missed anything feel free to check out",
    "start": "1562039",
    "end": "1563900"
  },
  {
    "text": "the code feel free to come find me on",
    "start": "1563900",
    "end": "1566299"
  },
  {
    "text": "IRC or Twitter or anything I'm not too",
    "start": "1566299",
    "end": "1568760"
  },
  {
    "text": "hard to find",
    "start": "1568760",
    "end": "1570980"
  },
  {
    "text": "um there's Hedgehog on GitHub I highly",
    "start": "1570980",
    "end": "1573559"
  },
  {
    "text": "recommend checking out the code there",
    "start": "1573559",
    "end": "1575419"
  },
  {
    "text": "and Tim Humphries had a really good blog",
    "start": "1575419",
    "end": "1578360"
  },
  {
    "text": "post introducing this stuff",
    "start": "1578360",
    "end": "1580760"
  },
  {
    "text": "and some image credits cool thank you",
    "start": "1580760",
    "end": "1583790"
  },
  {
    "text": "[Applause]",
    "start": "1583790",
    "end": "1592349"
  }
]