[
  {
    "start": "0",
    "end": "83000"
  },
  {
    "text": "[Music]",
    "start": "970",
    "end": "7838"
  },
  {
    "text": "what i see in the industry at the moment is that there is a lot of let's say hype around event driven architectures",
    "start": "13519",
    "end": "19600"
  },
  {
    "text": "uh around reactive architectures especially in the microservice community and very often you see",
    "start": "19600",
    "end": "26240"
  },
  {
    "text": "metaphors like that slides like that as a metaphor for these event-driven architectures",
    "start": "26240",
    "end": "31599"
  },
  {
    "text": "like a ballet like a dance a beautiful dance and it works like because every of these",
    "start": "31599",
    "end": "38399"
  },
  {
    "text": "dancers know the rules how the overall dance should look like um you probably can simply just add",
    "start": "38399",
    "end": "43760"
  },
  {
    "text": "another dancer and it will be a beautiful thing to look at like with the microservices where you can add",
    "start": "43760",
    "end": "49120"
  },
  {
    "text": "another microservice and it will be part of the game and it will be beautiful and it's actually not",
    "start": "49120",
    "end": "54480"
  },
  {
    "text": "what i'm seeing in real life it's not what i see with the customers i'm talking about i'm discussing about",
    "start": "54480",
    "end": "61840"
  },
  {
    "text": "this kind of architecture so there's a big gap of what we try to achieve and what we",
    "start": "61840",
    "end": "67680"
  },
  {
    "text": "sometimes get the impression that it's easy to achieve these days and what's reality and that",
    "start": "67680",
    "end": "73280"
  },
  {
    "text": "motivated me to get this talk where i would really want to dive into what's the advantages of choreography of eventual",
    "start": "73280",
    "end": "79520"
  },
  {
    "text": "systems what's the let's say the risks or the pitfalls you should probably avoid and if i want to talk about",
    "start": "79520",
    "end": "85759"
  },
  {
    "start": "83000",
    "end": "227000"
  },
  {
    "text": "orchestration and choreography i thought i'd start with a very boring thing of defining the terms um which is actually not as boring as it",
    "start": "85759",
    "end": "92320"
  },
  {
    "text": "sounds because if you search for that and that's what i did if you search for that you will probably stumble upon that article on",
    "start": "92320",
    "end": "98720"
  },
  {
    "text": "stack overflow it's relatively relatively famous at least it's pretty good ranked at google at",
    "start": "98720",
    "end": "104880"
  },
  {
    "text": "least in my google bubble um and somebody asked like what's the difference between service orchestration",
    "start": "104880",
    "end": "110799"
  },
  {
    "text": "and choreography like from an intra organization point of view so you're looking at microservices within your company okay",
    "start": "110799",
    "end": "118640"
  },
  {
    "text": "so that's a pretty good question right and if you look through the answer and just to give you that hint",
    "start": "118640",
    "end": "124479"
  },
  {
    "text": "immediately i don't think it's a good answer i don't think it's the right answer but it expresses very well the answer",
    "start": "124479",
    "end": "132239"
  },
  {
    "text": "a lot of people think or that's more or less the conception most people have around",
    "start": "132239",
    "end": "137280"
  },
  {
    "text": "service orchestration and choreography so i want to go through it very quickly and somebody right service",
    "start": "137280",
    "end": "143760"
  },
  {
    "text": "orchestration is a single centralized executable business process and that's the",
    "start": "143760",
    "end": "149200"
  },
  {
    "text": "orchestrator responsible for invoking other services right this this and i literally hear the term",
    "start": "149200",
    "end": "157040"
  },
  {
    "text": "like the central spider and the web relatively often for orchestration there's this one central single endpoint that that does",
    "start": "157040",
    "end": "164879"
  },
  {
    "text": "all the things and orchestrates all the other services okay um just again as a heads up i'm",
    "start": "164879",
    "end": "171360"
  },
  {
    "text": "coming back to that as an heads-up very important i don't agree with that definition totally not i think it's a",
    "start": "171360",
    "end": "178000"
  },
  {
    "text": "we we need to define it very differently but i come back to that in a second let's look at choreography for a second",
    "start": "178000",
    "end": "184720"
  },
  {
    "text": "and in the same article the same person basically says okay service choreography is a global description of the",
    "start": "184720",
    "end": "190720"
  },
  {
    "text": "participating services that's kind of a fuzzy description right",
    "start": "190720",
    "end": "195840"
  },
  {
    "text": "but that's what i said earlier with the dance rules of interaction and agreement so we have certain",
    "start": "195840",
    "end": "202879"
  },
  {
    "text": "behavior everybody agrees on and that's why it works and that means the choreography differs from orchestration",
    "start": "202879",
    "end": "209840"
  },
  {
    "text": "with respect to where the logic that controls the interaction besides so we don't have and that's kind",
    "start": "209840",
    "end": "215920"
  },
  {
    "text": "of in between the lines we don't have anything central they're just talking to each other okay and that's kind of",
    "start": "215920",
    "end": "221760"
  },
  {
    "text": "what i see a lot people think about service orchestration and choreography and let's",
    "start": "221760",
    "end": "228720"
  },
  {
    "start": "227000",
    "end": "265000"
  },
  {
    "text": "make an example and let's try to apply this definition to that example so i'm always doing all",
    "start": "228720",
    "end": "235840"
  },
  {
    "text": "the fulfillment examples because i i found that most people can relate to that so let's assume you're a",
    "start": "235840",
    "end": "241360"
  },
  {
    "text": "mail order company and amazon salando and whatever and then you might come up with a couple",
    "start": "241360",
    "end": "247200"
  },
  {
    "text": "of microservices like a checkout microservice to um where people can place orders a payment microservice to collect money",
    "start": "247200",
    "end": "253360"
  },
  {
    "text": "and inventory microservice to yeah manage inventory and shipment microservice to create the",
    "start": "253360",
    "end": "259040"
  },
  {
    "text": "parcels and send it out of the door right now in order to implement",
    "start": "259040",
    "end": "265199"
  },
  {
    "start": "265000",
    "end": "346000"
  },
  {
    "text": "certain such an order fulfillment process i mean one approach you could take and",
    "start": "265199",
    "end": "273120"
  },
  {
    "text": "again i'm not saying that's a good approach necessarily i'll come back to that in a second but one approach you could take",
    "start": "273120",
    "end": "278720"
  },
  {
    "text": "is you could use rest synchronous rest calls right so you could say the checkout",
    "start": "278720",
    "end": "284320"
  },
  {
    "text": "microservice calls the rest api on the payment service say hey somebody ordered so payment does retrieve payment and then directly calls",
    "start": "284320",
    "end": "291280"
  },
  {
    "text": "the next service in the row um synchronous rest with a like book everything out of",
    "start": "291280",
    "end": "296400"
  },
  {
    "text": "inventory um ship it and so on so forth and these synchronous call chains there",
    "start": "296400",
    "end": "302479"
  },
  {
    "text": "are pretty evil right there there are a lot of problems with these synchronous call chains which",
    "start": "302479",
    "end": "308160"
  },
  {
    "text": "you can also see in a lot of microservice scenarios um because they're like they're blocking",
    "start": "308160",
    "end": "314160"
  },
  {
    "text": "um so if one of the services is not available the whole thing is not available they add a lot of latency because you have to",
    "start": "314160",
    "end": "320639"
  },
  {
    "text": "wait for all the services to do their work they're probably not good at utilizing",
    "start": "320639",
    "end": "326560"
  },
  {
    "text": "all the resources because most of the threats are basically waiting and so on so forth so",
    "start": "326560",
    "end": "332880"
  },
  {
    "text": "you shouldn't do these synchronous call chains for these scenarios that's kind of not a new information right but we need",
    "start": "332880",
    "end": "339440"
  },
  {
    "text": "that piece the puzzle piece later on okay so you probably don't want to do a synchronous",
    "start": "339440",
    "end": "345680"
  },
  {
    "text": "call chain you probably want to do asynchronous communication because that mitigates a lot of these problems",
    "start": "345680",
    "end": "352320"
  },
  {
    "start": "346000",
    "end": "382000"
  },
  {
    "text": "where if you send a message to payment doing something and then payment relates",
    "start": "352320",
    "end": "357919"
  },
  {
    "text": "a message to the next one like inventory and so on so forth you're not dependent on the availability if payment is not",
    "start": "357919",
    "end": "364319"
  },
  {
    "text": "not there and the message will wait in the queue until payment become available right and so on so",
    "start": "364319",
    "end": "370560"
  },
  {
    "text": "forth and you're not blocking any threat um so this is",
    "start": "370560",
    "end": "375600"
  },
  {
    "text": "by far a better approach than the asynchronous i'm communication here",
    "start": "375600",
    "end": "380800"
  },
  {
    "text": "now interesting question let's test our definition of orchestration and choreography",
    "start": "380800",
    "end": "388160"
  },
  {
    "start": "382000",
    "end": "469000"
  },
  {
    "text": "what is that like on the left hand side the synchronous call chain is that current orchestration same question for the",
    "start": "388160",
    "end": "394160"
  },
  {
    "text": "asynchronous communication on the right hand side and the thing is if you look at the",
    "start": "394160",
    "end": "399280"
  },
  {
    "text": "definition you you found on stack overflow earlier on it's actually very hard to decide because some parts",
    "start": "399280",
    "end": "406800"
  },
  {
    "text": "of it like okay the like different micro services communicate",
    "start": "406800",
    "end": "412400"
  },
  {
    "text": "directly which is other i mean that's part of this chain and this chain as well",
    "start": "412400",
    "end": "418720"
  },
  {
    "text": "so um somehow it seems to be choreography right and there's nothing central on the other",
    "start": "418720",
    "end": "424080"
  },
  {
    "text": "hand if you remove the central",
    "start": "424080",
    "end": "429680"
  },
  {
    "text": "that single endpoint that's centralized if you remove that from the definition which you definitely should it's nothing",
    "start": "429680",
    "end": "435919"
  },
  {
    "text": "central i i come back to that later on what it basically said is that you have one service",
    "start": "435919",
    "end": "441280"
  },
  {
    "text": "coordinating the other and if you look up the word orchestration it's also you can replace that with coordination in a",
    "start": "441280",
    "end": "446720"
  },
  {
    "text": "way so if one service coordinates the other which is very true for that example",
    "start": "446720",
    "end": "452080"
  },
  {
    "text": "again because payment coordinates eventually right checkout coordinates payment so it seems to be orchestration as well",
    "start": "452080",
    "end": "458560"
  },
  {
    "text": "and that's actually interesting because now we can you can have basically both for this example which",
    "start": "458560",
    "end": "465360"
  },
  {
    "text": "gives you a good hint that the definition doesn't work in order to get closer to the essence of",
    "start": "465360",
    "end": "471280"
  },
  {
    "start": "469000",
    "end": "571000"
  },
  {
    "text": "it you have to add event driven communication to the mix so far we did",
    "start": "471280",
    "end": "476479"
  },
  {
    "text": "asynchronous communication but that's basically i would say kind of a technical thing we",
    "start": "476479",
    "end": "483120"
  },
  {
    "text": "do here like instead of using a blocking rest call we use a message so we are not bound to the availability of the service but",
    "start": "483120",
    "end": "491120"
  },
  {
    "text": "event driven um adds a couple of other things so with event chip and communication it works like",
    "start": "491120",
    "end": "497840"
  },
  {
    "text": "this different microservices emit certain events like checkout says hey",
    "start": "497840",
    "end": "503680"
  },
  {
    "text": "somebody placed an order that's an event hello world something has happened right it's an information that something",
    "start": "503680",
    "end": "509840"
  },
  {
    "text": "has happened it's not uh assuming that anything will will will",
    "start": "509840",
    "end": "515279"
  },
  {
    "text": "happen because of that event it's just like hey this happened our payment was received or groups were fetched right",
    "start": "515279",
    "end": "520959"
  },
  {
    "text": "so um all of these microservices could debate events probably to a central event bus",
    "start": "520959",
    "end": "526160"
  },
  {
    "text": "right and then other services could subscribe to that and say hey i'm i'm a notification",
    "start": "526160",
    "end": "531519"
  },
  {
    "text": "service my responsibility my duty is to send notifications to the customer emails like hey we got your order hey we",
    "start": "531519",
    "end": "538320"
  },
  {
    "text": "got your payment your parcel is on the way and that's actually in this case it's a",
    "start": "538320",
    "end": "545440"
  },
  {
    "text": "great architecture because now you have basically put all the logic",
    "start": "545440",
    "end": "550720"
  },
  {
    "text": "around notification in one place which is the notification service right so you didn't spread it among all",
    "start": "550720",
    "end": "557440"
  },
  {
    "text": "the other microservices you don't have to think about when to send emails within the payment microservice",
    "start": "557440",
    "end": "563279"
  },
  {
    "text": "so that's a good thing that's event trevor not communication that's an important part",
    "start": "563279",
    "end": "570080"
  },
  {
    "text": "of choreography come back to that now what i see happening very often is that",
    "start": "570080",
    "end": "576560"
  },
  {
    "start": "571000",
    "end": "970000"
  },
  {
    "text": "okay event notification okay that's that's a that's a good tool let's use it for everything like with every good tool",
    "start": "576560",
    "end": "582640"
  },
  {
    "text": "like um so what i see happening is what i call event chains um so in order to implement even the the",
    "start": "582640",
    "end": "589200"
  },
  {
    "text": "business process of order fulfillment like from somebody ordered till everything is shipped um you get to",
    "start": "589200",
    "end": "595839"
  },
  {
    "text": "implement that using events or event notifications so you could say like somebody ordered something okay",
    "start": "595839",
    "end": "602320"
  },
  {
    "text": "that's interesting now payment subscribes to it and says okay i'm interested in that i",
    "start": "602320",
    "end": "607920"
  },
  {
    "text": "collect the money and emit another event so eventually you could listen to that and say ah okay if you receive the payment i now",
    "start": "607920",
    "end": "614560"
  },
  {
    "text": "basically fetch the goods uh emit another event and then shipment could subscribe to that",
    "start": "614560",
    "end": "620000"
  },
  {
    "text": "and so on so forth right so this implements the business process by a chain of event notifications um",
    "start": "620000",
    "end": "628320"
  },
  {
    "text": "now what you can see happening is that this is done a lot actually i've seen",
    "start": "628320",
    "end": "633519"
  },
  {
    "text": "that with a lot of customers uh over the yeah recent month or the last two or three years",
    "start": "633519",
    "end": "639360"
  },
  {
    "text": "um you even see people talking about that publicly so this is phil calzado talking about what they did",
    "start": "639360",
    "end": "646240"
  },
  {
    "text": "at meetup last year at the cuco new york and he said okay we had a lot of event driven mechanisms",
    "start": "646240",
    "end": "653519"
  },
  {
    "text": "and we were suffering from pinball machine architecture and i think that's a good metaphor",
    "start": "653519",
    "end": "658800"
  },
  {
    "text": "for this kind of event-driven systems because i mean i made my own slide on that so it's basically that you throw in",
    "start": "658800",
    "end": "666160"
  },
  {
    "text": "something some trigger some event and then it bounces through the system",
    "start": "666160",
    "end": "671200"
  },
  {
    "text": "and it's it's emergent behavior it's not always easy um to know in advance what",
    "start": "671200",
    "end": "678079"
  },
  {
    "text": "will happen you recognize that by systems where people have some kind of incident and then like",
    "start": "678079",
    "end": "684079"
  },
  {
    "text": "us like this cannot happen in our system how how we we never implemented that",
    "start": "684079",
    "end": "690079"
  },
  {
    "text": "right so that's immersion behavior it's hard to understand sometimes right i have to do that one",
    "start": "690079",
    "end": "697040"
  },
  {
    "text": "time more i love the animation okay sorry",
    "start": "697040",
    "end": "702160"
  },
  {
    "text": "so um these event chains they they are a big risk um my i mean",
    "start": "702160",
    "end": "709680"
  },
  {
    "text": "the obvious thing is you don't see what's happening so you cannot look into one of the micro services look at the",
    "start": "709680",
    "end": "714800"
  },
  {
    "text": "implementation and see what's happening overall no you have to look at all the services uh have to understand",
    "start": "714800",
    "end": "722800"
  },
  {
    "text": "their event subscriptions in order to basically to",
    "start": "722800",
    "end": "728560"
  },
  {
    "text": "redesign the flow or or understand the flow you could also look at the runtime behavior of the system like inspecting",
    "start": "728560",
    "end": "735040"
  },
  {
    "text": "all the events flowing around and probably correlate that back to to uh what's happening here but both is",
    "start": "735040",
    "end": "741680"
  },
  {
    "text": "pretty tricky to be honest and my hypothesis why",
    "start": "741680",
    "end": "749279"
  },
  {
    "text": "so many products currently end up there is the following it's easy to get started so if you start with",
    "start": "749279",
    "end": "756880"
  },
  {
    "text": "an event driven architecture and you probably add your event bus and you add your first microservice",
    "start": "756880",
    "end": "762160"
  },
  {
    "text": "which probably emits let's say two events right that's easy of course you just",
    "start": "762160",
    "end": "767519"
  },
  {
    "text": "started adding the next service is very easy because now you can probably consume",
    "start": "767519",
    "end": "774560"
  },
  {
    "text": "like event b do something and emit event c and you don't even have to talk to the people doing microservice a",
    "start": "774560",
    "end": "781760"
  },
  {
    "text": "and that's kind of that feels very decoupled right it's a good feeling i could just develop that service i i don't even have",
    "start": "781760",
    "end": "788160"
  },
  {
    "text": "to talk to them they don't have to do any change they don't have to redeploy anything i'm",
    "start": "788160",
    "end": "793760"
  },
  {
    "text": "really really flexible and as long as i keep adding things like the next microservice probably",
    "start": "793760",
    "end": "798800"
  },
  {
    "text": "consuming a couple of these events and so on so forth so as soon or as long as you're",
    "start": "798800",
    "end": "804560"
  },
  {
    "text": "only adding things that's very easy and the problem typically starts as soon",
    "start": "804560",
    "end": "811440"
  },
  {
    "text": "as you want to change things which normally starts with understanding what's happened that's",
    "start": "811440",
    "end": "817600"
  },
  {
    "text": "i just tackled but also probably changing things like probably you have to remove event b or",
    "start": "817600",
    "end": "824399"
  },
  {
    "text": "probably you have to understand the chain in order to change the sequence of things and so on and so forth and that gets really really",
    "start": "824399",
    "end": "830880"
  },
  {
    "text": "hard i have an example in a minute so i'm currently seeing that as",
    "start": "830880",
    "end": "837199"
  },
  {
    "text": "kind of a kind of technical depth so i saw a couple of examples where",
    "start": "837199",
    "end": "844720"
  },
  {
    "text": "for example a startup they they went into that understanding this saying okay but we",
    "start": "844720",
    "end": "851120"
  },
  {
    "text": "need to buy us a shorter time to value so we need to be fast in the beginning to really bring something to market",
    "start": "851120",
    "end": "858639"
  },
  {
    "text": "and we know that this might cause some trouble in the long run but if you don't do it we will die before we get to a good system so that's",
    "start": "858639",
    "end": "865760"
  },
  {
    "text": "fine if you do that consciously i'm totally happy with that",
    "start": "865760",
    "end": "870800"
  },
  {
    "text": "with having these pure choreographies and for that reason but you should be aware",
    "start": "870800",
    "end": "876000"
  },
  {
    "text": "of that risk that's very important and most products i see are are not it's it's kind of technical",
    "start": "876000",
    "end": "882800"
  },
  {
    "text": "depth because here if you do the example of just",
    "start": "882800",
    "end": "887920"
  },
  {
    "text": "exchanging sequences like hey fetch the items first and then do the payment",
    "start": "887920",
    "end": "894480"
  },
  {
    "text": "and they're it's probably not the best business example of the world here but i see that happening in a lot of other",
    "start": "894480",
    "end": "900800"
  },
  {
    "text": "examples where you really have to adjust sequences or do things in parallel or",
    "start": "900800",
    "end": "906240"
  },
  {
    "text": "really have has to adjust the business process behind if you want to do this",
    "start": "906240",
    "end": "913199"
  },
  {
    "text": "you basically have to change all the micro services here so inventory no longer listens to payment receive",
    "start": "913199",
    "end": "918480"
  },
  {
    "text": "bought order placed payment no longer listens to order placed but gets fetched gets shipped shipment no longer lists who gets",
    "start": "918480",
    "end": "924240"
  },
  {
    "text": "fetched but i'm payment received so you have to change all the three services here and you not only have to",
    "start": "924240",
    "end": "930000"
  },
  {
    "text": "adjust them you have to redeploy them in a coordinated fashion so more or less",
    "start": "930000",
    "end": "935440"
  },
  {
    "text": "all at the same time more or less or at least you have to think about versioning because if an order is flowing around",
    "start": "935440",
    "end": "942560"
  },
  {
    "text": "here you have to know if it's paid or not and you cannot get around all the versioning",
    "start": "942560",
    "end": "949440"
  },
  {
    "text": "problems but now you have a distributed versioning problems affecting different micro services with",
    "start": "949440",
    "end": "955759"
  },
  {
    "text": "different teams that's exactly not what you want to have when you go with microservices you want to",
    "start": "955759",
    "end": "961279"
  },
  {
    "text": "want to be able to make local changes right and that's the big big problem of these event",
    "start": "961279",
    "end": "967519"
  },
  {
    "text": "chains and pure choreographies for me now to when i come back to that i see use cases",
    "start": "967519",
    "end": "974000"
  },
  {
    "start": "970000",
    "end": "1196000"
  },
  {
    "text": "for both by the way for event driven choreography and orchestration but in",
    "start": "974000",
    "end": "979839"
  },
  {
    "text": "order to to understand better what what is used in which situation um an important thought and it's very",
    "start": "979839",
    "end": "987120"
  },
  {
    "text": "obvious i find that very obvious is to think about responsibility or accountability so if you assume a",
    "start": "987120",
    "end": "994480"
  },
  {
    "text": "company like salan or amazon and they do order fulfillment",
    "start": "994480",
    "end": "1000160"
  },
  {
    "text": "they i mean that's kind of the core business so they're pretty interested in that",
    "start": "1000160",
    "end": "1006079"
  },
  {
    "text": "running smoothly so a ceo or ci or whatever",
    "start": "1006079",
    "end": "1011360"
  },
  {
    "text": "they might want to ask somebody hey are we doing good why aren't we",
    "start": "1011360",
    "end": "1016880"
  },
  {
    "text": "doing good why is the delivery time so high whatever so they want to have one person",
    "start": "1016880",
    "end": "1024240"
  },
  {
    "text": "being responsible for that and one person being approachable for that in a micro service world that normally",
    "start": "1024240",
    "end": "1030160"
  },
  {
    "text": "translates to you want to have one microservice one team caring about that",
    "start": "1030160",
    "end": "1036000"
  },
  {
    "text": "whole functionality of order fulfill because otherwise you don't have that one person you have",
    "start": "1036000",
    "end": "1041038"
  },
  {
    "text": "a ping pong of events going on and nobody being accountable for the whole",
    "start": "1041039",
    "end": "1046319"
  },
  {
    "text": "um order fulfillment which is a big problem like responsibility-wise you can't",
    "start": "1046319",
    "end": "1051760"
  },
  {
    "text": "blame anybody i mean playing with kind of the negative word but you can see it in a positive way right nobody's accountable for that so i",
    "start": "1051760",
    "end": "1058640"
  },
  {
    "text": "find it very natural to have something like order fulfillment here as a microservice and then an important thought is like",
    "start": "1058640",
    "end": "1066480"
  },
  {
    "text": "you can have events in that architecture so probably order places and event it's on the bus",
    "start": "1066480",
    "end": "1071520"
  },
  {
    "text": "order fulfillment subscribes to it that's fine but now order fulfillment is responsible",
    "start": "1071520",
    "end": "1077840"
  },
  {
    "text": "and held accountable for fulfilling orders and if they send out orders that are not",
    "start": "1077840",
    "end": "1083360"
  },
  {
    "text": "paid they get the blame they get a problem right so they are really interested that",
    "start": "1083360",
    "end": "1089280"
  },
  {
    "text": "the payment happens at the right time so they they can't let that emerge out of some",
    "start": "1089280",
    "end": "1095679"
  },
  {
    "text": "kind of events that you send around um they now want to control that they want to coordinate",
    "start": "1095679",
    "end": "1101120"
  },
  {
    "text": "that and say okay the first thing we do is retweet the pin and then we retrieve inventory and then",
    "start": "1101120",
    "end": "1107520"
  },
  {
    "text": "we probably ship the stuff and for me that's now the essence",
    "start": "1107520",
    "end": "1112880"
  },
  {
    "text": "of the definition end of the difference of choreography and orchestration so the one thing is",
    "start": "1112880",
    "end": "1118640"
  },
  {
    "text": "i'm i have event driven communication and that's choreography i let it emerge right i react to some",
    "start": "1118640",
    "end": "1125360"
  },
  {
    "text": "event but the other one is orchestration for me is command driven communication so i want something i have an intent hey",
    "start": "1125360",
    "end": "1132400"
  },
  {
    "text": "payment now collect money for me right and that's for me the essence of",
    "start": "1132400",
    "end": "1138880"
  },
  {
    "text": "choreography and orchestration that's my definition i have yeah i have it here so orchestration for me is command driven communication",
    "start": "1138880",
    "end": "1144720"
  },
  {
    "text": "choreography is eventual communication which is i mean you don't find any definition in a textbook",
    "start": "1144720",
    "end": "1151280"
  },
  {
    "text": "and that's the one i now use that's unfortunately not that one most people are thinking of",
    "start": "1151280",
    "end": "1156720"
  },
  {
    "text": "most people are thinking of the definition i had in the beginning on stack overflow which i tried to change with that talk a little bit",
    "start": "1156720",
    "end": "1164000"
  },
  {
    "text": "the important thing is it's not about technology totally not so you can put an event in a message",
    "start": "1164000",
    "end": "1171520"
  },
  {
    "text": "you can put a command in a message you can have rest calls for events like rest feeds um or for",
    "start": "1171520",
    "end": "1178240"
  },
  {
    "text": "command it's not connected in any way a lot of people whenever i say command driven communication they",
    "start": "1178240",
    "end": "1184320"
  },
  {
    "text": "they think of oh synchronous rest again and that's exactly not the case it's just like the content is a command",
    "start": "1184320",
    "end": "1190880"
  },
  {
    "text": "i want i have an intent right but it still can be a message",
    "start": "1190880",
    "end": "1196240"
  },
  {
    "start": "1196000",
    "end": "1335000"
  },
  {
    "text": "and now another misconception is like oh orchestration you want to do that bpm stuff centralized no",
    "start": "1196559",
    "end": "1202559"
  },
  {
    "text": "i'm saying orchestration command based communication but because i'm in distributed systems",
    "start": "1202559",
    "end": "1209679"
  },
  {
    "text": "i'm not sure if payment is available the moment i call it or it's messaging so i need to wait very often for things and that makes",
    "start": "1209679",
    "end": "1216640"
  },
  {
    "text": "this orchestration within order fulfillment stateful and that's where",
    "start": "1216640",
    "end": "1223120"
  },
  {
    "text": "something like bpmo workflow or orchestration engines come just a very quick notice i mean i'm",
    "start": "1223120",
    "end": "1230720"
  },
  {
    "text": "opinionated like every other human being i try to make it transparent in a way",
    "start": "1230720",
    "end": "1235840"
  },
  {
    "text": "um i co-founded or i'm co-founder chief technologist of kamunda we're an open source process automation vendor",
    "start": "1235840",
    "end": "1241679"
  },
  {
    "text": "so i'm obviously a bit biased towards seeing process automation as a solution for a lot of problems",
    "start": "1241679",
    "end": "1248080"
  },
  {
    "text": "but i'm totally convinced that this is true i'm doing i contributed to various op source",
    "start": "1248080",
    "end": "1255039"
  },
  {
    "text": "workflow engines over the last 15 years so i i've seen a lot um what you can do with this kind of",
    "start": "1255039",
    "end": "1260240"
  },
  {
    "text": "technology if you want to reach out to me if you have any question of the talk feel free to to do so there's my twitter handle as",
    "start": "1260240",
    "end": "1265760"
  },
  {
    "text": "well if you want to tweet me i'm currently writing a book with o'reilly practical process automation it's an",
    "start": "1265760",
    "end": "1270799"
  },
  {
    "text": "early access if you're interested in some of the content i do here and i always search for technical videos",
    "start": "1270799",
    "end": "1276000"
  },
  {
    "text": "so if you're interested in that shoot me an email okay but that's so that's my opinionation i'm thinking about problems",
    "start": "1276000",
    "end": "1283440"
  },
  {
    "text": "through the lens of yeah workflow engines process automation and if you do that a workflow engine is",
    "start": "1283440",
    "end": "1289600"
  },
  {
    "text": "actually a great tool to express an orchestration here because not because orchestration needs",
    "start": "1289600",
    "end": "1297760"
  },
  {
    "text": "a workflow engine but because it gets what i call long running because you need to wait for things for",
    "start": "1297760",
    "end": "1302960"
  },
  {
    "text": "example you send out the command to retweet the payment maybe that's a message but then you wait",
    "start": "1302960",
    "end": "1308880"
  },
  {
    "text": "for the response which could be a response message which could be an event and maybe that's happening milliseconds",
    "start": "1308880",
    "end": "1315600"
  },
  {
    "text": "later but probably also minutes or probably even hours or days if payment is a wire transfer",
    "start": "1315600",
    "end": "1320880"
  },
  {
    "text": "we want to wait for right so and that's what makes a workflow engine an interesting fit in an orchestration",
    "start": "1320880",
    "end": "1327280"
  },
  {
    "text": "scenario because now we can implement the long-running behavior of waiting right and so on and so forth",
    "start": "1327280",
    "end": "1334400"
  },
  {
    "start": "1335000",
    "end": "1387000"
  },
  {
    "text": "and then i'm not going into details of the tooling but the important thing here is again if i say workflow engine a lot",
    "start": "1335200",
    "end": "1340880"
  },
  {
    "text": "of people think of very heavyweight big vendor unhandy kind of",
    "start": "1340880",
    "end": "1345919"
  },
  {
    "text": "tools and that's not true anymore there are a lot of lightweight ones um we do very cool stuff but",
    "start": "1345919",
    "end": "1351280"
  },
  {
    "text": "um there are a couple of others as well very lightweight and you can imagine it in in a way where you say okay i have",
    "start": "1351280",
    "end": "1357039"
  },
  {
    "text": "that process model which just expresses the the orchestration logic the long-running logic and then you can attach code so",
    "start": "1357039",
    "end": "1364159"
  },
  {
    "text": "for example in order to send the command to fetch goods there's no magic behind that i just",
    "start": "1364159",
    "end": "1370960"
  },
  {
    "text": "basically glue code there which says okay whenever the process whenever you're there execute",
    "start": "1370960",
    "end": "1377360"
  },
  {
    "text": "that code and that sends a message using whatever you do in this case it's spring",
    "start": "1377360",
    "end": "1383200"
  },
  {
    "text": "so that's the whole idea so it's nothing very very unhandy and then the workflow engine can do that waiting",
    "start": "1383200",
    "end": "1390000"
  },
  {
    "start": "1387000",
    "end": "1460000"
  },
  {
    "text": "um scheduling escalating if you're waiting for too long and so on so forth",
    "start": "1390000",
    "end": "1395039"
  },
  {
    "text": "okay that's again why it's very often a combination when you do orchestration",
    "start": "1395039",
    "end": "1401280"
  },
  {
    "text": "we're trying to make sense because it's long running but now you have that place where you",
    "start": "1401280",
    "end": "1406720"
  },
  {
    "text": "can understand the flow where i can change the flow in this case i made payment and fetching of goods",
    "start": "1406720",
    "end": "1412880"
  },
  {
    "text": "in parallel but i could change the sequence so now you have that place where you can do a lot of things cool",
    "start": "1412880",
    "end": "1420320"
  },
  {
    "text": "last important thought here is for me that's domain logic that",
    "start": "1420320",
    "end": "1425360"
  },
  {
    "text": "orchestration logic is the main logic it's sx it is expressed within the",
    "start": "1425360",
    "end": "1430720"
  },
  {
    "text": "microservice boundary it's nothing central i keep reiterating",
    "start": "1430720",
    "end": "1436240"
  },
  {
    "text": "over that it's nothing central it's really the main logic within the boundary of the microservice",
    "start": "1436240",
    "end": "1441520"
  },
  {
    "text": "and probably other microservices have their own processes inside because i probably wait",
    "start": "1441520",
    "end": "1446559"
  },
  {
    "text": "for the customer or whatever right from the outside of the microservice i don't see that it's an api",
    "start": "1446559",
    "end": "1452000"
  },
  {
    "text": "retrieve payment i have no idea how they do it i don't care from the outside i don't know that there is some workflow",
    "start": "1452000",
    "end": "1457600"
  },
  {
    "text": "engine demo orchestration at play okay cool um let's dedicate the last five minutes of the talk",
    "start": "1457600",
    "end": "1463440"
  },
  {
    "start": "1460000",
    "end": "1864000"
  },
  {
    "text": "to um the important question now so if i'm saying we have command driven",
    "start": "1463440",
    "end": "1468559"
  },
  {
    "text": "communication and event term communication the important question is like when do i use what",
    "start": "1468559",
    "end": "1474640"
  },
  {
    "text": "and that's actually not super easy there's not a super easy rule of thumb and",
    "start": "1474640",
    "end": "1481120"
  },
  {
    "text": "what i um just to clear up one other conception i'm seeing regularly once",
    "start": "1481120",
    "end": "1487200"
  },
  {
    "text": "upon a time a couple of years back if you had events and events are facts",
    "start": "1487200",
    "end": "1492720"
  },
  {
    "text": "immutable happened in the past it's done i'm just telling the world or commands it's an intent i want something to",
    "start": "1492720",
    "end": "1499440"
  },
  {
    "text": "happen okay when i would have sent that over the wire five years back we just put it in a",
    "start": "1499440",
    "end": "1505679"
  },
  {
    "text": "message with messaging that was fine if you put it on kafka and you can do that",
    "start": "1505679",
    "end": "1511200"
  },
  {
    "text": "it's a record that's fine because it's it's kept persistent that's why they call it record",
    "start": "1511200",
    "end": "1517760"
  },
  {
    "text": "but what i see happening is that whenever somebody talks about a petri kafka most people",
    "start": "1517760",
    "end": "1523520"
  },
  {
    "text": "say that's an event bus so what i put on kafka is an event and now we have a clash of terms and i",
    "start": "1523520",
    "end": "1530080"
  },
  {
    "text": "see so many discussions where people really discussing the wrong thing for ages because",
    "start": "1530080",
    "end": "1536640"
  },
  {
    "text": "the one person says event and and means any record on kafka and the other person",
    "start": "1536640",
    "end": "1542320"
  },
  {
    "text": "says events it means the content the payload of the thing and that's really important to these things right",
    "start": "1542320",
    "end": "1548480"
  },
  {
    "text": "you can put a command on kafka on it okay i'm yeah leave it like that because",
    "start": "1548480",
    "end": "1555120"
  },
  {
    "text": "otherwise you you end up with what i call commands in disguise hey the customer needs to be sent a message to confirm his address change",
    "start": "1555120",
    "end": "1561760"
  },
  {
    "text": "event hint please do that it's a command i want something to happen that's not an",
    "start": "1561760",
    "end": "1567039"
  },
  {
    "text": "event right and i see these kind of events very very often and they complicate things and you get",
    "start": "1567039",
    "end": "1572720"
  },
  {
    "text": "into long discussions which are really unnecessary right okay",
    "start": "1572720",
    "end": "1578640"
  },
  {
    "text": "um have to look on the time so for me in order to make that distinction is it",
    "start": "1578640",
    "end": "1584880"
  },
  {
    "text": "command driven a city venture one way to look at it is really like the",
    "start": "1584880",
    "end": "1591039"
  },
  {
    "text": "direction of the dependency that's the typical discussion around coupling hey is an event driven super decoupled",
    "start": "1591039",
    "end": "1597600"
  },
  {
    "text": "is an orchestration super coupled no both is coupling i mean if i emit an event and somebody",
    "start": "1597600",
    "end": "1605120"
  },
  {
    "text": "else listens to it the sender of the event doesn't know anything about the recipient",
    "start": "1605120",
    "end": "1610720"
  },
  {
    "text": "but the recipient knows which event it listens to so the coupling is on the receiving side",
    "start": "1610720",
    "end": "1616720"
  },
  {
    "text": "of things if you do command trim communication it's the exact opposite payment doesn't know anything what's",
    "start": "1616720",
    "end": "1623520"
  },
  {
    "text": "who's declined calling it right but the client knows which command api it uses so the",
    "start": "1623520",
    "end": "1629679"
  },
  {
    "text": "coupling is on the on the calling side so it's it's just on the other side and there's not a general rule which is better",
    "start": "1629679",
    "end": "1636320"
  },
  {
    "text": "it really depends on the situation at hand which is better okay one example i came across which i",
    "start": "1636320",
    "end": "1643360"
  },
  {
    "text": "like very much was the um the team there they they've built kind of a document management system and",
    "start": "1643360",
    "end": "1649520"
  },
  {
    "text": "they they did domain-driven design they had these contacts like hey we have to document the page and",
    "start": "1649520",
    "end": "1654720"
  },
  {
    "text": "whatever and then they've built an authorization service and what they ended up with in the",
    "start": "1654720",
    "end": "1660159"
  },
  {
    "text": "beginning was that they had a lot of events flowing around like hey there was a new page hey there was a new document and",
    "start": "1660159",
    "end": "1666640"
  },
  {
    "text": "they had to react to all of these events in the authorization service to to create the right authorization",
    "start": "1666640",
    "end": "1672320"
  },
  {
    "text": "entries and they ended up with what's known as a distributed monolith every time they had",
    "start": "1672320",
    "end": "1678159"
  },
  {
    "text": "a change here they also had a change in the authorization service which is not architecturally why it's",
    "start": "1678159",
    "end": "1683679"
  },
  {
    "text": "not a good place to be in so they they switch that towards having a command driven api saying hey",
    "start": "1683679",
    "end": "1690159"
  },
  {
    "text": "okay the context does everything internally and then they let the organization service know what",
    "start": "1690159",
    "end": "1696399"
  },
  {
    "text": "to add and now they they had a very stable authorization service and they had local changes so that's a beneficial",
    "start": "1696399",
    "end": "1702960"
  },
  {
    "text": "situation here another way to look at that is also the",
    "start": "1702960",
    "end": "1710159"
  },
  {
    "text": "again responsibility i find that very important and a good thought so just give you one example um let's",
    "start": "1710159",
    "end": "1716559"
  },
  {
    "text": "assume you have within our order fulfillment um you want to send notifications like hey",
    "start": "1716559",
    "end": "1721919"
  },
  {
    "text": "we received your order right that could be an event like we had in the beginning that's",
    "start": "1721919",
    "end": "1726960"
  },
  {
    "text": "might be beneficial because then i can implement all the order notification uh",
    "start": "1726960",
    "end": "1733200"
  },
  {
    "text": "logic in one place but if you do like financial products for example you might",
    "start": "1733200",
    "end": "1738399"
  },
  {
    "text": "have legal obligations to send certain documents at the right moment in time and you make",
    "start": "1738399",
    "end": "1743760"
  },
  {
    "text": "have to make sure they are sent and you probably even have to document that otherwise people can sue",
    "start": "1743760",
    "end": "1748799"
  },
  {
    "text": "you right and in this case it's it's not really working with i am",
    "start": "1748799",
    "end": "1755200"
  },
  {
    "text": "emitting an event i have no idea what happens with that event you want the notification to be sent at",
    "start": "1755200",
    "end": "1760320"
  },
  {
    "text": "exactly precisely the right moment and that's a command driven api because now you can you have control over it",
    "start": "1760320",
    "end": "1767279"
  },
  {
    "text": "you don't want to be responsible for something you can't control that's for me an important thought",
    "start": "1767279",
    "end": "1773680"
  },
  {
    "text": "[Applause] i also like looking at that example by the way so",
    "start": "1773680",
    "end": "1779039"
  },
  {
    "text": "you probably know the book from sam you men about microservices and he makes a case for choreography it says",
    "start": "1779039",
    "end": "1784880"
  },
  {
    "text": "okay if there's customer created and probably the loyalty points bank",
    "start": "1784880",
    "end": "1790159"
  },
  {
    "text": "service should subscribe to that because then you don't have to call it actively and so on and so forth",
    "start": "1790159",
    "end": "1795360"
  },
  {
    "text": "and i do agree so event driven coupling might be nicer in that case because the customer",
    "start": "1795360",
    "end": "1801440"
  },
  {
    "text": "creation is not responsible for loyalty at all it's the loyalty bank thing",
    "start": "1801440",
    "end": "1806720"
  },
  {
    "text": "but if you look at the end-to-end customer onboarding flow loyalty banks is at the very end but i",
    "start": "1806720",
    "end": "1814240"
  },
  {
    "text": "would see faces in that process like for example checking the address or doing a credit check or",
    "start": "1814240",
    "end": "1820240"
  },
  {
    "text": "scoring that's the responsibility of onboarding and if you onboard a customer that can't",
    "start": "1820240",
    "end": "1827120"
  },
  {
    "text": "pay his bill later on like the person responsible for this process will be approached right and",
    "start": "1827120",
    "end": "1833440"
  },
  {
    "text": "they can't say oh but we send an event they they are accountable for that so",
    "start": "1833440",
    "end": "1838720"
  },
  {
    "text": "that's typically a mix of having some things that are orchestrated and some things that are current",
    "start": "1838720",
    "end": "1845679"
  },
  {
    "text": "and it's always a mix and the the hard part is that and i always have that sign next to my monitor here it depends",
    "start": "1845679",
    "end": "1852080"
  },
  {
    "text": "the hard part is really um you have to look at every communication link it's not an either or you can't build a",
    "start": "1852080",
    "end": "1858320"
  },
  {
    "text": "we build a choreographed system no we build an orchestrated system you will have both communication styles if you do",
    "start": "1858320",
    "end": "1864240"
  },
  {
    "start": "1864000",
    "end": "1904000"
  },
  {
    "text": "a good architecture because you really need to to balance both i i made that picture once like",
    "start": "1864240",
    "end": "1869279"
  },
  {
    "text": "orchestration and choreography and all the microservices they're intentionally round and stacked",
    "start": "1869279",
    "end": "1876720"
  },
  {
    "text": "and i mean if you if you don't balance that out you will either end up in the chaos bucket and that's what i'm",
    "start": "1876720",
    "end": "1881919"
  },
  {
    "text": "currently seeing people are doing too much choreography and then they end up in the chaos bucket and they do",
    "start": "1881919",
    "end": "1888559"
  },
  {
    "text": "that because like five or ten years back the industry did too much orchestration",
    "start": "1888559",
    "end": "1893600"
  },
  {
    "text": "to centralized orchestration and ended up in kind of the monolithic bucket where they don't want to be",
    "start": "1893600",
    "end": "1898799"
  },
  {
    "text": "so you need to balance that and that's what i'm trying to get at in that talk so quick",
    "start": "1898799",
    "end": "1904159"
  },
  {
    "start": "1904000",
    "end": "1947000"
  },
  {
    "text": "summary orchestration is not central choreography is not decoupled for me",
    "start": "1904159",
    "end": "1909840"
  },
  {
    "text": "orchestration is command-driven choreography is eventually both as coupled it's about the direction",
    "start": "1909840",
    "end": "1914960"
  },
  {
    "text": "of dependency it's about responsibility and you need to decide that on a case-by-case basis and that probably",
    "start": "1914960",
    "end": "1921600"
  },
  {
    "text": "means thinking about that a bit more um thank you very much and",
    "start": "1921600",
    "end": "1928640"
  },
  {
    "text": "yeah i think that gives us a bit of time to go in the q a",
    "start": "1928640",
    "end": "1935840"
  },
  {
    "text": "you",
    "start": "1946000",
    "end": "1948080"
  }
]