[
  {
    "text": "good afternoon or good evening wherever you are uh my pleasure i'm dave thomas and it's my pleasure to",
    "start": "4160",
    "end": "12320"
  },
  {
    "text": "be here with eric meyer who's just given a wonderful keynote and actors in the cloud as well as some great inspiration about",
    "start": "12320",
    "end": "19039"
  },
  {
    "text": "careers for uh new grasshoppers so good to see you here",
    "start": "19039",
    "end": "24080"
  },
  {
    "text": "yeah dave that's a long time ago that we did a gig together like this that's good",
    "start": "24080",
    "end": "30640"
  },
  {
    "text": "yeah so uh i think the exciting news for those who might recognize his clothes but this is",
    "start": "30640",
    "end": "38000"
  },
  {
    "text": "actually the outfit for eric in his next life he's now done his own startup called applied",
    "start": "38000",
    "end": "44879"
  },
  {
    "text": "duality and this is really exciting and you want to say a bit about the sorts of things",
    "start": "44879",
    "end": "50320"
  },
  {
    "text": "you're doing in applied duality yeah yeah definitely so yeah so um as dave says i",
    "start": "50320",
    "end": "56480"
  },
  {
    "text": "can yeah i'm trying the startup thing um and applied duality as the name says i'm",
    "start": "56480",
    "end": "63600"
  },
  {
    "text": "trying to apply um all the techniques that i developed in my kind of career so far which all",
    "start": "63600",
    "end": "71119"
  },
  {
    "text": "have to do with duality and to solve developers problems and in particular",
    "start": "71119",
    "end": "77040"
  },
  {
    "text": "what i'm focusing on is real time streaming big data so that's kind of",
    "start": "77040",
    "end": "83600"
  },
  {
    "text": "the reactive framework and trying to make that into an enterprise great product so maybe you could just update",
    "start": "83600",
    "end": "91360"
  },
  {
    "text": "us a lot i don't think a lot of people realize that the reactive framework has moved",
    "start": "91360",
    "end": "96400"
  },
  {
    "text": "out of microsoft thanks to the microsoft the open source efforts and the contributions from people like",
    "start": "96400",
    "end": "102560"
  },
  {
    "text": "netflix and so on what's kind of the state of the reactive framework in terms of the open source",
    "start": "102560",
    "end": "107759"
  },
  {
    "text": "world yeah so so we open sourced rx",
    "start": "107759",
    "end": "113200"
  },
  {
    "text": "in december last year so december 2012 so last year's relative",
    "start": "113200",
    "end": "119280"
  },
  {
    "text": "um and um about that same time um you know the netflix folks",
    "start": "119280",
    "end": "125680"
  },
  {
    "text": "started to implement their version for java and that project is incredible if you",
    "start": "125680",
    "end": "132400"
  },
  {
    "text": "look at the amount of pull requests and contributions that go into the",
    "start": "132400",
    "end": "137760"
  },
  {
    "text": "the netflix version and the dotnet version what people often don't realize is that",
    "start": "137760",
    "end": "143520"
  },
  {
    "text": "code has been under development since 2007 so it's incredibly mature code",
    "start": "143520",
    "end": "149760"
  },
  {
    "text": "it it has shipped on the windows phone if you have a windows phone it's in there and so and the code is also um",
    "start": "149760",
    "end": "157840"
  },
  {
    "text": "been rewritten to be super optimized so that code base that you see",
    "start": "157840",
    "end": "164560"
  },
  {
    "text": "for the net version um is kind of stable i don't expect you know that we're going to do a lot of kind of",
    "start": "164560",
    "end": "171200"
  },
  {
    "text": "additional development in there but the reason that um we made it open source is",
    "start": "171200",
    "end": "176800"
  },
  {
    "text": "to make sure that other implementations like in the java one for netflix or the javascript one remain compatible",
    "start": "176800",
    "end": "185040"
  },
  {
    "text": "because the whole value that you get from rx is that if you have a client and server that both have you",
    "start": "185040",
    "end": "191760"
  },
  {
    "text": "know deal with asynchronous event streams that the the operations are semantically",
    "start": "191760",
    "end": "197440"
  },
  {
    "text": "compatible and so you know if you if your server is written in java your client is in javascript",
    "start": "197440",
    "end": "202879"
  },
  {
    "text": "you want to have event streams you know you want to be able to partition the processing of your event streams you",
    "start": "202879",
    "end": "208400"
  },
  {
    "text": "know across the boundaries and so that's the kind of main goal is to make sure that",
    "start": "208400",
    "end": "213680"
  },
  {
    "text": "all the implementations in different languages are following the same protocol the same",
    "start": "213680",
    "end": "220319"
  },
  {
    "text": "semantics and so so that's on the semantic side",
    "start": "220319",
    "end": "227840"
  },
  {
    "text": "what we also want and i learned quite a lot about that when we did the javascript version",
    "start": "227840",
    "end": "233040"
  },
  {
    "text": "is that you want the api itself to feel native to the language so for",
    "start": "233040",
    "end": "239280"
  },
  {
    "text": "example in javascript there's already map and filter on array so instead of coming",
    "start": "239280",
    "end": "245200"
  },
  {
    "text": "up with new names like select and select many and where you want to reuse the same names and in",
    "start": "245200",
    "end": "251920"
  },
  {
    "text": "java since java doesn't have extension methods there you know the the way the api is",
    "start": "251920",
    "end": "257359"
  },
  {
    "text": "structured is quite different because now you cannot do it interface-based so you have to to to make",
    "start": "257359",
    "end": "263120"
  },
  {
    "text": "different design choices that feel good for java but the underlying you know semantics is",
    "start": "263120",
    "end": "268880"
  },
  {
    "text": "maintained now does this apply to the wire format as well that's a very good question so i'm i'm",
    "start": "268880",
    "end": "275919"
  },
  {
    "text": "hoping to avoid kind of going too low level to the wire format",
    "start": "275919",
    "end": "281520"
  },
  {
    "text": "and the reason is that i look at rx really as an interface um and then you know",
    "start": "281520",
    "end": "287759"
  },
  {
    "text": "there's an underlying implementation and if you if you push the wire format uh in",
    "start": "287759",
    "end": "292960"
  },
  {
    "text": "in if you standardize the wire format some sense you're kind of you're not defining an interface you're defining a",
    "start": "292960",
    "end": "299600"
  },
  {
    "text": "concrete implementation and let me give you an example i've been working on a",
    "start": "299600",
    "end": "305680"
  },
  {
    "text": "binding for locally which is a a login format they have their own api",
    "start": "305680",
    "end": "310880"
  },
  {
    "text": "they have their own format of how to kind of send your events as json objects with a certain shape",
    "start": "310880",
    "end": "318000"
  },
  {
    "text": "and if you push the wire format too too far down then it becomes hard to",
    "start": "318000",
    "end": "324000"
  },
  {
    "text": "kind of glue these things together so and and maybe i'm i'm naive but i do think that you know it's better to",
    "start": "324000",
    "end": "331199"
  },
  {
    "text": "kind of you know not go to that level and where and and then say you know",
    "start": "331199",
    "end": "336320"
  },
  {
    "text": "you you impose the rx interface you know it's more on the behavior level",
    "start": "336320",
    "end": "342000"
  },
  {
    "text": "and whatever transport or whatever wire format you want and you pick yeah i can't imagine",
    "start": "342000",
    "end": "347840"
  },
  {
    "text": "someone you know reading massive amounts of syslog records with rx wants to have them all",
    "start": "347840",
    "end": "354800"
  },
  {
    "text": "transformed to some other format yeah because yeah the cost of doing that yes",
    "start": "354800",
    "end": "360479"
  },
  {
    "text": "yes the benefit is yeah and you see this often with with other protocols where you know they have to define a",
    "start": "360479",
    "end": "367199"
  },
  {
    "text": "common type system and so on and where really you know in some sense you're just sending",
    "start": "367199",
    "end": "372639"
  },
  {
    "text": "bytes over the wire and then on the other end you interpret that and yeah i mean even",
    "start": "372639",
    "end": "379520"
  },
  {
    "text": "you know if you say you have java on the server side and javascript on the client side i for me",
    "start": "379520",
    "end": "385440"
  },
  {
    "text": "it doesn't make sense to try to define a common type system between java and javascript and",
    "start": "385440",
    "end": "390880"
  },
  {
    "text": "and i think you know for those situations where performance is not super critical json is kind of yeah i",
    "start": "390880",
    "end": "398319"
  },
  {
    "text": "think has one so it's a default um",
    "start": "398319",
    "end": "402960"
  },
  {
    "text": "just switching to some other things in your talk there were some as usual only slightly",
    "start": "403840",
    "end": "409599"
  },
  {
    "text": "controversial remarks talked about the you know the issues and",
    "start": "409599",
    "end": "414720"
  },
  {
    "text": "i think which many people have talked about from nosql of basically the fact that he you know sql sort of you know",
    "start": "414720",
    "end": "423440"
  },
  {
    "text": "in a positive way firewell's a developer from the database engine but in a negative",
    "start": "423440",
    "end": "428639"
  },
  {
    "text": "way prevents you from doing a lot of things as a programmer and gives you a",
    "start": "428639",
    "end": "434160"
  },
  {
    "text": "kind of strange kind of api it's part api but it's also part programming",
    "start": "434160",
    "end": "440639"
  },
  {
    "text": "language so it's just a different animal um",
    "start": "440639",
    "end": "445680"
  },
  {
    "text": "i think one of the things you talked about is the fact that would be nice if the features that are in you know there are a lot of great",
    "start": "445840",
    "end": "451280"
  },
  {
    "text": "algorithms implementations inside the database so if you know sql server or db2 basically said here's",
    "start": "451280",
    "end": "458400"
  },
  {
    "text": "our great b trees and our storage management that does this our logging system",
    "start": "458400",
    "end": "464319"
  },
  {
    "text": "you know our transaction mechanism and let me program with those",
    "start": "464319",
    "end": "469680"
  },
  {
    "text": "essentially treat them as libraries or actors then you'd have a much more sort of",
    "start": "469680",
    "end": "474800"
  },
  {
    "text": "composable system where users could work with data in the way they saw it so yeah is that",
    "start": "474800",
    "end": "479840"
  },
  {
    "text": "correct in terms of where they are exactly correct so if you look at the database i mean these are kind of",
    "start": "479840",
    "end": "485039"
  },
  {
    "text": "incredibly fascinating machines right and there's like a lot of like decades of tuning and",
    "start": "485039",
    "end": "491759"
  },
  {
    "text": "optimizations in there but as you say the weird thing is that the way it's exposed to the programmer",
    "start": "491759",
    "end": "497919"
  },
  {
    "text": "is via this weird sql language api",
    "start": "497919",
    "end": "503360"
  },
  {
    "text": "concretely like in when you do link and link to sql or entity framework you",
    "start": "503360",
    "end": "509680"
  },
  {
    "text": "start with c-sharp with expression trees which is like a high-level representation of your query you know an algebraic tree now in order",
    "start": "509680",
    "end": "517760"
  },
  {
    "text": "to get it into the database you first have to translate this tree which is like you know very similar to",
    "start": "517760",
    "end": "524480"
  },
  {
    "text": "the three that that will be in the database at some point you have to translate that into sql",
    "start": "524480",
    "end": "529839"
  },
  {
    "text": "into strings send it over the wire there it will be parsed the optimizer will turn it into some",
    "start": "529839",
    "end": "536000"
  },
  {
    "text": "algebraic tree and then it will execute it so there's it's like incredible distance between what you really want to",
    "start": "536000",
    "end": "543040"
  },
  {
    "text": "do and you know what what the database exposes and the same",
    "start": "543040",
    "end": "548720"
  },
  {
    "text": "holds for you know the storage engine the log manager etc so i wish that you know if",
    "start": "548720",
    "end": "555200"
  },
  {
    "text": "you would have a database that would be broken up in components where you can pick and choose and that would be a fantastic sql light",
    "start": "555200",
    "end": "562399"
  },
  {
    "text": "has a little bit of that where it exposes like a small a little vm that's very interesting like",
    "start": "562399",
    "end": "567760"
  },
  {
    "text": "a bytecode to the end and but i think that that's kind of you know one of the things that",
    "start": "567760",
    "end": "573760"
  },
  {
    "text": "i find very fascinating is can we break you know this database into the components that",
    "start": "573760",
    "end": "579600"
  },
  {
    "text": "where you you use what you need and one interesting thing is windows has a",
    "start": "579600",
    "end": "586560"
  },
  {
    "text": "kind of log base like an areas log system in there system.io.log",
    "start": "586560",
    "end": "593279"
  },
  {
    "text": "so these things do exist and if you look at google's leveldb it's kind of similar to that so i do believe that the nosql",
    "start": "593279",
    "end": "599920"
  },
  {
    "text": "movement is pushing more towards you know giving the database in terms of",
    "start": "599920",
    "end": "605600"
  },
  {
    "text": "reusable components that you can pick and choose so uh rich hickey of course gave great talk",
    "start": "605600",
    "end": "611120"
  },
  {
    "text": "yesterday to tonic i think you did it before you arrived but you of course know rich did the talk here in the",
    "start": "611120",
    "end": "617839"
  },
  {
    "text": "summer and go tonight and you know the atomic has a",
    "start": "617839",
    "end": "622880"
  },
  {
    "text": "has kind of an approach like this have you you know looked at it in terms of i mean it you know the bee trees are",
    "start": "622880",
    "end": "629519"
  },
  {
    "text": "real implementation trees you can program in you know the program they're real programs and they use a they use",
    "start": "629519",
    "end": "636720"
  },
  {
    "text": "you know happen to use data log as kind of the language but you can really work with entities and uh deal",
    "start": "636720",
    "end": "643120"
  },
  {
    "text": "with them and it supports immutability as well so yes i think something along the direction that's that's definitely along",
    "start": "643120",
    "end": "649440"
  },
  {
    "text": "the direction i think i think what rich is doing is extremely fascinating um one thing that i would like to pick",
    "start": "649440",
    "end": "656959"
  },
  {
    "text": "out there is that he chose datalog which is another interesting choice because that has been used in the",
    "start": "656959",
    "end": "664000"
  },
  {
    "text": "database world as far as i can see you typically as a more theoretical thing so and but there i",
    "start": "664000",
    "end": "671200"
  },
  {
    "text": "don't like there's very few databases that expose data log as their current language",
    "start": "671200",
    "end": "676640"
  },
  {
    "text": "all the good data log guys got hired to build sql engines i think that's the story i heard but maybe",
    "start": "676640",
    "end": "681839"
  },
  {
    "text": "that's just the data people think that yeah so i think it's very fascinating that he's using log if you look at",
    "start": "681839",
    "end": "688240"
  },
  {
    "text": "joe hellerstein in berkeley is also kind of you know leveraging data log um and i think um one of the things what",
    "start": "688240",
    "end": "695600"
  },
  {
    "text": "datalog gives you is that it allows you to define recursive queries in a more natural way",
    "start": "695600",
    "end": "701519"
  },
  {
    "text": "and and i think that's something that's very important if you look at a lot of the data structures that we",
    "start": "701519",
    "end": "707839"
  },
  {
    "text": "have like social data and so on are naturally recursive so i think the express",
    "start": "707839",
    "end": "712880"
  },
  {
    "text": "expressive power of data log is very important and and that's something that if you look at",
    "start": "712880",
    "end": "718320"
  },
  {
    "text": "link or is also lacking because it's more based on on sequel so i i think you know i think what rich",
    "start": "718320",
    "end": "725680"
  },
  {
    "text": "is doing is very interesting in many respects but and maybe you know and from from a developer",
    "start": "725680",
    "end": "733600"
  },
  {
    "text": "point of view it's also the fact that data log suddenly becomes real instead of you know something that you",
    "start": "733600",
    "end": "739760"
  },
  {
    "text": "read about in some database paper well i think it's really part of your in a closure program it's really part of",
    "start": "739760",
    "end": "746560"
  },
  {
    "text": "you know it's really marrying the the computation on the data it executes in in your process as",
    "start": "746560",
    "end": "753040"
  },
  {
    "text": "opposed to in the database you know often the database process but certainly the transactor decomposition and things like",
    "start": "753040",
    "end": "759440"
  },
  {
    "text": "that is very much i think that's the sort of thing that you're yeah you're talking about yeah yeah and and so also to kind of again",
    "start": "759440",
    "end": "767360"
  },
  {
    "text": "die back to to sql light um if you look at the sqlite bytecodes it's",
    "start": "767360",
    "end": "773920"
  },
  {
    "text": "also um very fascinating they have like a little instructions for doing transactions",
    "start": "773920",
    "end": "779680"
  },
  {
    "text": "you know building indexes doing joins and and i always wondered why",
    "start": "779680",
    "end": "786160"
  },
  {
    "text": "you know the relational database is not exposed as a vm because underneath you know they they",
    "start": "786160",
    "end": "791440"
  },
  {
    "text": "are executed there's a machine there that executes programs which are sql programs and and",
    "start": "791440",
    "end": "797440"
  },
  {
    "text": "that always yeah people they're doing the same thing if you look at the database",
    "start": "797440",
    "end": "803600"
  },
  {
    "text": "they're doing the same thing but they just use different words so um you know instead of you know",
    "start": "803600",
    "end": "809519"
  },
  {
    "text": "abstract syntax trees they call it query plants and i wish that if they would open it up",
    "start": "809519",
    "end": "815440"
  },
  {
    "text": "then we could have more innovation from the language and the vmworld you know moving into the database",
    "start": "815440",
    "end": "821120"
  },
  {
    "text": "and vice versa because these guys know a lot about you know optimizations and so on excuse me so",
    "start": "821120",
    "end": "827279"
  },
  {
    "text": "one of the classic things since i'm old i can look like a dpa",
    "start": "827279",
    "end": "833519"
  },
  {
    "text": "one of the classic challenges if you have a large you know corporation and you want to share data",
    "start": "833760",
    "end": "839760"
  },
  {
    "text": "across that is that if you let everyone you know build their own indexes and",
    "start": "839760",
    "end": "846000"
  },
  {
    "text": "their own b trees and so on you know how would how in this new world will uh will they share this data",
    "start": "846000",
    "end": "852880"
  },
  {
    "text": "because many people who work with data do not have the you know they're not",
    "start": "852880",
    "end": "858399"
  },
  {
    "text": "computer scientists they don't you know expect to work with maybe b trees or",
    "start": "858399",
    "end": "863680"
  },
  {
    "text": "you know things like that so you know what whether they're going to get some special affordances or they say look your dummies you know",
    "start": "863680",
    "end": "870800"
  },
  {
    "text": "you just have to know how to program this way or you know i'll make up the schema yourself because we're just storing all",
    "start": "870800",
    "end": "876880"
  },
  {
    "text": "the data i mean how do you how do you deal with the fact that a real data semantics you can get false joins very easily if you just give",
    "start": "876880",
    "end": "883600"
  },
  {
    "text": "people a whole lot of data and there's if you say well look they all have customer numbers so",
    "start": "883600",
    "end": "888959"
  },
  {
    "text": "i'll just join these i mean it's data models crap we don't need any of that stuff anymore",
    "start": "888959",
    "end": "894160"
  },
  {
    "text": "yeah that's that's interesting so i do believe that the the illusion of control that you",
    "start": "894160",
    "end": "900880"
  },
  {
    "text": "have when you have a dba that controls the schemas and the data and the indexes and so on",
    "start": "900880",
    "end": "906240"
  },
  {
    "text": "is is an illusion because what happens is that probably most people bypass the dba and put their stuff in a",
    "start": "906240",
    "end": "914000"
  },
  {
    "text": "spreadsheet and they sent across spreadsheets so my feeling is that a lot of people are",
    "start": "914000",
    "end": "919680"
  },
  {
    "text": "using excel as a database and if your data is not too big that works wonderfully",
    "start": "919680",
    "end": "925360"
  },
  {
    "text": "but there's no schema in excel and we've now seen a couple of kind of examples where you know",
    "start": "925360",
    "end": "931440"
  },
  {
    "text": "the the extreme dynamic nature of excel leads to problems but but i do think",
    "start": "931440",
    "end": "937839"
  },
  {
    "text": "that you know and even if you have a dba then um a lot of companies have you know",
    "start": "937839",
    "end": "943759"
  },
  {
    "text": "many many different ways to define the same kind of entity because you know different departments",
    "start": "943759",
    "end": "949519"
  },
  {
    "text": "or you know if you have mergers of companies and so i'm not sure that having",
    "start": "949519",
    "end": "955680"
  },
  {
    "text": "like the data models and so on defined by a single group will solve any problems and if you give it make it",
    "start": "955680",
    "end": "963120"
  },
  {
    "text": "more accessible to developers i'm not saying that the end user should do that but if developers can easier",
    "start": "963120",
    "end": "968399"
  },
  {
    "text": "make that easier then i think the integration becomes easier so it's less brittle but but",
    "start": "968399",
    "end": "975199"
  },
  {
    "text": "i don't i i i don't know it's like i think it's it's yeah i i don't think that this thing",
    "start": "975199",
    "end": "981759"
  },
  {
    "text": "solves the real problem it just hides it a little bit more and then people will work away around it anyway and and my favorite",
    "start": "981759",
    "end": "988560"
  },
  {
    "text": "example is imagine that you know on your normal file system you know you would have to have a schema",
    "start": "988560",
    "end": "993759"
  },
  {
    "text": "before you can save a file that that doesn't work and it slows things down",
    "start": "993759",
    "end": "999199"
  },
  {
    "text": "quite a lot and often you know you don't need the whole schema right you only need to",
    "start": "999199",
    "end": "1004320"
  },
  {
    "text": "know what is the key and the rest of the of the columns don't really matter so maybe it's this notion of a",
    "start": "1004320",
    "end": "1010240"
  },
  {
    "text": "schema on read yes or you know the fact is the fact that i have some descriptions or many descriptions which can be useful",
    "start": "1010240",
    "end": "1017519"
  },
  {
    "text": "and maybe you'll you'll compose those descriptions again so it's it's not so much as a single schema of the single control point but",
    "start": "1017519",
    "end": "1024160"
  },
  {
    "text": "the fact that you you know you'll need metadata descriptions and you can use those along with the",
    "start": "1024160",
    "end": "1030000"
  },
  {
    "text": "back sale there's by the way there's an index on this an index is this but it's not all of this one so so people have to do",
    "start": "1030000",
    "end": "1037520"
  },
  {
    "text": "you know it won't be rdf but it'll you know there'll be some sort of probably computational",
    "start": "1037520",
    "end": "1043120"
  },
  {
    "text": "description for these things as well as the things themselves yes although what i find fascinating",
    "start": "1043120",
    "end": "1050640"
  },
  {
    "text": "is if you look at a lot of the web apis say twitter where they expose their data",
    "start": "1050640",
    "end": "1057200"
  },
  {
    "text": "as a via rest api there's no formal description of the",
    "start": "1057200",
    "end": "1063520"
  },
  {
    "text": "metadata you go to website where they have like english examples you know it's like oh this is kind of",
    "start": "1063520",
    "end": "1068799"
  },
  {
    "text": "you know in the results you get it might have these things and in practice it works surprisingly",
    "start": "1068799",
    "end": "1075039"
  },
  {
    "text": "well good examples yes are still the best the best one the best ways to communicate yes",
    "start": "1075039",
    "end": "1080480"
  },
  {
    "text": "and and and i think by by leaving it a little bit vague um you gain flexibility that you",
    "start": "1080480",
    "end": "1087360"
  },
  {
    "text": "can consume that data from different languages so i'm i'm very scared about like an uber type",
    "start": "1087360",
    "end": "1095440"
  },
  {
    "text": "system and and so i rather kind of err on the side of the okay just let's keep it",
    "start": "1095440",
    "end": "1101280"
  },
  {
    "text": "informal and pick you know something like json which is really property bags and then you interpret it",
    "start": "1101280",
    "end": "1108640"
  },
  {
    "text": "when you when you read right and so just to switch",
    "start": "1108640",
    "end": "1113760"
  },
  {
    "text": "switch channels yeah you uh mentioned in your talk the current hot",
    "start": "1113760",
    "end": "1120480"
  },
  {
    "text": "debate in the javascript community about futures yep and uh and you",
    "start": "1120480",
    "end": "1125919"
  },
  {
    "text": "uh proposed actually what looks like quite a nice solution uh you want to just maybe you know we",
    "start": "1125919",
    "end": "1133200"
  },
  {
    "text": "give a pointer to talks the slides will be online and uh and uh",
    "start": "1133200",
    "end": "1139360"
  },
  {
    "text": "you know nathan mars is talk and the other ones from the owl that you referenced uh you know are also online these videos",
    "start": "1139360",
    "end": "1145600"
  },
  {
    "text": "where people are looking and talks in australia but you know what do you think about this uh you know",
    "start": "1145600",
    "end": "1151760"
  },
  {
    "text": "i think you said use common ads for the solution yes yeah yeah that's that's kind of a",
    "start": "1151760",
    "end": "1157200"
  },
  {
    "text": "little bit of a joke people that kind of you know it's it's interesting for me uh i was a very fanatical kind of",
    "start": "1157200",
    "end": "1165200"
  },
  {
    "text": "functional programmer in the late 80s and then since then i've become super pragmatic",
    "start": "1165200",
    "end": "1171440"
  },
  {
    "text": "and so for me monet is very much like a design pattern it's great that there's like a formal categorical basis behind",
    "start": "1171440",
    "end": "1178000"
  },
  {
    "text": "it um but but you should look at it more as as as one of the tools in your in your",
    "start": "1178000",
    "end": "1184160"
  },
  {
    "text": "toolbox and the same with combo nets it's it's like an api pattern or design pattern now",
    "start": "1184160",
    "end": "1191520"
  },
  {
    "text": "the interesting thing um i think what is important about the debate that is now",
    "start": "1191520",
    "end": "1197120"
  },
  {
    "text": "in the javascript community is that we need a way to make asynchronous programming",
    "start": "1197120",
    "end": "1202480"
  },
  {
    "text": "easier right because everything you know once you go outside your machine boundaries or even",
    "start": "1202480",
    "end": "1208720"
  },
  {
    "text": "to disk and you have to deal with with asynchrony you cannot make blocking calls so so that is great now the",
    "start": "1208720",
    "end": "1217039"
  },
  {
    "text": "the thing is like how do you expose this to the programmer and what i was arguing for is",
    "start": "1217039",
    "end": "1224000"
  },
  {
    "text": "the the commonetic approach is where your the continuation of the future takes the future itself as an argument",
    "start": "1224000",
    "end": "1232880"
  },
  {
    "text": "but the confirmation is called once that the future the promise has been kind of you know resolved or terminated and then inside",
    "start": "1232880",
    "end": "1240559"
  },
  {
    "text": "the continuation you know it's it's okay to to kind of get at the value",
    "start": "1240559",
    "end": "1245840"
  },
  {
    "text": "and and so now that finished task represents the outcome of the",
    "start": "1245840",
    "end": "1251600"
  },
  {
    "text": "computation whereas in in many other approaches you're passing multiple continuations",
    "start": "1251600",
    "end": "1256880"
  },
  {
    "text": "you know into it or you have to compose multiple continuations which i think is not the right thing and",
    "start": "1256880",
    "end": "1263679"
  },
  {
    "text": "if you look at rx that is also based on multiple considerations but the interesting thing is is that is",
    "start": "1263679",
    "end": "1269039"
  },
  {
    "text": "the result of the computation so you should never have continuations kind of you know passed",
    "start": "1269039",
    "end": "1275679"
  },
  {
    "text": "a into a function but you have to return something that has the contrast and then you compose on that level",
    "start": "1275679",
    "end": "1282559"
  },
  {
    "text": "so it's all about like how do you compose these things and and i think the current approach that a lot of people have the",
    "start": "1282559",
    "end": "1288240"
  },
  {
    "text": "monadic approach is not the easiest way to kind of you know do the composition",
    "start": "1288240",
    "end": "1293440"
  },
  {
    "text": "and so but we'll see and the other thing is that also you really if you look at net where in c",
    "start": "1293440",
    "end": "1300720"
  },
  {
    "text": "sharp and vb and they have async support you know you don't even ever use these operations",
    "start": "1300720",
    "end": "1308159"
  },
  {
    "text": "because that's all hidden by the compiler so the compiler does all the kind of you know plumbing for you so i do believe that that",
    "start": "1308159",
    "end": "1314720"
  },
  {
    "text": "javascript and other languages definitely also need something like that because otherwise you're doing",
    "start": "1314720",
    "end": "1320480"
  },
  {
    "text": "continuation passing by hand and that's what the compiler should do",
    "start": "1320480",
    "end": "1326480"
  },
  {
    "text": "it's like it's now yeah you're doing work as a human that the compiler should have",
    "start": "1326480",
    "end": "1331840"
  },
  {
    "text": "i suspect we'll have a node revolt i don't know but but yeah and to be honest i think",
    "start": "1331840",
    "end": "1337919"
  },
  {
    "text": "node has to just run on that i think node has many good aspects i think",
    "start": "1337919",
    "end": "1343200"
  },
  {
    "text": "it it conceptually pointed out that everything should be asynchronous all",
    "start": "1343200",
    "end": "1348559"
  },
  {
    "text": "the way down but i don't like to program it with callbacks and i think you know because your whole program gets",
    "start": "1348559",
    "end": "1356240"
  },
  {
    "text": "turned inside out and i know companies whereas as interview questions you have to write like a loop",
    "start": "1356240",
    "end": "1361520"
  },
  {
    "text": "using callbacks and and so they're point made right that's kind of the compiler should do that",
    "start": "1361520",
    "end": "1367919"
  },
  {
    "text": "when i was young they've been telling you how could you write this program just using interrupts yes yes",
    "start": "1367919",
    "end": "1374640"
  },
  {
    "text": "it can be done but you know in many cases it's just a lot easier to",
    "start": "1374640",
    "end": "1379760"
  },
  {
    "text": "do some simpler form the other thing is asynchronous it's quite awkward to do you know a good",
    "start": "1379760",
    "end": "1385840"
  },
  {
    "text": "good practice to use a state machine yes and that's not a natural there's not a very natural model to do that",
    "start": "1385840",
    "end": "1392080"
  },
  {
    "text": "in the kind of node-like program yes exactly so particularly it's complicated right",
    "start": "1392080",
    "end": "1397200"
  },
  {
    "text": "yeah but but again again i i i'm a very much an optimist so i just see the fact that people are",
    "start": "1397200",
    "end": "1403360"
  },
  {
    "text": "thinking about it is progress oh no i think it's great i think but we're just scratching the surface",
    "start": "1403360",
    "end": "1409039"
  },
  {
    "text": "now i think people are realizing as they build larger things that they they need need more more support for",
    "start": "1409039",
    "end": "1416240"
  },
  {
    "text": "those things yeah um back to another subject you mentioned which uh",
    "start": "1416240",
    "end": "1421520"
  },
  {
    "text": "um i'm glad i wasn't the only person who read you know i read the the preview that i",
    "start": "1421520",
    "end": "1427279"
  },
  {
    "text": "read the thesis uh unrest you know i went back and i you know we did a bunch of rest apis and",
    "start": "1427279",
    "end": "1434159"
  },
  {
    "text": "then asked ourselves are they really restful you know did we pass the test i mean how do you know",
    "start": "1434159",
    "end": "1439919"
  },
  {
    "text": "um and there are some great books coming out and you know and you know i think you know we haven't",
    "start": "1439919",
    "end": "1447360"
  },
  {
    "text": "getting a much better idea for doing this but i just you know been feeling guilty",
    "start": "1447360",
    "end": "1454320"
  },
  {
    "text": "because i always just want an api and i i think that's actually pretty natural for most",
    "start": "1454320",
    "end": "1459679"
  },
  {
    "text": "developers and you had a comment on that and i think you also referenced some work at google where they say on a project where they found that",
    "start": "1459679",
    "end": "1466799"
  },
  {
    "text": "approach too yeah so so first of all let's kind of talk a little bit about rest so",
    "start": "1466799",
    "end": "1472559"
  },
  {
    "text": "what what i found find um strange is that people cannot define",
    "start": "1472559",
    "end": "1480720"
  },
  {
    "text": "what rest means in a formal way where you can you know like i know what functional programming",
    "start": "1480720",
    "end": "1488320"
  },
  {
    "text": "is you know that's programming with mathematical functions and i know what mathematical functions are so that's",
    "start": "1488320",
    "end": "1494159"
  },
  {
    "text": "great and then you can say well so haskell is real functional programming or as i call it fundamentalist function programming",
    "start": "1494159",
    "end": "1500880"
  },
  {
    "text": "and then you can say well in other languages where you know we allow side effects and strictness and whatever",
    "start": "1500880",
    "end": "1506400"
  },
  {
    "text": "but you still know that it's kind of you know where it comes from and and how it differs but with rest it's like",
    "start": "1506400",
    "end": "1513679"
  },
  {
    "text": "it becomes more like a religious kind of debate um and also the fact that you know by",
    "start": "1513679",
    "end": "1520000"
  },
  {
    "text": "accident i don't know probably by accident you know http has these verbs so are these really kind of",
    "start": "1520000",
    "end": "1525679"
  },
  {
    "text": "everything you need and so on and so that that's going to be our the the my my",
    "start": "1525679",
    "end": "1533039"
  },
  {
    "text": "desire for precision which is not kind of there and and then what is a resource you know",
    "start": "1533039",
    "end": "1538400"
  },
  {
    "text": "they have these kind of vague words that i don't know what they mean and why is it bad to have an rpc style thing",
    "start": "1538400",
    "end": "1545520"
  },
  {
    "text": "so for me all these things don't really matter because what you say as a programmer i just want to program against an api",
    "start": "1545520",
    "end": "1552400"
  },
  {
    "text": "and the fact that this service is exposed as rest or soap or i couldn't care less because",
    "start": "1552400",
    "end": "1558640"
  },
  {
    "text": "that's the implementation it's like the wire format and in some sense i do believe that",
    "start": "1558640",
    "end": "1564000"
  },
  {
    "text": "having an api is more abstract because now you can switch out the implementation so rest is",
    "start": "1564000",
    "end": "1569760"
  },
  {
    "text": "way too concrete for me because it is a certain encoding a certain implementation of an api so",
    "start": "1569760",
    "end": "1576240"
  },
  {
    "text": "for me the api just give me the api and then the implementer of the api can",
    "start": "1576240",
    "end": "1581440"
  },
  {
    "text": "swap out whatever i wouldn't care and i don't think anybody types in the rest urls",
    "start": "1581440",
    "end": "1587200"
  },
  {
    "text": "because the first thing a developer does is to write an api that takes objects sends them to there",
    "start": "1587200",
    "end": "1593200"
  },
  {
    "text": "and gets objects back so they turn it into rpc which is apparently bad but i don't know so",
    "start": "1593200",
    "end": "1599840"
  },
  {
    "text": "maybe i'm completely naive but i'm just i know this is what i see everybody do and all the client",
    "start": "1599840",
    "end": "1605919"
  },
  {
    "text": "libraries for a lot of these web services are are like that",
    "start": "1605919",
    "end": "1611600"
  },
  {
    "text": "and i don't know that's this i i think the easiest way to to deal with this as",
    "start": "1611600",
    "end": "1616799"
  },
  {
    "text": "a developer yeah i mean i thought if it's so important why why can't i just say like put an",
    "start": "1616799",
    "end": "1624240"
  },
  {
    "text": "annotation on this procedure call and say it make it http right right which which",
    "start": "1624240",
    "end": "1629840"
  },
  {
    "text": "i can understand this is supposed to be but i mean in which case there'd be a standard way to do this and you'd say",
    "start": "1629840",
    "end": "1635440"
  },
  {
    "text": "okay i understand this has to go in this format because that's how the web does it but",
    "start": "1635440",
    "end": "1641440"
  },
  {
    "text": "you know i really shouldn't have to worry about marshalling on marshalling and converting all this you know that",
    "start": "1641440",
    "end": "1647840"
  },
  {
    "text": "that should be somewhere separate as opposed to concatenating all these strings which i personally find quite error-prone and",
    "start": "1647840",
    "end": "1654399"
  },
  {
    "text": "teaches yes right yes and and maybe here again i mean i i look at this thing and i see a lot of syntax",
    "start": "1654399",
    "end": "1659840"
  },
  {
    "text": "right so what is the difference between writing blah blah blah slash a slash b or blah blah blah",
    "start": "1659840",
    "end": "1667440"
  },
  {
    "text": "question mark you know a and b yeah i don't i don't see any",
    "start": "1667440",
    "end": "1673200"
  },
  {
    "text": "difference it's just it's just different syntax but apparently there's like a deep semantic difference",
    "start": "1673200",
    "end": "1679279"
  },
  {
    "text": "that escapes me",
    "start": "1679279",
    "end": "1682240"
  },
  {
    "text": "so one one other point i think you know you've been you know coming back to fundamentalist functional",
    "start": "1687840",
    "end": "1693120"
  },
  {
    "text": "programming uh it's quite exciting now we have new conferences like lambda jam coming up and functional programming",
    "start": "1693120",
    "end": "1700000"
  },
  {
    "text": "from scala f sharp closure and other languages uh starting to be used more",
    "start": "1700000",
    "end": "1708880"
  },
  {
    "text": "you know you seem to be now moving from the initial school where you know what if you don't",
    "start": "1708880",
    "end": "1715440"
  },
  {
    "text": "know monads and come on ads and you know yeah you shouldn't come into the room",
    "start": "1715440",
    "end": "1720559"
  },
  {
    "text": "right yes or you failed the test you know that's next uh to um",
    "start": "1720559",
    "end": "1726399"
  },
  {
    "text": "you know i mean in objects we always had reflective so if you didn't know the reflective tower if you didn't know what a meta class was how could you possibly",
    "start": "1726399",
    "end": "1732799"
  },
  {
    "text": "do object-oriented programming then we found out if you didn't know what a meta class was you could make a big mess",
    "start": "1732799",
    "end": "1738480"
  },
  {
    "text": "like change object or something like that yes yeah so it seems to say that you know a lot of",
    "start": "1738480",
    "end": "1743760"
  },
  {
    "text": "these things are inspired or can be viewed through you know you know category lenses and that may be",
    "start": "1743760",
    "end": "1752159"
  },
  {
    "text": "an interesting choice of words but yeah but maybe that's maybe that's a bit",
    "start": "1752159",
    "end": "1757840"
  },
  {
    "text": "overemphasized because i think it's one of the things that makes people who don't have that sort of",
    "start": "1757840",
    "end": "1763520"
  },
  {
    "text": "that particular kind of mathematical backgrounds i mean i'm an engineer i've got a strong map and you know signal",
    "start": "1763520",
    "end": "1770320"
  },
  {
    "text": "processing you know numerical mathematics and so on but i certainly you know most engineers don't",
    "start": "1770320",
    "end": "1776159"
  },
  {
    "text": "take categories i certainly didn't so maybe that's kind of over emphasized or or maybe maybe that the",
    "start": "1776159",
    "end": "1783520"
  },
  {
    "text": "haskell community needs to learn how to speak in other ways when in other audiences or",
    "start": "1783520",
    "end": "1788799"
  },
  {
    "text": "you know how do you think about this yeah so so the way i look at it if you you mentioned engineering which i",
    "start": "1788799",
    "end": "1794799"
  },
  {
    "text": "think is an excellent example if you're an engineer say a mechanical engineer you build models using math",
    "start": "1794799",
    "end": "1801360"
  },
  {
    "text": "but the models are very much abstracted from reality you make all",
    "start": "1801360",
    "end": "1806720"
  },
  {
    "text": "kind of assumptions like you know there's no friction and there's a point mass and this and that and you do that",
    "start": "1806720",
    "end": "1812640"
  },
  {
    "text": "as a conceptual framework and it's a it's a conceptual model and you know that this is not really the",
    "start": "1812640",
    "end": "1818000"
  },
  {
    "text": "real world but you're gonna make these assumptions and then you kind of you know want to learn more about what you're",
    "start": "1818000",
    "end": "1823360"
  },
  {
    "text": "going to do but then when you build the real system there's all kind of other constraints",
    "start": "1823360",
    "end": "1828640"
  },
  {
    "text": "that you have to deal with and engineers realize that the model that they made is not the same as the system",
    "start": "1828640",
    "end": "1835120"
  },
  {
    "text": "that they then produce they're always partial models exactly and and i think the same is true",
    "start": "1835120",
    "end": "1840960"
  },
  {
    "text": "when you use like monets and category theory category theory is more like your your your differential equations but your",
    "start": "1840960",
    "end": "1847919"
  },
  {
    "text": "code is always kind of different and you have to realize that and i think it's",
    "start": "1847919",
    "end": "1854000"
  },
  {
    "text": "that's one of the things that you know i do believe that you have to keep in mind very carefully",
    "start": "1854000",
    "end": "1859440"
  },
  {
    "text": "that you know you're right you write your code that's kind of you know where there's a conceptual model and",
    "start": "1859440",
    "end": "1864640"
  },
  {
    "text": "they don't hardly ever met one to one and the other thing is that people i",
    "start": "1864640",
    "end": "1871039"
  },
  {
    "text": "don't know it's like i don't know what it is where they kind of like maybe it's this mystique because it's",
    "start": "1871039",
    "end": "1877919"
  },
  {
    "text": "hard to understand i i don't know so i i'm i'm really trying to to take away all the kind of",
    "start": "1877919",
    "end": "1883279"
  },
  {
    "text": "mysticism out of demonets and so on because in the end it's just a way to model",
    "start": "1883279",
    "end": "1888640"
  },
  {
    "text": "things that you that you want to write in coverage the same for functional programming in",
    "start": "1888640",
    "end": "1894480"
  },
  {
    "text": "general you can say well you write what i call fundamentalist",
    "start": "1894480",
    "end": "1899760"
  },
  {
    "text": "programs i i do believe that the haskell community has done one really good thing and i think simon peyton jones is the one to kind of",
    "start": "1899760",
    "end": "1906880"
  },
  {
    "text": "praise for that is they always kept the language pure absolutely and then you can experiment again then",
    "start": "1906880",
    "end": "1913200"
  },
  {
    "text": "you can write these models and you you cannot cheat and so you have to be pure and then you",
    "start": "1913200",
    "end": "1919279"
  },
  {
    "text": "know once you've learned that then you apply it in practice and what i really like is that a lot of the",
    "start": "1919279",
    "end": "1924559"
  },
  {
    "text": "more pragmatic languages like scala f sharp closure and so on they are not taking the",
    "start": "1924559",
    "end": "1930000"
  },
  {
    "text": "real purest view but they say well what we have to do is we have to write you know programs you have to interact with the",
    "start": "1930000",
    "end": "1935600"
  },
  {
    "text": "imperative world and so on so they they are they're using the insights from the",
    "start": "1935600",
    "end": "1940960"
  },
  {
    "text": "from the uh your model to build a real things and and i think you know",
    "start": "1940960",
    "end": "1947360"
  },
  {
    "text": "it's it's a matter of also maturity i think where you can let go of the kind of you know the real",
    "start": "1947360",
    "end": "1952960"
  },
  {
    "text": "strict kind of adhere strict to the to the monadic stuff now you know you know that okay and then i kind of",
    "start": "1952960",
    "end": "1959440"
  },
  {
    "text": "you know apply these concepts to my to my actual work",
    "start": "1959440",
    "end": "1965279"
  },
  {
    "text": "and for me the essence of functional programming is really that you make things first class that you can make",
    "start": "1965279",
    "end": "1971039"
  },
  {
    "text": "computations first class that you can abstract patterns that are repeated",
    "start": "1971039",
    "end": "1976880"
  },
  {
    "text": "and so you can say ah that so really what the function is it's like a set of statements that you turn into an object",
    "start": "1976880",
    "end": "1983919"
  },
  {
    "text": "itself and we we talked about this in the in the past but there's really not that",
    "start": "1983919",
    "end": "1989120"
  },
  {
    "text": "much difference between objects and functions um and in many cases it's a synthetic",
    "start": "1989120",
    "end": "1995679"
  },
  {
    "text": "difference and even if you look at the implementation i mean people get horrified when you're",
    "start": "1995679",
    "end": "2001039"
  },
  {
    "text": "saying here's the simple what's the difference between object-oriented programming and functional programming well",
    "start": "2001039",
    "end": "2006320"
  },
  {
    "text": "you know in one you get the environment you have to find the function and the other to get the function you have to find the",
    "start": "2006320",
    "end": "2011679"
  },
  {
    "text": "environment yeah so that can be it right yeah but if you see the metacircular interpreter you you know yes",
    "start": "2011679",
    "end": "2018159"
  },
  {
    "text": "it's you know the redevelopment there's you know very little difference in the actual yes exactly and and so i think it's always",
    "start": "2018159",
    "end": "2025200"
  },
  {
    "text": "good to emphasize what is the same instead of kind of you know focus on what's different which is something that computer",
    "start": "2025200",
    "end": "2030880"
  },
  {
    "text": "scientists like to do is they always can try to pick things down and view the",
    "start": "2030880",
    "end": "2035919"
  },
  {
    "text": "differences i don't think that's very productive and so just look at this thing you know",
    "start": "2035919",
    "end": "2041279"
  },
  {
    "text": "holistically and say what can i learn and what can i steal what can i apply",
    "start": "2041279",
    "end": "2046880"
  },
  {
    "text": "well thank you very much it's been great to have you very enjoyable um you'll be able to",
    "start": "2046880",
    "end": "2052720"
  },
  {
    "text": "catch eric's slides online and his videos as well so thank you",
    "start": "2052720",
    "end": "2061838"
  },
  {
    "text": "okay",
    "start": "2063960",
    "end": "2066960"
  }
]