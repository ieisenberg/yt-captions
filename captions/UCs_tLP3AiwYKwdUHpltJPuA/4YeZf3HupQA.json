[
  {
    "start": "0",
    "end": "95000"
  },
  {
    "text": "[Music]",
    "start": "960",
    "end": "8889"
  },
  {
    "text": "I'm going to be talking about a serverless espresso and if you've been here at the conference this is all about",
    "start": "12960",
    "end": "18240"
  },
  {
    "text": "a AWS application that we built to teach you about building a scalable event",
    "start": "18240",
    "end": "23880"
  },
  {
    "text": "driven application and the reason I'm happy it's espresso is if you are dozing a bit after lunch which is",
    "start": "23880",
    "end": "29099"
  },
  {
    "text": "understandable then maybe have a mental picture of espresso to maybe perk you up in the afternoon",
    "start": "29099",
    "end": "34260"
  },
  {
    "text": "so yep serverless espresso is an event-driven coffee ordering application built with serverless architecture and",
    "start": "34260",
    "end": "41940"
  },
  {
    "text": "if that sounds a whole a whole bit of buzzword bingo don't worry that's what we're going to go into my name is Julian",
    "start": "41940",
    "end": "47100"
  },
  {
    "text": "wood I am a developer Advocate I work within the AWS serverless product team I come from a background as with I know",
    "start": "47100",
    "end": "53760"
  },
  {
    "text": "some people here who I've spoken to from an infrastructure background actually and working in Enterprises and startups",
    "start": "53760",
    "end": "59699"
  },
  {
    "text": "now being at AWS for three years now um two sides of my job is to help people understand and know how to build",
    "start": "59699",
    "end": "65700"
  },
  {
    "text": "serverless Technologies uh serverless applications using AWS Technologies and then also very keen on getting people's",
    "start": "65700",
    "end": "71820"
  },
  {
    "text": "feedback on how we can always improve AWS how we can add more features how we can make things simpler and basically",
    "start": "71820",
    "end": "77640"
  },
  {
    "text": "make your life better to building applications in the cloud",
    "start": "77640",
    "end": "82920"
  },
  {
    "text": "um there's my Twitter details I'll go back one slide Julian underscore would or on LinkedIn as well you know happy to",
    "start": "82920",
    "end": "88380"
  },
  {
    "text": "continue the conversation if you have any questions about serverless Technologies or the presentation for",
    "start": "88380",
    "end": "94200"
  },
  {
    "text": "today um so what is serverless espresso the coffee ordering app built with a service",
    "start": "94200",
    "end": "99240"
  },
  {
    "start": "95000",
    "end": "387000"
  },
  {
    "text": "architecture and we're going to go through it all I don't know if you've had a has anybody had a an espresso a",
    "start": "99240",
    "end": "104460"
  },
  {
    "text": "coffee from serverless espresso good some hands coming up hopefully afterwards they're going to be a few more",
    "start": "104460",
    "end": "110280"
  },
  {
    "text": "um the idea is to show how you can put together some AWS Technologies to build",
    "start": "110280",
    "end": "115619"
  },
  {
    "text": "a serverless web app front-end code some back-end code and how you can really tie it all together so the idea is you sort",
    "start": "115619",
    "end": "121680"
  },
  {
    "text": "of place an order on your mobile device and the order then appears on the monitor up on the screen if you've seen",
    "start": "121680",
    "end": "126719"
  },
  {
    "text": "that which tracks the orders you're going to see that for people who haven't seen it shortly and there's also a tablet that the Barista has and the",
    "start": "126719",
    "end": "132599"
  },
  {
    "text": "Barista can use that to track the orders and they know you know they've got four cappuccinos to make it on an espresso and they see that on another tablet and",
    "start": "132599",
    "end": "139860"
  },
  {
    "text": "the tablet and the monitor is connected to the cloud and uh and um syncing and being up to date with what the orders",
    "start": "139860",
    "end": "146099"
  },
  {
    "text": "are and then also when your drink is ready you then do get a notification on your phone to say that your order is",
    "start": "146099",
    "end": "151319"
  },
  {
    "text": "ready and you know that's even better than being in a in a coffee shop because you can be walking around chat into your friend discussing the awesome go-to",
    "start": "151319",
    "end": "157800"
  },
  {
    "text": "conference and you forgot that you ordered a coffee and then it pops up on your phone you go oh excellent I mustn't forget to go and get my coffee",
    "start": "157800",
    "end": "164160"
  },
  {
    "text": "now um Solus espresso super scalable we've you know ran it at our big Global",
    "start": "164160",
    "end": "169200"
  },
  {
    "text": "conference re invent in 2021 which is in Las Vegas uh you know 71 drinks per hour",
    "start": "169200",
    "end": "174300"
  },
  {
    "text": "we can even do more than that and we've also appeared at you know a number of AWS Summits uh Eda day which is a new",
    "start": "174300",
    "end": "180480"
  },
  {
    "text": "event driven architecture's day we did in partnership with go to in London a few weeks ago conferences like this in",
    "start": "180480",
    "end": "186120"
  },
  {
    "text": "go to in Copenhagen and arrows and in Amsterdam and many others and you know this ordering system we average sort of",
    "start": "186120",
    "end": "193019"
  },
  {
    "text": "around a thousand drinks per day so it's you know pretty scalable but to be honest the scalability factor isn't",
    "start": "193019",
    "end": "199500"
  },
  {
    "text": "really the cloud and isn't really AWS but it's literally it takes time to make a coffee a barista needs to make a",
    "start": "199500",
    "end": "204900"
  },
  {
    "text": "coffee from the machine and that's the scaling thing so if we had 100 Baristas uh you know this app would scale up to",
    "start": "204900",
    "end": "210480"
  },
  {
    "text": "100 times the throughput um just have a kind of look I'll just show you the video and this is actually",
    "start": "210480",
    "end": "215580"
  },
  {
    "text": "recorded at reinvent last year and you can sort of see what it looks like if you haven't been downstairs to actually order a coffee",
    "start": "215580",
    "end": "221000"
  },
  {
    "text": "[Music]",
    "start": "221000",
    "end": "224539"
  },
  {
    "text": "foreign [Music]",
    "start": "227459",
    "end": "231439"
  },
  {
    "text": "[Music]",
    "start": "237750",
    "end": "240949"
  },
  {
    "text": "[Music]",
    "start": "246960",
    "end": "250110"
  },
  {
    "text": "[Music] well that's earliest espresso and you",
    "start": "275590",
    "end": "280800"
  },
  {
    "text": "can do literally the same thing downstairs and and see the same experience so just to backtrack a bit I know",
    "start": "280800",
    "end": "286680"
  },
  {
    "text": "there's some people here who may not be uh sort of fully aware of AWS you know Amazon web services part of the bigger",
    "start": "286680",
    "end": "292139"
  },
  {
    "text": "Amazon brand and we're a sort of fairly big cloud computing company and we have sort of a number of regions which we",
    "start": "292139",
    "end": "298380"
  },
  {
    "text": "call uh and regions are made up of availability zones you can think of these as separate data centers and",
    "start": "298380",
    "end": "304500"
  },
  {
    "text": "availability zones are separated by you know a decent distance that you can build resilient applications that if an",
    "start": "304500",
    "end": "310680"
  },
  {
    "text": "availability Zone was to fail or there was some kind of issue that your workloads could be protected if they are",
    "start": "310680",
    "end": "316440"
  },
  {
    "text": "across multiple availability zones um you can see here in Europe we have a number of availability zones a number of",
    "start": "316440",
    "end": "322560"
  },
  {
    "text": "regions the closest one is actually in Stockholm in Sweden I know there's a you know we in Copenhagen here there's a",
    "start": "322560",
    "end": "328860"
  },
  {
    "text": "bridge just across the Sweden so that is quite close but basically you have full control of your data wherever you decide",
    "start": "328860",
    "end": "334380"
  },
  {
    "text": "to place it in the cloud it's not shared or moved between any AWS regions there's",
    "start": "334380",
    "end": "339539"
  },
  {
    "text": "full incredible in-depth security that you can do which AWS does on your behalf and also you can right within your",
    "start": "339539",
    "end": "345720"
  },
  {
    "text": "application code to make sure that only you've got access to your data and that your data isn't going to be read by",
    "start": "345720",
    "end": "350880"
  },
  {
    "text": "anybody else or even AWS so we have very strict security controls we always talk about security at AWS as that's job",
    "start": "350880",
    "end": "357539"
  },
  {
    "text": "number zero and that doesn't mean we started at one and realizes we need something else and so we just add it in a zero it basically means security",
    "start": "357539",
    "end": "364139"
  },
  {
    "text": "starts before we do anything else so security is a massive massive thing we think about at AWS for our cloud and",
    "start": "364139",
    "end": "371699"
  },
  {
    "text": "also for your workloads and we're continuing expanding we have a number of existing regions and availability zones",
    "start": "371699",
    "end": "378000"
  },
  {
    "text": "and a whole bunch of new regions with availability zones that are coming online over the next year which have",
    "start": "378000",
    "end": "384360"
  },
  {
    "text": "already been announced and probably more so another one of the sort of buzzword",
    "start": "384360",
    "end": "389639"
  },
  {
    "start": "387000",
    "end": "683000"
  },
  {
    "text": "bingo terms of people here is serverless and you know what on Earth is serverless and the idea of serverless and this",
    "start": "389639",
    "end": "396000"
  },
  {
    "text": "isn't a term that AWS came up with this is a sort of Industry term that people are trying to work out",
    "start": "396000",
    "end": "401759"
  },
  {
    "text": "um and understand and from our perspective serverless means having no servers now I know that sometimes a bit",
    "start": "401759",
    "end": "408300"
  },
  {
    "text": "of an annoying term it's sometimes like nosql when people first hear about nosql they go okay so it's not SQL but that",
    "start": "408300",
    "end": "415440"
  },
  {
    "text": "doesn't tell me what it is it just tells you what it isn't and serverless does have servers in the background yes",
    "start": "415440",
    "end": "421440"
  },
  {
    "text": "there's no sort of weird magic that they're actually on servers but AWS looks after all the managing of the servers for you so there's no",
    "start": "421440",
    "end": "427680"
  },
  {
    "text": "infrastructure to manage there's no petting to do the scalability is just built in an analogy I sometimes like to",
    "start": "427680",
    "end": "433620"
  },
  {
    "text": "use is Wireless there's wireless internet access all over here and it's actually pretty good at this car at this",
    "start": "433620",
    "end": "439080"
  },
  {
    "text": "conference venue but you know behind the scenes there are a lot of wires in Wireless all the access points are connected to switches which are",
    "start": "439080",
    "end": "444840"
  },
  {
    "text": "connected to other switches and behind the scenes a whole of wires but when you when you consume Wireless you just have",
    "start": "444840",
    "end": "450539"
  },
  {
    "text": "a wireless device um but the wires you don't have to interact with serverless is a similar way however serverless has some unique",
    "start": "450539",
    "end": "457800"
  },
  {
    "text": "characteristics which are very powerful when building applications I have mentioned there are no infrastructure to manage but that also means there's no",
    "start": "457800",
    "end": "464099"
  },
  {
    "text": "Auto scaling there's no clusters there's no PODS of servers that you need to manage no load balances that you need to",
    "start": "464099",
    "end": "470580"
  },
  {
    "text": "look after and maintain and this gives us some super powerful capabilities those availability zones I was talking",
    "start": "470580",
    "end": "476460"
  },
  {
    "text": "about previously well all AWS serverless services are multi-az by default that",
    "start": "476460",
    "end": "482340"
  },
  {
    "text": "means that AWS handles all that replication all that high availability between availability zones so you don't",
    "start": "482340",
    "end": "488699"
  },
  {
    "text": "have to you don't have to run those complicated Disaster Recovery procedures or make sure that your data is",
    "start": "488699",
    "end": "494819"
  },
  {
    "text": "replicated between those availability zones we just take on that for you and make sure that you can get the best",
    "start": "494819",
    "end": "500039"
  },
  {
    "text": "security you can get the best availability and the best performance for your applications also because we can run this at scale it",
    "start": "500039",
    "end": "506819"
  },
  {
    "text": "means that we can scale your workloads pretty much as high as you can do it and that's in one dimension from scalability",
    "start": "506819",
    "end": "513300"
  },
  {
    "text": "so you give us a workload and we will scale it up as high as you need it but also really importantly we can scale it",
    "start": "513300",
    "end": "518940"
  },
  {
    "text": "down literally to zero so that means if you are if your serverless application is being used heavily yes we're going to",
    "start": "518940",
    "end": "525600"
  },
  {
    "text": "scale up but if it's not being used at all you literally pay for nothing and that's the that's the thing we talk",
    "start": "525600",
    "end": "531480"
  },
  {
    "text": "about when we say pay for Value so for example we're doing serverless espresso as an example application over here two",
    "start": "531480",
    "end": "537360"
  },
  {
    "text": "days ago there wasn't serverless espresso being run at any conference so it literally costs zero to run for the whole day there are no servers running",
    "start": "537360",
    "end": "543420"
  },
  {
    "text": "in the background waiting for a connection they know even Auto scaling groups or even clusters that we've had",
    "start": "543420",
    "end": "549480"
  },
  {
    "text": "to scale down to a minimum no nothing happened overnight last night there was nothing happening I didn't have to turn",
    "start": "549480",
    "end": "555480"
  },
  {
    "text": "off serverless espresso to save money last night I didn't have to turn it on this morning to make it ready to serve",
    "start": "555480",
    "end": "561180"
  },
  {
    "text": "traffic all I had to do was just open and close the store and that's just a configuration item as a part of the",
    "start": "561180",
    "end": "567060"
  },
  {
    "text": "application but I don't have to worry about the scaling there could be 10 other events showing serverless espresso",
    "start": "567060",
    "end": "572640"
  },
  {
    "text": "today I don't even need to think about oh is there going to be enough capacity um am I going to have to scale anything up I don't have to worry about that so",
    "start": "572640",
    "end": "579540"
  },
  {
    "text": "scale on the upside something I don't need to worry about and think about and scale on the downside means I don't have",
    "start": "579540",
    "end": "585180"
  },
  {
    "text": "to uh I don't have to manually shut anything down to save costs and to shut down things that are not running and",
    "start": "585180",
    "end": "592019"
  },
  {
    "text": "highly available and secure but because you are handing over more responsibility to AWS we're going to be very careful",
    "start": "592019",
    "end": "598019"
  },
  {
    "text": "with that responsibility and we're going to make sure that your applications are highly available across those availability zones and highly secure",
    "start": "598019",
    "end": "604440"
  },
  {
    "text": "because some of those things like the like the patching and the mutual TLS between applications and your",
    "start": "604440",
    "end": "610260"
  },
  {
    "text": "certificate rotations and some of those SSL kind of things which is coming from infrastructure background I know that's",
    "start": "610260",
    "end": "616440"
  },
  {
    "text": "a real pain to look after AWS is going to do that on your behalf and you get to concentrate on your business value on",
    "start": "616440",
    "end": "622500"
  },
  {
    "text": "your business workflows on the code that's important to your business rather than the code needed to run a whole",
    "start": "622500",
    "end": "627899"
  },
  {
    "text": "bunch of virtual machines in the cloud so that's the idea of serverless and if people want to talk to me afterwards I'm",
    "start": "627899",
    "end": "633420"
  },
  {
    "text": "more than happy to discuss uh you know different ways that you can use serverless for different workloads but it can be used from anything from web",
    "start": "633420",
    "end": "639899"
  },
  {
    "text": "applications which you're going to be showing over here to data processing to Big workflow automations in the cloud",
    "start": "639899",
    "end": "645120"
  },
  {
    "text": "and to managing iot sensors to anything we have a you know customers large and small who are running server serverless",
    "start": "645120",
    "end": "651720"
  },
  {
    "text": "workloads in fact one of the customers who is super Keen to always talk about how their use of serverless is because",
    "start": "651720",
    "end": "657779"
  },
  {
    "text": "we're in Denmark Lego and Lego runs all of their storefront on using serverless Technologies with AWS and if you are",
    "start": "657779",
    "end": "664500"
  },
  {
    "text": "anything like me and you have kids who enjoy Lego you know we're coming up to Christmas there's going to be a lot of",
    "start": "664500",
    "end": "670260"
  },
  {
    "text": "Lego sets are going to be bought and all of that is running using serverless Technologies on AWS and they are super",
    "start": "670260",
    "end": "675779"
  },
  {
    "text": "happy with that with how that all works because the scaling is built in the security is built in and they can focus on delivering the best service to their",
    "start": "675779",
    "end": "682560"
  },
  {
    "text": "customers um so from your business perspective this gives you sort of never mind the",
    "start": "682560",
    "end": "688019"
  },
  {
    "start": "683000",
    "end": "737000"
  },
  {
    "text": "technical of the multi-az replication and all this kind of thing just gives you greater agility you've got you can",
    "start": "688019",
    "end": "693839"
  },
  {
    "text": "concentrate on what your business needs to work on you can hand over a lot of the operations of making sure that all",
    "start": "693839",
    "end": "700560"
  },
  {
    "text": "the servers behind the scenes are working over to AWS allows you to focus on building the best products you want",
    "start": "700560",
    "end": "705839"
  },
  {
    "text": "and obviously if you're not hassling with all some of that infrastructure stuff you've got a faster time to Market you can iterate on your code you can",
    "start": "705839",
    "end": "713100"
  },
  {
    "text": "react to what your customers are asking you to do and you can be a more efficient and with that scaling and with",
    "start": "713100",
    "end": "718260"
  },
  {
    "text": "that cost model which scales down to zero you can model your costs on your application you know very accurately and",
    "start": "718260",
    "end": "725579"
  },
  {
    "text": "your costs can grow with your business as your business brings in more money yes your costs will grow but you haven't got this big fixed cost that you need to",
    "start": "725579",
    "end": "732360"
  },
  {
    "text": "be concerned with when you are starting out as a provider of some application",
    "start": "732360",
    "end": "738600"
  },
  {
    "start": "737000",
    "end": "835000"
  },
  {
    "text": "so service espresso let's talk a little bit about how the application works um if you have ordered a coffee from",
    "start": "738600",
    "end": "744720"
  },
  {
    "text": "serverless espresso and you saw it on the video before there's a display web app and this is just a web page which is",
    "start": "744720",
    "end": "750180"
  },
  {
    "text": "hosted as a single page application um on AWS and this shows a barcode which",
    "start": "750180",
    "end": "756060"
  },
  {
    "text": "refreshes every five minutes and this also shows the order status and then listens for whether the story is open",
    "start": "756060",
    "end": "761880"
  },
  {
    "text": "and the story is closed and the Barista can close the store if they need to step away or the coffee machine breaks down",
    "start": "761880",
    "end": "767579"
  },
  {
    "text": "they can close the store and so this web app is a communication mechanism to allow you to order",
    "start": "767579",
    "end": "772680"
  },
  {
    "text": "then the ordering web app allows you to actually order the coffee and this is what you're going to see on your mobile",
    "start": "772680",
    "end": "777899"
  },
  {
    "text": "phone and so once you authenticate with your mobile phone number you then",
    "start": "777899",
    "end": "783839"
  },
  {
    "text": "presented with a menu and then you can choose the coffee you want or the tea you want or the hot chocolate you want or the oat milk or the skim milk or",
    "start": "783839",
    "end": "789540"
  },
  {
    "text": "whatever and go through the ordering process which will then show you the order number that is available and then",
    "start": "789540",
    "end": "794579"
  },
  {
    "text": "also tells you when your order is ready once a barista has said that your coffee is ready it's going to notify your",
    "start": "794579",
    "end": "801240"
  },
  {
    "text": "front-end application uh the Barista ribat this is what they've got on the tablets in front of them shows them the incoming orders they",
    "start": "801240",
    "end": "807060"
  },
  {
    "text": "can pick up the incoming orders they can batch them together and do three espressos or do all the milk orders at one time and do the fancy artwork and",
    "start": "807060",
    "end": "813899"
  },
  {
    "text": "allows them to also cancel orders and to open and close the store and also this then prints the tickets onto a printer",
    "start": "813899",
    "end": "820019"
  },
  {
    "text": "and so that's actually a local connection there's nothing too clever with the cloud with that but this just allows it to print the sticker they know",
    "start": "820019",
    "end": "825600"
  },
  {
    "text": "that order number you know 471 is available and that's for a cappuccino and you've got that order number on your",
    "start": "825600",
    "end": "831480"
  },
  {
    "text": "phone and allows you to um to those two to be connected together so the AWS",
    "start": "831480",
    "end": "837060"
  },
  {
    "start": "835000",
    "end": "1065000"
  },
  {
    "text": "Services used are a number of different Services now if you've worked in the AWS ecosystem you may be aware of these but",
    "start": "837060",
    "end": "842700"
  },
  {
    "text": "if you're not I appreciate that some of these Services may not mean may not mean much so the front-end application is",
    "start": "842700",
    "end": "848820"
  },
  {
    "text": "hosted by a service called AWS amplify console and this is a really simple way to host single page applications in the",
    "start": "848820",
    "end": "855000"
  },
  {
    "text": "cloud it's backed by our S3 simple storage service product and this is",
    "start": "855000",
    "end": "861720"
  },
  {
    "text": "probably the most durable and biggest cloud storage service in the entire planet it's it's incredible I think it",
    "start": "861720",
    "end": "868139"
  },
  {
    "text": "has seven nines of availability and I kind of I can't even remember how little of how good that availability is but it",
    "start": "868139",
    "end": "874320"
  },
  {
    "text": "basically means if you're going to put a file onto S3 it's going to be there as durable as ever and the cool thing about",
    "start": "874320",
    "end": "880740"
  },
  {
    "text": "S3 is that because it's a file store it can be it's an object store that stores files it basically can be the world's",
    "start": "880740",
    "end": "887279"
  },
  {
    "text": "biggest web hosting platform and so amplifier console sits in front of S3 which is super reliable super durable",
    "start": "887279",
    "end": "893399"
  },
  {
    "text": "and allows you to host the applications now amplifier's got some extra functionality that you can add some authentication and you can do some",
    "start": "893399",
    "end": "900240"
  },
  {
    "text": "custom compute kind of things and a whole sort of wrapper around the servers to make it much easier to consume to be",
    "start": "900240",
    "end": "906899"
  },
  {
    "text": "able to store your um to be able to run your applications and also uses another service behind the scenes which is",
    "start": "906899",
    "end": "912000"
  },
  {
    "text": "cloudfront which allows you to Cache your application locally literally anywhere in the globe you want to do it so that gives your customers really",
    "start": "912000",
    "end": "918380"
  },
  {
    "text": "gives your your customers a really good experience low latency to be able to access your app Amazon API Gateway is an",
    "start": "918380",
    "end": "925199"
  },
  {
    "text": "API Gateway managed service so again you're not having to run nginx or Apache",
    "start": "925199",
    "end": "930600"
  },
  {
    "text": "yourselves we just handle the API and it can handle up with massive scale it's got throttling and metering and a whole",
    "start": "930600",
    "end": "936720"
  },
  {
    "text": "bunch of extra functionality built in it's just an API service that you can use for the cloud dynamodb is a nosql",
    "start": "936720",
    "end": "943320"
  },
  {
    "text": "database my silly comment earlier about being SQL or nosql this is one of the most powerful flexible and fastest nosql",
    "start": "943320",
    "end": "951300"
  },
  {
    "text": "databases on the planet I can't remember the figure but uh a lot of amazon.com also runs with dynamodb and I think it's",
    "start": "951300",
    "end": "958740"
  },
  {
    "text": "something like maybe seven million transactions a second during Prime day or something go",
    "start": "958740",
    "end": "963899"
  },
  {
    "text": "through dynamodb and it also Auto scales up and auto scales down so super powerful nosql database Amazon event",
    "start": "963899",
    "end": "970199"
  },
  {
    "text": "bridge is an event router we're going to cover that a little bit later and allows you to uh to pass events between",
    "start": "970199",
    "end": "976260"
  },
  {
    "text": "different parts of your applications step functions is a workflow orchestration service and this allows",
    "start": "976260",
    "end": "982260"
  },
  {
    "text": "you when you have transactions or you have a service that needs to do some branching logic or if thens or error",
    "start": "982260",
    "end": "988740"
  },
  {
    "text": "correcting or this kind of thing instead of writing that in your own code which can be a bit of a pain you can use step functions to orchestrate that and run",
    "start": "988740",
    "end": "995519"
  },
  {
    "text": "that at Cloud scale AWS it core actually that's what is used in this application to give the mobile",
    "start": "995519",
    "end": "1001820"
  },
  {
    "text": "notifications to the front-end displays and I always think the the poorest sort of iot core team must be scratching",
    "start": "1001820",
    "end": "1007940"
  },
  {
    "text": "their head thinking why do they call it iot core when it's not actually just interacting with iot devices but it uses",
    "start": "1007940",
    "end": "1014540"
  },
  {
    "text": "a very simple JavaScript library SDK Library which runs in a front-end app and this acts as your sort of iot device",
    "start": "1014540",
    "end": "1021139"
  },
  {
    "text": "even though it's not a device it's just your it client it enables you to get the the information back from the cloud and",
    "start": "1021139",
    "end": "1027798"
  },
  {
    "text": "AWS Lambda is our super scalable compute service in the cloud you literally upload code to us and we will run it on",
    "start": "1027799",
    "end": "1035298"
  },
  {
    "text": "your behalf and this can be in literally any language we have some managed runtimes for things like Java and node",
    "start": "1035299",
    "end": "1040640"
  },
  {
    "text": "and net and Python and Ruby and I'm sure I've left some out but um and if not",
    "start": "1040640",
    "end": "1046220"
  },
  {
    "text": "we've got custom runtimes so we have people using Elixir and kobel and Powershell and anything like this any",
    "start": "1046220",
    "end": "1052040"
  },
  {
    "text": "Cloud you want to write any programming language you want to run you can run that in Lambda and that scales up pretty",
    "start": "1052040",
    "end": "1058940"
  },
  {
    "text": "much as high as you need to and also scale scales down again no servers that you need to manage under the hood",
    "start": "1058940",
    "end": "1065480"
  },
  {
    "start": "1065000",
    "end": "1244000"
  },
  {
    "text": "so the high level architecture used we start with thinking about what we want to achieve in this application and some",
    "start": "1065480",
    "end": "1071240"
  },
  {
    "text": "of our goals is we really want to minimize the code and I mean certainly the code I write I want to be minimized",
    "start": "1071240",
    "end": "1077000"
  },
  {
    "text": "because maybe I'm not the best developer in the world but surely all code is a liability we want to try and reduce the",
    "start": "1077000",
    "end": "1082340"
  },
  {
    "text": "amount of code we want it to be extensible we don't know what in the future we're going to do to add to our application we don't know maybe what we",
    "start": "1082340",
    "end": "1089000"
  },
  {
    "text": "want to change or evolve or remove um scale is obviously a a thing we're going to do we don't know how many",
    "start": "1089000",
    "end": "1095059"
  },
  {
    "text": "serverless espresso orders we're going to get today or how or whether we're going to have 10 events running today or we're going to extend this to a you know",
    "start": "1095059",
    "end": "1101179"
  },
  {
    "text": "real coffee store chain which is going to be or doing a million orders a day and also we want to be cautious about",
    "start": "1101179",
    "end": "1106640"
  },
  {
    "text": "cost we want to make sure that our Cloud costs aren't going to go crazy and again we want our costs to align with our",
    "start": "1106640",
    "end": "1112880"
  },
  {
    "text": "business so when we have a tight coupling between what we want to spend and what we expect to spend and what we",
    "start": "1112880",
    "end": "1118460"
  },
  {
    "text": "do spend so it's on the tenants in terms of our team organization well we want our teams",
    "start": "1118460",
    "end": "1124100"
  },
  {
    "text": "to be responsible for one component that says sort of some alignment with maybe our microservices design or our team",
    "start": "1124100",
    "end": "1129559"
  },
  {
    "text": "topologies we don't want to share too much of the implementation we want to have separate microservices without too",
    "start": "1129559",
    "end": "1135799"
  },
  {
    "text": "much coupling we want to have independently Deployable microservices with their own events that they generate",
    "start": "1135799",
    "end": "1142340"
  },
  {
    "text": "maybe their own apis that they host without too much data sharing because once you create that coupling it's going",
    "start": "1142340",
    "end": "1148220"
  },
  {
    "text": "to be harder to evolve your application so zooming out and looking at all of this and I appreciate there are a lot of",
    "start": "1148220",
    "end": "1153500"
  },
  {
    "text": "icons on the screen and some people are going to say oh hang on if you're using serverless Services wow that's a lot of",
    "start": "1153500",
    "end": "1159020"
  },
  {
    "text": "different things I need to connect together but the thing is these things that you're connecting together in a serverless service is what you would",
    "start": "1159020",
    "end": "1165080"
  },
  {
    "text": "have written in your code in a big code base yourself you're going to be we're running an API service you are running",
    "start": "1165080",
    "end": "1170480"
  },
  {
    "text": "some code you are connecting to and from a database and so in a way serverless Services allow you to remove some of",
    "start": "1170480",
    "end": "1177380"
  },
  {
    "text": "that code that you've written and run that in managed services and expose what's that's going to be happening it allows you to use the best tool for the",
    "start": "1177380",
    "end": "1183500"
  },
  {
    "text": "job so for serverless espresso we've got the three front ends which we've spoken about and then there's some an API layer",
    "start": "1183500",
    "end": "1189620"
  },
  {
    "text": "which provides access to the business logic and some of the data we then use events extensively and this",
    "start": "1189620",
    "end": "1195559"
  },
  {
    "text": "is how the microservices communicate with each other I'm going to cover that in a bit more detail and the events then",
    "start": "1195559",
    "end": "1202039"
  },
  {
    "text": "rules fire off for the events and say a rule comes from one place there's just a pattern matching engine which the the",
    "start": "1202039",
    "end": "1208100"
  },
  {
    "text": "rule fires on and sends an event to some other service which I think can then kick off and do something",
    "start": "1208100",
    "end": "1214220"
  },
  {
    "text": "and then also we have orchestration we do have a workflow that needs to happen in a certain amount of time and there's",
    "start": "1214220",
    "end": "1219620"
  },
  {
    "text": "some error handling that we need to consider within that and so we use AWS step functions to orchestrate the order from start to completion",
    "start": "1219620",
    "end": "1227000"
  },
  {
    "text": "but we also need this iot core and we do see need some real-time updates you want to know when your coffee is ready the",
    "start": "1227000",
    "end": "1232880"
  },
  {
    "text": "Barista wants to know when the next order is coming in people need to know when the story's open and so we need some kind of mechanism to talk from the",
    "start": "1232880",
    "end": "1239360"
  },
  {
    "text": "back end to the front end and that is using the real time via AWS iot call",
    "start": "1239360",
    "end": "1245480"
  },
  {
    "start": "1244000",
    "end": "1416000"
  },
  {
    "text": "so just get some of the kind of services let's see some of the ideas of the architectural ideas which we implemented",
    "start": "1245480",
    "end": "1252620"
  },
  {
    "text": "so obviously we've got a barista with a coffee machine and we need to sort of throttle the service because a barista",
    "start": "1252620",
    "end": "1259039"
  },
  {
    "text": "can only make a certain number of coffees sure if you've got two machines three machines maybe that's two or three times the amount of coffees but we need",
    "start": "1259039",
    "end": "1265700"
  },
  {
    "text": "to sort of using the tech be able to throttle the number of coffees and a general rule of",
    "start": "1265700",
    "end": "1270980"
  },
  {
    "text": "thumb we do is we do 10 drinks every five minutes and this prevents unauthorized users from either being",
    "start": "1270980",
    "end": "1277220"
  },
  {
    "text": "able to hack the system if somebody did the QR code on Twitter or Facebook somebody would be able to generate a whole bunch of orders we can block that",
    "start": "1277220",
    "end": "1283580"
  },
  {
    "text": "with this QR validator service and say that that QR code is no longer valid",
    "start": "1283580",
    "end": "1289580"
  },
  {
    "text": "um so that QR code does regenerate every five minutes and it's available for 10 scans now that's just a configuration",
    "start": "1289580",
    "end": "1296299"
  },
  {
    "text": "item we can increase that when we've done this in Milan and people love that expresso and express is a really quick",
    "start": "1296299",
    "end": "1301460"
  },
  {
    "text": "to make um we don't want people waiting and Baristas are super efficient uh you know we could up that it's just a",
    "start": "1301460",
    "end": "1306679"
  },
  {
    "text": "configuration item and then once the all the scans are used um it does says we are making drinks and that just allows",
    "start": "1306679",
    "end": "1312799"
  },
  {
    "text": "the Baristas to have this sort of throughput so in a way it's a sort of queuing mechanism for the Baristas to be able to handle the load and it's a very",
    "start": "1312799",
    "end": "1320480"
  },
  {
    "text": "simple way that the the Baristas don't need to tell people can you pause I'm not ready for a coffee the front end is",
    "start": "1320480",
    "end": "1325700"
  },
  {
    "text": "just gonna not display the QR code so people are not going to be able to order the drink so very effective queuing",
    "start": "1325700",
    "end": "1331100"
  },
  {
    "text": "mechanism and the way this is actually stored is via so via our managed API product API",
    "start": "1331100",
    "end": "1337100"
  },
  {
    "text": "Gateway and it's a Lambda function which runs some compute and just writes uh writes a um information to the nosql",
    "start": "1337100",
    "end": "1343580"
  },
  {
    "text": "database dynamodb and so what uh what starts is the display up first does a",
    "start": "1343580",
    "end": "1348799"
  },
  {
    "text": "request to dynamodb generates a well the display app generates um generates a QR code and then stores",
    "start": "1348799",
    "end": "1355039"
  },
  {
    "text": "the ID in dynamodb and then there's another service a validation service when you then order your coffee the",
    "start": "1355039",
    "end": "1360919"
  },
  {
    "text": "validation service from as part of the ordering app then makes a post request and that validates the QR code and ID to",
    "start": "1360919",
    "end": "1367100"
  },
  {
    "text": "see if that is done and you can see um sometimes as part of it it is the you you know you need to enter your",
    "start": "1367100",
    "end": "1373159"
  },
  {
    "text": "telephone number to uh to register sometimes if that takes a little bit too long that timeout happens and then it",
    "start": "1373159",
    "end": "1378860"
  },
  {
    "text": "comes back and says your token is invalid and that's that process in in action and all you can do is just scan",
    "start": "1378860",
    "end": "1384980"
  },
  {
    "text": "the QR code again and you'll sort of get a token from the next the next set of tokens",
    "start": "1384980",
    "end": "1391159"
  },
  {
    "text": "and this uses one of my favorite terms in it is the token bucket algorithm and this is a really sort of a good way to",
    "start": "1391159",
    "end": "1397580"
  },
  {
    "text": "be able to handle throughput and you have a number of tokens in a bucket and then you remove a token at a time until the bucket is empty and then every five",
    "start": "1397580",
    "end": "1404539"
  },
  {
    "text": "minutes in this case or it could be depending on your application you then refill the bucket with tokens and this allows you to manage the manage the",
    "start": "1404539",
    "end": "1411200"
  },
  {
    "text": "throughput and this is all just held very simply in the snow SQL database dynamodb",
    "start": "1411200",
    "end": "1416480"
  },
  {
    "start": "1416000",
    "end": "1791000"
  },
  {
    "text": "so the order processing service then orchestrates each order from start to completion and needs some coordination",
    "start": "1416480",
    "end": "1422780"
  },
  {
    "text": "so it's orchestration and I mentioned step functions before and this is literally one of the most powerful",
    "start": "1422780",
    "end": "1427820"
  },
  {
    "text": "services in AWS which many people may not be familiar with it is this resilient workflow automation service",
    "start": "1427820",
    "end": "1434299"
  },
  {
    "text": "that runs in the cloud up to crazy scale it's got a lot of built-in error handling and uh so this instead of",
    "start": "1434299",
    "end": "1441440"
  },
  {
    "text": "having to write the error handling in your own code you can just use this as a managed service in in a without having",
    "start": "1441440",
    "end": "1447140"
  },
  {
    "text": "to do so many if-10 statements and do your error handling and then you've got a downstream service you don't want to",
    "start": "1447140",
    "end": "1452179"
  },
  {
    "text": "overwhelm so maybe you need to do some exponential back off you need to do some Jitter or all this kind of stuff writing",
    "start": "1452179",
    "end": "1457760"
  },
  {
    "text": "that or writing all that code yourself in maybe a Lambda function can be onerous and cumbersome you can hand that",
    "start": "1457760",
    "end": "1463460"
  },
  {
    "text": "off to something like step functions to do that or orchestration as part of its error handling functionality",
    "start": "1463460",
    "end": "1469280"
  },
  {
    "text": "now step function is one of the most powerful things it can do is it's got this AWS service integration and it has",
    "start": "1469280",
    "end": "1475460"
  },
  {
    "text": "got native Integrations with a whole bunch of AWS services so it can run a Lambda function or it can talk behind an",
    "start": "1475460",
    "end": "1481940"
  },
  {
    "text": "API or it can grab something from some other kind of service but earlier this year the step functions team did this",
    "start": "1481940",
    "end": "1489620"
  },
  {
    "text": "awesome thing they've basically integrated with every AWS SDK call so I think they're now over 10 000 SDK calls",
    "start": "1489620",
    "end": "1496880"
  },
  {
    "text": "you can do so anything you can do with AWS SDK so we have you know more than 200 Services think of every API action",
    "start": "1496880",
    "end": "1503299"
  },
  {
    "text": "through all those 200 services and you can imagine there's a lot you can do with uh with the SDK but stepfunctions",
    "start": "1503299",
    "end": "1509539"
  },
  {
    "text": "has that natively built in you don't have to run your own code in a Lambda function to read something from a database or write something to an API or",
    "start": "1509539",
    "end": "1516860"
  },
  {
    "text": "pull something from a machine learning algorithm or do a text-to-speech translation or something like that step",
    "start": "1516860",
    "end": "1523640"
  },
  {
    "text": "functions can handle that natively just doing an SDK integration and there's a little bit of a configuration item",
    "start": "1523640",
    "end": "1529159"
  },
  {
    "text": "because obviously if you're talking to a machine learning service you need to send something to it it needs to be",
    "start": "1529159",
    "end": "1534260"
  },
  {
    "text": "formatted in a particular way that's just a blob of Json normally but that can be done as part of the step",
    "start": "1534260",
    "end": "1539900"
  },
  {
    "text": "functions managed service much simpler than you having to write your own code and then also uh you've got an execution",
    "start": "1539900",
    "end": "1546740"
  },
  {
    "text": "history so this is super useful you'll see that coming up shortly where you can view a graphical uh graphical way that",
    "start": "1546740",
    "end": "1553159"
  },
  {
    "text": "you can see exactly how things are flowing through your application through the workflow and obviously when you are designing an",
    "start": "1553159",
    "end": "1559520"
  },
  {
    "text": "application there's a sort of architecture and a design thing that you do out first and you know if we're thinking of doing coffee there's a",
    "start": "1559520",
    "end": "1566120"
  },
  {
    "text": "process of making the drink we need to check that the store is open you know we need to see whether the Baristas have",
    "start": "1566120",
    "end": "1571400"
  },
  {
    "text": "any capacity to serve any more drinks um you know there's some time out things we need to consider you know if the if",
    "start": "1571400",
    "end": "1578059"
  },
  {
    "text": "the customer hasn't ordered a a drink in five minutes maybe we should Auto cancel it we need to generate an order number",
    "start": "1578059",
    "end": "1583880"
  },
  {
    "text": "if the Barista needs to open and close the store we need to do all this kind of things and we need to handle",
    "start": "1583880",
    "end": "1589340"
  },
  {
    "text": "cancellations that are a customer does and this is a business workflow that you can think you would be working okay this",
    "start": "1589340",
    "end": "1595039"
  },
  {
    "text": "is a coffee shop but if you're working your own application you've got some kind of business process that's an orchestrated thing that's a workflow",
    "start": "1595039",
    "end": "1601159"
  },
  {
    "text": "that you can work with your business partners cool thing with uh step functions is",
    "start": "1601159",
    "end": "1606500"
  },
  {
    "text": "this recently released workflow Studio which allows you to use drag and drop functionality to build your",
    "start": "1606500",
    "end": "1612320"
  },
  {
    "text": "orchestration workflows now I've worked with AWS for a number of years I know this record talk is being",
    "start": "1612320",
    "end": "1619700"
  },
  {
    "text": "recorded I hope I'm not going to get into too much trouble to say that maybe AWS isn't the world leader in terms of",
    "start": "1619700",
    "end": "1625460"
  },
  {
    "text": "graphical design we've got a lot of console kind of things but you know a lot of it's CLI heavy",
    "start": "1625460",
    "end": "1630980"
  },
  {
    "text": "um some people may say we haven't got the most beautiful console and apologies to some of our console designers but the",
    "start": "1630980",
    "end": "1636980"
  },
  {
    "text": "Step functions team have really knocked it out of the park with being able to build this using drag and drop functionality the canvas is amazing and",
    "start": "1636980",
    "end": "1643760"
  },
  {
    "text": "this is a really beautiful way to be able to build applications just by dragging and dropping it on a canvas so",
    "start": "1643760",
    "end": "1649460"
  },
  {
    "text": "yeah kudos to the step functions team for doing this and this allows us to sort of model the",
    "start": "1649460",
    "end": "1655279"
  },
  {
    "text": "business workflow and translate that very easily into the the technical workflow with our with the step function",
    "start": "1655279",
    "end": "1662000"
  },
  {
    "text": "State machine and the things we're talking about earlier that we had in our sort of business idea well now you can translate it into the technical things",
    "start": "1662000",
    "end": "1668120"
  },
  {
    "text": "and um do the service Integrations if you're going to talk to a database directly or um it's an event onto event",
    "start": "1668120",
    "end": "1675200"
  },
  {
    "text": "bus or use a Lambda function to do some custom code you can just model that all within this step functions workflow if",
    "start": "1675200",
    "end": "1682640"
  },
  {
    "text": "you want to run things in parallel there's a map state so you can run the same task in parallel if you've got if then statements error handling all those",
    "start": "1682640",
    "end": "1688820"
  },
  {
    "text": "kind of things you can just model this visually now what is really cool is you can then take that picture as generated",
    "start": "1688820",
    "end": "1694820"
  },
  {
    "text": "and show it to your business person instead of having you know a whole chunk of Jason or yaml and putting them under",
    "start": "1694820",
    "end": "1701120"
  },
  {
    "text": "their desk and say well can you verify that this is all correct and everyone's going to scratch their head and go oh I don't understand that if there's a",
    "start": "1701120",
    "end": "1707480"
  },
  {
    "text": "visual representation it's so much easier to be able to understand that's what makes step functions really powerful",
    "start": "1707480",
    "end": "1713240"
  },
  {
    "text": "so if we look here as if we were doing the ordering but looking on the step functions kind of thing on the left hand side we've got your mobile phone and",
    "start": "1713240",
    "end": "1719419"
  },
  {
    "text": "you're ordering and at the stage we're doing the registration process and we're not even using the step functions yet",
    "start": "1719419",
    "end": "1724700"
  },
  {
    "text": "and you need to enter your code and then you need to you get the SMS codes back from the provider and this just allows",
    "start": "1724700",
    "end": "1731360"
  },
  {
    "text": "you to coordinate to to log in and basically that automatically starts off the step functions workflow and this",
    "start": "1731360",
    "end": "1737600"
  },
  {
    "text": "allows you to check that the stories open check that there's a capacity then",
    "start": "1737600",
    "end": "1742760"
  },
  {
    "text": "it's over to you is the order and you can you know order the coffee you're going to do you submit that and then your order lands up in the queue and",
    "start": "1742760",
    "end": "1749240"
  },
  {
    "text": "then another part of Step functions handles where now we've actually got a barista making an order this is sort of human interaction you need to wait for a",
    "start": "1749240",
    "end": "1755179"
  },
  {
    "text": "human to do some kind of thing and yes here it's a coffee but it could be something in your own business or on a factory floor and when the Barista is",
    "start": "1755179",
    "end": "1761179"
  },
  {
    "text": "finished they can make the drink on the tablet they'd do the drink is ready and the step functions workflow can resume",
    "start": "1761179",
    "end": "1767720"
  },
  {
    "text": "based on a task token and your um your step functions workflow can resume Anna",
    "start": "1767720",
    "end": "1774140"
  },
  {
    "text": "can carry on and you know finish the rest of the ordering kind of process and then also generate this order Journey",
    "start": "1774140",
    "end": "1779840"
  },
  {
    "text": "service which is a sort of personalized walkthrough of how your um how your coffee order went through",
    "start": "1779840",
    "end": "1786440"
  },
  {
    "text": "the whole step functions workflow which is personalized to you and how exciting you can even do that on on Twitter",
    "start": "1786440",
    "end": "1792200"
  },
  {
    "start": "1791000",
    "end": "2105000"
  },
  {
    "text": "to show it on Twitter next on the order manager service and we need to sort of handle and remember the",
    "start": "1792200",
    "end": "1798919"
  },
  {
    "text": "order as it goes through we need to know what stage it is in and we need to know what is happening while the order is in",
    "start": "1798919",
    "end": "1804919"
  },
  {
    "text": "progress and that's slightly separate from the from the orchestration and again dynamodb good nosql database to",
    "start": "1804919",
    "end": "1810559"
  },
  {
    "text": "store this and each order is persisted as a single road to Dynam table and then",
    "start": "1810559",
    "end": "1817039"
  },
  {
    "text": "as the step functions workflow go carries on it's going to update this table with the status of the order",
    "start": "1817039",
    "end": "1822320"
  },
  {
    "text": "whether it's been ordered or it's pending or it's completed and it's got details of the order which can be then",
    "start": "1822320",
    "end": "1828080"
  },
  {
    "text": "passed to various services to take action on that multiple ways to do this",
    "start": "1828080",
    "end": "1833360"
  },
  {
    "text": "um API Gateway can interact directly with dynamodb so this allows you to not",
    "start": "1833360",
    "end": "1839000"
  },
  {
    "text": "have um not have to have a custom Lambda function to Tool read and write from dynamodb it does use vtl and I'm not",
    "start": "1839000",
    "end": "1846500"
  },
  {
    "text": "looking uh clearly over here but I know some people cringe when they use vtl for velocity template language but it is",
    "start": "1846500",
    "end": "1853220"
  },
  {
    "text": "still a super powerful way for an API to be able to talk to be able to read and write directly from a database with",
    "start": "1853220",
    "end": "1859820"
  },
  {
    "text": "super low latency so the API Gateway is then has a number of endpoints which",
    "start": "1859820",
    "end": "1865220"
  },
  {
    "text": "we've configured my orders to view all of your orders um of all of the your own individual",
    "start": "1865220",
    "end": "1870679"
  },
  {
    "text": "orders all the orders which you can imagine the the Barista tablet is going to need to see all all the orders and",
    "start": "1870679",
    "end": "1876620"
  },
  {
    "text": "for an individual order ID and so this is just the API Gateway from the front end the front end talking through API",
    "start": "1876620",
    "end": "1882860"
  },
  {
    "text": "Gateway and reading and writing things from a database and generally they sort of you know",
    "start": "1882860",
    "end": "1888260"
  },
  {
    "text": "create a read update and delete and this is done you know for retrieving",
    "start": "1888260",
    "end": "1893659"
  },
  {
    "text": "information and also for putting information um putting information not also just",
    "start": "1893659",
    "end": "1899360"
  },
  {
    "text": "into the database but also when we want to stick we want to kick off the step functions workflow step functions also",
    "start": "1899360",
    "end": "1905299"
  },
  {
    "text": "integrates directly with API Gateway so you can just kick off the workflow from API Gateway",
    "start": "1905299",
    "end": "1910820"
  },
  {
    "text": "now when we initially built this we built this uh you know being serverless Keen people we've pulled we can use a",
    "start": "1910820",
    "end": "1917120"
  },
  {
    "text": "whole bunch of Lambda functions to do this so we um started writing all the all the Lambda functions and we need",
    "start": "1917120",
    "end": "1923179"
  },
  {
    "text": "needed ones to cancel an order and a different one to complete an order to make an order to create an order and that all sounded good but we just landed",
    "start": "1923179",
    "end": "1929659"
  },
  {
    "text": "up with a lot more Lambda functions and we had a you know more tightly coupled code base you can imagine that would be",
    "start": "1929659",
    "end": "1936200"
  },
  {
    "text": "some more dependencies which made it harder to release the software and just additional complexity",
    "start": "1936200",
    "end": "1942860"
  },
  {
    "text": "so as this got to a stage where it was more complexible version two um was apparently and immediately obvious that",
    "start": "1942860",
    "end": "1949700"
  },
  {
    "text": "we needed to do it and so version two well we now needed a bit more coordination we had a lot of work we",
    "start": "1949700",
    "end": "1955039"
  },
  {
    "text": "needed to do we could use another step functions to do this and one of the powerful things about step functions is you can have step",
    "start": "1955039",
    "end": "1961159"
  },
  {
    "text": "functions nested within other step functions so this is workflows nested within different workflows and in a way",
    "start": "1961159",
    "end": "1966440"
  },
  {
    "text": "we can see the logical picture here of how the the sort of happy path through the application is going to run and",
    "start": "1966440",
    "end": "1972200"
  },
  {
    "text": "actually it makes it a lot more simpler to understand and even more importantly it allows us to remove a whole bunch of",
    "start": "1972200",
    "end": "1977840"
  },
  {
    "text": "those Lambda functions so you can see here in fact before there were four or five Lambda functions a lot of them were",
    "start": "1977840",
    "end": "1983000"
  },
  {
    "text": "reading and writing to a database with the SDK Integrations you can read and write directly from Step functions and",
    "start": "1983000",
    "end": "1988880"
  },
  {
    "text": "yes we still do need a um a Lambda function to do some of our custom code but you know anytime you're removing a",
    "start": "1988880",
    "end": "1995179"
  },
  {
    "text": "Lambda function anytime you're removing code certainly with a code I write that's certainly going to be a winner in",
    "start": "1995179",
    "end": "2000220"
  },
  {
    "text": "my book so this was a really great way to be able to increase the availability reduce your code dependencies",
    "start": "2000220",
    "end": "2006960"
  },
  {
    "text": "so how do we then communicate between different microservices and event driven",
    "start": "2006960",
    "end": "2012039"
  },
  {
    "text": "architectures is something that's been really important for a number of years but you know to be honest it's it's been",
    "start": "2012039",
    "end": "2017380"
  },
  {
    "text": "really hard people have I think loved the ideas of using cues and streams and topics and events to route between",
    "start": "2017380",
    "end": "2023679"
  },
  {
    "text": "different parts of your application but you know with traditional style Services",
    "start": "2023679",
    "end": "2028720"
  },
  {
    "text": "it makes that really hard but now in the serverless world when we have managed Services it makes it really so much",
    "start": "2028720",
    "end": "2035320"
  },
  {
    "text": "easier to be able to run events between different parts of your application or between your different partners and so",
    "start": "2035320",
    "end": "2042399"
  },
  {
    "text": "the sort of idea the original idea of Eda is becoming so much more tangible and so much simpler because we have",
    "start": "2042399",
    "end": "2048280"
  },
  {
    "text": "serverless services to realize the benefits of that and you know some people who aren't",
    "start": "2048280",
    "end": "2053500"
  },
  {
    "text": "aren't aware of the sort of Eda thing and aren't aware of events are going you know what is an event and how can that",
    "start": "2053500",
    "end": "2058898"
  },
  {
    "text": "be important in my application I mean an event is basically a bit of Json so it's a little little bit of text and it's got",
    "start": "2058899",
    "end": "2065320"
  },
  {
    "text": "some detailed information about what the what the what the event is about and",
    "start": "2065320",
    "end": "2070358"
  },
  {
    "text": "it's got some uh envelope things about where it's come from and the source and the account and all that kind of thing",
    "start": "2070359",
    "end": "2076000"
  },
  {
    "text": "and basically you've got this uh disaggregation you've got a producer that creates events that produces events",
    "start": "2076000",
    "end": "2081580"
  },
  {
    "text": "and then consumers can listen to those events and do something with that so for serverless espresso we emit a",
    "start": "2081580",
    "end": "2088658"
  },
  {
    "text": "whole bunch of different events and so each of the different microservices you can see the name here we've got things like a config service order Journey Auto",
    "start": "2088659",
    "end": "2095320"
  },
  {
    "text": "processor validator service queue service what these do is once they've done their little bit of processing they",
    "start": "2095320",
    "end": "2101260"
  },
  {
    "text": "just emit an event and then other services can react to those events now built for the cloud we do have a an",
    "start": "2101260",
    "end": "2107740"
  },
  {
    "start": "2105000",
    "end": "2317000"
  },
  {
    "text": "event routing service called Amazon eventbridge which is super powerful and this is for uh has got a really powerful",
    "start": "2107740",
    "end": "2113859"
  },
  {
    "text": "rules engine which allows you to use pattern matching to be able to rule events route events to any other kind of",
    "start": "2113859",
    "end": "2119680"
  },
  {
    "text": "service before I just talk about how we use eventbridge within AWS and particularly within serverless",
    "start": "2119680",
    "end": "2127240"
  },
  {
    "text": "espresso we've got a lot of other messaging services we've got msk which is manage streaming for Kafka so if",
    "start": "2127240",
    "end": "2133839"
  },
  {
    "text": "you're using Kafka already within your environments or using rabbitmq within your environment we've got other managed",
    "start": "2133839",
    "end": "2139240"
  },
  {
    "text": "services that are serverless that allows you to run these different kinds of messaging messaging services so if you",
    "start": "2139240",
    "end": "2145240"
  },
  {
    "text": "want to take your messaging to the cloud and Kafka was complicated to run or rabbitmq was complicated to run",
    "start": "2145240",
    "end": "2150880"
  },
  {
    "text": "especially I've worked in environments before with doing it across multiple data centers and keeping things in sync",
    "start": "2150880",
    "end": "2156040"
  },
  {
    "text": "ah a bit of a headache you can use these services within the cloud much more simpler now and Amazon eventbridges sort",
    "start": "2156040",
    "end": "2162940"
  },
  {
    "text": "of an evolution of that to be able to take that sort of high throughput lower latency messaging systems and add a very",
    "start": "2162940",
    "end": "2169000"
  },
  {
    "text": "powerful rules engine to be able to react to events and so the event flow really drives the",
    "start": "2169000",
    "end": "2175240"
  },
  {
    "text": "application and that's why it's called event a rent driven architectures because event drives how the application",
    "start": "2175240",
    "end": "2181300"
  },
  {
    "text": "all uh um connects together and they're two different parts of it once um I'll",
    "start": "2181300",
    "end": "2187119"
  },
  {
    "text": "start with the step functions part because that's that sort of orchestrates everything and that's but that's mainly",
    "start": "2187119",
    "end": "2192160"
  },
  {
    "text": "within a microservice you've got a tightly bound transaction that you need to make sure can get rolled back using a",
    "start": "2192160",
    "end": "2198220"
  },
  {
    "text": "saga pattern or has branching or if then logic or has error handling so that you",
    "start": "2198220",
    "end": "2203260"
  },
  {
    "text": "would use step functions within a microservice to have their title couple tightly coupled code flows but then",
    "start": "2203260",
    "end": "2209380"
  },
  {
    "text": "between microservices you need to communicate an eventbridge is really a star for that to be able to react to",
    "start": "2209380",
    "end": "2214780"
  },
  {
    "text": "these events and to have different parts of your application communicating and the cool thing about event driven",
    "start": "2214780",
    "end": "2221260"
  },
  {
    "text": "architectures is when you then want to add something more and so previously going back to the previous slide we just",
    "start": "2221260",
    "end": "2227200"
  },
  {
    "text": "had the order manager the QR validator and the publisher service but we have this really good idea we wanted a journey uh order Journey service but we",
    "start": "2227200",
    "end": "2234460"
  },
  {
    "text": "didn't want to have to refactor the code for all the other services we just wanted to add some functionality without",
    "start": "2234460",
    "end": "2239680"
  },
  {
    "text": "having to go back and work on the producer to say oh when you also do this going right to another database",
    "start": "2239680",
    "end": "2245500"
  },
  {
    "text": "so we set up the order Journey service and that's a service that does your personalized journey of your coffee",
    "start": "2245500",
    "end": "2251980"
  },
  {
    "text": "order as it happens so you can see exactly what went through your service now um for a coffee ordering system you may",
    "start": "2251980",
    "end": "2257980"
  },
  {
    "text": "be not so passionately um interested exactly time stamps of all the different orders for your coffee but",
    "start": "2257980",
    "end": "2264160"
  },
  {
    "text": "you can imagine in a in a in a warehouse or a financial transaction or booking an airline or that kind of things you know",
    "start": "2264160",
    "end": "2270820"
  },
  {
    "text": "having a full audit history of exactly what's happened could be important so we wanted this additional functionality and",
    "start": "2270820",
    "end": "2275980"
  },
  {
    "text": "all we do is set up another rule on the event bus going instead of capturing events from a single microservice why",
    "start": "2275980",
    "end": "2281740"
  },
  {
    "text": "don't we just capture events from all the microservices and we could store it somewhere and then we can construct an HTML page or something to then replay or",
    "start": "2281740",
    "end": "2290440"
  },
  {
    "text": "we could replay all the history of those events so Superman that was additional functionality we didn't need to do anything with original producers we",
    "start": "2290440",
    "end": "2296619"
  },
  {
    "text": "didn't need to go to the order manager service and go ah when you've done this don't forget to write to this database",
    "start": "2296619",
    "end": "2301660"
  },
  {
    "text": "and when we went to the publisher service oh when you did this also write to that database that tightly couple your code and be a a mess to understand",
    "start": "2301660",
    "end": "2309420"
  },
  {
    "text": "with the events we could just subscribe to all the events on the event bus and we could then um we could then add them",
    "start": "2309420",
    "end": "2315880"
  },
  {
    "text": "to its own data store so many people are thinking specifically",
    "start": "2315880",
    "end": "2320920"
  },
  {
    "start": "2317000",
    "end": "2804000"
  },
  {
    "text": "with web applications like okay I know a bit about sync and I know a bit about async but how do they sort of fit",
    "start": "2320920",
    "end": "2326020"
  },
  {
    "text": "together and how can you sort of paint all this picture together so often when we talk about a client",
    "start": "2326020",
    "end": "2332140"
  },
  {
    "text": "talking to a service that the client is going to talk to a service and get an acknowledgment but now",
    "start": "2332140",
    "end": "2337359"
  },
  {
    "text": "ideally we want to use asynchronous communication because synchronous communication is tight coupling and is",
    "start": "2337359",
    "end": "2343359"
  },
  {
    "text": "always going to add latency if uh if client needs to talk to service a service a needs to talk to service B",
    "start": "2343359",
    "end": "2349060"
  },
  {
    "text": "before it can respond to the client every time you're going to add another hop you're going to add latency",
    "start": "2349060",
    "end": "2354160"
  },
  {
    "text": "so if you can it's always about good practice for client the client to talk to service a and service a to say yep I",
    "start": "2354160",
    "end": "2360820"
  },
  {
    "text": "got your request it's stored I'll handle it for you you don't need to worry and the client application could just carry",
    "start": "2360820",
    "end": "2365859"
  },
  {
    "text": "on with its business but in service a can then talk to service B and handle doing all of the communication on the",
    "start": "2365859",
    "end": "2371680"
  },
  {
    "text": "back end and whatever choreography or orchestration or backend ordering systems or you know Financial tracking",
    "start": "2371680",
    "end": "2377619"
  },
  {
    "text": "systems or cost modeling systems any kind of system in your application it can go do that in the back end",
    "start": "2377619",
    "end": "2384099"
  },
  {
    "text": "however there are still times which is obvious that when service B something in service B does need to then talk back to",
    "start": "2384099",
    "end": "2390520"
  },
  {
    "text": "the client how can it get a status update how can it how can it get that",
    "start": "2390520",
    "end": "2395740"
  },
  {
    "text": "information back to the client and so often people Implement something like polling and they say please do a",
    "start": "2395740",
    "end": "2401500"
  },
  {
    "text": "thing is it ready yet is it ready yet is it ready yet and uh I've got young kids and even when they were younger you can imagine they're sitting in the back of",
    "start": "2401500",
    "end": "2407440"
  },
  {
    "text": "the car and like Daddy I'll be there you know you've driven out of the driveway and you turn left to right and like Daddy are We There Yet that are we there",
    "start": "2407440",
    "end": "2413680"
  },
  {
    "text": "yet you know five hours later Daddy are you there are we there yet are we there yet you know drilling a hole in your",
    "start": "2413680",
    "end": "2419200"
  },
  {
    "text": "head and um that is the kind of thing of polling is and that's a wasted effort on",
    "start": "2419200",
    "end": "2425200"
  },
  {
    "text": "your child as well and wasted effort on your brain because you are continually using network throughput and compute to",
    "start": "2425200",
    "end": "2431260"
  },
  {
    "text": "literally just saying no no no no no all the time so um so you can use polling and that that",
    "start": "2431260",
    "end": "2438099"
  },
  {
    "text": "is all fine but there are you know it creates delays there are many empty calls that you need to do they're better ways for doing things",
    "start": "2438099",
    "end": "2443800"
  },
  {
    "text": "so websockets is a technology that many many people are familiar with and this is you know a bi-directional connection",
    "start": "2443800",
    "end": "2450040"
  },
  {
    "text": "between the front end and some sort of back-end service and uh the back-end",
    "start": "2450040",
    "end": "2455320"
  },
  {
    "text": "service thing can communicate with a front-end service to uh to send data information it's closer to real time it",
    "start": "2455320",
    "end": "2462160"
  },
  {
    "text": "certainly reduces the amount of messages because you just uh you the the client makes a request to the websocket service",
    "start": "2462160",
    "end": "2468099"
  },
  {
    "text": "and then when the websocket services radio just says here is the data but websockets let's all be honest isn't the",
    "start": "2468099",
    "end": "2473980"
  },
  {
    "text": "easiest thing to implement even behind managed API Services websockets can be tricky",
    "start": "2473980",
    "end": "2479680"
  },
  {
    "text": "so this is when I was mentioning before uh iot core is super useful for real-time messaging because this",
    "start": "2479680",
    "end": "2485920"
  },
  {
    "text": "abstracts the um websockets behind the scenes it still does use mqtt so if",
    "start": "2485920",
    "end": "2491140"
  },
  {
    "text": "people have used mqtt to do web sockets it's still using the same kind of thing so it's not something that's weird or",
    "start": "2491140",
    "end": "2496720"
  },
  {
    "text": "something as different as AWS and this is a really effective way to use websockets at scale behind the scenes",
    "start": "2496720",
    "end": "2503500"
  },
  {
    "text": "and so you can see here the front-end application uses a pub sub to then register within the AWS IIT core and",
    "start": "2503500",
    "end": "2509980"
  },
  {
    "text": "allows you to listen to the event updates and so it's going to do a subscription and it's then going to get the message",
    "start": "2509980",
    "end": "2516640"
  },
  {
    "text": "um and then the messages are categorized in topics if you've used any sort of Pub sub thing kind of before we have a",
    "start": "2516640",
    "end": "2522880"
  },
  {
    "text": "number of topics that the application uses now obviously we need to manage this at scale sure we've got I don't",
    "start": "2522880",
    "end": "2528520"
  },
  {
    "text": "know 100 coffees today could be a thousand coffees today but if you've got an application that maybe needs to update something for a thousand or a",
    "start": "2528520",
    "end": "2535599"
  },
  {
    "text": "million iOS or Android devices or tablets this obviously needs to work at scale",
    "start": "2535599",
    "end": "2540700"
  },
  {
    "text": "so an IT core can handle that scale for you at you know literally ridiculous levels and what we we actually have two",
    "start": "2540700",
    "end": "2548020"
  },
  {
    "text": "different topics that we use for I'm serverless espresso one is a global topic where all clients need to know the",
    "start": "2548020",
    "end": "2554500"
  },
  {
    "text": "information is the store open is the store closed um the Barista tablet needs to have",
    "start": "2554500",
    "end": "2559540"
  },
  {
    "text": "visibility of all the orders that are coming in not just one at a time so that's a sort of global topic and then",
    "start": "2559540",
    "end": "2565300"
  },
  {
    "text": "each um each smartphone that is using the application that's an individual user iot topic and you want to get the",
    "start": "2565300",
    "end": "2571960"
  },
  {
    "text": "update on oh when your audio is ready but you don't care even though it's your best friend ordering a coffee at the",
    "start": "2571960",
    "end": "2577119"
  },
  {
    "text": "same time you don't actually care on your phone whether their coffee where the coffee is ready",
    "start": "2577119",
    "end": "2582220"
  },
  {
    "text": "and actually it's super simple to set up this is just using the AWS SDK the iot data class using the mqtt protocol you",
    "start": "2582220",
    "end": "2589780"
  },
  {
    "text": "can see uh you know one line to create a connection a line to talk about what you're going to do with errors and then",
    "start": "2589780",
    "end": "2595180"
  },
  {
    "text": "how you're going to pass the Json payload and so you know once a funded application has made a connection just",
    "start": "2595180",
    "end": "2600819"
  },
  {
    "text": "Returns the messages and that is really really super simple it allows you to use use the benefit of synchronous",
    "start": "2600819",
    "end": "2606579"
  },
  {
    "text": "communication to get stuff back to the back end so yeah this is how you can then combine these different approaches and I'm",
    "start": "2606579",
    "end": "2613060"
  },
  {
    "text": "talking about AWS Technologies here but you know this is a really common people uh really common scenario for people",
    "start": "2613060",
    "end": "2618579"
  },
  {
    "text": "building web applications how do you handle synchronicity and asynchronicity and getting updates so you can see over",
    "start": "2618579",
    "end": "2624880"
  },
  {
    "text": "here that the front end is going to subscribe to the topics and this is going to be a synchronous request uh sorry before that before there's a",
    "start": "2624880",
    "end": "2632319"
  },
  {
    "text": "synchronous request before that where you're going to go to API Gateway and the config service and you're going to get the you know whether the story's",
    "start": "2632319",
    "end": "2638079"
  },
  {
    "text": "open you're going to get the menu items that's synchronous you're going to wait for that after that you want to then subscribe to the topics to get further",
    "start": "2638079",
    "end": "2644500"
  },
  {
    "text": "notifications and then you're just going to wait over there but you know behind the scenes there's this whole asynchronous background processing using",
    "start": "2644500",
    "end": "2650980"
  },
  {
    "text": "amazing step functions on eventbridge and all this kind of thing and that's happening at the back end process but",
    "start": "2650980",
    "end": "2656800"
  },
  {
    "text": "it's asynchronous and you don't your client is not then waiting um that the front-end web application is",
    "start": "2656800",
    "end": "2662859"
  },
  {
    "text": "not updating until the whole order is processed you don't want to do that you want your customers to be able to carry",
    "start": "2662859",
    "end": "2668319"
  },
  {
    "text": "on with their front-end web app and so the asynchronous happens and it can just and it can just send the message back",
    "start": "2668319",
    "end": "2673900"
  },
  {
    "text": "via mqtt using iot core back to the front end so now people think well surely this",
    "start": "2673900",
    "end": "2680380"
  },
  {
    "text": "must be a super complicated thing this must be really expensive to run in the cloud because well this is the cloud and",
    "start": "2680380",
    "end": "2686619"
  },
  {
    "text": "there's a lot of different Services over here and everything is going and what is interesting is this costs if",
    "start": "2686619",
    "end": "2692260"
  },
  {
    "text": "we run it for I think this was done for about nine oh there we go 960 customers uh per day and basically the cost is 53",
    "start": "2692260",
    "end": "2701500"
  },
  {
    "text": "cents the most expensive part of it which is added on to that is the SMS messages which is used by Amazon SNS",
    "start": "2701500",
    "end": "2708640"
  },
  {
    "text": "which is our notification service so we don't have control over that that is literally telecoms providers charging us",
    "start": "2708640",
    "end": "2714640"
  },
  {
    "text": "for SMS messages um so sorry that's uh jumped without me realizing",
    "start": "2714640",
    "end": "2720099"
  },
  {
    "text": "um so uh okay so for for the rest of the whole back end for nearly a thousand",
    "start": "2720099",
    "end": "2725200"
  },
  {
    "text": "cups of coffee a day it's going to be 53 cents plus your SMS messages now you could implement this and you could use",
    "start": "2725200",
    "end": "2730300"
  },
  {
    "text": "email notification which would be free or some other notification system um but uh think of it you running a",
    "start": "2730300",
    "end": "2736420"
  },
  {
    "text": "coffee store you're serving a thousand coffees a day and it's going to cost you 50 cents to run in in terms of a",
    "start": "2736420",
    "end": "2742180"
  },
  {
    "text": "scalable um infrastructure if you were there then to run 10 000 coffees a day uh you know that's going to be um then",
    "start": "2742180",
    "end": "2748660"
  },
  {
    "text": "that's going to be five dollars so five dollars to serve ten thousand cups of coffee today for a fully managed",
    "start": "2748660",
    "end": "2753700"
  },
  {
    "text": "back-end service I think is pretty impressive AWS also has a very generous free tier",
    "start": "2753700",
    "end": "2759460"
  },
  {
    "text": "so you get a certain number of invocations of Lambda functions and things that you can things that you can",
    "start": "2759460",
    "end": "2765640"
  },
  {
    "text": "use for free and some step functions workflows that you can run for free and these are in perpetuity every single",
    "start": "2765640",
    "end": "2772060"
  },
  {
    "text": "month so actually if you were running this Lambda functions for example you get a million free invocations per month",
    "start": "2772060",
    "end": "2778420"
  },
  {
    "text": "so a lot of businesses sorry it does keep jumping don't know why um if you're using a less than a million",
    "start": "2778420",
    "end": "2784180"
  },
  {
    "text": "invocations uh of Lambda every month that is literally going to be free so we have many businesses in AWS that are all",
    "start": "2784180",
    "end": "2789880"
  },
  {
    "text": "within the free tier using all these powerful serverless services and it costs them and it costs them nothing and",
    "start": "2789880",
    "end": "2795880"
  },
  {
    "text": "that's also going to scale with your business uh if your coffee shop unfortunately isn't going to be hugely successful you haven't got this ongoing",
    "start": "2795880",
    "end": "2802180"
  },
  {
    "text": "cost that is happening so in summary we are building this is a demonstration of",
    "start": "2802180",
    "end": "2808839"
  },
  {
    "start": "2804000",
    "end": "2930000"
  },
  {
    "text": "how to use a serverless Technologies to build a front-end web app to connect it with a whole uh back-end system there's",
    "start": "2808839",
    "end": "2815920"
  },
  {
    "text": "some authorization logic there's some custom routing there's some bounded workflows there is orchestration to use",
    "start": "2815920",
    "end": "2822099"
  },
  {
    "text": "step functions to orchestrate within a microservice there's then using a vent bridge to talk between microservices and",
    "start": "2822099",
    "end": "2827980"
  },
  {
    "text": "have a very decoupled very powerful clean and understandable architectural",
    "start": "2827980",
    "end": "2833200"
  },
  {
    "text": "pattern that can grow with your business and then also be able to allow iot core to then talk back to the front end and",
    "start": "2833200",
    "end": "2840579"
  },
  {
    "text": "you know combining these different approaches where initially it may look a little bit complex but it does give you really amazing",
    "start": "2840579",
    "end": "2847300"
  },
  {
    "text": "flexibility to build applications and using a serverless approach allows you to not have to worry about a whole bunch",
    "start": "2847300",
    "end": "2853240"
  },
  {
    "text": "of the infrastructure that you need to manage so um in wrapping up um we have this website",
    "start": "2853240",
    "end": "2860380"
  },
  {
    "text": "called serverlessland.com and this is everything to do about serverless and AWS we've got links to a number of blog",
    "start": "2860380",
    "end": "2866200"
  },
  {
    "text": "posts and a number of learning paths and a number of videos I run a weekly twitch stream called serverless office hours",
    "start": "2866200",
    "end": "2872380"
  },
  {
    "text": "which for your time zone would be um Tuesday at uh 7 pm at 6 PM in the UK",
    "start": "2872380",
    "end": "2878200"
  },
  {
    "text": "where I'm from so yeah join us for that and ask your serverless questions also there's actually a workshop and I'm",
    "start": "2878200",
    "end": "2884619"
  },
  {
    "text": "silly I didn't think to put a link on that there's a workshop for building serverless espresso so you could literally build the whole back end",
    "start": "2884619",
    "end": "2889960"
  },
  {
    "text": "yourself it only takes I think two and a half hours and you can explore all the services and see how they interact how the front end and the back end",
    "start": "2889960",
    "end": "2895780"
  },
  {
    "text": "communicate with each other so if you go to serverlessland.com um uh there is a link to the workshop or",
    "start": "2895780",
    "end": "2901359"
  },
  {
    "text": "if you just search for serverless espresso or solo espresso workshop on Google or any other search engine that",
    "start": "2901359",
    "end": "2907720"
  },
  {
    "text": "will give you all the information you need so really fun and practical way to learn about AWS learn about how",
    "start": "2907720",
    "end": "2913720"
  },
  {
    "text": "serverless can help your business and um if you're really Keen you can all the codes available on GitHub you can start",
    "start": "2913720",
    "end": "2920079"
  },
  {
    "text": "up your own service and maybe I don't know do hot dogs or pizza or beer or something any maybe impress your friends",
    "start": "2920079",
    "end": "2926380"
  },
  {
    "text": "maybe that's a sort of nerdy techy kind of thing but you know people like to build some kind of stuff so really",
    "start": "2926380",
    "end": "2932140"
  },
  {
    "start": "2930000",
    "end": "2949000"
  },
  {
    "text": "thanks so much for spending time uh time today [Applause]",
    "start": "2932140",
    "end": "2940530"
  }
]