[
  {
    "text": "[Applause]",
    "start": "4500",
    "end": "8780"
  },
  {
    "text": "thank you um yes my name is Beth scari I work for Deus a technology consulting company",
    "start": "9559",
    "end": "16440"
  },
  {
    "text": "that is based in Melbourne in Sydney um we like to build products for ourselves and our partners",
    "start": "16440",
    "end": "23580"
  },
  {
    "text": "um like the Qantas travel companion app or the nib chatbot or",
    "start": "23580",
    "end": "30619"
  },
  {
    "text": "realestate.com.aus VR real estate app now today I'm going to talk to you about",
    "start": "30619",
    "end": "36980"
  },
  {
    "text": "how you can deliver customer value faster using contract tests",
    "start": "36980",
    "end": "42420"
  },
  {
    "text": "before I start I just want to get a little bit of a feel for who's in the audience today",
    "start": "42420",
    "end": "47780"
  },
  {
    "text": "when it comes to testing I guess there's two ends on a spectrum of the way you",
    "start": "47780",
    "end": "54600"
  },
  {
    "text": "approach it you might want to have absolute utter confidence to put before you deploy so",
    "start": "54600",
    "end": "61620"
  },
  {
    "text": "you test and test everything to the nth degree before your release or you might prioritize speed",
    "start": "61620",
    "end": "68939"
  },
  {
    "text": "so your approach might be more along the lines of let's just stick everything out there as soon as we can and we'll just",
    "start": "68939",
    "end": "75000"
  },
  {
    "text": "rely on the fact that we're moving very fast to recover from any mistakes now obviously most of us are going to be",
    "start": "75000",
    "end": "81000"
  },
  {
    "text": "sitting somewhere in the middle but just to help me get engaged in my audience stick your hand up if your teams would",
    "start": "81000",
    "end": "88140"
  },
  {
    "text": "fall more on the confidence style side of that Spectrum",
    "start": "88140",
    "end": "93479"
  },
  {
    "text": "yeah a lot of confidence people and if you're more on the speed side of that Spectrum stick your hand up",
    "start": "93479",
    "end": "101719"
  },
  {
    "text": "yeah pretty even split actually okay so let me start today with a story",
    "start": "101759",
    "end": "109200"
  },
  {
    "text": "now it's a story of a made-up company called soundify",
    "start": "109200",
    "end": "114299"
  },
  {
    "text": "but it's not really a made-up company because it's not really a made-up story it's a story that we've all lived",
    "start": "114299",
    "end": "121200"
  },
  {
    "text": "through it's a story about solving problems and then discovering new",
    "start": "121200",
    "end": "126420"
  },
  {
    "text": "problems um",
    "start": "126420",
    "end": "131819"
  },
  {
    "text": "let's imagine that I've been working at sandify for a few years and you're joining my team so I'm going to give you",
    "start": "131819",
    "end": "137819"
  },
  {
    "text": "a bit of a history of the company now sandify is obviously an audio music",
    "start": "137819",
    "end": "143879"
  },
  {
    "text": "streaming company and we're going to be running a new project to integrate some new sources of audio",
    "start": "143879",
    "end": "150739"
  },
  {
    "text": "now there are three teams that are going to be involved in this project there's the core platform team which",
    "start": "150900",
    "end": "156660"
  },
  {
    "text": "looks after the core platform it provides the enterprise-wide services",
    "start": "156660",
    "end": "161819"
  },
  {
    "text": "and is going to be doing a lot of the grunt work in this project now there's the experience team that",
    "start": "161819",
    "end": "167640"
  },
  {
    "text": "looks after the react UI and there's the API team that looks after the API that",
    "start": "167640",
    "end": "173819"
  },
  {
    "text": "sits between these two projects um these two Services now we've ended up",
    "start": "173819",
    "end": "179580"
  },
  {
    "text": "with this structure after lots of re-structures to help us become more agile",
    "start": "179580",
    "end": "186440"
  },
  {
    "text": "now when it comes to the working rhythm different teams in our company used to",
    "start": "187860",
    "end": "194040"
  },
  {
    "text": "work with different patterns the experienced teams and the API teams",
    "start": "194040",
    "end": "200159"
  },
  {
    "text": "could deliver pretty quickly and they would iterate quickly and deliver often but the core platform team proceeded to",
    "start": "200159",
    "end": "207900"
  },
  {
    "text": "work as it always had the old school of software development with a big upfront",
    "start": "207900",
    "end": "214560"
  },
  {
    "text": "design and then a build and then an integration test phase and then a release at the end",
    "start": "214560",
    "end": "221900"
  },
  {
    "text": "now the problem with this was the API and the UI teams had the ability",
    "start": "222239",
    "end": "229860"
  },
  {
    "text": "to release customer value in a fairly consistent manner over time",
    "start": "229860",
    "end": "234900"
  },
  {
    "text": "but whenever we had anything that relied on the core platform we had to wait",
    "start": "234900",
    "end": "240420"
  },
  {
    "text": "until the integration test phase of the core platform before we could find out if what we had built was actually going",
    "start": "240420",
    "end": "246480"
  },
  {
    "text": "to work now the predictable Ada come of this was",
    "start": "246480",
    "end": "251700"
  },
  {
    "text": "that um there was always going to be problems at the end of the project",
    "start": "251700",
    "end": "258239"
  },
  {
    "text": "the release graph for the customer value of the customer value for the core product looked like this nothing nothing",
    "start": "258239",
    "end": "265139"
  },
  {
    "text": "nothing nothing everything from the program perspective whenever we",
    "start": "265139",
    "end": "271080"
  },
  {
    "text": "needed to make changes that involve the core we had to release the features untested",
    "start": "271080",
    "end": "276120"
  },
  {
    "text": "and toggled off now the predictable outcome of this was those integration issues now it would",
    "start": "276120",
    "end": "282720"
  },
  {
    "text": "always require rework we'd have to go back and do make changes to code that might have been written weeks or months",
    "start": "282720",
    "end": "288419"
  },
  {
    "text": "ago as everyone tried really hard at the end of the project to make sure all the services lined up to get ready for that",
    "start": "288419",
    "end": "294960"
  },
  {
    "text": "final release into production things got stressful and timelines got",
    "start": "294960",
    "end": "300000"
  },
  {
    "text": "dicey pretty much everyone was unhappy with the situation",
    "start": "300000",
    "end": "305639"
  },
  {
    "text": "our customers were leaving us for competitors who could deliver cool new features more quickly our business owner was unhappy because",
    "start": "305639",
    "end": "312419"
  },
  {
    "text": "we were lifting customers the delivery manager was stressed about the risk and the amount of rework and",
    "start": "312419",
    "end": "318419"
  },
  {
    "text": "the wasted time and the teams hated the context switching and the rework and the delivery stress",
    "start": "318419",
    "end": "325759"
  },
  {
    "text": "it was clear that something had to change and that that bottleneck was the core platform",
    "start": "325860",
    "end": "332100"
  },
  {
    "text": "so we did the obvious thing obvious but not necessarily easy we talked the core",
    "start": "332100",
    "end": "337560"
  },
  {
    "text": "platform into changing their working pattern so they would also release in",
    "start": "337560",
    "end": "342660"
  },
  {
    "text": "two weekly iterations along with the rest of us now change is hard and the team wasn't",
    "start": "342660",
    "end": "348840"
  },
  {
    "text": "really keen on this but on the upside we started to see a customer",
    "start": "348840",
    "end": "355820"
  },
  {
    "text": "value graph that looked like this we get small batches of customer value outer in",
    "start": "355820",
    "end": "362639"
  },
  {
    "text": "in more consistently over the project smaller feedback Cycles also meant we",
    "start": "362639",
    "end": "369419"
  },
  {
    "text": "were able to respond more quickly to changes now the iterating was really helpful",
    "start": "369419",
    "end": "374639"
  },
  {
    "text": "because it meant that we could find those integration bugs earlier and it reduced the risk of the project",
    "start": "374639",
    "end": "380580"
  },
  {
    "text": "however we'd fix some problems and we'd introduce some new problems",
    "start": "380580",
    "end": "386100"
  },
  {
    "text": "there was now a whole lot of overhead in this release process because the core platform was still released manually",
    "start": "386100",
    "end": "392819"
  },
  {
    "text": "we need more testers to prevent regressions we still had a four week turnaround on our integration bugs",
    "start": "392819",
    "end": "399060"
  },
  {
    "text": "because it would take one iteration to find them and then another iteration to fix them",
    "start": "399060",
    "end": "405020"
  },
  {
    "text": "by the next project the core team had gotten completely sick of doing these day-long manual releases so they spent",
    "start": "405360",
    "end": "410819"
  },
  {
    "text": "some time up front to automate the process now we had three constantly moving",
    "start": "410819",
    "end": "417960"
  },
  {
    "text": "projects so we introduced a suite of end tests because this is how we do modern",
    "start": "417960",
    "end": "423539"
  },
  {
    "text": "software development right we automate all the things we iterate we test all the things we automatedly test all the",
    "start": "423539",
    "end": "430620"
  },
  {
    "text": "things and we felt pretty smug as we looked at how far we've come in the last few years",
    "start": "430620",
    "end": "436800"
  },
  {
    "text": "we've gone from a small team with a mostly manual process to having multiple",
    "start": "436800",
    "end": "442440"
  },
  {
    "text": "teams and automated everything we're living the dream right",
    "start": "442440",
    "end": "448460"
  },
  {
    "text": "but it didn't feel as good as we'd expected",
    "start": "449220",
    "end": "454759"
  },
  {
    "text": "yes we've been able to reduce the integration risk on our project and we had a bag turnaround time that was",
    "start": "455520",
    "end": "462599"
  },
  {
    "text": "within a few days and we were able to deliver bits and pieces of customer value throughout our project",
    "start": "462599",
    "end": "469199"
  },
  {
    "text": "however with solved some problems and introduce some new problems we had these slow tests they took",
    "start": "469199",
    "end": "475979"
  },
  {
    "text": "multiple hours to test everything that we thought we should they were really easy to break and very",
    "start": "475979",
    "end": "481500"
  },
  {
    "text": "hard to fix because they covered so much code they scaled really badly because the",
    "start": "481500",
    "end": "486660"
  },
  {
    "text": "test variations you had to go through steps you'd already covered to get to the bit you actually cared about",
    "start": "486660",
    "end": "492419"
  },
  {
    "text": "the failing test became the Norms they got ignored and they weren't actually giving us very good feedback on our code",
    "start": "492419",
    "end": "498120"
  },
  {
    "text": "quality and all this test maintenance took away time from actually doing the important",
    "start": "498120",
    "end": "503879"
  },
  {
    "text": "thing working on the features we'd fix some problems yes but we'd",
    "start": "503879",
    "end": "510960"
  },
  {
    "text": "introduce some new problems instead of that acute pain at the end of the project we had this constant",
    "start": "510960",
    "end": "517560"
  },
  {
    "text": "background pain and even though we were delivering customer value and and all the things we",
    "start": "517560",
    "end": "524640"
  },
  {
    "text": "thought we should we still had this multi-day turnaround on our integration bugs felt like the tests were breaking",
    "start": "524640",
    "end": "531300"
  },
  {
    "text": "all the time and the old school developers on the core platform you're nostalgically for",
    "start": "531300",
    "end": "538740"
  },
  {
    "text": "the good old days when they could just sit down and code in peace for weeks without talking to anybody and then get",
    "start": "538740",
    "end": "544200"
  },
  {
    "text": "it all working in the end of one pizza and cokefield Marathon they didn't want to appear out of date",
    "start": "544200",
    "end": "550500"
  },
  {
    "text": "amongst all these hipster react Developers but secretly they were asking why are we",
    "start": "550500",
    "end": "556080"
  },
  {
    "text": "doing these integration tests now it might seem like a really dumb question but it's actually a really good",
    "start": "556080",
    "end": "561959"
  },
  {
    "text": "question why do we do integration tests what goal are you trying to achieve",
    "start": "561959",
    "end": "568980"
  },
  {
    "text": "well we know in any system with more moving more than one moving part",
    "start": "568980",
    "end": "574920"
  },
  {
    "text": "there are going to be integration issues it's not a matter of if it's a matter of how many",
    "start": "574920",
    "end": "580740"
  },
  {
    "text": "we want to find those integration issues before we go to production not after",
    "start": "580740",
    "end": "587300"
  },
  {
    "text": "now unfortunately the these end-to-end tests that we'd written weren't really paying us back they were",
    "start": "587519",
    "end": "594180"
  },
  {
    "text": "higher cost but they weren't really helping us find the bugs we realized we've gotten things a little",
    "start": "594180",
    "end": "599820"
  },
  {
    "text": "bit out of balance now everyone will have seen the testing pyramid",
    "start": "599820",
    "end": "605459"
  },
  {
    "text": "it expresses the idea that we want a lot of fast low-cost unit tests fewer",
    "start": "605459",
    "end": "611580"
  },
  {
    "text": "integrated tests where we use real um real components and then fewer again",
    "start": "611580",
    "end": "617640"
  },
  {
    "text": "end-to-end tests that test our entire system now the unit tests are really good",
    "start": "617640",
    "end": "623580"
  },
  {
    "text": "because they've gave us quick feedback they tell us exactly where the problem is when they fail but they don't give us",
    "start": "623580",
    "end": "630240"
  },
  {
    "text": "a lot of confidence because their scope is small then to end tests are really good for",
    "start": "630240",
    "end": "635339"
  },
  {
    "text": "giving us confidence but they give us slow feedback and when they fail they don't really tell us exactly where in",
    "start": "635339",
    "end": "641459"
  },
  {
    "text": "the process things have gone wrong now in our enthusiasm for testing the",
    "start": "641459",
    "end": "646680"
  },
  {
    "text": "world we had far too many in dentists and they were testing too much",
    "start": "646680",
    "end": "653459"
  },
  {
    "text": "we really wanted to cut them down to a manageable set of happy paths but we",
    "start": "653459",
    "end": "659220"
  },
  {
    "text": "were afraid that as Paul is there working if we cut back on those tests we",
    "start": "659220",
    "end": "664560"
  },
  {
    "text": "would be letting more bugs into production and give me a note if this is a dilemma",
    "start": "664560",
    "end": "670260"
  },
  {
    "text": "you have found yourself in yeah we don't want to have too many tests but we don't want bugs in",
    "start": "670260",
    "end": "676920"
  },
  {
    "text": "production what if there was another way what if we could find these integration bugs",
    "start": "676920",
    "end": "683640"
  },
  {
    "text": "without having to run these integration tests",
    "start": "683640",
    "end": "687980"
  },
  {
    "text": "does it sound crazy let me walk you through a scenario",
    "start": "688680",
    "end": "694339"
  },
  {
    "text": "now imagine two integrated components we're going to call them the consumer and the provider",
    "start": "694500",
    "end": "700380"
  },
  {
    "text": "now instead of using a real provider we use a mock provider and we test that the",
    "start": "700380",
    "end": "707339"
  },
  {
    "text": "consumer makes the right calls to the provider and can handle the responses this is nothing new like we do this all",
    "start": "707339",
    "end": "713760"
  },
  {
    "text": "the time right but what we're missing from this diagram as you can see is the other half",
    "start": "713760",
    "end": "720959"
  },
  {
    "text": "we're missing the tests that show that the provider can accept the calls the consumer makes",
    "start": "720959",
    "end": "727980"
  },
  {
    "text": "and handle the risk actually Returns the responses that the provider expects",
    "start": "727980",
    "end": "734940"
  },
  {
    "text": "if we have these two sets of tests we've achieved test symmetry",
    "start": "734940",
    "end": "740459"
  },
  {
    "text": "we've we tested our consumer with a mock and we have tests that show that our mock behaves the same way as our provide",
    "start": "740459",
    "end": "747360"
  },
  {
    "text": "real provider test symmetry solves a lot of problems",
    "start": "747360",
    "end": "754079"
  },
  {
    "text": "it gives us really fast feedback um you don't have to deploy the world to",
    "start": "754079",
    "end": "760320"
  },
  {
    "text": "run these tests you can run them from your local machines or from just a self-contained CI environment",
    "start": "760320",
    "end": "767060"
  },
  {
    "text": "because you're running these tests in a controlled environment you can use your normal debugging tools so they're much",
    "start": "767060",
    "end": "772560"
  },
  {
    "text": "easier to fix problems when they happen you don't have to troll through hours of Splunk logs",
    "start": "772560",
    "end": "779040"
  },
  {
    "text": "however we've fixed some problems and we've introduced some new problems",
    "start": "779040",
    "end": "785600"
  },
  {
    "text": "we now have two different sets of tests in two different sets of two different code bases maintained by two different",
    "start": "785760",
    "end": "793139"
  },
  {
    "text": "teams and they might start off looking nice and neat like this",
    "start": "793139",
    "end": "799260"
  },
  {
    "text": "but sooner or later somebody's going to make a change and pretty soon they're going to like look like this and there",
    "start": "799260",
    "end": "805260"
  },
  {
    "text": "won't be anything that fails to let us know about the mismatch and expectations every developer knows this is the",
    "start": "805260",
    "end": "812459"
  },
  {
    "text": "problem with mux what we're missing here is a way to keep",
    "start": "812459",
    "end": "817620"
  },
  {
    "text": "these two sets of tests in sync with each other we're missing the contract",
    "start": "817620",
    "end": "824760"
  },
  {
    "text": "let's go through that um testing diagram again but this time we'll make a important change",
    "start": "824760",
    "end": "832279"
  },
  {
    "text": "right we test that the consumer makes the right calls to the provider",
    "start": "833519",
    "end": "839100"
  },
  {
    "text": "and can handle the responses it expects back but then",
    "start": "839100",
    "end": "844200"
  },
  {
    "text": "we record that request and the expected response to a file",
    "start": "844200",
    "end": "849300"
  },
  {
    "text": "this is the contract file then we take that file over to the",
    "start": "849300",
    "end": "854760"
  },
  {
    "text": "provider and we replay the request and we look at the response that comes back and make",
    "start": "854760",
    "end": "861480"
  },
  {
    "text": "sure that it matches the expected response this is called verifying the",
    "start": "861480",
    "end": "866639"
  },
  {
    "text": "contract and we've just achieved the benefits of integration tests with the speed and",
    "start": "866639",
    "end": "874260"
  },
  {
    "text": "ease of unit tests contracts help us solve the problem of",
    "start": "874260",
    "end": "880980"
  },
  {
    "text": "test Symmetry and instead of introducing a whole heap of new problems we actually get some really good benefits",
    "start": "880980",
    "end": "887639"
  },
  {
    "text": "this fast feedback that I mentioned means that our integration bug turnaround time has gone down for months",
    "start": "887639",
    "end": "893639"
  },
  {
    "text": "or weeks to minutes if you're on the provider side you'll",
    "start": "893639",
    "end": "899459"
  },
  {
    "text": "know before you commit whether or not your code is going to work with all the consumers so you're reducing the number",
    "start": "899459",
    "end": "905760"
  },
  {
    "text": "of bugs that even get committed into the code base",
    "start": "905760",
    "end": "910279"
  },
  {
    "text": "contracts allow you to make changes quickly because each pair of services has its own contract you can identify",
    "start": "910980",
    "end": "917760"
  },
  {
    "text": "which services are affected when you need to make it when you need to make a change",
    "start": "917760",
    "end": "923660"
  },
  {
    "text": "contracts allow you to deploy independently once both sides of the contract are passing you can feel free",
    "start": "924300",
    "end": "931560"
  },
  {
    "text": "to deploy either side without having to pre-test groups of applications in a big batch and then deploy them all together",
    "start": "931560",
    "end": "939620"
  },
  {
    "text": "big integration test Suites create a bottleneck but contract tests allow each",
    "start": "939899",
    "end": "945180"
  },
  {
    "text": "service to move at its own pace now one of the best side effects of",
    "start": "945180",
    "end": "950760"
  },
  {
    "text": "using this pattern is that you're actually going to end up with better designed apis",
    "start": "950760",
    "end": "956339"
  },
  {
    "text": "now the process that I've just described to you before is called consumer driven contracts",
    "start": "956339",
    "end": "963000"
  },
  {
    "text": "traditional API design when something like this I have a database",
    "start": "963000",
    "end": "968820"
  },
  {
    "text": "and I'm just going to get the data out of my database into an HTTP response in the simplest way possible",
    "start": "968820",
    "end": "975240"
  },
  {
    "text": "Ruby on Rails I'm looking at you here and we make sure that the consumer makes the right calls to the provider",
    "start": "975240",
    "end": "984320"
  },
  {
    "text": "consumer-driven contracts turns that process around we ask we start by asking as a consumer how do I want to use this",
    "start": "984320",
    "end": "992399"
  },
  {
    "text": "data what format makes sense for me and then we make sure the provider can",
    "start": "992399",
    "end": "997500"
  },
  {
    "text": "actually meet those expectations this means we end up with a API design that is built for real-world situations",
    "start": "997500",
    "end": "1005500"
  },
  {
    "text": "it's tdd for services",
    "start": "1005500",
    "end": "1010180"
  },
  {
    "text": "now I've told you a bit about what contracts can do for you let me tell you a bit about what they",
    "start": "1011420",
    "end": "1017300"
  },
  {
    "text": "don't do now when people start using contracts",
    "start": "1017300",
    "end": "1022480"
  },
  {
    "text": "especially on the consumer side they have this tendency to try and use the contracts to make sure that the provider",
    "start": "1022480",
    "end": "1029480"
  },
  {
    "text": "is implemented correctly the provider is doing the right thing when I make this request but that's not the job of",
    "start": "1029480",
    "end": "1036140"
  },
  {
    "text": "contract tests that job belongs to the functional tests in the provider's own code base",
    "start": "1036140",
    "end": "1042260"
  },
  {
    "text": "what the contract tests are about are making sure that the consumer and the provider have a shared and correct",
    "start": "1042260",
    "end": "1048679"
  },
  {
    "text": "understanding of the messages that are going to flow between the two of them",
    "start": "1048679",
    "end": "1053919"
  },
  {
    "text": "similarly contract tests are not load tests or performance tests",
    "start": "1054559",
    "end": "1060100"
  },
  {
    "text": "now it takes two to tango when you're doing contract tests it requires one",
    "start": "1060380",
    "end": "1065660"
  },
  {
    "text": "party to write a contract and another party to verify the contract so they're not the best use case for",
    "start": "1065660",
    "end": "1072500"
  },
  {
    "text": "public apis and when I mean public I mean lots of consumers and you don't",
    "start": "1072500",
    "end": "1077720"
  },
  {
    "text": "know who's consuming them it's just out there for anybody to use",
    "start": "1077720",
    "end": "1082840"
  },
  {
    "text": "um Good Luck writing a contract for someone like GitHub and saying hey GitHub please verify my contract it's",
    "start": "1082880",
    "end": "1089240"
  },
  {
    "text": "not going to happen imagine if you are GitHub and trying to maintain a contract with hundreds of",
    "start": "1089240",
    "end": "1094580"
  },
  {
    "text": "thousands of users that's not going to happen either that's where the traditional version the versioning approaches are more useful",
    "start": "1094580",
    "end": "1102460"
  },
  {
    "text": "consumer-driven contracts have this sweet spot for internal apis where the",
    "start": "1102460",
    "end": "1108500"
  },
  {
    "text": "consumer and the provider teams are few enough that they can actually maintain some level of personal relationship",
    "start": "1108500",
    "end": "1114260"
  },
  {
    "text": "between them and they're not going to make every integration testing problem have",
    "start": "1114260",
    "end": "1120440"
  },
  {
    "text": "magically disappear if you do contract tests you do actually have to be a bit smarter about the way",
    "start": "1120440",
    "end": "1126799"
  },
  {
    "text": "you test integration tests might be a pain in the",
    "start": "1126799",
    "end": "1133520"
  },
  {
    "text": "bottom but they are conceptually quite easy to understand it's like trying to prove the strength",
    "start": "1133520",
    "end": "1140840"
  },
  {
    "text": "of a chain by using the entire length to lift a heavy object contract tests give you a lot of",
    "start": "1140840",
    "end": "1147320"
  },
  {
    "text": "advantages but you have to think carefully about the way you're using them it's like trying to test the strength of",
    "start": "1147320",
    "end": "1154520"
  },
  {
    "text": "a chain by checking the strength of each link individually now if you miss one of those links you",
    "start": "1154520",
    "end": "1161000"
  },
  {
    "text": "can make no assertions about the strength of the chain",
    "start": "1161000",
    "end": "1166360"
  },
  {
    "text": "now talking of integration tests you might be wondering if we have contract tests do we still",
    "start": "1168080",
    "end": "1173660"
  },
  {
    "text": "need integration tests now the answer like most things in life is it depends",
    "start": "1173660",
    "end": "1180820"
  },
  {
    "text": "um I had a bit of a go at trying to express what sort of integration test coverage you might want in your project",
    "start": "1181580",
    "end": "1187640"
  },
  {
    "text": "and it's come up to be a formula that looks a bit like this",
    "start": "1187640",
    "end": "1193059"
  },
  {
    "text": "the amount of integration test coverage that you want it's proportional to the consequences of a bug making it into",
    "start": "1193100",
    "end": "1200299"
  },
  {
    "text": "production times the time to find that bug times the time to fix that bug",
    "start": "1200299",
    "end": "1206360"
  },
  {
    "text": "now here's an example imagine you have some medical software for some medical",
    "start": "1206360",
    "end": "1211960"
  },
  {
    "text": "Hardware that can only be um released by a technician physically visiting a site",
    "start": "1211960",
    "end": "1219980"
  },
  {
    "text": "you have some pretty serious consequences if there's a bug there's a long time to find the bug and there's a",
    "start": "1219980",
    "end": "1225500"
  },
  {
    "text": "long time to fix that bug so you're probably going to want a pretty comprehensive integration test Suite",
    "start": "1225500",
    "end": "1231140"
  },
  {
    "text": "however you're still going to get massive benefits from your contract because they will have flushed out all",
    "start": "1231140",
    "end": "1236660"
  },
  {
    "text": "those low level issues before you even get to that integration testing stage",
    "start": "1236660",
    "end": "1242000"
  },
  {
    "text": "your integration tests can just focus on the customer value making sure the features are working at a high level not",
    "start": "1242000",
    "end": "1249140"
  },
  {
    "text": "that you're making the right HTTP calls an interesting thing to note about this",
    "start": "1249140",
    "end": "1256039"
  },
  {
    "text": "formula is that it actually describes a feedback loop the faster you can find your bugs the",
    "start": "1256039",
    "end": "1263179"
  },
  {
    "text": "faster you can fix your bugs the less integration test coverage you need which means your tests",
    "start": "1263179",
    "end": "1270200"
  },
  {
    "text": "are going to run faster which means you need less integration test coverage which means your tests are going to run",
    "start": "1270200",
    "end": "1276559"
  },
  {
    "text": "faster see where I'm going here foreign contrast",
    "start": "1276559",
    "end": "1283580"
  },
  {
    "text": "um to that medical software example one of the projects that I worked on personally I used contracts and instead",
    "start": "1283580",
    "end": "1290659"
  },
  {
    "text": "of spending that time on maintaining an integration test Suite we spent time on",
    "start": "1290659",
    "end": "1296360"
  },
  {
    "text": "things that would help us find and fix those bugs quickly so we implemented",
    "start": "1296360",
    "end": "1301400"
  },
  {
    "text": "really good aggregated logging alerts monitoring and we implemented semantic",
    "start": "1301400",
    "end": "1307880"
  },
  {
    "text": "monitoring in production one of the techniques we used was synthetic",
    "start": "1307880",
    "end": "1313400"
  },
  {
    "text": "transactions an example would be placing an order with a known customer ID and",
    "start": "1313400",
    "end": "1319159"
  },
  {
    "text": "making sure that the order data ended up in all the right systems within the",
    "start": "1319159",
    "end": "1324320"
  },
  {
    "text": "right amount of time now because we're using all these techniques and because",
    "start": "1324320",
    "end": "1330080"
  },
  {
    "text": "the consequences of a bargaining into production weren't that severe because there was a manual work around Pro",
    "start": "1330080",
    "end": "1335960"
  },
  {
    "text": "process we just skipped the integration testing phase completely",
    "start": "1335960",
    "end": "1342520"
  },
  {
    "text": "now I'd like to tell you a bit more about that project because it started my own journey in",
    "start": "1343760",
    "end": "1350059"
  },
  {
    "text": "this content contract testing world now once upon a time",
    "start": "1350059",
    "end": "1356120"
  },
  {
    "text": "um in a place called realestate.com.edu otherwise known as Rea back in 2013",
    "start": "1356120",
    "end": "1362539"
  },
  {
    "text": "there was a group of developers that were facing that same long list of problems with their integration tests",
    "start": "1362539",
    "end": "1368720"
  },
  {
    "text": "that our made-up company was now they recently heard about",
    "start": "1368720",
    "end": "1374080"
  },
  {
    "text": "this consumer-driven contracts concept so they decided to give it a go on their own project",
    "start": "1374080",
    "end": "1381100"
  },
  {
    "text": "and that is how the contract testing Library called pact was born if you were at",
    "start": "1381260",
    "end": "1388520"
  },
  {
    "text": "um Yao in 2014 you might have seen the talk that I did with Evan botcher and John eaves on realestate.com.use",
    "start": "1388520",
    "end": "1395480"
  },
  {
    "text": "microservices journey and the role that pact played in that",
    "start": "1395480",
    "end": "1400840"
  },
  {
    "text": "now pact was first written at Rea but has since become an open source project",
    "start": "1401179",
    "end": "1407600"
  },
  {
    "text": "with implementations in many languages now I've been involved since the early",
    "start": "1407600",
    "end": "1413900"
  },
  {
    "text": "days since I came across packed while I was Consulting at rea pretty soon after the first draft was",
    "start": "1413900",
    "end": "1420740"
  },
  {
    "text": "written and if you saw um Katrina Owens taught before on the bait and switch of",
    "start": "1420740",
    "end": "1425960"
  },
  {
    "text": "Open Source software you'll understand what I mean when I say it became an irresistible problem to me",
    "start": "1425960",
    "end": "1432140"
  },
  {
    "text": "something quite um mathematically satisfying about breaking this equation down and and proving that it works on",
    "start": "1432140",
    "end": "1439039"
  },
  {
    "text": "both sides also I hated integration tests so I had some personal investment in this",
    "start": "1439039",
    "end": "1446139"
  },
  {
    "text": "um so Pac uses this same um consumer-driven contracts pattern that I",
    "start": "1446600",
    "end": "1452120"
  },
  {
    "text": "was describing earlier it has an HTTP Mark um it serializes the interactions to a",
    "start": "1452120",
    "end": "1457760"
  },
  {
    "text": "contract and that contract is called a pact and then it verifies the contract on the other side",
    "start": "1457760",
    "end": "1463940"
  },
  {
    "text": "I'm going to tell you a bit more about that packed story now but I'm also going to tell you a bit of a story of something that has not",
    "start": "1463940",
    "end": "1470600"
  },
  {
    "text": "necessarily yet happened it's a story of what you will encounter",
    "start": "1470600",
    "end": "1476659"
  },
  {
    "text": "as you start on a contract testing Journey I'll talk you through the problems that you will encounter and the way that we",
    "start": "1476659",
    "end": "1483500"
  },
  {
    "text": "fix them in the packed framework because I might have told you a little white lie earlier",
    "start": "1483500",
    "end": "1489440"
  },
  {
    "text": "um contract testing does actually have a few new problems when you start to use",
    "start": "1489440",
    "end": "1496159"
  },
  {
    "text": "it but they're more interesting problems than solving flaky tests so work with me here",
    "start": "1496159",
    "end": "1502880"
  },
  {
    "text": "now remember I told you that contract testing has two parts we have the consumer being tested with a",
    "start": "1502880",
    "end": "1509659"
  },
  {
    "text": "mock and we have the tests that show that our mock behaves the same way as our provider and we have the contract",
    "start": "1509659",
    "end": "1516260"
  },
  {
    "text": "that keeps the two of these sets of tests together",
    "start": "1516260",
    "end": "1521020"
  },
  {
    "text": "now the first obvious problem is we've got a contract the consumer has generated it how do we get it to the",
    "start": "1521320",
    "end": "1527720"
  },
  {
    "text": "provider now we tried a few approaches to that while I was Consulting at Rea we tried",
    "start": "1527720",
    "end": "1535100"
  },
  {
    "text": "just copy paste and we tried committing directly into the provider's repo we tried using build artifacts but all of",
    "start": "1535100",
    "end": "1541640"
  },
  {
    "text": "these problems all of these Solutions had varying problems so in the end given this is the age of",
    "start": "1541640",
    "end": "1548539"
  },
  {
    "text": "microservices during one of the DS hack days we wrote a microservice with a specific purpose",
    "start": "1548539",
    "end": "1555440"
  },
  {
    "text": "of exchanging contracts it was called The Pact broker",
    "start": "1555440",
    "end": "1560720"
  },
  {
    "text": "now each consumer CI build would publish a pact the broker and each provider",
    "start": "1560720",
    "end": "1566059"
  },
  {
    "text": "build would retrieve the latest version of the pack from the broker so whether you use a pack broker which",
    "start": "1566059",
    "end": "1572539"
  },
  {
    "text": "is also now an open source project or whether you use something like S3",
    "start": "1572539",
    "end": "1577640"
  },
  {
    "text": "buckets you're going to want a way to automate your contract Exchange",
    "start": "1577640",
    "end": "1583000"
  },
  {
    "text": "now contracts tests generally follow a pattern that looks like this",
    "start": "1583640",
    "end": "1589460"
  },
  {
    "text": "uh when oh sorry when the provider receives some request um then it will return some response",
    "start": "1589460",
    "end": "1597260"
  },
  {
    "text": "here's an example uh when the provider receives a get request via alligator",
    "start": "1597260",
    "end": "1602539"
  },
  {
    "text": "slash Mary it will respond with a 200 Json",
    "start": "1602539",
    "end": "1607960"
  },
  {
    "text": "representation of our alligator Mary something we've realized as time went on",
    "start": "1607960",
    "end": "1615320"
  },
  {
    "text": "was that we wanted to be able to test the same request under different scenarios",
    "start": "1615320",
    "end": "1620779"
  },
  {
    "text": "for example we might want to test how both our consumer and provider behave when there is no alligator named Mary",
    "start": "1620779",
    "end": "1627020"
  },
  {
    "text": "and we get a 404 response back now this is how the concept of Provider",
    "start": "1627020",
    "end": "1633919"
  },
  {
    "text": "States was created for Pact they describe the state that you want",
    "start": "1633919",
    "end": "1639440"
  },
  {
    "text": "your provider to be in when you replay the requests so that you get the response back that you expect",
    "start": "1639440",
    "end": "1645679"
  },
  {
    "text": "they allow you to test the same requests under different scenarios so that you can make sure all your code paths are",
    "start": "1645679",
    "end": "1651799"
  },
  {
    "text": "tested um this leads me to something else",
    "start": "1651799",
    "end": "1657260"
  },
  {
    "text": "you'll need to face when you um start your contract testing Journey you're",
    "start": "1657260",
    "end": "1662539"
  },
  {
    "text": "still going to need to think about your test data because the behavior of your services is driven by the data that they",
    "start": "1662539",
    "end": "1668480"
  },
  {
    "text": "have now when pact was first written it was",
    "start": "1668480",
    "end": "1674840"
  },
  {
    "text": "written in Ruby for Ruby microservices and some of those rubyisms ended up",
    "start": "1674840",
    "end": "1680240"
  },
  {
    "text": "leaking into the contract this is fine um until pact started to grow in",
    "start": "1680240",
    "end": "1686779"
  },
  {
    "text": "popularity at Rea um and then it hit its first Scala microservice",
    "start": "1686779",
    "end": "1692840"
  },
  {
    "text": "now at this point we realized that contracts should be as technology agnostic as possible they should focus",
    "start": "1692840",
    "end": "1700340"
  },
  {
    "text": "on the messages and not the um the technology not the implementation",
    "start": "1700340",
    "end": "1706880"
  },
  {
    "text": "now as a result of this revelation we pulled the rubiasms out of pact and came",
    "start": "1706880",
    "end": "1712460"
  },
  {
    "text": "up with a language independent method of serialization but this concept of focusing on the",
    "start": "1712460",
    "end": "1718760"
  },
  {
    "text": "messages also helped us Implement pact for message cues",
    "start": "1718760",
    "end": "1724700"
  },
  {
    "text": "now there are so many different message cues that I'm trying to write a mock for them for each of them would be an",
    "start": "1724700",
    "end": "1730460"
  },
  {
    "text": "impractical amount of work but we realized that the implementation details of how the message gets",
    "start": "1730460",
    "end": "1737059"
  },
  {
    "text": "exchanged over the queue could actually be tested elsewhere leaving the contracts to deal with the",
    "start": "1737059",
    "end": "1744140"
  },
  {
    "text": "contents of the messages themselves so when you implement your contract tests consider carefully the level at",
    "start": "1744140",
    "end": "1751820"
  },
  {
    "text": "which you define the contract and see if you can separate the message writing and",
    "start": "1751820",
    "end": "1756919"
  },
  {
    "text": "handling code from the message transmission code",
    "start": "1756919",
    "end": "1762580"
  },
  {
    "text": "now as time went on and the services in our progress within our projects",
    "start": "1763940",
    "end": "1769279"
  },
  {
    "text": "progressed the contracts changed we'd add new fields and some of the contracts",
    "start": "1769279",
    "end": "1774679"
  },
  {
    "text": "became quite big and the bigger they became the more brittle they became and",
    "start": "1774679",
    "end": "1780679"
  },
  {
    "text": "things would be failing because some capitalization was different or an ID was one instead of two",
    "start": "1780679",
    "end": "1787279"
  },
  {
    "text": "and this was really really irritating for a while until we realized that we actually",
    "start": "1787279",
    "end": "1792380"
  },
  {
    "text": "didn't care about the capitalization of a name and we didn't care whether an ID was one or two we actually just cared",
    "start": "1792380",
    "end": "1799220"
  },
  {
    "text": "that there was a name filled and it was a string and there was an ID field and it was an integer most of the time we",
    "start": "1799220",
    "end": "1806240"
  },
  {
    "text": "didn't actually care about the exact values",
    "start": "1806240",
    "end": "1810340"
  },
  {
    "text": "when you do contract testing your contract should be as flexible as possible but no more",
    "start": "1811279",
    "end": "1818600"
  },
  {
    "text": "you need them to be tight enough to give you confidence but Loose enough that they don't break with inconsequential",
    "start": "1818600",
    "end": "1824240"
  },
  {
    "text": "changes in the actual data now if you do enough of this contract testing things you might want to",
    "start": "1824240",
    "end": "1830120"
  },
  {
    "text": "actually start to create a logic around that and actually serialize that matching logic into the contract itself",
    "start": "1830120",
    "end": "1838778"
  },
  {
    "text": "now because all the code base is being worked in parallel the bills are running all the time",
    "start": "1839539",
    "end": "1846500"
  },
  {
    "text": "so pretty much every time a contract changed the provider bill will pick it up but the time came when this rate of",
    "start": "1846500",
    "end": "1853100"
  },
  {
    "text": "change slowed and a contract got pushed to the broker but the provider Bill",
    "start": "1853100",
    "end": "1859580"
  },
  {
    "text": "didn't run for a few days and then when the provider deal build did run it broke but nothing of",
    "start": "1859580",
    "end": "1868640"
  },
  {
    "text": "significance had actually changed in the provider now this raised a few issues for us",
    "start": "1868640",
    "end": "1874700"
  },
  {
    "text": "issues that you're going to face too hmm we realized that",
    "start": "1874700",
    "end": "1880760"
  },
  {
    "text": "the other services need to know when a contract has changed we realize that you need a way of",
    "start": "1880760",
    "end": "1887360"
  },
  {
    "text": "introducing those changes in a way that just doesn't break everything and we realize that contracts are not a",
    "start": "1887360",
    "end": "1894440"
  },
  {
    "text": "substitute for good communication between teams now one of the problems with",
    "start": "1894440",
    "end": "1900919"
  },
  {
    "text": "consumer-driven contracts is that the expectations come before the implementation",
    "start": "1900919",
    "end": "1906559"
  },
  {
    "text": "because it's tdd for services now tdd works fine when you're working within the same code base and you make",
    "start": "1906559",
    "end": "1913039"
  },
  {
    "text": "the test and you make the um the change and you can commit them together because everything stays green",
    "start": "1913039",
    "end": "1918380"
  },
  {
    "text": "but when you have the expectations in one code base and the implementation in another is really hard to manage that",
    "start": "1918380",
    "end": "1924740"
  },
  {
    "text": "workflow so to fix these problems we need we",
    "start": "1924740",
    "end": "1930080"
  },
  {
    "text": "realized we needed some new features in the broker now to fix that um ticking time ticking",
    "start": "1930080",
    "end": "1936880"
  },
  {
    "text": "bomb problem of that that contract sitting there without the provider build knowing about it we implemented web",
    "start": "1936880",
    "end": "1944179"
  },
  {
    "text": "hooks in the provider so that when a contract was changed we could kick off a new version of a new build of the",
    "start": "1944179",
    "end": "1950720"
  },
  {
    "text": "provider to enable changes to be made to the contract without breaking everything",
    "start": "1950720",
    "end": "1958880"
  },
  {
    "text": "we implemented tags the concept of tags in the pack broker now tags are like git",
    "start": "1958880",
    "end": "1965240"
  },
  {
    "text": "branches or SVN branches and they allow you to keep your non-breaking main line",
    "start": "1965240",
    "end": "1970399"
  },
  {
    "text": "of development while adding new features on the side and this lets your provider work towards",
    "start": "1970399",
    "end": "1977179"
  },
  {
    "text": "implementing the new contract while keeping the main contract green",
    "start": "1977179",
    "end": "1982460"
  },
  {
    "text": "and then when they're both green you switch out the new contract over the old",
    "start": "1982460",
    "end": "1988460"
  },
  {
    "text": "contract I explained that very poorly trust me it works",
    "start": "1988460",
    "end": "1993760"
  },
  {
    "text": "um once both once both those contracts are green um",
    "start": "1994100",
    "end": "2000279"
  },
  {
    "text": "the new one can replace the old one and every you've kept all the builds green the whole way while introducing",
    "start": "2000279",
    "end": "2006460"
  },
  {
    "text": "potentially breaking changes now this requires communication between",
    "start": "2006460",
    "end": "2012159"
  },
  {
    "text": "the teams so to fix the problem of the communication between the teams in the",
    "start": "2012159",
    "end": "2018279"
  },
  {
    "text": "broker we did nothing it turns out that contracts are not a",
    "start": "2018279",
    "end": "2025360"
  },
  {
    "text": "good substitute for good communication between teams but integration tests never were either",
    "start": "2025360",
    "end": "2033519"
  },
  {
    "text": "yes consumer-driven contract workflow does mean that the consumer team is",
    "start": "2033519",
    "end": "2038919"
  },
  {
    "text": "writing their expectations into a contract file but that's not to say that their expectations are always right",
    "start": "2038919",
    "end": "2044620"
  },
  {
    "text": "it's not to say that the consumer team gets to dictate everything to the provider team it's not dictator driven",
    "start": "2044620",
    "end": "2050138"
  },
  {
    "text": "contracts the changes in a contract file are a starting place for a discussion about",
    "start": "2050139",
    "end": "2056679"
  },
  {
    "text": "your API design they're not a club to beat each other over the head with",
    "start": "2056679",
    "end": "2062020"
  },
  {
    "text": "now finish rant let's say where we are in our respective",
    "start": "2062020",
    "end": "2067898"
  },
  {
    "text": "contract testing Journeys we've got flexible contracts we've got an automated way of exchanging those",
    "start": "2067899",
    "end": "2074020"
  },
  {
    "text": "contracts we've got a way to bring those changes without breaking everything",
    "start": "2074020",
    "end": "2079020"
  },
  {
    "text": "it must be time for a new problem our new problem is this",
    "start": "2079359",
    "end": "2085000"
  },
  {
    "text": "the provider knows if the contract is passed because it's running as part of",
    "start": "2085000",
    "end": "2090700"
  },
  {
    "text": "their builds the verification that is the provider knows that the verification of the contract has passed",
    "start": "2090700",
    "end": "2096520"
  },
  {
    "text": "the consumer team is back in consumer team land waiting for the call from the",
    "start": "2096520",
    "end": "2102280"
  },
  {
    "text": "provider to say yes your contract has passed you can deploy what if the provided team is busy or",
    "start": "2102280",
    "end": "2108520"
  },
  {
    "text": "they're on the other side of the world so they're asleep turns out that sharing the contract is",
    "start": "2108520",
    "end": "2114820"
  },
  {
    "text": "only half the story you need to share the verification results as well",
    "start": "2114820",
    "end": "2120940"
  },
  {
    "text": "now this is a problem that we can fix with technology we added some logic to the broker into",
    "start": "2120940",
    "end": "2127300"
  },
  {
    "text": "the packed libraries to allow the verification results to be published back to the broker and build a CLI for",
    "start": "2127300",
    "end": "2133720"
  },
  {
    "text": "the consumer to be able to retrieve those results now we have this full circle of",
    "start": "2133720",
    "end": "2139359"
  },
  {
    "text": "communication the consumer CI is responsible for",
    "start": "2139359",
    "end": "2145119"
  },
  {
    "text": "writing and Publishing the contract the provider CI is responsible for",
    "start": "2145119",
    "end": "2151420"
  },
  {
    "text": "verifying the contract and Publishing the results the consumer CI then gets those results",
    "start": "2151420",
    "end": "2158079"
  },
  {
    "text": "and deploys or not now this workflow can actually be",
    "start": "2158079",
    "end": "2165640"
  },
  {
    "text": "short-circuited because most of the time the contract hasn't changed since the last time you",
    "start": "2165640",
    "end": "2171760"
  },
  {
    "text": "published it so if the contract hasn't changed we added some logic into the broker so that",
    "start": "2171760",
    "end": "2177040"
  },
  {
    "text": "the contract is pre-verified this means that most of the time your",
    "start": "2177040",
    "end": "2182440"
  },
  {
    "text": "consumer can go straight from generating the contract publishing the contract straight into deploying",
    "start": "2182440",
    "end": "2189579"
  },
  {
    "text": "we don't need to wait on the provider build now you might think this looks more",
    "start": "2189579",
    "end": "2195880"
  },
  {
    "text": "complicated than the traditional integration test suite and you might be right",
    "start": "2195880",
    "end": "2201460"
  },
  {
    "text": "but really it's just surfacing the underlying reality of your distributed environment",
    "start": "2201460",
    "end": "2207339"
  },
  {
    "text": "when you spread your logic across different code bases you are creating dependencies between them",
    "start": "2207339",
    "end": "2214599"
  },
  {
    "text": "now you've probably heard the newly invented saying if you can't deploy your services",
    "start": "2214599",
    "end": "2219640"
  },
  {
    "text": "independently you don't have microservices you have a distributed monolith",
    "start": "2219640",
    "end": "2226000"
  },
  {
    "text": "now big integration test Suites put this big single gate across all your code",
    "start": "2226000",
    "end": "2231520"
  },
  {
    "text": "bases coupling their deployments together which undoes all that good work that you've done in decoupling their",
    "start": "2231520",
    "end": "2237700"
  },
  {
    "text": "code bases now something interesting happens when you",
    "start": "2237700",
    "end": "2245800"
  },
  {
    "text": "publish a contract with every build every consumer build and verify a contract with every provider build",
    "start": "2245800",
    "end": "2253660"
  },
  {
    "text": "you build up this Matrix of which versions of your application are compatible with each other and this",
    "start": "2253660",
    "end": "2260619"
  },
  {
    "text": "becomes really useful especially an environment like a mobile application where you're supporting",
    "start": "2260619",
    "end": "2266740"
  },
  {
    "text": "multiple versions of your client and one of the features the pack broker that allows you to deploy independently",
    "start": "2266740",
    "end": "2273940"
  },
  {
    "text": "because you can look at this graph and say well I've got an existing environment that I want to deploy a",
    "start": "2273940",
    "end": "2279880"
  },
  {
    "text": "single service into which version of my service is actually compatible with all",
    "start": "2279880",
    "end": "2285220"
  },
  {
    "text": "the other versions that are already in there this means you can start to deploy things one at a time you don't need to",
    "start": "2285220",
    "end": "2290980"
  },
  {
    "text": "do everything in batches and all this contract data gives you an",
    "start": "2290980",
    "end": "2297099"
  },
  {
    "text": "emergent living architecture you can get network diagrams to tell you what services talk to what other services and",
    "start": "2297099",
    "end": "2303880"
  },
  {
    "text": "the contracts themselves can be turned into human readable documents that allow people within your organization to find",
    "start": "2303880",
    "end": "2310119"
  },
  {
    "text": "and understand and reuse the services in a really helpful way",
    "start": "2310119",
    "end": "2316079"
  },
  {
    "text": "now I've worked you through a consumer-driven contracts Journey using pact as the example but there are some",
    "start": "2317140",
    "end": "2323920"
  },
  {
    "text": "other tools that play in this space spring Cloud contracts is a CDC library",
    "start": "2323920",
    "end": "2330040"
  },
  {
    "text": "that actually also supports pacts it provides a groovy contract creation",
    "start": "2330040",
    "end": "2335560"
  },
  {
    "text": "DSL which generates both the stubs and the contract verification tests",
    "start": "2335560",
    "end": "2341980"
  },
  {
    "text": "the contracts and stubs are shared via the standard Java package management tools like Java like Maven sorry",
    "start": "2341980",
    "end": "2350700"
  },
  {
    "text": "now one of the most common questions I get when talking about contracts is but what about Swagger or open apis is now",
    "start": "2351820",
    "end": "2359320"
  },
  {
    "text": "called now technically Swagger is a documentation tool not a contract",
    "start": "2359320",
    "end": "2365380"
  },
  {
    "text": "testing tool however it can be extended to create a stub on",
    "start": "2365380",
    "end": "2370960"
  },
  {
    "text": "the consumer side and to do verifications on the provider side in a really similar way to contract testing",
    "start": "2370960",
    "end": "2378339"
  },
  {
    "text": "what you're missing however is that ability to run the same request under",
    "start": "2378339",
    "end": "2383619"
  },
  {
    "text": "multiple different scenarios to make sure your code parts are all covered and you don't have that flexible logic that",
    "start": "2383619",
    "end": "2390579"
  },
  {
    "text": "stops your tests becoming brittle if you're using",
    "start": "2390579",
    "end": "2395680"
  },
  {
    "text": "um Swagger this way it's actually a provider driven contract because we're",
    "start": "2395680",
    "end": "2401200"
  },
  {
    "text": "starting with the functional that a provider can do for everybody rather",
    "start": "2401200",
    "end": "2407440"
  },
  {
    "text": "than a documenting the single relationship between a specific consumer",
    "start": "2407440",
    "end": "2412660"
  },
  {
    "text": "and provider now for internal apis this has some downsides because it doesn't tell you",
    "start": "2412660",
    "end": "2419140"
  },
  {
    "text": "which inputs and Fields each consumer is using so it's harder to tell what the impact",
    "start": "2419140",
    "end": "2425740"
  },
  {
    "text": "of any change will be this is why we often for public apis end up creating a new version in parallel",
    "start": "2425740",
    "end": "2433780"
  },
  {
    "text": "which means we end up having to run multiple versions of our code",
    "start": "2433780",
    "end": "2438838"
  },
  {
    "text": "the internal apis consumer-driven contracts will really give you an",
    "start": "2439119",
    "end": "2444160"
  },
  {
    "text": "advantage over provider-driven contracts when it comes to making rapid changes",
    "start": "2444160",
    "end": "2449619"
  },
  {
    "text": "consumer contracts allow you to see the impact of making a particular change and tells you exactly which consumer is",
    "start": "2449619",
    "end": "2455859"
  },
  {
    "text": "using that particular piece of your API and exactly what Fields they're using so",
    "start": "2455859",
    "end": "2461020"
  },
  {
    "text": "you have this concrete list of who to talk to and want to discuss when you need to make a change",
    "start": "2461020",
    "end": "2468180"
  },
  {
    "text": "what if we could get the benefits of consumer contracts and provider",
    "start": "2468960",
    "end": "2475240"
  },
  {
    "text": "contracts though now this is a little bit experimental",
    "start": "2475240",
    "end": "2481240"
  },
  {
    "text": "um but I think it has a lot of potential atlassian has written this tool that allows you to verify a contract against",
    "start": "2481240",
    "end": "2490060"
  },
  {
    "text": "a Swagger document instead of um against a running service",
    "start": "2490060",
    "end": "2496060"
  },
  {
    "text": "now you lose a little bit of confidence here because we've added an extra layer of indirection into this testing process",
    "start": "2496060",
    "end": "2502780"
  },
  {
    "text": "however you do get really really fast feedback it means you don't need to wait for the provider Bill to run to know",
    "start": "2502780",
    "end": "2509859"
  },
  {
    "text": "whether your two services are probably going to work together you just need to swap a pact and a Swagger file",
    "start": "2509859",
    "end": "2517119"
  },
  {
    "text": "now we're adding support for this work work flow to the pack broker very soon",
    "start": "2517119",
    "end": "2523839"
  },
  {
    "text": "and I think it could be a bit of a game changer now I've walked you through a fairly",
    "start": "2523839",
    "end": "2530260"
  },
  {
    "text": "sophisticated example of contracts here it's got all the bells and whistles how",
    "start": "2530260",
    "end": "2535300"
  },
  {
    "text": "to integrated into your CI and CD but what if you're stuck back in that pre-iteration workflow that sound if I",
    "start": "2535300",
    "end": "2541960"
  },
  {
    "text": "was at the beginning of our talk now I wouldn't want you to go back to work thinking oh that's all very well in",
    "start": "2541960",
    "end": "2548740"
  },
  {
    "text": "theory but we can't do contracts because we're not even doing continuous integration",
    "start": "2548740",
    "end": "2554400"
  },
  {
    "text": "if you can test your consumer with a mock",
    "start": "2555160",
    "end": "2560680"
  },
  {
    "text": "write the requests and responses into a file",
    "start": "2560680",
    "end": "2565900"
  },
  {
    "text": "replay the requests against the provider and check the response you can do",
    "start": "2565900",
    "end": "2571540"
  },
  {
    "text": "contracts even if you have to email the file to",
    "start": "2571540",
    "end": "2576700"
  },
  {
    "text": "each other once a week you are still going to get massive benefits because you will have flashed",
    "start": "2576700",
    "end": "2582940"
  },
  {
    "text": "out all those integration problems before you get to the integration testing phase it's almost more of a benefit to use",
    "start": "2582940",
    "end": "2590260"
  },
  {
    "text": "contracts if you're not doing CI and CD because you have a bigger risk",
    "start": "2590260",
    "end": "2595720"
  },
  {
    "text": "to start with the talking of sandify let's go back to",
    "start": "2595720",
    "end": "2601060"
  },
  {
    "text": "the story of our Meetup company the last time we talked about them they were in integration test hell",
    "start": "2601060",
    "end": "2608319"
  },
  {
    "text": "those horrible brittle tests that were making their life difficult now they heard of contracts and they",
    "start": "2608319",
    "end": "2614319"
  },
  {
    "text": "decided to make some significant changes so what does our world look like now",
    "start": "2614319",
    "end": "2619540"
  },
  {
    "text": "they have a fast comprehensive set of contract tests between each of their services",
    "start": "2619540",
    "end": "2625240"
  },
  {
    "text": "and now instead of that heavy slow integration test Suite they have some specially selected smoke tests that just",
    "start": "2625240",
    "end": "2632680"
  },
  {
    "text": "test happy paths and make sure the really important features of their service are working",
    "start": "2632680",
    "end": "2637960"
  },
  {
    "text": "I've got a similar set of tests that run in production so they can find out really quickly if there's any bugs that",
    "start": "2637960",
    "end": "2643480"
  },
  {
    "text": "have made it through to production and because they've improved their alerting and monitoring they have a really quick turnaround for their bugs",
    "start": "2643480",
    "end": "2651520"
  },
  {
    "text": "now all these things mean that their graph of customer delivery over time is a very satisfying",
    "start": "2651520",
    "end": "2657640"
  },
  {
    "text": "constant upwards trend the customer's happy because their product is improving all the time",
    "start": "2657640",
    "end": "2664839"
  },
  {
    "text": "the business owner is happy because they're keeping the customers and getting new ones the delivery manager is Happy mainly",
    "start": "2664839",
    "end": "2671440"
  },
  {
    "text": "because their business owner is happy the teams are happy because they get to spend time on features and not on fixing",
    "start": "2671440",
    "end": "2678339"
  },
  {
    "text": "flaky tests now as a developer it's stories like",
    "start": "2678339",
    "end": "2683380"
  },
  {
    "text": "this that make me interested in working I.T we solve problems",
    "start": "2683380",
    "end": "2688540"
  },
  {
    "text": "and we discover new problems it'd be really boring if there were never any new problems to solve",
    "start": "2688540",
    "end": "2695619"
  },
  {
    "text": "contracts help us solve the problem of delivering customer value faster",
    "start": "2695619",
    "end": "2701560"
  },
  {
    "text": "so what are the new problems come join us and find out",
    "start": "2701560",
    "end": "2706859"
  },
  {
    "text": "now if you are interested in under it so if you are interested in joining us on",
    "start": "2707560",
    "end": "2713740"
  },
  {
    "text": "this contract testing Journey here's some links to get you started uh",
    "start": "2713740",
    "end": "2718960"
  },
  {
    "text": "this site has information on contract testing things like message queues and",
    "start": "2718960",
    "end": "2725140"
  },
  {
    "text": "some online workshops for how to use packs in varying various different languages and also an example of how you",
    "start": "2725140",
    "end": "2731619"
  },
  {
    "text": "can Implement your own really simple contract tests without any framework at all",
    "start": "2731619",
    "end": "2736900"
  },
  {
    "text": "now the um the Talking part of this talk is over and I'd be very happy to answer",
    "start": "2736900",
    "end": "2742420"
  },
  {
    "text": "any questions that you might have [Applause]",
    "start": "2742420",
    "end": "2752719"
  }
]