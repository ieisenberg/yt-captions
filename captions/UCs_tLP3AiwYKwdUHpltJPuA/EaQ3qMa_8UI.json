[
  {
    "text": "total",
    "start": "4160",
    "end": "6479"
  },
  {
    "text": "Stu I love when people find old buyers on mine like at one point I I I did",
    "start": "10320",
    "end": "16039"
  },
  {
    "text": "actually think I'd write a programming language and I put that in my bio and then sort of I got as far as the passer and I had sort of a half ass interpreter",
    "start": "16039",
    "end": "22680"
  },
  {
    "text": "and that was it but I got to talk out of it so that's fine uh yeah so actually you know I was",
    "start": "22680",
    "end": "30279"
  },
  {
    "text": "going to talk about the perfect language but if John Hughes gets to steal titles",
    "start": "30279",
    "end": "35800"
  },
  {
    "text": "from famous computer science papers then I'm going to as well so I'm going to talk about the",
    "start": "35800",
    "end": "42239"
  },
  {
    "text": "next seven no make that",
    "start": "42239",
    "end": "46440"
  },
  {
    "text": "7,000 langues let's be ambitious uh no really no",
    "start": "47360",
    "end": "56760"
  },
  {
    "text": "really I I there's this thing where I really enjoyed writing slides that run in my",
    "start": "57879",
    "end": "64239"
  },
  {
    "text": "browser and there's this thing where I shouldn't be trusted with it",
    "start": "64239",
    "end": "69439"
  },
  {
    "text": "oops so the perfect language what is the perfect language oh come on you all know right",
    "start": "69439",
    "end": "78640"
  },
  {
    "text": "H yeah I didn't know where to go from that",
    "start": "78640",
    "end": "84000"
  },
  {
    "text": "we so okay yes it's h obviously so uh let's go have drinks",
    "start": "84000",
    "end": "91560"
  },
  {
    "text": "uh any any contrarian opinions H without exceptions hle without exceptions that",
    "start": "91600",
    "end": "98520"
  },
  {
    "text": "is a very good answer we're getting what PHP PHP",
    "start": "98520",
    "end": "105880"
  },
  {
    "text": "absolutely and of course there's a lisper in the audience I would be disappointed otherwise yes we pass the",
    "start": "108159",
    "end": "116439"
  },
  {
    "text": "perfect syntax at least doesn't it uh well so my hypothesis uh initially is",
    "start": "116439",
    "end": "124000"
  },
  {
    "text": "that there is no such thing as a perfect language but I think by looking at what",
    "start": "124000",
    "end": "129720"
  },
  {
    "text": "we've got what seems to be working out and what seems to not be working out we can probably",
    "start": "129720",
    "end": "135160"
  },
  {
    "text": "extrapolate uh what a perfect language might actually look like sometime in the future when somebody actually builds it",
    "start": "135160",
    "end": "142360"
  },
  {
    "text": "so um I figured uh if a language is really",
    "start": "142360",
    "end": "148840"
  },
  {
    "text": "popular nowadays it mean that it's pretty good yes so I found this chart on",
    "start": "148840",
    "end": "154360"
  },
  {
    "text": "on a page called gith hat. info which basically tracks um the um the number of",
    "start": "154360",
    "end": "161319"
  },
  {
    "text": "of repositories on GitHub which use a particular language and I figure the closer you to",
    "start": "161319",
    "end": "169000"
  },
  {
    "text": "to the top of this the the better your language must be and there's just there are so many",
    "start": "169000",
    "end": "175480"
  },
  {
    "text": "gems on on this list like scholar Developers",
    "start": "175480",
    "end": "180959"
  },
  {
    "text": "represent W like you're not admitting it are you",
    "start": "180959",
    "end": "187360"
  },
  {
    "text": "yeah the the great New Hope for Enterprise programming or jvm programming or",
    "start": "187360",
    "end": "192560"
  },
  {
    "text": "whatever it's um that three places",
    "start": "192560",
    "end": "197599"
  },
  {
    "text": "behind coffee script um",
    "start": "197599",
    "end": "206799"
  },
  {
    "text": "CLA woo come on Clos yourin Make Some",
    "start": "206799",
    "end": "213319"
  },
  {
    "text": "Noise yeah you right at the bottom here I I actually I wasn't going to include",
    "start": "213760",
    "end": "219159"
  },
  {
    "text": "that much of the table but I figured I'd have to bring closure along just so I could point out that your behind hll",
    "start": "219159",
    "end": "225280"
  },
  {
    "text": "here emac lisp of course and speaking of emac lisp this this one",
    "start": "225280",
    "end": "233200"
  },
  {
    "text": "this actually this isn't funny IMX L is down here and Vim L it's way up here with about twice as",
    "start": "233200",
    "end": "241439"
  },
  {
    "text": "many repos or more and I I don't really know what to feel about",
    "start": "241439",
    "end": "247840"
  },
  {
    "text": "that uh most interestingly though perhaps is that did you know that CSS is",
    "start": "247840",
    "end": "253480"
  },
  {
    "text": "a programming language and it's immensely popular well",
    "start": "253480",
    "end": "259000"
  },
  {
    "text": "it is actually cheering complete but you don't want to go there",
    "start": "259000",
    "end": "266160"
  },
  {
    "text": "it gets a bit complicated uh anyway so we do on the",
    "start": "266160",
    "end": "273919"
  },
  {
    "text": "other hand have a very clear winner obviously the best the closest language",
    "start": "273919",
    "end": "279000"
  },
  {
    "text": "we have to Perfection has got to be JavaScript so let's talk about",
    "start": "279000",
    "end": "284039"
  },
  {
    "text": "JavaScript let's talk about CSS incidentally CS is hard just going to reload my page and this is going to go",
    "start": "284039",
    "end": "290320"
  },
  {
    "text": "back to being a 5050 split again yes right so let's talk about",
    "start": "290320",
    "end": "296720"
  },
  {
    "text": "JavaScript can you see this code all the way in back I should probably read it out for you I keep forgetting to",
    "start": "296720",
    "end": "302680"
  },
  {
    "text": "increase the font size so it says xal 1 and it says yals 1 less than bang dou",
    "start": "302680",
    "end": "310960"
  },
  {
    "text": "minus X and my question for you today is what do this evaluate to what what is X going",
    "start": "310960",
    "end": "318280"
  },
  {
    "text": "to be and what is y going to be after we we run this code so let's walk through",
    "start": "318280",
    "end": "325039"
  },
  {
    "text": "it I mean we assign one to X so X will be one uh before we start evaluating one Y and then we do a um um a decrement on",
    "start": "325039",
    "end": "334400"
  },
  {
    "text": "X an imp place decrement which will take X Stand to zero and the decrement being in front of",
    "start": "334400",
    "end": "340360"
  },
  {
    "text": "the X means that it should return the value after decrementing so now we're at",
    "start": "340360",
    "end": "345800"
  },
  {
    "text": "X is zero and so the um the bang does a",
    "start": "345800",
    "end": "350960"
  },
  {
    "text": "Boolean inverse it will cause the value to Boolean first and zero should be",
    "start": "350960",
    "end": "356520"
  },
  {
    "text": "falsy I think in JavaScript it's very hard to be sure about this in JavaScript so in that case uh we should",
    "start": "356520",
    "end": "363960"
  },
  {
    "text": "be at true now so one is less than true I mean you might think that is a",
    "start": "363960",
    "end": "370360"
  },
  {
    "text": "top Arrow but this is Javascript um I believe that is",
    "start": "370360",
    "end": "377840"
  },
  {
    "text": "false though I will not swear to it so I think we got X is zero and what",
    "start": "377840",
    "end": "383919"
  },
  {
    "text": "is false or or worst case why is true so let's try and run the code",
    "start": "383919",
    "end": "390639"
  },
  {
    "text": "and see what is valuated to X is one why is",
    "start": "390639",
    "end": "396840"
  },
  {
    "text": "one so remember back in the days before JavaScript was a thing everywhere um",
    "start": "399120",
    "end": "406080"
  },
  {
    "text": "where some browsers just didn't know what a script tag was so the thing you did to make sure that your JavaScript",
    "start": "406080",
    "end": "411599"
  },
  {
    "text": "code didn't actually show on page uh in these prowers would be to to immediately",
    "start": "411599",
    "end": "418160"
  },
  {
    "text": "after you start your script tag put an HTML comment in your JavaScript",
    "start": "418160",
    "end": "424240"
  },
  {
    "text": "code which is which is why to this day all JavaScript engines actually support",
    "start": "424240",
    "end": "430840"
  },
  {
    "text": "HTML comments so what you're seeing here is simply X is one and Y is",
    "start": "430840",
    "end": "437199"
  },
  {
    "text": "one we can't put spaces in there to see what this would actually let's just see",
    "start": "437199",
    "end": "442280"
  },
  {
    "text": "if then in a better world if we were right zero and false I think that was",
    "start": "442280",
    "end": "448319"
  },
  {
    "text": "correct good so that's JavaScript and I could go on I",
    "start": "448319",
    "end": "454120"
  },
  {
    "text": "I can make JavaScript jokes all night if you like like 2 plus string two is 22",
    "start": "454120",
    "end": "460440"
  },
  {
    "text": "obviously 2 minus string two is zero",
    "start": "460440",
    "end": "467039"
  },
  {
    "text": "obviously allay 16 this is no joke I'm sorry low minus",
    "start": "468360",
    "end": "475840"
  },
  {
    "text": "t plus Batman",
    "start": "475840",
    "end": "480440"
  },
  {
    "text": "yeah ladies and gentlemen the perfect",
    "start": "484560",
    "end": "488759"
  },
  {
    "text": "language so I got another upand coming language I want to show",
    "start": "490199",
    "end": "496319"
  },
  {
    "text": "you can you tell already incidentally what language is this rust oh so I've",
    "start": "496319",
    "end": "504680"
  },
  {
    "text": "been doing a lot of rust programming recently and I've been learning a lot about language design from rust I'm not",
    "start": "504680",
    "end": "511120"
  },
  {
    "text": "going to tell you right now whether I've learn good things or bad things so I got",
    "start": "511120",
    "end": "516880"
  },
  {
    "text": "this little function here called say hello which takes uh a person and",
    "start": "516880",
    "end": "522120"
  },
  {
    "text": "wherever the person is from and it returns a string oh hi person from wherever they're",
    "start": "522120",
    "end": "528560"
  },
  {
    "text": "from and I got two variables here Pinky and Ponyville and you can see where I'm",
    "start": "528720",
    "end": "534160"
  },
  {
    "text": "going with this probably so I want to actually use that function to print this to the the",
    "start": "534160",
    "end": "540800"
  },
  {
    "text": "console which means I want to do I'm included standard out already so I can probably use that standard out as a",
    "start": "540800",
    "end": "547720"
  },
  {
    "text": "right method and so I do this say hello in the right",
    "start": "547720",
    "end": "553760"
  },
  {
    "text": "method Pinky and pony compile oh",
    "start": "553760",
    "end": "561839"
  },
  {
    "text": "yeah so um part of the story is I written this presentation tool in",
    "start": "561839",
    "end": "567320"
  },
  {
    "text": "JavaScript and now I think had to disconnect with the server server just",
    "start": "567320",
    "end": "573160"
  },
  {
    "text": "crashed and restarted which means I need to reload the page bear with me this is probably going",
    "start": "573160",
    "end": "578959"
  },
  {
    "text": "to happen a couple of times today so this is my code a compli and it",
    "start": "578959",
    "end": "586800"
  },
  {
    "text": "says oh yeah expected string found uh ERS Sr so this is a",
    "start": "586800",
    "end": "596279"
  },
  {
    "text": "string yeah what kind of so so obviously it would be too easy if you just had one",
    "start": "596279",
    "end": "601720"
  },
  {
    "text": "string type um so the the string literals are actually string slices which are",
    "start": "601720",
    "end": "608120"
  },
  {
    "text": "references to basically an an array of of UTF and this one takes string so we will",
    "start": "608120",
    "end": "615480"
  },
  {
    "text": "need to convert them to Strings that should sort our",
    "start": "615480",
    "end": "623360"
  },
  {
    "text": "problem and it says right is not in scope because",
    "start": "623360",
    "end": "630480"
  },
  {
    "text": "uh the right method actually comes from uh an implementation on standard out of",
    "start": "630480",
    "end": "636240"
  },
  {
    "text": "the right trait a trait is sort of like a top class in hcll and you have to import them explicitly to be able to use",
    "start": "636240",
    "end": "643839"
  },
  {
    "text": "them so that should compile oh yeah know um so standard out just right right",
    "start": "643839",
    "end": "650600"
  },
  {
    "text": "obviously doesn't take a string either it takes an array of uh",
    "start": "650600",
    "end": "656880"
  },
  {
    "text": "bytes fortunately the string type has a method called as",
    "start": "656880",
    "end": "662160"
  },
  {
    "text": "bites which will convert the string to an rate of bites so",
    "start": "662160",
    "end": "668160"
  },
  {
    "text": "now it actually prints oh high Pinky from Ponyville finally let's celebrate by",
    "start": "668160",
    "end": "674079"
  },
  {
    "text": "doing it twice H yeah it's not that easy value used here",
    "start": "674079",
    "end": "681120"
  },
  {
    "text": "after move so R do this thing called ownership and borrowing and it turns out that once we",
    "start": "681120",
    "end": "688680"
  },
  {
    "text": "use the this string here it's actually consumed we no longer own it we're pass",
    "start": "688680",
    "end": "693880"
  },
  {
    "text": "ownership to the H function that we called previously so we can't reuse that one here because now it's basically out",
    "start": "693880",
    "end": "700360"
  },
  {
    "text": "of scope so what we need to do instead is instead of taking strings we should be taking referenes to",
    "start": "700360",
    "end": "706399"
  },
  {
    "text": "Strings so that we just borrow them instead of transferring ownership by that it tells us that we",
    "start": "706399",
    "end": "712639"
  },
  {
    "text": "need to actually pass the references we need to make those explicit and finally it works celebrate",
    "start": "712639",
    "end": "722120"
  },
  {
    "text": "that by printing it six times I know what you're thinking but no that",
    "start": "722120",
    "end": "727600"
  },
  {
    "text": "actually works so yeah this is rust this is my",
    "start": "727600",
    "end": "734920"
  },
  {
    "text": "life with rust it's like I I I got these faces with the type",
    "start": "734920",
    "end": "741360"
  },
  {
    "text": "Checker where where first I I noticeably deal with my my serious types errors and",
    "start": "741360",
    "end": "747120"
  },
  {
    "text": "then they sort of gradually turn into all this stuff with borrowing and and and and and needing to cause types into",
    "start": "747120",
    "end": "753399"
  },
  {
    "text": "other types and so on and it's like an internal process and I feel like I get closer and closer and I never quite get",
    "start": "753399",
    "end": "760000"
  },
  {
    "text": "there",
    "start": "760000",
    "end": "763000"
  },
  {
    "text": "until rust yeah so the thing is these are",
    "start": "766560",
    "end": "772240"
  },
  {
    "text": "actually features believe it or not this is all by Design in Rust and and and really",
    "start": "772240",
    "end": "779199"
  },
  {
    "text": "Believe It or Not these are by Design in JavaScript as well thing with worst is",
    "start": "779199",
    "end": "785399"
  },
  {
    "text": "it's meant to be close to the metal is designed to be a systems language so",
    "start": "785399",
    "end": "790720"
  },
  {
    "text": "every abstraction you introduce to the language has to be zero cost this is something they're very big on in in",
    "start": "790720",
    "end": "796480"
  },
  {
    "text": "designing rust that um so so the stuff with ownership and borrowing and whatnot",
    "start": "796480",
    "end": "802240"
  },
  {
    "text": "I'm not going to get into into details about it but it's sort of a replacement a cost-free replacement for garbage",
    "start": "802240",
    "end": "808320"
  },
  {
    "text": "collection it gives you headaches but um it also",
    "start": "808320",
    "end": "813800"
  },
  {
    "text": "does not give you any performance penalty and and this is a theme throughout rust as well as being",
    "start": "813800",
    "end": "820480"
  },
  {
    "text": "explicit um if you look at rust code you should be able to tell from just the",
    "start": "820480",
    "end": "826760"
  },
  {
    "text": "code in your general vicinity what is going on um disregarding side effects of",
    "start": "826760",
    "end": "832600"
  },
  {
    "text": "course because rust is not actually a pure language um still the thing with where where",
    "start": "832600",
    "end": "839880"
  },
  {
    "text": "maybe you'd think it would be easier to just um not have to put the ens in to to",
    "start": "839880",
    "end": "845680"
  },
  {
    "text": "make a reference if the if the function you're calling obviously takes a reference you could just convert it to",
    "start": "845680",
    "end": "851600"
  },
  {
    "text": "reference um that would be too easy but the thing",
    "start": "851600",
    "end": "858759"
  },
  {
    "text": "is it it's intentional that you should be able to look at the code and know exactly what type is is at any",
    "start": "858759",
    "end": "866160"
  },
  {
    "text": "particular location and the",
    "start": "866160",
    "end": "871440"
  },
  {
    "text": "so this I struggle a bit with this as a rust developer but I used to be a sea",
    "start": "871440",
    "end": "878680"
  },
  {
    "text": "developer any any of you tried doing sea",
    "start": "878680",
    "end": "883920"
  },
  {
    "text": "development remember what that's like I mean for all my grips about rust",
    "start": "883920",
    "end": "890199"
  },
  {
    "text": "it's a massive massive Improvement on doing system Lev programming with c and",
    "start": "890199",
    "end": "895680"
  },
  {
    "text": "before c I was doing Assembly Language and don't I don't even want to go there",
    "start": "895680",
    "end": "901360"
  },
  {
    "text": "um I'm also not really being fair to rust because this is something I'm",
    "start": "901360",
    "end": "908639"
  },
  {
    "text": "noticing as I sort of grow more familiar with the language that the compiler will tell you what's wrong and you go and and",
    "start": "908639",
    "end": "915000"
  },
  {
    "text": "fix what's wrong according to the a message and that's not necessarily the way to get the best rust code that you",
    "start": "915000",
    "end": "921320"
  },
  {
    "text": "could be writing like look at my previous example I was taking strings here and so the the string literal is",
    "start": "921320",
    "end": "929720"
  },
  {
    "text": "just um a reference to SDR so I could just actually put those in instead no need to do any",
    "start": "929720",
    "end": "935800"
  },
  {
    "text": "conversion and instead of fiddling around with that standard outu right there's actually a macro called",
    "start": "935800",
    "end": "942199"
  },
  {
    "text": "print which which will happily take any kind of of string like type that it's",
    "start": "942199",
    "end": "948279"
  },
  {
    "text": "able to figure out how to convert into something it can print so I could just go",
    "start": "948279",
    "end": "955560"
  },
  {
    "text": "like this and that works and let's try and print it three times just to be sure and that",
    "start": "959440",
    "end": "965839"
  },
  {
    "text": "works so it's a slight",
    "start": "965839",
    "end": "972279"
  },
  {
    "text": "Improvement I think of R more like a starting",
    "start": "974040",
    "end": "979319"
  },
  {
    "text": "point it's uh it's definitely got it's it's it's WS its",
    "start": "979319",
    "end": "985079"
  },
  {
    "text": "frustrations but as the standard Library grows as your familiarity with a",
    "start": "985079",
    "end": "991000"
  },
  {
    "text": "language grows uh it becomes a language that is a lot easier to deal with um",
    "start": "991000",
    "end": "996720"
  },
  {
    "text": "it's got metaprogramming It's got macros you got to be careful with macros lispers will know what I mean but it",
    "start": "996720",
    "end": "1003440"
  },
  {
    "text": "enables you to to sort of slowly build a slightly nicer language on top of the base R language I actually have this",
    "start": "1003440",
    "end": "1010519"
  },
  {
    "text": "this idea where maybe I could write a transpiler for us because all all cool languages have",
    "start": "1010519",
    "end": "1016959"
  },
  {
    "text": "transpilers from something like just assume some a syntax a bit closer to hll",
    "start": "1016959",
    "end": "1024160"
  },
  {
    "text": "but with with Russ semantics maybe I could even sort of sneak in sneak in um",
    "start": "1024160",
    "end": "1029480"
  },
  {
    "text": "garbage collection by default that would be e Dr out of so you can talk to actual rust Co",
    "start": "1029480",
    "end": "1036199"
  },
  {
    "text": "I think that could actually be um a pretty neat language JavaScript on the other",
    "start": "1036199",
    "end": "1044079"
  },
  {
    "text": "hand I'm I'm sure you've heard the story of of the the birth of JavaScript where brend and I hacked it out in in in 10",
    "start": "1044079",
    "end": "1052520"
  },
  {
    "text": "days frantically because he he'd originally designed a scheme like",
    "start": "1052520",
    "end": "1059080"
  },
  {
    "text": "language and and it came back down from from the pow that be at ncape saying nah",
    "start": "1059080",
    "end": "1066799"
  },
  {
    "text": "we need you to make a language that looks more like Java and you got 10 days by the way and and that's how JavaScript",
    "start": "1066799",
    "end": "1073640"
  },
  {
    "text": "was born and and so you can imagine it might have had a couple of design flaws",
    "start": "1073640",
    "end": "1080280"
  },
  {
    "text": "from a process like that but you know at first it wasn't even a big deal like all the Weir",
    "start": "1080280",
    "end": "1086240"
  },
  {
    "text": "coer with with the strings and whatnot that you saw earlier uh JavaScript was designed to be",
    "start": "1086240",
    "end": "1092760"
  },
  {
    "text": "this tiny little scripting language that you embedded inside web pages that weren't really doing much more than",
    "start": "1092760",
    "end": "1099159"
  },
  {
    "text": "showing information it was hypertext back in those days not not single page web",
    "start": "1099159",
    "end": "1105200"
  },
  {
    "text": "apps and so if if you want to do is like print",
    "start": "1105200",
    "end": "1110960"
  },
  {
    "text": "a a clock counting down to to your big launch or whatever what we used to do",
    "start": "1110960",
    "end": "1116280"
  },
  {
    "text": "back in those days then that sort of language was perfectly fine it did the job",
    "start": "1116280",
    "end": "1122240"
  },
  {
    "text": "splendidly you didn't need to worry about I mean if you didn't have to worry about casting to strengths all the time",
    "start": "1122240",
    "end": "1129280"
  },
  {
    "text": "then that was a bonus now obviously",
    "start": "1129280",
    "end": "1134960"
  },
  {
    "text": "um the the web kind of grew as we discovered that d script could be used for for more than just these tiny little",
    "start": "1134960",
    "end": "1141640"
  },
  {
    "text": "things and the language didn't but now that we finally realized that JavaScript actually would have been",
    "start": "1141640",
    "end": "1149320"
  },
  {
    "text": "better off being a proper language we are slowly U developing it",
    "start": "1149320",
    "end": "1157120"
  },
  {
    "text": "towards um an idea of of what a modern language",
    "start": "1157120",
    "end": "1164720"
  },
  {
    "text": "should be like so you got things like the tc39 committee which um is",
    "start": "1164720",
    "end": "1170280"
  },
  {
    "text": "redesigning not redesigning the language from scratch but adding in modern uh",
    "start": "1170280",
    "end": "1177280"
  },
  {
    "text": "programming language features the thing is the best thing we could do to JavaScript of course is to",
    "start": "1177280",
    "end": "1184400"
  },
  {
    "text": "to take out the the strange bits like the the the random casting the the guess",
    "start": "1184400",
    "end": "1190880"
  },
  {
    "text": "what what the truthness of this value is and all that but the thing is if you do that you're going to break the internet",
    "start": "1190880",
    "end": "1198840"
  },
  {
    "text": "there are going to be probably millions of web pages that depend on these strange features and if you just remove",
    "start": "1198840",
    "end": "1205679"
  },
  {
    "text": "them from the language then the internet stop working and that would be",
    "start": "1205679",
    "end": "1213240"
  },
  {
    "text": "unfortunate ja is a pretty cool compilation Target there if nothing else I",
    "start": "1214760",
    "end": "1222039"
  },
  {
    "text": "mean sure if you look at JavaScript in isolation the good parts it's a half",
    "start": "1222039",
    "end": "1228720"
  },
  {
    "text": "decent Dynamic functional programming language but right now at least to me",
    "start": "1228720",
    "end": "1234039"
  },
  {
    "text": "it's more interesting as something you can compile down to from from a more serious language like say p",
    "start": "1234039",
    "end": "1242760"
  },
  {
    "text": "script this basically just looks like hle doesn't",
    "start": "1243640",
    "end": "1248679"
  },
  {
    "text": "it um P script is hle but it's um strictly evaluated",
    "start": "1248679",
    "end": "1258919"
  },
  {
    "text": "it um inherits semantics from JavaScript more than from hascal because it",
    "start": "1258919",
    "end": "1264640"
  },
  {
    "text": "actually compiles down to JavaScript so it doesn't need any any particular runtime like ghcjs would to to emulate",
    "start": "1264640",
    "end": "1270640"
  },
  {
    "text": "laziness and all the particularities of the H runtime uh this is about the simplest",
    "start": "1270640",
    "end": "1276279"
  },
  {
    "text": "program I could find in pure script it will do a Hello",
    "start": "1276279",
    "end": "1282400"
  },
  {
    "text": "World basically see if my compiler is running good so",
    "start": "1282400",
    "end": "1290520"
  },
  {
    "text": "um it prints H lojo there it also returns a function which my raffle decides to print and I've had my rapple",
    "start": "1290600",
    "end": "1298559"
  },
  {
    "text": "print out the um the compile code for hello world in P script",
    "start": "1298559",
    "end": "1306840"
  },
  {
    "text": "and yeah there's a lot of",
    "start": "1308799",
    "end": "1313960"
  },
  {
    "text": "it so the P script compiler actually will do a fair amount of um of dead code",
    "start": "1313960",
    "end": "1321840"
  },
  {
    "text": "elimination and if I were just using the compiler then this would go to maybe",
    "start": "1321840",
    "end": "1327960"
  },
  {
    "text": "this entire page and not more than that what I'm doing here is I'm using browserify because I actually wanted to",
    "start": "1327960",
    "end": "1334559"
  },
  {
    "text": "show you a cool tool um so the thing with JavaScript",
    "start": "1334559",
    "end": "1340080"
  },
  {
    "text": "oops did I no I want to be in this light so the thing with JavaScript that",
    "start": "1340080",
    "end": "1346080"
  },
  {
    "text": "everybody seems to hate nowadays is the sheer amount of tooling that exists so you got things like web pack",
    "start": "1346080",
    "end": "1353360"
  },
  {
    "text": "that you need to to learn you got things like Babble that you need to learn um you got es lint you got goodness",
    "start": "1353360",
    "end": "1361919"
  },
  {
    "text": "watch else and and and it's not just web pack there's also browery fight which is the same thing as we more or less",
    "start": "1361919",
    "end": "1368480"
  },
  {
    "text": "there's um have we got any other transport in Babble anymore did they did",
    "start": "1368480",
    "end": "1373559"
  },
  {
    "text": "the other ones all die I remember Google used have one doesn't matter it in",
    "start": "1373559",
    "end": "1378960"
  },
  {
    "text": "addition to es lint you got Jaz lint you got J hint you got probably a ton more",
    "start": "1378960",
    "end": "1384480"
  },
  {
    "text": "and tooling seems to be what daunts people getting into JavaScript",
    "start": "1384480",
    "end": "1391080"
  },
  {
    "text": "nowadays and and you might very legitimately ask why does it need all this tooling",
    "start": "1391080",
    "end": "1397559"
  },
  {
    "text": "but it is literally because it's a very strange language that that sort of happened by accident and and given",
    "start": "1397559",
    "end": "1405440"
  },
  {
    "text": "enough tooling it's actually quite neat and still uh all this toing is going to give",
    "start": "1405440",
    "end": "1411679"
  },
  {
    "text": "you ad as a JavaScript developer but it turns out a lot of it is is an added",
    "start": "1411679",
    "end": "1416720"
  },
  {
    "text": "bonus when you're writing compilers to JavaScript like this thing that that uh Facebook just released literally a",
    "start": "1416720",
    "end": "1423080"
  },
  {
    "text": "couple of days ago called prepack which will take JavaScript code",
    "start": "1423080",
    "end": "1429960"
  },
  {
    "text": "it will figure out uh it it's sort of like a minimizer except it will actually",
    "start": "1429960",
    "end": "1435159"
  },
  {
    "text": "be trying to sort of evaluate and and and run your code inside of kind of a VM",
    "start": "1435159",
    "end": "1441840"
  },
  {
    "text": "and figure out the minimum uh program required to actually do the thing that",
    "start": "1441840",
    "end": "1447440"
  },
  {
    "text": "the program you input is going to write so I ran",
    "start": "1447440",
    "end": "1454120"
  },
  {
    "text": "this output that you just saw the the giant blob of of P script through prepack as well just for laughs and it",
    "start": "1454120",
    "end": "1462279"
  },
  {
    "text": "can pass down to console. log helloo which I think is Absol Ely",
    "start": "1462279",
    "end": "1469120"
  },
  {
    "text": "amazing and definitely a benefit of of being on JavaScript as a compilation Target though I expect lvm and the jvm",
    "start": "1469120",
    "end": "1476960"
  },
  {
    "text": "and what will have similar tools at least it's definitely there um I figured i' go completely",
    "start": "1476960",
    "end": "1483679"
  },
  {
    "text": "crazy and a bit inspired by um by uh John hu's morning though this was even",
    "start": "1483679",
    "end": "1490360"
  },
  {
    "text": "more elaborate I figured I'd be doing some sort of um piano numbers here um my own plus",
    "start": "1490360",
    "end": "1499320"
  },
  {
    "text": "function and a Fibonacci using that and that's going to create a giant mess of",
    "start": "1499320",
    "end": "1505159"
  },
  {
    "text": "of of ugly JavaScript code coming out of the P SCP compiler and if I run that through prepack I thought maybe I could",
    "start": "1505159",
    "end": "1512159"
  },
  {
    "text": "get it down to like literally the plus function being just the plus operator in JavaScript ambitious as I",
    "start": "1512159",
    "end": "1520000"
  },
  {
    "text": "am and so prepack will do this error an",
    "start": "1520000",
    "end": "1525880"
  },
  {
    "text": "error occurred while prepacking see the error logs okay the AR logs it says not an object",
    "start": "1525880",
    "end": "1532720"
  },
  {
    "text": "typ error well I mean to be fair prepack does say",
    "start": "1532720",
    "end": "1539679"
  },
  {
    "text": "um does say um what's the word I'm looking for it it",
    "start": "1539679",
    "end": "1546120"
  },
  {
    "text": "it pre-alpha uh proof of concept I think is literally what it says in the web page",
    "start": "1546120",
    "end": "1553240"
  },
  {
    "text": "uh so I wouldn't expect it to work properly yet this is fair enough but I'm",
    "start": "1553240",
    "end": "1558320"
  },
  {
    "text": "excited about where this this tool is going to lead someday maybe it we'll compile this to to efficient",
    "start": "1558320",
    "end": "1565360"
  },
  {
    "text": "code anyway before I go on I should probably Define where I'm actually going with this",
    "start": "1565360",
    "end": "1570720"
  },
  {
    "text": "talk um I thought maybe I could design the perfect language and I thought maybe we",
    "start": "1570720",
    "end": "1577880"
  },
  {
    "text": "could just have a look at at random language features to try and figure out where the perfect language should",
    "start": "1577880",
    "end": "1585200"
  },
  {
    "text": "go more importantly though oops um do we really need another language I think",
    "start": "1585200",
    "end": "1591320"
  },
  {
    "text": "this is probably the first question you should be asking yourself if you decide I'm going to make a language uh who's it",
    "start": "1591320",
    "end": "1596799"
  },
  {
    "text": "going to be for why does it need to exist and if you can't answer any of",
    "start": "1596799",
    "end": "1603039"
  },
  {
    "text": "those then maybe you should just focus on a different",
    "start": "1603039",
    "end": "1608240"
  },
  {
    "text": "language on the other hand I totally want to write this language so I'm going to tell you what it's going to look",
    "start": "1608240",
    "end": "1614279"
  },
  {
    "text": "like the guiding principle for my language is going to be don't make mistake",
    "start": "1614279",
    "end": "1619480"
  },
  {
    "text": "think and actually the the most perfect language I",
    "start": "1619480",
    "end": "1626440"
  },
  {
    "text": "could think of looks like this it reads hi computer semicolon",
    "start": "1626440",
    "end": "1632720"
  },
  {
    "text": "please figure out what I want you to do comma then do it",
    "start": "1632720",
    "end": "1638640"
  },
  {
    "text": "period now I could even make this even better because having done some Aang I know that the the top complaint about",
    "start": "1638640",
    "end": "1645919"
  },
  {
    "text": "the Aang syntax is that you have all these confusing uh comets and semicolons",
    "start": "1645919",
    "end": "1651279"
  },
  {
    "text": "and and periods so let's just remove those and here you are the perfect",
    "start": "1651279",
    "end": "1657039"
  },
  {
    "text": "language now go write a compiler for that please that's",
    "start": "1657039",
    "end": "1664399"
  },
  {
    "text": "um that's kind of the problem here yeah",
    "start": "1664399",
    "end": "1671840"
  },
  {
    "text": "exactly uh so this is perhaps a little bit too ambitious",
    "start": "1671840",
    "end": "1678240"
  },
  {
    "text": "but I think it it it alludes to where I want the perfect language to be going at least and that is in the direction of",
    "start": "1678240",
    "end": "1684279"
  },
  {
    "text": "more abstraction uh I have a quote here I",
    "start": "1684279",
    "end": "1689360"
  },
  {
    "text": "think it's not don't repeat yourself it's don't be the machine and by that I mean",
    "start": "1689360",
    "end": "1696120"
  },
  {
    "text": "um a language needs to be able to once you figure",
    "start": "1696120",
    "end": "1701559"
  },
  {
    "text": "out a piece of code that is really just Machinery you should be able to abstract it away and and FOC focus on actually",
    "start": "1701559",
    "end": "1708840"
  },
  {
    "text": "solving the problem that you're dealing with rather than uh figuring out how to do a loop the right way or",
    "start": "1708840",
    "end": "1717240"
  },
  {
    "text": "whatever my favorite example of abstraction just",
    "start": "1717440",
    "end": "1724279"
  },
  {
    "text": "gratuitously is this thing here so I've written some JavaScript for you there's",
    "start": "1724279",
    "end": "1729360"
  },
  {
    "text": "a database it's got ponies and it's got puppies and I got a vote function which",
    "start": "1729360",
    "end": "1736480"
  },
  {
    "text": "will vote on whether ponies or puppies are better or actually if you want to",
    "start": "1736480",
    "end": "1741519"
  },
  {
    "text": "vote for something else then it will accept that too so I got basically oh and",
    "start": "1741519",
    "end": "1746840"
  },
  {
    "text": "look immutable data structures I'm basically copying the the",
    "start": "1746840",
    "end": "1752559"
  },
  {
    "text": "database before I start modifying it and returning the new the new database and so if the database already",
    "start": "1752559",
    "end": "1759640"
  },
  {
    "text": "has the key that I'm voting for I increment the value stored on that key by one otherwise I create a new key and",
    "start": "1759640",
    "end": "1766679"
  },
  {
    "text": "add the value one so I can go comp first vote database",
    "start": "1766679",
    "end": "1774799"
  },
  {
    "text": "puppies oh and it's IM mutable I could be naughty though and",
    "start": "1775360",
    "end": "1781200"
  },
  {
    "text": "actually store the result of my vote wooo purpp are",
    "start": "1781200",
    "end": "1786600"
  },
  {
    "text": "awesome but look at this function though do you do this a lot I find this this",
    "start": "1786600",
    "end": "1792360"
  },
  {
    "text": "particular pattern H happens all the time in my JavaScript code where if I go",
    "start": "1792360",
    "end": "1798799"
  },
  {
    "text": "to a dictionary of some kind I want to update a key in a certain",
    "start": "1798799",
    "end": "1805399"
  },
  {
    "text": "way and if the key isn't there I need to have to to have a starting value to insert so I need to check if the key is",
    "start": "1805399",
    "end": "1812240"
  },
  {
    "text": "there and and act accordingly do you get that a lot I certainly do I suspect it",
    "start": "1812240",
    "end": "1820200"
  },
  {
    "text": "looks very familiar to to people doing languages with this particular data type",
    "start": "1820200",
    "end": "1826039"
  },
  {
    "text": "so one of my favorite functions from half is called insert",
    "start": "1826039",
    "end": "1831840"
  },
  {
    "text": "with which is a function that takes another",
    "start": "1831840",
    "end": "1838440"
  },
  {
    "text": "function takes a key in a value and it takes a dictionary or an",
    "start": "1838440",
    "end": "1845120"
  },
  {
    "text": "object and I'm basically just going to copy this whole thing and modify it",
    "start": "1845120",
    "end": "1852840"
  },
  {
    "text": "slightly so instead of vote it's uh the generalized key and instead of oh",
    "start": "1852840",
    "end": "1861399"
  },
  {
    "text": "yes I'm just going to be naughty and reassign",
    "start": "1861399",
    "end": "1866039"
  },
  {
    "text": "this this works fine so if it has the",
    "start": "1866840",
    "end": "1871880"
  },
  {
    "text": "key already sorry",
    "start": "1871880",
    "end": "1879039"
  },
  {
    "text": "then o key this is the tricky bit is",
    "start": "1879039",
    "end": "1886399"
  },
  {
    "text": "function of of key and Val",
    "start": "1886399",
    "end": "1893679"
  },
  {
    "text": "else o key is just Val and return",
    "start": "1893679",
    "end": "1901559"
  },
  {
    "text": "OB which means that I can replace this whole thing with the insert with function call",
    "start": "1901919",
    "end": "1911679"
  },
  {
    "text": "with a simple function that takes two numbers and adds them together",
    "start": "1911679",
    "end": "1918639"
  },
  {
    "text": "and with my vote and with the number one which is the the the base value that",
    "start": "1919279",
    "end": "1925200"
  },
  {
    "text": "we want to incrementing by or start out with and the old",
    "start": "1925200",
    "end": "1931080"
  },
  {
    "text": "database now unless I got type erors I didn't see then they should be doing the same",
    "start": "1931080",
    "end": "1939080"
  },
  {
    "text": "thing so this mechanical bit that occurs a lot in in JavaScript",
    "start": "1939080",
    "end": "1947120"
  },
  {
    "text": "code dealing with with objects I've abstracted this away behind a",
    "start": "1947120",
    "end": "1952960"
  },
  {
    "text": "function that um lets you provide a function that will get called if you",
    "start": "1952960",
    "end": "1958279"
  },
  {
    "text": "need to modify um an existing value and a default value",
    "start": "1958279",
    "end": "1964080"
  },
  {
    "text": "otherwise and this is a standard function in in",
    "start": "1964919",
    "end": "1971000"
  },
  {
    "text": "ha's data up map um packages it's not in",
    "start": "1971000",
    "end": "1977600"
  },
  {
    "text": "Java JavaScript but I really wish it were now the problem of course with JavaScript is",
    "start": "1977600",
    "end": "1983399"
  },
  {
    "text": "if you want to actually change the standard Library um first you need to get all the browser vendors to",
    "start": "1983399",
    "end": "1988679"
  },
  {
    "text": "agree and then you have to push it through committee and wait for all the",
    "start": "1988679",
    "end": "1993880"
  },
  {
    "text": "browsers to catch up and basically that's a noo but I really wish I could add this function this is my my favorite",
    "start": "1993880",
    "end": "2000799"
  },
  {
    "text": "little example of of abstraction so I got a shopping list for",
    "start": "2000799",
    "end": "2007480"
  },
  {
    "text": "my language uh I learned from rust I actually want to do garbage collection",
    "start": "2007480",
    "end": "2012639"
  },
  {
    "text": "automatically and adding to that um How about if if we automatically dealt with",
    "start": "2012639",
    "end": "2019559"
  },
  {
    "text": "um Resource Management like say if you open a file handle you might want the compiler to make sure that you close it",
    "start": "2019559",
    "end": "2026760"
  },
  {
    "text": "and that you both open and close it only once I want to mutability by",
    "start": "2026760",
    "end": "2032840"
  },
  {
    "text": "default because if there's one single thing I could think of to put into a",
    "start": "2032840",
    "end": "2038480"
  },
  {
    "text": "language to make it easier to reason about what's going on it's to make sure that state doesn't change randomly",
    "start": "2038480",
    "end": "2046360"
  },
  {
    "text": "um if you got a function um in a different end of your",
    "start": "2046360",
    "end": "2051919"
  },
  {
    "text": "code base that you pass a value to that function might mutate the value and",
    "start": "2051919",
    "end": "2057560"
  },
  {
    "text": "suddenly you don't know what's going on with your your local State anymore I think that's",
    "start": "2057560",
    "end": "2063158"
  },
  {
    "text": "um that's one of the things that that closure taught me really well the that",
    "start": "2063159",
    "end": "2068520"
  },
  {
    "text": "and basic function of programming uh the value of immutability high order programming I",
    "start": "2068520",
    "end": "2075839"
  },
  {
    "text": "just talked about and this is the fun bit I want a powerful type system not",
    "start": "2075839",
    "end": "2081760"
  },
  {
    "text": "just so I can prove correctness but so I can use the type of system as a tool to",
    "start": "2081760",
    "end": "2089358"
  },
  {
    "text": "help me do programming so instead of of in C where",
    "start": "2089359",
    "end": "2094878"
  },
  {
    "text": "where the type system is basically just there to to Pro Prov hints for the for the compiler how to produce the most",
    "start": "2094879",
    "end": "2101240"
  },
  {
    "text": "efficient kind of code uh I want the types to actually work for me as well and not just with with correctness and",
    "start": "2101240",
    "end": "2108480"
  },
  {
    "text": "and um autocomplete and whatnot but what if you could actually use the types to AO autocomplete",
    "start": "2108480",
    "end": "2115640"
  },
  {
    "text": "code here's the fun little thing I wonder if the compiler has",
    "start": "2115640",
    "end": "2121160"
  },
  {
    "text": "crashed again no it's still working oh it works yes so",
    "start": "2121160",
    "end": "2128400"
  },
  {
    "text": "this is um this is um a friend of mine William Bird's uh",
    "start": "2128400",
    "end": "2133440"
  },
  {
    "text": "recent uh research project called bman which is basically an extension of of um",
    "start": "2133440",
    "end": "2142720"
  },
  {
    "text": "he's got um a scheme interpreter written in minran which is a Lo logic programming DSL I guess for for um",
    "start": "2142720",
    "end": "2152040"
  },
  {
    "text": "scheme uh which means that um is not only able to evaluate scheme code using",
    "start": "2152040",
    "end": "2158960"
  },
  {
    "text": "this this interpreter is also able to take what will be the output of The Interpreter and infer what scheme code",
    "start": "2158960",
    "end": "2165960"
  },
  {
    "text": "could produce that output and it's taken this further into a tool",
    "start": "2165960",
    "end": "2171440"
  },
  {
    "text": "where you can basically have it fill in a function for you",
    "start": "2171440",
    "end": "2176839"
  },
  {
    "text": "so I guess it's it's meant to be kind of a tddd tool because the idea is you have",
    "start": "2176839",
    "end": "2182640"
  },
  {
    "text": "a function called a pent in this particular case and it takes two arguments left and right and I don't",
    "start": "2182640",
    "end": "2189280"
  },
  {
    "text": "know what the the contents of that function is going to be so I can supply some tests",
    "start": "2189280",
    "end": "2195680"
  },
  {
    "text": "append so append the EMP list to the empty list should produce the EMP list",
    "start": "2195680",
    "end": "2201880"
  },
  {
    "text": "and then let's run ban to figure out what that function might look like and it says well obviously it's um well not",
    "start": "2201880",
    "end": "2210160"
  },
  {
    "text": "quite the identity function it doesn't really matter because both inputs are the same it says uh given to inputs left",
    "start": "2210160",
    "end": "2217680"
  },
  {
    "text": "and right it's obviously just return the right side which is the empty list so that's fair enough we're probably going",
    "start": "2217680",
    "end": "2224280"
  },
  {
    "text": "to need to supply some more tests so append list of",
    "start": "2224280",
    "end": "2231079"
  },
  {
    "text": "a to list of B that should yield list of aamb B let's crunch that",
    "start": "2231079",
    "end": "2240200"
  },
  {
    "text": "okay oops um why won't you indent properly you",
    "start": "2240200",
    "end": "2246319"
  },
  {
    "text": "stupid Ed right so this function says if if the right hand side is null then",
    "start": "2246319",
    "end": "2251440"
  },
  {
    "text": "return the right hand side which is null otherwise return list of A and B and and",
    "start": "2251440",
    "end": "2257280"
  },
  {
    "text": "these aren't variables these are just literals in lisp so yeah I think we still need more",
    "start": "2257280",
    "end": "2266359"
  },
  {
    "text": "tests um let's go for the ultra Bank list of a b and c list of d e and",
    "start": "2266880",
    "end": "2274319"
  },
  {
    "text": "f that should return list of a b c DF let's crunch",
    "start": "2274319",
    "end": "2282119"
  },
  {
    "text": "that or actually so this is a experimental and it is literally doing a",
    "start": "2282920",
    "end": "2289960"
  },
  {
    "text": "Brute Force search of the entire problem space I ran this yesterday uh I started",
    "start": "2289960",
    "end": "2297720"
  },
  {
    "text": "it just before I left for dinner I came back and it was still churning and I have no idea what the progress looked",
    "start": "2297720",
    "end": "2303240"
  },
  {
    "text": "like so to make this work I'm going to need to supply a little bit more",
    "start": "2303240",
    "end": "2308880"
  },
  {
    "text": "unfortunately so I know that I'm going to have need to have a terminating case uh for the",
    "start": "2308880",
    "end": "2314720"
  },
  {
    "text": "recursion but so there's got to be an if statement to check if we're at the terminating case I'm not quite sure what",
    "start": "2314720",
    "end": "2320800"
  },
  {
    "text": "to check for uh but if if that is true then I'm",
    "start": "2320800",
    "end": "2325960"
  },
  {
    "text": "not quite sure what the result should be and if it's not then I know I'm going to need to cons",
    "start": "2325960",
    "end": "2331839"
  },
  {
    "text": "something onto something else let's turn that",
    "start": "2331839",
    "end": "2338640"
  },
  {
    "text": "did it work did the JavaScript break in the background no there we",
    "start": "2340200",
    "end": "2345240"
  },
  {
    "text": "are so if we're at the base case if if the left hand list is empty then we just",
    "start": "2345240",
    "end": "2351520"
  },
  {
    "text": "return the right hand list that's correct otherwise we cons the car of the left analist that's",
    "start": "2351520",
    "end": "2359319"
  },
  {
    "text": "the the head if you don't speak lithp to appending the cutter the tail of the",
    "start": "2359319",
    "end": "2364400"
  },
  {
    "text": "left hand onto the right so that is basically the pen function",
    "start": "2364400",
    "end": "2370720"
  },
  {
    "text": "right you lisp guy confirm does that look right I didn't actually add any ability",
    "start": "2370720",
    "end": "2378920"
  },
  {
    "text": "to run this code but that is the append function and I've just had a program infer it for me from",
    "start": "2378920",
    "end": "2385440"
  },
  {
    "text": "just well a couple of hints here and a couple of tests that's pretty cool now now when",
    "start": "2385440",
    "end": "2392760"
  },
  {
    "text": "theorize this that if we were to add a type system to this then it will probably be a lot more more efficient",
    "start": "2392760",
    "end": "2399040"
  },
  {
    "text": "and indeed meet",
    "start": "2399040",
    "end": "2406000"
  },
  {
    "text": "Adis Idris if you don't know it is is a dependent type language that looks a little bit like hascal the the chief",
    "start": "2406000",
    "end": "2412960"
  },
  {
    "text": "difference is that instead of the double colon for types and the the single colon for cons the single colon is is for",
    "start": "2412960",
    "end": "2420200"
  },
  {
    "text": "types and the double colon is for cons also add dependent types so so this",
    "start": "2420200",
    "end": "2426920"
  },
  {
    "text": "types signature actually says um Vector of of n of",
    "start": "2426920",
    "end": "2433040"
  },
  {
    "text": "a and Vector of M of a returns a vector of n plus M A and the vector type is is",
    "start": "2433040",
    "end": "2440000"
  },
  {
    "text": "like a list except it's got a known length in in on the type level the length is n and M and the resulting uh",
    "start": "2440000",
    "end": "2448480"
  },
  {
    "text": "length thus has to be n plus M for the append that seems reasonable doesn't it",
    "start": "2448480",
    "end": "2454839"
  },
  {
    "text": "so let's ask Edris to add the implementation for",
    "start": "2454839",
    "end": "2461160"
  },
  {
    "text": "us up x's and y's and then it doesn't quite know what goes in here let's split",
    "start": "2461200",
    "end": "2466960"
  },
  {
    "text": "the cases that if I remember my OD keys for this so it's able to figure out that",
    "start": "2466960",
    "end": "2474960"
  },
  {
    "text": "because we're dealing with two vectors we are probably going to be wanting the the terminating case and one that",
    "start": "2474960",
    "end": "2482359"
  },
  {
    "text": "matches on on the head and the tail or the first list",
    "start": "2482359",
    "end": "2487599"
  },
  {
    "text": "so that's a good start now given that we don't know what a",
    "start": "2487599",
    "end": "2494599"
  },
  {
    "text": "is what can go in the first case here",
    "start": "2494599",
    "end": "2500720"
  },
  {
    "text": "there's literally only one thing that can go in there isn't there uh that's got to be the the wife",
    "start": "2500720",
    "end": "2507880"
  },
  {
    "text": "you might think we could put the empist in there but the type signature precludes that it needs to be something",
    "start": "2507880",
    "end": "2513079"
  },
  {
    "text": "that is the sum of Z Plus the length of w and so I can ask Edris can you guess",
    "start": "2513079",
    "end": "2520160"
  },
  {
    "text": "what this is and Edris goes yeah it's wise now for this",
    "start": "2520160",
    "end": "2527839"
  },
  {
    "text": "one I'm assuming that the the same logic HS there's only one thing that could possibly go in",
    "start": "2527839",
    "end": "2533200"
  },
  {
    "text": "there um I'm going to ask Edis to fill that in for me and",
    "start": "2533200",
    "end": "2538520"
  },
  {
    "text": "indeed this is the append function for vectors in Addis and I literally just",
    "start": "2538520",
    "end": "2544680"
  },
  {
    "text": "hit hot keys in my emac I just do any kind of typing other than the the type",
    "start": "2544680",
    "end": "2549760"
  },
  {
    "text": "signature that's the sort of thing I want to be seeing in my perfect language as a",
    "start": "2549760",
    "end": "2555280"
  },
  {
    "text": "minimum so that was today's p with inference I'm just going to run for the rest of it uh I want to language also",
    "start": "2557480",
    "end": "2563599"
  },
  {
    "text": "that is sufficiently low level by which I mean sometimes I actually want performance and abstraction and",
    "start": "2563599",
    "end": "2568800"
  },
  {
    "text": "performance don't necessarily go hand in hand so when I need performance I want to be able to to actually be the",
    "start": "2568800",
    "end": "2574359"
  },
  {
    "text": "mechanic to drop down and and Implement my Lo my myself whatever I need to",
    "start": "2574359",
    "end": "2579920"
  },
  {
    "text": "do um of course H developers in the audience what is the traditional",
    "start": "2579920",
    "end": "2585599"
  },
  {
    "text": "response to this you just need a smarter compiler it will do this for",
    "start": "2585599",
    "end": "2591079"
  },
  {
    "text": "you um it's been what 25 years since since H came about and it's definitely",
    "start": "2591079",
    "end": "2598240"
  },
  {
    "text": "gotten a hell of a lot faster than than back then but H schol still doesn't really compare with with hand optimized",
    "start": "2598240",
    "end": "2606240"
  },
  {
    "text": "machine code or what whatever you might have um progress is being made though and I actually just wanted to plug this",
    "start": "2606240",
    "end": "2612680"
  },
  {
    "text": "thing because I mentioned this to my friend nada I mean how do I make this thing up there",
    "start": "2612680",
    "end": "2619640"
  },
  {
    "text": "we go and she said oh yeah we're done research on that and there's this thing for Scara called um lightweight modular",
    "start": "2619640",
    "end": "2626800"
  },
  {
    "text": "staging which NADA and and her colleague made and I don't actually know any Scara",
    "start": "2626800",
    "end": "2633319"
  },
  {
    "text": "but I'm I'm reliably informed that this is some very nice high level code and this is what it's able to compile to",
    "start": "2633319",
    "end": "2639200"
  },
  {
    "text": "which I think even I can read seems to be just a basic loop I see the four in",
    "start": "2639200",
    "end": "2645720"
  },
  {
    "text": "Scara actually means there are moads involved doesn't",
    "start": "2645720",
    "end": "2650880"
  },
  {
    "text": "it oh okay well at least this compares to this it",
    "start": "2650880",
    "end": "2657280"
  },
  {
    "text": "says actually down here but let's not go into that if you want to check it out",
    "start": "2657280",
    "end": "2663599"
  },
  {
    "text": "I'm going to provide the link later point being I'm seeing progress if not",
    "start": "2663599",
    "end": "2669680"
  },
  {
    "text": "an actual solution here yet uh what might be a solution though is",
    "start": "2669680",
    "end": "2674760"
  },
  {
    "text": "ffi if you don't know um the abbreviation it's foreign functional interfaces which is a facility usually",
    "start": "2674760",
    "end": "2682640"
  },
  {
    "text": "provided by high level languages to call out to a lower to a lower level language",
    "start": "2682640",
    "end": "2688079"
  },
  {
    "text": "usually c um C actually also has this facility most C compilers to where you can call",
    "start": "2688079",
    "end": "2695839"
  },
  {
    "text": "AC Assembly Language if you you want um the problem usually has been that you",
    "start": "2695839",
    "end": "2701760"
  },
  {
    "text": "have to write c um I think though with a language like",
    "start": "2701760",
    "end": "2707160"
  },
  {
    "text": "rust and I know there been worked on for for both hll and node at least to use",
    "start": "2707160",
    "end": "2713040"
  },
  {
    "text": "rust as an ecfi language I think maybe this could be a solution for the problem",
    "start": "2713040",
    "end": "2718599"
  },
  {
    "text": "of of when you need performance but I'd like to to introduce",
    "start": "2718599",
    "end": "2726240"
  },
  {
    "text": "a different perspective though so I've got this idea of what I want from a language and it's got all the shiny bits",
    "start": "2726240",
    "end": "2736040"
  },
  {
    "text": "but you got there are actually other developers in the world as well I'm I'm",
    "start": "2736040",
    "end": "2741440"
  },
  {
    "text": "coming to realize and a lot of them if you show them something like hll they go",
    "start": "2741440",
    "end": "2748440"
  },
  {
    "text": "yeah that's I don't understand this it's probably fine but so what can it do that",
    "start": "2748440",
    "end": "2754720"
  },
  {
    "text": "Java con to and the answer in the end is nothing it's just got more interesting",
    "start": "2754720",
    "end": "2761760"
  },
  {
    "text": "ideas um and I think this is a crucial point because famili familiarity does",
    "start": "2761760",
    "end": "2768680"
  },
  {
    "text": "matter and I really do want to introduce all these Nifty new ideas to every",
    "start": "2768680",
    "end": "2774200"
  },
  {
    "text": "programmer in the world with my perfect language but it really does help if the language has a familiar",
    "start": "2774200",
    "end": "2781359"
  },
  {
    "text": "shape and I think this is where scar really shines I managed to find incidentally the worst photo of Martin",
    "start": "2781359",
    "end": "2788920"
  },
  {
    "text": "neski on the internet I'm very proud of",
    "start": "2788920",
    "end": "2793760"
  },
  {
    "text": "this it's like ad Milland and the bacon sandwich but I think this is something",
    "start": "2794079",
    "end": "2800680"
  },
  {
    "text": "Scola does amazingly well because the way you sell SC Scola to Java developer",
    "start": "2800680",
    "end": "2806319"
  },
  {
    "text": "is basically uh it's pretty much Java except without semicolons oh and it's got a simple",
    "start": "2806319",
    "end": "2812920"
  },
  {
    "text": "build tool well maybe not that",
    "start": "2812920",
    "end": "2819119"
  },
  {
    "text": "bit and so you can sort of lure Java developers over to Scala by by saving",
    "start": "2819119",
    "end": "2826599"
  },
  {
    "text": "them those crucial bites uh being the semicolons and then slowly you can start",
    "start": "2826599",
    "end": "2832000"
  },
  {
    "text": "introducing them to functional programming ideas you can eventually reveal that the for Loops are actually",
    "start": "2832000",
    "end": "2837720"
  },
  {
    "text": "moad and and and so on the sky's the limit SC is a very powerful",
    "start": "2837720",
    "end": "2843079"
  },
  {
    "text": "language and it's not a coincidence that that it is so familiar to Java developers",
    "start": "2843079",
    "end": "2849720"
  },
  {
    "text": "just naturally because it started out basically um there was this thing called team DJ which introduced um uh generics",
    "start": "2849720",
    "end": "2858160"
  },
  {
    "text": "to Java that's what was his name Dave Gard Marty",
    "start": "2858160",
    "end": "2864920"
  },
  {
    "text": "Mart and the inumber um and they went on uh after",
    "start": "2864920",
    "end": "2872760"
  },
  {
    "text": "actually launching uh Java generics and was that Java 15 or six 15 I believe um",
    "start": "2872760",
    "end": "2881160"
  },
  {
    "text": "or at least two of them went on to do this language called Pizza",
    "start": "2881160",
    "end": "2886920"
  },
  {
    "text": "um which was a superet of java which had things like parametric",
    "start": "2886920",
    "end": "2892800"
  },
  {
    "text": "polymorphism um algebraic data types and and basically a lot a lot of things that",
    "start": "2892800",
    "end": "2899440"
  },
  {
    "text": "you only previously seen in languages like half uh of course as it goes",
    "start": "2899440",
    "end": "2906880"
  },
  {
    "text": "every boy band The the hot one eventually goes and has a solo career",
    "start": "2906880",
    "end": "2913440"
  },
  {
    "text": "and this of course happened to um to team GJ as well where Martin went off to",
    "start": "2913440",
    "end": "2920520"
  },
  {
    "text": "do Scala and and it was basically just a continuation of of the tradition of",
    "start": "2920520",
    "end": "2926760"
  },
  {
    "text": "generic Java to pizza and now to schola but the master plan behind all",
    "start": "2926760",
    "end": "2932440"
  },
  {
    "text": "this is we're going to turn jav developers into H Developers",
    "start": "2932440",
    "end": "2937480"
  },
  {
    "text": "another thing is you don't want to be teaching too many ideas at once this is",
    "start": "2937839",
    "end": "2943480"
  },
  {
    "text": "something I definitely learned as um a closure Enthusiast back in the day where",
    "start": "2943480",
    "end": "2950119"
  },
  {
    "text": "I could get to the point where I had convinced somebody um usually somebody on the jvm",
    "start": "2950119",
    "end": "2955680"
  },
  {
    "text": "that they should really go in enclosure it's it's a fantastic nice easy to learn",
    "start": "2955680",
    "end": "2961520"
  },
  {
    "text": "functional programming language it's got a lot of you and the question will be yeah okay that sounds cool cool uh what",
    "start": "2961520",
    "end": "2968160"
  },
  {
    "text": "id should I use for this and the answer obviously is",
    "start": "2968160",
    "end": "2975880"
  },
  {
    "text": "emac the problem I mean it is definitely I think it's actually still true um",
    "start": "2976640",
    "end": "2984280"
  },
  {
    "text": "three or four years ago when I was doing closure it was basically the only decent choice for any kind of",
    "start": "2984280",
    "end": "2990960"
  },
  {
    "text": "lisp um it meant though that instead of just picking up intellig it whatever",
    "start": "2990960",
    "end": "2996960"
  },
  {
    "text": "they had they had to go learn emac as well and the thing about emac is it's",
    "start": "2996960",
    "end": "3004520"
  },
  {
    "text": "got a bit of a learning curve um it's not just the editor that",
    "start": "3004520",
    "end": "3010079"
  },
  {
    "text": "is completely different from anything else you've seen it's also that it comes with its",
    "start": "3010079",
    "end": "3015839"
  },
  {
    "text": "own programming language also a lisp that you really kind of do need to to",
    "start": "3015839",
    "end": "3022240"
  },
  {
    "text": "learn to be properly productive in emac and so we went from learning closer to",
    "start": "3022240",
    "end": "3027880"
  },
  {
    "text": "learning both closure and emac and usually what happened at that point is they just didn't bother",
    "start": "3027880",
    "end": "3035079"
  },
  {
    "text": "learning closure in the first place so nowadays we have great",
    "start": "3035079",
    "end": "3040240"
  },
  {
    "text": "intelligate plugins and and Eclipse plugins and it's easy to just pick up",
    "start": "3040240",
    "end": "3045760"
  },
  {
    "text": "closure for for a Java developer and and go with tools that you know and not have to actually tackle Two Step burning",
    "start": "3045760",
    "end": "3053319"
  },
  {
    "text": "curves I think that's kind of important speaking of tools and speaking oh my God I spent so much time on this",
    "start": "3053319",
    "end": "3059640"
  },
  {
    "text": "talk I should yeah so there's one final demo that I want to show you um speaking",
    "start": "3059640",
    "end": "3066240"
  },
  {
    "text": "of tooling it's not just idees though those are tremendously important especially if you're if you're writing",
    "start": "3066240",
    "end": "3071440"
  },
  {
    "text": "languages like Java where where not having IDE support is is",
    "start": "3071440",
    "end": "3077280"
  },
  {
    "text": "nightmarish but this is my favorite little Time Saver and and energy saver uh in any",
    "start": "3077280",
    "end": "3085680"
  },
  {
    "text": "language let's see so I've been watching El programmers",
    "start": "3085680",
    "end": "3092319"
  },
  {
    "text": "uh do programming and I really really care about formatting coach I care passionately about whether they use tabs",
    "start": "3092319",
    "end": "3097640"
  },
  {
    "text": "as spaces and how many spaces you do if if you use spaces and if you use tabs I don't want to talk to you at all you're",
    "start": "3097640",
    "end": "3103480"
  },
  {
    "text": "you're a very very very evil person um but the thing is I spent a lot of",
    "start": "3103480",
    "end": "3110920"
  },
  {
    "text": "time thinking about formatting and I've seen an programmers just turn out mcode without",
    "start": "3110920",
    "end": "3117319"
  },
  {
    "text": "the slightest concern about how they're actually going to format their code and it looks absolutely",
    "start": "3117319",
    "end": "3123480"
  },
  {
    "text": "atrocious it sets me off really really badly and suddenly they they just hit a",
    "start": "3123480",
    "end": "3131200"
  },
  {
    "text": "a key in their editor and a little thing called M format runs and out comes",
    "start": "3131200",
    "end": "3136880"
  },
  {
    "text": "perfectly formatted perfectly consistently formatted um code and it's all nice and what that tool actually",
    "start": "3136880",
    "end": "3143520"
  },
  {
    "text": "does other than save them from having to to hit a couple of spaces and ENT is it",
    "start": "3143520",
    "end": "3150359"
  },
  {
    "text": "lets them stop thinking about formatting",
    "start": "3150359",
    "end": "3156359"
  },
  {
    "text": "and if a piece of tooling can take just the slightest bit of cognitive load of",
    "start": "3156359",
    "end": "3161559"
  },
  {
    "text": "the process of of writing your code then that piece of tooling is actually valuable and you got something similar",
    "start": "3161559",
    "end": "3167280"
  },
  {
    "text": "in JavaScript write a really nasty piece of JavaScript",
    "start": "3167280",
    "end": "3172359"
  },
  {
    "text": "code um it's a call back and and it checks obviously you got",
    "start": "3172359",
    "end": "3178119"
  },
  {
    "text": "to check if the error is truthy then you return the [Music] error",
    "start": "3178119",
    "end": "3184240"
  },
  {
    "text": "as let just that as console to",
    "start": "3184240",
    "end": "3190160"
  },
  {
    "text": "log and this is this is the bit I really hate about other people's JavaScript quote when they use single",
    "start": "3190160",
    "end": "3198200"
  },
  {
    "text": "quotes right nice and readable",
    "start": "3202319",
    "end": "3208000"
  },
  {
    "text": "so I can run this thing called prettier and suddenly that's",
    "start": "3208000",
    "end": "3214119"
  },
  {
    "text": "fine you see turned my single quotes into double quotes and now I can feel good about this quote suddenly without",
    "start": "3214119",
    "end": "3220319"
  },
  {
    "text": "putting any effort into it okay talk faster got four minutes to",
    "start": "3220319",
    "end": "3225680"
  },
  {
    "text": "go so um another thing actually I should probably skip this slide I I want to",
    "start": "3225680",
    "end": "3231599"
  },
  {
    "text": "tell you about how amazing mpm is but if I get into that I'm going to go for another 10 minutes and I know you're all",
    "start": "3231599",
    "end": "3238319"
  },
  {
    "text": "waiting for beer but the point about tooling is tooling can be written for any language",
    "start": "3238319",
    "end": "3244000"
  },
  {
    "text": "is not about how welld designed the language is it's got nothing to do with",
    "start": "3244000",
    "end": "3249119"
  },
  {
    "text": "language design whatsoever any language can benefit from tooling any language could benefit from something as simple",
    "start": "3249119",
    "end": "3255599"
  },
  {
    "text": "as a PR printer although I'm I'm assured by Professor Hughes that it's not a",
    "start": "3255599",
    "end": "3260720"
  },
  {
    "text": "simple problem to solve but it's it's a tool that seems very simple on the surface at least",
    "start": "3260720",
    "end": "3267240"
  },
  {
    "text": "I don't know can you prer print APL that's something that's been bothering me all day I think every",
    "start": "3267240",
    "end": "3274040"
  },
  {
    "text": "language will benefit from a pressure printer but I'm not entirely",
    "start": "3274040",
    "end": "3279280"
  },
  {
    "text": "certain so what I'm going to do next is I got a number of wild ideas I",
    "start": "3279319",
    "end": "3285200"
  },
  {
    "text": "told you already about my my rust transpiler I also thought maybe I could fill the niche between t script and P",
    "start": "3285200",
    "end": "3290359"
  },
  {
    "text": "script where people come and see the P script syntax and and run away screaming because it doesn't look like JavaScript",
    "start": "3290359",
    "end": "3296559"
  },
  {
    "text": "I got my protype language here this is going to be my second language after bodol I'm going to call it",
    "start": "3296559",
    "end": "3302839"
  },
  {
    "text": "bodu it's a nice healthy sounding name it's got basically JavaScript syntax",
    "start": "3302839",
    "end": "3308880"
  },
  {
    "text": "except I've shortened the uh the function keyword to FN um it's got pattern matching which I",
    "start": "3308880",
    "end": "3316359"
  },
  {
    "text": "Nick from a S as plugin called sparkl it's got partial application",
    "start": "3316359",
    "end": "3322400"
  },
  {
    "text": "Scanner Style with the unders scores it's got traes like r or type classes",
    "start": "3322400",
    "end": "3327520"
  },
  {
    "text": "like H I kept the the generator functions so the co- routines from me6 because those",
    "start": "3327520",
    "end": "3333160"
  },
  {
    "text": "are actually quite neat andate data types High kind types obviously dependent types maybe even I basically",
    "start": "3333160",
    "end": "3340160"
  },
  {
    "text": "just jotted down the Syntax for this language and I made a start on the pass so we're nearly there as far as",
    "start": "3340160",
    "end": "3346520"
  },
  {
    "text": "implementation goes but the thing I did is is I used tested this and a friend of mine who has",
    "start": "3346520",
    "end": "3353240"
  },
  {
    "text": "seen pure script and really really doesn't like it she finds the the syntax intensely confusing and she looked at",
    "start": "3353240",
    "end": "3360200"
  },
  {
    "text": "this and she was like oh yeah this looks like a great language I could totally get into this so this is going to be the",
    "start": "3360200",
    "end": "3365319"
  },
  {
    "text": "future of of of JavaScript once I get round to it uh another cool idea I had",
    "start": "3365319",
    "end": "3371839"
  },
  {
    "text": "is um I want to compile a subset of JavaScript to alang actually it's going to need to be a subset of JavaScript",
    "start": "3371839",
    "end": "3377680"
  },
  {
    "text": "plus pattern matching um and the reason I want to do this is for one thing I want to trick",
    "start": "3377680",
    "end": "3383559"
  },
  {
    "text": "JavaScript developers into trying out the beam which is well according to Joe Armstrong anyway it's the best platform",
    "start": "3383559",
    "end": "3390400"
  },
  {
    "text": "for distributed programming um also I think um having a JavaScript",
    "start": "3390400",
    "end": "3398200"
  },
  {
    "text": "syntax on top of anang will make Joe really really",
    "start": "3398200",
    "end": "3403559"
  },
  {
    "text": "upset yes I would totally design a programming language just to troll somebody I know he hates JavaScript and",
    "start": "3404880",
    "end": "3412200"
  },
  {
    "text": "and I know he likes Al syntax a lot and imagine if this became more popular than itself he would go mental it would be",
    "start": "3412200",
    "end": "3419480"
  },
  {
    "text": "beautiful you think I'm kidding I got an implementation kind of already that's JavaScript over there",
    "start": "3419480",
    "end": "3426640"
  },
  {
    "text": "compin to Aang it runs and says hello Joe anyway these These are crazy ideas I",
    "start": "3426640",
    "end": "3433720"
  },
  {
    "text": "I I would also want to perhaps someday make a serious language um the sort of language that I",
    "start": "3433720",
    "end": "3440400"
  },
  {
    "text": "could actually believe in and if I'm being honest that language is probably Idris and what I should be doing instead",
    "start": "3440400",
    "end": "3446039"
  },
  {
    "text": "is is actually focus on tooling for it uh for one thing obviously we don't have",
    "start": "3446039",
    "end": "3451119"
  },
  {
    "text": "enough text edites already I'm going to need to write one that is better than all the rest I'm going to get on that",
    "start": "3451119",
    "end": "3457880"
  },
  {
    "text": "shortly uh something I can do immediately though which is going to benefit RIS and a couple of other",
    "start": "3457880",
    "end": "3464720"
  },
  {
    "text": "interesting languages i' I've been learning recently like Pony I've noted these are all languages with with a",
    "start": "3464720",
    "end": "3471520"
  },
  {
    "text": "tremendous amount of of promise but they totally lack package management and I figured maybe I could just",
    "start": "3471520",
    "end": "3477960"
  },
  {
    "text": "actually write that for them not not a package manager for Idris or or one for Pony but one that could work for any",
    "start": "3477960",
    "end": "3484760"
  },
  {
    "text": "language that needs one or doesn't have one already and that's something I'm I'm",
    "start": "3484760",
    "end": "3490160"
  },
  {
    "text": "actually working on right now that's that's something I'm being paid to work on right now so that might actually",
    "start": "3490160",
    "end": "3495240"
  },
  {
    "text": "happen uh what you can do next for one thing keep looking at for",
    "start": "3495240",
    "end": "3500960"
  },
  {
    "text": "where you can build better abstractions in your language assuming your language is abstraction friendly",
    "start": "3500960",
    "end": "3506880"
  },
  {
    "text": "but that should be most of them especially in this audience they all going to be functional programmers",
    "start": "3506880",
    "end": "3512799"
  },
  {
    "text": "hopefully um look at your standard libraries where you could add things so",
    "start": "3512799",
    "end": "3518319"
  },
  {
    "text": "on uh most importantly look around you look at other programming language communities look at the sort of tools",
    "start": "3518319",
    "end": "3524359"
  },
  {
    "text": "they're using and plagiarize them like if if your language doesn't",
    "start": "3524359",
    "end": "3532039"
  },
  {
    "text": "have El format at a minimum you're totally should it's a fun little problem to tackle as well Pro printing a",
    "start": "3532039",
    "end": "3539119"
  },
  {
    "text": "language um this is my Golden Rule you go and you learn at least one new",
    "start": "3539119",
    "end": "3544599"
  },
  {
    "text": "language a year it doesn't need to be two Master levels just get",
    "start": "3544599",
    "end": "3550920"
  },
  {
    "text": "to well not hello world but I don't know a simple problem that you could solve",
    "start": "3550920",
    "end": "3556319"
  },
  {
    "text": "using most of the language just to keep yourself up to date it's also just going to make you a better programmer just",
    "start": "3556319",
    "end": "3563160"
  },
  {
    "text": "from having a broader perspective on how to do programming but I think the keeping yourself up to",
    "start": "3563160",
    "end": "3570079"
  },
  {
    "text": "date part is is the most important bit here you'll know interesting new language features maybe you can add them",
    "start": "3570079",
    "end": "3575760"
  },
  {
    "text": "to your own language or maybe oh actually um definitely learn learn at",
    "start": "3575760",
    "end": "3581799"
  },
  {
    "text": "least one you language a year maybe if you don't know it already consider emac list this is actually me doing",
    "start": "3581799",
    "end": "3590680"
  },
  {
    "text": "emac a true emx Master is never satisfied with only 10 fingers",
    "start": "3590680",
    "end": "3597599"
  },
  {
    "text": "anyway if you can actually find a niche for your new language then by all means",
    "start": "3601319",
    "end": "3607280"
  },
  {
    "text": "you should absolutely go write that language don't let nice hold you",
    "start": "3607280",
    "end": "3614200"
  },
  {
    "text": "back that's all I got thank you so much let's go have bear",
    "start": "3614200",
    "end": "3619940"
  },
  {
    "text": "[Applause]",
    "start": "3619940",
    "end": "3629210"
  }
]