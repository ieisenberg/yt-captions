[
  {
    "start": "0",
    "end": "162000"
  },
  {
    "text": "[Music]",
    "start": "2540",
    "end": "11260"
  },
  {
    "text": "[Applause] so hi everyone my name is rodri and I'm",
    "start": "11260",
    "end": "17640"
  },
  {
    "text": "a member of the angular core team um and I actually wanted to start a presentation with something a bit",
    "start": "17640",
    "end": "23439"
  },
  {
    "text": "special try to wake you up a bit so wanted to show you uh well actually when",
    "start": "23439",
    "end": "29480"
  },
  {
    "text": "I when Carmen invited me to the stock she told me don't hesitate to do crazy stuff so one thing I wanted to show you",
    "start": "29480",
    "end": "35200"
  },
  {
    "text": "is one of my hobbies which is uh being a magician so I'm I'm not a professional but uh it's still pretty entertaining",
    "start": "35200",
    "end": "42079"
  },
  {
    "text": "especially since we say that angular is a superhero uh it's it's relevant",
    "start": "42079",
    "end": "48120"
  },
  {
    "text": "right so I broke this sorry all right so I'll I'll try another one hold on I have",
    "start": "48120",
    "end": "53640"
  },
  {
    "text": "a a deck of cards with me so sir do you mind just telling me stop whenever you'd",
    "start": "53640",
    "end": "58920"
  },
  {
    "text": "like all right so let's look at the card so your card is a nine of Spades this is",
    "start": "58920",
    "end": "65518"
  },
  {
    "text": "interesting because if you look at the angular.io",
    "start": "65519",
    "end": "70960"
  },
  {
    "text": "website and look at the doc type you'll find that your card is right",
    "start": "70960",
    "end": "78720"
  },
  {
    "text": "there so that brings me to my topic which is angular 2 um so if if you you",
    "start": "83200",
    "end": "90159"
  },
  {
    "text": "haven't heard about angular 2 it's the next version uh of uh angular and its website is angular.io so we Chang from",
    "start": "90159",
    "end": "96600"
  },
  {
    "text": "angularjs to uh angularjs.org to angular.io um so this is where you'll",
    "start": "96600",
    "end": "103600"
  },
  {
    "text": "find other resources resources for angular 2 all right uh So currently angular 2 is",
    "start": "103600",
    "end": "112280"
  },
  {
    "text": "in developer preview so I want to preview it preview it to you developers and for that I have the a demo so it's",
    "start": "112280",
    "end": "120039"
  },
  {
    "text": "an application that's written in angular 2 so what the application does is we",
    "start": "120039",
    "end": "126799"
  },
  {
    "text": "just have the neighborhoods in Amsterdam and you can REM report the amount of tourists on a trip that you see in a",
    "start": "126799",
    "end": "132560"
  },
  {
    "text": "given neighborhood and it propagates to the other browser so uh if you're wondering what I mean by tourists on a trip doesn't have to necessarily be a",
    "start": "132560",
    "end": "139440"
  },
  {
    "text": "good trip it could be a bad trip since we're in Amsterdam um so this this application has a couple",
    "start": "139440",
    "end": "146360"
  },
  {
    "text": "of component of uh interesting stuff in it like we're we have we're managing collection uh we have components in it",
    "start": "146360",
    "end": "152560"
  },
  {
    "text": "we have integration with forms sockets um so for this",
    "start": "152560",
    "end": "158599"
  },
  {
    "text": "presentation I say let's build it let's build it",
    "start": "158599",
    "end": "164120"
  },
  {
    "start": "162000",
    "end": "192000"
  },
  {
    "text": "together so it won't be live coding it will be recorded live coding so I hopefully I can't mess up so it's",
    "start": "164120",
    "end": "170000"
  },
  {
    "text": "because it's recorded um so we'll first start by building it in angular 2 and typescript which is uh the language that",
    "start": "170000",
    "end": "177480"
  },
  {
    "text": "angular 2 is written in and we'll talk about that a bit more and then for learning purposes we're going to convert it to EAS strip 5 so still angular 2 but",
    "start": "177480",
    "end": "184560"
  },
  {
    "text": "in ecma stript 5 so you can see the difference and then we'll go a bit more crazy and convert it to angular one uh",
    "start": "184560",
    "end": "190560"
  },
  {
    "text": "during this talk so if if you're wondering what typescript is it's just a super set of es6 which is the next",
    "start": "190560",
    "end": "196400"
  },
  {
    "start": "192000",
    "end": "507000"
  },
  {
    "text": "version of JavaScript and it just has types and annotation added to it um honestly we could do a whole talk on es6",
    "start": "196400",
    "end": "203920"
  },
  {
    "text": "it's very exciting but uh this is the anjs track and if we did that so many people would start ancing of excitement",
    "start": "203920",
    "end": "211280"
  },
  {
    "text": "uh which is great except I'll be included so that's not good for the talk um and also if you think that ecma 6 is",
    "start": "211280",
    "end": "218159"
  },
  {
    "text": "something in the future that is not here yet well my friends we are getting to that future if you look at the browser",
    "start": "218159",
    "end": "224200"
  },
  {
    "text": "support uh Firefox already has 66% of the S6 uh features Chrome 45% and the",
    "start": "224200",
    "end": "231040"
  },
  {
    "text": "edge version of IE which will come in Windows 10 also has 63% uh behind some",
    "start": "231040",
    "end": "236360"
  },
  {
    "text": "flags all right so let's start uh with uh building our app the the same app",
    "start": "236360",
    "end": "242239"
  },
  {
    "text": "that I just demoed so first we need the the code base of angular 2 and to find that we can go on code. angularjs.org",
    "start": "242239",
    "end": "248799"
  },
  {
    "text": "you we'll find all the builds of angular 2 um so and we'd want the",
    "start": "248799",
    "end": "254319"
  },
  {
    "text": "2.0.0 alpha so if you click on that we'll see we'll be in a in a folder that has all the builds we'll be using the",
    "start": "254319",
    "end": "260680"
  },
  {
    "text": "dev one uh that will give us better error messages uh and that would will be written in ecas 6 modules and once we're",
    "start": "260680",
    "end": "268360"
  },
  {
    "text": "going to convert it to easp 5 we're going to use the sfx version that puts things in the global scope all right so",
    "start": "268360",
    "end": "274919"
  },
  {
    "text": "let's start coding first um all right so we'll we'll have our",
    "start": "274919",
    "end": "280639"
  },
  {
    "text": "script tag that includes angular 2 and um since I said we're in egasp 6 modules",
    "start": "280639",
    "end": "287240"
  },
  {
    "text": "we're going to have to include systemjs which is a library that loads all types of modules so commonjs AMD and so on",
    "start": "287240",
    "end": "293479"
  },
  {
    "text": "including ecas 6 so we'll be using that uh and since this is an actual demo and",
    "start": "293479",
    "end": "298960"
  },
  {
    "text": "I don't want to hide the the ugly parts we also has a dependency on tracer on the Tracer runtime because part of the",
    "start": "298960",
    "end": "305960"
  },
  {
    "text": "uh angular 2 code base is still compiled with Tracer it's not all converted to types script yet so but that will be",
    "start": "305960",
    "end": "312520"
  },
  {
    "text": "removed in the near future",
    "start": "312520",
    "end": "317919"
  },
  {
    "text": "and right and since we want we want this to look good we'll actually also include bootstrap uh with a theme for it to look",
    "start": "318039",
    "end": "325199"
  },
  {
    "text": "like a Google material design",
    "start": "325199",
    "end": "330400"
  },
  {
    "text": "uh so uh after that we also need socket.io uh because we'll be using",
    "start": "330400",
    "end": "335600"
  },
  {
    "text": "sockets and socket.io is kind of the best solution and now when it comes to",
    "start": "335600",
    "end": "340800"
  },
  {
    "text": "typescript we also uh need to include the definition files of our vendor libraries uh so since we're including",
    "start": "340800",
    "end": "347479"
  },
  {
    "text": "just the JS build which is the result of the typescript compilation uh we we and",
    "start": "347479",
    "end": "352840"
  },
  {
    "text": "we want typescript to do type checking so we'll include the definition files which just tells uh the types compiler",
    "start": "352840",
    "end": "359520"
  },
  {
    "text": "that this class has these properties and so on uh so what this will make is a",
    "start": "359520",
    "end": "364720"
  },
  {
    "text": "folder called typings where you'll find all the typings and a file uh that references all of them so in our app we",
    "start": "364720",
    "end": "371120"
  },
  {
    "text": "just reference this file and then the compiler knows how to do it type checking uh and so on and last thing for",
    "start": "371120",
    "end": "377039"
  },
  {
    "text": "typescript is we also need to give some parameters",
    "start": "377039",
    "end": "382199"
  },
  {
    "text": "yeah we've got some some configuration for our uh types compiler uh just telling it to compile to es5 for example",
    "start": "382199",
    "end": "389800"
  },
  {
    "text": "instead of es6 and we can start developing our first angular component so a component is just a class an e 6",
    "start": "389800",
    "end": "397120"
  },
  {
    "text": "class uh we' be calling it tour stripping app it will reference that",
    "start": "397120",
    "end": "402919"
  },
  {
    "text": "definition file that we mentioned so after that we can uh import things from the angular 2",
    "start": "402919",
    "end": "409960"
  },
  {
    "text": "module like component and the view annotation and also a bootstrap function to bootstrap our app",
    "start": "409960",
    "end": "416960"
  },
  {
    "text": "um we're going to have to annotate our class to tell angular that this is a component and we'll tell it we'll give",
    "start": "416960",
    "end": "422520"
  },
  {
    "text": "it a selector so a CSS selector uh that when angular will find an element that matches a selector it will instantiate",
    "start": "422520",
    "end": "429199"
  },
  {
    "text": "this component and also we tell this we tell that this component has a view with a template URL so that template will be",
    "start": "429199",
    "end": "435560"
  },
  {
    "text": "injected in the Dom whenever angular will find this component in the",
    "start": "435560",
    "end": "440879"
  },
  {
    "text": "HTML uh so so now in our index. HTML we can uh reference our our component and",
    "start": "440879",
    "end": "448560"
  },
  {
    "text": "import our module because we're in easp 6 we'll be using",
    "start": "448560",
    "end": "453039"
  },
  {
    "text": "systemjs and finally before we can actually open it in our browser we'll uh bootstrap the component using the",
    "start": "453680",
    "end": "460520"
  },
  {
    "text": "bootstrap function giving it just the component uh function well class uh run",
    "start": "460520",
    "end": "465680"
  },
  {
    "text": "our typescript compiler using MCH mode so it keeps compiling run our HTTP server and then",
    "start": "465680",
    "end": "472440"
  },
  {
    "text": "we can open our browser and see it's working so we have",
    "start": "472440",
    "end": "478960"
  },
  {
    "text": "it on port 8080 so we got the basic angular 2 set up with the types compiler",
    "start": "478960",
    "end": "484840"
  },
  {
    "text": "so now we can start developing our app uh so just final thing the typ compiler",
    "start": "484840",
    "end": "490879"
  },
  {
    "text": "will uh output a JS file uh but obviously we'll be working with the typ file uh you see it it's right next to",
    "start": "490879",
    "end": "498240"
  },
  {
    "text": "the to the typescript file in the configuration you can change it to another directory but for this we'll",
    "start": "498240",
    "end": "503319"
  },
  {
    "text": "just keep it simple like that um so now starting to think about our app we like",
    "start": "503319",
    "end": "508919"
  },
  {
    "start": "507000",
    "end": "825000"
  },
  {
    "text": "actually ing our app we have this model called neighborhood uh and and uh this model will have a name and the the",
    "start": "508919",
    "end": "517320"
  },
  {
    "text": "tripping tourist amount like the amount of tourists that are tripping in that neighborhood um and to manage that model",
    "start": "517320",
    "end": "523479"
  },
  {
    "text": "we'll have a service that we'll call Neighborhood Handler because we're great with names and um so these uh are just e",
    "start": "523479",
    "end": "532160"
  },
  {
    "text": "ecma CHP classes so I have a service folder with a neighborhood Handler folder and my hidden neighborhood model",
    "start": "532160",
    "end": "538560"
  },
  {
    "text": "so it's again is just a class that we're exporting that has two properties which are the title and the",
    "start": "538560",
    "end": "544720"
  },
  {
    "text": "amount and also we'll just have a Constructor that takes these two parameters and put them on the",
    "start": "544720",
    "end": "551360"
  },
  {
    "text": "class so notice that everything here related to typing is typescript specific",
    "start": "551360",
    "end": "557079"
  },
  {
    "text": "but the class the Constructor the default parameter all are e are all ecma strip 6 um so that's pretty neat we also",
    "start": "557079",
    "end": "565279"
  },
  {
    "text": "have a method set TT amount uh just as a helper that par floats the Val value um",
    "start": "565279",
    "end": "570440"
  },
  {
    "text": "in case it was given as a string so we're we know we're always working with numbers uh thinking about this right now",
    "start": "570440",
    "end": "575839"
  },
  {
    "text": "we could have had a Setter property instead of a method um I guess I'm peer reviewing myself right here um but for",
    "start": "575839",
    "end": "583519"
  },
  {
    "text": "now that that will do and then for our service it's also just a",
    "start": "583519",
    "end": "588720"
  },
  {
    "text": "class that will import the neighborhood uh model using ecma6",
    "start": "588720",
    "end": "596519"
  },
  {
    "text": "modules and since our our service is basically managing a collection of neighborhoods it will have a",
    "start": "597320",
    "end": "603440"
  },
  {
    "text": "neighborhood array on it um so the collection is just an array and now in our component we can import our",
    "start": "603440",
    "end": "610079"
  },
  {
    "text": "neighborhood Handler and start using it so we need to tell angular to make",
    "start": "610079",
    "end": "617560"
  },
  {
    "text": "angular 2 aware of the service so for that we use the app injector uh which so that uh actual dependency injection",
    "start": "617560",
    "end": "624519"
  },
  {
    "text": "could happen in our Constructor so now this service will be created in the the context of this",
    "start": "624519",
    "end": "631480"
  },
  {
    "text": "component and we want our component to have a reference to this collection of neighborhoods so we'll just assign it",
    "start": "631480",
    "end": "639320"
  },
  {
    "text": "uh uh from the",
    "start": "639320",
    "end": "643079"
  },
  {
    "text": "service so now we can go to our HTML file uh change the template from Works",
    "start": "644399",
    "end": "649560"
  },
  {
    "text": "to an actual nice header um and start iterating over the neighborhood",
    "start": "649560",
    "end": "654800"
  },
  {
    "text": "collection that's in our on our component using ng4 uh similar to NG repeat just a",
    "start": "654800",
    "end": "660880"
  },
  {
    "text": "slightly different syntax and also we'll want to Output our neighborhood name and amount just for testing purposes for",
    "start": "660880",
    "end": "669519"
  },
  {
    "text": "now and since we also need to make angular aware that we're going to use this ng4 uh directive so you'll notice",
    "start": "670399",
    "end": "676959"
  },
  {
    "text": "that in in angular 2 there's no global registry of things like services and directive and directives you need to",
    "start": "676959",
    "end": "683120"
  },
  {
    "text": "tell angular explicitly um that you're going to use these directives and services and it's a bit more declarative",
    "start": "683120",
    "end": "688839"
  },
  {
    "text": "and helps with big applications so now before we can open this in our browser uh we'll notice that our collection of",
    "start": "688839",
    "end": "694880"
  },
  {
    "text": "neighborhood is actually empty so let's fill it up and to do that I'm going to use a similar design to uh the array.",
    "start": "694880",
    "end": "701959"
  },
  {
    "text": "push method that's built in in JavaScript so if you look at the syntax uh push actually can take multiple",
    "start": "701959",
    "end": "707720"
  },
  {
    "text": "elements and they'll all be appended to the array uh some people don't know this so like if you have multiple elements",
    "start": "707720",
    "end": "713120"
  },
  {
    "text": "you don't have to call Push multiple times you can call it once with multiple arguments uh so we'll do something",
    "start": "713120",
    "end": "718800"
  },
  {
    "text": "similar in our app so on our service we'll have a method called push neighborhood that takes the names of the neighborhood and",
    "start": "718800",
    "end": "725680"
  },
  {
    "text": "that will create the neighborhood objects so notice that here every neighborhood name is a different",
    "start": "725680",
    "end": "730800"
  },
  {
    "text": "argument to the function so just to show off ecas 6 features when we implement",
    "start": "730800",
    "end": "735880"
  },
  {
    "text": "this in our service we can use rest parameters so if you're not familiar with what rest parameters are imagine",
    "start": "735880",
    "end": "741199"
  },
  {
    "text": "you have a function that takes a parameter a b and then a rest parameter that parameter will collect all the",
    "start": "741199",
    "end": "746240"
  },
  {
    "text": "arguments given to the function that weren't in that weren't defined so in our case we just have one rest parameter",
    "start": "746240",
    "end": "752639"
  },
  {
    "text": "and it so it will take all the arguments and put them in an array and then we'll map that to our neighborhood object",
    "start": "752639",
    "end": "759959"
  },
  {
    "text": "using fat Arrow functions um which return the last statement that was in the function and also they uh persist",
    "start": "759959",
    "end": "766839"
  },
  {
    "text": "the this from the outside context then to push it to our array we'll actually use push with the spread",
    "start": "766839",
    "end": "774519"
  },
  {
    "text": "operator so what the spread operator does is it given an array that's pass to a function it will actually expand it so",
    "start": "774519",
    "end": "781279"
  },
  {
    "text": "that it becomes multiple arguments to that function so here it's as if we're passing multiple arguments to the push",
    "start": "781279",
    "end": "786600"
  },
  {
    "text": "function and we're doing that instead of concatenating because concatenating constructs a new array and we don't want",
    "start": "786600",
    "end": "791800"
  },
  {
    "text": "that we just want to modify our existing array so that's some premat ecma 6",
    "start": "791800",
    "end": "797320"
  },
  {
    "text": "features so now if we go on our browser and refresh we can see that we can see the names and the amount at least I can",
    "start": "797320",
    "end": "803959"
  },
  {
    "text": "see them I don't know if you can uh so so uh yeah again looking at this",
    "start": "803959",
    "end": "810720"
  },
  {
    "text": "code I don't know if like this is the next version of JavaScript you know Imports classes um typings is typescript",
    "start": "810720",
    "end": "818040"
  },
  {
    "text": "but Constructor and so much neat features in my opinion so now let's get back to",
    "start": "818040",
    "end": "824440"
  },
  {
    "text": "thinking about our app so we want to report the amount of people in each neighborhood so we're going to create a",
    "start": "824440",
    "end": "829920"
  },
  {
    "start": "825000",
    "end": "989000"
  },
  {
    "text": "component called people count so that it will look a bit like this and how we want to invoke it is using an element",
    "start": "829920",
    "end": "835600"
  },
  {
    "text": "called people count with a title and an amount so uh um let's start creating our",
    "start": "835600",
    "end": "841639"
  },
  {
    "text": "component well first we'll call it in our app template so we'll have the title and the",
    "start": "841639",
    "end": "847600"
  },
  {
    "text": "amount and they'll be equivalent to the neighborhood name uh and the amount will be the TT amount in the neighborhood",
    "start": "847600",
    "end": "854279"
  },
  {
    "text": "since we want this we want there to be a binding between this expression and the property on the component we'll actually",
    "start": "854279",
    "end": "859759"
  },
  {
    "text": "have to put it in bracket notation so what this means that this tells angular that the the value is an angular",
    "start": "859759",
    "end": "865920"
  },
  {
    "text": "expression that should be evaluated and binded to the component",
    "start": "865920",
    "end": "871040"
  },
  {
    "text": "so otherwise it's it's just a HML attribute so then we can have our U our",
    "start": "871399",
    "end": "877079"
  },
  {
    "text": "component uh which has two properties title and amount and it can uh we'll have to",
    "start": "877079",
    "end": "883880"
  },
  {
    "text": "import the component and the view to specify it to angular that this is a component and what its view",
    "start": "883880",
    "end": "889480"
  },
  {
    "text": "is so the component will have a selector called people count uh the view will have a template",
    "start": "889480",
    "end": "896279"
  },
  {
    "text": "um that is just adjacent to the component fast",
    "start": "896279",
    "end": "901680"
  },
  {
    "text": "forward so next we actually need to tell angular that this component takes two properties which are title and amount uh",
    "start": "901680",
    "end": "909680"
  },
  {
    "text": "so then angular will do The Binding between the HTML and the property on this class and looking at this there",
    "start": "909680",
    "end": "916600"
  },
  {
    "text": "might be confusion with title maybe some people would think it's a native HTML attribute so let's just prefix it with a",
    "start": "916600",
    "end": "922920"
  },
  {
    "text": "vendor prefix and we'll call it TT so here we're saying to the setting angular that we want title to be called",
    "start": "922920",
    "end": "929519"
  },
  {
    "text": "title on the component but we wanted TT title in the HTML so now there's no",
    "start": "929519",
    "end": "935040"
  },
  {
    "text": "confusion that this goes to the people count component so then we can go in our HTML",
    "start": "935040",
    "end": "942440"
  },
  {
    "text": "start echoing these true properties and I just wanted to stop to let you know that in angular 2 uh if you do mistakes",
    "start": "942440",
    "end": "948120"
  },
  {
    "text": "in Expressions you'll actually get an error it will it will throw an error while in angular one it was forgiving",
    "start": "948120",
    "end": "953880"
  },
  {
    "text": "and if you did a typo it would just output undefined um in angular 2 it's a lot more robust if you will so let's",
    "start": "953880",
    "end": "960720"
  },
  {
    "text": "just output title amount and an input range just for Aesthetics so now we can open our",
    "start": "960720",
    "end": "966959"
  },
  {
    "text": "browser and refresh and it doesn't output the people counts and that's because we didn't tell angular 2 that",
    "start": "966959",
    "end": "973160"
  },
  {
    "text": "our app component will use the people count component so just like ng4 we'll",
    "start": "973160",
    "end": "979560"
  },
  {
    "text": "put it in our the directives in of our view and finally we can refresh and see that it is actually",
    "start": "979560",
    "end": "985440"
  },
  {
    "text": "working uh but there's no binding yet to the form so next thing we're going to have to do is integrate with the input",
    "start": "985440",
    "end": "991639"
  },
  {
    "start": "989000",
    "end": "1122000"
  },
  {
    "text": "range and in angular 2 forms are a lot more um robust because you have to",
    "start": "991639",
    "end": "997279"
  },
  {
    "text": "Define them in your component before you can use them in your template well in angular one you use just NG model and it",
    "start": "997279",
    "end": "1003519"
  },
  {
    "text": "just bind it to anything you want uh in angular 2 you actually need to define the form elements um and what we call",
    "start": "1003519",
    "end": "1010440"
  },
  {
    "text": "them are actually controls um and uh so you have to instantiate",
    "start": "1010440",
    "end": "1016079"
  },
  {
    "text": "them in your component and they can't alonely actually need to be in a control group you can think of a control group",
    "start": "1016079",
    "end": "1022079"
  },
  {
    "text": "just like a form it's just that it's built with nesting in mind so you can Nest control groups have validation for",
    "start": "1022079",
    "end": "1027280"
  },
  {
    "text": "all of them and to to construct our control group we're going to need a form Builder that we'll just use dependent",
    "start": "1027280",
    "end": "1033720"
  },
  {
    "text": "injection to have it and we'll create a group a control group with a control",
    "start": "1033720",
    "end": "1039160"
  },
  {
    "text": "called called amount and then we have to tell angular that we",
    "start": "1039160",
    "end": "1046360"
  },
  {
    "text": "want that to to instantiate this form Builder in the context of this component and we can go to our HTML and bind our",
    "start": "1046360",
    "end": "1056080"
  },
  {
    "text": "forms to the control group that we created as well as the control uh object",
    "start": "1056080",
    "end": "1061360"
  },
  {
    "text": "for the input and finally we need to tell angular that we're going to use these",
    "start": "1061360",
    "end": "1067400"
  },
  {
    "text": "new directives these new directives in our people count component so form directives is just a collection of all",
    "start": "1067400",
    "end": "1073080"
  },
  {
    "text": "the directives related to uh forms so we just imported andal angular that we're going to use it",
    "start": "1073080",
    "end": "1080039"
  },
  {
    "text": "oh also since now you realize that our amount property is not connected to our amount control in any way we actually",
    "start": "1080039",
    "end": "1086360"
  },
  {
    "text": "need to listen uh tell angular to tell us when the amount property changes from the outside world uh so that we can",
    "start": "1086360",
    "end": "1092600"
  },
  {
    "text": "update our control and we'll use that we'll do that using the onchange life cycle so there's on init onchange on",
    "start": "1092600",
    "end": "1099080"
  },
  {
    "text": "Destroy um in our case we'll just using onchange and whenever the amount of property change we're updating our",
    "start": "1099080",
    "end": "1104720"
  },
  {
    "text": "control again that's for when the outside world changes it so then we can go in a browser and refresh and see that",
    "start": "1104720",
    "end": "1111240"
  },
  {
    "text": "the binding actually happens changing the input does change the value of the amount control so that's great um so if",
    "start": "1111240",
    "end": "1118200"
  },
  {
    "text": "if you've watched any of our talks on angular 2 you'll find that we talking we in angular 2 there's one way data",
    "start": "1118200",
    "end": "1123880"
  },
  {
    "start": "1122000",
    "end": "1298000"
  },
  {
    "text": "binding so what that means is that in while in angular one if you had a component which is a directive and you",
    "start": "1123880",
    "end": "1130919"
  },
  {
    "text": "you had for example an isolated scope you'd usually have a two-way data binding with the equal sign in this in",
    "start": "1130919",
    "end": "1136280"
  },
  {
    "text": "the scope property and that would mean that whenever the it change it from the outside it will propagate to the directive but whenever it change it in",
    "start": "1136280",
    "end": "1142440"
  },
  {
    "text": "the directive it will also propagate to the outside and that's makes it that in",
    "start": "1142440",
    "end": "1147520"
  },
  {
    "text": "huge apps it's a lot harder to reason about who's doing the change and when so in angular 2 we opted more for oneway",
    "start": "1147520",
    "end": "1153880"
  },
  {
    "text": "data binding so the the parent could tell the child could bind something to the child but it's not the other way",
    "start": "1153880",
    "end": "1159600"
  },
  {
    "text": "around if if something needs to propagate from down to up it needs to happen via an event so to demonstrate",
    "start": "1159600",
    "end": "1166559"
  },
  {
    "text": "this what to demonstrate what I mean I'm just going to Output the the neighborhood amount uh and show you that in the",
    "start": "1166559",
    "end": "1173000"
  },
  {
    "text": "browser if we update it you'll see that it doesn't update uh the model view",
    "start": "1173000",
    "end": "1178600"
  },
  {
    "text": "doesn't update it's just the value of in the component that updates so it's not propagating so again to do that to",
    "start": "1178600",
    "end": "1184440"
  },
  {
    "text": "propagate we're going to have an event that we'll call TT amount change event and notice that we're using parenthesis",
    "start": "1184440",
    "end": "1189559"
  },
  {
    "text": "for the attribute here to say that this is an event and for now all we will do is update the model",
    "start": "1189559",
    "end": "1196280"
  },
  {
    "text": "directly to implement this event we'll actually need to tell angular that we have this event again it's a lot more",
    "start": "1196280",
    "end": "1201840"
  },
  {
    "text": "declarative and this event is just an event emitter that we're going to input from the angular 2",
    "start": "1201840",
    "end": "1208880"
  },
  {
    "text": "module and instantiate it then in our to actually uh fire event",
    "start": "1209559",
    "end": "1216080"
  },
  {
    "text": "on this uh eventer we will say that on click of this button we'll call a method",
    "start": "1216080",
    "end": "1221360"
  },
  {
    "text": "that report amount that we'll Implement right now uh notice again that we're using parenthesis for click so this will",
    "start": "1221360",
    "end": "1227120"
  },
  {
    "text": "tell angular to just do the ad event listener on the button element um so",
    "start": "1227120",
    "end": "1233400"
  },
  {
    "text": "then we can Implement our method and all our method will do is create an event object and fire the event emitter uh the",
    "start": "1233400",
    "end": "1239840"
  },
  {
    "text": "event emitter has similar interface to iterators so do next with an event object and the expression in the HTML",
    "start": "1239840",
    "end": "1246559"
  },
  {
    "text": "will get invoked so now we can open our browser refresh and see that it is actually",
    "start": "1246559",
    "end": "1252559"
  },
  {
    "text": "propagating um so it's propagating to our model from our component that's pretty awesome",
    "start": "1252559",
    "end": "1259720"
  },
  {
    "text": "um so again all we if you look at this uh these annotations you can see that",
    "start": "1259720",
    "end": "1265440"
  },
  {
    "text": "they're a lot more explicit they're a lot more declarative so uh that that's something new in angular 2 while in",
    "start": "1265440",
    "end": "1271360"
  },
  {
    "text": "angular one you had to look at a directives code code to realize what it's doing uh here we can use this to",
    "start": "1271360",
    "end": "1277200"
  },
  {
    "text": "generate API docs uh this is helping IDE help you uh you it also allows angular",
    "start": "1277200",
    "end": "1283400"
  },
  {
    "text": "to optimize your code and if another human reads this he can they can directly realize is that uh this",
    "start": "1283400",
    "end": "1289559"
  },
  {
    "text": "component has these properties these events uh and so on so next thing in our",
    "start": "1289559",
    "end": "1294880"
  },
  {
    "text": "app for it to get to where our demo was uh was is implementing the thing that will take care of our socket and we'll",
    "start": "1294880",
    "end": "1301279"
  },
  {
    "start": "1298000",
    "end": "1461000"
  },
  {
    "text": "call it a socket Handler because we're great with names and uh so again this is just a service that is a class that",
    "start": "1301279",
    "end": "1308480"
  },
  {
    "text": "we're exporting and it has a property called socket that will respect an interface that's defined in our typings",
    "start": "1308480",
    "end": "1314640"
  },
  {
    "text": "in our definition files so this socket will just be a socket.io socket that is connected to uh",
    "start": "1314640",
    "end": "1322080"
  },
  {
    "text": "Port 9898 that I have running in the background and this service will have two methods the first one is update",
    "start": "1322080",
    "end": "1327960"
  },
  {
    "text": "neighborhood that will actually take a change from the application and propagate it to other um to to other uh",
    "start": "1327960",
    "end": "1335120"
  },
  {
    "text": "apps to to other people running the app and to do that we'll use a data structure where the name of the",
    "start": "1335120",
    "end": "1341320"
  },
  {
    "text": "neighborhood is the key and the value is the amount so notice notice that here I'm using dynamically computed property",
    "start": "1341320",
    "end": "1347679"
  },
  {
    "text": "names uh in object list rols if you're unsure what that is when you'll switch to egm 5 you'll see the",
    "start": "1347679",
    "end": "1354640"
  },
  {
    "text": "equivalent and also we'll have a method to so that when other people update it",
    "start": "1354640",
    "end": "1359799"
  },
  {
    "text": "for our app uh we'll have a listener uh that in another service will provide and",
    "start": "1359799",
    "end": "1365279"
  },
  {
    "text": "that listener will be called with the neighborhood name and the amount so the data structure is similar to the one",
    "start": "1365279",
    "end": "1370640"
  },
  {
    "text": "above so we're going to iterate over the keys which are the name of the neighborhoods and call The Listener um",
    "start": "1370640",
    "end": "1377200"
  },
  {
    "text": "yep so then in our neighborhood Handler we can inject the socket Handler so that we can uh uh for example listen for when",
    "start": "1377200",
    "end": "1384880"
  },
  {
    "text": "there's changes to update the uh uh neighborhood models so just inject it and usually",
    "start": "1384880",
    "end": "1391480"
  },
  {
    "text": "this is enough for the injection to happen uh but with the current typescript typescript version of the",
    "start": "1391480",
    "end": "1397279"
  },
  {
    "text": "current version of the typescript compiler that I'm using uh we also have to add the small annotation so this",
    "start": "1397279",
    "end": "1402520"
  },
  {
    "text": "won't be necessary in the next version of typescript in the next release uh so we'll just annotate uh",
    "start": "1402520",
    "end": "1409080"
  },
  {
    "text": "uh this uh parameter to say that we want to inject the socket Handler um and this is just between services not from",
    "start": "1409080",
    "end": "1415880"
  },
  {
    "text": "service to component then we can use our socket Handler and listen to when there's a",
    "start": "1415880",
    "end": "1422120"
  },
  {
    "text": "change that happens and when there's a change that happened we want to filter through the collection of neighborhoods",
    "start": "1422120",
    "end": "1428159"
  },
  {
    "text": "that we have we're going to filter via name and so using the filter method on an",
    "start": "1428159",
    "end": "1434200"
  },
  {
    "text": "array now here I see that typt is telling me there's an error with neighbor neighborhood and when we look",
    "start": "1434200",
    "end": "1439640"
  },
  {
    "text": "into it we can see that there's a type Mis patch that filter returns an array while we're expecting a neighborhood object so this is a a a place where type",
    "start": "1439640",
    "end": "1446880"
  },
  {
    "text": "checking is useful so we just take the first result of the filtered array make sure that it",
    "start": "1446880",
    "end": "1452600"
  },
  {
    "text": "exists and update the model so uh now going back to data",
    "start": "1452600",
    "end": "1459640"
  },
  {
    "text": "propagation if you remember uh in our event on our people count component we",
    "start": "1459640",
    "end": "1464799"
  },
  {
    "start": "1461000",
    "end": "1600000"
  },
  {
    "text": "were directly updating the neighborhood uh like with the setter uh function but",
    "start": "1464799",
    "end": "1470399"
  },
  {
    "text": "that's not great because now if you want to tell our socket Handler to prop to send that data to other uh people",
    "start": "1470399",
    "end": "1476399"
  },
  {
    "text": "opening the app the neighborhood H the neighborhood model needs to tell that to the socket and that's not good design so",
    "start": "1476399",
    "end": "1483279"
  },
  {
    "text": "instead what we're going to do is make that this event uh tells the app component about the change that will",
    "start": "1483279",
    "end": "1488399"
  },
  {
    "text": "tell the neighborhood Handler about the change and then that will update the model and the socket Handler so again",
    "start": "1488399",
    "end": "1494200"
  },
  {
    "text": "it's all about data propagation and who's owning the data uh so here we'll just just update um the event expression",
    "start": "1494200",
    "end": "1501720"
  },
  {
    "text": "to call an update neighborhood function and all that this function will",
    "start": "1501720",
    "end": "1507840"
  },
  {
    "text": "do on our component is call the neighborhood Handler um and notify it about the",
    "start": "1507840",
    "end": "1515240"
  },
  {
    "text": "change so we'll need a reference to our neighborhood hand neighborhood Handler",
    "start": "1515240",
    "end": "1521960"
  },
  {
    "text": "um that'll just call the update neighborhood uh function on it that we're going to implement just right now",
    "start": "1521960",
    "end": "1530000"
  },
  {
    "text": "so what it will do is first tell the socket about the change so that then it could send an event telling other",
    "start": "1530000",
    "end": "1536640"
  },
  {
    "text": "sockets about it and then it will also update the the model so now if we open our in our",
    "start": "1536640",
    "end": "1543279"
  },
  {
    "text": "browser uh right we didn't tell angular about the socket Handler service so we're going to do that by importing it",
    "start": "1543279",
    "end": "1549960"
  },
  {
    "text": "in our uh component app and well we can put it in the app injector just like",
    "start": "1549960",
    "end": "1555120"
  },
  {
    "text": "neighborhood Handler but uh conceptually the socket Handler is not on the component level it's on the bootstrap",
    "start": "1555120",
    "end": "1561399"
  },
  {
    "text": "level because we just want one socket Handler per page so we'll just put it as",
    "start": "1561399",
    "end": "1566720"
  },
  {
    "text": "a second array for the bootstrap function and then again we can refresh and open another window opening the same",
    "start": "1566720",
    "end": "1573240"
  },
  {
    "text": "app and you can see that the data gets propagated between the two so we we got to our initial demo",
    "start": "1573240",
    "end": "1580960"
  },
  {
    "text": "that we we showed in the presentation and also if you want it to be real time we just have to listen to the input",
    "start": "1580960",
    "end": "1586480"
  },
  {
    "text": "event uh on the input which is in HML 5 and you can see that",
    "start": "1586480",
    "end": "1591640"
  },
  {
    "text": "it propagates real time to the other browser so yeah that's pretty neat now",
    "start": "1591640",
    "end": "1599200"
  },
  {
    "text": "let's convert this to ECM 5 so how many of you think this will be",
    "start": "1599200",
    "end": "1605360"
  },
  {
    "start": "1600000",
    "end": "1921000"
  },
  {
    "text": "hard just one okay it's so it's going to be easy and you you're you're right actually we'll just have to change our",
    "start": "1605360",
    "end": "1611480"
  },
  {
    "text": "typescript files to JS first change the class to a function and put our methods",
    "start": "1611480",
    "end": "1617679"
  },
  {
    "text": "on the pur protype so if you weren't sure what prototypes were before I think now you see the equivalent if you come",
    "start": "1617679",
    "end": "1623279"
  },
  {
    "text": "from a world where there's classes uh we're going to also have to remove any typing information and for the default",
    "start": "1623279",
    "end": "1629080"
  },
  {
    "text": "parameter we're just going to use the or operator which isn't 100% equivalent but it does a",
    "start": "1629080",
    "end": "1634640"
  },
  {
    "text": "job and then uh we'll go to our socket change it from TS tojs change the class",
    "start": "1634640",
    "end": "1640840"
  },
  {
    "text": "to a function and put the methods on the",
    "start": "1640840",
    "end": "1645520"
  },
  {
    "text": "Prototype remove any typing information and now we also have fat",
    "start": "1647159",
    "end": "1652640"
  },
  {
    "text": "Arrow oh we have we have the the dynamically computed um property name so",
    "start": "1652640",
    "end": "1657760"
  },
  {
    "text": "if you're wondering what that that was in EAS 6 that's the equivalent in ecas 5",
    "start": "1657760",
    "end": "1662840"
  },
  {
    "text": "and just looks better in EIP 6 so uh and then there's the uh fat Arrow function",
    "start": "1662840",
    "end": "1669240"
  },
  {
    "text": "that will convert them to long form functions so a lot more",
    "start": "1669240",
    "end": "1677120"
  },
  {
    "text": "characters so we already converted two of our files let's convert our neighborhood Handler",
    "start": "1677120",
    "end": "1683279"
  },
  {
    "text": "so there's no inputs in EAS 5 uh you just have to include the the the the files yourself or use something like",
    "start": "1683279",
    "end": "1689519"
  },
  {
    "text": "requirejs so we'll change the function to a class or remove any typing information um then here we have this",
    "start": "1689519",
    "end": "1695960"
  },
  {
    "text": "annotation that is inject so if you're wondering what's the equivalent in ecma 5 well it's a parameter uh it's a",
    "start": "1695960",
    "end": "1702200"
  },
  {
    "text": "property called parameters on the function that will contain um the",
    "start": "1702200",
    "end": "1707360"
  },
  {
    "text": "parameter the the the injection information then we can add the methods to our",
    "start": "1707360",
    "end": "1714120"
  },
  {
    "text": "prototype here we we continue changing our Arrow functions to actual long form functions um and here we have we're",
    "start": "1714279",
    "end": "1722080"
  },
  {
    "text": "using this. neighborhood but in egm 5 you lose this when you create a new function but in eror functions that's",
    "start": "1722080",
    "end": "1728480"
  },
  {
    "text": "not the case so the usual trick is to do VAR that equal this uh angular yeah so",
    "start": "1728480",
    "end": "1736120"
  },
  {
    "text": "um and then we'll continue changing long for function to a normal function and add a return statement because you don't",
    "start": "1736120",
    "end": "1742240"
  },
  {
    "text": "need that in error functions but you do in long form functions uh but now noticing you don't we don't have to use",
    "start": "1742240",
    "end": "1747679"
  },
  {
    "text": "V that equal this we can actually just uh reference the neighborhood collection and use it like that which looks a bit",
    "start": "1747679",
    "end": "1753679"
  },
  {
    "text": "better now if you're wondering about the equivalent of uh spread oper of the rest",
    "start": "1753679",
    "end": "1759080"
  },
  {
    "text": "rest parameter uh we can use the ar. prototype. slice. call hack to get all",
    "start": "1759080",
    "end": "1764760"
  },
  {
    "text": "the arguments as an array and then to we can change the arrow",
    "start": "1764760",
    "end": "1771320"
  },
  {
    "text": "function and to have the spread operator that we're using on push we can use do apply instead so again this is these are",
    "start": "1772240",
    "end": "1778640"
  },
  {
    "text": "a lot of synthetic sugar that exist in ecos 6 and remove typing information and",
    "start": "1778640",
    "end": "1784320"
  },
  {
    "text": "we're done with our neighborhood Handler there's still the two components left",
    "start": "1784320",
    "end": "1789360"
  },
  {
    "text": "first one is people count um so let's remove uh let's change it from TS tojs",
    "start": "1789360",
    "end": "1796440"
  },
  {
    "text": "and remove and change the the class to a function remove the typing information uh add the methods to the",
    "start": "1796440",
    "end": "1805080"
  },
  {
    "text": "Prototype remove the uh the UTS and now the annotations are a property called",
    "start": "1808000",
    "end": "1813279"
  },
  {
    "text": "annotations on the function and they they become under the uh the angular namespace or the angular object and we",
    "start": "1813279",
    "end": "1820000"
  },
  {
    "text": "have annotation appendant to them and we everything that we were importing from the angular 2 module is",
    "start": "1820000",
    "end": "1826399"
  },
  {
    "text": "now under the angular object and for dependency injection for",
    "start": "1826399",
    "end": "1831919"
  },
  {
    "text": "our Constructor uh again we'll use the parameters uh that will tell angular what to inject in the Constructor and I",
    "start": "1831919",
    "end": "1838960"
  },
  {
    "text": "believe we're done here yep so then we can go to our app component change it from TS tojs remove",
    "start": "1838960",
    "end": "1845360"
  },
  {
    "text": "Imports change the class to a function change this to prototype uh and",
    "start": "1845360",
    "end": "1853000"
  },
  {
    "text": "then we have the annotations just like before change it to The annotation property",
    "start": "1853000",
    "end": "1859919"
  },
  {
    "text": "um and add the uh information for dependency injection and we're done converting our",
    "start": "1861480",
    "end": "1868360"
  },
  {
    "text": "our all our typescript to EAS 5 we just have o except for the bootstrap file for",
    "start": "1868360",
    "end": "1874880"
  },
  {
    "text": "the bootstrap function in in uh Ang in es5 we actually need to listen to when",
    "start": "1874880",
    "end": "1880799"
  },
  {
    "text": "the Dom gets loaded that's not the case in uh es6 because we're loading it via",
    "start": "1880799",
    "end": "1885919"
  },
  {
    "text": "uh systemjs which will take care of that that but that's not the case in es5 so we go to our index change the",
    "start": "1885919",
    "end": "1892840"
  },
  {
    "text": "angular version to the sfx so that puts everything on the global scope instead of things to import from the module we",
    "start": "1892840",
    "end": "1900120"
  },
  {
    "text": "also have to append our script tags um because we're not using any file loader",
    "start": "1900120",
    "end": "1905679"
  },
  {
    "text": "uh and remove system. import so now we can open it in our",
    "start": "1905679",
    "end": "1910960"
  },
  {
    "text": "browser and see that it is working",
    "start": "1910960",
    "end": "1916840"
  },
  {
    "text": "o right so now let's do something even crazier and let's convert this to",
    "start": "1916840",
    "end": "1922360"
  },
  {
    "start": "1921000",
    "end": "2334000"
  },
  {
    "text": "angular one um so first things first we're going to change our angular version to",
    "start": "1922360",
    "end": "1928559"
  },
  {
    "text": "1.4 so 1.4.1 just got released two days ago but I didn't we reccord everything",
    "start": "1928559",
    "end": "1934000"
  },
  {
    "text": "in a day uh we also need to change since uh our app file is going to uh Define",
    "start": "1934000",
    "end": "1940480"
  },
  {
    "text": "our module we just put it on top uh so it will just Define it with angular do module which doesn't exist in angular 2",
    "start": "1940480",
    "end": "1947120"
  },
  {
    "text": "uh but in angular one we have our own module system so our component is just a directive with its name being the",
    "start": "1947120",
    "end": "1953440"
  },
  {
    "text": "selector but camel case and it also has a restrict to being",
    "start": "1953440",
    "end": "1959240"
  },
  {
    "text": "used only as elements and it also has a template URL which is the same as our view",
    "start": "1959240",
    "end": "1964760"
  },
  {
    "text": "annotation so we'll also have a link function um that will link in our case the neighborhood Handler collection for",
    "start": "1964760",
    "end": "1971679"
  },
  {
    "text": "example to uh the",
    "start": "1971679",
    "end": "1975559"
  },
  {
    "text": "scope so that's all the information that we can capture that were in our annotations um so again in angular one",
    "start": "1976840",
    "end": "1984840"
  },
  {
    "text": "like directives and services are in a global registry uh which is in the case in Anger 2 so things like the app",
    "start": "1984840",
    "end": "1990760"
  },
  {
    "text": "injector and the directives array we can't put that uh there's no equivalent in Ang",
    "start": "1990760",
    "end": "1996760"
  },
  {
    "text": "one so then there's this function that used to be on our component that we're going to put on our scope for",
    "start": "1996760",
    "end": "2003240"
  },
  {
    "text": "convenience and yeah we got three of that uh those two there's still the push",
    "start": "2004720",
    "end": "2010080"
  },
  {
    "text": "neighborhood which we could put in our directive but I feel it should be in a one block you might disagree we can",
    "start": "2010080",
    "end": "2016480"
  },
  {
    "text": "argue about that in person we just indect the service and",
    "start": "2016480",
    "end": "2023120"
  },
  {
    "text": "lastly in this file there's a bootstrap which in angular one is different so we actually give it the modle",
    "start": "2023120",
    "end": "2028559"
  },
  {
    "text": "name um yeah that's it for this file we're going to go to our neighborhood Handler which is easier to convert to",
    "start": "2028559",
    "end": "2034840"
  },
  {
    "text": "angular one we'll have our module and it's it's a service obviously with the neighborhood Handler",
    "start": "2034840",
    "end": "2041519"
  },
  {
    "text": "function the only other difference here is that we using the neighborhood uh",
    "start": "2041519",
    "end": "2047559"
  },
  {
    "text": "model which we don't want it to be Global so we'll inject it in our service um reference it right",
    "start": "2047559",
    "end": "2055200"
  },
  {
    "text": "there and let's put this in an immediately invoking function expression so we don't pollute the global scope in",
    "start": "2055240",
    "end": "2062320"
  },
  {
    "text": "in in typescript that's not the case because every the things you define in a module don't go to the global scope to",
    "start": "2062320",
    "end": "2068720"
  },
  {
    "text": "so we're done with the neighborhood Handler the socket Handler is actually even easier it's also a service",
    "start": "2068720",
    "end": "2074398"
  },
  {
    "text": "that uh we register with angular one and we're done here we can go to our",
    "start": "2074399",
    "end": "2081878"
  },
  {
    "text": "model um oh this indentation go to our model uh this could be a factory that",
    "start": "2081879",
    "end": "2087440"
  },
  {
    "text": "Returns the model so very",
    "start": "2087440",
    "end": "2091800"
  },
  {
    "text": "simple let's wrap it in a e that that have pronounced it anyway uh",
    "start": "2092919",
    "end": "2100000"
  },
  {
    "text": "and well this doesn't have to be a factor we can actually change it to a value um it's not common but it's still",
    "start": "2100000",
    "end": "2107240"
  },
  {
    "text": "works and finally we yeah we're done with our service folder we just have our people",
    "start": "2107240",
    "end": "2113640"
  },
  {
    "text": "count so that's again an angular module with a directive that's in this",
    "start": "2113839",
    "end": "2119320"
  },
  {
    "text": "case called people count that's restricted restricted to an element and has the same template URL as a view",
    "start": "2119320",
    "end": "2125240"
  },
  {
    "text": "annotation and let's let's have it have a isolated scope because that's fairly easy to do so notice that here in",
    "start": "2125240",
    "end": "2131839"
  },
  {
    "text": "angular one we don't have the choice but to use two-way data binding unless we want to set it up ourself uh so that",
    "start": "2131839",
    "end": "2138079"
  },
  {
    "text": "would mean that uh if when like amount changes in the directive it will propagate to the parent but we don't",
    "start": "2138079",
    "end": "2144200"
  },
  {
    "text": "want that because then as the app grows it's harder to know what's changing who's changing what uh so we're going to",
    "start": "2144200",
    "end": "2151160"
  },
  {
    "text": "stick to our event and use this best practice so we'll have our link function",
    "start": "2151160",
    "end": "2158599"
  },
  {
    "text": "um and actually we're done with all the information that is in the annotations except for the life cycle which isn't",
    "start": "2158599",
    "end": "2164880"
  },
  {
    "text": "there is no equivalent in angular one so we have to mentally compute that the equivalent is actually to watch the",
    "start": "2164880",
    "end": "2170200"
  },
  {
    "text": "amount property and update the control uh so let's keep that in mind and remove our anotations for",
    "start": "2170200",
    "end": "2176480"
  },
  {
    "text": "now so in angular one there's no uh equivalent to controls you're it's all",
    "start": "2176480",
    "end": "2181599"
  },
  {
    "text": "freefor all so for for our case we'll just put it as a primitive um and again",
    "start": "2181599",
    "end": "2187160"
  },
  {
    "text": "the life cycle will watch instead which doesn't exist in angular 2 and we'll watch the amount property",
    "start": "2187160",
    "end": "2193720"
  },
  {
    "text": "and update our control um because otherwise if we were relying on our amount property we'd be updating the",
    "start": "2193720",
    "end": "2200560"
  },
  {
    "text": "parent uh data which isn't something we want so lastly we'll put our remote amount report amount",
    "start": "2200560",
    "end": "2207720"
  },
  {
    "text": "method sorry yeah we put our remot report",
    "start": "2207720",
    "end": "2214960"
  },
  {
    "text": "amount method and the event syntax is slightly different it's not an iterator it's just a function that you",
    "start": "2214960",
    "end": "2220560"
  },
  {
    "text": "call and we're done with this so we just converted our JavaScript from angular 2 to angular 1 the only thing that's left",
    "start": "2220560",
    "end": "2227480"
  },
  {
    "text": "is our HTML so in angular 1 there's no ng4 model instead of NG control it's NG",
    "start": "2227480",
    "end": "2234040"
  },
  {
    "text": "model and also there's no generic click event you have actually need to use a",
    "start": "2234040",
    "end": "2239200"
  },
  {
    "text": "wrapper in this case NG click and in our uh app template there's",
    "start": "2239200",
    "end": "2244720"
  },
  {
    "text": "no ng4 it's NG repeat with a slightly different synex and also there's no brackets to say that",
    "start": "2244720",
    "end": "2251319"
  },
  {
    "text": "there's a binding uh so we have to remove that and as you can see we're actually losing information with angular",
    "start": "2251319",
    "end": "2256680"
  },
  {
    "text": "one because now looking at this it's not obvious what's a binding what's an event you actually have to go to the directive",
    "start": "2256680",
    "end": "2262680"
  },
  {
    "text": "code to understand it so finally here uh yeah that's it we",
    "start": "2262680",
    "end": "2268400"
  },
  {
    "text": "can go to our browser and refresh and see that it is working except that there's a problem with the sync between",
    "start": "2268400",
    "end": "2276119"
  },
  {
    "text": "the component amount and the uh the model amount and that's because when we're changing it we're getting an event",
    "start": "2276119",
    "end": "2282440"
  },
  {
    "text": "from the socket and in angular one we have to tell angular um to do like",
    "start": "2282440",
    "end": "2288079"
  },
  {
    "text": "scope. apply to tell it to do the diry checking that doesn't exist in angular 2 because we use zone.js so that happens",
    "start": "2288079",
    "end": "2293760"
  },
  {
    "text": "automatically for you uh but for angular one our socket Handler needs to uh tell",
    "start": "2293760",
    "end": "2300280"
  },
  {
    "text": "angular to get back in the angular context if you will so let's inject our",
    "start": "2300280",
    "end": "2305640"
  },
  {
    "text": "root scope because it's a service um and do scope. apply the famous scope.",
    "start": "2305640",
    "end": "2314200"
  },
  {
    "text": "apply and so now it should be",
    "start": "2314839",
    "end": "2319920"
  },
  {
    "text": "working so we just had our app in angular 2 uh and typescript then we",
    "start": "2319920",
    "end": "2324960"
  },
  {
    "text": "converted it to Xmas 5 then we converted it to angular one um but I guess you you saw the difference um so we're done",
    "start": "2324960",
    "end": "2332480"
  },
  {
    "text": "coding finally so what what did we learn with all of this well first that an angular 2 we use ecma6 modules we don't",
    "start": "2332480",
    "end": "2339920"
  },
  {
    "start": "2334000",
    "end": "2364000"
  },
  {
    "text": "have our own mod module system uh so we integrate very well with the with the language and finally the language give",
    "start": "2339920",
    "end": "2346560"
  },
  {
    "text": "us this stuff instead of having to rely on required JS or or browsery uh so again we're using eoip 6 and typescript",
    "start": "2346560",
    "end": "2353599"
  },
  {
    "text": "and if you're worried about the additions of typescripts like types and annotations uh there are the pro",
    "start": "2353599",
    "end": "2358760"
  },
  {
    "text": "proposals for EIP 7 uh to have these features uh so it's definitely on the way and also in angular 2 uh we have",
    "start": "2358760",
    "end": "2366800"
  },
  {
    "text": "this this idea of components that allow for a lot more isolation so you can you can simulate it in angular one like we",
    "start": "2366800",
    "end": "2372920"
  },
  {
    "text": "did but you can also not simulate it and then you it's harder to maintain along the road um so also it's a lot more",
    "start": "2372920",
    "end": "2380720"
  },
  {
    "text": "declarative so in angular one there's no information in the template for example about the bindings and the events in angular 2 uh there is and finally if I a",
    "start": "2380720",
    "end": "2390520"
  },
  {
    "text": "tip if you're so for now if you want to implement something you should implement it in angular one if you're building a",
    "start": "2390520",
    "end": "2395960"
  },
  {
    "text": "production app um but if you want to build it in a way that that will be also easily converted to angular 2 I suggest",
    "start": "2395960",
    "end": "2402560"
  },
  {
    "text": "you look into the controller as syntax um which uh allows allows you to uh take",
    "start": "2402560",
    "end": "2409359"
  },
  {
    "text": "your controller and expose it to your scope so you so in angular 2 we didn't",
    "start": "2409359",
    "end": "2414560"
  },
  {
    "text": "mention the scope at all that was just behind the scenes in angular one you do unless you use the controller as syntax",
    "start": "2414560",
    "end": "2421720"
  },
  {
    "text": "um also that prevents stuff like uh you get the dot notation which is a best practice in angular one uh just by using",
    "start": "2421720",
    "end": "2428920"
  },
  {
    "text": "controller as so before pardoning uh before leaving I just want to give you",
    "start": "2428920",
    "end": "2434920"
  },
  {
    "start": "2434000",
    "end": "2487000"
  },
  {
    "text": "some resources for angular 2 if you want to explore some more uh we there's some",
    "start": "2434920",
    "end": "2440160"
  },
  {
    "text": "pretty good blog uh posts on Victor's uh blog which he's a part of the angular",
    "start": "2440160",
    "end": "2445480"
  },
  {
    "text": "team uh also ionic has a little series introduction to angular 2 thought gram",
    "start": "2445480",
    "end": "2451280"
  },
  {
    "text": "which P Pascal is one of the people behind uh also have information I have blog posts on it also I found this uh um",
    "start": "2451280",
    "end": "2460240"
  },
  {
    "text": "blog this post from angular tips on why angular two rocks and it also goes into a lot more details uh and finally I feel",
    "start": "2460240",
    "end": "2468119"
  },
  {
    "text": "I should mention the angular angular repository which is where angular 2 is being developed um so um uh I feel it's",
    "start": "2468119",
    "end": "2475160"
  },
  {
    "text": "underrated to tell people to just go to a proc story and read the test and read the codebase because that's where how you learn uh a lot about the framework",
    "start": "2475160",
    "end": "2483079"
  },
  {
    "text": "uh also if you have any issues you can open it there um finally if you uh want",
    "start": "2483079",
    "end": "2488920"
  },
  {
    "start": "2487000",
    "end": "2874000"
  },
  {
    "text": "to see the app you want to download it run it uh and so on and see so I have the different versions in different",
    "start": "2488920",
    "end": "2494400"
  },
  {
    "text": "branches so it's on uh under my personal GitHub uh username so already had that/",
    "start": "2494400",
    "end": "2500319"
  },
  {
    "text": "tourist on a trip and yeah if you want to evaluate the stock uh we're told you",
    "start": "2500319",
    "end": "2505720"
  },
  {
    "text": "can do it on a mobile app and we're done so I I tried to go through this fast to",
    "start": "2505720",
    "end": "2511880"
  },
  {
    "text": "have time for questions so does anybody have any questions about angular 2 even angular one um anything",
    "start": "2511880",
    "end": "2518440"
  },
  {
    "text": "actually yes well I don't know if you need a mic I don't know uh yeah",
    "start": "2518440",
    "end": "2526359"
  },
  {
    "text": "uh uh I want to ask about dependency detction uh is uh using annotation the",
    "start": "2526359",
    "end": "2532319"
  },
  {
    "text": "only way to define how the services get",
    "start": "2532319",
    "end": "2537440"
  },
  {
    "text": "injected so you need to make angular aware of your service somehow uh so you can you can do that in",
    "start": "2537440",
    "end": "2545000"
  },
  {
    "text": "the app injector or in the bootstrap function um but then to inject it in your function in your Constructor yes you",
    "start": "2545000",
    "end": "2551599"
  },
  {
    "text": "have to use annotations with the parameters but I'm not surprised if people do helper methods helper",
    "start": "2551599",
    "end": "2557599"
  },
  {
    "text": "functions like libraries that help you do that um also the next talk is about",
    "start": "2557599",
    "end": "2562640"
  },
  {
    "text": "dependency injection so maybe they have more information on it but honestly like you were you were doing something",
    "start": "2562640",
    "end": "2568760"
  },
  {
    "text": "similar with angular one so you were you e either letting it parse your function",
    "start": "2568760",
    "end": "2574280"
  },
  {
    "text": "or putting it in an array so it's not all that different well my question is are there",
    "start": "2574280",
    "end": "2581000"
  },
  {
    "text": "ways to extract this whole definition to a different file",
    "start": "2581000",
    "end": "2586240"
  },
  {
    "text": "for so you so in angular 2 the the thing is uh it's it works a lot more on types",
    "start": "2586240",
    "end": "2593480"
  },
  {
    "text": "so as long as you have a handle on for example a the people count component yes you can have in another file defined",
    "start": "2593480",
    "end": "2599440"
  },
  {
    "text": "that the people count needs this uh this stuff to be injected in it though I would say that's harder to maintain",
    "start": "2599440",
    "end": "2605800"
  },
  {
    "text": "along the road because because I mean whenever you want to change the dependencies you also have to go in another file instead of having it to be",
    "start": "2605800",
    "end": "2612839"
  },
  {
    "text": "Consolidated in one file well if you haveing",
    "start": "2612839",
    "end": "2617920"
  },
  {
    "text": "tools can discuss at that at the end of the day is Javascript it's very flexible so you can do crazy stuff with",
    "start": "2617920",
    "end": "2624520"
  },
  {
    "text": "it so uh another question um yeah and how we make",
    "start": "2624520",
    "end": "2631359"
  },
  {
    "text": "external libraries how to make angular dependency injection container",
    "start": "2631359",
    "end": "2637920"
  },
  {
    "text": "probably uh aware of external libraries that uh are not aware angular per se uh",
    "start": "2637920",
    "end": "2644800"
  },
  {
    "text": "so what's great with angular 2 is it integrates very well with the language uh so you just when you inject something",
    "start": "2644800",
    "end": "2651000"
  },
  {
    "text": "you just give it any random function and uh in this by default it will uh uh",
    "start": "2651000",
    "end": "2657480"
  },
  {
    "text": "instantiate the function with new but you can have your own recipes so you can say that uh this jQuery uh function is",
    "start": "2657480",
    "end": "2664520"
  },
  {
    "text": "actually nothing more than the value so just like in angular one we hadt value in with a new dependency injection",
    "start": "2664520",
    "end": "2670520"
  },
  {
    "text": "system you have things like bind jQuery to jQuery and that would just uh bind it",
    "start": "2670520",
    "end": "2676400"
  },
  {
    "text": "as a value and I think that in the next talk you'll see more about this any other questions yes uh so what",
    "start": "2676400",
    "end": "2684079"
  },
  {
    "text": "are the annotations so are available apart from the components in view are there any other annotations any other",
    "start": "2684079",
    "end": "2690040"
  },
  {
    "text": "annotations is the in this language do yout use yes um there's also a directive",
    "start": "2690040",
    "end": "2696559"
  },
  {
    "text": "annotation so while components are a component in in an application a directive is something that changes an",
    "start": "2696559",
    "end": "2702640"
  },
  {
    "text": "existing element like ng4 is a directive um and also anybody could create their",
    "start": "2702640",
    "end": "2709359"
  },
  {
    "text": "own annotation it's actually just a function that is put on the on in another function uh I'm not sure of any",
    "start": "2709359",
    "end": "2716359"
  },
  {
    "text": "other annotation that we're using other than also inject uh component view yeah that's that's pretty much it I",
    "start": "2716359",
    "end": "2723760"
  },
  {
    "text": "believe any other questions yes and so mention that",
    "start": "2723760",
    "end": "2732440"
  },
  {
    "text": "start around right how coming um personally I don't know um so",
    "start": "2732440",
    "end": "2740160"
  },
  {
    "text": "I'm I'm a contractor working remotely for the team uh so I I actually was a",
    "start": "2740160",
    "end": "2746000"
  },
  {
    "text": "time time zone difference the team meeting are like at midnight so I don't uh participate in all of them um but so",
    "start": "2746000",
    "end": "2754480"
  },
  {
    "text": "it's in it's in developer preview for a reason and I'm not sure if inside Google somebody's already starting to use it",
    "start": "2754480",
    "end": "2760319"
  },
  {
    "text": "though I wouldn't be surprised if they did um I know in angular in the team we",
    "start": "2760319",
    "end": "2765599"
  },
  {
    "text": "Al we've did we've done a hackathon where we just buil apps with angular 2 and just put our issues that we didn't",
    "start": "2765599",
    "end": "2772119"
  },
  {
    "text": "like about the framework that we want to fix um you can you can well Ang University",
    "start": "2772119",
    "end": "2778000"
  },
  {
    "text": "is happening in a couple of days at San Francisco you'll probably he hear some more news on angular 2 then so just keep",
    "start": "2778000",
    "end": "2784359"
  },
  {
    "text": "an eye on Twitter or yeah anything",
    "start": "2784359",
    "end": "2790000"
  },
  {
    "text": "else no yes yeah maybe I'm not aware but is",
    "start": "2790319",
    "end": "2795880"
  },
  {
    "text": "there any controls standard form controls be developed by and",
    "start": "2795880",
    "end": "2802839"
  },
  {
    "text": "team people use it all the time or sorry can you repeat the question",
    "start": "2802839",
    "end": "2810559"
  },
  {
    "text": "yeah you asking about if there controls that are coming a the the material for a",
    "start": "2810559",
    "end": "2816960"
  },
  {
    "text": "I think that's probos and because mostly when I develop",
    "start": "2816960",
    "end": "2823200"
  },
  {
    "text": "something I need like a pile something that from",
    "start": "2823200",
    "end": "2829960"
  },
  {
    "text": "angular yeah that's probably she she's the one working on it",
    "start": "2829960",
    "end": "2835319"
  },
  {
    "text": "so yeah she used to work on it uh yeah there's angular material I don't know if of any other uh uh component libraries",
    "start": "2835319",
    "end": "2843800"
  },
  {
    "text": "that are developed by the team but I wouldn't be surprised with that angular to to have a whole ecosystem about it",
    "start": "2843800",
    "end": "2849480"
  },
  {
    "text": "because it's a lot more isolated there's a lot more better standards if you will U so yeah for angular one I don't think",
    "start": "2849480",
    "end": "2856440"
  },
  {
    "text": "there is any except Google except angular material but that's it thank [Applause]",
    "start": "2856440",
    "end": "2865510"
  },
  {
    "text": "[Music]",
    "start": "2865510",
    "end": "2873960"
  },
  {
    "text": "you",
    "start": "2873960",
    "end": "2876960"
  }
]