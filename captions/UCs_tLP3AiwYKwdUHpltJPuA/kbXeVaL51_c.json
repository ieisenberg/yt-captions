[
  {
    "text": "[Music] welcome to the goto podcast each episode",
    "start": "290",
    "end": "8080"
  },
  {
    "text": "covers the brightest and boldest ideas from the world's leading experts in software development tune in for",
    "start": "8080",
    "end": "14120"
  },
  {
    "text": "practical lessons compelling theories and plenty of",
    "start": "14120",
    "end": "19279"
  },
  {
    "text": "inspiration go to gathers the brightest Minds in the software Community to help developers tackle projects today plan",
    "start": "19960",
    "end": "26720"
  },
  {
    "text": "for tomorrow and create a better future stay up to dat with the latest in Tech through goto's top rated events held",
    "start": "26720",
    "end": "33320"
  },
  {
    "text": "online and in person in cities like Amsterdam London Copenhagen and Chicago",
    "start": "33320",
    "end": "39160"
  },
  {
    "text": "and by subscribing to the go-to conferences YouTube channel where you can find thousands more highquality de",
    "start": "39160",
    "end": "44719"
  },
  {
    "text": "talks learn more e [Music]",
    "start": "44719",
    "end": "51530"
  },
  {
    "text": "goop.com to go to book club I'm Duncan McGregor and today I'm delighted to be interviewing uberto babini about his",
    "start": "51960",
    "end": "59320"
  },
  {
    "text": "book from to functions build your software faster and safer with functional programming and",
    "start": "59320",
    "end": "65519"
  },
  {
    "text": "cotlin uh it's published by pragmatic programs in September Oberto welcome to go to book",
    "start": "65520",
    "end": "71439"
  },
  {
    "text": "club hi nice nice to be here D so Berto we worked in the same circles",
    "start": "71439",
    "end": "78840"
  },
  {
    "text": "in London uh you were a technical reviewer on the book that I wrote with that price and then I returned the favor",
    "start": "78840",
    "end": "84880"
  },
  {
    "text": "by being a technical reviewer on your book but we've never actually worked together uh so how did you you come",
    "start": "84880",
    "end": "90360"
  },
  {
    "text": "working on coton projects in London and now in Japan uh well yeah I was uh working um",
    "start": "90360",
    "end": "98840"
  },
  {
    "text": "in the banks in London and um actually I started learning about the",
    "start": "98840",
    "end": "106439"
  },
  {
    "text": "C many years ago when it was before version one um at that time there was also",
    "start": "106439",
    "end": "113880"
  },
  {
    "text": "another programming language in jbm that seems more prising but uh",
    "start": "113880",
    "end": "121360"
  },
  {
    "text": "after a few years Cy really grow up on me and I started using in the banks and",
    "start": "121360",
    "end": "128840"
  },
  {
    "text": "then um I started looking basically at the beginning we were using",
    "start": "128840",
    "end": "135040"
  },
  {
    "text": "cing you know uh introducing slowly creeping to write the test to write the",
    "start": "135040",
    "end": "141519"
  },
  {
    "text": "little tools and then I started looking for Geek that I could WR Contin the tack",
    "start": "141519",
    "end": "148720"
  },
  {
    "text": "and I think more less we get in touch 100 that time London C communitya the",
    "start": "148720",
    "end": "155519"
  },
  {
    "text": "cic community is not that big so uh what prompted you to write the",
    "start": "155519",
    "end": "162000"
  },
  {
    "text": "book who's it for yeah the idea of the book is um is",
    "start": "162000",
    "end": "169360"
  },
  {
    "text": "basically I'm very passionate about the functional programming but also about",
    "start": "169360",
    "end": "174760"
  },
  {
    "text": "writing a good code you know with the good practice and uh I didn't find much",
    "start": "174760",
    "end": "181400"
  },
  {
    "text": "uh content outside about um yeah how to put together the two things so all the",
    "start": "181400",
    "end": "189480"
  },
  {
    "text": "books about uh you know TD or um clean programming or stuff like that tends to",
    "start": "189480",
    "end": "196680"
  },
  {
    "text": "be very object oriented and all the book about functional programming tends to be",
    "start": "196680",
    "end": "202879"
  },
  {
    "text": "quite uh uh you know very a specific exercise on specific things on",
    "start": "202879",
    "end": "210159"
  },
  {
    "text": "functional programing and there was no book about uh yeah how to set up a full",
    "start": "210159",
    "end": "216120"
  },
  {
    "text": "project from scratch and adopting fambi with a kind of pragmatical point of view",
    "start": "216120",
    "end": "223959"
  },
  {
    "text": "let's say so I think it's a quite useful both for people that came from a Java",
    "start": "223959",
    "end": "230159"
  },
  {
    "text": "background or also cult but use a bit of like Java agile I mean simple Java and",
    "start": "230159",
    "end": "238400"
  },
  {
    "text": "they wanted to touch a bit of functional programming or people com in from more",
    "start": "238400",
    "end": "244920"
  },
  {
    "text": "functional advanced stuff like H Scala and want to use a I mean take advantage",
    "start": "244920",
    "end": "251560"
  },
  {
    "text": "of cing Simplicity and productivity I should say it's um the",
    "start": "251560",
    "end": "258120"
  },
  {
    "text": "book isn't a sort of academic book it takes um it takes a project it takes the example is a sort of too list if I",
    "start": "258120",
    "end": "264800"
  },
  {
    "text": "remember um and it takes us from sort of Inception the initial sort of",
    "start": "264800",
    "end": "270320"
  },
  {
    "text": "prototyping all the way through to to a sort of um complete database backed um",
    "start": "270320",
    "end": "275440"
  },
  {
    "text": "application with a web front end and so on and I found that was quite refreshing it's not just how do you",
    "start": "275440",
    "end": "282759"
  },
  {
    "text": "um it's not just these are bits of functional programming it is how to plug",
    "start": "282759",
    "end": "288280"
  },
  {
    "text": "functional programming into an entire Project Life Cycle yeah um I mean we have a lot of",
    "start": "288280",
    "end": "295680"
  },
  {
    "text": "beta read for this book and uh I mean most of them really appreciated",
    "start": "295680",
    "end": "302600"
  },
  {
    "text": "that uh some some people were a bit uh uh let's say not suff but a bit",
    "start": "302600",
    "end": "310440"
  },
  {
    "text": "disappointed that there was not much Theory or moreing",
    "start": "310440",
    "end": "316360"
  },
  {
    "text": "down uh specific super specific functional programming thing but I kind",
    "start": "316360",
    "end": "323479"
  },
  {
    "text": "of uh stand my position because I think is a ER it's not functional programming",
    "start": "323479",
    "end": "330919"
  },
  {
    "text": "for the sake of doing functional programming I mean the the point is to deliver an application at the end in our",
    "start": "330919",
    "end": "337199"
  },
  {
    "text": "job we wanted to deliver value to the user so I'm trying to say come on with",
    "start": "337199",
    "end": "343360"
  },
  {
    "text": "functional programming we can be more productive at least for a kind of applications like uh",
    "start": "343360",
    "end": "351680"
  },
  {
    "text": "backends where uh so this is uh my something that I did and I think sharing",
    "start": "351680",
    "end": "359639"
  },
  {
    "text": "can be useful for other people it's not about let's learn how to use a 25 kind",
    "start": "359639",
    "end": "364720"
  },
  {
    "text": "of monuts or stuff like so um so Cottin's a sort of multi-",
    "start": "364720",
    "end": "370560"
  },
  {
    "text": "Paradigm language um I think Scala um took that took that mantle",
    "start": "370560",
    "end": "375639"
  },
  {
    "text": "first but um we can write we can write procedural we can write objectoriented or functional style um I think I mean",
    "start": "375639",
    "end": "383120"
  },
  {
    "text": "Colin sort of probably starts from o being on the jvm lots of the sort of",
    "start": "383120",
    "end": "389039"
  },
  {
    "text": "libraries we use are objectoriented but how would you how would you look at some cotlin code and",
    "start": "389039",
    "end": "394240"
  },
  {
    "text": "decide that it was functional versus o what characteriz is functional programming for",
    "start": "394240",
    "end": "399560"
  },
  {
    "text": "you yeah I mean uh the first thing is that is really not that important that",
    "start": "399560",
    "end": "406160"
  },
  {
    "text": "is a functional programing object oriented but I appreciate that the",
    "start": "406160",
    "end": "412400"
  },
  {
    "text": "advantage of a functional plam me is having functions basically everything is is a",
    "start": "412400",
    "end": "420680"
  },
  {
    "text": "design using function and putting the function together to do some uh",
    "start": "420680",
    "end": "425960"
  },
  {
    "text": "um some feature I mean to to do some task and the good thing is that uh you",
    "start": "425960",
    "end": "432840"
  },
  {
    "text": "know combining a this function each function does just a bit piece of work",
    "start": "432840",
    "end": "439520"
  },
  {
    "text": "and it's very designed clearly designed from the input to the output so it's",
    "start": "439520",
    "end": "444879"
  },
  {
    "text": "easy to test it's easy to reuse in another place if you to do the same F",
    "start": "444879",
    "end": "450400"
  },
  {
    "text": "and then you put together and you have a soci so when instead code started to",
    "start": "450400",
    "end": "457240"
  },
  {
    "text": "answer to external things like singon or external calls without",
    "start": "457240",
    "end": "464680"
  },
  {
    "text": "being clearly specified by the type system then it becomes also very hard to",
    "start": "464680",
    "end": "471039"
  },
  {
    "text": "use I mean I remember someone that um actually in the banks some point someone",
    "start": "471039",
    "end": "477960"
  },
  {
    "text": "was doing um some calulation and uh got a function from another piece of the",
    "start": "477960",
    "end": "483759"
  },
  {
    "text": "program but um that function was locking the lot of stuff and uh just using that",
    "start": "483759",
    "end": "489800"
  },
  {
    "text": "function slow down the world application and uh we realizing production so this",
    "start": "489800",
    "end": "495639"
  },
  {
    "text": "kind of stuff um it's kind of easier with the functional programming to see",
    "start": "495639",
    "end": "501720"
  },
  {
    "text": "what you are actually doing without the kind of casting the code so so I mean my experience of good",
    "start": "501720",
    "end": "509759"
  },
  {
    "text": "o is that it sort of shares those those same sort of properties um",
    "start": "509759",
    "end": "515640"
  },
  {
    "text": "do you think there's still a place for object programming or do you think we should look at all yeah problems as",
    "start": "515640",
    "end": "520800"
  },
  {
    "text": "functional no no I mean I think actually this is a great thing about cing that",
    "start": "520800",
    "end": "526200"
  },
  {
    "text": "you can use both uh because a lot of U class of problems are tell much easier",
    "start": "526200",
    "end": "533240"
  },
  {
    "text": "to do in F programming or also if we wanted to break the H let's say and I",
    "start": "533240",
    "end": "540240"
  },
  {
    "text": "have like an internal cash or stuff like that so far that is clearly",
    "start": "540240",
    "end": "546320"
  },
  {
    "text": "defined and uh it's very convenient convenient I mean it's very productive I",
    "start": "546320",
    "end": "552360"
  },
  {
    "text": "can just uh do this stuff without the clean keeping the code clean and having",
    "start": "552360",
    "end": "557839"
  },
  {
    "text": "this stuff done plus all this this kind of perment that uh require kind of",
    "start": "557839",
    "end": "564040"
  },
  {
    "text": "simulation where you keep a lot of object with an internal state that alive",
    "start": "564040",
    "end": "570600"
  },
  {
    "text": "for a long time they actually much better fit for",
    "start": "570600",
    "end": "575920"
  },
  {
    "text": "op object oriented programming then F programming is great when you have a",
    "start": "575920",
    "end": "582160"
  },
  {
    "text": "kind of flow of transformation so it fit the more naturally web server",
    "start": "582160",
    "end": "588240"
  },
  {
    "text": "or ETL application that just read from a message que and write it to another",
    "start": "588240",
    "end": "594399"
  },
  {
    "text": "message good this kind of stuff which is quite common in the banks and other kind of uh Pi back and it's really great I",
    "start": "594399",
    "end": "602200"
  },
  {
    "text": "think certainly that's something I've sort of come to realize I suppose only really recently that that the",
    "start": "602200",
    "end": "609079"
  },
  {
    "text": "objectoriented programming I Learned was about um in memory um user interfaces",
    "start": "609079",
    "end": "615079"
  },
  {
    "text": "where um where everything about the system was in was in one place we could manage state in in in our memory whereas",
    "start": "615079",
    "end": "623640"
  },
  {
    "text": "uh whereas he says we just don't have those we don't program like that anymore everything is thrown away between",
    "start": "623640",
    "end": "628800"
  },
  {
    "text": "requests nothing stays in memory we assume that our um we assume that our state is all",
    "start": "628800",
    "end": "635760"
  },
  {
    "text": "going to be held somewhere outside of our program um so do you think that do",
    "start": "635760",
    "end": "640839"
  },
  {
    "text": "you think that functional programming um functional programming is sort of risen risen with web scale",
    "start": "640839",
    "end": "647440"
  },
  {
    "text": "things um and yeah I think I mean yeah for for this kind of",
    "start": "647440",
    "end": "652760"
  },
  {
    "text": "uh yeah clown what is it clowner native however you want to call this kind of",
    "start": "652760",
    "end": "658680"
  },
  {
    "text": "application basically you just uh yeah process uh the request to uh responses",
    "start": "658680",
    "end": "665880"
  },
  {
    "text": "uh and uh I I wishing is the state you keep the state outside the application so you wanted to have a kind of",
    "start": "665880",
    "end": "672959"
  },
  {
    "text": "a type security around that state to avoid to to make um you know to have a",
    "start": "672959",
    "end": "681279"
  },
  {
    "text": "run time errors or stuff like that because the connection was not open or something like that all this stuff it",
    "start": "681279",
    "end": "687760"
  },
  {
    "text": "came very natural I mean very natural fit with the functional programming um I",
    "start": "687760",
    "end": "693480"
  },
  {
    "text": "mean I think in your book you mention like working along the grain of the",
    "start": "693480",
    "end": "699120"
  },
  {
    "text": "language and in this in this sense uh it's also working along the grain of the",
    "start": "699120",
    "end": "704760"
  },
  {
    "text": "application I mean the uh you need to do something like that in a kind of cloud",
    "start": "704760",
    "end": "711279"
  },
  {
    "text": "native distribut the stuff F program is very good approach in my opinion I mean",
    "start": "711279",
    "end": "717639"
  },
  {
    "text": "I think I come to the conclusion that we that we have um we're really still using oo but the objects that we have are are",
    "start": "717639",
    "end": "724800"
  },
  {
    "text": "servers now and that we're using message passing polymorphism all those sort of things to to implement oo between things",
    "start": "724800",
    "end": "731959"
  },
  {
    "text": "and then functional programming inside um inside those applications yeah I mean that's",
    "start": "731959",
    "end": "737320"
  },
  {
    "text": "definitely a way to see uh I mean the theal service work in a kind of external",
    "start": "737320",
    "end": "744760"
  },
  {
    "text": "uh from an architectural point of view they work a bit of a like object and also this is a bit what I mean we are",
    "start": "744760",
    "end": "751720"
  },
  {
    "text": "doing a bit of philosophy or history of computing but uh an K came with this",
    "start": "751720",
    "end": "758519"
  },
  {
    "text": "idea that basically object are bit like a computer on the",
    "start": "758519",
    "end": "764160"
  },
  {
    "text": "night while something like that and um",
    "start": "764160",
    "end": "769800"
  },
  {
    "text": "which is not super helpful in my op it's not super performance wise a great idea",
    "start": "769800",
    "end": "776440"
  },
  {
    "text": "to to implement everything like that but uh when you have the stuff the on the",
    "start": "776440",
    "end": "783399"
  },
  {
    "text": "net is very good uh yeah so I think Alan K also said something about that with",
    "start": "783399",
    "end": "789240"
  },
  {
    "text": "that the things that Java and I suppose cotlin do in terms of oo is not is not",
    "start": "789240",
    "end": "795519"
  },
  {
    "text": "objector programming it's class-based programming",
    "start": "795519",
    "end": "800720"
  },
  {
    "text": "um one of the things that I I struggle with in functional programming is that we we learned in",
    "start": "800720",
    "end": "808000"
  },
  {
    "text": "know that encapsulation was a thing uh that like having classes and the having data and the",
    "start": "808000",
    "end": "814720"
  },
  {
    "text": "operation on those classes together was an important thing functional programming says uh no actually they",
    "start": "814720",
    "end": "820160"
  },
  {
    "text": "should be separate um how do you where where do you where do you sit on that on that Spectrum um when do we decide how",
    "start": "820160",
    "end": "826800"
  },
  {
    "text": "do we decide yeah I mean we in our we have the",
    "start": "826800",
    "end": "832120"
  },
  {
    "text": "kind of um uh tumber r that uh to to the decide",
    "start": "832120",
    "end": "839519"
  },
  {
    "text": "when to use a Lambda or an interface just to maybe it's clear to you but just",
    "start": "839519",
    "end": "844600"
  },
  {
    "text": "to clarify they say that you have a function um that needed to assess a",
    "start": "844600",
    "end": "852120"
  },
  {
    "text": "database and so you need uh your function that right something and you",
    "start": "852120",
    "end": "859720"
  },
  {
    "text": "pass another function that assess the database and get the user and then in",
    "start": "859720",
    "end": "865040"
  },
  {
    "text": "some other part you need a function to write the user to a database now the general uh objectoriented",
    "start": "865040",
    "end": "873199"
  },
  {
    "text": "approach will be to design a kind of interface of the database layer or stuff",
    "start": "873199",
    "end": "879079"
  },
  {
    "text": "like that where you put all this stuff together and uh and it's fine I mean I",
    "start": "879079",
    "end": "885560"
  },
  {
    "text": "don't have anything but uh if uh I needed to pass this uh data say uh",
    "start": "885560",
    "end": "892800"
  },
  {
    "text": "object every time I needed to access the database I may to pass really too much",
    "start": "892800",
    "end": "898639"
  },
  {
    "text": "because uh if I just needed to get the user I'm passing an interface with 10",
    "start": "898639",
    "end": "905160"
  },
  {
    "text": "methods or 20 methods that uh I really don't need so in that case just passing",
    "start": "905160",
    "end": "910600"
  },
  {
    "text": "a single function is an advantage it create L",
    "start": "910600",
    "end": "915680"
  },
  {
    "text": "coping uh yeah our Ru of T is that if you need one is okay if you need the two",
    "start": "915680",
    "end": "922480"
  },
  {
    "text": "Lambda is okay but if you need a three Lambda from the same kind of interface just pass the",
    "start": "922480",
    "end": "927560"
  },
  {
    "text": "interface something that I think that's probably the rule of thumb we came up with in a book as well that um yes that",
    "start": "927560",
    "end": "934440"
  },
  {
    "text": "there is um if if you have to express a coupling on reading and writing then you",
    "start": "934440",
    "end": "940079"
  },
  {
    "text": "should probably have an interface but if it's just reading or writing then then just one thing yeah H yeah that's another yeah another and um but that's",
    "start": "940079",
    "end": "948720"
  },
  {
    "text": "actually another great thing about C that they all your to leverage on the W",
    "start": "948720",
    "end": "954800"
  },
  {
    "text": "Java World libraries that are huge and then you can of take the Java library",
    "start": "954800",
    "end": "961759"
  },
  {
    "text": "and just pass the the method Lambda reference",
    "start": "961759",
    "end": "967319"
  },
  {
    "text": "without without having I mean in Scala you needed to Scala enclosure you needed",
    "start": "967480",
    "end": "973120"
  },
  {
    "text": "to do a lot of things to be able to interact with Java is not that",
    "start": "973120",
    "end": "979600"
  },
  {
    "text": "easy so um you I mean your book has cotlin in the in the subtitle but I",
    "start": "979600",
    "end": "985440"
  },
  {
    "text": "don't think you would you call it a cotlin book I mean it's definitely but it's a",
    "start": "985440",
    "end": "991759"
  },
  {
    "text": "cing book I mean you needed to hit the cing the book but uh I think the kind of",
    "start": "991759",
    "end": "997199"
  },
  {
    "text": "uh teaching or the approach let's say um is not specific go in ital a couple of",
    "start": "997199",
    "end": "1006079"
  },
  {
    "text": "betaa um don't use cin as a main language and um well one one learn cing",
    "start": "1006079",
    "end": "1013600"
  },
  {
    "text": "just read in the book and uh they are using types script mostly and they yeah",
    "start": "1013600",
    "end": "1020319"
  },
  {
    "text": "they said that they can makes a lot of sense also this approach for typescript",
    "start": "1020319",
    "end": "1026319"
  },
  {
    "text": "application as right certainly it's my experience that that Java developers and typescript developers come to cotland",
    "start": "1026319",
    "end": "1032520"
  },
  {
    "text": "quite easily um there sort of changes in syntax but lots of the um the sort of",
    "start": "1032520",
    "end": "1038839"
  },
  {
    "text": "fundamentals are there it's an easy language to read and it's quite an easy language to write yeah no definitely",
    "start": "1038839",
    "end": "1044839"
  },
  {
    "text": "could you have written the book in a different language um I mean why not How",
    "start": "1044839",
    "end": "1050799"
  },
  {
    "text": "would how would it have changed if you'd written it in a different language I suppose yeah I mean there have a few spe",
    "start": "1050799",
    "end": "1057520"
  },
  {
    "text": "cly specific things I mean things that make some more sense and uh I had to",
    "start": "1057520",
    "end": "1063240"
  },
  {
    "text": "work in um Java project recently to be honest and it's kind of painful to use",
    "start": "1063240",
    "end": "1069520"
  },
  {
    "text": "functional studing Java because um I was",
    "start": "1069520",
    "end": "1074720"
  },
  {
    "text": "became a bit more hard and uh other and other so you",
    "start": "1074720",
    "end": "1081159"
  },
  {
    "text": "tended to write less functional stuff because I the type declaration are very",
    "start": "1081159",
    "end": "1086559"
  },
  {
    "text": "long to to do some transformation The Collection you needed to use stream",
    "start": "1086559",
    "end": "1092640"
  },
  {
    "text": "everything this were B and it came uh so",
    "start": "1092640",
    "end": "1097679"
  },
  {
    "text": "and on the other side Java program when they switch to C intendo to keep the",
    "start": "1097679",
    "end": "1102919"
  },
  {
    "text": "same Java approach before learning kind of a c idiomatic way but the main sorry",
    "start": "1102919",
    "end": "1110880"
  },
  {
    "text": "just the the main um the main point I mean right in this",
    "start": "1110880",
    "end": "1116080"
  },
  {
    "text": "application I think uh if I to write in typescript or some other language with a",
    "start": "1116080",
    "end": "1122799"
  },
  {
    "text": "bit of functional capabilities it won't be that",
    "start": "1122799",
    "end": "1128080"
  },
  {
    "text": "[Music] different I think it's trendy to say that um the language doesn't matter uh",
    "start": "1128080",
    "end": "1134640"
  },
  {
    "text": "but but I do find that the things that our language makes hard we don't do um yeah I had a comment on one of",
    "start": "1134640",
    "end": "1141799"
  },
  {
    "text": "my yeah somebody was saying um it was a it was a video on property based testing",
    "start": "1141799",
    "end": "1148120"
  },
  {
    "text": "and um somebody was saying oh you introduce a type here in a way that I don't think that a Java programmer would",
    "start": "1148120",
    "end": "1154559"
  },
  {
    "text": "because had you know introducing a type would have been too painful but because in cotland it's sort of like three lines to introduce a type",
    "start": "1154559",
    "end": "1161760"
  },
  {
    "text": "um then it it's very natural in I find in the language to to solve problems with types it's a natural language to",
    "start": "1161760",
    "end": "1168480"
  },
  {
    "text": "solve problems with the things that are easy to do in the language yeah yeah definitely I mean in",
    "start": "1168480",
    "end": "1174159"
  },
  {
    "text": "in Java just the fact that they needed to create a new file kind of stop you I mean yeah do",
    "start": "1174159",
    "end": "1181480"
  },
  {
    "text": "you even if the file just two lines is a bit different if you just put the tempor",
    "start": "1181480",
    "end": "1187360"
  },
  {
    "text": "yeah enough so I was an objector developer in the 90s and I had the definition of polymorphism of Pat um it",
    "start": "1187360",
    "end": "1195039"
  },
  {
    "text": "was required in job interviews at the time but your book talks a lot about thinking in morphisms uh what do you",
    "start": "1195039",
    "end": "1200559"
  },
  {
    "text": "mean by that okay uh basically for me the kind",
    "start": "1200559",
    "end": "1205880"
  },
  {
    "text": "of a breakthrough of functional programming is um there is a is when I started",
    "start": "1205880",
    "end": "1213159"
  },
  {
    "text": "realizing that data is not that important what is uh uh more important",
    "start": "1213159",
    "end": "1219799"
  },
  {
    "text": "is data transformation so looking at the programming like the design of the",
    "start": "1219799",
    "end": "1226640"
  },
  {
    "text": "application like a CH transformation instead of uh a flow of data let's",
    "start": "1226640",
    "end": "1233799"
  },
  {
    "text": "say uh and this transformation I mean in categor here there right the most",
    "start": "1233799",
    "end": "1241919"
  },
  {
    "text": "General way to call transformation yeah is called morphism in mathematics and so I think uh yeah this",
    "start": "1241919",
    "end": "1249280"
  },
  {
    "text": "idea of thinking in morphism how you transform without even looking at the",
    "start": "1249280",
    "end": "1255200"
  },
  {
    "text": "code first but just start looking at the",
    "start": "1255200",
    "end": "1260240"
  },
  {
    "text": "a web server as a a machine that transform request in responses and then",
    "start": "1260240",
    "end": "1266080"
  },
  {
    "text": "for each possible part you see here I'm transforming a",
    "start": "1266080",
    "end": "1272840"
  },
  {
    "text": "user ID in a user content web page and every step is at the end is",
    "start": "1272840",
    "end": "1279520"
  },
  {
    "text": "transformation and there is this um theor in category Theory which is called",
    "start": "1279520",
    "end": "1285799"
  },
  {
    "text": "un dma which mostly say uh I'm I'm paraphrasing but uh that uh if you can",
    "start": "1285799",
    "end": "1294159"
  },
  {
    "text": "uh you you know all the function from a data type and to the data type you can",
    "start": "1294159",
    "end": "1300520"
  },
  {
    "text": "identify univocally the data type so this idea that the connection",
    "start": "1300520",
    "end": "1307400"
  },
  {
    "text": "actually more important that the data shape itself yes I've heard it said that that",
    "start": "1307400",
    "end": "1313440"
  },
  {
    "text": "a that a type is not actually the data it's the operations on that data is is the thing that actually find the type",
    "start": "1313440",
    "end": "1319039"
  },
  {
    "text": "for us yeah I mean uh well you the type is",
    "start": "1319039",
    "end": "1324840"
  },
  {
    "text": "yeah the the shape of the data but um it kind of get UniFi un uh uniquely",
    "start": "1324840",
    "end": "1333240"
  },
  {
    "text": "designed by the relation that he has with the other data basically I'm interested in in your your background we",
    "start": "1333240",
    "end": "1339960"
  },
  {
    "text": "didn't hear your education um where did where did you learn category Theory how how's this come how's this come to be uh",
    "start": "1339960",
    "end": "1347520"
  },
  {
    "text": "well now I mean it's but s Lear and I'm not definitely an expert",
    "start": "1347520",
    "end": "1353679"
  },
  {
    "text": "but um I mean s time I always be to Beed in",
    "start": "1353679",
    "end": "1360320"
  },
  {
    "text": "mathematics and I I didn't finish the university but I was",
    "start": "1360320",
    "end": "1366400"
  },
  {
    "text": "studed and definitely category three is very mathematical and also to be",
    "start": "1366400",
    "end": "1373200"
  },
  {
    "text": "completely honest I don't think it's really needed to to I mean is you like I think is really great I I got a lot of",
    "start": "1373200",
    "end": "1381080"
  },
  {
    "text": "fun and uh insights but you definitely don't need uh to learn category to use",
    "start": "1381080",
    "end": "1387520"
  },
  {
    "text": "functional programming is a bit like you don't need to speak Japanese to prepare",
    "start": "1387520",
    "end": "1392600"
  },
  {
    "text": "Sushi or stuff or to appreciate",
    "start": "1392600",
    "end": "1397039"
  },
  {
    "text": "this um can you so can you give an example where thinking in morphisms leads to better",
    "start": "1398200",
    "end": "1404159"
  },
  {
    "text": "software uh yeah I mean for me it's bit like",
    "start": "1404159",
    "end": "1409200"
  },
  {
    "text": "um when when we approach a problem and just uh the we needed to do this typically",
    "start": "1409200",
    "end": "1418600"
  },
  {
    "text": "this a new API to connect this other two system to get some result and give the",
    "start": "1418600",
    "end": "1425320"
  },
  {
    "text": "result to the user this is kind of typical and uh instead of uh you know",
    "start": "1425320",
    "end": "1432480"
  },
  {
    "text": "start uh drawing squares and the AR was",
    "start": "1432480",
    "end": "1437679"
  },
  {
    "text": "like this uh trying to um for me it's a bit of a",
    "start": "1437679",
    "end": "1443200"
  },
  {
    "text": "okay what is our input and what is our output to try to identify the",
    "start": "1443200",
    "end": "1448640"
  },
  {
    "text": "transformation and then see okay this is the main transformation so we have a I",
    "start": "1448640",
    "end": "1453960"
  },
  {
    "text": "don't know a financial product that and the output is some kind of uh uh price",
    "start": "1453960",
    "end": "1462080"
  },
  {
    "text": "fa value and uh okay how we get from here there and the a lot of possible",
    "start": "1462080",
    "end": "1469039"
  },
  {
    "text": "transformation possible way to do this using the system and trying to concentrate on this kind of flow you say",
    "start": "1469039",
    "end": "1478880"
  },
  {
    "text": "and this for me I mean thinking in this way thinking about the transformation how to put the transformation together",
    "start": "1478880",
    "end": "1485520"
  },
  {
    "text": "rather than trying to think about I create a service a a service B service a",
    "start": "1485520",
    "end": "1492760"
  },
  {
    "text": "uh call to service B and it's bit I mean the result may be similar but yeah the",
    "start": "1492760",
    "end": "1498840"
  },
  {
    "text": "mental process for me is very different I wonder whether that's a place where where AI can help us that we",
    "start": "1498840",
    "end": "1505520"
  },
  {
    "text": "um that that if as you say effectively you're thinking of the the type signatures of this transformation and we",
    "start": "1505520",
    "end": "1511640"
  },
  {
    "text": "know we've got like I've got um this ID for this thing and this way trading this",
    "start": "1511640",
    "end": "1516720"
  },
  {
    "text": "ID for this piece of information I need this piece of information to find this um that that maybe AIS would be good at",
    "start": "1516720",
    "end": "1523720"
  },
  {
    "text": "plugging together those sort of um those sort of Pipelines yeah definitely I mean uh in a sense uh",
    "start": "1523720",
    "end": "1532840"
  },
  {
    "text": "I don't know maybe just me but I always find uh uh I mean you said that you",
    "start": "1532840",
    "end": "1537919"
  },
  {
    "text": "start object oriented in uh 90s I was starting programming in 90s and I think",
    "start": "1537919",
    "end": "1544520"
  },
  {
    "text": "I got objectoriented around 2005 so after 10 years that I was trying",
    "start": "1544520",
    "end": "1550399"
  },
  {
    "text": "to and object for me has been always a bit a kind of a you know poetic is a bit",
    "start": "1550399",
    "end": "1557840"
  },
  {
    "text": "like to you you need to very uh you know to to get something that work together",
    "start": "1557840",
    "end": "1566000"
  },
  {
    "text": "it's a bit hard is that functional program is more mathematic so it's probably something easier for AI to plug",
    "start": "1566000",
    "end": "1573480"
  },
  {
    "text": "together and verified that is so so on that subject I mean yes o",
    "start": "1573480",
    "end": "1580200"
  },
  {
    "text": "has a sort of um not Mystique but it has a um a sensibility sort of like there is",
    "start": "1580200",
    "end": "1586919"
  },
  {
    "text": "this idea of smells and this idea that this is this is the uh this is the",
    "start": "1586919",
    "end": "1592159"
  },
  {
    "text": "system that wants to come out of this problem isn't there um uh so I've heard it said that we",
    "start": "1592159",
    "end": "1600200"
  },
  {
    "text": "don't need patterns in functional programming because patterns were sort of O's",
    "start": "1600200",
    "end": "1606559"
  },
  {
    "text": "um uh way way of collecting things that didn't smell ways of collecting nice",
    "start": "1606559",
    "end": "1612640"
  },
  {
    "text": "Shapes of Things um and and there was a lot of there was a lot of talk early least that",
    "start": "1612640",
    "end": "1619440"
  },
  {
    "text": "uh pattern were working around the lack of functional paradigms uh in in the languages um but but it seems to me",
    "start": "1619440",
    "end": "1627120"
  },
  {
    "text": "there are lots of places in functional programming where we have to learn these reusable solutions to problems um I I",
    "start": "1627120",
    "end": "1633840"
  },
  {
    "text": "recently sort of I think from your book I read um I read about the ROM mode ad",
    "start": "1633840",
    "end": "1639799"
  },
  {
    "text": "and that finally sort of clicked for me what the ROM monad was what problem the read monad was solving um but is is the",
    "start": "1639799",
    "end": "1647159"
  },
  {
    "text": "redom monad a patent in functional programming I think U why are using the",
    "start": "1647159",
    "end": "1655000"
  },
  {
    "text": "mon world because uh have a lot of um weird I mean some people is say mon no",
    "start": "1655000",
    "end": "1661840"
  },
  {
    "text": "no no no some people say yes Monet only mon which are both for approach and uh",
    "start": "1661840",
    "end": "1670120"
  },
  {
    "text": "the point is that okay the read what the mons are mathematical construct how you",
    "start": "1670120",
    "end": "1675799"
  },
  {
    "text": "translate that mathematical construct in code it's not uh a given I",
    "start": "1675799",
    "end": "1683200"
  },
  {
    "text": "mean there could be several way that you can do that and uh of course everybody",
    "start": "1683200",
    "end": "1690000"
  },
  {
    "text": "tends to use the kind of a well there are a few variation but mostly the same",
    "start": "1690000",
    "end": "1696080"
  },
  {
    "text": "approach but it's still just one possible approach and I think this kind of approach is a pattern I mean the man",
    "start": "1696080",
    "end": "1702640"
  },
  {
    "text": "itself is a kind of a mathematical concept that sometimes somean stuff that",
    "start": "1702640",
    "end": "1708720"
  },
  {
    "text": "has been called Monet and not much more monets I mean no programming monets is really",
    "start": "1708720",
    "end": "1717559"
  },
  {
    "text": "100% the mathematical monets but some are not probably not even 10% and they",
    "start": "1717559",
    "end": "1722679"
  },
  {
    "text": "just use monets the same of course is true of patterns that we we we learn patterns",
    "start": "1722679",
    "end": "1729080"
  },
  {
    "text": "but then um the thing we call that pattern is is not necessarily all of all of the pattern as it's defined and so on",
    "start": "1729080",
    "end": "1735880"
  },
  {
    "text": "and we kind of stitch these things together don't we they are uh we build software out of things that",
    "start": "1735880",
    "end": "1741039"
  },
  {
    "text": "play this part in this pattern or this part in this in you know in this other pattern I remember when the pattern",
    "start": "1741039",
    "end": "1747640"
  },
  {
    "text": "Booker came out and uh you know people were at that time were writing stuff",
    "start": "1747640",
    "end": "1754120"
  },
  {
    "text": "like this is a visitor pattern class or abstract",
    "start": "1754120",
    "end": "1761399"
  },
  {
    "text": "Factory and then you put the name of the pattern in the class and then the class maybe changes so at the end you became",
    "start": "1761399",
    "end": "1768120"
  },
  {
    "text": "super confusing and stuff like that so I really tend now not to use any mon near",
    "start": "1768120",
    "end": "1775399"
  },
  {
    "text": "in my classes just use the mon pattern if you want uh the idea that just",
    "start": "1775399",
    "end": "1782000"
  },
  {
    "text": "basically just a generic that you can transform B and you can combine with other",
    "start": "1782000",
    "end": "1787559"
  },
  {
    "text": "gen and this this idea the transformation really makes a lot of sense to me and also kind of a Mark when",
    "start": "1787559",
    "end": "1796080"
  },
  {
    "text": "you have something uh you you know if you have a generics around the um",
    "start": "1796080",
    "end": "1802640"
  },
  {
    "text": "database um connection or transaction you know that that function will be",
    "start": "1802640",
    "end": "1809000"
  },
  {
    "text": "called in a context it came quite naturally I mean it's just a good point",
    "start": "1809000",
    "end": "1814799"
  },
  {
    "text": "to Mark yeah yeah it seems to me that that patent names in in the names of",
    "start": "1814799",
    "end": "1820399"
  },
  {
    "text": "types was an anti patent but they were useful for documenting what what role this thing had so it was good for",
    "start": "1820399",
    "end": "1826799"
  },
  {
    "text": "documentation good for comment but not so good for the names of things and I guess that's probably true of um",
    "start": "1826799",
    "end": "1833279"
  },
  {
    "text": "functional functional patterns readers writers and so on yeah it makes sense if the other",
    "start": "1833279",
    "end": "1840600"
  },
  {
    "text": "people knows about you can communicate very quickly but uh if",
    "start": "1840600",
    "end": "1847279"
  },
  {
    "text": "the high team is not uh familiar it's just a confusing and so so on the",
    "start": "1847279",
    "end": "1853000"
  },
  {
    "text": "subject of the rest of the team I think your book you your book T me a lot about",
    "start": "1853000",
    "end": "1858159"
  },
  {
    "text": "um how what should I say real functional programmers think about solving problems",
    "start": "1858159",
    "end": "1863919"
  },
  {
    "text": "um uh and how to evolve that software as as we ask for new features but how would",
    "start": "1863919",
    "end": "1870440"
  },
  {
    "text": "you go about evolving software and a team um from objects to",
    "start": "1870440",
    "end": "1877799"
  },
  {
    "text": "functions I I think uh the the part think is that to keep the team together",
    "start": "1877840",
    "end": "1883760"
  },
  {
    "text": "so not writing any code that the team is not comfortable with on the other side I think it's a good",
    "start": "1883760",
    "end": "1890799"
  },
  {
    "text": "idea to keep a bit of a hiton so always",
    "start": "1890799",
    "end": "1896320"
  },
  {
    "text": "trying to introduce A New Concept and stuff like that in my previous team I mean",
    "start": "1896320",
    "end": "1904279"
  },
  {
    "text": "same company but the previous what I we were basically two people of us was",
    "start": "1904279",
    "end": "1911080"
  },
  {
    "text": "coming from yeah this kind of functional C and we introdu the idea to the rest of",
    "start": "1911080",
    "end": "1916320"
  },
  {
    "text": "the team about in result to do the operation and stuff like that and uh the",
    "start": "1916320",
    "end": "1924080"
  },
  {
    "text": "rest of the team was a bit like uh well this is definitely different from using exception or how we are using but uh",
    "start": "1924080",
    "end": "1931679"
  },
  {
    "text": "let's have a try and they actually enjoyed and then yeah the world project",
    "start": "1931679",
    "end": "1937639"
  },
  {
    "text": "switch very quickly uh from one through another",
    "start": "1937639",
    "end": "1944039"
  },
  {
    "text": "party but uh I mean I've been in another team where the there has",
    "start": "1944039",
    "end": "1949519"
  },
  {
    "text": "the the feeling was really no no no we always did like that this is not back to",
    "start": "1949519",
    "end": "1956720"
  },
  {
    "text": "do but yeah that's uh that's also fine so so in the in the preface you say",
    "start": "1956720",
    "end": "1965399"
  },
  {
    "text": "uh functional programming makes my job more pleasant every day even if it drives me crazy",
    "start": "1965399",
    "end": "1970519"
  },
  {
    "text": "sometimes um I I think your book does a good job of showing the ways in which you can make software more pleasant but",
    "start": "1970519",
    "end": "1975840"
  },
  {
    "text": "but what ways does functional programming drive you crazy well uh sometimes I mean I I",
    "start": "1975840",
    "end": "1983320"
  },
  {
    "text": "really enjoy really like having fun about uh you know kind of solving the",
    "start": "1983320",
    "end": "1989240"
  },
  {
    "text": "problem in this uh using the type system so using a [Music]",
    "start": "1989240",
    "end": "1995360"
  },
  {
    "text": "transformation uh so okay I can do this with a side effect but if I can make",
    "start": "1995360",
    "end": "2000600"
  },
  {
    "text": "this explicit to the typ system using maybe c glass or some kind of stuff like",
    "start": "2000600",
    "end": "2006919"
  },
  {
    "text": "that it's better so um this is the the stuff that I really enjoy to do that and",
    "start": "2006919",
    "end": "2013799"
  },
  {
    "text": "I think the final Cod is less bone but",
    "start": "2013799",
    "end": "2019000"
  },
  {
    "text": "sometime it's very hard or you sometime you say okay now let's let's go back",
    "start": "2019000",
    "end": "2026919"
  },
  {
    "text": "because but uh yes um some sometimes",
    "start": "2026919",
    "end": "2032840"
  },
  {
    "text": "make making the stuff compil is the most difficult part and once it compile you are quite sure that is a is",
    "start": "2032840",
    "end": "2040960"
  },
  {
    "text": "correct yes I mean that that that that balance of um pragmatism versus",
    "start": "2040960",
    "end": "2047120"
  },
  {
    "text": "correctness I think um especially again as you as we were saying earlier where",
    "start": "2047120",
    "end": "2052520"
  },
  {
    "text": "um where what your language makes easy uh depend sort of um what your language",
    "start": "2052520",
    "end": "2058638"
  },
  {
    "text": "makes easy defines pragmatism I suppose I mean I know there are places where um the cotlin type system um there are",
    "start": "2058639",
    "end": "2066520"
  },
  {
    "text": "things that it where you end up casting that you might in another language that that language might see that something",
    "start": "2066520",
    "end": "2072158"
  },
  {
    "text": "was safe for example um uh that's um certainly my experience of cotlin is it",
    "start": "2072159",
    "end": "2079878"
  },
  {
    "text": "its pragmatism um can lead to frustration sometimes because it's when we can't",
    "start": "2079879",
    "end": "2086599"
  },
  {
    "text": "express something we want to in the same way as we might have problems with Java um making it harder to create new types",
    "start": "2086599",
    "end": "2094079"
  },
  {
    "text": "than we than we'd like no yeah definitely I mean uh there was something",
    "start": "2094079",
    "end": "2099200"
  },
  {
    "text": "uh some stuff that I will really like C make a bit easier to do because you can",
    "start": "2099200",
    "end": "2105359"
  },
  {
    "text": "there some uh yeah for example yeah the the",
    "start": "2105359",
    "end": "2111640"
  },
  {
    "text": "companion object bit uh under user in cult in my opinion would be much better",
    "start": "2111640",
    "end": "2117599"
  },
  {
    "text": "way to use them and uh to expire sometime would be nice but",
    "start": "2117599",
    "end": "2123480"
  },
  {
    "text": "uh but actually yeah this is true but uh what they see that most of people they",
    "start": "2123480",
    "end": "2130560"
  },
  {
    "text": "really got scared from the beginning when they see they kind of call that uh",
    "start": "2130560",
    "end": "2136359"
  },
  {
    "text": "I show at the end of the book where basically everything is just a a chain of uh you know map fold and",
    "start": "2136359",
    "end": "2145320"
  },
  {
    "text": "transformation binding and so every functionality is just in single",
    "start": "2145320",
    "end": "2150800"
  },
  {
    "text": "expression and uh people got a bit scared about that on the other side I",
    "start": "2150800",
    "end": "2157240"
  },
  {
    "text": "think um I mean in the book there is this orami because you know in F Oram there",
    "start": "2157240",
    "end": "2164599"
  },
  {
    "text": "is this fold function but it's really that uh fogam is bit like seems much",
    "start": "2164599",
    "end": "2171880"
  },
  {
    "text": "harder than it's actually is after a while if you learn Oram yeah it's",
    "start": "2171880",
    "end": "2179680"
  },
  {
    "text": "not from what I know about origami though sometimes you have to start off with a lot bigger piece of paper than",
    "start": "2180400",
    "end": "2186040"
  },
  {
    "text": "you think you might from the end result oh that that's I mean the the",
    "start": "2186040",
    "end": "2191319"
  },
  {
    "text": "professional one they really start with like one met square one square meter piece of paper to do",
    "start": "2191319",
    "end": "2199319"
  },
  {
    "text": "something so um I know I know the process of of writing a book helped me to think about software um did the book",
    "start": "2199520",
    "end": "2208359"
  },
  {
    "text": "did the book turned out as you sort of planned it at the beginning or did it change your understanding as you wrote it yeah no this Chang a lot actually I",
    "start": "2208359",
    "end": "2215960"
  },
  {
    "text": "kind of uh rote it two or three times I mean depending or not a bit from the I mean the original",
    "start": "2215960",
    "end": "2223280"
  },
  {
    "text": "idea was to have a book like this is the theory this is the parties and the editor told me no let's just be the",
    "start": "2223280",
    "end": "2230440"
  },
  {
    "text": "parties the theory and I think that was a very good um suggestion and then when",
    "start": "2230440",
    "end": "2238440"
  },
  {
    "text": "we got to the beta readers also the yeah I found that I was skipping a lot of uh",
    "start": "2238440",
    "end": "2245839"
  },
  {
    "text": "you know mental process and stuff like that when I st doing slowly and try to",
    "start": "2245839",
    "end": "2251800"
  },
  {
    "text": "put it down I also realized that yeah maybe I'll I can change things and make",
    "start": "2251800",
    "end": "2257400"
  },
  {
    "text": "it more clearly and when I finish the book I realiz that okay if I had to rewrite",
    "start": "2257400",
    "end": "2264280"
  },
  {
    "text": "this book again I would probably remove also a lot of not remove but put the",
    "start": "2264280",
    "end": "2270640"
  },
  {
    "text": "theory after and that uh I don't think you need that uh I mean I kind of um",
    "start": "2270640",
    "end": "2279560"
  },
  {
    "text": "passionate I mean you really in the enjoy I really enjoy to do mathematical",
    "start": "2279560",
    "end": "2287040"
  },
  {
    "text": "stuff but some people bit got scared about that and it's not really needed",
    "start": "2287040",
    "end": "2292839"
  },
  {
    "text": "but uh yeah what you can always skip the part on the book I mean I I personally I",
    "start": "2292839",
    "end": "2298119"
  },
  {
    "text": "found the book sort of uh challenging um but it was enjoyable and",
    "start": "2298119",
    "end": "2303760"
  },
  {
    "text": "um uh because it took us through um as I say unlike most functional programming",
    "start": "2303760",
    "end": "2310319"
  },
  {
    "text": "books it took us through um an actual example from the beginning to the end um",
    "start": "2310319",
    "end": "2316680"
  },
  {
    "text": "there's motivation there in every in every step so we are we are solving problems and looking at how those",
    "start": "2316680",
    "end": "2322240"
  },
  {
    "text": "problems will be solved in a functional way um uh rather than just having them",
    "start": "2322240",
    "end": "2327760"
  },
  {
    "text": "in the abstract so we are we are motivated to to read the theory I think that worked very well for",
    "start": "2327760",
    "end": "2333920"
  },
  {
    "text": "me yeah I tell you the book is a kind I mean it's wrting a to-do application",
    "start": "2333920",
    "end": "2339520"
  },
  {
    "text": "which may be I mean to- the list but actually it's quite hard a problem to",
    "start": "2339520",
    "end": "2345160"
  },
  {
    "text": "solve it right good to the list application and the original idea was no",
    "start": "2345160",
    "end": "2351960"
  },
  {
    "text": "kind of more you know kind of I don't know h g kind of software to tiet the",
    "start": "2351960",
    "end": "2359760"
  },
  {
    "text": "processing software but I realize that just to do application is a lot of code to try and uh to make it to explain the",
    "start": "2359760",
    "end": "2368440"
  },
  {
    "text": "Cod it really takes a lot of time and so finally Berto do you do you have another book in",
    "start": "2368440",
    "end": "2374560"
  },
  {
    "text": "you or is it too soon just what too soon I I still uh",
    "start": "2374560",
    "end": "2380720"
  },
  {
    "text": "have something to some blogs to write about this bookr and and things that I",
    "start": "2380720",
    "end": "2388160"
  },
  {
    "text": "couldn't really put in the book but uh I'm also very I my daughter has a NY old and",
    "start": "2388160",
    "end": "2396520"
  },
  {
    "text": "I'm teaching her to do programming but without pushing but we do some",
    "start": "2396520",
    "end": "2402000"
  },
  {
    "text": "such and also to her classmate and I really find a fascinating teaching",
    "start": "2402000",
    "end": "2407640"
  },
  {
    "text": "programming to kids and uh I don't know sometime I",
    "start": "2407640",
    "end": "2413640"
  },
  {
    "text": "would like to write something about it or to put it together the experience because I really not very happy how they",
    "start": "2413640",
    "end": "2422440"
  },
  {
    "text": "teacha in uh courses and stuff like that and and um instead working with",
    "start": "2422440",
    "end": "2429560"
  },
  {
    "text": "kids is so awarding but uh you you know you I you need to to raise the interest",
    "start": "2429560",
    "end": "2437839"
  },
  {
    "text": "and let them explore programming is a creative activity most of the courses thinks that programming is like",
    "start": "2437839",
    "end": "2446960"
  },
  {
    "text": "typing robberto um thank you very much um your book um it was published in",
    "start": "2447160",
    "end": "2454400"
  },
  {
    "text": "September is there anything else you'd like to say about your book uh yes one thing that we didn't mention",
    "start": "2454400",
    "end": "2460839"
  },
  {
    "text": "that um in the book uh uh we also put I mean I also put the exercise at the end",
    "start": "2460839",
    "end": "2466119"
  },
  {
    "text": "of each chapter and this exercise are very useful to learn functional",
    "start": "2466119",
    "end": "2472280"
  },
  {
    "text": "programming but uh there is no solution in the book because of clearly a choice",
    "start": "2472280",
    "end": "2478520"
  },
  {
    "text": "but uh all the solution are still available on my d h repository and we",
    "start": "2478520",
    "end": "2484440"
  },
  {
    "text": "will put the links here so if uh you have the book and you want to see my solution which is not given that are the",
    "start": "2484440",
    "end": "2491280"
  },
  {
    "text": "best ones you can always see in the guar repositor wonderful um so as robberto",
    "start": "2491280",
    "end": "2499040"
  },
  {
    "text": "says that will be in the show notes as we link to his book from object to functions build your software faster and",
    "start": "2499040",
    "end": "2504960"
  },
  {
    "text": "safer with functional programming cotlin uberto thank you very much thank you",
    "start": "2504960",
    "end": "2510359"
  },
  {
    "text": "very much l thanks for listening to this episode of the goto podcast head over to",
    "start": "2510359",
    "end": "2515560"
  },
  {
    "text": "gpa. Tech to discover lots more content from the brightest minds and software development",
    "start": "2515560",
    "end": "2522520"
  },
  {
    "text": "[Music]",
    "start": "2523160",
    "end": "2531518"
  }
]