[
  {
    "start": "0",
    "end": "91000"
  },
  {
    "text": "hi um I'm Om I'm an embeded systems engineer I'm actually a hardware guy uh",
    "start": "3840",
    "end": "9120"
  },
  {
    "text": "and the talk is quite focused on the embedded systems I meain um specifically",
    "start": "9120",
    "end": "15440"
  },
  {
    "text": "with examples from the Raspberry Pi that we have been playing with because it's pretty nice um and today I'm just going",
    "start": "15440",
    "end": "23279"
  },
  {
    "text": "to give you a brief idea of what we're dealing with embedded systems today um",
    "start": "23279",
    "end": "28720"
  },
  {
    "text": "and we're just going to look at how the actor model Works uh it's been around for quite some time now so uh I'm sure",
    "start": "28720",
    "end": "36440"
  },
  {
    "text": "you must have come across it at some point so I'm not going to go into too much detail there um it's actually quite",
    "start": "36440",
    "end": "43399"
  },
  {
    "text": "a simple model so um you shouldn't have a problem there and we are engaged in a",
    "start": "43399",
    "end": "49520"
  },
  {
    "text": "project at the moment called L embedded I will talk a bit about that and um tell",
    "start": "49520",
    "end": "54840"
  },
  {
    "text": "you a bit about our objectives and what we're trying to achieve for that um and",
    "start": "54840",
    "end": "60120"
  },
  {
    "text": "then we'll look at some practical examples on how we can apply the actor model um and use erlang uh to model our",
    "start": "60120",
    "end": "66920"
  },
  {
    "text": "system model and program our systems um and we'll look at a simple demo I've done with the Raspberry Pi uh and",
    "start": "66920",
    "end": "74200"
  },
  {
    "text": "finally we'll I'll show you a bit about what I'm currently working on if you have time we can have some questions and",
    "start": "74200",
    "end": "81159"
  },
  {
    "text": "answers I'll be here for the rest of the conference so feel free to um talk to me if you want to talk more about this okay",
    "start": "81159",
    "end": "88920"
  },
  {
    "text": "so what is an embedded system I mean this has been covered in the previous two talks so I'm not going to go too",
    "start": "88920",
    "end": "94759"
  },
  {
    "start": "91000",
    "end": "91000"
  },
  {
    "text": "much into this but traditionally it's a system that has a specific purpose which may be part of a larger system um",
    "start": "94759",
    "end": "102200"
  },
  {
    "text": "sometimes it has real time constraints and so on but generally it's a small device um physically small quite some",
    "start": "102200",
    "end": "110240"
  },
  {
    "text": "often as well that is meant to do one thing only and do it very well um",
    "start": "110240",
    "end": "116439"
  },
  {
    "text": "currently the language of choice or linga Franco of the embeded world is C uh it has been C in the past as well and",
    "start": "116439",
    "end": "124479"
  },
  {
    "text": "it's quite strange to see it increasing as well um but there's no denying that",
    "start": "124479",
    "end": "130879"
  },
  {
    "text": "you know C is here to stay you're not going to get rid of c um so but the the",
    "start": "130879",
    "end": "138000"
  },
  {
    "text": "problem is there are certain things that you can't do really well in see and these things seem to be the problems",
    "start": "138000",
    "end": "143800"
  },
  {
    "text": "we're dealing with today's systems so we're dealing with increasingly um",
    "start": "143800",
    "end": "149920"
  },
  {
    "start": "147000",
    "end": "147000"
  },
  {
    "text": "complex system on chip platforms on devices that we're working on or we're developing um and managing the",
    "start": "149920",
    "end": "157160"
  },
  {
    "text": "complexities of these systems um just because of their sheer size is becoming a problem um and we have this beautiful",
    "start": "157160",
    "end": "164760"
  },
  {
    "text": "phrase called The Internet of Things um which means that our devices are connected and distributed and they have",
    "start": "164760",
    "end": "171080"
  },
  {
    "text": "needs uh like networking support um communication support as well um and",
    "start": "171080",
    "end": "177840"
  },
  {
    "text": "unless you employ a framework socket programming in c is not fun um and again",
    "start": "177840",
    "end": "183760"
  },
  {
    "text": "dealing with multicore and heterogeneous devices in C is not fun as well um and",
    "start": "183760",
    "end": "189879"
  },
  {
    "text": "this is I just have to put it there time to Market is an ever increasing uh",
    "start": "189879",
    "end": "195080"
  },
  {
    "text": "problem of course you have to be able to rapidly prototype your ideas and with the tools that we have today um like 3D",
    "start": "195080",
    "end": "202640"
  },
  {
    "text": "printers becoming so cheap it's it's quite possible to crank out prototypes in a matter of weeks instead of want um",
    "start": "202640",
    "end": "211920"
  },
  {
    "text": "so embedded systems means a lot of things so and that uh translates to",
    "start": "211920",
    "end": "218799"
  },
  {
    "text": "different methodologies being involved um in designing embedded systems so",
    "start": "218799",
    "end": "225159"
  },
  {
    "text": "traditionally uh a bar metal approach would be followed um direct register",
    "start": "225159",
    "end": "230519"
  },
  {
    "text": "manipulation setting up peripherals Etc via some direct register manipulations",
    "start": "230519",
    "end": "236840"
  },
  {
    "text": "um we don't have a higher level operating system so schedule it that's you can use and so on um so this is",
    "start": "236840",
    "end": "245040"
  },
  {
    "text": "really for small devices uh eight and 16bit class devices um and you can also",
    "start": "245040",
    "end": "251599"
  },
  {
    "text": "employ a realtime operating system now this is quite common um especially for",
    "start": "251599",
    "end": "258079"
  },
  {
    "text": "um military and um space applications where you need",
    "start": "258079",
    "end": "263600"
  },
  {
    "text": "guarantees um timing guarantees you would generally employ in our to and",
    "start": "263600",
    "end": "268720"
  },
  {
    "text": "also we have embedded Linux which is essentially just Linux slim down um and",
    "start": "268720",
    "end": "275160"
  },
  {
    "text": "Hardware interfaces that lets you communicate with the outside world in the form of car modules that talk to the",
    "start": "275160",
    "end": "280479"
  },
  {
    "text": "peripherals on the system onip devices so today I'm going to focus on these two categories um we're not really",
    "start": "280479",
    "end": "287759"
  },
  {
    "text": "interested in looking at bare metal uh and the platforms we have a available today um makes it uh very easy for us to",
    "start": "287759",
    "end": "295919"
  },
  {
    "text": "just get one off the shelf and start exploring these uh to Concepts um",
    "start": "295919",
    "end": "302560"
  },
  {
    "text": "so have you ever used an r2s before have you have you worked on an embedded platform before",
    "start": "302560",
    "end": "308880"
  },
  {
    "text": "um so you'll probably be familiar with these Concepts then so in RT you have",
    "start": "308880",
    "end": "314240"
  },
  {
    "start": "312000",
    "end": "312000"
  },
  {
    "text": "the notion of a task and then you split your program or application into small",
    "start": "314240",
    "end": "320319"
  },
  {
    "text": "chunks um and then you have an operating system scheder which may have preemptive",
    "start": "320319",
    "end": "325840"
  },
  {
    "text": "or round dring scheduling that um takes care of scheduling things in in and out",
    "start": "325840",
    "end": "331240"
  },
  {
    "text": "of um actual execution and communication happens via uh shared memory uh an",
    "start": "331240",
    "end": "338360"
  },
  {
    "text": "operating system does provide you with functionalities to do that uh and",
    "start": "338360",
    "end": "343680"
  },
  {
    "text": "because it's hardware and you have to make sure that um you provide some control over access",
    "start": "343680",
    "end": "351160"
  },
  {
    "text": "to peripherals or Hardware access in general you have the notion of mutexes semors and",
    "start": "351160",
    "end": "356880"
  },
  {
    "text": "looks now if you look at a Linux it's a different story um It's Not A New",
    "start": "356880",
    "end": "362120"
  },
  {
    "start": "360000",
    "end": "360000"
  },
  {
    "text": "Concept it's been around for a while as well um but now that we have $35 or 30",
    "start": "362120",
    "end": "367919"
  },
  {
    "text": "PB boards that we can just buy off the shelf it's becoming more and more popular um this is good for the software",
    "start": "367919",
    "end": "374479"
  },
  {
    "text": "world but actually Hardware guys embedded designers find themselves at a loss because the concepts that they're",
    "start": "374479",
    "end": "381199"
  },
  {
    "text": "used to I say tasks do not exist natively within the operating system",
    "start": "381199",
    "end": "386520"
  },
  {
    "text": "what I mean by that is of course you can use a treading library in C Etc but they",
    "start": "386520",
    "end": "393000"
  },
  {
    "text": "didn't have to do that directly on the rtos they could just wrap it around very",
    "start": "393000",
    "end": "398639"
  },
  {
    "text": "minimal um sort of wrapper um so they they can't really get their wrap their",
    "start": "398639",
    "end": "405160"
  },
  {
    "text": "heads around this and that causes a problem um and dealing with threads in C again is not fun um and also the device",
    "start": "405160",
    "end": "412599"
  },
  {
    "text": "driver Frameworks are the documentation is pretty terrible and quite often you",
    "start": "412599",
    "end": "418400"
  },
  {
    "text": "find yourself uh um scratching your head um that's not",
    "start": "418400",
    "end": "424280"
  },
  {
    "text": "talk depress um so let's look at the actor model uh this is not depressing",
    "start": "424280",
    "end": "430479"
  },
  {
    "text": "this is fun this is again a very old concept and the idea is very simple you",
    "start": "430479",
    "end": "435960"
  },
  {
    "text": "have these very primitive building blocks um that lets you compose distributed systems um and the beauty of",
    "start": "435960",
    "end": "444160"
  },
  {
    "text": "it is that they they are self-contained so they do not share memory uh which",
    "start": "444160",
    "end": "450000"
  },
  {
    "text": "means Distributing them across different nodes or different networks or different platforms is very easy to do um and you",
    "start": "450000",
    "end": "457960"
  },
  {
    "text": "don't have to use Earline it's been implemented in a variety of programming languages um and yeah I mean one",
    "start": "457960",
    "end": "465560"
  },
  {
    "text": "interesting feature or I should say the most interesting feature is the communication aspect of it it uses",
    "start": "465560",
    "end": "470680"
  },
  {
    "text": "synchronous message passing and it has an notion of a mailbox so you can send",
    "start": "470680",
    "end": "476120"
  },
  {
    "text": "the message from one process to the other and it will be put into its mailbox to be processed when the time",
    "start": "476120",
    "end": "483199"
  },
  {
    "text": "comes and that time is when there are no more messages uh in front of that",
    "start": "483199",
    "end": "488360"
  },
  {
    "text": "particular message you've sent uh and upon receiving a message there are three operations you can do um one of them is",
    "start": "488360",
    "end": "496000"
  },
  {
    "text": "to Spa a new actor um or you can change your internal State depending on the",
    "start": "496000",
    "end": "501720"
  },
  {
    "text": "message you've received or uh you can choose to pass on the message to um the",
    "start": "501720",
    "end": "507639"
  },
  {
    "text": "next actor in the line um let's have a graphical representation of this let's",
    "start": "507639",
    "end": "512719"
  },
  {
    "text": "say that we have this um data acquisition actor um that has acquired",
    "start": "512719",
    "end": "519039"
  },
  {
    "text": "some numbers from a bunch of sensors that it has connected um let's say we have to do some operations on these what",
    "start": "519039",
    "end": "526000"
  },
  {
    "text": "we can do is we can spawn a new um actor and number cruncher and then send the",
    "start": "526000",
    "end": "531720"
  },
  {
    "text": "values that we have acquired from the acquisition actor to the number cruncher actor um this actor can then process",
    "start": "531720",
    "end": "539880"
  },
  {
    "text": "these and then send it back or it can spawn new actors or workers um send",
    "start": "539880",
    "end": "545839"
  },
  {
    "text": "subsets of these readings to them um get them to calculate it and receive the",
    "start": "545839",
    "end": "551320"
  },
  {
    "text": "results back um this may not happen in sequence this may happen currently",
    "start": "551320",
    "end": "556839"
  },
  {
    "text": "because these are all process different processes running um once it Coates all the information back or the results back",
    "start": "556839",
    "end": "563399"
  },
  {
    "text": "it can then send it to the um acquisition unit which is now waiting",
    "start": "563399",
    "end": "569120"
  },
  {
    "text": "for for a reply um so it's a very simple model as you",
    "start": "569120",
    "end": "576000"
  },
  {
    "text": "can see there's not much to it um if you don't go down into the proof or anything",
    "start": "576000",
    "end": "581279"
  },
  {
    "text": "long that um but it has some limitations so the general model does not have the",
    "start": "581279",
    "end": "588920"
  },
  {
    "start": "585000",
    "end": "585000"
  },
  {
    "text": "notion of inheritance uh and the general hierarchy is not defined in concrete",
    "start": "588920",
    "end": "594760"
  },
  {
    "text": "terms so each language or Library implementation has certain variations on",
    "start": "594760",
    "end": "600160"
  },
  {
    "text": "this idea of architecting a complex system um also synchronous message",
    "start": "600160",
    "end": "606120"
  },
  {
    "text": "passing can be problematic for certain applications although for the applications I'm going to talk about",
    "start": "606120",
    "end": "611959"
  },
  {
    "text": "today does not pose an issue and generally you will not face this problem",
    "start": "611959",
    "end": "617920"
  },
  {
    "text": "um this last Point sort of proves the initial point I made um because it's an",
    "start": "617920",
    "end": "624720"
  },
  {
    "text": "abstract definition especially when you're working in a team or many people are working on one project it becomes an",
    "start": "624720",
    "end": "631279"
  },
  {
    "text": "issue because how low you go in terms of granularity um can be a blessing in a",
    "start": "631279",
    "end": "636839"
  },
  {
    "text": "curse I'll talk more about this in the next few um actually in a few more slides um now I I mentioned that I've",
    "start": "636839",
    "end": "644959"
  },
  {
    "text": "been involved in this project called Earline embedded it's a partnership between Earline Solutions and the",
    "start": "644959",
    "end": "650079"
  },
  {
    "start": "648000",
    "end": "648000"
  },
  {
    "text": "University of Kent and we're looking at ways we can employ Earline as a tool to",
    "start": "650079",
    "end": "656040"
  },
  {
    "text": "manage these complexities and uh use it as um an orchestrator or a ma of the",
    "start": "656040",
    "end": "662120"
  },
  {
    "text": "system as it were to U bring these Challen uh to solve these challenges",
    "start": "662120",
    "end": "667160"
  },
  {
    "text": "that we have mentioned in the first slide um if you want more information you can go toa.com we have some videos",
    "start": "667160",
    "end": "673959"
  },
  {
    "text": "of blinking lights and we did some fun Explorations like spawning um",
    "start": "673959",
    "end": "679480"
  },
  {
    "text": "136,000 processes on Raspberry Pi and then communicating with them these are",
    "start": "679480",
    "end": "684600"
  },
  {
    "text": "Earline processes by the way not operating system threads they're quite heavy um so why our Lang why are we",
    "start": "684600",
    "end": "693079"
  },
  {
    "text": "enrolled in this project and why the University of Kent agree to collaborate with our Lang Solutions and vice versa",
    "start": "693079",
    "end": "699320"
  },
  {
    "start": "699000",
    "end": "699000"
  },
  {
    "text": "um erlang of course implements the ACT model um for the argument that this is a",
    "start": "699320",
    "end": "704720"
  },
  {
    "text": "talk about the ACT mod uh and it's been battle tested in Ericson which where it",
    "start": "704720",
    "end": "712040"
  },
  {
    "text": "originated from um and many other companies as well soang is not a new language it's been around for quite some",
    "start": "712040",
    "end": "718240"
  },
  {
    "text": "time and it's been used since in production uh quite some time as well it was originally designed for embedded",
    "start": "718240",
    "end": "724360"
  },
  {
    "text": "applications so the telepon applications or telepon switches Ericson developed um",
    "start": "724360",
    "end": "729680"
  },
  {
    "text": "which was the main platform this language was designed on or refined on",
    "start": "729680",
    "end": "734800"
  },
  {
    "text": "um it it was an embedded application I mean it didn't run say on an embedded arm processor but it the concept of it",
    "start": "734800",
    "end": "743000"
  },
  {
    "text": "was um by by definition an embedded system um so it has support for",
    "start": "743000",
    "end": "749360"
  },
  {
    "text": "concurrency and distributed out of the box um and it has some very interesting supervision and error handling",
    "start": "749360",
    "end": "755839"
  },
  {
    "text": "hierarchies which I'll be talking about in a minute and of course there are some other shiny bits as",
    "start": "755839",
    "end": "762120"
  },
  {
    "text": "well so we have a very simple and consistent recovery and supervision hierarchy um many supervision",
    "start": "762120",
    "end": "769240"
  },
  {
    "text": "hierarchies but um I'll get to that in a minute uh it has built and Fa tolerance",
    "start": "769240",
    "end": "774399"
  },
  {
    "text": "this is partly due to the fact that actors are isolated and a part of your",
    "start": "774399",
    "end": "779800"
  },
  {
    "text": "system going wrong will not bring down the entire VM unless there's something catastrophically wrong with your system",
    "start": "779800",
    "end": "786240"
  },
  {
    "text": "um so you can create structured architectures um that are fail safe and",
    "start": "786240",
    "end": "791560"
  },
  {
    "text": "if they fail they can be restarted or taken care of another means depending on",
    "start": "791560",
    "end": "796720"
  },
  {
    "text": "the supervision hierarchy you have chosen it also has an interesting feature where it supports hot code",
    "start": "796720",
    "end": "802560"
  },
  {
    "text": "loading so you can update the functionality um of your system uh",
    "start": "802560",
    "end": "808880"
  },
  {
    "text": "without without having to bringing it down what that means is um you can do a",
    "start": "808880",
    "end": "814040"
  },
  {
    "text": "bug fix on your system and deploy it to your PM uh and once the actor that's",
    "start": "814040",
    "end": "820920"
  },
  {
    "text": "running that old code has finished its job the next time it's spawned it will",
    "start": "820920",
    "end": "826320"
  },
  {
    "text": "load the new version of the code but the change is seamless so it's that's why it's called hot code loading and it's",
    "start": "826320",
    "end": "832839"
  },
  {
    "text": "supports Dynamic configuration and spawning an actor um is quite simple in know line uh it's",
    "start": "832839",
    "end": "840560"
  },
  {
    "start": "839000",
    "end": "839000"
  },
  {
    "text": "just the call to the spawn function um and I'm going to use the term actor and",
    "start": "840560",
    "end": "847120"
  },
  {
    "text": "Earline process interchangeably because Earline processes are active um and once",
    "start": "847120",
    "end": "853440"
  },
  {
    "text": "you spawn a process um then you have a new P ID process ID that you can",
    "start": "853440",
    "end": "859279"
  },
  {
    "text": "communicate with and send messages to and communication happens um while the",
    "start": "859279",
    "end": "864480"
  },
  {
    "start": "863000",
    "end": "863000"
  },
  {
    "text": "bang operator and using this construct they can send messages from the first process",
    "start": "864480",
    "end": "871000"
  },
  {
    "text": "to the second one now message passing happens asynchronously and there's no handshake",
    "start": "871000",
    "end": "878560"
  },
  {
    "text": "um unless you explicitly implemented yourself so what you what you do generally if you want to response back",
    "start": "878560",
    "end": "885560"
  },
  {
    "text": "is you pass your own process ID to the second process that you're messaging so",
    "start": "885560",
    "end": "891320"
  },
  {
    "text": "that when it it has a reply for you it knows where to send it um so by using",
    "start": "891320",
    "end": "898639"
  },
  {
    "text": "self you get your own process ID and then um send it as the first element of",
    "start": "898639",
    "end": "904160"
  },
  {
    "text": "your topic um when we get to the error error mechanisms or error recovery",
    "start": "904160",
    "end": "910079"
  },
  {
    "text": "mechanisms um we have this notion of links so you can link multiple processes",
    "start": "910079",
    "end": "915120"
  },
  {
    "text": "together um and when you link things together um if one of them goes down the",
    "start": "915120",
    "end": "922480"
  },
  {
    "text": "others know about it uh now you can do two two main things with this um you can",
    "start": "922480",
    "end": "929600"
  },
  {
    "text": "just choose to ignore this and have um your entire system fail or you can",
    "start": "929600",
    "end": "935399"
  },
  {
    "text": "Implement supervisors uh to take care of this and then restart them or do some",
    "start": "935399",
    "end": "940639"
  },
  {
    "text": "other extra bits and restart them um depending on your application um the",
    "start": "940639",
    "end": "946279"
  },
  {
    "start": "945000",
    "end": "945000"
  },
  {
    "text": "general philosophy in writing Earline processes or Earline modules or actors",
    "start": "946279",
    "end": "951759"
  },
  {
    "text": "is to let it fail um and then employ uh supervision hierarchy to take care of",
    "start": "951759",
    "end": "957399"
  },
  {
    "text": "errors this leads to um cleaner or and leaner modules uh because you don't have",
    "start": "957399",
    "end": "963240"
  },
  {
    "text": "to worry about implementing all the error checking Etc within the module um",
    "start": "963240",
    "end": "968759"
  },
  {
    "text": "and uh it also increases code reuse potentially because",
    "start": "968759",
    "end": "973959"
  },
  {
    "text": "um specific conditions that you have to deal with specific error conditions that",
    "start": "973959",
    "end": "979079"
  },
  {
    "text": "you have to deal with um can be then implemented as part of a supervisor as opposed to being part of the actual um",
    "start": "979079",
    "end": "985639"
  },
  {
    "text": "actor or the process that you have program um so what I mean by linking and exit",
    "start": "985639",
    "end": "992440"
  },
  {
    "start": "992000",
    "end": "992000"
  },
  {
    "text": "signals is clearly demonstrated by this little um diagram here let's say we have three processes and they're all linked",
    "start": "992440",
    "end": "998839"
  },
  {
    "text": "together um if one of them has a fault if it fails um then the other one will",
    "start": "998839",
    "end": "1006279"
  },
  {
    "text": "receive an exit message um and if you have a reason it will be passed on as well um and once it receives that",
    "start": "1006279",
    "end": "1013839"
  },
  {
    "text": "message it will terminate as well um letting the link process know that",
    "start": "1013839",
    "end": "1019360"
  },
  {
    "text": "something has gone wrong and that exit message will propagate through um all",
    "start": "1019360",
    "end": "1024640"
  },
  {
    "text": "the link processes unless you explicitly tell it to trap exits uh trap and exits",
    "start": "1024640",
    "end": "1031438"
  },
  {
    "start": "1029000",
    "end": "1029000"
  },
  {
    "text": "means that if it receives an error message it won't propagate through and it will um try to deal with this without",
    "start": "1031439",
    "end": "1038280"
  },
  {
    "text": "having to kill or send messages to the other processors to be killed so let's",
    "start": "1038280",
    "end": "1043360"
  },
  {
    "text": "say U we again have three linked processes and now pit B our second",
    "start": "1043360",
    "end": "1049679"
  },
  {
    "text": "process is trapping exits um so we have a fault in the first",
    "start": "1049679",
    "end": "1056600"
  },
  {
    "text": "one we receive an exit message um now normally if this wasn't trapping if pit",
    "start": "1056600",
    "end": "1062080"
  },
  {
    "text": "B wasn't trapping exits then we would have a problem in our hands but now um",
    "start": "1062080",
    "end": "1067520"
  },
  {
    "text": "we choose to ignore propagating that error message through and then we can",
    "start": "1067520",
    "end": "1072559"
  },
  {
    "text": "maybe restart a again or again take precautions um to bring up the system to",
    "start": "1072559",
    "end": "1078240"
  },
  {
    "text": "a known State um in embedded systems it's crucial that you know um the state",
    "start": "1078240",
    "end": "1084480"
  },
  {
    "text": "of your system at all times um because let's say you're developing a robot which has some very sharp bits flying",
    "start": "1084480",
    "end": "1091039"
  },
  {
    "text": "about like Souls Etc um you can't afford to have your system in a nowk known",
    "start": "1091039",
    "end": "1096640"
  },
  {
    "text": "state it can be quite lethal um so dealing with errors and having the",
    "start": "1096640",
    "end": "1102400"
  },
  {
    "text": "supervision hierarchies it's quite useful to create um safe uh and well",
    "start": "1102400",
    "end": "1107960"
  },
  {
    "text": "logical system um another feature of Earline is this is",
    "start": "1107960",
    "end": "1113440"
  },
  {
    "text": "going back to our little c um data in order to interface with Hardware you",
    "start": "1113440",
    "end": "1119919"
  },
  {
    "start": "1114000",
    "end": "1114000"
  },
  {
    "text": "will at some point have to write some c um and Earline does provide you",
    "start": "1119919",
    "end": "1126640"
  },
  {
    "text": "facilities to link to these C programs or little C drivers that you write um",
    "start": "1126640",
    "end": "1133080"
  },
  {
    "text": "and um use them as part of your overall system so let's say you have um an i squ",
    "start": "1133080",
    "end": "1139880"
  },
  {
    "text": "c um device uh and you don't have anline binding for it but you have a c binding",
    "start": "1139880",
    "end": "1145440"
  },
  {
    "text": "for it you just wrap it around say a nith and then uh you have a",
    "start": "1145440",
    "end": "1151120"
  },
  {
    "text": "representation of the functions that the C driver exposes with an Earline that",
    "start": "1151120",
    "end": "1156400"
  },
  {
    "text": "you can call and do stuff with so with all things considered Earl I think is",
    "start": "1156400",
    "end": "1161840"
  },
  {
    "start": "1161000",
    "end": "1161000"
  },
  {
    "text": "the great tool for orchestrating the overall operation of your system um it",
    "start": "1161840",
    "end": "1167640"
  },
  {
    "text": "almost reminds me of blackbox design methodologies and say U bhdl or VAR or",
    "start": "1167640",
    "end": "1173640"
  },
  {
    "text": "hard description languages where you can create modules and then creates top level description of your system and",
    "start": "1173640",
    "end": "1178799"
  },
  {
    "text": "Link things together using different data passes Etc obviously it's not the same concept um but the overall",
    "start": "1178799",
    "end": "1185720"
  },
  {
    "text": "hierarchy and the way you model and architect your systems I think is there are some different interesting parallels",
    "start": "1185720",
    "end": "1192039"
  },
  {
    "text": "between these two methodologies um okay let's talk about Raspberry Pi um we have seen this",
    "start": "1192039",
    "end": "1199200"
  },
  {
    "text": "in the first presentation today so I'm not going to spend too much time there I think it's an extremely exciting",
    "start": "1199200",
    "end": "1204720"
  },
  {
    "text": "platform um some people say it's just a bad it's just a buzz word that everyone",
    "start": "1204720",
    "end": "1209960"
  },
  {
    "text": "uses these days I don't believe in that I think if um people keep blinking LEDs",
    "start": "1209960",
    "end": "1216120"
  },
  {
    "text": "with it and you know get we get lots of cute python games it can actually change",
    "start": "1216120",
    "end": "1221960"
  },
  {
    "text": "um the whole ICT uh issue that we have and um we might finally have some",
    "start": "1221960",
    "end": "1227320"
  },
  {
    "text": "interesting projects coming out of um universities as well um so obviously the Raspberry Pi",
    "start": "1227320",
    "end": "1234440"
  },
  {
    "start": "1232000",
    "end": "1232000"
  },
  {
    "text": "Foundation is a charity and their mission statement is to promote um computer science and so on um",
    "start": "1234440",
    "end": "1240159"
  },
  {
    "text": "concurrency and parallelism are issues that we have to deal with today and it's",
    "start": "1240159",
    "end": "1245400"
  },
  {
    "text": "only going to get worse because we have these multicore devices and no one really wants to program these straight",
    "start": "1245400",
    "end": "1251760"
  },
  {
    "text": "out of University because well anyway um so these are kids who",
    "start": "1251760",
    "end": "1259080"
  },
  {
    "text": "will be using raspberry pie today will be our future Engineers future hackers and future programmers so um if we can",
    "start": "1259080",
    "end": "1267039"
  },
  {
    "text": "somehow create material that's interesting for them that teaches them the basics of concurrency and",
    "start": "1267039",
    "end": "1272360"
  },
  {
    "text": "parallelism um I think that will go down very well uh when they get to the university um and they don't have to",
    "start": "1272360",
    "end": "1279600"
  },
  {
    "text": "learn these Concepts in the second year of the course um so we have lots of",
    "start": "1279600",
    "end": "1286400"
  },
  {
    "start": "1285000",
    "end": "1285000"
  },
  {
    "text": "peripherals on the pie um yeah general purpose iio you are T squ C i2s SPI",
    "start": "1286400",
    "end": "1292919"
  },
  {
    "text": "pulive modulation TSI CSI so it is a qu it's it's quite a nice platform um that",
    "start": "1292919",
    "end": "1300880"
  },
  {
    "text": "you can afford to kill what I mean by that is you won't feel sorry um if",
    "start": "1300880",
    "end": "1306919"
  },
  {
    "text": "somehow you're hacking it and you know you short it it's it's not the end of the world it's only $35 at the end of",
    "start": "1306919",
    "end": "1312720"
  },
  {
    "text": "the day so two months of delivery time no it's getting it's getting a lot better actually um there will be a point",
    "start": "1312720",
    "end": "1319760"
  },
  {
    "text": "where we will be able to you know order it and it will arrive next day that's a good point um so I think if we provide",
    "start": "1319760",
    "end": "1328159"
  },
  {
    "text": "people enough fun projects and that's what uh people like uh quick to wire are",
    "start": "1328159",
    "end": "1333240"
  },
  {
    "text": "doing which is quite exciting um we will see a lot of fun projects um like small",
    "start": "1333240",
    "end": "1341039"
  },
  {
    "start": "1341000",
    "end": "1341000"
  },
  {
    "text": "robots uh now this doesn't I can't compete with the previous demo of course",
    "start": "1341039",
    "end": "1346159"
  },
  {
    "text": "that was way too much fun um but you can put together a small roving buggy um",
    "start": "1346159",
    "end": "1353080"
  },
  {
    "text": "with some senses etc for you know quite um little amount of money and it's not",
    "start": "1353080",
    "end": "1359559"
  },
  {
    "text": "actually that difficult if you use um some harder uh interfacing libraries and",
    "start": "1359559",
    "end": "1364600"
  },
  {
    "text": "so on um so this is way more exciting than just some console applications that",
    "start": "1364600",
    "end": "1370480"
  },
  {
    "text": "you get to write um as part of your education uh in the first years",
    "start": "1370480",
    "end": "1376120"
  },
  {
    "text": "so I don't have it with me because traveling with robot is actually quite difficult um but here's a simple demo of",
    "start": "1376120",
    "end": "1383440"
  },
  {
    "text": "it um going going around in our Swedish office um it has a few senses and they",
    "start": "1383440",
    "end": "1390799"
  },
  {
    "text": "feed back information to this brain process and then we use um a few other",
    "start": "1390799",
    "end": "1397880"
  },
  {
    "text": "um actors or processes to control the GPI Ops to tell it where to go uh so we",
    "start": "1397880",
    "end": "1404000"
  },
  {
    "text": "have a motor driver an HB chip that takes a few inputs and then just go around um this is an early demo uh it",
    "start": "1404000",
    "end": "1412760"
  },
  {
    "text": "doesn't do much but the simple idea is that um if you just get a Raspberry p",
    "start": "1412760",
    "end": "1418000"
  },
  {
    "text": "and a motor driver and the battery and you have a rock it's quite fun",
    "start": "1418000",
    "end": "1423679"
  },
  {
    "text": "um okay let's talk about how we actually employ these Concepts um on the pie um I",
    "start": "1423679",
    "end": "1430480"
  },
  {
    "start": "1424000",
    "end": "1424000"
  },
  {
    "text": "mentioned that we control the motor Direction Etc using simple GPI opin um",
    "start": "1430480",
    "end": "1436880"
  },
  {
    "text": "and I'm not going to go into the detail of how you actually talk to them but um it's just writing to files basically um",
    "start": "1436880",
    "end": "1444799"
  },
  {
    "text": "the GPI module exposes um certain files",
    "start": "1444799",
    "end": "1450000"
  },
  {
    "text": "CFS representations of files that you can just talk to to set the direction um",
    "start": "1450000",
    "end": "1456960"
  },
  {
    "text": "of the pin and then you can just write down values to it and so on um which is",
    "start": "1456960",
    "end": "1462200"
  },
  {
    "text": "fine so we can have one process talking to another process that talks directly",
    "start": "1462200",
    "end": "1467640"
  },
  {
    "text": "to the PIN setting its value but what happens if we have multiple processes",
    "start": "1467640",
    "end": "1474080"
  },
  {
    "text": "sending values at the same time now because you're employing the active model uh what happens is you have you",
    "start": "1474080",
    "end": "1481720"
  },
  {
    "text": "end up with lots of messages in pin 17's mailbox um but the the sequence of",
    "start": "1481720",
    "end": "1488039"
  },
  {
    "text": "messages that you receive might actually kill your system so if you try to change",
    "start": "1488039",
    "end": "1493679"
  },
  {
    "text": "the direction of a motor physically you can damage it um because it's a mechanic",
    "start": "1493679",
    "end": "1498720"
  },
  {
    "text": "thing it's an inductive world and so on um so directly letting processes change",
    "start": "1498720",
    "end": "1504200"
  },
  {
    "text": "the state of a pin is not a very good design decision because you might end up with you know quite a catastrophic",
    "start": "1504200",
    "end": "1511000"
  },
  {
    "text": "result so by employ this is where deciding on the granularity comes into",
    "start": "1511000",
    "end": "1517200"
  },
  {
    "text": "play so if you decide to abstract this one level up or down depending on how",
    "start": "1517200",
    "end": "1522799"
  },
  {
    "text": "you look at it um you can employ this proxy process that takes all these uh",
    "start": "1522799",
    "end": "1528760"
  },
  {
    "text": "messages or state values for different pins in and then sends them to the",
    "start": "1528760",
    "end": "1535200"
  },
  {
    "text": "relevant pins directly um now you can argue that this is just a way of locking",
    "start": "1535200",
    "end": "1540720"
  },
  {
    "text": "things down and this again is just a lock in the traditional sense of things",
    "start": "1540720",
    "end": "1545880"
  },
  {
    "start": "1542000",
    "end": "1542000"
  },
  {
    "text": "um but you can do a lot more than just um having sort of a look mechanism or a",
    "start": "1545880",
    "end": "1551440"
  },
  {
    "text": "mutual exclusion mechanism you can then Implement interesting things like um",
    "start": "1551440",
    "end": "1556880"
  },
  {
    "text": "detect the toggling rate of the in and if it's too high um either slow it down",
    "start": "1556880",
    "end": "1562080"
  },
  {
    "text": "or generate an error message or take care of it um there are interesting factors that you have to uh take into",
    "start": "1562080",
    "end": "1569520"
  },
  {
    "text": "account when you're dealing with real world um in software if you spawn processes too quickly the chances are",
    "start": "1569520",
    "end": "1576880"
  },
  {
    "text": "worst thing that can happen rather is your computer will lock up and you'll have to free the Ram or just restart the",
    "start": "1576880",
    "end": "1583000"
  },
  {
    "text": "machine or something but if you're interfacing with a real piece of Hardware real piece of a gadget um you",
    "start": "1583000",
    "end": "1590279"
  },
  {
    "text": "can cause quite a bit of damage as I've mentioned before uh and kill your system so safety is quite important in general",
    "start": "1590279",
    "end": "1598720"
  },
  {
    "text": "better design methodologies um so by implementing these different criterias uh you",
    "start": "1598720",
    "end": "1606120"
  },
  {
    "text": "can you can create sort of guarantees almost to make sure that your system won't kill someone which is always good",
    "start": "1606120",
    "end": "1613200"
  },
  {
    "text": "well not killing someone good um again the abstraction uh or the",
    "start": "1613200",
    "end": "1619760"
  },
  {
    "start": "1615000",
    "end": "1615000"
  },
  {
    "text": "granularity um can be a curse and a blessing at the same time um so fine",
    "start": "1619760",
    "end": "1625960"
  },
  {
    "text": "grain abstraction does provide um lanar modules that can be tested uh and",
    "start": "1625960",
    "end": "1631679"
  },
  {
    "text": "potentially reused easier but depend this coming up with the notion or",
    "start": "1631679",
    "end": "1638480"
  },
  {
    "text": "deciding on how low you want to go is a problem especially if you're working",
    "start": "1638480",
    "end": "1644320"
  },
  {
    "text": "with different teams um one sort of model that we're talking with at the moment is this idea of components and",
    "start": "1644320",
    "end": "1652080"
  },
  {
    "text": "peripheral modules um so and these are platform some of the uh parts of it are",
    "start": "1652080",
    "end": "1659240"
  },
  {
    "start": "1653000",
    "end": "1653000"
  },
  {
    "text": "platform agnostic so um we have the component API on the top of everything",
    "start": "1659240",
    "end": "1665000"
  },
  {
    "text": "this is um the actual bit of code that you interact with in your program um and",
    "start": "1665000",
    "end": "1670919"
  },
  {
    "text": "then we have a peripheral API on the lower level um that you generally don't",
    "start": "1670919",
    "end": "1676360"
  },
  {
    "text": "deal with um as part of a higher level program uh because it exposes row",
    "start": "1676360",
    "end": "1681880"
  },
  {
    "text": "interfaces to the system and then on the bottom of the stack we have this peripheral implementation uh which",
    "start": "1681880",
    "end": "1688760"
  },
  {
    "text": "actually lets the oang VM talk to um real peripherals so um let's give it a",
    "start": "1688760",
    "end": "1697039"
  },
  {
    "text": "solid example uh we have a temperature sensor that has an i i squ c um",
    "start": "1697039",
    "end": "1703760"
  },
  {
    "text": "interface um the sensor API doesn't change between different platforms um um",
    "start": "1703760",
    "end": "1709120"
  },
  {
    "text": "the functions or the calls that you might have could be get temperature um",
    "start": "1709120",
    "end": "1714760"
  },
  {
    "text": "Cal maybe um and the messages that you're going to send to the iy bus",
    "start": "1714760",
    "end": "1720159"
  },
  {
    "text": "driver are going to be the same as well um because that they are defined by uh",
    "start": "1720159",
    "end": "1725519"
  },
  {
    "text": "the manufacturers of this part but underneath that level um you are free to run this on a Linux system or a BSD",
    "start": "1725519",
    "end": "1732960"
  },
  {
    "text": "system or a system which doesn't have CFS facilities say MIP platform using U",
    "start": "1732960",
    "end": "1740440"
  },
  {
    "text": "memory map Voodoo um it's quite common to just map a region of memory and then",
    "start": "1740440",
    "end": "1746159"
  },
  {
    "text": "manipulates bits directly um in eded Linux or these systems um it can",
    "start": "1746159",
    "end": "1753519"
  },
  {
    "text": "potentially be very very dangerous uh so okay this was a very simple example this",
    "start": "1753519",
    "end": "1758960"
  },
  {
    "text": "is just a temperature sensor with six legs and doesn't do much uh and you may",
    "start": "1758960",
    "end": "1764799"
  },
  {
    "text": "argue that this is complicating the matter too much and we can just have a simple module uh to take care of this",
    "start": "1764799",
    "end": "1770559"
  },
  {
    "text": "communication directly but if you if you look at a modern um common architecture",
    "start": "1770559",
    "end": "1778279"
  },
  {
    "start": "1778000",
    "end": "1778000"
  },
  {
    "text": "system onip architecture we can see that we have a lot of things to deal with so",
    "start": "1778279",
    "end": "1784760"
  },
  {
    "text": "providing common abstractions um say for instance we have multiple i i squ c",
    "start": "1784760",
    "end": "1790039"
  },
  {
    "text": "interfaces um if it can create an abstra for these and then create higher level",
    "start": "1790039",
    "end": "1795360"
  },
  {
    "text": "simpler component modules on top of these um I think we will have a better world",
    "start": "1795360",
    "end": "1801760"
  },
  {
    "text": "really because doing these humongous SE blocks and then have them interfacing",
    "start": "1801760",
    "end": "1807120"
  },
  {
    "text": "with each other is quite difficult um and we can now afford to um lose a few",
    "start": "1807120",
    "end": "1813760"
  },
  {
    "text": "CPU Cycles um in the name of abstracting things and making things easier for us",
    "start": "1813760",
    "end": "1819279"
  },
  {
    "text": "um I mean the Raspberry Pi is running at 700 MHz um but now you can overclo it",
    "start": "1819279",
    "end": "1826600"
  },
  {
    "text": "the the foundation has given its blessing so you can overclo your Raspberry Pi without losing your",
    "start": "1826600",
    "end": "1831679"
  },
  {
    "text": "warranty and I think it can run up to 1 GHz on a 1 GHz system um you can afford",
    "start": "1831679",
    "end": "1838919"
  },
  {
    "text": "to run ear langang or any other VM for instance uh and have these higher level",
    "start": "1838919",
    "end": "1845200"
  },
  {
    "text": "functionalities in terms of networks um or threading um and general niceties of the",
    "start": "1845200",
    "end": "1851760"
  },
  {
    "text": "modern world um because again doing these communicating or threading Etc",
    "start": "1851760",
    "end": "1857720"
  },
  {
    "text": "things in C um is not fun um since we're",
    "start": "1857720",
    "end": "1862919"
  },
  {
    "text": "talking about um fun stuff with P I thought i' I'd show you a few of the",
    "start": "1862919",
    "end": "1869120"
  },
  {
    "text": "stuff that we have been working on um the first one is called Ponte and it's I",
    "start": "1869120",
    "end": "1875760"
  },
  {
    "start": "1873000",
    "end": "1873000"
  },
  {
    "text": "don't see I mean I don't know how well you can see it but it's essentially a simple board that acts as a bridge",
    "start": "1875760",
    "end": "1882120"
  },
  {
    "text": "between the Raspberry Pi and the Arduino platform um the reason I did this is",
    "start": "1882120",
    "end": "1887240"
  },
  {
    "text": "there's uh well quite literally quite a few hundreds of these Arduino Shields that",
    "start": "1887240",
    "end": "1892480"
  },
  {
    "text": "provide you with extra functionality and um in order instead of just design",
    "start": "1892480",
    "end": "1899000"
  },
  {
    "text": "redesigning them we can use them with the Raspberry Pi if we create a little translator between uh the Arduino format",
    "start": "1899000",
    "end": "1907039"
  },
  {
    "text": "or the Arduino specification and the Raspberry Pi uh the first one of these they are unfortunately not directly",
    "start": "1907039",
    "end": "1913440"
  },
  {
    "text": "compatible with each other the first one being that they work at different volage levels um so I have some level",
    "start": "1913440",
    "end": "1920000"
  },
  {
    "text": "translators um on the pins and the Raspberry Pi does not have an analog",
    "start": "1920000",
    "end": "1925639"
  },
  {
    "text": "digital converter which some of the shields use so I also added the nice gri c um analog to digital converter there",
    "start": "1925639",
    "end": "1933639"
  },
  {
    "text": "um this this was the first revision and um if if we actually going back to Nat's",
    "start": "1933639",
    "end": "1941760"
  },
  {
    "text": "point about prototyping um I didn't print this out on a piece of paper and then just assumed that it was work and",
    "start": "1941760",
    "end": "1948360"
  },
  {
    "text": "sent it off soled it all together and realized that the axle connector placement makes it impossible to use it",
    "start": "1948360",
    "end": "1954840"
  },
  {
    "text": "I we can't use this as it is because as you can see there's not enough clearance between the pin header over here and the",
    "start": "1954840",
    "end": "1960840"
  },
  {
    "text": "shield um so which meant that I have to design a new version that's why you see two different ones here I extended the",
    "start": "1960840",
    "end": "1968600"
  },
  {
    "text": "um size of the board which gave us so much space that I added more functionality Hardware spond um so yeah",
    "start": "1968600",
    "end": "1975760"
  },
  {
    "text": "this this is um me just trying to figure out what's going on and you can actually",
    "start": "1975760",
    "end": "1982840"
  },
  {
    "text": "see an Arduino underneath the shield uh so instead of just plugging a sealed in",
    "start": "1982840",
    "end": "1988480"
  },
  {
    "text": "to this adapter board and um use it you can also do it the other way and Link an",
    "start": "1988480",
    "end": "1995840"
  },
  {
    "text": "Arduino to the Raspberry Pi directly uh so you can use it for both uh purposes",
    "start": "1995840",
    "end": "2001639"
  },
  {
    "text": "is is that available this I I'm I'm just I'm about",
    "start": "2001639",
    "end": "2006840"
  },
  {
    "text": "80% finished with prototyping this um as you can see this is the only one I sold",
    "start": "2006840",
    "end": "2011960"
  },
  {
    "text": "it up actually um it will be released as an open source project um this is our",
    "start": "2011960",
    "end": "2017080"
  },
  {
    "text": "way of contributing back to um the society uh which makes us feel all fuzzy and warm um so yeah I mean you can find",
    "start": "2017080",
    "end": "2026200"
  },
  {
    "text": "more information about this actually you will be able to find more information about this at orl lang.com",
    "start": "2026200",
    "end": "2032000"
  },
  {
    "text": "um hopefully soon very soon famous l words um",
    "start": "2032000",
    "end": "2038880"
  },
  {
    "text": "so another thing we've been working on um is Little Hardware simulator I'm",
    "start": "2038880",
    "end": "2046080"
  },
  {
    "start": "2044000",
    "end": "2044000"
  },
  {
    "text": "going to do a live demo here and it will go wrong but let's give it a go anyway",
    "start": "2046080",
    "end": "2051638"
  },
  {
    "text": "so we are developing this small demo board to use in our little experiments",
    "start": "2051639",
    "end": "2058118"
  },
  {
    "text": "which has a bunch of LEDs some switches some push buttons some analog um",
    "start": "2058119",
    "end": "2064960"
  },
  {
    "text": "components and I wanted a way of simulating this uh without actually",
    "start": "2064960",
    "end": "2070960"
  },
  {
    "text": "having the real Hardware on hand you the two months Del delate time yeah due to",
    "start": "2070960",
    "end": "2077158"
  },
  {
    "text": "the again yeah I've just about finished this on the plane Journey up here so it's not fully functional yet um but the",
    "start": "2077159",
    "end": "2084878"
  },
  {
    "text": "idea is very simple um we replicate the exact um look well not exact look",
    "start": "2084879",
    "end": "2090560"
  },
  {
    "text": "perhaps but we replicate the same functionality of a hardware board in a browser and then use web sockets to",
    "start": "2090560",
    "end": "2097040"
  },
  {
    "text": "communicate with the back end written an our line and then write simulated Hardware modules um to basically",
    "start": "2097040",
    "end": "2105359"
  },
  {
    "text": "interact with these devices um I mean it doesn't do much at the moment but if I reestablish a connection um if I press a",
    "start": "2105359",
    "end": "2113480"
  },
  {
    "text": "button you will see that one of these LEDs will light up uh what happens here is if I press the button um then my back",
    "start": "2113480",
    "end": "2121359"
  },
  {
    "text": "end receives a message um that tells um well the back end or the simulated gpio",
    "start": "2121359",
    "end": "2128680"
  },
  {
    "text": "button module that it has received one and then it writes it back to the",
    "start": "2128680",
    "end": "2134480"
  },
  {
    "text": "browser using web circuits um and turns that led on um and for analog stuff we",
    "start": "2134480",
    "end": "2141200"
  },
  {
    "text": "can actually um change the value of these um well components and then we'll see",
    "start": "2141200",
    "end": "2148720"
  },
  {
    "text": "that uh we receive the changes as little messages in the back end um this is very",
    "start": "2148720",
    "end": "2155280"
  },
  {
    "text": "much a work in progress um but since this is the maker track I thought I'd demonstrate this again this will be",
    "start": "2155280",
    "end": "2161560"
  },
  {
    "text": "available on our website and more information will be B there um soon um",
    "start": "2161560",
    "end": "2169119"
  },
  {
    "text": "finally we're also working on um a training stack for creating the new",
    "start": "2169119",
    "end": "2177400"
  },
  {
    "text": "generation of embeded devices uh we've discussed the sort of requirements the whole distributed connected um and",
    "start": "2177400",
    "end": "2184560"
  },
  {
    "text": "complex nature of these systems and we thought it would be a nice idea if there was a complete package everything from",
    "start": "2184560",
    "end": "2192079"
  },
  {
    "text": "sorry embedded Linux 101 to um basic Earline principles and actually talking",
    "start": "2192079",
    "end": "2197920"
  },
  {
    "text": "to Hardware with an Earline including the hardware platform that they can use to prototype your ideas maybe later take",
    "start": "2197920",
    "end": "2204720"
  },
  {
    "text": "into production using the same platform um so if if you're interested come and",
    "start": "2204720",
    "end": "2211079"
  },
  {
    "text": "talk to me please and um quite looking forward to having some Danish beers so",
    "start": "2211079",
    "end": "2216280"
  },
  {
    "text": "find me and I'll tell more about this and can we do a little more I'm also",
    "start": "2216280",
    "end": "2222000"
  },
  {
    "text": "with my Solutions so if I show hands how many of you would be interested in taking such a",
    "start": "2222000",
    "end": "2228560"
  },
  {
    "text": "class remotely yeah we we can do it over we'll",
    "start": "2228560",
    "end": "2233839"
  },
  {
    "text": "send you the boards beforehand um I I think there's a distinct lack of",
    "start": "2233839",
    "end": "2239720"
  },
  {
    "text": "complete sort of packages that lets you go from the software world into the hardware World directly and that's why",
    "start": "2239720",
    "end": "2246599"
  },
  {
    "text": "we have interesting projects um say what Nat is doing creating pythonic bindings",
    "start": "2246599",
    "end": "2253680"
  },
  {
    "text": "for Hardware which is quite nice and we're approaching it from a different perspective following a different uh",
    "start": "2253680",
    "end": "2259599"
  },
  {
    "text": "called concurrency model um but overall if you include the hardware knowledge",
    "start": "2259599",
    "end": "2265520"
  },
  {
    "text": "and Linux device drivers Etc we think this is um this will be a fun course",
    "start": "2265520",
    "end": "2271640"
  },
  {
    "text": "let's put it that way um so on that note I would like to thank you for listening",
    "start": "2271640",
    "end": "2277839"
  },
  {
    "start": "2277000",
    "end": "2277000"
  },
  {
    "text": "and you can find more information at these links um and come and talk to me I",
    "start": "2277839",
    "end": "2283480"
  },
  {
    "text": "um about for the next couple days thank",
    "start": "2283480",
    "end": "2287800"
  },
  {
    "text": "you your uh Bridge board thing um I'm",
    "start": "2289240",
    "end": "2294839"
  },
  {
    "text": "interested in that to in terms of hooking it up to a rep rap um do you know anyone has",
    "start": "2294839",
    "end": "2301960"
  },
  {
    "text": "been doing anything like that I have a friend who is really into 3D printers and r well I sent one um I haven't heard",
    "start": "2301960",
    "end": "2310440"
  },
  {
    "text": "back from him but the problem with rip W is the real time needs that we have with",
    "start": "2310440",
    "end": "2315599"
  },
  {
    "text": "controll empirical and so on so I mean you can but some of that's handled by the rep WAP already so to a certain",
    "start": "2315599",
    "end": "2322240"
  },
  {
    "text": "extent I'm thinking you just oh if you just something better than we know to I was thinking in terms of replacing the",
    "start": "2322240",
    "end": "2328280"
  },
  {
    "text": "axle controller in the rep with a Raspberry p but if you have a controller then you can use this to um you can get",
    "start": "2328280",
    "end": "2334240"
  },
  {
    "text": "a ramp seal for instance the field and then put it put it on top of this and",
    "start": "2334240",
    "end": "2339280"
  },
  {
    "text": "then um look it up to your pie to talk to it that shouldn't be a problem because I I mapped the peripherals say I",
    "start": "2339280",
    "end": "2346880"
  },
  {
    "text": "C to i c directly um the only problem is Raspberry p doesn't have enough posive",
    "start": "2346880",
    "end": "2352760"
  },
  {
    "text": "modulation CHS so it only has one pwm to I don't think ramps or any of the r",
    "start": "2352760",
    "end": "2358720"
  },
  {
    "text": "seals use pwm though I think they use I CR to communicate with them so that shouldn't be a problem there are some",
    "start": "2358720",
    "end": "2364200"
  },
  {
    "text": "Hardware limitations because the specific do not match one to one but for",
    "start": "2364200",
    "end": "2370760"
  },
  {
    "text": "digital stuff especially I don't think it will be isue",
    "start": "2370760",
    "end": "2376160"
  }
]