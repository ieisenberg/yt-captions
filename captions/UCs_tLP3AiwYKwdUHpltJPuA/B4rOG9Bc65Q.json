[
  {
    "start": "0",
    "end": "98000"
  },
  {
    "text": "so uh thank you for coming to this talk about alixir um just to start to give an",
    "start": "2800",
    "end": "8960"
  },
  {
    "text": "idea what the talk is about um so this talk is not about uh",
    "start": "8960",
    "end": "14839"
  },
  {
    "text": "recipes uh for building distributed and uh fa tolerant",
    "start": "14839",
    "end": "20400"
  },
  {
    "text": "applications um it's more of a talk how Elixir when you write software in Elixir",
    "start": "20400",
    "end": "27560"
  },
  {
    "text": "and also airling uh how you approach it from a different mechanism and you need to design your",
    "start": "27560",
    "end": "35200"
  },
  {
    "text": "software in a way that you get things like concurrency distribution and fault",
    "start": "35200",
    "end": "40719"
  },
  {
    "text": "tolerance as a consequence of your software design so it's basically the",
    "start": "40719",
    "end": "46079"
  },
  {
    "text": "idioms we have in the language that allows you to get those things um as a consequence and uh we're going to break",
    "start": "46079",
    "end": "53680"
  },
  {
    "text": "this talk into uh three main parts the first one is a very quick introduction",
    "start": "53680",
    "end": "59199"
  },
  {
    "text": "how alexir came to be um the second one are about the idioms uh and how they're",
    "start": "59199",
    "end": "67159"
  },
  {
    "text": "going to affect you uh the developer and the third part is what alexir",
    "start": "67159",
    "end": "72960"
  },
  {
    "text": "specifically is because alexir is a programming language that runs on the Arling virtual machine and as the Arling",
    "start": "72960",
    "end": "79320"
  },
  {
    "text": "virtual machine as the jvm has many languages that run in this virtual",
    "start": "79320",
    "end": "84479"
  },
  {
    "text": "machine so what alexir is bringing to the table uh in this uh from this",
    "start": "84479",
    "end": "90560"
  },
  {
    "text": "perspective okay and then if we have time we can do a little bit of Life coding questions and so on so let's get",
    "start": "90560",
    "end": "96920"
  },
  {
    "text": "started um so to talk about how alexir came to be a little bit of the history",
    "start": "96920",
    "end": "103200"
  },
  {
    "start": "98000",
    "end": "208000"
  },
  {
    "text": "we need to go a little uh bit back in time I'm also in the rail car team the",
    "start": "103200",
    "end": "108280"
  },
  {
    "text": "rail web framework and quite some time ago at this point 2007 or 2008 we had a",
    "start": "108280",
    "end": "115439"
  },
  {
    "text": "raos 2.2 release and one of the big things in this release was that rails is",
    "start": "115439",
    "end": "121079"
  },
  {
    "text": "finally tread safe okay and the whole idea of being tread safe is the rails",
    "start": "121079",
    "end": "128239"
  },
  {
    "text": "cor team knew that concurrency was becoming more and more important right so what they wanted is that you should",
    "start": "128239",
    "end": "134920"
  },
  {
    "text": "get your ra application deploy it in a machine and if this machine has eight",
    "start": "134920",
    "end": "139959"
  },
  {
    "text": "cores it should be able to use all the cores okay but the interesting thing",
    "start": "139959",
    "end": "146440"
  },
  {
    "text": "about the word tread save is that it's not it does not it's not about using all the eight cores efficiently it's about",
    "start": "146440",
    "end": "152360"
  },
  {
    "text": "using all the eight cores in a way that it's not going to crash right like you can get your code run with cores and",
    "start": "152360",
    "end": "158519"
  },
  {
    "text": "it's going to work right it's not going to crash and uh so we had this in in the",
    "start": "158519",
    "end": "164200"
  },
  {
    "text": "release notes and later I joined the ra score team and I kind of found out that this was a lie raay was not really",
    "start": "164200",
    "end": "170319"
  },
  {
    "text": "thread safe because it's hard right how do you say that something is thread safe",
    "start": "170319",
    "end": "177319"
  },
  {
    "text": "you have a lot of heisen bugs you try to debug and then the bug's not there anymore but when it's in production it",
    "start": "177319",
    "end": "182599"
  },
  {
    "text": "shows up and because of many reasons right it was a very frustrating work to",
    "start": "182599",
    "end": "189200"
  },
  {
    "text": "do it was hard to debug it was hard to think of good Solutions because the",
    "start": "189200",
    "end": "195560"
  },
  {
    "text": "abstractions that we have here they you know when in most uh imperative",
    "start": "195560",
    "end": "200599"
  },
  {
    "text": "objectoriented language they're not good to uh solve those concurrency problems",
    "start": "200599",
    "end": "206560"
  },
  {
    "text": "and so you know I was so I I I stopped and start to think to myself if",
    "start": "206560",
    "end": "212720"
  },
  {
    "start": "208000",
    "end": "337000"
  },
  {
    "text": "concurrency is becoming more and more important right or we're starting to have more and more CPUs uh I need to",
    "start": "212720",
    "end": "219200"
  },
  {
    "text": "find a good solution and I knew that there was a a category there is a category of programming languages that",
    "start": "219200",
    "end": "226280"
  },
  {
    "text": "solve this problem really really well right then said okay I want to investigate I want to go deeper and then",
    "start": "226280",
    "end": "232079"
  },
  {
    "text": "I started uh writing softare functional programming languages study them explore them and um they really make concurrency",
    "start": "232079",
    "end": "240680"
  },
  {
    "text": "easier okay and there are many reasons for that and I think actually the following talk uh to this one is about",
    "start": "240680",
    "end": "246920"
  },
  {
    "text": "immutability it's going to cover some important aspects right but I I just want to focus on two right now which is",
    "start": "246920",
    "end": "254480"
  },
  {
    "text": "first in functional programming language uh we typically have the state explicit",
    "start": "254480",
    "end": "260199"
  },
  {
    "text": "right so when we're talking about object orientation we have like objects to wrap around a state and many of the",
    "start": "260199",
    "end": "266720"
  },
  {
    "text": "concurrency issues they come exactly for example you have have two threads",
    "start": "266720",
    "end": "271800"
  },
  {
    "text": "running different cores for example they try to change the same place in memory right so you get a segmentation fault",
    "start": "271800",
    "end": "277440"
  },
  {
    "text": "things get corrupted uh things not go as expect as expected because two things are trying to go to that same place okay",
    "start": "277440",
    "end": "287080"
  },
  {
    "text": "so uh and it's hard to figure this stuff out because the states hidden inside those objects right but if we start to",
    "start": "287080",
    "end": "293960"
  },
  {
    "text": "treat the state more explicitly it's easier to see you see oh here's where I have state and uh I can see that two",
    "start": "293960",
    "end": "301000"
  },
  {
    "text": "things are possibly trying to change here at the same time it gets much easier to reason about um so that's one",
    "start": "301000",
    "end": "307840"
  },
  {
    "text": "step right but the most important step is that we even try to motate things as",
    "start": "307840",
    "end": "313680"
  },
  {
    "text": "little as possible so instead of going if I have an array try to motate that array in memory by adding an element I",
    "start": "313680",
    "end": "320600"
  },
  {
    "text": "don't do that I think of Transformations I have an array and then if I want to",
    "start": "320600",
    "end": "326600"
  },
  {
    "text": "add an element to that I get a new array and then we start to work with data structures that are very good to work",
    "start": "326600",
    "end": "334199"
  },
  {
    "text": "towards transformation instead of mutation so this was uh really",
    "start": "334199",
    "end": "341000"
  },
  {
    "start": "337000",
    "end": "705000"
  },
  {
    "text": "interesting and when I got to this point and had this realization I said okay this is a very good direction to go it",
    "start": "341000",
    "end": "347960"
  },
  {
    "text": "really felt um identified exactly with those Solutions because many of the problems that I I was having when work",
    "start": "347960",
    "end": "354319"
  },
  {
    "text": "with FR was exactly because you're not following right those those guidelines and",
    "start": "354319",
    "end": "360199"
  },
  {
    "text": "eventually I continue explore the continue learning and I found out about airling okay and I say that this is when",
    "start": "360199",
    "end": "367039"
  },
  {
    "text": "I fell in love okay um who are fam who here is familiar with erling uh okay",
    "start": "367039",
    "end": "375039"
  },
  {
    "text": "good so Arling is a language created by Ericson and ericon is a telecommunication company erling at this",
    "start": "375039",
    "end": "382960"
  },
  {
    "text": "point is almost 30 years old okay and uh the what makes earling really",
    "start": "382960",
    "end": "390599"
  },
  {
    "text": "interesting is that when they designed the language as a tele telecommunication company they had a very specific set of",
    "start": "390599",
    "end": "397120"
  },
  {
    "text": "use case in mind and requirements so imagine that you're ericon right and you need to build uh a telephone switch",
    "start": "397120",
    "end": "404400"
  },
  {
    "text": "right telephone switch needs to be able to connect person a to person B so they can have a conversation but you want a",
    "start": "404400",
    "end": "411880"
  },
  {
    "text": "telephone switch to be able to handle as many connections at the same time right you want to install a telephone switch",
    "start": "411880",
    "end": "417639"
  },
  {
    "text": "somewhere and a lot of people are going to talk to their friends to their family all going through the same switch so I",
    "start": "417639",
    "end": "424160"
  },
  {
    "text": "start to have this idea of being able to handle right U many connections concurrently everything at the same time",
    "start": "424160",
    "end": "430720"
  },
  {
    "text": "and you also need to have with telephone switch you need to have this idea of distribution because sometimes you want",
    "start": "430720",
    "end": "436639"
  },
  {
    "text": "to call your friend but your friend is already talking to someone else someone else through another switch so the",
    "start": "436639",
    "end": "443120"
  },
  {
    "text": "switch is they need to be able to exchange information and tell you know you cannot talk that person it's busy right now so they also have this this",
    "start": "443120",
    "end": "449680"
  },
  {
    "text": "idea it should be very easy for the switches to communicate to each other and have this idea of a distributed",
    "start": "449680",
    "end": "456599"
  },
  {
    "text": "setup of switches exchange information okay and they have a bunch of uh other",
    "start": "456599",
    "end": "462599"
  },
  {
    "text": "interesting ones my favorite the one I like to to joke about is that uh we don't receive phone calls right from our",
    "start": "462599",
    "end": "470560"
  },
  {
    "text": "operator cell phone operator say hey we're going to be maintenance mode from Midnight until 1:00 a.m. so please don't",
    "start": "470560",
    "end": "476840"
  },
  {
    "text": "use your phone right we don't receive uh those kind of warnings so they came up with the whole idea of how can you",
    "start": "476840",
    "end": "483360"
  },
  {
    "text": "upgrade your code in production without bringing the system down and uh we are",
    "start": "483360",
    "end": "489400"
  },
  {
    "text": "going to explore a couple other uh consequences uh that you have when you're building software ding virtual",
    "start": "489400",
    "end": "495319"
  },
  {
    "text": "machine okay but the thing is that they build this great virtual machine and it",
    "start": "495319",
    "end": "502240"
  },
  {
    "text": "was used mostly for telecommunication for a long period of time and it was just about 2003 2004 that people realize",
    "start": "502240",
    "end": "510039"
  },
  {
    "text": "that this use case is very similar to this use case right anything that's",
    "start": "510039",
    "end": "516560"
  },
  {
    "text": "really running the network so you have a server and uh it can be it can be a",
    "start": "516560",
    "end": "521839"
  },
  {
    "text": "server that is doing video streaming you have a lot of clients connected that and you need to send them uh the data and",
    "start": "521839",
    "end": "527760"
  },
  {
    "text": "sometimes they need to contact internal endpoints to get information or web applications uh even more now that we",
    "start": "527760",
    "end": "534399"
  },
  {
    "text": "are going towards the internet of things right we have mult a lot of different devices talking different protocols and",
    "start": "534399",
    "end": "540560"
  },
  {
    "text": "you need to be able to handle a lot of them at the same time okay so you know people start oh so if was good for",
    "start": "540560",
    "end": "547680"
  },
  {
    "text": "telecommunication it's probably very good for this use case too and they're right okay so we have companies like",
    "start": "547680",
    "end": "554079"
  },
  {
    "text": "Amazon Facebook that use uh the Arling virtual machine in the infrastructure",
    "start": "554079",
    "end": "559360"
  },
  {
    "text": "telecommunication companies like Ericson Motorola um cren yeah cron is not here",
    "start": "559360",
    "end": "565600"
  },
  {
    "text": "but I think it's about uh 40% of the 3G data in Europe goes through airlan",
    "start": "565600",
    "end": "573279"
  },
  {
    "text": "switches right airlan machines so that's really interesting and we also have startups like Heroku so if you ever",
    "start": "573279",
    "end": "580320"
  },
  {
    "text": "deployed um an application to Heroku you use airling because they use earling in",
    "start": "580320",
    "end": "585920"
  },
  {
    "text": "their routing layer and we have even databases like kak uh The Bash folks",
    "start": "585920",
    "end": "591200"
  },
  {
    "text": "they here can talk to them about it that uh is implemented in theirl and so we",
    "start": "591200",
    "end": "596720"
  },
  {
    "text": "have a bunch of people using it in production and one of the very interesting of them it's WhatsApp uh",
    "start": "596720",
    "end": "602399"
  },
  {
    "text": "they got acquired at the beginning of this year by uh by Facebook by 19 billions or something and uh throughout",
    "start": "602399",
    "end": "610000"
  },
  {
    "text": "their history as a company uh they were they always gave talks how they using",
    "start": "610000",
    "end": "615560"
  },
  {
    "text": "airling in the infrastructure and how they are able to leverage airling uh as part of the infrastructure and they",
    "start": "615560",
    "end": "622480"
  },
  {
    "text": "wrote one of those was like how they got 2 million connections on a single node so WhatsApp is an application that you",
    "start": "622480",
    "end": "628519"
  },
  {
    "text": "install on your phone phone and you can you know you can install on iPhone Android Windows Nokia whatever and you",
    "start": "628519",
    "end": "635880"
  },
  {
    "text": "can you know exchange talk with your friends create groups and so on so it's a messaging app so they were talking",
    "start": "635880",
    "end": "642079"
  },
  {
    "text": "about the infrastructure and here the interesting thing is that they were using a really powerful machine right",
    "start": "642079",
    "end": "648360"
  },
  {
    "text": "they this machine had 24 cores 96 GB of RAM uh they're not using it um just 40%",
    "start": "648360",
    "end": "656600"
  },
  {
    "text": "of the machine resources was being used but it's exactly the idea that uh we want right I want to build a software",
    "start": "656600",
    "end": "663600"
  },
  {
    "text": "it's going to run on my machine it's going to use all the four cors on this machine right here but when we put into",
    "start": "663600",
    "end": "669720"
  },
  {
    "text": "production it's going to be able to use those 24 uh cores in the machine production as efficiently as possible",
    "start": "669720",
    "end": "676920"
  },
  {
    "text": "okay and they have talks or they say they got to some point up to 3 million",
    "start": "676920",
    "end": "682399"
  },
  {
    "text": "uh connections on single machines and uh one of the things that if you read the",
    "start": "682399",
    "end": "689720"
  },
  {
    "text": "the announcement or the the news when they were acquired by Facebook one of the thing that everyone remarked is how",
    "start": "689720",
    "end": "695079"
  },
  {
    "text": "their engineering team was actually quite small uh to handle all the law that they they handled and still handled",
    "start": "695079",
    "end": "702200"
  },
  {
    "text": "inside uh Facebook so you know so this is all very interesting okay and so and",
    "start": "702200",
    "end": "709560"
  },
  {
    "start": "705000",
    "end": "728000"
  },
  {
    "text": "this is the introductory part of the talk okay so now you're wondering okay so how those companies are able to",
    "start": "709560",
    "end": "716760"
  },
  {
    "text": "leverage airling to write those kind of applications efficient applications that",
    "start": "716760",
    "end": "721959"
  },
  {
    "text": "are distributed uh run very well concurrently so we are going to the part",
    "start": "721959",
    "end": "727880"
  },
  {
    "text": "of idioms right so what are the idioms what the language requires from you and how should you design software and to",
    "start": "727880",
    "end": "735560"
  },
  {
    "start": "728000",
    "end": "831000"
  },
  {
    "text": "talk about this we are going to go now into alixir okay so alixir is a",
    "start": "735560",
    "end": "740680"
  },
  {
    "text": "programming language that runs on the same virtual machine of airling so everything I said uh so far applies to",
    "start": "740680",
    "end": "748440"
  },
  {
    "text": "alixir okay and if you go to the website you're going to see that alexir is a",
    "start": "748440",
    "end": "753680"
  },
  {
    "text": "functional programming language but I don't like to stay with this description because alexir is more than that right",
    "start": "753680",
    "end": "760320"
  },
  {
    "text": "it's a concurent programming language uh and not only that it's a distributed",
    "start": "760320",
    "end": "765440"
  },
  {
    "text": "programming language and this is very important because uh this is actually one of the reasons I fell in love with",
    "start": "765440",
    "end": "771959"
  },
  {
    "text": "the airling virtual machine is because to me they are kind of solving the big problem okay they are like handling the",
    "start": "771959",
    "end": "779440"
  },
  {
    "text": "big elephant in the room because if we go back 30 years ago when they were designing the the virtual machine they",
    "start": "779440",
    "end": "786320"
  },
  {
    "text": "were not worried about concurrency nobody was worried about concurrency in the 80s okay maybe some academics but",
    "start": "786320",
    "end": "792639"
  },
  {
    "text": "the industry in general they were not and what they wanted to do was actually to build distributed software but when",
    "start": "792639",
    "end": "800560"
  },
  {
    "text": "concurrency became more and more important what they realized that concurrency is a special case of",
    "start": "800560",
    "end": "808160"
  },
  {
    "text": "distribution right because when you have distribution you have what you have your code running in two different machines",
    "start": "808160",
    "end": "814199"
  },
  {
    "text": "at the same time but when you have concurrency just a special case where everything happens to be running the",
    "start": "814199",
    "end": "819399"
  },
  {
    "text": "same uh machine right they're not over the network and then they whoa we can do",
    "start": "819399",
    "end": "824440"
  },
  {
    "text": "concurrency really well too right so uh how can we leverage all",
    "start": "824440",
    "end": "829560"
  },
  {
    "text": "that so here if you are uh programming in majority of languages imperative",
    "start": "829560",
    "end": "836560"
  },
  {
    "text": "object oriented this is your code right to write a bunch of sequential code that's going to execute",
    "start": "836560",
    "end": "843199"
  },
  {
    "text": "instructions and um the thing that's hard about threads that we we need to",
    "start": "843199",
    "end": "848639"
  },
  {
    "text": "think about threads as interleaving of the sequential code right to have the sequential code and then you need to think how you're going to inter leave",
    "start": "848639",
    "end": "854720"
  },
  {
    "text": "how are going to put the locks all think in terms of this sequential code and in alexir we also have sequential code okay",
    "start": "854720",
    "end": "862680"
  },
  {
    "text": "but this sequential code is organized in very tiny things that we call processes",
    "start": "862680",
    "end": "869279"
  },
  {
    "start": "865000",
    "end": "981000"
  },
  {
    "text": "okay and those processes they're not operating system processes they are V virtual machine processes and they are",
    "start": "869279",
    "end": "875639"
  },
  {
    "text": "lightweight thread of executions okay so here's so if you're talking about",
    "start": "875639",
    "end": "881959"
  },
  {
    "text": "idioms this is very important we just learned a new word we just added a new word to our vocabulary which is process",
    "start": "881959",
    "end": "888240"
  },
  {
    "text": "okay so those processes they are very tiny very lightweight which means that",
    "start": "888240",
    "end": "893399"
  },
  {
    "text": "we can have many of them okay so when at the moment you you know start your",
    "start": "893399",
    "end": "899360"
  },
  {
    "text": "alixir node you are you want to go to the to the Shell right to type some commands you already have like 50",
    "start": "899360",
    "end": "906320"
  },
  {
    "text": "processes running okay and all those processes they are isolated from each",
    "start": "906320",
    "end": "912199"
  },
  {
    "text": "other and the isolation gives us very interesting properties you're going to see next so you know in the WhatsApp",
    "start": "912199",
    "end": "919320"
  },
  {
    "text": "case when they were saying they had 2 million connections each connection was",
    "start": "919320",
    "end": "925240"
  },
  {
    "text": "one process okay so they actually had 2 million proc more than million processes running at the same time that case",
    "start": "925240",
    "end": "931560"
  },
  {
    "text": "that's how light towe they are you should not be concerned about creating um hundreds thousands of them okay so we",
    "start": "931560",
    "end": "939040"
  },
  {
    "text": "create all those processes they're isolated and because they're isolated we can have all of them running at the same",
    "start": "939040",
    "end": "944560"
  },
  {
    "text": "time so we start to get this idea of concurrency right because if they need something to do they just do whatever",
    "start": "944560",
    "end": "950199"
  },
  {
    "text": "they need to do they're all running at the same time and every time you need to exchange information or do some kind of",
    "start": "950199",
    "end": "955720"
  },
  {
    "text": "coordination you do it by sending messages right so if I want to tell one",
    "start": "955720",
    "end": "961399"
  },
  {
    "text": "process that it needs to do something particular or it's waiting for uh some particular input I just send it a",
    "start": "961399",
    "end": "968920"
  },
  {
    "text": "message okay so you know we are talking now about processes is our new word we",
    "start": "968920",
    "end": "975000"
  },
  {
    "text": "are talking about uh message passing and to learn more let's you know let's zoom",
    "start": "975000",
    "end": "980440"
  },
  {
    "text": "in let's pick like four processes and try to see what they're doing okay and let's imagine that this is a server",
    "start": "980440",
    "end": "987480"
  },
  {
    "start": "981000",
    "end": "1045000"
  },
  {
    "text": "right um it's doing something over the network so those four processes that I",
    "start": "987480",
    "end": "993079"
  },
  {
    "text": "chose you can imagine that one is responsible for communicating with the database another one is responsible for",
    "start": "993079",
    "end": "1000240"
  },
  {
    "text": "uh accepting requests over TCP so responsible for the network web part uh",
    "start": "1000240",
    "end": "1005519"
  },
  {
    "text": "we have an statistic process that just keeping live statistics about who is using your application who is connected",
    "start": "1005519",
    "end": "1011920"
  },
  {
    "text": "and so on and we have a mailer process okay that is responsible to send an email every time you need to do",
    "start": "1011920",
    "end": "1017880"
  },
  {
    "text": "something in particular so here's the interesting thing",
    "start": "1017880",
    "end": "1023120"
  },
  {
    "text": "um if you're using uh Classical Languages right imperative objectoriented you have a request and",
    "start": "1023120",
    "end": "1030319"
  },
  {
    "text": "then you want to send an email during that request what could actually happen that at the moment you are sending the",
    "start": "1030319",
    "end": "1036880"
  },
  {
    "text": "maail if something goes wrong while sending the email the web the thing that",
    "start": "1036880",
    "end": "1042600"
  },
  {
    "text": "responsible for accept request can actually crash can actually fail right",
    "start": "1042600",
    "end": "1047798"
  },
  {
    "start": "1045000",
    "end": "1122000"
  },
  {
    "text": "so if we start to think about it's really really weird you know like why the thing that sends a mail if that",
    "start": "1047799",
    "end": "1053200"
  },
  {
    "text": "thing crashes how can it bring the thing that's accepting requests down right so",
    "start": "1053200",
    "end": "1059160"
  },
  {
    "text": "what we need to do in those languages that we need to use try catch right you need to so if you go to your uh web",
    "start": "1059160",
    "end": "1065880"
  },
  {
    "text": "server implementation in your language or the web framework whatever they wrap your code in a huge TR catch begin",
    "start": "1065880",
    "end": "1073440"
  },
  {
    "text": "rescue and things like that why because if something goes wrong with the mailer you just know don't allow it to leak",
    "start": "1073440",
    "end": "1079559"
  },
  {
    "text": "allow it to to go through and bring everything now and you",
    "start": "1079559",
    "end": "1085240"
  },
  {
    "text": "know and this whole idea we like to say oh we should uh Rescue an exception or",
    "start": "1085240",
    "end": "1090280"
  },
  {
    "text": "catch an exception this whole idea is weird right because an exception is a way of a software to say something went",
    "start": "1090280",
    "end": "1096440"
  },
  {
    "text": "wrong right something supposedly exceptional happened and you're just saying thank you just continue doing",
    "start": "1096440",
    "end": "1101840"
  },
  {
    "text": "whatever you're doing right um so it's a very weird idea and when you start to put state with it also basically what",
    "start": "1101840",
    "end": "1109280"
  },
  {
    "text": "could happen is that you have your code running it goes into inconsistent State and then it start raising exception and",
    "start": "1109280",
    "end": "1115120"
  },
  {
    "text": "exceptions and so on and you're just telling it to continue doing whatever it's doing so in here because everything",
    "start": "1115120",
    "end": "1121400"
  },
  {
    "text": "is isolated right a crash in the mailer cannot bring any of those other things",
    "start": "1121400",
    "end": "1126760"
  },
  {
    "start": "1122000",
    "end": "1263000"
  },
  {
    "text": "down and that's a very important property because it changes the way you write software what we like to say is",
    "start": "1126760",
    "end": "1132520"
  },
  {
    "text": "that you know if something is wrong uh in the mailer just let it crash uh I am",
    "start": "1132520",
    "end": "1139600"
  },
  {
    "text": "told to not use the let it crash expression because sometimes it scares people right so we also say fail fast",
    "start": "1139600",
    "end": "1147080"
  },
  {
    "text": "okay if something is not good with the mailer fail fast and what is going to happen is that we Define supervisors",
    "start": "1147080",
    "end": "1153720"
  },
  {
    "text": "okay so this is a new kind of process it's a it it's a process that has a very",
    "start": "1153720",
    "end": "1159320"
  },
  {
    "text": "specific responsibility of supervising other processes so each one of each",
    "start": "1159320",
    "end": "1164840"
  },
  {
    "text": "process in different colors here they are going to belong to different supervisors so what happens that if the",
    "start": "1164840",
    "end": "1170120"
  },
  {
    "text": "mailer something is wrong with the mailer and it crashes this mailer you know this process is going to die and",
    "start": "1170120",
    "end": "1175440"
  },
  {
    "text": "then the supervisor is going to notice that the mailer crashed and it's going to start a new mailer to handle the next",
    "start": "1175440",
    "end": "1182080"
  },
  {
    "text": "upcoming requests okay so uh and this is very important because it start start to take",
    "start": "1182080",
    "end": "1189080"
  },
  {
    "text": "us to this idea of building fault tolerant applications because the thing is it doesn't matter what you do it",
    "start": "1189080",
    "end": "1195520"
  },
  {
    "text": "doesn't matter what whatever language you choose things are going to go wrong right unexpected things are going to",
    "start": "1195520",
    "end": "1201039"
  },
  {
    "text": "happen even more when you include Network file system kind of third party resources okay so you know instead of",
    "start": "1201039",
    "end": "1209919"
  },
  {
    "text": "trying to be defensive and foresee all the possible cases which we can't we",
    "start": "1209919",
    "end": "1214960"
  },
  {
    "text": "should plan for crashes right instead of saying you know I I'm going to handle possible case just let it crash and come",
    "start": "1214960",
    "end": "1221480"
  },
  {
    "text": "up of a strategy for your system to self-heal to go back to a state that's",
    "start": "1221480",
    "end": "1226600"
  },
  {
    "text": "guaranteed to work and that's why we have this whole idea of Supervisors because if something crashes we start",
    "start": "1226600",
    "end": "1232840"
  },
  {
    "text": "something new with the initial state that you know uh that it works is the",
    "start": "1232840",
    "end": "1238760"
  },
  {
    "text": "same it's the same with our machines right sometimes you're are coding and then our machines starts to get you know",
    "start": "1238760",
    "end": "1244400"
  },
  {
    "text": "not respond quite well it's not working quite well what do we do we restart it right we go back to the initial State",
    "start": "1244400",
    "end": "1250799"
  },
  {
    "text": "and then suddenly it's good again right it's the same idea let's go back to that initial state so uh so if I speaking",
    "start": "1250799",
    "end": "1258840"
  },
  {
    "text": "about words right and the new words to our vocabulary and idioms we are talking about uh processes supervisors and",
    "start": "1258840",
    "end": "1266320"
  },
  {
    "start": "1263000",
    "end": "1307000"
  },
  {
    "text": "sometimes the supervisors they have supervisors to that may have a supervisor to so uh we start to create",
    "start": "1266320",
    "end": "1273159"
  },
  {
    "text": "those supervision Tres right and at at one point uh your application is ready",
    "start": "1273159",
    "end": "1279320"
  },
  {
    "text": "you define the supervision tree with the responsibility on what should be restarted and we package all the all of",
    "start": "1279320",
    "end": "1286080"
  },
  {
    "text": "this inside an application and then application is it's kind of a component",
    "start": "1286080",
    "end": "1291320"
  },
  {
    "text": "right it's something that you can start and stop as a unit so that's how we design sofware and everyone writing",
    "start": "1291320",
    "end": "1298600"
  },
  {
    "text": "Elixir code is how they're going to structure and design their software okay",
    "start": "1298600",
    "end": "1304080"
  },
  {
    "text": "so uh so what we have talked about so far I talked about processes which are",
    "start": "1304080",
    "end": "1309720"
  },
  {
    "text": "uh isolated okay um and we also have supervisors which are processes that has",
    "start": "1309720",
    "end": "1314960"
  },
  {
    "text": "this very specific responsibility of supervising other processes and they have strategies on how they",
    "start": "1314960",
    "end": "1321159"
  },
  {
    "text": "should react when something does not go as expected and they are constantly",
    "start": "1321159",
    "end": "1326240"
  },
  {
    "text": "putting our system back into this noninitial state that's guaranteed to work and then we Define supervision",
    "start": "1326240",
    "end": "1332200"
  },
  {
    "text": "trees okay and we package them inside applications and every time we need to do communication we always do it with",
    "start": "1332200",
    "end": "1338679"
  },
  {
    "text": "message passing and we got many uh features from it right um that's kind of",
    "start": "1338679",
    "end": "1346120"
  },
  {
    "text": "got for free from this design right uh so we got concurrency concurrency does not come as an afterthought right it's",
    "start": "1346120",
    "end": "1352320"
  },
  {
    "start": "1347000",
    "end": "1398000"
  },
  {
    "text": "not like you write a thought and then you need oh I need to make it concurrent and then they're like oh now I'm making my code all ugly and messy just because",
    "start": "1352320",
    "end": "1359480"
  },
  {
    "text": "I need to add concurrency right it's walking in Elixir right it's walking along with with your design it's a",
    "start": "1359480",
    "end": "1367000"
  },
  {
    "text": "consequence of our design so we are now getting concurrency we are now talking",
    "start": "1367000",
    "end": "1372159"
  },
  {
    "text": "about failing fast okay it's a different approach when we are designing the software we got fault tolerance because",
    "start": "1372159",
    "end": "1378640"
  },
  {
    "text": "now have the supervisors with their strategies and there is one thing uh which is actually in the title of the",
    "start": "1378640",
    "end": "1385120"
  },
  {
    "text": "talk uh but we haven't talked so far which is distributed okay we got all those things but how do we get",
    "start": "1385120",
    "end": "1390880"
  },
  {
    "text": "distribution out of all of this so if you go back a couple slides right we",
    "start": "1390880",
    "end": "1397200"
  },
  {
    "text": "said that you know this is um this is your alexir software okay uh running",
    "start": "1397200",
    "end": "1402919"
  },
  {
    "start": "1398000",
    "end": "1484000"
  },
  {
    "text": "production so have a bunch of processes exchange messages and for some reason",
    "start": "1402919",
    "end": "1408880"
  },
  {
    "text": "like part of application starts to have a increase in the load right like you can have a the statistic server for",
    "start": "1408880",
    "end": "1415679"
  },
  {
    "text": "example for some reason starts to have an increased load so what you can do is that you can get your code right and we",
    "start": "1415679",
    "end": "1423400"
  },
  {
    "text": "have something called the release process where you can create uh different releases with different",
    "start": "1423400",
    "end": "1429640"
  },
  {
    "text": "responsibilities so you can get part of your code right and just say you know I want to run this particular code in a",
    "start": "1429640",
    "end": "1436120"
  },
  {
    "text": "different machine right so you just split it put in two machines and everything is going to work we just need",
    "start": "1436120",
    "end": "1441400"
  },
  {
    "text": "to uh update the reference to say to who you want to send message because since",
    "start": "1441400",
    "end": "1447720"
  },
  {
    "text": "the processes they all uh they all communicate with message passing the",
    "start": "1447720",
    "end": "1453000"
  },
  {
    "text": "virtual machine actually uh abstracts the message passing for you so it doesn't matter if you're sending a",
    "start": "1453000",
    "end": "1458799"
  },
  {
    "text": "message to this process to this process in this machine or a processing another machine it's all abstracted and handled",
    "start": "1458799",
    "end": "1465039"
  },
  {
    "text": "for you and we are going to see some some example I uh I'll do a little bit",
    "start": "1465039",
    "end": "1470640"
  },
  {
    "text": "of Life coding and send messages between noes so we can have a quick overview so",
    "start": "1470640",
    "end": "1477159"
  },
  {
    "text": "uh question so far before we go into the third part okay so okay so this is all",
    "start": "1477159",
    "end": "1486080"
  },
  {
    "start": "1484000",
    "end": "1519000"
  },
  {
    "text": "interesting right and as I said this is all properties of how the the virtual machine was designed so this not only",
    "start": "1486080",
    "end": "1493120"
  },
  {
    "text": "applies to alexir but airling uh jxa everything that's running in that virtual machine",
    "start": "1493120",
    "end": "1498919"
  },
  {
    "text": "so why alixir okay why would I use alixir um and we have and the best way",
    "start": "1498919",
    "end": "1507120"
  },
  {
    "text": "to tell why you should go with alexir when you're coming um to this particular",
    "start": "1507120",
    "end": "1513559"
  },
  {
    "text": "virtual machine and when you want to think about this particular kind of design of software the best way to talk",
    "start": "1513559",
    "end": "1519440"
  },
  {
    "text": "about it is to talk about our three goals in the language okay and they are compatibility extensibility and",
    "start": "1519440",
    "end": "1526600"
  },
  {
    "text": "productivity so comp compatibility is the easy one right it's just everything",
    "start": "1526600",
    "end": "1532200"
  },
  {
    "start": "1528000",
    "end": "1565000"
  },
  {
    "text": "I talked so far right it comes from the virtual machine and we are compatible uh",
    "start": "1532200",
    "end": "1539679"
  },
  {
    "text": "and all the abstractions they are the same whether if you're running elexir or",
    "start": "1539679",
    "end": "1544960"
  },
  {
    "text": "if you're running airling so for example a a list in airling is a list in alexir",
    "start": "1544960",
    "end": "1550279"
  },
  {
    "text": "a process in alexir is also a process in airling there is no conversion cost nor",
    "start": "1550279",
    "end": "1555640"
  },
  {
    "text": "anything so compatibility is about you know respecting this Foundation of being distributed and fall tolerant right and",
    "start": "1555640",
    "end": "1561960"
  },
  {
    "text": "you're not going to sacrifice that that's what this goal is is saying the second one is",
    "start": "1561960",
    "end": "1568600"
  },
  {
    "start": "1565000",
    "end": "1620000"
  },
  {
    "text": "extensibility and the best way I I like to describe extensibility is with this",
    "start": "1568600",
    "end": "1573760"
  },
  {
    "text": "quote uh quote from gu too it's one of my favorite talks of all time it's called growing language and at the end",
    "start": "1573760",
    "end": "1580520"
  },
  {
    "text": "of the talk he says now we need to go mattera we should now think of a language design as being a pattern for",
    "start": "1580520",
    "end": "1587600"
  },
  {
    "text": "language design science a tool for making more tools of the same kind",
    "start": "1587600",
    "end": "1592840"
  },
  {
    "text": "because the field of computer science it got so wide that it is impossible for a",
    "start": "1592840",
    "end": "1599919"
  },
  {
    "text": "language to you know natively attack all those possible",
    "start": "1599919",
    "end": "1604960"
  },
  {
    "text": "Fields right so what we need to do is that we need to design a language that you as a developer you can go and extend",
    "start": "1604960",
    "end": "1610840"
  },
  {
    "text": "it and take it to the domain you're working on so you can really be productive and the way we do that with",
    "start": "1610840",
    "end": "1618360"
  },
  {
    "text": "alexir is that we have a macro system that's very similar to how macros work",
    "start": "1618360",
    "end": "1624000"
  },
  {
    "start": "1620000",
    "end": "1706000"
  },
  {
    "text": "in lisp so here's uh some alexir code um so in alexir in in many program languag",
    "start": "1624000",
    "end": "1632559"
  },
  {
    "text": "have if and unless right they are kind of in many language they are keywords they are something special that the",
    "start": "1632559",
    "end": "1638200"
  },
  {
    "text": "language knows how to handle how to compile to and in alexir those things",
    "start": "1638200",
    "end": "1643440"
  },
  {
    "text": "they are just macros they are implemented with alexir itself which basically means means that if we are",
    "start": "1643440",
    "end": "1649240"
  },
  {
    "text": "using Elixir to implement the majority of the features in the language it means",
    "start": "1649240",
    "end": "1654360"
  },
  {
    "text": "that you you can also get elexir and take it to the domain you're working on right we are not cheating there are no",
    "start": "1654360",
    "end": "1660399"
  },
  {
    "text": "special cases all of those are in the core of the language so what is the idea",
    "start": "1660399",
    "end": "1666039"
  },
  {
    "text": "of a macro a macro for example UNL is a macro it does not receive the evaluation",
    "start": "1666039",
    "end": "1671240"
  },
  {
    "text": "of uh is number X right it's not going to evaluate if uh X is a number and",
    "start": "1671240",
    "end": "1676360"
  },
  {
    "text": "return true or false is going to receive the representation of this code right so",
    "start": "1676360",
    "end": "1681480"
  },
  {
    "text": "a Macer is going to receive the code representation and then it can transform this code to be something else since",
    "start": "1681480",
    "end": "1687519"
  },
  {
    "text": "unless is the opposite of a if is a negated if um that's exactly what we",
    "start": "1687519",
    "end": "1693679"
  },
  {
    "text": "translated to right we basically get an less and transform into a neg uh negated",
    "start": "1693679",
    "end": "1699120"
  },
  {
    "text": "if so uh and with this we can um extend the language and Implement most of the",
    "start": "1699120",
    "end": "1704840"
  },
  {
    "text": "language using alexir itself so some examples of what you can do with it right so here's how you would write a",
    "start": "1704840",
    "end": "1710679"
  },
  {
    "start": "1706000",
    "end": "1795000"
  },
  {
    "text": "test case uh with alixir so uh we Define a module called math test and all your",
    "start": "1710679",
    "end": "1717799"
  },
  {
    "text": "code in exer it leaves inside modules and you can say you know I want to use",
    "start": "1717799",
    "end": "1724320"
  },
  {
    "text": "uh the xunit case which is the name of our test framework and now you get these macros that allow you to uh Express very",
    "start": "1724320",
    "end": "1732120"
  },
  {
    "text": "elegantly what you're testing right so here's testing a very basic operation and you're you're just asserting that",
    "start": "1732120",
    "end": "1737760"
  },
  {
    "text": "one plus 1 is equal 2 and the interesting thing is depending on the language you're using you're kind of",
    "start": "1737760",
    "end": "1743399"
  },
  {
    "text": "saying no no no don't do that right because depending on the test framework you use you should never call assert",
    "start": "1743399",
    "end": "1749559"
  },
  {
    "text": "because if something goes wrong assert is going to say hey uh expected true but",
    "start": "1749559",
    "end": "1755440"
  },
  {
    "text": "got false you need to use things like assert equal assert more than assert match you need to go into this specific",
    "start": "1755440",
    "end": "1763440"
  },
  {
    "text": "uh API of unit testing but in alexir you just use aert for everything",
    "start": "1763440",
    "end": "1768559"
  },
  {
    "text": "because assert is a macro and as a macro it can look at the code and say I can see here that they're trying to compare",
    "start": "1768559",
    "end": "1774679"
  },
  {
    "text": "two numbers okay and when something goes wrong it's going to give you a very nice ER report what you're trying to do what",
    "start": "1774679",
    "end": "1780720"
  },
  {
    "text": "is the left side what is the right side and why it failed because we can look at the code at compilation time and uh get",
    "start": "1780720",
    "end": "1788200"
  },
  {
    "text": "information about it uh translate it to other things so this is one example the other example is we have a library",
    "start": "1788200",
    "end": "1795200"
  },
  {
    "start": "1795000",
    "end": "1870000"
  },
  {
    "text": "called Ecto which allows you to write quaries to run in a SQL database so",
    "start": "1795200",
    "end": "1801440"
  },
  {
    "text": "alixir is a dynamic language okay uh but Ecto it's actually a is type safe okay",
    "start": "1801440",
    "end": "1808840"
  },
  {
    "text": "so if here the alter is a string but if you try to pass try to compare alter",
    "start": "1808840",
    "end": "1814000"
  },
  {
    "text": "with a integer for example the car would say you know those things do not actually match right and um we got a lot",
    "start": "1814000",
    "end": "1821919"
  },
  {
    "text": "of inspiration from link from net and Link is a language integrated query",
    "start": "1821919",
    "end": "1827120"
  },
  {
    "text": "right it's part of the language but here is implemented just using the language features just using macros and we can",
    "start": "1827120",
    "end": "1833799"
  },
  {
    "text": "and we can do a lot of um we can extend the language for example to I typ to add",
    "start": "1833799",
    "end": "1839720"
  },
  {
    "text": "type checking we can ensure it's secure so we not going to inject something that can lead to a SQL injection and it's Al",
    "start": "1839720",
    "end": "1846799"
  },
  {
    "text": "also extremely efficient because in many cases we can compile most of the query",
    "start": "1846799",
    "end": "1851960"
  },
  {
    "text": "to SQL during compilation time right so you're not doing a lot of work at run time we just uh reduce the work we do at",
    "start": "1851960",
    "end": "1860159"
  },
  {
    "text": "run time is as little as possible okay so those are all examples and we can see many examples in the community right of",
    "start": "1860159",
    "end": "1866000"
  },
  {
    "text": "people getting alexir and extending to all those domains and uh the third goal",
    "start": "1866000",
    "end": "1871720"
  },
  {
    "start": "1870000",
    "end": "1884000"
  },
  {
    "text": "is productivity and productivity is kind of hard right to to explain how do you",
    "start": "1871720",
    "end": "1877120"
  },
  {
    "text": "say that um a language is more productive than than another and so the",
    "start": "1877120",
    "end": "1883159"
  },
  {
    "text": "way we like to describe productivity in Elixir is you know about tool for",
    "start": "1883159",
    "end": "1888399"
  },
  {
    "start": "1884000",
    "end": "1926000"
  },
  {
    "text": "example or having first class documentation because sometimes being productive is not always a language",
    "start": "1888399",
    "end": "1894639"
  },
  {
    "text": "issue is a community issue right how uh can you get the community to all",
    "start": "1894639",
    "end": "1900559"
  },
  {
    "text": "together write very good tools right with good apis uh and good documentation",
    "start": "1900559",
    "end": "1906760"
  },
  {
    "text": "okay so there is a focus on documentation I can show a little bit uh we have very good tooling out of the box",
    "start": "1906760",
    "end": "1913360"
  },
  {
    "text": "so as soon as you install the language uh you're going to get a a good test",
    "start": "1913360",
    "end": "1918840"
  },
  {
    "text": "unit framework we're going to get uh a shell to start writing code and we have this mix build tool also going to show",
    "start": "1918840",
    "end": "1926440"
  },
  {
    "start": "1926000",
    "end": "1941000"
  },
  {
    "text": "and lately we got a package manager too so if you start working with alexir and",
    "start": "1926440",
    "end": "1931720"
  },
  {
    "text": "someone already solved the problem that you want to work on you just add one line to your file and you're going to",
    "start": "1931720",
    "end": "1937440"
  },
  {
    "text": "fetch the dependency compile and have it available for you so if you want to use that acto code that compiles to SQL you",
    "start": "1937440",
    "end": "1944320"
  },
  {
    "start": "1941000",
    "end": "1977000"
  },
  {
    "text": "can just addit the dependency and go work on your problem okay so to show the things let's actually do",
    "start": "1944320",
    "end": "1950960"
  },
  {
    "text": "a very Quicky quick demo time um so what I'm going to do here is",
    "start": "1950960",
    "end": "1958799"
  },
  {
    "text": "as I said when you when you install alexir you get weight that's not what you're supposed to see I'm",
    "start": "1958799",
    "end": "1965799"
  },
  {
    "text": "done yes um so uh when you you installer you",
    "start": "1972240",
    "end": "1979720"
  },
  {
    "start": "1977000",
    "end": "2032000"
  },
  {
    "text": "you come with it comes with this build tool called mix that allows you to create new projects handle your",
    "start": "1979720",
    "end": "1986840"
  },
  {
    "text": "dependencies uh compile them test them and so on so what I'm going to do here is that I'm going to create a new",
    "start": "1986840",
    "end": "1992080"
  },
  {
    "text": "project called Fu and um one option that you can pass when you're creating a new",
    "start": "1992080",
    "end": "1997639"
  },
  {
    "text": "project is the um sub option which tells it to create a supervision tree so at",
    "start": "1997639",
    "end": "2002679"
  },
  {
    "text": "the beginning was say you know we have the supervision trees that are inside applications and I'm passing this flag",
    "start": "2002679",
    "end": "2008600"
  },
  {
    "text": "just so we can uh gain some time it's going to generate a supervision free for us so we run this uh run this command it",
    "start": "2008600",
    "end": "2015480"
  },
  {
    "text": "create the code for us and then we can just run something like mix test and it's going to uh compile and run",
    "start": "2015480",
    "end": "2023279"
  },
  {
    "text": "everything for us um one of the advantages of the airlink viral machine",
    "start": "2023279",
    "end": "2029039"
  },
  {
    "text": "is a very fast boot time so that's always nice and okay so let's take a",
    "start": "2029039",
    "end": "2035799"
  },
  {
    "text": "quick look at the code that it generat so you can see the Project's really really small um it comes with a config",
    "start": "2035799",
    "end": "2044279"
  },
  {
    "text": "directory so remember when I saying that the the runtime comes with this idea of",
    "start": "2044279",
    "end": "2049679"
  },
  {
    "text": "applications right it also comes with the idea of how you're going to configure applications which is really",
    "start": "2049679",
    "end": "2055398"
  },
  {
    "text": "really good because all the libraries uh in the language they follow",
    "start": "2055399",
    "end": "2061079"
  },
  {
    "text": "the same structure on how they are configured right they're not going to use a library and they it's configured this way and another one's configured",
    "start": "2061079",
    "end": "2067158"
  },
  {
    "text": "the other way everything is kind of standard right we have this idea of how",
    "start": "2067159",
    "end": "2072280"
  },
  {
    "text": "you define applications and configure them and we have a lip directory which comes with a simple file and the test",
    "start": "2072280",
    "end": "2078679"
  },
  {
    "text": "directory so let me remove the comment so we can focus",
    "start": "2078679",
    "end": "2084240"
  },
  {
    "text": "on okay so here is so here we Define a module again our code always leave",
    "start": "2084240",
    "end": "2090560"
  },
  {
    "start": "2085000",
    "end": "2112000"
  },
  {
    "text": "inside modules can everyone see well in the back so all of our code is defined inside modules right and I'm saying this",
    "start": "2090560",
    "end": "2097359"
  },
  {
    "text": "mod f is defining an application and what all an application needs to do is to define a start function that receives",
    "start": "2097359",
    "end": "2104960"
  },
  {
    "text": "two arguments and start a supervision tree so we are saying no um here we are",
    "start": "2104960",
    "end": "2112640"
  },
  {
    "start": "2112000",
    "end": "2202000"
  },
  {
    "text": "going to Define our children and in this case uh we don't have anything yet right and uh we Define what is the strategy so",
    "start": "2112640",
    "end": "2120520"
  },
  {
    "text": "for the supervision so a one for one supervisor means that you have you can",
    "start": "2120520",
    "end": "2125599"
  },
  {
    "text": "have many children right so one for one supervis means that if one particular child dies you just restart that one but",
    "start": "2125599",
    "end": "2132280"
  },
  {
    "text": "you can have for example things like one for all if one of the child dies you you",
    "start": "2132280",
    "end": "2137320"
  },
  {
    "text": "know you kill everything else and start them again so there are different strategies that we can play with and",
    "start": "2137320",
    "end": "2142720"
  },
  {
    "text": "just to show a little bit how it works let's do this let's define a worker which is a task and a task is just when",
    "start": "2142720",
    "end": "2149119"
  },
  {
    "text": "you want to execute some particular computation like send an email and this",
    "start": "2149119",
    "end": "2155280"
  },
  {
    "text": "task we are going to define it uh with a module okay sorry uh we're going to",
    "start": "2155280",
    "end": "2162560"
  },
  {
    "text": "Define it with a module the module that we want to call so in this case I'm going to be a little bit lazy and say",
    "start": "2162560",
    "end": "2168240"
  },
  {
    "text": "that the task is going to be defined the same module as my application the function it should call so I'm going to",
    "start": "2168240",
    "end": "2173720"
  },
  {
    "text": "go with do some work and the arguments are not going to pass any argument in this case okay so here I defined a",
    "start": "2173720",
    "end": "2180200"
  },
  {
    "text": "supervisor that has exactly one child that is a task so let's define uh",
    "start": "2180200",
    "end": "2185319"
  },
  {
    "text": "exactly this task so a function do some work it doesn't receive any argument and",
    "start": "2185319",
    "end": "2191160"
  },
  {
    "text": "all we're going to do here is I'm just going to print start to do some work and",
    "start": "2191160",
    "end": "2197040"
  },
  {
    "text": "I'm going to slep because uh just to simulate that we are doing some work okay so if everything went well what I",
    "start": "2197040",
    "end": "2204640"
  },
  {
    "text": "can do now is that I can start my application I'm starting it with a shell and you can see that it printed Right",
    "start": "2204640",
    "end": "2210400"
  },
  {
    "text": "started to do some work and because we started the application which started the supervision tree which started the",
    "start": "2210400",
    "end": "2216079"
  },
  {
    "text": "Tas that's starting to um do those computations and what I can do here is that our",
    "start": "2216079",
    "end": "2222800"
  },
  {
    "text": "supervisor uh it had a name if we go back to the file can say that we gave you a name of food. supervisor this is",
    "start": "2222800",
    "end": "2229280"
  },
  {
    "text": "just an identifier it can be whatever you want and I can I can ask you know give me all the children for the food",
    "start": "2229280",
    "end": "2236359"
  },
  {
    "text": "supervisor right and then it returns this information saying um what what is",
    "start": "2236359",
    "end": "2242160"
  },
  {
    "text": "the the module which is a task this P ID is this process identifier right just",
    "start": "2242160",
    "end": "2247720"
  },
  {
    "text": "identifying the process in case you want to send it messages and so on and uh it's the type of a worker and the the",
    "start": "2247720",
    "end": "2255480"
  },
  {
    "text": "fourth argument we use it in case of code reloading I'm not going to go in details if you want to know more we can",
    "start": "2255480",
    "end": "2261880"
  },
  {
    "text": "ask later in the questions part or discuss later so I'm going to do is that",
    "start": "2261880",
    "end": "2267040"
  },
  {
    "text": "I'm interested in this PID okay so I'm going to pattern match on it I just want",
    "start": "2267040",
    "end": "2272119"
  },
  {
    "text": "the PID I don't care about the rest right so I'm going to match on those",
    "start": "2272119",
    "end": "2277599"
  },
  {
    "text": "things and get the PID out and what I can do is that I'm going to send an exit signal to this process uh saying that I",
    "start": "2277599",
    "end": "2284720"
  },
  {
    "text": "want to kill it and what happens here is that it just",
    "start": "2284720",
    "end": "2290040"
  },
  {
    "text": "printed start to do some work again because I kill that process and killing that process is a way that I am",
    "start": "2290040",
    "end": "2295319"
  },
  {
    "text": "emulating failure right imagine that that process was doing something and then it crashed something went wrong and",
    "start": "2295319",
    "end": "2301400"
  },
  {
    "text": "then the supervisor saw that process crashed and say okay I'm starting a new one and you can see that it start to do",
    "start": "2301400",
    "end": "2306480"
  },
  {
    "text": "some work again and the thing here is is that you know if that process was sending an email right and something",
    "start": "2306480",
    "end": "2313000"
  },
  {
    "text": "went wrong that email you know by default if you don't add some kind of persistence it's gone right um but the",
    "start": "2313000",
    "end": "2321680"
  },
  {
    "text": "idea is that you know your system always going back to that uh initial State and building on top of persistence layer for",
    "start": "2321680",
    "end": "2328359"
  },
  {
    "text": "example to guarantee that the emails are always delivered is actually straightforward we have uh couple",
    "start": "2328359",
    "end": "2333920"
  },
  {
    "text": "libraries in the ecosystem that do that but the important is all the idea the of the supervisor restarting and going back",
    "start": "2333920",
    "end": "2340160"
  },
  {
    "text": "to that initial State that's guaranteed to work um Joe Armstrong uh the creator",
    "start": "2340160",
    "end": "2346200"
  },
  {
    "text": "of airlan right he says that they have systems at aricon that runs with n99 of",
    "start": "2346200",
    "end": "2351720"
  },
  {
    "text": "reliability which is I think is a second or microsc being offline per year right",
    "start": "2351720",
    "end": "2358240"
  },
  {
    "text": "which is quite fantastic um yes we have time so let me show",
    "start": "2358240",
    "end": "2365760"
  },
  {
    "text": "something else that's really really cool what I'm going to do now is that I'm going to start a shell right uh the",
    "start": "2365760",
    "end": "2373680"
  },
  {
    "start": "2367000",
    "end": "2445000"
  },
  {
    "text": "interactive shell interactive alexir and I'm going to give it a short name and when we give a shell a name in this case",
    "start": "2373680",
    "end": "2379760"
  },
  {
    "text": "a short name it allows other shells or other machines that are running the same network to communicate so I'm going to",
    "start": "2379760",
    "end": "2386480"
  },
  {
    "text": "give this one the name of Fu and you can see that here it changed it's showing right now the name of this node this F",
    "start": "2386480",
    "end": "2392640"
  },
  {
    "text": "at JV okay and uh I'm going to give this one the name name of",
    "start": "2392640",
    "end": "2398440"
  },
  {
    "text": "bar so if I if I am in this shell here and I Define a module like uh I know",
    "start": "2398440",
    "end": "2405079"
  },
  {
    "text": "this little bit cliche but hell road. prints",
    "start": "2405079",
    "end": "2410200"
  },
  {
    "text": "hello you can see it defined the module uh on this shell and then I can say",
    "start": "2410200",
    "end": "2416000"
  },
  {
    "text": "hello. Road and it's going to print hello uh and return okay which is the result of calling iut so you can see",
    "start": "2416000",
    "end": "2422839"
  },
  {
    "text": "that hello was printed here but if I go to the other shell and type hello. Road it doesn't work right because uh this",
    "start": "2422839",
    "end": "2430079"
  },
  {
    "text": "module was defined just in the other one it's not available here but what I can do is that I can very easily spawn a",
    "start": "2430079",
    "end": "2436480"
  },
  {
    "text": "process in the other node right and just say you know I want to uh spawn a process in the node named F at JV and",
    "start": "2436480",
    "end": "2444599"
  },
  {
    "text": "oops and what uh this process is going to do is to just execute this function",
    "start": "2444599",
    "end": "2450640"
  },
  {
    "text": "which calls hello. Road and when I run it you can see that now it works and the interesting thing is there are two",
    "start": "2450640",
    "end": "2457400"
  },
  {
    "text": "interesting things here the first one is that you can see that hello Road was not printed here again right it's not",
    "start": "2457400",
    "end": "2464119"
  },
  {
    "text": "printed twice hello was printed here so what happens is that we started to",
    "start": "2464119",
    "end": "2469280"
  },
  {
    "text": "execute the code in the other node but the other node knows that this node is",
    "start": "2469280",
    "end": "2474760"
  },
  {
    "text": "the one that triggered the the the request so if you want to do any IO it's going to send back right and and we use",
    "start": "2474760",
    "end": "2482240"
  },
  {
    "text": "it in production because sometimes you have a machine that's not behaving well you can do a remote shell we can connect",
    "start": "2482240",
    "end": "2488119"
  },
  {
    "text": "to it and send commands to it and try to get information what is happening there right and you can see here that the P ID",
    "start": "2488119",
    "end": "2494880"
  },
  {
    "text": "in this case starts with a big number the previous one always start with zero so the one starting with zero is running",
    "start": "2494880",
    "end": "2500920"
  },
  {
    "text": "on your machine and the ones that does not start with with zero uh they're running in other nodes right and I can",
    "start": "2500920",
    "end": "2508040"
  },
  {
    "text": "get I could get this P ID and send a message to it and exchange information um okay let me go to the",
    "start": "2508040",
    "end": "2516359"
  },
  {
    "text": "last slides and then we can open for questions so if you really found elexir interesting uh this is our website and",
    "start": "2516359",
    "end": "2523920"
  },
  {
    "start": "2519000",
    "end": "2570000"
  },
  {
    "text": "you can go to our getting started guide right now we have two main guides one is",
    "start": "2523920",
    "end": "2529359"
  },
  {
    "text": "uh literally getting start is going to introduce you to the data types how you do IO how you work with collections uh",
    "start": "2529359",
    "end": "2536520"
  },
  {
    "text": "and so on and we have an advanced guide which uh Builds an actual application",
    "start": "2536520",
    "end": "2542000"
  },
  {
    "text": "using those principles we kind of talked about here and and it's a distributed key Value Store okay uh very small",
    "start": "2542000",
    "end": "2548720"
  },
  {
    "text": "distributed ke Value store where you have you can have uh Keys being stored in different nodes and so",
    "start": "2548720",
    "end": "2555000"
  },
  {
    "text": "on um oh and if you're are interested in seeing some actual use cases of people",
    "start": "2555000",
    "end": "2562079"
  },
  {
    "text": "uh using Alex production so we just released uh alexir 1.0 kind of like",
    "start": "2562079",
    "end": "2568119"
  },
  {
    "text": "three weeks ago and two months ago we had our first alexir conference uh in Al",
    "start": "2568119",
    "end": "2574760"
  },
  {
    "start": "2570000",
    "end": "2604000"
  },
  {
    "text": "and we have a bunch of interesting talks and interesting conver ation of people using uh alexir for gaming applications",
    "start": "2574760",
    "end": "2581920"
  },
  {
    "text": "telecommunication Services uh there was someone talking about having a Bitcoin exchange server all built with alexir",
    "start": "2581920",
    "end": "2590240"
  },
  {
    "text": "and uh so you can go to the to the to alexir K on conri and watch some videos",
    "start": "2590240",
    "end": "2596960"
  },
  {
    "text": "one of my favorite talks is uh a developer working at a game company and",
    "start": "2596960",
    "end": "2602200"
  },
  {
    "text": "they build a poker game right and the thing and the poker game lasts on average there 20 minutes which means",
    "start": "2602200",
    "end": "2609280"
  },
  {
    "start": "2604000",
    "end": "2666000"
  },
  {
    "text": "it's really really hard for you to stop the system to upgrade it right because when one game is in the middle another",
    "start": "2609280",
    "end": "2615359"
  },
  {
    "text": "one is starting another one is finishing so you don't have really a good time like for down time right and people play",
    "start": "2615359",
    "end": "2621839"
  },
  {
    "text": "the whole day the whole night so it gets tricky and he was uh in his talk he was",
    "start": "2621839",
    "end": "2627400"
  },
  {
    "text": "saying how they were using all these distributed aspects of for running um",
    "start": "2627400",
    "end": "2633680"
  },
  {
    "text": "for doing a hot colding upgrade right so the could upgrade their software live by",
    "start": "2633680",
    "end": "2639680"
  },
  {
    "text": "using the distribution and then he he goes into how did he designed uh the whole application so in their case uh",
    "start": "2639680",
    "end": "2647240"
  },
  {
    "text": "each poker table is a process each player is a process and they're exchanging information with the poker",
    "start": "2647240",
    "end": "2652920"
  },
  {
    "text": "table and when you're upgrading your code live they basically move the poker table to another node but still have the",
    "start": "2652920",
    "end": "2659680"
  },
  {
    "text": "players here so they have kind of a mixed setup I really recommend it's really interesting and uh we have plenty of",
    "start": "2659680",
    "end": "2666760"
  },
  {
    "start": "2666000",
    "end": "2688000"
  },
  {
    "text": "books if you go to the website here are uh some of of them and I think at this",
    "start": "2666760",
    "end": "2672119"
  },
  {
    "text": "point they were already updated to alixir uh 1.0 and so we have plent of",
    "start": "2672119",
    "end": "2677800"
  },
  {
    "text": "resources if you you know if you start with the getting started guide and then say Oh I want something deeper right there are uh different options you could",
    "start": "2677800",
    "end": "2684640"
  },
  {
    "text": "choose from we have screencasts uh being published and that's it I want to thank my company that uh allows me to work at",
    "start": "2684640",
    "end": "2692680"
  },
  {
    "start": "2688000",
    "end": "2712000"
  },
  {
    "text": "this point I'm working full-time on alexir for a year and a half and um really thank thankful cuz allow me to",
    "start": "2692680",
    "end": "2698359"
  },
  {
    "text": "take the language to where we are today uh that's it thank",
    "start": "2698359",
    "end": "2704359"
  },
  {
    "text": "you I have time for questions awesome uh it's a question from the",
    "start": "2708599",
    "end": "2715040"
  },
  {
    "start": "2712000",
    "end": "2814000"
  },
  {
    "text": "audience and it goes what would happen to the 4 process when the supervisor",
    "start": "2715040",
    "end": "2720119"
  },
  {
    "text": "starts a new process what would happen to the process it it's just gone right",
    "start": "2720119",
    "end": "2726640"
  },
  {
    "text": "so um so the question is what's going to happen to the the faulty process when uh",
    "start": "2726640",
    "end": "2734880"
  },
  {
    "text": "when the supervisor acts right so if you have something like uh a I'm going to",
    "start": "2734880",
    "end": "2740800"
  },
  {
    "text": "use one for all strategies an example so something crashes right and the other ones they because of the supervision",
    "start": "2740800",
    "end": "2748200"
  },
  {
    "text": "strategy it says you're going to kill the other one and we're starting restart everything again it just kills them",
    "start": "2748200",
    "end": "2753559"
  },
  {
    "text": "right just you know whatever they're doing is going to be interrupt it's going to cut and they're gone and the",
    "start": "2753559",
    "end": "2758599"
  },
  {
    "text": "interesting thing is so I I was saying about um just to have an idea how this",
    "start": "2758599",
    "end": "2764520"
  },
  {
    "text": "uh impact impacts also the design of the virtual machine and the language the",
    "start": "2764520",
    "end": "2769800"
  },
  {
    "text": "interesting thing is that because they're isolated we don't have for example stop the road garbage collection",
    "start": "2769800",
    "end": "2775880"
  },
  {
    "text": "right uh because the process they do not really share memory and this is really good because if something is wrong and a",
    "start": "2775880",
    "end": "2782480"
  },
  {
    "text": "faulty process you know dies the garbage collector just you know goes and okay I",
    "start": "2782480",
    "end": "2787920"
  },
  {
    "text": "got the memory back you didn't need to do any check uh and it's really good for also the cases of WhatsApp right you",
    "start": "2787920",
    "end": "2794240"
  },
  {
    "text": "have a connection per process when that connection is gone because the client's connected or because you want to disconnect you just reclaim it there is",
    "start": "2794240",
    "end": "2801359"
  },
  {
    "text": "you're not going to have a garbage collector going through all the 2 million connections at the same time to",
    "start": "2801359",
    "end": "2806480"
  },
  {
    "text": "see if there's something shared and so on uh did I answer the question um if",
    "start": "2806480",
    "end": "2812440"
  },
  {
    "text": "please ask more um um bad",
    "start": "2812440",
    "end": "2817599"
  },
  {
    "start": "2814000",
    "end": "2932000"
  },
  {
    "text": "um is there is there something like is there a metal layer like can I look at one of those FY ones and see what was",
    "start": "2817599",
    "end": "2823160"
  },
  {
    "text": "wrong with it before it di so that's a very good question uh what about debugging right when something goes",
    "start": "2823160",
    "end": "2828960"
  },
  {
    "text": "wrong um what are going to do so uh so I'm going to answer two different things",
    "start": "2828960",
    "end": "2835760"
  },
  {
    "text": "so the first thing is that we don't have traditional debuggers here because if you have a lot of processes run at the",
    "start": "2835760",
    "end": "2842079"
  },
  {
    "text": "same time right and you say I want to see what is happening there when that process you say stop do a break point to",
    "start": "2842079",
    "end": "2849559"
  },
  {
    "text": "see what is happening there everything else the whole Road continues running right no nobody's going to stop for that",
    "start": "2849559",
    "end": "2854880"
  },
  {
    "text": "particular process so if you set a break point in there you can have other process that were waiting for a message",
    "start": "2854880",
    "end": "2861240"
  },
  {
    "text": "from this one right and then they are going to get a timeout because they don't get a reply so we don't have a",
    "start": "2861240",
    "end": "2866400"
  },
  {
    "text": "typical uh debugging system because at the point you're going to type while really want to see your system State",
    "start": "2866400",
    "end": "2872520"
  },
  {
    "text": "change it completely and then you're going to be debugging something you don't think uh really is there so so how do we work around that right the fact",
    "start": "2872520",
    "end": "2878720"
  },
  {
    "text": "that we cannot use traditional deburger so very good tracing tools you can basically Trace uh any event that is",
    "start": "2878720",
    "end": "2885400"
  },
  {
    "text": "happening in the virtual machine um a process started a process crashed uh I",
    "start": "2885400",
    "end": "2890960"
  },
  {
    "text": "want to call this function I want to see if this function is being called by this process with this particular uh argument",
    "start": "2890960",
    "end": "2898480"
  },
  {
    "text": "so that's one uh thing and it we come we shape with a very useful logging framework and by default all processes",
    "start": "2898480",
    "end": "2905480"
  },
  {
    "text": "they are going to to log I I crashed the last message I received was this this",
    "start": "2905480",
    "end": "2911480"
  },
  {
    "text": "was my particular State and this is the the stack Trace so we improve with those",
    "start": "2911480",
    "end": "2918000"
  },
  {
    "text": "tools and um and the nice thing is that the the whole language came from you",
    "start": "2918000",
    "end": "2924400"
  },
  {
    "text": "know from industrial setup right so they they had to to figure the stuff out how to have a good logging and um",
    "start": "2924400",
    "end": "2931280"
  },
  {
    "text": "understanding of the system so I would traditionally set the break point and then I would inspect something and uh",
    "start": "2931280",
    "end": "2938599"
  },
  {
    "start": "2932000",
    "end": "2968000"
  },
  {
    "text": "and look and look into and write some Expressions so what it sounds to me is that I need to uh do change to my code",
    "start": "2938599",
    "end": "2946640"
  },
  {
    "text": "then get that code deployed and do change to my code get that deployed but you mentioned also that you can deploy",
    "start": "2946640",
    "end": "2953880"
  },
  {
    "text": "code while while the application is running can you tell something about",
    "start": "2953880",
    "end": "2960119"
  },
  {
    "text": "like how would I if if I if I need to change these loging statements a couple of times to get to figure out",
    "start": "2960119",
    "end": "2967960"
  },
  {
    "text": "how okay so um the question one is about the hot code loading and how we're doing",
    "start": "2967960",
    "end": "2974680"
  },
  {
    "start": "2968000",
    "end": "3178000"
  },
  {
    "text": "production so typically what it would do is that one machine is faulty right and you don't want to bring it out for some",
    "start": "2974680",
    "end": "2980319"
  },
  {
    "text": "reason you're going to uh log into this machine you're probably going to start to do some tracing and try to see what",
    "start": "2980319",
    "end": "2986319"
  },
  {
    "text": "is wrong if the logs are not good uh you could start with some tracing to see why",
    "start": "2986319",
    "end": "2991599"
  },
  {
    "text": "the logs are not good what exactly is happening there and when you pinpoint if if you want you can you know get the you",
    "start": "2991599",
    "end": "2999160"
  },
  {
    "text": "go to to the tag in your source code right that had that particular version",
    "start": "2999160",
    "end": "3004599"
  },
  {
    "text": "deployed you can change that module um compile it and tell the virtual machine",
    "start": "3004599",
    "end": "3011160"
  },
  {
    "text": "to load this new version of the module okay so uh this is B that's a very",
    "start": "3011160",
    "end": "3017760"
  },
  {
    "text": "simple idea of how it work I I don't think I have like time to show exactly how to do the setup to show how it would",
    "start": "3017760",
    "end": "3024599"
  },
  {
    "text": "work but we I said like a couple times during the talk that all your code lives",
    "start": "3024599",
    "end": "3031000"
  },
  {
    "text": "inside modules right and you cannot have code outside of a module and the reason is because we use the module as the main",
    "start": "3031000",
    "end": "3038680"
  },
  {
    "text": "the main you know container for code because we also use it for upgrading the code in production so you can see here",
    "start": "3038680",
    "end": "3043960"
  },
  {
    "text": "that when we Define the module right it return a tle saying oh this is a module this is the name of the module and you",
    "start": "3043960",
    "end": "3050000"
  },
  {
    "text": "can see this whole thing with bunch of giber here this is a binary with the module bite code Okay so so for example",
    "start": "3050000",
    "end": "3058040"
  },
  {
    "text": "what I could do is that I could actually let me see if I can do that so",
    "start": "3058040",
    "end": "3063839"
  },
  {
    "text": "yeah it may not work so don't hold me to it so still hello. world is not defined",
    "start": "3063839",
    "end": "3069319"
  },
  {
    "text": "here right so what I'm going to do is that um so if I get V1 is going to give",
    "start": "3069319",
    "end": "3075960"
  },
  {
    "text": "me the contents of the first expression which was that module being defined so if I type V1 it gives me what was the",
    "start": "3075960",
    "end": "3082760"
  },
  {
    "text": "value defined here right so we can see that we have the mod the name and the",
    "start": "3082760",
    "end": "3088280"
  },
  {
    "text": "binary and I'm interested in the binary so I want to PN match on it just to get this",
    "start": "3088280",
    "end": "3093920"
  },
  {
    "text": "binary okay and this I'm going to match on V one so now I have the binary here",
    "start": "3093920",
    "end": "3099480"
  },
  {
    "text": "so I'm going to do is that I'm going to do an RPC call to uh the node bar at JV",
    "start": "3099480",
    "end": "3107240"
  },
  {
    "text": "damn it what are the arguments it's called um load binary and I need to pass",
    "start": "3107240",
    "end": "3114720"
  },
  {
    "text": "the module name the file it defined and the binary let's see if this works oh it",
    "start": "3114720",
    "end": "3119839"
  },
  {
    "text": "worked so now if I go to the other node hello road is here right",
    "start": "3119839",
    "end": "3129280"
  },
  {
    "text": "so I started to sweat um so this is for",
    "start": "3129280",
    "end": "3134319"
  },
  {
    "text": "example how you you would do right there's a little bit more of um more detail to that but that's basically the",
    "start": "3134319",
    "end": "3140680"
  },
  {
    "text": "idea it can get the bite code and send it to the virtual machine and say Hey Now what the virtual machine has that it",
    "start": "3140680",
    "end": "3146280"
  },
  {
    "text": "has two versions of the same module it can have two version of the same module memory so you have the old one and the",
    "start": "3146280",
    "end": "3152839"
  },
  {
    "text": "new one you just sent and you can say to some existing code say I wanted to",
    "start": "3152839",
    "end": "3157960"
  },
  {
    "text": "upgrade to the new version right so this kind of how you can do a live patch in a",
    "start": "3157960",
    "end": "3163680"
  },
  {
    "text": "in a in a production system and oh we're out of time uh please uh ping me uh",
    "start": "3163680",
    "end": "3170720"
  },
  {
    "text": "thank you",
    "start": "3170720",
    "end": "3173880"
  }
]