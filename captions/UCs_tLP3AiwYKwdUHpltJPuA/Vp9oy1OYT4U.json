[
  {
    "text": "[Applause]",
    "start": "10140",
    "end": "15000"
  },
  {
    "text": "thank you Michelle for that kind of",
    "start": "15000",
    "end": "18400"
  },
  {
    "text": "introduction good day so my name's Chris",
    "start": "21519",
    "end": "24279"
  },
  {
    "text": "and today I want to talk about how",
    "start": "24279",
    "end": "25960"
  },
  {
    "text": "functional programming applies to the",
    "start": "25960",
    "end": "28439"
  },
  {
    "text": "worldwide web and delivers there on fp's",
    "start": "28439",
    "end": "31920"
  },
  {
    "text": "Promises of productivity and",
    "start": "31920",
    "end": "35600"
  },
  {
    "text": "safety as Michelle said I run a business",
    "start": "35600",
    "end": "37760"
  },
  {
    "text": "called accelerando which is all about",
    "start": "37760",
    "end": "39399"
  },
  {
    "text": "rapid prototyping we use technology to",
    "start": "39399",
    "end": "41879"
  },
  {
    "text": "reduce stress by getting computers to",
    "start": "41879",
    "end": "44079"
  },
  {
    "text": "worry about the things that you don't so",
    "start": "44079",
    "end": "46920"
  },
  {
    "text": "that you don't have to and this mindset",
    "start": "46920",
    "end": "49920"
  },
  {
    "text": "for me extends to our taste in",
    "start": "49920",
    "end": "52000"
  },
  {
    "text": "development tools have I got",
    "start": "52000",
    "end": "53440"
  },
  {
    "text": "notifications happening up there no",
    "start": "53440",
    "end": "56120"
  },
  {
    "text": "good so today I'm going to give you a",
    "start": "56120",
    "end": "58600"
  },
  {
    "text": "Capal introduction to the philosophy of",
    "start": "58600",
    "end": "60960"
  },
  {
    "text": "the elm language and a brief look at its",
    "start": "60960",
    "end": "63320"
  },
  {
    "text": "syntax I'm not going to try and teach",
    "start": "63320",
    "end": "65158"
  },
  {
    "text": "you the language uh there's a wonderful",
    "start": "65159",
    "end": "68040"
  },
  {
    "text": "talk from a couple of years ago that",
    "start": "68040",
    "end": "69600"
  },
  {
    "text": "I'll link to at the end from Jessica",
    "start": "69600",
    "end": "71320"
  },
  {
    "text": "Kerr which does an excellent job of that",
    "start": "71320",
    "end": "73960"
  },
  {
    "text": "but rather I'm going to look at how to",
    "start": "73960",
    "end": "76320"
  },
  {
    "text": "get started in learning Elm under your",
    "start": "76320",
    "end": "79040"
  },
  {
    "text": "own Steam and why you might want to",
    "start": "79040",
    "end": "81680"
  },
  {
    "text": "try and we'll do this in the context of",
    "start": "81680",
    "end": "84240"
  },
  {
    "text": "writing a real world but simple",
    "start": "84240",
    "end": "86600"
  },
  {
    "text": "application leveraging some of the",
    "start": "86600",
    "end": "88799"
  },
  {
    "text": "features in the latest release of the",
    "start": "88799",
    "end": "90320"
  },
  {
    "text": "elm runtime and along the way we're",
    "start": "90320",
    "end": "92680"
  },
  {
    "text": "going to look",
    "start": "92680",
    "end": "94200"
  },
  {
    "text": "at how Elm fits into the wider",
    "start": "94200",
    "end": "97040"
  },
  {
    "text": "JavaScript ecosystem and what you might",
    "start": "97040",
    "end": "99360"
  },
  {
    "text": "need to know if you've been developing",
    "start": "99360",
    "end": "101079"
  },
  {
    "text": "on previous versions of elm for those of",
    "start": "101079",
    "end": "104079"
  },
  {
    "text": "you who are new to Elm it arose from a",
    "start": "104079",
    "end": "107000"
  },
  {
    "text": "university thesis on functional reactive",
    "start": "107000",
    "end": "109240"
  },
  {
    "text": "programming by a student named Evan",
    "start": "109240",
    "end": "111520"
  },
  {
    "text": "kazab",
    "start": "111520",
    "end": "113399"
  },
  {
    "text": "Kazi now I know what you're thinking",
    "start": "113399",
    "end": "115799"
  },
  {
    "text": "it's one of those toy academic",
    "start": "115799",
    "end": "117479"
  },
  {
    "text": "functional languages that is as pretty",
    "start": "117479",
    "end": "119200"
  },
  {
    "text": "as a kitten in a pink bow but about as",
    "start": "119200",
    "end": "121680"
  },
  {
    "text": "useful as a meat raincoat in a tornado",
    "start": "121680",
    "end": "124159"
  },
  {
    "text": "full of hyenas but it's",
    "start": "124159",
    "end": "127039"
  },
  {
    "text": "not Elm is a remarkably useful and",
    "start": "127039",
    "end": "130879"
  },
  {
    "text": "practical functional language which",
    "start": "130879",
    "end": "132560"
  },
  {
    "text": "compiles to JavaScript runs in the web",
    "start": "132560",
    "end": "135040"
  },
  {
    "text": "browser and does one thing better than",
    "start": "135040",
    "end": "137280"
  },
  {
    "text": "most of its competitors and that thing",
    "start": "137280",
    "end": "139160"
  },
  {
    "text": "is safety the promise of elm is no",
    "start": "139160",
    "end": "141920"
  },
  {
    "text": "runtime errors",
    "start": "141920",
    "end": "145239"
  },
  {
    "text": "ever you never get that damn null",
    "start": "145239",
    "end": "147959"
  },
  {
    "text": "pointer sorry that damn null object",
    "start": "147959",
    "end": "150720"
  },
  {
    "text": "error and that's not just because Elm",
    "start": "150720",
    "end": "152800"
  },
  {
    "text": "doesn't have any",
    "start": "152800",
    "end": "154200"
  },
  {
    "text": "objects the way Elm does this is by",
    "start": "154200",
    "end": "156720"
  },
  {
    "text": "being pretty down strict about what you",
    "start": "156720",
    "end": "158840"
  },
  {
    "text": "can and can't do it's a small language",
    "start": "158840",
    "end": "162519"
  },
  {
    "text": "with a simple but not too simple type",
    "start": "162519",
    "end": "164760"
  },
  {
    "text": "system it's about as much of hascal as",
    "start": "164760",
    "end": "167159"
  },
  {
    "text": "you can fit on the back of a postcard we",
    "start": "167159",
    "end": "169400"
  },
  {
    "text": "have immutable data thus no variable",
    "start": "169400",
    "end": "172360"
  },
  {
    "text": "aliasing bugs we have strong typing",
    "start": "172360",
    "end": "175200"
  },
  {
    "text": "which means no data type or Missing",
    "start": "175200",
    "end": "176920"
  },
  {
    "text": "Method errors we have algebraic data typ",
    "start": "176920",
    "end": "179800"
  },
  {
    "text": "types which let you express ambiguity on",
    "start": "179800",
    "end": "183200"
  },
  {
    "text": "the page rather than in your head so n",
    "start": "183200",
    "end": "186040"
  },
  {
    "text": "no no n pointer errors higher order",
    "start": "186040",
    "end": "188640"
  },
  {
    "text": "functions and extensive use of partial",
    "start": "188640",
    "end": "190680"
  },
  {
    "text": "application and composition provide a",
    "start": "190680",
    "end": "193120"
  },
  {
    "text": "surprisingly Rich pallet of operations",
    "start": "193120",
    "end": "195400"
  },
  {
    "text": "from rather quite small standard library",
    "start": "195400",
    "end": "198640"
  },
  {
    "text": "and side effects are very strongly",
    "start": "198640",
    "end": "200959"
  },
  {
    "text": "constrained and the upset of that is",
    "start": "200959",
    "end": "203519"
  },
  {
    "text": "that the language actively helps you",
    "start": "203519",
    "end": "205239"
  },
  {
    "text": "cover all the possible edge cases so",
    "start": "205239",
    "end": "208280"
  },
  {
    "text": "what is working in Elm like",
    "start": "208280",
    "end": "210519"
  },
  {
    "text": "the elm core",
    "start": "210519",
    "end": "212120"
  },
  {
    "text": "libraries enforce a structure to your",
    "start": "212120",
    "end": "214439"
  },
  {
    "text": "program that funnels all of the",
    "start": "214439",
    "end": "215760"
  },
  {
    "text": "complexity into one place and uses the",
    "start": "215760",
    "end": "218400"
  },
  {
    "text": "type system to insist that you handle",
    "start": "218400",
    "end": "220319"
  },
  {
    "text": "all the uncertainties",
    "start": "220319",
    "end": "222040"
  },
  {
    "text": "meticulously the compiler has got your",
    "start": "222040",
    "end": "224280"
  },
  {
    "text": "back the safety features of the language",
    "start": "224280",
    "end": "227040"
  },
  {
    "text": "mean that refactoring is your go-to tool",
    "start": "227040",
    "end": "229920"
  },
  {
    "text": "rather than designing an architecture",
    "start": "229920",
    "end": "232360"
  },
  {
    "text": "complex enough for any possible",
    "start": "232360",
    "end": "234319"
  },
  {
    "text": "eventuality which is the the typical",
    "start": "234319",
    "end": "236920"
  },
  {
    "text": "approach in a pure JavaScript framework",
    "start": "236920",
    "end": "239319"
  },
  {
    "text": "El encourages you to begin with a blank",
    "start": "239319",
    "end": "242159"
  },
  {
    "text": "page and iterate fast with the knowledge",
    "start": "242159",
    "end": "244680"
  },
  {
    "text": "that the compiler if it okays your",
    "start": "244680",
    "end": "246959"
  },
  {
    "text": "program it's going to run it might even",
    "start": "246959",
    "end": "249560"
  },
  {
    "text": "run where you want it to",
    "start": "249560",
    "end": "251120"
  },
  {
    "text": "go in an Elm program you have exactly",
    "start": "251120",
    "end": "254079"
  },
  {
    "text": "one variable which we call the model",
    "start": "254079",
    "end": "256959"
  },
  {
    "text": "messages from the outside",
    "start": "256959",
    "end": "258880"
  },
  {
    "text": "world come to your update function which",
    "start": "258880",
    "end": "261560"
  },
  {
    "text": "updates your model and that update",
    "start": "261560",
    "end": "264080"
  },
  {
    "text": "operation emits a new model and",
    "start": "264080",
    "end": "266680"
  },
  {
    "text": "potentially some actions you don't have",
    "start": "266680",
    "end": "269000"
  },
  {
    "text": "to worry about updating the screen",
    "start": "269000",
    "end": "271320"
  },
  {
    "text": "because the language handles it each",
    "start": "271320",
    "end": "273000"
  },
  {
    "text": "time the model",
    "start": "273000",
    "end": "274600"
  },
  {
    "text": "changes you each time the model changes",
    "start": "274600",
    "end": "278039"
  },
  {
    "text": "your view routine is called surrender",
    "start": "278039",
    "end": "279960"
  },
  {
    "text": "the state of your your model as a web",
    "start": "279960",
    "end": "282240"
  },
  {
    "text": "page and then the language efficiently",
    "start": "282240",
    "end": "284280"
  },
  {
    "text": "figures out how to update the",
    "start": "284280",
    "end": "286919"
  },
  {
    "text": "screen via the document object model to",
    "start": "286919",
    "end": "289400"
  },
  {
    "text": "render that change and there's a good",
    "start": "289400",
    "end": "291080"
  },
  {
    "text": "helping of virtual document models tree",
    "start": "291080",
    "end": "293440"
  },
  {
    "text": "diffing tree shaking and all the cool",
    "start": "293440",
    "end": "295120"
  },
  {
    "text": "buzzword which make what sounds like a",
    "start": "295120",
    "end": "297320"
  },
  {
    "text": "pretty insane idea to actually actually",
    "start": "297320",
    "end": "299919"
  },
  {
    "text": "be",
    "start": "299919",
    "end": "301600"
  },
  {
    "text": "efficient so I'm going to talk about a",
    "start": "301600",
    "end": "303560"
  },
  {
    "text": "madeup example which isn't actually made",
    "start": "303560",
    "end": "305320"
  },
  {
    "text": "up because it's a cut down version of an",
    "start": "305320",
    "end": "307199"
  },
  {
    "text": "app we wrote at accelerando earlier this",
    "start": "307199",
    "end": "309320"
  },
  {
    "text": "year we did actually we didn't wrote it",
    "start": "309320",
    "end": "312080"
  },
  {
    "text": "in Elm we wrote it in react because",
    "start": "312080",
    "end": "314000"
  },
  {
    "text": "handwavy reasons uh but the whole time",
    "start": "314000",
    "end": "316560"
  },
  {
    "text": "we were doing that I was wondering",
    "start": "316560",
    "end": "318080"
  },
  {
    "text": "whether it would have been easier or",
    "start": "318080",
    "end": "319440"
  },
  {
    "text": "harder to do it in Elm so when the",
    "start": "319440",
    "end": "321400"
  },
  {
    "text": "opportunity came to write this talk I",
    "start": "321400",
    "end": "323639"
  },
  {
    "text": "rewrote that app in Elm to see how hard",
    "start": "323639",
    "end": "325440"
  },
  {
    "text": "it",
    "start": "325440",
    "end": "326319"
  },
  {
    "text": "was and this isn't app for measuring the",
    "start": "326319",
    "end": "329080"
  },
  {
    "text": "video for sorry for managing the video",
    "start": "329080",
    "end": "331280"
  },
  {
    "text": "distribution Hardware in a sports bar if",
    "start": "331280",
    "end": "333800"
  },
  {
    "text": "you've ever been unlucky enough to visit",
    "start": "333800",
    "end": "335720"
  },
  {
    "text": "a pub in this Century you might have",
    "start": "335720",
    "end": "337199"
  },
  {
    "text": "noticed that there are TVs",
    "start": "337199",
    "end": "340000"
  },
  {
    "text": "everywhere our client created a product",
    "start": "340000",
    "end": "343560"
  },
  {
    "text": "that escalates this audiovisual",
    "start": "343560",
    "end": "345199"
  },
  {
    "text": "nightmare by tunneling HDMI over",
    "start": "345199",
    "end": "347759"
  },
  {
    "text": "multicast IP they take two kinds of",
    "start": "347759",
    "end": "350240"
  },
  {
    "text": "black boxes one takes HDMI in and",
    "start": "350240",
    "end": "353240"
  },
  {
    "text": "multicasts UDP out the other receives",
    "start": "353240",
    "end": "356280"
  },
  {
    "text": "those multicast streams and emits HDMI",
    "start": "356280",
    "end": "360000"
  },
  {
    "text": "that means instead of running HDMI",
    "start": "360000",
    "end": "362479"
  },
  {
    "text": "cables everywhere you can just run plain",
    "start": "362479",
    "end": "364520"
  },
  {
    "text": "old cat 6 install these boxes and spend",
    "start": "364520",
    "end": "367440"
  },
  {
    "text": "the money you saved on more goddamn TV",
    "start": "367440",
    "end": "371240"
  },
  {
    "text": "screens and both the transmitters and",
    "start": "371800",
    "end": "373880"
  },
  {
    "text": "the receivers can be set to a channel",
    "start": "373880",
    "end": "376160"
  },
  {
    "text": "which is pretty much all they do you put",
    "start": "376160",
    "end": "378319"
  },
  {
    "text": "these things in you give them an IP",
    "start": "378319",
    "end": "380240"
  },
  {
    "text": "address you set them to a channel and",
    "start": "380240",
    "end": "382080"
  },
  {
    "text": "you forget they",
    "start": "382080",
    "end": "383759"
  },
  {
    "text": "exist so our model in Elm that expresses",
    "start": "383759",
    "end": "386960"
  },
  {
    "text": "this is just a list of the devices that",
    "start": "386960",
    "end": "388919"
  },
  {
    "text": "we know about out and which one we're",
    "start": "388919",
    "end": "390639"
  },
  {
    "text": "currently looking at in our app each",
    "start": "390639",
    "end": "392919"
  },
  {
    "text": "device has nothing more than a name an",
    "start": "392919",
    "end": "396000"
  },
  {
    "text": "address a device kind and a channel",
    "start": "396000",
    "end": "399199"
  },
  {
    "text": "number so what are the things that can",
    "start": "399199",
    "end": "401400"
  },
  {
    "text": "change our model well at startup we scan",
    "start": "401400",
    "end": "404240"
  },
  {
    "text": "the network to discover the devices that",
    "start": "404240",
    "end": "406039"
  },
  {
    "text": "are present and hopefully we find some",
    "start": "406039",
    "end": "408599"
  },
  {
    "text": "the whole point of this application is",
    "start": "408599",
    "end": "409880"
  },
  {
    "text": "to change channels so we have a message",
    "start": "409880",
    "end": "411880"
  },
  {
    "text": "to do that and during the installation",
    "start": "411880",
    "end": "415720"
  },
  {
    "text": "process we want to give devices a",
    "start": "415720",
    "end": "418720"
  },
  {
    "text": "meaningful name name and",
    "start": "418720",
    "end": "421000"
  },
  {
    "text": "address the update function is the core",
    "start": "421000",
    "end": "423479"
  },
  {
    "text": "of your",
    "start": "423479",
    "end": "424560"
  },
  {
    "text": "application every time the update emits",
    "start": "424560",
    "end": "428280"
  },
  {
    "text": "a changed model the runtime calls the",
    "start": "428280",
    "end": "430479"
  },
  {
    "text": "view function which renders that model",
    "start": "430479",
    "end": "432840"
  },
  {
    "text": "and there's a whole raft of stuff as I",
    "start": "432840",
    "end": "434280"
  },
  {
    "text": "said that happens behind the curtain to",
    "start": "434280",
    "end": "435800"
  },
  {
    "text": "avoid wasting time and rendering",
    "start": "435800",
    "end": "437879"
  },
  {
    "text": "unchanged views but in practice you as",
    "start": "437879",
    "end": "440440"
  },
  {
    "text": "the developer barely care you just write",
    "start": "440440",
    "end": "442560"
  },
  {
    "text": "your update and your functions as if CPU",
    "start": "442560",
    "end": "445039"
  },
  {
    "text": "Cycles are unlimited and let the",
    "start": "445039",
    "end": "447680"
  },
  {
    "text": "architecture handle the gritty details",
    "start": "447680",
    "end": "450400"
  },
  {
    "text": "and that mess up there which is perhaps",
    "start": "450400",
    "end": "455160"
  },
  {
    "text": "not code I would recommend you write is",
    "start": "455160",
    "end": "457199"
  },
  {
    "text": "what happens when you take a",
    "start": "457199",
    "end": "458039"
  },
  {
    "text": "literal-minded approach to representing",
    "start": "458039",
    "end": "459840"
  },
  {
    "text": "your model in",
    "start": "459840",
    "end": "461479"
  },
  {
    "text": "HTML the functions for rendering",
    "start": "461479",
    "end": "463919"
  },
  {
    "text": "elements that are available to mirror",
    "start": "463919",
    "end": "466840"
  },
  {
    "text": "the document object model but later on",
    "start": "466840",
    "end": "469080"
  },
  {
    "text": "we'll look at some more idiot idiomatic",
    "start": "469080",
    "end": "471319"
  },
  {
    "text": "approaches to rendering that are a",
    "start": "471319",
    "end": "473599"
  },
  {
    "text": "little more high level now right about",
    "start": "473599",
    "end": "476400"
  },
  {
    "text": "now those of you who do any amount of",
    "start": "476400",
    "end": "477800"
  },
  {
    "text": "web programming will be muttering that",
    "start": "477800",
    "end": "479360"
  },
  {
    "text": "this all sounds an awful lot about like",
    "start": "479360",
    "end": "482199"
  },
  {
    "text": "react and state machine engines like",
    "start": "482199",
    "end": "484240"
  },
  {
    "text": "Redux and you'd be right but arguably",
    "start": "484240",
    "end": "486840"
  },
  {
    "text": "that's because it's the other way around",
    "start": "486840",
    "end": "489440"
  },
  {
    "text": "a number of popular JavaScript",
    "start": "489440",
    "end": "491440"
  },
  {
    "text": "Frameworks including Redux are very",
    "start": "491440",
    "end": "493840"
  },
  {
    "text": "upfront about their existence being a",
    "start": "493840",
    "end": "496039"
  },
  {
    "text": "conscious attempt to replicate the elm",
    "start": "496039",
    "end": "498039"
  },
  {
    "text": "architecture in pure",
    "start": "498039",
    "end": "500639"
  },
  {
    "text": "JavaScript and in my experience dealing",
    "start": "500639",
    "end": "504479"
  },
  {
    "text": "with programming in in tools like react",
    "start": "504479",
    "end": "507240"
  },
  {
    "text": "and Redux can become an exercise whacka",
    "start": "507240",
    "end": "509680"
  },
  {
    "text": "Mall because you you do have the same",
    "start": "509680",
    "end": "512080"
  },
  {
    "text": "concept redux's store is the same as",
    "start": "512080",
    "end": "514560"
  },
  {
    "text": "elm's model redux's actions elm's",
    "start": "514560",
    "end": "517680"
  },
  {
    "text": "commands and redux's reduces a elm's",
    "start": "517680",
    "end": "520560"
  },
  {
    "text": "update but when you're working in",
    "start": "520560",
    "end": "522560"
  },
  {
    "text": "JavaScript it's all up to you if you add",
    "start": "522560",
    "end": "525560"
  },
  {
    "text": "an action and forget to update a reducer",
    "start": "525560",
    "end": "528320"
  },
  {
    "text": "nothing warns you if you type out the",
    "start": "528320",
    "end": "530519"
  },
  {
    "text": "name of an action then well you're",
    "start": "530519",
    "end": "532560"
  },
  {
    "text": "probably spending the afternoon chasing",
    "start": "532560",
    "end": "534399"
  },
  {
    "text": "that rabbit down the rabbit hole you get",
    "start": "534399",
    "end": "536839"
  },
  {
    "text": "what I call the Star Wars effect",
    "start": "536839",
    "end": "538680"
  },
  {
    "text": "beautiful architecture and no safety",
    "start": "538680",
    "end": "541040"
  },
  {
    "text": "rails",
    "start": "541040",
    "end": "542279"
  },
  {
    "text": "anywhere",
    "start": "542279",
    "end": "544399"
  },
  {
    "text": "but hey there's bolt-on type systems for",
    "start": "544399",
    "end": "546920"
  },
  {
    "text": "JavaScript like typescript and flow",
    "start": "546920",
    "end": "549519"
  },
  {
    "text": "which can give you a partial safety net",
    "start": "549519",
    "end": "551240"
  },
  {
    "text": "and definitely if you're coding in",
    "start": "551240",
    "end": "552640"
  },
  {
    "text": "JavaScript adopt one of",
    "start": "552640",
    "end": "555480"
  },
  {
    "text": "those but even if you're going to stick",
    "start": "555480",
    "end": "557880"
  },
  {
    "text": "with working in JavaScript it's my",
    "start": "557880",
    "end": "559640"
  },
  {
    "text": "opinion that giving Elm a try will",
    "start": "559640",
    "end": "562040"
  },
  {
    "text": "improve the way you think about building",
    "start": "562040",
    "end": "564360"
  },
  {
    "text": "web applications and coding in",
    "start": "564360",
    "end": "565880"
  },
  {
    "text": "JavaScript so I do encourage you to give",
    "start": "565880",
    "end": "567640"
  },
  {
    "text": "it a try",
    "start": "567640",
    "end": "569720"
  },
  {
    "text": "so how do you go about dipping your toes",
    "start": "569720",
    "end": "572040"
  },
  {
    "text": "into Elm well if you have an existing",
    "start": "572040",
    "end": "575200"
  },
  {
    "text": "web app you can elmify it one component",
    "start": "575200",
    "end": "578160"
  },
  {
    "text": "at a time within your layout you render",
    "start": "578160",
    "end": "580920"
  },
  {
    "text": "an empty component with a particular ID",
    "start": "580920",
    "end": "583279"
  },
  {
    "text": "and then you tell your compiled Elm",
    "start": "583279",
    "end": "585120"
  },
  {
    "text": "application to render into that",
    "start": "585120",
    "end": "587760"
  },
  {
    "text": "div uh in fact it's recently become even",
    "start": "587760",
    "end": "590240"
  },
  {
    "text": "easier because somebody has written a",
    "start": "590240",
    "end": "591760"
  },
  {
    "text": "react component which encapsulates that",
    "start": "591760",
    "end": "594240"
  },
  {
    "text": "whole notion unless you do it in",
    "start": "594240",
    "end": "597000"
  },
  {
    "text": "essentially one line of code",
    "start": "597000",
    "end": "599800"
  },
  {
    "text": "but before we move on with going deeper",
    "start": "599800",
    "end": "602680"
  },
  {
    "text": "into our single page AR I want to throw",
    "start": "602680",
    "end": "604920"
  },
  {
    "text": "you a midseason Cliffhanger and change",
    "start": "604920",
    "end": "607079"
  },
  {
    "text": "Tac to talk about what's changed in the",
    "start": "607079",
    "end": "609040"
  },
  {
    "text": "latest release of",
    "start": "609040",
    "end": "610320"
  },
  {
    "text": "elm uh which happens about once a year",
    "start": "610320",
    "end": "615519"
  },
  {
    "text": "um although given that we're up to a",
    "start": "615519",
    "end": "618320"
  },
  {
    "text": "version 0.19 and it's not 19 years old",
    "start": "618320",
    "end": "621440"
  },
  {
    "text": "that's probably not very accurate but",
    "start": "621440",
    "end": "623160"
  },
  {
    "text": "it's near",
    "start": "623160",
    "end": "624440"
  },
  {
    "text": "enough but yes I said zero 0.19 now",
    "start": "624440",
    "end": "629360"
  },
  {
    "text": "really gets behind semantic versioning",
    "start": "629360",
    "end": "631200"
  },
  {
    "text": "so that zero means something it means",
    "start": "631200",
    "end": "633720"
  },
  {
    "text": "under construction the scaffolding",
    "start": "633720",
    "end": "635839"
  },
  {
    "text": "you're standing on might get removed",
    "start": "635839",
    "end": "637839"
  },
  {
    "text": "while you're still standing on it but",
    "start": "637839",
    "end": "639880"
  },
  {
    "text": "again this is a case where the language",
    "start": "639880",
    "end": "642200"
  },
  {
    "text": "and the architecture helps you out so",
    "start": "642200",
    "end": "645240"
  },
  {
    "text": "let's briefly go through the changes in",
    "start": "645240",
    "end": "647000"
  },
  {
    "text": "this release the command line had a",
    "start": "647000",
    "end": "649079"
  },
  {
    "text": "major",
    "start": "649079",
    "end": "650639"
  },
  {
    "text": "refactoring um merging all the entry",
    "start": "650639",
    "end": "653120"
  },
  {
    "text": "points like Elm Dake and Elm Das package",
    "start": "653120",
    "end": "656120"
  },
  {
    "text": "into a single command so unfortunately",
    "start": "656120",
    "end": "658880"
  },
  {
    "text": "all all your build scripts broke but on",
    "start": "658880",
    "end": "660959"
  },
  {
    "text": "the good side previously there were five",
    "start": "660959",
    "end": "663000"
  },
  {
    "text": "or 10 different modules that you had to",
    "start": "663000",
    "end": "665240"
  },
  {
    "text": "import to properly do responsive web",
    "start": "665240",
    "end": "667399"
  },
  {
    "text": "pages and there was no one anointed way",
    "start": "667399",
    "end": "670079"
  },
  {
    "text": "to structure a single page web",
    "start": "670079",
    "end": "672399"
  },
  {
    "text": "app now some of those modules were core",
    "start": "672399",
    "end": "675200"
  },
  {
    "text": "modules and some of them were third",
    "start": "675200",
    "end": "676600"
  },
  {
    "text": "party",
    "start": "676600",
    "end": "677920"
  },
  {
    "text": "modules um and now what's happened is",
    "start": "677920",
    "end": "680560"
  },
  {
    "text": "that the most useful patterns have been",
    "start": "680560",
    "end": "682079"
  },
  {
    "text": "bought into the core libraries and all",
    "start": "682079",
    "end": "684560"
  },
  {
    "text": "the essentials you need to build a",
    "start": "684560",
    "end": "686800"
  },
  {
    "text": "responsive web app a unified under a",
    "start": "686800",
    "end": "689279"
  },
  {
    "text": "single module called browser and there's",
    "start": "689279",
    "end": "691880"
  },
  {
    "text": "also been a simplification in string to",
    "start": "691880",
    "end": "693680"
  },
  {
    "text": "number conversion which reduces code",
    "start": "693680",
    "end": "696320"
  },
  {
    "text": "complexity without sacrificing too much",
    "start": "696320",
    "end": "699399"
  },
  {
    "text": "safety um and finally there's been some",
    "start": "699399",
    "end": "701600"
  },
  {
    "text": "aggressive optimization that has led to",
    "start": "701600",
    "end": "703360"
  },
  {
    "text": "faster",
    "start": "703360",
    "end": "704480"
  },
  {
    "text": "compilation and smaller web objects when",
    "start": "704480",
    "end": "707440"
  },
  {
    "text": "I was working on a on a fairly large app",
    "start": "707440",
    "end": "710680"
  },
  {
    "text": "in Elm last year compilation time from a",
    "start": "710680",
    "end": "714040"
  },
  {
    "text": "from a file save to being able to view",
    "start": "714040",
    "end": "715839"
  },
  {
    "text": "it on screen was perhaps 5 to 10 seconds",
    "start": "715839",
    "end": "718040"
  },
  {
    "text": "and it got pretty inter liable um with",
    "start": "718040",
    "end": "720600"
  },
  {
    "text": "the changes in lm19 it's it's so fast",
    "start": "720600",
    "end": "722680"
  },
  {
    "text": "you barely notice um and and sizewise we",
    "start": "722680",
    "end": "726519"
  },
  {
    "text": "find that a that a compiled El can",
    "start": "726519",
    "end": "730279"
  },
  {
    "text": "potentially be a quarter of the size of",
    "start": "730279",
    "end": "732800"
  },
  {
    "text": "of of an equivalent react app and in",
    "start": "732800",
    "end": "736399"
  },
  {
    "text": "fact the outputs are so small that we",
    "start": "736399",
    "end": "738079"
  },
  {
    "text": "have successfully deployed Elm",
    "start": "738079",
    "end": "740199"
  },
  {
    "text": "applications into iot devices the size",
    "start": "740199",
    "end": "743160"
  },
  {
    "text": "of a postage stamp there's a water meter",
    "start": "743160",
    "end": "744920"
  },
  {
    "text": "out there that runs its configuration UI",
    "start": "744920",
    "end": "747880"
  },
  {
    "text": "inl",
    "start": "747880",
    "end": "749760"
  },
  {
    "text": "so you put all this effort into writing",
    "start": "749760",
    "end": "751399"
  },
  {
    "text": "an Elm up and then the next release of",
    "start": "751399",
    "end": "753320"
  },
  {
    "text": "the language totally breaks it well",
    "start": "753320",
    "end": "755839"
  },
  {
    "text": "that's kind of true unfortunately from a",
    "start": "755839",
    "end": "757440"
  },
  {
    "text": "certain point of view but again this is",
    "start": "757440",
    "end": "759560"
  },
  {
    "text": "where the language comes to our rescue",
    "start": "759560",
    "end": "761839"
  },
  {
    "text": "the vigorous suppression of side effects",
    "start": "761839",
    "end": "764079"
  },
  {
    "text": "means that automated refactoring becomes",
    "start": "764079",
    "end": "767320"
  },
  {
    "text": "quite a tractable problem so there's an",
    "start": "767320",
    "end": "769040"
  },
  {
    "text": "automated migration tool that's part of",
    "start": "769040",
    "end": "771040"
  },
  {
    "text": "the latest release which can reite your",
    "start": "771040",
    "end": "773279"
  },
  {
    "text": "program to resolve most of the breaking",
    "start": "773279",
    "end": "775320"
  },
  {
    "text": "changes in that release and we'll come",
    "start": "775320",
    "end": "777480"
  },
  {
    "text": "back to that a bit later but now now",
    "start": "777480",
    "end": "779199"
  },
  {
    "text": "let's come back to our single page",
    "start": "779199",
    "end": "782160"
  },
  {
    "text": "app uh but I suppose really I should",
    "start": "782160",
    "end": "784399"
  },
  {
    "text": "Define my terms what do I mean by a",
    "start": "784399",
    "end": "786519"
  },
  {
    "text": "single page app traditionally every time",
    "start": "786519",
    "end": "789880"
  },
  {
    "text": "you clicked on anything in a web page",
    "start": "789880",
    "end": "792440"
  },
  {
    "text": "you got a whole new page load then ax",
    "start": "792440",
    "end": "795079"
  },
  {
    "text": "came along popularized by by Gmail and",
    "start": "795079",
    "end": "798399"
  },
  {
    "text": "we could update parts of a page without",
    "start": "798399",
    "end": "800360"
  },
  {
    "text": "having to reload the whole thing but",
    "start": "800360",
    "end": "802519"
  },
  {
    "text": "Ajax broke the back",
    "start": "802519",
    "end": "805360"
  },
  {
    "text": "button",
    "start": "805360",
    "end": "807760"
  },
  {
    "text": "Microsoft not by Google Gmail thank you",
    "start": "807760",
    "end": "811040"
  },
  {
    "text": "for that entertaining",
    "start": "811040",
    "end": "813959"
  },
  {
    "text": "correction if you modify so much state",
    "start": "820760",
    "end": "823199"
  },
  {
    "text": "that the user thinks of the pages an",
    "start": "823199",
    "end": "824920"
  },
  {
    "text": "entirely new page then they have a right",
    "start": "824920",
    "end": "826880"
  },
  {
    "text": "to expect that the back and forward",
    "start": "826880",
    "end": "829199"
  },
  {
    "text": "buttons will do what they",
    "start": "829199",
    "end": "832560"
  },
  {
    "text": "expect and we also want to retain the",
    "start": "832560",
    "end": "834880"
  },
  {
    "text": "ability to do deep linking to represent",
    "start": "834880",
    "end": "838360"
  },
  {
    "text": "some internal state of the application",
    "start": "838360",
    "end": "840120"
  },
  {
    "text": "as a URL that we can request from the",
    "start": "840120",
    "end": "842399"
  },
  {
    "text": "outside as an entry point so to enable",
    "start": "842399",
    "end": "845240"
  },
  {
    "text": "those goals JavaScript gain the ability",
    "start": "845240",
    "end": "847880"
  },
  {
    "text": "to manipulate the single page URL and",
    "start": "847880",
    "end": "850759"
  },
  {
    "text": "the browser history",
    "start": "850759",
    "end": "853079"
  },
  {
    "text": "to make a single page look like",
    "start": "853079",
    "end": "856560"
  },
  {
    "text": "navigating amongst distinct Pages this",
    "start": "856560",
    "end": "859240"
  },
  {
    "text": "is what we call a single page app it may",
    "start": "859240",
    "end": "861959"
  },
  {
    "text": "look like a bunch of distinct pages with",
    "start": "861959",
    "end": "863839"
  },
  {
    "text": "distinct URLs but it's just one page",
    "start": "863839",
    "end": "865959"
  },
  {
    "text": "load and then a bunch of faster API",
    "start": "865959",
    "end": "868160"
  },
  {
    "text": "calls and that has two key benefits",
    "start": "868160",
    "end": "870759"
  },
  {
    "text": "firstly faster secondly we have the",
    "start": "870759",
    "end": "874279"
  },
  {
    "text": "possibility to create web apps that can",
    "start": "874279",
    "end": "876759"
  },
  {
    "text": "actually work",
    "start": "876759",
    "end": "877880"
  },
  {
    "text": "offline so how do we create a single",
    "start": "877880",
    "end": "879880"
  },
  {
    "text": "page in Elm well just like anything",
    "start": "879880",
    "end": "882360"
  },
  {
    "text": "else you Google how do I create a single",
    "start": "882360",
    "end": "884079"
  },
  {
    "text": "page in Helm and just like anything",
    "start": "884079",
    "end": "886160"
  },
  {
    "text": "else you get a bunch of answers that are",
    "start": "886160",
    "end": "887680"
  },
  {
    "text": "wrong and out",
    "start": "887680",
    "end": "888759"
  },
  {
    "text": "ofd so in the JavaScript World getting",
    "start": "888759",
    "end": "892000"
  },
  {
    "text": "started can be so complicated that there",
    "start": "892000",
    "end": "894920"
  },
  {
    "text": "are a number of boilerplate projects",
    "start": "894920",
    "end": "896720"
  },
  {
    "text": "that give you all the framework of a",
    "start": "896720",
    "end": "898440"
  },
  {
    "text": "comp complete project into which you can",
    "start": "898440",
    "end": "899959"
  },
  {
    "text": "drop your code and there's plenty of",
    "start": "899959",
    "end": "901759"
  },
  {
    "text": "those for Elm as well but in my",
    "start": "901759",
    "end": "904240"
  },
  {
    "text": "experience that's not the best approach",
    "start": "904240",
    "end": "907240"
  },
  {
    "text": "because building a complex structure too",
    "start": "907240",
    "end": "909720"
  },
  {
    "text": "soon slows you down and makes it harder",
    "start": "909720",
    "end": "912600"
  },
  {
    "text": "to learn the language so I prefer to",
    "start": "912600",
    "end": "914639"
  },
  {
    "text": "start out with a single file where I can",
    "start": "914639",
    "end": "916279"
  },
  {
    "text": "see my whole app literally on one",
    "start": "916279",
    "end": "919720"
  },
  {
    "text": "page and so I found one tool that I",
    "start": "919720",
    "end": "922079"
  },
  {
    "text": "think splits the difference wonderfully",
    "start": "922079",
    "end": "923720"
  },
  {
    "text": "if you work in react you might have come",
    "start": "923720",
    "end": "925360"
  },
  {
    "text": "across a a script called create react",
    "start": "925360",
    "end": "928000"
  },
  {
    "text": "app",
    "start": "928000",
    "end": "929199"
  },
  {
    "text": "um because it's down near impossible to",
    "start": "929199",
    "end": "931120"
  },
  {
    "text": "get started in a react Project without",
    "start": "931120",
    "end": "934160"
  },
  {
    "text": "something to Marshall up all those",
    "start": "934160",
    "end": "936519"
  },
  {
    "text": "dependencies for you well starting an",
    "start": "936519",
    "end": "939279"
  },
  {
    "text": "Elm project from an empty file is quite",
    "start": "939279",
    "end": "941720"
  },
  {
    "text": "easy but some folks out there have taken",
    "start": "941720",
    "end": "944120"
  },
  {
    "text": "inspiration from that create react app",
    "start": "944120",
    "end": "947040"
  },
  {
    "text": "and written a very useful tool called",
    "start": "947040",
    "end": "948639"
  },
  {
    "text": "funnily enough create Elm app and what",
    "start": "948639",
    "end": "951480"
  },
  {
    "text": "this does is takes care of setting up",
    "start": "951480",
    "end": "953279"
  },
  {
    "text": "all the peripheral resources you'll need",
    "start": "953279",
    "end": "955000"
  },
  {
    "text": "for development and application",
    "start": "955000",
    "end": "956920"
  },
  {
    "text": "packaging and things like hot reloading",
    "start": "956920",
    "end": "959440"
  },
  {
    "text": "but it still leaves you with a single",
    "start": "959440",
    "end": "961000"
  },
  {
    "text": "small file that contains one page of",
    "start": "961000",
    "end": "963160"
  },
  {
    "text": "code to be the skeleton of of an app and",
    "start": "963160",
    "end": "966920"
  },
  {
    "text": "the other benefit that it has is that",
    "start": "966920",
    "end": "968440"
  },
  {
    "text": "any compiler errors you get rather than",
    "start": "968440",
    "end": "970319"
  },
  {
    "text": "going to a terminal window somewhere",
    "start": "970319",
    "end": "971920"
  },
  {
    "text": "come up in the browser window so that's",
    "start": "971920",
    "end": "973800"
  },
  {
    "text": "one less screen you have you can work",
    "start": "973800",
    "end": "976680"
  },
  {
    "text": "your workflow becomes editor here",
    "start": "976680",
    "end": "978480"
  },
  {
    "text": "browser there and every time you save",
    "start": "978480",
    "end": "980600"
  },
  {
    "text": "your file your page reloads or crashes",
    "start": "980600",
    "end": "983800"
  },
  {
    "text": "but if it does break the compiler",
    "start": "983800",
    "end": "986440"
  },
  {
    "text": "messages are really helpful and this is",
    "start": "986440",
    "end": "988120"
  },
  {
    "text": "something that uh man well spoke about",
    "start": "988120",
    "end": "991040"
  },
  {
    "text": "yesterday in his Workshop that Elm goes",
    "start": "991040",
    "end": "993759"
  },
  {
    "text": "a long way to make its error messages",
    "start": "993759",
    "end": "996560"
  },
  {
    "text": "helpful",
    "start": "996560",
    "end": "999560"
  },
  {
    "text": "and aimed to encourage you to learn the",
    "start": "1000399",
    "end": "1004959"
  },
  {
    "text": "language and and and find your way about",
    "start": "1004959",
    "end": "1008240"
  },
  {
    "text": "so if",
    "start": "1008240",
    "end": "1010040"
  },
  {
    "text": "you forget to import a module or a",
    "start": "1010040",
    "end": "1012440"
  },
  {
    "text": "symbol the compiler will suggest perhaps",
    "start": "1012440",
    "end": "1014120"
  },
  {
    "text": "you meant this module if you misspell a",
    "start": "1014120",
    "end": "1018079"
  },
  {
    "text": "function name it'll do the same if your",
    "start": "1018079",
    "end": "1020240"
  },
  {
    "text": "argument type or count is not right for",
    "start": "1020240",
    "end": "1022240"
  },
  {
    "text": "a",
    "start": "1022240",
    "end": "1023079"
  },
  {
    "text": "function um it will explain the",
    "start": "1023079",
    "end": "1026038"
  },
  {
    "text": "situation and because we're making heavy",
    "start": "1026039",
    "end": "1028199"
  },
  {
    "text": "use of partial application on functions",
    "start": "1028199",
    "end": "1030798"
  },
  {
    "text": "you'll really come to appreciate the",
    "start": "1030799",
    "end": "1032160"
  },
  {
    "text": "error message that you see a fair lot",
    "start": "1032160",
    "end": "1033839"
  },
  {
    "text": "Fair bit which says whoops looks like",
    "start": "1033839",
    "end": "1035720"
  },
  {
    "text": "this function was looking for one more",
    "start": "1035720",
    "end": "1037160"
  },
  {
    "text": "argument of Type",
    "start": "1037160",
    "end": "1039558"
  },
  {
    "text": "X so let's look at how we manage browser",
    "start": "1039559",
    "end": "1042240"
  },
  {
    "text": "history in a single page rpn Elm when we",
    "start": "1042240",
    "end": "1045360"
  },
  {
    "text": "create an Elm program we tell it what",
    "start": "1045360",
    "end": "1047438"
  },
  {
    "text": "kind of web element it's going to be",
    "start": "1047439",
    "end": "1049280"
  },
  {
    "text": "whether we're embedding a single into a",
    "start": "1049280",
    "end": "1052200"
  },
  {
    "text": "single div in an existing page whether",
    "start": "1052200",
    "end": "1054520"
  },
  {
    "text": "we're rendering an entire page as a",
    "start": "1054520",
    "end": "1056640"
  },
  {
    "text": "standard alone page or whether we're",
    "start": "1056640",
    "end": "1058280"
  },
  {
    "text": "building a whole single page app that",
    "start": "1058280",
    "end": "1061080"
  },
  {
    "text": "represents multiple Pages there are",
    "start": "1061080",
    "end": "1063039"
  },
  {
    "text": "different entry points to the elm",
    "start": "1063039",
    "end": "1064480"
  },
  {
    "text": "runtime for each of those cases and the",
    "start": "1064480",
    "end": "1067320"
  },
  {
    "text": "extra wrinkle that that application",
    "start": "1067320",
    "end": "1068799"
  },
  {
    "text": "entry point gives us is two messages",
    "start": "1068799",
    "end": "1071120"
  },
  {
    "text": "that the runtime receives whenever the",
    "start": "1071120",
    "end": "1073600"
  },
  {
    "text": "user initiates a URL change and whenever",
    "start": "1073600",
    "end": "1076039"
  },
  {
    "text": "the browser completes doing a URL change",
    "start": "1076039",
    "end": "1078760"
  },
  {
    "text": "and that gives us the ability firstly to",
    "start": "1078760",
    "end": "1081400"
  },
  {
    "text": "rewrite the history and make the back",
    "start": "1081400",
    "end": "1083799"
  },
  {
    "text": "button work and secondly to extract",
    "start": "1083799",
    "end": "1086120"
  },
  {
    "text": "state from the URL in either in order to",
    "start": "1086120",
    "end": "1088200"
  },
  {
    "text": "handle deep linking and to render",
    "start": "1088200",
    "end": "1090600"
  },
  {
    "text": "different views for different",
    "start": "1090600",
    "end": "1092640"
  },
  {
    "text": "URLs and it's been a common patent",
    "start": "1092640",
    "end": "1094880"
  },
  {
    "text": "previously in Elm applications to",
    "start": "1094880",
    "end": "1097039"
  },
  {
    "text": "abstract URLs as what we call routes and",
    "start": "1097039",
    "end": "1100799"
  },
  {
    "text": "this is now an officially anointed",
    "start": "1100799",
    "end": "1102360"
  },
  {
    "text": "pattern as part of the core libraries",
    "start": "1102360",
    "end": "1105280"
  },
  {
    "text": "and in this case we Define the possible",
    "start": "1105280",
    "end": "1107880"
  },
  {
    "text": "kinds of page that we want to display",
    "start": "1107880",
    "end": "1111200"
  },
  {
    "text": "and then we map the input URL onto one",
    "start": "1111200",
    "end": "1113080"
  },
  {
    "text": "of those route types extracting any",
    "start": "1113080",
    "end": "1115280"
  },
  {
    "text": "necessary parameters from the URL such",
    "start": "1115280",
    "end": "1117640"
  },
  {
    "text": "as the query string or the URL fragments",
    "start": "1117640",
    "end": "1120200"
  },
  {
    "text": "or path parameters and we throw the URL",
    "start": "1120200",
    "end": "1122600"
  },
  {
    "text": "away and we work with those strongly",
    "start": "1122600",
    "end": "1124159"
  },
  {
    "text": "typed route",
    "start": "1124159",
    "end": "1126360"
  },
  {
    "text": "objects and now when we call our view",
    "start": "1126360",
    "end": "1129080"
  },
  {
    "text": "function we can make a top level",
    "start": "1129080",
    "end": "1130640"
  },
  {
    "text": "decision on what kind of page we want to",
    "start": "1130640",
    "end": "1132840"
  },
  {
    "text": "show the user and then dive off into",
    "start": "1132840",
    "end": "1135200"
  },
  {
    "text": "different code for each page and you can",
    "start": "1135200",
    "end": "1136960"
  },
  {
    "text": "go as far as separating each page into",
    "start": "1136960",
    "end": "1139120"
  },
  {
    "text": "its own model with its own update and",
    "start": "1139120",
    "end": "1140960"
  },
  {
    "text": "view function but once again this is a",
    "start": "1140960",
    "end": "1142600"
  },
  {
    "text": "pattern that you would reflexively use",
    "start": "1142600",
    "end": "1145840"
  },
  {
    "text": "out of the box with something like react",
    "start": "1145840",
    "end": "1149039"
  },
  {
    "text": "but in Elm it's something uh that you",
    "start": "1149039",
    "end": "1151679"
  },
  {
    "text": "can save until later and you can fly by",
    "start": "1151679",
    "end": "1153440"
  },
  {
    "text": "the seat of your pants until you think",
    "start": "1153440",
    "end": "1155000"
  },
  {
    "text": "the necessary refactoring is is",
    "start": "1155000",
    "end": "1157520"
  },
  {
    "text": "worthwhile and in practice it almost",
    "start": "1157520",
    "end": "1159840"
  },
  {
    "text": "never",
    "start": "1159840",
    "end": "1160799"
  },
  {
    "text": "is um although we are getting there with",
    "start": "1160799",
    "end": "1163200"
  },
  {
    "text": "one application that is uh developing",
    "start": "1163200",
    "end": "1165039"
  },
  {
    "text": "into a bit of a crawling",
    "start": "1165039",
    "end": "1166880"
  },
  {
    "text": "horror another welcome feature in the",
    "start": "1166880",
    "end": "1169120"
  },
  {
    "text": "latest Elm is file uploads previously",
    "start": "1169120",
    "end": "1171440"
  },
  {
    "text": "they weren't too difficult but they were",
    "start": "1171440",
    "end": "1173159"
  },
  {
    "text": "very obscure and you had to work between",
    "start": "1173159",
    "end": "1176320"
  },
  {
    "text": "JavaScript code and Elm code and P bits",
    "start": "1176320",
    "end": "1178960"
  },
  {
    "text": "of Bas 64 encoded upload around to make",
    "start": "1178960",
    "end": "1181600"
  },
  {
    "text": "a file upload happen now an Elm",
    "start": "1181600",
    "end": "1184679"
  },
  {
    "text": "processing a file upload is literally a",
    "start": "1184679",
    "end": "1186520"
  },
  {
    "text": "on line operation and that also works",
    "start": "1186520",
    "end": "1188480"
  },
  {
    "text": "with drag and drop and progress",
    "start": "1188480",
    "end": "1190159"
  },
  {
    "text": "notifications and image previews so uh",
    "start": "1190159",
    "end": "1193320"
  },
  {
    "text": "that's a feature that I'm really keyed",
    "start": "1193320",
    "end": "1194919"
  },
  {
    "text": "up about except that now we have to",
    "start": "1194919",
    "end": "1197679"
  },
  {
    "text": "rewrite a bunch of of code that we bled",
    "start": "1197679",
    "end": "1199400"
  },
  {
    "text": "all over a a couple of years ago to get",
    "start": "1199400",
    "end": "1201440"
  },
  {
    "text": "the behavior we",
    "start": "1201440",
    "end": "1202840"
  },
  {
    "text": "wanted um and there's also been a major",
    "start": "1202840",
    "end": "1205200"
  },
  {
    "text": "simplification of HTTP requests last",
    "start": "1205200",
    "end": "1207960"
  },
  {
    "text": "year doing an API call looked like that",
    "start": "1207960",
    "end": "1210679"
  },
  {
    "text": "we had to create a HTTP request set a",
    "start": "1210679",
    "end": "1213039"
  },
  {
    "text": "bunch of parameters on it to find a",
    "start": "1213039",
    "end": "1214880"
  },
  {
    "text": "Handler to to process its response and",
    "start": "1214880",
    "end": "1217919"
  },
  {
    "text": "then emit a command to send that request",
    "start": "1217919",
    "end": "1219760"
  },
  {
    "text": "and then later on receive the processed",
    "start": "1219760",
    "end": "1221840"
  },
  {
    "text": "response in the latest Elm uh it all",
    "start": "1221840",
    "end": "1225120"
  },
  {
    "text": "happens in one step you make the return",
    "start": "1225120",
    "end": "1227080"
  },
  {
    "text": "message becomes part of response Handler",
    "start": "1227080",
    "end": "1229480"
  },
  {
    "text": "you create and send a HTTP request in a",
    "start": "1229480",
    "end": "1231640"
  },
  {
    "text": "single function call and that makes",
    "start": "1231640",
    "end": "1233360"
  },
  {
    "text": "those bits of code small enough that you",
    "start": "1233360",
    "end": "1235039"
  },
  {
    "text": "can inline them into your update",
    "start": "1235039",
    "end": "1236480"
  },
  {
    "text": "function and end up with a much more",
    "start": "1236480",
    "end": "1239000"
  },
  {
    "text": "readable Pro program",
    "start": "1239000",
    "end": "1241799"
  },
  {
    "text": "flow now there is one area where Elm",
    "start": "1241799",
    "end": "1245679"
  },
  {
    "text": "gets frustrating and that's component",
    "start": "1245679",
    "end": "1247600"
  },
  {
    "text": "Frameworks there's not a huge amount of",
    "start": "1247600",
    "end": "1249840"
  },
  {
    "text": "choice and in fact there's a faction of",
    "start": "1249840",
    "end": "1252080"
  },
  {
    "text": "the elm Community which thinks that the",
    "start": "1252080",
    "end": "1253720"
  },
  {
    "text": "very concept of a web component",
    "start": "1253720",
    "end": "1255960"
  },
  {
    "text": "framework is not even the right way to",
    "start": "1255960",
    "end": "1258200"
  },
  {
    "text": "do functional web development your two",
    "start": "1258200",
    "end": "1260840"
  },
  {
    "text": "main choices if you do want",
    "start": "1260840",
    "end": "1262200"
  },
  {
    "text": "off-the-shelf web components are",
    "start": "1262200",
    "end": "1264440"
  },
  {
    "text": "currently bootstrap and material design",
    "start": "1264440",
    "end": "1268200"
  },
  {
    "text": "and we've been working with material",
    "start": "1268200",
    "end": "1269520"
  },
  {
    "text": "design and there was a lovely set of",
    "start": "1269520",
    "end": "1271480"
  },
  {
    "text": "modules that implemented Google's",
    "start": "1271480",
    "end": "1273080"
  },
  {
    "text": "material design light framework and we",
    "start": "1273080",
    "end": "1275600"
  },
  {
    "text": "wrote a lot of apps with those and then",
    "start": "1275600",
    "end": "1277720"
  },
  {
    "text": "Google pulled the plug on the whole",
    "start": "1277720",
    "end": "1278960"
  },
  {
    "text": "project and the authors of that El",
    "start": "1278960",
    "end": "1280919"
  },
  {
    "text": "module decided that well if Google",
    "start": "1280919",
    "end": "1282440"
  },
  {
    "text": "wasn't going to support it they weren't",
    "start": "1282440",
    "end": "1284320"
  },
  {
    "text": "either and then elm1 19 came out and",
    "start": "1284320",
    "end": "1287360"
  },
  {
    "text": "broke that modle and then I had no web",
    "start": "1287360",
    "end": "1289640"
  },
  {
    "text": "framework but now there is a an Elm",
    "start": "1289640",
    "end": "1293279"
  },
  {
    "text": "Library called Elm MDC which implements",
    "start": "1293279",
    "end": "1295559"
  },
  {
    "text": "Google's new framework but unfortunately",
    "start": "1295559",
    "end": "1298279"
  },
  {
    "text": "there's some degree of uncertainty",
    "start": "1298279",
    "end": "1301159"
  },
  {
    "text": "in in the material design Community as",
    "start": "1301159",
    "end": "1303640"
  },
  {
    "text": "to whether Google is going to torpedo",
    "start": "1303640",
    "end": "1305240"
  },
  {
    "text": "that one in favor of yet another",
    "start": "1305240",
    "end": "1307120"
  },
  {
    "text": "framework so development on on that",
    "start": "1307120",
    "end": "1309919"
  },
  {
    "text": "project is not going as fast as it could",
    "start": "1309919",
    "end": "1313000"
  },
  {
    "text": "it's in beta it works quite well I've",
    "start": "1313000",
    "end": "1315600"
  },
  {
    "text": "not had any problems with it but it",
    "start": "1315600",
    "end": "1318159"
  },
  {
    "text": "hasn't been uploaded to the elm package",
    "start": "1318159",
    "end": "1319799"
  },
  {
    "text": "Library which means if you want to use",
    "start": "1319799",
    "end": "1321400"
  },
  {
    "text": "it you have to install it",
    "start": "1321400",
    "end": "1323279"
  },
  {
    "text": "manually fortunately pulling in a third",
    "start": "1323279",
    "end": "1325799"
  },
  {
    "text": "party module or maintaining your own set",
    "start": "1325799",
    "end": "1329760"
  },
  {
    "text": "of modules is pretty simple in Elm you",
    "start": "1329760",
    "end": "1332760"
  },
  {
    "text": "just need to edit your config file to",
    "start": "1332760",
    "end": "1335440"
  },
  {
    "text": "add your Source directory to the module",
    "start": "1335440",
    "end": "1336880"
  },
  {
    "text": "Source search path um and that mess up",
    "start": "1336880",
    "end": "1340159"
  },
  {
    "text": "there is is the steps to bring in Elm",
    "start": "1340159",
    "end": "1343679"
  },
  {
    "text": "DC uh to a project that had been created",
    "start": "1343679",
    "end": "1346840"
  },
  {
    "text": "by create Elm app",
    "start": "1346840",
    "end": "1348480"
  },
  {
    "text": "so first we installed some dependencies",
    "start": "1348480",
    "end": "1351320"
  },
  {
    "text": "which the project the package manager",
    "start": "1351320",
    "end": "1353880"
  },
  {
    "text": "would have done for us if the package",
    "start": "1353880",
    "end": "1355520"
  },
  {
    "text": "was in the repo then we pull down the uh",
    "start": "1355520",
    "end": "1359279"
  },
  {
    "text": "the code from GitHub which the package",
    "start": "1359279",
    "end": "1361000"
  },
  {
    "text": "manager would have done for us if it was",
    "start": "1361000",
    "end": "1362600"
  },
  {
    "text": "in the repo then we paste in the",
    "start": "1362600",
    "end": "1365760"
  },
  {
    "text": "standard Google sty sheets in JavaScript",
    "start": "1365760",
    "end": "1369279"
  },
  {
    "text": "and the stylesheet from that Library",
    "start": "1369279",
    "end": "1371279"
  },
  {
    "text": "which we would have had to do anyway if",
    "start": "1371279",
    "end": "1372840"
  },
  {
    "text": "it had been in the library um and then",
    "start": "1372840",
    "end": "1375240"
  },
  {
    "text": "we're off and if you've used material",
    "start": "1375240",
    "end": "1377760"
  },
  {
    "text": "your I components in react you'll be",
    "start": "1377760",
    "end": "1379520"
  },
  {
    "text": "very much at home with these they work",
    "start": "1379520",
    "end": "1380960"
  },
  {
    "text": "pretty much the same way so what does",
    "start": "1380960",
    "end": "1383520"
  },
  {
    "text": "our app look like after we materialize",
    "start": "1383520",
    "end": "1386039"
  },
  {
    "text": "it well the material design component",
    "start": "1386039",
    "end": "1388840"
  },
  {
    "text": "set has its own model under the hood and",
    "start": "1388840",
    "end": "1391760"
  },
  {
    "text": "generates and handles its own messages",
    "start": "1391760",
    "end": "1394120"
  },
  {
    "text": "but fortunately that's almost completely",
    "start": "1394120",
    "end": "1396720"
  },
  {
    "text": "opaque to us all we have to do is add",
    "start": "1396720",
    "end": "1399080"
  },
  {
    "text": "one component to our model one component",
    "start": "1399080",
    "end": "1401279"
  },
  {
    "text": "to our message type one in our event",
    "start": "1401279",
    "end": "1403679"
  },
  {
    "text": "subscription one line in our update",
    "start": "1403679",
    "end": "1405480"
  },
  {
    "text": "function and we're plugged in",
    "start": "1405480",
    "end": "1408720"
  },
  {
    "text": "and when we adopt those mysterial design",
    "start": "1408720",
    "end": "1411520"
  },
  {
    "text": "components our view rendering becomes",
    "start": "1411520",
    "end": "1413840"
  },
  {
    "text": "much more abstract because we're",
    "start": "1413840",
    "end": "1415039"
  },
  {
    "text": "thinking of the component",
    "start": "1415039",
    "end": "1417159"
  },
  {
    "text": "level and just like in react there are",
    "start": "1417159",
    "end": "1420159"
  },
  {
    "text": "two broad types of components there are",
    "start": "1420159",
    "end": "1421880"
  },
  {
    "text": "the complex ones that accept or emit",
    "start": "1421880",
    "end": "1424880"
  },
  {
    "text": "messages and the simple ones which don't",
    "start": "1424880",
    "end": "1427279"
  },
  {
    "text": "and the complex ones have their own view",
    "start": "1427279",
    "end": "1428919"
  },
  {
    "text": "function which is a little bit weird um",
    "start": "1428919",
    "end": "1431440"
  },
  {
    "text": "but you get used to uh and the simple",
    "start": "1431440",
    "end": "1434159"
  },
  {
    "text": "ones work just the same as any of the",
    "start": "1434159",
    "end": "1436080"
  },
  {
    "text": "other HTML components but again don't do",
    "start": "1436080",
    "end": "1438720"
  },
  {
    "text": "what I did up there I def factored that",
    "start": "1438720",
    "end": "1440960"
  },
  {
    "text": "code in order to be able to give you",
    "start": "1440960",
    "end": "1443520"
  },
  {
    "text": "enough context on one slide to get a",
    "start": "1443520",
    "end": "1445240"
  },
  {
    "text": "feel for the syntax what I would really",
    "start": "1445240",
    "end": "1447760"
  },
  {
    "text": "do is write functions that mirror The",
    "start": "1447760",
    "end": "1450440"
  },
  {
    "text": "Logical arrangement of my",
    "start": "1450440",
    "end": "1453200"
  },
  {
    "text": "pages this allows for a language that",
    "start": "1453200",
    "end": "1455960"
  },
  {
    "text": "isn't actually objectoriented a",
    "start": "1455960",
    "end": "1458080"
  },
  {
    "text": "surprising degree of reuse we have an",
    "start": "1458080",
    "end": "1460559"
  },
  {
    "text": "inventory application for emergency",
    "start": "1460559",
    "end": "1462320"
  },
  {
    "text": "services where the rendering of a",
    "start": "1462320",
    "end": "1463840"
  },
  {
    "text": "vehicle manifest for a shift Handover",
    "start": "1463840",
    "end": "1466399"
  },
  {
    "text": "checklist and the rendering of the",
    "start": "1466399",
    "end": "1468559"
  },
  {
    "text": "complete inventory system for the",
    "start": "1468559",
    "end": "1470320"
  },
  {
    "text": "administration system is actually the",
    "start": "1470320",
    "end": "1472600"
  },
  {
    "text": "same function getting reused in",
    "start": "1472600",
    "end": "1474039"
  },
  {
    "text": "different contexts so if you structure",
    "start": "1474039",
    "end": "1477320"
  },
  {
    "text": "your code right you still get quite",
    "start": "1477320",
    "end": "1480640"
  },
  {
    "text": "flexible",
    "start": "1480640",
    "end": "1482600"
  },
  {
    "text": "reuse so let's say you've gone the rout",
    "start": "1482600",
    "end": "1485399"
  },
  {
    "text": "of embedding a component an Elm",
    "start": "1485399",
    "end": "1487279"
  },
  {
    "text": "component in otherwise JavaScript",
    "start": "1487279",
    "end": "1489159"
  },
  {
    "text": "project or you've done the reverse",
    "start": "1489159",
    "end": "1490840"
  },
  {
    "text": "you've taken an Elm application but you",
    "start": "1490840",
    "end": "1492960"
  },
  {
    "text": "need to use that one JavaScript",
    "start": "1492960",
    "end": "1494760"
  },
  {
    "text": "component that hasn't been ported to Elm",
    "start": "1494760",
    "end": "1497320"
  },
  {
    "text": "then",
    "start": "1497320",
    "end": "1499759"
  },
  {
    "text": "um and you'll probably end up doing that",
    "start": "1500080",
    "end": "1502200"
  },
  {
    "text": "most likely if you're using a mapping",
    "start": "1502200",
    "end": "1503919"
  },
  {
    "text": "engine like say leaflet how do the two",
    "start": "1503919",
    "end": "1506559"
  },
  {
    "text": "halves of your split brain",
    "start": "1506559",
    "end": "1509279"
  },
  {
    "text": "communicate elm's answer to that is",
    "start": "1509279",
    "end": "1511320"
  },
  {
    "text": "called ports and a port is a typed",
    "start": "1511320",
    "end": "1515120"
  },
  {
    "text": "unidirectional Channel between the world",
    "start": "1515120",
    "end": "1517720"
  },
  {
    "text": "of elm and the world of world of",
    "start": "1517720",
    "end": "1519600"
  },
  {
    "text": "JavaScript and you can be lazy and just",
    "start": "1519600",
    "end": "1521880"
  },
  {
    "text": "pass a chunk of uh Json across as a",
    "start": "1521880",
    "end": "1525039"
  },
  {
    "text": "string uh but you really are better off",
    "start": "1525039",
    "end": "1528240"
  },
  {
    "text": "applying some more detailed typing to",
    "start": "1528240",
    "end": "1530760"
  },
  {
    "text": "those ports so that you sacrifice as",
    "start": "1530760",
    "end": "1532720"
  },
  {
    "text": "little safety as possible and one place",
    "start": "1532720",
    "end": "1535039"
  },
  {
    "text": "where I find myself passing information",
    "start": "1535039",
    "end": "1537320"
  },
  {
    "text": "down the rabbit hole from JavaScript to",
    "start": "1537320",
    "end": "1539039"
  },
  {
    "text": "Elm is using authentication libraries",
    "start": "1539039",
    "end": "1541640"
  },
  {
    "text": "when we use Amazon Cognito for user",
    "start": "1541640",
    "end": "1543480"
  },
  {
    "text": "management it looks like this in our",
    "start": "1543480",
    "end": "1545520"
  },
  {
    "text": "JavaScript code we set up our Cognito",
    "start": "1545520",
    "end": "1548080"
  },
  {
    "text": "client and we register a",
    "start": "1548080",
    "end": "1549760"
  },
  {
    "text": "Handler um that we receive the result of",
    "start": "1549760",
    "end": "1552360"
  },
  {
    "text": "a login and when that happens we grab",
    "start": "1552360",
    "end": "1554640"
  },
  {
    "text": "the token that the elm code is going to",
    "start": "1554640",
    "end": "1557240"
  },
  {
    "text": "need to call call our API we pass that",
    "start": "1557240",
    "end": "1559520"
  },
  {
    "text": "down to Elm through a port where Elm can",
    "start": "1559520",
    "end": "1561720"
  },
  {
    "text": "stash it away in the",
    "start": "1561720",
    "end": "1563440"
  },
  {
    "text": "model and as an example of going the",
    "start": "1563440",
    "end": "1565720"
  },
  {
    "text": "other way let's go back to our our video",
    "start": "1565720",
    "end": "1568960"
  },
  {
    "text": "distribution application in a facility",
    "start": "1568960",
    "end": "1571480"
  },
  {
    "text": "like this hotel complex here where there",
    "start": "1571480",
    "end": "1573440"
  },
  {
    "text": "are approximately 52 quadrillion",
    "start": "1573440",
    "end": "1575919"
  },
  {
    "text": "corridors and rooms we want to be able",
    "start": "1575919",
    "end": "1578320"
  },
  {
    "text": "to display a scrolling map of where",
    "start": "1578320",
    "end": "1580000"
  },
  {
    "text": "every screen is so that we can find the",
    "start": "1580000",
    "end": "1582000"
  },
  {
    "text": "darn things our Elm application fetches",
    "start": "1582000",
    "end": "1585000"
  },
  {
    "text": "the location information from our back",
    "start": "1585000",
    "end": "1586679"
  },
  {
    "text": "end and we have b a leaflet map into our",
    "start": "1586679",
    "end": "1590039"
  },
  {
    "text": "JavaScript Doom but we're going to need",
    "start": "1590039",
    "end": "1592440"
  },
  {
    "text": "to pass some markers up from Elm up the",
    "start": "1592440",
    "end": "1595360"
  },
  {
    "text": "rabbit hole to populate our map so when",
    "start": "1595360",
    "end": "1598000"
  },
  {
    "text": "we receive our API result via our found",
    "start": "1598000",
    "end": "1601480"
  },
  {
    "text": "devices um message up there we do our",
    "start": "1601480",
    "end": "1604720"
  },
  {
    "text": "normal model update and then we emit a",
    "start": "1604720",
    "end": "1606600"
  },
  {
    "text": "new action which writes to a",
    "start": "1606600",
    "end": "1609200"
  },
  {
    "text": "port and then on the JavaScript side we",
    "start": "1609200",
    "end": "1611880"
  },
  {
    "text": "register a callback function that runs",
    "start": "1611880",
    "end": "1613840"
  },
  {
    "text": "whenever data arrives on the port if",
    "start": "1613840",
    "end": "1616279"
  },
  {
    "text": "you've programmed in go it's very much",
    "start": "1616279",
    "end": "1618200"
  },
  {
    "text": "like using channels and",
    "start": "1618200",
    "end": "1621440"
  },
  {
    "text": "go and one last thing while nobody was",
    "start": "1621720",
    "end": "1625760"
  },
  {
    "text": "looking web browsers added the ability",
    "start": "1625760",
    "end": "1627840"
  },
  {
    "text": "to Define custom HTML elements this is",
    "start": "1627840",
    "end": "1631480"
  },
  {
    "text": "kind of bleeding edge and it's only well",
    "start": "1631480",
    "end": "1633120"
  },
  {
    "text": "implemented in Chrome and Firefox right",
    "start": "1633120",
    "end": "1635200"
  },
  {
    "text": "now and I'm sure people will do horrible",
    "start": "1635200",
    "end": "1637559"
  },
  {
    "text": "horrible things with it but you can do",
    "start": "1637559",
    "end": "1639480"
  },
  {
    "text": "those horrible things in Elm as",
    "start": "1639480",
    "end": "1641360"
  },
  {
    "text": "well um and this is another way to add",
    "start": "1641360",
    "end": "1644880"
  },
  {
    "text": "uh embed complex JavaScript components",
    "start": "1644880",
    "end": "1646960"
  },
  {
    "text": "into your app by treating them as",
    "start": "1646960",
    "end": "1648799"
  },
  {
    "text": "essentially new HDML elements I haven't",
    "start": "1648799",
    "end": "1651480"
  },
  {
    "text": "had much of a chance to play with this",
    "start": "1651480",
    "end": "1653159"
  },
  {
    "text": "myself so I won't say too much more",
    "start": "1653159",
    "end": "1655440"
  },
  {
    "text": "about it but there is a video from last",
    "start": "1655440",
    "end": "1657159"
  },
  {
    "text": "year's Elm Europe uh linked there which",
    "start": "1657159",
    "end": "1659440"
  },
  {
    "text": "goes into some more",
    "start": "1659440",
    "end": "1661159"
  },
  {
    "text": "depth okay the last thing I want to talk",
    "start": "1661159",
    "end": "1663600"
  },
  {
    "text": "about is the nitty-gritty of migrating",
    "start": "1663600",
    "end": "1666360"
  },
  {
    "text": "to Elm 19 if you're an existing Elm",
    "start": "1666360",
    "end": "1668519"
  },
  {
    "text": "programmer so I took the code that I",
    "start": "1668519",
    "end": "1670559"
  },
  {
    "text": "presented here at Lambda Jam last year",
    "start": "1670559",
    "end": "1674440"
  },
  {
    "text": "and follow the migration steps which",
    "start": "1674440",
    "end": "1676200"
  },
  {
    "text": "involve running a tool called upgrade",
    "start": "1676200",
    "end": "1679000"
  },
  {
    "text": "and Elm upgrade is largely a wrapper",
    "start": "1679000",
    "end": "1680840"
  },
  {
    "text": "around Elm format which applies some",
    "start": "1680840",
    "end": "1683159"
  },
  {
    "text": "canonical formatting rules to your code",
    "start": "1683159",
    "end": "1685880"
  },
  {
    "text": "so that um your syntax directed editor",
    "start": "1685880",
    "end": "1689679"
  },
  {
    "text": "can can handle the the whitespace",
    "start": "1689679",
    "end": "1691559"
  },
  {
    "text": "sensitive language but it also knows",
    "start": "1691559",
    "end": "1693320"
  },
  {
    "text": "about the various versions which means",
    "start": "1693320",
    "end": "1696080"
  },
  {
    "text": "you can tell it to translate between the",
    "start": "1696080",
    "end": "1698640"
  },
  {
    "text": "syntax in one version to the syntax in",
    "start": "1698640",
    "end": "1700360"
  },
  {
    "text": "the other and when you run this upgrade",
    "start": "1700360",
    "end": "1702519"
  },
  {
    "text": "the first thing it does is migrates your",
    "start": "1702519",
    "end": "1704159"
  },
  {
    "text": "configuration files then Works through",
    "start": "1704159",
    "end": "1706360"
  },
  {
    "text": "your dependencies it's nice enough to",
    "start": "1706360",
    "end": "1708559"
  },
  {
    "text": "ask permission before wrecking too many",
    "start": "1708559",
    "end": "1710200"
  },
  {
    "text": "things and after that it goes through",
    "start": "1710200",
    "end": "1711960"
  },
  {
    "text": "your code and processes any function",
    "start": "1711960",
    "end": "1714120"
  },
  {
    "text": "renames removals um and in the cases",
    "start": "1714120",
    "end": "1717399"
  },
  {
    "text": "where it's too hard to automatically",
    "start": "1717399",
    "end": "1719200"
  },
  {
    "text": "convert uh then it prints out some",
    "start": "1719200",
    "end": "1721159"
  },
  {
    "text": "helpful instructions to tell you what to",
    "start": "1721159",
    "end": "1722840"
  },
  {
    "text": "do and boom you're up to",
    "start": "1722840",
    "end": "1725039"
  },
  {
    "text": "date so to recap briefly what we've seen",
    "start": "1725039",
    "end": "1728960"
  },
  {
    "text": "we've talked about how Elm is awesome",
    "start": "1728960",
    "end": "1731200"
  },
  {
    "text": "how Elm and JavaScript can be",
    "start": "1731200",
    "end": "1732799"
  },
  {
    "text": "complimentary with two some of the new",
    "start": "1732799",
    "end": "1735200"
  },
  {
    "text": "features in the language uh gone through",
    "start": "1735200",
    "end": "1737760"
  },
  {
    "text": "the process of building a single page",
    "start": "1737760",
    "end": "1739440"
  },
  {
    "text": "app with the create Elm Tool uh web",
    "start": "1739440",
    "end": "1742760"
  },
  {
    "text": "compon components are still a bit of a",
    "start": "1742760",
    "end": "1744760"
  },
  {
    "text": "Sticky Wicket and we've looked at how to",
    "start": "1744760",
    "end": "1746600"
  },
  {
    "text": "bring the El material components in and",
    "start": "1746600",
    "end": "1749799"
  },
  {
    "text": "finally we've looked at how to use ports",
    "start": "1749799",
    "end": "1752519"
  },
  {
    "text": "for interoperation between Elma and",
    "start": "1752519",
    "end": "1754120"
  },
  {
    "text": "JavaScript and we've seen an example of",
    "start": "1754120",
    "end": "1756240"
  },
  {
    "text": "migrating to version",
    "start": "1756240",
    "end": "1757919"
  },
  {
    "text": "19 so thank you very much for your",
    "start": "1757919",
    "end": "1760600"
  },
  {
    "text": "attention today I hope you found that",
    "start": "1760600",
    "end": "1763200"
  },
  {
    "text": "useful um I",
    "start": "1763200",
    "end": "1766320"
  },
  {
    "text": "am in receipt of approximately 40",
    "start": "1766320",
    "end": "1769440"
  },
  {
    "text": "seconds for questions uh but I will be",
    "start": "1769440",
    "end": "1772000"
  },
  {
    "text": "here for the rest of the event so look",
    "start": "1772000",
    "end": "1773760"
  },
  {
    "text": "forward to talking to you thank you very",
    "start": "1773760",
    "end": "1775559"
  },
  {
    "text": "much",
    "start": "1775559",
    "end": "1778399"
  },
  {
    "text": "fantastic so you want",
    "start": "1778399",
    "end": "1781960"
  },
  {
    "text": "to",
    "start": "1782679",
    "end": "1785679"
  }
]