[
  {
    "text": "[Music]",
    "start": "960",
    "end": "8889"
  },
  {
    "text": "the mantra is don't repeat yourself",
    "start": "13200",
    "end": "16880"
  },
  {
    "text": "we'd like to normalize our work so that",
    "start": "16880",
    "end": "19119"
  },
  {
    "text": "there's one and only one version of any",
    "start": "19119",
    "end": "21520"
  },
  {
    "text": "particular behavior in our code",
    "start": "21520",
    "end": "24240"
  },
  {
    "text": "then if we need to change anything",
    "start": "24240",
    "end": "26240"
  },
  {
    "text": "there's only one place to change it",
    "start": "26240",
    "end": "28640"
  },
  {
    "text": "this is nearly always good advice",
    "start": "28640",
    "end": "31760"
  },
  {
    "text": "but not always",
    "start": "31760",
    "end": "33600"
  },
  {
    "text": "for bigger or more complex systems",
    "start": "33600",
    "end": "36000"
  },
  {
    "text": "coupling is an equally implicable enemy",
    "start": "36000",
    "end": "39120"
  },
  {
    "text": "at least as important as duplication and",
    "start": "39120",
    "end": "42079"
  },
  {
    "text": "to make things worse the trade-off for",
    "start": "42079",
    "end": "44719"
  },
  {
    "text": "don't repeat yourself is increased",
    "start": "44719",
    "end": "46960"
  },
  {
    "text": "coupling",
    "start": "46960",
    "end": "48640"
  },
  {
    "text": "this is commonly one of the biggest",
    "start": "48640",
    "end": "50399"
  },
  {
    "text": "stumbling blocks for teams trying to",
    "start": "50399",
    "end": "52320"
  },
  {
    "text": "adopt micro services so what about those",
    "start": "52320",
    "end": "55600"
  },
  {
    "text": "times when dry is the wrong answer when",
    "start": "55600",
    "end": "58480"
  },
  {
    "text": "is dry a problem rather than a solution",
    "start": "58480",
    "end": "63039"
  },
  {
    "text": "[Laughter]",
    "start": "67680",
    "end": "68880"
  },
  {
    "text": "hi i'm dave farley of continuous",
    "start": "68880",
    "end": "70479"
  },
  {
    "text": "delivery welcome to my channel if you",
    "start": "70479",
    "end": "72560"
  },
  {
    "text": "haven't been here before please do hit",
    "start": "72560",
    "end": "74720"
  },
  {
    "text": "subscribe and if you enjoy the content",
    "start": "74720",
    "end": "77040"
  },
  {
    "text": "here today hit like too",
    "start": "77040",
    "end": "80320"
  },
  {
    "text": "if you'd like to learn more about what",
    "start": "80320",
    "end": "81920"
  },
  {
    "text": "it takes to create great software check",
    "start": "81920",
    "end": "84640"
  },
  {
    "text": "out my training courses at",
    "start": "84640",
    "end": "86240"
  },
  {
    "text": "courses.cd.training",
    "start": "86240",
    "end": "88880"
  },
  {
    "text": "we have a variety of courses free and",
    "start": "88880",
    "end": "91200"
  },
  {
    "text": "paid for that you may find interesting",
    "start": "91200",
    "end": "94880"
  },
  {
    "text": "in this episode i'd like to explore the",
    "start": "94880",
    "end": "97280"
  },
  {
    "text": "costs and benefits of removing",
    "start": "97280",
    "end": "99759"
  },
  {
    "text": "duplication in our code",
    "start": "99759",
    "end": "102159"
  },
  {
    "text": "don't repeat yourself or dry as it's",
    "start": "102159",
    "end": "104479"
  },
  {
    "text": "more popularly known is probably one of",
    "start": "104479",
    "end": "106560"
  },
  {
    "text": "the best known design heuristics",
    "start": "106560",
    "end": "109360"
  },
  {
    "text": "if you ask people about the guidelines",
    "start": "109360",
    "end": "111520"
  },
  {
    "text": "that they use to improve the quality of",
    "start": "111520",
    "end": "113520"
  },
  {
    "text": "their designs dry is usually high up on",
    "start": "113520",
    "end": "116240"
  },
  {
    "text": "their list",
    "start": "116240",
    "end": "117920"
  },
  {
    "text": "this is for a good reason it makes a lot",
    "start": "117920",
    "end": "120320"
  },
  {
    "text": "of sense",
    "start": "120320",
    "end": "121840"
  },
  {
    "text": "certainly in big code bases one of the",
    "start": "121840",
    "end": "124240"
  },
  {
    "text": "commonest anti-patterns a form of waste",
    "start": "124240",
    "end": "126799"
  },
  {
    "text": "in the design is that behavior is",
    "start": "126799",
    "end": "128959"
  },
  {
    "text": "duplicated in multiple parts of the code",
    "start": "128959",
    "end": "132080"
  },
  {
    "text": "this is bad because it means that when",
    "start": "132080",
    "end": "133840"
  },
  {
    "text": "we need to change that behavior we'll",
    "start": "133840",
    "end": "136239"
  },
  {
    "text": "need to identify all of the places in",
    "start": "136239",
    "end": "138239"
  },
  {
    "text": "the code where it exists which may or",
    "start": "138239",
    "end": "140480"
  },
  {
    "text": "may not be easy",
    "start": "140480",
    "end": "142800"
  },
  {
    "text": "it also means that as a result of this",
    "start": "142800",
    "end": "145200"
  },
  {
    "text": "first problem over time it's very likely",
    "start": "145200",
    "end": "148480"
  },
  {
    "text": "that the different copies of this",
    "start": "148480",
    "end": "150080"
  },
  {
    "text": "behavior will start to drift apart",
    "start": "150080",
    "end": "152560"
  },
  {
    "text": "we will end up with several different",
    "start": "152560",
    "end": "154720"
  },
  {
    "text": "slightly different versions of the same",
    "start": "154720",
    "end": "156959"
  },
  {
    "text": "behavior in different parts of the code",
    "start": "156959",
    "end": "159280"
  },
  {
    "text": "each a little different from the others",
    "start": "159280",
    "end": "161360"
  },
  {
    "text": "and this makes the systems that are",
    "start": "161360",
    "end": "162959"
  },
  {
    "text": "unpleasant to use and if not just out",
    "start": "162959",
    "end": "166319"
  },
  {
    "text": "and out wrong",
    "start": "166319",
    "end": "167920"
  },
  {
    "text": "as well as systems that are a pain to",
    "start": "167920",
    "end": "170000"
  },
  {
    "text": "maintain",
    "start": "170000",
    "end": "172560"
  },
  {
    "text": "this is because we have to hunt down all",
    "start": "172560",
    "end": "174319"
  },
  {
    "text": "of those different places where we do",
    "start": "174319",
    "end": "176080"
  },
  {
    "text": "something if we need to fix a bug or add",
    "start": "176080",
    "end": "178560"
  },
  {
    "text": "the behavior",
    "start": "178560",
    "end": "180159"
  },
  {
    "text": "over time this just gets worse and worse",
    "start": "180159",
    "end": "182959"
  },
  {
    "text": "that's why people started to recommend",
    "start": "182959",
    "end": "185360"
  },
  {
    "text": "dry as an approach",
    "start": "185360",
    "end": "187519"
  },
  {
    "text": "wikipedia describes dry like this every",
    "start": "187519",
    "end": "190879"
  },
  {
    "text": "piece of knowledge must have a single",
    "start": "190879",
    "end": "192959"
  },
  {
    "text": "unambiguous authoritative representation",
    "start": "192959",
    "end": "195760"
  },
  {
    "text": "within a system",
    "start": "195760",
    "end": "197519"
  },
  {
    "text": "this is good advice",
    "start": "197519",
    "end": "199840"
  },
  {
    "text": "if we organize our code like this it's",
    "start": "199840",
    "end": "202159"
  },
  {
    "text": "much easier to work on",
    "start": "202159",
    "end": "204640"
  },
  {
    "text": "here is some unpleasant code okay it's",
    "start": "204640",
    "end": "207519"
  },
  {
    "text": "written in c but just because you're",
    "start": "207519",
    "end": "209040"
  },
  {
    "text": "writing in c doesn't mean that you have",
    "start": "209040",
    "end": "210560"
  },
  {
    "text": "to write crap code",
    "start": "210560",
    "end": "212400"
  },
  {
    "text": "this little block of code here is",
    "start": "212400",
    "end": "214879"
  },
  {
    "text": "repeated 13 times inside this single",
    "start": "214879",
    "end": "218080"
  },
  {
    "text": "function",
    "start": "218080",
    "end": "219360"
  },
  {
    "text": "this is horrible code clearly the",
    "start": "219360",
    "end": "222159"
  },
  {
    "text": "developer either had never heard of dry",
    "start": "222159",
    "end": "224799"
  },
  {
    "text": "or didn't care enough about it to",
    "start": "224799",
    "end": "227360"
  },
  {
    "text": "to to try and apply it to this piece of",
    "start": "227360",
    "end": "229360"
  },
  {
    "text": "code",
    "start": "229360",
    "end": "230480"
  },
  {
    "text": "at this level dry is not just a good",
    "start": "230480",
    "end": "233280"
  },
  {
    "text": "idea it's pretty much essential to doing",
    "start": "233280",
    "end": "235439"
  },
  {
    "text": "a decent job",
    "start": "235439",
    "end": "237200"
  },
  {
    "text": "we can improve this code trivially by",
    "start": "237200",
    "end": "239760"
  },
  {
    "text": "creating a small function that we can",
    "start": "239760",
    "end": "242159"
  },
  {
    "text": "call to do whatever it is that this",
    "start": "242159",
    "end": "243920"
  },
  {
    "text": "block of code is doing",
    "start": "243920",
    "end": "245840"
  },
  {
    "text": "with the added benefit that we could",
    "start": "245840",
    "end": "247840"
  },
  {
    "text": "name that block of code and so we the",
    "start": "247840",
    "end": "250239"
  },
  {
    "text": "readers would have a better idea of what",
    "start": "250239",
    "end": "252560"
  },
  {
    "text": "it was that the code was supposed to be",
    "start": "252560",
    "end": "254080"
  },
  {
    "text": "doing",
    "start": "254080",
    "end": "255599"
  },
  {
    "text": "if we were refactoring i'd probably",
    "start": "255599",
    "end": "257680"
  },
  {
    "text": "start by extracting a method",
    "start": "257680",
    "end": "260079"
  },
  {
    "text": "maybe called something like debug",
    "start": "260079",
    "end": "262400"
  },
  {
    "text": "warning",
    "start": "262400",
    "end": "263759"
  },
  {
    "text": "this would make the code considerably",
    "start": "263759",
    "end": "265680"
  },
  {
    "text": "better in a single simple step",
    "start": "265680",
    "end": "268479"
  },
  {
    "text": "so the dry guideline has worked and",
    "start": "268479",
    "end": "270720"
  },
  {
    "text": "helped us to write better code",
    "start": "270720",
    "end": "273600"
  },
  {
    "text": "but there's a problem",
    "start": "273600",
    "end": "275280"
  },
  {
    "text": "one that doesn't matter and doesn't crop",
    "start": "275280",
    "end": "277520"
  },
  {
    "text": "up at this scale",
    "start": "277520",
    "end": "279360"
  },
  {
    "text": "but what if the code base is bigger",
    "start": "279360",
    "end": "282160"
  },
  {
    "text": "let's say for example that we have two",
    "start": "282160",
    "end": "284880"
  },
  {
    "text": "services a and b",
    "start": "284880",
    "end": "287199"
  },
  {
    "text": "they both need debug warning",
    "start": "287199",
    "end": "290240"
  },
  {
    "text": "if we follow dry",
    "start": "290240",
    "end": "292080"
  },
  {
    "text": "then there should only be one copy",
    "start": "292080",
    "end": "295600"
  },
  {
    "text": "our services are coupled via debug",
    "start": "295600",
    "end": "297919"
  },
  {
    "text": "warning if service a wants to add",
    "start": "297919",
    "end": "300400"
  },
  {
    "text": "something to debug warning it forces",
    "start": "300400",
    "end": "302639"
  },
  {
    "text": "service b to change in step",
    "start": "302639",
    "end": "305039"
  },
  {
    "text": "we can reduce the cost of this by",
    "start": "305039",
    "end": "307759"
  },
  {
    "text": "operating a shared code ownership kind",
    "start": "307759",
    "end": "310560"
  },
  {
    "text": "of",
    "start": "310560",
    "end": "311280"
  },
  {
    "text": "approach keeping service a and service b",
    "start": "311280",
    "end": "314560"
  },
  {
    "text": "in the same repo along with our single",
    "start": "314560",
    "end": "317520"
  },
  {
    "text": "implementation of debug warning",
    "start": "317520",
    "end": "320320"
  },
  {
    "text": "and maybe using continuous integration",
    "start": "320320",
    "end": "322400"
  },
  {
    "text": "to evaluate any changes",
    "start": "322400",
    "end": "324720"
  },
  {
    "text": "and so help us to spot if our changes",
    "start": "324720",
    "end": "327039"
  },
  {
    "text": "break anything",
    "start": "327039",
    "end": "328720"
  },
  {
    "text": "this works and he's pretty good advice",
    "start": "328720",
    "end": "330800"
  },
  {
    "text": "on the whole",
    "start": "330800",
    "end": "332320"
  },
  {
    "text": "what if service a and service b were",
    "start": "332320",
    "end": "334240"
  },
  {
    "text": "micro services though",
    "start": "334240",
    "end": "336560"
  },
  {
    "text": "i talked about micro services in an",
    "start": "336560",
    "end": "338560"
  },
  {
    "text": "earlier episode",
    "start": "338560",
    "end": "341120"
  },
  {
    "text": "a micro service is by definition",
    "start": "341120",
    "end": "343600"
  },
  {
    "text": "independently deployable the whole point",
    "start": "343600",
    "end": "346240"
  },
  {
    "text": "of a micro services is to allow for",
    "start": "346240",
    "end": "348479"
  },
  {
    "text": "organizational scaling through",
    "start": "348479",
    "end": "350400"
  },
  {
    "text": "decoupling we want teams to be able to",
    "start": "350400",
    "end": "353199"
  },
  {
    "text": "work independently of one another we",
    "start": "353199",
    "end": "355600"
  },
  {
    "text": "don't get to test our micro services",
    "start": "355600",
    "end": "357919"
  },
  {
    "text": "together before release or they wouldn't",
    "start": "357919",
    "end": "360160"
  },
  {
    "text": "be independently deployable",
    "start": "360160",
    "end": "362319"
  },
  {
    "text": "so what does that mean for our services",
    "start": "362319",
    "end": "364960"
  },
  {
    "text": "and their shared function",
    "start": "364960",
    "end": "367520"
  },
  {
    "text": "if there's only one copy of it",
    "start": "367520",
    "end": "369919"
  },
  {
    "text": "where do we keep debug warning",
    "start": "369919",
    "end": "373520"
  },
  {
    "text": "is it in the repo for one of the",
    "start": "373520",
    "end": "375280"
  },
  {
    "text": "services",
    "start": "375280",
    "end": "376400"
  },
  {
    "text": "if so then the other service is not",
    "start": "376400",
    "end": "379120"
  },
  {
    "text": "independent",
    "start": "379120",
    "end": "380479"
  },
  {
    "text": "because it now depends on the code in",
    "start": "380479",
    "end": "382720"
  },
  {
    "text": "the repo for the first service our",
    "start": "382720",
    "end": "385360"
  },
  {
    "text": "services are developmentally coupled",
    "start": "385360",
    "end": "388400"
  },
  {
    "text": "maybe we should move debug warning into",
    "start": "388400",
    "end": "390479"
  },
  {
    "text": "its own repository",
    "start": "390479",
    "end": "392479"
  },
  {
    "text": "okay but our services may still be",
    "start": "392479",
    "end": "395039"
  },
  {
    "text": "developmentally coupled at this point it",
    "start": "395039",
    "end": "397280"
  },
  {
    "text": "really depends on how we manage this",
    "start": "397280",
    "end": "399840"
  },
  {
    "text": "there are several different options",
    "start": "399840",
    "end": "402479"
  },
  {
    "text": "the easiest one to think about is if the",
    "start": "402479",
    "end": "404560"
  },
  {
    "text": "function is just a function we can treat",
    "start": "404560",
    "end": "406880"
  },
  {
    "text": "it as some kind of library function that",
    "start": "406880",
    "end": "408880"
  },
  {
    "text": "we can link with and then call so we",
    "start": "408880",
    "end": "411599"
  },
  {
    "text": "could add something into the build of",
    "start": "411599",
    "end": "413599"
  },
  {
    "text": "our services to establish a dependency",
    "start": "413599",
    "end": "416080"
  },
  {
    "text": "on our debug warning library",
    "start": "416080",
    "end": "418960"
  },
  {
    "text": "the trouble here is that even now the",
    "start": "418960",
    "end": "421280"
  },
  {
    "text": "devil's in the detail if we choose to",
    "start": "421280",
    "end": "423520"
  },
  {
    "text": "establish that dependency on the basis",
    "start": "423520",
    "end": "425599"
  },
  {
    "text": "of let's say give me the latest version",
    "start": "425599",
    "end": "429120"
  },
  {
    "text": "we're developmentally coupled again",
    "start": "429120",
    "end": "431520"
  },
  {
    "text": "i changed debug warning to support my",
    "start": "431520",
    "end": "433599"
  },
  {
    "text": "new feature in my service b and i am",
    "start": "433599",
    "end": "436800"
  },
  {
    "text": "forcing you to make changes before you",
    "start": "436800",
    "end": "439199"
  },
  {
    "text": "can safely release your service a",
    "start": "439199",
    "end": "442880"
  },
  {
    "text": "one way to reduce this coupling is to be",
    "start": "442880",
    "end": "445280"
  },
  {
    "text": "more specific about the versions that we",
    "start": "445280",
    "end": "447759"
  },
  {
    "text": "pick",
    "start": "447759",
    "end": "448720"
  },
  {
    "text": "we treat debug warning rather like an",
    "start": "448720",
    "end": "451199"
  },
  {
    "text": "external third-party dependency in my",
    "start": "451199",
    "end": "454000"
  },
  {
    "text": "build script i say my service uses",
    "start": "454000",
    "end": "456720"
  },
  {
    "text": "version seven in yours you say yours",
    "start": "456720",
    "end": "459520"
  },
  {
    "text": "uses version six for example",
    "start": "459520",
    "end": "462479"
  },
  {
    "text": "now we are each in control of which",
    "start": "462479",
    "end": "464879"
  },
  {
    "text": "version of debug warning we will take",
    "start": "464879",
    "end": "467759"
  },
  {
    "text": "we can decide when to upgrade and when",
    "start": "467759",
    "end": "470319"
  },
  {
    "text": "not",
    "start": "470319",
    "end": "471280"
  },
  {
    "text": "so call",
    "start": "471280",
    "end": "472400"
  },
  {
    "text": "we have our independent services",
    "start": "472400",
    "end": "474960"
  },
  {
    "text": "but let's be clear",
    "start": "474960",
    "end": "476720"
  },
  {
    "text": "we're no longer dry",
    "start": "476720",
    "end": "478720"
  },
  {
    "text": "we've just used our version control",
    "start": "478720",
    "end": "480960"
  },
  {
    "text": "system to allow for two different",
    "start": "480960",
    "end": "482639"
  },
  {
    "text": "versions of debug warning to be in use",
    "start": "482639",
    "end": "485680"
  },
  {
    "text": "maybe debug warning is more like a",
    "start": "485680",
    "end": "487759"
  },
  {
    "text": "function of a service of some kind we",
    "start": "487759",
    "end": "490240"
  },
  {
    "text": "could deploy it as a separate",
    "start": "490240",
    "end": "491759"
  },
  {
    "text": "microservice perhaps the strategy for",
    "start": "491759",
    "end": "494479"
  },
  {
    "text": "microservices is to reduce the coupling",
    "start": "494479",
    "end": "496879"
  },
  {
    "text": "between the services",
    "start": "496879",
    "end": "498879"
  },
  {
    "text": "so now we will be much more cautious of",
    "start": "498879",
    "end": "501840"
  },
  {
    "text": "changes to the interface to debug",
    "start": "501840",
    "end": "504000"
  },
  {
    "text": "warning",
    "start": "504000",
    "end": "505039"
  },
  {
    "text": "we will probably be prefer",
    "start": "505039",
    "end": "507360"
  },
  {
    "text": "more loosely coupled technology to",
    "start": "507360",
    "end": "509360"
  },
  {
    "text": "represent that interface after all",
    "start": "509360",
    "end": "511520"
  },
  {
    "text": "function calls are pretty tight coupled",
    "start": "511520",
    "end": "513279"
  },
  {
    "text": "by design aren't they",
    "start": "513279",
    "end": "515518"
  },
  {
    "text": "well",
    "start": "515519",
    "end": "516479"
  },
  {
    "text": "maybe",
    "start": "516479",
    "end": "517839"
  },
  {
    "text": "this is much more about design than it",
    "start": "517839",
    "end": "520240"
  },
  {
    "text": "is about technology",
    "start": "520240",
    "end": "522080"
  },
  {
    "text": "if the function call abstracts what",
    "start": "522080",
    "end": "524320"
  },
  {
    "text": "happens behind it includes minimal",
    "start": "524320",
    "end": "527440"
  },
  {
    "text": "abstract parameters if the first thing",
    "start": "527440",
    "end": "529920"
  },
  {
    "text": "that the function does when called is",
    "start": "529920",
    "end": "532080"
  },
  {
    "text": "apply some kind of ports and adapters",
    "start": "532080",
    "end": "534240"
  },
  {
    "text": "style translation to insulate the code",
    "start": "534240",
    "end": "537040"
  },
  {
    "text": "from the core and to validate the inputs",
    "start": "537040",
    "end": "539760"
  },
  {
    "text": "then it is decoupled and so won't change",
    "start": "539760",
    "end": "542399"
  },
  {
    "text": "very quickly or break quite so easily",
    "start": "542399",
    "end": "546240"
  },
  {
    "text": "conversely if this api is presented as a",
    "start": "546240",
    "end": "549120"
  },
  {
    "text": "rest style core but the data that it",
    "start": "549120",
    "end": "551760"
  },
  {
    "text": "deals with is tightly coupled to the",
    "start": "551760",
    "end": "553519"
  },
  {
    "text": "implementation and there's no",
    "start": "553519",
    "end": "555279"
  },
  {
    "text": "translation step to validate the inputs",
    "start": "555279",
    "end": "557920"
  },
  {
    "text": "then it's still tightly coupled",
    "start": "557920",
    "end": "560959"
  },
  {
    "text": "some technologies help us to create more",
    "start": "560959",
    "end": "563440"
  },
  {
    "text": "loosely coupled solution than others but",
    "start": "563440",
    "end": "565680"
  },
  {
    "text": "the tech itself doesn't solve the",
    "start": "565680",
    "end": "567600"
  },
  {
    "text": "problem the design does",
    "start": "567600",
    "end": "570399"
  },
  {
    "text": "so there's a fundamental unavoidable",
    "start": "570399",
    "end": "572880"
  },
  {
    "text": "link between dry and the degree to which",
    "start": "572880",
    "end": "576240"
  },
  {
    "text": "our systems are coupled",
    "start": "576240",
    "end": "578240"
  },
  {
    "text": "there's a cost to sharing code as well",
    "start": "578240",
    "end": "580720"
  },
  {
    "text": "as a benefit",
    "start": "580720",
    "end": "582480"
  },
  {
    "text": "so we're always treading a thin line",
    "start": "582480",
    "end": "585519"
  },
  {
    "text": "one side we have nasty duplication on",
    "start": "585519",
    "end": "588399"
  },
  {
    "text": "the other we have nasty coupling",
    "start": "588399",
    "end": "591200"
  },
  {
    "text": "so how do we balance these off against",
    "start": "591200",
    "end": "593600"
  },
  {
    "text": "each other get the best of both worlds",
    "start": "593600",
    "end": "596320"
  },
  {
    "text": "inevitably this is complex and",
    "start": "596320",
    "end": "598800"
  },
  {
    "text": "subjective but to me this is the real",
    "start": "598800",
    "end": "602000"
  },
  {
    "text": "skill of software development",
    "start": "602000",
    "end": "604480"
  },
  {
    "text": "sure it's nice if you know your language",
    "start": "604480",
    "end": "607600"
  },
  {
    "text": "and tools well but that's the simple",
    "start": "607600",
    "end": "609600"
  },
  {
    "text": "stuff compared to this",
    "start": "609600",
    "end": "611680"
  },
  {
    "text": "making good choices about where you",
    "start": "611680",
    "end": "614000"
  },
  {
    "text": "place behavior where you draw the seams",
    "start": "614000",
    "end": "616720"
  },
  {
    "text": "in your code between different",
    "start": "616720",
    "end": "618160"
  },
  {
    "text": "responsibility this is where great",
    "start": "618160",
    "end": "620160"
  },
  {
    "text": "developers shine",
    "start": "620160",
    "end": "622320"
  },
  {
    "text": "the starting point for me is that there",
    "start": "622320",
    "end": "624720"
  },
  {
    "text": "is no simple answer dry is too simple as",
    "start": "624720",
    "end": "628240"
  },
  {
    "text": "we have discussed and some level of",
    "start": "628240",
    "end": "630720"
  },
  {
    "text": "coupling is inevitable",
    "start": "630720",
    "end": "632880"
  },
  {
    "text": "assuming that you want the pieces of",
    "start": "632880",
    "end": "634320"
  },
  {
    "text": "your system to communicate with each",
    "start": "634320",
    "end": "635760"
  },
  {
    "text": "other at all",
    "start": "635760",
    "end": "637360"
  },
  {
    "text": "dry is a good starting point as a",
    "start": "637360",
    "end": "639279"
  },
  {
    "text": "guideline though",
    "start": "639279",
    "end": "641360"
  },
  {
    "text": "i'd aim to have code in the same repo be",
    "start": "641360",
    "end": "644240"
  },
  {
    "text": "largely dry whatever the scale",
    "start": "644240",
    "end": "647040"
  },
  {
    "text": "but it's kind of fractal",
    "start": "647040",
    "end": "649760"
  },
  {
    "text": "within a module class or file i'm not",
    "start": "649760",
    "end": "653040"
  },
  {
    "text": "going to accept more than a couple of",
    "start": "653040",
    "end": "655040"
  },
  {
    "text": "lines of duplication in my code",
    "start": "655040",
    "end": "657760"
  },
  {
    "text": "once we get to broader concepts where",
    "start": "657760",
    "end": "659760"
  },
  {
    "text": "one module interacts with another then i",
    "start": "659760",
    "end": "662160"
  },
  {
    "text": "think you need to be a cautious not to",
    "start": "662160",
    "end": "663920"
  },
  {
    "text": "generalize too soon",
    "start": "663920",
    "end": "666320"
  },
  {
    "text": "but also not to be too tolerant of",
    "start": "666320",
    "end": "668160"
  },
  {
    "text": "duplication",
    "start": "668160",
    "end": "669760"
  },
  {
    "text": "this is hard but finding that sweet spot",
    "start": "669760",
    "end": "672800"
  },
  {
    "text": "is also the joy of good design it takes",
    "start": "672800",
    "end": "675680"
  },
  {
    "text": "skill and experience so you can be proud",
    "start": "675680",
    "end": "677600"
  },
  {
    "text": "of yourself when you get it right",
    "start": "677600",
    "end": "679920"
  },
  {
    "text": "one of the many reasons why i value test",
    "start": "679920",
    "end": "682240"
  },
  {
    "text": "driven development quite so much is",
    "start": "682240",
    "end": "684160"
  },
  {
    "text": "because it helps me with this kind of",
    "start": "684160",
    "end": "685760"
  },
  {
    "text": "decision",
    "start": "685760",
    "end": "687040"
  },
  {
    "text": "if i write a test i want it to be easy",
    "start": "687040",
    "end": "689279"
  },
  {
    "text": "to write and easy to understand if my",
    "start": "689279",
    "end": "692000"
  },
  {
    "text": "code is too tightly coupled and the",
    "start": "692000",
    "end": "694079"
  },
  {
    "text": "abstraction is poor it won't be either",
    "start": "694079",
    "end": "696800"
  },
  {
    "text": "so if i find my test is hard to write",
    "start": "696800",
    "end": "699040"
  },
  {
    "text": "for any reason i know that i have a",
    "start": "699040",
    "end": "701279"
  },
  {
    "text": "problem with the design of my code",
    "start": "701279",
    "end": "703760"
  },
  {
    "text": "so i can think harder and come up with",
    "start": "703760",
    "end": "705600"
  },
  {
    "text": "better ideas now",
    "start": "705600",
    "end": "707519"
  },
  {
    "text": "this approach is great at highlighting",
    "start": "707519",
    "end": "709839"
  },
  {
    "text": "over coupled dependencies in particular",
    "start": "709839",
    "end": "712000"
  },
  {
    "text": "it drives me to abstract the interfaces",
    "start": "712000",
    "end": "714240"
  },
  {
    "text": "to my dependencies better this helps me",
    "start": "714240",
    "end": "716560"
  },
  {
    "text": "to spot general generality earlier in",
    "start": "716560",
    "end": "719200"
  },
  {
    "text": "the life cycle or at least opens the",
    "start": "719200",
    "end": "721440"
  },
  {
    "text": "door to me spotting it later and so",
    "start": "721440",
    "end": "724000"
  },
  {
    "text": "helps me to keep my code dry without",
    "start": "724000",
    "end": "726079"
  },
  {
    "text": "inventing too many crappy tactical",
    "start": "726079",
    "end": "728639"
  },
  {
    "text": "abstractions along the way",
    "start": "728639",
    "end": "731120"
  },
  {
    "text": "at the next level out",
    "start": "731120",
    "end": "733360"
  },
  {
    "text": "services then i think that dry gets more",
    "start": "733360",
    "end": "736399"
  },
  {
    "text": "complex",
    "start": "736399",
    "end": "737680"
  },
  {
    "text": "for me service means pretty much by",
    "start": "737680",
    "end": "740240"
  },
  {
    "text": "definition that we treat the interface",
    "start": "740240",
    "end": "742399"
  },
  {
    "text": "with more care this is a division",
    "start": "742399",
    "end": "745279"
  },
  {
    "text": "between different parts of the code that",
    "start": "745279",
    "end": "747440"
  },
  {
    "text": "we care a lot about the service itself",
    "start": "747440",
    "end": "749920"
  },
  {
    "text": "should be keeping some secrets and",
    "start": "749920",
    "end": "751440"
  },
  {
    "text": "defending its borders",
    "start": "751440",
    "end": "753360"
  },
  {
    "text": "the api for a service matters more than",
    "start": "753360",
    "end": "755839"
  },
  {
    "text": "its implementation",
    "start": "755839",
    "end": "757600"
  },
  {
    "text": "so now we need to be careful about dry",
    "start": "757600",
    "end": "760320"
  },
  {
    "text": "at the level of api",
    "start": "760320",
    "end": "762399"
  },
  {
    "text": "because if we get it wrong the coupling",
    "start": "762399",
    "end": "764240"
  },
  {
    "text": "will increase and will cause more",
    "start": "764240",
    "end": "766240"
  },
  {
    "text": "problems than the duplication",
    "start": "766240",
    "end": "769120"
  },
  {
    "text": "at the level of behavior represented by",
    "start": "769120",
    "end": "770880"
  },
  {
    "text": "services the api then they should",
    "start": "770880",
    "end": "773600"
  },
  {
    "text": "usually in most circumstances be dry",
    "start": "773600",
    "end": "776959"
  },
  {
    "text": "services should be focused on achieving",
    "start": "776959",
    "end": "779200"
  },
  {
    "text": "a specific job or outcome and they",
    "start": "779200",
    "end": "781760"
  },
  {
    "text": "should be the only place to go to get",
    "start": "781760",
    "end": "783920"
  },
  {
    "text": "that job done",
    "start": "783920",
    "end": "785600"
  },
  {
    "text": "the code itself the implementation is",
    "start": "785600",
    "end": "788160"
  },
  {
    "text": "more problematic",
    "start": "788160",
    "end": "789920"
  },
  {
    "text": "now we have to worry again about",
    "start": "789920",
    "end": "792160"
  },
  {
    "text": "developmental coupling if our services",
    "start": "792160",
    "end": "794720"
  },
  {
    "text": "are in the same repo we have some",
    "start": "794720",
    "end": "796880"
  },
  {
    "text": "choices to make",
    "start": "796880",
    "end": "798880"
  },
  {
    "text": "storing building testing and deploying",
    "start": "798880",
    "end": "801120"
  },
  {
    "text": "things together gives us a few more",
    "start": "801120",
    "end": "803200"
  },
  {
    "text": "options we can alleviate coupling with",
    "start": "803200",
    "end": "806079"
  },
  {
    "text": "shared code ownership continuous",
    "start": "806079",
    "end": "808160"
  },
  {
    "text": "integration as i mentioned earlier",
    "start": "808160",
    "end": "810399"
  },
  {
    "text": "we can use refactoring tools to help us",
    "start": "810399",
    "end": "812399"
  },
  {
    "text": "to make changes across the shared code",
    "start": "812399",
    "end": "815360"
  },
  {
    "text": "if we take the step to service",
    "start": "815360",
    "end": "816959"
  },
  {
    "text": "independence though",
    "start": "816959",
    "end": "818639"
  },
  {
    "text": "keep our services in separate repos",
    "start": "818639",
    "end": "820720"
  },
  {
    "text": "deploy them independently that is micro",
    "start": "820720",
    "end": "823519"
  },
  {
    "text": "services then we cannot do this",
    "start": "823519",
    "end": "826320"
  },
  {
    "text": "at this point i would treat dry with",
    "start": "826320",
    "end": "829040"
  },
  {
    "text": "great suspicion and great care",
    "start": "829040",
    "end": "832079"
  },
  {
    "text": "here i would much prefer duplication to",
    "start": "832079",
    "end": "834959"
  },
  {
    "text": "reuse",
    "start": "834959",
    "end": "836240"
  },
  {
    "text": "the costs of coupling now are too high",
    "start": "836240",
    "end": "840560"
  },
  {
    "text": "the whole point of microservices is to",
    "start": "840560",
    "end": "843120"
  },
  {
    "text": "allow teams to make independent progress",
    "start": "843120",
    "end": "846079"
  },
  {
    "text": "so developmentally coupling them",
    "start": "846079",
    "end": "847519"
  },
  {
    "text": "together to achieve reuse through dry is",
    "start": "847519",
    "end": "850079"
  },
  {
    "text": "a big mistake that i see played out all",
    "start": "850079",
    "end": "852639"
  },
  {
    "text": "the time",
    "start": "852639",
    "end": "853839"
  },
  {
    "text": "the commonest form of this mistake is",
    "start": "853839",
    "end": "856240"
  },
  {
    "text": "for code usually called platform or",
    "start": "856240",
    "end": "858800"
  },
  {
    "text": "common services",
    "start": "858800",
    "end": "860480"
  },
  {
    "text": "code that several other services rely",
    "start": "860480",
    "end": "862560"
  },
  {
    "text": "upon",
    "start": "862560",
    "end": "863519"
  },
  {
    "text": "that usually begins with the aim of",
    "start": "863519",
    "end": "866079"
  },
  {
    "text": "trying to be architecturally dry and",
    "start": "866079",
    "end": "868399"
  },
  {
    "text": "ends up forcing everybody to make",
    "start": "868399",
    "end": "870480"
  },
  {
    "text": "progress in lockstep because now changes",
    "start": "870480",
    "end": "872959"
  },
  {
    "text": "to the platform break everyone",
    "start": "872959",
    "end": "875519"
  },
  {
    "text": "if your team is forced to take versions",
    "start": "875519",
    "end": "878399"
  },
  {
    "text": "of shared code for any reason other than",
    "start": "878399",
    "end": "881600"
  },
  {
    "text": "that it does something new that you want",
    "start": "881600",
    "end": "884240"
  },
  {
    "text": "you're suffering from a version of this",
    "start": "884240",
    "end": "885920"
  },
  {
    "text": "problem",
    "start": "885920",
    "end": "887519"
  },
  {
    "text": "platform and common services code should",
    "start": "887519",
    "end": "890240"
  },
  {
    "text": "take loose coupling and good abstraction",
    "start": "890240",
    "end": "893120"
  },
  {
    "text": "more seriously than any other part of",
    "start": "893120",
    "end": "895199"
  },
  {
    "text": "the system",
    "start": "895199",
    "end": "896480"
  },
  {
    "text": "but often they don't",
    "start": "896480",
    "end": "898639"
  },
  {
    "text": "so dry is a useful guideline and a",
    "start": "898639",
    "end": "901360"
  },
  {
    "text": "rotten rule",
    "start": "901360",
    "end": "903600"
  },
  {
    "text": "once systems and organizations get",
    "start": "903600",
    "end": "905920"
  },
  {
    "text": "beyond the small and simple coupling is",
    "start": "905920",
    "end": "908720"
  },
  {
    "text": "the real enemy",
    "start": "908720",
    "end": "910399"
  },
  {
    "text": "as ever microservices are more complex",
    "start": "910399",
    "end": "913440"
  },
  {
    "text": "than they seem on the surface",
    "start": "913440",
    "end": "915519"
  },
  {
    "text": "to do well at microservices you must",
    "start": "915519",
    "end": "918240"
  },
  {
    "text": "take coupling very seriously",
    "start": "918240",
    "end": "920880"
  },
  {
    "text": "and use all of the tricks at your",
    "start": "920880",
    "end": "922800"
  },
  {
    "text": "disposal to reduce and manage it i think",
    "start": "922800",
    "end": "926560"
  },
  {
    "text": "that includes discarding dry between",
    "start": "926560",
    "end": "929040"
  },
  {
    "text": "micro services as a guideline",
    "start": "929040",
    "end": "932320"
  },
  {
    "text": "thank you very much for watching",
    "start": "932320",
    "end": "936199"
  },
  {
    "text": "you",
    "start": "954320",
    "end": "956399"
  }
]