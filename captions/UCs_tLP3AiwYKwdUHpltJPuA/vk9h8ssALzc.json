[
  {
    "text": "[Music]",
    "start": "1340",
    "end": "11599"
  },
  {
    "text": "welcome thoughts on programming languages this is the Yao tube for",
    "start": "11599",
    "end": "17240"
  },
  {
    "text": "November I'm very pleased to be hosting a really great interview with uh Matt",
    "start": "17240",
    "end": "24039"
  },
  {
    "text": "stensson and Eric Meyer I sure you know who these gentlemen are but I'll",
    "start": "24039",
    "end": "29480"
  },
  {
    "text": "introduce and briefly both of these guys have actually worked on Visual Basic",
    "start": "29480",
    "end": "34640"
  },
  {
    "text": "just voted one of the most dreaded languages so I'm not quite sure that we can really trust them to Eric Meyer",
    "start": "34640",
    "end": "42440"
  },
  {
    "text": "carries mathematic and one H C or HC and the other of course he worked on hascal",
    "start": "42440",
    "end": "48760"
  },
  {
    "text": "C and he also worked on dark and of course his major contributions of Link in the reactive",
    "start": "48760",
    "end": "54079"
  },
  {
    "text": "framework most recently he's been trying to convince us that probalistic program",
    "start": "54079",
    "end": "60239"
  },
  {
    "text": "should be a first class concept to support machine learning in programming languages well that'll be interesting",
    "start": "60239",
    "end": "65560"
  },
  {
    "text": "maybe we'll come back and hear a bit about that mads of course is the program manager for the C programming language",
    "start": "65560",
    "end": "71640"
  },
  {
    "text": "and he's a lead designer of c and its implementation he runs the C Lang C",
    "start": "71640",
    "end": "77119"
  },
  {
    "text": "language design process and he also participated in the design of",
    "start": "77119",
    "end": "83320"
  },
  {
    "text": "typescript I first met mads at the yo conference in R Denmark he's really",
    "start": "83320",
    "end": "89119"
  },
  {
    "text": "famous because he's a classmate of iOS who's secretly orchestrating things",
    "start": "89119",
    "end": "94360"
  },
  {
    "text": "behind the scenes so thanks to IO you're welcome if I recall he was working on",
    "start": "94360",
    "end": "100520"
  },
  {
    "text": "Java generics at the time we all sat at a table arguing with Anders that really",
    "start": "100520",
    "end": "106439"
  },
  {
    "text": "C should try and step up and deal with first class functions and other than",
    "start": "106439",
    "end": "111640"
  },
  {
    "text": "objects perhaps we could start by both of you briefly telling us about your journey with programming languages and",
    "start": "111640",
    "end": "117200"
  },
  {
    "text": "particularly the ones you use in Anger m would you like to go first sure for all of us the first",
    "start": "117200",
    "end": "124159"
  },
  {
    "text": "programming language I used was basic on some rubber keyboard machine in my",
    "start": "124159",
    "end": "130160"
  },
  {
    "text": "parents house but I think that what really got me hooked on programming languages was when I saw that something",
    "start": "130160",
    "end": "136360"
  },
  {
    "text": "could be a programming language and not basic when I got hold of a fourth compiler and that was a great language",
    "start": "136360",
    "end": "142319"
  },
  {
    "text": "yes you have a book I got it from the library back then I couldn't actually get a book so I I don't own it it was",
    "start": "142319",
    "end": "148640"
  },
  {
    "text": "one of many passions until I started University in computer science and decided programming languages were my",
    "start": "148640",
    "end": "153800"
  },
  {
    "text": "thing got deeply involved in the beta programming language project which was",
    "start": "153800",
    "end": "160519"
  },
  {
    "text": "the second language child of Kristen niggard and and others that was very",
    "start": "160519",
    "end": "165640"
  },
  {
    "text": "exciting because it was this kind of attempt to think outside of the box and",
    "start": "165640",
    "end": "171599"
  },
  {
    "text": "expand unify in ways that the sort of industrial Community hadn't really imagined so I love those I was always",
    "start": "171599",
    "end": "179000"
  },
  {
    "text": "more in love with the programming languages and with the programming I think that was probably my",
    "start": "179000",
    "end": "184680"
  },
  {
    "text": "main handicap from the start so I was really lucky I I thought I was going to research programming languages and I was",
    "start": "184680",
    "end": "190480"
  },
  {
    "text": "a professor for a few years but I was really lucky when I got to work on the T design team meeting Anders hburg at that",
    "start": "190480",
    "end": "197000"
  },
  {
    "text": "famous theu conference that you're referencing and getting to work with Eric on the design of",
    "start": "197000",
    "end": "204720"
  },
  {
    "text": "C which I've done ever since I never got out unlike Eric I I didn't bring in",
    "start": "204720",
    "end": "210519"
  },
  {
    "text": "I don't know parachute I'm still stuck here designing C",
    "start": "210519",
    "end": "216599"
  },
  {
    "text": "Eric yeah like first I want to kind like defend Visual Basic a little bit I think it gets like a lot of critique but it",
    "start": "216599",
    "end": "225000"
  },
  {
    "text": "actually pioneered a lot of things like gradual typing which is now everywhere",
    "start": "225000",
    "end": "230840"
  },
  {
    "text": "but like Visual Basic had that you know with option strict all not to strict off",
    "start": "230840",
    "end": "236079"
  },
  {
    "text": "I think if you look at for example link and Visual Basic queries there are fully",
    "start": "236079",
    "end": "241280"
  },
  {
    "text": "compositional so I do think that like Visual Basic has like maybe a little bit of a bad reputation where in practice",
    "start": "241280",
    "end": "247519"
  },
  {
    "text": "it's better than it is but so just wanted to defend this kind cool language",
    "start": "247519",
    "end": "254319"
  },
  {
    "text": "it's interesting that Matt said that he started with fourth before I went to University I had a friend who had a TRS",
    "start": "254319",
    "end": "260680"
  },
  {
    "text": "ad and he tried to get teach me or show me basic and this is that not Visual",
    "start": "260680",
    "end": "265720"
  },
  {
    "text": "Basic but whatever regular basic and it's like dim x = x + 1 and I was completely puzzled by that what it's",
    "start": "265720",
    "end": "273039"
  },
  {
    "text": "like how can X be X+ one that that is impossible and then I said okay maybe I",
    "start": "273039",
    "end": "279960"
  },
  {
    "text": "should try this computer science Stu and then in college I literally had the C",
    "start": "279960",
    "end": "285240"
  },
  {
    "text": "Stoner friend if you go to his storm room it was thick with smoke and he was",
    "start": "285240",
    "end": "291160"
  },
  {
    "text": "like a big Fort fan and one of and like there's like beautiful kind pictures in",
    "start": "291160",
    "end": "297360"
  },
  {
    "text": "here so that's I liked oh that's a book with got like nice drawings in there but",
    "start": "297360",
    "end": "303160"
  },
  {
    "text": "he showed me that he could redefine two S3 or something and then he Gott like",
    "start": "303160",
    "end": "308600"
  },
  {
    "text": "you know that was hilarious for him and oh wow this programing language stuff is really interesting so I came into",
    "start": "308600",
    "end": "315880"
  },
  {
    "text": "programming languages by seeing things that I didn't understand um and wanting to",
    "start": "315880",
    "end": "322720"
  },
  {
    "text": "understand and then my start in college I was a little",
    "start": "322720",
    "end": "328919"
  },
  {
    "text": "bit rough I was kind like spending my time hacking we had an IBM 370 and the sport was to kind",
    "start": "328919",
    "end": "337080"
  },
  {
    "text": "try to get these VMS down just before the exercises were due and so on with a",
    "start": "337080",
    "end": "344240"
  },
  {
    "text": "friend we were having little competitions where we would do Prime sees and like we you we're using like",
    "start": "344240",
    "end": "352800"
  },
  {
    "text": "virtual data cycles and so Professor got me into his room and said Eric this is",
    "start": "352800",
    "end": "359080"
  },
  {
    "text": "ending bad ly and so what he gave me actually he um gave me a little leaflet",
    "start": "359080",
    "end": "364680"
  },
  {
    "text": "about the fifth generation project and that was kind so that prolock is not I",
    "start": "364680",
    "end": "370080"
  },
  {
    "text": "think the language that sa me this is the first programming language where I went wow that makes sense that actually",
    "start": "370080",
    "end": "377960"
  },
  {
    "text": "makes sense unlike fourth and basic prog actually made sense maybe because it's",
    "start": "377960",
    "end": "383880"
  },
  {
    "text": "closer to math and then this was Raymond bu by the way Professor Raymond then he",
    "start": "383880",
    "end": "389919"
  },
  {
    "text": "also showed me ceso and then I got into functional programming so it's really",
    "start": "389919",
    "end": "395479"
  },
  {
    "text": "kep I started out by just really tearing my hair out when I still had hair really",
    "start": "395479",
    "end": "402720"
  },
  {
    "text": "not understanding what these kind of crazy programming language were doing then when I discovered more declarative",
    "start": "402720",
    "end": "409160"
  },
  {
    "text": "kind like mathematical languages then it all clicked it was like okay this is something I really want to do for the",
    "start": "409160",
    "end": "414880"
  },
  {
    "text": "rest of my life even though I kep yes I have a parachute but I'm still like with",
    "start": "414880",
    "end": "420639"
  },
  {
    "text": "one arm in the programming language space that's great thanks the sort of General wisdom given to software",
    "start": "420639",
    "end": "428120"
  },
  {
    "text": "Executives is to avoid language Wars at all costs you hope that none break out",
    "start": "428120",
    "end": "433400"
  },
  {
    "text": "in your organization because if it does it means things are going to be hell for you how",
    "start": "433400",
    "end": "439199"
  },
  {
    "text": "important is the language why are why so I think the language is kep like",
    "start": "439199",
    "end": "447120"
  },
  {
    "text": "both important and not important and for various reasons so let me just I",
    "start": "447120",
    "end": "455240"
  },
  {
    "text": "can like I just have a stack of books so this is got like one another book that has been super influential and actually",
    "start": "455240",
    "end": "461960"
  },
  {
    "text": "I still write with a fountain pen it's called a method the English title a method of programming is text and F and",
    "start": "461960",
    "end": "468840"
  },
  {
    "text": "you see here two fountain pens and what they are saying is that it really doesn't matter kind like what language",
    "start": "468840",
    "end": "474960"
  },
  {
    "text": "you use it's about algorithms and that reasoning about algorithms so in that",
    "start": "474960",
    "end": "481919"
  },
  {
    "text": "sense yes the language really doesn't matter because that's just a way to",
    "start": "481919",
    "end": "487280"
  },
  {
    "text": "express like a more platonic ideal of an algorithm also if you look at the whole",
    "start": "487280",
    "end": "494680"
  },
  {
    "text": "software life cycle the G black you know the programming is just a little part of",
    "start": "494680",
    "end": "500159"
  },
  {
    "text": "the G black whole thing and I think we're maybe over fidgeting on that on the other",
    "start": "500159",
    "end": "505720"
  },
  {
    "text": "hand I do think that languages are important because people like syntax or dislike",
    "start": "505720",
    "end": "513159"
  },
  {
    "text": "other syntax if you want to express yourself you want to get right something in a certain way if it's to for both you",
    "start": "513159",
    "end": "520279"
  },
  {
    "text": "don't like it type systems play a role so it's interesting is that at some",
    "start": "520279",
    "end": "525480"
  },
  {
    "text": "level they don't matter but at another matter level they really matter that's the best answer I can give",
    "start": "525480",
    "end": "532000"
  },
  {
    "text": "I don't disagree I think that they probably matter more they matter as a",
    "start": "532000",
    "end": "537320"
  },
  {
    "text": "means of communication for humans right it's how well can you express your thoughts and also what people often",
    "start": "537320",
    "end": "544000"
  },
  {
    "text": "forget is that programs are read much more often than they're written and so how often do they convey or how well do",
    "start": "544000",
    "end": "549760"
  },
  {
    "text": "they convey ideas to others how well can you use them to easily express and make easily accessible to someone else is",
    "start": "549760",
    "end": "556360"
  },
  {
    "text": "proficient in the language so I think it does matter there but I also want to say that when",
    "start": "556360",
    "end": "562519"
  },
  {
    "text": "you bring up language Wars I think I see fewer of those",
    "start": "562519",
    "end": "568200"
  },
  {
    "text": "nowadays I think that we've gone from a a language landscape that was very much",
    "start": "568200",
    "end": "574120"
  },
  {
    "text": "encamps the object gr programming language over here the functional programming languages over here to much",
    "start": "574120",
    "end": "579680"
  },
  {
    "text": "more of a meeting in the middle we start crowding the middle a little certainly I participated in a in the long running",
    "start": "579680",
    "end": "587120"
  },
  {
    "text": "Heist alongside with Eric in the beginning of siphoning functional",
    "start": "587120",
    "end": "592560"
  },
  {
    "text": "programming language features into the into C which was from the outset of very",
    "start": "592560",
    "end": "598279"
  },
  {
    "text": "optic gr of programming line and you see this on both sides and languages like scolar that have a sort",
    "start": "598279",
    "end": "605079"
  },
  {
    "text": "of their their whole Credo like why they exist is uh to try to unify language",
    "start": "605079",
    "end": "613640"
  },
  {
    "text": "paradigms so I think the paradigms and the camps have been that those",
    "start": "613640",
    "end": "619519"
  },
  {
    "text": "boundaries have been softened by a lot of pragmatism and a lot of borrowing and",
    "start": "619519",
    "end": "624720"
  },
  {
    "text": "I think a lot of insight around how can these previously very separate things work well together in a language I think",
    "start": "624720",
    "end": "631279"
  },
  {
    "text": "we've come a long way on that so another thing to mention here and again I'm going to show and all my stack of books",
    "start": "631279",
    "end": "639399"
  },
  {
    "text": "here this is got denotational semantics that's one of my favorite",
    "start": "639399",
    "end": "644760"
  },
  {
    "text": "topics one of the things that if you look at the semantics the denotational semantics of a language then a lot of",
    "start": "644760",
    "end": "651600"
  },
  {
    "text": "these languages that look different on the surface actually got at the same semantic domain so when Matt says we",
    "start": "651600",
    "end": "658800"
  },
  {
    "text": "have been in in features from functional programming into o because really a",
    "start": "658800",
    "end": "665160"
  },
  {
    "text": "closure and an object if you look at it semantically or even implementation wise",
    "start": "665160",
    "end": "670399"
  },
  {
    "text": "they are exactly the same thing so that was actually a whole that was a whole point of beta was that closures and a",
    "start": "670399",
    "end": "678760"
  },
  {
    "text": "lot of the point was to unify closures and objects or or classes into the same concept y so often it's actually better",
    "start": "678760",
    "end": "685720"
  },
  {
    "text": "to get focus on what is similar than on what is different I'm really happy that I see that more and more like these",
    "start": "685720",
    "end": "692519"
  },
  {
    "text": "language Wars they just evaporate because people that like more and more emphasize that it's just not this or",
    "start": "692519",
    "end": "699680"
  },
  {
    "text": "that it's these things are conceptually the same thing and then they can kep",
    "start": "699680",
    "end": "705000"
  },
  {
    "text": "live together in the same language very nicely and elegantly great thank",
    "start": "705000",
    "end": "712440"
  },
  {
    "text": "you the programming language is of course the important expression of the comput ation and so on",
    "start": "712440",
    "end": "721040"
  },
  {
    "text": "but can find your description system called literate programming when he did Tech we have large greens mulle fonts",
    "start": "721040",
    "end": "728760"
  },
  {
    "text": "Unicode emphasis colors shouldn't we think about making programs a lot more",
    "start": "728760",
    "end": "734839"
  },
  {
    "text": "readable even alol 60 had a publication format or just get a pretty Pender and",
    "start": "734839",
    "end": "741079"
  },
  {
    "text": "that's good this is funny because for decades people have been trying to push",
    "start": "741079",
    "end": "750480"
  },
  {
    "text": "non-textual or not just textual forms of",
    "start": "750480",
    "end": "755680"
  },
  {
    "text": "programming and not completely without success in particular in education",
    "start": "755680",
    "end": "761000"
  },
  {
    "text": "languages like scratch and so on they actually they serve a purpose of people understanding the structure of",
    "start": "761000",
    "end": "766839"
  },
  {
    "text": "programming more visually but by and large it's been a disappointment that we haven't been able even as we've been",
    "start": "766839",
    "end": "773279"
  },
  {
    "text": "able to as you say physically Express other things and text on computer screens it that hasn't",
    "start": "773279",
    "end": "780839"
  },
  {
    "text": "really clicked with programming languages even like structured programming you ultimately had textual",
    "start": "780839",
    "end": "786760"
  },
  {
    "text": "representation but you were using building block techniques to to build them it didn't really pan out as an",
    "start": "786760",
    "end": "793800"
  },
  {
    "text": "editing Paradigm as such what happened instead is that the textual format has",
    "start": "793800",
    "end": "799360"
  },
  {
    "text": "survived completely but tooling has devolved to assist you much better in",
    "start": "799360",
    "end": "806320"
  },
  {
    "text": "getting a more a deeper and more many colored understanding of the code that you're looking at and better tools for",
    "start": "806320",
    "end": "813320"
  },
  {
    "text": "manipulating it as well so it's like the programming language themselves have persisted I don't know exactly why but",
    "start": "813320",
    "end": "818920"
  },
  {
    "text": "they persisted breaking out of text as cord format but the tooling around the text",
    "start": "818920",
    "end": "824680"
  },
  {
    "text": "has become very much better over the years I would",
    "start": "824680",
    "end": "830560"
  },
  {
    "text": "say da Dave I think you the liter",
    "start": "830560",
    "end": "836000"
  },
  {
    "text": "programming is already the norm it's called notebook um if you look at for example this book",
    "start": "836000",
    "end": "842920"
  },
  {
    "text": "this is like a printed book but there's also an executable notebook that is got",
    "start": "842920",
    "end": "848079"
  },
  {
    "text": "exactly that got same text that's in this book and you can play around with",
    "start": "848079",
    "end": "853320"
  },
  {
    "text": "it so yeah I do think that notebooks are the the de facto standard for literate",
    "start": "853320",
    "end": "861680"
  },
  {
    "text": "programming and then of course I think a lot of people I think not enough people",
    "start": "861680",
    "end": "867480"
  },
  {
    "text": "I should say know it but if you look mathematic for on but there you can really Define",
    "start": "867480",
    "end": "874120"
  },
  {
    "text": "beautiful text with that's not Plus+ kind of thing so I do think that this is",
    "start": "874120",
    "end": "881639"
  },
  {
    "text": "already the norm it's not like the literate programming as may be envisioned but I think it's",
    "start": "881639",
    "end": "889639"
  },
  {
    "text": "just like what everybody like maybe not computer scientist but everybody else is using two things that go in and out of",
    "start": "889639",
    "end": "896880"
  },
  {
    "text": "bads in languages syntax Mac and operator overloaded should both of those",
    "start": "896880",
    "end": "902040"
  },
  {
    "text": "be considered harmful I I can take",
    "start": "902040",
    "end": "907800"
  },
  {
    "text": "this I think these are like abstractions can go too far so some things are got",
    "start": "907800",
    "end": "914639"
  },
  {
    "text": "good but you can also take it too far so if you like one of the for me at least",
    "start": "914639",
    "end": "919880"
  },
  {
    "text": "and I'm pretty sure for many other people like naming is one of the hardest Nam right there's not many good names",
    "start": "919880",
    "end": "926560"
  },
  {
    "text": "and so you have a function and oh like you know you give it a great name say FU or bar and now you need this function",
    "start": "926560",
    "end": "933759"
  },
  {
    "text": "with that different arguments number of arguments different types of arguments and it's got exactly this doing the same",
    "start": "933759",
    "end": "940480"
  },
  {
    "text": "thing except that the arguments are different now we don't really want to get give that the same name so I think",
    "start": "940480",
    "end": "947079"
  },
  {
    "text": "there's often a good reason to have overloading now if you look at this say",
    "start": "947079",
    "end": "952360"
  },
  {
    "text": "Java language spec or the C language spec and you look up the G sections on overload resolution those are typically",
    "start": "952360",
    "end": "959920"
  },
  {
    "text": "the got like the gnarliest that got like the hardest got part of the language back and I see Matt crying there because",
    "start": "959920",
    "end": "967199"
  },
  {
    "text": "it's it's really tough yep and then the same thing with like macros and stuff",
    "start": "967199",
    "end": "972519"
  },
  {
    "text": "there people are try to like adding stuff to the language that is maybe not",
    "start": "972519",
    "end": "978360"
  },
  {
    "text": "really part of the language and now like it's like everybody's designing their own language and and language design is",
    "start": "978360",
    "end": "985399"
  },
  {
    "text": "really hard so yeah it's like a knife right it's you can use it for good and you can use it for bad but use sparingly",
    "start": "985399",
    "end": "992920"
  },
  {
    "text": "I think these things are pretty useful and but again you have to restrain yourself and use it SC like in the right",
    "start": "992920",
    "end": "1002160"
  },
  {
    "text": "way I can I can't disagree I think macros in syntax macros",
    "start": "1002160",
    "end": "1009079"
  },
  {
    "text": "are I really don't like those because I think they're mixing the programming and",
    "start": "1009079",
    "end": "1015160"
  },
  {
    "text": "the metaprogramming layer if you will they put a mechanism for creating Source text into the source",
    "start": "1015160",
    "end": "1025558"
  },
  {
    "text": "text that leads to many sort of bad effects on the boundary so I think",
    "start": "1025559",
    "end": "1032640"
  },
  {
    "text": "people have been trying to solve meta programming how can I programmatically I know how to I I need all this program",
    "start": "1032640",
    "end": "1038959"
  },
  {
    "text": "how can I programmatic get this without having to write it all and maintain it all that's a thing that we continue to",
    "start": "1038959",
    "end": "1047240"
  },
  {
    "text": "struggle with there are various different approaches to it Eric and I",
    "start": "1047240",
    "end": "1052320"
  },
  {
    "text": "put some runtime meta programming into C when we were together on that and in the form of expression",
    "start": "1052320",
    "end": "1059120"
  },
  {
    "text": "trees which is a much more disciplined approach also nowadays we we have a lot",
    "start": "1059120",
    "end": "1065760"
  },
  {
    "text": "of compile time Source generation mechanisms and uh C that integrates well",
    "start": "1065760",
    "end": "1072559"
  },
  {
    "text": "with the compiler itself that makes it easier to to keep your layers apart and to reason about what happened and to",
    "start": "1072559",
    "end": "1080559"
  },
  {
    "text": "find the boundaries where something between what the actual code is and",
    "start": "1080559",
    "end": "1085840"
  },
  {
    "text": "where some magic happens another thing there I think",
    "start": "1085840",
    "end": "1091120"
  },
  {
    "text": "that's if you if we talk about macros I think there's also a very common like",
    "start": "1091120",
    "end": "1096440"
  },
  {
    "text": "820 solution which are blocks right like blocks has been around for a long time but if you look at C or say imperative",
    "start": "1096440",
    "end": "1104640"
  },
  {
    "text": "languages that are using them now like Scala or cotland they the fact that you",
    "start": "1104640",
    "end": "1109720"
  },
  {
    "text": "can use girly brace SC like statement curly brace and that SC has implicitly",
    "start": "1109720",
    "end": "1116039"
  },
  {
    "text": "got function now you can get write a lot of control structures that people want",
    "start": "1116039",
    "end": "1121640"
  },
  {
    "text": "to write using syntax macros you can write them as regular functions and it",
    "start": "1121640",
    "end": "1126919"
  },
  {
    "text": "looks even as something that's built in so there's these kind of little tricks where you do kind of syntactic tricks on",
    "start": "1126919",
    "end": "1133760"
  },
  {
    "text": "blocks that can give you I would say 80% of the benefits and like % of the of the",
    "start": "1133760",
    "end": "1140960"
  },
  {
    "text": "conceptual cost so little more abstract question",
    "start": "1140960",
    "end": "1148559"
  },
  {
    "text": "it's been said that developers can only use one or two parms for example I'm",
    "start": "1148559",
    "end": "1155480"
  },
  {
    "text": "comfortable in procedural o and FP but absolutely brutal in logic programming I still have confused with SQL as I get",
    "start": "1155480",
    "end": "1162559"
  },
  {
    "text": "nid SQL I have to invert my head look at it do you think there's any truth to the",
    "start": "1162559",
    "end": "1168159"
  },
  {
    "text": "fact that you you can only think in certain programming languages and translate into the others or is it just",
    "start": "1168159",
    "end": "1175400"
  },
  {
    "text": "lack of experience I don't like putting a limit on human capacity",
    "start": "1175400",
    "end": "1183120"
  },
  {
    "text": "here I think it's fundamentally that's a cognitive question you're asking which",
    "start": "1183120",
    "end": "1188880"
  },
  {
    "text": "neither us I guess are experts in but it in my experience it just takes a while",
    "start": "1188880",
    "end": "1196120"
  },
  {
    "text": "to get used to something new I think of these programming languages have an inner logic to them or these paradigms",
    "start": "1196120",
    "end": "1202280"
  },
  {
    "text": "have an inner logic to them that can be really hard to get Eric described his experience um with that early on I think we all",
    "start": "1202280",
    "end": "1210280"
  },
  {
    "text": "have that I had that with functional programming for sure I was I was halfway into I have a few books as well halfway",
    "start": "1210280",
    "end": "1215799"
  },
  {
    "text": "into this book that I know Eric loves uh before functional programming started to click for me recursion and those things",
    "start": "1215799",
    "end": "1222880"
  },
  {
    "text": "just that you have to wrap your mind around it Tak oh wa it's we're book twins",
    "start": "1222880",
    "end": "1229200"
  },
  {
    "text": "and it's a good version the good Edition but so it takes effort it takes time but",
    "start": "1229200",
    "end": "1236360"
  },
  {
    "text": "I don't think I don't think you either Dave are actually you have a a hard limit against",
    "start": "1236360",
    "end": "1244120"
  },
  {
    "text": "a learning logic programming I think if you applied yourself and gave it time",
    "start": "1244120",
    "end": "1249400"
  },
  {
    "text": "gave your open yourself up and let the S wash over you of how that all works I",
    "start": "1249400",
    "end": "1254880"
  },
  {
    "text": "think you get it in the end and and I don't think we're Limited like that for me I think it is about",
    "start": "1254880",
    "end": "1263640"
  },
  {
    "text": "compositionality that is what kind makes it easy for me to comprehend things one of the reason things that I don't like",
    "start": "1263640",
    "end": "1270320"
  },
  {
    "text": "about SQL is that it's not compositional because stable can only be flat there",
    "start": "1270320",
    "end": "1276120"
  },
  {
    "text": "cannot be nested tables of course there's extensions of SQL that allow that but just the",
    "start": "1276120",
    "end": "1282159"
  },
  {
    "text": "regular relational algebra doesn't allow and you see that in the SQL language like you do a group bar you initially",
    "start": "1282159",
    "end": "1288039"
  },
  {
    "text": "have to do an aggregate because you cannot create a nested table that's what",
    "start": "1288039",
    "end": "1293440"
  },
  {
    "text": "I found the beauty and Link is where it is compositional right you can first do a group by and now you get a a list of",
    "start": "1293440",
    "end": "1302200"
  },
  {
    "text": "lists and then you can can do an aggregate or filter so it's much easier to break down a complex expression into",
    "start": "1302200",
    "end": "1309200"
  },
  {
    "text": "little parts and then understand each step in some sense and now people might",
    "start": "1309200",
    "end": "1315919"
  },
  {
    "text": "laugh but imperative programming is compositional and that sense as well where you can look at each statement and",
    "start": "1315919",
    "end": "1322240"
  },
  {
    "text": "kind try to understand of course the statements can have side effects that why are people are laughing but still you can break the computation down into",
    "start": "1322240",
    "end": "1330000"
  },
  {
    "text": "parts and you can kind of Reason about each kind intermediate result and so with SQL that's hard also",
    "start": "1330000",
    "end": "1337120"
  },
  {
    "text": "with logic programming I think that's pretty hard I was attracted to that in the very beginning but then the",
    "start": "1337120",
    "end": "1344080"
  },
  {
    "text": "operational semantics there is really complicated with cuts and backtracking",
    "start": "1344080",
    "end": "1349320"
  },
  {
    "text": "now it's very hard to reason about that compositionally so you have a beautiful mathematical model but the",
    "start": "1349320",
    "end": "1354919"
  },
  {
    "text": "implementation doesn't quite match the kind like that ideal then it becomes hard to reason about it to me that's",
    "start": "1354919",
    "end": "1362039"
  },
  {
    "text": "really the kind of thing as long as it's compositional then my limited brain power can handle it as long when it",
    "start": "1362039",
    "end": "1369760"
  },
  {
    "text": "becomes noncompositional my peanut size brand just gives",
    "start": "1369760",
    "end": "1374880"
  },
  {
    "text": "up so mads in recent years you've been uh leading the Embrace language feature",
    "start": "1374880",
    "end": "1381120"
  },
  {
    "text": "X as you mentioned earlier and extend C to enable as much of X as you can some",
    "start": "1381120",
    "end": "1389279"
  },
  {
    "text": "of think you've taken enough of X but you're constrained by what C is dynamic types FP pattern matching",
    "start": "1389279",
    "end": "1398000"
  },
  {
    "text": "compile time evaluation Etc what are the most recent Innovations in C any hints",
    "start": "1398000",
    "end": "1404120"
  },
  {
    "text": "on what's coming next we can talk about a few things one we are in the proc process I want to say of putting into C",
    "start": "1404120",
    "end": "1410400"
  },
  {
    "text": "right now is is sort of a few of the next steps on a journey to put",
    "start": "1410400",
    "end": "1416720"
  },
  {
    "text": "programming with immutable data types more in an equal footing with the the sort of profound imperativeness the the",
    "start": "1416720",
    "end": "1424240"
  },
  {
    "text": "mutability that it's is at the core of C it's just time that we Embrace more of",
    "start": "1424240",
    "end": "1430279"
  },
  {
    "text": "an immutable Paradigm in the language as well so we've done some things there with records around immutability that",
    "start": "1430279",
    "end": "1437159"
  },
  {
    "text": "help bring a more value oriented uh perspective give that more first class",
    "start": "1437159",
    "end": "1442640"
  },
  {
    "text": "thing one of the things that has been a a a theme in our investigations for years and we're still inching towards",
    "start": "1442640",
    "end": "1449520"
  },
  {
    "text": "is and I think we'll be several releases before we really nail it still is what",
    "start": "1449520",
    "end": "1454919"
  },
  {
    "text": "is best embodied by hasc's type classes which is the ability",
    "start": "1454919",
    "end": "1461400"
  },
  {
    "text": "to make a given concrete you can say like a given concrete type or entity",
    "start": "1461919",
    "end": "1467279"
  },
  {
    "text": "match a given abstraction after the fact right there's",
    "start": "1467279",
    "end": "1472440"
  },
  {
    "text": "this usually there's two ends there's the the abstraction and there's the concrete thing I think I used the",
    "start": "1472440",
    "end": "1478000"
  },
  {
    "text": "opposite hands before and then you either one of them has to say that it fits the that the two fit together right",
    "start": "1478000",
    "end": "1485960"
  },
  {
    "text": "but what haspel can do with type classes is that you can have those two dep exist independent of each other and then a",
    "start": "1485960",
    "end": "1492360"
  },
  {
    "text": "third entity can come in and say oh by the way this thing fits that abstraction and here's how look",
    "start": "1492360",
    "end": "1498840"
  },
  {
    "text": "the thing that matches it up which I think has profound implications for for",
    "start": "1498840",
    "end": "1504240"
  },
  {
    "text": "software development software Evolution itself right when you don't have to go and hack things together and you don't",
    "start": "1504240",
    "end": "1510440"
  },
  {
    "text": "have to have these dependencies between things that are fundamentally independent in order to express a relationship so that's something that",
    "start": "1510440",
    "end": "1517440"
  },
  {
    "text": "we're really hacking away at from at at a deep level trying to find the objectoriented equivalent of that would",
    "start": "1517440",
    "end": "1525159"
  },
  {
    "text": "fit well into something like C I don't know if we'll succeed but we have some really good ideas very interesting Eric",
    "start": "1525159",
    "end": "1531240"
  },
  {
    "text": "you've been leading the ml efforts at Facebook and as usual you've taken the",
    "start": "1531240",
    "end": "1538640"
  },
  {
    "text": "path less known to solve that uh you briefly explain this whole notion of probalistic programming and how you see",
    "start": "1538640",
    "end": "1545600"
  },
  {
    "text": "that becoming a first class feature in languages yeah absolutely let me kind gra my book for that",
    "start": "1545600",
    "end": "1553559"
  },
  {
    "text": "here I think one of the things that when I started with probalistic programming",
    "start": "1553559",
    "end": "1559080"
  },
  {
    "text": "um the idea was maybe too naive if you look",
    "start": "1559080",
    "end": "1565440"
  },
  {
    "text": "at probabilities or uncertainty those are an effect because there's a you have",
    "start": "1565440",
    "end": "1570640"
  },
  {
    "text": "the probability Monet so just latency is an effect that's where you use tasks or",
    "start": "1570640",
    "end": "1576880"
  },
  {
    "text": "nondeterminism is an effect that's where you use lists uncertainty is also an effect and",
    "start": "1576880",
    "end": "1583240"
  },
  {
    "text": "that's where you use the the probability Mon and so the idea was like Hey we got like have these things built in C has",
    "start": "1583240",
    "end": "1591240"
  },
  {
    "text": "tasks built in JavaScript has tasks built in with asyn and so can we do the same thing for something like",
    "start": "1591240",
    "end": "1598360"
  },
  {
    "text": "probability distributions where instead of awaiting a task you can sample from a probability",
    "start": "1598360",
    "end": "1604320"
  },
  {
    "text": "distribution at that level it sounds really doable now there were two",
    "start": "1604320",
    "end": "1610559"
  },
  {
    "text": "problems one is in order to get implement the probability Monet you",
    "start": "1610559",
    "end": "1616159"
  },
  {
    "text": "basically have to do Mard simulations means you have to run your program a lot",
    "start": "1616159",
    "end": "1621320"
  },
  {
    "text": "of times in with like making different choices along the way and then you just tally up all the outputs to get your",
    "start": "1621320",
    "end": "1628399"
  },
  {
    "text": "posterior distribution now people are trying to be smart to get to this",
    "start": "1628399",
    "end": "1633440"
  },
  {
    "text": "multicar culation or inference and more smart but ultimately it still that means",
    "start": "1633440",
    "end": "1640360"
  },
  {
    "text": "you have to get run the program a lot of times so it will always be slow it's",
    "start": "1640360",
    "end": "1645440"
  },
  {
    "text": "hard to embed that in another program and then the second thing and that's why",
    "start": "1645440",
    "end": "1651440"
  },
  {
    "text": "the my book here it really requires a lot of statistical sophistication so you",
    "start": "1651440",
    "end": "1657799"
  },
  {
    "text": "have to understand what is a beta distribution what's the GMA distribution how do they",
    "start": "1657799",
    "end": "1663760"
  },
  {
    "text": "interact I discovered that it's not something I think that's ready yet for the masses but it's a really useful tool",
    "start": "1663760",
    "end": "1671600"
  },
  {
    "text": "for mathematicians data scientists to write basian models and these are",
    "start": "1671600",
    "end": "1679360"
  },
  {
    "text": "typically kind of pretty small but super powerful so it's more domain specialist",
    "start": "1679360",
    "end": "1686080"
  },
  {
    "text": "cap language and embedding them or like thinking of this thing as part of a",
    "start": "1686080",
    "end": "1691480"
  },
  {
    "text": "general purpose language where regular developers can use it I think it's still a bridge too far maybe in the future and",
    "start": "1691480",
    "end": "1698240"
  },
  {
    "text": "but right now I think we pivoted to being a more Niche language for a very",
    "start": "1698240",
    "end": "1704799"
  },
  {
    "text": "more narrowly defined group of users",
    "start": "1704799",
    "end": "1710120"
  },
  {
    "text": "what do you think Beyond those two things you just talked about are the most challenging problems in language design",
    "start": "1710360",
    "end": "1716559"
  },
  {
    "text": "implementation clearly the two you mentioned are have some others here's",
    "start": "1716559",
    "end": "1722000"
  },
  {
    "text": "the other thing where I'm looking at currently and a lot of people is deep learning is very popular and deep",
    "start": "1722000",
    "end": "1729720"
  },
  {
    "text": "learning involves a lot of linear algebra where you're taking matrix",
    "start": "1729720",
    "end": "1734799"
  },
  {
    "text": "multiplication and addition and then you're running that on accelerators now if you think about like",
    "start": "1734799",
    "end": "1742399"
  },
  {
    "text": "general purpose differentiable programming where you can also allow like regular codes now you have programs",
    "start": "1742399",
    "end": "1749640"
  },
  {
    "text": "that have to get do both right they have to do matrix multiplication and they have to do more",
    "start": "1749640",
    "end": "1755760"
  },
  {
    "text": "imperative code this is it's in some sense similar what we had with link where you have a",
    "start": "1755760",
    "end": "1762320"
  },
  {
    "text": "part that you want to run in the database because that's efficient and parts that you want to run on a more",
    "start": "1762320",
    "end": "1768240"
  },
  {
    "text": "kind of traditional VM or CPU taking a program and mapping it to a",
    "start": "1768240",
    "end": "1774519"
  },
  {
    "text": "heterogeneous Hardware backend that really accelerates different pieces of",
    "start": "1774519",
    "end": "1779679"
  },
  {
    "text": "the program appropriately I think is a very big problem and and interrupt is",
    "start": "1779679",
    "end": "1785720"
  },
  {
    "text": "still this is stange I I the book is still in my cap drawer there but like in",
    "start": "1785720",
    "end": "1791720"
  },
  {
    "text": "Java the jni that's again like how you interface between Java and native code",
    "start": "1791720",
    "end": "1797720"
  },
  {
    "text": "in net we tried a lot of things there as well but still really doing interrupt",
    "start": "1797720",
    "end": "1804080"
  },
  {
    "text": "between languages and different memory models garbage collector no garbage collector you want to minimize the data",
    "start": "1804080",
    "end": "1810200"
  },
  {
    "text": "movement that's still a huge open problem and I think we will need many",
    "start": "1810200",
    "end": "1815799"
  },
  {
    "text": "more years to like fix that I agree with those and I want to add good old",
    "start": "1815799",
    "end": "1822720"
  },
  {
    "text": "concurrency it in a sense so I think we still haven't really nailed",
    "start": "1822720",
    "end": "1828559"
  },
  {
    "text": "concurrency and parallelism we have there are certain domains like data parallelism where we we have the",
    "start": "1828559",
    "end": "1834559"
  },
  {
    "text": "abstractions we need focusing more on immutable data types helps with some of",
    "start": "1834559",
    "end": "1840000"
  },
  {
    "text": "that you don't have shared mutable state to synchronize on when you don't have mutable state so there are ways and",
    "start": "1840000",
    "end": "1846880"
  },
  {
    "text": "domains where we're making inrs here but at the core I",
    "start": "1846880",
    "end": "1852279"
  },
  {
    "text": "feel maybe it's back to the the textual format of programming in a sense text",
    "start": "1852279",
    "end": "1857600"
  },
  {
    "text": "being inherently sequential that we or our brains I don't know but we struggle",
    "start": "1857600",
    "end": "1863200"
  },
  {
    "text": "to come from a language design perspective I think we've struggled to come up",
    "start": "1863200",
    "end": "1868679"
  },
  {
    "text": "with good abstractions that are inherently massively",
    "start": "1868679",
    "end": "1876200"
  },
  {
    "text": "parallel and that synchronized naturally in a way that this wouldn't be so hard I",
    "start": "1876200",
    "end": "1882639"
  },
  {
    "text": "think so and maybe I don't know if there's a solution there but this this keeps haunting us and not really having",
    "start": "1882639",
    "end": "1889399"
  },
  {
    "text": "we understand the theory of it but the abstractions that let you actually",
    "start": "1889399",
    "end": "1894919"
  },
  {
    "text": "program safely in a way that scales and it's and",
    "start": "1894919",
    "end": "1900880"
  },
  {
    "text": "doesn't have synchronization bugs in it that is just something we still don't",
    "start": "1900880",
    "end": "1908679"
  },
  {
    "text": "do so back down to the boring world of today or the exciting world of today",
    "start": "1908679",
    "end": "1914880"
  },
  {
    "text": "depending on your perspective surveys says that these five languages are the most",
    "start": "1914880",
    "end": "1923480"
  },
  {
    "text": "loved the ones that school kids should be using rust length I think rust was",
    "start": "1923480",
    "end": "1931360"
  },
  {
    "text": "86% and then the rest tied for order 60%",
    "start": "1931360",
    "end": "1936760"
  },
  {
    "text": "typescript python cotland go Julia Dart C Swift and",
    "start": "1936760",
    "end": "1943000"
  },
  {
    "text": "JavaScript what are your thoughts on these languages go first very different some",
    "start": "1943000",
    "end": "1949880"
  },
  {
    "text": "of them you I'm guessing you're referring to the stack Overflow survey the most loved languages",
    "start": "1949880",
    "end": "1956399"
  },
  {
    "text": "there and there very there different reasons why languages I loved some of them are like Cults right where people",
    "start": "1956399",
    "end": "1963120"
  },
  {
    "text": "would never dream of using them unless they were in love with them because no uh company in their right mind would",
    "start": "1963120",
    "end": "1968760"
  },
  {
    "text": "mandate the use of that language some of them they're very clean and very conceptually orthogonal and maybe",
    "start": "1968760",
    "end": "1975519"
  },
  {
    "text": "focused on a very particular value propos so if you go use it it's because you chose to",
    "start": "1975519",
    "end": "1981919"
  },
  {
    "text": "do I I think",
    "start": "1981919",
    "end": "1987559"
  },
  {
    "text": "that you you have to find your audience and then in the long run if you want to stay loved you have to I'm glad we were",
    "start": "1987559",
    "end": "1994320"
  },
  {
    "text": "on that list somewhere with C you have to stay responsive to that audience even as you seek to expand it's a difficult",
    "start": "1994320",
    "end": "2001240"
  },
  {
    "text": "thing where you really have to keep listening you have to uh put your grand",
    "start": "2001240",
    "end": "2007159"
  },
  {
    "text": "ideas a little to the side and try to listen for a signal on what do the",
    "start": "2007159",
    "end": "2012919"
  },
  {
    "text": "existing users of this programming language need next stay in a virtuous cycle there I I",
    "start": "2012919",
    "end": "2020240"
  },
  {
    "text": "think here's one of the things that you see rust like high up there and I think",
    "start": "2020240",
    "end": "2025960"
  },
  {
    "text": "one of the things there is that we try to get look at programming",
    "start": "2025960",
    "end": "2031240"
  },
  {
    "text": "languages as kind like mathematical abstractions or I I like to do I even show like denotational semantics but in",
    "start": "2031240",
    "end": "2038760"
  },
  {
    "text": "reality we're programming a physical machine like the the hardware is a physical thing that has like memory",
    "start": "2038760",
    "end": "2047000"
  },
  {
    "text": "hierarchies and if you look at the kind of differences in latency of accessing the different layers and you translate",
    "start": "2047000",
    "end": "2054280"
  },
  {
    "text": "them into human time that can differ from years to seconds if you if you that",
    "start": "2054280",
    "end": "2059960"
  },
  {
    "text": "we translate that into human Ty levels hence if you kind of want to really get",
    "start": "2059960",
    "end": "2067520"
  },
  {
    "text": "get efficiency you have you cannot abstract from the the underlying physical nature of the",
    "start": "2067520",
    "end": "2074320"
  },
  {
    "text": "machines with manage languages like Java and C maybe we're we're hiding too much",
    "start": "2074320",
    "end": "2080158"
  },
  {
    "text": "of that and that's where people are kind looking towards rust this kind how can",
    "start": "2080159",
    "end": "2086398"
  },
  {
    "text": "we kind like still deal in a more abstract way with this kind like the",
    "start": "2086399",
    "end": "2091960"
  },
  {
    "text": "lowlevel issues that you have to um deal with when you're programming the Machin",
    "start": "2091960",
    "end": "2097480"
  },
  {
    "text": "and want to squeeze out all the efficiency that you want then if you look at the kind of",
    "start": "2097480",
    "end": "2104480"
  },
  {
    "text": "high level languages I think it's kind like you know interesting that there's a lot of development there like I saw a a",
    "start": "2104480",
    "end": "2111680"
  },
  {
    "text": "blog post recently just a few days ago where they implemented SQL in typescript",
    "start": "2111680",
    "end": "2117119"
  },
  {
    "text": "on the type level so you can write a complete SQL",
    "start": "2117119",
    "end": "2122400"
  },
  {
    "text": "interpreter in typescript types the other thing that must mentioned that",
    "start": "2122400",
    "end": "2128400"
  },
  {
    "text": "goland actually is a very Charming language is like one of my my go-to",
    "start": "2128400",
    "end": "2133480"
  },
  {
    "text": "language to get like program if I program for myself it takes a lot of the kind good ideas from C and Skyline",
    "start": "2133480",
    "end": "2140920"
  },
  {
    "text": "whatever and kind packages them in a very Gap elegant package you see a lot of cross",
    "start": "2140920",
    "end": "2148320"
  },
  {
    "text": "pollination between and different languages and and there's a lot of interesting exciting development I would",
    "start": "2148320",
    "end": "2154200"
  },
  {
    "text": "never have thought cap typ script would have this cap type level programming stuff people were doing that in high",
    "start": "2154200",
    "end": "2160040"
  },
  {
    "text": "school for years but I think it's much more elegant in typescript so it's funny",
    "start": "2160040",
    "end": "2165119"
  },
  {
    "text": "to see the developments in the lowlevel language that can we make that that like more abstract but then also in the",
    "start": "2165119",
    "end": "2172000"
  },
  {
    "text": "higher level languages there's like an enormous explosion in creativity and like even Java is now like releasing",
    "start": "2172000",
    "end": "2179520"
  },
  {
    "text": "more frequently it's really exciting times really out in the language Fringe",
    "start": "2179520",
    "end": "2185880"
  },
  {
    "text": "there's a lot of talk right now DC funding and marketing about low code",
    "start": "2185880",
    "end": "2191440"
  },
  {
    "text": "languages Google Microsoft joining in with theirs and players such as out systems Mendes air table Kota what's",
    "start": "2191440",
    "end": "2199520"
  },
  {
    "text": "your view on these languages for the rest of us I I alluded to this a little in the",
    "start": "2199520",
    "end": "2204640"
  },
  {
    "text": "beginning and I do I do think that there is a very",
    "start": "2204640",
    "end": "2211359"
  },
  {
    "text": "interesting market for letting people program that aren't programmers there",
    "start": "2211359",
    "end": "2216520"
  },
  {
    "text": "are various ways that we try to do that by giving building blocks that don't require so much expertise to put",
    "start": "2216520",
    "end": "2224079"
  },
  {
    "text": "together this goes all the way back to in a sense Excel is the most popular",
    "start": "2224079",
    "end": "2229280"
  },
  {
    "text": "programming language on the planet because people can write formulas in there and they have a functional",
    "start": "2229280",
    "end": "2236119"
  },
  {
    "text": "reactive program that they're building up using a graphical metaphor mixed with some with Snippets of",
    "start": "2236119",
    "end": "2241880"
  },
  {
    "text": "code these low code attempts are trying to do the same you don't need a",
    "start": "2241880",
    "end": "2248520"
  },
  {
    "text": "professional developer for every little need of automation or even for putting up an app trying to push the boundaries",
    "start": "2248520",
    "end": "2255800"
  },
  {
    "text": "there it's really hard though because there's you get this tension",
    "start": "2255800",
    "end": "2261839"
  },
  {
    "text": "between what fits in that kind of low code abstraction versus what can you do",
    "start": "2261839",
    "end": "2267119"
  },
  {
    "text": "with it and you quickly get this push for can I just poke through and put some real code underneath here I've seen many",
    "start": "2267119",
    "end": "2273880"
  },
  {
    "text": "attempts at this over the years and they tend to always run up against that barrier maybe this time we we're finding",
    "start": "2273880",
    "end": "2279680"
  },
  {
    "text": "the right balance I don't know I I cannot agree more with mat just",
    "start": "2279680",
    "end": "2284960"
  },
  {
    "text": "like you see this even in Excel right yes you can write like uh formulas but",
    "start": "2284960",
    "end": "2290359"
  },
  {
    "text": "then sometimes you need VBA to get do I don't know if they still use VBA but you",
    "start": "2290359",
    "end": "2296119"
  },
  {
    "text": "need or in other kind spreadsheets or there's JavaScript that you can that so",
    "start": "2296119",
    "end": "2303319"
  },
  {
    "text": "you run out of steam at some point and in some s like recursively the same",
    "start": "2303319",
    "end": "2309640"
  },
  {
    "text": "thing happens right if you're using Java or C you run out of steam and sometimes you have to go to Native and Implement",
    "start": "2309640",
    "end": "2316319"
  },
  {
    "text": "stuff with rer I also think that one of the things",
    "start": "2316319",
    "end": "2322400"
  },
  {
    "text": "is yes for certain things it might be useful but we shouldn't forget that like garish band is not a grand piano so you",
    "start": "2322400",
    "end": "2330720"
  },
  {
    "text": "people can make beautiful music using garage band but that doesn't mean that they are kind like concert anest so I do",
    "start": "2330720",
    "end": "2339200"
  },
  {
    "text": "think that there's like a room for everything but I don't think that this G",
    "start": "2339200",
    "end": "2345440"
  },
  {
    "text": "these languages will like you know overtake all of programming they they are useful for the small domain but I",
    "start": "2345440",
    "end": "2352920"
  },
  {
    "text": "think you at some point you run out of steam and there's things that they don't",
    "start": "2352920",
    "end": "2358359"
  },
  {
    "text": "address and then you have to escape and now you're back into ultimately computation is hard we're can we're",
    "start": "2358359",
    "end": "2366200"
  },
  {
    "text": "solving really complicated algorithms and so you cannot",
    "start": "2366200",
    "end": "2373200"
  },
  {
    "text": "just not make that easy in general because it's ultimately it's like intrinsically difficult programming",
    "start": "2373200",
    "end": "2379119"
  },
  {
    "text": "that's my after doing trying to do this for several decades I think programming",
    "start": "2379119",
    "end": "2385480"
  },
  {
    "text": "is got like crazy hard what do you thinking about the role",
    "start": "2385480",
    "end": "2391440"
  },
  {
    "text": "of the uh specification languages going forward things like TLA plus alloy sharp",
    "start": "2391440",
    "end": "2397960"
  },
  {
    "text": "and so on what sort of role do you think they're going to have where they at it you go first there on this one so that",
    "start": "2397960",
    "end": "2405240"
  },
  {
    "text": "is an interesting thing and here I'm maybe a little bit biased like I showed",
    "start": "2405240",
    "end": "2413040"
  },
  {
    "text": "you where is it this this book so this is the the anopen",
    "start": "2413040",
    "end": "2420880"
  },
  {
    "text": "style of programming where you start with a specification in this",
    "start": "2420880",
    "end": "2426640"
  },
  {
    "text": "specification language ver logic or something D plus whatever if you want to",
    "start": "2426640",
    "end": "2432560"
  },
  {
    "text": "make it computer expressible and then you have like your algorithm and you're",
    "start": "2432560",
    "end": "2437720"
  },
  {
    "text": "trying to get make sure that your actual implementation satisfies that specification then there's the the other",
    "start": "2437720",
    "end": "2445800"
  },
  {
    "text": "approach I would say the b mutton approach or whatever where you start",
    "start": "2445800",
    "end": "2451119"
  },
  {
    "text": "with the actual implementation as the specification and then you're trying to",
    "start": "2451119",
    "end": "2457560"
  },
  {
    "text": "more of your program into a more efficient version so there's no difference between the specification and",
    "start": "2457560",
    "end": "2463480"
  },
  {
    "text": "the implementation that's how I grew up and that feels to me the most natural thing so you start with a program ex",
    "start": "2463480",
    "end": "2472359"
  },
  {
    "text": "that is your specification it might be kind of completely inefficient and then",
    "start": "2472359",
    "end": "2477400"
  },
  {
    "text": "Thea kind of correctness preserving Transformations you turn that into an",
    "start": "2477400",
    "end": "2482560"
  },
  {
    "text": "efficient implementation that just feels more natural to me but I can totally see that",
    "start": "2482560",
    "end": "2488520"
  },
  {
    "text": "other people like to have specification and then somehow derive like an implementation",
    "start": "2488520",
    "end": "2496280"
  },
  {
    "text": "from that in other ways yeah that's a really good framing",
    "start": "2496280",
    "end": "2501720"
  },
  {
    "text": "of it that dichotomy between do you have one or two languages here and if you have two languages you need two entities",
    "start": "2501720",
    "end": "2509079"
  },
  {
    "text": "and if you want the spec and and you have to keep in mind that most programs or algorithms evolve over time but if",
    "start": "2509079",
    "end": "2516319"
  },
  {
    "text": "you have two languages you have to and you want to still have the spec apply to the program you have to evolve them both",
    "start": "2516319",
    "end": "2523240"
  },
  {
    "text": "it's not just a onetime thing to make sure that they agree but you have to they have to keep agreeing you see this",
    "start": "2523240",
    "end": "2528880"
  },
  {
    "text": "so often where there's some initial specification and then people forget about it and by the time they built",
    "start": "2528880",
    "end": "2534520"
  },
  {
    "text": "something that nobody tracked the link between them so I think it's very hard and then",
    "start": "2534520",
    "end": "2541680"
  },
  {
    "text": "you try then you're like oh but we can automatically do it and we can give the specification language execution and",
    "start": "2541680",
    "end": "2547240"
  },
  {
    "text": "anakes and all that and then you're like but didn't you just now make it the programming language it's a difficult",
    "start": "2547240",
    "end": "2552800"
  },
  {
    "text": "thing but I agree that's one of the attractions of that so the pure functional the clean functional Paradigm",
    "start": "2552800",
    "end": "2559319"
  },
  {
    "text": "is that that the the programming language itself lend itself to such a",
    "start": "2559319",
    "end": "2564960"
  },
  {
    "text": "clean expression of the intent I think that has a lot of Merit",
    "start": "2564960",
    "end": "2570200"
  },
  {
    "text": "that's something that we struggle a little with in the commercial programming languages there's more of a hutch cotch and there's no incentive to",
    "start": "2570200",
    "end": "2576839"
  },
  {
    "text": "stay on a very straight and narrow path initially they also focus a lot more on",
    "start": "2576839",
    "end": "2582559"
  },
  {
    "text": "expressing the shape of data in a way that's more mangled with",
    "start": "2582559",
    "end": "2588280"
  },
  {
    "text": "the execution part of the program that sort",
    "start": "2588280",
    "end": "2593599"
  },
  {
    "text": "of The Upside and downside of object D programming whereas the functional programming has a very clean separation",
    "start": "2593599",
    "end": "2600480"
  },
  {
    "text": "there and then two things I think one maybe to make what Matt said concrete is",
    "start": "2600480",
    "end": "2606520"
  },
  {
    "text": "if you think about gooey Builders or something like Windows forms or whatever people have out you can describe your UI",
    "start": "2606520",
    "end": "2614200"
  },
  {
    "text": "very like high level and then it can generate some implementation but it's very hard to keep those in sync if you",
    "start": "2614200",
    "end": "2621040"
  },
  {
    "text": "get like M around with your codes now it's got like these things get out of sink but I also want to get point that",
    "start": "2621040",
    "end": "2627680"
  },
  {
    "text": "maybe there's like a middle ground and maybe this is what like spec shark or eiel are trying to do right where you",
    "start": "2627680",
    "end": "2634559"
  },
  {
    "text": "are like adding pre and post condition and invariance got like into the",
    "start": "2634559",
    "end": "2639640"
  },
  {
    "text": "language and now again you're trying to get remove the fact that they really got",
    "start": "2639640",
    "end": "2644760"
  },
  {
    "text": "these two different things and trying to really make that part of the same kind",
    "start": "2644760",
    "end": "2650480"
  },
  {
    "text": "language the underlying kind of like push for me would be that don't have two separate mechanisms but it should be",
    "start": "2650480",
    "end": "2657160"
  },
  {
    "text": "kind of integrated again I thought would be got like something",
    "start": "2657160",
    "end": "2662680"
  },
  {
    "text": "where Meer has tried that for many years that's got another approach that we",
    "start": "2662680",
    "end": "2669720"
  },
  {
    "text": "shouldn't forget I think that's very true I think we're all in the programming languages",
    "start": "2669720",
    "end": "2675200"
  },
  {
    "text": "themselves we're all always in this Balancing Act about how much we should try to verify things as part of the",
    "start": "2675200",
    "end": "2681800"
  },
  {
    "text": "language as well we've looked at since spec sharp",
    "start": "2681800",
    "end": "2686839"
  },
  {
    "text": "we've which was a a research project on top of C we've been circling around whether we should",
    "start": "2686839",
    "end": "2693680"
  },
  {
    "text": "have some sort of contract system in in C around C that was at least to some",
    "start": "2693680",
    "end": "2699599"
  },
  {
    "text": "degree verified at compile time even through some static analysis what we found was what people used this for that",
    "start": "2699599",
    "end": "2707280"
  },
  {
    "text": "about the 90% use case was tracking whether something was allowed to be null or not I it's just one simple use case",
    "start": "2707280",
    "end": "2713240"
  },
  {
    "text": "that totally dominated this and so we put a feature into C for that instead that now the type system and C just",
    "start": "2713240",
    "end": "2719599"
  },
  {
    "text": "helps you in a sort of Gentle Way helps you keep track of your nullability",
    "start": "2719599",
    "end": "2724720"
  },
  {
    "text": "and it's not a correctness thing say but because you can easily fool it but it",
    "start": "2724720",
    "end": "2732240"
  },
  {
    "text": "it's one of those you you have to decide when is it worth it to invite some of the static",
    "start": "2732240",
    "end": "2737839"
  },
  {
    "text": "analysis how can you do it because sometimes full correctness most of the",
    "start": "2737839",
    "end": "2743119"
  },
  {
    "text": "time some sort of very hard notion of correctness doesn't even make sense in",
    "start": "2743119",
    "end": "2748480"
  },
  {
    "text": "your programming it's more about functionality in some cases you do want",
    "start": "2748480",
    "end": "2754359"
  },
  {
    "text": "very strong correctness but but there's a scale there as well and you have to",
    "start": "2754359",
    "end": "2760599"
  },
  {
    "text": "find where do you want your language to be on that scale where do do you want a specific piece of code to be on that",
    "start": "2760599",
    "end": "2766400"
  },
  {
    "text": "scale and then use the tools necessary for that Al so taking this from another",
    "start": "2766400",
    "end": "2775680"
  },
  {
    "text": "perspective way back simulus 67 the father of beta as",
    "start": "2775680",
    "end": "2783040"
  },
  {
    "text": "well took this perspective of really designing a l language a simulation",
    "start": "2783040",
    "end": "2788760"
  },
  {
    "text": "system and a specification system Allin one in fact there was a related language",
    "start": "2788760",
    "end": "2794400"
  },
  {
    "text": "not well known called Delta which was just a specification language as part of the sort of simul language family",
    "start": "2794400",
    "end": "2802160"
  },
  {
    "text": "then everything got taken apart so now you use uml and alloy and c and so on",
    "start": "2802160",
    "end": "2809559"
  },
  {
    "text": "there was like a a big divorce or a breakup and these people left and threw",
    "start": "2809559",
    "end": "2815079"
  },
  {
    "text": "things at each other in recent years some of the those in particular from the",
    "start": "2815079",
    "end": "2820880"
  },
  {
    "text": "simula beta Community as well as as some from the modeling community of had some",
    "start": "2820880",
    "end": "2826960"
  },
  {
    "text": "conferences and gotten asked the question doesn't it make sense to talk about something like a simula 2027 where",
    "start": "2826960",
    "end": "2834880"
  },
  {
    "text": "there is a single language that describes these things that is a realistic goal or uh",
    "start": "2834880",
    "end": "2842720"
  },
  {
    "text": "Ian Utopia this this fun I know that after they tried to make Sim similar the the",
    "start": "2842720",
    "end": "2848960"
  },
  {
    "text": "be all endall and then they realized there too many layers of abstraction so the the next grand plan that Christen",
    "start": "2848960",
    "end": "2854160"
  },
  {
    "text": "niggard and his friends was oh we'll create this stra stratification of four",
    "start": "2854160",
    "end": "2860480"
  },
  {
    "text": "layers of languages they they actually envisioned four languages that would each",
    "start": "2860480",
    "end": "2866200"
  },
  {
    "text": "be further and further removed from the machine and closer the concepts of the human brain so it was Alpha Beta gamma",
    "start": "2866200",
    "end": "2873880"
  },
  {
    "text": "and Delta only only two of those ever came into existence one was Delta which",
    "start": "2873880",
    "end": "2878960"
  },
  {
    "text": "was created as a as the most the the closest to the human and it was this",
    "start": "2878960",
    "end": "2884240"
  },
  {
    "text": "description language they didn't even call it a specification language they called it a description language and that was for like describing the world",
    "start": "2884240",
    "end": "2890960"
  },
  {
    "text": "as it is mostly the things in it but also the processes in it and then you would gradually sort of the process that",
    "start": "2890960",
    "end": "2897559"
  },
  {
    "text": "Eric talked about doing inside of a functional program you gradually bring it closer and closer to executability you'll make some pragmatic choices along",
    "start": "2897559",
    "end": "2904640"
  },
  {
    "text": "the way that that's where beta was supposed to fit in as the high level programming language and then there",
    "start": "2904640",
    "end": "2910000"
  },
  {
    "text": "would be an alpha underneath which was the machine code",
    "start": "2910000",
    "end": "2915680"
  },
  {
    "text": "but it didn't really pan out I think some of it is that it's a very",
    "start": "2915680",
    "end": "2921000"
  },
  {
    "text": "waterfall like model you move gradually from one to the other until you have the result Jing at the bottom that can be",
    "start": "2921000",
    "end": "2927520"
  },
  {
    "text": "executed and keeping those descriptions and multiple layers and syn all the time",
    "start": "2927520",
    "end": "2932760"
  },
  {
    "text": "it's just I I think that's where it falls down but I think but to be fair in",
    "start": "2932760",
    "end": "2938839"
  },
  {
    "text": "an initial I think for some of these objectoriented analysis and design",
    "start": "2938839",
    "end": "2945960"
  },
  {
    "text": "approaches and so some it g it to some degree it can give you a tool to talk",
    "start": "2945960",
    "end": "2951079"
  },
  {
    "text": "to the eventual uses of the system you're developing to structure their",
    "start": "2951079",
    "end": "2959960"
  },
  {
    "text": "knowledge and give it a shape that has a shot at",
    "start": "2959960",
    "end": "2965280"
  },
  {
    "text": "becoming at becoming the if you squint the ultimate shape of",
    "start": "2965280",
    "end": "2971280"
  },
  {
    "text": "the program itself so there's some usefulness to it but this whole Grand unifying theory of it I don't think",
    "start": "2971280",
    "end": "2977359"
  },
  {
    "text": "we'll ever see it I just think there are too many contradictions in there Eric I think mats has said",
    "start": "2977359",
    "end": "2984480"
  },
  {
    "text": "everything I wanted to say kep way more eloquently than I could so yeah nothing",
    "start": "2984480",
    "end": "2989640"
  },
  {
    "text": "to add here one of the observations is and actually Eric worked with some",
    "start": "2989640",
    "end": "2995000"
  },
  {
    "text": "colleagues on this in the UK there are things like for instance stat Maes and decision tables but also things like",
    "start": "2995000",
    "end": "3002079"
  },
  {
    "text": "relationships which don't get first class positions in programming languages and contracts are another examp so I",
    "start": "3002079",
    "end": "3008839"
  },
  {
    "text": "think perhaps that's a way to take some of the things that are left out were",
    "start": "3008839",
    "end": "3014240"
  },
  {
    "text": "real provided in as affordances in the programming language you might get closer there's there's a reason why they",
    "start": "3014240",
    "end": "3020839"
  },
  {
    "text": "aren't in programming languages just it's not that we just forgot about relationships it's that having an",
    "start": "3020839",
    "end": "3028359"
  },
  {
    "text": "efficient mechanism for many to many relationships for instance is",
    "start": "3028359",
    "end": "3033880"
  },
  {
    "text": "just hard and it's too abstract you quickly because you need collections",
    "start": "3033880",
    "end": "3040359"
  },
  {
    "text": "that and wiring that had where you have there are huge implementation choices",
    "start": "3040359",
    "end": "3045520"
  },
  {
    "text": "there around how to make that efficient depending on what how it's going to be used and various things where that level",
    "start": "3045520",
    "end": "3053119"
  },
  {
    "text": "of abstraction just takes away too many decisions that that are too important",
    "start": "3053119",
    "end": "3058200"
  },
  {
    "text": "for the system to function efficiently but maybe one day we can Sol",
    "start": "3058200",
    "end": "3063599"
  },
  {
    "text": "those maybe you could make data structures that are so intelligent that they will do the most",
    "start": "3063599",
    "end": "3069880"
  },
  {
    "text": "efficient thing based on how they used we that in some areas like persistent",
    "start": "3069880",
    "end": "3075280"
  },
  {
    "text": "data structures where you to some degree you have some very fancy immutable data structures that are able to adapt to",
    "start": "3075280",
    "end": "3083200"
  },
  {
    "text": "their usage and be efficient in very different scenarios so maybe one day figure this out and and that's what",
    "start": "3083200",
    "end": "3089599"
  },
  {
    "text": "that's when but we won't bring these thing in until we have a handle on how to make them integrate well with the rest of the programming level",
    "start": "3089599",
    "end": "3097799"
  },
  {
    "text": "experience yep I I agree with match here it's like a lot of these things are it's",
    "start": "3097799",
    "end": "3102960"
  },
  {
    "text": "the implementation efficient implementation that is also like",
    "start": "3102960",
    "end": "3108280"
  },
  {
    "text": "incompatible if you look at that normal objects where you have like",
    "start": "3108280",
    "end": "3115400"
  },
  {
    "text": "children that's point inter chasing and if you look at relationships that's joints now what you're kind trying to do",
    "start": "3115400",
    "end": "3122119"
  },
  {
    "text": "is you're really trying to bridge the object relational Gap in the same language and again this is what I",
    "start": "3122119",
    "end": "3128319"
  },
  {
    "text": "mentioned in the beginning these are very different computational paradigms and that like bringing them together is",
    "start": "3128319",
    "end": "3134520"
  },
  {
    "text": "really hard and having a single unified language that can like then run these",
    "start": "3134520",
    "end": "3140280"
  },
  {
    "text": "things at Native speed it's super hard so I'm not saying that relationships are useless but",
    "start": "3140280",
    "end": "3146760"
  },
  {
    "text": "trying to to integrate that nicely with another Paradigm that's in some sense in",
    "start": "3146760",
    "end": "3153440"
  },
  {
    "text": "contradiction with it and then implement it efficiently is is super hard yeah but I do want to add that I",
    "start": "3153440",
    "end": "3161520"
  },
  {
    "text": "think that the some of the important turning points of in the history of",
    "start": "3161520",
    "end": "3166559"
  },
  {
    "text": "programming languages come from being able to find a way to bring",
    "start": "3166559",
    "end": "3173559"
  },
  {
    "text": "such Concepts into programming the whole object program as we talked about the start similar 67 and the start of object",
    "start": "3173559",
    "end": "3179880"
  },
  {
    "text": "ored programming this whole idea of bringing Concepts at Aristotelian Concepts",
    "start": "3179880",
    "end": "3188160"
  },
  {
    "text": "representing them as classes in in the program that was like revolutionary and it was exactly the take something that",
    "start": "3188160",
    "end": "3195240"
  },
  {
    "text": "was deemed to be outside of the programming space and find a way to mirror it relatively Faithfully in there",
    "start": "3195240",
    "end": "3201599"
  },
  {
    "text": "so that you expand your expressiveness in the programming realm that's like that's magic and functional programming",
    "start": "3201599",
    "end": "3208200"
  },
  {
    "text": "I guess to some degree is that as well it's all the way back to to the Lambda calculus and understanding",
    "start": "3208200",
    "end": "3216480"
  },
  {
    "text": "the what you know which is a model that's very different from the physical machines and understanding the",
    "start": "3216480",
    "end": "3222520"
  },
  {
    "text": "relationship between math that between that conceptual model and the Computing equipment was",
    "start": "3222520",
    "end": "3231799"
  },
  {
    "text": "really probably the first example of that so I think big turns the big new paradigms and so on they start from that",
    "start": "3231799",
    "end": "3238160"
  },
  {
    "text": "it's definitely worth pursuing it's just that it's hard and so often we don't end up succeeding so we we can't you talk about",
    "start": "3238160",
    "end": "3246839"
  },
  {
    "text": "programming languages in the modern day and not talk about the cloud today we've got increased",
    "start": "3246839",
    "end": "3254119"
  },
  {
    "text": "modularity and concurrency by very powerful machines so we now have",
    "start": "3254119",
    "end": "3259480"
  },
  {
    "text": "microservices and containers and lots of concurrency which promise looser",
    "start": "3259480",
    "end": "3265000"
  },
  {
    "text": "coupling use of multiple programming languages however these systems are",
    "start": "3265000",
    "end": "3270680"
  },
  {
    "text": "composed dynamically with glue languages such as yaml making it more difficult to reason",
    "start": "3270680",
    "end": "3276799"
  },
  {
    "text": "about the system the inability to even see the full stack so now if you want to debug",
    "start": "3276799",
    "end": "3283440"
  },
  {
    "text": "your simple microservice application or serverless application you have to use special",
    "start": "3283440",
    "end": "3289760"
  },
  {
    "text": "purpose tools and fuse traces together and then get a set of observability",
    "start": "3289760",
    "end": "3295319"
  },
  {
    "text": "tools so you can look at the stack this seems like a language opportunity isn't",
    "start": "3295319",
    "end": "3300640"
  },
  {
    "text": "it I can give this a try it's at some point in some sense it's kind of like",
    "start": "3300640",
    "end": "3306680"
  },
  {
    "text": "surprising that we still don't have a language that takes say the cloud as the",
    "start": "3306680",
    "end": "3313440"
  },
  {
    "text": "computer and I do think that if you look at early Java and early. net when you",
    "start": "3313440",
    "end": "3320160"
  },
  {
    "text": "see some of the videos that was the idea everything was distributed and I think",
    "start": "3320160",
    "end": "3325680"
  },
  {
    "text": "both J Java and C tried this like remoting was also transparent and with com they tried this",
    "start": "3325680",
    "end": "3332640"
  },
  {
    "text": "thing too is it doesn't matter where it runs and and so on I think the reality",
    "start": "3332640",
    "end": "3339000"
  },
  {
    "text": "hits very quickly that you cannot have transparent remoting that you have to get like think in terms of Errors",
    "start": "3339000",
    "end": "3345559"
  },
  {
    "text": "latency all those kind of things I'm not sure that we got like have found like a",
    "start": "3345559",
    "end": "3352280"
  },
  {
    "text": "language that got like deals with that like still looks at the cloud as the",
    "start": "3352280",
    "end": "3358039"
  },
  {
    "text": "computer but what we have done is we have taken these languages and warped them and added things in there to make",
    "start": "3358039",
    "end": "3365200"
  },
  {
    "text": "these things explicit tasks like in order to",
    "start": "3365200",
    "end": "3371280"
  },
  {
    "text": "do remoting you have to make it all more explicit but yeah it is I think still an",
    "start": "3371280",
    "end": "3379319"
  },
  {
    "text": "open problem is like how can you get like really provide an abstraction that you can program the cloud like in it",
    "start": "3379319",
    "end": "3385920"
  },
  {
    "text": "like about native language and right now I think you're right it's a little bit of a patchwork but again I think it's a",
    "start": "3385920",
    "end": "3392920"
  },
  {
    "text": "very difficult task and also the underlying",
    "start": "3392920",
    "end": "3398200"
  },
  {
    "text": "technology changes a lot right like maybe five years ago like containers",
    "start": "3398200",
    "end": "3403640"
  },
  {
    "text": "were like a niche now it's like everywhere so like you design the language now it takes many years like if",
    "start": "3403640",
    "end": "3410960"
  },
  {
    "text": "you look at what Java was his 25th birthday the the underly my",
    "start": "3410960",
    "end": "3416680"
  },
  {
    "text": "computational Paradigm or distributed Paradigm changes so fast I don't think the language can keep up with that that",
    "start": "3416680",
    "end": "3422559"
  },
  {
    "text": "moves so much slower I agree with that and I want to add so I have two",
    "start": "3422559",
    "end": "3430839"
  },
  {
    "text": "opposite em but simultaneous emotional reactions to the whole microservices",
    "start": "3430839",
    "end": "3436720"
  },
  {
    "text": "turn which one of them is very positive I love that there's",
    "start": "3436720",
    "end": "3442000"
  },
  {
    "text": "this new growth layer where we're learning things and there's all this experimentation with how we can make",
    "start": "3442000",
    "end": "3447480"
  },
  {
    "text": "these things work out and then there language designer and Implement me there oh no we",
    "start": "3447480",
    "end": "3455240"
  },
  {
    "text": "just spent decades figuring getting great type systems that we can reason",
    "start": "3455240",
    "end": "3460400"
  },
  {
    "text": "about our systems and get an optimizing things so they can run fast on the metal and all that now we throw it all out the",
    "start": "3460400",
    "end": "3467799"
  },
  {
    "text": "window and we have all these things that are so loosely coupled that the common denominator is Json or yaml or some",
    "start": "3467799",
    "end": "3475280"
  },
  {
    "text": "complete textural crap that everyone has to parse and impedance mismatch up and",
    "start": "3475280",
    "end": "3481480"
  },
  {
    "text": "down with different representations and and efficiency oh my God it's",
    "start": "3481480",
    "end": "3487039"
  },
  {
    "text": "completely out the window even when all your microservices actually end up running on the same little box they all",
    "start": "3487039",
    "end": "3492319"
  },
  {
    "text": "have to pipe all this goop between each other and spend most of their Cycles",
    "start": "3492319",
    "end": "3497720"
  },
  {
    "text": "just understanding what each other is saying to them and it's guys do what we",
    "start": "3497720",
    "end": "3503960"
  },
  {
    "text": "have to start all over again but the other hand we that that's how everything starts out",
    "start": "3503960",
    "end": "3511359"
  },
  {
    "text": "so I think it's I end up being mostly excited about it but I do have some",
    "start": "3511359",
    "end": "3516640"
  },
  {
    "text": "frustration around the mess that we're in once again now we just cleaned up",
    "start": "3516640",
    "end": "3521680"
  },
  {
    "text": "it's like uh it's like Mr Incredible says in the beginning of the movie I just cleaned up and then some other",
    "start": "3521680",
    "end": "3527520"
  },
  {
    "text": "super villain comes in and messes it all up again so another thing is that this is",
    "start": "3527520",
    "end": "3533000"
  },
  {
    "text": "also got a really good opportunity for mics right this is for research and I do",
    "start": "3533000",
    "end": "3538760"
  },
  {
    "text": "think if you look at at Joe herstein Berkeley he's doing some really interesting stuff on serverless compute",
    "start": "3538760",
    "end": "3546039"
  },
  {
    "text": "where he's using some a lot of sophisticated techniques for synchronization and so on to get solve a",
    "start": "3546039",
    "end": "3553079"
  },
  {
    "text": "lot of these problems so yes I I I think that's got super interesting work",
    "start": "3553079",
    "end": "3560640"
  },
  {
    "text": "and again hopefully at some point like a lot of these things it will percolate",
    "start": "3560640",
    "end": "3566359"
  },
  {
    "text": "into the more commercial languages but this has got like a really good opportunity for academics to get do",
    "start": "3566359",
    "end": "3573480"
  },
  {
    "text": "research because it is a big problem and as I said I think there's interesting work being done are there any other",
    "start": "3573480",
    "end": "3579599"
  },
  {
    "text": "things in the sort of research Language new language area that you think uh are",
    "start": "3579599",
    "end": "3585240"
  },
  {
    "text": "worth people looking at or encouraging researchers to work",
    "start": "3585240",
    "end": "3591240"
  },
  {
    "text": "on there the languages that you language work you've seen I I do think",
    "start": "3591319",
    "end": "3599480"
  },
  {
    "text": "that there is some kind interesting as you if you look at kind like machine learning as a kind",
    "start": "3599680",
    "end": "3606440"
  },
  {
    "text": "like area I do think that that's where there's a lot of math there that we",
    "start": "3606440",
    "end": "3612760"
  },
  {
    "text": "don't traditionally deal with as computer scientists like as computer scientists we often think about discret",
    "start": "3612760",
    "end": "3618319"
  },
  {
    "text": "math right logic discreete things collections sets where a lot of machine",
    "start": "3618319",
    "end": "3624799"
  },
  {
    "text": "learning is continuous right if you look at like automatic differentiation or",
    "start": "3624799",
    "end": "3630680"
  },
  {
    "text": "like you take gradients so it's like continuous math now what I discovered is that a lot",
    "start": "3630680",
    "end": "3637839"
  },
  {
    "text": "of the continuous math or calculus that we got in high school is really complicated with limits and whatever and",
    "start": "3637839",
    "end": "3645000"
  },
  {
    "text": "the people in category Theory have been doing a lot of interesting stuff on it it's got infinite decimal",
    "start": "3645000",
    "end": "3654319"
  },
  {
    "text": "analysis synthetic like where the Exum things they call it",
    "start": "3654319",
    "end": "3660839"
  },
  {
    "text": "synthetic so it's a basically it means instead of defining things with limit and on you extize so you just Define",
    "start": "3660839",
    "end": "3668520"
  },
  {
    "text": "aums for differentiation aums for integration and then from that you can",
    "start": "3668520",
    "end": "3675200"
  },
  {
    "text": "build up all of calculus and this is has a very like functional programming like",
    "start": "3675200",
    "end": "3682160"
  },
  {
    "text": "flavor and I do think that there's got good opportunity to take those ideas and",
    "start": "3682160",
    "end": "3689319"
  },
  {
    "text": "bring them more into programming languages because we have to this whole machine learning field is continuous",
    "start": "3689319",
    "end": "3696359"
  },
  {
    "text": "math and so trying to get bring in the math that not into programming is um",
    "start": "3696359",
    "end": "3705960"
  },
  {
    "text": "inevitable and yeah and same thing for linear algebra as well so that's where I",
    "start": "3705960",
    "end": "3711960"
  },
  {
    "text": "think I I would love to see more developments I also that made me think of quantum",
    "start": "3711960",
    "end": "3719599"
  },
  {
    "text": "Computing which I think is is it's very interesting",
    "start": "3719599",
    "end": "3725680"
  },
  {
    "text": "to programming language folks because it",
    "start": "3725680",
    "end": "3731640"
  },
  {
    "text": "imposes very interesting limitations on what your programs can do that when",
    "start": "3731640",
    "end": "3737359"
  },
  {
    "text": "you're doing Quantum computation you need you can you need your algorithms to",
    "start": "3737359",
    "end": "3742920"
  },
  {
    "text": "you need to be able to express the adjoint sort of inverse but similar",
    "start": "3742920",
    "end": "3747960"
  },
  {
    "text": "there are these mathematical properties that code needs to have that put a limitation on what kinds of language",
    "start": "3747960",
    "end": "3753119"
  },
  {
    "text": "constructs you can even have you can't just go and add a language construct to a Quantum programming language because that might blow up the the underlying",
    "start": "3753119",
    "end": "3759799"
  },
  {
    "text": "model like immutability you can't just go and add mutation to to an immutable language and so it has these new kinds",
    "start": "3759799",
    "end": "3766680"
  },
  {
    "text": "of constraints that are interesting to try",
    "start": "3766680",
    "end": "3772400"
  },
  {
    "text": "to work with and create something that has enough abstraction power and enough expressive power to program these",
    "start": "3772400",
    "end": "3780319"
  },
  {
    "text": "quantum computers that we barely even have yet that's that's going to be a field",
    "start": "3780319",
    "end": "3786880"
  },
  {
    "text": "not just for like foundational scientific discovery but also just for",
    "start": "3786880",
    "end": "3792599"
  },
  {
    "text": "evolving programming language design the discipline of programming language design in in an interesting way yeah",
    "start": "3792599",
    "end": "3799799"
  },
  {
    "text": "that's a really good point that you make their matths because if you look at it's differentiation for example right you",
    "start": "3799799",
    "end": "3806760"
  },
  {
    "text": "have to put restrictions there too you cannot have say conditionals because they can introduce gaps into your",
    "start": "3806760",
    "end": "3812960"
  },
  {
    "text": "function and now it becomes nondifferentiable and on the other hand",
    "start": "3812960",
    "end": "3818319"
  },
  {
    "text": "if you want to program you want to get make choices so yes there's like a really nice tension between you have to",
    "start": "3818319",
    "end": "3826359"
  },
  {
    "text": "constrain the expressiveness but you still want to express certain things so yeah I do think that this is",
    "start": "3826359",
    "end": "3834119"
  },
  {
    "text": "like a very interesting area this has been great I really appreciate",
    "start": "3834119",
    "end": "3840000"
  },
  {
    "text": "both of you mads and Eric taking the time to spend with us and share your expertise with the Yao and hopefully",
    "start": "3840000",
    "end": "3847240"
  },
  {
    "text": "motivate those of us from the past and those of us going forward in the future working on new languages so thank you",
    "start": "3847240",
    "end": "3854839"
  },
  {
    "text": "very much we look forward to seeing you both online in December so we'll see you",
    "start": "3854839",
    "end": "3860559"
  },
  {
    "text": "again there thank you very much thanks for bringing us together there it's to the blast take care great to see you",
    "start": "3860559",
    "end": "3867599"
  },
  {
    "text": "again we should do this more often y thanks",
    "start": "3867599",
    "end": "3873880"
  },
  {
    "text": "[Music]",
    "start": "3875520",
    "end": "3879130"
  }
]