[
  {
    "start": "0",
    "end": "198000"
  },
  {
    "text": "Hi, everyone. Welcome to another episode of the \n\"GOTO Book Club.\" Today, I have the honor to be  ",
    "start": "4200",
    "end": "12519"
  },
  {
    "text": "here on stage. My name is Nicola Corti. I'm a \nsoftware engineer, open source lover. I do all  ",
    "start": "12520",
    "end": "19120"
  },
  {
    "text": "sorts of things on GitHub. You can find me all \nover the place as Cortinico. But the spotlight  ",
    "start": "19120",
    "end": "26200"
  },
  {
    "text": "of this episode today is Marcin Moskala, \nauthor of \"Effective Kotlin.\" Marcin to you. ",
    "start": "26200",
    "end": "33720"
  },
  {
    "text": "Thank you. Good. Great to be here.\nIt's awesome because we already know  ",
    "start": "33720",
    "end": "39240"
  },
  {
    "text": "each other. We've been collaborating on all \nsorts of things, Marcin. It's amazing. Speaking  ",
    "start": "39240",
    "end": "47000"
  },
  {
    "text": "with you is always a pleasure. Yeah, let's \nstart by giving the audience a little bit of  ",
    "start": "47000",
    "end": "53960"
  },
  {
    "text": "introduction on what you do. What do you do in \nlife? Tell us a little bit about your background  ",
    "start": "53960",
    "end": "59920"
  },
  {
    "text": "and your relationship with Kotlin.\nMy relationship with Kotlin started a long  ",
    "start": "60520",
    "end": "66400"
  },
  {
    "text": "time ago. I counted recently that it was around 11 \nyears ago. Most people do not know Kotlin exists  ",
    "start": "66400",
    "end": "74600"
  },
  {
    "text": "for so long, as most people learned about \nit, like, two or three years ago. But yeah,  ",
    "start": "74600",
    "end": "81920"
  },
  {
    "text": "Kotlin is actually a pretty old language. It has \nbeen developed since 2010 and open source, like,  ",
    "start": "81920",
    "end": "89920"
  },
  {
    "text": "released in 2011. I have used it professionally \nsince 2015. I used it in private projects a little  ",
    "start": "89920",
    "end": "99720"
  },
  {
    "text": "bit earlier. When I was a Kotlin developer, I \nwas lacking some resources about Kotlin and I  ",
    "start": "99720",
    "end": "108520"
  },
  {
    "text": "started teaching it, first writing about it, \nwriting blogs, and making some presentations.  ",
    "start": "108520",
    "end": "119840"
  },
  {
    "text": "This is where I got my idea to write my first \nbook. By the way, when I started writing it with  ",
    "start": "122040",
    "end": "128679"
  },
  {
    "text": "Igor, there were practically no books published \nabout Kotlin. There was this Antonio Leiva book  ",
    "start": "128680",
    "end": "136640"
  },
  {
    "text": "that was, I believe, in early access, something \nlike that. When we were writing the book,   he published it. I also, if I remember right, \nthe first edition of \"Kotlin in Action\" was also,  ",
    "start": "136640",
    "end": "149840"
  },
  {
    "text": "not sure if published or just disclosure, \nannounced when we were writing the book.  ",
    "start": "150440",
    "end": "158360"
  },
  {
    "text": "But they were published more or less at the same \ntime. So I guess our book was, like, fared on... ",
    "start": "158360",
    "end": "163507"
  },
  {
    "text": "One marketer.\n...the market or something like that.   But this was a different book. This was \"Android \nDevelopment with Kotlin,\" which is a little bit  ",
    "start": "163507",
    "end": "173319"
  },
  {
    "text": "misleading title because we wanted it to be called \nKotlin for Android Developers because this is what  ",
    "start": "173320",
    "end": "178800"
  },
  {
    "text": "it was. It was about Kotlin and with...\nFocus..  ...particular spotlight on Android \ndevelopers. But this title was already  ",
    "start": "178800",
    "end": "192519"
  },
  {
    "text": "taken. So our publisher told us to change \nthe name and suggested this one instead. ",
    "start": "192520",
    "end": "198440"
  },
  {
    "start": "198000",
    "end": "629000"
  },
  {
    "text": "Got it. From the early days of Kotlin, today \nyou're here with us to spotlight your book,  ",
    "start": "198440",
    "end": "204880"
  },
  {
    "text": "which is \"Effective Kotlin.\" So people in the \naudience may actually know similar books like  ",
    "start": "204880",
    "end": "212400"
  },
  {
    "text": "\"Effective Java.\" I know that is one of the really \npopular ones. I'm sure there are other effective  ",
    "start": "212400",
    "end": "219640"
  },
  {
    "text": "star where star is the name of a programming \nlanguage out there. But yeah, I want to give you  ",
    "start": "219640",
    "end": "225360"
  },
  {
    "text": "the opportunity to introduce this book. So what is \nit all about? How did you come up with the idea?  ",
    "start": "225360",
    "end": "232760"
  },
  {
    "text": "Give us an elevator pitch of this book.\nYou are perfectly right. This is a long  ",
    "start": "234760",
    "end": "239720"
  },
  {
    "text": "tradition of books that actually has started with \n\"Effective C++\" by Scott Meyers, an amazing book  ",
    "start": "240320",
    "end": "249000"
  },
  {
    "text": "by an amazing developer. I believe this was, \nlike, 42. That's a nice number of specific  ",
    "start": "249000",
    "end": "259799"
  },
  {
    "text": "items on how to improve your C++ programming. And \nafter that, other books followed. And yes, the  ",
    "start": "259800",
    "end": "271560"
  },
  {
    "text": "most popular one in our infosphere is \"Effective \nJava\" by Joshua Bloch. But there are others and  ",
    "start": "271560",
    "end": "281160"
  },
  {
    "text": "I read them. Not all of them, but the majority of \nthem. I definitely read \"Effective Java\" a couple  ",
    "start": "281160",
    "end": "286960"
  },
  {
    "text": "of times. \"Effective C++,\" \"Effective Python,\" \n\"Effective JavaScript,\" \"Effective Python\" was  ",
    "start": "286960",
    "end": "292680"
  },
  {
    "text": "fun. And those are not very popular ones. I think \none of them was surely self-published. They had  ",
    "start": "292680",
    "end": "306400"
  },
  {
    "text": "some strange parts. I would say controversial \nparts. I remember, for instance, \"Effective  ",
    "start": "306400",
    "end": "313600"
  },
  {
    "text": "Python.\" I don't know if this is still there, but \nthere was this item that you might use a useless,  ",
    "start": "313600",
    "end": "322160"
  },
  {
    "text": "various argument to enforce everything after that \nto be called by name, named arguments. And so I  ",
    "start": "322160",
    "end": "334760"
  },
  {
    "text": "was reading them, preparing to write this book.\nWhy did I decide to write it? I was actually  ",
    "start": "334760",
    "end": "343760"
  },
  {
    "text": "pretty annoyed by what I could see in the Kotlin \ncommunity, especially once it became an official  ",
    "start": "343760",
    "end": "352560"
  },
  {
    "text": "language of Android and it started popularizing \nvery quickly. We had huge waves of developers  ",
    "start": "352560",
    "end": "360480"
  },
  {
    "text": "from Java that were not enthusiasts, passionate \nabout Kotlin, but rather developers who are just  ",
    "start": "360480",
    "end": "370840"
  },
  {
    "text": "using it as another language. And they were just \nwriting Java in Kotlin, which was quite annoying,  ",
    "start": "372480",
    "end": "382800"
  },
  {
    "text": "not utilizing Kotlin possibilities, capabilities. \nBut what was even more annoying to me,  ",
    "start": "382800",
    "end": "391599"
  },
  {
    "text": "it was that they were naively porting Java \npractices into Kotlin. You see, most of those  ",
    "start": "391600",
    "end": "401520"
  },
  {
    "text": "guys read \"Effective Java.\" And \"Effective Java\" \nis an amazing book. It's great. But many of its  ",
    "start": "401520",
    "end": "407680"
  },
  {
    "text": "items do not apply to Kotlin. Just the opposite. \nThey shouldn't be applied to Kotlin. One simple  ",
    "start": "407680",
    "end": "414919"
  },
  {
    "text": "example is the builder pattern. \"Effective Java\" \nsuggests you use a builder pattern, which is very  ",
    "start": "414920",
    "end": "422560"
  },
  {
    "text": "useful in Java, because Java does not have named \noptional arguments. And \"Effective Java,\" Joshua  ",
    "start": "422560",
    "end": "431280"
  },
  {
    "text": "Bloch explicitly wrote in the book, I remember the \nfragment, I even quoted it in some post, that the  ",
    "start": "431280",
    "end": "439240"
  },
  {
    "text": "reason why we use this pattern in Java is because \nJava doesn't have named optional arguments, which  ",
    "start": "439240",
    "end": "445000"
  },
  {
    "text": "by the way, I have no idea why. It should have \nthem. It's like one of the most basic features  ",
    "start": "445000",
    "end": "449520"
  },
  {
    "text": "that modern languages have. And that's the \nonly reason to use this pattern. In Kotlin,  ",
    "start": "450200",
    "end": "459200"
  },
  {
    "text": "this pattern practically makes no sense. In simple \ncases, named optional arguments are enough. In  ",
    "start": "459200",
    "end": "468120"
  },
  {
    "text": "more complex cases, we have better tools like \nDSLs, which are also builders, but different  ",
    "start": "468120",
    "end": "474680"
  },
  {
    "text": "Kotlin-specific builders. You can consider builder \npattern practically excluded, useless in Kotlin,  ",
    "start": "474680",
    "end": "487160"
  },
  {
    "text": "unless you want to design a code that is \ninteroperable with Java. Of course, there  ",
    "start": "487840",
    "end": "493320"
  },
  {
    "text": "are some things that look like builder patterns. \nIf you now think about it, I know that you are   also using Compose, and in Compose, we have the \nmodifier, which looks like a builder, but that's  ",
    "start": "493320",
    "end": "504840"
  },
  {
    "text": "not a builder. Those are the decorators that are \njust implemented in a builder-like style. The  ",
    "start": "504840",
    "end": "513680"
  },
  {
    "text": "classic builder pattern practically has no use in \nmodern Kotlin programming, unless you are doing... ",
    "start": "513680",
    "end": "521000"
  },
  {
    "text": "There were many such things, many, many things. \nPeople were trying to use static factory functions  ",
    "start": "521000",
    "end": "529880"
  },
  {
    "text": "in Kotlin, which, first of all, is impossible. You \nneed to use a Compound object factory function,  ",
    "start": "529880",
    "end": "537000"
  },
  {
    "text": "which looks similar. But it's a little bit \nof nonsense because in most cases in Kotlin,  ",
    "start": "537000",
    "end": "543520"
  },
  {
    "text": "it is more appropriate to use other techniques \nlike top-level function, like extension functions,  ",
    "start": "543520",
    "end": "551480"
  },
  {
    "text": "or other patterns. Or for instance, copying \nconstructors. We practically don't do that in  ",
    "start": "551480",
    "end": "558040"
  },
  {
    "text": "Kotlin. We have different practices in Kotlin. \nThere were many, many things that have changed  ",
    "start": "558040",
    "end": "566040"
  },
  {
    "text": "with Kotlin and that made suggestions in \n\"Effective Java\" outdated for Kotlin. There  ",
    "start": "566040",
    "end": "573519"
  },
  {
    "text": "were also many practices that just... Kotlin style \nchanged. Maybe they could be applied in a similar  ",
    "start": "573520",
    "end": "582120"
  },
  {
    "text": "way as in Java or as \"Effective Java\" suggested, \nbut it just wasn't the Kotlin style. It just  ",
    "start": "582120",
    "end": "588760"
  },
  {
    "text": "wasn't what the creators of Kotlin were \ndoing, what was the, let's say, the dominantly  ",
    "start": "588760",
    "end": "598240"
  },
  {
    "text": "assumed good style. And this motivated me to \nwrite this book. But that's... Okay, go ahead. ",
    "start": "599440",
    "end": "606560"
  },
  {
    "text": "It's a really inspiring story. I have to share \nthat I obviously had the pleasure to read your  ",
    "start": "606560",
    "end": "612279"
  },
  {
    "text": "book. I remember I was on vacation.\nReview even.  Yes, even review some of it. I remember I was \non vacation in Sweden and I took my Kindle with  ",
    "start": "612280",
    "end": "620560"
  },
  {
    "text": "me and I was looking through all the various \nitems. Some of them are really inspiring. ",
    "start": "620560",
    "end": "628360"
  },
  {
    "start": "629000",
    "end": "965000"
  },
  {
    "text": "I maintain a static analyzer for Kotlin called \ndetekt. I remember we get back to items in your  ",
    "start": "629320",
    "end": "636920"
  },
  {
    "text": "book multiple times as inspiration for rules. So \nit really helped the Kotlin community to form a  ",
    "start": "636920",
    "end": "645279"
  },
  {
    "text": "consensus on what it means to write idiomatic \nKotlin, which is really inspiring for a book.  ",
    "start": "645280",
    "end": "653320"
  },
  {
    "text": "The question that I have for you is more, like, \nhow do you decide if an item makes it inside the  ",
    "start": "654360",
    "end": "663279"
  },
  {
    "text": "book or not? Because at the end of the day, \nyou have this list of items with a number,   so it's even easy to get back to them. But how \ndo you decide if a rule or a pattern that you  ",
    "start": "663280",
    "end": "674920"
  },
  {
    "text": "saw in the community actually becomes an item for \n\"Effective Kotlin\" or is just like, I don't know,  ",
    "start": "674920",
    "end": "683120"
  },
  {
    "text": "like a rule that someone is following, but \nit's not worth a top-level item in your book? ",
    "start": "683120",
    "end": "689240"
  },
  {
    "text": "That was actually a tough decision because \nI always wanted to be a voice of community,  ",
    "start": "690280",
    "end": "697320"
  },
  {
    "text": "not a voice of my own. That's why I consulted it \nquite massively. Thankfully, I had a really nice  ",
    "start": "697320",
    "end": "707000"
  },
  {
    "text": "contact with creators. The Kotlin community when \nI started was very, very small. And so everyone  ",
    "start": "707000",
    "end": "716480"
  },
  {
    "text": "nearly knew each other. If you go to a conference \nand there are two presentations about Kotlin,  ",
    "start": "716480",
    "end": "725880"
  },
  {
    "text": "then you immediately go to the other speaker and \nyou get to know each other. And this is how it  ",
    "start": "725880",
    "end": "730960"
  },
  {
    "text": "looked in 2015 and even 2016. And so I had some \ncontact with creators, with Andrey, because Andrey  ",
    "start": "730960",
    "end": "741520"
  },
  {
    "text": "Breslav was there, in charge then. He actually \ncreated Kotlin until its stable levels and  ",
    "start": "741520",
    "end": "753280"
  },
  {
    "text": "beyond. But I received even more help from other \nteam members. For instance, there is \"Orangy.\"  ",
    "start": "753280",
    "end": "764520"
  },
  {
    "text": "Not sure if I'm pronouncing his nickname right, \nbut he's an amazing developer with a very deep  ",
    "start": "764520",
    "end": "771000"
  },
  {
    "text": "insight. He created Ktor and many, many libraries. \nAnd he was very, very helpful on the way. We had  ",
    "start": "771000",
    "end": "779280"
  },
  {
    "text": "quite a few discussions about different \nsuggestions, which was very, very helpful. ",
    "start": "779280",
    "end": "786240"
  },
  {
    "text": "Outside of that, I did a massive amount of \nresearch. I might say I was writing this book,  ",
    "start": "786240",
    "end": "794520"
  },
  {
    "text": "rewriting, rewriting, rewriting. If you collect \nall the pages that I wrote for this book,  ",
    "start": "794520",
    "end": "801560"
  },
  {
    "text": "I think it would be three times as big \nand it is already a massive book. I read,  ",
    "start": "801560",
    "end": "809120"
  },
  {
    "text": "as I said, pretty much everything I could find \nin this topic. I knew that looking only around  ",
    "start": "810480",
    "end": "821560"
  },
  {
    "text": "Java suggestions would be a very... It wouldn't be \na good approach. Kotlin was striving or maybe in  ",
    "start": "821560",
    "end": "830640"
  },
  {
    "text": "many ways more similar to more modern languages. \nThat's why I was checking what they write about  ",
    "start": "830640",
    "end": "839160"
  },
  {
    "text": "the best practices for JavaScript, which in \nmany ways is more modern than Java, Python,  ",
    "start": "839160",
    "end": "847240"
  },
  {
    "text": "Scala, Groovy, and other languages. I even found \nsome really, really useful things in C# because  ",
    "start": "847240",
    "end": "858000"
  },
  {
    "text": "C# also had some features that are in Kotlin that \nare not in JavaScript, like extension functions or  ",
    "start": "858000",
    "end": "867200"
  },
  {
    "text": "named arguments. I think, for instance, that the \ngeneral rules for when extension function should  ",
    "start": "867200",
    "end": "876720"
  },
  {
    "text": "be defined instead of a member was taken...I mean, \nI took it from the documentation of Kotlin, but  ",
    "start": "876720",
    "end": "884879"
  },
  {
    "text": "Kotlin nearly literally copy-pasted. It was there \nin documentation for a very short time and it was  ",
    "start": "884880",
    "end": "892160"
  },
  {
    "text": "quite literally copy-pasted from a documentation \nof C#. Later, they removed it, but that was my key  ",
    "start": "892160",
    "end": "902440"
  },
  {
    "text": "inspiration for the item. There were also some \npresentations that Kotlin creators made. There  ",
    "start": "902440",
    "end": "911560"
  },
  {
    "text": "was a presentation, Idiomatic Kotlin by Dmitry \nJemerov, that was never really well-recorded.  ",
    "start": "911560",
    "end": "919279"
  },
  {
    "text": "I'm not sure if you can find it right now on \nYouTube, but back in the days, this presentation  ",
    "start": "922200",
    "end": "928560"
  },
  {
    "text": "had only one recording, which was extremely poor \nquality and not a very popular one. Dmitry was one  ",
    "start": "928560",
    "end": "936240"
  },
  {
    "text": "of the key creators, one of the first people who \njoined the Kotlin team. He had a very, very deep  ",
    "start": "936240",
    "end": "943000"
  },
  {
    "text": "insight and he also co-authored with Svetlana, \nco-authored \"Kotlin in Action.\" His insights  ",
    "start": "943000",
    "end": "955280"
  },
  {
    "text": "were very useful and I included nearly all of \nthem in different items of \"Effective Kotlin.\"",
    "start": "955280",
    "end": "964680"
  },
  {
    "text": "Awesome. Talking about different items, because \nnow we presented the book, but let's try to make  ",
    "start": "964680",
    "end": "971160"
  },
  {
    "start": "965000",
    "end": "1266000"
  },
  {
    "text": "it a little bit more practical for the \nusers. I want to ask you, what is your  ",
    "start": "971160",
    "end": "976319"
  },
  {
    "text": "favorite \"Effective Kotlin\" item? The one that you \nalways remember or the one that you always quote? ",
    "start": "976320",
    "end": "983640"
  },
  {
    "text": "I think to use factory functions would probably \nbe the one, or to avoid or to prefer composition  ",
    "start": "984280",
    "end": "993080"
  },
  {
    "text": "over inheritance. But those are, of course, not \noriginally my items. They are actually present  ",
    "start": "993080",
    "end": "1001160"
  },
  {
    "text": "in nearly all effective X formats as they are \nquite well-established items. However, I must  ",
    "start": "1001160",
    "end": "1011279"
  },
  {
    "text": "say I'm pretty proud of those two because I think \nI made those items very Kotlin-ish. In the item to  ",
    "start": "1011280",
    "end": "1023080"
  },
  {
    "text": "use factory functions, to prefer factory functions \ninstead of secondary constructors. Because, okay,  ",
    "start": "1023080",
    "end": "1028439"
  },
  {
    "text": "you're stealing the constructor to create an \nobject, you cannot live without a constructor.   But the thing is that for creating something \noutside of a basic way of creating an object,  ",
    "start": "1028440",
    "end": "1039559"
  },
  {
    "text": "basic in the way that the one that relates, \ncorresponds directly to the shape of this object,  ",
    "start": "1039560",
    "end": "1046760"
  },
  {
    "text": "instead of making other constructors, it's better \nto use a factory function. I'm very proud of this  ",
    "start": "1046760",
    "end": "1056280"
  },
  {
    "text": "item because back then and still on many blog \nposts, people are just quoting effective Java,  ",
    "start": "1056280",
    "end": "1063640"
  },
  {
    "text": "which is suggesting to use factory functions, \nwhich as I said, sorry, compile an object,  ",
    "start": "1063640",
    "end": "1073880"
  },
  {
    "text": "factory functions, which are not very Kotlin-ish, \nwhich are very strange thing in Kotlin. Whereas I,  ",
    "start": "1073880",
    "end": "1081120"
  },
  {
    "text": "here, extracted all the basic ways of creating \nobjects, creating different kinds of objects  ",
    "start": "1081120",
    "end": "1087080"
  },
  {
    "text": "that are used in Kotlin. I think it is a very nice \nsummary that for universal factories of some kind,  ",
    "start": "1088240",
    "end": "1101440"
  },
  {
    "text": "you are using top-level functions. But if you \nwant to create a copy of an object, or transform,  ",
    "start": "1101440",
    "end": "1108120"
  },
  {
    "text": "or convert from one type to another, you are \nusing conversion functions or an extension   function with these two graphics, two and the \nother type. And you can use a factory object  ",
    "start": "1108120",
    "end": "1121160"
  },
  {
    "text": "for a complex object that requires dependency, \netc, etc. So I think I made a nice repository  ",
    "start": "1121160",
    "end": "1129880"
  },
  {
    "text": "of all the different ways we create objects \nand in what situations we generally use them. ",
    "start": "1129880",
    "end": "1137880"
  },
  {
    "text": "And about using composition over inheritance, \nI also am very proud of that because Joshua  ",
    "start": "1137880",
    "end": "1149360"
  },
  {
    "text": "made a very good argument about the problems with \ninheritance. He directly pointed out what was very  ",
    "start": "1150400",
    "end": "1162840"
  },
  {
    "text": "shocking and revealing for the community that \ninheritance breaks encapsulation and can lead  ",
    "start": "1162840",
    "end": "1168600"
  },
  {
    "text": "to some serious problems in the long run. And \nthat was very insightful, very useful. I think  ",
    "start": "1168600",
    "end": "1176360"
  },
  {
    "text": "it's amazing. I also included that. But I think \nhe still missed something that is much bigger.  ",
    "start": "1176360",
    "end": "1182600"
  },
  {
    "text": "He missed something that is much bigger, which is \nthat extracting behavior by inheritance typically  ",
    "start": "1182600",
    "end": "1192200"
  },
  {
    "text": "complicates our code quite massively. In big \npart because we can only inherit from one class,  ",
    "start": "1192200",
    "end": "1198799"
  },
  {
    "text": "but if we could inherit from many classes, it \nwouldn't help. It would just hurt us in different   ways. The point is that if you want to extract \nsome functionality, if you use inheritance,  ",
    "start": "1198800",
    "end": "1209360"
  },
  {
    "text": "it's first of all implicit, it's hard to find it. \nSo it's hard to navigate our code and understand  ",
    "start": "1209360",
    "end": "1220080"
  },
  {
    "text": "what's going on. Second of all, it is hard to \norganize it because then you must put it in the  ",
    "start": "1220080",
    "end": "1228279"
  },
  {
    "text": "upper class, but you can only inherit from one \nclass. So in the result, we have these massive  ",
    "start": "1228920",
    "end": "1234240"
  },
  {
    "text": "classes like base activity, or base controller, \nor base whatever, which has a massive amount of  ",
    "start": "1234240",
    "end": "1241120"
  },
  {
    "text": "classes. And all these kinds of problems that \nI could observe over the years that are the  ",
    "start": "1241120",
    "end": "1247559"
  },
  {
    "text": "result of overusing inheritance for extracting \ncommon behavior, I think that's the strongest  ",
    "start": "1247560",
    "end": "1254760"
  },
  {
    "text": "argument against inheritance. I am very proud to \nmyself that I defined it and I described it there.",
    "start": "1254760",
    "end": "1264280"
  },
  {
    "start": "1266000",
    "end": "1862000"
  },
  {
    "text": "Awesome. It's an amazing tool to give you, \nlike, to hear again about those items. Now  ",
    "start": "1266280",
    "end": "1273720"
  },
  {
    "text": "you make me want to get back to the book and give \nit another read. And talking about these actually,  ",
    "start": "1273720",
    "end": "1281360"
  },
  {
    "text": "I'm curious because Kotlin, the language itself \nis evolving. For folks that are not into it  ",
    "start": "1281360",
    "end": "1288520"
  },
  {
    "text": "that much, Version 2.1 got released some months \nago, weeks ago, and it's containing new language  ",
    "start": "1289440",
    "end": "1297600"
  },
  {
    "text": "features like guarded one and so on. So I'm \nwondering, how does \"Effective Kotlin\" keep  ",
    "start": "1297600",
    "end": "1305799"
  },
  {
    "text": "up to date with an evolving language? And it's \nnot just a new language feature now. We saw  ",
    "start": "1305800",
    "end": "1310680"
  },
  {
    "text": "Kotlin getting more and more multi-platform. \nSo I assume there will be items that are more  ",
    "start": "1311400",
    "end": "1318680"
  },
  {
    "text": "specific to, I don't know, using Kotlin \nin a multi-platform manner. So in general,  ",
    "start": "1318680",
    "end": "1324880"
  },
  {
    "text": "how do you keep your book up to date? Are you \nplanning a second edition? How do you evolve it? ",
    "start": "1324880",
    "end": "1334200"
  },
  {
    "text": "Kotlin in its core hasn't really changed much \nsince I published this book. You're right  ",
    "start": "1335560",
    "end": "1344320"
  },
  {
    "text": "that Kotlin introduced some other capabilities. \nThroughout this time, coroutines were released,  ",
    "start": "1344320",
    "end": "1352919"
  },
  {
    "text": "which was a huge thing. I haven't updated \n\"Effective Kotlin\" with coroutines because  ",
    "start": "1352920",
    "end": "1364160"
  },
  {
    "text": "I published a separate book about coroutines \n“Effective Coroutines”, which is explaining   coroutines but also describing best practices \nfor using them. So that's why I feel perfectly  ",
    "start": "1364160",
    "end": "1377440"
  },
  {
    "text": "fine with not describing coroutines there. If \nyou want to learn about coroutines, if you want  ",
    "start": "1377440",
    "end": "1383559"
  },
  {
    "text": "to learn how to use coroutines, just check out my \nother book, which is also extremely popular, about  ",
    "start": "1383560",
    "end": "1394800"
  },
  {
    "text": "multi-platform capabilities. I overviewed them \nin the first edition, but back then they were not  ",
    "start": "1394800",
    "end": "1408440"
  },
  {
    "text": "used too widely. I might open myself for observing \nif those multi-platform capabilities are changing  ",
    "start": "1408960",
    "end": "1422919"
  },
  {
    "text": "some aspects of style. Maybe I should consider \nthat. But these capabilities in the... This is  ",
    "start": "1422920",
    "end": "1431480"
  },
  {
    "text": "still a wild west, so we still need to wait \nsome time to see how this actually influences  ",
    "start": "1431480",
    "end": "1438440"
  },
  {
    "text": "the result style. We still don't really know \nhow people will be using that. For instance,  ",
    "start": "1440760",
    "end": "1446400"
  },
  {
    "text": "right now there are already many companies that \nare extracting some parts into logic and clients  ",
    "start": "1446400",
    "end": "1461840"
  },
  {
    "text": "into common modules to reuse them between Android, \niOS, web. But there is already another approach,  ",
    "start": "1461840",
    "end": "1471320"
  },
  {
    "text": "which is Compose Multiplatform, which is quite \nyoung at the moment, but evolving very quickly,  ",
    "start": "1471320",
    "end": "1478759"
  },
  {
    "text": "that would completely change this picture. It's \nvery different if you need to design your code  ",
    "start": "1479280",
    "end": "1484560"
  },
  {
    "text": "for being used in different languages versus if \nyou just write this code in Kotlin and it is just  ",
    "start": "1484560",
    "end": "1493960"
  },
  {
    "text": "compiled for different platforms. I haven't yet \nincluded that too much in the book. I described  ",
    "start": "1493960",
    "end": "1507640"
  },
  {
    "text": "in detail the Kotlin multi-platform capabilities \nand the problems or the specificities of different  ",
    "start": "1508480",
    "end": "1519919"
  },
  {
    "text": "platforms like JVM or JS platform in another book, \nin the \"Advanced Kotlin\" book. But yes, I'm not  ",
    "start": "1519920",
    "end": "1532840"
  },
  {
    "text": "planning to update \"Effective Kotlin\" about it.\nAbout other things, Kotlin hasn't really changed  ",
    "start": "1532840",
    "end": "1540840"
  },
  {
    "text": "much. Kotlin 2.0 was just an internal cleanup. The \nK2 compiler introduced some small improvements and  ",
    "start": "1540840",
    "end": "1551600"
  },
  {
    "text": "better build time, but essentially it hasn't \nchanged the language. The guards that you  ",
    "start": "1551600",
    "end": "1558720"
  },
  {
    "text": "mentioned are a very minor thing. Many other \nthings that were introduced, I might consider  ",
    "start": "1558720",
    "end": "1567520"
  },
  {
    "text": "adding some item related to one or two of them, \nbut most of them are not changing anything. I'm  ",
    "start": "1567520",
    "end": "1574600"
  },
  {
    "text": "rather updating my other books about Kotlin just \nto show that those capabilities are possible. ",
    "start": "1574600",
    "end": "1583280"
  },
  {
    "text": "About updating the book, it's actually the third \nedition right now, I think. But I'm not updating  ",
    "start": "1584000",
    "end": "1596160"
  },
  {
    "text": "this book because Kotlin is changing. I'm \nprimarily updating this book because I am  ",
    "start": "1596160",
    "end": "1602040"
  },
  {
    "text": "changing. One thing that has changed over time \nis that I got more mature in some aspects.  ",
    "start": "1602040",
    "end": "1615600"
  },
  {
    "text": "I organized some of the rules better in my head. \nI, for instance, described something and I think  ",
    "start": "1619960",
    "end": "1630320"
  },
  {
    "text": "it's a good description, but sometime later I \nfigured out that maybe a better example can be  ",
    "start": "1630320",
    "end": "1637240"
  },
  {
    "text": "used or something else can be described. That was \na big source of changes in the book. The second  ",
    "start": "1637240",
    "end": "1647679"
  },
  {
    "text": "big source of changes in the book is related to \nefficiency optimization. That was my, let's say,  ",
    "start": "1647680",
    "end": "1656280"
  },
  {
    "text": "weakest point when I was writing this book. \nI read a lot about performance optimization,  ",
    "start": "1656280",
    "end": "1666160"
  },
  {
    "text": "but I wasn't that much of a practitioner in this \narea when I was writing the initial version of  ",
    "start": "1666840",
    "end": "1675039"
  },
  {
    "text": "this book. I don't know, it was 2017, something \nlike that. Over the last couple of years,  ",
    "start": "1675040",
    "end": "1683880"
  },
  {
    "text": "I've been specializing in efficiency \noptimization. I'm literally working as  ",
    "start": "1683880",
    "end": "1691640"
  },
  {
    "text": "a consultant for companies and literally helping \nthose companies either deal with some problems,  ",
    "start": "1691640",
    "end": "1703680"
  },
  {
    "text": "like exceptions that they are dealing with \nand that are not easy to find or instabilities  ",
    "start": "1703680",
    "end": "1713560"
  },
  {
    "text": "that they are not sure what is their origin.\nI also help optimize services and applications.  ",
    "start": "1713560",
    "end": "1729320"
  },
  {
    "text": "Over those years, I gained plenty of knowledge \nabout efficiency. I was updating the book. But  ",
    "start": "1730760",
    "end": "1745440"
  },
  {
    "text": "right now, I feel that this last part, because \nit is the sixth part, no, fourth or sixth part,  ",
    "start": "1745440",
    "end": "1755480"
  },
  {
    "text": "one of the parts, is about efficiency. It includes \na lot of information, like third part efficiency.  ",
    "start": "1755480",
    "end": "1769360"
  },
  {
    "text": "It includes a lot of information, but I feel \nthey are not well-organized. I organized them  ",
    "start": "1769360",
    "end": "1775640"
  },
  {
    "text": "in the same way as \"Effective Java\" organized \nthem. I started from how memory is allocated,  ",
    "start": "1775640",
    "end": "1781560"
  },
  {
    "text": "from optimizing memory and stuff \nand stuff and stuff. But right now,  ",
    "start": "1781560",
    "end": "1788320"
  },
  {
    "text": "I would organize it in a different way and I \nplan to organize it in a different way. I hope   to make this update next year. I plan to start \nfrom measuring things because that's actually  ",
    "start": "1788320",
    "end": "1800399"
  },
  {
    "text": "how we should start. Beyond all those rules for \nbetter memory management and stuff, there is that  ",
    "start": "1800400",
    "end": "1808200"
  },
  {
    "text": "we should just set up tools to measure things, \nto see our response time, memory allocation, use,  ",
    "start": "1808200",
    "end": "1816399"
  },
  {
    "text": "etc., etc. Measuring the bugging and then going \ndown into practices that we use on different  ",
    "start": "1816400",
    "end": "1824520"
  },
  {
    "text": "levels. Cache that is used on all the levels \nuntil the very, very low-level optimizations.  ",
    "start": "1824520",
    "end": "1834080"
  },
  {
    "text": "Things like optimizing for primitives. It should \nbe one of the last items because it's the last  ",
    "start": "1837120",
    "end": "1849480"
  },
  {
    "text": "resource practice that we use only in the parts \nthat need to be extremely, extremely efficient.",
    "start": "1849480",
    "end": "1862000"
  },
  {
    "start": "1862000",
    "end": "2254000"
  },
  {
    "text": "Awesome. We touched a lot on a number of \ndifferent things. I hope we're going to   see a revised version of \"Effective Kotlin,\" this \nyear or next year, that we can read through. But  ",
    "start": "1862000",
    "end": "1874440"
  },
  {
    "text": "you also mentioned other books. You mentioned \nthe \"Advanced Kotlin\" one, you mentioned the  ",
    "start": "1874440",
    "end": "1879639"
  },
  {
    "text": "coroutines one. I want to give the audience a \nbigger picture because in reality, \"Effective  ",
    "start": "1879640",
    "end": "1887480"
  },
  {
    "text": "Kotlin\" is part of a series of books. I think it's \ncalled “Kotlin for Developers”. Correct me if I'm  ",
    "start": "1887480",
    "end": "1893720"
  },
  {
    "text": "wrong. I want to give you the opportunity \nto spotlight which other books you wrote in  ",
    "start": "1893720",
    "end": "1899600"
  },
  {
    "text": "this series so that there might be people in the \naudience who are more interested in, as you said,  ",
    "start": "1899600",
    "end": "1906960"
  },
  {
    "text": "more advanced Kotlin. There is a dedicated \nbook for them. Tell us about this series,  ",
    "start": "1906960",
    "end": "1915399"
  },
  {
    "text": "which books are inside, and who are they for?\nOriginally, I published this book with Igor,  ",
    "start": "1915400",
    "end": "1925520"
  },
  {
    "text": "\"Android Development with Kotlin.\" Then I \npublished \"Effective Kotlin\" and I felt quite  ",
    "start": "1925520",
    "end": "1932720"
  },
  {
    "text": "satisfied with that. There was a book about \nKotlin for beginners and how to use it well.  ",
    "start": "1932720",
    "end": "1942600"
  },
  {
    "text": "I felt pretty well. Then coroutines came out. I \npublished a book about coroutines, which is still,  ",
    "start": "1942600",
    "end": "1951039"
  },
  {
    "text": "I believe, the most popular and well-established \nbook about Kotlin coroutines, \"Kotlin Coroutines:  ",
    "start": "1951040",
    "end": "1958320"
  },
  {
    "text": "Deep Dive.\" Then I wanted to stop. But one thing \nwas bugging me. I kind of had a feeling that I  ",
    "start": "1958320",
    "end": "1969159"
  },
  {
    "text": "just haven't covered it all. I wasn't fully \nsatisfied with the first book I published.  ",
    "start": "1969160",
    "end": "1979320"
  },
  {
    "text": "Honestly, if I were writing my first book right \nnow, I would make it completely different. I did  ",
    "start": "1979320",
    "end": "1986320"
  },
  {
    "text": "the best work I could do back then. But throughout \nthe years, I was teaching Kotlin. I'm a trainer.  ",
    "start": "1986320",
    "end": "1992360"
  },
  {
    "text": "I'm conducting workshops. I'm teaching people. \nI'm also giving consultations. I've seen quite a  ",
    "start": "1992360",
    "end": "2003360"
  },
  {
    "text": "lot and I've gained a lot of knowledge about how \nto explain different things. I wasn't happy with  ",
    "start": "2003360",
    "end": "2012760"
  },
  {
    "text": "this initial book. That's why I decided to kind \nof rewrite it, but rewrite it in a complete form,  ",
    "start": "2012760",
    "end": "2020200"
  },
  {
    "text": "like one good form that ends it all. I decided \nto turn it off into a series. That is a series  ",
    "start": "2020200",
    "end": "2032000"
  },
  {
    "text": "of five books. That's a complete series right now. \nIt starts from \"Kotlin Essentials,\" which is about  ",
    "start": "2032000",
    "end": "2042120"
  },
  {
    "text": "essentials of Kotlin.\nThe basics.   All the basic features. Then there is \nfunctional Kotlin, which covers more  ",
    "start": "2042120",
    "end": "2051679"
  },
  {
    "text": "advanced features. Lambdas, function references, \ncollection processing. I kind of have a feeling  ",
    "start": "2051680",
    "end": "2060399"
  },
  {
    "text": "that those two books could be one book because \nthey together cover the essentials, let's say.  ",
    "start": "2060400",
    "end": "2067399"
  },
  {
    "text": "However, it would be a massive book. I just \nhad a lot to say about both of those. So I  ",
    "start": "2068000",
    "end": "2077960"
  },
  {
    "text": "wanted to cover things about all the different \ncollection processing functions with real life  ",
    "start": "2077960",
    "end": "2083839"
  },
  {
    "text": "examples and all the other features, like how to \ndefine your own DSL, how to use scope functions,  ",
    "start": "2083840",
    "end": "2096280"
  },
  {
    "text": "yeah, let, with, apply. I had a lot to say. \nThat's why there are two books instead of one,  ",
    "start": "2096280",
    "end": "2104560"
  },
  {
    "text": "but I think they are divided pretty nicely. \nThe \"Kotlin Essentials\" is kind of enough for  ",
    "start": "2104560",
    "end": "2111800"
  },
  {
    "text": "a person who just wants to use something similar \nas in Java, but in Kotlin. Functional Kotlin is a  ",
    "start": "2111800",
    "end": "2121240"
  },
  {
    "text": "very good lecture for those who are basic Kotlin \nusers and want to improve their Kotlin skills. ",
    "start": "2121240",
    "end": "2129720"
  },
  {
    "text": "Then in the series, there is coroutines, which is \nlike the next level. Once you know all the basics,  ",
    "start": "2131560",
    "end": "2140440"
  },
  {
    "text": "you should learn coroutines as they are \nextremely useful and important in Kotlin,  ",
    "start": "2140440",
    "end": "2146520"
  },
  {
    "text": "both in Android and in the back-end world. \nThen there is a book, \"Advanced Kotlin,\"   which is actually one of my favorite books. \nIt's a book I really, really wanted to write,  ",
    "start": "2146520",
    "end": "2166040"
  },
  {
    "text": "even though there is not that much audience \nfor this book because it's a book about,  ",
    "start": "2166040",
    "end": "2173040"
  },
  {
    "text": "particularly about, advanced Kotlin features. It \nis describing KSP in nice detail, the compiler  ",
    "start": "2173040",
    "end": "2180800"
  },
  {
    "text": "plugins. Here is your chapter.\nAbout static analyzers. Go  ",
    "start": "2180800",
    "end": "2186160"
  },
  {
    "text": "check \"Advanced Kotlin\" for sure.\nI actually love this book. I was  ",
    "start": "2186160",
    "end": "2194079"
  },
  {
    "text": "extremely passionate about writing it. There \nis about multi-platform development, about the  ",
    "start": "2194080",
    "end": "2199880"
  },
  {
    "text": "specificities of Kotlin/JS, about interoperability \nwith Java, about generic variance modifiers, about  ",
    "start": "2201000",
    "end": "2207600"
  },
  {
    "text": "delegation pattern. Only advanced Kotlin features. \nIt's packing the whole book and I think it's  ",
    "start": "2207600",
    "end": "2217160"
  },
  {
    "text": "amazing, annotation processing. So, a very fun \nbook, but for a very particular audience, for a  ",
    "start": "2217160",
    "end": "2225920"
  },
  {
    "text": "very small audience of people who are very good at \nKotlin and are interested only in advanced things.  ",
    "start": "2225920",
    "end": "2233640"
  },
  {
    "text": "Then it ends with \"Effective Kotlin,\" which \nis about the best practices for using Kotlin. ",
    "start": "2233640",
    "end": "2241079"
  },
  {
    "text": "Folks in the audience that have the desire \nto learn Kotlin have plenty of opportunity  ",
    "start": "2241080",
    "end": "2247560"
  },
  {
    "text": "with your series. You can find it on \nAmazon, on Leanpub. Go check them out.",
    "start": "2247560",
    "end": "2254000"
  },
  {
    "start": "2254000",
    "end": "2663000"
  },
  {
    "text": "So as the episode is slowly getting to an end, \nI actually want to ask you one final question.  ",
    "start": "2254000",
    "end": "2262480"
  },
  {
    "text": "It's about an initiative that I know you ran \nsome years ago. I think it helps the audience  ",
    "start": "2263000",
    "end": "2270400"
  },
  {
    "text": "get an understanding of you as a person and \nas a teacher, as someone that wants to give  ",
    "start": "2270400",
    "end": "2279319"
  },
  {
    "text": "to the rest of the community. This initiative \nwas called Give IT Forward. I want to leave  ",
    "start": "2279320",
    "end": "2286120"
  },
  {
    "text": "you the stage to tell us what it was about and \nuse this as a closing note for this episode. ",
    "start": "2286120",
    "end": "2294960"
  },
  {
    "text": "I would love to resume it again with other books, \nbut I just wanted to spread some knowledge about  ",
    "start": "2294960",
    "end": "2305119"
  },
  {
    "text": "programming in the wider community among \nnon-developers. My reflection was that  ",
    "start": "2305120",
    "end": "2316960"
  },
  {
    "text": "there are plenty of great materials for learning \nprogramming. You can use YouTube, you can use  ",
    "start": "2316960",
    "end": "2323080"
  },
  {
    "text": "free courses. There are plenty of ways for learn \nthat. The problem of people is that they do not  ",
    "start": "2323080",
    "end": "2330080"
  },
  {
    "text": "know how to start. I decided to write a book about \nprogramming from scratch. I wanted it to present  ",
    "start": "2330080",
    "end": "2346560"
  },
  {
    "text": "the basic concepts of a language and make it fun, \ninteresting, entertaining so that someone can just  ",
    "start": "2346560",
    "end": "2360560"
  },
  {
    "text": "read it, feel that programming is fun and learning \nabout programming is fun. Then a very big part  ",
    "start": "2360560",
    "end": "2369280"
  },
  {
    "text": "of this book, there is a part with practical \napplication, I will explain it in a moment,  ",
    "start": "2369280",
    "end": "2376960"
  },
  {
    "text": "and then a very big part of this book is what to \ndo next. There is a chapter, hey, if you want to  ",
    "start": "2376960",
    "end": "2384359"
  },
  {
    "text": "learn next, there are plenty of ways. There is \na chapter, hey, this is what you can do, then  ",
    "start": "2384360",
    "end": "2391080"
  },
  {
    "text": "there is a chapter on how you can learn. You can \nfind YouTube courses and some examples of YouTube  ",
    "start": "2391080",
    "end": "2396880"
  },
  {
    "text": "courses. You can use some free courses and \nsome examples. You can even use games to  ",
    "start": "2398360",
    "end": "2405520"
  },
  {
    "text": "learn programming. You can use applications \nfor that, etc., etc., etc. That was the idea.  ",
    "start": "2405520",
    "end": "2414000"
  },
  {
    "text": "I wanted to inspire as many people as possible.\nI decided to not write about Kotlin because as  ",
    "start": "2414000",
    "end": "2428040"
  },
  {
    "text": "much as Kotlin is an amazing language and it is \nextremely important in the Android community,  ",
    "start": "2428040",
    "end": "2433960"
  },
  {
    "text": "it is still a little bit of a niche in the wider \ncommunity. If someone asks me how to most easily  ",
    "start": "2433960",
    "end": "2443400"
  },
  {
    "text": "find a job as a programmer, I'm not telling \nthat person to learn Kotlin. I'm telling that  ",
    "start": "2443400",
    "end": "2449079"
  },
  {
    "text": "person to learn JavaScript or Python. Those are \nmuch, much easier ways to start with programming,  ",
    "start": "2449080",
    "end": "2455840"
  },
  {
    "text": "at least at the moment at the market. I published \nthe first book about JavaScript. I was describing  ",
    "start": "2455840",
    "end": "2465600"
  },
  {
    "text": "all the basics of JavaScript. There was a chapter \nwhen we were making a game. JavaScript, there was  ",
    "start": "2465600",
    "end": "2472840"
  },
  {
    "text": "a ping game and there were all the things, how to \nlearn JavaScript further. I paid for 1,500 books,  ",
    "start": "2472840",
    "end": "2485720"
  },
  {
    "text": "I think, with the label, Give IT Forward. \nThere was an instruction, do not keep it,  ",
    "start": "2487320",
    "end": "2493920"
  },
  {
    "text": "read it or not and give it to another person who \nmight benefit from that. You just gave it away.  ",
    "start": "2493920",
    "end": "2500200"
  },
  {
    "text": "Some of them physically to a person, many of them \nwere sent to some schools, to some foundations,  ",
    "start": "2500200",
    "end": "2505400"
  },
  {
    "text": "to some hospitals, even to prisons, to different \nplaces. I know they are going around. I'm still  ",
    "start": "2505400",
    "end": "2514960"
  },
  {
    "text": "sometimes receiving some information that someone \nsends, \"Hey, I received this book and it's amazing  ",
    "start": "2514960",
    "end": "2520040"
  },
  {
    "text": "that you did that.\" A year later, I made another \nbook which was about Python, which was even bigger  ",
    "start": "2520040",
    "end": "2529720"
  },
  {
    "text": "because Python has plenty of usages, so I added \na part about different practical usages. There  ",
    "start": "2529720",
    "end": "2538400"
  },
  {
    "text": "was a short chapter, how to write a backend \napplication, how to analyze data in Python,  ",
    "start": "2538400",
    "end": "2545960"
  },
  {
    "text": "how to make a script or something like that. That \nwas, of course, a game. Can you guess what game  ",
    "start": "2545960",
    "end": "2551760"
  },
  {
    "text": "was made in Python?\nSnake?  Snake, yes. That's exactly that. We were making \nSnake in the book about Python. I also paid for,  ",
    "start": "2551760",
    "end": "2566080"
  },
  {
    "text": "I think, 1,000 books, but I believe 1,500 was \nsponsored by Allegro, by the company. We also  ",
    "start": "2566080",
    "end": "2575360"
  },
  {
    "text": "gave them away. I'm not sure right now if they \nsponsored JavaScript or Python because it was  ",
    "start": "2575360",
    "end": "2581880"
  },
  {
    "text": "before the pandemic, but one of them, I believe, \nthey sponsored Python. I really want to resume  ",
    "start": "2582520",
    "end": "2592920"
  },
  {
    "text": "that and publish other books in this formula and \ngive them away. Of course, those books are also  ",
    "start": "2592920",
    "end": "2599319"
  },
  {
    "text": "available in the market, but I intentionally \nmade them really cheap. They are much,  ",
    "start": "2599320",
    "end": "2606440"
  },
  {
    "text": "much cheaper than other books in the market about \nthat. Also, I might add that I'm from Poland,  ",
    "start": "2606440",
    "end": "2613160"
  },
  {
    "text": "so those books were published in Polish, but \nonce the war started, we also made an edition in  ",
    "start": "2613160",
    "end": "2623599"
  },
  {
    "text": "Ukrainian. We found people who wanted to translate \nthis book into Ukrainian. They translated it and  ",
    "start": "2623600",
    "end": "2635240"
  },
  {
    "text": "we also had correctors and we also bought some \nbundles and we gave it away. Many of them were  ",
    "start": "2635240",
    "end": "2642840"
  },
  {
    "text": "actually sent to universities in Ukraine.\nThat's amazing. The whole idea of having  ",
    "start": "2642840",
    "end": "2650480"
  },
  {
    "text": "those books that people can share around and \nkeep on learning. It's an amazing initiative.  ",
    "start": "2650480",
    "end": "2658119"
  },
  {
    "text": "I remember seeing a picture of you with the \nbooks in hand. Like, \"Please take one.\" Okay,  ",
    "start": "2658120",
    "end": "2664560"
  },
  {
    "start": "2663000",
    "end": "2788000"
  },
  {
    "text": "so we reached the end of the episode. \nAmazing wisdom, as always, Marcin. ",
    "start": "2664560",
    "end": "2672280"
  },
  {
    "text": "It's always nice to meet you.\nIt's always a pleasure, really. I want   to give you one last opportunity to share with \nthe audience where people can find you online if  ",
    "start": "2672280",
    "end": "2681080"
  },
  {
    "text": "they want to connect with you or ask you question.\nHey, asking questions is easiest on Twitter or X.  ",
    "start": "2681080",
    "end": "2689640"
  },
  {
    "text": "I'm using it. You can also send me something \non LinkedIn, but I'm checking it less often.  ",
    "start": "2689640",
    "end": "2697039"
  },
  {
    "text": "You can also probably quite easily find my email \nin different places. If you are interested in  ",
    "start": "2699280",
    "end": "2708320"
  },
  {
    "text": "workshops, then I'm making regular workshops, \nopen workshops, teaching Kotlin. You can find them  ",
    "start": "2708320",
    "end": "2715240"
  },
  {
    "text": "on kt.academy. It's from Kotlin Academy. I also \norganize company workshops. If you have a budget  ",
    "start": "2715240",
    "end": "2725840"
  },
  {
    "text": "and you can organize a workshop in your \ncompany, then I'm sure we can set it up. ",
    "start": "2727280",
    "end": "2734960"
  },
  {
    "text": "Amazing. With this, I want to thank you very much \nfor being on stage with us today, Marcin Moskala. ",
    "start": "2734960",
    "end": "2741920"
  },
  {
    "text": "Thank you. My pleasure.\nI also want to thank everyone   for listening in the audience. Well, I hope you \nenjoyed the episode. Well, have a great day.",
    "start": "2741920",
    "end": "2754800"
  }
]