[
  {
    "text": "[Music] welcome to the go-to podcast each",
    "start": "280",
    "end": "7560"
  },
  {
    "text": "episode covers the brightest and boldest ideas from the world's leading experts in software development tune in for",
    "start": "7560",
    "end": "14080"
  },
  {
    "text": "practical lessons compelling theories and plenty of",
    "start": "14080",
    "end": "19240"
  },
  {
    "text": "inspiration go to gathers the brightest Minds in the software Community to help developers tackle projects today plan",
    "start": "19960",
    "end": "26720"
  },
  {
    "text": "for tomorrow and create a better future stay up to dat with the latest in Tech through go-to's top rated events held",
    "start": "26720",
    "end": "33320"
  },
  {
    "text": "online and in person in cities like Amsterdam London Copenhagen and Chicago",
    "start": "33320",
    "end": "39160"
  },
  {
    "text": "and by subscribing to the go-to conferences YouTube channel where you can find thousands more highquality de",
    "start": "39160",
    "end": "44719"
  },
  {
    "text": "talks learn more ecotopia [Music]",
    "start": "44719",
    "end": "51440"
  },
  {
    "text": "dotech hello everyone and welcome back to goto book club uh my name is James Lewis and I'm here today with the author",
    "start": "51440",
    "end": "58800"
  },
  {
    "text": "of data oriented or data data oriented programming you at 10 um I've did I get",
    "start": "58800",
    "end": "65080"
  },
  {
    "text": "your name right apologies the pronunciation okay is it perfect welcome to goto book club happy to be here so so",
    "start": "65080",
    "end": "72799"
  },
  {
    "text": "we're here to to to talk about your book can you just give us a brief introduction to uh to to the content",
    "start": "72799",
    "end": "79000"
  },
  {
    "text": "yeah so first of all it's my first take book maybe it would be the last one I'm not",
    "start": "79000",
    "end": "85079"
  },
  {
    "text": "sure I did it with u Manning and I quite uh enjoy enjoyed it it took around 2",
    "start": "85079",
    "end": "91439"
  },
  {
    "text": "years to write a book and Manning has this very interesting early adoption program",
    "start": "91439",
    "end": "98079"
  },
  {
    "text": "so um I didn't have to wait until the book is totally completed in order to",
    "start": "98079",
    "end": "104159"
  },
  {
    "text": "get feedback and see how many book copy I sold and uh you know",
    "start": "104159",
    "end": "110079"
  },
  {
    "text": "I'm I'm a developer and I'm in the agile world so I need immediate feedback I'm not sure I could have waited for two",
    "start": "110079",
    "end": "116320"
  },
  {
    "text": "years before getting any hint so after three chapters were published it was",
    "start": "116320",
    "end": "121680"
  },
  {
    "text": "launched and people vot it and wrote about the book what they like what they",
    "start": "121680",
    "end": "126719"
  },
  {
    "text": "don't like and I was able even to change a little bit the table of content based on feedback so I really really enjoyed",
    "start": "126719",
    "end": "132680"
  },
  {
    "text": "the the process so it's almost like a lean Pub type process where you get very very early feedback yeah a um maybe you",
    "start": "132680",
    "end": "139720"
  },
  {
    "text": "could just give us a brief introduction to yourself as well for the folk out there who yeah so I'm around 40",
    "start": "139720",
    "end": "146360"
  },
  {
    "text": "something year old I have a family I live in Israel I've been a developer for",
    "start": "146360",
    "end": "153000"
  },
  {
    "text": "more than 20 years I started with you know C C++ and J then got upgraded to",
    "start": "153000",
    "end": "159760"
  },
  {
    "text": "Java and then upgraded to JavaScript but I started to see the light when I",
    "start": "159760",
    "end": "166159"
  },
  {
    "text": "discovered closure 10 years ago mhm um",
    "start": "166159",
    "end": "171200"
  },
  {
    "text": "and it made me so I you I like to say that there is a",
    "start": "171200",
    "end": "177120"
  },
  {
    "text": "before and after closure for me before or 10 years",
    "start": "177120",
    "end": "182440"
  },
  {
    "text": "ago programming was just you know my job but since then it has become my patient",
    "start": "182440",
    "end": "187720"
  },
  {
    "text": "I really really enjoy programming I I like to to write uh Insight in blog post",
    "start": "187720",
    "end": "194200"
  },
  {
    "text": "programming has become fun again and what is it you think about the closure programming language in particular that",
    "start": "194200",
    "end": "200799"
  },
  {
    "text": "that gives you that kind of that real Buzz yeah so that's that was uh kind of",
    "start": "200799",
    "end": "205879"
  },
  {
    "text": "difficult to to nail it down and to to to so I discussed that with the closure Community after my attempt to write a",
    "start": "205879",
    "end": "213439"
  },
  {
    "text": "book about closure with Manning an an attempt that didn't succeed so there was",
    "start": "213439",
    "end": "220360"
  },
  {
    "text": "an early program launch but you know 100 people bought the book overall so maning",
    "start": "220360",
    "end": "226480"
  },
  {
    "text": "told me look we we like you but we cannot make business with you so come up",
    "start": "226480",
    "end": "232319"
  },
  {
    "text": "can you come with another topic for the book and I say okay um I cannot convince people to adopt closure but I like it so",
    "start": "232319",
    "end": "240000"
  },
  {
    "text": "much there must be something in closure like Universal Paradigm that I could",
    "start": "240000",
    "end": "245799"
  },
  {
    "text": "share with the with the community of developer so I spend a couple of weeks and months with with mining FK and when",
    "start": "245799",
    "end": "253239"
  },
  {
    "text": "with closure developers to to figure out is there a way to formulate closure",
    "start": "253239",
    "end": "258400"
  },
  {
    "text": "principles in a non-closure way and that's that's what data oriented",
    "start": "258400",
    "end": "264479"
  },
  {
    "text": "programming is about so is it's a way to get all the closure goodies without",
    "start": "264479",
    "end": "269919"
  },
  {
    "text": "having to learn closure syntax so you when we were talking before you talked",
    "start": "269919",
    "end": "275520"
  },
  {
    "text": "about the principles that you set out maybe you could talk through some of those principles that would be yes so",
    "start": "275520",
    "end": "283199"
  },
  {
    "text": "just before the principles what is the goal of you know each prog each program partner has a goal it's not that it's",
    "start": "283199",
    "end": "290039"
  },
  {
    "text": "the best thing for everything so the goal of data oned programming is to",
    "start": "290039",
    "end": "295160"
  },
  {
    "text": "reduce complexity of Information Systems",
    "start": "295160",
    "end": "300400"
  },
  {
    "text": "um and complexity you know not the O of thing not the the computational",
    "start": "300400",
    "end": "307360"
  },
  {
    "text": "complexity but more the system complexity by that I mean the the amount",
    "start": "307360",
    "end": "312600"
  },
  {
    "text": "of suffering that you experience when you try to understand the system or to add new features to a system so that's",
    "start": "312600",
    "end": "319319"
  },
  {
    "text": "complexity and my claim is that if you write your code following thata out",
    "start": "319319",
    "end": "325240"
  },
  {
    "text": "program principles then you will reduce the level of comp",
    "start": "325240",
    "end": "330680"
  },
  {
    "text": "complexity make sense no it does make sense yes so so when when we talk about complexity we often talk about the",
    "start": "330680",
    "end": "336080"
  },
  {
    "text": "difference between accidental versus essential complexity right um so are we",
    "start": "336080",
    "end": "341520"
  },
  {
    "text": "talking are you talking about the same sort of complexity then the sort of the stuff around you know the essential complexity if you want to reduce it you",
    "start": "341520",
    "end": "348479"
  },
  {
    "text": "have to to move to another problem but assuming that you are forced to solve",
    "start": "348479",
    "end": "354840"
  },
  {
    "text": "the current problem you cannot reduce the essential complexity but you can reduce the amount of accidental",
    "start": "354840",
    "end": "360479"
  },
  {
    "text": "complexity that you add to to your work so yeah we we deal with",
    "start": "360479",
    "end": "366680"
  },
  {
    "text": "accidental complexity I mean I I would I mean I think maybe some other people would argue as well that um that",
    "start": "366680",
    "end": "373400"
  },
  {
    "text": "actually some programming languages are better at dealing with certain types of essential complexity right as well right",
    "start": "373400",
    "end": "380120"
  },
  {
    "text": "I mean if you found out with closure that you actually get to solve problems in a slightly different way with closure when you right a full full full",
    "start": "380120",
    "end": "386880"
  },
  {
    "text": "disclaimer here I have actually written closure code I'm not entirely ignorant of of of writing closure so um but yeah",
    "start": "386880",
    "end": "392560"
  },
  {
    "text": "I mean is when you write closure do you find that there are certain problems that fit it more yes so this kind of",
    "start": "392560",
    "end": "398560"
  },
  {
    "text": "problem is at what we call the information system uh for example you know a backand",
    "start": "398560",
    "end": "405560"
  },
  {
    "text": "software that takes data from the database manipulate it a little bit and pass it forward or a front end",
    "start": "405560",
    "end": "412000"
  },
  {
    "text": "application with a state that we need to manage um it's not I don't think it's a",
    "start": "412000",
    "end": "419080"
  },
  {
    "text": "good Feit that program for writing databases or writing uh embedded systems",
    "start": "419080",
    "end": "425560"
  },
  {
    "text": "or routers or stuff like that where you need a a highly competit highly",
    "start": "425560",
    "end": "434680"
  },
  {
    "text": "computational thing and when performance is the key but when you manipulate data",
    "start": "434680",
    "end": "440319"
  },
  {
    "text": "here and there and when you also one important aspect of it is",
    "start": "440319",
    "end": "445360"
  },
  {
    "text": "that when your program manipulates data that it doesn't own M when the owner of",
    "start": "445360",
    "end": "451000"
  },
  {
    "text": "the data is another system for example the database is the owner of your data and your back end only has to pass data",
    "start": "451000",
    "end": "459160"
  },
  {
    "text": "around um if you write a compiler for example you you own the data you you",
    "start": "459160",
    "end": "465039"
  },
  {
    "text": "know exactly what what is the structure of your data there is no surprise so for that kind of problems I'm not sure that",
    "start": "465039",
    "end": "471879"
  },
  {
    "text": "ared programming is a perfect fit but for dealing with the real world and surprises of the real world I think it's",
    "start": "471879",
    "end": "478560"
  },
  {
    "text": "a good it's a good we have a sort of old joke in thought Works which is uh you know 50 maybe even 90% of our job is",
    "start": "478560",
    "end": "485639"
  },
  {
    "text": "taking data from a and moving it to B uh and the other 10% is showing it at C",
    "start": "485639",
    "end": "491879"
  },
  {
    "text": "right I mean that's that's pretty much what most Enterprise talk about exactly so for that kind of stuff I think",
    "start": "491879",
    "end": "499280"
  },
  {
    "text": "closure has been known to be good but the problem with closure is that it has a reputation of being hard",
    "start": "499280",
    "end": "507360"
  },
  {
    "text": "to learn or it's a different mindset so it's hard",
    "start": "507360",
    "end": "512560"
  },
  {
    "text": "for let's say Java developers to move to closure so I hope that with dop it will",
    "start": "512560",
    "end": "520518"
  },
  {
    "text": "uh you will bring it will bring closure way of thinking to nonclosure developer",
    "start": "520519",
    "end": "527440"
  },
  {
    "text": "and we have the tools for that as we will maybe talk about later the key thing in terms of uh code that we need",
    "start": "527440",
    "end": "535200"
  },
  {
    "text": "is the immutable data structures yeah that were invented by Richi when he",
    "start": "535200",
    "end": "540240"
  },
  {
    "text": "developed closure or discovered but since then it was in 2009 since then they have been ported to any programming",
    "start": "540240",
    "end": "547160"
  },
  {
    "text": "language you know to Java Ruby python JavaScript so we have all the tools for",
    "start": "547160",
    "end": "552560"
  },
  {
    "text": "that we just need uh to make the leap I guess to recap a bit so the goal of the book is",
    "start": "552560",
    "end": "559320"
  },
  {
    "text": "to introduce the way of thinking that closure developers use if you like we",
    "start": "559320",
    "end": "564880"
  },
  {
    "text": "the W en closure to introduce that to a wider audience and to give a WI audience the sort of tools the mental tools to",
    "start": "564880",
    "end": "572000"
  },
  {
    "text": "think about problems in a way that uh and solve problems in a way that that that you might solve with with a function program both the mental tools",
    "start": "572000",
    "end": "578160"
  },
  {
    "text": "and also the technical tools so that you can Implement in the book I use JavaScript as an example and when it",
    "start": "578160",
    "end": "584560"
  },
  {
    "text": "really matters I I illustrate also how to do it in Java uh but you know JavaScript is easy",
    "start": "584560",
    "end": "590800"
  },
  {
    "text": "to read by anybody so I use it more as the all the code examples in the book",
    "start": "590800",
    "end": "596560"
  },
  {
    "text": "work but it's more like you can read it as s code in order to get a real sense",
    "start": "596560",
    "end": "601720"
  },
  {
    "text": "of that it's not only abstract principles in it's pragmatic it's things that you can do tomorrow tomorrow",
    "start": "601720",
    "end": "607680"
  },
  {
    "text": "morning so it's both the mental tools and the technical tools and uh also the",
    "start": "607680",
    "end": "615360"
  },
  {
    "text": "motivation the way I I I wrote the book is um so I had a problem when I started to",
    "start": "615360",
    "end": "622720"
  },
  {
    "text": "write the book I was over enthusiastic yeah I I thought it was the best thing the material was the best material the",
    "start": "622720",
    "end": "629320"
  },
  {
    "text": "world and I wanted to convince and I was and you know when you are too convinced and you want too much to convince you",
    "start": "629320",
    "end": "635720"
  },
  {
    "text": "are not convincing so the the publisher told me keep",
    "start": "635720",
    "end": "641600"
  },
  {
    "text": "quiet and and then um they asked question the the person that worked with",
    "start": "641600",
    "end": "648360"
  },
  {
    "text": "me from man asked questions objections here you have a problem here you have a problem it's not a perfect fit and then",
    "start": "648360",
    "end": "655680"
  },
  {
    "text": "I I kind of become schizophrenic so on the one hand i'm enthusiastic on the I have lots of questions how am I going to",
    "start": "655680",
    "end": "663120"
  },
  {
    "text": "manage it and I came up with this interesting ideas to give voice to both",
    "start": "663120",
    "end": "669880"
  },
  {
    "text": "sides in the book so oh right okay and I wrote the book as a story as a meeting",
    "start": "669880",
    "end": "675519"
  },
  {
    "text": "between an old or a five or 10 year Java developer that struggle at work you work",
    "start": "675519",
    "end": "682920"
  },
  {
    "text": "for a consulting company like yours but another the name is Albatros I think in",
    "start": "682920",
    "end": "689480"
  },
  {
    "text": "the book and he has a problem to meet deadlines because of complexity and then he meets um Joe closure guy that is very",
    "start": "689480",
    "end": "700680"
  },
  {
    "text": "enthusiastic and wants to give him to reveal all the mental models from closure but to formulate them in a",
    "start": "700680",
    "end": "707600"
  },
  {
    "text": "non-closure way so the book is the the story of their meeting and and not you",
    "start": "707600",
    "end": "712839"
  },
  {
    "text": "know and the guy is not a yes man the Java developer so he asks many question and the closure coach the dop coach has",
    "start": "712839",
    "end": "720240"
  },
  {
    "text": "to refine his insights and teachings and it allowed me to manage the two voices",
    "start": "720240",
    "end": "726399"
  },
  {
    "text": "inside me to make it you know a dialog that's sounds like a really interesting approach so it's almost like",
    "start": "726399",
    "end": "732040"
  },
  {
    "text": "a business it's almost like what we would call a business Fable in some senses so I I think like the goal like",
    "start": "732040",
    "end": "737880"
  },
  {
    "text": "the goal exactly like that sort of structure where you have someone who's sort of taking taking the individual on",
    "start": "737880",
    "end": "743160"
  },
  {
    "text": "the journey towards Enlightenment yes and you know actually it goes back to Socrates h yes then the the dialog yeah",
    "start": "743160",
    "end": "752240"
  },
  {
    "text": "yeah yeah yeah ah super interesting so um so so we've heard a bit a bit about what what what the goal is as it were um",
    "start": "752240",
    "end": "760399"
  },
  {
    "text": "but also I mean so you s said about about some of the tools that the sort of mental and the the technical tools and",
    "start": "760399",
    "end": "766279"
  },
  {
    "text": "principles and things so maybe you could talk talk to us a little bit about about those about so there are basically four",
    "start": "766279",
    "end": "772000"
  },
  {
    "text": "principles that we could summarize as one meta principle that uh",
    "start": "772000",
    "end": "779360"
  },
  {
    "text": "can be expressed in four words treat data as data so that's dated programming",
    "start": "779360",
    "end": "785760"
  },
  {
    "text": "that's very simple treat data as data treat I would say data sorry say dat treat data as data now data is so treat",
    "start": "785760",
    "end": "793199"
  },
  {
    "text": "data sh treat data as data yeah yeah yeah yeah treat data as data treat data",
    "start": "793199",
    "end": "799079"
  },
  {
    "text": "as data okay yeah yeah UNP pick some of that for us yeah sure so basically what",
    "start": "799079",
    "end": "806199"
  },
  {
    "text": "what does it mean to treat data as data or data as data it means that data is a first class citizen like in",
    "start": "806199",
    "end": "812839"
  },
  {
    "text": "objectoriented programming objects are or classes are first class citizen in functional programming functions are",
    "start": "812839",
    "end": "819240"
  },
  {
    "text": "first class citizens uh in business class rich people are first",
    "start": "819240",
    "end": "825560"
  },
  {
    "text": "class so here dat is the first class and what does it take so it takes four",
    "start": "825560",
    "end": "831399"
  },
  {
    "text": "principles principle number one is to separate between code and data unlike",
    "start": "831399",
    "end": "837680"
  },
  {
    "text": "what op teaches who has taught for years we don't want to",
    "start": "837680",
    "end": "842959"
  },
  {
    "text": "encapsulate data and functionality together in objects we want data to have the right to live on its own and then",
    "start": "842959",
    "end": "851519"
  },
  {
    "text": "the cool thing is that the behavior part of your system becomes",
    "start": "851519",
    "end": "857480"
  },
  {
    "text": "stateless stateless functions or stateless methods and as you probably know state is the number one",
    "start": "857480",
    "end": "864720"
  },
  {
    "text": "enemy so we want to we cannot avoid state but we want",
    "start": "864720",
    "end": "869839"
  },
  {
    "text": "to tame it by putting it by localize it so only some slight pieces of our code",
    "start": "869839",
    "end": "875800"
  },
  {
    "text": "will will deal with state but all the other pieces are stateless and it's a",
    "start": "875800",
    "end": "881880"
  },
  {
    "text": "you know it's like a dream for unitest for theability for code reuse so that's principle",
    "start": "881880",
    "end": "889600"
  },
  {
    "text": "number one we separate between code and and treat data as a first class as the",
    "start": "889600",
    "end": "896320"
  },
  {
    "text": "yeah it's it's not enough it's not it's a required the condition but it's it's not enough so after we have done that",
    "start": "896320",
    "end": "902720"
  },
  {
    "text": "comes so that's principle number one comes the question how are we going to represent data would would we use",
    "start": "902720",
    "end": "908959"
  },
  {
    "text": "structs like in C will we use U records like in modern Java will we",
    "start": "908959",
    "end": "918120"
  },
  {
    "text": "use dictionaries like in Python so the answer that dop gives is generic we use",
    "start": "918120",
    "end": "925399"
  },
  {
    "text": "generic data structures hashmaps diction Aries arrays list stuff like that we",
    "start": "925399",
    "end": "931160"
  },
  {
    "text": "don't need anything more to represent our data we will principle number four",
    "start": "931160",
    "end": "937880"
  },
  {
    "text": "will will deal with the limitation of it but before the limitation let's let's",
    "start": "937880",
    "end": "943440"
  },
  {
    "text": "read down into the advantages of it so first of all you can create data as you go you don't have a ceremony before you",
    "start": "943440",
    "end": "951000"
  },
  {
    "text": "create data right like with number when you create a number 42 and you want to add one you are not creating a class of",
    "start": "951000",
    "end": "959240"
  },
  {
    "text": "even numbers or even numbers bigger than 40 or even numbers bigger than 40 and less than 50 right you just create the",
    "start": "959240",
    "end": "966800"
  },
  {
    "text": "number you have the right to create it and you can manipulate it and you can pass it around so it gives you lots of",
    "start": "966800",
    "end": "973880"
  },
  {
    "text": "uh Dynamic dynamism and flexibility uh also you can manipulate",
    "start": "973880",
    "end": "981360"
  },
  {
    "text": "42 with all the operations that are out there for you multiplication addition",
    "start": "981360",
    "end": "989360"
  },
  {
    "text": "logarithm um exponentiation any complex mat function is available to you no",
    "start": "989360",
    "end": "994800"
  },
  {
    "text": "matter if it's part of the language like the basic one or it's written with a library so the same if you represent",
    "start": "994800",
    "end": "1001560"
  },
  {
    "text": "data with generic data structures you can leverage any piece of functionality that has been written by anybody so for",
    "start": "1001560",
    "end": "1009079"
  },
  {
    "text": "example in in JavaScript we have this low Dash library that gives you I know",
    "start": "1009079",
    "end": "1014839"
  },
  {
    "text": "hundreds of data manipulation functions that you don't need to write you know Group by sort",
    "start": "1014839",
    "end": "1021880"
  },
  {
    "text": "frequencies remove key add key rename Keys map reduce all the things and you",
    "start": "1021880",
    "end": "1027480"
  },
  {
    "text": "don't have to be a functional programming wizard in order to leverage them so it's there for you you don't",
    "start": "1027480",
    "end": "1032558"
  },
  {
    "text": "have to reinvent the the will for each and every uh business entity of your",
    "start": "1032559",
    "end": "1038280"
  },
  {
    "text": "system that's super interesting actually because I mean in my mind because I'm a have been a very long for very very long",
    "start": "1038280",
    "end": "1044959"
  },
  {
    "text": "time super interested in domain driven design right as sure you've come driven design and then you know you're",
    "start": "1044959",
    "end": "1052280"
  },
  {
    "text": "essentially trying to solve similar problems with domain driven design but s trying to solve them in very different ways so for example you know you might",
    "start": "1052280",
    "end": "1059840"
  },
  {
    "text": "argue one could argue that tiny types would be a a sort of the almost the",
    "start": "1059840",
    "end": "1065160"
  },
  {
    "text": "opposite approach right so rather than just treat data as generic it's a number",
    "start": "1065160",
    "end": "1071000"
  },
  {
    "text": "or it's a I guess a string or whatever it is right um with tiny types you would try and um you would create a type that",
    "start": "1071000",
    "end": "1077960"
  },
  {
    "text": "that that encapsulates the right specific exactly the specifics of the",
    "start": "1077960",
    "end": "1083320"
  },
  {
    "text": "thing you're trying to describe me I remember back in you know years and years ago back in 20056 you know you",
    "start": "1083320",
    "end": "1090200"
  },
  {
    "text": "turn up at a bank or even later you turn up at a big big project you'd see a big code base and it was all hashmaps and it",
    "start": "1090200",
    "end": "1097400"
  },
  {
    "text": "was all dictionaries and the problem was it was it was really hard to reason",
    "start": "1097400",
    "end": "1102480"
  },
  {
    "text": "about all these things in amongst all this you know all this sort of giant",
    "start": "1102480",
    "end": "1108039"
  },
  {
    "text": "sort of object oriented sort of these giant object oriented structures um and that's why you know sort of I think back",
    "start": "1108039",
    "end": "1114159"
  },
  {
    "text": "in 20 2009 I did a talk with um Daniel toos North on programming in the large",
    "start": "1114159",
    "end": "1120640"
  },
  {
    "text": "where we talked about you know one of the things to do is to introduce a domain model right because that that",
    "start": "1120640",
    "end": "1125760"
  },
  {
    "text": "allows you to reason about the things that you're working with right um so how do you I mean how do you solve that",
    "start": "1125760",
    "end": "1131200"
  },
  {
    "text": "problem in data oriented programming where you want to be able to reason about the business e things that your",
    "start": "1131200",
    "end": "1136600"
  },
  {
    "text": "code is doing as well yes great question that's the most challenging question uh and that's principle number",
    "start": "1136600",
    "end": "1143760"
  },
  {
    "text": "four so let let's go to it and then we come back to princip number three who cares about",
    "start": "1143760",
    "end": "1149440"
  },
  {
    "text": "order so right when you have small code when you write your and you do homework",
    "start": "1149440",
    "end": "1156240"
  },
  {
    "text": "for uh University that's that's fine you have a hashmap and you you you know what",
    "start": "1156240",
    "end": "1162679"
  },
  {
    "text": "the ash map what what are the fields yes and you don't have surprises but when",
    "start": "1162679",
    "end": "1167880"
  },
  {
    "text": "the team grows when the codebase grows you have a function um I don't know",
    "start": "1167880",
    "end": "1175039"
  },
  {
    "text": "um amount that receives something called user yeah maybe it's called user maybe",
    "start": "1175039",
    "end": "1181280"
  },
  {
    "text": "it will called it be called you and it's a hashmap so how do I know what are the",
    "start": "1181280",
    "end": "1186840"
  },
  {
    "text": "fields in this hashmap if you are lucky you have a do documentation string that says in this user thing you have a user",
    "start": "1186840",
    "end": "1193840"
  },
  {
    "text": "ID you have email address you have blah blah blah but do documentation sometimes not there and sometimes is inaccurate",
    "start": "1193840",
    "end": "1201679"
  },
  {
    "text": "the code evolves and someone forgot to update the documentation yeah so and for that object oned",
    "start": "1201679",
    "end": "1208880"
  },
  {
    "text": "programming really shines because you have no mistakes it's part you can",
    "start": "1208880",
    "end": "1214640"
  },
  {
    "text": "inspect the the type and you have Auto completion and you have so that seems to",
    "start": "1214640",
    "end": "1221039"
  },
  {
    "text": "be a problem so we we want that validation right another problem is that",
    "start": "1221039",
    "end": "1227480"
  },
  {
    "text": "if you don't do data validation and you have mistakes you will encounter the errors down the stream so instead of",
    "start": "1227480",
    "end": "1234360"
  },
  {
    "text": "having the error in the amount function and say oh the user is invalid you will have a f function that says the X is not",
    "start": "1234360",
    "end": "1241960"
  },
  {
    "text": "defined what the hell does it come from and I've SE that that's the problem of dynamic languages yes and in fact quite",
    "start": "1241960",
    "end": "1251120"
  },
  {
    "text": "recently I would say over the last five years there have been development and awareness in the",
    "start": "1251120",
    "end": "1258640"
  },
  {
    "text": "dynamic programming language community that we need something we don't want the",
    "start": "1258640",
    "end": "1263960"
  },
  {
    "text": "the the limitation of static types but we don't want also the far west of the",
    "start": "1263960",
    "end": "1269440"
  },
  {
    "text": "dynamic type we want something in the middle or maybe we want both and there ways",
    "start": "1269440",
    "end": "1275279"
  },
  {
    "text": "to have how do you say to eat the to Cut",
    "start": "1275279",
    "end": "1280400"
  },
  {
    "text": "the Cake both yeah but have your cake and eat it so there is a way yeah yeah yeah and the key is to separate between",
    "start": "1280400",
    "end": "1288760"
  },
  {
    "text": "data representation and data validation so we want both but we don't want them",
    "start": "1288760",
    "end": "1294159"
  },
  {
    "text": "to be entangled MH mhm someone commented on my book that",
    "start": "1294159",
    "end": "1300240"
  },
  {
    "text": "every Paradigm or good design principle is about separating",
    "start": "1300240",
    "end": "1305520"
  },
  {
    "text": "things so here again we want both data representation and data validation but",
    "start": "1305520",
    "end": "1311880"
  },
  {
    "text": "we don't want them entangled we want them separate and we will decide we the developers will decide when",
    "start": "1311880",
    "end": "1318640"
  },
  {
    "text": "we want to validate this piece of data and sometime we don't want sometimes we have a function that is just a utility",
    "start": "1318640",
    "end": "1325120"
  },
  {
    "text": "function and it could handle various kinds of data because let me give you an example of that you could write a",
    "start": "1325120",
    "end": "1331159"
  },
  {
    "text": "function that receiv receives a hashmap and receive uh a list of keys that need",
    "start": "1331159",
    "end": "1337080"
  },
  {
    "text": "to be renamed or removed so it works with any hashmap yes not only with users and books so this function you want it",
    "start": "1337080",
    "end": "1343240"
  },
  {
    "text": "generic you don't want to limit yourself in any way on the other hand you have a",
    "start": "1343240",
    "end": "1348720"
  },
  {
    "text": "function called check out and it receive a card and you don't want this function to work with a user it has to be a card",
    "start": "1348720",
    "end": "1357000"
  },
  {
    "text": "so there are schema languages like Json schema that allows you to express the",
    "start": "1357000",
    "end": "1364320"
  },
  {
    "text": "schema the expected schema of your data as data and there are libraries that",
    "start": "1364320",
    "end": "1370880"
  },
  {
    "text": "allow you to to say here I have a piece of data I have a schema could you please",
    "start": "1370880",
    "end": "1376360"
  },
  {
    "text": "validate for me that the data is is conforming to the schema and if not tells me exactly why what are the",
    "start": "1376360",
    "end": "1383000"
  },
  {
    "text": "missing Fields what are the invalid fields and we could use it in",
    "start": "1383000",
    "end": "1388600"
  },
  {
    "text": "um areas where it's the only way to go let me give you an example if you have",
    "start": "1388600",
    "end": "1394080"
  },
  {
    "text": "an HTTP server that receive a request you cannot force the user to send you the valid request you have no compiler",
    "start": "1394080",
    "end": "1401240"
  },
  {
    "text": "over the wire right so how are you going to manage",
    "start": "1401240",
    "end": "1406880"
  },
  {
    "text": "that here it's you have the schema you have the payload schema that could be",
    "start": "1406880",
    "end": "1412279"
  },
  {
    "text": "expressed in Json schema or something else and you have the user request which is a string so first you deserialize the",
    "start": "1412279",
    "end": "1419200"
  },
  {
    "text": "Json string if you are able to make it an object you move forward if you're not",
    "start": "1419200",
    "end": "1424600"
  },
  {
    "text": "able you send an error to the user in valid Json but then you have a valid uh map that might or might not conform to",
    "start": "1424600",
    "end": "1431480"
  },
  {
    "text": "your schema so you use these Json schema libraries and you validate data with the",
    "start": "1431480",
    "end": "1437240"
  },
  {
    "text": "schema and if it's not valid you are able dynamically to send in the response",
    "start": "1437240",
    "end": "1442679"
  },
  {
    "text": "body of the error hey to send back the the the error that is created by the",
    "start": "1442679",
    "end": "1448320"
  },
  {
    "text": "library like here I expect a user it should have a user ID and it should be a number here",
    "start": "1448320",
    "end": "1455080"
  },
  {
    "text": "is an email it's an invalid email that's super interesting because I mean so how does that work with so I mean so full",
    "start": "1455080",
    "end": "1462159"
  },
  {
    "text": "disclosure you know I've done a lot of um sort of integration work over the years and um you know what I'm thinking",
    "start": "1462159",
    "end": "1468399"
  },
  {
    "text": "about here is Po's law that's coming into my mind right postel's law so from from from tcpip and then it's",
    "start": "1468399",
    "end": "1475120"
  },
  {
    "text": "been be be generic in what you receive and be hard in what you that's the I",
    "start": "1475120",
    "end": "1481559"
  },
  {
    "text": "mentioned it in the book in chapter 12 I think yeah that's it and it's it's one of these things where you know over the",
    "start": "1481559",
    "end": "1487679"
  },
  {
    "text": "years when when when when I was involved with Building Systems that were doing",
    "start": "1487679",
    "end": "1493360"
  },
  {
    "text": "things like passing ons of XML or Jason these days you know we developed lots of techniques which were to which were to",
    "start": "1493360",
    "end": "1500039"
  },
  {
    "text": "only bind to the things that you need in the in the response that you're getting",
    "start": "1500039",
    "end": "1505520"
  },
  {
    "text": "right so say you get a user and the user has a first name a last name a full name",
    "start": "1505520",
    "end": "1512679"
  },
  {
    "text": "uh a first line address a second one address a full address right depending on what you want you know you either you",
    "start": "1512679",
    "end": "1519039"
  },
  {
    "text": "either buy into the first name and last name or you buy into the full name right um but you don't you don't expect",
    "start": "1519039",
    "end": "1524760"
  },
  {
    "text": "necessarily everything to be there because you don't necessarily need everything and what that allows you to do is use patterns like expand contract",
    "start": "1524760",
    "end": "1532440"
  },
  {
    "text": "for you know for interfaces where you say okay you know as long as you only bind to the things you need I can add",
    "start": "1532440",
    "end": "1538880"
  },
  {
    "text": "right extra fields in without breaking my consumers you like so how does you don't have to create a new class no ex",
    "start": "1538880",
    "end": "1545880"
  },
  {
    "text": "probably people know from the Java you have user user in database user for controller a user for controller you",
    "start": "1545880",
    "end": "1552360"
  },
  {
    "text": "have thousands of classes that is just a subsets of the field yes exactly yeah",
    "start": "1552360",
    "end": "1559320"
  },
  {
    "text": "yeah yeah and and and and Su you have that problem but then you also have this this thing about how you evolve",
    "start": "1559320",
    "end": "1564480"
  },
  {
    "text": "interfaces between right so how do you you know how are you able are you able",
    "start": "1564480",
    "end": "1569640"
  },
  {
    "text": "to add new fields you should be able to add new fields to a to a response without breaking things you exactly but",
    "start": "1569640",
    "end": "1575840"
  },
  {
    "text": "you but that only works if you only bind to you know if you're using strict scheme of validation yes that's GNA blow",
    "start": "1575840",
    "end": "1582120"
  },
  {
    "text": "up right so right sense yeah and in Json schema there is a natively this concept of",
    "start": "1582120",
    "end": "1589559"
  },
  {
    "text": "required or non-required field I think that still in Java the nullability is a",
    "start": "1589559",
    "end": "1595360"
  },
  {
    "text": "is a problem right if if a field could be there or could not be there you have",
    "start": "1595360",
    "end": "1600520"
  },
  {
    "text": "problems in in a hashmap either you have it or you don't have it it's not",
    "start": "1600520",
    "end": "1605960"
  },
  {
    "text": "nullable in the schema it could be required or non-required so it seems to",
    "start": "1605960",
    "end": "1611320"
  },
  {
    "text": "me that it's it's the proper mental model to deal with systems that",
    "start": "1611320",
    "end": "1616960"
  },
  {
    "text": "communicate over the the wire I must admit that in terms of tools we are not there yet",
    "start": "1616960",
    "end": "1624080"
  },
  {
    "text": "meaning if you have a function that receives the user and you have the Json scheme of the",
    "start": "1624080",
    "end": "1629279"
  },
  {
    "text": "user your ID will not completely be able to auto complete the field based on the",
    "start": "1629279",
    "end": "1635559"
  },
  {
    "text": "Json schema MH but we are starting to to get there for example in a vs code some",
    "start": "1635559",
    "end": "1643039"
  },
  {
    "text": "configuration file uh for extensions or for V code",
    "start": "1643039",
    "end": "1648520"
  },
  {
    "text": "itself has a Json schema defined for it that is somewhere on the internet and vs",
    "start": "1648520",
    "end": "1654320"
  },
  {
    "text": "code is smart enough to give you as you type mistakes about the configuration uh",
    "start": "1654320",
    "end": "1661760"
  },
  {
    "text": "data so I Envision that things like that will happen in the near future in in uh",
    "start": "1661760",
    "end": "1668840"
  },
  {
    "text": "in our programs so you'd be able to write JavaScript not typescript or Java",
    "start": "1668840",
    "end": "1674600"
  },
  {
    "text": "with um with the hashmaps or closure or python or whatever and without having to",
    "start": "1674600",
    "end": "1682760"
  },
  {
    "text": "to bind your types to your to your code like new python encourages or like",
    "start": "1682760",
    "end": "1688760"
  },
  {
    "text": "typescript you'd be able to somehow express it VI adjacent schema",
    "start": "1688760",
    "end": "1695679"
  },
  {
    "text": "or another language and the ID will be smart enough to give you um error and",
    "start": "1695679",
    "end": "1701960"
  },
  {
    "text": "feedback as you type and then it's what I call you have the the cake you have cut it together",
    "start": "1701960",
    "end": "1709039"
  },
  {
    "text": "yeah yeah so I I find this I find it super interesting because we're obviously we're we're we're in the world of dynamic languages here right and",
    "start": "1709039",
    "end": "1715960"
  },
  {
    "text": "obviously there's a whole different set of functional programming languages that are statically typed the sort of hascal of this world the types scripts in the",
    "start": "1715960",
    "end": "1722120"
  },
  {
    "text": "end now I guess um they're all trying to solve similar problems but they're solving it in very very different ways",
    "start": "1722120",
    "end": "1727919"
  },
  {
    "text": "um what what is it you think about data oriented programming in particular that that gives you something extra that",
    "start": "1727919",
    "end": "1733760"
  },
  {
    "text": "gives you something different over having it gives you the I think it gives you the the",
    "start": "1733760",
    "end": "1739399"
  },
  {
    "text": "freedom uh because even in typescript when you want to write a generic",
    "start": "1739399",
    "end": "1744480"
  },
  {
    "text": "function it's it's difficult typescript you you have to work against typescript",
    "start": "1744480",
    "end": "1749799"
  },
  {
    "text": "I I try to to use a library like low Dash in typescript and for most of the",
    "start": "1749799",
    "end": "1755640"
  },
  {
    "text": "functions it works but for some of them the types are too Dynamic that you have to tell okay you know what it's an any",
    "start": "1755640",
    "end": "1762320"
  },
  {
    "text": "type don't don't don't care I don't care and uh so back to what you said",
    "start": "1762320",
    "end": "1769399"
  },
  {
    "text": "about the tiny types and the big types I think that we want uh the ability to",
    "start": "1769399",
    "end": "1775200"
  },
  {
    "text": "have um when you have lowlevel pieces of data that are generic to have the",
    "start": "1775200",
    "end": "1780519"
  },
  {
    "text": "ability to say I don't mind I don't want the compiler to to bother me and I don't have to do things like that in order to",
    "start": "1780519",
    "end": "1787600"
  },
  {
    "text": "convince the type system that it's okay here I want to decide and for the big things for the high level business",
    "start": "1787600",
    "end": "1794600"
  },
  {
    "text": "entities where there are no surprises uh you want uh validation but you want",
    "start": "1794600",
    "end": "1802320"
  },
  {
    "text": "also the ability to to deal with surprises or nullability which I'm not",
    "start": "1802320",
    "end": "1808159"
  },
  {
    "text": "sure that typescript or or Java are are yet",
    "start": "1808159",
    "end": "1814159"
  },
  {
    "text": "there uh but but I think both Community have to learn one from each other",
    "start": "1814159",
    "end": "1819720"
  },
  {
    "text": "instead of fighting and say types are good types are bad this we are better you are better no we We There is a sweet",
    "start": "1819720",
    "end": "1827760"
  },
  {
    "text": "spot in the middle and I've been in touch with the James Clark from",
    "start": "1827760",
    "end": "1833880"
  },
  {
    "text": "ballerina and ballerina is an interesting uh language that leverages",
    "start": "1833880",
    "end": "1840120"
  },
  {
    "text": "something called um flexible type system which tries to bring the best from boss",
    "start": "1840120",
    "end": "1846200"
  },
  {
    "text": "world it's not static it's not Dynamic it's somewhere in the middle and James",
    "start": "1846200",
    "end": "1852000"
  },
  {
    "text": "gave me this great analogy um that types are not not maps",
    "start": "1852000",
    "end": "1858960"
  },
  {
    "text": "there are glasses through which you look at reality but the reality is",
    "start": "1858960",
    "end": "1864840"
  },
  {
    "text": "untyped you and sometimes you could look at the same reality with pink glasses or with blue glasses and it's the same",
    "start": "1864840",
    "end": "1871880"
  },
  {
    "text": "reality so back to your example you have a hashmap and from my perspective it's a",
    "start": "1871880",
    "end": "1877600"
  },
  {
    "text": "user with just a first name and a last name so that's my glasses and from your perspective it's a user with first name",
    "start": "1877600",
    "end": "1884399"
  },
  {
    "text": "last name full name and address but the reality is the same it's just you you change glasses and I think that",
    "start": "1884399",
    "end": "1892960"
  },
  {
    "text": "traditionally languages static type systems tend to confuse maps with",
    "start": "1892960",
    "end": "1898360"
  },
  {
    "text": "reality and you superimpose your mental thinking of the reality and you consider",
    "start": "1898360",
    "end": "1904639"
  },
  {
    "text": "it as the reality and that's the source of suffering that's uh who is it James",
    "start": "1904639",
    "end": "1912240"
  },
  {
    "text": "James Clark James Clark so thank you James I'm going to steal that uh that's that's totally going into into my into",
    "start": "1912240",
    "end": "1918200"
  },
  {
    "text": "my into my toolkit for explaining stuff um that's that's brilliant um so so we we talked about the well the first two",
    "start": "1918200",
    "end": "1924880"
  },
  {
    "text": "and then the fourth principle we said we come back to the third principle the third one I think is the the easiest one",
    "start": "1924880",
    "end": "1931600"
  },
  {
    "text": "to convince it's immutability and I think every experience developer no matter if",
    "start": "1931600",
    "end": "1938480"
  },
  {
    "text": "you are from Java or C or JavaScript or would agree that imitability is is a",
    "start": "1938480",
    "end": "1946200"
  },
  {
    "text": "value if you can for it it's better what's the problem the problem is",
    "start": "1946200",
    "end": "1952039"
  },
  {
    "text": "performance and because when we say immutability we we mean we don't mean",
    "start": "1952039",
    "end": "1957120"
  },
  {
    "text": "things that never change we mean managing changes in an immutable way and",
    "start": "1957120",
    "end": "1963960"
  },
  {
    "text": "what does it mean it mean let's say we have a a card with two items MH and we",
    "start": "1963960",
    "end": "1970600"
  },
  {
    "text": "represent this c as a piece of data and now the user adds a third item so",
    "start": "1970600",
    "end": "1978039"
  },
  {
    "text": "managing it in an imitable way would be to create a new card with the third item and now we have two cards one with two",
    "start": "1978039",
    "end": "1984840"
  },
  {
    "text": "and one with three then there use another one with four or five so do we have a we have two potential problems a",
    "start": "1984840",
    "end": "1991679"
  },
  {
    "text": "memory problems because we could have million of cards and um computational",
    "start": "1991679",
    "end": "1996760"
  },
  {
    "text": "problem because each time we create a new card we have to kind of deep clone the previous card so it takes time yeah",
    "start": "1996760",
    "end": "2004159"
  },
  {
    "text": "so that was the until 2009 that was the the biggest problem with",
    "start": "2004159",
    "end": "2011320"
  },
  {
    "text": "immutable data but still in many cases performance is not really a problem because your data is not as big as you",
    "start": "2011320",
    "end": "2018720"
  },
  {
    "text": "might think if you have a c with 10 items up to 100 items it won't be a problem to deep CL but when it gets to I",
    "start": "2018720",
    "end": "2024919"
  },
  {
    "text": "know know thousands of items and in the book I used the example of a library catalog which could have millions of",
    "start": "2024919",
    "end": "2031200"
  },
  {
    "text": "books and now you have you add another book so since the event of closure in",
    "start": "2031200",
    "end": "2037760"
  },
  {
    "text": "2009 we have persistent data structures which is an efficient implementation of",
    "start": "2037760",
    "end": "2044440"
  },
  {
    "text": "managing chain I won't go into the details because I want you guys to read the book",
    "start": "2044440",
    "end": "2049599"
  },
  {
    "text": "but I give you just a hint it's very similar to what git does yeah in git you",
    "start": "2049599",
    "end": "2056118"
  },
  {
    "text": "have this magic that you can create a new commit and it's fast as light but",
    "start": "2056119",
    "end": "2061240"
  },
  {
    "text": "the whole history is available and you create a new commit and you push it you don't have",
    "start": "2061240",
    "end": "2067720"
  },
  {
    "text": "to a replica of the whole uh database right you and you don't have Deltas it",
    "start": "2067720",
    "end": "2073398"
  },
  {
    "text": "it works in a different way it's called structural sharing and persistent data structures leverage it in a very smart",
    "start": "2073399",
    "end": "2080520"
  },
  {
    "text": "way and it's smart in the sense that like in git as a developer you don't need to really understand the the the",
    "start": "2080520",
    "end": "2087520"
  },
  {
    "text": "technical detail so it just works and it allows and since 2009 those persistent",
    "start": "2087520",
    "end": "2093839"
  },
  {
    "text": "data structures sometimes we call them h hash array mapped tries t r i e s have",
    "start": "2093839",
    "end": "2103119"
  },
  {
    "text": "been ported to virtu any programming language Facebook ported them to",
    "start": "2103119",
    "end": "2108240"
  },
  {
    "text": "JavaScript imjs it has been ported to Scala to python to C++ to Ruby to airing",
    "start": "2108240",
    "end": "2119760"
  },
  {
    "text": "to whatever so it's a we have no reason to tolerate the data mutation and I will",
    "start": "2119760",
    "end": "2127560"
  },
  {
    "text": "just mention it's another way to tame the state because if data is immutable we have less state to care about so",
    "start": "2127560",
    "end": "2134560"
  },
  {
    "text": "that's principle number three to keep data immutable cool um well I mean it's",
    "start": "2134560",
    "end": "2139839"
  },
  {
    "text": "it sounds super interesting I mean my my my background is in uh you distributed systems that that",
    "start": "2139839",
    "end": "2146200"
  },
  {
    "text": "kind of thing and one of the things that I that really attracted me about distributed systems was that it was",
    "start": "2146200",
    "end": "2152040"
  },
  {
    "text": "another way of managing complexity right so um you know when faced with a big problem chop up into lots of really",
    "start": "2152040",
    "end": "2158319"
  },
  {
    "text": "small problems and solve the small problems you know Sam Newman uh a a good friend of mine author of building micro",
    "start": "2158319",
    "end": "2164680"
  },
  {
    "text": "Services he sort of says that quite a lot um and that that was one way I sort of settled on in the O world of of of",
    "start": "2164680",
    "end": "2172599"
  },
  {
    "text": "solving the problem of having big things that were really complicated and complex um with lots of accidental complexity is",
    "start": "2172599",
    "end": "2179000"
  },
  {
    "text": "to is to take those things and break it up into smaller bets um this is obviously a different approach to to trying to tackle the same problem the",
    "start": "2179000",
    "end": "2185480"
  },
  {
    "text": "sort of cognitive overload you get when you're trying to think about these these large code bases and trying to work with",
    "start": "2185480",
    "end": "2191359"
  },
  {
    "text": "them and so on um I mean there's one thing that always and maybe this is uh maybe this is a bit mean I don't know",
    "start": "2191359",
    "end": "2198560"
  },
  {
    "text": "but one thing that always that I always struggled with with closure and I think it's because I'm",
    "start": "2198560",
    "end": "2204319"
  },
  {
    "text": "stupid I think it's what I think that's why um is like more so than any other",
    "start": "2204319",
    "end": "2210280"
  },
  {
    "text": "language I've I've ever written maybe barring maybe baring full Trend 77 back",
    "start": "2210280",
    "end": "2218200"
  },
  {
    "text": "in University um uh when I came back to closure after I'd written it and looked",
    "start": "2218200",
    "end": "2224760"
  },
  {
    "text": "at what I'd written it was the one it was the language I find most difficult to understand the code that I myself had",
    "start": "2224760",
    "end": "2230960"
  },
  {
    "text": "written does that make sense it's kind of it's almost it's almost like I would I I'd write some closure and I'd solve a",
    "start": "2230960",
    "end": "2237440"
  },
  {
    "text": "problem in a really elegant beautiful way in a really small number of lines",
    "start": "2237440",
    "end": "2242640"
  },
  {
    "text": "yes of code and then I'd come back a week later and I would have no idea what it did I I think yeah I I yes I think I",
    "start": "2242640",
    "end": "2252079"
  },
  {
    "text": "had the same kind of thing when I discovered the functional programming and the power of anonymous functions and",
    "start": "2252079",
    "end": "2258480"
  },
  {
    "text": "I would write a whole data Pipeline with 10 lines of anonymous functions that made me feel very smart yes right but",
    "start": "2258480",
    "end": "2265119"
  },
  {
    "text": "that nobody could read yeah and it took me a while to discover that the the",
    "start": "2265119",
    "end": "2271400"
  },
  {
    "text": "probably the better way to write it is to to give name to each step and to give",
    "start": "2271400",
    "end": "2277319"
  },
  {
    "text": "name to to the function and to call them one after the other so it might be less elegant it might be a little bit more",
    "start": "2277319",
    "end": "2282720"
  },
  {
    "text": "verbos but it's uh I think it's much more readable for other people or for",
    "start": "2282720",
    "end": "2288200"
  },
  {
    "text": "other versions of myself exactly fature versions of future version of myself immutable version of myself yeah uh but",
    "start": "2288200",
    "end": "2297200"
  },
  {
    "text": "in fact in data oriented programming the interesting thing about it is that you don't have to leave your uh your zone of",
    "start": "2297200",
    "end": "2305319"
  },
  {
    "text": "comfort in terms of the way your habits the way you write code the way you encapsulate your",
    "start": "2305319",
    "end": "2312240"
  },
  {
    "text": "favorite language language it's a different way to to represent your uh",
    "start": "2312240",
    "end": "2318079"
  },
  {
    "text": "your data and if you take into account the principle",
    "start": "2318079",
    "end": "2324160"
  },
  {
    "text": "number four about schema and data validation and don't go",
    "start": "2324160",
    "end": "2330480"
  },
  {
    "text": "the too much into the wild that I don't think you will have this uh this this",
    "start": "2330480",
    "end": "2336240"
  },
  {
    "text": "problem you will write code in a way that it should feel familiar to you to yourself",
    "start": "2336240",
    "end": "2342920"
  },
  {
    "text": "and hopefully you'll have less bags or when you have a bag it will or when you",
    "start": "2342920",
    "end": "2348960"
  },
  {
    "text": "want to add a new feature it will takes less headache to figure out um what's",
    "start": "2348960",
    "end": "2355000"
  },
  {
    "text": "what's going on you you won't have to to understand the whole system in order to",
    "start": "2355000",
    "end": "2360760"
  },
  {
    "text": "just modify a bit the functionality of a small part of of the system so so what",
    "start": "2360760",
    "end": "2366960"
  },
  {
    "text": "I'm hearing is um we should buy the book because it'll teach us how to write code that's going to uh better able us to add",
    "start": "2366960",
    "end": "2374280"
  },
  {
    "text": "new features and modify existing codes more easily uh we'll hopefully have fewer bugs these are Big promises um I'm",
    "start": "2374280",
    "end": "2381359"
  },
  {
    "text": "certainly going to going to take a look at at your book it sounds super super interesting um but I thank thank you",
    "start": "2381359",
    "end": "2387480"
  },
  {
    "text": "very much I think we'll uh we we'll we we'll call it a day here and uh thank you very much for coming to the goto",
    "start": "2387480",
    "end": "2393560"
  },
  {
    "text": "book club pleasure thanks for listening to this episode of the go-to podcast",
    "start": "2393560",
    "end": "2398920"
  },
  {
    "text": "head over to go. Tech to discover lots more content from the brightest minds and software",
    "start": "2398920",
    "end": "2404480"
  },
  {
    "text": "[Music]",
    "start": "2404480",
    "end": "2415079"
  },
  {
    "text": "development",
    "start": "2415079",
    "end": "2418079"
  }
]