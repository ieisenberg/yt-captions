[
  {
    "text": "[Applause]",
    "start": "7460",
    "end": "12599"
  },
  {
    "text": "hi my name's Lee um today I want to talk about taking on the cost of a dependency",
    "start": "12599",
    "end": "17840"
  },
  {
    "text": "about how the choices we make in our design can affect the longevity of of",
    "start": "17840",
    "end": "23359"
  },
  {
    "text": "our software projects so I'm Lee Campbell my background is mainly in finance should you listen to me someone",
    "start": "23359",
    "end": "29519"
  },
  {
    "text": "at ya think so should you trust me no um use evidence to either support or refute",
    "start": "29519",
    "end": "36480"
  },
  {
    "text": "the content of this presentation uh if anyone knows me it's probably because I wrote a book quite a",
    "start": "36480",
    "end": "41719"
  },
  {
    "text": "long time ago on reactive programming i r ran training courses mainly in the northern hemisphere on",
    "start": "41719",
    "end": "48280"
  },
  {
    "text": "that um who here is using reactive programming",
    "start": "48280",
    "end": "53600"
  },
  {
    "text": "techniques only a few of us um does it sound exciting to anyone reactive",
    "start": "53719",
    "end": "58920"
  },
  {
    "text": "programming for some people few more hands what about machine learning who wants to get a bit of machine",
    "start": "58920",
    "end": "65478"
  },
  {
    "text": "learning chaos engineering distributed tracing block",
    "start": "65479",
    "end": "73159"
  },
  {
    "text": "blockchain that reactive talk I did at Ya um was 5 years ago",
    "start": "73159",
    "end": "79360"
  },
  {
    "text": "um I find it interesting that it was pretty Cutting Edge then but it still seems to be cutting edge and I want to",
    "start": "79360",
    "end": "84799"
  },
  {
    "text": "talk a little bit about why that is if you're M if you're working on technology that is dated and you don't feel that",
    "start": "84799",
    "end": "90640"
  },
  {
    "text": "you're able to migrate to new tech quickly enough then this talk is for you",
    "start": "90640",
    "end": "96520"
  },
  {
    "text": "if you're struggling to achieve shorter lead Times Higher deployment Cad and lower failure rates then this talk is",
    "start": "96520",
    "end": "103520"
  },
  {
    "text": "for you if however you're at the head of this curve",
    "start": "103520",
    "end": "108600"
  },
  {
    "text": "you're an innovator you adapt you can release quickly with good insights into your system you might not get a lot of",
    "start": "108600",
    "end": "114840"
  },
  {
    "text": "value from this presentation and that's okay this presentation isn't for the unicorns it's it's for the horses it's",
    "start": "114840",
    "end": "121200"
  },
  {
    "text": "for the rest of us okay some codebases have a short",
    "start": "121200",
    "end": "127119"
  },
  {
    "text": "lifespan I've worked on projects um Cyber Monday just the other week that code was only to live just the week um",
    "start": "127119",
    "end": "133879"
  },
  {
    "text": "Black Friday marketing campaigns algo trades Y2K bugs um these C bases only needed to live between a week and three",
    "start": "133879",
    "end": "140480"
  },
  {
    "text": "months and then we threw them away today I'm not talking about those projects I'm talking about software projects that int",
    "start": "140480",
    "end": "147319"
  },
  {
    "text": "intend to live two years or more and with that in mind I want to",
    "start": "147319",
    "end": "154239"
  },
  {
    "text": "ask how long will your software be used for how long will it be maintained",
    "start": "154239",
    "end": "160040"
  },
  {
    "text": "for how long will the software that it depends on be maintained for and how",
    "start": "160040",
    "end": "167440"
  },
  {
    "text": "long will you be able to find developers that can develop in that technology interesting we just had cat talking",
    "start": "167440",
    "end": "173519"
  },
  {
    "text": "about emulated vaxes and how hard it is to get macro 32 programmers um so now I'm not asking you",
    "start": "173519",
    "end": "179440"
  },
  {
    "text": "to Crystal bul gaze and guess which technology is going to be relevant in 2 to 5 years time is it going to be Java",
    "start": "179440",
    "end": "186120"
  },
  {
    "text": "is it going to be net maybe it's rust but I just want you to consider that often the systems that we build will",
    "start": "186120",
    "end": "193120"
  },
  {
    "text": "outs survive the technology that they built on so how can we balance the",
    "start": "193120",
    "end": "198760"
  },
  {
    "text": "longevity of our software while maintain a fast time to Market or a fast lead",
    "start": "198760",
    "end": "204040"
  },
  {
    "text": "time so I blame this book and I blame these guys hi",
    "start": "204040",
    "end": "211120"
  },
  {
    "text": "um I get measured on this stuff now uh increased deployment Cadence reduce lead",
    "start": "211120",
    "end": "216239"
  },
  {
    "text": "time failure rates meantime to recovery but I was",
    "start": "216239",
    "end": "221599"
  },
  {
    "text": "struggling my team we had fortnightly deployments at a 50% failure rate so",
    "start": "221599",
    "end": "227680"
  },
  {
    "text": "every other week we deployed and every other time we deployed it",
    "start": "227680",
    "end": "232720"
  },
  {
    "text": "failed lead times were measured in months recovery times measured in hours we had code freezers who here has",
    "start": "232720",
    "end": "240319"
  },
  {
    "text": "code freezers or knows a friend that has code freezers",
    "start": "240319",
    "end": "245920"
  },
  {
    "text": "so you're in a safe place right if you've got code freezers if you've got deployments that take 2 hours we used to",
    "start": "249360",
    "end": "255280"
  },
  {
    "text": "make a cup of coffee or a glass of wine all sit down around uh the desk and do a deployment three of us two hours to do a",
    "start": "255280",
    "end": "262199"
  },
  {
    "text": "deployment every other week if you're in that same place you're in a safe place here like many we get stuck with this",
    "start": "262199",
    "end": "269199"
  },
  {
    "text": "challenge we had to change to get some",
    "start": "269199",
    "end": "274520"
  },
  {
    "text": "improvements however when we change stuff we broke stuff 50% failure rate on",
    "start": "274520",
    "end": "280160"
  },
  {
    "text": "our deployments so adding stuff was hard modifying code was harder and",
    "start": "280160",
    "end": "287120"
  },
  {
    "text": "deleting code was dangerous so Jean seems to know how I",
    "start": "287120",
    "end": "292759"
  },
  {
    "text": "felt um did this slide this morning resonate with",
    "start": "292759",
    "end": "297800"
  },
  {
    "text": "anyone so I know that I want to have those things from the accelerate book the faster lead time less failures a",
    "start": "298320",
    "end": "304440"
  },
  {
    "text": "quicker meantime to recovery but how do I get there I've found that I've been to a lot of conferences and we talked about",
    "start": "304440",
    "end": "310080"
  },
  {
    "text": "the things that we wanted the outcomes which is great outcome focus is good but I want to know how to get there I'm",
    "start": "310080",
    "end": "315639"
  },
  {
    "text": "going to try and bring you along a journey and see if this can help you guys first let's have a look first about",
    "start": "315639",
    "end": "321639"
  },
  {
    "text": "how we got to where we got we had lots of issues and I've seen this over the last sort of 5 to eight years across",
    "start": "321639",
    "end": "328680"
  },
  {
    "text": "different projects I'm going to give you the three things that I think are the three kickers the first issue was the",
    "start": "328680",
    "end": "334680"
  },
  {
    "text": "single repo we get a project started might be a guey a service a data",
    "start": "334680",
    "end": "341919"
  },
  {
    "text": "store and you need to show quick progress you have to keep the stakeholders confidence keep the budget",
    "start": "341919",
    "end": "347680"
  },
  {
    "text": "and keep the initiative a float then our next feature comes along and then feature three or feature",
    "start": "347680",
    "end": "354759"
  },
  {
    "text": "C gets added and we do some shared scripts over here but we find that the data stru structures are standing on",
    "start": "354759",
    "end": "360280"
  },
  {
    "text": "each other's toes so we split out a b and c in the data store some people start saying",
    "start": "360280",
    "end": "366440"
  },
  {
    "text": "microservices still one repo though and now we create a framework folder because we've got some shared common",
    "start": "366440",
    "end": "372360"
  },
  {
    "text": "infrastructural Concepts and this is where I find that the wheels start to fall off in my experience there are two",
    "start": "372360",
    "end": "379280"
  },
  {
    "text": "places that it really starts to hurt this this model this single repo that's on your build",
    "start": "379280",
    "end": "385039"
  },
  {
    "text": "server and it's in your local development environment both the build server and your local laptop your um",
    "start": "385039",
    "end": "392039"
  },
  {
    "text": "desktop at work they have to build test and package everything anytime anything",
    "start": "392039",
    "end": "397960"
  },
  {
    "text": "changes builds are slow even opening your IDE is slow anyone get annoyed with that intell J indexing down the bottom",
    "start": "397960",
    "end": "404840"
  },
  {
    "text": "while you're waiting for everything things have build up and when you're looking at the code base you don't feel",
    "start": "404840",
    "end": "410240"
  },
  {
    "text": "that you're in a nice little corner of the code base working on your thing instead you feel like you're trying to",
    "start": "410240",
    "end": "416400"
  },
  {
    "text": "navigate a warehouse of code and while it's well structured that doesn't make it efficient to work in so you might be",
    "start": "416400",
    "end": "423400"
  },
  {
    "text": "down here does this thing work where's my or you might be this",
    "start": "423400",
    "end": "429319"
  },
  {
    "text": "person here thinking that you're going to work on some view models little did you know that it was going to be injected with a mapper and a service and",
    "start": "429319",
    "end": "436319"
  },
  {
    "text": "three other view models and the domain logic's all the way over there that",
    "start": "436319",
    "end": "441800"
  },
  {
    "text": "illustration might seem unreasonable but when I Google how do I structure my application this is the guidance I get",
    "start": "441800",
    "end": "448080"
  },
  {
    "text": "so for a um what's that an asp.net project I get told to put my controllers in a",
    "start": "448080",
    "end": "454360"
  },
  {
    "text": "different folder to my models which and then another folder for My Views a uh WPF tells me to do the same",
    "start": "454360",
    "end": "461440"
  },
  {
    "text": "thing and this isn't just a net thing Ruby's telling me to do the same thing I feel like this breaks the law of",
    "start": "461440",
    "end": "467599"
  },
  {
    "text": "locality that Jean talked about this morning while it may be simple I don't",
    "start": "467599",
    "end": "472759"
  },
  {
    "text": "find it to be very effective and as a consequence focus is diluted and",
    "start": "472759",
    "end": "478319"
  },
  {
    "text": "cognitive load is increased through",
    "start": "478319",
    "end": "482599"
  },
  {
    "text": "indirection at this point in the project I feel we should be stopping in asking who are the people that dictate the",
    "start": "483840",
    "end": "490159"
  },
  {
    "text": "requirements the budgets the deadlines for the parts of our",
    "start": "490159",
    "end": "495360"
  },
  {
    "text": "system perhaps this is what the codebase looks like after three devs and three months but as we're talking about a",
    "start": "495360",
    "end": "501919"
  },
  {
    "text": "2-year plus project and we're going to add 10 developers onto this are we going to be able to maintain this Cadence and",
    "start": "501919",
    "end": "508240"
  },
  {
    "text": "this style of coding in 2 years time with 10 developers and thirdly the other thing I think we",
    "start": "508240",
    "end": "514240"
  },
  {
    "text": "really should ask is do these things change together but we don't stop we can't stop",
    "start": "514240",
    "end": "521240"
  },
  {
    "text": "because we have progressed now we've set a Cadence that the business now expects us to maintain and to stop for a",
    "start": "521240",
    "end": "527279"
  },
  {
    "text": "technical rewrite would be seen as a failure is that familiar to anyone you're sort of the victim of your own",
    "start": "527279",
    "end": "532480"
  },
  {
    "text": "initial success that Spike went straight to production so build times blow out",
    "start": "532480",
    "end": "539720"
  },
  {
    "text": "we sto running the tests anyone done that recently I'm not going to run the test because I don't have time and like",
    "start": "539720",
    "end": "545720"
  },
  {
    "text": "the office kitchen everyone uses it but no one owns it anymore this doesn't feel",
    "start": "545720",
    "end": "551160"
  },
  {
    "text": "like a movement to faster time to market the second thing on my Hit List",
    "start": "551160",
    "end": "556440"
  },
  {
    "text": "the way we depend on abstractions remember when using the new",
    "start": "556440",
    "end": "561560"
  },
  {
    "text": "keyword became taboo inject all the things right because of testing",
    "start": "561560",
    "end": "568120"
  },
  {
    "text": "right I'm going to use this fictional class here um like I said I work in banking",
    "start": "568120",
    "end": "574200"
  },
  {
    "text": "Banks don't really like you showing their code too much um but if you uh work at UH is it Liberty outside this",
    "start": "574200",
    "end": "581440"
  },
  {
    "text": "might be familiar to you guys um this is a a loan class sorry not this code but the concept",
    "start": "581440",
    "end": "588320"
  },
  {
    "text": "um all right so at the moment we're going to focus on the validate and translate features here we can see that",
    "start": "588320",
    "end": "594959"
  },
  {
    "text": "the validator and translator are injected into this class we can see that they",
    "start": "594959",
    "end": "601360"
  },
  {
    "text": "validate a command dto and then they translate that they're injected in",
    "start": "601360",
    "end": "609600"
  },
  {
    "text": "why it seems that validation of this command of this dto",
    "start": "609600",
    "end": "614640"
  },
  {
    "text": "is Holy specific to this this function this feature it seems that translating the",
    "start": "614640",
    "end": "621680"
  },
  {
    "text": "input that dto into an internal model is specific to this feature if I was to",
    "start": "621680",
    "end": "628240"
  },
  {
    "text": "delete the take feature would I delete those two interfaces probably would I delete their",
    "start": "628240",
    "end": "634560"
  },
  {
    "text": "two implementations probably what about",
    "start": "634560",
    "end": "641160"
  },
  {
    "text": "testing would I mock those out what would it mean to mock out that",
    "start": "641160",
    "end": "646560"
  },
  {
    "text": "validator what would it mean to mock out that translator I would argue we need better",
    "start": "646560",
    "end": "652680"
  },
  {
    "text": "encapsulation than this and it can be much worse in the real world this is real production code this is my one real",
    "start": "652680",
    "end": "659120"
  },
  {
    "text": "production code thing 11 things injected into this I don't understand this class",
    "start": "659120",
    "end": "664959"
  },
  {
    "text": "cuz I don't understand the signature of its Constructor let alone the implementation I wouldn't know how to",
    "start": "664959",
    "end": "671360"
  },
  {
    "text": "test this this thing do I mock all those if you find that mocking is a big",
    "start": "671360",
    "end": "676800"
  },
  {
    "text": "feature of your testing you might be doing it wrong taking a dependency on an external",
    "start": "676800",
    "end": "683600"
  },
  {
    "text": "interface might seem like you're doing the right thing for example the interface of the hibernate session that",
    "start": "683600",
    "end": "689959"
  },
  {
    "text": "we just saw earlier if you were looking closely we took a dependency on that interface of the session instead of the",
    "start": "689959",
    "end": "697560"
  },
  {
    "text": "concrete implementation that sounds right however that interface and the same with",
    "start": "697560",
    "end": "703920"
  },
  {
    "text": "most cases that interface will be defined in the same package or the same Library as its",
    "start": "703920",
    "end": "710680"
  },
  {
    "text": "implementation which means I now have a compiled time dependency on that",
    "start": "710680",
    "end": "716000"
  },
  {
    "text": "package uh in hibernate the net version of liate for example uh it has a",
    "start": "716000",
    "end": "722200"
  },
  {
    "text": "collections Library it uses so when I take a dependency on that interface and I'm implicitly taking dependency on the",
    "start": "722200",
    "end": "729320"
  },
  {
    "text": "real implementation and also its collections Library it uses we found that when we're using a zero blob",
    "start": "729320",
    "end": "735000"
  },
  {
    "text": "storage client when we pulled that down we actually pulled down seven other things as well it's the transit of",
    "start": "735000",
    "end": "741360"
  },
  {
    "text": "dependencies now jQuery knows about this it has zero dependencies but react which is the flavor of the month back at the",
    "start": "741360",
    "end": "747399"
  },
  {
    "text": "office that doesn't appear have learned when you pull down mpm react not one download 17",
    "start": "747399",
    "end": "755000"
  },
  {
    "text": "downloads note if we go back to our sample code the developer is trying to do the",
    "start": "756880",
    "end": "763440"
  },
  {
    "text": "right thing they're trying to take a dependency on an abstraction however they don't own that abstraction so it's",
    "start": "763440",
    "end": "770839"
  },
  {
    "text": "very easy to forget or not even know that that I session that's a net thing",
    "start": "770839",
    "end": "776680"
  },
  {
    "text": "they put I in front of interfaces um that I session is 900 lines of code it's",
    "start": "776680",
    "end": "784440"
  },
  {
    "text": "an interface definition it has 90 members on it so if I'm creating I'm",
    "start": "784440",
    "end": "790760"
  },
  {
    "text": "using the interface for testing right so I need to create a test double so I",
    "start": "790760",
    "end": "796079"
  },
  {
    "text": "either have to take two paths I either create a very brittle test which knows how it's been used because there's seven",
    "start": "796079",
    "end": "802800"
  },
  {
    "text": "different ways you can get an object out of the session and there's 17 different ways you can put an object back in so so",
    "start": "802800",
    "end": "809000"
  },
  {
    "text": "I either create a brittle test which knows which one of those two I'm using and then if I change my implementation to still a valid implementation my test",
    "start": "809000",
    "end": "816040"
  },
  {
    "text": "might break or I go and Implement all 90",
    "start": "816040",
    "end": "821680"
  },
  {
    "text": "methods but we don't want to do that because we're supposed to test the three things",
    "start": "822639",
    "end": "828600"
  },
  {
    "text": "that an omm actually does properties are cascaded so I put",
    "start": "828600",
    "end": "833800"
  },
  {
    "text": "properties in and sorry properties are persisted that updates are cascaded",
    "start": "833800",
    "end": "839600"
  },
  {
    "text": "and that when I run a query those properties are mapped back out to my object so you do what seems to be highly",
    "start": "839600",
    "end": "844680"
  },
  {
    "text": "recommended which is to test with the actual om implementation and the actual",
    "start": "844680",
    "end": "849720"
  },
  {
    "text": "database because there's far too much logic in your om not to put it under test so we inject with an interface we",
    "start": "849720",
    "end": "856759"
  },
  {
    "text": "depend on an abstraction but we always use the real implementation under test and",
    "start": "856759",
    "end": "863040"
  },
  {
    "text": "in third on my hit list so we depend on external abstractions but they incur the",
    "start": "864880",
    "end": "871920"
  },
  {
    "text": "cost of their transitive dependencies and we can get a deep layering",
    "start": "871920",
    "end": "877480"
  },
  {
    "text": "effect and we're almost encouraged to do this adding a new package with modern",
    "start": "877480",
    "end": "883959"
  },
  {
    "text": "IDs is so easy but it's a slippery slope that friendly dialogue assumes you",
    "start": "883959",
    "end": "890959"
  },
  {
    "text": "understand the cost of taking on that",
    "start": "890959",
    "end": "895000"
  },
  {
    "text": "dependency yay",
    "start": "897399",
    "end": "900680"
  },
  {
    "text": "um so is this what your company lays so I'm just going to unplug for a moment and see if this still works is it go",
    "start": "902880",
    "end": "909120"
  },
  {
    "text": "right we're okay right is this what your company um layering looks like this is",
    "start": "909120",
    "end": "915639"
  },
  {
    "text": "sort of empirical evidence I've sort of seen this around this is what I think lines up I have my application in my",
    "start": "915639",
    "end": "921440"
  },
  {
    "text": "libraries my libraries depend on probably my framework teams libraries which have some more libraries and then",
    "start": "921440",
    "end": "927519"
  },
  {
    "text": "they go out on depend on um public packages out in the wild does this feel",
    "start": "927519",
    "end": "932880"
  },
  {
    "text": "about right I've I think about seven layers feels about right does anyone want to shout out a different",
    "start": "932880",
    "end": "938240"
  },
  {
    "text": "number seven's good I heard someone in Brisbane shout out 12 and another guy",
    "start": "938240",
    "end": "943480"
  },
  {
    "text": "trumped him with 20 um so so things like this you got your domain data access OMS",
    "start": "943480",
    "end": "950319"
  },
  {
    "text": "things like that okay I'm just going to do a little exercise with you for a moment uh deep layering incurs a",
    "start": "950319",
    "end": "956360"
  },
  {
    "text": "nonlinear growth pattern so I'd like to just uh work walk you through an example up the top we've got a number",
    "start": "956360",
    "end": "963360"
  },
  {
    "text": "one and that represents my application my static void main thing and then I",
    "start": "963360",
    "end": "968680"
  },
  {
    "text": "depend on three dependencies those three dependencies is the next row where I've got three ones across there does that",
    "start": "968680",
    "end": "975360"
  },
  {
    "text": "make sense so far however each of those dependencies also depend on three things",
    "start": "975360",
    "end": "982680"
  },
  {
    "text": "so I have another row of nine things so my application why",
    "start": "982680",
    "end": "988720"
  },
  {
    "text": "plus my three dependencies makes up four things and the nine sub dependencies that makes up a a a graph a 13 node",
    "start": "988720",
    "end": "997000"
  },
  {
    "text": "graph does that kind of make sense but I didn't say we were three deep it",
    "start": "997000",
    "end": "1003319"
  },
  {
    "text": "seems to me that it's more seven deep so let's do some more math let's add that 13 node graph and put two more layers",
    "start": "1003319",
    "end": "1010880"
  },
  {
    "text": "above it so now I'm a five deep I've gone out to 121 node graph but we didn't",
    "start": "1010880",
    "end": "1017560"
  },
  {
    "text": "say five we said seven if you go to seven that's a th000 nodes in the graph",
    "start": "1017560",
    "end": "1023360"
  },
  {
    "text": "if you go to eight goes to 3,000 nodes in the graph if you go to n it's 9,000 nodes in the graph now that's a",
    "start": "1023360",
    "end": "1029640"
  },
  {
    "text": "pathological case um mpm nugate Maven they all do duplication for you but",
    "start": "1029640",
    "end": "1035798"
  },
  {
    "text": "there's also some baggage that comes along with these dependencies um on one project we had the intell sense things",
    "start": "1035799",
    "end": "1042079"
  },
  {
    "text": "and there's other things like minified resources images and things like that and I'm not too worried about a couple exra megabytes going up to PR I'm",
    "start": "1042079",
    "end": "1048760"
  },
  {
    "text": "worried about the local developer experience and on one of our projects that was something what looked",
    "start": "1048760",
    "end": "1055880"
  },
  {
    "text": "like what was the baggage that came along for the ride and there's megabytes of stuff there but these there were lots",
    "start": "1055880",
    "end": "1061679"
  },
  {
    "text": "and lots of projects in this microservices thing we found that we were moving 17 gabt of IO every time we",
    "start": "1061679",
    "end": "1068960"
  },
  {
    "text": "did a build with all the baggage we were bringing along for the ride so I depend on abstractions but",
    "start": "1068960",
    "end": "1077000"
  },
  {
    "text": "they depend on abstractions so I can get deep call",
    "start": "1077000",
    "end": "1082480"
  },
  {
    "text": "Stacks hang on need to drive this",
    "start": "1087919",
    "end": "1092720"
  },
  {
    "text": "thing see the business logic in the middle there note that that's only two rows does that feel familiar it's funny",
    "start": "1093520",
    "end": "1100720"
  },
  {
    "text": "cuz it's true and this isn't a poke it jav I've seen this in net I've seen this in typescript um now some might see a",
    "start": "1100720",
    "end": "1106159"
  },
  {
    "text": "performance problem here I see a bigger problem and that's the cognitive load on the developer the person maintaining that",
    "start": "1106159",
    "end": "1113600"
  },
  {
    "text": "code he's either or she is trying to add a new feature or debug a current problem",
    "start": "1113600",
    "end": "1120600"
  },
  {
    "text": "what about the opsy who's reading the logs what's that stack Trace going to be any use to him or Troy hunt who's",
    "start": "1120600",
    "end": "1127799"
  },
  {
    "text": "probably having an aneurysm looking at the uh the surface area of attack vectors on this thing right now cool",
    "start": "1127799",
    "end": "1133320"
  },
  {
    "text": "saacks like that in my experience are far harder to understand to maintain and reason about them",
    "start": "1133320",
    "end": "1139600"
  },
  {
    "text": "shallow cor stacks and it can be as innocuous as a save method so if we go",
    "start": "1139600",
    "end": "1146039"
  },
  {
    "text": "back to our friendly imaginary piece of code I can see two things that worry me",
    "start": "1146039",
    "end": "1152039"
  },
  {
    "text": "here the lack of symmetry there's no load or get method",
    "start": "1152039",
    "end": "1157640"
  },
  {
    "text": "on my session on this on this method so at least two things know about my om",
    "start": "1157640",
    "end": "1165320"
  },
  {
    "text": "now it's this class and something else right the other thing that worries me",
    "start": "1165320",
    "end": "1170520"
  },
  {
    "text": "about this is that I'm neither at the top of the call stack because someone",
    "start": "1170520",
    "end": "1175880"
  },
  {
    "text": "called me and past in a dto and I'm not at the bottom of the",
    "start": "1175880",
    "end": "1180919"
  },
  {
    "text": "call stack because I'm making a method call out to save here right that's not my code base that's someone else's code",
    "start": "1180919",
    "end": "1186919"
  },
  {
    "text": "base so we're somewhere in between which is the scary place to be and that leads me to ask more questions where does",
    "start": "1186919",
    "end": "1193919"
  },
  {
    "text": "logging go do I log in this class or is someone above me logging or someone someone below me logging what about",
    "start": "1193919",
    "end": "1199679"
  },
  {
    "text": "instrumentation what about error handling do I put a try catch around that or is someone putting a try catch around me I don't really know because",
    "start": "1199679",
    "end": "1206360"
  },
  {
    "text": "it's really deep to cool stacks and so you end up having one or the other way you can go here which is well I I better",
    "start": "1206360",
    "end": "1213720"
  },
  {
    "text": "be a good boy scout and I'm going to put logging instrumentation and error handling in here but you do that on all your classes",
    "start": "1213720",
    "end": "1221480"
  },
  {
    "text": "and now you have needle and a hyack problem with your logs it's just logs logs and you can't find anything of Interest so I've been on that project",
    "start": "1221480",
    "end": "1227440"
  },
  {
    "text": "before or you can go the other way which is like not going to put any in right which",
    "start": "1227440",
    "end": "1234840"
  },
  {
    "text": "to be fair you end up with the same result a not very useful system but at least it costs less to build it so I'm",
    "start": "1234840",
    "end": "1240919"
  },
  {
    "text": "not sure which one's actually better to do so the consequences are the cognitive",
    "start": "1240919",
    "end": "1246320"
  },
  {
    "text": "load increases I've got exponentially super linearly with each layer we're adding technical freedom is slowly",
    "start": "1246320",
    "end": "1254480"
  },
  {
    "text": "eroded away each time we add one of these layers and it's like Velcro each little hook isn't such a problem but",
    "start": "1254480",
    "end": "1261480"
  },
  {
    "text": "when they're all jammed together velcro becomes a very hard thing to pull apart so I've cut this list down to just",
    "start": "1261480",
    "end": "1268960"
  },
  {
    "text": "three things single repo the way we depend on obstructions and deep layering but there are more but what I find more",
    "start": "1268960",
    "end": "1274840"
  },
  {
    "text": "interesting now that we've got three things is to talk about the compounding effects so the consequences are build",
    "start": "1274840",
    "end": "1283200"
  },
  {
    "text": "times the test times an hour left on the build what is",
    "start": "1283200",
    "end": "1289480"
  },
  {
    "text": "going on there test times blow out that's 10",
    "start": "1289480",
    "end": "1294720"
  },
  {
    "text": "minutes to run the tests what's going on here right to change one thing means",
    "start": "1294720",
    "end": "1300279"
  },
  {
    "text": "changing all the things so we just don't we just keep adding so our problem is",
    "start": "1300279",
    "end": "1307320"
  },
  {
    "text": "that the code base is too large and our solution is to only add to it does that",
    "start": "1307320",
    "end": "1313600"
  },
  {
    "text": "seem strange has anyone lived in that world before",
    "start": "1313600",
    "end": "1319679"
  },
  {
    "text": "builds take too long so we create Magic build scripts that figure out what to build what to test and what to package",
    "start": "1319679",
    "end": "1326279"
  },
  {
    "text": "based on what changed in some git Commit This actually introduces a new",
    "start": "1326279",
    "end": "1331640"
  },
  {
    "text": "dependency the single man dependency the guy who knows how the magic build script",
    "start": "1331640",
    "end": "1337799"
  },
  {
    "text": "works right the Phoenix project called him Brent or Brett I can't quite remember a couple years ago I read it um",
    "start": "1337799",
    "end": "1344559"
  },
  {
    "text": "so that's my first problem magic build scripts uh and it's also too hard to construct",
    "start": "1344559",
    "end": "1350760"
  },
  {
    "text": "things even with mock it's too hard so I use a real ioc container or the",
    "start": "1350760",
    "end": "1356120"
  },
  {
    "text": "dependency injection container spring boot container I actually register all the real things and then I sub out the",
    "start": "1356120",
    "end": "1362480"
  },
  {
    "text": "things I don't want and you can see when I go back to that 11 parameter",
    "start": "1362480",
    "end": "1368360"
  },
  {
    "text": "Constructor how that could happen right I've worked on loads of projects where we did that I think that's an indicator",
    "start": "1368360",
    "end": "1374400"
  },
  {
    "text": "of poor encapsulation and then this will be quite controversial um aop tools like post Shar FY uh lombok",
    "start": "1374400",
    "end": "1382520"
  },
  {
    "text": "I was a big fan of them but I'm not anymore I found them to be just one more hook of velcro they slowed down my bill",
    "start": "1382520",
    "end": "1389760"
  },
  {
    "text": "times which really annoys me these days um we ripped lombok out of a Java code base this year and it was to much debate",
    "start": "1389760",
    "end": "1397080"
  },
  {
    "text": "and a lot of objection however once it was gone even the",
    "start": "1397080",
    "end": "1402120"
  },
  {
    "text": "objectives all agreed that this code base was easier to understand better",
    "start": "1402120",
    "end": "1408080"
  },
  {
    "text": "without it it made debugging and understanding the codebase easier with it gone it might be different for you but I'm just sharing experience I had so",
    "start": "1408080",
    "end": "1416320"
  },
  {
    "text": "complicated becomes complex and this isn't the good form of complexity it's complexity we don't want this isn't the",
    "start": "1416320",
    "end": "1422559"
  },
  {
    "text": "stuff Casey was talking about earlier this is unnecessary complexity so it can't be rationalized",
    "start": "1422559",
    "end": "1429400"
  },
  {
    "text": "about our codebase anymore and we start seeing IM mergent behaviors things that happen in prod that you can't replicate",
    "start": "1429400",
    "end": "1435960"
  },
  {
    "text": "now on your local Dev environment right it's been a big day so I just jamed this slide in for a moment um does",
    "start": "1435960",
    "end": "1443400"
  },
  {
    "text": "everyone just want to stand up I was getting a bit tired watching an earlier session I thought I think we could just",
    "start": "1443400",
    "end": "1448960"
  },
  {
    "text": "shake it out cuz we've still got a whole whole another another whole session to go after this so",
    "start": "1448960",
    "end": "1455520"
  },
  {
    "text": "[Applause] just oh and um if you're playing bingo um something socio technical",
    "start": "1455520",
    "end": "1462820"
  },
  {
    "text": "[Applause] s all right right everyone feeling a bit",
    "start": "1462820",
    "end": "1468760"
  },
  {
    "text": "better we'll get to some code in a bit right um this is a funny thing like uh I",
    "start": "1468760",
    "end": "1478080"
  },
  {
    "text": "spoke at Ya 5 years ago as I said um on reactive programing and people kept saying reactive and microservice",
    "start": "1478080",
    "end": "1483320"
  },
  {
    "text": "kubernetes and it's not like the speakers all get together and agree what the words are going to be this stuff just sort of comes out but I'm not on",
    "start": "1483320",
    "end": "1489520"
  },
  {
    "text": "the bandwagon this year so I just humped that in there um all right we're kind of",
    "start": "1489520",
    "end": "1494600"
  },
  {
    "text": "halfway through we've got some problems what are",
    "start": "1494600",
    "end": "1499760"
  },
  {
    "text": "the Alternatives how do we get a better way on these projects I found that generally the dev team knew that it",
    "start": "1499760",
    "end": "1505480"
  },
  {
    "text": "wasn't right but they weren't sure how to fix these 1 hour builds or these slow tests it's sort of like when um I go to",
    "start": "1505480",
    "end": "1511960"
  },
  {
    "text": "France I can't speak French and then my mate start speaking French and all I know is he can't speak French either",
    "start": "1511960",
    "end": "1517640"
  },
  {
    "text": "right I don't know how to speak French any better but I just know he can't either this is where my devs kind of",
    "start": "1517640",
    "end": "1523080"
  },
  {
    "text": "felt like we know this isn't right but they were sort of a bit loss they didn't have a map so I'm going to try and offer map and you can use it or not use it I",
    "start": "1523080",
    "end": "1530080"
  },
  {
    "text": "think the skill here is in Building Systems that lower the barrier to entry",
    "start": "1530080",
    "end": "1535120"
  },
  {
    "text": "while simultaneously providing some reversibility so let's tackle that",
    "start": "1535120",
    "end": "1541440"
  },
  {
    "text": "single repo feature dependency is probably a better term for it who finds that when you introduce a new person to",
    "start": "1541440",
    "end": "1547799"
  },
  {
    "text": "the team uh you set up her new laptop you spin up a local environment and then it spews out with compiler warnings",
    "start": "1547799",
    "end": "1554120"
  },
  {
    "text": "compiler errors um tests that fail and she says oh what are all they and",
    "start": "1554120",
    "end": "1559880"
  },
  {
    "text": "you respond oh don't worry that's not related to our stuff yeah so why are you running it",
    "start": "1559880",
    "end": "1568320"
  },
  {
    "text": "then like fix it well I'm not going to fix it cuz it's not my code so why is it in your code base get rid of it and I'm",
    "start": "1568320",
    "end": "1575000"
  },
  {
    "text": "not saying delete the code but maybe delete it from your code base move it to someone else's from the book building",
    "start": "1575000",
    "end": "1580679"
  },
  {
    "text": "microservices with Sam Newman um a change to one system should not require a change to another system um but jual",
    "start": "1580679",
    "end": "1588440"
  },
  {
    "text": "Loi was saying this 10 years before um microservices was even a word um",
    "start": "1588440",
    "end": "1594480"
  },
  {
    "text": "decompose your applications based on volatility so this is what our single",
    "start": "1594480",
    "end": "1599520"
  },
  {
    "text": "repository looked like division by technical responsibility note that all the things",
    "start": "1599520",
    "end": "1606039"
  },
  {
    "text": "that had the same technical responsibility live together what I'm suggesting is that that causes feature",
    "start": "1606039",
    "end": "1611840"
  },
  {
    "text": "coupling Feature A and B because they use the same technology they a view are coupled to each other and that's not",
    "start": "1611840",
    "end": "1618480"
  },
  {
    "text": "what I want to do they shouldn't change together let's aim in said for division",
    "start": "1618480",
    "end": "1623520"
  },
  {
    "text": "by feature responsibility things that change together live together is quite a subtle",
    "start": "1623520",
    "end": "1629399"
  },
  {
    "text": "change but I think it's an important one now this opens the door if you choose to",
    "start": "1629399",
    "end": "1634520"
  },
  {
    "text": "move to a multiple repository style of coding and this pattern is fractile if",
    "start": "1634520",
    "end": "1640480"
  },
  {
    "text": "we go back and remember the views controllers view models whatever it was before you can apply the same pattern",
    "start": "1640480",
    "end": "1647200"
  },
  {
    "text": "there now it can feel a bit scary you might feel like oh there's another presenter standing on stage going microservices",
    "start": "1647200",
    "end": "1653640"
  },
  {
    "text": "you know 100 repos that's not what I'm saying um I think there's guidance in",
    "start": "1653640",
    "end": "1658880"
  },
  {
    "text": "the domain driven design Community is probably a bit better than going one end and I do another talk about this which",
    "start": "1658880",
    "end": "1664640"
  },
  {
    "text": "is one end you've got the Lambda architecture 100 repos at the other end of the um Spectrum you've got the",
    "start": "1664640",
    "end": "1671240"
  },
  {
    "text": "monolith repo the mega repo I think you can find something in the middle and that's where we find business Debs",
    "start": "1671240",
    "end": "1677519"
  },
  {
    "text": "excuse me business domains and create bounded contexts so that's something you can Google later if it's a new term to",
    "start": "1677519",
    "end": "1683640"
  },
  {
    "text": "you and within those bounded context you may have numerous services and those bounded contacts can be your your repo",
    "start": "1683640",
    "end": "1690399"
  },
  {
    "text": "so remember loose coupling it's just one end of a spectrum we still want to balance that with high",
    "start": "1690399",
    "end": "1697320"
  },
  {
    "text": "cohesion so the multi- repository inherently parallel to building test forces the discussion about design by",
    "start": "1697320",
    "end": "1703960"
  },
  {
    "text": "contract and can also reduce this um knee-jerk reaction to share code I'll rant about that a little bit later so",
    "start": "1703960",
    "end": "1710919"
  },
  {
    "text": "the l s of encapsulation the new keyword isn't bad it just couples one part of the code",
    "start": "1710919",
    "end": "1717360"
  },
  {
    "text": "base to another but it does so explicitly and this is fine if one part",
    "start": "1717360",
    "end": "1723039"
  },
  {
    "text": "of the codebase should be coupled with another part of the codebase make it explicit let's look at a revised example",
    "start": "1723039",
    "end": "1729440"
  },
  {
    "text": "of our loan class note here we no longer take in a",
    "start": "1729440",
    "end": "1734559"
  },
  {
    "text": "dto we take in a command that's a message Mage type that our domain has defined my codebase has defined that",
    "start": "1734559",
    "end": "1741960"
  },
  {
    "text": "note that we have nothing being injected into US note that we have no dependencies that we do not Define ourselves the only dependencies we've",
    "start": "1741960",
    "end": "1748000"
  },
  {
    "text": "got is the take payment command which we Define and the transaction uh type in the middle of the",
    "start": "1748000",
    "end": "1753360"
  },
  {
    "text": "screen there note that the business rules are also front and clear I can see that I'm not allowed to create a",
    "start": "1753360",
    "end": "1759679"
  },
  {
    "text": "transaction before the creation date I can also see that transaction amounts must be positive okay I can see that",
    "start": "1759679",
    "end": "1765559"
  },
  {
    "text": "when the sum is greater than equal to zero that means it's settled oh right my loan has been settled cuz I paid it off",
    "start": "1765559",
    "end": "1771320"
  },
  {
    "text": "but if I pay too much then it's marked as overpaid I can read that nice thing",
    "start": "1771320",
    "end": "1776480"
  },
  {
    "text": "about that is it's super easy to read it's easy to test and it's really fast to",
    "start": "1776480",
    "end": "1782120"
  },
  {
    "text": "test so let's make encapsulation easy private by default instead of reuse",
    "start": "1782120",
    "end": "1787720"
  },
  {
    "text": "being a goal let's aim for encapsulation  let's aim for just use first before",
    "start": "1787720",
    "end": "1794880"
  },
  {
    "text": "reuse so hey Lee why are the hesit to share code I've just got lots of scar tissue from shared code um shared code",
    "start": "1794880",
    "end": "1802279"
  },
  {
    "text": "means more dependencies dependence don't like change uh it's very hard to remove",
    "start": "1802279",
    "end": "1808919"
  },
  {
    "text": "features once they're public um SIM can help uh but you all know that shared",
    "start": "1808919",
    "end": "1814039"
  },
  {
    "text": "code that's only used in one place at your company right it's in a framework somewhere and there's one class and one",
    "start": "1814039",
    "end": "1820159"
  },
  {
    "text": "project and one solution that uses the framework thing how did it get there some senior or architect thought it was an enlightened string uppercase method",
    "start": "1820159",
    "end": "1827559"
  },
  {
    "text": "that they built um if something is public the author now has a responsibility for this right but if",
    "start": "1827559",
    "end": "1834480"
  },
  {
    "text": "it's private you've limited the blast radius you now can change this thing in a local environment really limiting what",
    "start": "1834480",
    "end": "1840279"
  },
  {
    "text": "what you're going to break here so changes hard one guy I worked with had a",
    "start": "1840279",
    "end": "1846039"
  },
  {
    "text": "thing called the snip rule uh to me this is a great indicator you probably have a good design here due to um technical Division",
    "start": "1846039",
    "end": "1856480"
  },
  {
    "text": "division of technical responsibility if I wanted to delete person one because I've decided that's",
    "start": "1856480",
    "end": "1862000"
  },
  {
    "text": "deprecating we're going to use person two now whatever that means um what do I go and delete do I delete person one view model",
    "start": "1862000",
    "end": "1870559"
  },
  {
    "text": "and person one zaml and person details zaml what about",
    "start": "1870559",
    "end": "1877360"
  },
  {
    "text": "person up here is that getting used by person to or not I have to finesse my way through the code base and nibble",
    "start": "1877360",
    "end": "1883120"
  },
  {
    "text": "away at the leaves of this thing what Paul suggested was I want finesse to remove code I want one branch to",
    "start": "1883120",
    "end": "1891720"
  },
  {
    "text": "cut division by feature gives you this Freedom so a plan of action a domain",
    "start": "1891720",
    "end": "1898519"
  },
  {
    "text": "model or the business logic with no dependencies but first a reminder how some domains might look um the goal is",
    "start": "1898519",
    "end": "1906000"
  },
  {
    "text": "to move away from these deep layers we've got a guey it might send a um HTTP",
    "start": "1906000",
    "end": "1911279"
  },
  {
    "text": "request to a web API that web API passes that the domain the domain to the framewor framework to the dat data",
    "start": "1911279",
    "end": "1917360"
  },
  {
    "text": "access layer data access layer to the data store which means that we end up having a Transit of dependency from our",
    "start": "1917360",
    "end": "1923240"
  },
  {
    "text": "web API to our data store that seems like a strange coupling to have let's",
    "start": "1923240",
    "end": "1929080"
  },
  {
    "text": "aim for shallow layers and in fact I'm going to get rid of the lasagna shapes Al together we're going to do a away",
    "start": "1929080",
    "end": "1935360"
  },
  {
    "text": "with that and have some new shapes let's imagine that our domain defines some ports or some contracts okay we've got",
    "start": "1935360",
    "end": "1943200"
  },
  {
    "text": "two adapters our coms adapter and our data adapter and they're going to know about the domain but they're going to",
    "start": "1943200",
    "end": "1949679"
  },
  {
    "text": "map things to a specific technology let's visualize how this might work so imagine a guey sends that web request",
    "start": "1949679",
    "end": "1956039"
  },
  {
    "text": "into our comm's technology some of our code adapts from",
    "start": "1956039",
    "end": "1961799"
  },
  {
    "text": "that technology to our domain so that might be taking a Json payload over HTTP",
    "start": "1961799",
    "end": "1967320"
  },
  {
    "text": "and turning it into our domain contracts or it might be taking SB over Aon that",
    "start": "1967320",
    "end": "1973360"
  },
  {
    "text": "triggers uh the domain with the message however ever the domain has made a decision that it needs to get some state",
    "start": "1973360",
    "end": "1980440"
  },
  {
    "text": "so it calls out to the data adapter the data adapter has implemented an interface defined by the",
    "start": "1980440",
    "end": "1988279"
  },
  {
    "text": "domain and when it's stimulated the data adapter then translates that domain",
    "start": "1988279",
    "end": "1993440"
  },
  {
    "text": "request into a data store technology request so that might be a prepared SQL statement might might be an OM it might",
    "start": "1993440",
    "end": "1999799"
  },
  {
    "text": "be a mongodb query and then the data store gets that responds the data",
    "start": "1999799",
    "end": "2005559"
  },
  {
    "text": "adapter Maps it back to the domain and the model's happy the model says yep save that and responds to the comms lay",
    "start": "2005559",
    "end": "2013080"
  },
  {
    "text": "and says yes we've got a response so where to start like an onion",
    "start": "2013080",
    "end": "2019840"
  },
  {
    "text": "we're going to grow from the inside out we consider the core first which is the implementation of our domain model and",
    "start": "2019840",
    "end": "2026000"
  },
  {
    "text": "we're going to continue with our loan thing we're going to have a quick look at what a loan might look like in this",
    "start": "2026000",
    "end": "2031039"
  },
  {
    "text": "kind of non lasagna style world uh I like to do tdd so I like to",
    "start": "2031039",
    "end": "2036519"
  },
  {
    "text": "sort of I I got taught this when I was still at Uni um how to write out some studo code so I like to do this first",
    "start": "2036519",
    "end": "2043519"
  },
  {
    "text": "what would my code kind of look like I'd like to get a loan from a repository I'd like to do some things on it and then",
    "start": "2043519",
    "end": "2049200"
  },
  {
    "text": "I'd like to save it or I could use a functional style which is sort of a left fold State pattern if I wanted but it's",
    "start": "2049200",
    "end": "2055358"
  },
  {
    "text": "it's squint and it's the same thing so let's have a look at code and action this is always dangerous doing code on",
    "start": "2055359",
    "end": "2063800"
  },
  {
    "text": "stage can we see that",
    "start": "2065879",
    "end": "2071480"
  },
  {
    "text": "okay can people read that okay yep thank you all right so we have here our loan",
    "start": "2074480",
    "end": "2081200"
  },
  {
    "text": "class it does have a base class I'm not a giant fan of um inheritance but class hierarchies but there's not too much in",
    "start": "2081200",
    "end": "2087480"
  },
  {
    "text": "here it allows us to pass in PRI State we're using an Event Source model here squint and ignore that that's not really",
    "start": "2087480",
    "end": "2094118"
  },
  {
    "text": "that relevant imagine apply events is um load and that get uncommitted events",
    "start": "2094119",
    "end": "2100400"
  },
  {
    "text": "would would be get state so I've got a",
    "start": "2100400",
    "end": "2105520"
  },
  {
    "text": "loan and here's my crate method it takes in a command that we",
    "start": "2105520",
    "end": "2111560"
  },
  {
    "text": "Define and I'm using structural and uh structural um checks here which is a bit",
    "start": "2112880",
    "end": "2118760"
  },
  {
    "text": "controversial I don't think it is but some people do um you can't even create my command unless it's correct I kind of",
    "start": "2118760",
    "end": "2127119"
  },
  {
    "text": "like that because you can't even get into my domain World unless you're going to give me real sensible things I don't",
    "start": "2127119",
    "end": "2132680"
  },
  {
    "text": "want nulls I don't want your negative values I don't want your empty strings um so that command comes in and right",
    "start": "2132680",
    "end": "2140400"
  },
  {
    "text": "there I can look at my create method and see that doesn't support using Create twice if the version's been bumped you",
    "start": "2140400",
    "end": "2146520"
  },
  {
    "text": "can't call create again uh we only support amounts between 50 and $2,000",
    "start": "2146520",
    "end": "2152359"
  },
  {
    "text": "this is a Mac loan or a sack loan um it's under two years I can see all that",
    "start": "2152359",
    "end": "2157560"
  },
  {
    "text": "stuff that's nice nice and clear I think uh we can disperse funds we can take payment again if we take payment can't",
    "start": "2157560",
    "end": "2164319"
  },
  {
    "text": "be before the Creator date you can't do zero amounts we know when we've um been settled and we know when the loan's been",
    "start": "2164319",
    "end": "2172240"
  },
  {
    "text": "paid so we're isolating our business logic from our technology choices we're",
    "start": "2176359",
    "end": "2181680"
  },
  {
    "text": "actively making a decision to couple ourselves to an architectural style in this case as events or",
    "start": "2181680",
    "end": "2187440"
  },
  {
    "text": "um but we're not coupling ourselves to a technology Choice here well we we're pretty isolated we we're still on net um",
    "start": "2187440",
    "end": "2194440"
  },
  {
    "text": "this is.net uh however with code that I think is that easy to read it should be",
    "start": "2194440",
    "end": "2200160"
  },
  {
    "text": "fairly easy to Port that to typescript rust whatever your your new cool languages but a lot of people look at",
    "start": "2200160",
    "end": "2207040"
  },
  {
    "text": "that and go well how does it do anything right I have a small orchestration layer which I call a Handler or you could call",
    "start": "2207040",
    "end": "2213000"
  },
  {
    "text": "it a router um and let's go have a look at those things I'm just going to quickly pull up a command",
    "start": "2213000",
    "end": "2219480"
  },
  {
    "text": "Handler yay Melbourne you've got really nice stuff here",
    "start": "2219480",
    "end": "2225240"
  },
  {
    "text": "um so I just provide an interface out to the this is still in my domain this is",
    "start": "2228640",
    "end": "2234680"
  },
  {
    "text": "my little code base here and I say hey I'd like a repository I'm going to need that to be",
    "start": "2234680",
    "end": "2240240"
  },
  {
    "text": "able to get stuff later and when you call me with your command that I've",
    "start": "2240240",
    "end": "2245599"
  },
  {
    "text": "defined I'll make these calls note the Symmetry here my repository is a gap and then I also save with that same thing so",
    "start": "2245599",
    "end": "2252319"
  },
  {
    "text": "this is the only guy that knows about the repository for this thing here if we look at our",
    "start": "2252319",
    "end": "2257359"
  },
  {
    "text": "repository super sweet right nothing to do there so so we Define our Command handlers",
    "start": "2257359",
    "end": "2265520"
  },
  {
    "text": "inside our domain and if we look at our dependencies of our domain nothing in",
    "start": "2265520",
    "end": "2270800"
  },
  {
    "text": "there doesn't depend on anything except for net all right so what tech are we using",
    "start": "2270800",
    "end": "2278560"
  },
  {
    "text": "so far besides net is this a database we using Nancy are we using MVC",
    "start": "2278560",
    "end": "2284079"
  },
  {
    "text": "is this air on SB we don't know yet consumers are responsible for implementing that we're isolating our",
    "start": "2284079",
    "end": "2289920"
  },
  {
    "text": "business logic from our technology choices and here's the obligatory Jenga slide um we're trying to move away from",
    "start": "2289920",
    "end": "2296000"
  },
  {
    "text": "Tool deep layering strategies towards shallow ones uh Casey talked about a small change having a disproportionate",
    "start": "2296000",
    "end": "2302760"
  },
  {
    "text": "ripple effect um in his chaos engineering talk I think jeng is a nice metaphor for that you can just give a",
    "start": "2302760",
    "end": "2307960"
  },
  {
    "text": "little poke at the bottom and watch it all fall down so what we're going to try and do is compose features together my",
    "start": "2307960",
    "end": "2313400"
  },
  {
    "text": "assumption is is that's what the class that had the 11 parameter Constructor was trying to do but I don't think they",
    "start": "2313400",
    "end": "2318440"
  },
  {
    "text": "did a very good job of it so we're going to try and host shallow dependencies so",
    "start": "2318440",
    "end": "2324040"
  },
  {
    "text": "this was a hexagonal architecture later renamed to Ports and adapters and also getting a little bit of play with onion architecture we have an app host that",
    "start": "2324040",
    "end": "2331040"
  },
  {
    "text": "sits at the top and he knows about some data adapters which we know about the domain so we Define our ports we'll go",
    "start": "2331040",
    "end": "2338160"
  },
  {
    "text": "back and have a quick look at that that I repository want one of our contracts we defined and we might have a SQL",
    "start": "2338160",
    "end": "2343560"
  },
  {
    "text": "Server one we might have a mongod DB1 so instead of this model where my",
    "start": "2343560",
    "end": "2348960"
  },
  {
    "text": "domain has a transitive dependency on my messaging or om serialization strategy",
    "start": "2348960",
    "end": "2354040"
  },
  {
    "text": "which can create domain models with a lot of dependencies so that to me seems like a",
    "start": "2354040",
    "end": "2359520"
  },
  {
    "text": "dangerous thing if I want to change my logging provider I have to go change my business code they seem like unrelated",
    "start": "2359520",
    "end": "2365960"
  },
  {
    "text": "things I want to move it to something like what I just showed you earlier there's no dependencies",
    "start": "2365960",
    "end": "2371359"
  },
  {
    "text": "here so so far we've looked at the Domain and the contracts or ports that",
    "start": "2371359",
    "end": "2376440"
  },
  {
    "text": "we've defined now let's look some of the the adapters first I'm going to just show",
    "start": "2376440",
    "end": "2382119"
  },
  {
    "text": "you",
    "start": "2382119",
    "end": "2384440"
  },
  {
    "text": "the the loan controller so this happens to be asp.net MVC something something.",
    "start": "2388040",
    "end": "2394240"
  },
  {
    "text": "net cor I'm a Java developer now so this is sort of a throwback to net for me which is great fun I love net um so this",
    "start": "2394240",
    "end": "2403280"
  },
  {
    "text": "um adapter knows about um HTTP and Json it's taking in a loan payment model",
    "start": "2403280",
    "end": "2408920"
  },
  {
    "text": "which is it'll translate into Json take the Json translate that for me and I've put a little com um method on that model",
    "start": "2408920",
    "end": "2415560"
  },
  {
    "text": "to say to command and that will turn this Json payload structure into a",
    "start": "2415560",
    "end": "2421480"
  },
  {
    "text": "command that my domain understands now that I have that command message I can",
    "start": "2421480",
    "end": "2426520"
  },
  {
    "text": "pass that into my command Handler and get a response back from that so that's quite a simple little adapter and the",
    "start": "2426520",
    "end": "2433240"
  },
  {
    "text": "other adapter would be a SQL stream store adapter and so if you remember we",
    "start": "2433240",
    "end": "2438760"
  },
  {
    "text": "had a repository which just had a get and a save so now all I need to implement for",
    "start": "2438760",
    "end": "2444160"
  },
  {
    "text": "my data adapter is a get and a save method um we were so Brazen at my recent",
    "start": "2444160",
    "end": "2449599"
  },
  {
    "text": "job to let the graduates write this because it's less than 100 lines of",
    "start": "2449599",
    "end": "2455319"
  },
  {
    "text": "code",
    "start": "2455319",
    "end": "2458319"
  },
  {
    "text": "the nice thing about this is because my domain doesn't depend on anything the tests are super fast doesn't have to do",
    "start": "2460880",
    "end": "2467920"
  },
  {
    "text": "anything um there's minimum dependencies in there ioc registration going skip to",
    "start": "2467920",
    "end": "2475920"
  },
  {
    "text": "this other one um ioc registration I actually don't even have a container or uh in this in this example code base in",
    "start": "2475920",
    "end": "2483920"
  },
  {
    "text": "my main method I Define the things that I want because this main method knows how to construct the application from",
    "start": "2483920",
    "end": "2489839"
  },
  {
    "text": "the the constituent Parts says Hey I want a SQL stream store repository I'm going to give that to my command",
    "start": "2489839",
    "end": "2496280"
  },
  {
    "text": "handlers and then I'm going to pass that to my web server and that's the whole product so I can go in here and follow",
    "start": "2496280",
    "end": "2502079"
  },
  {
    "text": "my notes right from the start all the way through also note just towards the end",
    "start": "2502079",
    "end": "2508200"
  },
  {
    "text": "there I don't have to use aop where are we I've just put a little extension",
    "start": "2508200",
    "end": "2513680"
  },
  {
    "text": "method that I've written which is with logging which just wraps that thing in an implementation that puts logging in",
    "start": "2513680",
    "end": "2519240"
  },
  {
    "text": "there so now I don't even have to have logging in my um domain cuz I've wrapped it",
    "start": "2519240",
    "end": "2525119"
  },
  {
    "text": "instead and without the expensive aop compile time hits so now we've got clear places to",
    "start": "2525119",
    "end": "2531560"
  },
  {
    "text": "put our logging our instrumentation and even our feature Flags we've got nice seams to put this stuff in we can",
    "start": "2531560",
    "end": "2537480"
  },
  {
    "text": "instrument incoming calls in our coms adapter and the data access and our data adapter for those of you already on",
    "start": "2537480",
    "end": "2543319"
  },
  {
    "text": "kubernetes bandwagon this might seem familiar it might look a little bit like the side car strategy right except",
    "start": "2543319",
    "end": "2549960"
  },
  {
    "text": "without all the helm charts and service measures so what's our results multi repo division of labor",
    "start": "2549960",
    "end": "2557440"
  },
  {
    "text": "cohesive codebase reduced cognitive load and some technical Freedom our 1 LCI time is divided into",
    "start": "2557440",
    "end": "2564400"
  },
  {
    "text": "six for us I had five domains and 10 minutes for the shared uh that took 10 minutes each and some shared infrastructure code and we don't have",
    "start": "2564400",
    "end": "2570839"
  },
  {
    "text": "feature dependence anymore if I to change feature a I don't have to ask the team in feature B when you encapsulate",
    "start": "2570839",
    "end": "2577280"
  },
  {
    "text": "you reduce a cognitive load on the developer they know they have a small are of code base that doesn't leak out",
    "start": "2577280",
    "end": "2584400"
  },
  {
    "text": "it does one thing and it does it well it should also enable the snip roll the",
    "start": "2584400",
    "end": "2589520"
  },
  {
    "text": "snip roll is a type of technical Freedom while this felt like a who Moved My Cheese moment for a lot of the",
    "start": "2589520",
    "end": "2595359"
  },
  {
    "text": "developers we were able to release features faster more safely and in an an independent",
    "start": "2595359",
    "end": "2601839"
  },
  {
    "text": "manner another thing we did we don't have the container involved in our tests anymore we don't have the um ioc",
    "start": "2601839",
    "end": "2607520"
  },
  {
    "text": "container that interestingly hared our test time that took our 10minute builds",
    "start": "2607520",
    "end": "2612760"
  },
  {
    "text": "down to 5 minute builds seemed bizarre to say earlier on the project that we could get our 1 hour build times down to",
    "start": "2612760",
    "end": "2619359"
  },
  {
    "text": "5 minutes but we just did it inversion of dependencies I believe this is what the original intent was",
    "start": "2619359",
    "end": "2625760"
  },
  {
    "text": "defining our own dependencies and having them uh injected I found that to be a great way to keep the code focused uh",
    "start": "2625760",
    "end": "2632119"
  },
  {
    "text": "the design almost forces encapsulation enables shallow call Stacks but most importantly it's an enigh for Te",
    "start": "2632119",
    "end": "2638359"
  },
  {
    "text": "technical freedom I found that this also further reduced our CI times because you end up",
    "start": "2638359",
    "end": "2644319"
  },
  {
    "text": "with just the code you need not the baggage any pull request that adds more baggage is it's so obvious that you can",
    "start": "2644319",
    "end": "2649960"
  },
  {
    "text": "reject it right there and then and these concepts are fractal code layout encapsulation the ports and",
    "start": "2649960",
    "end": "2657280"
  },
  {
    "text": "adapters pattern it works within a library at a class level it works within a repository at a package level and",
    "start": "2657280",
    "end": "2663520"
  },
  {
    "text": "works on a deployment an API level so to wrap up every dependency you add",
    "start": "2663520",
    "end": "2670040"
  },
  {
    "text": "to your system add a cognitive load for the people using the system while small each one of those is a",
    "start": "2670040",
    "end": "2676319"
  },
  {
    "text": "distraction from the job at hand for the developer loading all that knowledge to get up and running adds",
    "start": "2676319",
    "end": "2681880"
  },
  {
    "text": "friction I think there's a high value in having a project that's so boring and common that you can just reach out to",
    "start": "2681880",
    "end": "2687599"
  },
  {
    "text": "thoughtworks and say hey I'd like to have some Developers for two weeks they come in and they sort it out and then they're out the door again that gives a",
    "start": "2687599",
    "end": "2693240"
  },
  {
    "text": "lot of economical freedom to your business less dependencies they have the less Roots you have to pull up anytime you",
    "start": "2693240",
    "end": "2699599"
  },
  {
    "text": "want to Pivot one way you still want to be using in hybernate or SQL how hard would that be to move to event store and",
    "start": "2699599",
    "end": "2705960"
  },
  {
    "text": "no SQL all this comes back down to time to prod how fast can a profit generation",
    "start": "2705960",
    "end": "2714280"
  },
  {
    "text": "unit ask you for a feature and realize that profit generating cap",
    "start": "2714280",
    "end": "2720440"
  },
  {
    "text": "capabilities there is a happy ending by the way um we release multiple time per day now that that fortnightly thing's",
    "start": "2721280",
    "end": "2727839"
  },
  {
    "text": "gone um so we're doing four I think we're doing four deploys right now back in Perth and uh We've measuring it at",
    "start": "2727839",
    "end": "2734079"
  },
  {
    "text": "about a 2 to 4% failure rate down from 50% so we're pretty happy for many of us",
    "start": "2734079",
    "end": "2739520"
  },
  {
    "text": "this probably is the start of the conversation uh feel free to reach out to me if you want to continue it thank",
    "start": "2739520",
    "end": "2746760"
  },
  {
    "text": "you very",
    "start": "2746760",
    "end": "2749119"
  },
  {
    "text": "much",
    "start": "2753040",
    "end": "2756040"
  }
]