[
  {
    "start": "0",
    "end": "51000"
  },
  {
    "text": "[Music] welcome to the go-to podcast each",
    "start": "310",
    "end": "7560"
  },
  {
    "text": "episode covers the brightest and boldest ideas from the world's leading experts in software development tune in for",
    "start": "7560",
    "end": "14120"
  },
  {
    "text": "practical lessons compelling theories and plenty of",
    "start": "14120",
    "end": "19279"
  },
  {
    "text": "inspiration go to gathers the brightest Minds in the software Community to help developers tackle projects today plan",
    "start": "20000",
    "end": "26760"
  },
  {
    "text": "for tomorrow and create a better future stay up to date with the latest in Tech through go-to's top rated events held",
    "start": "26760",
    "end": "33360"
  },
  {
    "text": "online and in person in cities like Amsterdam London Copenhagen and Chicago",
    "start": "33360",
    "end": "39200"
  },
  {
    "text": "and by subscribing to the go-to conferences YouTube channel where you can find thousands more highquality de",
    "start": "39200",
    "end": "44760"
  },
  {
    "text": "talks learn more at [Music]",
    "start": "44760",
    "end": "51549"
  },
  {
    "start": "51000",
    "end": "223000"
  },
  {
    "text": "goop.com to another episode of goto unscripted we're in Copenhagen and goto",
    "start": "51960",
    "end": "58399"
  },
  {
    "text": "Copenhagen 2020 three um I'm Andrea I'm uh uh from Italy I'm a member of The",
    "start": "58399",
    "end": "65400"
  },
  {
    "text": "Elixir team Elixir is the functional language that runs on the earling virtual machine and I'm here with",
    "start": "65400",
    "end": "71600"
  },
  {
    "text": "Franchesco so I'm Franchesco I'm founder and technical director at tering Solutions R offer uh been working with",
    "start": "71600",
    "end": "78320"
  },
  {
    "text": "darling ecosystem since the mid90s you're very fortunate to have seen a programming language become an ecosystem",
    "start": "78320",
    "end": "84360"
  },
  {
    "text": "of languages and I think it's probably what we're going to talk about today right I think so yeah so franisco and I",
    "start": "84360",
    "end": "91159"
  },
  {
    "text": "live very close to each other we've never met in Italy um all the through",
    "start": "91159",
    "end": "96799"
  },
  {
    "text": "conferences various conferences um so but uh yeah he he's he's been involved",
    "start": "96799",
    "end": "102320"
  },
  {
    "text": "with ourl a lot longer than I have I came into the Elixir Elixir generation",
    "start": "102320",
    "end": "109280"
  },
  {
    "text": "um yeah so how how was it to see this uh like ecosystem grow like the small",
    "start": "109280",
    "end": "115880"
  },
  {
    "text": "language I guess it was really interesting I mean I mean the first language on the beam uh came about I",
    "start": "115880",
    "end": "125439"
  },
  {
    "text": "discovered I discovered it had been written it was called Rea but ton cherry and I heard about it um at oson open",
    "start": "125439",
    "end": "132840"
  },
  {
    "text": "source conference in Portland in 2008 and so when we ran our first",
    "start": "132840",
    "end": "138280"
  },
  {
    "text": "conference in America we invited Tony to come in and present it it was really really interesting looking at how you he",
    "start": "138280",
    "end": "144959"
  },
  {
    "text": "taken a ruby like syntax and then applied it um applied it to Earline you know run you know running on the beam",
    "start": "144959",
    "end": "151400"
  },
  {
    "text": "which is the prevalent virtual machine on which you we run everything today and",
    "start": "151400",
    "end": "156560"
  },
  {
    "text": "then from there you soon after list flavored Earline came about with Robert verie You by Maran agua and so you there",
    "start": "156560",
    "end": "165319"
  },
  {
    "text": "were a lot of you know prologue you know got ported so there were a lot of language which came about but you know",
    "start": "165319",
    "end": "172800"
  },
  {
    "text": "and some even being used in production but we never kind of realized",
    "start": "172800",
    "end": "178000"
  },
  {
    "text": "it had become an ecosystem of language which is probably until 2014 when we're in San Francisco and uh",
    "start": "178000",
    "end": "186840"
  },
  {
    "text": "we had you know for the first time at the airling factory dedicated a whole track to",
    "start": "186840",
    "end": "192360"
  },
  {
    "text": "Elixir it was still in the early days think it was the year the first Elixir comp happened so um think up like 140",
    "start": "192360",
    "end": "200519"
  },
  {
    "text": "people including Dave Thomas's dog and um I was walking uh with um you know",
    "start": "200519",
    "end": "208920"
  },
  {
    "text": "Garrett Smith and and we were were discussing this new phenomenon elex here and you know really excited about what",
    "start": "208920",
    "end": "216040"
  },
  {
    "text": "what was happening and how you know alexir was opening up the door uh to to",
    "start": "216040",
    "end": "221360"
  },
  {
    "text": "whole new communities of programmers and in that conversation it kind of",
    "start": "221360",
    "end": "228400"
  },
  {
    "start": "223000",
    "end": "438000"
  },
  {
    "text": "transpired you know Gary come out well yeah it's you know airlin is becoming now an EOS system of languages you know",
    "start": "228400",
    "end": "235920"
  },
  {
    "text": "and and that's when it clicked yeah well that's exactly what happened with with Java that's exactly what happened with",
    "start": "235920",
    "end": "241400"
  },
  {
    "text": "net and the same was happening with with earling and uh it it's um yeah it's kind",
    "start": "241400",
    "end": "248760"
  },
  {
    "text": "of yeah it's been amazing to see you know and and you look at it today I",
    "start": "248760",
    "end": "253840"
  },
  {
    "text": "think there are over 35 languages running on the beam which is really really impressive uh you know not all",
    "start": "253840",
    "end": "259799"
  },
  {
    "text": "obious are used in production many are experimental M but um and it's interesting I was speaking um uh with",
    "start": "259799",
    "end": "268240"
  },
  {
    "text": "Sam Aaron from Sonic pie earlier yeah and he was talking about uh differences",
    "start": "268240",
    "end": "273280"
  },
  {
    "text": "between Java and closure being a lot more than differences between for sample",
    "start": "273280",
    "end": "278360"
  },
  {
    "text": "earling Elixir um and I think that's uh do you feel that's true that like in in",
    "start": "278360",
    "end": "284080"
  },
  {
    "text": "and the the languages of the beam are much uh while there are many flavors of languages on the beam and well some some",
    "start": "284080",
    "end": "290400"
  },
  {
    "text": "are statically typed some are like have different um flavored syntaxes like lisp or they look like prolog do they look",
    "start": "290400",
    "end": "296840"
  },
  {
    "text": "like lisp or they look sort of like Ruby um do you feel like the the the difference my feeling is that the",
    "start": "296840",
    "end": "302759"
  },
  {
    "text": "differences are like I I agree they're not the differences aren't major but that's in my view is that Airline they",
    "start": "302759",
    "end": "310520"
  },
  {
    "text": "got a lot of things right when they vented Airline when they created Airline they spent probably 3 years protot",
    "start": "310520",
    "end": "319160"
  },
  {
    "text": "prototyping um a certain you domain of problem you problem domain of you know scalable fa tolerant uh uh softare real",
    "start": "319160",
    "end": "327680"
  },
  {
    "text": "time systems you know first looking at all existing languages um industrial You",
    "start": "327680",
    "end": "333360"
  },
  {
    "text": "languages have being used in the industry back in the 80s and then from there using a virtual machine",
    "start": "333360",
    "end": "339160"
  },
  {
    "text": "implemented in a prologue so by the time you they started imple you creating the first Virtual Machine written in C",
    "start": "339160",
    "end": "346080"
  },
  {
    "text": "they'd come so far in in this prototyping activities that they really streamlined and created a language with",
    "start": "346080",
    "end": "352840"
  },
  {
    "text": "with the bare bones and be Necessities if you ask uh you know the different coinventors of Earl you what they",
    "start": "352840",
    "end": "358800"
  },
  {
    "text": "contributed you might Williams uh once told me oh I I spent most of my time convincing Joe and",
    "start": "358800",
    "end": "364919"
  },
  {
    "text": "Robert that even though this was a really cool language feature we didn't really need it because didn't add any value and you know these design and",
    "start": "364919",
    "end": "371479"
  },
  {
    "text": "prototype activities they looked you at different constructs which they tested and if this construct added value and",
    "start": "371479",
    "end": "378360"
  },
  {
    "text": "reduced the code base um then and made the task of you building these Telecom",
    "start": "378360",
    "end": "385080"
  },
  {
    "text": "systems easier they kept it mhm if it didn't they removed it and so as a",
    "start": "385080",
    "end": "390160"
  },
  {
    "text": "result I think yeah airling became a very compact language which you know was fit for purpose and yeah it's uh and so",
    "start": "390160",
    "end": "399800"
  },
  {
    "text": "as a result I think all the languages written on top of the beam uh you know",
    "start": "399800",
    "end": "405199"
  },
  {
    "text": "get all of those features and then add their own flavors uh to it accidentally look at you know t-shirt I got yeah I I",
    "start": "405199",
    "end": "412280"
  },
  {
    "text": "I put on to know which flavor yeah over long as you're figuring in this very small uh I was I was wondering though uh",
    "start": "412280",
    "end": "420960"
  },
  {
    "text": "do you think that these similarities between these languages are also",
    "start": "420960",
    "end": "426599"
  },
  {
    "text": "due at least that's also how I feel in part but also to uh to the fact that",
    "start": "426599",
    "end": "432120"
  },
  {
    "text": "Earl long is really hard to extend like it's not like the basic data structures in llong for example are very set like",
    "start": "432120",
    "end": "439960"
  },
  {
    "start": "438000",
    "end": "626000"
  },
  {
    "text": "it's just those if you look at things like for example cues uh in llong",
    "start": "439960",
    "end": "445240"
  },
  {
    "text": "they're implemented as like on top of existing uh data structure St doules and lists right or if you look at Stacks in",
    "start": "445240",
    "end": "451960"
  },
  {
    "text": "Elixir they have to be implemented on top of Ms they're like something are compile time checked but they have to be",
    "start": "451960",
    "end": "457800"
  },
  {
    "text": "implemented dou of Pops um do you think that's I mean everything is possible you know even with erlang um but you know",
    "start": "457800",
    "end": "467000"
  },
  {
    "text": "when people go out when when when language inventors go out and create a programming language they're out to",
    "start": "467000",
    "end": "472120"
  },
  {
    "text": "solve a particular problem and and I think you know so this the problems they trying to solve",
    "start": "472120",
    "end": "477919"
  },
  {
    "text": "dictates you know the features which they need I mean if you look at macros for example they exist in Earline but",
    "start": "477919",
    "end": "484520"
  },
  {
    "text": "they've made they're made with they're very well hidden and they're not",
    "start": "484520",
    "end": "489560"
  },
  {
    "text": "accessible to everyone so they're very hard to use um and Implement and that",
    "start": "489560",
    "end": "495560"
  },
  {
    "text": "was a conscious decision because they didn't want the language to be uh",
    "start": "495560",
    "end": "502400"
  },
  {
    "text": "extendable I think one one of the problems they were trying to solve was the cost of uh maintenance MH they were",
    "start": "502400",
    "end": "508720"
  },
  {
    "text": "trying to reduce maintenance and operational costs in in systems which you know they did very very successfully",
    "start": "508720",
    "end": "514279"
  },
  {
    "text": "MH uh with you know the toolings and the hooks you introspection hooks you've got into the",
    "start": "514279",
    "end": "519640"
  },
  {
    "text": "BM um but you know when it and again you know everything you we were been able to",
    "start": "519640",
    "end": "526600"
  },
  {
    "text": "all the systems you we be able to solve you know we've it's rare we we've gone in and said you we wish we had this or",
    "start": "526600",
    "end": "533120"
  },
  {
    "text": "that you know maybe libraries might have been missing but not really language features because you know keeping it",
    "start": "533120",
    "end": "540040"
  },
  {
    "text": "simple uh meant you could do things with a few lines of code on top of it if you need it need it and that yeah super",
    "start": "540040",
    "end": "547279"
  },
  {
    "text": "interesting thing that comes to mind is that uh maps for example were really recent feature right and they like now",
    "start": "547279",
    "end": "554240"
  },
  {
    "text": "feel like a really necessary language feature absolutely I mean Maps were",
    "start": "554240",
    "end": "561440"
  },
  {
    "text": "first presented I believe at there the music conference by Richard O'Keefe what eventually became maps in",
    "start": "561440",
    "end": "567800"
  },
  {
    "text": "2000 but it probably took a DE before they made it into the language yeah and I remember was around the time Elixir",
    "start": "567800",
    "end": "574200"
  },
  {
    "text": "was becoming one point0 that they actually made it to correct yeah otpr like 17 maybe correct correct and again",
    "start": "574200",
    "end": "583200"
  },
  {
    "text": "you this is um Erikson you know ericon uh is a benevolent dictator that's the",
    "start": "583200",
    "end": "589839"
  },
  {
    "text": "reality is when you're will with open source and they're incredibly conservative over new features because",
    "start": "589839",
    "end": "595959"
  },
  {
    "text": "they add to the language because if they add something they need to support maintain it and decades yeah and not",
    "start": "595959",
    "end": "603079"
  },
  {
    "text": "only that but everything they do needs to be backwards compatible yeah because",
    "start": "603079",
    "end": "608160"
  },
  {
    "text": "you there are tens of millions of lines of coding to prod in production you make something which isn't backwards",
    "start": "608160",
    "end": "614120"
  },
  {
    "text": "compatible you break the build and upgrading will take yeah can take years",
    "start": "614120",
    "end": "621240"
  },
  {
    "text": "we we we've seen you we've worked on projects where they forked the",
    "start": "621240",
    "end": "626560"
  },
  {
    "start": "626000",
    "end": "870000"
  },
  {
    "text": "beam and to get the code base back on the latest version of the beam you know",
    "start": "626560",
    "end": "633079"
  },
  {
    "text": "3 4 years later in some cases you took 6 to 12 months work and and we've seen",
    "start": "633079",
    "end": "639000"
  },
  {
    "text": "this on multiple occasions the thing I like though is that uh I have a wish",
    "start": "639000",
    "end": "645399"
  },
  {
    "text": "list of things that would go into wrong obviously I think maybe the biggest one would be STS uh because the",
    "start": "645399",
    "end": "651160"
  },
  {
    "text": "interoperability would be really nice like the I think Str is exactly what is",
    "start": "651160",
    "end": "657959"
  },
  {
    "text": "stopping the of of calling um um Elixir libraries from",
    "start": "657959",
    "end": "667160"
  },
  {
    "text": "erling esoteric looking stuff to get them to learn exactly and it's it's it",
    "start": "667440",
    "end": "672480"
  },
  {
    "text": "is one of the gating issues so you know there are conversations yeah ongoing",
    "start": "672480",
    "end": "677880"
  },
  {
    "text": "uh and and one of them is you possibly to add structure the language for for",
    "start": "677880",
    "end": "683160"
  },
  {
    "text": "your compatibility issues I mean I'm going back to the very first",
    "start": "683160",
    "end": "688240"
  },
  {
    "text": "um Elixir cons I remember you Jose saying oh you we've got a uh you know",
    "start": "688240",
    "end": "694160"
  },
  {
    "text": "we've got access to all of the libraries uh you know written you know in earling you know which is Decades of work of",
    "start": "694160",
    "end": "700959"
  },
  {
    "text": "Open Source you know libraries uh which we can use from Elixir and you the opposite isn't yeah",
    "start": "700959",
    "end": "708399"
  },
  {
    "text": "you don't have the opposite from um you know from erlang and it's payback time so yeah adding structs would be that",
    "start": "708399",
    "end": "714959"
  },
  {
    "text": "would be one of the huge benefits from it I think so yeah and there are such like Central like elixir things to have",
    "start": "714959",
    "end": "722959"
  },
  {
    "text": "developed around St a lot like it's very idiom you see them the place extremely",
    "start": "722959",
    "end": "728519"
  },
  {
    "text": "idiomatic and um it would be really nice to see them in ourland core CU it could probably you could probably",
    "start": "728519",
    "end": "734600"
  },
  {
    "text": "significantly optimize tacking the stct for example because we have to use this little like",
    "start": "734600",
    "end": "740360"
  },
  {
    "text": "uncore stract underscore atom key that takes memory in all the stes that we have in the system and like it would be",
    "start": "740360",
    "end": "746720"
  },
  {
    "text": "nice to have it in the beam because it would probably that oh absolutely absolutely so that's interesting as a",
    "start": "746720",
    "end": "752279"
  },
  {
    "text": "side note Robert vering added stru to list flavor Earline which is yeah one of",
    "start": "752279",
    "end": "757920"
  },
  {
    "text": "the many languages it's LIF implementation running on the beam yeah and so yeah that now you know allows him",
    "start": "757920",
    "end": "764160"
  },
  {
    "text": "you to call all the elexir libraries completely seamlessly yeah I'm curious if gleam has STS GLE is a statically",
    "start": "764160",
    "end": "771160"
  },
  {
    "text": "typed language that's compiled uh via rust though like the CL compiler is WR",
    "start": "771160",
    "end": "776880"
  },
  {
    "text": "rust and it generates umong bite code or estd I don't actually know um but I",
    "start": "776880",
    "end": "784040"
  },
  {
    "text": "wonder if it has tracks and I wonder if if it I mean I I would bet that it has like records um it would be interesting",
    "start": "784040",
    "end": "791120"
  },
  {
    "text": "to know if they actually can get away with not having them tagged because it's a stly type language so you can like",
    "start": "791120",
    "end": "797000"
  },
  {
    "text": "probably do the checking it's a good point I don't know now but one thing that I've noticed in",
    "start": "797000",
    "end": "804000"
  },
  {
    "text": "ear along that's very exciting is that I do feel like it sometimes it can be hard to extend um along the the VM itself",
    "start": "804000",
    "end": "810839"
  },
  {
    "text": "which is probably for the best right like uh it it's it's um a very intricate",
    "start": "810839",
    "end": "816680"
  },
  {
    "text": "VM with like lots of um it's a big VM right it's very smart VM like the scheduling and the process and the",
    "start": "816680",
    "end": "822480"
  },
  {
    "text": "garbage collection has lots of um lots of features and so it like it would be hard I think to make it extensible in",
    "start": "822480",
    "end": "829199"
  },
  {
    "text": "any significant way when you go and touch the like the depth of the VM but",
    "start": "829199",
    "end": "834560"
  },
  {
    "text": "recently it's been like um the releases of LP have been been really exciting",
    "start": "834560",
    "end": "840240"
  },
  {
    "text": "like they've added a lot of stuff in the last just even the last two or three years like uh Jam was there um aliases",
    "start": "840240",
    "end": "848399"
  },
  {
    "text": "were there which are like incredibly awesome the the being able to call gen servers I think this tp25 or 26 like",
    "start": "848399",
    "end": "855519"
  },
  {
    "text": "very recent like being able to do synchronous calls to gen server and like check for the response later all this",
    "start": "855519",
    "end": "861440"
  },
  {
    "text": "stuff is like uh getting into core and that's that's awesome because it allows us to build a lot of these like lower",
    "start": "861440",
    "end": "867199"
  },
  {
    "text": "level abstractions that correct yeah big fan if you look at that actual",
    "start": "867199",
    "end": "873639"
  },
  {
    "start": "870000",
    "end": "1014000"
  },
  {
    "text": "beam itself it's I think the biggest challenges in in extending and adding",
    "start": "873639",
    "end": "880079"
  },
  {
    "text": "things to it is ensuring they don't disrupt the soft real time properties of of the scheduler which is I think their",
    "start": "880079",
    "end": "886959"
  },
  {
    "text": "biggest sphere yeah and it's interesting that you mentioned this because like one of the uh people that are familiar with",
    "start": "886959",
    "end": "893720"
  },
  {
    "text": "the beam and elixir probably know andl and elixir probably know this but one of the uh o maybe the only um shared the",
    "start": "893720",
    "end": "902480"
  },
  {
    "text": "functional data structure like pure pure functional data structure lives in shared memories is binaries right like",
    "start": "902480",
    "end": "909079"
  },
  {
    "text": "bigger binary is larger than 64 bytes so they go into like a shared memory area",
    "start": "909079",
    "end": "914320"
  },
  {
    "text": "so they didn't have to move Theon process you just move references and and that's the only data structure that I",
    "start": "914320",
    "end": "920000"
  },
  {
    "text": "know of that's completely shared across uh well now they have atomics encounters but ETS tables is another instructive",
    "start": "920000",
    "end": "927040"
  },
  {
    "text": "oper right so yeah yeah so but UHS table sort of like a man does a shared memory",
    "start": "927040",
    "end": "933279"
  },
  {
    "text": "right but it's treat treated as an impure you can actually modify correct",
    "start": "933279",
    "end": "939040"
  },
  {
    "text": "and inste with binaries it's not like that you can't modify binary and it's so interesting to me that even just",
    "start": "939040",
    "end": "944839"
  },
  {
    "text": "binaries which are very pragmatic to be in a like separate memory space after 64",
    "start": "944839",
    "end": "949920"
  },
  {
    "text": "bytes and all of that they cause many problems because like it turns out like a lot of memory leaks inong applications",
    "start": "949920",
    "end": "955440"
  },
  {
    "text": "are from parsers uh copying binaries like taking big batteries and and like exactly like creating",
    "start": "955440",
    "end": "962319"
  },
  {
    "text": "copies of these like smaller batteries or having like memory leaks where um you have reference to Binary that you don't",
    "start": "962319",
    "end": "968079"
  },
  {
    "text": "clear up or the process doesn't die piece of that and then you have a memory leak cu the binary never gets garbage",
    "start": "968079",
    "end": "973399"
  },
  {
    "text": "collected and it's interesting because you really notice that like even one data structure that it's built in still",
    "start": "973399",
    "end": "979839"
  },
  {
    "text": "bubbles up to problems for users in some specific use cases because like it's it's hard to do this like the beam has",
    "start": "979839",
    "end": "986240"
  },
  {
    "text": "wonderful properties of software apply per process garbage collection and you know all this stuff but they're hard to",
    "start": "986240",
    "end": "992440"
  },
  {
    "text": "in take you know I'm so but but that's I think yeah you've answered your own question yeah yeah as to you know why",
    "start": "992440",
    "end": "999399"
  },
  {
    "text": "you know I think Erikson has to be cons very conservative in Chang sedition I mean just the jit compiler which um you",
    "start": "999399",
    "end": "1007639"
  },
  {
    "text": "know that I mean was you know at least 3 four years in the making you know extensive research but you know when",
    "start": "1007639",
    "end": "1014800"
  },
  {
    "start": "1014000",
    "end": "1115000"
  },
  {
    "text": "that came out it allowed WhatsApp to reduce uh it's it's um server server needs by",
    "start": "1014800",
    "end": "1023560"
  },
  {
    "text": "around 30% you know that was they had WhatsApp went out and tweeted about it yeah you know thanking Ericson uh yeah",
    "start": "1023560",
    "end": "1030480"
  },
  {
    "text": "for it and that's you know that in term you know translates to huge you know energy Save which is something that",
    "start": "1030480",
    "end": "1037000"
  },
  {
    "text": "we're seeing yeah it's it's interesting that Elixir itself is not um it's not in",
    "start": "1037000",
    "end": "1043000"
  },
  {
    "text": "a spot where we're not adding much to it either right like it's a like it's I I think arguably more stuff is coming up",
    "start": "1043000",
    "end": "1050039"
  },
  {
    "text": "into Earl long in the past like couple of years maybe because Elixir has been very Elixir ecosystem is expanding",
    "start": "1050039",
    "end": "1056120"
  },
  {
    "text": "incredibly like all the machine learning stuff is nuts like the Liv stuff is nuts but but this is the positive Al a good",
    "start": "1056120",
    "end": "1063080"
  },
  {
    "text": "part of it is also the positive influence NX is having back on early yeah yeah because people are realizing",
    "start": "1063080",
    "end": "1068400"
  },
  {
    "text": "that a lot of things you actually have to Sol them in ear like for example alas is counters or atomics all these new",
    "start": "1068400",
    "end": "1074679"
  },
  {
    "text": "features that have been added a persistent term those are like fantastic features in just last couple or two or",
    "start": "1074679",
    "end": "1081159"
  },
  {
    "text": "three years I think in Airline and they you just cannot do them like something like persistent term which is like this",
    "start": "1081159",
    "end": "1086240"
  },
  {
    "text": "shared persistent storage get just copy to all processes uh very very fast to read very painful to write it's awesome",
    "start": "1086240",
    "end": "1093120"
  },
  {
    "text": "like for so many use cases but you just can't do it in like you have to do it at the uh BM level right you can't corre so",
    "start": "1093120",
    "end": "1099799"
  },
  {
    "text": "it's it's really awesome that these features are like popping up in Earl because like we from Elixir we just get",
    "start": "1099799",
    "end": "1105000"
  },
  {
    "text": "them free and from you know inlong you can just use them so like they're really truly and you hand them in you can them",
    "start": "1105000",
    "end": "1110880"
  },
  {
    "text": "like in all times like that's that's the benefit obviously of adding features to earling so that that that's that what",
    "start": "1110880",
    "end": "1117280"
  },
  {
    "text": "amusing you say oh nothing's happening with her like no there's a lot of work happening you know Eric is doing an amazing job uh yeah help driving things",
    "start": "1117280",
    "end": "1126320"
  },
  {
    "text": "forward but it's not so much you know the language it's it's the libraries",
    "start": "1126320",
    "end": "1131480"
  },
  {
    "text": "where the effort is being put in and on the virtual machine yes I think that's tricky because like the work that theang",
    "start": "1131480",
    "end": "1138559"
  },
  {
    "text": "uh team is putting into Earline is really low level like something like persistent",
    "start": "1138559",
    "end": "1144159"
  },
  {
    "text": "gramar something like atom Atomic or uh counters these are really low level",
    "start": "1144159",
    "end": "1149600"
  },
  {
    "text": "stuff that usually you need 99% I think of you cases are for like Library authors OTP exactly which example are",
    "start": "1149600",
    "end": "1159200"
  },
  {
    "text": "mostly used for G server calls and like they're used by OTP itself right so you don't really get to and and the the the",
    "start": "1159200",
    "end": "1166200"
  },
  {
    "text": "advancements and the the the news that are happening in Elixir are pro like they seem more exciting because they're",
    "start": "1166200",
    "end": "1171880"
  },
  {
    "text": "like much easier to like oh there's a new uh learn machine learning uh library",
    "start": "1171880",
    "end": "1177120"
  },
  {
    "text": "that lets you like pick up models from hung in face and run your own machine learning models like that's something I",
    "start": "1177120",
    "end": "1183320"
  },
  {
    "text": "can touch very easily it can really gets easily to users or live new features in live view they get right in the hands of",
    "start": "1183320",
    "end": "1189400"
  },
  {
    "text": "users and instead the work that ring is doing is just just as important just as um prolific right like they're doing a",
    "start": "1189400",
    "end": "1195679"
  },
  {
    "text": "lot of stuff it's just that it's so within maybe the more low level it's a low level to get it to users you know",
    "start": "1195679",
    "end": "1202520"
  },
  {
    "text": "like it's where you need to have full control over what's going on but it does back I mean I've used for libraries I've",
    "start": "1202520",
    "end": "1208600"
  },
  {
    "text": "used counters I've used atomics I've used all the new features like then they''re been awesome an amazing new",
    "start": "1208600",
    "end": "1214120"
  },
  {
    "text": "feature which I actually discovered reading the manual pages um uh a couple",
    "start": "1214120",
    "end": "1219679"
  },
  {
    "text": "of weeks ago is is ability to do um match specifications so match",
    "start": "1219679",
    "end": "1225440"
  },
  {
    "text": "specifications a match specification for those of you don't know is is a program",
    "start": "1225440",
    "end": "1230720"
  },
  {
    "text": "which you provides a set of it's a term uh which consists a set of variables a",
    "start": "1230720",
    "end": "1235880"
  },
  {
    "text": "set of logical um operations you can do on these variables and then a set of",
    "start": "1235880",
    "end": "1242200"
  },
  {
    "text": "actions and so it's a very simple program um has a very very small subset",
    "start": "1242200",
    "end": "1247799"
  },
  {
    "text": "of of uh of operations and and actions you can take and it was originally been",
    "start": "1247799",
    "end": "1253360"
  },
  {
    "text": "used for um for uh tracing uh local and Global function calls in runtime you we",
    "start": "1253360",
    "end": "1260520"
  },
  {
    "text": "having to trace compile the code and you wanted to turn on or turn off the trace or trigger Trace messages when um Tri",
    "start": "1260520",
    "end": "1269200"
  },
  {
    "text": "trigger tra messages when you uh when certain conditions were met so you know",
    "start": "1269200",
    "end": "1274600"
  },
  {
    "text": "only if you know the first argument you know to to local C was user Andrea and",
    "start": "1274600",
    "end": "1280000"
  },
  {
    "text": "uh you know and the second argument was that them call home for example you could at that level of granularity you",
    "start": "1280000",
    "end": "1285679"
  },
  {
    "text": "could trigger a trace message if you knew you know that was you know that that's was where you you need to go in a",
    "start": "1285679",
    "end": "1292320"
  },
  {
    "text": "troubleshoot and you this has been extended to you to message passing to",
    "start": "1292320",
    "end": "1299120"
  },
  {
    "text": "pattern matching it's it's just been extended to a large variety of things also works on ETS tables it has worked",
    "start": "1299120",
    "end": "1306799"
  },
  {
    "text": "on ETS table for a while but you know so so basically you know the bought the power of tracing of you know kind of",
    "start": "1306799",
    "end": "1313279"
  },
  {
    "start": "1308000",
    "end": "1475000"
  },
  {
    "text": "sequential calls you to to a lot of other constructs where again you know",
    "start": "1313279",
    "end": "1319000"
  },
  {
    "text": "you receive a process receives a particular message you trigger you know you start tracing you know you know it's",
    "start": "1319000",
    "end": "1326720"
  },
  {
    "text": "a very fast way of like matching on stuff and extracting pration exactly which is why it's allowed in ITF tables",
    "start": "1326720",
    "end": "1334159"
  },
  {
    "text": "yeah it's not for the faint of heart especially if you're doing it in a live system but it's you for these really",
    "start": "1334159",
    "end": "1342120"
  },
  {
    "text": "kind of hard to reason and hard to figure out bugs it's it's uh again one of the points of of earling was reduce",
    "start": "1342120",
    "end": "1348880"
  },
  {
    "text": "operational cost and this is this you know really reduces the time it takes to troubleshoot systems yeah yeah and and",
    "start": "1348880",
    "end": "1356720"
  },
  {
    "text": "and find that needle in a Hast stack yeah I think Elixir is doing a really I'm not temp with any of it that's why I",
    "start": "1356720",
    "end": "1362320"
  },
  {
    "text": "I allow myself to say it but it's doing an amazing job at doing something similar with compiler tracing and like",
    "start": "1362320",
    "end": "1367960"
  },
  {
    "text": "code Diagnostics there's there has been a lot a ton of work really in the last a year um to like improve Elixir lexer and",
    "start": "1367960",
    "end": "1376440"
  },
  {
    "text": "parser and like all the Cod compilers so you're putting hooks into the code basically everywhere so essentially like",
    "start": "1376440",
    "end": "1382559"
  },
  {
    "text": "the language servers uh become very precise in doing you know and doing stuff like now now Elixir is able to uh",
    "start": "1382559",
    "end": "1389480"
  },
  {
    "text": "partially for example um partially tokenize strings that are like all the Elixir coding are that have syntax",
    "start": "1389480",
    "end": "1395440"
  },
  {
    "text": "errors so that like they we can point you to syntax eror where it is you know like all these tools and that's that's",
    "start": "1395440",
    "end": "1401200"
  },
  {
    "text": "really like it makes me think of that cuz like uh that's that's like really precise tracing at the compilation level",
    "start": "1401200",
    "end": "1407520"
  },
  {
    "text": "right and like um I'm not involved anyway sadly but I will benefit from it you know when went in and added line",
    "start": "1407520",
    "end": "1415400"
  },
  {
    "text": "numbers in in error messages you know which uh yeah yeah alixir alixir alixir is",
    "start": "1415400",
    "end": "1424480"
  },
  {
    "text": "able to especially with this tooling stuff is able to having its own uh compiler written mostly in Elixir right",
    "start": "1424480",
    "end": "1431400"
  },
  {
    "text": "uh and a little bit of her L like the compiler for Elixir itself is very high level very easy to I I I always like",
    "start": "1431400",
    "end": "1437159"
  },
  {
    "text": "felt it's like quite easy to contribute to it's quite easy to like do bigger stuff compared to language like where you have um lower level compiler that",
    "start": "1437159",
    "end": "1445080"
  },
  {
    "text": "like has to take care of like optimizations and like do multiple more passes like elixir compile compilation",
    "start": "1445080",
    "end": "1450320"
  },
  {
    "text": "pass less for example right so you have um easier opportunities for if doing",
    "start": "1450320",
    "end": "1455799"
  },
  {
    "text": "this sort of stuff like tracing comilation comilation Hooks and all this stuff for code Diagnostics so very",
    "start": "1455799",
    "end": "1461200"
  },
  {
    "text": "interesting what did you tell us you Alex is making its way into a lot of new",
    "start": "1461200",
    "end": "1466559"
  },
  {
    "text": "verticals I think one of them is machine learning yeah can you share a little bit over what's happening in that space yeah",
    "start": "1466559",
    "end": "1473320"
  },
  {
    "text": "I think uh um I am not involved in that space at all so you know always a pinch of salt",
    "start": "1473320",
    "end": "1480240"
  },
  {
    "text": "but uh um essentially we have Port like The Elixir Sean Mar in in particular has been",
    "start": "1480240",
    "end": "1487320"
  },
  {
    "text": "leading all of this but the The Elixir Community has been um writing theels for",
    "start": "1487320",
    "end": "1493039"
  },
  {
    "text": "Elixir that compile to uh this like GPU um Frameworks",
    "start": "1493039",
    "end": "1498840"
  },
  {
    "text": "um you know like uh I don't know any of them like I'll embarrass myself but uh essentially you can do tensor operations",
    "start": "1498840",
    "end": "1505960"
  },
  {
    "text": "uh you know in in alixir now and from that um sort of uh was born a whole",
    "start": "1505960",
    "end": "1511919"
  },
  {
    "text": "ecosystem of you can do now in alixir related to machine learning the really interesting thing to me is that this is",
    "start": "1511919",
    "end": "1517559"
  },
  {
    "text": "not it's not uh necessarily better than python as far as I understand for",
    "start": "1517559",
    "end": "1523360"
  },
  {
    "text": "example uh because they both compile to like you know GPU instructions eventually they use like this Google",
    "start": "1523360",
    "end": "1529640"
  },
  {
    "text": "compilers for GPU instructions and stuff so it's not necessarily a better perform like better performance but the thing",
    "start": "1529640",
    "end": "1536440"
  },
  {
    "text": "that's been really interesting this it seems to be one of the first languages to actually challenge py dominance over",
    "start": "1536440",
    "end": "1542480"
  },
  {
    "text": "this Bas right it focuses on user experience little adoptability you know it's they do for machine learning what",
    "start": "1542480",
    "end": "1549120"
  },
  {
    "text": "they've done for web development in Phoenix where you they've really reduce the barrier to entry where you you need",
    "start": "1549120",
    "end": "1554760"
  },
  {
    "text": "to know a little just yeah a subset of elexir to be be reproductive using Phoenix and you not understand yeah",
    "start": "1554760",
    "end": "1562840"
  },
  {
    "text": "anything of what's Happening under the hood and and basically in no time you deploy website if they do the same for",
    "start": "1562840",
    "end": "1570120"
  },
  {
    "text": "you for machine learning I think it's going to really open up the doors it's a there's a lot of focus yeah AB there's a",
    "start": "1570120",
    "end": "1576399"
  },
  {
    "text": "lot of focus on user experience again uh like we saw with Phoenix like we saw with live view like all these tools like",
    "start": "1576399",
    "end": "1581760"
  },
  {
    "text": "we saw with nerves as well nerves exactly yeah so nerves is the embedded uh framework yeah yeah for like B",
    "start": "1581760",
    "end": "1589360"
  },
  {
    "text": "devices and like the same thing like very very usable very user friendly and they're doing the same thing with",
    "start": "1589360",
    "end": "1595159"
  },
  {
    "text": "machine learning and to me it's very interesting because like you can see that the ergonomics make a big difference right like having even if",
    "start": "1595159",
    "end": "1601640"
  },
  {
    "text": "like maybe performance STS going to be better than python because they're going to compile for like very similar I don't know anything I could be saying like",
    "start": "1601640",
    "end": "1607880"
  },
  {
    "text": "total uh lies here but like I think that's how it how it works and uh you",
    "start": "1607880",
    "end": "1613320"
  },
  {
    "text": "know it turns out that the ergonomics and developer experience and usability matter to developers right and uh I",
    "start": "1613320",
    "end": "1620720"
  },
  {
    "text": "think it this like it's interesting this is one of the from my very limited experience it seems to be one of the",
    "start": "1620720",
    "end": "1625880"
  },
  {
    "text": "very few languages that are actually challenging Python's because python is like it's the thing in the machine",
    "start": "1625880",
    "end": "1631320"
  },
  {
    "text": "learning sere right like that's you write Python and instead um like elixir is coming up with like oh hey you know",
    "start": "1631320",
    "end": "1637279"
  },
  {
    "text": "you can actually write this in lure too um and it's very very interesting to see what that will you know will will bring",
    "start": "1637279",
    "end": "1644000"
  },
  {
    "text": "in the future I have no I have no clue I'm not involved sadly because I I don't know I don't really do anything with",
    "start": "1644000",
    "end": "1650600"
  },
  {
    "text": "machine learning uh but what really kind of excites me is the ability to run everything in the same memory space yeah",
    "start": "1650600",
    "end": "1656919"
  },
  {
    "text": "y so you know if you look at Phoenix you know and you decide to use mesia as a",
    "start": "1656919",
    "end": "1662600"
  },
  {
    "text": "backend database yeah you'd have the web server you'd have your business logic and your database all in the same memory",
    "start": "1662600",
    "end": "1667640"
  },
  {
    "text": "space which you know make it extremely fast I mean it's uh faster to you know",
    "start": "1667640",
    "end": "1672840"
  },
  {
    "text": "to create Dynamic pages and you to read static Pages cash and red is uh oh yeah",
    "start": "1672840",
    "end": "1678000"
  },
  {
    "text": "so if you can do the same if the same happens with machine learning then it's going to be Fant yeah yeah we use a lot",
    "start": "1678000",
    "end": "1683240"
  },
  {
    "text": "of ETS at at my job yeah for caching and for like responding very quickly to",
    "start": "1683240",
    "end": "1689480"
  },
  {
    "text": "requests and uh you know like we I we have an endpoint for beoning uh bet starts now that's like doings tables are",
    "start": "1689480",
    "end": "1697200"
  },
  {
    "text": "the yeah like half millisecond and it just cues requests and then we flush them out to you want distributed ETS",
    "start": "1697200",
    "end": "1704360"
  },
  {
    "text": "tables yeah just use EAS it's uh yeah there's a lot of tools very powerful",
    "start": "1704360",
    "end": "1710200"
  },
  {
    "text": "tools so yeah I mean just to wrap up I mean what's your view over kind of the future of Airline Elixir gleam and",
    "start": "1710200",
    "end": "1716960"
  },
  {
    "text": "ecosystem as a whole uh good question I have I have I have no clue my my dream",
    "start": "1716960",
    "end": "1722880"
  },
  {
    "text": "is just that like they become so interoperable that I can write uh my",
    "start": "1722880",
    "end": "1728799"
  },
  {
    "text": "libraries in some libraries in Elixir some libraries in gleam some libraries in aranga and they just like all works",
    "start": "1728799",
    "end": "1734279"
  },
  {
    "text": "together that's my dream because like I think people are going to have preferences airong is a simpler language",
    "start": "1734279",
    "end": "1739399"
  },
  {
    "text": "for example and I think a bunch of in that it has less features uh strictly speaking like there's like less feature",
    "start": "1739399",
    "end": "1746880"
  },
  {
    "text": "surface that's like simpler um Gleim has different completely different characteristic like you know the stal",
    "start": "1746880",
    "end": "1753120"
  },
  {
    "text": "type stuff and I would like to be able to choose which one I want to use for different use cases like I want to write",
    "start": "1753120",
    "end": "1758360"
  },
  {
    "text": "a I don't know like a like a compression algorithm like maybe gleam is really",
    "start": "1758360",
    "end": "1763559"
  },
  {
    "text": "nice because it lets me like do it like have set types to check all this stuff I need to write something related to um I",
    "start": "1763559",
    "end": "1770240"
  },
  {
    "text": "don't know like mingling with you know protocal stuff it's nice to have like static types I want to write something",
    "start": "1770240",
    "end": "1776399"
  },
  {
    "text": "that like is going to be complex and I and I want writing to keep the feature set simple I want to write something",
    "start": "1776399",
    "end": "1781760"
  },
  {
    "text": "that's you know like uses protocols I want to be be able to use Elixir so my dream would be to have and also to have",
    "start": "1781760",
    "end": "1787720"
  },
  {
    "text": "a single Community like I I wrote a bunch of drivers in Elixir for for example Cassandra redis like all this",
    "start": "1787720",
    "end": "1793760"
  },
  {
    "text": "stuff I would love if people from that one could just use them CU like the absolutely absolutely I think",
    "start": "1793760",
    "end": "1801159"
  },
  {
    "text": "interoperability is key yeah I hope that I completely agree with you and",
    "start": "1801159",
    "end": "1806480"
  },
  {
    "text": "um yeah and from my point of view I'm seeing kind of airl Lang elexir um and",
    "start": "1806480",
    "end": "1812760"
  },
  {
    "text": "other beam languages making their way to Edge networks and even out on iot devices and uh and that's for example",
    "start": "1812760",
    "end": "1820240"
  },
  {
    "text": "where I think your gleam would be would would really take off for the simple reason it's a statically typed",
    "start": "1820240",
    "end": "1826840"
  },
  {
    "text": "and it makes the Lang which much more secure yeah you can take off a bunch of stuff from round time exactly you're",
    "start": "1826840",
    "end": "1832760"
  },
  {
    "text": "actually reducing the you the surface of attack and the external surface of",
    "start": "1832760",
    "end": "1838159"
  },
  {
    "text": "attack but uh the great thing is that all of these languages are interoperable and you and and dependent on each other",
    "start": "1838159",
    "end": "1845320"
  },
  {
    "text": "so uh yeah hoping you know they'll Thrive and continue growing together thanks thank you thanks for listening to",
    "start": "1845320",
    "end": "1852000"
  },
  {
    "text": "this episode of the goto podcast head over to gpa. Tech to discover lots more content from the brightest minds and",
    "start": "1852000",
    "end": "1858480"
  },
  {
    "text": "software [Music]",
    "start": "1858480",
    "end": "1870480"
  },
  {
    "text": "development",
    "start": "1870480",
    "end": "1873480"
  }
]