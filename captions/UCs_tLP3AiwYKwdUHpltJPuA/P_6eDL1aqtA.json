[
  {
    "start": "0",
    "end": "141000"
  },
  {
    "text": "Hello, my name is Christian Clausen. I'm a technical agile coach and author of\nthe refactoring book, \"Five Lines of Code.\"",
    "start": "1270",
    "end": "9780"
  },
  {
    "text": "I'm sitting here with Michael Feathers, the\nauthor of the book, \"Working Effectively With Legacy Code,\" which has helped thousands of\ndevelopers since it was published in 2004.",
    "start": "9780",
    "end": "17820"
  },
  {
    "text": "Michael, what are you up to these days? What am I up to these days? Lots of things.",
    "start": "17820",
    "end": "23670"
  },
  {
    "text": "I'm a chief architect of Globant, but I also\ndo training and consulting independently as well.",
    "start": "23670",
    "end": "29710"
  },
  {
    "text": "Yeah, I think I kinda, like, of broadened\nmy focus beyond legacy code in the past five, or six years or so, but it's just been very\nfun.",
    "start": "29710",
    "end": "37840"
  },
  {
    "text": "So I like to think about things at a deep\nlevel, and there are a lot of interesting things on the horizon now to play with.",
    "start": "37840",
    "end": "44870"
  },
  {
    "text": "So that's pretty much what I'm up to. Cool. You're not looking at legacy code anymore. Is that because you've fixed all of the legacy\ncode in your vicinity?",
    "start": "44870",
    "end": "51570"
  },
  {
    "text": "No, no, no. I mean, people keep writing it all the time,\nright? So it's like, that's impossible. But, no, it's not that I'm not dealing with\nit.",
    "start": "51570",
    "end": "58870"
  },
  {
    "text": "It's just, basically, I think my scope has\nexpanded. I'm just looking at some other things also. Yes. I guess that's the best way to put it.",
    "start": "58870",
    "end": "64890"
  },
  {
    "text": "Okay. Well, that leads naturally to my first sort\nof question. If you were to write the book like today,\nis there anything about it you'd change?",
    "start": "64890",
    "end": "73800"
  },
  {
    "text": "Well, it's an interesting thing because I\nalmost feel like the core of the book, the core ideas, are kind of like a little bit\ntimeless in a way, and that's why I guess",
    "start": "73800",
    "end": "82118"
  },
  {
    "text": "it still continues to sell very well now. But I think it would make more nods to current\ntechnology sort of like that it kind of like",
    "start": "82119",
    "end": "89520"
  },
  {
    "text": "reaches the reader and says, \"Hey, by the\nway, I know about this thing that you're dealing with right now,\" but still it's like it's\nthis kind of a problem of refactoring and",
    "start": "89520",
    "end": "98159"
  },
  {
    "text": "testing, that kind of thing. So it's more like how do you sort of approach\nthe reader? That kind of thing.",
    "start": "98159",
    "end": "103630"
  },
  {
    "text": "There's a lot more now that I would say about\nhow legacy code happens because that's been almost like the sideline pursuit I've had\nover the past 10, 15 years.",
    "start": "103630",
    "end": "112969"
  },
  {
    "text": "It's kind of like you go around and you're\nhelping people with all these problems and you're kind of like, okay, well, how do we\navoid all these things, right?",
    "start": "112969",
    "end": "119310"
  },
  {
    "text": "And Agile had some answers that have been\nseveral other things, but understanding the real mechanics of how it happens and really\nhow you can avoid them at an organizational",
    "start": "119310",
    "end": "129190"
  },
  {
    "text": "and individual level. It's been, like, a lot of what I've been thinking\nabout, and I think I would go and add to the",
    "start": "129190",
    "end": "135120"
  },
  {
    "text": "book. That and functional programming, because there\nwasn't very much at that point. ",
    "start": "135120",
    "end": "141269"
  },
  {
    "start": "141000",
    "end": "411000"
  },
  {
    "text": "Well, that seems interesting because, to me,\nit will feel like legacy code is inevitable. It's just when code ages, it becomes legacy.",
    "start": "141269",
    "end": "150239"
  },
  {
    "text": "I think also we should probably deal with\na question that is very popular at this time",
    "start": "150239",
    "end": "156340"
  },
  {
    "text": "very much in the media, and it's AI, and machine\nlearning, and what effect that will have on",
    "start": "156340",
    "end": "162349"
  },
  {
    "text": "code quality and legacy code in particular. Is refactoring gonna be outdated?",
    "start": "162349",
    "end": "167730"
  },
  {
    "text": "Well, it's an interesting thing about that. So I've been playing around with it a lot\nrecently, and I don't know.",
    "start": "167730",
    "end": "173209"
  },
  {
    "text": "I sense that we're safe for a little while\nin a way. I think there are a couple of different things\nthat kind of go together with this.",
    "start": "173209",
    "end": "179260"
  },
  {
    "text": "One is that we've had code generators for\nages within software development, and there have always been people who say at some point,\nwe'll just be able to generate the applications",
    "start": "179260",
    "end": "188250"
  },
  {
    "text": "and we'll be set, right? But there are always, these interesting things\nlike, you know, it's like what does the thing",
    "start": "188250",
    "end": "194781"
  },
  {
    "text": "do well? How much effort is it to go and actually sort\nof hone in on the thing that you need?",
    "start": "194781",
    "end": "200069"
  },
  {
    "text": "And I guess, the other big thing with this\ntoo, is that code is still the representation language, right?",
    "start": "200070",
    "end": "205659"
  },
  {
    "text": "We are generating code. We need to understand code well enough to\nbe able to go and work with it and sort of like gauge the correctness of solutions because\nit's still...",
    "start": "205659",
    "end": "213040"
  },
  {
    "text": "There's, like, the hit-and-miss thing with\nAI right now. It'll give you something that's good sometimes\nand other times doesn't compile, or it's kind",
    "start": "213040",
    "end": "221010"
  },
  {
    "text": "of like off track because it's dealing with\nthe ambiguity of your natural language, right?",
    "start": "221010",
    "end": "226019"
  },
  {
    "text": "So I think we've got space in this. But I think, in a way, prompting is just gonna\nbecome another form of programming, right?",
    "start": "226019",
    "end": "235180"
  },
  {
    "text": "And then we have to kind of figure out what\ndo we do to go and sort of like make the stable",
    "start": "235180",
    "end": "240400"
  },
  {
    "text": "pieces we can generate and then the ones that\nrequire more attention. So we'll still need modularity at a very coarse-grained\nlevel in some way.",
    "start": "240400",
    "end": "248099"
  },
  {
    "text": "Those are some thoughts about that, I guess,\nright? Yes Sort of like a, it'll be a new type of\nREPL like ChatGPT.",
    "start": "248099",
    "end": "256630"
  },
  {
    "text": "Yes. Yes. Well, you have to coax it and prompt it, right?",
    "start": "256630",
    "end": "262440"
  },
  {
    "text": "Yes. And you have to guide it. Like you have to learn to guide it and say,\noh, I know it's gonna trip out over these",
    "start": "262440",
    "end": "268380"
  },
  {
    "text": "things. And, like... Right. So it becomes just a… it becomes a programming\nlanguage, which is a little bit more frustrating,",
    "start": "268380",
    "end": "275090"
  },
  {
    "text": "in some sense, but can do more for you, I'm\nthinking. Which is kind of hard to imagine, right?",
    "start": "275090",
    "end": "280100"
  },
  {
    "text": "Yes. Because programming isn't frustrating at all. I haven't worked much with the Copilot or\nsomething like that, but it seems like people",
    "start": "280100",
    "end": "288090"
  },
  {
    "text": "were also very into that when it came out. It was like, oh, now we won't have to do these\nsimple things anymore, we can just ask Copilot",
    "start": "288090",
    "end": "296060"
  },
  {
    "text": "to write them for us. And I mean, especially if you're working a\nlot with tests that are fairly simple or,",
    "start": "296060",
    "end": "303520"
  },
  {
    "text": "at least, follow a similar structure to how\nthey usually would, then Copilot would be more helpful.",
    "start": "303520",
    "end": "309430"
  },
  {
    "text": "I don't know, have you tried Copilot? A little bit. Not as much as some of the more recent things.",
    "start": "309430",
    "end": "316949"
  },
  {
    "text": "I think the thing is that everything with\nAI now seems to...well, not everything, but a lot of it right now just turns into this\nthing of kinda like generate and test in a",
    "start": "316949",
    "end": "326020"
  },
  {
    "text": "way. So you are given things, and then you have\nto basically...it's really on your back to",
    "start": "326020",
    "end": "331080"
  },
  {
    "text": "go and figure out whether it is the right\nthing or not, right? So there's this degree, there's like this\nsweet spot, I think, between, yay, I can generate",
    "start": "331080",
    "end": "339349"
  },
  {
    "text": "a lot of things. It's kind of like at what scale do I generate\nthings to go and see that they are on target",
    "start": "339350",
    "end": "344620"
  },
  {
    "text": "for what I need to do? I've used it to generate test cases. I've just been kind of happy with what it's\nproduced in many cases.",
    "start": "344620",
    "end": "351210"
  },
  {
    "text": "I think if nothing else, you get, like, enhanced\nideation. There are certain things that you might not\nthink of and you sort of become better yourself",
    "start": "351210",
    "end": "359720"
  },
  {
    "text": "in using it because it sort of, like, introduces\nyou to more possibilities, and that's nice.",
    "start": "359720",
    "end": "365660"
  },
  {
    "text": "That's pretty interesting. I've also seen people using, I think it's\ncalled procedural testing or something, more",
    "start": "365660",
    "end": "372040"
  },
  {
    "text": "and more where they generate a lot of sample\ninput or whatever, and then they verify against",
    "start": "372040",
    "end": "377780"
  },
  {
    "text": "that, I think. Like fuzzing in a sense. Something like that.  It's great for that sort of thing.",
    "start": "377780",
    "end": "384419"
  },
  {
    "text": "Yeah. Cool things. Guess we'll see where it goes, right? And it's kind of funny, I'm supposing that\nyears from now, you or I can take a look back",
    "start": "384419",
    "end": "391789"
  },
  {
    "text": "at this and sort of say, \"Ah, those guys,\nthey didn't quite know,\" you know. It's hard to predict the future.",
    "start": "391790",
    "end": "397980"
  },
  {
    "text": "When Copilot took over the world tomorrow\nor in a month. Exactly, right.",
    "start": "397980",
    "end": "403520"
  },
  {
    "text": "So what's the date stamp here? What's today's date? Today's the 20th or 21st?\n20th of March.",
    "start": "403520",
    "end": "409349"
  },
  {
    "text": "Date stamp for our opinions here Talking about testing, your book talks a lot\nabout testing and it follows sort of this",
    "start": "409349",
    "end": "415400"
  },
  {
    "start": "411000",
    "end": "855000"
  },
  {
    "text": "Agile alliance sort of massive on TDD, stuff\nlike that sort of things.",
    "start": "415400",
    "end": "422680"
  },
  {
    "text": "So before we jump straight into testing, how\ndo you characterize a legacy code base?",
    "start": "422680",
    "end": "429750"
  },
  {
    "text": "How do you recognize if you're sitting with\na legacy code base? Well, I don't think there's any hard line\nwith it.",
    "start": "429750",
    "end": "435480"
  },
  {
    "text": "I think legacy is a subjective judgment that\nwe make quite often based on the difficulty and the hardness to understand something that\nwe're working with.",
    "start": "435480",
    "end": "443830"
  },
  {
    "text": "A traditional definition is it is code you\ngot from somebody else, right? And at one point, I started throwing around\nthe idea.",
    "start": "443830",
    "end": "449620"
  },
  {
    "text": "It's like, well, maybe it's a code without\ntests because the way that you work in code without tests is qualitatively different from\nwhen you have the test to kind of like serve",
    "start": "449620",
    "end": "459000"
  },
  {
    "text": "as, like, a safety net for what you're doing,\nright? It's really a subjective judgment.",
    "start": "459000",
    "end": "467668"
  },
  {
    "text": "I think the main thing I keep coming back\nto more and more is to what degree you actually",
    "start": "467669",
    "end": "473220"
  },
  {
    "text": "understand what you're working on, right? And if you have trouble understanding it and\nunderstanding what its behavior is, then you're",
    "start": "473220",
    "end": "481490"
  },
  {
    "text": "really in trouble, right? So everything is about getting that understanding\neither through writing tests or reading all",
    "start": "481490",
    "end": "488430"
  },
  {
    "text": "those different things. There's really a slippery slope on that. Things can kind of fall apart.",
    "start": "488430",
    "end": "494599"
  },
  {
    "text": "That's an interesting take because I would\nnormally say that it's level of confidence",
    "start": "494600",
    "end": "501270"
  },
  {
    "text": "that you feel, and it's very close to what\nyou're describing. Yes. The difference, I think, from my perspective,\nwould be that I try hard not to have people",
    "start": "501270",
    "end": "512510"
  },
  {
    "text": "read code because humans read code very slowly. And so the more of that I can skip, the better.",
    "start": "512510",
    "end": "520519"
  },
  {
    "text": "And good method naming, for instance, and,\nlike, having a good hierarchy of your code",
    "start": "520520",
    "end": "526269"
  },
  {
    "text": "is a way to sort of eliminate a lot of the\nbranches, hopefully eliminating a lot of the code.",
    "start": "526269",
    "end": "532300"
  },
  {
    "text": "And then confidence comes from something else,\nactually, than understanding it. Like, do I trust that this works, even if\nI haven't looked at it?",
    "start": "532300",
    "end": "541450"
  },
  {
    "text": "Fair enough. I think in the book, I kind of like nodded\nto that a bit because I was talking about",
    "start": "541450",
    "end": "547769"
  },
  {
    "text": "this thing of, like, to what degree you can\nbe surprised by what you find, or what the",
    "start": "547769",
    "end": "554139"
  },
  {
    "text": "system does, right? And I think this is a general thing. It's kind of like when we make systems, it's\nkinda like there's the general thing that",
    "start": "554140",
    "end": "560329"
  },
  {
    "text": "it does and it's like it should be pretty\nmuch unsurprising, right? So if you find something completely counterintuitive\nin the code, either behaviorally through a",
    "start": "560329",
    "end": "570370"
  },
  {
    "text": "test or just through reading things, you might\nbe thinking, \"Well, what else is here,\" right?",
    "start": "570370",
    "end": "577910"
  },
  {
    "text": "It's like are things really to the point where\nthey're so irregular that I feel like I'm",
    "start": "577910",
    "end": "583690"
  },
  {
    "text": "lost or that I could be kind of tripped up\nby anything that happens? So, fair. I think it is the quality of the code base\nrather than our understanding.",
    "start": "583690",
    "end": "596750"
  },
  {
    "text": "So I agree. Yes. A test is one way to sort of gain some of\nthat confidence.",
    "start": "596750",
    "end": "601920"
  },
  {
    "text": "You also mentioned in the book, which I absolutely\nlove because I also spend a whole chapter on that in my own book, is, like, leaning\non the compiler, as you call it.",
    "start": "601920",
    "end": "609260"
  },
  {
    "text": "Like, the compiler is so powerful. Type systems have gotten so good, you can\ngain a lot of confidence if you know how to",
    "start": "609260",
    "end": "616540"
  },
  {
    "text": "work with them correctly. Yes, definitely. And I think it's funny with that too because\nI guess what I'm describing on the compiler,",
    "start": "616540",
    "end": "623610"
  },
  {
    "text": "the other thing that I talk about a bit is\ndeliberately introducing errors to find out more about your code, right?",
    "start": "623610",
    "end": "629260"
  },
  {
    "text": "Which I basically see as another form of testing,\nit's just never really quite seen that way. But it's like it's another level for gaining\nan understanding of what's going on in the",
    "start": "629260",
    "end": "638029"
  },
  {
    "text": "system behaviorally. So, it's good stuff. Yes. Definitely. And yours is the first formulation of TDD\nI've seen that includes making it compile.",
    "start": "638029",
    "end": "648139"
  },
  {
    "text": "Because it seems to trip up a lot of people\nthat red could also mean a compile error in",
    "start": "648139",
    "end": "654730"
  },
  {
    "text": "the red-green-refactor. No. And it's funny with that too because I think\nthe very initial steps in TDD kind of happened",
    "start": "654730",
    "end": "663550"
  },
  {
    "text": "in dynamically type languages, but definitely,\nKent Beck and people around him were working",
    "start": "663550",
    "end": "670110"
  },
  {
    "text": "in Java at least at the time that he wrote\nthe first book on this. But yeah, it's a piece of it, particularly\nfor compile languages.",
    "start": "670110",
    "end": "677810"
  },
  {
    "text": "What's kind of funny for me is quite often,\nworking with people on dynamically-typed languages. I actually prefer dynamically-typed languages\nin many circumstances, but it's also like",
    "start": "677810",
    "end": "687510"
  },
  {
    "text": "there's this thing of, like, you have way\nmore affordances with compiled languages, different ways of interrogating the code base.",
    "start": "687510",
    "end": "693180"
  },
  {
    "text": "So it's a trade-off, you know?  I'm a little bit unsurprised that you work\nwell in dynamic languages because it seems",
    "start": "693180",
    "end": "702910"
  },
  {
    "text": "like you have a lot of discipline in writing,\ntesting, and stuff like that. Whereas I find my huge challenge when I'm\nworking with dynamic languages is I don't",
    "start": "702910",
    "end": "710480"
  },
  {
    "text": "have a lot of testing discipline, I have a\nlot of typing discipline. And so, I'm very challenged in my confidence\nlevel when I'm working in dynamic languages.",
    "start": "710480",
    "end": "717440"
  },
  {
    "text": "Well, can I tell you a little story about\nthis? Because it's a little story I like to repeat. Of course. I think I put it in a blog a long time ago,\nbut back when I went to college, we had a",
    "start": "717440",
    "end": "724880"
  },
  {
    "text": "computer lab, and you'd sit in there, and\nyou'd have your terminal and you'd work on things.",
    "start": "724880",
    "end": "731899"
  },
  {
    "text": "And we were programming in Pascal, right? A very early language that way. And I was sitting there and doing my assignment\nand everything was going fine, but I looked",
    "start": "731899",
    "end": "739810"
  },
  {
    "text": "at the person next to me, and on her terminal,\nI saw an erase subscript out of bounds exception or something like that.",
    "start": "739810",
    "end": "746540"
  },
  {
    "text": "And I thought, oh my God, I've never seen\nthat before, right? And I'd, like, gone through almost all of\nthis introductory course and stuff like that,",
    "start": "746540",
    "end": "754770"
  },
  {
    "text": "and then I thought about why I hadn't seen\nthat before. And the thing is because I taught myself programming\nin C from the beginning and then I went to",
    "start": "754770",
    "end": "762500"
  },
  {
    "text": "college and started learning Pascal, which\nhad a stronger type system. And I just realized that essentially in C,\nif you mess up, you're in real serious trouble",
    "start": "762500",
    "end": "771560"
  },
  {
    "text": "because it's hard to know when you messed\nup and then basically just get these random crazy errors because you're over memory and\nstuff like that.",
    "start": "771560",
    "end": "780060"
  },
  {
    "text": "So I think there's this interesting thing\nabout starting with unforgiving tools to go and sort of build your discipline in a way,\nright?",
    "start": "780060",
    "end": "786970"
  },
  {
    "text": "Now, it's a terrible thing to advocate because\nit's almost like the thing of going in and saying, \"Go out there and march in the woods\nbarefoot for 12 hours and you'll be a better",
    "start": "786970",
    "end": "795480"
  },
  {
    "text": "person,\" right? But I think there is a piece to that as well\nthat the things which cause us to go and sort",
    "start": "795480",
    "end": "800940"
  },
  {
    "text": "of develop discipline sometimes are very useful\nfor us, at least very early in our careers.",
    "start": "800940",
    "end": "806060"
  },
  {
    "text": "So, just a thought. I agree. And, from my perspective, I started coding\nin just straight Notepad, no Notepad++, no",
    "start": "806060",
    "end": "813981"
  },
  {
    "text": "fancy thing. So, I put my parenthesis, the close one, when\nI put the open one manually every time.",
    "start": "813981",
    "end": "819620"
  },
  {
    "text": "I've never had a mismatched parenthesis, right? Because that wouldn't have worked back then. I couldn't have sat there counting them.",
    "start": "819620",
    "end": "826630"
  },
  {
    "text": "It's fair. But it's a thing. I think those are things that you need to\ngo and sort of, like, I think, develop the",
    "start": "826630",
    "end": "833580"
  },
  {
    "text": "discipline at some point in your career, then\nyou can rely on the other things. And it's like once you get that mindset of\ncomplete attention and discipline, it's cool",
    "start": "833580",
    "end": "842329"
  },
  {
    "text": "because you're able to go and dip into it\nagain and dip into it on a case-by-case basis",
    "start": "842329",
    "end": "848769"
  },
  {
    "text": "when you need it. So it's just another tool that you can have,\nI think. That's just my sense of it.",
    "start": "848770",
    "end": "855440"
  },
  {
    "start": "855000",
    "end": "1147000"
  },
  {
    "text": "Just a side note, a side question, I've noticed\nthe same thing with debuggers.",
    "start": "855440",
    "end": "860610"
  },
  {
    "text": "I don't use them because back when I started\ncoding, I didn't have one. And so, I do printf debugging always.",
    "start": "860610",
    "end": "866600"
  },
  {
    "text": "That's the only thing I do, and it always\nworks pretty much. Like, do you have that same experience?",
    "start": "866600",
    "end": "872380"
  },
  {
    "text": "Do you use debuggers? I did use debuggers before hearing about TDD\nand learning it, then I got out of the habit",
    "start": "872380",
    "end": "878959"
  },
  {
    "text": "of it. Occasionally, I would fall into printf, but,\nfor the most part, it is this thing of going",
    "start": "878960",
    "end": "884160"
  },
  {
    "text": "in and doing it with tests, for the most part. The thing I always ask myself as kind of like\na design thing is, how easy is it for me to",
    "start": "884160",
    "end": "893790"
  },
  {
    "text": "go and figure out the thing I wanna understand? And if it isn't very easy, well there's something\nkind of messed up about the design.",
    "start": "893790",
    "end": "899910"
  },
  {
    "text": "I need to do something to go and at least\nget things at the grain where I have a good",
    "start": "899910",
    "end": "904970"
  },
  {
    "text": "testing affordance to go and get the answers\nI need. So, things like that.  But then, I would expect that the code base\nis at least as complex as the domain you're",
    "start": "904970",
    "end": "913949"
  },
  {
    "text": "modeling. That's my general sort of rule of thumb. So then, some things will be hard questions,\nright?",
    "start": "913949",
    "end": "922519"
  },
  {
    "text": "I think they will be hard questions.",
    "start": "922519",
    "end": "930870"
  },
  {
    "text": "I think it's not like we have layers, like,\ntraditional layers in software development as much anymore or that we advocate having\nthem, but it seems to me that there are different,",
    "start": "930870",
    "end": "942310"
  },
  {
    "text": "like, query layers within an application,\nright? So if you have a good domain model, in a sense,\nthen you can think in terms of the domain",
    "start": "942310",
    "end": "952319"
  },
  {
    "text": "and ask questions in terms of the domain. You might be dealing with an area of four\nor five classes, for instance, but you know",
    "start": "952319",
    "end": "958410"
  },
  {
    "text": "that you can ask the question at the appropriate\nlevel for what you need. Maybe you need to go and jump out to an end-to-end\nthing to go and ask something which encompasses",
    "start": "958410",
    "end": "965579"
  },
  {
    "text": "more of the domain and more of what's going\non, but you get this ability to query at different",
    "start": "965579",
    "end": "973360"
  },
  {
    "text": "levels. And the design of the system should support\nthat, right? I mean, at its base level, if we have something\nwhich is basically like doing accounting,",
    "start": "973360",
    "end": "981310"
  },
  {
    "text": "we're gonna have like fundamental computations. They'll probably be held in maybe two or three\nmethods that we should be able to understand",
    "start": "981310",
    "end": "987709"
  },
  {
    "text": "well enough to go and query those in the test,\neven if we're not asking the big questions about how all the accounts interact and stuff\nlike that.",
    "start": "987709",
    "end": "994560"
  },
  {
    "text": "So it's this thing of like developing almost\nlanguage at all these different levels. And it's not like they're specific layers,\nit's just the language is present all through",
    "start": "994560",
    "end": "1004079"
  },
  {
    "text": "the system. I think that's the thing I would say.",
    "start": "1004079",
    "end": "1010220"
  },
  {
    "text": "I think I get that. But it feels like some things are just inherently\nvery difficult to sort of tie lower out of",
    "start": "1010220",
    "end": "1019990"
  },
  {
    "text": "the system. Some information is sort of embedded deep\nwithin it, and it's depending on all these",
    "start": "1019990",
    "end": "1025280"
  },
  {
    "text": "sorts of other things. And, at some point, the complexity is there\nand you have to deal with it.",
    "start": "1025280",
    "end": "1035709"
  },
  {
    "text": "I just keep going back to that thing of, like,\nthat's a lesson for us. It's when the complexity is there and it's\nnot easily approachable through an API of",
    "start": "1035709",
    "end": "1043929"
  },
  {
    "text": "some sort, then I'm okay, what's wrong here,\nright?",
    "start": "1043930",
    "end": "1048990"
  },
  {
    "text": "Even if I can't fix it right away, I just\nbasically sort of always take that as a queue for design. One of my favorite talks I ever gave was,\nlike, in 2007 or 2009, I guess it was.",
    "start": "1048990",
    "end": "1058150"
  },
  {
    "text": "It was called \"The Deep Synergy of Testability\nand Good Design.\" And I think about writing more about this\nand this sort of thing, but it comes down",
    "start": "1058150",
    "end": "1066090"
  },
  {
    "text": "to that thing that almost everything we can\nimagine is painful about testing is an indication of some kind of a design problem.",
    "start": "1066090",
    "end": "1071380"
  },
  {
    "text": "If you address the design problem, then you\nget a better design but also better testing affordances.",
    "start": "1071380",
    "end": "1079530"
  },
  {
    "text": "To me, that's a beautiful thing because it\nhelps us get better at what we do.",
    "start": "1079530",
    "end": "1087900"
  },
  {
    "text": "You're able to listen to the system and learn\nmore about things through your experience of it, you know?",
    "start": "1087900",
    "end": "1094690"
  },
  {
    "text": "I would have the same view of it just with\ntesting instead of...oh, sorry, with typing",
    "start": "1094690",
    "end": "1101299"
  },
  {
    "text": "instead of testing. If I can't type this correctly, if I need\nreflection, if I need CAST, stuff like that,",
    "start": "1101299",
    "end": "1106669"
  },
  {
    "text": "I haven't designed it correctly. Totally. I do like to just kind of sidestep the whole\nthing off, like, is dynamic better or static",
    "start": "1106669",
    "end": "1112580"
  },
  {
    "text": "better? I like 'em both for different reasons. And I think that it just comes down to context,\nwhat you're working on, and what you need.",
    "start": "1112580",
    "end": "1121690"
  },
  {
    "text": "That whole area is just kind of, like, it's\ncool, I'm not gonna come down on one side",
    "start": "1121690",
    "end": "1126990"
  },
  {
    "text": "or another on that. It's just what you need. You'll also have an easier time on the internet\nif you don't sort of piss off either camp,",
    "start": "1126990",
    "end": "1136000"
  },
  {
    "text": "so to speak. Fair enough. Well, it'd be fun to piss off both sides. Yes.",
    "start": "1136000",
    "end": "1141800"
  },
  {
    "text": "Sure, sure.  It's fun. How you get your fun, it's not recommended. I've been through a lot of organizations,\nand now that we're talking about testing,",
    "start": "1141800",
    "end": "1150740"
  },
  {
    "start": "1147000",
    "end": "1686000"
  },
  {
    "text": "I see a lot of them are struggling with testing. Like, it isn't as prevalent in the industry\nas I would sort of want it to be.",
    "start": "1150740",
    "end": "1158330"
  },
  {
    "text": "So if a person is in one of those organizations,\nlike, how do they get started?",
    "start": "1158330",
    "end": "1163399"
  },
  {
    "text": "How do we move out of this rut or whatever\nwe call it? Well, I kind of like the silent approach a\nlittle bit with this too.",
    "start": "1163400",
    "end": "1170030"
  },
  {
    "text": "But I think it's just because having a background\nas a consultant, it's like if you go in and you say to people, it's like, \"Hey, you gotta\ndo things this way,\" it's like they're gonna",
    "start": "1170030",
    "end": "1177250"
  },
  {
    "text": "rebel, or they're gonna be kind of like, \"Who\nis this person who's telling me these things,\" and, \"Sure.",
    "start": "1177250",
    "end": "1182340"
  },
  {
    "text": "I feel like what I was doing was good before,\nso prove it to me,\" that kind of thing, right? But I think an interesting thing is, like,\nas an employee of an organization, you just",
    "start": "1182340",
    "end": "1192590"
  },
  {
    "text": "have to do your work and you have to do it\nvery well. And the thing is, if you discover that these\nthings help you, and chances are they will",
    "start": "1192590",
    "end": "1199820"
  },
  {
    "text": "because that's what they do, these techniques,\nthen it isn't very long before people start",
    "start": "1199820",
    "end": "1205570"
  },
  {
    "text": "to recognize, wow, this person's having less\ntrouble doing things, what's going on?",
    "start": "1205570",
    "end": "1211029"
  },
  {
    "text": "The people that are interested in getting\nbetter will gravitate and learn, right? And it's very much like sometimes leading\nis not a very overt act.",
    "start": "1211030",
    "end": "1221669"
  },
  {
    "text": "It's just by going and sort of doing something\ndifferent and getting people curious enough to go and try things out.",
    "start": "1221669",
    "end": "1227500"
  },
  {
    "text": "The thing that I find problematic quite often\nis the people that are like, \"I find a better",
    "start": "1227500",
    "end": "1233270"
  },
  {
    "text": "way of doing things in the organization,\"\nthey try to go and lead and say, \"We have to do it this way, we have to do it this way.\" They just create enemies, right?",
    "start": "1233270",
    "end": "1240030"
  },
  {
    "text": "You have to keep your passion intact a little\nbit and just sort of, like, if you enjoy what",
    "start": "1240030",
    "end": "1247220"
  },
  {
    "text": "you're doing and you're making things better,\nquite often, it's gonna have some kind of galvanizing effect inside the organization.",
    "start": "1247220",
    "end": "1254360"
  },
  {
    "text": "For a consultant, things are a little bit\ndifferent because quite often, you're on the hook to go and change things, and then you\nhave to go and basically sort of, like, sway",
    "start": "1254360",
    "end": "1261380"
  },
  {
    "text": "people to some degree. I think a little thing that I used to do with\nthis is trying to find the people who are",
    "start": "1261380",
    "end": "1270090"
  },
  {
    "text": "really curious about things and also the people\nthat other people would listen to and convince",
    "start": "1270090",
    "end": "1275860"
  },
  {
    "text": "them, then it becomes kind of viral, in a\nsense. And it's great when you find a person who's\nin both of those camps.",
    "start": "1275860",
    "end": "1282059"
  },
  {
    "text": "You know, it kind of helps to some degree. But I think the other thing to recognize too\nis you're not gonna get 100% in many organizations,",
    "start": "1282059",
    "end": "1288590"
  },
  {
    "text": "right? That's just the way things are. People are different. They have different views about how they're\ngonna go and handle things, and that's just",
    "start": "1288590",
    "end": "1296169"
  },
  {
    "text": "life, you know? So, I'm assuming, as a chief architect, you\nhave teams working sort of under you or?",
    "start": "1296170",
    "end": "1303200"
  },
  {
    "text": "No, I think the chief architect is kind of\nlike a bit of a moniker in a way. I think I kind of chose that title within\nthe organization in Globant just because I",
    "start": "1303200",
    "end": "1312980"
  },
  {
    "text": "wanted to highlight to my friends outside\nof the industry...or, excuse me, outside the organization that architecture is important.",
    "start": "1312980",
    "end": "1320100"
  },
  {
    "text": "I think after many, many years of Agile, there's\nbeen a thing of like architecture just kind of emerges.",
    "start": "1320100",
    "end": "1325390"
  },
  {
    "text": "And I think that the kind of thinking that\nwe do about the macro level of systems is extremely important and that kind of thing.",
    "start": "1325390",
    "end": "1331669"
  },
  {
    "text": "So I do work with different teams across the\norganization and things like this, various client accounts, and stuff like that.",
    "start": "1331669",
    "end": "1338830"
  },
  {
    "text": "But it's not a direct architect role in that\nway. I think it was more of a signaling thing on\nmy part in a way.",
    "start": "1338830",
    "end": "1346660"
  },
  {
    "text": "No, I understand. So, your teams or the teams you work with,\nhow do they work?",
    "start": "1346660",
    "end": "1353169"
  },
  {
    "text": "Like, do they use TDD and stuff like that? Yes, some do, some don't. The thing is, it comes down to the type of\nengagement that people are being called in",
    "start": "1353169",
    "end": "1363850"
  },
  {
    "text": "for. It's funny because there are many different\nscenarios for going in like intervening in an organization and producing value.",
    "start": "1363850",
    "end": "1370610"
  },
  {
    "text": "So quite often, it's definitely on the pallet\nof things that we do.",
    "start": "1370610",
    "end": "1375700"
  },
  {
    "text": "All right. Well, and it's super interesting what you're\nsaying before that if you're in an organization",
    "start": "1375700",
    "end": "1382220"
  },
  {
    "text": "as a developer and you start using some tool\nthat helps you, right, and you're gonna keep",
    "start": "1382220",
    "end": "1387408"
  },
  {
    "text": "using it, and somebody else is gonna see it. I've met people in the industry who had the\nopposite experience with testing where I would",
    "start": "1387409",
    "end": "1395330"
  },
  {
    "text": "come in because they were on their way away\nfrom testing. I was like, \"What? Why are you going...like, why are you doing\nthat?\"",
    "start": "1395330",
    "end": "1402169"
  },
  {
    "text": "It's because tests can sometimes hinder sort\nof this refactoring thing, particularly if",
    "start": "1402169",
    "end": "1407908"
  },
  {
    "text": "they're very structurally dependent. I think the interesting thing to me is, sometimes,\nI think I feel much more comfortable than",
    "start": "1407909",
    "end": "1420210"
  },
  {
    "text": "many people putting some of the tests in the\nparking lot for a minute and saying, \"Okay,",
    "start": "1420210",
    "end": "1425360"
  },
  {
    "text": "I'm gonna go and change the system.\" I'm going to go ahead and do a structural\nrefactoring, but I know the tests aren't gonna",
    "start": "1425360",
    "end": "1433310"
  },
  {
    "text": "cover it completely. If I can develop confidence in another way\nto do that refactoring, then I'll run the",
    "start": "1433310",
    "end": "1439601"
  },
  {
    "text": "tests and find out, well, they aren't working\nagainst the methods they need to work against. And I'll rewrite tests that will cover the\nnew structure that I have.",
    "start": "1439601",
    "end": "1450260"
  },
  {
    "text": "I think that we can overly valorize the tests\nsometimes and think, \"Oh my God, we can't",
    "start": "1450260",
    "end": "1457770"
  },
  {
    "text": "get rid of any tests at all.\" Then you're in a situation where you're just\nso scared that you can't change anything, right?",
    "start": "1457770",
    "end": "1463550"
  },
  {
    "text": "And I guess the other thing you're probably\ngetting at is kind of like the level of testing and how do you develop in a way where you\naren't sort of, like, preventing yourself",
    "start": "1463550",
    "end": "1470080"
  },
  {
    "text": "from refactoring, right? That's an interesting question for these things.",
    "start": "1470080",
    "end": "1475520"
  },
  {
    "text": "And I've found that a lot of... So a lot of the struggles that I meet with,\nparticularly testing, would be people who",
    "start": "1475520",
    "end": "1484260"
  },
  {
    "text": "aren't experienced with it when they come\nout of school, and then they don't have time to learn it.",
    "start": "1484260",
    "end": "1489830"
  },
  {
    "text": "And it's not an easy skill, especially because\nwhen you talk about testing, most people focus on the red-green-refactor or, like, sort of\nthe processes around it.",
    "start": "1489830",
    "end": "1499398"
  },
  {
    "text": "Whereas I find that the most painful thing\nis learning about how to stub things correctly.",
    "start": "1499399",
    "end": "1504799"
  },
  {
    "text": "Because if you learn how to do test stubs,\nthen everything just becomes so much easier.",
    "start": "1504799",
    "end": "1510480"
  },
  {
    "text": "I think there's that. I think the other thing that's wild for me\nto go and kind of notice is I think that in",
    "start": "1510480",
    "end": "1516460"
  },
  {
    "text": "the way that TDD kind of spread across the\nindustry, it's like some people just basically took it to be, like, okay, you write one unit\ntest harness for each class of your system",
    "start": "1516460",
    "end": "1526500"
  },
  {
    "text": "and you're good. Right? but then like BDD came along and it's kind\nof like then you're covering a bigger area.",
    "start": "1526500",
    "end": "1532570"
  },
  {
    "text": "Particularly when you look at what Kent has\ndone with this and other people, like, I like Ian Cooper's take on this as well.",
    "start": "1532570",
    "end": "1539840"
  },
  {
    "text": "You start out growing tests from a particular\npoint, and then you're refactoring outward. You're decomposing things as they get bigger.",
    "start": "1539840",
    "end": "1546779"
  },
  {
    "text": "So your tests are over here, but they cover\na larger space. I think that's the key message that needs\nto get across to people rather than this one-to-one",
    "start": "1546779",
    "end": "1555440"
  },
  {
    "text": "mapping of test classes to production classes. I think that's a way where people kind of\ngets themselves...they kind of paint themselves",
    "start": "1555440",
    "end": "1562600"
  },
  {
    "text": "into a corner to some degree. Especially when you start testing with, like,\nprivate methods and stuff like that.",
    "start": "1562600",
    "end": "1569950"
  },
  {
    "text": "If you don't stay to the public interface,\nthen, like, you are just in for a headache when you want to restructure that code.",
    "start": "1569950",
    "end": "1577020"
  },
  {
    "text": "What's wild about this too is that essentially\nit's like, I think Martin Fowler talked about this years ago. It's like we don't have a good thing now to\ngo and mark things as published rather than",
    "start": "1577020",
    "end": "1586760"
  },
  {
    "text": "public, right? So public is a code-level thing at the class\nlevel. A method can be public or not, but you need\nsomething which is kind of, like, this is",
    "start": "1586760",
    "end": "1595440"
  },
  {
    "text": "an interface that we see from the outside\nworld but not necessarily within this particular area and unit.",
    "start": "1595440",
    "end": "1600880"
  },
  {
    "text": "Of course, it goes and kind of, like, differs\nacross programming languages. But, you know, that kind of separation is\nsomething that's not built into languages.",
    "start": "1600880",
    "end": "1608970"
  },
  {
    "text": "So, it's not overt and we have to go and make\nour sense of these right here are the public",
    "start": "1608970",
    "end": "1614289"
  },
  {
    "text": "methods that we are holding in variance on\nas opposed to these other ones, right?",
    "start": "1614290",
    "end": "1620770"
  },
  {
    "text": "So, pretty tough. I remember having trouble also when I wanted\nto write testing code that tested, like, not",
    "start": "1620770",
    "end": "1629049"
  },
  {
    "text": "quite public to the, like, API, but public\nmethods. And then the testing classes would've to be\nin the same package because otherwise, they",
    "start": "1629049",
    "end": "1638230"
  },
  {
    "text": "weren't visible. But I didn't wanna compile them in the same\nunit, right, because I didn't want to ship my test code. So it was just a whole...",
    "start": "1638230",
    "end": "1644679"
  },
  {
    "text": "Trying to design around that took, like, days\nto figure out the beautiful, sort of... I tend to try to convince people to go and\nship their test code in with that just because,",
    "start": "1644679",
    "end": "1653179"
  },
  {
    "text": "well, particularly, I guess, for me, I get\ncalled in to look at these really horrible situations.",
    "start": "1653179",
    "end": "1660200"
  },
  {
    "text": "You don't have many other options in terms\nof actually sort of easing the entry into going in and starting to get control of the\ncode base short of actually going in and shipping",
    "start": "1660200",
    "end": "1668919"
  },
  {
    "text": "them in parallel that way. There are some valid reasons not to do that,\nbut I think it's still something where if",
    "start": "1668919",
    "end": "1677370"
  },
  {
    "text": "you can have that discussion and move to doing\nthat, sometimes that kind of eases the transition into going and building an easier way of working\nwith a legacy code base.",
    "start": "1677370",
    "end": "1686110"
  },
  {
    "start": "1686000",
    "end": "2032000"
  },
  {
    "text": "It certainly changes sort of the whole view\non I want to ship the thing that I've tested,",
    "start": "1686110",
    "end": "1692360"
  },
  {
    "text": "but I don't want the tests in the thing that\nI'm gonna ship. So it's sort of like the constant struggle.",
    "start": "1692360",
    "end": "1697929"
  },
  {
    "text": "Sometimes, that's kind of like a sense of...it's\nlike an aesthetic thing. It's kind of like, oh, well these things are\ndifferent. They shouldn't be in the same place.",
    "start": "1697929",
    "end": "1704590"
  },
  {
    "text": "Right? I don’t know if I mentioned this in the\nbook, but I do mention it in training quite often.",
    "start": "1704590",
    "end": "1709880"
  },
  {
    "text": "I think it was Voltaire who had the saying,\nlike, when you translate French to English,",
    "start": "1709880",
    "end": "1714909"
  },
  {
    "text": "best is the enemy of good, in a way, right? So you're sitting there and you're working\nwith somebody and it's kind of like they're",
    "start": "1714909",
    "end": "1721080"
  },
  {
    "text": "saying, \"Wow, you're breaking dependencies\nusing this technique and it makes the code look ugly.\" And you have to kind of like, \"Have you looked\nat the code,\" right?",
    "start": "1721080",
    "end": "1728179"
  },
  {
    "text": "I mean, it is kind of ugly, right? That kind of thing. Some of the things that you do to go start\nto break dependencies and get tests in place",
    "start": "1728179",
    "end": "1736230"
  },
  {
    "text": "are going to violate some preconceptions you\nmight have about good design, but they are",
    "start": "1736230",
    "end": "1743919"
  },
  {
    "text": "there to facilitate doing the refactoring\nto make the design better. So, it's cracking the eggs to make the omelet\na little bit.",
    "start": "1743919",
    "end": "1751320"
  },
  {
    "text": "I mean, when you say that, we have to talk\nabout encapsulation. Yes. You also mentioned in the book that you don't\nmind breaking encapsulation if it makes testing",
    "start": "1751320",
    "end": "1761460"
  },
  {
    "text": "easier. Well, the thing is that when you say it that\nway, and I'm not sure exactly how I said it,",
    "start": "1761460",
    "end": "1767200"
  },
  {
    "text": "but that simplification is good, but it's\nlike...it's not saying, \"Hey, I'm a fan of breaking encapsulation, but selectively in\nparticular places to go and give you the affordance",
    "start": "1767200",
    "end": "1776330"
  },
  {
    "text": "to go and test things,\" right? And you do it reluctantly, but you're doing\nit in such a way that when you're encapsulating,",
    "start": "1776330",
    "end": "1784590"
  },
  {
    "text": "you should be thinking about what it is you\nwant to encapsulate, right? So to go and break encapsulation at the edge\nof a new sphere that you want to go and hold",
    "start": "1784590",
    "end": "1792360"
  },
  {
    "text": "as your place of encapsulation is okay because\nyou're creating a new boundary around something",
    "start": "1792360",
    "end": "1798519"
  },
  {
    "text": "of value. So it's a matter of finding the things of\nvalue that are there and saying, \"Where do",
    "start": "1798519",
    "end": "1803909"
  },
  {
    "text": "I want to basically sort of like, be outside\nof that to test?\" And you might have to break at those edges\nto go and start to form this thing, form this",
    "start": "1803909",
    "end": "1814768"
  },
  {
    "text": "layer around the value that you're trying\nto go and sort of preserve through tests.",
    "start": "1814769",
    "end": "1822570"
  },
  {
    "text": "I tend to think rather visually, so of course,\nI'm using my hands doing this kind of thing. But when you think about it, a lot of systems,\nit's like they're broken down in these pieces",
    "start": "1822570",
    "end": "1830200"
  },
  {
    "text": "in particular ways, in particular shapes. It's like sometimes you're looking at 'em\nand you're like, well, these three things",
    "start": "1830200",
    "end": "1836200"
  },
  {
    "text": "can be part of a bigger thing. So it's up to me to go and build that bigger\nthing around those things, right? And other times, you have a thing which has\nseveral responsibilities, and when you break",
    "start": "1836200",
    "end": "1843768"
  },
  {
    "text": "it apart and then you have a different task,\nwhich is gonna be, how do I go and support",
    "start": "1843769",
    "end": "1848820"
  },
  {
    "text": "this from the outside of the test to be able\nto break it apart, right?  If I'm working with something that's, like,\nlegacy code, I would sort of attempt to limit",
    "start": "1848820",
    "end": "1857880"
  },
  {
    "text": "the tendency of local changes to have global\neffects, right? That's sort of what I'm scared of.",
    "start": "1857880",
    "end": "1863909"
  },
  {
    "text": "That's the issue with legacy code is that\nthe effects propagate in a non-local way.",
    "start": "1863909",
    "end": "1870090"
  },
  {
    "text": "Yes. And humans can't seem to get that into their\nheads. We are used to local, local.",
    "start": "1870090",
    "end": "1876679"
  },
  {
    "text": "So, often, I would try to encapsulate things\nharder because that helps to sort of limit",
    "start": "1876679",
    "end": "1884059"
  },
  {
    "text": "all of these effects, right? They can't escape if you encapsulate them\nin a very hardcore way, so to speak.",
    "start": "1884059",
    "end": "1892759"
  },
  {
    "text": "And I noticed that you mentioned also the\nthree ways that effects can propagate.",
    "start": "1892760",
    "end": "1898860"
  },
  {
    "text": "And it's like exposing data, obviously, constructors\nand passing arguments or mutating it directly.",
    "start": "1898860",
    "end": "1906210"
  },
  {
    "text": "Yes. So then, my approach would be or my intuition\nwould be to sort of limit the effect of the",
    "start": "1906210",
    "end": "1913809"
  },
  {
    "text": "things. But then, you're saying that you would have\nthe test to sort of alert you, at least, if",
    "start": "1913810",
    "end": "1918921"
  },
  {
    "text": "something changes non-locally, right? That's what the test should be there to do.",
    "start": "1918921",
    "end": "1924010"
  },
  {
    "text": "Well, I always look at the test as basically,\na way of understanding the thing, right?",
    "start": "1924010",
    "end": "1929620"
  },
  {
    "text": "If the thing changes in a way that you didn't\nanticipate, then basically, the test is going",
    "start": "1929620",
    "end": "1935559"
  },
  {
    "text": "to go and break. So for me, it's the work leading up to writing\nthe test is about going and building the isolation",
    "start": "1935559",
    "end": "1942950"
  },
  {
    "text": "so that the effects don't propagate necessarily,\nright? Or at least you have a barrier to go and make\nsure that they're on propagate, right?",
    "start": "1942950",
    "end": "1949610"
  },
  {
    "text": "If you are accessing a singleton inside of\na class, it's like, yeah, I wanna find a way to go and inject that value through the constructor\nrather than basically go and mutate the singleton",
    "start": "1949610",
    "end": "1959919"
  },
  {
    "text": "directly within the class, right? You slowly go and start to build these firewalls\nagainst effects propagating when you're doing",
    "start": "1959919",
    "end": "1967909"
  },
  {
    "text": "this. But a lot of these tend to be bigger issues\nin the architecture.",
    "start": "1967909",
    "end": "1973029"
  },
  {
    "text": "So it's kind of like it takes a while to go\nand start to root those things out, and you have to go and sort of assess the value of\ndoing that when you have the test there to",
    "start": "1973029",
    "end": "1979648"
  },
  {
    "text": "go and tell you about whether these side effects\noccur in a bad way. I think it's a very problematic thing because\none of the things in legacy code that's tough",
    "start": "1979649",
    "end": "1988640"
  },
  {
    "text": "is that code grows in a particular way. And it's like if you have like lots of global\nassets all across the system, you're not gonna",
    "start": "1988640",
    "end": "1996510"
  },
  {
    "text": "be able to fix that in your lifetime necessarily,\nright? But you should be able to go and at least\nbuild in the sensing through tests to go and",
    "start": "1996510",
    "end": "2003770"
  },
  {
    "text": "understand where the trip wires are. If something goes wrong, you wanna know about\nit immediately, right?",
    "start": "2003770",
    "end": "2010440"
  },
  {
    "text": "So the code is less understandable by reading\nit, but then, the tests can go and give you",
    "start": "2010440",
    "end": "2016259"
  },
  {
    "text": "the feedback that you can't get by reading\nit because things have gotten gummed up in a particularly bad way.",
    "start": "2016260",
    "end": "2021600"
  },
  {
    "text": "So, there is this question of legacy code\nbases about how far is reasonable to go in",
    "start": "2021600",
    "end": "2028690"
  },
  {
    "text": "terms of your plans for how good it's gonna\ngo and get.",
    "start": "2028690",
    "end": "2033720"
  },
  {
    "start": "2032000",
    "end": "2498000"
  },
  {
    "text": "What is reasonable? How much time should you invest in fixing\nlegacy code or avoiding it?",
    "start": "2033720",
    "end": "2039640"
  },
  {
    "text": "Well, here's the thing that I think is a very,\nvery critical thing. You know about, like, the 80/20 rule, right?",
    "start": "2039640",
    "end": "2045460"
  },
  {
    "text": "It's like 80% of the work happens in the last\n20% of the project and all these different",
    "start": "2045460",
    "end": "2050470"
  },
  {
    "text": "things. It's part of something called the Pareto Principle,\nright? And there are a lot of natural systems that\nare this way where essentially, like 20% of",
    "start": "2050470",
    "end": "2058408"
  },
  {
    "text": "the code has a higher value than the other\n80%, for instance, stuff like that. If you do a distribution of method sizes in\na project, you'll find that a lot of the methods",
    "start": "2058409",
    "end": "2068279"
  },
  {
    "text": "tend to be small, but then you have maybe\n20% that tend to be outsized in size and stuff,",
    "start": "2068280",
    "end": "2073839"
  },
  {
    "text": "right? So it's a mathematical thing that happens\nas a side effect of incremental growth in systems, or incremental value seeking.",
    "start": "2073839",
    "end": "2081820"
  },
  {
    "text": "The thing I'm always looking at with a system\nis like, okay, well what are the high-value areas, right?",
    "start": "2081820",
    "end": "2087010"
  },
  {
    "text": "And my notion of value is a little bit generalized. It's not just what the business thinks is\nimportant, but it's also, like, what are you",
    "start": "2087010",
    "end": "2094389"
  },
  {
    "text": "changing frequently right now, for instance? What are the things that... What are the more bug-prone areas?",
    "start": "2094390",
    "end": "2101470"
  },
  {
    "text": "So it's not valued as much as kind of like\nthe highly active areas of the system, the areas where basically, you have some criticality,\nright?",
    "start": "2101470",
    "end": "2110410"
  },
  {
    "text": "You look at those and you're kind of like,\nokay, what can I do to go and bring these points into stability? And the interesting thing is that the 80/20\nrule applies to commits also, right?",
    "start": "2110410",
    "end": "2119400"
  },
  {
    "text": "There are many, many files in your system\nthat you'll probably never change again, right, and there are others where basically, you\nhave clusters of changes.",
    "start": "2119400",
    "end": "2127740"
  },
  {
    "text": "And that's gonna change over time in the system,\nbut if you're aware of those dynamics, then you know where to concentrate your effort.",
    "start": "2127740",
    "end": "2134060"
  },
  {
    "text": "I think that the thing that's kind of important\nwith this is that you can look at a particular",
    "start": "2134060",
    "end": "2139421"
  },
  {
    "text": "area and recognize it's a very stable area\nof code. It's kind of messed up in the way it's structured\nand stuff like that, but you're not gonna",
    "start": "2139421",
    "end": "2145640"
  },
  {
    "text": "get a return benefit for investing in that\nbeyond a certain point. It's like you wanna stabilize it, understand\nwhat's possible within that particular area",
    "start": "2145640",
    "end": "2155349"
  },
  {
    "text": "of code, but you don't wanna kinda like bolster\nit up in a way that makes it a place which",
    "start": "2155349",
    "end": "2161690"
  },
  {
    "text": "is extremely easy to go and work in because\nyou're not gonna get the value back from this. So I think having a very comprehensive conversation\nin the team and within the organization about",
    "start": "2161690",
    "end": "2173319"
  },
  {
    "text": "where these hotspots are and where these value\ncenters are within the system, and understanding",
    "start": "2173319",
    "end": "2178360"
  },
  {
    "text": "what you're gonna concentrate on is very important. A lot of this is outlined by Eric Evans, like\nin domain-driven design.",
    "start": "2178360",
    "end": "2183950"
  },
  {
    "text": "You have like the notion of down to context\nand these different things. He mentions with like anti-corruption layer\nand all these different patterns that you're",
    "start": "2183950",
    "end": "2192691"
  },
  {
    "text": "really... It's really about going in and finding these\nhigh-value areas and sort of like working on that. I think that's the thing.",
    "start": "2192691",
    "end": "2198150"
  },
  {
    "text": "It's not an easy thing necessarily, but I\nthink the thing we need to recognize is that",
    "start": "2198150",
    "end": "2204838"
  },
  {
    "text": "value is not uniformly distributed across\nsystems. It simply isn't, and we should behave differently\nin different areas of the system because of",
    "start": "2204839",
    "end": "2211080"
  },
  {
    "text": "that. I know that hotspot detection is a major part\nof the code quality tool CodeScene.",
    "start": "2211080",
    "end": "2220730"
  },
  {
    "text": "And do you use tools like that? Well, I've used it a bit. I'm actually on the advisory board of CodeScene,\nright?",
    "start": "2220730",
    "end": "2228110"
  },
  {
    "text": "So it's, yeah, I know Adam Thornhill from\nway back when he wrote his first book. Great guy.",
    "start": "2228110",
    "end": "2233599"
  },
  {
    "text": "I like that because I think the interesting\nthing I remember seeing years ago is kind",
    "start": "2233599",
    "end": "2240420"
  },
  {
    "text": "of like there's a lot of information in our\nrepositories that we just don't think about. And he just sort of launched in there and\nstarted going and digging and developing tooling",
    "start": "2240420",
    "end": "2249170"
  },
  {
    "text": "around that sort of thing. So I think that's extremely valuable. I think it's one of those things where you\ncan either work on things without much awareness",
    "start": "2249170",
    "end": "2257270"
  },
  {
    "text": "or you can build awareness. And a lot of this tooling goes and gives you\nthe ability to go and find hotspots.",
    "start": "2257270",
    "end": "2263410"
  },
  {
    "text": "We also do things like planning, like, oh,\nif a person's gonna leave, whether it has",
    "start": "2263410",
    "end": "2269549"
  },
  {
    "text": "an impact on to the code base, and various\nthings like that that are good for the sustainability",
    "start": "2269550",
    "end": "2275610"
  },
  {
    "text": "of systems. It's like SonarQube is good too. There's lots of tooling out there that basically\nsupports this kind of an effort, and that's",
    "start": "2275610",
    "end": "2282030"
  },
  {
    "text": "good. How should an organization sort of tackle,\nlike, this problem? What should they start... Like, how much time should they invest?",
    "start": "2282030",
    "end": "2287260"
  },
  {
    "text": "Like, what policies should they put in place\nto get some of their legacy code down? Yeah, that's an interesting thing.",
    "start": "2287260",
    "end": "2293930"
  },
  {
    "text": "I think it comes down to that kind of value\nanalysis I was talking about a little bit earlier, right, and just sort of figuring\nit out.",
    "start": "2293930",
    "end": "2299370"
  },
  {
    "text": "There are things like application portfolio\nanalysis and all these different things that people tend to do, but you need to figure\nout what's critical.",
    "start": "2299370",
    "end": "2305720"
  },
  {
    "text": "The term I use quite often is rules of engagement. If you figure out where the very critical\nareas of the system are, you might say, well",
    "start": "2305720",
    "end": "2313720"
  },
  {
    "text": "people can't just come and commit against\nthese things. You need pull requests with particular people,\nthen you need to go and review them, and you",
    "start": "2313720",
    "end": "2319780"
  },
  {
    "text": "do this to go and sort of like sort of build\nup stability in these particular areas. In other areas, it might be just, well, anybody\ncan go and sort of commit against this and",
    "start": "2319780",
    "end": "2327349"
  },
  {
    "text": "that's okay because it's low criticality. But getting people to see that value across\nthe organization is the first step, that kind",
    "start": "2327349",
    "end": "2335430"
  },
  {
    "text": "of thing. The secondary thing is figuring out whether\nyou're organized in a way to go and do these things well, right?",
    "start": "2335430",
    "end": "2342089"
  },
  {
    "text": "A lot of times, historical reasons lead us\nto go in having different fault lines in organizations.",
    "start": "2342089",
    "end": "2348410"
  },
  {
    "text": "We're separated into different teams that\nend up producing strange Conway's Law effects that are kind of like there.",
    "start": "2348410",
    "end": "2354270"
  },
  {
    "text": "I am a fan of the Team Topologies' work. I think it's really kind of good. I think if I had any little criticism at all,\nit's kind of like it arrives at a very normative...it",
    "start": "2354270",
    "end": "2366060"
  },
  {
    "text": "arrives at a very, like, this is the way you\nshould organize. And that's good because it does seem to cover\na lot.",
    "start": "2366060",
    "end": "2371490"
  },
  {
    "text": "But I always tend to want people to go and\nthink about what are the forces that lead",
    "start": "2371490",
    "end": "2377359"
  },
  {
    "text": "you into trouble, and how can you actually\nsort of like move them in a way where basically,",
    "start": "2377359",
    "end": "2383640"
  },
  {
    "text": "the problem disappears in some sense. So I think those are kind of like macro-level\nthings. And beyond that, it's like building a culture\nof refactoring.",
    "start": "2383640",
    "end": "2393369"
  },
  {
    "text": "I think to the degree that basically, the\nrefactorings are talked about in retros that",
    "start": "2393369",
    "end": "2398750"
  },
  {
    "text": "people work on refactorings together that\npeople can actually sort of speak up when they think something's bad, right?",
    "start": "2398750",
    "end": "2405280"
  },
  {
    "text": "I think is the important thing. It just really comes down to basically, raising\nawareness within teams.",
    "start": "2405280",
    "end": "2412450"
  },
  {
    "text": "I think also kind of like connecting with\nthe... Having the developers connect their pain with\na solution, right?",
    "start": "2412450",
    "end": "2420920"
  },
  {
    "text": "It's always been troubling to me to find developers\nthat are doing very painful things. They don't think about it as pain, they think\nabout it as normal, right?",
    "start": "2420920",
    "end": "2428700"
  },
  {
    "text": "And then you can show them how they can make\ntheir environment look better and then they're kind of like, \"Oh wow, I have something I\ncan do here,\" which is kind of powerful.",
    "start": "2428700",
    "end": "2436470"
  },
  {
    "text": "I know this is a long answer, but the whole\n80/20 thing is so valuable there, right?",
    "start": "2436470",
    "end": "2441680"
  },
  {
    "text": "Because essentially, it's like if you make\na little area of the system better and you're there because you were called in to fix something\nif that's an area where you get lots and lots",
    "start": "2441680",
    "end": "2451810"
  },
  {
    "text": "of change, you're going to make things a little\nbit better and then the next person's gonna get that benefit.",
    "start": "2451810",
    "end": "2458280"
  },
  {
    "text": "The areas where you do this that are high\ncriticality are gonna get a lot of change,",
    "start": "2458280",
    "end": "2463609"
  },
  {
    "text": "and then the things that you do to make things\nbetter are gonna give you an almost immediate return on these things.",
    "start": "2463609",
    "end": "2468780"
  },
  {
    "text": "Maybe other areas of the system are just never\nhit in the sense that you never have to go and add testing because nobody’s ever changing\nthem.",
    "start": "2468780",
    "end": "2475440"
  },
  {
    "text": "But it's not like you look at a 10,000 file\ncode base and say, \"Oh my God, we're doomed",
    "start": "2475440",
    "end": "2481220"
  },
  {
    "text": "because we'll never get tests for that 10,000\nfile.\" So, there's a certain nugget of the system\nthat basically, your set of nuggets of the",
    "start": "2481220",
    "end": "2488829"
  },
  {
    "text": "system that once you start making a headway,\nthen you start feeling the benefits.",
    "start": "2488830",
    "end": "2494980"
  },
  {
    "text": "And that's a very useful thing to get across. You have this thing in the book, when you\nhave to make a change of some very complex",
    "start": "2494980",
    "end": "2501588"
  },
  {
    "start": "2498000",
    "end": "2702000"
  },
  {
    "text": "part of this system, people will sit down\nand try to understand it because it feels suspiciously like work, I think, you say in\nthe book, which I thought was a very humorous",
    "start": "2501589",
    "end": "2512089"
  },
  {
    "text": "way of saying it. I sort of try to hack into that and give them\nsomething else that is valuable, like breaking",
    "start": "2512089",
    "end": "2518650"
  },
  {
    "text": "up methods. And it's easy also, they can do it without\ntheir brain, right?",
    "start": "2518650",
    "end": "2524299"
  },
  {
    "text": "Whenever your eyes glass over, have people\ndo something sort of meaningful with that",
    "start": "2524300",
    "end": "2529970"
  },
  {
    "text": "time because they can't tackle problems if\nthey're cognitively exhausted, so to speak.",
    "start": "2529970",
    "end": "2535450"
  },
  {
    "text": "Like, have them do something with their hands\ninstead. Totally. Just one little plug for something else.",
    "start": "2535450",
    "end": "2540520"
  },
  {
    "text": "There's a small thing I mentioned in the book\nthat I wish I'd written about more. Every time I talk to people, I sort of offered\nthem as a possibility in a scratch refactoring,",
    "start": "2540520",
    "end": "2548510"
  },
  {
    "text": "which is kind of like, take the code, throw\nit into a file, like just a straight text",
    "start": "2548510",
    "end": "2554200"
  },
  {
    "text": "file as opposed to like your program language\nfile so you don't have all the markup about possible errors and stuff like that.",
    "start": "2554200",
    "end": "2560069"
  },
  {
    "text": "And just start renaming things and moving\nthings around. Don't worry about breaking things because\nyou're never gonna check it in.",
    "start": "2560069",
    "end": "2566130"
  },
  {
    "text": "That is so counter to our intuition as developers\nbecause we're always so cautious about how",
    "start": "2566130",
    "end": "2572250"
  },
  {
    "text": "we change things. But when you know you're not gonna check in\nthings just by going in and being kind of hands-on, you start to go gain much more insight\ninto the thing that you're working on.",
    "start": "2572250",
    "end": "2580400"
  },
  {
    "text": "Even if you can't actually sort of like fix\nthings right away, at least you get a sense of where the danger zones are and stuff like\nthat.",
    "start": "2580400",
    "end": "2589589"
  },
  {
    "text": "I love the scratch refactoring thing also. I noted it in my notes because it's very similar\nto what I would just call all of the refactorings",
    "start": "2589590",
    "end": "2596180"
  },
  {
    "text": "that I do basically. Except I also check it in and I take smaller\nsteps and a little bit of that extra things.",
    "start": "2596180",
    "end": "2602240"
  },
  {
    "text": "But it's very much the thing that if you try\nto understand and if you start with this if you think about it too big, you won't go anywhere\nwith it.",
    "start": "2602240",
    "end": "2610000"
  },
  {
    "text": "It'll just be stuck. Sort of paralyzed by the opportunity. So that's getting past fears, taking the first\nstep.",
    "start": "2610000",
    "end": "2616750"
  },
  {
    "text": "That's the way it goes. And trying something out and like just, yeah,\ndoing it. As you also say, start writing like a single\ntest or something.",
    "start": "2616750",
    "end": "2624109"
  },
  {
    "text": "If you have something like you can start improving\nthe quality fairly quickly, just a little bit.",
    "start": "2624109",
    "end": "2630220"
  },
  {
    "text": "To me writing a test is asking a question\nof the code base. And if you're curious about stuff, then you\nshould be, because you're working on it, writing",
    "start": "2630220",
    "end": "2638450"
  },
  {
    "text": "those tests. I think we don't have too much more time. Is there something you wanna sort of plug\nhere before we end it up?",
    "start": "2638450",
    "end": "2646349"
  },
  {
    "text": "Not necessarily. I think the thing is it seems like the AI\nstuff is gonna change things a lot in the short term and that's maybe we look back at\nus and say, oh, well we thought it was, but",
    "start": "2646349",
    "end": "2655670"
  },
  {
    "text": "it didn't. But I think the bet right now is that it's\ngonna change a bunch of different things. The key thing is that when you're working\nin legacy systems you get a real opportunity",
    "start": "2655670",
    "end": "2665540"
  },
  {
    "text": "to learn more about how design works in a\nway. And so, something is exciting about doing\nthat, you get to learn more about design.",
    "start": "2665540",
    "end": "2675160"
  },
  {
    "text": "I think that a lot of the things that we basically\nknow about design are things that are gonna be still, very important as we move forward\nin the industry.",
    "start": "2675160",
    "end": "2681340"
  },
  {
    "text": "It's hard for me to imagine a situation where\nfor all development we get to the point where",
    "start": "2681340",
    "end": "2688530"
  },
  {
    "text": "we don't have to think about cohesion and\ncoupling and all these different things. We might have to think about them at a different\nlevel, but so much of learning about these",
    "start": "2688530",
    "end": "2696350"
  },
  {
    "text": "things is immersing yourself in it and legacy\ncode is a place to learn. And that's the way I kind of look at it.",
    "start": "2696350",
    "end": "2712250"
  },
  {
    "start": "2702000",
    "end": "2742000"
  },
  {
    "text": "Spot on. I totally agree. Cool. Thank you very much, Michael, for sitting\ndown with me.",
    "start": "2712250",
    "end": "2718319"
  },
  {
    "text": "It's been super fun. Yeah, it has. It's fun.",
    "start": "2718319",
    "end": "2728810"
  },
  {
    "text": "Thanks for your interview.",
    "start": "2728810",
    "end": "2739980"
  }
]