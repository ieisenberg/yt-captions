[
  {
    "start": "0",
    "end": "108000"
  },
  {
    "text": "[Music]",
    "start": "960",
    "end": "8889"
  },
  {
    "text": "software development is hard software is",
    "start": "13920",
    "end": "16640"
  },
  {
    "text": "slippery complex stuff",
    "start": "16640",
    "end": "18960"
  },
  {
    "text": "it's all too easy to get into trouble in",
    "start": "18960",
    "end": "21359"
  },
  {
    "text": "software really fast",
    "start": "21359",
    "end": "23359"
  },
  {
    "text": "good design can provide some insulation",
    "start": "23359",
    "end": "25920"
  },
  {
    "text": "against catastrophe or at least help us",
    "start": "25920",
    "end": "28240"
  },
  {
    "text": "to maintain our code bases as a",
    "start": "28240",
    "end": "30080"
  },
  {
    "text": "habitable space so what are the common",
    "start": "30080",
    "end": "32719"
  },
  {
    "text": "problems in the design of code",
    "start": "32719",
    "end": "34960"
  },
  {
    "text": "what are the mistakes that we see all of",
    "start": "34960",
    "end": "37280"
  },
  {
    "text": "the time",
    "start": "37280",
    "end": "38559"
  },
  {
    "text": "here are a few bad examples and what to",
    "start": "38559",
    "end": "40800"
  },
  {
    "text": "do about them so how does code go wrong",
    "start": "40800",
    "end": "43920"
  },
  {
    "text": "and how do you fix it",
    "start": "43920",
    "end": "47120"
  },
  {
    "text": "[Music]",
    "start": "48430",
    "end": "51520"
  },
  {
    "text": "hi i'm dave farley of continuous",
    "start": "52559",
    "end": "54320"
  },
  {
    "text": "delivery welcome to my channel if you",
    "start": "54320",
    "end": "56960"
  },
  {
    "text": "haven't already please do hit subscribe",
    "start": "56960",
    "end": "59440"
  },
  {
    "text": "and if you enjoy the content hit like as",
    "start": "59440",
    "end": "61520"
  },
  {
    "text": "well",
    "start": "61520",
    "end": "63199"
  },
  {
    "text": "in this episode let's take a look at",
    "start": "63199",
    "end": "65360"
  },
  {
    "text": "some code",
    "start": "65360",
    "end": "66880"
  },
  {
    "text": "some bad code and then let's talk about",
    "start": "66880",
    "end": "69119"
  },
  {
    "text": "how to do better",
    "start": "69119",
    "end": "70880"
  },
  {
    "text": "i want to explore five ways to improve",
    "start": "70880",
    "end": "73600"
  },
  {
    "text": "your code",
    "start": "73600",
    "end": "74799"
  },
  {
    "text": "and so the design of your code",
    "start": "74799",
    "end": "77439"
  },
  {
    "text": "before we begin",
    "start": "77439",
    "end": "78880"
  },
  {
    "text": "the best way that i know to get good",
    "start": "78880",
    "end": "81040"
  },
  {
    "text": "fast feedback on the quality of your",
    "start": "81040",
    "end": "82799"
  },
  {
    "text": "design is to practice test driven",
    "start": "82799",
    "end": "84840"
  },
  {
    "text": "development this video is not about test",
    "start": "84840",
    "end": "88080"
  },
  {
    "text": "driven development but do check out some",
    "start": "88080",
    "end": "90159"
  },
  {
    "text": "of my other videos that are",
    "start": "90159",
    "end": "93439"
  },
  {
    "text": "if we want to improve our code then one",
    "start": "93439",
    "end": "95920"
  },
  {
    "text": "piece of advice that i often hear that i",
    "start": "95920",
    "end": "97920"
  },
  {
    "text": "kind of disagree with is comment your",
    "start": "97920",
    "end": "100799"
  },
  {
    "text": "code",
    "start": "100799",
    "end": "102000"
  },
  {
    "text": "it's not really that i hate comments but",
    "start": "102000",
    "end": "104799"
  },
  {
    "text": "to be honest i rarely see them used very",
    "start": "104799",
    "end": "107119"
  },
  {
    "text": "well",
    "start": "107119",
    "end": "108399"
  },
  {
    "text": "here is a bad example",
    "start": "108399",
    "end": "112079"
  },
  {
    "text": "it's kind of funny it's so bad",
    "start": "112079",
    "end": "115520"
  },
  {
    "text": "um this code has something of an excuse",
    "start": "115520",
    "end": "119119"
  },
  {
    "text": "it's intended to teach assembler",
    "start": "119119",
    "end": "121119"
  },
  {
    "text": "programming to beginners but many years",
    "start": "121119",
    "end": "124000"
  },
  {
    "text": "ago i used to work with somebody who",
    "start": "124000",
    "end": "126320"
  },
  {
    "text": "used to comment their assembler exactly",
    "start": "126320",
    "end": "128479"
  },
  {
    "text": "like this",
    "start": "128479",
    "end": "129840"
  },
  {
    "text": "if you know any assembler at all",
    "start": "129840",
    "end": "132400"
  },
  {
    "text": "and maybe even if you don't it's fairly",
    "start": "132400",
    "end": "134959"
  },
  {
    "text": "obvious that the comment on the right",
    "start": "134959",
    "end": "136720"
  },
  {
    "text": "hand side simply repeats the code on the",
    "start": "136720",
    "end": "139599"
  },
  {
    "text": "left in a more verbose way",
    "start": "139599",
    "end": "142400"
  },
  {
    "text": "it adds nothing at all to describe what",
    "start": "142400",
    "end": "144800"
  },
  {
    "text": "was going through the programmer's mind",
    "start": "144800",
    "end": "146400"
  },
  {
    "text": "as they wrote this code",
    "start": "146400",
    "end": "148480"
  },
  {
    "text": "maybe the programmer's practicing their",
    "start": "148480",
    "end": "150319"
  },
  {
    "text": "typing but i can't see",
    "start": "150319",
    "end": "152560"
  },
  {
    "text": "much other advantage in it than that",
    "start": "152560",
    "end": "155440"
  },
  {
    "text": "okay so this is a bit of a joke but",
    "start": "155440",
    "end": "157440"
  },
  {
    "text": "here's another example and although i've",
    "start": "157440",
    "end": "159840"
  },
  {
    "text": "made this up to protect the guilty i",
    "start": "159840",
    "end": "162560"
  },
  {
    "text": "often see code that looks like this in",
    "start": "162560",
    "end": "164720"
  },
  {
    "text": "real code bases",
    "start": "164720",
    "end": "166720"
  },
  {
    "text": "so here we have a function and it's",
    "start": "166720",
    "end": "168879"
  },
  {
    "text": "called function",
    "start": "168879",
    "end": "170400"
  },
  {
    "text": "and it takes three parameters s v and p",
    "start": "170400",
    "end": "174080"
  },
  {
    "text": "so that's all right then everybody clear",
    "start": "174080",
    "end": "176000"
  },
  {
    "text": "what this function's doing",
    "start": "176000",
    "end": "178239"
  },
  {
    "text": "no",
    "start": "178239",
    "end": "179120"
  },
  {
    "text": "well i suppose we could improve this",
    "start": "179120",
    "end": "181360"
  },
  {
    "text": "code with a few comments how about this",
    "start": "181360",
    "end": "184640"
  },
  {
    "text": "this is probably a little bit better",
    "start": "184640",
    "end": "186480"
  },
  {
    "text": "certainly",
    "start": "186480",
    "end": "188239"
  },
  {
    "text": "now at least we have some chance of",
    "start": "188239",
    "end": "190400"
  },
  {
    "text": "understanding what the code is going is",
    "start": "190400",
    "end": "192560"
  },
  {
    "text": "trying to do and what's going on here",
    "start": "192560",
    "end": "195200"
  },
  {
    "text": "but how often have you seen comments",
    "start": "195200",
    "end": "197360"
  },
  {
    "text": "like this in a code base that bear no",
    "start": "197360",
    "end": "200000"
  },
  {
    "text": "real relationship to what the code",
    "start": "200000",
    "end": "201920"
  },
  {
    "text": "actually does",
    "start": "201920",
    "end": "203760"
  },
  {
    "text": "why not write the code so that it rather",
    "start": "203760",
    "end": "206640"
  },
  {
    "text": "than the comments tells us what it does",
    "start": "206640",
    "end": "209920"
  },
  {
    "text": "this is much more obvious this example",
    "start": "209920",
    "end": "213440"
  },
  {
    "text": "is easier to read than even the",
    "start": "213440",
    "end": "215360"
  },
  {
    "text": "commented version was",
    "start": "215360",
    "end": "217360"
  },
  {
    "text": "and if i decide to change the intent of",
    "start": "217360",
    "end": "219840"
  },
  {
    "text": "this function because the words are",
    "start": "219840",
    "end": "222319"
  },
  {
    "text": "right here in front of me i am much less",
    "start": "222319",
    "end": "224799"
  },
  {
    "text": "likely to leave them behind as i would",
    "start": "224799",
    "end": "227599"
  },
  {
    "text": "with comments",
    "start": "227599",
    "end": "229760"
  },
  {
    "text": "and leave them telling lies",
    "start": "229760",
    "end": "232319"
  },
  {
    "text": "use comments to explain why you made a",
    "start": "232319",
    "end": "235200"
  },
  {
    "text": "choice not what the code does",
    "start": "235200",
    "end": "238560"
  },
  {
    "text": "the code should always clearly explain",
    "start": "238560",
    "end": "241200"
  },
  {
    "text": "what it does and if it doesn't",
    "start": "241200",
    "end": "243599"
  },
  {
    "text": "fix it so that it's clearer",
    "start": "243599",
    "end": "245840"
  },
  {
    "text": "refactor the code to eliminate or at",
    "start": "245840",
    "end": "247840"
  },
  {
    "text": "least minimize the need for comments",
    "start": "247840",
    "end": "251120"
  },
  {
    "text": "write code that expresses ideas not code",
    "start": "251120",
    "end": "254560"
  },
  {
    "text": "that only compiles even if it does work",
    "start": "254560",
    "end": "258320"
  },
  {
    "start": "258000",
    "end": "362000"
  },
  {
    "text": "if you'd like to learn more about my",
    "start": "258320",
    "end": "260239"
  },
  {
    "text": "approach to software development in",
    "start": "260239",
    "end": "261680"
  },
  {
    "text": "general take a look at my training",
    "start": "261680",
    "end": "263680"
  },
  {
    "text": "courses there's a link in the",
    "start": "263680",
    "end": "264960"
  },
  {
    "text": "description below",
    "start": "264960",
    "end": "266800"
  },
  {
    "text": "next in my list of common bear traps in",
    "start": "266800",
    "end": "269600"
  },
  {
    "text": "code are long methods",
    "start": "269600",
    "end": "272720"
  },
  {
    "text": "long methods are hard to read",
    "start": "272720",
    "end": "275520"
  },
  {
    "text": "they're even harder to understand",
    "start": "275520",
    "end": "278320"
  },
  {
    "text": "and they're also much harder to",
    "start": "278320",
    "end": "280000"
  },
  {
    "text": "troubleshoot shoot if something goes",
    "start": "280000",
    "end": "282000"
  },
  {
    "text": "wrong",
    "start": "282000",
    "end": "283120"
  },
  {
    "text": "so they add a lot to the time that you",
    "start": "283120",
    "end": "285199"
  },
  {
    "text": "spend maintaining code",
    "start": "285199",
    "end": "288160"
  },
  {
    "text": "always prefer short methods and",
    "start": "288160",
    "end": "290639"
  },
  {
    "text": "functions to long ones",
    "start": "290639",
    "end": "293840"
  },
  {
    "text": "if somebody tells you that extra",
    "start": "293840",
    "end": "295680"
  },
  {
    "text": "function calls will slow the code down",
    "start": "295680",
    "end": "298479"
  },
  {
    "text": "then they probably don't know what",
    "start": "298479",
    "end": "299919"
  },
  {
    "text": "they're talking about",
    "start": "299919",
    "end": "301440"
  },
  {
    "text": "or they should use a better compiler",
    "start": "301440",
    "end": "304720"
  },
  {
    "text": "refactor long functions into smaller",
    "start": "304720",
    "end": "307280"
  },
  {
    "text": "methods",
    "start": "307280",
    "end": "308960"
  },
  {
    "text": "the code that has been scrolling past on",
    "start": "308960",
    "end": "310800"
  },
  {
    "text": "the screen here is",
    "start": "310800",
    "end": "313000"
  },
  {
    "text": "623 lines long",
    "start": "313000",
    "end": "316280"
  },
  {
    "text": "623 lines in one function",
    "start": "316280",
    "end": "320160"
  },
  {
    "text": "the most common response that i get when",
    "start": "320160",
    "end": "322240"
  },
  {
    "text": "i've shown this code to programmers is",
    "start": "322240",
    "end": "324800"
  },
  {
    "text": "oh we have much longer functions than",
    "start": "324800",
    "end": "327120"
  },
  {
    "text": "that",
    "start": "327120",
    "end": "328800"
  },
  {
    "text": "a perverse kind of win i suppose",
    "start": "328800",
    "end": "332320"
  },
  {
    "text": "by preference i usually add a check to",
    "start": "332320",
    "end": "334960"
  },
  {
    "text": "my continuous integration system that",
    "start": "334960",
    "end": "337039"
  },
  {
    "text": "fails the build if a function is longer",
    "start": "337039",
    "end": "339199"
  },
  {
    "text": "than around about 20 lines of code",
    "start": "339199",
    "end": "342160"
  },
  {
    "text": "then if i get lazy ci reminds me to do a",
    "start": "342160",
    "end": "345360"
  },
  {
    "text": "better job",
    "start": "345360",
    "end": "347039"
  },
  {
    "text": "the answer to long methods is",
    "start": "347039",
    "end": "348720"
  },
  {
    "text": "refactoring",
    "start": "348720",
    "end": "350479"
  },
  {
    "text": "i have a short series of videos",
    "start": "350479",
    "end": "352320"
  },
  {
    "text": "demonstrating some refactoring",
    "start": "352320",
    "end": "354160"
  },
  {
    "text": "techniques",
    "start": "354160",
    "end": "355520"
  },
  {
    "text": "in some fairly nasty code",
    "start": "355520",
    "end": "357600"
  },
  {
    "text": "that you may find helpful so take a look",
    "start": "357600",
    "end": "359520"
  },
  {
    "text": "at those if that's interesting to you",
    "start": "359520",
    "end": "361759"
  },
  {
    "text": "but here are a few thoughts on",
    "start": "361759",
    "end": "363280"
  },
  {
    "text": "refactoring",
    "start": "363280",
    "end": "365280"
  },
  {
    "text": "the most valuable",
    "start": "365280",
    "end": "367039"
  },
  {
    "text": "technique i think the one that i use",
    "start": "367039",
    "end": "369039"
  },
  {
    "text": "most anyway is extract method",
    "start": "369039",
    "end": "371759"
  },
  {
    "text": "in this we select a block of code and",
    "start": "371759",
    "end": "374080"
  },
  {
    "text": "give it a name by extracting it as a new",
    "start": "374080",
    "end": "376560"
  },
  {
    "text": "method and now our code starts to",
    "start": "376560",
    "end": "378639"
  },
  {
    "text": "describe a little bit more about what it",
    "start": "378639",
    "end": "380960"
  },
  {
    "text": "is that it's trying to achieve",
    "start": "380960",
    "end": "382880"
  },
  {
    "text": "this is probably the most useful tool in",
    "start": "382880",
    "end": "385039"
  },
  {
    "text": "the refactoring tool chest in my view it",
    "start": "385039",
    "end": "387680"
  },
  {
    "text": "allows us to simplify the code in front",
    "start": "387680",
    "end": "390240"
  },
  {
    "text": "of us by giving it hopefully a",
    "start": "390240",
    "end": "392160"
  },
  {
    "text": "descriptive name after that comes the",
    "start": "392160",
    "end": "395520"
  },
  {
    "text": "work to reduce the cyclomatic complexity",
    "start": "395520",
    "end": "397759"
  },
  {
    "text": "of our code",
    "start": "397759",
    "end": "399199"
  },
  {
    "text": "extract conditional and loop blocks as",
    "start": "399199",
    "end": "401600"
  },
  {
    "text": "methods this allows us to further",
    "start": "401600",
    "end": "403680"
  },
  {
    "text": "semantically declutter the code in front",
    "start": "403680",
    "end": "405919"
  },
  {
    "text": "of us",
    "start": "405919",
    "end": "406800"
  },
  {
    "text": "we can work iteratively on making the",
    "start": "406800",
    "end": "408880"
  },
  {
    "text": "code simpler and simpler in tiny little",
    "start": "408880",
    "end": "411759"
  },
  {
    "text": "steps",
    "start": "411759",
    "end": "413440"
  },
  {
    "text": "move related concepts closer together in",
    "start": "413440",
    "end": "416319"
  },
  {
    "text": "the code particularly in long method",
    "start": "416319",
    "end": "418639"
  },
  {
    "text": "identify related ideas in a large method",
    "start": "418639",
    "end": "421440"
  },
  {
    "text": "and move them physically closer together",
    "start": "421440",
    "end": "423759"
  },
  {
    "text": "and then extract that block as a as an",
    "start": "423759",
    "end": "426560"
  },
  {
    "text": "as a method",
    "start": "426560",
    "end": "428400"
  },
  {
    "text": "as you are applying these techniques",
    "start": "428400",
    "end": "430400"
  },
  {
    "text": "keep a good look out for chances to",
    "start": "430400",
    "end": "432479"
  },
  {
    "text": "reuse the new bits of code that you are",
    "start": "432479",
    "end": "434560"
  },
  {
    "text": "identifying and naming",
    "start": "434560",
    "end": "437039"
  },
  {
    "text": "when extracting methods you'll quickly",
    "start": "437039",
    "end": "438880"
  },
  {
    "text": "often find opportunities for reuse take",
    "start": "438880",
    "end": "441919"
  },
  {
    "text": "them clean up the code as you go",
    "start": "441919",
    "end": "444960"
  },
  {
    "text": "the secret to refactoring is to work in",
    "start": "444960",
    "end": "447840"
  },
  {
    "text": "small safe steps small steps allow us to",
    "start": "447840",
    "end": "451360"
  },
  {
    "text": "make changes with confidence",
    "start": "451360",
    "end": "454160"
  },
  {
    "text": "divide refactoring into a series of",
    "start": "454160",
    "end": "456319"
  },
  {
    "text": "small steps rather than fewer big ones",
    "start": "456319",
    "end": "460800"
  },
  {
    "text": "separation of concerns is an idea that",
    "start": "461280",
    "end": "463520"
  },
  {
    "text": "deeply informs my own approach to design",
    "start": "463520",
    "end": "466720"
  },
  {
    "text": "separation of concerns is about teasing",
    "start": "466720",
    "end": "469120"
  },
  {
    "text": "apart the responsibilities of the pieces",
    "start": "469120",
    "end": "471520"
  },
  {
    "text": "of code that we work on",
    "start": "471520",
    "end": "473199"
  },
  {
    "text": "colloquially this is often referred to",
    "start": "473199",
    "end": "474800"
  },
  {
    "text": "as one class one thing one method one",
    "start": "474800",
    "end": "477199"
  },
  {
    "text": "thing one function one thing",
    "start": "477199",
    "end": "479280"
  },
  {
    "text": "our goal is to ensure that the code that",
    "start": "479280",
    "end": "481280"
  },
  {
    "text": "we're working on is aimed at achieving",
    "start": "481280",
    "end": "483919"
  },
  {
    "text": "one goal and only one goal it makes the",
    "start": "483919",
    "end": "486240"
  },
  {
    "text": "test more it makes the code more",
    "start": "486240",
    "end": "488400"
  },
  {
    "text": "testable and more effective at doing",
    "start": "488400",
    "end": "490720"
  },
  {
    "text": "that one thing well",
    "start": "490720",
    "end": "492479"
  },
  {
    "text": "and that in in general tends to have",
    "start": "492479",
    "end": "494960"
  },
  {
    "text": "good knock-on effects in terms of the",
    "start": "494960",
    "end": "496720"
  },
  {
    "text": "quality of our designs",
    "start": "496720",
    "end": "498879"
  },
  {
    "text": "finally",
    "start": "498879",
    "end": "499919"
  },
  {
    "start": "499000",
    "end": "566000"
  },
  {
    "text": "buy martin fowler's refactoring book",
    "start": "499919",
    "end": "502400"
  },
  {
    "text": "learn those skills take them seriously",
    "start": "502400",
    "end": "506240"
  },
  {
    "text": "next in my list of common design",
    "start": "506240",
    "end": "508000"
  },
  {
    "text": "mistakes",
    "start": "508000",
    "end": "509120"
  },
  {
    "text": "long parameter lists",
    "start": "509120",
    "end": "511520"
  },
  {
    "text": "long parameter lists indicate high",
    "start": "511520",
    "end": "513440"
  },
  {
    "text": "coupling and poor separation of concerns",
    "start": "513440",
    "end": "515599"
  },
  {
    "text": "in our code base",
    "start": "515599",
    "end": "517518"
  },
  {
    "text": "this function in the example has 22",
    "start": "517519",
    "end": "520080"
  },
  {
    "text": "parameters yuck can you imagine using",
    "start": "520080",
    "end": "523120"
  },
  {
    "text": "having to face using that in your code",
    "start": "523120",
    "end": "525920"
  },
  {
    "text": "i usually fail the build about six",
    "start": "525920",
    "end": "528560"
  },
  {
    "text": "parameters in my ci checks",
    "start": "528560",
    "end": "531440"
  },
  {
    "text": "but if i'm honest i usually starting to",
    "start": "531440",
    "end": "533440"
  },
  {
    "text": "feel a bit queasy about the quality of",
    "start": "533440",
    "end": "535120"
  },
  {
    "text": "my design if i go over four",
    "start": "535120",
    "end": "538000"
  },
  {
    "text": "limit the number of parameters you need",
    "start": "538000",
    "end": "540000"
  },
  {
    "text": "in any method or function fail the build",
    "start": "540000",
    "end": "542560"
  },
  {
    "text": "if you exceed it",
    "start": "542560",
    "end": "544080"
  },
  {
    "text": "refactor to improve the separation of",
    "start": "544080",
    "end": "546240"
  },
  {
    "text": "concerns in your design to improve that",
    "start": "546240",
    "end": "548959"
  },
  {
    "text": "modularity and cohesion in the code that",
    "start": "548959",
    "end": "552480"
  },
  {
    "text": "you're working on",
    "start": "552480",
    "end": "554160"
  },
  {
    "text": "maybe you're missing a concept of some",
    "start": "554160",
    "end": "556399"
  },
  {
    "text": "kind and maybe use an object or a type",
    "start": "556399",
    "end": "559040"
  },
  {
    "text": "to combine parameters into more more",
    "start": "559040",
    "end": "561519"
  },
  {
    "text": "coherent whole",
    "start": "561519",
    "end": "563360"
  },
  {
    "text": "but fix the design",
    "start": "563360",
    "end": "566000"
  },
  {
    "start": "566000",
    "end": "626000"
  },
  {
    "text": "next",
    "start": "566000",
    "end": "566959"
  },
  {
    "text": "duplicated code",
    "start": "566959",
    "end": "568880"
  },
  {
    "text": "my advice is that within a module",
    "start": "568880",
    "end": "571120"
  },
  {
    "text": "service or bounded context apply dry",
    "start": "571120",
    "end": "574720"
  },
  {
    "text": "don't repeat yourself",
    "start": "574720",
    "end": "576399"
  },
  {
    "text": "be strict with yourself adopt a very low",
    "start": "576399",
    "end": "579279"
  },
  {
    "text": "tolerance for repetition",
    "start": "579279",
    "end": "581440"
  },
  {
    "text": "i tend to feel a little bit uneasy in my",
    "start": "581440",
    "end": "583440"
  },
  {
    "text": "design if i have two or three lines that",
    "start": "583440",
    "end": "585360"
  },
  {
    "text": "repeat themselves within the same",
    "start": "585360",
    "end": "587440"
  },
  {
    "text": "context duplicated code is a maintenance",
    "start": "587440",
    "end": "590320"
  },
  {
    "text": "overhead in this single function",
    "start": "590320",
    "end": "593279"
  },
  {
    "text": "the long one from before this block of",
    "start": "593279",
    "end": "595839"
  },
  {
    "text": "code is repeated 13 times",
    "start": "595839",
    "end": "599040"
  },
  {
    "text": "stamp out duplication wherever possible",
    "start": "599040",
    "end": "602160"
  },
  {
    "text": "look out for subtle cases of near",
    "start": "602160",
    "end": "604399"
  },
  {
    "text": "duplication",
    "start": "604399",
    "end": "606079"
  },
  {
    "text": "landers functions as arguments are",
    "start": "606079",
    "end": "608399"
  },
  {
    "text": "sometimes a big help in the need to cope",
    "start": "608399",
    "end": "610959"
  },
  {
    "text": "with these small differences and give us",
    "start": "610959",
    "end": "613440"
  },
  {
    "text": "more power to be able to reduce",
    "start": "613440",
    "end": "617120"
  },
  {
    "text": "the duplication in in our code",
    "start": "617120",
    "end": "620079"
  },
  {
    "text": "once again extract method is your friend",
    "start": "620079",
    "end": "622480"
  },
  {
    "text": "here refactor",
    "start": "622480",
    "end": "625920"
  },
  {
    "start": "626000",
    "end": "821000"
  },
  {
    "text": "complex conditionals is the next smell",
    "start": "626399",
    "end": "629040"
  },
  {
    "text": "on my list",
    "start": "629040",
    "end": "630800"
  },
  {
    "text": "large conditional logic blocks are",
    "start": "630800",
    "end": "632880"
  },
  {
    "text": "common and bad",
    "start": "632880",
    "end": "634720"
  },
  {
    "text": "this function yes it's the same horrible",
    "start": "634720",
    "end": "637120"
  },
  {
    "text": "code once again",
    "start": "637120",
    "end": "638720"
  },
  {
    "text": "has 361 lines inside a single if",
    "start": "638720",
    "end": "642240"
  },
  {
    "text": "statement",
    "start": "642240",
    "end": "643839"
  },
  {
    "text": "the the if statement is is this it's if",
    "start": "643839",
    "end": "647040"
  },
  {
    "text": "unlikely bang ci",
    "start": "647040",
    "end": "649760"
  },
  {
    "text": "361 lines of crap and then stuff outside",
    "start": "649760",
    "end": "652640"
  },
  {
    "text": "of the conditional block",
    "start": "652640",
    "end": "654480"
  },
  {
    "text": "after spending way too much time reading",
    "start": "654480",
    "end": "656880"
  },
  {
    "text": "through this code i think that what they",
    "start": "656880",
    "end": "658959"
  },
  {
    "text": "really meant to say was this",
    "start": "658959",
    "end": "661279"
  },
  {
    "text": "if there's no connection in ci create a",
    "start": "661279",
    "end": "664320"
  },
  {
    "text": "connection",
    "start": "664320",
    "end": "665680"
  },
  {
    "text": "when i looked around the code that",
    "start": "665680",
    "end": "667360"
  },
  {
    "text": "create connection method as it turned",
    "start": "667360",
    "end": "669519"
  },
  {
    "text": "out was that 321 lines of rather",
    "start": "669519",
    "end": "672320"
  },
  {
    "text": "unpleasant code",
    "start": "672320",
    "end": "674640"
  },
  {
    "text": "but that was also duplicated slightly",
    "start": "674640",
    "end": "676720"
  },
  {
    "text": "differently in three of the places in",
    "start": "676720",
    "end": "678480"
  },
  {
    "text": "the code that i saw",
    "start": "678480",
    "end": "680480"
  },
  {
    "text": "consider patterns such as decorator",
    "start": "680480",
    "end": "682560"
  },
  {
    "text": "strategy or state to help you move these",
    "start": "682560",
    "end": "685600"
  },
  {
    "text": "conditionals out reduce the complexity",
    "start": "685600",
    "end": "688399"
  },
  {
    "text": "of the conditionals significantly nested",
    "start": "688399",
    "end": "690720"
  },
  {
    "text": "conditionals is probably the best way to",
    "start": "690720",
    "end": "693040"
  },
  {
    "text": "make your code hard to read so don't do",
    "start": "693040",
    "end": "696000"
  },
  {
    "text": "them adopt the discipline of allowing",
    "start": "696000",
    "end": "698399"
  },
  {
    "text": "yourself one conditional per function or",
    "start": "698399",
    "end": "700720"
  },
  {
    "text": "method if you are really good you're",
    "start": "700720",
    "end": "703440"
  },
  {
    "text": "allowed to have an else clause as well",
    "start": "703440",
    "end": "706560"
  },
  {
    "text": "a good step in refactoring is often to",
    "start": "706560",
    "end": "709440"
  },
  {
    "text": "simply extract a method as i did here to",
    "start": "709440",
    "end": "712959"
  },
  {
    "text": "pull out the body of the conditional",
    "start": "712959",
    "end": "715760"
  },
  {
    "text": "and name it",
    "start": "715760",
    "end": "718560"
  },
  {
    "text": "our job as programmers is to solve",
    "start": "718639",
    "end": "721440"
  },
  {
    "text": "problems not to write code",
    "start": "721440",
    "end": "724560"
  },
  {
    "text": "to do that well we need to retain our",
    "start": "724560",
    "end": "727040"
  },
  {
    "text": "ability to solve new problems",
    "start": "727040",
    "end": "729680"
  },
  {
    "text": "working so that our code is a nice place",
    "start": "729680",
    "end": "732079"
  },
  {
    "text": "to work is part of the discipline that",
    "start": "732079",
    "end": "734800"
  },
  {
    "text": "it takes to be a good programmer",
    "start": "734800",
    "end": "737680"
  },
  {
    "text": "refactoring skills are the most",
    "start": "737680",
    "end": "739600"
  },
  {
    "text": "important tool that you need to keep",
    "start": "739600",
    "end": "741760"
  },
  {
    "text": "sharp",
    "start": "741760",
    "end": "743120"
  },
  {
    "text": "refactoring should be a pervasive part",
    "start": "743120",
    "end": "745760"
  },
  {
    "text": "of how you organize your work",
    "start": "745760",
    "end": "748560"
  },
  {
    "text": "i often describe test driven development",
    "start": "748560",
    "end": "750399"
  },
  {
    "text": "as red green refactor",
    "start": "750399",
    "end": "752800"
  },
  {
    "text": "if you don't practice test driven",
    "start": "752800",
    "end": "754720"
  },
  {
    "text": "development well you should but even so",
    "start": "754720",
    "end": "758240"
  },
  {
    "text": "after every small change",
    "start": "758240",
    "end": "760800"
  },
  {
    "text": "many times per day refactor your code",
    "start": "760800",
    "end": "764959"
  },
  {
    "text": "look to see if you can tidy your work",
    "start": "764959",
    "end": "767360"
  },
  {
    "text": "and the code in the area of your work",
    "start": "767360",
    "end": "770560"
  },
  {
    "text": "think of yourself as a chef keeping your",
    "start": "770560",
    "end": "772800"
  },
  {
    "text": "work area clean and sanitary as you go",
    "start": "772800",
    "end": "775360"
  },
  {
    "text": "it's a nicer place for you to work and a",
    "start": "775360",
    "end": "777680"
  },
  {
    "text": "much nicer place for the people that",
    "start": "777680",
    "end": "779279"
  },
  {
    "text": "come after you to work too",
    "start": "779279",
    "end": "783040"
  },
  {
    "text": "those are my five things those are my",
    "start": "783440",
    "end": "785200"
  },
  {
    "text": "five common smells in code and design if",
    "start": "785200",
    "end": "788720"
  },
  {
    "text": "you've got any more or any other",
    "start": "788720",
    "end": "790560"
  },
  {
    "text": "suggestions or any questions let me know",
    "start": "790560",
    "end": "792959"
  },
  {
    "text": "in the comments",
    "start": "792959",
    "end": "794160"
  },
  {
    "text": "thank you very much for watching",
    "start": "794160",
    "end": "796590"
  },
  {
    "text": "[Music]",
    "start": "796590",
    "end": "802159"
  },
  {
    "text": "[Music]",
    "start": "806730",
    "end": "809850"
  },
  {
    "text": "you",
    "start": "821600",
    "end": "823680"
  }
]