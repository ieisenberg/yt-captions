[
  {
    "start": "0",
    "end": "85000"
  },
  {
    "text": "cool so we'll be talking about uh distributed systems uh and that term is",
    "start": "3000",
    "end": "8800"
  },
  {
    "text": "quite overloaded when when people say distributed systems so if you look at if",
    "start": "8800",
    "end": "14360"
  },
  {
    "text": "you have a microscope and go inside your CPU um your CPU or a chip itself is a",
    "start": "14360",
    "end": "21359"
  },
  {
    "text": "distributed system you can treat it that way um or all the cloud services that",
    "start": "21359",
    "end": "26880"
  },
  {
    "text": "you use or products like Kafka and kubernetes that you use they are distributed or if you go one level",
    "start": "26880",
    "end": "33879"
  },
  {
    "text": "higher um your overall architecture like for a system like Netflix it it is also",
    "start": "33879",
    "end": "40320"
  },
  {
    "text": "called a distributed architecture so what we will be focusing on primarily um",
    "start": "40320",
    "end": "46520"
  },
  {
    "text": "is around products like Kafka and kubernetes and all the cloud services um",
    "start": "46520",
    "end": "51800"
  },
  {
    "text": "and we'll see why that is the focus uh but a lot of principles uh and patterns",
    "start": "51800",
    "end": "57719"
  },
  {
    "text": "that uh that we see uh uh there is typically uh this this uh quality of",
    "start": "57719",
    "end": "64839"
  },
  {
    "text": "self-similarity when when something is a pattern uh you will see it at multiple",
    "start": "64840",
    "end": "70040"
  },
  {
    "text": "levels uh of abstraction so whatever patterns we are we are talking about today or I have discussed in the in the",
    "start": "70040",
    "end": "77640"
  },
  {
    "text": "book U it applies at at multiple levels uh of of",
    "start": "77640",
    "end": "84200"
  },
  {
    "text": "abstractions so that's the agenda for today uh I'll give you some of the",
    "start": "84600",
    "end": "90159"
  },
  {
    "start": "85000",
    "end": "118000"
  },
  {
    "text": "background of this uh of this uh work and why I chose patterns uh as as a way",
    "start": "90159",
    "end": "97000"
  },
  {
    "text": "of describing or understanding uh what is called as distributed systems uh and",
    "start": "97000",
    "end": "102240"
  },
  {
    "text": "then we'll took uh uh to take a look at some real examples of how patterns help",
    "start": "102240",
    "end": "107840"
  },
  {
    "text": "us understand um some common architectural architectural architectur",
    "start": "107840",
    "end": "115079"
  },
  {
    "text": "of common systems",
    "start": "115079",
    "end": "118759"
  },
  {
    "start": "118000",
    "end": "228000"
  },
  {
    "text": "so this is the end product of the work uh that's that's happening that's the",
    "start": "120320",
    "end": "125880"
  },
  {
    "text": "book that uh we published uh around last year but I consider this as a ongoing",
    "start": "125880",
    "end": "132360"
  },
  {
    "text": "work and periodically getting published on Martin follower.com",
    "start": "132360",
    "end": "137799"
  },
  {
    "text": "the main source of information for this work is essentially going through um a",
    "start": "138720",
    "end": "144760"
  },
  {
    "text": "lot of Open Source Code bases and try to find similarities and differences uh and try to articulate articulate",
    "start": "144760",
    "end": "152840"
  },
  {
    "text": "those and more importantly U something is not coming you might be aware of uh",
    "start": "152840",
    "end": "158720"
  },
  {
    "text": "this rule of three that's typically followed uh when when patterns are documented that something is not called",
    "start": "158720",
    "end": "165360"
  },
  {
    "text": "as a pattern unless you see it in at least three different implementations and one other um care",
    "start": "165360",
    "end": "174280"
  },
  {
    "text": "that we have taken uh is unless there is a working example we actually write some",
    "start": "174280",
    "end": "180280"
  },
  {
    "text": "code that that demonstrates common pattern across different systems uh it",
    "start": "180280",
    "end": "186879"
  },
  {
    "text": "is not documented as a pattern so this working code and I will uh I will talk a little more about that uh uh later why",
    "start": "186879",
    "end": "193959"
  },
  {
    "text": "that working code is important so now it's a as of now it's a",
    "start": "193959",
    "end": "201120"
  },
  {
    "text": "catalog of 30 patterns and uh we published a book when we when we thought that these are good enough set of",
    "start": "201120",
    "end": "207720"
  },
  {
    "text": "patterns uh to explain a full system or to understand a full system like CFA",
    "start": "207720",
    "end": "213120"
  },
  {
    "text": "kubernetes and I'm taking those names just as examples uh it equally applies to um any other uh any other distributed",
    "start": "213120",
    "end": "221200"
  },
  {
    "text": "system that uh that you might be familiar",
    "start": "221200",
    "end": "226080"
  },
  {
    "text": "with so let's start looking into why patterns is an approach uh or as a",
    "start": "227080",
    "end": "233480"
  },
  {
    "start": "228000",
    "end": "1090000"
  },
  {
    "text": "method we chose for for describing articulating and U and trying to understand uh these systems",
    "start": "233480",
    "end": "241720"
  },
  {
    "text": "now I have just listed uh various tools and Frameworks and services uh that any any",
    "start": "242200",
    "end": "250120"
  },
  {
    "text": "architecture today like when we when we say we are either modernizing a system going to Cloud hybrid Cloud um or your",
    "start": "250120",
    "end": "258440"
  },
  {
    "text": "own on premise systems you will typically have databases like I have listed a few",
    "start": "258440",
    "end": "266280"
  },
  {
    "text": "like mongodb Cassandra um if you are on AWS Aurora and there",
    "start": "266280",
    "end": "271520"
  },
  {
    "text": "are multiple others that each cloud provider has and there are so many",
    "start": "271520",
    "end": "276800"
  },
  {
    "text": "different products out there then there are message Brokers uh Kafka is the most",
    "start": "276800",
    "end": "282960"
  },
  {
    "text": "popular I think uh in last 10 years with micro services and um event driven",
    "start": "282960",
    "end": "288160"
  },
  {
    "text": "architectures Kafka has become like the Cornerstone U our main building block",
    "start": "288160",
    "end": "294120"
  },
  {
    "text": "but there are others as well and then there are infrastructure orchestrators right you use things like kubernetes for",
    "start": "294120",
    "end": "300680"
  },
  {
    "text": "orchestrating your containers there are some domains where",
    "start": "300680",
    "end": "306840"
  },
  {
    "text": "products like inmemory data grids uh particularly popular in the financial domains",
    "start": "306840",
    "end": "314560"
  },
  {
    "text": "uh and if you are in the data world if you are a data engineer doing big data",
    "start": "315320",
    "end": "321039"
  },
  {
    "text": "projects there are distributed file systems and um and products built around",
    "start": "321039",
    "end": "326840"
  },
  {
    "text": "that and then there are hundreds of cloud services that that we",
    "start": "326840",
    "end": "332400"
  },
  {
    "text": "use uh every day and that various Cloud providers",
    "start": "332400",
    "end": "337560"
  },
  {
    "text": "offer now when as a software professional today uh if you need to",
    "start": "337560",
    "end": "342680"
  },
  {
    "text": "architect uh any system or we need to understand a new service or a product",
    "start": "342680",
    "end": "348400"
  },
  {
    "text": "that that becomes a buzz in the market the challenge is how to",
    "start": "348400",
    "end": "355080"
  },
  {
    "text": "understand all of this because we can't really just just understand one product and and do an end",
    "start": "355080",
    "end": "362039"
  },
  {
    "text": "to- end architecture and even understanding that one product is is difficult enough um and we'll see why I",
    "start": "362039",
    "end": "369560"
  },
  {
    "text": "mean that's one of the challenges with distributed systems",
    "start": "369560",
    "end": "376080"
  },
  {
    "text": "but what we need to do U to do our day-to-day work effectively is to really",
    "start": "376080",
    "end": "382479"
  },
  {
    "text": "understand why these systems or products or services are designed the way they are what is the reason they are designed",
    "start": "382479",
    "end": "390039"
  },
  {
    "text": "the way they are what problems these designs try to",
    "start": "390039",
    "end": "395360"
  },
  {
    "text": "solve what is the Crux of it and if there are any common problems",
    "start": "395360",
    "end": "402319"
  },
  {
    "text": "because we are categorizing all of all of these uh systems as distributed",
    "start": "402319",
    "end": "408639"
  },
  {
    "text": "systems that means there is some commonality to uh it and if there are common problems are there any recurring",
    "start": "408639",
    "end": "415800"
  },
  {
    "text": "solutions that will help us understand um how they are built and then when to",
    "start": "415800",
    "end": "422000"
  },
  {
    "text": "use these Solutions in what circumstances what are the tradeoffs and and how and when to use",
    "start": "422000",
    "end": "429080"
  },
  {
    "text": "them if you can understand systems at this at these",
    "start": "429080",
    "end": "435240"
  },
  {
    "text": "basic principles level and their basic building blocks level um I think it it's lot easier as a professional developer",
    "start": "435240",
    "end": "442759"
  },
  {
    "text": "to to navigate through all those names that we saw on the previous slide",
    "start": "442759",
    "end": "450280"
  },
  {
    "text": "now how to how to do that though um and today in the in the cloud world with",
    "start": "450520",
    "end": "456479"
  },
  {
    "text": "Cloud war going on there is a lot of focus on on certifications right uh but",
    "start": "456479",
    "end": "462919"
  },
  {
    "text": "certifications even if they are good maybe they they teach uh you how to use",
    "start": "462919",
    "end": "468639"
  },
  {
    "text": "a particular product or service uh properly uh it it doesn't talk much",
    "start": "468639",
    "end": "475120"
  },
  {
    "text": "about why that service or product is built the way it is and if something changes in future will",
    "start": "475120",
    "end": "483840"
  },
  {
    "text": "there be any changes to expect and what to expect and then if you need to compare multiple services and products",
    "start": "483840",
    "end": "490080"
  },
  {
    "text": "with each other um doing certifications might not be useful if you but if you",
    "start": "490080",
    "end": "495319"
  },
  {
    "text": "know the building blocks that's that's always",
    "start": "495319",
    "end": "502280"
  },
  {
    "text": "useful there is another aspect uh to it and I like to use this term called",
    "start": "502639",
    "end": "509000"
  },
  {
    "text": "platform sympathy and I derived it kind of from",
    "start": "509000",
    "end": "516680"
  },
  {
    "text": "um from the term called mechanical sympathy and you might be aware of this",
    "start": "516680",
    "end": "522279"
  },
  {
    "text": "if you know of uh Martin Thompson and his U product called elmax elmax",
    "start": "522279",
    "end": "529800"
  },
  {
    "text": "disruptor uh it was very popular a few years ago uh but but he uses this term",
    "start": "529800",
    "end": "536200"
  },
  {
    "text": "mechanical sympathy and says that when whenever you code whenever you write code whenever you build any system or",
    "start": "536200",
    "end": "542200"
  },
  {
    "text": "whenever you use any system it's important to have that mechanical sympathy",
    "start": "542200",
    "end": "548320"
  },
  {
    "text": "uh when you when you do that and it's uh the the term essentially is coed by this",
    "start": "548320",
    "end": "554600"
  },
  {
    "text": "uh racing car driver who says that to use and run a racing car effectively uh",
    "start": "554600",
    "end": "562200"
  },
  {
    "text": "you you don't need to be an engineer who Engineers a car but you need to have this mechanical sympathy you need to",
    "start": "562200",
    "end": "568279"
  },
  {
    "text": "know how this various blocks which make a car work together in sync and how to",
    "start": "568279",
    "end": "574399"
  },
  {
    "text": "use them effectively now if we translate that to",
    "start": "574399",
    "end": "580240"
  },
  {
    "text": "the software systems in the cloud era that's what the mechanical parts of",
    "start": "580240",
    "end": "589320"
  },
  {
    "text": "our data centers or what we call as Cloud it looks like so there are",
    "start": "589320",
    "end": "596240"
  },
  {
    "text": "hundreds of thousands of servers arranged on racks with there will be power supply",
    "start": "596240",
    "end": "603240"
  },
  {
    "text": "and network cables uh you can see mean this photo I have taken just one random photo from uh Google data Data Center",
    "start": "603240",
    "end": "610880"
  },
  {
    "text": "photos but you will find some fascinating photos uh on if you just Google uh for data center",
    "start": "610880",
    "end": "618399"
  },
  {
    "text": "photos and whatever product services or architectures we we build um in today's",
    "start": "618399",
    "end": "626440"
  },
  {
    "text": "era they essentially are built the way they they are because they run on these",
    "start": "626440",
    "end": "631839"
  },
  {
    "text": "kinds of environments and we need to CER to the realities of",
    "start": "631839",
    "end": "637760"
  },
  {
    "text": "these environments uh and that's the reason they are built the way they are so to use them",
    "start": "637760",
    "end": "643519"
  },
  {
    "text": "effectively uh if we know what are the realities of these environments",
    "start": "643519",
    "end": "650040"
  },
  {
    "text": "and what are the building blocks of these products which cater to these environments we can use those products",
    "start": "650040",
    "end": "657480"
  },
  {
    "text": "lot more effectively and it's also easy to understand why they are built the way they",
    "start": "657480",
    "end": "664079"
  },
  {
    "text": "are now how to achieve this platform sympathy do we read",
    "start": "664600",
    "end": "673160"
  },
  {
    "text": "books that's not enough uh a lot of times because there is a lot of gap",
    "start": "673240",
    "end": "678519"
  },
  {
    "text": "between theory and practice whenever you read something or or hear some someone",
    "start": "678519",
    "end": "684200"
  },
  {
    "text": "speaking like I'm I'm talking right now um and for that uh I I follow guidance",
    "start": "684200",
    "end": "690600"
  },
  {
    "text": "of two quotes that I'm I'm going to show uh and this one is from Martin",
    "start": "690600",
    "end": "696079"
  },
  {
    "text": "fower and he famously said that code is like mathematics of our profession and",
    "start": "696079",
    "end": "701639"
  },
  {
    "text": "that's where you remove all the ambiguity and for this reason actually a",
    "start": "701639",
    "end": "708399"
  },
  {
    "text": "lot of earlier talks that I did while I was working on these patterns I never did any ppts I",
    "start": "708399",
    "end": "715079"
  },
  {
    "text": "mostly um mostly showed code working code for most of the",
    "start": "715079",
    "end": "721800"
  },
  {
    "text": "talks the other interesting quote uh this is not a quote really but a part of",
    "start": "722399",
    "end": "728000"
  },
  {
    "text": "uh another patterns book uh older patterns book uh called organizational",
    "start": "728000",
    "end": "733120"
  },
  {
    "text": "patterns and it has this um interesting pattern uh well known pattern by the way",
    "start": "733120",
    "end": "740079"
  },
  {
    "text": "uh called architect also implements and it has this nice comment",
    "start": "740079",
    "end": "746639"
  },
  {
    "text": "on abstractions um and which is very important today when there are so many",
    "start": "746639",
    "end": "752279"
  },
  {
    "text": "things uh or so many efforts done to abstract away a lot of complexity from",
    "start": "752279",
    "end": "758760"
  },
  {
    "text": "us and what this comment says is abstractions are nothing but disciplined",
    "start": "758760",
    "end": "764880"
  },
  {
    "text": "form of ignorance and we need to be aware of that because abstractions are are we",
    "start": "764880",
    "end": "771760"
  },
  {
    "text": "create abstractions to ease our lives to make our life easier to um speed up the",
    "start": "771760",
    "end": "778399"
  },
  {
    "text": "work that we do but we need to be aware that they they are ignoring certain",
    "start": "778399",
    "end": "783639"
  },
  {
    "text": "things even though in a disciplined way and a lot of",
    "start": "783639",
    "end": "788880"
  },
  {
    "text": "times the failures that happen while using these systems or",
    "start": "788880",
    "end": "796560"
  },
  {
    "text": "uh or using these products or in even when we architect certain systems they",
    "start": "796560",
    "end": "802320"
  },
  {
    "text": "always happen on the details that that we try to hide or we",
    "start": "802320",
    "end": "808560"
  },
  {
    "text": "try to ignore more so we need to be aware of what what those details are and",
    "start": "808560",
    "end": "815120"
  },
  {
    "text": "as we saw on the previous slide when we write code that is when we can actually",
    "start": "815120",
    "end": "821800"
  },
  {
    "text": "unearth or actually see through what's going on um behind those",
    "start": "821800",
    "end": "830000"
  },
  {
    "text": "abstractions so let's say and I have been talking about Kafka and kubernetes",
    "start": "830000",
    "end": "835160"
  },
  {
    "text": "just as as examples uh so just a show off hands how many of you are using Kafka in",
    "start": "835160",
    "end": "841040"
  },
  {
    "text": "your work okay a few and any of you using",
    "start": "841040",
    "end": "847240"
  },
  {
    "text": "kubernetes Okay a few uh and people who are not using it are they indirectly",
    "start": "847240",
    "end": "852519"
  },
  {
    "text": "using it indirectly yes cool so let's say I",
    "start": "852519",
    "end": "858320"
  },
  {
    "text": "talked about platform sympathy and building blocks and a way to understand",
    "start": "858320",
    "end": "863639"
  },
  {
    "text": "that is uh only to code let's say so if",
    "start": "863639",
    "end": "870680"
  },
  {
    "text": "we are using Kafka and and kubernetes and uh we now try to use this patters",
    "start": "870680",
    "end": "877440"
  },
  {
    "text": "approach to really understand things in details um and maybe to write by by",
    "start": "877440",
    "end": "884199"
  },
  {
    "text": "writing our own Kafka and kubernets uh for learning purposes not necessarily for production",
    "start": "884199",
    "end": "890720"
  },
  {
    "text": "use so that we know uh we we saw that um",
    "start": "890720",
    "end": "896320"
  },
  {
    "text": "platform sympathy slide previously right so so so we know what the building blocks are what is the interplay between",
    "start": "896320",
    "end": "902199"
  },
  {
    "text": "them and maybe to make right choices and um take right",
    "start": "902199",
    "end": "907240"
  },
  {
    "text": "decisions can you do that so that's where this patterns",
    "start": "907240",
    "end": "916399"
  },
  {
    "text": "approach uh comes in very handy because it's a good mix of description",
    "start": "916399",
    "end": "924320"
  },
  {
    "text": "with with some code and why that is useful is that",
    "start": "924320",
    "end": "930720"
  },
  {
    "text": "patterns when you when you structure things as patterns or structure information as patterns or um you try to",
    "start": "930720",
    "end": "939399"
  },
  {
    "text": "um articulate your understanding as patterns the the structure of that",
    "start": "939399",
    "end": "944880"
  },
  {
    "text": "patterns um is is pretty generic so you you don't describe",
    "start": "944880",
    "end": "951600"
  },
  {
    "text": "something that applies only to kubernetes or you don't describe that applies only to only to Kafka it needs",
    "start": "951600",
    "end": "957279"
  },
  {
    "text": "to be broad enough to apply to multiple systems but on the other hand it should",
    "start": "957279",
    "end": "964000"
  },
  {
    "text": "be specific enough to show real code and that's the beauty of patterns",
    "start": "964000",
    "end": "972319"
  },
  {
    "text": "uh as an approach that I that I uh find because when something is as concrete as",
    "start": "972319",
    "end": "978680"
  },
  {
    "text": "you can actually write code and not pseudo code actual code uh in in Java C++ or whatever your favorite language",
    "start": "978680",
    "end": "985680"
  },
  {
    "text": "is um a lot of ambiguity that that you face uh just when you read uh English",
    "start": "985680",
    "end": "994399"
  },
  {
    "text": "documentation uh it goes",
    "start": "994399",
    "end": "997920"
  },
  {
    "text": "away the other important aspect of patterns um and you might have heard",
    "start": "1000600",
    "end": "1005880"
  },
  {
    "text": "this multiple times that naming things is one of the most difficult problems uh in in software world uh but patterns",
    "start": "1005880",
    "end": "1013759"
  },
  {
    "text": "when you read or when you yourself structure um they have some well",
    "start": "1013759",
    "end": "1019720"
  },
  {
    "text": "established names and well established",
    "start": "1019720",
    "end": "1025038"
  },
  {
    "text": "names with some concrete code structure that associate",
    "start": "1025039",
    "end": "1030079"
  },
  {
    "text": "that's associated with it and that's a very powerful thing to have because when you have a well",
    "start": "1030079",
    "end": "1036959"
  },
  {
    "text": "established name with a very concrete understanding at the code level and you know multiple of these",
    "start": "1036959",
    "end": "1043959"
  },
  {
    "text": "patterns and how they link together you actually can think of",
    "start": "1043959",
    "end": "1049480"
  },
  {
    "text": "of the overall architecture as a sequence of patterns",
    "start": "1049480",
    "end": "1055240"
  },
  {
    "text": "and you you know uh because you know how patterns play together or how they work or Interlink",
    "start": "1055240",
    "end": "1061559"
  },
  {
    "text": "together uh it becomes easy to understand a particular",
    "start": "1061559",
    "end": "1068799"
  },
  {
    "text": "architecture so for example if you want to understand how Kafka is built and you",
    "start": "1068799",
    "end": "1073840"
  },
  {
    "text": "know a set of patterns like I said there are 30 patterns you can very well uh um",
    "start": "1073840",
    "end": "1079880"
  },
  {
    "text": "and you know how those patterns play together or or link together it's very",
    "start": "1079880",
    "end": "1085039"
  },
  {
    "text": "easy to understand kafkas AP afka architecture",
    "start": "1085039",
    "end": "1090640"
  },
  {
    "start": "1090000",
    "end": "1136000"
  },
  {
    "text": "so let's take some example now and I've been using Kafka and",
    "start": "1090640",
    "end": "1098640"
  },
  {
    "text": "kubernetes as as um example so let's say these are the we are let's say reading",
    "start": "1098640",
    "end": "1105760"
  },
  {
    "text": "kubernetes documentation and we are reading kafka's documentation and we see sentences like this that",
    "start": "1105760",
    "end": "1112799"
  },
  {
    "text": "kubernetes has something called as control plane and it uses it CD as its backing",
    "start": "1112799",
    "end": "1118520"
  },
  {
    "text": "store and AP Kafka it needs zookeeper or the newer version it doesn't needs zuker",
    "start": "1118520",
    "end": "1125559"
  },
  {
    "text": "but it has something called as a controller cluster and we now want to make sense",
    "start": "1125559",
    "end": "1132559"
  },
  {
    "text": "out of out of these what does this mean so let's say at High",
    "start": "1132559",
    "end": "1139960"
  },
  {
    "start": "1136000",
    "end": "1178000"
  },
  {
    "text": "level if you if you say kubernets kubernets is essentially used for",
    "start": "1139960",
    "end": "1145039"
  },
  {
    "text": "orchestrating containers or pods which is group of containers on multiple",
    "start": "1145039",
    "end": "1150400"
  },
  {
    "text": "machines so you have uh multiple servers which I'm calling nodes like this and",
    "start": "1150400",
    "end": "1157760"
  },
  {
    "text": "then you have uh a smaller cluster which which is it CD it CD is a",
    "start": "1157760",
    "end": "1165440"
  },
  {
    "text": "product that that kubernetes uses and then if you read about it CD there",
    "start": "1165440",
    "end": "1171440"
  },
  {
    "text": "is a mention of something called as raft",
    "start": "1171440",
    "end": "1175720"
  },
  {
    "text": "there if you see apfa again you see something similar",
    "start": "1176919",
    "end": "1184640"
  },
  {
    "start": "1178000",
    "end": "1209000"
  },
  {
    "text": "that there are multiple nodes or multiple servers but now instead of containers there are topics and",
    "start": "1184640",
    "end": "1192880"
  },
  {
    "text": "partitions and then you again see a smaller cluster",
    "start": "1192919",
    "end": "1198840"
  },
  {
    "text": "which is Zookeeper zookeeper is the product that Kafka uses and if you read about zookeeper",
    "start": "1198840",
    "end": "1204679"
  },
  {
    "text": "there is this mention of something called as Zab and then I mean",
    "start": "1204679",
    "end": "1211400"
  },
  {
    "start": "1209000",
    "end": "1290000"
  },
  {
    "text": "just to show the similarity with anything else that's called as distributed so any any other database",
    "start": "1211400",
    "end": "1218720"
  },
  {
    "text": "you take or any other cloud service uh you take as an example um and you see how that",
    "start": "1218720",
    "end": "1226640"
  },
  {
    "text": "looks it has these multiple nodes again now there are because we are",
    "start": "1226640",
    "end": "1232720"
  },
  {
    "text": "talking of database there are tables and not topics or containers and then there are",
    "start": "1232720",
    "end": "1240480"
  },
  {
    "text": "shards which are splits of uh your your tables or partitions of your tables and",
    "start": "1240720",
    "end": "1249039"
  },
  {
    "text": "then again you see something like that smaller",
    "start": "1249039",
    "end": "1254600"
  },
  {
    "text": "cluster which is called as Master cluster and they have the their own implementation for that Master cluster",
    "start": "1254600",
    "end": "1261000"
  },
  {
    "text": "so don't use zuker or HD and you if you read about that Master",
    "start": "1261000",
    "end": "1266679"
  },
  {
    "text": "cluster there is also this mention of raft so you see that all the three",
    "start": "1266679",
    "end": "1274320"
  },
  {
    "text": "examples that we saw um and the English documentation that we uh that we saw it",
    "start": "1274320",
    "end": "1281640"
  },
  {
    "text": "has this similarity right there is a larger cluster and then there is a smaller cluster",
    "start": "1281640",
    "end": "1289200"
  },
  {
    "start": "1290000",
    "end": "1401000"
  },
  {
    "text": "so if we understand why there is this separate smaller cluster and why not",
    "start": "1290039",
    "end": "1296880"
  },
  {
    "text": "just one cluster it's easier to understand what's going",
    "start": "1296880",
    "end": "1302080"
  },
  {
    "text": "on so what does this smaller cluster do it manages",
    "start": "1302080",
    "end": "1309200"
  },
  {
    "text": "metadata of of the cluster so which partitions are on which nodes or which containers are running on which node",
    "start": "1309200",
    "end": "1316039"
  },
  {
    "text": "stuff like that it help helps implementing what is called as leader",
    "start": "1316039",
    "end": "1322200"
  },
  {
    "text": "election so if one of the nodes that we saw needs to act as a leader or",
    "start": "1322200",
    "end": "1327919"
  },
  {
    "text": "controller uh to take decisions on behalf of the",
    "start": "1327919",
    "end": "1333200"
  },
  {
    "text": "cluster but to implement all this needs what is called as consensus",
    "start": "1334240",
    "end": "1340039"
  },
  {
    "text": "implementation or consensus algorithms to be implemented and they don't scale",
    "start": "1340039",
    "end": "1345200"
  },
  {
    "text": "well beyond a few nodes or Beyond a cluster size of say three to",
    "start": "1345200",
    "end": "1351080"
  },
  {
    "text": "five five nodes and that's the reason the solution",
    "start": "1351080",
    "end": "1356679"
  },
  {
    "text": "typically always is that you you have this smaller cluster for managing your",
    "start": "1356679",
    "end": "1363080"
  },
  {
    "text": "cluster metadata and have certain Primitives that we'll see to which then can be used",
    "start": "1363080",
    "end": "1371360"
  },
  {
    "text": "by your actual data cluster and you can see that your actual",
    "start": "1371360",
    "end": "1377520"
  },
  {
    "text": "kubernetes C or other data cluster uh you will have",
    "start": "1377520",
    "end": "1383200"
  },
  {
    "text": "typically um the size will be in thousands of nodes or thousands of servers and your smaller cluster will",
    "start": "1383200",
    "end": "1389159"
  },
  {
    "text": "typically always be three to five nodes so to allow that cluster to scale",
    "start": "1389159",
    "end": "1394919"
  },
  {
    "text": "to thousands of nodes you pull out this smaller cluster uh like",
    "start": "1394919",
    "end": "1401480"
  },
  {
    "start": "1401000",
    "end": "1599000"
  },
  {
    "text": "this and then if you see a pattern or what commonality you see in there you",
    "start": "1401480",
    "end": "1408960"
  },
  {
    "text": "describe that as a pattern and pattern is called as a consistent core and pattern as you know typically",
    "start": "1408960",
    "end": "1415240"
  },
  {
    "text": "has this problem and solution uh Parts problem describing why you uh what is the uh challenge that you",
    "start": "1415240",
    "end": "1422559"
  },
  {
    "text": "are trying to solve and solution gives you a solution structure so managing metadata with",
    "start": "1422559",
    "end": "1428600"
  },
  {
    "text": "strong consistency using consensus algorithms so that your main cluster can",
    "start": "1428600",
    "end": "1434000"
  },
  {
    "text": "independently scale to thousands of nodes and for doing that for achieving",
    "start": "1434000",
    "end": "1440880"
  },
  {
    "text": "that you use this smaller cluster for your metadata so once you know that there is",
    "start": "1440880",
    "end": "1448559"
  },
  {
    "text": "a concept of consistent core and that's how typically your cluster coordination",
    "start": "1448559",
    "end": "1453880"
  },
  {
    "text": "is managed um practically any distributed system uh Cloud scale distributed system",
    "start": "1453880",
    "end": "1461799"
  },
  {
    "text": "you will see that it has this kind of a component uh and different documentations and different products",
    "start": "1461799",
    "end": "1467679"
  },
  {
    "text": "will call it by different names and maybe have slightly different um descriptions of it but once",
    "start": "1467679",
    "end": "1475600"
  },
  {
    "text": "you know what what this is it it becomes a lot easier to understand",
    "start": "1475600",
    "end": "1481080"
  },
  {
    "text": "now we we said that there are patterns are not generally used alone right there",
    "start": "1481080",
    "end": "1486360"
  },
  {
    "text": "are multiple other patterns that this pattern links to uh to achieve a broader",
    "start": "1486360",
    "end": "1492440"
  },
  {
    "text": "goal so how is this smaller cluster um used so he said one of the one of the uh",
    "start": "1492440",
    "end": "1500760"
  },
  {
    "text": "use cases is uh to to do a leader election or to choose a controller from",
    "start": "1500760",
    "end": "1506640"
  },
  {
    "text": "from your larger cluster but whatever mechanism you use",
    "start": "1506640",
    "end": "1512840"
  },
  {
    "text": "like once you choose someone as a leader or someone as a controller um it should not be for indefinite time because",
    "start": "1512840",
    "end": "1520640"
  },
  {
    "text": "failures can happen at any time and you cannot give indefinite access of any",
    "start": "1520640",
    "end": "1526799"
  },
  {
    "text": "responsibility or any resource to one particular node and the solution to that is to",
    "start": "1526799",
    "end": "1535320"
  },
  {
    "text": "Grant time limited leases so you you grant access or Grant lease something",
    "start": "1535320",
    "end": "1540880"
  },
  {
    "text": "called as lease but you keep that time bound so that in case of failure and",
    "start": "1540880",
    "end": "1547919"
  },
  {
    "text": "we'll see how but whoever whoever wants to play a particular role let's say like",
    "start": "1547919",
    "end": "1553320"
  },
  {
    "text": "this node one um can say that I want to have access for this node one uh",
    "start": "1553320",
    "end": "1562760"
  },
  {
    "text": "name and it can register a lease with that name and",
    "start": "1562760",
    "end": "1568640"
  },
  {
    "text": "that's a typical interface that you will find on the products which are consistent",
    "start": "1568640",
    "end": "1575080"
  },
  {
    "text": "cores and then the responsibility of this node is to refresh that",
    "start": "1575840",
    "end": "1581720"
  },
  {
    "text": "periodically and if it's not refreshed let's say Beyond a certain time in",
    "start": "1581720",
    "end": "1588960"
  },
  {
    "text": "interval it's the consistent core that will that will consider that the lease",
    "start": "1588960",
    "end": "1594919"
  },
  {
    "text": "is expired and it will remove that LE so this is another pattern you will",
    "start": "1594919",
    "end": "1602200"
  },
  {
    "start": "1599000",
    "end": "1723000"
  },
  {
    "text": "always typically find along with this consistent core or the the interface of",
    "start": "1602200",
    "end": "1607880"
  },
  {
    "text": "that consistent core will almost always have this feature called as",
    "start": "1607880",
    "end": "1614120"
  },
  {
    "text": "Le so if you if you see zookeeper or it CD or Master cluster or any other",
    "start": "1614120",
    "end": "1619360"
  },
  {
    "text": "product that or any other custom implementation that's used as a consistent core will have a mechanism",
    "start": "1619360",
    "end": "1625559"
  },
  {
    "text": "called as uh Le so are there any more uses of this",
    "start": "1625559",
    "end": "1633240"
  },
  {
    "text": "this smaller cluster so one",
    "start": "1633240",
    "end": "1639039"
  },
  {
    "text": "other common requirement is that because the smaller cluster is now managing your",
    "start": "1639039",
    "end": "1645480"
  },
  {
    "text": "cluster metadata and you have this let's say thousands of node uh bigger cluster um that's out",
    "start": "1645480",
    "end": "1655240"
  },
  {
    "text": "there multiple nodes in that cluster now need to know if there is change in",
    "start": "1655240",
    "end": "1660360"
  },
  {
    "text": "configuration or change in metadata and it needs to get that real",
    "start": "1660360",
    "end": "1666559"
  },
  {
    "text": "time so let's say this node one we saw it it registers a Lee like",
    "start": "1668480",
    "end": "1675279"
  },
  {
    "text": "this and some other nodes need to know if there are any leases registered",
    "start": "1675279",
    "end": "1682679"
  },
  {
    "text": "under this prefix called server so are there any servers registering leads uh",
    "start": "1682679",
    "end": "1687840"
  },
  {
    "text": "with with the consistent",
    "start": "1687840",
    "end": "1691559"
  },
  {
    "text": "core with this there is a",
    "start": "1693200",
    "end": "1698760"
  },
  {
    "text": "mechanism by which this consistent core can notify the the nodes which are uh interested in",
    "start": "1698760",
    "end": "1707080"
  },
  {
    "text": "in that information so this ability to be able to register your interest for",
    "start": "1707080",
    "end": "1714200"
  },
  {
    "text": "particular kind of data and to get notified when any any change that",
    "start": "1714200",
    "end": "1720640"
  },
  {
    "text": "happens in that data um is again a common",
    "start": "1720640",
    "end": "1726080"
  },
  {
    "start": "1723000",
    "end": "1795000"
  },
  {
    "text": "pattern which is called a state watch I mean that's that's the name so you're watching a state on a remote",
    "start": "1726080",
    "end": "1733799"
  },
  {
    "text": "server and whenever a node needs real time update for or any change that",
    "start": "1733799",
    "end": "1739279"
  },
  {
    "text": "happens you need ability to register a interest and then get",
    "start": "1739279",
    "end": "1746960"
  },
  {
    "text": "notified so you can see that this consistent core",
    "start": "1746960",
    "end": "1752120"
  },
  {
    "text": "along with Le and state",
    "start": "1752120",
    "end": "1758000"
  },
  {
    "text": "watch is often used together for doing cluster coordination and cluster",
    "start": "1758120",
    "end": "1763519"
  },
  {
    "text": "metadata management for for practically any distributed system so whenever you",
    "start": "1763519",
    "end": "1768919"
  },
  {
    "text": "read something like kubernetes control plane or Kafka using",
    "start": "1768919",
    "end": "1774919"
  },
  {
    "text": "zookeeper you can see interplay of these three patterns together and to then to",
    "start": "1774919",
    "end": "1781200"
  },
  {
    "text": "understand U the kubernetes or Kafka control plane you can understand that in",
    "start": "1781200",
    "end": "1786679"
  },
  {
    "text": "terms of um these three",
    "start": "1786679",
    "end": "1790679"
  },
  {
    "text": "patterns okay so I I talked about ability to code um based on this understanding of",
    "start": "1792840",
    "end": "1800039"
  },
  {
    "start": "1795000",
    "end": "2083000"
  },
  {
    "text": "common patterns so I will show you some code but these are the repositories that I use to run a few",
    "start": "1800039",
    "end": "1807399"
  },
  {
    "text": "workshops where we build um products like kubernetes or CFA from scratch uh",
    "start": "1807399",
    "end": "1815480"
  },
  {
    "text": "in in a couple of days but whatever we just saw um I will",
    "start": "1815480",
    "end": "1822480"
  },
  {
    "text": "probably just show you the so this is",
    "start": "1822480",
    "end": "1828480"
  },
  {
    "text": "apach Kafka source code from",
    "start": "1828480",
    "end": "1833600"
  },
  {
    "text": "GitHub and once you know that you have this concept of consistent",
    "start": "1834039",
    "end": "1840320"
  },
  {
    "text": "core with the concept of Le that um that in case of Kafka it will be",
    "start": "1840320",
    "end": "1847039"
  },
  {
    "text": "Brokers that the servers are called as Brokers you see that whatever we saw on",
    "start": "1847039",
    "end": "1854320"
  },
  {
    "text": "the on the diagram right uh you you see very similar code um out here so it's if you see",
    "start": "1854320",
    "end": "1864720"
  },
  {
    "text": "what okay it's it's right here so whenever whenever your broker start or",
    "start": "1865080",
    "end": "1871320"
  },
  {
    "text": "server start um they register with zookeeper which is a consistent",
    "start": "1871320",
    "end": "1879398"
  },
  {
    "text": "core and zookeeper has this concept of ephemeral nodes so we we",
    "start": "1879600",
    "end": "1887120"
  },
  {
    "text": "talked about Le rate zookeeper calls them as ephemeral nodes so they go away if the if the if",
    "start": "1887120",
    "end": "1895080"
  },
  {
    "text": "they are not refreshed U or the session uh client session",
    "start": "1895080",
    "end": "1901158"
  },
  {
    "text": "expires and once you know know this um it becomes a lot easier for you to um",
    "start": "1915720",
    "end": "1924399"
  },
  {
    "text": "because there is a lot of complexity in making a system production ready but concept level you can um it's pretty",
    "start": "1924399",
    "end": "1931679"
  },
  {
    "text": "simple uh in a way so if you if you see these two repositories that um that I",
    "start": "1931679",
    "end": "1937519"
  },
  {
    "text": "will",
    "start": "1937519",
    "end": "1939679"
  },
  {
    "text": "show so this is a Kafka or a miniature Kafka and that's how we also uh when I",
    "start": "1942760",
    "end": "1949679"
  },
  {
    "text": "documented patterns uh that's what I did as well like created my own miniature versions of all the products that I um",
    "start": "1949679",
    "end": "1957960"
  },
  {
    "text": "that I studied so this is a end to end Kafka",
    "start": "1957960",
    "end": "1963320"
  },
  {
    "text": "and you can see that uh I mean Kafka in the sense my own",
    "start": "1963320",
    "end": "1968559"
  },
  {
    "text": "Kafka but it has everything that your actual Kafka has",
    "start": "1968559",
    "end": "1976039"
  },
  {
    "text": "and the advantage AG of doing stuff like this is you have your own miniature",
    "start": "1976039",
    "end": "1982279"
  },
  {
    "text": "playground uh where where you can try out different things so this is single",
    "start": "1982279",
    "end": "1988480"
  },
  {
    "text": "junit test that is running a a Kafka",
    "start": "1988480",
    "end": "1995200"
  },
  {
    "text": "cluster and you can actually simulate let's say having a larger cluster or",
    "start": "1995200",
    "end": "2001039"
  },
  {
    "text": "smaller cluster and introducing failures and you also see the interplay",
    "start": "2001039",
    "end": "2006399"
  },
  {
    "text": "of because you code it yourself um you see that whenever you",
    "start": "2006399",
    "end": "2012880"
  },
  {
    "text": "create a topic or whenever you produce a message um what happens",
    "start": "2012880",
    "end": "2020799"
  },
  {
    "text": "underneath so I encourage you to try the I mean you uh you look at that GitHub",
    "start": "2022960",
    "end": "2029039"
  },
  {
    "text": "repo and maybe give it a try",
    "start": "2029039",
    "end": "2033879"
  },
  {
    "text": "and similar to Kafka this is a kubernetes repo that I",
    "start": "2038600",
    "end": "2046240"
  },
  {
    "text": "have and similar to that Kafka test that was out there",
    "start": "2049119",
    "end": "2054280"
  },
  {
    "text": "uh this is a kubernetes test essentially doing the same thing setting",
    "start": "2054280",
    "end": "2059480"
  },
  {
    "text": "up building a kubernetes from scratch has same components that a typical kubernetes implementation would have and",
    "start": "2059480",
    "end": "2067720"
  },
  {
    "text": "and you can set up a cluster yourself and um say try orchestrating the",
    "start": "2067720",
    "end": "2075118"
  },
  {
    "text": "containers so do give it a",
    "start": "2075119",
    "end": "2079720"
  },
  {
    "start": "2083000",
    "end": "2261000"
  },
  {
    "text": "try so just to summarize I mean that's the summary I the patterns is a is a",
    "start": "2087359",
    "end": "2093638"
  },
  {
    "text": "tool for achieving platform sympathy but platform sympathy is something that is very",
    "start": "2093639",
    "end": "2098760"
  },
  {
    "text": "crucial um and one of the interesting observations that uh I have been having",
    "start": "2098760",
    "end": "2104640"
  },
  {
    "text": "in last few months is that once you understand Concepts at patterns and",
    "start": "2104640",
    "end": "2109880"
  },
  {
    "text": "principles level right um using generative AI tools is is lot more",
    "start": "2109880",
    "end": "2118680"
  },
  {
    "text": "effective uh because you saw like one code kubernetes code is in goang and uh",
    "start": "2118680",
    "end": "2124960"
  },
  {
    "text": "Kafka code is in is in Java and maybe you use the rust for something else uh you can interact and",
    "start": "2124960",
    "end": "2132599"
  },
  {
    "text": "instruct uh a tool like co-pilot uh lot more effectively and also validate the",
    "start": "2132599",
    "end": "2139079"
  },
  {
    "text": "output code lot more effectively uh if you know know those uh Concepts at",
    "start": "2139079",
    "end": "2145280"
  },
  {
    "text": "patterns level so there is another aspect of of",
    "start": "2145280",
    "end": "2154359"
  },
  {
    "text": "of this and you might have heard this term called accidental complexity and essential",
    "start": "2154359",
    "end": "2160720"
  },
  {
    "text": "complexity um accidental complexity is so essential complexity is is the real",
    "start": "2160720",
    "end": "2167079"
  },
  {
    "text": "complexity of of your system just inherent complexity just uh when we say",
    "start": "2167079",
    "end": "2172760"
  },
  {
    "text": "distributed systems um there are failures uh things need to work on say",
    "start": "2172760",
    "end": "2178520"
  },
  {
    "text": "thousands of servers and that's inherently complex but there is this accidental complexity that that is",
    "start": "2178520",
    "end": "2186319"
  },
  {
    "text": "introduced just because because the way the code is written uh a lot of times",
    "start": "2186319",
    "end": "2192960"
  },
  {
    "text": "and that makes it that makes it a lot harder to",
    "start": "2192960",
    "end": "2198640"
  },
  {
    "text": "understand um certain things so patterns help um in in this sense as well that",
    "start": "2198640",
    "end": "2206160"
  },
  {
    "text": "once you understand patterns well that accidental complexity is a lot of times",
    "start": "2206160",
    "end": "2211960"
  },
  {
    "text": "reduced but you actually see what essential complexity is and that's very important because when when you use",
    "start": "2211960",
    "end": "2220440"
  },
  {
    "text": "abstractions like you use something like zookeeper and if you read the documentation a lot",
    "start": "2220440",
    "end": "2227359"
  },
  {
    "text": "of times you will probably um feel that a lot of all the problems are solved for",
    "start": "2227359",
    "end": "2233800"
  },
  {
    "text": "you or when you use a cloud service uh they might say that all the problems are solved for you but there is this",
    "start": "2233800",
    "end": "2240599"
  },
  {
    "text": "essential complexity that we need to be aware of and it's a lot of time buried",
    "start": "2240599",
    "end": "2246119"
  },
  {
    "text": "uh in documentation and um and other things so patterns also help you um with",
    "start": "2246119",
    "end": "2253400"
  },
  {
    "text": "that aspect that they they clarify that essential complexity and it helps you to",
    "start": "2253400",
    "end": "2258680"
  },
  {
    "text": "think through clearly so that's uh about it um you can",
    "start": "2258680",
    "end": "2267000"
  },
  {
    "start": "2261000",
    "end": "2292000"
  },
  {
    "text": "explore more patterns I mean I just covered some very simple things like custom management uh relatively simple",
    "start": "2267000",
    "end": "2273560"
  },
  {
    "text": "thing but there are lot of other patterns U that you can explore uh particularly patterns around distributed",
    "start": "2273560",
    "end": "2280480"
  },
  {
    "text": "consensus and stuff like that but I'm open to questions",
    "start": "2280480",
    "end": "2287560"
  },
  {
    "text": "[Applause]",
    "start": "2287800",
    "end": "2292289"
  }
]