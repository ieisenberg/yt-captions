[
  {
    "start": "0",
    "end": "460000"
  },
  {
    "text": "Hello, and welcome to this episode of the \nGOTO Book Club. I'm here with Ben Evans to   talk about his most recent book. And I should \nsay this is definitely not your first book,  ",
    "start": "4240",
    "end": "13960"
  },
  {
    "text": "Ben, is it? I think this is one of about five \nor six books. Do you know how many you've done? ",
    "start": "13960",
    "end": "21000"
  },
  {
    "text": "...think this is actually book seven. And it's \nkind of interesting because I do actually have a  ",
    "start": "21000",
    "end": "27520"
  },
  {
    "text": "prop, you see this is the book. You've...\nSee, I've got it too. I've got it too.  ",
    "start": "27520",
    "end": "31200"
  },
  {
    "text": "So, this is called \"Optimizing Cloud Native Java.\" \nIf you look behind me, sort of here-ish, you can  ",
    "start": "33840",
    "end": "38880"
  },
  {
    "text": "see that on the wall is actually the cover of the \nfirst edition, which was just called \"Optimizing  ",
    "start": "38880",
    "end": "45240"
  },
  {
    "text": "Java.\" And there's actually maybe we'll get into \nit in a bit and I'll explain why the change of  ",
    "start": "45240",
    "end": "50680"
  },
  {
    "text": "title and some of the bits that are there.\nSee that's cheating, is to publish the  ",
    "start": "50680",
    "end": "57160"
  },
  {
    "text": "same book under two different titles.\nWell, that was actually the publisher's idea,   not mine. But as we'll explain, it does \nactually kind of make sense because the  ",
    "start": "57160",
    "end": "67159"
  },
  {
    "text": "world has kind of changed quite a lot since \nthe original edition came out. So, there we go. ",
    "start": "67160",
    "end": "72240"
  },
  {
    "text": "We'll come back to that. Ben, I've known you \nfor many years, but because I've known you for  ",
    "start": "73400",
    "end": "78920"
  },
  {
    "text": "such a long time, I hadn't actually ever read your \nbiography. And so when I was preparing for this,  ",
    "start": "78920",
    "end": "85200"
  },
  {
    "text": "I did read your biography. And it included some \nthings I knew about like co-founding JClarity,  ",
    "start": "85200",
    "end": "89920"
  },
  {
    "text": "and then sort of popping up at all sorts \nof conferences and that kind of thing. But  ",
    "start": "91120",
    "end": "97920"
  },
  {
    "text": "it had a whole bunch of things that I didn't know \nabout. So, like you've been a chief architect for  ",
    "start": "97920",
    "end": "103960"
  },
  {
    "text": "Deutsche Bank, and you've been a web developer, \nand you've been a performance engineer, and you've  ",
    "start": "103960",
    "end": "109200"
  },
  {
    "text": "done all sorts of things. So, what else have \nI forgotten? How would you introduce yourself? ",
    "start": "109200",
    "end": "114880"
  },
  {
    "text": "I've always been interested in, well, architecture \nand performance, and the interplay between people  ",
    "start": "116080",
    "end": "127960"
  },
  {
    "text": "and systems. Now, increasingly, that's led me \nin the direction of thinking about performance,  ",
    "start": "127960",
    "end": "134640"
  },
  {
    "text": "and of course, performance, you need data. \nSo, it's become a very sort of empirical   view of the world of software. And of course, \nour systems have become more complicated.  ",
    "start": "134640",
    "end": "145600"
  },
  {
    "text": "That's naturally evolved into things like \nobservability, which is where I've spent the last  ",
    "start": "145600",
    "end": "152040"
  },
  {
    "text": "six years. I mean, arguably, JClarity was also \nan observability company. But it really was when  ",
    "start": "152040",
    "end": "160560"
  },
  {
    "text": "I came to New Relic in 2019, that things really \nstarted to move very strongly in that direction.  ",
    "start": "160560",
    "end": "168200"
  },
  {
    "text": "And I see that as a sort of continuation of my \nperformance work and by focusing more on the   tooling than I had previously. I also think there \nis something in that I like to build tools. I like  ",
    "start": "168200",
    "end": "181800"
  },
  {
    "text": "to make things which other software engineers \nare going to use. I mean, it is fun to implement  ",
    "start": "181800",
    "end": "187400"
  },
  {
    "text": "features, but I'm not really as much of a feature \nsort of person. I like to build capabilities and  ",
    "start": "187400",
    "end": "193120"
  },
  {
    "text": "tools for other people. And is there a connection \nto the other things that I really like to do,  ",
    "start": "193120",
    "end": "199159"
  },
  {
    "text": "to write and to explain and to teach people? \nMaybe, those are capabilities for people as well  ",
    "start": "199160",
    "end": "204720"
  },
  {
    "text": "as capabilities for systems. I don't know, maybe.\nI suppose it's all about enabling people and  ",
    "start": "204720",
    "end": "209840"
  },
  {
    "text": "enabling others, isn't it? \nAnd being that multiplier.  Yes, absolutely. I mean, I'm very much of the \nopinion that if there is such a thing as a 10x  ",
    "start": "209840",
    "end": "217360"
  },
  {
    "text": "engineer, it's someone who makes other people \nmore productive. I believe that's the only way   to really do it. I don't really think that \nthere are people who can output 10 times the  ",
    "start": "217360",
    "end": "226720"
  },
  {
    "text": "amount of code as others. \nWell, I think there are,   but they perhaps shouldn't. But \nthat's a whole different conversation. ",
    "start": "226720",
    "end": "235840"
  },
  {
    "text": "Well, indeed. And then the question is, how much \ntime does the rest of the team have to spend   unpicking what they've done at great speed?\nExactly. But we should also introduce your  ",
    "start": "235840",
    "end": "246239"
  },
  {
    "text": "co-author, who's not here, but \nwe should not forget him. So,  ",
    "start": "246240",
    "end": "252600"
  },
  {
    "text": "can you give a bit of an intro to Jim and how \nyou started working together, and what he does? ",
    "start": "253160",
    "end": "258959"
  },
  {
    "text": "Jim, James Gough is a Distinguished Engineer at \nMorgan Stanley. And a funny story, I actually  ",
    "start": "260680",
    "end": "268280"
  },
  {
    "text": "hired him into his first job out of college, which \nwas also at Morgan Stanley. I was working there at  ",
    "start": "268280",
    "end": "275160"
  },
  {
    "text": "the time. He actually left Morgan Stanley and \ncame back, I think, maybe even twice. So, it   hasn't been a complete unbroken run for him there. \nBut I actually interviewed him as a graduate, just  ",
    "start": "275160",
    "end": "286080"
  },
  {
    "text": "coming into the Morgan Stanley graduate program. \nThe style of interview at that time, and I expect  ",
    "start": "286080",
    "end": "291240"
  },
  {
    "text": "it's still similar, is that when you're \ninterviewing for a particular position,   you're not trying to see just what the level \nis. You want to keep going with people to see  ",
    "start": "291240",
    "end": "302360"
  },
  {
    "text": "where they are. Because I believe in \nthis as part of my interviewing style,   I just want to see how good you are, really at \nanything. Because if it's any technical subject,  ",
    "start": "302360",
    "end": "312759"
  },
  {
    "text": "even if it's outside of what we're hiring for \nor whatever, I believe in the transferability   of skills. I believe people are teachable. So, \nif you can be this good in this area, even if  ",
    "start": "312760",
    "end": "322840"
  },
  {
    "text": "it's not quite the right one, well, I can get you \nthere in the areas that we do actually need. So,  ",
    "start": "322840",
    "end": "329639"
  },
  {
    "text": "what that translates to in interview \nterms is that we'll just keep going.  We'll keep talking and I'll be asking more and \nmore difficult questions, including things that  ",
    "start": "330360",
    "end": "337320"
  },
  {
    "text": "I won't expect a graduate engineer to get. And \nthen I'll start asking things which should take   maybe one or two years of experience. We'll just \nkeep going. We'll find your level and where you  ",
    "start": "337320",
    "end": "345720"
  },
  {
    "text": "top out. And with Jim, it was extremely \ndifficult because it took me quite a long  ",
    "start": "345720",
    "end": "350840"
  },
  {
    "text": "time to hit his top level. The question that I \nfinally broke him with was the details of how  ",
    "start": "350840",
    "end": "359000"
  },
  {
    "text": "threads are implemented, the differences between \nSolaris and Linux. And this would have been about  ",
    "start": "359000",
    "end": "364400"
  },
  {
    "text": "2005 or 2006. And he just, yeah, I remember him \nshaking his head and going, \"No, sorry, this is  ",
    "start": "364400",
    "end": "371520"
  },
  {
    "text": "it. This is my limit.\" Now, he comes out of that \ninterview thinking that things have gone terribly  ",
    "start": "371520",
    "end": "376560"
  },
  {
    "text": "and he's like, \"I'm never going to get a job in \nthis industry.\" And I'm writing the form up and   I'm putting, \"If we don't hire this person, I'm \nquitting because our hiring process is terminally  ",
    "start": "376560",
    "end": "385800"
  },
  {
    "text": "broken if we can't bring Jim on.\" It's different \nhow we have those two takes. And then when he  ",
    "start": "385800",
    "end": "392159"
  },
  {
    "text": "was hired and he got through the grad program, I \nmet him again at a company drinks reception and   we've been friends and colleagues ever since.\nWe've helped each other out in various ways  ",
    "start": "392160",
    "end": "402560"
  },
  {
    "text": "over the years. When we did the first edition of \nOptimizing Java, he was a very natural person for  ",
    "start": "402560",
    "end": "410040"
  },
  {
    "text": "me to talk to because of our shared interest in \nperformance analysis and the things which go on   under the hood. That's really one of the things \nthat I like to do is I like to take subjects  ",
    "start": "410040",
    "end": "421200"
  },
  {
    "text": "which are a little bit frontier, a little bit \nesoteric, things which aren't necessarily in the   mainstream of developers and try to bring them \nand break them down. I mean, I'm not an OpenJDK  ",
    "start": "421200",
    "end": "432199"
  },
  {
    "text": "committer. I don't necessarily commit a lot of \ntechnical work into those frontiers. I like to  ",
    "start": "432200",
    "end": "438520"
  },
  {
    "text": "understand them and kind of popularize them and \nexplain them because I think a lot of people are   interested in how these things work. I think \nthat increasingly, especially as performance  ",
    "start": "438520",
    "end": "450000"
  },
  {
    "text": "in the cloud becomes even more important, that \nmore people will need to understand them as  ",
    "start": "450000",
    "end": "456120"
  },
  {
    "text": "well. So, I think there's a good space to kind of \nexplain that, which is where the book comes from.",
    "start": "456120",
    "end": "461280"
  },
  {
    "start": "460000",
    "end": "569000"
  },
  {
    "text": "Who do you think the book is for? \nBecause there's sort of, I mean,   it's a big book and there's a lot in it. And \ncertainly, some of what's in it is very low  ",
    "start": "461280",
    "end": "471600"
  },
  {
    "text": "level. And some of it is, you know, sort \nof low level in terms of like, you know,  ",
    "start": "471600",
    "end": "477800"
  },
  {
    "text": "understanding the foundations that you need \nto know. And then some of it is really quite,   I think, practical and high level in \nterms of like here's the tools. And so  ",
    "start": "477800",
    "end": "484240"
  },
  {
    "text": "do you envisage this as sort of something that \nyou hope everybody in our industry, you know,   is buying and understanding? Or is this a book \nfor sort of when you get to a certain level,  ",
    "start": "484240",
    "end": "492000"
  },
  {
    "text": "this is what takes you to that next level or...\nI think a bit of the latter. I would hope that  ",
    "start": "492000",
    "end": "498120"
  },
  {
    "text": "there is something in it for a wide range \nof, well, maybe not beginners, but maybe  ",
    "start": "498120",
    "end": "503479"
  },
  {
    "text": "from intermediate upwards, I would hope there \nis something for everyone. The aim of the book,  ",
    "start": "503480",
    "end": "509240"
  },
  {
    "text": "and this isn't the first book I've written in this \nstyle, is that it's a starting point. You know,  ",
    "start": "509240",
    "end": "515479"
  },
  {
    "text": "your journey begins with the book, but \nit doesn't end there. It should have   lots of paths that you can follow from \nit. It can act as a jumping-off point.  ",
    "start": "515480",
    "end": "526840"
  },
  {
    "text": "Now, it is fair to say that some people don't like \nthat style of book. I have had previous books,  ",
    "start": "526840",
    "end": "532960"
  },
  {
    "text": "complaints, and reviews where it just didn't gel \nwith what the reader was expecting. They wanted,   you know, very, very in-depth things. But those \ntypes of books I find incredibly difficult to  ",
    "start": "533520",
    "end": "543000"
  },
  {
    "text": "write, because it's such a fast-moving \nfield, and there's so much to cover,   that you can't possibly satisfy everyone, because \neveryone has their own slightly different journey. ",
    "start": "543000",
    "end": "551760"
  },
  {
    "text": "I think the style of providing some \nstarting points and providing resources,   providing references, and letting people explore \nwhere they want to, where their desires take them,  ",
    "start": "552400",
    "end": "563840"
  },
  {
    "text": "I think is better overall. Although, \nof course, it doesn't satisfy everyone.",
    "start": "563840",
    "end": "569360"
  },
  {
    "start": "569000",
    "end": "1303000"
  },
  {
    "text": "I think that probably perhaps particularly \nmakes sense for performance, because I was   thinking as well when I was thinking, you know, \nabout this conversation, I was thinking about  ",
    "start": "570840",
    "end": "578600"
  },
  {
    "text": "when we first met each other, because I think \nwe first met each other at Devvox Belgium,   and I think it was about 15 years ago. I think I \nwas speaking about performance, and then you sort  ",
    "start": "578600",
    "end": "587480"
  },
  {
    "text": "of came up to me with a performance question, and \nyou showed me a bunch of charts. And I just looked   at these charts, and my heart just sank. Because, \nyou know, and there was a couple of reasons. One  ",
    "start": "587480",
    "end": "597040"
  },
  {
    "text": "was that I was fairly sure that even, you know, \nat that point, I was speaking about performance,   but I was fairly sure that you knew more about \nperformance than me. But then as well, I think,  ",
    "start": "597040",
    "end": "607040"
  },
  {
    "text": "you know, one of the things that you talk about \nin the book is that there is no magic go-faster   button. And, you know, there isn't a thing where \nyou can say, \"Okay, well, in order to go faster,  ",
    "start": "607040",
    "end": "615360"
  },
  {
    "text": "here's the six steps that you have to take. And if \nyou follow them in these orders, your application   will always be faster.\" There just isn't that \nrecipe. There isn't one command line to rule  ",
    "start": "615360",
    "end": "624160"
  },
  {
    "text": "them all. And I think that, you know, the way \nyou focus on the principles and the techniques  ",
    "start": "624160",
    "end": "629319"
  },
  {
    "text": "works for that domain.\nI think so. I think what  ",
    "start": "630360",
    "end": "636240"
  },
  {
    "text": "you're getting at there is something \nthat's very true and very, I think,   unique about performance. Performance is \ndifferent to application development. That's  ",
    "start": "636240",
    "end": "643160"
  },
  {
    "text": "why I always kind of consider it really to \nbe related to architecture because it is a  ",
    "start": "643160",
    "end": "649920"
  },
  {
    "text": "blend of things which are technical and \nthings which are much softer than that. ",
    "start": "649920",
    "end": "656839"
  },
  {
    "text": "I will always remember during my time at Deutsche \nBank, when I was working in Listed Derivatives,  ",
    "start": "658160",
    "end": "663279"
  },
  {
    "text": "that we had a system which was a features and \noptions system, and it was underperforming and  ",
    "start": "663280",
    "end": "669200"
  },
  {
    "text": "the users were complaining. And I had this program \nof work that I wanted the team to implement,  ",
    "start": "669200",
    "end": "674880"
  },
  {
    "text": "which was going to work on improving performance. \nAnd it suddenly dawned on me that this is sort  ",
    "start": "674880",
    "end": "683280"
  },
  {
    "text": "of a people problem as much as anything else. \nBecause, consider these two scenarios. You have  ",
    "start": "683280",
    "end": "689400"
  },
  {
    "text": "one scenario where someone comes to you and \nsays, \"It's slow, make it faster, right?\" So,  ",
    "start": "689400",
    "end": "695280"
  },
  {
    "text": "you make it faster, and they go, \"It's still \ntoo slow, make it faster again.\" Okay, well,  ",
    "start": "695280",
    "end": "700800"
  },
  {
    "text": "you can go around that loop many times. And \nwhat you have is a dissatisfied customer. ",
    "start": "700800",
    "end": "706399"
  },
  {
    "text": "Alternatively, you can, when you approach, when \nsomeone says it's too slow, you say, \"Okay,  ",
    "start": "706400",
    "end": "711760"
  },
  {
    "text": "what do you mean by that?\" And then they can say, \n\"The average latency is too large, okay?\" Average  ",
    "start": "711760",
    "end": "720360"
  },
  {
    "text": "or 90th percentile, right? And so immediately \nyou're engaging in a conversation, you're   bringing them with them. Somehow they are being \ndrawn into the problem, they haven't just shoved  ",
    "start": "720360",
    "end": "728360"
  },
  {
    "text": "it on you and said, \"You deal with this.\" They \nare engaged in the conversation at this point.   Then you say, \"OK, so we're going to bring \nin the 90th percentile by 20 milliseconds,  ",
    "start": "728360",
    "end": "738160"
  },
  {
    "text": "right?\" Because they probably don't know how much \nthey want to move it by. So, that means you get to   define the target. So, always pick something \nyou're pretty sure you can hit, right? So,  ",
    "start": "738160",
    "end": "746759"
  },
  {
    "text": "you bring it in by 20 milliseconds, and they \nsay, \"Well, it's still not good enough.”“OK”   you say “hat should we do? Do you want to do \nanother 20?\" \"Yeah, we do another 20, right?\"  ",
    "start": "746760",
    "end": "753640"
  },
  {
    "text": "But what that means is that in the second case, \nyou have two successfully completed deliverables,  ",
    "start": "753640",
    "end": "759080"
  },
  {
    "text": "and you've been engaged in the process \nthroughout. Unless the person is really  ",
    "start": "759080",
    "end": "764920"
  },
  {
    "text": "difficult to work with, hopefully they'll see \nthat as progress and as positive engagement. So,  ",
    "start": "764920",
    "end": "770320"
  },
  {
    "text": "that sort of psychology can be important. \nIt's also the case that (and we actually did  ",
    "start": "770320",
    "end": "776360"
  },
  {
    "text": "this at Deutsche) - I knew that there were lots \nof these small performance enhancements that we  ",
    "start": "776360",
    "end": "781440"
  },
  {
    "text": "could make, but I felt that if I trickled them \nout and just bundled them with feature releases,   the system wouldn't necessarily seem any faster.\n So, what do you do? Well, you take a high-level  ",
    "start": "781440",
    "end": "793320"
  },
  {
    "text": "meeting and you say, \"Okay, well, we hear your \nconcerns, and we understand and we're going to   fix this. But we need you to understand that \nwe're going to pause feature development. And  ",
    "start": "793320",
    "end": "800639"
  },
  {
    "text": "I need to do a performance release, which has no \nfeatures in it.\" You know, they're very much, \"We  ",
    "start": "800640",
    "end": "806800"
  },
  {
    "text": "want our features too.\" \"Okay, well, you know, \nif that's what you want, but you can't have both,  ",
    "start": "806800",
    "end": "812320"
  },
  {
    "text": "we only have so much engineering resources.\" \nSo, they actually said, \"Yes, let's do the   performance  release.\" And sure enough, by putting \nall of the small enhancements together, we were  ",
    "start": "812320",
    "end": "821800"
  },
  {
    "text": "able to move the needle by about 30% or 40%.\nThey came back to it. \"Yep, this is visibly  ",
    "start": "821800",
    "end": "828080"
  },
  {
    "text": "faster.\" Okay, so, we worked through it, we got \nto, a decision together about the trade-off,  ",
    "start": "828080",
    "end": "834880"
  },
  {
    "text": "and you were actually able to \nsee the performance going up. So,   the fact that there are those bits of psychology \nand softer stuff mixed in is important.  ",
    "start": "834880",
    "end": "844839"
  },
  {
    "text": "It's also the fact that – as we discussed in \nthe book – this is empirical science. You do   need to be able to handle data. And performance \ndata is somewhat different to other forms of  ",
    "start": "844840",
    "end": "855760"
  },
  {
    "text": "data that you might encounter. It's actually \nfor Java performance data, it's very noisy,  ",
    "start": "855760",
    "end": "862000"
  },
  {
    "text": "and getting clean data is hard. It's also easy to \nbe misled by small-scale performance measurements.  ",
    "start": "862000",
    "end": "872440"
  },
  {
    "text": "Micro-benchmarks are really hard. Partly, well, \nfor all kinds of reasons, which we discuss  ",
    "start": "872440",
    "end": "879240"
  },
  {
    "text": "at length in the book. And so it's actually \nmuch easier to benchmark entire systems. So,  ",
    "start": "879240",
    "end": "885399"
  },
  {
    "text": "thinking about things which directly relate \nto a user's perception and experience of the  ",
    "start": "885400",
    "end": "891240"
  },
  {
    "text": "system is always much better than trying to \nfocus on those small effects. Just if you... ",
    "start": "891240",
    "end": "896600"
  },
  {
    "text": "It's so counterintuitive, isn't it? Because \nwe're taught, you know, break the problem down,   break the problem down, break the problem \ndown. And then you break the problem down,  ",
    "start": "896600",
    "end": "902480"
  },
  {
    "text": "and you write a benchmark. And then you realize \nthat that was the exact wrong thing to do. ",
    "start": "902480",
    "end": "907120"
  },
  {
    "text": "I don't know if you recall these, but Google used \nto have a set of web benchmarks, not for Java,   but for JavaScript, called Octane. \nAnd they actually had to retire them,  ",
    "start": "908200",
    "end": "917680"
  },
  {
    "text": "because they found that in a large number \nof cases, applying what the benchmarks told   you to do produced worse overall performance. \nBecause,, the idea is that performance should be  ",
    "start": "917680",
    "end": "930720"
  },
  {
    "text": "reductive, you should be able to break it down. \nBut the fact is that with a sufficient amount of   complexity, our software systems become emergent. \nThe example I always think of and go to is if I  ",
    "start": "930720",
    "end": "942760"
  },
  {
    "text": "have a bucket of water, it's made up of water \nmolecules. Individual water molecules don't  ",
    "start": "942760",
    "end": "948800"
  },
  {
    "text": "have surface tension. So, where does the surface \ntension come from? Or the specific heat capacity?  ",
    "start": "948800",
    "end": "955240"
  },
  {
    "text": "It's buried somewhere in the quantum mechanics. \nBut somehow, when you have a bucket full of it,   the property just emerges as a result. \nAnd I believe that our software systems  ",
    "start": "955240",
    "end": "964480"
  },
  {
    "text": "now are sufficiently complex that \nthere's that aspect to them as well. ",
    "start": "964480",
    "end": "971199"
  },
  {
    "text": "There's also the fact that particularly for \ncomplex managed runtimes like the JVM and .NET  ",
    "start": "971200",
    "end": "976600"
  },
  {
    "text": "as well, we have the problem that the low-level \nsubsystems are not independent of each other. So,  ",
    "start": "976600",
    "end": "985360"
  },
  {
    "text": "for example, we can ask a question like \n“why is reflection slow?” and the answer  ",
    "start": "985360",
    "end": "992360"
  },
  {
    "text": "is not easy to figure out - especially once \nthe JIT compiler gets involved as well.  ",
    "start": "992360",
    "end": "999320"
  },
  {
    "text": "And when we talk about this, I might mention \nit in \"Optimizing Cloud Native.\" My other book,  ",
    "start": "1000040",
    "end": "1005639"
  },
  {
    "text": "which I've got, is \"The Well-Grounded Java,\" \nSecond Edition, which is this one. We'll   definitely talk about it here. Because one \nof the things that people might not know is  ",
    "start": "1005640",
    "end": "1013560"
  },
  {
    "text": "that the implementation of reflection in Java \nchanged with Java 17. Was it 17? I think it  ",
    "start": "1013560",
    "end": "1020400"
  },
  {
    "text": "was 17. And originally, it was implemented in a \nvery low-level way, which essentially used native  ",
    "start": "1020400",
    "end": "1030120"
  },
  {
    "text": "code. And until a threshold was reached, and \nwhen you called a reflective method more than,  ",
    "start": "1030120",
    "end": "1036920"
  },
  {
    "text": "I think, 20 times, then it would actually \nauto-generate bytecode and produce like a  ",
    "start": "1036920",
    "end": "1042439"
  },
  {
    "text": "little bridge method in bytecode. Now, there's \nall sorts of problems with that, because it has  ",
    "start": "1042440",
    "end": "1049879"
  },
  {
    "text": "to be specially marked to handle verification \nand to go through the class loading process. ",
    "start": "1049880",
    "end": "1055000"
  },
  {
    "text": "You have to say, \"Well, this is a very \nsimple, special bytecode. You don't have  ",
    "start": "1055000",
    "end": "1060200"
  },
  {
    "text": "to worry about it. You don't have to security \ncheck it,\" and all that kind of thing. So,  ",
    "start": "1060200",
    "end": "1065559"
  },
  {
    "text": "it adds a lot of complexity into the internals of \nthe JVM. Whereas with Java 7, a technology called  ",
    "start": "1065560",
    "end": "1073560"
  },
  {
    "text": "Method Handles was introduced alongside Invoke \nDynamic. And that technology has been maturing  ",
    "start": "1073560",
    "end": "1081240"
  },
  {
    "text": "ever since. And it is now effectively a modern \nreplacement for reflection. And it's great to say  ",
    "start": "1081240",
    "end": "1090400"
  },
  {
    "text": "that. And it's now very performant indeed. Now, \nof course, you can't take the reflection API away,  ",
    "start": "1090400",
    "end": "1097720"
  },
  {
    "text": "because so many things rely upon it, but you \ncan change the internals. And in fact, what's  ",
    "start": "1097720",
    "end": "1103120"
  },
  {
    "text": "now what's happened is that the existing hacky \nJNI native calling and then spin some bytecode  ",
    "start": "1103120",
    "end": "1110320"
  },
  {
    "text": "approach has been replaced all the way through \nby method handles. And it's completely opaque to  ",
    "start": "1110320",
    "end": "1116000"
  },
  {
    "text": "the user. There's nothing which has changed \nfrom the point of view of any calling code,  ",
    "start": "1116000",
    "end": "1121840"
  },
  {
    "text": "but the internals are completely different. So, \nnow we're first with the performance question.  ",
    "start": "1121840",
    "end": "1127320"
  },
  {
    "text": "What's the performance difference between the \ntwo? The answer is nobody knows. Really. And  ",
    "start": "1127320",
    "end": "1134919"
  },
  {
    "text": "even if you talk to some of the folks that \nwork on the VM, it's very, very difficult   to give a general answer to that question.\nAgain, you can find benchmarks and you can do  ",
    "start": "1134920",
    "end": "1144159"
  },
  {
    "text": "microbenching but within a very limited range of \ncircumstances. And if you take an application and  ",
    "start": "1144160",
    "end": "1152520"
  },
  {
    "text": "run it with the two different implementations of \nreflection, which you can control using a command   line switch, it doesn't rise out of the noise. \nSo, it's almost impossible to make any kind of  ",
    "start": "1152520",
    "end": "1164160"
  },
  {
    "text": "general statement about the two. That's one of the \nthings, one of the facts of life that you get when  ",
    "start": "1164160",
    "end": "1170200"
  },
  {
    "text": "you start delving into performance at this level. \nThere's also the thing that I'm recalling Martin  ",
    "start": "1170200",
    "end": "1179320"
  },
  {
    "text": "Thompson, the performance engineer, and some of \nthe great stuff he's done, where with a bit of  ",
    "start": "1179320",
    "end": "1187240"
  },
  {
    "text": "profiling and a bit of just intelligent thought \nabout what the important parts are, you know,  ",
    "start": "1187240",
    "end": "1192840"
  },
  {
    "text": "you shouldn't be looking for shave 5% or 10%. \nMartin frequently finds cases where there are  ",
    "start": "1192840",
    "end": "1200039"
  },
  {
    "text": "orders of magnitude saving. And so I think that's \na great way to look at it. How much do you need to  ",
    "start": "1200040",
    "end": "1208480"
  },
  {
    "text": "move the needle by? If you only need to move it \nby 25% or 30% that should be fairly achievable. ",
    "start": "1208480",
    "end": "1214720"
  },
  {
    "text": "And if it needs to be more than that, then \nyou need to be thinking about, you know,   design as much as anything else. Getting the right \nnumbers also is very important and also measuring  ",
    "start": "1215680",
    "end": "1227640"
  },
  {
    "text": "what matters, not what is easy to measure. We \nsee this, I was doing some work with the open  ",
    "start": "1227640",
    "end": "1235400"
  },
  {
    "text": "telemetry folks and helping to define metrics \nfor open telemetry metrics and participating in  ",
    "start": "1235400",
    "end": "1242920"
  },
  {
    "text": "the standardized metrics that are now available \nas open telemetry for the JVM itself, as well as   application level metrics. And one of the things \nthat we found was not every metric that we could  ",
    "start": "1244080",
    "end": "1255840"
  },
  {
    "text": "generate and collect actually made sense. So, \nfor example, there was something like, I forget,  ",
    "start": "1255840",
    "end": "1263880"
  },
  {
    "text": "it may have been a 15-minute CPU average. Okay, \nwell, in a Kubernetes environment, if your  ",
    "start": "1263880",
    "end": "1273400"
  },
  {
    "text": "15-minute CPU average is high enough to trigger \nan alert, your pod is already dead. So, why even  ",
    "start": "1273400",
    "end": "1282320"
  },
  {
    "text": "generate it? Why collect it? Why do anything or \neven define that at all? Because all it's doing is  ",
    "start": "1282320",
    "end": "1289080"
  },
  {
    "text": "it's eating bandwidth for a number which is \nnever going to be any good to anyone. So, it  ",
    "start": "1289080",
    "end": "1296279"
  },
  {
    "text": "is important to actually focus on what is actually \nrelevant for the problem you're trying to solve.",
    "start": "1296280",
    "end": "1303240"
  },
  {
    "start": "1303000",
    "end": "1941000"
  },
  {
    "text": "And I guess that goes back to sort of two \nof the things that we were just talking   about as well. So, one is, you mentioned \nthat if you're doing Java performance,  ",
    "start": "1303240",
    "end": "1310800"
  },
  {
    "text": "the JVM is a complex environment. But of course, \nnow none of us are running just in a JVM. We're  ",
    "start": "1310800",
    "end": "1316680"
  },
  {
    "text": "running a JVM in a much larger system. Then that \ncomes back to the sort of the updated title of  ",
    "start": "1316680",
    "end": "1323960"
  },
  {
    "text": "the book. When you went from the first edition to \nthis one, like how... Because I sort of naively,  ",
    "start": "1323960",
    "end": "1331799"
  },
  {
    "text": "I imagine that once you've got a book, then you \ncan just produce updated editions. And it's a   tiny amount of effort. But I have a feeling that \nit was actually quite a large amount of effort  ",
    "start": "1331800",
    "end": "1340919"
  },
  {
    "text": "for this update. So, what was the difference?\nIn the case of optimizing, it really is about  ",
    "start": "1340920",
    "end": "1350400"
  },
  {
    "text": "a one-time shift between... When the first \nedition came out, the original optimizing Java,  ",
    "start": "1350400",
    "end": "1357840"
  },
  {
    "text": "I think that was really probably the last time \nwhere you could write a Java book and have it  ",
    "start": "1357840",
    "end": "1362919"
  },
  {
    "text": "find its audience by speaking solely about \nsingle JVM performance. That world is gone.  ",
    "start": "1362920",
    "end": "1370080"
  },
  {
    "text": "It's not coming back. Our applications are \nclustered and we are well past the tipping  ",
    "start": "1370080",
    "end": "1375559"
  },
  {
    "text": "point now where most of them live in the \ncloud. That's just the world we live in. So,  ",
    "start": "1375560",
    "end": "1380600"
  },
  {
    "text": "you need to see not only a single JVM performance. \nIt's a yes and. It's not that that stuff doesn't  ",
    "start": "1380600",
    "end": "1388200"
  },
  {
    "text": "matter anymore. It very much still does. It \njust needs to be seen in a broader context  ",
    "start": "1388200",
    "end": "1393279"
  },
  {
    "text": "and combined with other things which relate to \ncloud-scale applications. Now, more generally,  ",
    "start": "1393280",
    "end": "1400440"
  },
  {
    "text": "this idea that a book can be reissued and is \ncreative, again, it's superficially compelling.  ",
    "start": "1400440",
    "end": "1407159"
  },
  {
    "text": "But one of my other titles is, where is it? This \none, \"Java In A Nutshell.\" This one, by the way,  ",
    "start": "1407160",
    "end": "1415280"
  },
  {
    "text": "is available for free courtesy of Red Hat.\nWe will include a link in the materials where  ",
    "start": "1415280",
    "end": "1421840"
  },
  {
    "text": "you can come and download a copy \nof this one for free. Thank you,   Red Hat. That is the eighth edition. Now, the \nfirst five were written by David Flanagan,  ",
    "start": "1421840",
    "end": "1431400"
  },
  {
    "text": "who also wrote \"JavaScript, The Definitive Guide.\" \nAnd it's a great book. It's been around since Java  ",
    "start": "1431400",
    "end": "1440680"
  },
  {
    "text": "1.0 if you can believe that. And the first five \neditions cover the first five versions of Java.  ",
    "start": "1440680",
    "end": "1446160"
  },
  {
    "text": "And David decided he didn't want to work on it \nanymore. And I came along to do the 6th edition,  ",
    "start": "1446160",
    "end": "1451560"
  },
  {
    "text": "which corresponds to Java 8. So, we broke the nice \nnumbering there. But it's an interesting project  ",
    "start": "1451560",
    "end": "1460440"
  },
  {
    "text": "because it does have this very creative style or \nit did when I first took it over. But what that  ",
    "start": "1460440",
    "end": "1466320"
  },
  {
    "text": "means is that the more time passes and the more \neditions you do, the sort of historical approach  ",
    "start": "1466320",
    "end": "1472039"
  },
  {
    "text": "of explaining when different things turned up, \nmakes less and less sense. I mean, if I'm a Java  ",
    "start": "1472040",
    "end": "1477680"
  },
  {
    "text": "developer in 2025, do I care whether a feature \nwas introduced with Java 4 or 5? Probably not. ",
    "start": "1477680",
    "end": "1485040"
  },
  {
    "text": "Your grandparents Java.\nGod, it really is, isn't it   now? Instead, I have tried to change that and to \nintroduce it in a way which makes more sense to  ",
    "start": "1485040",
    "end": "1499360"
  },
  {
    "text": "the modern reader. Now, that's more work for \nthe author. But I feel like that provides a  ",
    "start": "1499360",
    "end": "1504480"
  },
  {
    "text": "better learning experience. And that's what we've \ndone within a nutshell. Starting from version 7,  ",
    "start": "1504480",
    "end": "1512440"
  },
  {
    "text": "I've started to remove some of those historical \ndetails and blend it. But it's been an interesting  ",
    "start": "1512440",
    "end": "1520320"
  },
  {
    "text": "journey working on somebody else's titles versus \nworking on things which are purely my own. Or  ",
    "start": "1520320",
    "end": "1526159"
  },
  {
    "text": "with a co-author. So, yeah, I don't know which I \nprefer more. I think probably one of the biggest  ",
    "start": "1526160",
    "end": "1537600"
  },
  {
    "text": "learning experiences I had while writing was \nactually when I was writing \"Well-Grounded,\"   because I don't know if you can see this. I \nmean, this is the first edition we've covered.  ",
    "start": "1537600",
    "end": "1547080"
  },
  {
    "text": "This is the second edition. Let me compare \nthem. We just put them next to each other.,  ",
    "start": "1547080",
    "end": "1552279"
  },
  {
    "text": "andou can see the difference in size.\nThat neatly shows the work. ",
    "start": "1552280",
    "end": "1558320"
  },
  {
    "text": "The second edition was my lockdown book. I started \nwriting it with Martin Verburg and brought on a  ",
    "start": "1558320",
    "end": "1567679"
  },
  {
    "text": "different... And that's my colleague at New Relic, \nJason Clark. And we started writing and I thought,  ",
    "start": "1567680",
    "end": "1572880"
  },
  {
    "text": "\"It's about 30% to 40% more new material.\" And I \njust wrote and wrote and wrote and the lockdown  ",
    "start": "1572880",
    "end": "1578400"
  },
  {
    "text": "came to an end. And I'm like, \"We don't seem \nto be finished yet. Why is that?\" And the real  ",
    "start": "1578400",
    "end": "1584120"
  },
  {
    "text": "answer was because, although we were writing, our \npercentage completion was not actually increasing  ",
    "start": "1584120",
    "end": "1589800"
  },
  {
    "text": "because the book was just expanding as we went. \nSo, eventually, we had to call a halt to it and   realize that actually, no, you can write, but \nyou have to actually finish what you write. ",
    "start": "1589800",
    "end": "1601559"
  },
  {
    "text": "And so for this one, so this is the \"Optimizing \nJava,\" upside down. So, it's about that thick. So,  ",
    "start": "1601560",
    "end": "1607400"
  },
  {
    "text": "it is not a small book. Do you \nhave the previous one to compare?  I've got the first edition on my bookshelf. \nMy books live on that part of my bookshelf,  ",
    "start": "1607400",
    "end": "1615280"
  },
  {
    "text": "which is just out-shot here. So, this comparison, \nI think, is less stark. This edition is longer,  ",
    "start": "1615280",
    "end": "1624800"
  },
  {
    "text": "but it's nothing like it is pronounced.\nNo, based on that, you did no work at all. ",
    "start": "1624800",
    "end": "1632240"
  },
  {
    "text": "Absolutely.\nSo, what did you change? ",
    "start": "1632240",
    "end": "1637880"
  },
  {
    "text": "Well, so one of the things that we did is \nwe moved out quite a bit of material to an  ",
    "start": "1637880",
    "end": "1643120"
  },
  {
    "text": "appendix. We also did things like, we had \nsome stuff about open source libraries for  ",
    "start": "1643120",
    "end": "1651320"
  },
  {
    "text": "high-performance messaging and stuff, which \nwas removed because we needed to make space   for things like the observability content. \nSo, we have three chapters which deal with  ",
    "start": "1651320",
    "end": "1659600"
  },
  {
    "text": "observability, which is a huge topic. \nOne of the other things that we also  ",
    "start": "1659600",
    "end": "1666160"
  },
  {
    "text": "do is we introduce concepts of deployment and of \nKubernetes and so forth. Earlier on in the book,  ",
    "start": "1666160",
    "end": "1675880"
  },
  {
    "text": "which wasn't in the first edition. And I think \nthese days, Java developers have tended to lag  ",
    "start": "1675880",
    "end": "1682160"
  },
  {
    "text": "behind other developers in other languages, simply \nbecause in our part of the industry, people have  ",
    "start": "1682160",
    "end": "1690400"
  },
  {
    "text": "tended to think of themselves as developers rather \nthan DevOps for longer. Now, I think that's coming  ",
    "start": "1690400",
    "end": "1696680"
  },
  {
    "text": "to an end. But what it means is I think there \nis a knowledge gap about Kubernetes and similar  ",
    "start": "1696680",
    "end": "1702560"
  },
  {
    "text": "technologies, cloud native tech. So, I felt \nthat it was important to introduce some of those  ",
    "start": "1702560",
    "end": "1707760"
  },
  {
    "text": "concepts as part of the journey that we went on.\nThe other thing, of course, is that we have a  ",
    "start": "1707760",
    "end": "1714880"
  },
  {
    "text": "major example that we developed throughout the \nbook, which is what we called Fighting animals.  ",
    "start": "1714880",
    "end": "1720200"
  },
  {
    "text": "And it started, it just came to me that a lot of \nthe examples that were out there for dealing with  ",
    "start": "1720200",
    "end": "1727720"
  },
  {
    "text": "microservices and deployments, there all, are in \nmany cases much too simple. One thing which I was  ",
    "start": "1727720",
    "end": "1734640"
  },
  {
    "text": "shocked by is how many of them rely on quirks of \nloopback networking. And as soon as you put them  ",
    "start": "1734640",
    "end": "1741120"
  },
  {
    "text": "onto something which has an actual real network, \nit stops working. And it's actually in many cases,  ",
    "start": "1741120",
    "end": "1748680"
  },
  {
    "text": "very difficult to actually get them to work. So, \nI determined that every example in the book would   be tested across a real network. So, you can't \nsee it's not a shot. But in addition to my lovely  ",
    "start": "1748680",
    "end": "1758880"
  },
  {
    "text": "match, I have a Linux machine which is there. And \nthat is the server that runs all of the examples.  ",
    "start": "1758880",
    "end": "1765760"
  },
  {
    "text": "So, I would connect from this to my client \nmachine across a real network. And that basically,  ",
    "start": "1765760",
    "end": "1772760"
  },
  {
    "text": "exposes a lot of bugs in examples and config.\nAnd it means that the examples are properly  ",
    "start": "1772760",
    "end": "1778560"
  },
  {
    "text": "tested and could be generalized for people \nwho want to start deploying the first sets   of microservices. Now, fighting animals is this \nthing where it originally came from. There is a  ",
    "start": "1778560",
    "end": "1789960"
  },
  {
    "text": "certain large entertainment conglomerate that is \nknown for being litigious that shall not be named.  ",
    "start": "1789960",
    "end": "1798440"
  },
  {
    "text": "And they have a number of well-known properties of \ndifferent universes, shall we say. And I thought  ",
    "start": "1798440",
    "end": "1806279"
  },
  {
    "text": "it would be fun to have a combat game where you \nwould fight different characters from different  ",
    "start": "1806280",
    "end": "1811680"
  },
  {
    "text": "universes. So, each universe is represented by \na separate microservice. So, you can build up,  ",
    "start": "1811680",
    "end": "1820520"
  },
  {
    "text": "you know, a non-trivial topology of microservices, \nwhich of course is then helpful for showing things  ",
    "start": "1820520",
    "end": "1826080"
  },
  {
    "text": "like distributed tracing. You know, and \nit's just a bit of fun. But of course,   when we started writing the book, I had to talk \nto the publisher, the publisher was like, \"Yeah... ",
    "start": "1826080",
    "end": "1835600"
  },
  {
    "text": "No.\n...hard to use that.\" So,   I came up with the idea of, \"Okay, we'll replace \nthe fictional universe. Lovely and gorgeous ideas  ",
    "start": "1835600",
    "end": "1843520"
  },
  {
    "text": "with something which is like animal clades.\" So, \nwhat we have is we have, you know, the top-level  ",
    "start": "1843520",
    "end": "1849120"
  },
  {
    "text": "gateway service. And then we have, there's one \nwhich represents mammals. There's another one  ",
    "start": "1849120",
    "end": "1855400"
  },
  {
    "text": "which represents fish. And then the mammals. So, \nif you pick fish versus mammals, say you go to  ",
    "start": "1855400",
    "end": "1862160"
  },
  {
    "text": "the fish service, and then you go to the mammal \nservice, and then the mammal service will then   send you off to one of, you know, is it a feline \nor a mustelid or something like that. So, you have  ",
    "start": "1862160",
    "end": "1874360"
  },
  {
    "text": "a tree structure, which is non-trivial. And that \nthen produces better results in something which  ",
    "start": "1874360",
    "end": "1880160"
  },
  {
    "text": "only has one microservice or just like a one-level \nstructure and multiple levels of structure   actually do help. So, what we're trying to find...\nAnd your own brand for O'Reilly as well... ",
    "start": "1880160",
    "end": "1889880"
  },
  {
    "text": "Of course, yes.\n...of the animals.  I hadn't even thought of that. That's great. \nAnd what I like about that as well is I think  ",
    "start": "1889880",
    "end": "1897159"
  },
  {
    "text": "it provides the right balance of complexity. \nBecause, you know, with a lot of the cloud stuff,  ",
    "start": "1897160",
    "end": "1903040"
  },
  {
    "text": "again, it comes back to this theme that a lot \nof the examples out there are in many ways too   simple. So, you need to have things which actually \nencourage people to go beyond the basics. How to  ",
    "start": "1903040",
    "end": "1913720"
  },
  {
    "text": "use them all very well. But quite often you find, \nyou come to the end of one and then you think,   \"Okay, well, now what? How do I apply this? How \ndo I actually take this and turn it into building  ",
    "start": "1913720",
    "end": "1922000"
  },
  {
    "text": "a real system?\" Again, which relates back to \nthe subject of architecture. Architecture is  ",
    "start": "1922000",
    "end": "1928680"
  },
  {
    "text": "how we do that. But it can be difficult to take \narchitectural principles that you may understand,  ",
    "start": "1928680",
    "end": "1934920"
  },
  {
    "text": "and see how to apply that to a new technology \nor a new set of concepts that you're learning.",
    "start": "1934920",
    "end": "1941200"
  },
  {
    "start": "1941000",
    "end": "2350000"
  },
  {
    "text": "Can we talk a bit about concurrency? And \nthat's not the sentence I say very often,   because I try to avoid thinking about concurrency \nwhenever possible. But I think, again, you know,  ",
    "start": "1941200",
    "end": "1948520"
  },
  {
    "text": "increasingly in our modern world, you just can't \navoid thinking about concurrency. So, what do you  ",
    "start": "1948520",
    "end": "1954000"
  },
  {
    "text": "think about concurrency? How do you approach it?\nI see concurrency as an aspect of performance.  ",
    "start": "1954000",
    "end": "1960240"
  },
  {
    "text": "If you don't need performance, you know, \nand to saturate your hardware resources,  ",
    "start": "1960960",
    "end": "1966520"
  },
  {
    "text": "don't use concurrency. That's the first rule is, \nyou know, why do you need it? And only if you  ",
    "start": "1966520",
    "end": "1973240"
  },
  {
    "text": "genuinely do, should you. Now, there's a couple \nof different things here. These might be kind of  ",
    "start": "1973240",
    "end": "1982160"
  },
  {
    "text": "edge cases or small quirks, but let me see if \nI can process. So, there is a slight oddity,  ",
    "start": "1982160",
    "end": "1991560"
  },
  {
    "text": "which people don't necessarily appreciate. \nLet's rewind back to 2003. So, most machines  ",
    "start": "1991560",
    "end": "2002200"
  },
  {
    "text": "are a single CPU. And yet we have Linux, which \nruns fine on them. You have different processes.  ",
    "start": "2002200",
    "end": "2010279"
  },
  {
    "text": "And the different processes are controlled \nby the scheduler, which time slices. And you   can even have different threads within the \nsame process, you can have multi-threading,  ",
    "start": "2010280",
    "end": "2017640"
  },
  {
    "text": "even though there is only one CPU. However, when \nyou have multiple CPUs, there are multiple places  ",
    "start": "2017640",
    "end": "2026320"
  },
  {
    "text": "where execution can happen at the same time. \nRather is because, you know, relativity and  ",
    "start": "2026320",
    "end": "2032480"
  },
  {
    "text": "stuff. That actually isn't a well-defined \nconcept, but it's good enough for now. ",
    "start": "2032480",
    "end": "2037720"
  },
  {
    "text": "That enables a class of algorithms called \nlock-free algorithms, which are not possible  ",
    "start": "2039960",
    "end": "2046000"
  },
  {
    "text": "on a single core. So, a classic example of this is \na spin-lock. Because normally when you're honest,  ",
    "start": "2046000",
    "end": "2057560"
  },
  {
    "text": "like you're doing a context switch, if \nyou want to take a lock, you say, \"Okay,  ",
    "start": "2057560",
    "end": "2063200"
  },
  {
    "text": "I'm blocked on this lock, take me off the core, \nswap in something else, which is going to make a  ",
    "start": "2064160",
    "end": "2069480"
  },
  {
    "text": "change, and maybe it'll unlock me. And then when \nI get back on the CPU later, I can carry on with  ",
    "start": "2069480",
    "end": "2074679"
  },
  {
    "text": "what I'm doing because now I'm unblocked.\" That \ninvolves the operating system moving things in and  ",
    "start": "2074680",
    "end": "2080079"
  },
  {
    "text": "out. If we have two separate CPUs, the thing \nwhich is blocked can sit on the CPU and say,  ",
    "start": "2080080",
    "end": "2087800"
  },
  {
    "text": "\"Has that bit of memory changed? Has it changed? \nHas it changed? Has it changed?\" Because there is   another place for execution to happen, it might \nhave done. If there's only a single place where  ",
    "start": "2087800",
    "end": "2097000"
  },
  {
    "text": "execution can happen, it hasn't. So, that is \nthe fundamentals of a lock-free algorithm,  ",
    "start": "2097000",
    "end": "2105440"
  },
  {
    "text": "which are based, you know, and related to \nthis is also things like compare and swap. ",
    "start": "2105440",
    "end": "2111079"
  },
  {
    "text": "And those sorts of features enable modern \nconcurrency, including modern concurrent  ",
    "start": "2111080",
    "end": "2117920"
  },
  {
    "text": "garbage collectors, which is interesting, because \nif we look at the statistics, and probably the  ",
    "start": "2117920",
    "end": "2124720"
  },
  {
    "text": "best numbers we have are from the New Relic survey \nof JVMs, which is a survey that I initiated when I  ",
    "start": "2124720",
    "end": "2132160"
  },
  {
    "text": "was at New Relic in about 2020. And that basically \nis based on, I think, these days, about 65 million  ",
    "start": "2132160",
    "end": "2141440"
  },
  {
    "text": "production JVMs. So, according to Gartner, that \nis about 1% of all production JVMs in the world  ",
    "start": "2141440",
    "end": "2150720"
  },
  {
    "text": "at any given time. So, that's a good statistical \nsample number. What it shows us is that  ",
    "start": "2150720",
    "end": "2158760"
  },
  {
    "text": "overwhelmingly, for things that are containerized, \nJava applications are running in single-core  ",
    "start": "2158760",
    "end": "2164280"
  },
  {
    "text": "containers, which means that regardless of whether \nyou think you're running G1, you're not. Because  ",
    "start": "2164280",
    "end": "2171880"
  },
  {
    "text": "G1 is a concurrent algorithm. So, an awareness \nof concurrency and the low-level details,  ",
    "start": "2171880",
    "end": "2178480"
  },
  {
    "text": "all of these things kind of interplay with each \nother. Of course, one of the really hot topics  ",
    "start": "2178480",
    "end": "2185160"
  },
  {
    "text": "is virtual threads, which I think are an amazing \nachievement in 2021. They're great as they are. ",
    "start": "2185160",
    "end": "2193760"
  },
  {
    "text": "They have been getting better. In Java 24, we also \nnow have one of the last major performance hurdles  ",
    "start": "2193760",
    "end": "2200600"
  },
  {
    "text": "with virtual threads has been eliminated, which is \nthe synchronization block on them. That's gone in  ",
    "start": "2200600",
    "end": "2205960"
  },
  {
    "text": "'24. And two other features, which I really hope \nare going to go final for Java 25, which comes out  ",
    "start": "2205960",
    "end": "2213200"
  },
  {
    "text": "in September. Hopefully, be the long-term support \nrelease, which are structured concurrency and  ",
    "start": "2213200",
    "end": "2219480"
  },
  {
    "text": "scoped values. And with those three things \nput together, we have a really powerful  ",
    "start": "2219480",
    "end": "2224800"
  },
  {
    "text": "next-generation concurrency story. One of the many \nthings that's interesting about virtual threads  ",
    "start": "2224800",
    "end": "2230400"
  },
  {
    "text": "is another example of the thing we talked about \nearlier with reflection. The way that it works  ",
    "start": "2230400",
    "end": "2238079"
  },
  {
    "text": "relies upon an implementation change that was done \nback in Java 14 or 15, which was to re-implement  ",
    "start": "2238080",
    "end": "2248360"
  },
  {
    "text": "the socket IO. So, the blocking socket IO has \nbeen completely changed underneath. And even  ",
    "start": "2248360",
    "end": "2255240"
  },
  {
    "text": "if you use the original Java IO socket blocking \nAPI, underneath the actual IO is non-blocking. So,  ",
    "start": "2255240",
    "end": "2263520"
  },
  {
    "text": "that's the trick. That's how virtual threads work. \nBecause even when you're using the blocking API,  ",
    "start": "2264200",
    "end": "2270079"
  },
  {
    "text": "well, it dispatches the non-blocking call \nand then swaps out the virtual thread. ",
    "start": "2270080",
    "end": "2276120"
  },
  {
    "text": "The way that you can change the implementation \nand the underlying parts of stuff is actually,  ",
    "start": "2277920",
    "end": "2284280"
  },
  {
    "text": "I think, a key feature of how we can use \nrun terms like Java and .NET to make these  ",
    "start": "2284280",
    "end": "2290480"
  },
  {
    "text": "changes without affecting other people or the \napplications that run on top. There's a great  ",
    "start": "2290480",
    "end": "2296680"
  },
  {
    "text": "deal of really interesting work in the virtual \nthreads piece. I talk about it in the book. I'm  ",
    "start": "2296680",
    "end": "2303119"
  },
  {
    "text": "going to share some links as well, which \nhave links to articles about how it's been  ",
    "start": "2303120",
    "end": "2308440"
  },
  {
    "text": "implemented. And the implementation has changed \na lot over the years, but what I'm describing is   what goes into 21. Other than that, I think the \nvirtual threads, yes, non-blocking algorithms,  ",
    "start": "2308440",
    "end": "2324120"
  },
  {
    "text": "thinking carefully about how your deployment \npatterns work. Those are some of the things that   I think really do move beyond classic texts, like, \nof course \"Java Concurrency in Practice\", which is  ",
    "start": "2324120",
    "end": "2337720"
  },
  {
    "text": "showing its age in a couple of places now, but \nit's still such an absolute classic. I hope that   Brian Goetz would get around to updating it one \nday, but I think he has a few other things to do. ",
    "start": "2337720",
    "end": "2347599"
  },
  {
    "text": "One or two.\nOne or two. ",
    "start": "2347600",
    "end": "2350960"
  },
  {
    "start": "2350000",
    "end": "2434000"
  },
  {
    "text": "I think this has been a really nice gallop \nthrough some of the book. And it's such a good  ",
    "start": "2355080",
    "end": "2363560"
  },
  {
    "text": "book and it's such a useful book for people \nwhose job is performance and also people who   maybe don't know whether they need to know about \nperformance just in terms of the foundational  ",
    "start": "2363560",
    "end": "2373400"
  },
  {
    "text": "aspects and then the tools that it provides as \nwell. So, I think with that, yeah, I think we're  ",
    "start": "2373400",
    "end": "2381480"
  },
  {
    "text": "done unless you have any last 10-second words.\nNo. I mean, thanks for having me this morning.  ",
    "start": "2381480",
    "end": "2387640"
  },
  {
    "text": "It's always nice to come and talk about this \nstuff. And, yeah, I hope people, if they find the   book interesting, I hope you like it and hope it \nstirs some thoughts and helps you on your journey. ",
    "start": "2387640",
    "end": "2398680"
  },
  {
    "text": "Fantastic. Thanks, Ben.\nThanks, Holly.",
    "start": "2398680",
    "end": "2402079"
  }
]