[
  {
    "text": "thank you everyone I hope you are having a wonderful day and if you have attended the previous session this will be almost",
    "start": "12280",
    "end": "18560"
  },
  {
    "text": "similar but I have few more Contents I have not seen this's deck yet but bear",
    "start": "18560",
    "end": "23760"
  },
  {
    "text": "with me and see how this goes I have some cool use cases some cool uh demos",
    "start": "23760",
    "end": "29599"
  },
  {
    "text": "which I been working for the last couple of months so we'll go through that",
    "start": "29599",
    "end": "35280"
  },
  {
    "text": "so everybody is using Eda today with serus with containers who's",
    "start": "35280",
    "end": "41520"
  },
  {
    "text": "using uh even driven with containers okay one hand okay good",
    "start": "41520",
    "end": "47440"
  },
  {
    "text": "um as a way of introduction just quickly uh okay my name is duraj",
    "start": "47440",
    "end": "55480"
  },
  {
    "text": "mahapatra and I'm a principal Serv specialist essay and I focus on Financial Service Services",
    "start": "55480",
    "end": "61039"
  },
  {
    "text": "customers I started as a Java developer couple of years ago and if you go and",
    "start": "61039",
    "end": "66720"
  },
  {
    "text": "find me as a groovy and gra SM in stack Overflow you will find me today as well as a top top three users to answer",
    "start": "66720",
    "end": "74240"
  },
  {
    "text": "questions on groovy and Grails so groovy and Grails has been my past life and I",
    "start": "74240",
    "end": "80320"
  },
  {
    "text": "extensively am working on building Eda Solutions or use cases for Industries",
    "start": "80320",
    "end": "85439"
  },
  {
    "text": "mainly Financial Services Java on serverless anybody doing Java on AWS",
    "start": "85439",
    "end": "91200"
  },
  {
    "text": "Lambda okay if you have questions awesome if you have questions let me know Lambda snapart Java on serverless",
    "start": "91200",
    "end": "98280"
  },
  {
    "text": "and then gen AI on serverless and I had a session before if you want to reach out to me you can please follow me in",
    "start": "98280",
    "end": "104600"
  },
  {
    "text": "LinkedIn or uh Twitter today we are going to cover and",
    "start": "104600",
    "end": "110280"
  },
  {
    "text": "I think this this is not something new like why use event Ren architecture and",
    "start": "110280",
    "end": "115719"
  },
  {
    "text": "but the most important part will be the demo and the industry use cases with cont workload right that's what I want",
    "start": "115719",
    "end": "122280"
  },
  {
    "text": "you to take away from here to see how extensible even driven architectures are",
    "start": "122280",
    "end": "127439"
  },
  {
    "text": "and it doesn't matter which compute that you choose you should be able to uh expand or evolve from your current",
    "start": "127439",
    "end": "134720"
  },
  {
    "text": "solution and then couple of notes on how to get started so in general why do we want to",
    "start": "134720",
    "end": "141800"
  },
  {
    "text": "use the architecture it's it is not something new right it's not a New Concept we have been talking about",
    "start": "141800",
    "end": "148480"
  },
  {
    "text": "domain driven design even driven architectures way long ago and why are",
    "start": "148480",
    "end": "153640"
  },
  {
    "text": "we talking about it today because the new thing that has happened is cloud and",
    "start": "153640",
    "end": "159760"
  },
  {
    "text": "becoming Cloud native how do you do event driven architecture becoming Cloud native and how Cloud native Solutions",
    "start": "159760",
    "end": "166640"
  },
  {
    "text": "provide the facilities or facilitates you to become even driven much more",
    "start": "166640",
    "end": "172159"
  },
  {
    "text": "faster in in early days or previous years we used to set up clusters for",
    "start": "172159",
    "end": "177879"
  },
  {
    "text": "Kafka you have to set up for mq and lot of things has to happen for you to actually get the value of even driven",
    "start": "177879",
    "end": "184239"
  },
  {
    "text": "architecture but that is not the case right now you can become even driven right at the",
    "start": "184239",
    "end": "191840"
  },
  {
    "text": "get-go excuse me but before we understand how even driven architecture Works in in in AWS in a cloud lative way",
    "start": "191840",
    "end": "200040"
  },
  {
    "text": "let's take few minutes to visualize an insurance claims processing system and",
    "start": "200040",
    "end": "205840"
  },
  {
    "text": "how would it look like if you have to build it in a traditional architecture right we have a producer which is the",
    "start": "205840",
    "end": "211840"
  },
  {
    "text": "claim service and there are multiple consumers that the claim service has to use to actually work on a claim on an",
    "start": "211840",
    "end": "219120"
  },
  {
    "text": "insurance claim those consumers can be document service the settlement service or fraud service so if we go with the",
    "start": "219120",
    "end": "227120"
  },
  {
    "text": "traditional approach of synchronously invoking those services from claims you will deal with some good",
    "start": "227120",
    "end": "233840"
  },
  {
    "text": "things and some bad things so what are the problems that we want we we see with",
    "start": "233840",
    "end": "239920"
  },
  {
    "text": "this architecture is basically the tight coupling between producers and consumers right if claim service has to",
    "start": "239920",
    "end": "247280"
  },
  {
    "text": "depend on the benefits that it gets from all the other consumers and if document",
    "start": "247280",
    "end": "252599"
  },
  {
    "text": "service suddenly goes from 100 millisecond response time to 700 milliseconds claim service cannot do",
    "start": "252599",
    "end": "259320"
  },
  {
    "text": "anything it has to slow down the entire performance of the application goes down",
    "start": "259320",
    "end": "265040"
  },
  {
    "text": "there are multiple point of failures if you don't Implement a retry log or if",
    "start": "265040",
    "end": "270080"
  },
  {
    "text": "you don't Implement uh let's say short circuiting capability in claim service",
    "start": "270080",
    "end": "275240"
  },
  {
    "text": "if settlement service fails then there is a chance claim service will raise its hands up and it it will fail and send a",
    "start": "275240",
    "end": "282120"
  },
  {
    "text": "nasty response to the customer slowly you get varying degrees",
    "start": "282120",
    "end": "287520"
  },
  {
    "text": "of quality of services as I mentioned earlier right if it one Services slows down the entire Services is affected and",
    "start": "287520",
    "end": "293759"
  },
  {
    "text": "then external dependencies will keep on adding right now you see three boxes in the right it can be five 10 15 and you",
    "start": "293759",
    "end": "301320"
  },
  {
    "text": "keep on degrading the application so at the end of the day the client experience will go",
    "start": "301320",
    "end": "307800"
  },
  {
    "text": "down excuse me what event driven architecture helps you to do is to",
    "start": "307800",
    "end": "314560"
  },
  {
    "text": "understand one basic thing like we can live without synchronicity we can have something",
    "start": "314560",
    "end": "321919"
  },
  {
    "text": "asynchronous possible and make our application grow and behave in a certain",
    "start": "321919",
    "end": "327600"
  },
  {
    "text": "way that is useful for our end client so if I take the same architecture from the previous slide and talk about what",
    "start": "327600",
    "end": "334280"
  },
  {
    "text": "we have right now is the introduction of an event router or even broker we",
    "start": "334280",
    "end": "339720"
  },
  {
    "text": "introduced even broker in between producers and consumers so we broke the synchronicity at that point we are",
    "start": "339720",
    "end": "347160"
  },
  {
    "text": "relying on asynchronous nature of this entire architecture so why why did we bring that even broker in place the",
    "start": "347160",
    "end": "355160"
  },
  {
    "text": "major benefit of decoupling a producer and a consumer is that that you can have",
    "start": "355160",
    "end": "361240"
  },
  {
    "text": "fine grain control over things now the claim service doesn't have to know which",
    "start": "361240",
    "end": "367520"
  },
  {
    "text": "service it has to call so you are breaking the temporal coupling right there so claim service will just can say",
    "start": "367520",
    "end": "373880"
  },
  {
    "text": "Okay a claim has been requested go do whatever you want it's your Downstream",
    "start": "373880",
    "end": "379560"
  },
  {
    "text": "services in future if there are five or 10 more boxes that gets added in the",
    "start": "379560",
    "end": "384599"
  },
  {
    "text": "right the claim service doesn't have to care not the so other consumers also",
    "start": "384599",
    "end": "390720"
  },
  {
    "text": "don't have to care whether there are five boxes or 10 boxes in the right you get buffering capability if you can",
    "start": "390720",
    "end": "396840"
  },
  {
    "text": "Implement some queuing mechanism in the consumer side so that when events come",
    "start": "396840",
    "end": "402080"
  },
  {
    "text": "in from claims it doesn't overwhelm document service or fraud service or",
    "start": "402080",
    "end": "407160"
  },
  {
    "text": "settlement service and finally now you will be thinking okay with synchronous apis we were getting responses back",
    "start": "407160",
    "end": "413840"
  },
  {
    "text": "immediately that's true but we have mechanisms that can send response back from the event router via notification",
    "start": "413840",
    "end": "420840"
  },
  {
    "text": "service and we have different mechanisms like it's a different topic alog together but in brief it can be",
    "start": "420840",
    "end": "427400"
  },
  {
    "text": "websockets or you can poll or you can build something with iot code topics so at the end of the day the",
    "start": "427400",
    "end": "434280"
  },
  {
    "text": "customer will get a good uh experience on top of that you EV evolve this",
    "start": "434280",
    "end": "441280"
  },
  {
    "text": "architecture in a way that you can plug in a new producer or a new consumer",
    "start": "441280",
    "end": "447120"
  },
  {
    "text": "without affecting the entire system now that is where you see the reliability",
    "start": "447120",
    "end": "453479"
  },
  {
    "text": "the resiliency and the independently scalable components that you just buil that can help your",
    "start": "453479",
    "end": "459440"
  },
  {
    "text": "business so if you go to the Whiteboard and think about what even driven architecture should look like what are",
    "start": "459440",
    "end": "465960"
  },
  {
    "text": "the core components the first and foremost thing is thinking asynchronously right you have to start",
    "start": "465960",
    "end": "471720"
  },
  {
    "text": "thinking asynchronously because events are always asynchronous in nature you think about event routers event routers",
    "start": "471720",
    "end": "480400"
  },
  {
    "text": "excuse me are responsible for uh decoupling producers from consumers and",
    "start": "480400",
    "end": "486479"
  },
  {
    "text": "with event router you get the capability of uh independent scaling in in",
    "start": "486479",
    "end": "493879"
  },
  {
    "text": "place and then we have event stores like why do we need event",
    "start": "494479",
    "end": "499520"
  },
  {
    "text": "stor if we have event routers your claim service can start",
    "start": "499520",
    "end": "505400"
  },
  {
    "text": "pushing messages in a really drastic way where which your document service is not",
    "start": "505400",
    "end": "510440"
  },
  {
    "text": "able to handle so you need some store in front that can handle that incoming traffic and you can scale document",
    "start": "510440",
    "end": "517719"
  },
  {
    "text": "service at it own pace so that's why you think about event stores another major component to look",
    "start": "517719",
    "end": "525120"
  },
  {
    "text": "at another major definition to look at is the degrees of freedom that you get when you think about asynchronous and",
    "start": "525120",
    "end": "530320"
  },
  {
    "text": "even driven architecture if you think about directed commands like with synchronous way you",
    "start": "530320",
    "end": "536120"
  },
  {
    "text": "would ask for an example please send an email email confirmation and then that person or entity has to wait until the",
    "start": "536120",
    "end": "543200"
  },
  {
    "text": "email confirmation is sent right and then once the email is sent by the different entity okay it is sent then",
    "start": "543200",
    "end": "550519"
  },
  {
    "text": "the first entity has to move forward so there is very low degree of freedom on",
    "start": "550519",
    "end": "556880"
  },
  {
    "text": "the contrary if you look at events events are observable so you gain higher",
    "start": "556880",
    "end": "562079"
  },
  {
    "text": "degrees of freedom if a customer X has just filed a claim then the claim domain",
    "start": "562079",
    "end": "568519"
  },
  {
    "text": "can send okay the the claim has been requested or has been filed then simultaneously",
    "start": "568519",
    "end": "574519"
  },
  {
    "text": "multiple consumers can start acting on top of it right so one can say I will verify the policy details other one can",
    "start": "574519",
    "end": "581320"
  },
  {
    "text": "say okay let's go through the uploaded documents another entity can say okay let's see what are the notifications",
    "start": "581320",
    "end": "588079"
  },
  {
    "text": "that we need to send to the customer tomorrow if I want to implement",
    "start": "588079",
    "end": "593360"
  },
  {
    "text": "uh fraud service I can add that fraud service without any problem and that",
    "start": "593360",
    "end": "599959"
  },
  {
    "text": "fraud service can become uh an additional consumer that can help uh",
    "start": "599959",
    "end": "606079"
  },
  {
    "text": "with with handling fraud without affecting the claim service or the other consumers so now that we talked about",
    "start": "606079",
    "end": "613720"
  },
  {
    "text": "insurance claims as an example let's dive deeper into that use case so",
    "start": "613720",
    "end": "619120"
  },
  {
    "text": "insurance claims processing uh anybody from insurance domain okay great so you",
    "start": "619120",
    "end": "624279"
  },
  {
    "text": "already know please forgive me if I have to repeat the same just for brevity I'm I'm going through what what actual",
    "start": "624279",
    "end": "629480"
  },
  {
    "text": "Insurance Slims processing is so before you file for insurance you have to sign",
    "start": "629480",
    "end": "635279"
  },
  {
    "text": "up for insurance right any kind of insurance so you get a code from",
    "start": "635279",
    "end": "640839"
  },
  {
    "text": "different providers or different insurers you figure out what's best for you and then you provide some",
    "start": "640839",
    "end": "646800"
  },
  {
    "text": "information from your side like a driver's license or optionally you can provide an image of your car and then",
    "start": "646800",
    "end": "653399"
  },
  {
    "text": "you sign up for your insurance however Insurance actually comes comes",
    "start": "653399",
    "end": "659240"
  },
  {
    "text": "into work when you're filing a claim over the period of",
    "start": "659240",
    "end": "664959"
  },
  {
    "text": "time when you're actually having an insurance and the reason of you have an insurance in the first place is to",
    "start": "665040",
    "end": "671200"
  },
  {
    "text": "handle the worst case scenarios in life and you want to handle those worst case",
    "start": "671200",
    "end": "676399"
  },
  {
    "text": "scenarios as swiftly as possible and as fast as possible right so let's say you",
    "start": "676399",
    "end": "681680"
  },
  {
    "text": "are not you are but anybody is driving on a fine day and uh they met with an",
    "start": "681680",
    "end": "688079"
  },
  {
    "text": "accident so once they gather themselves and they are okay to start the claims",
    "start": "688079",
    "end": "695040"
  },
  {
    "text": "process they can get information about the damaged car and ultimately they file",
    "start": "695040",
    "end": "700680"
  },
  {
    "text": "a claim and this process in general is the handoff process is called first",
    "start": "700680",
    "end": "706320"
  },
  {
    "text": "notice of loss or in short it is called fnol and everybody I mean from insurance",
    "start": "706320",
    "end": "711639"
  },
  {
    "text": "domain they know what fnol is so whenever I say fnol it's first notice of loss saying that okay I lost some",
    "start": "711639",
    "end": "719000"
  },
  {
    "text": "something and this is my notice to you and start working on my claim let's look at an application that actually",
    "start": "719000",
    "end": "725120"
  },
  {
    "text": "showcases what this",
    "start": "725120",
    "end": "728120"
  },
  {
    "text": "is excuse so I have built a insurance claims processing application sample",
    "start": "735360",
    "end": "742560"
  },
  {
    "text": "where I have Incorporated like authentication and authorization I already have an account so",
    "start": "742560",
    "end": "749720"
  },
  {
    "text": "I sign up I sign into this account but I have not onboarded as a customer yet so I",
    "start": "749720",
    "end": "756480"
  },
  {
    "text": "will just allowed to get into their application so now that I'm in their",
    "start": "756480",
    "end": "763040"
  },
  {
    "text": "application let me maximize that a little",
    "start": "763040",
    "end": "767720"
  },
  {
    "text": "bit this this good okay now that I am in their",
    "start": "768079",
    "end": "773360"
  },
  {
    "text": "application and I want to actually on board so I have to provide multiple information so here is a form that you",
    "start": "773360",
    "end": "780720"
  },
  {
    "text": "see it doesn't have to be this form it can be something very uh proactive and",
    "start": "780720",
    "end": "785800"
  },
  {
    "text": "it can be done via your phone communication or via an iPhone app or",
    "start": "785800",
    "end": "791040"
  },
  {
    "text": "any device apps but just for Simplicity I've used a form and you provide your",
    "start": "791040",
    "end": "796880"
  },
  {
    "text": "information you provide make and model of your car the color of your car and the type mileage and some win",
    "start": "796880",
    "end": "803680"
  },
  {
    "text": "information right now you want to onboard that as a customer and while you",
    "start": "803680",
    "end": "808920"
  },
  {
    "text": "are providing this information you provided a wrong information about your",
    "start": "808920",
    "end": "814199"
  },
  {
    "text": "SSN so let's submit and see what happens so right away you get a",
    "start": "814199",
    "end": "823279"
  },
  {
    "text": "notification saying that your uh address or identity is",
    "start": "823279",
    "end": "831279"
  },
  {
    "text": "invalid and you get that as an event back so the event that received from the",
    "start": "831279",
    "end": "838199"
  },
  {
    "text": "backend service which says that okay immediately your address or identity information is bad so now that you fix",
    "start": "838199",
    "end": "846079"
  },
  {
    "text": "it and go ahead and submit you should be able to move forward and you get a",
    "start": "846079",
    "end": "852120"
  },
  {
    "text": "customer accepted event so I'm getting events back from the system and we'll",
    "start": "852120",
    "end": "857639"
  },
  {
    "text": "see how does it work behind the scenes but at this point of time I'm getting a customer e uh event back saying that",
    "start": "857639",
    "end": "864040"
  },
  {
    "text": "okay the customer is accepted and let's say I have to provide a driver's license information and then",
    "start": "864040",
    "end": "870120"
  },
  {
    "text": "I upload a driver's license that has to uh be uploaded and some something has to",
    "start": "870120",
    "end": "875399"
  },
  {
    "text": "happen in the background and this time when I uploaded the driver's license it processed the document",
    "start": "875399",
    "end": "881399"
  },
  {
    "text": "successfully but it immediately figured out that there is a fraud happening because in the form I used a",
    "start": "881399",
    "end": "888720"
  },
  {
    "text": "first name last name that doesn't match with the first and last name that is present in the driver's license right so",
    "start": "888720",
    "end": "896880"
  },
  {
    "text": "I did not ask as a consumer I did not ask go and check for fraud but something",
    "start": "896880",
    "end": "902320"
  },
  {
    "text": "happened behind the scenes and it did document processing and it did the fraud checking for",
    "start": "902320",
    "end": "908000"
  },
  {
    "text": "me now let's fix that okay let's say you have the right uh driver's license now",
    "start": "908000",
    "end": "913120"
  },
  {
    "text": "and you upload it so you will see again a document processing happening so a document",
    "start": "913120",
    "end": "919399"
  },
  {
    "text": "processed event comes back saying that okay your driver's license are processed successfully and this time there was no",
    "start": "919399",
    "end": "925000"
  },
  {
    "text": "fraud detected now let's go and upload an image of your if I choose a color of a",
    "start": "925000",
    "end": "931199"
  },
  {
    "text": "car which did not match with the form that I previously provided it'll again do the same thing fraud detection so",
    "start": "931199",
    "end": "937759"
  },
  {
    "text": "right now I have used the color as green so let's go ahead and use a green color image and upload so you see you should",
    "start": "937759",
    "end": "945399"
  },
  {
    "text": "see the document processing event always comes up as in when I type or upload a",
    "start": "945399",
    "end": "950920"
  },
  {
    "text": "driver's license or a car image so as soon as document processing happens",
    "start": "950920",
    "end": "956240"
  },
  {
    "text": "fraud wakes up and checks whether any fraud is happening or not this time if there is no",
    "start": "956240",
    "end": "961440"
  },
  {
    "text": "fraud so now that you have onboarded as a customer assume that uh sometime in",
    "start": "961440",
    "end": "968000"
  },
  {
    "text": "future uh that you have to file a claim and then again you provide all those information that you need or the",
    "start": "968000",
    "end": "973920"
  },
  {
    "text": "description the other parties insurance information your driver's license Etc",
    "start": "973920",
    "end": "979480"
  },
  {
    "text": "and you submit a claim now when you submit a claim the same process happens figures out whether it's a valid claim",
    "start": "979480",
    "end": "985440"
  },
  {
    "text": "or not and then a claim is accepted or rejected in this case it is accepted because all of the information I",
    "start": "985440",
    "end": "991360"
  },
  {
    "text": "provided was good enough again if I choose a damaged car",
    "start": "991360",
    "end": "996639"
  },
  {
    "text": "to upload and if I use a car that doesn't have a damage or it doesn't match with the color that I have in my",
    "start": "996639",
    "end": "1002639"
  },
  {
    "text": "policy you can trigger a fraud notification but let's go with the green car carard that is damaged and upload it",
    "start": "1002639",
    "end": "1009279"
  },
  {
    "text": "so if you see constantly I call document processing every time I upload something a document gets",
    "start": "1009279",
    "end": "1015160"
  },
  {
    "text": "processed but at the same time something happened pretty rapidly",
    "start": "1015160",
    "end": "1020399"
  },
  {
    "text": "that is like when I process the document it figured out the color of the car is green it figured out that the damage is",
    "start": "1020399",
    "end": "1027199"
  },
  {
    "text": "a bumper dent and this is not hardcoded actually this is coming from recognition custom label it figures out the image of",
    "start": "1027199",
    "end": "1033798"
  },
  {
    "text": "the car and checks what is the color of the car and what is the whether it has a dent or whether it has some other",
    "start": "1033799",
    "end": "1040438"
  },
  {
    "text": "problem once it once the fraud is not detected at this point of time you can see different other domains actually",
    "start": "1040439",
    "end": "1047319"
  },
  {
    "text": "started working independent L you saw this these two cards settlement finalized and vendor finalized",
    "start": "1047319",
    "end": "1053960"
  },
  {
    "text": "immediately popped up right so settlement finalized is a different domain that was looking for fraud not",
    "start": "1053960",
    "end": "1060520"
  },
  {
    "text": "detected and then immediately kicked off and figured out okay based on the analysis we can settle it for $100 out",
    "start": "1060520",
    "end": "1068000"
  },
  {
    "text": "of pocket for you as soon as settlement finalized event comes in Vendor",
    "start": "1068000",
    "end": "1073080"
  },
  {
    "text": "finalized vendor service wakes up and tries to find a vendor a rental car vendor for for you while your car is",
    "start": "1073080",
    "end": "1079440"
  },
  {
    "text": "being fixed so all those events that came in from different domain now let's see how actually it works uh behind the",
    "start": "1079440",
    "end": "1088200"
  },
  {
    "text": "scenes so what we saw is different API sign up API and then fanol API for",
    "start": "1096280",
    "end": "1102360"
  },
  {
    "text": "filing the claim we have document service for processing documents and different other business domains in the",
    "start": "1102360",
    "end": "1108440"
  },
  {
    "text": "right hand side marked as blue boxes so the first thing that we saw was a sign",
    "start": "1108440",
    "end": "1114360"
  },
  {
    "text": "up API that is where we did a API call sttp Api call to sign up and once we",
    "start": "1114360",
    "end": "1119799"
  },
  {
    "text": "signed up that customer API call become a customer submitted event and we have",
    "start": "1119799",
    "end": "1125480"
  },
  {
    "text": "the event broker in between that routered that customer submitted event to the particular domain called customer",
    "start": "1125480",
    "end": "1132600"
  },
  {
    "text": "service based on a rule we'll talk about what that is now once customer is is",
    "start": "1132600",
    "end": "1138520"
  },
  {
    "text": "accepted that event is again sent back to the broker and there is a rule that",
    "start": "1138520",
    "end": "1144600"
  },
  {
    "text": "is defined in the broker that anytime any event comes as customer accepted or rejected notification service has to",
    "start": "1144600",
    "end": "1151720"
  },
  {
    "text": "pick that up and send it back to the customer now after we signed up I",
    "start": "1151720",
    "end": "1158320"
  },
  {
    "text": "uploaded an image of my driver's license and car again that converted to an event what is object created event from S3",
    "start": "1158320",
    "end": "1165280"
  },
  {
    "text": "bucket that's where document service kick top and then it started working on the document and document is processed",
    "start": "1165280",
    "end": "1172000"
  },
  {
    "text": "you'll see the document processed event went at the same time to notification Service as well as to the fraud",
    "start": "1172000",
    "end": "1179480"
  },
  {
    "text": "service you don't you didn't control that asynchronously it it happened so now fraud service is interested every",
    "start": "1179480",
    "end": "1186240"
  },
  {
    "text": "time a document gets processed I need to wake up and I need to figure out if there is any document fraud happening or",
    "start": "1186240",
    "end": "1192120"
  },
  {
    "text": "not so this time when the document was processed there was some fraud detected",
    "start": "1192120",
    "end": "1197640"
  },
  {
    "text": "because we used the wrong driver's license now that we fixed it let's move on to the next step the next step is we",
    "start": "1197640",
    "end": "1204400"
  },
  {
    "text": "went and did a fnol call like a claims processing like initiate the claim the",
    "start": "1204400",
    "end": "1211679"
  },
  {
    "text": "same thing happened the claim requested event gets transformed uh to a event broker and then that request gets to a",
    "start": "1211679",
    "end": "1219320"
  },
  {
    "text": "claim service based on a rule and then the notification went back to the",
    "start": "1219320",
    "end": "1224679"
  },
  {
    "text": "browser in this case the client which says claim is at accepted then we uploaded a damage car",
    "start": "1224679",
    "end": "1232120"
  },
  {
    "text": "document the same process of document processing like uh object created event",
    "start": "1232120",
    "end": "1237600"
  },
  {
    "text": "and document service actually worked on that event and document processed now fraud kicked off fraud is this time",
    "start": "1237600",
    "end": "1245039"
  },
  {
    "text": "there was no fraud detected as soon as the fraud was not detected settlement service W woke up and wanted to settle",
    "start": "1245039",
    "end": "1252559"
  },
  {
    "text": "the uh the whole claim what he didn't see here is how vendor service wakes",
    "start": "1252559",
    "end": "1258480"
  },
  {
    "text": "wakes up as soon as settlement finalized event comes in Vendor service can subscribe to that event and finalize the",
    "start": "1258480",
    "end": "1265559"
  },
  {
    "text": "vendor this QR code is to a Blog that explains each domain and it is a",
    "start": "1265559",
    "end": "1271840"
  },
  {
    "text": "three-part series blog but you can start from this and you can learn how uh the third part is one which is very crucial",
    "start": "1271840",
    "end": "1278360"
  },
  {
    "text": "to our discussion today okay so let's talk about the event",
    "start": "1278360",
    "end": "1284520"
  },
  {
    "text": "broker a little bit in this sample application that I showed you I have used Amazon event Bridge as the event",
    "start": "1284520",
    "end": "1290640"
  },
  {
    "text": "broker so as we know Amazon event Bridge provides you the capability to decouple",
    "start": "1290640",
    "end": "1297240"
  },
  {
    "text": "producers from consumer by creating your own custom event buses for your domain if you want to and if you don't want to",
    "start": "1297240",
    "end": "1303440"
  },
  {
    "text": "use the default event bus and then you have multiple services on the on the left that can integrate with or push",
    "start": "1303440",
    "end": "1310320"
  },
  {
    "text": "events to event Bridge custom event bus you have multiple rules that you can Define in your event Ridge uh C custom",
    "start": "1310320",
    "end": "1318240"
  },
  {
    "text": "event bus and then you can trigger some targets so those event sources can be",
    "start": "1318240",
    "end": "1323880"
  },
  {
    "text": "your actual application like for me it was the uh front-end application that or",
    "start": "1323880",
    "end": "1329640"
  },
  {
    "text": "the application the which was hosting the signup API or fol API that was",
    "start": "1329640",
    "end": "1334760"
  },
  {
    "text": "converting the incoming payload to a event object and pushing it to the event broker and then inside my event bridge I",
    "start": "1334760",
    "end": "1343039"
  },
  {
    "text": "have a custom event bus called claims processing bus that was picking up and I have different rules if I get a customer",
    "start": "1343039",
    "end": "1350480"
  },
  {
    "text": "submitted event I have a Target that goes and calls customer service if I",
    "start": "1350480",
    "end": "1356360"
  },
  {
    "text": "have a claims requested event I have a Target that goes and calls claims service so and my targets can be",
    "start": "1356360",
    "end": "1364080"
  },
  {
    "text": "anything so let's look at how event driven across compute happens so if I",
    "start": "1364080",
    "end": "1369760"
  },
  {
    "text": "dive deeper one level down and look at the claim service part when an fanol API",
    "start": "1369760",
    "end": "1376640"
  },
  {
    "text": "called got called and claim requested event is uh delivered to uh the event",
    "start": "1376640",
    "end": "1383080"
  },
  {
    "text": "bus I have a rule that triggers claim service in claim service I have sqs q in",
    "start": "1383080",
    "end": "1388279"
  },
  {
    "text": "the front and it makes perfect sense to put an Que in claim service",
    "start": "1388279",
    "end": "1394360"
  },
  {
    "text": "because in a in an event let's say there is icing on the road or there is a",
    "start": "1394360",
    "end": "1399799"
  },
  {
    "text": "catastrophe like earthquake or flooding suddenly you will get like a spike of",
    "start": "1399799",
    "end": "1405559"
  },
  {
    "text": "events or claim requests you don't want the underlying Lambda function or the",
    "start": "1405559",
    "end": "1411600"
  },
  {
    "text": "underlying business logic to get overwhelmed that's why the sqs makes more sense here so you put this event uh",
    "start": "1411600",
    "end": "1419240"
  },
  {
    "text": "store and Lambda function uh behind the scene can actually pull from the dqs Q",
    "start": "1419240",
    "end": "1425080"
  },
  {
    "text": "and work on it uh what is Lambda function it's pretty basic I think throughout the day",
    "start": "1425080",
    "end": "1430600"
  },
  {
    "text": "you have heard about it a lot it's just a function as a service you provide your business logic you can trigger that",
    "start": "1430600",
    "end": "1437000"
  },
  {
    "text": "function based on an event and then once your Lambda function is triggered you can have business logic",
    "start": "1437000",
    "end": "1444400"
  },
  {
    "text": "that can integrate with other services too it can be S3 buckets dynamodb",
    "start": "1444400",
    "end": "1450400"
  },
  {
    "text": "database or any AIML endpoints then let's dive deeper into",
    "start": "1450400",
    "end": "1457520"
  },
  {
    "text": "document service in document service I had even driven setup with step functions anytime uh you upload an image",
    "start": "1457520",
    "end": "1465640"
  },
  {
    "text": "for policies like your driver's license or car it get up it got updated to a bucket",
    "start": "1465640",
    "end": "1471760"
  },
  {
    "text": "and then that triggered an event to the default event bus document service state machine was looking for that event and",
    "start": "1471760",
    "end": "1477799"
  },
  {
    "text": "then worked on it figured out if it is a driver's license or a car if it is a driver's license go to text trct and",
    "start": "1477799",
    "end": "1485440"
  },
  {
    "text": "give me a structured data of driver's license if it is a car image you go to",
    "start": "1485440",
    "end": "1490760"
  },
  {
    "text": "recognition custom lables and give me the color of the car or if they have any damages or not and then ultimately",
    "start": "1490760",
    "end": "1496440"
  },
  {
    "text": "document service public publishes an event to back to the custom event",
    "start": "1496440",
    "end": "1501880"
  },
  {
    "text": "bus so this is the state machine that uh looks like how it did with the document",
    "start": "1501880",
    "end": "1507880"
  },
  {
    "text": "service if you must have heard this step functions all across throughout the day-to-day in on a like on a brief note",
    "start": "1507880",
    "end": "1514880"
  },
  {
    "text": "it's actually a resilient workflow automation service available in AWS the",
    "start": "1514880",
    "end": "1519960"
  },
  {
    "text": "good part with uh AWS St functions is you can declaratively Define how your",
    "start": "1519960",
    "end": "1525159"
  },
  {
    "text": "workflow should do or should work you can have uh error handling that is",
    "start": "1525159",
    "end": "1530200"
  },
  {
    "text": "built in and you you can just declaratively provide what should be my error handling uh strategy and then you",
    "start": "1530200",
    "end": "1536080"
  },
  {
    "text": "can keep on going you have AWS integration auditable history and so so",
    "start": "1536080",
    "end": "1541720"
  },
  {
    "text": "forth then let's dive deeper on the settlement service so this is the third",
    "start": "1541720",
    "end": "1547039"
  },
  {
    "text": "part of the blog I was talking about this this actually talks about how you can bring continer workloads so let's",
    "start": "1547039",
    "end": "1554240"
  },
  {
    "text": "assume for a second that settlement service is something that we added later",
    "start": "1554240",
    "end": "1559320"
  },
  {
    "text": "to this whole setup and the settlement service domain or the team has built",
    "start": "1559320",
    "end": "1564399"
  },
  {
    "text": "settlement service using ECS fargate using a spring boot application and they",
    "start": "1564399",
    "end": "1569880"
  },
  {
    "text": "are having an API Gateway at this point so they have a API endpoint and any",
    "start": "1569880",
    "end": "1575360"
  },
  {
    "text": "microservices interaction has to happen through API endpoint so but the",
    "start": "1575360",
    "end": "1580399"
  },
  {
    "text": "requirement is that settlement service now has to integrate with what we have today as an even driven architecture so",
    "start": "1580399",
    "end": "1587159"
  },
  {
    "text": "the way it can be easily done without any major change in code in settlement",
    "start": "1587159",
    "end": "1593320"
  },
  {
    "text": "service is when you bring in the uh event publisher side and when you show",
    "start": "1593320",
    "end": "1600200"
  },
  {
    "text": "that fraud service has fraud not detected event set up or it has",
    "start": "1600200",
    "end": "1605480"
  },
  {
    "text": "emitted that event can be picked up by Amazon event bridge and the existing Endo for",
    "start": "1605480",
    "end": "1612880"
  },
  {
    "text": "settlement service can be invoked from even Bridge as as an API",
    "start": "1612880",
    "end": "1619080"
  },
  {
    "text": "destination so the only change you have to do at the end of the day is somewhere in the AWS vate service or your spring",
    "start": "1619080",
    "end": "1625559"
  },
  {
    "text": "boot application you have to emit an event back saying that settlement has been",
    "start": "1625559",
    "end": "1631399"
  },
  {
    "text": "finalized everything else stays the same so this is one of the good way to uh",
    "start": "1631399",
    "end": "1636799"
  },
  {
    "text": "reuse what you have today without rewriting uh majority of your code in",
    "start": "1636799",
    "end": "1642080"
  },
  {
    "text": "existing domains then let's talk about uh the underlying compute what we",
    "start": "1642080",
    "end": "1648919"
  },
  {
    "text": "have so AWS fargate on Amazon ECS provides you this capability if you're",
    "start": "1648919",
    "end": "1653960"
  },
  {
    "text": "using fargate this sample application that I showed you us a spring boot application on ECS fate and uh I was",
    "start": "1653960",
    "end": "1661720"
  },
  {
    "text": "able to run it without thinking about uh provisioning any uh instances no uh",
    "start": "1661720",
    "end": "1667880"
  },
  {
    "text": "thought process behind uh container upgrades Etc and I actually have used",
    "start": "1667880",
    "end": "1673440"
  },
  {
    "text": "spot and graviton savings as well in the sample application so you get get all those niceties when you're using ECS uh",
    "start": "1673440",
    "end": "1681720"
  },
  {
    "text": "fargate let's talk about vendor service who is using eks today in the",
    "start": "1681720",
    "end": "1687480"
  },
  {
    "text": "organization anybody using eks so you will love this this is not limited to ECS fogget",
    "start": "1687480",
    "end": "1694039"
  },
  {
    "text": "or Lambda function you can be even driven with eks so assume the same scenario with settlement service what we",
    "start": "1694039",
    "end": "1700440"
  },
  {
    "text": "had you have think of vendor service which takes an API call it fans out to",
    "start": "1700440",
    "end": "1707480"
  },
  {
    "text": "different rental car companies and figures out what is the best code gets back the information and figures out",
    "start": "1707480",
    "end": "1713679"
  },
  {
    "text": "which rental car company should serve the request for this particular claim it is an end point as of today how do we",
    "start": "1713679",
    "end": "1720159"
  },
  {
    "text": "integrate that with an new event driven architecture this is another pattern so",
    "start": "1720159",
    "end": "1726880"
  },
  {
    "text": "you got an event to event bus which is settlement finalized now settlement",
    "start": "1726880",
    "end": "1732320"
  },
  {
    "text": "finalized event can have an sqs as the Target and then you'll you see a small",
    "start": "1732320",
    "end": "1738360"
  },
  {
    "text": "icon here called kada that can run on your eks cluster that can look for those",
    "start": "1738360",
    "end": "1744960"
  },
  {
    "text": "events or their messages in the sqsq and then scale your application running on",
    "start": "1744960",
    "end": "1751720"
  },
  {
    "text": "eks right and then you can do the same thing you can have you can emit events",
    "start": "1751720",
    "end": "1757200"
  },
  {
    "text": "back as vend they finalized so what is kada so you can go to this uh their",
    "start": "1757200",
    "end": "1764799"
  },
  {
    "text": "website karsh it's a kubernetes even driven autoscaling it's uh you can easily start",
    "start": "1764799",
    "end": "1772120"
  },
  {
    "text": "with kada if you are thinking about even driven applications so you can scale containers in kues or Amazon",
    "start": "1772120",
    "end": "1780480"
  },
  {
    "text": "eks it's fully even driven the reason I say fully even driven is because you",
    "start": "1780480",
    "end": "1786039"
  },
  {
    "text": "want your applications running on eks your deployments running on eks to Scale",
    "start": "1786039",
    "end": "1791720"
  },
  {
    "text": "based on the events that you have instead of the CPU Capac capacity or the",
    "start": "1791720",
    "end": "1797960"
  },
  {
    "text": "CPU requirements or the sttp requirements API calls coming in so now that we are not looking at HTTP API",
    "start": "1797960",
    "end": "1805840"
  },
  {
    "text": "calls we're looking at an sqs where eks application has to pull from kada gives",
    "start": "1805840",
    "end": "1812240"
  },
  {
    "text": "a nice feature called scalers they are built in in kada and you can Define that",
    "start": "1812240",
    "end": "1818720"
  },
  {
    "text": "as a scaler you can Define sqs as a scaler and say that if my Q length in",
    "start": "1818720",
    "end": "1823960"
  },
  {
    "text": "sqs goes above five I want to scale scale my deployments this",
    "start": "1823960",
    "end": "1830159"
  },
  {
    "text": "way make sense okay so there are different a",
    "start": "1830159",
    "end": "1835559"
  },
  {
    "text": "Services support available in kada you have sqs you have Kinesis data streams you have Dynamo DB you have Dynamo DB",
    "start": "1835559",
    "end": "1842320"
  },
  {
    "text": "streams so if you have existing applications running on eks or communities in general and you want to",
    "start": "1842320",
    "end": "1849200"
  },
  {
    "text": "integrate with AWS Cloud native services that are even driven this is a really",
    "start": "1849200",
    "end": "1854320"
  },
  {
    "text": "good mechanism for you to scale your applications I built this application using eks and",
    "start": "1854320",
    "end": "1862000"
  },
  {
    "text": "um and kada and AWS cdk if you know cdk anybody using cdk okay it's a cloud",
    "start": "1862000",
    "end": "1868960"
  },
  {
    "text": "development kit where you can Define infrastructure as uh code written in the language of your choice so I chose",
    "start": "1868960",
    "end": "1876000"
  },
  {
    "text": "typescript uh what I have here on the top is the cluster created already and",
    "start": "1876000",
    "end": "1881279"
  },
  {
    "text": "then I am adding kada as a home chart to the cluster and then I Define the scaled",
    "start": "1881279",
    "end": "1887799"
  },
  {
    "text": "object that kada needs uh the kind is scaled object and then I make sure that",
    "start": "1887799",
    "end": "1894240"
  },
  {
    "text": "what I want to scale it's a kubernetes deployment I want to scale and on what",
    "start": "1894240",
    "end": "1900320"
  },
  {
    "text": "trigger I want to scale in this case the trigger is sqs and I want to scale this",
    "start": "1900320",
    "end": "1906720"
  },
  {
    "text": "based on the Q depth of the Q that I have integrated with right and then if I",
    "start": "1906720",
    "end": "1912960"
  },
  {
    "text": "want any authentication that uh kada has to use by default I believe it uses uh",
    "start": "1912960",
    "end": "1919080"
  },
  {
    "text": "the pods identity uh owner you can change that and move to something",
    "start": "1919080",
    "end": "1926480"
  },
  {
    "text": "else so what are the benefits uh that we see when we choose architectures like",
    "start": "1926480",
    "end": "1932480"
  },
  {
    "text": "this using event driven right so first of all we saw that it's an extensible",
    "start": "1932480",
    "end": "1939399"
  },
  {
    "text": "architecture this is what I had like at least two months ago with settlement",
    "start": "1939399",
    "end": "1945120"
  },
  {
    "text": "service running on ECS 5 Target and everything else it took me less than 2",
    "start": "1945120",
    "end": "1951919"
  },
  {
    "text": "days assuming that I did not work 8 hours a day to add vendor service to",
    "start": "1951919",
    "end": "1957279"
  },
  {
    "text": "this whole setup without touching any other service I was able to add vendor service",
    "start": "1957279",
    "end": "1964480"
  },
  {
    "text": "which runs on eks without touching any other service that's that's a huge thing",
    "start": "1964480",
    "end": "1969600"
  },
  {
    "text": "right your think about your testing cycle think about if something fails in Vendor service you don't have to worry",
    "start": "1969600",
    "end": "1975559"
  },
  {
    "text": "about whether it affects F my document service or whether it's affect my customer service Etc so that is a very",
    "start": "1975559",
    "end": "1981880"
  },
  {
    "text": "powerful feature you have to be you have to be very",
    "start": "1981880",
    "end": "1987519"
  },
  {
    "text": "uh cognizant of how this can actually be uh very powerful going forward in your",
    "start": "1987519",
    "end": "1995639"
  },
  {
    "text": "applications it facilitates polyl architecture also right if you have different teams and those teams they",
    "start": "1996080",
    "end": "2002919"
  },
  {
    "text": "want to use different languages of choice for different domains they can very well use because what we are",
    "start": "2002919",
    "end": "2009600"
  },
  {
    "text": "talking about your language between those themes is events you give me event of type this with this schema I can",
    "start": "2009600",
    "end": "2016159"
  },
  {
    "text": "subscribe to event of type this schema so when you treat events as your first class citizen you rely on a language you",
    "start": "2016159",
    "end": "2023960"
  },
  {
    "text": "rely on a schema then the underlying language of choice be it java. net or",
    "start": "2023960",
    "end": "2029799"
  },
  {
    "text": "typescript or uh python doesn't matter you can have uh this uh",
    "start": "2029799",
    "end": "2035919"
  },
  {
    "text": "integration very cohesive Insurance domain sees third",
    "start": "2035919",
    "end": "2041639"
  },
  {
    "text": "party integration a lot so if again if you have you have seen third party",
    "start": "2041639",
    "end": "2047480"
  },
  {
    "text": "Integrations coming up a lot the same way we added uh ECS fet service with API",
    "start": "2047480",
    "end": "2053520"
  },
  {
    "text": "destination Amazon event Bridge API destination can be used to integrate with third party services that are",
    "start": "2053520",
    "end": "2059000"
  },
  {
    "text": "outside of AWS right so you call uh an API",
    "start": "2059000",
    "end": "2064200"
  },
  {
    "text": "destination which the API that the third party service has provided and then you provide a web hook right now you can",
    "start": "2064200",
    "end": "2071158"
  },
  {
    "text": "provide an API Gateway endpoint as a web hook which they will call once they are done with their work and you can convert",
    "start": "2071159",
    "end": "2077839"
  },
  {
    "text": "that API Gateway end point the payload that comes in to a put event and put it",
    "start": "2077839",
    "end": "2083358"
  },
  {
    "text": "back into the system that you already know so now you are converting sttp",
    "start": "2083359",
    "end": "2088919"
  },
  {
    "text": "request back into the event and once it is converted to an event and you have put that in event Bridge you are back in",
    "start": "2088919",
    "end": "2094480"
  },
  {
    "text": "the game the whole system so what are the major takeaways if you",
    "start": "2094480",
    "end": "2100359"
  },
  {
    "text": "want to look at it's a very extensible architecture if I want to build two more services in",
    "start": "2100359",
    "end": "2108320"
  },
  {
    "text": "addition to vendor service it'll take drastically less time for me to build so",
    "start": "2108320",
    "end": "2114000"
  },
  {
    "text": "highly extensible architecture based on events polyot",
    "start": "2114000",
    "end": "2119960"
  },
  {
    "text": "implementation because different teams you don't have to fight for it has to be Java it has to be rust it has to be",
    "start": "2119960",
    "end": "2125400"
  },
  {
    "text": "something else it it doesn't matter as long as you publish And subscribe",
    "start": "2125400",
    "end": "2130640"
  },
  {
    "text": "events you can orchestrate whenever necessary like in this case I'm",
    "start": "2130640",
    "end": "2136320"
  },
  {
    "text": "orchestrating using step functions for document service and I can extend this",
    "start": "2136320",
    "end": "2141520"
  },
  {
    "text": "to include new features like I just talked about generative Ai and serverless if I want to extend this",
    "start": "2141520",
    "end": "2147520"
  },
  {
    "text": "document processing to involve or add any generative AI specific components I can do that very easily without",
    "start": "2147520",
    "end": "2154760"
  },
  {
    "text": "affecting customer service or without affecting fraud service on none of the other",
    "start": "2154760",
    "end": "2160960"
  },
  {
    "text": "consumers and then it did not matter whether I choose",
    "start": "2165280",
    "end": "2171079"
  },
  {
    "text": "Lambda as the computer or ACS fet or eks so you have seamlessly integrate with",
    "start": "2171079",
    "end": "2176880"
  },
  {
    "text": "the existing workload if you don't have the need to recreate what uh settlement service is",
    "start": "2176880",
    "end": "2184280"
  },
  {
    "text": "doing today or vendor service is doing today you can just bring those workloads closer to this EDS setup by just making",
    "start": "2184280",
    "end": "2191760"
  },
  {
    "text": "sure that these uh API destinations and events are being consumed by using something like",
    "start": "2191760",
    "end": "2198359"
  },
  {
    "text": "kada last but not the least and this is the most important part is that we have",
    "start": "2198359",
    "end": "2203480"
  },
  {
    "text": "reduced the area of impact right so when you reduce the area",
    "start": "2203480",
    "end": "2209200"
  },
  {
    "text": "of impact it means that when I added vendor service it did not affect any other system which means I can do a lot",
    "start": "2209200",
    "end": "2216079"
  },
  {
    "text": "with that c capability I can have multiple teams running or working simultaneously that can add stuff to",
    "start": "2216079",
    "end": "2222800"
  },
  {
    "text": "this setup without drastically affecting it some of the other Eda patterns with",
    "start": "2222800",
    "end": "2230040"
  },
  {
    "text": "containers you can see on AWS is like uh how do you want to orchestrate containers for large scale data",
    "start": "2230040",
    "end": "2236599"
  },
  {
    "text": "processing right let's say you have documents and document gets uploaded to",
    "start": "2236599",
    "end": "2242560"
  },
  {
    "text": "Amazon S3 which triggers an event to event bridge and then even Bridge triggers a step function where you want",
    "start": "2242560",
    "end": "2251000"
  },
  {
    "text": "to pre-process something and then you want to call an existing service where",
    "start": "2251000",
    "end": "2258599"
  },
  {
    "text": "you're already processing some data and that service might be running on Amazon eks again the kada story comes into",
    "start": "2258599",
    "end": "2265079"
  },
  {
    "text": "picture you can use kada to scale now I have used sqs as the mechanism there and",
    "start": "2265079",
    "end": "2270560"
  },
  {
    "text": "as well as here in this case sqs is used inside the state machine as in when I",
    "start": "2270560",
    "end": "2275880"
  },
  {
    "text": "push even to sqs using a distributed map in Step functions K do can help scale",
    "start": "2275880",
    "end": "2285000"
  },
  {
    "text": "the Run job the process run job running on eks now I've used one of the capability",
    "start": "2285000",
    "end": "2291359"
  },
  {
    "text": "of Step functions called wait for task token where I'm waiting the state function step function will wait until",
    "start": "2291359",
    "end": "2297520"
  },
  {
    "text": "the process run job is complete the process run job sends a task success and",
    "start": "2297520",
    "end": "2302720"
  },
  {
    "text": "then it moves on to the next step the next step is again if you have an existing system running on eks you can",
    "start": "2302720",
    "end": "2310240"
  },
  {
    "text": "do the same thing for uh like reconciling everything that you built",
    "start": "2310240",
    "end": "2315800"
  },
  {
    "text": "earlier using distributed map and then put it in a different S3 bucket or send a",
    "start": "2315800",
    "end": "2322240"
  },
  {
    "text": "response so how can the other one of the pattern is eest task that are triggered as an even Bridge rule",
    "start": "2322240",
    "end": "2328319"
  },
  {
    "text": "Target you can have a single eest task invoked based on a",
    "start": "2328319",
    "end": "2334280"
  },
  {
    "text": "schedule right so if you have a task you have even with schuer you can directly",
    "start": "2334280",
    "end": "2339880"
  },
  {
    "text": "uh schedule run this task at 9:00 a.m. or 9:00 p.m. you can have ECS task uh",
    "start": "2339880",
    "end": "2345720"
  },
  {
    "text": "triggered not just a single task you can have multiple task triggered using schul even with",
    "start": "2345720",
    "end": "2353599"
  },
  {
    "text": "schedular the difference here is you have to send that event to a default event bus and Define a rule that can fan",
    "start": "2353599",
    "end": "2361440"
  },
  {
    "text": "out to multiple ECS tasks that can do two different or three different jobs for you",
    "start": "2361440",
    "end": "2368440"
  },
  {
    "text": "let's talk about streams and cues triggering and scaling Amazon e deployments so we saw uh the Q example",
    "start": "2371400",
    "end": "2379119"
  },
  {
    "text": "in both both the cases but uh you can also do the same thing with Dynamo DB",
    "start": "2379119",
    "end": "2385000"
  },
  {
    "text": "streams and this is how the triggers will look like in your kada scaled objects you have to define the type and",
    "start": "2385000",
    "end": "2392079"
  },
  {
    "text": "you have to define the metadata where it asks for the table name and the Shard count so these are the deciding factor",
    "start": "2392079",
    "end": "2398960"
  },
  {
    "text": "for how you want to scale your uh kubernetes deployments same with",
    "start": "2398960",
    "end": "2406520"
  },
  {
    "text": "uh Kinesis data streams all you need to do is change the trigger type to Amazon",
    "start": "2406520",
    "end": "2412480"
  },
  {
    "text": "Kinesis streams and you define The Shard count Define the Reon uh region where",
    "start": "2412480",
    "end": "2417560"
  },
  {
    "text": "the stream is present and the stream name this is something we just saw with",
    "start": "2417560",
    "end": "2424839"
  },
  {
    "text": "sqsq so all it matters is uh the power you get is the declarative way to figure",
    "start": "2424839",
    "end": "2430720"
  },
  {
    "text": "out which uh Event Source that you want to use and Define that as a trigger if",
    "start": "2430720",
    "end": "2436240"
  },
  {
    "text": "you want to use kada on your",
    "start": "2436240",
    "end": "2439480"
  },
  {
    "text": "eks we saw this example as well like we have events to private endpoints like in",
    "start": "2443960",
    "end": "2450200"
  },
  {
    "text": "the uh settlement service example you have even Bridge calling an API endpoint",
    "start": "2450200",
    "end": "2456599"
  },
  {
    "text": "and you have private resources or applications running in your private",
    "start": "2456599",
    "end": "2461880"
  },
  {
    "text": "subnet there are existing patterns that are available when you're using EK sorry ECS with Amazon sorry AWS cdk and those",
    "start": "2463960",
    "end": "2473079"
  },
  {
    "text": "patterns will help you to actually build the scaling capability based on",
    "start": "2473079",
    "end": "2478760"
  },
  {
    "text": "whichever Event Source that you choose so if you take the example of sqs and uh Amazon",
    "start": "2478760",
    "end": "2484720"
  },
  {
    "text": "ECS you have this Q processing fargate Service as a construct as a cdk",
    "start": "2484720",
    "end": "2490680"
  },
  {
    "text": "construct that allows you to create a L3 construct and then you can Scale based",
    "start": "2490680",
    "end": "2497640"
  },
  {
    "text": "on the approximate number of messages that are visible in the queue that's a metric that sqs provides",
    "start": "2497640",
    "end": "2503680"
  },
  {
    "text": "you and then you can distribute uh between using on demand or spot forgate",
    "start": "2503680",
    "end": "2511200"
  },
  {
    "text": "spot or forgate on demand so these are some nics as a as a patter pattern that",
    "start": "2511200",
    "end": "2516560"
  },
  {
    "text": "is available for you now this is my favorite",
    "start": "2516560",
    "end": "2521920"
  },
  {
    "text": "part anybody using hexagonal architecture okay uh just a brief",
    "start": "2521920",
    "end": "2528480"
  },
  {
    "text": "introduction to what hexagonal architecture is hexagonal architectures allows you to write your",
    "start": "2528480",
    "end": "2534160"
  },
  {
    "text": "business logic it can be either a spring boot nodejs application python or flask",
    "start": "2534160",
    "end": "2540200"
  },
  {
    "text": "application and defines some abstraction on top of it that is your main business",
    "start": "2540200",
    "end": "2546240"
  },
  {
    "text": "business logic that's your domain that's your core domain that you maintain the abstractions are like you have the",
    "start": "2546240",
    "end": "2552599"
  },
  {
    "text": "domain now you need ports ports is actually the abstraction",
    "start": "2552599",
    "end": "2558680"
  },
  {
    "text": "that helps anybody can call to this domain via ports now in order for",
    "start": "2558680",
    "end": "2565079"
  },
  {
    "text": "anybody to access the ports you need some adapters right so those adapters right",
    "start": "2565079",
    "end": "2571960"
  },
  {
    "text": "now let's say I have a spring boot application running on ECS fate right now I have an",
    "start": "2571960",
    "end": "2579119"
  },
  {
    "text": "adapter that looks at sttp events or sttp endpoint so let's say you have a",
    "start": "2579119",
    "end": "2585000"
  },
  {
    "text": "put request for order it'll have an sttp adapter and then it connects the port",
    "start": "2585000",
    "end": "2591720"
  },
  {
    "text": "and then the business logic doesn't care whether it whether it came from an sttp endpoint or somewhere else it gets a",
    "start": "2591720",
    "end": "2600160"
  },
  {
    "text": "object it does its work returns back an object as a response right that",
    "start": "2600160",
    "end": "2607000"
  },
  {
    "text": "abstraction the business logic is totally abstracted from whoever is calling it it can be HTP endpoint today",
    "start": "2607000",
    "end": "2613000"
  },
  {
    "text": "it can be something else tomorrow so in this case the HTTP endpoint is a primary adapter one of the secondary adapter can",
    "start": "2613000",
    "end": "2621240"
  },
  {
    "text": "be a Dynamo DB database where I want to put item right so I can build adapter",
    "start": "2621240",
    "end": "2627440"
  },
  {
    "text": "specific to Dynamo DB which the domain underneath doesn't have to know whether",
    "start": "2627440",
    "end": "2633319"
  },
  {
    "text": "it's persisting data to Dynamo DB or relational database Etc so that's the",
    "start": "2633319",
    "end": "2640200"
  },
  {
    "text": "abstraction that you get so your domain logic becomes very portable I can run this in ECS today I can move this",
    "start": "2640200",
    "end": "2646240"
  },
  {
    "text": "architecture to eks I can move this to Lambda function whatever as long as my domain logic is abstracted away from",
    "start": "2646240",
    "end": "2653400"
  },
  {
    "text": "whoever is accessing it so if this is the current setup that we saw with settlement service and uh vendor",
    "start": "2653400",
    "end": "2660760"
  },
  {
    "text": "service I can write a new adapter for Amazon Bridge putting a message or or an",
    "start": "2660760",
    "end": "2668640"
  },
  {
    "text": "or event in sqs and then I have an adapter that is an sqs subscriber",
    "start": "2668640",
    "end": "2674480"
  },
  {
    "text": "adapter in my application without touching the business logic I haven't touched the business logic yet so I add",
    "start": "2674480",
    "end": "2680760"
  },
  {
    "text": "an adapter and then I have another adapter that sends the order completed event",
    "start": "2680760",
    "end": "2686839"
  },
  {
    "text": "back to event Bridge so without changing business logic just by adding new",
    "start": "2686839",
    "end": "2694040"
  },
  {
    "text": "adapters I'm able to make an existing containerized",
    "start": "2694040",
    "end": "2700000"
  },
  {
    "text": "application who was taking care of restful API endpoints make that work",
    "start": "2700000",
    "end": "2705400"
  },
  {
    "text": "with event driven setup so now I have a event driven application in container",
    "start": "2705400",
    "end": "2711319"
  },
  {
    "text": "without making major change in my business logic so it used to be slash order put request now it is order",
    "start": "2711319",
    "end": "2718240"
  },
  {
    "text": "created event that has changed to order completed",
    "start": "2718240",
    "end": "2723318"
  },
  {
    "text": "event now some of the services that I use here are not uh the only services",
    "start": "2723400",
    "end": "2728800"
  },
  {
    "text": "that you have to use you get a different varieties of services that you want to use when it comes to API compute event",
    "start": "2728800",
    "end": "2736640"
  },
  {
    "text": "router and event store so with API I chose API Gateway as an example but",
    "start": "2736640",
    "end": "2742280"
  },
  {
    "text": "nothing is stopping you to use appsync Amazon appsync AWS iot core was the",
    "start": "2742280",
    "end": "2747359"
  },
  {
    "text": "choice for me you can very well use web sockets to send",
    "start": "2747359",
    "end": "2752400"
  },
  {
    "text": "notification uh you can use I in fact when it comes to compute and I have used all of those computes in the sample",
    "start": "2752400",
    "end": "2758760"
  },
  {
    "text": "application just to Showcase that you can still do Eda with a degree of",
    "start": "2758760",
    "end": "2764800"
  },
  {
    "text": "difference of varieties of compute in my sample I have used Amazon even bridge",
    "start": "2764800",
    "end": "2769839"
  },
  {
    "text": "but it is not limited to that you can use SNS uh Kinesis data streams Amazon",
    "start": "2769839",
    "end": "2775599"
  },
  {
    "text": "msk or Amazon mq the same with event store I've used sqs as an example but it",
    "start": "2775599",
    "end": "2783000"
  },
  {
    "text": "is not limited to sqs you can use the other un stores",
    "start": "2783000",
    "end": "2788240"
  },
  {
    "text": "to so if I want to summarize this real quick Ed actually eliminates",
    "start": "2788240",
    "end": "2796599"
  },
  {
    "text": "bottlenecks what we started with the traditional architecture was bottlenecks so Eda eliminates",
    "start": "2796599",
    "end": "2802839"
  },
  {
    "text": "bottlenecks and then we can integrate with existing workloads with very",
    "start": "2802839",
    "end": "2808880"
  },
  {
    "text": "minimal change and hexagonal architecture is one of the example which uh which comes up on the top in my",
    "start": "2808880",
    "end": "2816440"
  },
  {
    "text": "sample I have used hexagonal architecture you get fine grain scaling so if uh claims is getting a lot of",
    "start": "2816440",
    "end": "2825000"
  },
  {
    "text": "traffic because of a catastrophic event you don't want customer service to scale",
    "start": "2825000",
    "end": "2831040"
  },
  {
    "text": "you just want claim service to scale right so you can get you get fine green",
    "start": "2831040",
    "end": "2836520"
  },
  {
    "text": "scaling of components you can extend this to different other business domains I just talked about four or five it can",
    "start": "2836520",
    "end": "2842640"
  },
  {
    "text": "go above that and even even up architectures that actually facilitates evolutionary thinking right evolutionary",
    "start": "2842640",
    "end": "2850440"
  },
  {
    "text": "architecture today we did not talk about any uh analytics we did not talk about",
    "start": "2850440",
    "end": "2855680"
  },
  {
    "text": "governance we did not talk about reporting all of those things can plug in and become a capability in your",
    "start": "2855680",
    "end": "2862319"
  },
  {
    "text": "entire setup last but not the least we have drastically reduced the fault",
    "start": "2862319",
    "end": "2868559"
  },
  {
    "text": "impact radius and I showed that as an example when I added vendor service because I did not touch any other area",
    "start": "2868559",
    "end": "2876000"
  },
  {
    "text": "in the system now think that if you are adding vendor service you test it and you have to broadcast or tell the entire",
    "start": "2876000",
    "end": "2883480"
  },
  {
    "text": "organization that hey I'm going to add vendor service it's going to be cumbersome so this facilitates uh",
    "start": "2883480",
    "end": "2890240"
  },
  {
    "text": "reducing your fault impact radius uh here is the QR code for the",
    "start": "2890240",
    "end": "2897119"
  },
  {
    "text": "blog that I was referring to and the sample application is also mentioned in that blog and uh you can definitely play",
    "start": "2897119",
    "end": "2905040"
  },
  {
    "text": "around with that you can follow the guide and you can run this in your own",
    "start": "2905040",
    "end": "2910200"
  },
  {
    "text": "system additional resources to look at for uh building this uh this kind of",
    "start": "2910200",
    "end": "2918839"
  },
  {
    "text": "application and then reach out to me if you have more questions uh my",
    "start": "2918839",
    "end": "2924680"
  },
  {
    "text": "information is right here you can reach out to me via LinkedIn or X and please",
    "start": "2924680",
    "end": "2931880"
  },
  {
    "text": "don't forget to vote for this session",
    "start": "2931880",
    "end": "2937599"
  }
]