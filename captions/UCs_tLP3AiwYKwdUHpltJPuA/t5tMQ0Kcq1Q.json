[
  {
    "text": "[Music]",
    "start": "3670",
    "end": "9639"
  },
  {
    "text": "thank you hope all of you are doing good",
    "start": "9639",
    "end": "13280"
  },
  {
    "text": "um uh thanks thanks for that",
    "start": "13280",
    "end": "15680"
  },
  {
    "text": "introduction uh so let me kick off so",
    "start": "15680",
    "end": "18279"
  },
  {
    "text": "I'll be talking about FP in Scala for",
    "start": "18279",
    "end": "20199"
  },
  {
    "text": "Big Data uh an approach to solving a a",
    "start": "20199",
    "end": "23680"
  },
  {
    "text": "problem that we had when we went to one",
    "start": "23680",
    "end": "25720"
  },
  {
    "text": "of our",
    "start": "25720",
    "end": "26840"
  },
  {
    "text": "clients and you've already seen me seen",
    "start": "26840",
    "end": "29720"
  },
  {
    "text": "my profile now so why FP in Scala made",
    "start": "29720",
    "end": "33600"
  },
  {
    "text": "difficult um this is a collation of all",
    "start": "33600",
    "end": "36160"
  },
  {
    "text": "the reasons and all the comments that I",
    "start": "36160",
    "end": "39680"
  },
  {
    "text": "um got after talking to a few",
    "start": "39680",
    "end": "42200"
  },
  {
    "text": "developers who tried to use Scala for",
    "start": "42200",
    "end": "44879"
  },
  {
    "text": "doing their functional programming and",
    "start": "44879",
    "end": "46719"
  },
  {
    "text": "for doing their programming in general",
    "start": "46719",
    "end": "48440"
  },
  {
    "text": "and then uh left off in the middle for",
    "start": "48440",
    "end": "51480"
  },
  {
    "text": "for a variety of reasons and this is a",
    "start": "51480",
    "end": "53640"
  },
  {
    "text": "CLE of those reasons one thing that they",
    "start": "53640",
    "end": "56199"
  },
  {
    "text": "say is they get hit with a ton of jargon",
    "start": "56199",
    "end": "58359"
  },
  {
    "text": "it's not a jargon for us but it's a",
    "start": "58359",
    "end": "60280"
  },
  {
    "text": "jargon for them um so we don't we don't",
    "start": "60280",
    "end": "62800"
  },
  {
    "text": "end up communicating properly and there",
    "start": "62800",
    "end": "65518"
  },
  {
    "text": "are there were a lot of type inference",
    "start": "65519",
    "end": "66960"
  },
  {
    "text": "issues when dealing with Scala hopefully",
    "start": "66960",
    "end": "68840"
  },
  {
    "text": "in Scala 3 that's that goes away it to a",
    "start": "68840",
    "end": "70920"
  },
  {
    "text": "great",
    "start": "70920",
    "end": "71799"
  },
  {
    "text": "extent and then typ class",
    "start": "71799",
    "end": "73880"
  },
  {
    "text": "specializations given a problem we",
    "start": "73880",
    "end": "75720"
  },
  {
    "text": "always tend to talk in terms of typ",
    "start": "75720",
    "end": "77439"
  },
  {
    "text": "classes and that led to a few",
    "start": "77439",
    "end": "79640"
  },
  {
    "text": "communication problem again and then",
    "start": "79640",
    "end": "82119"
  },
  {
    "text": "when we talk about free structures",
    "start": "82119",
    "end": "83720"
  },
  {
    "text": "obviously Scala comes with a whole lot",
    "start": "83720",
    "end": "85360"
  },
  {
    "text": "of boilerplate and libraries that",
    "start": "85360",
    "end": "87200"
  },
  {
    "text": "handles these boiler plates and having",
    "start": "87200",
    "end": "88680"
  },
  {
    "text": "to know all of them is kind of difficult",
    "start": "88680",
    "end": "90880"
  },
  {
    "text": "for for for a",
    "start": "90880",
    "end": "92640"
  },
  {
    "text": "newcomer and there are many options of",
    "start": "92640",
    "end": "95360"
  },
  {
    "text": "solutions and this all led to slower",
    "start": "95360",
    "end": "98000"
  },
  {
    "text": "development of pretty much incomplete or",
    "start": "98000",
    "end": "100520"
  },
  {
    "text": "FP in the small like you you you have a",
    "start": "100520",
    "end": "103159"
  },
  {
    "text": "scattered set of uh pure functions but",
    "start": "103159",
    "end": "106240"
  },
  {
    "text": "the overall design is",
    "start": "106240",
    "end": "108479"
  },
  {
    "text": "impure now the solution that we always",
    "start": "108479",
    "end": "112159"
  },
  {
    "text": "that always tend to work is sticking on",
    "start": "112159",
    "end": "114119"
  },
  {
    "text": "the fundamentals and um it's a hard",
    "start": "114119",
    "end": "116920"
  },
  {
    "text": "decision to not use a library and to use",
    "start": "116920",
    "end": "118920"
  },
  {
    "text": "a library you know um so sticking on to",
    "start": "118920",
    "end": "121360"
  },
  {
    "text": "fundamentals was the key sticking onto",
    "start": "121360",
    "end": "123640"
  },
  {
    "text": "referential transparency we all know",
    "start": "123640",
    "end": "125240"
  },
  {
    "text": "that total functions making sure that",
    "start": "125240",
    "end": "127880"
  },
  {
    "text": "your functions are handling all of the",
    "start": "127880",
    "end": "129200"
  },
  {
    "text": "set of inputs for that type and lawful",
    "start": "129200",
    "end": "131680"
  },
  {
    "text": "abstractions making use of lawful",
    "start": "131680",
    "end": "133360"
  },
  {
    "text": "abstractions kind of uh takes away the",
    "start": "133360",
    "end": "135959"
  },
  {
    "text": "pain of you know introducing bug in your",
    "start": "135959",
    "end": "138239"
  },
  {
    "text": "code and TI driven development by the",
    "start": "138239",
    "end": "141560"
  },
  {
    "text": "time you move away from that company",
    "start": "141560",
    "end": "143080"
  },
  {
    "text": "you're telling your client or your",
    "start": "143080",
    "end": "144640"
  },
  {
    "text": "manager or your colleagues like if you",
    "start": "144640",
    "end": "147400"
  },
  {
    "text": "want to add a new feature or a new",
    "start": "147400",
    "end": "149120"
  },
  {
    "text": "change into the codebase the types are",
    "start": "149120",
    "end": "151560"
  },
  {
    "text": "going to drive you do that like you",
    "start": "151560",
    "end": "152840"
  },
  {
    "text": "don't need to understand the entire",
    "start": "152840",
    "end": "154040"
  },
  {
    "text": "piece of codebase to make any small",
    "start": "154040",
    "end": "155920"
  },
  {
    "text": "change and the types will help you uh",
    "start": "155920",
    "end": "159200"
  },
  {
    "text": "not do anything anything funny and the",
    "start": "159200",
    "end": "161959"
  },
  {
    "text": "result is fast development and that",
    "start": "161959",
    "end": "164200"
  },
  {
    "text": "leads to FP in the large",
    "start": "164200",
    "end": "167360"
  },
  {
    "text": "um so um for this problem uh first I'll",
    "start": "167360",
    "end": "172800"
  },
  {
    "text": "discuss uh the problem itself which is a",
    "start": "172800",
    "end": "175800"
  },
  {
    "text": "big data problem the term big data is",
    "start": "175800",
    "end": "177319"
  },
  {
    "text": "very relative these days so we don't",
    "start": "177319",
    "end": "180200"
  },
  {
    "text": "really need to focus too much in what",
    "start": "180200",
    "end": "181959"
  },
  {
    "text": "exactly is a big data",
    "start": "181959",
    "end": "184440"
  },
  {
    "text": "but um the the problem comes down to hey",
    "start": "184440",
    "end": "188200"
  },
  {
    "text": "we have millions and billions of data",
    "start": "188200",
    "end": "189959"
  },
  {
    "text": "set uh transaction records for example",
    "start": "189959",
    "end": "191959"
  },
  {
    "text": "billions of clickstream events that that",
    "start": "191959",
    "end": "193879"
  },
  {
    "text": "is hitting your banking app millions of",
    "start": "193879",
    "end": "195840"
  },
  {
    "text": "customer account data set um and then",
    "start": "195840",
    "end": "199640"
  },
  {
    "text": "payment data set if it is a bank and we",
    "start": "199640",
    "end": "202000"
  },
  {
    "text": "do business analysis and machine",
    "start": "202000",
    "end": "203280"
  },
  {
    "text": "learning that's a high level picture and",
    "start": "203280",
    "end": "204760"
  },
  {
    "text": "that's all we need to understand the",
    "start": "204760",
    "end": "206280"
  },
  {
    "text": "gist of what I'm trying to talk about",
    "start": "206280",
    "end": "210400"
  },
  {
    "text": "and the problem is finding the",
    "start": "210400",
    "end": "211680"
  },
  {
    "text": "attributes of customers now you can take",
    "start": "211680",
    "end": "214080"
  },
  {
    "text": "this problem into any any level but if",
    "start": "214080",
    "end": "216920"
  },
  {
    "text": "we keep the problem to a a minimal",
    "start": "216920",
    "end": "219599"
  },
  {
    "text": "surface area then you can focus on just",
    "start": "219599",
    "end": "222360"
  },
  {
    "text": "that surface area and solve that problem",
    "start": "222360",
    "end": "224280"
  },
  {
    "text": "nicely so what that means is I'm not",
    "start": "224280",
    "end": "226680"
  },
  {
    "text": "trying to build a library here I'm not",
    "start": "226680",
    "end": "228319"
  },
  {
    "text": "trying to build a product just an",
    "start": "228319",
    "end": "229799"
  },
  {
    "text": "application code base for a client for",
    "start": "229799",
    "end": "232159"
  },
  {
    "text": "their specific",
    "start": "232159",
    "end": "233760"
  },
  {
    "text": "problem the problem can be finding the",
    "start": "233760",
    "end": "236319"
  },
  {
    "text": "attributes of customers and the example",
    "start": "236319",
    "end": "237959"
  },
  {
    "text": "is total account transaction for each",
    "start": "237959",
    "end": "239680"
  },
  {
    "text": "each customer in last three",
    "start": "239680",
    "end": "241799"
  },
  {
    "text": "weeks and we call these attributes",
    "start": "241799",
    "end": "244200"
  },
  {
    "text": "features I'll be talking about features",
    "start": "244200",
    "end": "245959"
  },
  {
    "text": "from now on feature generation",
    "start": "245959",
    "end": "248640"
  },
  {
    "text": "features and what we need needed was a",
    "start": "248640",
    "end": "251159"
  },
  {
    "text": "simple interface to quickly add new",
    "start": "251159",
    "end": "252920"
  },
  {
    "text": "features now the the first use case was",
    "start": "252920",
    "end": "256639"
  },
  {
    "text": "okay AEL uh we need we need a",
    "start": "256639",
    "end": "259079"
  },
  {
    "text": "programmatic interface but we don't want",
    "start": "259079",
    "end": "261600"
  },
  {
    "text": "uh we want it to be easy we want to",
    "start": "261600",
    "end": "263479"
  },
  {
    "text": "quickly at new features and we don't",
    "start": "263479",
    "end": "265280"
  },
  {
    "text": "want to care about what other features",
    "start": "265280",
    "end": "266680"
  },
  {
    "text": "are already existing um all all we need",
    "start": "266680",
    "end": "269680"
  },
  {
    "text": "was quickly add features and deploy them",
    "start": "269680",
    "end": "271160"
  },
  {
    "text": "into production so we need a thin API to",
    "start": "271160",
    "end": "273960"
  },
  {
    "text": "combine them to to get a wide table a",
    "start": "273960",
    "end": "276320"
  },
  {
    "text": "wide table means a customer ID and a",
    "start": "276320",
    "end": "278080"
  },
  {
    "text": "bunch of",
    "start": "278080",
    "end": "279000"
  },
  {
    "text": "features and we further compose to form",
    "start": "279000",
    "end": "281479"
  },
  {
    "text": "tens of hundreds of white",
    "start": "281479",
    "end": "283479"
  },
  {
    "text": "tables so what does that mean for us so",
    "start": "283479",
    "end": "286280"
  },
  {
    "text": "given that problem what that means we",
    "start": "286280",
    "end": "287880"
  },
  {
    "text": "need a thin layer of interface where we",
    "start": "287880",
    "end": "289479"
  },
  {
    "text": "should be able to declaratively Define",
    "start": "289479",
    "end": "292639"
  },
  {
    "text": "uh business logic with without uh",
    "start": "292639",
    "end": "296160"
  },
  {
    "text": "without the details of performance",
    "start": "296160",
    "end": "298560"
  },
  {
    "text": "optimizations because you've already",
    "start": "298560",
    "end": "300520"
  },
  {
    "text": "added some features that might be",
    "start": "300520",
    "end": "301680"
  },
  {
    "text": "features that come come along which is",
    "start": "301680",
    "end": "304400"
  },
  {
    "text": "quite similar to the previous features",
    "start": "304400",
    "end": "307199"
  },
  {
    "text": "so you don't really need to care about",
    "start": "307199",
    "end": "308720"
  },
  {
    "text": "them but at the same time you can't hit",
    "start": "308720",
    "end": "310639"
  },
  {
    "text": "the cluster too much uh making it less",
    "start": "310639",
    "end": "315199"
  },
  {
    "text": "performant and it should be fairly",
    "start": "315280",
    "end": "317120"
  },
  {
    "text": "backend diagnostic uh because we have",
    "start": "317120",
    "end": "320560"
  },
  {
    "text": "had discussions where oh which backend",
    "start": "320560",
    "end": "322639"
  },
  {
    "text": "engine should we use so as I said we are",
    "start": "322639",
    "end": "324720"
  },
  {
    "text": "going to reuse some of the open source",
    "start": "324720",
    "end": "326400"
  },
  {
    "text": "projects out there to actually run these",
    "start": "326400",
    "end": "328919"
  },
  {
    "text": "jobs in the cluster in the Big Data",
    "start": "328919",
    "end": "330919"
  },
  {
    "text": "space um so we not building the product",
    "start": "330919",
    "end": "333960"
  },
  {
    "text": "but we are having a thin layer of",
    "start": "333960",
    "end": "335400"
  },
  {
    "text": "abstraction on top of it but at the same",
    "start": "335400",
    "end": "338479"
  },
  {
    "text": "time uh the question was in okay you're",
    "start": "338479",
    "end": "340800"
  },
  {
    "text": "building an abstraction so can I use",
    "start": "340800",
    "end": "342600"
  },
  {
    "text": "this abstraction to point some other",
    "start": "342600",
    "end": "344400"
  },
  {
    "text": "back and engine and the answer should be",
    "start": "344400",
    "end": "347120"
  },
  {
    "text": "yes uh and we don't have a year to make",
    "start": "347120",
    "end": "349960"
  },
  {
    "text": "it happen do it quickly so it's two",
    "start": "349960",
    "end": "352880"
  },
  {
    "text": "months or one and a half months uh and",
    "start": "352880",
    "end": "354960"
  },
  {
    "text": "it's not a prototype you have to run",
    "start": "354960",
    "end": "356240"
  },
  {
    "text": "that",
    "start": "356240",
    "end": "358080"
  },
  {
    "text": "introduction a single feature definition",
    "start": "358080",
    "end": "360319"
  },
  {
    "text": "for a customer can be can be as simple",
    "start": "360319",
    "end": "363039"
  },
  {
    "text": "as that SQL statement a customer ID a",
    "start": "363039",
    "end": "365639"
  },
  {
    "text": "sum of credit and a feature name which",
    "start": "365639",
    "end": "369160"
  },
  {
    "text": "is a sum of credit that happened to the",
    "start": "369160",
    "end": "371800"
  },
  {
    "text": "bank account of that customer for the",
    "start": "371800",
    "end": "373759"
  },
  {
    "text": "last 14 days from some from some table",
    "start": "373759",
    "end": "377599"
  },
  {
    "text": "and you're doing the aggregation on top",
    "start": "377599",
    "end": "379039"
  },
  {
    "text": "of customer ID and that's going to be",
    "start": "379039",
    "end": "381479"
  },
  {
    "text": "the same and we have a Time associated",
    "start": "381479",
    "end": "383720"
  },
  {
    "text": "with that query and we say that time is",
    "start": "383720",
    "end": "387840"
  },
  {
    "text": "mapped to the partition of the data set",
    "start": "387840",
    "end": "390319"
  },
  {
    "text": "and a partition represent um an",
    "start": "390319",
    "end": "393440"
  },
  {
    "text": "optimized version of querying the data",
    "start": "393440",
    "end": "395520"
  },
  {
    "text": "set if the data is partition properly",
    "start": "395520",
    "end": "398479"
  },
  {
    "text": "you get an optimized",
    "start": "398479",
    "end": "401039"
  },
  {
    "text": "query and if you just check the details",
    "start": "401039",
    "end": "404080"
  },
  {
    "text": "of that SQL it's all the logic which is",
    "start": "404080",
    "end": "406880"
  },
  {
    "text": "the aggregation logic and the name of",
    "start": "406880",
    "end": "409680"
  },
  {
    "text": "the feature and the table and the",
    "start": "409680",
    "end": "413240"
  },
  {
    "text": "time and we don't want that name which",
    "start": "413240",
    "end": "415720"
  },
  {
    "text": "is sum of credit for the last 14 days",
    "start": "415720",
    "end": "417560"
  },
  {
    "text": "what happens if you have a query that",
    "start": "417560",
    "end": "419440"
  },
  {
    "text": "queries last 28 days but your name is 14",
    "start": "419440",
    "end": "421560"
  },
  {
    "text": "days and that",
    "start": "421560",
    "end": "423280"
  },
  {
    "text": "happened and so let's fix that so given",
    "start": "423280",
    "end": "427560"
  },
  {
    "text": "that many details uh let's Express this",
    "start": "427560",
    "end": "430319"
  },
  {
    "text": "in Scala a simple representation would",
    "start": "430319",
    "end": "432639"
  },
  {
    "text": "be a feature",
    "start": "432639",
    "end": "434039"
  },
  {
    "text": "definition um you have some input data",
    "start": "434039",
    "end": "436800"
  },
  {
    "text": "set parameterized by D usually we say A",
    "start": "436800",
    "end": "440120"
  },
  {
    "text": "and B um just that some people have got",
    "start": "440120",
    "end": "443039"
  },
  {
    "text": "this um you know it's more they say it's",
    "start": "443039",
    "end": "445479"
  },
  {
    "text": "more readable when when you when you use",
    "start": "445479",
    "end": "448000"
  },
  {
    "text": "the first letter what it represents and",
    "start": "448000",
    "end": "451120"
  },
  {
    "text": "some operation on on the data set",
    "start": "451120",
    "end": "453039"
  },
  {
    "text": "probably the controversial bit in this",
    "start": "453039",
    "end": "456479"
  },
  {
    "text": "uh solution is making use of the",
    "start": "456479",
    "end": "459720"
  },
  {
    "text": "expression API exposed by the backend",
    "start": "459720",
    "end": "462560"
  },
  {
    "text": "engine and we not we don't have the time",
    "start": "462560",
    "end": "465440"
  },
  {
    "text": "to build the most complex expression",
    "start": "465440",
    "end": "467599"
  },
  {
    "text": "bits here because otherwise we are",
    "start": "467599",
    "end": "469000"
  },
  {
    "text": "rebuilding things like Flink or data",
    "start": "469000",
    "end": "471280"
  },
  {
    "text": "flow or be so we are not doing",
    "start": "471280",
    "end": "474280"
  },
  {
    "text": "it and we have a name of the feature and",
    "start": "474280",
    "end": "476919"
  },
  {
    "text": "we have the partition which is a time",
    "start": "476919",
    "end": "480199"
  },
  {
    "text": "window and which can be optional a",
    "start": "480199",
    "end": "483199"
  },
  {
    "text": "simple representation of input is an",
    "start": "483199",
    "end": "485240"
  },
  {
    "text": "input can be a constant or it could be a",
    "start": "485240",
    "end": "488479"
  },
  {
    "text": "directory and you have some helper",
    "start": "488479",
    "end": "490319"
  },
  {
    "text": "functions to help out with the type",
    "start": "490319",
    "end": "491599"
  },
  {
    "text": "inference because the type will be",
    "start": "491599",
    "end": "494240"
  },
  {
    "text": "inferred as constant in Scala in certain",
    "start": "494240",
    "end": "496080"
  },
  {
    "text": "cases and that will hit your head with a",
    "start": "496080",
    "end": "498400"
  },
  {
    "text": "brick",
    "start": "498400",
    "end": "500440"
  },
  {
    "text": "often an example with that",
    "start": "500440",
    "end": "502560"
  },
  {
    "text": "representation is feature",
    "start": "502560",
    "end": "504800"
  },
  {
    "text": "def my input expression the name of the",
    "start": "504800",
    "end": "508360"
  },
  {
    "text": "feature and the last 14 days which is a",
    "start": "508360",
    "end": "511280"
  },
  {
    "text": "a DSL on top of time",
    "start": "511280",
    "end": "513080"
  },
  {
    "text": "window and we can have a list of such",
    "start": "513080",
    "end": "515440"
  },
  {
    "text": "features and apparently this is all that",
    "start": "515440",
    "end": "517680"
  },
  {
    "text": "they need they need a list of feature",
    "start": "517680",
    "end": "519440"
  },
  {
    "text": "definitions and they should be fairly",
    "start": "519440",
    "end": "521360"
  },
  {
    "text": "readable and um the the expression",
    "start": "521360",
    "end": "524800"
  },
  {
    "text": "should be quickly accessible so here the",
    "start": "524800",
    "end": "528320"
  },
  {
    "text": "account some of account balance you can",
    "start": "528320",
    "end": "530160"
  },
  {
    "text": "have some sort of helper functions not",
    "start": "530160",
    "end": "532279"
  },
  {
    "text": "helper functions combinators within the",
    "start": "532279",
    "end": "534000"
  },
  {
    "text": "input uh input uh structure to join to",
    "start": "534000",
    "end": "537640"
  },
  {
    "text": "data sets and if provide the helper",
    "start": "537640",
    "end": "540160"
  },
  {
    "text": "functions",
    "start": "540160",
    "end": "541720"
  },
  {
    "text": "there now we need to compose them so",
    "start": "541720",
    "end": "545120"
  },
  {
    "text": "given a feature",
    "start": "545120",
    "end": "546560"
  },
  {
    "text": "definition we need to get a",
    "start": "546560",
    "end": "549519"
  },
  {
    "text": "representation of the actual feature job",
    "start": "549519",
    "end": "552839"
  },
  {
    "text": "and I'm am calling it as a feature gen",
    "start": "552839",
    "end": "554800"
  },
  {
    "text": "that return some sort of feature result",
    "start": "554800",
    "end": "557839"
  },
  {
    "text": "that consist of the details of the",
    "start": "557839",
    "end": "559560"
  },
  {
    "text": "features included in the result so",
    "start": "559560",
    "end": "563760"
  },
  {
    "text": "essentially a program that represents",
    "start": "563760",
    "end": "565839"
  },
  {
    "text": "feature generation given some feature",
    "start": "565839",
    "end": "568200"
  },
  {
    "text": "definition right",
    "start": "568200",
    "end": "571120"
  },
  {
    "text": "and the first level the the the first",
    "start": "571279",
    "end": "573920"
  },
  {
    "text": "level structure of feature gen is that",
    "start": "573920",
    "end": "578320"
  },
  {
    "text": "something that is parameterized by",
    "start": "578320",
    "end": "580000"
  },
  {
    "text": "parameterized by a data D Expression A",
    "start": "580000",
    "end": "583760"
  },
  {
    "text": "and some result output a and you can see",
    "start": "583760",
    "end": "588720"
  },
  {
    "text": "um things that slowly Bridges uh the Gap",
    "start": "588720",
    "end": "592800"
  },
  {
    "text": "to functional programming now things",
    "start": "592800",
    "end": "595279"
  },
  {
    "text": "like applicative is slowly coming into",
    "start": "595279",
    "end": "596839"
  },
  {
    "text": "picture but we're not talking about it",
    "start": "596839",
    "end": "598279"
  },
  {
    "text": "now we we have a map two function which",
    "start": "598279",
    "end": "600399"
  },
  {
    "text": "takes one feature gen and another",
    "start": "600399",
    "end": "602880"
  },
  {
    "text": "feature gen and a function that goes",
    "start": "602880",
    "end": "604399"
  },
  {
    "text": "from a a B to C and which will allow you",
    "start": "604399",
    "end": "608320"
  },
  {
    "text": "to get a job that returns C in return",
    "start": "608320",
    "end": "611560"
  },
  {
    "text": "and we'll see how this is being used",
    "start": "611560",
    "end": "613600"
  },
  {
    "text": "it's very fundamental it's sticking on",
    "start": "613600",
    "end": "615240"
  },
  {
    "text": "to the the real fundamentals um of FP",
    "start": "615240",
    "end": "619600"
  },
  {
    "text": "there now a representation",
    "start": "619600",
    "end": "623040"
  },
  {
    "text": "is you can lift any value to a future",
    "start": "623040",
    "end": "626079"
  },
  {
    "text": "gen job it's a set of case classes based",
    "start": "626079",
    "end": "629079"
  },
  {
    "text": "basically representing the data and a",
    "start": "629079",
    "end": "632120"
  },
  {
    "text": "zip function takes one feature gen job",
    "start": "632120",
    "end": "634360"
  },
  {
    "text": "it's not a feature but a feature a",
    "start": "634360",
    "end": "636440"
  },
  {
    "text": "feature gen job another fature gen job",
    "start": "636440",
    "end": "639279"
  },
  {
    "text": "and a map again taking a fature gen job",
    "start": "639279",
    "end": "642240"
  },
  {
    "text": "on the left and a function that goes",
    "start": "642240",
    "end": "644079"
  },
  {
    "text": "from A to B returning you a feature gen",
    "start": "644079",
    "end": "646760"
  },
  {
    "text": "of B and then a node that says hey given",
    "start": "646760",
    "end": "650399"
  },
  {
    "text": "some feature definition how do I create",
    "start": "650399",
    "end": "652320"
  },
  {
    "text": "some result out of it and then join",
    "start": "652320",
    "end": "654639"
  },
  {
    "text": "features probably something that which",
    "start": "654639",
    "end": "657600"
  },
  {
    "text": "was not there by the time it was",
    "start": "657600",
    "end": "658680"
  },
  {
    "text": "production because it is a specialized",
    "start": "658680",
    "end": "660320"
  },
  {
    "text": "version of zip but the essential",
    "start": "660320",
    "end": "663920"
  },
  {
    "text": "difference here is given a feature gen a",
    "start": "663920",
    "end": "666480"
  },
  {
    "text": "and another feature gen that produces a",
    "start": "666480",
    "end": "668800"
  },
  {
    "text": "you join it to give a itself so it",
    "start": "668800",
    "end": "671440"
  },
  {
    "text": "sticks on to the",
    "start": "671440",
    "end": "673079"
  },
  {
    "text": "type and we have some helper functions",
    "start": "673079",
    "end": "675560"
  },
  {
    "text": "which is um helping out with type",
    "start": "675560",
    "end": "678399"
  },
  {
    "text": "inference and combine all is a function",
    "start": "678399",
    "end": "681279"
  },
  {
    "text": "that takes a non-empty list of",
    "start": "681279",
    "end": "683600"
  },
  {
    "text": "fen that produces some feature result",
    "start": "683600",
    "end": "686760"
  },
  {
    "text": "and they get reduced to join",
    "start": "686760",
    "end": "690200"
  },
  {
    "text": "so they are all all get joined to form",
    "start": "690200",
    "end": "692240"
  },
  {
    "text": "the white table now until then until now",
    "start": "692240",
    "end": "694880"
  },
  {
    "text": "we have never talked about the backend",
    "start": "694880",
    "end": "696600"
  },
  {
    "text": "engine we've already joined some piece",
    "start": "696600",
    "end": "698440"
  },
  {
    "text": "of data set and we have a sequence which",
    "start": "698440",
    "end": "700920"
  },
  {
    "text": "takes a list of feature gen",
    "start": "700920",
    "end": "702839"
  },
  {
    "text": "job and that uh returns a feature gen",
    "start": "702839",
    "end": "706959"
  },
  {
    "text": "that going that is going to return you a",
    "start": "706959",
    "end": "708480"
  },
  {
    "text": "list of",
    "start": "708480",
    "end": "709519"
  },
  {
    "text": "results that's going to be really easy",
    "start": "709519",
    "end": "712000"
  },
  {
    "text": "and we made use of the map to function",
    "start": "712000",
    "end": "714040"
  },
  {
    "text": "there to get",
    "start": "714040",
    "end": "716600"
  },
  {
    "text": "that composing is fairly straightforward",
    "start": "716600",
    "end": "719880"
  },
  {
    "text": "now a job means start the feature job",
    "start": "719880",
    "end": "723279"
  },
  {
    "text": "given a",
    "start": "723279",
    "end": "724279"
  },
  {
    "text": "definition you can combine you can join",
    "start": "724279",
    "end": "726680"
  },
  {
    "text": "all of the jobs together um using the",
    "start": "726680",
    "end": "729360"
  },
  {
    "text": "join",
    "start": "729360",
    "end": "730519"
  },
  {
    "text": "combinator and using sequence you can",
    "start": "730519",
    "end": "732720"
  },
  {
    "text": "collate all the results and keep it in a",
    "start": "732720",
    "end": "734639"
  },
  {
    "text": "list or you could combine them to form a",
    "start": "734639",
    "end": "737000"
  },
  {
    "text": "white table and get the metadata out of",
    "start": "737000",
    "end": "739639"
  },
  {
    "text": "it okay so that's simple right a single",
    "start": "739639",
    "end": "744279"
  },
  {
    "text": "implementation of this features and",
    "start": "744279",
    "end": "746240"
  },
  {
    "text": "program now now that we talked about",
    "start": "746240",
    "end": "747839"
  },
  {
    "text": "program now we need to run this to a",
    "start": "747839",
    "end": "749480"
  },
  {
    "text": "proper effect system that talks to the",
    "start": "749480",
    "end": "751519"
  },
  {
    "text": "outside world all right and we need to",
    "start": "751519",
    "end": "754079"
  },
  {
    "text": "have only one implementation which is",
    "start": "754079",
    "end": "755600"
  },
  {
    "text": "just as you would imagine it takes a",
    "start": "755600",
    "end": "758199"
  },
  {
    "text": "feature gen job and recursively call",
    "start": "758199",
    "end": "760240"
  },
  {
    "text": "through each node and pipe to an F",
    "start": "760240",
    "end": "762519"
  },
  {
    "text": "system we are going to use Co for this",
    "start": "762519",
    "end": "764440"
  },
  {
    "text": "there are other Alternatives lots of",
    "start": "764440",
    "end": "766279"
  },
  {
    "text": "Alternatives monx catso uh with either",
    "start": "766279",
    "end": "769680"
  },
  {
    "text": "in it um um and I see that monx has got",
    "start": "769680",
    "end": "774160"
  },
  {
    "text": "some bifunctor um uh implementations",
    "start": "774160",
    "end": "776959"
  },
  {
    "text": "these days so we have quite a good bunch",
    "start": "776959",
    "end": "780120"
  },
  {
    "text": "of um um f systems out there in Scala",
    "start": "780120",
    "end": "784040"
  },
  {
    "text": "and it's a matter of preference at this",
    "start": "784040",
    "end": "785800"
  },
  {
    "text": "stage um C is relatively easy um in",
    "start": "785800",
    "end": "790639"
  },
  {
    "text": "terms of their concurrency operations",
    "start": "790639",
    "end": "792880"
  },
  {
    "text": "and it's expressive in types because it",
    "start": "792880",
    "end": "795399"
  },
  {
    "text": "talks about error and",
    "start": "795399",
    "end": "798040"
  },
  {
    "text": "output and then great type inference so",
    "start": "798040",
    "end": "801680"
  },
  {
    "text": "just a quick introduction it's a the",
    "start": "801680",
    "end": "803639"
  },
  {
    "text": "mental model of Co is given some input",
    "start": "803639",
    "end": "806440"
  },
  {
    "text": "it either gives you some other error E",
    "start": "806440",
    "end": "809600"
  },
  {
    "text": "or some result a and and it's it's a",
    "start": "809600",
    "end": "813519"
  },
  {
    "text": "declarative uh it's a description of the",
    "start": "813519",
    "end": "815800"
  },
  {
    "text": "program um which is not actually do not",
    "start": "815800",
    "end": "819560"
  },
  {
    "text": "doing any side effects it's just pure",
    "start": "819560",
    "end": "821160"
  },
  {
    "text": "and you can manipulate this program and",
    "start": "821160",
    "end": "822760"
  },
  {
    "text": "then finally uh trigger it to talk to",
    "start": "822760",
    "end": "825600"
  },
  {
    "text": "the outside",
    "start": "825600",
    "end": "826720"
  },
  {
    "text": "world so we're going to use that effect",
    "start": "826720",
    "end": "829839"
  },
  {
    "text": "system now as I said CR takes an input",
    "start": "829839",
    "end": "833680"
  },
  {
    "text": "as a context we are going to say data",
    "start": "833680",
    "end": "836279"
  },
  {
    "text": "service is my input and it produces an",
    "start": "836279",
    "end": "839160"
  },
  {
    "text": "error E which is app error you can name",
    "start": "839160",
    "end": "842360"
  },
  {
    "text": "it anything and some result a so that is",
    "start": "842360",
    "end": "844680"
  },
  {
    "text": "our final effect system and our",
    "start": "844680",
    "end": "846440"
  },
  {
    "text": "implementation is given some feature gen",
    "start": "846440",
    "end": "848360"
  },
  {
    "text": "job which is a program that we just",
    "start": "848360",
    "end": "850480"
  },
  {
    "text": "discussed to some analytics task and we",
    "start": "850480",
    "end": "854079"
  },
  {
    "text": "are going to run we are going to run uh",
    "start": "854079",
    "end": "856320"
  },
  {
    "text": "implement this run function which",
    "start": "856320",
    "end": "859399"
  },
  {
    "text": "is um going to look at each node quick",
    "start": "859399",
    "end": "863600"
  },
  {
    "text": "um glance into the data service this is",
    "start": "863600",
    "end": "866000"
  },
  {
    "text": "the interface the backend engine is",
    "start": "866000",
    "end": "867759"
  },
  {
    "text": "going to implement",
    "start": "867759",
    "end": "869240"
  },
  {
    "text": "and they are all small subset of",
    "start": "869240",
    "end": "871560"
  },
  {
    "text": "functions like given a feature",
    "start": "871560",
    "end": "873360"
  },
  {
    "text": "definition how do I create a",
    "start": "873360",
    "end": "875720"
  },
  {
    "text": "feature given some input data set and",
    "start": "875720",
    "end": "877839"
  },
  {
    "text": "partition how do I get the data set how",
    "start": "877839",
    "end": "880000"
  },
  {
    "text": "to do the join and we'll discuss about",
    "start": "880000",
    "end": "882920"
  },
  {
    "text": "project features essentially these are",
    "start": "882920",
    "end": "885040"
  },
  {
    "text": "like 12 lines of code when I did with",
    "start": "885040",
    "end": "886759"
  },
  {
    "text": "Flink",
    "start": "886759",
    "end": "889279"
  },
  {
    "text": "okay",
    "start": "889279",
    "end": "891240"
  },
  {
    "text": "um this is an implementation that takes",
    "start": "891240",
    "end": "894000"
  },
  {
    "text": "a feature gen job and converts it to an",
    "start": "894000",
    "end": "895920"
  },
  {
    "text": "analytics task a pure no and you can",
    "start": "895920",
    "end": "899759"
  },
  {
    "text": "lift it to AO a zip that takes a program",
    "start": "899759",
    "end": "902920"
  },
  {
    "text": "on the left and right um and then you",
    "start": "902920",
    "end": "906320"
  },
  {
    "text": "requestly call apply function and call",
    "start": "906320",
    "end": "907920"
  },
  {
    "text": "the zip of zero and then map function",
    "start": "907920",
    "end": "911800"
  },
  {
    "text": "which is apply program and map it to F",
    "start": "911800",
    "end": "915079"
  },
  {
    "text": "and join features is applying the left",
    "start": "915079",
    "end": "917160"
  },
  {
    "text": "side zipped with applying on the right",
    "start": "917160",
    "end": "919079"
  },
  {
    "text": "side get the two features and using the",
    "start": "919079",
    "end": "922079"
  },
  {
    "text": "access the environment which is the data",
    "start": "922079",
    "end": "923880"
  },
  {
    "text": "service interface and then",
    "start": "923880",
    "end": "927600"
  },
  {
    "text": "join",
    "start": "927600",
    "end": "930360"
  },
  {
    "text": "and creating the features is essentially",
    "start": "930360",
    "end": "932199"
  },
  {
    "text": "the same you access the environment that",
    "start": "932199",
    "end": "934600"
  },
  {
    "text": "knows how to deal with generating the",
    "start": "934600",
    "end": "937240"
  },
  {
    "text": "features and you lift it to the feature",
    "start": "937240",
    "end": "938959"
  },
  {
    "text": "result now running this with Flink is",
    "start": "938959",
    "end": "941560"
  },
  {
    "text": "quite straightforward now that's a list",
    "start": "941560",
    "end": "943560"
  },
  {
    "text": "of feature",
    "start": "943560",
    "end": "945360"
  },
  {
    "text": "definitions um it's basically maximum of",
    "start": "945360",
    "end": "948920"
  },
  {
    "text": "credit and sum of credit very simple",
    "start": "948920",
    "end": "950440"
  },
  {
    "text": "features and apparently most of the",
    "start": "950440",
    "end": "951959"
  },
  {
    "text": "features were actually simple",
    "start": "951959",
    "end": "954720"
  },
  {
    "text": "introduction now let's execute this now",
    "start": "954720",
    "end": "957399"
  },
  {
    "text": "um a fling service we have an",
    "start": "957399",
    "end": "959079"
  },
  {
    "text": "implementation of the data service our",
    "start": "959079",
    "end": "961160"
  },
  {
    "text": "job is quite simple we are going to map",
    "start": "961160",
    "end": "963480"
  },
  {
    "text": "over the features and start the job and",
    "start": "963480",
    "end": "965120"
  },
  {
    "text": "then just combine all and run is a",
    "start": "965120",
    "end": "967600"
  },
  {
    "text": "function that takes a job convert which",
    "start": "967600",
    "end": "970040"
  },
  {
    "text": "returns your co co takes a environment",
    "start": "970040",
    "end": "972480"
  },
  {
    "text": "so we provide that environment and we",
    "start": "972480",
    "end": "974560"
  },
  {
    "text": "get the result that talks to the real",
    "start": "974560",
    "end": "976240"
  },
  {
    "text": "world straight",
    "start": "976240",
    "end": "977639"
  },
  {
    "text": "away this is a very complicated",
    "start": "977639",
    "end": "980480"
  },
  {
    "text": "execution plan after I ran this with",
    "start": "980480",
    "end": "983120"
  },
  {
    "text": "Flink um no point getting into the",
    "start": "983120",
    "end": "985720"
  },
  {
    "text": "details but you can see it's just",
    "start": "985720",
    "end": "987519"
  },
  {
    "text": "complex very",
    "start": "987519",
    "end": "989839"
  },
  {
    "text": "big and I couldn't put that into one",
    "start": "989839",
    "end": "992199"
  },
  {
    "text": "slide so I took a video of the execution",
    "start": "992199",
    "end": "995199"
  },
  {
    "text": "plan a simplified version is that um",
    "start": "995199",
    "end": "999800"
  },
  {
    "text": "it's a terrible execution plan I have no",
    "start": "999800",
    "end": "1001759"
  },
  {
    "text": "idea why Flink behaved like that and",
    "start": "1001759",
    "end": "1003839"
  },
  {
    "text": "surprisingly many other backend engines",
    "start": "1003839",
    "end": "1005880"
  },
  {
    "text": "behaved the same they all have their own",
    "start": "1005880",
    "end": "1007600"
  },
  {
    "text": "optimizers too so it takes the first",
    "start": "1007600",
    "end": "1011480"
  },
  {
    "text": "join and it waits for the third the",
    "start": "1011480",
    "end": "1015880"
  },
  {
    "text": "third join the third join waits for the",
    "start": "1015880",
    "end": "1017720"
  },
  {
    "text": "first join to finish and likewise there",
    "start": "1017720",
    "end": "1019600"
  },
  {
    "text": "is a sequential outer join we're not",
    "start": "1019600",
    "end": "1022199"
  },
  {
    "text": "we're not losing any data here but still",
    "start": "1022199",
    "end": "1024400"
  },
  {
    "text": "it is waiting for the first operations",
    "start": "1024400",
    "end": "1026760"
  },
  {
    "text": "to finish before it combines all of the",
    "start": "1026760",
    "end": "1028280"
  },
  {
    "text": "data set now this is quite terrible when",
    "start": "1028280",
    "end": "1030959"
  },
  {
    "text": "it comes to Performance um now we hit",
    "start": "1030959",
    "end": "1034520"
  },
  {
    "text": "the first real world issue and that's",
    "start": "1034520",
    "end": "1035839"
  },
  {
    "text": "sequential outer joints now I'm going to",
    "start": "1035839",
    "end": "1038400"
  },
  {
    "text": "do a small little hack not at the fling",
    "start": "1038400",
    "end": "1041199"
  },
  {
    "text": "side or or or the back and S let's look",
    "start": "1041199",
    "end": "1043720"
  },
  {
    "text": "at our program which is a list of",
    "start": "1043720",
    "end": "1045240"
  },
  {
    "text": "feature gen I'm going to slide over all",
    "start": "1045240",
    "end": "1047319"
  },
  {
    "text": "each of those pairs",
    "start": "1047319",
    "end": "1049160"
  },
  {
    "text": "and I'm going to call join on each one",
    "start": "1049160",
    "end": "1051960"
  },
  {
    "text": "of them making sure that you're actually",
    "start": "1051960",
    "end": "1054120"
  },
  {
    "text": "calling the join function on each pair",
    "start": "1054120",
    "end": "1056360"
  },
  {
    "text": "it's it's a real hack but we need to",
    "start": "1056360",
    "end": "1058559"
  },
  {
    "text": "know whether we can solve this problem",
    "start": "1058559",
    "end": "1060400"
  },
  {
    "text": "with within our abstraction layer and",
    "start": "1060400",
    "end": "1061799"
  },
  {
    "text": "not at the backend engine and apparently",
    "start": "1061799",
    "end": "1063640"
  },
  {
    "text": "it worked",
    "start": "1063640",
    "end": "1066559"
  },
  {
    "text": "um you can see it's still terrible",
    "start": "1066559",
    "end": "1071039"
  },
  {
    "text": "but way better you can see that's a",
    "start": "1071039",
    "end": "1074520"
  },
  {
    "text": "simplified version of the execution",
    "start": "1074520",
    "end": "1076840"
  },
  {
    "text": "plan where the joints were in parallel",
    "start": "1076840",
    "end": "1080600"
  },
  {
    "text": "and then finally the last join was um",
    "start": "1080600",
    "end": "1083840"
  },
  {
    "text": "join with the join four which is the",
    "start": "1083840",
    "end": "1085559"
  },
  {
    "text": "join of the first two vs anyway you can",
    "start": "1085559",
    "end": "1088120"
  },
  {
    "text": "see all of the joint happen in parallel",
    "start": "1088120",
    "end": "1090039"
  },
  {
    "text": "which means you're you're saving a time",
    "start": "1090039",
    "end": "1091960"
  },
  {
    "text": "of at least half an hour maybe for a",
    "start": "1091960",
    "end": "1093679"
  },
  {
    "text": "terabyte of data set maybe half an hour",
    "start": "1093679",
    "end": "1096440"
  },
  {
    "text": "um from two hours in uh in",
    "start": "1096440",
    "end": "1099840"
  },
  {
    "text": "EMR that's what we we",
    "start": "1099840",
    "end": "1103280"
  },
  {
    "text": "faced and we never talked about fling",
    "start": "1103280",
    "end": "1106039"
  },
  {
    "text": "here we just talked about only",
    "start": "1106039",
    "end": "1107679"
  },
  {
    "text": "abstractions even to do that",
    "start": "1107679",
    "end": "1108960"
  },
  {
    "text": "optimization but that was quite simple",
    "start": "1108960",
    "end": "1110720"
  },
  {
    "text": "but that is that the only thing we could",
    "start": "1110720",
    "end": "1112840"
  },
  {
    "text": "reduce the number of joins actually you",
    "start": "1112840",
    "end": "1115400"
  },
  {
    "text": "can see the join node was a job on the",
    "start": "1115400",
    "end": "1118080"
  },
  {
    "text": "left and a job on the",
    "start": "1118080",
    "end": "1119840"
  },
  {
    "text": "right what happens if I can get rid of",
    "start": "1119840",
    "end": "1122600"
  },
  {
    "text": "the job on the right and smash it with",
    "start": "1122600",
    "end": "1124280"
  },
  {
    "text": "the job on the",
    "start": "1124280",
    "end": "1125520"
  },
  {
    "text": "left so we are actually introspecting",
    "start": "1125520",
    "end": "1127799"
  },
  {
    "text": "the program and to introspect the",
    "start": "1127799",
    "end": "1130440"
  },
  {
    "text": "program we need to get a summary of the",
    "start": "1130440",
    "end": "1132400"
  },
  {
    "text": "program that we have written and I'm",
    "start": "1132400",
    "end": "1134080"
  },
  {
    "text": "going to call it as a feature",
    "start": "1134080",
    "end": "1136840"
  },
  {
    "text": "request okay to begin with what is a",
    "start": "1136840",
    "end": "1140000"
  },
  {
    "text": "feature request if you remember I talked",
    "start": "1140000",
    "end": "1141720"
  },
  {
    "text": "about white table which is a set of",
    "start": "1141720",
    "end": "1143240"
  },
  {
    "text": "features so you can think of white table",
    "start": "1143240",
    "end": "1145840"
  },
  {
    "text": "as a collection of spark data frame or a",
    "start": "1145840",
    "end": "1150000"
  },
  {
    "text": "Flink uh data frame or you can simply",
    "start": "1150000",
    "end": "1153400"
  },
  {
    "text": "talk about it like oh it's a map a Scala",
    "start": "1153400",
    "end": "1155840"
  },
  {
    "text": "map uh a map that goes from input and",
    "start": "1155840",
    "end": "1158919"
  },
  {
    "text": "partition to a list of Expressions right",
    "start": "1158919",
    "end": "1161799"
  },
  {
    "text": "the list of operations on that data set",
    "start": "1161799",
    "end": "1164080"
  },
  {
    "text": "and merging them is quite simple you",
    "start": "1164080",
    "end": "1165919"
  },
  {
    "text": "merge the left y table with the right y",
    "start": "1165919",
    "end": "1168440"
  },
  {
    "text": "table and you know what that's a monoid",
    "start": "1168440",
    "end": "1170400"
  },
  {
    "text": "addition of map instead of data frame",
    "start": "1170400",
    "end": "1173280"
  },
  {
    "text": "dot join so everything is we talking in",
    "start": "1173280",
    "end": "1176679"
  },
  {
    "text": "terms of abstraction here executing them",
    "start": "1176679",
    "end": "1178760"
  },
  {
    "text": "is quite simple you map over that um key",
    "start": "1178760",
    "end": "1182400"
  },
  {
    "text": "value pair which is the the data to the",
    "start": "1182400",
    "end": "1185120"
  },
  {
    "text": "list of expressions and you call create",
    "start": "1185120",
    "end": "1187440"
  },
  {
    "text": "features not you could you could use the",
    "start": "1187440",
    "end": "1189320"
  },
  {
    "text": "helper functions there um and then that",
    "start": "1189320",
    "end": "1192559"
  },
  {
    "text": "going to return a feature gen",
    "start": "1192559",
    "end": "1194640"
  },
  {
    "text": "job now but that was just one white",
    "start": "1194640",
    "end": "1197320"
  },
  {
    "text": "table but that's not the the summary a",
    "start": "1197320",
    "end": "1198760"
  },
  {
    "text": "summary could be a list of white tables",
    "start": "1198760",
    "end": "1201240"
  },
  {
    "text": "at the end of the job and here you go a",
    "start": "1201240",
    "end": "1205000"
  },
  {
    "text": "set of helper",
    "start": "1205000",
    "end": "1206720"
  },
  {
    "text": "functions um to quickly add the new",
    "start": "1206720",
    "end": "1210840"
  },
  {
    "text": "request into the summary so",
    "start": "1210840",
    "end": "1214600"
  },
  {
    "text": "adding uh and merging merging means you",
    "start": "1214600",
    "end": "1217320"
  },
  {
    "text": "have a list of white table on the left a",
    "start": "1217320",
    "end": "1218919"
  },
  {
    "text": "list of white table on the right flat",
    "start": "1218919",
    "end": "1220919"
  },
  {
    "text": "map and map over it and then merge it",
    "start": "1220919",
    "end": "1223120"
  },
  {
    "text": "using the merge merge function in white",
    "start": "1223120",
    "end": "1225400"
  },
  {
    "text": "table that's our summary of the program",
    "start": "1225400",
    "end": "1229240"
  },
  {
    "text": "now you can go to any sophistication",
    "start": "1229240",
    "end": "1231240"
  },
  {
    "text": "here but we're sticking on to some",
    "start": "1231240",
    "end": "1234200"
  },
  {
    "text": "simple stuff which I can explain it to",
    "start": "1234200",
    "end": "1236240"
  },
  {
    "text": "the developers okay that is one of the",
    "start": "1236240",
    "end": "1238840"
  },
  {
    "text": "points that I wanted to make",
    "start": "1238840",
    "end": "1240600"
  },
  {
    "text": "here um and now we need to get all the",
    "start": "1240600",
    "end": "1244480"
  },
  {
    "text": "feature request which is given a",
    "start": "1244480",
    "end": "1248240"
  },
  {
    "text": "program Whenever there is a create",
    "start": "1248240",
    "end": "1250159"
  },
  {
    "text": "features you add it to the request",
    "start": "1250159",
    "end": "1251880"
  },
  {
    "text": "summary join means you merge it map it",
    "start": "1251880",
    "end": "1254919"
  },
  {
    "text": "means you keep going through the loop",
    "start": "1254919",
    "end": "1257640"
  },
  {
    "text": "and zip it means you Cate it to a",
    "start": "1257640",
    "end": "1260760"
  },
  {
    "text": "list and that's our Optimizer right um",
    "start": "1260760",
    "end": "1264360"
  },
  {
    "text": "because we know the summary you can",
    "start": "1264360",
    "end": "1265880"
  },
  {
    "text": "actually manipulate your program in a",
    "start": "1265880",
    "end": "1268000"
  },
  {
    "text": "better way so given an existing",
    "start": "1268000",
    "end": "1271120"
  },
  {
    "text": "implementation and given the summary I",
    "start": "1271120",
    "end": "1273679"
  },
  {
    "text": "should get an optimized",
    "start": "1273679",
    "end": "1276039"
  },
  {
    "text": "implementation and",
    "start": "1276039",
    "end": "1278279"
  },
  {
    "text": "that's",
    "start": "1278279",
    "end": "1281120"
  },
  {
    "text": "basically if you have a list of in your",
    "start": "1281120",
    "end": "1284080"
  },
  {
    "text": "summary you have a list of white tables",
    "start": "1284080",
    "end": "1285440"
  },
  {
    "text": "you map over the white table we already",
    "start": "1285440",
    "end": "1287159"
  },
  {
    "text": "know how to execute a white table that",
    "start": "1287159",
    "end": "1289000"
  },
  {
    "text": "gave you a feature gen now you've got",
    "start": "1289000",
    "end": "1291120"
  },
  {
    "text": "all the pre-join data set and then you",
    "start": "1291120",
    "end": "1293679"
  },
  {
    "text": "map over each node um so we need to",
    "start": "1293679",
    "end": "1297679"
  },
  {
    "text": "return another function in return which",
    "start": "1297679",
    "end": "1299400"
  },
  {
    "text": "is which is the optimized version create",
    "start": "1299400",
    "end": "1301880"
  },
  {
    "text": "features doesn't mean you have to create",
    "start": "1301880",
    "end": "1303440"
  },
  {
    "text": "all the features you can look up and",
    "start": "1303440",
    "end": "1305360"
  },
  {
    "text": "join features basically means well if",
    "start": "1305360",
    "end": "1308320"
  },
  {
    "text": "the create features is not giving up uh",
    "start": "1308320",
    "end": "1310400"
  },
  {
    "text": "giving any features in return because",
    "start": "1310400",
    "end": "1311840"
  },
  {
    "text": "you've already created those features",
    "start": "1311840",
    "end": "1313880"
  },
  {
    "text": "join features may or may not have",
    "start": "1313880",
    "end": "1315720"
  },
  {
    "text": "something on the right side okay",
    "start": "1315720",
    "end": "1319480"
  },
  {
    "text": "okay so join features is apply F1 sit",
    "start": "1319480",
    "end": "1323320"
  },
  {
    "text": "with F2 and you have a either",
    "start": "1323320",
    "end": "1327559"
  },
  {
    "text": "combinator either in in Z which will",
    "start": "1327559",
    "end": "1331000"
  },
  {
    "text": "push your um computations from um C I",
    "start": "1331000",
    "end": "1336400"
  },
  {
    "text": "mean push the error into the right side",
    "start": "1336400",
    "end": "1338000"
  },
  {
    "text": "of the C data type uh that's basically a",
    "start": "1338000",
    "end": "1340600"
  },
  {
    "text": "detail uh essentially what that means is",
    "start": "1340600",
    "end": "1342880"
  },
  {
    "text": "you may not have something on the left",
    "start": "1342880",
    "end": "1344480"
  },
  {
    "text": "side by the time you join something and",
    "start": "1344480",
    "end": "1346880"
  },
  {
    "text": "you can simply use p function to uh lift",
    "start": "1346880",
    "end": "1349320"
  },
  {
    "text": "it to the feature gen job and use the",
    "start": "1349320",
    "end": "1351039"
  },
  {
    "text": "previous implementation to execute",
    "start": "1351039",
    "end": "1354240"
  },
  {
    "text": "it that's it okay so uh a summary would",
    "start": "1354240",
    "end": "1358679"
  },
  {
    "text": "be a feature",
    "start": "1358679",
    "end": "1360559"
  },
  {
    "text": "gen uh an existing run implementation a",
    "start": "1360559",
    "end": "1363640"
  },
  {
    "text": "summary of what we have achieved uh in",
    "start": "1363640",
    "end": "1366279"
  },
  {
    "text": "in the program call the optimize",
    "start": "1366279",
    "end": "1368559"
  },
  {
    "text": "function which we have implemented it's",
    "start": "1368559",
    "end": "1371000"
  },
  {
    "text": "not going to be too far from what I have",
    "start": "1371000",
    "end": "1372960"
  },
  {
    "text": "already shown you like maybe 10 lines of",
    "start": "1372960",
    "end": "1374880"
  },
  {
    "text": "code more than that although they are",
    "start": "1374880",
    "end": "1376440"
  },
  {
    "text": "details so that optim given the summary",
    "start": "1376440",
    "end": "1379600"
  },
  {
    "text": "Pass Run function you get an optimized",
    "start": "1379600",
    "end": "1381880"
  },
  {
    "text": "run",
    "start": "1381880",
    "end": "1382640"
  },
  {
    "text": "function which is",
    "start": "1382640",
    "end": "1385159"
  },
  {
    "text": "um which is returning your a z and you",
    "start": "1385159",
    "end": "1387880"
  },
  {
    "text": "provide the fling",
    "start": "1387880",
    "end": "1389520"
  },
  {
    "text": "service okay so how terrible is this",
    "start": "1389520",
    "end": "1392400"
  },
  {
    "text": "let's",
    "start": "1392400",
    "end": "1394480"
  },
  {
    "text": "say still much better",
    "start": "1394480",
    "end": "1398720"
  },
  {
    "text": "um there still a long one but still",
    "start": "1400400",
    "end": "1403279"
  },
  {
    "text": "better but that is a simplified version",
    "start": "1403279",
    "end": "1405679"
  },
  {
    "text": "of um the",
    "start": "1405679",
    "end": "1408559"
  },
  {
    "text": "the execution plan we got rid of a whole",
    "start": "1408559",
    "end": "1411039"
  },
  {
    "text": "lot of joints so from where to where",
    "start": "1411039",
    "end": "1413679"
  },
  {
    "text": "from here to here so before was actually",
    "start": "1413679",
    "end": "1416279"
  },
  {
    "text": "an optimized version of a terrible",
    "start": "1416279",
    "end": "1417799"
  },
  {
    "text": "execution plan given by the Flink",
    "start": "1417799",
    "end": "1419799"
  },
  {
    "text": "service and now it's much",
    "start": "1419799",
    "end": "1423279"
  },
  {
    "text": "better but are we done yet um you can",
    "start": "1423279",
    "end": "1427320"
  },
  {
    "text": "see that there is no flatmap in that com",
    "start": "1427320",
    "end": "1429480"
  },
  {
    "text": "in that program because flatmap needs",
    "start": "1429480",
    "end": "1431640"
  },
  {
    "text": "runtime value to um to go to the next",
    "start": "1431640",
    "end": "1434400"
  },
  {
    "text": "level of programs basically that means",
    "start": "1434400",
    "end": "1436120"
  },
  {
    "text": "you can't optimize or you can't get the",
    "start": "1436120",
    "end": "1437919"
  },
  {
    "text": "summary out of the program um so how do",
    "start": "1437919",
    "end": "1440840"
  },
  {
    "text": "we derive features from the",
    "start": "1440840",
    "end": "1442520"
  },
  {
    "text": "features well that is also possible I'm",
    "start": "1442520",
    "end": "1444960"
  },
  {
    "text": "not getting into the details but",
    "start": "1444960",
    "end": "1446559"
  },
  {
    "text": "essentially all you need is a project",
    "start": "1446559",
    "end": "1448679"
  },
  {
    "text": "function and a get feature request all",
    "start": "1448679",
    "end": "1451200"
  },
  {
    "text": "right so it it's building a program that",
    "start": "1451200",
    "end": "1453400"
  },
  {
    "text": "can now take the result of the first",
    "start": "1453400",
    "end": "1455039"
  },
  {
    "text": "level feature gen okay so you can see",
    "start": "1455039",
    "end": "1459960"
  },
  {
    "text": "I'm not I'm just going to emit the next",
    "start": "1459960",
    "end": "1462720"
  },
  {
    "text": "program that I need to run to complete",
    "start": "1462720",
    "end": "1465000"
  },
  {
    "text": "the rest of the features because I could",
    "start": "1465000",
    "end": "1466640"
  },
  {
    "text": "inspect the program",
    "start": "1466640",
    "end": "1469799"
  },
  {
    "text": "and if I execute that which is going to",
    "start": "1470640",
    "end": "1473600"
  },
  {
    "text": "be the implementation going is going to",
    "start": "1473600",
    "end": "1475360"
  },
  {
    "text": "be almost the same as that of the join",
    "start": "1475360",
    "end": "1477320"
  },
  {
    "text": "optimization that we did and",
    "start": "1477320",
    "end": "1482240"
  },
  {
    "text": "it's pretty much to um so can I show",
    "start": "1482240",
    "end": "1488399"
  },
  {
    "text": "that in one slide yeah at least at least",
    "start": "1488399",
    "end": "1491360"
  },
  {
    "text": "I could take this this as a screenshot",
    "start": "1491360",
    "end": "1493600"
  },
  {
    "text": "instead of a video that is one uh one",
    "start": "1493600",
    "end": "1496559"
  },
  {
    "text": "page of execution plan",
    "start": "1496559",
    "end": "1499399"
  },
  {
    "text": "that's the simplified version of the",
    "start": "1499399",
    "end": "1500799"
  },
  {
    "text": "execution plan so how much we delve into",
    "start": "1500799",
    "end": "1503720"
  },
  {
    "text": "we got the abstraction almost right",
    "start": "1503720",
    "end": "1505520"
  },
  {
    "text": "there are some cutting Corners there um",
    "start": "1505520",
    "end": "1508640"
  },
  {
    "text": "um but we we we once we finished up with",
    "start": "1508640",
    "end": "1512120"
  },
  {
    "text": "the abstraction we could just look at",
    "start": "1512120",
    "end": "1514520"
  },
  {
    "text": "the data every every uh data notes and",
    "start": "1514520",
    "end": "1517200"
  },
  {
    "text": "do all sort of manipulations the way we",
    "start": "1517200",
    "end": "1519679"
  },
  {
    "text": "want okay so here what happened",
    "start": "1519679",
    "end": "1524320"
  },
  {
    "text": "was um some of the features were using",
    "start": "1524320",
    "end": "1528120"
  },
  {
    "text": "the",
    "start": "1528120",
    "end": "1528799"
  },
  {
    "text": "partitions and since we were doing a",
    "start": "1528799",
    "end": "1531120"
  },
  {
    "text": "monoidal addition it made sure that all",
    "start": "1531120",
    "end": "1533360"
  },
  {
    "text": "the list of Expressions that operate on",
    "start": "1533360",
    "end": "1535520"
  },
  {
    "text": "a particular partitions was collected",
    "start": "1535520",
    "end": "1537320"
  },
  {
    "text": "together automatically and that's why I",
    "start": "1537320",
    "end": "1539360"
  },
  {
    "text": "was saying use abstractions whenever",
    "start": "1539360",
    "end": "1541880"
  },
  {
    "text": "possible and it gives you a lot of",
    "start": "1541880",
    "end": "1544159"
  },
  {
    "text": "Advantage so here without doing without",
    "start": "1544159",
    "end": "1547159"
  },
  {
    "text": "saying anything like list. get all the",
    "start": "1547159",
    "end": "1549679"
  },
  {
    "text": "partitions out there and do a merge",
    "start": "1549679",
    "end": "1552279"
  },
  {
    "text": "that's not going to be a scalable",
    "start": "1552279",
    "end": "1554159"
  },
  {
    "text": "solution but one single solution that",
    "start": "1554159",
    "end": "1556760"
  },
  {
    "text": "made sure that all the partitions are",
    "start": "1556760",
    "end": "1558399"
  },
  {
    "text": "together with the help of monoidal M map",
    "start": "1558399",
    "end": "1561159"
  },
  {
    "text": "and uh you were able to join you were",
    "start": "1561159",
    "end": "1564880"
  },
  {
    "text": "able to reduce the five joints to just",
    "start": "1564880",
    "end": "1567600"
  },
  {
    "text": "one single",
    "start": "1567600",
    "end": "1570120"
  },
  {
    "text": "joint so that's the worst plan and",
    "start": "1570799",
    "end": "1573960"
  },
  {
    "text": "that's the",
    "start": "1573960",
    "end": "1574960"
  },
  {
    "text": "after right",
    "start": "1574960",
    "end": "1577720"
  },
  {
    "text": "so um I hope I I was able to express the",
    "start": "1577720",
    "end": "1581640"
  },
  {
    "text": "gist of this problem and how do we how",
    "start": "1581640",
    "end": "1583440"
  },
  {
    "text": "did we solve this we didn't discuss too",
    "start": "1583440",
    "end": "1585480"
  },
  {
    "text": "much about external typ and things like",
    "start": "1585480",
    "end": "1588360"
  },
  {
    "text": "that but the fundamentals are necessary",
    "start": "1588360",
    "end": "1590480"
  },
  {
    "text": "now this is not a shortcut to any",
    "start": "1590480",
    "end": "1591880"
  },
  {
    "text": "learning you have learn now this can be",
    "start": "1591880",
    "end": "1594799"
  },
  {
    "text": "sellable to a client and they'll be okay",
    "start": "1594799",
    "end": "1597720"
  },
  {
    "text": "with it because we didn't talk too much",
    "start": "1597720",
    "end": "1599799"
  },
  {
    "text": "about FP there um we didn't talk about",
    "start": "1599799",
    "end": "1603760"
  },
  {
    "text": "laws by the way um so we said we are",
    "start": "1603760",
    "end": "1607080"
  },
  {
    "text": "able to project features and reuse",
    "start": "1607080",
    "end": "1608799"
  },
  {
    "text": "features so for example one law is um",
    "start": "1608799",
    "end": "1611679"
  },
  {
    "text": "joining the to projected data set is",
    "start": "1611679",
    "end": "1613720"
  },
  {
    "text": "equal to projecting The Joint data set",
    "start": "1613720",
    "end": "1615919"
  },
  {
    "text": "considering it as an outer joint okay",
    "start": "1615919",
    "end": "1619000"
  },
  {
    "text": "so that low will get propagated through",
    "start": "1619000",
    "end": "1621399"
  },
  {
    "text": "to the details of the program which",
    "start": "1621399",
    "end": "1624159"
  },
  {
    "text": "means propagated through to the Flink",
    "start": "1624159",
    "end": "1626440"
  },
  {
    "text": "service and make sure that when you join",
    "start": "1626440",
    "end": "1628960"
  },
  {
    "text": "those two data set you don't get a",
    "start": "1628960",
    "end": "1630240"
  },
  {
    "text": "runtime exception saying that duplicate",
    "start": "1630240",
    "end": "1632000"
  },
  {
    "text": "feature column so that gets that low is",
    "start": "1632000",
    "end": "1636360"
  },
  {
    "text": "in terms of abstraction but nicely get",
    "start": "1636360",
    "end": "1638159"
  },
  {
    "text": "propagated through to the implementation",
    "start": "1638159",
    "end": "1639640"
  },
  {
    "text": "made sure that you don't get a runtime",
    "start": "1639640",
    "end": "1641159"
  },
  {
    "text": "exception I hope you will write test",
    "start": "1641159",
    "end": "1643200"
  },
  {
    "text": "cases for sure and",
    "start": "1643200",
    "end": "1646520"
  },
  {
    "text": "logging is quite simple because all of",
    "start": "1646520",
    "end": "1650360"
  },
  {
    "text": "these are programs which are just data",
    "start": "1650360",
    "end": "1653520"
  },
  {
    "text": "you could pattern match on each one of",
    "start": "1653520",
    "end": "1655960"
  },
  {
    "text": "them call some printel in and then um",
    "start": "1655960",
    "end": "1660799"
  },
  {
    "text": "delegate it to the final",
    "start": "1660799",
    "end": "1662840"
  },
  {
    "text": "implementation not a great logging but",
    "start": "1662840",
    "end": "1666360"
  },
  {
    "text": "for me that was a that was one minute",
    "start": "1666360",
    "end": "1668600"
  },
  {
    "text": "two minute thing to to understand what",
    "start": "1668600",
    "end": "1670840"
  },
  {
    "text": "is the execution",
    "start": "1670840",
    "end": "1673279"
  },
  {
    "text": "plan and is that backend diagnostic well",
    "start": "1673279",
    "end": "1677120"
  },
  {
    "text": "all of what I have discussed right now",
    "start": "1677120",
    "end": "1679559"
  },
  {
    "text": "and the optimization just worked with",
    "start": "1679559",
    "end": "1681640"
  },
  {
    "text": "Apache spark too and Spark was the one",
    "start": "1681640",
    "end": "1684600"
  },
  {
    "text": "that went into production maybe because",
    "start": "1684600",
    "end": "1686679"
  },
  {
    "text": "of the type of features that we have",
    "start": "1686679",
    "end": "1688159"
  },
  {
    "text": "built but for whatever reason spark was",
    "start": "1688159",
    "end": "1690840"
  },
  {
    "text": "faster",
    "start": "1690840",
    "end": "1692720"
  },
  {
    "text": "um but it's still comparable so all of",
    "start": "1692720",
    "end": "1696799"
  },
  {
    "text": "this it was implemented using Flink",
    "start": "1696799",
    "end": "1699519"
  },
  {
    "text": "because everyone was bored with always",
    "start": "1699519",
    "end": "1702039"
  },
  {
    "text": "using spars so we started with Flink and",
    "start": "1702039",
    "end": "1704399"
  },
  {
    "text": "then because of performance reasons we",
    "start": "1704399",
    "end": "1706960"
  },
  {
    "text": "moved to spark as",
    "start": "1706960",
    "end": "1708880"
  },
  {
    "text": "well uh there was a lot out there but",
    "start": "1708880",
    "end": "1712799"
  },
  {
    "text": "that was it um it's sticking on to",
    "start": "1712799",
    "end": "1715720"
  },
  {
    "text": "fundamentals and um considering your",
    "start": "1715720",
    "end": "1718600"
  },
  {
    "text": "program as data introspecting the data",
    "start": "1718600",
    "end": "1721360"
  },
  {
    "text": "for this for that reason still purely",
    "start": "1721360",
    "end": "1724080"
  },
  {
    "text": "functional functional inros spectable",
    "start": "1724080",
    "end": "1726200"
  },
  {
    "text": "it's declarative and you can keep adding",
    "start": "1726200",
    "end": "1728200"
  },
  {
    "text": "new features without having to worry",
    "start": "1728200",
    "end": "1729559"
  },
  {
    "text": "about whether this feature is going to",
    "start": "1729559",
    "end": "1730880"
  },
  {
    "text": "reuse a partition or not and it all",
    "start": "1730880",
    "end": "1733880"
  },
  {
    "text": "worked um with no time spend on boiler",
    "start": "1733880",
    "end": "1738440"
  },
  {
    "text": "wait thank you",
    "start": "1738440",
    "end": "1741799"
  },
  {
    "text": "all",
    "start": "1747399",
    "end": "1750399"
  }
]