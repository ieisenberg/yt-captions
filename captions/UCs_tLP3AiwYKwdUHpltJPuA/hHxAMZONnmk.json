[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "okay let's get started hello everyone good morning hope everyone enjoyed that uh that amazing keynote earlier uh my",
    "start": "840",
    "end": "7480"
  },
  {
    "text": "name is Mark Puro and I'm an independent iOS Developer I've been developing for iOS since uh since the App Store first",
    "start": "7480",
    "end": "13920"
  },
  {
    "text": "opened back in uh 2008 and uh before that I've been programming Objective C for a very long",
    "start": "13920",
    "end": "20039"
  },
  {
    "text": "time before that it was Java and I've been writing code for about 30 years so I've gotten around so today I'm going to",
    "start": "20039",
    "end": "26359"
  },
  {
    "text": "talk about Swift as you probably have heard Swift is a new programming language developed at Apple um it's",
    "start": "26359",
    "end": "32520"
  },
  {
    "text": "designed to eventually slowly uh replace Objective C and um and it was released",
    "start": "32520",
    "end": "37800"
  },
  {
    "text": "back in June uh for the first beta and only a week and a half ago was it finally released to the general public",
    "start": "37800",
    "end": "43239"
  },
  {
    "text": "where you don't need to be an apple developer in order to start and order to start using it so um it's available for",
    "start": "43239",
    "end": "49440"
  },
  {
    "text": "free for anyone to download from uh from the Mac App Store and um this is going to be an overview of the",
    "start": "49440",
    "end": "54960"
  },
  {
    "text": "language so we're going to start with some Swift going to look at some FP and then we're going to uh do some tweet and",
    "start": "54960",
    "end": "61600"
  },
  {
    "start": "55000",
    "end": "85000"
  },
  {
    "text": "some Hof and then we're going to bork and uh hope everyone's following along and then I'm going to leave a little bit",
    "start": "61600",
    "end": "66680"
  },
  {
    "text": "of time for questions I like to leave a fair amount of padding for questions so if you do have have questions during the",
    "start": "66680",
    "end": "72680"
  },
  {
    "text": "uh talk I do encourage you to please enter them into the uh go-to app on your iOS device or on your Android um and",
    "start": "72680",
    "end": "79560"
  },
  {
    "text": "then at the end we'll aggregate them all together and hopefully we can uh we can cover quite a few of them all right so flash pole who here is",
    "start": "79560",
    "end": "88000"
  },
  {
    "start": "85000",
    "end": "153000"
  },
  {
    "text": "a programmer who here program computers every one of you who here is an Objective C",
    "start": "88000",
    "end": "94119"
  },
  {
    "text": "programmer wow probably about half who here is a c",
    "start": "94119",
    "end": "99640"
  },
  {
    "text": "programmer about half um and Java",
    "start": "99640",
    "end": "105600"
  },
  {
    "text": "C++ C hascal like the diminishing uh the",
    "start": "105600",
    "end": "112520"
  },
  {
    "text": "diminishing returns okay that's uh that's pretty much as expected so let's start out with a tweet and um now I'm",
    "start": "112520",
    "end": "120640"
  },
  {
    "text": "pretty old I've been programming computers for a while and I admit I don't really understand what this uh what this Tweet stuff is but um you know",
    "start": "120640",
    "end": "128039"
  },
  {
    "text": "somehow it's totally different from the twerk because that requires a Snapchat and uh it's all very confusing to me but",
    "start": "128039",
    "end": "134560"
  },
  {
    "text": "I thought you know I'm learning new things I'll jump in and I'll I'll try to learn about this uh this tweet um and it seems pretty popular here because it",
    "start": "134560",
    "end": "140640"
  },
  {
    "text": "appears uh that everyone going along on their bicycle at 40 m hour is doing it with their head down without wearing a",
    "start": "140640",
    "end": "147200"
  },
  {
    "text": "helmet so it seems to be uh All the Rage in this in this town in this country so",
    "start": "147200",
    "end": "152920"
  },
  {
    "text": "because I'm old and you know kind of out of touch I write this an Objective C so the half of you that speak objectiv C",
    "start": "152920",
    "end": "159120"
  },
  {
    "start": "153000",
    "end": "214000"
  },
  {
    "text": "recognize this and the other half you probably don't need to understand what this doing because you will probably never write it but you've got um you",
    "start": "159120",
    "end": "165440"
  },
  {
    "text": "know you've got your normal interface and you've got your implementation they go in different files and you need to",
    "start": "165440",
    "end": "170560"
  },
  {
    "text": "keep those files in sync yourself there's very little help and you've got uh you've got some ampersands and you've got some square brackets and uh this is",
    "start": "170560",
    "end": "178400"
  },
  {
    "text": "basically a little uh a little model of how you might do a tweet so you have this tweet interface and it holds a username and a body and then down there",
    "start": "178400",
    "end": "185040"
  },
  {
    "text": "you have a a tweeter service and the Tweeter service will tweet your Tweet and uh it's got a single T and here's a",
    "start": "185040",
    "end": "190400"
  },
  {
    "text": "little demo of how you use it so that's Objective C congratulations to all the people who've never learned it before",
    "start": "190400",
    "end": "196400"
  },
  {
    "text": "now you know all you need to know and it's uh it's kind of me it's um the",
    "start": "196400",
    "end": "202720"
  },
  {
    "text": "language has evolved over a quarter of a century uh very very slowly and has sort",
    "start": "202720",
    "end": "208760"
  },
  {
    "text": "of gotten out of touch with some of the trends in modern languages so here is that same uh that",
    "start": "208760",
    "end": "217040"
  },
  {
    "start": "214000",
    "end": "221000"
  },
  {
    "text": "same code in Swift hope you all got that uh now you",
    "start": "217040",
    "end": "222239"
  },
  {
    "start": "221000",
    "end": "300000"
  },
  {
    "text": "all know Swift so this is not a complete introduction to the Swift language we're not going to get bogged too down into",
    "start": "222239",
    "end": "227959"
  },
  {
    "text": "syntax and details and how exactly you do things this is more talk on how swift can uh change some of the ways that you",
    "start": "227959",
    "end": "235720"
  },
  {
    "text": "decide to compose and write your apps or your you know your software services so to start out let's think",
    "start": "235720",
    "end": "242879"
  },
  {
    "text": "about what is the same in Swift as in Objective C um Swift has classes just",
    "start": "242879",
    "end": "248159"
  },
  {
    "text": "like Objective C it's not uh breaking out of the object-oriented Paradigm be considered a multiparadigm language um",
    "start": "248159",
    "end": "255360"
  },
  {
    "text": "has methods on those classes it has uh protocols which uh you know c c and",
    "start": "255360",
    "end": "262040"
  },
  {
    "text": "other people uh refer to as interfaces has extensions which are categories which don't have a good analogy in other",
    "start": "262040",
    "end": "268040"
  },
  {
    "text": "language has um you know uh what they call functions methods on on uh on",
    "start": "268040",
    "end": "273280"
  },
  {
    "text": "classes um has a little bit of automatic memory management it doesn't have full garbage collection um but it does have",
    "start": "273280",
    "end": "278720"
  },
  {
    "text": "the same sort of advances in memory management using what's called automatic reference counting um and then it has uh",
    "start": "278720",
    "end": "285080"
  },
  {
    "text": "closures which uh in Objective C were known as blocks so all this none of this stuff is new it's all basically a",
    "start": "285080",
    "end": "291080"
  },
  {
    "text": "onetoone translation from the existing Objective C tool set that you all that",
    "start": "291080",
    "end": "296280"
  },
  {
    "text": "half of you know and probably a little less love so here are some small additions that Swift brings to Objective",
    "start": "296280",
    "end": "302639"
  },
  {
    "start": "300000",
    "end": "468000"
  },
  {
    "text": "C uh you have these new things called structures um structures are like classes but they're different they're",
    "start": "302639",
    "end": "307720"
  },
  {
    "text": "value types we can uh discuss the implications of that in a little bit and you have name spaces finally you don't",
    "start": "307720",
    "end": "313800"
  },
  {
    "text": "have to be like cavemen and prefix or classes with a couple of uppercase letters that you hope will remain unique",
    "start": "313800",
    "end": "319600"
  },
  {
    "text": "uh throughout history and not conflict with anything else um you have uh you have constants you have immutable",
    "start": "319600",
    "end": "325160"
  },
  {
    "text": "constants which helps for some um working with some immutable data uh structure programming you have operator",
    "start": "325160",
    "end": "331800"
  },
  {
    "text": "overloading uh those a few of you from C++ I'm sure half of you hate it and half of you love it and then you have",
    "start": "331800",
    "end": "338560"
  },
  {
    "text": "interoperability with Objective C Swift does run in the same runtime as Objective C so it's not running on a",
    "start": "338560",
    "end": "344039"
  },
  {
    "text": "virtual machine or in you know some sort of emulation layer it is running the same process space as your existing apps",
    "start": "344039",
    "end": "350000"
  },
  {
    "text": "which allows you to um it wouldn't say seamlessly but it does allow you to interoperate with your existing uh with",
    "start": "350000",
    "end": "355319"
  },
  {
    "text": "your existing iOS code so you can incrementally adopt Swift over time and then there are the big additions",
    "start": "355319",
    "end": "361479"
  },
  {
    "text": "there the things that basically don't exist at all in Objective C um or in you know some other languages and uh these",
    "start": "361479",
    "end": "368120"
  },
  {
    "text": "are the things that that it really brings to the table in terms of how you can uh start start thinking differently",
    "start": "368120",
    "end": "374000"
  },
  {
    "text": "about how you write your uh write your software so it has enumerations and enumerations are not just regular",
    "start": "374000",
    "end": "379840"
  },
  {
    "text": "enumerations they're very powerful uh you know they can have methods on them and they can have Associated objects um",
    "start": "379840",
    "end": "385560"
  },
  {
    "text": "which uh coupled with a very sophisticated pattern matching uh specific allows you to do some some very",
    "start": "385560",
    "end": "391720"
  },
  {
    "text": "interesting things you have optional Swift is very heavily um very heavily",
    "start": "391720",
    "end": "398000"
  },
  {
    "text": "leans towards trying to encourage you to not have nulls in your code anymore um",
    "start": "398000",
    "end": "403880"
  },
  {
    "text": "those of you who have uh ever experienced a null pointer exception I don't know if anyone has I i' I've had a",
    "start": "403880",
    "end": "409360"
  },
  {
    "text": "lot of null pointer exceptions and they're rarely fun or expected um one",
    "start": "409360",
    "end": "415039"
  },
  {
    "text": "way around that is to let have null non- nullability and uh Swift really encourages that uh and",
    "start": "415039",
    "end": "420319"
  },
  {
    "text": "forces you to explicitly declare your properties as being nullable has generics all you C programmers know and",
    "start": "420319",
    "end": "426160"
  },
  {
    "text": "love it and it's a it's a great addition to the language it really allows you to to Really tighten up your code and",
    "start": "426160",
    "end": "432360"
  },
  {
    "text": "really know what's going on no more do you have a NSR where hopefully it holds all strings but maybe there are some ins",
    "start": "432360",
    "end": "438759"
  },
  {
    "text": "in there and that's fun has automatic type inference again C people are familiar with this um has a lot of",
    "start": "438759",
    "end": "444960"
  },
  {
    "text": "built-in support for mutability uh along the lines of structs has tles which are sort of like uh light we'll look at",
    "start": "444960",
    "end": "450639"
  },
  {
    "text": "those for a second and it has first class functions and first class functions are the thing I'm going to",
    "start": "450639",
    "end": "455800"
  },
  {
    "text": "concentrate on today because first class functions are the thing that uh allows you to to",
    "start": "455800",
    "end": "462479"
  },
  {
    "text": "Really adopt some of the more uh functional paradigms in your development so I breezed over this but let's look",
    "start": "462479",
    "end": "468919"
  },
  {
    "start": "468000",
    "end": "515000"
  },
  {
    "text": "really quickly at this bit of Swift Code that is the equivalent of The Objective C Service that uh that I wrote before",
    "start": "468919",
    "end": "474840"
  },
  {
    "text": "that um that writes the uh tweet so you have this struct that's a tweet uh PR you can think of a struct as a class",
    "start": "474840",
    "end": "481000"
  },
  {
    "text": "this one's just holding some data this one holds a username and a body for the Tweet um that VAR means that can be",
    "start": "481000",
    "end": "486919"
  },
  {
    "text": "changed the let means it's mutable after you create it and then you've got my Tweeter service that I'm going use to",
    "start": "486919",
    "end": "492360"
  },
  {
    "text": "tweet the Tweet you've got a function that takes a parameter called tweet and that is a type tweet and then there's",
    "start": "492360",
    "end": "497400"
  },
  {
    "text": "some magic that happens in that implementation uh and then there's a single in here you know you can get your",
    "start": "497400",
    "end": "502879"
  },
  {
    "text": "single uh Tweeter service and then here's a little example of how you might do it you'll create your Tweeter service you'll get the shared service you know",
    "start": "502879",
    "end": "509080"
  },
  {
    "text": "you make message and you send out your Tweet and uh and pretty cool so so you'll notice a few more things",
    "start": "509080",
    "end": "516000"
  },
  {
    "text": "there no semicolons there no prefixing the strings with Ampersand um uh there's the uh asky arrows are denoting return",
    "start": "516000",
    "end": "523240"
  },
  {
    "text": "types uh generally speaking type follows a name unlike uh say in Java where the",
    "start": "523240",
    "end": "529080"
  },
  {
    "text": "name um where the type always uh precedes a name um and uh and yeah I mean you can",
    "start": "529080",
    "end": "536640"
  },
  {
    "text": "probably figure out basically all this stuff by glancing at it uh you know as I say you can pick at the language in in",
    "start": "536640",
    "end": "542279"
  },
  {
    "text": "almost no time so let's think about our uh our Tweeter service and let's think about um you know let's think about how",
    "start": "542279",
    "end": "549800"
  },
  {
    "text": "we might improve on it and one of the things we notice is that there's no way to get any indication of whether the",
    "start": "549800",
    "end": "555000"
  },
  {
    "start": "550000",
    "end": "610000"
  },
  {
    "text": "Tweet succeeded or failed because I guess these go out over the internet and then sometimes things can go wrong with",
    "start": "555000",
    "end": "560200"
  },
  {
    "text": "that um it's not completely robust so we need to figure out how to do it um so we've got this function and this",
    "start": "560200",
    "end": "566360"
  },
  {
    "text": "function returns void because it has no feedback um so you know I'm a I'm you",
    "start": "566360",
    "end": "572519"
  },
  {
    "text": "know say a CS 101 student and I decide I'll just have it return a Boolean I'll have it say oh okay it uh you know we",
    "start": "572519",
    "end": "579720"
  },
  {
    "text": "return true if the Tweet succeeded and the Tweet failed and then you've got that running in your uh on your main",
    "start": "579720",
    "end": "584800"
  },
  {
    "text": "thread on your app and they click the Tweet button and the whole thing hangs and you have to start thinking you know oh there's maybe a little more uh",
    "start": "584800",
    "end": "591160"
  },
  {
    "text": "complexity to this problem you um you typically don't want to use uh you know synchronous methods when you're working",
    "start": "591160",
    "end": "598120"
  },
  {
    "text": "with things that might be slow and unpredictable like Network traffic so you know we think a little",
    "start": "598120",
    "end": "603440"
  },
  {
    "text": "bit about you know how might we go about doing this and you know C you probably use some of the NASA async Services um",
    "start": "603440",
    "end": "610440"
  },
  {
    "start": "610000",
    "end": "657000"
  },
  {
    "text": "in Objective C you would have used the uh delegate p b old days and uh delegate",
    "start": "610440",
    "end": "615519"
  },
  {
    "text": "pattern is basically you've got this protocol which is like an interface and that has various callbacks along the protocol that that will be invoked as uh",
    "start": "615519",
    "end": "623240"
  },
  {
    "text": "as various things happen right now we just have one that is uh you know returns whether or not the Tweet was successful and then on the service you'd",
    "start": "623240",
    "end": "629760"
  },
  {
    "text": "assign a delegate to it um and then you tweet it out and then that delegate would get called back and you'd know whether was a whether it worked or not",
    "start": "629760",
    "end": "636560"
  },
  {
    "text": "and then you can decide what do you want to do with the user do you want to you know let them know um if it uh you know",
    "start": "636560",
    "end": "643160"
  },
  {
    "text": "if they want to retry it or if they want to give up or something and you can do exactly the same thing in Swift I mean",
    "start": "643160",
    "end": "648720"
  },
  {
    "text": "you can adopt these patterns in any language you can have a you know a set of delegate methods call backs that that",
    "start": "648720",
    "end": "654399"
  },
  {
    "text": "wind up getting called um so you know you can you can do all that but you know",
    "start": "654399",
    "end": "659880"
  },
  {
    "start": "657000",
    "end": "710000"
  },
  {
    "text": "me in recent years all of the mainstream languages have been getting functional features uh attached to them um and you",
    "start": "659880",
    "end": "667360"
  },
  {
    "text": "know in Javas lambdas and Objective C it's a it's uh uh blocks and C is",
    "start": "667360",
    "end": "673639"
  },
  {
    "text": "closures um but they're all basically the same they're all a deferred block of code execution and they're very useful",
    "start": "673639",
    "end": "680240"
  },
  {
    "text": "for especially things like asynchronous services but also in a breaking up your code into modular",
    "start": "680240",
    "end": "686000"
  },
  {
    "text": "chunks and this is functional programming essentially functional programming uh is a style of programming",
    "start": "686000",
    "end": "692760"
  },
  {
    "text": "it's not a set of strict requirements um there are functional languages that have a set of strict requirements uh That",
    "start": "692760",
    "end": "699800"
  },
  {
    "text": "Vary a little bit depending on which academic uh academic person you're talking to but one of the major",
    "start": "699800",
    "end": "706120"
  },
  {
    "text": "prerequisites of a functional programming language is that functions are first class objects um first class",
    "start": "706120",
    "end": "711920"
  },
  {
    "start": "710000",
    "end": "742000"
  },
  {
    "text": "objects means that they are on par with your ins they're on par with your strings they're on par with your own",
    "start": "711920",
    "end": "717160"
  },
  {
    "text": "custom classes they can be passed around they can can be um they can be you know manipulated they can return other",
    "start": "717160",
    "end": "723480"
  },
  {
    "text": "functions and things like that so as I said it's a style so uh you know you wouldn't say Swift is a functional",
    "start": "723480",
    "end": "729120"
  },
  {
    "text": "programming language but you would say it allows and almost encourages you to adopt a",
    "start": "729120",
    "end": "734880"
  },
  {
    "text": "functional style for how you do things so let's do a very simple thing that probably many of you would have",
    "start": "734880",
    "end": "740079"
  },
  {
    "text": "immediately you know thought to do which is that uh let's have our Tweeter service instead accept uh a block a",
    "start": "740079",
    "end": "746959"
  },
  {
    "start": "742000",
    "end": "755000"
  },
  {
    "text": "closure that will be invoked once the um once the Tweet is is complete so in this",
    "start": "746959",
    "end": "752399"
  },
  {
    "text": "case uh the Syntax for a closure is that it's a function that accepts a single",
    "start": "752399",
    "end": "757920"
  },
  {
    "start": "755000",
    "end": "800000"
  },
  {
    "text": "parameter a Boolean type and then in this case it returns void um so uh so",
    "start": "757920",
    "end": "764600"
  },
  {
    "text": "yeah so here's an example of how how uh this might be used you've got your Tweeter service and now you've got your new Boolean devoid uh function parameter",
    "start": "764600",
    "end": "772480"
  },
  {
    "text": "for the tweet and then you got this done function and that's a variable just like any other variable and that's uh of type",
    "start": "772480",
    "end": "778600"
  },
  {
    "text": "this is just single type uh parameter voi and returns void and then here we're",
    "start": "778600",
    "end": "783760"
  },
  {
    "text": "assigning the variable to something success in you're naming that parameter um I believe in C you use uh equals",
    "start": "783760",
    "end": "791839"
  },
  {
    "text": "Arrow um which is better syntax but they chose in and then uh and then we do you",
    "start": "791839",
    "end": "797320"
  },
  {
    "text": "know something here you know successful and failed and then we send out the Tweet so um you can you know shorten",
    "start": "797320",
    "end": "802959"
  },
  {
    "start": "800000",
    "end": "820000"
  },
  {
    "text": "this there's a lot of uh there's a lot of mechanisms for uh compacting some of the things you do they have a lot of uh",
    "start": "802959",
    "end": "809800"
  },
  {
    "text": "useful shorthand here you're doing the same thing you're attaching it in line into the um into the uh invocation of",
    "start": "809800",
    "end": "816560"
  },
  {
    "text": "the service and then here you're being even more compact uh if your last parameter",
    "start": "816560",
    "end": "823079"
  },
  {
    "start": "820000",
    "end": "850000"
  },
  {
    "text": "of a function is Excel a closure then you don't you can uh declare it out of",
    "start": "823079",
    "end": "829360"
  },
  {
    "text": "line almost as if it were a flow control statement so uh in addition you don't",
    "start": "829360",
    "end": "834480"
  },
  {
    "text": "have to name your parameters you can just use this dollar zero which is the first parameter type inference let's know what that that's going to be a",
    "start": "834480",
    "end": "840800"
  },
  {
    "text": "Boolean and then here we just use a Turner syntax so this is basically doing the same thing you're sending out a",
    "start": "840800",
    "end": "846160"
  },
  {
    "text": "tweet and you just print out whether or not um whether or not it uh it succeeds or fails and this is a higher order",
    "start": "846160",
    "end": "852720"
  },
  {
    "start": "850000",
    "end": "885000"
  },
  {
    "text": "function higher order function is merely a function that takes other functions um same you know in you an Objective C",
    "start": "852720",
    "end": "859720"
  },
  {
    "text": "function that accepts a block that's high or function if you have a csharp uh method that accepts uh closure then",
    "start": "859720",
    "end": "867800"
  },
  {
    "text": "that's a high order function so the functional style of programming is about composing functions and",
    "start": "867800",
    "end": "873000"
  },
  {
    "text": "transforming structures in order to accomplish a task um let's think of some of the very uh",
    "start": "873000",
    "end": "879639"
  },
  {
    "text": "popular high order functions that people often talk about especially in the functional world and these are map",
    "start": "879639",
    "end": "885120"
  },
  {
    "start": "885000",
    "end": "900000"
  },
  {
    "text": "filter and reduce that everyone uh everyone knows and loves um in the",
    "start": "885120",
    "end": "890160"
  },
  {
    "text": "functional world it's not very uh it's not yet very commonly used in uh in at least the world of objective c",
    "start": "890160",
    "end": "896880"
  },
  {
    "text": "development um and these always sound a little little bit uh high futin and",
    "start": "896880",
    "end": "902240"
  },
  {
    "start": "900000",
    "end": "940000"
  },
  {
    "text": "Abstract at first but all they really they're extremely simple you could write each of these function implementations",
    "start": "902240",
    "end": "909440"
  },
  {
    "text": "in you know a dozen or less lines of code um at least the maap in the filter one all map does it takes a bunch of",
    "start": "909440",
    "end": "915959"
  },
  {
    "text": "stuff and it turns it into uh an equivalent number of a bunch of other stuff so it takes 10 stuffs and turns it",
    "start": "915959",
    "end": "921440"
  },
  {
    "text": "into 10 other stuffs filter takes a bunch of stuffs like 10 stuffs and it turns it into 10 or less stuffs but are",
    "start": "921440",
    "end": "928279"
  },
  {
    "text": "the same kind and then reduce sort of compacts down all the stuffs into a single thing in some customiz",
    "start": "928279",
    "end": "935000"
  },
  {
    "text": "customizable way so uh that's a little bit abstract so let's think about a uh application I",
    "start": "935000",
    "end": "942759"
  },
  {
    "start": "940000",
    "end": "1040000"
  },
  {
    "text": "mean we've written this really robust Twitter service this uh you know model layer and this API layer so actually I'm",
    "start": "942759",
    "end": "949440"
  },
  {
    "text": "I'm learning a lot about how Twitter works and what you can do with it so I think I might actually write an app",
    "start": "949440",
    "end": "954880"
  },
  {
    "text": "it'll be uh you know here Twitter is a great platform for thirdparty Developers to develop for so I'm going to uh I'm",
    "start": "954880",
    "end": "961639"
  },
  {
    "text": "going to write my own Twitter client and I'm going to um and I'm going to uh ship",
    "start": "961639",
    "end": "968079"
  },
  {
    "text": "it on the App Store and it will be it will be pretty great so I'm going to be location uh specific I'm going to Target",
    "start": "968079",
    "end": "975560"
  },
  {
    "text": "the Danish audience so I've got my group of beta testers and I've got one of the more famous Danes out there on the",
    "start": "975560",
    "end": "981279"
  },
  {
    "text": "internet um his name is Hamlet and uh and thing out my app and he's uh you",
    "start": "981279",
    "end": "987440"
  },
  {
    "text": "know writing uh to paraphrase with some of his more famous things he's sending out tweet tweet tweets and then you know",
    "start": "987440",
    "end": "993279"
  },
  {
    "text": "if it works maybe he'll be and maybe if it doesn't work maybe he decides not to be but um but that's the question for",
    "start": "993279",
    "end": "999880"
  },
  {
    "text": "another day so you know he's able to uh he's able to do this a lot you know all",
    "start": "999880",
    "end": "1005959"
  },
  {
    "text": "day every day tweet out a bunch of other stuff and he wants to expand that beta test group uh uh to a little to you know",
    "start": "1005959",
    "end": "1011519"
  },
  {
    "text": "some of his friends so we can get a second line of beta testing so we go to his very good friend ponus and uh Polonius is not known for",
    "start": "1011519",
    "end": "1018920"
  },
  {
    "text": "being very succinct in his uh words and uh you know here he's sending out trying to send out a tweet direct message to",
    "start": "1018920",
    "end": "1025918"
  },
  {
    "text": "his son Le Ares who's about to depart for France and he's got a lot of great advice that you probably heard about",
    "start": "1025919",
    "end": "1031558"
  },
  {
    "text": "like neither a borrower nor A lender B and um and I don't see why this won't work but you know I'm fairly new to",
    "start": "1031559",
    "end": "1036640"
  },
  {
    "text": "Twitter and then this happens so it turns out that uh Twitter limits you to",
    "start": "1036640",
    "end": "1043120"
  },
  {
    "start": "1040000",
    "end": "1055000"
  },
  {
    "text": "140 characters uh for messages that you send out on the internet which is um which is kind of nuts to me",
    "start": "1043120",
    "end": "1049520"
  },
  {
    "text": "because I thought the internet was getting faster and not slower and things like that but you know it's uh that's the uh process we have to work",
    "start": "1049520",
    "end": "1057120"
  },
  {
    "start": "1055000",
    "end": "1075000"
  },
  {
    "text": "with so now I'm thinking that maybe uh I'll do some cool I'll do some local specific compression of tweets and send",
    "start": "1057120",
    "end": "1064559"
  },
  {
    "text": "them out uh uh send them out to um to a reduce size than they were originally",
    "start": "1064559",
    "end": "1071480"
  },
  {
    "text": "composed so I don't actually know uh Danish but Americans are known",
    "start": "1071480",
    "end": "1080440"
  },
  {
    "start": "1075000",
    "end": "1100000"
  },
  {
    "text": "far and wide for having a great ability to learn and start speaking other languages",
    "start": "1080440",
    "end": "1086880"
  },
  {
    "text": "um and I do know a little bit of Swedish because when I was growing up we had a",
    "start": "1086880",
    "end": "1091960"
  },
  {
    "text": "great uh series of educational programs of a gentleman who would uh teach both the Swedish language and Swedish cooking",
    "start": "1091960",
    "end": "1099159"
  },
  {
    "text": "um he was a fantastic uh a fantastic resource are there any swedes in the audience right now I I'm told on",
    "start": "1099159",
    "end": "1106039"
  },
  {
    "start": "1100000",
    "end": "1120000"
  },
  {
    "text": "Wikipedia that swedes get tired of uh people approaching them about the Swedish Chef but he's a very beloved",
    "start": "1106039",
    "end": "1111600"
  },
  {
    "text": "character in our in our society so uh you know one of the main things that you learn from the Swedish Chef is that uh",
    "start": "1111600",
    "end": "1118640"
  },
  {
    "text": "most words in Swedish are actually a single word are just bork he says Bor bork bork when he starts the process he",
    "start": "1118640",
    "end": "1125760"
  },
  {
    "start": "1120000",
    "end": "1145000"
  },
  {
    "text": "says Bor Bor bork at the end or when something goes wrong and uh and so that gave me an idea it seems like you could",
    "start": "1125760",
    "end": "1132080"
  },
  {
    "text": "probably reduce everything down to Bor now I'm not dumb I know Swedish is an entirely different language than Danish",
    "start": "1132080",
    "end": "1139159"
  },
  {
    "text": "so uh you know I did a little bit of research and I I discovered this a pretty close translation equivalent so",
    "start": "1139159",
    "end": "1145880"
  },
  {
    "text": "we've got Bor so armed with that uh degree now I spent like half of my uh research and",
    "start": "1145880",
    "end": "1152240"
  },
  {
    "text": "development Budget on coming up with this so it's uh it's pretty good I'm I'm thinking I might get a patent so let's",
    "start": "1152240",
    "end": "1158240"
  },
  {
    "text": "look at uh some some higher order functions with borking so we've got our uh our tweet",
    "start": "1158240",
    "end": "1166840"
  },
  {
    "text": "body and the Tweet body is ponus is long uh message and we want to uh we want to",
    "start": "1166840",
    "end": "1173360"
  },
  {
    "text": "translate this uh using our our new translation algorithm so the first thing we want to do is we want to uh uh split",
    "start": "1173360",
    "end": "1180159"
  },
  {
    "text": "it up into words and we do a fairly naive uh splitting of it where we say there's a built-in function in Swift",
    "start": "1180159",
    "end": "1186320"
  },
  {
    "text": "called uh split and it takes a bunch of stuff doesn't have to be a string doesn't have to be uh you know any",
    "start": "1186320",
    "end": "1192240"
  },
  {
    "text": "particular type it uh just takes a thing and then uh you have a a a closure",
    "start": "1192240",
    "end": "1198400"
  },
  {
    "text": "called back that accepts uh the individual components of the thing and then returns whether or not that should",
    "start": "1198400",
    "end": "1203679"
  },
  {
    "text": "be considered a separator um so we're going to we're going to use this to segment up the body",
    "start": "1203679",
    "end": "1209240"
  },
  {
    "text": "into individual individual words um more succinctly you can just say dollar Z is",
    "start": "1209240",
    "end": "1215360"
  },
  {
    "text": "equal to quote quote because using type inference it will um it will uh know",
    "start": "1215360",
    "end": "1220440"
  },
  {
    "text": "what the type is so that's pretty pretty cool so far we've got a bunch of words pretty Advanced NLP stuff right there um",
    "start": "1220440",
    "end": "1227840"
  },
  {
    "text": "now we want to uh uh reduce it down a little bit because in my research I discovered that",
    "start": "1227840",
    "end": "1233919"
  },
  {
    "start": "1230000",
    "end": "1275000"
  },
  {
    "text": "uh usually longer words are important ones and you can just sort of drop off the shorter ones because rarely are they they're the uh the NS and theth and",
    "start": "1233919",
    "end": "1241440"
  },
  {
    "text": "things like that so we going to filter it down filter again is reducing a uh",
    "start": "1241440",
    "end": "1246520"
  },
  {
    "text": "list of stuff into a list of the same kind of less stuff equal or less stuff so here we are seeing uh filter and you",
    "start": "1246520",
    "end": "1254039"
  },
  {
    "text": "pass in a uh a parameter word and the count elements as basically in the terms",
    "start": "1254039",
    "end": "1259799"
  },
  {
    "text": "of string is saying how long is that string and any word greater than uh seven characters uh we're going to we're",
    "start": "1259799",
    "end": "1265200"
  },
  {
    "text": "going to Chuck out and so this big words array is going to be the filtered out list of words um that uh that has uh",
    "start": "1265200",
    "end": "1272480"
  },
  {
    "text": "seven or less uh characters now here's the uh here's the amazing part we're gonna we're going to",
    "start": "1272480",
    "end": "1279279"
  },
  {
    "start": "1275000",
    "end": "1310000"
  },
  {
    "text": "perform the translation right here and we're going to do that by saying map and what map does it takes a list of a bunch",
    "start": "1279279",
    "end": "1285520"
  },
  {
    "text": "of stuff and it turns it into a list of a bunch of other stuff the same kind uh this is where say like Google might you",
    "start": "1285520",
    "end": "1292320"
  },
  {
    "text": "know query uh you know some sort of uh dictionary and use like context uh",
    "start": "1292320",
    "end": "1297799"
  },
  {
    "text": "sensitive translation of words and things like that but they haven't done the kind of research that I did where I've learned that every word is actually",
    "start": "1297799",
    "end": "1303440"
  },
  {
    "text": "bork so I'm going to map all these big words into Bor and the last thing is the uh the",
    "start": "1303440",
    "end": "1311000"
  },
  {
    "start": "1310000",
    "end": "1365000"
  },
  {
    "text": "function that people um sometimes have a little bit uh more difficulty with which is reduce um in this case reduce is",
    "start": "1311000",
    "end": "1318640"
  },
  {
    "text": "going to just be combining everything back into a single string for me but reduce essentially all it does is it",
    "start": "1318640",
    "end": "1324440"
  },
  {
    "text": "takes a list of stuff and it turns it into a single thing it it uh reduces it down so in my reduction here in the uh",
    "start": "1324440",
    "end": "1332440"
  },
  {
    "text": "it's kind of small but um it is uh taking two strings and it's just appending them together you can get more",
    "start": "1332440",
    "end": "1339000"
  },
  {
    "text": "succinct by saying uh the com combined function takes dollar Z Plus dollar one you get even more compact uh because in",
    "start": "1339000",
    "end": "1347120"
  },
  {
    "text": "Swift functions operators are functions and so in the case of a uh operator that",
    "start": "1347120",
    "end": "1353799"
  },
  {
    "text": "accepts you know one type on the left and one type on the right you can just swap that into a uh uh closure that",
    "start": "1353799",
    "end": "1360880"
  },
  {
    "text": "accepts those two types of parameters so what we do next is we",
    "start": "1360880",
    "end": "1367760"
  },
  {
    "start": "1365000",
    "end": "1410000"
  },
  {
    "text": "compose the function as a series of operations so the first thing we do is uh we bring it all together we split it",
    "start": "1367760",
    "end": "1373960"
  },
  {
    "text": "up into words we filter it down we filter out all the large words we translate everything into work and we",
    "start": "1373960",
    "end": "1379400"
  },
  {
    "text": "turn it back into a single string and then in this particular case we are able to uh we're able to send out a tweet in",
    "start": "1379400",
    "end": "1387720"
  },
  {
    "text": "the acceptable number of characters we have 125 characters and Polonius is able to uh send some very some very helpful",
    "start": "1387720",
    "end": "1394880"
  },
  {
    "text": "advice to L Artis um on his on the eve of his trip to France and that's uh that's what it",
    "start": "1394880",
    "end": "1401600"
  },
  {
    "text": "looks like and I'm sure L is going to be able to understand that and uh and be able to make great use of of all that",
    "start": "1401600",
    "end": "1407720"
  },
  {
    "text": "wisdom that his father is sending out so what I mean everyone here knows you",
    "start": "1407720",
    "end": "1412840"
  },
  {
    "start": "1410000",
    "end": "1435000"
  },
  {
    "text": "could do exactly the same in any other in any other language they're not doing any magic that you couldn't do anywhere",
    "start": "1412840",
    "end": "1419559"
  },
  {
    "text": "else so for example in Objective C here's how you might perform the same operation um you go through you know uh",
    "start": "1419559",
    "end": "1427200"
  },
  {
    "text": "four individual steps you got a lot of looping you have a little bit of branching uh you go through when you",
    "start": "1427200",
    "end": "1433120"
  },
  {
    "text": "break up the word and things like that let say you could do it in simple Objective C you could make that a little more spefic syn if you're using some of",
    "start": "1433120",
    "end": "1439880"
  },
  {
    "text": "the conveniences that uh Coco programmers uh learn like there's a built-in mechanism for splitting up uh",
    "start": "1439880",
    "end": "1447279"
  },
  {
    "text": "strings based on a separator there's a uh you know you can pass a block to a filter and you can you can reduce it",
    "start": "1447279",
    "end": "1454080"
  },
  {
    "text": "down so you can do this in Objective C or any other language um",
    "start": "1454080",
    "end": "1459240"
  },
  {
    "text": "but big difference is you can make this very succinct um and you know with a",
    "start": "1459240",
    "end": "1464600"
  },
  {
    "text": "little bit of experience extremely readable you can glance over it and you can say okay what is this thing",
    "start": "1464600",
    "end": "1470279"
  },
  {
    "start": "1465000",
    "end": "1500000"
  },
  {
    "text": "doing the other thing that this is doing is that there is no alteration in State",
    "start": "1470279",
    "end": "1475720"
  },
  {
    "text": "anywhere here you're not changing any underlying data structures that you originally came into you're not uh uh",
    "start": "1475720",
    "end": "1481880"
  },
  {
    "text": "creating you're not directly creating any individual uh arrays and then modifying them and subtracting from them",
    "start": "1481880",
    "end": "1488919"
  },
  {
    "text": "and uh and having to having to mess around with State when you avoid having",
    "start": "1488919",
    "end": "1495000"
  },
  {
    "text": "to create and manipulate State you make your code much much simpler you wind up",
    "start": "1495000",
    "end": "1500360"
  },
  {
    "start": "1500000",
    "end": "1520000"
  },
  {
    "text": "writing a lot less code um and with less code less really is more when you have",
    "start": "1500360",
    "end": "1506200"
  },
  {
    "text": "less code you have fewer bugs you have fewer uh you have fewer maintenance issues it's easier to understand it's a",
    "start": "1506200",
    "end": "1513279"
  },
  {
    "text": "lot it's just a lot more uh succinct so when you're looking into",
    "start": "1513279",
    "end": "1520320"
  },
  {
    "text": "adopting functional programming Styles one of the things you want to do is you want to think about how can I write less",
    "start": "1520320",
    "end": "1527279"
  },
  {
    "text": "code How can I I how can I stop looping how can I stop branching how can I uh",
    "start": "1527279",
    "end": "1533960"
  },
  {
    "text": "reduce my state manipulation that goes on within my program and you'll find with uh map and reduce and filter you",
    "start": "1533960",
    "end": "1540600"
  },
  {
    "text": "can actually eliminate almost every Loop that goes on in your code you can really",
    "start": "1540600",
    "end": "1546799"
  },
  {
    "text": "um you can really uh uh drop out just a ton of boiler plate that you might be uh",
    "start": "1546799",
    "end": "1554120"
  },
  {
    "text": "that you might be having written over the over the years",
    "start": "1554120",
    "end": "1559840"
  },
  {
    "text": "so in general these sorts of paradigms have been working into uh all the modern",
    "start": "1559840",
    "end": "1566720"
  },
  {
    "text": "languages um especially some of the more experimental languages say run in the jvm like Scala um C is uh is doing",
    "start": "1566720",
    "end": "1574799"
  },
  {
    "text": "amazing things with um with you know closures and things like that everyone is getting hybrid functional features",
    "start": "1574799",
    "end": "1580760"
  },
  {
    "text": "worked into their object-oriented languages um and Swift is certainly not unique in that regard but there's uh it",
    "start": "1580760",
    "end": "1587399"
  },
  {
    "text": "is a bit unique in that it's one of the first new languages um designed for like industrial app development that has",
    "start": "1587399",
    "end": "1594279"
  },
  {
    "text": "these Concepts built in sort of baked in from the very beginning and that allows you to more fluently adopt some of these",
    "start": "1594279",
    "end": "1600880"
  },
  {
    "text": "Styles as you go along so I should say that I'm not a",
    "start": "1600880",
    "end": "1607039"
  },
  {
    "start": "1605000",
    "end": "1785000"
  },
  {
    "text": "paid Swift evangelist I'm just a personal Enthusiast who's happy to not have to uh to write Objective C uh very",
    "start": "1607039",
    "end": "1613919"
  },
  {
    "text": "much anymore if at all um and there are a few you know there are few few rough edges it is brand new um and there are",
    "start": "1613919",
    "end": "1621120"
  },
  {
    "text": "bugs uh there are especially bugs with some of the ID integration with the xcode and things like that so that that",
    "start": "1621120",
    "end": "1627559"
  },
  {
    "text": "can make it a little bit uh cumbersome to get up and running with at the very beginning um bridging as I mentioned",
    "start": "1627559",
    "end": "1634520"
  },
  {
    "text": "before it does run in the same process space as Objective C and the other Coco",
    "start": "1634520",
    "end": "1640399"
  },
  {
    "text": "libraries um and that uh is a fairly heroic achievement on their part but a",
    "start": "1640399",
    "end": "1646360"
  },
  {
    "text": "lot of these libraries have been developed over the past quarter Century they go way back to the era of you know",
    "start": "1646360",
    "end": "1652200"
  },
  {
    "text": "next step and um you know all the all the objects prefixed with NS that's from",
    "start": "1652200",
    "end": "1657919"
  },
  {
    "text": "know the next step days back in the 80s um and that is old and tried and true code that's uh gotten pretty bulletproof",
    "start": "1657919",
    "end": "1664640"
  },
  {
    "text": "over the years but it is not idiomatically similar to Swift um you you will not you may have noticed in",
    "start": "1664640",
    "end": "1670840"
  },
  {
    "text": "some of that of judg of code that you have very long method names where Swift errors on the side of tur method names",
    "start": "1670840",
    "end": "1676200"
  },
  {
    "text": "so some parts of that bridging can be a little bit cumbersome to work with there's no more Dynamic dispatch",
    "start": "1676200",
    "end": "1682799"
  },
  {
    "text": "one of the things that uh objective see people uh often like about their language is that it's extremely",
    "start": "1682799",
    "end": "1688919"
  },
  {
    "text": "objective it's extremely Dynamic you um you uh pass messages to objects rather",
    "start": "1688919",
    "end": "1695600"
  },
  {
    "text": "than you know invoking methods and you can uh uh you make heavy use of duct",
    "start": "1695600",
    "end": "1700760"
  },
  {
    "text": "typing and so you can have a uh a type of an object and you can just sort of",
    "start": "1700760",
    "end": "1706000"
  },
  {
    "text": "pass a message that you don't necessarily know if it will receive or not and maybe that can proxy that method somewhere else it allows for a lot of",
    "start": "1706000",
    "end": "1712440"
  },
  {
    "text": "power but it also allows for a lot danger um and it's a it's a trade-off Swift swift really has lost almost all",
    "start": "1712440",
    "end": "1719080"
  },
  {
    "text": "of that um you can't do many of these things in Swift they are on the side of getting to",
    "start": "1719080",
    "end": "1724600"
  },
  {
    "text": "be uh having more uh strong typing and less kind of cowboy coding with uh with",
    "start": "1724600",
    "end": "1730480"
  },
  {
    "text": "some of the stuff that you can do in in uh in Objective C and the major shortcoming right now in",
    "start": "1730480",
    "end": "1738399"
  },
  {
    "text": "my view is that there's just no built-in error handling there's no exception handling there's not even really uh documented best practices for how you",
    "start": "1738399",
    "end": "1744600"
  },
  {
    "text": "should handle errors um and that makes uh that makes dealing with error",
    "start": "1744600",
    "end": "1750559"
  },
  {
    "text": "conditions a lot more cumbersome um especially in terms of you know when you have to interact with maybe someone",
    "start": "1750559",
    "end": "1756880"
  },
  {
    "text": "else's Swift libraries and more and more will be coming out you need to think about how are you going to bridge your",
    "start": "1756880",
    "end": "1762640"
  },
  {
    "text": "mechanism for error handling with their mechanism I personally predict that um",
    "start": "1762640",
    "end": "1767679"
  },
  {
    "text": "you know that that will uh will change over time but as of now version 1.0",
    "start": "1767679",
    "end": "1773279"
  },
  {
    "text": "released a couple weeks ago there's no built-in solid error handling so that's kind of a uh that's",
    "start": "1773279",
    "end": "1780279"
  },
  {
    "text": "kind of a shortcoming of of Swift right now so with that those are what I deem",
    "start": "1780279",
    "end": "1786039"
  },
  {
    "start": "1785000",
    "end": "1800000"
  },
  {
    "text": "the uh shortcomings of the language and um I'd like to get to uh any questions that people might have in the audience",
    "start": "1786039",
    "end": "1792919"
  },
  {
    "text": "either uh are there any questions entered in through the app um okay",
    "start": "1792919",
    "end": "1800039"
  },
  {
    "start": "1800000",
    "end": "1890000"
  },
  {
    "text": "Swift uh I would answer pretty clearly there are pros and cons right now there's a ton like if you you know look",
    "start": "1806600",
    "end": "1812559"
  },
  {
    "text": "at stack Overflow or something there's perhaps 10 million answers about Objective C and there's maybe 10 answers",
    "start": "1812559",
    "end": "1819120"
  },
  {
    "text": "about Swift um so there is a lot a much larger body of you know existent um",
    "start": "1819120",
    "end": "1826159"
  },
  {
    "text": "objectiv C wisdom and source code and example code and things like that out there but I don't think that that",
    "start": "1826159",
    "end": "1832840"
  },
  {
    "text": "outweighs the uh that outweighs the benefits of learning Swift first off it's going to be a lot easier to learn",
    "start": "1832840",
    "end": "1838679"
  },
  {
    "text": "um if you know already know C or something Swift will be I mean you'll be up and running in a day it's um it's not",
    "start": "1838679",
    "end": "1846120"
  },
  {
    "text": "a complex thing the complex part of building an app isn't necessarily the language it's all the user is you know",
    "start": "1846120",
    "end": "1851679"
  },
  {
    "text": "the the Frameworks that you work with the platform provides you know Android has this whole you know massive set of",
    "start": "1851679",
    "end": "1857440"
  },
  {
    "text": "things and uh you know net has its all you know all of its components and how the Frameworks work and things like that",
    "start": "1857440",
    "end": "1863600"
  },
  {
    "text": "um and iOS has its own own uh own whole world of user interface components and",
    "start": "1863600",
    "end": "1869080"
  },
  {
    "text": "mechanisms for you know finding your location things like that those are the difficult parts of learning and they're going to be the exact same learning",
    "start": "1869080",
    "end": "1875200"
  },
  {
    "text": "curve either in Swift or objective c so I personally think that you know apple",
    "start": "1875200",
    "end": "1880799"
  },
  {
    "text": "apple said this is the future of developing software for uh for iOS devices and for the mac and um and I",
    "start": "1880799",
    "end": "1887519"
  },
  {
    "text": "think that that basically means you should you should eror on the side of",
    "start": "1887519",
    "end": "1891919"
  },
  {
    "start": "1890000",
    "end": "2030000"
  },
  {
    "text": "Swift okay so the question was uh is it possible to write an IOS app entirely in",
    "start": "1900639",
    "end": "1906000"
  },
  {
    "text": "Swift one and two how about the backwards compatibility uh one yes it is you can",
    "start": "1906000",
    "end": "1912360"
  },
  {
    "text": "um you know if you uh open up xcode and you create a new uh a new project the template will say what is your default",
    "start": "1912360",
    "end": "1918799"
  },
  {
    "text": "language and you can say Swift and every single line of code in your app can be uh can be written in Swift I've I've",
    "start": "1918799",
    "end": "1924799"
  },
  {
    "text": "written apps like that a couple um and uh and yeah uh what you know one thing I",
    "start": "1924799",
    "end": "1930480"
  },
  {
    "text": "want to point out though is you know mentioned interoperability with objective c u you can also in your",
    "start": "1930480",
    "end": "1935799"
  },
  {
    "text": "projects mix and match Objective C so you can have some objective c classes you can have some Swift classes if you want which is really nice if you want to",
    "start": "1935799",
    "end": "1942279"
  },
  {
    "text": "start migrating an existing project so maybe you already have a project with a 100 or so objective cclass you can just",
    "start": "1942279",
    "end": "1948600"
  },
  {
    "text": "drop in a single Swift class and you can um and you can start working with that",
    "start": "1948600",
    "end": "1954440"
  },
  {
    "text": "um there are you know there are nuances to the bridge there's some you know Swift constructs that do not map exactly",
    "start": "1954440",
    "end": "1959679"
  },
  {
    "text": "to Objective C um you know I mentioned that there were structs um structs are things that cannot be they're Swift only",
    "start": "1959679",
    "end": "1966639"
  },
  {
    "text": "so the bridge back to Objective C can't understand your code if it's using structs but if you use um if you use",
    "start": "1966639",
    "end": "1972480"
  },
  {
    "text": "classes and you subass from uh from NS object which is the sort of root class",
    "start": "1972480",
    "end": "1977840"
  },
  {
    "text": "passeng Objective C then you can uh then you can have sort of seamless interoperability between the two uh the",
    "start": "1977840",
    "end": "1985159"
  },
  {
    "text": "other part of the question is what about backwards compatibility the um uh so switch what runs you know",
    "start": "1985159",
    "end": "1991760"
  },
  {
    "text": "natively on iOS 8 uh it does run an iOS 7 I'm not sure if it's iOS 7 or 7.1 but",
    "start": "1991760",
    "end": "1998200"
  },
  {
    "text": "um the mechanism by uh which it does that is that when you're building and you're saying I want to be able to run",
    "start": "1998200",
    "end": "2003240"
  },
  {
    "text": "on iOS 7 or higher it actually bundles uh some of the Swift libraries right into your apps uh your apps binary and",
    "start": "2003240",
    "end": "2010840"
  },
  {
    "text": "so uh it loads that up at runtime and it's able to execute it um sort of along the lines of how some of the you know",
    "start": "2010840",
    "end": "2017039"
  },
  {
    "text": "other other uh Frameworks that allow for crossplatform development bundle in you know all the all the libraries that it",
    "start": "2017039",
    "end": "2022639"
  },
  {
    "text": "needs so it'll increase the app sizee by a little bit um but aside from that it should be pretty",
    "start": "2022639",
    "end": "2028840"
  },
  {
    "text": "seamless is there another question there one from the audience",
    "start": "2028840",
    "end": "2035039"
  },
  {
    "start": "2030000",
    "end": "2180000"
  },
  {
    "text": "right right so when I said it doesn't have Dynamic dispatching um I was not complete it does have Dynamic",
    "start": "2042159",
    "end": "2047960"
  },
  {
    "text": "dispatching but that is uh it's from the uh from the language so the way that it",
    "start": "2047960",
    "end": "2055480"
  },
  {
    "text": "works when you're bridging with Objective C is that as I mentioned in Objective C you have you know a method on a class and those wind up getting",
    "start": "2055480",
    "end": "2062398"
  },
  {
    "text": "called essentially by name um using a A dispatch table rather than like a V table that you would have in um in C++",
    "start": "2062399",
    "end": "2070240"
  },
  {
    "text": "or a lot of other languages Swift behaves especially when you subass from NS object um Swift sort",
    "start": "2070240",
    "end": "2077599"
  },
  {
    "text": "of goes into Dynamic dispatch mode where uh any function that you declare on your",
    "start": "2077599",
    "end": "2082638"
  },
  {
    "text": "class will be uh dispatchable by name so that the objective c uh so the OB C code",
    "start": "2082639",
    "end": "2088960"
  },
  {
    "text": "will uh will uh call into that so theoretically there might be a little bit of a memory and performance overhead",
    "start": "2088960",
    "end": "2095480"
  },
  {
    "text": "to it um I've not observed any uh any difference in in Behavior but um but",
    "start": "2095480",
    "end": "2100839"
  },
  {
    "text": "yeah it does sort of go into Dynamic dispatch mode when when you are subclassing objective so so little bit",
    "start": "2100839",
    "end": "2106079"
  },
  {
    "text": "an Objective C world when you're working with with stuff but mostly it's it's obscured from you and similarly you know",
    "start": "2106079",
    "end": "2113560"
  },
  {
    "text": "uh Objective C libraries very frequently do require some degree of of dynamic uh",
    "start": "2113560",
    "end": "2118920"
  },
  {
    "text": "dispatch from the client code for example you have Action Target patterns where you uh are specifying selectors",
    "start": "2118920",
    "end": "2124280"
  },
  {
    "text": "for what happens like when you Tap a button um the only mechanism by which you can declare those is a string in",
    "start": "2124280",
    "end": "2130760"
  },
  {
    "text": "Swift um which is kind of a bummer but um but yeah that uses that same that same selector uh selector uh mechanism",
    "start": "2130760",
    "end": "2138040"
  },
  {
    "text": "does that does that answer your question very",
    "start": "2138040",
    "end": "2142279"
  },
  {
    "text": "good yes yeah you you you so yeah you Dynamic dispatch is occurring when",
    "start": "2145079",
    "end": "2151599"
  },
  {
    "text": "you're inheriting from NS object but you don't have any of the you know uh patterns that people use where like you",
    "start": "2151599",
    "end": "2157240"
  },
  {
    "text": "have an ID there's no equivalent of an ID where you can just sort of pass any message to it or something like that which which people are using a lot when",
    "start": "2157240",
    "end": "2163720"
  },
  {
    "text": "they're getting things in and out of containers that are using making heavy use of duct typing like NSR and stuff so",
    "start": "2163720",
    "end": "2170880"
  },
  {
    "text": "so yeah I was perhaps incomplete when I said that there's no dyamic dispatching there is but it's not it's not quite the",
    "start": "2170880",
    "end": "2176079"
  },
  {
    "text": "part of the language that uh that um that is uh",
    "start": "2176079",
    "end": "2181160"
  },
  {
    "start": "2180000",
    "end": "2260000"
  },
  {
    "text": "promoted are there uh yes B There For What",
    "start": "2181160",
    "end": "2189440"
  },
  {
    "text": "um no so the uh if you're familiar sorry the question was is there any for",
    "start": "2189440",
    "end": "2194640"
  },
  {
    "text": "mocking and and test Frameworks um the testing support right now is basically a",
    "start": "2194640",
    "end": "2200359"
  },
  {
    "text": "slim Port of the existing xcode testing Frameworks which are not uh especially",
    "start": "2200359",
    "end": "2206160"
  },
  {
    "text": "sophisticated if you've ever used them they're basically if you've ever used junit is essentially a continuation of",
    "start": "2206160",
    "end": "2212000"
  },
  {
    "text": "junit so mocking is not something that uh is part of the language or of the uh developer support however one of the um",
    "start": "2212000",
    "end": "2219119"
  },
  {
    "text": "you know there are a lot of sort of burgeoning Swift projects open source projects out there and I know a couple of them are um are uh concentrated",
    "start": "2219119",
    "end": "2227000"
  },
  {
    "text": "concentrating on adopting some of these uh uh more popular test driven",
    "start": "2227000",
    "end": "2232480"
  },
  {
    "text": "Frameworks that you see like in node.js and uh Scala and things like that um in Swift and some of Swift's uh the ability",
    "start": "2232480",
    "end": "2239480"
  },
  {
    "text": "to overload operators um gives you the ability to uh create some degree of uh",
    "start": "2239480",
    "end": "2245880"
  },
  {
    "text": "domain specific languages DSL um and one of the popular applications of that is making uh customizable",
    "start": "2245880",
    "end": "2251960"
  },
  {
    "text": "testing Frameworks and I know there are a couple projects out there um that uh that I can look up for you if you uh if",
    "start": "2251960",
    "end": "2257560"
  },
  {
    "text": "you contact me afterwards uh there's a question there",
    "start": "2257560",
    "end": "2263000"
  },
  {
    "start": "2260000",
    "end": "2430000"
  },
  {
    "text": "right so the the basic question yeah so the basic question was um in Objective C you know as I",
    "start": "2294440",
    "end": "2300880"
  },
  {
    "text": "mentioned there's this ID um this ID type which is uh is like a general",
    "start": "2300880",
    "end": "2306160"
  },
  {
    "text": "object type that kind of kind of can be treated as anything but you have to be careful because if you send a unrecognized selector to it your whole",
    "start": "2306160",
    "end": "2312480"
  },
  {
    "text": "app will crash unless you unless you handle that um and so the the questioner",
    "start": "2312480",
    "end": "2317720"
  },
  {
    "text": "was asking how do you work with um those sorts of uh objects when you're bridging",
    "start": "2317720",
    "end": "2323319"
  },
  {
    "text": "to Objective C so uh Objective C doesn't have uh generics so you know you have an",
    "start": "2323319",
    "end": "2329760"
  },
  {
    "text": "NS array uh their their core list object and that doesn't have any mechanism of",
    "start": "2329760",
    "end": "2335480"
  },
  {
    "text": "expressing the type you just have a bunch of IDs in it similar for NS dictionary um some people might refer to",
    "start": "2335480",
    "end": "2342359"
  },
  {
    "text": "as a map or a hash um they just have you know keys are IDs conforming to at least",
    "start": "2342359",
    "end": "2348240"
  },
  {
    "text": "copying and values or IDs um and very frequently when you're calling into Coco code you get back an NS array um and the",
    "start": "2348240",
    "end": "2357000"
  },
  {
    "text": "translation into Swift is that you have an NS array of of type any object which",
    "start": "2357000",
    "end": "2362640"
  },
  {
    "text": "is their U uh protocol that is um basically doesn't declare anything just",
    "start": "2362640",
    "end": "2368880"
  },
  {
    "text": "says it could be any object it's not that nice to deal with it usually you just um the the quick way is to just",
    "start": "2368880",
    "end": "2376000"
  },
  {
    "text": "cast it and hope that uh there wasn't any miscasts um you can run like filter",
    "start": "2376000",
    "end": "2381960"
  },
  {
    "text": "on it um like I I was showing before you can say you know filter things out based",
    "start": "2381960",
    "end": "2387359"
  },
  {
    "text": "on whether or not it is you're you're positive that it is of of the type that you expect um but it is one of the sort",
    "start": "2387359",
    "end": "2393680"
  },
  {
    "text": "of clui areas of uh of interacting with things you basically have to do a little bit of extra work to cast things now",
    "start": "2393680",
    "end": "2399319"
  },
  {
    "text": "some of the so some of the bridging uh apis that they've written they um they",
    "start": "2399319",
    "end": "2404480"
  },
  {
    "text": "have uh narrowed down the types uh that it returns um and so I think in the sort of shims that they have that do the",
    "start": "2404480",
    "end": "2410599"
  },
  {
    "text": "bridging sometimes you get back like an array of strings but most of them are just a a array of any",
    "start": "2410599",
    "end": "2416599"
  },
  {
    "text": "object so it's not great I expect that will you know over",
    "start": "2416599",
    "end": "2422319"
  },
  {
    "text": "coming years that will be addressed a little better um as they you know work out some of the k in the",
    "start": "2422319",
    "end": "2428520"
  },
  {
    "text": "bridge so are there any other questions from the",
    "start": "2428520",
    "end": "2434079"
  },
  {
    "start": "2430000",
    "end": "2490000"
  },
  {
    "text": "audience oh okay",
    "start": "2434079",
    "end": "2437680"
  },
  {
    "text": "y it's not good right now it's um there's something called uh mirror and",
    "start": "2440160",
    "end": "2445480"
  },
  {
    "text": "as you might expect mirror is how you reflect on things and you can get a little bit of information out of uh mirror you can get some type information",
    "start": "2445480",
    "end": "2452319"
  },
  {
    "text": "and stuff um but reflection support right now is fairly weak uh and that may",
    "start": "2452319",
    "end": "2458079"
  },
  {
    "text": "be intentional because the language does try to guide you much more into you know a statically typed um you know strong",
    "start": "2458079",
    "end": "2465000"
  },
  {
    "text": "strongly type static you know Direction rather than a you know let's reflect on this thing and um and get back uh you",
    "start": "2465000",
    "end": "2472800"
  },
  {
    "text": "know figure out what to do based on what types the types hold but it it's it's a little bit um",
    "start": "2472800",
    "end": "2479560"
  },
  {
    "text": "it's a little bit weak but I mean you can you know if you get in any object you can query what kind of class it is and then you can change your behavior",
    "start": "2479560",
    "end": "2485240"
  },
  {
    "text": "based on that and decide how to cast",
    "start": "2485240",
    "end": "2489240"
  },
  {
    "start": "2490000",
    "end": "2530000"
  },
  {
    "text": "so the question is is it mature enough for production code uh yes I'm writing",
    "start": "2493520",
    "end": "2498640"
  },
  {
    "text": "uh all my new apps I'm working on I'm writing purely in Swift um time is extremely robust uh runtime you know as",
    "start": "2498640",
    "end": "2506440"
  },
  {
    "text": "I mentioned is running on the objectives to runtime and that's sort of old and tried and true um with its own new set of class libraries uh you know the the",
    "start": "2506440",
    "end": "2514200"
  },
  {
    "text": "rough areas are really with development uh right now but runtime I find to be",
    "start": "2514200",
    "end": "2519880"
  },
  {
    "text": "basically as bulletproof as uh you know as the rest of uh if you're developing Objective",
    "start": "2519880",
    "end": "2525200"
  },
  {
    "text": "C so I I I'm personally very happy with it so",
    "start": "2525200",
    "end": "2530280"
  },
  {
    "start": "2530000",
    "end": "2560000"
  },
  {
    "text": "far are there",
    "start": "2530280",
    "end": "2533640"
  },
  {
    "text": "other yeah so uh the question is what about unit testing um sort of going back to uh back to the question there before",
    "start": "2535400",
    "end": "2541880"
  },
  {
    "text": "uh there's not any really great built-in support for unit testing xcode itself has a tested framework that has you know",
    "start": "2541880",
    "end": "2548319"
  },
  {
    "text": "some sort of nice reporting and stuff like that but it's not doesn't match the sophistication that you have right now in in other languages um with respect to",
    "start": "2548319",
    "end": "2555160"
  },
  {
    "text": "the unit testing libraries and the you know sort of new patterns that you can you can apply to",
    "start": "2555160",
    "end": "2561119"
  },
  {
    "start": "2560000",
    "end": "2650000"
  },
  {
    "text": "it um there are a few good you know it's very new um there's uh ob. there's a a",
    "start": "2566040",
    "end": "2576680"
  },
  {
    "text": "web azine called objc doio um which ironically their last issue was all",
    "start": "2576680",
    "end": "2582359"
  },
  {
    "text": "about Swift that's a very good uh sort of overview in introduction um uh you know there are a few GitHub",
    "start": "2582359",
    "end": "2589160"
  },
  {
    "text": "projects out there but I think the the really the really definitive resource are uh the at WWDC this year in 2014 um",
    "start": "2589160",
    "end": "2598720"
  },
  {
    "text": "Apple gave you know a number of talks on Swift and they gave three really great talks uh you know beginning Swift uh",
    "start": "2598720",
    "end": "2605160"
  },
  {
    "text": "intermediate Swift and advanced Swift and you can watch all of those for free on their website and they're highly",
    "start": "2605160",
    "end": "2610960"
  },
  {
    "text": "recommended they basically you know go over uh the language from first principles um regardless of whether or",
    "start": "2610960",
    "end": "2617040"
  },
  {
    "text": "not you're you know familiar with Objective C and um and they cover it really well um and they have a few",
    "start": "2617040",
    "end": "2623200"
  },
  {
    "text": "examples in their website they're posting more and more over time but um but yeah that that's a good resource oh",
    "start": "2623200",
    "end": "2628480"
  },
  {
    "text": "and Apple's uh uh Apple published a book um available both on the web on their on",
    "start": "2628480",
    "end": "2634240"
  },
  {
    "text": "their uh developer page as well as in books um called the Swift programming",
    "start": "2634240",
    "end": "2639480"
  },
  {
    "text": "language um and that's basically the entire manual for the programming language a little more manually reading but um but very useful as a",
    "start": "2639480",
    "end": "2647079"
  },
  {
    "text": "reference any more questions at all okay um I have about five more minutes so I'm",
    "start": "2647079",
    "end": "2654520"
  },
  {
    "start": "2650000",
    "end": "2820000"
  },
  {
    "text": "going to do a very quick uh demo of one of the great features of Swift that um",
    "start": "2654520",
    "end": "2663000"
  },
  {
    "text": "that was introduced that a great Learning Resource and it's called The Playground you probably expect you",
    "start": "2663000",
    "end": "2668640"
  },
  {
    "text": "probably heard of it um and",
    "start": "2668640",
    "end": "2673680"
  },
  {
    "text": "so so the playground is a special mode in uh xcode which is Apple's uh Apple's",
    "start": "2674920",
    "end": "2681200"
  },
  {
    "text": "ID and um it's a really fantastic resource for initially learning the language it's",
    "start": "2681200",
    "end": "2688160"
  },
  {
    "text": "essentially a little scratch Pad uh where you can just kind of type and it is executed as you uh as you type it if",
    "start": "2688160",
    "end": "2695160"
  },
  {
    "text": "I want to write my first uh Swift program I can type 1 plus 2 and the have three and uh that's a that's a pretty",
    "start": "2695160",
    "end": "2701280"
  },
  {
    "text": "cool uh pretty cool uh thing to do and you can do let s equals string and then",
    "start": "2701280",
    "end": "2707839"
  },
  {
    "text": "you can see on the right hand side that it's a string um and you can see that uh S2 equals S Plus",
    "start": "2707839",
    "end": "2715800"
  },
  {
    "text": "another and you can see that you unlike Objective C you have tination automatically in in uh for Strings which",
    "start": "2715800",
    "end": "2722960"
  },
  {
    "text": "is really nice um and you can write classes and functions and things like that so I can do like a struct this is",
    "start": "2722960",
    "end": "2729319"
  },
  {
    "text": "how I actually wrote the uh framework for my tweet uh tweet app so you can say you have a struct that's a tweet and you",
    "start": "2729319",
    "end": "2734440"
  },
  {
    "text": "can say you have a VAR a username it's a string and you have a uh body and that's",
    "start": "2734440",
    "end": "2740440"
  },
  {
    "text": "another string and then you can construct the Tweet oops lowercase",
    "start": "2740440",
    "end": "2749800"
  },
  {
    "text": "tweet where uh you've got Hamlet and the body is work words words",
    "start": "2750800",
    "end": "2759280"
  },
  {
    "text": "words worlds worlds worlds so this is a fantastic research",
    "start": "2759280",
    "end": "2764520"
  },
  {
    "text": "for B resource for basically picking up the language and just sort of playing around with it without having to muck around with making a whole new project",
    "start": "2764520",
    "end": "2771520"
  },
  {
    "text": "and a whole um you know learning about xcode project management you can um you",
    "start": "2771520",
    "end": "2776640"
  },
  {
    "text": "know experiment with uh you know let strings equals s comma S2 and you have a",
    "start": "2776640",
    "end": "2782559"
  },
  {
    "text": "couple of uh a couple of strings and you can do strings. math app um and you pass",
    "start": "2782559",
    "end": "2789000"
  },
  {
    "text": "in you know say uh word in and this is our little translation thing that we",
    "start": "2789000",
    "end": "2797119"
  },
  {
    "text": "wrote and as you type you know things on the right hand side start to go gray until the compiler kind of catches up",
    "start": "2799400",
    "end": "2805680"
  },
  {
    "text": "with uh with what you're doing although in this case I think I may have uh may have overcome the compiler oops",
    "start": "2805680",
    "end": "2813960"
  },
  {
    "text": "string and then yeah so a typo you can see ER messages so you know in terms of",
    "start": "2813960",
    "end": "2820559"
  },
  {
    "start": "2820000",
    "end": "2865000"
  },
  {
    "text": "learning the language this is a fantastic resource for um for just getting up and running and experimenting",
    "start": "2820559",
    "end": "2825839"
  },
  {
    "text": "with syntax and seeing how some of the type inference works and things like that so if you just download xcode for free from the Mac App Store you can just",
    "start": "2825839",
    "end": "2832559"
  },
  {
    "text": "immediately get uh started by doing uh doing new um new uh uh new playground",
    "start": "2832559",
    "end": "2840880"
  },
  {
    "text": "and it will um it will uh it will do that for you so with that unless are our",
    "start": "2840880",
    "end": "2847040"
  },
  {
    "text": "any other uh any other questions okay",
    "start": "2847040",
    "end": "2852559"
  },
  {
    "text": "yeah okay yeah yeah I can do that I have three more minutes so I can show an optional type so the optional type is um",
    "start": "2854119",
    "end": "2860400"
  },
  {
    "text": "as I mentioned they",
    "start": "2860400",
    "end": "2864480"
  },
  {
    "start": "2865000",
    "end": "3120000"
  },
  {
    "text": "uh so I'd like to encourage you to use um non-optional types so I have VAR um",
    "start": "2866040",
    "end": "2872760"
  },
  {
    "text": "star I'll call it a string even though um",
    "start": "2872760",
    "end": "2878160"
  },
  {
    "text": "it knows it from type inference so now I can you know have a variable so I can change it to bar or I can change it to",
    "start": "2878160",
    "end": "2885079"
  },
  {
    "text": "B I can change it to anything but I can't change it to",
    "start": "2885079",
    "end": "2891240"
  },
  {
    "text": "nil nil in Objective C is null in every other modern language um and that's",
    "start": "2891240",
    "end": "2897559"
  },
  {
    "text": "because that's because uh string by default every uh every uh type is a uh",
    "start": "2897559",
    "end": "2905240"
  },
  {
    "text": "non is a non-optional type and the mechanism for making opal is I believe it's the same in uh uh C is you tack on",
    "start": "2905240",
    "end": "2913240"
  },
  {
    "text": "a question mark and that indicates that that is a nullable type um the in the you know what that's doing in the",
    "start": "2913240",
    "end": "2919079"
  },
  {
    "text": "backhand is that is actually making it a optional um it's a uh there's a type",
    "start": "2919079",
    "end": "2926599"
  },
  {
    "text": "called optional and that uh accepts a generic parameter and that's actually a",
    "start": "2926599",
    "end": "2931839"
  },
  {
    "text": "enumeration let me make sure that's actually true yes it is an enumeration with an",
    "start": "2931839",
    "end": "2937319"
  },
  {
    "text": "um you uh I mentioned you can have enumerations with Associated types so uh you can switch on an enumeration and you",
    "start": "2937319",
    "end": "2944760"
  },
  {
    "text": "can say case I believe it's sum let X X or none which is",
    "start": "2944760",
    "end": "2953480"
  },
  {
    "text": "nil so in this case I signed it to nil and uh the uh enumeration said okay it's",
    "start": "2953480",
    "end": "2960200"
  },
  {
    "text": "not it's a uh none type but if I commented out the string equals nil",
    "start": "2960200",
    "end": "2967720"
  },
  {
    "text": "uh you have is is a sum type so that's a lot of sort of overhead to have just for optional types so they have all this",
    "start": "2967720",
    "end": "2973040"
  },
  {
    "text": "shanding where you can just say okay let's say uh string question mark and rather than having to switch on the",
    "start": "2973040",
    "end": "2979400"
  },
  {
    "text": "string you can do this if let uh I'll say s equals",
    "start": "2979400",
    "end": "2986000"
  },
  {
    "text": "Str print Lin s um because if I just try to do",
    "start": "2986000",
    "end": "2991760"
  },
  {
    "text": "this you get an error saying um oops sorry print",
    "start": "2991760",
    "end": "2997480"
  },
  {
    "text": "string well print Lin is is not a good one but let's say uh string plus equals",
    "start": "2997480",
    "end": "3002520"
  },
  {
    "text": "uh X so I'm going to get an error because I'm working on a a terrible",
    "start": "3002520",
    "end": "3008200"
  },
  {
    "text": "error that is a problem with X code but uh but you have an error because it's",
    "start": "3008200",
    "end": "3013559"
  },
  {
    "text": "saying spring question mark is not identical to I don't know why it thinks I want it to be un eight8 bit integer",
    "start": "3013559",
    "end": "3020079"
  },
  {
    "text": "but um but what it's saying is that I don't really know how to operate on this optional type because you haven't guaranteed that it actually exists so if",
    "start": "3020079",
    "end": "3027359"
  },
  {
    "text": "I say um you know if I try to per any operation on it I need to I need to make sure you know um you know let's let uh",
    "start": "3027359",
    "end": "3035359"
  },
  {
    "text": "star 2 equals Star Plus X so here it's uh yeah I've not guaranteed that it is a",
    "start": "3035359",
    "end": "3042799"
  },
  {
    "text": "optional and there's a couple different ways to deal with it you do this IFL syntax which basically says okay within",
    "start": "3042799",
    "end": "3048359"
  },
  {
    "text": "this block s is guaranteed to be uh non-optional you're you're doing what's called unwrapping the optional um you",
    "start": "3048359",
    "end": "3055599"
  },
  {
    "text": "can also sh Shadow the same parameter which is sometimes nice if you if you want to uh uh sorry Shadow the same",
    "start": "3055599",
    "end": "3062240"
  },
  {
    "text": "variable name which is nice if you want to um if you want to just Nest your your blocks of code in there that unwrapped",
    "start": "3062240",
    "end": "3067720"
  },
  {
    "text": "another mechanism to do that is called using an implicitly unwrapped optional which is very dangerous and so that's uh",
    "start": "3067720",
    "end": "3074799"
  },
  {
    "text": "indicated by a exclamation point so if I say um you know let uh S2 = string +",
    "start": "3074799",
    "end": "3083640"
  },
  {
    "text": "x I get an error but then it says maybe you wanted to uh maybe you wanted to",
    "start": "3083640",
    "end": "3089000"
  },
  {
    "text": "unwrap that optional and say I really know that this exists so you know continue going and this actually use a",
    "start": "3089000",
    "end": "3095040"
  },
  {
    "text": "lot in the bridging to Objective C because uh Objective C they make heavy use of being allowed to return nil um",
    "start": "3095040",
    "end": "3101799"
  },
  {
    "text": "very often methods return nil when um when uh uh you know something failed or",
    "start": "3101799",
    "end": "3107680"
  },
  {
    "text": "something and um and so yeah a lot of the objectives C bridging apis have implicitly W unwrapped optionals but the",
    "start": "3107680",
    "end": "3113599"
  },
  {
    "text": "downside is that if it is nil your computer crashes with they well you're",
    "start": "3113599",
    "end": "3118640"
  },
  {
    "text": "not your computer the execution crashes in often a weird place um so that's that's some of the danger in using",
    "start": "3118640",
    "end": "3124559"
  },
  {
    "text": "implicitly optionals so that's sort of the thre minute introduction to how optionals work with the with swift but",
    "start": "3124559",
    "end": "3131960"
  },
  {
    "text": "um but with that I believe I'm out of time uh 11:10 so um if anyone has any other questions I'm around you know all",
    "start": "3131960",
    "end": "3138440"
  },
  {
    "text": "day uh feel free to approach me you can um you can email me at uh mwp 1 or uh sorry at uh",
    "start": "3138440",
    "end": "3147280"
  },
  {
    "text": "Market empathic dcom and um and yeah but you can't follow me on Twitter because I",
    "start": "3147280",
    "end": "3152559"
  },
  {
    "text": "don't know how to use it so thank you all very much for your",
    "start": "3152559",
    "end": "3157040"
  },
  {
    "text": "time and one more thing please do rate this session using your uh your goto app because it really helps uh the",
    "start": "3158000",
    "end": "3164280"
  },
  {
    "text": "conference out and it really helps me out to know you know what if people got everything out of it that they could have gotten out of it so thank you again",
    "start": "3164280",
    "end": "3173000"
  }
]