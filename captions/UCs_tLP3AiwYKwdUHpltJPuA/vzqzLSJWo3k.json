[
  {
    "start": "0",
    "end": "91000"
  },
  {
    "text": "So, hi, I'm Mark Rendle. Nice to meet you, Mark.",
    "start": "13120",
    "end": "18220"
  },
  {
    "text": "And I am an incurable programmer. I started programming 40 years ago.",
    "start": "18220",
    "end": "27750"
  },
  {
    "text": "And I'm still mainly programming as a job,\nthat's kind of what I like doing, working",
    "start": "27750",
    "end": "35610"
  },
  {
    "text": "for lots of different companies, generally\ndoing .NET things and also, yeah, charging",
    "start": "35610",
    "end": "44300"
  },
  {
    "text": "around, speaking at conferences and pathologically\nand capable of saying no to things.",
    "start": "44300",
    "end": "50850"
  },
  {
    "text": "So here I am. Sounds familiar. So I'm Matt Turner.",
    "start": "50850",
    "end": "56769"
  },
  {
    "text": "I think I started programming, I think I was\neight. This was before the internet, right. So I go in, there was a computer in the house\nand I got a book and the book told me it was",
    "start": "56769",
    "end": "64250"
  },
  {
    "text": "basic. I got another book on assembler after that,\nso I could go a bit better. Which assembler?",
    "start": "64250",
    "end": "69530"
  },
  {
    "text": "I like say six. Like we just... Oh, okay. Just had like a, like a 386, but did computer\nscience and I did my first job as embedded",
    "start": "69530",
    "end": "76600"
  },
  {
    "text": "systems, embedded C, I did some .NET desktop\nstuff for a couple of years, but I've been",
    "start": "76600",
    "end": "82190"
  },
  {
    "text": "doing infrastructure, like the dreaded DevOps\nword, I guess recently. Infrastructure is code and stuff.",
    "start": "82190",
    "end": "88430"
  },
  {
    "text": "And you were at QCon yesterday. I was at QCon yesterday. What were you talking about at QCon?",
    "start": "88430",
    "end": "93550"
  },
  {
    "start": "91000",
    "end": "347000"
  },
  {
    "text": "I talked about it, so I was on the Kubernetes\nexpert panel. They were genuine experts on the panel with\nme.",
    "start": "93550",
    "end": "101400"
  },
  {
    "text": "So, you know, Liz writes some people for Lister\nAssister, the maintainer of container D, we got a bunch of questions about what kinds\nof aspects of Kubernetes, a lot less about",
    "start": "101400",
    "end": "110020"
  },
  {
    "text": "how it works now and more about how to use\nit a lot more day to questions. Interesting.",
    "start": "110020",
    "end": "115200"
  },
  {
    "text": "Then the talk was on, I was on the API track,\nand the talk, the track host thought would",
    "start": "115200",
    "end": "125829"
  },
  {
    "text": "fit the plugin the gaps fit, the narrative\nwas API gateways and why we used them.",
    "start": "125830",
    "end": "133010"
  },
  {
    "text": "And how we might move to sort of a service\nmesh, sidecar, you know, distributed approach,",
    "start": "133010",
    "end": "138870"
  },
  {
    "text": "that kind of stuff. So I covered that, but also talked about some\nlike shift left tooling for API development.",
    "start": "138870",
    "end": "146439"
  },
  {
    "text": "So I sort of advocate for people writing APIs\nupfront, like doing like schema-driven development, essentially writing your API interface upfront,\nand then using a bunch of tooling to link",
    "start": "146439",
    "end": "155030"
  },
  {
    "text": "those definitions and to do breaking change\ndetection and stuff like left in the dev cycle and then to generate client and server stub\nlibraries from those, so you don't have to",
    "start": "155030",
    "end": "165090"
  },
  {
    "text": "write a loading code because then you don't\nneed something like an API gateway check-in request or response body schema. After all, you know, you can't send an invalid\none. ",
    "start": "165090",
    "end": "172629"
  },
  {
    "text": "That's loud, that's a weird thing, in the\n.NET world, in particular, there's always",
    "start": "172629",
    "end": "180489"
  },
  {
    "text": "been a tendency to say, you write your service\nin C# or VB.NET, and then we'll generate those",
    "start": "180489",
    "end": "193799"
  },
  {
    "text": "schema, those sort of definitions from your\nC# code. ",
    "start": "193799",
    "end": "203040"
  },
  {
    "text": "When the world was doing SOAP. And you had WSDL files, you just use WCF and\nyou defined an interface in C# and decorated",
    "start": "203040",
    "end": "212280"
  },
  {
    "text": "it with some attributes and it would generate\nthe WSDL file. These days you write your API and ASP.NET\nCore, and again, we have these there are two",
    "start": "212280",
    "end": "224980"
  },
  {
    "text": "plugins there's Swashbuckle and Nswag. And both of those will generate your open\nAPI documentation.",
    "start": "224980",
    "end": "231840"
  },
  {
    "text": "But I know, there are people including in\nthe .NET world who are like, no, no, no, that",
    "start": "231840",
    "end": "238469"
  },
  {
    "text": "is the wrong way round, your open API documentation\nshould exist in its repo. ",
    "start": "238469",
    "end": "247889"
  },
  {
    "text": "That is your living document. Then you write your services to fulfill that\ncontract.",
    "start": "247889",
    "end": "255840"
  },
  {
    "text": "So, and that's the way you would say it should\nbe done? Matt Turner:: That's what I was advocating\nfor yesterday.",
    "start": "255840",
    "end": "261000"
  },
  {
    "text": "I think just being able to generate those\nfiles is better than nothing. There's a big movement where I work.",
    "start": "261000",
    "end": "266800"
  },
  {
    "text": "People are moving Python, I don't care. But they are moving from some Python framework\nto this thing called FastAPI, and one of its",
    "start": "266800",
    "end": "273979"
  },
  {
    "text": "features is being able to generate those open\nAPI files from all the annotations, that's better than nothing because you can, you then\ncan take them, make them into pretty documentation,",
    "start": "273979",
    "end": "282300"
  },
  {
    "text": "you know, discover the API.  So they are around the place and generate\nclient libraries to be able to talk to them.",
    "start": "282300",
    "end": "288580"
  },
  {
    "text": "So it is better than nothing technically,\nbut yes, I advocate for doing it upfront because there's nothing new, right?",
    "start": "288580",
    "end": "294300"
  },
  {
    "text": "It's contract-driven development or interface-driven\ndevelopment, whatever you want to call it. It's going to the green light meeting and\nsay we want to spend four engineering, four",
    "start": "294300",
    "end": "307229"
  },
  {
    "text": "person-months on building this thing, we would\nlike the business to invest in this service. You know this is its contract, this is what\nit's gonna do.",
    "start": "307229",
    "end": "313400"
  },
  {
    "text": "These are the SLAs for the sort of performance\nof reliability of it. And I think being able to take that sort of\ninterface definition there and say, this is",
    "start": "313400",
    "end": "322430"
  },
  {
    "text": "the service it's gonna provide even before\nand with the meeting, with the people who hold the budget, even before you have the\nmeeting with the sort of arcadia, the Principal",
    "start": "322430",
    "end": "330350"
  },
  {
    "text": "engineer where you show the block diagram\nand say, well, can we build this? Is this even gonna work? I think that mindset shift of what is this\nservice for?",
    "start": "330350",
    "end": "337130"
  },
  {
    "text": "Like what services does it provide to whom?\nWhat's its contract? I think that's, really, really powerful.",
    "start": "337130",
    "end": "342710"
  },
  {
    "text": "But no. So the other thing that I got into in the\nlast sort of four years because it suddenly",
    "start": "342710",
    "end": "350300"
  },
  {
    "start": "347000",
    "end": "562000"
  },
  {
    "text": "became a viable option in .NET is gRPC, and\nof course, with gRPC, you write your proto",
    "start": "350300",
    "end": "360440"
  },
  {
    "text": "files, and then it generates stubs for either\nthe server or the client in whatever language.",
    "start": "360440",
    "end": "369530"
  },
  {
    "text": "Someone has come up with a way of doing that\nthe wrong way round in .NET but...",
    "start": "369530",
    "end": "375970"
  },
  {
    "text": "And hibernate in stuff was there. I think this CoFo first approach because I\ndid see Charlotte 10 years ago, I think all",
    "start": "375970",
    "end": "381410"
  },
  {
    "text": "that CoFos first approach comes from the ORM\npeople. Because they, it was always that the database\nfirst, that the DDL or the code.",
    "start": "381410",
    "end": "388259"
  },
  {
    "text": "And I understand why, especially as Visual\nStudio was starting to sort of not suck around",
    "start": "388259",
    "end": "394090"
  },
  {
    "text": "2010. But that was a powerful way of getting things\ndone and they were fighting back against Ruby and all like all of that stuff.",
    "start": "394090",
    "end": "399550"
  },
  {
    "text": "I understand it. Sorry to interrupt. But no, so Microsoft puts some developers\nfull time on a project to make a fully managed",
    "start": "399550",
    "end": "409638"
  },
  {
    "text": "implementation of gRPC on top of their ASP.NET\norchestral engine. It's the fastest gRPC implementation except\nfor Rust, faster than Go, and faster than",
    "start": "409639",
    "end": "420008"
  },
  {
    "text": "Java. It's very, very fast, and you have to write\nthat proto file first and then generate this.",
    "start": "420009",
    "end": "431550"
  },
  {
    "text": "The thing I like about it is that the C# that\nit generates, generates a base class for you",
    "start": "431550",
    "end": "436629"
  },
  {
    "text": "to inherit from, to implement the service\nand the methods on it are declared virtual",
    "start": "436629",
    "end": "444419"
  },
  {
    "text": "rather than abstract. So you override them, but you can not override\nthem.",
    "start": "444419",
    "end": "451030"
  },
  {
    "text": "And if you don't override the method, it throws\na gRPC not implemented exception.",
    "start": "451030",
    "end": "456400"
  },
  {
    "text": "Which is nice. That's the way it should be. Because it means you can sort of writing your\ntest against it and you can write automated",
    "start": "456400",
    "end": "463120"
  },
  {
    "text": "tests. You really can do that. Red-green cycle loop. A test's red because there's no implementation.  I do a workshop at conferences and am also\navailable for children's parties.",
    "start": "463120",
    "end": "477879"
  },
  {
    "text": "Two-day workshop and day one is this is gRPC,\nthis is protobuf.",
    "start": "477879",
    "end": "483389"
  },
  {
    "text": "This is how we define our messages. And as services, we do that upfront and then\nwe write the code to implement them and go",
    "start": "483389",
    "end": "490849"
  },
  {
    "text": "through all that.  Then the second day is, right, this is how\nyou run it in production.",
    "start": "490849",
    "end": "496250"
  },
  {
    "text": "This is how you do authentication. This is how you build a Docker image. This is how you get it running on Kubernetes.",
    "start": "496250",
    "end": "504039"
  },
  {
    "text": "This is how you add Linkerd in as a service. I was going to say.",
    "start": "504039",
    "end": "509919"
  },
  {
    "text": "Because otherwise, .NET has this tendency,\nwhen you are using the HTTPClient, it does",
    "start": "509919",
    "end": "516880"
  },
  {
    "text": "a DNS lookup, takes the first IP address it\ngets, and then that's it, it won't do another",
    "start": "516880",
    "end": "522539"
  },
  {
    "text": "DNS lookup. Oh, even the gRPC libraries don't override\nthat because that's kind of that thing.",
    "start": "522539",
    "end": "528029"
  },
  {
    "text": "They built something into the gRPC library\nspecifically to override that behavior because",
    "start": "528029",
    "end": "534360"
  },
  {
    "text": "they have to do this load balancing thing. But it's not built into regular HTTP yet.",
    "start": "534360",
    "end": "541180"
  },
  {
    "text": "It might be in .NET 7. Oh, interesting. But that's what a service measure does to\nyou?",
    "start": "541180",
    "end": "547170"
  },
  {
    "text": "It does so much more as well. It sort of does heartbeat checking. So it doesn't wait until you're trying to\nsend a request to go, oh, that service isn't",
    "start": "547170",
    "end": "554420"
  },
  {
    "text": "there anymore. And you can, it's sort of building on the\nmutual TLS authentication and everything,",
    "start": "554420",
    "end": "560350"
  },
  {
    "text": "so. Matt Turner:  I got a question yesterday\nabout service mesh plus gRPC. A lot of the client libraries are very dumb\nunless you write a whole load of code, which",
    "start": "560350",
    "end": "570101"
  },
  {
    "start": "562000",
    "end": "887000"
  },
  {
    "text": "you don't wanna do. So you get a service mesh. I said gRPC was designed to be this fat client\nlibrary. It does client-side load balancing.",
    "start": "570101",
    "end": "576740"
  },
  {
    "text": "It can even talk to like a look aside, meaning\nload balancer thing. It does well, because it's doing, it's recreating\nDNS all the time.",
    "start": "576740",
    "end": "586160"
  },
  {
    "text": "Basically. It's essentially, looks, the health check\nis like in three stages, it's going to check with the service discovery system, even though\nthat is usually DNS, but it is pluggable.",
    "start": "586160",
    "end": "594350"
  },
  {
    "text": "Other service discovery systems are available. It does active health checking by pinging\nand making sure that that channel's still",
    "start": "594350",
    "end": "600250"
  },
  {
    "text": "up.  It does passive health checking by seeing\nif like 500 stuff flooding back. They all just drop that one out of the pool. So it's trying to do all of that stuff for\nyou because this person had deployed Istio",
    "start": "600250",
    "end": "609350"
  },
  {
    "text": "with it. And I'm like, right. So all of that goes out the window when you've\ngot Istio because Istio is gonna do it for you. And that's great.",
    "start": "609350",
    "end": "615339"
  },
  {
    "text": "That's a great addition to an HTTP. It's like, you need to configure both of them\nin such a way that they don't fight. But yeah, gRPC had all those ideas.",
    "start": "615339",
    "end": "621120"
  },
  {
    "text": "Mark Rendle:  Istio terrifies me. Matt Turner:  It's complicated. Because it's like as I knew for this workshop\nthat I wanted to demonstrate a service mesh",
    "start": "621120",
    "end": "632639"
  },
  {
    "text": "and the problem because certainly the .NET\ncore 3.1 and the .NET 5 versions of gRPC didn't",
    "start": "632639",
    "end": "639730"
  },
  {
    "text": "do that client-side load balancing. So you did. The problem is the DNS always returns the\naddresses in the same order. ",
    "start": "639730",
    "end": "648380"
  },
  {
    "text": "So you've got five instances of a service\nrunning and then all the other things are talking to that one instance and these four\nare just sitting there going, this is quiet.",
    "start": "648380",
    "end": "658940"
  },
  {
    "text": "I was kind of like looking through how to\nset up Istio and in the context of, I want",
    "start": "658940",
    "end": "665061"
  },
  {
    "text": "to spend two hours on this maximum in a workshop\nlike between a coffee and a lunch, and yeah,",
    "start": "665061",
    "end": "673089"
  },
  {
    "text": "and then it was, how do you set up Linkerd? Well, you do you download the Linkerd binary\nand then you do Linkerd check.",
    "start": "673089",
    "end": "681550"
  },
  {
    "text": "And then you do Linkerd install, and then\nyou do Linkerd inject into your YAML file",
    "start": "681550",
    "end": "689220"
  },
  {
    "text": "that you've already got, which adds a single\nattribute to your service.",
    "start": "689220",
    "end": "694410"
  },
  {
    "text": "As an annotation and then they use a mutating\nrepo. That is it. Yes.",
    "start": "694410",
    "end": "699900"
  },
  {
    "text": "And then suddenly you've got a service mesh\nrunning and it's got Grafana built-in and it's pumping things out to Prometheus and\nall this.",
    "start": "699900",
    "end": "706269"
  },
  {
    "text": "I'm just like, this is magic. This is something sort of the glib rendering\nof it, but they built a product and it's still",
    "start": "706269",
    "end": "715310"
  },
  {
    "text": "built a platform. It's just all Kubernetes.  They've Googled it but have gone and built\nAnt falls and whatever on top of it.",
    "start": "715310",
    "end": "720670"
  },
  {
    "text": "It's built into open shifts. I think there was a difference in approach\nthere. I mean, I do Istio workshops and first, you've\ngotta get people up and running with the Kubernetes",
    "start": "720670",
    "end": "729680"
  },
  {
    "text": "cluster at first. They may not have seen it or they may just\nhave one provided by their IT department so",
    "start": "729680",
    "end": "734970"
  },
  {
    "text": "it mini cubed\nBut that's not part of the learning, I just want that to be done. So they bring a laptop they've got route on\nand I give them this long minikube command",
    "start": "734970",
    "end": "743769"
  },
  {
    "text": "that gets all the little options right. And I just run it and trust it fine. But then Istio, the first exercise, the first\ncouple of hours of the workshop is like we're",
    "start": "743769",
    "end": "751420"
  },
  {
    "text": "gonna install this thing. I could have given it, so Istio has got better\nand you can now Istioctl install.",
    "start": "751420",
    "end": "758009"
  },
  {
    "text": "If you want it to have Grafana and do a bunch\nof useful stuff out of the box, you've gotta give it a profile file, like a YAML config.",
    "start": "758009",
    "end": "763639"
  },
  {
    "text": "It took me a while to work out exactly what\nall those options should be for the demo.  Also, I could just give them that, but actually\nlike, no, you need to understand this, like",
    "start": "763639",
    "end": "771959"
  },
  {
    "text": "a big part of this is understanding what these\noptions mean and what they do. So we spend like an hour or two. In the morning it gets a key plus to have\na copy install Istio.",
    "start": "771960",
    "end": "780600"
  },
  {
    "text": "I was like, this is I think, valuable learning. So maybe it shouldn't be like that, but.",
    "start": "780600",
    "end": "786380"
  },
  {
    "text": "Mark Rendler: No, if you've got the sort of\ninfrastructure engineering resources and you've",
    "start": "786380",
    "end": "797420"
  },
  {
    "text": "got very specific needs, then I think Istio\ngives you a lot more sort of points where",
    "start": "797420",
    "end": "804790"
  },
  {
    "text": "you can hook into it and configure what to\ndo. Linkerd is just super opinionated and goes,\nthis is the way it works out the box.",
    "start": "804790",
    "end": "812630"
  },
  {
    "text": "That's probably okay for 80% of use cases. I would agree with that.",
    "start": "812630",
    "end": "818080"
  },
  {
    "text": "I think both have their place. Mark Rendler: Yes. I should maybe syndicate your workshop then,\ndo the Go version.",
    "start": "818080",
    "end": "824399"
  },
  {
    "text": "Mark Rendler: Yes. It sounds like a, yeah. I think gRPC in that approach is just a great\nway to do it. Mark Rendler: Yes.",
    "start": "824399",
    "end": "830029"
  },
  {
    "text": "All those things and explaining to people\nthat the name is quite bad. So it's, to me, it's transport, right.",
    "start": "830029",
    "end": "836430"
  },
  {
    "text": "Protobuf, is it good encoding? HTTP 2 with the multiplexing and then, you\nknow, no head of line blocking.",
    "start": "836430",
    "end": "844050"
  },
  {
    "text": "The generated stubs are a great way of punting\nmessages around. What you build is the API you build on top\nof that can be RPC, like OOP, send a message",
    "start": "844050",
    "end": "853459"
  },
  {
    "text": "to an object that's got a hidden state and\nask it to perform services. Encapsulated, you know, pop a 90 stuff, or\nit can be CRUD.",
    "start": "853459",
    "end": "861130"
  },
  {
    "text": "Like it doesn't have to be an RPC styling\nplace. It can be a REST CRUD interface where you\nmove whole objects around.",
    "start": "861130",
    "end": "866440"
  },
  {
    "text": "Mark Rendler: Go, here is a thing, here's\nan update method. Here's an insert method. You can do that.",
    "start": "866440",
    "end": "871459"
  },
  {
    "text": "Yes. And I've had that conversation with people\nwho say, oh, I don't wanna do gRPC because we believe in REST and, everybody's used to\nCRUD and I've had bad experiences trying to",
    "start": "871459",
    "end": "879199"
  },
  {
    "text": "write RPC because you get consistency problems\nand like, yeah, I get that. It's a bad name. You can... Mark Rendler: It is.",
    "start": "879199",
    "end": "884910"
  },
  {
    "text": "You can do CRUD if you want. Mark Rendler: It's kind of HTTP on steroids\nwith bidirectional streaming. Matt Turner:  Yes.",
    "start": "884910",
    "end": "890840"
  },
  {
    "start": "887000",
    "end": "1310000"
  },
  {
    "text": "And the streaming's so useful. Mark Rendler: Oh, it's great. I love the streaming. Matt Turner:  Because what's your alternative? Deploy Kafka or use WebSocket.",
    "start": "890840",
    "end": "898730"
  },
  {
    "text": "Can you give me some streaming that works? Mark Rendler: I remember my first encounter\nwith gRPC. I was working in canary-auth and they had\na WPF application that took so long to start",
    "start": "898730",
    "end": "917420"
  },
  {
    "text": "up that the users would get to their desk\nand they would turn the computer on and they",
    "start": "917420",
    "end": "924970"
  },
  {
    "text": "would double click the icon to start the application,\nand then they would go and get a cup of coffee.",
    "start": "924970",
    "end": "931600"
  },
  {
    "text": "And this is at 9:00 in the morning, so there's\na queue for the coffee machine and they get the cup of coffee and they come back and it\nstill hasn't started.",
    "start": "931600",
    "end": "940819"
  },
  {
    "text": "Wow. Mark Rendler: And so I did, I was, I'd done\nsome stuff and, I love performance.",
    "start": "940819",
    "end": "949230"
  },
  {
    "text": "I love trying to squeeze extra performance\nout or finding out why things are slow. And so they said, oh, please take a look at\nthis.",
    "start": "949230",
    "end": "958310"
  },
  {
    "text": "We got a bunch. We got to like the entire team is currently\nfocused on trying to make the thing faster.",
    "start": "958310",
    "end": "963470"
  },
  {
    "text": "And so I joined the sort of sprint kickoff\nmeeting for the next sprint, and they were",
    "start": "963470",
    "end": "968589"
  },
  {
    "text": "going, well, I think it might be this. I'm gonna try that. And I think it might be this, and I'm gonna\ntry that. And I was like, \"Well, have you got any measurement\nin there to see sort of which bit?\"",
    "start": "968589",
    "end": "977070"
  },
  {
    "text": "And they said, \"No.\" And so I said, can I instrument your code?",
    "start": "977070",
    "end": "983509"
  },
  {
    "text": "And so I got them to let me set up an influx\nDB database. Yes.",
    "start": "983509",
    "end": "989290"
  },
  {
    "text": "It needed to be pushed. We couldn't use Prometheus because you can't\nhave Prometheus talking to WPF applications.",
    "start": "989290",
    "end": "994610"
  },
  {
    "text": "Well, this is more recent than I thought,\ngiven the problems you talked about, I was like, is this spinning Rust?",
    "start": "994610",
    "end": "1000570"
  },
  {
    "text": "Prometheus dates, this is more recent than,\nit should have been. It was one of those things where the application\nhad...they'd started on it literally when",
    "start": "1000570",
    "end": "1013000"
  },
  {
    "text": "WPF came out, so like 2005, 2006.",
    "start": "1013000",
    "end": "1019149"
  },
  {
    "text": "And so it was more than 10 years old by the\ntime I got to it and it had just grown and",
    "start": "1019149",
    "end": "1024660"
  },
  {
    "text": "grown and grown. But anyway, so I put diagnostic bits all over\nthe place and stopwatches, start a timer,",
    "start": "1024660",
    "end": "1032530"
  },
  {
    "text": "stop a timer, write that to the influx, and\nso forth. And then I presented my results and they said,\n\"Oh no, your measuring's wrong.\"",
    "start": "1032530",
    "end": "1041630"
  },
  {
    "text": "This is showing us making 20,000 individual\ncalls to our gRPC service.",
    "start": "1041630",
    "end": "1049210"
  },
  {
    "text": "And it doesn't do that. It makes one call to the gRPC service and\nthen it streams back 20,000 results. And I went, \"No, it doesn't, no, it doesn't.\"",
    "start": "1049210",
    "end": "1058670"
  },
  {
    "text": "Sorry. It creates the client. It makes a single call and then it disposes\nthe client and then it loops around and it",
    "start": "1058670",
    "end": "1066260"
  },
  {
    "text": "does it again 20,000 times. And they went, \"Oh, oh, we should change that.\"",
    "start": "1066260",
    "end": "1072690"
  },
  {
    "text": "Which immediately knocked two minutes off. And it, just to me that highlighted the importance\nof measuring and monitoring and, this observability",
    "start": "1072690",
    "end": "1084840"
  },
  {
    "text": "thing. So now my next workshop I think, is going\nto be open telemetry which is just huge.",
    "start": "1084840",
    "end": "1093780"
  },
  {
    "text": "And everything just supports that like out\nof the box, all your platforms are service things.",
    "start": "1093780",
    "end": "1099610"
  },
  {
    "text": "Yeah. I was going to say trace bands are a really\ngood way of getting observability into things, especially with the service mesh, you deploy\nthat, and you get these traces on the network.",
    "start": "1099610",
    "end": "1108658"
  },
  {
    "text": "So into service, you know, service to service\nhops for free and then instrument within your",
    "start": "1108659",
    "end": "1114880"
  },
  {
    "text": "application. The request is coming like I've seen it hop\nthe network because the service mesh told me I'm now gonna use the library, the client\nlibrary for open telemetry to instrument my",
    "start": "1114880",
    "end": "1124110"
  },
  {
    "text": "code.  I can see the hops through the major parts\nof the service. And then you get this when your user request\ncomes in, you see inside service A, look over",
    "start": "1124110",
    "end": "1131970"
  },
  {
    "text": "the network, inside service B, and you get\nthis one, you just probably get the context and you just get this one trace. It's interesting because people are, \"Oh,\nit's the network.",
    "start": "1131970",
    "end": "1139280"
  },
  {
    "text": "Oh, that service is slow.\" Like, \"Oh no, it's not our fault. We called the database. We have to block,\".",
    "start": "1139280",
    "end": "1144629"
  },
  {
    "text": "You just get that whole, that visibility,\nand the same tool as well. Like it's not, oh, infrastructure is slow,\nnow the app's slow like, well here's, you",
    "start": "1144630",
    "end": "1152240"
  },
  {
    "text": "know, this... Here's everything that it could be. And look, this bit's long, and this bit's\nshort, and yes.",
    "start": "1152240",
    "end": "1158220"
  },
  {
    "text": "Being able to see inside and out is useful. You can sort of, because you've got the network\ncall and then say you're using gRPC, you can",
    "start": "1158220",
    "end": "1168510"
  },
  {
    "text": "see the sort of milliseconds that it spent\ndecoding and the live streams... Yes, and the better gRPC libraries do admit\nbecause they don't all, do they, but the better",
    "start": "1168510",
    "end": "1176730"
  },
  {
    "text": "ones they emit spans for. Yes. And in .NET, Microsoft had gone because I've\nbeen doing .NET since 2002, and you used to",
    "start": "1176730",
    "end": "1193909"
  },
  {
    "text": "get your performance information out to .NET\nvia event tracing for Windows and you'd have to go into it because it was all windows all\nthe time.",
    "start": "1193909",
    "end": "1202100"
  },
  {
    "text": "I would like the Windows event. It was just like the Windows event view. Yes. So you'd go into event viewer and you'd go\ninto PerfView if you wanted to find them about",
    "start": "1202100",
    "end": "1209908"
  },
  {
    "text": "garbage collection cycles and so forth. Wow. Right.",
    "start": "1209909",
    "end": "1215590"
  },
  {
    "text": "Then when they did .NET Core, they went, \"Oh,\nwe need to find a way of doing this on Linux.\"",
    "start": "1215590",
    "end": "1220700"
  },
  {
    "text": "So they built in this whole diagnostics pipeline. Then when the weirdest thing, I think, in\nmy entire experience of the computer industry,",
    "start": "1220700",
    "end": "1233270"
  },
  {
    "text": "so you had open tracing and open census and\nthey defied that XKCD comic and went, \"No,",
    "start": "1233270",
    "end": "1241710"
  },
  {
    "text": "let's combine them into one.\" So now open tracing redirects you to open\ncensus and redirects you to telemetry and",
    "start": "1241710",
    "end": "1249520"
  },
  {
    "text": "yes. Microsoft went, \"Well, we'll make what we\nbuilt in .NET compatible with open telemetry.\"",
    "start": "1249520",
    "end": "1261528"
  },
  {
    "text": "It just has a different name. So what open telemetry calls a span, .NET\ncalls an activity. They're hing, they've got baggage, they've\ngot [inaudible].",
    "start": "1261529",
    "end": "1267950"
  },
  {
    "text": "And the wire format's compatible. Yes, exactly. And you drop in an open telemetry library,\nand then it's got automatic instrumentation",
    "start": "1267950",
    "end": "1277190"
  },
  {
    "text": "of the HTTP stack, both sides, client and\nserver for various databases.",
    "start": "1277190",
    "end": "1283590"
  },
  {
    "text": "Redis, gRPC's got its one. Yes. And, you just go, here's a Jaeger host, dump\nit all out.",
    "start": "1283590",
    "end": "1294230"
  },
  {
    "text": "Send it over there. It all just magically appears and then you're\nkind of going and like I can figure that Jaeger",
    "start": "1294230",
    "end": "1299440"
  },
  {
    "text": "host into Linkerd as well. Yes, no, it's a kind of magic.",
    "start": "1299440",
    "end": "1305320"
  },
  {
    "text": "Yes. No, it is. It is good, that stuff's got a lot better. Technology cycles\nSo what year did you start professionally?",
    "start": "1305320",
    "end": "1312360"
  },
  {
    "start": "1310000",
    "end": "1672000"
  },
  {
    "text": "When I graduated, 2008. 2008. So that's like the same year as AWS first\nstarted renting out.",
    "start": "1312360",
    "end": "1322649"
  },
  {
    "text": "Yes. I guess it is. Two instances. I guess it is. I didn't touch AWS for a long time after that,\nbut yeah, I guess it is.",
    "start": "1322650",
    "end": "1329470"
  },
  {
    "text": "Because I've been going 18 years by that point. Like I'm so old.",
    "start": "1329470",
    "end": "1338289"
  },
  {
    "text": "But it is. It all comes in cycles. How long do you think the cycle is then? Because all of these things, all of these\nthings get reinvented. We've got Kubernetes.",
    "start": "1338289",
    "end": "1344010"
  },
  {
    "text": "Isn't that great? All these kids running around at conferences,\nlike have you heard of Erlang? How long is that?",
    "start": "1344010",
    "end": "1349720"
  },
  {
    "text": "How long is that cycle? So when I started in right at the beginning\nof 1990, there were eight of us working on",
    "start": "1349720",
    "end": "1362200"
  },
  {
    "text": "a tendon 286 running SCO Xenix. We had a table tennis table downstairs because\nthe bill took three to four hours.",
    "start": "1362200",
    "end": "1372040"
  },
  {
    "text": "Well, that XKCD of my codes compiling. It used to be that, it used to be. That was absolutely a thing.",
    "start": "1372040",
    "end": "1377580"
  },
  {
    "text": "We have thousands of lines of code. So obviously it took... Well, the embedded, see the first job was\nseeing, we have maybe a million lines with",
    "start": "1377580",
    "end": "1386080"
  },
  {
    "text": "all the vendors' libraries and there was no\ncloud. There was no real way to do that. And it does take a long time to do that.",
    "start": "1386080",
    "end": "1391799"
  },
  {
    "text": "You could have had some kind of bill box in\nthe server room maybe. We did try it, but it was difficult.",
    "start": "1391800",
    "end": "1399700"
  },
  {
    "text": "So I had a super overclocked Pentium 4 before\nunder my desk. IT bought the most expensive Pentium 4 they\ncould get hold of, I was a...I'm a gamer. ",
    "start": "1399700",
    "end": "1408799"
  },
  {
    "text": "I went in one evening and overclocked the\nthing because they'd over-specify these machines.",
    "start": "1408799",
    "end": "1414360"
  },
  {
    "text": "I think they'd just got them from SAN supply\nand they had a big copper. I took a sign off it once, they had this big\ncopper heat sink. There's this sort of gaming-orientated motherboard\nbecause you just have to get something that",
    "start": "1414360",
    "end": "1423690"
  },
  {
    "text": "could deliver 280 watts right to this stupid\nPentium 4, so it's like, this is clockable. I got about 5 gigs out of it, 5.2 was like\nstupid.",
    "start": "1423690",
    "end": "1429779"
  },
  {
    "text": "Like it did use to make a lot of noise when\nit ramped up. But yeah, it got my bill time down a little\nbit.",
    "start": "1429779",
    "end": "1435350"
  },
  {
    "text": "But you would go and get a coffee. Yes. The lady was saying about the WPF thing. I remember that we had a kind of similar problem.",
    "start": "1435350",
    "end": "1441430"
  },
  {
    "text": "The second job, the C# place, would walk in\nin the morning, and press the button on the",
    "start": "1441430",
    "end": "1448620"
  },
  {
    "text": "computer because we turn our computers off\nevery night, right, for energy efficiency. But it was still desktops. If anybody with them saw what they are.",
    "start": "1448620",
    "end": "1454370"
  },
  {
    "text": "Would walk in press the button and then it\nwould, you know, have to go and get a coffee while the thing started up. Because it missed spinning [inaudible 00:24:52]\nwhatever.",
    "start": "1454370",
    "end": "1460220"
  },
  {
    "text": "So one week we were like, right, this is silly. And we built a little thing that plugged into\nthe DHCP server.",
    "start": "1460220",
    "end": "1469010"
  },
  {
    "text": "Spotted when... So you'd get... So there was WIFI and there were smartphones\njust about, so you would get close to the",
    "start": "1469010",
    "end": "1476750"
  },
  {
    "text": "building, and your phone would join the WIFI\nnetwork. Everybody's MAC address was on the table. It would recognize like, oh Matt Turner's\nphone has joined the WIFI network.",
    "start": "1476750",
    "end": "1484049"
  },
  {
    "text": "There's this MAC address that he's registered. He must be getting close. It was in a wake-on-LAN packet to your desktop.",
    "start": "1484049",
    "end": "1490700"
  },
  {
    "text": "He would walk into the building, say good\nmorning to everybody, and get a cup of coffee. And then by the time you got to your desk,\nyou would start your day and, whatever it",
    "start": "1490700",
    "end": "1496669"
  },
  {
    "text": "was, Windows 2000, pop on the screen. That's genius. That's fantastic. It wasn't my idea.",
    "start": "1496669",
    "end": "1502440"
  },
  {
    "text": "I can't claim that idea, but yeah, we did\nthe... Can you make this application start faster? No, but I can make it start automatically\nfrom 200 yards away.",
    "start": "1502440",
    "end": "1509539"
  },
  {
    "text": "I can make it magic. How about that? Would you like some magic instead? I love that. I would say it was a fun time. It took us, it was a whole, it was a fully\nWindows estate.",
    "start": "1509540",
    "end": "1516700"
  },
  {
    "text": "So it took us a long time with the Windows\nserver, Windows main controller DHCP to do the practical parts of it.",
    "start": "1516700",
    "end": "1522409"
  },
  {
    "text": "But it was great. It was a good far week. I remember when I first got into Windows. So talking about the cycle, the application\nI was writing for like the first five years",
    "start": "1522409",
    "end": "1531419"
  },
  {
    "text": "ran on Wyse terminals on Unix boxes.",
    "start": "1531419",
    "end": "1537158"
  },
  {
    "text": "And so you had what antsy graphics could draw\nlines around things and stuff.",
    "start": "1537159",
    "end": "1544049"
  },
  {
    "text": "Curses. Yes. Curse and curses and writing C code with SQL\nembedded in it between dollar signs, and then",
    "start": "1544049",
    "end": "1557610"
  },
  {
    "text": "we went to windows, and then everything was\nsuddenly client-server. So put in a sort of all the logic was in your\ndesktop client and it was just a shared database",
    "start": "1557610",
    "end": "1568980"
  },
  {
    "text": "on a server somewhere. And then... The actual logic. Sorry.",
    "start": "1568980",
    "end": "1574890"
  },
  {
    "text": "I was gonna, you're good that the logic was\non the client because I've seen a lot of those where there's the client and then all the\nlogic is in a store procedure in the database.",
    "start": "1574890",
    "end": "1583300"
  },
  {
    "text": "Those two, those two. And then the web came along and then we were\nsuddenly going, oh no, all the logic should",
    "start": "1583300",
    "end": "1591820"
  },
  {
    "text": "be on the server as well, using SOAP and XML\nand all that sort of stuff.",
    "start": "1591820",
    "end": "1601049"
  },
  {
    "text": "Then once browsers got a bit smarter and you\ncould do better things.",
    "start": "1601049",
    "end": "1607309"
  },
  {
    "text": "So again, probably in the mid-2000s, you got\nto this thing where all the work was being",
    "start": "1607310",
    "end": "1613710"
  },
  {
    "text": "done on the server and it was just spewing\nHTML out and sending it down to this stupid,",
    "start": "1613710",
    "end": "1620080"
  },
  {
    "text": "this dumb client. And I think that's a cycle because when you're\non one of those VT100 or Wyse terminals, right",
    "start": "1620080",
    "end": "1630620"
  },
  {
    "text": "at the end of the '80s and start of the '90s,\nyou had a central process that was just sending",
    "start": "1630620",
    "end": "1638190"
  },
  {
    "text": "the characters to display to a TTY on the\nsystem. ",
    "start": "1638190",
    "end": "1644460"
  },
  {
    "text": "Then the internet was essentially the same\nthing. It was sending HTML to say to the browser,\nhere's the text and images and stuff to display.",
    "start": "1644460",
    "end": "1653809"
  },
  {
    "text": "What's a Chromebook, if not a mainframe terminal? Exactly. But it's gone back the other way. So we don't service a side render anymore,\nlike Jamstack.",
    "start": "1653809",
    "end": "1659429"
  },
  {
    "text": "It's cool. So, yes. And I mean, I guess a lot of the communities\nhas done service side, but all the rendering heavy lifting is done.",
    "start": "1659430",
    "end": "1664870"
  },
  {
    "text": "But it's done another cycle because it's gone. Then everyone was kinda like, oh, we've got\nto write single-page applications with angular",
    "start": "1664870",
    "end": "1671260"
  },
  {
    "text": "and all that sort of thing. And then, as you say, now there's Jamstack\nand you've got Next.js and Spell Kit and Angular",
    "start": "1671260",
    "end": "1678820"
  },
  {
    "start": "1672000",
    "end": "2206000"
  },
  {
    "text": "going server-side rendering. Yeah and like weren't you the ones who told\nus to stop doing that?",
    "start": "1678820",
    "end": "1684380"
  },
  {
    "text": "Clients who told us who can bind to your API\nand... Yes. And the cloud back in the first sort of 10,\n20 years of my career, if you wanted a new",
    "start": "1684380",
    "end": "1698860"
  },
  {
    "text": "server, it was filled out a form and justify\nit and go to like three meetings to explain to increasingly senior people why you need\na new server.",
    "start": "1698860",
    "end": "1708960"
  },
  {
    "text": "Then it would take six months for it to get\nbuilt and shipped to the data center and installed.",
    "start": "1708960",
    "end": "1716380"
  },
  {
    "text": "And now it's kind of like... There's an API on that. Yeah. And, or AWS CLI or Azure CLI or whatever\nTerraform.",
    "start": "1716380",
    "end": "1729510"
  },
  {
    "text": "And Terraform, Pulumi. Did you play with Pulumi? A little bit. I don't like the model. No, just that it doesn't work for me.",
    "start": "1729510",
    "end": "1736220"
  },
  {
    "text": "I think Terraform. I like Terraform. Terraform was the thing that you've got to\ndisplace now.",
    "start": "1736220",
    "end": "1741870"
  },
  {
    "text": "Isn't it? It's the sort of, Terraform's the obvious\nanswer. And if you wanna come up with a better way\nof doing it.",
    "start": "1741870",
    "end": "1748480"
  },
  {
    "text": "I saw a really interesting talk from Crossplane\nyesterday, which might maybe be the answer,",
    "start": "1748480",
    "end": "1753908"
  },
  {
    "text": "but yeah. I like Terraform because it's not Terran complete. It's declarative. It's just, it's a config file it says.",
    "start": "1753909",
    "end": "1759670"
  },
  {
    "text": "Yes. I would like there to be these and they're\ndeliberately staying away for they've added a few more features, but there's no loops.",
    "start": "1759670",
    "end": "1766059"
  },
  {
    "text": "There's no logic. Pulumi is like, an AWS CDK and all these proprietary\nones, they're like a library there, but basically",
    "start": "1766060",
    "end": "1772540"
  },
  {
    "text": "like lib cloud. So they like write logic that's just gonna\nmake API calls to Pulumi and then Pulumi will",
    "start": "1772540",
    "end": "1778620"
  },
  {
    "text": "make cloud resources. I find inevitably people just shoot themselves\nin the foot with that use, given that sort",
    "start": "1778620",
    "end": "1785830"
  },
  {
    "text": "of ensuring complete logic to drive that thing. And do you really want to be creating high-performance\ncompute clusters in a loop?",
    "start": "1785830",
    "end": "1793159"
  },
  {
    "text": "Right? Exactly. And then people were using it. So people were doing nice thing. People were trying to reconcile with it.",
    "start": "1793159",
    "end": "1798570"
  },
  {
    "text": "So I remember Terraform and there was this\nWebFlux tool called like terradiff back in the day. I think maybe it should be maintained, because\nyou know, Terraform is, it's one shot, you",
    "start": "1798570",
    "end": "1806210"
  },
  {
    "text": "run it once and then maybe there's some drift,\nyou know, I remember, I'm sure you remember database drift problems back in the day, right,\nas, you know, SQL compare and all that kind",
    "start": "1806210",
    "end": "1813429"
  },
  {
    "text": "of stuff. I've written a couple tools for that. No, I used to work at Redgate, right. So SQL compare, SQL source control stuff.",
    "start": "1813429",
    "end": "1819390"
  },
  {
    "text": "It was a real problem. So you'd apply Terraform. And I was, again, I've seen this all before,\nlike, you know, deployed a database and it",
    "start": "1819390",
    "end": "1826419"
  },
  {
    "text": "goes awry. So there was this terradiff tool and you'd\nhave it wide up to an alarm, which would say, oh, the clouds drifted from the Terraform\nI think.",
    "start": "1826419",
    "end": "1834289"
  },
  {
    "text": "So people were quite rightly trying to use\nPulumi. I saw a couple of examples of trying to like,\njust keep running the loop.",
    "start": "1834289",
    "end": "1840309"
  },
  {
    "text": "Right? Keep reconciling. But people, I think, people would pollute\nthat with a lot of decisions.",
    "start": "1840309",
    "end": "1845320"
  },
  {
    "text": "So Crossplane, they'll shoot me if they watched\nthis, I probably completely get it wrong, but it's kind of like a Terraform, it's that\nyou give it Kubernetes style YAML, but it's",
    "start": "1845320",
    "end": "1853179"
  },
  {
    "text": "a declarative declaration of what you want. It's like a static thing, but then they run\nthat reconciliation.",
    "start": "1853180",
    "end": "1860470"
  },
  {
    "text": "You feed it into the system that then runs\na reconciliation loop and just keeps it on",
    "start": "1860470",
    "end": "1865690"
  },
  {
    "text": "course. Seems to be a nice model. So because I've just started working with\nthis startup PolyScale.",
    "start": "1865690",
    "end": "1874730"
  },
  {
    "text": "So they are CloudFlare for databases.",
    "start": "1874730",
    "end": "1879970"
  },
  {
    "text": "Okay. So if you've got a database in sort of the\nUnited States data center somewhere, and you're",
    "start": "1879970",
    "end": "1889000"
  },
  {
    "text": "deploying code that talks to that in a UK\ndata center is like, so you've got sort of",
    "start": "1889000",
    "end": "1895260"
  },
  {
    "text": "edge API locations but one central database.",
    "start": "1895260",
    "end": "1902980"
  },
  {
    "text": "So PolyScale sits as a sort of proxy slash\ncache in front of that database and cache",
    "start": "1902980",
    "end": "1910690"
  },
  {
    "text": "is the result of queries. It sounds like a Read Replicas. It basically, yes.",
    "start": "1910690",
    "end": "1917779"
  },
  {
    "text": "But much simpler than a Read Replicas. Oh, okay. So you hit it with a query and it goes, oh,\nI've got that.",
    "start": "1917779",
    "end": "1924700"
  },
  {
    "text": "I'll just ping that straight back to you. And, or I haven't got that.",
    "start": "1924700",
    "end": "1930760"
  },
  {
    "text": "I'll get it and I'll cache it. And you can say time to live is like... I was gonna say, how do you do cache expiry? So two ways you, either specify time to live...",
    "start": "1930760",
    "end": "1938570"
  },
  {
    "text": "For the client.\n...manually at the, what they call the pop or it's got smart invalidation.",
    "start": "1938570",
    "end": "1948080"
  },
  {
    "text": "So if it sees an insert update or delete,\nbecause you're proxying every call to your",
    "start": "1948080",
    "end": "1954518"
  },
  {
    "text": "database through this proxy,\nBut only from that region.",
    "start": "1954519",
    "end": "1959710"
  },
  {
    "text": "But only for that region. Then you might not use it in the other region,\nbut you might use it in a single region, just",
    "start": "1959710",
    "end": "1966789"
  },
  {
    "text": "you've got a read-heavy database and you just\nwant to take some load off the database so you can run it on a smaller, instant size\nor something.",
    "start": "1966789",
    "end": "1973580"
  },
  {
    "text": "But yes, anytime it sees data manipulation\nqueries going through, it just invalidates",
    "start": "1973580",
    "end": "1981720"
  },
  {
    "text": "the cache. It just goes that table's been updated. I'm invalidating all my cache that uses that\ntable.",
    "start": "1981720",
    "end": "1989320"
  },
  {
    "text": "But they, obviously the sort of key thing\nwhen you're doing something like that, they're",
    "start": "1989320",
    "end": "1995269"
  },
  {
    "text": "early-stage startup, they've just got a good\nround of funding to sort of expand, and do",
    "start": "1995270",
    "end": "2004390"
  },
  {
    "text": "some Mark Rendleeting and stuff. So they've been pretty much stealth up to\nnow. But one of the sort of key things is we can,\nat the moment, we've got public pops in eight",
    "start": "2004390",
    "end": "2018510"
  },
  {
    "text": "Amazon data centers, seven, seven or eight\nAmazon data centers. But they're like a VPC, but they're like a\npartner, I guess.",
    "start": "2018510",
    "end": "2023649"
  },
  {
    "text": "And you can VPC to them. Good stuff. Yes.",
    "start": "2023649",
    "end": "2028750"
  },
  {
    "text": "But if you say, oh, you don't have it in Australia\nWest, or you don't have it in this one, they",
    "start": "2028750",
    "end": "2034940"
  },
  {
    "text": "can spin it up in an AWS data center, spin\nup a whole pop in 20 minutes.",
    "start": "2034940",
    "end": "2040200"
  },
  {
    "text": "Because it's a combination of Terraform to\ncreate a Kubernetes cluster.",
    "start": "2040200",
    "end": "2045480"
  },
  {
    "text": "And then just Kubernetes files to actually\nrun the code. And then it's self-updating because they've\ngot something running inside the cluster that",
    "start": "2045480",
    "end": "2053040"
  },
  {
    "text": "checks to see if new images have been released. It's absolutely insane. And you just sort of think, and I that's I\ncan spin up a sort of anywhere in the world,",
    "start": "2053040",
    "end": "2069919"
  },
  {
    "text": "to do this and it's... Yes. It was crazy. And ironically, you've kind of come full cycle\nagain because you can't, if you tried to buy",
    "start": "2069920",
    "end": "2075659"
  },
  {
    "text": "a server now, you can't. Because of the chip shortage, because all\nthe chips are going to GCP and AWS basically",
    "start": "2075660",
    "end": "2082419"
  },
  {
    "text": "because chip manufacturers have to keep them\nhappy and yeah, you just can't, you can't have to have somebody else's server.",
    "start": "2082420",
    "end": "2088100"
  },
  {
    "text": "Yes. It was kind of my worry into DevOps. It was interesting. I was a big telco provider, and was a software\nengineer, but ended up at the classic case,",
    "start": "2088100",
    "end": "2099490"
  },
  {
    "text": "I guess, that there was some infrastructure\nneeded doing and nobody else was around to do it. So I sort of picked it up, kind of wrote,\nI would blow my own trumpet.",
    "start": "2099490",
    "end": "2106910"
  },
  {
    "text": "I mean, it's not as impressive as it sounds\nmaybe, but sort of did wrote a Terraform before there was a Terraform just from this thing\nat least had a, it was OpenStack.",
    "start": "2106910",
    "end": "2116190"
  },
  {
    "text": "Right. Which was, yeah, let's not go there with PTSD,\nbut it was OpenStack, which is a very early",
    "start": "2116190",
    "end": "2123980"
  },
  {
    "text": "EC2 because EC2 follows a lot of the OpenStack\nAPIs. It was OpenStack was the first thing in Amazon\nactually when they were a small player and,",
    "start": "2123980",
    "end": "2132410"
  },
  {
    "text": "you know, they copied the OpenStack API. But anyway, it's the first kind of, you run\nit on your own data center, you bought the",
    "start": "2132410",
    "end": "2137700"
  },
  {
    "text": "hardware, but it was, you know, VMs and the\nVXLANs and storage volumes within API on the",
    "start": "2137700",
    "end": "2143900"
  },
  {
    "text": "front, very early sort of on on-prem cloud. So you could call the C, you could click through\nit. But I was like, oh, I'm a programmer.",
    "start": "2143900",
    "end": "2149590"
  },
  {
    "text": "There's a CLI. So I sort of wrote the CLI and then before\nyou know, you've got a script, like a Bash",
    "start": "2149590",
    "end": "2155580"
  },
  {
    "text": "file that's just batch. Then you get some loops in it. And then I was like, oh, this is a bit of\nwhat I wanna really to do is write, describe,",
    "start": "2155580",
    "end": "2162040"
  },
  {
    "text": "I wanna barely reuse this stuff because it's\nall hardcoded. I wanna write the right descriptions. And it was in Bash.",
    "start": "2162040",
    "end": "2167222"
  },
  {
    "text": "I had this thing where I wrote a Bash scripts\nand then you would write M files basically if you wanted like this kind of VM and that\nVM and that VM, you would have a bunch of",
    "start": "2167222",
    "end": "2176119"
  },
  {
    "text": "files that would literally declare Bash variables.  This script would go through source one and\napply it and source one.",
    "start": "2176120",
    "end": "2181590"
  },
  {
    "text": "So I kind of wrote Terraform before Terraform\nexisted, but it was really shit and in Bash. And then did almost the same thing with, I\ndon't wanna say Kubernetes, but we had more",
    "start": "2181590",
    "end": "2194180"
  },
  {
    "text": "Bash that would take tarballs and extract\nthem and all of this was my kind of route into the DevOps stuff with seeing these kind\nof problems and then making tools for them.",
    "start": "2194180",
    "end": "2204920"
  },
  {
    "text": "This serverless, an open-source serverless\nthing that I think is largely written in Bash",
    "start": "2204920",
    "end": "2212700"
  },
  {
    "start": "2206000",
    "end": "2822000"
  },
  {
    "text": "that schedules things. What's the Kubernetes, what's it called? Metacontroller or something where you wanna\nwrite a controller because this client-go.",
    "start": "2212700",
    "end": "2219930"
  },
  {
    "text": "Right? But they've just brought that out to a nice\ninterface. So it's you can hook it with any language\nyou want.",
    "start": "2219930",
    "end": "2226430"
  },
  {
    "text": "I think it just makes you REST codes or something. No, I think it executes a directory of hooks.",
    "start": "2226430",
    "end": "2231559"
  },
  {
    "text": "Maybe it just executes anything with an X\nbit set. You just give it a directory so you can write,\nyou know, Ruby or whatever.",
    "start": "2231560",
    "end": "2237380"
  },
  {
    "text": "You can totally write Bash. You can totally write controllers and mission\nwebhooks in Bash.",
    "start": "2237380",
    "end": "2243539"
  },
  {
    "text": "You maybe shouldn't but you can. But Kubernetes because talking about the cycles\nand you've got sort of cycles within cycles,",
    "start": "2243540",
    "end": "2255490"
  },
  {
    "text": "but in the mainframe days you would write\nyour code, and then you would ask the mainframe",
    "start": "2255490",
    "end": "2262220"
  },
  {
    "text": "to schedule it to run. And it would sort of like sit it running in\na background process or run it once and give",
    "start": "2262220",
    "end": "2271000"
  },
  {
    "text": "you the results and all this sort of stuff. And so Kubernetes is basically the modern\nevolution of the old mainframes.",
    "start": "2271000",
    "end": "2279960"
  },
  {
    "text": "Yeah. Sort of. Discuss. I'll say more like a plan nine, because people\nare saying, well, Kubernetes is the new POSIX",
    "start": "2279960",
    "end": "2287609"
  },
  {
    "text": "and it is this interface that you can sort\nof write systems against. I would say it's made me more like a distributed,\nlike a normal offer, like a multi-processing",
    "start": "2287610",
    "end": "2295059"
  },
  {
    "text": "operating system. I totally take like plan nine, I guess like\na very networked because I know I'd totally",
    "start": "2295060",
    "end": "2301020"
  },
  {
    "text": "say your point. I think if you see a lot of the high-performance\ncompute stuff that's going on, a lot of the",
    "start": "2301020",
    "end": "2307150"
  },
  {
    "text": "like big batch processing. So SAN did a Kubecon keynote. Right. Because they did their number crunching for\nthe ssbostan [SP] stuff on massive Kubernetes",
    "start": "2307150",
    "end": "2317500"
  },
  {
    "text": "cluster.  They did a keynote where they explained it\nand it was really good and they actually have the cluster idle and they ran it again, they\nrediscovered the ssbostan on like.",
    "start": "2317500",
    "end": "2324310"
  },
  {
    "text": "They said offered the start talking and by\nthe end, it crunched enough numbers to do it. That's quite impressive.",
    "start": "2324310",
    "end": "2330090"
  },
  {
    "text": "It was very cool. But that was Kubernetes with a lot of the\nmoving parts replaced. So the scheduler, for example, so you see\nwhat, yeah, the people like SAN and a lot",
    "start": "2330090",
    "end": "2336440"
  },
  {
    "text": "of the financial institutions who are doing\nbatch runs, they're even using heavily modified",
    "start": "2336440",
    "end": "2342170"
  },
  {
    "text": "Kubernetes or they're on slur models or one\nof this other sort of batch process, OpenMP or one of these other batch processing systems.",
    "start": "2342170",
    "end": "2349570"
  },
  {
    "text": "And you can make kube so extensive, but you\ncan make it do that but. But the processing power now...",
    "start": "2349570",
    "end": "2360400"
  },
  {
    "text": "So I did some work from McLaren Racing way\nback in the very early as your days, The rules,",
    "start": "2360400",
    "end": "2372349"
  },
  {
    "text": "Formula 1 keep changing the rules to try and\nmake it possible... Well, to make it so that the teams with huge\namounts of money like Ferrari and Mercedes",
    "start": "2372350",
    "end": "2380700"
  },
  {
    "text": "aren't just buying championships. So they sort of put limits on how much you\ncan spend. This has been a big reset as well of the rules.",
    "start": "2380700",
    "end": "2386580"
  },
  {
    "text": "Hasn't it? Nobody started from a clean sheet. But back whenever this was, they put a limit\non the amount you could spend on computer",
    "start": "2386580",
    "end": "2398340"
  },
  {
    "text": "hardware. Oh, interesting. Those were the days of crazy error though,\nweren't they? Yes. I guess that was why they were, because if\nyou can't afford a wind tunnel or you can't",
    "start": "2398340",
    "end": "2406940"
  },
  {
    "text": "afford a supercomputer, you were just out\nof luck.  So but when I turned up, they had MATLAB running\nin what they called their MATLAB data center,",
    "start": "2406940",
    "end": "2421510"
  },
  {
    "text": "but was actually eight laptops in a cupboard. This is McLaren, right? Yes\nThis is McLaren Racing.",
    "start": "2421510",
    "end": "2426799"
  },
  {
    "text": "I go in sort of every day I was there and\nyou walk past sort of Louis Hamilton's race",
    "start": "2426800",
    "end": "2433520"
  },
  {
    "text": "winning McLaren and Bruce McLaren's orange\nmonstrosity with a sort of arrow wing, six",
    "start": "2433520",
    "end": "2443030"
  },
  {
    "text": "feet up in the air. Oh, that was one of the F1 like GTM... Yeah, like really when it was just the wild\nwest of racing.",
    "start": "2443030",
    "end": "2450730"
  },
  {
    "text": "It seems real because are they 3D print titanium? And they do all kinds of stuff.",
    "start": "2450730",
    "end": "2455849"
  },
  {
    "text": "Yes. They've got this bonker stuff. People would submit their MATLAB programs\nto this internal batch processor and they",
    "start": "2455850",
    "end": "2466599"
  },
  {
    "text": "would run overnight and they'd come in in\nthe morning and their results would be done.  I understand very little of Maths.",
    "start": "2466600",
    "end": "2475300"
  },
  {
    "text": "And I certainly don't know any MATLAB, but\nI knew about Azure and so I managed to create",
    "start": "2475300",
    "end": "2486880"
  },
  {
    "text": "a compute image template that included MATLAB\nand ran the installer, and managed to apply",
    "start": "2486880",
    "end": "2496039"
  },
  {
    "text": "a license key. Yes. So it went from eight laptops sitting in a\ncupboard to how many machines do I need to",
    "start": "2496040",
    "end": "2507520"
  },
  {
    "text": "spin up to paralyze this so that I can get\nthe results in under an hour, because at the",
    "start": "2507520",
    "end": "2513960"
  },
  {
    "text": "time, as you are charged, if you had a machine\non for a second, it charged you for the hour.",
    "start": "2513960",
    "end": "2520510"
  },
  {
    "text": "How close can I get that to like 59 minutes\nand 59 seconds, but not shut them?",
    "start": "2520510",
    "end": "2528110"
  },
  {
    "text": "Not one minute, one second, because you've\ndone your spend in the FIA. I think it was sort of estimated that 55 minutes\nwas your thing.",
    "start": "2528110",
    "end": "2534530"
  },
  {
    "text": "So if it ran over a bit and you had time for\nthe startup and the shutdown and so on, but yeah, and it was just spinning up a 100 machines,\njust to run one person's thing.",
    "start": "2534530",
    "end": "2544000"
  },
  {
    "text": "But it was 100 hours and Microsoft obviously\nsponsored McLaren at the time, so I'm not",
    "start": "2544000",
    "end": "2550080"
  },
  {
    "text": "sure they were paying for their Azure. Interesting. But yeah, it's how much compute do you want?",
    "start": "2550080",
    "end": "2555670"
  },
  {
    "text": "And now you've got sort of these Kubernetes\nclusters and you've got nodes with, and video",
    "start": "2555670",
    "end": "2563940"
  },
  {
    "text": "GPUs installed that are just crunching through\nmachine learning.",
    "start": "2563940",
    "end": "2570589"
  },
  {
    "text": "I wonder whether any of the crypto people\nhave ever used Kubernetes because you get this more and more specialist hardware.",
    "start": "2570590",
    "end": "2576780"
  },
  {
    "text": "Right. So you originally, you mine crypto on a CPU\nand then we like, oh GPU. It is the way to go, because it's a more specialized,\nand then it moved on to ASIC quite quickly.",
    "start": "2576780",
    "end": "2585220"
  },
  {
    "text": "Right. Actually specialized circuit. They're literally just hardware that FPGAs\nor fabbed chips that just did the right kind",
    "start": "2585220",
    "end": "2592510"
  },
  {
    "text": "of hash algorithm. I wonder whether anybody ever used Kubernetes\nas a control plan for that, but... Probably.",
    "start": "2592510",
    "end": "2597940"
  },
  {
    "text": "I'm just thinking if that's maybe where the\nfinancial style on whatever is gonna go, because they've gone from CPUs to GPUs.",
    "start": "2597940",
    "end": "2604700"
  },
  {
    "text": "There is a reasonably new Kubernetes feature\nabout managing arbitrary because those things",
    "start": "2604700",
    "end": "2610230"
  },
  {
    "text": "are finite, right? You've got like a certain number of GPUs or\nwhatever plugged into a box.  You need to allocate it to be the schedule\nthat needs to know that, you know, this thing",
    "start": "2610230",
    "end": "2618000"
  },
  {
    "text": "is full, not in terms of CPU and round, but\nin terms of it's got five ultra fast NICs or five graphic cards or something.",
    "start": "2618000",
    "end": "2625460"
  },
  {
    "text": "A part has to have precisely one, has exclusive\nuse of it because they can't be virtualized.",
    "start": "2625460",
    "end": "2631960"
  },
  {
    "text": "That's recently been extended to model any\nother kind of like finite hardware you can think of.",
    "start": "2631960",
    "end": "2637120"
  },
  {
    "text": "So I do wonder. It's just, see, this is the stuff that makes\nme just kind of, there's levels of knowing",
    "start": "2637120",
    "end": "2645279"
  },
  {
    "text": "Kubernetes. My level of knowing Kubernetes is I can write\na deployment and a service, and the deployment",
    "start": "2645280",
    "end": "2656180"
  },
  {
    "text": "creates one or more pods and the service exposes\nit to the rest of the cluster.",
    "start": "2656180",
    "end": "2661359"
  },
  {
    "text": "I can work with the secrets, certificates,\nbut the very, very basic stuff.",
    "start": "2661360",
    "end": "2670780"
  },
  {
    "text": "You should watch my LinkedIn Learning courses\non Kubernetes. I will. I've been deep. I've been deep.",
    "start": "2670780",
    "end": "2675980"
  },
  {
    "text": "It's... Yes. Having done OpenStack and having done, having\nwritten a web browser, that was for the first",
    "start": "2675980",
    "end": "2681609"
  },
  {
    "text": "job, it's not bad. It's not bad. There's some complexity.",
    "start": "2681610",
    "end": "2686740"
  },
  {
    "text": "The complexity is usually necessary. Like Go is great in some ways and really doesn't\nhelp in others.",
    "start": "2686740",
    "end": "2693940"
  },
  {
    "text": "There's goods and bads, but it's not bad.  I've been deep and you see some things, you\nsee some things and then you come back and",
    "start": "2693940",
    "end": "2700540"
  },
  {
    "text": "you be like, that's why it works like it does. That explains the slightly odd behavior that\nI'm seeing.",
    "start": "2700540",
    "end": "2706540"
  },
  {
    "text": "It's because of this weird not involved down\nthere, but. But the thing I find really strange with Kubernetes\nnow is, it became, so it's not just, this",
    "start": "2706540",
    "end": "2721430"
  },
  {
    "text": "is Kubernetes because you've got micro k8s,\nyou've got k3s, k0s. Is that a thing?",
    "start": "2721430",
    "end": "2728110"
  },
  {
    "text": "That is a thing. And then the minikube kind and then the distributions\nthat OpenShifts and whatever as well.",
    "start": "2728110",
    "end": "2738050"
  },
  {
    "text": "So you've got different implementations. Kubernetes is basically now just a standard.",
    "start": "2738050",
    "end": "2743380"
  },
  {
    "text": "They're all based on the same code. The Kubernetes API, I guess, is a standard\nand it could be.",
    "start": "2743380",
    "end": "2749460"
  },
  {
    "text": "You do get people reimplementing schedulers\nand stuff to that standard. All of the things you talked about are actually\nthe same code-based.",
    "start": "2749460",
    "end": "2758300"
  },
  {
    "text": "They're more like distributions, so. So like Linux distributions. Yes. K3s, k0s are designed to be small.",
    "start": "2758300",
    "end": "2764309"
  },
  {
    "text": "They started to link it all into one binary. And they skip, it's like a small Linux distribution.",
    "start": "2764310",
    "end": "2770260"
  },
  {
    "text": "You mostly just drop drivers. Right. The first step to shrinking your Linux is\nto know what hardware you're targeting is",
    "start": "2770260",
    "end": "2777101"
  },
  {
    "text": "just strip all the drivers out that you don't\nneed. Right. Only after then, do you start taking more\nimportant things out of the kernel, right?",
    "start": "2777101",
    "end": "2783420"
  },
  {
    "text": "Like maybe even for microcontroller, it's\nlike the memory manager goes, because you have virtual memory. ",
    "start": "2783420",
    "end": "2789269"
  },
  {
    "text": "From some, at some point you go from a hot\nplug to like device tree and all.",
    "start": "2789270",
    "end": "2794410"
  },
  {
    "text": "So yes. K0s, k3s are just small. They strip components. They optimize the build, the distributions\nthings like OpenShift actually had stuff on",
    "start": "2794410",
    "end": "2803400"
  },
  {
    "text": "top. Different controllers and stuff. They are all as far as I'm aware, they're\nall based on the same code base, but nothing",
    "start": "2803400",
    "end": "2809920"
  },
  {
    "text": "to stop people reimplementing it. But at the moment... You could if you wanted to reimplement the\nsame APIs using RUST and...",
    "start": "2809920",
    "end": "2815780"
  },
  {
    "text": "You absolutely could. There's very good RUST now for writing controllers.",
    "start": "2815780",
    "end": "2821880"
  },
  {
    "text": "You could rewrite the COBIT in Rust, the schedule\nin the bottleneck with Q plus to scaling certainly",
    "start": "2821880",
    "end": "2827000"
  },
  {
    "start": "2822000",
    "end": "3262000"
  },
  {
    "text": "used to be ATD, actually it is a database. People, that was the one thing that was hardcoded\ninto Kubernetes in the early day.",
    "start": "2827000",
    "end": "2834030"
  },
  {
    "text": "The API server code, especially use the HCD\nlibrary without any kind of side in front",
    "start": "2834030",
    "end": "2839350"
  },
  {
    "text": "of it in a whole load of places in the depth\nof the code. Alot of work was done to rip that out. And to make it pluggable.",
    "start": "2839350",
    "end": "2845580"
  },
  {
    "text": "So now I think I'm right in saying k3s uses\nSQLite. I think it does. Something like that.",
    "start": "2845580",
    "end": "2852100"
  },
  {
    "text": "That's now replaceable and actually, it's\nhappening in both ways. People are using SQLite and stuff even may\nbe in memory stores for smaller clusters,",
    "start": "2852100",
    "end": "2858990"
  },
  {
    "text": "bigger clusters, because that was usually\nthe scaling bottleneck using some replacement.",
    "start": "2858990",
    "end": "2864140"
  },
  {
    "text": "I think there's maybe a facade that lets you\nuse Postgres and then you can scale out or something.",
    "start": "2864140",
    "end": "2869240"
  },
  {
    "text": "Don't quote me on it. That seems like the first place you'd go,\nyou'd use TiKV or something. Right.",
    "start": "2869240",
    "end": "2874580"
  },
  {
    "text": "And just go Rust there. But no reason not to reimplement the rest\nof it. Because one thing I was looking at was, I\nhave this notion to take down Facebook.",
    "start": "2874580",
    "end": "2887680"
  },
  {
    "text": "Someone has to. The idea is build a social network where you\neventually buy something like an Amazon Echo",
    "start": "2887680",
    "end": "2904360"
  },
  {
    "text": "device, a thing that goes in your house and\nyou connect it to the WIFI and then that's your node of the social net.",
    "start": "2904360",
    "end": "2910610"
  },
  {
    "text": "So your updates and your photos and everything\ngo onto there, and then you can connect to",
    "start": "2910610",
    "end": "2917800"
  },
  {
    "text": "other people's nodes in their houses, and\nit sort of constructs the feed and everything.",
    "start": "2917800",
    "end": "2925830"
  },
  {
    "text": "The front end would just be like a spa that's\nthen using OIDC open auth.",
    "start": "2925830",
    "end": "2933960"
  },
  {
    "text": "And adding a fringe is designing an allow\nlist. Yes, exactly. So your friend goes, \"I want to connect with\nyou,\" and you, \"Oh.",
    "start": "2933960",
    "end": "2942270"
  },
  {
    "text": "I will allow you to connect with me and...\" We'll do a key sign and we'll do a key exchange. Here's my public key. And you go, \"Here's my public key.\"",
    "start": "2942270",
    "end": "2948400"
  },
  {
    "text": "Then when you want to exchange information,\nyou use public-key encryption, and then they can decrypt it on their side using their private\nkey that they've still got and all that sort.",
    "start": "2948400",
    "end": "2957070"
  },
  {
    "text": "So essentially, and then they expose all of\nthose things to the internet using Cloudflare",
    "start": "2957070",
    "end": "2962690"
  },
  {
    "text": "tunnels. All right. Until Cloudflare ask me please to stop because\nI've got a billion users and they can't handle",
    "start": "2962690",
    "end": "2968530"
  },
  {
    "text": "it. That'd be a good problem to have. A good problem. I'm sure there have been attempts to do things\nlike that.",
    "start": "2968530",
    "end": "2974640"
  },
  {
    "text": "Decentralized, maybe not as going as far as\nyou are suggesting, but using torrent essentially or something like just to keep the information\nlike either in the individual's hands, like",
    "start": "2974640",
    "end": "2983680"
  },
  {
    "text": "you are saying, I mean, maybe you do like\nencrypted, you know, M plus three replica occasions for backups or something, be encrypted\nor privately.",
    "start": "2983680",
    "end": "2993970"
  },
  {
    "text": "As you add a friend who's in another location,\nyou would basically go that friend I trust",
    "start": "2993970",
    "end": "3001070"
  },
  {
    "text": "that's... And so can you please, and they've said that\nI can use their node for backing up my data",
    "start": "3001070",
    "end": "3010140"
  },
  {
    "text": "or for making my data accessible in the case\nthat my internet goes offline. But anyway, yes.",
    "start": "3010140",
    "end": "3016390"
  },
  {
    "text": "And their idea is to write the sort of software\nas open source and distribute it as an image,",
    "start": "3016390",
    "end": "3022470"
  },
  {
    "text": "you can install on a Raspberry Pi and get\ngeeks using it first and then go, \"Hey, look,",
    "start": "3022470",
    "end": "3027750"
  },
  {
    "text": "this is great.\" And then get funding. And the business model is selling the devices,\nselling the hardware. So it's a hardware business rather than a\nsoftware business.",
    "start": "3027750",
    "end": "3037320"
  },
  {
    "text": "But obviously coping with updates and things\nis challenging when you've got a piece of",
    "start": "3037320",
    "end": "3044570"
  },
  {
    "text": "software that's running and then you need\nanother piece of software running to see if",
    "start": "3044570",
    "end": "3049690"
  },
  {
    "text": "an update is available, that can then download\nit, somehow install it while that one's still",
    "start": "3049690",
    "end": "3054900"
  },
  {
    "text": "running and then seamlessly switch over. It's actually easier to put k0s or k3s on\na Raspberry Pi, distribute the software as",
    "start": "3054900",
    "end": "3067820"
  },
  {
    "text": "a Docker image. Then I found out that you can actually use\nthe .NET Kubernetes client to talk to Kubernetes",
    "start": "3067820",
    "end": "3076820"
  },
  {
    "text": "from inside the cluster. Oh yeah. Essentially it's default behavior. Because if you don't give it any other information.",
    "start": "3076820",
    "end": "3082740"
  },
  {
    "text": "Yes. It'll discover the cluster. You can literally just go, \"Hello, I'm running,\ndo a rolling update with this new version",
    "start": "3082740",
    "end": "3090080"
  },
  {
    "text": "of this image. And then I'll die when...\" And Kubernetes just takes care of all that\ncomplexity for you.",
    "start": "3090080",
    "end": "3097960"
  },
  {
    "text": "The cost of using some resources, like you\ncould use CoreOS or Flatcar or something and take back a level and do your own rolling\nupdate orchestration.",
    "start": "3097960",
    "end": "3103990"
  },
  {
    "text": "Because then you've got the Docker host, but\nyou don't need the rest of Kubernetes or how do you update Kubernetes though?",
    "start": "3103990",
    "end": "3116079"
  },
  {
    "text": "Your watches, that watcher. I guess if you used Ubuntu, you could use\nmicro k8s, which is a snap, right.",
    "start": "3116080",
    "end": "3125260"
  },
  {
    "text": "And then you can just snap auto-updates. How do you update Ubuntu? How do you update Ubuntu?",
    "start": "3125260",
    "end": "3130840"
  },
  {
    "text": "Well, you know, eventually, you say to people,\nyou need to buy a new piece of hardware.",
    "start": "3130840",
    "end": "3136070"
  },
  {
    "text": "Business model sounds flawless. Yes. No, sorry, I'm being facetious, but I mean,\nyeah, you do. I mean, do you wanna know how sort of switches\nand like this kind of embedded systems usually",
    "start": "3136070",
    "end": "3144230"
  },
  {
    "text": "do it? They normally, it's not seamless. That's the thing. If it doesn't need to be, you normally would\nhave two partitions on the disc.",
    "start": "3144230",
    "end": "3151540"
  },
  {
    "text": "The software is sort of built into an operating\nsystem. Basically like a snap, right. But a whole operating system image that you\njust like copy onto disc.",
    "start": "3151540",
    "end": "3159710"
  },
  {
    "text": "So you would bundle if you're talking about\nlike a switch or a router or something, you take the packages, whatever you install into\nLinux, you snatch out the disc, you have two",
    "start": "3159710",
    "end": "3166720"
  },
  {
    "text": "partitions, you boot off partition A and then\nthe update is partition A is doing its thing routing packets, but it'll also download the\nnew image, dump it onto partition B. T",
    "start": "3166720",
    "end": "3174950"
  },
  {
    "text": "hen you reboot into B. If for some reason\nthere's a problem, it doesn't start, like the firmware is clever enough to go back to\nA, but then you're running off from B until",
    "start": "3174950",
    "end": "3182450"
  },
  {
    "text": "as long as there, you know, until there is\nanother update, B will stream it down right into A, and then you flip over. Cool.",
    "start": "3182450",
    "end": "3188080"
  },
  {
    "text": "Then if you need seamless upgrades, well,\nif you need zero downtime, you just have two of those running in a pair. Right.",
    "start": "3188080",
    "end": "3193500"
  },
  {
    "text": "While one's doing the flip over, the other\none takes over. Well, obviously the zero downtime hardware\nwill be bigger and more expensive.",
    "start": "3193500",
    "end": "3199880"
  },
  {
    "text": "Yes. You know, so premium. Yes. So Macbook premium. My idea is that we sort of start off with\nliterally just like the Amazon Echo puck style",
    "start": "3199880",
    "end": "3210840"
  },
  {
    "text": "thing, which you can only access through a\nbrowser interface.",
    "start": "3210840",
    "end": "3216520"
  },
  {
    "text": "We sell them in packs of six so that people\nlike us buy a pack of six and then just here's",
    "start": "3216520",
    "end": "3222590"
  },
  {
    "text": "your Christmas present. We're all getting this, you're all signed\nup.",
    "start": "3222590",
    "end": "3229109"
  },
  {
    "text": "But then sort of Robert Scoble and Elon Musk\ncan just buy like the Ferrari version of that",
    "start": "3229110",
    "end": "3237720"
  },
  {
    "text": "with sort of a terabyte of solid-state storage\nand multiple redundancies and all that sort",
    "start": "3237720",
    "end": "3244981"
  },
  {
    "text": "of thing. But anyway, the software bit of it's gonna\nbe open source. So when the time comes, I'll just ping you\nand you can go.",
    "start": "3244981",
    "end": "3251330"
  },
  {
    "text": "Yep. So this is that jewel partition? No, not Rust, .NET because yeah, you can now.",
    "start": "3251330",
    "end": "3259540"
  },
  {
    "text": "Yes, no, you can. .NET is cool now. Well, It's really, it's got a real image problem.",
    "start": "3259540",
    "end": "3266490"
  },
  {
    "start": "3262000",
    "end": "4040000"
  },
  {
    "text": "And Microsoft... I feel like Java is always gonna have that\nimage problem.",
    "start": "3266490",
    "end": "3271660"
  },
  {
    "text": "That's the thing, it's kind of... C# is a good language. I mean Java, the JV, the JVM.",
    "start": "3271660",
    "end": "3277160"
  },
  {
    "text": "I think people are always going to remember\nthe performance problems and stuff. It's a tricky thing. But I think Java's always going to have the\nimage problem, but it's fine because Kotlin",
    "start": "3277160",
    "end": "3283790"
  },
  {
    "text": "is just better. We tried Scala if you like functional programming,\nfine. If you've got a team of people who know Scala\nreally well, you can get some great stuff",
    "start": "3283790",
    "end": "3290290"
  },
  {
    "text": "done, but it's basically unreadable unless\nyour head's really in it. I mean, I write Scala, I can't read my own\nScala six months later.",
    "start": "3290290",
    "end": "3296000"
  },
  {
    "text": "It's what they call point once, isn't it? Yeah. Clojure. I mean Brackets.",
    "start": "3296000",
    "end": "3301190"
  },
  {
    "text": "Yeah, you did list, but Unix and you wanna\nkeep doing that. Right. But Kotlin very solid language works in JVM.",
    "start": "3301190",
    "end": "3306280"
  },
  {
    "text": "C# is we don't need another one. Like C# is a good language. Anders Hejlsberg or whatever he is, whatever\nthe guy's called.",
    "start": "3306280",
    "end": "3312430"
  },
  {
    "text": "Anders Hejlsberg and Mads Torgerson. Because Anders went off to do TypeScript,\nwhich has also been very successful.",
    "start": "3312430",
    "end": "3319619"
  },
  {
    "text": "It's good language and yeah. I hope it can shake that. Because it's getting gRPC and as you say,\nthey're doing it properly.",
    "start": "3319620",
    "end": "3325940"
  },
  {
    "text": "It's not like an afterthought like it is in\nsome languages. It's properly built, the really nice thing\nis you can actually run.",
    "start": "3325940",
    "end": "3334400"
  },
  {
    "text": "So you can run an HTTP API. You can. So, you know gRPC web.",
    "start": "3334400",
    "end": "3340100"
  },
  {
    "text": "Yes. Which is the thing. So browsers, which don't implement HTTP 2\nproperly can actually talk to gRPC services,",
    "start": "3340100",
    "end": "3347620"
  },
  {
    "text": "which normally you run as like a proxy Docker\nimage in .NET, they've implemented it as middleware.",
    "start": "3347620",
    "end": "3356920"
  },
  {
    "text": "It literally hooks into your HTTP pipeline\nand then talks back to the gRPC service, which",
    "start": "3356920",
    "end": "3364281"
  },
  {
    "text": "is running in the same process just by calling\nit and then returns the results back out in",
    "start": "3364281",
    "end": "3370040"
  },
  {
    "text": ".NET 7. They're implementing gRPC JSON, which is this\nnew thing where...",
    "start": "3370040",
    "end": "3377960"
  },
  {
    "text": "Just as JSON in coding are the protobuf basically. It's basically replacing the protobuf with\nJSON and I think doing something with you",
    "start": "3377960",
    "end": "3385580"
  },
  {
    "text": "anyway, but yeah. So browsers will be able to talk to that as\nwell. I would argue the middleware is actually not\nthe right place for that, but...It's kind",
    "start": "3385580",
    "end": "3393730"
  },
  {
    "text": "of Microsoft thinking maybe. It is just, it's I may be slightly responsible.",
    "start": "3393730",
    "end": "3403420"
  },
  {
    "text": "So have you ever done Ruby? A little bit. So, you know Rack?",
    "start": "3403420",
    "end": "3408430"
  },
  {
    "text": "Yes. And Python has WSGI? Whatever it, yeah.",
    "start": "3408430",
    "end": "3415130"
  },
  {
    "text": "It was this thing of building up sort of middleware\nthings. And so a bunch of .NET people including myself\nand we should have something like that in",
    "start": "3415130",
    "end": "3424809"
  },
  {
    "text": ".NET. We defined this standard where essentially\nthe HTTP request was a map or a dictionary",
    "start": "3424810",
    "end": "3438580"
  },
  {
    "text": "and the response was a dictionary each with\npotentially a stream, if there was a body,",
    "start": "3438580",
    "end": "3445260"
  },
  {
    "text": "and then you could build up this middleware\nthing. Oh, okay. Which we at one point, because we were trying\nto make it work with .NET 3.5, I think.",
    "start": "3445260",
    "end": "3458079"
  },
  {
    "text": "Okay. Which didn't have tasks. Oh, no, it didn't. No, It didn't, tasks were .NET 4.",
    "start": "3458080",
    "end": "3466829"
  },
  {
    "text": "And so rather than having tasks, we had a\nlot of callbacks.",
    "start": "3466830",
    "end": "3472170"
  },
  {
    "text": "And actually, we called it the delegate of\ndoom.",
    "start": "3472170",
    "end": "3477329"
  },
  {
    "text": "And if you had 80 columns in your code, just\nthe definition of this delegate was like five",
    "start": "3477330",
    "end": "3484410"
  },
  {
    "text": "lines long. And they went, you know what, that's stupid. Let's just use tasks and make it .NET 4.",
    "start": "3484410",
    "end": "3491250"
  },
  {
    "text": "gRPC on .NET 3.5. Exactly. But then Microsoft kind of implemented the\nofficial version of that, which was OWI, the",
    "start": "3491250",
    "end": "3500300"
  },
  {
    "text": "open web interface for .NET, and then when\nthey did .NET Core, it was essentially an",
    "start": "3500300",
    "end": "3507480"
  },
  {
    "text": "extension of that. They used the same thing. We have middleware pipelines who, your authentication\nand...",
    "start": "3507480",
    "end": "3514250"
  },
  {
    "text": "Yes. Static files and... No, I didn't realize, .NET didn't have one. Yeah, definitely not arguing with that to\nadd log in and crash out and stuff.",
    "start": "3514250",
    "end": "3521170"
  },
  {
    "text": "I'm not sure gRPC is... They stuck gRPC in there as essentially... I don't think it's middleware as much.",
    "start": "3521170",
    "end": "3528080"
  },
  {
    "text": "You've also got endpoints. So you got multiple endpoints and routing\ndeals with all that sort of stuff.",
    "start": "3528080",
    "end": "3533570"
  },
  {
    "text": "But so yeah. And like I say, it's the second-fastest gRPC\nimplementation outside of Rust and it's not",
    "start": "3533570",
    "end": "3547420"
  },
  {
    "text": "that far off. And you don't have to write Rust.",
    "start": "3547420",
    "end": "3552700"
  },
  {
    "text": "I love writing Rust. Everybody loves Rust, but it's terrifying.",
    "start": "3552700",
    "end": "3559480"
  },
  {
    "text": "It's the quote, the lifetime thing.",
    "start": "3559480",
    "end": "3565900"
  },
  {
    "text": "Lifetimes. I've got ownership. I struggle with lifetimes. I will get there I just need to write something\nreal in Rust.",
    "start": "3565900",
    "end": "3573250"
  },
  {
    "text": "I think I get the concept, but I actually\npractically applying it, like actually doing",
    "start": "3573250",
    "end": "3578640"
  },
  {
    "text": "it. It's like, yeah, you stored this and you made\nthis thing and then you, I stuck it in a linked list on the heap, and then you're getting\nit out again.",
    "start": "3578640",
    "end": "3585460"
  },
  {
    "text": "Like from a different HTTP. It's like, yeah, HTTP handler, you make some\ndata, you save it on the heap, obviously because you've got to point it to some tree or linked\nlist or whatever data structure.",
    "start": "3585460",
    "end": "3592152"
  },
  {
    "text": "And then you wanna get the thing out again. It'll only let you do that if you can prove\nto the compiler that it's gonna...that it's",
    "start": "3592153",
    "end": "3597650"
  },
  {
    "text": "not gonna get dropped. Because there isn't...it's not GC. Like you've gotta prove that it's not gonna\nget dropped.",
    "start": "3597650",
    "end": "3602690"
  },
  {
    "text": "So you clone it, but then like, and yeah. I've just like. I promise that this lives as long as like,\nif you give it some hints, it's like, this",
    "start": "3602690",
    "end": "3609170"
  },
  {
    "text": "should live as long as this and that's safe\nand then it can go, and tell whether you are correcting your assertion and I, yeah, it's\nterrifying.",
    "start": "3609170",
    "end": "3615690"
  },
  {
    "text": "And the terrifying thing is I think I like\nwriting it as a hobby. If I could persuade my employer to take it\nup, I'd just be terrified that I'd be coding",
    "start": "3615690",
    "end": "3623340"
  },
  {
    "text": "away and it would all be good. And I'd get to like a Thursday afternoon and\nI'd just get utterly stuck on some lifetime",
    "start": "3623340",
    "end": "3629200"
  },
  {
    "text": "issue and I'd be there for like three weeks. What? Like how do I make this?",
    "start": "3629200",
    "end": "3635020"
  },
  {
    "text": "Like all productivity stops where you're just\nfighting some bar check edge case or something. Days and you just can't get past it.",
    "start": "3635020",
    "end": "3641750"
  },
  {
    "text": "So, I love the error messages. I always say Rust error messages. It's like compilers just giving you a hard...do\nyou watch taskmaster.",
    "start": "3641750",
    "end": "3651370"
  },
  {
    "text": "Very stupid. Sometimes Greg Davies takes one of the comedians\noff and has a little chat with them and the Rust compiler's like that.",
    "start": "3651370",
    "end": "3657240"
  },
  {
    "text": "It's like, no, see that owns that. So this thing can't change it.",
    "start": "3657240",
    "end": "3662490"
  },
  {
    "text": "Can it? No, no. So what are we gonna do about this? Yeah. Okay.",
    "start": "3662490",
    "end": "3668080"
  },
  {
    "text": "You figure it out. It's a little more inverter. I don't find it so quite, so advertising,\nbut yeah, it is like the 6 foot 8 because",
    "start": "3668080",
    "end": "3674400"
  },
  {
    "text": "Greg Davies is huge. It's very helpful. Let's put it that way. It is like the sort of, you know, the granddad\ngiving that hug and saying, let me teach you",
    "start": "3674400",
    "end": "3682520"
  },
  {
    "text": "some things about the world. Like it's just, you tried, we all respect\nthat, but if you're gonna make it work, we",
    "start": "3682520",
    "end": "3688210"
  },
  {
    "text": "just need to, maybe I'll give you some hints. And I still remember sort of 40 years ago,\nhaving C compilers that would just go, \"Nope.",
    "start": "3688210",
    "end": "3699029"
  },
  {
    "text": "Nope. That doesn't work. It doesn't compile.\" I'm not telling you why not? Nope.",
    "start": "3699030",
    "end": "3704390"
  },
  {
    "text": "Error one. There is an error. It's in this file. It's at this line and it's at this character\nand actually it's not, it's eight lines earlier.",
    "start": "3704390",
    "end": "3714510"
  },
  {
    "text": "It's just, that was the point at which he\nstopped being able to make sense of whatever garbage you'd thrown at it.",
    "start": "3714510",
    "end": "3720780"
  },
  {
    "text": "The semantic ones. I mean the very few, I remember the early\nC compilers would basically compile just about anything as long as the syntax was okay.",
    "start": "3720780",
    "end": "3727780"
  },
  {
    "text": "They would let you do just about anything. If even if that had like completely undefined\neffects, either in the C standard or on your",
    "start": "3727780",
    "end": "3734099"
  },
  {
    "text": "CPU, like nowadays they'll be like, oh, you\nmight wanna put a memory barrier in there. They never used to do that.",
    "start": "3734100",
    "end": "3739420"
  },
  {
    "text": "I mean nonsense. If you've got a, if you missed a bracket,\nthat they would just blow up because one of",
    "start": "3739420",
    "end": "3745490"
  },
  {
    "text": "the points, one of the things the C standard\nis very clear about. Because it's not clear about much. One of the things it does specify a lot.",
    "start": "3745490",
    "end": "3751020"
  },
  {
    "text": "One of the things he does say is you've gotta\nbe able to pass and compile this in one pass. Like the whole language is like, you've gotta\nbe able to start.",
    "start": "3751020",
    "end": "3758470"
  },
  {
    "text": "That's why definitions are start. You've gotta declare variables before you\nuse them. You gotta declare functions before you use\nthem. Either head of file or static, you've gotta\nbe go through in one thing.",
    "start": "3758470",
    "end": "3766090"
  },
  {
    "text": "And it goes top to bottom and it like, they,\nI think it was to save memory. So the compiler doesn't have to trick the\nsyntax.",
    "start": "3766090",
    "end": "3775359"
  },
  {
    "text": "The grammar is so simple that you never have\nto backtrack. Basically you don't have to store any state\nin your compiler, in your lexer and I'm all",
    "start": "3775360",
    "end": "3781963"
  },
  {
    "text": "forgetting the computer science degree I've\ngot on like, you know, type 1, 2, 3, 4 languages is one of those. And anyway, so yeah, you would miss a bracket,\nand then it would, as you say, blow up like",
    "start": "3781963",
    "end": "3791330"
  },
  {
    "text": "10 lines later. And it was always those we're like, \"What\nhave I done?\" It's kinda like missing boom.",
    "start": "3791330",
    "end": "3798019"
  },
  {
    "text": "These days I use Visual Studio or Rider or\nVS Code, one of those three or you know, the",
    "start": "3798020",
    "end": "3809700"
  },
  {
    "text": "various JetBrains IDE. So I wrote Kotlin for the first time a couple\nof weeks ago which was a nice experience actually.",
    "start": "3809700",
    "end": "3816100"
  },
  {
    "text": "But yeah, I've got rainbow brackets installed\non all these. And so all my brackets are different colors\nand...",
    "start": "3816100",
    "end": "3823290"
  },
  {
    "text": "Well, they just don't indent if you... And I've got indentation lines and drawn on\nthe UI and stuff.",
    "start": "3823290",
    "end": "3830190"
  },
  {
    "text": "You can tell if you miss a bracket because\nthe indentation would be wrong. Yes. Whereas back in the day it was VI.",
    "start": "3830190",
    "end": "3836600"
  },
  {
    "text": "It was VIM and, but it couldn't do all that\nmuch. Yeah, VI on a monitor, which couldn't do syntax\nhighlighting because it was literally black",
    "start": "3836600",
    "end": "3846680"
  },
  {
    "text": "and white. Right? Oh, you didn't even have an orange and black\none. They were so... So when I was junior, I had green and black.",
    "start": "3846680",
    "end": "3854790"
  },
  {
    "text": "Then I went off freelancing for a bit for\nthis company and then came back and became",
    "start": "3854790",
    "end": "3862050"
  },
  {
    "text": "the person in charge of the training program,\ntaking on the new people. And at that point I got promoted up to a Wyse\n120 Amber and Black.",
    "start": "3862050",
    "end": "3872180"
  },
  {
    "text": "I was gonna, there was definitely, there was\na pecking order, right. Hundred and twenty columns. Oh, it was.",
    "start": "3872180",
    "end": "3878030"
  },
  {
    "text": "What are you gonna do with this space? Well, the fact you just get the screen and\nyou just spit it in half. What would I do with all the 80 columns?",
    "start": "3878030",
    "end": "3884100"
  },
  {
    "text": "My coding standard says 80 columns. There was no Git indication in the left, there\nwas nothing.",
    "start": "3884100",
    "end": "3889849"
  },
  {
    "text": "I can't remember, but yes. You were this white and black? We started having, brought RC file for VI\nto tell it you've got 120 columns.",
    "start": "3889850",
    "end": "3896480"
  },
  {
    "text": "Otherwise, it assumes you haven't, so. It's all better than what was it?",
    "start": "3896480",
    "end": "3903970"
  },
  {
    "text": "What was, does abort, ignore, cancel. Is that it? Abort, retry, ignore.",
    "start": "3903970",
    "end": "3910390"
  },
  {
    "text": "Something like that. Abort, retry, ignore was the four, was the\nthree choices, A, R and C.",
    "start": "3910390",
    "end": "3920200"
  },
  {
    "text": "It was DOS, wasn't it? But there was abort, retry, ignore and cancel.",
    "start": "3920200",
    "end": "3926020"
  },
  {
    "text": "You used to get sometimes. Yes, you did, didn't you? No help. Right?",
    "start": "3926020",
    "end": "3931730"
  },
  {
    "text": "No documentation. Yes. You couldn't even Google back then. You couldn't even Google, like what on earth\nthis meant?",
    "start": "3931730",
    "end": "3936869"
  },
  {
    "text": "To this day when you try and close a Microsoft\napplication without saving your changes. And it goes, you have unsaved changes.",
    "start": "3936869",
    "end": "3943850"
  },
  {
    "text": "Do you want to save them now? Yes. No, cancel. And you're kinda like, right. It's only because I know that cancel says\nwhat you are canceling is closing Word, closing",
    "start": "3943850",
    "end": "3956550"
  },
  {
    "text": "Excel, closing Visual Studio. Yes means say save it and quit. Yes save it and quit.",
    "start": "3956550",
    "end": "3961620"
  },
  {
    "text": "No, don't save it. Or walk away and quit. Yes. Because I've made a terrible mess of that\nparagraph.",
    "start": "3961620",
    "end": "3968430"
  },
  {
    "text": "And cancel is, no don't quit. Yes. And I think the DOS ones were similar. They just use even worse words.",
    "start": "3968430",
    "end": "3974569"
  },
  {
    "text": "So I think abort was stop trying whatever. And you're trying to run a program, abort\nwas stop.",
    "start": "3974570",
    "end": "3981410"
  },
  {
    "text": "And you can't read from the disk. Right? Abort was like, stop trying to run that program. Ignore was the spicy one actually, it was\nlike the no equivalent.",
    "start": "3981410",
    "end": "3990890"
  },
  {
    "text": "Ignore was it doesn't Matt Turnerer that you\ncan't read, like carry on, like leave that piece of memory. Do what you can.",
    "start": "3990890",
    "end": "3996770"
  },
  {
    "text": "We're trying to read, there's a bad section\non the disc. Leave that section of RAM uninitialized and\nbasically set the program counter here and",
    "start": "3996770",
    "end": "4002829"
  },
  {
    "text": "just execute whatever garbage that was in\nRAM because you couldn't read it off this. Ignore was the one that you would actually\ndidn't wanna press.",
    "start": "4002830",
    "end": "4009070"
  },
  {
    "text": "Yeah. And then retry was obviously trying to read\nthe disc again and then I've forgotten what cancel did.",
    "start": "4009070",
    "end": "4014120"
  },
  {
    "text": "Maybe cancel was just like turn the system\noff. Shut the whole thing down. Yeah. Yes.",
    "start": "4014120",
    "end": "4019620"
  },
  {
    "text": "To be fair. All I ever actually used DOS for was playing\nDoom and Wolfenstein so... Typing Win.",
    "start": "4019620",
    "end": "4025000"
  },
  {
    "text": "Yes. And typing Win. Win. Oh, you're closing windows when you needed\na surround back to play Doom and Wolfenstein.",
    "start": "4025000",
    "end": "4030540"
  },
  {
    "text": "Yes. I'll tell you something. When we stopped recording about Windows, the\nold win.com file, but it is not suitable for",
    "start": "4030540",
    "end": "4036960"
  },
  {
    "text": "broadcast.  Interesting. So yes, we should... I think we've established that things move\nin cycles.",
    "start": "4036960",
    "end": "4044800"
  },
  {
    "start": "4040000",
    "end": "4091000"
  },
  {
    "text": "And that's good. Nothing is new. And some of them get better.",
    "start": "4044800",
    "end": "4051150"
  },
  {
    "text": "Kubernetes is better than OpenStack. .NET is better than it used to be. .NET is better than.",
    "start": "4051150",
    "end": "4057599"
  },
  {
    "text": "NET. Kotlin is better than Java.",
    "start": "4057600",
    "end": "4063000"
  },
  {
    "text": "Go is good. Go is better than C.\nGo is definitely better than C.",
    "start": "4063000",
    "end": "4069010"
  },
  {
    "text": "Like it has problems. Don't get me wrong, every time I get frustrated\nwith it. I'm like, no, this is C with the really worst\nbits.",
    "start": "4069010",
    "end": "4074580"
  },
  {
    "text": "And that's all it actually ever meant to be. C with nonpoint exceptions and head of file\ninclusion and stuff fixed and that's fine.",
    "start": "4074580",
    "end": "4082850"
  },
  {
    "text": "It's better than using what's a low bar. Tropical diseases that are better than C.\nYes.",
    "start": "4082850",
    "end": "4092520"
  },
  {
    "start": "4091000",
    "end": "4156000"
  },
  {
    "text": "So yes, we should do another one of these\nthough. We should, this has been really fun. This is sort of an annual thing or something. I'd love to, I'd love to talk about the comedy.",
    "start": "4092520",
    "end": "4099250"
  },
  {
    "text": "I tried to do a funny about computers twice. I was thinking before we came up and they\nwere, yeah.",
    "start": "4099250",
    "end": "4104770"
  },
  {
    "text": "Well, I was actually a professional for... Well, you're right. For exactly.",
    "start": "4104770",
    "end": "4109830"
  },
  {
    "text": "...some years. And, it's great. Now I get to do both. I get to kind of be funny about computers.",
    "start": "4109830",
    "end": "4116270"
  },
  {
    "text": "It's just so much to this fish in a barrel,\nisn't it? It's just fish in a barrel a lot of the time. So I'm working on a new one at the moment.",
    "start": "4116270",
    "end": "4122818"
  },
  {
    "text": "Programming's greatest mistakes, which is\na kind of in-depth analysis of things like",
    "start": "4122819",
    "end": "4128330"
  },
  {
    "text": "the Y2K bug and just the very existence of\nnull. Null, the billion-dollar mistake.Yes.",
    "start": "4128330",
    "end": "4134580"
  },
  {
    "text": "So that'll be showing up on YouTube sometime\nlater this year. I will check it out.",
    "start": "4134580",
    "end": "4140670"
  },
  {
    "text": "Right. Cool. Thank you so much. Thanks very much.",
    "start": "4140670",
    "end": "4143672"
  }
]