[
  {
    "text": "[Music]",
    "start": "4740",
    "end": "7828"
  },
  {
    "text": "I don't know if I'm right about this I",
    "start": "13960",
    "end": "15759"
  },
  {
    "text": "haven't seen any industrywide surveys",
    "start": "15759",
    "end": "18480"
  },
  {
    "text": "but it's my impression based on the",
    "start": "18480",
    "end": "20199"
  },
  {
    "text": "clients that I work with and the people",
    "start": "20199",
    "end": "21720"
  },
  {
    "text": "that I talk to that the commonest way to",
    "start": "21720",
    "end": "24320"
  },
  {
    "text": "start a new project these days is to gu",
    "start": "24320",
    "end": "26960"
  },
  {
    "text": "at the breakdown of services somehow and",
    "start": "26960",
    "end": "29160"
  },
  {
    "text": "then create a separate repo for each one",
    "start": "29160",
    "end": "31800"
  },
  {
    "text": "and then begin this is a terrible idea",
    "start": "31800",
    "end": "35800"
  },
  {
    "text": "somehow we've de demonized the idea of a",
    "start": "35800",
    "end": "38640"
  },
  {
    "text": "shared repository and for some people",
    "start": "38640",
    "end": "41399"
  },
  {
    "text": "the idea of what is sometimes called a",
    "start": "41399",
    "end": "43360"
  },
  {
    "text": "monor repo has become almost a synonym",
    "start": "43360",
    "end": "46160"
  },
  {
    "text": "for evil verion control is just a tool",
    "start": "46160",
    "end": "49760"
  },
  {
    "text": "it's not a tool of torture so it's not",
    "start": "49760",
    "end": "51879"
  },
  {
    "text": "likely to be inherently evil so what are",
    "start": "51879",
    "end": "55039"
  },
  {
    "text": "the pros and cons of multi and monor",
    "start": "55039",
    "end": "58320"
  },
  {
    "text": "repos and yes this is kind of another",
    "start": "58320",
    "end": "61399"
  },
  {
    "text": "episode about",
    "start": "61399",
    "end": "63960"
  },
  {
    "text": "[Music]",
    "start": "67220",
    "end": "71200"
  },
  {
    "text": "microservices hi I'm Dave Farley of",
    "start": "71200",
    "end": "73240"
  },
  {
    "text": "continuous delivery welcome to my",
    "start": "73240",
    "end": "74759"
  },
  {
    "text": "channel if you haven't been here before",
    "start": "74759",
    "end": "76960"
  },
  {
    "text": "please do hit subscribe and if you enjoy",
    "start": "76960",
    "end": "79280"
  },
  {
    "text": "the content today hit like as",
    "start": "79280",
    "end": "81560"
  },
  {
    "text": "well my new book modern software",
    "start": "81560",
    "end": "84000"
  },
  {
    "text": "engineering is doing rather well at the",
    "start": "84000",
    "end": "85600"
  },
  {
    "text": "moment last week it was the bestseller",
    "start": "85600",
    "end": "87600"
  },
  {
    "text": "in three separate categories on Amazon",
    "start": "87600",
    "end": "90320"
  },
  {
    "text": "uh it's aimed at describing a",
    "start": "90320",
    "end": "92240"
  },
  {
    "text": "lightweight science inspired approach to",
    "start": "92240",
    "end": "94640"
  },
  {
    "text": "software development that significantly",
    "start": "94640",
    "end": "97680"
  },
  {
    "text": "improves our chances of delivering",
    "start": "97680",
    "end": "100000"
  },
  {
    "text": "better software faster and from the",
    "start": "100000",
    "end": "102159"
  },
  {
    "text": "review feedback so far it's helping",
    "start": "102159",
    "end": "104479"
  },
  {
    "text": "people to think differently about",
    "start": "104479",
    "end": "106200"
  },
  {
    "text": "software development and helping people",
    "start": "106200",
    "end": "108840"
  },
  {
    "text": "to think that maybe we can apply",
    "start": "108840",
    "end": "111240"
  },
  {
    "text": "engineering style thinking to software",
    "start": "111240",
    "end": "113439"
  },
  {
    "text": "after all please do check out the links",
    "start": "113439",
    "end": "116320"
  },
  {
    "text": "in the description below I I hope you",
    "start": "116320",
    "end": "118280"
  },
  {
    "text": "find the book helpful",
    "start": "118280",
    "end": "121240"
  },
  {
    "text": "so what is a repository and what do we",
    "start": "121240",
    "end": "125320"
  },
  {
    "text": "really mean when we think about the idea",
    "start": "125320",
    "end": "128640"
  },
  {
    "text": "I think it's really about defining a",
    "start": "128640",
    "end": "130840"
  },
  {
    "text": "useful working scope for our software if",
    "start": "130840",
    "end": "134400"
  },
  {
    "text": "you use Version Control and if you don't",
    "start": "134400",
    "end": "136800"
  },
  {
    "text": "stop watching this video immediately and",
    "start": "136800",
    "end": "138879"
  },
  {
    "text": "go and install a Version Control System",
    "start": "138879",
    "end": "141200"
  },
  {
    "text": "right now but if you do use Version",
    "start": "141200",
    "end": "144200"
  },
  {
    "text": "Control then what is it really for what",
    "start": "144200",
    "end": "147160"
  },
  {
    "text": "are the versions that we're controlling",
    "start": "147160",
    "end": "150319"
  },
  {
    "text": "the main thing that AV Version Control",
    "start": "150319",
    "end": "151959"
  },
  {
    "text": "System gives us is the ability to step",
    "start": "151959",
    "end": "153760"
  },
  {
    "text": "back to safety when we make a mistake",
    "start": "153760",
    "end": "156720"
  },
  {
    "text": "this is a huge Advantage it means that",
    "start": "156720",
    "end": "159720"
  },
  {
    "text": "we can make a change with confidence",
    "start": "159720",
    "end": "161599"
  },
  {
    "text": "that we're never too far away from",
    "start": "161599",
    "end": "163440"
  },
  {
    "text": "safety it also gives us the ability to",
    "start": "163440",
    "end": "165879"
  },
  {
    "text": "share our changes with other people more",
    "start": "165879",
    "end": "168280"
  },
  {
    "text": "easily I think that this feature is very",
    "start": "168280",
    "end": "171040"
  },
  {
    "text": "much in second place to being able to",
    "start": "171040",
    "end": "172959"
  },
  {
    "text": "step back to safety but it's still",
    "start": "172959",
    "end": "175640"
  },
  {
    "text": "extremely",
    "start": "175640",
    "end": "176959"
  },
  {
    "text": "useful and third adversion control",
    "start": "176959",
    "end": "180040"
  },
  {
    "text": "system provides a shared safe place",
    "start": "180040",
    "end": "182360"
  },
  {
    "text": "where we can store and protect our",
    "start": "182360",
    "end": "185080"
  },
  {
    "text": "changes we have a backup so we can be",
    "start": "185080",
    "end": "187799"
  },
  {
    "text": "confident that we won't lose our",
    "start": "187799",
    "end": "189239"
  },
  {
    "text": "precious code in the event of a hardware",
    "start": "189239",
    "end": "191400"
  },
  {
    "text": "failure for example there are other",
    "start": "191400",
    "end": "194000"
  },
  {
    "text": "advantages too but I think that these",
    "start": "194000",
    "end": "196200"
  },
  {
    "text": "three are the big ones so given these",
    "start": "196200",
    "end": "199440"
  },
  {
    "text": "advantages how do we decide what to put",
    "start": "199440",
    "end": "202239"
  },
  {
    "text": "into our repos what's the right scope",
    "start": "202239",
    "end": "205480"
  },
  {
    "text": "for Version",
    "start": "205480",
    "end": "206760"
  },
  {
    "text": "Control I'd argue that there are three",
    "start": "206760",
    "end": "209319"
  },
  {
    "text": "models and one of them's dumb we can put",
    "start": "209319",
    "end": "212439"
  },
  {
    "text": "everything into one big Reaper let's",
    "start": "212439",
    "end": "215120"
  },
  {
    "text": "call that a monor Reaper I think that",
    "start": "215120",
    "end": "217519"
  },
  {
    "text": "the term is the wrong idea but we'll get",
    "start": "217519",
    "end": "220000"
  },
  {
    "text": "to that later on or we can divide our",
    "start": "220000",
    "end": "223239"
  },
  {
    "text": "system into smaller pieces and put each",
    "start": "223239",
    "end": "226200"
  },
  {
    "text": "piece into a separate repo this is the",
    "start": "226200",
    "end": "229200"
  },
  {
    "text": "multi- repo approach that's very common",
    "start": "229200",
    "end": "231439"
  },
  {
    "text": "these days but there are two versions of",
    "start": "231439",
    "end": "234000"
  },
  {
    "text": "this in one version each of these repos",
    "start": "234000",
    "end": "237959"
  },
  {
    "text": "contains an independent deco board piece",
    "start": "237959",
    "end": "240319"
  },
  {
    "text": "of software that is it doesn't change in",
    "start": "240319",
    "end": "243920"
  },
  {
    "text": "any way that forces change on code that",
    "start": "243920",
    "end": "246360"
  },
  {
    "text": "uses it that are in other epos this is",
    "start": "246360",
    "end": "249319"
  },
  {
    "text": "the microservices approach and this is",
    "start": "249319",
    "end": "251640"
  },
  {
    "text": "the most scalable way to build software",
    "start": "251640",
    "end": "254799"
  },
  {
    "text": "but that comes at a price in other",
    "start": "254799",
    "end": "257720"
  },
  {
    "text": "versions of a multi repo a pattern I",
    "start": "257720",
    "end": "261239"
  },
  {
    "text": "call coupled modules we divide the",
    "start": "261239",
    "end": "263479"
  },
  {
    "text": "software up into pieces again each in a",
    "start": "263479",
    "end": "266520"
  },
  {
    "text": "separate repo but they're sufficiently",
    "start": "266520",
    "end": "268840"
  },
  {
    "text": "coupled to other p pieces in other repos",
    "start": "268840",
    "end": "271759"
  },
  {
    "text": "that we don't really trust the",
    "start": "271759",
    "end": "273360"
  },
  {
    "text": "interactions between the pieces unless",
    "start": "273360",
    "end": "275280"
  },
  {
    "text": "we test them all",
    "start": "275280",
    "end": "277560"
  },
  {
    "text": "together in case this is not clear I",
    "start": "277560",
    "end": "280800"
  },
  {
    "text": "think that this is the dumb one let's",
    "start": "280800",
    "end": "283520"
  },
  {
    "text": "explore these ideas in a bit more detail",
    "start": "283520",
    "end": "285440"
  },
  {
    "text": "to find out why so we have our three",
    "start": "285440",
    "end": "288560"
  },
  {
    "text": "advantages of Version Control we can",
    "start": "288560",
    "end": "290720"
  },
  {
    "text": "step back to safety share code with",
    "start": "290720",
    "end": "292360"
  },
  {
    "text": "others and we can protect our assets so",
    "start": "292360",
    "end": "294720"
  },
  {
    "text": "Version Control records the history of",
    "start": "294720",
    "end": "296720"
  },
  {
    "text": "changes to our systems here's a system",
    "start": "296720",
    "end": "299720"
  },
  {
    "text": "made up of several pieces we'll put all",
    "start": "299720",
    "end": "302320"
  },
  {
    "text": "of these pieces initially into a single",
    "start": "302320",
    "end": "305440"
  },
  {
    "text": "repo then that scope that set of changes",
    "start": "305440",
    "end": "308919"
  },
  {
    "text": "represents a definitive version of that",
    "start": "308919",
    "end": "311160"
  },
  {
    "text": "overall system we know that version one",
    "start": "311160",
    "end": "313800"
  },
  {
    "text": "of a works with version two of B and C",
    "start": "313800",
    "end": "317400"
  },
  {
    "text": "and version three of D there's no room",
    "start": "317400",
    "end": "320199"
  },
  {
    "text": "for confusion here assuming that the",
    "start": "320199",
    "end": "322000"
  },
  {
    "text": "system works at all we know that these",
    "start": "322000",
    "end": "324400"
  },
  {
    "text": "pieces work together if I make a change",
    "start": "324400",
    "end": "327800"
  },
  {
    "text": "let's say I change B to version three",
    "start": "327800",
    "end": "330280"
  },
  {
    "text": "that breaks something I can easily step",
    "start": "330280",
    "end": "333160"
  },
  {
    "text": "back to the previous version or any",
    "start": "333160",
    "end": "334960"
  },
  {
    "text": "other and then figure out what went",
    "start": "334960",
    "end": "337280"
  },
  {
    "text": "wrong if I make a change that means that",
    "start": "337280",
    "end": "339960"
  },
  {
    "text": "I need to change my code and your code",
    "start": "339960",
    "end": "342919"
  },
  {
    "text": "together I can do that and the next time",
    "start": "342919",
    "end": "346000"
  },
  {
    "text": "you syn you'll see my changes so we can",
    "start": "346000",
    "end": "348840"
  },
  {
    "text": "easily share even quite complex coupled",
    "start": "348840",
    "end": "351759"
  },
  {
    "text": "changes that cross boundaries between",
    "start": "351759",
    "end": "353479"
  },
  {
    "text": "our",
    "start": "353479",
    "end": "354759"
  },
  {
    "text": "pieces would when would I see a",
    "start": "354759",
    "end": "357680"
  },
  {
    "text": "breakage if it's all in a single repo",
    "start": "357680",
    "end": "360720"
  },
  {
    "text": "then I'll build and test everything",
    "start": "360720",
    "end": "362319"
  },
  {
    "text": "together depending on our technology I",
    "start": "362319",
    "end": "364759"
  },
  {
    "text": "can probably spot breakages in my IDE",
    "start": "364759",
    "end": "367120"
  },
  {
    "text": "before I even commit sometimes but if",
    "start": "367120",
    "end": "369880"
  },
  {
    "text": "not then my tests that run during the",
    "start": "369880",
    "end": "371680"
  },
  {
    "text": "commit stage of my deployment pipeline",
    "start": "371680",
    "end": "373520"
  },
  {
    "text": "will find the problem and if not then",
    "start": "373520",
    "end": "375880"
  },
  {
    "text": "then my acceptance test will test the",
    "start": "375880",
    "end": "378199"
  },
  {
    "text": "test test the whole system together",
    "start": "378199",
    "end": "379759"
  },
  {
    "text": "we'll certainly find the",
    "start": "379759",
    "end": "381520"
  },
  {
    "text": "problem if I want to backup well all of",
    "start": "381520",
    "end": "384720"
  },
  {
    "text": "the info that defines my system is",
    "start": "384720",
    "end": "386400"
  },
  {
    "text": "contained within the reaper so that's",
    "start": "386400",
    "end": "388960"
  },
  {
    "text": "simply a matter of backing the whole",
    "start": "388960",
    "end": "390479"
  },
  {
    "text": "thing",
    "start": "390479",
    "end": "391520"
  },
  {
    "text": "up it represents a definitive statement",
    "start": "391520",
    "end": "394639"
  },
  {
    "text": "of all of the dependencies all of the",
    "start": "394639",
    "end": "396160"
  },
  {
    "text": "code everything so all three of the",
    "start": "396160",
    "end": "399000"
  },
  {
    "text": "advantages of Version Control are simple",
    "start": "399000",
    "end": "401440"
  },
  {
    "text": "to access for a monor",
    "start": "401440",
    "end": "403479"
  },
  {
    "text": "Reaper let's look at the multi repo",
    "start": "403479",
    "end": "406759"
  },
  {
    "text": "approach in this model each service",
    "start": "406759",
    "end": "409759"
  },
  {
    "text": "lives in its own",
    "start": "409759",
    "end": "411319"
  },
  {
    "text": "repository so here is the same system",
    "start": "411319",
    "end": "414199"
  },
  {
    "text": "but now we'll store each piece",
    "start": "414199",
    "end": "416240"
  },
  {
    "text": "separately there is clearly a problem",
    "start": "416240",
    "end": "419199"
  },
  {
    "text": "here there is stuff that isn't in any of",
    "start": "419199",
    "end": "422120"
  },
  {
    "text": "the repos the communication between the",
    "start": "422120",
    "end": "425199"
  },
  {
    "text": "pieces of our system and the",
    "start": "425199",
    "end": "427240"
  },
  {
    "text": "specification of which versions of the",
    "start": "427240",
    "end": "429800"
  },
  {
    "text": "pieces work together to make a whole",
    "start": "429800",
    "end": "432120"
  },
  {
    "text": "system these things aren't stored",
    "start": "432120",
    "end": "434919"
  },
  {
    "text": "anywhere as I said there are two",
    "start": "434919",
    "end": "437479"
  },
  {
    "text": "approaches to solving this",
    "start": "437479",
    "end": "439560"
  },
  {
    "text": "problem a defining characteristic of the",
    "start": "439560",
    "end": "442639"
  },
  {
    "text": "microservice approach is that each piece",
    "start": "442639",
    "end": "446000"
  },
  {
    "text": "is independently",
    "start": "446000",
    "end": "447720"
  },
  {
    "text": "Deployable that is you you don't get to",
    "start": "447720",
    "end": "450240"
  },
  {
    "text": "test these interactions between Services",
    "start": "450240",
    "end": "452680"
  },
  {
    "text": "before",
    "start": "452680",
    "end": "453680"
  },
  {
    "text": "release the implication of this is that",
    "start": "453680",
    "end": "457000"
  },
  {
    "text": "you don't care which versions make up",
    "start": "457000",
    "end": "459160"
  },
  {
    "text": "the system because you design the system",
    "start": "459160",
    "end": "462199"
  },
  {
    "text": "so that it is tolerant of different",
    "start": "462199",
    "end": "463960"
  },
  {
    "text": "versions in this model I can safely",
    "start": "463960",
    "end": "466599"
  },
  {
    "text": "change any of these Services",
    "start": "466599",
    "end": "468520"
  },
  {
    "text": "independently of the others in",
    "start": "468520",
    "end": "470240"
  },
  {
    "text": "confidence that my changes won't break",
    "start": "470240",
    "end": "472159"
  },
  {
    "text": "any of them and also won't Force any",
    "start": "472159",
    "end": "474879"
  },
  {
    "text": "change on them",
    "start": "474879",
    "end": "476199"
  },
  {
    "text": "either you do this through design and in",
    "start": "476199",
    "end": "479039"
  },
  {
    "text": "particular the design of the interfaces",
    "start": "479039",
    "end": "481000"
  },
  {
    "text": "between the pieces these points are",
    "start": "481000",
    "end": "483599"
  },
  {
    "text": "special they're important and so they",
    "start": "483599",
    "end": "485599"
  },
  {
    "text": "are treated with more caution and",
    "start": "485599",
    "end": "488000"
  },
  {
    "text": "care there are two strategies that help",
    "start": "488000",
    "end": "490960"
  },
  {
    "text": "to achieve this the interfaces are so",
    "start": "490960",
    "end": "494360"
  },
  {
    "text": "well understood so stable that they",
    "start": "494360",
    "end": "496879"
  },
  {
    "text": "never need to change think Amazon S3 or",
    "start": "496879",
    "end": "500879"
  },
  {
    "text": "tcpip or you implement them in a way",
    "start": "500879",
    "end": "504039"
  },
  {
    "text": "that they are flexible and can cope with",
    "start": "504039",
    "end": "506400"
  },
  {
    "text": "change without breaking think web",
    "start": "506400",
    "end": "508520"
  },
  {
    "text": "browsers and HTM Ma so how does this",
    "start": "508520",
    "end": "511919"
  },
  {
    "text": "stand up to our desired properties of",
    "start": "511919",
    "end": "514279"
  },
  {
    "text": "Version",
    "start": "514279",
    "end": "515320"
  },
  {
    "text": "Control well clearly for changes to a",
    "start": "515320",
    "end": "518000"
  },
  {
    "text": "single service it's simple I can easily",
    "start": "518000",
    "end": "521279"
  },
  {
    "text": "step back to a previous safe version but",
    "start": "521279",
    "end": "524760"
  },
  {
    "text": "what happens if I introduce a change",
    "start": "524760",
    "end": "526240"
  },
  {
    "text": "that does break one of these inter",
    "start": "526240",
    "end": "528399"
  },
  {
    "text": "service interactions in some way well",
    "start": "528399",
    "end": "531200"
  },
  {
    "text": "the first problem is when do I find out",
    "start": "531200",
    "end": "535440"
  },
  {
    "text": "if my testing is good maybe I have some",
    "start": "535440",
    "end": "538200"
  },
  {
    "text": "contract tests to check for breaking",
    "start": "538200",
    "end": "541320"
  },
  {
    "text": "changes uh and then I'll find the",
    "start": "541320",
    "end": "543399"
  },
  {
    "text": "problem on Commit when my test fails in",
    "start": "543399",
    "end": "545640"
  },
  {
    "text": "my deployment pipeline if I don't have",
    "start": "545640",
    "end": "548440"
  },
  {
    "text": "good tests though then I won't find this",
    "start": "548440",
    "end": "550959"
  },
  {
    "text": "until I'm in production when stuff",
    "start": "550959",
    "end": "553079"
  },
  {
    "text": "breaks in a real micr service",
    "start": "553079",
    "end": "555720"
  },
  {
    "text": "environment finding the cause of these",
    "start": "555720",
    "end": "558279"
  },
  {
    "text": "kinds of failures can be very complex",
    "start": "558279",
    "end": "561399"
  },
  {
    "text": "versions are changing all of the time",
    "start": "561399",
    "end": "563240"
  },
  {
    "text": "production is a moving Target there is",
    "start": "563240",
    "end": "565720"
  },
  {
    "text": "no definitive statement anywhere that",
    "start": "565720",
    "end": "568560"
  },
  {
    "text": "version X of a works with Version Y of",
    "start": "568560",
    "end": "571880"
  },
  {
    "text": "B after all they never met until they",
    "start": "571880",
    "end": "574880"
  },
  {
    "text": "met in",
    "start": "574880",
    "end": "575839"
  },
  {
    "text": "production so what version should you",
    "start": "575839",
    "end": "578680"
  },
  {
    "text": "step back",
    "start": "578680",
    "end": "580040"
  },
  {
    "text": "to it's easy to imagine complex",
    "start": "580040",
    "end": "582600"
  },
  {
    "text": "scenarios where it's impossible to step",
    "start": "582600",
    "end": "584760"
  },
  {
    "text": "back the answer is to work in ways that",
    "start": "584760",
    "end": "587959"
  },
  {
    "text": "let you roll forward rather than step",
    "start": "587959",
    "end": "590240"
  },
  {
    "text": "back and this is a common approach in",
    "start": "590240",
    "end": "592240"
  },
  {
    "text": "microservices teams but now we've given",
    "start": "592240",
    "end": "596079"
  },
  {
    "text": "up one of the big advantages of Version",
    "start": "596079",
    "end": "597880"
  },
  {
    "text": "Control",
    "start": "597880",
    "end": "599519"
  },
  {
    "text": "that may be a worthwhile sacrifice if",
    "start": "599519",
    "end": "602519"
  },
  {
    "text": "you're gaining from the advantages but",
    "start": "602519",
    "end": "605240"
  },
  {
    "text": "it's always a",
    "start": "605240",
    "end": "606519"
  },
  {
    "text": "cost organizations that are good at",
    "start": "606519",
    "end": "609160"
  },
  {
    "text": "microservices are clever at not breaking",
    "start": "609160",
    "end": "611920"
  },
  {
    "text": "interactions between Services because",
    "start": "611920",
    "end": "614399"
  },
  {
    "text": "that is the only game in town really but",
    "start": "614399",
    "end": "617440"
  },
  {
    "text": "that is always extra work and requires a",
    "start": "617440",
    "end": "620360"
  },
  {
    "text": "degree of design sophistication to",
    "start": "620360",
    "end": "623600"
  },
  {
    "text": "achieve what about sharing code in a",
    "start": "623600",
    "end": "626600"
  },
  {
    "text": "monolith everyone has access to the same",
    "start": "626600",
    "end": "628959"
  },
  {
    "text": "code in microservices that's not",
    "start": "628959",
    "end": "631279"
  },
  {
    "text": "necessarily the case so if I make a",
    "start": "631279",
    "end": "634079"
  },
  {
    "text": "change to my service that also requires",
    "start": "634079",
    "end": "637560"
  },
  {
    "text": "you to change yours it's going to be",
    "start": "637560",
    "end": "640040"
  },
  {
    "text": "hard for me to know that that's the TR",
    "start": "640040",
    "end": "642240"
  },
  {
    "text": "that's the case but even then I can't",
    "start": "642240",
    "end": "645399"
  },
  {
    "text": "make a change that change myself without",
    "start": "645399",
    "end": "647639"
  },
  {
    "text": "having access to your",
    "start": "647639",
    "end": "649200"
  },
  {
    "text": "repository and now I have to coordinate",
    "start": "649200",
    "end": "652240"
  },
  {
    "text": "the work between two separate repos this",
    "start": "652240",
    "end": "655240"
  },
  {
    "text": "is not impossible but it's more complex",
    "start": "655240",
    "end": "658000"
  },
  {
    "text": "and slower than having everything in the",
    "start": "658000",
    "end": "660440"
  },
  {
    "text": "same code basee so this slows me down it",
    "start": "660440",
    "end": "663760"
  },
  {
    "text": "either prevents me from making such",
    "start": "663760",
    "end": "665320"
  },
  {
    "text": "changes alog together or it makes them",
    "start": "665320",
    "end": "667320"
  },
  {
    "text": "harder",
    "start": "667320",
    "end": "668279"
  },
  {
    "text": "work so this works against sharing",
    "start": "668279",
    "end": "671279"
  },
  {
    "text": "changes",
    "start": "671279",
    "end": "672519"
  },
  {
    "text": "easily let's be absolutely clear none of",
    "start": "672519",
    "end": "676240"
  },
  {
    "text": "this means that software development is",
    "start": "676240",
    "end": "677959"
  },
  {
    "text": "impossible under these circumstances it",
    "start": "677959",
    "end": "680639"
  },
  {
    "text": "just means that things move more slowly",
    "start": "680639",
    "end": "682959"
  },
  {
    "text": "and that there's more friction once",
    "start": "682959",
    "end": "685560"
  },
  {
    "text": "again the answer in microservices is to",
    "start": "685560",
    "end": "687800"
  },
  {
    "text": "attempt to eliminate coordinated changes",
    "start": "687800",
    "end": "690639"
  },
  {
    "text": "alog together so we're back to stable",
    "start": "690639",
    "end": "693000"
  },
  {
    "text": "interfaces or very flexible Loosely",
    "start": "693000",
    "end": "695000"
  },
  {
    "text": "coupled apis that are more difficult to",
    "start": "695000",
    "end": "698040"
  },
  {
    "text": "design what about protecting the code",
    "start": "698040",
    "end": "701480"
  },
  {
    "text": "well again easy maybe even trivial for a",
    "start": "701480",
    "end": "704399"
  },
  {
    "text": "single service but what about the system",
    "start": "704399",
    "end": "706399"
  },
  {
    "text": "as a whole remember there's no version",
    "start": "706399",
    "end": "709120"
  },
  {
    "text": "controll record of which versions of the",
    "start": "709120",
    "end": "710920"
  },
  {
    "text": "services work together and no Version",
    "start": "710920",
    "end": "713000"
  },
  {
    "text": "Control record of which versions are in",
    "start": "713000",
    "end": "715040"
  },
  {
    "text": "production at any given point so we",
    "start": "715040",
    "end": "717600"
  },
  {
    "text": "can't back up the whole system",
    "start": "717600",
    "end": "720160"
  },
  {
    "text": "in a microservice world this is fine",
    "start": "720160",
    "end": "723040"
  },
  {
    "text": "it's not a problem at all because",
    "start": "723040",
    "end": "724959"
  },
  {
    "text": "remember our services don't care what",
    "start": "724959",
    "end": "726639"
  },
  {
    "text": "versions the others are at it's a moving",
    "start": "726639",
    "end": "729279"
  },
  {
    "text": "Target that's okay but it's a more",
    "start": "729279",
    "end": "731959"
  },
  {
    "text": "complicated",
    "start": "731959",
    "end": "733160"
  },
  {
    "text": "thing in essence a microservice approach",
    "start": "733160",
    "end": "735839"
  },
  {
    "text": "makes no sense unless it is a",
    "start": "735839",
    "end": "737839"
  },
  {
    "text": "distributed approach the goal of",
    "start": "737839",
    "end": "740240"
  },
  {
    "text": "microservices is to scale development",
    "start": "740240",
    "end": "742959"
  },
  {
    "text": "and it's a wonderful at that it's the",
    "start": "742959",
    "end": "745199"
  },
  {
    "text": "most scalable approach but it comes at a",
    "start": "745199",
    "end": "748600"
  },
  {
    "text": "significant cost of complexity and",
    "start": "748600",
    "end": "751480"
  },
  {
    "text": "overhead this is a worthwhile tradeoff",
    "start": "751480",
    "end": "754240"
  },
  {
    "text": "if you're Amazon or Netflix but maybe",
    "start": "754240",
    "end": "756639"
  },
  {
    "text": "not so much if you're a smaller team",
    "start": "756639",
    "end": "758320"
  },
  {
    "text": "that doesn't need the",
    "start": "758320",
    "end": "760040"
  },
  {
    "text": "scalability so what about the other",
    "start": "760040",
    "end": "762240"
  },
  {
    "text": "multi- repo approach the coupled modules",
    "start": "762240",
    "end": "764839"
  },
  {
    "text": "thing this is the approach that",
    "start": "764839",
    "end": "767240"
  },
  {
    "text": "everybody prefers the sound of but they",
    "start": "767240",
    "end": "770120"
  },
  {
    "text": "like it because they want to have their",
    "start": "770120",
    "end": "771560"
  },
  {
    "text": "cake and eat it too coupled modules",
    "start": "771560",
    "end": "774600"
  },
  {
    "text": "doesn't really make any sense at all the",
    "start": "774600",
    "end": "777040"
  },
  {
    "text": "coupled modules will once again allocate",
    "start": "777040",
    "end": "779760"
  },
  {
    "text": "a piece of our system to a dedicated",
    "start": "779760",
    "end": "782160"
  },
  {
    "text": "repository as before what about the",
    "start": "782160",
    "end": "784800"
  },
  {
    "text": "conversations between modules and the",
    "start": "784800",
    "end": "786800"
  },
  {
    "text": "versions of the",
    "start": "786800",
    "end": "788040"
  },
  {
    "text": "pieces I think that the idea behind this",
    "start": "788040",
    "end": "790760"
  },
  {
    "text": "approach goes something like this we",
    "start": "790760",
    "end": "793680"
  },
  {
    "text": "can't imagine building and testing all",
    "start": "793680",
    "end": "795480"
  },
  {
    "text": "of our stuff together as a monolith and",
    "start": "795480",
    "end": "797959"
  },
  {
    "text": "being able to get results fast enough so",
    "start": "797959",
    "end": "799959"
  },
  {
    "text": "we'll break our system into pieces",
    "start": "799959",
    "end": "801839"
  },
  {
    "text": "because that will make our lives easier",
    "start": "801839",
    "end": "804519"
  },
  {
    "text": "then we can build and test each piece in",
    "start": "804519",
    "end": "806600"
  },
  {
    "text": "isolation much more quickly but we also",
    "start": "806600",
    "end": "810199"
  },
  {
    "text": "can't imagine designing the pieces to be",
    "start": "810199",
    "end": "811920"
  },
  {
    "text": "independent like microservices so we'll",
    "start": "811920",
    "end": "814279"
  },
  {
    "text": "test all of our pieces together before",
    "start": "814279",
    "end": "816120"
  },
  {
    "text": "we release we'll test those inter",
    "start": "816120",
    "end": "818720"
  },
  {
    "text": "interservice interactions and we'll need",
    "start": "818720",
    "end": "821040"
  },
  {
    "text": "to store the versions of the pieces that",
    "start": "821040",
    "end": "823240"
  },
  {
    "text": "we know work together",
    "start": "823240",
    "end": "825760"
  },
  {
    "text": "somewhere H so now we've got a",
    "start": "825760",
    "end": "828880"
  },
  {
    "text": "monolithic system same as before but",
    "start": "828880",
    "end": "831959"
  },
  {
    "text": "this time with all of the impedance and",
    "start": "831959",
    "end": "834240"
  },
  {
    "text": "friction of a microservice system",
    "start": "834240",
    "end": "836800"
  },
  {
    "text": "without any of the benefits the PC",
    "start": "836800",
    "end": "839240"
  },
  {
    "text": "aren't independently Deployable and they",
    "start": "839240",
    "end": "841360"
  },
  {
    "text": "aren't independently developable either",
    "start": "841360",
    "end": "844680"
  },
  {
    "text": "because we don't know if our changes",
    "start": "844680",
    "end": "846800"
  },
  {
    "text": "really work until all of the integration",
    "start": "846800",
    "end": "849680"
  },
  {
    "text": "tests have run so as I said we're firmly",
    "start": "849680",
    "end": "853639"
  },
  {
    "text": "back in monolith land but actually it's",
    "start": "853639",
    "end": "857000"
  },
  {
    "text": "worse than that by separating our",
    "start": "857000",
    "end": "859680"
  },
  {
    "text": "coupled modules into separate",
    "start": "859680",
    "end": "861480"
  },
  {
    "text": "repositories we've eliminated several",
    "start": "861480",
    "end": "864320"
  },
  {
    "text": "useful optimization techniques that we",
    "start": "864320",
    "end": "867079"
  },
  {
    "text": "make sense of monoliths but that don't",
    "start": "867079",
    "end": "869440"
  },
  {
    "text": "work for multi- repos for example in a",
    "start": "869440",
    "end": "872360"
  },
  {
    "text": "monolithic build we can take advantages",
    "start": "872360",
    "end": "874680"
  },
  {
    "text": "of things like incremental builds we can",
    "start": "874680",
    "end": "878279"
  },
  {
    "text": "use techniques like static typing to",
    "start": "878279",
    "end": "880680"
  },
  {
    "text": "spot mistakes even earlier than",
    "start": "880680",
    "end": "882560"
  },
  {
    "text": "continuous integration would I think",
    "start": "882560",
    "end": "885120"
  },
  {
    "text": "that cup of modules is just a dumb",
    "start": "885120",
    "end": "887240"
  },
  {
    "text": "approach it's like the worst of all",
    "start": "887240",
    "end": "889839"
  },
  {
    "text": "worlds with none of the",
    "start": "889839",
    "end": "891839"
  },
  {
    "text": "benefits but it's incredibly common in",
    "start": "891839",
    "end": "895600"
  },
  {
    "text": "fact my experience is that most teams",
    "start": "895600",
    "end": "899120"
  },
  {
    "text": "that claim to practice microservices are",
    "start": "899120",
    "end": "901399"
  },
  {
    "text": "in reality doing coupled modules of some",
    "start": "901399",
    "end": "904040"
  },
  {
    "text": "form the test is always can you deploy",
    "start": "904040",
    "end": "908199"
  },
  {
    "text": "your microservice without testing it",
    "start": "908199",
    "end": "909720"
  },
  {
    "text": "with others",
    "start": "909720",
    "end": "910800"
  },
  {
    "text": "first I think that this gives us a",
    "start": "910800",
    "end": "913600"
  },
  {
    "text": "strong clue of a better way to think",
    "start": "913600",
    "end": "916079"
  },
  {
    "text": "about this problem the deployability of",
    "start": "916079",
    "end": "918880"
  },
  {
    "text": "our system is absolutely key I think",
    "start": "918880",
    "end": "922720"
  },
  {
    "text": "that our aim should be to make the",
    "start": "922720",
    "end": "924560"
  },
  {
    "text": "evaluations of our system definitive we",
    "start": "924560",
    "end": "928160"
  },
  {
    "text": "create employment pipelines that",
    "start": "928160",
    "end": "930199"
  },
  {
    "text": "determine the releasability of our",
    "start": "930199",
    "end": "931880"
  },
  {
    "text": "changes they are definitive for release",
    "start": "931880",
    "end": "935560"
  },
  {
    "text": "if the pipeline says everything's good",
    "start": "935560",
    "end": "939079"
  },
  {
    "text": "we're happy to release the change into",
    "start": "939079",
    "end": "940800"
  },
  {
    "text": "production if a single test fails then",
    "start": "940800",
    "end": "944040"
  },
  {
    "text": "our pipeline responds with not fit for",
    "start": "944040",
    "end": "947360"
  },
  {
    "text": "production to have that level of",
    "start": "947360",
    "end": "949680"
  },
  {
    "text": "confidence we need feedback That We",
    "start": "949680",
    "end": "951800"
  },
  {
    "text": "Gather from our test to be definitive",
    "start": "951800",
    "end": "953560"
  },
  {
    "text": "for release that means that we need to",
    "start": "953560",
    "end": "956000"
  },
  {
    "text": "test everything that needs testing",
    "start": "956000",
    "end": "958079"
  },
  {
    "text": "before release within the scope of the",
    "start": "958079",
    "end": "960839"
  },
  {
    "text": "pipeline so the scope of evaluation for",
    "start": "960839",
    "end": "963920"
  },
  {
    "text": "a pipeline is fixed by the releasability",
    "start": "963920",
    "end": "966839"
  },
  {
    "text": "of our software and the easiest way to",
    "start": "966839",
    "end": "970279"
  },
  {
    "text": "manage that is to make a pipeline",
    "start": "970279",
    "end": "973240"
  },
  {
    "text": "service a single repository that defines",
    "start": "973240",
    "end": "975839"
  },
  {
    "text": "that scope this means the scope of a",
    "start": "975839",
    "end": "979079"
  },
  {
    "text": "single repository is determined by the",
    "start": "979079",
    "end": "981519"
  },
  {
    "text": "releasability of your system or",
    "start": "981519",
    "end": "984079"
  },
  {
    "text": "service a pipeline evaluates an",
    "start": "984079",
    "end": "986519"
  },
  {
    "text": "independently Deployable unit of",
    "start": "986519",
    "end": "987880"
  },
  {
    "text": "software and that is the easiest to",
    "start": "987880",
    "end": "990120"
  },
  {
    "text": "accomplish when that independently",
    "start": "990120",
    "end": "991880"
  },
  {
    "text": "Deployable unit is stored in a single",
    "start": "991880",
    "end": "994279"
  },
  {
    "text": "repository so monoliths are fine real",
    "start": "994279",
    "end": "997639"
  },
  {
    "text": "microservices are fine too but coupled",
    "start": "997639",
    "end": "1000920"
  },
  {
    "text": "modules are only very inefficient",
    "start": "1000920",
    "end": "1003720"
  },
  {
    "text": "monoliths in",
    "start": "1003720",
    "end": "1005199"
  },
  {
    "text": "Disguise your independently Deployable",
    "start": "1005199",
    "end": "1007560"
  },
  {
    "text": "units don't have to be",
    "start": "1007560",
    "end": "1010040"
  },
  {
    "text": "microservices I've used that tag as a",
    "start": "1010040",
    "end": "1012319"
  },
  {
    "text": "kind of Shand but I think that the idea",
    "start": "1012319",
    "end": "1015160"
  },
  {
    "text": "of them being independently Deployable",
    "start": "1015160",
    "end": "1017319"
  },
  {
    "text": "is the more important idea",
    "start": "1017319",
    "end": "1019839"
  },
  {
    "text": "ultimately if you have a big subsystem",
    "start": "1019839",
    "end": "1022759"
  },
  {
    "text": "or even a small Library if they those",
    "start": "1022759",
    "end": "1025918"
  },
  {
    "text": "things are independently Deployable they",
    "start": "1025919",
    "end": "1028120"
  },
  {
    "text": "may sensibly be stored in their own",
    "start": "1028120",
    "end": "1030199"
  },
  {
    "text": "repository with their own deployment",
    "start": "1030199",
    "end": "1031880"
  },
  {
    "text": "pipeline if the contents of your repo",
    "start": "1031880",
    "end": "1034400"
  },
  {
    "text": "aren't independently Deployable I think",
    "start": "1034400",
    "end": "1036918"
  },
  {
    "text": "you're almost certainly wasting time and",
    "start": "1036919",
    "end": "1039918"
  },
  {
    "text": "effort thank you very much for",
    "start": "1039919",
    "end": "1043678"
  },
  {
    "text": "[Music]",
    "start": "1044569",
    "end": "1047709"
  },
  {
    "text": "watching for",
    "start": "1047840",
    "end": "1051880"
  }
]