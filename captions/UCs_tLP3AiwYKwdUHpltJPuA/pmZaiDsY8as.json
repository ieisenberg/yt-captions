[
  {
    "text": "thank you very much for coming um it's it's a great pleasure um to to give this",
    "start": "80",
    "end": "5879"
  },
  {
    "text": "talk uh about a topic I've been um passionate about for a long time um so",
    "start": "5879",
    "end": "11960"
  },
  {
    "text": "so IE very much appreciate your interest um but let's start by going back in",
    "start": "11960",
    "end": "21760"
  },
  {
    "text": "time like when Eda di exra started to talk about structured",
    "start": "21760",
    "end": "28119"
  },
  {
    "text": "programming in the 60s is people would say this is a very academic idea and um",
    "start": "28119",
    "end": "37559"
  },
  {
    "text": "it's not very convincing and now I mean nobody would",
    "start": "37559",
    "end": "45280"
  },
  {
    "text": "think about teaching programming any other",
    "start": "45280",
    "end": "50879"
  },
  {
    "text": "way in a similar way when um people like Len K introduced objectoriented",
    "start": "50879",
    "end": "57520"
  },
  {
    "text": "programming languages like small talk and C++ people would say would react with",
    "start": "57520",
    "end": "64119"
  },
  {
    "text": "skepticism and it's too complicated we don't really need that because we can do",
    "start": "64119",
    "end": "69360"
  },
  {
    "text": "the same thing in Pascal just fine what are you talking about nevertheless today",
    "start": "69360",
    "end": "77759"
  },
  {
    "text": "we expect of every developer to understand objectoriented",
    "start": "77759",
    "end": "83640"
  },
  {
    "text": "programming now we're in the middle of another paradigm shift",
    "start": "83640",
    "end": "90240"
  },
  {
    "text": "and we hear the same things H it's all a little bit too academic not really",
    "start": "90240",
    "end": "97720"
  },
  {
    "text": "practical well maybe some Elite ninja developers can do it but it's not for",
    "start": "97720",
    "end": "104360"
  },
  {
    "text": "the average developer and is it really sufficiently efficient I mean if I want",
    "start": "104360",
    "end": "109600"
  },
  {
    "text": "the efficient code I write C++ right and by the way it's very to complicated I",
    "start": "109600",
    "end": "114880"
  },
  {
    "text": "mean look at all those Mona tutorials",
    "start": "114880",
    "end": "119560"
  },
  {
    "text": "so interestingly these things happen over and over and over again not just in our",
    "start": "120000",
    "end": "128000"
  },
  {
    "text": "industry in fact um ett Rogers who um",
    "start": "128000",
    "end": "133800"
  },
  {
    "text": "was a professor in communication studies in the 60s he already published the",
    "start": "133800",
    "end": "139360"
  },
  {
    "text": "study and it was corroborated over and over and over again that whenever we",
    "start": "139360",
    "end": "145360"
  },
  {
    "text": "have technological inventions they spread their communic at",
    "start": "145360",
    "end": "150560"
  },
  {
    "text": "through um a base through a social system in in a particular um",
    "start": "150560",
    "end": "158400"
  },
  {
    "text": "um way and and the dispersion of that knowledge always happens in the same way",
    "start": "158400",
    "end": "165360"
  },
  {
    "text": "and it's quite interesting because if you look at at that model and it's something like every business graduate",
    "start": "165360",
    "end": "171760"
  },
  {
    "text": "would know about I guess is um for things like",
    "start": "171760",
    "end": "178599"
  },
  {
    "text": "railroads um smartphone adoption um disor",
    "start": "178599",
    "end": "184680"
  },
  {
    "text": "fridges like everything is being dispersed diffused",
    "start": "184680",
    "end": "191360"
  },
  {
    "text": "through Society at using the exact same curve I have to run here to show you",
    "start": "191360",
    "end": "197640"
  },
  {
    "text": "like the blue curve this is like how many new people uh adopt this new",
    "start": "197640",
    "end": "202959"
  },
  {
    "text": "technology and then the yellow curve is the sum of all the people who who have",
    "start": "202959",
    "end": "208959"
  },
  {
    "text": "uh adopted it so far it's always the same I mean imagine the pattern in which",
    "start": "208959",
    "end": "214959"
  },
  {
    "text": "railroads have spread through Society is the same as",
    "start": "214959",
    "end": "221879"
  },
  {
    "text": "iPhones I mean I was kind of like really um but as I said this has been",
    "start": "221879",
    "end": "228959"
  },
  {
    "text": "like a business um people have corroborated this over and over again",
    "start": "228959",
    "end": "234000"
  },
  {
    "text": "for all kinds of Technologies in all kinds of societies and it's always the same thing",
    "start": "234000",
    "end": "240920"
  },
  {
    "text": "it's the same pattern so maybe we can learn something",
    "start": "240920",
    "end": "246040"
  },
  {
    "text": "from that so what about I mean we wanted to talk about functional programming right so what about functional",
    "start": "246040",
    "end": "251560"
  },
  {
    "text": "programming where is functional programming on that curve I would say it's um we are getting",
    "start": "251560",
    "end": "259199"
  },
  {
    "text": "towards the end of the early adopters and of course it um it's a bit difficult",
    "start": "259199",
    "end": "265479"
  },
  {
    "text": "how to exactly measure that because it depends on what do you call an adopter maybe somebody who is using a react in",
    "start": "265479",
    "end": "271520"
  },
  {
    "text": "JavaScript I mean they're using functional programming in some way but that's not so important what's important",
    "start": "271520",
    "end": "277479"
  },
  {
    "text": "is that when you look at why and how people adopt things it's different at",
    "start": "277479",
    "end": "282720"
  },
  {
    "text": "the different stages that's the important thing so let's look at the",
    "start": "282720",
    "end": "287840"
  },
  {
    "text": "innovators so in our context like programming languages the innovators that's the people the programming",
    "start": "287840",
    "end": "294560"
  },
  {
    "text": "language researchers the people who write the first compilers the people who write the core libraries the platforms",
    "start": "294560",
    "end": "301479"
  },
  {
    "text": "the ecosystems the the people who start from nothing and create something in the",
    "start": "301479",
    "end": "308360"
  },
  {
    "text": "hopes that that other people will will will be using it um they are very very",
    "start": "308360",
    "end": "314560"
  },
  {
    "text": "happy to take risks right they try something and half the time doesn't work whatever but the payoff is huge if you",
    "start": "314560",
    "end": "322080"
  },
  {
    "text": "if you get a thing people actually start to use uh it's it's a huge reward right",
    "start": "322080",
    "end": "327400"
  },
  {
    "text": "high risk High payoff then after that and also what's very",
    "start": "327400",
    "end": "333800"
  },
  {
    "text": "important these innovators they you they they for in programming languages uh very often like especially function",
    "start": "333800",
    "end": "340600"
  },
  {
    "text": "language they they're typically coming out of programming language Theory mathematics like they they have this",
    "start": "340600",
    "end": "347400"
  },
  {
    "text": "scientific background okay then after that we get the early adopters the Early adopters are the people in your team who",
    "start": "347400",
    "end": "355319"
  },
  {
    "text": "are the first to try something they on the weekend have their private project where they try a new tech a new tool a",
    "start": "355319",
    "end": "362039"
  },
  {
    "text": "new whatever and then they figure it out and then they come into the meeting say",
    "start": "362039",
    "end": "367960"
  },
  {
    "text": "hey why don't you use that that's the earlier ad doors they",
    "start": "367960",
    "end": "373280"
  },
  {
    "text": "also take a high risk they usually have good connection to the innovators and they also have the background to",
    "start": "373280",
    "end": "380360"
  },
  {
    "text": "understand the theory right but then they try to sell it to a broader group",
    "start": "380360",
    "end": "385960"
  },
  {
    "text": "of people and that broader group of people is what we call the early majority and I think that the way this",
    "start": "385960",
    "end": "393240"
  },
  {
    "text": "is relevant to this talk is that we are at the verge of where we have to think about how we do we get the early",
    "start": "393240",
    "end": "399759"
  },
  {
    "text": "majority into functional programming the early majority of functional programmers that is",
    "start": "399759",
    "end": "405880"
  },
  {
    "text": "right those people they're quite differently motivated they are not very",
    "start": "405880",
    "end": "411400"
  },
  {
    "text": "happy to take a risk they expect a mature platform a mature compiler good ecosystem a great uh IDE they want",
    "start": "411400",
    "end": "419599"
  },
  {
    "text": "things to work because they want to solve a problem not F around with programming languages okay different",
    "start": "419599",
    "end": "426039"
  },
  {
    "text": "mindset they're not dama or anything they just have different priorities okay",
    "start": "426039",
    "end": "433919"
  },
  {
    "text": "so what I want to understand my motivation here is how do we get these",
    "start": "433919",
    "end": "439000"
  },
  {
    "text": "people on board okay so I don't know your background",
    "start": "439000",
    "end": "444599"
  },
  {
    "text": "maybe some of you are in this boat so who who identifies as a functional",
    "start": "444599",
    "end": "452240"
  },
  {
    "text": "programmer okay so we're talking about you that's good all right so how how can",
    "start": "452240",
    "end": "460599"
  },
  {
    "text": "we do that now after the early majority come more people but I'm not interested",
    "start": "460599",
    "end": "466800"
  },
  {
    "text": "in those people at the moment that that's the next question okay not tonight",
    "start": "466800",
    "end": "472159"
  },
  {
    "text": "sorry so one reason why this is relevant at the moment that question about the",
    "start": "472159",
    "end": "478440"
  },
  {
    "text": "early majority is something that um Z already mentioned",
    "start": "478440",
    "end": "485440"
  },
  {
    "text": "Lambda Lambda how many Lambda CHS did we",
    "start": "485440",
    "end": "491159"
  },
  {
    "text": "have fifth yeah so it's been running for a few years and the mission statement",
    "start": "491159",
    "end": "497400"
  },
  {
    "text": "for Lambda chem was always it's aimed at intermediate to advanc functional",
    "start": "497400",
    "end": "503800"
  },
  {
    "text": "programmers what does that mean well what it means is early adopter people",
    "start": "503800",
    "end": "510599"
  },
  {
    "text": "who in their own time on the weekend learned how to write hll ml Alexia",
    "start": "510599",
    "end": "518479"
  },
  {
    "text": "whatever your poison is and then they thought well I want to learn more about it I want to get to the next level which",
    "start": "518479",
    "end": "525320"
  },
  {
    "text": "is why I go to Lander clam and then I'll sell it to my",
    "start": "525320",
    "end": "531160"
  },
  {
    "text": "team okay that's what Lander's always been about if you're one of those people",
    "start": "531160",
    "end": "537560"
  },
  {
    "text": "well you still have a few days to think about a good proposal to put in but what we thought about this year",
    "start": "537560",
    "end": "546120"
  },
  {
    "text": "uh we being the organizers of Lambda so people like that is well maybe it's",
    "start": "546120",
    "end": "553200"
  },
  {
    "text": "time to move into different demographic so that's why we've got this welcome to",
    "start": "553200",
    "end": "560040"
  },
  {
    "text": "functional programming day and the idea here is that a day of workshops and",
    "start": "560040",
    "end": "565839"
  },
  {
    "text": "tutorials which go a lot slower than the normal talks which start from very basic",
    "start": "565839",
    "end": "571760"
  },
  {
    "text": "understanding of things and allow people who are maybe not among the early",
    "start": "571760",
    "end": "577920"
  },
  {
    "text": "adopters of functional programming they may be early adopters of something else I'm sure but functional programming is",
    "start": "577920",
    "end": "584240"
  },
  {
    "text": "not their thing that's fine but they think well maybe it's time to learn it because everybody's talking about",
    "start": "584240",
    "end": "589680"
  },
  {
    "text": "everybody's starting to use it there all these uh job postings offering like H",
    "start": "589680",
    "end": "594920"
  },
  {
    "text": "Developers for whatever so maybe I should think about this right so so we want to do something for for those",
    "start": "594920",
    "end": "602040"
  },
  {
    "text": "people and so that again leads to the question of um how how how do we teach",
    "start": "602040",
    "end": "610240"
  },
  {
    "text": "functional programming to to the early majority and so what I'm going to do and",
    "start": "610240",
    "end": "617040"
  },
  {
    "text": "on the 21st of May I'm going to run an introduction to functional programmer programming for people who haven't done",
    "start": "617040",
    "end": "624079"
  },
  {
    "text": "any functional program people who are software developers who know how to program but who don't know hll who don't",
    "start": "624079",
    "end": "630519"
  },
  {
    "text": "know okl who don't know Alan right and any other language I've not mentioned um",
    "start": "630519",
    "end": "638200"
  },
  {
    "text": "and then that we need to solve that problem I need to solve that problem but",
    "start": "638200",
    "end": "644320"
  },
  {
    "text": "not not only me I mean everybody among the early adopters who wants to uh get a",
    "start": "644320",
    "end": "650360"
  },
  {
    "text": "broader Community going needs to think about that and that's what I what I'm",
    "start": "650360",
    "end": "655880"
  },
  {
    "text": "going to talk about now this is on the background of I mean as Chad mentioned",
    "start": "655880",
    "end": "662079"
  },
  {
    "text": "together with um Gabriel Kella uh we've been teaching functional programming to",
    "start": "662079",
    "end": "669279"
  },
  {
    "text": "thousands of students at at Unis W through from first year to postgraduate",
    "start": "669279",
    "end": "676360"
  },
  {
    "text": "students so people who haven't done any programming to people who are quite happy to write any programing C++ and",
    "start": "676360",
    "end": "683880"
  },
  {
    "text": "we've we've experimented with all kinds of ways of teaching it and what's what",
    "start": "683880",
    "end": "689800"
  },
  {
    "text": "works for different people and so on we've we've done a lot of student surveys to get feedback optimize the way",
    "start": "689800",
    "end": "696880"
  },
  {
    "text": "we are doing things and um so at one point we wrote a textbook uh",
    "start": "696880",
    "end": "702480"
  },
  {
    "text": "introduction to just Computing but using hco and then lately we've kind of",
    "start": "702480",
    "end": "709240"
  },
  {
    "text": "um went back and and through all what we've learned and we've developed a high",
    "start": "709240",
    "end": "716000"
  },
  {
    "text": "school tutorial which is called learning high school it's free it's online uh it's got screencast with live",
    "start": "716000",
    "end": "721959"
  },
  {
    "text": "programming and um for all the people who didn't put the hand up when I Ur are",
    "start": "721959",
    "end": "728040"
  },
  {
    "text": "you functional programmer this is for you we've written this specifically for you and this is the kind of material",
    "start": "728040",
    "end": "735079"
  },
  {
    "text": "which I will also be teaching on this welcome to FP day and that's what I want",
    "start": "735079",
    "end": "741760"
  },
  {
    "text": "to talk about is what what are the lessons we learned which went into this",
    "start": "741760",
    "end": "747079"
  },
  {
    "text": "tutorial and and are also going to go into into that workshop on the 21st of",
    "start": "747079",
    "end": "752680"
  },
  {
    "text": "March okay so oops wh why did I um why did I start",
    "start": "752680",
    "end": "762000"
  },
  {
    "text": "with this whole um diffusion of innovation well one thing which becomes",
    "start": "762000",
    "end": "769120"
  },
  {
    "text": "very clear if you ever become a university Professor for any reason is",
    "start": "769120",
    "end": "776240"
  },
  {
    "text": "different people learn differently and a lot of that you can put down to",
    "start": "776240",
    "end": "782160"
  },
  {
    "text": "that curve and some people the way you teach one person will make no sense to another",
    "start": "782160",
    "end": "789320"
  },
  {
    "text": "person and if you're a good teacher you have to understand how to teach who otherwise you won't be effective for",
    "start": "789320",
    "end": "796480"
  },
  {
    "text": "everybody so two things about innovators",
    "start": "796480",
    "end": "801720"
  },
  {
    "text": "which they get wrong I mean we not going to I don't want to teach the innovators because the innovators are gone I mean",
    "start": "801720",
    "end": "807600"
  },
  {
    "text": "function programming has been invented no need to teach those people anymore they do something other else now or but",
    "start": "807600",
    "end": "815399"
  },
  {
    "text": "but they've shaped the initial teaching and they've made mistakes and we have to identify those mistakes in order to",
    "start": "815399",
    "end": "821320"
  },
  {
    "text": "change the teaching to be more effective to a broader group of people so what are these mistakes so one common mistakes",
    "start": "821320",
    "end": "827399"
  },
  {
    "text": "you see in programming classes programming and programming languages classes all the time lecture number one",
    "start": "827399",
    "end": "835320"
  },
  {
    "text": "programming language construct number one today we do why lose tomorrow we do",
    "start": "835320",
    "end": "840480"
  },
  {
    "text": "method calls so the curriculum is oriented at language",
    "start": "840480",
    "end": "845880"
  },
  {
    "text": "constructs right and that's really really bad but everybody does it because",
    "start": "845880",
    "end": "851360"
  },
  {
    "text": "it's the simplest thing if you if you being told teacher programming languages class uh well that's the first thing",
    "start": "851360",
    "end": "858279"
  },
  {
    "text": "everybody comes up with it's not good though because what you really want to teach are the concepts sometimes they're",
    "start": "858279",
    "end": "864320"
  },
  {
    "text": "tied to a programming language construct sometimes not and this paper by fiz and",
    "start": "864320",
    "end": "869519"
  },
  {
    "text": "um Findler flat and and Krishna Muti",
    "start": "869519",
    "end": "874839"
  },
  {
    "text": "um theyve wrote this paper they they've studied teaching programming very deeply",
    "start": "874839",
    "end": "880399"
  },
  {
    "text": "and they've wrote these papers the structure and interpretation of the computer science curriculum which every",
    "start": "880399",
    "end": "885680"
  },
  {
    "text": "kind of diir old functional programmer will recognize as a play on a textbook",
    "start": "885680",
    "end": "891800"
  },
  {
    "text": "called the structure and interpretation of um computer programs um they they",
    "start": "891800",
    "end": "898560"
  },
  {
    "text": "identif IFI this as one of the primary problems and that really programming",
    "start": "898560",
    "end": "904440"
  },
  {
    "text": "courses have to focus on Concepts and the syntax the specifics of the language",
    "start": "904440",
    "end": "909560"
  },
  {
    "text": "have to be secondary very important so that's a common problem you",
    "start": "909560",
    "end": "914639"
  },
  {
    "text": "see that uh all the time second problem is innovators they've they did The",
    "start": "914639",
    "end": "921959"
  },
  {
    "text": "Innovation right they went a long path to finally to come to a solution and the",
    "start": "921959",
    "end": "928120"
  },
  {
    "text": "immediate thing for them to explain that solution to somebody else is to explain the path but the path is not important",
    "start": "928120",
    "end": "935600"
  },
  {
    "text": "the goal is is what the student is interested about so one of the very popular things in in the H Community is",
    "start": "935600",
    "end": "943519"
  },
  {
    "text": "like you know there's this mathematical uh domain called category Theory who",
    "start": "943519",
    "end": "949199"
  },
  {
    "text": "knows about category Theory all right and who understand",
    "start": "949199",
    "end": "955240"
  },
  {
    "text": "it okay that that's good at least we've got one oh somebody else raised their hand sorry okay so there was a really oh",
    "start": "955240",
    "end": "963480"
  },
  {
    "text": "there he's still alive sorry there's a very smart um mathematician as theoretical computer science by the name",
    "start": "963480",
    "end": "969639"
  },
  {
    "text": "of Eugenio Moi um and he he deeply understands category Theory and he used",
    "start": "969639",
    "end": "978000"
  },
  {
    "text": "that mathematical very abstract Theory to um invent a new way of doing uh",
    "start": "978000",
    "end": "984800"
  },
  {
    "text": "formal semantics for programming languages awesome work another brilliant",
    "start": "984800",
    "end": "990040"
  },
  {
    "text": "scientist took that work and so well we can't trust model programming language",
    "start": "990040",
    "end": "995560"
  },
  {
    "text": "we can actually use that to structure functional programs in an awesome way",
    "start": "995560",
    "end": "1001360"
  },
  {
    "text": "right it's really nice so that's the",
    "start": "1001360",
    "end": "1006440"
  },
  {
    "text": "history and then when when people want to explain how to do these type of",
    "start": "1006440",
    "end": "1013120"
  },
  {
    "text": "functional programming they go like you know there are these things called monets and they're from category Theory",
    "start": "1013120",
    "end": "1018560"
  },
  {
    "text": "and everybody runs away and they they go like but that's how they were invented",
    "start": "1018560",
    "end": "1023839"
  },
  {
    "text": "but nobody cares about how it was invented they just want to know why should I even know about",
    "start": "1023839",
    "end": "1029199"
  },
  {
    "text": "it right so that's why we have this semi joke in the H community that the monoid",
    "start": "1029199",
    "end": "1035120"
  },
  {
    "text": "is just a monoid in the category of endo funas do you need to know anything",
    "start": "1035120",
    "end": "1040798"
  },
  {
    "text": "else yes because we always we have to explain things from the Viewpoint of the",
    "start": "1041120",
    "end": "1046798"
  },
  {
    "text": "student not from the Viewpoint of the innovator that person has already understood it",
    "start": "1046799",
    "end": "1052280"
  },
  {
    "text": "that's not a useful explanation okay two things we shouldn't do don't use the syntactic construct of",
    "start": "1052280",
    "end": "1059120"
  },
  {
    "text": "your programming languages to structure your curriculum and don't do this with anything not just category Theory all",
    "start": "1059120",
    "end": "1066480"
  },
  {
    "text": "right that's so much for the innovators the early adopters the Early adopters",
    "start": "1066480",
    "end": "1072240"
  },
  {
    "text": "they deal with this stuff no problem because they're early adopters they want the challenge and they want to figure it",
    "start": "1072240",
    "end": "1077520"
  },
  {
    "text": "out so they can tell you to somebody else and everybody else goes like you understand that wow right that's the",
    "start": "1077520",
    "end": "1083960"
  },
  {
    "text": "payoff for them and when they then are being tasked and",
    "start": "1083960",
    "end": "1091000"
  },
  {
    "text": "some people go like okay please teach me I mean how did you at get to this",
    "start": "1091000",
    "end": "1096960"
  },
  {
    "text": "awesome knowledge then they want to teach it the same way they learn it and they go like yeah you know about",
    "start": "1096960",
    "end": "1102480"
  },
  {
    "text": "category Theory he's a book and everybody goes like so they they",
    "start": "1102480",
    "end": "1109280"
  },
  {
    "text": "teach from that abstract domain background programming language theory",
    "start": "1109280",
    "end": "1115320"
  },
  {
    "text": "that doesn't work like everybody else everybody who's not a programming language researcher or enest of",
    "start": "1115320",
    "end": "1122720"
  },
  {
    "text": "functional programming um particularly interested person they want to go start",
    "start": "1122720",
    "end": "1129640"
  },
  {
    "text": "from examples why should I do this in the first place right so what we need to",
    "start": "1129640",
    "end": "1135240"
  },
  {
    "text": "do the right way to teach is to start with the why not some abstract stuff",
    "start": "1135240",
    "end": "1141720"
  },
  {
    "text": "which may be glorious but it's not appropriate at that point in time then you have to have a bunch of examples and",
    "start": "1141720",
    "end": "1148720"
  },
  {
    "text": "then from those examples you can generalize to what's the problem with",
    "start": "1148720",
    "end": "1154000"
  },
  {
    "text": "all these examples and then from that you can come to examp solution and then",
    "start": "1154000",
    "end": "1160360"
  },
  {
    "text": "you do the same thing a few more times and then suddenly you can come to the abstract concept because then it makes",
    "start": "1160360",
    "end": "1165880"
  },
  {
    "text": "sense then the person the student knows why you are doing this in the first",
    "start": "1165880",
    "end": "1171000"
  },
  {
    "text": "place other than torture them with category Theory okay so that's why it's important",
    "start": "1171000",
    "end": "1177600"
  },
  {
    "text": "and I like to say this especially in the context of functional programming because people go like functional",
    "start": "1177600",
    "end": "1183240"
  },
  {
    "text": "program I wasn't good in math at school and so functional program isn't for me no that's not the point math comes",
    "start": "1183240",
    "end": "1190320"
  },
  {
    "text": "later math is great I like math but it's not where I start",
    "start": "1190320",
    "end": "1197200"
  },
  {
    "text": "teaching okay so in fact it's the other way",
    "start": "1197200",
    "end": "1203480"
  },
  {
    "text": "around if math is so useful to functional programming then functional",
    "start": "1203480",
    "end": "1209760"
  },
  {
    "text": "programming must be a good vehicle to teach math right I mean if it's not useful if",
    "start": "1209760",
    "end": "1218000"
  },
  {
    "text": "you can't motivate it from the functional program then can't be that",
    "start": "1218000",
    "end": "1223840"
  },
  {
    "text": "relevant and actually this is not just my strange idea who knows about this",
    "start": "1223840",
    "end": "1229000"
  },
  {
    "text": "bootstrap thing ah Eric um so they are the the",
    "start": "1229000",
    "end": "1235480"
  },
  {
    "text": "same people who wrote this paper I mentioned earlier so fell e at all or not the same people some of the same",
    "start": "1235480",
    "end": "1241360"
  },
  {
    "text": "people and people building on their work um uh which they the work they explained",
    "start": "1241360",
    "end": "1248919"
  },
  {
    "text": "in this paper um structure and interpretation of the computer science curriculum they developed this bootstrap",
    "start": "1248919",
    "end": "1254760"
  },
  {
    "text": "program exactly on this premise they said if functional programming is so close to",
    "start": "1254760",
    "end": "1262280"
  },
  {
    "text": "math and we've got all these kids in high school especially in lower social economic um air regions in the schools",
    "start": "1262280",
    "end": "1271360"
  },
  {
    "text": "they have very hard time teaching stem subjects you all know",
    "start": "1271360",
    "end": "1276559"
  },
  {
    "text": "that can't we solve that problem with programming if we get these kids into",
    "start": "1276559",
    "end": "1284480"
  },
  {
    "text": "programming and they see those structures and they understand that their structures relate to some more",
    "start": "1284480",
    "end": "1292440"
  },
  {
    "text": "abstract way of thinking maybe they understand that that more abstract way of thinking which you",
    "start": "1292440",
    "end": "1299559"
  },
  {
    "text": "usually call math uh is actually useful and not something to torture them with",
    "start": "1299559",
    "end": "1305480"
  },
  {
    "text": "with homework and Mindless questions all the same just different",
    "start": "1305480",
    "end": "1311960"
  },
  {
    "text": "numbers and it worked so this was hugely this is still hugely successful so what",
    "start": "1312120",
    "end": "1317840"
  },
  {
    "text": "they did they get got quite a few grants and so on and then they went into high school so from they they did this over",
    "start": "1317840",
    "end": "1324640"
  },
  {
    "text": "several years they sorted Smalls speaker bigger and bigger um and they went into",
    "start": "1324640",
    "end": "1329840"
  },
  {
    "text": "especially schools uh in as I said lower social economic regions um students who",
    "start": "1329840",
    "end": "1335559"
  },
  {
    "text": "really had problems with with stem subjects and then taught them um",
    "start": "1335559",
    "end": "1341039"
  },
  {
    "text": "programming and they did the usual thing you do with kids like program games but you want to program a game right you",
    "start": "1341039",
    "end": "1347760"
  },
  {
    "text": "want something to to fly like this oh what's this well gravity I mean do you",
    "start": "1347760",
    "end": "1352799"
  },
  {
    "text": "know how a ball behaves under Gravity well we have to talk about how that works right and that way they've got",
    "start": "1352799",
    "end": "1361679"
  },
  {
    "text": "those kids to to really be interested in algebra and the algebra scores not just their programming scores the algebra",
    "start": "1361679",
    "end": "1368320"
  },
  {
    "text": "scores made up that's that success in my book so I",
    "start": "1368320",
    "end": "1375080"
  },
  {
    "text": "just put that out there as a data P for this Works in",
    "start": "1375080",
    "end": "1381120"
  },
  {
    "text": "fact I I've been saying for quite a while when everything is said and done",
    "start": "1381120",
    "end": "1386279"
  },
  {
    "text": "right with functional programming then the biggest contribution of functional programming is going to be that it's",
    "start": "1386279",
    "end": "1392840"
  },
  {
    "text": "going to have brought programming Marth closer together but not by everybody becoming mathematician and then learning",
    "start": "1392840",
    "end": "1398480"
  },
  {
    "text": "to program no by all the programmers understanding the structur is much better because it's part of",
    "start": "1398480",
    "end": "1406480"
  },
  {
    "text": "their thinking in a natural way not top down bottom up okay but we'll see in 10",
    "start": "1406480",
    "end": "1414039"
  },
  {
    "text": "years we're going to talk about this again but there's one thing so talking about um category Theory",
    "start": "1414039",
    "end": "1422640"
  },
  {
    "text": "again another critique which you hear about functional programming which I want to reject is like the jargon people",
    "start": "1422640",
    "end": "1430799"
  },
  {
    "text": "go like you've got all these fancy words well every programming langage",
    "start": "1430799",
    "end": "1436640"
  },
  {
    "text": "every Community has the fancy words you you know what a protected abstract virtual based pure virtual private",
    "start": "1436640",
    "end": "1442520"
  },
  {
    "text": "Destructor is I have to read it off because I can't remember it do you I mean if you're C++ programmer you should",
    "start": "1442520",
    "end": "1448679"
  },
  {
    "text": "know but you don't probably I mean except for the guru",
    "start": "1448679",
    "end": "1454279"
  },
  {
    "text": "whatever so of course you learn something new then new words the",
    "start": "1454279",
    "end": "1460120"
  },
  {
    "text": "important thing from teacher side is to explain all the things properly but don't be scared of Jon and there's a big",
    "start": "1460120",
    "end": "1466520"
  },
  {
    "text": "advantage to learning the fancy new words because like look at all those",
    "start": "1466520",
    "end": "1471640"
  },
  {
    "text": "words do you know what they have in common well he knows he knows all the people laughing now they've been",
    "start": "1471640",
    "end": "1479200"
  },
  {
    "text": "proposed as alternatives to the word Monet which supposedly is so",
    "start": "1479200",
    "end": "1484600"
  },
  {
    "text": "scary um but it's bad to replace Monet by",
    "start": "1484600",
    "end": "1490840"
  },
  {
    "text": "Brito why why because we want people when they learn after they've learned",
    "start": "1490840",
    "end": "1499120"
  },
  {
    "text": "what this thing Monet is whatever it's called at the time we want them to be able to go back and Lead read existing",
    "start": "1499120",
    "end": "1506679"
  },
  {
    "text": "literature we want to the beginner to be able to become an expert and talk with",
    "start": "1506679",
    "end": "1511760"
  },
  {
    "text": "other experts that's pretty hard if you don't talk the same language so you have to learn the",
    "start": "1511760",
    "end": "1517279"
  },
  {
    "text": "language so you can talk with everybody else right access to existing literature",
    "start": "1517279",
    "end": "1524760"
  },
  {
    "text": "other people um is just much easier and at the end of the day what's hard is not",
    "start": "1524760",
    "end": "1531760"
  },
  {
    "text": "learning the word Mon it's pretty short I mean I'm sure my 9-year-old can spell it um it's the concept which is maybe",
    "start": "1531760",
    "end": "1541080"
  },
  {
    "text": "difficult okay so it's really the the I know the words",
    "start": "1541080",
    "end": "1547120"
  },
  {
    "text": "are sometimes scary but they're not the obstacle so that's something I reject to rename everything we can discuss this at",
    "start": "1547120",
    "end": "1554600"
  },
  {
    "text": "some point if you like I mean challenge Me by all means all right so now I've said mostly things which we shouldn't do",
    "start": "1554600",
    "end": "1563240"
  },
  {
    "text": "so how do we want to teach the early majority what what's the right way to do",
    "start": "1563240",
    "end": "1568520"
  },
  {
    "text": "this well there are few points I want to make",
    "start": "1568520",
    "end": "1573760"
  },
  {
    "text": "first of all we start with examples we already talked about this a bit then the other thing which is really important is",
    "start": "1573760",
    "end": "1579440"
  },
  {
    "text": "to give people patterns idioms of how to do things it's not good enough to explain a general mechanism and then",
    "start": "1579440",
    "end": "1585840"
  },
  {
    "text": "expect everybody to be able to use that right programs you have to give people more guidance we'll see examples about",
    "start": "1585840",
    "end": "1593000"
  },
  {
    "text": "that and then tight feedback loop something which function programs always been good at but we can do better and at",
    "start": "1593000",
    "end": "1601440"
  },
  {
    "text": "finally visualization can go a long way to make things clearer especially in functional programming languages once",
    "start": "1601440",
    "end": "1607760"
  },
  {
    "text": "you do computations withs side effects visualizations become so much more useful because they're much closer to",
    "start": "1607760",
    "end": "1613399"
  },
  {
    "text": "what actually happens so let's go through through those four okay",
    "start": "1613399",
    "end": "1619640"
  },
  {
    "text": "so recursion recursion is usually the first",
    "start": "1619640",
    "end": "1624720"
  },
  {
    "text": "problem when you teach functional programming recursion is the first stumbling block even for I mean for for people",
    "start": "1624720",
    "end": "1632799"
  },
  {
    "text": "who've never programmed anyway but even for experienced programmers because in most programming languages is something",
    "start": "1632799",
    "end": "1639559"
  },
  {
    "text": "you use sparingly but in functional programming",
    "start": "1639559",
    "end": "1644600"
  },
  {
    "text": "is basically everything you do with recursion that's not just if than else",
    "start": "1644600",
    "end": "1649720"
  },
  {
    "text": "right so that's kind of the first culture shock now there's a very simple",
    "start": "1649720",
    "end": "1655120"
  },
  {
    "text": "way to explain recursion not simple for the person who's to as to understand it it's basically incomprehensible I tell",
    "start": "1655120",
    "end": "1661840"
  },
  {
    "text": "you now but simple for the person explaining this is recursion in",
    "start": "1661840",
    "end": "1667799"
  },
  {
    "text": "hll this is all that's it completely there's nothing else to be said from",
    "start": "1667799",
    "end": "1673919"
  },
  {
    "text": "mathematical point of view that's it that definition encapsulates the meaning",
    "start": "1673919",
    "end": "1679679"
  },
  {
    "text": "the semantics of recursion in every single Pro programming language including C++ that's what eugeno MGI",
    "start": "1679679",
    "end": "1687399"
  },
  {
    "text": "showed us okay done no not even he like people before him it's toad it's it's Isn't it nice",
    "start": "1687399",
    "end": "1695600"
  },
  {
    "text": "elegant it's so small but what is totally confusing",
    "start": "1695600",
    "end": "1702880"
  },
  {
    "text": "makes no sense so that's wrong but do you know",
    "start": "1702880",
    "end": "1708279"
  },
  {
    "text": "how many people I've seen teaching functional programing going like recursion is this fix Point combinator",
    "start": "1708279",
    "end": "1713679"
  },
  {
    "text": "everybody goes like what are you even talking about goes home so okay that that didn't work let's",
    "start": "1713679",
    "end": "1722120"
  },
  {
    "text": "let's try let's try a different way um so first of all what did I say before",
    "start": "1722120",
    "end": "1729440"
  },
  {
    "text": "you start with a concept with the solution you have to introduce the",
    "start": "1729440",
    "end": "1734960"
  },
  {
    "text": "problem what are we solving here why would we even be interested in",
    "start": "1734960",
    "end": "1740760"
  },
  {
    "text": "recursion I mean we've got Loops why do you need recursion",
    "start": "1740760",
    "end": "1747159"
  },
  {
    "text": "so example well very simple example let's say we want to write a function",
    "start": "1747159",
    "end": "1753159"
  },
  {
    "text": "called net sum gets one argument N and is going to add up all the numbers from",
    "start": "1753159",
    "end": "1759159"
  },
  {
    "text": "n to zero okay so I mean we can write it out so NM from",
    "start": "1759159",
    "end": "1766760"
  },
  {
    "text": "zero like I mean you you can do the other infinitely many lines no problem I",
    "start": "1766760",
    "end": "1773240"
  },
  {
    "text": "I trust that's easy enough H this is H syntax by the way you see H synx very",
    "start": "1773240",
    "end": "1779760"
  },
  {
    "text": "simple um but you may notice there's I mean there's commonality so we can do",
    "start": "1779760",
    "end": "1786640"
  },
  {
    "text": "some reuse right we can reuse net sum four for five and three for four and so",
    "start": "1786640",
    "end": "1792720"
  },
  {
    "text": "on so then we get that so what we notice now is everything but the first line is",
    "start": "1792720",
    "end": "1799200"
  },
  {
    "text": "the same thing except for the number and I mean you all know programming so when you have uh a number",
    "start": "1799200",
    "end": "1807760"
  },
  {
    "text": "always changing everything being the same you use a variable right so we use",
    "start": "1807760",
    "end": "1813320"
  },
  {
    "text": "a variable and only two lines left so that's a recursive definition all",
    "start": "1813320",
    "end": "1820600"
  },
  {
    "text": "right now that's a very simple recursive definition basically looks like",
    "start": "1820600",
    "end": "1826519"
  },
  {
    "text": "something you could have seen in primary math or somewhere thereabouts so",
    "start": "1826519",
    "end": "1831880"
  },
  {
    "text": "actually so the youngest person I taught functional programming to was my oldest son which who was nine at the time I",
    "start": "1831880",
    "end": "1840200"
  },
  {
    "text": "thought that's a good good time because that's the time when in high in in school you you know how to read this and",
    "start": "1840200",
    "end": "1847279"
  },
  {
    "text": "that's basically all you need to know to learn functional programming so it's not hard um in fact so the people who wrote",
    "start": "1847279",
    "end": "1855960"
  },
  {
    "text": "this paper and do this boot curriculum in the paper read the paper um they",
    "start": "1855960",
    "end": "1862919"
  },
  {
    "text": "argue um or they explain why learning for somebody who can't program function",
    "start": "1862919",
    "end": "1868679"
  },
  {
    "text": "learning functional program is actually easier and I've noticed this over and over again first year students the",
    "start": "1868679",
    "end": "1875399"
  },
  {
    "text": "people who struggle with functional programming are everybody who's done some programming before the people who",
    "start": "1875399",
    "end": "1880919"
  },
  {
    "text": "have never programmed they go like why is this hard so another thing is what we want to",
    "start": "1880919",
    "end": "1889639"
  },
  {
    "text": "do we want to not only do we have examples to show how we arrive at at a",
    "start": "1889639",
    "end": "1896720"
  },
  {
    "text": "recursive definition I mean it kind of is a little bit of a recipe how to get there we also want to see how it works",
    "start": "1896720",
    "end": "1903480"
  },
  {
    "text": "and that's so nice in functional programming because there are equality signs so one thing is same as the other",
    "start": "1903480",
    "end": "1909039"
  },
  {
    "text": "so we can replace one by the other that's the point of equality right so you can replace that by this by this by",
    "start": "1909039",
    "end": "1916080"
  },
  {
    "text": "this I think you can imagine how this goes by now and then we get the final",
    "start": "1916080",
    "end": "1921320"
  },
  {
    "text": "result okay so that immediately gives you an idea of what's the execution",
    "start": "1921320",
    "end": "1926679"
  },
  {
    "text": "model here because we've just done the execution model it's not very hard I",
    "start": "1926679",
    "end": "1931840"
  },
  {
    "text": "mean my 9-year-old didn't have a trouble understanding it at least um but the point here is there's the point here is",
    "start": "1931840",
    "end": "1939799"
  },
  {
    "text": "there's no point introducing an abstract idea like recursion the only way to do",
    "start": "1939799",
    "end": "1945440"
  },
  {
    "text": "it is to go through examples like this and build intuition bottom up right",
    "start": "1945440",
    "end": "1953559"
  },
  {
    "text": "so so this recursion example was very",
    "start": "1953840",
    "end": "1958880"
  },
  {
    "text": "simple right but that's on purpose because I didn't want the example be challenging I wanted the example to be",
    "start": "1958880",
    "end": "1965440"
  },
  {
    "text": "trivial but the same exact same method we use for all kinds of things we",
    "start": "1965440",
    "end": "1970600"
  },
  {
    "text": "explain recursion like that we also explain higher order functions like that that's already a little bit tricky uh we",
    "start": "1970600",
    "end": "1977919"
  },
  {
    "text": "explain parametric polymorphism whatever that is and type classes and even",
    "start": "1977919",
    "end": "1985440"
  },
  {
    "text": "categorial structur so that's the monuts and funas and all the fancy things all",
    "start": "1985440",
    "end": "1991760"
  },
  {
    "text": "that can be done in the same style and you don't have to start with",
    "start": "1991760",
    "end": "1997639"
  },
  {
    "text": "well a monut is once you start with this sentence you're lost that's it",
    "start": "1997639",
    "end": "2003679"
  },
  {
    "text": "everybody's running away start with examples",
    "start": "2003679",
    "end": "2009120"
  },
  {
    "text": "okay so that was number one examples first second one is it's always one",
    "start": "2009120",
    "end": "2015639"
  },
  {
    "text": "thing to explain something like this like everybody understood this example but then I give you an exercise and you",
    "start": "2015639",
    "end": "2020840"
  },
  {
    "text": "have to do it yourself and you know this situation you've got this editor screen in front of you empty one blinking",
    "start": "2020840",
    "end": "2030480"
  },
  {
    "text": "cursor so many letters right so where do we start is always the question and",
    "start": "2030760",
    "end": "2037120"
  },
  {
    "text": "that's where p come in and that's something which also the people did the bootstrap program and that paper and",
    "start": "2037120",
    "end": "2043440"
  },
  {
    "text": "also book which I'll show you later um which they are very very strong on is",
    "start": "2043440",
    "end": "2049878"
  },
  {
    "text": "you have to give people structures of how they can and when I say patterns it",
    "start": "2049879",
    "end": "2055240"
  },
  {
    "text": "includes the kind of O design patterns but I mean it in in a much more",
    "start": "2055240",
    "end": "2061040"
  },
  {
    "text": "fundamental way it's really what are the idioms in which you approach problems so there are usually different problems",
    "start": "2061040",
    "end": "2067800"
  },
  {
    "text": "which all can be solved in a similar way and you have to tell students what are those categories and for each category a",
    "start": "2067800",
    "end": "2075118"
  },
  {
    "text": "how do you recognize which category your your your problem Falls in and then once",
    "start": "2075119",
    "end": "2080520"
  },
  {
    "text": "you've identified the category how do you solve the problem in that category that's way easier than just empty screen",
    "start": "2080520",
    "end": "2087000"
  },
  {
    "text": "no idea how to even start so one thing which work which is totally super",
    "start": "2087000",
    "end": "2093079"
  },
  {
    "text": "important in functional programming is um of course the following so we've got",
    "start": "2093079",
    "end": "2098520"
  },
  {
    "text": "a function here uh it takes a list it iterates over the list and then for",
    "start": "2098520",
    "end": "2103839"
  },
  {
    "text": "every element in the list it's going to multiply the element with itself um",
    "start": "2103839",
    "end": "2109119"
  },
  {
    "text": "notation pretty similar to what we had before so maybe kind of makes sense",
    "start": "2109119",
    "end": "2114320"
  },
  {
    "text": "right it's plausible now we have another program looks quite similar I mean the name of",
    "start": "2114320",
    "end": "2120960"
  },
  {
    "text": "the function is different forget the type signature then it's all pretty much the same",
    "start": "2120960",
    "end": "2127160"
  },
  {
    "text": "except for variable names except the function we call on every element well these are two different functions that's",
    "start": "2127160",
    "end": "2133560"
  },
  {
    "text": "the only thing which really different I mean two different names I regard to be",
    "start": "2133560",
    "end": "2138599"
  },
  {
    "text": "superficially different right we could rename it that's the real difference is the highlighted bit so we can say well",
    "start": "2138599",
    "end": "2146599"
  },
  {
    "text": "there's a general pattern of functions like that where only the orange bit",
    "start": "2146599",
    "end": "2152040"
  },
  {
    "text": "varies right if you're a higho programmer you go map right sure okay",
    "start": "2152040",
    "end": "2157319"
  },
  {
    "text": "forget get map because that doesn't tell anybody anything if you show them those two programs and you show them there are",
    "start": "2157319",
    "end": "2163800"
  },
  {
    "text": "lots of programs like that whenever you have this problem well that's the structure you want you only figure out the orange bit then instead of an empty",
    "start": "2163800",
    "end": "2171000"
  },
  {
    "text": "screen you have a screen full of letters except for the orange bit which you still have to figure out that's a better",
    "start": "2171000",
    "end": "2176960"
  },
  {
    "text": "situation feels much better right you don't start from nothing you start from",
    "start": "2176960",
    "end": "2182680"
  },
  {
    "text": "a skeleton and then you fill in bits way simpler way more approachable",
    "start": "2182680",
    "end": "2188640"
  },
  {
    "text": "so of course we have later on in your teaching you get to well actually we",
    "start": "2188640",
    "end": "2194960"
  },
  {
    "text": "have this high order functions blah blah blah blah blah we not there yet okay so you talk about the structures and then",
    "start": "2194960",
    "end": "2202560"
  },
  {
    "text": "you get there later you're not talking to early adopters remember okay",
    "start": "2202560",
    "end": "2211960"
  },
  {
    "text": "so spot those computation design patterns that's how you that that's how",
    "start": "2211960",
    "end": "2218400"
  },
  {
    "text": "you teach recipes to how to approach various types of problems okay it was number two so how",
    "start": "2218400",
    "end": "2226160"
  },
  {
    "text": "about the tight feedback loop so that's where we get into into tool territory so",
    "start": "2226160",
    "end": "2232520"
  },
  {
    "text": "this is one of part of a screencast from from this tutorial um learning hll so we",
    "start": "2232520",
    "end": "2239200"
  },
  {
    "text": "are writing this function netum but this time we don't do it on a few slides but",
    "start": "2239200",
    "end": "2244760"
  },
  {
    "text": "we do it in an interactive system which can actually to run your high school programs um and and we start with the",
    "start": "2244760",
    "end": "2251359"
  },
  {
    "text": "same thing we did before right we write it out uh only we only write out I think three cases uh no four okay and um then",
    "start": "2251359",
    "end": "2262480"
  },
  {
    "text": "in addition to writing out that program we also get the results of running that",
    "start": "2262480",
    "end": "2269640"
  },
  {
    "text": "program at the same time and we can evaluate it for 4 1 2 3 4 and 50 doesn't",
    "start": "2269640",
    "end": "2276200"
  },
  {
    "text": "quite work because we haven't given the rule okay so",
    "start": "2276200",
    "end": "2281839"
  },
  {
    "text": "then we get to the point where we do the what we spotted before right we can",
    "start": "2281839",
    "end": "2289240"
  },
  {
    "text": "reuse the equation in front of the current one to define the current one um",
    "start": "2289240",
    "end": "2296440"
  },
  {
    "text": "in in a recursive Manner and as we rewrite this you you see on the right",
    "start": "2296440",
    "end": "2301880"
  },
  {
    "text": "hand side the stuff runs all the time so you get you you immediately see the the",
    "start": "2301880",
    "end": "2307599"
  },
  {
    "text": "the results didn't change right we rewrote this program results doesn't change it must be same",
    "start": "2307599",
    "end": "2313240"
  },
  {
    "text": "program right same meaning and then at that that point we spot that all the equations are the same",
    "start": "2313240",
    "end": "2320680"
  },
  {
    "text": "except the first one so we can introduce the variable and then",
    "start": "2320680",
    "end": "2326400"
  },
  {
    "text": "um just have the recursive definition of NM and low and behold not only does",
    "start": "2326400",
    "end": "2332880"
  },
  {
    "text": "everything stay the same but the fif call with the argument 50 also valate",
    "start": "2332880",
    "end": "2338000"
  },
  {
    "text": "because now it's recursive and works for every number okay and that's that's for at the",
    "start": "2338000",
    "end": "2345079"
  },
  {
    "text": "being beginning of your teaching function programming that's how people can approach actually writing these",
    "start": "2345079",
    "end": "2350760"
  },
  {
    "text": "functions to write out examples just list them out and then find the commonalities common it up and that's",
    "start": "2350760",
    "end": "2357760"
  },
  {
    "text": "how you get your recursive definitions way easier than trying to get at it right from nothing and maybe probably",
    "start": "2357760",
    "end": "2365800"
  },
  {
    "text": "you think well I could have come up with this I'm sure you could because you're all experienced developers but believe",
    "start": "2365800",
    "end": "2371920"
  },
  {
    "text": "me when recursive function has to get more complicated you are all going to come to a point where you go",
    "start": "2371920",
    "end": "2378240"
  },
  {
    "text": "like and this is going to be much easier than trying to write it out okay all",
    "start": "2378240",
    "end": "2384119"
  },
  {
    "text": "right that's what I mean by tight feedback loop you write the stuff you immediately see what happens you can experiment you can play around you can",
    "start": "2384119",
    "end": "2390760"
  },
  {
    "text": "change things there's no wait time compile execute whatever all right and",
    "start": "2390760",
    "end": "2396280"
  },
  {
    "text": "visualizations can be very effective so again recursion is perfect for that so",
    "start": "2396280",
    "end": "2402240"
  },
  {
    "text": "who knows about fractal trees so the idea is you start with a sare square and",
    "start": "2402240",
    "end": "2407920"
  },
  {
    "text": "then you draw a circle on top and you take the P theorem this is why the trees are have",
    "start": "2407920",
    "end": "2416040"
  },
  {
    "text": "that name and um so you get a a hat on the tree and that's where you draw the",
    "start": "2416040",
    "end": "2421720"
  },
  {
    "text": "next box like that and then again and again and again and again looks pretty",
    "start": "2421720",
    "end": "2427319"
  },
  {
    "text": "pretty recursive to me but this is basically a visualization of binary",
    "start": "2427319",
    "end": "2432520"
  },
  {
    "text": "recursion okay so let's do this in code so this is pretty small for you because",
    "start": "2432520",
    "end": "2440319"
  },
  {
    "text": "the screen is so far away well this is just this is the recur is going to be the",
    "start": "2440319",
    "end": "2447680"
  },
  {
    "text": "recursive case so this is just a list with one element so what we get um at",
    "start": "2447680",
    "end": "2453880"
  },
  {
    "text": "the beginning is just the stump right so and then what we do we just add one",
    "start": "2453880",
    "end": "2461480"
  },
  {
    "text": "recursive call to that recursive function fractal tree but instead of",
    "start": "2461480",
    "end": "2468200"
  },
  {
    "text": "with n we call it with n minus one and we adjust uh the line the base line",
    "start": "2468200",
    "end": "2473599"
  },
  {
    "text": "depending on on the triangle on top and now if we in increase the recursion",
    "start": "2473599",
    "end": "2479520"
  },
  {
    "text": "count we get this list likee straight structure and now if we take that",
    "start": "2479520",
    "end": "2485400"
  },
  {
    "text": "recursive call and we another recursive call of the same kind only for the left",
    "start": "2485400",
    "end": "2492839"
  },
  {
    "text": "part of the of the base then we get a tree light structure which kind of",
    "start": "2492839",
    "end": "2499480"
  },
  {
    "text": "illustrates binary recursion and by increasing the recursion count uh the",
    "start": "2499480",
    "end": "2504800"
  },
  {
    "text": "tree grows so that's a very simple way to illustrate recursion and make really",
    "start": "2504800",
    "end": "2510880"
  },
  {
    "text": "clear what happens and you can do nice things I mean this is the same code only",
    "start": "2510880",
    "end": "2516359"
  },
  {
    "text": "with some parameter has changed to make a little bit more fancy so you can can do kind of interesting graphics with",
    "start": "2516359",
    "end": "2522839"
  },
  {
    "text": "that so again and that's recursion but it works for many other things as well",
    "start": "2522839",
    "end": "2528280"
  },
  {
    "text": "as I said once and in functional programming a lot of computations don't",
    "start": "2528280",
    "end": "2534160"
  },
  {
    "text": "have side effects it's the values the result values of functions which count and that makes it very amable to draw",
    "start": "2534160",
    "end": "2542040"
  },
  {
    "text": "these structures right like you could draw a list structure a tree structure",
    "start": "2542040",
    "end": "2547599"
  },
  {
    "text": "and um I think I mean in my experience this works well this builds a good intuition uh in the",
    "start": "2547599",
    "end": "2554480"
  },
  {
    "text": "students all right so that that's the the four things I",
    "start": "2554480",
    "end": "2560960"
  },
  {
    "text": "wanted to go through you the um uh start from examples teach the idioms the patterns",
    "start": "2560960",
    "end": "2568319"
  },
  {
    "text": "with which you start to write programs tight feedback loop and visualization as",
    "start": "2568319",
    "end": "2574640"
  },
  {
    "text": "helpers um so I want to on on one question which comes up a lot at",
    "start": "2574640",
    "end": "2581359"
  },
  {
    "text": "least among people who who teach or think about learning functional programming and",
    "start": "2581359",
    "end": "2587480"
  },
  {
    "text": "that's do you want a type system or not like this is you take a random group of",
    "start": "2587480",
    "end": "2592839"
  },
  {
    "text": "developers and say do you want a type system or not",
    "start": "2592839",
    "end": "2597119"
  },
  {
    "text": "fight works every time so what's a type system I mean to",
    "start": "2599359",
    "end": "2607200"
  },
  {
    "text": "answer that question other than fighting no problem we can fight if you like but",
    "start": "2607200",
    "end": "2612680"
  },
  {
    "text": "um if you want to answer it without fighting then maybe the first question you should ask is I mean what's the",
    "start": "2612680",
    "end": "2617960"
  },
  {
    "text": "point of a type system take",
    "start": "2617960",
    "end": "2625400"
  },
  {
    "text": "us no Eric is not going to answer anybody who's not a hardcore H",
    "start": "2625400",
    "end": "2633200"
  },
  {
    "text": "addict pun group things together group things together yeah yeah but why would",
    "start": "2635760",
    "end": "2641280"
  },
  {
    "text": "we do that illegal values pardon illegal values legal values yeah to makeal",
    "start": "2641280",
    "end": "2648920"
  },
  {
    "text": "programs unrepresentable yeah so that that's a very good way to phrase it make",
    "start": "2648920",
    "end": "2655319"
  },
  {
    "text": "uh illegal programs unrepresentable so usually people you're very sophisticated",
    "start": "2655319",
    "end": "2662319"
  },
  {
    "text": "crowd a lot of people they just tell you well the compiler tell me what I can't do I",
    "start": "2662319",
    "end": "2671000"
  },
  {
    "text": "get an error message it's wrong it's wrong but then other people come like do you want the compiler to tell you what",
    "start": "2671000",
    "end": "2677640"
  },
  {
    "text": "your program should look like I want freedom I only write",
    "start": "2677640",
    "end": "2682760"
  },
  {
    "text": "python okay Ruby these days whatever so there's this notion of a",
    "start": "2682760",
    "end": "2689599"
  },
  {
    "text": "type system is just something which is going to restrain you right it prevents you from doing things that's bad I mean",
    "start": "2689599",
    "end": "2697599"
  },
  {
    "text": "that's what your parents did you to you when you were little why would you want to go back to that have this compiler",
    "start": "2697599",
    "end": "2704640"
  },
  {
    "text": "boss you around but I think there's a fundamental wrong understanding of what the point of",
    "start": "2704640",
    "end": "2711040"
  },
  {
    "text": "a type system is type system is not there to police your code writing it's a",
    "start": "2711040",
    "end": "2716680"
  },
  {
    "text": "design tool you have to use it you it's it's a it helps you it's not there to",
    "start": "2716680",
    "end": "2723040"
  },
  {
    "text": "it's going it's it's like you use uh uh tools if you want to draw something if",
    "start": "2723040",
    "end": "2728240"
  },
  {
    "text": "you're an architect or so and you well these days you draw on a computer but before you draw on a computer you have",
    "start": "2728240",
    "end": "2733640"
  },
  {
    "text": "tools to help you draw straight line you didn't think this ruler I will not accept you because you only allow me to",
    "start": "2733640",
    "end": "2740280"
  },
  {
    "text": "draw straight lines right",
    "start": "2740280",
    "end": "2746760"
  },
  {
    "text": "so we have to and and this is not I mean this is totally separate topic how can",
    "start": "2746760",
    "end": "2753680"
  },
  {
    "text": "you use uh types to help you design program S I can give a separate talk",
    "start": "2753680",
    "end": "2759440"
  },
  {
    "text": "about this so I I can't go through that but that's that's what's important and",
    "start": "2759440",
    "end": "2764960"
  },
  {
    "text": "it's not only me who is saying that so there's this book which is by those guys",
    "start": "2764960",
    "end": "2771160"
  },
  {
    "text": "who've mentioned a few times so who wrote this paper actually this paper is about the approach taken in this book um",
    "start": "2771160",
    "end": "2778680"
  },
  {
    "text": "which then led to this bootstrap program and interestingly so the programming",
    "start": "2778680",
    "end": "2784240"
  },
  {
    "text": "language they use is a record which is a dialect of scheme which is a variant of lisp so it doesn't have a type system",
    "start": "2784240",
    "end": "2792440"
  },
  {
    "text": "and but if you read the book and and you see how they explain",
    "start": "2792440",
    "end": "2798599"
  },
  {
    "text": "how to design programs that's what the book is about the first step is you start with examples so we are on the",
    "start": "2798599",
    "end": "2803920"
  },
  {
    "text": "same page these people and I we we are on the same page you start with examples",
    "start": "2803920",
    "end": "2809480"
  },
  {
    "text": "and then they say you write down a type signature and because it's ret you write",
    "start": "2809480",
    "end": "2814960"
  },
  {
    "text": "it in comments it's still the Second Step you write down the type signature because after",
    "start": "2814960",
    "end": "2821000"
  },
  {
    "text": "you've got the examples you know what your data is the point they're making is you structure your code by the data data",
    "start": "2821000",
    "end": "2828040"
  },
  {
    "text": "comes first then code that's what every um person who is",
    "start": "2828040",
    "end": "2835040"
  },
  {
    "text": "in favor of type systems will tell you but they say that's from a design point of view and teaching programming point",
    "start": "2835040",
    "end": "2841680"
  },
  {
    "text": "of view that's what we found is the best approach and if you're compiler do",
    "start": "2841680",
    "end": "2846880"
  },
  {
    "text": "doesn't understand your types well at least you put them in comments so I thought that's quite interesting and in",
    "start": "2846880",
    "end": "2854559"
  },
  {
    "text": "hle you can write down the type signature or not because H has Type inference so if you don't write it down",
    "start": "2854559",
    "end": "2860640"
  },
  {
    "text": "and compiler figure it out itself but if you write it down what you get is the compiler tells you if you made a mistake",
    "start": "2860640",
    "end": "2867640"
  },
  {
    "text": "if the type you wrote is not the type you wanted to write or not the type your code has it tells you well maybe think",
    "start": "2867640",
    "end": "2874359"
  },
  {
    "text": "about it again that's a help right if you don't want that help well don't",
    "start": "2874359",
    "end": "2879760"
  },
  {
    "text": "write down the signature um but it's good practice that's what they're saying in this book I mean read the paper the",
    "start": "2879760",
    "end": "2886559"
  },
  {
    "text": "book reading the book is interesting but well it's very basic it really is for",
    "start": "2886559",
    "end": "2891720"
  },
  {
    "text": "beginners so it's the basic for you but the paper is good because for people like you and if you really want to know",
    "start": "2891720",
    "end": "2898520"
  },
  {
    "text": "how to use types to design program well I gave this talk at Yao connected um two",
    "start": "2898520",
    "end": "2904319"
  },
  {
    "text": "years back and it's online and that a video and you it's not about H it's",
    "start": "2904319",
    "end": "2910160"
  },
  {
    "text": "about Swift and it'll tell you how you use types to design programs so there's",
    "start": "2910160",
    "end": "2916680"
  },
  {
    "text": "that uh that's the separate talk which I can't give now all right",
    "start": "2916680",
    "end": "2922520"
  },
  {
    "text": "so at that point then people nobody raised this objection but you're very",
    "start": "2922520",
    "end": "2928359"
  },
  {
    "text": "friendly you don't want to challenge me that thanks um so people go like but",
    "start": "2928359",
    "end": "2934720"
  },
  {
    "text": "when I prototype when I experiment I mean the types get in my weight because I write my program then I want to",
    "start": "2934720",
    "end": "2940400"
  },
  {
    "text": "refactor so the types are not right I can't run anything in the medium term and so on and then I say which planet do",
    "start": "2940400",
    "end": "2948160"
  },
  {
    "text": "you live on because this is something which is a property of the",
    "start": "2948160",
    "end": "2954440"
  },
  {
    "text": "implementation it's nothing to do with the language or whether language is strongly typed or not so let me prove",
    "start": "2954440",
    "end": "2960200"
  },
  {
    "text": "that to you so we've got another small example here we've got twoo small sorry um the data type",
    "start": "2960200",
    "end": "2968240"
  },
  {
    "text": "definition of a tree expression tree having multiplication addition and integers and that's a small evaluation",
    "start": "2968240",
    "end": "2974760"
  },
  {
    "text": "function now here in this example it only returns always an in because we only have addition multiplication and",
    "start": "2974760",
    "end": "2980920"
  },
  {
    "text": "integers now we add another operation equality and then we got another",
    "start": "2980920",
    "end": "2985960"
  },
  {
    "text": "possible result type namely buol all our types are going to be wrong",
    "start": "2985960",
    "end": "2991319"
  },
  {
    "text": "yeah so we add equality into the picture all right and then we have to think about what what's the result of eval now",
    "start": "2991319",
    "end": "2998200"
  },
  {
    "text": "well can't be in because must something must be something else and we Define what's called um a Some Type in hcal so",
    "start": "2998200",
    "end": "3005240"
  },
  {
    "text": "one thing or another it's a an alternative uh disjoint Union uh",
    "start": "3005240",
    "end": "3011160"
  },
  {
    "text": "variant okay and we we we change our function definition here and um from",
    "start": "3011160",
    "end": "3018440"
  },
  {
    "text": "expression to Value immediately we get a type error now the thing which which",
    "start": "3018440",
    "end": "3024319"
  },
  {
    "text": "which we were worried about happened now this is just to allow it to print",
    "start": "3024319",
    "end": "3029480"
  },
  {
    "text": "these types so there's this type error nothing works anymore all the examples",
    "start": "3029480",
    "end": "3035280"
  },
  {
    "text": "which previously worked errors okay well let's try just changing",
    "start": "3035280",
    "end": "3044599"
  },
  {
    "text": "one of the equations right for one case so if it's just an integer literal we just return the",
    "start": "3044599",
    "end": "3051000"
  },
  {
    "text": "integer oh look at this suddenly that example which only covers the case of",
    "start": "3051000",
    "end": "3057799"
  },
  {
    "text": "only one integer it actually runs and Returns the result there's still a type error I mean",
    "start": "3057799",
    "end": "3064440"
  },
  {
    "text": "we've got the type error doesn't mean we can't run our program so",
    "start": "3064440",
    "end": "3071599"
  },
  {
    "text": "oops now this is the type error and if you look at the exception here you see it's the same thing so what we've done",
    "start": "3071599",
    "end": "3078400"
  },
  {
    "text": "we've deferred the type error so what the type error means if you actually",
    "start": "3078400",
    "end": "3083640"
  },
  {
    "text": "insist on running this program and you take the code path which involves the",
    "start": "3083640",
    "end": "3088680"
  },
  {
    "text": "code where the type error is then you get an exception it's like in",
    "start": "3088680",
    "end": "3095119"
  },
  {
    "text": "Python only you still have static type system there's no this is not mutually",
    "start": "3095119",
    "end": "3101480"
  },
  {
    "text": "mutually exclusive right it's a matter of the implementation and then we change",
    "start": "3101480",
    "end": "3107400"
  },
  {
    "text": "another so the case of addition we change that and then maybe we are not",
    "start": "3107400",
    "end": "3113359"
  },
  {
    "text": "quite sure what um we do this case we we pattern match on the results and we're",
    "start": "3113359",
    "end": "3119839"
  },
  {
    "text": "not quite sure what we should put in as a result of this equation now like what's the right thing so we can just",
    "start": "3119839",
    "end": "3126040"
  },
  {
    "text": "put an underscore and then what the compiler will do it will tell us what the type is",
    "start": "3126040",
    "end": "3133760"
  },
  {
    "text": "which is expected at the place where we don't know this is how types write help us write programs because it tells us",
    "start": "3133760",
    "end": "3140599"
  },
  {
    "text": "this must be of type value well type value there are only two alternative",
    "start": "3140599",
    "end": "3146520"
  },
  {
    "text": "this must be one of the two can't be anything else well addition gives me an integer so now at this point there's",
    "start": "3146520",
    "end": "3152799"
  },
  {
    "text": "only one possibility left right so I put in that only possibility in well and",
    "start": "3152799",
    "end": "3160319"
  },
  {
    "text": "then maybe I don't know what's next or put in another underscore we call this a",
    "start": "3160319",
    "end": "3165839"
  },
  {
    "text": "hole put in a hole and then ask the compile the type error tells me well",
    "start": "3165839",
    "end": "3173440"
  },
  {
    "text": "this is a must be an integer in the result and that two variables which are of type integer so I got to use those",
    "start": "3173440",
    "end": "3180200"
  },
  {
    "text": "because how will I get an integer otherwise right and I want to implement addition I know that so I have two",
    "start": "3180200",
    "end": "3186520"
  },
  {
    "text": "integers I just add them let's see what happens okay so we've got that as a",
    "start": "3186520",
    "end": "3192760"
  },
  {
    "text": "result we only got these two variables which are of integer type we add them and lo and",
    "start": "3192760",
    "end": "3198760"
  },
  {
    "text": "behold now this second example which only uses addition",
    "start": "3198760",
    "end": "3204280"
  },
  {
    "text": "runs the third example doesn't run yet because still has a type error uh uh",
    "start": "3204280",
    "end": "3209960"
  },
  {
    "text": "because it involves multiplication right so we change that around to and",
    "start": "3209960",
    "end": "3215079"
  },
  {
    "text": "everything's fine so having type errors and having the ability to experiment",
    "start": "3215079",
    "end": "3220799"
  },
  {
    "text": "these are not mutually exclusive things it's just some implementations aren't sophisticated",
    "start": "3220799",
    "end": "3226839"
  },
  {
    "text": "enough to allow you to do both at the same time this an implementation problem it's not a fundamental conceptual",
    "start": "3226839",
    "end": "3232359"
  },
  {
    "text": "problem okay right and that brings me to tools and",
    "start": "3232359",
    "end": "3239319"
  },
  {
    "text": "now now now I'm going to really aggravate",
    "start": "3239319",
    "end": "3244280"
  },
  {
    "text": "everybody because I think like we talked about Dru programming object or",
    "start": "3244599",
    "end": "3249920"
  },
  {
    "text": "programming now we at functional programming so we have made a lot of new Pro new lot of progress in programming",
    "start": "3249920",
    "end": "3256160"
  },
  {
    "text": "languages but people still use all the editors they've been using well I added atom so there's a new one in there right",
    "start": "3256160",
    "end": "3262960"
  },
  {
    "text": "we still use the old tools our tool chain is still the same like there are two options either it was perfect right",
    "start": "3262960",
    "end": "3270200"
  },
  {
    "text": "from the start VI was already the end of all there is or we've overlooked",
    "start": "3270200",
    "end": "3278079"
  },
  {
    "text": "something so just as Food For Thought go to this",
    "start": "3278200",
    "end": "3284680"
  },
  {
    "text": "website who knows this website it's from a um a person called",
    "start": "3284680",
    "end": "3290240"
  },
  {
    "text": "uh whose name is Brett Victor he is a very big thinker and just uh look",
    "start": "3290240",
    "end": "3297640"
  },
  {
    "text": "through this he's been thinking a lot about what what should programming environments look like how how can we",
    "start": "3297640",
    "end": "3304280"
  },
  {
    "text": "improve them is what we got really the best we can do and um here great ideas",
    "start": "3304280",
    "end": "3310079"
  },
  {
    "text": "some of these things quite clear how you can scale it to large things I think we can quite easily use it for teaching but",
    "start": "3310079",
    "end": "3317520"
  },
  {
    "text": "how to scale it up some of that not quite clear and that's why we got researchers figuring stuff out",
    "start": "3317520",
    "end": "3324079"
  },
  {
    "text": "innovators right the innovators that's the next thing the innovators can do right and um there for example there's",
    "start": "3324079",
    "end": "3333160"
  },
  {
    "text": "this group um at y combinator research um who who are experimenting with some",
    "start": "3333160",
    "end": "3339200"
  },
  {
    "text": "of the those ideas so they have this kind of which kind of teaching environment which they propose for kind",
    "start": "3339200",
    "end": "3345559"
  },
  {
    "text": "of somewhat weird language where um where you get a lot more feedback lot",
    "start": "3345559",
    "end": "3350920"
  },
  {
    "text": "more information while you write your programs than you're usually used to right and the programming environment",
    "start": "3350920",
    "end": "3358000"
  },
  {
    "text": "I've been using um which obviously is for hll it kind of also tries to very",
    "start": "3358000",
    "end": "3364440"
  },
  {
    "text": "slightly push in this direction by having um these playgrounds where",
    "start": "3364440",
    "end": "3369839"
  },
  {
    "text": "everything you type is evaluated as you type it you change things around you get",
    "start": "3369839",
    "end": "3374960"
  },
  {
    "text": "feedback not only on type errors but um or or uh completions like the US things",
    "start": "3374960",
    "end": "3381079"
  },
  {
    "text": "your IDE or your even your emex after you've spent three days configuring it",
    "start": "3381079",
    "end": "3386920"
  },
  {
    "text": "um gives you um you you also get things being run and especially for people",
    "start": "3386920",
    "end": "3393760"
  },
  {
    "text": "learning this very useful but once you get used it actually even as an experienced programmer it's also easier",
    "start": "3393760",
    "end": "3401079"
  },
  {
    "text": "right so this works quite well we've used so this thing is on the App Store",
    "start": "3401079",
    "end": "3406599"
  },
  {
    "text": "people like it we've used it for so we being um Gabby and myself we've used it",
    "start": "3406599",
    "end": "3412920"
  },
  {
    "text": "for a few years uh in class at unw um it's it's just like you don't want to",
    "start": "3412920",
    "end": "3420839"
  },
  {
    "text": "go back because it's just clearer what you're explaining if you don't have to",
    "start": "3420839",
    "end": "3426119"
  },
  {
    "text": "switch between your editor or buffers in emac and then type something in GCI now",
    "start": "3426119",
    "end": "3431680"
  },
  {
    "text": "functional programming language since Lis they had this idea have this idea of the rapple of The Interpreter Loop and",
    "start": "3431680",
    "end": "3438839"
  },
  {
    "text": "this is the first step it's much better than just a compiler and a a out and and",
    "start": "3438839",
    "end": "3445319"
  },
  {
    "text": "run that right right rapple way better but playgrounds even way better than a",
    "start": "3445319",
    "end": "3450760"
  },
  {
    "text": "rapple right and I mean bigger people",
    "start": "3450760",
    "end": "3456160"
  },
  {
    "text": "have realized this so Apple has in Swift for Swift X code the Apple IDE it has",
    "start": "3456160",
    "end": "3463240"
  },
  {
    "text": "support for for this s same kind of playgrounds and they even have this app",
    "start": "3463240",
    "end": "3468839"
  },
  {
    "text": "um on on iPad which is called Swift playgrounds and it's specifically for teaching and um they are using that",
    "start": "3468839",
    "end": "3476640"
  },
  {
    "text": "they're teaching so apple is teaching a lot of teachers who are now task like",
    "start": "3476640",
    "end": "3481760"
  },
  {
    "text": "everybody says kids should code learn to code at school blah blah blah blah but how same problem we talked about this",
    "start": "3481760",
    "end": "3489000"
  },
  {
    "text": "earlier today and um and apple is giving courses on how to do this in well you",
    "start": "3489000",
    "end": "3494680"
  },
  {
    "text": "guess it Swift and using stuff like this iPad um app and really makes things a",
    "start": "3494680",
    "end": "3500359"
  },
  {
    "text": "lot easier so you already noticed I mentioned earlier I use my children as guinea pigs",
    "start": "3500359",
    "end": "3507520"
  },
  {
    "text": "um so so last year after we did some H previously so now he's bit older he's 14",
    "start": "3507520",
    "end": "3515280"
  },
  {
    "text": "now and um last not this summer the previous one uh when when that app was",
    "start": "3515280",
    "end": "3521319"
  },
  {
    "text": "out new I I told him okay this summer what we are going to do in the summer break we're going to go through all the",
    "start": "3521319",
    "end": "3527520"
  },
  {
    "text": "tror in uh Swift playgrounds and he went through everything um and and was I mean",
    "start": "3527520",
    "end": "3536960"
  },
  {
    "text": "there there are some criticisms I have but there the basic premise I mean they put in a lot of work very clever design",
    "start": "3536960",
    "end": "3544760"
  },
  {
    "text": "and and so this year in the summer break we wrote an entire iPhone app together so this stuff works right he he's",
    "start": "3544760",
    "end": "3551920"
  },
  {
    "text": "understood enough Swift programming that we could do some something real together",
    "start": "3551920",
    "end": "3556960"
  },
  {
    "text": "um after that so I all I'm saying like I'm not the only crazy person saying",
    "start": "3556960",
    "end": "3564440"
  },
  {
    "text": "maybe we can do better than we I'm sorry if you're Ubi user I do use VI sometimes",
    "start": "3564440",
    "end": "3570559"
  },
  {
    "text": "okay it's good but it's not the only thing all right",
    "start": "3570559",
    "end": "3576319"
  },
  {
    "text": "so so the main point when you teach actually everything",
    "start": "3576319",
    "end": "3581839"
  },
  {
    "text": "but functional programming specifically functional programming start from examples don't it's so tempting because",
    "start": "3581839",
    "end": "3588319"
  },
  {
    "text": "the the the beauty about functional programming is the abstraction mechanisms are",
    "start": "3588319",
    "end": "3594000"
  },
  {
    "text": "glorious and so once you experienced once you're you know that stuff it's so",
    "start": "3594000",
    "end": "3599839"
  },
  {
    "text": "easy to start with that and that's really the downfall of so much functional programming teaching and if",
    "start": "3599839",
    "end": "3606680"
  },
  {
    "text": "you want to get broader acceptance is not going to work start with examples",
    "start": "3606680",
    "end": "3611760"
  },
  {
    "text": "give people idiom idioms by which they can start to construct their own",
    "start": "3611760",
    "end": "3616960"
  },
  {
    "text": "programs from building blocks rather than starting from nothing and then we",
    "start": "3616960",
    "end": "3622760"
  },
  {
    "text": "should think about better tools now better tools is nothing which you need",
    "start": "3622760",
    "end": "3628280"
  },
  {
    "text": "for function programming I mean you can use VI and emac and everything and enough people have learned functional",
    "start": "3628280",
    "end": "3634240"
  },
  {
    "text": "programming like this perfectly possible but because of the lack of side effects",
    "start": "3634240",
    "end": "3640760"
  },
  {
    "text": "in functional programming a lot of this tool support I think can go even much",
    "start": "3640760",
    "end": "3646079"
  },
  {
    "text": "further right a lot of things where you need a source code debugger which complicated State and introspections and",
    "start": "3646079",
    "end": "3654599"
  },
  {
    "text": "everything is much simpler in functional programming all the things about testing with mocking and all this stuff is",
    "start": "3654599",
    "end": "3661400"
  },
  {
    "text": "basically doesn't even exist right so functional programming in a sense is way",
    "start": "3661400",
    "end": "3666839"
  },
  {
    "text": "way simpler right so and if you're interested you",
    "start": "3666839",
    "end": "3673319"
  },
  {
    "text": "are somebody you know to learn H well go through the tutorial it's online you can just do it with uh VI if you like thank",
    "start": "3673319",
    "end": "3681839"
  },
  {
    "text": "you very much [Applause]",
    "start": "3681839",
    "end": "3687640"
  },
  {
    "text": "God",
    "start": "3687640",
    "end": "3689960"
  }
]