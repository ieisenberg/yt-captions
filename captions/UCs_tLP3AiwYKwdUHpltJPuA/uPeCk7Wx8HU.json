[
  {
    "text": "[Music]",
    "start": "970",
    "end": "7838"
  },
  {
    "text": "hello everyone",
    "start": "14559",
    "end": "15519"
  },
  {
    "text": "my name is dean wampler and this is a",
    "start": "15519",
    "end": "17199"
  },
  {
    "text": "talk about ray a system for scaling",
    "start": "17199",
    "end": "19279"
  },
  {
    "text": "applications from a laptop to a cluster",
    "start": "19279",
    "end": "22240"
  },
  {
    "text": "i work for any scale which is a company",
    "start": "22240",
    "end": "24080"
  },
  {
    "text": "that was spun out of the university of",
    "start": "24080",
    "end": "25519"
  },
  {
    "text": "california in berkeley that where ray",
    "start": "25519",
    "end": "27439"
  },
  {
    "text": "was developed",
    "start": "27439",
    "end": "28800"
  },
  {
    "text": "you can contact me with these links on",
    "start": "28800",
    "end": "30640"
  },
  {
    "text": "the left and find out about rey or any",
    "start": "30640",
    "end": "32800"
  },
  {
    "text": "scale also at the",
    "start": "32800",
    "end": "34000"
  },
  {
    "text": "second or the last two links i'd like to",
    "start": "34000",
    "end": "36559"
  },
  {
    "text": "invite you to check out our online",
    "start": "36559",
    "end": "38000"
  },
  {
    "text": "events for the summer at anyscale.com",
    "start": "38000",
    "end": "40719"
  },
  {
    "text": "events i'll talk about ray first by",
    "start": "40719",
    "end": "44879"
  },
  {
    "text": "doing a demo to show you how it works",
    "start": "44879",
    "end": "46640"
  },
  {
    "text": "and how it speeds up work by",
    "start": "46640",
    "end": "48079"
  },
  {
    "text": "parallelizing your apps",
    "start": "48079",
    "end": "50320"
  },
  {
    "text": "talk briefly about why it's needed talk",
    "start": "50320",
    "end": "52399"
  },
  {
    "text": "about one of the popular",
    "start": "52399",
    "end": "54079"
  },
  {
    "text": "libraries for ml that's been written in",
    "start": "54079",
    "end": "56239"
  },
  {
    "text": "ray of",
    "start": "56239",
    "end": "57440"
  },
  {
    "text": "several that are available talk about",
    "start": "57440",
    "end": "59520"
  },
  {
    "text": "ray briefly from microservices",
    "start": "59520",
    "end": "61359"
  },
  {
    "text": "and then a little bit about how to adopt",
    "start": "61359",
    "end": "63680"
  },
  {
    "text": "ray",
    "start": "63680",
    "end": "64878"
  },
  {
    "text": "okay so let's look at this demo it's",
    "start": "64879",
    "end": "66320"
  },
  {
    "text": "taken from some tutorial material i'm",
    "start": "66320",
    "end": "68320"
  },
  {
    "text": "developing and i encourage you to check",
    "start": "68320",
    "end": "69920"
  },
  {
    "text": "it out",
    "start": "69920",
    "end": "70840"
  },
  {
    "text": "afterwards all right let's switch over",
    "start": "70840",
    "end": "74000"
  },
  {
    "text": "to",
    "start": "74000",
    "end": "75439"
  },
  {
    "text": "my jupiter notebook i'm going to do some",
    "start": "75439",
    "end": "78479"
  },
  {
    "text": "imports including some library routines",
    "start": "78479",
    "end": "80640"
  },
  {
    "text": "that i've written for plotting and",
    "start": "80640",
    "end": "82080"
  },
  {
    "text": "calculating",
    "start": "82080",
    "end": "82880"
  },
  {
    "text": "pi and you'll see why in a second so",
    "start": "82880",
    "end": "85200"
  },
  {
    "text": "imagine that you have this",
    "start": "85200",
    "end": "86880"
  },
  {
    "text": "two by two meter of square that you've",
    "start": "86880",
    "end": "89600"
  },
  {
    "text": "pasted your paper that you pasted to a",
    "start": "89600",
    "end": "91439"
  },
  {
    "text": "wall",
    "start": "91439",
    "end": "92000"
  },
  {
    "text": "and you draw a circle inside of it if",
    "start": "92000",
    "end": "94079"
  },
  {
    "text": "you throw enough darts at this thing",
    "start": "94079",
    "end": "96400"
  },
  {
    "text": "then it turns out that you can estimate",
    "start": "96400",
    "end": "98479"
  },
  {
    "text": "pi by",
    "start": "98479",
    "end": "99520"
  },
  {
    "text": "the ratio of the number of darts that",
    "start": "99520",
    "end": "101759"
  },
  {
    "text": "land inside the circle versus the total",
    "start": "101759",
    "end": "103759"
  },
  {
    "text": "number of darts that land",
    "start": "103759",
    "end": "105200"
  },
  {
    "text": "inside the square and roughly if you do",
    "start": "105200",
    "end": "107759"
  },
  {
    "text": "the math of",
    "start": "107759",
    "end": "108560"
  },
  {
    "text": "the ratio of the areas it turns out pi",
    "start": "108560",
    "end": "110960"
  },
  {
    "text": "is approximately 4",
    "start": "110960",
    "end": "112479"
  },
  {
    "text": "times the number inside over the total",
    "start": "112479",
    "end": "115119"
  },
  {
    "text": "number",
    "start": "115119",
    "end": "116000"
  },
  {
    "text": "so if we actually do this for uh you",
    "start": "116000",
    "end": "118640"
  },
  {
    "text": "know a couple of like 10",
    "start": "118640",
    "end": "119840"
  },
  {
    "text": "000 darts or a thousand darts you can",
    "start": "119840",
    "end": "121600"
  },
  {
    "text": "see the accuracy is not that great",
    "start": "121600",
    "end": "124399"
  },
  {
    "text": "and we can see what it looks like when",
    "start": "124399",
    "end": "125759"
  },
  {
    "text": "we plot it and here it is you know a",
    "start": "125759",
    "end": "128080"
  },
  {
    "text": "thousand points versus ten thousand",
    "start": "128080",
    "end": "130160"
  },
  {
    "text": "yeah you'd think that 10 000 the",
    "start": "130160",
    "end": "132959"
  },
  {
    "text": "coverage is pretty good but yet we just",
    "start": "132959",
    "end": "134720"
  },
  {
    "text": "saw that it's really not that accurate",
    "start": "134720",
    "end": "136319"
  },
  {
    "text": "so if we want",
    "start": "136319",
    "end": "137120"
  },
  {
    "text": "better accuracy we have to go to much",
    "start": "137120",
    "end": "139360"
  },
  {
    "text": "larger",
    "start": "139360",
    "end": "140319"
  },
  {
    "text": "sampling sizes so i have a couple of",
    "start": "140319",
    "end": "142560"
  },
  {
    "text": "functions here that i'm going to",
    "start": "142560",
    "end": "143920"
  },
  {
    "text": "do this over uh the first one so i was",
    "start": "143920",
    "end": "147040"
  },
  {
    "text": "using a",
    "start": "147040",
    "end": "147760"
  },
  {
    "text": "helper routine that i didn't show you",
    "start": "147760",
    "end": "149360"
  },
  {
    "text": "called monte carlo pi monte carlo",
    "start": "149360",
    "end": "151280"
  },
  {
    "text": "because this is a",
    "start": "151280",
    "end": "152400"
  },
  {
    "text": "random sampling approach called monte",
    "start": "152400",
    "end": "154640"
  },
  {
    "text": "carlo",
    "start": "154640",
    "end": "155599"
  },
  {
    "text": "and it also returns not only the value",
    "start": "155599",
    "end": "157920"
  },
  {
    "text": "for pi it calculates but the points that",
    "start": "157920",
    "end": "160160"
  },
  {
    "text": "i just plotted so just by",
    "start": "160160",
    "end": "162160"
  },
  {
    "text": "only returns the pi that i need and then",
    "start": "162160",
    "end": "164560"
  },
  {
    "text": "i'm going to call that over a range of",
    "start": "164560",
    "end": "166560"
  },
  {
    "text": "16 workers",
    "start": "166560",
    "end": "168000"
  },
  {
    "text": "uh to do some averaging and that's what",
    "start": "168000",
    "end": "170720"
  },
  {
    "text": "compute pi loop will do for me",
    "start": "170720",
    "end": "174239"
  },
  {
    "text": "and if i run this you know you can see",
    "start": "174239",
    "end": "175920"
  },
  {
    "text": "that for larger sample sizes it gets",
    "start": "175920",
    "end": "177920"
  },
  {
    "text": "increasingly",
    "start": "177920",
    "end": "178879"
  },
  {
    "text": "or takes increasingly longer time to",
    "start": "178879",
    "end": "181040"
  },
  {
    "text": "finish but at least the accuracy",
    "start": "181040",
    "end": "182879"
  },
  {
    "text": "generally improves over that time",
    "start": "182879",
    "end": "186159"
  },
  {
    "text": "and it'll be about 10 seconds for what",
    "start": "186159",
    "end": "188879"
  },
  {
    "text": "is this a million",
    "start": "188879",
    "end": "189840"
  },
  {
    "text": "points there it is",
    "start": "189840",
    "end": "193440"
  },
  {
    "text": "so it turns out it was actually running",
    "start": "193440",
    "end": "195120"
  },
  {
    "text": "on one core in my four",
    "start": "195120",
    "end": "196879"
  },
  {
    "text": "core laptop which isn't very great you",
    "start": "196879",
    "end": "199280"
  },
  {
    "text": "know if we really want to go up to",
    "start": "199280",
    "end": "200959"
  },
  {
    "text": "millions and millions or billions of",
    "start": "200959",
    "end": "202640"
  },
  {
    "text": "samples",
    "start": "202640",
    "end": "203200"
  },
  {
    "text": "then it would be painfully slow so i",
    "start": "203200",
    "end": "205599"
  },
  {
    "text": "would at least like to use all the",
    "start": "205599",
    "end": "206799"
  },
  {
    "text": "course on my laptop and if i have a",
    "start": "206799",
    "end": "208480"
  },
  {
    "text": "cluster available i'd like to",
    "start": "208480",
    "end": "209920"
  },
  {
    "text": "transparently scale out to that cluster",
    "start": "209920",
    "end": "212159"
  },
  {
    "text": "and that's what ray does for us so i'm",
    "start": "212159",
    "end": "214319"
  },
  {
    "text": "going to initialize ray and it'll have",
    "start": "214319",
    "end": "215920"
  },
  {
    "text": "16 workers",
    "start": "215920",
    "end": "217200"
  },
  {
    "text": "that the num cpus basically translates",
    "start": "217200",
    "end": "219599"
  },
  {
    "text": "into the number of workers really",
    "start": "219599",
    "end": "221280"
  },
  {
    "text": "and that's cpu cores and there's this",
    "start": "221280",
    "end": "223360"
  },
  {
    "text": "cool dashboard",
    "start": "223360",
    "end": "224400"
  },
  {
    "text": "that i'll open up i actually already had",
    "start": "224400",
    "end": "226239"
  },
  {
    "text": "it open",
    "start": "226239",
    "end": "227680"
  },
  {
    "text": "and that's going to show me some",
    "start": "227680",
    "end": "229120"
  },
  {
    "text": "interesting stuff when things are",
    "start": "229120",
    "end": "230640"
  },
  {
    "text": "actually running",
    "start": "230640",
    "end": "232959"
  },
  {
    "text": "so in order to reify something what you",
    "start": "232959",
    "end": "234879"
  },
  {
    "text": "do is you convert a function",
    "start": "234879",
    "end": "236400"
  },
  {
    "text": "a familiar idea from python into a",
    "start": "236400",
    "end": "238720"
  },
  {
    "text": "remote task",
    "start": "238720",
    "end": "240000"
  },
  {
    "text": "to do that you add this decorator at",
    "start": "240000",
    "end": "242159"
  },
  {
    "text": "ray.remote",
    "start": "242159",
    "end": "243760"
  },
  {
    "text": "which is what i'm doing here in this new",
    "start": "243760",
    "end": "245920"
  },
  {
    "text": "version of radius pi that calls the old",
    "start": "245920",
    "end": "247920"
  },
  {
    "text": "version",
    "start": "247920",
    "end": "248959"
  },
  {
    "text": "now i also call it with this remote",
    "start": "248959",
    "end": "251439"
  },
  {
    "text": "function invocation",
    "start": "251439",
    "end": "253760"
  },
  {
    "text": "instead of the usual way and what that's",
    "start": "253760",
    "end": "255439"
  },
  {
    "text": "going to return is some",
    "start": "255439",
    "end": "257040"
  },
  {
    "text": "future id",
    "start": "257040",
    "end": "259840"
  },
  {
    "text": "and then in order to get the value i",
    "start": "261040",
    "end": "262560"
  },
  {
    "text": "call ray.get which",
    "start": "262560",
    "end": "264160"
  },
  {
    "text": "blocks until they're ready and when the",
    "start": "264160",
    "end": "267040"
  },
  {
    "text": "task finished so now",
    "start": "267040",
    "end": "268000"
  },
  {
    "text": "if i run this turns out it'll be about",
    "start": "268000",
    "end": "270160"
  },
  {
    "text": "three to four times faster because i'll",
    "start": "270160",
    "end": "271919"
  },
  {
    "text": "now use all four cores on my machine",
    "start": "271919",
    "end": "274160"
  },
  {
    "text": "instead of just",
    "start": "274160",
    "end": "275040"
  },
  {
    "text": "one uh if i had a 16 core machine it",
    "start": "275040",
    "end": "278080"
  },
  {
    "text": "probably would have been 16 times faster",
    "start": "278080",
    "end": "280560"
  },
  {
    "text": "all right let's graph these results",
    "start": "280560",
    "end": "283840"
  },
  {
    "text": "and basically you can see that for small",
    "start": "284080",
    "end": "285919"
  },
  {
    "text": "numbers of samples",
    "start": "285919",
    "end": "287120"
  },
  {
    "text": "the overhead of ray actually doesn't",
    "start": "287120",
    "end": "288880"
  },
  {
    "text": "give us any benefits it's better just to",
    "start": "288880",
    "end": "291040"
  },
  {
    "text": "go",
    "start": "291040",
    "end": "291360"
  },
  {
    "text": "with the local one core version but very",
    "start": "291360",
    "end": "293360"
  },
  {
    "text": "quickly ray gives us",
    "start": "293360",
    "end": "294880"
  },
  {
    "text": "a better performance basically four",
    "start": "294880",
    "end": "296720"
  },
  {
    "text": "times better",
    "start": "296720",
    "end": "297919"
  },
  {
    "text": "uh for arbitrarily large n",
    "start": "297919",
    "end": "302080"
  },
  {
    "text": "all right and then if just uh for grants",
    "start": "302080",
    "end": "304080"
  },
  {
    "text": "if we actually plot how accurate we are",
    "start": "304080",
    "end": "306080"
  },
  {
    "text": "we can see that at low sample rates",
    "start": "306080",
    "end": "307840"
  },
  {
    "text": "we're not very accurate and the error",
    "start": "307840",
    "end": "309280"
  },
  {
    "text": "bars are pretty",
    "start": "309280",
    "end": "310000"
  },
  {
    "text": "big but it converges to pi and basically",
    "start": "310000",
    "end": "312880"
  },
  {
    "text": "the same thing is going to happen with",
    "start": "312880",
    "end": "314479"
  },
  {
    "text": "the rate calculation it was no different",
    "start": "314479",
    "end": "317280"
  },
  {
    "text": "it was just faster okay",
    "start": "317280",
    "end": "320800"
  },
  {
    "text": "one thing i didn't talk about is what",
    "start": "320800",
    "end": "322560"
  },
  {
    "text": "about distributed state",
    "start": "322560",
    "end": "324720"
  },
  {
    "text": "so to use a non-trivial example suppose",
    "start": "324720",
    "end": "326960"
  },
  {
    "text": "that i have a parameter server what is",
    "start": "326960",
    "end": "329360"
  },
  {
    "text": "this",
    "start": "329360",
    "end": "329759"
  },
  {
    "text": "well it turns out when you're working in",
    "start": "329759",
    "end": "331759"
  },
  {
    "text": "very very big models like neural",
    "start": "331759",
    "end": "333600"
  },
  {
    "text": "networks it's convenient to have",
    "start": "333600",
    "end": "335360"
  },
  {
    "text": "some server that can store for",
    "start": "335360",
    "end": "338160"
  },
  {
    "text": "durability reasons the parameters",
    "start": "338160",
    "end": "340639"
  },
  {
    "text": "serve them to various trainers that are",
    "start": "340639",
    "end": "342560"
  },
  {
    "text": "doing training of new models and also",
    "start": "342560",
    "end": "344479"
  },
  {
    "text": "just",
    "start": "344479",
    "end": "344880"
  },
  {
    "text": "model servers that are using the",
    "start": "344880",
    "end": "346800"
  },
  {
    "text": "existing models",
    "start": "346800",
    "end": "348080"
  },
  {
    "text": "so in this diagram when new data comes",
    "start": "348080",
    "end": "350479"
  },
  {
    "text": "in i'm going to store it so i can do",
    "start": "350479",
    "end": "352400"
  },
  {
    "text": "training later on and i'll do training",
    "start": "352400",
    "end": "354320"
  },
  {
    "text": "in parallel like partitioning my very",
    "start": "354320",
    "end": "356639"
  },
  {
    "text": "big model",
    "start": "356639",
    "end": "357520"
  },
  {
    "text": "and i'll have five trainers and i'll",
    "start": "357520",
    "end": "360080"
  },
  {
    "text": "have those trainers",
    "start": "360080",
    "end": "361199"
  },
  {
    "text": "update the the values in the parameter",
    "start": "361199",
    "end": "363919"
  },
  {
    "text": "server while at the same time i could",
    "start": "363919",
    "end": "365440"
  },
  {
    "text": "have a model server that's taking that",
    "start": "365440",
    "end": "367360"
  },
  {
    "text": "same new data",
    "start": "367360",
    "end": "368560"
  },
  {
    "text": "scoring it like looking for spam or",
    "start": "368560",
    "end": "371520"
  },
  {
    "text": "giving it recommendations whatever",
    "start": "371520",
    "end": "373680"
  },
  {
    "text": "and then sending that score data off to",
    "start": "373680",
    "end": "375520"
  },
  {
    "text": "another service",
    "start": "375520",
    "end": "377280"
  },
  {
    "text": "so that's the basic idea we'll imagine",
    "start": "377280",
    "end": "380400"
  },
  {
    "text": "that we have 10",
    "start": "380400",
    "end": "381199"
  },
  {
    "text": "000 parameters per trainer or per model",
    "start": "381199",
    "end": "384800"
  },
  {
    "text": "whatever the case may be we'll have five",
    "start": "384800",
    "end": "386639"
  },
  {
    "text": "trainers and we'll iterate 500 times to",
    "start": "386639",
    "end": "389039"
  },
  {
    "text": "try to converge to a better model",
    "start": "389039",
    "end": "391600"
  },
  {
    "text": "here's our parameter server it's",
    "start": "391600",
    "end": "393039"
  },
  {
    "text": "actually really simple it's just rashi",
    "start": "393039",
    "end": "395520"
  },
  {
    "text": "wrapping a hash map or as they call it",
    "start": "395520",
    "end": "397360"
  },
  {
    "text": "in python a dictionary",
    "start": "397360",
    "end": "399199"
  },
  {
    "text": "it'll have a name and then with that",
    "start": "399199",
    "end": "400800"
  },
  {
    "text": "name will be an associated set of",
    "start": "400800",
    "end": "402400"
  },
  {
    "text": "parameters so",
    "start": "402400",
    "end": "403360"
  },
  {
    "text": "very simple idea a trainer is a little",
    "start": "403360",
    "end": "406479"
  },
  {
    "text": "bit more complicated",
    "start": "406479",
    "end": "407680"
  },
  {
    "text": "normally if this were talking to a",
    "start": "407680",
    "end": "409759"
  },
  {
    "text": "neural network library like pytorch",
    "start": "409759",
    "end": "411599"
  },
  {
    "text": "let's say",
    "start": "411599",
    "end": "412160"
  },
  {
    "text": "it would do something fancy like",
    "start": "412160",
    "end": "413440"
  },
  {
    "text": "gradient descent here all we're going to",
    "start": "413440",
    "end": "415680"
  },
  {
    "text": "do is for each iteration",
    "start": "415680",
    "end": "417440"
  },
  {
    "text": "i'll just you know calculate a random",
    "start": "417440",
    "end": "420240"
  },
  {
    "text": "delta",
    "start": "420240",
    "end": "420880"
  },
  {
    "text": "for each parameter and then apply that",
    "start": "420880",
    "end": "422800"
  },
  {
    "text": "delta so it'll do busy work not really",
    "start": "422800",
    "end": "425039"
  },
  {
    "text": "anything very interesting but it'll come",
    "start": "425039",
    "end": "426639"
  },
  {
    "text": "up with random parameters at the end",
    "start": "426639",
    "end": "428800"
  },
  {
    "text": "for how many number of iterations i ask",
    "start": "428800",
    "end": "430880"
  },
  {
    "text": "it to do",
    "start": "430880",
    "end": "431840"
  },
  {
    "text": "when it's finished that calculation it",
    "start": "431840",
    "end": "433599"
  },
  {
    "text": "will call this helper function",
    "start": "433599",
    "end": "435039"
  },
  {
    "text": "send a server to send the new parameters",
    "start": "435039",
    "end": "438080"
  },
  {
    "text": "back to the server",
    "start": "438080",
    "end": "440960"
  },
  {
    "text": "okay let's create one of these guys and",
    "start": "443840",
    "end": "446639"
  },
  {
    "text": "then create our",
    "start": "446639",
    "end": "447759"
  },
  {
    "text": "initial set of parameters in our five",
    "start": "447759",
    "end": "449599"
  },
  {
    "text": "trainers notice the parameters are all",
    "start": "449599",
    "end": "451280"
  },
  {
    "text": "zero",
    "start": "451280",
    "end": "453680"
  },
  {
    "text": "this is the perspective from the server",
    "start": "453680",
    "end": "456000"
  },
  {
    "text": "parameter server now if we time this",
    "start": "456000",
    "end": "458400"
  },
  {
    "text": "uh you know again we're all going to do",
    "start": "458400",
    "end": "459759"
  },
  {
    "text": "all of this calculation all this looping",
    "start": "459759",
    "end": "461680"
  },
  {
    "text": "on one core because it's just regular",
    "start": "461680",
    "end": "463440"
  },
  {
    "text": "python",
    "start": "463440",
    "end": "464879"
  },
  {
    "text": "takes about six and a half seconds",
    "start": "464879",
    "end": "466639"
  },
  {
    "text": "notice the user time it was mostly user",
    "start": "466639",
    "end": "468960"
  },
  {
    "text": "time 6.3 seconds",
    "start": "468960",
    "end": "470560"
  },
  {
    "text": "that's going to be a lot smaller in a",
    "start": "470560",
    "end": "472000"
  },
  {
    "text": "minute",
    "start": "472000",
    "end": "473840"
  },
  {
    "text": "and here's what the parameter server has",
    "start": "473840",
    "end": "475840"
  },
  {
    "text": "for new values they're just random",
    "start": "475840",
    "end": "477440"
  },
  {
    "text": "numbers",
    "start": "477440",
    "end": "479840"
  },
  {
    "text": "okay what if we wanted to turn this into",
    "start": "480000",
    "end": "483680"
  },
  {
    "text": "something that's distributed over a",
    "start": "483680",
    "end": "485360"
  },
  {
    "text": "cluster",
    "start": "485360",
    "end": "487410"
  },
  {
    "text": "[Music]",
    "start": "487410",
    "end": "489360"
  },
  {
    "text": "the way we do that is with again a",
    "start": "489360",
    "end": "491759"
  },
  {
    "text": "familiar idea from python which is the",
    "start": "491759",
    "end": "493840"
  },
  {
    "text": "class",
    "start": "493840",
    "end": "495280"
  },
  {
    "text": "we just saw classes were used to hold",
    "start": "495280",
    "end": "497280"
  },
  {
    "text": "the state in a",
    "start": "497280",
    "end": "498720"
  },
  {
    "text": "intuitive way we're going to convert",
    "start": "498720",
    "end": "501520"
  },
  {
    "text": "these to actors now actors is an old",
    "start": "501520",
    "end": "504080"
  },
  {
    "text": "distributed computing paradigm and won't",
    "start": "504080",
    "end": "507039"
  },
  {
    "text": "describe it in detail",
    "start": "507039",
    "end": "508639"
  },
  {
    "text": "i welcome you to uh you know google the",
    "start": "508639",
    "end": "510639"
  },
  {
    "text": "word actor distributed computing or",
    "start": "510639",
    "end": "512320"
  },
  {
    "text": "something to find out a description",
    "start": "512320",
    "end": "514560"
  },
  {
    "text": "but basically we're going to make this a",
    "start": "514560",
    "end": "516159"
  },
  {
    "text": "remote object that can then",
    "start": "516159",
    "end": "519039"
  },
  {
    "text": "repeatedly accept requests for work and",
    "start": "519039",
    "end": "521599"
  },
  {
    "text": "do the work and then",
    "start": "521599",
    "end": "522560"
  },
  {
    "text": "you know save it in around a cluster",
    "start": "522560",
    "end": "525839"
  },
  {
    "text": "once again we use the same decorator to",
    "start": "525839",
    "end": "527760"
  },
  {
    "text": "declare a class to be an actor",
    "start": "527760",
    "end": "530959"
  },
  {
    "text": "and all we need to do is subclass our",
    "start": "530959",
    "end": "532720"
  },
  {
    "text": "parameter server there's nothing",
    "start": "532720",
    "end": "534000"
  },
  {
    "text": "we need to add so it'll just be you know",
    "start": "534000",
    "end": "536000"
  },
  {
    "text": "an empty uh",
    "start": "536000",
    "end": "537839"
  },
  {
    "text": "class body as it were and if we",
    "start": "537839",
    "end": "540720"
  },
  {
    "text": "instantiate one of these we see that",
    "start": "540720",
    "end": "542399"
  },
  {
    "text": "it's now this thing called an",
    "start": "542399",
    "end": "543839"
  },
  {
    "text": "actor that's wrapping the the object",
    "start": "543839",
    "end": "547360"
  },
  {
    "text": "now our trainer is a little bit",
    "start": "547360",
    "end": "548640"
  },
  {
    "text": "different uh first we need a constructor",
    "start": "548640",
    "end": "551040"
  },
  {
    "text": "to pass",
    "start": "551040",
    "end": "551600"
  },
  {
    "text": "arguments through to the super class but",
    "start": "551600",
    "end": "554320"
  },
  {
    "text": "remember that send to server function",
    "start": "554320",
    "end": "556560"
  },
  {
    "text": "now we're going to be invoking a another",
    "start": "556560",
    "end": "558800"
  },
  {
    "text": "actor so",
    "start": "558800",
    "end": "559680"
  },
  {
    "text": "notice how a method calls work in actors",
    "start": "559680",
    "end": "562640"
  },
  {
    "text": "it's actor",
    "start": "562640",
    "end": "563680"
  },
  {
    "text": "method and then dot remote similar to",
    "start": "563680",
    "end": "565839"
  },
  {
    "text": "tasks",
    "start": "565839",
    "end": "566720"
  },
  {
    "text": "so we have to do it a little differently",
    "start": "566720",
    "end": "569200"
  },
  {
    "text": "than we did before it was just a regular",
    "start": "569200",
    "end": "571120"
  },
  {
    "text": "method call",
    "start": "571120",
    "end": "572160"
  },
  {
    "text": "notice that we're just asynchronously",
    "start": "572160",
    "end": "574000"
  },
  {
    "text": "firing and forgetting these updates",
    "start": "574000",
    "end": "576160"
  },
  {
    "text": "we actually in a real implementation",
    "start": "576160",
    "end": "578000"
  },
  {
    "text": "might want to make sure that it worked",
    "start": "578000",
    "end": "580000"
  },
  {
    "text": "if we were going out over a cluster",
    "start": "580000",
    "end": "582000"
  },
  {
    "text": "but here we'll just fire and forget",
    "start": "582000",
    "end": "585440"
  },
  {
    "text": "now if we instantiate these we've got",
    "start": "585600",
    "end": "587279"
  },
  {
    "text": "five actors for trainers and if we run",
    "start": "587279",
    "end": "589440"
  },
  {
    "text": "this thing",
    "start": "589440",
    "end": "591519"
  },
  {
    "text": "it finishes in two seconds wall time but",
    "start": "591519",
    "end": "594080"
  },
  {
    "text": "look at the user time it's now down to",
    "start": "594080",
    "end": "595760"
  },
  {
    "text": "37 milliseconds versus like one or two",
    "start": "595760",
    "end": "598640"
  },
  {
    "text": "seconds before so dramatically better",
    "start": "598640",
    "end": "600880"
  },
  {
    "text": "because we were able to fully leverage",
    "start": "600880",
    "end": "602480"
  },
  {
    "text": "the cluster",
    "start": "602480",
    "end": "603440"
  },
  {
    "text": "asynchronously and then the results are",
    "start": "603440",
    "end": "606240"
  },
  {
    "text": "you know again what we would expect",
    "start": "606240",
    "end": "607600"
  },
  {
    "text": "randomly",
    "start": "607600",
    "end": "608480"
  },
  {
    "text": "okay let's go back to the slides",
    "start": "608480",
    "end": "611120"
  },
  {
    "text": "hopefully get a sense of what it's like",
    "start": "611120",
    "end": "612560"
  },
  {
    "text": "to work with ray now",
    "start": "612560",
    "end": "618079"
  },
  {
    "text": "why ray well two big trends are",
    "start": "618079",
    "end": "620160"
  },
  {
    "text": "happening one",
    "start": "620160",
    "end": "621120"
  },
  {
    "text": "is that we're going from uh you know",
    "start": "621120",
    "end": "623440"
  },
  {
    "text": "model sizes that are growing",
    "start": "623440",
    "end": "624959"
  },
  {
    "text": "enormously in size you know every 18",
    "start": "624959",
    "end": "627200"
  },
  {
    "text": "months vastly",
    "start": "627200",
    "end": "628560"
  },
  {
    "text": "much faster than the hardware is keeping",
    "start": "628560",
    "end": "631440"
  },
  {
    "text": "up so we really have to go distribute it",
    "start": "631440",
    "end": "633600"
  },
  {
    "text": "if we're going to keep up with this",
    "start": "633600",
    "end": "634800"
  },
  {
    "text": "growth",
    "start": "634800",
    "end": "636480"
  },
  {
    "text": "on the other hand python is is the",
    "start": "636480",
    "end": "638160"
  },
  {
    "text": "dominant language now",
    "start": "638160",
    "end": "639519"
  },
  {
    "text": "for these kind of workloads because of",
    "start": "639519",
    "end": "641519"
  },
  {
    "text": "its popularity in the data science world",
    "start": "641519",
    "end": "643839"
  },
  {
    "text": "so that means we need an easy effective",
    "start": "643839",
    "end": "646079"
  },
  {
    "text": "and robust way to horizontally scale",
    "start": "646079",
    "end": "648560"
  },
  {
    "text": "python applications",
    "start": "648560",
    "end": "651760"
  },
  {
    "text": "you know a typical machine learning",
    "start": "652000",
    "end": "654079"
  },
  {
    "text": "problem involves a whole bunch of",
    "start": "654079",
    "end": "655680"
  },
  {
    "text": "different",
    "start": "655680",
    "end": "656160"
  },
  {
    "text": "kinds of tasks you do i won't go into a",
    "start": "656160",
    "end": "658480"
  },
  {
    "text": "lot of details here for time's sake",
    "start": "658480",
    "end": "660560"
  },
  {
    "text": "but just say that all of these steps",
    "start": "660560",
    "end": "662240"
  },
  {
    "text": "really require a distribution to be",
    "start": "662240",
    "end": "664640"
  },
  {
    "text": "implemented effectively and the vision",
    "start": "664640",
    "end": "668079"
  },
  {
    "text": "of ray is that we could have a common",
    "start": "668079",
    "end": "669680"
  },
  {
    "text": "framework that's flexible enough to meet",
    "start": "669680",
    "end": "671519"
  },
  {
    "text": "the different compute models that each",
    "start": "671519",
    "end": "673279"
  },
  {
    "text": "of these different",
    "start": "673279",
    "end": "674480"
  },
  {
    "text": "things has and then leverage on top of",
    "start": "674480",
    "end": "677600"
  },
  {
    "text": "that",
    "start": "677600",
    "end": "678880"
  },
  {
    "text": "these libraries that are targeted at",
    "start": "678880",
    "end": "680720"
  },
  {
    "text": "specific aspects of this problem domain",
    "start": "680720",
    "end": "683680"
  },
  {
    "text": "and here's some of the libraries",
    "start": "683680",
    "end": "684959"
  },
  {
    "text": "available today for ray in fact if",
    "start": "684959",
    "end": "688480"
  },
  {
    "text": "you're using these libraries you may",
    "start": "688480",
    "end": "689680"
  },
  {
    "text": "never even drop down to the ray",
    "start": "689680",
    "end": "691519"
  },
  {
    "text": "api that we just looked at",
    "start": "691519",
    "end": "694880"
  },
  {
    "text": "um i only have time to talk about one of",
    "start": "694880",
    "end": "696640"
  },
  {
    "text": "these so i'll talk about",
    "start": "696640",
    "end": "699120"
  },
  {
    "text": "tune for hyper parameter tuning let me",
    "start": "699120",
    "end": "701040"
  },
  {
    "text": "explain what that is",
    "start": "701040",
    "end": "702560"
  },
  {
    "text": "so k means is this very simple algorithm",
    "start": "702560",
    "end": "706079"
  },
  {
    "text": "for",
    "start": "706079",
    "end": "706399"
  },
  {
    "text": "give me a data set and find the clusters",
    "start": "706399",
    "end": "708480"
  },
  {
    "text": "and the data",
    "start": "708480",
    "end": "709920"
  },
  {
    "text": "and the the k value which is you know",
    "start": "709920",
    "end": "712639"
  },
  {
    "text": "how many clusters i think i have is a",
    "start": "712639",
    "end": "715040"
  },
  {
    "text": "hyper parameter",
    "start": "715040",
    "end": "716399"
  },
  {
    "text": "and when i found the the actual clusters",
    "start": "716399",
    "end": "718720"
  },
  {
    "text": "those would be defined by parameters",
    "start": "718720",
    "end": "721040"
  },
  {
    "text": "so here this is the idea but with",
    "start": "721040",
    "end": "722720"
  },
  {
    "text": "hyperparameter tuning",
    "start": "722720",
    "end": "724160"
  },
  {
    "text": "in this trivial case finding the optimal",
    "start": "724160",
    "end": "726399"
  },
  {
    "text": "k for the data",
    "start": "726399",
    "end": "727680"
  },
  {
    "text": "in this two-dimensional data i can",
    "start": "727680",
    "end": "729200"
  },
  {
    "text": "eyeball it pretty well but if",
    "start": "729200",
    "end": "730720"
  },
  {
    "text": "this were like say you know",
    "start": "730720",
    "end": "732160"
  },
  {
    "text": "10-dimensional data it would be hard to",
    "start": "732160",
    "end": "734320"
  },
  {
    "text": "know where the clusters really are so i",
    "start": "734320",
    "end": "736079"
  },
  {
    "text": "might run with several values of k and",
    "start": "736079",
    "end": "737920"
  },
  {
    "text": "see which one seems to work best",
    "start": "737920",
    "end": "741279"
  },
  {
    "text": "this problem of picking the hyper",
    "start": "741279",
    "end": "742959"
  },
  {
    "text": "parameters gets enormously complicated",
    "start": "742959",
    "end": "745200"
  },
  {
    "text": "in neural networks",
    "start": "745200",
    "end": "746480"
  },
  {
    "text": "every number you see here in fact every",
    "start": "746480",
    "end": "748320"
  },
  {
    "text": "word is actually a decision i have to",
    "start": "748320",
    "end": "750480"
  },
  {
    "text": "make including the number of layers",
    "start": "750480",
    "end": "752880"
  },
  {
    "text": "so it's an enormous space to explore and",
    "start": "752880",
    "end": "755360"
  },
  {
    "text": "i need some intelligent way to explore",
    "start": "755360",
    "end": "757600"
  },
  {
    "text": "it to find you reasonably good versions",
    "start": "757600",
    "end": "759839"
  },
  {
    "text": "of this",
    "start": "759839",
    "end": "760800"
  },
  {
    "text": "architecture that will work for my",
    "start": "760800",
    "end": "762399"
  },
  {
    "text": "problem without wasting a lot of compute",
    "start": "762399",
    "end": "764880"
  },
  {
    "text": "resources exploring bad choices",
    "start": "764880",
    "end": "768240"
  },
  {
    "text": "and that's what tune is all about we",
    "start": "768240",
    "end": "770639"
  },
  {
    "text": "want you know the best model we can find",
    "start": "770639",
    "end": "772880"
  },
  {
    "text": "reese's resources are expensive and",
    "start": "772880",
    "end": "775200"
  },
  {
    "text": "training is time-consuming so uh",
    "start": "775200",
    "end": "777600"
  },
  {
    "text": "you know how can we optimize this and",
    "start": "777600",
    "end": "779040"
  },
  {
    "text": "tune tries to do this for us",
    "start": "779040",
    "end": "781040"
  },
  {
    "text": "with very concise declarations we can",
    "start": "781040",
    "end": "783120"
  },
  {
    "text": "say what we want to do",
    "start": "783120",
    "end": "784320"
  },
  {
    "text": "tune runs the jobs in parallel over a",
    "start": "784320",
    "end": "786720"
  },
  {
    "text": "cluster that are required it integrates",
    "start": "786720",
    "end": "788720"
  },
  {
    "text": "with popular ml frameworks",
    "start": "788720",
    "end": "790880"
  },
  {
    "text": "and makes the job a lot easier",
    "start": "790880",
    "end": "793920"
  },
  {
    "text": "finally what about ray for other",
    "start": "793920",
    "end": "796079"
  },
  {
    "text": "services or microservices in particular",
    "start": "796079",
    "end": "798880"
  },
  {
    "text": "now if you're not into the machine",
    "start": "798880",
    "end": "800079"
  },
  {
    "text": "learning world well",
    "start": "800079",
    "end": "802000"
  },
  {
    "text": "just in one particular problem with",
    "start": "802000",
    "end": "804160"
  },
  {
    "text": "microservice development is that you",
    "start": "804160",
    "end": "806079"
  },
  {
    "text": "often deploy a lot of instances of them",
    "start": "806079",
    "end": "808320"
  },
  {
    "text": "that you have to manage yourself the",
    "start": "808320",
    "end": "809839"
  },
  {
    "text": "number of instances will vary",
    "start": "809839",
    "end": "811440"
  },
  {
    "text": "you may be changing out new instances",
    "start": "811440",
    "end": "813440"
  },
  {
    "text": "frequently as you evolve",
    "start": "813440",
    "end": "814959"
  },
  {
    "text": "you know these services but it's just",
    "start": "814959",
    "end": "817519"
  },
  {
    "text": "all stuff you have to banish explicitly",
    "start": "817519",
    "end": "820240"
  },
  {
    "text": "and the vision of ray is that we could",
    "start": "820240",
    "end": "821680"
  },
  {
    "text": "actually go back to having one logical",
    "start": "821680",
    "end": "823760"
  },
  {
    "text": "instance for microservice",
    "start": "823760",
    "end": "825279"
  },
  {
    "text": "and ray does the scaling across our",
    "start": "825279",
    "end": "827839"
  },
  {
    "text": "cluster",
    "start": "827839",
    "end": "828560"
  },
  {
    "text": "you know why did we have those different",
    "start": "828560",
    "end": "830480"
  },
  {
    "text": "explicit instances before",
    "start": "830480",
    "end": "832480"
  },
  {
    "text": "well node boundaries you know are easily",
    "start": "832480",
    "end": "834480"
  },
  {
    "text": "hit and we need to go to other nodes for",
    "start": "834480",
    "end": "836240"
  },
  {
    "text": "scalability",
    "start": "836240",
    "end": "837519"
  },
  {
    "text": "but also we want resilience to have",
    "start": "837519",
    "end": "839360"
  },
  {
    "text": "stuff running across the cluster",
    "start": "839360",
    "end": "841040"
  },
  {
    "text": "in case nodes fail well ray kind of",
    "start": "841040",
    "end": "843199"
  },
  {
    "text": "gives us that transparently",
    "start": "843199",
    "end": "844880"
  },
  {
    "text": "so it makes it a lot easier to manage",
    "start": "844880",
    "end": "846800"
  },
  {
    "text": "our applications",
    "start": "846800",
    "end": "849519"
  },
  {
    "text": "so finally if you want to migrate to ray",
    "start": "849519",
    "end": "851680"
  },
  {
    "text": "you may already be using some",
    "start": "851680",
    "end": "853360"
  },
  {
    "text": "multi-threading libraries that let you",
    "start": "853360",
    "end": "855440"
  },
  {
    "text": "leverage your single nodes like",
    "start": "855440",
    "end": "857440"
  },
  {
    "text": "these three right here well there's a",
    "start": "857440",
    "end": "859519"
  },
  {
    "text": "drop-in replacements for them with ray",
    "start": "859519",
    "end": "861600"
  },
  {
    "text": "that just involve a new import statement",
    "start": "861600",
    "end": "864560"
  },
  {
    "text": "and then you're now scaling to a cluster",
    "start": "864560",
    "end": "867680"
  },
  {
    "text": "well anyway thanks so much i appreciate",
    "start": "867680",
    "end": "869519"
  },
  {
    "text": "your time and here's some links once",
    "start": "869519",
    "end": "871519"
  },
  {
    "text": "again check out our race summit connect",
    "start": "871519",
    "end": "873440"
  },
  {
    "text": "series which are the summer events",
    "start": "873440",
    "end": "875360"
  },
  {
    "text": "and i'm looking forward to hearing from",
    "start": "875360",
    "end": "878519"
  },
  {
    "text": "you",
    "start": "878519",
    "end": "881519"
  }
]