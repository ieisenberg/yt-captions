[
  {
    "start": "0",
    "end": "56000"
  },
  {
    "text": "[Music]",
    "start": "970",
    "end": "7838"
  },
  {
    "text": "hello",
    "start": "14160",
    "end": "14719"
  },
  {
    "text": "and welcome to my talk my name is jacqui",
    "start": "14719",
    "end": "16960"
  },
  {
    "text": "liu i am a chicago-based software",
    "start": "16960",
    "end": "19199"
  },
  {
    "text": "engineer",
    "start": "19199",
    "end": "19840"
  },
  {
    "text": "currently working at the center for",
    "start": "19840",
    "end": "21680"
  },
  {
    "text": "translational data science",
    "start": "21680",
    "end": "23439"
  },
  {
    "text": "at the university of chicago today i",
    "start": "23439",
    "end": "26000"
  },
  {
    "text": "will be speaking about",
    "start": "26000",
    "end": "27199"
  },
  {
    "text": "observability and monitoring when",
    "start": "27199",
    "end": "29519"
  },
  {
    "text": "designing and building data pipelines",
    "start": "29519",
    "end": "32320"
  },
  {
    "text": "thank you",
    "start": "32320",
    "end": "34640"
  },
  {
    "text": "all right let's get started for today's",
    "start": "37280",
    "end": "40239"
  },
  {
    "text": "agenda we'll talk about",
    "start": "40239",
    "end": "41920"
  },
  {
    "text": "data pipelines in general common issues",
    "start": "41920",
    "end": "44879"
  },
  {
    "text": "with data pipelines",
    "start": "44879",
    "end": "46160"
  },
  {
    "text": "and some features to design for when",
    "start": "46160",
    "end": "49039"
  },
  {
    "text": "building data pipelines",
    "start": "49039",
    "end": "51199"
  },
  {
    "text": "and we'll close out by talking about",
    "start": "51199",
    "end": "52800"
  },
  {
    "text": "testing monitoring and alerting",
    "start": "52800",
    "end": "56399"
  },
  {
    "start": "56000",
    "end": "200000"
  },
  {
    "text": "so what are data pipelines uh at a very",
    "start": "56399",
    "end": "59280"
  },
  {
    "text": "high level data pipelines uh",
    "start": "59280",
    "end": "61359"
  },
  {
    "text": "start with putting data in and",
    "start": "61359",
    "end": "63280"
  },
  {
    "text": "outputting data out somewhere",
    "start": "63280",
    "end": "65119"
  },
  {
    "text": "but in production systems they tend to",
    "start": "65119",
    "end": "66880"
  },
  {
    "text": "be very large and complex",
    "start": "66880",
    "end": "68960"
  },
  {
    "text": "and it's never quite so simple to build",
    "start": "68960",
    "end": "71119"
  },
  {
    "text": "one",
    "start": "71119",
    "end": "72640"
  },
  {
    "text": "you've probably heard of data pipelines",
    "start": "72640",
    "end": "74560"
  },
  {
    "text": "refer to as",
    "start": "74560",
    "end": "75840"
  },
  {
    "text": "a etl process the core principle sounds",
    "start": "75840",
    "end": "79439"
  },
  {
    "text": "very very simple you have some",
    "start": "79439",
    "end": "81600"
  },
  {
    "text": "extraction phase",
    "start": "81600",
    "end": "82880"
  },
  {
    "text": "where data is getting fetched from a",
    "start": "82880",
    "end": "85200"
  },
  {
    "text": "source",
    "start": "85200",
    "end": "86320"
  },
  {
    "text": "this could be a real-time feed it could",
    "start": "86320",
    "end": "89119"
  },
  {
    "text": "also be a very large file of its bulk",
    "start": "89119",
    "end": "91119"
  },
  {
    "text": "data",
    "start": "91119",
    "end": "92320"
  },
  {
    "text": "and then there's some transformation to",
    "start": "92320",
    "end": "94159"
  },
  {
    "text": "make the data workable",
    "start": "94159",
    "end": "96640"
  },
  {
    "text": "or there's some analysis on the data",
    "start": "96640",
    "end": "99200"
  },
  {
    "text": "either way there's some mudding of the",
    "start": "99200",
    "end": "100880"
  },
  {
    "text": "data to make it",
    "start": "100880",
    "end": "102560"
  },
  {
    "text": "accessible to users and then",
    "start": "102560",
    "end": "105680"
  },
  {
    "text": "in the last step the data is often",
    "start": "105680",
    "end": "107520"
  },
  {
    "text": "loaded into some data warehouse with the",
    "start": "107520",
    "end": "109759"
  },
  {
    "text": "user interface",
    "start": "109759",
    "end": "111280"
  },
  {
    "text": "or just back in store so that it can be",
    "start": "111280",
    "end": "113280"
  },
  {
    "text": "accessed and analyze and transform",
    "start": "113280",
    "end": "115280"
  },
  {
    "text": "further at some later point",
    "start": "115280",
    "end": "117119"
  },
  {
    "text": "so this is kind of a standard framework",
    "start": "117119",
    "end": "118719"
  },
  {
    "text": "with the pipelines",
    "start": "118719",
    "end": "121680"
  },
  {
    "text": "so we'll talk about both batch and",
    "start": "122240",
    "end": "125600"
  },
  {
    "text": "spring processes in this discussion",
    "start": "125600",
    "end": "128239"
  },
  {
    "text": "so in batch processes there's periodic",
    "start": "128239",
    "end": "131120"
  },
  {
    "text": "processes that read from from bulk data",
    "start": "131120",
    "end": "134319"
  },
  {
    "text": "so it's very chunky there's a sort of",
    "start": "134319",
    "end": "137040"
  },
  {
    "text": "starting point and stopping point",
    "start": "137040",
    "end": "139040"
  },
  {
    "text": "and then with streaming processes it's",
    "start": "139040",
    "end": "141120"
  },
  {
    "text": "high throughput low latency and it's a",
    "start": "141120",
    "end": "143360"
  },
  {
    "text": "very continuous stream of data or queue",
    "start": "143360",
    "end": "146000"
  },
  {
    "text": "of data",
    "start": "146000",
    "end": "147120"
  },
  {
    "text": "they tend to have different slas and",
    "start": "147120",
    "end": "148800"
  },
  {
    "text": "different requirements and",
    "start": "148800",
    "end": "150480"
  },
  {
    "text": "require different monitoring strategies",
    "start": "150480",
    "end": "152400"
  },
  {
    "text": "which we'll talk about a little bit",
    "start": "152400",
    "end": "154840"
  },
  {
    "text": "on uh so you can't really talk about",
    "start": "154840",
    "end": "157200"
  },
  {
    "text": "data pipelines without talking about",
    "start": "157200",
    "end": "158800"
  },
  {
    "text": "orchestrators",
    "start": "158800",
    "end": "160000"
  },
  {
    "text": "um so there's a lot of really helpful",
    "start": "160000",
    "end": "161599"
  },
  {
    "text": "tools for orchestrating your data",
    "start": "161599",
    "end": "163200"
  },
  {
    "text": "and depending on the tool you might have",
    "start": "163200",
    "end": "164800"
  },
  {
    "text": "some built-in monitoring and built-in",
    "start": "164800",
    "end": "166400"
  },
  {
    "text": "observability as well",
    "start": "166400",
    "end": "168400"
  },
  {
    "text": "the topics discussed here are tool",
    "start": "168400",
    "end": "170239"
  },
  {
    "text": "agnostic and each of these tools have",
    "start": "170239",
    "end": "172959"
  },
  {
    "text": "their own way of incorporating some of",
    "start": "172959",
    "end": "174560"
  },
  {
    "text": "the features i discuss",
    "start": "174560",
    "end": "176400"
  },
  {
    "text": "but that is unfortunately outside of the",
    "start": "176400",
    "end": "178319"
  },
  {
    "text": "scope of this talk",
    "start": "178319",
    "end": "179680"
  },
  {
    "text": "and orchestration can fill in a lot of",
    "start": "179680",
    "end": "182800"
  },
  {
    "text": "the common issues when working with data",
    "start": "182800",
    "end": "184480"
  },
  {
    "text": "pipelines such as monitoring",
    "start": "184480",
    "end": "186159"
  },
  {
    "text": "and scheduling and these are some common",
    "start": "186159",
    "end": "188879"
  },
  {
    "text": "tools",
    "start": "188879",
    "end": "189360"
  },
  {
    "text": "uh luigi and airflow are open source",
    "start": "189360",
    "end": "192959"
  },
  {
    "text": "tools",
    "start": "192959",
    "end": "193760"
  },
  {
    "text": "and aws data pipeline and google",
    "start": "193760",
    "end": "196159"
  },
  {
    "text": "dataflow",
    "start": "196159",
    "end": "196800"
  },
  {
    "text": "are our cloud-based tools",
    "start": "196800",
    "end": "200080"
  },
  {
    "start": "200000",
    "end": "316000"
  },
  {
    "text": "so let's talk about what could go wrong",
    "start": "200080",
    "end": "202400"
  },
  {
    "text": "with data pipelines",
    "start": "202400",
    "end": "204480"
  },
  {
    "text": "so there's a lot of things that could go",
    "start": "204480",
    "end": "206560"
  },
  {
    "text": "wrong with any kind of",
    "start": "206560",
    "end": "208560"
  },
  {
    "text": "system but the most obvious ones are",
    "start": "208560",
    "end": "212640"
  },
  {
    "text": "very easy to verify so batch jobs are",
    "start": "212640",
    "end": "215360"
  },
  {
    "text": "are never scheduled and therefore they",
    "start": "215360",
    "end": "217040"
  },
  {
    "text": "never run",
    "start": "217040",
    "end": "218400"
  },
  {
    "text": "a bad job takes longer than expected to",
    "start": "218400",
    "end": "220560"
  },
  {
    "text": "run which could be",
    "start": "220560",
    "end": "221760"
  },
  {
    "text": "a sign of an issue or maybe you have",
    "start": "221760",
    "end": "223920"
  },
  {
    "text": "more data than you anticipated",
    "start": "223920",
    "end": "226480"
  },
  {
    "text": "at some point the process data can get",
    "start": "226480",
    "end": "228239"
  },
  {
    "text": "malformed or corrupted",
    "start": "228239",
    "end": "229920"
  },
  {
    "text": "at some point in the process you could",
    "start": "229920",
    "end": "231360"
  },
  {
    "text": "accidentally lose data",
    "start": "231360",
    "end": "233840"
  },
  {
    "text": "in the stream process your stream could",
    "start": "233840",
    "end": "235360"
  },
  {
    "text": "get backed up and this could happen for",
    "start": "235360",
    "end": "237040"
  },
  {
    "text": "a variety of reasons",
    "start": "237040",
    "end": "238879"
  },
  {
    "text": "it could be because there's malformed",
    "start": "238879",
    "end": "240319"
  },
  {
    "text": "data that's causing errors in the system",
    "start": "240319",
    "end": "243280"
  },
  {
    "text": "or you could also have string data that",
    "start": "243280",
    "end": "246159"
  },
  {
    "text": "gets lost",
    "start": "246159",
    "end": "248000"
  },
  {
    "text": "and last but not least non-deterministic",
    "start": "248000",
    "end": "251280"
  },
  {
    "text": "systems such as",
    "start": "251280",
    "end": "252239"
  },
  {
    "text": "machine learning models can be very",
    "start": "252239",
    "end": "253840"
  },
  {
    "text": "challenging to work with because they're",
    "start": "253840",
    "end": "255280"
  },
  {
    "text": "not always very predictable in behavior",
    "start": "255280",
    "end": "259280"
  },
  {
    "text": "so this is sort of an example of you",
    "start": "259359",
    "end": "262320"
  },
  {
    "text": "know",
    "start": "262320",
    "end": "262960"
  },
  {
    "text": "monitoring or visualizing the the run of",
    "start": "262960",
    "end": "265680"
  },
  {
    "text": "a batch job it's very",
    "start": "265680",
    "end": "266880"
  },
  {
    "text": "spiky um so you'll see when a batch job",
    "start": "266880",
    "end": "269919"
  },
  {
    "text": "has run",
    "start": "269919",
    "end": "271040"
  },
  {
    "text": "spikes when data has been processed you",
    "start": "271040",
    "end": "273199"
  },
  {
    "text": "can sort of see inconsistencies and",
    "start": "273199",
    "end": "275040"
  },
  {
    "text": "batch size where maybe",
    "start": "275040",
    "end": "276479"
  },
  {
    "text": "some batches are taking longer than",
    "start": "276479",
    "end": "278080"
  },
  {
    "text": "others to run",
    "start": "278080",
    "end": "279680"
  },
  {
    "text": "but you want to in general be monitoring",
    "start": "279680",
    "end": "281680"
  },
  {
    "text": "for you know how long these batch jobs",
    "start": "281680",
    "end": "284240"
  },
  {
    "text": "take to run what the size of each batch",
    "start": "284240",
    "end": "286560"
  },
  {
    "text": "is uh",
    "start": "286560",
    "end": "287440"
  },
  {
    "text": "you know how much memory you're using",
    "start": "287440",
    "end": "288960"
  },
  {
    "text": "and things like that",
    "start": "288960",
    "end": "291440"
  },
  {
    "text": "for stream jobs you want to be measuring",
    "start": "291440",
    "end": "294080"
  },
  {
    "text": "latency",
    "start": "294080",
    "end": "295280"
  },
  {
    "text": "you also want to be looking to the",
    "start": "295280",
    "end": "296800"
  },
  {
    "text": "egress and ingress",
    "start": "296800",
    "end": "298479"
  },
  {
    "text": "of the queue of the stream and you also",
    "start": "298479",
    "end": "301039"
  },
  {
    "text": "want to be",
    "start": "301039",
    "end": "301600"
  },
  {
    "text": "monitoring for the age of the oldest",
    "start": "301600",
    "end": "303440"
  },
  {
    "text": "data point that has yet to be processed",
    "start": "303440",
    "end": "305919"
  },
  {
    "text": "because that is tends to signal oh there",
    "start": "305919",
    "end": "308479"
  },
  {
    "text": "might be",
    "start": "308479",
    "end": "309120"
  },
  {
    "text": "some data in there that has been through",
    "start": "309120",
    "end": "311520"
  },
  {
    "text": "the street that",
    "start": "311520",
    "end": "312479"
  },
  {
    "text": "has stayed in the stream for longer than",
    "start": "312479",
    "end": "314320"
  },
  {
    "text": "it should have",
    "start": "314320",
    "end": "316639"
  },
  {
    "start": "316000",
    "end": "374000"
  },
  {
    "text": "uh general concerns with data pipelines",
    "start": "316639",
    "end": "319280"
  },
  {
    "text": "so delayed processing so both",
    "start": "319280",
    "end": "321440"
  },
  {
    "text": "in batch and stream jobs if it's slower",
    "start": "321440",
    "end": "324320"
  },
  {
    "text": "than",
    "start": "324320",
    "end": "324639"
  },
  {
    "text": "expected that is a concern so it's",
    "start": "324639",
    "end": "327120"
  },
  {
    "text": "important to know what your expected",
    "start": "327120",
    "end": "328639"
  },
  {
    "text": "slas are",
    "start": "328639",
    "end": "330000"
  },
  {
    "text": "and then there's a data integrity issue",
    "start": "330000",
    "end": "332240"
  },
  {
    "text": "which is if data is exposed or lost",
    "start": "332240",
    "end": "334400"
  },
  {
    "text": "if you have run your data through the",
    "start": "334400",
    "end": "335919"
  },
  {
    "text": "pipeline and at the end of it you don't",
    "start": "335919",
    "end": "338240"
  },
  {
    "text": "actually have the results that are",
    "start": "338240",
    "end": "339520"
  },
  {
    "text": "useful to you",
    "start": "339520",
    "end": "340880"
  },
  {
    "text": "or you have misleading results that's a",
    "start": "340880",
    "end": "342960"
  },
  {
    "text": "big problem",
    "start": "342960",
    "end": "345600"
  },
  {
    "text": "um so in you know to sum it all you",
    "start": "345600",
    "end": "348960"
  },
  {
    "text": "do sort of need to know not just about",
    "start": "348960",
    "end": "352000"
  },
  {
    "text": "the the process the system latency but",
    "start": "352000",
    "end": "355039"
  },
  {
    "text": "you also kind of need to know",
    "start": "355039",
    "end": "356479"
  },
  {
    "text": "about the data itself to really measure",
    "start": "356479",
    "end": "360000"
  },
  {
    "text": "the health of your data pipeline",
    "start": "360000",
    "end": "363039"
  },
  {
    "text": "and this brings us to two really",
    "start": "363039",
    "end": "366000"
  },
  {
    "text": "important",
    "start": "366000",
    "end": "366880"
  },
  {
    "text": "concepts uh interpretability and",
    "start": "366880",
    "end": "369759"
  },
  {
    "text": "observability",
    "start": "369759",
    "end": "371039"
  },
  {
    "text": "so talk a little bit more about what",
    "start": "371039",
    "end": "372960"
  },
  {
    "text": "that means",
    "start": "372960",
    "end": "375199"
  },
  {
    "start": "374000",
    "end": "462000"
  },
  {
    "text": "interpretability is a concept from",
    "start": "375199",
    "end": "378240"
  },
  {
    "text": "data science and it refers to the notion",
    "start": "378240",
    "end": "382080"
  },
  {
    "text": "that you kind of need to know",
    "start": "382080",
    "end": "384319"
  },
  {
    "text": "why a model has predicted the way that",
    "start": "384319",
    "end": "386319"
  },
  {
    "text": "it is and it's important for a variety",
    "start": "386319",
    "end": "388880"
  },
  {
    "text": "of reasons",
    "start": "388880",
    "end": "390240"
  },
  {
    "text": "like privacy for instance war or",
    "start": "390240",
    "end": "392880"
  },
  {
    "text": "fairness",
    "start": "392880",
    "end": "394000"
  },
  {
    "text": "and the reliability of a model",
    "start": "394000",
    "end": "399039"
  },
  {
    "text": "um but it also means that when you are",
    "start": "399039",
    "end": "402319"
  },
  {
    "text": "for an interpretable model you allow for",
    "start": "402319",
    "end": "404960"
  },
  {
    "text": "debugging",
    "start": "404960",
    "end": "405680"
  },
  {
    "text": "and auditing of these models and",
    "start": "405680",
    "end": "408880"
  },
  {
    "text": "understand why the result is the way it",
    "start": "408880",
    "end": "410880"
  },
  {
    "text": "is if you have introduced bias",
    "start": "410880",
    "end": "413039"
  },
  {
    "text": "into your machine learning model that is",
    "start": "413039",
    "end": "415440"
  },
  {
    "text": "something you can audit and correct for",
    "start": "415440",
    "end": "419039"
  },
  {
    "text": "um so again interpretability emphasizes",
    "start": "419039",
    "end": "422880"
  },
  {
    "text": "these concepts fairness privacy",
    "start": "422880",
    "end": "426080"
  },
  {
    "text": "usually of the user whose data you're",
    "start": "426080",
    "end": "428400"
  },
  {
    "text": "running the model on",
    "start": "428400",
    "end": "429759"
  },
  {
    "text": "reliability of the system robustness",
    "start": "429759",
    "end": "432880"
  },
  {
    "text": "so things like if you make a small",
    "start": "432880",
    "end": "435440"
  },
  {
    "text": "change to",
    "start": "435440",
    "end": "436080"
  },
  {
    "text": "input it doesn't lead to drastically big",
    "start": "436080",
    "end": "438960"
  },
  {
    "text": "changes in the production of the model",
    "start": "438960",
    "end": "441120"
  },
  {
    "text": "and uh trust and causality so cause only",
    "start": "441120",
    "end": "444400"
  },
  {
    "text": "checks that",
    "start": "444400",
    "end": "445280"
  },
  {
    "text": "um a predicted change in the decision",
    "start": "445280",
    "end": "448479"
  },
  {
    "text": "isn't due to arbitrary changes in the",
    "start": "448479",
    "end": "451120"
  },
  {
    "text": "input values",
    "start": "451120",
    "end": "452960"
  },
  {
    "text": "and trust um it's easier for humans to",
    "start": "452960",
    "end": "455440"
  },
  {
    "text": "trust the system that",
    "start": "455440",
    "end": "456880"
  },
  {
    "text": "can sort of explain the decision behind",
    "start": "456880",
    "end": "458800"
  },
  {
    "text": "it instead of a black box model",
    "start": "458800",
    "end": "462638"
  },
  {
    "start": "462000",
    "end": "524000"
  },
  {
    "text": "observability is a concept from",
    "start": "462720",
    "end": "465840"
  },
  {
    "text": "uh reliability engineering and it refers",
    "start": "465840",
    "end": "469039"
  },
  {
    "text": "to",
    "start": "469039",
    "end": "469520"
  },
  {
    "text": "the notion that you you know you can't",
    "start": "469520",
    "end": "471440"
  },
  {
    "text": "cast for things you don't know about",
    "start": "471440",
    "end": "473039"
  },
  {
    "text": "so you need to build a system that",
    "start": "473039",
    "end": "474560"
  },
  {
    "text": "allows you to debug",
    "start": "474560",
    "end": "476240"
  },
  {
    "text": "once you encounter you know issues or",
    "start": "476240",
    "end": "479520"
  },
  {
    "text": "incidents",
    "start": "479520",
    "end": "480240"
  },
  {
    "text": "uh and the first time you encounter",
    "start": "480240",
    "end": "482319"
  },
  {
    "text": "incidents or",
    "start": "482319",
    "end": "484560"
  },
  {
    "text": "incidents or issues so this is",
    "start": "484560",
    "end": "488000"
  },
  {
    "text": "a lovely diagram from a blog post by",
    "start": "488000",
    "end": "490720"
  },
  {
    "text": "cindy sirharn",
    "start": "490720",
    "end": "492479"
  },
  {
    "text": "and refers to the the notion that you",
    "start": "492479",
    "end": "495599"
  },
  {
    "text": "know you can't catch for all the edge",
    "start": "495599",
    "end": "497120"
  },
  {
    "text": "cases and testing you can't monitor for",
    "start": "497120",
    "end": "499759"
  },
  {
    "text": "for failure points that you haven't seen",
    "start": "499759",
    "end": "501599"
  },
  {
    "text": "before but we can build a system that is",
    "start": "501599",
    "end": "504400"
  },
  {
    "text": "easy to debug",
    "start": "504400",
    "end": "505440"
  },
  {
    "text": "and arm engineers with evidence instead",
    "start": "505440",
    "end": "508160"
  },
  {
    "text": "of conjecture when something goes wrong",
    "start": "508160",
    "end": "511360"
  },
  {
    "text": "so it's a set of monitoring tools for",
    "start": "511360",
    "end": "514959"
  },
  {
    "text": "for possible failures and to me i see it",
    "start": "514959",
    "end": "518959"
  },
  {
    "text": "as the",
    "start": "518959",
    "end": "519680"
  },
  {
    "text": "you know sre equivalent of",
    "start": "519680",
    "end": "521839"
  },
  {
    "text": "interpretability",
    "start": "521839",
    "end": "524800"
  },
  {
    "start": "524000",
    "end": "557000"
  },
  {
    "text": "let's talk a little bit about the",
    "start": "525279",
    "end": "527680"
  },
  {
    "text": "pipeline features that allow for",
    "start": "527680",
    "end": "529640"
  },
  {
    "text": "interpretability",
    "start": "529640",
    "end": "530800"
  },
  {
    "text": "and observability",
    "start": "530800",
    "end": "534959"
  },
  {
    "text": "so from my perspective there's three key",
    "start": "534959",
    "end": "538160"
  },
  {
    "text": "features",
    "start": "538160",
    "end": "539440"
  },
  {
    "text": "immutable data having a data lineage",
    "start": "539440",
    "end": "544000"
  },
  {
    "text": "having a test run feature",
    "start": "544000",
    "end": "547360"
  },
  {
    "text": "and some way to do the the test run mode",
    "start": "547360",
    "end": "550880"
  },
  {
    "text": "where you can have a you know dry run",
    "start": "550880",
    "end": "554560"
  },
  {
    "text": "before you go into production",
    "start": "554560",
    "end": "557600"
  },
  {
    "start": "557000",
    "end": "652000"
  },
  {
    "text": "so let's talk about immutable data",
    "start": "557600",
    "end": "560880"
  },
  {
    "text": "so immutable data is core to designing a",
    "start": "560880",
    "end": "563519"
  },
  {
    "text": "system that is",
    "start": "563519",
    "end": "564640"
  },
  {
    "text": "easy to test item potent and",
    "start": "564640",
    "end": "567440"
  },
  {
    "text": "reproducible",
    "start": "567440",
    "end": "569279"
  },
  {
    "text": "so item potent operations refer to",
    "start": "569279",
    "end": "572800"
  },
  {
    "text": "operations such that the same input will",
    "start": "572800",
    "end": "575120"
  },
  {
    "text": "consistently produce",
    "start": "575120",
    "end": "576800"
  },
  {
    "text": "the same output meaning it's a function",
    "start": "576800",
    "end": "579200"
  },
  {
    "text": "with",
    "start": "579200",
    "end": "580080"
  },
  {
    "text": "no side effects and immutable data",
    "start": "580080",
    "end": "583440"
  },
  {
    "text": "allows you to",
    "start": "583440",
    "end": "585200"
  },
  {
    "text": "basically if you need to run a process",
    "start": "585200",
    "end": "588480"
  },
  {
    "text": "that has already happened you need to",
    "start": "588480",
    "end": "591120"
  },
  {
    "text": "recreate it somehow you are able to do",
    "start": "591120",
    "end": "594000"
  },
  {
    "text": "so",
    "start": "594000",
    "end": "594959"
  },
  {
    "text": "and immutable data leads to reproducible",
    "start": "594959",
    "end": "598800"
  },
  {
    "text": "outcomes which makes it easier to test",
    "start": "598800",
    "end": "601200"
  },
  {
    "text": "but also",
    "start": "601200",
    "end": "601920"
  },
  {
    "text": "backtrack and investigate anything that",
    "start": "601920",
    "end": "604000"
  },
  {
    "text": "might have gone wrong",
    "start": "604000",
    "end": "606640"
  },
  {
    "text": "in this paragraph data is stored as an",
    "start": "606640",
    "end": "609440"
  },
  {
    "text": "immutable sequence of events",
    "start": "609440",
    "end": "611120"
  },
  {
    "text": "that collectively tells the whole story",
    "start": "611120",
    "end": "613760"
  },
  {
    "text": "so take for instance a bank account",
    "start": "613760",
    "end": "616399"
  },
  {
    "text": "at the end you probably want to display",
    "start": "616399",
    "end": "618079"
  },
  {
    "text": "a user's current balance",
    "start": "618079",
    "end": "620000"
  },
  {
    "text": "but you know you can store the current",
    "start": "620000",
    "end": "622640"
  },
  {
    "text": "balance as",
    "start": "622640",
    "end": "623440"
  },
  {
    "text": "is and override it every time it changes",
    "start": "623440",
    "end": "626079"
  },
  {
    "text": "but that limits the data usage",
    "start": "626079",
    "end": "628000"
  },
  {
    "text": "um to just displaying the current",
    "start": "628000",
    "end": "629600"
  },
  {
    "text": "balance so storing the data as immutable",
    "start": "629600",
    "end": "632160"
  },
  {
    "text": "transactions or credits and debits",
    "start": "632160",
    "end": "634399"
  },
  {
    "text": "allow you to leverage the data for your",
    "start": "634399",
    "end": "636800"
  },
  {
    "text": "various use cases",
    "start": "636800",
    "end": "638399"
  },
  {
    "text": "and view the history of the account it",
    "start": "638399",
    "end": "640800"
  },
  {
    "text": "also allows you to understand maybe at a",
    "start": "640800",
    "end": "642880"
  },
  {
    "text": "historic point in time what the user's",
    "start": "642880",
    "end": "644959"
  },
  {
    "text": "balance was",
    "start": "644959",
    "end": "646880"
  },
  {
    "text": "so this allows for reproducible testing",
    "start": "646880",
    "end": "649600"
  },
  {
    "text": "and can become really valuable",
    "start": "649600",
    "end": "652800"
  },
  {
    "start": "652000",
    "end": "788000"
  },
  {
    "text": "data lineage so as mentioned",
    "start": "652800",
    "end": "656800"
  },
  {
    "text": "data pipelines sort of go through",
    "start": "656800",
    "end": "659519"
  },
  {
    "text": "multiple",
    "start": "659519",
    "end": "660079"
  },
  {
    "text": "sequence of events immutable data",
    "start": "660079",
    "end": "662399"
  },
  {
    "text": "enables you to create data",
    "start": "662399",
    "end": "664240"
  },
  {
    "text": "lineage if at those different parts of",
    "start": "664240",
    "end": "667200"
  },
  {
    "text": "the pipeline you have",
    "start": "667200",
    "end": "668560"
  },
  {
    "text": "different outputs so you can then go",
    "start": "668560",
    "end": "671680"
  },
  {
    "text": "back",
    "start": "671680",
    "end": "672079"
  },
  {
    "text": "to specifically the output of a step in",
    "start": "672079",
    "end": "675600"
  },
  {
    "text": "the pipeline and determine",
    "start": "675600",
    "end": "677519"
  },
  {
    "text": "this is a step where something went",
    "start": "677519",
    "end": "679760"
  },
  {
    "text": "wrong",
    "start": "679760",
    "end": "680640"
  },
  {
    "text": "or this is a step where data mutated in",
    "start": "680640",
    "end": "683279"
  },
  {
    "text": "a way that",
    "start": "683279",
    "end": "684320"
  },
  {
    "text": "i did not expect so data lineage is",
    "start": "684320",
    "end": "687839"
  },
  {
    "text": "really beneficial to diagnostics",
    "start": "687839",
    "end": "690320"
  },
  {
    "text": "you want to know not just what code is",
    "start": "690320",
    "end": "693040"
  },
  {
    "text": "causing",
    "start": "693040",
    "end": "693839"
  },
  {
    "text": "a specific output but what data input",
    "start": "693839",
    "end": "697120"
  },
  {
    "text": "was given that led to that series of",
    "start": "697120",
    "end": "700839"
  },
  {
    "text": "behavior",
    "start": "700839",
    "end": "702240"
  },
  {
    "text": "so this is my rough sketch of a data",
    "start": "702240",
    "end": "704959"
  },
  {
    "text": "pipeline with",
    "start": "704959",
    "end": "706160"
  },
  {
    "text": "maybe some level of",
    "start": "706160",
    "end": "709200"
  },
  {
    "text": "lineage and i see data lineage as",
    "start": "709200",
    "end": "712160"
  },
  {
    "text": "something that is",
    "start": "712160",
    "end": "713600"
  },
  {
    "text": "kind of like version control of data you",
    "start": "713600",
    "end": "715680"
  },
  {
    "text": "have to know where your data has come",
    "start": "715680",
    "end": "717360"
  },
  {
    "text": "from what triggered the transformation",
    "start": "717360",
    "end": "719360"
  },
  {
    "text": "and if you have to revert that specific",
    "start": "719360",
    "end": "722000"
  },
  {
    "text": "transformation of your data how do you",
    "start": "722000",
    "end": "724000"
  },
  {
    "text": "do that",
    "start": "724000",
    "end": "726399"
  },
  {
    "text": "um so how do you actually build data",
    "start": "726959",
    "end": "729440"
  },
  {
    "text": "lineage a couple of things that you can",
    "start": "729440",
    "end": "731200"
  },
  {
    "text": "do",
    "start": "731200",
    "end": "732000"
  },
  {
    "text": "you can tag records with metadata so for",
    "start": "732000",
    "end": "735440"
  },
  {
    "text": "every step of the pipeline you can tag",
    "start": "735440",
    "end": "737360"
  },
  {
    "text": "your output with",
    "start": "737360",
    "end": "738720"
  },
  {
    "text": "the version of the code that created",
    "start": "738720",
    "end": "741360"
  },
  {
    "text": "that",
    "start": "741360",
    "end": "742160"
  },
  {
    "text": "output and the source of the data that",
    "start": "742160",
    "end": "744160"
  },
  {
    "text": "created that output",
    "start": "744160",
    "end": "745519"
  },
  {
    "text": "and that will allow you to gradually",
    "start": "745519",
    "end": "746959"
  },
  {
    "text": "trace back the whole pipeline to what",
    "start": "746959",
    "end": "749519"
  },
  {
    "text": "code was run what data was inputted um",
    "start": "749519",
    "end": "752560"
  },
  {
    "text": "you can use a distributed tracer",
    "start": "752560",
    "end": "754639"
  },
  {
    "text": "and use unique identifiers to track at",
    "start": "754639",
    "end": "757200"
  },
  {
    "text": "every step",
    "start": "757200",
    "end": "758399"
  },
  {
    "text": "how the data mutated and you know which",
    "start": "758399",
    "end": "762880"
  },
  {
    "text": "identifier points the next subsequent",
    "start": "762880",
    "end": "765040"
  },
  {
    "text": "identifier",
    "start": "765040",
    "end": "765920"
  },
  {
    "text": "etc there are other ways to do this",
    "start": "765920",
    "end": "769279"
  },
  {
    "text": "you can do this via logging as well",
    "start": "769279",
    "end": "772560"
  },
  {
    "text": "it is important to just have some level",
    "start": "772560",
    "end": "774800"
  },
  {
    "text": "of data lineage it doesn't need to be",
    "start": "774800",
    "end": "776560"
  },
  {
    "text": "fully robust",
    "start": "776560",
    "end": "777600"
  },
  {
    "text": "in the beginning maybe just having a",
    "start": "777600",
    "end": "780399"
  },
  {
    "text": "data source at the",
    "start": "780399",
    "end": "782079"
  },
  {
    "text": "as the um as some sort of metadata tie",
    "start": "782079",
    "end": "785440"
  },
  {
    "text": "to your output",
    "start": "785440",
    "end": "788240"
  },
  {
    "start": "788000",
    "end": "921000"
  },
  {
    "text": "so the test frame feature so there's a",
    "start": "788720",
    "end": "790720"
  },
  {
    "text": "strong reason to",
    "start": "790720",
    "end": "792240"
  },
  {
    "text": "you know advocate for rejecting or",
    "start": "792240",
    "end": "796160"
  },
  {
    "text": "any unexpected data out front but",
    "start": "796160",
    "end": "799279"
  },
  {
    "text": "that's not always possible you can't",
    "start": "799279",
    "end": "801519"
  },
  {
    "text": "again you know with the observability",
    "start": "801519",
    "end": "803279"
  },
  {
    "text": "model you",
    "start": "803279",
    "end": "804000"
  },
  {
    "text": "can accommodate for all known edge cases",
    "start": "804000",
    "end": "808160"
  },
  {
    "text": "so this is where having a test front",
    "start": "808160",
    "end": "809760"
  },
  {
    "text": "might be helpful because you might want",
    "start": "809760",
    "end": "811839"
  },
  {
    "text": "to be able to",
    "start": "811839",
    "end": "814000"
  },
  {
    "text": "run the data against the code or the",
    "start": "814000",
    "end": "817200"
  },
  {
    "text": "logic",
    "start": "817200",
    "end": "818160"
  },
  {
    "text": "and see what the output will look like",
    "start": "818160",
    "end": "819920"
  },
  {
    "text": "and be able to do a couple of sanity",
    "start": "819920",
    "end": "821920"
  },
  {
    "text": "checks before deploying the data",
    "start": "821920",
    "end": "823600"
  },
  {
    "text": "pipeline into production",
    "start": "823600",
    "end": "825839"
  },
  {
    "text": "so this allows you to have a gradual and",
    "start": "825839",
    "end": "828639"
  },
  {
    "text": "opt",
    "start": "828639",
    "end": "829680"
  },
  {
    "text": "optional validation which allows you to",
    "start": "829680",
    "end": "831760"
  },
  {
    "text": "build up the domain expertise you need",
    "start": "831760",
    "end": "834320"
  },
  {
    "text": "um to enforce data quality on your",
    "start": "834320",
    "end": "837440"
  },
  {
    "text": "system um so the test allows you to",
    "start": "837440",
    "end": "840720"
  },
  {
    "text": "validate sort of the assumptions you",
    "start": "840720",
    "end": "842399"
  },
  {
    "text": "might have about the data itself",
    "start": "842399",
    "end": "844480"
  },
  {
    "text": "um without compromising a production",
    "start": "844480",
    "end": "846880"
  },
  {
    "text": "system",
    "start": "846880",
    "end": "849279"
  },
  {
    "text": "so to to that then you know within data",
    "start": "849279",
    "end": "852560"
  },
  {
    "text": "science you definitely make a lot of",
    "start": "852560",
    "end": "854079"
  },
  {
    "text": "assumptions about the data",
    "start": "854079",
    "end": "855600"
  },
  {
    "text": "whether it's about where the data comes",
    "start": "855600",
    "end": "857519"
  },
  {
    "text": "from what it means",
    "start": "857519",
    "end": "858639"
  },
  {
    "text": "but also in terms of the um",
    "start": "858639",
    "end": "862240"
  },
  {
    "text": "the criteria of the data so do you have",
    "start": "862240",
    "end": "864800"
  },
  {
    "text": "a string value",
    "start": "864800",
    "end": "865839"
  },
  {
    "text": "do you always have a numerical value",
    "start": "865839",
    "end": "867600"
  },
  {
    "text": "what data type is",
    "start": "867600",
    "end": "869120"
  },
  {
    "text": "within this field do you always have",
    "start": "869120",
    "end": "871199"
  },
  {
    "text": "this column",
    "start": "871199",
    "end": "872399"
  },
  {
    "text": "do you sometimes have this other extra",
    "start": "872399",
    "end": "874320"
  },
  {
    "text": "field et cetera",
    "start": "874320",
    "end": "876639"
  },
  {
    "text": "and it's really important that you're",
    "start": "876639",
    "end": "879199"
  },
  {
    "text": "able to",
    "start": "879199",
    "end": "881120"
  },
  {
    "text": "you know be able to define a schema",
    "start": "881120",
    "end": "884639"
  },
  {
    "text": "for the data that you are working with",
    "start": "884639",
    "end": "886560"
  },
  {
    "text": "and document changes",
    "start": "886560",
    "end": "887920"
  },
  {
    "text": "evolution to that schema um you know",
    "start": "887920",
    "end": "891199"
  },
  {
    "text": "schema should be able to be pretty",
    "start": "891199",
    "end": "893600"
  },
  {
    "text": "dynamic",
    "start": "893600",
    "end": "894560"
  },
  {
    "text": "and you can use that to save our against",
    "start": "894560",
    "end": "898000"
  },
  {
    "text": "malformed data once you validate",
    "start": "898000",
    "end": "899839"
  },
  {
    "text": "your assumptions um so",
    "start": "899839",
    "end": "903440"
  },
  {
    "text": "you know the to close that out testing",
    "start": "903440",
    "end": "906399"
  },
  {
    "text": "the",
    "start": "906399",
    "end": "906720"
  },
  {
    "text": "pipeline is really important because",
    "start": "906720",
    "end": "908079"
  },
  {
    "text": "then you have the ability to",
    "start": "908079",
    "end": "910720"
  },
  {
    "text": "validate the data transformation at",
    "start": "910720",
    "end": "913279"
  },
  {
    "text": "least a little bit before committing",
    "start": "913279",
    "end": "914880"
  },
  {
    "text": "your data to",
    "start": "914880",
    "end": "917440"
  },
  {
    "text": "a production database",
    "start": "917440",
    "end": "920800"
  },
  {
    "start": "921000",
    "end": "1168000"
  },
  {
    "text": "so on testing monitoring and alerting",
    "start": "922160",
    "end": "926399"
  },
  {
    "text": "uh so i have the test pyramid this is a",
    "start": "926399",
    "end": "930160"
  },
  {
    "text": "pretty well-known",
    "start": "930160",
    "end": "931279"
  },
  {
    "text": "test pyramid and it",
    "start": "931279",
    "end": "934480"
  },
  {
    "text": "sort of outlines that the at the very",
    "start": "934480",
    "end": "937120"
  },
  {
    "text": "base you want to have",
    "start": "937120",
    "end": "938399"
  },
  {
    "text": "a unit tests that test for granular",
    "start": "938399",
    "end": "940880"
  },
  {
    "text": "logic",
    "start": "940880",
    "end": "941759"
  },
  {
    "text": "for each function of the code you have",
    "start": "941759",
    "end": "943759"
  },
  {
    "text": "service level tests and then you have",
    "start": "943759",
    "end": "945199"
  },
  {
    "text": "some",
    "start": "945199",
    "end": "945680"
  },
  {
    "text": "some ui tests um for your user",
    "start": "945680",
    "end": "948079"
  },
  {
    "text": "experience",
    "start": "948079",
    "end": "949360"
  },
  {
    "text": "uh i would argue that for for data",
    "start": "949360",
    "end": "951440"
  },
  {
    "text": "science and data pipeline there are a",
    "start": "951440",
    "end": "953040"
  },
  {
    "text": "couple of extra",
    "start": "953040",
    "end": "954560"
  },
  {
    "text": "testing criterias one is a regression",
    "start": "954560",
    "end": "957600"
  },
  {
    "text": "test",
    "start": "957600",
    "end": "958560"
  },
  {
    "text": "being able to identify that you have not",
    "start": "958560",
    "end": "961120"
  },
  {
    "text": "regressed",
    "start": "961120",
    "end": "962000"
  },
  {
    "text": "since your previous release and within",
    "start": "962000",
    "end": "964959"
  },
  {
    "text": "data science",
    "start": "964959",
    "end": "965920"
  },
  {
    "text": "modeling this can sometimes be known as",
    "start": "965920",
    "end": "968800"
  },
  {
    "text": "the champion challenger",
    "start": "968800",
    "end": "971279"
  },
  {
    "text": "model so you might have two models",
    "start": "971279",
    "end": "974320"
  },
  {
    "text": "running simultaneously in production and",
    "start": "974320",
    "end": "976880"
  },
  {
    "text": "over time you're measuring the precision",
    "start": "976880",
    "end": "979040"
  },
  {
    "text": "and recall",
    "start": "979040",
    "end": "980079"
  },
  {
    "text": "of both models and whoever performs",
    "start": "980079",
    "end": "983279"
  },
  {
    "text": "better",
    "start": "983279",
    "end": "984079"
  },
  {
    "text": "ends up being deployed into production",
    "start": "984079",
    "end": "985920"
  },
  {
    "text": "so you could have model a which has been",
    "start": "985920",
    "end": "987839"
  },
  {
    "text": "running in production for a while",
    "start": "987839",
    "end": "989440"
  },
  {
    "text": "and maybe you develop model b but you",
    "start": "989440",
    "end": "992240"
  },
  {
    "text": "should be able to measure precision and",
    "start": "992240",
    "end": "993680"
  },
  {
    "text": "recall for both of them against the same",
    "start": "993680",
    "end": "995600"
  },
  {
    "text": "data set before",
    "start": "995600",
    "end": "997120"
  },
  {
    "text": "understanding which one is actually the",
    "start": "997120",
    "end": "999199"
  },
  {
    "text": "better model",
    "start": "999199",
    "end": "1001759"
  },
  {
    "text": "so i want to be able to compare i guess",
    "start": "1001920",
    "end": "1005120"
  },
  {
    "text": "testing",
    "start": "1005120",
    "end": "1006160"
  },
  {
    "text": "and monitoring ideas",
    "start": "1006160",
    "end": "1009440"
  },
  {
    "text": "between restful apis and data pipelining",
    "start": "1009440",
    "end": "1012880"
  },
  {
    "text": "so within rest apis it's pretty normal",
    "start": "1012880",
    "end": "1015600"
  },
  {
    "text": "to have a health check endpoint",
    "start": "1015600",
    "end": "1017120"
  },
  {
    "text": "um and you can periodically pin your",
    "start": "1017120",
    "end": "1019360"
  },
  {
    "text": "health check endpoint to verify that",
    "start": "1019360",
    "end": "1021040"
  },
  {
    "text": "you're getting a 200 status code",
    "start": "1021040",
    "end": "1023600"
  },
  {
    "text": "for data pipelines there's something",
    "start": "1023600",
    "end": "1025760"
  },
  {
    "text": "similar for batch jobs you can check",
    "start": "1025760",
    "end": "1027839"
  },
  {
    "text": "that",
    "start": "1027839",
    "end": "1028319"
  },
  {
    "text": "a job has succeeded and that a job that",
    "start": "1028319",
    "end": "1030720"
  },
  {
    "text": "is expected to succeed is continuing to",
    "start": "1030720",
    "end": "1032880"
  },
  {
    "text": "succeed",
    "start": "1032880",
    "end": "1035199"
  },
  {
    "text": "for web services if you have um",
    "start": "1035199",
    "end": "1038640"
  },
  {
    "text": "you know a post endpoint for a cred api",
    "start": "1038640",
    "end": "1042480"
  },
  {
    "text": "you can have an integration test that",
    "start": "1042480",
    "end": "1045600"
  },
  {
    "text": "posts in one endpoint and then you",
    "start": "1045600",
    "end": "1047280"
  },
  {
    "text": "should be able to actually see the",
    "start": "1047280",
    "end": "1048400"
  },
  {
    "text": "correct data from a get endpoint",
    "start": "1048400",
    "end": "1050799"
  },
  {
    "text": "kind of very similar with data pipelines",
    "start": "1050799",
    "end": "1052640"
  },
  {
    "text": "you should be able to",
    "start": "1052640",
    "end": "1054080"
  },
  {
    "text": "you know input a data pipeline with some",
    "start": "1054080",
    "end": "1056720"
  },
  {
    "text": "fake data and",
    "start": "1056720",
    "end": "1057840"
  },
  {
    "text": "have the output of the data pipeline be",
    "start": "1057840",
    "end": "1060000"
  },
  {
    "text": "some expected result",
    "start": "1060000",
    "end": "1062559"
  },
  {
    "text": "latency is another concept so with web",
    "start": "1062559",
    "end": "1065600"
  },
  {
    "text": "services that's sort of the average",
    "start": "1065600",
    "end": "1066960"
  },
  {
    "text": "response time of an api",
    "start": "1066960",
    "end": "1068559"
  },
  {
    "text": "and web services with rest framework",
    "start": "1068559",
    "end": "1071039"
  },
  {
    "text": "should really be real time",
    "start": "1071039",
    "end": "1072799"
  },
  {
    "text": "and with data pipelines um if you have a",
    "start": "1072799",
    "end": "1075440"
  },
  {
    "text": "batch system",
    "start": "1075440",
    "end": "1076640"
  },
  {
    "text": "you know you're you should know what the",
    "start": "1076640",
    "end": "1079200"
  },
  {
    "text": "expected time it takes for the data",
    "start": "1079200",
    "end": "1080799"
  },
  {
    "text": "pipeline to complete is so that you can",
    "start": "1080799",
    "end": "1082320"
  },
  {
    "text": "appropriately measure it",
    "start": "1082320",
    "end": "1084000"
  },
  {
    "text": "and monitor for it some monitoring tools",
    "start": "1084000",
    "end": "1088400"
  },
  {
    "text": "i want to talk about prometheus is a",
    "start": "1088400",
    "end": "1091039"
  },
  {
    "text": "time series metrics database",
    "start": "1091039",
    "end": "1092880"
  },
  {
    "text": "grafana is then used for visualizing",
    "start": "1092880",
    "end": "1095520"
  },
  {
    "text": "time series data",
    "start": "1095520",
    "end": "1096880"
  },
  {
    "text": "being able to visualize your um",
    "start": "1096880",
    "end": "1100480"
  },
  {
    "text": "being able to visualize anything is",
    "start": "1100480",
    "end": "1102080"
  },
  {
    "text": "incredibly powerful",
    "start": "1102080",
    "end": "1103679"
  },
  {
    "text": "so having a dashboard that allows you to",
    "start": "1103679",
    "end": "1106160"
  },
  {
    "text": "see metrics is really powerful",
    "start": "1106160",
    "end": "1108880"
  },
  {
    "text": "and with time series metrics you can set",
    "start": "1108880",
    "end": "1111919"
  },
  {
    "text": "up",
    "start": "1111919",
    "end": "1112720"
  },
  {
    "text": "alerts for them so you can set the time",
    "start": "1112720",
    "end": "1115520"
  },
  {
    "text": "series metrics",
    "start": "1115520",
    "end": "1116640"
  },
  {
    "text": "for batch jobs you can gather metric for",
    "start": "1116640",
    "end": "1120559"
  },
  {
    "text": "how long it took a job to be successful",
    "start": "1120559",
    "end": "1123280"
  },
  {
    "text": "and then you can alert",
    "start": "1123280",
    "end": "1124400"
  },
  {
    "text": "on if it took longer than expected",
    "start": "1124400",
    "end": "1128960"
  },
  {
    "text": "uh so for alerting to set a threshold",
    "start": "1128960",
    "end": "1132559"
  },
  {
    "text": "that works for you",
    "start": "1132559",
    "end": "1133840"
  },
  {
    "text": "establish a baseline and go from there",
    "start": "1133840",
    "end": "1136480"
  },
  {
    "text": "and",
    "start": "1136480",
    "end": "1136880"
  },
  {
    "text": "you can then come up with more clever",
    "start": "1136880",
    "end": "1139520"
  },
  {
    "text": "algorithms for alerting",
    "start": "1139520",
    "end": "1141679"
  },
  {
    "text": "um can't talk about allergen without",
    "start": "1141679",
    "end": "1144480"
  },
  {
    "text": "talking about paging",
    "start": "1144480",
    "end": "1146160"
  },
  {
    "text": "you can page on symptoms and not root",
    "start": "1146160",
    "end": "1148160"
  },
  {
    "text": "causes create a trail of causes of",
    "start": "1148160",
    "end": "1150320"
  },
  {
    "text": "diagnostics",
    "start": "1150320",
    "end": "1152000"
  },
  {
    "text": "uh data lineage immutable testosterone",
    "start": "1152000",
    "end": "1154160"
  },
  {
    "text": "ease of development when working with",
    "start": "1154160",
    "end": "1155760"
  },
  {
    "text": "evolving data",
    "start": "1155760",
    "end": "1157360"
  },
  {
    "text": "monitoring and alerting allows for",
    "start": "1157360",
    "end": "1159440"
  },
  {
    "text": "overall pipeline to be more observable",
    "start": "1159440",
    "end": "1162720"
  },
  {
    "text": "and that is it i will take questions",
    "start": "1162720",
    "end": "1169120"
  }
]