[
  {
    "start": "0",
    "end": "278000"
  },
  {
    "text": "[Music]",
    "start": "980",
    "end": "7849"
  },
  {
    "text": "all right so let's let's begin where it all began",
    "start": "12139",
    "end": "17940"
  },
  {
    "text": "right the the origin of what we know now",
    "start": "17940",
    "end": "23130"
  },
  {
    "text": "as the Spring Framework is actually in the book the this is actually good",
    "start": "23130",
    "end": "29099"
  },
  {
    "text": "indication of where this talk is going there are quite a few historic images I've intentionally not touched them so",
    "start": "29099",
    "end": "36840"
  },
  {
    "text": "they they date back to in this case of course 16 years ago and some of them of",
    "start": "36840",
    "end": "44129"
  },
  {
    "text": "course show their age very intentionally anyway this is the original book it's j2e design and development by rod",
    "start": "44129",
    "end": "51780"
  },
  {
    "text": "Johnson published by rocks back then this book was published in early",
    "start": "51780",
    "end": "57899"
  },
  {
    "text": "December 2002 and I bought it just when it came out and I read it over Christmas",
    "start": "57899",
    "end": "65070"
  },
  {
    "text": "and New Year break 2002 to 2003 myself it's has about or almost like 700 pages",
    "start": "65070",
    "end": "72330"
  },
  {
    "text": "so it was quite a read and it came with a download it it of course was",
    "start": "72330",
    "end": "78509"
  },
  {
    "text": "explaining a lot of design patterns but that was sought sort of half of it the other half was a sketch for a framework",
    "start": "78509",
    "end": "87299"
  },
  {
    "text": "of a different kind that-that-that's catch that very early",
    "start": "87299",
    "end": "92390"
  },
  {
    "text": "incomplete prototype also came as a download in a combo in the first only one package with the book and it didn't",
    "start": "92390",
    "end": "99180"
  },
  {
    "text": "have a name there was no notion of this being named spring anywhere in that book",
    "start": "99180",
    "end": "104630"
  },
  {
    "text": "anyway I really loved what I read here not just from the perspective of the",
    "start": "104630",
    "end": "112740"
  },
  {
    "text": "recommendations and the coverage that rod had here but also kind of his perspective his his style his his vision",
    "start": "112740",
    "end": "120000"
  },
  {
    "text": "for how things should be was very much in line with what I was I was a Java",
    "start": "120000",
    "end": "125610"
  },
  {
    "text": "Enterprise Architect at that time so I was suffering through a lot of the same",
    "start": "125610",
    "end": "130709"
  },
  {
    "text": "kind of issues the the next step that we took our",
    "start": "130709",
    "end": "137410"
  },
  {
    "text": "wealth was actually a step I took I I got in touch with him just like in in",
    "start": "137410",
    "end": "142870"
  },
  {
    "text": "late December early January I dropped him a note back then of course without any other social media channels that was",
    "start": "142870",
    "end": "149200"
  },
  {
    "text": "a feedback mechanism at the rocks website I got in touch with him and",
    "start": "149200",
    "end": "154750"
  },
  {
    "text": "asked him would you consider taking this forward right taking this this this",
    "start": "154750",
    "end": "160210"
  },
  {
    "text": "basic prototype for a framework and and productizing it turning it into a proper open source project rather than just the",
    "start": "160210",
    "end": "166810"
  },
  {
    "text": "download that comes with a book and rod was initially reluctant to do this he",
    "start": "166810",
    "end": "173320"
  },
  {
    "text": "wrote he spent like nine or ten months writing this book right he he was a consultant himself he wanted to get back",
    "start": "173320",
    "end": "179290"
  },
  {
    "text": "into business and kind of following up a book with starting an open source",
    "start": "179290",
    "end": "185890"
  },
  {
    "text": "project didn't appeal too much to him but he reached back out and said like",
    "start": "185890",
    "end": "191230"
  },
  {
    "text": "what if you committed yourself to sharing the load right if if we Co if we",
    "start": "191230",
    "end": "197290"
  },
  {
    "text": "are co responsible for the initiation of this project then I'm I'm willing to do",
    "start": "197290",
    "end": "203290"
  },
  {
    "text": "it and I'm willing to make it a part of my the next few years of my career and that's exactly what we did in January we",
    "start": "203290",
    "end": "210790"
  },
  {
    "text": "didn't waste a lot of time we just had about a couple of weeks of set-up time",
    "start": "210790",
    "end": "215800"
  },
  {
    "text": "and we took the the prototype code that came with the book uploaded it to sourceforge.net to github.com of the",
    "start": "215800",
    "end": "223060"
  },
  {
    "text": "times all right so SourceForge anybody remember source work and we we of course",
    "start": "223060",
    "end": "230890"
  },
  {
    "text": "had to choose a project name when we uploaded it in in sauce which you can't",
    "start": "230890",
    "end": "237700"
  },
  {
    "text": "change the name after the fact right a repository AAA a sub-domain that sauce which has a fixed name from its",
    "start": "237700",
    "end": "243970"
  },
  {
    "text": "inception so that was the time when we had to choose a name for this project and there were a couple of names up in",
    "start": "243970",
    "end": "249910"
  },
  {
    "text": "the air in the end there was a there were a couple of other people also on that feedback forum around that book and",
    "start": "249910",
    "end": "256419"
  },
  {
    "text": "it was one of them suggesting the name spring if I remember correctly and rather than myself we immediately",
    "start": "256419",
    "end": "263289"
  },
  {
    "text": "loved the name and for the uniqueness of the name we added the kind of framework term right so Spring Framework sauce which net that",
    "start": "263289",
    "end": "270760"
  },
  {
    "text": "spring from back name it sauce which was actually chosen when we upload the data",
    "start": "270760",
    "end": "275830"
  },
  {
    "text": "source watching in February 2003 and this is what turned into spring from a",
    "start": "275830",
    "end": "281500"
  },
  {
    "start": "278000",
    "end": "444000"
  },
  {
    "text": "code-nine released in June 2003 this is already a much more complete version of",
    "start": "281500",
    "end": "289449"
  },
  {
    "text": "the framework then what came with the book there was a lot of work done when when rod committed himself to this and",
    "start": "289449",
    "end": "296169"
  },
  {
    "text": "when I committed at the time like half of my my time I took half of the time of",
    "start": "296169",
    "end": "301180"
  },
  {
    "text": "my job to do this then I then we really spent a lot of time trying to reach a",
    "start": "301180",
    "end": "307750"
  },
  {
    "text": "sort of complete initial Minimum Viable Product we would say this at this in",
    "start": "307750",
    "end": "314050"
  },
  {
    "text": "these times all that nine wasn't quite what it was meant to be yet but we",
    "start": "314050",
    "end": "320560"
  },
  {
    "text": "decided to release early June 2003 this was already the first release that I did",
    "start": "320560",
    "end": "327850"
  },
  {
    "text": "that I was responsible for and ever since Oh dot nine every single spring",
    "start": "327850",
    "end": "333610"
  },
  {
    "text": "framework release was signed off by myself for a long time even tested and",
    "start": "333610",
    "end": "339130"
  },
  {
    "text": "uploaded myself am I'm quite a control freak in that respect but literally my",
    "start": "339130",
    "end": "345460"
  },
  {
    "text": "responsibilities as a release manager are very essential to my own definition of my responsibilities here and it",
    "start": "345460",
    "end": "353500"
  },
  {
    "text": "started with out at nine never let go of it there was a another almost a year",
    "start": "353500",
    "end": "360789"
  },
  {
    "text": "like nine months up until our declaration of wonder though generally available already in the work dot spring",
    "start": "360789",
    "end": "368020"
  },
  {
    "text": "frame at namespace at the time and pretty much in the shape that we know it at now if you look at the core framework",
    "start": "368020",
    "end": "375610"
  },
  {
    "text": "not necessarily the usage model but much of the structure the module structure",
    "start": "375610",
    "end": "382570"
  },
  {
    "text": "the package structure D the mechanisms at the core of the container we're",
    "start": "382570",
    "end": "387699"
  },
  {
    "text": "already in place back then and are still in place now in an evolved form of course the usage model was off the time",
    "start": "387699",
    "end": "396219"
  },
  {
    "text": "right XML beam definition matching web.xml matching hibernate xml mapping files was a very common thing to",
    "start": "396219",
    "end": "403060"
  },
  {
    "text": "do for metadata definitions and in its immediate follow-up evolution in spring",
    "start": "403060",
    "end": "409780"
  },
  {
    "text": "fam'ly quando 2 we already started doing some transaction annotation support was",
    "start": "409780",
    "end": "417160"
  },
  {
    "text": "actually the first thing we ever did in terms of annotation support was the transactional annotation little complex",
    "start": "417160",
    "end": "423400"
  },
  {
    "text": "to set up at the time but already built on jdk 5 so even if everybody out there",
    "start": "423400",
    "end": "429730"
  },
  {
    "text": "in the industry was using jdk 1 4 at the time we already started kind of",
    "start": "429730",
    "end": "435010"
  },
  {
    "text": "embracing some JDK 5 features somewhat early on well talking about the Java",
    "start": "435010",
    "end": "442600"
  },
  {
    "text": "Enterprise landscape of the time there were already quite a few open source projects of immediate relevance even up",
    "start": "442600",
    "end": "451420"
  },
  {
    "start": "444000",
    "end": "536000"
  },
  {
    "text": "until today so I'm dubbing this the struts era here at the opechee struts",
    "start": "451420",
    "end": "458080"
  },
  {
    "text": "was of course the web framework of the time very very popular of course a reference point for what we were doing",
    "start": "458080",
    "end": "464440"
  },
  {
    "text": "and it was actually one of the things I initially had to look at as I was very",
    "start": "464440",
    "end": "471330"
  },
  {
    "text": "well intimate with Stratos evolution myself when I started this but struts",
    "start": "471330",
    "end": "479590"
  },
  {
    "text": "faded out over the years but those projects did not Tomcats the early days",
    "start": "479590",
    "end": "485140"
  },
  {
    "text": "of target at the time jetty quite established already actually hibernate dating back to almost the same inception",
    "start": "485140",
    "end": "491200"
  },
  {
    "text": "point where were spring started and what turned into the Eclipse Foundation the",
    "start": "491200",
    "end": "496810"
  },
  {
    "text": "Eclipse IDE when we started this Eclipse was just about getting started I I was",
    "start": "496810",
    "end": "503500"
  },
  {
    "text": "actually in IntelliJ IDEA user and still am so I never I saw Eclipse coming up but never moved away from IntelliJ my",
    "start": "503500",
    "end": "510730"
  },
  {
    "text": "IntelliJ adoption predates the inception of the Eclipse IDE anyway but this is",
    "start": "510730",
    "end": "518560"
  },
  {
    "text": "actually quite significant just like spring all of those projects here have a lifetime of 1516 years and counting in",
    "start": "518560",
    "end": "526450"
  },
  {
    "text": "the Java ecosystem which I find quite impressive for such a large set up for so many projects too",
    "start": "526450",
    "end": "532000"
  },
  {
    "text": "kind of make their way through all those times the our book efforts of course",
    "start": "532000",
    "end": "539710"
  },
  {
    "text": "continued there was a second book which I'm omitting here the cover looked almost the same as the j2ee design",
    "start": "539710",
    "end": "549460"
  },
  {
    "text": "development one was called j2e development without AGB which i",
    "start": "549460",
    "end": "554980"
  },
  {
    "text": "co-authored so an immediate follow-up an immediate pair to this book but it was",
    "start": "554980",
    "end": "560110"
  },
  {
    "text": "also a year a third book in the works in this third book was already very spring",
    "start": "560110",
    "end": "569050"
  },
  {
    "start": "566000",
    "end": "639000"
  },
  {
    "text": "centric with this was the first dedicated spring from a book that we did professional Java development with the",
    "start": "569050",
    "end": "575380"
  },
  {
    "text": "spring framework covering spring firma quanta - this was a bit of a tough one",
    "start": "575380",
    "end": "581440"
  },
  {
    "text": "all of the five authors in this nice little contrived photo setup up there",
    "start": "581440",
    "end": "588220"
  },
  {
    "text": "all of all of us spent a lot of time working on the open source project on",
    "start": "588220",
    "end": "593230"
  },
  {
    "text": "the book project side by side and we figured this is not sustainable it was the last book project we were involved",
    "start": "593230",
    "end": "600310"
  },
  {
    "text": "in as office I believe this is actually true for all five of us so we never ever",
    "start": "600310",
    "end": "605470"
  },
  {
    "text": "we're involved in the project again we changed cause afterwards a little we started supporting book projects in the",
    "start": "605470",
    "end": "612580"
  },
  {
    "text": "ecosystem we supported other office in writing books about spring which makes",
    "start": "612580",
    "end": "617620"
  },
  {
    "text": "much more sense and our energy was focused on the open source development story itself in parallel to this we",
    "start": "617620",
    "end": "625120"
  },
  {
    "text": "heard a business going a consulting business going we needed to earn some money to sustain the open source",
    "start": "625120",
    "end": "630490"
  },
  {
    "text": "development here so we were all kind of a little challenged from several sides",
    "start": "630490",
    "end": "636720"
  },
  {
    "text": "in any case when this book was done the next big thing was the Spring Framework",
    "start": "636720",
    "end": "642430"
  },
  {
    "start": "639000",
    "end": "729000"
  },
  {
    "text": "- the DOE effort very much a collaborative team effort we spend a lot of a lot of energy on not only kind of",
    "start": "642430",
    "end": "651670"
  },
  {
    "text": "doing the obvious but also going out there listening to what what people tell",
    "start": "651670",
    "end": "658210"
  },
  {
    "text": "us what's what's missing what would you like to have in a more convenient form Spring Framework - the dough is already",
    "start": "658210",
    "end": "664720"
  },
  {
    "text": "very much a commune effort but it's also a it's also a a soul of little corporate-sponsored",
    "start": "664720",
    "end": "672950"
  },
  {
    "text": "effort already we had a launch point we had a countdown on our website when it",
    "start": "672950",
    "end": "678950"
  },
  {
    "text": "went out so there was almost a marketing campaign around it so it in in that sense it was already a quiet",
    "start": "678950",
    "end": "685220"
  },
  {
    "text": "professionally sponsored open source project still XML based with schema",
    "start": "685220",
    "end": "691400"
  },
  {
    "text": "namespaces configuration convenience coming in through XML namespaces but",
    "start": "691400",
    "end": "696650"
  },
  {
    "text": "even more initation support coming in in in its immediate follow-up 2.5 a year",
    "start": "696650",
    "end": "702350"
  },
  {
    "text": "later we already started doing annotation driven injection in almost to the full extent that we still supported",
    "start": "702350",
    "end": "709040"
  },
  {
    "text": "today and in particular we started doing web endpoints HTTP endpoint mappings in",
    "start": "709040",
    "end": "716360"
  },
  {
    "text": "the web framework through annotations the ad control and all the at request mapping model dates back to that time",
    "start": "716360",
    "end": "722570"
  },
  {
    "text": "2.5 november 2007 is actually quite early and it's still in place today so",
    "start": "722570",
    "end": "730960"
  },
  {
    "start": "729000",
    "end": "770000"
  },
  {
    "text": "the story continues in and just taking a little bit more reach out there",
    "start": "730960",
    "end": "737900"
  },
  {
    "text": "it got broader the all of the portfolio got broader we started embracing groovy",
    "start": "737900",
    "end": "744550"
  },
  {
    "text": "we started working with the Grails guys our company back then Springs was acquired the little company that ranked",
    "start": "744550",
    "end": "750920"
  },
  {
    "text": "Ruby and Grail soon after the gray Grails as a ruby based web application",
    "start": "750920",
    "end": "757430"
  },
  {
    "text": "framework is his spring based it still is and we kind of co-evolved Grails with",
    "start": "757430",
    "end": "765110"
  },
  {
    "text": "the with the core framework we started Co evolving it at that time we also had",
    "start": "765110",
    "end": "772850"
  },
  {
    "start": "770000",
    "end": "929000"
  },
  {
    "text": "a much more professional marketing well department right already mentioned we",
    "start": "772850",
    "end": "778339"
  },
  {
    "text": "had to spring from work to the dole launch and we had a new guy in charge of marketing US based of course our company",
    "start": "778339",
    "end": "786350"
  },
  {
    "text": "interface 21 with UK based initially it moved to it moved its headquarters to the US with our first round of venture",
    "start": "786350",
    "end": "794420"
  },
  {
    "text": "capital with the series a investment so we had a a us-based sales and marketing",
    "start": "794420",
    "end": "802190"
  },
  {
    "text": "department now what do what what do US marketing guys do when they see a little",
    "start": "802190",
    "end": "809810"
  },
  {
    "text": "bit of Java open-source and kind of a competition between Java EE and spring going on they come up with metaphors",
    "start": "809810",
    "end": "817400"
  },
  {
    "text": "right and this one I have very strong memories about still this is a campaign",
    "start": "817400",
    "end": "824330"
  },
  {
    "text": "led by our US marketing it was called weapons for the war on Java complexity",
    "start": "824330",
    "end": "830200"
  },
  {
    "text": "Saudis of course are spraying battleships rights probably can't read this properly so there's a those are",
    "start": "830200",
    "end": "836210"
  },
  {
    "text": "named spring those RTC so ever tanks TC server was our Tomcat distribution with",
    "start": "836210",
    "end": "842510"
  },
  {
    "text": "commercial support around it and these are DM server fighter planes DM server was our OSGi based runtime environment",
    "start": "842510",
    "end": "849230"
  },
  {
    "text": "which we donated to the Eclipse Foundation and it now lives as Eclipse Burgo those were surrounding projects of",
    "start": "849230",
    "end": "855980"
  },
  {
    "text": "the time in particular by by SpringSource in terms of its corporate",
    "start": "855980",
    "end": "862040"
  },
  {
    "text": "offering that had support options attached to it but you know a complexity",
    "start": "862040",
    "end": "868040"
  },
  {
    "text": "Nia attacked by spring battleships and like TC server tanks and how could you",
    "start": "868040",
    "end": "875390"
  },
  {
    "text": "it's when we saw that campaign when I and other European stakeholders of ours",
    "start": "875390",
    "end": "881810"
  },
  {
    "text": "so that campaign for the first time you may imagine what we felt like right it's sort of like okay could we just roll",
    "start": "881810",
    "end": "889580"
  },
  {
    "text": "this back and kind of I mean do what you want in the US but please don't turn this into a global campaign from a from",
    "start": "889580",
    "end": "897860"
  },
  {
    "text": "a European perspective these these these metaphors now we start cringing basically when we see this whereas in",
    "start": "897860",
    "end": "904400"
  },
  {
    "text": "the in the US keep in mind in the US state declare war on on something very",
    "start": "904400",
    "end": "910850"
  },
  {
    "text": "quickly right war on drugs war on poverty of course all the real world let's keep that aside but but they used",
    "start": "910850",
    "end": "917210"
  },
  {
    "text": "they overuse the war metaphor I mean like war on drugs war on poverty",
    "start": "917210",
    "end": "922400"
  },
  {
    "text": "so one complexity doesn't seem so wrong to them anyway let's let's get over this",
    "start": "922400",
    "end": "930170"
  },
  {
    "start": "929000",
    "end": "1022000"
  },
  {
    "text": "one the the spring portfolio grew quite a bit we",
    "start": "930170",
    "end": "936280"
  },
  {
    "text": "moved from essentially a single co-op and sauce project with just a few",
    "start": "936280",
    "end": "941480"
  },
  {
    "text": "settler projects around it to an ecosystem arrangement where several",
    "start": "941480",
    "end": "947050"
  },
  {
    "text": "high-profile projects started evolving around it so spring integration started in 2007",
    "start": "947050",
    "end": "953660"
  },
  {
    "text": "spring wet flow was well very popular at the time it's still very much in use today maybe not for new application",
    "start": "953660",
    "end": "960140"
  },
  {
    "text": "development but still there there was a lot of value and a lot of community",
    "start": "960140",
    "end": "965330"
  },
  {
    "text": "reach gained by several other projects around us Spring web services soap and",
    "start": "965330",
    "end": "971060"
  },
  {
    "text": "whistle at the time all of those projects still exists in some form",
    "start": "971060",
    "end": "976100"
  },
  {
    "text": "we even had spring Roo which was a kind of aspectj cogeneration based sort of",
    "start": "976100",
    "end": "982610"
  },
  {
    "text": "predecessor to what what we now know as spring boots who had our attempts of kind of entry point frameworks of an",
    "start": "982610",
    "end": "991160"
  },
  {
    "text": "easier getting started experience even in those early days we had an eclipse",
    "start": "991160",
    "end": "996620"
  },
  {
    "text": "distribution already called Springs us tools wit that still exists in a different form right now so they does a",
    "start": "996620",
    "end": "1003790"
  },
  {
    "text": "lot of stuff going around going on around the Spring Framework spring is",
    "start": "1003790",
    "end": "1010290"
  },
  {
    "text": "still in this position of being the Spring Framework itself of being the heart of an ecosystem right now of",
    "start": "1010290",
    "end": "1016750"
  },
  {
    "text": "course but it's already we already live in an ecosystem arrangement for more than ten years so all of these things",
    "start": "1016750",
    "end": "1025750"
  },
  {
    "start": "1022000",
    "end": "1154000"
  },
  {
    "text": "and in particular the DD the whole ecosystem character of it all was a",
    "start": "1025750",
    "end": "1032770"
  },
  {
    "text": "strong inspiration for Spring Framework 3.0 in Spring Framework 3 we started moving some some features from from from",
    "start": "1032770",
    "end": "1042400"
  },
  {
    "text": "external from portfolio projects back into the core framework well we moved Java config into the core",
    "start": "1042400",
    "end": "1047829"
  },
  {
    "text": "framework we had the spell expression language there were a couple of things that came in right at that point",
    "start": "1047829",
    "end": "1054930"
  },
  {
    "text": "previously developed in sort of external projects that weren't",
    "start": "1054930",
    "end": "1060419"
  },
  {
    "text": "a full part of the supported product portfolio and they moved back to the framework at the time spring family that",
    "start": "1060419",
    "end": "1067169"
  },
  {
    "text": "also brought a sort of further reinvention of spring MVC of the web layer where first-class rest apart came",
    "start": "1067169",
    "end": "1075539"
  },
  {
    "text": "in I would even argue that spring MVC sort of reinvented itself as a rest",
    "start": "1075539",
    "end": "1082799"
  },
  {
    "text": "endpoint framework from from the kind of form based HTML rendering framework that it was before fortunately most of the",
    "start": "1082799",
    "end": "1090149"
  },
  {
    "text": "infrastructure underneath wasn't particularly focused on foam binding or HTML rendering to begin with so almost",
    "start": "1090149",
    "end": "1098820"
  },
  {
    "text": "all of the abstractions are still in place from the early days to the kind of rest days to the kind of modern day web",
    "start": "1098820",
    "end": "1105629"
  },
  {
    "text": "layer we have today this is of course not necessarily a given right when you",
    "start": "1105629",
    "end": "1112950"
  },
  {
    "text": "start developing some abstractions they they might feel outdated very quickly we",
    "start": "1112950",
    "end": "1118139"
  },
  {
    "text": "are in the fortunate situation that both at the core content level and at the web framework level many of the abstractions",
    "start": "1118139",
    "end": "1125100"
  },
  {
    "text": "that we picked in the early days dating back to 2003 2004 turned out to be",
    "start": "1125100",
    "end": "1130619"
  },
  {
    "text": "useful or at least evolvable even with new challenges new application",
    "start": "1130619",
    "end": "1135960"
  },
  {
    "text": "architectures coming our way otherwise you end up in a situation where you need to throw away your existing web layer",
    "start": "1135960",
    "end": "1142109"
  },
  {
    "text": "complete link and redevelop it we never had to do this it was always an evolutionary model there was always an",
    "start": "1142109",
    "end": "1148440"
  },
  {
    "text": "evolutionary path that we were able to find that we were able to take so spring",
    "start": "1148440",
    "end": "1155759"
  },
  {
    "text": "from a tree that was of course very already a very popular framework out",
    "start": "1155759",
    "end": "1160950"
  },
  {
    "text": "there the two that five line was very very popular already very long-lived",
    "start": "1160950",
    "end": "1166080"
  },
  {
    "text": "although we tried to end it in in 2008 I just learned recently that people out",
    "start": "1166080",
    "end": "1171299"
  },
  {
    "text": "there still using Spring Framework to that 5.6 based applications a release",
    "start": "1171299",
    "end": "1178409"
  },
  {
    "text": "that is almost 10 years old now just count the security vulnerabilities in that one right they really should",
    "start": "1178409",
    "end": "1184019"
  },
  {
    "text": "operate at some point but this this is very much the case today spring is in so",
    "start": "1184019",
    "end": "1190559"
  },
  {
    "text": "many places in so many setups some some newer features and new",
    "start": "1190559",
    "end": "1196020"
  },
  {
    "text": "revisions even even some security fixes might matter in some scenarios and not in others so it's totally up to you or",
    "start": "1196020",
    "end": "1203220"
  },
  {
    "text": "to all the application architects and deployers out there in the end it's not in our hands when you upgrade we can",
    "start": "1203220",
    "end": "1209520"
  },
  {
    "text": "just give recommendations the state of",
    "start": "1209520",
    "end": "1214770"
  },
  {
    "text": "the art is this is a few years later right it's not XML based anymore this is",
    "start": "1214770",
    "end": "1221190"
  },
  {
    "text": "basically state of the art as of 2009 where the annotation based model is very",
    "start": "1221190",
    "end": "1227100"
  },
  {
    "text": "very much established the way that we still know it today so this kind of annotation based component and",
    "start": "1227100",
    "end": "1234270"
  },
  {
    "text": "configuration model in spring is in place for almost 10 years now it actually started in late 2007 but",
    "start": "1234270",
    "end": "1242040"
  },
  {
    "text": "literally the core features from back then they dated back to 2009 in in as we",
    "start": "1242040",
    "end": "1248310"
  },
  {
    "text": "as we can see it here configuration classes dat at configuration classes",
    "start": "1248310",
    "end": "1253740"
  },
  {
    "text": "with that beam methods they date back to 2009 as well when we merge the travel",
    "start": "1253740",
    "end": "1259110"
  },
  {
    "text": "config project into the core framework many of those things turned out to be very popular and very long-lived they",
    "start": "1259110",
    "end": "1265920"
  },
  {
    "text": "are still the mainstream usage model today we had other inspirations in the",
    "start": "1265920",
    "end": "1273630"
  },
  {
    "text": "meantime spring sauce got acquired by VMware in 2009 so the former spring",
    "start": "1273630",
    "end": "1280380"
  },
  {
    "text": "serves moved to VMware as a sort of department a group of basically 150",
    "start": "1280380",
    "end": "1287700"
  },
  {
    "text": "people that lived as a sort of little sapanta team in being way but",
    "start": "1287700",
    "end": "1294000"
  },
  {
    "text": "essentially with we've we've been parked there for what turned into a so just for",
    "start": "1294000",
    "end": "1299130"
  },
  {
    "text": "for a couple of years in order to be prepared for a spinoff from VMware and",
    "start": "1299130",
    "end": "1304320"
  },
  {
    "text": "DMC that turned into pivotal and the central the central driver in the",
    "start": "1304320",
    "end": "1312030"
  },
  {
    "text": "pivotal story in particular is a cloud platform called cloud foundry and open source project of its own the the",
    "start": "1312030",
    "end": "1320250"
  },
  {
    "text": "relevance for for the spring store is very much as an inspiration of course a",
    "start": "1320250",
    "end": "1325830"
  },
  {
    "text": "a cloud platform does many things with many languages in many data stores but there was a strong java audience out",
    "start": "1325830",
    "end": "1332010"
  },
  {
    "text": "there and a strong connection that we had to the job audience and there were strong drivers for people to try to",
    "start": "1332010",
    "end": "1339000"
  },
  {
    "text": "deploy spring-based java spring-based java applications to",
    "start": "1339000",
    "end": "1344250"
  },
  {
    "text": "cloud platforms to Cloud Foundry but also to like redheads openshift and Heroku and Google App Engine and all of",
    "start": "1344250",
    "end": "1352050"
  },
  {
    "text": "them emerged around the same time anyway so this was a strong inspiration for us",
    "start": "1352050",
    "end": "1357420"
  },
  {
    "text": "how would you how would you prepare a spring based application how would you follow certain guidelines",
    "start": "1357420",
    "end": "1363860"
  },
  {
    "text": "for cloud-based deployment for what we are dubbing cloud native applications",
    "start": "1363860",
    "end": "1369990"
  },
  {
    "text": "now also strongly having a micro services aspect to it of course so all",
    "start": "1369990",
    "end": "1375690"
  },
  {
    "text": "of those inspirations we embraced into what became spring for a Mac folded or",
    "start": "1375690",
    "end": "1382050"
  },
  {
    "start": "1378000",
    "end": "1542000"
  },
  {
    "text": "the first release that was really kind of happening at pivotal I mean it was",
    "start": "1382050",
    "end": "1387750"
  },
  {
    "text": "already in preparation before but this was very connected to the storyline in",
    "start": "1387750",
    "end": "1394410"
  },
  {
    "text": "pivotal Spring Framework for dodo was based was the foundation for spring",
    "start": "1394410",
    "end": "1400980"
  },
  {
    "text": "butuan dodo the entire spring from a full line cannot be separated from",
    "start": "1400980",
    "end": "1407160"
  },
  {
    "text": "spring boot Wanda Dex they really Co evolved very closely spring boot is of",
    "start": "1407160",
    "end": "1413340"
  },
  {
    "text": "course a kind of even more integrative affair it takes the core framework it",
    "start": "1413340",
    "end": "1419100"
  },
  {
    "text": "takes spring data takes spring security it manages the dependencies for all of them it auto configures them based on",
    "start": "1419100",
    "end": "1425730"
  },
  {
    "text": "certain indications at runtime at startup time it is very micro services",
    "start": "1425730",
    "end": "1433500"
  },
  {
    "text": "oriented although we're not calling it a micro services framework it is it turns",
    "start": "1433500",
    "end": "1438990"
  },
  {
    "text": "out to be very useful for micro service architectures and also in particularly useful for for cloud deployment where of",
    "start": "1438990",
    "end": "1447030"
  },
  {
    "text": "course in the meantime we have the spring cloud project there's kind of a more dedicated integration with like the",
    "start": "1447030",
    "end": "1452850"
  },
  {
    "text": "Netflix cloud stack and there there's more than this but at at the level of",
    "start": "1452850",
    "end": "1458640"
  },
  {
    "text": "the core programming model the way we see is that we are we essentially building",
    "start": "1458640",
    "end": "1464520"
  },
  {
    "text": "tools where we have tools on offer guidelines around them but in the end we",
    "start": "1464520",
    "end": "1471150"
  },
  {
    "text": "are empowering the application architect we are not really dictating any",
    "start": "1471150",
    "end": "1477060"
  },
  {
    "text": "particular architectures this is also the reason why we don't call anything spring micro-service something many of",
    "start": "1477060",
    "end": "1484500"
  },
  {
    "text": "our pieces are sort of particularly useful in certain architectures of course but they are not necessarily tied",
    "start": "1484500",
    "end": "1490890"
  },
  {
    "text": "to them on a different note spring framework for started embracing JDK 8",
    "start": "1490890",
    "end": "1498860"
  },
  {
    "text": "this is a very essential step I find this actually create is a an inspiration",
    "start": "1498860",
    "end": "1508080"
  },
  {
    "text": "just as much as everything else here for us JDK 8 brought so many nice little and",
    "start": "1508080",
    "end": "1514290"
  },
  {
    "text": "or even not so little ranked quite quite significant language in the API refinements to to Java itself not only",
    "start": "1514290",
    "end": "1523800"
  },
  {
    "text": "for convenience at the application development level but also for for for",
    "start": "1523800",
    "end": "1530610"
  },
  {
    "text": "framework providers there's so much goodness we can do and we can provide around JDK 8 that we started embracing",
    "start": "1530610",
    "end": "1537690"
  },
  {
    "text": "it before it's owned before its own GA the story in the programming model got",
    "start": "1537690",
    "end": "1546570"
  },
  {
    "text": "much more sophisticated you could even argue quite subtle in its refinements",
    "start": "1546570",
    "end": "1551610"
  },
  {
    "text": "for example the whole composable imitation model build build your own annotations and use your own annotations",
    "start": "1551610",
    "end": "1556770"
  },
  {
    "text": "in your own code choose your own names and choose certain characteristics in a convenient fashion those date back to",
    "start": "1556770",
    "end": "1563490"
  },
  {
    "text": "spring framework for time to the spring from a full timeline and the modern-day MVC controller web controller model with",
    "start": "1563490",
    "end": "1571260"
  },
  {
    "text": "its shortcut annotations and the kind of like the convenience of certain web",
    "start": "1571260",
    "end": "1576980"
  },
  {
    "text": "characteristics being baked into certain stereotype annotations dates back to",
    "start": "1576980",
    "end": "1582720"
  },
  {
    "text": "that time as well so even even just visually you can see that most of this",
    "start": "1582720",
    "end": "1589020"
  },
  {
    "text": "model is still very much in the same line of evolution right in the in the",
    "start": "1589020",
    "end": "1595100"
  },
  {
    "text": "same line of design that we started in 2007 it's not that different it's just",
    "start": "1595100",
    "end": "1600650"
  },
  {
    "text": "fine tuned from there so it's still very evolutionary and an immediate continuation of this kind of design",
    "start": "1600650",
    "end": "1607910"
  },
  {
    "text": "language that we established in the 2007 to 2009 era now while we've been doing",
    "start": "1607910",
    "end": "1616610"
  },
  {
    "start": "1613000",
    "end": "1754000"
  },
  {
    "text": "all of this a couple of other things happened sites on the side of it there",
    "start": "1616610",
    "end": "1624290"
  },
  {
    "text": "was a strong movement towards what we know as reactive programming the",
    "start": "1624290",
    "end": "1630050"
  },
  {
    "text": "reactive manifesto dates back to roughly the same time the Akron light pens occur",
    "start": "1630050",
    "end": "1637450"
  },
  {
    "text": "as an ecto framework dates back to the time and the inception of what we know now as reactive streams which was",
    "start": "1637450",
    "end": "1645890"
  },
  {
    "text": "actually a quite immediate follow-up to the manifesto I mean I I confess I'm I'm I",
    "start": "1645890",
    "end": "1651500"
  },
  {
    "text": "I don't like manifestos I mean but this one gets at least a couple of terms right like responsiveness and resiliency the",
    "start": "1651500",
    "end": "1660010"
  },
  {
    "text": "trying to build web architectures with different different characteristics in",
    "start": "1660010",
    "end": "1667550"
  },
  {
    "text": "in high load in scenarios in unusual scenarios keep in mind that in the Java",
    "start": "1667550",
    "end": "1672980"
  },
  {
    "text": "world everything is servlet based we've been basically building web applications",
    "start": "1672980",
    "end": "1679940"
  },
  {
    "text": "ever since 99 with the servlet model an abstraction that dates back to to",
    "start": "1679940",
    "end": "1686950"
  },
  {
    "text": "something called CGI from from the late 90s basically a sort of here's a web",
    "start": "1686950",
    "end": "1693290"
  },
  {
    "text": "request and now here's a process and now do your thing I build a response for it and the servlet model was already quite",
    "start": "1693290",
    "end": "1700850"
  },
  {
    "text": "nicer there's a lot of reuse he had the same the same JVM set up you had a new thread attached to each request it was",
    "start": "1700850",
    "end": "1707960"
  },
  {
    "text": "sort of modern at the time but where we are now the servlet model also comes",
    "start": "1707960",
    "end": "1713630"
  },
  {
    "text": "with with limitations there's a thread pool attached to it if you exhaust the thread pool if all the threads are busy",
    "start": "1713630",
    "end": "1720400"
  },
  {
    "text": "you can't accept any new requests even the simplest index.html requests in index style",
    "start": "1720400",
    "end": "1728220"
  },
  {
    "text": "requests would have to be rejected by your application at the time so it comes with its own share of problems and in",
    "start": "1728220",
    "end": "1736410"
  },
  {
    "text": "high load scenarios we've all learned how to deal with them in one form or the other reactive architectures reactive",
    "start": "1736410",
    "end": "1743850"
  },
  {
    "text": "web architectures are essentially a different spin looking at the same problem space trying to attack it from a",
    "start": "1743850",
    "end": "1749790"
  },
  {
    "text": "different perspective in building web architectures that accept a a a requests",
    "start": "1749790",
    "end": "1757040"
  },
  {
    "start": "1754000",
    "end": "1775000"
  },
  {
    "text": "have a callback based pipeline that knows how to process that request and",
    "start": "1757040",
    "end": "1763410"
  },
  {
    "text": "arrive at a response these this this different line of of thinking right",
    "start": "1763410",
    "end": "1771630"
  },
  {
    "text": "around how to process web requests turned into what we know now as spring",
    "start": "1771630",
    "end": "1777900"
  },
  {
    "start": "1775000",
    "end": "1930000"
  },
  {
    "text": "web flux as the reactive web frame again in Spring Framework 5 so a strong",
    "start": "1777900",
    "end": "1783120"
  },
  {
    "text": "inspiration here is not only the reactive processing model the callback",
    "start": "1783120",
    "end": "1789810"
  },
  {
    "text": "based back pressure based processing architecture at the core of the web",
    "start": "1789810",
    "end": "1795390"
  },
  {
    "text": "framework as an sort of alternative to servlets it's not only that it's also a",
    "start": "1795390",
    "end": "1800940"
  },
  {
    "text": "an API style that comes with it more functionally oriented API design style",
    "start": "1800940",
    "end": "1807650"
  },
  {
    "text": "the idea behind this and doing this in the same release is that it goes really",
    "start": "1807650",
    "end": "1813540"
  },
  {
    "text": "really nicely together we are basically setting up and challenging the framework",
    "start": "1813540",
    "end": "1820320"
  },
  {
    "text": "from a perspective that it didn't have to deal with before so from a framework design perspective we basically put",
    "start": "1820320",
    "end": "1827490"
  },
  {
    "text": "ourselves out of the comfort zone there was spring framework for annotate with a strong annotation based mainstream usage",
    "start": "1827490",
    "end": "1833640"
  },
  {
    "text": "model server based web architecture server based spring MVC all fine and great right very popular now we we",
    "start": "1833640",
    "end": "1841710"
  },
  {
    "text": "didn't really have an immediate pressure to do anything about it we were trying to force ourselves to take a step back",
    "start": "1841710",
    "end": "1848430"
  },
  {
    "text": "and just see how much of our framework architecture of our framework arrangement that we have here would also",
    "start": "1848430",
    "end": "1854520"
  },
  {
    "text": "be useful in a different usage model in anon best usage model in a used model with",
    "start": "1854520",
    "end": "1861220"
  },
  {
    "text": "very little reflection involved in a of course reactive usage model possibly",
    "start": "1861220",
    "end": "1867010"
  },
  {
    "text": "right with a building reactive web endpoints we in a fact with a functional API is kind of ultimately very different",
    "start": "1867010",
    "end": "1874960"
  },
  {
    "text": "from building servlets based web endpoints in an annotation based usage",
    "start": "1874960",
    "end": "1880120"
  },
  {
    "text": "model at that level it's very different one or two levels below mm-hmm a lot of",
    "start": "1880120",
    "end": "1886840"
  },
  {
    "text": "the core framework functionality turns out to be very and immediately useful in both kinds of scenarios this is not as",
    "start": "1886840",
    "end": "1895480"
  },
  {
    "text": "unusual as it may appear here we've been doing this before we've had groovy base",
    "start": "1895480",
    "end": "1901360"
  },
  {
    "text": "beam definitions we've had a programmatic metadata based registration model for the longest time we've always",
    "start": "1901360",
    "end": "1906940"
  },
  {
    "text": "had alternative configuration models alternative usage models the difference",
    "start": "1906940",
    "end": "1913780"
  },
  {
    "text": "here is that we saw a potential for well maybe not necessarily for ruling the",
    "start": "1913780",
    "end": "1920290"
  },
  {
    "text": "mainstream but a potential for a very significant portion of application architectures out there benefiting from",
    "start": "1920290",
    "end": "1927520"
  },
  {
    "text": "this quite different usage model the functional registration style here is",
    "start": "1927520",
    "end": "1935220"
  },
  {
    "start": "1930000",
    "end": "2238000"
  },
  {
    "text": "ultimately functional as in Java it's functional so the this is just",
    "start": "1935220",
    "end": "1942340"
  },
  {
    "text": "indicative basically of what you can do but for those of you somewhat familiar",
    "start": "1942340",
    "end": "1948760"
  },
  {
    "text": "maybe with spring well I could actually that's a good a good point of asking who's familiar with spring in generally",
    "start": "1948760",
    "end": "1957150"
  },
  {
    "text": "so you know generic application context maybe you've seen the class before it's",
    "start": "1957150",
    "end": "1963010"
  },
  {
    "text": "great to know so the there's a a lot of",
    "start": "1963010",
    "end": "1968610"
  },
  {
    "text": "API that actually has like 10 years and Counting behind it kind of being put",
    "start": "1968610",
    "end": "1975790"
  },
  {
    "text": "into a different position here generic application context was always there but it was sort of a little bit of a niche",
    "start": "1975790",
    "end": "1981160"
  },
  {
    "text": "thing if you wanted to reduce the bin definitions only are yourself more for integrators then for anybody else really",
    "start": "1981160",
    "end": "1988020"
  },
  {
    "text": "now in spring framework 5 it receives a few new convenience registration",
    "start": "1988020",
    "end": "1995409"
  },
  {
    "text": "methods along the lines of what they did with Java collections and Java streams",
    "start": "1995409",
    "end": "2002399"
  },
  {
    "text": "Java collection streams in Java eight very much inspired by the functional API",
    "start": "2002399",
    "end": "2008609"
  },
  {
    "text": "design language in in Java 8 which also means of course designed for use with",
    "start": "2008609",
    "end": "2013859"
  },
  {
    "text": "lambda expressions and method references in Java 8 that's exactly what started appearing at many levels across the",
    "start": "2013859",
    "end": "2021450"
  },
  {
    "text": "framework and in particular here for for core registration purposes so what we're",
    "start": "2021450",
    "end": "2027600"
  },
  {
    "text": "doing here is essentially just registering two components one of them with default construction rules and the",
    "start": "2027600",
    "end": "2034619"
  },
  {
    "text": "other to be built with an inline lambda expression we're calling this an",
    "start": "2034619",
    "end": "2040980"
  },
  {
    "text": "instance supplier it's essentially H it's literally a Java util function",
    "start": "2040980",
    "end": "2046169"
  },
  {
    "text": "supplier Java eight supplier that we dispatched you every time we need a new",
    "start": "2046169",
    "end": "2052319"
  },
  {
    "text": "instance of this class the container is still in charge of the lifecycle so this this semantically this all works within",
    "start": "2052319",
    "end": "2060089"
  },
  {
    "text": "the spring component model with this it's even backed by bean definitions you can still remote processes over them all",
    "start": "2060089",
    "end": "2066329"
  },
  {
    "text": "of the infrastructure still applies but if you express yourself this way the",
    "start": "2066329",
    "end": "2072148"
  },
  {
    "text": "container has very deep and immediate support for what you're doing here so we are not trying to adapt this there's no",
    "start": "2072149",
    "end": "2078089"
  },
  {
    "text": "reflection involved there's a straight dispatch to this instant supplier callback that you're providing",
    "start": "2078089",
    "end": "2084030"
  },
  {
    "text": "we're basically shortcutting directly to it not even looking at the Constructors",
    "start": "2084030",
    "end": "2089368"
  },
  {
    "text": "or doing any reflection around that class this can be fine tuned so there's",
    "start": "2089369",
    "end": "2095398"
  },
  {
    "text": "the idea here is that the this model grows nicely with your requirements if",
    "start": "2095399",
    "end": "2102809"
  },
  {
    "text": "you want to be a little more specific like setting and lazy init flag or",
    "start": "2102809",
    "end": "2107839"
  },
  {
    "text": "providing check kind of a more fine-tuned configuration arrangement it's there to serve you there's a VAR",
    "start": "2107839",
    "end": "2114119"
  },
  {
    "text": "arc that we call beam definition customizers further one-line lambda expressions that come in comma lambda",
    "start": "2114119",
    "end": "2120780"
  },
  {
    "text": "coma lambda down here as many as you need what you receive here",
    "start": "2120780",
    "end": "2125910"
  },
  {
    "text": "the good old peen definition allowing you to find him the configuration behind it in this variant of the usage model",
    "start": "2125910",
    "end": "2133950"
  },
  {
    "text": "there's no annotation processing happening right so there's unless you choose to start with annotation config",
    "start": "2133950",
    "end": "2139920"
  },
  {
    "text": "application context here which is a subclass of this one there's no annotation processing active",
    "start": "2139920",
    "end": "2145530"
  },
  {
    "text": "we're not even looking at annotations we're not even searching for them so this is quite different from from that",
    "start": "2145530",
    "end": "2152010"
  },
  {
    "text": "perspective the idea here is that for a",
    "start": "2152010",
    "end": "2157289"
  },
  {
    "text": "very minimal controlled arrangement with just a number of components maybe not",
    "start": "2157289",
    "end": "2162539"
  },
  {
    "text": "two but say a dozen components right ten twelve fifteen components for for those",
    "start": "2162539",
    "end": "2167819"
  },
  {
    "text": "kinds of setups you may still be able to express yourself on one page on the",
    "start": "2167819",
    "end": "2173099"
  },
  {
    "text": "screen no external metadata no class",
    "start": "2173099",
    "end": "2178170"
  },
  {
    "text": "level metadata either unless you choose to do so this is a",
    "start": "2178170",
    "end": "2183390"
  },
  {
    "text": "rather extreme perspective well that's the whole point we try to put ourselves",
    "start": "2183390",
    "end": "2188430"
  },
  {
    "text": "into a more extreme perspective in order to challenge ourselves and to challenge",
    "start": "2188430",
    "end": "2193559"
  },
  {
    "text": "the framework underneath to be perfectly useful and not do any nonsense in that",
    "start": "2193559",
    "end": "2200010"
  },
  {
    "text": "kind of extreme perspective right so it's also a sort of perspective that",
    "start": "2200010",
    "end": "2205500"
  },
  {
    "text": "allows us to optimize the framework for this kind of usage model the combination",
    "start": "2205500",
    "end": "2212880"
  },
  {
    "text": "of functional registration with annotation based transactions even annotation based injection is still",
    "start": "2212880",
    "end": "2218250"
  },
  {
    "text": "perfectly possible all of those pieces all of those features nicely mix and match but you should be able to use them",
    "start": "2218250",
    "end": "2226559"
  },
  {
    "text": "on their own as well right this is very much the the good old spring tradition of different usage models but mixing and",
    "start": "2226559",
    "end": "2234420"
  },
  {
    "text": "matching at every level now I haven't mentioned cotton yet the",
    "start": "2234420",
    "end": "2241579"
  },
  {
    "start": "2238000",
    "end": "2574000"
  },
  {
    "text": "cotton language is also a strong inspiration for what we're doing in spring for mark five cotton Lina is a",
    "start": "2241579",
    "end": "2247500"
  },
  {
    "text": "sort of well a contender in the Java language space brought a lot of inch",
    "start": "2247500",
    "end": "2254220"
  },
  {
    "text": "lots of interesting features our way again the way I see it the way we see it in the in the spring",
    "start": "2254220",
    "end": "2262150"
  },
  {
    "text": "open-source team is primarily as an inspiration there are language features in certain API conventions in Kotlin",
    "start": "2262150",
    "end": "2269200"
  },
  {
    "text": "that surf is a great inspiration for us as framework designers allowing to kind",
    "start": "2269200",
    "end": "2274600"
  },
  {
    "text": "of evolve the framework at the frameworks api's in a way where it",
    "start": "2274600",
    "end": "2280510"
  },
  {
    "text": "becomes a natural citizen in a coupling arrangement we started our initial",
    "start": "2280510",
    "end": "2286090"
  },
  {
    "text": "attempts in the middle of the Spring Framework five miles don't face and quite late in the game we decided to roll first-class support for Kotlin",
    "start": "2286090",
    "end": "2292180"
  },
  {
    "text": "right into spring filmic 5 proper to immediately productize it this is not",
    "start": "2292180",
    "end": "2298090"
  },
  {
    "text": "totally unusual we've done this with with groovy and the Grails framework ten",
    "start": "2298090",
    "end": "2304840"
  },
  {
    "text": "years before right but now we're doing it with cotton specifically and these",
    "start": "2304840",
    "end": "2310210"
  },
  {
    "text": "these snippets that I've that we've seen before here are now expressed in Kotlin",
    "start": "2310210",
    "end": "2315760"
  },
  {
    "text": "in two different ways so this is kind of the the Java version of course this is",
    "start": "2315760",
    "end": "2320820"
  },
  {
    "text": "essentially the same usage model and you a new generic application context a foo",
    "start": "2320820",
    "end": "2328210"
  },
  {
    "text": "class we registered a food component around the foo class registered with default conventions and a a bar class",
    "start": "2328210",
    "end": "2336340"
  },
  {
    "text": "registered with an instance supplier but there are a couple of noticeable differences in the Java version we had",
    "start": "2336340",
    "end": "2344230"
  },
  {
    "text": "to say we register a component of type art class and here's the instance supplier because in the Java eight model",
    "start": "2344230",
    "end": "2352000"
  },
  {
    "text": "for for lambda expressions we have no way of inferring the return type from a",
    "start": "2352000",
    "end": "2357190"
  },
  {
    "text": "lambda expression or method reference we simply don't know what it's building its basically could be any object so you",
    "start": "2357190",
    "end": "2362800"
  },
  {
    "text": "have to specify the actual component type separately what we're doing here what we're applying here is not a Java 8",
    "start": "2362800",
    "end": "2369970"
  },
  {
    "text": "lambda expression it's something similar it's a cotton function and what we are calling here on generic application",
    "start": "2369970",
    "end": "2376030"
  },
  {
    "text": "context is not the very same version that we're calling in the Java example we're calling an overloaded version that",
    "start": "2376030",
    "end": "2381550"
  },
  {
    "text": "takes a Kay function and the cotton Kay function allows us to reliably infer the",
    "start": "2381550",
    "end": "2387970"
  },
  {
    "text": "return type of that function so by providing a Kay function we know that this is",
    "start": "2387970",
    "end": "2393010"
  },
  {
    "text": "producing an instance of barter class so there's no need for you to repeat yourself so we're making use of coupling",
    "start": "2393010",
    "end": "2401200"
  },
  {
    "text": "language conventions and cutting reflection features Curtin has its own reflection API in order to arrive at a",
    "start": "2401200",
    "end": "2407980"
  },
  {
    "text": "more convenient less repetitive registration model the way we",
    "start": "2407980",
    "end": "2413560"
  },
  {
    "text": "technically accomplish this kind of arrangement is through coupling extensions so if you download the spring",
    "start": "2413560",
    "end": "2420370"
  },
  {
    "text": "filmic 5 then what you get is the same kind of jar arrangement that you always had like spring context raw etc those",
    "start": "2420370",
    "end": "2427750"
  },
  {
    "text": "standard jars come with cotton extensions for example generic",
    "start": "2427750",
    "end": "2433120"
  },
  {
    "text": "application context comes with a generic application context extensions dot k t file in the same jar the Java compiler",
    "start": "2433120",
    "end": "2439630"
  },
  {
    "text": "totally ignores that file it doesn't even take it take any notice of it the",
    "start": "2439630",
    "end": "2446140"
  },
  {
    "text": "coddling compiler by convention knows that those are extension functions for the generic application context Java",
    "start": "2446140",
    "end": "2452560"
  },
  {
    "text": "type so if you consume our Spring Framework 5 version of generic application context through the cutting",
    "start": "2452560",
    "end": "2458890"
  },
  {
    "text": "compiler you have an additional additional methods showing up on the same type additional overloads that you",
    "start": "2458890",
    "end": "2466060"
  },
  {
    "text": "can use here this is essentially what we are what we are doing a very fine-tuned version of evolving of evolving generic",
    "start": "2466060",
    "end": "2474070"
  },
  {
    "text": "application context this is only the foundation of it there's a slightly higher level cotton DSL built around it",
    "start": "2474070",
    "end": "2481060"
  },
  {
    "text": "we have a new project called spring foo trying to be trying to go even further for essentially encoding based more",
    "start": "2481060",
    "end": "2491770"
  },
  {
    "text": "micro service oriented architectures with a few endpoints but this is the foundation of it all this is also a",
    "start": "2491770",
    "end": "2498130"
  },
  {
    "text": "little twist not too important for our storyline today this is essentially the same code but making use of Kotlin",
    "start": "2498130",
    "end": "2505390"
  },
  {
    "text": "language beverage variations by in lining the riches the bean cults we're",
    "start": "2505390",
    "end": "2511360"
  },
  {
    "text": "just making use of cotton conventions we're calling the very same methods as before but the cotton 'n compiler allows",
    "start": "2511360",
    "end": "2519280"
  },
  {
    "text": "us to express ourselves this way and the other difference is the the inline generics Kotlin has refined",
    "start": "2519280",
    "end": "2526910"
  },
  {
    "text": "so if you specify according to the Coughlin's conventions a generic type here we can also reliably infer that",
    "start": "2526910",
    "end": "2534079"
  },
  {
    "text": "generic type you don't need to pass it in as an argument at all we basically know what you mean you specify the",
    "start": "2534079",
    "end": "2540380"
  },
  {
    "text": "target type through a cough in generic by my little name here is a grade of",
    "start": "2540380",
    "end": "2546799"
  },
  {
    "text": "style this Gradle style that's not an official name so great style usage is",
    "start": "2546799",
    "end": "2552829"
  },
  {
    "text": "just my own personal name for this because as you may know the Gradle build tool has a Kotlin DSL it has a groovy",
    "start": "2552829",
    "end": "2559700"
  },
  {
    "text": "DSL traditionally it has a cotton DSL as well now and the Gradle style DSL has sort of a similar feeling to it the",
    "start": "2559700",
    "end": "2567440"
  },
  {
    "text": "Gradle yourself it's essentially just a cotton language feature applied so much for the",
    "start": "2567440",
    "end": "2575720"
  },
  {
    "start": "2574000",
    "end": "2821000"
  },
  {
    "text": "functional parts a quick note about the about the whole the whole deal with Webb",
    "start": "2575720",
    "end": "2582950"
  },
  {
    "text": "flux and the reactive web stack the way we chose to evolve the what turned into",
    "start": "2582950",
    "end": "2592069"
  },
  {
    "text": "Spring Framework 5 wasn't so obvious when we started imagine you're we have spring framework",
    "start": "2592069",
    "end": "2598339"
  },
  {
    "text": "for we have the Soviet based web stack we are trying to allow for reactive web",
    "start": "2598339",
    "end": "2603500"
  },
  {
    "text": "architectures what are we trying to do are we going to refactor spring MVC are we going to introduce abstractions that",
    "start": "2603500",
    "end": "2609019"
  },
  {
    "text": "serve for both the server based and the reactive well doesn't really fly we",
    "start": "2609019",
    "end": "2614990"
  },
  {
    "text": "didn't really get anywhere with that line of thinking the way we ended up",
    "start": "2614990",
    "end": "2621880"
  },
  {
    "text": "introducing reactive web architectures architectures to our stack is through a separate module essentially a separate",
    "start": "2621880",
    "end": "2628670"
  },
  {
    "text": "web stack if you look at spring from AK 5 there's spring weapon we see as the",
    "start": "2628670",
    "end": "2633769"
  },
  {
    "text": "traditional servlet based web module web layer and the spring web flux as a",
    "start": "2633769",
    "end": "2639049"
  },
  {
    "text": "reactive reactor based web stack next to it it's essentially two web stacks they",
    "start": "2639049",
    "end": "2645589"
  },
  {
    "text": "share a lot of commonality where they technically makes sense they share the same mapping annotations they share some",
    "start": "2645589",
    "end": "2652369"
  },
  {
    "text": "of the same binding architecture day they share quite a few utilities underneath but they are quite pure",
    "start": "2652369",
    "end": "2660060"
  },
  {
    "text": "in their servlet base nature and in their reactive nature we're trying to to",
    "start": "2660060",
    "end": "2665850"
  },
  {
    "text": "allow both stacks to expose the underlying features the underlying strength is the underlying power of",
    "start": "2665850",
    "end": "2671910"
  },
  {
    "text": "their questions very immediately not being constrained by extra abstractions",
    "start": "2671910",
    "end": "2678120"
  },
  {
    "text": "along the way so spring MVC spring web MVC in Spring Framework 5 is still the",
    "start": "2678120",
    "end": "2683370"
  },
  {
    "text": "good old Soviet ap can kind of an evolution of the servlet API based web framework that you've been using for so",
    "start": "2683370",
    "end": "2690090"
  },
  {
    "text": "many years the parallel spring web plugs deck is kind of a a different web",
    "start": "2690090",
    "end": "2697530"
  },
  {
    "text": "architecture with a spring feeling in its usage model but different different",
    "start": "2697530",
    "end": "2702660"
  },
  {
    "text": "conventions different trade-offs underneath the covers there's no servlet API here there's a reactive streams based abstraction based",
    "start": "2702660",
    "end": "2710250"
  },
  {
    "text": "on a core reactive library called Project reactor which is essentially a",
    "start": "2710250",
    "end": "2715590"
  },
  {
    "text": "kind of modern-day server oriented variant of Eric's Java which where the",
    "start": "2715590",
    "end": "2721770"
  },
  {
    "text": "reactor team is largely at pivotal has kind of a sister project of ours and we",
    "start": "2721770",
    "end": "2727170"
  },
  {
    "text": "adapt wet kernels Co HT DP engines underneath the covers for it so the",
    "start": "2727170",
    "end": "2734540"
  },
  {
    "text": "traditional spring MVC stack runs on a servlet container like on target or cheerio WebSphere whatever spring wet",
    "start": "2734540",
    "end": "2742110"
  },
  {
    "text": "flux can run on Nettie as kind of the most powerful networking stack we have",
    "start": "2742110",
    "end": "2747930"
  },
  {
    "text": "out there in the Java industry but it can also be adapted to say Tomcat jetty",
    "start": "2747930",
    "end": "2754350"
  },
  {
    "text": "and and the tow to the core HTTP engines in Tomcat challenge on the tow so over",
    "start": "2754350",
    "end": "2760860"
  },
  {
    "text": "here we're not using Tomcat and sherea servlet containers we're using them as web service and web servers are",
    "start": "2760860",
    "end": "2766290"
  },
  {
    "text": "naturally capable of working in a in a sort of reactive architecture because if",
    "start": "2766290",
    "end": "2771390"
  },
  {
    "text": "you look at it it's really the servlet API that is the unusual abstraction underneath the covers the networking",
    "start": "2771390",
    "end": "2778770"
  },
  {
    "text": "stack operating system IO socket based programming all of those things are",
    "start": "2778770",
    "end": "2784110"
  },
  {
    "text": "asynchronous and callback based by nature the servlet API is the unnatural",
    "start": "2784110",
    "end": "2789270"
  },
  {
    "text": "abstraction a very convenient one we got used to it many strengths infrared attached to the entire request",
    "start": "2789270",
    "end": "2795600"
  },
  {
    "text": "it has its benefits of course but reactive strings is a sort of a more",
    "start": "2795600",
    "end": "2801510"
  },
  {
    "text": "direct binding to the way that the underlying network architecture works so",
    "start": "2801510",
    "end": "2808530"
  },
  {
    "text": "of course this is a a much larger topic if you'd like to hear more about the the motivation behind this there are some",
    "start": "2808530",
    "end": "2815340"
  },
  {
    "text": "great talks by my colleague Roslyn story on Jeff on YouTube about this about our",
    "start": "2815340",
    "end": "2821850"
  },
  {
    "start": "2821000",
    "end": "2904000"
  },
  {
    "text": "motivation in our design approach here just to wrap this all up a a just a",
    "start": "2821850",
    "end": "2827760"
  },
  {
    "text": "selection of impressions this is a wet controller with reactive endpoints look",
    "start": "2827760",
    "end": "2833880"
  },
  {
    "text": "at the design language still looks very much like a spring MVC controller but it isn't it returns reactive streams",
    "start": "2833880",
    "end": "2841050"
  },
  {
    "text": "publishes the flux is a a publisher variant from project reactor for a",
    "start": "2841050",
    "end": "2847170"
  },
  {
    "text": "stream of elements a reactive stream of elements mono is a single element or non",
    "start": "2847170",
    "end": "2852180"
  },
  {
    "text": "capable of producing it whenever needed it's basically a pipeline for building",
    "start": "2852180",
    "end": "2858720"
  },
  {
    "text": "the response the response body whenever the stack at runtime is ready to build",
    "start": "2858720",
    "end": "2864510"
  },
  {
    "text": "it so those methods don't actually process a request they return a recipe",
    "start": "2864510",
    "end": "2870450"
  },
  {
    "text": "for how to process the request and it's the runtime system the reactive runtime system in charge of triggering the next",
    "start": "2870450",
    "end": "2877740"
  },
  {
    "text": "step in that processing pipeline whenever the network setup is ready whenever data is ready without ever",
    "start": "2877740",
    "end": "2884370"
  },
  {
    "text": "blocking a threat it's a totally non blocking architecture back pressure",
    "start": "2884370",
    "end": "2891360"
  },
  {
    "text": "driven in the sense that it knows when that it basically knows when new data arrives there's a degree of low control",
    "start": "2891360",
    "end": "2898860"
  },
  {
    "text": "between the different components of the stack built into it underneath the covers and as you may imagine I may have",
    "start": "2898860",
    "end": "2907200"
  },
  {
    "start": "2904000",
    "end": "2937000"
  },
  {
    "text": "imagined there's a functional version of it as well you can register the same endpoints",
    "start": "2907200",
    "end": "2913020"
  },
  {
    "text": "expressing yourself with an Rx Java like API building endpoints and",
    "start": "2913020",
    "end": "2918690"
  },
  {
    "text": "programmatically registering them with a target HTTP engine this is now quite",
    "start": "2918690",
    "end": "2926100"
  },
  {
    "text": "different from what you would think of as like a spring weapon point so in the end we",
    "start": "2926100",
    "end": "2934810"
  },
  {
    "text": "took this quite far all of this is already in Spring Framework 5-2 though we are at Spring Framework 5.1 in the",
    "start": "2934810",
    "end": "2942190"
  },
  {
    "start": "2937000",
    "end": "3096000"
  },
  {
    "text": "meantime got released just a couple of weeks ago so where you can of course you",
    "start": "2942190",
    "end": "2948880"
  },
  {
    "text": "can use to keep using spring framework and spring boot in particular the way",
    "start": "2948880",
    "end": "2954850"
  },
  {
    "text": "you used to use them right there's the annotation based model is still the mainstream component model the",
    "start": "2954850",
    "end": "2960400"
  },
  {
    "text": "annotation based web endpoints on with spring web MVC on the servlet stack",
    "start": "2960400",
    "end": "2965410"
  },
  {
    "text": "those is this is still de the mainstream usage model but now as kind of an an",
    "start": "2965410",
    "end": "2971140"
  },
  {
    "text": "option a tool in your toolbox you can choose to use functional registration you can choose to use reactive web stack",
    "start": "2971140",
    "end": "2978940"
  },
  {
    "text": "instead within the same framework arrangement with a lot of commonality so we're really trying to lower the bar for",
    "start": "2978940",
    "end": "2986130"
  },
  {
    "text": "entry into alternative usage models but we're also trying to make them part of",
    "start": "2986130",
    "end": "2992200"
  },
  {
    "text": "the same story so that you you're not choosing between a traditional server based framework and",
    "start": "2992200",
    "end": "2997240"
  },
  {
    "text": "some totally different framework for reactive architectures you can basically",
    "start": "2997240",
    "end": "3002400"
  },
  {
    "text": "use variants of the same framework for any variant of the stack that you choose",
    "start": "3002400",
    "end": "3007970"
  },
  {
    "text": "so this this is our way of evolving the framework into the modern times quite",
    "start": "3007970",
    "end": "3014369"
  },
  {
    "text": "exciting modern times I I may add here because a lot of stuff is happening",
    "start": "3014369",
    "end": "3019710"
  },
  {
    "text": "around us at the moment but we're up for the challenge right we are we've already",
    "start": "3019710",
    "end": "3026040"
  },
  {
    "text": "been evolving this framework for for 15 years almost 16 years and Counting and where we are very much up for the",
    "start": "3026040",
    "end": "3032640"
  },
  {
    "text": "challenge of making it ready for the next phase of evolution this is",
    "start": "3032640",
    "end": "3037890"
  },
  {
    "text": "basically a continuation of what we started in Spring Framework 5 over the next few years alright this is pretty much the",
    "start": "3037890",
    "end": "3044760"
  },
  {
    "text": "storyline I had for you today so thanks for your attention so far if",
    "start": "3044760",
    "end": "3050070"
  },
  {
    "text": "there are any any questions I'm happy to take them you may have asked them on the on yeah yeah or just come just come up",
    "start": "3050070",
    "end": "3058200"
  },
  {
    "text": "here to the stage I'm around right if you wanna have any conversations around this so whether",
    "start": "3058200",
    "end": "3064680"
  },
  {
    "text": "you've already been familiar with some parts of this story or not I hope you",
    "start": "3064680",
    "end": "3069800"
  },
  {
    "text": "enjoyed a little bit of the trip a trip down memory lane and at the same time",
    "start": "3069800",
    "end": "3075140"
  },
  {
    "text": "maybe also seen the way we are going to handle the immediate future for what's",
    "start": "3075140",
    "end": "3081300"
  },
  {
    "text": "coming in in spring here Thanks [Applause]",
    "start": "3081300",
    "end": "3092320"
  }
]