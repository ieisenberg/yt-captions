[
  {
    "start": "0",
    "end": "87000"
  },
  {
    "text": "[Music]",
    "start": "3550",
    "end": "7840"
  },
  {
    "text": "[Applause] everybody thank you so much for coming",
    "start": "12690",
    "end": "19910"
  },
  {
    "text": "along I know it's a second day towards the end of the second day your energy levels are starting to dip a little bit",
    "start": "19910",
    "end": "25310"
  },
  {
    "text": "you've got too much new information in your head you're feeling groggy and we're gonna cap it off later with some",
    "start": "25310",
    "end": "30439"
  },
  {
    "text": "alcohol and Sam Aaron's gonna be playing some loud music to keep you awake so please do hang around for the party",
    "start": "30439",
    "end": "36470"
  },
  {
    "text": "later I'm here to talk to you about monolith how we go from so a month to microservices should we even do it and",
    "start": "36470",
    "end": "43040"
  },
  {
    "text": "I'm gonna share with you so about three or four different concrete patterns that you might want to be using as part of",
    "start": "43040",
    "end": "48199"
  },
  {
    "text": "your decomposition of a system and thinking about how you might move towards a Microsoft architecture and",
    "start": "48199",
    "end": "53839"
  },
  {
    "text": "fundamentally that is how I think you should use microservices I'm not really for adopting a micro-service",
    "start": "53839",
    "end": "59930"
  },
  {
    "text": "architecture or up front so I think there's some challenges there so this is mostly going to be about how do we move",
    "start": "59930",
    "end": "65659"
  },
  {
    "text": "towards a microservice architecture and fundamentally when something gets too big what you do about it and I do think",
    "start": "65659",
    "end": "72619"
  },
  {
    "text": "it's the natural state of software to get too big right I think people feel bad or I get too big I can't deal with",
    "start": "72619",
    "end": "78650"
  },
  {
    "text": "it now if the software was the right size you wouldn't split it apart so you're never going to get to the point",
    "start": "78650",
    "end": "84680"
  },
  {
    "text": "where it you know it's got to get bigger for you to want to split it it's just life deal with it move on and what I'm",
    "start": "84680",
    "end": "90020"
  },
  {
    "text": "hoping to do is share with you some concrete patterns that you can bring into action when these things happen I",
    "start": "90020",
    "end": "95800"
  },
  {
    "text": "previously wrote a book about micro services and I've now run my own company I do training advisor work you can find",
    "start": "95800",
    "end": "102620"
  },
  {
    "text": "out information about what I do on the Internet I am in the process where I finished my work I've handed over the proofs and",
    "start": "102620",
    "end": "110030"
  },
  {
    "text": "everything of a new book called my little micro services which should be in print next month it's ironic that I",
    "start": "110030",
    "end": "116720"
  },
  {
    "text": "spent a lot of my life trying to help people ship things quickly and frequently and as its idea of iterative",
    "start": "116720",
    "end": "122120"
  },
  {
    "text": "incremental change and then I spent about last four years of my life creating books which have a very much a",
    "start": "122120",
    "end": "127959"
  },
  {
    "text": "transactional one-off BIGBANG release going for them and something is just that the path to production for books",
    "start": "127959",
    "end": "134360"
  },
  {
    "text": "seems to be going on forever but they should be out soon and you can get an access to an early version of this over",
    "start": "134360",
    "end": "140510"
  },
  {
    "text": "sort of on the Internet but we here to talk about sort of micro services or more to the point or not",
    "start": "140510",
    "end": "146070"
  },
  {
    "start": "141000",
    "end": "206000"
  },
  {
    "text": "really might be services but how do we go to something that looks a bit like this from from this from this this is",
    "start": "146070",
    "end": "152520"
  },
  {
    "text": "the monolith of course some monoliths are picturesque and we've unfortunately I think we've come to sort of use the",
    "start": "152520",
    "end": "160350"
  },
  {
    "text": "term monolith as a derogatory term we use the word monolith now instead of using the word legacy I would imagine",
    "start": "160350",
    "end": "167520"
  },
  {
    "text": "there's probably some Google trend search I could do to show this happening and I could cherry-pick the data to",
    "start": "167520",
    "end": "173970"
  },
  {
    "text": "prove my point but just go with me because I'm I'm just going to tell you its facts and we can move on but we do talk about the monolith as being a thing",
    "start": "173970",
    "end": "182010"
  },
  {
    "text": "like it's a well understood shared concept but I don't think that's actually true because I think mothers",
    "start": "182010",
    "end": "187980"
  },
  {
    "text": "actually come in all types of sizes and I think it's worth us exploring that very briefly the first thing is when I",
    "start": "187980",
    "end": "194310"
  },
  {
    "text": "talk about a monolith I'm primarily talking about a unit of deployment and so a monolithic system would be one",
    "start": "194310",
    "end": "200760"
  },
  {
    "text": "where all the functionality is has to be deployed on mass as part of a release process there's some nuance around that",
    "start": "200760",
    "end": "207870"
  },
  {
    "start": "206000",
    "end": "252000"
  },
  {
    "text": "but we could start with the kind of de facto the simplest monolithic you'll ever type you will ever see which is so",
    "start": "207870",
    "end": "214020"
  },
  {
    "text": "simple that you probably never actually see it because things are always a bit more complicated than this but basically all of our code is packaged together and",
    "start": "214020",
    "end": "221580"
  },
  {
    "text": "deploy it as a single process we might have multiple copies of that process for",
    "start": "221580",
    "end": "226710"
  },
  {
    "text": "increased scale or robustness and all of our data is in a database and I always",
    "start": "226710",
    "end": "233280"
  },
  {
    "text": "like to tell people that this is a distributed system is just a really simple distributed system it will get",
    "start": "233280",
    "end": "238890"
  },
  {
    "text": "slightly more complicated if you also have you know a web-based interface because now you've gotten at least two",
    "start": "238890",
    "end": "244770"
  },
  {
    "text": "networks involved but most of the time you can sidestep the challenges associated with building distributed",
    "start": "244770",
    "end": "251040"
  },
  {
    "text": "systems in this kind of topology we have the minor variation on this of course which is what some people refer to as",
    "start": "251040",
    "end": "258030"
  },
  {
    "start": "252000",
    "end": "425000"
  },
  {
    "text": "the modular monolith this is where we're embracing cutting-edge ideas from the late 60s in terms of thinking about how",
    "start": "258030",
    "end": "265170"
  },
  {
    "text": "to break the part software into your modular boundaries the idea here is that those modules can theoretically be",
    "start": "265170",
    "end": "271140"
  },
  {
    "text": "worked on independently I actually think Amit Nam of the teams I work with would actually",
    "start": "271140",
    "end": "276330"
  },
  {
    "text": "be better off with a modular monolith than they would a microservice architecture the challenge is often in",
    "start": "276330",
    "end": "282420"
  },
  {
    "text": "how do you find and identify good modular boundaries which allows this",
    "start": "282420",
    "end": "287790"
  },
  {
    "text": "work to be done independently and now with this sort of work I could take have a team working on module see a different",
    "start": "287790",
    "end": "293880"
  },
  {
    "text": "team working on module a and so on and so forth allowing a degree of parallel working but fundamentally the act of deployment",
    "start": "293880",
    "end": "301740"
  },
  {
    "text": "still is a monolithic unit I have to integrate that code together I statically link that code together I",
    "start": "301740",
    "end": "308010"
  },
  {
    "text": "deploy the thing as a single unit at least that is the case for most runtimes",
    "start": "308010",
    "end": "313260"
  },
  {
    "text": "there are of course runtimes out there which really do allow for the hot deployment of modules are in a really",
    "start": "313260",
    "end": "320490"
  },
  {
    "text": "robust way you know they're kind of you know some of you may have heard of Greenspan's law which is the statement",
    "start": "320490",
    "end": "326790"
  },
  {
    "text": "that every system evolves to contain a half-broken implementation of Lisp the microservice",
    "start": "326790",
    "end": "332460"
  },
  {
    "text": "variation of that is that every micro service architecture eventually evolves the point where it contains a",
    "start": "332460",
    "end": "337620"
  },
  {
    "text": "half-broken implementation of Erlang because Erlang does actually allow you to do some really funky staff around",
    "start": "337620",
    "end": "343590"
  },
  {
    "text": "modular deployments and I hoping at the current pace of change in the Java world in about 15 to 20 years we too might",
    "start": "343590",
    "end": "351120"
  },
  {
    "text": "have something that Erlang had 15 years ago cross fingers we'll see what happens but in all seriousness it we may well",
    "start": "351120",
    "end": "357840"
  },
  {
    "text": "start moving back away from micro services if more of us have access to runtimes",
    "start": "357840",
    "end": "363390"
  },
  {
    "text": "which allow us to hot-swap modules the reality is most of us don't and therefore we're forced into think",
    "start": "363390",
    "end": "369480"
  },
  {
    "text": "different ways of working and different sort of architecture topologies a traditional modular monolith will",
    "start": "369480",
    "end": "376710"
  },
  {
    "text": "typically have as well as being all bundled together in a single process the",
    "start": "376710",
    "end": "381720"
  },
  {
    "text": "data is often still bundled up in a single database as well which does cause",
    "start": "381720",
    "end": "387930"
  },
  {
    "text": "you issues if later on you want to maybe split module e out as to a separate micro service architecture and so you",
    "start": "387930",
    "end": "395280"
  },
  {
    "text": "can look at variations of this approach which is something I've advocated in it with a few of the teams I've worked with which is you know if you think that",
    "start": "395280",
    "end": "401730"
  },
  {
    "text": "maybe we'll do micro service in the future but we're not sure one of the ways you can kind of hedge",
    "start": "401730",
    "end": "406810"
  },
  {
    "text": "your bets is to start with module boundaries where you think your micro-service boundaries would be but",
    "start": "406810",
    "end": "412180"
  },
  {
    "text": "also isolate the data associated with those micro-services because it's often decomposing the database is the most",
    "start": "412180",
    "end": "419110"
  },
  {
    "text": "problematic aspect we'll come back to that idea of how we pull databases apart a bit later on turns out it's really",
    "start": "419110",
    "end": "425139"
  },
  {
    "start": "425000",
    "end": "478000"
  },
  {
    "text": "difficult and then of course we've got the other type of monoliths I'll two more to look at we've got kind of the",
    "start": "425139",
    "end": "431469"
  },
  {
    "text": "third party model if this might be your your customizable off-the-shelf software finance base CRM it could be a cloud",
    "start": "431469",
    "end": "438580"
  },
  {
    "text": "software it could be staff based software this is software which is completely out of your control and we're",
    "start": "438580",
    "end": "444129"
  },
  {
    "text": "often in situations though where we want to migrate functionality away from these sorts of things you have limited ability",
    "start": "444129",
    "end": "449289"
  },
  {
    "text": "to change the system you're even very little control over how it's implemented or built if you're",
    "start": "449289",
    "end": "455529"
  },
  {
    "text": "lucky you'll get a database and that can open up interesting possibilities of doing things like change data capture you might even have api's if you're very",
    "start": "455529",
    "end": "463060"
  },
  {
    "text": "very lucky again I have worked with or clients that have had to migrate away from their own software but treat it",
    "start": "463060",
    "end": "469150"
  },
  {
    "text": "like blackbox software because they've lost the source code and it don't lose your source code please check source",
    "start": "469150",
    "end": "474789"
  },
  {
    "text": "code in it is 2019 but I still have to say that every now and then the worst type of model if we deal with and buy",
    "start": "474789",
    "end": "481689"
  },
  {
    "start": "478000",
    "end": "565000"
  },
  {
    "text": "worse I mean the type of monolithic architecture which tends to not be very beneficial for what we tend to want",
    "start": "481689",
    "end": "488349"
  },
  {
    "text": "nowadays is of what's called the distributed monolith the distributed monolith is one where our software is",
    "start": "488349",
    "end": "494589"
  },
  {
    "text": "actually the sort of deployment topology of our software is functionality deployed as separate processes those",
    "start": "494589",
    "end": "500289"
  },
  {
    "text": "processes are communicating over networks but because of how we've broken that system apart or maybe other factors",
    "start": "500289",
    "end": "506909"
  },
  {
    "text": "we're in a situation where code often needs to be changed across module boundaries maybe business functionality",
    "start": "506909",
    "end": "513849"
  },
  {
    "text": "is smeared across these boundaries the classic three-tiered architecture would fall under this kind of banner and now",
    "start": "513849",
    "end": "520448"
  },
  {
    "text": "you enter the world of either having to deploy everything together or quite complex release coordination activities",
    "start": "520449",
    "end": "525490"
  },
  {
    "text": "to roll out changes we have to replace the whole system and these sorts of distributed monoliths have the problem",
    "start": "525490",
    "end": "532240"
  },
  {
    "text": "that they have all the downsides of being a distributed system but also many of the downside",
    "start": "532240",
    "end": "537410"
  },
  {
    "text": "of being a monolithic system as well this is a bad place to be if you're here the the secret to here is to not mad",
    "start": "537410",
    "end": "544879"
  },
  {
    "text": "anymore services maybe you should be merging things back together again sometimes these",
    "start": "544879",
    "end": "550039"
  },
  {
    "text": "distribution lists can actually emerge partly because of how your deployment processes work",
    "start": "550039",
    "end": "555049"
  },
  {
    "text": "but fundamentally these systems have a high cost of change the scope of deployments are much larger there are",
    "start": "555049",
    "end": "560809"
  },
  {
    "text": "many many more things to go wrong and you typically have much higher release coordination activity those of you who",
    "start": "560809",
    "end": "567439"
  },
  {
    "start": "565000",
    "end": "611000"
  },
  {
    "text": "are practicing a relief technique called to the release train choo choo everybody",
    "start": "567439",
    "end": "572629"
  },
  {
    "text": "aboard of the release train you may sometimes sleep walk into a distributed monolith the way the released trains",
    "start": "572629",
    "end": "578509"
  },
  {
    "text": "work is you set a cadence you say every four weeks all the software we've created will go live at the same time",
    "start": "578509",
    "end": "584929"
  },
  {
    "text": "the whole point of a release train is it's a remedial activity it is a stepping stone if you're looking to",
    "start": "584929",
    "end": "591529"
  },
  {
    "text": "actually improve your delivery practices the release train is not an aspirational process for shipping software it's like",
    "start": "591529",
    "end": "598189"
  },
  {
    "text": "having training wheels on your bike if you stay with the release train for too long you codify the idea that we bundle",
    "start": "598189",
    "end": "605089"
  },
  {
    "text": "all of our software together and release it periodically that's not the point we're trying to move through that towards proper continuous delivery there",
    "start": "605089",
    "end": "612799"
  },
  {
    "start": "611000",
    "end": "711000"
  },
  {
    "text": "are some processes out there such as safe which is anything but which",
    "start": "612799",
    "end": "619579"
  },
  {
    "text": "actually codifies the release train as being the best way to release software which is patently insane if you don't",
    "start": "619579",
    "end": "627709"
  },
  {
    "text": "know more on this topic I suggest you read a book that's quite hold now called continuous delivery which explains why a",
    "start": "627709",
    "end": "632720"
  },
  {
    "text": "release train may not be what you want to aim for but it can actually lead to these really tightly integrated",
    "start": "632720",
    "end": "638359"
  },
  {
    "text": "architectures so what we're looking for here is monoliths have properties those",
    "start": "638359",
    "end": "645199"
  },
  {
    "text": "properties may or may not be a problem for you the fundamentally you have to accept that the monolith isn't",
    "start": "645199",
    "end": "650329"
  },
  {
    "text": "necessarily the enemy it is extremely rare that your goal is to kill the",
    "start": "650329",
    "end": "656029"
  },
  {
    "text": "monolith it sometimes happens but most of the time you're in a situation where you're trying to achieve something as a",
    "start": "656029",
    "end": "662359"
  },
  {
    "text": "business but your current architecture won't let you achieve that goal and so what you need to do is you change the",
    "start": "662359",
    "end": "668269"
  },
  {
    "text": "architecture enough to do what you need to do maybe to handle more scale to allow more",
    "start": "668269",
    "end": "673910"
  },
  {
    "text": "developers to work side-by-side effectively and efficiently it is vanishingly rare that I work with teams",
    "start": "673910",
    "end": "679670"
  },
  {
    "text": "who are trying to completely remove the old monolithic system they know we just need to change it enough to solve their",
    "start": "679670",
    "end": "685940"
  },
  {
    "text": "immediate problems and then they get on with other things this idea I think too often is we're going to engage in some",
    "start": "685940",
    "end": "692660"
  },
  {
    "text": "kind of like Big Bang rewrite of our systems so you know as Martin Fowler",
    "start": "692660",
    "end": "699199"
  },
  {
    "text": "once said if you do a Big Bang rewrite the only thing you're guaranteed is a Big Bang which is great I like",
    "start": "699199",
    "end": "705860"
  },
  {
    "text": "explosions in action films I don't necessarily like explosions in my IT projects the reality is that you know",
    "start": "705860",
    "end": "714260"
  },
  {
    "start": "711000",
    "end": "746000"
  },
  {
    "text": "micro-services bring an awful lot of pain and suffering but it's very hard to",
    "start": "714260",
    "end": "719510"
  },
  {
    "text": "assess how that's going to impact you until you've actually started using them it's this reason I don't you know we",
    "start": "719510",
    "end": "725120"
  },
  {
    "text": "need to think about adopting micro-service is not like flicking a switch it's like turning the dial as you",
    "start": "725120",
    "end": "730850"
  },
  {
    "text": "turn that dial up and you have more services you get more opportunity to take advantage of those services you",
    "start": "730850",
    "end": "737389"
  },
  {
    "text": "also have more opportunity to take advantage of experience in a really true",
    "start": "737389",
    "end": "742839"
  },
  {
    "text": "visceral way how horrifying distributed systems can become and for that reason",
    "start": "742839",
    "end": "747860"
  },
  {
    "start": "746000",
    "end": "900000"
  },
  {
    "text": "it's a good idea to turn that dial up gradually create one or two services maybe extract just the one extract a",
    "start": "747860",
    "end": "754670"
  },
  {
    "text": "piece of functionality from your monolith integrate it with the monolith first deploy it into a production",
    "start": "754670",
    "end": "761149"
  },
  {
    "text": "environment and learn from that before you move on you will not appreciate the",
    "start": "761149",
    "end": "766519"
  },
  {
    "text": "true horror pain and suffering of microservices until you're running them in production you have not completed a",
    "start": "766519",
    "end": "772790"
  },
  {
    "text": "migration until it is in production so it's really important not just from the point of view that we're looking to incremental er change our architecture",
    "start": "772790",
    "end": "779420"
  },
  {
    "text": "for you know it not taking us years to change something but also in terms of",
    "start": "779420",
    "end": "784430"
  },
  {
    "text": "improving our feedback cycles start with something easy extract here deploy it",
    "start": "784430",
    "end": "790250"
  },
  {
    "text": "learn from that experience use that to refine the next thing you do if",
    "start": "790250",
    "end": "795260"
  },
  {
    "text": "therefore follows though that any techniques we use in this area must be things that allow us to make incremental",
    "start": "795260",
    "end": "801170"
  },
  {
    "text": "change to aim system without requiring the whole thing to be we architected this also though of",
    "start": "801170",
    "end": "807420"
  },
  {
    "text": "course has the added benefit that any incremental migration techniques we might use can also allow us to",
    "start": "807420",
    "end": "812460"
  },
  {
    "text": "interleave a bit of architectural refactoring with you know shipping some features to our customers which might",
    "start": "812460",
    "end": "818340"
  },
  {
    "text": "actually be a good idea so that all the techniques under take you through are designed to be used in an incremental",
    "start": "818340",
    "end": "823950"
  },
  {
    "text": "fashion to allow you to turn that dial gradually to migrate your system to",
    "start": "823950",
    "end": "829230"
  },
  {
    "text": "learn as you go and then maybe as you become more experienced you become bolder you can turn that dial more",
    "start": "829230",
    "end": "834540"
  },
  {
    "text": "quickly although maybe you don't need to you've also got to remember that micro services",
    "start": "834540",
    "end": "839670"
  },
  {
    "text": "are not the goal you don't win by doing micro services I win because I sell",
    "start": "839670",
    "end": "845070"
  },
  {
    "text": "copies of my book that's great for me I'm not sure that that's necessary a life goal for yourselves this is why",
    "start": "845070",
    "end": "851970"
  },
  {
    "text": "it's all so silly when people start comparing how many micro services you've got like somehow that's important",
    "start": "851970",
    "end": "858080"
  },
  {
    "text": "comparing yourself with another company it's not helpful because they're in a different situation with different",
    "start": "858080",
    "end": "864060"
  },
  {
    "text": "drivers different challenges different skills different technology so what mons oh I've got 1,400 micro",
    "start": "864060",
    "end": "869730"
  },
  {
    "text": "services it seems nuts but they seem to be working quite well as a company you might need four if you're four and your",
    "start": "869730",
    "end": "875820"
  },
  {
    "text": "developers are happy and your customers are happy move on with your life don't worry too much about it but just above",
    "start": "875820",
    "end": "880950"
  },
  {
    "text": "all please please do buy my book so incremental migration patterns let's",
    "start": "880950",
    "end": "886980"
  },
  {
    "text": "start with one of the most well known in this area we're gonna look at basically two patterns for how we might pull apart",
    "start": "886980",
    "end": "892830"
  },
  {
    "text": "our application code and a couple around how we deal with the data we'll talk a little bit about data and data",
    "start": "892830",
    "end": "898860"
  },
  {
    "text": "management as well so we can start off with quite a well-known patent and that's a pattern called the strangler",
    "start": "898860",
    "end": "905010"
  },
  {
    "start": "900000",
    "end": "998000"
  },
  {
    "text": "fig pattern so this is actually named after a type of plant that you can find Australia what we're seeing here is",
    "start": "905010",
    "end": "910800"
  },
  {
    "text": "actually a tree in the rain forest in Queensland we're seeing a tree and wrapped around it is actually a type of",
    "start": "910800",
    "end": "915990"
  },
  {
    "text": "thick such a vine and basically it sort of descends and wraps itself around the plant the idea with the strangler fig is",
    "start": "915990",
    "end": "922980"
  },
  {
    "text": "that by itself it couldn't possibly establish itself in a jungle setting it couldn't be tall enough to get it you",
    "start": "922980",
    "end": "929310"
  },
  {
    "text": "know roots into the soil but also to get leaves up into the canopy or it can get photos",
    "start": "929310",
    "end": "934499"
  },
  {
    "text": "this everything else and so it wraps itself around an existing structure and the strangler fig pattern in our",
    "start": "934499",
    "end": "940859"
  },
  {
    "text": "application sense is the same idea we wrap new functionality around old functionality and this has also proved",
    "start": "940859",
    "end": "947459"
  },
  {
    "text": "out another thing I've been saying for many years after having lived in Australia for quite a while it's that every people in Australia were lovely",
    "start": "947459",
    "end": "953819"
  },
  {
    "text": "the food nice but all the things on the land want to kill you and all the things in the sea want to kill you the weather",
    "start": "953819",
    "end": "959669"
  },
  {
    "text": "wants to kill you and some plants apparently want to kill other plants so please do go but just look up and watch",
    "start": "959669",
    "end": "965309"
  },
  {
    "text": "for drop bears so the strangler fig pattern is very useful and it's surprisingly simple and bit but and and",
    "start": "965309",
    "end": "972869"
  },
  {
    "text": "also can be used in so many different contexts the way it kind of works is we",
    "start": "972869",
    "end": "977939"
  },
  {
    "text": "just wrap something new around the old system what we're really doing is we're intercepting calls to the old piece of",
    "start": "977939",
    "end": "984089"
  },
  {
    "text": "functionality and diverting it to where the new functionality exists this has a nice padded property that the existing",
    "start": "984089",
    "end": "991229"
  },
  {
    "text": "monastic system effectively remains unchanged well functionality hasn't been migrated calls go to the old system as",
    "start": "991229",
    "end": "998069"
  },
  {
    "start": "998000",
    "end": "1314000"
  },
  {
    "text": "before there are some types of architectures that make it extremely easy to implement a classic example of",
    "start": "998069",
    "end": "1005509"
  },
  {
    "text": "this would be something like a system driven via HTTP so in this situation here we have a mullah thick system which",
    "start": "1005509",
    "end": "1012169"
  },
  {
    "text": "is restricting calls from some upstream source via the HTTP protocol HTTP works",
    "start": "1012169",
    "end": "1018679"
  },
  {
    "text": "really well here because it's very easy to transparently intercept and read and divert calls without the client really",
    "start": "1018679",
    "end": "1025699"
  },
  {
    "text": "needing to be aware of that so this could be asked looking to intercept HTTP",
    "start": "1025699",
    "end": "1030740"
  },
  {
    "text": "calls underneath the user interface this could be a headless application the first thing we would do in this",
    "start": "1030740",
    "end": "1036558"
  },
  {
    "text": "situation is we either put a proxy in place that proxy is going to sit between our monolithic system and the upstream",
    "start": "1036559",
    "end": "1043428"
  },
  {
    "text": "services I would advocate your totnes proxy in place and you deploy that proxy into production and you do nothing else",
    "start": "1043429",
    "end": "1050090"
  },
  {
    "text": "at this point it will just be doing pass-through calls the reason for doing this when we're moving to a Mike",
    "start": "1050090",
    "end": "1055940"
  },
  {
    "text": "reservist architecture we are adding Network hops Network hops add latency it's a good idea to find out how bad",
    "start": "1055940",
    "end": "1062960"
  },
  {
    "text": "your network is quite early on in this process if you find that sticking your network proxy in between just your upstream of",
    "start": "1062960",
    "end": "1070049"
  },
  {
    "text": "your downstream service and you know 400 milliseconds of latency your network sucks and you need to get a better one",
    "start": "1070049",
    "end": "1077370"
  },
  {
    "text": "I remember in 2005 we spent it was a banking client we spent ages tracking",
    "start": "1077370",
    "end": "1082590"
  },
  {
    "text": "down a performs bottleneck and to find the all traffic between two servers in",
    "start": "1082590",
    "end": "1087600"
  },
  {
    "text": "the same data center in London were being routed via Luxembourg that puts a bit of a cramp on your day and if you do",
    "start": "1087600",
    "end": "1094620"
  },
  {
    "text": "have a network which does suffer from issues like that it's good to find that out early and this is also the thing",
    "start": "1094620",
    "end": "1100590"
  },
  {
    "text": "where even our incremental refactorings can be broken down into a series of smaller steps each of those steps can be",
    "start": "1100590",
    "end": "1106740"
  },
  {
    "text": "put into a production environment and can be assessed so at this point we're able to assess the impact of adding an",
    "start": "1106740",
    "end": "1112710"
  },
  {
    "text": "additional network hop we've also of course got the proxy in place to start intercepting our calls now what you do is you start working on",
    "start": "1112710",
    "end": "1119760"
  },
  {
    "text": "your brand-new service you deploy that service into a production environment you test it in situ we can do this",
    "start": "1119760",
    "end": "1126210"
  },
  {
    "text": "because it is not released to our users we've too often I think can bound",
    "start": "1126210",
    "end": "1131399"
  },
  {
    "text": "combine these two concepts together in our heads the idea of deployment into a production environment and relief of",
    "start": "1131399",
    "end": "1138929"
  },
  {
    "text": "that software to our users those are actually two separate activities I can deploy something without releasing it",
    "start": "1138929",
    "end": "1145830"
  },
  {
    "text": "when I hide something behind a feature flag it is deployed but not released from doing dark launching is deployed",
    "start": "1145830",
    "end": "1152309"
  },
  {
    "text": "but not released in this situation here I'm deploying my service into production I can make sure the deployment process",
    "start": "1152309",
    "end": "1158460"
  },
  {
    "text": "works I can test it in situ but it's a safe operation because at this point no calls have been diverted once I'm happy",
    "start": "1158460",
    "end": "1165720"
  },
  {
    "text": "that my new service is working properly and I think it's ready to take the traffic all I need to do is to change",
    "start": "1165720",
    "end": "1171299"
  },
  {
    "text": "configuration the proxy to divert calls it used to go to the monolith over into my new micro service architecture if I",
    "start": "1171299",
    "end": "1177899"
  },
  {
    "text": "have a problem it's a quick rollback what I need to do is change my proxy configuration we will have to talk about",
    "start": "1177899",
    "end": "1184169"
  },
  {
    "text": "state if you're going to potentially have a city appear at a time where you might want to flick back to actually",
    "start": "1184169",
    "end": "1189779"
  },
  {
    "text": "serving that functionality out of the monolithic system and these and the service you've created is needing to",
    "start": "1189779",
    "end": "1195299"
  },
  {
    "text": "store or a tree state from a database that does mean for a short period of time you would have kote you both have to use an access the",
    "start": "1195299",
    "end": "1202070"
  },
  {
    "text": "same database during that migration period but nonetheless it's an incredible useful idea I've done",
    "start": "1202070",
    "end": "1208160"
  },
  {
    "text": "variations of this with user interfaces and other protocols I chatted to a real estate company in Zurich called home",
    "start": "1208160",
    "end": "1214400"
  },
  {
    "text": "gates who use a stronger patent but they were intercepting FTP not HTTP calls I've seen it done with message brokers I",
    "start": "1214400",
    "end": "1221360"
  },
  {
    "text": "think there's a lot of different ways to make this pattern work one of the nice things about this is that no point here",
    "start": "1221360",
    "end": "1227240"
  },
  {
    "text": "is the monolith aware that anything is going on so these sites of ideas can work very well when you're looking to migrate",
    "start": "1227240",
    "end": "1233060"
  },
  {
    "text": "functionality away from existing black box systems that you'd have no control over this could also work well if you",
    "start": "1233060",
    "end": "1238910"
  },
  {
    "text": "didn't want to disturb the team looking after the monolith you're doing something maybe a refactoring around the edge so that's quite useful when we",
    "start": "1238910",
    "end": "1246290"
  },
  {
    "text": "start looking inside our model if we realize there's only certain pieces of functionality it's likely to work for so",
    "start": "1246290",
    "end": "1251600"
  },
  {
    "text": "this is sort of showing the relationships between bits of business functionality inside our monolith we've got a bit of a directive a cyclical",
    "start": "1251600",
    "end": "1259100"
  },
  {
    "text": "graph of dependencies this is the kind of thing that would come out sort of domain modeling exercise so these these",
    "start": "1259100",
    "end": "1264170"
  },
  {
    "text": "boxes they might represent your bounded contexts for example and therefore all your candidates for which things should",
    "start": "1264170",
    "end": "1270800"
  },
  {
    "text": "be a service and so if I'm looking at something like say invoicing or order",
    "start": "1270800",
    "end": "1276500"
  },
  {
    "text": "management those things are likely going to be higher up in my call stack it's a bit easier to intercept those calls",
    "start": "1276500",
    "end": "1282710"
  },
  {
    "text": "coming in but if I take a look at something say the ability to award points for boarding making orders or",
    "start": "1282710",
    "end": "1289010"
  },
  {
    "text": "sending notifications to our customers those are things which are deeper inside our system there's not a call that comes",
    "start": "1289010",
    "end": "1295220"
  },
  {
    "text": "in that I can match that functionality when I place an order receive a payment as a side effect of those operations I",
    "start": "1295220",
    "end": "1302180"
  },
  {
    "text": "might send notifications so they thought if I wanted to extract notifications related functionality or loyalty related",
    "start": "1302180",
    "end": "1309290"
  },
  {
    "text": "function meows that monolith I'm gonna have to get my hands dirty and go inside the monolith and sort that out and this",
    "start": "1309290",
    "end": "1315170"
  },
  {
    "start": "1314000",
    "end": "1518000"
  },
  {
    "text": "is where another pattern comes in and that's a pattern called branch by abstraction now this pattern is something you might know of if you've",
    "start": "1315170",
    "end": "1321380"
  },
  {
    "text": "done any trunk based development is very useful in that context but it's also incredibly useful for micro service",
    "start": "1321380",
    "end": "1327650"
  },
  {
    "text": "migrations because it gives us a safe way to factor critical code paths in a way that",
    "start": "1327650",
    "end": "1332860"
  },
  {
    "text": "can also be verified we'll come back to that verification a bit later on so the",
    "start": "1332860",
    "end": "1337899"
  },
  {
    "text": "way this works is we need to create an abstraction over the current functionality the functionality you're",
    "start": "1337899",
    "end": "1343929"
  },
  {
    "text": "trying to move you need to basically get all that functionality in a box put it in the box still a bit of refactoring and so you know you start looking around",
    "start": "1343929",
    "end": "1350320"
  },
  {
    "text": "and get all the notifications functionality and now I've got a notifications class that's easy and I",
    "start": "1350320",
    "end": "1355629"
  },
  {
    "text": "changed the existing functionality to use that class so this is just a good bit of creating a nice abstraction and",
    "start": "1355629",
    "end": "1361840"
  },
  {
    "text": "then create an abstraction point which would allow me to toggle between implementations this is what's known as",
    "start": "1361840",
    "end": "1367029"
  },
  {
    "text": "an interface in an object-oriented system so at this point the sisters would be a safe refactoring to do most",
    "start": "1367029",
    "end": "1373629"
  },
  {
    "text": "of you probably are using languages that give you a refactoring browser just",
    "start": "1373629",
    "end": "1378700"
  },
  {
    "text": "creating a new abstraction point over an existing bit of functionality this is an easy refactoring to do and at this point",
    "start": "1378700",
    "end": "1385990"
  },
  {
    "text": "nothing's got exciting you can be chipping away at this over a period of a few days while you're doing other things",
    "start": "1385990",
    "end": "1391320"
  },
  {
    "text": "what this is now giving us is a point at which we could swap in an alternative implementation of our notifications",
    "start": "1391320",
    "end": "1398110"
  },
  {
    "text": "functionality but we could do that inside the same running system the reason is patents called branch by",
    "start": "1398110",
    "end": "1403809"
  },
  {
    "text": "abstraction is it's really being compared to the normal way we would handle this which is potentially doing is",
    "start": "1403809",
    "end": "1408909"
  },
  {
    "text": "refactoring in a different source code branch the issue is that denies as a whole load of interesting possibilities",
    "start": "1408909",
    "end": "1415090"
  },
  {
    "text": "when it comes to how we roll this functionality out also merging so this",
    "start": "1415090",
    "end": "1420490"
  },
  {
    "text": "is actually a much smarter technique for these kinds of situations so we've got our extraction point this is easy the",
    "start": "1420490",
    "end": "1426820"
  },
  {
    "text": "next thing we're going to do is we can start working on our brand-new service implementation and this is going to be a",
    "start": "1426820",
    "end": "1432789"
  },
  {
    "text": "nice news notification service that's going to receive requests the functionality that used to be inside our",
    "start": "1432789",
    "end": "1439179"
  },
  {
    "text": "monolith has been copied into that notification service assuming we can do a straight copy and paste that service",
    "start": "1439179",
    "end": "1446350"
  },
  {
    "text": "calling implementation there is effectively just going to be client code inside the monolith it's going to call",
    "start": "1446350",
    "end": "1451450"
  },
  {
    "text": "out to our service and that service coding implementation is going to implement the same interface it is",
    "start": "1451450",
    "end": "1457600"
  },
  {
    "text": "checked in it is deployed into production but again it is deployed but not really",
    "start": "1457600",
    "end": "1462639"
  },
  {
    "text": "because the implementation of the abstraction we're using is the existing functionality when we're ready and we",
    "start": "1462639",
    "end": "1469389"
  },
  {
    "text": "think you know what our new functionality is working well and you know how I've been able to test it because we've been able to test it in production because we've been deploying",
    "start": "1469389",
    "end": "1475749"
  },
  {
    "text": "on notification service in production we can switch it over and that again is a",
    "start": "1475749",
    "end": "1480879"
  },
  {
    "text": "simple use for feature flag so now the implementation of the interface we're using is our new service calling",
    "start": "1480879",
    "end": "1486909"
  },
  {
    "text": "implementation if that works everyone is happy and low there was much rejoicing and then you can gob viously clean up",
    "start": "1486909",
    "end": "1494080"
  },
  {
    "text": "the feature flag after a period of several weeks so once you feel that you don't want the option to be able to switch it back cleanly you can then do",
    "start": "1494080",
    "end": "1501009"
  },
  {
    "text": "is if you want to remove the feature flag and potentially even remove the abstraction point and the old",
    "start": "1501009",
    "end": "1507249"
  },
  {
    "text": "implementation there by cleaning up the code base nice thing about having both implementations in there is it opens up",
    "start": "1507249",
    "end": "1513879"
  },
  {
    "text": "the possibility of us doing things like dark launching and parallel runs which is a really interesting techniques all",
    "start": "1513879",
    "end": "1519879"
  },
  {
    "start": "1518000",
    "end": "1896000"
  },
  {
    "text": "right before I forget if you want to do that little refactoring before we get to the service a bit there's a really good book by Michael feathers called working",
    "start": "1519879",
    "end": "1526269"
  },
  {
    "text": "effectively with monolith code which I'm going to get Michael to rename it so he can jump on the same bang banking that",
    "start": "1526269",
    "end": "1532119"
  },
  {
    "text": "I'd be riding the last ten years but this is a great book about how to refactor existing systems he talks a lot",
    "start": "1532119",
    "end": "1537969"
  },
  {
    "text": "about how we identify seems encapsulate code safely inside those seams and",
    "start": "1537969",
    "end": "1543009"
  },
  {
    "text": "making you know and how we can add tests to do that operation in a really nice managed way there's different versions",
    "start": "1543009",
    "end": "1549190"
  },
  {
    "text": "of the code examples of his book for different languages as well if we can",
    "start": "1549190",
    "end": "1554589"
  },
  {
    "text": "implement both implementations of our notifications functionality inside the same monolith at the same time it allows",
    "start": "1554589",
    "end": "1561039"
  },
  {
    "text": "it to do something like a parallel run with a parallel run when a call comes in to implement that piece of functionality",
    "start": "1561039",
    "end": "1567219"
  },
  {
    "text": "we actually can dispatch that functionality to both implementations this might look a bit odd but what we're",
    "start": "1567219",
    "end": "1573609"
  },
  {
    "text": "basically doing here is these patterns are architectural refactoring patterns a refactoring is something where we change",
    "start": "1573609",
    "end": "1580359"
  },
  {
    "text": "the structure of the code but we don't want to change the behavior of the code we want to be able to verify that the",
    "start": "1580359",
    "end": "1586629"
  },
  {
    "text": "system is still functionally the same as it was before but we've now got an architecture the let's do other things",
    "start": "1586629",
    "end": "1592450"
  },
  {
    "text": "so how do we make sure it's function equivalent we'll do a comparison and if we can coexist both implementations we",
    "start": "1592450",
    "end": "1599470"
  },
  {
    "text": "can do a live comparison so in this situation a call that comes in with cool both existing implementation and the",
    "start": "1599470",
    "end": "1606760"
  },
  {
    "text": "brand new service calling implementation will be able to verify whether or not we get the same answers we can also verify",
    "start": "1606760",
    "end": "1612880"
  },
  {
    "text": "whether or not the brand new service according implementation responds quickly enough and this can allow us to",
    "start": "1612880",
    "end": "1618640"
  },
  {
    "text": "actually sort of say well actually we are executing both pathways it seems to be behaving fine okay now we're ready to",
    "start": "1618640",
    "end": "1624520"
  },
  {
    "text": "switch over during this period normally the existing implementation would kind of be the source of truth in terms of",
    "start": "1624520",
    "end": "1630370"
  },
  {
    "text": "which results you actually would keep on going forward this is an incredibly useful technique a github actually uses",
    "start": "1630370",
    "end": "1637840"
  },
  {
    "text": "technique a lot into it when they've been restructuring their Ruby code bases but actually created a tool called",
    "start": "1637840",
    "end": "1642940"
  },
  {
    "text": "github scientist which is a library for managing these parallel run situations allowing you to run two implementations",
    "start": "1642940",
    "end": "1649150"
  },
  {
    "text": "of the code and actually set up sort of like a scoring system say is the new",
    "start": "1649150",
    "end": "1654520"
  },
  {
    "text": "implementation working appropriately this is written for Ruby but there's a whole load of ports for different languages right now it's there's a lot",
    "start": "1654520",
    "end": "1662320"
  },
  {
    "text": "of Perl ones there that's really hard anyway I didn't realize that was still a thing but it is still a thing and it's",
    "start": "1662320",
    "end": "1668440"
  },
  {
    "text": "got scientist ports for it now this is quite useful okay so we can now run these things side by side again not some",
    "start": "1668440",
    "end": "1674710"
  },
  {
    "text": "only something we can do because of that branch by abstraction pattern plus it also means we get to use trunk based",
    "start": "1674710",
    "end": "1679809"
  },
  {
    "text": "development which means everyone's going to be happier so that's good down with branches I have sides that the data",
    "start": "1679809",
    "end": "1687190"
  },
  {
    "text": "question and we need to talk about data very briefly with our normal monolithic system we have all of our data in a",
    "start": "1687190",
    "end": "1692980"
  },
  {
    "text": "database I've extracted out my new functionality from my monolith but my",
    "start": "1692980",
    "end": "1698350"
  },
  {
    "text": "invoicing service needs to access data so the question is what should I do in a",
    "start": "1698350",
    "end": "1703600"
  },
  {
    "text": "situation now when we're looking at situations where we may want to switch which functionality is live either the",
    "start": "1703600",
    "end": "1710980"
  },
  {
    "text": "invoicing functionality in the monolith versus the invoicing functionality in our new invoicing service we're in that",
    "start": "1710980",
    "end": "1716950"
  },
  {
    "text": "state where we're switching between it it's sort of quite appropriate to just sort of for a short period of time to",
    "start": "1716950",
    "end": "1723190"
  },
  {
    "text": "just access the same database once you've decided though that actually know the invoicing service is now where",
    "start": "1723190",
    "end": "1729549"
  },
  {
    "text": "dysfunctionality is going to live we need to avoid this direct database connection because that's going to be an ongoing source of coupling you know as",
    "start": "1729549",
    "end": "1737109"
  },
  {
    "text": "we all know if any of you spent any time looking to micro services menu you know virtually everybody will say don't share",
    "start": "1737109",
    "end": "1744279"
  },
  {
    "text": "databases and there's a really good reason behind that so that isn't like doing this but for short periods of time",
    "start": "1744279",
    "end": "1749679"
  },
  {
    "text": "as a migration technique it's ok as long as you kind of you're doing this for like a few weeks just to just know in",
    "start": "1749679",
    "end": "1755710"
  },
  {
    "text": "your head you haven't actually finished extracting that invoicing service because you're still showing a database so until we've dealt with that situation",
    "start": "1755710",
    "end": "1762519"
  },
  {
    "text": "your extraction is not complete so we then need to think about is ok with I",
    "start": "1762519",
    "end": "1768070"
  },
  {
    "text": "can't do this what are the kind of scenarios well the first thing is to think about is well what is the data I'm",
    "start": "1768070",
    "end": "1774190"
  },
  {
    "text": "trying to access so if the data I'm trying to access is data that I don't really own like it's non invoice related",
    "start": "1774190",
    "end": "1781779"
  },
  {
    "text": "data but data I need to be aware of for example I might need to look up a customer details or information about an",
    "start": "1781779",
    "end": "1788619"
  },
  {
    "text": "order that data and the processes that manage that data that's all still inside",
    "start": "1788619",
    "end": "1794139"
  },
  {
    "text": "the monolithic system in that situation is completely appropriate for our brand new service to go to the monolith and",
    "start": "1794139",
    "end": "1800109"
  },
  {
    "text": "ask so in this situation we expose some kind of content service interface in this example here have made that an API",
    "start": "1800109",
    "end": "1806679"
  },
  {
    "text": "so I go fetch the information I want I've avoided direct database access by",
    "start": "1806679",
    "end": "1811989"
  },
  {
    "text": "creating its API I'm allowing myself the ability to decide what is shared and what is hidden now if the data you want",
    "start": "1811989",
    "end": "1820119"
  },
  {
    "text": "is really data that you should own we need to invert this relationship in that",
    "start": "1820119",
    "end": "1825340"
  },
  {
    "text": "situation we need to grab that data are skipping this we need to grab that data from the monolithic system to me",
    "start": "1825340",
    "end": "1833169"
  },
  {
    "text": "transitions and pull that data over into our schema into our world so we now want to own and manage that",
    "start": "1833169",
    "end": "1840639"
  },
  {
    "text": "data it is ours we should now be the source of truth for this data the monolith of course needs invoicing",
    "start": "1840639",
    "end": "1846460"
  },
  {
    "text": "data so it now needs to come and talk to our brand-new service so it's honey you",
    "start": "1846460",
    "end": "1851889"
  },
  {
    "text": "got to decide when you're putting a service out what data do you need some data is yours and that should come with",
    "start": "1851889",
    "end": "1856989"
  },
  {
    "text": "you some data should stay where it is and then you user well defined API the the kind of",
    "start": "1856989",
    "end": "1862049"
  },
  {
    "text": "difficult situation is sometimes with these monoliths you can sometimes end up a situation whether the - depends on you and you depend on the monolith and then",
    "start": "1862049",
    "end": "1867870"
  },
  {
    "text": "things get a bit hairy but you know I can only cover so much stuff in this talk so let's go a bit deeper into this",
    "start": "1867870",
    "end": "1875190"
  },
  {
    "text": "idea of moving data because just that transition is quite nice look they're just all did I made a box appear and",
    "start": "1875190",
    "end": "1880770"
  },
  {
    "text": "then the Box traveled across the system and I knew if I was being mean I could say and that's how you do dates",
    "start": "1880770",
    "end": "1886289"
  },
  {
    "text": "basically fracturing which of course is hiding a lot of information and detail so we all talked about a couple of show",
    "start": "1886289",
    "end": "1893610"
  },
  {
    "text": "a couple of examples of database refactorings now the first thing I'd say when we look at database refactoring is",
    "start": "1893610",
    "end": "1899520"
  },
  {
    "start": "1896000",
    "end": "2329000"
  },
  {
    "text": "do take a look at this book by Scott Ambler and promote ah glad you're still it's probably a little bit old now but",
    "start": "1899520",
    "end": "1905399"
  },
  {
    "text": "this is for database refactoring what Martin's book we fracturing is full code refactoring so this is talking about the",
    "start": "1905399",
    "end": "1910919"
  },
  {
    "text": "low-level patterns of how you refactor a relational database most of the stuff I'm talking about here",
    "start": "1910919",
    "end": "1917220"
  },
  {
    "text": "and I talked about in the book are for refactoring relational databases because in many ways they have more challenges",
    "start": "1917220",
    "end": "1922799"
  },
  {
    "text": "in this space but a lot of these techniques work just as well for other types of non relational databases the other thing you're going to want as",
    "start": "1922799",
    "end": "1929460"
  },
  {
    "text": "if you're doing this work is some kind of tool chain that allows you to make incremental changes to databases allows",
    "start": "1929460",
    "end": "1937230"
  },
  {
    "text": "you to version control those changes and run them in a deterministic fashion an example tool would be something like",
    "start": "1937230",
    "end": "1943440"
  },
  {
    "text": "Flyway DB the Flyway D bees excellent for doing this there are other similar tool chains for different languages by a",
    "start": "1943440",
    "end": "1949350"
  },
  {
    "text": "much much more hesitant about the use of schema diffing tools for these kinds of",
    "start": "1949350",
    "end": "1954419"
  },
  {
    "text": "purposes but take a look at Flyway and you'll find the equivalent for whatever kind of environment you want Ruby",
    "start": "1954419",
    "end": "1959549"
  },
  {
    "text": "migrations is another great example and so we've got a tour like this we've got some basic refactorings it's all looks",
    "start": "1959549",
    "end": "1966510"
  },
  {
    "text": "like it's gonna be quite straightforward and then we start getting into some nasty issues so we can start off with a pretty simple case here we've got a",
    "start": "1966510",
    "end": "1972809"
  },
  {
    "text": "monolithic ecommerce site we actually sell compact discs I've been selling",
    "start": "1972809",
    "end": "1977940"
  },
  {
    "text": "compact discs for my fake company since 2011 and we're starting to feel the pinch a little bit so it turns out no",
    "start": "1977940",
    "end": "1983880"
  },
  {
    "text": "one wants them anymore we're thinking of diversifying into selling 8-track cassettes because we assume that after vinyl that's where the smart money's",
    "start": "1983880",
    "end": "1989789"
  },
  {
    "text": "gonna be maybe some laser discs so we've got some catalog related functionality and this knows the name of",
    "start": "1989789",
    "end": "1997360"
  },
  {
    "text": "the artists and they've got some ID for a piece of information here so we've got the best of death polka volume for death",
    "start": "1997360",
    "end": "2004409"
  },
  {
    "text": "polka is a thing I thought had made that musical genre up until one of my workshop attendees played me some deaf polka and my ears were bleeding",
    "start": "2004409",
    "end": "2011159"
  },
  {
    "text": "afterwards and we've got finance related functionality and this is where it's going to store effectively our financial",
    "start": "2011159",
    "end": "2017789"
  },
  {
    "text": "transactions and and maybe as simple as putting something into a ledger table okay so as we make a transaction we",
    "start": "2017789",
    "end": "2023909"
  },
  {
    "text": "store stuff in a ledger table we've got a very simple use case we want to display a top ten list of our",
    "start": "2023909",
    "end": "2029909"
  },
  {
    "text": "bestsellers so what are the CDs that have sold the best in the last week now",
    "start": "2029909",
    "end": "2035340"
  },
  {
    "text": "in this kind of situation with just these two tables that's actually a very simple straightforward query we would do",
    "start": "2035340",
    "end": "2041130"
  },
  {
    "text": "a select on the ledger table we would group would limit that select based on items sold in the last week we were",
    "start": "2041130",
    "end": "2048060"
  },
  {
    "text": "grouped by the ID of the CD and count up how many copies of that CD we sold so at",
    "start": "2048060",
    "end": "2053790"
  },
  {
    "text": "that point we've got ten IDs and the counts of how many copies we sold that",
    "start": "2053790",
    "end": "2058980"
  },
  {
    "text": "ID by itself is not very useful for a webpage linga top ten releases but the information about those albums is over",
    "start": "2058980",
    "end": "2065040"
  },
  {
    "text": "that line items table and so we would need to go and make effective your join over into the line items table to pull",
    "start": "2065040",
    "end": "2071608"
  },
  {
    "text": "back that data but we're thinking about making catalog and Finance two separate",
    "start": "2071609",
    "end": "2077040"
  },
  {
    "text": "services the the issue though is we've got a join relationship here so we have to deal with that join relationship so",
    "start": "2077040",
    "end": "2084089"
  },
  {
    "text": "what we instead we're gonna want to do is move the join relationship up into the applications here we're gonna do a",
    "start": "2084089",
    "end": "2089608"
  },
  {
    "text": "query to fetch things from the ledger and pull back the date so we need and that's at that point it's only going to be the IDS using those IDs we're then",
    "start": "2089609",
    "end": "2096960"
  },
  {
    "text": "going to go to the catalog service and say please give me the information for these items and that will give us the",
    "start": "2096960",
    "end": "2102450"
  },
  {
    "text": "same functionality as the old join query but now we're effectively increasing Network hops we're increasing database",
    "start": "2102450",
    "end": "2109109"
  },
  {
    "text": "calls as well we end up with this sort of system now for something like top 10",
    "start": "2109109",
    "end": "2114660"
  },
  {
    "text": "list that's generated once a week the increased latency of this operations between art and over concern this is a",
    "start": "2114660",
    "end": "2120030"
  },
  {
    "text": "very easy thing to cache but there are other more insidious problems that we have here if you look inside that monolithic",
    "start": "2120030",
    "end": "2127220"
  },
  {
    "text": "schemer we probably got a relationship like this we've got a ledger table or with the rose in it we've got the online",
    "start": "2127220",
    "end": "2133099"
  },
  {
    "text": "items table and we are going to have a foreign key relationships that skew column or sometimes called the stock",
    "start": "2133099",
    "end": "2138740"
  },
  {
    "text": "keeping unit that is a foreign key relationship that points and refers to rows in the line items table there's got",
    "start": "2138740",
    "end": "2144950"
  },
  {
    "text": "two main things that you do this for in relational databases one it improves performance for joint operations and two",
    "start": "2144950",
    "end": "2151460"
  },
  {
    "text": "it enforces referential integrity or I wouldn't be able to delete row one two",
    "start": "2151460",
    "end": "2156830"
  },
  {
    "text": "three because the database let's say uh-uh you can't do that because you're gonna you've got references about inbound",
    "start": "2156830",
    "end": "2162170"
  },
  {
    "text": "references although normally we're using a database as a safety net right the application layer would hopefully stop",
    "start": "2162170",
    "end": "2168320"
  },
  {
    "text": "us from doing that invalid operation but if we've missed that it was still weak enforced in court in the database layer",
    "start": "2168320",
    "end": "2173980"
  },
  {
    "text": "we moved to these thing to separate schemas owned by two separate databases we kind of have some questions the first",
    "start": "2173980",
    "end": "2181130"
  },
  {
    "text": "thing is how do we even denote this relationship exists anymore and it's a particular example what I've",
    "start": "2181130",
    "end": "2186380"
  },
  {
    "text": "done is I've replaced the SKU column here with a sort of templated URI I figured this would be a way to wind-up",
    "start": "2186380",
    "end": "2193040"
  },
  {
    "text": "people that don't like rest and also people that are really pure about their rescues and get annoyed both camps at",
    "start": "2193040",
    "end": "2198170"
  },
  {
    "text": "the same time so in this example if I was building a rest-based system this would allow the finance service to",
    "start": "2198170",
    "end": "2204170"
  },
  {
    "text": "directly dereference that pointer effectively that referent that HTTP reference and pull back information",
    "start": "2204170",
    "end": "2209390"
  },
  {
    "text": "about that album and that's nice because on the point of view the finance service i don't literally know how need to know",
    "start": "2209390",
    "end": "2215450"
  },
  {
    "text": "how to look that thing up i just reference that pointer a lot of people get worried about this there so what happens if I changed my mind about how I",
    "start": "2215450",
    "end": "2221810"
  },
  {
    "text": "look these things up I'm then gonna have to go and rewrite the foreign key relationships effectively in the system",
    "start": "2221810",
    "end": "2227300"
  },
  {
    "text": "so a lot of people just leave the IDS as they were before and then in an application code the application code of",
    "start": "2227300",
    "end": "2233510"
  },
  {
    "text": "the finance service needs to know how to do that lookup the bigger issue of course is that we've got nothing",
    "start": "2233510",
    "end": "2239060"
  },
  {
    "text": "enforcing our referential integrity in this situation there's nothing to stop us deleting wrote one two three from the",
    "start": "2239060",
    "end": "2244910"
  },
  {
    "text": "catalog and that would potentially cause kind of an interesting problem at this point now sometimes and I suggest this",
    "start": "2244910",
    "end": "2253070"
  },
  {
    "text": "you know people is always okay if you do a cascading delete so you could implement a cascading delete in",
    "start": "2253070",
    "end": "2258260"
  },
  {
    "text": "situation bites a when I deleted an item from the catalog table I could fire an event that event could say item 1 2 3",
    "start": "2258260",
    "end": "2264470"
  },
  {
    "text": "deleted the things that care about that could also delete a row from their location if they've got a reference on",
    "start": "2264470",
    "end": "2270620"
  },
  {
    "text": "it now I will say this deleting things from financial ledger is a great way to",
    "start": "2270620",
    "end": "2276170"
  },
  {
    "text": "go to prison so don't do that in this particular situation but nonetheless you can see how you could implement similar",
    "start": "2276170",
    "end": "2282170"
  },
  {
    "text": "sip processes like a cascading delete in a systems-based environment if you",
    "start": "2282170",
    "end": "2287180"
  },
  {
    "text": "worried about deletion causing a structural you know referential integrity you could also just do a store set of a soft Ally now a status column",
    "start": "2287180",
    "end": "2294470"
  },
  {
    "text": "says it's things no longer available and that has solved this problem but that's not a problem that could have existed in",
    "start": "2294470",
    "end": "2299930"
  },
  {
    "text": "the old system we potentially have had to change the behavior of our system to cope with this lack of enforced data",
    "start": "2299930",
    "end": "2307460"
  },
  {
    "text": "integrity and we've also made this operation slower so you've got to decide",
    "start": "2307460",
    "end": "2313460"
  },
  {
    "text": "if all of that was worth it did you get enough out of these new services maybe you did maybe you didn't but you've got",
    "start": "2313460",
    "end": "2319400"
  },
  {
    "text": "to be aware of the things going in and again this is something it's much easier to assess the impact of if you've made one cut at a time deployed it into",
    "start": "2319400",
    "end": "2326780"
  },
  {
    "text": "production measured it and understood the behavior but fundamentally we've got more Network hops and we've lost",
    "start": "2326780",
    "end": "2333620"
  },
  {
    "start": "2329000",
    "end": "2554000"
  },
  {
    "text": "enforcement of data integrity so we'll look at the look at the last example now",
    "start": "2333620",
    "end": "2342760"
  },
  {
    "text": "and I figured it's towards the end of the day so we'll talk about one of the more contentious areas of distributed systems just before you get some beer so",
    "start": "2342760",
    "end": "2350150"
  },
  {
    "text": "this is a very simple example of our music shop we've got the catalog of warehouse functionality we're storing stuff in an item table and the row of an",
    "start": "2350150",
    "end": "2357110"
  },
  {
    "text": "item table looks like this but the BG's hits four dollars 99 forty five four",
    "start": "2357110",
    "end": "2362600"
  },
  {
    "text": "twenty five is the number of items in stock the BG's hits four ninety nine is a recommended retail price for this",
    "start": "2362600",
    "end": "2368750"
  },
  {
    "text": "masterpiece and we're looking at maybe making catalog and warehouse to separate services so to prepare the groundwork",
    "start": "2368750",
    "end": "2375500"
  },
  {
    "text": "for that a pretty obvious refactoring would be to do something like we'll actually just take this table and split",
    "start": "2375500",
    "end": "2380600"
  },
  {
    "text": "it into two separate tables again this is really bread-and-butter refactoring stuff so this is nice it looks great so",
    "start": "2380600",
    "end": "2388040"
  },
  {
    "text": "now we can have trans log of the warehouse a to set services but then we start putting that in a production running context we might",
    "start": "2388040",
    "end": "2394220"
  },
  {
    "text": "end up with a quite simple topology like this I've got my catalog service I've got my payment gateway I've got my",
    "start": "2394220",
    "end": "2399589"
  },
  {
    "text": "warehouse service my warehouse service tells me what I've got in stock now in a distributed system we are always on the",
    "start": "2399589",
    "end": "2406039"
  },
  {
    "text": "watch out for things called partitions partitions are what occurs where one part of a dish which your system cannot see another part of a distributed system",
    "start": "2406039",
    "end": "2413059"
  },
  {
    "text": "these things are not under your control they will happen and if you don't plan for them they're going to happen anyway",
    "start": "2413059",
    "end": "2418519"
  },
  {
    "text": "so you have to plan for them right so we're gonna take a look at a scenario has been created by our brave new world",
    "start": "2418519",
    "end": "2423769"
  },
  {
    "text": "the payment the warehouse for some reason cannot currently be reached this means we cannot check our stock levels",
    "start": "2423769",
    "end": "2430900"
  },
  {
    "text": "remember the old monolithic system this is a failure mode that could not exist it was either all up or all down now",
    "start": "2430900",
    "end": "2437809"
  },
  {
    "text": "we've got a partial failure we know how much stuff costs we can take people's money but we don't know how much stuff",
    "start": "2437809",
    "end": "2444529"
  },
  {
    "text": "we've got in stock now I don't ask you a question if you're running this CD",
    "start": "2444529",
    "end": "2449900"
  },
  {
    "text": "online Emporium and you had a failure mode like this so you know how much stuff costs but you don't know if you've",
    "start": "2449900",
    "end": "2456170"
  },
  {
    "text": "got those items in stock put your hands up if you tell us if you just you keep selling CDs you capitalist bastard right",
    "start": "2456170",
    "end": "2464779"
  },
  {
    "text": "I put your hands up if you wouldn't sell CDs you would be out of business in like",
    "start": "2464779",
    "end": "2470390"
  },
  {
    "text": "a heartbeat right in this business context ecommerce companies keep selling and the reason they keep selling is they",
    "start": "2470390",
    "end": "2477289"
  },
  {
    "text": "go through a very simple thinking process if I don't sell any CDs then we make no money we can't sell CDs that we",
    "start": "2477289",
    "end": "2484460"
  },
  {
    "text": "do have in stock our customers are upset and they go and buy the CDs somewhere else and they don't come back if we sell",
    "start": "2484460",
    "end": "2491749"
  },
  {
    "text": "the CDs and it turns out we don't actually have them in stock we can apologize we can give those people a",
    "start": "2491749",
    "end": "2497690"
  },
  {
    "text": "refund we can offer to backorder that CD but we're probably going to set up set and fewer of our customers and we're",
    "start": "2497690",
    "end": "2504440"
  },
  {
    "text": "going to make more money so they always will make that trade-off change the context you get a different outcome if",
    "start": "2504440",
    "end": "2510170"
  },
  {
    "text": "you're selling tickets for a concert they tend to make a different trade-off because if I sell tickets and then",
    "start": "2510170",
    "end": "2517770"
  },
  {
    "text": "you think you've got a ticket to go and see the World Cup final in Japan and you booked flights and then we email you and",
    "start": "2517770",
    "end": "2523170"
  },
  {
    "text": "go oh you don't have tickets to see the World Cup you're a bit annoyed the other thing of course is if your tickets can't",
    "start": "2523170",
    "end": "2528990"
  },
  {
    "text": "be purchased right now on that website what do you do as the person buying a ticket you'd go back later because those",
    "start": "2528990",
    "end": "2536130"
  },
  {
    "text": "tickets are only hold it held by that supplier because basically these sort of online ticketing companies are",
    "start": "2536130",
    "end": "2542280"
  },
  {
    "text": "effectively a cartel this trade-off actually speaks to one of the more fundamental trade-offs we look at in",
    "start": "2542280",
    "end": "2547770"
  },
  {
    "text": "distributed systems and a lot of things have been talked a lot of rubbish has talked about these things and that's a",
    "start": "2547770",
    "end": "2553020"
  },
  {
    "text": "thing called cap theory so cap Theory basically talks the trade-offs that",
    "start": "2553020",
    "end": "2558450"
  },
  {
    "start": "2554000",
    "end": "2636000"
  },
  {
    "text": "happen in in a distributed system I'm simplifying this to the point where whatever you think about is when a",
    "start": "2558450",
    "end": "2564120"
  },
  {
    "text": "partition occurs you have to decide whether or not consistency or availability is more important to you",
    "start": "2564120",
    "end": "2570630"
  },
  {
    "text": "when we say we're gonna take the money what we're basically saying is it's more important to us to maintain availability",
    "start": "2570630",
    "end": "2577890"
  },
  {
    "text": "of the operation to sell CD's and in exchange for doing that we're now going to have an inconsistent view of our",
    "start": "2577890",
    "end": "2584100"
  },
  {
    "text": "stock if we don't take the money we're saying it's more important for us to have a view of our stock consistency in",
    "start": "2584100",
    "end": "2590490"
  },
  {
    "text": "that context is more important to us and we're gonna trade off availability that is about as much as any of you ever need",
    "start": "2590490",
    "end": "2596370"
  },
  {
    "text": "to know about cap Theory don't look any further into it just gonna make everybody's heads hurt what you can say",
    "start": "2596370",
    "end": "2601590"
  },
  {
    "text": "if you also do is whenever you meet someone that says I've beaten cat theory you can just you know ignore them and more pass them because they haven't",
    "start": "2601590",
    "end": "2607500"
  },
  {
    "text": "they've just made a trade off and that's fine we've gone through a lot and I'm",
    "start": "2607500",
    "end": "2612780"
  },
  {
    "text": "out of time so I won't talk about that this is sort of there's a lot more patterns in my book if you want to go",
    "start": "2612780",
    "end": "2618120"
  },
  {
    "text": "over onto a rise online learning platform you can read an ear production version of it it will be in print next",
    "start": "2618120",
    "end": "2625020"
  },
  {
    "text": "month more informations over my website but thank you very much for your time [Applause]",
    "start": "2625020",
    "end": "2632949"
  },
  {
    "text": "[Music] [Applause]",
    "start": "2633570",
    "end": "2638390"
  }
]