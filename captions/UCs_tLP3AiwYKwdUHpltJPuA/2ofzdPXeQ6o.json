[
  {
    "start": "0",
    "end": "90000"
  },
  {
    "text": "uh so my name is Sam Newman uh I um hopefully I'm going to share with you today uh some lessons that I've sort of",
    "start": "2000",
    "end": "10400"
  },
  {
    "text": "uh extrapolated from work I've been doing with thought works over the last 10 years and a lot of my colleagues have done really in the art of taking the big",
    "start": "10400",
    "end": "17359"
  },
  {
    "text": "and making it smaller uh and here specifically we're talking about how do I take a big service and make it a",
    "start": "17359",
    "end": "23279"
  },
  {
    "text": "smaller service a set of smaller Services talk a little about why we might do that some of the benefits um",
    "start": "23279",
    "end": "30160"
  },
  {
    "text": "hopefully you're going to come out of this with some real practical understanding about why we going why you'd want to do this we'll also talk",
    "start": "30160",
    "end": "36520"
  },
  {
    "text": "about a topic uh called micr services that many of you may have heard about some of you may be coming to my tutorial",
    "start": "36520",
    "end": "42440"
  },
  {
    "text": "that I'm doing with James Lewis on Thursday all about this subject uh just in case you're worried only some of this",
    "start": "42440",
    "end": "49239"
  },
  {
    "text": "content will be on the Thursday a whole lot of other stuff coming up um as I said I work for thoughtworks I'm",
    "start": "49239",
    "end": "55440"
  },
  {
    "text": "actually uh also on the technology Advisory board for Thought Works which we and we put out this thing called the technology radar um it's freely",
    "start": "55440",
    "end": "62960"
  },
  {
    "text": "available comes out every 6 months um we we mostly write it to share our own",
    "start": "62960",
    "end": "69400"
  },
  {
    "text": "experiences of different technology and different techniques and we typically completely miss the point of what's",
    "start": "69400",
    "end": "75960"
  },
  {
    "text": "going to be controversial so uh you know saying that Maven is is horrible system I assume was common sense but apparently",
    "start": "75960",
    "end": "82200"
  },
  {
    "text": "a lot of people got angry about it if you want to debate the relative merits of things on the tech radar come find me afterwards um but as I as I said I am",
    "start": "82200",
    "end": "89680"
  },
  {
    "text": "here today to talk about big things and basically how do you go from the very",
    "start": "89680",
    "end": "94960"
  },
  {
    "start": "90000",
    "end": "230000"
  },
  {
    "text": "big to well the smaller there are lots of reasons actually why you might choose to break",
    "start": "94960",
    "end": "100799"
  },
  {
    "text": "apart systems um a lot of them come down to the ilities",
    "start": "100799",
    "end": "106159"
  },
  {
    "text": "durability often you can achieve different types of durability for your system by breaking it up into smaller",
    "start": "106159",
    "end": "111799"
  },
  {
    "text": "parts maybe only some parts of your system need highly durable Services it's more um feasible to make that service",
    "start": "111799",
    "end": "119640"
  },
  {
    "text": "more durable if you only isolate those feature sets you care about you can actually split it apart and treat those",
    "start": "119640",
    "end": "124880"
  },
  {
    "text": "concerns separately technology is a good one if you were here earlier you saw um Neil Ford wasn't really paying attention",
    "start": "124880",
    "end": "132319"
  },
  {
    "text": "but I think he was saying something along the lines of you should just sneak in new languages wherever you can this is a very good way to do that if you",
    "start": "132319",
    "end": "138400"
  },
  {
    "text": "break apart your your big monic service or or system into smaller parts you",
    "start": "138400",
    "end": "144239"
  },
  {
    "text": "actually create space where you can experiment with new technology you can actually take a compos that might",
    "start": "144239",
    "end": "150440"
  },
  {
    "text": "represent a a smaller risk to your business and say well that's where we're going to try the new language or the new",
    "start": "150440",
    "end": "156959"
  },
  {
    "text": "framework geography is a good one I'm here my customers are over there maybe I should distribute my system such that",
    "start": "156959",
    "end": "163239"
  },
  {
    "text": "some of my services are closer to my clients um Team structure and",
    "start": "163239",
    "end": "168640"
  },
  {
    "text": "organization is a really important one here uh how many of you here have heard of Conway's",
    "start": "168640",
    "end": "173840"
  },
  {
    "text": "law uh okay so probably only about 15% of the room um it's probably one of the",
    "start": "173840",
    "end": "180360"
  },
  {
    "text": "most important laws you'll see in Computing it's worth reading up about but basically says that the design of",
    "start": "180360",
    "end": "185840"
  },
  {
    "text": "our systems will follow the communication Pathways in our organization and vice versa so often",
    "start": "185840",
    "end": "191280"
  },
  {
    "text": "where you find things like I've got two teams in two different geographical locations that often a really good reason to have them work on two separate",
    "start": "191280",
    "end": "198159"
  },
  {
    "text": "services that are collaborating um I can't go into that in too much detail today um there's also speed of change",
    "start": "198159",
    "end": "205680"
  },
  {
    "text": "when you break up a big system into smaller components you have the ability to deploy changes to Independent",
    "start": "205680",
    "end": "212239"
  },
  {
    "text": "components without affecting the whole overall system uh my talk at go-to last year uh was actually on the subjects",
    "start": "212239",
    "end": "218080"
  },
  {
    "text": "called um designing for Rapid Release there's a lot more detail about characteristics of services that make",
    "start": "218080",
    "end": "223120"
  },
  {
    "text": "them easy to release frequently before we talk about breaking a service apart though we should maybe",
    "start": "223120",
    "end": "229000"
  },
  {
    "text": "step back a bit and think what is a good service and I'm going to keep it fairly",
    "start": "229000",
    "end": "234879"
  },
  {
    "start": "230000",
    "end": "410000"
  },
  {
    "text": "high level when we think about service I think there are two characteristics are very important to",
    "start": "234879",
    "end": "241239"
  },
  {
    "text": "consider the first is sort of high cohesion if I've got a set of",
    "start": "241239",
    "end": "247079"
  },
  {
    "text": "functionality around a given area I would like it to be sort of in the same place because it gives me opportunity to",
    "start": "247079",
    "end": "254000"
  },
  {
    "text": "create abstractions around that piece of code if I fix a defect I can fix it in one place and one place only or at least",
    "start": "254000",
    "end": "260519"
  },
  {
    "text": "closely together it also makes it easier for me to understand comprehend how my system works I've got lots of",
    "start": "260519",
    "end": "266960"
  },
  {
    "text": "like-minded stuff in one place and there's also loose",
    "start": "266960",
    "end": "272320"
  },
  {
    "text": "coupling I would don't want my systems to be composed of services that are so tightly bound together that I can't",
    "start": "272320",
    "end": "279600"
  },
  {
    "text": "change one service without changing the entire system big monolithic systems are quite",
    "start": "279600",
    "end": "286080"
  },
  {
    "text": "hard to change it's even harder to change distributed systems are very highly tightly coupled",
    "start": "286080",
    "end": "292680"
  },
  {
    "text": "together give an example what I mean by loose coupling let imagine I've got a service and inside my service",
    "start": "292680",
    "end": "300240"
  },
  {
    "text": "I have my internal representations of the work I'm doing this is effectively",
    "start": "300240",
    "end": "305479"
  },
  {
    "text": "my object I've got in memory and it's how I'm doing my work and let's imagine that I am providing a service to other",
    "start": "305479",
    "end": "312600"
  },
  {
    "text": "things around me and so here they are and they're wanting things from me now if I allow these services to",
    "start": "312600",
    "end": "320560"
  },
  {
    "text": "reach right inside me and grab my internal representations then effectively I have",
    "start": "320560",
    "end": "326160"
  },
  {
    "text": "an unfortunate side of coupling it's now hard for me to change the internals of my system the internals of my service",
    "start": "326160",
    "end": "333199"
  },
  {
    "text": "here because the things on the outside are sort of grabbing hold of it it's like when you're having a conversation with somebody we're trying to speak",
    "start": "333199",
    "end": "339759"
  },
  {
    "text": "verbally and then suddenly he starts reaching into your brain and grabbing all the sinapsis it makes it very hard",
    "start": "339759",
    "end": "344919"
  },
  {
    "text": "for for me to do my job when something's reached deep inside and grabbed hold of me and this is actually how you can very",
    "start": "344919",
    "end": "351280"
  },
  {
    "text": "quickly create these sort of intricate mats of distributed systems where things are very very tightly coupled together",
    "start": "351280",
    "end": "358160"
  },
  {
    "text": "and a very common example of this is where people take internal representations serialize that and then",
    "start": "358160",
    "end": "364600"
  },
  {
    "text": "share that over the wire they become inadvertent coupling points Ross talked earlier today in this track about things",
    "start": "364600",
    "end": "371280"
  },
  {
    "text": "like Conway's law I talked about more than that in my previous talk signing for Rapid Release about techniques how you can avoid that so we really want to",
    "start": "371280",
    "end": "377919"
  },
  {
    "text": "have this concept of high cohesion and loose coupling we make good Services because this sort of coupling process",
    "start": "377919",
    "end": "384840"
  },
  {
    "text": "can become a bit of a mess and you end up with a big old well basically a bit of a nightmare try and pick up",
    "start": "384840",
    "end": "390639"
  },
  {
    "text": "heart um now this is a fairly modern conference you're all fairly modern",
    "start": "390639",
    "end": "395800"
  },
  {
    "text": "people and I was trying to think of an example a good example to help illustrate some of the uh the lessons",
    "start": "395800",
    "end": "401800"
  },
  {
    "text": "I'm going to talk about today and so I was thinking well what what are all the kids doing nowadays uh a Cutting Edge so",
    "start": "401800",
    "end": "408120"
  },
  {
    "text": "I I I think the future of the music industry is basically about the physical delivery of media so here we are so our",
    "start": "408120",
    "end": "413720"
  },
  {
    "start": "410000",
    "end": "590000"
  },
  {
    "text": "example for today is going to all be about how CDs come from a website and get arrived at your door um let's think",
    "start": "413720",
    "end": "420599"
  },
  {
    "text": "about what's going to happen in that operation uh we're dealing with physical things I like physical things you can",
    "start": "420599",
    "end": "426479"
  },
  {
    "text": "point to them and say that thing is there it's not over there because I can see it physics aside um and so imagine",
    "start": "426479",
    "end": "432400"
  },
  {
    "text": "with a a music shop here I am I have my warehouse and my warehouse contains many many things it contains CDs it contains",
    "start": "432400",
    "end": "440039"
  },
  {
    "text": "breakout areas it contains calendars of questionable uh content uh boxes and",
    "start": "440039",
    "end": "446720"
  },
  {
    "text": "people and obviously people have to get paid and lots of numbers need to be written down for finance reports so my",
    "start": "446720",
    "end": "453560"
  },
  {
    "text": "my organization is probably going to have a finance guy somewhere you can tell he's in finance he has the blue tie",
    "start": "453560",
    "end": "459800"
  },
  {
    "text": "he's thinking very thoughtfully about I wonder if I shovel all my tax through Luxembourg if I can avoid and he's",
    "start": "459800",
    "end": "466159"
  },
  {
    "text": "writing things down with a pen so he's a finance guy he's thinking deeply now things happen in the warehouse that the",
    "start": "466159",
    "end": "472479"
  },
  {
    "text": "finance guy doesn't really care about he's not really that bothered about the fact that the warehouse has inside it a",
    "start": "472479",
    "end": "479080"
  },
  {
    "text": "fork truck he equally doesn't know for reasons known only to the people who work in the warehouse that the forklift",
    "start": "479080",
    "end": "484919"
  },
  {
    "text": "truck is called Barrel he doesn't even aware he just knows about some aspects of the warehouse he probably needs to",
    "start": "484919",
    "end": "490240"
  },
  {
    "text": "know about the inventory for purposes of financial reporting but Hees no need to know about detail said doesn't need",
    "start": "490240",
    "end": "496240"
  },
  {
    "text": "about the forklift truck doesn't need to know about the types of boxes that are involved that used to store the items",
    "start": "496240",
    "end": "502400"
  },
  {
    "text": "but he very much cares about the kind of products that we are selling and shipping because he has to write out",
    "start": "502400",
    "end": "508440"
  },
  {
    "text": "reports so there an interesting here right we've got within an organization within the context of our music shop we",
    "start": "508440",
    "end": "516360"
  },
  {
    "text": "have people and responsibilities we have the finance guy who does finance things I don't understand Finance there's",
    "start": "516360",
    "end": "522080"
  },
  {
    "text": "finance things being done by him all I know is that pay slips come out at the end and reports and he talks to the",
    "start": "522080",
    "end": "527880"
  },
  {
    "text": "warehouse and he might ask for specific pieces of information doesn't he know everything though so effectively you",
    "start": "527880",
    "end": "533279"
  },
  {
    "text": "know he's all the finance stuff is in the finance guy and the warehouse stuff's in the warehouse guy sort of talking over that line um um how many",
    "start": "533279",
    "end": "540279"
  },
  {
    "text": "people here have read this book domain given design it gets lower every year",
    "start": "540279",
    "end": "545320"
  },
  {
    "text": "which does worry me a little bit actually it's a really interesting book by um Eric Evans um when I first read",
    "start": "545320",
    "end": "552560"
  },
  {
    "text": "this book probably about 10 years ago now when it first came out I found the first half of that book to be the really",
    "start": "552560",
    "end": "559240"
  },
  {
    "text": "interesting insightful um if any of you have a repository layer or repository",
    "start": "559240",
    "end": "565120"
  },
  {
    "text": "interface in your code you know a user repository or the app repository more",
    "start": "565120",
    "end": "570640"
  },
  {
    "text": "than likely that the person who put that in probably read this book and thought we need repositories in our system uh it",
    "start": "570640",
    "end": "575680"
  },
  {
    "text": "turned out actually the interesting stuff is at the back half of the book but I didn't read that until much later there's a concept that Eric talks about",
    "start": "575680",
    "end": "581079"
  },
  {
    "text": "in the book which is one of a bounded context so bounded context this is how",
    "start": "581079",
    "end": "587040"
  },
  {
    "text": "Eric describes the bounded context the delimited applicability of a",
    "start": "587040",
    "end": "592920"
  },
  {
    "text": "particular model bounded contexts give team members a clear and shared understanding of what has to be",
    "start": "592920",
    "end": "599800"
  },
  {
    "text": "consistent and what can develop independently now I think Eric's great",
    "start": "599800",
    "end": "604959"
  },
  {
    "text": "with ideas and Concepts I have found this quite hard to understand I found a",
    "start": "604959",
    "end": "610279"
  },
  {
    "text": "more piy uh explanation of what a baned context was on the blog post which is a",
    "start": "610279",
    "end": "615720"
  },
  {
    "text": "specific responsibility enforced by explicit boundaries so let's think about the",
    "start": "615720",
    "end": "623360"
  },
  {
    "text": "warehouse and the finance team the finance team have their job that they do",
    "start": "623360",
    "end": "628600"
  },
  {
    "text": "and they have a responsibility and operation to carry out they have autonomy the warehouse likewise they",
    "start": "628600",
    "end": "635760"
  },
  {
    "text": "have an explicit interaction point I need inventory report so I can do my so",
    "start": "635760",
    "end": "641040"
  },
  {
    "text": "I can do my details I can do my report or you can summarize this all as sort of respect my authorit these are bounded",
    "start": "641040",
    "end": "646839"
  },
  {
    "text": "context say I'm doing this you stay out of my way I know what I'm doing let me do what I want to do and when it comes to Services we're",
    "start": "646839",
    "end": "654440"
  },
  {
    "text": "thinking about these concepts of high cohesion and loose coupling",
    "start": "654440",
    "end": "659959"
  },
  {
    "text": "these explicit boundaries between the banded context are a great place to",
    "start": "659959",
    "end": "665480"
  },
  {
    "text": "actually achieve that loose coupling we talk and communicate across a fairly narrow well understood set of",
    "start": "665480",
    "end": "672360"
  },
  {
    "text": "interactions High cohesion all the finance stuff done by the finance team this ends up being a really useful model",
    "start": "672360",
    "end": "678800"
  },
  {
    "text": "when we're thinking about designing our own systems let's think about some of the",
    "start": "678800",
    "end": "685120"
  },
  {
    "text": "capabilities that we might have within say our music website things I might want to achieve with my system I might",
    "start": "685120",
    "end": "693240"
  },
  {
    "text": "want to add something to my shopping cart I want to check something out I'm thinking about viewing the latest",
    "start": "693240",
    "end": "699440"
  },
  {
    "text": "releases searching the catalog uh listening to previews these all sort of",
    "start": "699440",
    "end": "705120"
  },
  {
    "text": "activities responsibilities that are part of my online music shop but you can",
    "start": "705120",
    "end": "710360"
  },
  {
    "text": "already when you look at things like this start to group them together and create sort of like-minded things things",
    "start": "710360",
    "end": "715920"
  },
  {
    "text": "that sort of sit well that have high cohesion needs to be come effectively Banner contexts so some of the banner",
    "start": "715920",
    "end": "722360"
  },
  {
    "text": "contexts that might exist within our music shop are things like well a shopping cart a catalog a music",
    "start": "722360",
    "end": "729760"
  },
  {
    "text": "library and you will probably find that within your own organizations people already know what the baned contexts are",
    "start": "729760",
    "end": "736000"
  },
  {
    "text": "and the terms that already get used you have teams you have organizations within your own company",
    "start": "736000",
    "end": "742320"
  },
  {
    "text": "already the question is how much of that is actually represented in the flows of your own architecture and your own systems and your own design",
    "start": "742320",
    "end": "750320"
  },
  {
    "text": "so one of the key things that we found is that when we find and take a big service and split up in smaller chunks",
    "start": "750320",
    "end": "755639"
  },
  {
    "text": "if we can do it around these baned context we end up with services that have those two characteristics we like",
    "start": "755639",
    "end": "761000"
  },
  {
    "text": "to look for that high cohesion and that low coupling so how do we how do we",
    "start": "761000",
    "end": "766440"
  },
  {
    "text": "achieve that how when we start with a big box where do we go well easy things at the beginning is",
    "start": "766440",
    "end": "772920"
  },
  {
    "text": "to start simple you get around a whiteboard and you start sketching out very high level what are the banner",
    "start": "772920",
    "end": "778360"
  },
  {
    "text": "context that we thinking exist and start course grained so maybe this is high",
    "start": "778360",
    "end": "783480"
  },
  {
    "text": "enough level for the music shop we think we've got at Le these four five things",
    "start": "783480",
    "end": "789279"
  },
  {
    "text": "in our system really high level things the interesting thing with music with B context is they actually kind of nest if",
    "start": "789279",
    "end": "795360"
  },
  {
    "text": "we think about the the context of you know this this conference we have the",
    "start": "795360",
    "end": "800560"
  },
  {
    "text": "whole conference we have the set of operations around the canteen there's a set of operations around the coffee shop",
    "start": "800560",
    "end": "806800"
  },
  {
    "text": "there are the there's the crew who who run uh all the feedback sessions and make sure we get in and get out all",
    "start": "806800",
    "end": "812079"
  },
  {
    "text": "those sorts of things start course and start slicing apart one of the easy ways to do this is actually just to look for",
    "start": "812079",
    "end": "818480"
  },
  {
    "text": "things your language provides you in terms of grouping code together I spent most of my professional",
    "start": "818480",
    "end": "825600"
  },
  {
    "text": "life working in Java Java has the concept of the package the package is actually from a programming point of",
    "start": "825600",
    "end": "831320"
  },
  {
    "text": "view a very weak construct many other languages do much more interesting things with packages but they're",
    "start": "831320",
    "end": "837360"
  },
  {
    "text": "actually quite use useful as just grouping things together a tool like structure 101 can do a very good job of",
    "start": "837360",
    "end": "844120"
  },
  {
    "start": "840000",
    "end": "940000"
  },
  {
    "text": "actually showing you your packages and how they interrelate we're looking remember for that loose coupling so when",
    "start": "844120",
    "end": "849279"
  },
  {
    "text": "we're looking at our banded context we're looking for opportunities to see are things two coupled together so",
    "start": "849279",
    "end": "855199"
  },
  {
    "text": "structure 101 gives you useful uh pictures like this so here I'm already",
    "start": "855199",
    "end": "860320"
  },
  {
    "text": "seeing some things that seem like that might be about my business I've got something called a booking criteria",
    "start": "860320",
    "end": "865560"
  },
  {
    "text": "commission plan my report system and can start seeing some interesting things",
    "start": "865560",
    "end": "871000"
  },
  {
    "text": "like it's kind of weird you know uh I can understand so for example why the",
    "start": "871000",
    "end": "876120"
  },
  {
    "text": "business criteria kind of needs to commission plan but I don't understand why that Link's going back that's not how our organization works why is my",
    "start": "876120",
    "end": "882680"
  },
  {
    "text": "code looking like that and the thing is moving code is fairly easy there simple",
    "start": "882680",
    "end": "888000"
  },
  {
    "text": "refactorings you can make so if you have a tool that lets you visualize the groupings within your existing system",
    "start": "888000",
    "end": "893199"
  },
  {
    "text": "your existing monolithic code base you can just over time Chip Away shift stuff",
    "start": "893199",
    "end": "898320"
  },
  {
    "text": "around look look at the flows and get to a happy place doesn't have to be All or Nothing very very low impact work and so",
    "start": "898320",
    "end": "905440"
  },
  {
    "text": "over time you can go from a place where your big monolithic service actually gets broken down inside itself into sort",
    "start": "905440",
    "end": "912959"
  },
  {
    "text": "of packages that look like this the reason I don't spend much time talking about how you achieve that part",
    "start": "912959",
    "end": "918920"
  },
  {
    "text": "of it is because actually that's the easy part and I think most of you are going to understand your domain better there's a good book called implementing",
    "start": "918920",
    "end": "924800"
  },
  {
    "text": "domain G design that goes into more detail about how you actually get into the the detail of actually separating",
    "start": "924800",
    "end": "929959"
  },
  {
    "text": "out these Concepts but often just by pe speaking to your business stakeholders you'll get a lot of that",
    "start": "929959",
    "end": "935399"
  },
  {
    "text": "information the hard bit uh as always is databases because basically data's cool",
    "start": "935399",
    "end": "941880"
  },
  {
    "start": "940000",
    "end": "1240000"
  },
  {
    "text": "but databases suck and there are often the biggest impediment to how you break apart systems and services uh some of",
    "start": "941880",
    "end": "949079"
  },
  {
    "text": "the stuff I'm going to talk about are patterns actually in the refracturing databases book which you may well want to read especially if you're dealing",
    "start": "949079",
    "end": "954319"
  },
  {
    "text": "with a nasty Legacy database because there's lots of coping patterns in there for how you separate and Pull Apart",
    "start": "954319",
    "end": "959759"
  },
  {
    "text": "these systems so here is an example the the core problem here is this is the",
    "start": "959759",
    "end": "965680"
  },
  {
    "text": "most traditional way of people breaking apart systems is to basically say right I've got my monolithic music shop I'm",
    "start": "965680",
    "end": "972120"
  },
  {
    "text": "going to put out my service and we're all going to integrate back to the database and that's kind of a bad thing to do because if I change something in a",
    "start": "972120",
    "end": "979360"
  },
  {
    "text": "music shop I might want to change the schema underlying my service can I do",
    "start": "979360",
    "end": "985440"
  },
  {
    "text": "that I don't know because my recommendation service is talking to the same database bace we have a source of coupling we need to break that apart so",
    "start": "985440",
    "end": "992360"
  },
  {
    "text": "you really do need to separate those things out and use separate schemas wherever possible so you probably end up",
    "start": "992360",
    "end": "998279"
  },
  {
    "text": "with something like this I've got my packages first thing you want to try and do is probably go from a single",
    "start": "998279",
    "end": "1003680"
  },
  {
    "text": "repository layer within your big monolithic service to actually separating out those repositories for being on a per bounded context",
    "start": "1003680",
    "end": "1011800"
  },
  {
    "text": "basis it you do end up having different connection pools and things like that but it's it's worthwhile doing because",
    "start": "1011800",
    "end": "1017199"
  },
  {
    "text": "then all of the work related to catalog is there and visible and your repository layers actually great way of visualizing",
    "start": "1017199",
    "end": "1024520"
  },
  {
    "text": "the interactions with the data schemer as well you can see which parts of the schema the catalog uses and which part of the schema the warehouse uses it's",
    "start": "1024520",
    "end": "1031760"
  },
  {
    "text": "not the end of the story of course because obviously you have referenced Integrity between database tables that's not visible within the application tier",
    "start": "1031760",
    "end": "1039839"
  },
  {
    "text": "there if you're using relational database tools like schema spy are very good at helping you here so you can actually see the relationships because",
    "start": "1039839",
    "end": "1047160"
  },
  {
    "text": "we need if I want to spin off the catalog as a separate service I've got to chip all the way down and move that schema out let's look at some examples",
    "start": "1047160",
    "end": "1054919"
  },
  {
    "text": "of that so here we have a catalog and a line items table and I've got finance and I've got a ledger not sure what a",
    "start": "1054919",
    "end": "1061600"
  },
  {
    "text": "ledger is but they're very important things uh Ledger and I've got to generate a report as part of the finance",
    "start": "1061600",
    "end": "1067039"
  },
  {
    "text": "system now in my existing system when that report gets run I'm putting together information from The Ledger",
    "start": "1067039",
    "end": "1072880"
  },
  {
    "text": "with additional metadata from the line items table to enrich that report so I know how many of it's not just I know",
    "start": "1072880",
    "end": "1079520"
  },
  {
    "text": "that I've sold 50 items of skew 123 I know that skew 123 is the greatest hits",
    "start": "1079520",
    "end": "1084600"
  },
  {
    "text": "of Justin Bieber it's a very short album so here I am and I'm pulling this across now here though I've got the bounded",
    "start": "1084600",
    "end": "1090840"
  },
  {
    "text": "context of Finance reaching in to data that's kind of much more closely",
    "start": "1090840",
    "end": "1095880"
  },
  {
    "text": "associated with catalog now if I want to separate those as services that line is going to become a problem so I need to",
    "start": "1095880",
    "end": "1101320"
  },
  {
    "text": "kill that line I may also have referenced Integrity from The Ledger into line items table what I need to do",
    "start": "1101320",
    "end": "1108120"
  },
  {
    "text": "is SPL break both of those lines and what I want instead is when the finance",
    "start": "1108120",
    "end": "1113919"
  },
  {
    "text": "report runs it should go to the catalog bounded context and interface and say please give me information I",
    "start": "1113919",
    "end": "1120880"
  },
  {
    "text": "require and that's a change you can make within the single service before then separating those out as two separate",
    "start": "1120880",
    "end": "1127840"
  },
  {
    "text": "services that then get to maintain their own schemas independently and then that relationship",
    "start": "1127840",
    "end": "1134480"
  },
  {
    "text": "that within a relational database may be a foreign key relationship or something like that ends up being maybe something as simple",
    "start": "1134480",
    "end": "1141960"
  },
  {
    "text": "as a link to another resource let look at another example um",
    "start": "1141960",
    "end": "1147360"
  },
  {
    "text": "country codes tables country code tables are like the string utils of the database world every project I've been",
    "start": "1147360",
    "end": "1152640"
  },
  {
    "text": "on seems to think that countries get created much more frequently than we release our software and so that we put",
    "start": "1152640",
    "end": "1159000"
  },
  {
    "text": "these country code tables in there so that well actually with some software that's probably true but anyway you know you put it in here so we can magically",
    "start": "1159000",
    "end": "1165159"
  },
  {
    "text": "go in and add in a new line when a new island appears or whatever else how am I going to split this up well there's some",
    "start": "1165159",
    "end": "1171480"
  },
  {
    "text": "odd things I could do so the first step I could take is to give each bounded context its own country codes thing",
    "start": "1171480",
    "end": "1177280"
  },
  {
    "text": "seems a bit odd seems a bit excessive um I could equally just say well it's just static code it's just static stuff you",
    "start": "1177280",
    "end": "1184159"
  },
  {
    "text": "know I'm just going to put those country short codes in an enum and stick that in code and have some rep and have some",
    "start": "1184159",
    "end": "1190720"
  },
  {
    "text": "actually duplication between my um ban context Russ talked quite well at the beginning of the day about how actually",
    "start": "1190720",
    "end": "1196880"
  },
  {
    "text": "duplication between Services is not necessary necessarily a problem if it avoids coupling in one environment we actually",
    "start": "1196880",
    "end": "1204039"
  },
  {
    "text": "took that customer that so those country codes and made it a separate service because there was a large amount of sort",
    "start": "1204039",
    "end": "1210240"
  },
  {
    "text": "of metadata associated general reference data names of companies things like that",
    "start": "1210240",
    "end": "1215880"
  },
  {
    "text": "and it was enough that it became a service in its own right to break that connection here's another example a",
    "start": "1215880",
    "end": "1222760"
  },
  {
    "text": "finance and my warehouse system both talking to a customer record table at",
    "start": "1222760",
    "end": "1228159"
  },
  {
    "text": "this point I'm I'm going to introduce a fancy word because I think both Neil and Russ introduce fancy words so the word",
    "start": "1228159",
    "end": "1233200"
  },
  {
    "text": "I'm going to identify here is rify and I have a definition not from Webster but",
    "start": "1233200",
    "end": "1238559"
  },
  {
    "text": "from Google which actually from dictionary.com um so here we are rify rify means to make something abstract",
    "start": "1238559",
    "end": "1246080"
  },
  {
    "start": "1240000",
    "end": "1374000"
  },
  {
    "text": "make it more concrete make it more real so if you look at this situation I've got the finance system and the",
    "start": "1246080",
    "end": "1252799"
  },
  {
    "text": "warehouse system both talking to a customer record table the finance system is updating things like this customer",
    "start": "1252799",
    "end": "1259280"
  },
  {
    "text": "paid our refunded customer our item return so I've refunded the amount the",
    "start": "1259280",
    "end": "1265360"
  },
  {
    "text": "warehouse system is saying things like uh I received the",
    "start": "1265360",
    "end": "1271000"
  },
  {
    "text": "return I've sent the order out and they're updating this same concept the issue here is that we have an implicit",
    "start": "1272400",
    "end": "1279400"
  },
  {
    "text": "domain concept that hasn't been realized we've discovered it while going through our data schema the what's the implicit domain",
    "start": "1279400",
    "end": "1287200"
  },
  {
    "text": "concept here customer so there was something that we didn't know was there we found it it's",
    "start": "1287200",
    "end": "1293240"
  },
  {
    "text": "fun it's like archaeology this stuff so there we are now we create a new baned context and it might be a very very",
    "start": "1293240",
    "end": "1299520"
  },
  {
    "text": "small one it might actually be nothing more than a nice interface on top of some um some very simple hibernate",
    "start": "1299520",
    "end": "1306000"
  },
  {
    "text": "mappings but now the finance system the warehouse system can talk to the customer context which in turn talks to",
    "start": "1306000",
    "end": "1312039"
  },
  {
    "text": "that table and if I roll it all the way through I could end up with three separate services that are then",
    "start": "1312039",
    "end": "1317520"
  },
  {
    "text": "collaborating one last example here we have the catalog and the",
    "start": "1317520",
    "end": "1323159"
  },
  {
    "text": "warehouse and we have a nicely generic table called item because items are for",
    "start": "1323159",
    "end": "1328600"
  },
  {
    "text": "storing items um and in the item table we have information like this that we have the bgs 499 and we have 45 so BG's",
    "start": "1328600",
    "end": "1336679"
  },
  {
    "text": "499 is information about the record and 45 is how many items we have in stock",
    "start": "1336679",
    "end": "1343640"
  },
  {
    "text": "and so both Banner context are care about that information when you're browsing the catalog you want to know how much it costs and everything else",
    "start": "1343640",
    "end": "1349520"
  },
  {
    "text": "and the warehouse needs to be able to update the inventory and all those sorts of things but we effectively have two separate Concepts here and so sometimes",
    "start": "1349520",
    "end": "1356600"
  },
  {
    "text": "when you find these you actually need to take those schemas and actually separate those apart the refracturing database uh",
    "start": "1356600",
    "end": "1362960"
  },
  {
    "text": "book talks a lot about how you can do those things peace meal so here rather than having a very generic concept I now",
    "start": "1362960",
    "end": "1368039"
  },
  {
    "text": "need to be more much more specific and explicit in what I'm doing here by pulling these two concepts",
    "start": "1368039",
    "end": "1373480"
  },
  {
    "text": "apart um the key thing I want trying to get across here is that this will be a a",
    "start": "1373480",
    "end": "1378720"
  },
  {
    "start": "1374000",
    "end": "1516000"
  },
  {
    "text": "journey of Discovery um it can be a bit concerning because there is no necessarily NE grand plan other than the",
    "start": "1378720",
    "end": "1386919"
  },
  {
    "text": "understanding that we want to model our services around these baned context what you're trying to do is high level and you start chipping away the key thing to",
    "start": "1386919",
    "end": "1394120"
  },
  {
    "text": "understand here is actually the cost of change the cost of change around a whiteboard is very low if a line in the",
    "start": "1394120",
    "end": "1401919"
  },
  {
    "text": "wrong place I rub it out I draw a new line just kind of f straightforward if I'm working within C",
    "start": "1401919",
    "end": "1408240"
  },
  {
    "text": "Cod base of say one within a process boundary and I want to move some code between a package between packages it's",
    "start": "1408240",
    "end": "1415240"
  },
  {
    "text": "a shift F6 in intell it's not an operation that should cause any errors it's a very quick and",
    "start": "1415240",
    "end": "1421559"
  },
  {
    "text": "easy thing to do and if I make a mistake I can roll it back quite quickly changing how Services talk",
    "start": "1421559",
    "end": "1428039"
  },
  {
    "text": "together is much more tricky because if I get it wrong the cost of that is much",
    "start": "1428039",
    "end": "1433600"
  },
  {
    "text": "worse sometimes those team those Services we split between separate teams for example example if I need to make a",
    "start": "1433600",
    "end": "1440200"
  },
  {
    "text": "change I might have to orchestrate deployment of two components and change in the database is also likely like",
    "start": "1440200",
    "end": "1446320"
  },
  {
    "text": "quite expensive and this is all basically an argument for a little bit of upfront",
    "start": "1446320",
    "end": "1452240"
  },
  {
    "text": "thinking not a lot just a little bit I think getting around a whiteboard and actually thinking about how these",
    "start": "1452240",
    "end": "1458919"
  },
  {
    "text": "baned contexts interact and what would they look like as service is a very sensible exercise um there's how many of you when",
    "start": "1458919",
    "end": "1467760"
  },
  {
    "text": "you at un did objectoriented Theory and talked about class responsibility",
    "start": "1467760",
    "end": "1473799"
  },
  {
    "text": "collaborator things few right and I suspect like all of you well myself anyway I I did that at Uni and thought",
    "start": "1473799",
    "end": "1481240"
  },
  {
    "text": "that's a really interesting exercise and then probably never used it ever again and I think it's a huge amount of overkill for objects I actually think",
    "start": "1481240",
    "end": "1489159"
  },
  {
    "text": "though it's very sensible for services just get around a whiteboard what's the",
    "start": "1489159",
    "end": "1494279"
  },
  {
    "text": "responsibility of this service how does it talk over here let's run a use case oh this service is talking to this",
    "start": "1494279",
    "end": "1499960"
  },
  {
    "text": "service like five times during this use case maybe that's a sign they're too closely coupled and should be one thing",
    "start": "1499960",
    "end": "1505919"
  },
  {
    "text": "oh this thing's got circular dependen we should tease those apart these are very simple easy conversations you can have",
    "start": "1505919",
    "end": "1511320"
  },
  {
    "text": "around a whiteboard and actually some of the exercises around CC cards work quite well",
    "start": "1511320",
    "end": "1516440"
  },
  {
    "text": "there so then the next question of course is uh well if I'm breaking these",
    "start": "1516440",
    "end": "1521960"
  },
  {
    "text": "things apart and I know that baned context Nest within each other I have the music shop I have the Warehouse do I",
    "start": "1521960",
    "end": "1530000"
  },
  {
    "text": "start splitting out within the warehouse the concepts inside the warehouse do I go how small is too small now for a",
    "start": "1530000",
    "end": "1536000"
  },
  {
    "text": "service there's good things about being small a piece of code which is small is fairly easy to understand so how small",
    "start": "1536000",
    "end": "1542200"
  },
  {
    "text": "do I go before it causes me problems somewhere else and this really is where a lot of the interest around",
    "start": "1542200",
    "end": "1548080"
  },
  {
    "text": "microservices has come about and the movement towards more fine grained architectures has come about in",
    "start": "1548080",
    "end": "1555520"
  },
  {
    "text": "large part because we've had a whole lot of enabling technology that have reduced the cost of having more types of services lying around",
    "start": "1555520",
    "end": "1561919"
  },
  {
    "text": "we've got Cloud infrastructure Automation and we've also understanding about architectural patterns in",
    "start": "1561919",
    "end": "1567440"
  },
  {
    "text": "distributed systems is much more mature and so we now have the ability to go much more fine grain than ever before",
    "start": "1567440",
    "end": "1573000"
  },
  {
    "text": "but how fine grain should I go and and and what are the benefits of doing that",
    "start": "1573000",
    "end": "1578039"
  },
  {
    "text": "so I'm going to talk about that by talking about Unix um so I'm a big Unix fan it's my first proper professional uh",
    "start": "1578039",
    "end": "1585200"
  },
  {
    "text": "platform was looking after about six different Unix variants a lot of fun uh although C macros are evil um I",
    "start": "1585200",
    "end": "1591960"
  },
  {
    "text": "should know I wrote a lot um and really to understand why Unix has been so",
    "start": "1591960",
    "end": "1597840"
  },
  {
    "text": "successful and why Linux of the backl has been so successful is because there is actually an ethos behind it that",
    "start": "1597840",
    "end": "1603799"
  },
  {
    "text": "drove at the successful deployment of so many different variants this system with these same underlying principles and I'm",
    "start": "1603799",
    "end": "1609919"
  },
  {
    "text": "a great believer like many of my colleagues when designing a system that having principles that help guide your",
    "start": "1609919",
    "end": "1614960"
  },
  {
    "text": "way are very important um and here's here's Doug",
    "start": "1614960",
    "end": "1620320"
  },
  {
    "text": "dougas mcroy from did a lot of work at Bell and the early days of Unix talking about what the Unix philosophy is this",
    "start": "1620320",
    "end": "1628159"
  },
  {
    "text": "is the Unix philosophy write programs that do one thing and do it well write",
    "start": "1628159",
    "end": "1633840"
  },
  {
    "text": "programs to work together write programs to handle Tech streams because that is a",
    "start": "1633840",
    "end": "1639279"
  },
  {
    "text": "universal interface um sounds like smart guy this is back in this I think this was",
    "start": "1639279",
    "end": "1645399"
  },
  {
    "text": "67 just to Ram home this point a bit more is a book called The Art of Unix programming that I'm sure is a rip",
    "start": "1645399",
    "end": "1651200"
  },
  {
    "start": "1647000",
    "end": "2101000"
  },
  {
    "text": "snorter but I haven't read it what I have done is found out about it on Wikipedia and copy bits of Wikipedia into my slides there are basically in",
    "start": "1651200",
    "end": "1658080"
  },
  {
    "text": "this book are I think it's about 177 rules of Unix that Eric Raymond talks",
    "start": "1658080",
    "end": "1664279"
  },
  {
    "text": "about and I think he's very serious when he talks about rules and I've picked out a few rules that give you what I I quite",
    "start": "1664279",
    "end": "1670240"
  },
  {
    "text": "like as for general rules for all systems here the rule of",
    "start": "1670240",
    "end": "1675600"
  },
  {
    "text": "modularity developers should build a program out of simple Parts connected by well defined interfaces so problems are",
    "start": "1675600",
    "end": "1683919"
  },
  {
    "text": "local and parts of the program could be replaced in future versions to support new features this rule aims to save time",
    "start": "1683919",
    "end": "1690640"
  },
  {
    "text": "on debugging debugging complex code this complex long and unreadable okay it's",
    "start": "1690640",
    "end": "1695880"
  },
  {
    "text": "good good the rule of Simplicity developers should design for Simplicity by looking for ways to break up program",
    "start": "1695880",
    "end": "1702480"
  },
  {
    "text": "systems into small straightforward cooperating pieces he kind of likes the",
    "start": "1702480",
    "end": "1708200"
  },
  {
    "text": "small thing here doesn't he this rule aims to discourage developers affection for writing intricate and beautiful",
    "start": "1708200",
    "end": "1713919"
  },
  {
    "text": "complexities that are in reality bug prone programs I feel quite offended about this because I've been doing that",
    "start": "1713919",
    "end": "1720200"
  },
  {
    "text": "for quite a long time I like my big complex systems and Neil talked earlier before",
    "start": "1720200",
    "end": "1726120"
  },
  {
    "text": "lunch about this this challenge that we often don't have constraints placed upon us and therefore we allow our systems to",
    "start": "1726120",
    "end": "1732720"
  },
  {
    "text": "become big and complex this is my favorite one the rule of parsimony the word I don't use in enough",
    "start": "1732720",
    "end": "1739480"
  },
  {
    "text": "Pony um developers should avoid writing big programs again he's really driving",
    "start": "1739480",
    "end": "1744519"
  },
  {
    "text": "the point home to the point of being boring now this rule aims to prevent overinvestment of development time in",
    "start": "1744519",
    "end": "1750240"
  },
  {
    "text": "failed or suboptimal approaches caused by the owners of the program's reluctance to throw away visibly large",
    "start": "1750240",
    "end": "1756840"
  },
  {
    "text": "pieces of work smaller programs are not only easier to optimize and maintain",
    "start": "1756840",
    "end": "1762200"
  },
  {
    "text": "they are easier to delete when deprecated this is really really important stuff",
    "start": "1762200",
    "end": "1769320"
  },
  {
    "text": "I think it's okay if the board of your company knows about the name of a system as a whole if the board of your company",
    "start": "1769320",
    "end": "1776440"
  },
  {
    "text": "knows the name of a service in that system it's already too big for you to kill easily this is the problem they're",
    "start": "1776440",
    "end": "1783840"
  },
  {
    "text": "big they're visible lots of risks associated with if I need to change that a pain in the ass there's too much",
    "start": "1783840",
    "end": "1789200"
  },
  {
    "text": "attention on me I can't do it these are the big complex Legacy systems Rel live with if my service is nice and small I",
    "start": "1789200",
    "end": "1796360"
  },
  {
    "text": "can rewrite it who cares down North almost causes um designing for rewrite",
    "start": "1796360",
    "end": "1802000"
  },
  {
    "text": "rather than reuse making things small enough that you can rewrite them in a new language in a different way just to",
    "start": "1802000",
    "end": "1808200"
  },
  {
    "text": "make it easier to understand more performant or whatever it is but we need to think about what Unix thinks of as a",
    "start": "1808200",
    "end": "1814000"
  },
  {
    "text": "program a lot of you here probably have used Linux and if You' got Max you've been maybe use the command line this is",
    "start": "1814000",
    "end": "1821039"
  },
  {
    "text": "what a Unix program looks like LS that lists a directory structure I pass in",
    "start": "1821039",
    "end": "1827320"
  },
  {
    "text": "text with command line arguments if I want to connect it to another program I have a uniform text",
    "start": "1827320",
    "end": "1835120"
  },
  {
    "text": "interface it's called pipe so this will take LS and send the output of that to",
    "start": "1835120",
    "end": "1840240"
  },
  {
    "text": "another program called grep that's going to look for the word Sam this is small stuff now I've been",
    "start": "1840240",
    "end": "1847200"
  },
  {
    "text": "using LS for about 15 years I know I've used completely different versions of Ls",
    "start": "1847200",
    "end": "1852440"
  },
  {
    "text": "and even on the platforms I've been using for a long period of time LS has been completely Rewritten the features I always used to use",
    "start": "1852440",
    "end": "1858559"
  },
  {
    "text": "still work and new features have been added but that code has been Rewritten fundamentally multiple different",
    "start": "1858559",
    "end": "1865200"
  },
  {
    "text": "times so think about our services then we like to go small but how small should",
    "start": "1865200",
    "end": "1870679"
  },
  {
    "text": "I go this my colleague James Lewis uh who's going to be doing the mic service tutorial with me on um Thursday James",
    "start": "1870679",
    "end": "1877840"
  },
  {
    "text": "used to say when he was asked how small should a service be he said you said no bigger than my head um now the first",
    "start": "1877840",
    "end": "1885279"
  },
  {
    "text": "time I gave this talk I was in Poland in a multiplex cinema and James's head was",
    "start": "1885279",
    "end": "1891320"
  },
  {
    "text": "four times bigger than it is here which was an awkward conversation to have um",
    "start": "1891320",
    "end": "1896600"
  },
  {
    "text": "initially it was about saying well if I can fit all the code for service in one screen and my head's about the same size",
    "start": "1896600",
    "end": "1902360"
  },
  {
    "text": "of a screen it was kind of that but then we saying about font size and um what James really means is that the service",
    "start": "1902360",
    "end": "1908000"
  },
  {
    "text": "should be no more complex than I can understand I should be able to look at and understand what that service is doing at that level of that service it",
    "start": "1908000",
    "end": "1914880"
  },
  {
    "text": "should conceptually fit inside my head inside my brain I've heard other people",
    "start": "1914880",
    "end": "1920159"
  },
  {
    "text": "that say and certainly organizations that practice a lot of fine grained architectures um they have like rules of",
    "start": "1920159",
    "end": "1926399"
  },
  {
    "text": "thumb like 200 lines of code about right 200 lines of code doesn't seem like a lot let's think about our shop",
    "start": "1926399",
    "end": "1933720"
  },
  {
    "text": "let's think about our web shop think about the basket service what am I going to do with a basket I'm going to add to",
    "start": "1933720",
    "end": "1940519"
  },
  {
    "text": "basket I'm going to remove from basket I'm going to look at the basket even if",
    "start": "1940519",
    "end": "1947360"
  },
  {
    "text": "this was backed into a database for persistence between sessions I would actually be a bit embarrassed if I",
    "start": "1947360",
    "end": "1953480"
  },
  {
    "text": "couldn't write that service in less than 200 lines of code uh even in Java login",
    "start": "1953480",
    "end": "1959159"
  },
  {
    "text": "there's login log out am I logged in that's",
    "start": "1959159",
    "end": "1964200"
  },
  {
    "text": "three things I'm doing again 200 lines of code seems reasonable registration",
    "start": "1964200",
    "end": "1970480"
  },
  {
    "text": "register okay next uh you know recommendation what's in my basket what should I recommend I'm being slightly",
    "start": "1970480",
    "end": "1977200"
  },
  {
    "text": "glib but when you actually take these contexts and break them apart you suddenly start understanding your system",
    "start": "1977200",
    "end": "1982679"
  },
  {
    "text": "doesn't seem that complex after all this actually allows you to focus on the",
    "start": "1982679",
    "end": "1988480"
  },
  {
    "text": "essential complexity rather than The Accidental complexity that gets pushed to your interaction points it's very",
    "start": "1988480",
    "end": "1994880"
  },
  {
    "text": "hard to understand how these would be more than a couple hundred lines of code and if I want to blow one away and",
    "start": "1994880",
    "end": "2000080"
  },
  {
    "text": "replace it with something else well I can closure is better so why wouldn't I that can lead to these sort of big",
    "start": "2000080",
    "end": "2007000"
  },
  {
    "text": "systems of very very fine gr and have lots of interactions with each other typically at this point if I'm allowing",
    "start": "2007000",
    "end": "2013399"
  },
  {
    "text": "questions which I'm not because I'm worried about being behind time you can ask questions later via the app press the green button um is is one of things",
    "start": "2013399",
    "end": "2020840"
  },
  {
    "text": "like performance one of the first things I did there was I actually took a service I broke up the baned context",
    "start": "2020840",
    "end": "2026240"
  },
  {
    "text": "within the same service had different resource pools talking to the same database that's obviously going to be",
    "start": "2026240",
    "end": "2031559"
  },
  {
    "text": "slower isn't it what are you talking about Sam this is nuts I've now going to make multiple service calls to assemble",
    "start": "2031559",
    "end": "2037080"
  },
  {
    "text": "my application that's going to be slow and then we have a big fight about things um so at this point I would just",
    "start": "2037080",
    "end": "2042399"
  },
  {
    "text": "say a few things um firstly performance is not the most important thing I don't care what application You're Building",
    "start": "2042399",
    "end": "2048839"
  },
  {
    "text": "performance is not the most important thing to you what is features you need some features otherwise a very fast app",
    "start": "2048839",
    "end": "2054599"
  },
  {
    "text": "that does nothing is useless so there's always tradeoffs performance is often vying against other things that are",
    "start": "2054599",
    "end": "2059800"
  },
  {
    "text": "important to you it's vying against the speed of delivery is vying against data durability service availability",
    "start": "2059800",
    "end": "2066720"
  },
  {
    "text": "consistency of information there's a whole of tradeoffs you have what does",
    "start": "2066720",
    "end": "2072158"
  },
  {
    "text": "good look like for your system what is performant for your system now tell me how fast your system currently is and",
    "start": "2072159",
    "end": "2077839"
  },
  {
    "text": "then we'll talk about how fast it's going to be when we make the change um so as always with these things test",
    "start": "2077839",
    "end": "2083679"
  },
  {
    "text": "quite often when you break these systems apart you discover other opportunities to make your system faster you actually",
    "start": "2083679",
    "end": "2090358"
  },
  {
    "text": "start to break away some of the paths and some features actually become faster because they're no longer Shackled with",
    "start": "2090359",
    "end": "2095480"
  },
  {
    "text": "the compute paths or the iio intensity of another type of",
    "start": "2095480",
    "end": "2100599"
  },
  {
    "text": "operation so often people say then how small should I go well you know you want to go small the constraint actually is",
    "start": "2100599",
    "end": "2106760"
  },
  {
    "start": "2101000",
    "end": "2244000"
  },
  {
    "text": "not the lines of code you get more benefit the small your services because it's easier to comprehend the code but",
    "start": "2106760",
    "end": "2112680"
  },
  {
    "text": "too many services and too many types of discret services can be problematic and the other constraint that comes into",
    "start": "2112680",
    "end": "2118920"
  },
  {
    "text": "here is your operational and Architectural maturity so what we think of by your operational maturity in the",
    "start": "2118920",
    "end": "2124880"
  },
  {
    "text": "old world we had one big service and we you might have multiple instances of that maybe I'm load balancing them and",
    "start": "2124880",
    "end": "2130920"
  },
  {
    "text": "they sat on a big box uh and this is a very easy model to understand to comprehend in the new world we go to",
    "start": "2130920",
    "end": "2138240"
  },
  {
    "text": "smaller services and the first thing A lot of people do is say right I'm now going to have lots of things on a box keep my boxes this becomes",
    "start": "2138240",
    "end": "2146079"
  },
  {
    "text": "problematic firstly you've got some poor Ops guy sitting there uh who has to go and deploy these things and if people",
    "start": "2146079",
    "end": "2151960"
  },
  {
    "text": "have pick different technology Stacks that's quite painful most shops I know that's that do very frying gr architect",
    "start": "2151960",
    "end": "2157680"
  },
  {
    "text": "textures standardized on one or two technology platforms so there might be a",
    "start": "2157680",
    "end": "2163240"
  },
  {
    "text": "jvm and an OJs shop that's partly because you want commonality you want probably some deployment mechanism needs",
    "start": "2163240",
    "end": "2169680"
  },
  {
    "text": "to be pretty similar but secondly you get problems in the old world if I got an alert on a box",
    "start": "2169680",
    "end": "2177400"
  },
  {
    "text": "and I only had one service on that box I knew that well either that service well that service is impacted by that alert",
    "start": "2177400",
    "end": "2183839"
  },
  {
    "text": "or it caus that alert the reasoning activities you go through when dealing with condition were much simpler now",
    "start": "2183839",
    "end": "2189400"
  },
  {
    "text": "when I have multiple services on that box which ones caused the problem what's the impact of that problem happening now",
    "start": "2189400",
    "end": "2195200"
  },
  {
    "text": "so this becomes a bit more challenging so if you can when you're moving to final grain services still try",
    "start": "2195200",
    "end": "2201720"
  },
  {
    "text": "and keep that onetoone mapping between the service and the hosted is running on so rather than having big boxes with",
    "start": "2201720",
    "end": "2208800"
  },
  {
    "text": "lots of small Services try and have smaller boxes with smaller Services um this actually greatly",
    "start": "2208800",
    "end": "2214920"
  },
  {
    "text": "simplifies the operational overhead in terms of understanding how system is working it also makes your life simpler",
    "start": "2214920",
    "end": "2220640"
  },
  {
    "text": "in terms of provisioning if you've got an example an environment where you can uh provision",
    "start": "2220640",
    "end": "2226280"
  },
  {
    "text": "these host on demand maybe you're using anything from lxc all the way up to say VMS or um Amazon or aure for bring up",
    "start": "2226280",
    "end": "2234000"
  },
  {
    "text": "your compute you can then bring up boxes as you bring up services and Destroy them at the same time this allows you to",
    "start": "2234000",
    "end": "2239920"
  },
  {
    "text": "actually have uh to still keep the lives of your operational team better so",
    "start": "2239920",
    "end": "2245040"
  },
  {
    "start": "2244000",
    "end": "2491000"
  },
  {
    "text": "another problem to think about if I had one big box it's kind of typically has a binary",
    "start": "2245040",
    "end": "2251720"
  },
  {
    "text": "state in terms of being happy it's either up or it's down it's kind of",
    "start": "2251720",
    "end": "2256800"
  },
  {
    "text": "straightforward it's on or it's off what about when I've got a big system like this it's all intricate now what if this",
    "start": "2256800",
    "end": "2262960"
  },
  {
    "text": "guy in the middle is down is my system up or is my system down um don't know it's a bit more",
    "start": "2262960",
    "end": "2270720"
  },
  {
    "text": "fuzzy this becomes a bit more confusing to understand you have to get better for",
    "start": "2270720",
    "end": "2276079"
  },
  {
    "text": "example at knowing that the guy up here in the top might have a problem because something Downstream has a problem you",
    "start": "2276079",
    "end": "2282960"
  },
  {
    "text": "have to get very smart for all of your end points need to map and understand the health of their Downstream resources",
    "start": "2282960",
    "end": "2288640"
  },
  {
    "text": "we need to get good at monitoring response times of all of these individual components to understand where the bottlenecks might be these are",
    "start": "2288640",
    "end": "2295040"
  },
  {
    "text": "not problems you had in the past with the one big box if something was slow it's the one big box there's nothing",
    "start": "2295040",
    "end": "2300920"
  },
  {
    "text": "else in the world now in this world if something's slow what is it that's causing the problem and so from an",
    "start": "2300920",
    "end": "2306200"
  },
  {
    "text": "operational point of view the amount of pain you're going to suffer is not down to how big or small a service is it's",
    "start": "2306200",
    "end": "2312480"
  },
  {
    "text": "going to be about the number of them the number of those things you're managing so you need to understand how",
    "start": "2312480",
    "end": "2320240"
  },
  {
    "text": "mature your organization is in terms of handling not only the implications of",
    "start": "2320240",
    "end": "2325520"
  },
  {
    "text": "say Downstream outage and the architectural pattern required to ensure distributed systems themselves can be",
    "start": "2325520",
    "end": "2331079"
  },
  {
    "text": "stable and there I start with Mike nygard's release it book but also your operational maturity how easy is it if",
    "start": "2331079",
    "end": "2337560"
  },
  {
    "text": "you to provision hosts for your services how is it do you deploy Services understand what's happening to them in",
    "start": "2337560",
    "end": "2343839"
  },
  {
    "text": "production and depending on where you are maybe in the old school I've got to Rack a box up everything or maybe I'm in",
    "start": "2343839",
    "end": "2349240"
  },
  {
    "text": "a new school I I can I can provision everything automatically on the cloud world it's going to tell you where your",
    "start": "2349240",
    "end": "2354359"
  },
  {
    "text": "appetite is for how small and how many of these things you can afford to have and probably as a rule of thumb I would",
    "start": "2354359",
    "end": "2361920"
  },
  {
    "text": "start course grained and get finer grained because you will learn things at you know one of the time people say how",
    "start": "2361920",
    "end": "2368400"
  },
  {
    "text": "many Serv is a good number I say how many have you got now and they say five I say six go to six and see what happens",
    "start": "2368400",
    "end": "2376040"
  },
  {
    "text": "and then go to seven and then go to eight and as you go you will learn things and discover things do not go",
    "start": "2376040",
    "end": "2381560"
  },
  {
    "text": "from 1 to 20 uh if you do don't blame me because your life will become a living hell",
    "start": "2381560",
    "end": "2387560"
  },
  {
    "text": "because what will happen is you'll discover all the stuff you didn't know about Downstream cascading failures and",
    "start": "2387560",
    "end": "2393400"
  },
  {
    "text": "the pain in the operations team and the cloud hates you um ultimately this is",
    "start": "2393400",
    "end": "2399440"
  },
  {
    "text": "all about a lot of tradeoffs but the key thing here is to start as you mean to go on is is to",
    "start": "2399440",
    "end": "2405680"
  },
  {
    "text": "slowly chip away and emerge and pull out these designs where which Banner context in particular you want to spin off and",
    "start": "2405680",
    "end": "2412079"
  },
  {
    "text": "take out of your your main service is going to depend on a lot of factors I talked about at the beginning uh maybe",
    "start": "2412079",
    "end": "2417599"
  },
  {
    "text": "this area of code is actually uh we need to scale up this feature set maybe it's that we've got a lot of changes that are",
    "start": "2417599",
    "end": "2423480"
  },
  {
    "text": "happening in this one area of the code and if you make it a separate service that we can actually release those",
    "start": "2423480",
    "end": "2429000"
  },
  {
    "text": "change without affecting the overall system it may be geography maybe all those sorts of",
    "start": "2429000",
    "end": "2434560"
  },
  {
    "text": "things but at least when you start getting those tensions now you can think okay so what I need to do where the seams in my",
    "start": "2434560",
    "end": "2440520"
  },
  {
    "text": "system there's a lot of ideas that sort of are not really around distributed systems that have sort of helped",
    "start": "2440520",
    "end": "2447040"
  },
  {
    "text": "interpret this thinking you've got things like object-oriented systems and CRC cards uh you've got uh things from",
    "start": "2447040",
    "end": "2453680"
  },
  {
    "text": "the Unix um processing uh Unix operating system um when I also think about i' finished",
    "start": "2453680",
    "end": "2460160"
  },
  {
    "text": "this presentation the first time and I suddenly realized this reminds me so much of all the stuff that Mike feather's talks about in his book",
    "start": "2460160",
    "end": "2466000"
  },
  {
    "text": "working with Legacy code you take a big thing you look for seams and all I'm suggesting here is",
    "start": "2466000",
    "end": "2471960"
  },
  {
    "text": "that those seams should follow the business domain or the domain in which you're operating because by Nature they",
    "start": "2471960",
    "end": "2477680"
  },
  {
    "text": "tend to have well you might been a fairly chaotic organization like I actually work in but typically in most",
    "start": "2477680",
    "end": "2484119"
  },
  {
    "text": "organizations you have these explicit boundaries explicit responsibilities those interaction points and they're great ways to actually model services",
    "start": "2484119",
    "end": "2491240"
  },
  {
    "start": "2491000",
    "end": "2627000"
  },
  {
    "text": "on so in summary understand your bounded contexts",
    "start": "2491240",
    "end": "2497119"
  },
  {
    "text": "where are they how do they exist this is actually a great opportunity for you as technologist to reach out to those",
    "start": "2497119",
    "end": "2502640"
  },
  {
    "text": "people in your business domain what are the things that we care about oh so is that how those guys talk together well",
    "start": "2502640",
    "end": "2507800"
  },
  {
    "text": "why aren't we doing that in the code understand where the cost of changes you probably don't need to have",
    "start": "2507800",
    "end": "2513200"
  },
  {
    "text": "a big conversation about where you're going to move code to initially when you start getting into you make database",
    "start": "2513200",
    "end": "2518240"
  },
  {
    "text": "changes or changes with how Services talk to each other do a little bit more upfront thinking at that point please",
    "start": "2518240",
    "end": "2524200"
  },
  {
    "text": "it's important tool you can have as a delivery team with a whiteboard and some pens and a board rubber I I do get",
    "start": "2524200",
    "end": "2531480"
  },
  {
    "text": "surprised by the organizations I've been in where it's easier to get a new machine racked up than it is to find some B rubbers and things like that it's",
    "start": "2531480",
    "end": "2537960"
  },
  {
    "text": "insane um this is very much an incremental Journey you can chip away at",
    "start": "2537960",
    "end": "2544200"
  },
  {
    "text": "this gradually over time so actually is a very good way of getting confidence your system can be a bit more Supple and",
    "start": "2544200",
    "end": "2550520"
  },
  {
    "text": "a bit more adaptive find these seams Chip Away gradually pull things",
    "start": "2550520",
    "end": "2556240"
  },
  {
    "text": "apart the the key thing for me is this has been fantastic in allowing organizations to experiment more when",
    "start": "2556240",
    "end": "2563280"
  },
  {
    "text": "you have a big service all of my features are in there and therefore all my risk is in there and if I want to try",
    "start": "2563280",
    "end": "2570280"
  },
  {
    "text": "new language try new framework the risk of that huge if I can",
    "start": "2570280",
    "end": "2575400"
  },
  {
    "text": "break that apart and Target changes to a small component over here though I'll try an idea out does it work if it",
    "start": "2575400",
    "end": "2582559"
  },
  {
    "text": "doesn't work it's it's actually quite fairly low risk it's a bit of code we don't change that often it's it's not",
    "start": "2582559",
    "end": "2587640"
  },
  {
    "text": "the end of the world if we get a couple of issues here it actually allows you to be a bit braver it's not only in terms",
    "start": "2587640",
    "end": "2593359"
  },
  {
    "text": "of addressing things like technical debt and being more adaptive in your thinking but also in terms of bringing new technology and techniques into your",
    "start": "2593359",
    "end": "2600599"
  },
  {
    "text": "organization and so and the last point is that why size is often important and in general smaller is often better",
    "start": "2600599",
    "end": "2608319"
  },
  {
    "text": "you have to go slowly to understand what your own level of maturity is around the architectural patterns and around your",
    "start": "2608319",
    "end": "2614079"
  },
  {
    "text": "operational maturity um I think with that I'm I'm",
    "start": "2614079",
    "end": "2619359"
  },
  {
    "text": "done so I just want to say yeah thank you very [Applause]",
    "start": "2619359",
    "end": "2626010"
  },
  {
    "start": "2627000",
    "end": "2934000"
  },
  {
    "text": "much so hopefully some of you have asked questions on the special app oh we got questions okay okay thank",
    "start": "2627440",
    "end": "2635599"
  },
  {
    "text": "you uh okay um uh okay so uh a recommendation engine",
    "start": "2635599",
    "end": "2642800"
  },
  {
    "text": "is not 200 lines of code perhaps a network request to a cache response somewhere but not actual algorithms for",
    "start": "2642800",
    "end": "2648480"
  },
  {
    "text": "determining user recommendations so what are you causing service based on that example um I think we could you could",
    "start": "2648480",
    "end": "2655160"
  },
  {
    "text": "argue about this I mean simple genre matching would be would be perfectly acceptable I think as a recommendation",
    "start": "2655160",
    "end": "2661400"
  },
  {
    "text": "system for many people so I would say that is an example of a service I was being slightly GLI with the 200 l of",
    "start": "2661400",
    "end": "2667400"
  },
  {
    "text": "code I think within an organiz I mean the key thing for me is when you get into this microservice world is you it",
    "start": "2667400",
    "end": "2673240"
  },
  {
    "text": "starts to allow you to concentrate on the the sort of uh the real complexity rather than the incidental complexity I",
    "start": "2673240",
    "end": "2679920"
  },
  {
    "text": "could imagine a recommendation service that is just something as simple as saying the CDs in my basket are mostly",
    "start": "2679920",
    "end": "2686359"
  },
  {
    "text": "in the Rock genre I'm going to take the top 10 Rock genre records and put those out as recommendations may not be very",
    "start": "2686359",
    "end": "2693079"
  },
  {
    "text": "sophisticated but it would be a start that's a very obvious bounded context I might then get a lot more",
    "start": "2693079",
    "end": "2699040"
  },
  {
    "text": "sophisticated I might start looking at the country you live in the area you live in the interests you and your",
    "start": "2699040",
    "end": "2704559"
  },
  {
    "text": "friends have and get more sophisticated the key thing is from the outside world point of view no one notices just",
    "start": "2704559",
    "end": "2711040"
  },
  {
    "text": "semantically the responses get better I hope that's answered the question if not feel free to Glass me outside um another",
    "start": "2711040",
    "end": "2719000"
  },
  {
    "text": "question when moving from Big to smaller composed Services some things become simpler but it introduces complexity",
    "start": "2719000",
    "end": "2725359"
  },
  {
    "text": "between the services where is the root cause of a problem do you need to protect against that there is more",
    "start": "2725359",
    "end": "2730640"
  },
  {
    "text": "opportunity for failure any thoughts on that absolutely hopefully I started touching on that at the end uh you have",
    "start": "2730640",
    "end": "2736800"
  },
  {
    "text": "to get a lot very smart about the protocols you use to talk to each other that's where upfront design is very",
    "start": "2736800",
    "end": "2743480"
  },
  {
    "text": "important uh colleague of mine Eric dber uses analogy where he talks about the concept of town planning versus",
    "start": "2743480",
    "end": "2749559"
  },
  {
    "text": "architecture with town planning it's like Sim City right you have a Ser you have my light Industrial Area here I",
    "start": "2749559",
    "end": "2755040"
  },
  {
    "text": "have my commercial area here I don't really care what buildings appear in that space I care a lot about the roads",
    "start": "2755040",
    "end": "2761000"
  },
  {
    "text": "between them you actually spend a lot of your time as an architect not worrying about what a team does inside the box",
    "start": "2761000",
    "end": "2767800"
  },
  {
    "text": "and caring a lot more about what goes on between the boxes the key thing is you start getting a separation responsibility the people inside the",
    "start": "2767800",
    "end": "2774400"
  },
  {
    "text": "service just care about what their service is doing the Architects thinking about the more complex things um so yet",
    "start": "2774400",
    "end": "2780720"
  },
  {
    "text": "you need to monitor response time of every service you need to look at Downstream reporting of your",
    "start": "2780720",
    "end": "2785760"
  },
  {
    "text": "dependencies you're going to need to be doing trending decent log aggregation stuff it say a lot when you list out all",
    "start": "2785760",
    "end": "2792359"
  },
  {
    "text": "the things the people who do fine grain architectures do it's a daunting list it's a scary list which is why start",
    "start": "2792359",
    "end": "2798160"
  },
  {
    "text": "small and you'll see when you need to introduce those Concepts um I think got time for one",
    "start": "2798160",
    "end": "2805520"
  },
  {
    "text": "more uh okay uh okay so mic Services make clear stance for backend system but",
    "start": "2805520",
    "end": "2811520"
  },
  {
    "text": "how do you recommend exposing the Ser oh good question the services to frontend clients such as web desktop and mobile",
    "start": "2811520",
    "end": "2817440"
  },
  {
    "text": "one approach is to let the clients interact with Individual Services via Discovery process another is a thin",
    "start": "2817440",
    "end": "2823160"
  },
  {
    "text": "service level facade giving clients a single representation the resources each has pros and cons I'd appreciate your um",
    "start": "2823160",
    "end": "2831599"
  },
  {
    "text": "perspective um I think in the old days where we only ever built websites you'd",
    "start": "2831599",
    "end": "2836880"
  },
  {
    "text": "have like a big UI web shop and that would be all your stuff there and you talk to all the backend Services behind",
    "start": "2836880",
    "end": "2842400"
  },
  {
    "text": "the scenes I think increasingly that doesn't hold water anymore I think the key thing we can say is it's not the web",
    "start": "2842400",
    "end": "2848280"
  },
  {
    "text": "and mobile it's just we now have a lot of clients and we don't know who they are or where they're going to be I",
    "start": "2848280",
    "end": "2854040"
  },
  {
    "text": "actually tend to in general have the clients talk directly to the services as",
    "start": "2854040",
    "end": "2860440"
  },
  {
    "text": "opposed to trying to create thin veneer Services what we're trying to do is really think about this idea of",
    "start": "2860440",
    "end": "2866319"
  },
  {
    "text": "hexagonal architecture we want to avoid this layered problem a lot of time when we have clients talking through a thin",
    "start": "2866319",
    "end": "2872400"
  },
  {
    "text": "service layer where we're trying to push shared code into the server we actually end up doing things like creating",
    "start": "2872400",
    "end": "2878480"
  },
  {
    "text": "aggregation services and all that sort of stuff and over time that can be really hard to deal with and you end up",
    "start": "2878480",
    "end": "2884559"
  },
  {
    "text": "actually you know I've got a load of now stuff here specific about a domain content that's actually really actually down here I think common services for",
    "start": "2884559",
    "end": "2892079"
  },
  {
    "text": "clients that make sense of things like looking handshaking for API Keys looking for accidental denial of service attacks",
    "start": "2892079",
    "end": "2898119"
  },
  {
    "text": "logging um you might have off barriers if you're dealing with security to make sure people have got the rights so in",
    "start": "2898119",
    "end": "2903800"
  },
  {
    "text": "general I favor clients going to the services and the with the intermediate Services being nothing being fairly",
    "start": "2903800",
    "end": "2909800"
  },
  {
    "text": "agnostic and certainly having no understanding of the domain um there are times where you need to go a bit in the",
    "start": "2909800",
    "end": "2915119"
  },
  {
    "text": "middle but in general stay over here wherever this here is I hope I've answered that",
    "start": "2915119",
    "end": "2920599"
  },
  {
    "text": "question um how we doing for time we got time for good any other questions though okay",
    "start": "2920599",
    "end": "2927599"
  },
  {
    "text": "well thank for your [Applause]",
    "start": "2927599",
    "end": "2932619"
  },
  {
    "text": "time",
    "start": "2933040",
    "end": "2936040"
  }
]