[
  {
    "text": "all right hello everyone I'm here today",
    "start": "9300",
    "end": "11700"
  },
  {
    "text": "to talk about functional programming and",
    "start": "11700",
    "end": "13380"
  },
  {
    "text": "education uh I'll look at how it has",
    "start": "13380",
    "end": "15780"
  },
  {
    "text": "been used and I will talk about how I",
    "start": "15780",
    "end": "17940"
  },
  {
    "text": "think it could be used so let's get",
    "start": "17940",
    "end": "20039"
  },
  {
    "text": "right into it I'd like to sort of scope",
    "start": "20039",
    "end": "21840"
  },
  {
    "text": "the talk to tertiary education so",
    "start": "21840",
    "end": "23580"
  },
  {
    "text": "something like University",
    "start": "23580",
    "end": "25400"
  },
  {
    "text": "and in particular I really want to talk",
    "start": "25400",
    "end": "27660"
  },
  {
    "text": "about that first year first semester",
    "start": "27660",
    "end": "29699"
  },
  {
    "text": "programming subject called like",
    "start": "29699",
    "end": "31199"
  },
  {
    "text": "introduction to programming or",
    "start": "31199",
    "end": "33300"
  },
  {
    "text": "programming one or something like this",
    "start": "33300",
    "end": "35579"
  },
  {
    "text": "right it's the course it's the",
    "start": "35579",
    "end": "36960"
  },
  {
    "text": "university subject that's meant to take",
    "start": "36960",
    "end": "38399"
  },
  {
    "text": "people who don't know anything about",
    "start": "38399",
    "end": "40079"
  },
  {
    "text": "computer programming and teach them how",
    "start": "40079",
    "end": "42960"
  },
  {
    "text": "to write computer programs okay so I'm",
    "start": "42960",
    "end": "45660"
  },
  {
    "text": "really interested in this subject and",
    "start": "45660",
    "end": "46920"
  },
  {
    "text": "how we can teach it",
    "start": "46920",
    "end": "49020"
  },
  {
    "text": "one of the key questions we have to ask",
    "start": "49020",
    "end": "51539"
  },
  {
    "text": "ourselves if we were to say design a",
    "start": "51539",
    "end": "53820"
  },
  {
    "text": "curriculum for this subject is which",
    "start": "53820",
    "end": "55500"
  },
  {
    "text": "language are we going to teach people",
    "start": "55500",
    "end": "57480"
  },
  {
    "text": "in order to teach people programming we",
    "start": "57480",
    "end": "59760"
  },
  {
    "text": "will have to teach them some particular",
    "start": "59760",
    "end": "61140"
  },
  {
    "text": "language for them to program in",
    "start": "61140",
    "end": "63120"
  },
  {
    "text": "and I argue that which language you",
    "start": "63120",
    "end": "64680"
  },
  {
    "text": "choose actually has an enormous",
    "start": "64680",
    "end": "66119"
  },
  {
    "text": "influence on the kind of course that you",
    "start": "66119",
    "end": "68100"
  },
  {
    "text": "can create",
    "start": "68100",
    "end": "69659"
  },
  {
    "text": "so this is a Hello World program written",
    "start": "69659",
    "end": "72360"
  },
  {
    "text": "in Java and you'll notice there's an",
    "start": "72360",
    "end": "74640"
  },
  {
    "text": "enormous number of constructs in this so",
    "start": "74640",
    "end": "78000"
  },
  {
    "text": "to actually understand what this code",
    "start": "78000",
    "end": "79799"
  },
  {
    "text": "says we need to know about things like",
    "start": "79799",
    "end": "81900"
  },
  {
    "text": "classes static methods access modifiers",
    "start": "81900",
    "end": "84860"
  },
  {
    "text": "and so on just to write hello world",
    "start": "84860",
    "end": "88259"
  },
  {
    "text": "okay so I think a big part of that first",
    "start": "88259",
    "end": "92159"
  },
  {
    "text": "programming subject is kind of",
    "start": "92159",
    "end": "93600"
  },
  {
    "text": "dispelling the notion that computers are",
    "start": "93600",
    "end": "95520"
  },
  {
    "text": "somehow magic or or I don't have any",
    "start": "95520",
    "end": "97259"
  },
  {
    "text": "control over the machine",
    "start": "97259",
    "end": "98700"
  },
  {
    "text": "and I think it would be really crushing",
    "start": "98700",
    "end": "100619"
  },
  {
    "text": "if you got to the end of your first",
    "start": "100619",
    "end": "102360"
  },
  {
    "text": "programming subject at University and",
    "start": "102360",
    "end": "104939"
  },
  {
    "text": "you still didn't understand the first",
    "start": "104939",
    "end": "107100"
  },
  {
    "text": "program you wrote",
    "start": "107100",
    "end": "108540"
  },
  {
    "text": "okay",
    "start": "108540",
    "end": "109979"
  },
  {
    "text": "so I really hope you'll I really hope",
    "start": "109979",
    "end": "112259"
  },
  {
    "text": "this convinces you that I'm not just",
    "start": "112259",
    "end": "113520"
  },
  {
    "text": "bike shedding over my favorite language",
    "start": "113520",
    "end": "114960"
  },
  {
    "text": "or your favorite language but there's",
    "start": "114960",
    "end": "116399"
  },
  {
    "text": "like a crucial difference depending on",
    "start": "116399",
    "end": "118979"
  },
  {
    "text": "which language we pick",
    "start": "118979",
    "end": "121500"
  },
  {
    "text": "um so one aspect of this is that there's",
    "start": "121500",
    "end": "123540"
  },
  {
    "text": "a lot of syntax to the Java language",
    "start": "123540",
    "end": "126540"
  },
  {
    "text": "and there's this funny sort of thing",
    "start": "126540",
    "end": "128220"
  },
  {
    "text": "that happens where quite often the uh",
    "start": "128220",
    "end": "131819"
  },
  {
    "text": "the structure of the subject",
    "start": "131819",
    "end": "134099"
  },
  {
    "text": "the the sort of curriculum will closely",
    "start": "134099",
    "end": "137220"
  },
  {
    "text": "follow the syntactic structure of the",
    "start": "137220",
    "end": "139500"
  },
  {
    "text": "language being taught",
    "start": "139500",
    "end": "141480"
  },
  {
    "text": "okay this has been referred to as the",
    "start": "141480",
    "end": "143340"
  },
  {
    "text": "tyranny of syntax but it'll be like oh",
    "start": "143340",
    "end": "145500"
  },
  {
    "text": "in week three we do if statements and in",
    "start": "145500",
    "end": "147780"
  },
  {
    "text": "week four we do while Loops okay",
    "start": "147780",
    "end": "151379"
  },
  {
    "text": "um",
    "start": "151379",
    "end": "152459"
  },
  {
    "text": "and I think that",
    "start": "152459",
    "end": "154500"
  },
  {
    "text": "that I mean this might be a good way to",
    "start": "154500",
    "end": "156540"
  },
  {
    "text": "structure a course but I think it has a",
    "start": "156540",
    "end": "158640"
  },
  {
    "text": "dangerous risk that comes with it that",
    "start": "158640",
    "end": "160379"
  },
  {
    "text": "the student might believe that what",
    "start": "160379",
    "end": "162900"
  },
  {
    "text": "they're really learning is a while loop",
    "start": "162900",
    "end": "164640"
  },
  {
    "text": "you're not learning a while loop you're",
    "start": "164640",
    "end": "166560"
  },
  {
    "text": "learning how to solve problems with",
    "start": "166560",
    "end": "167819"
  },
  {
    "text": "iteration okay and a while loop is a",
    "start": "167819",
    "end": "170099"
  },
  {
    "text": "vehicle that will let you do that okay",
    "start": "170099",
    "end": "173400"
  },
  {
    "text": "so it's very important not to confuse",
    "start": "173400",
    "end": "175319"
  },
  {
    "text": "these things and I worry that of course",
    "start": "175319",
    "end": "177360"
  },
  {
    "text": "so closely structured around the syntax",
    "start": "177360",
    "end": "179519"
  },
  {
    "text": "of the language",
    "start": "179519",
    "end": "180780"
  },
  {
    "text": "can lead to this kind of conflation of",
    "start": "180780",
    "end": "182819"
  },
  {
    "text": "Concepts",
    "start": "182819",
    "end": "185040"
  },
  {
    "text": "and so I'd like to talk about a book",
    "start": "185040",
    "end": "186720"
  },
  {
    "text": "called structure and interpretation of",
    "start": "186720",
    "end": "188220"
  },
  {
    "text": "computer programs or sicp that was",
    "start": "188220",
    "end": "190860"
  },
  {
    "text": "released in 1985 at MIT",
    "start": "190860",
    "end": "193319"
  },
  {
    "text": "and they managed to overcome completely",
    "start": "193319",
    "end": "195959"
  },
  {
    "text": "the tyranny of syntax because they",
    "start": "195959",
    "end": "198720"
  },
  {
    "text": "choose to they chose to teach",
    "start": "198720",
    "end": "200360"
  },
  {
    "text": "introductory programming in scheme",
    "start": "200360",
    "end": "203400"
  },
  {
    "text": "scheme is a dialect of lisp and lisp is",
    "start": "203400",
    "end": "206220"
  },
  {
    "text": "Infamous for having almost no syntax",
    "start": "206220",
    "end": "209640"
  },
  {
    "text": "the only syntax in lisp is the S",
    "start": "209640",
    "end": "211800"
  },
  {
    "text": "expression and there are some special",
    "start": "211800",
    "end": "213720"
  },
  {
    "text": "forms such as Define or if which",
    "start": "213720",
    "end": "215819"
  },
  {
    "text": "slightly change how the S expression",
    "start": "215819",
    "end": "217260"
  },
  {
    "text": "behaves but that's it that's all we've",
    "start": "217260",
    "end": "219720"
  },
  {
    "text": "got okay and so in the very first",
    "start": "219720",
    "end": "222360"
  },
  {
    "text": "lecture they teach you how to define a",
    "start": "222360",
    "end": "224400"
  },
  {
    "text": "procedure they teach you how to use a",
    "start": "224400",
    "end": "226260"
  },
  {
    "text": "conditional like in this case an if",
    "start": "226260",
    "end": "227760"
  },
  {
    "text": "statement and they teach you iteration",
    "start": "227760",
    "end": "229680"
  },
  {
    "text": "by means of recursion so in the first",
    "start": "229680",
    "end": "231659"
  },
  {
    "text": "lecture they're able to show you a",
    "start": "231659",
    "end": "232980"
  },
  {
    "text": "factorial function and do something kind",
    "start": "232980",
    "end": "234599"
  },
  {
    "text": "of non-trivial which I think is really",
    "start": "234599",
    "end": "237239"
  },
  {
    "text": "cool and they're only able to do this",
    "start": "237239",
    "end": "238920"
  },
  {
    "text": "because there's very little syntax",
    "start": "238920",
    "end": "240299"
  },
  {
    "text": "involved",
    "start": "240299",
    "end": "242400"
  },
  {
    "text": "uh the yeah",
    "start": "242400",
    "end": "245540"
  },
  {
    "text": "so another advantage",
    "start": "245760",
    "end": "248159"
  },
  {
    "text": "of using scheme is that we can use the",
    "start": "248159",
    "end": "251519"
  },
  {
    "text": "substitution model of evaluation we can",
    "start": "251519",
    "end": "253799"
  },
  {
    "text": "teach this to students oh",
    "start": "253799",
    "end": "256079"
  },
  {
    "text": "yes Phil",
    "start": "256079",
    "end": "258919"
  },
  {
    "text": "you're spoiling the rest of my talk Phil",
    "start": "260760",
    "end": "265280"
  },
  {
    "text": "and laughs",
    "start": "268680",
    "end": "271440"
  },
  {
    "text": "and so we have the um so we can use the",
    "start": "271440",
    "end": "274740"
  },
  {
    "text": "substitution model of evaluation",
    "start": "274740",
    "end": "277199"
  },
  {
    "text": "where if we want to evaluate an",
    "start": "277199",
    "end": "278940"
  },
  {
    "text": "expression that makes a function call",
    "start": "278940",
    "end": "280199"
  },
  {
    "text": "like sum of squares three and four we",
    "start": "280199",
    "end": "282240"
  },
  {
    "text": "can replace the function call with the",
    "start": "282240",
    "end": "283979"
  },
  {
    "text": "function body where the but with the",
    "start": "283979",
    "end": "286259"
  },
  {
    "text": "formal parameters replaced by the actual",
    "start": "286259",
    "end": "288180"
  },
  {
    "text": "parameters we can do this again for any",
    "start": "288180",
    "end": "290160"
  },
  {
    "text": "other function calls and we can evaluate",
    "start": "290160",
    "end": "292199"
  },
  {
    "text": "the arithmetic as we normally would okay",
    "start": "292199",
    "end": "294540"
  },
  {
    "text": "and so we're able to proceed through",
    "start": "294540",
    "end": "296820"
  },
  {
    "text": "this program and understand its",
    "start": "296820",
    "end": "298800"
  },
  {
    "text": "evaluation as it goes and we can",
    "start": "298800",
    "end": "300479"
  },
  {
    "text": "visualize it in this way we can get",
    "start": "300479",
    "end": "302580"
  },
  {
    "text": "students to write it down and so if",
    "start": "302580",
    "end": "304139"
  },
  {
    "text": "they're having trouble understanding how",
    "start": "304139",
    "end": "305460"
  },
  {
    "text": "a program executes we can sit down and",
    "start": "305460",
    "end": "307680"
  },
  {
    "text": "say all right let's substitute this out",
    "start": "307680",
    "end": "309120"
  },
  {
    "text": "let's figure it out and this is an",
    "start": "309120",
    "end": "311040"
  },
  {
    "text": "incredible model by which to do that",
    "start": "311040",
    "end": "313620"
  },
  {
    "text": "um compared to say an imperative model",
    "start": "313620",
    "end": "315060"
  },
  {
    "text": "where you sort of say all right create a",
    "start": "315060",
    "end": "317160"
  },
  {
    "text": "box in your mind for every variable and",
    "start": "317160",
    "end": "318960"
  },
  {
    "text": "then we're going to get into the loop",
    "start": "318960",
    "end": "320280"
  },
  {
    "text": "and we're going to figure out where the",
    "start": "320280",
    "end": "321240"
  },
  {
    "text": "loop condition is still true that's a",
    "start": "321240",
    "end": "322919"
  },
  {
    "text": "much harder model in fact later in sicp",
    "start": "322919",
    "end": "325199"
  },
  {
    "text": "they introduce assignment and then they",
    "start": "325199",
    "end": "328380"
  },
  {
    "text": "have to teach you a much more difficult",
    "start": "328380",
    "end": "329759"
  },
  {
    "text": "mental model than the substitution model",
    "start": "329759",
    "end": "331380"
  },
  {
    "text": "and they generally spend a lot of time",
    "start": "331380",
    "end": "333419"
  },
  {
    "text": "apologizing for it",
    "start": "333419",
    "end": "335460"
  },
  {
    "text": "um",
    "start": "335460",
    "end": "336900"
  },
  {
    "text": "so a substitution model is a really",
    "start": "336900",
    "end": "339479"
  },
  {
    "text": "powerful teaching tool I think",
    "start": "339479",
    "end": "341820"
  },
  {
    "text": "and what's incredible about it is even",
    "start": "341820",
    "end": "343620"
  },
  {
    "text": "in this first lecture",
    "start": "343620",
    "end": "345720"
  },
  {
    "text": "we the substitution model actually gives",
    "start": "345720",
    "end": "348539"
  },
  {
    "text": "us a sort of really informal albeit but",
    "start": "348539",
    "end": "351840"
  },
  {
    "text": "an actual notion of complexity we could",
    "start": "351840",
    "end": "355680"
  },
  {
    "text": "look at the shape",
    "start": "355680",
    "end": "357060"
  },
  {
    "text": "of the substitution model evaluation of",
    "start": "357060",
    "end": "359220"
  },
  {
    "text": "this expression and we can say huh as we",
    "start": "359220",
    "end": "361620"
  },
  {
    "text": "get further and further in we go further",
    "start": "361620",
    "end": "363300"
  },
  {
    "text": "and further out to the right do you see",
    "start": "363300",
    "end": "364740"
  },
  {
    "text": "how it gets wider and then it comes back",
    "start": "364740",
    "end": "366180"
  },
  {
    "text": "in",
    "start": "366180",
    "end": "367500"
  },
  {
    "text": "this is roughly corresponds to the space",
    "start": "367500",
    "end": "370560"
  },
  {
    "text": "usage of the program okay the further to",
    "start": "370560",
    "end": "373020"
  },
  {
    "text": "the right we go the more space we're",
    "start": "373020",
    "end": "374460"
  },
  {
    "text": "using",
    "start": "374460",
    "end": "375479"
  },
  {
    "text": "and the further down the page we go the",
    "start": "375479",
    "end": "377580"
  },
  {
    "text": "more time we're using this is very",
    "start": "377580",
    "end": "379800"
  },
  {
    "text": "informal but this just gets students",
    "start": "379800",
    "end": "382080"
  },
  {
    "text": "right from the beginning thinking about",
    "start": "382080",
    "end": "383520"
  },
  {
    "text": "computers as having resources like time",
    "start": "383520",
    "end": "385560"
  },
  {
    "text": "and space are things I will have to",
    "start": "385560",
    "end": "386759"
  },
  {
    "text": "think about they cover complexity in a",
    "start": "386759",
    "end": "388860"
  },
  {
    "text": "more formal way later but just getting",
    "start": "388860",
    "end": "390600"
  },
  {
    "text": "this idea across really early I think is",
    "start": "390600",
    "end": "392340"
  },
  {
    "text": "helpful",
    "start": "392340",
    "end": "394699"
  },
  {
    "text": "and they're able to cover an incredible",
    "start": "394800",
    "end": "396419"
  },
  {
    "text": "breadth of content throughout the rest",
    "start": "396419",
    "end": "397680"
  },
  {
    "text": "of the book so they talk about symbolic",
    "start": "397680",
    "end": "400919"
  },
  {
    "text": "computation with quotations and",
    "start": "400919",
    "end": "402600"
  },
  {
    "text": "quasi-quotations and things we Define",
    "start": "402600",
    "end": "404340"
  },
  {
    "text": "interpreters we Implement logic",
    "start": "404340",
    "end": "406919"
  },
  {
    "text": "programming by modifying scheme itself",
    "start": "406919",
    "end": "408960"
  },
  {
    "text": "and it's just I think of the book as",
    "start": "408960",
    "end": "411300"
  },
  {
    "text": "like this tasting plate of computer",
    "start": "411300",
    "end": "412860"
  },
  {
    "text": "science",
    "start": "412860",
    "end": "413940"
  },
  {
    "text": "it's just sort of got a little bit of",
    "start": "413940",
    "end": "415620"
  },
  {
    "text": "everything okay",
    "start": "415620",
    "end": "417780"
  },
  {
    "text": "but it's not all smiles and sunshine",
    "start": "417780",
    "end": "420720"
  },
  {
    "text": "so",
    "start": "420720",
    "end": "421919"
  },
  {
    "text": "um in 1987 Professor Phil wadler",
    "start": "421919",
    "end": "426319"
  },
  {
    "text": "made some comments about how we ought to",
    "start": "426960",
    "end": "429240"
  },
  {
    "text": "use Haskell or something like it",
    "start": "429240",
    "end": "432479"
  },
  {
    "text": "as he did so um",
    "start": "432479",
    "end": "434759"
  },
  {
    "text": "wardler argued that the content of sicp",
    "start": "434759",
    "end": "437039"
  },
  {
    "text": "please correct me if I uh say anything",
    "start": "437039",
    "end": "439199"
  },
  {
    "text": "wrong Phil but",
    "start": "439199",
    "end": "440699"
  },
  {
    "text": "I will yeah",
    "start": "440699",
    "end": "442440"
  },
  {
    "text": "the content of sicp is excellent but it",
    "start": "442440",
    "end": "445800"
  },
  {
    "text": "would be easier to teach if we used a",
    "start": "445800",
    "end": "447720"
  },
  {
    "text": "strongly statically typed lazy",
    "start": "447720",
    "end": "449340"
  },
  {
    "text": "functional programming language now at",
    "start": "449340",
    "end": "451259"
  },
  {
    "text": "the time they were talking about KRC and",
    "start": "451259",
    "end": "453240"
  },
  {
    "text": "Miranda those were the sort of popular",
    "start": "453240",
    "end": "456360"
  },
  {
    "text": "strongly statically type lazy functional",
    "start": "456360",
    "end": "458460"
  },
  {
    "text": "programming languages at the time but",
    "start": "458460",
    "end": "460139"
  },
  {
    "text": "I'm going to talk about Haskell because",
    "start": "460139",
    "end": "461400"
  },
  {
    "text": "that's the popular strongly statically",
    "start": "461400",
    "end": "463139"
  },
  {
    "text": "typed lazy functional programming",
    "start": "463139",
    "end": "464400"
  },
  {
    "text": "language today for some definition of",
    "start": "464400",
    "end": "466259"
  },
  {
    "text": "popular",
    "start": "466259",
    "end": "468440"
  },
  {
    "text": "and there are some real advantages to",
    "start": "469380",
    "end": "471240"
  },
  {
    "text": "this so we have things like data types",
    "start": "471240",
    "end": "473460"
  },
  {
    "text": "so this is a data type definition for a",
    "start": "473460",
    "end": "475860"
  },
  {
    "text": "list and it says a list is either nil or",
    "start": "475860",
    "end": "478740"
  },
  {
    "text": "it's cons right and if it's cons it's",
    "start": "478740",
    "end": "480300"
  },
  {
    "text": "got two things an A and A list of A's",
    "start": "480300",
    "end": "483060"
  },
  {
    "text": "okay so we actually get to look at what",
    "start": "483060",
    "end": "484800"
  },
  {
    "text": "the definition of a list is instruction",
    "start": "484800",
    "end": "486840"
  },
  {
    "text": "interpretation there's a paragraph with",
    "start": "486840",
    "end": "488759"
  },
  {
    "text": "a with effectively a comment that says a",
    "start": "488759",
    "end": "491580"
  },
  {
    "text": "list is a chain of concerts that ends in",
    "start": "491580",
    "end": "493199"
  },
  {
    "text": "the empty list right and but you never",
    "start": "493199",
    "end": "495300"
  },
  {
    "text": "actually get that as like a construct in",
    "start": "495300",
    "end": "496979"
  },
  {
    "text": "your language it's sort of in this meta",
    "start": "496979",
    "end": "499259"
  },
  {
    "text": "sort of comment based language but the",
    "start": "499259",
    "end": "502319"
  },
  {
    "text": "really incredible thing about this is",
    "start": "502319",
    "end": "503699"
  },
  {
    "text": "that because these languages or I'm",
    "start": "503699",
    "end": "505199"
  },
  {
    "text": "going to talk about Haskell but Phil was",
    "start": "505199",
    "end": "506759"
  },
  {
    "text": "talking about Miranda",
    "start": "506759",
    "end": "508220"
  },
  {
    "text": "but because languages like Haskell have",
    "start": "508220",
    "end": "510539"
  },
  {
    "text": "pattern matching this definition",
    "start": "510539",
    "end": "512159"
  },
  {
    "text": "actually tells us how we work with the",
    "start": "512159",
    "end": "514320"
  },
  {
    "text": "data",
    "start": "514320",
    "end": "515219"
  },
  {
    "text": "so here's a function that given a list",
    "start": "515219",
    "end": "517800"
  },
  {
    "text": "of numbers will compute their sum and",
    "start": "517800",
    "end": "519959"
  },
  {
    "text": "this one's in scheme and it says it",
    "start": "519959",
    "end": "521940"
  },
  {
    "text": "basically says this we get our items we",
    "start": "521940",
    "end": "525180"
  },
  {
    "text": "ask are you the empty list and if the",
    "start": "525180",
    "end": "527700"
  },
  {
    "text": "answer is yes the sum is zero if the",
    "start": "527700",
    "end": "529920"
  },
  {
    "text": "answer is no we pull the head out and we",
    "start": "529920",
    "end": "532019"
  },
  {
    "text": "pull the tail out we take the sum of the",
    "start": "532019",
    "end": "533880"
  },
  {
    "text": "tail and we add those two things",
    "start": "533880",
    "end": "536279"
  },
  {
    "text": "okay",
    "start": "536279",
    "end": "537600"
  },
  {
    "text": "writing this requires remembering an",
    "start": "537600",
    "end": "539580"
  },
  {
    "text": "awful lot about the structure of lists",
    "start": "539580",
    "end": "541200"
  },
  {
    "text": "and reading it as well so we ask with a",
    "start": "541200",
    "end": "544200"
  },
  {
    "text": "predicate are you the empty list and",
    "start": "544200",
    "end": "546959"
  },
  {
    "text": "then if that predicate returns false we",
    "start": "546959",
    "end": "549000"
  },
  {
    "text": "just start pulling out the head and the",
    "start": "549000",
    "end": "550380"
  },
  {
    "text": "tail right",
    "start": "550380",
    "end": "552660"
  },
  {
    "text": "what if it wasn't a list",
    "start": "552660",
    "end": "556100"
  },
  {
    "text": "um nothing says it would it wasn't a",
    "start": "556320",
    "end": "558360"
  },
  {
    "text": "list but also like",
    "start": "558360",
    "end": "561420"
  },
  {
    "text": "I the the definition of list isn't",
    "start": "561420",
    "end": "564000"
  },
  {
    "text": "really sort of talked about on this",
    "start": "564000",
    "end": "565920"
  },
  {
    "text": "slide very much like we have to we're in",
    "start": "565920",
    "end": "568800"
  },
  {
    "text": "the else case we have to go in for a",
    "start": "568800",
    "end": "570600"
  },
  {
    "text": "while and then say Oh there's the car",
    "start": "570600",
    "end": "571860"
  },
  {
    "text": "and there's the cutter that means head",
    "start": "571860",
    "end": "573360"
  },
  {
    "text": "and tail and lisp",
    "start": "573360",
    "end": "575279"
  },
  {
    "text": "um",
    "start": "575279",
    "end": "577260"
  },
  {
    "text": "but what's beautiful about pattern",
    "start": "577260",
    "end": "579000"
  },
  {
    "text": "matching is we can see these are the",
    "start": "579000",
    "end": "581940"
  },
  {
    "text": "only two cases that a list can be okay",
    "start": "581940",
    "end": "584459"
  },
  {
    "text": "it's either nil or it's cons and if it",
    "start": "584459",
    "end": "586560"
  },
  {
    "text": "if it's cons it has two things in it",
    "start": "586560",
    "end": "589320"
  },
  {
    "text": "when I'm programming let alone someone",
    "start": "589320",
    "end": "591420"
  },
  {
    "text": "who's just learning how to program for",
    "start": "591420",
    "end": "592740"
  },
  {
    "text": "the first time but when I'm programming",
    "start": "592740",
    "end": "594420"
  },
  {
    "text": "I'm always worried that I'm going to",
    "start": "594420",
    "end": "596160"
  },
  {
    "text": "miss a Constructor like oh in my pattern",
    "start": "596160",
    "end": "598800"
  },
  {
    "text": "match did I get all the constructors or",
    "start": "598800",
    "end": "600779"
  },
  {
    "text": "when I used the can when I pulled the",
    "start": "600779",
    "end": "603060"
  },
  {
    "text": "stuff out of the Constructor did like I",
    "start": "603060",
    "end": "604860"
  },
  {
    "text": "pull out everything that was in there",
    "start": "604860",
    "end": "606060"
  },
  {
    "text": "and the great thing about strongly",
    "start": "606060",
    "end": "607860"
  },
  {
    "text": "statically typed languages is they will",
    "start": "607860",
    "end": "609600"
  },
  {
    "text": "tell me right if I missed a case in my",
    "start": "609600",
    "end": "612180"
  },
  {
    "text": "pattern match",
    "start": "612180",
    "end": "613200"
  },
  {
    "text": "here's the Haskell if I miss a case in",
    "start": "613200",
    "end": "615300"
  },
  {
    "text": "my pattern match it will tell me or if I",
    "start": "615300",
    "end": "617820"
  },
  {
    "text": "forget to pull everything out of the",
    "start": "617820",
    "end": "619080"
  },
  {
    "text": "list it will tell me",
    "start": "619080",
    "end": "621060"
  },
  {
    "text": "okay so you get this this kind of",
    "start": "621060",
    "end": "623279"
  },
  {
    "text": "helpful feedback as you program due to",
    "start": "623279",
    "end": "625080"
  },
  {
    "text": "the strong static type system",
    "start": "625080",
    "end": "627019"
  },
  {
    "text": "whereas the feedback is not also not",
    "start": "627019",
    "end": "629459"
  },
  {
    "text": "always so good in lisp particularly if",
    "start": "629459",
    "end": "631680"
  },
  {
    "text": "you pass a thing that isn't a list it",
    "start": "631680",
    "end": "633360"
  },
  {
    "text": "will try to take the head of it and it",
    "start": "633360",
    "end": "635459"
  },
  {
    "text": "won't go so well",
    "start": "635459",
    "end": "638060"
  },
  {
    "text": "um",
    "start": "638160",
    "end": "640019"
  },
  {
    "text": "the other excellent thing about strongly",
    "start": "640019",
    "end": "642060"
  },
  {
    "text": "statically typed lazy functional",
    "start": "642060",
    "end": "643560"
  },
  {
    "text": "programming languages is that they're",
    "start": "643560",
    "end": "644940"
  },
  {
    "text": "lazy",
    "start": "644940",
    "end": "646260"
  },
  {
    "text": "all right so there's a bit in sicp",
    "start": "646260",
    "end": "651620"
  },
  {
    "text": "where they say",
    "start": "651959",
    "end": "653880"
  },
  {
    "text": "they sort of Define uh normal order",
    "start": "653880",
    "end": "656519"
  },
  {
    "text": "evaluation and applicative Order",
    "start": "656519",
    "end": "657720"
  },
  {
    "text": "evaluation and then they say and scheme",
    "start": "657720",
    "end": "659880"
  },
  {
    "text": "uses applicative order evaluation and",
    "start": "659880",
    "end": "661740"
  },
  {
    "text": "then they have a really mean exercise",
    "start": "661740",
    "end": "663060"
  },
  {
    "text": "where they Define if as a function and",
    "start": "663060",
    "end": "665760"
  },
  {
    "text": "the exercise is why doesn't that work",
    "start": "665760",
    "end": "669959"
  },
  {
    "text": "okay and waddler in his paper commented",
    "start": "669959",
    "end": "672300"
  },
  {
    "text": "that most of the students like don't",
    "start": "672300",
    "end": "675540"
  },
  {
    "text": "understand why like I think you need to",
    "start": "675540",
    "end": "678060"
  },
  {
    "text": "really work with both sort of normal",
    "start": "678060",
    "end": "680459"
  },
  {
    "text": "order languages and applicative Order",
    "start": "680459",
    "end": "682200"
  },
  {
    "text": "languages to kind of be able to build a",
    "start": "682200",
    "end": "684060"
  },
  {
    "text": "mental model such that this question",
    "start": "684060",
    "end": "686100"
  },
  {
    "text": "makes any sense",
    "start": "686100",
    "end": "687779"
  },
  {
    "text": "the reason it doesn't work by the way is",
    "start": "687779",
    "end": "689640"
  },
  {
    "text": "because with if as a function we",
    "start": "689640",
    "end": "691560"
  },
  {
    "text": "evaluate both the then clause and the",
    "start": "691560",
    "end": "693240"
  },
  {
    "text": "else Clause before we even get around to",
    "start": "693240",
    "end": "694980"
  },
  {
    "text": "looking at the F to make a decision",
    "start": "694980",
    "end": "696180"
  },
  {
    "text": "between them so if we write a recursive",
    "start": "696180",
    "end": "698220"
  },
  {
    "text": "function using this if then it will",
    "start": "698220",
    "end": "700800"
  },
  {
    "text": "always run forever",
    "start": "700800",
    "end": "703560"
  },
  {
    "text": "when we're using a language with lazy",
    "start": "703560",
    "end": "705240"
  },
  {
    "text": "evaluation this quite simply isn't a",
    "start": "705240",
    "end": "707700"
  },
  {
    "text": "problem you can write if as a function",
    "start": "707700",
    "end": "709740"
  },
  {
    "text": "you may even choose to teach it that way",
    "start": "709740",
    "end": "712680"
  },
  {
    "text": "all right so rather than having a really",
    "start": "712680",
    "end": "714720"
  },
  {
    "text": "mean exercise that says you should think",
    "start": "714720",
    "end": "716459"
  },
  {
    "text": "really carefully about the order things",
    "start": "716459",
    "end": "717839"
  },
  {
    "text": "are evaluated just like don't",
    "start": "717839",
    "end": "720600"
  },
  {
    "text": "all right",
    "start": "720600",
    "end": "723139"
  },
  {
    "text": "um",
    "start": "724860",
    "end": "725940"
  },
  {
    "text": "yeah so laziness is really cool for this",
    "start": "725940",
    "end": "728820"
  },
  {
    "text": "reason so this gets back to what I was",
    "start": "728820",
    "end": "730560"
  },
  {
    "text": "talking about with the substitution",
    "start": "730560",
    "end": "731760"
  },
  {
    "text": "model so the substitution model actually",
    "start": "731760",
    "end": "734880"
  },
  {
    "text": "can lead you to lies if you're not",
    "start": "734880",
    "end": "736860"
  },
  {
    "text": "extremely careful unless your language",
    "start": "736860",
    "end": "738720"
  },
  {
    "text": "is lazy in which case it will always",
    "start": "738720",
    "end": "740220"
  },
  {
    "text": "give you the right thing like it will",
    "start": "740220",
    "end": "741899"
  },
  {
    "text": "always do what you expect substitution",
    "start": "741899",
    "end": "743899"
  },
  {
    "text": "properly works when you're in a lazy",
    "start": "743899",
    "end": "746880"
  },
  {
    "text": "language",
    "start": "746880",
    "end": "749060"
  },
  {
    "text": "wasn't the only one to suggest",
    "start": "749760",
    "end": "751680"
  },
  {
    "text": "improvements to sicp there were also a",
    "start": "751680",
    "end": "754380"
  },
  {
    "text": "group of academics who wrote a paper",
    "start": "754380",
    "end": "755700"
  },
  {
    "text": "rather cheekily titled structure and",
    "start": "755700",
    "end": "757620"
  },
  {
    "text": "interpretation of the computer science",
    "start": "757620",
    "end": "759000"
  },
  {
    "text": "curriculum and they and then this was",
    "start": "759000",
    "end": "761640"
  },
  {
    "text": "way later in like the 2000s or 2001 I",
    "start": "761640",
    "end": "764399"
  },
  {
    "text": "think and they said here's what we think",
    "start": "764399",
    "end": "766760"
  },
  {
    "text": "a good introductory Computing course",
    "start": "766760",
    "end": "769320"
  },
  {
    "text": "would be like his what it would teach",
    "start": "769320",
    "end": "770940"
  },
  {
    "text": "here's how it would teach it and then",
    "start": "770940",
    "end": "772380"
  },
  {
    "text": "they analyze sicp according to this",
    "start": "772380",
    "end": "774120"
  },
  {
    "text": "framework",
    "start": "774120",
    "end": "775260"
  },
  {
    "text": "and they have some problems so one of",
    "start": "775260",
    "end": "778500"
  },
  {
    "text": "the problems is",
    "start": "778500",
    "end": "780060"
  },
  {
    "text": "nearly all the examples in sicp are",
    "start": "780060",
    "end": "782279"
  },
  {
    "text": "drawn from extremely technical domains",
    "start": "782279",
    "end": "784079"
  },
  {
    "text": "so I said we learned sort of symbolic",
    "start": "784079",
    "end": "786480"
  },
  {
    "text": "computation with quotation we do that by",
    "start": "786480",
    "end": "788820"
  },
  {
    "text": "writing a derivative program",
    "start": "788820",
    "end": "791160"
  },
  {
    "text": "um and I personally would like to be",
    "start": "791160",
    "end": "792540"
  },
  {
    "text": "able to teach programming to people who",
    "start": "792540",
    "end": "794100"
  },
  {
    "text": "don't know calculus at all I think",
    "start": "794100",
    "end": "796320"
  },
  {
    "text": "that's a reasonable goal another example",
    "start": "796320",
    "end": "798779"
  },
  {
    "text": "of a problem domain that is sort of this",
    "start": "798779",
    "end": "801240"
  },
  {
    "text": "digital circuit design now in all",
    "start": "801240",
    "end": "803519"
  },
  {
    "text": "fairness structured interpretation in",
    "start": "803519",
    "end": "805620"
  },
  {
    "text": "1985 was mostly being taught to",
    "start": "805620",
    "end": "807899"
  },
  {
    "text": "electrical engineering students at MIT",
    "start": "807899",
    "end": "810139"
  },
  {
    "text": "right these people were across calculus",
    "start": "810139",
    "end": "813300"
  },
  {
    "text": "and and probably digital circuit design",
    "start": "813300",
    "end": "815220"
  },
  {
    "text": "and all these sorts of things so in the",
    "start": "815220",
    "end": "817079"
  },
  {
    "text": "context in which the book was published",
    "start": "817079",
    "end": "818579"
  },
  {
    "text": "this isn't a problem but in the context",
    "start": "818579",
    "end": "821040"
  },
  {
    "text": "I'm interested in it is",
    "start": "821040",
    "end": "824040"
  },
  {
    "text": "um but they're more fundamental",
    "start": "824040",
    "end": "825959"
  },
  {
    "text": "criticism of sicp and in this case",
    "start": "825959",
    "end": "828060"
  },
  {
    "text": "they're actually quoting someone else",
    "start": "828060",
    "end": "829320"
  },
  {
    "text": "they're quoting um Jackson and and",
    "start": "829320",
    "end": "831839"
  },
  {
    "text": "Chopin I suppose the pronunciation is I",
    "start": "831839",
    "end": "834360"
  },
  {
    "text": "hope",
    "start": "834360",
    "end": "835079"
  },
  {
    "text": "um who late in the course's life taught",
    "start": "835079",
    "end": "837420"
  },
  {
    "text": "sicp and they sort of said",
    "start": "837420",
    "end": "840000"
  },
  {
    "text": "we have come to the Viewpoint that uh",
    "start": "840000",
    "end": "843000"
  },
  {
    "text": "the first course should focus really on",
    "start": "843000",
    "end": "845579"
  },
  {
    "text": "basic Notions of modularity",
    "start": "845579",
    "end": "847100"
  },
  {
    "text": "specification and data abstraction and",
    "start": "847100",
    "end": "849839"
  },
  {
    "text": "not",
    "start": "849839",
    "end": "850980"
  },
  {
    "text": "um",
    "start": "850980",
    "end": "851820"
  },
  {
    "text": "lots of interesting little bits of",
    "start": "851820",
    "end": "853620"
  },
  {
    "text": "computer science",
    "start": "853620",
    "end": "855600"
  },
  {
    "text": "okay and I think this is a really good",
    "start": "855600",
    "end": "857880"
  },
  {
    "text": "paper if you're interested in how things",
    "start": "857880",
    "end": "859139"
  },
  {
    "text": "are taught",
    "start": "859139",
    "end": "860459"
  },
  {
    "text": "and so they actually sort of said we'll",
    "start": "860459",
    "end": "864000"
  },
  {
    "text": "write our own purple programming",
    "start": "864000",
    "end": "866399"
  },
  {
    "text": "textbook",
    "start": "866399",
    "end": "868880"
  },
  {
    "text": "and so they really and so they released",
    "start": "869040",
    "end": "870779"
  },
  {
    "text": "how to design programs they actually",
    "start": "870779",
    "end": "872100"
  },
  {
    "text": "released it before they wrote the paper",
    "start": "872100",
    "end": "873300"
  },
  {
    "text": "but The Narrative of the talk doesn't",
    "start": "873300",
    "end": "874560"
  },
  {
    "text": "work if I present it in that way",
    "start": "874560",
    "end": "876360"
  },
  {
    "text": "uh",
    "start": "876360",
    "end": "878579"
  },
  {
    "text": "so they wrote their own purple",
    "start": "878579",
    "end": "879720"
  },
  {
    "text": "programming textbook and I think it's a",
    "start": "879720",
    "end": "882060"
  },
  {
    "text": "really excellent textbook so they still",
    "start": "882060",
    "end": "884160"
  },
  {
    "text": "used scheme and they used scheme in",
    "start": "884160",
    "end": "886920"
  },
  {
    "text": "their own little IDE so this is an IDE",
    "start": "886920",
    "end": "889019"
  },
  {
    "text": "that sort of they tell you to pick up in",
    "start": "889019",
    "end": "890639"
  },
  {
    "text": "the textbook",
    "start": "890639",
    "end": "892019"
  },
  {
    "text": "um",
    "start": "892019",
    "end": "892620"
  },
  {
    "text": "and the IDE is very simple it's just got",
    "start": "892620",
    "end": "895260"
  },
  {
    "text": "this code window and then it's got this",
    "start": "895260",
    "end": "897060"
  },
  {
    "text": "little Rebel window which encourages",
    "start": "897060",
    "end": "898800"
  },
  {
    "text": "like a playful interactive style of",
    "start": "898800",
    "end": "900720"
  },
  {
    "text": "writing programs",
    "start": "900720",
    "end": "902220"
  },
  {
    "text": "the other really excellent thing they do",
    "start": "902220",
    "end": "903899"
  },
  {
    "text": "is they use a",
    "start": "903899",
    "end": "906000"
  },
  {
    "text": "staged approach to scheme where as you",
    "start": "906000",
    "end": "908760"
  },
  {
    "text": "progress through the book",
    "start": "908760",
    "end": "910560"
  },
  {
    "text": "more and more language constructs and",
    "start": "910560",
    "end": "913680"
  },
  {
    "text": "and Library functions become available",
    "start": "913680",
    "end": "916019"
  },
  {
    "text": "to you okay so as you grow the language",
    "start": "916019",
    "end": "918839"
  },
  {
    "text": "grows with you and you've always got",
    "start": "918839",
    "end": "920399"
  },
  {
    "text": "just enough stuff",
    "start": "920399",
    "end": "922920"
  },
  {
    "text": "um and what and the the cool thing about",
    "start": "922920",
    "end": "925920"
  },
  {
    "text": "that as well even cooler is as you grow",
    "start": "925920",
    "end": "929279"
  },
  {
    "text": "and the language grows with you the IDE",
    "start": "929279",
    "end": "931560"
  },
  {
    "text": "grows with you more and more",
    "start": "931560",
    "end": "933660"
  },
  {
    "text": "functionality from the IDE is unlocked",
    "start": "933660",
    "end": "935579"
  },
  {
    "text": "as you progress so",
    "start": "935579",
    "end": "938220"
  },
  {
    "text": "um when they introduce assignment in the",
    "start": "938220",
    "end": "940620"
  },
  {
    "text": "most advanced version of the language so",
    "start": "940620",
    "end": "943320"
  },
  {
    "text": "sorry originally you have this little",
    "start": "943320",
    "end": "945839"
  },
  {
    "text": "um this little substitution evaluator",
    "start": "945839",
    "end": "948180"
  },
  {
    "text": "where you can evaluate your expression",
    "start": "948180",
    "end": "949560"
  },
  {
    "text": "step by step forwards and backwards and",
    "start": "949560",
    "end": "951180"
  },
  {
    "text": "just kind of watch how they work okay",
    "start": "951180",
    "end": "953160"
  },
  {
    "text": "it's really great then once they",
    "start": "953160",
    "end": "954839"
  },
  {
    "text": "introduce variable assignment right at",
    "start": "954839",
    "end": "956579"
  },
  {
    "text": "the end of the course",
    "start": "956579",
    "end": "957839"
  },
  {
    "text": "you can't do that anymore it doesn't",
    "start": "957839",
    "end": "959760"
  },
  {
    "text": "work so they replace it with this much",
    "start": "959760",
    "end": "961980"
  },
  {
    "text": "more complicated debugger that will tell",
    "start": "961980",
    "end": "963540"
  },
  {
    "text": "you about the stack and the state of all",
    "start": "963540",
    "end": "965100"
  },
  {
    "text": "your variables okay and so you use this",
    "start": "965100",
    "end": "967139"
  },
  {
    "text": "debugger instead and so as you learn",
    "start": "967139",
    "end": "969420"
  },
  {
    "text": "more you kind of get tools that are",
    "start": "969420",
    "end": "972380"
  },
  {
    "text": "appropriate to what you're learning",
    "start": "972380",
    "end": "975720"
  },
  {
    "text": "they also seem to agree with waddler",
    "start": "975720",
    "end": "978180"
  },
  {
    "text": "somewhat on types in their version of",
    "start": "978180",
    "end": "981120"
  },
  {
    "text": "scheme even in the most advanced form of",
    "start": "981120",
    "end": "982980"
  },
  {
    "text": "it cons the second argument to cons must",
    "start": "982980",
    "end": "985740"
  },
  {
    "text": "be a list and if you and you get a type",
    "start": "985740",
    "end": "988019"
  },
  {
    "text": "error if you don't put a list there",
    "start": "988019",
    "end": "991019"
  },
  {
    "text": "um so this is totally against every",
    "start": "991019",
    "end": "993779"
  },
  {
    "text": "other scheme implementation on the",
    "start": "993779",
    "end": "995160"
  },
  {
    "text": "planet I think",
    "start": "995160",
    "end": "996660"
  },
  {
    "text": "um but I think it's better I think if",
    "start": "996660",
    "end": "998699"
  },
  {
    "text": "you're not going to teach a strongly",
    "start": "998699",
    "end": "1000139"
  },
  {
    "text": "statically type programming language",
    "start": "1000139",
    "end": "1001399"
  },
  {
    "text": "well I suppose the next best thing might",
    "start": "1001399",
    "end": "1003500"
  },
  {
    "text": "be a strongly dynamically type",
    "start": "1003500",
    "end": "1005000"
  },
  {
    "text": "programming language",
    "start": "1005000",
    "end": "1007459"
  },
  {
    "text": "um they also have the best exercises",
    "start": "1007459",
    "end": "1010160"
  },
  {
    "text": "I've ever seen things like look up the",
    "start": "1010160",
    "end": "1012800"
  },
  {
    "text": "documentation",
    "start": "1012800",
    "end": "1015199"
  },
  {
    "text": "I'd just like to remind everyone this is",
    "start": "1015199",
    "end": "1016880"
  },
  {
    "text": "a course about teaching programming",
    "start": "1016880",
    "end": "1019220"
  },
  {
    "text": "right so read the docs",
    "start": "1019220",
    "end": "1022279"
  },
  {
    "text": "this is usually not covered",
    "start": "1022279",
    "end": "1024740"
  },
  {
    "text": "they also have these other excellent",
    "start": "1024740",
    "end": "1026540"
  },
  {
    "text": "exercises like um past something of the",
    "start": "1026540",
    "end": "1030079"
  },
  {
    "text": "wrong type to the function and see what",
    "start": "1030079",
    "end": "1031938"
  },
  {
    "text": "happens",
    "start": "1031939",
    "end": "1033260"
  },
  {
    "text": "okay that's an excellent exercise",
    "start": "1033260",
    "end": "1035600"
  },
  {
    "text": "because we need to learn to work with",
    "start": "1035600",
    "end": "1038360"
  },
  {
    "text": "error messages okay they're going to",
    "start": "1038360",
    "end": "1041058"
  },
  {
    "text": "occur and we need to be able to read",
    "start": "1041059",
    "end": "1042438"
  },
  {
    "text": "them I'd prefer them to be a compile",
    "start": "1042439",
    "end": "1043819"
  },
  {
    "text": "time but we need to be able to work with",
    "start": "1043819",
    "end": "1045740"
  },
  {
    "text": "error messages to kind of get towards a",
    "start": "1045740",
    "end": "1047900"
  },
  {
    "text": "solution",
    "start": "1047900",
    "end": "1049040"
  },
  {
    "text": "and I think having an exercise like this",
    "start": "1049040",
    "end": "1051860"
  },
  {
    "text": "sort of says don't be afraid of error",
    "start": "1051860",
    "end": "1053960"
  },
  {
    "text": "messages in fact try to sort of probe",
    "start": "1053960",
    "end": "1056480"
  },
  {
    "text": "the code and figure out what the error",
    "start": "1056480",
    "end": "1057679"
  },
  {
    "text": "messages might be",
    "start": "1057679",
    "end": "1060340"
  },
  {
    "text": "they also have these things you don't",
    "start": "1060440",
    "end": "1061880"
  },
  {
    "text": "have to read all this and I won't read",
    "start": "1061880",
    "end": "1062960"
  },
  {
    "text": "it to you but they also have these",
    "start": "1062960",
    "end": "1064160"
  },
  {
    "text": "things called design recipes where they",
    "start": "1064160",
    "end": "1066620"
  },
  {
    "text": "teach you they sort of have this",
    "start": "1066620",
    "end": "1067880"
  },
  {
    "text": "step-by-step process for things like how",
    "start": "1067880",
    "end": "1070820"
  },
  {
    "text": "to write a function or like how to write",
    "start": "1070820",
    "end": "1073700"
  },
  {
    "text": "a batch program or an interactive",
    "start": "1073700",
    "end": "1075380"
  },
  {
    "text": "program",
    "start": "1075380",
    "end": "1076400"
  },
  {
    "text": "they actually teach you this kind of",
    "start": "1076400",
    "end": "1077780"
  },
  {
    "text": "thing it'll be like step one write down",
    "start": "1077780",
    "end": "1079700"
  },
  {
    "text": "what the function should do step two you",
    "start": "1079700",
    "end": "1082640"
  },
  {
    "text": "know come up with some examples",
    "start": "1082640",
    "end": "1084820"
  },
  {
    "text": "step three look at the input data for",
    "start": "1084820",
    "end": "1087380"
  },
  {
    "text": "the function and then use the template",
    "start": "1087380",
    "end": "1089660"
  },
  {
    "text": "that's that's shaped like that input",
    "start": "1089660",
    "end": "1091100"
  },
  {
    "text": "data it would be a pattern match in a",
    "start": "1091100",
    "end": "1092600"
  },
  {
    "text": "different language",
    "start": "1092600",
    "end": "1093860"
  },
  {
    "text": "and then when you're done writing the",
    "start": "1093860",
    "end": "1095360"
  },
  {
    "text": "function",
    "start": "1095360",
    "end": "1096200"
  },
  {
    "text": "turn you the examples you came up with",
    "start": "1096200",
    "end": "1098240"
  },
  {
    "text": "into executable tests okay so they sort",
    "start": "1098240",
    "end": "1100640"
  },
  {
    "text": "of talk about the full lifetime of of",
    "start": "1100640",
    "end": "1102320"
  },
  {
    "text": "writing a function from figuring out",
    "start": "1102320",
    "end": "1104840"
  },
  {
    "text": "what the function should do through to",
    "start": "1104840",
    "end": "1106580"
  },
  {
    "text": "actually testing it at the end",
    "start": "1106580",
    "end": "1109039"
  },
  {
    "text": "this is like this is really good we",
    "start": "1109039",
    "end": "1111020"
  },
  {
    "text": "should be doing this when we teach",
    "start": "1111020",
    "end": "1112160"
  },
  {
    "text": "programming",
    "start": "1112160",
    "end": "1113840"
  },
  {
    "text": "um they I think they make a comment in",
    "start": "1113840",
    "end": "1115580"
  },
  {
    "text": "their paper something along the lines of",
    "start": "1115580",
    "end": "1117080"
  },
  {
    "text": "in most introductory programming courses",
    "start": "1117080",
    "end": "1119600"
  },
  {
    "text": "they will teach you a programming",
    "start": "1119600",
    "end": "1121460"
  },
  {
    "text": "language and expect you yourself to",
    "start": "1121460",
    "end": "1123320"
  },
  {
    "text": "figure out how to actually go about",
    "start": "1123320",
    "end": "1125059"
  },
  {
    "text": "programming",
    "start": "1125059",
    "end": "1126860"
  },
  {
    "text": "but these guys are just like why don't",
    "start": "1126860",
    "end": "1128480"
  },
  {
    "text": "why don't we teach that bit that's like",
    "start": "1128480",
    "end": "1130280"
  },
  {
    "text": "the actually important bit",
    "start": "1130280",
    "end": "1132620"
  },
  {
    "text": "and I think they do a great job of that",
    "start": "1132620",
    "end": "1135980"
  },
  {
    "text": "so structure and interpretation of",
    "start": "1135980",
    "end": "1137480"
  },
  {
    "text": "computer programs is an incredible",
    "start": "1137480",
    "end": "1139220"
  },
  {
    "text": "starting point",
    "start": "1139220",
    "end": "1141260"
  },
  {
    "text": "um waddler suggested some improvements",
    "start": "1141260",
    "end": "1143480"
  },
  {
    "text": "the how to design programs people",
    "start": "1143480",
    "end": "1145100"
  },
  {
    "text": "suggested some improvements in a",
    "start": "1145100",
    "end": "1146960"
  },
  {
    "text": "completely different direction",
    "start": "1146960",
    "end": "1149000"
  },
  {
    "text": "I want to know what's up here",
    "start": "1149000",
    "end": "1151400"
  },
  {
    "text": "so I'd like to see a course that has the",
    "start": "1151400",
    "end": "1154460"
  },
  {
    "text": "kind of focus on foundational",
    "start": "1154460",
    "end": "1155780"
  },
  {
    "text": "problem-solving techniques that how to",
    "start": "1155780",
    "end": "1157940"
  },
  {
    "text": "design programs had but all the",
    "start": "1157940",
    "end": "1159919"
  },
  {
    "text": "advantages of strongly statically typed",
    "start": "1159919",
    "end": "1161480"
  },
  {
    "text": "lazy functional programming languages",
    "start": "1161480",
    "end": "1162740"
  },
  {
    "text": "that waddler talked about",
    "start": "1162740",
    "end": "1165820"
  },
  {
    "text": "okay",
    "start": "1168020",
    "end": "1169039"
  },
  {
    "text": "I think that would be the best",
    "start": "1169039",
    "end": "1170299"
  },
  {
    "text": "programming introduction ever",
    "start": "1170299",
    "end": "1173620"
  },
  {
    "text": "so I'd like to use something like",
    "start": "1174340",
    "end": "1176240"
  },
  {
    "text": "Haskell but there are some problems with",
    "start": "1176240",
    "end": "1177740"
  },
  {
    "text": "that",
    "start": "1177740",
    "end": "1178460"
  },
  {
    "text": "for example if I type 3 plus false what",
    "start": "1178460",
    "end": "1182059"
  },
  {
    "text": "I want the student to see is an error",
    "start": "1182059",
    "end": "1183740"
  },
  {
    "text": "message that says that can't be done",
    "start": "1183740",
    "end": "1185780"
  },
  {
    "text": "because booleans are not numbers",
    "start": "1185780",
    "end": "1188299"
  },
  {
    "text": "here's the error message now GHC has",
    "start": "1188299",
    "end": "1190460"
  },
  {
    "text": "impeccable excellent error messages",
    "start": "1190460",
    "end": "1192140"
  },
  {
    "text": "here's the error message GHC gives me",
    "start": "1192140",
    "end": "1194299"
  },
  {
    "text": "which says no instance for numb bull",
    "start": "1194299",
    "end": "1197000"
  },
  {
    "text": "now that does say you can't do that",
    "start": "1197000",
    "end": "1199700"
  },
  {
    "text": "because booleans aren't numbers but it",
    "start": "1199700",
    "end": "1201559"
  },
  {
    "text": "says it in a really really haskelly way",
    "start": "1201559",
    "end": "1205779"
  },
  {
    "text": "like I need to know type classes to even",
    "start": "1205880",
    "end": "1208220"
  },
  {
    "text": "attempt to read this error message",
    "start": "1208220",
    "end": "1210440"
  },
  {
    "text": "um but also if I try to if I try to view",
    "start": "1210440",
    "end": "1212660"
  },
  {
    "text": "it if I sort of put myself into a",
    "start": "1212660",
    "end": "1214760"
  },
  {
    "text": "beginner student mindset and I've never",
    "start": "1214760",
    "end": "1216260"
  },
  {
    "text": "learned programming before when I see",
    "start": "1216260",
    "end": "1218059"
  },
  {
    "text": "this error message it says no instance",
    "start": "1218059",
    "end": "1219620"
  },
  {
    "text": "for numb bull I think to myself like oh",
    "start": "1219620",
    "end": "1222860"
  },
  {
    "text": "no instance have I forgot to import",
    "start": "1222860",
    "end": "1225080"
  },
  {
    "text": "something let me check the lecture notes",
    "start": "1225080",
    "end": "1226820"
  },
  {
    "text": "okay and I go off and get distracted",
    "start": "1226820",
    "end": "1228140"
  },
  {
    "text": "with something completely else",
    "start": "1228140",
    "end": "1229940"
  },
  {
    "text": "so I'd really like to have an error",
    "start": "1229940",
    "end": "1231620"
  },
  {
    "text": "message that says you can't do that",
    "start": "1231620",
    "end": "1232640"
  },
  {
    "text": "because booleans aren't numbers and this",
    "start": "1232640",
    "end": "1233960"
  },
  {
    "text": "is just one example but of a bigger",
    "start": "1233960",
    "end": "1236179"
  },
  {
    "text": "problem",
    "start": "1236179",
    "end": "1237440"
  },
  {
    "text": "thankfully as of GHC 8",
    "start": "1237440",
    "end": "1239799"
  },
  {
    "text": "GHC has the capacity for custom type",
    "start": "1239799",
    "end": "1242539"
  },
  {
    "text": "error messages",
    "start": "1242539",
    "end": "1244460"
  },
  {
    "text": "so I can just I can attach a type error",
    "start": "1244460",
    "end": "1247700"
  },
  {
    "text": "message pretty much wherever I like",
    "start": "1247700",
    "end": "1250520"
  },
  {
    "text": "and so if I say three plus false",
    "start": "1250520",
    "end": "1253039"
  },
  {
    "text": "I can make it have an error message that",
    "start": "1253039",
    "end": "1254900"
  },
  {
    "text": "says booleans are not numbers so we",
    "start": "1254900",
    "end": "1256460"
  },
  {
    "text": "cannot add them",
    "start": "1256460",
    "end": "1258380"
  },
  {
    "text": "so if I were going to teach someone",
    "start": "1258380",
    "end": "1260059"
  },
  {
    "text": "programming I would teach them Haskell",
    "start": "1260059",
    "end": "1262760"
  },
  {
    "text": "but it would be a version of Haskell",
    "start": "1262760",
    "end": "1264380"
  },
  {
    "text": "that was full of custom type error",
    "start": "1264380",
    "end": "1266059"
  },
  {
    "text": "messages for things like this and",
    "start": "1266059",
    "end": "1267799"
  },
  {
    "text": "whenever a student made a new mistake",
    "start": "1267799",
    "end": "1269360"
  },
  {
    "text": "that I hadn't even considered I would",
    "start": "1269360",
    "end": "1271100"
  },
  {
    "text": "then be able to add that",
    "start": "1271100",
    "end": "1273559"
  },
  {
    "text": "I would also use because in GHC we can",
    "start": "1273559",
    "end": "1275900"
  },
  {
    "text": "use no no implicit to Prelude and then",
    "start": "1275900",
    "end": "1278299"
  },
  {
    "text": "provide our own Prelude I would give a",
    "start": "1278299",
    "end": "1280340"
  },
  {
    "text": "staged introduction to Haskell by means",
    "start": "1280340",
    "end": "1282620"
  },
  {
    "text": "of a series of preludes okay so you'd",
    "start": "1282620",
    "end": "1285500"
  },
  {
    "text": "start with a Prelude that's very simple",
    "start": "1285500",
    "end": "1286760"
  },
  {
    "text": "like you can only add integers okay and",
    "start": "1286760",
    "end": "1289280"
  },
  {
    "text": "then as you learn more about how School",
    "start": "1289280",
    "end": "1290659"
  },
  {
    "text": "you'd get access to more and more",
    "start": "1290659",
    "end": "1292340"
  },
  {
    "text": "Library functions and they would become",
    "start": "1292340",
    "end": "1293659"
  },
  {
    "text": "more polymorphic and things like this",
    "start": "1293659",
    "end": "1295640"
  },
  {
    "text": "and it would all be full of custom type",
    "start": "1295640",
    "end": "1297620"
  },
  {
    "text": "error messages",
    "start": "1297620",
    "end": "1299960"
  },
  {
    "text": "all right so I'd like to end the talk",
    "start": "1299960",
    "end": "1302600"
  },
  {
    "text": "um with a sort of brief personal",
    "start": "1302600",
    "end": "1304159"
  },
  {
    "text": "anecdote that's sort of my attempt to",
    "start": "1304159",
    "end": "1307280"
  },
  {
    "text": "come up with such a course",
    "start": "1307280",
    "end": "1309320"
  },
  {
    "text": "um",
    "start": "1309320",
    "end": "1309860"
  },
  {
    "text": "so this anecdote when I learned to",
    "start": "1309860",
    "end": "1311480"
  },
  {
    "text": "program I learned at University in the",
    "start": "1311480",
    "end": "1313700"
  },
  {
    "text": "first year first semester course",
    "start": "1313700",
    "end": "1315860"
  },
  {
    "text": "and it was the best educational",
    "start": "1315860",
    "end": "1318080"
  },
  {
    "text": "experience I've ever received probably",
    "start": "1318080",
    "end": "1321020"
  },
  {
    "text": "by far all the lectures were incredibly",
    "start": "1321020",
    "end": "1324260"
  },
  {
    "text": "well presented well put together the",
    "start": "1324260",
    "end": "1326900"
  },
  {
    "text": "ideas were clear the the tutorial",
    "start": "1326900",
    "end": "1329659"
  },
  {
    "text": "exercises were sort of well put together",
    "start": "1329659",
    "end": "1332480"
  },
  {
    "text": "to be challenging but achievable and",
    "start": "1332480",
    "end": "1334820"
  },
  {
    "text": "very well written out so there's no",
    "start": "1334820",
    "end": "1336200"
  },
  {
    "text": "ambiguity what you're being asked to do",
    "start": "1336200",
    "end": "1338240"
  },
  {
    "text": "I was just blown away that education",
    "start": "1338240",
    "end": "1340340"
  },
  {
    "text": "could be done so well",
    "start": "1340340",
    "end": "1342200"
  },
  {
    "text": "and I think that course really sort of",
    "start": "1342200",
    "end": "1344480"
  },
  {
    "text": "changed my life",
    "start": "1344480",
    "end": "1346700"
  },
  {
    "text": "and we got to the end of the course and",
    "start": "1346700",
    "end": "1348860"
  },
  {
    "text": "in the last lecture the the lecturer",
    "start": "1348860",
    "end": "1351559"
  },
  {
    "text": "said",
    "start": "1351559",
    "end": "1352520"
  },
  {
    "text": "uh oh yeah by the way I would have",
    "start": "1352520",
    "end": "1356780"
  },
  {
    "text": "rather taught you my favorite",
    "start": "1356780",
    "end": "1357980"
  },
  {
    "text": "programming language Haskell",
    "start": "1357980",
    "end": "1359900"
  },
  {
    "text": "it's very different it doesn't even have",
    "start": "1359900",
    "end": "1362900"
  },
  {
    "text": "loops",
    "start": "1362900",
    "end": "1364340"
  },
  {
    "text": "and I said what",
    "start": "1364340",
    "end": "1367039"
  },
  {
    "text": "I've just spent a whole semester",
    "start": "1367039",
    "end": "1368840"
  },
  {
    "text": "learning how to program and I solved",
    "start": "1368840",
    "end": "1371299"
  },
  {
    "text": "every problem with a loop Loops are how",
    "start": "1371299",
    "end": "1373159"
  },
  {
    "text": "you program",
    "start": "1373159",
    "end": "1374360"
  },
  {
    "text": "how could you program without any loops",
    "start": "1374360",
    "end": "1377720"
  },
  {
    "text": "and so then I went ahead I went and had",
    "start": "1377720",
    "end": "1379520"
  },
  {
    "text": "to go and learn how school didn't I",
    "start": "1379520",
    "end": "1382900"
  },
  {
    "text": "um",
    "start": "1382940",
    "end": "1384020"
  },
  {
    "text": "but I I would have liked to have seen",
    "start": "1384020",
    "end": "1386179"
  },
  {
    "text": "the world where",
    "start": "1386179",
    "end": "1387620"
  },
  {
    "text": "that lecturer did teach Haskell like he",
    "start": "1387620",
    "end": "1390740"
  },
  {
    "text": "wasn't even operating at his full power",
    "start": "1390740",
    "end": "1392600"
  },
  {
    "text": "level with the course that changed my",
    "start": "1392600",
    "end": "1394760"
  },
  {
    "text": "life right I want to know the course I",
    "start": "1394760",
    "end": "1397580"
  },
  {
    "text": "missed out on okay and today I hope I've",
    "start": "1397580",
    "end": "1400760"
  },
  {
    "text": "uh gestured in that direction",
    "start": "1400760",
    "end": "1403220"
  },
  {
    "text": "that's the end of the talk",
    "start": "1403220",
    "end": "1404870"
  },
  {
    "text": "[Applause]",
    "start": "1404870",
    "end": "1413620"
  }
]