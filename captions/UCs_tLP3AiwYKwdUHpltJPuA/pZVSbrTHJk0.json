[
  {
    "text": "[Music]",
    "start": "2540",
    "end": "11599"
  },
  {
    "text": "to call agile lean and rugged the paper edition Our other working title was killing trees for knowledge but we",
    "start": "11599",
    "end": "18000"
  },
  {
    "text": "weren't sure of how that was going to run So we settled for this And um we're going to go for a little bit of",
    "start": "18000",
    "end": "23840"
  },
  {
    "text": "introductions right now My name is Anes Sombra and I'm a distributed systems engineer with a company called Fastly",
    "start": "23840",
    "end": "29599"
  },
  {
    "text": "We're a CDN a content delivery network So you come to us you give us your data we spread it around the world and we",
    "start": "29599",
    "end": "35520"
  },
  {
    "text": "make your application faster But I'm not here today to talk about Fastly I'm here to talk about uh this organization that",
    "start": "35520",
    "end": "41840"
  },
  {
    "text": "I'm a part of that is called Papers We Love Also I speak really fast Sometimes my use of language is languageful Uh uh",
    "start": "41840",
    "end": "49760"
  },
  {
    "text": "so just bear with me Uh Adrian is going to tell me if I'm going super fast Uh you're going to be like I think it's my",
    "start": "49760",
    "end": "56399"
  },
  {
    "text": "cue to drink every time I'm I'm going really fast But papers with love I don't know",
    "start": "56399",
    "end": "61600"
  },
  {
    "text": "how many of you have know what papers with love is Yeah Cool Uh so I assume",
    "start": "61600",
    "end": "67439"
  },
  {
    "text": "that maybe you went to a meetup Yes Yes Cool All right So Papers of Love if you",
    "start": "67439",
    "end": "72880"
  },
  {
    "text": "don't know is a meetup that deals with bringing like the the goal of the group is trying to bring academic research",
    "start": "72880",
    "end": "78960"
  },
  {
    "text": "closer to practitioners So every month we pick a paper somebody comes presents it and and people that are interested in",
    "start": "78960",
    "end": "85040"
  },
  {
    "text": "just expanding their knowledge about the computer science research can come and then just hear it and and have a a",
    "start": "85040",
    "end": "91280"
  },
  {
    "text": "shared experience and and a share introduction to concepts that may or may not have been familiar to them For me it",
    "start": "91280",
    "end": "98479"
  },
  {
    "text": "started with a very dreaded American tradition called the yearly performance goals So it was 2014 and I realized that",
    "start": "98479",
    "end": "107280"
  },
  {
    "text": "after I graduated grad school I stopped reading papers and I decided to that year to take my yearly performance goal",
    "start": "107280",
    "end": "112960"
  },
  {
    "text": "seriously So I was like I'm going to read more papers and it was January and",
    "start": "112960",
    "end": "118000"
  },
  {
    "text": "a few days after that I started writing my my goals I noticed that the group in New York City started a meetup called",
    "start": "118000",
    "end": "123280"
  },
  {
    "text": "Papers with Love and obviously I'm like sold I'll do this in a with social pressure and San Francisco was the",
    "start": "123280",
    "end": "129759"
  },
  {
    "text": "second the second meetup that it started and by now I think we're the largest chapter It was a,112 yesterday maybe to",
    "start": "129759",
    "end": "136640"
  },
  {
    "text": "like who knows how many we are right now but I think that this group and this organization hit a nerve because a lot",
    "start": "136640",
    "end": "142400"
  },
  {
    "text": "of people like had an interest for this and now we have over 24 chapters all over the world and London is included",
    "start": "142400",
    "end": "148480"
  },
  {
    "text": "and I think they meet on this building and I think I'm crash I'm actually like ruining their meet up because I'm here",
    "start": "148480",
    "end": "154160"
  },
  {
    "text": "So yay so now I give it up to Adrien Okay good evening So my name is Adrien I",
    "start": "154160",
    "end": "160800"
  },
  {
    "text": "will try and bring balance by speaking a little slower for you Adrian should be easy to remember",
    "start": "160800",
    "end": "166480"
  },
  {
    "text": "I'm also in the VC game I work with Excel Partners Uh thankfully the other Adrian has proved that you can do that",
    "start": "166480",
    "end": "172080"
  },
  {
    "text": "and still be technical So I'm just going to follow in his path Um you may know me from former CTO roles at Spring Source",
    "start": "172080",
    "end": "178720"
  },
  {
    "text": "VMware Pivotal etc Um but really the most relevant thing for tonight is actually a blog that I write which is",
    "start": "178720",
    "end": "184959"
  },
  {
    "text": "called the morning paper Uh which started just over a year ago I began",
    "start": "184959",
    "end": "190239"
  },
  {
    "text": "reading a CS paper every weekday Um and actually from the 8th of October last",
    "start": "190239",
    "end": "195519"
  },
  {
    "text": "year I had to look it up I've been writing up a review of that paper every day on this blog called the morning paper U which has been a really",
    "start": "195519",
    "end": "202319"
  },
  {
    "text": "interesting journey kind of just to sort of immerse in that and to start learning and discovering etc um may seem like an",
    "start": "202319",
    "end": "208720"
  },
  {
    "text": "odd thing for somebody in my position to be doing um but actually what I've really found is you know it's so hard",
    "start": "208720",
    "end": "214640"
  },
  {
    "text": "I'm sure you find this too to keep up with the immense pace of change the volume of information that's published",
    "start": "214640",
    "end": "219680"
  },
  {
    "text": "every day just you know trying to understand all of that so what do you do how do you get a handle on it especially",
    "start": "219680",
    "end": "225519"
  },
  {
    "text": "if you're in a situation where um you need to rapidly assess and come to judgments and decisions about you know",
    "start": "225519",
    "end": "231599"
  },
  {
    "text": "which way to go and what path to take in my case investments maybe in some of your cases what technology to build on",
    "start": "231599",
    "end": "236760"
  },
  {
    "text": "etc And I found out that actually along this journey there are two things that I got from papers that are really useful",
    "start": "236760",
    "end": "242959"
  },
  {
    "text": "to me and one of them is looking at the foundations So really understanding some",
    "start": "242959",
    "end": "248159"
  },
  {
    "text": "core basic principles that gives you a context in which to go and understand when you encounter something new well",
    "start": "248159",
    "end": "253920"
  },
  {
    "text": "does this line up with what I know about foundational principles here's a framework I can set it in and understand",
    "start": "253920",
    "end": "259519"
  },
  {
    "text": "it and then the second thing that I really try and enjoy is looking at the frontiers trying to understand where",
    "start": "259519",
    "end": "264880"
  },
  {
    "text": "things are going and you know so I found that you know papers have been very very beneficial to me for those two reasons",
    "start": "264880",
    "end": "270160"
  },
  {
    "text": "and so a mix of foundations and frontiers and that's what we've done tonight to structure the talk Um it was",
    "start": "270160",
    "end": "277280"
  },
  {
    "text": "a difficult brief I think you've got to give us some slack Adrian said \"I want you to talk about academic papers and I want you to be entertaining.\" Which",
    "start": "277280",
    "end": "284759"
  },
  {
    "text": "is not the immediate pair you'd put together Yeah But we do have beers to",
    "start": "284759",
    "end": "290320"
  },
  {
    "text": "help Um so we've taken on board a challenge We are going to in the in the three conference themes obviously which",
    "start": "290320",
    "end": "296800"
  },
  {
    "text": "you now know very well agile lean and rugged We've selected two papers in each category one that we're calling",
    "start": "296800",
    "end": "303759"
  },
  {
    "text": "foundational and one that we think is a little more on the frontiers although it's somewhat arbitrary but they're all",
    "start": "303759",
    "end": "309039"
  },
  {
    "text": "papers that we like Um and to to get through this in the available time we",
    "start": "309039",
    "end": "315280"
  },
  {
    "text": "realized that we've therefore got about five minutes per paper Yeah Which is actually pretty tough Uh and so um to",
    "start": "315280",
    "end": "322880"
  },
  {
    "text": "keep us to that in decided wouldn't it be fun if we had a strict timer and a bell such that and I get to go first",
    "start": "322880",
    "end": "328960"
  },
  {
    "text": "typically uh if we overrun the five minutes we'll get cut off So um most importantly uh drinks should be on time",
    "start": "328960",
    "end": "336320"
  },
  {
    "text": "following this mechanism So those are the rules Five minutes for paper one foundation one frontier Um no cheating",
    "start": "336320",
    "end": "343919"
  },
  {
    "text": "no adjusting the clock along the way No ringing the bell too early Thank you Going to need all the minutes we can get",
    "start": "343919",
    "end": "349600"
  },
  {
    "text": "Um so with that let's dive in shall we look at some papers all right",
    "start": "349600",
    "end": "355280"
  },
  {
    "text": "So the first category we've picked on is agile So the agile category Do you want",
    "start": "355280",
    "end": "360720"
  },
  {
    "text": "to come over here why don't I grab this come to the center Yeah So okay So we're going to start with a foundational paper",
    "start": "360720",
    "end": "366479"
  },
  {
    "text": "in the agile category And you know one of the things that we this is very",
    "start": "366479",
    "end": "372600"
  },
  {
    "text": "offputting I learned that already One of the things we've heard a lot today is that agility is all about embracing",
    "start": "372600",
    "end": "378880"
  },
  {
    "text": "change and adapting to changing circumstances and being good at doing that Um this is a paper that a very",
    "start": "378880",
    "end": "385120"
  },
  {
    "text": "famous guy called David Parnass wrote in 1994 and I love this paper because obviously he could have been giving this",
    "start": "385120",
    "end": "391120"
  },
  {
    "text": "talk at this session today and yet this is way before you could have sort of predicted many of the things that we're",
    "start": "391120",
    "end": "396479"
  },
  {
    "text": "talking about It's 1994 He also wrote the marvelous on the criteria for decomposing systems into modules but we",
    "start": "396479",
    "end": "403280"
  },
  {
    "text": "won't talk about that today Um one of the things he says really early on here is that actually success we have to get",
    "start": "403280",
    "end": "410160"
  },
  {
    "text": "over this excitement about getting to the first working version and we have to think about success as planning for a",
    "start": "410160",
    "end": "416639"
  },
  {
    "text": "series of changes over the long haul and that's when we really know that we're winning",
    "start": "416639",
    "end": "422400"
  },
  {
    "text": "Now I don't know if you've ever had the experience of looking at a piece of existing software perhaps with a little bit of disdain thinking I could write",
    "start": "422400",
    "end": "429360"
  },
  {
    "text": "that so much better if I could just kind of rewrite it in the right language with the right tools using modern design",
    "start": "429360",
    "end": "435120"
  },
  {
    "text": "principles it would be great And Parnass says this is a bit like looking at an 86",
    "start": "435120",
    "end": "440560"
  },
  {
    "text": "year old man and saying you know he really should have had more exercise when he was younger and not appreciating",
    "start": "440560",
    "end": "445840"
  },
  {
    "text": "that the guy was actually a champion swimmer right into his 50s And so you know one of the points here is that what",
    "start": "445840",
    "end": "451280"
  },
  {
    "text": "he calls software aging um is just inevitable What causes software aging",
    "start": "451280",
    "end": "457199"
  },
  {
    "text": "two reasons Parnass says the first reason is uh your software can come become obsolete by failing to change If",
    "start": "457199",
    "end": "464479"
  },
  {
    "text": "you just leave it static it doesn't adapt and keep up A failure to change will age your software It's obsolete It",
    "start": "464479",
    "end": "470479"
  },
  {
    "text": "falls off the falls off the path The second reason that software ages is changing it So you're damned if you do",
    "start": "470479",
    "end": "477440"
  },
  {
    "text": "and you're damned if you don't Um Ponas says that if you want to plan",
    "start": "477440",
    "end": "483280"
  },
  {
    "text": "for success you need to plan for change because the only systems that don't get",
    "start": "483280",
    "end": "488560"
  },
  {
    "text": "changed are those that are so bad that nobody wants to use them Um likewise therefore a failure to plan",
    "start": "488560",
    "end": "496639"
  },
  {
    "text": "for change is really planning for premature aging and death which I hope we don't want for our software How does",
    "start": "496639",
    "end": "503599"
  },
  {
    "text": "this aging happen you hope that the original writer of the software has a clear concept in mind when they create it that it's somehow conceptually",
    "start": "503599",
    "end": "510160"
  },
  {
    "text": "integral and coherent But later along somebody comes along to do some maintenance to make a change and they",
    "start": "510160",
    "end": "516560"
  },
  {
    "text": "don't quite understand that clear original concept and so what they do isn't quite in line with it Now to",
    "start": "516560",
    "end": "522000"
  },
  {
    "text": "understand the software you have to understand the original concept and the change that was made Repeat this process",
    "start": "522000",
    "end": "527760"
  },
  {
    "text": "a few times and you find that the original designer of the software no longer understands what it does The",
    "start": "527760",
    "end": "534959"
  },
  {
    "text": "maintainers of the software never understood what it did and therefore nobody understands what this software",
    "start": "534959",
    "end": "541800"
  },
  {
    "text": "does Interesting Now software aging says is inevitable Um and as it happens it",
    "start": "541800",
    "end": "548000"
  },
  {
    "text": "reduces our agility As software ages and becomes more brittle and harder to understand the rate of change slows down",
    "start": "548000",
    "end": "554480"
  },
  {
    "text": "Also the performance of the software may slow down as the structure deteriorates and it tends to get more buggy Um one of",
    "start": "554480",
    "end": "561360"
  },
  {
    "text": "the reasons is weight gain The easiest way he says to add a new feature to the to the to the software is to add new",
    "start": "561360",
    "end": "567920"
  },
  {
    "text": "code and we tend to violate the dry principle We get duplication etc Now changes have to be made in multiple",
    "start": "567920",
    "end": "573680"
  },
  {
    "text": "cases We're on the slippery slope What can we do you're hiding the timer What can we do about",
    "start": "573680",
    "end": "579320"
  },
  {
    "text": "this preventative medicine Panas says first of all we have to design for",
    "start": "579320",
    "end": "585680"
  },
  {
    "text": "change Planning for change remember is planning for success So think about that right up front What can help with this",
    "start": "585680",
    "end": "593360"
  },
  {
    "text": "embracing modularity and information hiding In other words breaking your system down into smaller well-designed",
    "start": "593360",
    "end": "599680"
  },
  {
    "text": "coherent pieces that become units of change which is kind of very reminiscent of microservices when you think about it",
    "start": "599680",
    "end": "606320"
  },
  {
    "text": "He also stresses clarity and documentation maybe more so than we would today Um but with the goal that",
    "start": "606320",
    "end": "612640"
  },
  {
    "text": "remember you're writing this for the long haul Think about the people to follow and maybe your future self If a",
    "start": "612640",
    "end": "618160"
  },
  {
    "text": "part of the software is too bad just chop it off Amputate the disease-ridden parts Don't let it spread Um again that",
    "start": "618160",
    "end": "625120"
  },
  {
    "text": "means that having a unit of change you can easily amputate is great And finally plan for eventual replacement It will",
    "start": "625120",
    "end": "631839"
  },
  {
    "text": "happen Software does age Start saving financially and investing in new tools and techniques to be ready when that",
    "start": "631839",
    "end": "638079"
  },
  {
    "text": "time comes Look at that time out Yeah Oh",
    "start": "638079",
    "end": "644680"
  },
  {
    "text": "nice Ah first line Okay so we said well hey that's",
    "start": "644680",
    "end": "651120"
  },
  {
    "text": "okay Fine So this is like a little bit too soon All right so my the paper that I chose it's much better to call the",
    "start": "651120",
    "end": "656640"
  },
  {
    "text": "time over there It's like every second counts So this is fast database restart at Facebook and then we chose this as an",
    "start": "656640",
    "end": "662480"
  },
  {
    "text": "agile paper that is in a frontier So when we want like as developers we want agility of operation no agility of",
    "start": "662480",
    "end": "670240"
  },
  {
    "text": "development agility of testing and verification and agility of delivery but this this uh all of this deals with how",
    "start": "670240",
    "end": "676320"
  },
  {
    "text": "we construct software and how we put it out in production but once it's out in the wild we actually need to support it",
    "start": "676320",
    "end": "682000"
  },
  {
    "text": "and we need to do maintenance to it So we also really want agility of operations as well So people are",
    "start": "682000",
    "end": "688399"
  },
  {
    "text": "dropping their drinks Woo Uh so this paper deals with Facebook scuba and if",
    "start": "688399",
    "end": "694160"
  },
  {
    "text": "you're not familiar with scuba scuba is an in-memory database that that is used to monitor and analyze Facebook products",
    "start": "694160",
    "end": "699839"
  },
  {
    "text": "and services and the paper describes the struggles that the scuba team was dealing with So uh it deals with a",
    "start": "699839",
    "end": "706800"
  },
  {
    "text": "little bit of the architecture but we're not going to cover it all I'm just going to tell you that there are machines and each machine has a has some servers and",
    "start": "706800",
    "end": "713360"
  },
  {
    "text": "since it's in memory all of the data lives in the servers heap So this is all you need to know about scuba But the",
    "start": "713360",
    "end": "720480"
  },
  {
    "text": "problem that the team was having and the problem that pretty much everybody that has to deal with state uh a large",
    "start": "720480",
    "end": "725519"
  },
  {
    "text": "quantities has is that it's kind of tricky It's like it's not necessarily trivial And for them restarting a database cleared its memory So it meant",
    "start": "725519",
    "end": "732720"
  },
  {
    "text": "that they had to load it up from disk and it was around 120 gigs of RAM from disk and it took them around three hours",
    "start": "732720",
    "end": "738720"
  },
  {
    "text": "per server and you had around eight servers per machine So they did this",
    "start": "738720",
    "end": "743920"
  },
  {
    "text": "strategy to actually get get a little bit more functionality while they had to do an upgrade then and they did things",
    "start": "743920",
    "end": "749760"
  },
  {
    "text": "like orchestrator restarts like they only restarted 2% of the fleet 2% of the servers of the fleet and um and they",
    "start": "749760",
    "end": "757279"
  },
  {
    "text": "also like while they were servers were restarting they used this thing that would be like partial that they use a strategy called partial queries So they",
    "start": "757279",
    "end": "764160"
  },
  {
    "text": "don't return the full result set but return a little bit and then they keep restarting machines But that thing took",
    "start": "764160",
    "end": "769200"
  },
  {
    "text": "them around 12 hours and required a full-time engineer to actually monitor the process And I don't know if you monitor the process of this is like",
    "start": "769200",
    "end": "776320"
  },
  {
    "text": "how you look like whenever you have to do this thing What the team noticed is that whenever they shut down a service",
    "start": "776320",
    "end": "782560"
  },
  {
    "text": "for a planned upgrade the server memory was in a good state uh as opposed to whenever server crash and you can't",
    "start": "782560",
    "end": "788399"
  },
  {
    "text": "really tell if the memory was good or not if there was some corruption So they decided to decouple the memories lifetime from the process lifetime",
    "start": "788399",
    "end": "794760"
  },
  {
    "text": "lifetimes So they did it this way and uh they went they did it by actually just",
    "start": "794760",
    "end": "800480"
  },
  {
    "text": "like serializing and deserializes data structures that went to disk So it went from from hip to memory and then from",
    "start": "800480",
    "end": "806480"
  },
  {
    "text": "share me from from heap to share memory and then uh share memory was the thing",
    "start": "806480",
    "end": "811519"
  },
  {
    "text": "that kept the state Then the process restarted and then it just read everything back from share memory into heap and they used different data",
    "start": "811519",
    "end": "817680"
  },
  {
    "text": "structures and the paper covers this and this kind of like the description of how they did the staggered the staggered",
    "start": "817680",
    "end": "822959"
  },
  {
    "text": "restarts and uh it took them around uh an hour to do the full fleet and in and",
    "start": "822959",
    "end": "829680"
  },
  {
    "text": "the server took from going from three hours it took them around two three minutes per server So so this is agility",
    "start": "829680",
    "end": "836160"
  },
  {
    "text": "of operations and this is what you look like if you're the engineer that is on call for that one Boom Yes So all right",
    "start": "836160",
    "end": "843839"
  },
  {
    "text": "Now we're going to go for lean So far we've done so good Yeah Can I have your spare minutes no Oh come on No rollovers",
    "start": "843839",
    "end": "852320"
  },
  {
    "text": "Yes All right So a paper tour of lean Um and I get to do the foundational paper",
    "start": "852320",
    "end": "857920"
  },
  {
    "text": "again Oh you started a timer Okay So my choice is scalability but at what cost",
    "start": "857920",
    "end": "863760"
  },
  {
    "text": "it's actually a 2015 paper Frank Mcceri and Etal Um but I really like it It",
    "start": "863760",
    "end": "869519"
  },
  {
    "text": "teaches us a very foundational and perhaps you'll find it counterintuitive lesson when you first encounter it And",
    "start": "869519",
    "end": "874800"
  },
  {
    "text": "so it's teaching us to question why we're pursuing certain goals and whether they are indeed the right ones and",
    "start": "874800",
    "end": "881040"
  },
  {
    "text": "whether they have lean consequences So let's take a look at this particular chart which shows here",
    "start": "881040",
    "end": "887920"
  },
  {
    "text": "scaling out some distributed system So we're adding nodes and therefore we're adding cores and we're looking at the",
    "start": "887920",
    "end": "893360"
  },
  {
    "text": "speed up that we achieve as we add cores So this is a classic kind of scalability of my system showoff graph and we'll see",
    "start": "893360",
    "end": "900399"
  },
  {
    "text": "that system B starts to struggle after about 10 cores and it sort of seems to be flatlining and not scaling terribly",
    "start": "900399",
    "end": "906959"
  },
  {
    "text": "well whereas system A as we add add our nose and heads add our core seems to",
    "start": "906959",
    "end": "912000"
  },
  {
    "text": "scale quite nicely within the time limit A quick show of hands who would prefer to deploy system",
    "start": "912000",
    "end": "918440"
  },
  {
    "text": "A and who would like to deploy system B",
    "start": "918440",
    "end": "923519"
  },
  {
    "text": "one one curious taker cuz he's figured out there must be a",
    "start": "923519",
    "end": "928480"
  },
  {
    "text": "catch Here's another graph of the same system running the exact same workload",
    "start": "928839",
    "end": "934399"
  },
  {
    "text": "Again we're seeing the number of nodes in attributed system and hence cause But now we're looking at the actual time it",
    "start": "934399",
    "end": "939839"
  },
  {
    "text": "takes to process this workload What I want you to notice is that system B the",
    "start": "939839",
    "end": "945519"
  },
  {
    "text": "system that scales the worst actually performs better than system A at every",
    "start": "945519",
    "end": "950800"
  },
  {
    "text": "scale Now which system do you want to deploy in your data system A or system",
    "start": "950800",
    "end": "958440"
  },
  {
    "text": "B huh that's kind of interesting isn't it it hurts Hang on I want to deliberately deploy the system that",
    "start": "958440",
    "end": "965040"
  },
  {
    "text": "scales worse That kind of take we're so used to kind of scalability as a goal in",
    "start": "965040",
    "end": "970079"
  },
  {
    "text": "its own right Does your system scale it's web scale Single-minded pursuit of",
    "start": "970079",
    "end": "975279"
  },
  {
    "text": "scalability This paper shows this could be the wrong goal It's a very thoughtprovoking counter example We're",
    "start": "975279",
    "end": "980959"
  },
  {
    "text": "more interested perhaps in performance at different scales or in cost performance etc How does this happen so the common",
    "start": "980959",
    "end": "988880"
  },
  {
    "text": "wisdom as embodied in many many papers and discussions and debates is that if your system scales really well you must",
    "start": "988880",
    "end": "995920"
  },
  {
    "text": "be a really good system builder because scaling is hard and you've clearly done a great job Um and McSher at I actually",
    "start": "995920",
    "end": "1003519"
  },
  {
    "text": "hear some uncommon wisdom here Any system can actually scale arbitrarily well particular about particularly",
    "start": "1003519",
    "end": "1009120"
  },
  {
    "text": "distributed systems with a sufficient lack of care in its implementation How does this happen well",
    "start": "1009120",
    "end": "1016240"
  },
  {
    "text": "in order to get scaling and to go up to 300 nodes we introduce all sorts of overheads and inefficiencies that are",
    "start": "1016240",
    "end": "1021920"
  },
  {
    "text": "going to let us work in this distributed manner They turn out to be easily parallelizable Now you get a lovely",
    "start": "1021920",
    "end": "1027839"
  },
  {
    "text": "looking scaling graph but you don't have good performance Um the second thing that tends to happen is that a",
    "start": "1027839",
    "end": "1034319"
  },
  {
    "text": "programming model optimized around some of these distributed programming paradigms restricts your algorithm choice And so you can't always encode",
    "start": "1034319",
    "end": "1040880"
  },
  {
    "text": "the algorithm in the most efficient way So they introduce a notion of cost What's the configuration that",
    "start": "1040880",
    "end": "1047640"
  },
  {
    "text": "outperforms a single thread so the cost of a system is the number of",
    "start": "1047640",
    "end": "1053280"
  },
  {
    "text": "hardware cores you need to use before your particularly distributed system implementation outperforms a competent",
    "start": "1053280",
    "end": "1060320"
  },
  {
    "text": "singlethreaded single core system Many systems it turns out actually have unbounded costs They never",
    "start": "1060320",
    "end": "1066640"
  },
  {
    "text": "achieve this goal So let it's kind of damning and interesting",
    "start": "1066640",
    "end": "1072559"
  },
  {
    "text": "Let's have a look Um this is this is graph processing You do it in many other areas Uh 20 page rank iterations you",
    "start": "1072559",
    "end": "1079360"
  },
  {
    "text": "know Google's page rank algorithm etc Here's my single threaded system on the top So the the parenthesis that's how",
    "start": "1079360",
    "end": "1085360"
  },
  {
    "text": "many cores we're using So you can see that most of these systems never get to beat my single core So Spark with 128",
    "start": "1085360",
    "end": "1093440"
  },
  {
    "text": "cores for example is actually slower than my single thread on a single core Um GraphLab is it graph lab just about",
    "start": "1093440",
    "end": "1101280"
  },
  {
    "text": "does it but it uses 128 cores to do it 128 times more expensive than if you'd",
    "start": "1101280",
    "end": "1108000"
  },
  {
    "text": "used a single core Paul Barum said \"You can have a second computer when you've",
    "start": "1108000",
    "end": "1113039"
  },
  {
    "text": "shown you know how to use the first one.\" Choosing a good algorithm aart is",
    "start": "1113039",
    "end": "1119440"
  },
  {
    "text": "really at the heart of computer science And if we're forced into positions where we can't do that it has serious",
    "start": "1119440",
    "end": "1124640"
  },
  {
    "text": "implications for being lean In his blog that accompanies the paper Frank McSherry says \"Look here's",
    "start": "1124640",
    "end": "1131919"
  },
  {
    "text": "the acid test If you're building a system for others to use particularly a distributed system just make sure it",
    "start": "1131919",
    "end": "1137679"
  },
  {
    "text": "runs better than it does on your laptop And by the way he shows you how you can do this with very large data sets and",
    "start": "1137679",
    "end": "1143280"
  },
  {
    "text": "all kinds of things So it's not just for small data And if you're using some kind of distributed system just make sure",
    "start": "1143280",
    "end": "1149280"
  },
  {
    "text": "it's better than your laptop Um so incredible implications for running lean here just by kind of assuming",
    "start": "1149280",
    "end": "1156240"
  },
  {
    "text": "scalability following the crowd and actually accepting a lot of inefficiency as a result We're doing so good Yeah",
    "start": "1156240",
    "end": "1164559"
  },
  {
    "text": "Okay I'm up next as well I'm going to steal a few seconds from the reset I'm going to do the frontier paper Um so",
    "start": "1164559",
    "end": "1171039"
  },
  {
    "text": "Frontier paper also from 2015 again thinking about lean Um my choice is",
    "start": "1171039",
    "end": "1177640"
  },
  {
    "text": "approxing approximations to map reduce frameworks Now whereas scalability but",
    "start": "1177640",
    "end": "1183440"
  },
  {
    "text": "at what cost teaches us to question whether we're pursuing the right goal um",
    "start": "1183440",
    "end": "1188480"
  },
  {
    "text": "this paper really teaches us to make sure that we're not asking too much of our systems And again I want to tease you",
    "start": "1188480",
    "end": "1195039"
  },
  {
    "text": "with a graph This time we're looking at um analysis of the size of articles in",
    "start": "1195039",
    "end": "1201720"
  },
  {
    "text": "Wikipedia Okay and so you've got you know page size in bytes and the number of articles that have that size the uh",
    "start": "1201720",
    "end": "1208480"
  },
  {
    "text": "the green the solid line um shows the absolute precise perfect results analyzing every single article looking",
    "start": "1208480",
    "end": "1214799"
  },
  {
    "text": "at it exact length and giving you this distribution Um what's really interesting are the crosses overlaid",
    "start": "1214799",
    "end": "1221200"
  },
  {
    "text": "They're in red if you're not red green color blind Um that's the same thing um but",
    "start": "1221200",
    "end": "1227440"
  },
  {
    "text": "calculated by only sampling 1% of the data So this was produced to say look at",
    "start": "1227440",
    "end": "1233360"
  },
  {
    "text": "1% error bounds at 95% confidence interval Can you tell me what this distribution looks like it turns out if",
    "start": "1233360",
    "end": "1240559"
  },
  {
    "text": "you're happy to take the red crosses rather than the solid line again you",
    "start": "1240559",
    "end": "1245760"
  },
  {
    "text": "sample about 1% of the data you can get that about 32 times faster or using about a 30 to the resources And I want",
    "start": "1245760",
    "end": "1253440"
  },
  {
    "text": "to ask you what do you really need you know if your goal is to understand the shape of the distribution to look at",
    "start": "1253440",
    "end": "1258720"
  },
  {
    "text": "reports etc You know you're not doing kind of billing kind of stuff off the back of this in many cases is the Red",
    "start": "1258720",
    "end": "1264640"
  },
  {
    "text": "Cross perfectly good enough now a report that you only run once a month you can run it every day for the same cost",
    "start": "1264640",
    "end": "1271559"
  },
  {
    "text": "Okay there's a related piece of work it's not in the paper but I wanted to touch on it called Blink DB which also",
    "start": "1271559",
    "end": "1278240"
  },
  {
    "text": "incorporates this approximate querying idea Now here again we're seeing the cost of running a query against two",
    "start": "1278240",
    "end": "1284799"
  },
  {
    "text": "different data sets 2 and a half terabytes 7 and a half terabytes So big data um query response on the y-axis",
    "start": "1284799",
    "end": "1292320"
  },
  {
    "text": "Note that it's a log scale Okay Uh and again we're saying if we answer this",
    "start": "1292320",
    "end": "1297520"
  },
  {
    "text": "query at 1% error then at 2 and a half terabytes we're between about 10 to 100 times",
    "start": "1297520",
    "end": "1304000"
  },
  {
    "text": "faster or cheaper Um and at 7 and a half terabytes you're about a thousand times",
    "start": "1304000",
    "end": "1309039"
  },
  {
    "text": "faster slash cheaper if you're prepared to accept that approximation which I just showed you for many purposes is",
    "start": "1309039",
    "end": "1314320"
  },
  {
    "text": "actually pretty darn good How does the prox Hadoop actually work and so um it's",
    "start": "1314320",
    "end": "1319600"
  },
  {
    "text": "a two-stage sampling process What it does is first is it just chooses to input a subset of the data blocks and",
    "start": "1319600",
    "end": "1325919"
  },
  {
    "text": "then given that it chooses to run or to drop a subset of the map tasks Of course the trick is figuring out how much data",
    "start": "1325919",
    "end": "1332480"
  },
  {
    "text": "you need to look at and how many tasks you can drop Um but after doing this two-stage sampling to use it as an end",
    "start": "1332480",
    "end": "1338240"
  },
  {
    "text": "user is dead straightforward They provide you know super classes for mapper and reducer that you just extend",
    "start": "1338240",
    "end": "1344000"
  },
  {
    "text": "like you would the normal kind of superasses and that's it off you go There are two ways of specifying what",
    "start": "1344000",
    "end": "1349360"
  },
  {
    "text": "you want You can say if you understand your data set this is the sampling rate I'm prepared to accept and this is the",
    "start": "1349360",
    "end": "1355760"
  },
  {
    "text": "drop rate for map reduceuced tasks Or you can tell it this is the error bounds that I'm interested in and this is the",
    "start": "1355760",
    "end": "1361280"
  },
  {
    "text": "confidence interval I need Now error bound is how close to the true answer do I need to be within 1% within 5% within",
    "start": "1361280",
    "end": "1368760"
  },
  {
    "text": "10% Confidence interval how long do I have perfectly timed Confidence interval",
    "start": "1368760",
    "end": "1373840"
  },
  {
    "text": "is how sure are you that you're within that error bounds Um so for example if I say 95% confident 1% error bounds um",
    "start": "1373840",
    "end": "1382000"
  },
  {
    "text": "that means 19 times out of 20 the answer I give you is going to be within that bound How do they work out how much to",
    "start": "1382000",
    "end": "1390159"
  },
  {
    "text": "drop based on this that's kind of where the smarts are That's the bit you wouldn't want to do yourself Um so for",
    "start": "1390159",
    "end": "1395760"
  },
  {
    "text": "aggregate computations things that are doing for example a sum or a count or that kind of thing Um they use",
    "start": "1395760",
    "end": "1401679"
  },
  {
    "text": "multi-stage sampling theory And if you've got a process that's looking at extremes like computing a min or a max",
    "start": "1401679",
    "end": "1409120"
  },
  {
    "text": "etc then the authors use extreme value theory and something called the fisher typiceno theorem Um don't ask me about",
    "start": "1409120",
    "end": "1416320"
  },
  {
    "text": "that I can't tell you but some smart guys have figured it all out Um and",
    "start": "1416320",
    "end": "1421520"
  },
  {
    "text": "really the takeaway for this for me is don't ask wasteful questions Do you really need the answer because getting",
    "start": "1421520",
    "end": "1428720"
  },
  {
    "text": "from 99% to 100% you pay a heavy price",
    "start": "1428720",
    "end": "1433810"
  },
  {
    "text": "[Applause]",
    "start": "1433810",
    "end": "1437089"
  },
  {
    "text": "Okay go Okay so now we're going to do rugged At the beginning we decided to split them and then we're going to see if each one of us can take a full",
    "start": "1439440",
    "end": "1446480"
  },
  {
    "text": "section but it looks like we're made of time So let's do it So the first paper that is foundational that we've selected",
    "start": "1446480",
    "end": "1452799"
  },
  {
    "text": "was harvest and yield and the and skillable tolerance services And the reason that we love this paper is that",
    "start": "1452799",
    "end": "1458320"
  },
  {
    "text": "it was made in 1999 but a lot of the the mechanisms and a lot of the strategies that you've seen us uh talked about in",
    "start": "1458320",
    "end": "1464559"
  },
  {
    "text": "in previous sections are actually like formalized in this paper and and and it's really really cool So if this is my",
    "start": "1464559",
    "end": "1472000"
  },
  {
    "text": "interpretation of ruggedness which has nothing to do with security So I'm sorry to the speakers I I really enjoy your",
    "start": "1472000",
    "end": "1477200"
  },
  {
    "text": "talks uh and learn a lot of them But but yeah it's true I am dealing with like PCI right now So it was like so good So",
    "start": "1477200",
    "end": "1485760"
  },
  {
    "text": "ruggedness I also when I as a practitioner when I think about ruggedness I also think about system availability and this is why I like this",
    "start": "1485760",
    "end": "1491840"
  },
  {
    "text": "paper a lot because uh this this paper gives us uh give us strategies to enhance uh enhance ruggedness in the",
    "start": "1491840",
    "end": "1498559"
  },
  {
    "text": "pres presence of failures So if you have anything that runs on the internet eventually will fail like it will fail",
    "start": "1498559",
    "end": "1504240"
  },
  {
    "text": "so so the way that this paper actually gives us a mechanism and a better way to think about what do you do or how your",
    "start": "1504240",
    "end": "1511200"
  },
  {
    "text": "system availability is impacted by failure So that's why I like it and that's why I put that the knowledgeable color So the two concepts that this",
    "start": "1511200",
    "end": "1518799"
  },
  {
    "text": "paper introduced is yield and harvest So yield is defined as a fraction of answer queries and harvest is a fraction of the",
    "start": "1518799",
    "end": "1525360"
  },
  {
    "text": "complete result So we now like the the authors propos that we start thinking about our system availability in terms",
    "start": "1525360",
    "end": "1531360"
  },
  {
    "text": "of yield and harvest and and our systems eventually like have a preference for what they're going to be tolerant to Are",
    "start": "1531360",
    "end": "1537600"
  },
  {
    "text": "you going to like favor yield or are they going to favor harvest and that is not something that you build after your",
    "start": "1537600",
    "end": "1542640"
  },
  {
    "text": "system gets constructed You build it uh this this behavior is an outcome of your",
    "start": "1542640",
    "end": "1547840"
  },
  {
    "text": "systems design which is something like really like pretty interesting It's like you can't really build security and",
    "start": "1547840",
    "end": "1553360"
  },
  {
    "text": "after your system is finished but uh it's the same thing with the behavior of your system in terms of failures So",
    "start": "1553360",
    "end": "1559120"
  },
  {
    "text": "these two concepts are rather tricky So I'm going to cover them again to to make sure that that we understand them",
    "start": "1559120",
    "end": "1564640"
  },
  {
    "text": "together It took me a little bit of time to actually get what they meant by yield So yield is kind of closer to uptime Uh",
    "start": "1564640",
    "end": "1570640"
  },
  {
    "text": "they mean the percent of requests that get answered successfully but it's more useful than uptime as a metric because",
    "start": "1570640",
    "end": "1576640"
  },
  {
    "text": "it's correlated or it maps directly to user experience So say for example you have a shopping cart and your system is a shopping cart and you're during",
    "start": "1576640",
    "end": "1582799"
  },
  {
    "text": "Christmas season and then you have two minutes of downtime That is a different like there is a different yield than if",
    "start": "1582799",
    "end": "1588880"
  },
  {
    "text": "your system goes down at 3:00 a.m on a regular Wednesday but it's the same out uptime metric So so this is the",
    "start": "1588880",
    "end": "1595760"
  },
  {
    "text": "interesting part uh then the authors tells us that we should actually be focusing on yield rather than uptime",
    "start": "1595760",
    "end": "1602240"
  },
  {
    "text": "when we're trying to talk about our systems behavior So harvest right now",
    "start": "1602240",
    "end": "1607440"
  },
  {
    "text": "this is this a very illustrative example So so harvest is defined as the percent",
    "start": "1607440",
    "end": "1612880"
  },
  {
    "text": "of the data that is included in the response from all of the data that we have So say that I have uh this",
    "start": "1612880",
    "end": "1618159"
  },
  {
    "text": "following distribution of data on servers and I have cute on server A baby on server B animals on server C and I",
    "start": "1618159",
    "end": "1624240"
  },
  {
    "text": "want to search for cute baby animals of uh this is what happens uh when when server when server C goes be goes down I",
    "start": "1624240",
    "end": "1631760"
  },
  {
    "text": "have 67% of harvest but actually my query is pretty good So this is again to like the approximation that was talking",
    "start": "1631760",
    "end": "1637840"
  },
  {
    "text": "about like we don't have to have 100% harvest to actually return sensible results So the authors proposed two",
    "start": "1637840",
    "end": "1643919"
  },
  {
    "text": "strategies to help us help us build our systems in way that are much more tolerant or rugged to failure So one",
    "start": "1643919",
    "end": "1650240"
  },
  {
    "text": "that they mentioned like strategy number one or door number one is probabilistic availability and this is where like the",
    "start": "1650240",
    "end": "1656480"
  },
  {
    "text": "concept of like graceful degradation like comes up So it's graceful harvest degradation because it's like graceful",
    "start": "1656480",
    "end": "1663039"
  },
  {
    "text": "like um ability to have like more like approximate result and the guys on the scuba paper did that under a fault uh",
    "start": "1663039",
    "end": "1670000"
  },
  {
    "text": "randomness is for example if I spread 1% of my data through through different",
    "start": "1670000",
    "end": "1675039"
  },
  {
    "text": "different servers then what if one server dies it's kind of like great but for for for your saving of state if one",
    "start": "1675039",
    "end": "1682000"
  },
  {
    "text": "of the the the server dies then you actually have 1% that is randomly distributed data uh you can actually",
    "start": "1682000",
    "end": "1687360"
  },
  {
    "text": "replicate more things that are more important to you and you degrade result based on client capability the second",
    "start": "1687360",
    "end": "1692880"
  },
  {
    "text": "one is de composition orthogonality and de composition the only thing that is really important that I want you to take",
    "start": "1692880",
    "end": "1698080"
  },
  {
    "text": "away from this is that you can split your application into subsystems that are independently intolerant to failure",
    "start": "1698080",
    "end": "1703360"
  },
  {
    "text": "but your application itself is is like tolerant to those systems failure So it's kind of like you build an API tier",
    "start": "1703360",
    "end": "1708559"
  },
  {
    "text": "but everything under your API could fail and you're okay I have 28 seconds And the the another thing that is",
    "start": "1708559",
    "end": "1714159"
  },
  {
    "text": "interesting is that you don't have to have the same consistency for everything Only for the subsystems that needed orthogonality you're going to have to go",
    "start": "1714159",
    "end": "1720320"
  },
  {
    "text": "and read it on your own Yes",
    "start": "1720320",
    "end": "1725559"
  },
  {
    "text": "Good The next paper is a frontier paper You",
    "start": "1726080",
    "end": "1731919"
  },
  {
    "text": "can Yes Fine And then this is one of the authors We we really like this paper And and and again I'm going to redefine the",
    "start": "1731919",
    "end": "1738880"
  },
  {
    "text": "the theme of ruggedness And also when I think about ruggedness I think about our systems like ability to stay up as in",
    "start": "1738880",
    "end": "1745360"
  },
  {
    "text": "systems ability to be secure But the only way that you know this is actually via verification and via testing And in",
    "start": "1745360",
    "end": "1750720"
  },
  {
    "text": "the realm of testing there's like all sorts of classifications And this is my mental model So you have things that are",
    "start": "1750720",
    "end": "1756720"
  },
  {
    "text": "like much more academic like formal methods and then in formal methods you have things like human assisted proofs model check-in like where formal methods",
    "start": "1756720",
    "end": "1763760"
  },
  {
    "text": "and they're all great and they give you this level of assurance that regular testing doesn't give you but they're",
    "start": "1763760",
    "end": "1769200"
  },
  {
    "text": "very very labor intensive and they also have very very uh specific applications So if you have something that is safety",
    "start": "1769200",
    "end": "1774320"
  },
  {
    "text": "critical you tend to go for a human assisted proof You spend maybe like six months of your life proving like 30",
    "start": "1774320",
    "end": "1779919"
  },
  {
    "text": "lines of code but you really have like very very great assurances AWS is actually using formal methods and they have a paper about it that is really",
    "start": "1779919",
    "end": "1786240"
  },
  {
    "text": "really interesting about how to use uh TLA plus to verify and make more aggressive changes to AWS services Then",
    "start": "1786240",
    "end": "1793120"
  },
  {
    "text": "you have your regular testing which is a thing that we all of us do hopefully do your pay attention to your tests and",
    "start": "1793120",
    "end": "1799279"
  },
  {
    "text": "people classify testing depending on like the perspective on your system So you have things like top down and and",
    "start": "1799279",
    "end": "1804640"
  },
  {
    "text": "you think like white black box It's like awareness But the paper introduces a new term that they call bottom up and they",
    "start": "1804640",
    "end": "1811679"
  },
  {
    "text": "call it lineage driven fault injectors are part of bottom up So I thought that this was the sound for this because like",
    "start": "1811679",
    "end": "1818320"
  },
  {
    "text": "yeah it's really difficult to pronounce So I'm not going to say lineage driven fault injectors anymore I'm going to",
    "start": "1818320",
    "end": "1823440"
  },
  {
    "text": "call it Molly because that is the name of the system that they implemented to prove this concept And this concept",
    "start": "1823440",
    "end": "1829200"
  },
  {
    "text": "comes from like database literature where they trace like the outcome of something but then they use this",
    "start": "1829200",
    "end": "1834880"
  },
  {
    "text": "mechanism to actually like seek failures So Molly reasons backward from a correct",
    "start": "1834880",
    "end": "1840159"
  },
  {
    "text": "observed system behavior and it tries to just like figure out what could have prevented it from happening And that is super powerful and and then it uses this",
    "start": "1840159",
    "end": "1847679"
  },
  {
    "text": "information to only put failures that it thinks could have prevented the good outcome to to like from happening So so",
    "start": "1847679",
    "end": "1854880"
  },
  {
    "text": "it's a it's smarter than your regular fault injectors because it actually knows and has an understanding of how your application works So say I wanted",
    "start": "1854880",
    "end": "1862960"
  },
  {
    "text": "to build a rugged system with Molly and and in the paper they described the situation that it's kind of akin like a",
    "start": "1862960",
    "end": "1868159"
  },
  {
    "text": "game with a developer and a programmer I put a monkey but no no nothing don't take any conclusions from that one And",
    "start": "1868159",
    "end": "1874720"
  },
  {
    "text": "the verifier is Molly So so me as a programmer I give Molly my program a",
    "start": "1874720",
    "end": "1880320"
  },
  {
    "text": "correctness specification my inputs and a failure model like we have to agree on what are the failures that my",
    "start": "1880320",
    "end": "1885520"
  },
  {
    "text": "application is supposed to tolerate and how many of them and over what amount of time and Molly runs my program and",
    "start": "1885520",
    "end": "1890960"
  },
  {
    "text": "observes it execution and then it's going to pick a fault and and from the things that we've agreed upon and then",
    "start": "1890960",
    "end": "1897279"
  },
  {
    "text": "it's going to run my program again with that fault in mind and we both get to observe the results So if Molly breaks",
    "start": "1897279",
    "end": "1902880"
  },
  {
    "text": "my program my program and the correctness specification is violated then I lose But I get to submit my",
    "start": "1902880",
    "end": "1908399"
  },
  {
    "text": "program with a patch yet again But if it looks good then Molly would I win that",
    "start": "1908399",
    "end": "1913679"
  },
  {
    "text": "round and Molly would pick another failure that is possible for my application And then we try again and we",
    "start": "1913679",
    "end": "1919200"
  },
  {
    "text": "try again and if Molly breaks my program then I lose If my program like manages to to like uh survive this this this",
    "start": "1919200",
    "end": "1926039"
  },
  {
    "text": "evaluation then I win and then I get a I get a certainty that I wouldn't necessarily get with other fault in",
    "start": "1926039",
    "end": "1932159"
  },
  {
    "text": "injection mechanisms Another thing that is interesting that is like why is this relevant is is because at the end of the",
    "start": "1932159",
    "end": "1938159"
  },
  {
    "text": "day formal methods allow you to have a an analysis of all of the states that you that your program or your system can",
    "start": "1938159",
    "end": "1944640"
  },
  {
    "text": "get into But but the but testing in testing you actually have to force a",
    "start": "1944640",
    "end": "1949919"
  },
  {
    "text": "system to fail otherwise you have no comp no confidence that it's going to operate correctly in failure mode uh",
    "start": "1949919",
    "end": "1957360"
  },
  {
    "text": "Molly provides as part of this execution a way to help me reason about failure So because after the first one for example",
    "start": "1957360",
    "end": "1963679"
  },
  {
    "text": "my program was crap and it told me and then that is a lineage thing and then it gives me also a a lineage cause and then",
    "start": "1963679",
    "end": "1969919"
  },
  {
    "text": "a lamp diagram so I can reason about time then I get to submit it again I get to submit it again and by the end of the",
    "start": "1969919",
    "end": "1974960"
  },
  {
    "text": "day you see that my lineage is a little bit much more complex and it's a little bit like much more uh sturdy So you can",
    "start": "1974960",
    "end": "1981039"
  },
  {
    "text": "see this in the paper 50 seconds now This is like actually not that bad right yeah we're doing good So so the the",
    "start": "1981039",
    "end": "1988559"
  },
  {
    "text": "reason that we like Molly a lot is also because it presents a middle ground between things that are like much more",
    "start": "1988559",
    "end": "1993679"
  },
  {
    "text": "pragmatic like testing and the formalism and and a rigidity of formal methods I",
    "start": "1993679",
    "end": "1998799"
  },
  {
    "text": "don't know if any of you saw those in school but the first time I saw them it was just like h and then I didn't understand why they were good And then",
    "start": "1998799",
    "end": "2005679"
  },
  {
    "text": "now I get that the certainties are much more like they're much more uh concrete They're like they're just they're",
    "start": "2005679",
    "end": "2011360"
  },
  {
    "text": "mathematically provable So so like this gives us a middle ground and and it",
    "start": "2011360",
    "end": "2016480"
  },
  {
    "text": "deals is dictated by the importance of verifying the the verifying fault tolerance in spite of the complexity of",
    "start": "2016480",
    "end": "2022799"
  },
  {
    "text": "the space of faults Ah okay Yes So the hard part is to know",
    "start": "2022799",
    "end": "2029760"
  },
  {
    "text": "like what everything that could be in the in the like space of inputs Yes Woo Hey",
    "start": "2029760",
    "end": "2037440"
  },
  {
    "text": "All right So hopefully by this time what we're trying to do is like expose you to ideas",
    "start": "2037440",
    "end": "2044080"
  },
  {
    "text": "that were new to us or things that we actually like learn and and different perspectives that we acquire by reading",
    "start": "2044080",
    "end": "2050079"
  },
  {
    "text": "papers So even ourselves like as we were just pre like as we were like toying with which paper we were going to put on",
    "start": "2050079",
    "end": "2056240"
  },
  {
    "text": "different on different sections we actually learned that our point of views were a little bit different and then what I found valuable about one paper",
    "start": "2056240",
    "end": "2062638"
  },
  {
    "text": "were the things that you found maybe h and then what you found valuable were the things that I'm like ah whatever everybody knows that",
    "start": "2062639",
    "end": "2069398"
  },
  {
    "text": "but but it's interesting so like so so what we did for you in case you were asleep uh I like to do the same thing",
    "start": "2069399",
    "end": "2076240"
  },
  {
    "text": "with my presentations where we we put summaries uh but I did I do call them TLDDRs So Adrian is going to take our",
    "start": "2076240",
    "end": "2082878"
  },
  {
    "text": "first one Brilliant Thank you So we looked at three foundational papers one in each category agile lean and rugged",
    "start": "2082879",
    "end": "2089280"
  },
  {
    "text": "In the agile paper remember we we heard from David Parnass telegraphing to us from 21 years ago Designing for change",
    "start": "2089280",
    "end": "2096079"
  },
  {
    "text": "is designing for success So that's a really important lesson and we've heard a lot about that today Um in the lean",
    "start": "2096079",
    "end": "2102240"
  },
  {
    "text": "category we looked at scalability but at what cost frank McSherry 2015 A scalable",
    "start": "2102240",
    "end": "2107359"
  },
  {
    "text": "system may not necessarily be a lean system and so just pursuing scalability for its own right out of some context",
    "start": "2107359",
    "end": "2114160"
  },
  {
    "text": "may actually be quite costly and the marvelous cost metric to help us evaluate that In the rugged section it",
    "start": "2114160",
    "end": "2122720"
  },
  {
    "text": "us through thinking about availability in terms of yield and in terms of harvest and the ability of a system to",
    "start": "2122720",
    "end": "2128720"
  },
  {
    "text": "gracefully degrade and to still keep performing in some manner even in the face of stress Um and that's a great",
    "start": "2128720",
    "end": "2134720"
  },
  {
    "text": "design outcome Oh okay Mine again All right So in the",
    "start": "2134720",
    "end": "2140000"
  },
  {
    "text": "frontiers in the frontiers section we saw that when it comes to agile handling",
    "start": "2140000",
    "end": "2145280"
  },
  {
    "text": "state can be challenging If you have to operate a database at scale like you know this and and saving state and share",
    "start": "2145280",
    "end": "2151359"
  },
  {
    "text": "memory this trick that other like that other people that were using even at Facebook but this team leverage allowed",
    "start": "2151359",
    "end": "2156720"
  },
  {
    "text": "them to restart DB processes faster and the team itself became more agile because in terms of operations they were",
    "start": "2156720",
    "end": "2161920"
  },
  {
    "text": "able to do everything that took them 12 hours in the span of one So that is super powerful in in the terms of lean asking",
    "start": "2161920",
    "end": "2169599"
  },
  {
    "text": "the wrong question is wasteful and you think about you should think about what is truly needed uh if you can use that",
    "start": "2169599",
    "end": "2174960"
  },
  {
    "text": "approximation then you save a lot of effort and a lot of a lot of work and then actually like your your process is much leaner because you waste less",
    "start": "2174960",
    "end": "2180960"
  },
  {
    "text": "things and in the case of rugged then reason about from a good state and",
    "start": "2180960",
    "end": "2186240"
  },
  {
    "text": "reason about backwards can can just actually like help you determine if the ex the execution failures that could",
    "start": "2186240",
    "end": "2192000"
  },
  {
    "text": "have helped that could have prevented this output from happening So this is also very nice because like normally",
    "start": "2192000",
    "end": "2197520"
  },
  {
    "text": "we're used to thinking one way but we don't really think the way back and and and I think this type of thinking also",
    "start": "2197520",
    "end": "2203119"
  },
  {
    "text": "like helped us become a little bit more rugged because it gave us tools to actually understand what our systems were doing when they were there when",
    "start": "2203119",
    "end": "2208720"
  },
  {
    "text": "they were being run and um yeah so so that is like my rugged summary uh we",
    "start": "2208720",
    "end": "2215760"
  },
  {
    "text": "have compiled uh so obviously papers are fun read them sometimes a little bit challenging to get started into the into",
    "start": "2215760",
    "end": "2222400"
  },
  {
    "text": "reading but Adrienne's blog is great because it helps you at least understand the gist of what you're reading And I we",
    "start": "2222400",
    "end": "2229359"
  },
  {
    "text": "have a repo with everything that has to do with everything that we found helpful to to actually get started with papers",
    "start": "2229359",
    "end": "2235760"
  },
  {
    "text": "We have linked to all of the papers that we've discussed It's kind of a disservice because they're very very good and we had to distill them in five",
    "start": "2235760",
    "end": "2241839"
  },
  {
    "text": "minutes and and there's much more information that is super valuable So go check out the repo There's link to the",
    "start": "2241839",
    "end": "2247119"
  },
  {
    "text": "slides already I've already published them And this is a reminder to actually join your local papers for love If you",
    "start": "2247119",
    "end": "2253359"
  },
  {
    "text": "want to speak it's really great We're always looking for new speakers You don't even have to prepare a full length talk You can do a smaller one and and",
    "start": "2253359",
    "end": "2259440"
  },
  {
    "text": "and the organizers help you develop it And and the morning paper is great So So",
    "start": "2259440",
    "end": "2264640"
  },
  {
    "text": "read it And for now we have like dranks Yeah [Applause]",
    "start": "2264640",
    "end": "2279780"
  }
]