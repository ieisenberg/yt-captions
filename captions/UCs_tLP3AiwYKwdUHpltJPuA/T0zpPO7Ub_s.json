[
  {
    "start": "0",
    "end": "98000"
  },
  {
    "text": "[Music]",
    "start": "970",
    "end": "7838"
  },
  {
    "text": "hi everyone my name is oui",
    "start": "14240",
    "end": "15920"
  },
  {
    "text": "i'm the founder of the guild uh and",
    "start": "15920",
    "end": "18400"
  },
  {
    "text": "today i'll talk to you about",
    "start": "18400",
    "end": "20080"
  },
  {
    "text": "uh graphql in general and if it's a good",
    "start": "20080",
    "end": "22080"
  },
  {
    "text": "idea be to put",
    "start": "22080",
    "end": "23519"
  },
  {
    "text": "and use it between services",
    "start": "23519",
    "end": "26720"
  },
  {
    "text": "um so a bit about the guild and myself",
    "start": "26720",
    "end": "29199"
  },
  {
    "text": "we're a group of open source developers",
    "start": "29199",
    "end": "32078"
  },
  {
    "text": "probably the largest group of open",
    "start": "32079",
    "end": "34320"
  },
  {
    "text": "source in the graphical ecosystem",
    "start": "34320",
    "end": "37200"
  },
  {
    "text": "we build a lot of popular tools like the",
    "start": "37200",
    "end": "40399"
  },
  {
    "text": "graphql code generator graphql modules",
    "start": "40399",
    "end": "43840"
  },
  {
    "text": "which if you're building a large scale",
    "start": "43840",
    "end": "46719"
  },
  {
    "text": "graphql server",
    "start": "46719",
    "end": "47760"
  },
  {
    "text": "between different teams it's a really",
    "start": "47760",
    "end": "50879"
  },
  {
    "text": "good solution for that or graphql",
    "start": "50879",
    "end": "53039"
  },
  {
    "text": "inspector which",
    "start": "53039",
    "end": "54640"
  },
  {
    "text": "basically helps you run graphql in",
    "start": "54640",
    "end": "56879"
  },
  {
    "text": "production make sure you're",
    "start": "56879",
    "end": "58000"
  },
  {
    "text": "not doing development not doing breaking",
    "start": "58000",
    "end": "60079"
  },
  {
    "text": "changes",
    "start": "60079",
    "end": "61280"
  },
  {
    "text": "uh validates the production logs and",
    "start": "61280",
    "end": "64080"
  },
  {
    "text": "making sure that",
    "start": "64080",
    "end": "64960"
  },
  {
    "text": "everything is uh fine um",
    "start": "64960",
    "end": "68960"
  },
  {
    "text": "and we're doing we're bringing will",
    "start": "68960",
    "end": "71119"
  },
  {
    "text": "building a lot of tools",
    "start": "71119",
    "end": "72400"
  },
  {
    "text": "in the ecosystem as you can see um",
    "start": "72400",
    "end": "75759"
  },
  {
    "text": "and the the reason we build all those",
    "start": "75759",
    "end": "78159"
  },
  {
    "text": "tools is because",
    "start": "78159",
    "end": "79840"
  },
  {
    "text": "we think graphql helps kind of",
    "start": "79840",
    "end": "81840"
  },
  {
    "text": "re-imagine",
    "start": "81840",
    "end": "83040"
  },
  {
    "text": "uh how we look at data flows across the",
    "start": "83040",
    "end": "86080"
  },
  {
    "text": "stack",
    "start": "86080",
    "end": "87520"
  },
  {
    "text": "and what we want is for you to be able",
    "start": "87520",
    "end": "90560"
  },
  {
    "text": "to gradually adopt those",
    "start": "90560",
    "end": "92079"
  },
  {
    "text": "open source tools instead of but at the",
    "start": "92079",
    "end": "94400"
  },
  {
    "text": "end you can integrate them all into one",
    "start": "94400",
    "end": "96479"
  },
  {
    "text": "single platform um",
    "start": "96479",
    "end": "99520"
  },
  {
    "start": "98000",
    "end": "297000"
  },
  {
    "text": "so let's go back a bit and just give a",
    "start": "99520",
    "end": "102560"
  },
  {
    "text": "short",
    "start": "102560",
    "end": "103119"
  },
  {
    "text": "intro about graphql so graphql is a",
    "start": "103119",
    "end": "105920"
  },
  {
    "text": "query language",
    "start": "105920",
    "end": "106960"
  },
  {
    "text": "on top of a schema and the schema can",
    "start": "106960",
    "end": "109680"
  },
  {
    "text": "describe",
    "start": "109680",
    "end": "110320"
  },
  {
    "text": "data and the data can be any data so it",
    "start": "110320",
    "end": "113200"
  },
  {
    "text": "can be a data from a database or from a",
    "start": "113200",
    "end": "115280"
  },
  {
    "text": "file",
    "start": "115280",
    "end": "116240"
  },
  {
    "text": "or from an api and the power of that",
    "start": "116240",
    "end": "120560"
  },
  {
    "text": "query language is that you can ask for",
    "start": "120560",
    "end": "123200"
  },
  {
    "text": "just the things that you need and you",
    "start": "123200",
    "end": "124880"
  },
  {
    "text": "get a predictable result so that result",
    "start": "124880",
    "end": "127439"
  },
  {
    "text": "looks exactly like",
    "start": "127439",
    "end": "128879"
  },
  {
    "text": "you want it to look and you get just the",
    "start": "128879",
    "end": "131280"
  },
  {
    "text": "things that you look in the shape that",
    "start": "131280",
    "end": "132879"
  },
  {
    "text": "you want them to be",
    "start": "132879",
    "end": "134560"
  },
  {
    "text": "so it saves a lot of work for you let's",
    "start": "134560",
    "end": "137040"
  },
  {
    "text": "see an example so",
    "start": "137040",
    "end": "138239"
  },
  {
    "text": "if i'm describing a schema let's say a",
    "start": "138239",
    "end": "140239"
  },
  {
    "text": "schema of a user is a message",
    "start": "140239",
    "end": "143200"
  },
  {
    "text": "then a client can then ask i want the",
    "start": "143200",
    "end": "146480"
  },
  {
    "text": "user's id",
    "start": "146480",
    "end": "147680"
  },
  {
    "text": "and they from the user i want just the",
    "start": "147680",
    "end": "150080"
  },
  {
    "text": "name",
    "start": "150080",
    "end": "151280"
  },
  {
    "text": "so they will send one request to the",
    "start": "151280",
    "end": "153519"
  },
  {
    "text": "graphql engine the graphql engine will",
    "start": "153519",
    "end": "156000"
  },
  {
    "text": "bring the user extract the name from",
    "start": "156000",
    "end": "158319"
  },
  {
    "text": "that user in whatever way",
    "start": "158319",
    "end": "160560"
  },
  {
    "text": "we need to and then we'll get in a",
    "start": "160560",
    "end": "163519"
  },
  {
    "text": "single response",
    "start": "163519",
    "end": "164640"
  },
  {
    "text": "a predictable result that looks like",
    "start": "164640",
    "end": "166800"
  },
  {
    "text": "exactly like we expect with types",
    "start": "166800",
    "end": "169200"
  },
  {
    "text": "that we expect but if we need something",
    "start": "169200",
    "end": "171920"
  },
  {
    "text": "more deep like for example the user's",
    "start": "171920",
    "end": "173680"
  },
  {
    "text": "name and messages",
    "start": "173680",
    "end": "175440"
  },
  {
    "text": "then again we will send one single",
    "start": "175440",
    "end": "176959"
  },
  {
    "text": "response and one signal request",
    "start": "176959",
    "end": "179440"
  },
  {
    "text": "um then in parallel fetch",
    "start": "179440",
    "end": "182560"
  },
  {
    "text": "the name and the messages that's graphql",
    "start": "182560",
    "end": "184959"
  },
  {
    "text": "is doing for us",
    "start": "184959",
    "end": "186640"
  },
  {
    "text": "um and then let's say for each message",
    "start": "186640",
    "end": "188959"
  },
  {
    "text": "we want the content and the content",
    "start": "188959",
    "end": "190480"
  },
  {
    "text": "maybe comes from a third-party api",
    "start": "190480",
    "end": "192560"
  },
  {
    "text": "or a wordpress or something like that",
    "start": "192560",
    "end": "195280"
  },
  {
    "text": "the client doesn't care",
    "start": "195280",
    "end": "196640"
  },
  {
    "text": "and the client will just get back one",
    "start": "196640",
    "end": "199120"
  },
  {
    "text": "predictable results with one",
    "start": "199120",
    "end": "200959"
  },
  {
    "text": "and one response um so as you can see",
    "start": "200959",
    "end": "204400"
  },
  {
    "text": "it's very powerful and there's many",
    "start": "204400",
    "end": "205840"
  },
  {
    "text": "reasons why it kind of took over the",
    "start": "205840",
    "end": "207920"
  },
  {
    "text": "fronted communication",
    "start": "207920",
    "end": "209440"
  },
  {
    "text": "in recent years but let's look a bit",
    "start": "209440",
    "end": "212720"
  },
  {
    "text": "about how it works",
    "start": "212720",
    "end": "214000"
  },
  {
    "text": "uh inside because this is an important",
    "start": "214000",
    "end": "217040"
  },
  {
    "text": "point when we move to services",
    "start": "217040",
    "end": "219440"
  },
  {
    "text": "so by describing this we basically by",
    "start": "219440",
    "end": "221519"
  },
  {
    "text": "describing the schema we describe",
    "start": "221519",
    "end": "224080"
  },
  {
    "text": "uh the schema and the resolvers",
    "start": "224080",
    "end": "225120"
  },
  {
    "text": "resolvers are basically very simple",
    "start": "225120",
    "end": "227680"
  },
  {
    "text": "functions",
    "start": "227680",
    "end": "228879"
  },
  {
    "text": "that um they get an input they do some",
    "start": "228879",
    "end": "232319"
  },
  {
    "text": "work let's say call",
    "start": "232319",
    "end": "233360"
  },
  {
    "text": "server and return a predictable output",
    "start": "233360",
    "end": "236400"
  },
  {
    "text": "so we need to write those simple",
    "start": "236400",
    "end": "237920"
  },
  {
    "text": "resolvers",
    "start": "237920",
    "end": "239439"
  },
  {
    "text": "but then what the graphql engine does",
    "start": "239439",
    "end": "241760"
  },
  {
    "text": "itself everything in that slide",
    "start": "241760",
    "end": "243599"
  },
  {
    "text": "is basically happening automatic",
    "start": "243599",
    "end": "246159"
  },
  {
    "text": "automatically for you",
    "start": "246159",
    "end": "247840"
  },
  {
    "text": "is that when the graphical engine gets a",
    "start": "247840",
    "end": "250959"
  },
  {
    "text": "query it will basically take the",
    "start": "250959",
    "end": "254000"
  },
  {
    "text": "first reservoir run it and based on that",
    "start": "254000",
    "end": "257359"
  },
  {
    "text": "result",
    "start": "257359",
    "end": "258639"
  },
  {
    "text": "and the query it will bring the other",
    "start": "258639",
    "end": "261519"
  },
  {
    "text": "execution boxes",
    "start": "261519",
    "end": "262880"
  },
  {
    "text": "that it needs to be run and will execute",
    "start": "262880",
    "end": "265280"
  },
  {
    "text": "them in parallel",
    "start": "265280",
    "end": "267919"
  },
  {
    "text": "then it will take the results put them",
    "start": "267919",
    "end": "270639"
  },
  {
    "text": "back in the right place but for messages",
    "start": "270639",
    "end": "272639"
  },
  {
    "text": "for example we get an array of three",
    "start": "272639",
    "end": "274560"
  },
  {
    "text": "measure three messages",
    "start": "274560",
    "end": "276479"
  },
  {
    "text": "so then again the execution engine will",
    "start": "276479",
    "end": "278880"
  },
  {
    "text": "automatically for each message",
    "start": "278880",
    "end": "281040"
  },
  {
    "text": "will run the date and the title because",
    "start": "281040",
    "end": "283199"
  },
  {
    "text": "that's what we asked it in the query",
    "start": "283199",
    "end": "285759"
  },
  {
    "text": "and we'll get the full result so this is",
    "start": "285759",
    "end": "288479"
  },
  {
    "text": "something that usually",
    "start": "288479",
    "end": "289840"
  },
  {
    "text": "we do manually whether on the front and",
    "start": "289840",
    "end": "291680"
  },
  {
    "text": "on the back end usually on the front end",
    "start": "291680",
    "end": "293759"
  },
  {
    "text": "and graphql is basically automating that",
    "start": "293759",
    "end": "296160"
  },
  {
    "text": "work for us",
    "start": "296160",
    "end": "298160"
  },
  {
    "start": "297000",
    "end": "583000"
  },
  {
    "text": "so overall what we saw is that you know",
    "start": "298160",
    "end": "301280"
  },
  {
    "text": "graphql helps us",
    "start": "301280",
    "end": "302720"
  },
  {
    "text": "between the client and the server and",
    "start": "302720",
    "end": "304560"
  },
  {
    "text": "it's more performant that we save yes",
    "start": "304560",
    "end": "306479"
  },
  {
    "text": "saves us a lot of work and a lot of code",
    "start": "306479",
    "end": "309440"
  },
  {
    "text": "on the client",
    "start": "309440",
    "end": "310880"
  },
  {
    "text": "um but what's what about the server i",
    "start": "310880",
    "end": "313440"
  },
  {
    "text": "mean",
    "start": "313440",
    "end": "314080"
  },
  {
    "text": "you know what about this area like",
    "start": "314080",
    "end": "316000"
  },
  {
    "text": "basically we put a graphql",
    "start": "316000",
    "end": "317680"
  },
  {
    "text": "one of the powerful things about graphql",
    "start": "317680",
    "end": "319600"
  },
  {
    "text": "is that we can put it over",
    "start": "319600",
    "end": "321600"
  },
  {
    "text": "any existing infrastructure which is",
    "start": "321600",
    "end": "324240"
  },
  {
    "text": "great but that means that",
    "start": "324240",
    "end": "325840"
  },
  {
    "text": "what did we neglect the area in the back",
    "start": "325840",
    "end": "330400"
  },
  {
    "text": "and now that we're let's say we're happy",
    "start": "330400",
    "end": "332720"
  },
  {
    "text": "graphical users in our company",
    "start": "332720",
    "end": "334880"
  },
  {
    "text": "uh our product and our products and our",
    "start": "334880",
    "end": "337680"
  },
  {
    "text": "front",
    "start": "337680",
    "end": "338000"
  },
  {
    "text": "ends are using graphql they're happy",
    "start": "338000",
    "end": "340560"
  },
  {
    "text": "what we see a lot in companies is",
    "start": "340560",
    "end": "342160"
  },
  {
    "text": "they're",
    "start": "342160",
    "end": "342639"
  },
  {
    "text": "the main the next thing that they want",
    "start": "342639",
    "end": "344720"
  },
  {
    "text": "to do is actually to integrate that",
    "start": "344720",
    "end": "346479"
  },
  {
    "text": "uh into the backends and there's good",
    "start": "346479",
    "end": "349440"
  },
  {
    "text": "reasons why people want that right",
    "start": "349440",
    "end": "351199"
  },
  {
    "text": "because",
    "start": "351199",
    "end": "352320"
  },
  {
    "text": "um uh you know we want the query",
    "start": "352320",
    "end": "355280"
  },
  {
    "text": "language we want the type safety and",
    "start": "355280",
    "end": "357440"
  },
  {
    "text": "things like that now we can actually",
    "start": "357440",
    "end": "361520"
  },
  {
    "text": "there's a few ways of doing that and",
    "start": "361520",
    "end": "364479"
  },
  {
    "text": "while",
    "start": "364479",
    "end": "365199"
  },
  {
    "text": "showing you how it's possible i'll also",
    "start": "365199",
    "end": "367600"
  },
  {
    "text": "ask",
    "start": "367600",
    "end": "368479"
  },
  {
    "text": "if it's actually a good idea so one",
    "start": "368479",
    "end": "371280"
  },
  {
    "text": "thing to do",
    "start": "371280",
    "end": "372000"
  },
  {
    "text": "is that we can actually um",
    "start": "372000",
    "end": "375280"
  },
  {
    "text": "we can actually start and work on the",
    "start": "375280",
    "end": "377680"
  },
  {
    "text": "existing",
    "start": "377680",
    "end": "378560"
  },
  {
    "text": "backend services and start implementing",
    "start": "378560",
    "end": "380800"
  },
  {
    "text": "graphql",
    "start": "380800",
    "end": "381680"
  },
  {
    "text": "in them so we can go to existing java",
    "start": "381680",
    "end": "384000"
  },
  {
    "text": "servers or",
    "start": "384000",
    "end": "385280"
  },
  {
    "text": "the net servers or whatever we have and",
    "start": "385280",
    "end": "388720"
  },
  {
    "text": "start integrating graphql",
    "start": "388720",
    "end": "390479"
  },
  {
    "text": "there another option is to actually",
    "start": "390479",
    "end": "393280"
  },
  {
    "text": "build like small",
    "start": "393280",
    "end": "394319"
  },
  {
    "text": "middlewares or small gateways for each",
    "start": "394319",
    "end": "396479"
  },
  {
    "text": "service",
    "start": "396479",
    "end": "397520"
  },
  {
    "text": "that convert what they're doing manually",
    "start": "397520",
    "end": "399680"
  },
  {
    "text": "into graphql",
    "start": "399680",
    "end": "401600"
  },
  {
    "text": "which is fine it's possible and there's",
    "start": "401600",
    "end": "404479"
  },
  {
    "text": "a lot of companies that advocate for",
    "start": "404479",
    "end": "406479"
  },
  {
    "text": "that",
    "start": "406479",
    "end": "407600"
  },
  {
    "text": "the thing is that there's some issues",
    "start": "407600",
    "end": "409759"
  },
  {
    "text": "with that",
    "start": "409759",
    "end": "411120"
  },
  {
    "text": "first thing is that um those are",
    "start": "411120",
    "end": "414479"
  },
  {
    "text": "existing services like we're not coming",
    "start": "414479",
    "end": "416639"
  },
  {
    "text": "from void",
    "start": "416639",
    "end": "417599"
  },
  {
    "text": "usually so and those teams",
    "start": "417599",
    "end": "420720"
  },
  {
    "text": "have their own knowledge and they have",
    "start": "420720",
    "end": "423199"
  },
  {
    "text": "also their own",
    "start": "423199",
    "end": "425360"
  },
  {
    "text": "features that they need to implement in",
    "start": "425360",
    "end": "427120"
  },
  {
    "text": "their own work you can't stop",
    "start": "427120",
    "end": "428960"
  },
  {
    "text": "everything it's just like learn new a",
    "start": "428960",
    "end": "431039"
  },
  {
    "text": "new protocol",
    "start": "431039",
    "end": "432400"
  },
  {
    "text": "and start exposing and converting your",
    "start": "432400",
    "end": "434960"
  },
  {
    "text": "systems",
    "start": "434960",
    "end": "436000"
  },
  {
    "text": "um it can take years if at all possible",
    "start": "436000",
    "end": "440160"
  },
  {
    "text": "the other problem is that the reason i",
    "start": "440160",
    "end": "443039"
  },
  {
    "text": "showed you how graphql works internally",
    "start": "443039",
    "end": "445039"
  },
  {
    "text": "is that you saw",
    "start": "445039",
    "end": "446000"
  },
  {
    "text": "yeah it automates a lot of work but it's",
    "start": "446000",
    "end": "448240"
  },
  {
    "text": "also it's still an execution",
    "start": "448240",
    "end": "450639"
  },
  {
    "text": "and the question is do we want that",
    "start": "450639",
    "end": "452880"
  },
  {
    "text": "execution to actually",
    "start": "452880",
    "end": "454240"
  },
  {
    "text": "run uh on the server so",
    "start": "454240",
    "end": "458080"
  },
  {
    "text": "what i mean by that is um let's look a",
    "start": "458080",
    "end": "461360"
  },
  {
    "text": "bit about the",
    "start": "461360",
    "end": "462240"
  },
  {
    "text": "back end right now so between the client",
    "start": "462240",
    "end": "464000"
  },
  {
    "text": "and the front end",
    "start": "464000",
    "end": "465280"
  },
  {
    "text": "between the client and the graphql um",
    "start": "465280",
    "end": "469199"
  },
  {
    "text": "it's valuable for the graphql to",
    "start": "469199",
    "end": "471199"
  },
  {
    "text": "basically do most of their work and send",
    "start": "471199",
    "end": "474560"
  },
  {
    "text": "very thin responses to the client",
    "start": "474560",
    "end": "476319"
  },
  {
    "text": "because we have a mobile network in",
    "start": "476319",
    "end": "478080"
  },
  {
    "text": "between and the client maybe is very",
    "start": "478080",
    "end": "479840"
  },
  {
    "text": "thin client",
    "start": "479840",
    "end": "481120"
  },
  {
    "text": "and we want to get this little",
    "start": "481120",
    "end": "484160"
  },
  {
    "text": "job or a little work as possible in the",
    "start": "484160",
    "end": "486160"
  },
  {
    "text": "client but between service and service",
    "start": "486160",
    "end": "488639"
  },
  {
    "text": "maybe",
    "start": "488639",
    "end": "490000"
  },
  {
    "text": "we don't want that we want actually the",
    "start": "490000",
    "end": "491680"
  },
  {
    "text": "service the services to be",
    "start": "491680",
    "end": "493680"
  },
  {
    "text": "predictable to always return the same",
    "start": "493680",
    "end": "496479"
  },
  {
    "text": "result",
    "start": "496479",
    "end": "497440"
  },
  {
    "text": "and maybe we want that work of taking",
    "start": "497440",
    "end": "500319"
  },
  {
    "text": "what we want and",
    "start": "500319",
    "end": "502319"
  },
  {
    "text": "orchestrating and waiting for all those",
    "start": "502319",
    "end": "505039"
  },
  {
    "text": "calls we want that to be happening",
    "start": "505039",
    "end": "507120"
  },
  {
    "text": "actually on the consumer",
    "start": "507120",
    "end": "509440"
  },
  {
    "text": "service um but maybe we still",
    "start": "509440",
    "end": "512800"
  },
  {
    "text": "want even if we want that to happen and",
    "start": "512800",
    "end": "515760"
  },
  {
    "text": "maybe it's maybe not such a good idea to",
    "start": "515760",
    "end": "517919"
  },
  {
    "text": "just",
    "start": "517919",
    "end": "518320"
  },
  {
    "text": "put graphql as is on our server services",
    "start": "518320",
    "end": "522479"
  },
  {
    "text": "in some cases maybe we still want to get",
    "start": "522479",
    "end": "525839"
  },
  {
    "text": "the stuff that we wanted from graphql",
    "start": "525839",
    "end": "528320"
  },
  {
    "text": "which is this",
    "start": "528320",
    "end": "528959"
  },
  {
    "text": "type schema and the query language and",
    "start": "528959",
    "end": "532080"
  },
  {
    "text": "the engine we want to automate that work",
    "start": "532080",
    "end": "534399"
  },
  {
    "text": "even though the consumer will run that",
    "start": "534399",
    "end": "536720"
  },
  {
    "text": "work",
    "start": "536720",
    "end": "538720"
  },
  {
    "text": "so when we we usually work with",
    "start": "538720",
    "end": "541839"
  },
  {
    "text": "enterprise clients or like with",
    "start": "541839",
    "end": "543600"
  },
  {
    "text": "enterprise companies and they have a lot",
    "start": "543600",
    "end": "545360"
  },
  {
    "text": "of existing infrastructure and a lot of",
    "start": "545360",
    "end": "547360"
  },
  {
    "text": "services",
    "start": "547360",
    "end": "548000"
  },
  {
    "text": "are already having uh their own",
    "start": "548000",
    "end": "550240"
  },
  {
    "text": "protocols in their own work like maybe",
    "start": "550240",
    "end": "552399"
  },
  {
    "text": "it's",
    "start": "552399",
    "end": "552959"
  },
  {
    "text": "open api and swagger maybe grpc",
    "start": "552959",
    "end": "556320"
  },
  {
    "text": "um so what we thought was",
    "start": "556320",
    "end": "559440"
  },
  {
    "text": "can we take the um",
    "start": "559440",
    "end": "563120"
  },
  {
    "text": "the existing schemas and the existing",
    "start": "563120",
    "end": "565120"
  },
  {
    "text": "protocols",
    "start": "565120",
    "end": "566399"
  },
  {
    "text": "uh and maybe if they don't have existing",
    "start": "566399",
    "end": "568399"
  },
  {
    "text": "schemas and protocols because some apis",
    "start": "568399",
    "end": "570560"
  },
  {
    "text": "are just",
    "start": "570560",
    "end": "571200"
  },
  {
    "text": "they don't have it maybe you can use",
    "start": "571200",
    "end": "573120"
  },
  {
    "text": "just the docs or maybe even",
    "start": "573120",
    "end": "574800"
  },
  {
    "text": "in that even if they don't have the dogs",
    "start": "574800",
    "end": "576640"
  },
  {
    "text": "than just the live data",
    "start": "576640",
    "end": "578640"
  },
  {
    "text": "that we have because those services are",
    "start": "578640",
    "end": "580800"
  },
  {
    "text": "running and existing already",
    "start": "580800",
    "end": "582880"
  },
  {
    "text": "and can we do something um",
    "start": "582880",
    "end": "586160"
  },
  {
    "start": "583000",
    "end": "748000"
  },
  {
    "text": "can we do something in actually to",
    "start": "586160",
    "end": "588560"
  },
  {
    "text": "generate from that what we actually want",
    "start": "588560",
    "end": "591519"
  },
  {
    "text": "so can we take those let's say grpc",
    "start": "591519",
    "end": "594800"
  },
  {
    "text": "services that exist or",
    "start": "594800",
    "end": "596399"
  },
  {
    "text": "soap services that exist generate from",
    "start": "596399",
    "end": "599680"
  },
  {
    "text": "them and from whatever we currently know",
    "start": "599680",
    "end": "602399"
  },
  {
    "text": "a graphql schema and maybe in the second",
    "start": "602399",
    "end": "605120"
  },
  {
    "text": "phase we",
    "start": "605120",
    "end": "605839"
  },
  {
    "text": "take all those schemas and merge them",
    "start": "605839",
    "end": "607600"
  },
  {
    "text": "into one graph into one graphical schema",
    "start": "607600",
    "end": "610640"
  },
  {
    "text": "and again without making them doing any",
    "start": "610640",
    "end": "613600"
  },
  {
    "text": "change",
    "start": "613600",
    "end": "614160"
  },
  {
    "text": "just relying on the existing",
    "start": "614160",
    "end": "615760"
  },
  {
    "text": "technologies that they have",
    "start": "615760",
    "end": "618240"
  },
  {
    "text": "so that's mesh that's graphql mesh",
    "start": "618240",
    "end": "621680"
  },
  {
    "text": "um so that's the new library that we",
    "start": "621680",
    "end": "624560"
  },
  {
    "text": "just released",
    "start": "624560",
    "end": "625519"
  },
  {
    "text": "um and the tagline is query anything and",
    "start": "625519",
    "end": "628959"
  },
  {
    "text": "run anywhere so i can query",
    "start": "628959",
    "end": "632160"
  },
  {
    "text": "any protocol that i want any existing",
    "start": "632160",
    "end": "634640"
  },
  {
    "text": "service that i want",
    "start": "634640",
    "end": "636480"
  },
  {
    "text": "um and i can run that execution wherever",
    "start": "636480",
    "end": "639920"
  },
  {
    "text": "that i choose to to run it so",
    "start": "639920",
    "end": "643440"
  },
  {
    "text": "you know i can actually take from an",
    "start": "643440",
    "end": "646720"
  },
  {
    "text": "open api",
    "start": "646720",
    "end": "647680"
  },
  {
    "text": "service i can convert it to graphql i",
    "start": "647680",
    "end": "649600"
  },
  {
    "text": "can take a grpc service",
    "start": "649600",
    "end": "651440"
  },
  {
    "text": "and correct convert that schema into",
    "start": "651440",
    "end": "653360"
  },
  {
    "text": "graphql",
    "start": "653360",
    "end": "654480"
  },
  {
    "text": "even an sql service or a queue service",
    "start": "654480",
    "end": "657920"
  },
  {
    "text": "and convert them into graphql or",
    "start": "657920",
    "end": "659760"
  },
  {
    "text": "graphical subscription",
    "start": "659760",
    "end": "661200"
  },
  {
    "text": "events but the thing is",
    "start": "661200",
    "end": "665040"
  },
  {
    "text": "so what we could achieve with that is",
    "start": "665040",
    "end": "667120"
  },
  {
    "text": "that we can take the best things that we",
    "start": "667120",
    "end": "669200"
  },
  {
    "text": "want from graphql",
    "start": "669200",
    "end": "671200"
  },
  {
    "text": "using our existing services um",
    "start": "671200",
    "end": "674880"
  },
  {
    "text": "and also executing it where and get all",
    "start": "674880",
    "end": "677680"
  },
  {
    "text": "the benefits we want like the best the",
    "start": "677680",
    "end": "679360"
  },
  {
    "text": "better",
    "start": "679360",
    "end": "679839"
  },
  {
    "text": "dev experience that we got from graphql",
    "start": "679839",
    "end": "682720"
  },
  {
    "text": "but the execution can be anywhere",
    "start": "682720",
    "end": "685120"
  },
  {
    "text": "and basically what's going on between",
    "start": "685120",
    "end": "686880"
  },
  {
    "text": "the wires",
    "start": "686880",
    "end": "688240"
  },
  {
    "text": "might still be grpc or may still be",
    "start": "688240",
    "end": "692880"
  },
  {
    "text": "rest or soap which may be our better",
    "start": "693440",
    "end": "696880"
  },
  {
    "text": "protocols for that or just better",
    "start": "696880",
    "end": "699120"
  },
  {
    "text": "protocols for you",
    "start": "699120",
    "end": "701120"
  },
  {
    "text": "so we can just take all those sources",
    "start": "701120",
    "end": "704320"
  },
  {
    "text": "sources merge them into one let's say a",
    "start": "704320",
    "end": "707120"
  },
  {
    "text": "central gateway",
    "start": "707120",
    "end": "708320"
  },
  {
    "text": "or like a point that you know merges all",
    "start": "708320",
    "end": "711120"
  },
  {
    "text": "of those into one",
    "start": "711120",
    "end": "712880"
  },
  {
    "text": "but we can also completely distribute",
    "start": "712880",
    "end": "714639"
  },
  {
    "text": "distributed so every service on the",
    "start": "714639",
    "end": "716959"
  },
  {
    "text": "network",
    "start": "716959",
    "end": "717600"
  },
  {
    "text": "whether it's a gateway that needs to",
    "start": "717600",
    "end": "719600"
  },
  {
    "text": "aggregate a lot of things",
    "start": "719600",
    "end": "721200"
  },
  {
    "text": "or maybe it's just another service on",
    "start": "721200",
    "end": "722959"
  },
  {
    "text": "the network like let's say",
    "start": "722959",
    "end": "724880"
  },
  {
    "text": "a machine learning service that needs to",
    "start": "724880",
    "end": "726720"
  },
  {
    "text": "gather from a lot of different services",
    "start": "726720",
    "end": "728639"
  },
  {
    "text": "data all the time",
    "start": "728639",
    "end": "730160"
  },
  {
    "text": "they could have the experience of",
    "start": "730160",
    "end": "731920"
  },
  {
    "text": "basically one graph",
    "start": "731920",
    "end": "734320"
  },
  {
    "text": "getting all the data from all of the",
    "start": "734320",
    "end": "736320"
  },
  {
    "text": "services that they need to",
    "start": "736320",
    "end": "738320"
  },
  {
    "text": "but the execution burden is on them and",
    "start": "738320",
    "end": "740959"
  },
  {
    "text": "not on the services themselves",
    "start": "740959",
    "end": "742720"
  },
  {
    "text": "which i think is a the scalable and",
    "start": "742720",
    "end": "745120"
  },
  {
    "text": "distributed way of doing it",
    "start": "745120",
    "end": "748079"
  },
  {
    "start": "748000",
    "end": "917000"
  },
  {
    "text": "so let's see an example so what i have",
    "start": "748079",
    "end": "750079"
  },
  {
    "text": "here this is a very simple",
    "start": "750079",
    "end": "751600"
  },
  {
    "text": "example so what i have here is basically",
    "start": "751600",
    "end": "754800"
  },
  {
    "text": "two sources uh that are out of my",
    "start": "754800",
    "end": "757519"
  },
  {
    "text": "control",
    "start": "757519",
    "end": "758000"
  },
  {
    "text": "one is a public swagger a public open",
    "start": "758000",
    "end": "760800"
  },
  {
    "text": "api",
    "start": "760800",
    "end": "761680"
  },
  {
    "text": "service that holds all the cities in the",
    "start": "761680",
    "end": "764000"
  },
  {
    "text": "world and their information",
    "start": "764000",
    "end": "766320"
  },
  {
    "text": "and the other one is the same uh is also",
    "start": "766320",
    "end": "769040"
  },
  {
    "text": "a public api that holds the weather",
    "start": "769040",
    "end": "771600"
  },
  {
    "text": "now with mesh config just by configuring",
    "start": "771600",
    "end": "775120"
  },
  {
    "text": "the source for each one and configuring",
    "start": "775120",
    "end": "777360"
  },
  {
    "text": "the handler in this case it's typescript",
    "start": "777360",
    "end": "780240"
  },
  {
    "text": "swagger but it can be grpc or soap or",
    "start": "780240",
    "end": "782959"
  },
  {
    "text": "whatever",
    "start": "782959",
    "end": "784160"
  },
  {
    "text": "just by doing that i was able to",
    "start": "784160",
    "end": "786160"
  },
  {
    "text": "generate",
    "start": "786160",
    "end": "787600"
  },
  {
    "text": "a working graphql sdk let's see it in",
    "start": "787600",
    "end": "790959"
  },
  {
    "text": "action so what i'm doing here is that",
    "start": "790959",
    "end": "793200"
  },
  {
    "text": "i'm querying",
    "start": "793200",
    "end": "794160"
  },
  {
    "text": "um fine cities uh using get which is",
    "start": "794160",
    "end": "797839"
  },
  {
    "text": "as you can see from the name it's",
    "start": "797839",
    "end": "799440"
  },
  {
    "text": "actually a rest and pointless open api",
    "start": "799440",
    "end": "803040"
  },
  {
    "text": "endpoint",
    "start": "803040",
    "end": "803920"
  },
  {
    "text": "i'm sending it the name of the city that",
    "start": "803920",
    "end": "805839"
  },
  {
    "text": "i want tel aviv",
    "start": "805839",
    "end": "807279"
  },
  {
    "text": "and now i can query just the data that i",
    "start": "807279",
    "end": "809600"
  },
  {
    "text": "need to get",
    "start": "809600",
    "end": "810320"
  },
  {
    "text": "and i get auto completion and graphical",
    "start": "810320",
    "end": "812800"
  },
  {
    "text": "like this interface that you",
    "start": "812800",
    "end": "814000"
  },
  {
    "text": "see here i didn't write any single line",
    "start": "814000",
    "end": "816720"
  },
  {
    "text": "of",
    "start": "816720",
    "end": "817120"
  },
  {
    "text": "code of in graphql and i get this",
    "start": "817120",
    "end": "820399"
  },
  {
    "text": "and the service didn't change at all",
    "start": "820399",
    "end": "822160"
  },
  {
    "text": "this service doesn't know that i'm doing",
    "start": "822160",
    "end": "823920"
  },
  {
    "text": "it",
    "start": "823920",
    "end": "824720"
  },
  {
    "text": "so it doesn't have any burden on it but",
    "start": "824720",
    "end": "827519"
  },
  {
    "text": "i get the",
    "start": "827519",
    "end": "828160"
  },
  {
    "text": "as the consumer i get exactly the ex my",
    "start": "828160",
    "end": "830880"
  },
  {
    "text": "dream experience",
    "start": "830880",
    "end": "832800"
  },
  {
    "text": "um that i love always get with graphql",
    "start": "832800",
    "end": "836079"
  },
  {
    "text": "but then what we also want is we want to",
    "start": "836079",
    "end": "838560"
  },
  {
    "text": "link",
    "start": "838560",
    "end": "839360"
  },
  {
    "text": "those two services together so we have",
    "start": "839360",
    "end": "842480"
  },
  {
    "text": "the places api and the weather api and i",
    "start": "842480",
    "end": "844880"
  },
  {
    "text": "can have",
    "start": "844880",
    "end": "845839"
  },
  {
    "text": "there also because of their schemas and",
    "start": "845839",
    "end": "847680"
  },
  {
    "text": "the knowledge that i have they're fully",
    "start": "847680",
    "end": "849120"
  },
  {
    "text": "typed so i",
    "start": "849120",
    "end": "849839"
  },
  {
    "text": "have all the information about them so i",
    "start": "849839",
    "end": "852560"
  },
  {
    "text": "can just in one single resolver",
    "start": "852560",
    "end": "855519"
  },
  {
    "text": "show or explain how they i can convert",
    "start": "855519",
    "end": "859279"
  },
  {
    "text": "let's say a daily forecast",
    "start": "859279",
    "end": "861600"
  },
  {
    "text": "uh into a city and now",
    "start": "861600",
    "end": "865120"
  },
  {
    "text": "just by one function and one config",
    "start": "865120",
    "end": "868880"
  },
  {
    "text": "what i can do now is suddenly i can have",
    "start": "868880",
    "end": "871600"
  },
  {
    "text": "a daily forecast",
    "start": "871600",
    "end": "873120"
  },
  {
    "text": "uh um a daily forecast um",
    "start": "873120",
    "end": "877199"
  },
  {
    "text": "field on top of the city's",
    "start": "877199",
    "end": "881199"
  },
  {
    "text": "api so now for the consumer it feels",
    "start": "881199",
    "end": "884959"
  },
  {
    "text": "like i have",
    "start": "884959",
    "end": "885680"
  },
  {
    "text": "one magical graphql endpoint that",
    "start": "885680",
    "end": "888160"
  },
  {
    "text": "queries",
    "start": "888160",
    "end": "889279"
  },
  {
    "text": "everything that i need and the",
    "start": "889279",
    "end": "890560"
  },
  {
    "text": "connection between them a full graph",
    "start": "890560",
    "end": "893440"
  },
  {
    "text": "so it's basically schema stitching on",
    "start": "893440",
    "end": "895360"
  },
  {
    "text": "federation",
    "start": "895360",
    "end": "896720"
  },
  {
    "text": "but on any source",
    "start": "896720",
    "end": "899839"
  },
  {
    "text": "whether it's graphql or not and",
    "start": "899839",
    "end": "902959"
  },
  {
    "text": "different sources as well i can merge",
    "start": "902959",
    "end": "905040"
  },
  {
    "text": "sql source",
    "start": "905040",
    "end": "906320"
  },
  {
    "text": "together with uh soap services and get",
    "start": "906320",
    "end": "909440"
  },
  {
    "text": "one single graph",
    "start": "909440",
    "end": "911120"
  },
  {
    "text": "and again without changing any of the",
    "start": "911120",
    "end": "913040"
  },
  {
    "text": "sources",
    "start": "913040",
    "end": "914800"
  },
  {
    "text": "so i i think this is really a",
    "start": "914800",
    "end": "916720"
  },
  {
    "text": "revolutionary thing and",
    "start": "916720",
    "end": "918720"
  },
  {
    "start": "917000",
    "end": "984000"
  },
  {
    "text": "you know we're just getting started like",
    "start": "918720",
    "end": "920480"
  },
  {
    "text": "we already have",
    "start": "920480",
    "end": "921920"
  },
  {
    "text": "since the launch we have like open api",
    "start": "921920",
    "end": "924399"
  },
  {
    "text": "and swagger grpc soap",
    "start": "924399",
    "end": "926880"
  },
  {
    "text": "graphql sqlo data which",
    "start": "926880",
    "end": "929920"
  },
  {
    "text": "querying all data with graphql is an",
    "start": "929920",
    "end": "932320"
  },
  {
    "text": "extremely powerful experience",
    "start": "932320",
    "end": "935920"
  },
  {
    "text": "and because old data has very similar",
    "start": "936240",
    "end": "939759"
  },
  {
    "text": "characteristics but",
    "start": "939759",
    "end": "940880"
  },
  {
    "text": "then what we're doing also is we're",
    "start": "940880",
    "end": "942480"
  },
  {
    "text": "removing the the debate between",
    "start": "942480",
    "end": "945279"
  },
  {
    "text": "graphql versus something graphical",
    "start": "945279",
    "end": "948079"
  },
  {
    "text": "versus all data or versus something we",
    "start": "948079",
    "end": "950160"
  },
  {
    "text": "basically bring on the tools of graphql",
    "start": "950160",
    "end": "952800"
  },
  {
    "text": "on any source",
    "start": "952800",
    "end": "955839"
  },
  {
    "text": "and again like there's a lot of",
    "start": "956079",
    "end": "957680"
  },
  {
    "text": "customizations that you would want to",
    "start": "957680",
    "end": "959519"
  },
  {
    "text": "have so",
    "start": "959519",
    "end": "960399"
  },
  {
    "text": "you know you can the merging strategies",
    "start": "960399",
    "end": "962399"
  },
  {
    "text": "can be very different between stitching",
    "start": "962399",
    "end": "964240"
  },
  {
    "text": "and federation",
    "start": "964240",
    "end": "965519"
  },
  {
    "text": "you can turn non-federated services",
    "start": "965519",
    "end": "968639"
  },
  {
    "text": "into federated services and you can do",
    "start": "968639",
    "end": "971839"
  },
  {
    "text": "all kinds of transformation you can",
    "start": "971839",
    "end": "973519"
  },
  {
    "text": "cache um each source you can mock each",
    "start": "973519",
    "end": "977279"
  },
  {
    "text": "each source you can",
    "start": "977279",
    "end": "979040"
  },
  {
    "text": "rename the sources so basically the",
    "start": "979040",
    "end": "981040"
  },
  {
    "text": "output api that you get is exactly what",
    "start": "981040",
    "end": "983279"
  },
  {
    "text": "you want",
    "start": "983279",
    "end": "984880"
  },
  {
    "start": "984000",
    "end": "1143000"
  },
  {
    "text": "now the if we take it one step further",
    "start": "984880",
    "end": "988800"
  },
  {
    "text": "so",
    "start": "988800",
    "end": "989199"
  },
  {
    "text": "until now this is this was great for us",
    "start": "989199",
    "end": "992240"
  },
  {
    "text": "when we work with companies and it's",
    "start": "992240",
    "end": "994480"
  },
  {
    "text": "it's an extremely powerful library",
    "start": "994480",
    "end": "996320"
  },
  {
    "text": "but then we thought well maybe we can",
    "start": "996320",
    "end": "998160"
  },
  {
    "text": "take it one step further",
    "start": "998160",
    "end": "1000000"
  },
  {
    "text": "like everything i showed you here i can",
    "start": "1000000",
    "end": "1002000"
  },
  {
    "text": "actually expose it",
    "start": "1002000",
    "end": "1003279"
  },
  {
    "text": "as a public open source or not open",
    "start": "1003279",
    "end": "1006240"
  },
  {
    "text": "source module",
    "start": "1006240",
    "end": "1007600"
  },
  {
    "text": "like for example throughout my company",
    "start": "1007600",
    "end": "1010000"
  },
  {
    "text": "once i did that connection i can now",
    "start": "1010000",
    "end": "1011920"
  },
  {
    "text": "share it with everyone so let's say i",
    "start": "1011920",
    "end": "1013360"
  },
  {
    "text": "have a",
    "start": "1013360",
    "end": "1014079"
  },
  {
    "text": "weather api and i have a bank api",
    "start": "1014079",
    "end": "1017600"
  },
  {
    "text": "first of all i can now create for my",
    "start": "1017600",
    "end": "1019839"
  },
  {
    "text": "bank api i can create graphql api",
    "start": "1019839",
    "end": "1022240"
  },
  {
    "text": "without them knowing it at all",
    "start": "1022240",
    "end": "1024959"
  },
  {
    "text": "so now they have graphql api which is",
    "start": "1024959",
    "end": "1026640"
  },
  {
    "text": "amazing and they didn't need to do",
    "start": "1026640",
    "end": "1029199"
  },
  {
    "text": "any infrastructure work or nothing like",
    "start": "1029199",
    "end": "1031280"
  },
  {
    "text": "that but then i can also",
    "start": "1031280",
    "end": "1034000"
  },
  {
    "text": "build the connection so i can create an",
    "start": "1034000",
    "end": "1036480"
  },
  {
    "text": "api",
    "start": "1036480",
    "end": "1037120"
  },
  {
    "text": "a graphical api for my bank which with",
    "start": "1037120",
    "end": "1039360"
  },
  {
    "text": "the weather api which means that i can",
    "start": "1039360",
    "end": "1041038"
  },
  {
    "text": "let's say",
    "start": "1041039",
    "end": "1041839"
  },
  {
    "text": "query my all the branches of the bank",
    "start": "1041839",
    "end": "1044798"
  },
  {
    "text": "and the daily forecast",
    "start": "1044799",
    "end": "1046319"
  },
  {
    "text": "in in the next day in those branches",
    "start": "1046319",
    "end": "1049360"
  },
  {
    "text": "and again this is without the bank",
    "start": "1049360",
    "end": "1052080"
  },
  {
    "text": "actually knowing about it",
    "start": "1052080",
    "end": "1054080"
  },
  {
    "text": "and it's completely distributed so if we",
    "start": "1054080",
    "end": "1057200"
  },
  {
    "text": "take this one step further we can we",
    "start": "1057200",
    "end": "1059120"
  },
  {
    "text": "actually started to see that this is one",
    "start": "1059120",
    "end": "1060799"
  },
  {
    "text": "of the",
    "start": "1060799",
    "end": "1061679"
  },
  {
    "text": "i would say the most pragmatical",
    "start": "1061679",
    "end": "1064799"
  },
  {
    "text": "approaches to go into the what everyone",
    "start": "1064799",
    "end": "1067760"
  },
  {
    "text": "called the semantic web or the",
    "start": "1067760",
    "end": "1070000"
  },
  {
    "text": "web 3.0 we can start having",
    "start": "1070000",
    "end": "1073360"
  },
  {
    "text": "um data modules data module graphs",
    "start": "1073360",
    "end": "1076720"
  },
  {
    "text": "inside our company or as an open source",
    "start": "1076720",
    "end": "1081200"
  },
  {
    "text": "um and we can start building this",
    "start": "1081200",
    "end": "1084240"
  },
  {
    "text": "uh huge data graph inside our company's",
    "start": "1084240",
    "end": "1087840"
  },
  {
    "text": "computer",
    "start": "1087840",
    "end": "1088880"
  },
  {
    "text": "community or inside the open community",
    "start": "1088880",
    "end": "1092160"
  },
  {
    "text": "and i think this is extremely powerful",
    "start": "1092160",
    "end": "1093840"
  },
  {
    "text": "because again the only way for this to",
    "start": "1093840",
    "end": "1096080"
  },
  {
    "text": "work is",
    "start": "1096080",
    "end": "1096720"
  },
  {
    "text": "because it's distributed um and because",
    "start": "1096720",
    "end": "1100320"
  },
  {
    "text": "um uh it it can run",
    "start": "1100320",
    "end": "1103600"
  },
  {
    "text": "anywhere there's no if it's in your",
    "start": "1103600",
    "end": "1105840"
  },
  {
    "text": "company you can have control of it but",
    "start": "1105840",
    "end": "1107520"
  },
  {
    "text": "if but if it's open source",
    "start": "1107520",
    "end": "1109520"
  },
  {
    "text": "anyone can implement their things and",
    "start": "1109520",
    "end": "1112320"
  },
  {
    "text": "add things to it",
    "start": "1112320",
    "end": "1113440"
  },
  {
    "text": "and we can get actually get to a",
    "start": "1113440",
    "end": "1116480"
  },
  {
    "text": "community driven",
    "start": "1116480",
    "end": "1118080"
  },
  {
    "text": "public module or public data graph",
    "start": "1118080",
    "end": "1122399"
  },
  {
    "text": "so that's basically graphql",
    "start": "1122799",
    "end": "1125840"
  },
  {
    "text": "mesh so it can really be helpful",
    "start": "1125840",
    "end": "1129440"
  },
  {
    "text": "on your inside your service mesh or",
    "start": "1129440",
    "end": "1133440"
  },
  {
    "text": "inside your",
    "start": "1133440",
    "end": "1134480"
  },
  {
    "text": "backend services but you can also start",
    "start": "1134480",
    "end": "1137200"
  },
  {
    "text": "using modules existing modules to",
    "start": "1137200",
    "end": "1139440"
  },
  {
    "text": "integrate with all your third-party apis",
    "start": "1139440",
    "end": "1143360"
  },
  {
    "start": "1143000",
    "end": "1175000"
  },
  {
    "text": "so if this was interesting for you",
    "start": "1143360",
    "end": "1146880"
  },
  {
    "text": "you can go to graphqlmesh.com or talk to",
    "start": "1146880",
    "end": "1150080"
  },
  {
    "text": "us the guild community as you saw is",
    "start": "1150080",
    "end": "1152080"
  },
  {
    "text": "like",
    "start": "1152080",
    "end": "1152640"
  },
  {
    "text": "you know the stru probably the the",
    "start": "1152640",
    "end": "1154960"
  },
  {
    "text": "strongest community",
    "start": "1154960",
    "end": "1156080"
  },
  {
    "text": "um in the graphql ecosystem um",
    "start": "1156080",
    "end": "1159600"
  },
  {
    "text": "and yeah and talk to us directly we have",
    "start": "1159600",
    "end": "1161760"
  },
  {
    "text": "forums we have",
    "start": "1161760",
    "end": "1162799"
  },
  {
    "text": "our github libraries and just join the",
    "start": "1162799",
    "end": "1165679"
  },
  {
    "text": "conversation and",
    "start": "1165679",
    "end": "1167200"
  },
  {
    "text": "tell us your use case and how you can",
    "start": "1167200",
    "end": "1169200"
  },
  {
    "text": "use it",
    "start": "1169200",
    "end": "1170880"
  },
  {
    "text": "thank you very much",
    "start": "1170880",
    "end": "1176720"
  }
]