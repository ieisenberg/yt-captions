[
  {
    "text": "[Music] thank you very much and so again hello everybody I'm Dustin",
    "start": "6990",
    "end": "14200"
  },
  {
    "text": "Whittle and I'm a developer advocate who works on ubers developer platform where I help third-party developers and our partners build moving experiences and so",
    "start": "14200",
    "end": "21430"
  },
  {
    "text": "I wanted to talk a little bit about the couple of ways we use JavaScript across their engineering works I think in order",
    "start": "21430",
    "end": "26920"
  },
  {
    "text": "to properly tell the story you need to understand a little bit about the scale on the environment which we grew and",
    "start": "26920",
    "end": "31930"
  },
  {
    "text": "then I'll talk about how we build back-end micro-services with JavaScript how we build our front-end web properties how we visualize data to",
    "start": "31930",
    "end": "39250"
  },
  {
    "text": "understand cities better and then how we expose an external API for developer platform and so again as a matter of",
    "start": "39250",
    "end": "45909"
  },
  {
    "text": "housekeeping please ask questions through the app I'm saving some time at the end to go through all of them so please feel free and your feedback is",
    "start": "45909",
    "end": "52360"
  },
  {
    "text": "very much appreciated so please be relentless and give as much feedback as possible and so you probably know uber",
    "start": "52360",
    "end": "59500"
  },
  {
    "text": "by now push a button get a ride and so burrs mission is really to make transportations reliable as running",
    "start": "59500",
    "end": "65170"
  },
  {
    "text": "water everywhere and for everyone and in just eight years we've done that we're actually one of the fastest growing",
    "start": "65170",
    "end": "70600"
  },
  {
    "text": "companies that's ever existed and we're on six continents in 73 countries and in more than 470 cities and we've done that",
    "start": "70600",
    "end": "77710"
  },
  {
    "text": "by partnering with more than a million and a half active driver partners who on daily deliver more than five million trips and we did this in under eight",
    "start": "77710",
    "end": "84939"
  },
  {
    "text": "years and last July we completed our two billions trip and so if you'll indulge me for just a second we can take a",
    "start": "84939",
    "end": "90759"
  },
  {
    "text": "little bit of a look at the evolution of the uber app because really this has been powered by JavaScript underneath so",
    "start": "90759",
    "end": "96729"
  },
  {
    "text": "if you travel back to 2009 this is pretty much with the uber app look like you had a map and you had a button that said pick me up pretty straightforward",
    "start": "96729",
    "end": "103479"
  },
  {
    "text": "pretty bare-bones and then in 2012 we released another version of the app that added more features like location search et A's",
    "start": "103479",
    "end": "110340"
  },
  {
    "text": "estimates and the ability to select different products like uber pool uberx uberx et cetera at the bottom and",
    "start": "110340",
    "end": "116740"
  },
  {
    "text": "then last year we released a new version and it really we refreshed it to add scheduled rides accelerators for known",
    "start": "116740",
    "end": "122920"
  },
  {
    "text": "location so you can have a one top rides and then an interactive feed just to name a few but as you can see the Ebor",
    "start": "122920",
    "end": "130060"
  },
  {
    "text": "app has evolved over time just as the company in the engineering organization has evolved as well and so today you can",
    "start": "130060",
    "end": "136450"
  },
  {
    "text": "actually take an uber ride experience along the way you can play your music with and Dora you can see local recommendations with Foursquare and you",
    "start": "136450",
    "end": "142450"
  },
  {
    "text": "can even order food with ubereats and much more directly from the Google app but it's not just rides in cars it's",
    "start": "142450",
    "end": "148630"
  },
  {
    "text": "been choppers and boats too from kitten sites cream to even Christmas trees we're not just moving people but we're",
    "start": "148630",
    "end": "153940"
  },
  {
    "text": "moving things as well and the uber experiences iterated in many ways and this is really a coming-of-age story about JavaScript so I'll talk a little",
    "start": "153940",
    "end": "159820"
  },
  {
    "text": "bit about how we got there and so this is a visualization of New Year's Eve",
    "start": "159820",
    "end": "165030"
  },
  {
    "text": "from 2013 to 2017 and so if you just look at the this is Singapore and from",
    "start": "165030",
    "end": "171310"
  },
  {
    "text": "on New Year's Eve from 2013 to 2017 every year and so you can see the scale the growth year over year and in June",
    "start": "171310",
    "end": "177760"
  },
  {
    "text": "2010 we launched our first ride in San Francisco and by May 2012 we hit a million rides worldwide and we hit a",
    "start": "177760",
    "end": "184030"
  },
  {
    "text": "billion rides by February 2015 and today we exist in more than 73 countries and",
    "start": "184030",
    "end": "189970"
  },
  {
    "text": "so just if you look at the scale on the timeline of this it's really quite fast and to understand why we use JavaScript",
    "start": "189970",
    "end": "195610"
  },
  {
    "text": "in certain ways and how we've iterated on it you need to understand the scale the growth and so we hired a lot of",
    "start": "195610",
    "end": "201040"
  },
  {
    "text": "engineers they wrote a lot of software and the reality is when you're working at a hyper-growth engineering company",
    "start": "201040",
    "end": "206410"
  },
  {
    "text": "like uber pretty much looks like this image you're moving super fast every week we're launching new cities millions",
    "start": "206410",
    "end": "212260"
  },
  {
    "text": "of people are using our systems in real time and we can't simply stop our systems even for a minute to mean for one minute of maintenance it's kinda",
    "start": "212260",
    "end": "218620"
  },
  {
    "text": "like changing the wheels on the car driving 80 miles an hour and so we are organized with programs",
    "start": "218620",
    "end": "225430"
  },
  {
    "text": "and platform teams and so under the easiest way to think about this is program teams are built on top of technology platforms our platform teams",
    "start": "225430",
    "end": "232360"
  },
  {
    "text": "build the technology foundation on which program teams can build customer-facing products but we're all product teams",
    "start": "232360",
    "end": "238120"
  },
  {
    "text": "it's just whether the customer is external or internal developers and so we invest heavily in building these",
    "start": "238120",
    "end": "244299"
  },
  {
    "text": "platforms that enable developers to iterate quickly and so building a platform that interacts with the real",
    "start": "244299",
    "end": "250570"
  },
  {
    "text": "world as a whole nother level of complexity and opportunity as well because you can't really control what happens in the real world the physical",
    "start": "250570",
    "end": "257140"
  },
  {
    "text": "worlds complexity is infinite but we only have 64 bits and a 500 millisecond SLA and so there's often things that we",
    "start": "257140",
    "end": "263050"
  },
  {
    "text": "can't really see and that go into the technology underneath people use our technology to make money to go where",
    "start": "263050",
    "end": "269080"
  },
  {
    "text": "they need to go and so there's no space time to pause which is why we sighs availability and scalability over",
    "start": "269080",
    "end": "274600"
  },
  {
    "text": "all else and so in order to do this we actually have 15,000 repositories that",
    "start": "274600",
    "end": "280660"
  },
  {
    "text": "power more than the 3400 microservices that we've released more than 260 of",
    "start": "280660",
    "end": "285910"
  },
  {
    "text": "them back to the open source community and you probably just know the Hoover rides after that we've read that but we",
    "start": "285910",
    "end": "291160"
  },
  {
    "text": "actually have more than 10 mobile applications and more than 250 web applications and a large piece of this",
    "start": "291160",
    "end": "296860"
  },
  {
    "text": "core technology behind this is JavaScript and so ears ability to scale has come from high velocity hard",
    "start": "296860",
    "end": "302950"
  },
  {
    "text": "engineering along with autonomous teams and domains and so we designed foundational services that are designed",
    "start": "302950",
    "end": "308770"
  },
  {
    "text": "for high scale and durability and we focus on developer abstractions that allow developers to be productive and so",
    "start": "308770",
    "end": "315280"
  },
  {
    "text": "we're a polyglot engineering organization and we use a few languages in production and so today we're moving towards go and Java but again this is",
    "start": "315280",
    "end": "321850"
  },
  {
    "text": "we're coming age story about JavaScript so I'll talk about sort of how we evolved and got to the scale with JavaScript and some of the reasons why",
    "start": "321850",
    "end": "327820"
  },
  {
    "text": "we're migrating in other directions and so we use Go Java nodejs and Python in",
    "start": "327820",
    "end": "333310"
  },
  {
    "text": "production today and this is really an order of preference but let's talk about how it really started it started with",
    "start": "333310",
    "end": "339669"
  },
  {
    "text": "the freedom of choice when you're growing super fast you're hiring many engineers you want them to be as productive as possible as fast as",
    "start": "339669",
    "end": "345730"
  },
  {
    "text": "possible they tend to hire their friends once you get popular in the open source world you start to build a community",
    "start": "345730",
    "end": "351310"
  },
  {
    "text": "around your projects and so it becomes easier to hire people who are like-minded who are come from your culture and so originally when we",
    "start": "351310",
    "end": "358390"
  },
  {
    "text": "decided to use JavaScript we realized that it was a single stack for the front end of the backend and it made it very",
    "start": "358390",
    "end": "363520"
  },
  {
    "text": "easy to iterate and so again it has a simple interface of thorough documentation that makes it quick to",
    "start": "363520",
    "end": "369040"
  },
  {
    "text": "iterate and prototype it's asynchronous nimble and flexible so it allowed us to avoid concurrency challenges early on",
    "start": "369040",
    "end": "375190"
  },
  {
    "text": "and also had an increasingly mature module ecosystem but today we only use",
    "start": "375190",
    "end": "380230"
  },
  {
    "text": "node.js for our web applications and so why no js' early on if like most great",
    "start": "380230",
    "end": "388960"
  },
  {
    "text": "web companies uber started as a PHP in my seagull shop it was actually",
    "start": "388960",
    "end": "394330"
  },
  {
    "text": "contracted out with a bunch of comments in Spanish and then at the time no js' came along we were very early adopters",
    "start": "394330",
    "end": "401380"
  },
  {
    "text": "and OJ in fact we prototype the first version on node 0.2 and we were running node in",
    "start": "401380",
    "end": "406839"
  },
  {
    "text": "production at 0.4 and so it's iterated along it's come a long way since then at",
    "start": "406839",
    "end": "412929"
  },
  {
    "text": "one point more money move through the ubers app and our new JSF and any other new door JavaScript app in the world",
    "start": "412929",
    "end": "419139"
  },
  {
    "text": "until recently PayPal migrated to node so they've sort of surpassed us but why node node has a few core strengths that",
    "start": "419139",
    "end": "426009"
  },
  {
    "text": "lend itself well for our use case first it handles asynchronous i/o with a",
    "start": "426009",
    "end": "431469"
  },
  {
    "text": "non-blocking single threaded event loop that's particularly well-suited for building distributed services that make",
    "start": "431469",
    "end": "436839"
  },
  {
    "text": "many Network calls underneath and nodejs and more javascript in general is excellent for quick iteration again easy",
    "start": "436839",
    "end": "443889"
  },
  {
    "text": "to prototype something and then to iterate on it with a large team and then three it has a great module ecosystem",
    "start": "443889",
    "end": "450099"
  },
  {
    "text": "you don't have to build all the components yourself there's already a large community there that you can build on top of a talent pool to hire from as",
    "start": "450099",
    "end": "456399"
  },
  {
    "text": "well as existing modules for common use cases and so throughout this talk we'll",
    "start": "456399",
    "end": "462339"
  },
  {
    "text": "talk about four ways in which we're using JavaScript today on our marketplace platform to provide the core",
    "start": "462339",
    "end": "467409"
  },
  {
    "text": "services underneath again we have an architecture that consists of more than 3400 microservices a hundred of those",
    "start": "467409",
    "end": "474009"
  },
  {
    "text": "pertain to the core trip flow so just pushing a button and getting a ride from A to B is a hundred services topping",
    "start": "474009",
    "end": "479319"
  },
  {
    "text": "underneath and then we'll talk a little bit about our web platform and how we build front-end properties with react and Express and then how we better",
    "start": "479319",
    "end": "485800"
  },
  {
    "text": "understand cities by visualizing data and then finally talking about how anyone can build applications through",
    "start": "485800",
    "end": "491229"
  },
  {
    "text": "our developer platform but we're invest heavily in developer productivity and so we've invested in a bunch of different",
    "start": "491229",
    "end": "497229"
  },
  {
    "text": "things and a bunch of different platform teams that make it easy for developers to be successful from their first day at",
    "start": "497229",
    "end": "502719"
  },
  {
    "text": "Hoover and so it really starts with the core infrastructure this is our compute",
    "start": "502719",
    "end": "508149"
  },
  {
    "text": "network storage our cloud environments or on-prem environments and it abstracts this away so that developers can focus",
    "start": "508149",
    "end": "514180"
  },
  {
    "text": "on making magic and then we have our developer experience team that this is really focused on the developer tool",
    "start": "514180",
    "end": "519789"
  },
  {
    "text": "chain so how easy is it to build an app and deploy production and then as you",
    "start": "519789",
    "end": "525550"
  },
  {
    "text": "need to as you add dependencies as you need to understand interact with other services we have our marketplace platform this is the single gateway to",
    "start": "525550",
    "end": "532449"
  },
  {
    "text": "all the 3,400 micro services underneath and then on top of that we have our external components we have a web",
    "start": "532449",
    "end": "538630"
  },
  {
    "text": "platform team that maintains a performant secure reliable web foundation we have our mobile platform",
    "start": "538630",
    "end": "544389"
  },
  {
    "text": "team that's focused on enabling thousands of mobile developers to build world-class performant applications and",
    "start": "544389",
    "end": "549490"
  },
  {
    "text": "then we have our developer platform team that focuses on exposing all this functionality to the outside world and",
    "start": "549490",
    "end": "555360"
  },
  {
    "text": "so we have this cultural value to let builders build and this really means to not block people to give them the tools",
    "start": "555360",
    "end": "562000"
  },
  {
    "text": "they need to be successful and so when you want to launch a new service in this case a javascript micro service at uber",
    "start": "562000",
    "end": "567519"
  },
  {
    "text": "you send a proposal with a request for comments the entire engineering work it gives you a basic outline of what you",
    "start": "567519",
    "end": "573190"
  },
  {
    "text": "want to build the timeline associated with it any security concerns and any operational concerns and then you start",
    "start": "573190",
    "end": "579610"
  },
  {
    "text": "with scaffolding with this purpose built around our staff so we solve a ton of problems for you and if you use our art",
    "start": "579610",
    "end": "585639"
  },
  {
    "text": "we want to make our tools so good that you'd be foolish to use any other tool and so by building the best possible",
    "start": "585639",
    "end": "590800"
  },
  {
    "text": "tools you get the widest option because it's the easiest that allows you to be the most productive and then you deploy",
    "start": "590800",
    "end": "596320"
  },
  {
    "text": "with standardized infrastructure and so we use playbooks to operate operationalize our teams at scale and",
    "start": "596320",
    "end": "602410"
  },
  {
    "text": "I'll talk a little bit about this later but if you think about what it takes to build a web application that's user",
    "start": "602410",
    "end": "607660"
  },
  {
    "text": "facing today a lot of this is more than just the JavaScript interface it's how do you handle assets and an edge cash",
    "start": "607660",
    "end": "613510"
  },
  {
    "text": "how do you handle communications internally whether that's through HTTP or thrifty channel whatever how do you",
    "start": "613510",
    "end": "619779"
  },
  {
    "text": "manage translations internationalization data network compute storage the list goes on and on and so I'm not going to",
    "start": "619779",
    "end": "626889"
  },
  {
    "text": "talk about any of that today I'm going to talk about how we build on top of it and so our marketplace platform at its core is pretty straightforward we have a",
    "start": "626889",
    "end": "634540"
  },
  {
    "text": "iOS and Android application that talks to an HTTP endpoint or series of HTTP endpoints that talk to underlying",
    "start": "634540",
    "end": "641199"
  },
  {
    "text": "services and at a really high level the services look like this you have supply you have demand you have authentication",
    "start": "641199",
    "end": "647440"
  },
  {
    "text": "the ability to match supply and demand pricing etc but realistically it looks a",
    "start": "647440",
    "end": "652899"
  },
  {
    "text": "lot like this again we have more than 3,400 micro services that build the ubers engineering",
    "start": "652899",
    "end": "660000"
  },
  {
    "text": "that's right and so this is one of the things I'll talk about shortly which is how do you figure out which service does",
    "start": "664630",
    "end": "670399"
  },
  {
    "text": "what when it's complicated how do you get visibility into performance problems and distributed applications and so",
    "start": "670399",
    "end": "676399"
  },
  {
    "text": "again our marketplace API is really the single API that external applications talk to and that's as the Gateway to the",
    "start": "676399",
    "end": "682760"
  },
  {
    "text": "more than 3400 underlying micro services and so we expose over a thousand HD endpoints that make it easy for third",
    "start": "682760",
    "end": "688670"
  },
  {
    "text": "parties sorry for our program teams to build on top of but also it's a single place to for monitoring and",
    "start": "688670",
    "end": "694880"
  },
  {
    "text": "documentation to make it easy to discover services and understand how to use them and so ultimately the",
    "start": "694880",
    "end": "701000"
  },
  {
    "text": "marketplace gateway is really just with advanced traveling salesman problem with logistics problem how do you map supply",
    "start": "701000",
    "end": "706399"
  },
  {
    "text": "and demand how do you make it an efficient marketplace how do you maximize the number of trips but also",
    "start": "706399",
    "end": "711890"
  },
  {
    "text": "minimize the wait times for riders and for drivers and so if you think about over pool running in a cities complex",
    "start": "711890",
    "end": "718100"
  },
  {
    "text": "traveling salesman problem and so look at dive into some specifics about how we scaled with node in just a second but to",
    "start": "718100",
    "end": "724459"
  },
  {
    "text": "understand this take a look at our timeline in 2009 we started with PHP my sequel around this time",
    "start": "724459",
    "end": "730790"
  },
  {
    "text": "2010 is when node came out and started to get popular adoption we started to move towards node J s mom's going to be",
    "start": "730790",
    "end": "737060"
  },
  {
    "text": "at the time is web scale and turns out that's not really true and so we migrated to it and away from",
    "start": "737060",
    "end": "742670"
  },
  {
    "text": "it we started to replace it with things like Redis we started to migrate to my sequel because we're originally on",
    "start": "742670",
    "end": "748490"
  },
  {
    "text": "Postgres and we sort of maxed out our ability or right throughput on Postgres at the time and then we started to write",
    "start": "748490",
    "end": "754160"
  },
  {
    "text": "our own data store which is schema list built on top of my sequel and then as of",
    "start": "754160",
    "end": "759470"
  },
  {
    "text": "recently there's been a large push to sort of standardize on go in Java but let's talk about how we got here from",
    "start": "759470",
    "end": "765050"
  },
  {
    "text": "JavaScript so monoliths aren't necessarily bad well they're not that at first but they quickly turn into a ball",
    "start": "765050",
    "end": "771949"
  },
  {
    "text": "of mud and so monoliths really optimized for developer velocity of early stage",
    "start": "771949",
    "end": "778459"
  },
  {
    "text": "projects when a single team owns it and it consolidates all your operational overhead into a single place there's",
    "start": "778459",
    "end": "784459"
  },
  {
    "text": "only one application to deploy one codebase to maintain and the microservices are a thing but",
    "start": "784459",
    "end": "790970"
  },
  {
    "text": "micro-services are really just the thing that's focused on only one thing one thing doesn't mean one API means one",
    "start": "790970",
    "end": "796139"
  },
  {
    "text": "business domain and so as we started to break apart break apart our monolith and create many micro-services we learned a",
    "start": "796139",
    "end": "802560"
  },
  {
    "text": "few things along the way one it gives clear ownership boundaries if there's a single team that owns a",
    "start": "802560",
    "end": "808980"
  },
  {
    "text": "single business domain you can map that to individual services there's one team determines authentication and identity",
    "start": "808980",
    "end": "814649"
  },
  {
    "text": "so they own the authentication identity services most of the time it also gave us product specific velocity again when",
    "start": "814649",
    "end": "821459"
  },
  {
    "text": "you're growing super fast you're hiring all these new engineers where the average engineers less than six months at the company and you really want to",
    "start": "821459",
    "end": "828600"
  },
  {
    "text": "make it very easy for them to move at their own pace you don't want legacy foundational services blocking the product",
    "start": "828600",
    "end": "834209"
  },
  {
    "text": "development of a new product and so it allows the move allows us to move the business faster and it gives teams",
    "start": "834209",
    "end": "840540"
  },
  {
    "text": "independent velocity those also solve scaling issues not only internal systems",
    "start": "840540",
    "end": "845699"
  },
  {
    "text": "but also the company how do you group people together and then it gives us the ability to consolidate training",
    "start": "845699",
    "end": "851009"
  },
  {
    "text": "documentation and our tooling underneath but ultimately gave the team's language language and platform independence and",
    "start": "851009",
    "end": "857670"
  },
  {
    "text": "this is a large part about how we started to adopt node it wasn't some mandate that came down from some",
    "start": "857670",
    "end": "863310"
  },
  {
    "text": "executive team it was literally engineers like JavaScript node signature enough to solve the problem at the time",
    "start": "863310",
    "end": "868620"
  },
  {
    "text": "we had a bunch of talent that was familiar with javascript in the node ecosystem and so the team just sort of",
    "start": "868620",
    "end": "873899"
  },
  {
    "text": "organically grew from there but as the team goes from hundreds to thousands to multiple thousands you",
    "start": "873899",
    "end": "879750"
  },
  {
    "text": "really need to start to standardize and so that's really what we started to do is say okay we have a preferred set of languages but you can use any tool you",
    "start": "879750",
    "end": "886170"
  },
  {
    "text": "want for the job but also gave us reliability of the system as a whole each service is independent each service",
    "start": "886170",
    "end": "892199"
  },
  {
    "text": "is scalable and each service is independently testable so there's some bad that comes with the good one it's",
    "start": "892199",
    "end": "898439"
  },
  {
    "text": "increased complexity to your point when you're looking at a high level version of it it looks like spaghetti so how do",
    "start": "898439",
    "end": "904110"
  },
  {
    "text": "you do discovery of when you have this many services how do you name them early on engineers are creative people they",
    "start": "904110",
    "end": "910769"
  },
  {
    "text": "tend to name things interesting we give things interesting names and they don't ever have anything to do with the",
    "start": "910769",
    "end": "916199"
  },
  {
    "text": "service so the authentication service isn't called the authentication service something very different and so how do",
    "start": "916199",
    "end": "922139"
  },
  {
    "text": "you map that to the stuff underneath you need to be able to do discovery much easy much more consistently eventual consistently",
    "start": "922139",
    "end": "929540"
  },
  {
    "text": "becomes a problem eventual consistency ultimately becomes a problem because your data no longer lives in a single",
    "start": "929540",
    "end": "934760"
  },
  {
    "text": "place it's spread out across many databases across many services and then distributed tracing when you start to",
    "start": "934760",
    "end": "941089"
  },
  {
    "text": "run into performance problems how do you figure out the root cause of the performance problem and so we built some",
    "start": "941089",
    "end": "946220"
  },
  {
    "text": "tools to help alleviate some of these issues and then obviously there's the operational overhead for every service you need to monitor you need to deploy",
    "start": "946220",
    "end": "952670"
  },
  {
    "text": "you need to instrument it and you need to make sure it's secure and so every time you add a new service if you're",
    "start": "952670",
    "end": "958790"
  },
  {
    "text": "doing this with independent tools and you start to have to duplicate all this operational overhead and the last thing",
    "start": "958790",
    "end": "965660"
  },
  {
    "text": "is it ends up being with repeated code and repeated effort and so when you have any teams honey make sure there's not",
    "start": "965660",
    "end": "971870"
  },
  {
    "text": "multiple teams and an engineering order of thousands of people building the same types of services and so Martin Fowler",
    "start": "971870",
    "end": "979279"
  },
  {
    "text": "has this great graph that shows for less complex systems that extra effort required to use a micro service",
    "start": "979279",
    "end": "984380"
  },
  {
    "text": "architecture outweighs its benefits but once the problem becomes more complex and the team size increases and the",
    "start": "984380",
    "end": "990860"
  },
  {
    "text": "benefits outweigh the risk and so choosing a micro service architecture largely depends on the",
    "start": "990860",
    "end": "995930"
  },
  {
    "text": "complexity of your application the complexity of your team and there is no golden rule and so one of the ways that",
    "start": "995930",
    "end": "1004209"
  },
  {
    "text": "we ended up scaling our node applications was by solving a few different problems one how do you do",
    "start": "1004209",
    "end": "1009670"
  },
  {
    "text": "application level starting and we use our at least we used to use Google's s2 library to shard the entire world so the",
    "start": "1009670",
    "end": "1017890"
  },
  {
    "text": "googles s2 library basically takes a sphere and breaks it down into different regions and so from those regions we can",
    "start": "1017890",
    "end": "1024010"
  },
  {
    "text": "start to shard our database or applications based on geographies around",
    "start": "1024010",
    "end": "1029050"
  },
  {
    "text": "the world and so the problem with this is when you're scaling applications that do real-time requests that are specific",
    "start": "1029050",
    "end": "1035860"
  },
  {
    "text": "to a geolocation you have surges in demand something like in New York City the peak demand is not",
    "start": "1035860",
    "end": "1042069"
  },
  {
    "text": "going to be the same as an Amsterdam or in Singapore or in San Francisco so how do you shard that environment and so one",
    "start": "1042069",
    "end": "1049059"
  },
  {
    "text": "of the first tools that we wrote nodejs to help us scale applications was Ring Pop Ring Pop provides application level",
    "start": "1049059",
    "end": "1055540"
  },
  {
    "text": "charting and so allows you to bring distribute cooperation coordination to services but really it's a string on top",
    "start": "1055540",
    "end": "1063000"
  },
  {
    "text": "of a membership protocol that allows you to choose either this instance of our application can handle the request or I",
    "start": "1063000",
    "end": "1069960"
  },
  {
    "text": "need to forward it to the appropriate instance they can and so it looks a lot like this for every node instance you're",
    "start": "1069960",
    "end": "1075900"
  },
  {
    "text": "running you rung a Ring Pop client and this ring pop plant can understand which requests this instance can service so I",
    "start": "1075900",
    "end": "1081450"
  },
  {
    "text": "can handle requests for this particular location or for this particular service and so this allows us to easily decide",
    "start": "1081450",
    "end": "1087870"
  },
  {
    "text": "how we wanted to shard the backend but manage it all at the application level and so ring pops is written in nodejs",
    "start": "1087870",
    "end": "1094380"
  },
  {
    "text": "and we have clients for a variety of languages one of the next things we",
    "start": "1094380",
    "end": "1099390"
  },
  {
    "text": "learned is that making requests an HTTP was really built for a world and what you're connecting from a browser a",
    "start": "1099390",
    "end": "1105419"
  },
  {
    "text": "client to a server but when you're making server to server requests HTTP is expensive and so there's a more",
    "start": "1105419",
    "end": "1111809"
  },
  {
    "text": "efficient way to communicate between these back-end micro services and so at the time thrift existed from Facebook",
    "start": "1111809",
    "end": "1117570"
  },
  {
    "text": "but it didn't have the language support that we needed at the time and so we wrote T channel and so T channel was a",
    "start": "1117570",
    "end": "1123570"
  },
  {
    "text": "RPC protocol that allows us to make a very efficient request to the back-end services and so T channels available",
    "start": "1123570",
    "end": "1131309"
  },
  {
    "text": "multiple languages but this is how we actually communicate under in our underlying micro service architecture and then one of the lost tools that we",
    "start": "1131309",
    "end": "1138390"
  },
  {
    "text": "built for nodejs was Jager and so Yeager's really build was originally built on twitter Zipkin",
    "start": "1138390",
    "end": "1143909"
  },
  {
    "text": "and it provides distributed transaction tracing for complex distribute apps and",
    "start": "1143909",
    "end": "1149370"
  },
  {
    "text": "so when you're looking at a complex application you want to figure out where the performance problem is you want to",
    "start": "1149370",
    "end": "1155250"
  },
  {
    "text": "have visibility into the underlying calls so you can start to see where the hotspots in the performance the root",
    "start": "1155250",
    "end": "1160830"
  },
  {
    "text": "cause of performance problems lie and so a large part of what we did was figure out how to make bring observability to",
    "start": "1160830",
    "end": "1167370"
  },
  {
    "text": "our distributed services and so we did that through few different ways by instrumenting t channel by using Jager",
    "start": "1167370",
    "end": "1173010"
  },
  {
    "text": "to visualize and Jager client to instrument the underlying services and we scaled out our node applications",
    "start": "1173010",
    "end": "1178289"
  },
  {
    "text": "using green pop and so there's great engineering write-ups on our engineering blog about each one of these services I",
    "start": "1178289",
    "end": "1184320"
  },
  {
    "text": "don't have too much time and there's a lot of content but I'll follow up with the slides at the end and so ultimately",
    "start": "1184320",
    "end": "1190080"
  },
  {
    "text": "note is just a thin wrapper around C++ it's a thin scripting layer around C++ and so all the Linux performance",
    "start": "1190080",
    "end": "1197260"
  },
  {
    "text": "tools you're used to just work and so it was also built on top of those so whether it's using node building node",
    "start": "1197260",
    "end": "1203500"
  },
  {
    "text": "flames of CPU flame graphs with P trace you can still just use all the normal performance tools you'd like to figure",
    "start": "1203500",
    "end": "1209620"
  },
  {
    "text": "out performance problems in your applications and so the reason I like to point the cell is that you should learn",
    "start": "1209620",
    "end": "1215380"
  },
  {
    "text": "how to profile applications on Linux and then you should figure out how you get visibility into those distributed",
    "start": "1215380",
    "end": "1220510"
  },
  {
    "text": "applications there is no silver bullet and so we learned a couple of different lessons and when we started with node",
    "start": "1220510",
    "end": "1227950"
  },
  {
    "text": "performance wasn't as big of a concern as it is today but since we've migrated to all the are we started migrating all",
    "start": "1227950",
    "end": "1233800"
  },
  {
    "text": "of our course services we realized that the latency is too high for ultra performant back-end systems again we",
    "start": "1233800",
    "end": "1239590"
  },
  {
    "text": "adopted earlier versions of nodes so a lot of this has changed in time but when you have dynamic typing dynamic garbage",
    "start": "1239590",
    "end": "1246760"
  },
  {
    "text": "collection all of a sudden the performance isn't as predictable as it is with other languages and so the p99",
    "start": "1246760",
    "end": "1252400"
  },
  {
    "text": "format latency started to become a problem it wasn't about the average latency for the request it was about that one request that takes a lot of",
    "start": "1252400",
    "end": "1258370"
  },
  {
    "text": "time and so early on it made it very quick to iterate but as the size of the team scale the developer velocity",
    "start": "1258370",
    "end": "1264790"
  },
  {
    "text": "started to slow down and a team of five people is very easy to develop but as you add a hundred or even five hundred",
    "start": "1264790",
    "end": "1270400"
  },
  {
    "text": "committing to the same codebase things start to break down again using",
    "start": "1270400",
    "end": "1275650"
  },
  {
    "text": "micro services gives us flexibility and makes everything independent but it also requires me to have a tight interface",
    "start": "1275650",
    "end": "1281020"
  },
  {
    "text": "between the different language but we need services so if you rename a field in one place now all the dependencies",
    "start": "1281020",
    "end": "1286960"
  },
  {
    "text": "need to adopt that and so again micro services require a tight interface and by using languages that support static",
    "start": "1286960",
    "end": "1294130"
  },
  {
    "text": "typing you're able to enforce that much earlier in the process and so when you have large development teams",
    "start": "1294130",
    "end": "1299460"
  },
  {
    "text": "contributing that starts to really have an impact at over 100 developers and so it allows us to catch issues at Build",
    "start": "1299460",
    "end": "1306100"
  },
  {
    "text": "time rather than at run time and again hiring it was quick to learn but it was",
    "start": "1306100",
    "end": "1311590"
  },
  {
    "text": "easy to write poor quality code it allows you to move fast but it also allows you to be sloppy in the process",
    "start": "1311590",
    "end": "1318250"
  },
  {
    "text": "and so one of the nice things is the you can write performant high-quality JavaScript code but that takes",
    "start": "1318250",
    "end": "1324610"
  },
  {
    "text": "experience and when you're hiring people there very quickly even when they're amazing sharp people they didn't learn node and",
    "start": "1324610",
    "end": "1330130"
  },
  {
    "text": "they don't know the pitfalls of common design patterns with node they're focused on getting stuff done and so you",
    "start": "1330130",
    "end": "1336310"
  },
  {
    "text": "want to make it safe for developers to build things quickly and nodejs sometimes a lot of people to be sloppy",
    "start": "1336310",
    "end": "1341940"
  },
  {
    "text": "how many people remember the library that took down the internet because somebody got annoyed that somebody",
    "start": "1341940",
    "end": "1347650"
  },
  {
    "text": "wanted to rename their package so there's a great ecosystem of small",
    "start": "1347650",
    "end": "1352810"
  },
  {
    "text": "libraries in nodejs but there are some issues that go with that a lot of them were immature compared to their suits",
    "start": "1352810",
    "end": "1358840"
  },
  {
    "text": "Java or go counterparts a good example this is the nude HTTP client and so the",
    "start": "1358840",
    "end": "1366550"
  },
  {
    "text": "go version is 10 times faster but it's purely the implementation if it was written in C++ it would be much much",
    "start": "1366550",
    "end": "1372310"
  },
  {
    "text": "better implemented and so while you have this great ecosystem of small library sometimes the libraries are too small sometimes the dependency chain isn't",
    "start": "1372310",
    "end": "1379480"
  },
  {
    "text": "necessarily clear and so you have issues where left pad can take down the Internet",
    "start": "1379480",
    "end": "1386400"
  },
  {
    "text": "and then ultimately don't be afraid of writing C++ so also again it's just a",
    "start": "1386830",
    "end": "1392200"
  },
  {
    "text": "small scripting layer so sometimes when you need more performance the right thing to do is just go a level down and",
    "start": "1392200",
    "end": "1397750"
  },
  {
    "text": "then write bindings that expose that functionality to your language and I think oftentimes people don't necessarily think they should do that",
    "start": "1397750",
    "end": "1403600"
  },
  {
    "text": "but there's there's nothing wrong with that and parts of our core services are written that way and so again just to",
    "start": "1403600",
    "end": "1410110"
  },
  {
    "text": "recap some of the lessons that we learn HTH a song was designed for browsers using RPC with T channel and thrift is",
    "start": "1410110",
    "end": "1417490"
  },
  {
    "text": "much better form for a computer to computer request when you're just microservices communicating between each",
    "start": "1417490",
    "end": "1422620"
  },
  {
    "text": "other it's much more efficient to talk via binary wire protocol this one comes",
    "start": "1422620",
    "end": "1428920"
  },
  {
    "text": "down to scaling with large teams after certain age micro-services should become immutable at some point it's easier to",
    "start": "1428920",
    "end": "1435340"
  },
  {
    "text": "ask people to move to a new service and it is to ask them to change all the interfaces that connect to that service",
    "start": "1435340",
    "end": "1440680"
  },
  {
    "text": "and so we have this idea that after a period of time a service can't change that we will release a new service that",
    "start": "1440680",
    "end": "1447220"
  },
  {
    "text": "replaces that functionality and having multiple language allows 14 preferences",
    "start": "1447220",
    "end": "1452230"
  },
  {
    "text": "but it also serves as a great developers based on their culture and it starts to eliminate the ease of use of reusing",
    "start": "1452230",
    "end": "1459700"
  },
  {
    "text": "code people on teams allowing teams to move around the company and so this is some",
    "start": "1459700",
    "end": "1465460"
  },
  {
    "text": "issues we'll just adjust that for everybody okay performance problems are",
    "start": "1465460",
    "end": "1474070"
  },
  {
    "text": "difficult to debug when you have these complex distributed applications with thousands of services so we had to invest heavily in standardized",
    "start": "1474070",
    "end": "1479740"
  },
  {
    "text": "dashboards to give you meaningful information and observability tools that allow you to get to the root cause of",
    "start": "1479740",
    "end": "1484960"
  },
  {
    "text": "these performance problems like Lethe ager and long and should never slow down production if anything wrong should be",
    "start": "1484960",
    "end": "1491230"
  },
  {
    "text": "drop rather than delay the next request but all of these decisions are architecture decisions that are just",
    "start": "1491230",
    "end": "1496990"
  },
  {
    "text": "trade-offs it's easy when you're growing very fast to go with the moment to let the momentum carry you but oftentimes",
    "start": "1496990",
    "end": "1504580"
  },
  {
    "text": "you need to step back and be intentional with these decisions and so a lot of these lessons come because nobody's",
    "start": "1504580",
    "end": "1509620"
  },
  {
    "text": "stepped back and made intentional decisions Engineers just build things to survive to be able to scale so things",
    "start": "1509620",
    "end": "1516040"
  },
  {
    "text": "weren't falling over and so I think the salient point and so the next way we use",
    "start": "1516040",
    "end": "1521590"
  },
  {
    "text": "JavaScript is really with our web platform our web platform today is based on react and express the much of open",
    "start": "1521590",
    "end": "1527080"
  },
  {
    "text": "source tools that you've probably seen the various properties whether it's uber calm and checking out for a ride if",
    "start": "1527080",
    "end": "1533680"
  },
  {
    "text": "you're interested in self-driving cars or advanced technologies group uber afraid to book a load and a button book",
    "start": "1533680",
    "end": "1540070"
  },
  {
    "text": "a load signing up to riding any estimates ordering food movie packages or things around town and managing your",
    "start": "1540070",
    "end": "1547540"
  },
  {
    "text": "business visualizing data for city governments and my favorite website that we personally maintain is developed over",
    "start": "1547540",
    "end": "1553690"
  },
  {
    "text": "comm where we empower third parties to build moving experiences but the reason I show all those we have more than 250",
    "start": "1553690",
    "end": "1559870"
  },
  {
    "text": "web applications that we have to maintain and without a consistent foundation all these applications would have building built off entirely",
    "start": "1559870",
    "end": "1565630"
  },
  {
    "text": "different tools and different architectures which creates a higher likelihood that they're going to have problems so that security vulnerability",
    "start": "1565630",
    "end": "1571600"
  },
  {
    "text": "and or just duplicated effort across teams which you start to realize",
    "start": "1571600",
    "end": "1576730"
  },
  {
    "text": "investing in platform solves these problems and so you'll notice the theme is that we invest in these technology platforms it allows developers to use a",
    "start": "1576730",
    "end": "1583450"
  },
  {
    "text": "standardized staff that's purpose-built for our tools and so let's talk a little bit about how we did that for our web",
    "start": "1583450",
    "end": "1589390"
  },
  {
    "text": "platform so to high-level our web platforms built on nodejs and npm like all the",
    "start": "1589390",
    "end": "1596530"
  },
  {
    "text": "JavaScript applications and we use Express as it's a lightweight framework that we've extend with a bunch of",
    "start": "1596530",
    "end": "1601660"
  },
  {
    "text": "middlewares and on the client side we use reacting read ups pretty straightforward now this",
    "start": "1601660",
    "end": "1606910"
  },
  {
    "text": "is particularly cutting-edge I think this is a pretty standard open source stack these days and so we use internet",
    "start": "1606910",
    "end": "1612400"
  },
  {
    "text": "sinha proxy for front-end web servers and load balancers use NPM to manage our packages Babel so we can use the latest",
    "start": "1612400",
    "end": "1619810"
  },
  {
    "text": "generation JavaScript Express so we have a lightweight web framework react for UI",
    "start": "1619810",
    "end": "1624880"
  },
  {
    "text": "rendering Redux for state management and then a bunch of tools that are built on top of gulp that allow us to have a",
    "start": "1624880",
    "end": "1630700"
  },
  {
    "text": "consistent build and deploy pipeline and standardize builds when across all these applications and so for the most part",
    "start": "1630700",
    "end": "1637050"
  },
  {
    "text": "most of these applications are built using the same stack and it comes with some other special sauce that we need to",
    "start": "1637050",
    "end": "1643270"
  },
  {
    "text": "add on top that's a that makes it purpose-built for our stack one we need an internal NPM registries for private",
    "start": "1643270",
    "end": "1650500"
  },
  {
    "text": "package management and then hashing and basically better resiliency so we don't get blocked by deploy issues and when",
    "start": "1650500",
    "end": "1657310"
  },
  {
    "text": "you have a large team you want to make it very easy to scaffold new projects so we have our own equivalent to vo man",
    "start": "1657310",
    "end": "1663610"
  },
  {
    "text": "that allows us to bootstrap new applications with these best practices built-in I don't want to have to spend a",
    "start": "1663610",
    "end": "1668620"
  },
  {
    "text": "day configuring express to use all these middlewares I just want to create a new project that's ready to go and then we",
    "start": "1668620",
    "end": "1674950"
  },
  {
    "text": "customized our middle customized Express with a bunch of middlewares that allow us to handle standardized authentication",
    "start": "1674950",
    "end": "1680160"
  },
  {
    "text": "handle security issues like XSS cross cross site request forgeries and content",
    "start": "1680160",
    "end": "1686560"
  },
  {
    "text": "security policy on the front end without having to be a lot of work it should be baked in by default and then handling",
    "start": "1686560",
    "end": "1692860"
  },
  {
    "text": "metrics logging internationalization errors instrumentation analytics should just be something you get by building on",
    "start": "1692860",
    "end": "1698530"
  },
  {
    "text": "top of our framework and so our framework now only uses Express but we extend Express to be built around all",
    "start": "1698530",
    "end": "1703900"
  },
  {
    "text": "our internal tools the libraries we use for translations libraries we use for our analytics pipeline etc and that's on",
    "start": "1703900",
    "end": "1712210"
  },
  {
    "text": "the server side but we have the same thing on the client side so if you want to quickly build applications you want a UI component library that makes it easy",
    "start": "1712210",
    "end": "1719080"
  },
  {
    "text": "to try a build drag and drop components and so we built the library on top of jas and then again we don't use HTTP for",
    "start": "1719080",
    "end": "1727580"
  },
  {
    "text": "everything so we have our own I RPC library on the client-side that allows us to intelligently use HTTP or Qi",
    "start": "1727580",
    "end": "1733910"
  },
  {
    "text": "Channel or whatever way your service is actually as communicating and then",
    "start": "1733910",
    "end": "1739220"
  },
  {
    "text": "finally shared build build tooling for powered by gulp that allows us to have hot reloading use the latest versions of",
    "start": "1739220",
    "end": "1745910"
  },
  {
    "text": "JavaScript and they make it easy to deploy assets and deploy our applications and do it in a consistent",
    "start": "1745910",
    "end": "1751970"
  },
  {
    "text": "way with standardized testing and standardized code styles through lint and yeah and then universal rendering",
    "start": "1751970",
    "end": "1760250"
  },
  {
    "text": "for the server and client I think this is again one of the biggest reasons we continue to use node.js today is it allows us to write the same code on the",
    "start": "1760250",
    "end": "1766309"
  },
  {
    "text": "client side as the server side and allows us to use isomorphic rendering to provide the same views whether it's front-end or back-end but we go a step",
    "start": "1766309",
    "end": "1773420"
  },
  {
    "text": "further than that and not just in exposing a front-end client that's",
    "start": "1773420",
    "end": "1778640"
  },
  {
    "text": "wasn't written in react and a back-end service and threatening new JFS we actually separate our front-end services",
    "start": "1778640",
    "end": "1784309"
  },
  {
    "text": "those that serve the web pages or at least the shells of the pages from our back-end services those that interface",
    "start": "1784309",
    "end": "1789500"
  },
  {
    "text": "with the underlying microservices and provide data to those who use and so there's a couple of different reasons",
    "start": "1789500",
    "end": "1794630"
  },
  {
    "text": "for this one the services could take advantage of the universal rendering and tooling so everything just works out of",
    "start": "1794630",
    "end": "1799850"
  },
  {
    "text": "the box but you can also better utilize languages for specific use case so if you want to implement certain services",
    "start": "1799850",
    "end": "1805880"
  },
  {
    "text": "and go in the backend you can do that and then you can just talk to them via node and expose that in JavaScript on",
    "start": "1805880",
    "end": "1812720"
  },
  {
    "text": "the front-end it also allows you to deploy and scale your services separately and finally you can reuse",
    "start": "1812720",
    "end": "1819140"
  },
  {
    "text": "those back-end services for more things like a mobile client or for our external",
    "start": "1819140",
    "end": "1824630"
  },
  {
    "text": "API and so if you take a look at what our architecture looks like I have to adjust this to make some people happy",
    "start": "1824630",
    "end": "1832130"
  },
  {
    "text": "but at a high level this is what the architecture looks like in the client side again it's a react application",
    "start": "1832130",
    "end": "1839200"
  },
  {
    "text": "inside of that we have a set of standardized react components and then we use redux for statements meant along",
    "start": "1839200",
    "end": "1845929"
  },
  {
    "text": "the way we have our own RPC library underneath it handles talking to these back-end services and then we have our",
    "start": "1845929",
    "end": "1852679"
  },
  {
    "text": "back our back-end application server which is just the proxy from nginx and ha proxy and then we have our",
    "start": "1852679",
    "end": "1859559"
  },
  {
    "text": "application server the application server has a standing assets pipeline as it's really just offloads things to a",
    "start": "1859559",
    "end": "1866100"
  },
  {
    "text": "CDN we have a way to route requests to the underlying patent services and then we have the actual pages that get served",
    "start": "1866100",
    "end": "1872760"
  },
  {
    "text": "to the browser and then along there we also have ways to do isomorphic rendering as well as a way to have a",
    "start": "1872760",
    "end": "1879660"
  },
  {
    "text": "shared routing mechanism between the front end in the backend as well with react router and then so one of the",
    "start": "1879660",
    "end": "1885990"
  },
  {
    "text": "things that we focus on is these react components to make it easy to have standardized UI's without having to",
    "start": "1885990",
    "end": "1892320"
  },
  {
    "text": "write all the code yourself so most people are familiar with bootstrappers herbs foundation this is our equivalent",
    "start": "1892320",
    "end": "1897570"
  },
  {
    "text": "built on top of react and so we liked it because it allows us to if you saw all those websites I personally think they",
    "start": "1897570",
    "end": "1903809"
  },
  {
    "text": "all look very good and that's not because they had a dedicated designer on each team who like made everything pixel",
    "start": "1903809",
    "end": "1909960"
  },
  {
    "text": "perfect it's because they had the standardized tooling it made it look good out of the box and so that's one of",
    "start": "1909960",
    "end": "1915360"
  },
  {
    "text": "the reasons that we have these react components they're really optimized for performance and they encapsulate the style so that over the wire they're as",
    "start": "1915360",
    "end": "1921570"
  },
  {
    "text": "light as possible but they also have analytics instrumentation bacon if I click on a form element I don't want it",
    "start": "1921570",
    "end": "1928020"
  },
  {
    "text": "to track the redux the state and when they type in some data and pass that along I want to be able to intercept",
    "start": "1928020",
    "end": "1934350"
  },
  {
    "text": "those events and have them automatically passed to our analytics pipeline and so by having all the stuff built into the",
    "start": "1934350",
    "end": "1939660"
  },
  {
    "text": "front-end it just makes it easy to do out-of-the-box and then as brands change over time which they eventually do it",
    "start": "1939660",
    "end": "1946500"
  },
  {
    "text": "makes it easy to get seamless upgrades to new versions and so we believe heavily in writing CSS and JavaScript",
    "start": "1946500",
    "end": "1954000"
  },
  {
    "text": "and this is for a few reasons one is because it's ultra performant you can",
    "start": "1954000",
    "end": "1959520"
  },
  {
    "text": "only ever serve the CSS that's actually being used on the page and you don't have to handle with that runtime and so",
    "start": "1959520",
    "end": "1965970"
  },
  {
    "text": "we try to enjoy we use one of the engineers on our web platform team who actually wrote style tron outside of",
    "start": "1965970",
    "end": "1972809"
  },
  {
    "text": "uber and then we adopted it on our team as well and we started to use it internally so all of our CSS is powered",
    "start": "1972809",
    "end": "1979530"
  },
  {
    "text": "by style Tron and the latest generation of our web platform and this makes it easy to manage all styles in one place",
    "start": "1979530",
    "end": "1984600"
  },
  {
    "text": "you have one file one react component one thing to edit you don't have to track libraries across libraries to",
    "start": "1984600",
    "end": "1990630"
  },
  {
    "text": "figure how to make something - how to make something look different and so one of",
    "start": "1990630",
    "end": "1995980"
  },
  {
    "text": "my favorite ways that we use javascript is actually in data visualizations and so this is one of the most powerful ways that we use JavaScript today and so this",
    "start": "1995980",
    "end": "2003630"
  },
  {
    "text": "is a day in the life of San Francisco and so if you take a look at this visualization this is actually powered",
    "start": "2003630",
    "end": "2009270"
  },
  {
    "text": "by def GL which is a WebGL framework we've released and allows us to",
    "start": "2009270",
    "end": "2014310"
  },
  {
    "text": "understand how cities work we one of the our cultural values values is to celebrate cities and what you start to",
    "start": "2014310",
    "end": "2020370"
  },
  {
    "text": "understand is that every city is very unique but in order to understand how it works you need to be able to visualize",
    "start": "2020370",
    "end": "2025530"
  },
  {
    "text": "it and so we've invested heavily these digitalization frameworks to allow us to do that and so you can check these out a",
    "start": "2025530",
    "end": "2032310"
  },
  {
    "text": "little bit later but I'll talk through them quickly now we have reacted is this is a charting library that basically",
    "start": "2032310",
    "end": "2037410"
  },
  {
    "text": "maps to react components and so if you're used to building excellent charts with d3 this is a react interface to do",
    "start": "2037410",
    "end": "2044010"
  },
  {
    "text": "that with standardized components for various charts most of the maps that you",
    "start": "2044010",
    "end": "2049800"
  },
  {
    "text": "see on our website and in our applications it is powered by react map GL and so if you know map offices GL",
    "start": "2049800",
    "end": "2055888"
  },
  {
    "text": "library this is just a react interface to that and then one of my favorite",
    "start": "2055889",
    "end": "2061020"
  },
  {
    "text": "libraries is deck GL which allows you to use millions of data points and to visualize them in the hyper formal way",
    "start": "2061020",
    "end": "2066840"
  },
  {
    "text": "and so really it's built on top of WebGL - and it's a layered approach for visualizing data and then we also",
    "start": "2066840",
    "end": "2074158"
  },
  {
    "text": "released luma GL and so luma GL simple interface to WebGL actually standard",
    "start": "2074159",
    "end": "2079770"
  },
  {
    "text": "interface using X script 6 - WebGL - that also deals with some 64-bit",
    "start": "2079770",
    "end": "2087590"
  },
  {
    "text": "precision ok so react vis again fancy charts very easy through react interface",
    "start": "2087590",
    "end": "2093990"
  },
  {
    "text": "you can check out more at at JavaScript our uber github bio slash node web and",
    "start": "2093990",
    "end": "2103370"
  },
  {
    "text": "so it gives you a composable visualization system but really makes it easy to render charts whether it's line",
    "start": "2103370",
    "end": "2108960"
  },
  {
    "text": "area bar charts heat maps scatter plots sunburst and tree maps and so every different chart and visualization you",
    "start": "2108960",
    "end": "2115110"
  },
  {
    "text": "can imagine it's supported by react is and so some of the ways that we use this today are to again understanding health",
    "start": "2115110",
    "end": "2121830"
  },
  {
    "text": "cities flow and so what you're looking at is an interactive map of New York as you mouse over you can see the pickup and",
    "start": "2121830",
    "end": "2128310"
  },
  {
    "text": "drop off locations from a particular point and so if you're a city manager trying to understand where supply needs",
    "start": "2128310",
    "end": "2133800"
  },
  {
    "text": "to be in a city over time and where people get dropped off this makes it very easy to understand that information",
    "start": "2133800",
    "end": "2141320"
  },
  {
    "text": "this is another visualization that shows density in New York and so this makes it easy to understand",
    "start": "2141320",
    "end": "2147180"
  },
  {
    "text": "over time what it pickups and drop-offs to look like in certain locations and so again all of these visualizations are",
    "start": "2147180",
    "end": "2153900"
  },
  {
    "text": "powered by debt TL and debt feels really designed to make visualization of large datasets extremely simple and so when",
    "start": "2153900",
    "end": "2160890"
  },
  {
    "text": "you're it's easy to visualize a couple thousand thousand pieces of information it's much more complex to visualize in",
    "start": "2160890",
    "end": "2167610"
  },
  {
    "text": "real time millions of pieces of information and so using layering and instant thing we're able to provide high",
    "start": "2167610",
    "end": "2173610"
  },
  {
    "text": "performance like you've seen previously and then luma GL luma GL just makes it",
    "start": "2173610",
    "end": "2180180"
  },
  {
    "text": "very easy to interact with WebGL so it's a modern interface for dealing with WebGL and the component base platform at",
    "start": "2180180",
    "end": "2186300"
  },
  {
    "text": "handles 64-bit precision which we need for the degree of mapping that we do and it also provides a better way to handle",
    "start": "2186300",
    "end": "2194250"
  },
  {
    "text": "errors in WebGL and so you can check out more GL one of the best examples I think",
    "start": "2194250",
    "end": "2200520"
  },
  {
    "text": "they have is when mapping yellow cabs for screen caps over the course of the day and so sadly I don't think this",
    "start": "2200520",
    "end": "2206910"
  },
  {
    "text": "animation is playing but what you can see is Manhattan rendered in 3d and then the traffic flows across the real cities",
    "start": "2206910",
    "end": "2213660"
  },
  {
    "text": "all done in real time using millions of data points and so this is actually quite an impressive feat to be able to",
    "start": "2213660",
    "end": "2219090"
  },
  {
    "text": "do in JavaScript and have it be high-performing and so all this is available as open source and we're completely open to pull requests in the",
    "start": "2219090",
    "end": "2225630"
  },
  {
    "text": "community so feel free to check it out and follow up and again this is one more visualization that shows over the period",
    "start": "2225630",
    "end": "2231900"
  },
  {
    "text": "of 24 hours what drop-offs look like in San Francisco in the Bay Area and so one",
    "start": "2231900",
    "end": "2237780"
  },
  {
    "text": "of the biggest ways that we use Javas for today is to get in visualize cities so that we understand how to most efficiently work in a city and most of",
    "start": "2237780",
    "end": "2244680"
  },
  {
    "text": "this is powered via JavaScript and all the libraries that talk about today are all open source and available on uber",
    "start": "2244680",
    "end": "2250250"
  },
  {
    "text": "by oh and so the last place that we use javascript is through our developer",
    "start": "2250250",
    "end": "2255260"
  },
  {
    "text": "platform and so we want teams - we want third parties to be able to build moving experiences whether it's offering",
    "start": "2255260",
    "end": "2260420"
  },
  {
    "text": "on-demand rise or doing on-demand delivery we expose all these 3400 micro",
    "start": "2260420",
    "end": "2265910"
  },
  {
    "text": "services as for the business domain objects and we make it very easy to interact with them via our node SDK so",
    "start": "2265910",
    "end": "2272270"
  },
  {
    "text": "if you want to be able to offer on-demand rise inside of your applications or to be able to plug",
    "start": "2272270",
    "end": "2277640"
  },
  {
    "text": "directly into the uber trip to create a custom experience you can very easily do that through our node SDK and so again",
    "start": "2277640",
    "end": "2284510"
  },
  {
    "text": "almost all this is powered by open source tools and so we very heavily contribute back to the community and not",
    "start": "2284510",
    "end": "2292010"
  },
  {
    "text": "only the tools that we use and there are presence on github but also through our engineering blog and so you're right",
    "start": "2292010",
    "end": "2298520"
  },
  {
    "text": "tons of tutorials that go very deep and how to use some of these tools and sort of why we built them and so if we're",
    "start": "2298520",
    "end": "2303890"
  },
  {
    "text": "talk like this I wanted to go very quick at a high level through many of the tools but the best way to follow up is",
    "start": "2303890",
    "end": "2309440"
  },
  {
    "text": "through the deep dives that live in our engineering world and so if you're interested in some of the nude back-end",
    "start": "2309440",
    "end": "2314599"
  },
  {
    "text": "pools you can go to github.com slash uber nude and so this is really focused",
    "start": "2314599",
    "end": "2319609"
  },
  {
    "text": "on all the open source packing tools to build node.js applications the things I talked about earlier things like Ring",
    "start": "2319609",
    "end": "2325369"
  },
  {
    "text": "Pop and Jager and Qi Channel and then you can go to github.com / uber web for",
    "start": "2325369",
    "end": "2331460"
  },
  {
    "text": "some of our web front-end properties web tools and like our standardized Lent",
    "start": "2331460",
    "end": "2336940"
  },
  {
    "text": "rules for having consistent code and then all the other sort of visualizations that you have and then",
    "start": "2336940",
    "end": "2343970"
  },
  {
    "text": "again finally is our uber engineering blog uber inch and super calm and we dive into all of these tools and through",
    "start": "2343970",
    "end": "2351080"
  },
  {
    "text": "in-depth write-up so the best place I think for every tool that I've mentioned we have wall secure very deep into them",
    "start": "2351080",
    "end": "2356990"
  },
  {
    "text": "so I think that's a great place to dive in and so we want to build an open",
    "start": "2356990",
    "end": "2362119"
  },
  {
    "text": "platform for building moving experiences not only using our tools but also you know by providing the data that we that",
    "start": "2362119",
    "end": "2368960"
  },
  {
    "text": "we use to build a great service and we want to expose that for third parties and so what future will you build all of",
    "start": "2368960",
    "end": "2375140"
  },
  {
    "text": "these tools all of this talk is built from people way smarter than myself I just get to be the person that",
    "start": "2375140",
    "end": "2380240"
  },
  {
    "text": "represents it this comes from you know thousands of engineers working on all these tools and so a lot of the credit for this talk",
    "start": "2380240",
    "end": "2386710"
  },
  {
    "text": "goes to the many smart people at uber and if you want to join the team we have offices in Amsterdam and San Francisco",
    "start": "2386710",
    "end": "2392950"
  },
  {
    "text": "around the world so feel free to follow up and there's some great talks that I also recommend as well and with that I",
    "start": "2392950",
    "end": "2399460"
  },
  {
    "text": "would like to open it up for questions",
    "start": "2399460",
    "end": "2403650"
  }
]