[
  {
    "text": "[Music]",
    "start": "990",
    "end": "7859"
  },
  {
    "text": "thank you so much for coming so my name is Jason sting but before we begin",
    "start": "12639",
    "end": "20380"
  },
  {
    "text": "connection issues I just use my spacebar so before we begin I like to ask you if",
    "start": "21040",
    "end": "28880"
  },
  {
    "text": "you can raise your previous session it will help the conference itself a little bit about myself my name is Jayden it's",
    "start": "28880",
    "end": "35210"
  },
  {
    "text": "Fang I'm Dutch and I already noticed like Danish sounds a little bit like Dutch I'm trying to parse some Danish",
    "start": "35210",
    "end": "41929"
  },
  {
    "text": "but I just can't do it it's like Coughlin's first and Swift it's like almost the same but not really but it's",
    "start": "41929",
    "end": "48319"
  },
  {
    "text": "it's quite interesting so I work at ING I mean I was consulted and I hope ing",
    "start": "48319",
    "end": "54620"
  },
  {
    "text": "scale up their business so basically build more modules and work with large teams etc which inspired this talk I",
    "start": "54620",
    "end": "61449"
  },
  {
    "text": "also wrote a book called Swift in-depth published by Manning and I'll share some",
    "start": "61449",
    "end": "66560"
  },
  {
    "text": "more links at the end for this so why am I talking about scaling an iOS",
    "start": "66560",
    "end": "72619"
  },
  {
    "text": "application so if you have a if you have an application for example an XO project",
    "start": "72619",
    "end": "78170"
  },
  {
    "text": "and you want to go bigger let's say you have some success you have more people that you add to a team and maybe these",
    "start": "78170",
    "end": "85310"
  },
  {
    "text": "people who write more code and then this is bigger and bigger and bigger at one point you have a monolithic",
    "start": "85310",
    "end": "90710"
  },
  {
    "text": "application you may want to think about splitting this up into modules but once you do you have to keep a lot of stuff",
    "start": "90710",
    "end": "96229"
  },
  {
    "text": "in sync and this is where a lot of challenges come up like a lot of roadblocks you have to worry about the Swift versions if they worry about",
    "start": "96229",
    "end": "102439"
  },
  {
    "text": "minimum iOS versions it's about worry about excavations X or beta versus bits vs. in them you have to",
    "start": "102439",
    "end": "109039"
  },
  {
    "text": "maybe wonder about Swift a bi stability what about fifth module stability what about packages versus frameworks",
    "start": "109039",
    "end": "115399"
  },
  {
    "text": "what about the new XE frameworks and I haven't even mentioned your own source code so there's a lot of stuff to worry",
    "start": "115399",
    "end": "121640"
  },
  {
    "text": "about or to think about and in this presentation my goal is that at the end you have a better idea of what to expect",
    "start": "121640",
    "end": "127999"
  },
  {
    "text": "when should work more marginally module early and what to basically give more",
    "start": "127999",
    "end": "133370"
  },
  {
    "text": "confidence so that you can as well do the same thing so what are we going to talk about",
    "start": "133370",
    "end": "139670"
  },
  {
    "text": "you're gonna take a co bass and I'm gonna skate it up so basically what I mean is we kind of take a singer monolithic application and gonna make it",
    "start": "139670",
    "end": "147000"
  },
  {
    "text": "more modular we're gonna think about modules are gonna talk about versioning",
    "start": "147000",
    "end": "154200"
  },
  {
    "text": "so with first thing there's already some information about what's versioning is but having first thing in practice means",
    "start": "154200",
    "end": "160710"
  },
  {
    "text": "there's some more stuff to worry about it's one thing to think about majors - and patches but there's another thing to",
    "start": "160710",
    "end": "166170"
  },
  {
    "text": "keep your code stable in the end it's about making sure that your source",
    "start": "166170",
    "end": "171570"
  },
  {
    "text": "doesn't break because there's nothing more annoying if you develop a break something for developer B the developers",
    "start": "171570",
    "end": "177480"
  },
  {
    "text": "tend to not like it then things break and another aspect of this is that you",
    "start": "177480",
    "end": "183870"
  },
  {
    "text": "can end up in in a stage called dependency hell so you can have a certain dependency tree that cannot be",
    "start": "183870",
    "end": "189660"
  },
  {
    "text": "resolved and how can you prevent this and how can you deal with this I want to talk about this as well Union is not",
    "start": "189660",
    "end": "196410"
  },
  {
    "text": "just about code there are there are also organizational challenges to be aware of and lastly I want to talk a bit about",
    "start": "196410",
    "end": "203820"
  },
  {
    "text": "package managers and I know that the suit package manager just came out it's nicely integrated into Xcode 11 but",
    "start": "203820",
    "end": "210180"
  },
  {
    "text": "could this be the right package manager for you and I was inside of insights about this so life begins as an Xcode",
    "start": "210180",
    "end": "217590"
  },
  {
    "text": "project when it grows bigger it becomes a workspace and this workspace can",
    "start": "217590",
    "end": "225870"
  },
  {
    "text": "contain a couple projects right it can contain your application maybe some dependencies you got from online like",
    "start": "225870",
    "end": "231959"
  },
  {
    "text": "you can maybe pull them in through cocoa pods or Carteret or this package manager but I want what I want to talk about is",
    "start": "231959",
    "end": "239090"
  },
  {
    "text": "basically an environment where you have local projects so think about it very instead of having one application you",
    "start": "239090",
    "end": "245730"
  },
  {
    "text": "have one application that depends on multiple modules all right amid module I mean you can have a so-called framework",
    "start": "245730",
    "end": "252390"
  },
  {
    "text": "which is code plus bundle with assets or maybe a swift package which is pure code and will soon have bundles as well so",
    "start": "252390",
    "end": "261060"
  },
  {
    "text": "for example if you look at a dependency tree we can have one module at the bottom which is could be a core module",
    "start": "261060",
    "end": "267330"
  },
  {
    "text": "so for example this is similar to Apple's form and this can power up other modules",
    "start": "267330",
    "end": "273900"
  },
  {
    "text": "right so we can use the core module to make other modules and give support to",
    "start": "273900",
    "end": "279450"
  },
  {
    "text": "build what we need and on top of that we can build our features maybe some UI features maybe some caching layer or",
    "start": "279450",
    "end": "286680"
  },
  {
    "text": "maybe a store layer and in the end we can all integrate it into an application now this is a typical dependency tree",
    "start": "286680",
    "end": "294150"
  },
  {
    "text": "like for your company it can be very different but it is still quite normal",
    "start": "294150",
    "end": "300390"
  },
  {
    "text": "way to go about where you first start extracting the core layer and because it has no dependencies you can solve it at",
    "start": "300390",
    "end": "306000"
  },
  {
    "text": "first and once that's done you can decide how far you want to go with this you can make 100 modules you can make one it doesn't really matter you have to",
    "start": "306000",
    "end": "312240"
  },
  {
    "text": "pick what you can choose what works best for you but for there for the rest of this talk I want to show you how to work",
    "start": "312240",
    "end": "318510"
  },
  {
    "text": "with this kind of structure now one thing to keep in mind is that the core module at the bottom is the most",
    "start": "318510",
    "end": "324570"
  },
  {
    "text": "important one so when you start you may think okay I have a piece of code it doesn't go in this UI framework and it",
    "start": "324570",
    "end": "330780"
  },
  {
    "text": "doesn't go into this other framework I'm gonna put it in core but basically then you get a sort of like a shower drain",
    "start": "330780",
    "end": "336060"
  },
  {
    "text": "all the hairs and the dead skin cells end up in actually you need to make sure that this lowest level module is the",
    "start": "336060",
    "end": "343170"
  },
  {
    "text": "most taking care of all of them it's the most important one and we'll see you why in a second so if you want to take code",
    "start": "343170",
    "end": "351090"
  },
  {
    "text": "out first you gotta physically basically take the code out into its own project",
    "start": "351090",
    "end": "356970"
  },
  {
    "text": "right you gotta find all the dependencies and cut them so that means you have to think about it dependency injection",
    "start": "356970",
    "end": "362430"
  },
  {
    "text": "maybe your new new project will support a protocol that others can implement and",
    "start": "362430",
    "end": "367440"
  },
  {
    "text": "then submit to your project or maybe you can use closures or the delegate pattern",
    "start": "367440",
    "end": "373610"
  },
  {
    "text": "secondly what is important is to look at the public API and let's go into detail for this imagine we have a piece of code",
    "start": "375080",
    "end": "384180"
  },
  {
    "text": "as a public method right calculating worker plan and this code lives inside your project now all the other projects",
    "start": "384180",
    "end": "392040"
  },
  {
    "text": "and application can reach for this but a big benefit of exchanging code into a project is that you can now decide if",
    "start": "392040",
    "end": "398430"
  },
  {
    "text": "you want something public or internal so the internal keywords in in project states that",
    "start": "398430",
    "end": "403949"
  },
  {
    "text": "only the project can reach for it but not anything else outside of it so if you have a piece of code in your",
    "start": "403949",
    "end": "409020"
  },
  {
    "text": "application you can choose between internal and private but public doesn't really add much value but if you go into",
    "start": "409020",
    "end": "415919"
  },
  {
    "text": "a project you can decide if something that's internal and I don't want to expose it to other frameworks or the",
    "start": "415919",
    "end": "421770"
  },
  {
    "text": "application itself so this you can add a bit more control by taking some code out",
    "start": "421770",
    "end": "426979"
  },
  {
    "text": "the second benefit is you can still do a testable import so basically anything",
    "start": "426979",
    "end": "433199"
  },
  {
    "text": "that's internal becomes public so you can still test more deeply into your code if you want to you also want to",
    "start": "433199",
    "end": "441930"
  },
  {
    "text": "have to consider what about the public API and I recommend minimizing it with",
    "start": "441930",
    "end": "447000"
  },
  {
    "text": "minimizing it it's what I mean is you you look at all the public statements all the public in your code and you try",
    "start": "447000",
    "end": "452370"
  },
  {
    "text": "to make as much as possible if the internal or private now it's very tempting to have a lot of code and you",
    "start": "452370",
    "end": "458099"
  },
  {
    "text": "want to give it to everybody like oh I wrote this extension about these few cans what about this class and everybody can use it but then the problem is that",
    "start": "458099",
    "end": "464249"
  },
  {
    "text": "you have a lot of public code that you need to maintain and things can break because if you change something in the public API and other people cannot",
    "start": "464249",
    "end": "471360"
  },
  {
    "text": "handle they they may have breaking code so how I see it is you have maybe a Phet",
    "start": "471360",
    "end": "476430"
  },
  {
    "text": "framework a Fed module with a thin layer around it and that's how they talk to each other so this makes it easier for",
    "start": "476430",
    "end": "482849"
  },
  {
    "text": "you to work in the background to update some some code the public API stays more stable now very obvious test your code",
    "start": "482849",
    "end": "492629"
  },
  {
    "text": "and we all test right well the public API becomes even more important because it's a contract it guarantees that the",
    "start": "492629",
    "end": "500009"
  },
  {
    "text": "code you give is stable now you want to keep it stable at least so testing helps with this so if you're going to test",
    "start": "500009",
    "end": "505860"
  },
  {
    "text": "anything I have to consciously be aware that you want to test the public API another obvious one that still may be",
    "start": "505860",
    "end": "513659"
  },
  {
    "text": "rare to find is to add some documentation and I know I know my code is self documenting but",
    "start": "513659",
    "end": "520219"
  },
  {
    "text": "documentation but documentation is about the why code is the what the code says what it does",
    "start": "520219",
    "end": "526890"
  },
  {
    "text": "but the documentation can say why you would wanna use this type of why you wanna use something else and maybe the",
    "start": "526890",
    "end": "533399"
  },
  {
    "text": "world of a method or something different altogether so documentation goes a long way once you have a different project",
    "start": "533399",
    "end": "539279"
  },
  {
    "text": "that you want to give maybe to a different team or implement in their own code so the way I look at it is once I",
    "start": "539279",
    "end": "548010"
  },
  {
    "text": "have project I look at it it's a checklist so it doesn't fit all the requirements one thing I want to look at",
    "start": "548010",
    "end": "554790"
  },
  {
    "text": "is does it have a change log do you keep your other teams and other people in your company up to date on what has been",
    "start": "554790",
    "end": "559980"
  },
  {
    "text": "updated maybe you can offer a readme I'm not asking you to write a full book for",
    "start": "559980",
    "end": "567089"
  },
  {
    "text": "maybe a quick start guide could be enough so that other people can quickly implement your coding and up and running can be a small piece of code or a small",
    "start": "567089",
    "end": "574290"
  },
  {
    "text": "piece of documentation that you write and it can go a long way I say here you",
    "start": "574290",
    "end": "581279"
  },
  {
    "text": "can offer an intuitive API and that's like for talks all together but bit intuitive API I mean that API is so",
    "start": "581279",
    "end": "588420"
  },
  {
    "text": "important the public API that you really have to reconsider if this is exactly how you like it",
    "start": "588420",
    "end": "593430"
  },
  {
    "text": "because once people start depending on your code the API is is key here so you",
    "start": "593430",
    "end": "598470"
  },
  {
    "text": "have to make sure that the API is how you like it how you want it to be and",
    "start": "598470",
    "end": "604190"
  },
  {
    "text": "again make sure that the public API is tested if you have a UI framework for",
    "start": "604190",
    "end": "612029"
  },
  {
    "text": "example you offer some few controllers what I recommend recommend is offering a sample app and the sample app can be",
    "start": "612029",
    "end": "617520"
  },
  {
    "text": "nothing more than an basically a table view and every cell when you press on them it will go to a few controller now",
    "start": "617520",
    "end": "624420"
  },
  {
    "text": "this has a couple benefits first is you can easily you write system this way a second someone else who may be a",
    "start": "624420",
    "end": "630240"
  },
  {
    "text": "different team can quickly open your sample app and just check which few controllers they want to implement and how you implemented them something",
    "start": "630240",
    "end": "640920"
  },
  {
    "text": "really frustrating when you work with multiple teams is when some people just make a poor recurse on your code and it kind of",
    "start": "640920",
    "end": "647040"
  },
  {
    "text": "missed some some vision or context of how you want to maintain the code and maybe it can help be helpful for your",
    "start": "647040",
    "end": "652980"
  },
  {
    "text": "teams to decide how you would like on the people to deal with the issues that they find can I just fix them for you or do",
    "start": "652980",
    "end": "659760"
  },
  {
    "text": "you maybe need to communicate how which approach you're going to take because it can't just be frustrating if someone",
    "start": "659760",
    "end": "665490"
  },
  {
    "text": "does a lot of work and the owner of a certain module does not agree and now some work has to be closed like removed",
    "start": "665490",
    "end": "672360"
  },
  {
    "text": "and it's very frustrating for both parties and again make sure that your",
    "start": "672360",
    "end": "678480"
  },
  {
    "text": "framework has lots of module has lots of comments and I mean doc comment says in the the three slashes version you can",
    "start": "678480",
    "end": "685200"
  },
  {
    "text": "generate some documentation some people just use X codes quick help some people uses Jesse to generate a website some",
    "start": "685200",
    "end": "692190"
  },
  {
    "text": "people use - documentation goes a long way if you have a UI framework maybe",
    "start": "692190",
    "end": "698520"
  },
  {
    "text": "also considering offering accessibility identifiers this gives you the ability to if you offer this to other people",
    "start": "698520",
    "end": "705900"
  },
  {
    "text": "they can quickly use it to write their own your itis for example you may have project where a few controllers all the",
    "start": "705900",
    "end": "712140"
  },
  {
    "text": "people may want to quickly embed them in their own piece of the code and quickly run rights when you write is for them",
    "start": "712140",
    "end": "718320"
  },
  {
    "text": "well you can have them dig around into your few controllers and find the buttons or maybe you can offer it to",
    "start": "718320",
    "end": "723540"
  },
  {
    "text": "them a secondary benefit is that if if you yourself use this in your own your",
    "start": "723540",
    "end": "729840"
  },
  {
    "text": "writers you know and something breaks so you don't have things to go out of sync there someone depends on a button that",
    "start": "729840",
    "end": "735840"
  },
  {
    "text": "they found and you change the accessibility identifier so it keeps things more stable so let's go over the",
    "start": "735840",
    "end": "744630"
  },
  {
    "text": "pros and cons of using a local module a big benefit is you get a hard boundaries",
    "start": "744630",
    "end": "751350"
  },
  {
    "text": "between codes for example you may have a module focus on the business layer and maybe business knowledge you can may",
    "start": "751350",
    "end": "757860"
  },
  {
    "text": "have a module focus on a networking layer and different one on UI well you can get this state where some network",
    "start": "757860",
    "end": "764580"
  },
  {
    "text": "layer of they see write directly but you have to think about the bank boundaries so if you want for example I'll take you",
    "start": "764580",
    "end": "770580"
  },
  {
    "text": "I have the network or now they have to properly use a closure or delegate or whatever form you like to choose so it's",
    "start": "770580",
    "end": "775920"
  },
  {
    "text": "physically not possible to actually the dependency stuff very hard boundaries",
    "start": "775920",
    "end": "780930"
  },
  {
    "text": "between pieces of code a secondary benefit is if you have a project that",
    "start": "780930",
    "end": "786780"
  },
  {
    "text": "you work in then you have to worry so much about the rest of the code so let's say someone on boards",
    "start": "786780",
    "end": "793589"
  },
  {
    "text": "onto your company instead of saying I care you need to know about the whole application and everything is intertwined you can say here take this",
    "start": "793589",
    "end": "799920"
  },
  {
    "text": "small project start with this piece don't worry so much about the rest of the application but make sure this this",
    "start": "799920",
    "end": "805649"
  },
  {
    "text": "public API stays stable and you don't have to think about all the dependencies that are going on right now and someone",
    "start": "805649",
    "end": "811949"
  },
  {
    "text": "becomes more experienced they can maybe take on more projects or maybe bigger parts of the puzzle but it's just nice",
    "start": "811949",
    "end": "818399"
  },
  {
    "text": "to be able to forget about the resume should work inside of the smaller smaller projects and as have you seen",
    "start": "818399",
    "end": "824639"
  },
  {
    "text": "before you can now use internal versus public versus open which I also talked about in a sec instead of just using private and",
    "start": "824639",
    "end": "831959"
  },
  {
    "text": "internal so you get more control with access levels it's also a bit easier to",
    "start": "831959",
    "end": "838050"
  },
  {
    "text": "test because you have more if you take more care of your public API you have a",
    "start": "838050",
    "end": "843839"
  },
  {
    "text": "better idea of what you want to test and you can better it iteratively test on the public API itself we're just having",
    "start": "843839",
    "end": "849990"
  },
  {
    "text": "to worry again about the whole application and a small part of that is because of the compile times they are",
    "start": "849990",
    "end": "855959"
  },
  {
    "text": "lower so if you only compile a smaller project you can quickly quickly iterate on it first we took up our complete",
    "start": "855959",
    "end": "862949"
  },
  {
    "text": "application and everything in there I mean Swift is my favorite language I wrote a whole book about it but it's the",
    "start": "862949",
    "end": "868230"
  },
  {
    "text": "compile times are not my favorite part of it so some downsides your code is",
    "start": "868230",
    "end": "874980"
  },
  {
    "text": "more fragmented right instead of having one big application you have now code spread around across multiple projects",
    "start": "874980",
    "end": "881100"
  },
  {
    "text": "there can be a hassle I think it can be also benefit but if you want to do things quickly it can be much tricky",
    "start": "881100",
    "end": "887279"
  },
  {
    "text": "because I have to update a different project go back to your other projects so it's more ceremony a second downside",
    "start": "887279",
    "end": "894180"
  },
  {
    "text": "of this approach is that your that your workspace is still monolith if I have a project and a break is public API and it",
    "start": "894180",
    "end": "902760"
  },
  {
    "text": "go somewhere else and I have to update it right away so for example let's say work with multiple teams and own",
    "start": "902760",
    "end": "908160"
  },
  {
    "text": "different pieces of the of the workspace or if you break something now you have a couple choices my team has to not",
    "start": "908160",
    "end": "914519"
  },
  {
    "text": "directly act on this on the breaking the breaking code or you have to do it yourself so there's no chance for you to",
    "start": "914519",
    "end": "920579"
  },
  {
    "text": "say oh I'm gonna break this now you can update it later so let's go a bit bigger into workspace",
    "start": "920579",
    "end": "928100"
  },
  {
    "text": "back to our workspace let's say our app is a success and a new app is to be",
    "start": "928100",
    "end": "935610"
  },
  {
    "text": "deployed I want to share some code so this new I would like to use a couple projects from the other workspace or we",
    "start": "935610",
    "end": "943590"
  },
  {
    "text": "can start hacking around with some code paths but it's kind of dirty but in the end we just can really reach for it so",
    "start": "943590",
    "end": "950880"
  },
  {
    "text": "what I recommend is that you take your code and you extract the project into",
    "start": "950880",
    "end": "955890"
  },
  {
    "text": "the only positive so that multiple workspaces can reach for it I want to",
    "start": "955890",
    "end": "961620"
  },
  {
    "text": "take a closer look let's have a few projects here they will produce some",
    "start": "961620",
    "end": "967650"
  },
  {
    "text": "artifacts all right in this case I show a shift packages but could also be frameworks and bundles and these",
    "start": "967650",
    "end": "974370"
  },
  {
    "text": "packages will then be implemented inside applications I notice here that I'm gonna version the packages the modules",
    "start": "974370",
    "end": "981180"
  },
  {
    "text": "because what happens is once you start extracting piece of code tools on repository you want to give certain",
    "start": "981180",
    "end": "986880"
  },
  {
    "text": "guarantees that the public API is stable in a certain way and we can do this with versioning so now the tricky part we're",
    "start": "986880",
    "end": "994080"
  },
  {
    "text": "gonna talk a bit about semantic versioning so semantic version stated with major dots minor dot patch for",
    "start": "994080",
    "end": "1002390"
  },
  {
    "text": "example we have 3 dot 4 dot 7 the 7 here is a patch number so if this number",
    "start": "1002390",
    "end": "1007610"
  },
  {
    "text": "increases it means that you can safely update to version at a higher pitch number maybe some bug fix or security",
    "start": "1007610",
    "end": "1014240"
  },
  {
    "text": "fix has been applied but you don't have to worry about anything breaking a minor number guarantees us that there's maybe",
    "start": "1014240",
    "end": "1021590"
  },
  {
    "text": "a new feature that's me offered but still backwards compatible for example maybe you offered a new few controller",
    "start": "1021590",
    "end": "1027650"
  },
  {
    "text": "inside your framework well you don't have to use it but you can still update to new version of it in my return minor",
    "start": "1027650",
    "end": "1034280"
  },
  {
    "text": "version and then there's the major version so the major versions basically stay that if you have to increase the",
    "start": "1034280",
    "end": "1040100"
  },
  {
    "text": "new major there's some work to be done your call may not compare things may look really different or weirder things may break so majors are tricky how the",
    "start": "1040100",
    "end": "1049010"
  },
  {
    "text": "resolving works is imagine that we have two two dependencies that are the same dependency that are needed but different",
    "start": "1049010",
    "end": "1055550"
  },
  {
    "text": "projects have the same dependency try for example one project depends on you my version one five zero two one six",
    "start": "1055550",
    "end": "1061190"
  },
  {
    "text": "zero and one other the other project depends on UI version 1 1 0 2 to give",
    "start": "1061190",
    "end": "1068269"
  },
  {
    "text": "these ranges into the dependency manager and I will try and resolve it and gives us the latest version that is possible",
    "start": "1068269",
    "end": "1074239"
  },
  {
    "text": "for us to use this can quickly go wrong for example we may have two versions",
    "start": "1074239",
    "end": "1081019"
  },
  {
    "text": "that do not overlap we have 1 5 0 2 1 6 0 we have two to three years majors",
    "start": "1081019",
    "end": "1086330"
  },
  {
    "text": "these an overlap so we can give it to a dependency manager but it cannot resolve there is no compatibility this is one",
    "start": "1086330",
    "end": "1093320"
  },
  {
    "text": "way to be in dependency hell I do have different requirements from different teams and we try to pull it all together",
    "start": "1093320",
    "end": "1098840"
  },
  {
    "text": "it just doesn't work out now this is maybe a smaller scope example once you",
    "start": "1098840",
    "end": "1103879"
  },
  {
    "text": "have big dependency graphs it becomes a lot more harder and common for this to happen but a simple solution in this",
    "start": "1103879",
    "end": "1109249"
  },
  {
    "text": "case would be to make sure that they're in the same range either by updating the old one disorder the one with the newest",
    "start": "1109249",
    "end": "1116929"
  },
  {
    "text": "version or the lowest version so you have to decide which way to go do you want to go to a new version of do you want to drop back to an older version",
    "start": "1116929",
    "end": "1122359"
  },
  {
    "text": "preferably newer because breaking it was often it can resolve again so what",
    "start": "1122359",
    "end": "1128960"
  },
  {
    "text": "happens once the resolver is done it will emit a file such as a package dot resolved or a card file does resolve or",
    "start": "1128960",
    "end": "1136850"
  },
  {
    "text": "pot fell deadlock depending on the package manager that you use and what happens here is the first in ranges that",
    "start": "1136850",
    "end": "1143389"
  },
  {
    "text": "you stated will actually be turned into a concrete version so this file you can commit and push to your codebase so the",
    "start": "1143389",
    "end": "1150259"
  },
  {
    "text": "other developers can get can get the exact same version that you are using the second version combination so this",
    "start": "1150259",
    "end": "1156080"
  },
  {
    "text": "creates reproducible builds now some people they like to have seen they like",
    "start": "1156080",
    "end": "1162320"
  },
  {
    "text": "to change this version manually so what happens is basically if you want to change the version yourself and you go",
    "start": "1162320",
    "end": "1168259"
  },
  {
    "text": "into this file you're saying oh that complicated algorithm no no I know better I'm a much better resolver than that",
    "start": "1168259",
    "end": "1174470"
  },
  {
    "text": "automated machine with lots of fancy algorithms but then what happens is you comb a compiled for us for you but if",
    "start": "1174470",
    "end": "1181220"
  },
  {
    "text": "this file will be to lead to be deleted as almost update again then you can",
    "start": "1181220",
    "end": "1186230"
  },
  {
    "text": "reach a state where things will not compile together again basically you're bypassing the and series over so don't touch it too",
    "start": "1186230",
    "end": "1193030"
  },
  {
    "text": "much or at all if you can so we've talked about versioning so minor and",
    "start": "1193030",
    "end": "1201280"
  },
  {
    "text": "patches we've seen how we can always update a lot about majors those majors are the tricky one to handle",
    "start": "1201280",
    "end": "1206320"
  },
  {
    "text": "let's go back to our tree there our dependency tree at the bottom we have a",
    "start": "1206320",
    "end": "1212170"
  },
  {
    "text": "core layer imagine that this one gets a major update right there's a new major",
    "start": "1212170",
    "end": "1217450"
  },
  {
    "text": "to dot 0 dot 0 now if you update this you have to go to other teams and say",
    "start": "1217450",
    "end": "1222520"
  },
  {
    "text": "hey maybe next time can you also update our core core framework to the new version",
    "start": "1222520",
    "end": "1227650"
  },
  {
    "text": "ok sure we do it next pin let's say it's a week once that's updated if the layer",
    "start": "1227650",
    "end": "1233080"
  },
  {
    "text": "above it can update and maybe there's another week and once that's updated because finally into the application so",
    "start": "1233080",
    "end": "1241330"
  },
  {
    "text": "in other words once you have more complicated dependency tree and you update a lower-level framework with a",
    "start": "1241330",
    "end": "1247330"
  },
  {
    "text": "major it can take a long time so in this scenario can take three weeks before the application actually gets the major",
    "start": "1247330",
    "end": "1254050"
  },
  {
    "text": "update for the core so this stage how important it is to not have mages too",
    "start": "1254050",
    "end": "1259180"
  },
  {
    "text": "often because they are harder harder to deal with so we talked about semantic",
    "start": "1259180",
    "end": "1265210"
  },
  {
    "text": "versioning and how major release is a semantic versioning aspect but majors",
    "start": "1265210",
    "end": "1270370"
  },
  {
    "text": "are not just semantics right they're actually an organizational challenge because we've seen you can take up to",
    "start": "1270370",
    "end": "1277390"
  },
  {
    "text": "three weeks and maybe your company can be faster maybe slower but it's just hard to deal with so the first thing I",
    "start": "1277390",
    "end": "1283510"
  },
  {
    "text": "recommend is looking at how we can avoid majors in the first place let's go back",
    "start": "1283510",
    "end": "1289480"
  },
  {
    "text": "to our dependency tree let's say that the lowest level module again core decides you know know what instead of",
    "start": "1289480",
    "end": "1296260"
  },
  {
    "text": "iris 11 we wanna support I was 12 and up okay let's say they decide this the",
    "start": "1296260",
    "end": "1302800"
  },
  {
    "text": "problem is no one else can now compare anymore if you for example have the UI module and it supports iOS 11 it cannot",
    "start": "1302800",
    "end": "1310810"
  },
  {
    "text": "build because one of its dependencies doesn't support I was 11 so it's very tricky that's just fit a small change of",
    "start": "1310810",
    "end": "1318400"
  },
  {
    "text": "either support at the bottom you already break the whole dependency tree it's very sensitive so if you want to do this",
    "start": "1318400",
    "end": "1323410"
  },
  {
    "text": "correctly you start at the top the application determines the versions that you want to",
    "start": "1323410",
    "end": "1328810"
  },
  {
    "text": "use all the margins they can use support I up to iOS 4 like whatever you need right but it's application and",
    "start": "1328810",
    "end": "1335440"
  },
  {
    "text": "ultimately decides which version you're gonna have if you do want to update all",
    "start": "1335440",
    "end": "1340690"
  },
  {
    "text": "the modules you have to go downwards so then you go to the next layer and then you can update the next layer and",
    "start": "1340690",
    "end": "1345730"
  },
  {
    "text": "finally you can update the core layer it's a small thing to be aware of but just going from 10.0 to 10.3 is a",
    "start": "1345730",
    "end": "1353290"
  },
  {
    "text": "minimum dependency can break the whole tree so i've got to be careful of this a second one let's say we have three",
    "start": "1353290",
    "end": "1359830"
  },
  {
    "text": "cheeses brie powder and camembert and yes that's how you pronounced how the",
    "start": "1359830",
    "end": "1365500"
  },
  {
    "text": "cheese in dutch it's not good so let's",
    "start": "1365500",
    "end": "1370720"
  },
  {
    "text": "say you have this enum you want to add another case Oh as a developer you may think oh I add",
    "start": "1370720",
    "end": "1376420"
  },
  {
    "text": "another case so switches cannot be throw errors so this is a major and yes you",
    "start": "1376420",
    "end": "1383230"
  },
  {
    "text": "would be correct right technically this is a major but you've seen that there could be like a three-week delay that",
    "start": "1383230",
    "end": "1388300"
  },
  {
    "text": "you're causing here so we got a step out of the developer mindset a little and be very conscious about what this means for",
    "start": "1388300",
    "end": "1394930"
  },
  {
    "text": "other people you know it's a tricky one way to go about it is if you implement",
    "start": "1394930",
    "end": "1400540"
  },
  {
    "text": "an enum somewhere else maybe an application you can say maybe we have a gentleman slash lady's rule that says",
    "start": "1400540",
    "end": "1407380"
  },
  {
    "text": "all the in switches were possible need to have the unknown default statement so",
    "start": "1407380",
    "end": "1413170"
  },
  {
    "text": "what this means is once a new case is added you get a warning and so instead of you compile error you can still",
    "start": "1413170",
    "end": "1419290"
  },
  {
    "text": "compile but you get a warning if you add the missing case then the warning goes",
    "start": "1419290",
    "end": "1424570"
  },
  {
    "text": "away this is one way to go about it but it's not foolproof let's say you have three flows that you put in England like",
    "start": "1424570",
    "end": "1431800"
  },
  {
    "text": "a given onboarding flow and an login flow and a registration flow and you suddenly add a new flow or that doesn't",
    "start": "1431800",
    "end": "1438460"
  },
  {
    "text": "mean that the people implement in them can now suddenly deal with this new flow if you offer a new one so you have to be",
    "start": "1438460",
    "end": "1444160"
  },
  {
    "text": "conscious about enums and very aware you cannot apply this technique a second",
    "start": "1444160",
    "end": "1449830"
  },
  {
    "text": "thing that's causing major releases quite quickly let's say you have a few controller and it's an open class of",
    "start": "1449830",
    "end": "1455680"
  },
  {
    "text": "course if it's open other people can customize quite easily right yeah that's nice but",
    "start": "1455680",
    "end": "1461350"
  },
  {
    "text": "an open class basically stays that it's a it's like a public in a in another project but they can subclasses so now",
    "start": "1461350",
    "end": "1468640"
  },
  {
    "text": "they can so class your few controller but how do you know what their overriding it becomes much harder to reason about let's say you want to start",
    "start": "1468640",
    "end": "1475929"
  },
  {
    "text": "using constraints and on this container if you go I'm on a second I want to set up constraints well the problem is you",
    "start": "1475929",
    "end": "1483400"
  },
  {
    "text": "don't really know if you're gonna break something and if you don't know the parentheses probably so you can give those",
    "start": "1483400",
    "end": "1489400"
  },
  {
    "text": "guarantees that this day is a minor or a patch so what I recommend is to try to",
    "start": "1489400",
    "end": "1494770"
  },
  {
    "text": "narrow the scope and if you can prevent sub classing altogether some people love sub classing some",
    "start": "1494770",
    "end": "1501279"
  },
  {
    "text": "people are against it but I just want to make you aware that you have to be extra careful when you go into subclass give",
    "start": "1501279",
    "end": "1507520"
  },
  {
    "text": "people the option to subclass so in this scenario for example you can maybe ask people to use your view controller as is",
    "start": "1507520",
    "end": "1514330"
  },
  {
    "text": "maybe customize it by the initializer maybe they can add as Charles Dickens follow but maybe not override the colors",
    "start": "1514330",
    "end": "1521649"
  },
  {
    "text": "and so on or different views etc so you gotta think about this",
    "start": "1521649",
    "end": "1527279"
  },
  {
    "text": "once your extra code it's tempting to say I'm gonna make a version 1.0.0 even",
    "start": "1527279",
    "end": "1534610"
  },
  {
    "text": "if this code is already in production but once you start extracting code your public API is still stabilizing so",
    "start": "1534610",
    "end": "1540220"
  },
  {
    "text": "you're gonna have a lot of iterations so if you start with bundles 0.0 that means the for every small change it's gonna be",
    "start": "1540220",
    "end": "1546580"
  },
  {
    "text": "breaking if you don't really not careful so what I recommend is to relax the dependency tree little start with the",
    "start": "1546580",
    "end": "1552399"
  },
  {
    "text": "beta and then absorber can do its magic without having to work with mages all",
    "start": "1552399",
    "end": "1557770"
  },
  {
    "text": "the time then once you rinse your code stabilizes make it version 1.0.0 and",
    "start": "1557770",
    "end": "1563080"
  },
  {
    "text": "then you can move forward with them with normal versioning but sometimes there may be code that you want to get rid of",
    "start": "1563080",
    "end": "1569169"
  },
  {
    "text": "and we can use deprecations for this let's say inside your project you have a",
    "start": "1569169",
    "end": "1575260"
  },
  {
    "text": "fetch workouts method and you want to use its new API with identifiable",
    "start": "1575260",
    "end": "1580299"
  },
  {
    "text": "protocol and you delete the old method it's a major right so what you can do here is you deprecated the old code and",
    "start": "1580299",
    "end": "1586990"
  },
  {
    "text": "offer the new code at the same same time now you can use the special named attributes and this will allow",
    "start": "1586990",
    "end": "1593130"
  },
  {
    "text": "Xcode automatically replace the call for you and then once it's done well maybe",
    "start": "1593130",
    "end": "1598740"
  },
  {
    "text": "during a next major release you can decide to delete all the deprecated code so that means that you have to have more",
    "start": "1598740",
    "end": "1606390"
  },
  {
    "text": "maintenance right if you want to avoid a major you have to do more work but if you don't take the pain then all your",
    "start": "1606390",
    "end": "1612150"
  },
  {
    "text": "consumers will take the pain so it's a it's about you taking all more work to make sure that you take the pain so the",
    "start": "1612150",
    "end": "1617880"
  },
  {
    "text": "rest don't have to another thing that I recommend is implementing a so called",
    "start": "1617880",
    "end": "1623730"
  },
  {
    "text": "escape hatch inside your projects so let's say if a module and inside of",
    "start": "1623730",
    "end": "1629010"
  },
  {
    "text": "there we have articles users and comments that you want to fetch and someone comes over and say oh hey I",
    "start": "1629010",
    "end": "1634049"
  },
  {
    "text": "missed this one thing I wanna I want to fetch as well instead of having to work with the new release and shipping it and",
    "start": "1634049",
    "end": "1640110"
  },
  {
    "text": "releasing it and so forth you can also consider using a lower level escape hatch it does in this scenario you can",
    "start": "1640110",
    "end": "1647010"
  },
  {
    "text": "just give the raw data so that if people are missing something they can still go to lower level and make it themselves",
    "start": "1647010",
    "end": "1653360"
  },
  {
    "text": "now this doesn't work always all the projects that you're doing but it could be working this could be a nice solution",
    "start": "1653360",
    "end": "1659970"
  },
  {
    "text": "for when you don't know yet what people are going to use from your framework I'm not saying just make everything public but I am saying consider the possibility",
    "start": "1659970",
    "end": "1667500"
  },
  {
    "text": "that you haven't thought of all the end cases that people are using I want to",
    "start": "1667500",
    "end": "1674160"
  },
  {
    "text": "talk about secret majors so dependency tree can be solved based on a versioning",
    "start": "1674160",
    "end": "1679290"
  },
  {
    "text": "but it's very hard to sometimes know which version to apply for example you",
    "start": "1679290",
    "end": "1686130"
  },
  {
    "text": "may have may have a module that you say it's a minor but secret is a major maybe say it's a patch but sickly it's a major",
    "start": "1686130",
    "end": "1692549"
  },
  {
    "text": "is breaking someone else's code let's go over some common use cases defaults",
    "start": "1692549",
    "end": "1698429"
  },
  {
    "text": "variables are one imagine where I just changed boolean from true to false or",
    "start": "1698429",
    "end": "1704340"
  },
  {
    "text": "false to true everything will still compile and if someone doesn't pay enough attention they may say oh this is just a little patch but this could have",
    "start": "1704340",
    "end": "1711150"
  },
  {
    "text": "big consequences for people that are using the code this code is a little bit real example maybe but it's the truth is",
    "start": "1711150",
    "end": "1717540"
  },
  {
    "text": "still that if the code compiles doesn't mean that is always a minor or a patch can still be a major protocols",
    "start": "1717540",
    "end": "1725040"
  },
  {
    "text": "really tricky Swift is a protocol oriented programming language and a lot of people love them but once you start",
    "start": "1725040",
    "end": "1730650"
  },
  {
    "text": "working from the mindset of building projects thank you build like a module then you have to think about protocols",
    "start": "1730650",
    "end": "1736230"
  },
  {
    "text": "differently for example let's say we offer one property here it's already a",
    "start": "1736230",
    "end": "1741450"
  },
  {
    "text": "major release because what's happening people were implementing product protocol now I have to implement this extra property right so if you if you",
    "start": "1741450",
    "end": "1749130"
  },
  {
    "text": "just add this to your protocol and people cancel it compile it breaks the source code so you can go around this by",
    "start": "1749130",
    "end": "1757080"
  },
  {
    "text": "saying you know what I'm gonna offer an extension if possible it's not always possible but what if I have the",
    "start": "1757080",
    "end": "1765180"
  },
  {
    "text": "elevations property and I rename it to altitudes but I forget to update the",
    "start": "1765180",
    "end": "1770490"
  },
  {
    "text": "elevations well shift doesn't help you this extension is still valid codes and now it's again you have a major so",
    "start": "1770490",
    "end": "1776610"
  },
  {
    "text": "protocols are really sensitive and it's it's much harder to reason about and",
    "start": "1776610",
    "end": "1781680"
  },
  {
    "text": "think about once you offer these in a module for example let's say you have a protocol and you want to offer this to",
    "start": "1781680",
    "end": "1787800"
  },
  {
    "text": "have other people mark your your types what you can consider in this case is to",
    "start": "1787800",
    "end": "1792990"
  },
  {
    "text": "offer a marking class and that implements some internal protocols because I'm walking class if you add",
    "start": "1792990",
    "end": "1798660"
  },
  {
    "text": "another property to it it still will be just a minor optionals I love them of my",
    "start": "1798660",
    "end": "1806760"
  },
  {
    "text": "favorite features of Swift but imagine where I have one property and I make it",
    "start": "1806760",
    "end": "1811980"
  },
  {
    "text": "optional it breaks it breaks someone's code if they're not careful so again",
    "start": "1811980",
    "end": "1817380"
  },
  {
    "text": "this is a major so if there can be conscious of the options here this is",
    "start": "1817380",
    "end": "1823050"
  },
  {
    "text": "also an interesting on this one I hit recently so imagine you want to use some new specific Aguas code so now rs13 you",
    "start": "1823050",
    "end": "1830400"
  },
  {
    "text": "can push and few controllers and you can swipe that down whenever you like and if you don't want this you can set this set",
    "start": "1830400",
    "end": "1836100"
  },
  {
    "text": "this boolean is model and presentation you set it to false so you can wrap this",
    "start": "1836100",
    "end": "1841770"
  },
  {
    "text": "in iron in an IRS 13 flags so it won't compile if I was 12 and this is all working great this can still be",
    "start": "1841770",
    "end": "1848190"
  },
  {
    "text": "considered a major and it depends on your organization this will not compile in Xcode 10 so Excel or 11 everything",
    "start": "1848190",
    "end": "1855900"
  },
  {
    "text": "works fine but let's say you have one team somewhere that also uses your code and they still need to migrate to exit 11 take",
    "start": "1855900",
    "end": "1861220"
  },
  {
    "text": "some bikes take some work this also errors on Xcode 10 so it's something to be really conscious about",
    "start": "1861220",
    "end": "1867340"
  },
  {
    "text": "and one thing you can do is make sure that all the teams have the same Xcode altogether okay that's great but what if",
    "start": "1867340",
    "end": "1874150"
  },
  {
    "text": "you have a super large organization that comes much harder or you can hack your way around it I guess",
    "start": "1874150",
    "end": "1880560"
  },
  {
    "text": "Xcode 11 has a 5.1 and extra ten dozen this will bake somewhere I think but",
    "start": "1880560",
    "end": "1886900"
  },
  {
    "text": "this will work now the available flag is a runtime check but if Swift flag is a",
    "start": "1886900",
    "end": "1892570"
  },
  {
    "text": "compile time check and Xcode 10 will just ignore it but don't tell anyone I gave you this tip another cheeky one",
    "start": "1892570",
    "end": "1900990"
  },
  {
    "text": "let's say I have an extension on a few controller for example for analytics I",
    "start": "1900990",
    "end": "1906100"
  },
  {
    "text": "want to track a page and another team that another project also wants to do the same so check page again shows up",
    "start": "1906100",
    "end": "1912160"
  },
  {
    "text": "this individually will work all of these dependencies are going both inside an application can it doesn't work",
    "start": "1912160",
    "end": "1920110"
  },
  {
    "text": "so if though complain that there are two of the same extensions and doesn't know which one to use the problem is not so",
    "start": "1920110",
    "end": "1927340"
  },
  {
    "text": "much the very extending like a type or something the problem is you are extending code that we do not own so",
    "start": "1927340",
    "end": "1934510"
  },
  {
    "text": "unless you work for Apple you do not own you are a few controller in this case so it becomes much whiskey once you start",
    "start": "1934510",
    "end": "1941320"
  },
  {
    "text": "extending code from other frameworks so we have a couple of options here honest",
    "start": "1941320",
    "end": "1947920"
  },
  {
    "text": "you can look at the access levels and decide if you have a project like a different module we want to make them",
    "start": "1947920",
    "end": "1953350"
  },
  {
    "text": "more narrowly scoped maybe with private maybe with internal so now once they are outside of the scope of the project self",
    "start": "1953350",
    "end": "1959530"
  },
  {
    "text": "these exchanges do not exist so it reduces the chance of cleansing crashing or in this case it can crash at all",
    "start": "1959530",
    "end": "1965460"
  },
  {
    "text": "second option is to have an agreement on where to put extensions maybe have a new",
    "start": "1965460",
    "end": "1971770"
  },
  {
    "text": "module maybe a lower level module where you all agree on this is very exchanges go for UI for your eye kit another",
    "start": "1971770",
    "end": "1979240"
  },
  {
    "text": "option could be instead of extending a few controller few control and out subclasses extend this piece of code we",
    "start": "1979240",
    "end": "1987850"
  },
  {
    "text": "create a protocol analytics and we extended it a constraint of and swallow so what happens here is that",
    "start": "1987850",
    "end": "1997390"
  },
  {
    "text": "only few controllers that implement this protocol would get the extension first is getting giving all the fuel's it",
    "start": "1997390",
    "end": "2003390"
  },
  {
    "text": "always subclasses the extension this narrows the scope tremendously and again reduces the chances that a clash will",
    "start": "2003390",
    "end": "2009630"
  },
  {
    "text": "occur it's not foolproof but it isn't a technique you can use Singleton's my",
    "start": "2009630",
    "end": "2017640"
  },
  {
    "text": "favorite except not so imagine we have a singleton defined in the bottom and one",
    "start": "2017640",
    "end": "2026730"
  },
  {
    "text": "framework decides to login and update a value and another one tries to log out",
    "start": "2026730",
    "end": "2032000"
  },
  {
    "text": "this will break right so basically instead of having a singleton application with global mutable state",
    "start": "2032000",
    "end": "2037919"
  },
  {
    "text": "you know ever seen across multiple projects with global mutable state so it's much much more difficult to think",
    "start": "2037919",
    "end": "2044429"
  },
  {
    "text": "about so I want to emphasize that if you're going to use the modules route you gotta be worried a bit more about",
    "start": "2044429",
    "end": "2050250"
  },
  {
    "text": "Singleton's and however you can affect other people's code but in the end you gotta ask yourself can others update my",
    "start": "2050250",
    "end": "2057450"
  },
  {
    "text": "code if the answer is no it's a major if it's yes my not a page but probably you",
    "start": "2057450",
    "end": "2065310"
  },
  {
    "text": "can still have some things you have not foreseen some things that can still break so what can we do to make the",
    "start": "2065310",
    "end": "2072450"
  },
  {
    "text": "majors less impactful so that people can keep compiling and a lot annoyed by other developers breaking your code well",
    "start": "2072450",
    "end": "2079350"
  },
  {
    "text": "the easy one is avoiding them in the first place right you've seen some techniques but it is still difficult to",
    "start": "2079350",
    "end": "2085770"
  },
  {
    "text": "do if you cannot avoid a major before you just surprise your co-workers announce it plan it in say hey I've got",
    "start": "2085770",
    "end": "2093148"
  },
  {
    "text": "this change coming up can we work together to resolve this so that you don't you don't get surprised by major",
    "start": "2093149",
    "end": "2098609"
  },
  {
    "text": "updates if you're especially nice you can do the work for other people people seem to like this if you do want people",
    "start": "2098609",
    "end": "2107400"
  },
  {
    "text": "to do the work maybe give them a guy like this is how you do it I know it sounds super obvious or in Dutch we say",
    "start": "2107400",
    "end": "2113070"
  },
  {
    "text": "kicking in an open door but it's it's very useful to have this next one is if",
    "start": "2113070",
    "end": "2121020"
  },
  {
    "text": "you have some changes lined up release them before you make a major change imagine you have a UI framework you want",
    "start": "2121020",
    "end": "2127920"
  },
  {
    "text": "to release a new version it's a major maybe you also have a few new buttons you want to release or maybe release the",
    "start": "2127920",
    "end": "2134700"
  },
  {
    "text": "buttons first as a miner so other people can already use them and then release the major this way you don't have the",
    "start": "2134700",
    "end": "2141480"
  },
  {
    "text": "problem where someone wants the buttons only even still have to do a major migration and I guess the best check is",
    "start": "2141480",
    "end": "2148860"
  },
  {
    "text": "to take your framework or module and go to a different place which implements your code and check if everything still",
    "start": "2148860",
    "end": "2154500"
  },
  {
    "text": "keeps compiling because there are still some efficient cases for example the Xcode 10 and the Xcode 11 one it's a",
    "start": "2154500",
    "end": "2160170"
  },
  {
    "text": "very subtle one so you may want to check that out but in the end it's about showing empathy right you wanna be be",
    "start": "2160170",
    "end": "2167640"
  },
  {
    "text": "aware of how do you affect you all the other co-workers and maybe if something breaks the other co-workers have to be",
    "start": "2167640",
    "end": "2172980"
  },
  {
    "text": "aware that's really hard to keep things stable so it's about being helpful to each other so let's cover the pros and",
    "start": "2172980",
    "end": "2179580"
  },
  {
    "text": "cons so the benefit of using first in frameworks of version modules is that",
    "start": "2179580",
    "end": "2186510"
  },
  {
    "text": "you can support multiple workspaces so you can have multiple projects separated from each other he could also more control for example",
    "start": "2186510",
    "end": "2194040"
  },
  {
    "text": "let's say a release a version version of for example like a patch update let's",
    "start": "2194040",
    "end": "2199650"
  },
  {
    "text": "say there's something something broke in there or you can roll back quite easy",
    "start": "2199650",
    "end": "2205760"
  },
  {
    "text": "but the complexity really goes a lot higher and this big downside you also",
    "start": "2206420",
    "end": "2211830"
  },
  {
    "text": "have to do a lot more ceremony there's no version things make sure things don't break think about package managers which also",
    "start": "2211830",
    "end": "2217650"
  },
  {
    "text": "we'll talk about in a bit so it's just more work in general but the trade-off can be worth it for you and your company",
    "start": "2217650",
    "end": "2223440"
  },
  {
    "text": "and as we've seen it's hard to do correct versioning just a few small changes you can already cause someone",
    "start": "2223440",
    "end": "2229860"
  },
  {
    "text": "else's code to break this may also be very relevant if you if you have an SDK for people something to be very off so",
    "start": "2229860",
    "end": "2239730"
  },
  {
    "text": "let's talk about package managers so the way we work now is we have a git",
    "start": "2239730",
    "end": "2246180"
  },
  {
    "text": "repository and all the developers and the CI they download the the kids history and then we all start compiling",
    "start": "2246180",
    "end": "2253050"
  },
  {
    "text": "our code together right like everybody compiled some packages and it's very time consuming to be",
    "start": "2253050",
    "end": "2259020"
  },
  {
    "text": "she's compiled times like I said are not my favorite but it makes a lot of sense",
    "start": "2259020",
    "end": "2264359"
  },
  {
    "text": "that you can compile the code against your own tool chain but it's also maybe",
    "start": "2264359",
    "end": "2269880"
  },
  {
    "text": "not as beneficial they always have to be to always be compiling the code every time for every developer so how can we",
    "start": "2269880",
    "end": "2276660"
  },
  {
    "text": "lower the lower the compile times it's quite easy just go to apple.com get the",
    "start": "2276660",
    "end": "2281760"
  },
  {
    "text": "new macbook 16-inch I don't know I use euros but it looks like a big number to",
    "start": "2281760",
    "end": "2287460"
  },
  {
    "text": "me maybe we can also consider a binary support if this is a little bit out of",
    "start": "2287460",
    "end": "2293430"
  },
  {
    "text": "your budget so good binary support I mean that you have a git repository give",
    "start": "2293430",
    "end": "2301140"
  },
  {
    "text": "it to your CI it's not compiling stores away the packages and then all the",
    "start": "2301140",
    "end": "2306450"
  },
  {
    "text": "developers download sorry all the developers download the packages so you",
    "start": "2306450",
    "end": "2312450"
  },
  {
    "text": "can go from one project that projects that I've seen it go from 10 minutes to like 1 minutes or something that's a big",
    "start": "2312450",
    "end": "2317640"
  },
  {
    "text": "game that's like a huge game so binary frameworks can be a solution me I don't have to keep compiling everything yourself and the second requirement",
    "start": "2317640",
    "end": "2325760"
  },
  {
    "text": "could be very still want to step in code and this is what we're doing today if you use for example this v package",
    "start": "2325760",
    "end": "2331109"
  },
  {
    "text": "manager you go into the code and if there's something breaking you can easily debug it and change it and check",
    "start": "2331109",
    "end": "2336869"
  },
  {
    "text": "what you can do to fix it so if you're on an enterprise level and lots of people are constantly compiling lots of",
    "start": "2336869",
    "end": "2342960"
  },
  {
    "text": "frameworks you may only consider where to get to this sweet spot right you want to both have the low compile type in",
    "start": "2342960",
    "end": "2348900"
  },
  {
    "text": "binaries and we want to be able to step in the code now let's look at the package managers so this shift package",
    "start": "2348900",
    "end": "2356310"
  },
  {
    "text": "manager it downloads the sources so instead of the long compile times",
    "start": "2356310",
    "end": "2361740"
  },
  {
    "text": "currently you can also you have to wait to get the the bundle support but that's coming and I've seen some forum",
    "start": "2361740",
    "end": "2369000"
  },
  {
    "text": "discussions about how to deal with binary so maybe for patient for a year you get the support but today we can use",
    "start": "2369000",
    "end": "2374970"
  },
  {
    "text": "it yet cocoapods is the same way except Cocoa Puffs actually supports framework",
    "start": "2374970",
    "end": "2380070"
  },
  {
    "text": "so you can get so you have the view support for the assets and the resources and so on but no binary frameworks but",
    "start": "2380070",
    "end": "2386250"
  },
  {
    "text": "the is cocoa pods binary but this caches the binaries locally",
    "start": "2386250",
    "end": "2391980"
  },
  {
    "text": "I want to talk a bit about Carthage so Carthage is similar to cocoapods except",
    "start": "2391980",
    "end": "2397350"
  },
  {
    "text": "it doesn't update your workspace yourself you have to do it yourself but with Carthage you got a few nasty bugs",
    "start": "2397350",
    "end": "2402780"
  },
  {
    "text": "with it and not saying that the software doesn't have bugs in general but there's",
    "start": "2402780",
    "end": "2408030"
  },
  {
    "text": "a problem with Kurtis is that it just cannot be solve certain dependency trees it stays in some kind of deadlock so it",
    "start": "2408030",
    "end": "2413640"
  },
  {
    "text": "doesn't throw an error it just stays and just uses your CPU for hundred percent the whole time kind of is is a downer if",
    "start": "2413640",
    "end": "2420660"
  },
  {
    "text": "you want to use a dependency manager the east of Rome so let's say you are",
    "start": "2420660",
    "end": "2425670"
  },
  {
    "text": "infested in Carthage and can't compile and everything can be resolved with your dependencies there's still another issue",
    "start": "2425670",
    "end": "2430980"
  },
  {
    "text": "to be aware of is that when a when a binary is compelled from a different computer the paths are not correct it",
    "start": "2430980",
    "end": "2438600"
  },
  {
    "text": "characters and it means you can easily step in and debug so you have some support Rome is really nice for the",
    "start": "2438600",
    "end": "2443609"
  },
  {
    "text": "NASPA that you can upload binaries but debugging becomes quite harder here",
    "start": "2443609",
    "end": "2448850"
  },
  {
    "text": "there's another fork we maintain in our work that actually hits the sweet spot it fixes the resolving issues and it has",
    "start": "2448850",
    "end": "2455550"
  },
  {
    "text": "a lot of plugins so you can update some comparison binaries and update them on your own machine and upload them to a",
    "start": "2455550",
    "end": "2461970"
  },
  {
    "text": "different machine and get the most stored and download them if you need them so you get the low compile times and the ability to properly debug your",
    "start": "2461970",
    "end": "2468330"
  },
  {
    "text": "code but it's a fork you know so look at it if you need to but the ideal solution",
    "start": "2468330",
    "end": "2474359"
  },
  {
    "text": "for me will be to work at sweet package manager if you can if you need assets and resources then use cocoapods and",
    "start": "2474359",
    "end": "2481320"
  },
  {
    "text": "hopefully Swift package manager will solve it because there's great integration but if you're on of your",
    "start": "2481320",
    "end": "2486630"
  },
  {
    "text": "nearing an enterprise level or if you are already heavily invested in Carthage I recommend checking out this version",
    "start": "2486630",
    "end": "2492180"
  },
  {
    "text": "which is called this plus plus and one less worried about XE frameworks so it",
    "start": "2492180",
    "end": "2498660"
  },
  {
    "text": "actually frameworks v offers module stability so that's basically if you have a piece of code that you compiled",
    "start": "2498660",
    "end": "2504570"
  },
  {
    "text": "you give it to someone they can update their seifish it's the newest version",
    "start": "2504570",
    "end": "2509670"
  },
  {
    "text": "and it will still work with an older version of your framework there's a lot of that makes a lot of sense for example",
    "start": "2509670",
    "end": "2515609"
  },
  {
    "text": "if you have if you're a vendor let's say your license out an SDK to some other company and they have to keep compiling",
    "start": "2515609",
    "end": "2521010"
  },
  {
    "text": "and it's really nice that you can keep motor stability but if you're on a more enterprise-level as I showed you you can",
    "start": "2521010",
    "end": "2527380"
  },
  {
    "text": "compile yourself anyway so it doesn't really make a lot of like sense to use it I think but this is my view but",
    "start": "2527380",
    "end": "2533230"
  },
  {
    "text": "please check it out yourself so what did we talk about you've seen how we can",
    "start": "2533230",
    "end": "2540160"
  },
  {
    "text": "decide it in local and remote modules I've also seen as very tricky to do",
    "start": "2540160",
    "end": "2545530"
  },
  {
    "text": "dependency management right code can break very easily and you've seen how semantic versioning is not just a number",
    "start": "2545530",
    "end": "2552460"
  },
  {
    "text": "right we've seen how can it really been impacting your organization if you break a code or if you have a major release it",
    "start": "2552460",
    "end": "2557680"
  },
  {
    "text": "can take two weeks for a dependency to be resolved you've seen how major",
    "start": "2557680",
    "end": "2563410"
  },
  {
    "text": "release are Millie the tricky ones to deal with them and in the end the code",
    "start": "2563410",
    "end": "2569140"
  },
  {
    "text": "is supposed to be stable right that's what we're all driving for you're working for it so that's the main goal",
    "start": "2569140",
    "end": "2574510"
  },
  {
    "text": "here in the end I spoke about package managers so we can see how Curtis and",
    "start": "2574510",
    "end": "2579760"
  },
  {
    "text": "cocoa pods and sweet package McCann fit for you so my name is tooth I have a",
    "start": "2579760",
    "end": "2584890"
  },
  {
    "text": "link here from Manning they were kind enough to give a discount and I recommend you to check out my book so",
    "start": "2584890",
    "end": "2590530"
  },
  {
    "text": "that's it thank you very much you",
    "start": "2590530",
    "end": "2597200"
  }
]