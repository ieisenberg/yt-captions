[
  {
    "text": "[Music]",
    "start": "5870",
    "end": "10049"
  },
  {
    "text": "all right thank you for coming uh let's talk about unit tests uh how many of you rate unit tests fantastic and how many",
    "start": "11679",
    "end": "19240"
  },
  {
    "text": "of you run your test Suite before you check in fantastic perfect so this will feel familiar that's exactly where we're",
    "start": "19240",
    "end": "25439"
  },
  {
    "text": "starting so we're going to run our tests we've just made some changes pretty simple change and uh we get this this is",
    "start": "25439",
    "end": "32279"
  },
  {
    "text": "unfortunately far too familiar for a lot of us we have failures and these are our",
    "start": "32279",
    "end": "37559"
  },
  {
    "text": "failures uh don't worry about a lot of text on the slide we're going to dig into this a lot you don't need to read",
    "start": "37559",
    "end": "43120"
  },
  {
    "text": "it all right now but what we have here is uh two failures one for a statement method uh one for an HTML statement",
    "start": "43120",
    "end": "49600"
  },
  {
    "text": "method both in the customer test class we don't even have time to dig into the HTML statement failure but we're going",
    "start": "49600",
    "end": "54920"
  },
  {
    "text": "to dig into the statement failure so the problem here is we're in a terrible terrible position",
    "start": "54920",
    "end": "61920"
  },
  {
    "text": "we have code that we just want to check in we ran the tests that we thought were relevant to our code and we have two",
    "start": "62359",
    "end": "68479"
  },
  {
    "text": "failures we have no idea why we thought we'd done everything right and we have no choices I mean really our choices are",
    "start": "68479",
    "end": "74680"
  },
  {
    "text": "fix this problem or go to lunch we really can't do anything else this is Bob Bob has bad",
    "start": "74680",
    "end": "83119"
  },
  {
    "text": "tests the problem is that Bob is our teammate and also a friend of ours Bob's a good guy he wants to write good tests",
    "start": "83119",
    "end": "90680"
  },
  {
    "text": "he wants everybody on the team to be happy he wants to write maintainable code not just domain code but testing",
    "start": "90680",
    "end": "96000"
  },
  {
    "text": "code uh he's trying to help everybody out wants to do the right thing everything's great except he doesn't write maintainable tests he writes",
    "start": "96000",
    "end": "102479"
  },
  {
    "text": "terrible tests Bob left you this failing test this is the statement",
    "start": "102479",
    "end": "108240"
  },
  {
    "text": "method this test isn't very long I don't know half a dozen lines of code and yet",
    "start": "108240",
    "end": "113439"
  },
  {
    "text": "there's way too much going on here specifically Bob decided we need a loop in our tests how many of you use loops",
    "start": "113439",
    "end": "119920"
  },
  {
    "text": "in your tests come on you're lying so Bob Bob also likes Loops in his",
    "start": "119920",
    "end": "127360"
  },
  {
    "text": "tests uh and we need to figure out we need to figure out what's wrong with this test so we need to figure out what terminates this Loop pretty simple",
    "start": "127360",
    "end": "133360"
  },
  {
    "text": "length but but what's customers nowhere in the slide can you find what customers is if this is your",
    "start": "133360",
    "end": "140640"
  },
  {
    "text": "screen nowhere on your screen can you find find what customers is uh if you're lucky you're working with an IDE that helps you get there but but just think",
    "start": "140640",
    "end": "147120"
  },
  {
    "text": "about that for a minute you need an IDE to help you get there for the first line of code for a failing test that you didn't write it's not a great situation",
    "start": "147120",
    "end": "155480"
  },
  {
    "text": "that's okay because we have an ID so we go to the definition and it brings us here customer test class not a big deal",
    "start": "155480",
    "end": "161800"
  },
  {
    "text": "we have some Fields customers great fantastic answer right it's just just a Java array of",
    "start": "161800",
    "end": "169440"
  },
  {
    "text": "customer instances I mean what's the problem problem is we still don't know what's going on with these customers so",
    "start": "169440",
    "end": "175120"
  },
  {
    "text": "we have to uh go or use the ID again to bring us here now we have the this magic",
    "start": "175120",
    "end": "180319"
  },
  {
    "text": "setup method that we're all familiar with this this template method pattern that magically made it into our xunit",
    "start": "180319",
    "end": "186640"
  },
  {
    "text": "framework and never went away so find usages brings us here we don't even have time again to dig into something the",
    "start": "186640",
    "end": "192599"
  },
  {
    "text": "object mother for this let's just assume that by some magic we already uh know",
    "start": "192599",
    "end": "197840"
  },
  {
    "text": "exactly what's going on with our object mother and yay we have customers took us all of those steps",
    "start": "197840",
    "end": "203480"
  },
  {
    "text": "just to read not even the whole first line of code that's not",
    "start": "203480",
    "end": "208560"
  },
  {
    "text": "great so back to the failing test We're looping through some customer instances and we have you know what's the next",
    "start": "208560",
    "end": "214720"
  },
  {
    "text": "thing you look at when you look at a test you look you look at the expected value that should be pretty easy to figure out except it's not instead we",
    "start": "214720",
    "end": "221480"
  },
  {
    "text": "have an expected value uh that's returned from a method call so we have to look at the",
    "start": "221480",
    "end": "227439"
  },
  {
    "text": "arguments step one figure out what the arguments are uh in this case as we all know we need to look to the last",
    "start": "228680",
    "end": "235920"
  },
  {
    "text": "argument rental info again should be straightforward except it's not because we have have to go to another",
    "start": "235920",
    "end": "241560"
  },
  {
    "text": "definition and Rental info is a helper method that takes strings and rentals and returns a string",
    "start": "241560",
    "end": "248079"
  },
  {
    "text": "finally we get to something that we can understand it took 3 minutes and 45 seconds to get to anything reasonable",
    "start": "248079",
    "end": "254879"
  },
  {
    "text": "for some value of reasonable uh never mind the law of Demeter violation which we would all of course change except",
    "start": "254879",
    "end": "261000"
  },
  {
    "text": "we're 3 minutes and 55 seconds into just trying to check in so we present we pretend that this",
    "start": "261000",
    "end": "267320"
  },
  {
    "text": "problem is not there and we continue on rental info Loops over the rentals and",
    "start": "267320",
    "end": "272400"
  },
  {
    "text": "returns a string describing the rental straightforward enough I guess back to uh the statement method",
    "start": "272400",
    "end": "280000"
  },
  {
    "text": "and what's next well we have to figure out what the next argument is it's a customer we have no idea what customer",
    "start": "280000",
    "end": "285520"
  },
  {
    "text": "we know we have four customers we don't know which one is causing the problem in fact we have no way to figure out what",
    "start": "285520",
    "end": "290919"
  },
  {
    "text": "our failing test is without a print statement or running our test in debug and putting a break point in there so",
    "start": "290919",
    "end": "298160"
  },
  {
    "text": "this is not exactly a great test we have a problem and we can't can't even look at the test and figure out what's going on without writing some type of",
    "start": "298160",
    "end": "305440"
  },
  {
    "text": "code finally something simple some type of string literal even though it's being passed to another method uh but but at",
    "start": "305440",
    "end": "312120"
  },
  {
    "text": "least it's not something we have to use the IDE to understand so we take all of those things and we go to the expect",
    "start": "312120",
    "end": "317639"
  },
  {
    "text": "statement and what does it do not much at all it does not deserve its own method but somebody aggressively app",
    "start": "317639",
    "end": "323800"
  },
  {
    "text": "applied dry Bob as we know Bob thinks dry always applies and so Bob applied dry and has this expect statement and",
    "start": "323800",
    "end": "330919"
  },
  {
    "text": "all we're really doing is a string. format in here it's not worthy of its own",
    "start": "330919",
    "end": "336639"
  },
  {
    "text": "method so if we're going to fix this test this is what we have to work with we're forced to digest all of this code",
    "start": "337080",
    "end": "343759"
  },
  {
    "text": "we're forced to look through stuff for about five minutes and I'm familiar with it so I'm going a little fast imagine",
    "start": "343759",
    "end": "349600"
  },
  {
    "text": "you were having to go through all of this code all the code that's on the screen because you made a change in the",
    "start": "349600",
    "end": "354919"
  },
  {
    "text": "movie domain object the think about that the movie",
    "start": "354919",
    "end": "360560"
  },
  {
    "text": "domain object which you haven't seen the movie test which you haven't seen",
    "start": "360560",
    "end": "365720"
  },
  {
    "text": "because you're in customer you made a change in movie you added a new feature everything's great and you have failures",
    "start": "365720",
    "end": "371759"
  },
  {
    "text": "in some other test that you've spent far too much time looking into I think this is a bit of a problem I don't really",
    "start": "371759",
    "end": "377039"
  },
  {
    "text": "call that maintainable so what all would I say about this code so far I would say that",
    "start": "377039",
    "end": "382960"
  },
  {
    "text": "it follows common testing patterns I think there's probably a lot of people in here that are like yeah okay sure looks about pretty standard uh there's",
    "start": "382960",
    "end": "390360"
  },
  {
    "text": "probably some people that find this code not too impressive uh but at the same",
    "start": "390360",
    "end": "395400"
  },
  {
    "text": "time it's just kind of the standard isn't it this is this is what unit tests look like these days people use setup",
    "start": "395400",
    "end": "401360"
  },
  {
    "text": "because it's there and they don't know any better people use object mother because it it's a pattern that's",
    "start": "401360",
    "end": "406440"
  },
  {
    "text": "established and they don't know of a better alternative and people use dry because dry is like the golden rule of",
    "start": "406440",
    "end": "412720"
  },
  {
    "text": "programming if you do nothing else don't repeat those characters yeah I don't know I don't I",
    "start": "412720",
    "end": "419039"
  },
  {
    "text": "don't think that's a really great way to test but but that's kind of where we're at uh where I think it fails and where I",
    "start": "419039",
    "end": "425120"
  },
  {
    "text": "think we should spend a lot more of our time is we can't understand any of this quickly all we want to do is check in we",
    "start": "425120",
    "end": "432240"
  },
  {
    "text": "really shouldn't have to go through all of this trouble to just check in our code so let's let's review all again",
    "start": "432240",
    "end": "438520"
  },
  {
    "text": "what all we looked at we had to find the statement test we had to find the definition of the customers array that we're iterating we had to find the",
    "start": "438520",
    "end": "444039"
  },
  {
    "text": "assignment to customers we had to digest setup the assignment of each customer and their Associated name we had to find",
    "start": "444039",
    "end": "449280"
  },
  {
    "text": "the object mother class which we skipped because we don't even have time uh we determine how the customer instances are",
    "start": "449280",
    "end": "454479"
  },
  {
    "text": "created then we have to digest each of the different customer instance creation methods within the object mother at this",
    "start": "454479",
    "end": "460240"
  },
  {
    "text": "point we understand the first line of the test then we digest the expected value",
    "start": "460240",
    "end": "466000"
  },
  {
    "text": "that's being created by calling a method with a string a customer and the result of calling rental info with two string instances and customer rentals find the",
    "start": "466000",
    "end": "473159"
  },
  {
    "text": "rental in info method and determine the value it's returning to expect statement Digest rental info is creating a string",
    "start": "473159",
    "end": "479240"
  },
  {
    "text": "by iterating and formatting rental data and now you've mentally resolved the args to expect statement you find the",
    "start": "479240",
    "end": "485680"
  },
  {
    "text": "method and digest it and at this point it's taken you 10 steps to Simply understand the expected value of your",
    "start": "485680",
    "end": "492479"
  },
  {
    "text": "tests not one character that you have digested will ever run in production you",
    "start": "492479",
    "end": "498639"
  },
  {
    "text": "have provided no value to your customer uh or to your business or whoever you wrote the code for other than preventing",
    "start": "498639",
    "end": "506639"
  },
  {
    "text": "regression I mean at least these tests told us that something Chang and something needed to be looked at but other than that no value no customer",
    "start": "506639",
    "end": "513680"
  },
  {
    "text": "will ever use any of this code that you've just looked through and it's practically impossible",
    "start": "513680",
    "end": "519120"
  },
  {
    "text": "as I said to fix this problem without putting a breakpoint in or uh putting some type of print line in so this is",
    "start": "519120",
    "end": "525800"
  },
  {
    "text": "bad this is the state of the world this is the average state of the world right now and we just go about writing these",
    "start": "525800",
    "end": "531080"
  },
  {
    "text": "tests and and not really asking ourselves why are we doing",
    "start": "531080",
    "end": "536440"
  },
  {
    "text": "this why are we applying these patterns that do work very well in in our domain",
    "start": "536440",
    "end": "541480"
  },
  {
    "text": "models uh why are we applying them to tests blindly without asking ourselves",
    "start": "541480",
    "end": "547200"
  },
  {
    "text": "is there a better way to write these tests uh is there a different way to code that will actually create more",
    "start": "547200",
    "end": "552440"
  },
  {
    "text": "maintainable tests we write tests we don't need with time we don't have to satisfy people we",
    "start": "552440",
    "end": "559200"
  },
  {
    "text": "don't like what if we took a step back I do",
    "start": "559200",
    "end": "566519"
  },
  {
    "text": "believe there's a better way I do believe that we can write really nice tests uh I hope we've begun to realize",
    "start": "566519",
    "end": "573240"
  },
  {
    "text": "that things have gone wrong really looking through these tests things have obviously gone wrong it's time to look",
    "start": "573240",
    "end": "578320"
  },
  {
    "text": "at unit testing with a fresh point of view Josh Graham succinctly provided what I believe is the best highle goal",
    "start": "578320",
    "end": "584519"
  },
  {
    "text": "for unit testing you can have your own high level goal but this is my high level goal uh this is what I like to",
    "start": "584519",
    "end": "590440"
  },
  {
    "text": "think of to create a tiny universe where software exist to do one thing and do it",
    "start": "590440",
    "end": "596920"
  },
  {
    "text": "well one thing and universe are the most important pieces here I want my test to",
    "start": "596920",
    "end": "602320"
  },
  {
    "text": "focus on a single thing have a single responsibility if you will and I want a tiny universe I don't need four",
    "start": "602320",
    "end": "609120"
  },
  {
    "text": "customers if I'm testing one customer I need one",
    "start": "609120",
    "end": "613880"
  },
  {
    "text": "customer so before we even get into what changes we could make we need to think about motivators what motivates us to",
    "start": "614360",
    "end": "620680"
  },
  {
    "text": "write tests in the first place there probably a lot of motivators uh I would say these are pretty reasonable",
    "start": "620680",
    "end": "626640"
  },
  {
    "text": "motivators these are the motivators that I think would would drive Bob if Bob and I are working together to write some",
    "start": "626640",
    "end": "632480"
  },
  {
    "text": "tests so let's say that Bob uses these motivators to write his tests how do we feel like Bob's doing giving these",
    "start": "632480",
    "end": "640200"
  },
  {
    "text": "motivators I would say Bob's actually doing pretty well with enabling refactoring I have a failing test that means I can refactor I have some",
    "start": "640920",
    "end": "647160"
  },
  {
    "text": "confidence fantastic immediate feedback yeah works well enough run the test Suite I see things are broken",
    "start": "647160",
    "end": "654000"
  },
  {
    "text": "fantastic Bob has no idea how to make how to break this problem up into smaller pieces Bob gave me four",
    "start": "654000",
    "end": "659560"
  },
  {
    "text": "customers that have nothing to do with each other they're all in the same test but they don't interact with each other in any way whatsoever there's really no",
    "start": "659560",
    "end": "665800"
  },
  {
    "text": "reason they need to be together except Bob wanted to consolidate characters Bob blindly applied",
    "start": "665800",
    "end": "671040"
  },
  {
    "text": "dry so again there's a better way dry don't repeat yourself hopefully everybody knows that it's widely",
    "start": "671040",
    "end": "677279"
  },
  {
    "text": "accepted as the golden rule of programming or at least that's what I like to call it probably when I'm putting it down uh but it doesn't apply",
    "start": "677279",
    "end": "684480"
  },
  {
    "text": "not all the time I think it applies contextually not dogmatically the tests we looked at are",
    "start": "684480",
    "end": "690120"
  },
  {
    "text": "dry I don't think anyone can argue that the tests are dry we we used a loop and helper methods we repeated as few",
    "start": "690120",
    "end": "696800"
  },
  {
    "text": "characters as possible but we never sto to ask if that application of dry would help future",
    "start": "696800",
    "end": "702560"
  },
  {
    "text": "maintainers does anybody here feel like the the application of dry helped them understand this",
    "start": "702560",
    "end": "710000"
  },
  {
    "text": "test of course not but the way Bob wrote this test is he wrote maybe four tests",
    "start": "710440",
    "end": "716279"
  },
  {
    "text": "to start with and then he put the whole thing in a loop because he applied dry and he didn't really think about future",
    "start": "716279",
    "end": "721680"
  },
  {
    "text": "maintainers he just thought look how dry my code is look how many characters I saved fantastic that savings buys you",
    "start": "721680",
    "end": "729839"
  },
  {
    "text": "nothing drying up your code like that just takes away from readability so there are three three levels at which",
    "start": "729839",
    "end": "736160"
  },
  {
    "text": "you can apply dry I mean it's not all bad it's not like we should just throw dry away but think about how you're applying dry most people apply dry at",
    "start": "736160",
    "end": "744000"
  },
  {
    "text": "the sweet fixture and test levels so specifically here I'm talking about sweet being Global likely if we're in",
    "start": "744000",
    "end": "750680"
  },
  {
    "text": "Java Global static methods that's that's a pretty decent place fixture uh fixture",
    "start": "750680",
    "end": "756600"
  },
  {
    "text": "is the methods in fields of a test class this is so common so many people apply dry there and I really don't understand",
    "start": "756600",
    "end": "763760"
  },
  {
    "text": "why H and and I'm gon to I'm gonna do that in one second uh but test test is a",
    "start": "763760",
    "end": "769920"
  },
  {
    "text": "great place to apply dry you don't want to repeat your stuff within the test method itself but you do want to switch",
    "start": "769920",
    "end": "775519"
  },
  {
    "text": "to this I think I would take that away from this talk uh I'm here to strongly suggest that you change your approach I",
    "start": "775519",
    "end": "782360"
  },
  {
    "text": "recommend you apply dry at the suite level that's fantastic you want to create customers good use a customer Builder you want to create movies use a",
    "start": "782360",
    "end": "788920"
  },
  {
    "text": "movie Builder you want to create rentals use a rental Builder apply the Builder pattern globally and any domain object",
    "start": "788920",
    "end": "795160"
  },
  {
    "text": "that you want to create within your tests use that same Builder that's fantastic day one on the job you look at",
    "start": "795160",
    "end": "800639"
  },
  {
    "text": "the tests and you say oh I need a customer I'm using customer Builder interesting let me look at that day one",
    "start": "800639",
    "end": "805959"
  },
  {
    "text": "you look at the movie builder at that point you now know every everybody's using Builders to create domain objects",
    "start": "805959",
    "end": "811399"
  },
  {
    "text": "I know where my Builders are defined so now I can create anywhere in the whole test Suite I can create a customer or a",
    "start": "811399",
    "end": "817199"
  },
  {
    "text": "rental or a movie and it's all created the same way shared knowledge same thing at a test level",
    "start": "817199",
    "end": "824000"
  },
  {
    "text": "obviously that that's great to remove dry I mean you don't or to to apply dry you don't want duplication within the",
    "start": "824000",
    "end": "829120"
  },
  {
    "text": "test but the fixture really the everything you dry in a fixture can't be",
    "start": "829120",
    "end": "834279"
  },
  {
    "text": "reused that's the problem I have with it it's it's reused within the single class but every time you open a test from that",
    "start": "834279",
    "end": "840320"
  },
  {
    "text": "class you're coming fresh and you have no idea about these helper methods and what they're there for say you have 10",
    "start": "840320",
    "end": "845839"
  },
  {
    "text": "tests and several helper methods which helper methods go with which tests I don't know especially if one of them",
    "start": "845839",
    "end": "851279"
  },
  {
    "text": "setup and it's just magically used uh and then of course the problem of everything that's created in setup is",
    "start": "851279",
    "end": "856519"
  },
  {
    "text": "not used in every test so we have a lot of problems with this but it's a pretty simple answer just stop drawing things",
    "start": "856519",
    "end": "863199"
  },
  {
    "text": "at the fixture level so specifically testing diverse customers at the same time is a bad idea",
    "start": "863199",
    "end": "870519"
  },
  {
    "text": "stop testing unrelated Concepts uh don't create unrelated data if you're not going to use it just create what you",
    "start": "870519",
    "end": "877160"
  },
  {
    "text": "need and don't extract methods for a single string return value or anything",
    "start": "877160",
    "end": "883440"
  },
  {
    "text": "silly like that there's not there's often not much value in extracting a method within a test because you're",
    "start": "883440",
    "end": "890519"
  },
  {
    "text": "forcing there's always conceptual overhead of going somewhere else always every single time so think about it as",
    "start": "890519",
    "end": "896560"
  },
  {
    "text": "if you were coming to that test fresh would you really want the conceptual overhead just to reduce a couple more",
    "start": "896560",
    "end": "904160"
  },
  {
    "text": "characters so we know of a few things that could be improved but you know it's all a little",
    "start": "906480",
    "end": "912279"
  },
  {
    "text": "abstract right now we do have concrete examples of exactly how we can get all of this done so the first thing is",
    "start": "912279",
    "end": "918079"
  },
  {
    "text": "simple we're just going to replace the loop with individual tests it's not that hard just break everything out break",
    "start": "918079",
    "end": "925000"
  },
  {
    "text": "everything out into four tests there are a lot more characters here but you can read exactly what's going on per",
    "start": "925000",
    "end": "932040"
  },
  {
    "text": "customer running these tests produces the following output it's so much more clear than",
    "start": "932040",
    "end": "938240"
  },
  {
    "text": "trying to understand what's going on with the loop this is instead of the single failure for the statement this is three failures and we can see that let's",
    "start": "938240",
    "end": "946279"
  },
  {
    "text": "see here John has Godfather failing and Steve does also and Pat does also how",
    "start": "946279",
    "end": "953040"
  },
  {
    "text": "about that we have a pattern that we couldn't see whenever we had a loop now we have some type of pattern that we can dig into and figure out",
    "start": "953040",
    "end": "959600"
  },
  {
    "text": "what the problem is so back here we can see that interesting John has uh get rentals oh",
    "start": "959600",
    "end": "967959"
  },
  {
    "text": "we don't have that much info here either do we we don't know exactly what John has um but at least things are broken",
    "start": "967959",
    "end": "973959"
  },
  {
    "text": "out so we know which tests are failing and it's only after we've duplicated everything that we're free to",
    "start": "973959",
    "end": "979639"
  },
  {
    "text": "dry anything it's okay if the duplication bothers you at this point we're tearing it all down we're tearing",
    "start": "979639",
    "end": "985120"
  },
  {
    "text": "the loop out out of our code we're going to duplicate everything and then we'll go back and look at what we can can uh",
    "start": "985120",
    "end": "990519"
  },
  {
    "text": "dry up later on but we'll do it at the suite level not at the fixture level so the next thing we're going to",
    "start": "990519",
    "end": "996680"
  },
  {
    "text": "do is expect literals here's how the tests look now we're still calling this helper function that really is not",
    "start": "996680",
    "end": "1003360"
  },
  {
    "text": "providing us any value other than some dogmatic application of dry so why call a parameterized method",
    "start": "1003360",
    "end": "1010000"
  },
  {
    "text": "once that does nothing more than return a string you know what the best representation of a string is a string",
    "start": "1010000",
    "end": "1016000"
  },
  {
    "text": "literal every single time",
    "start": "1016000",
    "end": "1020199"
  },
  {
    "text": "and that's what these tests give you string literals for expected values so there's no more looking around these tests are significantly easier to to",
    "start": "1021399",
    "end": "1027400"
  },
  {
    "text": "digest uh at this point I'm pretty sure everybody knows exactly what's going on in these",
    "start": "1027400",
    "end": "1033000"
  },
  {
    "text": "tests and the final thing the problem I brought up earlier you still didn't know what was what those uh three failing",
    "start": "1033000",
    "end": "1038880"
  },
  {
    "text": "tests what they were what what what type of customer was that here we have no idea what type of customer we have we",
    "start": "1038880",
    "end": "1045038"
  },
  {
    "text": "have Pat and we have John and we have Steve but that's not really clear enough but we put the object mother straight in",
    "start": "1045039",
    "end": "1050520"
  },
  {
    "text": "line we get rid of the setup method and what we end up with are tests that are easy to",
    "start": "1050520",
    "end": "1057000"
  },
  {
    "text": "read so we know uh basically what we know is that the one on the top left",
    "start": "1057000",
    "end": "1062440"
  },
  {
    "text": "works I could I could go back to the failing test but I won't waste your time the one on the top left works and everything else fails so it's pretty",
    "start": "1062440",
    "end": "1068880"
  },
  {
    "text": "safe to say looking at the object mother def uh static method definitions we can see that if we have one two or sorry one",
    "start": "1068880",
    "end": "1076039"
  },
  {
    "text": "one new release uh or a new release and a regular etc etc suddenly we can see what's going on",
    "start": "1076039",
    "end": "1083320"
  },
  {
    "text": "by reading the test isn't that kind of",
    "start": "1083320",
    "end": "1088919"
  },
  {
    "text": "nice what's even better is that we can delete the setup method and we can delete the customer Fields so we're",
    "start": "1089960",
    "end": "1095520"
  },
  {
    "text": "deleting code and we're creating better tests uh setup is clever that's fine",
    "start": "1095520",
    "end": "1102960"
  },
  {
    "text": "Bob's tests are very clever okay the problem is clever is less maintainable in this case the aggressive application",
    "start": "1102960",
    "end": "1109159"
  },
  {
    "text": "of dry made these tests harder to understand that's a real problem for me it's a real problem for me whenever my",
    "start": "1109159",
    "end": "1114559"
  },
  {
    "text": "teammates are writing tests that are harder to understand and it's even worse when I'm writing tests that's hard for my teammates to work with I mean it's a",
    "start": "1114559",
    "end": "1120640"
  },
  {
    "text": "pretty sure fire clue whenever somebody comes to you and says I can't figure out exactly what's going on with your tests can you come help me out chances are",
    "start": "1120640",
    "end": "1127000"
  },
  {
    "text": "there's going to be some type of extraction because if your tests look like this they shouldn't need your",
    "start": "1127000",
    "end": "1134000"
  },
  {
    "text": "help so you know what else is interesting about all this in my opinion I said said that we were going to kind",
    "start": "1134720",
    "end": "1139960"
  },
  {
    "text": "of expand everything out and then we'd go back and look at Drive the thing is even after we duplicated all this code",
    "start": "1139960",
    "end": "1145679"
  },
  {
    "text": "even after every change we made the overall number of lines has barely changed it hasn't changed but people dry",
    "start": "1145679",
    "end": "1153440"
  },
  {
    "text": "things so aggressively that they don't even look at the actual impact to the",
    "start": "1153440",
    "end": "1158120"
  },
  {
    "text": "code so I'm practicing this presentation in front of my wife and she says you're so angry can can you just cheer up a little",
    "start": "1158799",
    "end": "1165919"
  },
  {
    "text": "bit and I said I can't these tests are killing me uh how many people in here are",
    "start": "1165919",
    "end": "1172360"
  },
  {
    "text": "Consultants so I I did Consulting for quite a while and it would be very common to run into tests that look",
    "start": "1172360",
    "end": "1178039"
  },
  {
    "text": "exactly like this and it's so frustrating you want to go in and provide business value you want to help",
    "start": "1178039",
    "end": "1183360"
  },
  {
    "text": "a customer and uh they have somebody on the client's site who you can only",
    "start": "1183360",
    "end": "1188440"
  },
  {
    "text": "gently say there's a better way you know we can do better uh and it just drove me",
    "start": "1188440",
    "end": "1194280"
  },
  {
    "text": "crazy it really did it really kills your productivity it kills the teams performance perance um and there there",
    "start": "1194280",
    "end": "1201080"
  },
  {
    "text": "are so many rules that are applied dogmatically that really just don't apply to tests and we're only halfway",
    "start": "1201080",
    "end": "1207000"
  },
  {
    "text": "there the there's still many more changes we can make but first we're just going to talk about",
    "start": "1207000",
    "end": "1212320"
  },
  {
    "text": "motivators because people don't even take a step back and ask themselves why are we even writing tests I mean there",
    "start": "1212320",
    "end": "1217960"
  },
  {
    "text": "are a lot of great reasons to write tests but chances are there's going to be I don't know six different things on",
    "start": "1217960",
    "end": "1223400"
  },
  {
    "text": "my list and not all six will apply to every person in here in fact the combination probably everybody in here",
    "start": "1223400",
    "end": "1229320"
  },
  {
    "text": "will have three out of six that apply to them and they'll be different and that's okay you just have to take a step back",
    "start": "1229320",
    "end": "1234799"
  },
  {
    "text": "though and understand why you're writing the test in the first place and then make your tests match what your",
    "start": "1234799",
    "end": "1240000"
  },
  {
    "text": "motivators are specifically I'm motivated to write tests whenever I want to validate the",
    "start": "1240000",
    "end": "1245440"
  },
  {
    "text": "system also known as getting feedback or preventing regression this is pretty standard code coverage very standard uh",
    "start": "1245440",
    "end": "1253080"
  },
  {
    "text": "for a while code coverage uh was a main motivator for writing tests a lot of people believed in 100% code coverage uh",
    "start": "1253080",
    "end": "1260000"
  },
  {
    "text": "it used to be some consultancies would put that in their agreements we promised to give you 100% code coverage and then",
    "start": "1260000",
    "end": "1265960"
  },
  {
    "text": "they realized what a terrible idea that was and stopped doing that uh but it's still out there there's still tons of",
    "start": "1265960",
    "end": "1271279"
  },
  {
    "text": "tests out there that were written just for code coverage purposes enabling refactoring one of my",
    "start": "1271279",
    "end": "1276520"
  },
  {
    "text": "favorite reasons to write tests pretty self-explanatory documenting the system something I cannot relate to something",
    "start": "1276520",
    "end": "1282440"
  },
  {
    "text": "I've have never done but I've worked with some brilliant people who just love to document the system by writing tests",
    "start": "1282440",
    "end": "1288799"
  },
  {
    "text": "when they come to a new code base first thing they do is read a bunch of tests it just doesn't work for me it's so",
    "start": "1288799",
    "end": "1293919"
  },
  {
    "text": "boring puts me to sleep but but people can use it and so it's fantastic if I worked on a team with three other people",
    "start": "1293919",
    "end": "1300279"
  },
  {
    "text": "and all of them preferred documenting the system via tests I would have more tests you know the the test just has to",
    "start": "1300279",
    "end": "1306919"
  },
  {
    "text": "have a positive return on investment for me a test that only serves to document the system doesn't help I'm never going",
    "start": "1306919",
    "end": "1312840"
  },
  {
    "text": "to go read it more than likely but if 75% of my team 80% of my team will",
    "start": "1312840",
    "end": "1318080"
  },
  {
    "text": "that's a great motivator your manager told you to uh I would not be surprised if there",
    "start": "1318080",
    "end": "1324799"
  },
  {
    "text": "are people in here who hate unit tests frankly the unit tests that I've seen I hate them too sometimes uh maybe you've",
    "start": "1324799",
    "end": "1331279"
  },
  {
    "text": "given up on it a lot of people have and I don't blame you uh and and your manager tells you you still have to",
    "start": "1331279",
    "end": "1336400"
  },
  {
    "text": "write them anyways uh now you're in a tricky position right you're not a Believer you think it's a complete waste of time and your manager makes you do it",
    "start": "1336400",
    "end": "1343840"
  },
  {
    "text": "uh I'm sure that motivator applies to some people in here test driven development the most",
    "start": "1343840",
    "end": "1349039"
  },
  {
    "text": "common motivator I don't think there's much to say uh also known as breaking up the problem or improve design uh it's a",
    "start": "1349039",
    "end": "1354559"
  },
  {
    "text": "great motivator for writing tests while I was a consultant I once had a customer who would only accept new",
    "start": "1354559",
    "end": "1361400"
  },
  {
    "text": "features to the system when the unit test Suite was green the customer couldn't read the",
    "start": "1361400",
    "end": "1366840"
  },
  {
    "text": "tests had no idea what was going on in the tests but if they were green things were good and if they were red we",
    "start": "1366840",
    "end": "1372200"
  },
  {
    "text": "weren't moving on uh so that's an interesting motivator",
    "start": "1372200",
    "end": "1379200"
  },
  {
    "text": "I just suggest that everybody asks themselves what what motivates their team and what motivates you personally might not actually be the same as what",
    "start": "1379559",
    "end": "1385679"
  },
  {
    "text": "motivates the team and then you really have two choices you should either conform or you should probably go go",
    "start": "1385679",
    "end": "1391840"
  },
  {
    "text": "find another team honestly uh you have to do what's right for the team you write a test for you the first time you",
    "start": "1391840",
    "end": "1397400"
  },
  {
    "text": "write a test but if you leave a test that you wrote for you you're doing a disservice to the team you really have",
    "start": "1397400",
    "end": "1403720"
  },
  {
    "text": "to think about what the team wants what the team needs uh and that's just as important for writing tests as it is for",
    "start": "1403720",
    "end": "1409720"
  },
  {
    "text": "deleting tests you have to maintain every line of code if there's only one thing that you",
    "start": "1409720",
    "end": "1416919"
  },
  {
    "text": "remember please remember any fool can write a test that helps them today good programmers write tests that help the",
    "start": "1416919",
    "end": "1422400"
  },
  {
    "text": "entire team in the future it's really not about you it's about the",
    "start": "1422400",
    "end": "1427960"
  },
  {
    "text": "team so what else can we do what else can we do not just to help ourselves but to help our",
    "start": "1427960",
    "end": "1434440"
  },
  {
    "text": "team the first thing worth considering is this is your career career and it is ending one test Suite run at a",
    "start": "1434440",
    "end": "1441559"
  },
  {
    "text": "time who has a test Suite oh no one will answer this who has a test Suite that runs in more than 10",
    "start": "1441559",
    "end": "1447080"
  },
  {
    "text": "minutes there you go some brave people thank you what do you do in those 10",
    "start": "1447080",
    "end": "1452400"
  },
  {
    "text": "minutes browse the web Twitter I don't look at emails you're",
    "start": "1452400",
    "end": "1458600"
  },
  {
    "text": "not working on code and it's breaking up your flow running that test suite for 10 minutes and it's not really that hard to",
    "start": "1458600",
    "end": "1464600"
  },
  {
    "text": "make things better one simple rule and your test Suite will run a whole lot better never cross the boundaries don't",
    "start": "1464600",
    "end": "1470679"
  },
  {
    "text": "go to the file system don't go to the network don't go to the database that's it just don't do any of those things",
    "start": "1470679",
    "end": "1477799"
  },
  {
    "text": "mock out those resources I don't care if you use Constructor injection Setter injection or something magical it",
    "start": "1477799",
    "end": "1484159"
  },
  {
    "text": "doesn't matter to me how you do it but just don't don't do those things and your test Suite immediately will go up I",
    "start": "1484159",
    "end": "1489960"
  },
  {
    "text": "don't know 100x THX does anybody in here have inprocess",
    "start": "1489960",
    "end": "1495360"
  },
  {
    "text": "computation as the bottleneck in their test Suite running",
    "start": "1495360",
    "end": "1500320"
  },
  {
    "text": "that is very cool you you must work in a cool domain and the percentage is still great",
    "start": "1500760",
    "end": "1507000"
  },
  {
    "text": "right the rest of you all you have to do is don't go to the file system Network or the database and you're good that",
    "start": "1507000",
    "end": "1512919"
  },
  {
    "text": "simple change alone will help your team significantly there's one other simple rule it's simple and straightforward uh",
    "start": "1512919",
    "end": "1520679"
  },
  {
    "text": "but this is a little dense the class under test should be the only concrete class found in a test the last time I",
    "start": "1520679",
    "end": "1527919"
  },
  {
    "text": "gave this Pres presentation somebody said what do I mean by concrete I mean the implementation the actual Implement any",
    "start": "1527919",
    "end": "1534080"
  },
  {
    "text": "class with an implementation if you can get away with it should be the only class within that",
    "start": "1534080",
    "end": "1540120"
  },
  {
    "text": "test so Movie Class movie test customer class customer",
    "start": "1540120",
    "end": "1545200"
  },
  {
    "text": "test if you can get away with it no movies in your customer tests for example this test can be bit",
    "start": "1545200",
    "end": "1553520"
  },
  {
    "text": "of a problem the tests you've seen thus far including this one are conflating string building verification of summing",
    "start": "1553520",
    "end": "1559919"
  },
  {
    "text": "points verification of summing charges here we have a customer method uh test",
    "start": "1559919",
    "end": "1565799"
  },
  {
    "text": "method but the results depend both on rentals and on movies so of course any change to rental",
    "start": "1565799",
    "end": "1572679"
  },
  {
    "text": "or movie can also cause this test to fail even though we're in the customer test we have an implicit or explicit",
    "start": "1572679",
    "end": "1578919"
  },
  {
    "text": "dependency depending upon how you look at it the test on the right is the alternative rather than living with the",
    "start": "1578919",
    "end": "1585039"
  },
  {
    "text": "implicit dependency there's a really simple solution all you need is a mock here we have a mock uh that's really just behaving as a stub which is pretty",
    "start": "1585039",
    "end": "1592080"
  },
  {
    "text": "much how I always use my mocks to be honest and that's it now any change to the rental or any change to the movie",
    "start": "1592080",
    "end": "1598960"
  },
  {
    "text": "that's even farther down will have no impact on this test I mean other than an API change",
    "start": "1598960",
    "end": "1606000"
  },
  {
    "text": "obviously but no implementation within those classes will cause this test to",
    "start": "1606000",
    "end": "1611120"
  },
  {
    "text": "break which is a great thing quick side note you might have noticed null I'm sure half the people were offended and",
    "start": "1611120",
    "end": "1617520"
  },
  {
    "text": "the other half thought I made a mistake uh null is just a magic string here just like Godfather over on the",
    "start": "1617520",
    "end": "1623559"
  },
  {
    "text": "left is just a magic string here if you have just an aversion to nulls then sub",
    "start": "1623559",
    "end": "1628640"
  },
  {
    "text": "the method but me I I see no difference between those magic strings so moving on we have string",
    "start": "1628640",
    "end": "1635880"
  },
  {
    "text": "concatenation now verified here we have simple test that also verifies the total",
    "start": "1635880",
    "end": "1640960"
  },
  {
    "text": "charge and the total points you can introduce these tests that that Focus exclusively on summing so now we have",
    "start": "1640960",
    "end": "1647720"
  },
  {
    "text": "even small tests we had what we thought looked like a pretty simple test we thought maybe single responsibility",
    "start": "1647720",
    "end": "1652760"
  },
  {
    "text": "because we're calling one method but turns out not so much because that method was calling other methods here we",
    "start": "1652760",
    "end": "1658159"
  },
  {
    "text": "just test them all in isolation and we mock things out or stub as I prefer and",
    "start": "1658159",
    "end": "1663519"
  },
  {
    "text": "and we have even smaller tests with even less responsibility and we're now well",
    "start": "1663519",
    "end": "1668720"
  },
  {
    "text": "covered fantastic everything's great except we have you know this null and we have zero points and that's a little bit",
    "start": "1668720",
    "end": "1674640"
  },
  {
    "text": "interesting so of course we need another test which is not not really a big deal I mean this movie test is pretty",
    "start": "1674640",
    "end": "1680399"
  },
  {
    "text": "straightforward we have movies and we specify the number of or we specify the type and then we specify the numbers in",
    "start": "1680399",
    "end": "1687640"
  },
  {
    "text": "there are days and we get a charge for the days and again straightforward tests coming to this test fresh coming to this",
    "start": "1687640",
    "end": "1694760"
  },
  {
    "text": "test when you want to check in you should be able to understand what's going on extremely quickly which is great that's the goal",
    "start": "1694760",
    "end": "1702240"
  },
  {
    "text": "you want to be able to come to a test see what's gone wrong and change it as fast as you can this is a great",
    "start": "1702240",
    "end": "1707480"
  },
  {
    "text": "incremental step step these tests make life so much better for our team we now have confidence in everything because",
    "start": "1707480",
    "end": "1714600"
  },
  {
    "text": "it's all just as covered as it was before so fantastic we maintain that confidence but we have isolation we feel",
    "start": "1714600",
    "end": "1720880"
  },
  {
    "text": "comfortable that changes to a given class will only create failures within the test for that class movie test",
    "start": "1720880",
    "end": "1726840"
  },
  {
    "text": "changes movie or sorry movie class changes movie tests fail customers change customer tests fail but they're",
    "start": "1726840",
    "end": "1732760"
  },
  {
    "text": "all isolated in a way using those stubs that the other uh changes will not cause those t to fail more cascading failures",
    "start": "1732760",
    "end": "1740519"
  },
  {
    "text": "one of the big reasons people hate unit tests okay so things are much better uh",
    "start": "1740519",
    "end": "1746840"
  },
  {
    "text": "despite my happiness with unit tests there's still another test that I would honestly write every single time uh the",
    "start": "1746840",
    "end": "1753240"
  },
  {
    "text": "tests now are are very isolated and that's great uh but we're only working with mocks so we have no verification of",
    "start": "1753240",
    "end": "1760240"
  },
  {
    "text": "integration right we have a gap in our testing that that didn't exist before this is of course a problem that we",
    "start": "1760240",
    "end": "1765799"
  },
  {
    "text": "should address I mean we we don't want to find this Gap in production so we get here this unit test",
    "start": "1765799",
    "end": "1772760"
  },
  {
    "text": "brings everything together and ensures no integration surprises and it feels very much like",
    "start": "1772760",
    "end": "1778919"
  },
  {
    "text": "I've contradicted myself because now we have concrete classes uh and what it really comes down to is that I have",
    "start": "1778919",
    "end": "1784960"
  },
  {
    "text": "different tests for what I'm looking for the type of feedback that I'm looking to get so this isn't to confuse you instead",
    "start": "1784960",
    "end": "1792600"
  },
  {
    "text": "uh I'd like to have my unit tests serve specific purposes the tests that have a single concrete class are designed to test the code brand bres in logic all of",
    "start": "1792600",
    "end": "1799440"
  },
  {
    "text": "the tests that you saw before tested all of the branches they tested the charge for the movies with a specific number of",
    "start": "1799440",
    "end": "1804600"
  },
  {
    "text": "days they tested the the string concatenation and isolation but here we have one thing that brings it all",
    "start": "1804600",
    "end": "1810159"
  },
  {
    "text": "together so the tests that use stubs I call them solitary tests the steps that",
    "start": "1810159",
    "end": "1815480"
  },
  {
    "text": "bring everything together the tests that bring everything together like this the integration tests I call them sociable",
    "start": "1815480",
    "end": "1820919"
  },
  {
    "text": "because the classes talk to each other and I break these things up I actually have separate name spaces in Java projects so all of the solary tests",
    "start": "1820919",
    "end": "1828880"
  },
  {
    "text": "live in one space and all of the sociable tests live in another space that way when one of them fails I can",
    "start": "1828880",
    "end": "1834600"
  },
  {
    "text": "look at the failure and say all right what exactly am I testing here what what am I worried about if it's sociable I'm",
    "start": "1834600",
    "end": "1840480"
  },
  {
    "text": "only worried about integration if I'm testing code branches or Corner cases in",
    "start": "1840480",
    "end": "1845519"
  },
  {
    "text": "my sociable tests I'm doing the wrong thing I I have a missing test there I have a clue that I have a missing",
    "start": "1845519",
    "end": "1851640"
  },
  {
    "text": "solitary test no problem you go write the solitary test if if the failure is",
    "start": "1851640",
    "end": "1856799"
  },
  {
    "text": "in the solitary test then maybe I have an actual problem in my domain or I just need to update the test but I have tests",
    "start": "1856799",
    "end": "1863120"
  },
  {
    "text": "again that are focusing on a single responsibility so not only does the test only test one thing but it's also a",
    "start": "1863120",
    "end": "1869080"
  },
  {
    "text": "specific type of test that tells me where I need to go based on the feedback and you separate them to make it easy",
    "start": "1869080",
    "end": "1875360"
  },
  {
    "text": "for you to know where to go based on the feedback how else can you improve things",
    "start": "1875360",
    "end": "1882200"
  },
  {
    "text": "there are a couple easy ways this is the movie test that we all saw if the second te if the second",
    "start": "1882200",
    "end": "1889320"
  },
  {
    "text": "assertion fails none of the code below it will run I assume everybody knows that but have you ever really thought",
    "start": "1889320",
    "end": "1895000"
  },
  {
    "text": "about that how valuable is that code the code below the second assertion if it",
    "start": "1895000",
    "end": "1902039"
  },
  {
    "text": "fails I think the easy answer would be it's not valuable at all because it doesn't run what what value is there in",
    "start": "1902039",
    "end": "1907120"
  },
  {
    "text": "code that doesn't run but it's worse really if you think about it there's no value in code that doesn't run but it's",
    "start": "1907120",
    "end": "1913559"
  },
  {
    "text": "still sitting there you're still maintaining that code when this test fails you have to go look at the test and you have to try to figure out what's",
    "start": "1913559",
    "end": "1919120"
  },
  {
    "text": "going on so you have not only a failing assertion but you have noise below it and you have no idea what's going on",
    "start": "1919120",
    "end": "1925000"
  },
  {
    "text": "with that noise if you have this failure you don't",
    "start": "1925000",
    "end": "1930080"
  },
  {
    "text": "know what's going on after it in any way whatsoever all you know is that you had",
    "start": "1930080",
    "end": "1935559"
  },
  {
    "text": "a charge for children's and you expected 1.5 and you got 3.0 so we go back and we",
    "start": "1935559",
    "end": "1941279"
  },
  {
    "text": "can see that we're expecting 1.5 in several places so we have to use the",
    "start": "1941279",
    "end": "1946880"
  },
  {
    "text": "line number basically and we know everything below that line was worthless so that's not great I know of",
    "start": "1946880",
    "end": "1954000"
  },
  {
    "text": "one failure I have no automatically generated information about the remaining tests given a test with",
    "start": "1954000",
    "end": "1959519"
  },
  {
    "text": "multiple assertions when they're all passing they all provide value it's obvious it's easy but when it fails all",
    "start": "1959519",
    "end": "1966000"
  },
  {
    "text": "the value is removed from the subsequent assertions and when faced with a failing test with multiple assertions you're for",
    "start": "1966000",
    "end": "1971080"
  },
  {
    "text": "forced to make one of two choices neither one of them are good to be honest one is read everything and guess",
    "start": "1971080",
    "end": "1977039"
  },
  {
    "text": "if it's going to work next time and none of us will do that because we're lazy as we should be instead we will run the",
    "start": "1977039",
    "end": "1983120"
  },
  {
    "text": "test we will fix the assertion and we will run the tests and we'll fix the assertion and we will run the test and fix the assertion over and over until",
    "start": "1983120",
    "end": "1989799"
  },
  {
    "text": "everything works probably never even stopping to think why am I wasting my time doing",
    "start": "1989799",
    "end": "1995039"
  },
  {
    "text": "this because it's become natural to us it's just what we do now or we could stop doing that what if",
    "start": "1995039",
    "end": "2003080"
  },
  {
    "text": "we ran the test once and we got all of the feedback at once that would that would be nice and",
    "start": "2003080",
    "end": "2008279"
  },
  {
    "text": "it doesn't sound so crazy does it but yet you talk to people and you say how about one assertion per test and they",
    "start": "2008279",
    "end": "2013360"
  },
  {
    "text": "think you're insane but this is what it looks like this is the same test only two of the",
    "start": "2013360",
    "end": "2019360"
  },
  {
    "text": "four uh because it's a slide but suddenly our tests are easy easy to consume again single",
    "start": "2019360",
    "end": "2025679"
  },
  {
    "text": "responsibility and so now we have a test Suite run that whenever it runs instead of seeing one failure and not knowing",
    "start": "2025679",
    "end": "2032720"
  },
  {
    "text": "what else is going on we see three failures we see that the charge for for",
    "start": "2032720",
    "end": "2037840"
  },
  {
    "text": "a children's 3day is one expected 1.5 and got three and for a 4 day we",
    "start": "2037840",
    "end": "2043279"
  },
  {
    "text": "expected 3.0 and got 4.5 and for five we expected 4.5 and got six so it's just three failures by",
    "start": "2043279",
    "end": "2051040"
  },
  {
    "text": "breaking things up instead of having one failure we have three but the sum of this is obviously better it doesn't take",
    "start": "2051040",
    "end": "2056398"
  },
  {
    "text": "a genius to understand that suddenly the pattern has come out that anything over two days is broken but it's always off",
    "start": "2056399",
    "end": "2062919"
  },
  {
    "text": "by 1.5 so now you can go to your domain and figure out what that entails",
    "start": "2062919",
    "end": "2068320"
  },
  {
    "text": "did you did you break the domain code or did the business actually just say yeah that's the change that we want to make",
    "start": "2068320",
    "end": "2073520"
  },
  {
    "text": "but the sum of the errors is better so why wouldn't you want that",
    "start": "2073520",
    "end": "2078480"
  },
  {
    "text": "information so the expected and return values give you valuable information per test uh as I said the sum is is better",
    "start": "2079480",
    "end": "2086358"
  },
  {
    "text": "than the parts and every time you write multiple assertions you're suppressing valuable information again not just for you more",
    "start": "2086359",
    "end": "2094240"
  },
  {
    "text": "importantly probably for your teammates that come here without context",
    "start": "2094240",
    "end": "2099480"
  },
  {
    "text": "so wrapping up a little bit the second thing that I would like you to walk away remembering if if you're willing to give",
    "start": "2100119",
    "end": "2105160"
  },
  {
    "text": "me two things to remember is the test that you the test that you own end up owning",
    "start": "2105160",
    "end": "2110200"
  },
  {
    "text": "you there are so many examples of this uh and I love all of them so bear with me uh imagine you're working for an",
    "start": "2110200",
    "end": "2117599"
  },
  {
    "text": "insurance company and you need to look people up by their social security number or whatever unique identifier it",
    "start": "2117599",
    "end": "2123119"
  },
  {
    "text": "doesn't really matter you want to validate that somehow when somebody calls up and and asks about their policy",
    "start": "2123119",
    "end": "2128400"
  },
  {
    "text": "you need to be able to pull up their file but what if their name's J and instead it was J A",
    "start": "2128400",
    "end": "2135520"
  },
  {
    "text": "y1 I'm still going to be a customer you're still going to look me up everything's still going to work out",
    "start": "2135520",
    "end": "2141200"
  },
  {
    "text": "okay the worst thing that happens is that maybe I get mail with my name on it",
    "start": "2141200",
    "end": "2146320"
  },
  {
    "text": "and it looks a little bit wrong but that's it so the tests that validate these things the tests that validate the",
    "start": "2146320",
    "end": "2152760"
  },
  {
    "text": "unique ID they need to work because you need to be able to look people up to run your business but the test that verifies",
    "start": "2152760",
    "end": "2159160"
  },
  {
    "text": "that my name is Alpha is not necessary is it good to have sure it's nice maybe",
    "start": "2159160",
    "end": "2165280"
  },
  {
    "text": "I mean now there are names with Alpha so how great was that test really but maybe it's good to have maybe it's not uh in",
    "start": "2165280",
    "end": "2172000"
  },
  {
    "text": "that case it's probably easy to write the test and you move on but what about something like a web form I want to put a red background",
    "start": "2172000",
    "end": "2178359"
  },
  {
    "text": "whenever somebody puts a one in their first name okay simple logic and and nice right but how are you going to unit",
    "start": "2178359",
    "end": "2185119"
  },
  {
    "text": "test that selenium some type of Web Runner that takes five minutes to",
    "start": "2185119",
    "end": "2190359"
  },
  {
    "text": "execute 10 minutes to execute is it is it really worth it is it really worth adding to your test",
    "start": "2190359",
    "end": "2196720"
  },
  {
    "text": "Suite to validate that the background went red can you still do business without a red background on your web",
    "start": "2196720",
    "end": "2203000"
  },
  {
    "text": "page I think you can another example that I don't think",
    "start": "2203000",
    "end": "2209040"
  },
  {
    "text": "people consider is is what I mentioned earlier but this is the most common one you you want to write tdd fantastic tdd",
    "start": "2209040",
    "end": "2215800"
  },
  {
    "text": "is great I'm all on board with tdd but that just helps you design your code it",
    "start": "2215800",
    "end": "2220960"
  },
  {
    "text": "helps you create I don't know maintainable designs and uh it helps you drive towards the design you want",
    "start": "2220960",
    "end": "2227040"
  },
  {
    "text": "evolutionary design so many great things so many buzzwords but once you're done once you have that good design that test",
    "start": "2227040",
    "end": "2233839"
  },
  {
    "text": "is maybe not necessarily as valuable look at that test that you created for tdd and decide is it going",
    "start": "2233839",
    "end": "2239760"
  },
  {
    "text": "to help the team in the future if it helped you get to the design you got to that's great it served its purpose nobody's going to tell you that you",
    "start": "2239760",
    "end": "2245200"
  },
  {
    "text": "shouldn't write that test but that doesn't mean you need to make maintain that test forever and your team needs to",
    "start": "2245200",
    "end": "2250800"
  },
  {
    "text": "maintain that test forever so look at a test and decide if it's worth it in the moment but also if it'll continue to be",
    "start": "2250800",
    "end": "2256760"
  },
  {
    "text": "worth maintaining stop thinking about tests",
    "start": "2256760",
    "end": "2262280"
  },
  {
    "text": "from your individual point of view think about the team I mean that's that's definitely the high level takeaway from",
    "start": "2262280",
    "end": "2268160"
  },
  {
    "text": "this presentation your tests are not special they're not beautiful or unique snowflakes have the same decaying text",
    "start": "2268160",
    "end": "2275440"
  },
  {
    "text": "as every other test it's it's all about your team it's",
    "start": "2275440",
    "end": "2281400"
  },
  {
    "text": "really not about you it's about making the whole team more successful and it's about thinking about the context that",
    "start": "2281400",
    "end": "2286599"
  },
  {
    "text": "you're in and how you can help your team that's",
    "start": "2286599",
    "end": "2293079"
  },
  {
    "text": "it right so there are some questions great what is dry don't repeat yourself",
    "start": "2301800",
    "end": "2308400"
  },
  {
    "text": "uh it just means it means very different things to to different people I believe it",
    "start": "2308400",
    "end": "2313720"
  },
  {
    "text": "originated in the pragmatic programmer I'm sure it came before that book was released uh and it basically just says",
    "start": "2313720",
    "end": "2319599"
  },
  {
    "text": "don't repeat the same concept some people interpret that as don't repeat the same characters uh I don't agree",
    "start": "2319599",
    "end": "2325480"
  },
  {
    "text": "with that definition but uh it's it's very common to find that but I would say the the essence of it is just don't",
    "start": "2325480",
    "end": "2332200"
  },
  {
    "text": "repeat the same concept within your systems okay thank you how do you mock f",
    "start": "2332200",
    "end": "2337440"
  },
  {
    "text": "Chanel classes uh find a better language that was easy no well I guess",
    "start": "2337440",
    "end": "2345839"
  },
  {
    "text": "there's if if you're using some if if you're using a final class that you you",
    "start": "2345839",
    "end": "2351200"
  },
  {
    "text": "absolutely have to use you could just wrap it in a not final class and then then mock that that's what I would",
    "start": "2351200",
    "end": "2357839"
  },
  {
    "text": "do what if our relevant data helps us discover false negatives and false",
    "start": "2357839",
    "end": "2362960"
  },
  {
    "text": "positives as long as you have a motivator driving you to write a test write it and write more of as long as",
    "start": "2362960",
    "end": "2368079"
  },
  {
    "text": "it's providing value that's great but the takeaway should be is this test providing value not oh I just need a",
    "start": "2368079",
    "end": "2373720"
  },
  {
    "text": "test blindly why limit not drawing",
    "start": "2373720",
    "end": "2379079"
  },
  {
    "text": "aggressively to testing will these read readability improvements cause problems outside the",
    "start": "2379079",
    "end": "2385839"
  },
  {
    "text": "tests can you repeat the second half again sorry I didn't get it either will these readability",
    "start": "2385839",
    "end": "2393240"
  },
  {
    "text": "improvements cause problems outside of tests",
    "start": "2393240",
    "end": "2398960"
  },
  {
    "text": "uh I assume the question is why limit it would it be better to duplicate also as",
    "start": "2398960",
    "end": "2404599"
  },
  {
    "text": "well uh I mean that's a great question for it's great to think about code that way I can't possibly say don't dry your",
    "start": "2404599",
    "end": "2411280"
  },
  {
    "text": "code they'll throw me out of the community uh but but thinking about the return on investment of every line of",
    "start": "2411280",
    "end": "2417040"
  },
  {
    "text": "code is extremely valuable not not just for tests obviously right we have time for a few",
    "start": "2417040",
    "end": "2422400"
  },
  {
    "text": "more what's your take on naming I miss descriptive test method names in your example",
    "start": "2422400",
    "end": "2429318"
  },
  {
    "text": "uh I think if xunit had been created in a language that actually supported Anonymous functions then we wouldn't",
    "start": "2429560",
    "end": "2435920"
  },
  {
    "text": "have had test names by default uh I think they're great when they're great and they're worse than bad in in many",
    "start": "2435920",
    "end": "2443280"
  },
  {
    "text": "occasions because they're wrong uh the first version of this book had test",
    "start": "2443280",
    "end": "2448480"
  },
  {
    "text": "names that were wrong because you write a test well you write the name first most of the time and then you write the test and the test either evolves right",
    "start": "2448480",
    "end": "2455040"
  },
  {
    "text": "then and you forget to change it or somebody else evolves the test in the future and as as was said in the last",
    "start": "2455040",
    "end": "2460880"
  },
  {
    "text": "presentation the famous quote code doesn't lie which is great and true but comments do lie and a test name is a",
    "start": "2460880",
    "end": "2468040"
  },
  {
    "text": "comment don't kid yourselves a test name is a comment it is nothing else is bdd a viable way to improve",
    "start": "2468040",
    "end": "2476160"
  },
  {
    "text": "maintainability of tests or your thoughts on bdd in general uh bdd is very opinionated and",
    "start": "2476160",
    "end": "2485000"
  },
  {
    "text": "if the team is on board go for it fantastic and if the team is not on board it's the worst idea maybe not the",
    "start": "2485000",
    "end": "2491160"
  },
  {
    "text": "worst but pretty terrible uh it's all about buying it's extremely opinionated there are many opinionated test",
    "start": "2491160",
    "end": "2496920"
  },
  {
    "text": "Frameworks out there uh and none of them are the right answer it's all about the",
    "start": "2496920",
    "end": "2502160"
  },
  {
    "text": "team I think this will be the last question if you're doing single assertion per test you would easily end",
    "start": "2502160",
    "end": "2508440"
  },
  {
    "text": "up refactoring to dry should you copy the same setup for the multitude of",
    "start": "2508440",
    "end": "2514200"
  },
  {
    "text": "assertions yes not in the setup method within the test itself absolutely the",
    "start": "2514200",
    "end": "2519640"
  },
  {
    "text": "key is to have that tiny universe that's incredibly easy to digest so when you go to a failure you don't have to go",
    "start": "2519640",
    "end": "2525760"
  },
  {
    "text": "anywhere that's that's the perfect world maybe you have a builder and you already know what the Builder is doing but the",
    "start": "2525760",
    "end": "2531440"
  },
  {
    "text": "perfect world is you get there the Builder creates the domain object and you look at what's actually being tested",
    "start": "2531440",
    "end": "2536920"
  },
  {
    "text": "the expected value as a literal perfect uh you look at the the method call or function call to The Domain and uh it's",
    "start": "2536920",
    "end": "2544400"
  },
  {
    "text": "it's extremely clear what's going on ideally you don't want to rely on any type of IDE to have to read a test that",
    "start": "2544400",
    "end": "2551160"
  },
  {
    "text": "that just feels wrong to me",
    "start": "2551160",
    "end": "2555039"
  }
]