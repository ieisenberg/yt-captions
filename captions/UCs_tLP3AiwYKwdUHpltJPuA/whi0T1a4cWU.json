[
  {
    "start": "0",
    "end": "99000"
  },
  {
    "text": "[Music] great thanks that well it's great to be",
    "start": "6990",
    "end": "14450"
  },
  {
    "text": "back in back in Chicago and Beckett go to so I'm going to talk about effective micro services in a data centric world",
    "start": "14450",
    "end": "20840"
  },
  {
    "text": "and I'll tell you a little bit about my background the background of the company that I work for and then applied that to",
    "start": "20840",
    "end": "26360"
  },
  {
    "text": "some learnings that we've had and building out micro service architectures so just a tip that you know where I'm",
    "start": "26360",
    "end": "32000"
  },
  {
    "text": "coming from I'm the VP of engineering of a company in San Francisco called stitch fix and stitch fix is a clothing",
    "start": "32000",
    "end": "37579"
  },
  {
    "text": "retailer that is sort of revolutionising retail by turning it on its head and we like to use we like to think of our",
    "start": "37579",
    "end": "43579"
  },
  {
    "text": "combination of the business model as combining art with science and if that doesn't make sense that's fine but it",
    "start": "43579",
    "end": "49909"
  },
  {
    "text": "will in a couple of slides before that I was sort of a roving CTO as a service",
    "start": "49909",
    "end": "55219"
  },
  {
    "text": "like my friends would call me I was helping a bunch of companies scale their organizations scale their technologies",
    "start": "55219",
    "end": "61309"
  },
  {
    "text": "and in large part or in often part the technologies involved adopting micro services and migrating monoliths to",
    "start": "61309",
    "end": "67880"
  },
  {
    "text": "micro services before that I was director of in director of engineering at Google for Google App Engine so App",
    "start": "67880",
    "end": "74299"
  },
  {
    "text": "Engine is Google's platform as a service and at the time I was there was the world's largest one you might be",
    "start": "74299",
    "end": "79850"
  },
  {
    "text": "familiar with Roku or some other platforms as a service it's kind of in that same that same space and then",
    "start": "79850",
    "end": "85460"
  },
  {
    "text": "earlier in my career I was chief engineer at eBay for about six and a half years I and during that time I",
    "start": "85460",
    "end": "91219"
  },
  {
    "text": "spent a bunch of effort helping to migrate eBay through a couple of",
    "start": "91219",
    "end": "96409"
  },
  {
    "text": "iterations of their fundamental architecture cool so I want to tell you a little a little bit about stitch fix",
    "start": "96409",
    "end": "102109"
  },
  {
    "start": "99000",
    "end": "159000"
  },
  {
    "text": "and this isn't to tell you that you should buy your clothes through our service which of course you should but",
    "start": "102109",
    "end": "107719"
  },
  {
    "text": "it's basically to give you a background on the business model because that will let you have some insight into why data",
    "start": "107719",
    "end": "113509"
  },
  {
    "text": "is so important and why micro services are a good fit for for what we what we're trying to do so the business model",
    "start": "113509",
    "end": "119630"
  },
  {
    "text": "at stitch fix is basically the reverse of standard retail so rather than going into a store or into an online online",
    "start": "119630",
    "end": "126560"
  },
  {
    "text": "e-commerce site you fill out a pretty detailed style profile about yourself",
    "start": "126560",
    "end": "131630"
  },
  {
    "text": "you tell us all the things you like all the things you don't like your price preferences your style preferences all",
    "start": "131630",
    "end": "137659"
  },
  {
    "text": "sorts of information that you would tell maybe your friend or your sister or your brother and for somebody who is going to choose clothes",
    "start": "137659",
    "end": "143660"
  },
  {
    "text": "for you so you give us all that information we send you five hand-picked items in a box that we've selected",
    "start": "143660",
    "end": "148970"
  },
  {
    "text": "exactly for you and then you keep what you want and you return what you want and obviously you keep the things you're",
    "start": "148970",
    "end": "154520"
  },
  {
    "text": "going to pay us for them but if you don't keep them they come back for free and no problem so behind that model is a",
    "start": "154520",
    "end": "162050"
  },
  {
    "start": "159000",
    "end": "253000"
  },
  {
    "text": "lot of art and a lot of data science so we've make we made such an such an",
    "start": "162050",
    "end": "167180"
  },
  {
    "text": "investment into data science that we actually have a one-to-one ratio between engineers and data scientists so we have",
    "start": "167180",
    "end": "172490"
  },
  {
    "text": "roughly 70 to 75 engineers in the team that I work on we have roughly 75 data",
    "start": "172490",
    "end": "177560"
  },
  {
    "text": "scientists in our algorithms team and as far as I'm aware this ratio is unique in",
    "start": "177560",
    "end": "182630"
  },
  {
    "text": "our industry I mean I'd love to hear the counter example but so far I believe it's the only company that sort of a bar",
    "start": "182630",
    "end": "188150"
  },
  {
    "text": "scale that has sort of equal parts engineering and data science and what do",
    "start": "188150",
    "end": "193310"
  },
  {
    "text": "we do with 75 data scientists right well we actually apply intelligence to every part of our business so we apply it to",
    "start": "193310",
    "end": "199640"
  },
  {
    "text": "the buying process which in retail is called merchandising we apply it to inventory management so we actually have",
    "start": "199640",
    "end": "205520"
  },
  {
    "text": "physical warehouses and the managing the inventory there is done with data science we do it with we apply to",
    "start": "205520",
    "end": "213080"
  },
  {
    "text": "logistics optimization so shipping out to get things to the people at the right time at the minimal cost we do it for",
    "start": "213080",
    "end": "220010"
  },
  {
    "text": "styling recommendations which I'm going to talk about for the next couple of minutes so the recommendations to the human stylist that actually choose the",
    "start": "220010",
    "end": "227060"
  },
  {
    "text": "clothes that are going to go into the box for you and we also do more standard things like demand prediction trying to",
    "start": "227060",
    "end": "232580"
  },
  {
    "text": "think trying to figure out how many clients we're going to have going forward how many fixes or how many boxes in our",
    "start": "232580",
    "end": "238880"
  },
  {
    "text": "terminology we're going to send out that sort of stuff and the key thing though across all those all those areas is that",
    "start": "238880",
    "end": "245330"
  },
  {
    "text": "we have humans and machines augmenting each other the humans wouldn't be able to do as well without the machines and machines",
    "start": "245330",
    "end": "251120"
  },
  {
    "text": "wouldn't be able to do as well without the humans so let me give you a quick example of a working example of what we",
    "start": "251120",
    "end": "257299"
  },
  {
    "start": "253000",
    "end": "325000"
  },
  {
    "text": "call styling so styling is choosing those five items that go into the box for you and we have about 3500 human",
    "start": "257299",
    "end": "264380"
  },
  {
    "text": "stylists that are all around the United States they look at they look at our inventory and out the other and they",
    "start": "264380",
    "end": "270980"
  },
  {
    "text": "choose the five items for you and then they send them to you in the box and we hope that you enjoy them but actually behind",
    "start": "270980",
    "end": "277260"
  },
  {
    "text": "that is a bunch of algorithm a bunch of algorithmic work and a ton of data science so we as soon as you have signed",
    "start": "277260",
    "end": "284220"
  },
  {
    "text": "up with the service with that detailed profile we can immediately cluster you with about with a bunch of other",
    "start": "284220",
    "end": "290160"
  },
  {
    "text": "customers that have similar tastes and then we run a ton of machine learn more to make predictions about what you're",
    "start": "290160",
    "end": "296520"
  },
  {
    "text": "going to keep and what you're going to return and those algorithmic recommendations go into the interface",
    "start": "296520",
    "end": "301680"
  },
  {
    "text": "that the stylists use to choose the things that we send and then the in the stylist is not just taking the top five",
    "start": "301680",
    "end": "309389"
  },
  {
    "text": "things that we recommend the stylist is doing what the humans do best putting together an outfit deciding that this is",
    "start": "309389",
    "end": "315810"
  },
  {
    "text": "a thing that a software engineer in San Francisco would wear or this is something that a Manhattan socialite would wear basically the things that",
    "start": "315810",
    "end": "322050"
  },
  {
    "text": "humans are good at and the machines aren't yet so for the rest of the talk I want to talk about how we work at stitch",
    "start": "322050",
    "end": "328889"
  },
  {
    "start": "325000",
    "end": "388000"
  },
  {
    "text": "fix focusing mainly on the micro services but and I want to talk about I also want to talk about why that way of",
    "start": "328889",
    "end": "335700"
  },
  {
    "text": "working actually works so modern software development to my mind is sort of made up of four different segments so",
    "start": "335700",
    "end": "342690"
  },
  {
    "text": "there's and it's not just technology right it's organization its processes and practices its culture and its",
    "start": "342690",
    "end": "348600"
  },
  {
    "text": "technology and as far as I'm aware or in my personal opinion the ways that I like",
    "start": "348600",
    "end": "354300"
  },
  {
    "text": "high-performing teams that I've worked in the approach those problems in this way so in organizations we like to have",
    "start": "354300",
    "end": "360030"
  },
  {
    "text": "small teams with well-defined areas of responsibility for processes and practices I'm a strong believer in",
    "start": "360030",
    "end": "366210"
  },
  {
    "text": "test-driven development and continuous delivery for culture I'm a strong believer in DevOps meaning that",
    "start": "366210",
    "end": "371580"
  },
  {
    "text": "everybody owns end to end the services and applications that they build and finally I believe strongly in micro",
    "start": "371580",
    "end": "378150"
  },
  {
    "text": "services so I'm going to go through those first three super quickly to kind of give you a baseline and then the rest",
    "start": "378150",
    "end": "384180"
  },
  {
    "text": "of the talk is going to be about micro services though they promised so quickly on the small teams so so the",
    "start": "384180",
    "end": "389810"
  },
  {
    "start": "388000",
    "end": "440000"
  },
  {
    "text": "high-performing organizations that I've worked in sort of the Google's the eBay's of the world do this so they have",
    "start": "389810",
    "end": "396780"
  },
  {
    "text": "small teams that are aligned to particular business domains so a team has a clear well-defined area of",
    "start": "396780",
    "end": "403140"
  },
  {
    "text": "responsibility and a team typically typically maintains a single service or application or a set of",
    "start": "403140",
    "end": "408470"
  },
  {
    "text": "related services and applications teams are cross-functional so within the boundary of the team they have all the",
    "start": "408470",
    "end": "414890"
  },
  {
    "text": "skill sets that they need to do their job now I'm not saying they have all skill sets in the world like we don't",
    "start": "414890",
    "end": "420080"
  },
  {
    "text": "make our own hardware we don't make our own operating systems but all the things that the team needs to get their job done are all within the boundaries of",
    "start": "420080",
    "end": "426380"
  },
  {
    "text": "the team and of course those teams depend on other teams at statistics for supporting services supporting libraries",
    "start": "426380",
    "end": "432980"
  },
  {
    "text": "and tooling on the processes and practices side again we're strong",
    "start": "432980",
    "end": "438260"
  },
  {
    "text": "believers in test-driven development and continuous delivery so for test-driven development we do",
    "start": "438260",
    "end": "443419"
  },
  {
    "start": "440000",
    "end": "599000"
  },
  {
    "text": "this because tests help us to go faster right we're making an invest investment upfront in writing tests as we write our",
    "start": "443419",
    "end": "450290"
  },
  {
    "text": "software but we do that because the tests have our back right they there they're there to make us to let us know",
    "start": "450290",
    "end": "457370"
  },
  {
    "text": "when something is broken because of a change that we made and it actually ends up increasing our development velocity",
    "start": "457370",
    "end": "462919"
  },
  {
    "text": "rather than slowing it down tests help us make better code so it gives us the strut the confidence to be able to break",
    "start": "462919",
    "end": "469250"
  },
  {
    "text": "things and it gives us the confidence to be able to refactor in a very courageous way when things when we want to do",
    "start": "469250",
    "end": "476990"
  },
  {
    "text": "something different with the code and finally tests make better systems so it allows us to catch bugs earlier and it",
    "start": "476990",
    "end": "483140"
  },
  {
    "text": "allows us to fail faster so the other test-driven development has been",
    "start": "483140",
    "end": "489260"
  },
  {
    "text": "practiced by a bunch of people for a long time but widely in the industry relatively recently so often you will",
    "start": "489260",
    "end": "495200"
  },
  {
    "text": "hear from managee types and I have become this person so I'm sad but you",
    "start": "495200",
    "end": "500840"
  },
  {
    "text": "often hear from managee types that we don't have time to do it right and I say wrong I say we don't have time to do it",
    "start": "500840",
    "end": "507530"
  },
  {
    "text": "twice so if we do it right at least right enough the first time as Brian Cantrell also said in today's keynote",
    "start": "507530",
    "end": "514630"
  },
  {
    "text": "then we're going to be in a much better position to build on something solid",
    "start": "514630",
    "end": "519770"
  },
  {
    "text": "that already exists and be able to move forward in a great way and in fact this is maybe counterintuitive but the more",
    "start": "519770",
    "end": "526400"
  },
  {
    "text": "constrained we are in terms of time and resources the more important it is to build right the first time right if we",
    "start": "526400",
    "end": "532610"
  },
  {
    "text": "don't have much time and we don't have much resources we should spend our time building a small number of really great",
    "start": "532610",
    "end": "537860"
  },
  {
    "text": "teachers rather than a large numbers of sort of half implemented ones and just to be clear when I say right I don't",
    "start": "537860",
    "end": "544100"
  },
  {
    "text": "mean perfect right you build the 80/20 rule of the thing that you actually need to get done you do it well high-quality",
    "start": "544100",
    "end": "550310"
  },
  {
    "text": "move on the implication that that has for us at stitch fix is a really interesting one",
    "start": "550310",
    "end": "556100"
  },
  {
    "text": "it's the first time that I've worked I've been in the industry for a long time as you can tell they're looking at me and we basically don't have a bug",
    "start": "556100",
    "end": "562579"
  },
  {
    "text": "tracking system so bugs are fixed as they come up so we have a system that",
    "start": "562579",
    "end": "567589"
  },
  {
    "text": "that shows us the bugs that are happening in real time in the applications but when they come up we",
    "start": "567589",
    "end": "573200"
  },
  {
    "text": "fix them and and we have a really solid system from then on we do of course have a backlog it's not like we don't know",
    "start": "573200",
    "end": "579589"
  },
  {
    "text": "what we're going to do next week next month or next quarter we have a backlog but those backlog are new features right",
    "start": "579589",
    "end": "585709"
  },
  {
    "text": "features we want to build technical debt that we want to repay it's not a whole list of things that that are broken in",
    "start": "585709",
    "end": "591860"
  },
  {
    "text": "the current set of features does this kind of make sense yeah it's really cool and I and I really love working in an",
    "start": "591860",
    "end": "597500"
  },
  {
    "text": "environment like this which is why I bring it up so the other angle about processes and practices are is",
    "start": "597500",
    "end": "602990"
  },
  {
    "start": "599000",
    "end": "680000"
  },
  {
    "text": "continuous delivery so most of our applications that stitch fix are deployed multiple times a day and when I",
    "start": "602990",
    "end": "609560"
  },
  {
    "text": "used to talk about Stephanie Bay when I first started giving conference talks about in 2006 I was talking about the",
    "start": "609560",
    "end": "615320"
  },
  {
    "text": "eBay architecture and some of our other practices at eBay and it was the first time that eBay had sort of opened the",
    "start": "615320",
    "end": "621649"
  },
  {
    "text": "kimono and talked publicly about what they were doing and so one of the things we talked about beyond the architecture was eBay used to release the site on",
    "start": "621649",
    "end": "628370"
  },
  {
    "text": "two-week train so they would leased the entire site once every two weeks and just to give you a sense of how far",
    "start": "628370",
    "end": "633980"
  },
  {
    "text": "we've come 11 years ago that was amazing people were like oh my god you released the whole site every two weeks and now",
    "start": "633980",
    "end": "640519"
  },
  {
    "text": "if I said that at this conference people would be like oh my god you released the site every two weeks so we're doing it",
    "start": "640519",
    "end": "647570"
  },
  {
    "text": "multiple times a day this leads to more solid systems right so it allows us to release smaller units of work it means",
    "start": "647570",
    "end": "653750"
  },
  {
    "text": "the thing that small units that we release are faster to repair easier to diagnose if they go wrong and they're",
    "start": "653750",
    "end": "659329"
  },
  {
    "text": "smaller changes that for us to be able to roll back or to roll forward and it also enables us to do really rapid",
    "start": "659329",
    "end": "665029"
  },
  {
    "text": "experimentation small experiments that are really cheap so we can do a/b testing and a",
    "start": "665029",
    "end": "670460"
  },
  {
    "text": "testing and ABCD testing because it's cheap we are able to rapidly iterate and experiment really quickly and I bring",
    "start": "670460",
    "end": "677120"
  },
  {
    "text": "this up because that's going to be super relevant to the data stuff that I'm going to talk about in a moment but the last sort of pillar that were built on",
    "start": "677120",
    "end": "683750"
  },
  {
    "start": "680000",
    "end": "733000"
  },
  {
    "text": "is the cultural aspects of DevOps and what that means to me is end-to-end ownership for a team of the of the",
    "start": "683750",
    "end": "690500"
  },
  {
    "text": "service so a team owns a service from design through deployment all the way to",
    "start": "690500",
    "end": "695779"
  },
  {
    "text": "retirement and the team is responsible for all aspects of the service right not just the features but also the quality",
    "start": "695779",
    "end": "702230"
  },
  {
    "text": "of the service the performance of the service the operations of the service and the maintenance of the service it's",
    "start": "702230",
    "end": "708770"
  },
  {
    "text": "basically the reification of the Amazon idea of you build that you run it ok so",
    "start": "708770",
    "end": "714800"
  },
  {
    "text": "that's the background and now I want to take the rest of the time to talk about micro services some of the ways that we've approached the problem some of the",
    "start": "714800",
    "end": "721870"
  },
  {
    "text": "things we've learned in migrating are monolithic database into individual services and also some patterns and",
    "start": "721870",
    "end": "728180"
  },
  {
    "text": "practices that you can take back as you're trying to maybe mana migrate your monolith in the same way ok so but first",
    "start": "728180",
    "end": "737320"
  },
  {
    "start": "733000",
    "end": "1014000"
  },
  {
    "text": "it is it can be easy to think that at a conference where there are lots of talks",
    "start": "737320",
    "end": "743630"
  },
  {
    "text": "about micro services that that we would be saying you know you should do micro services for everything that's actually",
    "start": "743630",
    "end": "748940"
  },
  {
    "text": "not true and I'll give you some great examples in fact there are examples from places you've probably heard of so at",
    "start": "748940",
    "end": "754640"
  },
  {
    "text": "eBay depending on how you count it's on it's about fifth-generation of its architecture so it started famously as a",
    "start": "754640",
    "end": "760730"
  },
  {
    "text": "monolithic perl application written over a three-day weekend by the foundry in 1995 so he wanted to play around with",
    "start": "760730",
    "end": "767029"
  },
  {
    "text": "this new web thing and and try it out and he was a devotee of economics and he",
    "start": "767029",
    "end": "773000"
  },
  {
    "text": "was like well I'll build an auction site he totally was not planning on building a business this was like a fun little",
    "start": "773000",
    "end": "778100"
  },
  {
    "text": "hack not hack day like hack three days hack long weekend for himself but it ended up becoming a business and you",
    "start": "778100",
    "end": "784279"
  },
  {
    "text": "know now he gets to live in Hawaii and stuff so that's pretty cool so the next gen the next generation of eBay's",
    "start": "784279",
    "end": "789950"
  },
  {
    "text": "architecture the v2 of it was a monolithic C++ application and that its worst it was about it was 3.4 million",
    "start": "789950",
    "end": "797060"
  },
  {
    "text": "lines of code in a single DLL yeah don't do that",
    "start": "797060",
    "end": "802980"
  },
  {
    "text": "you want to talk you think you have a model desk yeah 3.4 million lines of code in a single DLL oh and they were",
    "start": "802980",
    "end": "809190"
  },
  {
    "text": "hitting the compiler limits on the number of methods per class which is 16",
    "start": "809190",
    "end": "815339"
  },
  {
    "text": "K so seriously don't do that ok the next iteration v3 was a reimplementation in",
    "start": "815339",
    "end": "822510"
  },
  {
    "text": "java and it wasn't micro-services but you can kind of think of it as many applications so take a take a page or a",
    "start": "822510",
    "end": "828810"
  },
  {
    "text": "series of related pages on the site like the buying part the search part the selling part etc and they can make a",
    "start": "828810",
    "end": "835800"
  },
  {
    "text": "java application out of that and then there were a bunch of shared databases underneath and then the neck of the",
    "start": "835800",
    "end": "841680"
  },
  {
    "text": "final iteration of eBay's architecture and where it is today is you could you can basically describe it as a set of",
    "start": "841680",
    "end": "846750"
  },
  {
    "text": "polyglot micro services so twitter has gone through a similar evolution so depending on how you count Twitter's on",
    "start": "846750",
    "end": "852600"
  },
  {
    "text": "about its third generation so it started famously as a monolithic rails application which my friends at Twitter",
    "start": "852600",
    "end": "858120"
  },
  {
    "text": "tell me they call the monorail which that's a clever name the the next iteration after that was breaking out a",
    "start": "858120",
    "end": "864120"
  },
  {
    "text": "bunch of the front-end into JavaScript a bunch of the backend to the into services written in Scala and then now",
    "start": "864120",
    "end": "869370"
  },
  {
    "text": "it's fair to characterize Twitter as a set of polyglot micro services Amazon has gone through a similar evolution so",
    "start": "869370",
    "end": "875730"
  },
  {
    "text": "Amazon isn't so clean on the defect of the divisions between their architecture they went wide relatively early but they",
    "start": "875730",
    "end": "883829"
  },
  {
    "text": "did start out with a monolithic Perl C++ application which actually you can still",
    "start": "883829",
    "end": "889920"
  },
  {
    "text": "see in some of the product detail pages if you go to Amazon if you ever see obidos OB idos in the URL that was the",
    "start": "889920",
    "end": "897779"
  },
  {
    "text": "name of that original monolithic application and of course for search engine optimization like they don't want",
    "start": "897779",
    "end": "903480"
  },
  {
    "text": "to change the pages because of PageRank and yeah anyway so they started to break up their back-end into a",
    "start": "903480",
    "end": "909029"
  },
  {
    "text": "service-oriented architecture lots of services written mostly in Java and Scala and now I think it's fair to",
    "start": "909029",
    "end": "914250"
  },
  {
    "text": "characterize Amazon as a set of polyglot micro services so there are two things to take away from this one is all these",
    "start": "914250",
    "end": "920310"
  },
  {
    "text": "places didn't start out doing micro services but all of them ended up doing it does it make sense so when you're",
    "start": "920310",
    "end": "926670"
  },
  {
    "text": "starting out and you're still trying to figure out whether whether there's a business model and whether you have product market fit and whether you're",
    "start": "926670",
    "end": "931709"
  },
  {
    "text": "delighting your customers this is not the time to build a distributed system later on when you've reached when you've",
    "start": "931709",
    "end": "937759"
  },
  {
    "text": "reached massive scale that is the time okay so now that we've sort of put",
    "start": "937759",
    "end": "943489"
  },
  {
    "text": "microservices in a bit of an architectural evolutionary context what",
    "start": "943489",
    "end": "948559"
  },
  {
    "text": "is a microservice so to me the micro of microservice is not about the number of lines of code that's in it but it's",
    "start": "948559",
    "end": "954919"
  },
  {
    "text": "about the size and scope of the interface so a micro service is single-purpose it has a simple",
    "start": "954919",
    "end": "960350"
  },
  {
    "text": "well-defined interface and it's modular and independent and this if this looks like good just simply good it capsulated",
    "start": "960350",
    "end": "967279"
  },
  {
    "text": "class design you're right that's exactly what it is and if it looks like this is the right way to build services and why did we need to",
    "start": "967279",
    "end": "973850"
  },
  {
    "text": "say micro you're right as far as I'm concerned micro is nothing micro services are nothing more than",
    "start": "973850",
    "end": "979279"
  },
  {
    "text": "service-oriented architecture are done properly but the other element of micro",
    "start": "979279",
    "end": "984319"
  },
  {
    "text": "services which is where a bunch of the initial so uh so are-- architectures",
    "start": "984319",
    "end": "989809"
  },
  {
    "text": "went wrong is a critical element of a successful micro service is that it has isolated persistence in other words the",
    "start": "989809",
    "end": "995989"
  },
  {
    "text": "Micra service the only way to get in and out get the data in and out of a micro services database or whatever",
    "start": "995989",
    "end": "1001749"
  },
  {
    "text": "persistence mechanism it uses is through the published interface does it make sense but that's isolated there's no",
    "start": "1001749",
    "end": "1007839"
  },
  {
    "text": "backdoor way to get in to get into the database from the outside how does that",
    "start": "1007839",
    "end": "1012999"
  },
  {
    "text": "work Randy I'm glad you asked so I'll tell you a little give you a couple of patterns or a couple of approaches to",
    "start": "1012999",
    "end": "1018549"
  },
  {
    "start": "1014000",
    "end": "1093000"
  },
  {
    "text": "how you might be able to do persistence in this way so the approach were number one is that the team that",
    "start": "1018549",
    "end": "1024699"
  },
  {
    "text": "builds and operates the micro service also operates its own data store right at stitch fix we use Postgres as our",
    "start": "1024699",
    "end": "1031089"
  },
  {
    "text": "back-end so we have a bunch of services where the team is essentially maintaining its own own instance of",
    "start": "1031089",
    "end": "1036850"
  },
  {
    "text": "Postgres but you could replace that with you know my sequel or whatever persistence mechanism you like another",
    "start": "1036850",
    "end": "1043688"
  },
  {
    "text": "approach is to use a persistent service right so store to your own tables or your own space within a persistent",
    "start": "1043689",
    "end": "1051700"
  },
  {
    "text": "service operated on your behalf by maybe another team at your company or maybe a third party cloud provider like Amazon",
    "start": "1051700",
    "end": "1058389"
  },
  {
    "text": "dynamo or relational database service or Google spanner or something like that and the key the idea here is it would be",
    "start": "1058389",
    "end": "1064990"
  },
  {
    "text": "operated on your behalf so you don't need to know how to scale into the persistence mechanism but what but",
    "start": "1064990",
    "end": "1070830"
  },
  {
    "text": "the key thing that you want to have a service owner is that your slice of that multi-tenant system is yours and it's",
    "start": "1070830",
    "end": "1077400"
  },
  {
    "text": "isolated to you and nobody else can get in there does this make sense what I'm talking about yeah no it's good all right and again",
    "start": "1077400",
    "end": "1085110"
  },
  {
    "text": "the critical out thing that we're trying to get here is the only external access to my data store of my service is",
    "start": "1085110",
    "end": "1090780"
  },
  {
    "text": "through my published service interface so speaking a bit about interfaces I",
    "start": "1090780",
    "end": "1096270"
  },
  {
    "start": "1093000",
    "end": "1242000"
  },
  {
    "text": "want to make sure I want to talk a little bit about how to evolve interfaces in a micro services world so",
    "start": "1096270",
    "end": "1101970"
  },
  {
    "text": "a lot of people have maybe worried about well how do I version micro services and isn't this really complicated and it",
    "start": "1101970",
    "end": "1109080"
  },
  {
    "text": "takes a little bit of discipline but it's actually not as complicated as you might think but key the key element that",
    "start": "1109080",
    "end": "1114090"
  },
  {
    "text": "you want to you want to have here is you basically as you are developing and evolving the interface of your service",
    "start": "1114090",
    "end": "1119309"
  },
  {
    "text": "you just simply want to make sure that the changes that you make are both backward and forward compatible and the",
    "start": "1119309",
    "end": "1125160"
  },
  {
    "text": "the main goal here is that you want to make sure that you never break your clients code but Randy you tell you but",
    "start": "1125160",
    "end": "1131429"
  },
  {
    "text": "you say to me I sometimes I need to make breaking changes sometimes I need to make iterations on the on the interface",
    "start": "1131429",
    "end": "1136679"
  },
  {
    "text": "great so the way to think about that is something called semantic versioning which probably most most of us have",
    "start": "1136679",
    "end": "1142110"
  },
  {
    "text": "heard about so the semantic versioning is like major version minor version patch major versions are for breaking",
    "start": "1142110",
    "end": "1147570"
  },
  {
    "text": "changes minor versions are for additions to that changes in behavior like adding new methods and patches are for things",
    "start": "1147570",
    "end": "1154770"
  },
  {
    "text": "that don't change behavior at all but are just sort of improvements in bug fixes or performance or something like that so often and if you have a",
    "start": "1154770",
    "end": "1161670"
  },
  {
    "text": "situation where you you want to do breaking changes to your interface you're often maintaining multiple",
    "start": "1161670",
    "end": "1167940"
  },
  {
    "text": "interface versions of your service and that actually might mean maintaining multiple deployments does it make sense",
    "start": "1167940",
    "end": "1173429"
  },
  {
    "text": "so if I want to go from version 10 dot whatever to version 11.10 be maintaining",
    "start": "1173429",
    "end": "1183000"
  },
  {
    "text": "an instance of version 10 and an instance of version 11 and if I do that what I want to have is a pretty explicit",
    "start": "1183000",
    "end": "1189750"
  },
  {
    "text": "deprecation policy with the clients that are using my service in other words I want to I want to go to this client and I say look the new version is version 11",
    "start": "1189750",
    "end": "1196800"
  },
  {
    "text": "I'm going to keep maintaining this for you for I don't know three months six months whatever is the friendly thing to within your company but notice that the",
    "start": "1196800",
    "end": "1204040"
  },
  {
    "text": "DevOps idea that I own and operate the service myself forces me to have a really strong",
    "start": "1204040",
    "end": "1209550"
  },
  {
    "text": "incentive to help my customers wean off of version 10 onto a version 11 does it",
    "start": "1209550",
    "end": "1215500"
  },
  {
    "text": "make sense why I'm saying that I'm maintaining both version as long as there are customers that are clients of mine that are still using version 10 I",
    "start": "1215500",
    "end": "1221920"
  },
  {
    "text": "have to continue to maintain it and continue to operate it but as soon as I can get that last client last a client",
    "start": "1221920",
    "end": "1227650"
  },
  {
    "text": "off onto version 11 then I can shut it down and we're good so I and my team have a really strong incentive to invest",
    "start": "1227650",
    "end": "1233980"
  },
  {
    "text": "in helping customers to move from version 10 to version 11 does this make",
    "start": "1233980",
    "end": "1239560"
  },
  {
    "text": "sense what I'm talking about cool all right so the next thing about data and micro services are sorry the",
    "start": "1239560",
    "end": "1246010"
  },
  {
    "start": "1242000",
    "end": "1427000"
  },
  {
    "text": "next thing is about extracting micro services from a monolith so at stitch fix we build most of our applications in",
    "start": "1246010",
    "end": "1252760"
  },
  {
    "text": "rails and we have a bunch of back-end services and go so rails really wants you to build a",
    "start": "1252760",
    "end": "1258070"
  },
  {
    "text": "monolithic application and thankfully we avoided that temptation so we have about 40 different applications for different",
    "start": "1258070",
    "end": "1263920"
  },
  {
    "text": "areas of our business and different different functions of people in the different areas but we did but our",
    "start": "1263920",
    "end": "1270010"
  },
  {
    "text": "version of the monolith problem is we deal but we did build a monolithic shared database so I'm not sure you can",
    "start": "1270010",
    "end": "1275770"
  },
  {
    "text": "know I guess you can see better than I can see but that's basically it has all the interesting entities of our system right so the shared database that stitch",
    "start": "1275770",
    "end": "1282700"
  },
  {
    "text": "fix has information about clients it has information about items shipments which are those fixes or boxes that we send",
    "start": "1282700",
    "end": "1289270"
  },
  {
    "text": "out it has information about the metadata information about the styles and SKUs that we sell and have in our",
    "start": "1289270",
    "end": "1295270"
  },
  {
    "text": "inventory it has information about our warehouses etc etc etc and so all the different you know all the 40 different",
    "start": "1295270",
    "end": "1301960"
  },
  {
    "text": "applications more or less are using information in this shared database obviously this is a single point of",
    "start": "1301960",
    "end": "1307330"
  },
  {
    "text": "failure this is a single performance bottleneck it's kind of a challenge as we go forward to being able to move",
    "start": "1307330",
    "end": "1313060"
  },
  {
    "text": "really fast in parallel and get the real benefits of those small teams the",
    "start": "1313060",
    "end": "1318430"
  },
  {
    "text": "continuous delivery etc this is the bottleneck that that slows us down so we're going to try to get rid of it and",
    "start": "1318430",
    "end": "1325060"
  },
  {
    "text": "we'll talk through the pattern of how we're approaching that so the goal here is to decouple applications and services",
    "start": "1325060",
    "end": "1330160"
  },
  {
    "text": "from the shared database so I'll take a little bit smaller example like let's imagine just so that there won't be so many boxes and lines on the",
    "start": "1330160",
    "end": "1336280"
  },
  {
    "text": "screen so let's imagine we have two applications and three tables in the database so the first step is that we",
    "start": "1336280",
    "end": "1342070"
  },
  {
    "text": "want to create a service for let's say clients right so clients were a thing that we have in a table in the shared",
    "start": "1342070",
    "end": "1347920"
  },
  {
    "text": "database so first we create a client service then we have the applications",
    "start": "1347920",
    "end": "1353110"
  },
  {
    "text": "that were that used to be directly talking to the table now talk to the service and now we extract that that",
    "start": "1353110",
    "end": "1358780"
  },
  {
    "text": "table from the shared database and now now we have a standalone service that's not dependent on the shared thing and",
    "start": "1358780",
    "end": "1366520"
  },
  {
    "text": "now we just keep doing that over and over again so we rinse and repeat as we like to say in America so we create an",
    "start": "1366520",
    "end": "1372880"
  },
  {
    "text": "item service on top of the core items table we create a style service on top of the SKU table and now these are our",
    "start": "1372880",
    "end": "1379840"
  },
  {
    "text": "new micro services right so we can now draw boundaries these are you know the real extent of the micro service is this",
    "start": "1379840",
    "end": "1386650"
  },
  {
    "text": "interface boundary that surrounds the application sort of business logic a part of the service and the database",
    "start": "1386650",
    "end": "1392320"
  },
  {
    "text": "does this make sense simple steps now I showed you that in like whatever one",
    "start": "1392320",
    "end": "1398620"
  },
  {
    "text": "minute and it might it might have you might have thought that I was making it seem like it was easy it's not at all",
    "start": "1398620",
    "end": "1403929"
  },
  {
    "text": "easy right what's hard is uncut encase",
    "start": "1403929",
    "end": "1412059"
  },
  {
    "text": "transactions that are dealing with those individual tables so there's actually quite a lot of work associated with this but once you have sort of decoupled it",
    "start": "1412059",
    "end": "1419470"
  },
  {
    "text": "you kind of you can follow through this this pattern or this sort of a pipeline",
    "start": "1419470",
    "end": "1424870"
  },
  {
    "text": "of work that I just thought I just laid out cool ok so now I want to talk about",
    "start": "1424870",
    "end": "1430660"
  },
  {
    "start": "1427000",
    "end": "1708000"
  },
  {
    "text": "some ways of dealing with data in microseconds that we have found to be",
    "start": "1430660",
    "end": "1435820"
  },
  {
    "text": "really effective at stitch fix and things that also we have done at Google in the past as well ok so one thing is",
    "start": "1435820",
    "end": "1441820"
  },
  {
    "text": "how do we deal with shared data right so in our in our monolithic database there are a bunch of tables that are used in",
    "start": "1441820",
    "end": "1447730"
  },
  {
    "text": "lots of different queries and in lots of different applications and how do we deal with that so the problem here is",
    "start": "1447730",
    "end": "1452770"
  },
  {
    "text": "that the monolithic database makes it really easy to get access to the shared data right I can just join with it in a",
    "start": "1452770",
    "end": "1458380"
  },
  {
    "text": "secret in a select statement I can I can query it in applications that are using a database and so the question is where",
    "start": "1458380",
    "end": "1465040"
  },
  {
    "text": "does that share database go in a microservices world and the principle here is that there",
    "start": "1465040",
    "end": "1471020"
  },
  {
    "text": "should be for any piece of data a single system of record within the overall the",
    "start": "1471020",
    "end": "1476090"
  },
  {
    "text": "overall ecosystem so every piece of data is owned by one and only one service okay now that service implementation",
    "start": "1476090",
    "end": "1482450"
  },
  {
    "text": "probably has replication and so on I don't mean a single like machine but I mean a single logical service that's",
    "start": "1482450",
    "end": "1488660"
  },
  {
    "text": "that's the responsible party for that particular piece of data and that service is the canonical system of record for that thing",
    "start": "1488660",
    "end": "1494660"
  },
  {
    "text": "so there's once you know in the ideal micro service ecosystem that we are moving toward at stitch fix there will",
    "start": "1494660",
    "end": "1500600"
  },
  {
    "text": "be a service that owns clients another service that owns items another service that owns orders etc every other copy of",
    "start": "1500600",
    "end": "1508190"
  },
  {
    "text": "that data in our system every other place that we represent a customer or an item or whatever is a read-only",
    "start": "1508190",
    "end": "1514220"
  },
  {
    "text": "non-authoritative cache take a moment to like let that sink in does it make sense",
    "start": "1514220",
    "end": "1519380"
  },
  {
    "text": "there's one place where like I can update it and that's where it actually lives any other place that remembers",
    "start": "1519380",
    "end": "1525950"
  },
  {
    "text": "anything about items is just a cache of that thing so if you keep that in the back of your",
    "start": "1525950",
    "end": "1530990"
  },
  {
    "text": "mind now the the approach is that I'm going to suggest are going to make more sense okay so the first approach is is",
    "start": "1530990",
    "end": "1537440"
  },
  {
    "text": "kind of just lookup synchronously right I want to find information about what's the example here about about customers",
    "start": "1537440",
    "end": "1543770"
  },
  {
    "text": "and so my order service needs information about customers like maybe it needs the address to know where to",
    "start": "1543770",
    "end": "1548810"
  },
  {
    "text": "send the order or something like that and so the idea here is that the customer service is the system record",
    "start": "1548810",
    "end": "1555890"
  },
  {
    "text": "for customer information and the order service synchronously calls in to that service that customer service in real",
    "start": "1555890",
    "end": "1561650"
  },
  {
    "text": "time does it make sense this is pretty simple okay the second approach is leveraging",
    "start": "1561650",
    "end": "1567860"
  },
  {
    "text": "more event-driven techniques like we saw in the keynote yesterday from Martin Fowler",
    "start": "1567860",
    "end": "1573100"
  },
  {
    "text": "so in still the customer service owns customer data but instead of the order",
    "start": "1573100",
    "end": "1579620"
  },
  {
    "text": "service calling in a synchronous way to the customer service maybe the order service needs to do some complicated stuff with the with the customer",
    "start": "1579620",
    "end": "1587420"
  },
  {
    "text": "information maybe and needs to have a cache in order to do that efficiently so",
    "start": "1587420",
    "end": "1592850"
  },
  {
    "text": "let's imagine that the customer service sends events when customers have changed so said in something like customer",
    "start": "1592850",
    "end": "1599090"
  },
  {
    "text": "updated events the order service is listening to those events and the order service then takes that information and cashes it locally",
    "start": "1599090",
    "end": "1605140"
  },
  {
    "text": "and then it can now use it to do it's fancy stuff do this make sense so the pattern when are calling a",
    "start": "1605140",
    "end": "1611080"
  },
  {
    "text": "synchronous event plus a local cache and recognize that if I ever asked the order",
    "start": "1611080",
    "end": "1616450"
  },
  {
    "text": "service about the state of a customer it would be wrong right it would be potentially stale and by the way the",
    "start": "1616450",
    "end": "1621580"
  },
  {
    "text": "order service should never have an interface like I just suggested but but all the information in the order service",
    "start": "1621580",
    "end": "1628090"
  },
  {
    "text": "about customers is potentially slightly stale okay and then approach 3 is for",
    "start": "1628090",
    "end": "1633850"
  },
  {
    "text": "things that for data that's relatively immutable and we have a lot of this at stitch fix right it's sort of immutable",
    "start": "1633850",
    "end": "1639549"
  },
  {
    "text": "read-only metadata like size schemas so that's a thing like numeric sizes for",
    "start": "1639549",
    "end": "1645190"
  },
  {
    "text": "women right size to size for size 6 etc small medium large extra-large you know for other types of sizes that's a size",
    "start": "1645190",
    "end": "1651880"
  },
  {
    "text": "schema and that's the thing that doesn't change very often right it's rare to have some new like extra extra extra",
    "start": "1651880",
    "end": "1657340"
  },
  {
    "text": "small or something like that colors are similar thing for us fabrics the US",
    "start": "1657340",
    "end": "1663130"
  },
  {
    "text": "states right I hope to god there's nobody who implemented a micro service that serves up you know what are the",
    "start": "1663130",
    "end": "1669669"
  },
  {
    "text": "values of the human of the US states but yeah so don't do that so how do we do",
    "start": "1669669",
    "end": "1674860"
  },
  {
    "text": "with that again we use a lot of these application stuff in in Ruby so that's why I have a little you know gem diagram",
    "start": "1674860",
    "end": "1680740"
  },
  {
    "text": "of gem icon there but like if items service needed information about I don't",
    "start": "1680740",
    "end": "1685840"
  },
  {
    "text": "know colors and stuff and then style service needed it and receiving service needed this would just be a shared",
    "start": "1685840",
    "end": "1690909"
  },
  {
    "text": "library this make sense cool ok so that's those are the choices that we",
    "start": "1690909",
    "end": "1697270"
  },
  {
    "text": "have around shared data and what I am not telling you is that one of them is better like we actually use all of those techniques that stitch fixed for various",
    "start": "1697270",
    "end": "1703570"
  },
  {
    "text": "various things it totally depends on the how often the data changes and what the use case is ok so now I want to talk a",
    "start": "1703570",
    "end": "1711039"
  },
  {
    "start": "1708000",
    "end": "1871000"
  },
  {
    "text": "little bit about events and I want to talk about events now because that's going to give us another set of tools to do the next set of patterns that I'm",
    "start": "1711039",
    "end": "1717340"
  },
  {
    "text": "going to talk about afterward so I am a strong believer in the thing that Martin",
    "start": "1717340",
    "end": "1722620"
  },
  {
    "text": "said in his keynote and didn't get a laugh even though he totally should have which is events are a first-class",
    "start": "1722620",
    "end": "1728020"
  },
  {
    "text": "concept construct in in programming and we don't take advantage of it as much as",
    "start": "1728020",
    "end": "1733730"
  },
  {
    "text": "really should so if you ask Wikipedia an event is a significant change in state",
    "start": "1733730",
    "end": "1738920"
  },
  {
    "text": "so it's basically a statement that some interesting thing has happened in our system and it might be that you know",
    "start": "1738920",
    "end": "1744980"
  },
  {
    "text": "when I produce an event it might be that nobody's listening it might be that one consumer is listening and it might be that many consumers are listening but",
    "start": "1744980",
    "end": "1751340"
  },
  {
    "text": "the idea is that the producer produces the event and typically consumers are subscribing to that event and updating",
    "start": "1751340",
    "end": "1756650"
  },
  {
    "text": "themselves or doing something interesting based on the event being propagated I strongly believe that",
    "start": "1756650",
    "end": "1762710"
  },
  {
    "text": "events are the underappreciated you know redheaded stepchild fourth fundamental building block of building big systems",
    "start": "1762710",
    "end": "1769190"
  },
  {
    "text": "right so we all know the three-tier architecture where there's a presentation layer and application or business logic layer and a persistence",
    "start": "1769190",
    "end": "1775550"
  },
  {
    "text": "layer I think we should add to that a first class concept of state changes in",
    "start": "1775550",
    "end": "1780770"
  },
  {
    "text": "the form of events in it and this is intuitive right events represent how the",
    "start": "1780770",
    "end": "1787820"
  },
  {
    "text": "real world actually works right so if you think about finance when Deutsche Bank and Bank of America",
    "start": "1787820",
    "end": "1794840"
  },
  {
    "text": "are trading currencies like they're not doing a distributed transaction right they are they're producing a bunch of",
    "start": "1794840",
    "end": "1800750"
  },
  {
    "text": "events on both sides sort of at each other and then they reconcile at the end of the day I was I was trying to as I",
    "start": "1800750",
    "end": "1807740"
  },
  {
    "text": "was putting this talk together I was wrapping my brain to try to think of what's a really visceral example of",
    "start": "1807740",
    "end": "1812900"
  },
  {
    "text": "events in our own lives well here's one how about the exact the actual software development process so I'm big fan of",
    "start": "1812900",
    "end": "1818900"
  },
  {
    "text": "continuous delivery but raise your hand if every time you press ENTER in your",
    "start": "1818900",
    "end": "1824180"
  },
  {
    "text": "IDE that it gets deployed to production does anybody do that no so because that'd be crazy right that",
    "start": "1824180",
    "end": "1832250"
  },
  {
    "text": "would be totally crazy so when I hear people say it is hard to",
    "start": "1832250",
    "end": "1838100"
  },
  {
    "text": "reason about systems where something happens in one area of the system but it hasn't yet propagated to another and how",
    "start": "1838100",
    "end": "1844460"
  },
  {
    "text": "do I deal with that just think about what you guys do 8 hours 10 hours 12 hours every day does it make sense yeah",
    "start": "1844460",
    "end": "1852830"
  },
  {
    "text": "and anything that you call a workflow that is exactly in a set of events does",
    "start": "1852830",
    "end": "1858050"
  },
  {
    "text": "it make sense a workflow is a thing that I do that produces an event and then there's another thing and another thing",
    "start": "1858050",
    "end": "1863510"
  },
  {
    "text": "in the workflow another thing in the workflow etc okay so I'm using this to use this as a building block as I",
    "start": "1863510",
    "end": "1869150"
  },
  {
    "text": "just said to build some interesting things that we can do with microservices so events in microservices go very very",
    "start": "1869150",
    "end": "1875390"
  },
  {
    "start": "1871000",
    "end": "1926000"
  },
  {
    "text": "well together so just like the synchronous part of our interface events",
    "start": "1875390",
    "end": "1880400"
  },
  {
    "text": "are a first-class part of the interface of a service so a service interface includes the obvious stuff which is like",
    "start": "1880400",
    "end": "1885770"
  },
  {
    "text": "the synchronous request response part of it right so whether it's rest and JSON or G RPC or whatever thrift your request",
    "start": "1885770",
    "end": "1894020"
  },
  {
    "text": "responses like that's the obvious part of the interface but any events that your service produces any events that",
    "start": "1894020",
    "end": "1899870"
  },
  {
    "text": "your service consumes those are also first-class parts of your interface and also any bulk reads and writes that you",
    "start": "1899870",
    "end": "1906200"
  },
  {
    "text": "do into into or out of your persistence mechanism like for ETL purposes or analytics or something like that those",
    "start": "1906200",
    "end": "1911810"
  },
  {
    "text": "are also part of your interface so again I said this before and I'll sort of stadion because it's so important the",
    "start": "1911810",
    "end": "1917570"
  },
  {
    "text": "interface of a service is any mechanism that gets data in and out of a service does it make sense cool okay so now that",
    "start": "1917570",
    "end": "1926510"
  },
  {
    "start": "1926000",
    "end": "2231000"
  },
  {
    "text": "we have micro so now we have events on our micro services now let's put that together and do some fancier stuff so",
    "start": "1926510",
    "end": "1931970"
  },
  {
    "text": "joins right when I have a monolithic database joins are super easy so the",
    "start": "1931970",
    "end": "1937190"
  },
  {
    "text": "problem here is that I get used to that right so I get super all I have to do is edit the from clause in my sequel",
    "start": "1937190",
    "end": "1943640"
  },
  {
    "text": "statement and magically I've joined together a bunch of tables in my and bunch of different entities in my in my",
    "start": "1943640",
    "end": "1949640"
  },
  {
    "text": "system when I split those tables up into separate services this becomes a lot harder so I'm going to give you some",
    "start": "1949640",
    "end": "1955820"
  },
  {
    "text": "techniques to do with it so the first approach is a service that materializes that join or materializes",
    "start": "1955820",
    "end": "1963650"
  },
  {
    "text": "that view for you so what do I mean I'm let's imagine that I want to produce something like an item feedback service",
    "start": "1963650",
    "end": "1971330"
  },
  {
    "text": "how did people at stitch fix feel about items and with the items that we sent to them pieces of clothing and which which",
    "start": "1971330",
    "end": "1978350"
  },
  {
    "text": "people did we send them to and let's imagine we're going to use that for some algorithmic purpose later on so so the",
    "start": "1978350",
    "end": "1985820"
  },
  {
    "text": "way that we would do that is the item service is going to produce events when items are updated or added in the system",
    "start": "1985820",
    "end": "1990950"
  },
  {
    "text": "the order service is going to produce updates and events about orders changing",
    "start": "1990950",
    "end": "1996740"
  },
  {
    "text": "in our system and we're going to be accumulating that in our item Veck service and basically denormalizing",
    "start": "1996740",
    "end": "2002210"
  },
  {
    "text": "the join between items and orders so in this model we're not doing the join in",
    "start": "2002210",
    "end": "2007910"
  },
  {
    "text": "real time at query time we're doing the join we're reifying we are denormalizing",
    "start": "2007910",
    "end": "2014570"
  },
  {
    "text": "the join ahead of time does it kind of conceptually make sense what I'm talking about yeah so the idea is that we're",
    "start": "2014570",
    "end": "2021950"
  },
  {
    "text": "maintaining a denormalized join of items and orders together in our local storage in our own little you know database or",
    "start": "2021950",
    "end": "2027920"
  },
  {
    "text": "whatever for for this service and this you use this technique when you have a",
    "start": "2027920",
    "end": "2033470"
  },
  {
    "text": "really high number of rows on each side so it's called high cardinality and database terms so if I have a lot of",
    "start": "2033470",
    "end": "2039380"
  },
  {
    "text": "items and a lot of orders for those items this is a great great thing to do so if that seems really weird what I",
    "start": "2039380",
    "end": "2044990"
  },
  {
    "text": "just suggested I want you to take a step back and think about that actually there are tons of systems that you use that do",
    "start": "2044990",
    "end": "2050000"
  },
  {
    "text": "this exact technique so almost every no sequel approach approaches things in",
    "start": "2050000",
    "end": "2055460"
  },
  {
    "text": "this way right in relational databases we make it super easy we write",
    "start": "2055460",
    "end": "2060530"
  },
  {
    "text": "individual things and then we reconstruct things together on at query time and foremost most no sequel",
    "start": "2060530",
    "end": "2066050"
  },
  {
    "text": "approaches the way that you do it is you actually compute at write time the queries that you want to run so you",
    "start": "2066050",
    "end": "2072379"
  },
  {
    "text": "can't run arbitrary queries but you but you compute at write time you do the denormalization at that point and that's",
    "start": "2072380",
    "end": "2078500"
  },
  {
    "text": "exactly the technique that I just described another example is the wording that I actually used here so lots of",
    "start": "2078500",
    "end": "2085250"
  },
  {
    "text": "database systems Oracle etc I have a concept of a materialized view right maybe it's really expensive to join",
    "start": "2085250",
    "end": "2090940"
  },
  {
    "text": "items and orders together because there are so many and so what you what you tell the database system to do is like",
    "start": "2090940",
    "end": "2097160"
  },
  {
    "text": "maintain that view for me denormalize all the time and let me query it Korea quickly search engines work this way",
    "start": "2097160",
    "end": "2104210"
  },
  {
    "text": "right so anybody uses elasticsearch has has this tool in their toolbox analytic systems definitely do this right any",
    "start": "2104210",
    "end": "2110810"
  },
  {
    "text": "data warehouse or analytic system uses this technique and actually log aggregators right things where you bring",
    "start": "2110810",
    "end": "2117200"
  },
  {
    "text": "individual logs together that's also a join like this is this this making sense",
    "start": "2117200",
    "end": "2122660"
  },
  {
    "text": "feeling feeling more familiar on this slide maybe than last one okay cool so here's the next technique the next",
    "start": "2122660",
    "end": "2128660"
  },
  {
    "text": "technique is to just simply join at runtime right so join between join in the application or",
    "start": "2128660",
    "end": "2134070"
  },
  {
    "text": "ever client service you're using so let's imagine that here the use case here is I want to show an order history",
    "start": "2134070",
    "end": "2140790"
  },
  {
    "text": "page so I want to show to one of our customers all the orders that they have plus some metadata about themselves like",
    "start": "2140790",
    "end": "2147390"
  },
  {
    "text": "maybe their name or how many boxes we've sent them or something like that so the idea is we're going to first query over",
    "start": "2147390",
    "end": "2155160"
  },
  {
    "text": "to the customer service and get the customer record for you know this particular customer and we're going to",
    "start": "2155160",
    "end": "2160530"
  },
  {
    "text": "query over to the order service and we're going to say find me all the matching orders for this customer right super simple this makes sense yeah and",
    "start": "2160530",
    "end": "2167760"
  },
  {
    "text": "how we would do this in a monolithic database this would just be a join with two tables in the from clause you're all good now we're just doing that joining",
    "start": "2167760",
    "end": "2174120"
  },
  {
    "text": "in the application right we're just simply going one place to get one half of the join another place to get the other half of the join and this",
    "start": "2174120",
    "end": "2180720"
  },
  {
    "text": "technique as distinct from the previous one is best for cases where I have a single customer so a single you know on",
    "start": "2180720",
    "end": "2187050"
  },
  {
    "text": "one side of the join and multiple orders on the other side of the join so in database terms the other last one was M",
    "start": "2187050",
    "end": "2193800"
  },
  {
    "text": "and M to N and this is in 1 to n join this makes sense cool I'm sure this",
    "start": "2193800",
    "end": "2200430"
  },
  {
    "text": "seems pretty familiar to people but if it didn't you do it all the time any web application that goes to one that is",
    "start": "2200430",
    "end": "2206520"
  },
  {
    "text": "like constructing a page out of two different sources of data does this",
    "start": "2206520",
    "end": "2211530"
  },
  {
    "text": "right so if you if you display a page that has anything more than one query typically you're doing a join like this",
    "start": "2211530",
    "end": "2216900"
  },
  {
    "text": "right you're going one place to look up one pipe piece of information one entity and you're going another place to maybe",
    "start": "2216900",
    "end": "2222750"
  },
  {
    "text": "get the detail or look up another entity that that's related this make sense cool",
    "start": "2222750",
    "end": "2229500"
  },
  {
    "text": "all right we're going to step it up one notch so I want to talk about workflows",
    "start": "2229500",
    "end": "2235260"
  },
  {
    "start": "2231000",
    "end": "2405000"
  },
  {
    "text": "and something called sagas so the problem here is transactions write transactions are awesome they are so fun",
    "start": "2235260",
    "end": "2242640"
  },
  {
    "text": "and so easy and so well easy a monolithic database makes transactions",
    "start": "2242640",
    "end": "2248910"
  },
  {
    "text": "across multiple entities trivially easy that's what that's one of the great things about about databases right so if",
    "start": "2248910",
    "end": "2254580"
  },
  {
    "text": "you're using a relational database you get acid transactions I can update a customer record and all of her orders at",
    "start": "2254580",
    "end": "2262650"
  },
  {
    "text": "the same time all in one transaction and it's easy once I have split those",
    "start": "2262650",
    "end": "2267730"
  },
  {
    "text": "tables in two separate services this is really hard so the answer is very much not do a distributed transaction with a",
    "start": "2267730",
    "end": "2273670"
  },
  {
    "text": "two-phase commit please don't do that that that will kill your scalability and be a real performance bottleneck but",
    "start": "2273670",
    "end": "2279820"
  },
  {
    "text": "still you want to have all this thing happen all at once or not at all right that's the a and acids I want to make",
    "start": "2279820",
    "end": "2285430"
  },
  {
    "text": "sure that I upped at the end of the day I update the two entities at the same",
    "start": "2285430",
    "end": "2290800"
  },
  {
    "text": "time or alright or I don't update either them okay so the trick here is that we",
    "start": "2290800",
    "end": "2298359"
  },
  {
    "text": "want to turn that transaction that super easy transaction into a slightly more complicated but scale but more scalable",
    "start": "2298359",
    "end": "2304359"
  },
  {
    "text": "thing called a saga so a saga is a bunch of trent of steps connected by events",
    "start": "2304359",
    "end": "2313000"
  },
  {
    "text": "that are basically a state machine so we're going to model this transaction across multiple entities as a state",
    "start": "2313000",
    "end": "2318430"
  },
  {
    "text": "machine of individually atomic events and once we do one event we're going to do the next part of it we're going to do",
    "start": "2318430",
    "end": "2323980"
  },
  {
    "text": "the next part we're going to do the next part of it okay so the idea is to re-implement this thing as a workflow so",
    "start": "2323980",
    "end": "2329980"
  },
  {
    "text": "let's imagine we originally wanted to update a s and B's and C's all together into single atomic transaction in a",
    "start": "2329980",
    "end": "2335950"
  },
  {
    "text": "distributed microservice world you can't do that in one go but you can at the end of the day at the end of this workflow",
    "start": "2335950",
    "end": "2341830"
  },
  {
    "text": "make it happen or not happen so the idea is you update the a it sends an event that update we're going to update the B",
    "start": "2341830",
    "end": "2348010"
  },
  {
    "text": "that sends an event we're going to update to see that sends an event will update the D you get the rollback by",
    "start": "2348010",
    "end": "2354910"
  },
  {
    "text": "doing what are called compensating transactions or compensating operations in there in the reverse in the reverse",
    "start": "2354910",
    "end": "2360010"
  },
  {
    "text": "so if we had a failure along the way we would send events to kind of back",
    "start": "2360010",
    "end": "2365410"
  },
  {
    "text": "through this chain back the other direction through the state machine and kind of undo the stuff that we need to",
    "start": "2365410",
    "end": "2370750"
  },
  {
    "text": "do right so we remove all the DS that we added or tried to add that then that",
    "start": "2370750",
    "end": "2376720"
  },
  {
    "text": "says events and that's going to remove all the fees and remove all the B's and revolta etc does this at least",
    "start": "2376720",
    "end": "2382480"
  },
  {
    "text": "conceptually make sense yeah it's way more complicated than a database transaction I'm not going to tell you",
    "start": "2382480",
    "end": "2389170"
  },
  {
    "text": "otherwise but it is at least it is at least an existence proof this is a thing",
    "start": "2389170",
    "end": "2394630"
  },
  {
    "text": "that you actually can do this is so this is the way that you can get the kind of",
    "start": "2394630",
    "end": "2399840"
  },
  {
    "text": "transactional characteristics something similar to track transactional characteristics when you're in the micro",
    "start": "2399840",
    "end": "2404980"
  },
  {
    "text": "services world so again I want to bring this back to something that's maybe more",
    "start": "2404980",
    "end": "2410470"
  },
  {
    "start": "2405000",
    "end": "2498000"
  },
  {
    "text": "visceral for people so if you think that no system works the way I just described not true there are actually a ton of",
    "start": "2410470",
    "end": "2417550"
  },
  {
    "text": "systems that work this way and they're really complicated basically anything that you talked about as a workflow works the way that I just described",
    "start": "2417550",
    "end": "2423250"
  },
  {
    "text": "so payment processing right the it starts with you know please take 50",
    "start": "2423250",
    "end": "2429610"
  },
  {
    "text": "dollars out of this customers credit card and put it in our account there are a lot of steps that go into go into that",
    "start": "2429610",
    "end": "2435070"
  },
  {
    "text": "flow those steps are not done in a single immediate atomic database",
    "start": "2435070",
    "end": "2440080"
  },
  {
    "text": "transaction right we do not go across all the different credit card issuers and banks and acquiring stuff and all",
    "start": "2440080",
    "end": "2446950"
  },
  {
    "text": "that kind of stuff that does not happen as a transaction that does happen as a workflow or a series of steps or saga of",
    "start": "2446950",
    "end": "2452740"
  },
  {
    "text": "individual things connected by events and anything that we talk anything we're we talking about approving something",
    "start": "2452740",
    "end": "2458740"
  },
  {
    "text": "like an approval workflow like an expense report maybe in your in your in your company that flows through you",
    "start": "2458740",
    "end": "2465460"
  },
  {
    "text": "needs to be approved by X person then Y person then Z person this is exactly the same thing right and if somebody at the",
    "start": "2465460",
    "end": "2472210"
  },
  {
    "text": "end of the chain or at the highest level of the chain says nope Randy's expenses like that you know that Jazz Club sorry",
    "start": "2472210",
    "end": "2479020"
  },
  {
    "text": "that's not something that we cover more's the pity but okay so that goes back down to the chain and like gets",
    "start": "2479020",
    "end": "2485380"
  },
  {
    "text": "rejected all the way down and maybe if I can convince my boss that no it there actually was a business purpose for my going to the Jazz Club and yeah then",
    "start": "2485380",
    "end": "2492520"
  },
  {
    "text": "maybe you can go back up again does it make sense yeah yeah okay cool so it",
    "start": "2492520",
    "end": "2502030"
  },
  {
    "start": "2498000",
    "end": "2605000"
  },
  {
    "text": "would not be stock would not be complete without at least a nod to serverless right so one of the interesting one of",
    "start": "2502030",
    "end": "2509380"
  },
  {
    "text": "the maybe obvious use cases for service techniques functions of the service is exactly the thing that I just described",
    "start": "2509380",
    "end": "2514960"
  },
  {
    "text": "so an ideal use of functions as a service or what we're calling server lists is this super lightweight product",
    "start": "2514960",
    "end": "2523210"
  },
  {
    "text": "processing that we do in that in that chain of events in one of these sagas",
    "start": "2523210",
    "end": "2528520"
  },
  {
    "text": "right so let's imagine that a does its operation B does a little bit of",
    "start": "2528520",
    "end": "2533590"
  },
  {
    "text": "processing and then you know sends another event she does a little bit of processing etc those are super lightweight logic like",
    "start": "2533590",
    "end": "2541180"
  },
  {
    "text": "those are probably examples of you know ten lines of code twenty lines of code really simple if you get right down to",
    "start": "2541180",
    "end": "2546609"
  },
  {
    "text": "what the logic is they are stateless right they are triggered by an event and then they do their operation and then",
    "start": "2546609",
    "end": "2553029"
  },
  {
    "text": "they produce other events out the other side and and so they're perfect for something like Amazon lambda or Google",
    "start": "2553029",
    "end": "2559630"
  },
  {
    "text": "Cloud functions or something like that this makes sense yeah it is obvious but",
    "start": "2559630",
    "end": "2566020"
  },
  {
    "text": "let's just say out loud Micra services are not the answer to every problem services server list is not the answer",
    "start": "2566020",
    "end": "2571359"
  },
  {
    "text": "to every problem but these are just tools that we have in our toolbox and a healthy company now and in the future is",
    "start": "2571359",
    "end": "2577900"
  },
  {
    "text": "probably going to be combining techniques that use micro services for a bunch of stuff use serverless or",
    "start": "2577900",
    "end": "2583539"
  },
  {
    "text": "functions as a service for a bunch of other stuff it will be possible to do something all in let's say functions in",
    "start": "2583539",
    "end": "2590529"
  },
  {
    "text": "the server list track yesterday there was a great example from one of the presenters about like the built this whole company and its whole elearning",
    "start": "2590529",
    "end": "2596470"
  },
  {
    "text": "system around events that's awesome but the vast majority of systems are going to be a combination between",
    "start": "2596470",
    "end": "2601599"
  },
  {
    "text": "different techniques just like they are today okay so I want to running out of",
    "start": "2601599",
    "end": "2608200"
  },
  {
    "start": "2605000",
    "end": "2644000"
  },
  {
    "text": "time here so I want to just sum up a little bit so again modern software development doing things quickly and effectively in",
    "start": "2608200",
    "end": "2615490"
  },
  {
    "text": "a in a highly data centric environment like we have at stitch fix so for organizations I strongly recommend that",
    "start": "2615490",
    "end": "2621819"
  },
  {
    "text": "the way that we move quickly and efficiently is with small teams with well-defined areas of responsibility in",
    "start": "2621819",
    "end": "2627970"
  },
  {
    "text": "terms of processes and practices test-driven development and continuous delivery in terms of culture a DevOps",
    "start": "2627970",
    "end": "2634539"
  },
  {
    "text": "culture of ownership and you build that you run it and then finally leveraging the tool at least at a certain scale",
    "start": "2634539",
    "end": "2640900"
  },
  {
    "text": "leveraging micro services as your technological approach here so thank you",
    "start": "2640900",
    "end": "2646210"
  },
  {
    "start": "2644000",
    "end": "2699000"
  },
  {
    "text": "very much I would be remiss if I didn't let everybody know that stitch fix is hiring",
    "start": "2646210",
    "end": "2651520"
  },
  {
    "text": "so those 75 engineers we were hoping to grow a bit more you there the link is",
    "start": "2651520",
    "end": "2656859"
  },
  {
    "text": "here we are hiring an application development and data science and platform everywhere we are based in San",
    "start": "2656859",
    "end": "2663880"
  },
  {
    "text": "Francisco but actually more than half of the engineers on my team are remote and they from all over the United States",
    "start": "2663880",
    "end": "2669249"
  },
  {
    "text": "sometimes from their houses sometimes from smaller offices offices that we have in in other parts of the country",
    "start": "2669249",
    "end": "2675309"
  },
  {
    "text": "like Pittsburgh and Austin so feel free to grab me personally you know while I'm",
    "start": "2675309",
    "end": "2680469"
  },
  {
    "text": "here I'll be here for the rest of the day you can tweet at me at Randy shout or connect with me on LinkedIn we'd love",
    "start": "2680469",
    "end": "2687640"
  },
  {
    "text": "to if any of this stuff sounds really interesting you want to learn more about it I'd be happy to talk with you so thank you very much",
    "start": "2687640",
    "end": "2693120"
  },
  {
    "text": "[Applause]",
    "start": "2693120",
    "end": "2700050"
  }
]