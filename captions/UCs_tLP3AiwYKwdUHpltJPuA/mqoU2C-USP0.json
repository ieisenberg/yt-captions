[
  {
    "start": "0",
    "end": "44000"
  },
  {
    "text": "thank you very much so yeah the se4 model uh for those of you who are not familiar with the C4 model it is a way",
    "start": "11519",
    "end": "18640"
  },
  {
    "text": "to solve this problem so historically architecture diagrams have been very very bad like terribly bad uh and I see",
    "start": "18640",
    "end": "26279"
  },
  {
    "text": "these sorts of diagrams on my travels all the time you might be thinking well why aren't people using",
    "start": "26279",
    "end": "31960"
  },
  {
    "text": "uml I've literally heard every possible excuse you can imagine for people not wanting to use uml uh and and of course",
    "start": "31960",
    "end": "38360"
  },
  {
    "text": "all of these things are basically myths and misconceptions there's uh very little truth here so I created the C4",
    "start": "38360",
    "end": "43800"
  },
  {
    "text": "Model A while back you can find more information about uh it's at C4 model.com and C4 model is essentially if",
    "start": "43800",
    "end": "51440"
  },
  {
    "start": "44000",
    "end": "352000"
  },
  {
    "text": "you're going to use boxes and arrows to draw architecture diagrams right that's fine but try to do so with some structure in mind and make sure any",
    "start": "51440",
    "end": "58399"
  },
  {
    "text": "notation you use is so describing that's essentially the key principle behind the C4 model there's a set of abstractions",
    "start": "58399",
    "end": "64960"
  },
  {
    "text": "that sit behind C4 software systems containers components and code so that's our kind of Base building blocks and",
    "start": "64960",
    "end": "71880"
  },
  {
    "text": "then the C4 model is actually named after the set of diagrams so C4 is context containers components and code",
    "start": "71880",
    "end": "79280"
  },
  {
    "text": "and it's four levels of diagrams but that basically allow us to tell different stories to different audiences some of who are technical some of who",
    "start": "79280",
    "end": "84920"
  },
  {
    "text": "are non-technical and the concept here is diagrams as Maps so I live in Jersey and ch Island if you do a Google map search",
    "start": "84920",
    "end": "91720"
  },
  {
    "text": "for Jersey you're going to get that picture it kind of zooms straight in and shows you the interns of Jersey that's",
    "start": "91720",
    "end": "97600"
  },
  {
    "text": "great if you want to know where the airport is and how to get to the town but sometimes it's too much information so you want to be able to",
    "start": "97600",
    "end": "103680"
  },
  {
    "text": "zoom out to get more context on the flip side you can zoom in and eventually drop into Google Street View which is a oneto",
    "start": "103680",
    "end": "109479"
  },
  {
    "text": "one mapping with the real world when the photos were taken and I want to do the same thing with software archetyp to diagrams I want different levels of Zoom",
    "start": "109479",
    "end": "116039"
  },
  {
    "text": "that allow us to tell different stories to different audiences if there are any wly map in the room I",
    "start": "116039",
    "end": "121840"
  },
  {
    "text": "know diagrams are graphs but the analogy doesn't work right graphs and Google",
    "start": "121840",
    "end": "127119"
  },
  {
    "text": "Maps pictures so apologies but sorry not sorry so the top two levels of uh C4 the",
    "start": "127119",
    "end": "132959"
  },
  {
    "text": "system context diagram in order to draw a system context diagram this is a set of questions that you need to ask and",
    "start": "132959",
    "end": "139160"
  },
  {
    "text": "answer so what's the thing we are describing what's the scope of the thing we're describing what features sit",
    "start": "139160",
    "end": "144319"
  },
  {
    "text": "inside what features sit outside who's using the system what types of things they doing and what are these system",
    "start": "144319",
    "end": "149920"
  },
  {
    "text": "integration points answer those questions and you can draw a system context diagram so this is an example",
    "start": "149920",
    "end": "155560"
  },
  {
    "text": "from a workshop the red box here represents the thing that was being designed a couple of different user",
    "start": "155560",
    "end": "161319"
  },
  {
    "text": "types roles actors personas and a bunch of external syst depencies so that's a good example of a handdrawn C4 system",
    "start": "161319",
    "end": "168879"
  },
  {
    "text": "context diagram now we can do the Google Maps pinch the zoom thing drop down to level two we get to The Container diagram I",
    "start": "168879",
    "end": "176480"
  },
  {
    "text": "know unfortunate Clash of naming I'll get that later by container I mean an application or a data store so in order",
    "start": "176480",
    "end": "182760"
  },
  {
    "text": "to draw a container diagram it's a different set of questions what are the major Technology Building Blocks what",
    "start": "182760",
    "end": "188000"
  },
  {
    "text": "are the features and responsibilities of those things and how do they communicate answer those questions and you can draft up a container diagram so now what we've",
    "start": "188000",
    "end": "195360"
  },
  {
    "text": "done we've zoomed into that red box and we can see now that that system is made up of applications and data stores",
    "start": "195360",
    "end": "202519"
  },
  {
    "text": "collaborating at runtime so that's the quick seful in a",
    "start": "202519",
    "end": "208879"
  },
  {
    "text": "nutshell intro so now to some myths and misconceptions and misuses um I've seen this pop up on",
    "start": "208879",
    "end": "216159"
  },
  {
    "text": "the Internet a few times I've only just heard of C4 I guess it's new not really I don't know when I created it bit it",
    "start": "216159",
    "end": "221920"
  },
  {
    "text": "was somewhere around 2007 is so it's been around quite a while",
    "start": "221920",
    "end": "227319"
  },
  {
    "text": "now no it's literally not changed since about 2007 so so the only big addition",
    "start": "227519",
    "end": "233760"
  },
  {
    "text": "to C4 was the addition of deployment views deployment diagrams but the actual Core Concepts of the C4 model and",
    "start": "233760",
    "end": "240000"
  },
  {
    "text": "approach are basically the same as they were all those years ago this is quite an interesting one I",
    "start": "240000",
    "end": "246079"
  },
  {
    "text": "think I saw this pop off on on Reddit of all places recently uh c4's been around for over a decade if it was truly useful",
    "start": "246079",
    "end": "252400"
  },
  {
    "text": "short cor right it would have been replaced it would have replaced uml in most teams now this is interesting",
    "start": "252400",
    "end": "258959"
  },
  {
    "text": "because it has replaced uml in most teams but people were never using uml to",
    "start": "258959",
    "end": "265240"
  },
  {
    "text": "start with so that's that's one side of this equation but the other side of the equation is that C4 actually wasn't",
    "start": "265240",
    "end": "271039"
  },
  {
    "text": "designed to replace uml which sounds",
    "start": "271039",
    "end": "276919"
  },
  {
    "text": "weird why do I say this because I'm trying to bring structure to boxes now as",
    "start": "276919",
    "end": "283280"
  },
  {
    "text": "diagrams so C4 is really a set of abstractions and a set of diagram types",
    "start": "283280",
    "end": "288520"
  },
  {
    "text": "and of course many of the teams who are adopting C4 have never used uml in the past so really this is them moving to a",
    "start": "288520",
    "end": "296400"
  },
  {
    "text": "more structured way of drawing diagrams a more structured way of working I've seen tons of Interest around C4",
    "start": "296400",
    "end": "303120"
  },
  {
    "text": "over the past especially five years actually uh kind of postco it turns out when people were working from home",
    "start": "303120",
    "end": "309360"
  },
  {
    "text": "organizations found it harder to get things done communication was more difficult because we were all behind",
    "start": "309360",
    "end": "315000"
  },
  {
    "text": "Zoom calls and things like this so I've seen many uh organizations many of which are my clients who have adopted se4 as",
    "start": "315000",
    "end": "320919"
  },
  {
    "text": "their kind of standard preferred approach for diagramm it across all of their teams it's also being taught in a whole bunch of academic",
    "start": "320919",
    "end": "327840"
  },
  {
    "text": "establish academic establishments universities and colleges around the world uh so I have a whole bunch who are",
    "start": "327840",
    "end": "333560"
  },
  {
    "text": "using my my tooling for free and my C4 book is actually being used as course material for a bunch of other",
    "start": "333560",
    "end": "339639"
  },
  {
    "text": "universities and stuff as well people ask me why did I reinvent",
    "start": "339639",
    "end": "346800"
  },
  {
    "text": "uml I didn't C4 is this it's a set of",
    "start": "347479",
    "end": "352639"
  },
  {
    "start": "352000",
    "end": "442000"
  },
  {
    "text": "hierarchical abstractions a set of hierarchical diagrams it's notation independent and it's tooling independent",
    "start": "352639",
    "end": "359240"
  },
  {
    "text": "so of course course given that C4 is notation independent I can't be Reinventing uml because uml gives you",
    "start": "359240",
    "end": "365080"
  },
  {
    "text": "via its 800 pages of specification all of that notational stuff it turns out and this is a",
    "start": "365080",
    "end": "371599"
  },
  {
    "text": "slightly controversial but you it turns out that you can use C4 and uml side by",
    "start": "371599",
    "end": "377400"
  },
  {
    "text": "side so you take the C4 abstractions and the C4 diagram types and you use the",
    "start": "377400",
    "end": "382680"
  },
  {
    "text": "richness and semantics of the uml notation so it's entirely possible to do that V via the various extension",
    "start": "382680",
    "end": "388960"
  },
  {
    "text": "mechanisms I don't see people doing this for obvious reasons but it's there if you want",
    "start": "388960",
    "end": "394240"
  },
  {
    "text": "to C4 defines four levels of abstractions four levels of diagrams but I really recommend people only use the",
    "start": "394240",
    "end": "400720"
  },
  {
    "text": "top two levels so this begs a question well why is it called C4 why is it not called C2",
    "start": "400720",
    "end": "406479"
  },
  {
    "text": "or C3 plus other levels and the answer is grounding reality so here are the",
    "start": "406479",
    "end": "413240"
  },
  {
    "text": "abstractions from C4 we can go from the Software System all the way down to the code and back up",
    "start": "413240",
    "end": "419000"
  },
  {
    "text": "again if I presented the top two levels only what you've got now is two kind of abstract levels floating around a code",
    "start": "419000",
    "end": "426440"
  },
  {
    "text": "base somehow so for me this gives me the transpar transparen and traceability",
    "start": "426440",
    "end": "432759"
  },
  {
    "text": "from the top to the bottom and back up again so this is about reflecting reality reducing that model code Gap",
    "start": "432759",
    "end": "438840"
  },
  {
    "text": "that George fex talks about notation there's a a bunch of",
    "start": "438840",
    "end": "444639"
  },
  {
    "start": "442000",
    "end": "601000"
  },
  {
    "text": "misconceptions around notation this one drives me bonkers I said see a bunch of",
    "start": "444639",
    "end": "450039"
  },
  {
    "text": "stuff on the internet people say the blue and gray notation of C4 is boring well guess what folks it's notation",
    "start": "450039",
    "end": "456280"
  },
  {
    "text": "independent other colors are available so fun story for you if you go to the C4",
    "start": "456280",
    "end": "461319"
  },
  {
    "text": "model website you're going to get a bunch of example diagrams and historically all of those example diagrams have been the blue and gray",
    "start": "461319",
    "end": "468080"
  },
  {
    "text": "boxes if you go there today and refresh a bunch of times you'll get different color versions of the same diagrams",
    "start": "468080",
    "end": "474560"
  },
  {
    "text": "because I was utterly Fed Up of people saying blue and gray looks boring I'm like thanks in order to draw some",
    "start": "474560",
    "end": "480520"
  },
  {
    "text": "example diagrams I needed to do some colors I chose blue and gray end of story don't read too much into it uh one",
    "start": "480520",
    "end": "486879"
  },
  {
    "text": "of the other things I I see people say is c4 is unclear because it forces you to put lots of text in the boxes so this",
    "start": "486879",
    "end": "493400"
  },
  {
    "text": "isn't a C4 thing this is really uh a bunch of notational tips surrounding C4",
    "start": "493400",
    "end": "498720"
  },
  {
    "text": "but I think actually the reverse is true so here's an example diagram this is fairly typical what people draw it's",
    "start": "498720",
    "end": "505440"
  },
  {
    "text": "vague it's ambiguous so my recommendation here is add some more words add something about the",
    "start": "505440",
    "end": "511720"
  },
  {
    "text": "responsibilities of the of the of the boxes the types of data that are being stored and I think this gives a nice at",
    "start": "511720",
    "end": "519120"
  },
  {
    "text": "a glance view of what's going on here within this particular solution the trade-off here is yes the",
    "start": "519120",
    "end": "525640"
  },
  {
    "text": "diagrams do look quite cluttered there's lots of text but my",
    "start": "525640",
    "end": "530880"
  },
  {
    "text": "recommendation is have this is your default so have this is your default version in documentation in",
    "start": "530880",
    "end": "536160"
  },
  {
    "text": "presentations etc etc if you need a different version if you you need a simpler version for a presentation just",
    "start": "536160",
    "end": "542120"
  },
  {
    "text": "create a simpler version without all the text again tooling can help here some tooling can just turn it on turn off",
    "start": "542120",
    "end": "547839"
  },
  {
    "text": "other tool you have to copy paste the VIS file and change all the text in the boxes on the same theme uh I've seen a",
    "start": "547839",
    "end": "555720"
  },
  {
    "text": "couple of people say this uh we found the notation to cluttered so we REM we removed part of it and they normally",
    "start": "555720",
    "end": "560880"
  },
  {
    "text": "talk about the metadata what do I mean by the metadata in my C4 diagrams you'll see I add some text in square brackets",
    "start": "560880",
    "end": "568680"
  },
  {
    "text": "this is a container this is a person this is a software system so I'm adding some metadata",
    "start": "568680",
    "end": "574920"
  },
  {
    "text": "visually to say this is exactly the type of abstra abstraction you can see on the",
    "start": "574920",
    "end": "580519"
  },
  {
    "text": "diagram I'm doing this because it removes ambiguity and of course when you remove that",
    "start": "580519",
    "end": "587720"
  },
  {
    "text": "metadata well now it's not clear what a container what a software system so now it's very easy to misinterpret the",
    "start": "587720",
    "end": "594680"
  },
  {
    "text": "diagram so again I'm a big fan of keeping that metadata wherever possible",
    "start": "594680",
    "end": "601200"
  },
  {
    "start": "601000",
    "end": "781000"
  },
  {
    "text": "view points I get this lot this is quite common one uh C4 isn't good at showing",
    "start": "601200",
    "end": "608279"
  },
  {
    "text": "decisions is the correct answer no it's not you're not supposed to show your decisions on architecture diagrams your",
    "start": "608279",
    "end": "614920"
  },
  {
    "text": "architecture diagram show the outcome of the whole decision making process which bakes the question well",
    "start": "614920",
    "end": "621320"
  },
  {
    "text": "how do you record decisions and the answer is architecture decision records so there's a whole bunch of better ways",
    "start": "621320",
    "end": "626839"
  },
  {
    "text": "to start recording decisions uh and my advice would be keep these things separate from your diagrams otherwise",
    "start": "626839",
    "end": "632519"
  },
  {
    "text": "they become very very clut of course if you can link these artifacts then that's even better uh people tell me that C4 omits",
    "start": "632519",
    "end": "640760"
  },
  {
    "text": "the deployment story so partially true I guess C4 is",
    "start": "640760",
    "end": "646000"
  },
  {
    "text": "named after the static structure diagrams and the static structure diagrams do on purpose emit the",
    "start": "646000",
    "end": "652079"
  },
  {
    "text": "deployment story however C4 itself the whole concept Oran it was inspired by uml and Philip kitson's 4 plus1 mod",
    "start": "652079",
    "end": "659839"
  },
  {
    "text": "model both of which of course include deployment aspects so therefore if you",
    "start": "659839",
    "end": "664880"
  },
  {
    "text": "go to the C4 model website you will see some example deployment diagrams on there and my view of a deployment",
    "start": "664880",
    "end": "671320"
  },
  {
    "text": "diagram is we're showing instances of C4 Concepts so typically containers but also could be software systems mapped",
    "start": "671320",
    "end": "677839"
  },
  {
    "text": "onto things in the deployment World infrastructure so you can draw deployment diagrams with C4 Concepts and",
    "start": "677839",
    "end": "684320"
  },
  {
    "text": "you can also draw your typical Cloud architecture diagrams with all the fancy icons if you want to so that's all",
    "start": "684320",
    "end": "689680"
  },
  {
    "text": "completely possible with C4 we don't need C4 because we do DDD",
    "start": "689680",
    "end": "696480"
  },
  {
    "text": "instead what but this literally makes no sense but I've heard a bunch of people say this uh ditto event modeling right",
    "start": "696480",
    "end": "703800"
  },
  {
    "text": "I've got nothing against DDD and I've got nothing against event modeling um but when I see things like this on the internet it just again drives me crazy",
    "start": "703800",
    "end": "711880"
  },
  {
    "text": "it's like these people don't understand what they're saying all of these things are complimentary they're showing orthog",
    "start": "711880",
    "end": "717639"
  },
  {
    "text": "concerns you could do your whole design proc process with DDD and vent modeling and that's going to show you some",
    "start": "717639",
    "end": "723079"
  },
  {
    "text": "aspects of the system ultimately you're going to have a bunch of things running on servers that's what C4 is designed to",
    "start": "723079",
    "end": "728480"
  },
  {
    "text": "show it's designed to show the things on servers and the things inside those things on servers at the different",
    "start": "728480",
    "end": "733959"
  },
  {
    "text": "levels of abstraction of course C4 and time yeah",
    "start": "733959",
    "end": "739839"
  },
  {
    "text": "C4 again is about static structure diagrams but there's nothing stopping you drawing something like a uml sequence diagram of how C4 Concepts",
    "start": "739839",
    "end": "748000"
  },
  {
    "text": "interact at runtime so this is a c uh this is a sequence diagram of containers and components and the diagram you'll",
    "start": "748000",
    "end": "756079"
  },
  {
    "text": "see defined on the C4 website is called a dynamic diagram and it's essentially modeled after the uml collaboration",
    "start": "756079",
    "end": "762120"
  },
  {
    "text": "diagram so it shows you the interaction of things at runtime in this case the signin feature for an internet banking",
    "start": "762120",
    "end": "768320"
  },
  {
    "text": "system and it's using numbered ordered arrows so again all of th all of this stuff is completely",
    "start": "768320",
    "end": "775279"
  },
  {
    "text": "possible right so that's some of the more basic stuff this is going to get more ADV an as we go through",
    "start": "775279",
    "end": "780880"
  },
  {
    "text": "abstractions and naming I know the container is confusing",
    "start": "780880",
    "end": "787880"
  },
  {
    "start": "781000",
    "end": "858000"
  },
  {
    "text": "and I apologize but I still don't have a better name I did get the name",
    "start": "787880",
    "end": "795000"
  },
  {
    "text": "first I know that's completely relevant because dock is a little bit more popular which is sort of awkward so if",
    "start": "795000",
    "end": "801480"
  },
  {
    "text": "you want to if you want to rename the abstractions you are more than welcome to rename the abstractions I don't have",
    "start": "801480",
    "end": "807279"
  },
  {
    "text": "any good suggestions if you do want to rename the abstractions please do not do that so container becomes component and",
    "start": "807279",
    "end": "815279"
  },
  {
    "text": "component becomes subcomponent this is really confusing not just for me but for other people who",
    "start": "815279",
    "end": "821000"
  },
  {
    "text": "have adopted C4 already um in terms of naming and abstractions this has come up a couple",
    "start": "821000",
    "end": "827040"
  },
  {
    "text": "of times in bigger organizations so big organizations have said like oh we've adopted we've adopted the Spotify model",
    "start": "827040",
    "end": "833759"
  },
  {
    "text": "and we have a bunch of tribes and squads who are now modifying shared code and so",
    "start": "833759",
    "end": "838839"
  },
  {
    "text": "when we draw a C4 diagram the Software System represents the squad I'm like",
    "start": "838839",
    "end": "844560"
  },
  {
    "text": "what that makes no sense at all the Software System should be the thing that multiple squads are changing so again",
    "start": "844560",
    "end": "851120"
  },
  {
    "text": "there's a onetoone mapping here with the the thing that's being changed not the",
    "start": "851120",
    "end": "857040"
  },
  {
    "start": "858000",
    "end": "1143000"
  },
  {
    "text": "squads bunch of misconception around C4 being too limiting which I think is kind",
    "start": "859160",
    "end": "864720"
  },
  {
    "text": "of interesting so this popped up uh on this blog post a database is a database debating",
    "start": "864720",
    "end": "872360"
  },
  {
    "text": "whether it is also a container or a component just isn't",
    "start": "872360",
    "end": "877600"
  },
  {
    "text": "worthwhile so the wider context for that quote was uh further up or down in the",
    "start": "877600",
    "end": "883079"
  },
  {
    "text": "same blog post the problem is that systems today have many different kinds of things servers databases virtualized",
    "start": "883079",
    "end": "889680"
  },
  {
    "text": "containers apis etc etc forcing them into one of c4's four levels of",
    "start": "889680",
    "end": "895240"
  },
  {
    "text": "abstraction doesn't really accomplish much and I get what they're trying to say",
    "start": "895240",
    "end": "900639"
  },
  {
    "text": "here they're like our systems are way more complicated why should we try and force things into just four levels of",
    "start": "900639",
    "end": "907600"
  },
  {
    "text": "abstraction what's wrong with having like 10 levels of abstraction or five levels of abstraction the problem here",
    "start": "907600",
    "end": "915519"
  },
  {
    "text": "is words what is a",
    "start": "915519",
    "end": "923040"
  },
  {
    "text": "database a database is a database that's what that blog post said but what what what do we mean by database here",
    "start": "923040",
    "end": "930000"
  },
  {
    "text": "are we talking about a database server or a database schema or a collection of tables I don't know it's a very",
    "start": "930000",
    "end": "937480"
  },
  {
    "text": "ambiguous term isn't it so to put that word in context you might hear people",
    "start": "937480",
    "end": "942600"
  },
  {
    "text": "say microservices shouldn't share a database I'm happy for multiple services",
    "start": "942600",
    "end": "950639"
  },
  {
    "text": "to share a database server instance I'm less happy for multiple microservices to",
    "start": "950639",
    "end": "956680"
  },
  {
    "text": "share a single database scheme so I think we have to get a little bit more precise in the terminology that",
    "start": "956680",
    "end": "962920"
  },
  {
    "text": "we're using here and that's exactly what the whole is this a container or component thing forces you to do it",
    "start": "962920",
    "end": "968959"
  },
  {
    "text": "forces you to think about is this thing Deployable in which case it's a container or is it something that sits",
    "start": "968959",
    "end": "974759"
  },
  {
    "text": "inside a Deployable thing in which case it's a component so I think",
    "start": "974759",
    "end": "979839"
  },
  {
    "text": "actually ironically the power C4 is not the diagrams the diagrams are super",
    "start": "979839",
    "end": "986040"
  },
  {
    "text": "useful because onboarding new developers is easier communication is easier there's you can do threat modeling on",
    "start": "986040",
    "end": "992040"
  },
  {
    "text": "the diagrams there's a bunch of good things you can do with the diagrams as an outcome but the real power of C4 is",
    "start": "992040",
    "end": "997480"
  },
  {
    "text": "not the diagrams it's the set of abstractions it's forcing you to have more precise better conversations to",
    "start": "997480",
    "end": "1004880"
  },
  {
    "text": "better identify what the architectural building blocks are in the systems that we",
    "start": "1004880",
    "end": "1010360"
  },
  {
    "text": "build so that's my point of view others disagree and you'll find a bunch of tooling out there that has um so I have",
    "start": "1010360",
    "end": "1017560"
  },
  {
    "text": "a bunch of tooling called that gives you a way to as diagrams as code basically draft up C4",
    "start": "1017560",
    "end": "1024400"
  },
  {
    "text": "diagrams and it supports software systems containers components there's a bunching tool a bunch of tooling out",
    "start": "1024400",
    "end": "1029918"
  },
  {
    "text": "there that has taken this approach and kind of extended it and allows you to Define models with arbitrary levels of",
    "start": "1029919",
    "end": "1036600"
  },
  {
    "text": "abstraction so the example here is like C4 and that's fine I can see there might",
    "start": "1036600",
    "end": "1042199"
  },
  {
    "text": "be some benefit for doing this but this is the example from the like C4 website",
    "start": "1042199",
    "end": "1049120"
  },
  {
    "text": "so we're defining a model comprised of a service it has two components both of",
    "start": "1049120",
    "end": "1055520"
  },
  {
    "text": "which have subcomponents well they're not called subcomponents they're also called components so you notice we're using the word component here and",
    "start": "1055520",
    "end": "1061679"
  },
  {
    "text": "multiple levels of abstraction I'm confused again this is exactly the problem I was trying to solve with C4 in",
    "start": "1061679",
    "end": "1067760"
  },
  {
    "text": "the first pH what I mean what does component mean if you look up the word component inl it means a modular unit",
    "start": "1067760",
    "end": "1073039"
  },
  {
    "text": "with World find interfaces that is replaceable within its environment",
    "start": "1073039",
    "end": "1079520"
  },
  {
    "text": "environment is many things here isn't it component means part of something bigger so this is the problem if you do start",
    "start": "1079520",
    "end": "1086480"
  },
  {
    "text": "to rename the C4 abstractions if you do want to add more levels of abstraction",
    "start": "1086480",
    "end": "1091520"
  },
  {
    "text": "please make sure you give these things a well defined precise meaning if there's",
    "start": "1091520",
    "end": "1097039"
  },
  {
    "text": "any ambiguity in there we basically get back to the mess we had before and that's the thing you know if we go back",
    "start": "1097039",
    "end": "1103720"
  },
  {
    "text": "in time people drawing ad tooc boxes our diagrams with no abstractions I created",
    "start": "1103720",
    "end": "1108799"
  },
  {
    "text": "C4 to Define some abstractions that I thought were useful and people have said well that's too limiting we want more",
    "start": "1108799",
    "end": "1115799"
  },
  {
    "text": "abstractions and so what they think they've done is they've kind of Taken C4 further to add the ability to have",
    "start": "1115799",
    "end": "1122320"
  },
  {
    "text": "arbitrary levels of abstraction the problem is this isn't a straight line it's a circle because once",
    "start": "1122320",
    "end": "1129840"
  },
  {
    "text": "you start adding additional levels of abstraction you basically get back to the mess you had before if those additional levels of abstraction are not",
    "start": "1129840",
    "end": "1136159"
  },
  {
    "text": "defined clearly so that's my that's my cautionary tale about the that whole side of",
    "start": "1136159",
    "end": "1141919"
  },
  {
    "text": "things um abstraction versus organization so I get a lot of people asking what are my thoughts on modeling",
    "start": "1141919",
    "end": "1148080"
  },
  {
    "start": "1143000",
    "end": "1316000"
  },
  {
    "text": "additional levels of abstraction and additional abstractions themselves so what sort of abstractions are people",
    "start": "1148080",
    "end": "1153480"
  },
  {
    "text": "wanting to Define subsystem so what's a subsystem well it means part of a larger system it's not a",
    "start": "1153480",
    "end": "1160480"
  },
  {
    "text": "particularly well- defined term I don't see it being used anymore it's more of a term from like 20 plus years ago the",
    "start": "1160480",
    "end": "1166880"
  },
  {
    "text": "problem with subsystem is people ultimately want to draw diagrams like this it's like here's a software system",
    "start": "1166880",
    "end": "1172320"
  },
  {
    "text": "there's a customer thing and a order thing and a billing thing I'm like great thanks there's three million lines of",
    "start": "1172320",
    "end": "1178280"
  },
  {
    "text": "code under here that's a complete mess but this is what the subsystem diagram looks like and it all looks beautiful and clean I don't think this is a useful",
    "start": "1178280",
    "end": "1184880"
  },
  {
    "text": "diagram so I'd kind of advise against the whole subsystem thing you see these things on architecture slides uh bounded",
    "start": "1184880",
    "end": "1193440"
  },
  {
    "text": "context this is going to upset some people but I see the same thing happening with bounded context right",
    "start": "1193440",
    "end": "1199200"
  },
  {
    "text": "they're really just using bounded context as a way to kind of group stuff together into subsystems and they use",
    "start": "1199200",
    "end": "1204840"
  },
  {
    "text": "different shapes because DDD but essentially we get like the same type of thing here I apologize I've probably",
    "start": "1204840",
    "end": "1210640"
  },
  {
    "text": "upset a bunch of people now so we'll move we'll move on from that uh layers so architectural layers in particular",
    "start": "1210640",
    "end": "1217760"
  },
  {
    "text": "imagine you have an app which has some web stuff some controllers some services",
    "start": "1217760",
    "end": "1223200"
  },
  {
    "text": "and some repositories like a bog standard um kind of layered architecture",
    "start": "1223200",
    "end": "1230039"
  },
  {
    "text": "I think it's fine but what many people want to do is they want to draw that",
    "start": "1230080",
    "end": "1236320"
  },
  {
    "text": "picture which isn't useful now I've drawn this type of picture myself in documentation and in retrospect it's",
    "start": "1236640",
    "end": "1244000"
  },
  {
    "text": "just not useful it doesn't really tell me anything you might as well just write a bullet list of we have three layers",
    "start": "1244000",
    "end": "1250320"
  },
  {
    "text": "they're called these things done there's not much value having a diagram here I mean this diagram's probably lying to",
    "start": "1250320",
    "end": "1256480"
  },
  {
    "text": "you anyway there's probably a bunch of dependencies that are not shown here for clarity reasons so the whole thing about",
    "start": "1256480",
    "end": "1263240"
  },
  {
    "text": "architectural layers I don't really consider them abstractions I think architectural",
    "start": "1263240",
    "end": "1268720"
  },
  {
    "text": "layers are really more organizational constructs and I think that's the better",
    "start": "1268720",
    "end": "1274760"
  },
  {
    "text": "way to approach some of these types of questions so if I go back to my original diagram I think what I want to do here",
    "start": "1274760",
    "end": "1281559"
  },
  {
    "text": "is I want to say all of the service things live in the service layer and I want to draw a a boundary around those",
    "start": "1281559",
    "end": "1288159"
  },
  {
    "text": "component in this case to say these things live in the service layer similarly at the bottom with the",
    "start": "1288159",
    "end": "1293400"
  },
  {
    "text": "repository layer so I'm using layers here as an organizational construct not a a specific level of",
    "start": "1293400",
    "end": "1299679"
  },
  {
    "text": "abstraction once you start thinking like this you can then of course say well actually those things are coming from a specific jar file and the things at the",
    "start": "1299679",
    "end": "1306000"
  },
  {
    "text": "bottom are coming from a different jar file so you can out superimpose things like jar files deployment unit or",
    "start": "1306000",
    "end": "1311480"
  },
  {
    "text": "modules on top of that same type of diagram message driven architectures",
    "start": "1311480",
    "end": "1318640"
  },
  {
    "start": "1316000",
    "end": "1434000"
  },
  {
    "text": "this is one of the things that always gets people the first time many people draw a message an architecture they'll",
    "start": "1318640",
    "end": "1324320"
  },
  {
    "text": "typically draw that so service based architecture a bunch of services pushing messages into Kafka bunch of services",
    "start": "1324320",
    "end": "1331279"
  },
  {
    "text": "pulling messages out of Kafka this is true it's factual it's",
    "start": "1331279",
    "end": "1336400"
  },
  {
    "text": "accurate you know most message based architectures look like Hub and spoke architectures when you draw them in this way but I think this might be hiding the",
    "start": "1336400",
    "end": "1343960"
  },
  {
    "text": "true story maybe the true story here is really that there's a point too coupling between A and C and B and D via separate",
    "start": "1343960",
    "end": "1351760"
  },
  {
    "text": "cafa topics so what I've done here in the previous example I'm trying to model the Cole CFA",
    "start": "1351760",
    "end": "1357880"
  },
  {
    "text": "broker as a C4 container I don't think that's the correct approach I think the correct approach is to model the",
    "start": "1357880",
    "end": "1364880"
  },
  {
    "text": "individual topics as C4 containers what is a C4 container it's",
    "start": "1364880",
    "end": "1370880"
  },
  {
    "text": "an application or a data store a topic is a data store it's a bucket we put stuff in and pull stuff out we can",
    "start": "1370880",
    "end": "1376240"
  },
  {
    "text": "deploy these buckets these topics onto a single broker all multiple Brokers so I think this makes sense from the kind of",
    "start": "1376240",
    "end": "1381880"
  },
  {
    "text": "C4 perspective you notice all the arrows go left to right you can also reverse",
    "start": "1381880",
    "end": "1387039"
  },
  {
    "text": "the arrows and change the text and I think that still makes sense so I think this approach is better for",
    "start": "1387039",
    "end": "1393400"
  },
  {
    "text": "showing points to point coupling and this approach is potentially better for Pub sub relationships especially when",
    "start": "1393400",
    "end": "1398960"
  },
  {
    "text": "you have one to many because you can show that cfot topic as the thing that provides the manyu you could also in PTP",
    "start": "1398960",
    "end": "1406320"
  },
  {
    "text": "examples do that you could just draw line between the two containers or components and say via Copic X so this",
    "start": "1406320",
    "end": "1414200"
  },
  {
    "text": "is telling like the same story it's visually simpler but the CFA topic is",
    "start": "1414200",
    "end": "1419480"
  },
  {
    "text": "now a bit more hidden it's a bit more implied a bit more implicit some people",
    "start": "1419480",
    "end": "1424520"
  },
  {
    "text": "like this for its visual Simplicity others prefer the more explicit version it's all trade-offs choose one see4",
    "start": "1424520",
    "end": "1432520"
  },
  {
    "text": "works shared libraries shared libraries also throws people um so remember we",
    "start": "1432520",
    "end": "1439080"
  },
  {
    "start": "1434000",
    "end": "1527000"
  },
  {
    "text": "have two apps and there's a shared logging component so we've got a bunch of shared code in a shared Library a",
    "start": "1439080",
    "end": "1445720"
  },
  {
    "text": "shared jar file or shared dll and we're using that code from both apps it's very tempting to draw that",
    "start": "1445720",
    "end": "1453000"
  },
  {
    "text": "type of diagram where we are representing the shared Library as a C4",
    "start": "1453000",
    "end": "1459120"
  },
  {
    "text": "container this is generally not true so in this diagram it looks like the shared",
    "start": "1459120",
    "end": "1464840"
  },
  {
    "text": "library is an application in its own right and we're broadcast passing logging things to that application via",
    "start": "1464840",
    "end": "1472960"
  },
  {
    "text": "some interpress communication link I don't think that's the true thing what we're really doing in most cases is",
    "start": "1472960",
    "end": "1479360"
  },
  {
    "text": "we're copy and pasting that loging component into both applications so I think this diagram is a better",
    "start": "1479360",
    "end": "1486360"
  },
  {
    "text": "representation of that Concept in action so now we can see the logging opponent is actually appearing twice once in each",
    "start": "1486360",
    "end": "1492960"
  },
  {
    "text": "cont in once in each component diagram if you want to kind of highlight that this is a shared component you can",
    "start": "1492960",
    "end": "1498799"
  },
  {
    "text": "do that through notation so here I've said uh the shared components are gray and of course I include that in my",
    "start": "1498799",
    "end": "1504640"
  },
  {
    "text": "diagram key so there's a bunch of different ways you can think about share components if you want to bring back the",
    "start": "1504640",
    "end": "1510200"
  },
  {
    "text": "the module concept the shared Library concept you can just do the same thing as before you know just treat that",
    "start": "1510200",
    "end": "1515520"
  },
  {
    "text": "shared library that boundary that Mo that module as an organizational construct if you had other shared",
    "start": "1515520",
    "end": "1521320"
  },
  {
    "text": "components also coming from that shared library that would be a great way to also show those",
    "start": "1521320",
    "end": "1526639"
  },
  {
    "text": "Concepts micro mic front ends is a bit of a can of worms um if anyone is doing",
    "start": "1526960",
    "end": "1533360"
  },
  {
    "start": "1527000",
    "end": "1993000"
  },
  {
    "text": "microfrontends and they're struggling from a c C4 perspective go look at the um the page on Martin Fowler's website",
    "start": "1533360",
    "end": "1541159"
  },
  {
    "text": "by cam Jackson and specifically take note of the integration approach so is",
    "start": "1541159",
    "end": "1548320"
  },
  {
    "text": "this a bundle of JavaScript code that you are including in your webpage or is",
    "start": "1548320",
    "end": "1553360"
  },
  {
    "text": "this an iframe embed I think the integration approach will drive you down the right route so is this microfun end",
    "start": "1553360",
    "end": "1560600"
  },
  {
    "text": "some containers or is it really just a bunch of components I think for most of the integration approaches it's really",
    "start": "1560600",
    "end": "1567360"
  },
  {
    "text": "just components that are included inside the",
    "start": "1567360",
    "end": "1571640"
  },
  {
    "text": "application this is the fun one microservices this is the one that a lot of people kind of get wrong so first of",
    "start": "1572520",
    "end": "1579000"
  },
  {
    "text": "all before we get into how do I do microservices this quote appeared in a",
    "start": "1579000",
    "end": "1584480"
  },
  {
    "text": "book C4 is more suited to monolithic architectures a does support distributed archtics as well I have been told that",
    "start": "1584480",
    "end": "1592399"
  },
  {
    "text": "this quote is coming out of the second edition of the book I know who wrote this I'm not going to tell you who wrote",
    "start": "1592399",
    "end": "1598640"
  },
  {
    "text": "it the reason this is written in the book is nothing to do with the capabilities to C4 it's really one of",
    "start": "1598640",
    "end": "1605000"
  },
  {
    "text": "scale so the underlying message here is the C4 diagrams don't scale well when",
    "start": "1605000",
    "end": "1610159"
  },
  {
    "text": "you have lots of distributed things I'm going to bust that myth in a second as well so let's go back to microservices I",
    "start": "1610159",
    "end": "1616320"
  },
  {
    "text": "see some people saying this we're modeling microservices as containers with apis and database",
    "start": "1616320",
    "end": "1622360"
  },
  {
    "text": "schemas as components inside those containers that's the wrong way to do",
    "start": "1622360",
    "end": "1628640"
  },
  {
    "text": "this so a C4 container is a as a separately Deployable thing a C4",
    "start": "1628640",
    "end": "1633720"
  },
  {
    "text": "component is not individually Deployable but we have apis and database schemas which are Deployable things being",
    "start": "1633720",
    "end": "1639760"
  },
  {
    "text": "modeled as components which are not Deployable things so there's a mismatch what's happened here is somebody's",
    "start": "1639760",
    "end": "1645120"
  },
  {
    "text": "dropped down too many levels of abstraction and now they kind of stuck so how do you model",
    "start": "1645120",
    "end": "1653240"
  },
  {
    "text": "microservices it depends I think microservices should",
    "start": "1653399",
    "end": "1658960"
  },
  {
    "text": "either be modeled as one of the following three things a software system a container or a grouping of containers",
    "start": "1658960",
    "end": "1666720"
  },
  {
    "text": "now this advice doesn't sound useful yet but bear with me for a second so let's backtrack what is a microservice right",
    "start": "1666720",
    "end": "1672919"
  },
  {
    "text": "we have to answer the what is a microservice question in order to properly answer how do we model microservices",
    "start": "1672919",
    "end": "1678679"
  },
  {
    "text": "so let me let me do this through an example imagine we work for startup we've got no money and we've been asked",
    "start": "1678679",
    "end": "1685120"
  },
  {
    "text": "to build a system that does a bunch of stuff so here is our system context diagram for the thing we are building as",
    "start": "1685120",
    "end": "1692200"
  },
  {
    "text": "a startup we've got some users and we're providing a software system and it's providing a bunch of business",
    "start": "1692200",
    "end": "1697760"
  },
  {
    "text": "capabilities when we zoom into the system boundary because we're a startup we're going to build this thing as a",
    "start": "1697760",
    "end": "1703320"
  },
  {
    "text": "monolithic web application talk into a monolithic database schema so that's the container diagram showing the web app",
    "start": "1703320",
    "end": "1709399"
  },
  {
    "text": "and the database schema right so that's easy no problems at all now we got some more users we got some more value coming",
    "start": "1709399",
    "end": "1716200"
  },
  {
    "text": "in we've got some more money coming in now we can jump to microservices we've got James Lewis in and Sam Newman in and",
    "start": "1716200",
    "end": "1722279"
  },
  {
    "text": "we've gone through the training and we're all a happy place we know what microservices are so what is a microservice so let's go to the page on",
    "start": "1722279",
    "end": "1729159"
  },
  {
    "text": "Martin F on Martin F's website James Lewis in short the microservice architectural style is an approach to",
    "start": "1729159",
    "end": "1736200"
  },
  {
    "text": "developing a single application as a suite of small Services each running etc etc I think this is a great definition",
    "start": "1736200",
    "end": "1744240"
  },
  {
    "text": "there's one change I'm going to make and I'm going to replace application with Software System to bring this back to C4",
    "start": "1744240",
    "end": "1751360"
  },
  {
    "text": "terminology so imagine we now we've now switch from a monolith to a set of",
    "start": "1751360",
    "end": "1757039"
  },
  {
    "text": "microservices our context diagram Remains the Same we have a user we have",
    "start": "1757039",
    "end": "1763799"
  },
  {
    "text": "a system the system is providing a bunch of capabilities that's the same when we zoom into the Container diagram I'm",
    "start": "1763799",
    "end": "1771399"
  },
  {
    "text": "going to say that's now what it looks like so now what we've done is we've converted that monolithic web",
    "start": "1771399",
    "end": "1777320"
  },
  {
    "text": "application and database schema into one service for capabilities a b and c",
    "start": "1777320",
    "end": "1783200"
  },
  {
    "text": "respectively each Services is made up of an API thing and a database schema",
    "start": "1783200",
    "end": "1789039"
  },
  {
    "text": "here now I've used color coding so you can very clearly see there are three services so each Services is a pair of",
    "start": "1789039",
    "end": "1796159"
  },
  {
    "text": "elements if you want to more explicitly say what the service boundaries are",
    "start": "1796159",
    "end": "1801519"
  },
  {
    "text": "again think about using organizational constructs so here I'm drawing a line a",
    "start": "1801519",
    "end": "1808519"
  },
  {
    "text": "boundary around the API and the database schem of pair and saying this pair represents a service this thing",
    "start": "1808519",
    "end": "1815640"
  },
  {
    "text": "represents a microservice so I think this is fine as a single team building a set of",
    "start": "1815640",
    "end": "1820799"
  },
  {
    "text": "microservices I think this is the right approach so this is the model your microservices as a group of containers",
    "start": "1820799",
    "end": "1828480"
  },
  {
    "text": "so we've ticked one of those options off now if you have a microservice that is",
    "start": "1828480",
    "end": "1835159"
  },
  {
    "text": "just one thing so imagine we we add capability D to our Software System and we're going to build it with an AWS",
    "start": "1835159",
    "end": "1841600"
  },
  {
    "text": "Lambda written in Python but there's no data it's completely stateless it's a complete stateless",
    "start": "1841600",
    "end": "1847360"
  },
  {
    "text": "service now we're representing the microservices as a group of containers and also as a container itself because",
    "start": "1847360",
    "end": "1853960"
  },
  {
    "text": "it's only one thing so that's another option ticked off",
    "start": "1853960",
    "end": "1859320"
  },
  {
    "text": "all good so far now imagine we got loads of money coming in and we're scaling really quickly and we're becoming a big",
    "start": "1859320",
    "end": "1865919"
  },
  {
    "text": "Enterprise and now we're going to do the conways law thing so at the moment it's one team building everything but now",
    "start": "1865919",
    "end": "1872080"
  },
  {
    "text": "we're going to do conways law we're going to have different teams owning different Services the world's going to be a happy place lots more integration",
    "start": "1872080",
    "end": "1878440"
  },
  {
    "text": "lots more growth this is now our context",
    "start": "1878440",
    "end": "1883960"
  },
  {
    "text": "diagram so what I've done here is I said right we as a team are still going to build the application the web app but",
    "start": "1883960",
    "end": "1890760"
  },
  {
    "text": "all of the services are going to be farmed out to separate teams that we are now spinning up to take advantage of",
    "start": "1890760",
    "end": "1896960"
  },
  {
    "text": "commor etc etc so we have a team for service a service B service C Service D",
    "start": "1896960",
    "end": "1904159"
  },
  {
    "text": "so my context diagram is now different my container diagram for Software System",
    "start": "1904159",
    "end": "1909960"
  },
  {
    "text": "X is also now different so we have the web application so we're still keeping the monolithic front end but now we're",
    "start": "1909960",
    "end": "1917200"
  },
  {
    "text": "treating those Services as separate software systems another box ticked so",
    "start": "1917200",
    "end": "1923279"
  },
  {
    "text": "in this example we are treating the services as software systems I as a member of Team X now no",
    "start": "1923279",
    "end": "1929799"
  },
  {
    "text": "longer care about the internal implementation details of all over those Services they're owned by different",
    "start": "1929799",
    "end": "1935320"
  },
  {
    "text": "teams I can't see the code anymore I'm just using the API I have a dependency that's what my context and container",
    "start": "1935320",
    "end": "1941360"
  },
  {
    "text": "diagram show so really whether you treat microservices as containers or software",
    "start": "1941360",
    "end": "1946960"
  },
  {
    "text": "systems depends on who's owning them and whether you can see the internal implementation details or",
    "start": "1946960",
    "end": "1952720"
  },
  {
    "text": "not if this organization was behaving themselves and and and being good documentation citizens they would draw a",
    "start": "1952720",
    "end": "1958760"
  },
  {
    "text": "bunch of diagrams for each of the services so this is the context diagram for service a so it focuses on service a",
    "start": "1958760",
    "end": "1965480"
  },
  {
    "text": "and shows our system X as an inbound dependency and when we zoom into the Container diagram we get what we had",
    "start": "1965480",
    "end": "1971679"
  },
  {
    "text": "before so service a is made up of an API thing and a database schema and both",
    "start": "1971679",
    "end": "1977320"
  },
  {
    "text": "those things are are within the system boundary so that's microservices and I",
    "start": "1977320",
    "end": "1983480"
  },
  {
    "text": "think it's relative straight relatively straightforward we still have the scaling thing we still have the C4 is",
    "start": "1983480",
    "end": "1990679"
  },
  {
    "text": "not really suited for showing lots and lots of things so how do you use C4 at",
    "start": "1990679",
    "end": "1996039"
  },
  {
    "start": "1993000",
    "end": "2214000"
  },
  {
    "text": "scale imagine we have a bigger service based architecture in this case we have eight Services again and there's a monic",
    "start": "1996039",
    "end": "2001960"
  },
  {
    "text": "we up at the top of it so same thing every service here is combination of an API thing and a data be a schema",
    "start": "2001960",
    "end": "2008960"
  },
  {
    "text": "thing rather than draw one diagram showing eight Services we could draw eight diagrams focusing on one service",
    "start": "2008960",
    "end": "2015000"
  },
  {
    "text": "each and of course this would allow us to scale much better every time we add a new service we can add a new",
    "start": "2015000",
    "end": "2020240"
  },
  {
    "text": "diagram tooling can help or hinder you here so with the tool like Vio you have",
    "start": "2020240",
    "end": "2025480"
  },
  {
    "text": "to now start copy and pasting things across multiple tabs across multiple worksheets and it just becomes really awkward with my structurer toring which",
    "start": "2025480",
    "end": "2032320"
  },
  {
    "text": "is models as code and and emphasis on models here not diagrams it's very easy to draft up a bit text that basically",
    "start": "2032320",
    "end": "2038760"
  },
  {
    "text": "says create me a container diagram for the software system include the user include service one include its inbound",
    "start": "2038760",
    "end": "2046519"
  },
  {
    "text": "dependencies the the in uh inbound dependencies and the outbound",
    "start": "2046519",
    "end": "2051560"
  },
  {
    "text": "dependencies so the afferent and the eent couplings and we get that picture created for us by the tooling and then",
    "start": "2051560",
    "end": "2058839"
  },
  {
    "text": "we can say do the same for service to and it's literally just the same it's a small bunch of",
    "start": "2058839",
    "end": "2064040"
  },
  {
    "text": "text the code behind this analyzes the model because we are building a model here and it's doing the same thing D for",
    "start": "2064040",
    "end": "2071480"
  },
  {
    "text": "service 3 so this is really nice way again tool independent this is really nice way to slice and dice the model and",
    "start": "2071480",
    "end": "2078240"
  },
  {
    "text": "to give you multiple views on that same model so that's option one about dealing with scale and of course you can apply",
    "start": "2078240",
    "end": "2083560"
  },
  {
    "text": "this to Containers or components uh entirely relevant the tradeoff here with this",
    "start": "2083560",
    "end": "2089760"
  },
  {
    "text": "option is you're now missing the bigger picture we've zoomed in and we're we're",
    "start": "2089760",
    "end": "2094800"
  },
  {
    "text": "taking a small partition view of the world one step at a time and we missed the bigger picture so option two here is",
    "start": "2094800",
    "end": "2101960"
  },
  {
    "text": "to use the same concept and to create a C4 container view but use a different",
    "start": "2101960",
    "end": "2107640"
  },
  {
    "text": "visualization so here we've moved away from like the static boxes and lines diagrams and this so this is interactive",
    "start": "2107640",
    "end": "2113599"
  },
  {
    "text": "is dynamic this is a d3js force directed graph so you can move things around by uh clicking and dragging and this shows",
    "start": "2113599",
    "end": "2120000"
  },
  {
    "text": "you the same information in a much more condensed concise visualization",
    "start": "2120000",
    "end": "2125920"
  },
  {
    "text": "format we can click on things to show nearest neighbors this super useful for",
    "start": "2125920",
    "end": "2130960"
  },
  {
    "text": "exploring a collection of services a collection of software systems in an application landscape in a system",
    "start": "2130960",
    "end": "2136079"
  },
  {
    "text": "landscape or a bunch of components in a monolith there's tool tips you can add you can add additional metadata so",
    "start": "2136079",
    "end": "2141720"
  },
  {
    "text": "there's a bunch of interesting things you can do when you consider this to be a a set of data structures it's a graph",
    "start": "2141720",
    "end": "2149480"
  },
  {
    "text": "and we can slice and dice the graph essentially option three is you take this same data and you stick it in yet",
    "start": "2149480",
    "end": "2156240"
  },
  {
    "text": "another tool so a great tool called igraph and this is an export of that same set of containers and their",
    "start": "2156240",
    "end": "2162400"
  },
  {
    "text": "relationships and again this is nice it this is a bunch of static screenshots but what we have here is a nice",
    "start": "2162400",
    "end": "2168680"
  },
  {
    "text": "interactive UI where we can click around things zoom in zoom out show nearest",
    "start": "2168680",
    "end": "2173839"
  },
  {
    "text": "neighbors so again we can do the same sort of thing so this is why I'm a big fan of the whole kind of models as code",
    "start": "2173839",
    "end": "2179640"
  },
  {
    "text": "approach we craft up a model of our software architecture multiple levels of abstraction and then we can do stuff",
    "start": "2179640",
    "end": "2185839"
  },
  {
    "text": "with it we're software Developers we can write code we can do a whole bunch of interesting things we can Ram this stuff",
    "start": "2185839",
    "end": "2192599"
  },
  {
    "text": "into a neop database and write siher queries to find out what dependencies are we can do static analysis and build",
    "start": "2192599",
    "end": "2198760"
  },
  {
    "text": "our model automatically from scraping information out of our codebase or scraping our AWS configuration for",
    "start": "2198760",
    "end": "2204680"
  },
  {
    "text": "example so there's a whole bunch of really interesting stuff you can do if you consider this is really views onto a",
    "start": "2204680",
    "end": "2210640"
  },
  {
    "text": "bunch of data dependencies to external",
    "start": "2210640",
    "end": "2218280"
  },
  {
    "start": "2214000",
    "end": "2398000"
  },
  {
    "text": "containers so when I'm drawing a container diagram I'm generally recommending just focus on a single",
    "start": "2218280",
    "end": "2224040"
  },
  {
    "text": "Software System and show the containers inside that software",
    "start": "2224040",
    "end": "2229319"
  },
  {
    "text": "system so if I'm building a system called a and my system is made up of a",
    "start": "2230079",
    "end": "2236839"
  },
  {
    "text": "spring boot application talking to a system you folks are building called B this is my container diagram I'm showing",
    "start": "2236839",
    "end": "2243920"
  },
  {
    "text": "you the app in my system boundary with a dependency on your Software System this is my",
    "start": "2243920",
    "end": "2249640"
  },
  {
    "text": "recommendation from your perspective if you you are drawing a C4 diagram of your system B that's your container diagram",
    "start": "2249640",
    "end": "2257599"
  },
  {
    "text": "so inside there you might have a nodejs API container and that's the thing receiving inbound requests from my",
    "start": "2257599",
    "end": "2264640"
  },
  {
    "text": "Software System called a so I think this is the recommended approach from my perspective I can see",
    "start": "2264640",
    "end": "2271599"
  },
  {
    "text": "my containers but not yours and the reverse is true so I don't recommend showing external containers what do I",
    "start": "2271599",
    "end": "2278000"
  },
  {
    "text": "mean by this what I mean by this is drawing that diagram where we see there is a container in system a talking to a",
    "start": "2278000",
    "end": "2285079"
  },
  {
    "text": "specific containant system B if you are one team and you're",
    "start": "2285079",
    "end": "2291160"
  },
  {
    "text": "building both I might let you get away with this if you are multiple teams and you know",
    "start": "2291160",
    "end": "2298280"
  },
  {
    "text": "that you're calling something else in someone else's system and that's a diagram you wants to draw I would kind of say no don't do",
    "start": "2298280",
    "end": "2305880"
  },
  {
    "text": "that why it it shows me that you know the",
    "start": "2305880",
    "end": "2312119"
  },
  {
    "text": "internal implementation details of someone else's",
    "start": "2312119",
    "end": "2316680"
  },
  {
    "text": "system which makes your diagrams volatile and it's a form of",
    "start": "2317680",
    "end": "2323440"
  },
  {
    "text": "coupling I'm coupled to the information when I see this I often",
    "start": "2323440",
    "end": "2330760"
  },
  {
    "text": "question the team boundaries you perhaps those two teams really should be one team so there's",
    "start": "2330760",
    "end": "2337920"
  },
  {
    "text": "some interesting uh feedback loops here potentially as with everything there are",
    "start": "2337920",
    "end": "2344760"
  },
  {
    "text": "always some exceptions to the rule uh shared databases I know we're",
    "start": "2344760",
    "end": "2350240"
  },
  {
    "text": "not supposed to do this anymore but historically we've typically Integrated Systems via go via like a shared",
    "start": "2350240",
    "end": "2356200"
  },
  {
    "text": "database schema so in that example if if my application was storing information or reading information from a shared",
    "start": "2356200",
    "end": "2362599"
  },
  {
    "text": "database schema and so was your system I think we modeled that shared database",
    "start": "2362599",
    "end": "2368400"
  },
  {
    "text": "schema as being in its own system boundary and we want to show that specific",
    "start": "2368400",
    "end": "2374400"
  },
  {
    "text": "coupling because this is a it's smell it's an anti pattern and really this is something we want to refact and move",
    "start": "2374400",
    "end": "2380800"
  },
  {
    "text": "away from so this is one of the few examples where I think showing multiple external containers actually makes some",
    "start": "2380800",
    "end": "2386920"
  },
  {
    "text": "sense because it's highlighting that there is an issue here so those are pretty much all of the",
    "start": "2386920",
    "end": "2394560"
  },
  {
    "text": "uh myths misconceptions misuses I I generally have seen the takeaway from the whole thing is is",
    "start": "2394560",
    "end": "2400079"
  },
  {
    "start": "2398000",
    "end": "2422000"
  },
  {
    "text": "remember this is what C4 is it's a set of hierarchical abstractions software systems containers components and code",
    "start": "2400079",
    "end": "2406640"
  },
  {
    "text": "it's a set of hierarchical diagrams system contexts containers components and code it's notation independent so",
    "start": "2406640",
    "end": "2413800"
  },
  {
    "text": "blue and gray is boring but other colors are available and it's also tooling independent and there's a whole bunch of tooling you'll find now listed on the C4",
    "start": "2413800",
    "end": "2420079"
  },
  {
    "text": "model website so thank you very much and uh happy to take any questions",
    "start": "2420079",
    "end": "2427760"
  }
]