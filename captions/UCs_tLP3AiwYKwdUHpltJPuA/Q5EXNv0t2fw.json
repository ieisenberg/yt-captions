[
  {
    "start": "0",
    "end": "205000"
  },
  {
    "text": "[Music]",
    "start": "3550",
    "end": "6700"
  },
  {
    "text": "good morning and thank you for coming",
    "start": "12320",
    "end": "17580"
  },
  {
    "text": "we're gonna talk about micro-services we're gonna talk about Kafka we're going to talk about event-driven architectures",
    "start": "17580",
    "end": "23070"
  },
  {
    "text": "today these are things that I get excited about this particular talk has",
    "start": "23070",
    "end": "30080"
  },
  {
    "text": "what are right now to me some of the most exciting architectural ideas in it",
    "start": "30080",
    "end": "36870"
  },
  {
    "text": "like some of the coolest things I see going on in the world related to event-driven systems and just kind of",
    "start": "36870",
    "end": "43199"
  },
  {
    "text": "related to the way we're writing programs these days so it's a thing I get excited about the basic structure of",
    "start": "43199",
    "end": "50519"
  },
  {
    "text": "the talk is I would like to kind of lay out and sort of remind everyone what a",
    "start": "50519",
    "end": "56159"
  },
  {
    "text": "terrible idea micro services are and why we have done this to ourselves and think",
    "start": "56159",
    "end": "63539"
  },
  {
    "text": "through some of the bad solutions we have to all the problems that we've made",
    "start": "63539",
    "end": "68750"
  },
  {
    "text": "and then I'd like to talk a little bit about Kafka just as a platform just sort",
    "start": "68750",
    "end": "73800"
  },
  {
    "text": "of the basics of things and then take with that you know there's kind of broad",
    "start": "73800",
    "end": "79200"
  },
  {
    "text": "perspective on Kafka take that and apply it to all of the terribleness the idea is you should be like 2/3 of the way",
    "start": "79200",
    "end": "87630"
  },
  {
    "text": "through any good talk just in complete despair right and that's the idea you",
    "start": "87630",
    "end": "92640"
  },
  {
    "text": "just want to be low and then you know we figure out how to fix everything and everybody leaves happy so that's that's always the plan but so we're gonna do I",
    "start": "92640",
    "end": "101040"
  },
  {
    "text": "always like to say this is my first time properly in Denmark I have transited",
    "start": "101040",
    "end": "107640"
  },
  {
    "text": "from the airport on the train up to Sweden before barely counts you know but good to be here and who who is local I'm",
    "start": "107640",
    "end": "115770"
  },
  {
    "text": "just curious who's who's from this country okay so oh hi everybody most of you yeah I was checking in to the hotel",
    "start": "115770",
    "end": "123180"
  },
  {
    "text": "here yesterday there's a funny little accent thing that happened I was",
    "start": "123180",
    "end": "129539"
  },
  {
    "text": "checking in I gave the lady my passport and what I heard her ask is are you",
    "start": "129539",
    "end": "134700"
  },
  {
    "text": "married and I said yes I am thank you for asking 29 years this last summer",
    "start": "134700",
    "end": "141030"
  },
  {
    "text": "and then she said can I have your number I'm like well I'm American and maybe we",
    "start": "141030",
    "end": "148080"
  },
  {
    "text": "just think about these things differently I don't know but like probably you can't",
    "start": "148080",
    "end": "153209"
  },
  {
    "text": "turns out she was saying Marriott are you like a Marriott bon voyage was",
    "start": "153209",
    "end": "159780"
  },
  {
    "text": "saying Marriott just sounded like married and I just go with the jet lag and I haven't been sleeping so well and everything so I'll accept a lot of",
    "start": "159780",
    "end": "165690"
  },
  {
    "text": "responsibility for that she wanted my bond voice oh it was totally on the up and up and I of course explained all this oh I",
    "start": "165690",
    "end": "174720"
  },
  {
    "text": "thought you meant you said and that was super awkward but anything it was it was",
    "start": "174720",
    "end": "180989"
  },
  {
    "text": "a nice nice nice nice first visit to Denmark glad to be here alright let's",
    "start": "180989",
    "end": "186900"
  },
  {
    "text": "talk about this onions we're gonna get back to the onions later don't worry about that we're not gonna I forgot to really say anything about why",
    "start": "186900",
    "end": "193350"
  },
  {
    "text": "there's an onion there but there's a very very very important idea that we have to get a lot of stuff on the table",
    "start": "193350",
    "end": "198930"
  },
  {
    "text": "before that idea I think can land and it does have to do with onions so don't worry I remember I started my career as",
    "start": "198930",
    "end": "209370"
  },
  {
    "start": "205000",
    "end": "470000"
  },
  {
    "text": "a as a firmware developer actually which is really really fun and that's a thing",
    "start": "209370",
    "end": "215010"
  },
  {
    "text": "again you know now that hardware hacking is really in the last 10 years has become a reasonable hobby you know",
    "start": "215010",
    "end": "222329"
  },
  {
    "text": "everybody can be a firmware developer but that's how I started and then I I after a few years of that became a",
    "start": "222329",
    "end": "229220"
  },
  {
    "text": "didn't really use the word then the full stack Java web developer and I absolutely grew up in the era of the",
    "start": "229220",
    "end": "237630"
  },
  {
    "text": "monolith right you just wrote a program and it had a database it was good and it",
    "start": "237630",
    "end": "242820"
  },
  {
    "text": "was easy and for fairly small programs that's actually a very successful",
    "start": "242820",
    "end": "247970"
  },
  {
    "text": "strategy it's a good thing to do but for big programs monoliths get hard to think",
    "start": "247970",
    "end": "255480"
  },
  {
    "text": "about right if you have this big giant program it's too big to fit the whole",
    "start": "255480",
    "end": "261510"
  },
  {
    "text": "thing into your head this is one of the things as a software engineer that we have to realize is that we are limited",
    "start": "261510",
    "end": "267600"
  },
  {
    "text": "there's this philosophical term I like our noetic equipment or mines right what",
    "start": "267600",
    "end": "272940"
  },
  {
    "text": "you have to be able to think is only so big and why we tend to be as a community a little smarter than the",
    "start": "272940",
    "end": "279010"
  },
  {
    "text": "average bear but you're not that smart and you can't get that big of a program",
    "start": "279010",
    "end": "284110"
  },
  {
    "text": "in your head and so one of the problems is programs are so big that you just couldn't reason about the whole thing",
    "start": "284110",
    "end": "289990"
  },
  {
    "text": "anymore and you know we're not animals so we we structure code you know when",
    "start": "289990",
    "end": "296860"
  },
  {
    "text": "you build monoliths you structure it nicely and there's a module here and a module there and and you know maybe you",
    "start": "296860",
    "end": "303130"
  },
  {
    "text": "specialize in this module and somebody else specialized it has it has some internal structure to it but you can't fit the whole thing in your head and",
    "start": "303130",
    "end": "310320"
  },
  {
    "text": "also we found that they tended to just be hard to change once they got really big maybe the deployment took a long",
    "start": "310320",
    "end": "317680"
  },
  {
    "text": "time and tests integration tests took a day a half to run or something like that",
    "start": "317680",
    "end": "322840"
  },
  {
    "text": "and so there wasn't really you know sort of coming into ten years ago and the idea of continuous deployment and",
    "start": "322840",
    "end": "328660"
  },
  {
    "text": "delivery began to become in vogue at least as an elite practice wasn't really accessible for big giant programs right",
    "start": "328660",
    "end": "334060"
  },
  {
    "text": "so we broke our great nice simple programs up into little pieces and the",
    "start": "334060",
    "end": "342970"
  },
  {
    "text": "big problem there is that you are now suddenly a distributed systems developer",
    "start": "342970",
    "end": "348460"
  },
  {
    "text": "and that's maybe there's a lot of bad life choices you could make that's a that's a that's high on the list of bad",
    "start": "348460",
    "end": "357340"
  },
  {
    "text": "things that you ought not to do and just to illustrate like one of the obvious problems you know we have those modules",
    "start": "357340",
    "end": "363820"
  },
  {
    "text": "you have this modular monolith like you're not an idiot it's gonna be modular we we kind of make straw man out",
    "start": "363820",
    "end": "370780"
  },
  {
    "text": "of out of model it's like undifferentiated morass of code no it's not there's pieces and those pieces call",
    "start": "370780",
    "end": "376510"
  },
  {
    "text": "each other and for one module to call another module how does that work well there's the JVM and blah blah blah but",
    "start": "376510",
    "end": "383110"
  },
  {
    "text": "at the end of the day there's literally Hardware structures on a microprocessor",
    "start": "383110",
    "end": "388750"
  },
  {
    "text": "that optimized that there are machine instructions make that work very very fast and it's incredibly reliable like",
    "start": "388750",
    "end": "394390"
  },
  {
    "text": "if a call and return instruction don't work that's tantamount to the computer",
    "start": "394390",
    "end": "399610"
  },
  {
    "text": "just being broken that's not a failure scenario that you ever ever think about and it's so fast you don't think about",
    "start": "399610",
    "end": "405220"
  },
  {
    "text": "how long that takes but now we've broken this model up into pieces we have get those and they're running on separate computers you're distributed",
    "start": "405220",
    "end": "410920"
  },
  {
    "text": "systems developer your mom and dad told you not to but you did it anyway and they have to they have to be connected",
    "start": "410920",
    "end": "418090"
  },
  {
    "text": "back with each other again right to reintegrate all of these separate",
    "start": "418090",
    "end": "423130"
  },
  {
    "text": "programs that are running on these separate unsynchronized computers that are failing independently and all that kind of stuff so there are I will just",
    "start": "423130",
    "end": "431530"
  },
  {
    "text": "claim no good ways to integrate micro services again is a terrible thing broken your program up into lots of",
    "start": "431530",
    "end": "437500"
  },
  {
    "text": "programs and there isn't really anything good about that and clearly we are",
    "start": "437500",
    "end": "445300"
  },
  {
    "text": "accessing good effects right there there's like reason as we do this it's not just rank stupidity all kinds of",
    "start": "445300",
    "end": "452080"
  },
  {
    "text": "great reasons I just want to highlight that this is not all upside it's a new set of trade-offs just like anything",
    "start": "452080",
    "end": "458140"
  },
  {
    "text": "else we do okay so there are no good ways to reintegrate those micro services alternatively there are no good ways to",
    "start": "458140",
    "end": "463960"
  },
  {
    "text": "integrate micro services and maybe we can take a look at what some of those",
    "start": "463960",
    "end": "469030"
  },
  {
    "text": "are so we all this is just gonna thing it's there's potential for some",
    "start": "469030",
    "end": "475090"
  },
  {
    "start": "470000",
    "end": "585000"
  },
  {
    "text": "hilarious physical comedy just gonna leave that there some tension okay",
    "start": "475090",
    "end": "481750"
  },
  {
    "text": "integrating through the database like we all know not to do this I was giving a talk like this at a bank in Australia it",
    "start": "481750",
    "end": "490780"
  },
  {
    "text": "was last week so the struggle is real when it comes to time zones but and I",
    "start": "490780",
    "end": "495880"
  },
  {
    "text": "said something like oh you know we all know not to do this he's like yeah we do this so never know you never know you just",
    "start": "495880",
    "end": "503170"
  },
  {
    "text": "kind of have to lean into it at that point so this is a little bit of a strawman most teams aren't doing this",
    "start": "503170",
    "end": "509560"
  },
  {
    "text": "this was an early solution because the database was there right you already had a database and it seemed obvious you",
    "start": "509560",
    "end": "514900"
  },
  {
    "text": "just exchange data through the database the problem is that this caused it was",
    "start": "514900",
    "end": "520510"
  },
  {
    "text": "an overly rigid way of coupling schema from one our types from one service to another and it made it so that typically",
    "start": "520510",
    "end": "527680"
  },
  {
    "text": "these teams had to deploy all of their micro services together you version one and you version you know maybe 90% of",
    "start": "527680",
    "end": "533890"
  },
  {
    "text": "the rest of them and deploy them carefully in a particular order so it's all of the pain of the distributed",
    "start": "533890",
    "end": "539230"
  },
  {
    "text": "system and none of the benefits of evolvable pieces and decoupled pieces",
    "start": "539230",
    "end": "544670"
  },
  {
    "text": "and things like that so it was pretty pretty bad it violated this thing that the domain-driven design folks call the bounded context now databases are not",
    "start": "544670",
    "end": "552080"
  },
  {
    "text": "bad and I really want you to hear me saying that because I'm I'm you know",
    "start": "552080",
    "end": "558410"
  },
  {
    "text": "databases in the title and maybe from the title and the abstract you are thinking about where I'm going with this",
    "start": "558410",
    "end": "563890"
  },
  {
    "text": "databases are a part of our lives and they're not gonna stop there good things to use inside services you need them",
    "start": "563890",
    "end": "571480"
  },
  {
    "text": "Kafka is not one of them I just want to be clear about that but databases are",
    "start": "571480",
    "end": "576710"
  },
  {
    "text": "not good for for negotiating change they're bad at that they're bad for sharing data between services I think we",
    "start": "576710",
    "end": "583010"
  },
  {
    "text": "as an industry have discovered that we can move on and in fact we have moved on when it comes to integrative my",
    "start": "583010",
    "end": "588320"
  },
  {
    "start": "585000",
    "end": "848000"
  },
  {
    "text": "integrating micro services to this synchronous RPC based mechanism this is",
    "start": "588320",
    "end": "595550"
  },
  {
    "text": "what most people think of by default this is this is how your services talk is via RPC so the database integration",
    "start": "595550",
    "end": "604250"
  },
  {
    "text": "problems are largely ameliorated you do have still schema contracts between",
    "start": "604250",
    "end": "610130"
  },
  {
    "text": "services a service needs to know what it's accepting and somebody who's calling it needs to know what to give it and what to expect back but the ability",
    "start": "610130",
    "end": "618470"
  },
  {
    "text": "to evolve those independently is a little easier so you can have these interfaces be a little squishier than a",
    "start": "618470",
    "end": "624140"
  },
  {
    "text": "database table also and I think this is why our PC has been so successful in",
    "start": "624140",
    "end": "630650"
  },
  {
    "text": "terms of so broadly adopt it I don't really want to call it successful but I want to call it broadly adopted is it's",
    "start": "630650",
    "end": "636650"
  },
  {
    "text": "just natural given if you're if you're using an imperative language and if you're a functional programming person",
    "start": "636650",
    "end": "642710"
  },
  {
    "text": "this does not apply to you by the way if you're a functional programming person you already think most things that",
    "start": "642710",
    "end": "647960"
  },
  {
    "text": "people say don't apply to you but you know you are if you're like me you know",
    "start": "647960",
    "end": "658610"
  },
  {
    "text": "basically an imperative person who's kind of toyed toyed with the functional things then our PC based integration",
    "start": "658610",
    "end": "664430"
  },
  {
    "text": "just feels as natural as breathing right it's even the API is make it look like you're just calling methods it's fine",
    "start": "664430",
    "end": "670180"
  },
  {
    "text": "there's all this network stuff and things fail and and those failures become interesting",
    "start": "670180",
    "end": "675720"
  },
  {
    "text": "and a lot of the patterns that we see evolving around microservices",
    "start": "675720",
    "end": "683399"
  },
  {
    "text": "development or some people just a cloud native development there's by the way great book called cloud native patterns by a lady named",
    "start": "683399",
    "end": "690120"
  },
  {
    "text": "cornelia davis I just interviewed her on the confluent podcast a few weeks ago it's not live yet shameless plug for the",
    "start": "690120",
    "end": "697170"
  },
  {
    "text": "confluent podcast oh the whole introduction thing I forgot that my name",
    "start": "697170",
    "end": "702480"
  },
  {
    "text": "is Tim and I worked for a company called confluent tonight I do developer relations a confluent that's so that if I talk about that that",
    "start": "702480",
    "end": "708750"
  },
  {
    "text": "that might happen anyway the podcast is is that podcast episode with Cornelia",
    "start": "708750",
    "end": "714089"
  },
  {
    "text": "was so fun to rip to read to actually interview her and to record great guest",
    "start": "714089",
    "end": "719339"
  },
  {
    "text": "and we talked about the patterns in her book how a lot of them have to do with",
    "start": "719339",
    "end": "724470"
  },
  {
    "text": "solving the problems that arise when you've got programs that are calling each other synchronously and there's a",
    "start": "724470",
    "end": "730680"
  },
  {
    "text": "fair amount in the book about a venture of an architecture too so it's not all just RPC stuff but it feels natural but",
    "start": "730680",
    "end": "737339"
  },
  {
    "text": "problems happen problems come up and now there's stuff we have to do to get around those those problems I'm gonna",
    "start": "737339",
    "end": "744750"
  },
  {
    "text": "leave that as sort of a vague you know there are problems and we won't dive",
    "start": "744750",
    "end": "751110"
  },
  {
    "text": "into that the other nice thing about our pc-based integration though is that there's a lot of request response in our",
    "start": "751110",
    "end": "756240"
  },
  {
    "text": "world when I'm a user using a web front-end or mobile friend under something like my life is largely",
    "start": "756240",
    "end": "762180"
  },
  {
    "text": "synchronous I tap things and I wait for the spinny thing and then the box turns",
    "start": "762180",
    "end": "767220"
  },
  {
    "text": "green you know and okay good I can move on that's that's synchronous you know",
    "start": "767220",
    "end": "774589"
  },
  {
    "text": "there's a lot of asynchronous interaction as well I might get an email",
    "start": "774589",
    "end": "780149"
  },
  {
    "text": "saying oh wait actually sorry that was out of stock that's asynchronous but you know there",
    "start": "780149",
    "end": "786000"
  },
  {
    "text": "is this kind of request/response life and services that call each other that",
    "start": "786000",
    "end": "791339"
  },
  {
    "text": "just all works you know everything can be synchronous and you have to think about things being asynchronous that's",
    "start": "791339",
    "end": "797250"
  },
  {
    "text": "nice again I spent a lot of my last two weeks talking to bankers and there is just so",
    "start": "797250",
    "end": "802740"
  },
  {
    "text": "dang much messaging and synchro's stuff in that world and",
    "start": "802740",
    "end": "809180"
  },
  {
    "text": "so this makes that easy oh yeah I was getting ahead of myself earlier there are these problems like say cascading",
    "start": "809180",
    "end": "815240"
  },
  {
    "text": "failures that attend large synchronous networks of independent services here's",
    "start": "815240",
    "end": "821060"
  },
  {
    "text": "a question though listen there's a smell here like now that we've made all these services and all these programs running",
    "start": "821060",
    "end": "828140"
  },
  {
    "text": "independently and they're doing things and it's hard to figure out what's going on you have to debug the system what you",
    "start": "828140",
    "end": "834770"
  },
  {
    "text": "do well isn't that interesting",
    "start": "834770",
    "end": "843620"
  },
  {
    "text": "we should probably pay attention to that so I should probably make more logs",
    "start": "843620",
    "end": "848960"
  },
  {
    "start": "848000",
    "end": "900000"
  },
  {
    "text": "anyway I want to talk about event-driven micro service integration and later on I",
    "start": "848960",
    "end": "855680"
  },
  {
    "text": "want to show you a very trivial ecommerce micro services estate and I want to refactor it step by step from",
    "start": "855680",
    "end": "862430"
  },
  {
    "text": "from synchronous to asynchronous or from from RPC to events and I want to propose",
    "start": "862430",
    "end": "868220"
  },
  {
    "text": "that the whole argument here is that integrating services through events by",
    "start": "868220",
    "end": "875450"
  },
  {
    "text": "having them exchange events is a cleaner solution and has some properties and",
    "start": "875450",
    "end": "881270"
  },
  {
    "text": "lets you access some some phenomena in",
    "start": "881270",
    "end": "886670"
  },
  {
    "text": "your architecture that you want to access so this is on it's the last ones always the good one right you have dumb",
    "start": "886670",
    "end": "892670"
  },
  {
    "text": "idea dumb idea good idea is how you organize lists and this is what I'm saying is the good idea so let's talk",
    "start": "892670",
    "end": "898280"
  },
  {
    "text": "about what events are well an event in the context of business software is a",
    "start": "898280",
    "end": "903530"
  },
  {
    "start": "900000",
    "end": "951000"
  },
  {
    "text": "narrative that elements of the system share that describes the way the",
    "start": "903530",
    "end": "908630"
  },
  {
    "text": "business unfolds over time something that happened it could be anything when I'm when I'm talking to",
    "start": "908630",
    "end": "917540"
  },
  {
    "text": "people who are very new to thinking about event-driven systems the Internet of Things is always the go-to example",
    "start": "917540",
    "end": "924050"
  },
  {
    "text": "like you've got this network of smart thermostats and they're they're phoning home once a minute report on the",
    "start": "924050",
    "end": "930710"
  },
  {
    "text": "temperature and what's going on with the HVAC system and all that right that's the easy to think about all those events",
    "start": "930710",
    "end": "936800"
  },
  {
    "text": "you know monitoring power lines or smart cars or these IOT things are easy to",
    "start": "936800",
    "end": "942110"
  },
  {
    "text": "think about just about anything can be modeled as an event and and we'll see that any user",
    "start": "942110",
    "end": "948260"
  },
  {
    "text": "interaction any state change in a business process any of these things an event also if you kind of break it apart",
    "start": "948260",
    "end": "954350"
  },
  {
    "start": "951000",
    "end": "1054000"
  },
  {
    "text": "thing what's an event made out of it's made out of two things it is notification that is like the when",
    "start": "954350",
    "end": "960410"
  },
  {
    "text": "nests of the event the event has happened at an isolated point in time",
    "start": "960410",
    "end": "965680"
  },
  {
    "text": "and action ought to be taken some something ought to happen as a result of",
    "start": "965680",
    "end": "970760"
  },
  {
    "text": "that there's also state in an event it's not just you know here's this this Delta",
    "start": "970760",
    "end": "976010"
  },
  {
    "text": "function out in the universe saying something happened it's there's there's an event in time and here is some state",
    "start": "976010",
    "end": "981860"
  },
  {
    "text": "that goes along with that event and that state is usually small ish right and when you get to you know really brass",
    "start": "981860",
    "end": "988339"
  },
  {
    "text": "tacks implementation things inside of kafka smallish means you know a megabyte",
    "start": "988339",
    "end": "994610"
  },
  {
    "text": "for a lot of people who operate Kafka and hopefully you're using a cloud service for that as much can these days",
    "start": "994610",
    "end": "1001240"
  },
  {
    "text": "but if you're operating Kafka events that are larger than that start to make",
    "start": "1001240",
    "end": "1006430"
  },
  {
    "text": "people nervous if you look at really you know experience cough cabins they don't like big messages but their state there",
    "start": "1006430",
    "end": "1011769"
  },
  {
    "text": "is actual data that goes along with an event here's another very very important",
    "start": "1011769",
    "end": "1017070"
  },
  {
    "text": "property of events and I guess I'll",
    "start": "1017070",
    "end": "1022510"
  },
  {
    "text": "start before I actually say it think about events in your life right events",
    "start": "1022510",
    "end": "1028270"
  },
  {
    "text": "like speaking words you say something that's an event it's an event that that",
    "start": "1028270",
    "end": "1034688"
  },
  {
    "text": "you create and maybe there's been a time in your life where you said words maybe",
    "start": "1034689",
    "end": "1039730"
  },
  {
    "text": "to a loved one when you were in a bad mental state and he wished later on that",
    "start": "1039730",
    "end": "1045790"
  },
  {
    "text": "that event had not happened you wish you hadn't said those words what do we know about that can you make those words go",
    "start": "1045790",
    "end": "1053650"
  },
  {
    "text": "away you can't events are immutable sometimes tragically immutable right",
    "start": "1053650",
    "end": "1059140"
  },
  {
    "start": "1054000",
    "end": "1116000"
  },
  {
    "text": "you could always produce a new event later on like a compensating action that's an option and often that works",
    "start": "1059140",
    "end": "1065020"
  },
  {
    "text": "happens to everybody but events are immutable this is important definitely true of real-life events it has to be",
    "start": "1065020",
    "end": "1071470"
  },
  {
    "text": "true of systems that model events because you can't change the past you want to keep a record of what has happened you don't want that record to be",
    "start": "1071470",
    "end": "1078279"
  },
  {
    "text": "editable and in the case of Kafka whose basics we will now explore yes events",
    "start": "1078279",
    "end": "1084340"
  },
  {
    "text": "are stored as immutable things and they're stored durably for arbitrary lengths of time that can be the default",
    "start": "1084340",
    "end": "1092619"
  },
  {
    "text": "famously has seven days but there's just nothing seven days II about Kafka can be infinity you can have it stored data forever you",
    "start": "1092619",
    "end": "1099100"
  },
  {
    "text": "can have stored data for an hour events have this lifetime and that's just a that's just a data governance and",
    "start": "1099100",
    "end": "1106480"
  },
  {
    "text": "storage cost sort of equation it has nothing to do with with the nature of events or the nature of Kafka so let's",
    "start": "1106480",
    "end": "1116499"
  },
  {
    "start": "1116000",
    "end": "1191000"
  },
  {
    "text": "talk a little bit about this platform",
    "start": "1116499",
    "end": "1121259"
  },
  {
    "text": "Kafka started as a distributed commit log it was just a way of logging events",
    "start": "1121679",
    "end": "1128739"
  },
  {
    "text": "and remembering them it didn't even do replication when it was new people used it in production before it used",
    "start": "1128739",
    "end": "1134379"
  },
  {
    "text": "replication blows my mind but initially it was very simple it was just this big",
    "start": "1134379",
    "end": "1139869"
  },
  {
    "text": "distributed commit log and you had to Scala API on the background because it was you know 2011 that was seemed like",
    "start": "1139869",
    "end": "1149350"
  },
  {
    "text": "good idea at the time so at the heart of Kafka still this is",
    "start": "1149350",
    "end": "1155049"
  },
  {
    "text": "the fundamental data structure and concept at the middle of the thing is there's this log now there's this",
    "start": "1155049",
    "end": "1160659"
  },
  {
    "text": "platform around it and I'm gonna visit all those circles on the outside of that box because I want you to know what those things do and and how they've",
    "start": "1160659",
    "end": "1167769"
  },
  {
    "text": "emerged over time and I think it's very important not just that we get this thing about event-driven architectures",
    "start": "1167769",
    "end": "1173559"
  },
  {
    "text": "and micro services into our heads but when you think about Kafka if you think ads this distributed messaging system",
    "start": "1173559",
    "end": "1178929"
  },
  {
    "text": "that's not good enough you were better than that and there's there's a broader platform that you should be aware of",
    "start": "1178929",
    "end": "1184809"
  },
  {
    "text": "that's that and the the boundaries of that platform are constantly expanding in interesting ways as this thing grows",
    "start": "1184809",
    "end": "1191230"
  },
  {
    "start": "1191000",
    "end": "1230000"
  },
  {
    "text": "so anyway logs what do we know about logs well when you write to a log you put stuff on the end and you don't",
    "start": "1191230",
    "end": "1197320"
  },
  {
    "text": "change it you don't go back and change things like I said they're immutable and messages are always appended to the end",
    "start": "1197320",
    "end": "1203019"
  },
  {
    "text": "it's just like a log file if you go and edit a log file what are you",
    "start": "1203019",
    "end": "1209620"
  },
  {
    "text": "Crandell your criminal you're covering up a crime probably maybe you're just a",
    "start": "1209620",
    "end": "1215440"
  },
  {
    "text": "conspirator but you know most places that makes you a criminal - what and the",
    "start": "1215440",
    "end": "1221200"
  },
  {
    "text": "fact that these are durable right that's one thing that differentiates Kafka from a messaging system if this is this is",
    "start": "1221200",
    "end": "1227500"
  },
  {
    "text": "actually data storage its data infrastructure another thing and sort of an implication of the fact that it's",
    "start": "1227500",
    "end": "1233050"
  },
  {
    "start": "1230000",
    "end": "1308000"
  },
  {
    "text": "storage is that we can have lots of consumers that can be reading from their own position in that log I can create",
    "start": "1233050",
    "end": "1239140"
  },
  {
    "text": "some new program that you know I've got this log of whatever say it's sales say",
    "start": "1239140",
    "end": "1245110"
  },
  {
    "text": "it's it's it's it's validated orders for my e-commerce website that's this this log or we call it a topic in Kafka well",
    "start": "1245110",
    "end": "1251920"
  },
  {
    "text": "those are stored that's not just buffering from one place to another in case something goes down or we get ahead",
    "start": "1251920",
    "end": "1258309"
  },
  {
    "text": "of ourselves or something but it's actually a record of the things and I can now create a new program say",
    "start": "1258309",
    "end": "1264730"
  },
  {
    "text": "represented by Fred Fred goes through and wants to read all those orders and",
    "start": "1264730",
    "end": "1270510"
  },
  {
    "text": "figure out which customers are in our MVP program and get the notification",
    "start": "1270510",
    "end": "1276460"
  },
  {
    "text": "that they get a discount or something like that right that's just a some brand new thing that I might stand up based on",
    "start": "1276460",
    "end": "1281559"
  },
  {
    "text": "data that I've got and so that that insight there is that this is a record",
    "start": "1281559",
    "end": "1286990"
  },
  {
    "text": "of things and there can be many interests on that record many different",
    "start": "1286990",
    "end": "1292540"
  },
  {
    "text": "individual programs doing different things which we would call micro services probably now what's bad about",
    "start": "1292540",
    "end": "1300010"
  },
  {
    "text": "logs I'm sort of extolling the virtues about logs of logs just like sometimes",
    "start": "1300010",
    "end": "1305050"
  },
  {
    "text": "we extol the virtues of micro services and I started by saying that they were awful what's awful about logs is reading",
    "start": "1305050",
    "end": "1310840"
  },
  {
    "start": "1308000",
    "end": "1361000"
  },
  {
    "text": "them what I can do is I can scan that's what the API gives you that's the Kafka",
    "start": "1310840",
    "end": "1317440"
  },
  {
    "text": "consumer API I can seek to an offset and that by the way is efficient to do",
    "start": "1317440",
    "end": "1323700"
  },
  {
    "text": "reading that's it's essentially a constant time operation to seek to a particular offset it's definitely not a",
    "start": "1323700",
    "end": "1330280"
  },
  {
    "text": "function the size of the log so it's it's I can just say it's constant time and then I can read the next message in",
    "start": "1330280",
    "end": "1337120"
  },
  {
    "text": "the next message in the next message I can't go get all the messages for the thermostats in",
    "start": "1337120",
    "end": "1342360"
  },
  {
    "text": "central Copenhagen there's no such thing I can just read and that's a terrible",
    "start": "1342360",
    "end": "1347910"
  },
  {
    "text": "way to live so we're gonna need to do better things than that this is this is",
    "start": "1347910",
    "end": "1354000"
  },
  {
    "text": "kind of a substrate and architectural substrate this is not our solution for",
    "start": "1354000",
    "end": "1360210"
  },
  {
    "text": "how to read data Kafka lets me split these logs up into pieces and I can have",
    "start": "1360210",
    "end": "1366570"
  },
  {
    "text": "a cluster of lots of machines and I can have a little piece of each log you know",
    "start": "1366570",
    "end": "1372510"
  },
  {
    "text": "say break one of these logs up into five partitions and I can put those partitions on different brokers and",
    "start": "1372510",
    "end": "1378090"
  },
  {
    "text": "they're there by scale-out storage and reading and writing and all those things I can have many producers writing into",
    "start": "1378090",
    "end": "1385860"
  },
  {
    "text": "that topic I can have many consumers reading from those topics those are the fundamental everything",
    "start": "1385860",
    "end": "1393540"
  },
  {
    "text": "that talks to atop a Kafka topic is at its bottom a producer or a consumer or",
    "start": "1393540",
    "end": "1400830"
  },
  {
    "text": "both and you actually have access to these producer and consumer api's there's the native one that comes with",
    "start": "1400830",
    "end": "1408030"
  },
  {
    "text": "Apache Kafka's Java and there's a number of other supported libraries like go and",
    "start": "1408030",
    "end": "1413460"
  },
  {
    "text": "Python and see dotnet languages and kind of in terms of community drivers every",
    "start": "1413460",
    "end": "1420540"
  },
  {
    "text": "other freaking thing there is there's probably several options for you if you're like Ruby or JavaScript or these",
    "start": "1420540",
    "end": "1427980"
  },
  {
    "text": "things that haven't really entirely standardized yet you have to pick which one you're gonna use which is the bummer",
    "start": "1427980",
    "end": "1433710"
  },
  {
    "text": "but there's broad language support for the producer and the consumer and everything all the layers we build on",
    "start": "1433710",
    "end": "1439740"
  },
  {
    "text": "top of that are fundamentally at the bottom that interface that's the only",
    "start": "1439740",
    "end": "1445620"
  },
  {
    "text": "way you talk to Kafka's you produce or you consume",
    "start": "1445620",
    "end": "1450680"
  },
  {
    "start": "1451000",
    "end": "1567000"
  },
  {
    "text": "connectors now neat things have happened in Kafka as a community and as an",
    "start": "1454130",
    "end": "1459320"
  },
  {
    "text": "ecosystem and that's that well okay we made this log thing and we had this producer and consumer API and we made",
    "start": "1459320",
    "end": "1466610"
  },
  {
    "text": "you use Scala and it's nice but it's",
    "start": "1466610",
    "end": "1472220"
  },
  {
    "text": "Java now but it's it's people found patterns emerging all right",
    "start": "1472220",
    "end": "1477830"
  },
  {
    "text": "they found wow this log thing is a great abstraction and I like using it and you",
    "start": "1477830",
    "end": "1486230"
  },
  {
    "text": "know I'm building my system around this distributed log and getting some some neat things going on but I have these legacy systems that aren't Kafka and I",
    "start": "1486230",
    "end": "1492860"
  },
  {
    "text": "don't get to modify them there's this database out there and I want to dump stuff into elastic and s3 and that's the",
    "start": "1492860",
    "end": "1498260"
  },
  {
    "text": "world right there's all these things and so people would write bespoke data integration code that just you know",
    "start": "1498260",
    "end": "1504169"
  },
  {
    "text": "maybe pulled the database and produced a record into a topic when you saw a new ID or consume from a topic and wrote it",
    "start": "1504169",
    "end": "1511730"
  },
  {
    "text": "into an elastic index and like everybody's writing this code which is not good because that is that is",
    "start": "1511730",
    "end": "1519679"
  },
  {
    "text": "undifferentiated framework code it makes no difference whether you write it or the equivalent you at your company's",
    "start": "1519679",
    "end": "1527419"
  },
  {
    "text": "nearest competitor writes it you you are not ahead you're not serving customers better as a result of you writing that",
    "start": "1527419",
    "end": "1534799"
  },
  {
    "text": "code the problem as we all know with this kind of code is that it's fun because it's just us right there's no",
    "start": "1534799",
    "end": "1541610"
  },
  {
    "text": "business stakeholder telling you to do something that it's frankly stupid you just get to make the code beautiful and",
    "start": "1541610",
    "end": "1547370"
  },
  {
    "text": "there are no dumb special cases it's like this you know platonic sphere floating in the heavens but it's a trap",
    "start": "1547370",
    "end": "1555380"
  },
  {
    "text": "right you don't you don't want to spend time writing that kind of code cuz you get caught and you never get to finish",
    "start": "1555380",
    "end": "1560840"
  },
  {
    "text": "it and all the kind of stuff so connect Kafka connect emerged as the official",
    "start": "1560840",
    "end": "1566659"
  },
  {
    "text": "solution to this kind of thing and it is this this framework that runs on its own servers so it's like this extra server",
    "start": "1566659",
    "end": "1572900"
  },
  {
    "start": "1567000",
    "end": "1611000"
  },
  {
    "text": "process that you stand up on this little cluster that runs outside your Kafka cluster and then you drop jars in it and",
    "start": "1572900",
    "end": "1578390"
  },
  {
    "text": "you drop little configuration little blobs of JSON in it and it will say oh okay there's a database out there here's",
    "start": "1578390",
    "end": "1584870"
  },
  {
    "text": "the credentials that are in my JSON config I'll just read from it produce into this topic or I'll consume from this topic and I'll dump into this",
    "start": "1584870",
    "end": "1591470"
  },
  {
    "text": "elastic cluster and so it's this declarative way of getting that done you don't have to write the data integration",
    "start": "1591470",
    "end": "1596690"
  },
  {
    "text": "code huge library of connectors and a big win right because that's it can be",
    "start": "1596690",
    "end": "1603799"
  },
  {
    "text": "fun and diverting to write that kind of code but it's not doesn't make any sense to the business that should just get",
    "start": "1603799",
    "end": "1609500"
  },
  {
    "text": "done once and you should use it down on the bottom those blue circles the",
    "start": "1609500",
    "end": "1616640"
  },
  {
    "text": "producer and consumer are like I said everything even connect as far as Kafka knows first the brokers no that's just a",
    "start": "1616640",
    "end": "1622370"
  },
  {
    "text": "producer in a consumer I did you know the cluster doesn't know what connect is",
    "start": "1622370",
    "end": "1627559"
  },
  {
    "text": "just stuff is coming in and stuff is going out and that if you're writing code the services you run and you're",
    "start": "1627559",
    "end": "1633260"
  },
  {
    "text": "just putting stuff in and getting stuff out that's a little brutal over time it's kind of like writing business software in assembly language which",
    "start": "1633260",
    "end": "1640130"
  },
  {
    "text": "would be fun but nobody does it because",
    "start": "1640130",
    "end": "1645260"
  },
  {
    "text": "you can't make money doing that and so anything sophisticated that you're",
    "start": "1645260",
    "end": "1652250"
  },
  {
    "text": "reading any sophisticated read operations you're doing for example maybe I'm consuming from one topic but",
    "start": "1652250",
    "end": "1659120"
  },
  {
    "text": "then there's this other topic that has entities in it you know like users every",
    "start": "1659120",
    "end": "1665299"
  },
  {
    "text": "time somebody updates their user account they put a message in the user topic well I kind of would like to turn that",
    "start": "1665299",
    "end": "1670519"
  },
  {
    "text": "into a lookup table I want to be able to look stuff up and maybe there's this other topic that has a user ID and I",
    "start": "1670519",
    "end": "1676279"
  },
  {
    "text": "want to go to that lookup table and then rich it produce it to a new thing and maybe group by postal code and run an",
    "start": "1676279",
    "end": "1683720"
  },
  {
    "text": "aggregation over the group this is not exotic okay it's just just simply not hard to imagine that you're gonna do this because you are and you have to do",
    "start": "1683720",
    "end": "1690830"
  },
  {
    "text": "all that by yourself with the consumer and that kind of is not fun again you will write a bunch of framework code you",
    "start": "1690830",
    "end": "1696710"
  },
  {
    "text": "will develop your own internal stream processing framework don't do it because",
    "start": "1696710",
    "end": "1701870"
  },
  {
    "text": "there is one and that's called Kafka streams so Kafka streams if you're writing code in Java is this part of the",
    "start": "1701870",
    "end": "1707179"
  },
  {
    "text": "platform that has all that stuff and a lot more there are lots of thorny",
    "start": "1707179",
    "end": "1714429"
  },
  {
    "text": "distributed state management problems that arise when you start really thinking about how to scale a stream",
    "start": "1714429",
    "end": "1719870"
  },
  {
    "text": "processing app there's just a lot of ugly framework II things there's there's time windows that",
    "start": "1719870",
    "end": "1726020"
  },
  {
    "text": "usually come up when you're when you're aggregating like I want to know the average over the last 10 minutes",
    "start": "1726020",
    "end": "1732640"
  },
  {
    "text": "sometimes data arrives late and like the window closed and I gotta go back and update the last you're gonna eat it you",
    "start": "1732640",
    "end": "1739190"
  },
  {
    "text": "know you don't want that it's not what you do so streams is the engine that does all",
    "start": "1739190",
    "end": "1744830"
  },
  {
    "text": "that stuff and most I could say with confidence most java shops that are",
    "start": "1744830",
    "end": "1751130"
  },
  {
    "text": "building micro services on Kafka gravitate towards Kafka streams non Java",
    "start": "1751130",
    "end": "1756140"
  },
  {
    "text": "shops well it's complicated but there is kind of the next level up from Kafka",
    "start": "1756140",
    "end": "1763130"
  },
  {
    "start": "1758000",
    "end": "1828000"
  },
  {
    "text": "streams in abstraction language called K sequel if I could draw your attention to",
    "start": "1763130",
    "end": "1769520"
  },
  {
    "text": "the confluent blog tomorrow we have a super cool announcement about case equals Justin well super cool it's",
    "start": "1769520",
    "end": "1775730"
  },
  {
    "text": "getting some new features and it's interesting some new things are happening there but it's this a free",
    "start": "1775730",
    "end": "1781310"
  },
  {
    "text": "open sequel like stream processing layer that runs on top of Kafka you just kind of look at that query you can get an",
    "start": "1781310",
    "end": "1787460"
  },
  {
    "text": "idea of what it's doing very much sequel like and runs does stream processing in",
    "start": "1787460",
    "end": "1796400"
  },
  {
    "text": "a declarative way on top of Kafka all of the code you'd have to write to do that with the consumer will just be daunting",
    "start": "1796400",
    "end": "1804940"
  },
  {
    "text": "take a breath I did say questions when you have them and so case one has been",
    "start": "1806350",
    "end": "1813140"
  },
  {
    "text": "percolating I'll just step back I'll let you think you don't have to",
    "start": "1813140",
    "end": "1822399"
  },
  {
    "text": "all right let's apply this so I want to",
    "start": "1823160",
    "end": "1832980"
  },
  {
    "text": "take this platform and I want to use that to to fix some of the problems we",
    "start": "1832980",
    "end": "1842910"
  },
  {
    "text": "get with microservices all right now what's easy about Microsoft's slide",
    "start": "1842910",
    "end": "1850890"
  },
  {
    "start": "1845000",
    "end": "1887000"
  },
  {
    "text": "where to some degree the actual practice of refactoring a monolith into services",
    "start": "1850890",
    "end": "1856290"
  },
  {
    "text": "is that the functional decomposition is usually pretty easy you know you have",
    "start": "1856290",
    "end": "1861900"
  },
  {
    "text": "modules in your monolith and that's like a good start but it's just there are things there's payments and they're",
    "start": "1861900",
    "end": "1868350"
  },
  {
    "text": "shipping and there's order validation and returns and all these are these are",
    "start": "1868350",
    "end": "1875640"
  },
  {
    "text": "good candidates for this little unit of functionality where it all is cohesive and coherent and that's just not that",
    "start": "1875640",
    "end": "1882990"
  },
  {
    "text": "hard to do the problem is that the data doesn't play along well there's lots of",
    "start": "1882990",
    "end": "1890220"
  },
  {
    "start": "1887000",
    "end": "1932000"
  },
  {
    "text": "problems in terms of making these things run but the data doesn't play along in that for most of those services to work",
    "start": "1890220",
    "end": "1896370"
  },
  {
    "text": "they need to share facts from some other service and we've already said there are",
    "start": "1896370",
    "end": "1903600"
  },
  {
    "text": "problems that attend to that if you just again the the thing that everybody thought first was well just share the",
    "start": "1903600",
    "end": "1909600"
  },
  {
    "text": "tables and go get the things and have one big shared database and that that for various reasons was not successful",
    "start": "1909600",
    "end": "1915080"
  },
  {
    "text": "and it again it's easy to laugh now because we have seen how badly it worked out but it was that's a reasonable way",
    "start": "1915080",
    "end": "1922410"
  },
  {
    "text": "to begin you know before you know and and because we know that that can't work",
    "start": "1922410",
    "end": "1927540"
  },
  {
    "text": "we now this problem to solve where I have to get data sharing we're going to",
    "start": "1927540",
    "end": "1933390"
  },
  {
    "start": "1932000",
    "end": "1978000"
  },
  {
    "text": "use Kafka as this backbone between services all right what the services are going to do ultimately is they're going",
    "start": "1933390",
    "end": "1939360"
  },
  {
    "text": "to produce messages into Kafka topics and consume messages from Kafka topics",
    "start": "1939360",
    "end": "1944610"
  },
  {
    "text": "we have to share we have to solve the problem of sharing data and we have to",
    "start": "1944610",
    "end": "1951530"
  },
  {
    "text": "well that's the big problem we have to solve there'll be some other problems like what we do about synchronous operations out in the",
    "start": "1951530",
    "end": "1959260"
  },
  {
    "text": "world we'll try and talk about that how we bridge that synchronous asynchronous gap how we share data and apart from",
    "start": "1959260",
    "end": "1965320"
  },
  {
    "text": "solving problems I'm hoping that there might be some good architectural benefits that arise other than it's not",
    "start": "1965320",
    "end": "1973270"
  },
  {
    "text": "as bad as the next option maybe there's some new things that we can get our hands around I would certainly love it",
    "start": "1973270",
    "end": "1978520"
  },
  {
    "start": "1978000",
    "end": "2140000"
  },
  {
    "text": "that to happen so here is a trivial Minimum Viable micro-services system",
    "start": "1978520",
    "end": "1987970"
  },
  {
    "text": "with that does ecommerce we forgot payments but it's okay that's going to",
    "start": "1987970",
    "end": "1994270"
  },
  {
    "text": "come out in the next release so it's it's viable for some definition of",
    "start": "1994270",
    "end": "2000210"
  },
  {
    "text": "viable we just wanted to keep it simple so what happens is there's this web front-end that user does a thing and",
    "start": "2000210",
    "end": "2006720"
  },
  {
    "text": "says I want to order and some piece of JSON comes into an endpoint on our",
    "start": "2006720",
    "end": "2011760"
  },
  {
    "text": "orders service alright and because as I said before we are not animals orders",
    "start": "2011760",
    "end": "2018060"
  },
  {
    "text": "has its own database and it alone knows about that database so it validates that",
    "start": "2018060",
    "end": "2023790"
  },
  {
    "text": "order records it the orders database probably that service that endpoint also",
    "start": "2023790",
    "end": "2028860"
  },
  {
    "text": "has an interface for looking up an order by an ID let's say and sending that JSON",
    "start": "2028860",
    "end": "2035280"
  },
  {
    "text": "back to the browser it's most of what we do is we get little pieces of JSON and we write them to a database and then we",
    "start": "2035280",
    "end": "2041550"
  },
  {
    "text": "look things up from databases and we turn them into JSON and we send them on their way that's kind of maybe 80% of",
    "start": "2041550",
    "end": "2048320"
  },
  {
    "text": "our jobs sounds depressing get off of",
    "start": "2048320",
    "end": "2056100"
  },
  {
    "text": "that thought so anyway it records the order the database and this is exciting and important work and it then has to",
    "start": "2056100",
    "end": "2062190"
  },
  {
    "text": "ship that order so it makes a call synchronously this is our PC world to the shipping service shipping service",
    "start": "2062190",
    "end": "2067860"
  },
  {
    "text": "records that the well eventually is gonna record that the shipment has happened first though it just has a",
    "start": "2067860",
    "end": "2073050"
  },
  {
    "text": "customer ID or user ID and it needs to get user data from the customer service",
    "start": "2073050",
    "end": "2078060"
  },
  {
    "text": "so it's going to call that so it has an address and a name and you know calls okay here we go it's customer two for",
    "start": "2078060",
    "end": "2084330"
  },
  {
    "text": "601 and reply comes back that name is the house of Birdland and Littleton Colorado and",
    "start": "2084330",
    "end": "2089940"
  },
  {
    "text": "that gets that comes out of that customer database now the customer service also has its rest interface to",
    "start": "2089940",
    "end": "2095669"
  },
  {
    "text": "the outside world so these services are not just talking to each other they're also talking to a front-end the shipping",
    "start": "2095669",
    "end": "2101670"
  },
  {
    "text": "service is gonna be talking to some back-end to cause the way the where cause side effects out in the warehouse you know but the customer service again",
    "start": "2101670",
    "end": "2108960"
  },
  {
    "text": "people can create accounts they could look up their details they can edit their details all that has to happen on",
    "start": "2108960",
    "end": "2114420"
  },
  {
    "text": "that customer services rest and rest interface and has to be reflected in",
    "start": "2114420",
    "end": "2119730"
  },
  {
    "text": "that customer database which only the customer service has access to and this works but we have the problems that",
    "start": "2119730",
    "end": "2126450"
  },
  {
    "text": "attend our pc-based integration so a piece at a time I want to change this from the synchronous world into loosely",
    "start": "2126450",
    "end": "2136920"
  },
  {
    "text": "coupled asynchronous micro services talking through Kafka let's see what happens first we will break the",
    "start": "2136920",
    "end": "2142290"
  },
  {
    "start": "2140000",
    "end": "2466000"
  },
  {
    "text": "connection between orders and shipping now order service really is just a validator okay and when it gets a",
    "start": "2142290",
    "end": "2150720"
  },
  {
    "text": "validated order it produces it to a Kafka topic it's still gonna need some",
    "start": "2150720",
    "end": "2156030"
  },
  {
    "text": "kind of way to do key lookups on that because people might still ask for you know where what's order 600 and so it's",
    "start": "2156030",
    "end": "2164670"
  },
  {
    "text": "fine producing it to a topic it still has that database like thing we can come back to that in a minute but it still needs to do to do key",
    "start": "2164670",
    "end": "2170550"
  },
  {
    "text": "lookups on orders that's fine but its job is just to validate produced to the topic if that database is say a Postgres",
    "start": "2170550",
    "end": "2177869"
  },
  {
    "text": "instance here's an important thing that Postgres instance has to be a",
    "start": "2177869",
    "end": "2183089"
  },
  {
    "text": "materialized view of what's in the topic it's important that we make that topic",
    "start": "2183089",
    "end": "2188160"
  },
  {
    "text": "the system of record this is a record of the orders this is where that the true orders are because reading a log as I",
    "start": "2188160",
    "end": "2196740"
  },
  {
    "text": "said sucks we don't want that to be the end of the story there has to be a way to look at those and so if that database",
    "start": "2196740",
    "end": "2203190"
  },
  {
    "text": "is a local Postgres instance then that is being materialized probably using",
    "start": "2203190",
    "end": "2209280"
  },
  {
    "text": "Kafka connect from that topic back into that table so now we can see those things there are other more consistent",
    "start": "2209280",
    "end": "2216060"
  },
  {
    "text": "solutions to that we'll get to that later point is yes there's a database there or some sort of way to look up keys but what that service does is it",
    "start": "2216060",
    "end": "2222720"
  },
  {
    "text": "produces hapax produces messages to the orders topic and then the shipping service",
    "start": "2222720",
    "end": "2231090"
  },
  {
    "text": "consumes them and it does its work it goes on it's still synchronously coupled to the customer service we haven't fixed",
    "start": "2231090",
    "end": "2236760"
  },
  {
    "text": "that yet but it gets this new unit of work from the orders topic and does its thing",
    "start": "2236760",
    "end": "2241980"
  },
  {
    "text": "rather than being called it consumes from our Kafka topic and that's fine and typically when you're doing this you you",
    "start": "2241980",
    "end": "2248340"
  },
  {
    "text": "you produce to a topic you create a new topic and you produce to it with a particular consumer in mind maybe you're",
    "start": "2248340",
    "end": "2254970"
  },
  {
    "text": "even writing that consumer right you're thinking point to point and that's totally fine",
    "start": "2254970",
    "end": "2261350"
  },
  {
    "text": "but don't think to point to point",
    "start": "2261350",
    "end": "2267360"
  },
  {
    "text": "I find this when I talk to I really love this by the way what I'm doing I love",
    "start": "2267360",
    "end": "2273900"
  },
  {
    "text": "this another thing that I love in my job is sometimes I get to sit down with like a group of architects like five or ten",
    "start": "2273900",
    "end": "2279570"
  },
  {
    "text": "and they tell me here's what we're trying to do in our business and it's never this clean like I made this up so",
    "start": "2279570",
    "end": "2286920"
  },
  {
    "text": "that it would be easy to understand it's some bizarre thing that you're like I don't even have this maps on to a venture of an architecture I'm probably",
    "start": "2286920",
    "end": "2293520"
  },
  {
    "text": "ten seconds away from just failing and walking out of the room and you know usually come up with kind of something",
    "start": "2293520",
    "end": "2298890"
  },
  {
    "text": "but it's it's it's neat because you just get the whatever of some arbitrary business and there and there are things",
    "start": "2298890",
    "end": "2304500"
  },
  {
    "text": "they're trying to get done and you're you're trying to figure out how all this works and very typically in those rooms",
    "start": "2304500",
    "end": "2311280"
  },
  {
    "text": "we're having this discussion people migrating from asynchronous or kind of messaging based mindset when they're",
    "start": "2311280",
    "end": "2318000"
  },
  {
    "text": "thinking about event-driven systems and producing an event that orders service like you write orders in the Minimum",
    "start": "2318000",
    "end": "2325860"
  },
  {
    "text": "Viable system thinking about shipping fine maybe you even write the shipping",
    "start": "2325860",
    "end": "2330930"
  },
  {
    "text": "service fine but when in the order service when you produce that that order",
    "start": "2330930",
    "end": "2336140"
  },
  {
    "text": "you really have to be hands-off about that this is almost like a personal discipline like you're saying here's",
    "start": "2336140",
    "end": "2342510"
  },
  {
    "text": "here's the thing I've done and I'm going to trust that somebody else picks it up",
    "start": "2342510",
    "end": "2347790"
  },
  {
    "text": "and does the right thing or you can be that kind of person who puts it there and then goes and checks on it and make",
    "start": "2347790",
    "end": "2354240"
  },
  {
    "text": "sure it happens and asks and asks and asks you know give me a notification back when you're done but that's you're",
    "start": "2354240",
    "end": "2360420"
  },
  {
    "text": "not as much fun to work with and that's that's just an important thing that we",
    "start": "2360420",
    "end": "2366300"
  },
  {
    "text": "bring to a vendor of an architecture also you put the thing there and you let it go obviously the business needs to",
    "start": "2366300",
    "end": "2371880"
  },
  {
    "text": "know if things aren't shipping it's this does not obviate all observability concerns across your system but from a",
    "start": "2371880",
    "end": "2378000"
  },
  {
    "text": "service perspective you let it go it's just like the song and the other thing",
    "start": "2378000",
    "end": "2386520"
  },
  {
    "text": "that happens here is I was thinking of shipping when I wrote that service but",
    "start": "2386520",
    "end": "2391860"
  },
  {
    "text": "who else might care about validated orders we could brainstorm and that",
    "start": "2391860",
    "end": "2399840"
  },
  {
    "text": "would be okay and we'd get somewhere but because of the limitations in our noetic equipment",
    "start": "2399840",
    "end": "2406470"
  },
  {
    "text": "as I said before we would only do so well somebody else down the road in a",
    "start": "2406470",
    "end": "2411870"
  },
  {
    "text": "future version of the business with a different perspective is gonna think of something else to do with that data and a new service can sprout from this",
    "start": "2411870",
    "end": "2418440"
  },
  {
    "text": "fertile soil of a log of events and so just with this one simple step we have",
    "start": "2418440",
    "end": "2426230"
  },
  {
    "text": "gotten a step towards an evolutionary architecture there's other things that we have to do to unlock that but without",
    "start": "2426230",
    "end": "2432960"
  },
  {
    "text": "this data infrastructure I think you are really hampered in making that happen so when you've got services that are",
    "start": "2432960",
    "end": "2438360"
  },
  {
    "text": "talking through logs new services can evolve in ways that they might not have otherwise you just have a shot at this",
    "start": "2438360",
    "end": "2445440"
  },
  {
    "text": "sort of ecosystem or marketplace approach to services rather than a top-down design approach to services a",
    "start": "2445440",
    "end": "2452220"
  },
  {
    "text": "top-down design it's great we do it all the time it's just you have to keep that limited because you're not very good at",
    "start": "2452220",
    "end": "2457500"
  },
  {
    "text": "it we're only so smart and so we have to give it to other people to do new things and that's what this does",
    "start": "2457500",
    "end": "2464010"
  },
  {
    "text": "alright we got to fix one more interface they've eight minutes we still talk about onions and that's this so now",
    "start": "2464010",
    "end": "2472400"
  },
  {
    "start": "2466000",
    "end": "2608000"
  },
  {
    "text": "shipping and customer are decoupled but what happened here I added I am not",
    "start": "2472400",
    "end": "2479730"
  },
  {
    "text": "calling customer service anymore for shipments remember the data sharing",
    "start": "2479730",
    "end": "2484740"
  },
  {
    "text": "thing shipping needs orders Plus users how does it get them well",
    "start": "2484740",
    "end": "2490109"
  },
  {
    "text": "now when there's an update to a user the customer service produces a message to a",
    "start": "2490109",
    "end": "2496890"
  },
  {
    "text": "topic this is a topic not really of events but it's like a change log of the",
    "start": "2496890",
    "end": "2501930"
  },
  {
    "text": "evolution of entities over time you just put a new one in there the key is the user ID the value is a serialized user",
    "start": "2501930",
    "end": "2508920"
  },
  {
    "text": "object and that database that it has is probably Kafka streams things called",
    "start": "2508920",
    "end": "2514829"
  },
  {
    "text": "streams thing called a K table and that's this in memory you could scale it among multiple instances if it's a big",
    "start": "2514829",
    "end": "2520799"
  },
  {
    "text": "table there's a scale story that I'll spare you but it says in memory basically key value store where I can",
    "start": "2520799",
    "end": "2526920"
  },
  {
    "text": "very very efficiently look up messages in that topic by key which is a new",
    "start": "2526920",
    "end": "2532200"
  },
  {
    "text": "thing since before remember with the log all I could do is scan it well now I could kind of turn that log on its side",
    "start": "2532200",
    "end": "2537720"
  },
  {
    "text": "and I've got a table I've turned a topic into a table log into a table and because that log is of immutable events",
    "start": "2537720",
    "end": "2545549"
  },
  {
    "text": "I can materialize that table over in the shipping service and not worry I haven't",
    "start": "2545549",
    "end": "2551339"
  },
  {
    "text": "really made a copy of a table in the relational sense where they're mutable",
    "start": "2551339",
    "end": "2556440"
  },
  {
    "text": "and if I change one I have to change the other and I have to think about distributed transactions and better to get a different job than do that I've",
    "start": "2556440",
    "end": "2565950"
  },
  {
    "text": "got this log of immutable things and I can materialize that tabular view anywhere so yes shipping service does",
    "start": "2565950",
    "end": "2573749"
  },
  {
    "text": "have a copy of users and it's a good thing so that's how I solved that that",
    "start": "2573749",
    "end": "2579089"
  },
  {
    "text": "data sharing problem and kind of unlock anybody to be able to have a view of the",
    "start": "2579089",
    "end": "2584940"
  },
  {
    "text": "customer if they need that and again I fully appreciate that I am being",
    "start": "2584940",
    "end": "2590849"
  },
  {
    "text": "hand-wavy about the scale implications at large scale there are interesting questions at even pre moderate large",
    "start": "2590849",
    "end": "2599400"
  },
  {
    "text": "scale this is very solvable if there's a very good scale story here like there is all over Kafka now what have we done",
    "start": "2599400",
    "end": "2609980"
  },
  {
    "start": "2608000",
    "end": "2817000"
  },
  {
    "text": "well we some stock photographer is that",
    "start": "2609980",
    "end": "2617339"
  },
  {
    "text": "is it dill or rosemary it's hard to tell is plastic I don't even know where I get",
    "start": "2617339",
    "end": "2624249"
  },
  {
    "text": "plastic dill like if I wanted some dill that'd be easy to source there I go to this five minutes way I don't know where",
    "start": "2624249",
    "end": "2630289"
  },
  {
    "text": "you'd get that but I just I'm so upset that I have to redo this picture with my own fresh ingredients anyway data onions",
    "start": "2630289",
    "end": "2639710"
  },
  {
    "text": "are a part of this and databases are a part of this and I think databases are like onions in one important way and",
    "start": "2639710",
    "end": "2646670"
  },
  {
    "text": "that is that they have layers and some of those layers make you cry so on the",
    "start": "2646670",
    "end": "2653479"
  },
  {
    "text": "outside of the database what do you see you see an API that we all know and love",
    "start": "2653479",
    "end": "2661729"
  },
  {
    "text": "and we don't just know it in the sense that we're familiar with it it's like an API we know we can write sequel this is",
    "start": "2661729",
    "end": "2668569"
  },
  {
    "text": "a common skill and and any database that has this interface is at least approachable right that doesn't mean",
    "start": "2668569",
    "end": "2674869"
  },
  {
    "text": "that the Postgres command-line interface is easy to use it's not but you know sequels sequel and it's a good way to",
    "start": "2674869",
    "end": "2680749"
  },
  {
    "text": "think about relational data and by the way I'm just constraining this to relational databases this this doesn't",
    "start": "2680749",
    "end": "2686660"
  },
  {
    "text": "need to be that but let's just let's just go there for a minute so peel that layer away peel the sequel layer away what do you get get tables",
    "start": "2686660",
    "end": "2693469"
  },
  {
    "text": "what a nice data model they're strongly typed they are easy to change you can",
    "start": "2693469",
    "end": "2700910"
  },
  {
    "text": "you can index them in ways that you can't index a log ever right you can you",
    "start": "2700910",
    "end": "2707329"
  },
  {
    "text": "can assert constraints over them so the various invariants and your system will be enforced even at this level of the",
    "start": "2707329",
    "end": "2713180"
  },
  {
    "text": "data model and you get to totally customize it this way of representing the world it's all up to you it's great peel this layer away and this is where",
    "start": "2713180",
    "end": "2722119"
  },
  {
    "text": "you start to cry and and not everybody has been here with a database if you",
    "start": "2722119",
    "end": "2727339"
  },
  {
    "text": "have you know and if your DBA ever have been a DBA this is a you know it's a professional responsibility of you to",
    "start": "2727339",
    "end": "2733729"
  },
  {
    "text": "have looked at the storage engine if you're not like maybe something happened and it's a dark time and and like we can",
    "start": "2733729",
    "end": "2741170"
  },
  {
    "text": "get a drink and talk about it but this is tough this is really to be trees or",
    "start": "2741170",
    "end": "2746299"
  },
  {
    "text": "disk and extents and and pages and the whole update in-place thing that that",
    "start": "2746299",
    "end": "2752059"
  },
  {
    "text": "databases have to manage relational databases have to manage it's tough and and it's it's best not to",
    "start": "2752059",
    "end": "2757550"
  },
  {
    "text": "live there because a lot of crying there peel this away and what do you get you",
    "start": "2757550",
    "end": "2766040"
  },
  {
    "text": "get logs yeah you get logs and it doesn't matter what kind of database it is that's the thing I'm talking about",
    "start": "2766040",
    "end": "2771290"
  },
  {
    "text": "relational databases go ahead do this with Cassandra do this with pick a graph database and do this I don't know",
    "start": "2771290",
    "end": "2777890"
  },
  {
    "text": "find an XML database if it's a thing that you change the mutations are",
    "start": "2777890",
    "end": "2782930"
  },
  {
    "text": "recorded in a log and then what happens well we've already established that",
    "start": "2782930",
    "end": "2788450"
  },
  {
    "text": "reading a log is awful so the database essentially builds up these materialized",
    "start": "2788450",
    "end": "2794600"
  },
  {
    "text": "views of what's in that log and it builds them to conform to this data",
    "start": "2794600",
    "end": "2801140"
  },
  {
    "text": "model that you've described and to satisfy performance contracts that that it needs to satisfy so that it is",
    "start": "2801140",
    "end": "2807380"
  },
  {
    "text": "pleasant and sensible and fast to read and write this data rather than than",
    "start": "2807380",
    "end": "2813010"
  },
  {
    "text": "interacting with this log directly so the services that we refactored we have",
    "start": "2813010",
    "end": "2821750"
  },
  {
    "start": "2817000",
    "end": "2920000"
  },
  {
    "text": "you know orders and shipping and customers and fraud detection and MVP",
    "start": "2821750",
    "end": "2828080"
  },
  {
    "text": "program and all these things you know all these services what are those well if they're all interacting through Kafka",
    "start": "2828080",
    "end": "2834560"
  },
  {
    "text": "topics it's kind of like they are materialized views of data in a log the",
    "start": "2834560",
    "end": "2840530"
  },
  {
    "text": "log is a system of record and we build up these materialized views to satisfy some data model that we're presenting to",
    "start": "2840530",
    "end": "2846470"
  },
  {
    "text": "the world these services have outside interfaces they have a data model they have certain performance contracts we",
    "start": "2846470",
    "end": "2852260"
  },
  {
    "text": "want to enforce so we're doing that same thing that is what you're doing when",
    "start": "2852260",
    "end": "2859760"
  },
  {
    "text": "you're building micro services you're not just writing micro services because",
    "start": "2859760",
    "end": "2865630"
  },
  {
    "text": "something somebody said it was cloud native and you should write there's all",
    "start": "2865630",
    "end": "2870890"
  },
  {
    "text": "kinds of amazing architectural benefits that you can access here and it what your whole scheme amounts to is you're",
    "start": "2870890",
    "end": "2877730"
  },
  {
    "text": "building what we call the inside out database you are a kind of building a",
    "start": "2877730",
    "end": "2883220"
  },
  {
    "text": "big custom-made distributed database it's not a database that anybody else",
    "start": "2883220",
    "end": "2889069"
  },
  {
    "text": "has ever heard of it's not some but some new spin on a relational database or a document database or something it's an",
    "start": "2889069",
    "end": "2895759"
  },
  {
    "text": "application but it's like this highly customized database that you present to",
    "start": "2895759",
    "end": "2901339"
  },
  {
    "text": "the world and I bet just think that's really cool that is to me the most fascinating architectural thing that's",
    "start": "2901339",
    "end": "2908269"
  },
  {
    "text": "happening around Kafka right now thanks for being here",
    "start": "2908269",
    "end": "2914590"
  },
  {
    "text": "[Applause]",
    "start": "2914590",
    "end": "2921409"
  }
]