[
  {
    "text": "i honest head start on senior director",
    "start": "0",
    "end": "15120"
  },
  {
    "text": "of software of the govt JBoss division to red hat and today i want to talk about our supersonic eclipse micro",
    "start": "15120",
    "end": "21480"
  },
  {
    "text": "profile runtime so there's two components to that and just as if you",
    "start": "21480",
    "end": "28289"
  },
  {
    "text": "have why if you have an application you can rate the talk after that at the end the first piece is our Quercus runtime",
    "start": "28289",
    "end": "35370"
  },
  {
    "text": "in Korkis is our initiative to to reintroduce cloud native to the cloud",
    "start": "35370",
    "end": "42270"
  },
  {
    "text": "native java the key features of orcas or",
    "start": "42270",
    "end": "47670"
  },
  {
    "text": "along three different dimensions the first is we really focused on the developer experience we what want to do",
    "start": "47670",
    "end": "52920"
  },
  {
    "text": "is take your existing runtimes that you're familiar with all the Java",
    "start": "52920",
    "end": "59609"
  },
  {
    "text": "Enterprise library is all the standard open source libraries and multi elegant some of them that we have and make that",
    "start": "59609",
    "end": "66390"
  },
  {
    "text": "a really good experience both from your desktop experience as well as a cloud develop meaning the cloud against the",
    "start": "66390",
    "end": "72420"
  },
  {
    "text": "cloud then there are two pieces that we're trying to merge our imperative and reactive api's which are at times at",
    "start": "72420",
    "end": "79770"
  },
  {
    "text": "odds and being able to scale from serverless functions to you know full",
    "start": "79770",
    "end": "87270"
  },
  {
    "text": "blown micro services as bad as you want them we produce either fat jars which",
    "start": "87270",
    "end": "94200"
  },
  {
    "text": "actually you'll see your car slimmed down relative to your traditional flat fat jar or a native native image which",
    "start": "94200",
    "end": "100259"
  },
  {
    "text": "is very very lean I think the goal being were optimizing for the cloud in terms of memory usage startup time for again",
    "start": "100259",
    "end": "108380"
  },
  {
    "text": "server less functions to micro services and in kubernetes native",
    "start": "108380",
    "end": "114979"
  },
  {
    "text": "so this is a small sampling of the libraries that were working with and",
    "start": "114979",
    "end": "120210"
  },
  {
    "text": "integrating into Korkis to enable these at the native level vertex hibernate",
    "start": "120210",
    "end": "125670"
  },
  {
    "text": "rest easy camel neti micro profile career nannies over the show Jagger",
    "start": "125670",
    "end": "131430"
  },
  {
    "text": "Prometheus Kafka in Finnish man and we probably have another thirty libraries that are part of the core guest family",
    "start": "131430",
    "end": "137250"
  },
  {
    "text": "at this point so what does it mean to be a native or a Korkis extension what does",
    "start": "137250",
    "end": "145050"
  },
  {
    "text": "it was it take to take a framework and make that cloud native there's there's a",
    "start": "145050",
    "end": "150900"
  },
  {
    "text": "number of pieces the first is you have to think about your your feature set as",
    "start": "150900",
    "end": "158099"
  },
  {
    "text": "a deployable content that has a build phase distinct from run Tech phase so",
    "start": "158099",
    "end": "163200"
  },
  {
    "text": "traditionally in Java what we have is reflection and configuration that happens during startup and then we have",
    "start": "163200",
    "end": "170549"
  },
  {
    "text": "a running phase so one of the key things that we do with the corpus framework is we separate those and introduce a",
    "start": "170549",
    "end": "175739"
  },
  {
    "text": "contract that clearly defines metadata and configuration versus your runtime",
    "start": "175739",
    "end": "181920"
  },
  {
    "text": "behavior the point being that allows us to segment out those behaviors and even",
    "start": "181920",
    "end": "187799"
  },
  {
    "text": "those dependencies and those startup costs from our native image so that's one of the key things and one of the",
    "start": "187799",
    "end": "194790"
  },
  {
    "text": "nice things about how we do that is it allows for a relatively easy unwrap",
    "start": "194790",
    "end": "199980"
  },
  {
    "text": "because you can go from I don't really want to get into all these details about what what reflection capabilities I do",
    "start": "199980",
    "end": "206970"
  },
  {
    "text": "or don't want how to deal with what configuration I want to extract as often",
    "start": "206970",
    "end": "213090"
  },
  {
    "text": "times you know you have fixed api's that are consuming a llam√≥ file an XML file a",
    "start": "213090",
    "end": "218190"
  },
  {
    "text": "JSON file or a configuration object and you know you just don't have the time at this right now as you're doing an",
    "start": "218190",
    "end": "224880"
  },
  {
    "text": "investigation to pull that stuff out so you can you can approach it as you want",
    "start": "224880",
    "end": "230420"
  },
  {
    "text": "what you're going to see is less benefit from the startup cost and more",
    "start": "230420",
    "end": "236040"
  },
  {
    "text": "Bree overhead because you've included stuff that you could potentially pull out during the build phase but you know that's up to you that's a benefit you",
    "start": "236040",
    "end": "242310"
  },
  {
    "text": "don't have to go all the way and so that the cork is built process is a set of",
    "start": "242310",
    "end": "248489"
  },
  {
    "text": "maven plugins that annotation compilers that go from your traditional compile",
    "start": "248489",
    "end": "256169"
  },
  {
    "text": "phase we look at what frameworks you use and what annotations you're using what features that you use and what",
    "start": "256169",
    "end": "261900"
  },
  {
    "text": "configuration files you use and that's every every single extension that's its job is to look at what's being used and",
    "start": "261900",
    "end": "268770"
  },
  {
    "text": "figure out how to best map that onto the grill VM or even the job of um there's",
    "start": "268770",
    "end": "275190"
  },
  {
    "text": "there's a benefit even in encourage Java mode for this this analysis and what we and then that produces basically a",
    "start": "275190",
    "end": "281430"
  },
  {
    "text": "dependency graph with all the feature sets identified the configuration identified and then we from that we can",
    "start": "281430",
    "end": "288960"
  },
  {
    "text": "produce either a relatively lean fat jar so it's slimmed down fat jar or go",
    "start": "288960",
    "end": "295020"
  },
  {
    "text": "through the ahead of time compliation and produce a native image that's incredibly light tanked in the",
    "start": "295020",
    "end": "304740"
  },
  {
    "text": "architecture that that allows this is illustrating this diagram so basically we reason the the bottom of the slides",
    "start": "304740",
    "end": "312750"
  },
  {
    "text": "ax hit the right in the previous line so you haven't target which is either hot spot or the grill VM native image rent",
    "start": "312750",
    "end": "320310"
  },
  {
    "text": "time which is substrate currently on top of that we we generate as part of the",
    "start": "320310",
    "end": "326159"
  },
  {
    "text": "dependency analysis at Jan Dex index which is our annotation in class",
    "start": "326159",
    "end": "332430"
  },
  {
    "text": "metadata that allows you to do reflection and announ code analysis",
    "start": "332430",
    "end": "338190"
  },
  {
    "text": "without actually loading code through through a class loader so it basically is a cache of all that information",
    "start": "338190",
    "end": "343740"
  },
  {
    "text": "allows you to quickly analyze for feature sets relative to your extension",
    "start": "343740",
    "end": "349800"
  },
  {
    "text": "so for example a hibernate things the GPA annotation is the jax-rs layers the commute the jax-rs",
    "start": "349800",
    "end": "355669"
  },
  {
    "text": "rest endpoint annotations gizmo is a framework built on top of the object web ASM library to simplify some of the the",
    "start": "355669",
    "end": "362809"
  },
  {
    "text": "by cooperating task is if you've ever written by code through the SM library it's a pain in the butt so this gives",
    "start": "362809",
    "end": "369139"
  },
  {
    "text": "you a higher level view of the types of things that you need to do as an extension writer but that that's pretty",
    "start": "369139",
    "end": "375979"
  },
  {
    "text": "high level I mean that's pretty low level details I mean typically very few of our extensions require that level of",
    "start": "375979",
    "end": "380989"
  },
  {
    "text": "analysis but if you do you have that capability then there's integration with the Grail SDK which basically is the the",
    "start": "380989",
    "end": "387619"
  },
  {
    "text": "low level substrate AP is that are doing things like class replacement",
    "start": "387619",
    "end": "393309"
  },
  {
    "text": "registering classes for reflection and then that that type of thing we have a",
    "start": "393309",
    "end": "399109"
  },
  {
    "text": "custom implementation of CDI called well mark that throws out some of the runtime",
    "start": "399109",
    "end": "404899"
  },
  {
    "text": "behavior some of the Damascene that CGI has so for example CA has portable",
    "start": "404899",
    "end": "410629"
  },
  {
    "text": "extensions which basically allow super-crazy runtime analysis and",
    "start": "410629",
    "end": "415819"
  },
  {
    "text": "querying of your beings to try and figure out patterns that's super expensive that a lot of",
    "start": "415819",
    "end": "421549"
  },
  {
    "text": "those those things require api is a grill doesn't the the the native substrate vm doesn't support so there",
    "start": "421549",
    "end": "429079"
  },
  {
    "text": "aren't certain lot of limitations on what you can do in a runtime so for example there's no dynamic class loading",
    "start": "429079",
    "end": "434509"
  },
  {
    "text": "things like that then the Korca scores is really the the place where we define",
    "start": "434509",
    "end": "441049"
  },
  {
    "text": "the configuration aspects the the abstractions for how an extension needs",
    "start": "441049",
    "end": "449119"
  },
  {
    "text": "to present its metadata and consume metadata exposes dependencies expose its",
    "start": "449119",
    "end": "454639"
  },
  {
    "text": "features relative to other extensions so there's a big interaction between extensions so you know the core is is",
    "start": "454639",
    "end": "460699"
  },
  {
    "text": "jax-rs CDI and on top of that you build and so for example i can have an",
    "start": "460699",
    "end": "468109"
  },
  {
    "text": "extension that is augmenting the jax-rs container by emitting what we call build",
    "start": "468109",
    "end": "474589"
  },
  {
    "text": "steps or features feature sets that describe behaviors that normal would have had to configure you know",
    "start": "474589",
    "end": "480970"
  },
  {
    "text": "with some Jack's risk custom provider configuration so there's an interaction",
    "start": "480970",
    "end": "486820"
  },
  {
    "text": "and dependency chain that that comes out from all these extensions that both",
    "start": "486820",
    "end": "492010"
  },
  {
    "text": "allow for a very nice layering so you can come in and replace you know the",
    "start": "492010",
    "end": "497260"
  },
  {
    "text": "hibernate layer with your own GPA layer just by replacing those the extension",
    "start": "497260",
    "end": "503500"
  },
  {
    "text": "and produce the same build features but then it also allows us to determine what is actually used because you have a",
    "start": "503500",
    "end": "509020"
  },
  {
    "text": "dependency chain that is only going to have and typically a subset of what you",
    "start": "509020",
    "end": "514090"
  },
  {
    "text": "normally would have in an application for example that's exercised in every feature of JPA or every feature of",
    "start": "514090",
    "end": "520030"
  },
  {
    "text": "jax-rs what what allows us to do is then eliminate that code in the native image",
    "start": "520030",
    "end": "525370"
  },
  {
    "text": "so that's how we get to a super-tight native image it also can eliminate code",
    "start": "525370",
    "end": "530530"
  },
  {
    "text": "even in the JVM for a target so what does that actually mean I mean wonder",
    "start": "530530",
    "end": "536620"
  },
  {
    "text": "what are we talking about in terms of sizes so here's an example of two two applications to micro services one is",
    "start": "536620",
    "end": "542950"
  },
  {
    "text": "just a strictly rest-based endpoint that handles you know an HTTP request the",
    "start": "542950",
    "end": "548770"
  },
  {
    "text": "other is a rest endpoint on top of a GPA application so we're actually going down to the database and pulling that in and",
    "start": "548770",
    "end": "555640"
  },
  {
    "text": "what we're showing are three different levels of three different levels of",
    "start": "555640",
    "end": "560890"
  },
  {
    "text": "optimization so the red is your traditional clay cloud native stack which is some you know jp-8 or some fat",
    "start": "560890",
    "end": "568630"
  },
  {
    "text": "to our based abstraction that can be spring boot or thorn tail or something",
    "start": "568630",
    "end": "573640"
  },
  {
    "text": "like that the next layer is Korkis on top of open JDK so it is a Java VM based",
    "start": "573640",
    "end": "579990"
  },
  {
    "text": "executable or fat jar but you can see those numbers that we've slimmed it down",
    "start": "579990",
    "end": "586600"
  },
  {
    "text": "and though the white is the actual native image so look at these below now",
    "start": "586600",
    "end": "591700"
  },
  {
    "text": "so the first comparison is the resident stack size of these three options so for",
    "start": "591700",
    "end": "599410"
  },
  {
    "text": "a rest application that in this particular case in degrees in like spring boot four that came waiting at 140 megabytes our",
    "start": "599410",
    "end": "607420"
  },
  {
    "text": "Korkis fat jar came in at 74 megabytes and the so why is that different the",
    "start": "607420",
    "end": "615530"
  },
  {
    "text": "reason it's different is that we pulled out all of the configuration files that are necessary for parsing the",
    "start": "615530",
    "end": "623720"
  },
  {
    "text": "annotations the jax-rs annotations parsing the jax-rs configuration and and",
    "start": "623720",
    "end": "630410"
  },
  {
    "text": "those type of things because we don't need those at runtime it's a one-time thing then the next is the native image so the",
    "start": "630410",
    "end": "636980"
  },
  {
    "text": "name and native images an order of magnitude smaller than your traditional fat jar so now if we add in JPA the the",
    "start": "636980",
    "end": "648020"
  },
  {
    "text": "traditional jars up to 200 18 K the our open take a version of corpus is 130",
    "start": "648020",
    "end": "655730"
  },
  {
    "text": "megabytes so roughly a little more than half and the negative images is up to 35",
    "start": "655730",
    "end": "663560"
  },
  {
    "text": "megabytes but still you know a factor of seven not quite not quite as good as an order of magnitude because you do have a",
    "start": "663560",
    "end": "669860"
  },
  {
    "text": "lot of you know resident classes that do have to remain around for the 2k functionality but still close to menorah",
    "start": "669860",
    "end": "676460"
  },
  {
    "text": "magnitude a difference so in terms of startup times just the simple rest",
    "start": "676460",
    "end": "682040"
  },
  {
    "text": "application with a handling to the first response was four seconds the cork is this is actually an interesting one the",
    "start": "682040",
    "end": "688490"
  },
  {
    "text": "cork is it's still on the JVM is still significantly faster and why again why is that the reason being we're",
    "start": "688490",
    "end": "695480"
  },
  {
    "text": "not doing annotation processing we're not doing configuration parsing you know we're just getting - we pulled your",
    "start": "695480",
    "end": "702200"
  },
  {
    "text": "configuration that was already defined at Build time into the running image",
    "start": "702200",
    "end": "707240"
  },
  {
    "text": "from classes that we've generated with byte code to provide very fast start time and then with an",
    "start": "707240",
    "end": "712499"
  },
  {
    "text": "worse or superfast down to the point one zero one seconds when we had JPA we're",
    "start": "712499",
    "end": "720269"
  },
  {
    "text": "still seeing significant advantages between their traditional fat you are",
    "start": "720269",
    "end": "725489"
  },
  {
    "text": "the openjdk one and then the native image so this is what is going to allow",
    "start": "725489",
    "end": "731009"
  },
  {
    "text": "us to start getting back to using java force or even serverless functions",
    "start": "731009",
    "end": "736109"
  },
  {
    "text": "you know the overhead for this is on the order in terms of startup time and",
    "start": "736109",
    "end": "742949"
  },
  {
    "text": "memory as even what you would see where they go application and certainly it's better than your typical node.js",
    "start": "742949",
    "end": "749449"
  },
  {
    "text": "application so that's the first that's",
    "start": "749449",
    "end": "754619"
  },
  {
    "text": "the first piece that's the corpus runtime container that does the cloud native piece if you're interested in",
    "start": "754619",
    "end": "760979"
  },
  {
    "text": "that if you're interested in learning more about how we do that and go to the website and take a look at the numerous",
    "start": "760979",
    "end": "766889"
  },
  {
    "text": "QuickStart projects that we have across all the typical feature sets you know those those ten I showed are only a",
    "start": "766889",
    "end": "772769"
  },
  {
    "text": "fraction what we have so far we have a number of extensions and it's growing daily so you can take a look at what",
    "start": "772769",
    "end": "779039"
  },
  {
    "text": "those extensions are what it what they do what it takes to be an extension and then links to our developer and",
    "start": "779039",
    "end": "785509"
  },
  {
    "text": "community resources and as Java do between here says the reports of my",
    "start": "785509",
    "end": "791369"
  },
  {
    "text": "death in the cloud are greatly exaggerated because of projects like Korkis that are building upon the Grail",
    "start": "791369",
    "end": "797939"
  },
  {
    "text": "vm and others so I think Javad still has a bright future in the cloud the second",
    "start": "797939",
    "end": "804689"
  },
  {
    "text": "part of this talk is about the Eclipse micro profile feature said so Eclipse micro profile has targeted at bringing",
    "start": "804689",
    "end": "811970"
  },
  {
    "text": "enterprise Java developers and to the micro service and cloud development environments and so here we're going to",
    "start": "811970",
    "end": "817739"
  },
  {
    "text": "go over a few of the capabilities that we have on the to release so what is if you haven't",
    "start": "817739",
    "end": "824370"
  },
  {
    "text": "heard of Markham profile before it's a community of developers vendors and",
    "start": "824370",
    "end": "829819"
  },
  {
    "text": "individuals that are part of the Eclipse Foundation that are finding",
    "start": "829819",
    "end": "835040"
  },
  {
    "text": "specifications to basically introduce",
    "start": "835040",
    "end": "840199"
  },
  {
    "text": "enterprise developers or bring enterprise developers into the cloud so",
    "start": "841279",
    "end": "849269"
  },
  {
    "text": "we have several traditional Java Enterprise Java vendors influential user",
    "start": "849269",
    "end": "855209"
  },
  {
    "text": "groups like London Java community so Java and even surprising vendors like",
    "start": "855209",
    "end": "860220"
  },
  {
    "text": "Microsoft you may not have thought of them as a big Java and Java EE vendor but they actually aren't pretty heavy",
    "start": "860220",
    "end": "866040"
  },
  {
    "text": "Java shop and certainly are obviously big into the cloud so they are involved in this initiative so the what what my",
    "start": "866040",
    "end": "875670"
  },
  {
    "text": "profile does is basically define sets of specifications that define interoperability and api's starting from",
    "start": "875670",
    "end": "883529"
  },
  {
    "text": "a core layer so we start with four enterprise Java foundational api c bi",
    "start": "883529",
    "end": "889709"
  },
  {
    "text": "json p jax-rs and takes on being and then on top of that we define api's for",
    "start": "889709",
    "end": "895949"
  },
  {
    "text": "other feature sets that we we believe are interesting for micro service developers in the cloud so it's the rest",
    "start": "895949",
    "end": "902579"
  },
  {
    "text": "of this talk we can talk about these these eight feature sets fault tolerance metrics GT routine propagation health",
    "start": "902579",
    "end": "908550"
  },
  {
    "text": "check config rest client open tracing and open API and what those are so we",
    "start": "908550",
    "end": "918029"
  },
  {
    "text": "start with configuration because it's it's one of the more foundational specifications and the Tivoli used across all the market profile",
    "start": "918029",
    "end": "924600"
  },
  {
    "text": "specifications what it does is defined an SPI and CDI behaviors for",
    "start": "924600",
    "end": "930889"
  },
  {
    "text": "externalizing configuration information into string based stores which we call",
    "start": "930889",
    "end": "937040"
  },
  {
    "text": "configuration sources we defined three based configuration sources that every",
    "start": "937040",
    "end": "942179"
  },
  {
    "text": "implementation has to support and those are based on integration environment variables system properties and then a",
    "start": "942179",
    "end": "948689"
  },
  {
    "text": "specific micro profile configured a properties file the SPI allows for you",
    "start": "948689",
    "end": "954600"
  },
  {
    "text": "to define your own custom configuration sources to integrate your own stream base metadata so for example I can",
    "start": "954600",
    "end": "961170"
  },
  {
    "text": "define I can a config map base source for you know cuber Nettie's or OpenShift environments that have those that type",
    "start": "961170",
    "end": "967439"
  },
  {
    "text": "sources I would say yeah Maldives etc so there's a relatively simple API to",
    "start": "967439",
    "end": "972689"
  },
  {
    "text": "implement meaning kind of string value mapping configuration system it has a",
    "start": "972689",
    "end": "979889"
  },
  {
    "text": "pretty extensible API for in the injection and both programmatically",
    "start": "979889",
    "end": "986939"
  },
  {
    "text": "envyus EDI injection you can define your own custom types so for you can have you",
    "start": "986939",
    "end": "993209"
  },
  {
    "text": "know injection internet addresses whatever arbitrarily complex types you",
    "start": "993209",
    "end": "1000170"
  },
  {
    "text": "can define how you map those from a string to the ejection point",
    "start": "1000170",
    "end": "1005509"
  },
  {
    "text": "so a simple example of illustrates your typical use cases that you have a jax-rs",
    "start": "1005509",
    "end": "1013139"
  },
  {
    "text": "endpoint annotated with this configuration property annotation then",
    "start": "1013139",
    "end": "1019050"
  },
  {
    "text": "you give it a name for the configuration property that's been externalized you can have default double values so here",
    "start": "1019050",
    "end": "1025319"
  },
  {
    "text": "we're injection of some high value to five decimals if it if you don't so if",
    "start": "1025319",
    "end": "1033449"
  },
  {
    "text": "you don't have a default value and this isn't an optional this you can inject an optional type if you don't we have a requirement but if you have it defined",
    "start": "1033449",
    "end": "1039870"
  },
  {
    "text": "as this that means that value has to be defined any configuration property or it's going to be a runtime exception so",
    "start": "1039870",
    "end": "1049080"
  },
  {
    "text": "CDI will take care of this and then we're just showing the usage of it in the the rest endpoints a programmatic",
    "start": "1049080",
    "end": "1055799"
  },
  {
    "text": "example is shown here where we're looking up the current configuration object and then looking up a value in",
    "start": "1055799",
    "end": "1063559"
  },
  {
    "text": "specifying the type that it should be cast to and so there is as I said there",
    "start": "1063559",
    "end": "1069659"
  },
  {
    "text": "is an SPI that allows you to map from string values to arbitrarily complex",
    "start": "1069659",
    "end": "1075330"
  },
  {
    "text": "types and and the configuration out of the box there's support for many",
    "start": "1075330",
    "end": "1081450"
  },
  {
    "text": "standard string value types so here's here's an example of what the default",
    "start": "1081450",
    "end": "1086960"
  },
  {
    "text": "configuration property file looks like we just give again your standard Java properties file name value pairs those",
    "start": "1086960",
    "end": "1093330"
  },
  {
    "text": "are the the three values that we reference in that way in that example so here we've overridden",
    "start": "1093330",
    "end": "1100260"
  },
  {
    "text": "the default value of injected pi from five decimals to ten decimal so we'll see in the demo that that is hopefully",
    "start": "1100260",
    "end": "1107190"
  },
  {
    "text": "written correctly the next specification is open API open API is basically a",
    "start": "1107190",
    "end": "1115080"
  },
  {
    "text": "mapping of the language agnostic open API version 3 specification for",
    "start": "1115080",
    "end": "1121080"
  },
  {
    "text": "describing a collection event arrest endpoint metadata into the job space and particularly following the",
    "start": "1121080",
    "end": "1128050"
  },
  {
    "text": "conventions of the market profile focusing on CBI and annotation based",
    "start": "1128050",
    "end": "1133240"
  },
  {
    "text": "programming it's by default you don't actually need to do anything to generate",
    "start": "1133240",
    "end": "1138400"
  },
  {
    "text": "an open API documentation or a set of a description of your huge X or as",
    "start": "1138400",
    "end": "1143830"
  },
  {
    "text": "endpoints and we'll see that in the demonstration so you only tip you only",
    "start": "1143830",
    "end": "1150430"
  },
  {
    "text": "need use the annotations if you want to augment that information and there's a number of levels of your ability to",
    "start": "1150430",
    "end": "1158500"
  },
  {
    "text": "customize information now corpus has a number of development mode so we have a",
    "start": "1158500",
    "end": "1163780"
  },
  {
    "text": "mode where we're running typically as a developer would run at his desktop for",
    "start": "1163780",
    "end": "1169120"
  },
  {
    "text": "his his fundamental development and when we're running in that mode we actually have integration with a swagger UI so",
    "start": "1169120",
    "end": "1174220"
  },
  {
    "text": "you can immediately see what your endpoints look like without having to do anything or look at to look at what your",
    "start": "1174220",
    "end": "1180700"
  },
  {
    "text": "customization has done to it and we'll see that in the demo as well so an example of using those those annotations",
    "start": "1180700",
    "end": "1186280"
  },
  {
    "text": "to augment a jax-rs application is shown here where we have this open API",
    "start": "1186280",
    "end": "1191650"
  },
  {
    "text": "definition annotation and we're adding information version contact information",
    "start": "1191650",
    "end": "1198130"
  },
  {
    "text": "for the corpus community email list home page license",
    "start": "1198130",
    "end": "1203760"
  },
  {
    "text": "oh I have actually more information and in the demo we'll see that you can add things like super server URLs external",
    "start": "1205460",
    "end": "1212300"
  },
  {
    "text": "links to documentation etc it's the the open API annotation says actually immense quite immense",
    "start": "1212300",
    "end": "1218180"
  },
  {
    "text": "but fortunately you don't have to deal with most of it so that's application level thing if we drop down to an",
    "start": "1218180",
    "end": "1224300"
  },
  {
    "text": "endpoint level here we're specifying a tag for time and timing service method",
    "start": "1224300",
    "end": "1231590"
  },
  {
    "text": "so it's a classification tool here's an external documentation - some sort of website and then a summary description",
    "start": "1231590",
    "end": "1239000"
  },
  {
    "text": "of the operation and we'll see in the swagger UI that those are the values that are manifested in the API",
    "start": "1239000",
    "end": "1244940"
  },
  {
    "text": "description okay next is open tracing so",
    "start": "1244940",
    "end": "1252320"
  },
  {
    "text": "open tracing is similar to open API it's a language agnostic definition of how you you track rest endpoints in a",
    "start": "1252320",
    "end": "1260360"
  },
  {
    "text": "service mesh the the MT open tracing name effort is a mapping of those",
    "start": "1260360",
    "end": "1267320"
  },
  {
    "text": "standards into Java and providing annotations all you to customize the the",
    "start": "1267320",
    "end": "1272600"
  },
  {
    "text": "tracing information that's emitted so again by default you don't need to do anything automatically all of your Jax",
    "start": "1272600",
    "end": "1278780"
  },
  {
    "text": "arrests endpoints are traced and sent to a jeager instance for example based on",
    "start": "1278780",
    "end": "1285920"
  },
  {
    "text": "the configuration that's that setup with the Mike profile parameters and then we",
    "start": "1285920",
    "end": "1292250"
  },
  {
    "text": "have annotations that allow you to fine-tune how that trace information is identified and you can even inject the",
    "start": "1292250",
    "end": "1299420"
  },
  {
    "text": "open tracing endpoint to have intra business method method or intra rest",
    "start": "1299420",
    "end": "1306560"
  },
  {
    "text": "endpoint Saban's for example if more fine-grain definitions of how your your endpoints are behaving and so a",
    "start": "1306560",
    "end": "1314460"
  },
  {
    "text": "simple example here is where we're in the first case customizing how the",
    "start": "1314460",
    "end": "1321260"
  },
  {
    "text": "operation is going to show up in a jig or console so here's the name that will",
    "start": "1321260",
    "end": "1327930"
  },
  {
    "text": "provide for that and here we're excluding an endpoint from being traced so by default everything is traced so this is a",
    "start": "1327930",
    "end": "1334680"
  },
  {
    "text": "mechanism if you have endpoints if you don't want to be showing up in traces if you would use that simple annotation to",
    "start": "1334680",
    "end": "1340590"
  },
  {
    "text": "accomplish so health check is the other and another",
    "start": "1340590",
    "end": "1347490"
  },
  {
    "text": "fundamental component in-service mesh environments where you know typically kubernetes or OpenShift environments are",
    "start": "1347490",
    "end": "1353520"
  },
  {
    "text": "probing your container for basic aliveness and responsiveness and if it's not responding well it will fail it and",
    "start": "1353520",
    "end": "1360390"
  },
  {
    "text": "restart in the home setting or cover so the empty health check defines two",
    "start": "1360390",
    "end": "1365940"
  },
  {
    "text": "levels of information around that concept the first is it provides a basic probe of the age of status that would be",
    "start": "1365940",
    "end": "1373650"
  },
  {
    "text": "reported being HTTP 200 or you know for success or some other one for failure",
    "start": "1373650",
    "end": "1380130"
  },
  {
    "text": "but also defines a mechanism for generating that it takes on payload to give you additional information about",
    "start": "1380130",
    "end": "1385830"
  },
  {
    "text": "the state of your health check so most service environments don't look",
    "start": "1385830",
    "end": "1391169"
  },
  {
    "text": "at that but it is super valuable for devops is sort of services billion they",
    "start": "1391169",
    "end": "1396779"
  },
  {
    "text": "can go out and probe the health endpoint and find out information that developers provided about that walks you see that a",
    "start": "1396779",
    "end": "1403559"
  },
  {
    "text": "good example that and the demo so how do you implement a health check endpoint",
    "start": "1403559",
    "end": "1409039"
  },
  {
    "text": "you annotate your edge X or s and point with the Health annotation and then you",
    "start": "1409039",
    "end": "1414630"
  },
  {
    "text": "implement this health check callback and that is this callback here where you're returning the health check response that",
    "start": "1414630",
    "end": "1422850"
  },
  {
    "text": "is that is generated from a builder that has a named a named value and so",
    "start": "1422850",
    "end": "1429720"
  },
  {
    "text": "basically what happens when you query the height the the top level endpoint",
    "start": "1429720",
    "end": "1434850"
  },
  {
    "text": "for the health check you get a collection of these individual health checks so by name and then each each",
    "start": "1434850",
    "end": "1441870"
  },
  {
    "text": "named health check element has a payload describing the status or information about that",
    "start": "1441870",
    "end": "1447020"
  },
  {
    "text": "so in this case it's it's some pseudo dis check operation where we're going",
    "start": "1447020",
    "end": "1452480"
  },
  {
    "text": "out and checked in a path that was based on a configuration value that we they",
    "start": "1452480",
    "end": "1458030"
  },
  {
    "text": "rejected via the micro profile config this is again another comment feature of the micro profile specs that they build",
    "start": "1458030",
    "end": "1464300"
  },
  {
    "text": "upon each other and we use you know things as you guess as I make sense and as I said my profile config is one of",
    "start": "1464300",
    "end": "1471290"
  },
  {
    "text": "the most pervasive specifications because every other one reference is it for these are external izybelle",
    "start": "1471290",
    "end": "1476390"
  },
  {
    "text": "information points",
    "start": "1476390",
    "end": "1479530"
  },
  {
    "text": "so next is metrics that's basically analog to health is you know okay fine",
    "start": "1481450",
    "end": "1486610"
  },
  {
    "text": "it's up but now what's actually happening in the application so the metrics specification adds a number of",
    "start": "1486610",
    "end": "1495490"
  },
  {
    "text": "required well it has basically three levels you have a base level that is giving basic information about the",
    "start": "1495490",
    "end": "1500710"
  },
  {
    "text": "runtime that you'd expect from any any runtime environment they allow for a",
    "start": "1500710",
    "end": "1506980"
  },
  {
    "text": "vendor specific set of specifications that would just be specific to a particular runtime and then we have",
    "start": "1506980",
    "end": "1514090"
  },
  {
    "text": "application level specifications which are metrics that you define as relevant to your application using annotations",
    "start": "1514090",
    "end": "1520270"
  },
  {
    "text": "that are defined by the specification and the text that we support there are counted gauge metered histogram and time",
    "start": "1520270",
    "end": "1526480"
  },
  {
    "text": "measures the specification all the font also defines how you emit those or obtain those metrics from its endpoints",
    "start": "1526480",
    "end": "1533650"
  },
  {
    "text": "in both JSON and Prometheus text based format so you can integrate with your",
    "start": "1533650",
    "end": "1539340"
  },
  {
    "text": "cloud environment monitoring to us and so an example of a application specific",
    "start": "1539340",
    "end": "1545950"
  },
  {
    "text": "set of metrics is illustrated here where we're injecting a metric of type counter",
    "start": "1545950",
    "end": "1552940"
  },
  {
    "text": "and it's an endpoint counter we've had a time metric on this this method so",
    "start": "1552940",
    "end": "1559090"
  },
  {
    "text": "that's gonna basically generate a timed histogram historical view of the",
    "start": "1559090",
    "end": "1565330"
  },
  {
    "text": "operations method and then we have a gauge method on this counter which is",
    "start": "1565330",
    "end": "1570370"
  },
  {
    "text": "actually used by other methods and a gauge is basically a a single valued thing though a single",
    "start": "1570370",
    "end": "1576139"
  },
  {
    "text": "bagger though that is monitored over time okay fault tolerance is another",
    "start": "1576139",
    "end": "1588100"
  },
  {
    "text": "feature that you need in micro service meshes because as soon as you start displaying services out you start having",
    "start": "1588100",
    "end": "1594080"
  },
  {
    "text": "issues with you know inconsistencies of availability and network failures and",
    "start": "1594080",
    "end": "1601190"
  },
  {
    "text": "you know the usual so it's fine there are development benefits to going",
    "start": "1601190",
    "end": "1607730"
  },
  {
    "text": "to the micro service pattern but there's also but that comes at the cost of operational problems so fault tolerant",
    "start": "1607730",
    "end": "1614510"
  },
  {
    "text": "mechanisms are are there to both control",
    "start": "1614510",
    "end": "1619850"
  },
  {
    "text": "how requests are collated and what you",
    "start": "1619850",
    "end": "1625370"
  },
  {
    "text": "do when when failures happen in what we have here is it just a simple example of",
    "start": "1625370",
    "end": "1630529"
  },
  {
    "text": "the fallback feature so this rest endpoint is annotated with a fallback",
    "start": "1630529",
    "end": "1638210"
  },
  {
    "text": "method and a timeout so what this says is that if this endpoint doesn't respond",
    "start": "1638210",
    "end": "1644000"
  },
  {
    "text": "within 500 milliseconds then execute this fallback code and return that instead it's a common pattern that",
    "start": "1644000",
    "end": "1651409"
  },
  {
    "text": "history and other type of fault tolerant features provide I mean this is this is",
    "start": "1651409",
    "end": "1657350"
  },
  {
    "text": "one of the probably this is one of the few micro profile specs that can",
    "start": "1657350",
    "end": "1662539"
  },
  {
    "text": "potentially be completely superseded by a mesh environment so technologies like",
    "start": "1662539",
    "end": "1667580"
  },
  {
    "text": "sto for example before I provide a lot of these same features so there's a little bit of an overlap between you",
    "start": "1667580",
    "end": "1674059"
  },
  {
    "text": "know what you actually want the developer doing versus what you want configured in a devops layer like a sto",
    "start": "1674059",
    "end": "1680419"
  },
  {
    "text": "service mesh you have to I mean that's one of things we keep watching as as the",
    "start": "1680419",
    "end": "1685760"
  },
  {
    "text": "micro profile specs evolve is you know what is the proper what is the proper set of API is that we should be exposing",
    "start": "1685760",
    "end": "1692210"
  },
  {
    "text": "to developer versus you know leaving in the hands of them soon as we gain more experience with a CEO and service mission type",
    "start": "1692210",
    "end": "1698350"
  },
  {
    "text": "environments you know I think this is you know one of our specs that potentially wall will need to evolve the",
    "start": "1698350",
    "end": "1706299"
  },
  {
    "text": "next one is a rest client now specification and basically this is a standardization of what many jax-rs",
    "start": "1706299",
    "end": "1713410"
  },
  {
    "text": "frameworks have done for a long time namely provided type safe proxy for a",
    "start": "1713410",
    "end": "1718750"
  },
  {
    "text": "said event for collection of endpoint functionality and it provides both the",
    "start": "1718750",
    "end": "1725799"
  },
  {
    "text": "ability to inject that type safe interface as well as a programmatic ability to build up and define",
    "start": "1725799",
    "end": "1733559"
  },
  {
    "text": "customization of that and the key thing is that this integrates with all of the other features and api's that already",
    "start": "1733559",
    "end": "1741190"
  },
  {
    "text": "exist so for example jax-rs has a lot of provider and customization filters",
    "start": "1741190",
    "end": "1747240"
  },
  {
    "text": "mapping and all that type of stuff that you don't happy but are not thrown out",
    "start": "1747240",
    "end": "1752350"
  },
  {
    "text": "just because you're using a tactic proxy those integrate as you would expect same with the other specifications that we've",
    "start": "1752350",
    "end": "1758470"
  },
  {
    "text": "defined so fault tolerance tracing and metrics do the right thing when you use those annotations on the rest of though",
    "start": "1758470",
    "end": "1764860"
  },
  {
    "text": "the type save the rest the macro profiles client api if you have tracing",
    "start": "1764860",
    "end": "1770620"
  },
  {
    "text": "and I call out to a type proxy that tracing the information they find on the interface is going to be propagated on",
    "start": "1770620",
    "end": "1776679"
  },
  {
    "text": "that if I have security then the security headers are going to be propagated so how do you use this API",
    "start": "1776679",
    "end": "1784480"
  },
  {
    "text": "well the first thing is you define what your type safe interface is so here and then you use the sanitation to to define",
    "start": "1784480",
    "end": "1791020"
  },
  {
    "text": "that this is can be used as a fault this can also be overridden by",
    "start": "1791020",
    "end": "1796360"
  },
  {
    "text": "a micro profile configuration value as well but I defined the interface that has the representation of the jax-rs",
    "start": "1796360",
    "end": "1804929"
  },
  {
    "text": "endpoints that I would expect that I want from my Tech's a proxy it's in this",
    "start": "1804929",
    "end": "1810159"
  },
  {
    "text": "case have the path the type and I'm returning and now object you know how to",
    "start": "1810159",
    "end": "1818350"
  },
  {
    "text": "actually use that one or now in a jax-rs service actually just inject that",
    "start": "1818350",
    "end": "1823720"
  },
  {
    "text": "endpoint that wants to consume that service so here I have another check",
    "start": "1823720",
    "end": "1829659"
  },
  {
    "text": "service endpoint and I use the rest client annotation to inject this world",
    "start": "1829659",
    "end": "1835299"
  },
  {
    "text": "clock API that's if you can define the interface that defined the previous slide so now in this method the my",
    "start": "1835299",
    "end": "1842380"
  },
  {
    "text": "texture is an endpoint now I'm using the types a proxy to go and make that query",
    "start": "1842380",
    "end": "1848740"
  },
  {
    "text": "return that object and we'll look at some some of this in the demo as well so",
    "start": "1848740",
    "end": "1856480"
  },
  {
    "text": "the last one we're going to look at is the micro profile GWT propagation standard so typically you when you're",
    "start": "1856480",
    "end": "1865240"
  },
  {
    "text": "writing micro services their circle us and we need so then we need to propagate or define the security context for",
    "start": "1865240",
    "end": "1872500"
  },
  {
    "text": "authentication and authorization as as part of the payload for the request and a popular popular set of standards based",
    "start": "1872500",
    "end": "1882010"
  },
  {
    "text": "on JSON web tokens starting at the same 519 RFC that reference is a number other",
    "start": "1882010",
    "end": "1888190"
  },
  {
    "text": "ones is is what we based the micro profile do propagation is back on and what we",
    "start": "1888190",
    "end": "1894790"
  },
  {
    "text": "basically so those specifications just to find a lot of what-ifs a lot of attributes a lot of claims a lot of",
    "start": "1894790",
    "end": "1901200"
  },
  {
    "text": "standards a lot of ways that you could do things but there's no interoperability concern there so",
    "start": "1901200",
    "end": "1908350"
  },
  {
    "text": "basically that was the focus of the specification is to lock down some of the ways that you could use these tokens",
    "start": "1908350",
    "end": "1914710"
  },
  {
    "text": "such that you can actually obtain interoperability between micro profile containers so what we did do is define",
    "start": "1914710",
    "end": "1920710"
  },
  {
    "text": "the bearer authentication scheme that requires the RS 256 sig sign tokens so",
    "start": "1920710",
    "end": "1927880"
  },
  {
    "text": "that's a jws we added a new claim that defines a collection of roles called",
    "start": "1927880",
    "end": "1935200"
  },
  {
    "text": "groups that we think that can also use for role based authorization similar to",
    "start": "1935200",
    "end": "1941590"
  },
  {
    "text": "what you would see in enterprise Java standards where you have the security",
    "start": "1941590",
    "end": "1947940"
  },
  {
    "text": "the common security indicate contagion annotations like rules allowed etc and",
    "start": "1947940",
    "end": "1953440"
  },
  {
    "text": "actually we leverage those same annotations for the same purpose as well",
    "start": "1953440",
    "end": "1958590"
  },
  {
    "text": "then we integrate with those container api's by defining a an interface for the",
    "start": "1958590",
    "end": "1964150"
  },
  {
    "text": "token that's an extension of the Java security principle interface and then we allow for injection or lookup of the",
    "start": "1964150",
    "end": "1970330"
  },
  {
    "text": "individual claims on that on the token as part of as part of your your endpoint",
    "start": "1970330",
    "end": "1976590"
  },
  {
    "text": "so for example a simple endpoint that is",
    "start": "1976590",
    "end": "1982020"
  },
  {
    "text": "using security and needs access the token would eject it be that interface",
    "start": "1982020",
    "end": "1987330"
  },
  {
    "text": "here we're injecting a particular you can claim from that token this is the",
    "start": "1987330",
    "end": "1993010"
  },
  {
    "text": "jax-rs security context so here we're showing that the",
    "start": "1993010",
    "end": "1998730"
  },
  {
    "text": "junu between authentication scheme integration for that so when I call this I'll see I'll see the the micro profile",
    "start": "1998730",
    "end": "2006900"
  },
  {
    "text": "authorization scheme here I'm making a call to that programmatic is a user in a",
    "start": "2006900",
    "end": "2012539"
  },
  {
    "text": "role that is going to that map's back to the group's claim that was added to the token okay and then we're looking at the",
    "start": "2012539",
    "end": "2022289"
  },
  {
    "text": "username so get name that's the principal name again that will map back to one of several standard claims the",
    "start": "2022289",
    "end": "2029610"
  },
  {
    "text": "the preferred username the subject or the UPN there's a hierarchy of claims",
    "start": "2029610",
    "end": "2034620"
  },
  {
    "text": "that define how that users represented in your application for potentially",
    "start": "2034620",
    "end": "2041429"
  },
  {
    "text": "other lookups I mean here's another example where we're using a custom claim",
    "start": "2041429",
    "end": "2047090"
  },
  {
    "text": "in this case zone info that we've added so if we have to we're gonna use key to",
    "start": "2047090",
    "end": "2052888"
  },
  {
    "text": "define as our ending identity provider and JWT source and then we've set up",
    "start": "2052889",
    "end": "2058618"
  },
  {
    "text": "users with in addition to the standard RFC 7519 claims you have the ability to",
    "start": "2058619",
    "end": "2067138"
  },
  {
    "text": "add arbitrary claims as well so what we've done here is to find a zone info for a time zone we're going to use that",
    "start": "2067139",
    "end": "2073530"
  },
  {
    "text": "as basically a service that layers on top of that public world clock API which",
    "start": "2073530",
    "end": "2079560"
  },
  {
    "text": "returns time and universal time coordinates so we're going to charge people if they want the time in their",
    "start": "2079560",
    "end": "2085080"
  },
  {
    "text": "own time zone and we're going to base that upon the token information as an example",
    "start": "2085080",
    "end": "2090658"
  },
  {
    "text": "and again here so when we secure this is a secured method that requires a world",
    "start": "2090659",
    "end": "2097569"
  },
  {
    "text": "clock subscribers build accesses that's again that's a standard Enterprise Java",
    "start": "2097569",
    "end": "2104400"
  },
  {
    "text": "annotation so again as with most bakshy use the micro file config to define the",
    "start": "2104400",
    "end": "2110619"
  },
  {
    "text": "externalizing behaviors the GWT spec has a number of ways that you can define how",
    "start": "2110619",
    "end": "2118390"
  },
  {
    "text": "you how the container I think that authorizes or validates the token so the",
    "start": "2118390",
    "end": "2125589"
  },
  {
    "text": "first thing you need to know is who signed it what's the public key of the signer and the next key piece of information is who are the issue what",
    "start": "2125589",
    "end": "2132670"
  },
  {
    "text": "the issuer claim was so both of those things are externalized here via this",
    "start": "2132670",
    "end": "2137829"
  },
  {
    "text": "micro profile configuration information",
    "start": "2137829",
    "end": "2141900"
  },
  {
    "text": "okay let's try and pull all this together in a demo so what we have is a",
    "start": "2144000",
    "end": "2149270"
  },
  {
    "text": "number of containers two of which are",
    "start": "2149270",
    "end": "2154950"
  },
  {
    "text": "Korkis containers so we have two Korkis containers that contain rest endpoints",
    "start": "2154950",
    "end": "2161760"
  },
  {
    "text": "that are awed vented with Health metrics open tracing and the security API we",
    "start": "2161760",
    "end": "2169560"
  },
  {
    "text": "have another image that includes rest Health metrics over tracing GWT the open",
    "start": "2169560",
    "end": "2176760"
  },
  {
    "text": "API fault tolerance and the rest client and for not a good reason we through the",
    "start": "2176760",
    "end": "2182910"
  },
  {
    "text": "web application front-end just because I didn't want to create yet another image but normally this would also be pulled",
    "start": "2182910",
    "end": "2188580"
  },
  {
    "text": "out those talked to doctor base instance and a jacket the docker base",
    "start": "2188580",
    "end": "2194940"
  },
  {
    "text": "key clicking cloak instance so this is where the you know the front-end is giving the token well this is the where",
    "start": "2194940",
    "end": "2201780"
  },
  {
    "text": "the front-end signs in with the key cloak to get the JSON web token validate the user that token comes back and then",
    "start": "2201780",
    "end": "2207210"
  },
  {
    "text": "that's used for calls over to the secured web service these use the the rest client API to actually talk to this",
    "start": "2207210",
    "end": "2214680"
  },
  {
    "text": "just public Internet service that's sitting out there that you can go and curl right now we integrated do a taxi",
    "start": "2214680",
    "end": "2222780"
  },
  {
    "text": "proxies and the rest client interface all right so here's here's the front-end",
    "start": "2222780",
    "end": "2229560"
  },
  {
    "text": "that basically is just pulling those services together via rest call solicitors let's pull that out",
    "start": "2229560",
    "end": "2236750"
  },
  {
    "text": "all right so that is that application what we have running here are those two",
    "start": "2240980",
    "end": "2247590"
  },
  {
    "text": "demo images and Korkis containers this one is the the secured one that's running in a native mode this is running",
    "start": "2247590",
    "end": "2254940"
  },
  {
    "text": "in developer mode so that we can have access to the swagger that the swagger UI here we're not at we're not ashamed",
    "start": "2254940",
    "end": "2263220"
  },
  {
    "text": "of the warts that exist in the native image native images still have int cases that are handled grave so this functions",
    "start": "2263220",
    "end": "2270120"
  },
  {
    "text": "but it it spits out a lot of garbage still so there's still a lot of issues with cleaning this up technology-wise",
    "start": "2270120",
    "end": "2277490"
  },
  {
    "text": "okay so these tabs and you you have a link to the source code so you can go",
    "start": "2277490",
    "end": "2282540"
  },
  {
    "text": "and get this demo on build it yourself but these tabs are basically each of the features that we went over so the first",
    "start": "2282540",
    "end": "2288570"
  },
  {
    "text": "one hello is a simple jax-rs endpoint",
    "start": "2288570",
    "end": "2293510"
  },
  {
    "text": "next one is as the configuration demo that we showed so those are the three",
    "start": "2293720",
    "end": "2299400"
  },
  {
    "text": "injected endpoints that we we showed first one was just an injected value next one was a PI this one had a default",
    "start": "2299400",
    "end": "2307110"
  },
  {
    "text": "to five decimals but when we read about that we see that we're actually getting the ten decimal version of pi that we",
    "start": "2307110",
    "end": "2313350"
  },
  {
    "text": "had in the externalized configuration file this is the programmatic leuco",
    "start": "2313350",
    "end": "2319250"
  },
  {
    "text": "health so these are the health check endpoints of those two core cos images that we showed so we'll start with this",
    "start": "2319250",
    "end": "2325950"
  },
  {
    "text": "one this health check is based on a key cloak so this is basically going out to the click keep cloak instance and",
    "start": "2325950",
    "end": "2332810"
  },
  {
    "text": "validating that the realm is actually up and running and then so what it's showing you is the data that that",
    "start": "2332810",
    "end": "2340670"
  },
  {
    "text": "decided as relevant in case there was a problem so it's showing you the endpoints of the token and account",
    "start": "2340670",
    "end": "2347160"
  },
  {
    "text": "service the name of the realm and the public key of that that realm if we go",
    "start": "2347160",
    "end": "2354150"
  },
  {
    "text": "to the the web container health check it's actually claiming that",
    "start": "2354150",
    "end": "2360660"
  },
  {
    "text": "down why so we look at scroll down and",
    "start": "2360660",
    "end": "2366690"
  },
  {
    "text": "look at the information that's in here so we have a dis space okay that's the claimants down it's seeing the percent",
    "start": "2366690",
    "end": "2374400"
  },
  {
    "text": "free is zero that this is a path path doesn't exist apparently so that's a problem then we have another service",
    "start": "2374400",
    "end": "2381270"
  },
  {
    "text": "check which is up so what you see is that the overall state of the application is the and the individual",
    "start": "2381270",
    "end": "2388349"
  },
  {
    "text": "applications so the problem there was that I had the this configuration file",
    "start": "2388349",
    "end": "2394890"
  },
  {
    "text": "came over from an iMac which has a different home directory so what I can",
    "start": "2394890",
    "end": "2402000"
  },
  {
    "text": "do is restart the application and pass in an override to that micro profile",
    "start": "2402000",
    "end": "2408539"
  },
  {
    "text": "config as a system property so here I'm overwriting the path that should be monitored for the health check so just",
    "start": "2408539",
    "end": "2417480"
  },
  {
    "text": "restart it done",
    "start": "2417480",
    "end": "2423350"
  },
  {
    "text": "now it's up and now if we look at the disk based check we see that the path",
    "start": "2423350",
    "end": "2430300"
  },
  {
    "text": "exists and we have information about the three spaces of space and percent",
    "start": "2430300",
    "end": "2435770"
  },
  {
    "text": "available metrics we we had a an",
    "start": "2435770",
    "end": "2441560"
  },
  {
    "text": "endpoint that has a random delay so that had a timed histogram on it",
    "start": "2441560",
    "end": "2448750"
  },
  {
    "text": "so here every invocation of this method is invoking a method that has a random",
    "start": "2448750",
    "end": "2455120"
  },
  {
    "text": "delay between zero and a thousand milliseconds so we'll just execute that a few times at the metrics page which is",
    "start": "2455120",
    "end": "2462320"
  },
  {
    "text": "the end point for querying the metrics and this basically says dump of all of the metrics so what you see here is",
    "start": "2462320",
    "end": "2468310"
  },
  {
    "text": "actually a bunch of stuff including jeager information you know all kinds of",
    "start": "2468310",
    "end": "2477440"
  },
  {
    "text": "stuff that aren't relevant to that method so but what the metrics api allows you to do is actually query for",
    "start": "2477440",
    "end": "2483440"
  },
  {
    "text": "individual metrics so this link is a query for the metrics specific to that timed endpoint method",
    "start": "2483440",
    "end": "2490900"
  },
  {
    "text": "Esso here is basically the definition of a timed a time metric which is a",
    "start": "2490900",
    "end": "2497660"
  },
  {
    "text": "histogram with additional information about requests the open tracing API",
    "start": "2497660",
    "end": "2504340"
  },
  {
    "text": "remember we had a customized method that shows a customized information that",
    "start": "2507329",
    "end": "2515519"
  },
  {
    "text": "should show up in the span information for tracing the Jago traces and this end",
    "start": "2515519",
    "end": "2521009"
  },
  {
    "text": "point just think it has a random delay between zero and five thousand milliseconds in this case and then",
    "start": "2521009",
    "end": "2526049"
  },
  {
    "text": "here's a link to the Tigger UI so that's the can do your instance that was",
    "start": "2526049",
    "end": "2531779"
  },
  {
    "text": "running in the container corpus NP demo is the how we configure these traces to",
    "start": "2531779",
    "end": "2538079"
  },
  {
    "text": "show up another one and if we invoke that and look at the graph what we see",
    "start": "2538079",
    "end": "2546839"
  },
  {
    "text": "are the various individual traces for",
    "start": "2546839",
    "end": "2552509"
  },
  {
    "text": "those methods and this is a random distribution of it these are the metrics",
    "start": "2552509",
    "end": "2559109"
  },
  {
    "text": "from the timed so they have a different name so here that's the default name that you give is basically the HTTP name",
    "start": "2559109",
    "end": "2566309"
  },
  {
    "text": "the class name and the operation this was the one we customized with that",
    "start": "2566309",
    "end": "2572519"
  },
  {
    "text": "annotation how it should show up the open API is basically providing an open",
    "start": "2572519",
    "end": "2579989"
  },
  {
    "text": "API document or in the case we're running in developer mode integration with the swagger UI so when we pull this",
    "start": "2579989",
    "end": "2586889"
  },
  {
    "text": "up we're seeing the information that we define with those annotations so then all this information here is what we",
    "start": "2586889",
    "end": "2594119"
  },
  {
    "text": "define with that open API document so the name the version the links to the",
    "start": "2594119",
    "end": "2600479"
  },
  {
    "text": "community accepts the website the license the external link to the clips",
    "start": "2600479",
    "end": "2605849"
  },
  {
    "text": "home page that's all information that we defined on that jac source application as we've shown here there isn't we there",
    "start": "2605849",
    "end": "2612359"
  },
  {
    "text": "was also additional information in the demo we define additional servers so these are this the URLs of the two images that",
    "start": "2612359",
    "end": "2618560"
  },
  {
    "text": "were running and here you see the difference between the tag behavior and our default behavior so all these",
    "start": "2618560",
    "end": "2624349"
  },
  {
    "text": "methods under default this is what the open API extend should automatically",
    "start": "2624349",
    "end": "2630770"
  },
  {
    "text": "glean just from looking at that the jax-rs endpoints in your application and it is relatively detailed so I mean it",
    "start": "2630770",
    "end": "2636410"
  },
  {
    "text": "does give you complete information about the endpoint what it's what its",
    "start": "2636410",
    "end": "2642260"
  },
  {
    "text": "parameters are what it type what type big returns oh you don't the only thing that you're missing is documentation like here where",
    "start": "2642260",
    "end": "2649579"
  },
  {
    "text": "we have now we have a complete description complete description you you",
    "start": "2649579",
    "end": "2655790"
  },
  {
    "text": "can also invoke all these methods through this this method so it's a really great thing to do it at all the",
    "start": "2655790",
    "end": "2660950"
  },
  {
    "text": "time you don't have to create a little basically your it's doing what most of",
    "start": "2660950",
    "end": "2667250"
  },
  {
    "text": "this does only thing that this front-end does that they can't do is generate the the web tokens for secured access so the",
    "start": "2667250",
    "end": "2674780"
  },
  {
    "text": "rest client this is an example of just going directly out to that public web",
    "start": "2674780",
    "end": "2680030"
  },
  {
    "text": "service be that world clock API that we define these tours are cured we need to log into key cloak",
    "start": "2680030",
    "end": "2686650"
  },
  {
    "text": "and so we set up to user so here we're",
    "start": "2688560",
    "end": "2695730"
  },
  {
    "text": "using the OAuth flow to log into the key float to generate the token password is",
    "start": "2695730",
    "end": "2703470"
  },
  {
    "text": "this password we type it wrong",
    "start": "2703470",
    "end": "2709670"
  },
  {
    "text": "it's a catchable go to so it's not fake",
    "start": "2713550",
    "end": "2719730"
  },
  {
    "text": "yeah accident and we're redirected back to the application and then this is the",
    "start": "2719730",
    "end": "2725220"
  },
  {
    "text": "token that we're assigned so this is the access token you know this is the the",
    "start": "2725220",
    "end": "2730320"
  },
  {
    "text": "GWT token turn blow it up a little bit because it's small so these network",
    "start": "2730320",
    "end": "2736680"
  },
  {
    "text": "claims are your tip some of your standard ice stuff there's some key cloak specific claims here what's",
    "start": "2736680",
    "end": "2742500"
  },
  {
    "text": "relevant for this demo is the zone info that we define so CST is the zone info",
    "start": "2742500",
    "end": "2748200"
  },
  {
    "text": "that's been assigned to this user and then we have this grouped claim which is the roles or assigned to this that we're",
    "start": "2748200",
    "end": "2755070"
  },
  {
    "text": "gonna use for role based access decisions now that we logged in my",
    "start": "2755070",
    "end": "2763800"
  },
  {
    "text": "mentally refreshed these tokens are good for five minutes if we go back and look at these secured endpoints now I can",
    "start": "2763800",
    "end": "2770610"
  },
  {
    "text": "invoke them and the time that returns is relative to the claim its central time",
    "start": "2770610",
    "end": "2776010"
  },
  {
    "text": "zone that the user had or as opposed as opposed to the unsecured version which",
    "start": "2776010",
    "end": "2781350"
  },
  {
    "text": "is simply return in UTC so we're using behavior based on the token that's coming in with the claim fault tolerance",
    "start": "2781350",
    "end": "2789060"
  },
  {
    "text": "demo just shows invocation of that method that we showed that should always timeout and return the fallback answer",
    "start": "2789060",
    "end": "2796020"
  },
  {
    "text": "which it does the GWT example has an",
    "start": "2796020",
    "end": "2802050"
  },
  {
    "text": "open endpoint that requires no permission and therefore has no access to who the caller is a secured version",
    "start": "2802050",
    "end": "2809550"
  },
  {
    "text": "of that returns information from the toko token including you know custom",
    "start": "2809550",
    "end": "2815220"
  },
  {
    "text": "role checks like was that caller a member to go to attend the role which it was",
    "start": "2815220",
    "end": "2821830"
  },
  {
    "text": "okay that's that's the demo in a nutshell back to the petition and so the",
    "start": "2821830",
    "end": "2833590"
  },
  {
    "text": "code is this link here and this slides will be on the website so you can get this don't have to write it down now I",
    "start": "2833590",
    "end": "2840360"
  },
  {
    "text": "like to thank burr Center Jason green and Sebastian belong for inputting to",
    "start": "2840360",
    "end": "2846010"
  },
  {
    "text": "this talk remember you can read the session happy to answer",
    "start": "2846010",
    "end": "2851440"
  },
  {
    "text": "any questions [Applause]",
    "start": "2851440",
    "end": "2856570"
  }
]