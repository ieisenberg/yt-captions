[
  {
    "text": "all right uh hello everyone my name is",
    "start": "4359",
    "end": "6799"
  },
  {
    "text": "Tony um I'm going to tell you about a um",
    "start": "6799",
    "end": "10639"
  },
  {
    "text": "a programming technique today that I use",
    "start": "10639",
    "end": "13040"
  },
  {
    "text": "um and the reason I want to tell you",
    "start": "13040",
    "end": "15240"
  },
  {
    "text": "about it is cu I get asked about it a",
    "start": "15240",
    "end": "16760"
  },
  {
    "text": "lot um by my peers and colleagues they",
    "start": "16760",
    "end": "19600"
  },
  {
    "text": "say why are you writing these crazy type",
    "start": "19600",
    "end": "21880"
  },
  {
    "text": "signatures and so on so I'm I'm my plan",
    "start": "21880",
    "end": "25359"
  },
  {
    "text": "is to give them a really good answer to",
    "start": "25359",
    "end": "27039"
  },
  {
    "text": "this question however I also have",
    "start": "27039",
    "end": "29320"
  },
  {
    "text": "another question and that question",
    "start": "29320",
    "end": "31480"
  },
  {
    "text": "knowing that Ed would be here is what am",
    "start": "31480",
    "end": "33399"
  },
  {
    "text": "I doing",
    "start": "33399",
    "end": "35480"
  },
  {
    "text": "wrong",
    "start": "35480",
    "end": "37440"
  },
  {
    "text": "so I'll tell you first of all about the",
    "start": "37440",
    "end": "40120"
  },
  {
    "text": "um expression problem um so wler said",
    "start": "40120",
    "end": "43399"
  },
  {
    "text": "that is a um it's a new name for old",
    "start": "43399",
    "end": "46480"
  },
  {
    "text": "problem and whether or not a language",
    "start": "46480",
    "end": "48320"
  },
  {
    "text": "can solve it is an indicator for its",
    "start": "48320",
    "end": "50280"
  },
  {
    "text": "capacity for expressing um or uh I guess",
    "start": "50280",
    "end": "55039"
  },
  {
    "text": "working towards solving this",
    "start": "55039",
    "end": "57039"
  },
  {
    "text": "problem so for those of you who don't",
    "start": "57039",
    "end": "60039"
  },
  {
    "text": "know what the expression problem is um",
    "start": "60039",
    "end": "62160"
  },
  {
    "text": "I'll tell you what it is so we have this",
    "start": "62160",
    "end": "64239"
  },
  {
    "text": "data type here um the traffic light it's",
    "start": "64239",
    "end": "65960"
  },
  {
    "text": "either red green or it's Amber and we",
    "start": "65960",
    "end": "68439"
  },
  {
    "text": "cycle through the traffic lights and the",
    "start": "68439",
    "end": "71240"
  },
  {
    "text": "question",
    "start": "71240",
    "end": "72280"
  },
  {
    "text": "is what happens when we need to add a",
    "start": "72280",
    "end": "75479"
  },
  {
    "text": "new construct to this data type so only",
    "start": "75479",
    "end": "78799"
  },
  {
    "text": "buses proceed I think we have a few of",
    "start": "78799",
    "end": "80799"
  },
  {
    "text": "these now in Brisbane um they didn't",
    "start": "80799",
    "end": "82479"
  },
  {
    "text": "when I was very small um but we do have",
    "start": "82479",
    "end": "85680"
  },
  {
    "text": "them now so the question is what happens",
    "start": "85680",
    "end": "88640"
  },
  {
    "text": "to the functions such as this cycle",
    "start": "88640",
    "end": "91880"
  },
  {
    "text": "function um and all functions that",
    "start": "91880",
    "end": "94159"
  },
  {
    "text": "reference that code so that code must",
    "start": "94159",
    "end": "97240"
  },
  {
    "text": "either change or it fails so it'll",
    "start": "97240",
    "end": "99200"
  },
  {
    "text": "become a non-exhaustive pattern all",
    "start": "99200",
    "end": "101200"
  },
  {
    "text": "right so the expression problem is uh so",
    "start": "101200",
    "end": "104520"
  },
  {
    "text": "so one way to get around this is to",
    "start": "104520",
    "end": "105880"
  },
  {
    "text": "create a new data type um and that is to",
    "start": "105880",
    "end": "108439"
  },
  {
    "text": "say reference the old data type the",
    "start": "108439",
    "end": "110680"
  },
  {
    "text": "traffic light as well as the new",
    "start": "110680",
    "end": "113320"
  },
  {
    "text": "case however the cycle function will",
    "start": "113320",
    "end": "115600"
  },
  {
    "text": "need to be",
    "start": "115600",
    "end": "117360"
  },
  {
    "text": "updated and this I think this is a",
    "start": "117360",
    "end": "120399"
  },
  {
    "text": "question that has tormented me for years",
    "start": "120399",
    "end": "122560"
  },
  {
    "text": "um which is does there exist an",
    "start": "122560",
    "end": "123920"
  },
  {
    "text": "appropriate abstraction around this so",
    "start": "123920",
    "end": "126520"
  },
  {
    "text": "how do I get around this um constant",
    "start": "126520",
    "end": "129920"
  },
  {
    "text": "tradeoff so I believe that there isn't",
    "start": "129920",
    "end": "132760"
  },
  {
    "text": "one I believe that you have to keep",
    "start": "132760",
    "end": "134280"
  },
  {
    "text": "trading off um this is a question that",
    "start": "134280",
    "end": "137680"
  },
  {
    "text": "has been asked of me and I think the",
    "start": "137680",
    "end": "139560"
  },
  {
    "text": "answer is",
    "start": "139560",
    "end": "140560"
  },
  {
    "text": "no um for those of you who have asked it",
    "start": "140560",
    "end": "143959"
  },
  {
    "text": "the answer I think is no as simple as",
    "start": "143959",
    "end": "145760"
  },
  {
    "text": "that um I think there are only tradeoffs",
    "start": "145760",
    "end": "148800"
  },
  {
    "text": "we can only sort of trade off against uh",
    "start": "148800",
    "end": "151160"
  },
  {
    "text": "adding Constructors to our data types",
    "start": "151160",
    "end": "152879"
  },
  {
    "text": "versus um having to update our functions",
    "start": "152879",
    "end": "155000"
  },
  {
    "text": "that reference those to achieve",
    "start": "155000",
    "end": "156440"
  },
  {
    "text": "exhaustive patent matching some of those",
    "start": "156440",
    "end": "159040"
  },
  {
    "text": "trades um try to uh achieve economy in",
    "start": "159040",
    "end": "163400"
  },
  {
    "text": "both directions and um does that one",
    "start": "163400",
    "end": "166760"
  },
  {
    "text": "achieve maximal economy I still think",
    "start": "166760",
    "end": "168680"
  },
  {
    "text": "the answer is no there are those of you",
    "start": "168680",
    "end": "171159"
  },
  {
    "text": "in the room who know why I'm answering",
    "start": "171159",
    "end": "172640"
  },
  {
    "text": "that question moving on so what I'm",
    "start": "172640",
    "end": "176239"
  },
  {
    "text": "going to do is I'm going to use the lens",
    "start": "176239",
    "end": "177440"
  },
  {
    "text": "library to um demonstrate one such",
    "start": "177440",
    "end": "179840"
  },
  {
    "text": "technique and again it's something that",
    "start": "179840",
    "end": "182080"
  },
  {
    "text": "I use I use it regularly and I don't",
    "start": "182080",
    "end": "184120"
  },
  {
    "text": "know what I'm doing wrong so I'll give",
    "start": "184120",
    "end": "187080"
  },
  {
    "text": "you another example of the expression",
    "start": "187080",
    "end": "188400"
  },
  {
    "text": "problem so the either data type um I I",
    "start": "188400",
    "end": "191959"
  },
  {
    "text": "assume we're at a function programming",
    "start": "191959",
    "end": "193159"
  },
  {
    "text": "conference we all know what that means",
    "start": "193159",
    "end": "194760"
  },
  {
    "text": "so we have either an A or a b um we have",
    "start": "194760",
    "end": "197720"
  },
  {
    "text": "this data type here that is given an A",
    "start": "197720",
    "end": "199720"
  },
  {
    "text": "and either an A or a B return an A so if",
    "start": "199720",
    "end": "202680"
  },
  {
    "text": "we have one in left we return it if we",
    "start": "202680",
    "end": "205480"
  },
  {
    "text": "don't return the other one that was",
    "start": "205480",
    "end": "207959"
  },
  {
    "text": "given now we add a new data constructed",
    "start": "207959",
    "end": "210239"
  },
  {
    "text": "to this data type called none um and now",
    "start": "210239",
    "end": "213040"
  },
  {
    "text": "the left or function needs to be",
    "start": "213040",
    "end": "215840"
  },
  {
    "text": "updated so the the the the expression",
    "start": "215840",
    "end": "218560"
  },
  {
    "text": "problem is how do I add Constructors to",
    "start": "218560",
    "end": "221280"
  },
  {
    "text": "these data types without having to",
    "start": "221280",
    "end": "223760"
  },
  {
    "text": "update all our referencing functions",
    "start": "223760",
    "end": "225519"
  },
  {
    "text": "such as left",
    "start": "225519",
    "end": "227319"
  },
  {
    "text": "or so we'd like to write left or once",
    "start": "227319",
    "end": "230239"
  },
  {
    "text": "and write it for all so we can keep",
    "start": "230239",
    "end": "233400"
  },
  {
    "text": "adding these data Constructors to our",
    "start": "233400",
    "end": "234879"
  },
  {
    "text": "data types without having to update the",
    "start": "234879",
    "end": "236360"
  },
  {
    "text": "left or function so I've re named so",
    "start": "236360",
    "end": "240840"
  },
  {
    "text": "these are I guess are the two versions",
    "start": "240840",
    "end": "241959"
  },
  {
    "text": "of either there's the regular one and",
    "start": "241959",
    "end": "243079"
  },
  {
    "text": "there's another one which I've called",
    "start": "243079",
    "end": "244400"
  },
  {
    "text": "prolly and we kind of want this",
    "start": "244400",
    "end": "246360"
  },
  {
    "text": "abstraction here called has some notion",
    "start": "246360",
    "end": "248239"
  },
  {
    "text": "of",
    "start": "248239",
    "end": "249120"
  },
  {
    "text": "leftish uh that takes a and then the",
    "start": "249120",
    "end": "251760"
  },
  {
    "text": "leftish thing of A and B to an A and",
    "start": "251760",
    "end": "255640"
  },
  {
    "text": "then once we've written this function we",
    "start": "255640",
    "end": "257639"
  },
  {
    "text": "can keep writing these data types such",
    "start": "257639",
    "end": "259280"
  },
  {
    "text": "as either and Proby and so on without",
    "start": "259280",
    "end": "262040"
  },
  {
    "text": "having to update our functions such as",
    "start": "262040",
    "end": "263880"
  },
  {
    "text": "left",
    "start": "263880",
    "end": "266120"
  },
  {
    "text": "or so basically we want to abstract two",
    "start": "266400",
    "end": "269000"
  },
  {
    "text": "things the view of a and the possible",
    "start": "269000",
    "end": "271080"
  },
  {
    "text": "existence of that a in t",
    "start": "271080",
    "end": "274840"
  },
  {
    "text": "tab all right so if we have a look back",
    "start": "274840",
    "end": "277080"
  },
  {
    "text": "here at these two dat types the possible",
    "start": "277080",
    "end": "279400"
  },
  {
    "text": "existence of a in either is the left and",
    "start": "279400",
    "end": "282120"
  },
  {
    "text": "the possible existence of a in probably",
    "start": "282120",
    "end": "284080"
  },
  {
    "text": "is",
    "start": "284080",
    "end": "285320"
  },
  {
    "text": "this okay so we want to abstract out",
    "start": "285320",
    "end": "287680"
  },
  {
    "text": "that",
    "start": "287680",
    "end": "289840"
  },
  {
    "text": "idea so this is when we start looking at",
    "start": "289840",
    "end": "293680"
  },
  {
    "text": "lenses so um who is not familiar with",
    "start": "293680",
    "end": "297560"
  },
  {
    "text": "lenses at all",
    "start": "297560",
    "end": "301120"
  },
  {
    "text": "I knew Ed was going to do that",
    "start": "301360",
    "end": "304840"
  },
  {
    "text": "so basically I'll do my best here",
    "start": "304840",
    "end": "308039"
  },
  {
    "text": "actually so looking at the type",
    "start": "308039",
    "end": "310080"
  },
  {
    "text": "signature here um we can think of this",
    "start": "310080",
    "end": "312720"
  },
  {
    "text": "so identity identity as you as you might",
    "start": "312720",
    "end": "315000"
  },
  {
    "text": "know is simply a container that contains",
    "start": "315000",
    "end": "317400"
  },
  {
    "text": "one element so we can cancel it out so",
    "start": "317400",
    "end": "320199"
  },
  {
    "text": "we have a function from a to a and then",
    "start": "320199",
    "end": "322520"
  },
  {
    "text": "to T of a to T of ab so that is to say",
    "start": "322520",
    "end": "325360"
  },
  {
    "text": "modify the a in the tab to to produce a",
    "start": "325360",
    "end": "328520"
  },
  {
    "text": "new tab so we can think of this as a",
    "start": "328520",
    "end": "331080"
  },
  {
    "text": "modify",
    "start": "331080",
    "end": "332199"
  },
  {
    "text": "function okay so modify a using this",
    "start": "332199",
    "end": "335280"
  },
  {
    "text": "function in that leftish",
    "start": "335280",
    "end": "340319"
  },
  {
    "text": "thing um so the reason I've highlighted",
    "start": "340759",
    "end": "344000"
  },
  {
    "text": "that in green there is because they're",
    "start": "344000",
    "end": "345520"
  },
  {
    "text": "the two points that I want to abstract",
    "start": "345520",
    "end": "348680"
  },
  {
    "text": "away okay so it's not going to be a",
    "start": "348680",
    "end": "352560"
  },
  {
    "text": "function from a to a but a something of",
    "start": "352560",
    "end": "355680"
  },
  {
    "text": "a of a and the functor here is not going",
    "start": "355680",
    "end": "358400"
  },
  {
    "text": "to be identity and and I'll show you",
    "start": "358400",
    "end": "360800"
  },
  {
    "text": "why but here's how the type would look",
    "start": "360800",
    "end": "363440"
  },
  {
    "text": "if we were to abstract those away right",
    "start": "363440",
    "end": "365280"
  },
  {
    "text": "so P and F have now become type",
    "start": "365280",
    "end": "367360"
  },
  {
    "text": "variables p is where the arrow used to",
    "start": "367360",
    "end": "369680"
  },
  {
    "text": "be and F is where the identity used to",
    "start": "369680",
    "end": "371560"
  },
  {
    "text": "be so basically what I'm going to do is",
    "start": "371560",
    "end": "373759"
  },
  {
    "text": "I'm going to show you this technique",
    "start": "373759",
    "end": "375479"
  },
  {
    "text": "where I can substitute p with different",
    "start": "375479",
    "end": "377840"
  },
  {
    "text": "values and F with different values and",
    "start": "377840",
    "end": "379400"
  },
  {
    "text": "get different properties of uh what it",
    "start": "379400",
    "end": "382479"
  },
  {
    "text": "means to view these data",
    "start": "382479",
    "end": "385280"
  },
  {
    "text": "types so when we're talking about um uh",
    "start": "385280",
    "end": "389639"
  },
  {
    "text": "potentially existing like you know like",
    "start": "389639",
    "end": "391639"
  },
  {
    "text": "either potentially has an A and probably",
    "start": "391639",
    "end": "393599"
  },
  {
    "text": "potentially has an a the answer to the",
    "start": "393599",
    "end": "395960"
  },
  {
    "text": "question what do we want to substitute P",
    "start": "395960",
    "end": "398000"
  },
  {
    "text": "and F with is these constraints here and",
    "start": "398000",
    "end": "400599"
  },
  {
    "text": "that is p um satisfies",
    "start": "400599",
    "end": "403720"
  },
  {
    "text": "Choice um so choice is a more",
    "start": "403720",
    "end": "407680"
  },
  {
    "text": "constrained profunctor",
    "start": "407680",
    "end": "409520"
  },
  {
    "text": "um I don't does anyone not know what a",
    "start": "409520",
    "end": "412199"
  },
  {
    "text": "profunctor",
    "start": "412199",
    "end": "413880"
  },
  {
    "text": "is sorry um I could tell you I'd have to",
    "start": "413880",
    "end": "416720"
  },
  {
    "text": "write some code um anyway I I'll come",
    "start": "416720",
    "end": "420599"
  },
  {
    "text": "back to that so basically yeah so a",
    "start": "420599",
    "end": "422800"
  },
  {
    "text": "prism is where we constrain P the arrow",
    "start": "422800",
    "end": "425800"
  },
  {
    "text": "P by choice so all all you need to know",
    "start": "425800",
    "end": "428199"
  },
  {
    "text": "is that it's just more General than",
    "start": "428199",
    "end": "429639"
  },
  {
    "text": "arrow and identity p uh arrow is an",
    "start": "429639",
    "end": "431879"
  },
  {
    "text": "instance of choice and identity is an",
    "start": "431879",
    "end": "433759"
  },
  {
    "text": "instance of applicative as we saw this",
    "start": "433759",
    "end": "435319"
  },
  {
    "text": "morning in our",
    "start": "435319",
    "end": "436599"
  },
  {
    "text": "keynote so here is the code for the type",
    "start": "436599",
    "end": "439120"
  },
  {
    "text": "class and that says",
    "start": "439120",
    "end": "440919"
  },
  {
    "text": "that um we're abstracted on P and F and",
    "start": "440919",
    "end": "443720"
  },
  {
    "text": "the type Constructor T so where T is the",
    "start": "443720",
    "end": "445720"
  },
  {
    "text": "either or Proby",
    "start": "445720",
    "end": "447400"
  },
  {
    "text": "thing um and we've said that anything",
    "start": "447400",
    "end": "450879"
  },
  {
    "text": "that has the notion of LEF isness um",
    "start": "450879",
    "end": "454720"
  },
  {
    "text": "satisfies this type signature here and",
    "start": "454720",
    "end": "457720"
  },
  {
    "text": "we have examples or instances of that so",
    "start": "457720",
    "end": "460919"
  },
  {
    "text": "either satisfies it where p is",
    "start": "460919",
    "end": "462800"
  },
  {
    "text": "constrained by choice and F is",
    "start": "462800",
    "end": "464159"
  },
  {
    "text": "constrained by applicative therefore we",
    "start": "464159",
    "end": "466000"
  },
  {
    "text": "can say that they are a prism so and we",
    "start": "466000",
    "end": "469680"
  },
  {
    "text": "could put other constraints there to get",
    "start": "469680",
    "end": "471120"
  },
  {
    "text": "different properties about",
    "start": "471120",
    "end": "473520"
  },
  {
    "text": "it so here I think is I guess the",
    "start": "473520",
    "end": "476240"
  },
  {
    "text": "important point which is if we have a",
    "start": "476240",
    "end": "478120"
  },
  {
    "text": "look now at our left function so prior",
    "start": "478120",
    "end": "481400"
  },
  {
    "text": "to this type it used to be the signature",
    "start": "481400",
    "end": "483479"
  },
  {
    "text": "used to mention the either data type or",
    "start": "483479",
    "end": "486240"
  },
  {
    "text": "the prolly data type or any others that",
    "start": "486240",
    "end": "488800"
  },
  {
    "text": "we may have written but it now",
    "start": "488800",
    "end": "491440"
  },
  {
    "text": "says um it's NE such that whatever that",
    "start": "491440",
    "end": "496720"
  },
  {
    "text": "says which is to say it has",
    "start": "496720",
    "end": "499759"
  },
  {
    "text": "a uh some notion of",
    "start": "499759",
    "end": "502639"
  },
  {
    "text": "leftish and and the point is is any",
    "start": "502639",
    "end": "505840"
  },
  {
    "text": "instance now no now no longer needs to",
    "start": "505840",
    "end": "509199"
  },
  {
    "text": "so sorry you just Define the instance",
    "start": "509199",
    "end": "510639"
  },
  {
    "text": "and you automatically pick up this",
    "start": "510639",
    "end": "511840"
  },
  {
    "text": "function so you don't need to keep",
    "start": "511840",
    "end": "513279"
  },
  {
    "text": "writing this function over and over",
    "start": "513279",
    "end": "514599"
  },
  {
    "text": "again for either for prolly and for any",
    "start": "514599",
    "end": "517159"
  },
  {
    "text": "others that you might have some notion",
    "start": "517159",
    "end": "518560"
  },
  {
    "text": "of potentially having an",
    "start": "518560",
    "end": "520279"
  },
  {
    "text": "A",
    "start": "520279",
    "end": "522240"
  },
  {
    "text": "okay making sense everyone should say",
    "start": "522240",
    "end": "527000"
  },
  {
    "text": "yes that's",
    "start": "527000",
    "end": "530560"
  },
  {
    "text": "so uh there are other data structures",
    "start": "530560",
    "end": "534040"
  },
  {
    "text": "that support this notion of potentially",
    "start": "534040",
    "end": "535440"
  },
  {
    "text": "having a left and that is for example",
    "start": "535440",
    "end": "538120"
  },
  {
    "text": "const which we saw this morning um",
    "start": "538120",
    "end": "540880"
  },
  {
    "text": "however the constraint on the p and the",
    "start": "540880",
    "end": "543519"
  },
  {
    "text": "f are not choice and applicative um it's",
    "start": "543519",
    "end": "546399"
  },
  {
    "text": "simply an isomorphism so it's just uh",
    "start": "546399",
    "end": "549839"
  },
  {
    "text": "whatever it is pro funter and",
    "start": "549839",
    "end": "552360"
  },
  {
    "text": "funter so they're weaker",
    "start": "552360",
    "end": "555240"
  },
  {
    "text": "constraints um and then again here's",
    "start": "555240",
    "end": "557560"
  },
  {
    "text": "another data type where it has some",
    "start": "557560",
    "end": "559120"
  },
  {
    "text": "notion of having potentially having an a",
    "start": "559120",
    "end": "561640"
  },
  {
    "text": "um it has a prism another one has a",
    "start": "561640",
    "end": "564120"
  },
  {
    "text": "prism this this data type here which um",
    "start": "564120",
    "end": "566360"
  },
  {
    "text": "some of us use and then of course just a",
    "start": "566360",
    "end": "568720"
  },
  {
    "text": "pair of an a B this doesn't potentially",
    "start": "568720",
    "end": "571360"
  },
  {
    "text": "have an A it definitely has an A and it",
    "start": "571360",
    "end": "572959"
  },
  {
    "text": "has a view into",
    "start": "572959",
    "end": "574519"
  },
  {
    "text": "a so so it definitely has an A and that",
    "start": "574519",
    "end": "578480"
  },
  {
    "text": "view is called a",
    "start": "578480",
    "end": "581199"
  },
  {
    "text": "lens didn't I just do",
    "start": "584399",
    "end": "586720"
  },
  {
    "text": "that",
    "start": "586720",
    "end": "588279"
  },
  {
    "text": "anyway hang on what did I do copy and",
    "start": "588279",
    "end": "591000"
  },
  {
    "text": "paste all right",
    "start": "591000",
    "end": "594440"
  },
  {
    "text": "so uh the technique that I use um so",
    "start": "594519",
    "end": "597920"
  },
  {
    "text": "this is in my actual code right so G",
    "start": "597920",
    "end": "599880"
  },
  {
    "text": "given this sort of setup in that I don't",
    "start": "599880",
    "end": "601920"
  },
  {
    "text": "want to keep writing left or over and",
    "start": "601920",
    "end": "603519"
  },
  {
    "text": "over again um for every time I change a",
    "start": "603519",
    "end": "607079"
  },
  {
    "text": "data type what do I in fact do I have to",
    "start": "607079",
    "end": "610040"
  },
  {
    "text": "first of all write a type class such as",
    "start": "610040",
    "end": "613600"
  },
  {
    "text": "leftish",
    "start": "613600",
    "end": "615760"
  },
  {
    "text": "um and uh so it's has these properties",
    "start": "615760",
    "end": "619000"
  },
  {
    "text": "here and then I have to write an",
    "start": "619000",
    "end": "620040"
  },
  {
    "text": "instance for that type class and that is",
    "start": "620040",
    "end": "622279"
  },
  {
    "text": "the instance that is equal to the view",
    "start": "622279",
    "end": "624880"
  },
  {
    "text": "of the thing that I'm looking at in this",
    "start": "624880",
    "end": "626440"
  },
  {
    "text": "case a and then I have to write the",
    "start": "626440",
    "end": "628880"
  },
  {
    "text": "instance for for that so if we have a",
    "start": "628880",
    "end": "630200"
  },
  {
    "text": "look at all the code for it um it's",
    "start": "630200",
    "end": "633160"
  },
  {
    "text": "there's the type class we have to write",
    "start": "633160",
    "end": "634399"
  },
  {
    "text": "an instance and we also have to write",
    "start": "634399",
    "end": "635639"
  },
  {
    "text": "one other",
    "start": "635639",
    "end": "638000"
  },
  {
    "text": "instance and then the constraints depend",
    "start": "638160",
    "end": "640920"
  },
  {
    "text": "on the kind of view so a lens is um a",
    "start": "640920",
    "end": "644880"
  },
  {
    "text": "view into a data type where it it uh",
    "start": "644880",
    "end": "647720"
  },
  {
    "text": "definitely has that thing as one hole",
    "start": "647720",
    "end": "649720"
  },
  {
    "text": "inside the data Constructor such as a",
    "start": "649720",
    "end": "651320"
  },
  {
    "text": "pair so a pair definitely has an a um it",
    "start": "651320",
    "end": "654560"
  },
  {
    "text": "also has a b and when we constrain our P",
    "start": "654560",
    "end": "657480"
  },
  {
    "text": "and F we say p is Arrow and F is a",
    "start": "657480",
    "end": "661680"
  },
  {
    "text": "funter and then there's many other",
    "start": "661680",
    "end": "663560"
  },
  {
    "text": "possible constraints that we can put on",
    "start": "663560",
    "end": "665000"
  },
  {
    "text": "there that give us different properties",
    "start": "665000",
    "end": "667680"
  },
  {
    "text": "about how we view into that data",
    "start": "667680",
    "end": "671959"
  },
  {
    "text": "type so I I guess um a more concrete",
    "start": "673040",
    "end": "676560"
  },
  {
    "text": "example we have this data type here um",
    "start": "676560",
    "end": "679519"
  },
  {
    "text": "you know I sort of I think we all sort",
    "start": "679519",
    "end": "681040"
  },
  {
    "text": "of start here where we write down the",
    "start": "681040",
    "end": "683440"
  },
  {
    "text": "data type has an age and a name and",
    "start": "683440",
    "end": "687720"
  },
  {
    "text": "instead of uh",
    "start": "687720",
    "end": "690360"
  },
  {
    "text": "I guess are writing records or modify",
    "start": "690360",
    "end": "693639"
  },
  {
    "text": "functions for the",
    "start": "693639",
    "end": "695040"
  },
  {
    "text": "age we instead write a typ class and the",
    "start": "695040",
    "end": "698560"
  },
  {
    "text": "type class is",
    "start": "698560",
    "end": "701079"
  },
  {
    "text": "um it's a a p from the type of the field",
    "start": "701079",
    "end": "705839"
  },
  {
    "text": "in this case",
    "start": "705839",
    "end": "707000"
  },
  {
    "text": "int and then we're abstracted over s so",
    "start": "707000",
    "end": "710560"
  },
  {
    "text": "s is going to be their target",
    "start": "710560",
    "end": "713720"
  },
  {
    "text": "type right so we have an instance for",
    "start": "713720",
    "end": "716079"
  },
  {
    "text": "INT where in so that's just the",
    "start": "716079",
    "end": "717560"
  },
  {
    "text": "equivalence instance so we can always",
    "start": "717560",
    "end": "719360"
  },
  {
    "text": "view an INT as an INT and there's no",
    "start": "719360",
    "end": "721680"
  },
  {
    "text": "constraints required on PNF to to do",
    "start": "721680",
    "end": "724200"
  },
  {
    "text": "that however when we want to look at",
    "start": "724200",
    "end": "727920"
  },
  {
    "text": "um uh the age of a person so looking",
    "start": "727920",
    "end": "731600"
  },
  {
    "text": "inside a person there is an age along",
    "start": "731600",
    "end": "733720"
  },
  {
    "text": "with some other data so that which is",
    "start": "733720",
    "end": "736079"
  },
  {
    "text": "the name so that is a",
    "start": "736079",
    "end": "738440"
  },
  {
    "text": "lens and because it's a lens p is an",
    "start": "738440",
    "end": "741199"
  },
  {
    "text": "arrow and F is a funter and so we can",
    "start": "741199",
    "end": "744440"
  },
  {
    "text": "now write this instance and then we",
    "start": "744440",
    "end": "745760"
  },
  {
    "text": "write their Library ter our library",
    "start": "745760",
    "end": "747360"
  },
  {
    "text": "functions in terms of this function here",
    "start": "747360",
    "end": "750320"
  },
  {
    "text": "so when we see a type of our the type",
    "start": "750320",
    "end": "752800"
  },
  {
    "text": "signature of our functions it doesn't",
    "start": "752800",
    "end": "754720"
  },
  {
    "text": "say person it says something that could",
    "start": "754720",
    "end": "758519"
  },
  {
    "text": "be viewed as if it had an",
    "start": "758519",
    "end": "760720"
  },
  {
    "text": "age so then we can add Constructors to",
    "start": "760720",
    "end": "763680"
  },
  {
    "text": "person we can add fields to the uh",
    "start": "763680",
    "end": "767079"
  },
  {
    "text": "Constructor that already exists and so",
    "start": "767079",
    "end": "769240"
  },
  {
    "text": "on without having to change those",
    "start": "769240",
    "end": "771959"
  },
  {
    "text": "functions um another example so so going",
    "start": "771959",
    "end": "775199"
  },
  {
    "text": "back here we got this is a record type",
    "start": "775199",
    "end": "776880"
  },
  {
    "text": "so we're looking at it as as a lens",
    "start": "776880",
    "end": "780240"
  },
  {
    "text": "at this data type we've got um a su type",
    "start": "780240",
    "end": "782440"
  },
  {
    "text": "so a shape is either a circle or it's",
    "start": "782440",
    "end": "784279"
  },
  {
    "text": "many other possible things so the goal",
    "start": "784279",
    "end": "787199"
  },
  {
    "text": "here here is to um talk about things",
    "start": "787199",
    "end": "790440"
  },
  {
    "text": "that may have a",
    "start": "790440",
    "end": "792839"
  },
  {
    "text": "radius so a shape is a thing that may",
    "start": "792839",
    "end": "795720"
  },
  {
    "text": "have a radius it will have a radius in",
    "start": "795720",
    "end": "797360"
  },
  {
    "text": "the instance that it is a",
    "start": "797360",
    "end": "800160"
  },
  {
    "text": "circle and the goal is to make it so",
    "start": "800160",
    "end": "802519"
  },
  {
    "text": "that our types do not mention shape that",
    "start": "802519",
    "end": "805240"
  },
  {
    "text": "is to say all things that may have a",
    "start": "805240",
    "end": "808120"
  },
  {
    "text": "radius so we write the uh type class we",
    "start": "808120",
    "end": "810839"
  },
  {
    "text": "write the instance and then in this case",
    "start": "810839",
    "end": "814519"
  },
  {
    "text": "because uh the radius is potentially",
    "start": "814519",
    "end": "817880"
  },
  {
    "text": "existing in shape it's a prism so it has",
    "start": "817880",
    "end": "820160"
  },
  {
    "text": "the prism constraints and these dot Dots",
    "start": "820160",
    "end": "822880"
  },
  {
    "text": "here stand for sort of this program will",
    "start": "822880",
    "end": "824680"
  },
  {
    "text": "type check trust",
    "start": "824680",
    "end": "827560"
  },
  {
    "text": "me or trust the type Checker um really",
    "start": "828040",
    "end": "831560"
  },
  {
    "text": "so then we write our library functions",
    "start": "831560",
    "end": "833639"
  },
  {
    "text": "in terms of that function and as we do",
    "start": "833639",
    "end": "836040"
  },
  {
    "text": "so those types will have the constraint",
    "start": "836040",
    "end": "838000"
  },
  {
    "text": "as radius and will not say is or is not",
    "start": "838000",
    "end": "840560"
  },
  {
    "text": "a",
    "start": "840560",
    "end": "841440"
  },
  {
    "text": "shape so I'm working on this problem at",
    "start": "841440",
    "end": "844839"
  },
  {
    "text": "the moment I play chess um who plays",
    "start": "844839",
    "end": "848079"
  },
  {
    "text": "chess awesome",
    "start": "848079",
    "end": "850440"
  },
  {
    "text": "people um so there's a website you may",
    "start": "850440",
    "end": "853680"
  },
  {
    "text": "have heard of it you may not it's called",
    "start": "853680",
    "end": "854839"
  },
  {
    "text": "Lees um I play on this website it's an",
    "start": "854839",
    "end": "857480"
  },
  {
    "text": "open source thing it's written in",
    "start": "857480",
    "end": "859360"
  },
  {
    "text": "Scala",
    "start": "859360",
    "end": "860920"
  },
  {
    "text": "um by um tibol is his name",
    "start": "860920",
    "end": "865880"
  },
  {
    "text": "so here is uh the world number 12 Z a",
    "start": "865880",
    "end": "869120"
  },
  {
    "text": "couple of weeks ago um GM Wesley so um",
    "start": "869120",
    "end": "872519"
  },
  {
    "text": "an American Grandmaster he goes on to",
    "start": "872519",
    "end": "875759"
  },
  {
    "text": "Lee chess and when he does sort of",
    "start": "875759",
    "end": "877160"
  },
  {
    "text": "everyone wakes up and watches well in my",
    "start": "877160",
    "end": "880160"
  },
  {
    "text": "case wake up cuz you know he's in",
    "start": "880160",
    "end": "881759"
  },
  {
    "text": "America um",
    "start": "881759",
    "end": "883759"
  },
  {
    "text": "so what happened is um someone is uh",
    "start": "883759",
    "end": "888680"
  },
  {
    "text": "cheating someone is using computer",
    "start": "888680",
    "end": "890240"
  },
  {
    "text": "assistance um for those of you who do",
    "start": "890240",
    "end": "891920"
  },
  {
    "text": "play chess you will know this that",
    "start": "891920",
    "end": "893839"
  },
  {
    "text": "computers can beat humans at chess um",
    "start": "893839",
    "end": "897320"
  },
  {
    "text": "the I guess not like the average",
    "start": "897320",
    "end": "899759"
  },
  {
    "text": "computer can beat the best human pretty",
    "start": "899759",
    "end": "901440"
  },
  {
    "text": "easily these days um and he kind of got",
    "start": "901440",
    "end": "905160"
  },
  {
    "text": "upset and he said I'm closing my account",
    "start": "905160",
    "end": "907600"
  },
  {
    "text": "go away Lee chess and um you know he had",
    "start": "907600",
    "end": "911720"
  },
  {
    "text": "had a little tantrum and and run",
    "start": "911720",
    "end": "914000"
  },
  {
    "text": "away and uh I sat there and I thought",
    "start": "914000",
    "end": "918040"
  },
  {
    "text": "this is why this is why that happened it",
    "start": "918040",
    "end": "921720"
  },
  {
    "text": "happened because in order for so I mean",
    "start": "921720",
    "end": "924279"
  },
  {
    "text": "I've played on there I'm I'm certainly",
    "start": "924279",
    "end": "925759"
  },
  {
    "text": "not the world number 12 but I do run",
    "start": "925759",
    "end": "928120"
  },
  {
    "text": "into people who cheat",
    "start": "928120",
    "end": "929480"
  },
  {
    "text": "I know that they're cheating or I I",
    "start": "929480",
    "end": "931560"
  },
  {
    "text": "strongly suspect it and I write this",
    "start": "931560",
    "end": "933480"
  },
  {
    "text": "note it's like hey everyone I think I",
    "start": "933480",
    "end": "935880"
  },
  {
    "text": "just got you know done over by a cheater",
    "start": "935880",
    "end": "938680"
  },
  {
    "text": "um and then humans assess it and you",
    "start": "938680",
    "end": "941120"
  },
  {
    "text": "know there's a limited amount of Human",
    "start": "941120",
    "end": "942639"
  },
  {
    "text": "Resources to assess the string that I",
    "start": "942639",
    "end": "944759"
  },
  {
    "text": "just sent",
    "start": "944759",
    "end": "945959"
  },
  {
    "text": "them so I argue I argue to the liees",
    "start": "945959",
    "end": "951519"
  },
  {
    "text": "um uh programmers and I said look a",
    "start": "951519",
    "end": "954199"
  },
  {
    "text": "cheat report should be a data",
    "start": "954199",
    "end": "957279"
  },
  {
    "text": "type right so",
    "start": "957279",
    "end": "959880"
  },
  {
    "text": "um you know I might think that like you",
    "start": "959880",
    "end": "963199"
  },
  {
    "text": "can imagine like I'm kind of an average",
    "start": "963199",
    "end": "964560"
  },
  {
    "text": "chess player and then one day I play",
    "start": "964560",
    "end": "966160"
  },
  {
    "text": "like three brilliant moves in a row",
    "start": "966160",
    "end": "968720"
  },
  {
    "text": "could be coincidence may not be so you",
    "start": "968720",
    "end": "970920"
  },
  {
    "text": "know we sort of say that was",
    "start": "970920",
    "end": "973040"
  },
  {
    "text": "unhuman um but in terms of detecting",
    "start": "973040",
    "end": "976480"
  },
  {
    "text": "cheating it's quite difficult but there",
    "start": "976480",
    "end": "977720"
  },
  {
    "text": "are certain things that appear to even",
    "start": "977720",
    "end": "979759"
  },
  {
    "text": "average players like myself as pretty",
    "start": "979759",
    "end": "981519"
  },
  {
    "text": "obviously cheating and then cheaters are",
    "start": "981519",
    "end": "984120"
  },
  {
    "text": "getting more and more",
    "start": "984120",
    "end": "985399"
  },
  {
    "text": "sophisticated so um there was actually a",
    "start": "985399",
    "end": "988920"
  },
  {
    "text": "report yesterday of of a guy who um is",
    "start": "988920",
    "end": "992720"
  },
  {
    "text": "using a chess computer program from",
    "start": "992720",
    "end": "994839"
  },
  {
    "text": "about 10 years ago to make sure that",
    "start": "994839",
    "end": "996399"
  },
  {
    "text": "it's not quite the strongest one um and",
    "start": "996399",
    "end": "998839"
  },
  {
    "text": "he doesn't play every move out of it and",
    "start": "998839",
    "end": "1002160"
  },
  {
    "text": "uh what else does he do um if it's an if",
    "start": "1002160",
    "end": "1005120"
  },
  {
    "text": "it's a much stronger player he",
    "start": "1005120",
    "end": "1006680"
  },
  {
    "text": "deliberately draws the game rather than",
    "start": "1006680",
    "end": "1008560"
  },
  {
    "text": "wins the game so he's trying to get",
    "start": "1008560",
    "end": "1010839"
  },
  {
    "text": "quite sophisticated and you know people",
    "start": "1010839",
    "end": "1012680"
  },
  {
    "text": "are sort of sitting here going is he",
    "start": "1012680",
    "end": "1013920"
  },
  {
    "text": "cheating if you know if I say he is I'm",
    "start": "1013920",
    "end": "1015639"
  },
  {
    "text": "going to and I'm wrong and you know I'm",
    "start": "1015639",
    "end": "1017519"
  },
  {
    "text": "in trouble so so there's this huge",
    "start": "1017519",
    "end": "1019880"
  },
  {
    "text": "problem which is detecting cheating in",
    "start": "1019880",
    "end": "1022560"
  },
  {
    "text": "chess",
    "start": "1022560",
    "end": "1024079"
  },
  {
    "text": "so my I guess my point is is where",
    "start": "1024079",
    "end": "1027000"
  },
  {
    "text": "writing we're writing these reports as",
    "start": "1027000",
    "end": "1028678"
  },
  {
    "text": "humans humans assess them and decide",
    "start": "1028679",
    "end": "1031438"
  },
  {
    "text": "whether or not there actually was",
    "start": "1031439",
    "end": "1032480"
  },
  {
    "text": "cheating",
    "start": "1032480",
    "end": "1033959"
  },
  {
    "text": "and even that may be wrong um and I",
    "start": "1033959",
    "end": "1037600"
  },
  {
    "text": "argue that we should produce a closed",
    "start": "1037600",
    "end": "1039640"
  },
  {
    "text": "data type um but there's an obvious",
    "start": "1039640",
    "end": "1041520"
  },
  {
    "text": "problem with this closed data type which",
    "start": "1041520",
    "end": "1042839"
  },
  {
    "text": "is there's now a new cheat detection",
    "start": "1042839",
    "end": "1044520"
  },
  {
    "text": "method that we figured out today because",
    "start": "1044520",
    "end": "1047558"
  },
  {
    "text": "this happens a lot so this whole idea of",
    "start": "1047559",
    "end": "1050480"
  },
  {
    "text": "cheating is moving so fast that adding",
    "start": "1050480",
    "end": "1052200"
  },
  {
    "text": "Constructors to data types is happening",
    "start": "1052200",
    "end": "1055559"
  },
  {
    "text": "so I argue that we should you know start",
    "start": "1055559",
    "end": "1058240"
  },
  {
    "text": "doing this it's written in Scala um",
    "start": "1058240",
    "end": "1060400"
  },
  {
    "text": "which makes this a little bit more",
    "start": "1060400",
    "end": "1061640"
  },
  {
    "text": "difficult or a lot more difficult but",
    "start": "1061640",
    "end": "1064880"
  },
  {
    "text": "um I argue that we should be doing these",
    "start": "1064880",
    "end": "1067120"
  },
  {
    "text": "kinds of techniques so I'll give you yet",
    "start": "1067120",
    "end": "1068840"
  },
  {
    "text": "another example this one is kind of in",
    "start": "1068840",
    "end": "1071679"
  },
  {
    "text": "um another one of my hobby areas which",
    "start": "1071679",
    "end": "1073440"
  },
  {
    "text": "is um um",
    "start": "1073440",
    "end": "1075120"
  },
  {
    "text": "gtic so whenever you sort of tracked",
    "start": "1075120",
    "end": "1078320"
  },
  {
    "text": "turn your G GPS Lo GPS on and you've",
    "start": "1078320",
    "end": "1080440"
  },
  {
    "text": "tracked where you're moving or your",
    "start": "1080440",
    "end": "1082640"
  },
  {
    "text": "car's moving you're using it's usually",
    "start": "1082640",
    "end": "1084600"
  },
  {
    "text": "logged in What's called the GPX data",
    "start": "1084600",
    "end": "1086799"
  },
  {
    "text": "format",
    "start": "1086799",
    "end": "1088960"
  },
  {
    "text": "um and if you have a look at the GPX",
    "start": "1088960",
    "end": "1091600"
  },
  {
    "text": "data format you'll see that a GPX has",
    "start": "1091600",
    "end": "1093440"
  },
  {
    "text": "this and this has that and that has that",
    "start": "1093440",
    "end": "1095400"
  },
  {
    "text": "and so on and for those of you who are",
    "start": "1095400",
    "end": "1096919"
  },
  {
    "text": "familiar with lenses at least a little",
    "start": "1096919",
    "end": "1099120"
  },
  {
    "text": "bit you'll know that in order to get",
    "start": "1099120",
    "end": "1101120"
  },
  {
    "text": "down into that sort of that tree of",
    "start": "1101120",
    "end": "1103600"
  },
  {
    "text": "object types you sort of compose all",
    "start": "1103600",
    "end": "1105360"
  },
  {
    "text": "these lenses up together and then you",
    "start": "1105360",
    "end": "1107400"
  },
  {
    "text": "say you know do your operation and it'll",
    "start": "1107400",
    "end": "1109360"
  },
  {
    "text": "walk down the object graph for you um",
    "start": "1109360",
    "end": "1112400"
  },
  {
    "text": "the incidental Advantage is if I need to",
    "start": "1112400",
    "end": "1115280"
  },
  {
    "text": "sort of go from you know say this this",
    "start": "1115280",
    "end": "1117880"
  },
  {
    "text": "level of the treat to this one here I",
    "start": "1117880",
    "end": "1119720"
  },
  {
    "text": "sort of glue the three things together",
    "start": "1119720",
    "end": "1121280"
  },
  {
    "text": "and then do the thing that I need to do",
    "start": "1121280",
    "end": "1123640"
  },
  {
    "text": "um if I do that enough times I need to",
    "start": "1123640",
    "end": "1126320"
  },
  {
    "text": "come up with an identifier name for that",
    "start": "1126320",
    "end": "1127919"
  },
  {
    "text": "thing that I just did and that's the",
    "start": "1127919",
    "end": "1129840"
  },
  {
    "text": "hardest programming problem that I've",
    "start": "1129840",
    "end": "1131400"
  },
  {
    "text": "ever had um which is coming up with",
    "start": "1131400",
    "end": "1133799"
  },
  {
    "text": "identifier",
    "start": "1133799",
    "end": "1135360"
  },
  {
    "text": "names so you know we do these kinds of",
    "start": "1135360",
    "end": "1137600"
  },
  {
    "text": "things glue this one with with this one",
    "start": "1137600",
    "end": "1139200"
  },
  {
    "text": "this one with this one and so",
    "start": "1139200",
    "end": "1142679"
  },
  {
    "text": "on um but",
    "start": "1142679",
    "end": "1145919"
  },
  {
    "text": "basically because I can uh come up with",
    "start": "1145919",
    "end": "1148400"
  },
  {
    "text": "the data type and say every level of",
    "start": "1148400",
    "end": "1150679"
  },
  {
    "text": "that object graph satisfies this type",
    "start": "1150679",
    "end": "1152960"
  },
  {
    "text": "class then there's only one identify",
    "start": "1152960",
    "end": "1155280"
  },
  {
    "text": "name that I need to come up with and",
    "start": "1155280",
    "end": "1156480"
  },
  {
    "text": "that is it has a Latitude somewhere",
    "start": "1156480",
    "end": "1158200"
  },
  {
    "text": "within the uh within the object",
    "start": "1158200",
    "end": "1160960"
  },
  {
    "text": "graph all right so instead of saying a",
    "start": "1160960",
    "end": "1162960"
  },
  {
    "text": "GPX has uh whatever it does tracks which",
    "start": "1162960",
    "end": "1166679"
  },
  {
    "text": "have track segments and so on just all",
    "start": "1166679",
    "end": "1169159"
  },
  {
    "text": "of those things have latitudes and then",
    "start": "1169159",
    "end": "1170600"
  },
  {
    "text": "I just say",
    "start": "1170600",
    "end": "1172320"
  },
  {
    "text": "latitude no more coming up with identify",
    "start": "1172320",
    "end": "1174559"
  },
  {
    "text": "names I'm not joking that's the hardest",
    "start": "1174559",
    "end": "1176280"
  },
  {
    "text": "problem that I have in Pro",
    "start": "1176280",
    "end": "1178159"
  },
  {
    "text": "programming it really is",
    "start": "1178159",
    "end": "1181360"
  },
  {
    "text": "so let me now tell you about some of uh",
    "start": "1181360",
    "end": "1184080"
  },
  {
    "text": "the penalties or at least what I",
    "start": "1184080",
    "end": "1185880"
  },
  {
    "text": "perceive to be the penalties um I'm I'm",
    "start": "1185880",
    "end": "1187679"
  },
  {
    "text": "sure there's",
    "start": "1187679",
    "end": "1189200"
  },
  {
    "text": "more so every time I do this I can't I",
    "start": "1189200",
    "end": "1192120"
  },
  {
    "text": "have to do boiler plate um so the lens",
    "start": "1192120",
    "end": "1194120"
  },
  {
    "text": "Library comes with lots of great",
    "start": "1194120",
    "end": "1195720"
  },
  {
    "text": "libraries to get rid of boilerplate and",
    "start": "1195720",
    "end": "1197200"
  },
  {
    "text": "I'm deliberately throwing all of those",
    "start": "1197200",
    "end": "1198440"
  },
  {
    "text": "away in order to do this thing that I'm",
    "start": "1198440",
    "end": "1201120"
  },
  {
    "text": "doing um so every time I have a field or",
    "start": "1201120",
    "end": "1203799"
  },
  {
    "text": "a data type Constructor I have to write",
    "start": "1203799",
    "end": "1206120"
  },
  {
    "text": "all of that which is a lot a person has",
    "start": "1206120",
    "end": "1208720"
  },
  {
    "text": "an age now I got a lot of work to",
    "start": "1208720",
    "end": "1211520"
  },
  {
    "text": "do um type errors are difficult so this",
    "start": "1211520",
    "end": "1214440"
  },
  {
    "text": "this is um a latitude and",
    "start": "1214440",
    "end": "1217039"
  },
  {
    "text": "longitude so you",
    "start": "1217039",
    "end": "1220159"
  },
  {
    "text": "know that kind of sucks what does that",
    "start": "1220159",
    "end": "1224080"
  },
  {
    "text": "say um something about we need to get",
    "start": "1224080",
    "end": "1226840"
  },
  {
    "text": "types to write our programs as we were",
    "start": "1226840",
    "end": "1228840"
  },
  {
    "text": "this",
    "start": "1228840",
    "end": "1229559"
  },
  {
    "text": "morning um but I mean I find these",
    "start": "1229559",
    "end": "1232039"
  },
  {
    "text": "difficult these type eras difficult to",
    "start": "1232039",
    "end": "1233159"
  },
  {
    "text": "navigate it would be much nicer if it",
    "start": "1233159",
    "end": "1235039"
  },
  {
    "text": "said you know the floating Point numbers",
    "start": "1235039",
    "end": "1237280"
  },
  {
    "text": "out of range or whatever it might",
    "start": "1237280",
    "end": "1239039"
  },
  {
    "text": "be um and more importantly this is",
    "start": "1239039",
    "end": "1241960"
  },
  {
    "text": "actually where my work is rather than my",
    "start": "1241960",
    "end": "1243559"
  },
  {
    "text": "hobbies um which is uh I want to pass a",
    "start": "1243559",
    "end": "1247520"
  },
  {
    "text": "Java class file however I want the type",
    "start": "1247520",
    "end": "1250080"
  },
  {
    "text": "signature to not mention Java class",
    "start": "1250080",
    "end": "1253120"
  },
  {
    "text": "files okay so basically this is the",
    "start": "1253120",
    "end": "1256760"
  },
  {
    "text": "structure of a Java class file pulled",
    "start": "1256760",
    "end": "1259039"
  },
  {
    "text": "out",
    "start": "1259039",
    "end": "1260559"
  },
  {
    "text": "into tip classes um I think it's a bad",
    "start": "1260559",
    "end": "1264640"
  },
  {
    "text": "idea for many reasons I just wanted to",
    "start": "1264640",
    "end": "1266480"
  },
  {
    "text": "see if I could do it um and I could um",
    "start": "1266480",
    "end": "1270120"
  },
  {
    "text": "so there's the page right down there and",
    "start": "1270120",
    "end": "1272159"
  },
  {
    "text": "all the type variables constrained all",
    "start": "1272159",
    "end": "1273760"
  },
  {
    "text": "up there if you got rid of the PNF and",
    "start": "1273760",
    "end": "1275600"
  },
  {
    "text": "you just said hey look we're only",
    "start": "1275600",
    "end": "1277000"
  },
  {
    "text": "concerned with prisms or something for a",
    "start": "1277000",
    "end": "1279320"
  },
  {
    "text": "particular case then most of those would",
    "start": "1279320",
    "end": "1281480"
  },
  {
    "text": "collapse away the P andf which P andf",
    "start": "1281480",
    "end": "1284039"
  },
  {
    "text": "when you put the P andf parameters in",
    "start": "1284039",
    "end": "1285360"
  },
  {
    "text": "all of your classes oh yeah you have to",
    "start": "1285360",
    "end": "1288039"
  },
  {
    "text": "care about every function that you",
    "start": "1288039",
    "end": "1289520"
  },
  {
    "text": "happen to",
    "start": "1289520",
    "end": "1290559"
  },
  {
    "text": "use if you if you oh the PNF way back",
    "start": "1290559",
    "end": "1293760"
  },
  {
    "text": "here right okay yeah when you when you",
    "start": "1293760",
    "end": "1295240"
  },
  {
    "text": "when you have your PNF there you just",
    "start": "1295240",
    "end": "1297320"
  },
  {
    "text": "said the S right and you only concerned",
    "start": "1297320",
    "end": "1298640"
  },
  {
    "text": "what as move number is either a lens or",
    "start": "1298640",
    "end": "1300400"
  },
  {
    "text": "prism yeah but I hit let's just say you",
    "start": "1300400",
    "end": "1303360"
  },
  {
    "text": "only if I did do that y then and I knew",
    "start": "1303360",
    "end": "1306240"
  },
  {
    "text": "it was a pris all parameters vanish then",
    "start": "1306240",
    "end": "1308600"
  },
  {
    "text": "you can always rely on this this working",
    "start": "1308600",
    "end": "1310400"
  },
  {
    "text": "for every",
    "start": "1310400",
    "end": "1311440"
  },
  {
    "text": "prism that do you that for every data",
    "start": "1311440",
    "end": "1313799"
  },
  {
    "text": "type that you're working on this AIS a",
    "start": "1313799",
    "end": "1315200"
  },
  {
    "text": "prism so that that doing that for like",
    "start": "1315200",
    "end": "1318000"
  },
  {
    "text": "the lens like combinators with lowercase",
    "start": "1318000",
    "end": "1320080"
  },
  {
    "text": "names and the prism like combinators you",
    "start": "1320080",
    "end": "1322440"
  },
  {
    "text": "you asked what what are you doing wrong",
    "start": "1322440",
    "end": "1324520"
  },
  {
    "text": "yeah that would probably be the the",
    "start": "1324520",
    "end": "1326679"
  },
  {
    "text": "biggest single change like the the most",
    "start": "1326679",
    "end": "1329960"
  },
  {
    "text": "empowering change you can make to to",
    "start": "1329960",
    "end": "1331400"
  },
  {
    "text": "clean up that c right so tell me tell me",
    "start": "1331400",
    "end": "1334240"
  },
  {
    "text": "if if I've got this right right so if I",
    "start": "1334240",
    "end": "1336200"
  },
  {
    "text": "get rid of this p and the F here what",
    "start": "1336200",
    "end": "1338320"
  },
  {
    "text": "will happen is the touch engine will be",
    "start": "1338320",
    "end": "1340279"
  },
  {
    "text": "specific to say prism or lens or",
    "start": "1340279",
    "end": "1341919"
  },
  {
    "text": "traversal or whatever it might be you",
    "start": "1341919",
    "end": "1343440"
  },
  {
    "text": "won't be able find it yes and as long as",
    "start": "1343440",
    "end": "1345960"
  },
  {
    "text": "the thing that I'm",
    "start": "1345960",
    "end": "1347279"
  },
  {
    "text": "doing um",
    "start": "1347279",
    "end": "1349679"
  },
  {
    "text": "would not otherwise exploit that like",
    "start": "1349679",
    "end": "1352000"
  },
  {
    "text": "exploit that generalization then I'll",
    "start": "1352000",
    "end": "1353440"
  },
  {
    "text": "get a benefit so I I I I'm aware of that",
    "start": "1353440",
    "end": "1357080"
  },
  {
    "text": "one um and I probably will rewrite that",
    "start": "1357080",
    "end": "1360320"
  },
  {
    "text": "code to do that I just I mean this was",
    "start": "1360320",
    "end": "1362120"
  },
  {
    "text": "this was kind of like could could I",
    "start": "1362120",
    "end": "1363679"
  },
  {
    "text": "actually do it you know what how how",
    "start": "1363679",
    "end": "1365880"
  },
  {
    "text": "long is it going to take and the answer",
    "start": "1365880",
    "end": "1367039"
  },
  {
    "text": "is like you know most of a day we we",
    "start": "1367039",
    "end": "1369440"
  },
  {
    "text": "actually dumbed down all of the",
    "start": "1369440",
    "end": "1371159"
  },
  {
    "text": "exception uh prism Machinery that we",
    "start": "1371159",
    "end": "1373640"
  },
  {
    "text": "have in control exception lens go from",
    "start": "1373640",
    "end": "1376520"
  },
  {
    "text": "this scheme to the simpler scheme",
    "start": "1376520",
    "end": "1378240"
  },
  {
    "text": "because",
    "start": "1378240",
    "end": "1379440"
  },
  {
    "text": "nobody was using it because they",
    "start": "1379440",
    "end": "1380640"
  },
  {
    "text": "couldn't deal with all the P's and the",
    "start": "1380640",
    "end": "1382240"
  },
  {
    "text": "fs yeah well my question was could I",
    "start": "1382240",
    "end": "1384960"
  },
  {
    "text": "deal with it and and the answer is like",
    "start": "1384960",
    "end": "1387039"
  },
  {
    "text": "just um yeah only barely do it guy could",
    "start": "1387039",
    "end": "1391559"
  },
  {
    "text": "do it a couple of other people on the",
    "start": "1391559",
    "end": "1392640"
  },
  {
    "text": "lens project could do it yeah I've",
    "start": "1392640",
    "end": "1394279"
  },
  {
    "text": "learned how to do it El bother right um",
    "start": "1394279",
    "end": "1397400"
  },
  {
    "text": "I can see why yeah I I now know the",
    "start": "1397400",
    "end": "1399240"
  },
  {
    "text": "answer to why",
    "start": "1399240",
    "end": "1401200"
  },
  {
    "text": "yeah um so anyway I do have this type",
    "start": "1401200",
    "end": "1404840"
  },
  {
    "text": "signature um and I'm not proud of it I",
    "start": "1404840",
    "end": "1408000"
  },
  {
    "text": "mean here I'm confessing here um but",
    "start": "1408000",
    "end": "1411799"
  },
  {
    "text": "yeah basically the goal was could I",
    "start": "1411799",
    "end": "1413679"
  },
  {
    "text": "could I make this not mention um Java",
    "start": "1413679",
    "end": "1416480"
  },
  {
    "text": "source",
    "start": "1416480",
    "end": "1417520"
  },
  {
    "text": "files um and and and the Practical goal",
    "start": "1417520",
    "end": "1420279"
  },
  {
    "text": "was could I write the paraa to work",
    "start": "1420279",
    "end": "1422000"
  },
  {
    "text": "against 1.5 and 1.7 versions of the",
    "start": "1422000",
    "end": "1424960"
  },
  {
    "text": "jvm um uh from the same function right",
    "start": "1424960",
    "end": "1428600"
  },
  {
    "text": "so that is to say if I change the format",
    "start": "1428600",
    "end": "1430279"
  },
  {
    "text": "of the class file do all the referencing",
    "start": "1430279",
    "end": "1432159"
  },
  {
    "text": "functions and need to change and the",
    "start": "1432159",
    "end": "1434360"
  },
  {
    "text": "answer was no so I kind of prototyped",
    "start": "1434360",
    "end": "1437120"
  },
  {
    "text": "that and I think I'd still get that",
    "start": "1437120",
    "end": "1438480"
  },
  {
    "text": "Advantage if I did the thing that you",
    "start": "1438480",
    "end": "1439600"
  },
  {
    "text": "said the other question I had is did you",
    "start": "1439600",
    "end": "1441840"
  },
  {
    "text": "just try not writing the signature",
    "start": "1441840",
    "end": "1443440"
  },
  {
    "text": "putting the yeah putting the disable of",
    "start": "1443440",
    "end": "1445720"
  },
  {
    "text": "the warning for missing type signatures",
    "start": "1445720",
    "end": "1447559"
  },
  {
    "text": "absolutely that's what I did I did not",
    "start": "1447559",
    "end": "1449640"
  },
  {
    "text": "type",
    "start": "1449640",
    "end": "1451159"
  },
  {
    "text": "that yeah I mean I kind of progressively",
    "start": "1451159",
    "end": "1454760"
  },
  {
    "text": "work towards that but there was a lot of",
    "start": "1454760",
    "end": "1456480"
  },
  {
    "text": "copying and pasting going on um so I I",
    "start": "1456480",
    "end": "1460120"
  },
  {
    "text": "guess what I'm getting at is is don't",
    "start": "1460120",
    "end": "1462279"
  },
  {
    "text": "I've gone overboard here I don't do that",
    "start": "1462279",
    "end": "1465000"
  },
  {
    "text": "and it agrees",
    "start": "1465000",
    "end": "1467120"
  },
  {
    "text": "so um and and I think in my particular",
    "start": "1467120",
    "end": "1470279"
  },
  {
    "text": "so my my real practical goal was to",
    "start": "1470279",
    "end": "1473399"
  },
  {
    "text": "determine if I could pause both 1.5 and",
    "start": "1473399",
    "end": "1476000"
  },
  {
    "text": "1.7 without changing the referencing",
    "start": "1476000",
    "end": "1478120"
  },
  {
    "text": "functions I've got to the answer yes and",
    "start": "1478120",
    "end": "1480480"
  },
  {
    "text": "I believe that if I did the thing that",
    "start": "1480480",
    "end": "1481799"
  },
  {
    "text": "Ed mentioned which is to specialize the",
    "start": "1481799",
    "end": "1483679"
  },
  {
    "text": "types A little bit more um which would",
    "start": "1483679",
    "end": "1485880"
  },
  {
    "text": "collapse all of that down a lot I would",
    "start": "1485880",
    "end": "1487440"
  },
  {
    "text": "still be able to achieve that goal so I",
    "start": "1487440",
    "end": "1490240"
  },
  {
    "text": "want to be able to just look at my types",
    "start": "1490240",
    "end": "1491679"
  },
  {
    "text": "and",
    "start": "1491679",
    "end": "1492559"
  },
  {
    "text": "say this definitely works right so when",
    "start": "1492559",
    "end": "1496520"
  },
  {
    "text": "um like I've got bigger plans than just",
    "start": "1496520",
    "end": "1498080"
  },
  {
    "text": "ja because Java's quite boring so moving",
    "start": "1498080",
    "end": "1500320"
  },
  {
    "text": "on",
    "start": "1500320",
    "end": "1502039"
  },
  {
    "text": "so yeah I'll just mention that so and I",
    "start": "1502039",
    "end": "1505760"
  },
  {
    "text": "would hope to work with future Java",
    "start": "1505760",
    "end": "1507360"
  },
  {
    "text": "versions just as a use case not because",
    "start": "1507360",
    "end": "1510000"
  },
  {
    "text": "that is an aspiration of",
    "start": "1510000",
    "end": "1512600"
  },
  {
    "text": "mine um because it really not um and I",
    "start": "1512600",
    "end": "1515960"
  },
  {
    "text": "have parametricity right so I can just",
    "start": "1515960",
    "end": "1517440"
  },
  {
    "text": "look at the types and I by virtue of the",
    "start": "1517440",
    "end": "1520880"
  },
  {
    "text": "fact that they don't mention uh the Java",
    "start": "1520880",
    "end": "1523360"
  },
  {
    "text": "format I know that they will work",
    "start": "1523360",
    "end": "1525559"
  },
  {
    "text": "against um those future things and and",
    "start": "1525559",
    "end": "1527720"
  },
  {
    "text": "alternative things",
    "start": "1527720",
    "end": "1529480"
  },
  {
    "text": "so it is my opinion that um the",
    "start": "1529480",
    "end": "1531559"
  },
  {
    "text": "expression problem and that is I can",
    "start": "1531559",
    "end": "1533640"
  },
  {
    "text": "write functions that reference data",
    "start": "1533640",
    "end": "1535960"
  },
  {
    "text": "types um without referencing them in",
    "start": "1535960",
    "end": "1538919"
  },
  {
    "text": "their types and have those functions",
    "start": "1538919",
    "end": "1540559"
  },
  {
    "text": "still work has been conquered in part",
    "start": "1540559",
    "end": "1542200"
  },
  {
    "text": "with this",
    "start": "1542200",
    "end": "1543399"
  },
  {
    "text": "technique",
    "start": "1543399",
    "end": "1545080"
  },
  {
    "text": "um however there are penalties and I I",
    "start": "1545080",
    "end": "1548720"
  },
  {
    "text": "ask you um is there an even better way",
    "start": "1548720",
    "end": "1551679"
  },
  {
    "text": "and you really is just Ed so and anyone",
    "start": "1551679",
    "end": "1555159"
  },
  {
    "text": "else no seriously I I would like to know",
    "start": "1555159",
    "end": "1557320"
  },
  {
    "text": "can we do better",
    "start": "1557320",
    "end": "1559279"
  },
  {
    "text": "um and so thanks everyone for listening",
    "start": "1559279",
    "end": "1561840"
  },
  {
    "text": "um I hope some of that made sense um and",
    "start": "1561840",
    "end": "1564919"
  },
  {
    "text": "uh I'm happy to take questions",
    "start": "1564919",
    "end": "1568919"
  },
  {
    "text": "[Applause]",
    "start": "1569060",
    "end": "1573950"
  }
]