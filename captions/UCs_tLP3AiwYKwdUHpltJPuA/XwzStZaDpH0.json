[
  {
    "start": "0",
    "end": "58000"
  },
  {
    "text": "[Music]",
    "start": "970",
    "end": "7838"
  },
  {
    "text": "so i'm eugene",
    "start": "13440",
    "end": "14320"
  },
  {
    "text": "and i'm glad to tell you some facts",
    "start": "14320",
    "end": "16240"
  },
  {
    "text": "about coffin i",
    "start": "16240",
    "end": "17920"
  },
  {
    "text": "i'm not sure if you have ever tried",
    "start": "17920",
    "end": "20160"
  },
  {
    "text": "cotton before",
    "start": "20160",
    "end": "21439"
  },
  {
    "text": "but please don't think i will not",
    "start": "21439",
    "end": "23519"
  },
  {
    "text": "explain you them",
    "start": "23519",
    "end": "24560"
  },
  {
    "text": "like the basics of quarter and i would",
    "start": "24560",
    "end": "26320"
  },
  {
    "text": "rather try to",
    "start": "26320",
    "end": "27599"
  },
  {
    "text": "just work with some interest or there's",
    "start": "27599",
    "end": "29439"
  },
  {
    "text": "some fun around the corner and some",
    "start": "29439",
    "end": "31359"
  },
  {
    "text": "random facts around it i decided i",
    "start": "31359",
    "end": "33920"
  },
  {
    "text": "especially picked the facts which are",
    "start": "33920",
    "end": "35600"
  },
  {
    "text": "not like",
    "start": "35600",
    "end": "36800"
  },
  {
    "text": "obvious i hope so well if it's if i'm",
    "start": "36800",
    "end": "39200"
  },
  {
    "text": "not",
    "start": "39200",
    "end": "39920"
  },
  {
    "text": "selling you truth don't tell me in the",
    "start": "39920",
    "end": "41600"
  },
  {
    "text": "comments or any questions i'll be",
    "start": "41600",
    "end": "43280"
  },
  {
    "text": "happy to know if it's obvious fact or",
    "start": "43280",
    "end": "45360"
  },
  {
    "text": "not uh okay",
    "start": "45360",
    "end": "46879"
  },
  {
    "text": "so uh to start with uh you may have",
    "start": "46879",
    "end": "49840"
  },
  {
    "text": "noticed that there is",
    "start": "49840",
    "end": "50800"
  },
  {
    "text": "something strange in this title of this",
    "start": "50800",
    "end": "52640"
  },
  {
    "text": "presentation and",
    "start": "52640",
    "end": "53920"
  },
  {
    "text": "in fact it's not a smiley and in fact",
    "start": "53920",
    "end": "57120"
  },
  {
    "text": "it's uh a feature",
    "start": "57120",
    "end": "58960"
  },
  {
    "start": "58000",
    "end": "113000"
  },
  {
    "text": "which is added to the recently released",
    "start": "58960",
    "end": "61039"
  },
  {
    "text": "quarterly 1.4",
    "start": "61039",
    "end": "62320"
  },
  {
    "text": "so now you can use the commas at the end",
    "start": "62320",
    "end": "64799"
  },
  {
    "text": "of",
    "start": "64799",
    "end": "65840"
  },
  {
    "text": "as at the end of the last parameter in a",
    "start": "65840",
    "end": "67680"
  },
  {
    "text": "function calls for example",
    "start": "67680",
    "end": "69119"
  },
  {
    "text": "and it's cool if you for example try the",
    "start": "69119",
    "end": "71119"
  },
  {
    "text": "go programming language",
    "start": "71119",
    "end": "72159"
  },
  {
    "text": "you may have experienced it this way but",
    "start": "72159",
    "end": "74880"
  },
  {
    "text": "here in kotlin you're not forced to use",
    "start": "74880",
    "end": "76720"
  },
  {
    "text": "it it's optional",
    "start": "76720",
    "end": "77840"
  },
  {
    "text": "but you can use it why well if you",
    "start": "77840",
    "end": "81439"
  },
  {
    "text": "someone else would come to include yet",
    "start": "81439",
    "end": "82960"
  },
  {
    "text": "another line there will be only one line",
    "start": "82960",
    "end": "85200"
  },
  {
    "text": "change",
    "start": "85200",
    "end": "85680"
  },
  {
    "text": "no two lines change well it's good at",
    "start": "85680",
    "end": "88240"
  },
  {
    "text": "least for me because",
    "start": "88240",
    "end": "89119"
  },
  {
    "text": "i will generate like two times less",
    "start": "89119",
    "end": "91439"
  },
  {
    "text": "lines line changes",
    "start": "91439",
    "end": "92880"
  },
  {
    "text": "within a day of work for others it might",
    "start": "92880",
    "end": "95200"
  },
  {
    "text": "be a trouble because",
    "start": "95200",
    "end": "96240"
  },
  {
    "text": "oh yeah you no longer need to update the",
    "start": "96240",
    "end": "98560"
  },
  {
    "text": "upper line and you don't want to need to",
    "start": "98560",
    "end": "100560"
  },
  {
    "text": "change",
    "start": "100560",
    "end": "101280"
  },
  {
    "text": "and there to struggle with the git",
    "start": "101280",
    "end": "103600"
  },
  {
    "text": "merges",
    "start": "103600",
    "end": "104399"
  },
  {
    "text": "when i added a column comma and there is",
    "start": "104399",
    "end": "107759"
  },
  {
    "text": "someone added yet another comma and so",
    "start": "107759",
    "end": "109360"
  },
  {
    "text": "on",
    "start": "109360",
    "end": "109600"
  },
  {
    "text": "well this is a feature on 1.4 and is",
    "start": "109600",
    "end": "112640"
  },
  {
    "text": "actually the warm up uh well",
    "start": "112640",
    "end": "116880"
  },
  {
    "start": "113000",
    "end": "422000"
  },
  {
    "text": "the thing is that uh i decided to go a",
    "start": "116880",
    "end": "119200"
  },
  {
    "text": "little bit with history",
    "start": "119200",
    "end": "120399"
  },
  {
    "text": "and i would like to explain why kotlin",
    "start": "120399",
    "end": "123040"
  },
  {
    "text": "you know cornell started like almost",
    "start": "123040",
    "end": "125200"
  },
  {
    "text": "nine years ago and the jetbrains nine",
    "start": "125200",
    "end": "127920"
  },
  {
    "text": "years ago it's",
    "start": "127920",
    "end": "128879"
  },
  {
    "text": "2011 or something we had a huge java",
    "start": "128879",
    "end": "132480"
  },
  {
    "text": "application which is called intelligent",
    "start": "132480",
    "end": "134080"
  },
  {
    "text": "we've been supporting several",
    "start": "134080",
    "end": "135200"
  },
  {
    "text": "programming languages in this ie",
    "start": "135200",
    "end": "137280"
  },
  {
    "text": "and at that time we decided to give it a",
    "start": "137280",
    "end": "139280"
  },
  {
    "text": "try to figure out what",
    "start": "139280",
    "end": "140640"
  },
  {
    "text": "is the best language for us at jetbrains",
    "start": "140640",
    "end": "142720"
  },
  {
    "text": "to develop intellij",
    "start": "142720",
    "end": "144160"
  },
  {
    "text": "further and by that time nine years ago",
    "start": "144160",
    "end": "147520"
  },
  {
    "text": "java was not moving that fast as it does",
    "start": "147520",
    "end": "149680"
  },
  {
    "text": "now and then there are several other",
    "start": "149680",
    "end": "151680"
  },
  {
    "text": "programming languages flourishing around",
    "start": "151680",
    "end": "153519"
  },
  {
    "text": "jvm platform so we've made it a try and",
    "start": "153519",
    "end": "156640"
  },
  {
    "text": "even more",
    "start": "156640",
    "end": "157360"
  },
  {
    "text": "actually uh some of these experiments",
    "start": "157360",
    "end": "160640"
  },
  {
    "text": "are still in their open source ripoff",
    "start": "160640",
    "end": "162080"
  },
  {
    "text": "intellij community for example",
    "start": "162080",
    "end": "163760"
  },
  {
    "text": "so we did it a try and unfortunately we",
    "start": "163760",
    "end": "165840"
  },
  {
    "text": "figured out no silver bullet around",
    "start": "165840",
    "end": "168000"
  },
  {
    "text": "and we decided to experiment on having",
    "start": "168000",
    "end": "169840"
  },
  {
    "text": "yet in our language to solve our points",
    "start": "169840",
    "end": "172080"
  },
  {
    "text": "our problem center which we would like",
    "start": "172080",
    "end": "174319"
  },
  {
    "text": "to use and the first one is concise",
    "start": "174319",
    "end": "176640"
  },
  {
    "text": "sometimes you generate a code say in",
    "start": "176640",
    "end": "178400"
  },
  {
    "text": "java or any other languages with your id",
    "start": "178400",
    "end": "180640"
  },
  {
    "text": "or manually",
    "start": "180640",
    "end": "181840"
  },
  {
    "text": "and it's better to allow make the",
    "start": "181840",
    "end": "184159"
  },
  {
    "text": "language designed the way where you",
    "start": "184159",
    "end": "185920"
  },
  {
    "text": "don't need it",
    "start": "185920",
    "end": "186800"
  },
  {
    "text": "so you can just express it what you need",
    "start": "186800",
    "end": "188720"
  },
  {
    "text": "in the shorter ways",
    "start": "188720",
    "end": "190319"
  },
  {
    "text": "or for example if you generated some",
    "start": "190319",
    "end": "191920"
  },
  {
    "text": "requests or hashcodes in java",
    "start": "191920",
    "end": "194159"
  },
  {
    "text": "you never know if it's generated or",
    "start": "194159",
    "end": "196400"
  },
  {
    "text": "someone patches it especially",
    "start": "196400",
    "end": "198239"
  },
  {
    "text": "for some specific behavior it's all the",
    "start": "198239",
    "end": "200959"
  },
  {
    "text": "time a really good investigation if you",
    "start": "200959",
    "end": "202560"
  },
  {
    "text": "see something going wrong around this",
    "start": "202560",
    "end": "204480"
  },
  {
    "text": "are the safetiness door now for now",
    "start": "204480",
    "end": "206959"
  },
  {
    "text": "safeness",
    "start": "206959",
    "end": "207920"
  },
  {
    "text": "it's a so-called one billion dollar",
    "start": "207920",
    "end": "209599"
  },
  {
    "text": "problem i mean uh that",
    "start": "209599",
    "end": "211200"
  },
  {
    "text": "in a language in kotlin the now point of",
    "start": "211200",
    "end": "213680"
  },
  {
    "text": "check sign",
    "start": "213680",
    "end": "214239"
  },
  {
    "text": "embedded into the language so you",
    "start": "214239",
    "end": "216000"
  },
  {
    "text": "unlikely to",
    "start": "216000",
    "end": "217519"
  },
  {
    "text": "have this now pointer programs when you",
    "start": "217519",
    "end": "219120"
  },
  {
    "text": "program with kotlin which is which house",
    "start": "219120",
    "end": "221440"
  },
  {
    "text": "which helps to generate the safe code",
    "start": "221440",
    "end": "223440"
  },
  {
    "text": "interoperable and there for",
    "start": "223440",
    "end": "225200"
  },
  {
    "text": "us nine years ago we had a huge 10 years",
    "start": "225200",
    "end": "228080"
  },
  {
    "text": "almost 10 years old java application",
    "start": "228080",
    "end": "230159"
  },
  {
    "text": "and saying okay we're going to rewrite",
    "start": "230159",
    "end": "231599"
  },
  {
    "text": "it into a new language was not not a",
    "start": "231599",
    "end": "233680"
  },
  {
    "text": "viable solution instead we invested into",
    "start": "233680",
    "end": "236080"
  },
  {
    "text": "the interoperability",
    "start": "236080",
    "end": "237439"
  },
  {
    "text": "so you can use kotlin along with",
    "start": "237439",
    "end": "239120"
  },
  {
    "text": "existing java or android or",
    "start": "239120",
    "end": "241280"
  },
  {
    "text": "ios or even objective c",
    "start": "241280",
    "end": "245519"
  },
  {
    "text": "code and you can reuse it together with",
    "start": "245519",
    "end": "247519"
  },
  {
    "text": "kotlin so it would go easier",
    "start": "247519",
    "end": "249360"
  },
  {
    "text": "and the last thing is to friendliness i",
    "start": "249360",
    "end": "251360"
  },
  {
    "text": "mean that if you're gonna use the new",
    "start": "251360",
    "end": "253519"
  },
  {
    "text": "language so you would try to use kotlin",
    "start": "253519",
    "end": "255280"
  },
  {
    "text": "or say you would go",
    "start": "255280",
    "end": "256160"
  },
  {
    "text": "gonna try yet another any language with",
    "start": "256160",
    "end": "258479"
  },
  {
    "text": "the tooling it helps so you may",
    "start": "258479",
    "end": "260479"
  },
  {
    "text": "even have no understanding how it works",
    "start": "260479",
    "end": "262639"
  },
  {
    "text": "you just copy java code and paste it in",
    "start": "262639",
    "end": "264479"
  },
  {
    "text": "the recording file",
    "start": "264479",
    "end": "265440"
  },
  {
    "text": "and it's converted to questions so you",
    "start": "265440",
    "end": "266800"
  },
  {
    "text": "may learn by example on how to deal with",
    "start": "266800",
    "end": "268880"
  },
  {
    "text": "it",
    "start": "268880",
    "end": "269280"
  },
  {
    "text": "so it should help and there at the",
    "start": "269280",
    "end": "271360"
  },
  {
    "text": "beginning the language was called jet",
    "start": "271360",
    "end": "273040"
  },
  {
    "text": "and its internal code name and there",
    "start": "273040",
    "end": "275520"
  },
  {
    "text": "actually a jetmaster has several",
    "start": "275520",
    "end": "277280"
  },
  {
    "text": "uh kind of a history of naming something",
    "start": "277280",
    "end": "280320"
  },
  {
    "text": "with the jet prefix like jet food",
    "start": "280320",
    "end": "282000"
  },
  {
    "text": "jetpost or jet service jet launcher",
    "start": "282000",
    "end": "284720"
  },
  {
    "text": "and other stuff and there and later",
    "start": "284720",
    "end": "287040"
  },
  {
    "text": "actually",
    "start": "287040",
    "end": "287759"
  },
  {
    "text": "i do have an i proof so in the",
    "start": "287759",
    "end": "292080"
  },
  {
    "text": "project files of intellij we used to",
    "start": "292080",
    "end": "293840"
  },
  {
    "text": "have this job language longer",
    "start": "293840",
    "end": "296160"
  },
  {
    "text": "than the language was actually called",
    "start": "296160",
    "end": "297919"
  },
  {
    "text": "chat well",
    "start": "297919",
    "end": "299360"
  },
  {
    "text": "and they're later closer to their public",
    "start": "299360",
    "end": "302000"
  },
  {
    "text": "announcement in 2011",
    "start": "302000",
    "end": "303520"
  },
  {
    "text": "uh the language was named kotlin it was",
    "start": "303520",
    "end": "305680"
  },
  {
    "text": "a temporary",
    "start": "305680",
    "end": "306560"
  },
  {
    "text": "like internal code name for any official",
    "start": "306560",
    "end": "309360"
  },
  {
    "text": "stuff and",
    "start": "309360",
    "end": "310400"
  },
  {
    "text": "we got this fancy logos at that time and",
    "start": "310400",
    "end": "313520"
  },
  {
    "text": "there",
    "start": "313520",
    "end": "314080"
  },
  {
    "text": "oh sorry well it's it's also kotlin but",
    "start": "314080",
    "end": "317199"
  },
  {
    "text": "it's not",
    "start": "317199",
    "end": "317680"
  },
  {
    "text": "the real one it's in in poland and it's",
    "start": "317680",
    "end": "320240"
  },
  {
    "text": "called cotton as well",
    "start": "320240",
    "end": "321440"
  },
  {
    "text": "okay and now i i'm gonna go further so",
    "start": "321440",
    "end": "324479"
  },
  {
    "text": "godly got this",
    "start": "324479",
    "end": "325600"
  },
  {
    "text": "uh the website in 2014 but actually",
    "start": "325600",
    "end": "328080"
  },
  {
    "text": "these are the scotland thing is i don't",
    "start": "328080",
    "end": "329840"
  },
  {
    "text": "know it's",
    "start": "329840",
    "end": "330400"
  },
  {
    "text": "way older than kotlin and if you're",
    "start": "330400",
    "end": "333520"
  },
  {
    "text": "saying in poland just take a selfie it's",
    "start": "333520",
    "end": "336080"
  },
  {
    "text": "cool isn't it",
    "start": "336080",
    "end": "337039"
  },
  {
    "text": "so you may google it it's easy to find",
    "start": "337039",
    "end": "338800"
  },
  {
    "text": "or in my slides there is a link",
    "start": "338800",
    "end": "340639"
  },
  {
    "text": "to this place okay and there then this",
    "start": "340639",
    "end": "343199"
  },
  {
    "text": "is the first website of courland there",
    "start": "343199",
    "end": "345039"
  },
  {
    "text": "is",
    "start": "345039",
    "end": "345360"
  },
  {
    "text": "i don't know who's blue south here",
    "start": "345360",
    "end": "348000"
  },
  {
    "text": "anyways",
    "start": "348000",
    "end": "348960"
  },
  {
    "text": "and there are several years later we got",
    "start": "348960",
    "end": "351120"
  },
  {
    "text": "the cozmo 1.0",
    "start": "351120",
    "end": "352479"
  },
  {
    "text": "and this is the actual website of kotlin",
    "start": "352479",
    "end": "354560"
  },
  {
    "text": "it's nothing again nothing special but",
    "start": "354560",
    "end": "356400"
  },
  {
    "text": "the version is 1.4 now and",
    "start": "356400",
    "end": "359440"
  },
  {
    "text": "before these we used to have this",
    "start": "359440",
    "end": "361199"
  },
  {
    "text": "website i really like this one",
    "start": "361199",
    "end": "362960"
  },
  {
    "text": "because this lighthouse it's actually",
    "start": "362960",
    "end": "365600"
  },
  {
    "text": "it's not",
    "start": "365600",
    "end": "366000"
  },
  {
    "text": "their stock photo this photo has a",
    "start": "366000",
    "end": "367919"
  },
  {
    "text": "history which is really related to",
    "start": "367919",
    "end": "369600"
  },
  {
    "text": "kotlin",
    "start": "369600",
    "end": "370479"
  },
  {
    "text": "so i just found yet another photo of",
    "start": "370479",
    "end": "373199"
  },
  {
    "text": "this lighthouse",
    "start": "373199",
    "end": "374800"
  },
  {
    "text": "and guess what uh this lighthouse",
    "start": "374800",
    "end": "377840"
  },
  {
    "text": "is an island which is called kotlin",
    "start": "377840",
    "end": "382240"
  },
  {
    "text": "so this island is not that far from",
    "start": "382240",
    "end": "384000"
  },
  {
    "text": "saint petersburg and essentially not",
    "start": "384000",
    "end": "385840"
  },
  {
    "text": "that far from saint-petersburg office of",
    "start": "385840",
    "end": "387360"
  },
  {
    "text": "gibrans",
    "start": "387360",
    "end": "388160"
  },
  {
    "text": "it's almost 32 kilometers and i used to",
    "start": "388160",
    "end": "390880"
  },
  {
    "text": "joke that",
    "start": "390880",
    "end": "391520"
  },
  {
    "text": "from their meeting room on that office",
    "start": "391520",
    "end": "393360"
  },
  {
    "text": "it's almost visible",
    "start": "393360",
    "end": "395199"
  },
  {
    "text": "so you may almost see this island from",
    "start": "395199",
    "end": "397600"
  },
  {
    "text": "the window",
    "start": "397600",
    "end": "398560"
  },
  {
    "text": "well and there again i have some proof",
    "start": "398560",
    "end": "402080"
  },
  {
    "text": "on this",
    "start": "402080",
    "end": "402560"
  },
  {
    "text": "this is a really cool book that it's a",
    "start": "402560",
    "end": "404160"
  },
  {
    "text": "kotlin an action book by admitted jammer",
    "start": "404160",
    "end": "405759"
  },
  {
    "text": "princess lanai soccer",
    "start": "405759",
    "end": "407199"
  },
  {
    "text": "explaining the basics of coffin and they",
    "start": "407199",
    "end": "409520"
  },
  {
    "text": "have this",
    "start": "409520",
    "end": "410240"
  },
  {
    "text": "the the explanation about the name and",
    "start": "410240",
    "end": "412639"
  },
  {
    "text": "their namesake islands",
    "start": "412639",
    "end": "414400"
  },
  {
    "text": "even more it is uh medellin who took",
    "start": "414400",
    "end": "417520"
  },
  {
    "text": "this",
    "start": "417520",
    "end": "417840"
  },
  {
    "text": "original photo from the website this is",
    "start": "417840",
    "end": "421280"
  },
  {
    "text": "this is a fun fact i hope okay i think",
    "start": "421280",
    "end": "424160"
  },
  {
    "start": "422000",
    "end": "903000"
  },
  {
    "text": "you were expecting like some program",
    "start": "424160",
    "end": "425680"
  },
  {
    "text": "programming or stuff not the history",
    "start": "425680",
    "end": "428160"
  },
  {
    "text": "and i'm not the lecturer for history so",
    "start": "428160",
    "end": "430639"
  },
  {
    "text": "i came up with a warm up for you",
    "start": "430639",
    "end": "433120"
  },
  {
    "text": "and so how do you feel what's the answer",
    "start": "433120",
    "end": "436479"
  },
  {
    "text": "even if you have if you see the question",
    "start": "436479",
    "end": "438080"
  },
  {
    "text": "for the first time just think the vowel",
    "start": "438080",
    "end": "440080"
  },
  {
    "text": "is the same as var in java 11",
    "start": "440080",
    "end": "442000"
  },
  {
    "text": "and this is a definition of variable and",
    "start": "442000",
    "end": "443680"
  },
  {
    "text": "you print the answer and if you have",
    "start": "443680",
    "end": "446240"
  },
  {
    "text": "uncertainty or you're not sure what's",
    "start": "446240",
    "end": "448160"
  },
  {
    "text": "going on you may open this on the",
    "start": "448160",
    "end": "450479"
  },
  {
    "text": "play cotton lag. on your mobile browser",
    "start": "450479",
    "end": "453039"
  },
  {
    "text": "or even in your browser",
    "start": "453039",
    "end": "454479"
  },
  {
    "text": "and take a look and give it a try to see",
    "start": "454479",
    "end": "456400"
  },
  {
    "text": "samples or try get another one",
    "start": "456400",
    "end": "458479"
  },
  {
    "text": "and in fact here i made a mistake you",
    "start": "458479",
    "end": "461199"
  },
  {
    "text": "see",
    "start": "461199",
    "end": "461759"
  },
  {
    "text": "uh this is the real world essentially so",
    "start": "461759",
    "end": "464479"
  },
  {
    "text": "i would ask you to say",
    "start": "464479",
    "end": "466160"
  },
  {
    "text": "what is now plus now encoding what's",
    "start": "466160",
    "end": "469199"
  },
  {
    "text": "will it compile will print something how",
    "start": "469199",
    "end": "471840"
  },
  {
    "text": "it would work",
    "start": "471840",
    "end": "473039"
  },
  {
    "text": "and now i'm going to explain it to you",
    "start": "473039",
    "end": "474720"
  },
  {
    "text": "so actually the pass in kotlin is the",
    "start": "474720",
    "end": "476720"
  },
  {
    "text": "operator and incorporating you can do",
    "start": "476720",
    "end": "478319"
  },
  {
    "text": "the apparel",
    "start": "478319",
    "end": "479759"
  },
  {
    "text": "reload operators only the standard",
    "start": "479759",
    "end": "481759"
  },
  {
    "text": "operators you can have a lot",
    "start": "481759",
    "end": "483120"
  },
  {
    "text": "and essentially this is the definition",
    "start": "483120",
    "end": "485759"
  },
  {
    "text": "of this plus separator it takes the",
    "start": "485759",
    "end": "487440"
  },
  {
    "text": "string",
    "start": "487440",
    "end": "488080"
  },
  {
    "text": "with question mark meaning that the",
    "start": "488080",
    "end": "489440"
  },
  {
    "text": "string can have no value and it takes",
    "start": "489440",
    "end": "491520"
  },
  {
    "text": "another",
    "start": "491520",
    "end": "492319"
  },
  {
    "text": "noble value and it prints their combined",
    "start": "492319",
    "end": "494800"
  },
  {
    "text": "string",
    "start": "494800",
    "end": "495520"
  },
  {
    "text": "and here is the trick and it's written",
    "start": "495520",
    "end": "497360"
  },
  {
    "text": "in this javadoc that if",
    "start": "497360",
    "end": "499120"
  },
  {
    "text": "the value of the parameter is now then",
    "start": "499120",
    "end": "502319"
  },
  {
    "text": "it would yield they're now quoted right",
    "start": "502319",
    "end": "505440"
  },
  {
    "text": "so essentially the example i showed you",
    "start": "505440",
    "end": "508000"
  },
  {
    "text": "before",
    "start": "508000",
    "end": "508479"
  },
  {
    "text": "is equivalent to this one so instead of",
    "start": "508479",
    "end": "510479"
  },
  {
    "text": "calling this on the plus operator",
    "start": "510479",
    "end": "512560"
  },
  {
    "text": "you might simply call the function plus",
    "start": "512560",
    "end": "514719"
  },
  {
    "text": "and there the fact that we call it on",
    "start": "514719",
    "end": "516640"
  },
  {
    "text": "there",
    "start": "516640",
    "end": "517039"
  },
  {
    "text": "on and now is not the problem because",
    "start": "517039",
    "end": "518719"
  },
  {
    "text": "this plus one is an extension function",
    "start": "518719",
    "end": "520800"
  },
  {
    "text": "it's not a member function",
    "start": "520800",
    "end": "522080"
  },
  {
    "text": "so essentially it's just a static",
    "start": "522080",
    "end": "523839"
  },
  {
    "text": "utility function which takes two",
    "start": "523839",
    "end": "525120"
  },
  {
    "text": "parameters",
    "start": "525120",
    "end": "526000"
  },
  {
    "text": "and now we are really really close to",
    "start": "526000",
    "end": "528320"
  },
  {
    "text": "the answer",
    "start": "528320",
    "end": "529279"
  },
  {
    "text": "and actually the answer is this well i'm",
    "start": "529279",
    "end": "532320"
  },
  {
    "text": "sorry for it",
    "start": "532320",
    "end": "533600"
  },
  {
    "text": "uh but this is not the puzzler's talk",
    "start": "533600",
    "end": "536399"
  },
  {
    "text": "i'm not talking puzzlers here",
    "start": "536399",
    "end": "538160"
  },
  {
    "text": "so we're gonna fix it so how we can fix",
    "start": "538160",
    "end": "541200"
  },
  {
    "text": "it",
    "start": "541200",
    "end": "542000"
  },
  {
    "text": "if you see something going wrong in your",
    "start": "542000",
    "end": "543600"
  },
  {
    "text": "program you can either do the runtime",
    "start": "543600",
    "end": "545440"
  },
  {
    "text": "check or the compile time check",
    "start": "545440",
    "end": "547279"
  },
  {
    "text": "let's start with the first one for this",
    "start": "547279",
    "end": "549200"
  },
  {
    "text": "one we need a specific type nothing",
    "start": "549200",
    "end": "551440"
  },
  {
    "text": "which is which comes from the colton",
    "start": "551440",
    "end": "552959"
  },
  {
    "text": "library and this type",
    "start": "552959",
    "end": "555040"
  },
  {
    "text": "helps to have the runtime check and even",
    "start": "555040",
    "end": "558000"
  },
  {
    "text": "compiler understands that",
    "start": "558000",
    "end": "559839"
  },
  {
    "text": "as long as i return then nothing from my",
    "start": "559839",
    "end": "562399"
  },
  {
    "text": "plus function",
    "start": "562399",
    "end": "563600"
  },
  {
    "text": "the computation would not go any further",
    "start": "563600",
    "end": "565839"
  },
  {
    "text": "so this is why this unreachable code",
    "start": "565839",
    "end": "567519"
  },
  {
    "text": "highlighting comes into say intelligent",
    "start": "567519",
    "end": "569360"
  },
  {
    "text": "or in compiler warnings",
    "start": "569360",
    "end": "571200"
  },
  {
    "text": "but okay it's good right so now our",
    "start": "571200",
    "end": "574000"
  },
  {
    "text": "program is unlikely to work",
    "start": "574000",
    "end": "575680"
  },
  {
    "text": "so have done but actually i don't like",
    "start": "575680",
    "end": "579040"
  },
  {
    "text": "this approach because",
    "start": "579040",
    "end": "580160"
  },
  {
    "text": "you never know if this happening in your",
    "start": "580160",
    "end": "582640"
  },
  {
    "text": "code base or not",
    "start": "582640",
    "end": "583920"
  },
  {
    "text": "you need to have tests you need to",
    "start": "583920",
    "end": "585680"
  },
  {
    "text": "create have a crazy coverage for unit",
    "start": "585680",
    "end": "587519"
  },
  {
    "text": "tests or integration tests",
    "start": "587519",
    "end": "589600"
  },
  {
    "text": "it's better if the program would not",
    "start": "589600",
    "end": "591120"
  },
  {
    "text": "even compile and it is actually possible",
    "start": "591120",
    "end": "593600"
  },
  {
    "text": "to do",
    "start": "593600",
    "end": "594880"
  },
  {
    "text": "and the duplicated fun is the way how we",
    "start": "594880",
    "end": "596959"
  },
  {
    "text": "achieve it the duplicated temptation",
    "start": "596959",
    "end": "599040"
  },
  {
    "text": "coding is really powerful",
    "start": "599040",
    "end": "600800"
  },
  {
    "text": "it has the level parameter where you can",
    "start": "600800",
    "end": "603120"
  },
  {
    "text": "specify",
    "start": "603120",
    "end": "604079"
  },
  {
    "text": "how you would like this duplication to",
    "start": "604079",
    "end": "606240"
  },
  {
    "text": "treated by the compiler",
    "start": "606240",
    "end": "607839"
  },
  {
    "text": "and the trick is that you may say okay",
    "start": "607839",
    "end": "609440"
  },
  {
    "text": "fine i'd like the level",
    "start": "609440",
    "end": "611120"
  },
  {
    "text": "error it would mean that the compiler",
    "start": "611120",
    "end": "613440"
  },
  {
    "text": "would reject compiling the usage of this",
    "start": "613440",
    "end": "615600"
  },
  {
    "text": "function",
    "start": "615600",
    "end": "616320"
  },
  {
    "text": "but the function would be still in the",
    "start": "616320",
    "end": "617760"
  },
  {
    "text": "bytecode for your breaker compatibility",
    "start": "617760",
    "end": "619519"
  },
  {
    "text": "compatibility so all their code would go",
    "start": "619519",
    "end": "621839"
  },
  {
    "text": "but the new record will not compile",
    "start": "621839",
    "end": "624320"
  },
  {
    "text": "for some case you may even say the level",
    "start": "624320",
    "end": "626160"
  },
  {
    "text": "equals to hidden to hide some",
    "start": "626160",
    "end": "627839"
  },
  {
    "text": "declaration from your",
    "start": "627839",
    "end": "629040"
  },
  {
    "text": "program but keep it at the vital level",
    "start": "629040",
    "end": "631920"
  },
  {
    "text": "so",
    "start": "631920",
    "end": "632720"
  },
  {
    "text": "now compiler would reject compiling this",
    "start": "632720",
    "end": "634640"
  },
  {
    "text": "program and i'm happy",
    "start": "634640",
    "end": "635839"
  },
  {
    "text": "i solved it so no one would be able to",
    "start": "635839",
    "end": "638880"
  },
  {
    "text": "compile it fine great so everyone who",
    "start": "638880",
    "end": "642560"
  },
  {
    "text": "managed to have this example",
    "start": "642560",
    "end": "644240"
  },
  {
    "text": "had to fix it fine done and it is done",
    "start": "644240",
    "end": "647760"
  },
  {
    "text": "thanks to nothing",
    "start": "647760",
    "end": "649519"
  },
  {
    "text": "well nothing is the type in code instead",
    "start": "649519",
    "end": "651279"
  },
  {
    "text": "of library and i had i told you nothing",
    "start": "651279",
    "end": "653279"
  },
  {
    "text": "about nothing but let me fix it",
    "start": "653279",
    "end": "655440"
  },
  {
    "text": "uh the nothing is a specific type",
    "start": "655440",
    "end": "657360"
  },
  {
    "text": "encoding which has",
    "start": "657360",
    "end": "658640"
  },
  {
    "text": "no values actually it's an imaginary",
    "start": "658640",
    "end": "661120"
  },
  {
    "text": "type there is no",
    "start": "661120",
    "end": "662000"
  },
  {
    "text": "real type nothing in in the standard",
    "start": "662000",
    "end": "663680"
  },
  {
    "text": "library so it's only in the compiler",
    "start": "663680",
    "end": "666079"
  },
  {
    "text": "and as long as this type has no values",
    "start": "666079",
    "end": "668800"
  },
  {
    "text": "the compiler assumes that this is a side",
    "start": "668800",
    "end": "671040"
  },
  {
    "text": "type",
    "start": "671040",
    "end": "671440"
  },
  {
    "text": "of any any type in the system like a",
    "start": "671440",
    "end": "674160"
  },
  {
    "text": "subtype of string or",
    "start": "674160",
    "end": "675839"
  },
  {
    "text": "object or into a small hint any and",
    "start": "675839",
    "end": "679040"
  },
  {
    "text": "they're",
    "start": "679040",
    "end": "679440"
  },
  {
    "text": "in fact for their execution this only",
    "start": "679440",
    "end": "682720"
  },
  {
    "text": "possibility is to",
    "start": "682720",
    "end": "683760"
  },
  {
    "text": "stop the execution like by throwing an",
    "start": "683760",
    "end": "685519"
  },
  {
    "text": "exception or killing the process",
    "start": "685519",
    "end": "687200"
  },
  {
    "text": "and this is how you can return the",
    "start": "687200",
    "end": "688800"
  },
  {
    "text": "nothing from your function",
    "start": "688800",
    "end": "690560"
  },
  {
    "text": "and here is in the powerful example say",
    "start": "690560",
    "end": "692800"
  },
  {
    "text": "in your program you need a specific",
    "start": "692800",
    "end": "694480"
  },
  {
    "text": "assertion",
    "start": "694480",
    "end": "695200"
  },
  {
    "text": "or specific crash function or like exit",
    "start": "695200",
    "end": "697920"
  },
  {
    "text": "process function",
    "start": "697920",
    "end": "698959"
  },
  {
    "text": "and you can declare it with type nothing",
    "start": "698959",
    "end": "700720"
  },
  {
    "text": "in kotlin under",
    "start": "700720",
    "end": "703200"
  },
  {
    "text": "this is how you do it on the top of the",
    "start": "703200",
    "end": "704640"
  },
  {
    "text": "slide shown and then",
    "start": "704640",
    "end": "706320"
  },
  {
    "text": "the place where you use it you no longer",
    "start": "706320",
    "end": "708000"
  },
  {
    "text": "need to make a compiler happier because",
    "start": "708000",
    "end": "710560"
  },
  {
    "text": "the compiler knows that the execution",
    "start": "710560",
    "end": "712240"
  },
  {
    "text": "would not go any further",
    "start": "712240",
    "end": "713920"
  },
  {
    "text": "cool isn't it and we may have many",
    "start": "713920",
    "end": "717040"
  },
  {
    "text": "more examples of the type nothing like",
    "start": "717040",
    "end": "718959"
  },
  {
    "text": "return like throw",
    "start": "718959",
    "end": "720399"
  },
  {
    "text": "these expressions have detect nothing",
    "start": "720399",
    "end": "722639"
  },
  {
    "text": "and it helps when you combine these",
    "start": "722639",
    "end": "724160"
  },
  {
    "text": "together",
    "start": "724160",
    "end": "725120"
  },
  {
    "text": "with different other functions in your",
    "start": "725120",
    "end": "727600"
  },
  {
    "text": "code",
    "start": "727600",
    "end": "728240"
  },
  {
    "text": "let me show you an example so the to-do",
    "start": "728240",
    "end": "731200"
  },
  {
    "text": "the to-do function just throws an",
    "start": "731200",
    "end": "732399"
  },
  {
    "text": "exception that something is not",
    "start": "732399",
    "end": "733440"
  },
  {
    "text": "implemented",
    "start": "733440",
    "end": "734240"
  },
  {
    "text": "and i can use it this way uh in",
    "start": "734240",
    "end": "736720"
  },
  {
    "text": "coordinate you may declare a function",
    "start": "736720",
    "end": "738480"
  },
  {
    "text": "which just returns an expression it's",
    "start": "738480",
    "end": "740800"
  },
  {
    "text": "with the equal sign without the",
    "start": "740800",
    "end": "742639"
  },
  {
    "text": "brackets and the return statement it's",
    "start": "742639",
    "end": "744480"
  },
  {
    "text": "shorter way to declare functions",
    "start": "744480",
    "end": "746079"
  },
  {
    "text": "and in this particular example i'm going",
    "start": "746079",
    "end": "748560"
  },
  {
    "text": "to write some algorithm and i do need",
    "start": "748560",
    "end": "750240"
  },
  {
    "text": "this function",
    "start": "750240",
    "end": "751040"
  },
  {
    "text": "for my algorithm to experiment and i",
    "start": "751040",
    "end": "753680"
  },
  {
    "text": "don't",
    "start": "753680",
    "end": "754079"
  },
  {
    "text": "want to implement these functions right",
    "start": "754079",
    "end": "755440"
  },
  {
    "text": "now so i can use the to-do function to",
    "start": "755440",
    "end": "757519"
  },
  {
    "text": "implement this it's the shorter way",
    "start": "757519",
    "end": "759600"
  },
  {
    "text": "from the standard i should the way how",
    "start": "759600",
    "end": "761680"
  },
  {
    "text": "we may do it in saying java",
    "start": "761680",
    "end": "763360"
  },
  {
    "text": "or in c like throw in an exception in c",
    "start": "763360",
    "end": "765360"
  },
  {
    "text": "plus plus there is no exception to see",
    "start": "765360",
    "end": "767920"
  },
  {
    "text": "well so i have declared this way as long",
    "start": "767920",
    "end": "770480"
  },
  {
    "text": "as the to-do returns nothing",
    "start": "770480",
    "end": "772240"
  },
  {
    "text": "the compiler is totally happy to say",
    "start": "772240",
    "end": "774320"
  },
  {
    "text": "okay nothing is a subtype of the novel",
    "start": "774320",
    "end": "776079"
  },
  {
    "text": "string or a novel item that's all fine",
    "start": "776079",
    "end": "778000"
  },
  {
    "text": "right",
    "start": "778000",
    "end": "778959"
  },
  {
    "text": "now i came up with my fancy algorithm",
    "start": "778959",
    "end": "781839"
  },
  {
    "text": "it's",
    "start": "781839",
    "end": "782320"
  },
  {
    "text": "like fi it finds an item then it loads",
    "start": "782320",
    "end": "784720"
  },
  {
    "text": "some info",
    "start": "784720",
    "end": "785440"
  },
  {
    "text": "well and when you're coding coordinate",
    "start": "785440",
    "end": "788079"
  },
  {
    "text": "and you use an ide",
    "start": "788079",
    "end": "789600"
  },
  {
    "text": "or a compiler output in id you may see",
    "start": "789600",
    "end": "792480"
  },
  {
    "text": "this grey highlighting",
    "start": "792480",
    "end": "793680"
  },
  {
    "text": "you see on the slide right and if you",
    "start": "793680",
    "end": "796079"
  },
  {
    "text": "see it and if you feel like you",
    "start": "796079",
    "end": "797680"
  },
  {
    "text": "would like to spend some time to have",
    "start": "797680",
    "end": "799680"
  },
  {
    "text": "more ideomatic code",
    "start": "799680",
    "end": "801120"
  },
  {
    "text": "what do you do you just click on this",
    "start": "801120",
    "end": "802880"
  },
  {
    "text": "light bulb in the editor",
    "start": "802880",
    "end": "804639"
  },
  {
    "text": "and just apply what it suggests to you",
    "start": "804639",
    "end": "806720"
  },
  {
    "text": "so for now it applies to use the nova",
    "start": "806720",
    "end": "808399"
  },
  {
    "text": "separator",
    "start": "808399",
    "end": "809200"
  },
  {
    "text": "and you can see it on the button with a",
    "start": "809200",
    "end": "810959"
  },
  {
    "text": "question and a column operator",
    "start": "810959",
    "end": "812720"
  },
  {
    "text": "it's easy it takes the left side if the",
    "start": "812720",
    "end": "814880"
  },
  {
    "text": "left side is null",
    "start": "814880",
    "end": "816160"
  },
  {
    "text": "then it evaluates the right side and the",
    "start": "816160",
    "end": "818480"
  },
  {
    "text": "type of the whole expression",
    "start": "818480",
    "end": "820000"
  },
  {
    "text": "is inferred by the compiler so it's",
    "start": "820000",
    "end": "823600"
  },
  {
    "text": "equivalent code but it's way shorter and",
    "start": "823600",
    "end": "825600"
  },
  {
    "text": "thanks to null nothing type the throw",
    "start": "825600",
    "end": "827519"
  },
  {
    "text": "exception has that nothing so compiler",
    "start": "827519",
    "end": "829279"
  },
  {
    "text": "knows that info now is not nullable info",
    "start": "829279",
    "end": "832079"
  },
  {
    "text": "great isn't it and i would continue",
    "start": "832079",
    "end": "834000"
  },
  {
    "text": "applying this light bulb in the",
    "start": "834000",
    "end": "835279"
  },
  {
    "text": "expression above",
    "start": "835279",
    "end": "836800"
  },
  {
    "text": "and finally i came up with the itermatic",
    "start": "836800",
    "end": "839360"
  },
  {
    "text": "and the shorter",
    "start": "839360",
    "end": "840160"
  },
  {
    "text": "way to write the same program so i've",
    "start": "840160",
    "end": "843120"
  },
  {
    "text": "replaced all the explicit",
    "start": "843120",
    "end": "844720"
  },
  {
    "text": "null checks within the trader and it",
    "start": "844720",
    "end": "846720"
  },
  {
    "text": "looks like this now and",
    "start": "846720",
    "end": "847920"
  },
  {
    "text": "i would recall you that it used to look",
    "start": "847920",
    "end": "849760"
  },
  {
    "text": "like like 10 lines",
    "start": "849760",
    "end": "851600"
  },
  {
    "text": "and now it's almost two lines and if i",
    "start": "851600",
    "end": "853920"
  },
  {
    "text": "no longer care about the exception say i",
    "start": "853920",
    "end": "856320"
  },
  {
    "text": "find to return it now",
    "start": "856320",
    "end": "857600"
  },
  {
    "text": "i can come up with this solution this is",
    "start": "857600",
    "end": "859839"
  },
  {
    "text": "called the safe call the",
    "start": "859839",
    "end": "861199"
  },
  {
    "text": "question and the dot operator so what it",
    "start": "861199",
    "end": "863839"
  },
  {
    "text": "does",
    "start": "863839",
    "end": "864480"
  },
  {
    "text": "it takes the left side if the left side",
    "start": "864480",
    "end": "866480"
  },
  {
    "text": "is not now it",
    "start": "866480",
    "end": "867519"
  },
  {
    "text": "calls the method load info otherwise the",
    "start": "867519",
    "end": "870399"
  },
  {
    "text": "total result is now",
    "start": "870399",
    "end": "871600"
  },
  {
    "text": "that's it that's so short and so fun",
    "start": "871600",
    "end": "874880"
  },
  {
    "text": "even more i can use their functional",
    "start": "874880",
    "end": "876480"
  },
  {
    "text": "programming if i like",
    "start": "876480",
    "end": "877920"
  },
  {
    "text": "so that's up to me to decide whether",
    "start": "877920",
    "end": "879839"
  },
  {
    "text": "it's okay or not",
    "start": "879839",
    "end": "881600"
  },
  {
    "text": "and there essentially i have a giveaway",
    "start": "881600",
    "end": "884480"
  },
  {
    "text": "here for you or even a joke",
    "start": "884480",
    "end": "886240"
  },
  {
    "text": "if someone would ask you how to make my",
    "start": "886240",
    "end": "888959"
  },
  {
    "text": "code more",
    "start": "888959",
    "end": "889680"
  },
  {
    "text": "idiomatic you may say nothing helps to",
    "start": "889680",
    "end": "892160"
  },
  {
    "text": "clean this code",
    "start": "892160",
    "end": "893279"
  },
  {
    "text": "i mean nothing type helps then if you",
    "start": "893279",
    "end": "895600"
  },
  {
    "text": "would do this joke please",
    "start": "895600",
    "end": "896720"
  },
  {
    "text": "explain something about nothing because",
    "start": "896720",
    "end": "898959"
  },
  {
    "text": "if you would not explain",
    "start": "898959",
    "end": "900639"
  },
  {
    "text": "nothing it would not work the right way",
    "start": "900639",
    "end": "904399"
  },
  {
    "start": "903000",
    "end": "1219000"
  },
  {
    "text": "okay now we're going to go a little bit",
    "start": "904399",
    "end": "907839"
  },
  {
    "text": "harder and we speak about generics have",
    "start": "907839",
    "end": "909839"
  },
  {
    "text": "you ever tried",
    "start": "909839",
    "end": "910800"
  },
  {
    "text": "writing generics in java for jvm say",
    "start": "910800",
    "end": "914320"
  },
  {
    "text": "actually you might use the code and then",
    "start": "914320",
    "end": "915600"
  },
  {
    "text": "do generics in javascript button we",
    "start": "915600",
    "end": "917360"
  },
  {
    "text": "won't cover this",
    "start": "917360",
    "end": "918560"
  },
  {
    "text": "well say i have a function which takes",
    "start": "918560",
    "end": "921120"
  },
  {
    "text": "the type parameter and returns nullable",
    "start": "921120",
    "end": "923279"
  },
  {
    "text": "or runable it takes type parameter which",
    "start": "923279",
    "end": "925279"
  },
  {
    "text": "must implement",
    "start": "925279",
    "end": "926320"
  },
  {
    "text": "number and runnable and there the",
    "start": "926320",
    "end": "929360"
  },
  {
    "text": "question is how would it go look in the",
    "start": "929360",
    "end": "931759"
  },
  {
    "text": "bytecode level at the jvm",
    "start": "931759",
    "end": "933360"
  },
  {
    "text": "what i do i do the following trick of",
    "start": "933360",
    "end": "935680"
  },
  {
    "text": "course you can compile this class and",
    "start": "935680",
    "end": "937120"
  },
  {
    "text": "you use some j",
    "start": "937120",
    "end": "938480"
  },
  {
    "text": "tool to decompile but i show the ui way",
    "start": "938480",
    "end": "941920"
  },
  {
    "text": "you use the shortcut and by connection",
    "start": "941920",
    "end": "944000"
  },
  {
    "text": "in ide",
    "start": "944000",
    "end": "945040"
  },
  {
    "text": "and then you can read the jvm by code of",
    "start": "945040",
    "end": "947519"
  },
  {
    "text": "this",
    "start": "947519",
    "end": "948160"
  },
  {
    "text": "class and this content file it's hard",
    "start": "948160",
    "end": "950240"
  },
  {
    "text": "and not sure everyone can read it i",
    "start": "950240",
    "end": "952240"
  },
  {
    "text": "don't like it",
    "start": "952240",
    "end": "953199"
  },
  {
    "text": "i'm not sure i even understand what's",
    "start": "953199",
    "end": "954800"
  },
  {
    "text": "written in this bytecode but i click the",
    "start": "954800",
    "end": "956639"
  },
  {
    "text": "decompile button and that's in the magic",
    "start": "956639",
    "end": "958480"
  },
  {
    "text": "so we take a quarter file",
    "start": "958480",
    "end": "959920"
  },
  {
    "text": "we generate the co thereby code the jvm",
    "start": "959920",
    "end": "962480"
  },
  {
    "text": "by code and then we use the java d",
    "start": "962480",
    "end": "964240"
  },
  {
    "text": "compiler to see what's going on inside",
    "start": "964240",
    "end": "967199"
  },
  {
    "text": "this is the way to figure out what's",
    "start": "967199",
    "end": "968720"
  },
  {
    "text": "going on in kotlin if you are not sure",
    "start": "968720",
    "end": "970480"
  },
  {
    "text": "what's going on there",
    "start": "970480",
    "end": "971680"
  },
  {
    "text": "sometimes java decompiler takes hard",
    "start": "971680",
    "end": "973440"
  },
  {
    "text": "time understanding it but sometimes it",
    "start": "973440",
    "end": "974959"
  },
  {
    "text": "works and in our case it works",
    "start": "974959",
    "end": "976720"
  },
  {
    "text": "and you see the fact that the type",
    "start": "976720",
    "end": "978720"
  },
  {
    "text": "parameter has disappeared",
    "start": "978720",
    "end": "980240"
  },
  {
    "text": "it's no longer there this is how jvm",
    "start": "980240",
    "end": "982320"
  },
  {
    "text": "works and brian girls",
    "start": "982320",
    "end": "984320"
  },
  {
    "text": "had a really cool talk uh their blog",
    "start": "984320",
    "end": "986800"
  },
  {
    "text": "post about this",
    "start": "986800",
    "end": "988079"
  },
  {
    "text": "you can find it in their in this",
    "start": "988079",
    "end": "989519"
  },
  {
    "text": "presentation notes um",
    "start": "989519",
    "end": "991440"
  },
  {
    "text": "so anyways there is no type parameter",
    "start": "991440",
    "end": "994079"
  },
  {
    "text": "and the types are substituted with their",
    "start": "994079",
    "end": "996000"
  },
  {
    "text": "upper bound so well what's going on",
    "start": "996000",
    "end": "999120"
  },
  {
    "text": "it's not what i expected it to but",
    "start": "999120",
    "end": "1001440"
  },
  {
    "text": "here's an example for you",
    "start": "1001440",
    "end": "1002720"
  },
  {
    "text": "like sometimes we do do custody in our",
    "start": "1002720",
    "end": "1006079"
  },
  {
    "text": "java or in kotlin",
    "start": "1006079",
    "end": "1007279"
  },
  {
    "text": "and the most ideas say it's probably not",
    "start": "1007279",
    "end": "1010000"
  },
  {
    "text": "a good idea to cast 2t",
    "start": "1010000",
    "end": "1011519"
  },
  {
    "text": "are you sure it's a warning it's not a",
    "start": "1011519",
    "end": "1013440"
  },
  {
    "text": "compilation here",
    "start": "1013440",
    "end": "1014720"
  },
  {
    "text": "and there i came up with yet another",
    "start": "1014720",
    "end": "1016800"
  },
  {
    "text": "solution uh the only difference is",
    "start": "1016800",
    "end": "1018959"
  },
  {
    "text": "that's it's called the refined inline",
    "start": "1018959",
    "end": "1020560"
  },
  {
    "text": "function it and the compiler is happy",
    "start": "1020560",
    "end": "1022079"
  },
  {
    "text": "about it",
    "start": "1022079",
    "end": "1022800"
  },
  {
    "text": "let me run an experiment so i call the",
    "start": "1022800",
    "end": "1025038"
  },
  {
    "text": "first one",
    "start": "1025039",
    "end": "1025839"
  },
  {
    "text": "and you may do this experiment in java",
    "start": "1025839",
    "end": "1027520"
  },
  {
    "text": "if you like and the",
    "start": "1027520",
    "end": "1028959"
  },
  {
    "text": "in the second one so i call the first",
    "start": "1028959",
    "end": "1030959"
  },
  {
    "text": "function and the second function from",
    "start": "1030959",
    "end": "1032160"
  },
  {
    "text": "the wrong type",
    "start": "1032160",
    "end": "1032959"
  },
  {
    "text": "so it's supposed to crash right do you",
    "start": "1032959",
    "end": "1035360"
  },
  {
    "text": "think do you think it would crash",
    "start": "1035360",
    "end": "1037760"
  },
  {
    "text": "well let me show i do the decompile once",
    "start": "1037760",
    "end": "1040798"
  },
  {
    "text": "again",
    "start": "1040799",
    "end": "1041360"
  },
  {
    "text": "and what we have in the first one we see",
    "start": "1041360",
    "end": "1044000"
  },
  {
    "text": "oh",
    "start": "1044000",
    "end": "1044480"
  },
  {
    "text": "what's going on it will not crash",
    "start": "1044480",
    "end": "1046319"
  },
  {
    "text": "because uh they found",
    "start": "1046319",
    "end": "1047678"
  },
  {
    "text": "the types are erased so it was object",
    "start": "1047679",
    "end": "1049520"
  },
  {
    "text": "it's object it's cast object no",
    "start": "1049520",
    "end": "1051120"
  },
  {
    "text": "no one need to cast to object so there",
    "start": "1051120",
    "end": "1052720"
  },
  {
    "text": "is no cast any longer",
    "start": "1052720",
    "end": "1054240"
  },
  {
    "text": "fine oh wow so the string will go as in",
    "start": "1054240",
    "end": "1057280"
  },
  {
    "text": "and it's all good and whereas from their",
    "start": "1057280",
    "end": "1060080"
  },
  {
    "text": "refined function",
    "start": "1060080",
    "end": "1061200"
  },
  {
    "text": "it's in line function calling this",
    "start": "1061200",
    "end": "1062640"
  },
  {
    "text": "specific feature of coding so",
    "start": "1062640",
    "end": "1064240"
  },
  {
    "text": "the function body is in line in the",
    "start": "1064240",
    "end": "1066160"
  },
  {
    "text": "place where you call it",
    "start": "1066160",
    "end": "1067600"
  },
  {
    "text": "and the typecast is in line as well so",
    "start": "1067600",
    "end": "1071360"
  },
  {
    "text": "we",
    "start": "1071360",
    "end": "1071840"
  },
  {
    "text": "do have the real cost in this example",
    "start": "1071840",
    "end": "1074799"
  },
  {
    "text": "and",
    "start": "1074799",
    "end": "1075039"
  },
  {
    "text": "it will crash this is what we expected",
    "start": "1075039",
    "end": "1077360"
  },
  {
    "text": "it to be",
    "start": "1077360",
    "end": "1078400"
  },
  {
    "text": "so as for type eurasia the type eurasia",
    "start": "1078400",
    "end": "1080799"
  },
  {
    "text": "is the way how generics are implemented",
    "start": "1080799",
    "end": "1082400"
  },
  {
    "text": "for the jvm platform",
    "start": "1082400",
    "end": "1083760"
  },
  {
    "text": "so it's no matter if you use java",
    "start": "1083760",
    "end": "1085440"
  },
  {
    "text": "quarterly in scala whatever",
    "start": "1085440",
    "end": "1087039"
  },
  {
    "text": "there is no type generics at the way",
    "start": "1087039",
    "end": "1090080"
  },
  {
    "text": "at the moment where the bytecode is",
    "start": "1090080",
    "end": "1091440"
  },
  {
    "text": "executed there are some types in their",
    "start": "1091440",
    "end": "1093200"
  },
  {
    "text": "meta information but not at the place",
    "start": "1093200",
    "end": "1095520"
  },
  {
    "text": "where execution comes",
    "start": "1095520",
    "end": "1096799"
  },
  {
    "text": "so at the compiler what it does it takes",
    "start": "1096799",
    "end": "1099200"
  },
  {
    "text": "all the type parameters it replaces it",
    "start": "1099200",
    "end": "1100960"
  },
  {
    "text": "with the upper bounds like",
    "start": "1100960",
    "end": "1102720"
  },
  {
    "text": "object or any constraint which you have",
    "start": "1102720",
    "end": "1104960"
  },
  {
    "text": "compiler inserts all the necessary cost",
    "start": "1104960",
    "end": "1107120"
  },
  {
    "text": "all over the place and compiler even",
    "start": "1107120",
    "end": "1109120"
  },
  {
    "text": "creates some methods like a bridge",
    "start": "1109120",
    "end": "1110559"
  },
  {
    "text": "methods",
    "start": "1110559",
    "end": "1111200"
  },
  {
    "text": "where you have a method from t and you",
    "start": "1111200",
    "end": "1113360"
  },
  {
    "text": "specify it with a specific t",
    "start": "1113360",
    "end": "1114799"
  },
  {
    "text": "so the compiler will create a method to",
    "start": "1114799",
    "end": "1116480"
  },
  {
    "text": "make sure that at the",
    "start": "1116480",
    "end": "1118000"
  },
  {
    "text": "execution it looks like it's right",
    "start": "1118000",
    "end": "1120480"
  },
  {
    "text": "parameterized",
    "start": "1120480",
    "end": "1121600"
  },
  {
    "text": "that's it and what we can do to work",
    "start": "1121600",
    "end": "1124480"
  },
  {
    "text": "around the problems i've shown you the",
    "start": "1124480",
    "end": "1126000"
  },
  {
    "text": "first",
    "start": "1126000",
    "end": "1126480"
  },
  {
    "text": "it's probably not a good idea to cast",
    "start": "1126480",
    "end": "1127919"
  },
  {
    "text": "achieve even if you for example you may",
    "start": "1127919",
    "end": "1129760"
  },
  {
    "text": "have the generic from generic",
    "start": "1129760",
    "end": "1131840"
  },
  {
    "text": "kind of really generified code and then",
    "start": "1131840",
    "end": "1134320"
  },
  {
    "text": "it might be really hard to find",
    "start": "1134320",
    "end": "1136000"
  },
  {
    "text": "where you miss this the right cost the",
    "start": "1136000",
    "end": "1138880"
  },
  {
    "text": "workaround is quite easy you may use the",
    "start": "1138880",
    "end": "1140559"
  },
  {
    "text": "class",
    "start": "1140559",
    "end": "1141760"
  },
  {
    "text": "from the big c in java and use that it's",
    "start": "1141760",
    "end": "1144640"
  },
  {
    "text": "cast method it's the way to make sure",
    "start": "1144640",
    "end": "1146799"
  },
  {
    "text": "that the t",
    "start": "1146799",
    "end": "1147760"
  },
  {
    "text": "is right t at that given place",
    "start": "1147760",
    "end": "1150960"
  },
  {
    "text": "and there as for refined generics if you",
    "start": "1150960",
    "end": "1153440"
  },
  {
    "text": "use kotlin",
    "start": "1153440",
    "end": "1154240"
  },
  {
    "text": "you might use the inline function which",
    "start": "1154240",
    "end": "1156080"
  },
  {
    "text": "i've shown you is such a function which",
    "start": "1156080",
    "end": "1158080"
  },
  {
    "text": "inlined into place where you call it it",
    "start": "1158080",
    "end": "1160400"
  },
  {
    "text": "works really cool with lambdas so if you",
    "start": "1160400",
    "end": "1162240"
  },
  {
    "text": "have a l9 function which takes a lambda",
    "start": "1162240",
    "end": "1164640"
  },
  {
    "text": "in quarterly it would be just a chord",
    "start": "1164640",
    "end": "1167280"
  },
  {
    "text": "like for example you do filtering on the",
    "start": "1167280",
    "end": "1168720"
  },
  {
    "text": "collections",
    "start": "1168720",
    "end": "1170080"
  },
  {
    "text": "it will be inline so you will not create",
    "start": "1170080",
    "end": "1172799"
  },
  {
    "text": "an object for islam that you will not",
    "start": "1172799",
    "end": "1174160"
  },
  {
    "text": "allocate it",
    "start": "1174160",
    "end": "1174960"
  },
  {
    "text": "it will be just in line and press your",
    "start": "1174960",
    "end": "1176480"
  },
  {
    "text": "code and the refined type parameters are",
    "start": "1176480",
    "end": "1178880"
  },
  {
    "text": "the type parameters which are",
    "start": "1178880",
    "end": "1180240"
  },
  {
    "text": "also in line at that place that's that's",
    "start": "1180240",
    "end": "1182880"
  },
  {
    "text": "the reinforced generics",
    "start": "1182880",
    "end": "1184160"
  },
  {
    "text": "and that's who it really helps like for",
    "start": "1184160",
    "end": "1186400"
  },
  {
    "text": "example to implement this trick",
    "start": "1186400",
    "end": "1188080"
  },
  {
    "text": "reading json i create a function which",
    "start": "1188080",
    "end": "1189840"
  },
  {
    "text": "really find generic which",
    "start": "1189840",
    "end": "1191120"
  },
  {
    "text": "takes which called load which takes a",
    "start": "1191120",
    "end": "1192960"
  },
  {
    "text": "json text for example",
    "start": "1192960",
    "end": "1194640"
  },
  {
    "text": "and it's supposed to return the type t",
    "start": "1194640",
    "end": "1196720"
  },
  {
    "text": "for me and it works okay",
    "start": "1196720",
    "end": "1198559"
  },
  {
    "text": "for say for a month rosa's list map",
    "start": "1198559",
    "end": "1201280"
  },
  {
    "text": "string",
    "start": "1201280",
    "end": "1201840"
  },
  {
    "text": "ins or it works for so it works for any",
    "start": "1201840",
    "end": "1204960"
  },
  {
    "text": "types because",
    "start": "1204960",
    "end": "1205679"
  },
  {
    "text": "they're where i call this function it is",
    "start": "1205679",
    "end": "1207840"
  },
  {
    "text": "in line and i know for sure which type",
    "start": "1207840",
    "end": "1209679"
  },
  {
    "text": "with",
    "start": "1209679",
    "end": "1210080"
  },
  {
    "text": "which generics i have so i can hold my",
    "start": "1210080",
    "end": "1212320"
  },
  {
    "text": "library plus",
    "start": "1212320",
    "end": "1213520"
  },
  {
    "text": "pass there the right type and it would",
    "start": "1213520",
    "end": "1215440"
  },
  {
    "text": "work really short and really",
    "start": "1215440",
    "end": "1217679"
  },
  {
    "text": "clear in this example well",
    "start": "1217679",
    "end": "1221760"
  },
  {
    "start": "1219000",
    "end": "1365000"
  },
  {
    "text": "it was nice and there yet another cool",
    "start": "1221760",
    "end": "1224640"
  },
  {
    "text": "feature in kotlin is the curtains for",
    "start": "1224640",
    "end": "1226799"
  },
  {
    "text": "non-blocking programming",
    "start": "1226799",
    "end": "1228080"
  },
  {
    "text": "i mean that way you can use",
    "start": "1228080",
    "end": "1231200"
  },
  {
    "text": "where you can have a suspend functions",
    "start": "1231200",
    "end": "1233120"
  },
  {
    "text": "the functions which can suspend in the",
    "start": "1233120",
    "end": "1234559"
  },
  {
    "text": "middle and be resumed later",
    "start": "1234559",
    "end": "1236320"
  },
  {
    "text": "it opens the way to deal with channels",
    "start": "1236320",
    "end": "1238559"
  },
  {
    "text": "the flows",
    "start": "1238559",
    "end": "1239760"
  },
  {
    "text": "the select operators the futures and so",
    "start": "1239760",
    "end": "1242799"
  },
  {
    "text": "on",
    "start": "1242799",
    "end": "1243280"
  },
  {
    "text": "this is the kotlin excursion library to",
    "start": "1243280",
    "end": "1245200"
  },
  {
    "text": "help you deal with their concurrent",
    "start": "1245200",
    "end": "1246799"
  },
  {
    "text": "programming and there there are so many",
    "start": "1246799",
    "end": "1248960"
  },
  {
    "text": "features",
    "start": "1248960",
    "end": "1249760"
  },
  {
    "text": "uh so it's not it doesn't fit here on",
    "start": "1249760",
    "end": "1251600"
  },
  {
    "text": "the screen i would",
    "start": "1251600",
    "end": "1252960"
  },
  {
    "text": "show a really interesting example where",
    "start": "1252960",
    "end": "1255280"
  },
  {
    "text": "curations can help",
    "start": "1255280",
    "end": "1256960"
  },
  {
    "text": "uh so i have a recursion function if we",
    "start": "1256960",
    "end": "1260080"
  },
  {
    "text": "have a regression function what happens",
    "start": "1260080",
    "end": "1261679"
  },
  {
    "text": "well usually it may crash with the",
    "start": "1261679",
    "end": "1263760"
  },
  {
    "text": "stacker flow",
    "start": "1263760",
    "end": "1264960"
  },
  {
    "text": "it happens and their workaround could be",
    "start": "1264960",
    "end": "1267679"
  },
  {
    "text": "beyond the obvious",
    "start": "1267679",
    "end": "1268880"
  },
  {
    "text": "uh could be to use the tail rig in",
    "start": "1268880",
    "end": "1270880"
  },
  {
    "text": "cotton there's a specific",
    "start": "1270880",
    "end": "1272240"
  },
  {
    "text": "keyword in kotlin which helps to turn",
    "start": "1272240",
    "end": "1274640"
  },
  {
    "text": "the recurrence function",
    "start": "1274640",
    "end": "1276240"
  },
  {
    "text": "into a loop but only for a tail",
    "start": "1276240",
    "end": "1278480"
  },
  {
    "text": "recursive function",
    "start": "1278480",
    "end": "1279440"
  },
  {
    "text": "and it's not my case yet another",
    "start": "1279440",
    "end": "1281520"
  },
  {
    "text": "approach which we all know",
    "start": "1281520",
    "end": "1283120"
  },
  {
    "text": "is to use them to just manually",
    "start": "1283120",
    "end": "1286640"
  },
  {
    "text": "replace the recursive calls with the",
    "start": "1286640",
    "end": "1289679"
  },
  {
    "text": "actually the hip and the loop so you",
    "start": "1289679",
    "end": "1291600"
  },
  {
    "text": "create some q and you pass the",
    "start": "1291600",
    "end": "1293039"
  },
  {
    "text": "parameters into the queue and",
    "start": "1293039",
    "end": "1294320"
  },
  {
    "text": "then you have a loop to process these",
    "start": "1294320",
    "end": "1296240"
  },
  {
    "text": "parameters and push yet another",
    "start": "1296240",
    "end": "1297440"
  },
  {
    "text": "parameters into the queue or something",
    "start": "1297440",
    "end": "1298799"
  },
  {
    "text": "like that",
    "start": "1298799",
    "end": "1299919"
  },
  {
    "text": "uh well it's all possible but i have a",
    "start": "1299919",
    "end": "1302799"
  },
  {
    "text": "shorter and simpler solution for you",
    "start": "1302799",
    "end": "1305039"
  },
  {
    "text": "it's called the deep recursive function",
    "start": "1305039",
    "end": "1306799"
  },
  {
    "text": "d precaution curvating or deep recursive",
    "start": "1306799",
    "end": "1308799"
  },
  {
    "text": "function",
    "start": "1308799",
    "end": "1309760"
  },
  {
    "text": "this is the thing it's added into cotton",
    "start": "1309760",
    "end": "1312240"
  },
  {
    "text": "1.4",
    "start": "1312240",
    "end": "1313679"
  },
  {
    "text": "and what it does it use the suspend",
    "start": "1313679",
    "end": "1315679"
  },
  {
    "text": "functions to implement",
    "start": "1315679",
    "end": "1317760"
  },
  {
    "text": "to solve to implement this uh this stack",
    "start": "1317760",
    "end": "1321280"
  },
  {
    "text": "and wrap",
    "start": "1321280",
    "end": "1322559"
  },
  {
    "text": "for you so actually i used exactly the",
    "start": "1322559",
    "end": "1324960"
  },
  {
    "text": "same function as i had before",
    "start": "1324960",
    "end": "1327520"
  },
  {
    "text": "but i call this uh the call recursive",
    "start": "1327520",
    "end": "1329679"
  },
  {
    "text": "helper function instead of",
    "start": "1329679",
    "end": "1331679"
  },
  {
    "text": "are they just a recursive call and",
    "start": "1331679",
    "end": "1334880"
  },
  {
    "text": "this is enough so the calling compiler",
    "start": "1334880",
    "end": "1337440"
  },
  {
    "text": "implement this as a suspend function to",
    "start": "1337440",
    "end": "1339280"
  },
  {
    "text": "and the place where i call this",
    "start": "1339280",
    "end": "1340720"
  },
  {
    "text": "recursive the function suspends",
    "start": "1340720",
    "end": "1342480"
  },
  {
    "text": "so its state is persistent on the heap",
    "start": "1342480",
    "end": "1344799"
  },
  {
    "text": "then we call the next instance of this",
    "start": "1344799",
    "end": "1346400"
  },
  {
    "text": "function",
    "start": "1346400",
    "end": "1347120"
  },
  {
    "text": "and so we have such a queue and the",
    "start": "1347120",
    "end": "1348960"
  },
  {
    "text": "process this queue and finally we have",
    "start": "1348960",
    "end": "1350559"
  },
  {
    "text": "results so no no stacker flow",
    "start": "1350559",
    "end": "1352720"
  },
  {
    "text": "is thrown here this is what you can",
    "start": "1352720",
    "end": "1354960"
  },
  {
    "text": "achieve using quarantines",
    "start": "1354960",
    "end": "1356240"
  },
  {
    "text": "and it's the smallest smallest particle",
    "start": "1356240",
    "end": "1358240"
  },
  {
    "text": "which you can actually use in",
    "start": "1358240",
    "end": "1359120"
  },
  {
    "text": "quarantines because",
    "start": "1359120",
    "end": "1360000"
  },
  {
    "text": "they're not working and concurrent",
    "start": "1360000",
    "end": "1361360"
  },
  {
    "text": "programming is the way where it",
    "start": "1361360",
    "end": "1362880"
  },
  {
    "text": "flourished the best",
    "start": "1362880",
    "end": "1364960"
  },
  {
    "text": "well cortland is really nice to build",
    "start": "1364960",
    "end": "1368400"
  },
  {
    "start": "1365000",
    "end": "1526000"
  },
  {
    "text": "with",
    "start": "1368400",
    "end": "1368799"
  },
  {
    "text": "and you can build different things with",
    "start": "1368799",
    "end": "1370320"
  },
  {
    "text": "scotland for example i decided to create",
    "start": "1370320",
    "end": "1372640"
  },
  {
    "text": "a conway game of life algorithm so",
    "start": "1372640",
    "end": "1374720"
  },
  {
    "text": "this is the 2d mesh and they're the ways",
    "start": "1374720",
    "end": "1376640"
  },
  {
    "text": "how you define",
    "start": "1376640",
    "end": "1377840"
  },
  {
    "text": "the color of the pixels and then you can",
    "start": "1377840",
    "end": "1379840"
  },
  {
    "text": "do such such an animation",
    "start": "1379840",
    "end": "1381679"
  },
  {
    "text": "and it was quite nice for me to give it",
    "start": "1381679",
    "end": "1383200"
  },
  {
    "text": "a try and i decided",
    "start": "1383200",
    "end": "1384880"
  },
  {
    "text": "so i decided to implement this somehow",
    "start": "1384880",
    "end": "1387360"
  },
  {
    "text": "in kotlin so i wrote this code",
    "start": "1387360",
    "end": "1389360"
  },
  {
    "text": "it works for me and then i realized that",
    "start": "1389360",
    "end": "1391840"
  },
  {
    "text": "i can use the unicorn symbols to present",
    "start": "1391840",
    "end": "1393760"
  },
  {
    "text": "this",
    "start": "1393760",
    "end": "1394400"
  },
  {
    "text": "instead of the white and the blue colors",
    "start": "1394400",
    "end": "1396559"
  },
  {
    "text": "i use this uh",
    "start": "1396559",
    "end": "1398559"
  },
  {
    "text": "there are unicode emojis to implement",
    "start": "1398559",
    "end": "1400400"
  },
  {
    "text": "this this is a well-known glider button",
    "start": "1400400",
    "end": "1402559"
  },
  {
    "text": "and then i realized that i can use the",
    "start": "1402559",
    "end": "1404000"
  },
  {
    "text": "same code i can keep experiment and i",
    "start": "1404000",
    "end": "1405679"
  },
  {
    "text": "can run this code on my raspberry pi or",
    "start": "1405679",
    "end": "1407360"
  },
  {
    "text": "somewhere",
    "start": "1407360",
    "end": "1407919"
  },
  {
    "text": "without any gvm this is a quarterly",
    "start": "1407919",
    "end": "1409840"
  },
  {
    "text": "native which helps me",
    "start": "1409840",
    "end": "1411039"
  },
  {
    "text": "so i can compile the same program for",
    "start": "1411039",
    "end": "1413120"
  },
  {
    "text": "different platform",
    "start": "1413120",
    "end": "1414799"
  },
  {
    "text": "and then i use some dsl the language of",
    "start": "1414799",
    "end": "1417600"
  },
  {
    "text": "code allows you to do gsls",
    "start": "1417600",
    "end": "1419360"
  },
  {
    "text": "and this dsl helped me to show the same",
    "start": "1419360",
    "end": "1422720"
  },
  {
    "text": "algorithm",
    "start": "1422720",
    "end": "1423679"
  },
  {
    "text": "as html javascript page so i compile my",
    "start": "1423679",
    "end": "1426159"
  },
  {
    "text": "quoting code into javascript",
    "start": "1426159",
    "end": "1427919"
  },
  {
    "text": "then i use the same thing for ios and i",
    "start": "1427919",
    "end": "1430640"
  },
  {
    "text": "finally compile and mix it with flipped",
    "start": "1430640",
    "end": "1433039"
  },
  {
    "text": "and i came up with the same algorithm",
    "start": "1433039",
    "end": "1435520"
  },
  {
    "text": "running on",
    "start": "1435520",
    "end": "1436159"
  },
  {
    "text": "iphone that's the same language so i can",
    "start": "1436159",
    "end": "1438720"
  },
  {
    "text": "keep reusing the",
    "start": "1438720",
    "end": "1440159"
  },
  {
    "text": "languages uh the platforms and they have",
    "start": "1440159",
    "end": "1442880"
  },
  {
    "text": "the same code for it",
    "start": "1442880",
    "end": "1444080"
  },
  {
    "text": "and this is how i managed to make this",
    "start": "1444080",
    "end": "1446080"
  },
  {
    "text": "one i use the search side and i render",
    "start": "1446080",
    "end": "1448559"
  },
  {
    "text": "this image with the jvm",
    "start": "1448559",
    "end": "1450320"
  },
  {
    "text": "jvm awt and this is there it's called",
    "start": "1450320",
    "end": "1454159"
  },
  {
    "text": "the cosmic multi-platform mobile kmm or",
    "start": "1454159",
    "end": "1456480"
  },
  {
    "text": "you may",
    "start": "1456480",
    "end": "1457039"
  },
  {
    "text": "have the older names like mpp it",
    "start": "1457039",
    "end": "1459279"
  },
  {
    "text": "supports android",
    "start": "1459279",
    "end": "1460480"
  },
  {
    "text": "ios under many platforms and targets",
    "start": "1460480",
    "end": "1463600"
  },
  {
    "text": "and you can reuse your code really",
    "start": "1463600",
    "end": "1465520"
  },
  {
    "text": "really really oh",
    "start": "1465520",
    "end": "1467360"
  },
  {
    "text": "okay so that's another kotlin that's a",
    "start": "1467360",
    "end": "1470880"
  },
  {
    "text": "slide from the beginning",
    "start": "1470880",
    "end": "1472080"
  },
  {
    "text": "and if you someone would ask you how can",
    "start": "1472080",
    "end": "1474480"
  },
  {
    "text": "we you use culture in this yet another",
    "start": "1474480",
    "end": "1476320"
  },
  {
    "text": "example where you can use coping",
    "start": "1476320",
    "end": "1477840"
  },
  {
    "text": "well and there on the search side you",
    "start": "1477840",
    "end": "1480159"
  },
  {
    "text": "can use cateri all this",
    "start": "1480159",
    "end": "1481440"
  },
  {
    "text": "asynchronous framework you can use",
    "start": "1481440",
    "end": "1482720"
  },
  {
    "text": "codless to do serialized programming",
    "start": "1482720",
    "end": "1484960"
  },
  {
    "text": "and this is all you can use and you can",
    "start": "1484960",
    "end": "1487760"
  },
  {
    "text": "use the ecosystem like jvm ecosystem ios",
    "start": "1487760",
    "end": "1490480"
  },
  {
    "text": "android",
    "start": "1490480",
    "end": "1491039"
  },
  {
    "text": "or js to manage the benefit from it you",
    "start": "1491039",
    "end": "1493919"
  },
  {
    "text": "don't need to write anything it's",
    "start": "1493919",
    "end": "1495360"
  },
  {
    "text": "interrupts with",
    "start": "1495360",
    "end": "1496400"
  },
  {
    "text": "almost this japanese we use cotton and",
    "start": "1496400",
    "end": "1498720"
  },
  {
    "text": "almost every project even the search",
    "start": "1498720",
    "end": "1500480"
  },
  {
    "text": "side their",
    "start": "1500480",
    "end": "1501120"
  },
  {
    "text": "desktop or web it's really cool",
    "start": "1501120",
    "end": "1504480"
  },
  {
    "text": "and also this ism icpc supports cotton",
    "start": "1504480",
    "end": "1507520"
  },
  {
    "text": "for many years so you if you compete",
    "start": "1507520",
    "end": "1509279"
  },
  {
    "text": "with the programming you can use cotton",
    "start": "1509279",
    "end": "1511039"
  },
  {
    "text": "in there as well and if you do cotton",
    "start": "1511039",
    "end": "1513120"
  },
  {
    "text": "well you might probably expect fun",
    "start": "1513120",
    "end": "1515600"
  },
  {
    "text": "and the thing is that if you ever wrote",
    "start": "1515600",
    "end": "1518640"
  },
  {
    "text": "expect fun and coding you're likely to",
    "start": "1518640",
    "end": "1520400"
  },
  {
    "text": "have actual fun at the end",
    "start": "1520400",
    "end": "1521679"
  },
  {
    "text": "because this is the keywords we use for",
    "start": "1521679",
    "end": "1523360"
  },
  {
    "text": "the quarterly multi-platform programming",
    "start": "1523360",
    "end": "1525279"
  },
  {
    "text": "so i hope you would expect fun where you",
    "start": "1525279",
    "end": "1527679"
  },
  {
    "start": "1526000",
    "end": "1548000"
  },
  {
    "text": "had",
    "start": "1527679",
    "end": "1528320"
  },
  {
    "text": "some interesting ideas today so i'm",
    "start": "1528320",
    "end": "1530320"
  },
  {
    "text": "really",
    "start": "1530320",
    "end": "1532159"
  },
  {
    "text": "open to have some questions at the end",
    "start": "1532159",
    "end": "1533760"
  },
  {
    "text": "so thank you for your time",
    "start": "1533760",
    "end": "1543840"
  },
  {
    "text": "you",
    "start": "1546799",
    "end": "1548880"
  }
]