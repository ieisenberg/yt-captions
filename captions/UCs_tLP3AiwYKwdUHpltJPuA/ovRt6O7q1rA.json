[
  {
    "text": "[Music]",
    "start": "3550",
    "end": "7840"
  },
  {
    "text": "now the stuff I'll talk about today a",
    "start": "13490",
    "end": "18950"
  },
  {
    "text": "lot of it applies to several s platforms in general but I've mostly worked with",
    "start": "18950",
    "end": "26609"
  },
  {
    "text": "that AWS so when I give you some more concrete data that's limited to AWS and",
    "start": "26609",
    "end": "33300"
  },
  {
    "text": "I'd like to kind of give you some of my experiences related to running in this",
    "start": "33300",
    "end": "39000"
  },
  {
    "text": "new wonderful new way of developing applications and deploying applications somewhere in 2016 a product I'm working",
    "start": "39000",
    "end": "49110"
  },
  {
    "text": "on we decided to start using AWS lambda and by the end of 2016 we've moved all",
    "start": "49110",
    "end": "56219"
  },
  {
    "text": "our services onto lambda and we've been kind of running server less for about two and a half or three years in that so",
    "start": "56219",
    "end": "63960"
  },
  {
    "text": "there's some nice emerging patterns there I think it's too early as the community still to talk about best practices because we've not even seen",
    "start": "63960",
    "end": "70890"
  },
  {
    "text": "where this is going but there's some emerging practices that they're interested in some constraints that were",
    "start": "70890",
    "end": "76380"
  },
  {
    "text": "not really that known to me or logical to me when we started and that's what I'd like to talk about so in terms of",
    "start": "76380",
    "end": "83009"
  },
  {
    "text": "service it's a horrible buzzword and you know people have been talking about how they steal servers there and and stuff like",
    "start": "83009",
    "end": "90090"
  },
  {
    "text": "that but what's interesting for me is really how that starts changing the",
    "start": "90090",
    "end": "98759"
  },
  {
    "text": "possibilities of deploying applications and a lot of the stuff wants to take the server out of the picture that I topple",
    "start": "98759",
    "end": "103770"
  },
  {
    "text": "into the server a lot of the stuff that I at least thought were good practices",
    "start": "103770",
    "end": "109709"
  },
  {
    "text": "or even best practices designing distributed systems slightly changed and I realized those things are not only",
    "start": "109709",
    "end": "115739"
  },
  {
    "text": "best practices there were just solutions for certain constraints once you remove those constraints some other solutions",
    "start": "115739",
    "end": "121830"
  },
  {
    "text": "start applying and that's kind of what I'd like to talk about today now in",
    "start": "121830",
    "end": "128369"
  },
  {
    "text": "terms of server less the right server to think about is the socket server not the",
    "start": "128369",
    "end": "135239"
  },
  {
    "text": "machine not kind of the database established but it really the socket server because service platforms",
    "start": "135239",
    "end": "142080"
  },
  {
    "text": "give the responsibility for listening and responding to network sockets to the operator to AWS to Google to Microsoft",
    "start": "142080",
    "end": "148980"
  },
  {
    "text": "your application is no longer in control of the socket that's the server we're talking about and I like to think about this kind of",
    "start": "148980",
    "end": "156210"
  },
  {
    "text": "that's this is civil as the same way that Wi-Fi is wireless like you all know",
    "start": "156210",
    "end": "161760"
  },
  {
    "text": "that if you are kind of using a mobile phone here and it's connected to the Internet there is a route where",
    "start": "161760",
    "end": "167190"
  },
  {
    "text": "somewhere in this room and as you know there's an Ethernet cable even here it's not connected to anything but there is a",
    "start": "167190",
    "end": "174150"
  },
  {
    "text": "route where there are cables but you don't have to actively think about or manage those cables that's kind of where this is going now in terms of the",
    "start": "174150",
    "end": "182430"
  },
  {
    "text": "application and the applications and stuff like that is interesting to change this was my life for the last like I",
    "start": "182430",
    "end": "188580"
  },
  {
    "text": "don't when t years you know there's a client device it's talking to some load balancer in a highly distributed",
    "start": "188580",
    "end": "195060"
  },
  {
    "text": "scenario this is talking to machines data running application servers whether it's JBoss or is it you know",
    "start": "195060",
    "end": "201840"
  },
  {
    "text": "Ruby on Rails or is it a PHP thing or something that's a web service application service these things are",
    "start": "201840",
    "end": "207390"
  },
  {
    "text": "talking to databases storage and things that I assume everybody in this room has built something like this now what's",
    "start": "207390",
    "end": "215370"
  },
  {
    "text": "really interesting is to show people that have spent years and years and",
    "start": "215370",
    "end": "221370"
  },
  {
    "text": "years of building something like this an option to potentially do this and this is where people start turning away it's",
    "start": "221370",
    "end": "227400"
  },
  {
    "text": "like oh this is insecure like allowing a client's device directly to write into",
    "start": "227400",
    "end": "232920"
  },
  {
    "text": "our database or allowing a you know web browser to directly talk to the back-end",
    "start": "232920",
    "end": "238140"
  },
  {
    "text": "storage and that's kind of part of what makes several is so puzzling because",
    "start": "238140",
    "end": "243540"
  },
  {
    "text": "this is actually something that I assume most people in this room will be doing",
    "start": "243540",
    "end": "248730"
  },
  {
    "text": "if not now then five years from now economically nothing else is going to make sense and that's kind of part of",
    "start": "248730",
    "end": "256109"
  },
  {
    "text": "what what I meant by stuff we thought were best practices where of course you know you put a server in the middle or",
    "start": "256109",
    "end": "261959"
  },
  {
    "text": "an application server in the middle to secure and validate and coordinate and everything that is not necessarily where",
    "start": "261959",
    "end": "269760"
  },
  {
    "text": "we need to go so in terms of kind of five things that the five things that we need to start thinking about",
    "start": "269760",
    "end": "275970"
  },
  {
    "text": "really socket less development no service development are constraints around crisi and for me personally this",
    "start": "275970",
    "end": "284970"
  },
  {
    "text": "was the one of the biggest things to get over in the head I think you know this",
    "start": "284970",
    "end": "290250"
  },
  {
    "text": "is a technical conference everybody here I assume works in technology for us it's interesting to look at these things from",
    "start": "290250",
    "end": "296130"
  },
  {
    "text": "a technical perspective 8w Aslam de Google cloud functions as your functions they are technically really complicated",
    "start": "296130",
    "end": "302970"
  },
  {
    "text": "to pull off that kind of supercharged containers they work amazing technically it's a complicated thing but it's just a",
    "start": "302970",
    "end": "310430"
  },
  {
    "text": "evolutionary step on on up virtualization that started maybe 10-15 years ago what's really revolutionary",
    "start": "310430",
    "end": "317490"
  },
  {
    "text": "not evolutionary is the pricing and this is what opens up lots of really",
    "start": "317490",
    "end": "323100"
  },
  {
    "text": "interesting possibilities pricing then starts affecting how we can manage versions how tasks get routed how we",
    "start": "323100",
    "end": "329940"
  },
  {
    "text": "manage state and and what we can open how we secure the application so that's kind of what I'm going to talk about",
    "start": "329940",
    "end": "335630"
  },
  {
    "text": "very briefly and give you some of my kind of findings and conclusions on that so in terms of pricing the revolutionary",
    "start": "335630",
    "end": "343710"
  },
  {
    "text": "thing here is that cloud providers got to the scale where they can offer pricing for utilization actual",
    "start": "343710",
    "end": "349740"
  },
  {
    "text": "utilization rather than reserve capacity ever since immortal mainframes people were",
    "start": "349740",
    "end": "357300"
  },
  {
    "text": "concerned about reserving capacity we were reserved we were concerned about providing failover capacity we were",
    "start": "357300",
    "end": "363180"
  },
  {
    "text": "concerned about providing backups were concerned about providing an environment that is reserved or at least can be",
    "start": "363180",
    "end": "371390"
  },
  {
    "text": "utilized and and ramped up quickly if the need comes and things like that I",
    "start": "371390",
    "end": "376830"
  },
  {
    "text": "remember I used to work with a big bookmaker in England where I think they do about 60% of their yearly revenue in",
    "start": "376830",
    "end": "384590"
  },
  {
    "text": "about three hours before a really big horse race on one particular Saturday so",
    "start": "384590",
    "end": "390840"
  },
  {
    "text": "four months before that Saturday it's chaos people are kind of you know preparing a new version of the",
    "start": "390840",
    "end": "396150"
  },
  {
    "text": "application that's completely static they are taking out security measures from card processing they do lots of",
    "start": "396150",
    "end": "401700"
  },
  {
    "text": "lots of stuff to prepare for that thing because they only have a certain amount of capacity in the data center they",
    "start": "401700",
    "end": "407400"
  },
  {
    "text": "cannot get more now with virtual things like that things became better but it still we need to think and plan",
    "start": "407400",
    "end": "413880"
  },
  {
    "text": "and reserve capacity what lambdas done what Google cloud functions have done is you effectively pay for what you use",
    "start": "413880",
    "end": "420780"
  },
  {
    "text": "it's like electricity oh you need more now that's fine you don't need it now that's fine as well and they are taking",
    "start": "420780",
    "end": "426810"
  },
  {
    "text": "the risk of coordinating and all the stuff so the way this thing works in AWS",
    "start": "426810",
    "end": "432410"
  },
  {
    "text": "is just illustrative if I take virtual machine in u.s. East one with 512",
    "start": "432410",
    "end": "438120"
  },
  {
    "text": "megabytes of memory you cannot actually reserve it like that but what a SS will",
    "start": "438120",
    "end": "443160"
  },
  {
    "text": "charge you for is zero point something per request and something for every",
    "start": "443160",
    "end": "449010"
  },
  {
    "text": "hundred milliseconds in the CPU not the number of users not the number of",
    "start": "449010",
    "end": "454290"
  },
  {
    "text": "machines not the number of environments number of requests what that means is that it costs exactly the same amount of",
    "start": "454290",
    "end": "462690"
  },
  {
    "text": "money to have an environment just for this Saturday and three different",
    "start": "462690",
    "end": "469740"
  },
  {
    "text": "environments and five different environments is the number of requests that matter not the number of machines or number of processors what that means",
    "start": "469740",
    "end": "476460"
  },
  {
    "text": "is that you don't have to worry about anymore about reserving capacity planning up figuring out how to do",
    "start": "476460",
    "end": "483390"
  },
  {
    "text": "failovers and things like that so zeroes are really difficult to multiply kind of",
    "start": "483390",
    "end": "488700"
  },
  {
    "text": "on a monthly level this is kind of what it comes down to again illustratively it's difficult to compare ec2 instances",
    "start": "488700",
    "end": "495990"
  },
  {
    "text": "or containers to lambda's because they charge different things but if we have a task say something important that runs",
    "start": "495990",
    "end": "502740"
  },
  {
    "text": "every five minutes for a hundred milliseconds this is payments on a reasonably sized",
    "start": "502740",
    "end": "507930"
  },
  {
    "text": "website the cost would come to about $1 sentiment if you have a lambda that's",
    "start": "507930",
    "end": "514440"
  },
  {
    "text": "working with 512 megabytes and it's like non-stop working for a month that would",
    "start": "514440",
    "end": "520380"
  },
  {
    "text": "come to about $27 so that's how these numbers multiply now the it's difficult",
    "start": "520380",
    "end": "528480"
  },
  {
    "text": "really to compare that to reserved instances because they charge different things but a easy to equivalent and a",
    "start": "528480",
    "end": "535980"
  },
  {
    "text": "failover would cost about $9 a month so we're talking about the difference in cost that's from several magnitudes to",
    "start": "535980",
    "end": "541440"
  },
  {
    "text": "magnitudes less or three magnitudes - about three times more and this is",
    "start": "541440",
    "end": "546600"
  },
  {
    "text": "where a lot of the stuff gets kind of you know flame wars and things like that on the internet people say oh it's cheaper this way or it's cheaper that",
    "start": "546600",
    "end": "552540"
  },
  {
    "text": "way one of the really interesting things if you start not managing the socket",
    "start": "552540",
    "end": "558030"
  },
  {
    "text": "anymore if you provide the manager is the socket is a lot of the operational stuff goes away with that as well",
    "start": "558030",
    "end": "564750"
  },
  {
    "text": "so in this twenty seven dollars or in this kind of nine in this one sent most",
    "start": "564750",
    "end": "569970"
  },
  {
    "text": "of ops is included in fact Simon worldly has this famous talk where he talked",
    "start": "569970",
    "end": "575460"
  },
  {
    "text": "about how if your organization has not done devops yet don't bother just go",
    "start": "575460",
    "end": "580710"
  },
  {
    "text": "serve a lesson skip a whole generation of our grades because DevOps is just included in the price and that's why",
    "start": "580710",
    "end": "587070"
  },
  {
    "text": "kind of this 27 or nine doesn't really kind of make a difference so stuff like monitoring scaling failovers backups",
    "start": "587070",
    "end": "593280"
  },
  {
    "text": "blue-green deployments all of that is actually kind of built in because that is the responsibility of whoever's",
    "start": "593280",
    "end": "599610"
  },
  {
    "text": "managing the socket and that's what I think is revolutionary here the product I'm building there's only two of us we",
    "start": "599610",
    "end": "605730"
  },
  {
    "text": "do marketing with those sales we do blog posts we do development we do support with the testing we do everything and",
    "start": "605730",
    "end": "611720"
  },
  {
    "text": "it's really important for me to spend time doing what makes sense rather than",
    "start": "611720",
    "end": "617090"
  },
  {
    "text": "stuff that I really shouldn't be doing and when the penny dropped was kind of",
    "start": "617090",
    "end": "622830"
  },
  {
    "text": "August last year there were these problems with Intel processors whereas people were discovering ways to break",
    "start": "622830",
    "end": "627990"
  },
  {
    "text": "them we got an email from an IT admin or a concerns customers saying oh you know",
    "start": "627990",
    "end": "634230"
  },
  {
    "text": "this new vulnerability was published we need to know what you plan to do about it and you know we don't want people to",
    "start": "634230",
    "end": "639990"
  },
  {
    "text": "steal our data I just woke up I saw that email I typed the CV number into Google",
    "start": "639990",
    "end": "645600"
  },
  {
    "text": "the first response was a SS lambda was already patched that's exactly what I",
    "start": "645600",
    "end": "651840"
  },
  {
    "text": "want to see so kind of you know although this can be three times more expensive than easy to when you count the whole",
    "start": "651840",
    "end": "659880"
  },
  {
    "text": "time you need to spend on it it's actually a lot cheaper so with with the",
    "start": "659880",
    "end": "664920"
  },
  {
    "text": "socket they take the responsibility for scaling capacity planning and all the other stuff and that's what's kind of",
    "start": "664920",
    "end": "671640"
  },
  {
    "text": "revolutionary about it because then we can start looking at how does that affect",
    "start": "671640",
    "end": "677050"
  },
  {
    "text": "the rest of the application so for example one of the things that is really",
    "start": "677050",
    "end": "683320"
  },
  {
    "text": "interesting to look at is what do we do with messages that you know if you start scaling and it explodes we lose them and",
    "start": "683320",
    "end": "691720"
  },
  {
    "text": "what Amazon started offering just as a configuration property last year or kind",
    "start": "691720",
    "end": "697120"
  },
  {
    "text": "of a year ago was these things called dead letter Q so if you have this kind of highly scalable thing that you know goes up and down sometimes die sometimes",
    "start": "697120",
    "end": "704740"
  },
  {
    "text": "doesn't die and you miss the message what Amazon is going to do first of all if there's an exception in your function",
    "start": "704740",
    "end": "711330"
  },
  {
    "text": "the first assumption they make is that there's something wrong with that lambda instance you know if this is died",
    "start": "711330",
    "end": "718900"
  },
  {
    "text": "there's a problem with hardware something like that so what they're gonna do they're gonna shut that one down they're gonna send it automatically",
    "start": "718900",
    "end": "724360"
  },
  {
    "text": "to a new instance if there's an exception there the second assumption",
    "start": "724360",
    "end": "729760"
  },
  {
    "text": "they make is there's something wrong with the AWS infrastructure do these things using maybe s3 is too busy maybe",
    "start": "729760",
    "end": "735700"
  },
  {
    "text": "the database is too busy and then what they're going to do is two seconds later they're gonna send that message again",
    "start": "735700",
    "end": "740980"
  },
  {
    "text": "and then if there's a third exception for the same message they're going to say well the problem is in your code all",
    "start": "740980",
    "end": "747280"
  },
  {
    "text": "of this is done automatically you don't you don't have to program it with kind of if with any kind of load balancers",
    "start": "747280",
    "end": "754930"
  },
  {
    "text": "with any you know server-side environments it's the ops job or developers job to program the stuff you",
    "start": "754930",
    "end": "761500"
  },
  {
    "text": "get this included in the price and even if that fails third time you can sale well send me this message so I can log",
    "start": "761500",
    "end": "767680"
  },
  {
    "text": "its debug it somewhere else you can use this thing called a dead letter Q if there's three exceptions for the same",
    "start": "767680",
    "end": "773080"
  },
  {
    "text": "message it goes somewhere this can go to a queue a message topic or ironically",
    "start": "773080",
    "end": "778570"
  },
  {
    "text": "can invoke a different lambda function or not ironically kind of a curiously can invoke another lambda function so",
    "start": "778570",
    "end": "784450"
  },
  {
    "text": "you can have this thing saying oh you know we're gonna process this thing using the fast mechanism and if for some",
    "start": "784450",
    "end": "790090"
  },
  {
    "text": "reason is expose three times go and send it to the overnight job included in the price another thing that's kind of",
    "start": "790090",
    "end": "796600"
  },
  {
    "text": "included in the price operationally is all this stuff around deploying and",
    "start": "796600",
    "end": "803140"
  },
  {
    "text": "managing different deployments so one of the things I really liked about this is you can do",
    "start": "803140",
    "end": "809500"
  },
  {
    "text": "gradual deploy because the number of requests is important not the number of environments",
    "start": "809500",
    "end": "815519"
  },
  {
    "text": "when you deploy a new function you can just say well the deployment type is Canary 10 percent over 10 minutes and",
    "start": "815519",
    "end": "821790"
  },
  {
    "text": "that means when I deploy a new version of my application give the new version",
    "start": "821790",
    "end": "827350"
  },
  {
    "text": "only 10 percent of the traffic if there's nothing wrong at the end of the",
    "start": "827350",
    "end": "832870"
  },
  {
    "text": "10 minutes give the new version the rest of the traffic now nothing wrong depends on you nothing wrong might be measuring",
    "start": "832870",
    "end": "839920"
  },
  {
    "text": "exceptions or it might be measuring a difference in user conversion or it might be measuring the difference in",
    "start": "839920",
    "end": "845470"
  },
  {
    "text": "sales so it's pretty easy to set up something that you know if you deploy a new version and people are not buying as",
    "start": "845470",
    "end": "851529"
  },
  {
    "text": "much with that version as before there's something wrong go and roll it back now",
    "start": "851529",
    "end": "856899"
  },
  {
    "text": "stuff like this was available to companies that were a Facebook and Google size five years ago now a team of",
    "start": "856899",
    "end": "862329"
  },
  {
    "text": "two people can do this stuff and it's included in the price and that's why I think you know this whole comparison",
    "start": "862329",
    "end": "869230"
  },
  {
    "text": "with if the virtual machines is a bit unfair so in terms of that what's",
    "start": "869230",
    "end": "875350"
  },
  {
    "text": "interesting about this is not in not only is this included in the price but it doesn't cost any more than doing a",
    "start": "875350",
    "end": "881470"
  },
  {
    "text": "normal deployment and you know you can start running this thing and it says all I'm giving it life is 90% I actually",
    "start": "881470",
    "end": "888970"
  },
  {
    "text": "have a couple of different models here one model is to do it step by step so every five minutes every minute every 10",
    "start": "888970",
    "end": "896290"
  },
  {
    "text": "minutes your new version gets more traffic the other one is to do this kind of two-step thing where you say give me",
    "start": "896290",
    "end": "902199"
  },
  {
    "text": "five percent or give me one percent now and then give me the rest later and you",
    "start": "902199",
    "end": "908079"
  },
  {
    "text": "effectively have two versions of your application running at the same time because it's price per request not",
    "start": "908079",
    "end": "914500"
  },
  {
    "text": "priced per version it costs exactly the same as having single version now think",
    "start": "914500",
    "end": "920079"
  },
  {
    "text": "about this every time you've done a big server deployment in the past usually",
    "start": "920079",
    "end": "925470"
  },
  {
    "text": "there's only one production environment even with kind of reserved virtual",
    "start": "925470",
    "end": "933189"
  },
  {
    "text": "machines and things like there's only one production environment because creating another production environment costs double as much that's why testing",
    "start": "933189",
    "end": "941949"
  },
  {
    "text": "environment staging environments and usually slimmed down versions of thing and then you know the production",
    "start": "941949",
    "end": "947560"
  },
  {
    "text": "environment is not really I abound because it has this monster monster storage there but the staging environment has much cheaper storage and",
    "start": "947560",
    "end": "954670"
  },
  {
    "text": "it's not simply abandoned silo bound and people don't kind of test performers there and think that with pricing based",
    "start": "954670",
    "end": "961449"
  },
  {
    "text": "on request it doesn't cost any more to set up two environments three environments five environments ten",
    "start": "961449",
    "end": "967059"
  },
  {
    "text": "environments so kind of very important effect of this is the versions and environments have no effect on price and",
    "start": "967059",
    "end": "973600"
  },
  {
    "text": "this was a major constraint of application development for the last 50",
    "start": "973600",
    "end": "979540"
  },
  {
    "text": "years it's gone and with that constraint lots of the stuff that was the best",
    "start": "979540",
    "end": "985509"
  },
  {
    "text": "practice like Bluegreen deployments well you know is it still a good practice or not so kind of there's a couple of",
    "start": "985509",
    "end": "992649"
  },
  {
    "text": "interesting consequences of that first of all what we do now is we really look at different pricing means when we think",
    "start": "992649",
    "end": "1000269"
  },
  {
    "text": "about splitting stuff into functions for example for this up that I'm building now we have lots of format converters",
    "start": "1000269",
    "end": "1007410"
  },
  {
    "text": "people upload documents we convert it into other formats we have an SVG converter and a PDF converter they share",
    "start": "1007410",
    "end": "1014180"
  },
  {
    "text": "99.9 percent of the code in fact the PDF converter first produces an SVG and then",
    "start": "1014180",
    "end": "1021120"
  },
  {
    "text": "runs our SVG to convert it into PDF now they although they share 99% of 99.999%",
    "start": "1021120",
    "end": "1028798"
  },
  {
    "text": "of the code they have different CPU and memory requirements because the SVG",
    "start": "1028799",
    "end": "1034890"
  },
  {
    "text": "converter is just working with text streams it needs no you know like kind",
    "start": "1034890",
    "end": "1040020"
  },
  {
    "text": "of twentieth megabytes memory our SVG is a memory hog the external utility we're done is the memory hog it needs a lot of",
    "start": "1040020",
    "end": "1045390"
  },
  {
    "text": "memory needs the processor by what would be logical earlier is to keep these two things in the same service in the same",
    "start": "1045390",
    "end": "1052169"
  },
  {
    "text": "module so we don't have to kind of pay for multiple environments doing the same",
    "start": "1052169",
    "end": "1057510"
  },
  {
    "text": "thing with lambda actually costs more money because splitting into two different things allows us to pay for a",
    "start": "1057510",
    "end": "1064140"
  },
  {
    "text": "higher memory watermark for PDF and not pay for the higher memory watermark for SVG they have different needs so another",
    "start": "1064140",
    "end": "1073320"
  },
  {
    "text": "thing that's kind of really interesting is you know just make new environments for testing every time you need them where",
    "start": "1073320",
    "end": "1078809"
  },
  {
    "text": "previously had one testing environment and then you have developers and testers fighting about it or somebody is doing",
    "start": "1078809",
    "end": "1085289"
  },
  {
    "text": "some kind of testing on that and they poison the date and then your test fails just go make a new environment completely have a production for every",
    "start": "1085289",
    "end": "1091289"
  },
  {
    "text": "developer complete copy of it because it costs exactly the same it's based on the number of requests is based on actual",
    "start": "1091289",
    "end": "1097559"
  },
  {
    "text": "usage rather than the number of machines services or anything like that another",
    "start": "1097559",
    "end": "1102960"
  },
  {
    "text": "interesting thing here that opens up is well you know if you need to have some kind of experimental version you want to",
    "start": "1102960",
    "end": "1108929"
  },
  {
    "text": "try out an idea and do a/b testing previously kind of you know people used",
    "start": "1108929",
    "end": "1114840"
  },
  {
    "text": "a B testimony on the front end because that's easy to do now you can do a/b testing back to back complete stuck so",
    "start": "1114840",
    "end": "1121049"
  },
  {
    "text": "another thing that's kind of really interesting here as an option is just keep all versions around just you know",
    "start": "1121049",
    "end": "1127350"
  },
  {
    "text": "don't remove all versions they can be there we have the problem with PayPal people decided for some reason after we",
    "start": "1127350",
    "end": "1134759"
  },
  {
    "text": "changed our endpoint URL to keep sending us all the messages for previous",
    "start": "1134759",
    "end": "1140970"
  },
  {
    "text": "subscriptions before we change the order to the old URL now you know we just",
    "start": "1140970",
    "end": "1148049"
  },
  {
    "text": "decided let's keep the old version there and that's fine at some point people with these old subscriptions are going",
    "start": "1148049",
    "end": "1153210"
  },
  {
    "text": "to upgrade or die or something like that you know we can keep the application there as long as people are using it",
    "start": "1153210",
    "end": "1158490"
  },
  {
    "text": "that's okay perfectly fine so kind of the next thing that this thing starts impacting is what connects to what and",
    "start": "1158490",
    "end": "1166769"
  },
  {
    "text": "this is where lambda is kind of interesting in specific so every time you deploy a new version of a function",
    "start": "1166769",
    "end": "1173269"
  },
  {
    "text": "you can say look this version is important you don't have to but you can",
    "start": "1173269",
    "end": "1178470"
  },
  {
    "text": "see this version is important I want to keep it around that's called publishing a version and",
    "start": "1178470",
    "end": "1183809"
  },
  {
    "text": "when you publish the version lambda numerically increases published versions so you know one two three and things",
    "start": "1183809",
    "end": "1189419"
  },
  {
    "text": "like that and then forever you can call an older version as long as you don't delete it and you can set up the clients",
    "start": "1189419",
    "end": "1197850"
  },
  {
    "text": "to call that particular version you can keep tape on calling an older version right now because we know numerical",
    "start": "1197850",
    "end": "1203610"
  },
  {
    "text": "versions are not trivial to track in the concept of lambda there's also something",
    "start": "1203610",
    "end": "1208860"
  },
  {
    "text": "called an alias and is a textual pointer to a numerical version and you can also set up event",
    "start": "1208860",
    "end": "1217420"
  },
  {
    "text": "sources to call an alias so if I set up an API to call live or to call old PayPal or something like that then I can",
    "start": "1217420",
    "end": "1224140"
  },
  {
    "text": "kind of deploy a function call it testing properly kind of evaluate it in testing and then when it's done testing",
    "start": "1224140",
    "end": "1230290"
  },
  {
    "text": "accuracy look live is now whatever testing was all the events for live are",
    "start": "1230290",
    "end": "1235330"
  },
  {
    "text": "now going to the testing thing as well so this is not necessarily one-to-one you can have an alias pointing at",
    "start": "1235330",
    "end": "1241360"
  },
  {
    "text": "multiple versions that's how they do gradual deployments and you can say 90% of life is going to version 1 10% of",
    "start": "1241360",
    "end": "1248920"
  },
  {
    "text": "life is going to version 2 and you can have multiple aliases such as testing",
    "start": "1248920",
    "end": "1256330"
  },
  {
    "text": "and live pointing to the same numerical thing so kind of is many-to-many but what's interesting about this is at the",
    "start": "1256330",
    "end": "1263470"
  },
  {
    "text": "moment it's kind of trivial easy to declare that by just putting if you're",
    "start": "1263470",
    "end": "1269350"
  },
  {
    "text": "using cloud formation and Sam just put ought to publish aalia's live there whenever this function gets updated live",
    "start": "1269350",
    "end": "1275620"
  },
  {
    "text": "gets reassigned to that when it's done so the trick here is although you know CloudFormation provides some kind of",
    "start": "1275620",
    "end": "1283410"
  },
  {
    "text": "resemblance of an atomic deployment it is atomic in a sense that if you have",
    "start": "1283410",
    "end": "1289450"
  },
  {
    "text": "multiple functions multiple resources in the same application it will either succeed or rollback everything but",
    "start": "1289450",
    "end": "1297100"
  },
  {
    "text": "during deployment these functions will get updated at different times if I have three",
    "start": "1297100",
    "end": "1302679"
  },
  {
    "text": "functions here one functions going to get updated and another function gets updated and a third function gets updated so for a brief period of time",
    "start": "1302679",
    "end": "1310020"
  },
  {
    "text": "you will have potentially incompatible versions of different functions running now unlike uploading it on a single",
    "start": "1310020",
    "end": "1317110"
  },
  {
    "text": "package to something it's really not possible to guarantee that these things are completely consistent if you go to",
    "start": "1317110",
    "end": "1324370"
  },
  {
    "text": "your cloud function stack anywhere you can just see these things when you go to",
    "start": "1324370",
    "end": "1329910"
  },
  {
    "text": "the qualifier stub and you can see here I have two versions the first one is assigned to Alice but if you go to this",
    "start": "1329910",
    "end": "1337150"
  },
  {
    "text": "thing during deployment you will actually see that these things are getting updated to different types",
    "start": "1337150",
    "end": "1342460"
  },
  {
    "text": "and the key thing to remember here that's kind of a bit puzzling when you start working this is there's no way to",
    "start": "1342460",
    "end": "1347950"
  },
  {
    "text": "guarantee update into resource it exactly the same time that's the part of",
    "start": "1347950",
    "end": "1352990"
  },
  {
    "text": "kind of design that still remains with application developers so there's a",
    "start": "1352990",
    "end": "1359350"
  },
  {
    "text": "couple of consequences for that first of all reassigning an alias is much much much much much much much much faster",
    "start": "1359350",
    "end": "1364780"
  },
  {
    "text": "than uploading a package so using aliases for everything to kind of don't",
    "start": "1364780",
    "end": "1371290"
  },
  {
    "text": "wire event sources to the latest version because it's not a little unknown state what the latest version is during",
    "start": "1371290",
    "end": "1377080"
  },
  {
    "text": "deployment use aliases it's trivial easy to do that another thing kind of we've",
    "start": "1377080",
    "end": "1382180"
  },
  {
    "text": "learned is if you really need to process some data consistently send it as a whole thing to a function as an event",
    "start": "1382180",
    "end": "1388860"
  },
  {
    "text": "don't make it chatty make it an aggregate so that you're not into the situation where you know I'm sending a",
    "start": "1388860",
    "end": "1395980"
  },
  {
    "text": "username then I'm sending a kind of login liquid then I'm sending care of some other data and it might hit two",
    "start": "1395980",
    "end": "1401170"
  },
  {
    "text": "different versions of the same function throughout and deployment to send send eight aggregates with this thing I I",
    "start": "1401170",
    "end": "1407680"
  },
  {
    "text": "want one of the things we burnt our fingers quite a few times and then kind of learned how to fight against that is",
    "start": "1407680",
    "end": "1413760"
  },
  {
    "text": "if you need to be sure kind of what format is compatible with what version of your function right the format",
    "start": "1413760",
    "end": "1420610"
  },
  {
    "text": "version into the aggregate when you're saving it or write the format version in an event when you're sending it to the",
    "start": "1420610",
    "end": "1426160"
  },
  {
    "text": "function so then a function can say look I received an event format version four I'm actually good for format version",
    "start": "1426160",
    "end": "1434050"
  },
  {
    "text": "five so I need to upgrade this stuff because you know during a deployment some of the services will switch some or",
    "start": "1434050",
    "end": "1440890"
  },
  {
    "text": "not and there's another consequence the code that absolutely must be consistent within you know the same millisecond put",
    "start": "1440890",
    "end": "1448150"
  },
  {
    "text": "it into the same function there's not stuff where people are talking about you know is it a monolith is it a micro",
    "start": "1448150",
    "end": "1454480"
  },
  {
    "text": "service this is nano service what is a function can I think divided code that has different memory CPU needs into",
    "start": "1454480",
    "end": "1461290"
  },
  {
    "text": "different things but bundle code that really has to be consistently to the same function that's kind of our",
    "start": "1461290",
    "end": "1466540"
  },
  {
    "text": "guideline so far for this so kind of the next thing that is interesting here",
    "start": "1466540",
    "end": "1473860"
  },
  {
    "text": "because we don't control the socket anymore this application developers is how the tasks get routed",
    "start": "1473860",
    "end": "1479530"
  },
  {
    "text": "yes I say this goes to live but what is life and what clump that does this is",
    "start": "1479530",
    "end": "1485920"
  },
  {
    "text": "probably different for other systems I can't talk about that what lambda does Islam do actually does not spin a container for a new version of a",
    "start": "1485920",
    "end": "1492850"
  },
  {
    "text": "function until the first event asking for that version comes in so you can deploy something called live but the old",
    "start": "1492850",
    "end": "1499450"
  },
  {
    "text": "one can still be running if the events are going for that thing the new one is still not running the first time an event comes in asking for version 5",
    "start": "1499450",
    "end": "1506550"
  },
  {
    "text": "lambda speeds up a new container for version 5 so it doesn't actually shut down or start containers when you deploy",
    "start": "1506550",
    "end": "1513550"
  },
  {
    "text": "it just creates a new version available for anybody who wants to look at it and",
    "start": "1513550",
    "end": "1520470"
  },
  {
    "text": "lambda decides how many instances is going to run you cannot tell them the",
    "start": "1520680",
    "end": "1526060"
  },
  {
    "text": "look you know keep five instances for me because I'm going to have a lot of traffic on Saturday Amazon does their",
    "start": "1526060",
    "end": "1531610"
  },
  {
    "text": "own algorithms for this you as an application developer have no control over it which means there's no sticky sessions with an application load",
    "start": "1531610",
    "end": "1538390"
  },
  {
    "text": "balancer with a kind of service usually there's some kind of routing there that says oh you know send all the requests",
    "start": "1538390",
    "end": "1544210"
  },
  {
    "text": "from this user to the same machine so it can keep some in memory state or do something that's not possible with lambda and a big problem with that is",
    "start": "1544210",
    "end": "1551260"
  },
  {
    "text": "lots of people take the resisting website code that has some in memory state they deploy to this and then you",
    "start": "1551260",
    "end": "1559720"
  },
  {
    "text": "test it there's not enough traffic to start two instances and everything works okay you deploy to production and all of",
    "start": "1559720",
    "end": "1566110"
  },
  {
    "text": "the sudden you know the the request for the same user are going to different places so there's no such thing as a",
    "start": "1566110",
    "end": "1571420"
  },
  {
    "text": "sticky session here there's some kids about this I'll show you this later and the only guarantee that Amazon provides",
    "start": "1571420",
    "end": "1578950"
  },
  {
    "text": "so far is availability the current SLA for lambda is ninety nine ninety five",
    "start": "1578950",
    "end": "1584320"
  },
  {
    "text": "which means that if something is not available ninety nine point ninety five percent of the time Amazon will start",
    "start": "1584320",
    "end": "1590770"
  },
  {
    "text": "giving you a money-back usually kind of you know this is not an issue because",
    "start": "1590770",
    "end": "1597160"
  },
  {
    "text": "everything is asynchronous anyway so we've not really had trouble with this since we started but there is no latency",
    "start": "1597160",
    "end": "1604330"
  },
  {
    "text": "or processing time SLA there's nothing that guarantees that the message is going to be processed in a second two seconds five milliseconds anything",
    "start": "1604330",
    "end": "1610900"
  },
  {
    "text": "like that and I said in case of errors you'll get retries some you know first",
    "start": "1610900",
    "end": "1616060"
  },
  {
    "text": "one immediately second one after a few seconds then a third one after I think twenty seconds or something like that so",
    "start": "1616060",
    "end": "1621370"
  },
  {
    "text": "the whole platform at the moment is really optimized for throughput not for low latency or not for time to process",
    "start": "1621370",
    "end": "1628980"
  },
  {
    "text": "we went from an application hosting platform to lamda put some metrics in the browser's to see user latencies in",
    "start": "1628980",
    "end": "1636430"
  },
  {
    "text": "the browser there was no big difference between Heroku and lambda kind of your",
    "start": "1636430",
    "end": "1641920"
  },
  {
    "text": "experience might vary but there's a couple of other limits the one limit that's hard at the moment is you can",
    "start": "1641920",
    "end": "1651880"
  },
  {
    "text": "only take up to 15 minutes in the processor per task you cannot do anything longer than 15 minutes and you",
    "start": "1651880",
    "end": "1658930"
  },
  {
    "text": "can't ask for more some people treat by you know splitting tasks differently or if you don't finish saving state and",
    "start": "1658930",
    "end": "1665050"
  },
  {
    "text": "then restarting another one but designing an app around this again is slightly kind of slightly difficult there are alternative services like",
    "start": "1665050",
    "end": "1671980"
  },
  {
    "text": "Fargate that are built similarly but you give them a docker container it runs for",
    "start": "1671980",
    "end": "1678310"
  },
  {
    "text": "a long time for example I have this video editing application that I'm building now and because people can",
    "start": "1678310",
    "end": "1685510"
  },
  {
    "text": "upload massive files to convert I can't guarantee this is gonna finish in 15 minutes so you know I'll spin it off and",
    "start": "1685510",
    "end": "1691840"
  },
  {
    "text": "send it elsewhere this thing starts significantly slower than lambda but if you know the task is 15 minutes or more",
    "start": "1691840",
    "end": "1697540"
  },
  {
    "text": "then maybe that's okay and there's about maximum of 1,000 concurrent instances",
    "start": "1697540",
    "end": "1702970"
  },
  {
    "text": "for all your functions in a single account that can run at the same time you can ask for more if you really go to",
    "start": "1702970",
    "end": "1708580"
  },
  {
    "text": "kind of something that requires a lot more people got stuck with this so you know ask for more before it gets hurting",
    "start": "1708580",
    "end": "1715260"
  },
  {
    "text": "so there's a couple of consequences of that so the first consequence of that on lambda in particular is kind of startup",
    "start": "1715260",
    "end": "1724510"
  },
  {
    "text": "times and and reusing and things like that so in 2005 there were lots of posts",
    "start": "1724510",
    "end": "1731800"
  },
  {
    "text": "around what's called the cold start a cold start is where lambda needs to create a new instance to receive your",
    "start": "1731800",
    "end": "1737560"
  },
  {
    "text": "requests and people are talking about how this is taking too long you need to fight against this",
    "start": "1737560",
    "end": "1742809"
  },
  {
    "text": "you need to kind of keep your lambdas warm and things that my experimental data I am azan doesn't really publish any",
    "start": "1742809",
    "end": "1750129"
  },
  {
    "text": "official data about this is that phony a new instance a new version of the function or when the existing instances",
    "start": "1750129",
    "end": "1757210"
  },
  {
    "text": "can't cope with capacity if you're doing stuff in Python or JavaScript it's less than one second if you're doing stuff in",
    "start": "1757210",
    "end": "1763960"
  },
  {
    "text": "Java it's a couple of seconds and if you attach it to a virtual private network virtual private cloud it's more than ten",
    "start": "1763960",
    "end": "1771669"
  },
  {
    "text": "seconds so that's kind of useless for that so there's a couple of kind of",
    "start": "1771669",
    "end": "1777970"
  },
  {
    "text": "interesting aspects of this as well there's no official date on how frequently an instance is going to get reused but my experience is that if a",
    "start": "1777970",
    "end": "1785440"
  },
  {
    "text": "new message comes in within a few minutes it will be reused if it's not busy if it's more than 10 minutes you're",
    "start": "1785440",
    "end": "1792639"
  },
  {
    "text": "probably going to get the new instance and reaching an existing instance from event sources is about kind of 5200",
    "start": "1792639",
    "end": "1801309"
  },
  {
    "text": "milliseconds so for a normal web user they're not going to notice something",
    "start": "1801309",
    "end": "1806710"
  },
  {
    "text": "like this because network latencies are just kind of like that which means that",
    "start": "1806710",
    "end": "1812649"
  },
  {
    "text": "the platform as it is now is great for any kind of HTTP API handling web hooks payment processing things like that it's",
    "start": "1812649",
    "end": "1820240"
  },
  {
    "text": "great for tasks where a couple of hundred milliseconds is not so problematic file conversions reporting",
    "start": "1820240",
    "end": "1827950"
  },
  {
    "text": "and things like that and anything that is really throughput bound not latency",
    "start": "1827950",
    "end": "1834759"
  },
  {
    "text": "bound this is okay now as a platform it's been changing quite a lot I I wrote the book on this recently and I was",
    "start": "1834759",
    "end": "1841629"
  },
  {
    "text": "finished with the book and then Amazon released a new version of this and I had to rewrite four chapters before publishing the book so it's very very",
    "start": "1841629",
    "end": "1848169"
  },
  {
    "text": "possibly that you know in a year's time or two years time there's gonna be different constraints but um what I",
    "start": "1848169",
    "end": "1853960"
  },
  {
    "text": "wouldn't use this for now is any kind of real time or latency processing if you have something where you absolutely need",
    "start": "1853960",
    "end": "1859090"
  },
  {
    "text": "to guarantee that messages are handled within any reasonable time don't do this",
    "start": "1859090",
    "end": "1866309"
  },
  {
    "text": "any kind of continuous processing where you connect your socket and then you you know feed stuff from Twitter and stuff",
    "start": "1866309",
    "end": "1872019"
  },
  {
    "text": "like this is not good for that again there are other services on Amazon that can be used for this and any because",
    "start": "1872019",
    "end": "1878700"
  },
  {
    "text": "there's no real choice between types of CPUs at the moment on lambda I don't know about other services things that",
    "start": "1878700",
    "end": "1884009"
  },
  {
    "text": "depend on GPUs like video rendering No so the one of the kind of questions that",
    "start": "1884009",
    "end": "1891450"
  },
  {
    "text": "people often start talking about when when looking at routing and things like this how do we know that somebody's not going to abuse this stuff how do I",
    "start": "1891450",
    "end": "1898440"
  },
  {
    "text": "protect against my competition just kind of spamming me or somebody kind of causing you know this thing to spin out",
    "start": "1898440",
    "end": "1904440"
  },
  {
    "text": "of control so there's a couple of ways this can be done and again Ops is included in the price so one thing that you can do for",
    "start": "1904440",
    "end": "1911489"
  },
  {
    "text": "every function is you don't have to give it the whole thousand available things you can give it 1000 or you can give it",
    "start": "1911489",
    "end": "1919919"
  },
  {
    "text": "one and create a nice little monolith there is you know if you're doing something that cannot be done in",
    "start": "1919919",
    "end": "1925709"
  },
  {
    "text": "parallel you can say 1 and lambda will never start more than one instance of",
    "start": "1925709",
    "end": "1931259"
  },
  {
    "text": "this you still get all the failover every recovery and things there is the reason why you would want to do that the",
    "start": "1931259",
    "end": "1937349"
  },
  {
    "text": "other thing is if you put an API GAE two in front of it or something like that you can actually put throttling limits",
    "start": "1937349",
    "end": "1942839"
  },
  {
    "text": "on that you can put even different throttling limits on different account types so you can give your premium",
    "start": "1942839",
    "end": "1948479"
  },
  {
    "text": "accounts some limit you can give your kind of free account some other limits",
    "start": "1948479",
    "end": "1953609"
  },
  {
    "text": "so there's lots and lots of ways how to do this configuration based it's not such a big risk and another thing I said",
    "start": "1953609",
    "end": "1962249"
  },
  {
    "text": "there's no routing control really but you can treat a bit one thing that you",
    "start": "1962249",
    "end": "1967979"
  },
  {
    "text": "can do is you can control parallelization with kinases kenosis is an additional service on Amazon and",
    "start": "1967979",
    "end": "1973469"
  },
  {
    "text": "kinetise is a stream processor that works with shards shards are kind of",
    "start": "1973469",
    "end": "1979219"
  },
  {
    "text": "sequences of events that are separated and you give it a data field that it",
    "start": "1979219",
    "end": "1985499"
  },
  {
    "text": "hashes to decide what shard to send something to when you collect here edges two lambdas it guarantees that for a",
    "start": "1985499",
    "end": "1992489"
  },
  {
    "text": "single shard it's never going to have more than one function running on it more than one instance running it so for",
    "start": "1992489",
    "end": "1998129"
  },
  {
    "text": "example for this collaboration tool we're building we allow multiple users to write into the same file at the same",
    "start": "1998129",
    "end": "2003559"
  },
  {
    "text": "time but we use the file ID to select the shard so that means that regardless of how",
    "start": "2003559",
    "end": "2010870"
  },
  {
    "text": "many uses a pumping data at the same time no more than one lamp instance is ever gonna process a single file so you",
    "start": "2010870",
    "end": "2017470"
  },
  {
    "text": "don't have to lock you don't have to care of do these things so that's a very useful pattern to kind of not have a",
    "start": "2017470",
    "end": "2023080"
  },
  {
    "text": "single instance if you can't afford polarization but to say look you know by user by file by account by something",
    "start": "2023080",
    "end": "2030700"
  },
  {
    "text": "we're gonna paralyze this stuff so you can still have a hundred lambdas running or fifty lambdas running but avoid all",
    "start": "2030700",
    "end": "2037809"
  },
  {
    "text": "the distributed locking problems so that's a very useful trick now another thing that kind of confuses people a lot",
    "start": "2037809",
    "end": "2043150"
  },
  {
    "text": "this state because kind of thoughtful whatever you know good or bad reason they decided to call these things",
    "start": "2043150",
    "end": "2048280"
  },
  {
    "text": "functions I think one of the reasons was to avoid comparing it with containers and services and things like that but",
    "start": "2048280",
    "end": "2054550"
  },
  {
    "text": "functions in especially lambda has meaning in functional programming lambda",
    "start": "2054550",
    "end": "2060520"
  },
  {
    "text": "calculus is a branch of mathematics that deals with kind of computability and things like that and people talk about",
    "start": "2060520",
    "end": "2066908"
  },
  {
    "text": "functions and lambdas this brought the whole baggage of assumptions around it and there's lots and lots of misguided",
    "start": "2066909",
    "end": "2073148"
  },
  {
    "text": "poses they talk about kilometers are stateless they're not a lambda instance",
    "start": "2073149",
    "end": "2078700"
  },
  {
    "text": "will be reused within a few minutes which means that there is an in-memory state they're alarmed instance also has",
    "start": "2078700",
    "end": "2085540"
  },
  {
    "text": "a 500 megabyte temp storage where you can save stuff to reuse to caching",
    "start": "2085540",
    "end": "2092618"
  },
  {
    "text": "things that now for somebody you know some usages this is a good thing for some use it is this is a horribly bad thing I mentioned there's no control",
    "start": "2092619",
    "end": "2099520"
  },
  {
    "text": "over how many instances run in a period of time and you know even in this thing",
    "start": "2099520",
    "end": "2104670"
  },
  {
    "text": "lambda might decide to kill this instance and start another one so assuming that the state is preserved is",
    "start": "2104670",
    "end": "2111340"
  },
  {
    "text": "wrong but you know can you cash it for some things absolutely yes if you need to download some external stuff to",
    "start": "2111340",
    "end": "2117490"
  },
  {
    "text": "process if you need to access something you can use the temp space you can use the in-memory thing but don't do it for",
    "start": "2117490",
    "end": "2123250"
  },
  {
    "text": "user related stuff do it for application related things they don't depend on a particular user so don't keep user data",
    "start": "2123250",
    "end": "2130450"
  },
  {
    "text": "in lambda functions that's a horribly bad idea put data somewhere else there's s3 that's kind of an object store this",
    "start": "2130450",
    "end": "2137380"
  },
  {
    "text": "DynamoDB that say data store a relational database they're a big",
    "start": "2137380",
    "end": "2142530"
  },
  {
    "text": "problem at the moment because relational database is typically required a VPC and",
    "start": "2142530",
    "end": "2148020"
  },
  {
    "text": "then takes 10 seconds to start up a VPC so if you need to use relational database what I suggest is have one",
    "start": "2148020",
    "end": "2154740"
  },
  {
    "text": "lambda function that receives requests and just trucks it on a queue very quickly like you know something like that then have another one waking up",
    "start": "2154740",
    "end": "2161730"
  },
  {
    "text": "after kenosis on a V PC or something like that that would allow you to reuse and avoid this kind of startup time appsync is",
    "start": "2161730",
    "end": "2168690"
  },
  {
    "text": "another interesting up a platform for this that Amazon is offering it's a hosted graph QL endpoint that you can",
    "start": "2168690",
    "end": "2176880"
  },
  {
    "text": "use to talk from the clients that I clicked the picture that I showed earlier on and it's kind of kosuna data",
    "start": "2176880",
    "end": "2183060"
  },
  {
    "text": "it has conflict resolution has offline support keep user data there and again you can set up lambdas to read and write",
    "start": "2183060",
    "end": "2189510"
  },
  {
    "text": "from that so um one of the things that kind of is is also interesting when we start looking at where the data is and",
    "start": "2189510",
    "end": "2195780"
  },
  {
    "text": "and calls and stuff like that a security because for every single request Amazon",
    "start": "2195780",
    "end": "2202200"
  },
  {
    "text": "needs to separately authorize it there's no there's no persistent connections that it's it's you don't own the socket",
    "start": "2202200",
    "end": "2208920"
  },
  {
    "text": "Amazonas the socket so for every single connection I am that's kind of the identity and authentication Management",
    "start": "2208920",
    "end": "2215790"
  },
  {
    "text": "Service has to authorize the request beat kind of from a client to lambda or",
    "start": "2215790",
    "end": "2222060"
  },
  {
    "text": "from lambda to other resources which means that if your lambda is saving or reading to databases or to a file system",
    "start": "2222060",
    "end": "2230160"
  },
  {
    "text": "or something like that every single request that goes out from that lambda is separately authorized which means",
    "start": "2230160",
    "end": "2237060"
  },
  {
    "text": "that kind of if a client device talks to the database or a lambda talks to the",
    "start": "2237060",
    "end": "2243450"
  },
  {
    "text": "database it doesn't matter it still has to be authorized with normal server side apps you have this gateway in the middle",
    "start": "2243450",
    "end": "2250290"
  },
  {
    "text": "there's a application server request hitting the application server are not trusted application server to database",
    "start": "2250290",
    "end": "2257610"
  },
  {
    "text": "is trusted in this case is not and actually there's no such thing as a background resource key really because",
    "start": "2257610",
    "end": "2263340"
  },
  {
    "text": "s3 is available on using HTTP Dynamo is available using HTTP app sink is available using HTTP so people can talk",
    "start": "2263340",
    "end": "2270480"
  },
  {
    "text": "to you directly if I am allows that so that begs an interesting question if you kind of look at a structure where",
    "start": "2270480",
    "end": "2279570"
  },
  {
    "text": "you know the client sends some data to the API gateway the API gateway sends it to lambda lambda saves you to the bucket",
    "start": "2279570",
    "end": "2284730"
  },
  {
    "text": "what is this thing actually doing is it doing something that's business important or is it just there is a",
    "start": "2284730",
    "end": "2292680"
  },
  {
    "text": "bouncer is it there just so kind of because we are in our minds thinking about well I need to send this data to",
    "start": "2292680",
    "end": "2299520"
  },
  {
    "text": "my application my application is to storage because there's several ways you can authorize a client to talk directly",
    "start": "2299520",
    "end": "2305130"
  },
  {
    "text": "to s3 for example for this app that we are building we allow anonymous users to",
    "start": "2305130",
    "end": "2311160"
  },
  {
    "text": "save files up to hundred kilobytes without even registering so instead of this thing going through a lambda lambda",
    "start": "2311160",
    "end": "2316830"
  },
  {
    "text": "saying is this a hundred kilobytes or not I can generate a pre-signed",
    "start": "2316830",
    "end": "2322710"
  },
  {
    "text": "authorization to says allow him to save files with this extension with this",
    "start": "2322710",
    "end": "2327750"
  },
  {
    "text": "prefix up to hundred kilobytes for the next ten minutes so the client can go and talk to this thing directly so you",
    "start": "2327750",
    "end": "2334920"
  },
  {
    "text": "can't generate these signatures from a lambda and then kind of go and get clients to talk directly to your",
    "start": "2334920",
    "end": "2340170"
  },
  {
    "text": "back-end storage with dynamo you can say allow a user to modify only the email property of their own record allow a",
    "start": "2340170",
    "end": "2347340"
  },
  {
    "text": "user to read the user ID property from their record but not to modify it allow everybody to read the total scoreboard",
    "start": "2347340",
    "end": "2354990"
  },
  {
    "text": "but only this back-end process to write it and things like that and by doing this very very micro resolutions that",
    "start": "2354990",
    "end": "2361380"
  },
  {
    "text": "they help you to support request based pricing and request based authorizations you can benefit from that for example",
    "start": "2361380",
    "end": "2367650"
  },
  {
    "text": "say somebody wants to upload couple of gigabytes we can send it to an application server through an API and",
    "start": "2367650",
    "end": "2373950"
  },
  {
    "text": "you know then get stuck on on multiple places or we can use a very quick climb the signature to say look allow this",
    "start": "2373950",
    "end": "2379380"
  },
  {
    "text": "person to upload five megabytes and then go directly to s3 or go directly to dynamo or go somewhere else",
    "start": "2379380",
    "end": "2385530"
  },
  {
    "text": "and there's a service called kognito as well that allows people to do templated policies which means i can say you know",
    "start": "2385530",
    "end": "2392730"
  },
  {
    "text": "users can go and rewrite their own date database records users can read the",
    "start": "2392730",
    "end": "2399180"
  },
  {
    "text": "scoreboard or things like that so instead of you if the only thing that kind of this thing in the middle is doing",
    "start": "2399180",
    "end": "2404300"
  },
  {
    "text": "the gatekeeper just gonna move it out it's gonna be a lot faster because you don't have to pay for intermediaries it's gonna be a lot cheaper because it's",
    "start": "2404300",
    "end": "2411770"
  },
  {
    "text": "gonna be a lot more reliable there's fewer components to change and this is one of these kind of really wonderful things when you start thinking about",
    "start": "2411770",
    "end": "2418100"
  },
  {
    "text": "request based security requests Denise pricing the other thing is we usually",
    "start": "2418100",
    "end": "2423170"
  },
  {
    "text": "kind of or at least I used to use the middleman for workflows and coordination oh you want to convert the file good you",
    "start": "2423170",
    "end": "2430010"
  },
  {
    "text": "send it to the application server the application server sends you to the storage then calls the converter then",
    "start": "2430010",
    "end": "2435560"
  },
  {
    "text": "kind of pulls the converter securely and then exposes some kind of status to the user",
    "start": "2435560",
    "end": "2440710"
  },
  {
    "text": "why kind of we can get platform events",
    "start": "2440710",
    "end": "2446030"
  },
  {
    "text": "to fire off as well lambda is a universal glue on a table so almost",
    "start": "2446030",
    "end": "2451160"
  },
  {
    "text": "anything can cause the lambda function to start you can do it by you know sending an email you can do it by saving",
    "start": "2451160",
    "end": "2457340"
  },
  {
    "text": "a file you can do it by lots of different things so you can configure s3 to say whenever a file is uploaded to",
    "start": "2457340",
    "end": "2463220"
  },
  {
    "text": "this prefix or whenever the file is uploaded with this extension call this lambda function so what that means is",
    "start": "2463220",
    "end": "2469190"
  },
  {
    "text": "that if you you know if the only thing that this same thing in the middle is doing is orchestration just don't worry",
    "start": "2469190",
    "end": "2475490"
  },
  {
    "text": "about that use platform events this is kind of how our conversion pipeline works we have a you know something that",
    "start": "2475490",
    "end": "2482780"
  },
  {
    "text": "size the uploads we have then the user can go and upload the large file",
    "start": "2482780",
    "end": "2488180"
  },
  {
    "text": "directly to a bucket when a file is uploaded to evacute to convert there automatically starts it saves it to the",
    "start": "2488180",
    "end": "2494000"
  },
  {
    "text": "results bucket and we have this other thing that kind of just gives people a hey this is where you go and look for",
    "start": "2494000",
    "end": "2499640"
  },
  {
    "text": "the results so the most expensive piece here is the API gateway the second most",
    "start": "2499640",
    "end": "2505520"
  },
  {
    "text": "expensive piece is lambda the third most expensive piece is s3 which means that if you have hey is my file done going",
    "start": "2505520",
    "end": "2512510"
  },
  {
    "text": "through an API gate when lambda n s3 you're paying probably ten times as much",
    "start": "2512510",
    "end": "2518260"
  },
  {
    "text": "then if you just tell them oh go to s3 and try getting the first ten bytes of this and you'll see if it's done or not",
    "start": "2518260",
    "end": "2523580"
  },
  {
    "text": "or go and ask for metadata so don't use don't use kind of this middle thing for",
    "start": "2523580",
    "end": "2529610"
  },
  {
    "text": "orchestration another thing that can really opens up interestingly is once these things start",
    "start": "2529610",
    "end": "2536680"
  },
  {
    "text": "you know once we have this micro level authorizations and we can't get client to talk to the back-end resources we can",
    "start": "2536680",
    "end": "2542980"
  },
  {
    "text": "move orchestration for client workflows to the client device which means that all of a sudden your app is not just",
    "start": "2542980",
    "end": "2548200"
  },
  {
    "text": "running on I don't know 50 60 hundred processor is in Amazon it's running on several hundreds of thousands of",
    "start": "2548200",
    "end": "2553420"
  },
  {
    "text": "processors on clients devices that you're not paying for move the workflow to the client device so as a conclusion",
    "start": "2553420",
    "end": "2561720"
  },
  {
    "text": "thinking about removing the gatekeeper that that's kind of really several as part of service remove the gatekeepers",
    "start": "2561720",
    "end": "2569460"
  },
  {
    "text": "allows us to create applications that are faster because the client can talk",
    "start": "2569460",
    "end": "2574720"
  },
  {
    "text": "to the storage directly the client can very often use storage api's that much better s3 has full support for partial",
    "start": "2574720",
    "end": "2582069"
  },
  {
    "text": "uploads for multi-part uploads and things that you don't have to build it just kind of let the user use it it",
    "start": "2582069",
    "end": "2587740"
  },
  {
    "text": "allows us to do stuff this cheaper because in a case of hey is my file done is my file done is my file done by letting people talk directly to storage",
    "start": "2587740",
    "end": "2594250"
  },
  {
    "text": "you're gonna save an order of magnitude more money by letting the client talk data directly and it's also a lot more",
    "start": "2594250",
    "end": "2600940"
  },
  {
    "text": "robust because we're removing stuff that can go wrong fewer components kind of",
    "start": "2600940",
    "end": "2606640"
  },
  {
    "text": "it's it's more robust so that's pretty much it as I mentioned I kind of wrote a",
    "start": "2606640",
    "end": "2612039"
  },
  {
    "text": "book about this it's it's out yesterday and it's called running several as there's a lot more information about the",
    "start": "2612039",
    "end": "2617950"
  },
  {
    "text": "scene you have a lot more code examples if you go to this URL over the next 24 hours you get 50% of the book thank you",
    "start": "2617950",
    "end": "2625150"
  },
  {
    "text": "very much [Applause] you",
    "start": "2625150",
    "end": "2632010"
  }
]