[
  {
    "start": "0",
    "end": "40000"
  },
  {
    "text": "So, welcome to this episode of GOTO Unscripted. We \nare live at GOTO Aarhus, which is very exciting.  ",
    "start": "13880",
    "end": "20560"
  },
  {
    "text": "It's my first time in Denmark and indeed my first \ntime at GOTO, so that's been lovely. I'm Charles   Humble. I am currently Container Solutions chief \neditor and I'm joined by Holly Cummins from Red  ",
    "start": "20560",
    "end": "31560"
  },
  {
    "text": "Hat, where she is a senior principal software \nengineer in the Quarkus team. I got that right?  More or less. \nIt's a very long  ",
    "start": "31560",
    "end": "37800"
  },
  {
    "text": "job title. We met up last night over dinner at the \nconference dinner briefly, where the brilliant Sam  ",
    "start": "37800",
    "end": "45120"
  },
  {
    "start": "40000",
    "end": "459000"
  },
  {
    "text": "Aaron was doing his live coding DJing thing, \nwhich was phenomenal. In the middle of that,  ",
    "start": "45120",
    "end": "51160"
  },
  {
    "text": "we were talking at the same table, but to \ndifferent people. And we both had the same  ",
    "start": "51160",
    "end": "56239"
  },
  {
    "text": "cloud-native story, which was so funny, which \nis essentially this thing of, we are going to   microservices because we want to move faster, but \nthen we have a change in control board who meets,  ",
    "start": "56240",
    "end": "65680"
  },
  {
    "text": "like, twice a year and said, yeah, possibly \nmicroservices are not the answer to your problem.  ",
    "start": "65680",
    "end": "70800"
  },
  {
    "text": "I found myself thinking as we were chatting off \ncamera, that there is this thing about sort of  ",
    "start": "70800",
    "end": "78720"
  },
  {
    "text": "shoehorning architectures into cultures where \nthey don't belong. And I thought with some of  ",
    "start": "78720",
    "end": "84120"
  },
  {
    "text": "your background from your consulting days at \nIBM garage, that might be just an interesting   sort of thread to pull on a little bit. \nSo, do you have sort of thoughts on that?",
    "start": "84120",
    "end": "92560"
  },
  {
    "text": "I think there's sort of two anti-patterns that \nwe see. One is shoehorning the architecture  ",
    "start": "92560",
    "end": "98479"
  },
  {
    "text": "into a place where it just doesn't fit. It's \nsolving the wrong problem. The other thing I  ",
    "start": "98480",
    "end": "105400"
  },
  {
    "text": "see a lot is maybe the architecture is the right \narchitecture, but we haven't looked enough at the  ",
    "start": "105400",
    "end": "112080"
  },
  {
    "text": "surrounding context and tried to figure out, well, \nwhat's necessary for this to be successful. So,  ",
    "start": "112080",
    "end": "117360"
  },
  {
    "text": "with microservices for example, what happens \na lot is, first of all, a lot of organizations  ",
    "start": "117360",
    "end": "123440"
  },
  {
    "text": "don't ask what problem am I trying to solve \nby going to microservices. They assume that   because everybody else is going to microservices, \nit must be the right thing for them. But then once  ",
    "start": "123440",
    "end": "132959"
  },
  {
    "text": "we go one step further than that, it's, okay, \nI want to go to microservices because I'd like  ",
    "start": "132960",
    "end": "140480"
  },
  {
    "text": "to move faster, which is a reasonable goal.\nAnd that's something that the style is suited   to. Then it's, okay, so I've switched to \nmicroservices, so I've made my application  ",
    "start": "140480",
    "end": "150800"
  },
  {
    "text": "distributed and now I'm going to go faster. \nWell, no, making your application distributed   doesn't make it go faster. What you have to then \nlook at is, well, how often do I release? What's  ",
    "start": "150800",
    "end": "159040"
  },
  {
    "text": "the process for a release? Also, how do I test \nthese things? And if I have to test everything  ",
    "start": "159040",
    "end": "164400"
  },
  {
    "text": "in a big homogenous monolith, because otherwise, I \ndon't have the confidence, then actually the fact  ",
    "start": "164400",
    "end": "170120"
  },
  {
    "text": "that there's distributed communication doesn't \nmatter because it is deployed as a monolith. So,  ",
    "start": "170120",
    "end": "175599"
  },
  {
    "text": "then it's just, yeah, that slightly bigger \npicture of what are the conditions for success?  ",
    "start": "175600",
    "end": "181760"
  },
  {
    "text": "Have I looked outside the code to make sure \nthat those conditions for success are there? ",
    "start": "181760",
    "end": "188840"
  },
  {
    "text": "Yes. I mean, there's a couple of things there. \nSo, there's the classic getting your sort of  ",
    "start": "188840",
    "end": "194959"
  },
  {
    "text": "service boundaries right, so you can deploy things \nindependently, which is incredibly hard a lot of  ",
    "start": "194960",
    "end": "200640"
  },
  {
    "text": "the time. I have certainly worked on systems and \nI wouldn't be surprised if you have as well, where  ",
    "start": "200640",
    "end": "205680"
  },
  {
    "text": "it's like, we've got a bunch of microservices, but \nthis lot will have to be updated at the same time   because otherwise the whole thing breaks, right?\nYes, exactly. ",
    "start": "205680",
    "end": "212760"
  },
  {
    "text": "And what you've done is make \neverything more complicated.  Exactly.\nBut then also I think   there's the sort of cultural aspects of it's \na bit, like, I mean, there was that time when  ",
    "start": "212760",
    "end": "224000"
  },
  {
    "text": "everyone was doing a sort of agile transformation, \nand I think now we hear agile transformation and   kind of shiver a little bit inside, right?\nYes. And yet it's still going on. ",
    "start": "224000",
    "end": "232040"
  },
  {
    "text": "And it's still happening. But it's that because \nit's you're trying to... for this to be effective,  ",
    "start": "232040",
    "end": "239400"
  },
  {
    "text": "you need to change the way people work. If you \nwant to move faster, then that requires...I mean,  ",
    "start": "239400",
    "end": "251239"
  },
  {
    "text": "there are various reasons why people go this \nroute, but that's certainly one of the ways,   reasons that people go this route, and that \nrequires you to work in smaller chunks,  ",
    "start": "251240",
    "end": "260040"
  },
  {
    "text": "have a less work in progress, all the stuff \nthat we kind of know. But in large enterprises,  ",
    "start": "260040",
    "end": "265360"
  },
  {
    "text": "in my experience, actually making that change \nstick is incredibly difficult. And I think  ",
    "start": "265360",
    "end": "271400"
  },
  {
    "text": "that's kind of interesting as well.\nI think a lot of it is about trust,   and there are two sides to the trust. One is the \ncultural side of whether is there a culture of  ",
    "start": "271400",
    "end": "281000"
  },
  {
    "text": "fear or do people have autonomy or does everything \nhave to go through a central silo of regulation  ",
    "start": "281000",
    "end": "289280"
  },
  {
    "text": "and control? And part of that is about regulated \nindustries, and that ends up being more necessary  ",
    "start": "289280",
    "end": "295760"
  },
  {
    "text": "but not entirely necessary. But then the other \npart of it is the technical trust. Often the  ",
    "start": "295760",
    "end": "301560"
  },
  {
    "text": "reason organizations are unwilling to deploy their \nmicroservices individually is because there's...  ",
    "start": "301560",
    "end": "309080"
  },
  {
    "text": "You know, it's not a paranoia. There is quite a \nhigh likelihood that if deployed individually,  ",
    "start": "309080",
    "end": "314199"
  },
  {
    "text": "they would break. So, it makes sense to have a \nQE phase where everything is tested in a batch. ",
    "start": "314200",
    "end": "324120"
  },
  {
    "text": "But the thing is that both are resolvable. There \nare things like contract testing buzz testing and  ",
    "start": "324120",
    "end": "337080"
  },
  {
    "text": "matrix testing, and that kind of thing to some \nextent can give an organization the confidence  ",
    "start": "337080",
    "end": "342960"
  },
  {
    "text": "to be able to deploy without having to do the \ntesting of everything in a big batch. Which  ",
    "start": "342960",
    "end": "349120"
  },
  {
    "text": "gives you such a whim for the speed and brings you \nmuch closer to those goals that you were probably  ",
    "start": "349120",
    "end": "355720"
  },
  {
    "text": "trying to achieve by going to microservices.\nYes. I've also seen the thing of developers  ",
    "start": "355720",
    "end": "365520"
  },
  {
    "text": "or senior developers or architects being kind \nof attached to particular sort of styles of  ",
    "start": "365520",
    "end": "373919"
  },
  {
    "text": "architecture that maybe don't quite work \nin the distributed world. The classic used  ",
    "start": "373920",
    "end": "379440"
  },
  {
    "text": "to be, that you had a load of microservices and \nthen one central database. I think we've probably   got away from that more or less, but you do see \nthings like, you know, I really want transactions,  ",
    "start": "379440",
    "end": "389400"
  },
  {
    "text": "but distributed transaction coordination is quite \nhard. And you get into that, you know, I need sort  ",
    "start": "389920",
    "end": "396080"
  },
  {
    "text": "of compensation, compensating transactions or, \nyou know, sort of saga pattern stuff. I wonder  ",
    "start": "396080",
    "end": "402560"
  },
  {
    "text": "if there's a sort of connection there in the \nsame way that changing the way people work  ",
    "start": "402560",
    "end": "408800"
  },
  {
    "text": "at a cultural level to changing the way software \narchitects kind of think about what they're doing.",
    "start": "408800",
    "end": "415080"
  },
  {
    "text": "I think so. And I think it's really easy to \nsort of judge as well and to go, \"Oh, look,  ",
    "start": "415080",
    "end": "420879"
  },
  {
    "text": "you're doing things the way that you used to do \nthem 5 or 10 years ago. Silly you.\" But there's   such a lot of cognitive load and now, you know, \nthere's sort of all these interesting charts that  ",
    "start": "420880",
    "end": "430800"
  },
  {
    "text": "show how our cognitive load as developers \nhas increased so much compared to where   it used to be. And so, then that does mean that \nrealistically it's hard to keep up and, you know,  ",
    "start": "430800",
    "end": "441560"
  },
  {
    "text": "it's not because we're stupid, it's just because a \nlot is coming at us and sometimes you have to say,   okay, a new style of transactions, that's \njust a bit too much for me to digest at  ",
    "start": "442680",
    "end": "452120"
  },
  {
    "text": "the moment. I will stick with what I know \nbecause that's what humans are good at.",
    "start": "452120",
    "end": "456919"
  },
  {
    "start": "459000",
    "end": "839000"
  },
  {
    "text": "I think something else I was sort of \nreflecting on quite a lot, I mean,   we started in the industry similar time. I \nthink I was a little before you. But that  ",
    "start": "459160",
    "end": "468600"
  },
  {
    "text": "sort of point where everything was sort \nof proprietary and, you know, everything  ",
    "start": "468600",
    "end": "474480"
  },
  {
    "text": "was closed source and knowledge sharing was a \nreal problem. In the second part of my career,  ",
    "start": "474480",
    "end": "480360"
  },
  {
    "text": "I spent a lot of time just thinking about how we \nas an industry get better at sharing knowledge and  ",
    "start": "480360",
    "end": "486319"
  },
  {
    "text": "passing on what we know. But I was interested \nto get your reflections on that. Because   you've kind of come through that same sort of \ntransformation of a sort in our industry, I guess. ",
    "start": "486320",
    "end": "497080"
  },
  {
    "text": "I just think it's so incredibly positive \nand it feels almost utopian actually,   the sort of shift from proprietary to open source \nand it just seems to benefit everybody, which is  ",
    "start": "497080",
    "end": "508240"
  },
  {
    "text": "nice. It's nice when you get something where \nit's not, you know, there's one set of winners   and there's one set of losers. All of us are \nbenefiting. So, you have the sort of enterprises,  ",
    "start": "508240",
    "end": "516279"
  },
  {
    "text": "like, I work for RedHat now, they've made a very \nsuccessful business on 100% open source. But then  ",
    "start": "516280",
    "end": "522360"
  },
  {
    "text": "for me as an individual developer as well, it's \njust so delightful that if I need something,  ",
    "start": "522360",
    "end": "527399"
  },
  {
    "text": "I can go and I can access it and it's open source. \nIf I find it doesn't work, I can fix it because  ",
    "start": "527400",
    "end": "533120"
  },
  {
    "text": "it's open source. It's just it's hard to imagine, \neven now going back to the days when everything  ",
    "start": "533120",
    "end": "538839"
  },
  {
    "text": "was just so closed and you didn't know what was \ngoing on under the covers. Sometimes there would   be quite a simple bug, but you couldn't fix \nit because you just didn't have that access. ",
    "start": "538840",
    "end": "548560"
  },
  {
    "text": "It's a huge, huge change. And of course, \nwe also came up through the sort of very   early stages of Java. So, if I remember \nright, you were on the WebSphere team. ",
    "start": "550520",
    "end": "559560"
  },
  {
    "text": "I was, yes.\nAnd then on WebSphere Liberty,   I think it was called, the sort of...\nYes, exactly. ",
    "start": "559560",
    "end": "564880"
  },
  {
    "text": "The kind of the sort of sequel as it were to the \noriginal WebSphere product. I think it's quite  ",
    "start": "564880",
    "end": "571920"
  },
  {
    "text": "interesting to think about that as well because \nJava has been around for a very, very long time.   It's still a very widely used language, but the \nworld that it was kind of conceived for from an  ",
    "start": "571920",
    "end": "584600"
  },
  {
    "text": "architectural or a software point of view is \nradically different from the world we find   ourselves in now. WebSphere was designed to...it \nwas slow to start, but then you, it would sit and  ",
    "start": "584600",
    "end": "595200"
  },
  {
    "text": "run pretty much forever if you left it alone.\nExactly. Forever. And the scale of forever,   I think, is one that sort of doesn't even make \nsense to us now, that it would go and it would  ",
    "start": "595200",
    "end": "605800"
  },
  {
    "text": "not be restarted for six months, a year, \nthat kind of thing. It was designed to be  ",
    "start": "605800",
    "end": "611760"
  },
  {
    "text": "incredibly dynamic because you were changing \nthe engine as the plane was running. And then  ",
    "start": "611760",
    "end": "619080"
  },
  {
    "text": "when we went to WebSphere Liberty, we made it \neven more dynamic in fact, so you could change  ",
    "start": "619080",
    "end": "624400"
  },
  {
    "text": "every single part of it as it was running.\nThere was an interesting thing with WebSphere  ",
    "start": "624400",
    "end": "629640"
  },
  {
    "text": "Liberty actually, because originally WebSphere \nwasn't conceived for the cloud. After all, the  ",
    "start": "629640",
    "end": "635560"
  },
  {
    "text": "cloud didn't exist when it was being \nwritten. And with WebSphere Liberty,   the problem that they started out trying to \nsolve was how do we keep the same programming  ",
    "start": "635560",
    "end": "646720"
  },
  {
    "text": "model as people are used to with WebSphere.\n100% compatibility really, but make it a  ",
    "start": "646720",
    "end": "655680"
  },
  {
    "text": "friendlier experience for developers because \ndevelopers do not start their application server   and leave it running for six months. That's just \nnot how we work. And so, we made it so that it was  ",
    "start": "655680",
    "end": "664399"
  },
  {
    "text": "much quicker and lighter to start and that kind of \nthing. And that was just at around the dawn of the   cloud. Then we realized that catering to those \ndeveloper requirements made it incredibly well  ",
    "start": "664400",
    "end": "675320"
  },
  {
    "text": "suited for the cloud, which was something that, \nwas just a happy coincidence. And I think if you  ",
    "start": "675320",
    "end": "681440"
  },
  {
    "text": "said, \"Did you know that developers are exactly \nlike clouds?\" it would be a nonsensical statement. ",
    "start": "681440",
    "end": "687720"
  },
  {
    "text": "But the requirements end up being similar. And \nwe've sort of seen it a little bit that sort  ",
    "start": "687720",
    "end": "693160"
  },
  {
    "text": "of that same thing. Now I work on the Quarkus \nteam and Quarkus was very much designed ground  ",
    "start": "693160",
    "end": "700720"
  },
  {
    "text": "up to be a cloud native way of running Java. \nAnd so, with the dynamism that you have in  ",
    "start": "700720",
    "end": "711199"
  },
  {
    "text": "more traditional runtimes, you pay a tax for \nthat. But when you're running in a container,  ",
    "start": "711200",
    "end": "717120"
  },
  {
    "text": "you don't need that dynamism. So, it \nmakes no sense to be paying the tax. So,  ",
    "start": "717120",
    "end": "722480"
  },
  {
    "text": "things like reflection are expensive at runtime.\nWhat we've done with Quarkus is we've massively  ",
    "start": "722480",
    "end": "731880"
  },
  {
    "text": "reduced the amount of reflection. We've moved \nmore to be build time optimized. And then that  ",
    "start": "731880",
    "end": "738400"
  },
  {
    "text": "means that at runtime you have a quicker \nstartup, which may or may not be helpful  ",
    "start": "738400",
    "end": "743800"
  },
  {
    "text": "but you have lower memory requirements, \nwhich almost certainly is helpful because   in the cloud memory is money and you have \nfaster throughput, which is always helpful. ",
    "start": "743800",
    "end": "753840"
  },
  {
    "text": "But then as sort of a consequence of that, it goes \nin the other direction because it does more at  ",
    "start": "754520",
    "end": "761440"
  },
  {
    "text": "build time for a developer, that's not necessarily \nideal because we're building all of the time. So,  ",
    "start": "761440",
    "end": "770400"
  },
  {
    "text": "then the question is, okay, so what do we do \nso that you don't have to do all of that build   time optimization for the whole application \nevery time you change a line of code? And so,  ",
    "start": "770400",
    "end": "780360"
  },
  {
    "text": "what they've done is they've built a \ngood live reload experience and a good  ",
    "start": "780360",
    "end": "785399"
  },
  {
    "text": "continuous testing experience so that you \nhave...again, it's that sort of that same  ",
    "start": "785400",
    "end": "791240"
  },
  {
    "text": "combination of an optimized for the cloud, \nbut also this delightful developer experience. ",
    "start": "791240",
    "end": "799880"
  },
  {
    "text": "Then there's sort of two aspects of the developer \nexperience. One is just the liveness and the  ",
    "start": "801280",
    "end": "806760"
  },
  {
    "text": "hotness, but then there's another, again, I think \nslightly unintended consequence, which is if you  ",
    "start": "806760",
    "end": "812440"
  },
  {
    "text": "do more at build time, you understand the context \nin which the application is running much better.  ",
    "start": "812440",
    "end": "819800"
  },
  {
    "text": "This means that a whole bunch of boilerplate that \nwe used to have to write as developers to say,   \"Okay, so this is there and this is there \nand, you know, could you please do that,\"  ",
    "start": "819800",
    "end": "828120"
  },
  {
    "text": "isn't necessary anymore because there's a deeper \noptimization phase at build time. So then it ends  ",
    "start": "828120",
    "end": "834839"
  },
  {
    "text": "up being developed better for developers just \nbecause they have to write less code as well. So, can you talk about a bit more about sort of \nhow that works? Because as you say, you are doing  ",
    "start": "834840",
    "end": "845759"
  },
  {
    "start": "839000",
    "end": "1167000"
  },
  {
    "text": "the...as I understand it, you are effectively \nbuilding, you are using the GraalVM I think,  ",
    "start": "845760",
    "end": "851800"
  },
  {
    "text": "right? So, you are doing sort of Native Images, \nbut I'm presuming you are not doing that when   you are doing your normal development work \nbecause that would be too slow, right? So... ",
    "start": "851800",
    "end": "861120"
  },
  {
    "text": "Native compilation is about... It seems to take \nabout three minutes. Depends on the application,  ",
    "start": "861120",
    "end": "867480"
  },
  {
    "text": "but that's a sort of order of magnitude. But one \nof the things about Quarkus, which is interesting  ",
    "start": "867480",
    "end": "872639"
  },
  {
    "text": "actually, is it can run in two modes. So, it can \nrun as a Native application or it can run on JVM,  ",
    "start": "872640",
    "end": "880280"
  },
  {
    "text": "and Native, I think, is getting a lot of the \nheadlines because the startup times are just  ",
    "start": "880280",
    "end": "885720"
  },
  {
    "text": "dazzling. Like, I benchmarked it and it's \nfaster than an LED light bulb to start up,  ",
    "start": "885720",
    "end": "890600"
  },
  {
    "text": "it's just flat and incredible.\nIt's kind of extraordinary, isn't it?  Yes.\nAbsolutely.  When I first did my Native application I just, \nlike, started it and I stopped it and I started  ",
    "start": "891440",
    "end": "899960"
  },
  {
    "text": "it because it was just so magical. But what we do \nsee, and that's all built on GraalVM. But what we  ",
    "start": "899960",
    "end": "906120"
  },
  {
    "text": "do see with the Native applications, I think the \ngap will shrink, but with the Native applications,  ",
    "start": "906120",
    "end": "911839"
  },
  {
    "text": "the throughput does tend to be lower. So, the \nstartup time is just absurdly fast. The memory  ",
    "start": "911840",
    "end": "918360"
  },
  {
    "text": "is quite small. So, if you're running in a \nconstrained environment or if you're doing   something like serverless or any kind of scale \nto zero, or if you wanna have kind of a cloud  ",
    "start": "918360",
    "end": "926160"
  },
  {
    "text": "bursting pattern, then it makes sense.\nIf you're running an application,   the way you've always run your application, Native \nmaybe isn't the best choice. But the optimizations  ",
    "start": "926160",
    "end": "937400"
  },
  {
    "text": "that the Quarkus team did to make it work well \non Native, it turns out are optimizations for  ",
    "start": "937400",
    "end": "945280"
  },
  {
    "text": "Java as well. So, if you run on JVM, some of \nthose things like doing more at build time,  ",
    "start": "945280",
    "end": "951240"
  },
  {
    "text": "getting rid of reflection I mean, it's faster \non the JVM as well. So, we see even on the JVM,  ",
    "start": "951240",
    "end": "961480"
  },
  {
    "text": "the resource consumption is about half of what an \napplication that wasn't using Quarkus would be,  ",
    "start": "961480",
    "end": "968120"
  },
  {
    "text": "which is pretty incredible.\nThat's extraordinary, isn't it?  Yes. it's just so good. That's sort of \nacross the board. The throughput is higher,  ",
    "start": "968120",
    "end": "978560"
  },
  {
    "text": "not twice as high. I think, again, it \ndepends on what application, but certainly   throughput is significantly higher. Your memory \nconsumption, everything, means that you can run  ",
    "start": "978560",
    "end": "986360"
  },
  {
    "text": "in a much more economical environment.\nI want to pick that up in a second,   but I'm curious about what the sort \nof programming model feels like,  ",
    "start": "986360",
    "end": "996280"
  },
  {
    "text": "how you handle things like sort of dependency \ninjection and that sort of stuff. Because again,   it's quite a change from, you know, the sort of \nJava and J2EE for that old and even sort of early  ",
    "start": "996280",
    "end": "1009720"
  },
  {
    "text": "days of the spring. It's quite a shift in terms \nof the sort of programming model in some ways.",
    "start": "1009720",
    "end": "1014959"
  },
  {
    "text": "Yes and no. What they've done is, in \ngeneral, they've stuck to the standards. So,  ",
    "start": "1014960",
    "end": "1024280"
  },
  {
    "text": "if you're using MicroProfile then your \nMicroProfile application, that's the sort   of the base programming model for Quarkus. So, \nyour MicroProfile application will work fine. If  ",
    "start": "1026440",
    "end": "1038800"
  },
  {
    "text": "you're using Hibernate, for example, the Hibernate \nteam virtually sits next to the Quarkus team. So,  ",
    "start": "1038800",
    "end": "1044959"
  },
  {
    "text": "again, you know, there's a nice integration \nthere. What you can do though is you can do  ",
    "start": "1044960",
    "end": "1050480"
  },
  {
    "text": "less of it. So, things like, yeah, just some \nof the boilerplate that you might have to do  ",
    "start": "1050480",
    "end": "1058280"
  },
  {
    "text": "with Java EE or with MicroProfile, there's \nless of it. We have some libraries that,  ",
    "start": "1058280",
    "end": "1065920"
  },
  {
    "text": "again, build on top of it just to give \nyou that slightly slicker experience. So,  ",
    "start": "1065920",
    "end": "1071080"
  },
  {
    "text": "for example, we've got a library called \nPanache, which builds on top of Hibernate. ",
    "start": "1071080",
    "end": "1076679"
  },
  {
    "text": "It means that quite a lot of the things that \nyou do with Hibernate, you end up having to   do sort of in every application, let me have a \nmethod that gets everything, let me have...and  ",
    "start": "1077360",
    "end": "1086000"
  },
  {
    "text": "it just auto-creates those methods. So, it's \nquite nice. One of the other things, and again,  ",
    "start": "1086000",
    "end": "1093680"
  },
  {
    "text": "injection is core to the programming model. It's \nthe MicroProfile injection and we do it for all  ",
    "start": "1093680",
    "end": "1103400"
  },
  {
    "text": "sorts of things and in quite cool and clever ways.\nSo, for example, if you're using Hibernate in a  ",
    "start": "1103400",
    "end": "1110600"
  },
  {
    "text": "database, in your application properties, you \ncan configure where your application, your  ",
    "start": "1110600",
    "end": "1116559"
  },
  {
    "text": "database lives. But if you don't configure it, \nbecause we understand what's in the application,  ",
    "start": "1116560",
    "end": "1122920"
  },
  {
    "text": "we can look and say, you are using a database \nand yet you do not have a database. That will  ",
    "start": "1122920",
    "end": "1128080"
  },
  {
    "text": "be a problem for you. Let me use Testcontainers \nto magically spin up a database because you're  ",
    "start": "1128080",
    "end": "1134600"
  },
  {
    "text": "using the injection, you don't need to tell me \nabout Testcontainers. You don't need to say,   'Please, could you use Testcontainers to give me a \ndatabase?' We'll just find those injection points,  ",
    "start": "1134600",
    "end": "1143040"
  },
  {
    "text": "put the Testcontainers database in there \nand then it just magically works.\" So,   that's useful for testing, but it's also useful, \nagain, in the Dev Mode. So, it means that you can  ",
    "start": "1143040",
    "end": "1152840"
  },
  {
    "text": "just start going and you haven't done anything \nto define a database and you have a database.  ",
    "start": "1152840",
    "end": "1159159"
  },
  {
    "text": "You don't wanna deploy to production like that. \nBut, you know, it gets you a lot of the way.",
    "start": "1159160",
    "end": "1165160"
  },
  {
    "text": "That's interesting. I was just thinking as well, \nso one of the things I remember reading in the  ",
    "start": "1165160",
    "end": "1172640"
  },
  {
    "start": "1167000",
    "end": "1441000"
  },
  {
    "text": "early days of the GraalVM stuff was, you know, \nyou can't use reflection. There were various  ",
    "start": "1172640",
    "end": "1178720"
  },
  {
    "text": "other things, there were limitations that \ncame along with essentially trying to run  ",
    "start": "1178720",
    "end": "1183840"
  },
  {
    "text": "a virtual machine language natively, which \nis hardly surprising. I haven't followed how  ",
    "start": "1183840",
    "end": "1190679"
  },
  {
    "text": "much that's kind of shifted and evolved with \ntime. But in terms of... I mean, I'm presuming  ",
    "start": "1190680",
    "end": "1196360"
  },
  {
    "text": "the sort of the big... I mean, you mentioned \nHibernate, so I'm presuming the big libraries   have done work to make themselves more GraalVM \ncompatible. But how's that sort of story evolved?  ",
    "start": "1196360",
    "end": "1209120"
  },
  {
    "text": "Because to be honest, I haven't followed it. So...\nSo, it's not my expert area, but the understanding  ",
    "start": "1209120",
    "end": "1216720"
  },
  {
    "text": "that I have is that you do need work. You \nneed to do things like declaring what happens  ",
    "start": "1216720",
    "end": "1226720"
  },
  {
    "text": "by reflection and that kind of thing. What we've \nended up doing for a lot of it is we've put that  ",
    "start": "1226720",
    "end": "1231760"
  },
  {
    "text": "extra stuff in Quarkus. So, a question came around \non one of our internal mailing lists recently to  ",
    "start": "1231760",
    "end": "1239000"
  },
  {
    "text": "sort of say, \"I'd like to do a Natively compiled \napplication and I wanna use these libraries and   could I do just the straight GraalVM?\" And the \nanswer was yes, but it will be an awful lot of  ",
    "start": "1239000",
    "end": "1249799"
  },
  {
    "text": "work and you'll have to chase a lot of bugs and \nif you do it with Quarkus, it will just work. ",
    "start": "1249800",
    "end": "1255200"
  },
  {
    "text": "We've sort of tried to take those extra things \nthat you need to do. Because some of them are  ",
    "start": "1256800",
    "end": "1263280"
  },
  {
    "text": "trivial. Some of them, again, need to be extra \nthings that are done, extra declarations,   but some of them are extra steps that happen in \nthe build phase. So, that's hard to do without  ",
    "start": "1263280",
    "end": "1274880"
  },
  {
    "text": "something a bit external and something that has \nthose injection points in the build phase to say,  ",
    "start": "1274880",
    "end": "1280520"
  },
  {
    "text": "\"Okay, now let me look around and make sure that \neverything's gonna work\". And we have seen that,  ",
    "start": "1280520",
    "end": "1285800"
  },
  {
    "text": "yeah, sometimes when frameworks \ntake those libraries and try and  ",
    "start": "1285800",
    "end": "1291400"
  },
  {
    "text": "put them in GraalVM, it doesn't always work.\nRight. Yes. Yeah. Are there specific kinds  ",
    "start": "1291400",
    "end": "1298080"
  },
  {
    "text": "of sweet spots for Quarkus? Are there specific \nplaces right now where you think that's, you know,  ",
    "start": "1298080",
    "end": "1304799"
  },
  {
    "text": "absolutely the right kind of use case? Where would \nyou recommend people pick it up and choose it over  ",
    "start": "1304800",
    "end": "1312240"
  },
  {
    "text": "one of its competitors or one of the alternatives?\nI mean, to be honest, almost everywhere. So,  ",
    "start": "1312240",
    "end": "1321800"
  },
  {
    "text": "a lot of the conversation about Quarkus has \nbeen because of the Native mode focused on   those serverless applications, that kind of \nthing, and microservices. But we are seeing  ",
    "start": "1321800",
    "end": "1331760"
  },
  {
    "text": "it being used as well for the larger monoliths. \nAt some point, if you have a very large monolith,  ",
    "start": "1331760",
    "end": "1339320"
  },
  {
    "text": "you may end up with some classpath contention and \nconflicting dependencies, and that kind of thing  ",
    "start": "1339320",
    "end": "1344399"
  },
  {
    "text": "if your dependency space becomes too big. And \nthat so far is not the sweet spot for Quarkus  ",
    "start": "1344400",
    "end": "1350040"
  },
  {
    "text": "because it does have a flat class path. But \nassuming you're not at that scale of dependency  ",
    "start": "1350760",
    "end": "1357200"
  },
  {
    "text": "hell for almost everything else, Quarkus works \nwell because it's the Java EE programming model,  ",
    "start": "1357200",
    "end": "1364159"
  },
  {
    "text": "it's the MicroProfile programming model. But \nthe resource consumption is so much smaller. ",
    "start": "1364160",
    "end": "1371760"
  },
  {
    "text": "So, everywhere it will be a benefit. The \nbenefit will probably be multiplied for  ",
    "start": "1372360",
    "end": "1377720"
  },
  {
    "text": "things like microservices. So, going back to that \ndiscussion that we were having at the beginning,  ",
    "start": "1377720",
    "end": "1383520"
  },
  {
    "text": "are we applying these patterns of thinking and are \nthey perhaps creating problems? One of the things   that we're starting to see now is businesses are \ncoming to us and they're saying, \"I've switched  ",
    "start": "1383520",
    "end": "1393679"
  },
  {
    "text": "microservices and my business agility is great, \nbut unfortunately my cloud bill has quadrupled,  ",
    "start": "1393680",
    "end": "1400320"
  },
  {
    "text": "which I wasn't hoping for,\" because when you \nimagine that for each application there's the  ",
    "start": "1400320",
    "end": "1407519"
  },
  {
    "text": "cost of the application and then there's the cost \nof the framework, and then there's the cost of the  ",
    "start": "1407520",
    "end": "1413840"
  },
  {
    "text": "infrastructure, so your control plane and, you \nknow, your nodes and that kind of thing. And if  ",
    "start": "1413840",
    "end": "1419159"
  },
  {
    "text": "you have so many more nodes, then that means that \nyour infrastructure tax is going up and sometimes,  ",
    "start": "1419160",
    "end": "1426840"
  },
  {
    "text": "you know, your memory consumption and that kind of \nthing is much higher. And so, those organizations  ",
    "start": "1426840",
    "end": "1432799"
  },
  {
    "text": "when they switched to Quarkus can then get their \ncloud bills back to a much more acceptable level.",
    "start": "1432800",
    "end": "1440640"
  },
  {
    "start": "1441000",
    "end": "2036000"
  },
  {
    "text": "I know you've also done some work, I \nmean, you sort of touched on this already,   but you've also done some work looking at \neffectively the sort of carbon footprints  ",
    "start": "1442080",
    "end": "1450320"
  },
  {
    "text": "of running Quarkus versus other leading \nframeworks we could name but probably  ",
    "start": "1450320",
    "end": "1455440"
  },
  {
    "text": "shouldn't.\nExactly.  Can you talk a bit about that? I know that's an \narea of interest, but how's that kind of worked  ",
    "start": "1455440",
    "end": "1462960"
  },
  {
    "text": "out? What are you seeing? What are you measuring? \nBecause measuring carbon is in itself quite a... ",
    "start": "1462960",
    "end": "1468720"
  },
  {
    "text": "Quite a challenge.\n...quite a challenge still. I mean,   it's something as an industry we need to get \nbetter at and we're starting to look at. But it's  ",
    "start": "1468720",
    "end": "1474760"
  },
  {
    "text": "an interesting, very difficult area in many ways.\nThere's sort of a side conversation thereof,  ",
    "start": "1474760",
    "end": "1481240"
  },
  {
    "text": "as you say, measuring carbon is hard, it really \nshouldn't be because it's really important. Can   we make this easier? So, some of my colleagues \nare looking at that. But when I joined the Quarkus  ",
    "start": "1481240",
    "end": "1491200"
  },
  {
    "text": "team, we knew it was light. We knew it was really \nfast. We thought intuitively that should translate  ",
    "start": "1491200",
    "end": "1497760"
  },
  {
    "text": "to being greener, but we didn't have any evidence \nfor that. We hadn't done the measurements. And so,   I did sort of a series of measurements. One was \ndoing it by inference. So, if you know what cloud  ",
    "start": "1497760",
    "end": "1510760"
  },
  {
    "text": "instances you're running on, you can work backward \nto an approximate carbon footprint. And that  ",
    "start": "1510760",
    "end": "1515840"
  },
  {
    "text": "was sort of for real-life load over an extended \nperiod. And the other one was in a more controlled  ",
    "start": "1515840",
    "end": "1522960"
  },
  {
    "text": "environment where we had instrumentation in the \nCPU and we could see exactly how much energy was   being used and then translate that to carbon.\nIn both cases what was good is when you do a  ",
    "start": "1522960",
    "end": "1533320"
  },
  {
    "text": "measurement in two different ways, you hope that \nthe results are kind of consistent. That gives you   a sense of confidence. And the results were pretty \nconsistent. In both cases, we saw that the carbon  ",
    "start": "1533320",
    "end": "1541200"
  },
  {
    "text": "footprint with Quarkus was reduced by a factor of \nabout two or three. So, that was nice. But one of  ",
    "start": "1541200",
    "end": "1549840"
  },
  {
    "text": "the things that was interesting and and surprising \nto us was when I first got the results back when  ",
    "start": "1549840",
    "end": "1555799"
  },
  {
    "text": "we compared Native and JVM applications. \nSo, again, we looked at Quarkus on JVM,  ",
    "start": "1555800",
    "end": "1562760"
  },
  {
    "text": "Quarkus Native, more alternative frameworks \non Native, and alternative frameworks on JVM. ",
    "start": "1562760",
    "end": "1571320"
  },
  {
    "text": "Because Native has such tiny resource usage, \nyou would assume that it has the lowest carbon  ",
    "start": "1572960",
    "end": "1578760"
  },
  {
    "text": "footprint. And I think certainly there are \nways that you can run it in which that is the   case. You have it in a highly elastic mode. \nYou scale to zero when it's not being used,  ",
    "start": "1578760",
    "end": "1587840"
  },
  {
    "text": "definitely enables that. But if you just take \nit as I have a steady load and I'm running it,  ",
    "start": "1587840",
    "end": "1593080"
  },
  {
    "text": "the footprint of Native, carbon footprint is \nhigher than the carbon footprint of running  ",
    "start": "1593080",
    "end": "1598120"
  },
  {
    "text": "Quarkus on JVM. And the same for other frameworks.\nIt's because there are a couple of things that  ",
    "start": "1598120",
    "end": "1605280"
  },
  {
    "text": "contribute to the footprint. One is the \nmemory, where it's much better on Native,   but the other one is the throughput. \nSo, you need to handle the same load,  ",
    "start": "1605280",
    "end": "1613800"
  },
  {
    "text": "you need more Native instances. And so, then that \nmeans that overall your carbon footprint ends up  ",
    "start": "1613800",
    "end": "1620280"
  },
  {
    "text": "being a bit higher. Yeah, it's interesting.\nIt's also I think, slightly annoying because  ",
    "start": "1620280",
    "end": "1628600"
  },
  {
    "text": "it was such a counterintuitive result. And that \nmeans that when you're reducing carbon, you know,  ",
    "start": "1628600",
    "end": "1636320"
  },
  {
    "text": "ideally you want it to be that you can just do \nwhat seems to be the intuitively right thing and   get the right outcome. And here we kind of saw, \nyou know, you do need to be a bit more data-driven  ",
    "start": "1636320",
    "end": "1645400"
  },
  {
    "text": "and evidence-based and do the graph to measure \nit because otherwise, I mean, it's not a disaster  ",
    "start": "1645400",
    "end": "1651440"
  },
  {
    "text": "either. If you're running on Quarkus, either way, \nyou're better off. But if you wanted to maximize  ",
    "start": "1651440",
    "end": "1657600"
  },
  {
    "text": "the greenness, you would run Quarkus on JVM.\nYes. Which as you say, it's not what I would've  ",
    "start": "1657600",
    "end": "1664160"
  },
  {
    "text": "thought either. Right? It's sort of...\nNo.  And so, because there's so much of \nthis, if you want to be greener, you,  ",
    "start": "1664160",
    "end": "1669520"
  },
  {
    "text": "like, rewrite and rewrite everything in Rust or \nsomething. There have been some studies done on  ",
    "start": "1669520",
    "end": "1675240"
  },
  {
    "text": "the relative carbon footprint of different \nprogramming languages as you've probably   seen. I'm not, honestly, sure how much weight I \nwould put behind some of those, but you know... ",
    "start": "1675240",
    "end": "1684120"
  },
  {
    "text": "They're micro benchmarks.\nRight. Yes.  However, one interesting thing with \nthat study that I will call out, again,  ",
    "start": "1685080",
    "end": "1691520"
  },
  {
    "text": "it's a bit counterintuitive. Normally we sort of \nhave this mental hierarchy where we imagine that  ",
    "start": "1691520",
    "end": "1696920"
  },
  {
    "text": "the compiled languages are better and the harder \nlanguages are better. Which, you know, we sort of  ",
    "start": "1696920",
    "end": "1704280"
  },
  {
    "text": "see in that result. So, C C++, and Rust were all \nextremely efficient. There wasn't much to choose  ",
    "start": "1704280",
    "end": "1710920"
  },
  {
    "text": "between them. And then we imagine all a language \nlike Go, which is kind of hard and quite compiled,  ",
    "start": "1710920",
    "end": "1717480"
  },
  {
    "text": "that's gonna be better. But actually, Go had a \nhigher carbon footprint than Java and that was  ",
    "start": "1717480",
    "end": "1723600"
  },
  {
    "text": "even before looking at something like Quarkus, \nwhich halves the carbon footprint of Java.  So, it does mean that definitely if you are using \nJava. And overall I think they looked at, like,  ",
    "start": "1723600",
    "end": "1732040"
  },
  {
    "text": "maybe 60 languages and Java was fifth. So, Java, \neven before Quarkus is really... Because it's so  ",
    "start": "1732040",
    "end": "1738160"
  },
  {
    "text": "vast, because it's just been so optimized and the \nGC is optimized, the G is optimized, it means that  ",
    "start": "1738160",
    "end": "1744600"
  },
  {
    "text": "if you're using Java and you wanna keep using \nJava because you like that programming model,   you're in an okay place. You can keep doing that.\nI found that genuinely surprising how high  ",
    "start": "1744600",
    "end": "1757240"
  },
  {
    "text": "it was. I was also kind of amused by \nhow terrible Python turned out to be,   which was also kind of a bit of a... I mean, \nyou kind of figure it, it's not gonna be great,  ",
    "start": "1757240",
    "end": "1764960"
  },
  {
    "text": "but it was sort of startling how bad it was. Given \nthat obviously, we're at a tech conference and  ",
    "start": "1764960",
    "end": "1771520"
  },
  {
    "text": "everyone is talking about machine learning kind \nof in the coffee spaces and whatever because of  ",
    "start": "1771520",
    "end": "1777440"
  },
  {
    "text": "ChatGPT and all of those sorts of things. It's \njust kind of interesting to reflect on how much   particularly data science-type work is done with \nthings like Python and R, I suppose, and that  ",
    "start": "1777440",
    "end": "1788960"
  },
  {
    "text": "kind of thing. And a lot of those languages \nare quite bad from a carbon point of view,  ",
    "start": "1788960",
    "end": "1795080"
  },
  {
    "text": "which is kind of interesting I guess.\nI think the data science workloads,   are not quite as bleak as they seem from those \nmicro benchmarks. Because I think a lot of the  ",
    "start": "1795080",
    "end": "1804440"
  },
  {
    "text": "heavy lifting is outsourced away from the actual \nPython runtime. But still, not all of it is. And  ",
    "start": "1804440",
    "end": "1814679"
  },
  {
    "text": "so, you know, it is worth thinking about it.\nI think the other thing now of course, like,   training a large model is incredibly expensive.\nIncredibly expensive. ",
    "start": "1814680",
    "end": "1820277"
  },
  {
    "text": "So that means that people don't do it that \noften. There are only really three or four   companies that have the kind of resources and \nthe money to do that. And then everyone else  ",
    "start": "1820277",
    "end": "1829320"
  },
  {
    "text": "is building on what they're doing. So, it may \nnot be quite, as you say, it's not quite as  ",
    "start": "1829320",
    "end": "1834440"
  },
  {
    "text": "bleak as we might think it is. Thinking about \nsort of sustainable software more generally,  ",
    "start": "1834440",
    "end": "1839519"
  },
  {
    "text": "are there other things that you think as \ndevelopers we ought to be thinking about when   we're thinking about our kind of environmental \nimpact on the world and sort of thinking about  ",
    "start": "1839520",
    "end": "1849960"
  },
  {
    "text": "demand shaping or all those sorts of areas?\nThere are some really interesting and cool and  ",
    "start": "1849960",
    "end": "1856520"
  },
  {
    "text": "kind of challenging and not yet built technologies \nin this area, which is always exciting because   everybody loves a problem and there are some easy \nno-brainers in this area, which is also good.  ",
    "start": "1856520",
    "end": "1866400"
  },
  {
    "text": "Sort of the first thing to think about is where \nyour workload is running in general. And if it's  ",
    "start": "1867880",
    "end": "1873400"
  },
  {
    "text": "in...not all regions of the world have the same \nelectricity mix. In some, it's dominated by coal.  ",
    "start": "1873400",
    "end": "1880200"
  },
  {
    "text": "In others, for example, the Nordics, it's much \nmore focused on renewable energy. So, in a lot  ",
    "start": "1880200",
    "end": "1886480"
  },
  {
    "text": "of cases, you can move your workload and slash the \ncarbon footprint for no work at all. And often as  ",
    "start": "1886480",
    "end": "1896679"
  },
  {
    "text": "well the hosting costs can be cheaper in an area \nwith clean energy than one with dirty energy. So,  ",
    "start": "1896680",
    "end": "1903040"
  },
  {
    "text": "again, it's kind of why wouldn't you do that?\nSometimes there are latency reasons not to do it.  ",
    "start": "1903040",
    "end": "1909200"
  },
  {
    "text": "There's a site called Electricity Maps and you \ncan look and you can see. In most areas of the  ",
    "start": "1910120",
    "end": "1917640"
  },
  {
    "text": "world except for maybe Asia-Pacific, where with \nthe energy mix overall is a bit more challenging,  ",
    "start": "1917640",
    "end": "1924680"
  },
  {
    "text": "there's something that has acceptable \ndata residency and acceptable latency  ",
    "start": "1924680",
    "end": "1930000"
  },
  {
    "text": "that will be on greener energy. So, \nthat's just the kind of no-brainer.  But then as you say, the demand shaping is \nthe next thing of a lot of renewable energy  ",
    "start": "1930000",
    "end": "1938640"
  },
  {
    "text": "tends to be intermittent. So, I think a lot \nof us think, \"Oh, coal run this overnight,\"  ",
    "start": "1938640",
    "end": "1943720"
  },
  {
    "text": "and that will be greener. But not all of your \nenergy is solar, right? We're starting to see  ",
    "start": "1943720",
    "end": "1953919"
  },
  {
    "text": "how this kind of carbon-based dispatching where \nyou can get the real-time information that says,  ",
    "start": "1953920",
    "end": "1960760"
  },
  {
    "text": "\"Well, the sun isn't shining in Denmark because \nit's Denmark, however, the wind is blowing in  ",
    "start": "1960760",
    "end": "1966960"
  },
  {
    "text": "Scotland because it's Scotland. So, why don't you \nrun it on the wind energy in Scotland?\" Whereas  ",
    "start": "1966960",
    "end": "1973200"
  },
  {
    "text": "tomorrow the sun will be shining in Sweden so, \nthen you can, you know, move your workload there. ",
    "start": "1973200",
    "end": "1979159"
  },
  {
    "text": "As long as you've written your workload in \na modern way where it has that auto-potency  ",
    "start": "1979160",
    "end": "1985000"
  },
  {
    "text": "and where it can be scaled down and up and \nmoved around, then again you get your disaster  ",
    "start": "1985000",
    "end": "1991880"
  },
  {
    "text": "recovery kind of for free because you've \nproved that you can take your workload and  ",
    "start": "1991880",
    "end": "1997760"
  },
  {
    "text": "pop it up in various places and it works, \nwhich is good. The business will thank you   and you're also lowering your carbon footprint.\nThe other thing that's sort of related to that,  ",
    "start": "1997760",
    "end": "2006600"
  },
  {
    "text": "I think, is thinking about do you need all of your \nworkloads to be sort of real-time and that kind of  ",
    "start": "2006600",
    "end": "2012240"
  },
  {
    "text": "thing. And going back to, we used to do a lot of \nstuff in batch when I started in the industry,  ",
    "start": "2012240",
    "end": "2017320"
  },
  {
    "text": "we kind of went away from that because computers \ngot quick and fast and cheap. But maybe you can  ",
    "start": "2017320",
    "end": "2023840"
  },
  {
    "text": "batch something and, as you say, run it somewhere \nelse when the sun is shining or the wind is  ",
    "start": "2023840",
    "end": "2028880"
  },
  {
    "text": "blowing or whatever renewable source you've got, \nbut you don't need that kind of real-time thing,   which is maybe something to factor in.\nYes.",
    "start": "2028880",
    "end": "2037200"
  },
  {
    "start": "2036000",
    "end": "2302000"
  },
  {
    "text": "The other thing that I was sort of interested \nabout, so you spent a lot of your career one   way or another working with Java. So, \nwhat is it about Java itself that you  ",
    "start": "2037200",
    "end": "2045560"
  },
  {
    "text": "like? Why are you sort of drawn to it \nas a language and an infrastructure? ",
    "start": "2045560",
    "end": "2051320"
  },
  {
    "text": "I mean, language is such an interesting question \nbecause I've worked with Java for so long,  ",
    "start": "2051320",
    "end": "2056360"
  },
  {
    "text": "I speak Java. And I was quite surprised a while \nago when I was working with people who were coming  ",
    "start": "2056360",
    "end": "2062879"
  },
  {
    "text": "from JavaScript and I was watching them trying to \nprogram Java. I was pair programming with them and   they were stumbling. And I was thinking, \"Why \nis this not obvious to you?\" And so, similarly,  ",
    "start": "2062880",
    "end": "2074440"
  },
  {
    "text": "you know, when I go to some other languages, \nsometimes I find it hard and the people who   are more accustomed to that language say \nit's easy. So, part of, if I'm honest,  ",
    "start": "2074440",
    "end": "2086560"
  },
  {
    "text": "part of the appeal of Java for me is that kind \nof incumbency and inertia. But on the other hand,  ",
    "start": "2086560",
    "end": "2094200"
  },
  {
    "text": "when you look at the Java ecosystem as a whole, \nthere's so much to love about the language. ",
    "start": "2094200",
    "end": "2102000"
  },
  {
    "text": "I think it has a nice combination of stability. \nSo, I was watching someone a while ago, they did  ",
    "start": "2102000",
    "end": "2109240"
  },
  {
    "text": "a demo and they took code that was from 2008 and \nthey ran it. Not only was it... It wasn't \"Hello,  ",
    "start": "2109240",
    "end": "2117280"
  },
  {
    "text": "World!\", it was using their product and using \nthe library and it still worked. And there are   not many ecosystems where you could take code \nthat ancient, that was actually written before  ",
    "start": "2117280",
    "end": "2129160"
  },
  {
    "text": "some Java programmers were born realistically, \nand it just worked. And yet at the same time,  ",
    "start": "2129160",
    "end": "2134839"
  },
  {
    "text": "the Java ecosystem is not stagnant. So, you \nhave the emphasis on backwards compatibility,   but also the emphasis on forward progression.\nSo, if you look at GraalVM, for example, that's  ",
    "start": "2134840",
    "end": "2145520"
  },
  {
    "text": "just such a huge change and it's so exciting. \nAnd then if you look at something... And that's,  ",
    "start": "2145520",
    "end": "2152080"
  },
  {
    "text": "you know, sort of in the JVM or, you know, \nit now is. But then if you look at something  ",
    "start": "2152080",
    "end": "2158560"
  },
  {
    "text": "like Quarkus in the sort of, you know, the \necosystem that's built up around Java as well,   you get all of these incredibly exciting cool \nthings and I think that's exactly what you want,  ",
    "start": "2158560",
    "end": "2168640"
  },
  {
    "text": "isn't it, of type safety to save you from \nyourself and stability to save you from the  ",
    "start": "2168640",
    "end": "2177279"
  },
  {
    "text": "past or the future depending which way you're \ntrying to run it, and yet forward progression  ",
    "start": "2177280",
    "end": "2182560"
  },
  {
    "text": "so that you still get the new shinies and it \nstill just keeps improving. And you still get   that little endorphin rush as well. If you go to a \nnew Java version, you're like, \"Oh, this is cool.\"",
    "start": "2182560",
    "end": "2191240"
  },
  {
    "text": "I think I would add as well, that Java has a \nparticular quality about the way people write  ",
    "start": "2192120",
    "end": "2197720"
  },
  {
    "text": "Java code. Like, everyone's Java code looks very \nsimilar, which means you can pick someone else's  ",
    "start": "2197720",
    "end": "2203480"
  },
  {
    "text": "code up and follow it and make sense of it in a \nway that is not, I think, true of all languages.  ",
    "start": "2203480",
    "end": "2209480"
  },
  {
    "text": "I'm not quite sure what it is about. I think \nsome of that is probably when people talk about  ",
    "start": "2209480",
    "end": "2215880"
  },
  {
    "text": "sort of the basic verbosity and the language and \nwhatever, it's sort of slightly related to that.   I think that there isn't a lot of sort of magical, \nthe sort of meta template programming type stuff  ",
    "start": "2215880",
    "end": "2228960"
  },
  {
    "text": "from C++ or Beast or any of those things. You're \nlike, \"I've got no idea what this does anymore.\"   Java was, like, a very easy language to follow.\nThere's not the technical capability and there's  ",
    "start": "2228960",
    "end": "2240440"
  },
  {
    "text": "not the culture of saying, \"I could write \nthis in 10 lines so it's understandable.   Or I could write it in six characters to \nshow that I'm a rock star.\" And, you know,  ",
    "start": "2240440",
    "end": "2249120"
  },
  {
    "text": "you just don't get that in Java.\nI think that's interesting too. So,   in terms of what you are working on at the \nmoment and what you are doing at the moment,  ",
    "start": "2249120",
    "end": "2257200"
  },
  {
    "text": "what's kind of exciting to you that you're doing? \nWhat's sort of motivating you at the moment?  So, a lot of what I'm looking at now is that \nsustainability, and looking at Quarkus and  ",
    "start": "2257200",
    "end": "2268640"
  },
  {
    "text": "sustainability, and looking at sustainability \nin more general. Another thing that I'm looking   at again is going back to the microservices and \nhow can we deploy microservices with confidence.  ",
    "start": "2268640",
    "end": "2278560"
  },
  {
    "text": "Because if we can't deploy microservices \nwith confidence, what is the even point of   microservices? And I think contract testing is a \nhuge part of that. And contract testing isn't very  ",
    "start": "2278560",
    "end": "2288680"
  },
  {
    "text": "widely used. And so, I trying to figure out, well, \nwhy isn't it widely used? What are the barriers  ",
    "start": "2288680",
    "end": "2293720"
  },
  {
    "text": "to it? This is partly just talking about it, but I \nthink it's also more fundamental why aren't we all  ",
    "start": "2293720",
    "end": "2299240"
  },
  {
    "text": "contract testing? What do we have to change?\nGreat. Well, thank you so much. Been   lovely to chat with you.\nYeah, my pleasure. Thank you.",
    "start": "2299240",
    "end": "2306520"
  }
]