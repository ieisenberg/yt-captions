[
  {
    "start": "0",
    "end": "248000"
  },
  {
    "text": "[Music]",
    "start": "960",
    "end": "8889"
  },
  {
    "text": "here these are the rules all right so and you're thinking to yourself Eric rules you know who are you to make rules",
    "start": "13880",
    "end": "19680"
  },
  {
    "text": "well I'm the guy with now the mic right so um but the first rule is this this is",
    "start": "19680",
    "end": "25920"
  },
  {
    "text": "any number I want it to be okay now you may look at me and and I tell stories a",
    "start": "25920",
    "end": "31920"
  },
  {
    "text": "lot of times we go on and say yeah I need a table for seven and they put me by myself at the bar so because this",
    "start": "31920",
    "end": "38879"
  },
  {
    "text": "isn't seven but I do this a lot right so you know 7 252 I'm the only person that",
    "start": "38879",
    "end": "44520"
  },
  {
    "text": "can actually show 345 billion on one hand okay so this is any number I want",
    "start": "44520",
    "end": "50239"
  },
  {
    "text": "it to be these are quotes not apostrophes okay and I know that right",
    "start": "50239",
    "end": "57199"
  },
  {
    "text": "because this looks better than this if I do this you think I'm doing a bunny right it's not a bunny unless it is it's",
    "start": "57199",
    "end": "64559"
  },
  {
    "text": "all contextual okay so you have to figure it out and finally these are thumbs right and so I do make a lot of",
    "start": "64559",
    "end": "70200"
  },
  {
    "text": "one fingure jokes it sounds like is Richie is my sound on okay all right okay I'm gonna stop yelling then because",
    "start": "70200",
    "end": "75400"
  },
  {
    "text": "I feel like I'm yelling uh I do make a lot of one finger jokes I did not wake up this way I did wake up this way but",
    "start": "75400",
    "end": "82119"
  },
  {
    "text": "not for the first time this morning I'm very comfortable making jokes about that however if it makes you uncomfortable",
    "start": "82119",
    "end": "90360"
  },
  {
    "text": "I am also comfortable with that so I'm going to be good I appreciate that you care about that so all right well looks",
    "start": "90360",
    "end": "97399"
  },
  {
    "text": "like we have something up and going here so that's good and my remote's working thumbs up right there good job thank you",
    "start": "97399",
    "end": "104479"
  },
  {
    "text": "to the crew you know these things happen right these things happen you kind of have to",
    "start": "104479",
    "end": "110680"
  },
  {
    "text": "deal with it so today we're going to be talking about building what are we talking about building distributed",
    "start": "110680",
    "end": "116240"
  },
  {
    "text": "applications with event driven architecture anybody working with event driven architecture now okay all righty",
    "start": "116240",
    "end": "122920"
  },
  {
    "text": "so we we call it Eda let me get a drink real quick here if if you know me does anybody know what's in this that's a",
    "start": "122920",
    "end": "129360"
  },
  {
    "text": "really loaded question it's not like it's not alcoholic it's this is Diet Dr Pepper I drink a lot of it so if you",
    "start": "129360",
    "end": "135920"
  },
  {
    "text": "know me this is what it is now I don't have my usual notes up",
    "start": "135920",
    "end": "141400"
  },
  {
    "text": "here so you may see me look at the screen like what am I talking about so we're going to dig in a little bit today",
    "start": "141400",
    "end": "146599"
  },
  {
    "text": "and talk about what does it look like to be to build distributed applications now I am a principal developer Advocate from",
    "start": "146599",
    "end": "153920"
  },
  {
    "text": "for serverless 4 AWS so I'm going to be talking about serverless from AWS okay",
    "start": "153920",
    "end": "159480"
  },
  {
    "text": "sometimes we go well it seems like all you talk about is AWS uhhuh because that's who I work for and that's what I",
    "start": "159480",
    "end": "165319"
  },
  {
    "text": "build on these are Cloud native services that that are specific to AWS and so I'm",
    "start": "165319",
    "end": "170680"
  },
  {
    "text": "going to be talking about that so if you go if you want to run now go ahead that's okay I just want you to have a you know full disclosure of what I'm",
    "start": "170680",
    "end": "177040"
  },
  {
    "text": "going to be talking about but I'm going to talk about how we approach approach some things uh how we help you approach",
    "start": "177040",
    "end": "183000"
  },
  {
    "text": "distributed applications and how we ourselves approach it all right so let's let's jump in here so uh we already",
    "start": "183000",
    "end": "189599"
  },
  {
    "text": "talked a bit about who I am but I'll give you a little more uh I like you said I'm a principal developer Advocate I've been doing Solutions architect for",
    "start": "189599",
    "end": "196120"
  },
  {
    "text": "10 years developer for almost 30 years I'm that old so uh yeah you have the rules so 30 years I am a father of five",
    "start": "196120",
    "end": "203920"
  },
  {
    "text": "a husband of one my house is crazy my wife is a superhero obviously because",
    "start": "203920",
    "end": "209080"
  },
  {
    "text": "I'm here with you you you know and she's with you know five kids actually three of my kids are out of the house I'm I'm",
    "start": "209080",
    "end": "215480"
  },
  {
    "text": "that old and they're old so uh I am a drummer that used to say musician as you",
    "start": "215480",
    "end": "220599"
  },
  {
    "text": "can see that but uh people are like really musician drummer so turns out",
    "start": "220599",
    "end": "226319"
  },
  {
    "text": "here here's the truth turns out I am a really I'm I'm a phenomenal drummer for",
    "start": "226319",
    "end": "233200"
  },
  {
    "text": "one finger but I'm fairly average past that and nobody was going to pay me to play drums so that's why I'm doing this",
    "start": "233200",
    "end": "239239"
  },
  {
    "text": "instead so uh but I do love to play drums I'm not great at it I still play on a regular basis weekends my church",
    "start": "239239",
    "end": "245599"
  },
  {
    "text": "that kind of thing so but that's not what we're here to talk about so today's agenda we're going to talk about some",
    "start": "245599",
    "end": "251159"
  },
  {
    "start": "248000",
    "end": "291000"
  },
  {
    "text": "Enterprise Integration patterns that we see in the wild right things that we go",
    "start": "251159",
    "end": "257120"
  },
  {
    "text": "could we do better we could probably do that a little better especially when we're building distributed systems",
    "start": "257120",
    "end": "262479"
  },
  {
    "text": "decisions that we can make in ways that we can make things a little better for we're going to talk about event driven architecture and we're going to talk",
    "start": "262479",
    "end": "268759"
  },
  {
    "text": "about item potency who knows what item potency is all right well you're doing it when we get to that section I want",
    "start": "268759",
    "end": "274479"
  },
  {
    "text": "you to come up here and explain it because I can't it's hard so no we're going to talk about item potency what does it mean to be item potent right um",
    "start": "274479",
    "end": "282039"
  },
  {
    "text": "so and and and it's and it's the struggle is real I mean in development alone and then when you get into distributed apps the struggle is real so",
    "start": "282039",
    "end": "288520"
  },
  {
    "text": "we're going to talk about how AWS kind of approaches that so let's get into some of the integration patterns and",
    "start": "288520",
    "end": "294400"
  },
  {
    "start": "291000",
    "end": "482000"
  },
  {
    "text": "when we talk about coupling uh and integration integration is kind of this magic word right right and coupling is a",
    "start": "294400",
    "end": "300919"
  },
  {
    "text": "measure of independent variability between connected systems right so we talk about one system connected to",
    "start": "300919",
    "end": "307199"
  },
  {
    "text": "another and you can see the coupling has a cost both at design and runtime uh and",
    "start": "307199",
    "end": "313000"
  },
  {
    "text": "and so as you're building this in when you look at coupling systems especially distributed systems there's a lot of",
    "start": "313000",
    "end": "319840"
  },
  {
    "text": "evaluation that has to happen as as you're looking at this coupling isn't binary and coupling isn't",
    "start": "319840",
    "end": "325759"
  },
  {
    "text": "one-dimensional all right so again it's this magic word and and I love this when you think about the many facets of",
    "start": "325759",
    "end": "332039"
  },
  {
    "text": "coupling we're sitting down making this list there's some things in here I wouldn't have thought about right so if",
    "start": "332039",
    "end": "338560"
  },
  {
    "text": "you're looking at this list behind me and you think W now come on technology dependency Java versus C++ sure sure",
    "start": "338560",
    "end": "346280"
  },
  {
    "text": "that's a coupling that's a dependency that's a requirement we only build this application in Java well in the reality",
    "start": "346280",
    "end": "352560"
  },
  {
    "text": "when we build applications in serverless and we're using Lambda functions does anybody know my shirt says Lambda by the way have yall figured that out okay my",
    "start": "352560",
    "end": "360440"
  },
  {
    "text": "girls are like sheep du that makes no sense so anyway uh you think about uh IP",
    "start": "360440",
    "end": "368560"
  },
  {
    "text": "address location dependency there's all kinds of dependencies we build it in let me let me finish my thought from earlier",
    "start": "368560",
    "end": "373840"
  },
  {
    "text": "when you build with Lambda Services what we're seeing is a lot of people saying you know what this part of our application is going to be built in",
    "start": "373840",
    "end": "380120"
  },
  {
    "text": "Python because python does this well data whatever this part's going to be built in Java and we can do that because",
    "start": "380120",
    "end": "387919"
  },
  {
    "text": "we separate that con we separate that coupling and requirement you know so that's just one example of where we",
    "start": "387919",
    "end": "394400"
  },
  {
    "text": "start seeing that reduced and we can we can use the right tool right job and",
    "start": "394400",
    "end": "399680"
  },
  {
    "text": "you'll hear me say that a lot I really believe in the right tool for the right job excuse",
    "start": "399680",
    "end": "406240"
  },
  {
    "text": "me quote by Gregor hope hop I still haven't figured out how to say his name right if you know you could tell me Josh",
    "start": "406240",
    "end": "412360"
  },
  {
    "text": "who's one of my colleagues back here he's going I don't know either so uh so anyway he says the appropriate level of",
    "start": "412360",
    "end": "417680"
  },
  {
    "text": "coupling depends on the level of control you have over the end",
    "start": "417680",
    "end": "422800"
  },
  {
    "text": "points this is an interesting statement in the idea of when you're setting this up if I know that I control a and I",
    "start": "422800",
    "end": "430520"
  },
  {
    "text": "control b and a needs B but I control them both then we're probably okay",
    "start": "430520",
    "end": "436680"
  },
  {
    "text": "because I can build in that dependency but if I have no control over B then I am at the mercy of whoever is in control",
    "start": "436680",
    "end": "444199"
  },
  {
    "text": "in that so when you think about I'm coupling these together do I really want",
    "start": "444199",
    "end": "449400"
  },
  {
    "text": "to do that is it someone I can trust or am I building in a way where if that goes down I can degrade gracefully I can",
    "start": "449400",
    "end": "457879"
  },
  {
    "text": "be okay my app isn't going to fall on its face if their app falls on its face and we see this a lot in the wild we see",
    "start": "457879",
    "end": "464840"
  },
  {
    "text": "we're using a mapping service from somewhere we're using a payment service from somewhere else and if they shut",
    "start": "464840",
    "end": "471240"
  },
  {
    "text": "down we shut down and when we shut down we stop making money right and so this",
    "start": "471240",
    "end": "477759"
  },
  {
    "text": "is important so we think about what are the relian and how do they look so I want to get into and then",
    "start": "477759",
    "end": "484440"
  },
  {
    "start": "482000",
    "end": "625000"
  },
  {
    "text": "we're going to get into some actual patterns right these are some patterns that we see and some of these may be you",
    "start": "484440",
    "end": "489720"
  },
  {
    "text": "be like er I understand this and some you be like oh I hadn't thought about this so kind of all levels but let's",
    "start": "489720",
    "end": "494840"
  },
  {
    "text": "jump in so the first thing we have is a synchronous request response model and",
    "start": "494840",
    "end": "500039"
  },
  {
    "text": "if you think about how synchronous works this is the sometimes it's called a blocking model I feel like I have to get out of the way of the screen I forget",
    "start": "500039",
    "end": "506000"
  },
  {
    "text": "it's on both sides so um this is this sometimes called a blocking model but the idea here is you send you wait you",
    "start": "506000",
    "end": "514039"
  },
  {
    "text": "get a response the entire transaction is done synchronously and and there that's",
    "start": "514039",
    "end": "519919"
  },
  {
    "text": "the end of it and there's some advantages to this it's low latency number one it's simple number two and it",
    "start": "519919",
    "end": "526320"
  },
  {
    "text": "fails fast I like this one because it's like I broke it now I'm GNA tell you",
    "start": "526320",
    "end": "532000"
  },
  {
    "text": "right now you're going to hear me say it's probably a little later too code is a liability even more so er Johnson's code",
    "start": "532000",
    "end": "541000"
  },
  {
    "text": "is a liability okay you don't want to I'm an architect and a",
    "start": "541000",
    "end": "546240"
  },
  {
    "text": "drummer I'm a better drummer than an architect right but I'm an architect if you're hiring me as a",
    "start": "546240",
    "end": "553360"
  },
  {
    "text": "developer you're pretty desperate okay I can't even spell PHP right there it is",
    "start": "553360",
    "end": "558839"
  },
  {
    "text": "so U but that there's this idea of the synchronous and it's all relying on code",
    "start": "558839",
    "end": "564320"
  },
  {
    "text": "and we do it in our code but we get this idea of failing fast there's disadvantages",
    "start": "564320",
    "end": "570240"
  },
  {
    "text": "okay we already kind of talked about it my receiver fails my sender done okay",
    "start": "570240",
    "end": "576440"
  },
  {
    "text": "we're not doing anything until we fix the receiver right so you have these",
    "start": "576440",
    "end": "581839"
  },
  {
    "text": "disadvantages the other thing is you have Receiver throttled right so you get this idea of okay yeah we built this",
    "start": "581839",
    "end": "588079"
  },
  {
    "text": "system and it's great and it's chugging along when we get you know three requests per second how",
    "start": "588079",
    "end": "594560"
  },
  {
    "text": "many okay good there's always someone new who wasn't here for the rules like that's a one",
    "start": "594560",
    "end": "599880"
  },
  {
    "text": "these people can't do math three I can get to four if I take my shoes off but it gets weird for everybody so just so",
    "start": "599880",
    "end": "606760"
  },
  {
    "text": "you know I'm not bragging but I am so um so as you start building up and you're",
    "start": "606760",
    "end": "612360"
  },
  {
    "text": "no longer three per second and you're 300 or 3,000 per second your single",
    "start": "612360",
    "end": "617800"
  },
  {
    "text": "sender is going whoa I can't handle this I'm shutting down so it becomes a major problem you get this receiver",
    "start": "617800",
    "end": "625200"
  },
  {
    "start": "625000",
    "end": "1002000"
  },
  {
    "text": "throttled so we look at another way we look at this is what we call asynchronous are point-to-point model",
    "start": "625200",
    "end": "631040"
  },
  {
    "text": "and this changes that pattern now it's not going to apply to 100% but I I",
    "start": "631040",
    "end": "637279"
  },
  {
    "text": "promise you and and this is I'm going to pick a random number out of the air but",
    "start": "637279",
    "end": "643200"
  },
  {
    "text": "most processes there's a word sometimes they pay me to speak at Amazon and I just forget words but most processes",
    "start": "643200",
    "end": "650519"
  },
  {
    "text": "that were running synchronously or a lot of them can be converted to asynchronous one of the things we get we get a",
    "start": "650519",
    "end": "655800"
  },
  {
    "text": "question all the time is how come your Lambda functions only run for 15 minutes right and they go we we have a process",
    "start": "655800",
    "end": "662680"
  },
  {
    "text": "that's running longer than 15 minutes and we we it just can't be changed it's it's impossible to change it I push back",
    "start": "662680",
    "end": "668920"
  },
  {
    "text": "on that usually and there are some processes in the world that that are that way but a lot of times you push back and go really really really really",
    "start": "668920",
    "end": "676120"
  },
  {
    "text": "have we thought about this have we thought about starting the process and then waiting and that's what this looks",
    "start": "676120",
    "end": "682160"
  },
  {
    "text": "like is an asynchronous are queuing all right so now we have our sender receiver but we' put this Q in the middle of it",
    "start": "682160",
    "end": "689360"
  },
  {
    "text": "right Q can look like a lot a lot of different things you know rabbit m q it can look it can look you sqs obviously",
    "start": "689360",
    "end": "695440"
  },
  {
    "text": "different things you can do but the idea here is now I no longer have a sender",
    "start": "695440",
    "end": "701000"
  },
  {
    "text": "talking directly to a receiver so my advantage is it decreases temporal",
    "start": "701000",
    "end": "706320"
  },
  {
    "text": "coupling now I said that with a lot of emphasis because I don't know what that means but no temporal coupling says look",
    "start": "706320",
    "end": "714560"
  },
  {
    "text": "you this idea of n down the the the uh the receiver goes down sender can't send",
    "start": "714560",
    "end": "720600"
  },
  {
    "text": "anymore it decreases that it decreases or resilient to receive failure right so",
    "start": "720600",
    "end": "726120"
  },
  {
    "text": "if the failure goes down so let's explain that for a minute if the fail if the uh receiver goes down then my sender",
    "start": "726120",
    "end": "734600"
  },
  {
    "text": "doesn't care doesn't know my Senter is just going to keep chucking stuff into the queue right just I'm just I'm done",
    "start": "734600",
    "end": "741560"
  },
  {
    "text": "I'm done I'm done I throw it I move on I throw it I move on I'm not waiting for an answer I'm just waiting from an for",
    "start": "741560",
    "end": "746959"
  },
  {
    "text": "an acknowledgement from the Que and then these pile up here until the receiver's back up and running someone's gone in",
    "start": "746959",
    "end": "753519"
  },
  {
    "text": "and fixed Eric Johnson's code okay and then the rece the queue can just start",
    "start": "753519",
    "end": "759079"
  },
  {
    "text": "putting those out again and the receiver will catch up now there may be a latency there may be some delay going on",
    "start": "759079",
    "end": "766000"
  },
  {
    "text": "but it's not a loss of data you think of your customers for a moment one",
    "start": "766000",
    "end": "771399"
  },
  {
    "text": "customers when they click Send and the ball spins for loading loading loading",
    "start": "771399",
    "end": "776480"
  },
  {
    "text": "how many of them are on immediately this is broken I'm gone right because they don't get an immediate acknowledgement",
    "start": "776480",
    "end": "782880"
  },
  {
    "text": "right and so that's one of the things with this is with the Q idea you get an immediate acknowledgement it doesn't",
    "start": "782880",
    "end": "788000"
  },
  {
    "text": "have your answer but it does say hey we got your request so we're working on it",
    "start": "788000",
    "end": "793279"
  },
  {
    "text": "and we'll let you know when it's done so there's a difference there because your customer goes okay I'm gonna go ahead",
    "start": "793279",
    "end": "798519"
  },
  {
    "text": "and play Tetris I'm really dating myself now right still a cool game I'm gonna go and play that and then it comes back but",
    "start": "798519",
    "end": "804399"
  },
  {
    "text": "I don't I can I can continue to do stuff all right now another Advantage is in",
    "start": "804399",
    "end": "810639"
  },
  {
    "text": "this you can use a dead letter Q okay so you get this idea if anybody ever heard of a dead letter Q all right good most",
    "start": "810639",
    "end": "816480"
  },
  {
    "text": "of you why why are you in here you're all smarter than me already you know this stuff so the dead Q idea is hey",
    "start": "816480",
    "end": "822720"
  },
  {
    "text": "I've got this CED I've written some retry stuff and it's too long the receiver is not fixed I'm going to drop",
    "start": "822720",
    "end": "829440"
  },
  {
    "text": "that off again I haven't lost your data this is critical when you're doing like",
    "start": "829440",
    "end": "834759"
  },
  {
    "text": "and I always pull this example when you're doing Payment Processing I'm going to do pay pay processing and",
    "start": "834759",
    "end": "840320"
  },
  {
    "text": "there's nothing more wonderful than it crashing losing all the data and going",
    "start": "840320",
    "end": "846720"
  },
  {
    "text": "back to the customer going hey all right here's the deal we're reliable but we lost your credit card",
    "start": "846720",
    "end": "853800"
  },
  {
    "text": "number go ahead and give us a second time we we think we've got it okay we're",
    "start": "853800",
    "end": "859120"
  },
  {
    "text": "going to give it another shot and see how that works out right and your customers's like all right I'll give you two credit card numbers because you",
    "start": "859120",
    "end": "865519"
  },
  {
    "text": "really sound like you're rocking it that's not how it happens right so instead of this what we've got we're",
    "start": "865519",
    "end": "870800"
  },
  {
    "text": "probably not storing a credit card number because we don't do that because you know PCI and all that stuff but we're storing tokens stuff like that or",
    "start": "870800",
    "end": "876720"
  },
  {
    "text": "or or it's in some type of of way that we can get it back so that pops up here",
    "start": "876720",
    "end": "881839"
  },
  {
    "text": "then we can process we can process this dead letter CU and say we still got it we're still you know we didn't lose that",
    "start": "881839",
    "end": "887880"
  },
  {
    "text": "data there's a lot of different things orders different things like that okay so losing",
    "start": "887880",
    "end": "893240"
  },
  {
    "text": "data latency is better than losing data okay I'm telling you right now latency",
    "start": "893240",
    "end": "898560"
  },
  {
    "text": "is isn't great we don't love latency but it's better than losing data all right only one receiver can",
    "start": "898560",
    "end": "905680"
  },
  {
    "text": "process each message when you have this the way our cues work at sqs is when you actually block a queue then the other",
    "start": "905680",
    "end": "911320"
  },
  {
    "text": "one could process it so we we that's how we deal with that all right and I'm going to pick it up just a little bit because we lost some time in the",
    "start": "911320",
    "end": "916880"
  },
  {
    "text": "beginning so I'm going to I'm only going to say every third word so here we go you ready all right uh so in this idea",
    "start": "916880",
    "end": "923480"
  },
  {
    "text": "here when we're sing things through now there are a couple of disadvantages response correlation where's it coming from uh backlog recovery time we crash",
    "start": "923480",
    "end": "930399"
  },
  {
    "text": "out we got to we got to catch up uh and then fairness of multi-tenant systems if I'm spreading this out how am I using",
    "start": "930399",
    "end": "936440"
  },
  {
    "text": "how am I use this AC cross multi-end system so there's a couple things uh to think about when you're building that",
    "start": "936440",
    "end": "942440"
  },
  {
    "text": "out now at AWS uh we have a service called Amazon sqs uh and you can see",
    "start": "942440",
    "end": "949600"
  },
  {
    "text": "there you know and this is while I'm going to talk about AWS the principle stands if you're in Google you can use",
    "start": "949600",
    "end": "955959"
  },
  {
    "text": "subub there if you're in Azure you can use use that they they also have a queing system but the principle stands",
    "start": "955959",
    "end": "961920"
  },
  {
    "text": "or or you can even use mq like we have a managed mq or you can use rabbit mq get",
    "start": "961920",
    "end": "967120"
  },
  {
    "text": "a queue in place right try to remove these couplings that you don't need by",
    "start": "967120",
    "end": "972839"
  },
  {
    "text": "dropping that queue in that says I'm you know I'm safe I'm running this is where the data is saved and into that queue",
    "start": "972839",
    "end": "979440"
  },
  {
    "text": "you build out you there's a redundancy in it and there a lot of this in a manage services what we do in AWS is we",
    "start": "979440",
    "end": "985120"
  },
  {
    "text": "build that into sqs I love it on our Docs our docs tell you that the amount",
    "start": "985120",
    "end": "990360"
  },
  {
    "text": "of capacity that we can handle is virtually unlimited we don't even put a",
    "start": "990360",
    "end": "995480"
  },
  {
    "text": "number there it's like we don't know it just it just keeps going right it's fast and it handles a lot of",
    "start": "995480",
    "end": "1001319"
  },
  {
    "text": "data all right so another one we have another uh pattern to to go around the",
    "start": "1001319",
    "end": "1007040"
  },
  {
    "start": "1002000",
    "end": "1132000"
  },
  {
    "text": "synchronous idea is what we call the point-to-point model but using a",
    "start": "1007040",
    "end": "1012600"
  },
  {
    "text": "router all right so with this if you think about this this idea and we do this a lot how many of yall are",
    "start": "1014800",
    "end": "1021920"
  },
  {
    "text": "developers okay so good the entire room we most of the room okay I know you all right developers how many have sat down",
    "start": "1021920",
    "end": "1028600"
  },
  {
    "text": "and said I'm going to make the next amazing authentication system we do",
    "start": "1028600",
    "end": "1033678"
  },
  {
    "text": "every yeah y s good I'm glad to see that s your head no but the reality is as developers we like to do everything in",
    "start": "1033679",
    "end": "1040678"
  },
  {
    "text": "code because our code is better right okay we're we're together here Eric",
    "start": "1040679",
    "end": "1046360"
  },
  {
    "text": "Johnson's code isn't better than anybody's but developers tend to do that I can do",
    "start": "1046360",
    "end": "1051919"
  },
  {
    "text": "this better so we tend to do so we write these systems where we say you know what I'm going to make a system where I'm",
    "start": "1051919",
    "end": "1058240"
  },
  {
    "text": "going to Route things and the sender is going to have the logic right so we're going to write this logic in that says",
    "start": "1058240",
    "end": "1064440"
  },
  {
    "text": "hug go you okay you that way okay you that way okay you that way and this works okay I hope you're",
    "start": "1064440",
    "end": "1072280"
  },
  {
    "text": "hearing my hesitation of my voice and massive shaking of the head here this works but is it the best way to handle",
    "start": "1072280",
    "end": "1079360"
  },
  {
    "text": "this because what happens when uh couple disadvantages first of all you get increased location coupling so we know",
    "start": "1079360",
    "end": "1086600"
  },
  {
    "text": "we can only send of these so there's some coupling there sender maintains routing logic this is the big one for me",
    "start": "1086600",
    "end": "1092280"
  },
  {
    "text": "sender maintains a routing logic and that has to be changed and deployed and and and if I update that I have to",
    "start": "1092280",
    "end": "1097799"
  },
  {
    "text": "deploy it again I have to update the sender especially if these are in clients and like iot devices things like that that becomes very complex",
    "start": "1097799",
    "end": "1105360"
  },
  {
    "text": "right so then you get uh more information or you know more complexity",
    "start": "1105360",
    "end": "1111480"
  },
  {
    "text": "right so you're adding complexity to this so then it's like oh okay so we have to write it in and your sender",
    "start": "1111480",
    "end": "1117760"
  },
  {
    "text": "becomes a long list of if then or switches or logical reads you know",
    "start": "1117760",
    "end": "1123159"
  },
  {
    "text": "things like that where you're you just have hundreds and hundreds of lines of code for no reason right so what we",
    "start": "1123159",
    "end": "1132799"
  },
  {
    "start": "1132000",
    "end": "1331000"
  },
  {
    "text": "propose or what we really encourage folks to do and this is what we do at AWS is we talk about building",
    "start": "1132799",
    "end": "1138360"
  },
  {
    "text": "asynchronous message router models using a bus all right and I'm not talking a school bus although that would be cool",
    "start": "1138360",
    "end": "1145360"
  },
  {
    "text": "all right so here's how we we look at that if we put a bus in the middle of all this all the cinder has to know",
    "start": "1145360",
    "end": "1152480"
  },
  {
    "text": "about is the bus and he doesn't need any logic around he doesn't need to know",
    "start": "1152480",
    "end": "1157760"
  },
  {
    "text": "where anything's going to go he just kicks events into the bus here they are right and the event bus has the logic oh",
    "start": "1157760",
    "end": "1165159"
  },
  {
    "text": "that's really bad color this says reduces location coupling if you can see it I need to change color though that's",
    "start": "1165159",
    "end": "1170200"
  },
  {
    "text": "that's rough so so again it doesn't need to know anything and it's efficient for senders and receivers we don't need to",
    "start": "1170200",
    "end": "1175440"
  },
  {
    "text": "have the logic in there all right so we use a service called Amazon event Bridge",
    "start": "1175440",
    "end": "1180880"
  },
  {
    "text": "uh on Azure it be event grid GPC would be Pub sub but the idea again is we're",
    "start": "1180880",
    "end": "1186880"
  },
  {
    "text": "dumping information into this bridge and the logic for routing becomes part of",
    "start": "1186880",
    "end": "1195360"
  },
  {
    "text": "the bus right instead of the client so I can change the logic without changing",
    "start": "1195360",
    "end": "1201679"
  },
  {
    "text": "the client right so let's just quick thing over how AWS or or Amazon event",
    "start": "1201679",
    "end": "1207480"
  },
  {
    "text": "Bridge works first of all you have these multiple targets and it can be anything be anybody a service your custom apps uh",
    "start": "1207480",
    "end": "1214320"
  },
  {
    "text": "SAS apps we have you know uh directly connects to this microservices all kinds of things and then we have you",
    "start": "1214320",
    "end": "1221919"
  },
  {
    "text": "can have different buses you can have your default if you have an AWS account you already have an event Bridge bus",
    "start": "1221919",
    "end": "1227080"
  },
  {
    "text": "because you have it evault you have custom event buses and partner event buses all kinds of things you can archive replay there's all kinds of",
    "start": "1227080",
    "end": "1233360"
  },
  {
    "text": "Technology built in but then you have this okay and these are the rules this is where event Bridge gets really",
    "start": "1233360",
    "end": "1239799"
  },
  {
    "text": "powerful this is where buses get really powerful as events come in we evaluate",
    "start": "1239799",
    "end": "1245400"
  },
  {
    "text": "the events and we route based on the logic and more than one rule can match an event so I all I got to do is hey you",
    "start": "1245400",
    "end": "1252880"
  },
  {
    "text": "know I want to do something else with that event I'll throw another rule on event bridge and it just and ites does",
    "start": "1252880",
    "end": "1258280"
  },
  {
    "text": "that so if I come through you know this this is an image I want to I want to change it to sepia I want to you know I want to do some color correction rather",
    "start": "1258280",
    "end": "1264880"
  },
  {
    "text": "than doing all that in one Lambda function or or ECS or something you container I can then say do this little",
    "start": "1264880",
    "end": "1272120"
  },
  {
    "text": "thing with it do this little thing with it because they're all parallel unless they need to be in order and we'll get",
    "start": "1272120",
    "end": "1277400"
  },
  {
    "text": "into that in a minute all right so those rules work that way and then they target something AWS Lambda Amazon SNS",
    "start": "1277400",
    "end": "1284840"
  },
  {
    "text": "destinations of all kinds there's a bunch of different targets you can use right so here's how this works okay so",
    "start": "1284840",
    "end": "1291279"
  },
  {
    "text": "this is an event Bridge event example so you have this event here and I'm so sorry about the coloring uh you",
    "start": "1291279",
    "end": "1297200"
  },
  {
    "text": "basically has Source but the main thing it has is the currency and and then we write a rule we say okay we have a rule",
    "start": "1297200",
    "end": "1303200"
  },
  {
    "text": "where the currency has to be Australia or New Zealand and so we know that it's",
    "start": "1303200",
    "end": "1308679"
  },
  {
    "text": "Australia so it's a match so we're going to send this event to a Target to be",
    "start": "1308679",
    "end": "1313840"
  },
  {
    "text": "acted upon right it's that simple this is much better than 300 lines of if then",
    "start": "1313840",
    "end": "1319880"
  },
  {
    "text": "code right it's small chunks of manageable",
    "start": "1319880",
    "end": "1325200"
  },
  {
    "text": "code so and these are the different targets that uh you can you can push to with the Amazon V",
    "start": "1325200",
    "end": "1331279"
  },
  {
    "start": "1331000",
    "end": "1856000"
  },
  {
    "text": "bridge all right so those are some of the patterns we see we talk about asynch we talk about getting out of synchronous",
    "start": "1331279",
    "end": "1337440"
  },
  {
    "text": "and moving into asynchronous talk about buses routers different things like that so the next thing I want to do is I want",
    "start": "1337440",
    "end": "1343400"
  },
  {
    "text": "to talk about event Bridge or event driven architecture all right so first of all",
    "start": "1343400",
    "end": "1349240"
  },
  {
    "text": "we talk about an event when we talk about event I'm going to get real technical here I haven't been terribly technical I've been talking about some",
    "start": "1349240",
    "end": "1354480"
  },
  {
    "text": "services and some patterns things like that when we Define event driven",
    "start": "1354480",
    "end": "1359880"
  },
  {
    "text": "architecture this is what it is all right and I want to see lots of people taking notes okay because this is what it",
    "start": "1359880",
    "end": "1366159"
  },
  {
    "text": "is something happens and we",
    "start": "1366159",
    "end": "1371320"
  },
  {
    "text": "react you me do it again I can do it again event-driven architecture",
    "start": "1371320",
    "end": "1376960"
  },
  {
    "text": "something happens and we react so the thing is you need to have",
    "start": "1376960",
    "end": "1382200"
  },
  {
    "text": "an event what is an event yeah it's anything you want it to be a lot of times something's happen first time I",
    "start": "1382200",
    "end": "1388559"
  },
  {
    "text": "ever talked about event driven architecture I was I was actually doing an iot demonstration I had one of one of our adbs iot buttons and I was so proud",
    "start": "1388559",
    "end": "1396000"
  },
  {
    "text": "of this I actually wrote the code that when you clicked the button it would actually send my wife a text message",
    "start": "1396000",
    "end": "1401240"
  },
  {
    "text": "says I love you so I mean come on a how cute is that right right so I was doing",
    "start": "1401240",
    "end": "1407120"
  },
  {
    "text": "this demonstration over I think it was in Amsterdam he was actually at a go-to and I was pushing it and and we saw it",
    "start": "1407120",
    "end": "1413279"
  },
  {
    "text": "and it was it was just sing to her but I was showing the logs and everything was working great and I literally got a text",
    "start": "1413279",
    "end": "1418360"
  },
  {
    "text": "in the middle of the presentation and said stop loving me right now I'm tired of your love my wife she",
    "start": "1418360",
    "end": "1427200"
  },
  {
    "text": "tells it as it is so something happens and we react right so this is an event",
    "start": "1427200",
    "end": "1433960"
  },
  {
    "text": "pretty straightforward the main thing we're looking at is we have some metadata item potent key which we'll get to and your order ID okay so we think",
    "start": "1433960",
    "end": "1441840"
  },
  {
    "text": "about how we do events you can have a sparse event versus uh you know you can have a little more data right sparse",
    "start": "1441840",
    "end": "1447840"
  },
  {
    "text": "events versus full State description right and so the idea here is with the sparse event you can run into problems",
    "start": "1447840",
    "end": "1454600"
  },
  {
    "text": "where you say hey I don't have enough information here okay I need more so how do you handle that you can have a pointer to more data if you need to but",
    "start": "1454600",
    "end": "1462000"
  },
  {
    "text": "the idea is when you're planning and and I and I heavily encourage you to plan events and there's there's a guy named d",
    "start": "1462000",
    "end": "1468000"
  },
  {
    "text": "bo uh who does a lot about this you've ever heard of Bo 123 on on Twitter he's",
    "start": "1468000",
    "end": "1473399"
  },
  {
    "text": "part of our team he does a lot about planning your events and this is one of the things you think about how big do I make my event well I can do it whether",
    "start": "1473399",
    "end": "1480120"
  },
  {
    "text": "it's not quite enough or I can add a little more information uh Vin schi is should be backwards compatible right so",
    "start": "1480120",
    "end": "1487000"
  },
  {
    "text": "one of the things to understand is as I start adding more information I need to be able to support that okay so I can",
    "start": "1487000",
    "end": "1492760"
  },
  {
    "text": "actually get bigger but there's a cost to calculate values that that can",
    "start": "1492760",
    "end": "1497840"
  },
  {
    "text": "increase over time the more data you add in so one of the interesting things is with data here uh and actually I want to",
    "start": "1497840",
    "end": "1504760"
  },
  {
    "text": "finish that real quick with data if I do order ID and one of my systems expects it to be camel case instead of Dash so I",
    "start": "1504760",
    "end": "1511840"
  },
  {
    "text": "I change it to camel case well now I've broken a lot of things okay so now I'm manag now I'm maintaining order ID as",
    "start": "1511840",
    "end": "1518679"
  },
  {
    "text": "camel case and as snake case so things that think about it is you add a if all the data is in the event you have to",
    "start": "1518679",
    "end": "1525039"
  },
  {
    "text": "support all the data in the event as you're growing so as you're planning your events think about how much is too",
    "start": "1525039",
    "end": "1530559"
  },
  {
    "text": "much right and where and where kind of store where can they get more all right so one of the things we",
    "start": "1530559",
    "end": "1536840"
  },
  {
    "text": "heavily encourage is that that you choreograph events between domains using subscriptions so this is that that",
    "start": "1536840",
    "end": "1544640"
  },
  {
    "text": "dispersed right this is that the dispersed systems we're talking about building systems that are that are all",
    "start": "1544640",
    "end": "1549960"
  },
  {
    "text": "over the place and have different people lot of times hundreds of people are building this application they build this one little section how do we talk",
    "start": "1549960",
    "end": "1556760"
  },
  {
    "text": "well a lot of times we set set up API you call this API you can get this but a better way of doing that is events and",
    "start": "1556760",
    "end": "1562320"
  },
  {
    "text": "this is where the event driven comes in because between these two domains I have fulfillment and I have retail I can say",
    "start": "1562320",
    "end": "1568919"
  },
  {
    "text": "hey instead of you having to call me all the time and you calling 30 people just notify me when something happens so",
    "start": "1568919",
    "end": "1577440"
  },
  {
    "text": "retail says all right I'll let you know when an order is created so they use something like SNS or an event Bridge",
    "start": "1577440",
    "end": "1584919"
  },
  {
    "text": "one of the things to communicate between the Dom and they just throw the event out there and that's much easier than",
    "start": "1584919",
    "end": "1590919"
  },
  {
    "text": "saying all right what 30 Services need to know when something was created I have to call an API in every one of them",
    "start": "1590919",
    "end": "1597399"
  },
  {
    "text": "I'm going to miss one I promise you right so instead I'm going to send one event out and all of you just throw a",
    "start": "1597399",
    "end": "1603919"
  },
  {
    "text": "rule onto the eventbridge bus when you want to know you see how that kind of frees up the",
    "start": "1603919",
    "end": "1609520"
  },
  {
    "text": "system okay so what happens we create this order and then we use",
    "start": "1609520",
    "end": "1614960"
  },
  {
    "text": "orchestration inside of here to handle things remember I said hey we need to do some things in order we'll talk about",
    "start": "1614960",
    "end": "1620440"
  },
  {
    "text": "that in a minute so we'll do orchestration where we have an inventory manager an invoice manager they create an order and they kick it out so we",
    "start": "1620440",
    "end": "1626799"
  },
  {
    "text": "notify them using choreography but inside the domains we use orchestration and for that we use a tool called Step",
    "start": "1626799",
    "end": "1634240"
  },
  {
    "text": "functions right uh and and different Services have this Azure I think there's is is",
    "start": "1634240",
    "end": "1639640"
  },
  {
    "text": "um uh it's it's apps it's logic apps right so this idea of controlling the",
    "start": "1639640",
    "end": "1646480"
  },
  {
    "text": "system by making sure one thing happens before another we orchestrate exactly",
    "start": "1646480",
    "end": "1652440"
  },
  {
    "text": "how we have to have it but we don't have to do it in code the step functions you can build workflows uh and they're",
    "start": "1652440",
    "end": "1658080"
  },
  {
    "text": "called State machines each step of the work function is called a state and the only way we charge is by when that state",
    "start": "1658080",
    "end": "1663240"
  },
  {
    "text": "changes so this is a state machine anybody familiar with State machine okay good good good good so this is a state",
    "start": "1663240",
    "end": "1669000"
  },
  {
    "text": "machine it's just a really good one and you can design it by actually dragging and dropping I build I saw a lot of",
    "start": "1669000",
    "end": "1675360"
  },
  {
    "text": "these but we we do a lot of the code I always start with the state machine I don't start with the Lambda function anymore I use a Lambda function when I",
    "start": "1675360",
    "end": "1681960"
  },
  {
    "text": "need code when I need actual compute to go on not routing of data but actual you",
    "start": "1681960",
    "end": "1688159"
  },
  {
    "text": "compute then I'll then I'll use a Lambda function and then I'll come back to the state machine all right so this is how",
    "start": "1688159",
    "end": "1693960"
  },
  {
    "text": "it works is you can actually Define you can use ASL to Define it there's all kinds of things Sam cdk can Define it we",
    "start": "1693960",
    "end": "1700799"
  },
  {
    "text": "visualized so we can see how it draws and then we execute Monitor and we actually can show you the input State",
    "start": "1700799",
    "end": "1706320"
  },
  {
    "text": "and the output state of every step and you can walk through this is a great if is anybody using step functions now all",
    "start": "1706320",
    "end": "1712279"
  },
  {
    "text": "righty this is a great place to start I spent last summer uh I spent about two weeks in the Middle East at University",
    "start": "1712279",
    "end": "1719799"
  },
  {
    "text": "showing them how to build seral espresso if you're not familiar that there's a big automated coffee system that we do",
    "start": "1719799",
    "end": "1725240"
  },
  {
    "text": "they built it in Step functions very very little code uh lots of fun all",
    "start": "1725240",
    "end": "1731000"
  },
  {
    "text": "right so step functions integration types we have custom Integrations we have SDK Integrations with the SDK",
    "start": "1731000",
    "end": "1737360"
  },
  {
    "text": "integration I think this number is now low we've popped this up we actually use the SDK to talk to all the aw services",
    "start": "1737360",
    "end": "1743279"
  },
  {
    "text": "so you can you can so we talk a IML anybody mess with AIML okay not a lot",
    "start": "1743279",
    "end": "1748640"
  },
  {
    "text": "anybody want to okay couple of you all right so we can use like comprehend we can use some of the IML stuff right",
    "start": "1748640",
    "end": "1754320"
  },
  {
    "text": "through their SDK and column so here's how it works there's a couple of patterns with step functions",
    "start": "1754320",
    "end": "1760799"
  },
  {
    "text": "one is called the the request response where we can actually send uh do a sync uh request from a bucket and we get a",
    "start": "1760799",
    "end": "1767000"
  },
  {
    "text": "response back and when the data comes back we can send it out to a Lambda function and we get the response back so",
    "start": "1767000",
    "end": "1772640"
  },
  {
    "text": "these are all synchronous but they're step by step right and then finally once it's done we've done our processing then",
    "start": "1772640",
    "end": "1779600"
  },
  {
    "text": "what do I do I throw it onto an event Bridge bus everything I do nowadays whether anybody needs it or not is I'm",
    "start": "1779600",
    "end": "1785880"
  },
  {
    "text": "going to throw that event onto an event bir bus because that's how I'm going to talk back and forth okay we also have a wait for call",
    "start": "1785880",
    "end": "1792799"
  },
  {
    "text": "back process where you can actually send it out to a queue and you add a wait for for for token okay and then we have a",
    "start": "1792799",
    "end": "1799720"
  },
  {
    "text": "Tas token and it responds and it does a send Tas failure so we we know which one",
    "start": "1799720",
    "end": "1805120"
  },
  {
    "text": "to invoke or if it's a synas success then we can invoke that one so you have control a step function can wait for up",
    "start": "1805120",
    "end": "1811880"
  },
  {
    "text": "to one year using a regular step function like why one year well there's man manual interfaces that you might",
    "start": "1811880",
    "end": "1818080"
  },
  {
    "text": "have might have shipping coming back so you can process uh and then we have what are called Express step functions that",
    "start": "1818080",
    "end": "1823440"
  },
  {
    "text": "can wait it for up to five minutes all right so the other one is sync and I'm",
    "start": "1823440",
    "end": "1828720"
  },
  {
    "text": "actually going to go through this one a little quick because I know we're tight on time because our already delayed start so I'm going to jump on this but",
    "start": "1828720",
    "end": "1833799"
  },
  {
    "text": "the idea here is you can actually do a sync with some of our services like Athena things like that all right so we",
    "start": "1833799",
    "end": "1840440"
  },
  {
    "text": "use these together orchestration and uh choreography and we use we use",
    "start": "1840440",
    "end": "1846760"
  },
  {
    "text": "choreography to talk between the domains and we use orchestration to work within",
    "start": "1846760",
    "end": "1852519"
  },
  {
    "text": "the domains to to organize how we do things all right so the last thing we're going to talk about and I think we're",
    "start": "1852519",
    "end": "1859080"
  },
  {
    "start": "1856000",
    "end": "1956000"
  },
  {
    "text": "okay on time is item potency all right so who loves item potency raise your",
    "start": "1859080",
    "end": "1865679"
  },
  {
    "text": "hand okay all right all right being item potent that actually is a cool thing who likes making your systems item potent",
    "start": "1865679",
    "end": "1872760"
  },
  {
    "text": "okay all right one okay good nerd nerd right right up front here nerd alert same here I love it I love figuring it",
    "start": "1872760",
    "end": "1877840"
  },
  {
    "text": "out uh on that so if you're not familiar with item potency or what I'm talking about I'm going to I'm going to explain",
    "start": "1877840",
    "end": "1883760"
  },
  {
    "text": "it when we say item potency first time I heard is like o don't want that oh my I",
    "start": "1883760",
    "end": "1890039"
  },
  {
    "text": "yeah I definitely don't want my system to have item potency that's bad it's a disease it's actually good right item",
    "start": "1890039",
    "end": "1896519"
  },
  {
    "text": "potency is a good thing okay so let's let's talk about what it is the idea of",
    "start": "1896519",
    "end": "1901559"
  },
  {
    "text": "item potency is this idea that operations that can be applied multiple times without changing the results okay",
    "start": "1901559",
    "end": "1908960"
  },
  {
    "text": "being item potent is the ability to fight against duplication now I'm not",
    "start": "1908960",
    "end": "1914919"
  },
  {
    "text": "going to give you everything we can do because we just we don't have that kind of time but I'm going to give you a few",
    "start": "1914919",
    "end": "1920039"
  },
  {
    "text": "steps that we at Amazon take and things that we can we give you uh to help you do that on how do we become item potent",
    "start": "1920039",
    "end": "1927279"
  },
  {
    "text": "right so and again I I'm so sorry the colors are very dark here so this is the mathematical definition right and from",
    "start": "1927279",
    "end": "1933840"
  },
  {
    "text": "systems the architectural definition is a message that has the same effect whether it is received once or multiple",
    "start": "1933840",
    "end": "1939480"
  },
  {
    "text": "times but let's get to the real definition was my credit card charged",
    "start": "1939480",
    "end": "1945399"
  },
  {
    "text": "twice mom anybody got that call from Mom I have more than once right it's that",
    "start": "1945399",
    "end": "1951679"
  },
  {
    "text": "what happened were we charged twice what do we do all right so that's the real word definition so let's talk about",
    "start": "1951679",
    "end": "1959000"
  },
  {
    "start": "1956000",
    "end": "2101000"
  },
  {
    "text": "where can duplicates occur duplicates can occur in a lot of different places but let's let's let's call out a few",
    "start": "1959000",
    "end": "1965600"
  },
  {
    "text": "right the first is they can be caused by transmission issues and here's how that",
    "start": "1965600",
    "end": "1971080"
  },
  {
    "text": "works so let's say I have a sender the sender sends a message but the acknowledgment is not sent back so the",
    "start": "1971080",
    "end": "1979000"
  },
  {
    "text": "sender that's a network failure so the sender sitting out there going did it work did my credit card go through did",
    "start": "1979000",
    "end": "1985480"
  },
  {
    "text": "it happen so what they do is they send it again and this time it works just fine but now we have a duplicate message",
    "start": "1985480",
    "end": "1993039"
  },
  {
    "text": "we've charged our card twice or three times or four times depending on how impatient you are",
    "start": "1993039",
    "end": "1998799"
  },
  {
    "text": "right so that's one area that happens a second area that can happen is duplication caused by receiver issues",
    "start": "1998799",
    "end": "2005960"
  },
  {
    "text": "and I'm going to talk about some a services and how we do things because at AWS we build to not fail but we plan as",
    "start": "2005960",
    "end": "2012919"
  },
  {
    "text": "if we're going to fail right because everything fails our our CTO says everything fails all the time it happens",
    "start": "2012919",
    "end": "2020279"
  },
  {
    "text": "right so you build as if it's going to fail so and this this would actually be an example of sqs and I'll explain how",
    "start": "2020279",
    "end": "2026279"
  },
  {
    "text": "this how this works so your sender sends a message into sqs we immediately create",
    "start": "2026279",
    "end": "2031919"
  },
  {
    "text": "three or more copies of it so there's redundancy built in right and avail",
    "start": "2031919",
    "end": "2037039"
  },
  {
    "text": "ability so we create that then what happens is when a receiver grabs that we put a Timeout on that we say hey this",
    "start": "2037039",
    "end": "2043000"
  },
  {
    "text": "isn't available for anybody else we don't delete it from the que it's just hidden in the queue but what happens if",
    "start": "2043000",
    "end": "2048960"
  },
  {
    "text": "your receiver fails right well then it's left in the que and then receiver two",
    "start": "2048960",
    "end": "2055079"
  },
  {
    "text": "gets it also so that's why when we talk about sqs we we say we don't say onetime delivery we say at least once delivery",
    "start": "2055079",
    "end": "2063520"
  },
  {
    "text": "and this is how it can be more than one so the reality is you're going to have a duplication right same process here as",
    "start": "2063520",
    "end": "2071358"
  },
  {
    "text": "if you have a sender and this can be caused by the service itself I hate to say it sometimes Services have issues so",
    "start": "2071359",
    "end": "2078280"
  },
  {
    "text": "we have a sender that that sends it we have it the receiver one grabs it and",
    "start": "2078280",
    "end": "2083960"
  },
  {
    "text": "something happens to the timeout actually and it becomes available again",
    "start": "2083960",
    "end": "2089079"
  },
  {
    "text": "so now sender two or receiver two grabs it says I'll do something and we don't know how far receiver one got",
    "start": "2089079",
    "end": "2097680"
  },
  {
    "text": "okay so it could have gone in it could have not we don't know so now we have a",
    "start": "2097680",
    "end": "2103640"
  },
  {
    "start": "2101000",
    "end": "2279000"
  },
  {
    "text": "duplication so the first thing we're going to do is we start by we're going to work on duping in our code itself",
    "start": "2103640",
    "end": "2110760"
  },
  {
    "text": "okay and we actually have a tool I would love this if you're not familiar with it we have the Lambda power tools that that",
    "start": "2110760",
    "end": "2117119"
  },
  {
    "text": "helps you do this and this is an example of how they do it so uh one thing is we use item potency tokens anybody use item",
    "start": "2117119",
    "end": "2123599"
  },
  {
    "text": "potency tokens now okay so take a look at this all right it's not too hard but there's a couple of of key things you",
    "start": "2123599",
    "end": "2130000"
  },
  {
    "text": "need to understand first of all is a an item potency token is generated at the",
    "start": "2130000",
    "end": "2135880"
  },
  {
    "text": "client your client needs to be aware of the token meaning when they send it a",
    "start": "2135880",
    "end": "2142280"
  },
  {
    "text": "token should be there from the client they should be regenerated by the",
    "start": "2142280",
    "end": "2147359"
  },
  {
    "text": "client so if I'm doing a secondary call it should be the same one the client should be aware right they they are",
    "start": "2147359",
    "end": "2154440"
  },
  {
    "text": "unique per message right now per per transaction so when we do this when I",
    "start": "2154440",
    "end": "2159599"
  },
  {
    "text": "make the call and I don't get a response I'm going to use the same one because I'm still in that same message I'm using right uu ID is a very common one uh if",
    "start": "2159599",
    "end": "2166520"
  },
  {
    "text": "you're familiar with that uh and then it's a dedicated field and we'll get more into that in a second but a",
    "start": "2166520",
    "end": "2171680"
  },
  {
    "text": "dedicated field says I'm not going to use the ID because that could slip and get changed on me right especially if",
    "start": "2171680",
    "end": "2177359"
  },
  {
    "text": "I'm using intermediate systems and and I'll show you that in a second so here's how we do it we have a client we have a",
    "start": "2177359",
    "end": "2184040"
  },
  {
    "text": "Lambda function and then we actually create a persistent layer in in this particular example it' be Dynamo DB you",
    "start": "2184040",
    "end": "2189280"
  },
  {
    "text": "can use whatever you want Dynamo DB is a persistence layer that's done by power tools and here's how it works so you",
    "start": "2189280",
    "end": "2194839"
  },
  {
    "text": "have this client this invocation so the invocation happens the first thing we do is we save that token to the persistent",
    "start": "2194839",
    "end": "2202079"
  },
  {
    "text": "layer we say okay this token is being worked on and I'm locking it so if you",
    "start": "2202079",
    "end": "2207359"
  },
  {
    "text": "get it again it's locked it needs to respond with this right so then we actually process in the Lambda function",
    "start": "2207359",
    "end": "2214640"
  },
  {
    "text": "whatever it was that was going to happen What what's your logic and the final response is then saved to the record in",
    "start": "2214640",
    "end": "2222880"
  },
  {
    "text": "the persistence layer right so now we have the token and the final result here",
    "start": "2222880",
    "end": "2229520"
  },
  {
    "text": "and then it's unlocked and we respond to the client and we all move down yep I",
    "start": "2229520",
    "end": "2235160"
  },
  {
    "text": "I'll do questions just a sec all right yeah so just CU time wise then then we'll do a ton of questions so um and",
    "start": "2235160",
    "end": "2241960"
  },
  {
    "text": "then but what happens if it doesn't happen right so what happens if that fails so here's the sub sub quent",
    "start": "2241960",
    "end": "2247119"
  },
  {
    "text": "response okay so that was that that did not receive by the client so the next require or the next request by the",
    "start": "2247119",
    "end": "2252920"
  },
  {
    "text": "client says I'm going to do it and I'm going to check and I'm G to look up the it potency token and if it exists I'm G",
    "start": "2252920",
    "end": "2259920"
  },
  {
    "text": "to Res return the saved result back to the customer meaning they got the same",
    "start": "2259920",
    "end": "2266119"
  },
  {
    "text": "response every time you try it but we're not creating duplicates in the system",
    "start": "2266119",
    "end": "2271240"
  },
  {
    "text": "all righty yeah it do hold your question because I will definitely will answer it so all right so that's kind of how we",
    "start": "2271240",
    "end": "2278079"
  },
  {
    "text": "approach that so how does that work in our services so let me show you so let's",
    "start": "2278079",
    "end": "2284440"
  },
  {
    "start": "2279000",
    "end": "2572000"
  },
  {
    "text": "say we have Amazon sqs okay this is the service we use this is a 5o send message Api so we're going to create a token so",
    "start": "2284440",
    "end": "2290800"
  },
  {
    "text": "this what the token looks like and then I'm going to go ahead and I'm going to send I'm just I'm sh an example of a CLI",
    "start": "2290800",
    "end": "2295920"
  },
  {
    "text": "because I don't know it looks cool on the screen so we're sending it and we get this uh message back right and we're",
    "start": "2295920",
    "end": "2302599"
  },
  {
    "text": "going to send it again and we get this message back and the message ID is",
    "start": "2302599",
    "end": "2308000"
  },
  {
    "text": "identical right it's the same response we didn't duplicate it this service is",
    "start": "2308000",
    "end": "2313040"
  },
  {
    "text": "item potent got a big green check okay so same with AWS step functions so AWS",
    "start": "2313040",
    "end": "2319119"
  },
  {
    "text": "step functions we use a start execution API and we're going well we're going to create a token and then we're going to",
    "start": "2319119",
    "end": "2325240"
  },
  {
    "text": "actually send it and we use the token as the name it has different names and things and so we send that and we get",
    "start": "2325240",
    "end": "2331920"
  },
  {
    "text": "back to State machine and we send it again and you notice we get it back again",
    "start": "2331920",
    "end": "2337920"
  },
  {
    "text": "and it is item potent same thing so let's look at event Bridge okay we're",
    "start": "2337920",
    "end": "2343440"
  },
  {
    "text": "not going to go through all the services you're like well how much we have 200 Services buckle up all right so event",
    "start": "2343440",
    "end": "2349599"
  },
  {
    "text": "Bridge so event Bridge we're do the same thing we're going to create we're going to create that we're going to send it okay we've sent our details and",
    "start": "2349599",
    "end": "2355800"
  },
  {
    "text": "everything and we're going to send it again and uh oh those don't match okay",
    "start": "2355800",
    "end": "2363040"
  },
  {
    "text": "eventage is not item potent and are you saying right now you're all saying to",
    "start": "2363040",
    "end": "2368200"
  },
  {
    "text": "yourself really you couldn't check that box you couldn't finish the work on that if inbd is not out poent by by Design we",
    "start": "2368200",
    "end": "2375400"
  },
  {
    "text": "don't know what your data is going to look like you may send the same thing repeatedly right so how do you get",
    "start": "2375400",
    "end": "2380920"
  },
  {
    "text": "around that so here's where you get a little proactive okay VPD has this idea of an potency identifier as well and so",
    "start": "2380920",
    "end": "2388000"
  },
  {
    "text": "you can have now here's some things to note about it because remember our rules we're not going to use the ID right",
    "start": "2388000",
    "end": "2393560"
  },
  {
    "text": "we're going to actually create a specific token and we're going to save it in the metadata and you can name it",
    "start": "2393560",
    "end": "2398599"
  },
  {
    "text": "anything you want I don't care you can name it Bob right except for Bob May easily get overwritten if somebody else wants to be clever and use Bob right so",
    "start": "2398599",
    "end": "2406200"
  },
  {
    "text": "uh so we're going to use a client provided item potency token when we send that in so let's go back to this we're",
    "start": "2406200",
    "end": "2412599"
  },
  {
    "text": "going to actually add that to our data right so we have an item potency key in the metadata using",
    "start": "2412599",
    "end": "2419680"
  },
  {
    "text": "token so what that means if I send this over and over and over it's going to have that token but your client knows",
    "start": "2419680",
    "end": "2425440"
  },
  {
    "text": "the the I identity so your back end should also be aware of that so probably",
    "start": "2425440",
    "end": "2431040"
  },
  {
    "text": "needs to be persistent somewhere right so this is how you look at not building duplicates into your",
    "start": "2431040",
    "end": "2437200"
  },
  {
    "text": "system so item poeny duration just real quick lame to power tools automatically does one hour sqs is 5 minutes SNS is 5",
    "start": "2437200",
    "end": "2444960"
  },
  {
    "text": "minutes step function is 90 days so this helps you understand how long do we keep that persistent response right and these",
    "start": "2444960",
    "end": "2452000"
  },
  {
    "text": "are some of the things and you can change some of those I didn't P You By Any Other Name What's that's sweet and I",
    "start": "2452000",
    "end": "2457319"
  },
  {
    "text": "love this because we use different names like I said you can name it what you want here's just some examples of how that's being",
    "start": "2457319",
    "end": "2463280"
  },
  {
    "text": "done so we talked about we're using distributed systems and naming is really",
    "start": "2463280",
    "end": "2469520"
  },
  {
    "text": "critical why use a separate ID let me show you an example so we we use a here's item potency token flows through",
    "start": "2469520",
    "end": "2476079"
  },
  {
    "text": "system so we may have a setup where we say requestor is going to send to Our receiver and we have this message ID of",
    "start": "2476079",
    "end": "2481680"
  },
  {
    "text": "1 two 3 and the reper takes that and says I'm going to make that the Cor ID",
    "start": "2481680",
    "end": "2487480"
  },
  {
    "text": "that's 1 two 3 and then on the other side the requestor says okay does my request ID match my correlation ID this",
    "start": "2487480",
    "end": "2495040"
  },
  {
    "text": "is the data that I need to be working with all as well but that's not how distributed systems work in reality",
    "start": "2495040",
    "end": "2501960"
  },
  {
    "text": "we're most likely going through some type of intermediary somewhere so let's try this again so we do a send with a",
    "start": "2501960",
    "end": "2508520"
  },
  {
    "text": "message ID great we're good interm mediary also has a message ID because you know they want to tag things as well",
    "start": "2508520",
    "end": "2514839"
  },
  {
    "text": "so we're going to change it to 456 your reper gets that and sends it back and says hey your correlation is",
    "start": "2514839",
    "end": "2521400"
  },
  {
    "text": "456 and your receiver says I don't know what that is these don't match so I'm going to send it again and now you've",
    "start": "2521400",
    "end": "2527720"
  },
  {
    "text": "got duplicates going on all right so this idea of building item potency into",
    "start": "2527720",
    "end": "2532839"
  },
  {
    "text": "your system it takes a little work we're developers we work it's what we do right we have to do that but I encourage you",
    "start": "2532839",
    "end": "2539800"
  },
  {
    "text": "as you're setting your systems up as you're thinking about distributed applications tap into some of the things",
    "start": "2539800",
    "end": "2546359"
  },
  {
    "text": "talking about look at asynchronous over synchronous look at using routers uh",
    "start": "2546359",
    "end": "2552000"
  },
  {
    "text": "look at using you know buses different things like that maintain your item pocy and these I mean I could talk forever on",
    "start": "2552000",
    "end": "2558200"
  },
  {
    "text": "some tips on building event driven architectures but these are some ones that really help as you're building those",
    "start": "2558200",
    "end": "2563680"
  },
  {
    "text": "out there's more on item potency here if you want to grab the QR code and I know we're sharing these decks as well uh so",
    "start": "2563680",
    "end": "2571319"
  },
  {
    "text": "and then finally uh we have a site I don't know if you're familiar with this called serverless land our our our team",
    "start": "2571319",
    "end": "2576680"
  },
  {
    "start": "2572000",
    "end": "2612000"
  },
  {
    "text": "maintains this if you want to know about serverless a lot of the things that we talk about a lot of the getting started",
    "start": "2576680",
    "end": "2583559"
  },
  {
    "text": "tips patterns all those kinds of things they're all on serverless land.com it's free uh and and you can reach out to us",
    "start": "2583559",
    "end": "2590800"
  },
  {
    "text": "uh to build on to these with that I'm going to say thank [Applause]",
    "start": "2590800",
    "end": "2598460"
  },
  {
    "text": "you",
    "start": "2605079",
    "end": "2608079"
  }
]