[
  {
    "text": "I'm Chris Trader uh I'm CTO of a company called intent media um talk a little bit about CasCal uh along with um a bunch of",
    "start": "7200",
    "end": "14480"
  },
  {
    "text": "other data processing languages that we played with over the years at intent media um and if you have questions feel",
    "start": "14480",
    "end": "20600"
  },
  {
    "text": "free to interrupt me at any time just raise your hand and and we go through it",
    "start": "20600",
    "end": "27760"
  },
  {
    "text": "um um so just quick overview what I want to talk about uh a little bit of history of how we do data processing intent media",
    "start": "28960",
    "end": "36079"
  },
  {
    "text": "um I'm going to go through quickly sort of the hello world uh how you write hello world in some various data",
    "start": "36079",
    "end": "41600"
  },
  {
    "text": "processing languages uh a quick calog overview um I have a a demo ready I",
    "start": "41600",
    "end": "48800"
  },
  {
    "text": "should know better than to do that during talks but uh I'll I'll I'll have or show some code if we have time um and",
    "start": "48800",
    "end": "54920"
  },
  {
    "text": "I want to talk about a little bit about the future and where I think we're going um before we start uh who in here uses",
    "start": "54920",
    "end": "64439"
  },
  {
    "text": "Hadoop who in here uses closure who uses",
    "start": "64439",
    "end": "72280"
  },
  {
    "text": "both just me okay cool uh that gives me a good",
    "start": "72600",
    "end": "79240"
  },
  {
    "text": "basis to start with um so like I said I'm coor I'm CTO uh at a company called",
    "start": "79240",
    "end": "84880"
  },
  {
    "text": "intent media uh we're in New York City uh what we do is is we work with uh",
    "start": "84880",
    "end": "91720"
  },
  {
    "text": "travel websites to process a bunch of data um and try to figure out you know",
    "start": "91720",
    "end": "98560"
  },
  {
    "text": "basically what your behavior is going to be on the site and whether you're likely to buy something or not so this is a",
    "start": "98560",
    "end": "103640"
  },
  {
    "text": "screenshot from orbit it's a slightly doctored screenshot from orbits earlier uh but uh this was a flight search uh",
    "start": "103640",
    "end": "111000"
  },
  {
    "text": "New York to San Francisco uh this is the results that show up in the middle um and if we think you're not going to buy",
    "start": "111000",
    "end": "116880"
  },
  {
    "text": "anything uh we serve an ad to take you to other places um we work with uh most of the major",
    "start": "116880",
    "end": "123360"
  },
  {
    "text": "online travel agencies hotels airlines that sort of thing uh so if we knew that",
    "start": "123360",
    "end": "128720"
  },
  {
    "text": "you were a United frequent flyer this might be United ad and take you right to it if we thought you weren't going to buy an orbits that sort of thing uh try",
    "start": "128720",
    "end": "134879"
  },
  {
    "text": "to balance transaction Revenue with media revenue on major e-commerce",
    "start": "134879",
    "end": "140640"
  },
  {
    "text": "websites um we've been around for about five years uh We've collected uh terabytes of",
    "start": "140640",
    "end": "149280"
  },
  {
    "text": "data um can't say exactly how much but uh a bunch of terabytes from all of our",
    "start": "149280",
    "end": "154440"
  },
  {
    "text": "different partners and and we build models like I said sort of propensity to buy propensity to click on an offer that",
    "start": "154440",
    "end": "160040"
  },
  {
    "text": "we serve to you uh all these different things and and one thing that has been a learning experience for me is um I came",
    "start": "160040",
    "end": "167159"
  },
  {
    "text": "from a very traditional developer background building engineering teams that sort of thing and um learning how",
    "start": "167159",
    "end": "175480"
  },
  {
    "text": "to do data science and how to build a data science team has been a big learning experience experience when you look at this space there are you know 50",
    "start": "175480",
    "end": "184799"
  },
  {
    "text": "different options out there if you have a bunch of data and you want to process it there's there's endless ways to do that right now so narrowing it down and",
    "start": "184799",
    "end": "191480"
  },
  {
    "text": "figuring out how to best uh sort of process your data and interpret it is is a big problem in and of itself as you",
    "start": "191480",
    "end": "198200"
  },
  {
    "text": "build up sort of your data science muscles um so here's a quick history of",
    "start": "198200",
    "end": "206640"
  },
  {
    "text": "uh data science um at intent media um we originally started with the Hadoop",
    "start": "206640",
    "end": "212640"
  },
  {
    "text": "Java API so the way I think of Hadoop and this is sort of a a very high level abstraction is there's a distributed",
    "start": "212640",
    "end": "219040"
  },
  {
    "text": "file system at the bottom this is where you store all your data uh across a bunch of machines um on top of that is",
    "start": "219040",
    "end": "225439"
  },
  {
    "text": "hadp map ruce which is the scheduling layer uh Resource Management data processing layer and then there are a",
    "start": "225439",
    "end": "232200"
  },
  {
    "text": "whole bunch of apis on top of that but 5 years ago there were not a whole lot of apis on top of that there was the Java",
    "start": "232200",
    "end": "237840"
  },
  {
    "text": "API and a few other sort of beginning uh apis that we started to play",
    "start": "237840",
    "end": "243400"
  },
  {
    "text": "with um just to give you guys a quick uh example of this I don't think anyone uses the Java API anymore I think maybe",
    "start": "243400",
    "end": "250280"
  },
  {
    "text": "a few people do um it's it's painful uh this is some code this is a uh mapper",
    "start": "250280",
    "end": "258959"
  },
  {
    "text": "what this is doing is is mapping anagrams so one of the things that's really hard about using the Java API to",
    "start": "258959",
    "end": "266560"
  },
  {
    "text": "do work is you have to take every problem that you're trying to solve and turn it into a map step and a reduce",
    "start": "266560",
    "end": "272000"
  },
  {
    "text": "step so if you want an anagram the way you do that in map reduce is to take",
    "start": "272000",
    "end": "278120"
  },
  {
    "text": "every word so this is pulling in a bunch of words sorting all the characters uh",
    "start": "278120",
    "end": "283440"
  },
  {
    "text": "so if you had words like beta you would sort it to abet uh if you had beat you",
    "start": "283440",
    "end": "288680"
  },
  {
    "text": "also sort it to abet and then uh in your reduced step you combine all those up and look for a count greater than or",
    "start": "288680",
    "end": "295520"
  },
  {
    "text": "equal to two it's not a natural way of thinking about problems you have to take every problem you have and sort of",
    "start": "295520",
    "end": "302400"
  },
  {
    "text": "recontextualize it in your head uh to fit this model as you go forward and and",
    "start": "302400",
    "end": "307520"
  },
  {
    "text": "spread things out it's very difficult we had a lot of trouble with with sort of doing that um so either we're not smart",
    "start": "307520",
    "end": "315440"
  },
  {
    "text": "enough or it's just very difficult to do um so downsizes of the Java API hard to",
    "start": "315440",
    "end": "321840"
  },
  {
    "text": "write uh need to think in this map ruce Paradigm uh hard to test uh I didn't",
    "start": "321840",
    "end": "326880"
  },
  {
    "text": "point out totally here but these implement a bunch of interfaces the reducer textt text text text interface",
    "start": "326880",
    "end": "333880"
  },
  {
    "text": "um if you want to mock this out and unit test it uh there is a something called Mr unit but it's it's kind of a pain in",
    "start": "333880",
    "end": "340680"
  },
  {
    "text": "the ass to use so uh basically the way a lot of the stuff tends to get tested in",
    "start": "340680",
    "end": "345880"
  },
  {
    "text": "my experience is just run it on the cluster against a bunch of data so you're spinning up clusters you're working with it uh it's it was it was a",
    "start": "345880",
    "end": "352720"
  },
  {
    "text": "big pain for us um and it's hard to read and understand when you go back to it in the future this uh this anagram example",
    "start": "352720",
    "end": "360440"
  },
  {
    "text": "I just showed you um I first looked at probably a few years ago and I went back to it a few weeks ago and I was thinking",
    "start": "360440",
    "end": "366720"
  },
  {
    "text": "about this talk and I had no idea what was happening I had to sit and look at it for you know 10 minutes before I was",
    "start": "366720",
    "end": "373240"
  },
  {
    "text": "like oh yeah we're sorting the letters and then figuring that out and I had to sort of run through it in my head right so um it slows you way down when every",
    "start": "373240",
    "end": "380639"
  },
  {
    "text": "time you want to look at code that's six months old you just have no idea what's happening there um it's really too low",
    "start": "380639",
    "end": "386680"
  },
  {
    "text": "level I mean you can think of this sort of as the Assembly Language of had dup if there is",
    "start": "386680",
    "end": "394599"
  },
  {
    "text": "equivalent um so the old axium uh there's no problem in computer science",
    "start": "395280",
    "end": "400599"
  },
  {
    "text": "that can't be solved uh by adding another layer of abstraction uh we went ahead and and",
    "start": "400599",
    "end": "407800"
  },
  {
    "text": "added another layer of abstraction on top um and the first thing we tried was called a pachy pig it's a project out of",
    "start": "407800",
    "end": "416560"
  },
  {
    "text": "Yahoo uh it's uh declared language that reduces to map produce queries it's a",
    "start": "416560",
    "end": "422680"
  },
  {
    "text": "little simpler to reason about it makes a problem you don't have to take a problem and turn it into a map produce Paradigm you can just work with it um",
    "start": "422680",
    "end": "429680"
  },
  {
    "text": "and a big thing for us was uh things a language can't do uh can be done in user defined functions so as you're working",
    "start": "429680",
    "end": "435720"
  },
  {
    "text": "with it you can write a function in Java or python or Ruby and spin your code out",
    "start": "435720",
    "end": "441759"
  },
  {
    "text": "to it and process it through there um plus it has this little pig wearing overall logo which everyone seems to",
    "start": "441759",
    "end": "448479"
  },
  {
    "text": "like WR the elephant over there um here's an example of a very",
    "start": "448479",
    "end": "454280"
  },
  {
    "text": "simple uh Pig query uh this is uh just data normalization so uh what we're",
    "start": "454280",
    "end": "461759"
  },
  {
    "text": "doing here is we have a model called BTL uh we're going to pull in a bunch of signals we're going to group them",
    "start": "461759",
    "end": "466919"
  },
  {
    "text": "together uh we're going to generate some Tuple variables uh and spit it out the other end um this is an example of a",
    "start": "466919",
    "end": "474280"
  },
  {
    "text": "userdefined function uh one problem we had with pig is that",
    "start": "474280",
    "end": "480080"
  },
  {
    "text": "this is sort of their madeup language this is called Pig Latin um when you",
    "start": "480080",
    "end": "485680"
  },
  {
    "text": "want to go outside of pig you you end up bringing a user defined function this Tuple variables function look like",
    "start": "485680",
    "end": "492759"
  },
  {
    "text": "this I can't read it either um but uh it just caused a bunch of",
    "start": "493080",
    "end": "499319"
  },
  {
    "text": "problems we were uh because Pig defines its own language you don't have very good tool support um maybe it's gotten",
    "start": "499319",
    "end": "505120"
  },
  {
    "text": "better but generally we found uh very difficult to work with and use in tools",
    "start": "505120",
    "end": "510960"
  },
  {
    "text": "you can't refactor it it's hard to test uh things it's hard to blow out one of those lines that I showed you a couple",
    "start": "510960",
    "end": "516719"
  },
  {
    "text": "Pages ago like how do you you know test this as a unit it's difficult to do",
    "start": "516719",
    "end": "522880"
  },
  {
    "text": "um when you spin out those custom operations to python or Java we had many instances of uh you know you're if",
    "start": "522880",
    "end": "531360"
  },
  {
    "text": "you're not thinking about distributed computing when you write that JavaScript or that python script and you have sort",
    "start": "531360",
    "end": "536600"
  },
  {
    "text": "of somewhere where there's a lock all of a sudden you're not do map produce anymore right you have a method that's",
    "start": "536600",
    "end": "541880"
  },
  {
    "text": "should just be processing data if you do any manipulation of that data inside of it uh all your data locks on that point",
    "start": "541880",
    "end": "548640"
  },
  {
    "text": "and you have a big problem there um and again this is this is hard for us to unit test you ultimately ended up",
    "start": "548640",
    "end": "555160"
  },
  {
    "text": "running it on the cluster most of the time um so we started looking again for",
    "start": "555160",
    "end": "562200"
  },
  {
    "text": "another level of abstraction uh we looked into a project called",
    "start": "562200",
    "end": "567279"
  },
  {
    "text": "cascading um cas skating is another Java data processing library that runs on top",
    "start": "567279",
    "end": "572399"
  },
  {
    "text": "of map produce uh it thinks of your data as a stream so it takes your initial set",
    "start": "572399",
    "end": "578800"
  },
  {
    "text": "of data uses a tap pulls it in puts it through a pipe and then syncs it out to",
    "start": "578800",
    "end": "584000"
  },
  {
    "text": "something on the other end it's a more natural way to think about a data processing pipeline than a bunch of map reduced steps as you go through it um",
    "start": "584000",
    "end": "590680"
  },
  {
    "text": "and it has a bunch of built-in functions for common test Pig has this too uh and and you'll find As you move up the",
    "start": "590680",
    "end": "596079"
  },
  {
    "text": "abstraction level you'll get more and more built-in functions you won't have to rewrite them from the ground up um here's some of the built-in",
    "start": "596079",
    "end": "603600"
  },
  {
    "text": "operations is what you would expect um when you're working with a bunch of data group buys outer joins left joins things",
    "start": "603600",
    "end": "610600"
  },
  {
    "text": "that come from a a more database background what you want to do with data 90% of the",
    "start": "610600",
    "end": "618279"
  },
  {
    "text": "time um here is uh Java uh excuse me",
    "start": "618480",
    "end": "624079"
  },
  {
    "text": "cascading Java file um class I suppose",
    "start": "624079",
    "end": "629399"
  },
  {
    "text": "uh I don't know if you guys can read it these are Taps these are the fields we're pulling out of the data these are pipes uh and",
    "start": "629399",
    "end": "637079"
  },
  {
    "text": "there's a sync at the end so this reads a lot better than what we've seen so far it reads actually kind of at the same",
    "start": "637079",
    "end": "642920"
  },
  {
    "text": "level of abstraction as the pig script but you're using a real language here you're using something you can write in your ID uh you can refactor it you can",
    "start": "642920",
    "end": "650240"
  },
  {
    "text": "sort of tell what's going on and you can start to break it down and and unit tests a lot of this stuff um but we as",
    "start": "650240",
    "end": "657200"
  },
  {
    "text": "we were looking at this we sort of thought we can do better and going back to another layer of distraction",
    "start": "657200",
    "end": "664360"
  },
  {
    "text": "um cascading has a a bunch of uh language adapters built on top of it uh",
    "start": "664360",
    "end": "671160"
  },
  {
    "text": "so there's a Scala adapter it's called scalding uh there's a closure adapter",
    "start": "671160",
    "end": "676800"
  },
  {
    "text": "it's called CasCal um I think that there is a ruby adapter uh and I think there",
    "start": "676800",
    "end": "683519"
  },
  {
    "text": "are a couple more there's definitely a ruby map produce Library I don't know if it runs on top of cascading anymore",
    "start": "683519",
    "end": "689800"
  },
  {
    "text": "uh but we uh have a have about a 10 person data science team and and we looked at everything um we found uh an",
    "start": "689800",
    "end": "698680"
  },
  {
    "text": "interesting effect which is we have a a mix of people with a very strong math background um come from a PhD background",
    "start": "698680",
    "end": "705920"
  },
  {
    "text": "in math and then people from a a very strong engineering background and uh one thing I've found over the last four or",
    "start": "705920",
    "end": "712800"
  },
  {
    "text": "five years as we've been doing this is if you have a functional programming language it makes a lot more sense to",
    "start": "712800",
    "end": "718800"
  },
  {
    "text": "get from a math background which I think is kind of intuitive when you think about it they're used to looking at functions all day long uh when they got",
    "start": "718800",
    "end": "725480"
  },
  {
    "text": "their phds uh you put them into uh an an objectoriented programming language and",
    "start": "725480",
    "end": "731760"
  },
  {
    "text": "they and they sort of go okay I can do this but you don't get the same productivity level you get out of them if you can just give them a bunch of functions they can string together they",
    "start": "731760",
    "end": "738320"
  },
  {
    "text": "know what the input is they know what the output is they can just figure out how that's going to work um so we use",
    "start": "738320",
    "end": "745440"
  },
  {
    "text": "Cog uh cogs written enclosure um closure is a lisp that runs on the jvm um and",
    "start": "745440",
    "end": "752560"
  },
  {
    "text": "also on the CLR and also on JavaScript so you can write everything from your uh",
    "start": "752560",
    "end": "758079"
  },
  {
    "text": "server code to your front end code to your windows code in if you want to uh",
    "start": "758079",
    "end": "764000"
  },
  {
    "text": "but uh the great thing about uh one of the great things about closure is it has great Java integration so if you want to",
    "start": "764000",
    "end": "772519"
  },
  {
    "text": "do something that you know if you picked up common lisp or or some sort of more esoteric version of lisp and there was",
    "start": "772519",
    "end": "778920"
  },
  {
    "text": "no library for it uh you'd have to write it yourself uh closure you can open up",
    "start": "778920",
    "end": "784320"
  },
  {
    "text": "any Java library and just use the Java functions directly from closure so you can sort of go across the barrier and",
    "start": "784320",
    "end": "791959"
  },
  {
    "text": "use any of that stuff in your current code base which makes it you know very easy to adopt right there's no fear",
    "start": "791959",
    "end": "798120"
  },
  {
    "text": "around you know what if we have to suddenly process a bunch of XML files will we be able to do that yes you will",
    "start": "798120",
    "end": "803199"
  },
  {
    "text": "because you have full access to all of java under this behind the scenes um",
    "start": "803199",
    "end": "809600"
  },
  {
    "text": "one common reaction to uh lists though is whenever you say list people think of",
    "start": "809600",
    "end": "814639"
  },
  {
    "text": "this sort of thing uh lots of parenthesis uh we haven't had a problem",
    "start": "814639",
    "end": "820760"
  },
  {
    "text": "the tooling around it uh intell uh has pretty good support at this point um we",
    "start": "820760",
    "end": "827279"
  },
  {
    "text": "had a bunch of guys like I said who were sort of PhD mathematicians uh so they",
    "start": "827279",
    "end": "833160"
  },
  {
    "text": "were used to using emac anyway so um it it it worked out well for us in this",
    "start": "833160",
    "end": "838480"
  },
  {
    "text": "space um but uh it's a lot different you know you can't uh one thing we looked at",
    "start": "838480",
    "end": "845399"
  },
  {
    "text": "Scala and it it seemed to me that you could write bad uh Java and Scala uh you",
    "start": "845399",
    "end": "852279"
  },
  {
    "text": "could make stuff a Scala that looked a lot like Java um you can't write stuff that looks like Java enclosure it's a",
    "start": "852279",
    "end": "859079"
  },
  {
    "text": "total mind shift in another Direction excuse",
    "start": "859079",
    "end": "864800"
  },
  {
    "text": "me um and uh you know one thing this is a quote from uh Paul",
    "start": "864800",
    "end": "871720"
  },
  {
    "text": "Graham who who runs y combinator uh they said they wrote their software in lists",
    "start": "871720",
    "end": "877120"
  },
  {
    "text": "uh because they'll be able to get features done faster than our competitors and do things software they couldn't do um we have a 10p person data",
    "start": "877120",
    "end": "884320"
  },
  {
    "text": "team eight or actually I think nine person data team uh we know that some of our partners have you know 5x 10x data",
    "start": "884320",
    "end": "892759"
  },
  {
    "text": "teams that we have and uh for some reason uh we tend to have models that",
    "start": "892759",
    "end": "898279"
  },
  {
    "text": "perform five or 10 times better than them uh and we know that because they've told us that and then they ask us How We",
    "start": "898279",
    "end": "903639"
  },
  {
    "text": "Do It um and we do it because we have uh a whole bunch of uh list functions that",
    "start": "903639",
    "end": "911040"
  },
  {
    "text": "we just thread together and we have teams that can iterate and move really fast on it like we've really",
    "start": "911040",
    "end": "916680"
  },
  {
    "text": "concentrated on on our tool set so we can move fast here here is a calog",
    "start": "916680",
    "end": "924519"
  },
  {
    "text": "example um so one downside of this is you have to learn closure and you have",
    "start": "924519",
    "end": "930759"
  },
  {
    "text": "to learn uh data log so data log is a uh declarative language uh that you know is",
    "start": "930759",
    "end": "938360"
  },
  {
    "text": "the equivalent to SQL in logic terms but uh uh not a lot of people are actually",
    "start": "938360",
    "end": "943480"
  },
  {
    "text": "familiar with it um I'll just let you guys absorb this for a second I'm going to walk through in depth here in a few",
    "start": "943480",
    "end": "949519"
  },
  {
    "text": "more slides on what's Happening Here but uh uh just to give you a quick overview",
    "start": "949519",
    "end": "954759"
  },
  {
    "text": "uh we work in uh add calls and clicks so we pull them in here uh we split them out into vectors uh we",
    "start": "954759",
    "end": "961319"
  },
  {
    "text": "sum up some amounts uh and then we don't really care about the amounts we just want to see if it's a one or zero so",
    "start": "961319",
    "end": "966680"
  },
  {
    "text": "I'll walk through an example with this code here in a few minutes um data log I already said",
    "start": "966680",
    "end": "972839"
  },
  {
    "text": "something about uh it's a declarative logic program language that is syntactically a subset of prologue does",
    "start": "972839",
    "end": "978560"
  },
  {
    "text": "anybody know prologue okay wow all right seven people",
    "start": "978560",
    "end": "985319"
  },
  {
    "text": "more than I would have imagined um it's it's the sort of thing that sort of",
    "start": "985319",
    "end": "990639"
  },
  {
    "text": "bends your mind the first time you you see it um it it it you just tell the",
    "start": "990639",
    "end": "996519"
  },
  {
    "text": "computer what you want and it figures out how to get it for you you don't have to worry about left joins or right joins you just say um you know user first name",
    "start": "996519",
    "end": "1004600"
  },
  {
    "text": "user last name uh give me user first name and last name and it figures out",
    "start": "1004600",
    "end": "1009880"
  },
  {
    "text": "how to join the users together you can say you know user company right and it'll figure out how to pull it all",
    "start": "1009880",
    "end": "1015880"
  },
  {
    "text": "together and you can say give me start with the company and then show me all the users there and it figures out how to join the data behind the scenes to to",
    "start": "1015880",
    "end": "1022199"
  },
  {
    "text": "give you everything um it's it's it's way too much to cover here uh and it's",
    "start": "1022199",
    "end": "1027520"
  },
  {
    "text": "definitely the one downside the big biggest downside of this is is people coming up the learn curve on this takes",
    "start": "1027520",
    "end": "1032839"
  },
  {
    "text": "takes a few weeks to a few months to really figure out everything that's happening here um so that's a whirlwind tour of",
    "start": "1032839",
    "end": "1040120"
  },
  {
    "text": "our history with this stuff and I'll dig deeper into some of the stuff as we go forward here um I want to give you guys",
    "start": "1040120",
    "end": "1046038"
  },
  {
    "text": "a quick uh uh tour though of each of those things I just talked about uh with the sort of hello world of uh of uh",
    "start": "1046039",
    "end": "1055080"
  },
  {
    "text": "Hadoop uh which is uh word count example we don't do Hello World in Hadoop we do",
    "start": "1055080",
    "end": "1060400"
  },
  {
    "text": "word count so um every single Hadoop framework implements here's a bunch of",
    "start": "1060400",
    "end": "1066120"
  },
  {
    "text": "text Files full of words tell me how many words or how many times each word occurs in all the files together so uh",
    "start": "1066120",
    "end": "1074360"
  },
  {
    "text": "here's this and SQL I'm assuming everyone knows SQL uh but it's B basically select all the words from the",
    "start": "1074360",
    "end": "1080640"
  },
  {
    "text": "words and group by the words and give me a count at the end of the day um here's this example in Java the",
    "start": "1080640",
    "end": "1089240"
  },
  {
    "text": "first thing we talked about uh I can't read it either but uh",
    "start": "1089240",
    "end": "1095559"
  },
  {
    "text": "it's it's like I said this is Assembly Language of Hadoop you're you're pulling together this is a mapper this is a",
    "start": "1095559",
    "end": "1100880"
  },
  {
    "text": "reducer you got to thread everything together uh pull out all the words you have to decide whether you're going to count them here uh",
    "start": "1100880",
    "end": "1109159"
  },
  {
    "text": "this this isn't counting them here it's just if you took this phrase hello world by world uh it would count each of them",
    "start": "1109159",
    "end": "1114919"
  },
  {
    "text": "once uh combines them over here um an optimization would be to add them up",
    "start": "1114919",
    "end": "1120799"
  },
  {
    "text": "here uh on the mapper and then read them again later so you don't have to go through the entire list um those",
    "start": "1120799",
    "end": "1126559"
  },
  {
    "text": "optimizations are taken care of for you in most of the higher level Frameworks you don't have to worry about where to",
    "start": "1126559",
    "end": "1131760"
  },
  {
    "text": "put this uh generally speaking um here is word count in pig",
    "start": "1131760",
    "end": "1139280"
  },
  {
    "text": "load a file um flatten the file tokenize it out into words Group by word uh for",
    "start": "1139280",
    "end": "1148520"
  },
  {
    "text": "each C generate or sorry for each D generate account and then store it out into a file somewhere so uh you know if",
    "start": "1148520",
    "end": "1156240"
  },
  {
    "text": "you squint at this you can see SQL right uh they're similar to SQL uh but it's",
    "start": "1156240",
    "end": "1163400"
  },
  {
    "text": "kind of its own thing and and its own language um this is a word count in uh",
    "start": "1163400",
    "end": "1170400"
  },
  {
    "text": "Java version of cascading I apologize for all the comments in here should have taken them out but again it's uh this is",
    "start": "1170400",
    "end": "1178600"
  },
  {
    "text": "where we're pulling from what file we're pulling from you create a pipe you create some assemblies a group by and",
    "start": "1178600",
    "end": "1184840"
  },
  {
    "text": "each uh aggregate so you have a new count here new every and then uh spit it",
    "start": "1184840",
    "end": "1190360"
  },
  {
    "text": "out of the other end so again this is like more the way you want to think about these problems instead of the the",
    "start": "1190360",
    "end": "1195880"
  },
  {
    "text": "Java thing that we looked at on the slide before this and this is work out in",
    "start": "1195880",
    "end": "1204039"
  },
  {
    "text": "calog um so again back to the the data log uh stuff here sentence is just a",
    "start": "1204039",
    "end": "1212440"
  },
  {
    "text": "group of sentences so it's a separate definition somewhere um this says take sentences and put it",
    "start": "1212440",
    "end": "1219559"
  },
  {
    "text": "into line this says uh for each of those lines tokenize out everything and put it",
    "start": "1219559",
    "end": "1226159"
  },
  {
    "text": "into words um and then this counts all the words and it knows",
    "start": "1226159",
    "end": "1233000"
  },
  {
    "text": "to join that together with this because the output we want is word and count right so this function is going to fill",
    "start": "1233000",
    "end": "1240000"
  },
  {
    "text": "in this with all the possible words and then this is going to say all right well let's just roll that up it's just a",
    "start": "1240000",
    "end": "1245280"
  },
  {
    "text": "higher level function that works across the the first level of output here to roll up a count at",
    "start": "1245280",
    "end": "1251039"
  },
  {
    "text": "then um this is a query generator so you can",
    "start": "1251039",
    "end": "1256520"
  },
  {
    "text": "set up a bunch of different queries uh and join them together and then this causes execution and this is your output",
    "start": "1256520",
    "end": "1263400"
  },
  {
    "text": "to standard out you can have a file in here whatever you want um but basically we we uh construct a lot of queries like",
    "start": "1263400",
    "end": "1270159"
  },
  {
    "text": "this and then we combine them together and and execute them to do what we want to do but you can test them in isolation",
    "start": "1270159",
    "end": "1275679"
  },
  {
    "text": "you can build up small queries and aggregate ultimately your output at the end of the",
    "start": "1275679",
    "end": "1280799"
  },
  {
    "text": "day um oh and just for completeness sake there was a this is a function",
    "start": "1280799",
    "end": "1287039"
  },
  {
    "text": "uh and this is the definition of the function this is just uh tokenized take a line and split out into words just",
    "start": "1287039",
    "end": "1293080"
  },
  {
    "text": "like we've seen in all these examples so far um so I'm going to go right from",
    "start": "1293080",
    "end": "1301840"
  },
  {
    "text": "those hello world examples right straight into a CasCal overview um I'm going to give credit to my head of data",
    "start": "1301840",
    "end": "1307880"
  },
  {
    "text": "science this is actually a talk that he gave uh and I've stolen and embedded inside of my talk uh and redone a little",
    "start": "1307880",
    "end": "1313799"
  },
  {
    "text": "bit so uh his Talk's actually here um this is the function that we saw earlier",
    "start": "1313799",
    "end": "1320360"
  },
  {
    "text": "uh the generate model data function and I'm just going to walk through it sort of line by line um these",
    "start": "1320360",
    "end": "1328240"
  },
  {
    "text": "are pre- aggregators so these are generators these pull in things uh this takes add copy and turns it new",
    "start": "1328240",
    "end": "1334559"
  },
  {
    "text": "impression ID and AD copy which you can see here impression one uh add copy by",
    "start": "1334559",
    "end": "1339720"
  },
  {
    "text": "this product it's a really great call to action uh does this for all the",
    "start": "1339720",
    "end": "1345279"
  },
  {
    "text": "different ads so impression two impression three impression four uh this does the same thing for clicks so it",
    "start": "1345279",
    "end": "1351120"
  },
  {
    "text": "takes the click IDs the impression ID uh purchase amount and puts it over there",
    "start": "1351120",
    "end": "1357720"
  },
  {
    "text": "um and then uh the next thing that cases is going to do is is join these together",
    "start": "1357720",
    "end": "1363880"
  },
  {
    "text": "uh just because uh this is impression idea and this",
    "start": "1363880",
    "end": "1370039"
  },
  {
    "text": "impression idea are the same thing so it figures out that uh impression one uh",
    "start": "1370039",
    "end": "1376120"
  },
  {
    "text": "uses this ad copy and spits out uh uh sorry there shouldn't be two Nils there",
    "start": "1376120",
    "end": "1381840"
  },
  {
    "text": "should there oh yeah sorry and and joins it with the click so this impression joins with click two this ex turns to",
    "start": "1381840",
    "end": "1387039"
  },
  {
    "text": "click three this turns to click one um and ultimately puts out the purchase amount at the",
    "start": "1387039",
    "end": "1393320"
  },
  {
    "text": "end uh this is another uh aggregation upwards uh where we're doing a word",
    "start": "1393440",
    "end": "1400240"
  },
  {
    "text": "split so these are the same things we're just splitting out uh the name by this product into a vector or great deal into",
    "start": "1400240",
    "end": "1406559"
  },
  {
    "text": "a vector uh this sum does an aggregation so we just roll things up uh Impressions words uh",
    "start": "1406559",
    "end": "1415400"
  },
  {
    "text": "and the amount spent there for each click and then uh maybe if we wanted to",
    "start": "1415400",
    "end": "1422799"
  },
  {
    "text": "a lot of times we don't care that this cost $100 or 100 cents or whatever that is uh we just need a binary number so",
    "start": "1422799",
    "end": "1429360"
  },
  {
    "text": "this is just a function that does two binary gives us minus one or plus one and then these",
    "start": "1429360",
    "end": "1434600"
  },
  {
    "text": "are model datas that we feed into our model uh uh it's data that's been processed but um this would have been a",
    "start": "1434600",
    "end": "1442440"
  },
  {
    "text": "lot of explicit joining or a lot of explicit code to get to this point uh if",
    "start": "1442440",
    "end": "1447640"
  },
  {
    "text": "we weren't using calog do I want to do this this is",
    "start": "1447640",
    "end": "1454120"
  },
  {
    "text": "always a bad idea do it do it all right all right let's see here",
    "start": "1454120",
    "end": "1461000"
  },
  {
    "text": "so oops where is this okay this is emac",
    "start": "1461000",
    "end": "1469200"
  },
  {
    "text": "uh on the left here we",
    "start": "1469200",
    "end": "1476360"
  },
  {
    "text": "have really horribly wrapped version of what we just saw this is ADD copy and",
    "start": "1476559",
    "end": "1482000"
  },
  {
    "text": "clicks uh and this is the generate model data function and normally if you have a",
    "start": "1482000",
    "end": "1488600"
  },
  {
    "text": "screen with enough real State this doesn't wrap like this but you can just trust me it's the same function um this",
    "start": "1488600",
    "end": "1494240"
  },
  {
    "text": "is just a reppel a closure reppel so this is where I can just run code um and this is output which hopefully will show",
    "start": "1494240",
    "end": "1500520"
  },
  {
    "text": "up here if it actually works um so if I do",
    "start": "1500520",
    "end": "1507200"
  },
  {
    "text": "this um you can see here that you know I'm just running that function let me see if I actually get to the output here",
    "start": "1512320",
    "end": "1519480"
  },
  {
    "text": "at the bottom yep scroll by um here's similar output this isn't",
    "start": "1519480",
    "end": "1526000"
  },
  {
    "text": "exactly the same code as before but this is sort of your output I'm just outputting to standard out in this case but you can see here if you look at sort",
    "start": "1526000",
    "end": "1533159"
  },
  {
    "text": "of what scrolled by this isn't just running a function on this data this is actually spinning up uh a local version",
    "start": "1533159",
    "end": "1539919"
  },
  {
    "text": "Hadoop in the background and feeding this through a bunch of mappers and reducers locally uh that quickly so you",
    "start": "1539919",
    "end": "1545840"
  },
  {
    "text": "can test all this stuff uh just using things like this to to feed it out the",
    "start": "1545840",
    "end": "1551080"
  },
  {
    "text": "other end if you have example data there um and the output look correct so that",
    "start": "1551080",
    "end": "1559039"
  },
  {
    "text": "actually worked I think that's the first time in a talk that a demo has ever worked so",
    "start": "1559039",
    "end": "1565640"
  },
  {
    "text": "it's super simple um uh here are some calog uh",
    "start": "1565640",
    "end": "1572200"
  },
  {
    "text": "operations uh that we use uh built-in filter operations you can you can have a",
    "start": "1572200",
    "end": "1577520"
  },
  {
    "text": "limit so you can have everything below a certain number you can have fixed samples you can reparse data you can",
    "start": "1577520",
    "end": "1582679"
  },
  {
    "text": "take the first n number of of uh values out of something to to",
    "start": "1582679",
    "end": "1588279"
  },
  {
    "text": "remove uh Peaks and spikes in data um there's a lot of aggregation averages",
    "start": "1588279",
    "end": "1593320"
  },
  {
    "text": "You Can Count things you can count things with nulls or without NS um you have a distinct count for things maximum",
    "start": "1593320",
    "end": "1599679"
  },
  {
    "text": "minimum sums all the things you sort of expect from a data processing framework um higher order functions uh any all",
    "start": "1599679",
    "end": "1607000"
  },
  {
    "text": "each you can write functions uh with anything that you'd sort of expect in sort of a high level lisby like",
    "start": "1607000",
    "end": "1613559"
  },
  {
    "text": "language um and this is sort of the workflow we file so we take a sample of our data",
    "start": "1613559",
    "end": "1618960"
  },
  {
    "text": "set uh we write some functions we unit unit test the functions individually right uh you know one of the things I I",
    "start": "1618960",
    "end": "1625559"
  },
  {
    "text": "said earlier uh you know testing the Java piece or testing um uh some of the",
    "start": "1625559",
    "end": "1632679"
  },
  {
    "text": "older code some of the pig code you had to run the whole file it was hard to break things out and say I just want to test this line I just want to test this",
    "start": "1632679",
    "end": "1638679"
  },
  {
    "text": "function and make sure it's working correctly um then you can end to end test the whole workflow uh and then we",
    "start": "1638679",
    "end": "1645760"
  },
  {
    "text": "just push it straight to our cluster and and run against all the to see if it works um one thing we found here is we",
    "start": "1645760",
    "end": "1653960"
  },
  {
    "text": "used to do a lot of work um when we used especially when we used Java and and to a lesser extent when we used Pig uh we",
    "start": "1653960",
    "end": "1661200"
  },
  {
    "text": "do a lot of this work initially using r or python or something like that just because it was easier to reason with",
    "start": "1661200",
    "end": "1667120"
  },
  {
    "text": "right you didn't want to go into you know figure out what the map produce algorithm was for something when you didn't know if it was going to work um",
    "start": "1667120",
    "end": "1674120"
  },
  {
    "text": "we've really converged on uh sort of one workflow at this point point where the experimentation uh the data team does is",
    "start": "1674120",
    "end": "1680559"
  },
  {
    "text": "really the same thing that pushes to production at the end of the day and I think that's one of the big advantages here um like I said we have eight or",
    "start": "1680559",
    "end": "1687360"
  },
  {
    "text": "nine uh data scientists uh and we have probably 15 to 20 different model",
    "start": "1687360",
    "end": "1694320"
  },
  {
    "text": "variations out and running and being tested on different partners at any given time um it just makes it super",
    "start": "1694320",
    "end": "1699679"
  },
  {
    "text": "fast to do all these and and you can imagine as you build up a library of functions and start to learn what they do you just piece them together and",
    "start": "1699679",
    "end": "1705840"
  },
  {
    "text": "change a small thing and that's how you get next thing or you worry about um just working on one thing instead of",
    "start": "1705840",
    "end": "1711840"
  },
  {
    "text": "reading an old Pig file copying it over you know pulling the pieces apart that sort of",
    "start": "1711840",
    "end": "1718039"
  },
  {
    "text": "thing um here's an example of how to test some of this stuff so this I showed",
    "start": "1718640",
    "end": "1725799"
  },
  {
    "text": "you the example of uh testing it in a repple and actually sping up a dupe",
    "start": "1725799",
    "end": "1730880"
  },
  {
    "text": "cluster uh what this does is if you imagine that Max followers query has a",
    "start": "1730880",
    "end": "1736000"
  },
  {
    "text": "bunch of queries inside of it um you can say all right well there might be a complex subquery I don't want",
    "start": "1736000",
    "end": "1742200"
  },
  {
    "text": "to run that I can just say provided that this outputs this when I run this",
    "start": "1742200",
    "end": "1747440"
  },
  {
    "text": "function it should produce this so this is your check here this is where you try to figure out what it's producing so",
    "start": "1747440",
    "end": "1754320"
  },
  {
    "text": "you've sort of mocked out this function inside of here and then run this function knowing that this is going to",
    "start": "1754320",
    "end": "1760279"
  },
  {
    "text": "return this inside of here and verify that it produces Rich has the most",
    "start": "1760279",
    "end": "1766159"
  },
  {
    "text": "followers but again makes it much easier than before to unit test a lot of this stuff you don't have to worry about",
    "start": "1766159",
    "end": "1771559"
  },
  {
    "text": "spinning up clusters and figure out how to do these things um the other thing uh that we use",
    "start": "1771559",
    "end": "1778840"
  },
  {
    "text": "a lot is is something called checkpoint which is just kind of what you expect it to be uh you can build a workflow uh so",
    "start": "1778840",
    "end": "1786720"
  },
  {
    "text": "this is just step one step two step three this is kind of a contrived workflow uh but each one of these steps",
    "start": "1786720",
    "end": "1792519"
  },
  {
    "text": "stores its output somewhere so you can imagine um we have a you know map",
    "start": "1792519",
    "end": "1798039"
  },
  {
    "text": "produced jobs Hadoop jobs that take eight hours and 12 hours and if they die an hour 11 it it's you know not a",
    "start": "1798039",
    "end": "1804960"
  },
  {
    "text": "productive day right uh or people leave and come back the next morning and and see what's going on right so this gives",
    "start": "1804960",
    "end": "1812159"
  },
  {
    "text": "us sort of run the you know normally what happens when you're doing a lot of map reduce Hadoop stuff is the first",
    "start": "1812159",
    "end": "1817919"
  },
  {
    "text": "step takes all the data and squeezes it down into something small so you want to",
    "start": "1817919",
    "end": "1823320"
  },
  {
    "text": "write that somewhere and then you want to be able to start again from there and you know not worry about rerunning step",
    "start": "1823320",
    "end": "1829559"
  },
  {
    "text": "one when you could just run through step two or three so this gives us the ability to step through these pieces and then if it does in here we just start",
    "start": "1829559",
    "end": "1837120"
  },
  {
    "text": "here again and we figure out what the problem is and fix step to uh which has been very helpful on a number of uh",
    "start": "1837120",
    "end": "1843519"
  },
  {
    "text": "occasions you know one thing that's good and bad about Hadoop so we use uh Amazon",
    "start": "1843519",
    "end": "1849480"
  },
  {
    "text": "elastic map produce uh one month a a few months ago we used 5.3 years of CPU time",
    "start": "1849480",
    "end": "1857360"
  },
  {
    "text": "uh on elastic map produce people were spinning up uh 50 machine clusters 100",
    "start": "1857360",
    "end": "1862880"
  },
  {
    "text": "machine clusters which is expensive uh but uh uh We've sort of",
    "start": "1862880",
    "end": "1870480"
  },
  {
    "text": "shut that down but you know this this makes it so easy to spin off a bunch of jobs uh and just especially if you're",
    "start": "1870480",
    "end": "1876399"
  },
  {
    "text": "using Amazon spin up 20 machines spin up 50 machines spin up 30 machines uh that one thing you have to watch uh as you",
    "start": "1876399",
    "end": "1883240"
  },
  {
    "text": "dive into this especially if you do things in that sort of way",
    "start": "1883240",
    "end": "1889000"
  },
  {
    "text": "um so I just want to talk a little bit about the future of where I think some of this stuff is going which to me is",
    "start": "1889000",
    "end": "1894639"
  },
  {
    "text": "how can we move uh even faster um you know a lot of what we've done is is move to a higher level",
    "start": "1894639",
    "end": "1901760"
  },
  {
    "text": "abstraction at the top level so that we can develop faster but then when you actually want to use this stuff you you",
    "start": "1901760",
    "end": "1907760"
  },
  {
    "text": "still have to wait for a giant map produ job to to occur um this is a quote from Dave this",
    "start": "1907760",
    "end": "1914679"
  },
  {
    "text": "morning that I've heard before uh I do is the egb of data processing I think he means Hadoop uh map produce uh so you",
    "start": "1914679",
    "end": "1924120"
  },
  {
    "text": "know we've already built this little layer cake here of everything we do uh next up to me is is how do we replace",
    "start": "1924120",
    "end": "1930840"
  },
  {
    "text": "that piece right like that's the slow piece now we can iterate the hell out of models but we still have to you know",
    "start": "1930840",
    "end": "1936200"
  },
  {
    "text": "when we actually want to operate on several terabytes of data we still go home uh at the very least we go get a",
    "start": "1936200",
    "end": "1942840"
  },
  {
    "text": "long lunch and uh it's really the point where you where a lot of your Fe back slows down so um a lot of work at this",
    "start": "1942840",
    "end": "1950760"
  },
  {
    "text": "point is being done in that space and there's some stuff that we're pretty excited about um in December uh calog",
    "start": "1950760",
    "end": "1958919"
  },
  {
    "text": "2.0 was released uh calog 2.0 takes that sort of high level abstraction that we",
    "start": "1958919",
    "end": "1964919"
  },
  {
    "text": "use and can output to other back ends so it can output to spark uh and storm",
    "start": "1964919",
    "end": "1970000"
  },
  {
    "text": "storm is sort of a real-time processing uh big data processing framework uh and of course cascading um Spark",
    "start": "1970000",
    "end": "1977799"
  },
  {
    "text": "uh the hyperbole on the spark website says run programs up to 100 times faster than Hado m produ in memory or 10 times",
    "start": "1977799",
    "end": "1984240"
  },
  {
    "text": "faster on disk uh we're setting up a cluster I haven't seen it yet but uh I think there's a lot of potential here",
    "start": "1984240",
    "end": "1990559"
  },
  {
    "text": "just to just move faster and really almost interactively start to work with your data um at the same time last week uh",
    "start": "1990559",
    "end": "1998799"
  },
  {
    "text": "cascading 3.0 uh was announced uh the big feature",
    "start": "1998799",
    "end": "2004080"
  },
  {
    "text": "of cascading 3.0 different backends so uh they're they're targeting spark uh",
    "start": "2004080",
    "end": "2010279"
  },
  {
    "text": "storm TZ is another layer another Apache project I think these are all Apache projects like Apache has probably 50",
    "start": "2010279",
    "end": "2017799"
  },
  {
    "text": "different things in the space and figuring out how they all fit together is mind-boggling to some extent TZ is",
    "start": "2017799",
    "end": "2023639"
  },
  {
    "text": "another if you go to the tez website it says we're going to increase the speed of your queries in order of magnitude",
    "start": "2023639",
    "end": "2030039"
  },
  {
    "text": "everybody's really worried about that first order of magnitude right now um but cascading is doing the same thing so",
    "start": "2030039",
    "end": "2036080"
  },
  {
    "text": "either you can use uh uh you can use your CasCal log and output directly to to spark at some point soon or uh we can",
    "start": "2036080",
    "end": "2043679"
  },
  {
    "text": "wire it up to cascading 3.0 in the near future I think this is coming later this summer in order to Output to here and",
    "start": "2043679",
    "end": "2049440"
  },
  {
    "text": "again have have closer to real-time uh data processing stuff and these are big jumps right like if you have to wait",
    "start": "2049440",
    "end": "2055800"
  },
  {
    "text": "eight hours and it goes down to 30 minutes it's it's a huge it's a you know it's 16 models a day instead of one",
    "start": "2055800",
    "end": "2061839"
  },
  {
    "text": "model A Day right and and those are big big jumps for and big movements in the I",
    "start": "2061839",
    "end": "2067320"
  },
  {
    "text": "think eventually uh where we're going to end up is data processing time is going",
    "start": "2067320",
    "end": "2072919"
  },
  {
    "text": "to continue to decrease hopefully by orders of magnitude everybody's working on um you know let's make this really",
    "start": "2072919",
    "end": "2080200"
  },
  {
    "text": "fast and let's make it look more like SQL you want to be able to use um uh you know 10 100 terabytes of data",
    "start": "2080200",
    "end": "2089480"
  },
  {
    "text": "on a couple of boxes and and sort of real time manipulate and use that data and and that's sort of the Holy Grail I",
    "start": "2089480",
    "end": "2095878"
  },
  {
    "text": "think of all these data processing companies right now uh and I think for those of us who who",
    "start": "2095879",
    "end": "2102400"
  },
  {
    "text": "don't want to use SQL uh we'll be able to write our data processing code at high level exraction and then you know",
    "start": "2102400",
    "end": "2108160"
  },
  {
    "text": "let the system figure out the complexity is this do am I going to be able to have enough data here to use this uh sort of",
    "start": "2108160",
    "end": "2114880"
  },
  {
    "text": "in real time or is it so much data I need to use my map produce back in right like you don't have to make that",
    "start": "2114880",
    "end": "2120040"
  },
  {
    "text": "decision anymore if you want to if you want to look at 100 Years of data or wherever we're going to get to eventually you know you're just not",
    "start": "2120040",
    "end": "2126119"
  },
  {
    "text": "going to be able to do it on one box so you're going to have to spit it out into map ruce right but you shouldn't have to you should be able to use the same code",
    "start": "2126119",
    "end": "2132240"
  },
  {
    "text": "to sort of real- time manipulate data as you would uh to manipulate you know pedabytes of data that sort of thing on",
    "start": "2132240",
    "end": "2138520"
  },
  {
    "text": "the back end that's all I've got",
    "start": "2138520",
    "end": "2144640"
  },
  {
    "text": "today",
    "start": "2155800",
    "end": "2158800"
  }
]