[
  {
    "start": "0",
    "end": "137000"
  },
  {
    "text": "I'm very excited to be here um so let me introduce myself I am Marty um so I play",
    "start": "12960",
    "end": "19480"
  },
  {
    "text": "a few different roles I'm currently the CTO for a kind of Boutique Consulting practice called",
    "start": "19480",
    "end": "25320"
  },
  {
    "text": "notional uh we build kind of lots of modern architecture style applications",
    "start": "25320",
    "end": "30800"
  },
  {
    "text": "so lots of distributed architectures um lots of microservices lots of event based streams lots of ETL",
    "start": "30800",
    "end": "39239"
  },
  {
    "text": "um but I also get to spend a lot of my time working on Commercial open source",
    "start": "39239",
    "end": "44320"
  },
  {
    "text": "um so notional pays for me to work on open source projects which are great um and those are kind of the things that",
    "start": "44320",
    "end": "49960"
  },
  {
    "text": "I'm going to be talking about today so um I work on a project called taxi which is a kind of schema language to allow us",
    "start": "49960",
    "end": "57039"
  },
  {
    "text": "to add semantics into our apis um and I work on a project called orbital which works out how to use those",
    "start": "57039",
    "end": "63399"
  },
  {
    "text": "apis to create glue code and a long time ago I used to work on a thing called Swagger spring which was a way of kind",
    "start": "63399",
    "end": "71040"
  },
  {
    "text": "of looking at the code that we write in the spring ecosystem and generating um API specs from it and that's kind of",
    "start": "71040",
    "end": "77840"
  },
  {
    "text": "just like a longwinded way of saying I've spent a long time in my career thinking about apis how we build them",
    "start": "77840",
    "end": "85960"
  },
  {
    "text": "how we consume them how we document them how we publish them how we stitch them together how we break them apart and",
    "start": "85960",
    "end": "92799"
  },
  {
    "text": "I've kind of had this recurring question that started popping up a few years ago which was if we're putting all of this",
    "start": "92799",
    "end": "99720"
  },
  {
    "text": "effort into building machine readable specs and it doesn't really matter the flavor but if I'm writing open API or",
    "start": "99720",
    "end": "106200"
  },
  {
    "text": "Swagger or protuff or AO or raml or or soap if we're building these machine",
    "start": "106200",
    "end": "112759"
  },
  {
    "text": "readable specs why aren't the machines building the glue we write this stuff so",
    "start": "112759",
    "end": "118479"
  },
  {
    "text": "that machines can read it inevitably we give it to another person who looks at it writes a bunch of glue code and",
    "start": "118479",
    "end": "124280"
  },
  {
    "text": "sticks it back in a machine and that just feels like a feels like a bad deal um and that's kind of what I want",
    "start": "124280",
    "end": "130399"
  },
  {
    "text": "to talk about today which is building API integration layers that can build and repair",
    "start": "130399",
    "end": "135560"
  },
  {
    "text": "themselves so before we get into that I'm um I'm actually very excited to announce um a different startup that I'm",
    "start": "135560",
    "end": "142160"
  },
  {
    "start": "137000",
    "end": "397000"
  },
  {
    "text": "I'm launching here today which is um a place where that allows you to buy meat pies via mail order so you come on to",
    "start": "142160",
    "end": "149640"
  },
  {
    "text": "our web service um you put in order we'll cook a meat pie stick it in an envelope and send it to you in 6 to 8",
    "start": "149640",
    "end": "155680"
  },
  {
    "text": "weeks you get a you get a meat pie so we're calling it um shoppie.com um and we have a nice modern",
    "start": "155680",
    "end": "163360"
  },
  {
    "text": "architecture behind shop shoaie so we've got our product API which is a place",
    "start": "163360",
    "end": "169360"
  },
  {
    "text": "it's kind of Pies as an API uh we've got our orders API which lets you buy a pie",
    "start": "169360",
    "end": "176000"
  },
  {
    "text": "via API uh we have our customers API which is a place for the girls and guys who",
    "start": "176000",
    "end": "181400"
  },
  {
    "text": "buy pies VI API uh and then we have our reviews API which if I'm being honest in beta",
    "start": "181400",
    "end": "187319"
  },
  {
    "text": "testing there's been some honesty challenges with and it's kind of devolved into a place where the girls",
    "start": "187319",
    "end": "193120"
  },
  {
    "text": "and guys who buy pies VI apis tell lies about the pies they buy um but this is shoppie.com we're",
    "start": "193120",
    "end": "199040"
  },
  {
    "text": "very excited about it um and we have all of so we have our kind of nice clean um architecture and we've got these open",
    "start": "199040",
    "end": "205920"
  },
  {
    "text": "API specs that describe everything everything that's going on it would be reasonable though in a few",
    "start": "205920",
    "end": "212000"
  },
  {
    "text": "years for this architecture to have kind of transformed a little bit as organizations grow standards start to",
    "start": "212000",
    "end": "218280"
  },
  {
    "text": "diverge people bring in different Technologies they want to play with and so a few years down the line it might start to look like this where I've got",
    "start": "218280",
    "end": "224760"
  },
  {
    "text": "maybe a combination of grpc I've got some raml maybe my reviews API is built",
    "start": "224760",
    "end": "230280"
  },
  {
    "text": "on soap for whatever reason um but I've got like a mix and match of different",
    "start": "230280",
    "end": "235599"
  },
  {
    "text": "API standards in here but they are all machine readable specs but the reality is that there are there",
    "start": "235599",
    "end": "242120"
  },
  {
    "text": "comes a point in these architectures where in order to get stuff done I've got to write some glue getting stuff",
    "start": "242120",
    "end": "248680"
  },
  {
    "text": "done requires glue in these architectures so let's take for example my web app that I want to build so you",
    "start": "248680",
    "end": "255400"
  },
  {
    "text": "can come to me and you can buy a pie so we can cook it and send it to you uh my",
    "start": "255400",
    "end": "260880"
  },
  {
    "text": "web app needs to talk to all of these different Services I need to show you a list of the different types of pies that you can buy I need to you need to be",
    "start": "260880",
    "end": "267840"
  },
  {
    "text": "able to put in your order we've got a we want to track some customer information so we got to talk to that that one and",
    "start": "267840",
    "end": "273440"
  },
  {
    "text": "we want you to be obviously able to put in your review and what ends up is a whole lot of glue sitting inside my web",
    "start": "273440",
    "end": "279800"
  },
  {
    "text": "app now it might be that I don't want to write it all in my web app we might adopt a different pattern like stick a",
    "start": "279800",
    "end": "286680"
  },
  {
    "text": "back end for front end in front of it so the actual glue code's not sitting inside my JavaScript typescript project",
    "start": "286680",
    "end": "292840"
  },
  {
    "text": "maybe we've got some kind of maybe a graphql back end or like an API Gateway",
    "start": "292840",
    "end": "298080"
  },
  {
    "text": "but really all we're doing there is just moving the glue from one place of our stack into another we still have to",
    "start": "298080",
    "end": "304080"
  },
  {
    "text": "write this glue code to stitch everything together if we look at another example",
    "start": "304080",
    "end": "309320"
  },
  {
    "text": "I've got the serverless function that I want to create so whenever you do buy a pie with us we can send you an email",
    "start": "309320",
    "end": "314720"
  },
  {
    "text": "congratulating you on your choice um and so we have this event that that our orders API pops onto a Kafka",
    "start": "314720",
    "end": "322240"
  },
  {
    "text": "topic um so it's a nice protuff message so our serverless function is going to",
    "start": "322240",
    "end": "328039"
  },
  {
    "text": "connect somehow to Kafka um and we've got to deal with all of the protuff of it and decode it but when we when we",
    "start": "328039",
    "end": "335560"
  },
  {
    "text": "look at the message that we're actually um consuming it's it's a little bit I mean there's lots of IDs in there but",
    "start": "335560",
    "end": "341319"
  },
  {
    "text": "there's not a lot of information that I actually need to send an email right so um I've got an order ID I've got a",
    "start": "341319",
    "end": "347800"
  },
  {
    "text": "customer ID I've got a collection of product IDs and I've got a price so if I want to actually construct and send an",
    "start": "347800",
    "end": "353160"
  },
  {
    "text": "email there's a bunch of stuff that I have to do I need to connect to the product API to pull down the names of",
    "start": "353160",
    "end": "358960"
  },
  {
    "text": "the types of P that you've just bought I need to connect to our customers API to get your email address and your and your",
    "start": "358960",
    "end": "365199"
  },
  {
    "text": "first and last name and I've got to connect to the reviews API to include what other people are saying about app",
    "start": "365199",
    "end": "370880"
  },
  {
    "text": "eyes again it's a whole lot of glue so even though we've kind of moved from request response to an asynchronous",
    "start": "370880",
    "end": "376840"
  },
  {
    "text": "pattern we're still there's still a lot of gluc code in there right we haven't solved that problem and again maybe I",
    "start": "376840",
    "end": "383919"
  },
  {
    "text": "might deploy some kind of event enricher thing that goes there or maybe I might shift this obligation up to to my order",
    "start": "383919",
    "end": "390560"
  },
  {
    "text": "producer my event my event producer but I've still just got a bunch of glue",
    "start": "390560",
    "end": "396080"
  },
  {
    "text": "code so let's talk about that let's talk about glue and why it's bad getting stuff done requires glue",
    "start": "396080",
    "end": "404360"
  },
  {
    "start": "397000",
    "end": "722000"
  },
  {
    "text": "this thing keeps falling off getting stuff done requires glue that is a problem for us because it is time consuming this glue code that we write",
    "start": "404360",
    "end": "411720"
  },
  {
    "text": "they're not features they're not the things that we're in the business of doing we here at shoer pie are not a",
    "start": "411720",
    "end": "417160"
  },
  {
    "text": "glue shop we are in the business of mailing pies um but we spending a huge amount of time",
    "start": "417160",
    "end": "422360"
  },
  {
    "text": "riding glue it's low reuse the stuff that we build typically doesn't get reused from",
    "start": "422360",
    "end": "428199"
  },
  {
    "text": "Team to team and it breaks all the time whenever a team makes a change the um",
    "start": "428199",
    "end": "434560"
  },
  {
    "text": "the glue breaks let's dig into that so writing gluc code takes time why is that",
    "start": "434560",
    "end": "440039"
  },
  {
    "text": "well before I can even open up my API and start writing the gluc code there's",
    "start": "440039",
    "end": "445879"
  },
  {
    "text": "a huge amount of stuff that I have to do so right now at shopy we're early we've only got four API so I can hold all of",
    "start": "445879",
    "end": "453199"
  },
  {
    "text": "that in my head but we're going to take on some sweet sweet VC money and further down the road we're going to have",
    "start": "453199",
    "end": "458960"
  },
  {
    "text": "hundreds of apis and so all of a sudden when I get assigned a ticket to work on before I can even start I need to track",
    "start": "458960",
    "end": "466199"
  },
  {
    "text": "down the API that has the information that I need to get or the the capability that I need to consume so before I'm",
    "start": "466199",
    "end": "473000"
  },
  {
    "text": "even kind of out the gate before I've even opened my IDE there's a huge amount of work that I have to do I've got to",
    "start": "473000",
    "end": "478039"
  },
  {
    "text": "find the right API find the team read their API specs maybe read their docs",
    "start": "478039",
    "end": "483720"
  },
  {
    "text": "you know hopefully everything just works but before I've even started there's like this massive archaeology Journey",
    "start": "483720",
    "end": "489560"
  },
  {
    "text": "that I need to go on to find the right API once I have it then I've got to",
    "start": "489560",
    "end": "495360"
  },
  {
    "text": "generate some client code and there's great tooling out there for this but you know more often than not it it doesn't",
    "start": "495360",
    "end": "501840"
  },
  {
    "text": "work kind of first shot you got to you got to do some you know the the clients that they generate require some",
    "start": "501840",
    "end": "507680"
  },
  {
    "text": "work plus I've got to think about now what dependencies is that pulling in have I got the right CFA version what",
    "start": "507680",
    "end": "513800"
  },
  {
    "text": "did that pull in now I've got some kind of Maven dependency transitive hell Purgatory that I've got to fight my way",
    "start": "513800",
    "end": "519320"
  },
  {
    "text": "through so there's a whole chunk of code that I've got to write before I can even send a message and then I've got to think about",
    "start": "519320",
    "end": "525640"
  },
  {
    "text": "how do I orchestrate and sequence these Calles so maybe the team that are storing reviews aren't using the same",
    "start": "525640",
    "end": "531880"
  },
  {
    "text": "set of IDs as the team that are storing products so I've got to resolve some ideas along the way so I've got to think",
    "start": "531880",
    "end": "538399"
  },
  {
    "text": "about how do I sequence these calls how do I orchestrate them together and that's just for one API",
    "start": "538399",
    "end": "544560"
  },
  {
    "text": "call my web client in shopy is talking to four different apis my cloud function",
    "start": "544560",
    "end": "549880"
  },
  {
    "text": "is doing the same thing so I have to repeat that Journey for every single API that I'm talking to and that's just the",
    "start": "549880",
    "end": "555399"
  },
  {
    "text": "functional stuff I need to think about the non-functional stuff like observability and caching and retries",
    "start": "555399",
    "end": "560839"
  },
  {
    "text": "and blocking you know am I going to run out of threads if I'm doing this at scale what about testing what about",
    "start": "560839",
    "end": "565959"
  },
  {
    "text": "parallelism can I do this in sequentially or can I do there's a huge amount of stuff that I need to think",
    "start": "565959",
    "end": "571959"
  },
  {
    "text": "about and so that's hard work right writing gluc code takes time and if there's one thing worse than something",
    "start": "571959",
    "end": "578040"
  },
  {
    "text": "that takes a long time is the fact that we do it over and over and over so gluc",
    "start": "578040",
    "end": "583360"
  },
  {
    "text": "code often isn't reused if we think about a backend for frontend team and a servus function",
    "start": "583360",
    "end": "589720"
  },
  {
    "text": "team the chances are the work that the back end for fronting team did wasn't",
    "start": "589720",
    "end": "595640"
  },
  {
    "text": "kind of like neatly reusable for the serverless function team they didn't produce any artifacts that makes their",
    "start": "595640",
    "end": "601640"
  },
  {
    "text": "lives easier so we have this arduous amount of work that we had to do that we",
    "start": "601640",
    "end": "606920"
  },
  {
    "text": "now have the benefit of doing over and over and over and the net result uh sorry and all",
    "start": "606920",
    "end": "614880"
  },
  {
    "text": "of the work that we do to create it so we have to the glue code isn't often reused plus all of the work that we had to do to create",
    "start": "614880",
    "end": "621839"
  },
  {
    "text": "it and the net result is that we have tightly coupled our Enterprise together so every time that a producer and a",
    "start": "621839",
    "end": "628920"
  },
  {
    "text": "consumer come together and share an API they are now tightly coupled I can't as a producer change my",
    "start": "628920",
    "end": "635360"
  },
  {
    "text": "API without the consumer breaking so changing producers breaks",
    "start": "635360",
    "end": "640639"
  },
  {
    "text": "consumers and this is how we end up in things like the great API versioning Olympics that happens every four years",
    "start": "640639",
    "end": "647240"
  },
  {
    "text": "where we debate whether we're going to stick a version in the URL or whether we're going to stick some Header information in like we we go through a",
    "start": "647240",
    "end": "654639"
  },
  {
    "text": "lot of Hoops to get around the fact that when producers create apis they become tightly coupled to the consumers which",
    "start": "654639",
    "end": "661240"
  },
  {
    "text": "makes changing them hard the worst thing about this is if you are lucky enough to create an API that becomes massively",
    "start": "661240",
    "end": "668639"
  },
  {
    "text": "popular the more popular you become the more expensive it becomes to change",
    "start": "668639",
    "end": "674079"
  },
  {
    "text": "because whenever you change your API all of your consumers now need to change so there's this like horrible Paradox of",
    "start": "674079",
    "end": "680079"
  },
  {
    "text": "success right which is the the more popular apis that we have the more expensive they are to change and so we",
    "start": "680079",
    "end": "685800"
  },
  {
    "text": "tend to maybe create version two and now I've got two sets of apis that I have to maintain because some people just",
    "start": "685800",
    "end": "691720"
  },
  {
    "text": "wouldn't migrate so going back to the first",
    "start": "691720",
    "end": "697320"
  },
  {
    "text": "question if we are building these machine readable API specs and we all agree that building",
    "start": "697320",
    "end": "703800"
  },
  {
    "text": "gluc code sucks then why aren't the machines building the glue for us and the answer",
    "start": "703800",
    "end": "710639"
  },
  {
    "text": "is because they can't and they can't because the apis that we build aren't",
    "start": "710639",
    "end": "715839"
  },
  {
    "text": "Rich enough they don't have enough information to tell us how how to join them",
    "start": "715839",
    "end": "721120"
  },
  {
    "text": "together so if we look at what our apis do tell us they like apis are great at describing a system they tell us lots of",
    "start": "721120",
    "end": "727680"
  },
  {
    "start": "722000",
    "end": "828000"
  },
  {
    "text": "information about a system they tell us where to find it like what's its URL",
    "start": "727680",
    "end": "732920"
  },
  {
    "text": "what port number is it running on what's its IP address what protocols do I use to talk",
    "start": "732920",
    "end": "738440"
  },
  {
    "text": "to you are you hdp hdps are you TCP are you verbs how do I how do I send you a message when I do send you a message how",
    "start": "738440",
    "end": "745480"
  },
  {
    "text": "do I encode it is it Jason is it Evo is it protuff are you going to send me a up and response um and when you send me a",
    "start": "745480",
    "end": "752639"
  },
  {
    "text": "response back what can I expect to receive what are the field names in a map and that's everything that's all of",
    "start": "752639",
    "end": "759600"
  },
  {
    "text": "the machine readable context that our apis tell us so that's really kind of very transport and structure",
    "start": "759600",
    "end": "766880"
  },
  {
    "text": "oriented um there's not a lot else going on in there what's missing from that what the apis don't tell us is what any",
    "start": "766880",
    "end": "774560"
  },
  {
    "text": "of that stuff means right API software that reads those API can't infer any",
    "start": "774560",
    "end": "780519"
  },
  {
    "text": "meaning from the API specs and importantly they don't tell us how the stuff in one API relates to the",
    "start": "780519",
    "end": "787760"
  },
  {
    "text": "stuff from another API so this is all the semantics of our apis and that's what's",
    "start": "787760",
    "end": "795079"
  },
  {
    "text": "missing so when we write our gluc code when we sit down and we get assigned that ticket and we write our gluc code",
    "start": "795079",
    "end": "800839"
  },
  {
    "text": "we create these mental Maps between the structure that we see in our API specs",
    "start": "800839",
    "end": "806079"
  },
  {
    "text": "and the semantics that relate to the thing that we're trying to get done we create these mental Maps but we just",
    "start": "806079",
    "end": "812240"
  },
  {
    "text": "don't have very good ways of capturing it so we create the mental map maybe we write it in confence but that kind of",
    "start": "812240",
    "end": "817720"
  },
  {
    "text": "doesn't count um and we just don't have very good ways of capturing this that are importantly machine",
    "start": "817720",
    "end": "825040"
  },
  {
    "text": "readable okay this part's a bit of a stretch so I'm going to ask you guys to just go along with it but be prepared",
    "start": "825320",
    "end": "832399"
  },
  {
    "start": "828000",
    "end": "1154000"
  },
  {
    "text": "for some mental magic okay Marty the great Mentalist here we go so I'm going to perform some mental magic and I'm",
    "start": "832399",
    "end": "838079"
  },
  {
    "text": "going to make everyone in this room do some stuff in their mind and I'm going to force you to do it you're not",
    "start": "838079",
    "end": "843600"
  },
  {
    "text": "going to be a you can try and resist start singing a song if you want you're not going to be able to resist okay on",
    "start": "843600",
    "end": "850360"
  },
  {
    "text": "the left hand side we have an API contract that describes a customer and on the right hand side we have a",
    "start": "850360",
    "end": "857959"
  },
  {
    "text": "customer okay if we look at what the API contract is telling us it has got some information about how this is encoded",
    "start": "857959",
    "end": "864600"
  },
  {
    "text": "it's a couple of in it's an INT and a couple of strings and it's got some structure Al information some field",
    "start": "864600",
    "end": "872240"
  },
  {
    "text": "names that's it that's everything that the SP tells us so looking at these two",
    "start": "872240",
    "end": "877680"
  },
  {
    "text": "things what do I call this person come on someone shout it out what do I call this person don't leave me standing here",
    "start": "877680",
    "end": "884480"
  },
  {
    "text": "Jimmy there we go it's Jimmy that's right and how did we do that because we looked at the Domain model we looked at",
    "start": "884480",
    "end": "890480"
  },
  {
    "text": "the question and we looked at the data and we built a mental map and I trick you into doing it and I told you I was going to do it and you did it anyway",
    "start": "890480",
    "end": "896720"
  },
  {
    "text": "okay here we go here we go again now what are we we call this person Jim Bob I mean come",
    "start": "896720",
    "end": "905000"
  },
  {
    "text": "on Jimmy that's right we still call him Jimmy even though I changed the um Chang the field name his name is still",
    "start": "905000",
    "end": "912440"
  },
  {
    "text": "Jimmy still Jimmy right I can change this I can change this field name to whatever I want I can even give it some",
    "start": "912440",
    "end": "919079"
  },
  {
    "text": "like random terrible name and we can look at that and if I ask you to answer the question what do I call this person",
    "start": "919079",
    "end": "925040"
  },
  {
    "text": "everyone in the auditorium will all call out there we go Jimmy thank you we got there okay so we can have an opinion",
    "start": "925040",
    "end": "932440"
  },
  {
    "text": "about which of these field names is better right we can have discussions about which are more descript",
    "start": "932440",
    "end": "937600"
  },
  {
    "text": "descriptive which are more appropriate but these are conversations that we will have the software doesn't care here's",
    "start": "937600",
    "end": "944120"
  },
  {
    "text": "another one what is this person's email address what is Jimmy's email address j.com yeah okay here we go here",
    "start": "944120",
    "end": "952160"
  },
  {
    "text": "this is this is the last time I'm going to go through this joke so we're nearly there okay now what's his email address",
    "start": "952160",
    "end": "959480"
  },
  {
    "text": "is still at J food.com thank you yes so even though I changed the structure of the message the semantics haven't",
    "start": "959480",
    "end": "965120"
  },
  {
    "text": "changed right Jimmy's email address is still jf.com",
    "start": "965120",
    "end": "970720"
  },
  {
    "text": "so that mental that mental gymnastics that we just did we do that every single time we build integration building",
    "start": "970720",
    "end": "977800"
  },
  {
    "text": "integration is the pro process of creating mental Maps between the structure that's sitting in the API specs and the semantics of how we need",
    "start": "977800",
    "end": "985040"
  },
  {
    "text": "to consume it and field names are structural they are not semantic so they're clues for",
    "start": "985040",
    "end": "992399"
  },
  {
    "text": "you and I they're human readable Clues around what this message might mean and again we can debate which field name is",
    "start": "992399",
    "end": "998639"
  },
  {
    "text": "more appropriate but they're not semantic contracts I can change the field name as",
    "start": "998639",
    "end": "1004360"
  },
  {
    "text": "I've just done without changing the meaning so all that changes when I change the field name is the mapping",
    "start": "1004360",
    "end": "1010759"
  },
  {
    "text": "that we have to perform and in fact if I do change the field name even though the meaning hasn't changed the decoding will",
    "start": "1010759",
    "end": "1017839"
  },
  {
    "text": "break so these these contracts that we're entering into are structural they're not semantic here's another",
    "start": "1017839",
    "end": "1024438"
  },
  {
    "text": "example kind of slightly more slightly richer I've got three different systems one that deals with customer information",
    "start": "1024439",
    "end": "1030319"
  },
  {
    "text": "one that deals with credit cards and another one that has balances three different um three different API contracts three different",
    "start": "1030319",
    "end": "1037240"
  },
  {
    "text": "Blobs of data and if you squint and look a little bit we can start to see some relationships appear we can see that the",
    "start": "1037240",
    "end": "1044760"
  },
  {
    "text": "ID field from customer is the same bit of information as the customer number from cards so these are two separate",
    "start": "1044760",
    "end": "1050960"
  },
  {
    "text": "systems one lives in a database maybe one lives in a rest API encoded in different ways described in different",
    "start": "1050960",
    "end": "1056559"
  },
  {
    "text": "formats but the same bit of information likewise the account number",
    "start": "1056559",
    "end": "1061600"
  },
  {
    "text": "sorry the card number from our card model is the same bit of information as on our balance different field names",
    "start": "1061600",
    "end": "1068160"
  },
  {
    "text": "different systems different ways of capturing and recording this the same bit of information unfortunately our API speaks",
    "start": "1068160",
    "end": "1075320"
  },
  {
    "text": "have no way of communicating that these things are related even though they clearly",
    "start": "1075320",
    "end": "1080480"
  },
  {
    "text": "are so really this is what we want to be able to say that the ID that lives in our customer model is not just any old",
    "start": "1080480",
    "end": "1087480"
  },
  {
    "text": "integer it is a customer ID it has some semantic value that goes with it right it belongs to a semantic contract which",
    "start": "1087480",
    "end": "1094159"
  },
  {
    "text": "is different from the way that you encode it which is different from the way that I talk to you to discover it this is the semantic meaning of it so",
    "start": "1094159",
    "end": "1101120"
  },
  {
    "text": "the C the customer number on the cards model has the same semantic meaning this one lives in a database that one came",
    "start": "1101120",
    "end": "1106320"
  },
  {
    "text": "from a GPC core right same bit of information it's how these two apis",
    "start": "1106320",
    "end": "1111799"
  },
  {
    "text": "relate same with our card number and so really this is kind of closer to the",
    "start": "1111799",
    "end": "1116960"
  },
  {
    "text": "contract that we need if we want to be able to start to be able to build these systems that talk to",
    "start": "1116960",
    "end": "1123200"
  },
  {
    "text": "themselves and that's what texi is texi is a way of us creating as formal",
    "start": "1123200",
    "end": "1130480"
  },
  {
    "text": "contracts these semantic ideas we create them as Standalone entities that just",
    "start": "1130480",
    "end": "1136679"
  },
  {
    "text": "describe that a customer is not just any old integer it is a customer",
    "start": "1136679",
    "end": "1141960"
  },
  {
    "text": "ID so taxi a nice open source thingy lives up on GitHub go and grab the um go",
    "start": "1141960",
    "end": "1147400"
  },
  {
    "text": "and grab the code give it a star but it is semantic metadata for apis which is basically a fancy way of",
    "start": "1147400",
    "end": "1155039"
  },
  {
    "start": "1154000",
    "end": "1488000"
  },
  {
    "text": "saying this thing is the same as that thing that is the goal of taxi to allow us to say in our apis this thing and",
    "start": "1155039",
    "end": "1162440"
  },
  {
    "text": "that thing are the same so where API specs tell us about",
    "start": "1162440",
    "end": "1167919"
  },
  {
    "text": "transport andru structure where are you how do I talk to you how do I call you what will you give me the where and the",
    "start": "1167919",
    "end": "1174520"
  },
  {
    "text": "how taxi focuses on semantics what does this mean what is",
    "start": "1174520",
    "end": "1179960"
  },
  {
    "text": "the relationship between this thing and something else it's intended to be embeddable so",
    "start": "1179960",
    "end": "1187120"
  },
  {
    "text": "you can take your taxi definitions and embed them in your existing API specs it's not there to replace API specs it",
    "start": "1187120",
    "end": "1193480"
  },
  {
    "text": "doesn't care about encoding you can't express in taxi how to write something as protuff",
    "start": "1193480",
    "end": "1199720"
  },
  {
    "text": "um so you embed it in your existing API specs it is however a very rich semantic",
    "start": "1199720",
    "end": "1205679"
  },
  {
    "text": "type system it's got a nice big compiler that sits behind it a bunch of build tooling that is able to create this in a",
    "start": "1205679",
    "end": "1212039"
  },
  {
    "text": "typesafe way so that we can make these assertions and get mod modern static",
    "start": "1212039",
    "end": "1217240"
  },
  {
    "text": "type cheing to make sure that we are making sensible decisions uh you can use it to write",
    "start": "1217240",
    "end": "1222679"
  },
  {
    "text": "Standalone API specs in certain circumstances so you could use it as an open open API alter alternative",
    "start": "1222679",
    "end": "1229240"
  },
  {
    "text": "at notional we do you probably won't um but it's a nice kind of Tura way of",
    "start": "1229240",
    "end": "1235200"
  },
  {
    "text": "expressing it's it's a dedicated DSL so you don't have any of the yaml or Json noise but you can use it for things that",
    "start": "1235200",
    "end": "1242000"
  },
  {
    "text": "maybe don't have an API spec like a CSV file that you're ingesting so if we look back at our",
    "start": "1242000",
    "end": "1248760"
  },
  {
    "text": "example of our kind of three different systems there's our blob of Taxi and customer has this open API spec and so I",
    "start": "1248760",
    "end": "1257200"
  },
  {
    "text": "can embed in my open API to say that this field isn't just any old int32 it",
    "start": "1257200",
    "end": "1262960"
  },
  {
    "text": "is a customer ID so I can add in the missing semantics likewise in my protuff spec I",
    "start": "1262960",
    "end": "1269760"
  },
  {
    "text": "can say that the customer number here has a different name but has the same carries the same semantic contract as",
    "start": "1269760",
    "end": "1276279"
  },
  {
    "text": "what's over in my open API spec importantly I'm doing this without tightly coupling the two specs together they don't know anything about each",
    "start": "1276279",
    "end": "1282440"
  },
  {
    "text": "other they just carry the same semantic contract and the teams that are building",
    "start": "1282440",
    "end": "1288000"
  },
  {
    "text": "the balances Services their code first rather than spec first so they're generating cotland code they're writing",
    "start": "1288000",
    "end": "1294240"
  },
  {
    "text": "cotland code for example and generating their apis out of that and so directly in the cotland code we can embed the",
    "start": "1294240",
    "end": "1300799"
  },
  {
    "text": "same semantic information so when we generate our specs it can carry along with it so the point is that the",
    "start": "1300799",
    "end": "1307799"
  },
  {
    "text": "semantics are intended to be embedded in our existing apis we don't want to couple them together but we do want to",
    "start": "1307799",
    "end": "1313120"
  },
  {
    "text": "add these markers to say this thing is the same as that thing",
    "start": "1313120",
    "end": "1319000"
  },
  {
    "text": "this thing is the same as that thing capture that information the same information that we work out when we are",
    "start": "1319159",
    "end": "1325640"
  },
  {
    "text": "manually going through that process of building that map that we do in our minds and embed it in our API specs so",
    "start": "1325640",
    "end": "1331919"
  },
  {
    "text": "that we don't have to do it over and over and over again so going back to our going back to",
    "start": "1331919",
    "end": "1338679"
  },
  {
    "text": "our question if we are building machine readable API specs and we agree that",
    "start": "1338679",
    "end": "1344000"
  },
  {
    "text": "building glue code sucks and our apis have semantic metod",
    "start": "1344000",
    "end": "1349159"
  },
  {
    "text": "data why can't the machines build the glue they can",
    "start": "1349159",
    "end": "1356399"
  },
  {
    "text": "hooray so I want to take a look at an example right so if we if we look at our",
    "start": "1356840",
    "end": "1362320"
  },
  {
    "text": "three different systems that we had before so we've got our customer system we've got our cards database um and",
    "start": "1362320",
    "end": "1368640"
  },
  {
    "text": "we've got our soap API that has transactions and balances and stuff so and the question is given this email",
    "start": "1368640",
    "end": "1374960"
  },
  {
    "text": "address what do this customer's account balance now in our API specs we have not",
    "start": "1374960",
    "end": "1380039"
  },
  {
    "text": "just the structure but we've also added in our our semantic metadata so we know that the email field on our rest API",
    "start": "1380039",
    "end": "1387480"
  },
  {
    "text": "isn't just any old string it is an email address and we know that these two",
    "start": "1387480",
    "end": "1392880"
  },
  {
    "text": "Fields even though they're in different systems and they have different protocols and they're on different API specs they have the same semantic bit of",
    "start": "1392880",
    "end": "1399400"
  },
  {
    "text": "information they are both customer IDs and so on and so forth and so we can take our API specs enriched with this",
    "start": "1399400",
    "end": "1406679"
  },
  {
    "text": "API enriched with the semantic metadata and publish them somewhere and in doing so we can create",
    "start": "1406679",
    "end": "1413480"
  },
  {
    "text": "this big old graph that lets us understand not just where our services",
    "start": "1413480",
    "end": "1418679"
  },
  {
    "text": "are but how does the data between them relate and so when we get given this question of given this email address",
    "start": "1418679",
    "end": "1424919"
  },
  {
    "text": "what's the customer account balance software now can work it out without us having to write the glue code",
    "start": "1424919",
    "end": "1431080"
  },
  {
    "text": "there's enough information for us to be able to say well for the software to workout the first thing it has to do is",
    "start": "1431080",
    "end": "1437400"
  },
  {
    "text": "arrest API call to swap the email address for a customer ID and then do a database query to swap",
    "start": "1437400",
    "end": "1443440"
  },
  {
    "text": "the customer ID for a card number and then do a soap request to find out that Jimmy's got 29",
    "start": "1443440",
    "end": "1449760"
  },
  {
    "text": "quid and we can do this now without having to write any glue code because the structural API specs tell us how to",
    "start": "1449760",
    "end": "1455919"
  },
  {
    "text": "talk to you they tell you tell us where these services are how to encode them what kind of requests to build and the",
    "start": "1455919",
    "end": "1461960"
  },
  {
    "text": "semantic metadata tells us now what information to put in there and then we can use this graph to work out and build",
    "start": "1461960",
    "end": "1468880"
  },
  {
    "text": "a path from one thing from the thing I know like Jimmy's email address to the thing I want to find out which is his",
    "start": "1468880",
    "end": "1474640"
  },
  {
    "text": "account balance and all we have to do is ask the question which is given this",
    "start": "1474640",
    "end": "1480240"
  },
  {
    "text": "email address of jimmy.com what's account balance and that's taql it's the other",
    "start": "1480240",
    "end": "1486600"
  },
  {
    "text": "half of Taxi the query language that goes with it the ability to ask for data",
    "start": "1486600",
    "end": "1492120"
  },
  {
    "start": "1488000",
    "end": "1760000"
  },
  {
    "text": "without us having to generate the glue so if we look at that query there's",
    "start": "1492120",
    "end": "1498559"
  },
  {
    "text": "a couple of things to to pay attention to number one it's very declarative we are not specifying which service to talk",
    "start": "1498559",
    "end": "1504919"
  },
  {
    "text": "to because for me as a consumer I don't care I know that I I know Jimmy's account balance sorry I know Jimmy's",
    "start": "1504919",
    "end": "1510640"
  },
  {
    "text": "email address I want his account balance the implementation detail is not something I want to get involved in and",
    "start": "1510640",
    "end": "1516720"
  },
  {
    "text": "it's really important that I don't because when those when that implementation detail changes as our",
    "start": "1516720",
    "end": "1522360"
  },
  {
    "text": "services change if it's declarative if our glue code has been generated the glue code can adapt",
    "start": "1522360",
    "end": "1529000"
  },
  {
    "text": "so all of the gluc code that I didn't have to write I also don't have to",
    "start": "1529000",
    "end": "1534240"
  },
  {
    "text": "maintain here's another texy query this one's much chunkier um and I want to kind of break it down and take a look at",
    "start": "1534320",
    "end": "1540600"
  },
  {
    "text": "it it's still asking fundamentally the same question given this email address of Jimmy find out some information about",
    "start": "1540600",
    "end": "1546480"
  },
  {
    "text": "him as a customer but we're being a bit richer I'm specifying exactly the information",
    "start": "1546480",
    "end": "1552240"
  },
  {
    "text": "that I care about so I want his customer ID his account balance and his preferred pie flavor",
    "start": "1552240",
    "end": "1559880"
  },
  {
    "text": "the idea here is that consumers Define the contracts of data that they care about so if we think about the way that",
    "start": "1559880",
    "end": "1565799"
  },
  {
    "text": "we build integration today and if we think about shopy version one I had to consume all of these apis um and",
    "start": "1565799",
    "end": "1572399"
  },
  {
    "text": "cherry-pick the fields that I cared about right and if I didn't do it directly in my code in my web browser",
    "start": "1572399",
    "end": "1579159"
  },
  {
    "text": "sorry my in my web app I did it somewhere in my back end for front end maybe I had an API Gateway where I",
    "start": "1579159",
    "end": "1585760"
  },
  {
    "text": "consumed all these apis maybe I had a graphql result where I consumed and stitched these apis",
    "start": "1585760",
    "end": "1590919"
  },
  {
    "text": "together what we want is for the consumers to Define their own API contracts this is the data that I care",
    "start": "1590919",
    "end": "1596559"
  },
  {
    "text": "about in the way that I want it so that producers can change without the consumer Breakin without us having this",
    "start": "1596559",
    "end": "1603320"
  },
  {
    "text": "Global schema that we're that we're all tightly coupled to there's nothing in here that says",
    "start": "1603320",
    "end": "1608640"
  },
  {
    "text": "where to Source this information from so I don't know if the strategy to get the",
    "start": "1608640",
    "end": "1614120"
  },
  {
    "text": "preferred pie flavor I don't know if that comes from the same place as the account balance or if it's coming from some other way and I don't know if the",
    "start": "1614120",
    "end": "1620320"
  },
  {
    "text": "ID that it takes is the same ID that I'm getting out of my customer ID maybe there's some ID resolution hops that",
    "start": "1620320",
    "end": "1626640"
  },
  {
    "text": "we're taking I don't care all I want to know is what is what the preferred pie flavor",
    "start": "1626640",
    "end": "1633240"
  },
  {
    "text": "is which leads us onto this kind of important idea which is that Publishers should publish API specs Publishers",
    "start": "1633240",
    "end": "1639679"
  },
  {
    "text": "should publish models well documented beautiful semantic clean crisp models",
    "start": "1639679",
    "end": "1647279"
  },
  {
    "text": "but consumers should consume semantics they should Express the data that they want and let the middle wear work out how to how to",
    "start": "1647279",
    "end": "1653919"
  },
  {
    "text": "connect the two together we can also do some cooler",
    "start": "1653919",
    "end": "1659000"
  },
  {
    "text": "stuff here so we can say for example I want his upper I want a shout at my customers so give me an uppercase of",
    "start": "1659000",
    "end": "1665480"
  },
  {
    "text": "first name and last name um so we can embed this function directly in my query layer which has some benefits right so",
    "start": "1665480",
    "end": "1672559"
  },
  {
    "text": "now it's now it's operating not in my stack but operating the computation is operating in the query l",
    "start": "1672559",
    "end": "1679279"
  },
  {
    "text": "which means we get the benefits of things like caching and observability and all the debugging tools that exist in the query",
    "start": "1679279",
    "end": "1685159"
  },
  {
    "text": "layer so taxi has like a bunch of standard lib functions that will do all the stuff that you need but you can also",
    "start": "1685159",
    "end": "1691440"
  },
  {
    "text": "write your own so you can write your own functions and embed you embed them in the query layout and off they go but uh",
    "start": "1691440",
    "end": "1697360"
  },
  {
    "text": "so we have support for Java and cin for that or maybe I want to fact to this out",
    "start": "1697360",
    "end": "1702640"
  },
  {
    "text": "so I want everyone across my company to shout at our customers shout their name out these guys bought pies we love them",
    "start": "1702640",
    "end": "1708320"
  },
  {
    "text": "shout their names so we can Factor this out into a type of all of its own and then it becomes a thing that we can start",
    "start": "1708320",
    "end": "1715360"
  },
  {
    "text": "sharing the other thing I want to call out here is I want the last 10 transactions so I don't just want any",
    "start": "1715519",
    "end": "1722080"
  },
  {
    "text": "old type here I want a type that satisfies certain constraints I want my",
    "start": "1722080",
    "end": "1727159"
  },
  {
    "text": "type to to honor a contract specifically I want an array of transactions I want",
    "start": "1727159",
    "end": "1732320"
  },
  {
    "text": "10 of them I want an ordered by transaction date and I want that descending so what we're doing here is",
    "start": "1732320",
    "end": "1739120"
  },
  {
    "text": "defining a contract around the type defining constraints on the type and this then can inform the middle weer",
    "start": "1739120",
    "end": "1745960"
  },
  {
    "text": "what to what kind of apis to look for to make sure it's calling an API that can satisfy this constraint because it's",
    "start": "1745960",
    "end": "1752679"
  },
  {
    "text": "different giving me giving me all of the transactions is a different type of constraint from just giving me the 10 most recent",
    "start": "1752679",
    "end": "1759960"
  },
  {
    "text": "ones which leads us then on to execution so I've got my apis I've now asked my",
    "start": "1759960",
    "end": "1765480"
  },
  {
    "start": "1760000",
    "end": "1782000"
  },
  {
    "text": "question in a nice code friendly way so now I want to execute it and that's what orbital does so again orbital is an open",
    "start": "1765480",
    "end": "1771600"
  },
  {
    "text": "source project up on GitHub go and give it a star and you'll make my day I'll send you a pie in four to six",
    "start": "1771600",
    "end": "1779200"
  },
  {
    "text": "weeks um so let's look at how that works so back here at shopa pie we have moved",
    "start": "1779200",
    "end": "1784880"
  },
  {
    "start": "1782000",
    "end": "2021000"
  },
  {
    "text": "on we've Now using orbital to replace our gluc code so the first thing that we did was created some a taxi project that",
    "start": "1784880",
    "end": "1791799"
  },
  {
    "text": "has just those terms customer ID first name last name tucked it up on git and pointed it at orbital",
    "start": "1791799",
    "end": "1799240"
  },
  {
    "text": "and then we went through all of our different API specs and we just added in that semantic metadata we did it bit by bit and then",
    "start": "1799240",
    "end": "1806200"
  },
  {
    "text": "we took those API schemas and we published them to orbital so now we know how those things",
    "start": "1806200",
    "end": "1812240"
  },
  {
    "text": "can relate so in our web app instead of writing all of that glue code we just write a taxi query send it to orbital in",
    "start": "1812240",
    "end": "1819640"
  },
  {
    "text": "the same kind of way as you might do with graphql right feels a lot feels very similar here's the data that I want",
    "start": "1819640",
    "end": "1824960"
  },
  {
    "text": "send the request orbit all hand all of the orchestration generating the glue",
    "start": "1824960",
    "end": "1830080"
  },
  {
    "text": "code on the fly so we don't have to write any resolvers we don't have to write any of that glue code to stitch",
    "start": "1830080",
    "end": "1835399"
  },
  {
    "text": "everything together we can use the information that's sitting in the API specs calls the data that we need",
    "start": "1835399",
    "end": "1842399"
  },
  {
    "text": "Returns the result back to my client and along the way captures lots of kind of useful information like tracing and",
    "start": "1842399",
    "end": "1847960"
  },
  {
    "text": "lineage and logs and performance metrics and all the kind of stuff that we want when we want to be able to go back and",
    "start": "1847960",
    "end": "1853799"
  },
  {
    "text": "debug it and there is no gluc code we do all",
    "start": "1853799",
    "end": "1859240"
  },
  {
    "text": "of that without having to write any glue code without having to stitch anything together which is important because",
    "start": "1859240",
    "end": "1864639"
  },
  {
    "text": "inevitably when the guys that own the soap API do what they always do which is change",
    "start": "1864639",
    "end": "1869960"
  },
  {
    "text": "it when that API changes they're going to push up their updated API spec up to",
    "start": "1869960",
    "end": "1875799"
  },
  {
    "text": "orbital and orbital will change the query that it's running because it is based it's generated on the fly so it",
    "start": "1875799",
    "end": "1881720"
  },
  {
    "text": "will update the query that is running over back to the soap API and the client remains unaffected they don't know that",
    "start": "1881720",
    "end": "1887720"
  },
  {
    "text": "it is has changed so we've stopped this from moving um from kind of moving all the way back to our consumers and we did",
    "start": "1887720",
    "end": "1894120"
  },
  {
    "text": "it because we have no gluc code maybe however I'm not into having",
    "start": "1894120",
    "end": "1901480"
  },
  {
    "text": "these kind of dynamic queries living in my web app I want like a backend for front end style pattern maybe that's more my",
    "start": "1901480",
    "end": "1907480"
  },
  {
    "text": "jam which is fine we can take that same query check it into get and expose it as",
    "start": "1907480",
    "end": "1913000"
  },
  {
    "text": "a as a API so then our web app is just doing a simple HTTP request",
    "start": "1913000",
    "end": "1918720"
  },
  {
    "text": "to ask for this information deploy it via",
    "start": "1918720",
    "end": "1923480"
  },
  {
    "text": "G same all the same benefits we're generating generating the gluc code on the Fly and giving the data back which",
    "start": "1924240",
    "end": "1930600"
  },
  {
    "text": "means as these things change the clients remain unaffected it's a lot less work and it's possible because there's no",
    "start": "1930600",
    "end": "1937600"
  },
  {
    "text": "gluc code and finally in the example of my cous function",
    "start": "1937600",
    "end": "1944120"
  },
  {
    "text": "um this guy wanted to send an email whenever someone bought a pie so we have this Kafka topic where our",
    "start": "1944120",
    "end": "1951320"
  },
  {
    "text": "orders are getting placed we're popping a message on there but the problem with our serverless function was none of the data that we needed was present same",
    "start": "1951320",
    "end": "1958480"
  },
  {
    "text": "problem just different type of components so instead we have like a custom stream we stream the data asking",
    "start": "1958480",
    "end": "1965960"
  },
  {
    "text": "for the stream asking for the data that we want and we can enrich the data with the by calling out the services that we",
    "start": "1965960",
    "end": "1972039"
  },
  {
    "text": "need and deliver that back off to the serverless function we can get orbital to call the service function directly",
    "start": "1972039",
    "end": "1977559"
  },
  {
    "text": "because because it has the API spec it knows where it is or it can publish a bespoke stream onto Kafka or onto a",
    "start": "1977559",
    "end": "1985080"
  },
  {
    "text": "websocket so bespoke stream with all the data that's required invoke the function all of the gluc code is created",
    "start": "1985080",
    "end": "1991559"
  },
  {
    "text": "automatically no gluc code so those are kind of our three",
    "start": "1991559",
    "end": "1996720"
  },
  {
    "text": "parts we have our we have taxi which is the semantic metadata that we need to enrich our apis make them richer tell us",
    "start": "1996720",
    "end": "2004240"
  },
  {
    "text": "how they relate we have a query language that lets us ask ask questions right um",
    "start": "2004240",
    "end": "2010200"
  },
  {
    "text": "express it in a declarative way without getting focused on how to execute it and we have an execution layer that takes",
    "start": "2010200",
    "end": "2016399"
  },
  {
    "text": "those two bits sticks them together and generates the gluc code I'm a solid 10 minutes ahead of",
    "start": "2016399",
    "end": "2023440"
  },
  {
    "start": "2021000",
    "end": "2100000"
  },
  {
    "text": "when I did this in my uh in my last practice summary so gluc",
    "start": "2023440",
    "end": "2030440"
  },
  {
    "text": "code it's time consuming it's not our Core Business it's not what we are here",
    "start": "2030440",
    "end": "2035519"
  },
  {
    "text": "to do we it is a thing that we do over and over and over it has low reuse and it's",
    "start": "2035519",
    "end": "2042519"
  },
  {
    "text": "low reuse because it is so context specific it is very difficult to produce",
    "start": "2042519",
    "end": "2048240"
  },
  {
    "text": "integration that is easily sharable so as a result we produced it over and over",
    "start": "2048240",
    "end": "2053398"
  },
  {
    "text": "and over and it breaks it breaks because it tightly couples our systems",
    "start": "2053399",
    "end": "2060398"
  },
  {
    "text": "together so instead make the machines write it don't write it ourselves put the machines to work",
    "start": "2060399",
    "end": "2068240"
  },
  {
    "text": "API specs that we have today talk about transport and structure the where and the how they tell me where your system",
    "start": "2068240",
    "end": "2073480"
  },
  {
    "text": "is what um how do I communicate with you how do I send you a message how do I decode the response and taxi tells us",
    "start": "2073480",
    "end": "2080599"
  },
  {
    "text": "about the what and we stitch those two together and beautiful",
    "start": "2080599",
    "end": "2086000"
  },
  {
    "text": "Harmony uh taxi is about saying this thing is the same as that thing taxi Q is a declarative query",
    "start": "2086000",
    "end": "2093118"
  },
  {
    "text": "language let me ask for the things that I want without getting focused on how to deliver it and orbital is automated",
    "start": "2093119",
    "end": "2100760"
  },
  {
    "start": "2100000",
    "end": "2118000"
  },
  {
    "text": "glue that's it",
    "start": "2100760",
    "end": "2105000"
  }
]