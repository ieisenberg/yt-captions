[
  {
    "start": "0",
    "end": "178000"
  },
  {
    "text": "Thanks for joining us today, Nicolas Frankel. You \nhave more than 20 years of Java experience. The  ",
    "start": "12720",
    "end": "20960"
  },
  {
    "text": "last time I saw you live on the stage, you \npresented yourself as a security-minded developer,  ",
    "start": "20960",
    "end": "27840"
  },
  {
    "text": "which I like very much, and I definitely \nconsider you a Java expert with all the  ",
    "start": "29120",
    "end": "36080"
  },
  {
    "text": "experience you have with the VM. \nOne of the things you demonstrated  ",
    "start": "36880",
    "end": "44560"
  },
  {
    "text": "in that presentation was how you can change the \ntype of the class in Java. What is that about?",
    "start": "44560",
    "end": "55680"
  },
  {
    "text": "I learned, and probably most of you learned that \nJava is a strongly typed language, a statically  ",
    "start": "59280",
    "end": "68159"
  },
  {
    "text": "typed language. So when you declare a variable, \nit's an Int, it's a class of whatever, it's a  ",
    "start": "68160",
    "end": "77440"
  },
  {
    "text": "person, it's a double, it's whatever you want \nand then this type is written into the bytecode.  ",
    "start": "77440",
    "end": "90480"
  },
  {
    "text": "Once the type is set, then you can use it. \nIf you handle a person with attributes,  ",
    "start": "98480",
    "end": "104640"
  },
  {
    "text": "first name, last name, and you've got an \ninstance of type person you can query,  ",
    "start": "105440",
    "end": "110000"
  },
  {
    "text": "\"Hey, what is your first name? What is your last \nname?\" And at the time, it was possible through  ",
    "start": "110000",
    "end": "116960"
  },
  {
    "text": "introspection, through reflection, so through a \nJava API to change the type of a class at runtime.",
    "start": "118320",
    "end": "127840"
  },
  {
    "text": "I redid the talk recently because this \nis no longer possible in more recent  ",
    "start": "128640",
    "end": "136800"
  },
  {
    "text": "JDKs. I think it's still possible up to 10, then \nin 11, you've got a warning, and I think it's 15,  ",
    "start": "136800",
    "end": "147600"
  },
  {
    "text": "there is an exception, you cannot do it \nanymore. I can’t remember the exact details.  ",
    "start": "150160",
    "end": "155520"
  },
  {
    "text": "So they fixed it finally, but at the time it \nwas very funny that we say that Java is strong,  ",
    "start": "158400",
    "end": "167040"
  },
  {
    "text": "statically typed. And then there’s Groovy. \nIt is good but it's dynamically typed,  ",
    "start": "167040",
    "end": "172560"
  },
  {
    "text": "you can do bad stuff where you can and \nyou could do the same stuff in Java.",
    "start": "172560",
    "end": "176959"
  },
  {
    "text": "So they fixed it, but I guess there are \nstill a lot of legacy systems out there  ",
    "start": "177520",
    "end": "181440"
  },
  {
    "start": "178000",
    "end": "326000"
  },
  {
    "text": "running the old Java versions. There was another \nthing that scared me even more. You showed on  ",
    "start": "181440",
    "end": "191280"
  },
  {
    "text": "a running production system how you actually \ncan change the bytecode to make it do whatever  ",
    "start": "191280",
    "end": "200080"
  },
  {
    "text": "you feel it should do, but in a way, so if you \nrestart the system, all traces would be gone.",
    "start": "200080",
    "end": "207440"
  },
  {
    "text": "Yeah. That's the hacker's dream for using it.",
    "start": "207440",
    "end": "210151"
  },
  {
    "text": "Isn't it?",
    "start": "210151",
    "end": "210160"
  },
  {
    "text": "Yes, you can actually do that. You need another \nJVM that will attach itself to the first one  ",
    "start": "210160",
    "end": "219360"
  },
  {
    "text": "and inject bytecode into this first one and/or \nchange the bytecode. You can do pretty bad stuff.  ",
    "start": "219360",
    "end": "228640"
  },
  {
    "text": "You can also do pretty good stuff, but it is like \neverything, you have a lot of freedom on the JVM.  ",
    "start": "228640",
    "end": "233680"
  },
  {
    "text": "The JVM provides you with so many possibilities \nthat it's easy to misuse it. So on one side,  ",
    "start": "233680",
    "end": "244159"
  },
  {
    "text": "you can use it to continuously deliver bytecode \nto your production system, meaning that your  ",
    "start": "244160",
    "end": "252720"
  },
  {
    "text": "system never goes down. I have a talk about \nthat. When there is a change on, let's say your  ",
    "start": "253520",
    "end": "263600"
  },
  {
    "text": "computer, you can directly stream the bytecode \nto the production system with no downtime,  ",
    "start": "263600",
    "end": "268720"
  },
  {
    "text": "it's just a prototype. But of course, if you \nare a hacker, you can use the same system to  ",
    "start": "269600",
    "end": "277040"
  },
  {
    "text": "get money, like one penny on every \ntransaction, or record the passwords.",
    "start": "279520",
    "end": "286400"
  },
  {
    "text": "Is that something that was possible with the \nold version but which has been fixed now?",
    "start": "288400",
    "end": "294000"
  },
  {
    "text": "So the changing of the type is now impossible, \nbut the attach API is still possible. That's the  ",
    "start": "296747",
    "end": "306160"
  },
  {
    "text": "problem of the JVM. You have a platform \nthat allows you to do a lot of things,  ",
    "start": "306160",
    "end": "313920"
  },
  {
    "text": "and in most cases, you only need to \ndo a fraction of it. Most applications  ",
    "start": "314640",
    "end": "321120"
  },
  {
    "text": "don't need to do that, but \nthe JVM provides it anyway.",
    "start": "321680",
    "end": "326479"
  },
  {
    "start": "326000",
    "end": "640000"
  },
  {
    "text": "Should I be scared? ",
    "start": "326480",
    "end": "327520"
  },
  {
    "text": "You should. You have seen my talk. The conclusion \nof my talk was you can forget everything that  ",
    "start": "328560",
    "end": "337200"
  },
  {
    "text": "I told you so far and life won't have changed \nfor you, or you can start thinking that perhaps  ",
    "start": "337200",
    "end": "345120"
  },
  {
    "text": "there is something missing in your setup and \nthat problem is security. You have this huge  ",
    "start": "345120",
    "end": "354160"
  },
  {
    "text": "platform and you need only a slice, so the rest is \njust an additional attack surface that hackers can  ",
    "start": "354160",
    "end": "362080"
  },
  {
    "text": "use to wreak havoc on your system. I've shown the \nway to do it at the time and it was the security  ",
    "start": "362080",
    "end": "372479"
  },
  {
    "text": "manager, which is also, of course, very old. \nIt started with the applets. The idea at the  ",
    "start": "372480",
    "end": "383360"
  },
  {
    "text": "time was that you had the JVM and you could run \nuntrusted code on your computer from the internet.  ",
    "start": "383360",
    "end": "390879"
  },
  {
    "text": "We should provide a sandbox, we should provide \nstuff that allows this untrusted code to work, and  ",
    "start": "392800",
    "end": "399520"
  },
  {
    "text": "permissions to execute some stuff that we \nallow but not all because we don't want  ",
    "start": "401200",
    "end": "409920"
  },
  {
    "text": "it to read our file system or to access \nour webcam. It was a permission system.  ",
    "start": "409920",
    "end": "417600"
  },
  {
    "text": "The problem is that people still think \nthat the security manager is about  ",
    "start": "419840",
    "end": "425520"
  },
  {
    "text": "running untrusted code and untrusted code is \njust code that you download from the internet.  ",
    "start": "425520",
    "end": "430000"
  },
  {
    "text": "The problem is untrusted code nowadays \nis every library that you are using.",
    "start": "430720",
    "end": "435840"
  },
  {
    "text": "Every dependency that you are using is basically \nuntrusted code. The only way to trust this code  ",
    "start": "437200",
    "end": "446160"
  },
  {
    "text": "is to audit it. And I believe that most companies \ndon't audit the code they are using, they don't  ",
    "start": "446160",
    "end": "453600"
  },
  {
    "text": "audit the dependencies. Did anybody ever audit \nLog4j for example? Log4j are simple, stupid  ",
    "start": "453600",
    "end": "463120"
  },
  {
    "text": "libraries that everybody is using. I believe not. \nBut even if you did, even if you audit the code,  ",
    "start": "463120",
    "end": "469760"
  },
  {
    "text": "what makes you think that the \nsource code that you audited  ",
    "start": "470880",
    "end": "475440"
  },
  {
    "text": "is actually translated into the \nexact same binary that you are using?  ",
    "start": "476400",
    "end": "480639"
  },
  {
    "text": "The only way to do that would be to not only \naudit the code but to build it yourself,  ",
    "start": "481760",
    "end": "487760"
  },
  {
    "text": "then you can be sure that the \nbinary does mirror the source code.  ",
    "start": "489520",
    "end": "496000"
  },
  {
    "text": "I believe nobody has the resources or the \nwillingness to do that. So we are trusting.  ",
    "start": "496640",
    "end": "503040"
  },
  {
    "text": "Of course, sometimes there are certificates. But \nI don't know if a lot of companies are checking  ",
    "start": "505280",
    "end": "512640"
  },
  {
    "text": "the certificates and you can tell that could \nnever happen. It happened in the npm ecosystem. ",
    "start": "512640",
    "end": "520640"
  },
  {
    "text": "Oh, yes. ",
    "start": "520640",
    "end": "521840"
  },
  {
    "text": "There was a very well used library, which name \nI can’t recall right now. The maintainer said,  ",
    "start": "521840",
    "end": "536720"
  },
  {
    "text": "“Hey folks, I have other stuff to do, \nwho wants to maintain the library now?”  ",
    "start": "536720",
    "end": "542480"
  },
  {
    "text": "And somebody stepped in. After a few versions, \nthey realized that there was a back door into this  ",
    "start": "543040",
    "end": "551920"
  },
  {
    "text": "library and they were mining cryptocurrencies. \nThey were using your computer power  ",
    "start": "551920",
    "end": "556880"
  },
  {
    "text": "to mine cryptocurrencies. Of course, you can \nsay it can only happen in the npm ecosystem  ",
    "start": "557520",
    "end": "565520"
  },
  {
    "text": "because it's just bad. Well, the Maven \necosystem is, in that case, just as bad,  ",
    "start": "565520",
    "end": "572320"
  },
  {
    "text": "maybe Maven or Gradle or whatever, at least \nthe repository, they are just repositories.  ",
    "start": "573600",
    "end": "578560"
  },
  {
    "text": "You can publish it, you can publish \nyour own stuff and anybody can use it.",
    "start": "578560",
    "end": "583279"
  },
  {
    "text": "I'm always using these as examples. Imagine you \ncreate a library that is really, really useful  ",
    "start": "584400",
    "end": "591520"
  },
  {
    "text": "and people start using it, and at some point, you \nintroduce additional capabilities. For example,  ",
    "start": "592400",
    "end": "599040"
  },
  {
    "text": "steganography capabilities, ability to read \nbytecode in an image. So you would hide  ",
    "start": "601040",
    "end": "609839"
  },
  {
    "text": "the bytecode in an image, or even source code in \nan image. Then when the image is read, you would  ",
    "start": "609840",
    "end": "614800"
  },
  {
    "text": "be able to compile it on the fly and then execute \nthe code and everything is possible. So this whole  ",
    "start": "614800",
    "end": "624000"
  },
  {
    "text": "untrusted code myth is very strange \nthat untrusted code is just applets. No.  ",
    "start": "624000",
    "end": "633520"
  },
  {
    "text": "So some architectures rely on plugins, but \neven for dependency, for me is untrusted code.",
    "start": "634320",
    "end": "641040"
  },
  {
    "start": "640000",
    "end": "820000"
  },
  {
    "text": "Yes, and in the Maven universe, does anyone  ",
    "start": "641040",
    "end": "643680"
  },
  {
    "text": "know how many versions of comments logging \nyou're actually including in your project?",
    "start": "643680",
    "end": "647920"
  },
  {
    "text": "That's a good question. I remember \nwhen I was still a consultant in one of  ",
    "start": "647920",
    "end": "655279"
  },
  {
    "text": "the projects I was an architect and I started \nto check the WAR and all the libraries that  ",
    "start": "655280",
    "end": "662800"
  },
  {
    "text": "were included in the WAR in this project. \nIt took me half a day to cut the libraries  ",
    "start": "662800",
    "end": "671360"
  },
  {
    "text": "in half because there were a lot of \nuseless dependencies, redundancy, and  ",
    "start": "672320",
    "end": "678400"
  },
  {
    "text": "dependencies in multiple versions. \nIf you are really willing to do that,  ",
    "start": "678400",
    "end": "685520"
  },
  {
    "text": "it's possible. But even if you restrict the number \nof libraries, which of course you should do,  ",
    "start": "685520",
    "end": "689840"
  },
  {
    "text": "then again, how do you trust those libraries? With \ntransitive dependencies in the JVM ecosystem which  ",
    "start": "690640",
    "end": "698800"
  },
  {
    "text": "are much better than in npm where you are \nright-pad and left-pad, I think we are much  ",
    "start": "698800",
    "end": "704959"
  },
  {
    "text": "more the same. That's still a lot of libraries for \na simple application. A simple Spring application  ",
    "start": "704960",
    "end": "712720"
  },
  {
    "text": "can have 30 dependencies, even 40 or 50. It's \nvery easy. Some of them are small. Some of them  ",
    "start": "713840",
    "end": "720480"
  },
  {
    "text": "are just configurations. Some of \nthem actually contain bytecode. ",
    "start": "720480",
    "end": "723839"
  },
  {
    "text": "I mentioned the fact that you would run it \nin a sandbox. This sandbox was defined by  ",
    "start": "728480",
    "end": "735279"
  },
  {
    "text": "a policy file, and then you would enable the \nsecurity manager on the JVM. This security  ",
    "start": "735280",
    "end": "740800"
  },
  {
    "text": "manager by default would read this policy file and \nthen you would only allow some of the capabilities  ",
    "start": "740800",
    "end": "751040"
  },
  {
    "text": "that you're really, really willing to allow. Like \nif you have a web application, you probably want  ",
    "start": "751040",
    "end": "757519"
  },
  {
    "text": "to open ports, which is good. You want to be \nable to listen to some ports, but why should  ",
    "start": "757520",
    "end": "764640"
  },
  {
    "text": "you be able to access the whole file system? \nYou should probably restrict the file system to  ",
    "start": "764640",
    "end": "770640"
  },
  {
    "text": "the stuff that you really, really want to. The \ntemporary folder is generally a good default  ",
    "start": "771200",
    "end": "776480"
  },
  {
    "text": "because you do a lot of stuff, then you should \ndisallow compilation, a lot of things like that.",
    "start": "776480",
    "end": "783360"
  },
  {
    "text": "This is about the VM. So it's not \neven a Java issue, is that correct?",
    "start": "783360",
    "end": "787920"
  },
  {
    "text": "No, it's a JVM.",
    "start": "787920",
    "end": "788315"
  },
  {
    "text": "It's all the languages like Kotlin, JRuby \nback in the times, Clojure, everything.",
    "start": "788315",
    "end": "795920"
  },
  {
    "text": "Yes, this security manager is \ncongruent with the JVM. So you can run  ",
    "start": "795920",
    "end": "801680"
  },
  {
    "text": "any language. Because in the end, you don't care \nabout the language, you are running bytecode.  ",
    "start": "802800",
    "end": "807360"
  },
  {
    "text": "And Kotlin bytecode can as \nmuch access the file system  ",
    "start": "809200",
    "end": "812560"
  },
  {
    "text": "as Java bytecode. It's the same JVM API \nthat you are using, or Clojure, or whatever.",
    "start": "812560",
    "end": "819920"
  },
  {
    "text": "So it's a very dark picture we are \npainting here of the VM. What can we do?",
    "start": "819920",
    "end": "824160"
  },
  {
    "start": "820000",
    "end": "1032000"
  },
  {
    "text": "One way would have been to improve the security \nmanager. Let's face it, creating a policy file  ",
    "start": "824960",
    "end": "833600"
  },
  {
    "text": "is no walk in the park. You want to apply the \nleast privilege principle so you should start  ",
    "start": "833600",
    "end": "841040"
  },
  {
    "text": "from a blank policy file and add permissions. In \nmy presentation, it was just a pet clinic and I  ",
    "start": "841040",
    "end": "849440"
  },
  {
    "text": "think the policy file was 400 lines long. And this \nshould be done when you create the application,  ",
    "start": "849440",
    "end": "857040"
  },
  {
    "text": "when you update the libraries, when you remove \nlibraries, when you add libraries, whenever you  ",
    "start": "857600",
    "end": "864319"
  },
  {
    "text": "change the application. So this is really a huge \ndownside, and I believe that's one of the reasons  ",
    "start": "864320",
    "end": "871680"
  },
  {
    "text": "that I rarely saw the security manager used. \nBut Oracle’s answer to that was, \"Oh, it's so  ",
    "start": "871680",
    "end": "880880"
  },
  {
    "text": "complicated. Let's remove it.\" And well, we don't \ncare about that anymore. You should do your own  ",
    "start": "880880",
    "end": "888640"
  },
  {
    "text": "security. Let's remove everything and do your \nown stuff. That's an interesting point of view.",
    "start": "888640",
    "end": "899600"
  },
  {
    "text": "It's an interesting approach, yes.",
    "start": "899600",
    "end": "901839"
  },
  {
    "text": "Yes. And we were a couple of people saying, \n\"Hey, perhaps it's not that great.\" But  ",
    "start": "903040",
    "end": "908959"
  },
  {
    "text": "how can I put it? Let's say that the team \nwas not really interested in feedback.  ",
    "start": "910800",
    "end": "918320"
  },
  {
    "text": "They are told, \"Hey, it will be like this.\" \nAnd the only thing that we could achieve  ",
    "start": "921280",
    "end": "929120"
  },
  {
    "text": "was that now in Java 17 it's deprecated, \nand there is a warning, but it still works.  ",
    "start": "929120",
    "end": "938080"
  },
  {
    "text": "But there are systems relying on the \nsecurity manager. Elasticsearch for example  ",
    "start": "938080",
    "end": "941280"
  },
  {
    "text": "is relying on the security manager \nbecause they have a plug-in architecture.  ",
    "start": "942960",
    "end": "946320"
  },
  {
    "text": "Well, they should be very afraid because there \nis nothing else to replace what they had.",
    "start": "947200",
    "end": "951840"
  },
  {
    "text": "I would like to leave a \nlittle light in the dark here.",
    "start": "951840",
    "end": "954880"
  },
  {
    "text": "Well, I'm French, so I'm not sure I'm the right \nperson to ask. We are pretty gloomy and we are  ",
    "start": "954880",
    "end": "961280"
  },
  {
    "text": "complaining all the time. The only alternative \nthat I have is just on Java 17. Honestly,  ",
    "start": "961280",
    "end": "972720"
  },
  {
    "text": "I believe most companies are at most at Java 11. \nSo for them, it's not an issue. But for companies  ",
    "start": "972720",
    "end": "985600"
  },
  {
    "text": "that are actually using the security manager, \nit's going to be an issue at some point, yes.",
    "start": "985600",
    "end": "991680"
  },
  {
    "text": "It sounds so. Okay. Thanks a \nlot. Thanks for joining us.",
    "start": "991680",
    "end": "992640"
  },
  {
    "text": "Sorry. No light at the end of the tunnel. I would \nwish to finish on a slightly more positive note,  ",
    "start": "992640",
    "end": "1001760"
  },
  {
    "text": "but actually, it's really hard for me to \nfind anything good about this whole stuff.  ",
    "start": "1002400",
    "end": "1007920"
  },
  {
    "text": "And it's not only about the security manager, it's \nabout the approach that Oracle is taking regarding  ",
    "start": "1009200",
    "end": "1015760"
  },
  {
    "text": "the feedback. It seems that they are not really \ncommunity-oriented anymore if they ever were  ",
    "start": "1015760",
    "end": "1024240"
  },
  {
    "text": "and I'm a bit afraid, honestly, about the \nfuture of if not the JVM at least Java.",
    "start": "1024240",
    "end": "1031280"
  },
  {
    "text": "I'd actually like to continue that one. I don't \nknow if this will go into production, but back in  ",
    "start": "1031280",
    "end": "1032079"
  },
  {
    "start": "1032000",
    "end": "1530000"
  },
  {
    "text": "the days, there used to be the JCP work which was \nvery much community-driven. Does that still exist?",
    "start": "1032080",
    "end": "1040720"
  },
  {
    "text": "I'm not sure and I never was part of the JCP. A \nside effect I noticed is the Twitter account of  ",
    "start": "1041360",
    "end": "1054640"
  },
  {
    "text": "Java retweeted a lot of stuff from the community \nbefore. My own articles sometimes got promoted by  ",
    "start": "1054640",
    "end": "1063280"
  },
  {
    "text": "Java when I wrote about Java. But nowadays, \nnothing comes from the community anymore.  ",
    "start": "1063280",
    "end": "1071760"
  },
  {
    "text": "It looks like they are only working with their \ndeveloper advocates now. They are really good  ",
    "start": "1071760",
    "end": "1077680"
  },
  {
    "text": "people. I mean, Nicolai, José, and David, \nI consider them good people, even friends,  ",
    "start": "1077680",
    "end": "1085280"
  },
  {
    "text": "but it's really like on the rails and nothing \nshould switch or go sideways. It's very, very  ",
    "start": "1087680",
    "end": "1099280"
  },
  {
    "text": "centralized. And I feel it's really \nsad. I've two decades of experience.  ",
    "start": "1100240",
    "end": "1111760"
  },
  {
    "text": "I'm learning Rust. I threw myself \ninto Kotlin a couple of years ago.  ",
    "start": "1114400",
    "end": "1120240"
  },
  {
    "text": "So I can say, I don't care about Java \nanymore. I can do my stuff, but for young  ",
    "start": "1120240",
    "end": "1126160"
  },
  {
    "text": "junior developers, I'm not sure it's really \na great idea. It's not a good signal.",
    "start": "1126960",
    "end": "1131760"
  },
  {
    "text": "It’s a problem that Java turned into a universe \nthat it wasn't meant to be when it was first  ",
    "start": "1132480",
    "end": "1140559"
  },
  {
    "text": "introduced many, many, many years ago.",
    "start": "1141520",
    "end": "1144160"
  },
  {
    "text": "I worked as a consultant for a long time, \nand I believe that Java was successful  ",
    "start": "1149520",
    "end": "1153920"
  },
  {
    "text": "compared to Scala, for example, because \nit was very, very stable. You could  ",
    "start": "1154480",
    "end": "1161360"
  },
  {
    "text": "run all your Java 1.0 applications on Java 1.5 or \nJava 8. For companies the most important thing is  ",
    "start": "1162000",
    "end": "1173600"
  },
  {
    "text": "stability. You want stability at all costs \nbecause you don't want to rewrite your application  ",
    "start": "1173600",
    "end": "1178240"
  },
  {
    "text": "every time you've got a new \nversion, again, compared to Scala.  ",
    "start": "1178240",
    "end": "1181520"
  },
  {
    "text": "And now Java has got a huge critical mass, and \nthe strategy has changed a lot. Now they are  ",
    "start": "1183840",
    "end": "1194559"
  },
  {
    "text": "deprecating things. At first, I was happy because \nsome stuff that is deprecated is really like  ",
    "start": "1194560",
    "end": "1203280"
  },
  {
    "text": "cruft. It is good to deprecate, but now \nthey deprecate stuff that actually can  ",
    "start": "1204640",
    "end": "1211520"
  },
  {
    "text": "be and is really useful and has no other \nalternative. Worse, the release cadence is crazy.  ",
    "start": "1211520",
    "end": "1220960"
  },
  {
    "text": "I don't know any company that can match \nthis release cadence. It's impossible.",
    "start": "1221680",
    "end": "1228640"
  },
  {
    "text": "Unless you are huge enough and you \nare IT-focused you can probably  ",
    "start": "1230240",
    "end": "1237280"
  },
  {
    "text": "keep up with the cadence, but otherwise, \nyou are doomed. I'm close to Switzerland,  ",
    "start": "1237280",
    "end": "1244880"
  },
  {
    "text": "I think an administration I worked for just \nrecently upgraded to Java 8, for God's sake.  ",
    "start": "1244880",
    "end": "1251200"
  },
  {
    "text": "Of course, the administration is not known \nfor being moving forwards really very fast,  ",
    "start": "1252800",
    "end": "1261840"
  },
  {
    "text": "but I believe they are more representative \nof the whole industry than companies that can  ",
    "start": "1263200",
    "end": "1270399"
  },
  {
    "text": "keep up the pace with the six-month cadence. So \nthey are releasing very, very fast and deprecating  ",
    "start": "1270400",
    "end": "1277120"
  },
  {
    "text": "faster and faster. I believe that it's going to be  ",
    "start": "1277680",
    "end": "1282720"
  },
  {
    "text": "a bigger problem with each release \nthat it will fragment the ecosystem.",
    "start": "1283920",
    "end": "1290560"
  },
  {
    "text": "I mean, we already saw it with the module \nsystem. I think it was two years ago that I did  ",
    "start": "1292160",
    "end": "1298960"
  },
  {
    "text": "an analysis. I took 20 of the most used \nlibraries and checked whether they were  ",
    "start": "1300640",
    "end": "1306800"
  },
  {
    "text": "compatible with the module system. Not \nmodules themselves, but just auto modules,  ",
    "start": "1306800",
    "end": "1313680"
  },
  {
    "text": "meaning you just needed to add an additional \nline into your META-INF MANIFEST.MF.  ",
    "start": "1313680",
    "end": "1320960"
  },
  {
    "text": "One line, that doesn't change anything. \nHalf of them were not compatible.  ",
    "start": "1321680",
    "end": "1326000"
  },
  {
    "text": "So if you want to use modules in your application \nyour libraries need to be at least compatible.  ",
    "start": "1326960",
    "end": "1335120"
  },
  {
    "text": "If they're not compatible, I wrote \nan article about it, it's a mess. So  ",
    "start": "1336560",
    "end": "1342240"
  },
  {
    "text": "we saw this great divide, companies being afraid \nto move beyond Java 8 because of the modules,  ",
    "start": "1343200",
    "end": "1351600"
  },
  {
    "text": "and now it's getting faster and faster.",
    "start": "1351600",
    "end": "1354640"
  },
  {
    "text": "Again, I'm French, I'm complaining all the time. \nI'm also pessimistic, but I believe that in that  ",
    "start": "1359280",
    "end": "1364720"
  },
  {
    "text": "case, it's not a great move. I understand that for \nsome people, the most tech-oriented one, it's good  ",
    "start": "1364720",
    "end": "1375200"
  },
  {
    "text": "to have a faster release cadence, but before it \nwas every four or five years. Now, it's every six  ",
    "start": "1375200",
    "end": "1383200"
  },
  {
    "text": "months. Perhaps there is a good middle ground. I \nthink we switched to the other extreme here and  ",
    "start": "1383200",
    "end": "1394159"
  },
  {
    "text": "it's going to be hard. But let's \nsee, perhaps I'm completely wrong.",
    "start": "1396080",
    "end": "1399760"
  },
  {
    "text": "Back in the days, we had Java 2 \nstandard edition. I guess the other one  ",
    "start": "1403360",
    "end": "1410240"
  },
  {
    "text": "never even existed. We had J2SE for like \napplications, and then we had the EE edition,  ",
    "start": "1411920",
    "end": "1419520"
  },
  {
    "text": "J2EE if you wanted to go big scale. The idea was \nthat everything was in a controlled environment,  ",
    "start": "1421040",
    "end": "1430400"
  },
  {
    "text": "that the server would set up everything for \nyou. So that leads me back to the question:  ",
    "start": "1430960",
    "end": "1436799"
  },
  {
    "text": "Does Java become something now that it wasn't \nintended to be back then? Is that the problem?",
    "start": "1437600",
    "end": "1445120"
  },
  {
    "text": "I cannot answer that question \nbecause when I started using Java,  ",
    "start": "1445120",
    "end": "1449040"
  },
  {
    "text": "it was 1.3 for a couple of months, then it was \n1.4. So at the time, I didn't think a lot about  ",
    "start": "1449760",
    "end": "1459280"
  },
  {
    "text": "what was the point of Java or whatever, \nI was just happy to learn the API.  ",
    "start": "1460480",
    "end": "1464720"
  },
  {
    "text": "The good thing is during those two decades, I've \nread a lot of blog posts about Java is dead. And  ",
    "start": "1468640",
    "end": "1479760"
  },
  {
    "text": "of course, I found them always very funny \nbecause Java is definitely not dead.  ",
    "start": "1480640",
    "end": "1486400"
  },
  {
    "text": "But this current speed of release \nmight be like an impediment  ",
    "start": "1488480",
    "end": "1497280"
  },
  {
    "text": "for Java adoption or at least it will \ndefinitely fragment the ecosystem.  ",
    "start": "1498880",
    "end": "1506160"
  },
  {
    "text": "So I know that starting from Java 9, you can \nhave JAR that is multi-released, that you can  ",
    "start": "1507760",
    "end": "1513520"
  },
  {
    "text": "have dedicated classes for each Java version, it \njust shifts the burden to the library maintainers.  ",
    "start": "1513520",
    "end": "1521920"
  },
  {
    "text": "So again, I'm not super optimistic for the future.",
    "start": "1524800",
    "end": "1529600"
  },
  {
    "text": "That was a wonderful way to end \nthis conversation. Thank you.",
    "start": "1529600",
    "end": "1535520"
  },
  {
    "start": "1530000",
    "end": "1586000"
  },
  {
    "text": "Now I will receive a lot of hate mail from all \nJava developers from Oracle, but that's fine.",
    "start": "1537200",
    "end": "1542960"
  },
  {
    "text": "I really encourage everybody to go \nand check the talk on this link here.",
    "start": "1542960",
    "end": "1547520"
  },
  {
    "text": "Actually it's a bit outdated, yeah, \nbut it was the time it was recorded. ",
    "start": "1551840",
    "end": "1557840"
  },
  {
    "text": "It might be outdated but so are all \nthe Java installations out there.",
    "start": "1563520",
    "end": "1568640"
  },
  {
    "text": "No worries. It was just to tell you.",
    "start": "1568640",
    "end": "1569200"
  },
  {
    "text": "Thanks a lot. Thanks for joining us.",
    "start": "1569200",
    "end": "1585441"
  },
  {
    "text": "Thanks a lot.",
    "start": "1585442",
    "end": "1586106"
  }
]