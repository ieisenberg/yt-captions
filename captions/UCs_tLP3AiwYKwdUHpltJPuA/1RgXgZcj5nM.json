[
  {
    "text": "[Music] welcome to the session on domain driven",
    "start": "6990",
    "end": "13559"
  },
  {
    "text": "design and rest um my name is Oliver GE I work for a company called pivotal has",
    "start": "13559",
    "end": "19199"
  },
  {
    "text": "anyone ever heard of pivotal oh anyone ever heard of spring",
    "start": "19199",
    "end": "24240"
  },
  {
    "text": "framework okay that's a bit better um yeah we're the company behind the spring framework uh I'm part of the spring",
    "start": "24240",
    "end": "30080"
  },
  {
    "text": "engineering team taking care of uh the spring data projects in their entirety basically um and uh I'm the Project Lead",
    "start": "30080",
    "end": "38040"
  },
  {
    "text": "of that um and you could ask why is a guy who's like only working with data",
    "start": "38040",
    "end": "45120"
  },
  {
    "text": "basically talking about DDD and rest and um the reason for that is that I'm",
    "start": "45120",
    "end": "51399"
  },
  {
    "text": "involved into like two major aspects of the spring data uh space which is the",
    "start": "51399",
    "end": "56760"
  },
  {
    "text": "the spring data store implementations um um that on their very",
    "start": "56760",
    "end": "63519"
  },
  {
    "text": "upper layer expose a repositories programming model which gets us the connection to to domain driven design",
    "start": "63519",
    "end": "71119"
  },
  {
    "text": "and on the other hand I've coined a tiny Library called springing Hadas uh which basically brings support to uh create",
    "start": "71119",
    "end": "78159"
  },
  {
    "text": "hyper media based uh representations to the spring MVC framework and on",
    "start": "78159",
    "end": "84320"
  },
  {
    "text": "combining these two worlds um I've also authored the spring data rest module",
    "start": "84320",
    "end": "90079"
  },
  {
    "text": "which is basically taking your spring data repositories and turns them into a foundation for what could be a rest API",
    "start": "90079",
    "end": "99360"
  },
  {
    "text": "right and if you look at that that that slide here you could basically think we're taking like data from a database",
    "start": "99360",
    "end": "107119"
  },
  {
    "text": "and then flipping the tables by 90Â° and then turn the uh turn that into Json and",
    "start": "107119",
    "end": "112200"
  },
  {
    "text": "call it an an API so that's not what we want to do and um actually developing spring data rest um has taught me quite",
    "start": "112200",
    "end": "119479"
  },
  {
    "text": "some lesson Les about why that's a bad idea and how we could actually do better",
    "start": "119479",
    "end": "125000"
  },
  {
    "text": "and coming from the from the fact that rest is not crot using Json and",
    "start": "125000",
    "end": "131319"
  },
  {
    "text": "HTTP um I asked myself okay what's what's actually needed to take your your",
    "start": "131319",
    "end": "136560"
  },
  {
    "text": "domain model or your your DDD domain model and turn that into a into a need",
    "start": "136560",
    "end": "142000"
  },
  {
    "text": "rest web service or to phrase it the other way around if you if you don't do",
    "start": "142000",
    "end": "148080"
  },
  {
    "text": "any uh particular or if if you uh um if you avoid thinking about certain things",
    "start": "148080",
    "end": "154800"
  },
  {
    "text": "in uh in the DDD area uh What problems will you get when you build the rest web",
    "start": "154800",
    "end": "160800"
  },
  {
    "text": "service right so you probably all know the uh this diagram here it's from Eric",
    "start": "160800",
    "end": "166879"
  },
  {
    "text": "Evans book um domain driven design what I'd like to do is concentrate on these",
    "start": "166879",
    "end": "172239"
  },
  {
    "text": "aspects in the upper right here like briefly discuss uh I don't want to do an introduction to these Concepts because",
    "start": "172239",
    "end": "178720"
  },
  {
    "text": "I'm assuming you're here because you already know them and U just take a look",
    "start": "178720",
    "end": "184360"
  },
  {
    "text": "at those Concepts from the consequences that they usually have in like using",
    "start": "184360",
    "end": "190120"
  },
  {
    "text": "these Concepts uh and the consequences that has into when building uh rest web services and representations in",
    "start": "190120",
    "end": "196840"
  },
  {
    "text": "particular because that's that's going to be like the main topic here um the as",
    "start": "196840",
    "end": "202440"
  },
  {
    "text": "you've seen like if if I'm working on a spring framework that usually means uh or mostly means coding in Java so uh",
    "start": "202440",
    "end": "210319"
  },
  {
    "text": "some of the challenges and stuff might be related to the to the to the language actually um and others might be a bit",
    "start": "210319",
    "end": "218519"
  },
  {
    "text": "more fortunate here uh the first thing and that's why I mention it here is value objects value objects are very",
    "start": "218519",
    "end": "224920"
  },
  {
    "text": "powerful thing but there are really a pain in the ass to build in Java right",
    "start": "224920",
    "end": "230280"
  },
  {
    "text": "so if you just want to build an email address class like you have Constructors and then equals and hash code to",
    "start": "230280",
    "end": "235400"
  },
  {
    "text": "implement and all this kind of stuff um so that's actually a reason why people",
    "start": "235400",
    "end": "241480"
  },
  {
    "text": "avoid building these or using um value objects the most funny thing I usually",
    "start": "241480",
    "end": "247360"
  },
  {
    "text": "see when it's when it comes to like the jsr 303 validation apis when you have a",
    "start": "247360",
    "end": "252439"
  },
  {
    "text": "class that has a string property that says email address and it has an annotation saying email address and then",
    "start": "252439",
    "end": "258600"
  },
  {
    "text": "I always wonder okay why don't you make it a type in the first place but people are lazy and um that's why they they",
    "start": "258600",
    "end": "265759"
  },
  {
    "text": "avoid using value objects sometimes but uh the even if if you have to code them manually I think it still pays off if",
    "start": "265759",
    "end": "272280"
  },
  {
    "text": "you don't believe me in that case uh there is this like the this talk on on",
    "start": "272280",
    "end": "278280"
  },
  {
    "text": "value objects by dun is something like the uh Conway's law reference you in no",
    "start": "278280",
    "end": "284039"
  },
  {
    "text": "DDD talk without linking to that talk here uh it's like all about value",
    "start": "284039",
    "end": "289080"
  },
  {
    "text": "objects and how they uh basically allow you to uh control complexity in your in",
    "start": "289080",
    "end": "294320"
  },
  {
    "text": "your code and make code easier to understand so um this is",
    "start": "294320",
    "end": "300840"
  },
  {
    "text": "that said it they're still worth it even if you have to like code them manually however there's lombok have you heard of",
    "start": "300840",
    "end": "306560"
  },
  {
    "text": "lombok before so if you like haven't seen that before have a look at that it's basically an add value annotation",
    "start": "306560",
    "end": "313280"
  },
  {
    "text": "on the class that in this case and uh that that makes it uh makes it quite",
    "start": "313280",
    "end": "318600"
  },
  {
    "text": "usable and easy to create those types still if you if you're if you have taken",
    "start": "318600",
    "end": "324319"
  },
  {
    "text": "that hurdle um you get other opponents now that you",
    "start": "324319",
    "end": "329639"
  },
  {
    "text": "have the language out of the way you face hibernate and Jackson and uh mostly there there uh the problem there is that",
    "start": "329639",
    "end": "337720"
  },
  {
    "text": "uh they require you to make stuff or it's it's hard to really write immutable types or classes with these Frameworks",
    "start": "337720",
    "end": "344520"
  },
  {
    "text": "in mind right so you have to teach them how to map certain strings like an email address string from your from your Json",
    "start": "344520",
    "end": "350680"
  },
  {
    "text": "representation into that class and back and it's not really hard I'm not saying that but it's like cumbersome and and",
    "start": "350680",
    "end": "356960"
  },
  {
    "text": "take some some efforts here still value objects important important aspect",
    "start": "356960",
    "end": "362720"
  },
  {
    "text": "here so um entities and repositories the",
    "start": "362720",
    "end": "368240"
  },
  {
    "text": "um that's what what like most people deal with on a day-to-day basis even if they have like string fields for email",
    "start": "368240",
    "end": "374400"
  },
  {
    "text": "addresses in their classes but um the problem especially in the Java space is with uh there's jpa in case you're",
    "start": "374400",
    "end": "381039"
  },
  {
    "text": "familiar with that one um where sort of everything is an entity right so um it",
    "start": "381039",
    "end": "387720"
  },
  {
    "text": "doesn't the entity concept in jpa doesn't necessarily match the one in in domain dri design and that makes it uh",
    "start": "387720",
    "end": "394400"
  },
  {
    "text": "sometimes a bit hard to differentiate one from another let me give you an example here uh let's say we",
    "start": "394400",
    "end": "401440"
  },
  {
    "text": "have a customer that has an address and uh some payment information here and an",
    "start": "401440",
    "end": "406720"
  },
  {
    "text": "email right um and there's an invoice pointing to the customer there's an order uh that consists of line items and",
    "start": "406720",
    "end": "414759"
  },
  {
    "text": "the line items point to a product right um this stuff translated into into uh",
    "start": "414759",
    "end": "421120"
  },
  {
    "text": "jpa would basically mean that address might probably be an entity the email as",
    "start": "421120",
    "end": "426360"
  },
  {
    "text": "I said rather a value object customer is probably an entity ORD an entity line item is an entity y y y so the thing is",
    "start": "426360",
    "end": "434599"
  },
  {
    "text": "that like as you as I've tried to express here in that model there's certain clusters of of um um yeah of",
    "start": "434599",
    "end": "442479"
  },
  {
    "text": "functionality basically so everything related to the customers can be slightly grouped here and the relationship",
    "start": "442479",
    "end": "448599"
  },
  {
    "text": "between an order and the customer and an order and a line item is a completely different one right um I guess you're",
    "start": "448599",
    "end": "455599"
  },
  {
    "text": "trying what I'm trying to get to uh which is basically that some of these entities form AG aggregate roots and by",
    "start": "455599",
    "end": "462960"
  },
  {
    "text": "that Aggregates around them and others don't and that's something if you just",
    "start": "462960",
    "end": "469120"
  },
  {
    "text": "look at the entities in your application you don't really the the model or the the code",
    "start": "469120",
    "end": "475120"
  },
  {
    "text": "doesn't really reveal that right that that concept it doesn't re reveal what an an aggregate root is in in in your",
    "start": "475120",
    "end": "481520"
  },
  {
    "text": "code um fortunately um a repository is",
    "start": "481520",
    "end": "486840"
  },
  {
    "text": "defined to be basically I mean it's it's not defined that way around but essentially an entity plus a repository",
    "start": "486840",
    "end": "494400"
  },
  {
    "text": "forms an aggregate why is that um an aggregate or yeah an aggregate is defined or the aggregate root in",
    "start": "494400",
    "end": "500840"
  },
  {
    "text": "particular is defined to be the one the thing that you interact with that you pull out of the out of the repository or",
    "start": "500840",
    "end": "507280"
  },
  {
    "text": "that you create through a factory and all of the contained entities uh are",
    "start": "507280",
    "end": "513240"
  },
  {
    "text": "only referred to or used by referring to the that aggregate in the first place",
    "start": "513240",
    "end": "518560"
  },
  {
    "text": "that also has the consequence of that like uh the aggregate rout or the aggregate has uh the responsibility to",
    "start": "518560",
    "end": "527160"
  },
  {
    "text": "control invariance on that on that entire aggregate right so it makes it makes sure that uh you you you the",
    "start": "527160",
    "end": "534680"
  },
  {
    "text": "aggregate in itself conforms to certain constraints and like business logic right",
    "start": "534680",
    "end": "539839"
  },
  {
    "text": "right so that means if we take the repositories with into uh into account",
    "start": "539839",
    "end": "546440"
  },
  {
    "text": "we can basically find all the entities that we have repositories for and then",
    "start": "546440",
    "end": "552120"
  },
  {
    "text": "know that they're Aggregates which is kind of useful information because as I",
    "start": "552120",
    "end": "557360"
  },
  {
    "text": "said Aggregates are like nice or they they they create some kind of",
    "start": "557360",
    "end": "563640"
  },
  {
    "text": "consistency boundary and by that fact actually make up nice uh presentation",
    "start": "563640",
    "end": "569640"
  },
  {
    "text": "boundaries for your for your application uh for your for your rest web service um",
    "start": "569640",
    "end": "574959"
  },
  {
    "text": "another thing that plays into this is that uh Aggregates um are the things",
    "start": "574959",
    "end": "581120"
  },
  {
    "text": "that you usually refer to so an a some some part of an aggregate as you've seen in the example before with the order and",
    "start": "581120",
    "end": "587079"
  },
  {
    "text": "the order item uh the line item where the line item referred to the product right so an a nested entity in that",
    "start": "587079",
    "end": "594480"
  },
  {
    "text": "aggregate is referring to some other Aggregate and it's only allowed to to refer to other Aggregates not to",
    "start": "594480",
    "end": "601360"
  },
  {
    "text": "entities within other Aggregates and the interesting or the the the uh convenient",
    "start": "601360",
    "end": "606959"
  },
  {
    "text": "thing here is that because Aggregates are the primary thing that you refer to",
    "start": "606959",
    "end": "612120"
  },
  {
    "text": "um they you can nicely translate that into the resources you expose they are identifiable and only those things that",
    "start": "612120",
    "end": "619839"
  },
  {
    "text": "can be identified you can actually refer to right so you can only create links to these other",
    "start": "619839",
    "end": "626240"
  },
  {
    "text": "Aggregates um I just came back like traveling here from a from a customer Workshop a two-day customer workshop on",
    "start": "626240",
    "end": "632440"
  },
  {
    "text": "like build AP they have this Legacy database and they want to like wrap that with a nice API and uh these guys got",
    "start": "632440",
    "end": "639040"
  },
  {
    "text": "started with uh we take spring data rest and we generate our enti jpa entities",
    "start": "639040",
    "end": "644440"
  },
  {
    "text": "from the database because the tooling allows you um and then we for every entity create a repository and then we",
    "start": "644440",
    "end": "651920"
  },
  {
    "text": "flip on Spring data rest and then all of a sudden we have a rest API and it's like okay that's not really what you",
    "start": "651920",
    "end": "658600"
  },
  {
    "text": "actually should do because as I said um the repository turns the The Entity into",
    "start": "658600",
    "end": "664800"
  },
  {
    "text": "an aggregate rout and if you have a very fine grain table model then it doesn't really uh you don't really create all",
    "start": "664800",
    "end": "671920"
  },
  {
    "text": "Aggregates on their own right so it's a it's a key point to always return to",
    "start": "671920",
    "end": "677000"
  },
  {
    "text": "what's what's your actual con your actual conceptual model and that's what I spent the last two days doing actually",
    "start": "677000",
    "end": "682560"
  },
  {
    "text": "reminding them uh no I don't want to know about tables what's what what does the model look like right uh and that's",
    "start": "682560",
    "end": "689440"
  },
  {
    "text": "a that's not an easy thing to do but uh it's it's it's something you should remind yourself of um another thing that",
    "start": "689440",
    "end": "696040"
  },
  {
    "text": "came up actually in that in that very Workshop is uh bidirectional relationships are kind of yeah",
    "start": "696040",
    "end": "702120"
  },
  {
    "text": "problematic because they basically mean that both both uh sites uh have to be be governed all the time and I'm not sure",
    "start": "702120",
    "end": "708279"
  },
  {
    "text": "this is a uh is a is a Java problem here but um especially in in in jpa code I've",
    "start": "708279",
    "end": "714440"
  },
  {
    "text": "I've seen a lot of broken bidirectional relationships that happened to work by accident because they were just man",
    "start": "714440",
    "end": "720079"
  },
  {
    "text": "manipulated from the right side but um that was just because nobody um",
    "start": "720079",
    "end": "725160"
  },
  {
    "text": "manipulated it from the wrong side by accident basically okay um oh yeah that",
    "start": "725160",
    "end": "730800"
  },
  {
    "text": "was one thing uh to mention here um that especially becomes important if you if",
    "start": "730800",
    "end": "736320"
  },
  {
    "text": "you're talking about like what makes up a bounded context right bir directional relationships between a bounded context",
    "start": "736320",
    "end": "742320"
  },
  {
    "text": "are like even a a worse version of of the of that that thing that you should try to Wi in the first place",
    "start": "742320",
    "end": "749560"
  },
  {
    "text": "all right so much for the for the very fun fundamental things um I don't want to stretch that too long because the um",
    "start": "749560",
    "end": "757920"
  },
  {
    "text": "or the more interesting thing to talk about actually here is um domain events",
    "start": "757920",
    "end": "765519"
  },
  {
    "text": "um so what what does domain events mean basically um there's a it's actually the",
    "start": "765519",
    "end": "772399"
  },
  {
    "text": "the way you express um yeah events to The Domain like not not technical events",
    "start": "772399",
    "end": "778880"
  },
  {
    "text": "but like uh business events that happen to that domain and thinking in in in those terms and the first thing that you",
    "start": "778880",
    "end": "786800"
  },
  {
    "text": "could do is basically not do it at all right and that's that's Bas that's usually code that you that you uh see or",
    "start": "786800",
    "end": "794639"
  },
  {
    "text": "if you see a code like this it usually looks like you have a class that has Getters and Setters like domain classes",
    "start": "794639",
    "end": "801760"
  },
  {
    "text": "um and uh people just call Setters all the way and",
    "start": "801760",
    "end": "807760"
  },
  {
    "text": "uh these are this is the same or are the same pieces of software that usually understand rest as crot over HTTP right",
    "start": "807760",
    "end": "815600"
  },
  {
    "text": "so you you get some data you manipulate data and um you write that back right",
    "start": "815600",
    "end": "822199"
  },
  {
    "text": "it's basically databases via HTTP fine so the next level that you can get to is",
    "start": "822199",
    "end": "829079"
  },
  {
    "text": "basically make the make the uh operations to your domain types explicit",
    "start": "829079",
    "end": "835199"
  },
  {
    "text": "by exposing methods on those domain types right there's is um it's like it's",
    "start": "835199",
    "end": "841160"
  },
  {
    "text": "basically that's what I'm trying to to boil it down to if you're calling more than one Setter or if you see a piece of",
    "start": "841160",
    "end": "847959"
  },
  {
    "text": "code that calls more than one Setter in a row uh you're basically missing a concept here because you're you're not",
    "start": "847959",
    "end": "853800"
  },
  {
    "text": "changing you're not poking at at the thing but you're doing something to the thing um and that should rather be",
    "start": "853800",
    "end": "860440"
  },
  {
    "text": "expressed as a method right um classical examples although there's it could be",
    "start": "860440",
    "end": "866079"
  },
  {
    "text": "just like a it's it's actually just a single Setter if you change the address on some user it shouldn't be set address",
    "start": "866079",
    "end": "872160"
  },
  {
    "text": "because it that doesn't reveal any cont any context it could be like move or something right depending on your domain",
    "start": "872160",
    "end": "878720"
  },
  {
    "text": "of course but be expressive there whenever I see client Co or code that calls more than one Setter on on some",
    "start": "878720",
    "end": "885560"
  },
  {
    "text": "object I rather introduce the method a more more dedicated method on the object and then uh change the state",
    "start": "885560",
    "end": "892199"
  },
  {
    "text": "internally um so that gives you quite a u gives you quite a quite a quite a bit",
    "start": "892199",
    "end": "897920"
  },
  {
    "text": "already um the next thing or the next level here is um exposing some of these",
    "start": "897920",
    "end": "905279"
  },
  {
    "text": "operations on the domain uh model um as events to other interested interested",
    "start": "905279",
    "end": "912120"
  },
  {
    "text": "clients right so it's basically you consider uh the these domain events",
    "start": "912120",
    "end": "918800"
  },
  {
    "text": "State transitions which already brings us into the into the or state",
    "start": "918800",
    "end": "923959"
  },
  {
    "text": "transitions as domain events and then that actually nicely gives us a connection to the to the rest will here",
    "start": "923959",
    "end": "929360"
  },
  {
    "text": "because that already gives us a hint to what we could do with these explicit State Transitions and how we could we we",
    "start": "929360",
    "end": "936839"
  },
  {
    "text": "could actually model them in in the rest world right and um uh an approach you",
    "start": "936839",
    "end": "943360"
  },
  {
    "text": "see quite often actually is to um export those events into uh via feeds right so",
    "start": "943360",
    "end": "951399"
  },
  {
    "text": "like an atom feed with the with the uh with the relevant stuff that other parties might be interested here",
    "start": "951399",
    "end": "959240"
  },
  {
    "text": "um and like uh that that can be consumed you could also use like messaging or or",
    "start": "959240",
    "end": "964720"
  },
  {
    "text": "or something to to uh re um inform other parties about about those events but uh",
    "start": "964720",
    "end": "970600"
  },
  {
    "text": "as we're talking about rest here I I chose the example of um of Feats the the",
    "start": "970600",
    "end": "977000"
  },
  {
    "text": "reason why I think uh the the the special reason why I think there there should is probably another level is that",
    "start": "977000",
    "end": "983560"
  },
  {
    "text": "is doesn't have to mean that we're talking about event sourcing on level two right event sourcing is basically or",
    "start": "983560",
    "end": "990240"
  },
  {
    "text": "cqs or the combination of the two uh basically is um taking that to to the to",
    "start": "990240",
    "end": "997800"
  },
  {
    "text": "the level of turning everything into into events right so every operation is",
    "start": "997800",
    "end": "1003120"
  },
  {
    "text": "expressed as an event that doesn't necessarily have to be the case on the on on level two because in that if",
    "start": "1003120",
    "end": "1010079"
  },
  {
    "text": "you're if you're operating on that level you just like decide okay which which of the events are really needed to be",
    "start": "1010079",
    "end": "1016600"
  },
  {
    "text": "stored and then later like published to to other to other parties um all right",
    "start": "1016600",
    "end": "1023800"
  },
  {
    "text": "okay that's uh we we'll get back to level two in in a in a few minutes so",
    "start": "1023800",
    "end": "1029880"
  },
  {
    "text": "I've spoken about like been been been covering DDD quite a bit yet and haven't",
    "start": "1029880",
    "end": "1036120"
  },
  {
    "text": "like made too much connections or too many connections to to rest yet",
    "start": "1036120",
    "end": "1042280"
  },
  {
    "text": "so um You probably all know that like they very fundamental so we're we're",
    "start": "1042280",
    "end": "1047959"
  },
  {
    "text": "talking about resources that are identifiable referable and uh they always communicated with through",
    "start": "1047959",
    "end": "1054280"
  },
  {
    "text": "representations and we use a a UniFi uh what is it uh uniform interface but the",
    "start": "1054280",
    "end": "1060799"
  },
  {
    "text": "core thing in terms of Designing the API usually is um designing the",
    "start": "1060799",
    "end": "1066440"
  },
  {
    "text": "representations so basically finding the resources that we want to expose um",
    "start": "1066440",
    "end": "1072520"
  },
  {
    "text": "explicitly saying not modeling Uris uh finding the resources that we want to expose and then decid deciding what goes",
    "start": "1072520",
    "end": "1079200"
  },
  {
    "text": "into these resources and what we can do with them",
    "start": "1079200",
    "end": "1085159"
  },
  {
    "text": "um by what we can do with them I of course don't mean like the individual",
    "start": "1085159",
    "end": "1090640"
  },
  {
    "text": "methods to trigger because that's what what rest already defines but um from",
    "start": "1090640",
    "end": "1096080"
  },
  {
    "text": "which state into What other state these resources can be uh can be um yeah",
    "start": "1096080",
    "end": "1102240"
  },
  {
    "text": "transformed and um how to express that right so I already made the point point",
    "start": "1102240",
    "end": "1108720"
  },
  {
    "text": "that Aggregates are like a a kind of neat thing to look at in the first place so assuming you you have your domain",
    "start": "1108720",
    "end": "1115679"
  },
  {
    "text": "model with let's say like five Aggregates or something um because they",
    "start": "1115679",
    "end": "1120840"
  },
  {
    "text": "actually uh expose certain characterist uh characteristics like uh identification refer ability and also",
    "start": "1120840",
    "end": "1128520"
  },
  {
    "text": "quite important the scope of consistency because like um changes to an aggregate",
    "start": "1128520",
    "end": "1134240"
  },
  {
    "text": "should be consistent within the aggregate they make up a nice a nice foundation for a resource because uh",
    "start": "1134240",
    "end": "1142720"
  },
  {
    "text": "like if you if you put put to issue a put request to the to the resource and",
    "start": "1142720",
    "end": "1147880"
  },
  {
    "text": "that consistency boundary uh maps to your domain uh nicely then um you don't",
    "start": "1147880",
    "end": "1152960"
  },
  {
    "text": "have to think about like uh explicit transactions or transaction transaction resources or uh process resources in the",
    "start": "1152960",
    "end": "1160760"
  },
  {
    "text": "first place um I'm not saying that that is like uh is always doable like just",
    "start": "1160760",
    "end": "1167039"
  },
  {
    "text": "take the aggregate turn it into a resource and you'll be will be done with it but it it's at least a a good",
    "start": "1167039",
    "end": "1172400"
  },
  {
    "text": "starting point because resources actually share the same characteristics here like the resources to be exposed in",
    "start": "1172400",
    "end": "1178760"
  },
  {
    "text": "the apis um right so we we got that um the next",
    "start": "1178760",
    "end": "1186480"
  },
  {
    "text": "interesting thing here actually is the uh the topic of hyper media so what does",
    "start": "1186480",
    "end": "1193880"
  },
  {
    "text": "hyper media mean um I'm not coming up with the unpronouncable abbreviation",
    "start": "1193880",
    "end": "1199039"
  },
  {
    "text": "here but it's basically serving um like data that the client is interested in uh",
    "start": "1199039",
    "end": "1205720"
  },
  {
    "text": "with navigation information right so we're not returning just an arbitrary blob blob of Json but we include some",
    "start": "1205720",
    "end": "1212720"
  },
  {
    "text": "means of communicating links like let's say we use Hal or collection Json or",
    "start": "1212720",
    "end": "1218159"
  },
  {
    "text": "siren or whatever hyper media format you want to use here HTML um and uh the client actually uses",
    "start": "1218159",
    "end": "1226640"
  },
  {
    "text": "that information to find out what it can do with the with the with the um",
    "start": "1226640",
    "end": "1232720"
  },
  {
    "text": "representation so what that what that actually means that shift in the client",
    "start": "1232720",
    "end": "1238000"
  },
  {
    "text": "is that let's say you just write an iPhone app and um I have have an example",
    "start": "1238000",
    "end": "1243880"
  },
  {
    "text": "bit of an example project later on that's uh placing uh coffee orders um",
    "start": "1243880",
    "end": "1249400"
  },
  {
    "text": "let's say you have an an iPhone client with um that actually speaks with that with that web service and I plac some",
    "start": "1249400",
    "end": "1256520"
  },
  {
    "text": "orders into my into my card and now have to like find out okay um am",
    "start": "1256520",
    "end": "1263120"
  },
  {
    "text": "I allowed to or I want to go to the checkout right and the interesting question is how does the client actually",
    "start": "1263120",
    "end": "1268919"
  },
  {
    "text": "determine whether it can actually do that or should present the button to the",
    "start": "1268919",
    "end": "1273960"
  },
  {
    "text": "user and the non- hyper media approach is basically knowing about what the",
    "start": "1273960",
    "end": "1279679"
  },
  {
    "text": "server when the server will allow us to check out and code that knowledge into",
    "start": "1279679",
    "end": "1286320"
  },
  {
    "text": "the client right so we actually coding domain knowledge into the client with",
    "start": "1286320",
    "end": "1291840"
  },
  {
    "text": "Hyper media we basically trade the knowledge about the domain complexity or the the we trade",
    "start": "1291840",
    "end": "1299760"
  },
  {
    "text": "the domain knowledge with a little bit more complexity in the protocol which in in my uh previous example basically",
    "start": "1299760",
    "end": "1306320"
  },
  {
    "text": "means we're not really binding ourselves to some knowledge that's documented somewhere but we actually uh just check",
    "start": "1306320",
    "end": "1314360"
  },
  {
    "text": "whether a certain link is present in the in the representation and act upon the presence or",
    "start": "1314360",
    "end": "1320080"
  },
  {
    "text": "non-presence of links right so the client as we has anyone been to the previous talk here um OE of course uh",
    "start": "1320080",
    "end": "1328000"
  },
  {
    "text": "there there was uh the question came up with like do you actually recommend hyper media and the answer was well yeah",
    "start": "1328000",
    "end": "1335279"
  },
  {
    "text": "sort of um people rather like to like just get the Json and po send it back and poke at it and stuff that's fine but",
    "start": "1335279",
    "end": "1342360"
  },
  {
    "text": "if you have to like prevent domain Knowledge from leaking into the client then hyper medor is your only option",
    "start": "1342360",
    "end": "1348720"
  },
  {
    "text": "basically right and it actually is is is very aligned to the to the notion of domain driven design which tries to keep",
    "start": "1348720",
    "end": "1355080"
  },
  {
    "text": "the the the complexity of of a software system in its very core and in that case",
    "start": "1355080",
    "end": "1360159"
  },
  {
    "text": "in case of a rest API that usually means the server right right so we we trade",
    "start": "1360159",
    "end": "1365919"
  },
  {
    "text": "this the the protocol complexity which is of course exposed to the client so because all of a sudden it has to know",
    "start": "1365919",
    "end": "1372400"
  },
  {
    "text": "about links and Hyper media formats and y y y um with the with the uh we trade",
    "start": "1372400",
    "end": "1378720"
  },
  {
    "text": "that complexity with the with the preference or the the benefit of not leaking domain knowledge to the client",
    "start": "1378720",
    "end": "1384039"
  },
  {
    "text": "or less domain knowledge in the client because it's just link present or not um",
    "start": "1384039",
    "end": "1391000"
  },
  {
    "text": "yeah so another thing that plays into that is that it's a it's just a general",
    "start": "1391000",
    "end": "1396840"
  },
  {
    "text": "recommendation I'm again coming from that that argument that okay we just do like a our resource and then we patch it",
    "start": "1396840",
    "end": "1403799"
  },
  {
    "text": "like crazy and we just know which fields we have to update when and Y yada y so um if you want to prevent that",
    "start": "1403799",
    "end": "1411279"
  },
  {
    "text": "Knowledge from leaking into the client don't like if if some some client uses a patch method that's very often something",
    "start": "1411279",
    "end": "1418520"
  },
  {
    "text": "I look at and see okay is that really the thing that it should do or should it rather like look for a link and then",
    "start": "1418520",
    "end": "1424679"
  },
  {
    "text": "follow that link and we formally describe as the as a server we describe what that link actually does and in",
    "start": "1424679",
    "end": "1431200"
  },
  {
    "text": "which circum circumstances it actually appears right all right uh the final thing on on",
    "start": "1431200",
    "end": "1437880"
  },
  {
    "text": "on that front is um that if you're implementing a domain",
    "start": "1437880",
    "end": "1444039"
  },
  {
    "text": "model in code on the server then you usually are uh exposed to quite a few",
    "start": "1444039",
    "end": "1451760"
  },
  {
    "text": "technical uh aspects that like play into the implementation and it's some it's a",
    "start": "1451760",
    "end": "1457840"
  },
  {
    "text": "it's a good idea to actually make sure that these technical or server side",
    "start": "1457840",
    "end": "1463880"
  },
  {
    "text": "aspects don't leak into the client which actually means that you have to take",
    "start": "1463880",
    "end": "1470320"
  },
  {
    "text": "care of turning them into web appropriate ones because very oftentimes the HTTP or like rest in general has",
    "start": "1470320",
    "end": "1477919"
  },
  {
    "text": "certain means to achieve certain things that you could just map these server",
    "start": "1477919",
    "end": "1483200"
  },
  {
    "text": "side uh implementation specific things to uh what am I talking about",
    "start": "1483200",
    "end": "1488880"
  },
  {
    "text": "um the first thing is uh that's basically the the the rule I wanted to to or or made up in the in the first",
    "start": "1488880",
    "end": "1495279"
  },
  {
    "text": "place is um aggregate Roots become resources in the first place and a",
    "start": "1495279",
    "end": "1500720"
  },
  {
    "text": "common pattern you see and that's that's probably a bit of my my uh my flavor of",
    "start": "1500720",
    "end": "1505960"
  },
  {
    "text": "the world viiew here because we're dealing with repositories all the time they very very nicely map onto",
    "start": "1505960",
    "end": "1511200"
  },
  {
    "text": "collection and item resources say SL customers and/ customers ID um that's",
    "start": "1511200",
    "end": "1518480"
  },
  {
    "text": "very um very uh like on the server side um the client shouldn't care about Uris as I said but from the server side",
    "start": "1518480",
    "end": "1525520"
  },
  {
    "text": "design point of view um that's a that's a very nice match um the",
    "start": "1525520",
    "end": "1530679"
  },
  {
    "text": "relations between um or two other Aggregates become links in the",
    "start": "1530679",
    "end": "1536320"
  },
  {
    "text": "representation that's actually what I don't want to be too implementation specific here but that's what spring",
    "start": "1536320",
    "end": "1541600"
  },
  {
    "text": "data rest basically does right it it analyses your your or it it finds out about the entities that are managed by",
    "start": "1541600",
    "end": "1548000"
  },
  {
    "text": "repositories and whenever uh um a domain object refers to um another entity",
    "start": "1548000",
    "end": "1555320"
  },
  {
    "text": "that's repository managed it becomes link instead of being embedded and that naturally forms those like aggregate",
    "start": "1555320",
    "end": "1562080"
  },
  {
    "text": "representations and and um the using using hyper media aspects I I show you",
    "start": "1562080",
    "end": "1568039"
  },
  {
    "text": "an example in in a bit uh very important thing Uris are Uris are uis or IDs are",
    "start": "1568039",
    "end": "1575480"
  },
  {
    "text": "IDs are IDs uh there's like tons of tickets going um are being opened in in Spring",
    "start": "1575480",
    "end": "1582039"
  },
  {
    "text": "that rest had asked for why is the database identifier not uh contained in the representation",
    "start": "1582039",
    "end": "1588440"
  },
  {
    "text": "because a resource is identified via its URI as the name suggests pretty simple",
    "start": "1588440",
    "end": "1593960"
  },
  {
    "text": "but the the more meta story here is that there are some some properties in",
    "start": "1593960",
    "end": "1600360"
  },
  {
    "text": "your code or some some uh some artifacts in your code they actually belong to a",
    "start": "1600360",
    "end": "1605760"
  },
  {
    "text": "very like store specific like implementation or whatnot and um they",
    "start": "1605760",
    "end": "1611640"
  },
  {
    "text": "shouldn't really appear in the in the um in the representation right because they would actually leak information here the",
    "start": "1611640",
    "end": "1618039"
  },
  {
    "text": "same goes with the uh adversion properties in the for those of you not",
    "start": "1618039",
    "end": "1623559"
  },
  {
    "text": "from the Javas space um jpa or the Java persistence API has a has a mechanism of",
    "start": "1623559",
    "end": "1629640"
  },
  {
    "text": "doing optimistic locking right the the the the server uh counts up a version",
    "start": "1629640",
    "end": "1635279"
  },
  {
    "text": "for every safe operation so that when you uh when you read an entity let's say",
    "start": "1635279",
    "end": "1640360"
  },
  {
    "text": "I get customer with the version one then someone behind my back updates the customer that makes version two on the",
    "start": "1640360",
    "end": "1646120"
  },
  {
    "text": "server and I send uh I want to update uh the customer then again with me sending",
    "start": "1646120",
    "end": "1653080"
  },
  {
    "text": "version one that would get rejected because um yeah I I basically send an an",
    "start": "1653080",
    "end": "1659880"
  },
  {
    "text": "an outdated version the thing is that stuff that shouldn't necessarily make it or shouldn't actually make it into the",
    "start": "1659880",
    "end": "1666000"
  },
  {
    "text": "representation because there's an HTTP HTTP mean for that or um some some way",
    "start": "1666000",
    "end": "1672120"
  },
  {
    "text": "to actually represent that which is basically e tax uh so that you can use",
    "start": "1672120",
    "end": "1677200"
  },
  {
    "text": "conditional get requests or as I've just uh outlined the update scenario conditional uh conditional put requests",
    "start": "1677200",
    "end": "1684360"
  },
  {
    "text": "right so we basically move stuff from the domain object into the appropriate in this case HTTP headers here um the",
    "start": "1684360",
    "end": "1691679"
  },
  {
    "text": "same goes with yep the same goes with uh a last modified property so there's a",
    "start": "1691679",
    "end": "1697679"
  },
  {
    "text": "means in in in Spring data in this case to automatically get the last modified",
    "start": "1697679",
    "end": "1703240"
  },
  {
    "text": "property set and we turn that property into into the last modific ation header that's basically the sort of the this",
    "start": "1703240",
    "end": "1711120"
  },
  {
    "text": "the same thing here all right um so it's 30 minutes um to give you an",
    "start": "1711120",
    "end": "1720440"
  },
  {
    "text": "example of what this might look like in uh like put into code I um created or",
    "start": "1720440",
    "end": "1727760"
  },
  {
    "text": "actually a long time ago I created this thing uh there's this book from um Ian Robinson Jim Weber and that guy I always",
    "start": "1727760",
    "end": "1734720"
  },
  {
    "text": "failed to pronounce correctly uh savash Paradis or something like that oril rest",
    "start": "1734720",
    "end": "1741960"
  },
  {
    "text": "for web services is that that one um I always mix them up rest practice rest",
    "start": "1741960",
    "end": "1747880"
  },
  {
    "text": "and practice thank you for that the other one's good too so uh don't want to offend anyone here um it the the core of",
    "start": "1747880",
    "end": "1756440"
  },
  {
    "text": "that of the book is as I said this uh the uh Starbucks kind of shopping",
    "start": "1756440",
    "end": "1762399"
  },
  {
    "text": "experience and modeling the uh the ordering flow of that of an uh of a shop",
    "start": "1762399",
    "end": "1769600"
  },
  {
    "text": "like that in an API and it has a funny or kind of interesting it's an interesting example because it's very",
    "start": "1769600",
    "end": "1775720"
  },
  {
    "text": "tiny it's very easy to look at because every I mean everyone can relate to drinking coffee or tea or what have you",
    "start": "1775720",
    "end": "1781919"
  },
  {
    "text": "um and it's very um there's nothing fancy to it but it contains quite a lot",
    "start": "1781919",
    "end": "1787840"
  },
  {
    "text": "of interesting uh aspects of a more complex API it's not just like it's not",
    "start": "1787840",
    "end": "1794240"
  },
  {
    "text": "just CR over HTTP right so that that here or that that's kind of state di",
    "start": "1794240",
    "end": "1800240"
  },
  {
    "text": "diagram is uh basically the the order flow right we place an order that's State transition one while the order is",
    "start": "1800240",
    "end": "1806720"
  },
  {
    "text": "in the in the state of payment expected um I can update it which is which is",
    "start": "1806720",
    "end": "1812480"
  },
  {
    "text": "that actually that part where some sort of Crut operations are just fine right because it's it's just basically that",
    "start": "1812480",
    "end": "1818519"
  },
  {
    "text": "that very uh it's that very returning to the same state here and we're just updating um a um or could update add new",
    "start": "1818519",
    "end": "1827919"
  },
  {
    "text": "add new drinks to the order what have you you could model that through an explicit State transition as well but in",
    "start": "1827919",
    "end": "1833200"
  },
  {
    "text": "the implementation I just go with with a post or patch patch request in this case um but then there's like two interesting",
    "start": "1833200",
    "end": "1839760"
  },
  {
    "text": "State transitions the one is like canceling the the order and one is the uh paying in this case which puts the",
    "start": "1839760",
    "end": "1847039"
  },
  {
    "text": "order into a kind of preparing State uh then it's um it's processed in the in",
    "start": "1847039",
    "end": "1853000"
  },
  {
    "text": "the background basically uh until it gets into a ready State and then I",
    "start": "1853000",
    "end": "1858080"
  },
  {
    "text": "explicitly have to acknowledge that I received the order to get it into into a completed state so if you just go ahead",
    "start": "1858080",
    "end": "1865279"
  },
  {
    "text": "and um naively model that with or let's say even you could model it this way",
    "start": "1865279",
    "end": "1871760"
  },
  {
    "text": "right or even like documented this way which you probably don't want to do because you expose U uh patterns here",
    "start": "1871760",
    "end": "1879919"
  },
  {
    "text": "which is something that you probably don't want to do and the even more",
    "start": "1879919",
    "end": "1885399"
  },
  {
    "text": "interesting aspect for for this scenario here is that you there is certain",
    "start": "1885399",
    "end": "1890559"
  },
  {
    "text": "constraints to when you can interact with which resource in in uh which way",
    "start": "1890559",
    "end": "1896360"
  },
  {
    "text": "right so you can um the you can you're only allowed to trigger the payment if",
    "start": "1896360",
    "end": "1901919"
  },
  {
    "text": "the the order is in that particular state right and if I take that kind of order um or that description of of of",
    "start": "1901919",
    "end": "1910600"
  },
  {
    "text": "API as a client developer I basically had now have to go ahead and say and see find out what does payment expect it",
    "start": "1910600",
    "end": "1917440"
  },
  {
    "text": "actually mean and then I have to probably inspect the representation for certain fields of certain values and",
    "start": "1917440",
    "end": "1923240"
  },
  {
    "text": "what have you and all this is stuff that I need to bake into my clients to know when I can actually present the button",
    "start": "1923240",
    "end": "1929559"
  },
  {
    "text": "to eventually issue that that rest call here so if you take it slightly",
    "start": "1929559",
    "end": "1935919"
  },
  {
    "text": "differently and just uh declare uh resource types and say okay whenever you",
    "start": "1935919",
    "end": "1941480"
  },
  {
    "text": "find a payment link or relation types in this case because yeah uh",
    "start": "1941480",
    "end": "1947639"
  },
  {
    "text": "whenever you find a payment link you can just like issue a of course a put request and then you have to define the",
    "start": "1947639",
    "end": "1953279"
  },
  {
    "text": "the payload that needs to go with it and then um you uh uh submit the order and",
    "start": "1953279",
    "end": "1960320"
  },
  {
    "text": "uh that actually brings you very much closer to the to the uh to the actual domain here and the the implementation",
    "start": "1960320",
    "end": "1966799"
  },
  {
    "text": "of the of the domain um meet bring rest box that's just like the there's an",
    "start": "1966799",
    "end": "1972360"
  },
  {
    "text": "implementation based on Jax RS in the in the very book um I took the chance CH to",
    "start": "1972360",
    "end": "1977960"
  },
  {
    "text": "uh basically see okay what would the implementation look like if we build it on the spring stack and then was",
    "start": "1977960",
    "end": "1984600"
  },
  {
    "text": "basically going crazy with using like all the spring technologies that could",
    "start": "1984600",
    "end": "1989679"
  },
  {
    "text": "uh help me doing that um edits very core it's basically just like spring data on",
    "start": "1989679",
    "end": "1995200"
  },
  {
    "text": "the uh on the persistence layer probably as expected which basically means",
    "start": "1995200",
    "end": "2000320"
  },
  {
    "text": "everything that's white here is we don't write any implementation code that's just like interfaces um the service",
    "start": "2000320",
    "end": "2007639"
  },
  {
    "text": "layer for the for the orders management part um that's that's why I mentioned that before is uh we use spring data",
    "start": "2007639",
    "end": "2014399"
  },
  {
    "text": "rest on top of the repositories directly which basically means we get all of the CR operations out of the box um but we",
    "start": "2014399",
    "end": "2022519"
  },
  {
    "text": "take the time to manually implement the payment process because that is the core",
    "start": "2022519",
    "end": "2027600"
  },
  {
    "text": "of our API and we want to use the hyper media the advanced hyper media means for that um and um so the the idea of of",
    "start": "2027600",
    "end": "2036679"
  },
  {
    "text": "spring the rest is because it it takes away the pain of um of all the the the",
    "start": "2036679",
    "end": "2043639"
  },
  {
    "text": "standard stuff you want to have like a post to create a new entity uh what have",
    "start": "2043639",
    "end": "2049398"
  },
  {
    "text": "you uh we we take the pain out of the the standard and boring stuff and allow you to basically concentrate on the more",
    "start": "2049399",
    "end": "2056280"
  },
  {
    "text": "advanced stuff which means modeling your hyper media Transitions and um yeah making it easy to build the",
    "start": "2056280",
    "end": "2063800"
  },
  {
    "text": "stuff there's a A Certain Shade of Green here um which means that we tweak the output of spring data rest and uh",
    "start": "2063800",
    "end": "2071599"
  },
  {
    "text": "basically tell the the the framework that it should include under certain circumstances include certain links so",
    "start": "2071599",
    "end": "2079320"
  },
  {
    "text": "that these link these links then point to our manual implementation of the of the rest web service um I show you the",
    "start": "2079320",
    "end": "2087398"
  },
  {
    "text": "uh the the example in a second just to summarize uh a few parts that you should",
    "start": "2087399",
    "end": "2093000"
  },
  {
    "text": "look at if you look at the code uh I try always try to keep the Jackson customizations uh which means Json",
    "start": "2093000",
    "end": "2099560"
  },
  {
    "text": "customizations to non- Java people um separate from the domain model it's too easy to just like annotate your domain",
    "start": "2099560",
    "end": "2106240"
  },
  {
    "text": "classes with at Json ignore and stuff um you can always externalize that and that's what I usually try to do just to",
    "start": "2106240",
    "end": "2112839"
  },
  {
    "text": "not mix the representation specific Parts with my core domain um we use spring data for the C",
    "start": "2112839",
    "end": "2120200"
  },
  {
    "text": "parts that's what I just mentioned and the other interesting or most interesting aspect for that like",
    "start": "2120200",
    "end": "2126000"
  },
  {
    "text": "discussion between like okay what's what does the domain do and how does it actually play into the design of the",
    "start": "2126000",
    "end": "2132079"
  },
  {
    "text": "rest web service uh is the resource processors that's an API which basically allows you to tell spring data rest uh",
    "start": "2132079",
    "end": "2139640"
  },
  {
    "text": "whenever you render an order uh please call my code beforehand and then I I can",
    "start": "2139640",
    "end": "2147520"
  },
  {
    "text": "actually add some links to the representation whenever I want the codes on GitHub of course um let me show you",
    "start": "2147520",
    "end": "2155280"
  },
  {
    "text": "that thing uh it's a spring boot app that's just the best way to build",
    "start": "2155280",
    "end": "2161319"
  },
  {
    "text": "Java apps these days probably not surprised to hear that from me uh I run this thing first uh",
    "start": "2161319",
    "end": "2169040"
  },
  {
    "text": "yeah run it Java application",
    "start": "2169040",
    "end": "2174560"
  },
  {
    "text": "um uh it ships with a hell browser that's the the nice thing with that's yeah not not something that's uh that's",
    "start": "2174560",
    "end": "2181280"
  },
  {
    "text": "something that I actually built here in the Palm that's why I have it open so no no no no no no",
    "start": "2181280",
    "end": "2189560"
  },
  {
    "text": "no that's probably just what's going on there's",
    "start": "2189560",
    "end": "2195280"
  },
  {
    "text": "a how much time do we have 10 minutes there's some Java process",
    "start": "2196480",
    "end": "2202440"
  },
  {
    "text": "running somewhere it Tom kit doesn't like if you",
    "start": "2202440",
    "end": "2207680"
  },
  {
    "text": "if you uh have a running have a running instance of it and put your MacBook to",
    "start": "2207680",
    "end": "2214680"
  },
  {
    "text": "sleep yay looks better all right so that thing here is",
    "start": "2215680",
    "end": "2224079"
  },
  {
    "text": "uh that's a good idea thanks for that's called crowd Computing in case you haven't heard of",
    "start": "2224079",
    "end": "2230839"
  },
  {
    "text": "that Local Host 880 so all right hell browser is anyone ever",
    "start": "2230839",
    "end": "2238760"
  },
  {
    "text": "does not does anyone of you not know what the hell browser is a few hands okay it's worth worth",
    "start": "2238760",
    "end": "2244880"
  },
  {
    "text": "mentioning then let me just go back here and say HTT",
    "start": "2244880",
    "end": "2251160"
  },
  {
    "text": "HTTP uh increase that a bit um 8080 so the thing actually um exposes a",
    "start": "2251160",
    "end": "2259280"
  },
  {
    "text": "a web API that uses the hell format that's what spring that AR rest out of does out of the box and",
    "start": "2259280",
    "end": "2266839"
  },
  {
    "text": "um hell is a a format that just like defines what links look like in in in",
    "start": "2266839",
    "end": "2272400"
  },
  {
    "text": "Json and uh by the virtue of that you can build an an application what the",
    "start": "2272400",
    "end": "2277720"
  },
  {
    "text": "hell browser basically is that understands these links and presents them into in a in a nicer format than",
    "start": "2277720",
    "end": "2283880"
  },
  {
    "text": "like just looking at at Raw Json which is basically the stuff down here right so the hell browser interprets that",
    "start": "2283880",
    "end": "2289720"
  },
  {
    "text": "format and sees okay there's a rest boox orders link that has a title so and that",
    "start": "2289720",
    "end": "2295280"
  },
  {
    "text": "case it's internationalized it says like see or see or create orders basically",
    "start": "2295280",
    "end": "2300640"
  },
  {
    "text": "because I'm using a German browser that's why it's German here and then you can follow these links by just like uh",
    "start": "2300640",
    "end": "2305839"
  },
  {
    "text": "clicking these buttons here that makes it a bit easier to to play with your with your API and um you don't have to",
    "start": "2305839",
    "end": "2312599"
  },
  {
    "text": "pollute your code with bloody Swagger annotations um so yeah that's the that's",
    "start": "2312599",
    "end": "2319760"
  },
  {
    "text": "the that's the uh an individual an IND individual order here so we exposing uh",
    "start": "2319760",
    "end": "2325520"
  },
  {
    "text": "a collection resource for all orders I follow the link to orders and uh get",
    "start": "2325520",
    "end": "2331480"
  },
  {
    "text": "like the two of them I've created two um and I can just follow that one the self",
    "start": "2331480",
    "end": "2337359"
  },
  {
    "text": "link here nope that wasn't quite right did I break something no that was",
    "start": "2337359",
    "end": "2343599"
  },
  {
    "text": "right okay I just got messed up in the in the UI here so as you can see the um",
    "start": "2343599",
    "end": "2349040"
  },
  {
    "text": "the the the service um exposes certain links in this case the the payment link",
    "start": "2349040",
    "end": "2355720"
  },
  {
    "text": "uh which I could uh like issue a put request to then and um basically submit",
    "start": "2355720",
    "end": "2361800"
  },
  {
    "text": "my submit my credit card and if I do that it basically",
    "start": "2361800",
    "end": "2367000"
  },
  {
    "text": "brings the order into a new state that doesn't actually contain the payment link anymore um I've created a test case",
    "start": "2367000",
    "end": "2374040"
  },
  {
    "text": "for that which we could briefly let me just kill that thing and run the test case instead um that actually and it's",
    "start": "2374040",
    "end": "2381839"
  },
  {
    "text": "kind of neat to see I guess um we're doing a four-step thing here we create the New Order so issue a post request",
    "start": "2381839",
    "end": "2388839"
  },
  {
    "text": "then trigger the payment which is done by finding the pay like we discovered the link with a certain payment so the",
    "start": "2388839",
    "end": "2396119"
  },
  {
    "text": "test case basically acts as a as a rest client here uh we discovered the payment",
    "start": "2396119",
    "end": "2401280"
  },
  {
    "text": "link assert that it's been given and then I post um or I put my very Secret",
    "start": "2401280",
    "end": "2407280"
  },
  {
    "text": "credit card information to that very um very uh to that link that I've just",
    "start": "2407280",
    "end": "2413160"
  },
  {
    "text": "found here the payment link right um and what I'm then doing and this is because",
    "start": "2413160",
    "end": "2418359"
  },
  {
    "text": "it's a test case I basically uh try to uh Delete the order so I pay first and",
    "start": "2418359",
    "end": "2424319"
  },
  {
    "text": "then try to cancel it effectively and then make sure that I just get a not method not allowed um in this case",
    "start": "2424319",
    "end": "2432280"
  },
  {
    "text": "here let me just run this uh thing real quick for you uh access first order that's not it where was",
    "start": "2432280",
    "end": "2439079"
  },
  {
    "text": "it uh screen resolutions run this thing",
    "start": "2439079",
    "end": "2444440"
  },
  {
    "text": "um that's kind of uh it probably ah Jesus let me just",
    "start": "2444440",
    "end": "2452200"
  },
  {
    "text": "uh bring down this the resolution or the the font size a bit",
    "start": "2452200",
    "end": "2457760"
  },
  {
    "text": "what does that actually do that should still be readable right",
    "start": "2457760",
    "end": "2462920"
  },
  {
    "text": "yeah even better um so you see we're we're trigger we're discovering the payment link here that points to a new",
    "start": "2462920",
    "end": "2470480"
  },
  {
    "text": "order here and then trigger the payment and start the process in the background",
    "start": "2470480",
    "end": "2475760"
  },
  {
    "text": "and then pull the the server for the uh for the result of of the order um",
    "start": "2475760",
    "end": "2482240"
  },
  {
    "text": "there's a lot of apis in here that that make that happen or I mean they the the order the order subsystem basically the",
    "start": "2482240",
    "end": "2489200"
  },
  {
    "text": "the left column of of the of the diagram you saw before is basically that it's",
    "start": "2489200",
    "end": "2494319"
  },
  {
    "text": "just like a few domain classes that of course use lombok and expose a repository and um the integration for",
    "start": "2494319",
    "end": "2501200"
  },
  {
    "text": "the payment stuff happens through that payment order resource processor so in case you want to look into this thing um",
    "start": "2501200",
    "end": "2509640"
  },
  {
    "text": "that's that's probably the the interesting part regarding hyper media because we we basically get the order",
    "start": "2509640",
    "end": "2515400"
  },
  {
    "text": "before it gets rendered and then add links to the uh to the uh to the uh to",
    "start": "2515400",
    "end": "2521160"
  },
  {
    "text": "the controller to the payment controller and um you see that's like driven by",
    "start": "2521160",
    "end": "2526480"
  },
  {
    "text": "like state of the order and uh if the order is paid we just like at the payment link and y y y",
    "start": "2526480",
    "end": "2533599"
  },
  {
    "text": "so yeah it's it's a bit of a bit of a toolbox that allows you to start with a with a like neatly defined domain model",
    "start": "2533599",
    "end": "2541640"
  },
  {
    "text": "expose your Aggregates and uh then tweak stuff into it and use that that domain",
    "start": "2541640",
    "end": "2547000"
  },
  {
    "text": "code to to uh transport stuff into into the HTTP representations",
    "start": "2547000",
    "end": "2554319"
  },
  {
    "text": "um code is here any",
    "start": "2554319",
    "end": "2561480"
  },
  {
    "text": "questions one question in the back I can repeat it that's",
    "start": "2561920",
    "end": "2568359"
  },
  {
    "text": "fine",
    "start": "2575160",
    "end": "2578160"
  },
  {
    "text": "okay yeah the the question was okay what about events sourcing and event sourcing how does it works right so that was the",
    "start": "2581240",
    "end": "2588000"
  },
  {
    "text": "the the thing the reason I didn't really mention it because it's definitely worth a talk on its own the other thing is",
    "start": "2588000",
    "end": "2593760"
  },
  {
    "text": "that it's not really part of DDD so it's it's not like it's it's usually like a",
    "start": "2593760",
    "end": "2599040"
  },
  {
    "text": "consequence of taking the Eventing model to The Very extreme but it's not",
    "start": "2599040",
    "end": "2604680"
  },
  {
    "text": "actually part of the core book I I looked it up so it's it's kind of kind of interesting event sourcing sort as",
    "start": "2604680",
    "end": "2611720"
  },
  {
    "text": "the the the concept of working with domain events is but the implementation way of like put having a dedicated event",
    "start": "2611720",
    "end": "2617520"
  },
  {
    "text": "store and stuff is is not um the there's no support in in core spring framework",
    "start": "2617520",
    "end": "2623680"
  },
  {
    "text": "dedicated to that there is this accent framework have you heard of that one there's it's a spring based framework",
    "start": "2623680",
    "end": "2629440"
  },
  {
    "text": "that actually takes the concepts of an event store and provides you with apis that uh allows you to like like capture",
    "start": "2629440",
    "end": "2637960"
  },
  {
    "text": "domain events store those and then easily create a read model from the uh",
    "start": "2637960",
    "end": "2644079"
  },
  {
    "text": "from the from that event store and and then use that on on read requests but there's no dedicated integration with",
    "start": "2644079",
    "end": "2650400"
  },
  {
    "text": "that the thing is that even with the event with event sourcing you basically come to a or you",
    "start": "2650400",
    "end": "2657680"
  },
  {
    "text": "come to a point where you where you have to find out um which are the important",
    "start": "2657680",
    "end": "2662960"
  },
  {
    "text": "events that you want to communicate to the client that it can BAS Bally like the state transition of triggering a",
    "start": "2662960",
    "end": "2668520"
  },
  {
    "text": "payment right that's that's an important event and you have to communicate that to the client somehow whether you",
    "start": "2668520",
    "end": "2674359"
  },
  {
    "text": "implement that on using the consuming that event um using event sourcing or",
    "start": "2674359",
    "end": "2682520"
  },
  {
    "text": "just like with plain repositories doesn't really play into the way you expose your rest web service so because",
    "start": "2682520",
    "end": "2689319"
  },
  {
    "text": "of that the level three was it level level two in in in my leveling uh uh",
    "start": "2689319",
    "end": "2694920"
  },
  {
    "text": "model there was to me was the more important one because if you if you make certain",
    "start": "2694920",
    "end": "2701160"
  },
  {
    "text": "events or the the most important events that are the most important ones to your client explicit in your model it's very",
    "start": "2701160",
    "end": "2708040"
  },
  {
    "text": "easy to put some some hyperm media means on top of them to express them to the clients right that was the the reason I",
    "start": "2708040",
    "end": "2715480"
  },
  {
    "text": "didn't really go that step further it's just like it it doesn't mean it it I don't think it's it's worth doing it or",
    "start": "2715480",
    "end": "2720880"
  },
  {
    "text": "something it's just like okay I don't want to over complicate the the the the topic here in this case",
    "start": "2720880",
    "end": "2727880"
  },
  {
    "text": "yeah uh well that doesn't isn't really a question of DDD in this case because",
    "start": "2734319",
    "end": "2740440"
  },
  {
    "text": "like put requires you to update the the entire resource and the question was for the audience uh when would you use patch",
    "start": "2740440",
    "end": "2746920"
  },
  {
    "text": "versus put um patch is usually used for like partial updates and there is uh",
    "start": "2746920",
    "end": "2752680"
  },
  {
    "text": "some media types like Json patch and Jason merge patch to actually Express",
    "start": "2752680",
    "end": "2758480"
  },
  {
    "text": "changes to an object or or or a document graph um yeah the reason I don't I I",
    "start": "2758480",
    "end": "2765200"
  },
  {
    "text": "like patch because of its flexibility but I don't like patch because people tend to overuse it to poke at stuff and",
    "start": "2765200",
    "end": "2771559"
  },
  {
    "text": "like arbitrarily change things which is basically the the the the opposite of what I tried to uh communicate here one",
    "start": "2771559",
    "end": "2782319"
  },
  {
    "text": "is no of course of course not do you recommend API versioning um I think the",
    "start": "2782720",
    "end": "2789520"
  },
  {
    "text": "the key aspect of rest is and doing rest in like doing rest with Hyper media is",
    "start": "2789520",
    "end": "2795640"
  },
  {
    "text": "actually kind of idiotic because there's no rest without hyper media but the the",
    "start": "2795640",
    "end": "2801240"
  },
  {
    "text": "a lot of aspects of rest are um giving you or the consequences of doing rest",
    "start": "2801240",
    "end": "2807680"
  },
  {
    "text": "are a lot more flexibility in terms of changing your API or um yeah evolving",
    "start": "2807680",
    "end": "2814480"
  },
  {
    "text": "your API that's basic basically what you get from that extra effort of using hyper media um and that means you are",
    "start": "2814480",
    "end": "2822559"
  },
  {
    "text": "less likely to run into a situation where you need what people usually consider as versioning an API right so",
    "start": "2822559",
    "end": "2828599"
  },
  {
    "text": "like either via media type or uis or whatever means there are so um you don't",
    "start": "2828599",
    "end": "2833960"
  },
  {
    "text": "want to do that because you're inevit inevitably breaking clients with that and that means effort or and that also",
    "start": "2833960",
    "end": "2840040"
  },
  {
    "text": "means effort in maintaining different versions of an API so um if you don't",
    "start": "2840040",
    "end": "2845160"
  },
  {
    "text": "have to don't do",
    "start": "2845160",
    "end": "2848400"
  },
  {
    "text": "it sitation because yeah it doesn't seem to",
    "start": "2853839",
    "end": "2862440"
  },
  {
    "text": "me oh it's you was the okay it's for your question okay so what was the point",
    "start": "2862480",
    "end": "2867720"
  },
  {
    "text": "again like we want to respect the",
    "start": "2867720",
    "end": "2872960"
  },
  {
    "text": "PS doesn't have anything to yeah yeah of course yeah that's a good point so the",
    "start": "2872960",
    "end": "2879040"
  },
  {
    "text": "the DDD patterns don't really discuss the aspect of versioning yeah yeah of course one is where do you",
    "start": "2879040",
    "end": "2887559"
  },
  {
    "text": "see the busic the API directr can you repeat",
    "start": "2887559",
    "end": "2895880"
  },
  {
    "text": "that anle directly API yeah",
    "start": "2899800",
    "end": "2907640"
  },
  {
    "text": "yeah dat yeah that example see BU",
    "start": "2911960",
    "end": "2917480"
  },
  {
    "text": "logic oh the question is where is where does business logic go if you use spring RS because it basically takes it takes",
    "start": "2917480",
    "end": "2924280"
  },
  {
    "text": "post operations to create stuff and it supports like delete if you have a delete on your repository and whatnot so",
    "start": "2924280",
    "end": "2931520"
  },
  {
    "text": "um there are U basically um events that that spring that AR rest fire so",
    "start": "2931520",
    "end": "2936880"
  },
  {
    "text": "whenever you a resource is about to be created you get the resource before it actually gets handed to the repository",
    "start": "2936880",
    "end": "2943040"
  },
  {
    "text": "so you can sneak in or plug in some some validation logic there of course which is something that that's usually always",
    "start": "2943040",
    "end": "2949839"
  },
  {
    "text": "in there um it respect security Spring Security annotations uh out of the box",
    "start": "2949839",
    "end": "2955160"
  },
  {
    "text": "but so the there the events are the the prim primary means to like plug in just like Java based business logic what you",
    "start": "2955160",
    "end": "2962119"
  },
  {
    "text": "can also do is just like selectively override resources right so you could just like plug in your own spring MVC",
    "start": "2962119",
    "end": "2968079"
  },
  {
    "text": "controller and say oh by the way I want to handle put requests for orders myself and then just do what the heck you want",
    "start": "2968079",
    "end": "2974400"
  },
  {
    "text": "at that point that is true as long as you have",
    "start": "2974400",
    "end": "2980640"
  },
  {
    "text": "very API so your API is very high for example for back office applications but",
    "start": "2980640",
    "end": "2988920"
  },
  {
    "text": "there are",
    "start": "2988920",
    "end": "2991200"
  },
  {
    "text": "situations let's let's have that offline yeah is",
    "start": "2994119",
    "end": "2999680"
  },
  {
    "text": "itang dat strict answer yes it is uh I I",
    "start": "2999680",
    "end": "3007839"
  },
  {
    "text": "wouldn't want and I think I had it in the in the in the talk um in in the rest",
    "start": "3007839",
    "end": "3013079"
  },
  {
    "text": "world the things that you know about are uis and as the name suggests unique resource identifier these are the things",
    "start": "3013079",
    "end": "3019839"
  },
  {
    "text": "that you should identify your um your resources with um everything else needs",
    "start": "3019839",
    "end": "3026079"
  },
  {
    "text": "to be like done using like a query resources or something so you find something buy something um and that's",
    "start": "3026079",
    "end": "3034200"
  },
  {
    "text": "much more effort because you basically know have to know about the URI template have to expand the U template you have",
    "start": "3034200",
    "end": "3039440"
  },
  {
    "text": "to know to which which uh property to put in there so of course you can go ahead and expose a URI template that",
    "start": "3039440",
    "end": "3046319"
  },
  {
    "text": "just takes a database identifier and uh then looks up a um um a resource",
    "start": "3046319",
    "end": "3052920"
  },
  {
    "text": "instance from that but that basically means means that the client knows about that thing being an identifier that part",
    "start": "3052920",
    "end": "3059640"
  },
  {
    "text": "of the object being identifier or that property and if that's not the case i' just like to not tell the client that's",
    "start": "3059640",
    "end": "3067520"
  },
  {
    "text": "that's basically it if your eyes are sufficient like and they should be",
    "start": "3067520",
    "end": "3073798"
  },
  {
    "text": "usually all right yeah don't",
    "start": "3074400",
    "end": "3079760"
  },
  {
    "text": "know I can I mean got to catch the train but we we still we still",
    "start": "3079760",
    "end": "3086559"
  },
  {
    "text": "time okay return interesting question so what how",
    "start": "3086559",
    "end": "3093760"
  },
  {
    "text": "do you actually like want return limit your your scope of of of um of",
    "start": "3093760",
    "end": "3099400"
  },
  {
    "text": "properties uh you can always take uh use like there's the the in in this case the Jackson customization uh Jackson",
    "start": "3099400",
    "end": "3106240"
  },
  {
    "text": "customization so you can add ignore at Json ignore Fields there's a dedicated concept we have in the framework for",
    "start": "3106240",
    "end": "3112040"
  },
  {
    "text": "projections so you can on the server side Define an interface with only the properties you want to expose in a",
    "start": "3112040",
    "end": "3117760"
  },
  {
    "text": "certain case um and even enrich that with with like calls to other uh spring",
    "start": "3117760",
    "end": "3123000"
  },
  {
    "text": "beans to enrich your representation if you want to so the other ways around works well is too um and then the client",
    "start": "3123000",
    "end": "3130000"
  },
  {
    "text": "can actually ask for the for that particular projection as we call it so you can have a customer excerpt and and",
    "start": "3130000",
    "end": "3136480"
  },
  {
    "text": "stuff like that um but that's probably like taking too long to explain in detail there are means to it and it's an",
    "start": "3136480",
    "end": "3143960"
  },
  {
    "text": "something that we tackle explicit ly um so there are uh SPI for",
    "start": "3143960",
    "end": "3150920"
  },
  {
    "text": "that instead of flags in an envelope representation are we back to soap have",
    "start": "3157079",
    "end": "3162839"
  },
  {
    "text": "we back to soap now is it your question",
    "start": "3162839",
    "end": "3169920"
  },
  {
    "text": "link the L exists like an envelope around",
    "start": "3171920",
    "end": "3177359"
  },
  {
    "text": "representation of object says that it's at St that's that's may I mean yeah um I",
    "start": "3177359",
    "end": "3186680"
  },
  {
    "text": "haven't show you the the representation actually there is additional information there is still a field that says status",
    "start": "3186680",
    "end": "3193920"
  },
  {
    "text": "in the representation status payment expected the thing is I don't want the client to know that this is it it's it's",
    "start": "3193920",
    "end": "3200440"
  },
  {
    "text": "that's stuff for him to display for for it to display but not to like this decide when to do what right so if it's",
    "start": "3200440",
    "end": "3208240"
  },
  {
    "text": "if it's very clear that the links are the things that decide what what to do with that's a lot less information",
    "start": "3208240",
    "end": "3214520"
  },
  {
    "text": "because then I can change the status field to to something else or or what have you if it if it doesn't like build",
    "start": "3214520",
    "end": "3220839"
  },
  {
    "text": "on that property to to uh to decide when it displays what which",
    "start": "3220839",
    "end": "3226760"
  },
  {
    "text": "button yeah last istion what's your op API my API uh oh",
    "start": "3226760",
    "end": "3235480"
  },
  {
    "text": "that's a anyone very extended question yeah it's very very um yeah I don't",
    "start": "3235480",
    "end": "3240599"
  },
  {
    "text": "think Swagger is a good idea to phrase it politely um the reason for that being",
    "start": "3240599",
    "end": "3247760"
  },
  {
    "text": "that uh I mean hyper mesia is not a topic for Swagger they there was a ticket for to add support for that uh",
    "start": "3247760",
    "end": "3254040"
  },
  {
    "text": "they outright rejected it so that's um that's the one side of the story the other aspect is uh if you've ever done U",
    "start": "3254040",
    "end": "3262640"
  },
  {
    "text": "like a or done Swagger documentation and used the annotations in your code it's getting annotation hell really quickly",
    "start": "3262640",
    "end": "3270200"
  },
  {
    "text": "and I've seen a couple of examples where they spend like 10 lines of code annotating which status codes could be",
    "start": "3270200",
    "end": "3276720"
  },
  {
    "text": "returned and like from the method and then in within that very method they",
    "start": "3276720",
    "end": "3281880"
  },
  {
    "text": "return a different status code so it basically suffers from the the Java do problematic uh basically the the",
    "start": "3281880",
    "end": "3288760"
  },
  {
    "text": "annotations getting out of sync um with what what's actually returned the",
    "start": "3288760",
    "end": "3294119"
  },
  {
    "text": "solution to that is is I think actually writing test cases for your uh for your",
    "start": "3294119",
    "end": "3300599"
  },
  {
    "text": "uh restful web API and using the test cases to basically document what the",
    "start": "3300599",
    "end": "3305920"
  },
  {
    "text": "test does right because that's what what you do to your API and what's proven to",
    "start": "3305920",
    "end": "3311559"
  },
  {
    "text": "work uh because otherwise the build would break um guess what there's a spring project for that uh spring rest",
    "start": "3311559",
    "end": "3318359"
  },
  {
    "text": "dos um it's it's a very young one admittedly but uh it does exactly that so you could use and that's actually",
    "start": "3318359",
    "end": "3324440"
  },
  {
    "text": "what the author of the project Andy uh is currently working on um putting taking that spring rest dos thing and",
    "start": "3324440",
    "end": "3331000"
  },
  {
    "text": "just manipulating the the test slightly to produce uh some documentation output it will produce uh asky doctor by",
    "start": "3331000",
    "end": "3337559"
  },
  {
    "text": "default and can then be included into some manually written asy doctor um",
    "start": "3337559",
    "end": "3344480"
  },
  {
    "text": "documentation spring rest dos that's the that's the link that I want to give you",
    "start": "3344480",
    "end": "3349760"
  },
  {
    "text": "um so thanks for your attention and um have fun at the conference",
    "start": "3349760",
    "end": "3357000"
  }
]