[
  {
    "text": "[Music] I live in Silicon Valley and San Mateo",
    "start": "6990",
    "end": "12920"
  },
  {
    "text": "but I'm mostly on an airplane traveling around the world getting to do cool things like talk about spring which I",
    "start": "12920",
    "end": "19640"
  },
  {
    "text": "love and also writing a book called cloud native Java to the labor of love over the last two years with Josh long",
    "start": "19640",
    "end": "26060"
  },
  {
    "text": "who's also a screen developer advocate and this book is all about building microservices his cloud native",
    "start": "26060",
    "end": "31130"
  },
  {
    "text": "applications using spring boot spring cloud and cloud foundry oh I also like",
    "start": "31130",
    "end": "36950"
  },
  {
    "text": "to say that I I build highly scalable hello world app that's going to be a theme so all right so a little bit of an",
    "start": "36950",
    "end": "43730"
  },
  {
    "text": "agenda we're going to talk about monolith to micro services so tracing the progression answering the question of why why are we on this path and I'm",
    "start": "43730",
    "end": "52100"
  },
  {
    "text": "going to show you an online store example that I put together for the book I'm gonna walk through a demo of it usually I have people guess how many",
    "start": "52100",
    "end": "58579"
  },
  {
    "text": "micro services if you want to just shout out a number I welcome you to do that then I'll talk about screen boot a",
    "start": "58579",
    "end": "63829"
  },
  {
    "text": "little bit who's using spring today just curious that's a lot of people and then I'll talk about event-driven",
    "start": "63829",
    "end": "69530"
  },
  {
    "text": "microservices some of the work that I've done research that I've done some of the things that I've seen with biffle's",
    "start": "69530",
    "end": "74749"
  },
  {
    "text": "customers and I'll show you some patterns that are successful ok microservice is how did we get there so",
    "start": "74749",
    "end": "82189"
  },
  {
    "text": "we started with the monolithic application architecture right this is something that we should all be familiar with now in this deployment we have one",
    "start": "82189",
    "end": "90259"
  },
  {
    "text": "war artifact and we have modules in there I have a storefront UI I have an accounting service an inventory service",
    "start": "90259",
    "end": "96170"
  },
  {
    "text": "and a shipping service so we have modularity in this deployment but the problem as you may know is that when you",
    "start": "96170",
    "end": "102799"
  },
  {
    "text": "have one deployment when you're sharing one deployment pipeline and everybody's working off that deployment pipeline",
    "start": "102799",
    "end": "108289"
  },
  {
    "text": "things are gonna slow down right you're gonna have conflicts you're gonna need to coordinate more and so this",
    "start": "108289",
    "end": "113990"
  },
  {
    "text": "introduces a bunch of problems into this kind of architecture so first of all it's going to slow our velocity getting",
    "start": "113990",
    "end": "119689"
  },
  {
    "text": "the production right so if we have a bunch of different teams who are competing to add features in the product that's really gonna slow things down and",
    "start": "119689",
    "end": "127420"
  },
  {
    "text": "also it takes too long to ramp up engineers so it's not so simple just to add more engineers to a project to go",
    "start": "127420",
    "end": "134360"
  },
  {
    "text": "faster right so if we have a million lines of code codebase has a million lines then these developers",
    "start": "134360",
    "end": "140780"
  },
  {
    "text": "to spend time ramping up on that code before they're able to effectively commit changes and not commit defects",
    "start": "140780",
    "end": "148730"
  },
  {
    "text": "into production so at some point the code base becomes too large for any one",
    "start": "148730",
    "end": "154700"
  },
  {
    "text": "person to fully comprehend right and the most productive engineers become",
    "start": "154700",
    "end": "159739"
  },
  {
    "text": "historians they become the storytellers the Oracles that you go to not the database but the people the people that",
    "start": "159739",
    "end": "165140"
  },
  {
    "text": "you go to in the organization to learn the history of the codebase and they're the most productive engineers usually",
    "start": "165140",
    "end": "171280"
  },
  {
    "text": "they started the application they have all of the context necessary to understand how to implement new features",
    "start": "171280",
    "end": "178220"
  },
  {
    "text": "and they're stuck telling this story also there are two opposing forces in",
    "start": "178220",
    "end": "185120"
  },
  {
    "text": "this kind of development on a monolithic application right so you have one force which is the developers who are",
    "start": "185120",
    "end": "190580"
  },
  {
    "text": "responsible for making changes and then you have other forces that are opposing those changes right so there's these",
    "start": "190580",
    "end": "196700"
  },
  {
    "text": "flood of changes that are getting into production and then you have DBAs you have your ops team who are resisting",
    "start": "196700",
    "end": "202370"
  },
  {
    "text": "these changes they're fighting back because they have other responsibilities that aren't pretty important like",
    "start": "202370",
    "end": "207530"
  },
  {
    "text": "keeping production on line making sure the database stays on line and so we",
    "start": "207530",
    "end": "212630"
  },
  {
    "text": "have this kind of this push and pull between these two teams that causes a lot of strife and we also have to",
    "start": "212630",
    "end": "220370"
  },
  {
    "text": "coordinate a lot more right so our release cycles are going to get bigger because we have to coordinate more between our product managers between our",
    "start": "220370",
    "end": "227420"
  },
  {
    "text": "teams and this kind of creates this culture of negotiating bartering on which features get into the next release",
    "start": "227420",
    "end": "234880"
  },
  {
    "text": "and then our operations team is responsible for all of the",
    "start": "234880",
    "end": "239930"
  },
  {
    "text": "infrastructure right they're responsible for the runtime environment of the applications and so we have our developers who may want to use a new",
    "start": "239930",
    "end": "247010"
  },
  {
    "text": "tool or a new version of a tool and they're gonna have to go through submit a ticket to operations to get a virtual",
    "start": "247010",
    "end": "252890"
  },
  {
    "text": "machine upgraded right so our ops team's gonna be responsible for all of our infrastructure not just making sure the",
    "start": "252890",
    "end": "258739"
  },
  {
    "text": "application stays online and monitoring it but also responsible for up creating these virtual machines and that's a lot",
    "start": "258739",
    "end": "264770"
  },
  {
    "text": "of responsibility but more than anything it's this right you have to deploy",
    "start": "264770",
    "end": "270020"
  },
  {
    "text": "everything at once or nothing at all and that creates a lot of cultural problems which slow things down and",
    "start": "270020",
    "end": "276319"
  },
  {
    "text": "create a lot of friction so then we move to this we move towards the",
    "start": "276319",
    "end": "281689"
  },
  {
    "text": "service-oriented architecture the SOA and here I have an example of a services",
    "start": "281689",
    "end": "286849"
  },
  {
    "text": "team who's managing three different services the accounting service inventory and shipping and now we've",
    "start": "286849",
    "end": "293240"
  },
  {
    "text": "gotten a little bit better right we split out that one deployment pipeline into three different deployment pipelines and there may be more but the",
    "start": "293240",
    "end": "300469"
  },
  {
    "text": "problem here is that it's not so easy just to deploy one service if I have one change now if you look at the very",
    "start": "300469",
    "end": "306499"
  },
  {
    "text": "bottom there in green we kind of have these these domain objects that we're using as a language to implement",
    "start": "306499",
    "end": "311810"
  },
  {
    "text": "features in the application so if I just make a change to let's say customers or accounts then I can just deploy the",
    "start": "311810",
    "end": "318529"
  },
  {
    "text": "accounting service no big deal no problem but what happens if I make a change to the address record then I have",
    "start": "318529",
    "end": "324830"
  },
  {
    "text": "a coordinated release of three separate artifacts right and what happens if something goes wrong now I need to roll",
    "start": "324830",
    "end": "330469"
  },
  {
    "text": "everything back at the same time as well and so this creates a lot of complexity which isn't very efficient for making",
    "start": "330469",
    "end": "337370"
  },
  {
    "text": "sure that production doesn't go down so now we've arrived at micro services",
    "start": "337370",
    "end": "343969"
  },
  {
    "text": "right and we've gotten better at a lot of things we've also kind of got a little bit worse at some things but in",
    "start": "343969",
    "end": "350479"
  },
  {
    "text": "general it solves a lot of these problems that we had with a monolithic application architecture so first of all",
    "start": "350479",
    "end": "356029"
  },
  {
    "text": "small teams are going to organize around business capabilities I'm sure most of you if you've attended the previous",
    "start": "356029",
    "end": "362120"
  },
  {
    "text": "tracks today I've heard this story over and over again and then we're gonna have each micro service team expose an API",
    "start": "362120",
    "end": "368149"
  },
  {
    "text": "over rest over HTTP and they're gonna integrate with other services so we're gonna have this producer and consumer",
    "start": "368149",
    "end": "374210"
  },
  {
    "text": "economy of api's which are going to be used to implement features now the",
    "start": "374210",
    "end": "379699"
  },
  {
    "text": "beauty of this so theoretically is that each team can go at their own pace they can independently deploy their changes",
    "start": "379699",
    "end": "386210"
  },
  {
    "text": "to production and they don't have to worry about all these other teams competing with them to introduce",
    "start": "386210",
    "end": "391939"
  },
  {
    "text": "features into one large monolithic application so each micro service is",
    "start": "391939",
    "end": "398000"
  },
  {
    "text": "independently deployable right well each micro service is independently deployable which is going to increase",
    "start": "398000",
    "end": "404209"
  },
  {
    "text": "the speed that we can get changes into a production environment but each micro-service has to be careful",
    "start": "404209",
    "end": "410540"
  },
  {
    "text": "about the changes that are the libraries that they're gonna share right so if there's a library that's shared across",
    "start": "410540",
    "end": "416300"
  },
  {
    "text": "these microservices and i make a change and i have a coordinator release then we're stuck into the same problem but at",
    "start": "416300",
    "end": "422330"
  },
  {
    "text": "a hundred microservices or more that's going to be very hard to manage so teams",
    "start": "422330",
    "end": "427880"
  },
  {
    "text": "can pick the best tool for the job that's one of the benefits you see a lot of yellow here in this example application I have a movie application",
    "start": "427880",
    "end": "434660"
  },
  {
    "text": "kind of like Netflix I have the user service the movie service rating recommendation and analysis now each one",
    "start": "434660",
    "end": "441320"
  },
  {
    "text": "of these applications is a small team of developers and each one is able to choose the tools that are best suited to",
    "start": "441320",
    "end": "446870"
  },
  {
    "text": "solve the problem at hand for example the rating service is responsible for generating recommendations they're gonna connect a",
    "start": "446870",
    "end": "453440"
  },
  {
    "text": "user object to a movie object using a rating and they're gonna generate a recommendation now what they're doing to",
    "start": "453440",
    "end": "460760"
  },
  {
    "text": "do that is that they're going to use Apache spark they're gonna use graphics to create a page rate PageRank",
    "start": "460760",
    "end": "466430"
  },
  {
    "text": "recommendation off of that data now that data doesn't really fit well into a relational database and so they decided",
    "start": "466430",
    "end": "472370"
  },
  {
    "text": "to use neo4j instead which is a graph database and so one of the benefits with this architecture is you can choose",
    "start": "472370",
    "end": "478040"
  },
  {
    "text": "these tools that are more efficient at solving some problems that you would otherwise have to use a relational",
    "start": "478040",
    "end": "484400"
  },
  {
    "text": "database and then transform that data into a graph which adds a lot more complexity but things also become harder",
    "start": "484400",
    "end": "493430"
  },
  {
    "text": "right so if we have a transaction that spans multiple services how are we going to manage rolling back maybe an",
    "start": "493430",
    "end": "500690"
  },
  {
    "text": "inconsistent state that spans three different services so if I have a rating service a transaction that spans the",
    "start": "500690",
    "end": "506840"
  },
  {
    "text": "rating service user service and movie service and something goes wrong with the user service now I've changed State",
    "start": "506840",
    "end": "513590"
  },
  {
    "text": "in three different databases all with their own different guarantees and I have no reliable way to rollback that",
    "start": "513590",
    "end": "519349"
  },
  {
    "text": "change right and so that's why we use things like event sourcing because we have a audit trail of all of the events",
    "start": "519350",
    "end": "525620"
  },
  {
    "text": "that have happened that have changed the state of the system and can use that to rollback",
    "start": "525620",
    "end": "531010"
  },
  {
    "text": "so now I'm going to walk you through an online store example that I put together I'll have you guys shout out a number of",
    "start": "531520",
    "end": "536990"
  },
  {
    "text": "how many micro-services you think are behind this application so this is cloud native outfitters not",
    "start": "536990",
    "end": "545600"
  },
  {
    "text": "quite let's try something else",
    "start": "545600",
    "end": "550750"
  },
  {
    "text": "so this is cloud native Outfitters it's a online store application they put together and it sells just for t-shirts",
    "start": "553959",
    "end": "561070"
  },
  {
    "text": "now this is built with microcircuits and this is just the front end application the it's a single page application just",
    "start": "561070",
    "end": "567320"
  },
  {
    "text": "with static content HTML CSS and JavaScript and I can go ahead and explore the product catalog here so I",
    "start": "567320",
    "end": "573800"
  },
  {
    "text": "can go to one of the shirts that's not cool that's embarrassing",
    "start": "573800",
    "end": "585519"
  },
  {
    "text": "somebody got access to my AWS account I shouldn't show that in my demos my keys",
    "start": "586060",
    "end": "592029"
  },
  {
    "text": "all right so I'm gonna pretend like it's a real application alright so here's the online store application and what I can",
    "start": "592029",
    "end": "599060"
  },
  {
    "text": "do is I can add products to my cart and I can check out but before I do that I",
    "start": "599060",
    "end": "604250"
  },
  {
    "text": "need to sign in i'm redirected to an oauth2 gateway and so I'll be redirected back to the application so there's at",
    "start": "604250",
    "end": "610220"
  },
  {
    "text": "least two apps here and what I can do is just a basic workflow of adding products",
    "start": "610220",
    "end": "616010"
  },
  {
    "text": "to the car and then checking out and creating an order now if you want to think in terms of a front-end developer",
    "start": "616010",
    "end": "621440"
  },
  {
    "text": "how hard would it be to communicate with 500 different micro services and a back-end to develop out an application",
    "start": "621440",
    "end": "627610"
  },
  {
    "text": "now for our front-end developers they want to be able to develop the app just in the same way that they have with a",
    "start": "627610",
    "end": "633770"
  },
  {
    "text": "monolithic application and so we can use something called an api gateway to do that so i have you guys guests i know",
    "start": "633770",
    "end": "640370"
  },
  {
    "text": "it's not as exciting as showing you the demo i'm sorry about that but how many micro services do you think more than to",
    "start": "640370",
    "end": "646040"
  },
  {
    "text": "our power in this application i heard five heard eight ten yes in the back",
    "start": "646040",
    "end": "653950"
  },
  {
    "text": "there's ten micro services here not at the very top we interacted well very",
    "start": "653950",
    "end": "659360"
  },
  {
    "text": "briefly with the online store web and that's hosting our static content in the",
    "start": "659360",
    "end": "664850"
  },
  {
    "text": "middle there we actually would have interacted with another service called the user service which is the oauth2 gateway now in this process of being",
    "start": "664850",
    "end": "673070"
  },
  {
    "text": "redirected back to the online store web i'm able to use these services in the middle to reuse these services across",
    "start": "673070",
    "end": "680120"
  },
  {
    "text": "all my micro service applications but in order to develop against a lot of micro services what i can use as an api",
    "start": "680120",
    "end": "686630"
  },
  {
    "text": "now they're in the center I have the edge service in red which is going to act as my API gateway which I can use to",
    "start": "686630",
    "end": "693380"
  },
  {
    "text": "reverse proxy into back-end services now at the very bottom those are my micro services I have a catalog service an",
    "start": "693380",
    "end": "700130"
  },
  {
    "text": "account service inventory shopping cart and order now each one of these micro",
    "start": "700130",
    "end": "705259"
  },
  {
    "text": "services has their own database it's a small team of developers who are implementing features and deploying",
    "start": "705259",
    "end": "710990"
  },
  {
    "text": "independently but that API gateway in the center is going to allow front-end developers to seem seamlessly integrate",
    "start": "710990",
    "end": "717680"
  },
  {
    "text": "with these back-end services so they can just reverse proxy to four slash account and that gives them access to the",
    "start": "717680",
    "end": "724100"
  },
  {
    "text": "account service or a forward slash cart and that will give them access to the shopping cart service now I have some",
    "start": "724100",
    "end": "730100"
  },
  {
    "text": "other things here I have a discovery service and a configuration server that those things are gonna give me the",
    "start": "730100",
    "end": "735500"
  },
  {
    "text": "ability to be able to centralize my configuration management as well as being able to discover other services",
    "start": "735500",
    "end": "743230"
  },
  {
    "text": "now in the process of using micro services or going to micro services it's not so simple just to build new",
    "start": "743440",
    "end": "749870"
  },
  {
    "text": "applications and so companies are wondering who who have solutions or software that are 10 years or more old",
    "start": "749870",
    "end": "756740"
  },
  {
    "text": "how do I go from my monolithic application to a micro service and so",
    "start": "756740",
    "end": "761990"
  },
  {
    "text": "this is one method which is called splitting the mic splitting the monolith where I can go into my monolithic",
    "start": "761990",
    "end": "767089"
  },
  {
    "text": "application and module by module I can extract them out refactor them into separate applications and then I can",
    "start": "767089",
    "end": "774139"
  },
  {
    "text": "communicate back over HTTP now the first step in this process is to in this",
    "start": "774139",
    "end": "779240"
  },
  {
    "text": "example I have a customer service there which used to have a friend front-end inside of it the first step is I'm just",
    "start": "779240",
    "end": "784880"
  },
  {
    "text": "going to rip out that front-end and I'm gonna create that as the online banking application there and then I'm going to",
    "start": "784880",
    "end": "789920"
  },
  {
    "text": "communicate over HTTP back to the customer service now I have a discovery service and a configuration service here",
    "start": "789920",
    "end": "796399"
  },
  {
    "text": "as well which are going to help me as I add more micro services be able to discover discover other services and",
    "start": "796399",
    "end": "802970"
  },
  {
    "text": "manage my configuration now in the backend that's going to be the first place I take a look at when I decide",
    "start": "802970",
    "end": "808880"
  },
  {
    "text": "what's a good next service to extract out now I have a user table here which",
    "start": "808880",
    "end": "814670"
  },
  {
    "text": "looks good of course there's no foreign key relationships or anything connecting it to the other tape in the database which makes it great and",
    "start": "814670",
    "end": "822079"
  },
  {
    "text": "what I've done here is I've migrated that to a new database called the user dB I've also refactored the customer",
    "start": "822079",
    "end": "829549"
  },
  {
    "text": "service all of the code related to authentication for users to a new service called the user service now this",
    "start": "829549",
    "end": "837409"
  },
  {
    "text": "looks very simple right so on paper this looks good but in practice how well does this work has anyone tried this is",
    "start": "837409",
    "end": "844639"
  },
  {
    "text": "anyone skeptical I'm a little skeptical right because you have all this other",
    "start": "844639",
    "end": "850369"
  },
  {
    "text": "stuff there in the backend that you're not really paying attention to right like a data warehouse right or foreign",
    "start": "850369",
    "end": "856069"
  },
  {
    "text": "key relationships it's not so easy just to rip things out and create new applications now people do this and",
    "start": "856069",
    "end": "862069"
  },
  {
    "text": "they're successful with it but it does introduce a lot of problems with old applications legacy applications you",
    "start": "862069",
    "end": "868519"
  },
  {
    "text": "have an ecosystem of communication between software that it doesn't make it so easy just to rip things out and",
    "start": "868519",
    "end": "874489"
  },
  {
    "text": "create it as a new micro service so there are problems with micro services",
    "start": "874489",
    "end": "880129"
  },
  {
    "text": "as well the first one is is that there's no foreign key constraints between services right so if I have three",
    "start": "880129",
    "end": "886699"
  },
  {
    "text": "different micro services and they're referencing objects to one another that are stored in their database if I delete",
    "start": "886699",
    "end": "892759"
  },
  {
    "text": "one then I don't really have a foreign key constraint and the other services to delete those objects as well I'm going",
    "start": "892759",
    "end": "901639"
  },
  {
    "text": "to switch my view real quick",
    "start": "901639",
    "end": "904600"
  },
  {
    "text": "so splitting up my large database with years and years of history isn't so easy and it's not going to be done without",
    "start": "909390",
    "end": "916210"
  },
  {
    "text": "interrupting the business as well another microservice problem is I have I",
    "start": "916210",
    "end": "921940"
  },
  {
    "text": "have legacy problems I've got layers and layers of legacy scarring that runs for my ESV all the way down to my mainframe",
    "start": "921940",
    "end": "928600"
  },
  {
    "text": "and I have to worry about how I add another layer of Micra services all around this right so I can use something",
    "start": "928600",
    "end": "935290"
  },
  {
    "text": "called the strangler pattern which over time you'll run a new workload side-by-side was with an older workload",
    "start": "935290",
    "end": "941410"
  },
  {
    "text": "and you can begin to deprecate or begin to phase out that legacy technology over",
    "start": "941410",
    "end": "946480"
  },
  {
    "text": "time another problem is what about my data",
    "start": "946480",
    "end": "951880"
  },
  {
    "text": "warehouse right so not only do real companies with real software have complex database schemas but they also",
    "start": "951880",
    "end": "957990"
  },
  {
    "text": "have ETL is running back and forth between a production database and data",
    "start": "957990",
    "end": "963370"
  },
  {
    "text": "warehouse right so I have to worry about that as well now getting everybody on the same page at a large company is",
    "start": "963370",
    "end": "969010"
  },
  {
    "text": "pretty difficult right so you have to get everyone together to agree on what's affected by taking a module in a",
    "start": "969010",
    "end": "975850"
  },
  {
    "text": "monolithic application and refactoring it out it's a micro service also teams",
    "start": "975850",
    "end": "984370"
  },
  {
    "text": "are gonna be creating redundant functionality right so I've solved all my legacy problems and I'm on track to",
    "start": "984370",
    "end": "989890"
  },
  {
    "text": "success my teams are pumping out features very fast so I get that hooray",
    "start": "989890",
    "end": "995320"
  },
  {
    "text": "but wait there's more code lots more code and you have a lot of teams that are creating redundant code like an",
    "start": "995320",
    "end": "1001140"
  },
  {
    "text": "authentication provider let's say we have 15 different teams creating the same functionality and now we have",
    "start": "1001140",
    "end": "1006900"
  },
  {
    "text": "snowflake implementations all across our micro services but nobody really knows what's being created the same in each",
    "start": "1006900",
    "end": "1013680"
  },
  {
    "text": "one of these services also distributed",
    "start": "1013680",
    "end": "1019110"
  },
  {
    "text": "transactions are brittle right so I've solved all my redundancy problems I'm extracting out redundant code on",
    "start": "1019110",
    "end": "1024870"
  },
  {
    "text": "creating as a service and providing it through cloud platform but now I have a distributed transaction problem so my",
    "start": "1024870",
    "end": "1031620"
  },
  {
    "text": "teams are creating transactions that are spanning these multiple services and because they're using brittle HTTP HTTP",
    "start": "1031620",
    "end": "1037949"
  },
  {
    "text": "my data gets into an unrecoverable can inconsistent state so now customer support is asking DBAs",
    "start": "1037950",
    "end": "1045209"
  },
  {
    "text": "to change fields in the database but all the DBA is left and so now I have a mess on my hand so micro-services introduced",
    "start": "1045210",
    "end": "1051630"
  },
  {
    "text": "a bunch more problems and I like this quote so every bug becomes a",
    "start": "1051630",
    "end": "1058050"
  },
  {
    "text": "murder-mystery right so I somehow managed to refactor my 500 micro services to use event sourcing to use",
    "start": "1058050",
    "end": "1064350"
  },
  {
    "text": "CQRS to hand to handle distributed transactions and that only took 10 years and now everything's herbalists in AI",
    "start": "1064350",
    "end": "1070890"
  },
  {
    "text": "and chatbots but now I can't see what's going on with my application right so I",
    "start": "1070890",
    "end": "1076560"
  },
  {
    "text": "have all of these different micro services and I have no way to observe what's going on when something goes wrong so I have to go to each one of",
    "start": "1076560",
    "end": "1083340"
  },
  {
    "text": "these teams to figure out what's going what's going wrong so I ask questions and eventually I might be able to trace",
    "start": "1083340",
    "end": "1089430"
  },
  {
    "text": "the root cause so distributed systems are very hard",
    "start": "1089430",
    "end": "1095790"
  },
  {
    "text": "right no one said it was going to be easy but we need these other things these other tooling to be able to help",
    "start": "1095790",
    "end": "1102180"
  },
  {
    "text": "us solve these problems so without a venture of and architectures in a cloud",
    "start": "1102180",
    "end": "1108060"
  },
  {
    "text": "platform you're going to quickly drown from all the hard problems that you might have not known existed so a lot of",
    "start": "1108060",
    "end": "1118230"
  },
  {
    "text": "people are using spring boots today I'm just gonna quickly go through it what is spring boot I like to call on fill webs",
    "start": "1118230",
    "end": "1125040"
  },
  {
    "text": "tweet this is about last year when he wanted to explain the difference between Spring Framework and spring boot and the",
    "start": "1125040",
    "end": "1131790"
  },
  {
    "text": "way that he explained it is that the spring ecosystem is really a collection of projects which are like ingredients",
    "start": "1131790",
    "end": "1137610"
  },
  {
    "text": "that I can compose together manually to bake a finish service or a cake now the",
    "start": "1137610",
    "end": "1143760"
  },
  {
    "text": "eggs here might be spring MVC and the flower might be spring security now I",
    "start": "1143760",
    "end": "1149250"
  },
  {
    "text": "can have to configure each one of these components manually and put them together for my finished application now",
    "start": "1149250",
    "end": "1155640"
  },
  {
    "text": "spring boot really is just a way to Auto configure to ask Spring initializer for",
    "start": "1155640",
    "end": "1161370"
  },
  {
    "text": "a set of ingredients and you get the finished cake so since my first demo",
    "start": "1161370",
    "end": "1168210"
  },
  {
    "text": "fail I'm gonna try it another one and so I'm gonna show you spring",
    "start": "1168210",
    "end": "1174820"
  },
  {
    "text": "initializer so spring initializer at start dot spring do is going to allow you to choose a set of ingredients that",
    "start": "1174820",
    "end": "1181360"
  },
  {
    "text": "you need to build your micro service and so I'm going to quickly walk through this here I could generate a maven",
    "start": "1181360",
    "end": "1187570"
  },
  {
    "text": "project or a Gradle projects I can choose my spring boot version and then I",
    "start": "1187570",
    "end": "1193600"
  },
  {
    "text": "can name my service I'll name this the user service and then I can choose my",
    "start": "1193600",
    "end": "1199960"
  },
  {
    "text": "dependencies so here I'm going to choose web I'm gonna choose JPA that's going to",
    "start": "1199960",
    "end": "1208420"
  },
  {
    "text": "allow me to create my data objects to use ORM to map them to a relational database so I'll choose JPA",
    "start": "1208420",
    "end": "1215670"
  },
  {
    "text": "then I'm going to choose H - that's an in-memory database I can of course choose my sequel but I'll choose H - and",
    "start": "1215670",
    "end": "1225490"
  },
  {
    "text": "then I'm gonna need a REST API so I'm gonna choose rest for posit or ease that's going to turn my data layer all",
    "start": "1225490",
    "end": "1231820"
  },
  {
    "text": "my domain objects into a REST API the last thing I'll choose here is",
    "start": "1231820",
    "end": "1237490"
  },
  {
    "text": "actuator now actuator is a special project I can add on to my application it's going to expose a set of endpoints",
    "start": "1237490",
    "end": "1244630"
  },
  {
    "text": "over HTTP which allow me to introspect my application so I'll choose actuator",
    "start": "1244630",
    "end": "1250950"
  },
  {
    "text": "then finally I'm going to generate my project and it downloads a compressed",
    "start": "1251460",
    "end": "1260740"
  },
  {
    "text": "folder with my source code and I'm just gonna go ahead and run it so I'm gonna",
    "start": "1260740",
    "end": "1266830"
  },
  {
    "text": "use the command here maven spring boot run and that's going",
    "start": "1266830",
    "end": "1272440"
  },
  {
    "text": "to compile my application and start it up",
    "start": "1272440",
    "end": "1276570"
  },
  {
    "text": "so the application is going to start up on port 8080 and if I open it up in a",
    "start": "1288480",
    "end": "1294240"
  },
  {
    "text": "browser feeling lucky",
    "start": "1294240",
    "end": "1299210"
  },
  {
    "text": "all right so I've got a localhost:8080 in my browser and I get back a response here in JSON",
    "start": "1310100",
    "end": "1315200"
  },
  {
    "text": "it's the hypermedia response which tells me what I can do with my application now one of the things I can do out of the",
    "start": "1315200",
    "end": "1321320"
  },
  {
    "text": "box here is go to forward slash actuator and I'm gonna get back a set of links",
    "start": "1321320",
    "end": "1326419"
  },
  {
    "text": "here that I can use to introspect my application I can look at for instance",
    "start": "1326419",
    "end": "1332950"
  },
  {
    "text": "health which tells me a status of my application or info which tells me very",
    "start": "1332950",
    "end": "1338660"
  },
  {
    "text": "little right now and if I go to env I get an error which is expected because",
    "start": "1338660",
    "end": "1344659"
  },
  {
    "text": "spring boots going to auto configure everything out of the box right so the spring engineers have an opinion of how",
    "start": "1344659",
    "end": "1350090"
  },
  {
    "text": "these components should be configured now if I go to back to the source code",
    "start": "1350090",
    "end": "1356929"
  },
  {
    "text": "here I'm going to open this up in IntelliJ IDEA",
    "start": "1356929",
    "end": "1360940"
  },
  {
    "text": "anytime now",
    "start": "1375510",
    "end": "1378500"
  },
  {
    "text": "area alright so in the project here I have a",
    "start": "1393179",
    "end": "1399559"
  },
  {
    "text": "configuration file if I go to source main resources I have an application",
    "start": "1399559",
    "end": "1404850"
  },
  {
    "text": "properties file now in this application properties file I can override all of",
    "start": "1404850",
    "end": "1410070"
  },
  {
    "text": "the default configuration which is the opinion of the spring engineers and one of those opinions is that they should",
    "start": "1410070",
    "end": "1416580"
  },
  {
    "text": "secure the actuator endpoint so nobody can actually look at the environment variables but if you go to start dot",
    "start": "1416580",
    "end": "1422279"
  },
  {
    "text": "spring bio and you go to /v + V it's not",
    "start": "1422279",
    "end": "1430379"
  },
  {
    "text": "secured but in the application it is now if I go back to the console output it",
    "start": "1430379",
    "end": "1442850"
  },
  {
    "text": "says here that I should enable security so there is say a key here which is management dot security dot enabled",
    "start": "1442850",
    "end": "1450769"
  },
  {
    "text": "which I can add to my application properties and I can disable it I can",
    "start": "1450769",
    "end": "1456750"
  },
  {
    "text": "also do things like change the port of the application I'll change it to 7:00 to 7:00 - now I can restart that",
    "start": "1456750",
    "end": "1466769"
  },
  {
    "text": "application",
    "start": "1466769",
    "end": "1469370"
  },
  {
    "text": "and we can see that it started on port 72 72 so if I go back to my browser I",
    "start": "1475590",
    "end": "1482840"
  },
  {
    "text": "can see here that I can access the environment endpoint now just to walk",
    "start": "1484130",
    "end": "1489840"
  },
  {
    "text": "through this I can see information about the port that I'm running on I can see information about the system properties if I scroll down I can also see",
    "start": "1489840",
    "end": "1497310"
  },
  {
    "text": "information about the system environment now in a micro service architecture this becomes very useful right you're gonna",
    "start": "1497310",
    "end": "1502320"
  },
  {
    "text": "have all of these different applications and you're gonna want a way to introspect the environment remotely and",
    "start": "1502320",
    "end": "1508530"
  },
  {
    "text": "so this gives you a way to do that over HTTP now this is probably what I did wrong with that first demo is I put my",
    "start": "1508530",
    "end": "1515070"
  },
  {
    "text": "AWS secret key in all of my demos not a good idea I don't advise it and the very",
    "start": "1515070",
    "end": "1521760"
  },
  {
    "text": "bottom very important is our application conflict now in this block you're gonna see all of the overridden configuration",
    "start": "1521760",
    "end": "1528090"
  },
  {
    "text": "that you have applied to the application so we can see here the server port and can see here that I've disabled the",
    "start": "1528090",
    "end": "1535410"
  },
  {
    "text": "security now in 12 factor applications you're gonna want to separate out the configuration from your build and put it",
    "start": "1535410",
    "end": "1541200"
  },
  {
    "text": "in the remote environment and spring boot conforms to this and so here you can see that it's coming from the class",
    "start": "1541200",
    "end": "1546960"
  },
  {
    "text": "path of the application at application properties but I can also retrieve that remotely from a configuration server",
    "start": "1546960",
    "end": "1553680"
  },
  {
    "text": "which is going to host that file for me",
    "start": "1553680",
    "end": "1557630"
  },
  {
    "text": "so now the good stuff the event-driven microservices all right so now I'm gonna",
    "start": "1563760",
    "end": "1575730"
  },
  {
    "text": "talk about some of the patterns that I've used for adventure of and microservices now earlier I said that I",
    "start": "1575730",
    "end": "1581220"
  },
  {
    "text": "build highly scalable hello world applications for living I have about five reference projects of",
    "start": "1581220",
    "end": "1586370"
  },
  {
    "text": "Micra services and one of them is a bench of a microservices now I worked",
    "start": "1586370",
    "end": "1591930"
  },
  {
    "text": "with Chris Richardson a bit who is probably the foremost expert on a venturi but microservices he has a",
    "start": "1591930",
    "end": "1597240"
  },
  {
    "text": "website called micro services dot IO and I learned a lot from him about what he's done with CQRS and event sourcing and",
    "start": "1597240",
    "end": "1604080"
  },
  {
    "text": "I've applied it to our spring boot projects and created micro services so",
    "start": "1604080",
    "end": "1612000"
  },
  {
    "text": "the first thing is that you want to treat events as first-class citizens right so you're gonna use practices like event storming which is a way to use",
    "start": "1612000",
    "end": "1619680"
  },
  {
    "text": "domain driven design to come up with a design for your data in your application which you can use to separate out your",
    "start": "1619680",
    "end": "1626640"
  },
  {
    "text": "applications your micro services in a modular way the second thing is that",
    "start": "1626640",
    "end": "1633990"
  },
  {
    "text": "domain events have a subject and contain immutable data so any data that's stored in a domain event is forever immutable",
    "start": "1633990",
    "end": "1641070"
  },
  {
    "text": "and shouldn't be changed to change anything to change state then you're",
    "start": "1641070",
    "end": "1646140"
  },
  {
    "text": "going to append events which mean that some events can be used to reverse the state if you got into an inconsistent",
    "start": "1646140",
    "end": "1652710"
  },
  {
    "text": "state you can append an event and use that to rollback also every domain event",
    "start": "1652710",
    "end": "1659880"
  },
  {
    "text": "applies to state transition to an aggregate right so we if we have a domain object which is an aggregate it's",
    "start": "1659880",
    "end": "1665400"
  },
  {
    "text": "going to have a status field on it now every single event that's applied to that aggregate is going to change the state and that's very important because",
    "start": "1665400",
    "end": "1672570"
  },
  {
    "text": "we're gonna be able to use that to ensure that multiple events aren't processed on the same object right so if",
    "start": "1672570",
    "end": "1679350"
  },
  {
    "text": "I have two or three events come in the first event is going to be applied it's going to change the state and then we",
    "start": "1679350",
    "end": "1684480"
  },
  {
    "text": "can't change that state again with other events also domain events can only be",
    "start": "1684480",
    "end": "1692340"
  },
  {
    "text": "applied if the aggregate is in a valid State so if the current state of an aggregate is invalid Fernet",
    "start": "1692340",
    "end": "1697800"
  },
  {
    "text": "that is being handled we're just going to reject the event and we're not going to add it to the event log so an example",
    "start": "1697800",
    "end": "1705750"
  },
  {
    "text": "of this here here I have a directed graph which is a state machine and if",
    "start": "1705750",
    "end": "1710850"
  },
  {
    "text": "you know what your state is then you know whether or not an incoming event is valid right so in this process I have",
    "start": "1710850",
    "end": "1716220"
  },
  {
    "text": "order created account connected reservation pending and reservation",
    "start": "1716220",
    "end": "1721320"
  },
  {
    "text": "added now as the events are processed we're going to transition our state to",
    "start": "1721320",
    "end": "1727260"
  },
  {
    "text": "each one of these statuses right so going from order created we have an order created event which sits at the",
    "start": "1727260",
    "end": "1732510"
  },
  {
    "text": "edge and we know which state we can transition to so if I receive an order created event but I'm in a reservation",
    "start": "1732510",
    "end": "1739230"
  },
  {
    "text": "pending status we know that I can't advance right I also create meaningful",
    "start": "1739230",
    "end": "1746550"
  },
  {
    "text": "exceptions if a domain event can't be applied so every event handler has the",
    "start": "1746550",
    "end": "1751740"
  },
  {
    "text": "opportunity to raise a meaningful exception about why an event can't be applied so since you know where you're",
    "start": "1751740",
    "end": "1757950"
  },
  {
    "text": "at in that state machine you can say things like this account has already been confirmed or you can say an active",
    "start": "1757950",
    "end": "1763290"
  },
  {
    "text": "account can't create an order right and so this gives you a way to create these exceptions in a natural way so your",
    "start": "1763290",
    "end": "1769470"
  },
  {
    "text": "developer can understand what's going on when something goes wrong also event",
    "start": "1769470",
    "end": "1777510"
  },
  {
    "text": "sourcing stores every state transition as an event in a log so every event that's been applied to an aggregate is",
    "start": "1777510",
    "end": "1783840"
  },
  {
    "text": "appended to a log and a log is used to recreate the state of the aggregate and",
    "start": "1783840",
    "end": "1788880"
  },
  {
    "text": "models the behavior of an aggregate over time now we can consume this event log in the same way we use version control",
    "start": "1788880",
    "end": "1794970"
  },
  {
    "text": "on our source code so here I have an example which is an event log here and",
    "start": "1794970",
    "end": "1801330"
  },
  {
    "text": "we see that the order events are order created account connected and reservation pending now each one of",
    "start": "1801330",
    "end": "1807810"
  },
  {
    "text": "these events is going to have a time stamp now making this event log",
    "start": "1807810",
    "end": "1813390"
  },
  {
    "text": "accessible is pretty important so what you can do is you can build a hyper media API and you can attach the event",
    "start": "1813390",
    "end": "1819840"
  },
  {
    "text": "log as a link on a resource and so if I'm consuming an API maybe it's an account API I can see the",
    "start": "1819840",
    "end": "1826350"
  },
  {
    "text": "event log that's connected to an individual account",
    "start": "1826350",
    "end": "1831410"
  },
  {
    "text": "also commands are going to generate events so one or more events so if I have an a command like create account",
    "start": "1833000",
    "end": "1839970"
  },
  {
    "text": "I might have multiple events that are fired off and handled by different services so you can also attach command",
    "start": "1839970",
    "end": "1849360"
  },
  {
    "text": "stag Rockets just like I attached the event log and each command is an action and it's implemented inside and",
    "start": "1849360",
    "end": "1855030"
  },
  {
    "text": "aggregates class and it's going to invoke this theory with a series of events and you can make these commands successful again via an API so here's an",
    "start": "1855030",
    "end": "1864210"
  },
  {
    "text": "example of a order object which has a series of commands attached to it",
    "start": "1864210",
    "end": "1869330"
  },
  {
    "text": "something like a connect account Connect payment and create payment so these",
    "start": "1869330",
    "end": "1877770"
  },
  {
    "text": "event handlers can subscribe to an event and apply state changes to an aggregate and this is going to allow you to be",
    "start": "1877770",
    "end": "1884370"
  },
  {
    "text": "able to process events from other services for example if I have one micro service for an account that can trigger",
    "start": "1884370",
    "end": "1891720"
  },
  {
    "text": "an event to create a new order that order will be created by an event handler that handler that sits on the",
    "start": "1891720",
    "end": "1897210"
  },
  {
    "text": "order service also the event log is used",
    "start": "1897210",
    "end": "1902610"
  },
  {
    "text": "to generate the current state of an aggregate so in an example here I have a",
    "start": "1902610",
    "end": "1908070"
  },
  {
    "text": "full state machine and this is for an order and you can see the transitions between each box and I can use the state",
    "start": "1908070",
    "end": "1915390"
  },
  {
    "text": "machine as a guide to understand how to recover from inconsistent States so at",
    "start": "1915390",
    "end": "1922590"
  },
  {
    "text": "the very top I have order created and that's going to transition to account connected and then reservation pending",
    "start": "1922590",
    "end": "1928830"
  },
  {
    "text": "and then reservation added but then I have a fork I can go between reservations succeeded or failed now in",
    "start": "1928830",
    "end": "1936660"
  },
  {
    "text": "the case that something failed we see that down there I have reservation failed event and the state and we can",
    "start": "1936660",
    "end": "1944460"
  },
  {
    "text": "see a final state here which is order failed now if things get inconsistent I can always use this event log to figure",
    "start": "1944460",
    "end": "1950610"
  },
  {
    "text": "out where I need to go right it's kind of like a map so event handler is our",
    "start": "1950610",
    "end": "1957690"
  },
  {
    "text": "nodes on a directed graph so here you see that state machine modeled again",
    "start": "1957690",
    "end": "1963910"
  },
  {
    "text": "so each one of these boxes represents the current state but can also be an event handler and the events themselves",
    "start": "1963910",
    "end": "1972280"
  },
  {
    "text": "are just relationships between these states between these event handlers like",
    "start": "1972280",
    "end": "1979870"
  },
  {
    "text": "for example reservation failed now we",
    "start": "1979870",
    "end": "1986080"
  },
  {
    "text": "can add CQRS onto this to create materialized views from a stream of events so in this model here I have a",
    "start": "1986080",
    "end": "1994660"
  },
  {
    "text": "command query model and on the left side I have suspend account now I'm going to",
    "start": "1994660",
    "end": "2000030"
  },
  {
    "text": "create an API that allows my consumers to trigger commands like suspend account",
    "start": "2000030",
    "end": "2005130"
  },
  {
    "text": "and that's going to write to my database so I'll update the status of an account as suspended and then I'll be able to",
    "start": "2005130",
    "end": "2012030"
  },
  {
    "text": "query that from the account model which is on the queries side so you have these two sides I have a command side and a",
    "start": "2012030",
    "end": "2017700"
  },
  {
    "text": "query side now creating this as microservices one of the things you",
    "start": "2017700",
    "end": "2023250"
  },
  {
    "text": "might do is to separate out the command side from the query side as separate applications and so here have an example",
    "start": "2023250",
    "end": "2029850"
  },
  {
    "text": "of a spring food application which is my command service and that's going to expose an API with a set of commands",
    "start": "2029850",
    "end": "2036150"
  },
  {
    "text": "that I can apply to an aggregate now the results of that is that I'm going to add",
    "start": "2036150",
    "end": "2041280"
  },
  {
    "text": "event to the event store here which is Apache Kafka and that's going to serve as my transaction log my event log for",
    "start": "2041280",
    "end": "2047340"
  },
  {
    "text": "each aggregate then I could have an event processor which is another",
    "start": "2047340",
    "end": "2053250"
  },
  {
    "text": "separate application and that's going to pick up events and it's going to be those events will be used to create a",
    "start": "2053250",
    "end": "2058710"
  },
  {
    "text": "connected model of data that's stored on different services so let's say I wanted to create a reporting database that",
    "start": "2058710",
    "end": "2064679"
  },
  {
    "text": "connects together all of the data stored in all the different microservices then",
    "start": "2064679",
    "end": "2069840"
  },
  {
    "text": "I can use the event processor here to output a materialized view into a",
    "start": "2069840",
    "end": "2075360"
  },
  {
    "text": "datastore which will then be read on the query side and then I might want to add",
    "start": "2075360",
    "end": "2083460"
  },
  {
    "text": "an API gateway on top of that so at the very top here we have a front-end application similar to the architecture",
    "start": "2083460",
    "end": "2089610"
  },
  {
    "text": "I showed you earlier and that's going to make sure that these separate applications are all connected together",
    "start": "2089610",
    "end": "2095760"
  },
  {
    "text": "as a seamless API",
    "start": "2095760",
    "end": "2098899"
  },
  {
    "text": "now I can also add event handlers as surplus functions now AWS has a service",
    "start": "2101460",
    "end": "2107740"
  },
  {
    "text": "called step functions which does this but it's also possible to create a",
    "start": "2107740",
    "end": "2114520"
  },
  {
    "text": "spring boon application which is your micro service which serves as an event source and so then you can feed events",
    "start": "2114520",
    "end": "2121150"
  },
  {
    "text": "into a server list application and you can begin to create these service event handlers around your micro service which",
    "start": "2121150",
    "end": "2129280"
  },
  {
    "text": "allows you to do interesting things like change state",
    "start": "2129280",
    "end": "2133890"
  },
  {
    "text": "so finally again I build highly scalable hello world applications apparently they",
    "start": "2135060",
    "end": "2140290"
  },
  {
    "text": "don't work very well but so I've done a lot of research into this and I have a bunch of open source projects and blog",
    "start": "2140290",
    "end": "2145660"
  },
  {
    "text": "posts that you can look at in my blog and but the advice I give you is just to",
    "start": "2145660",
    "end": "2151240"
  },
  {
    "text": "do what makes sense but don't build micro services without events right if you have to think about refactoring later all of your micro services to",
    "start": "2151240",
    "end": "2158440"
  },
  {
    "text": "start using events it's gonna be very hard and that's all I have so since",
    "start": "2158440",
    "end": "2165070"
  },
  {
    "text": "we're in Chicago I should announce we have spring days coming up so if you're interested in that I can talk more about",
    "start": "2165070",
    "end": "2170890"
  },
  {
    "text": "that later and provide feedback using the go-to app and I appreciate your time",
    "start": "2170890",
    "end": "2178660"
  },
  {
    "text": "thank you",
    "start": "2178660",
    "end": "2181200"
  },
  {
    "text": "so we do have some time for some questions so you have any questions out there in the audience how do you load",
    "start": "2185120",
    "end": "2193040"
  },
  {
    "text": "balance the micro service is it any different from load balancing other services so there's two ways to load",
    "start": "2193040",
    "end": "2199010"
  },
  {
    "text": "balance right you can server-side load balance or you can client side now with spring cloud we provide functionality",
    "start": "2199010",
    "end": "2204380"
  },
  {
    "text": "for you to do that from the client side so back in 2008 Netflix created kind of",
    "start": "2204380",
    "end": "2209570"
  },
  {
    "text": "a cloud native platform and they built in client-side load balancing so with a discovery service I can keep track of",
    "start": "2209570",
    "end": "2215570"
  },
  {
    "text": "these instances and where they're located and then in my client application I can just load balance",
    "start": "2215570",
    "end": "2221000"
  },
  {
    "text": "switch between these separate instances actually I just follow up on that discovery service so I assume you're",
    "start": "2221000",
    "end": "2228050"
  },
  {
    "text": "talking about Eureka yes correct so if a company is starting new with",
    "start": "2228050",
    "end": "2233540"
  },
  {
    "text": "micro services and going to cloud would you still recommend Eureka versus communities well I would recommend if",
    "start": "2233540",
    "end": "2242420"
  },
  {
    "text": "you're using a cloud platform if you're using app as if you have to implement the same thing in every service for",
    "start": "2242420",
    "end": "2248180"
  },
  {
    "text": "instance client-side load balancing you should instead provide that as a service to your platform and so I recommend",
    "start": "2248180",
    "end": "2253460"
  },
  {
    "text": "using server-side load balancing but to also possibly container to container networking actually let me go back to",
    "start": "2253460",
    "end": "2261460"
  },
  {
    "text": "diagram here so in this diagram here",
    "start": "2261460",
    "end": "2266840"
  },
  {
    "text": "that online store what you can do is in the middle there that can all be server-side load balancing now they're",
    "start": "2266840",
    "end": "2273350"
  },
  {
    "text": "gonna have routes that you can bind to with your platform but at the very bottom those can all be container to",
    "start": "2273350",
    "end": "2279230"
  },
  {
    "text": "container networking those can just use something like Eureka for service discovery we had a question on the on",
    "start": "2279230",
    "end": "2288350"
  },
  {
    "text": "the magic app wondering if there was a link to your the repositories you were mentioning all the presentations you can",
    "start": "2288350",
    "end": "2295220"
  },
  {
    "text": "put up on the screen yeah so people can find all of your reference architectures so you can find them at cannabis Danny",
    "start": "2295220",
    "end": "2302720"
  },
  {
    "text": "comm and I have tutorials and open source projects for each",
    "start": "2302720",
    "end": "2308230"
  },
  {
    "text": "not your help there we go so each one of these blog posts will walk you through",
    "start": "2310440",
    "end": "2315900"
  },
  {
    "text": "the reference architecture I have a few of them here for a bent ribbon microservices and each one contains a",
    "start": "2315900",
    "end": "2322559"
  },
  {
    "text": "link to the open-source project time for",
    "start": "2322559",
    "end": "2330450"
  },
  {
    "text": "one more question maybe okay well if you",
    "start": "2330450",
    "end": "2335670"
  },
  {
    "text": "can join with me in thanking Kenny very much for his talk [Applause]",
    "start": "2335670",
    "end": "2345499"
  }
]