[
  {
    "text": "[Music]",
    "start": "3670",
    "end": "8760"
  },
  {
    "text": "uh thanks for the gentle introduction and um I have I was originally thinking",
    "start": "8960",
    "end": "15080"
  },
  {
    "text": "about visiting Australia for this talk but uh unfortunately because of all the",
    "start": "15080",
    "end": "20519"
  },
  {
    "text": "current prevailing situation due to covid um uh we have to go remotely but",
    "start": "20519",
    "end": "26760"
  },
  {
    "text": "uh I had the pleasure of visiting Australia in 2015 by wives folks live there and I visit",
    "start": "26760",
    "end": "34440"
  },
  {
    "text": "Brisbane most of the time uh so it was a pleasure to introduce uh uh P pser to",
    "start": "34440",
    "end": "41960"
  },
  {
    "text": "the Australian audience so anyway so let me start so my name is Scot I'm currently the senior director of",
    "start": "41960",
    "end": "47879"
  },
  {
    "text": "engineering at splan so before splan I had a streaming company called stream Leo six months ago it was aord by splan",
    "start": "47879",
    "end": "54719"
  },
  {
    "text": "and before that I was at Twitter and working on lot of streaming at the high scale",
    "start": "54719",
    "end": "60680"
  },
  {
    "text": "and before that I had a company called loomatic that got acquired by Twitter that is my short bio uh so let me start",
    "start": "60680",
    "end": "68600"
  },
  {
    "text": "the talk and so I think there is a question answer session that after the talk is finished uh for 25 minutes so I",
    "start": "68600",
    "end": "76439"
  },
  {
    "text": "will make uh try to answer as many questions as I can and the slack itself",
    "start": "76439",
    "end": "81799"
  },
  {
    "text": "so let me start the talk so so we are increasingly connected world where a lot",
    "start": "81799",
    "end": "89560"
  },
  {
    "text": "of sensors are being attached to several devices of several kind so which mean",
    "start": "89560",
    "end": "94720"
  },
  {
    "text": "the data collection mechanism is improving so which means the data is coming at a high velocity across at",
    "start": "94720",
    "end": "102119"
  },
  {
    "text": "several devices and sensor at a high scale so that leads to the ubiquity of",
    "start": "102119",
    "end": "107600"
  },
  {
    "text": "realtime data streams and events so now the question is when you have such a",
    "start": "107600",
    "end": "112719"
  },
  {
    "text": "cage of data coming from these uh several sensors embedded in cards phones",
    "start": "112719",
    "end": "118840"
  },
  {
    "text": "as well as Healthcare devices uh Factory flows and Manufacturing flows etc etc",
    "start": "118840",
    "end": "125079"
  },
  {
    "text": "how are we going to deal with this data delu and how are we going to process the data in real time and that's all",
    "start": "125079",
    "end": "131080"
  },
  {
    "text": "constitute what we call as a event SL stream data processing so what we do in",
    "start": "131080",
    "end": "137959"
  },
  {
    "text": "events uh are stream data processing events are analyzed and processed as",
    "start": "137959",
    "end": "143160"
  },
  {
    "text": "they arrive and Ds are very timely and also contextual and based on the",
    "start": "143160",
    "end": "148599"
  },
  {
    "text": "availability of the fresh data so the data uh the analytics the value",
    "start": "148599",
    "end": "154560"
  },
  {
    "text": "of the data is very high when it's fresh then it slowly decays into an ASM totic",
    "start": "154560",
    "end": "160400"
  },
  {
    "text": "as it goes into number of days so the value of data if it uh if it is process",
    "start": "160400",
    "end": "166239"
  },
  {
    "text": "immediately in a few milliseconds versus seconds versus minutes versus days there's a difference in the value of the",
    "start": "166239",
    "end": "172480"
  },
  {
    "text": "data so uh because of the fact that the data is fresh the dation latency is",
    "start": "172480",
    "end": "177879"
  },
  {
    "text": "eliminated you can make d as s as possible and sometimes uh steam data",
    "start": "177879",
    "end": "183040"
  },
  {
    "text": "processing is called uh even uh in data in motion processing so at a high level",
    "start": "183040",
    "end": "190760"
  },
  {
    "text": "uh you have these three different type of uh uh rocks within the steam processing one is you have to ingest the",
    "start": "190760",
    "end": "197799"
  },
  {
    "text": "data and bar buffer the data then you have to analyze the data and then you have to act on the decision that you",
    "start": "197799",
    "end": "203440"
  },
  {
    "text": "have made so if you look at uh three so the",
    "start": "203440",
    "end": "209120"
  },
  {
    "text": "different p where the streaming is applicable uh one huge block of area",
    "start": "209120",
    "end": "214760"
  },
  {
    "text": "where streaming is applicable is something called monitoring uh monitoring in the sense of uh you want",
    "start": "214760",
    "end": "221720"
  },
  {
    "text": "to monitor your machines uh you want to monitor Healthcare devices you want to monitor some temperature of uh sensor",
    "start": "221720",
    "end": "230280"
  },
  {
    "text": "embod in a tree in a forest or so those kind of aspects are called you're",
    "start": "230280",
    "end": "235799"
  },
  {
    "text": "getting the time series data and you're monitoring uh the uh entity that you are interested in",
    "start": "235799",
    "end": "242000"
  },
  {
    "text": "monitoring for so that those broad pattern of monitoring falls into a steam data processing because data is coming",
    "start": "242000",
    "end": "248640"
  },
  {
    "text": "continuously arriving from those uh uh devices or sensors and you're looking at",
    "start": "248640",
    "end": "253799"
  },
  {
    "text": "the data in a continuous fashion second one is the microservices where uh the",
    "start": "253799",
    "end": "259359"
  },
  {
    "text": "pattern is where you break down the montic application into smaller smaller services and uh in these smaller",
    "start": "259359",
    "end": "266639"
  },
  {
    "text": "Services uh as you can think about as a streaming pattern where a request comes in it has to hop through these multiple",
    "start": "266639",
    "end": "273440"
  },
  {
    "text": "services and get back as a response so this can be viewed as a streaming as",
    "start": "273440",
    "end": "278600"
  },
  {
    "text": "well and the second one is where you have what do you call streaming",
    "start": "278600",
    "end": "284360"
  },
  {
    "text": "workflows where you process the data then pass on to the next uh uh person in",
    "start": "284360",
    "end": "289919"
  },
  {
    "text": "the workflow then pass on from after that is finished pass on to the next stage in the workflow and so on so that",
    "start": "289919",
    "end": "296479"
  },
  {
    "text": "is again it's a streaming flow then uh model in so for example uh in um machine Ser in",
    "start": "296479",
    "end": "304479"
  },
  {
    "text": "machine learning uh model suring you have the model that is built up this",
    "start": "304479",
    "end": "309560"
  },
  {
    "text": "model uh uh can be uh served using data that is coming online which lookups into",
    "start": "309560",
    "end": "316160"
  },
  {
    "text": "model and gives a score and that can be thought of as a streaming as well and in",
    "start": "316160",
    "end": "321880"
  },
  {
    "text": "fact you can even think about the model as a streaming which is a Control stream where the data from model is kind of",
    "start": "321880",
    "end": "328759"
  },
  {
    "text": "updated on regular fashion in a periodically then the data is also scored along with the model updates so",
    "start": "328759",
    "end": "335720"
  },
  {
    "text": "then the final realm final pattern is called analytics which is a streaming",
    "start": "335720",
    "end": "340919"
  },
  {
    "text": "analytics where people join multiple streams and aggregate on top of the streams to provide some view about how",
    "start": "340919",
    "end": "348720"
  },
  {
    "text": "my ads are looking like today uh on during the Super Bowl time or during",
    "start": "348720",
    "end": "353919"
  },
  {
    "text": "Oscar's time those kind of things insights are more streaming analytics so in order to do all these various uh",
    "start": "353919",
    "end": "361520"
  },
  {
    "text": "different uh stream processing paradigms so the underlying infrastructure or the",
    "start": "361520",
    "end": "367000"
  },
  {
    "text": "data infrastructure there are three things that you need to remember to bring together one is the messaging",
    "start": "367000",
    "end": "372680"
  },
  {
    "text": "where any streaming system need to have a notion of ingesting data then uh the",
    "start": "372680",
    "end": "378479"
  },
  {
    "text": "second aspect is the storing the data where we need to store the data uh in um",
    "start": "378479",
    "end": "384800"
  },
  {
    "text": "storage so that you can process the data in real time or even access the data when whenever we need to or if there's a",
    "start": "384800",
    "end": "391240"
  },
  {
    "text": "lag in the processing then um you can go back in the data replay the data those",
    "start": "391240",
    "end": "396479"
  },
  {
    "text": "aspects are in the storage then we have to do something with the data that is where the compute comes in",
    "start": "396479",
    "end": "403120"
  },
  {
    "text": "so you have to look at the data M the data from a data enhancement point of view data processing point of view those",
    "start": "403120",
    "end": "409639"
  },
  {
    "text": "kind of aspects uh so that is where so which means in order to do end2end stream processing you need to messaging",
    "start": "409639",
    "end": "417039"
  },
  {
    "text": "storage and compute all have to come together but if you look at the entire open source ecosystem lot of solutions",
    "start": "417039",
    "end": "424319"
  },
  {
    "text": "are uh kind of piecewise messaging one system compute is another system storage",
    "start": "424319",
    "end": "430319"
  },
  {
    "text": "is another system so you have to bring in several these several different systems together to stitch them and do",
    "start": "430319",
    "end": "438400"
  },
  {
    "text": "an end to end processing so the the problem with that such uh issue with such systems are each one has its own",
    "start": "438400",
    "end": "446039"
  },
  {
    "text": "Natural Evolution and it's not tightly integrated with respect to N2 and steam processing and maintenance and operation",
    "start": "446039",
    "end": "453879"
  },
  {
    "text": "aspect of such multiple systems in order to stitch together becomes so expensive because you need to have a different",
    "start": "453879",
    "end": "460680"
  },
  {
    "text": "type of data engineering Talent different type of operational Talent so which mean the value business value that",
    "start": "460680",
    "end": "466599"
  },
  {
    "text": "you realize out of streaming goes down because the cost of delivering the streaming infrastructure is pretty high",
    "start": "466599",
    "end": "472720"
  },
  {
    "text": "so that is why pulser is uh is the first system that tries to bring all these",
    "start": "472720",
    "end": "478319"
  },
  {
    "text": "things in three things together so what is Pulsar it's nothing",
    "start": "478319",
    "end": "484159"
  },
  {
    "text": "but a flexible Messaging Plus queuing system with the compute embedded into it",
    "start": "484159",
    "end": "489840"
  },
  {
    "text": "and it's backed by a durable log storage so now let's look at some of the",
    "start": "489840",
    "end": "495520"
  },
  {
    "text": "this is one sentence version of Pulsar now let us look at some of the key",
    "start": "495520",
    "end": "500639"
  },
  {
    "text": "Concepts in Pulsar so pulsor has this notion of uh what do you call tenants",
    "start": "500639",
    "end": "506440"
  },
  {
    "text": "because it's a naturally a multi-tenant system it has a notion of a tenants and it has notion of name spaces and it has",
    "start": "506440",
    "end": "512560"
  },
  {
    "text": "notion of topics so you can think about uh a tenant is some kind of a department",
    "start": "512560",
    "end": "518159"
  },
  {
    "text": "within an Enterprise and within that department you have multiple applications that each department is in",
    "start": "518159",
    "end": "524519"
  },
  {
    "text": "charge of then within the each application there are bunch of streams and the data and computer collected",
    "start": "524519",
    "end": "530640"
  },
  {
    "text": "together right so that is why Pulsar allows this three level hierarchy that naturally supports uh multi tency in",
    "start": "530640",
    "end": "538200"
  },
  {
    "text": "other words you just just need one single Pulsa cluster for the entire organization like a private Cloud if",
    "start": "538200",
    "end": "544160"
  },
  {
    "text": "it's on Prem or a if or if it is an public Cloud you just need one",
    "start": "544160",
    "end": "550440"
  },
  {
    "text": "instance of pulsor for cing to several teams in one shot rather than inducing",
    "start": "550440",
    "end": "556680"
  },
  {
    "text": "one cluster per uh uh per tenant or per team uh so the which becomes more",
    "start": "556680",
    "end": "563240"
  },
  {
    "text": "expensive because uh each team is duplicating the effort of uh other teams as well",
    "start": "563240",
    "end": "571120"
  },
  {
    "text": "so now the topic are where the data is ingested in terms of producers produce the data into the topic and the topic is",
    "start": "571200",
    "end": "579000"
  },
  {
    "text": "you can think about Loosely a topic as a stream and the consumers consume data out of that stream now within the topic",
    "start": "579000",
    "end": "586640"
  },
  {
    "text": "there are partions uh because if one part may not be one topic might not be",
    "start": "586640",
    "end": "592160"
  },
  {
    "text": "able to uh produce and serve data uh simultaneously if the data rate is",
    "start": "592160",
    "end": "598079"
  },
  {
    "text": "pretty high um then a single machine can handle in the in those cases we need to",
    "start": "598079",
    "end": "603399"
  },
  {
    "text": "partion the stream and that's is where the topic partions come from so the each topic partition can run it on a",
    "start": "603399",
    "end": "609920"
  },
  {
    "text": "different uh node so you can spread it across multiple nodes then within topics",
    "start": "609920",
    "end": "615440"
  },
  {
    "text": "this is a key difference between pulsar and the other messaging systems the each partition is further divided into",
    "start": "615440",
    "end": "621920"
  },
  {
    "text": "segments and these segments are the storage units that are stored in the",
    "start": "621920",
    "end": "627200"
  },
  {
    "text": "actual storage um uh system so so like uh so this is a key",
    "start": "627200",
    "end": "633839"
  },
  {
    "text": "difference between uh pulsar and other messaging system that you need to remember because I will refer to this uh",
    "start": "633839",
    "end": "642000"
  },
  {
    "text": "uh segments often in the pursuing slides so now let us look at the",
    "start": "642000",
    "end": "648200"
  },
  {
    "text": "architecture of pulser pulser was uh designed natively to be a a cloud",
    "start": "648200",
    "end": "654440"
  },
  {
    "text": "friendly or Cloud native system so in other words in Cloud uh there is a",
    "start": "654440",
    "end": "659639"
  },
  {
    "text": "natural separation of compute versus storage so the same thing is followed in",
    "start": "659639",
    "end": "665200"
  },
  {
    "text": "API pulser as well so the Brokers are the serving layers and The Bookies are the storage layers so the the reason why",
    "start": "665200",
    "end": "673839"
  },
  {
    "text": "we split this one is whenever you wanted to increase the storage you can increase",
    "start": "673839",
    "end": "679000"
  },
  {
    "text": "the bookies whenever you wanted to increase the serving capacity you can naturally increase the Brokers which means both can be scaled independent of",
    "start": "679000",
    "end": "686800"
  },
  {
    "text": "each other so that way like uh whenever in other systems where it is a monolithic system where it combines",
    "start": "686800",
    "end": "693360"
  },
  {
    "text": "broker and bookies one of the major issues that you see is when you scale uh",
    "start": "693360",
    "end": "699880"
  },
  {
    "text": "those combined entity you are scaling both broker and bookie which means you add storage if you wanted to do serving",
    "start": "699880",
    "end": "706760"
  },
  {
    "text": "uh so you if you want to increase serving whereas if if uh you add more",
    "start": "706760",
    "end": "711839"
  },
  {
    "text": "CPUs if just you need more storage right so that is the uh that's what the pulser",
    "start": "711839",
    "end": "718120"
  },
  {
    "text": "is trying to differentiate shate by providing scalability at a different independent",
    "start": "718120",
    "end": "723920"
  },
  {
    "text": "level so broker is the only point of interaction for clients and which is",
    "start": "723920",
    "end": "730000"
  },
  {
    "text": "essentially producers and consumers Brokers acquire ownership so of topics",
    "start": "730000",
    "end": "735880"
  },
  {
    "text": "remember we talked about topics and partitions right so the pulser real topics and partitions are almost",
    "start": "735880",
    "end": "741320"
  },
  {
    "text": "equalent so so each partition or each topic will be owned by a broker and it",
    "start": "741320",
    "end": "747760"
  },
  {
    "text": "will serve serve out of that broker and the Brokers as as such no durable States",
    "start": "747760",
    "end": "754120"
  },
  {
    "text": "ESS stateless and it also you can uh contact any broker and that broker will",
    "start": "754120",
    "end": "759560"
  },
  {
    "text": "redirect you the appropriate broker which is serving the topic that you are interested in so the the client the",
    "start": "759560",
    "end": "766240"
  },
  {
    "text": "pulser client is smart enough to Discover It by connecting to a broker then reconnect to the appropriate broker",
    "start": "766240",
    "end": "771880"
  },
  {
    "text": "where the topics are being served so if you look at it like uh in",
    "start": "771880",
    "end": "778000"
  },
  {
    "text": "pictorially what I I said in the earlier slide uh so you have the producers and",
    "start": "778000",
    "end": "783160"
  },
  {
    "text": "you have consumers so some Brokers are serving topic one partion one some Brokers are serving topic two partition",
    "start": "783160",
    "end": "789279"
  },
  {
    "text": "one some other Brokers are serving some other partions of those topics right so when the producers connects to them it",
    "start": "789279",
    "end": "796920"
  },
  {
    "text": "uh uh connect to the appropriate Brokers which is interested in consuming the appropriate topics and his corresponding",
    "start": "796920",
    "end": "803680"
  },
  {
    "text": "partions and produce topic produce data into this and then similarly the",
    "start": "803680",
    "end": "808800"
  },
  {
    "text": "consumers also connect to the Brokers and consume data out of the Brokers now",
    "start": "808800",
    "end": "814279"
  },
  {
    "text": "consumers have one level of indirection called subscription the subscription essentially is through the consumers in",
    "start": "814279",
    "end": "822240"
  },
  {
    "text": "turn connect to what we call subscription subscription is not a physical entity or a connection or",
    "start": "822240",
    "end": "827639"
  },
  {
    "text": "whatever it is but it is more of a logical state that consumers the broker",
    "start": "827639",
    "end": "834240"
  },
  {
    "text": "handles or stores on behalf of the consumer in other words the consumers um",
    "start": "834240",
    "end": "840759"
  },
  {
    "text": "so subscriptions uh store uh the consumer offsets or the consumer uh uh",
    "start": "840759",
    "end": "847279"
  },
  {
    "text": "offsets where it left off when it died so that when the consumer comes back again um it it it knows where the",
    "start": "847279",
    "end": "854959"
  },
  {
    "text": "consumer was when it left off and it start serving data from that so in in other words the State Management on",
    "start": "854959",
    "end": "861560"
  },
  {
    "text": "behalf of the consumer is done by Pulsar itself so that the consumers that you write are very simple and clean and and",
    "start": "861560",
    "end": "869560"
  },
  {
    "text": "not much complexity is involved but there are different type of subscriptions as well in terms of fall",
    "start": "869560",
    "end": "874600"
  },
  {
    "text": "tolerance aspect of the consumptions and other things that you can provide that which I will talk",
    "start": "874600",
    "end": "880480"
  },
  {
    "text": "later so now let us look at how Pulsar achieves data consistency so uh if you",
    "start": "880480",
    "end": "885959"
  },
  {
    "text": "look at the data path the data is produced by the producer it goes into broker then the broker in turn",
    "start": "885959",
    "end": "892320"
  },
  {
    "text": "replicates the data into the storage layer which is The Bookies then The Bookies acknowledge that data has been",
    "start": "892320",
    "end": "898759"
  },
  {
    "text": "stored and then then the broker in turn uh sends the acknowledgement back to the",
    "start": "898759",
    "end": "904839"
  },
  {
    "text": "producer by the time data is the acknowledgement is given to the producer the data is",
    "start": "904839",
    "end": "910399"
  },
  {
    "text": "replicated across three bookies so now you can do some Quorum consistency or",
    "start": "910399",
    "end": "916120"
  },
  {
    "text": "full consistency by configuring this parameters where how many bookies I to acknowledge before I send an",
    "start": "916120",
    "end": "922120"
  },
  {
    "text": "acknowledgement to a producer you can do three out of three or two out of three so two out of three means score",
    "start": "922120",
    "end": "928720"
  },
  {
    "text": "consistency or three out of three means it's more a full consistency so then apai puls are also",
    "start": "928720",
    "end": "936120"
  },
  {
    "text": "durable supports durability uh where there's no data loss uh so what happens",
    "start": "936120",
    "end": "942759"
  },
  {
    "text": "when the data is stored in the bookie it is return into a journal that uh that",
    "start": "942759",
    "end": "948800"
  },
  {
    "text": "journal is flushed into the disk like similar to asset transactions are on not",
    "start": "948800",
    "end": "955160"
  },
  {
    "text": "only on one bookie across all the bookies where the data is being stored so by the time the acknowledgement comes",
    "start": "955160",
    "end": "960199"
  },
  {
    "text": "to the broker all the data is reach the disk as well as replicated so by the",
    "start": "960199",
    "end": "965639"
  },
  {
    "text": "time you send the data from broker acknowledgement from the broker to producer so the data is secure so it can",
    "start": "965639",
    "end": "974040"
  },
  {
    "text": "survive uh one bookie node failure or the entire cluster failure or even a data center failure so that when you",
    "start": "974040",
    "end": "980279"
  },
  {
    "text": "bring up the system back the data is in the",
    "start": "980279",
    "end": "985160"
  },
  {
    "text": "discs so now how does a bookie store the data in the journal so the rights follow",
    "start": "985800",
    "end": "992079"
  },
  {
    "text": "a different path so the rights as you can see first hits the right cache where the uh it's returned into the cache and",
    "start": "992079",
    "end": "999959"
  },
  {
    "text": "it's also returned into a journal and the journal is flushed into dis before the acknowledgement happens so that is",
    "start": "999959",
    "end": "1005639"
  },
  {
    "text": "the right path now now since the data is coming through the broker and the ackowledgement is",
    "start": "1005639",
    "end": "1011800"
  },
  {
    "text": "goes out of the broker broker also serves a have a small cache where once",
    "start": "1011800",
    "end": "1017360"
  },
  {
    "text": "the bookie acknowledges then the consumers can count consume out of the broker cach so that it's pretty fast in",
    "start": "1017360",
    "end": "1023839"
  },
  {
    "text": "real time now if you've Fallen back from uh real time you can uh uh read data",
    "start": "1023839",
    "end": "1031880"
  },
  {
    "text": "from The Ledger or the from the bookie because bookies have the storage and you",
    "start": "1031880",
    "end": "1037558"
  },
  {
    "text": "can go back to The Bookies to read when it's uh when it's the data is uh",
    "start": "1037559",
    "end": "1043120"
  },
  {
    "text": "historical or you want to read that older data right so the read path is very different in a the read request",
    "start": "1043120",
    "end": "1049160"
  },
  {
    "text": "comes on bookies so you need to have a what do you call index essentially",
    "start": "1049160",
    "end": "1054840"
  },
  {
    "text": "offset or message ID that you give into pulsar and it'll locate where which bookie has that and it within that",
    "start": "1054840",
    "end": "1061840"
  },
  {
    "text": "segment it locate where that message is and start uh reading from that message",
    "start": "1061840",
    "end": "1067400"
  },
  {
    "text": "onwards and in it goes through a read cache so it starts from doing some",
    "start": "1067400",
    "end": "1073080"
  },
  {
    "text": "prefetching and all the smarts and everything so that the when you request the next block of data already it's",
    "start": "1073080",
    "end": "1079120"
  },
  {
    "text": "available in the read cach and the read has served out of it right away so essentially what this slide means is uh",
    "start": "1079120",
    "end": "1087159"
  },
  {
    "text": "the paths for write as well as read as well as serving out of the Brokers are completely different so that mixed",
    "start": "1087159",
    "end": "1094039"
  },
  {
    "text": "workloads involving these different type of access can be in the same uh",
    "start": "1094039",
    "end": "1101200"
  },
  {
    "text": "system now I was mentioning about the segment how the segments are partitions",
    "start": "1101200",
    "end": "1107120"
  },
  {
    "text": "are div into segments right the segments how the segments are replicated and stored is the intention of this slide as",
    "start": "1107120",
    "end": "1114320"
  },
  {
    "text": "you can see a stream the as going through the streams are divided to",
    "start": "1114320",
    "end": "1119440"
  },
  {
    "text": "messages messages are bundled into segments and the segments when the The Bookies are writing this data when they",
    "start": "1119440",
    "end": "1126159"
  },
  {
    "text": "get messages they assemble the segments and once a segment is uh what do you",
    "start": "1126159",
    "end": "1131400"
  },
  {
    "text": "call filled up uh to the appropriate size or time base then it's sealed so",
    "start": "1131400",
    "end": "1136640"
  },
  {
    "text": "once the segment is sealed is immutable in the sense like you can't change the segment at all so so like as you can see",
    "start": "1136640",
    "end": "1143919"
  },
  {
    "text": "the segments is whenever you write three copies of SE data simultaneously into",
    "start": "1143919",
    "end": "1149159"
  },
  {
    "text": "bookies each one is going to the same segment across different three machines right so which mean the segment uh when",
    "start": "1149159",
    "end": "1156960"
  },
  {
    "text": "the bookie when the procord are say close the segment the segment is that is",
    "start": "1156960",
    "end": "1163320"
  },
  {
    "text": "being return across multiple bookies will be closed the new segment will will be open so which means one of the co",
    "start": "1163320",
    "end": "1169840"
  },
  {
    "text": "cool thing about this one is um when uh",
    "start": "1169840",
    "end": "1175000"
  },
  {
    "text": "uh uh when the node dies which is in the next slide uh so when the node dies now",
    "start": "1175000",
    "end": "1184039"
  },
  {
    "text": "whatever the current segment that has been being written on the particular node is closed for example let us say",
    "start": "1184039",
    "end": "1189760"
  },
  {
    "text": "here in the middle of writing segment two on node one two and three now when",
    "start": "1189760",
    "end": "1195760"
  },
  {
    "text": "the node two dies so so the segment the broker will come to know about it the",
    "start": "1195760",
    "end": "1201559"
  },
  {
    "text": "broker will say okay let's close segment two so which mean it will close segment on one as well as three uh since two is",
    "start": "1201559",
    "end": "1209559"
  },
  {
    "text": "not available uh so segment one and two will um segment two will close on one",
    "start": "1209559",
    "end": "1214840"
  },
  {
    "text": "and node one and three and the new segment will be open the new segment three will be open in some other nodes I",
    "start": "1214840",
    "end": "1222080"
  },
  {
    "text": "mean in this diagram it happen to be on the same noes but it can be opened on any nodes that are really active so",
    "start": "1222080",
    "end": "1227880"
  },
  {
    "text": "which means within a partition of a topic the segments can be return in anywhere any",
    "start": "1227880",
    "end": "1234120"
  },
  {
    "text": "three nodes as long as any three nodes are available so which means for one",
    "start": "1234120",
    "end": "1239360"
  },
  {
    "text": "segment one two and three another segment 2 three and four another segment three four and five or 3 four and one so",
    "start": "1239360",
    "end": "1247360"
  },
  {
    "text": "this way as the segments keep writing when one node goes down there",
    "start": "1247360",
    "end": "1253039"
  },
  {
    "text": "just right shift to the different healthy machines and keep going so which means uh the right availability of the",
    "start": "1253039",
    "end": "1258919"
  },
  {
    "text": "system is pretty high you don't have to depend on that particular node instead you are depend on only any three nodes",
    "start": "1258919",
    "end": "1265840"
  },
  {
    "text": "so as long as any three nodes are available at the bookie levels the right right uh the system can keep on writing",
    "start": "1265840",
    "end": "1272960"
  },
  {
    "text": "into that so that is the puls of resiliency now so like uh now whenever",
    "start": "1272960",
    "end": "1279480"
  },
  {
    "text": "the node goes down the node can go down for maintenance or the node can go down permanently in the cloud like",
    "start": "1279480",
    "end": "1285200"
  },
  {
    "text": "environment right so which means we have to bring the replica Factor back up to that appropriate level the in the case",
    "start": "1285200",
    "end": "1292720"
  },
  {
    "text": "you have to bring up to the uh replica factor of three so in this case uh we",
    "start": "1292720",
    "end": "1299799"
  },
  {
    "text": "have to initiate uh re-replication right so instead of now the cool thing about",
    "start": "1299799",
    "end": "1305840"
  },
  {
    "text": "uh pulsor is it doesn't have to since all the data is stored in segments and these segments are distributed across",
    "start": "1305840",
    "end": "1312400"
  },
  {
    "text": "different nodes so those individual segments are copied I into different set",
    "start": "1312400",
    "end": "1319080"
  },
  {
    "text": "of nodes so essentially what happens is a multi node multi to multipoint to multipoint copy so I can grab segment",
    "start": "1319080",
    "end": "1326559"
  },
  {
    "text": "one from node one segment two from node three and segment two from node two so",
    "start": "1326559",
    "end": "1334159"
  },
  {
    "text": "those kind of so since all the since several nodes are taking place in the recovery of the re replication so the",
    "start": "1334159",
    "end": "1342240"
  },
  {
    "text": "Dey will be much faster and also does not hit one node constantly",
    "start": "1342240",
    "end": "1349960"
  },
  {
    "text": "so now if you wanted to add more nodes into the system just keep adding nodes",
    "start": "1350799",
    "end": "1356159"
  },
  {
    "text": "so as the system sees new node slowly the rights will start shifting into the",
    "start": "1356159",
    "end": "1361880"
  },
  {
    "text": "new within a a few minutes the rights will start shifting over as the data is",
    "start": "1361880",
    "end": "1367360"
  },
  {
    "text": "as new segments are open right as new segments are open uh bookies three four",
    "start": "1367360",
    "end": "1373000"
  },
  {
    "text": "and five will be used rather than one two and three and four right so it start riding into those new segments",
    "start": "1373000",
    "end": "1379960"
  },
  {
    "text": "so now when the segments become older and older when especially when you are",
    "start": "1381360",
    "end": "1387159"
  },
  {
    "text": "uh operating in a cloud-like environment do we have to keep expensive AWS",
    "start": "1387159",
    "end": "1393600"
  },
  {
    "text": "instances uh to keep running the storage alone because there is some cost of CPU attached to it right so no need with",
    "start": "1393600",
    "end": "1400799"
  },
  {
    "text": "pulsor there's no need instead we can use S3 and configure the steered storage",
    "start": "1400799",
    "end": "1406120"
  },
  {
    "text": "that allows you to uh copy these segments uh the older segments into the",
    "start": "1406120",
    "end": "1411640"
  },
  {
    "text": "S3 and whenever you access those older segments through the pulser API automatically pulsor will know that this",
    "start": "1411640",
    "end": "1418559"
  },
  {
    "text": "segment has been moved to tiered storage automatically pick up",
    "start": "1418559",
    "end": "1424480"
  },
  {
    "text": "that uh segment and sered out of it in other words you don't even know that the",
    "start": "1424480",
    "end": "1430400"
  },
  {
    "text": "data is moved is served to be be up in S3 instead the pulser API you just use",
    "start": "1430400",
    "end": "1436480"
  },
  {
    "text": "the pulser API and uh it's all transparently done for you independent",
    "start": "1436480",
    "end": "1442240"
  },
  {
    "text": "of whether this data is stored in The Bookies or in the lowc Cost Storage like uh",
    "start": "1442240",
    "end": "1449440"
  },
  {
    "text": "S3 so this gives you an idea about the same thing that I talked about so the processing uh realtime data is served",
    "start": "1449440",
    "end": "1456559"
  },
  {
    "text": "out of the Brokers which is the tailing reads catchup reads are done in the warm storage and which is stored in The",
    "start": "1456559",
    "end": "1462400"
  },
  {
    "text": "Bookies and the cold storage which are historical reads are served in the from a tier storage called called is3 but all",
    "start": "1462400",
    "end": "1470520"
  },
  {
    "text": "of them go through the same API now what is the advantage of uh",
    "start": "1470520",
    "end": "1476720"
  },
  {
    "text": "segments uh we talked about partitions being segments what is the unique advantage that it brings so if you look",
    "start": "1476720",
    "end": "1483399"
  },
  {
    "text": "at Legacy architectures like Kafka and other systems so you have only broker",
    "start": "1483399",
    "end": "1488440"
  },
  {
    "text": "there's no separation between bookies and broker I talked about so which mean and also each broker handles a set of",
    "start": "1488440",
    "end": "1494600"
  },
  {
    "text": "partitions and for some partitions one broker will be primary for some other",
    "start": "1494600",
    "end": "1500120"
  },
  {
    "text": "partion other Brokers will be primary if you take the case of a partion one partion will be primary the other",
    "start": "1500120",
    "end": "1505520"
  },
  {
    "text": "partions will be having holding the copy of the data now when the primary goes down then in order to rebalance the load",
    "start": "1505520",
    "end": "1514320"
  },
  {
    "text": "the data has to be copied from one broker to another broker uh which means the entire partition data has to be",
    "start": "1514320",
    "end": "1520679"
  },
  {
    "text": "copied from one to the other so that means so that same node will be not only",
    "start": "1520679",
    "end": "1527960"
  },
  {
    "text": "getting data for the broker but also is involved in the uh re-replication or low",
    "start": "1527960",
    "end": "1535840"
  },
  {
    "text": "what do you call rebalancing so that becomes a expensive operation which reduces the throughput of the broker",
    "start": "1535840",
    "end": "1543039"
  },
  {
    "text": "drastically down that's where you see that's why you got to over provision over provision so much whereas in the",
    "start": "1543039",
    "end": "1549320"
  },
  {
    "text": "Pulsar it is not the case uh it's a segment based architecture when one of",
    "start": "1549320",
    "end": "1555399"
  },
  {
    "text": "the node goes down the segment automatically shift the rights to other nodes and even if the right node one of",
    "start": "1555399",
    "end": "1562559"
  },
  {
    "text": "the storage node goes down the r replication is multi to point recovery",
    "start": "1562559",
    "end": "1567679"
  },
  {
    "text": "so which means it's not hitting upon a single node multiple nodes cooperatively recover it so that the load of the",
    "start": "1567679",
    "end": "1574039"
  },
  {
    "text": "recovery itself is shared across several nodes now deployment uh so um another",
    "start": "1574039",
    "end": "1583440"
  },
  {
    "text": "advantages that pulsor brings to the table is uh uh deployment in kuber",
    "start": "1583440",
    "end": "1588640"
  },
  {
    "text": "netics is much easier uh in a Kafka like system every broker's uh uh Port has to",
    "start": "1588640",
    "end": "1595320"
  },
  {
    "text": "be exposed because the client uh know does not do broker Discovery by itself",
    "start": "1595320",
    "end": "1601159"
  },
  {
    "text": "instead explicitly you have to enumerate the Brokers so because of that like uh",
    "start": "1601159",
    "end": "1606640"
  },
  {
    "text": "we need to set up a invariant IPS uh uh in the cluster and that is the IP that",
    "start": "1606640",
    "end": "1613279"
  },
  {
    "text": "you have to give it to the producers and consumers so that uh uh when the Brokers move around the load bance addresses are",
    "start": "1613279",
    "end": "1620640"
  },
  {
    "text": "things that don't have to move around right so which means if you scale the number of Brokers then you to give the",
    "start": "1620640",
    "end": "1626000"
  },
  {
    "text": "IP addresses again for those then you have to uh manually enter it for the consumers and producers then re to",
    "start": "1626000",
    "end": "1631799"
  },
  {
    "text": "restart it in pulser that is not the case so there's only one end point the",
    "start": "1631799",
    "end": "1637600"
  },
  {
    "text": "pulser exposes and um so that will uh have a way by which it can proxy into",
    "start": "1637600",
    "end": "1645440"
  },
  {
    "text": "those individual Brokers and all the clients and producers have to know is one only one end point so now because of",
    "start": "1645440",
    "end": "1653679"
  },
  {
    "text": "this only one end point I can increase the Brokers uh to from 3 to 5 5 to 10",
    "start": "1653679",
    "end": "1659919"
  },
  {
    "text": "depending upon the needs and I can increase the storage underneath so producers and transparents are",
    "start": "1659919",
    "end": "1666159"
  },
  {
    "text": "completely uh oblivious to all these various operational activities that is going through right so that way what",
    "start": "1666159",
    "end": "1673440"
  },
  {
    "text": "happens is like uh uh there's even if you increase number of Brokers the same load balancer will distribute the uh uh",
    "start": "1673440",
    "end": "1681440"
  },
  {
    "text": "load across all the Brokers and brokers in turn will distribute the data to uh",
    "start": "1681440",
    "end": "1687919"
  },
  {
    "text": "uh the storage nodes all of them happen under the covered so which means the developer is completely shielded from",
    "start": "1687919",
    "end": "1694760"
  },
  {
    "text": "the operational aspect of the um of the Pulsar",
    "start": "1694760",
    "end": "1700760"
  },
  {
    "text": "itself so what does it mean partion versus segments in Kafka partions are assigned to Brokers permanently a single",
    "start": "1700760",
    "end": "1707960"
  },
  {
    "text": "partition is stored entirely in a single node retention is limited by the and the data you can retain in a partition is",
    "start": "1707960",
    "end": "1714559"
  },
  {
    "text": "limited by a single node in pulsor it's infinite in the sense like if one of The",
    "start": "1714559",
    "end": "1719880"
  },
  {
    "text": "Bookies is full uh the segments will automatically shift so each partition is",
    "start": "1719880",
    "end": "1725000"
  },
  {
    "text": "essentially unlimited as long as the storage is available or you can keep more adding more storage if the key",
    "start": "1725000",
    "end": "1730720"
  },
  {
    "text": "system can keep on adding data into single partition then failure recovery and capacity expansion uh in Kafka",
    "start": "1730720",
    "end": "1738240"
  },
  {
    "text": "requires expensive rebalancing because every time you add a node you to move some of the pars out there and you have",
    "start": "1738240",
    "end": "1745159"
  },
  {
    "text": "to recopy the data move out some of those that all requires expensive copying whereas in our uh pulsor when",
    "start": "1745159",
    "end": "1753360"
  },
  {
    "text": "you add new nodes the new rights are automatically shift into it right and de balancing is a overall big impact over",
    "start": "1753360",
    "end": "1760640"
  },
  {
    "text": "the system affecting regular traffic as well as the operational",
    "start": "1760640",
    "end": "1765720"
  },
  {
    "text": "traffic so now let let's look at what are the messaging models that uh uh",
    "start": "1765720",
    "end": "1771480"
  },
  {
    "text": "Pulsar supports so typically in um in an Enterprise there's a need for uh uh",
    "start": "1771480",
    "end": "1778799"
  },
  {
    "text": "queuing and streaming kind of streaming and messaging for example uh whenever you are analyzing the logs coming from",
    "start": "1778799",
    "end": "1786399"
  },
  {
    "text": "uh your machines versus worker queue that you have to do in uh uh where you",
    "start": "1786399",
    "end": "1794000"
  },
  {
    "text": "wanted to take some uh item you want to process it and there's a uh somebody who",
    "start": "1794000",
    "end": "1800320"
  },
  {
    "text": "is publishing those items and somebody is queuing the deqing the item and process it and move on to the next item",
    "start": "1800320",
    "end": "1806399"
  },
  {
    "text": "as a set of workers right so those two paradigms are combined in pulsor that's why we call this unified messaging model",
    "start": "1806399",
    "end": "1813200"
  },
  {
    "text": "usually such patterns are required two different systems one for messaging is",
    "start": "1813200",
    "end": "1818679"
  },
  {
    "text": "for Kafka and another for queing rabbit mq or JMS or active mq those kind of",
    "start": "1818679",
    "end": "1825200"
  },
  {
    "text": "systems but puls are unifies both those models into a single system so that you",
    "start": "1825200",
    "end": "1830360"
  },
  {
    "text": "don't need these multiple system in so one single system you can mix those traffic uh queing traffic as well as",
    "start": "1830360",
    "end": "1836519"
  },
  {
    "text": "messaging traffic all into single system and that is provided by the subscription that I talked about right so for the",
    "start": "1836519",
    "end": "1844519"
  },
  {
    "text": "streaming model there are two subscriptions and queing model there's one subscription so the data is published into the topic uh there is an",
    "start": "1844519",
    "end": "1851640"
  },
  {
    "text": "exclusive subscription when one consumer consuming out of that sub subscription if another consumer tries to Z mode of",
    "start": "1851640",
    "end": "1857799"
  },
  {
    "text": "it it gives an error then uh in the if fail over subscription in the case of",
    "start": "1857799",
    "end": "1863399"
  },
  {
    "text": "fail over subscription you can have one consumer uh uh consuming and another",
    "start": "1863399",
    "end": "1870600"
  },
  {
    "text": "consumer standing by the moment the consumer one goes down uh immediately",
    "start": "1870600",
    "end": "1876080"
  },
  {
    "text": "the subscription will replay the data from where the consumer one left off to the stand by consumer this is needed in",
    "start": "1876080",
    "end": "1883120"
  },
  {
    "text": "the case where uh uh where some of the consumer can go down and come up or",
    "start": "1883120",
    "end": "1890039"
  },
  {
    "text": "scale up or whatever it might be the case for the queing subscription if you look at in the other",
    "start": "1890039",
    "end": "1896919"
  },
  {
    "text": "two uh all the data from a partition or a topic uh is conceived in order like m0",
    "start": "1896919",
    "end": "1905399"
  },
  {
    "text": "M1 to the same consumer whereas in the the queing subscription that uh data",
    "start": "1905399",
    "end": "1913519"
  },
  {
    "text": "is sprayed across multiple consumers because it's a queuing where you DQ do",
    "start": "1913519",
    "end": "1918600"
  },
  {
    "text": "the work and move on to the next item so one of the key thing in this case is what we call as individual",
    "start": "1918600",
    "end": "1925320"
  },
  {
    "text": "acknowledgement in a work worker que kind of environment each consumer one",
    "start": "1925320",
    "end": "1930440"
  },
  {
    "text": "consumer might be going fast one consumer might be going slow and it's uh important",
    "start": "1930440",
    "end": "1935880"
  },
  {
    "text": "to acknowledge individually the message and keep track of it for example consumer 3 is fast and going like m0 M3",
    "start": "1935880",
    "end": "1943840"
  },
  {
    "text": "consumer two is still an M1 whereas consumer has gone on to M10 or M11 right",
    "start": "1943840",
    "end": "1949679"
  },
  {
    "text": "so now when the consumer 2 acknowledges M1 then we can at that point we can",
    "start": "1949679",
    "end": "1957639"
  },
  {
    "text": "consumer 2 can get M M12 or whatever it is right so think about millions of",
    "start": "1957639",
    "end": "1962720"
  },
  {
    "text": "messages you have to keep track of the acts on the other hand in the so Kafka does not have this notion of individual",
    "start": "1962720",
    "end": "1969080"
  },
  {
    "text": "acts so in pul are like the subscription failover and exclude subscription you",
    "start": "1969080",
    "end": "1975840"
  },
  {
    "text": "have the notion of Select cumulative act so if we acknowledge that the last consumed that message is M10 it you are",
    "start": "1975840",
    "end": "1983639"
  },
  {
    "text": "also indicating that I have consumed all the messages up to from m0 to M10 so",
    "start": "1983639",
    "end": "1989240"
  },
  {
    "text": "that is cumulative acknowledgement so puls are both supports both acknowledgements and uh the cumulative",
    "start": "1989240",
    "end": "1996120"
  },
  {
    "text": "acknowledgement is only for streaming sorry streaming subscriptions and select",
    "start": "1996120",
    "end": "2001240"
  },
  {
    "text": "your acknowledgements for queing subscription so bser has this uh notion",
    "start": "2001240",
    "end": "2007440"
  },
  {
    "text": "of uh inbuilt ge application in other words uh you",
    "start": "2007440",
    "end": "2013519"
  },
  {
    "text": "can uh have multiple Pulsar cluster operating on different uh regions uh uh",
    "start": "2013519",
    "end": "2019960"
  },
  {
    "text": "in a data center across the world and uh you can uh have a unified view of the",
    "start": "2019960",
    "end": "2026639"
  },
  {
    "text": "entire topics and part topics and name spaces and tenants across these data",
    "start": "2026639",
    "end": "2031840"
  },
  {
    "text": "center clusters and data can be replicated so in other words one prod produc es can be in one Data Center and",
    "start": "2031840",
    "end": "2039159"
  },
  {
    "text": "consumer can be com consuming out of the data center or consume out of a different data center all of them",
    "start": "2039159",
    "end": "2045279"
  },
  {
    "text": "combinations are possible so so it's already inbuilt into the Pulsar system",
    "start": "2045279",
    "end": "2052040"
  },
  {
    "text": "you don't have to do anything special like in C all you to do mirror maker some separate component that you have to",
    "start": "2052040",
    "end": "2057599"
  },
  {
    "text": "bring on board and everything in Pulsar just install Pulsar bring up the system and ask the configure the each data",
    "start": "2057599",
    "end": "2064398"
  },
  {
    "text": "centers and it's all automat Ally the data starts flowing so simple",
    "start": "2064399",
    "end": "2070040"
  },
  {
    "text": "configurations to add and remove regions you can even selectively place like this tenant can be in only Data Center and a",
    "start": "2070040",
    "end": "2076320"
  },
  {
    "text": "and b but not on data center C this also allows you to enforce data retention",
    "start": "2076320",
    "end": "2081760"
  },
  {
    "text": "policies of the uh regulations that we need to keep track of for example Health Data in Europe should not leave Europe",
    "start": "2081760",
    "end": "2088398"
  },
  {
    "text": "right so those kind of constraints you can satisfy as well so asynchronous uh uh",
    "start": "2088399",
    "end": "2098879"
  },
  {
    "text": "replication as well as synchronous replication both are available in Pulsar so if you have asynchronous",
    "start": "2098920",
    "end": "2106440"
  },
  {
    "text": "replication you can have a primary stand by cluster the data is always replicated now the cool thing about asynchronous",
    "start": "2106440",
    "end": "2112200"
  },
  {
    "text": "replication is when when the primary fails and cuts over to the standby when the consumers are reactivated you can",
    "start": "2112200",
    "end": "2119560"
  },
  {
    "text": "approximately uh start from where you left off because pulser has this notion of",
    "start": "2119560",
    "end": "2125040"
  },
  {
    "text": "the um markers that is being sent out of the Pulsar uh that uh knows what",
    "start": "2125040",
    "end": "2133119"
  },
  {
    "text": "consumer where was what offset and everything those are all replicated and those",
    "start": "2133119",
    "end": "2138440"
  },
  {
    "text": "replication when the consumer says it is this is the same consumer I was consuming at last data center it knows",
    "start": "2138440",
    "end": "2144680"
  },
  {
    "text": "where to send the data so now you can stretch the single cluster across multiple data center to do a synchronous",
    "start": "2144680",
    "end": "2152319"
  },
  {
    "text": "replication too so pulser uses the notion of uh rack awareness you can",
    "start": "2152319",
    "end": "2158440"
  },
  {
    "text": "think about the rack as one Data Center and whenever you replicate the data at the storage level you can say I need to",
    "start": "2158440",
    "end": "2164880"
  },
  {
    "text": "have this replica not only in this data center also on the data center so it",
    "start": "2164880",
    "end": "2170480"
  },
  {
    "text": "behaves as as like a single cluster but uh when the consumers and producers cut over they exactly know where they left",
    "start": "2170480",
    "end": "2177880"
  },
  {
    "text": "left off and exactly what they produced so which mean the state everything is maintained across these one single",
    "start": "2177880",
    "end": "2184280"
  },
  {
    "text": "cluster startling across multiple data centers so this is this is a viable option when",
    "start": "2184280",
    "end": "2190560"
  },
  {
    "text": "the two data centers are closed if the data centers are a little bit distant with each other uh then you might incur",
    "start": "2190560",
    "end": "2196480"
  },
  {
    "text": "the sub uh producer latency because that is geographical uh synchronous replication is involved uh if the lat",
    "start": "2196480",
    "end": "2205440"
  },
  {
    "text": "data center latency is around around 40 to 45 then the overall latency for",
    "start": "2205440",
    "end": "2210800"
  },
  {
    "text": "publishing will be for on 50 milliseconds because publish latency is 5 milliseconds so so the replicated",
    "start": "2210800",
    "end": "2217560"
  },
  {
    "text": "subscription I don't want to go into detail about it in the interest of time so as I",
    "start": "2217560",
    "end": "2223920"
  },
  {
    "text": "mentioned pulser is a cloud native and multi one single cluster will surface",
    "start": "2223920",
    "end": "2229440"
  },
  {
    "text": "for an ent ent entire Enterprise and uh you can distribute multiple themes",
    "start": "2229440",
    "end": "2234480"
  },
  {
    "text": "within a single cluster um you can be provide authentication plugins",
    "start": "2234480",
    "end": "2239560"
  },
  {
    "text": "authorization plugins and you can isolate uh each tenant to have certain quotas flow control uh then how much",
    "start": "2239560",
    "end": "2247680"
  },
  {
    "text": "rate you can consume each Topic at the particular tenant particular team it call can be done at the software",
    "start": "2247680",
    "end": "2254200"
  },
  {
    "text": "isolation level and even if some tenants or some teams are critical from a revenue standpoint you can move those",
    "start": "2254200",
    "end": "2261960"
  },
  {
    "text": "nodes into a what do you call dedicated set of Hardware but still as a part of",
    "start": "2261960",
    "end": "2267200"
  },
  {
    "text": "the single cluster so that that traffic is not even what do you call influenced by the other tenants right or if you",
    "start": "2267200",
    "end": "2274240"
  },
  {
    "text": "have bug and everything that is coming through you can isolate that uh tent separately then pull it back in the",
    "start": "2274240",
    "end": "2280000"
  },
  {
    "text": "cluster all these things are well thought through in Pulsar so this is just a",
    "start": "2280000",
    "end": "2287200"
  },
  {
    "text": "qua uh so what are the Pulsar clients how do you interact with Pulsar they",
    "start": "2287200",
    "end": "2292599"
  },
  {
    "text": "language wise we have multiple languages like C++ C go python Java and nodejs has",
    "start": "2292599",
    "end": "2299480"
  },
  {
    "text": "been added and in in additionally like there's a native schola Native rust and",
    "start": "2299480",
    "end": "2305079"
  },
  {
    "text": "other languages that are available that is community maintain um how does the pulser producer looks like it's as",
    "start": "2305079",
    "end": "2310880"
  },
  {
    "text": "simple as it can get just to open up a URL for the Brokers or the load balancer",
    "start": "2310880",
    "end": "2316319"
  },
  {
    "text": "endpoint that I talked about and create a producer because the topics are named hierarchically tenant",
    "start": "2316319",
    "end": "2322760"
  },
  {
    "text": "SL um names space SL topic then produ send a message you can have a a",
    "start": "2322760",
    "end": "2329359"
  },
  {
    "text": "synchronous version of the produ message as well then how you consume out of it as",
    "start": "2329359",
    "end": "2334680"
  },
  {
    "text": "simple as it can get just to issue the address create a client and subscribe to multiple one topic and receive on the",
    "start": "2334680",
    "end": "2342280"
  },
  {
    "text": "topic uh then acknowledge so once it acknowledges it automatically you can receive the next",
    "start": "2342280",
    "end": "2348359"
  },
  {
    "text": "message so pulser also provides support for schema registry especially uh uh to",
    "start": "2348359",
    "end": "2354440"
  },
  {
    "text": "provide type safety to Applications uh also provides a server side I mean if it's client side it's up to application",
    "start": "2354440",
    "end": "2361440"
  },
  {
    "text": "the schema registry allows you to provide on the service side so you can upload your schemas for a particular",
    "start": "2361440",
    "end": "2366640"
  },
  {
    "text": "topic and so um the cluster will enforce it and based on the type of enforcement",
    "start": "2366640",
    "end": "2373400"
  },
  {
    "text": "that you want uh like Backward Compatible forward compatible or incompatible all these things can be",
    "start": "2373400",
    "end": "2379319"
  },
  {
    "text": "enforced at the topic level so pulsor schemas consist of a name and a payload",
    "start": "2379319",
    "end": "2384800"
  },
  {
    "text": "for whatever the schema is and the schema type whether it's a Json phobu Arro and you can addition user Define",
    "start": "2384800",
    "end": "2391920"
  },
  {
    "text": "properly like a geta of the schema file that you use you was last uh that was",
    "start": "2391920",
    "end": "2398440"
  },
  {
    "text": "upgraded into production right so if you look at how the schema create a client with a schema on you create a new",
    "start": "2398440",
    "end": "2405560"
  },
  {
    "text": "producer then uh with Json schema of whatever the class size is then whenever",
    "start": "2405560",
    "end": "2412040"
  },
  {
    "text": "you try to publish it you know you have to stick to the schema otherwise you",
    "start": "2412040",
    "end": "2417079"
  },
  {
    "text": "depending upon what attributes that you have set on the topic automatically it will be enforcing that one so if the",
    "start": "2417079",
    "end": "2423319"
  },
  {
    "text": "schema changes and when you publish it it will upgrade the schema as well if there is a forward Evolution occurs and",
    "start": "2423319",
    "end": "2430480"
  },
  {
    "text": "with the backward compatibility okay so so far we talked",
    "start": "2430480",
    "end": "2436280"
  },
  {
    "text": "about um uh what do you call the messaging side of Pulsar which is the",
    "start": "2436280",
    "end": "2441680"
  },
  {
    "text": "injection and the storage set of pulser where you can retain the data as long as you want by expanding the storage nodes",
    "start": "2441680",
    "end": "2448079"
  },
  {
    "text": "or retain certain amount of time after which you can expire the data you saw the Low Cost Storage and other aspects",
    "start": "2448079",
    "end": "2454680"
  },
  {
    "text": "now what do you do with the data you need to process it right uh you can write your the processing comes in the",
    "start": "2454680",
    "end": "2461680"
  },
  {
    "text": "form of uh multiple different aspects one is consume data as it's processed",
    "start": "2461680",
    "end": "2467800"
  },
  {
    "text": "and uh or the second type of computer is lightweight in the sense like hey I want to grab some data uh do some simple",
    "start": "2467800",
    "end": "2475040"
  },
  {
    "text": "lightweight and put that back into the pulser itself then heavyweight compute in the form of dags and like what pulsor",
    "start": "2475040",
    "end": "2481480"
  },
  {
    "text": "and Flink and all the various uh frame Frameworks do then interactive querying",
    "start": "2481480",
    "end": "2487119"
  },
  {
    "text": "of store data seams uh so which mean the data is stored in the storage uh the",
    "start": "2487119",
    "end": "2492720"
  },
  {
    "text": "steam data now we want to query the data uh how do we query that so I'm going to",
    "start": "2492720",
    "end": "2498880"
  },
  {
    "text": "skip a few slides uh to the interest of time but let me talk about what the",
    "start": "2498880",
    "end": "2504240"
  },
  {
    "text": "lightweight compute if you look at a the abstract view of the compute",
    "start": "2504240",
    "end": "2509520"
  },
  {
    "text": "representation you have incoming messages function is Computing them you're doing output messages so that's",
    "start": "2509520",
    "end": "2515880"
  },
  {
    "text": "all it is is right so now usually it's usually the dag form and you want to",
    "start": "2515880",
    "end": "2521240"
  },
  {
    "text": "stitch the tag together using lot of code or if you used used to spark and",
    "start": "2521240",
    "end": "2526760"
  },
  {
    "text": "Flink kind of Frameworks you have to use color like notation functional map flat",
    "start": "2526760",
    "end": "2531839"
  },
  {
    "text": "map now the messaging and compute are two different systems usually like if you are taking Pulsar along with fling",
    "start": "2531839",
    "end": "2539240"
  },
  {
    "text": "or pulser with uh spark then it's two different systems with the two different uh Evolution as effects right but they",
    "start": "2539240",
    "end": "2548720"
  },
  {
    "text": "do deliver highly scalable system but it's a powerful API but very complicated",
    "start": "2548720",
    "end": "2553960"
  },
  {
    "text": "for users to learn and most of the time it creates some kind of operational",
    "start": "2553960",
    "end": "2559720"
  },
  {
    "text": "issues and developer issues so what we did is uh uh what are the lessons that we",
    "start": "2559720",
    "end": "2566319"
  },
  {
    "text": "learned out of the streaming experience right most of the time people do simple tasks like data transformation data",
    "start": "2566319",
    "end": "2572520"
  },
  {
    "text": "enrichment data classification routing data to from uh point A to point B and C",
    "start": "2572520",
    "end": "2578480"
  },
  {
    "text": "and uh data extraction and loading and some simple upgradation and writing microservices so with this in mind we",
    "start": "2578480",
    "end": "2586079"
  },
  {
    "text": "needed something very simple like uh so so we got inspired by the Lambda",
    "start": "2586079",
    "end": "2592400"
  },
  {
    "text": "functions in Amazon and Lambda functions in Cloud uh uh Cloud as well as in Azure",
    "start": "2592400",
    "end": "2600599"
  },
  {
    "text": "so simple functions are submitted to system runs for events uh compostion P",
    "start": "2600599",
    "end": "2606359"
  },
  {
    "text": "to do complex thing it's Wily popular what can we borrow all these ideas so that's what we did is what we call as a",
    "start": "2606359",
    "end": "2613720"
  },
  {
    "text": "stream native compute using functions so uh pulser has a notion of pulser",
    "start": "2613720",
    "end": "2620559"
  },
  {
    "text": "functions and it provides a simplest op possible API support for multiple",
    "start": "2620559",
    "end": "2625839"
  },
  {
    "text": "languages you can write it down and you can use a native language function definition it's Sol not right your uh",
    "start": "2625839",
    "end": "2632559"
  },
  {
    "text": "task then it skills developers you don't have to learn a new API even if there is a small API just one or two lines of API",
    "start": "2632559",
    "end": "2639200"
  },
  {
    "text": "that you would learn and you don't have you can use the message bus native concept inputs to function is a topic",
    "start": "2639200",
    "end": "2645280"
  },
  {
    "text": "output is from a function is a topic so pulsor functions uh exclamation",
    "start": "2645280",
    "end": "2652559"
  },
  {
    "text": "function if you this is how it looks like um you it takes a string add an",
    "start": "2652559",
    "end": "2660079"
  },
  {
    "text": "exclamation to a string and outputs a string so I think I'm running out of time so can you get a couple of more",
    "start": "2660079",
    "end": "2668240"
  },
  {
    "text": "minutes okay so okay so like uh so this how it looks like so the string input is",
    "start": "2668240",
    "end": "2677119"
  },
  {
    "text": "added with the exclamation character gives a string output and the your input",
    "start": "2677119",
    "end": "2683359"
  },
  {
    "text": "to string the input is input topic that is specified when the function is submitted and output of the function is",
    "start": "2683359",
    "end": "2689599"
  },
  {
    "text": "an output topic that you specify when the function is submitted now if you wanted to get a little bit more this",
    "start": "2689599",
    "end": "2695680"
  },
  {
    "text": "thing more sophisticated you can uh instead of using Java function you can",
    "start": "2695680",
    "end": "2702200"
  },
  {
    "text": "use fulser function and you can type it so type the input as well as type the output and you get an extra this thing",
    "start": "2702200",
    "end": "2708680"
  },
  {
    "text": "called context the context allows you to do some State manipulations and everything aspect of it so so functions",
    "start": "2708680",
    "end": "2715720"
  },
  {
    "text": "are executed for every message of input topic and supports for multiple input as",
    "start": "2715720",
    "end": "2721200"
  },
  {
    "text": "functions support multiple arguments we have multiple topics as input and as functions also supports void functions",
    "start": "2721200",
    "end": "2727480"
  },
  {
    "text": "so which mean there is no output from that function and you can integrate with schema registry and custom Sur and",
    "start": "2727480",
    "end": "2735160"
  },
  {
    "text": "serialization deling can be provided by the users so it provides all the three sematics of the usual at least once at",
    "start": "2735160",
    "end": "2741760"
  },
  {
    "text": "most ones and effectively fs and the puls or functions can be dropped as a thread in the broker or it",
    "start": "2741760",
    "end": "2749240"
  },
  {
    "text": "can be dropped in a different as process in a different nodes or it can be",
    "start": "2749240",
    "end": "2754520"
  },
  {
    "text": "dropped into the pod as a kuber etics uh uh in the cutic cluster so that can work",
    "start": "2754520",
    "end": "2761200"
  },
  {
    "text": "alongside broker or but even though it's isolated traffic so functions can store State",
    "start": "2761200",
    "end": "2768720"
  },
  {
    "text": "especially in the case of aggregations when aggregations are happen across multiple functions so there is a notion",
    "start": "2768720",
    "end": "2774079"
  },
  {
    "text": "of the context and context on increment counter for word count is eally State",
    "start": "2774079",
    "end": "2779559"
  },
  {
    "text": "manipulation that is going on the state is all Global at this point uh so every time the update is global so when the um",
    "start": "2779559",
    "end": "2787280"
  },
  {
    "text": "one of the function fails and restart somewhere else it can pretty much uh don't have to recover the state because",
    "start": "2787280",
    "end": "2793240"
  },
  {
    "text": "the state is already there so you can um so like you can have",
    "start": "2793240",
    "end": "2800960"
  },
  {
    "text": "the notion of puls IO which is essentially the what do you call getting data in and output to the function",
    "start": "2800960",
    "end": "2807480"
  },
  {
    "text": "pulser system so I don't want to go through this one",
    "start": "2807480",
    "end": "2814640"
  },
  {
    "text": "because uh okay so pulsor has a lot of growing",
    "start": "2814640",
    "end": "2819920"
  },
  {
    "text": "ecosystem then uh I think this is not updated for six months now it has grown",
    "start": "2819920",
    "end": "2825680"
  },
  {
    "text": "uh exponentially lot of companies are using Pulsar uh then uh Pulsar already",
    "start": "2825680",
    "end": "2831119"
  },
  {
    "text": "in production on several companies as far as I know like there are 600 plus companies already in product running in",
    "start": "2831119",
    "end": "2837400"
  },
  {
    "text": "production uh so with the lack of time I'm done I if you wanted to have a slide",
    "start": "2837400",
    "end": "2843280"
  },
  {
    "text": "deck I will be happy to share with you if you want to read more about Pulsar uh",
    "start": "2843280",
    "end": "2849200"
  },
  {
    "text": "there is a couple of blogs written by an author called Jack ju lightly uh he has",
    "start": "2849200",
    "end": "2856720"
  },
  {
    "text": "done a lot of experiment with pulsar and he also understood Pulsar also and there is more uh topics as well these are all",
    "start": "2856720",
    "end": "2864119"
  },
  {
    "text": "now it used to be part of stream leer now it's all available as pulsor blogs as a as a Splunk blogs so you can read",
    "start": "2864119",
    "end": "2871319"
  },
  {
    "text": "it in the Splunk if you search for this uh Splunk blogs it'll automatically show show up on",
    "start": "2871319",
    "end": "2877000"
  },
  {
    "text": "Google so that's all I had and uh thanks for listening if you want to reach out I can",
    "start": "2877000",
    "end": "2884359"
  },
  {
    "text": "reach out out on the slack I'll be there for half an hour so organizers can you",
    "start": "2884359",
    "end": "2890240"
  },
  {
    "text": "please forward the logistics for the slack so that I can happy to answer some of the question thank you it was a",
    "start": "2890240",
    "end": "2896960"
  },
  {
    "text": "pleasure talking to the",
    "start": "2896960",
    "end": "2899960"
  },
  {
    "text": "audience",
    "start": "2904640",
    "end": "2907640"
  }
]