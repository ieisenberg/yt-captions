[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "[Music]",
    "start": "980",
    "end": "7849"
  },
  {
    "text": "thank you I can actually do one better than lawyers that understand programming",
    "start": "14000",
    "end": "19410"
  },
  {
    "text": "languages because I'll have an example of a language designed by a lawyer so let's see all right so I want to talk",
    "start": "19410",
    "end": "26400"
  },
  {
    "start": "25000",
    "end": "37000"
  },
  {
    "text": "about a language stack for implementing contracts and I consciously didn't say",
    "start": "26400",
    "end": "31590"
  },
  {
    "text": "smart contracts of course they play a role but the picture is a little bit bigger or different so context if you",
    "start": "31590",
    "end": "38580"
  },
  {
    "start": "37000",
    "end": "84000"
  },
  {
    "text": "look at the term smart contract it started historically essentially as an",
    "start": "38580",
    "end": "44970"
  },
  {
    "text": "actual contract running on a blockchain so that the focus was really on typical",
    "start": "44970",
    "end": "51120"
  },
  {
    "text": "use cases for smart for block chains are or were contract kind of stuff but it",
    "start": "51120",
    "end": "57059"
  },
  {
    "text": "kind of morphed over to mean any turing-complete program that runs on a blockchain right so if you look at",
    "start": "57059",
    "end": "63030"
  },
  {
    "text": "solidity it's a general-purpose programming language with a couple of extensions for the blockchain",
    "start": "63030",
    "end": "68310"
  },
  {
    "text": "infrastructure but there is nothing in it that that makes it specifically suitable for implementing actual",
    "start": "68310",
    "end": "74250"
  },
  {
    "text": "contracts and I'll get back to what this is in a moment so I want to go back to the notion of smart contracts as a means",
    "start": "74250",
    "end": "81810"
  },
  {
    "text": "of actually running contracts so a contract I would define as something",
    "start": "81810",
    "end": "87840"
  },
  {
    "start": "84000",
    "end": "169000"
  },
  {
    "text": "where multiple parties collaborate in making a decision an agreement or coordinate something somehow and then",
    "start": "87840",
    "end": "94560"
  },
  {
    "text": "once they agree on the contract and execute it meaning they sign it and make it kind of go live then this is legally",
    "start": "94560",
    "end": "101789"
  },
  {
    "text": "binding and trusted of course it depends you know there are shades of gray how",
    "start": "101789",
    "end": "107490"
  },
  {
    "text": "binding it is depending on how you make the contract but still generally that's the case and if you want to execute",
    "start": "107490",
    "end": "115619"
  },
  {
    "text": "contracts automatically can this be seen that automatically is highlighted yes then you need to describe them in a way",
    "start": "115619",
    "end": "122490"
  },
  {
    "text": "so that the machine can interpret them so taking a typical document like a typical contract expressed in prose I",
    "start": "122490",
    "end": "128460"
  },
  {
    "text": "mean it's hardly understand it before non-lawyers it's certainly not understandable for machines so that's",
    "start": "128460",
    "end": "134220"
  },
  {
    "text": "that's a no-go so we need to do this differently there's actually a funny story I was working for",
    "start": "134220",
    "end": "140940"
  },
  {
    "text": "child Simone ease company a long while ago and they hit a lawyer on staff and",
    "start": "140940",
    "end": "147080"
  },
  {
    "text": "that lawyer had been working in the computer science industry software industry for years and he he treated",
    "start": "147080",
    "end": "154070"
  },
  {
    "text": "contract writing as programming so he really he really tried to cover all",
    "start": "154070",
    "end": "161340"
  },
  {
    "text": "cases systematically looking for synonyms and he really tried to make it watertight it was a very interesting guy",
    "start": "161340",
    "end": "167670"
  },
  {
    "text": "anyway I digress so if we look at contracts then there are two phases by",
    "start": "167670",
    "end": "174240"
  },
  {
    "start": "169000",
    "end": "301000"
  },
  {
    "text": "the way like with any program but specifically for contracts you have the contract definition phase and then you",
    "start": "174240",
    "end": "179940"
  },
  {
    "text": "have a contract execution phase and in the definitional phase you have a bunch of parties usually lawyers or people",
    "start": "179940",
    "end": "186120"
  },
  {
    "text": "like that meaning no pro non programmers who have to agree on what the contract is supposed to do so there is no need",
    "start": "186120",
    "end": "194940"
  },
  {
    "text": "for crypto and any of this it's just making sure we all understand what",
    "start": "194940",
    "end": "200700"
  },
  {
    "text": "actually the contract does if it's executed if when it's going to be executed right so that's that's step one",
    "start": "200700",
    "end": "208310"
  },
  {
    "text": "so the the behavior expressed in the contract must be understandable to those",
    "start": "208310",
    "end": "213960"
  },
  {
    "text": "people who care again usually not programmers and so we have to then also verify some notion of functional",
    "start": "213960",
    "end": "220260"
  },
  {
    "text": "correctness so for example if we say if the ship you just leased isn't returned",
    "start": "220260",
    "end": "227310"
  },
  {
    "text": "within X months in a working state then",
    "start": "227310",
    "end": "232950"
  },
  {
    "text": "you have to pay some kind of fine right you have to be sure that there isn't a loophole where you can kind of damage",
    "start": "232950",
    "end": "239280"
  },
  {
    "text": "the ship and still not pay because the contract has some other clause somewhere else that expresses that in some strange",
    "start": "239280",
    "end": "244770"
  },
  {
    "text": "circumstance you don't have to pay the fine right so this would be the notion of functional correctness if you treat it as a state machine right there are",
    "start": "244770",
    "end": "251610"
  },
  {
    "text": "certain constraints on liveness and non deadlocks and temporal properties that say for every execution of the state",
    "start": "251610",
    "end": "258150"
  },
  {
    "text": "machine it's guaranteed that right so this what needs to be done here and then of course once you execute it that's",
    "start": "258150",
    "end": "264720"
  },
  {
    "text": "where these let's say blockchain e kind of things come in where you can",
    "start": "264720",
    "end": "270479"
  },
  {
    "text": "guarantee through crypto and you know all these agreement calls that he just talked about deaf",
    "start": "270479",
    "end": "277090"
  },
  {
    "text": "hunters talked about so you can't game it right so assuming the specified",
    "start": "277090",
    "end": "283900"
  },
  {
    "text": "behavior is correct to all parties involved make sure that the actual software",
    "start": "283900",
    "end": "289030"
  },
  {
    "text": "system that runs this and forces this does it correctly and you kind of use",
    "start": "289030",
    "end": "294910"
  },
  {
    "text": "crypto stuff to prove that you actually you know I don't know submitted something paid something whatever once",
    "start": "294910",
    "end": "303100"
  },
  {
    "text": "you have these two then you can trust right it doesn't help if you have",
    "start": "303100",
    "end": "308340"
  },
  {
    "text": "correct execution infrastructure but you have a contract with a loophole I don't mean a software bug I mean an actual",
    "start": "308340",
    "end": "314080"
  },
  {
    "text": "logic fault right so this is really important in my opinion to understand",
    "start": "314080",
    "end": "319450"
  },
  {
    "text": "because again block chains only help with this right they help with this notion of non-repeated repudiate a so",
    "start": "319450",
    "end": "326710"
  },
  {
    "text": "once you've done something you have done it because it's in the blockchain and everybody knows that and everybody can",
    "start": "326710",
    "end": "331810"
  },
  {
    "text": "repeat the calculation that got to this point blah blah blah blah blah chain blocked and blockchain right and it",
    "start": "331810",
    "end": "337240"
  },
  {
    "text": "helps to some degree to verify the behavior meaning it kind of guarantees",
    "start": "337240",
    "end": "343780"
  },
  {
    "text": "that if it's kind of programmed correctly it runs correctly I'll get back to that",
    "start": "343780",
    "end": "349260"
  },
  {
    "start": "349000",
    "end": "435000"
  },
  {
    "text": "so again block chains in my opinion are a way to provide certain non-functional",
    "start": "349260",
    "end": "356710"
  },
  {
    "text": "properties to contracts and with non-functional I mean they don't relate",
    "start": "356710",
    "end": "363370"
  },
  {
    "text": "to the actual behavior they provide LEDs right usually in this case security and",
    "start": "363370",
    "end": "369310"
  },
  {
    "text": "you know the usual quality attributes and so block chains are a suitable maybe",
    "start": "369310",
    "end": "376900"
  },
  {
    "text": "partial implementation technologies for actual contracts if these non-functional",
    "start": "376900",
    "end": "384010"
  },
  {
    "text": "properties are needed for example if for whatever reason you have to trust some",
    "start": "384010",
    "end": "390790"
  },
  {
    "text": "kind of central entity in the real world anyway because I don't know they own the",
    "start": "390790",
    "end": "396310"
  },
  {
    "text": "ship you lease right if they sell your ship with a big hole in it you're gonna sink and die right so you're gonna trust",
    "start": "396310",
    "end": "401980"
  },
  {
    "text": "this company so you could argue you don't need a distributed blockchain style system to do the kind of",
    "start": "401980",
    "end": "408460"
  },
  {
    "text": "legal thing you can just also trust them with that and put the contract with a bunch of signatures onto their servers right you you might be able to make that",
    "start": "408460",
    "end": "414760"
  },
  {
    "text": "argument right so it really depends on the context how much of these blockchain",
    "start": "414760",
    "end": "420640"
  },
  {
    "text": "guarantees you need and of course different plug chain technologies also provide different levels of trust again",
    "start": "420640",
    "end": "427030"
  },
  {
    "text": "these various proof of works take whatever they provide different levels of trust and again depending on what you",
    "start": "427030",
    "end": "433990"
  },
  {
    "text": "want to do this might be enough all right so we have a verification problem and we have a validation problem the",
    "start": "433990",
    "end": "440080"
  },
  {
    "start": "435000",
    "end": "494000"
  },
  {
    "text": "verification problem is assuming the contract is specified in a correct way",
    "start": "440080",
    "end": "445690"
  },
  {
    "text": "that's the blockchain you know whatever aetherium distributed vm execute it",
    "start": "445690",
    "end": "451270"
  },
  {
    "text": "correctly make sure there aren't any bugs no loopholes I mean there have been a couple of famous ones right stuff like",
    "start": "451270",
    "end": "458050"
  },
  {
    "text": "that and then we have a validation problem which is to make sure that the",
    "start": "458050",
    "end": "463770"
  },
  {
    "text": "contract functionally actually behaves as we expect this is by the way nothing",
    "start": "463770",
    "end": "468820"
  },
  {
    "text": "new every software program has that problem right you do validation make sure it does the right things and verification make sure does these things",
    "start": "468820",
    "end": "475930"
  },
  {
    "text": "the right way so and this neatly Maps on these two",
    "start": "475930",
    "end": "481060"
  },
  {
    "text": "phases a validation is what you do during contract definition right the lawyers agree and understand and a",
    "start": "481060",
    "end": "487750"
  },
  {
    "text": "verification refers or relates to the execution of the contract so it kind of faithfully execute what's specified so",
    "start": "487750",
    "end": "495490"
  },
  {
    "start": "494000",
    "end": "592000"
  },
  {
    "text": "that's the big picture in order to do these things there are generally two",
    "start": "495490",
    "end": "500770"
  },
  {
    "text": "ways there is correct by construction and analysis and fix correct by",
    "start": "500770",
    "end": "505840"
  },
  {
    "text": "construction means you take a language maybe that one has to be invented whatever that doesn't allow you to make",
    "start": "505840",
    "end": "513490"
  },
  {
    "text": "certain mistakes right so simple example if a language doesn't have now then you",
    "start": "513490",
    "end": "521169"
  },
  {
    "text": "can't run into mouth pointer exceptions right so you for example use option types and the type system enforces that",
    "start": "521170",
    "end": "527620"
  },
  {
    "text": "you always check if something is nothing or something and because the type system checks that you cannot make you cannot",
    "start": "527620",
    "end": "534640"
  },
  {
    "text": "run into another point exception and if you do it's a verification issue of the lower level that somehow the type",
    "start": "534640",
    "end": "540160"
  },
  {
    "text": "checker is broken which you assume not to happen because you know compilers don't have bugs asymptotically over time",
    "start": "540160",
    "end": "547150"
  },
  {
    "text": "that's true and analysis and fix is you write a program and then you analyze and",
    "start": "547150",
    "end": "554140"
  },
  {
    "text": "show that this particular program doesn't have certain bugs again you can run whatever checker over your java",
    "start": "554140",
    "end": "561400"
  },
  {
    "text": "program which does have null values but it still does an analysis that shows in this particular program it's guaranteed",
    "start": "561400",
    "end": "567610"
  },
  {
    "text": "that for all possible executions now two hundred sessions won't happen right whether this is easy expensive costly",
    "start": "567610",
    "end": "574180"
  },
  {
    "text": "possible at all depends on the language so again for correct back instruction",
    "start": "574180",
    "end": "580510"
  },
  {
    "text": "you need a suitable language for analysis and fix you need a suitable tool and you can do of course you can",
    "start": "580510",
    "end": "585790"
  },
  {
    "text": "combine both I'll get back to that and this applies also here to the to the kind of contract context so point of",
    "start": "585790",
    "end": "594100"
  },
  {
    "start": "592000",
    "end": "624000"
  },
  {
    "text": "course as you already said in the introduction a domain-specific language that lets you express contracts in a way",
    "start": "594100",
    "end": "599980"
  },
  {
    "text": "that's more understandable to you know non-programmers that language a language",
    "start": "599980",
    "end": "605740"
  },
  {
    "text": "that has certain properties meaning you can't make certain mistakes and maybe the language is designed in a way so",
    "start": "605740",
    "end": "612460"
  },
  {
    "text": "that it simplifies certain analyses to identify other problems you can't constructively rule out right so this is",
    "start": "612460",
    "end": "618790"
  },
  {
    "text": "kind of the direction I'm thinking slash prototyping yeah we don't need this one",
    "start": "618790",
    "end": "624670"
  },
  {
    "start": "624000",
    "end": "745000"
  },
  {
    "text": "so before I gonna show you code running code I want to put this a little bit",
    "start": "624670",
    "end": "632200"
  },
  {
    "text": "into context because oops I didn't put an animation there there is lots of",
    "start": "632200",
    "end": "639700"
  },
  {
    "text": "history and research in this whole story of computational law where people think",
    "start": "639700",
    "end": "645100"
  },
  {
    "text": "about how how can you make contracts you know formally described and then autumn",
    "start": "645100",
    "end": "650620"
  },
  {
    "text": "executable by programs and if you look at papers in this area you will see that",
    "start": "650620",
    "end": "658510"
  },
  {
    "text": "they have notions of obligation and permission like you have to pay X within",
    "start": "658510",
    "end": "664540"
  },
  {
    "text": "Y deadlines and if you do that an obligation then you get the permission",
    "start": "664540",
    "end": "669610"
  },
  {
    "text": "to use the ship right stuff like that and then there are all kinds of clauses that if you don't do this within",
    "start": "669610",
    "end": "676000"
  },
  {
    "text": "this deadline you get an additional thing you have to pay and if you do this a bit earlier you get more permissions and stuff like that these all interact",
    "start": "676000",
    "end": "682090"
  },
  {
    "text": "somehow and then there is the notion of all the ring like things have to happen in the particular although there is",
    "start": "682090",
    "end": "687760"
  },
  {
    "text": "causality like if this doesn't happen then this other thing happens of course there's the motion of time and then when",
    "start": "687760",
    "end": "693640"
  },
  {
    "text": "you actually execute the contract there is things like events where you say okay once you make the payment the running",
    "start": "693640",
    "end": "699760"
  },
  {
    "text": "contract goes into another state and then in that state you now are allowed to do other things so that's kind of what all of these systems have in common",
    "start": "699760",
    "end": "707620"
  },
  {
    "text": "and we can now all pause and read all these papers off line of course so there",
    "start": "707620",
    "end": "715030"
  },
  {
    "text": "is various things some of them old others more recent and if you're",
    "start": "715030",
    "end": "720250"
  },
  {
    "text": "interested in some of these things then you might want to check this out I'll give you a concrete example of a",
    "start": "720250",
    "end": "725860"
  },
  {
    "text": "language that's based on where's the poet's thing here that's based on the ideas from poets so this is all pre",
    "start": "725860",
    "end": "733450"
  },
  {
    "text": "blockchain but nothing to do with block chains which kind of reinforces this idea that block chains our implementation technologies for certain",
    "start": "733450",
    "end": "740580"
  },
  {
    "text": "non-functional properties and not the enabler of computational law all right",
    "start": "740580",
    "end": "745870"
  },
  {
    "start": "745000",
    "end": "931000"
  },
  {
    "text": "so the next few slides propose if you",
    "start": "745870",
    "end": "751570"
  },
  {
    "text": "will a language stack that's also the title of the presentation so I guess is supposed to be one about how a bunch of",
    "start": "751570",
    "end": "758980"
  },
  {
    "text": "languages could look like to to make something like that work so I've started implementing something which of course",
    "start": "758980",
    "end": "765280"
  },
  {
    "text": "everything has to have a name is the executable multi-party contract language right whatever name I'll demo that in a",
    "start": "765280",
    "end": "773830"
  },
  {
    "text": "moment and on top of that you could imagine building various specific languages for",
    "start": "773830",
    "end": "780250"
  },
  {
    "text": "contracts in certain domains I'll show an example from logistics that a friend of mine has built or prototyped we have",
    "start": "780250",
    "end": "788589"
  },
  {
    "text": "built languages in the finance space but they were not based on this so there's like pieces all over the place there's",
    "start": "788589",
    "end": "796089"
  },
  {
    "text": "also a research project in Hamburg going on where the hamburg's logistics community has approached the",
    "start": "796089",
    "end": "801100"
  },
  {
    "text": "IT community help us iBM is trying to make us use their own blockchain thing we want to build something open please",
    "start": "801100",
    "end": "807280"
  },
  {
    "text": "help us you know so there is a research project going on there so and then in this particular system that I've",
    "start": "807280",
    "end": "815230"
  },
  {
    "text": "built this prototype this EMP CL is built on a language called kernel F which is a functional programming",
    "start": "815230",
    "end": "821200"
  },
  {
    "text": "language implemented in MPs it's highly extensible which is good because it can extend it in ways that kind of make it",
    "start": "821200",
    "end": "827320"
  },
  {
    "text": "the EMP CL and then on this level you can do validation you can do simulation",
    "start": "827320",
    "end": "833140"
  },
  {
    "text": "you can play with this contract you can simulate them and you can you know you have a nice expressive language to have",
    "start": "833140",
    "end": "839650"
  },
  {
    "text": "state based behavior and also address some you know gaming issues show that at",
    "start": "839650",
    "end": "844960"
  },
  {
    "text": "the moment and then you can map these to various different block chains I haven't",
    "start": "844960",
    "end": "853030"
  },
  {
    "text": "implemented this just to be clear but we kind of looked at this talk to the theorem guys there is this Yuliya",
    "start": "853030",
    "end": "859660"
  },
  {
    "text": "language which is if you will the etherium assembly well it's a between the actual machine code and solidity",
    "start": "859660",
    "end": "866440"
  },
  {
    "text": "this language called julia and there are of course other block chains as well and",
    "start": "866440",
    "end": "871810"
  },
  {
    "text": "because these contracts are specified independent of a particular implementation language you can map them",
    "start": "871810",
    "end": "876820"
  },
  {
    "text": "to different ones through cogeneration old story nothing new and then you can also map all of this to for example set",
    "start": "876820",
    "end": "884320"
  },
  {
    "text": "3 anybody who knows set 3 ok it's an SMT",
    "start": "884320",
    "end": "889720"
  },
  {
    "text": "solver meaning its formalism based on which you can make certain proofs about",
    "start": "889720",
    "end": "896170"
  },
  {
    "text": "your program and we're currently in the process of mapping all of this complete stack onto set 3 this is actually paid",
    "start": "896170",
    "end": "903070"
  },
  {
    "text": "by this research project in Hamburg I don't know if the project knows that they pay for this but as with usually",
    "start": "903070",
    "end": "908230"
  },
  {
    "text": "whatever this should be cut out yes I'm sorry no I mean of course it's part of",
    "start": "908230",
    "end": "913480"
  },
  {
    "text": "the story so that the idea is in this project to build a logistics language we",
    "start": "913480",
    "end": "918550"
  },
  {
    "text": "have half briefing right I don't know what the English word is for this thank you say that again",
    "start": "918550",
    "end": "924420"
  },
  {
    "text": "ok all right and then to use this mapping to verify certain properties",
    "start": "924420",
    "end": "930000"
  },
  {
    "text": "model checking stuff like that so I'm going to show you a demo of this [Music]",
    "start": "930000",
    "end": "937920"
  },
  {
    "start": "931000",
    "end": "1227000"
  },
  {
    "text": "here so here is a declarative",
    "start": "940260",
    "end": "947430"
  },
  {
    "text": "specification of a decision taken by a group of people the group of people are",
    "start": "947430",
    "end": "954430"
  },
  {
    "text": "bumped and Marcus Dundas the guy who sits in the office and opposite of my of",
    "start": "954430",
    "end": "960279"
  },
  {
    "text": "me there's also going to be a close and a Thomas turn in the office next door and this thing here is a declaration of",
    "start": "960279",
    "end": "968050"
  },
  {
    "text": "a behavior so it says these two people make a decision and the decision here is",
    "start": "968050",
    "end": "975160"
  },
  {
    "text": "essentially a yes/no a boolean right do we do this or don't we do this so it's the simplest decision you can make you",
    "start": "975160",
    "end": "980500"
  },
  {
    "text": "don't have to agree on a value or something or a prize only say yes no and",
    "start": "980500",
    "end": "985540"
  },
  {
    "text": "then you can specify what the procedure should be to make this decision should it be a unanimous decision or a majority",
    "start": "985540",
    "end": "992950"
  },
  {
    "text": "decision or even you know some custom thing where I could say that it doesn't",
    "start": "992950",
    "end": "998500"
  },
  {
    "text": "matter as long as Marcus agrees it's voted for it Marcus is always a good guy all right",
    "start": "998500",
    "end": "1003570"
  },
  {
    "text": "you'll notice and whatever then you can say that there needs to be a minimum",
    "start": "1003570",
    "end": "1011010"
  },
  {
    "text": "turnout like they have to be X number of people or all who actually vote right",
    "start": "1011010",
    "end": "1019459"
  },
  {
    "text": "then you can specify a time limit like this decision has to be made in X amount",
    "start": "1019459",
    "end": "1025740"
  },
  {
    "text": "of time if it isn't made then the decision is invalid by default false all",
    "start": "1025740",
    "end": "1032610"
  },
  {
    "text": "right you can say whether a vote that somebody did is revocable right I'm",
    "start": "1032610",
    "end": "1039240"
  },
  {
    "text": "voguing voting for that decision can i within the time limit if any say oh",
    "start": "1039240",
    "end": "1045569"
  },
  {
    "text": "sorry I didn't vote let's let's revoke revoke this and this is a again a",
    "start": "1045569",
    "end": "1051200"
  },
  {
    "text": "declarative specification of the expected behavior and implementing this",
    "start": "1051200",
    "end": "1057300"
  },
  {
    "text": "procedurally in any language I mean it's not rocket science but it's it is",
    "start": "1057300",
    "end": "1062970"
  },
  {
    "text": "error-prone I mean these interactions between time limits and majorities and stuff it's not totally trivial and so",
    "start": "1062970",
    "end": "1070559"
  },
  {
    "text": "now we can play with this we can create instance of one of these guys for example here and let's open it in the",
    "start": "1070559",
    "end": "1077540"
  },
  {
    "text": "the repple right so that's the interactive repple here is the instance",
    "start": "1077540",
    "end": "1083309"
  },
  {
    "text": "of this unanimous vote I can wrap that into a live object which gives me a more",
    "start": "1083309",
    "end": "1089070"
  },
  {
    "text": "structured view of the internal state of this thing so I can see that it's a",
    "start": "1089070",
    "end": "1094470"
  },
  {
    "text": "multi-party boolean David this is a decision value nobody has voted yet and",
    "start": "1094470",
    "end": "1099600"
  },
  {
    "text": "so the decision has not yet been taken so let's go here and say ok let's grab this value and let's see what this",
    "start": "1099600",
    "end": "1106080"
  },
  {
    "text": "offers ok it offers me to vote and who should do the vote Marx is always a good",
    "start": "1106080",
    "end": "1111570"
  },
  {
    "text": "idea so I can now see that somebody has voted and this is kind of the internal",
    "start": "1111570",
    "end": "1117210"
  },
  {
    "text": "ID of molecules I can also show the diffs so I can see which of these internal values has changed and of",
    "start": "1117210",
    "end": "1123090"
  },
  {
    "text": "course the decision has not yet been taken because if you go back here you can see it's a unanimous decision and",
    "start": "1123090",
    "end": "1129000"
  },
  {
    "text": "there are two people and so obviously I also have with the other guy bound right so I also have to do a dollar one vote",
    "start": "1129000",
    "end": "1136250"
  },
  {
    "text": "bound and now you can see the decision has been taken now if you you know put time limits and",
    "start": "1136250",
    "end": "1145830"
  },
  {
    "text": "stuff on it here for example then you will get",
    "start": "1145830",
    "end": "1151049"
  },
  {
    "text": "things fail if you do the vote after the time has expired I'm not going to demo this so this is kind of the the totally",
    "start": "1151049",
    "end": "1159000"
  },
  {
    "text": "basic thing you can do with these multi-party boolean decisions so far so",
    "start": "1159000",
    "end": "1166470"
  },
  {
    "text": "good right of course it becomes much more interesting if these somehow are",
    "start": "1166470",
    "end": "1173460"
  },
  {
    "text": "part of a larger yeah talking about larger I guess and I should make the",
    "start": "1173460",
    "end": "1179700"
  },
  {
    "text": "font larger",
    "start": "1179700",
    "end": "1183380"
  },
  {
    "text": "so you might want to read this paragraph",
    "start": "1189220",
    "end": "1194100"
  },
  {
    "text": "a great moment for video but me reading it wouldn't be any better",
    "start": "1208340",
    "end": "1214010"
  },
  {
    "text": "so this is a slightly less trivial collaborative decision right so people",
    "start": "1214010",
    "end": "1219980"
  },
  {
    "text": "are trying to decide should we sell something or not and then you know there's various details about this and",
    "start": "1219980",
    "end": "1226250"
  },
  {
    "text": "so what this example does is it combines you know a functional program here a",
    "start": "1226250",
    "end": "1235700"
  },
  {
    "start": "1227000",
    "end": "1634000"
  },
  {
    "text": "bunch of helper functions with some of these declarative decisions and a state",
    "start": "1235700",
    "end": "1245600"
  },
  {
    "text": "machine right so here's a state machine and so the kind of top level interface how people interact with this running",
    "start": "1245600",
    "end": "1255140"
  },
  {
    "text": "contract is by sending events into the state machine and we all know how state machine works traitement state machines",
    "start": "1255140",
    "end": "1260270"
  },
  {
    "text": "work so an event comes in this triggers a transition but the transition only fires if a guard condition is also true",
    "start": "1260270",
    "end": "1267500"
  },
  {
    "text": "right and then we're in a new state and we can react to new events and so as you can see here you know we start with",
    "start": "1267500",
    "end": "1275690"
  },
  {
    "text": "these products right so we have a bunch of offers which is a collection of",
    "start": "1275690",
    "end": "1280970"
  },
  {
    "text": "offers and offer points to a product and has a prize and then here is the",
    "start": "1280970",
    "end": "1287690"
  },
  {
    "text": "interesting thing because for each of the offers we create an instance of one",
    "start": "1287690",
    "end": "1294380"
  },
  {
    "text": "of these declarative you know boolean decisions so we kind of embed one of",
    "start": "1294380",
    "end": "1300140"
  },
  {
    "text": "these or an instance of each of these for all the things you want to sell in",
    "start": "1300140",
    "end": "1305240"
  },
  {
    "text": "that state machine so now the state machine kind of has a global state for",
    "start": "1305240",
    "end": "1310399"
  },
  {
    "text": "the selling of all products but internally it manages one of these declarative boolean decisions for each",
    "start": "1310399",
    "end": "1317120"
  },
  {
    "text": "thing we want to sell and again always think about implementing this manually it becomes and it's obviously not not",
    "start": "1317120",
    "end": "1324830"
  },
  {
    "text": "rocket science but it's it is error-prone so you know for example when",
    "start": "1324830",
    "end": "1331039"
  },
  {
    "text": "we want to sell something then we look here for example we vote for you know",
    "start": "1331039",
    "end": "1338299"
  },
  {
    "text": "there's a you sent that you want to vote this product and then we grab the sales decision",
    "start": "1338299",
    "end": "1346430"
  },
  {
    "text": "object from map and register the vote right that's what we did in the repple",
    "start": "1346430",
    "end": "1352070"
  },
  {
    "text": "for the atomic elementary decision before and then we check if for a given",
    "start": "1352070",
    "end": "1359160"
  },
  {
    "text": "[Music] if all sells if if we have decided for",
    "start": "1359160",
    "end": "1364220"
  },
  {
    "text": "all products that we want to sell them then we go into the selling state where we then expect the buy event and then we",
    "start": "1364220",
    "end": "1370400"
  },
  {
    "text": "check if the price is high enough stuff like that so there's two things two things to learn first of all expressing",
    "start": "1370400",
    "end": "1375440"
  },
  {
    "text": "this as a state machine rather than procedural code is already in my opinion a step forward because running processes",
    "start": "1375440",
    "end": "1381350"
  },
  {
    "text": "are state machines and embedding these decision objects makes the element",
    "start": "1381350",
    "end": "1387800"
  },
  {
    "text": "elementary decisions much easier to implement I want to show you one more thing let's say you want to do something",
    "start": "1387800",
    "end": "1397580"
  },
  {
    "text": "similar but you are worried that people are going to game you're going to game",
    "start": "1397580",
    "end": "1408010"
  },
  {
    "text": "your your process Gaming means for example a civil attack where you create",
    "start": "1408010",
    "end": "1414950"
  },
  {
    "text": "any number of additional identities and then you know because you control all of them you can now just create a majority",
    "start": "1414950",
    "end": "1420800"
  },
  {
    "text": "by having these new guys that you just created vote for you right so one way of",
    "start": "1420800",
    "end": "1426320"
  },
  {
    "text": "solving that problem is to for example limit the rate at which you create new",
    "start": "1426320",
    "end": "1432140"
  },
  {
    "text": "identities or more generally if you think about this decision here you can limit the rate at which you can vote all",
    "start": "1432140",
    "end": "1439580"
  },
  {
    "text": "right so you can't spam it and you know create a whole bunch of identities spend with Plus votes and then you win you",
    "start": "1439580",
    "end": "1445850"
  },
  {
    "text": "can't do that if you limit this and the way this is done here is that you",
    "start": "1445850",
    "end": "1451010"
  },
  {
    "text": "whereas the rate thing",
    "start": "1451010",
    "end": "1454180"
  },
  {
    "text": "looking for the rate can't find the my own code yeah yeah here here you go so",
    "start": "1463570",
    "end": "1470110"
  },
  {
    "text": "you can limit the rate to three like invocations of any of these transitions",
    "start": "1470110",
    "end": "1478690"
  },
  {
    "text": "per like this is a virtual time Union right three per thousand two thousand whatever lots at a time and if more",
    "start": "1478690",
    "end": "1487600"
  },
  {
    "text": "votes come in the thing returns an error and doesn't do anything okay similarly",
    "start": "1487600",
    "end": "1493600"
  },
  {
    "text": "here many yeah collaborative games this",
    "start": "1493600",
    "end": "1500740"
  },
  {
    "text": "is a collaborative game rely on taking turns right so you have a bunch of",
    "start": "1500740",
    "end": "1506640"
  },
  {
    "text": "participants and then for the game to work for example a bidding process to work you know player one starts then",
    "start": "1506640",
    "end": "1514690"
  },
  {
    "text": "player two gets to turn three four and then you start from the beginning you can't just you know vote all the time",
    "start": "1514690",
    "end": "1522750"
  },
  {
    "text": "one person because the poll point of bidding process is that person X react",
    "start": "1522750",
    "end": "1528700"
  },
  {
    "text": "to the bit of person Y right so you have some ordering and so again you can do",
    "start": "1528700",
    "end": "1533830"
  },
  {
    "text": "this declaratively you can simply state the state you can simply specify that in",
    "start": "1533830",
    "end": "1538930"
  },
  {
    "text": "this state bidding the events that come in have to be taken like in turns by",
    "start": "1538930",
    "end": "1548380"
  },
  {
    "text": "whoever is sending these things so in this case it just says take turns for the players which is just a list of",
    "start": "1548380",
    "end": "1554410"
  },
  {
    "text": "identities who contribute in this thing here and it's all that so it's really a",
    "start": "1554410",
    "end": "1561070"
  },
  {
    "text": "strict ordering and there is a timeout so if that's the other thing if if if there is a required ordering through",
    "start": "1561070",
    "end": "1567700"
  },
  {
    "text": "taking turns and somebody just doesn't do anything this is also a denial of service attack because now nobody can do",
    "start": "1567700",
    "end": "1573670"
  },
  {
    "text": "anything because I should vote but I don't right so you always have to specify timeout",
    "start": "1573670",
    "end": "1578740"
  },
  {
    "text": "like if you don't vote in this timeout you're either skipped or you kind of boot it out of the whole story and this",
    "start": "1578740",
    "end": "1584350"
  },
  {
    "text": "is all expressed declaratively here on the level of state and without going",
    "start": "1584350",
    "end": "1590080"
  },
  {
    "text": "into detail and showing you all these test cases you know if you don't stick",
    "start": "1590080",
    "end": "1595390"
  },
  {
    "text": "to these since then the contract fails and these things are all based on various",
    "start": "1595390",
    "end": "1602580"
  },
  {
    "text": "discussions we've had with blockchain people because these are the kinds of",
    "start": "1602580",
    "end": "1607890"
  },
  {
    "text": "patterns you typically do implement in smart contracts if they should actually",
    "start": "1607890",
    "end": "1613140"
  },
  {
    "text": "act as a contract between multiple parties and again doing this manually by writing it in a procedural or functional",
    "start": "1613140",
    "end": "1619769"
  },
  {
    "text": "programming language is not the way to go I think I also don't say that this",
    "start": "1619769",
    "end": "1626130"
  },
  {
    "text": "particular language is the you know best possible solution but I think it has a couple of ideas where this could go",
    "start": "1626130",
    "end": "1634190"
  },
  {
    "start": "1634000",
    "end": "1909000"
  },
  {
    "text": "so let me go back to my remaining slides",
    "start": "1634190",
    "end": "1640460"
  },
  {
    "text": "this should be disabled I don't know why I'm seeing this this is just what I just talked about for the slides later so I",
    "start": "1644990",
    "end": "1652529"
  },
  {
    "text": "have another thing I want to show you this is a language that my lawyer friend implemented he called a math in closing",
    "start": "1652529",
    "end": "1660419"
  },
  {
    "text": "he has been a general counsel of musk so high-level lawyer in the logistics",
    "start": "1660419",
    "end": "1666809"
  },
  {
    "text": "industry he at some point quit and decided to learn closure which is why you'll see many irrelevant parentheses",
    "start": "1666809",
    "end": "1673889"
  },
  {
    "text": "on the next slide sorry had to say this so he he has to actually we did several",
    "start": "1673889",
    "end": "1681330"
  },
  {
    "text": "prototypes over the last few years and the most recent one that he did alone is what I'm going to show you it's we",
    "start": "1681330",
    "end": "1688470"
  },
  {
    "text": "started with a chart or contract for ships because that's what he did when he was still at Merck and these things are",
    "start": "1688470",
    "end": "1694080"
  },
  {
    "text": "really interesting but that's a different story is full of strange clauses and so he essentially build",
    "start": "1694080",
    "end": "1701279"
  },
  {
    "text": "internal closure DSL meaning if you will",
    "start": "1701279",
    "end": "1707190"
  },
  {
    "text": "way to construct an AST of a model because that's what you do here it's",
    "start": "1707190",
    "end": "1712350"
  },
  {
    "text": "inspired by one of these papers I mentioned before this poet's idea from Simon Peyton Jones and this guy Abel and",
    "start": "1712350",
    "end": "1719429"
  },
  {
    "text": "there is also a very interesting guy called Ken Adams he wrote a book on how",
    "start": "1719429",
    "end": "1724679"
  },
  {
    "text": "you express contracts precisely him did a whole domain analysis about concepts in",
    "start": "1724679",
    "end": "1729880"
  },
  {
    "text": "contracts really cool stuff and he integrated some of this stuff as well and he built again a fundamental as it",
    "start": "1729880",
    "end": "1737500"
  },
  {
    "text": "seems language n is missing and an interpreter to play with his stuff the",
    "start": "1737500",
    "end": "1744580"
  },
  {
    "text": "syntax of the language of course is not the final version because it's actually closure stuff I think it's actually",
    "start": "1744580",
    "end": "1751750"
  },
  {
    "text": "nothing of course disagrees I hope he isn't watching so anyway what you can do",
    "start": "1751750",
    "end": "1757360"
  },
  {
    "text": "is you can declare obligations and then you can specify for example an obligation that you know the borrower",
    "start": "1757360",
    "end": "1763810"
  },
  {
    "text": "borrower borrower is obliged to do something to the lender in this case it's an action which is to make a",
    "start": "1763810",
    "end": "1769630"
  },
  {
    "text": "payment of $1,000 and there's a description and then there's a time",
    "start": "1769630",
    "end": "1774940"
  },
  {
    "text": "window between which dates this has to happen and so in other words he implemented this notion of you know",
    "start": "1774940",
    "end": "1782310"
  },
  {
    "text": "obligation permission time window event stuff like that and then he implemented",
    "start": "1782310",
    "end": "1788020"
  },
  {
    "text": "a runtime system in a web application where you get representation of this",
    "start": "1788020",
    "end": "1794740"
  },
  {
    "text": "tree in a more or less legible form here you can see where these strings go to right they become these descriptions",
    "start": "1794740",
    "end": "1801160"
  },
  {
    "text": "here and then on the right side you have the state of the contract which is essentially a lock of the events that",
    "start": "1801160",
    "end": "1807970"
  },
  {
    "text": "happened right so it's like a replay lock thing to get to a particular actual",
    "start": "1807970",
    "end": "1813370"
  },
  {
    "text": "state and then you can unfortunately that's outside you can submit new events",
    "start": "1813370",
    "end": "1820540"
  },
  {
    "text": "and you can see how the state of the contract changes right and so we did",
    "start": "1820540",
    "end": "1825640"
  },
  {
    "text": "another prototype last year where we connected something like that to an actual document like we loaded the",
    "start": "1825640",
    "end": "1830800"
  },
  {
    "text": "contract document into MPs we highlighted certain parts you know where it said you have to pay 5,000 euros - we",
    "start": "1830800",
    "end": "1838240"
  },
  {
    "text": "removed the 5,000 made that kind of a template slot gave that a variable name and then use that variable in one of",
    "start": "1838240",
    "end": "1843550"
  },
  {
    "text": "these algorithmic descriptions so you have full traceability from the original textual contract to the executable thing",
    "start": "1843550",
    "end": "1848680"
  },
  {
    "text": "in your tool so without going into much more detail this could be the starting",
    "start": "1848680",
    "end": "1856450"
  },
  {
    "text": "point of a much more declarative and therefore end user friendly language for expressing contracts again",
    "start": "1856450",
    "end": "1863530"
  },
  {
    "text": "the particular syntax probably needs a little bit of polishing if you want to actually show this to lawyers other than",
    "start": "1863530",
    "end": "1869289"
  },
  {
    "text": "Martine I don't know how many lawyers there are who speak closure but that doesn't matter right I mean the point is",
    "start": "1869289",
    "end": "1875650"
  },
  {
    "text": "the concepts that are in there and what he's doing right now is he's taking different contracts he has from",
    "start": "1875650",
    "end": "1880720"
  },
  {
    "text": "different places and contexts and trying to represent them there and I think that's really interesting stuff and something like that could be mapped on",
    "start": "1880720",
    "end": "1887500"
  },
  {
    "text": "top of the empl I showed you before because then you get all these you know",
    "start": "1887500",
    "end": "1892809"
  },
  {
    "text": "for example gameplay guarantees and the low-level debug ability from that system",
    "start": "1892809",
    "end": "1898030"
  },
  {
    "text": "and here you have the declarative stuff on top and so we are actually looking",
    "start": "1898030",
    "end": "1903700"
  },
  {
    "text": "into somehow fitting that into that research project so we can actually",
    "start": "1903700",
    "end": "1908770"
  },
  {
    "text": "implement this so a few more words about the tooling the stuff I had shown you",
    "start": "1908770",
    "end": "1916450"
  },
  {
    "text": "before again this Colonel F stuff is built on top of MPs MPs is a language workbench",
    "start": "1916450",
    "end": "1923520"
  },
  {
    "text": "should go here MPs is a language workbench from JetBrains who was in my",
    "start": "1923520",
    "end": "1929799"
  },
  {
    "text": "language talk yesterday all right so the next two minutes are going to be boring",
    "start": "1929799",
    "end": "1935490"
  },
  {
    "text": "for me too because I've said that many times anyway a language workbench is a",
    "start": "1935490",
    "end": "1942250"
  },
  {
    "text": "tool that lets you quickly allow lets you quickly build new languages and a",
    "start": "1942250",
    "end": "1947650"
  },
  {
    "text": "particular benefit of MPs is that it supports language modularity so you can",
    "start": "1947650",
    "end": "1954730"
  },
  {
    "text": "take an existing language like for example Colonel F and add stuff on top of it without changing the language",
    "start": "1954730",
    "end": "1959919"
  },
  {
    "text": "itself so these additions like these boxes with declarative contract stuff in it they are a modular non invasive",
    "start": "1959919",
    "end": "1967390"
  },
  {
    "text": "extension of the basic functional language coalesce and that's nice because you can actually literally grow",
    "start": "1967390",
    "end": "1973539"
  },
  {
    "text": "a language stack from low-level functional to you know various intermediate levels until you end up in",
    "start": "1973539",
    "end": "1978940"
  },
  {
    "text": "a version of the language that martine built essentially mps also supports",
    "start": "1978940",
    "end": "1985179"
  },
  {
    "text": "various different concrete's and taxes in particular tables and so if you look",
    "start": "1985179",
    "end": "1990490"
  },
  {
    "text": "at many practical contracts they're full of tables like if this time you know expires you've to pay X amount and stuff",
    "start": "1990490",
    "end": "1996590"
  },
  {
    "text": "that if you buy a big ship you have to pay more so tabular stuff actually",
    "start": "1996590",
    "end": "2001720"
  },
  {
    "text": "represented as tables visually is very useful this Colonel F language is",
    "start": "2001720",
    "end": "2008529"
  },
  {
    "text": "basically a functional language as I said we use it as kind of the kernel the core of various deals else we've been",
    "start": "2008529",
    "end": "2015220"
  },
  {
    "text": "building over the years and I don't have to mention all the features here but",
    "start": "2015220",
    "end": "2021520"
  },
  {
    "text": "it's has some things of closure for example when we deal with state closure has these refs as a way of kind of",
    "start": "2021520",
    "end": "2028120"
  },
  {
    "text": "defining boxes for mutable state we do that too we have number types which in",
    "start": "2028120",
    "end": "2035230"
  },
  {
    "text": "the type system track number ranges so you can specify a number between x and y",
    "start": "2035230",
    "end": "2040450"
  },
  {
    "text": "and if you compute something that's outside these bounds you get a static error which is very useful for a kind of",
    "start": "2040450",
    "end": "2046299"
  },
  {
    "text": "business DSL kind of things like contracts because well it's it's a kind of error normal people care about right",
    "start": "2046299",
    "end": "2055388"
  },
  {
    "text": "so I should have made this a different order there is one more thing because I",
    "start": "2055389",
    "end": "2063190"
  },
  {
    "start": "2059000",
    "end": "2354000"
  },
  {
    "text": "talked about how a language like in PCL or Martines hyper CSL I think it's",
    "start": "2063190",
    "end": "2070210"
  },
  {
    "text": "called how that helps with ensuring the functional correctness and avoiding kind",
    "start": "2070210",
    "end": "2076419"
  },
  {
    "text": "of logical loopholes because it's easier to express things but of course there is this other problem that if you actually",
    "start": "2076419",
    "end": "2082570"
  },
  {
    "text": "deploy this to a blockchain or for that matter any other execution infrastructure then you have the problem",
    "start": "2082570",
    "end": "2090398"
  },
  {
    "text": "that the verification becomes an issue right so you have to be able to trust that infrastructure that it kind of",
    "start": "2090399",
    "end": "2096190"
  },
  {
    "text": "faithfully execute you're now guaranteed to be correct contract so this is not",
    "start": "2096190",
    "end": "2102970"
  },
  {
    "text": "necessarily my specialty but I wanted to point out a couple of things for example there is an effort by grigory risu also",
    "start": "2102970",
    "end": "2112660"
  },
  {
    "text": "and his colleagues to implement or describe the complete semantics of the etherium virtual machine in k.k is a",
    "start": "2112660",
    "end": "2119619"
  },
  {
    "text": "specification framework semantic specification framework so you can prove that there are no level no low-level",
    "start": "2119619",
    "end": "2125920"
  },
  {
    "text": "errors in the VM itself of course right now the VM isn't like generated from that specification",
    "start": "2125920",
    "end": "2132340"
  },
  {
    "text": "so that there's that loophole but I just recently read that they are doing this ela thing probably pronounced",
    "start": "2132340",
    "end": "2139330"
  },
  {
    "text": "differently where they are trying to build a let's say more efficient well",
    "start": "2139330",
    "end": "2145090"
  },
  {
    "text": "they're going to describe the semantics in a way that allows the generation of a more efficient implementation so that",
    "start": "2145090",
    "end": "2150310"
  },
  {
    "text": "you maybe do have a kind of mechanical connection between the semantic specification and the execution itself",
    "start": "2150310",
    "end": "2156790"
  },
  {
    "text": "of course this is not something well I should say differently I think it's",
    "start": "2156790",
    "end": "2162460"
  },
  {
    "text": "great marketing for the verification community to hop on top of the blockchain thing right because of course",
    "start": "2162460",
    "end": "2169510"
  },
  {
    "text": "these guys have built K a while ago and they've verified all kinds of things nobody cared about and now they are",
    "start": "2169510",
    "end": "2176620"
  },
  {
    "text": "verifying things everybody cares about and so it is for them I think a very",
    "start": "2176620",
    "end": "2181990"
  },
  {
    "text": "welcomed opportunity to kind of use their formal stuff in practice which of",
    "start": "2181990",
    "end": "2187240"
  },
  {
    "text": "course doesn't solve their problems right so generating efficient implementations from formal semantics specifications isn't something that done",
    "start": "2187240",
    "end": "2193540"
  },
  {
    "text": "like all the time so there are still challenges there there's also interesting stuff going on",
    "start": "2193540",
    "end": "2198640"
  },
  {
    "text": "in Delft and professors group and then there is for example another thing that",
    "start": "2198640",
    "end": "2204010"
  },
  {
    "text": "the ERC 20 token has been formally verified and there is things going on in",
    "start": "2204010",
    "end": "2209950"
  },
  {
    "text": "the etherium community of formally verifying solidity contract essentially also by integrating solvers into",
    "start": "2209950",
    "end": "2215650"
  },
  {
    "text": "solidity and certainly very very verifying certain aspects of the definition so again if we go back to",
    "start": "2215650",
    "end": "2222310"
  },
  {
    "text": "this picture then the lower level once that is really verified and kind of",
    "start": "2222310",
    "end": "2228640"
  },
  {
    "text": "connected to implementation connected to the specification that's the verification part and the languages I",
    "start": "2228640",
    "end": "2236410"
  },
  {
    "text": "showed before they help with validation right so it's kind of the summary of",
    "start": "2236410",
    "end": "2241600"
  },
  {
    "text": "course I had to add this little remark that this whole verification story is",
    "start": "2241600",
    "end": "2247750"
  },
  {
    "text": "really an old story right I mean very very kind verifying the correctness of stuff it's done all the time in",
    "start": "2247750",
    "end": "2253360"
  },
  {
    "text": "satellites aircraft pacemakers nuclear power plants and I find it funny when I",
    "start": "2253360",
    "end": "2260380"
  },
  {
    "text": "heard you know people in the blockchain community that now that actual value is",
    "start": "2260380",
    "end": "2267430"
  },
  {
    "text": "associated with programs we have to start caring about correctness and this",
    "start": "2267430",
    "end": "2273230"
  },
  {
    "text": "really shows let's say a rather limited view of where software has been used in",
    "start": "2273230",
    "end": "2279410"
  },
  {
    "text": "the past let's put it this way we recently built something in the in the medical space where we use this whole",
    "start": "2279410",
    "end": "2285770"
  },
  {
    "text": "DSL story to generate code that deals with diagnostics and medicine",
    "start": "2285770",
    "end": "2293800"
  },
  {
    "text": "prescriptions and we did a systematic risk analysis and long story short this",
    "start": "2293800",
    "end": "2299840"
  },
  {
    "text": "led to a relatively complicated architecture for generating stuff and",
    "start": "2299840",
    "end": "2306020"
  },
  {
    "text": "you know measuring coverage and having different generators in two different runtimes for redundancy and stuff like",
    "start": "2306020",
    "end": "2311570"
  },
  {
    "text": "that we did get phase one of two FDA approvals so we're on the on a good path",
    "start": "2311570",
    "end": "2318080"
  },
  {
    "text": "here so maybe approaches like this could help also in the blockchain space so",
    "start": "2318080",
    "end": "2324560"
  },
  {
    "text": "instead of verifying everything formally you do things like measuring test coverage running the same contract on",
    "start": "2324560",
    "end": "2331130"
  },
  {
    "text": "the EVM and let's say in an interpreter in the IDE like the one I've shown and",
    "start": "2331130",
    "end": "2336740"
  },
  {
    "text": "if they behave the same way you have certain you know probabilities that there aren't any mistakes because you",
    "start": "2336740",
    "end": "2342080"
  },
  {
    "text": "did things twice in two different infrastructure stuff like that there's a really really really big community of",
    "start": "2342080",
    "end": "2347690"
  },
  {
    "text": "people who try to get backs out of software so it's I think it's important to kind of be aware of this all right",
    "start": "2347690",
    "end": "2355310"
  },
  {
    "start": "2354000",
    "end": "2854000"
  },
  {
    "text": "wrap up there is a little bit of additional reading regarding my",
    "start": "2355310",
    "end": "2360920"
  },
  {
    "text": "particular stuff like kernel F and NPS and this in PCL I did to medium posts",
    "start": "2360920",
    "end": "2366650"
  },
  {
    "text": "that described all of this stuff and then we have an actual summary just",
    "start": "2366650",
    "end": "2371660"
  },
  {
    "text": "to recap in my opinion contracts like any other software must be functionally correct but because usually it's lawyer",
    "start": "2371660",
    "end": "2379490"
  },
  {
    "text": "kind of people who care about this stuff the languages need to be accessible to business people and that's where the DSL",
    "start": "2379490",
    "end": "2384920"
  },
  {
    "text": "story comes in we need to integrate verification tools both on the functional level to find logic errors by",
    "start": "2384920",
    "end": "2391940"
  },
  {
    "text": "proving their absence that was a nonsense sentence but I guess you get the point",
    "start": "2391940",
    "end": "2397800"
  },
  {
    "text": "and also under on the level below to verify the infrastructure we want to give these lawyers abilities to simulate",
    "start": "2397800",
    "end": "2404760"
  },
  {
    "text": "these contracts play through them you know do what if analysis because turns out that non-programmers for them it's",
    "start": "2404760",
    "end": "2411930"
  },
  {
    "text": "much easier to understand something by playing with it then by looking at code and you know",
    "start": "2411930",
    "end": "2416970"
  },
  {
    "text": "visualizing what we'll do it's probably also true for programmers but they don't admit it also that's what debuggers do",
    "start": "2416970",
    "end": "2423270"
  },
  {
    "text": "and then deployment to block chains is something that gives you non-functional",
    "start": "2423270",
    "end": "2428940"
  },
  {
    "text": "properties for your functionally correct contract and other deployments are also",
    "start": "2428940",
    "end": "2434010"
  },
  {
    "text": "useful for example deployments that give you a little bit reduced security but maybe higher throughput and one",
    "start": "2434010",
    "end": "2440970"
  },
  {
    "text": "particular example here could be things like light lightening networks on etherium where security is a bit reduced",
    "start": "2440970",
    "end": "2446820"
  },
  {
    "text": "because you don't commit everything to the global blockchain in real time but on the other hand you can do stuff that",
    "start": "2446820",
    "end": "2452280"
  },
  {
    "text": "you know doesn't every transaction cost you an arm and a leg and takes forever all right I have no idea about the time",
    "start": "2452280",
    "end": "2459240"
  },
  {
    "text": "but I'm done ok questions so be at the",
    "start": "2459240",
    "end": "2470280"
  },
  {
    "text": "app we have no question so ok I'm gonna answer that",
    "start": "2470280",
    "end": "2475880"
  },
  {
    "text": "great talk thank you and my understanding is a little bit fun de",
    "start": "2478190",
    "end": "2483600"
  },
  {
    "text": "mental or missing or misunderstanding or what I'm missing is a link to the to the",
    "start": "2483600",
    "end": "2489270"
  },
  {
    "text": "real world so from your examples this is the input to all this contract so this executable",
    "start": "2489270",
    "end": "2496880"
  },
  {
    "text": "programs is booting but what about contracts that need as a kind of",
    "start": "2496880",
    "end": "2504060"
  },
  {
    "text": "information yeah for example I have a contract for work and I clean your house and then I",
    "start": "2504060",
    "end": "2510150"
  },
  {
    "text": "get money how do you execute such a thing that's a fundamental problem of all executable law including block",
    "start": "2510150",
    "end": "2515940"
  },
  {
    "text": "chains right you as soon as your as you connect to the real world you know you need what they call an Oracle right some",
    "start": "2515940",
    "end": "2522690"
  },
  {
    "text": "kind of proxy that somehow says something happened in the real world and",
    "start": "2522690",
    "end": "2527780"
  },
  {
    "text": "ideally for certain things like for example a payment it your bank would give you like an API",
    "start": "2527780",
    "end": "2533430"
  },
  {
    "text": "call once the transaction has happened then this particular thing could be automated somehow right but like you",
    "start": "2533430",
    "end": "2540720"
  },
  {
    "text": "know if the contract says the ship has to be delivered to the harbor until X somebody's going to take a picture and",
    "start": "2540720",
    "end": "2546720"
  },
  {
    "text": "say it's here right so this is a fundamental problem which is why many of",
    "start": "2546720",
    "end": "2552150"
  },
  {
    "text": "the blockchain examples and kind of sweet spots try to deal with things that are exclusively virtual where you can do",
    "start": "2552150",
    "end": "2558119"
  },
  {
    "text": "everything on the computer where you can do the checking of presence of whether something happened all in the computer which of course limits the usefulness so",
    "start": "2558119",
    "end": "2565410"
  },
  {
    "text": "at some point you have to trust some kind of proxy observer of the real world okay",
    "start": "2565410",
    "end": "2571140"
  },
  {
    "text": "thank you I have a feeling it there as",
    "start": "2571140",
    "end": "2580830"
  },
  {
    "text": "you as you showed in your picture there are multiple layers the whole thing do",
    "start": "2580830",
    "end": "2585840"
  },
  {
    "text": "you plan to have an another layer as opposed to the MPS based language on top of the other stuff down below does that",
    "start": "2585840",
    "end": "2592950"
  },
  {
    "text": "make it does it even make sense you want to get rid of MPs yes yeah no okay now I mean seriously I mean to be a",
    "start": "2592950",
    "end": "2601680"
  },
  {
    "text": "little bit more serious although there is no reason to want to get rid to every member so um this is still playground",
    "start": "2601680",
    "end": "2610320"
  },
  {
    "text": "experimentation stage and for that MPs is just perfect but of course when I mentioned in the beginning that the",
    "start": "2610320",
    "end": "2617520"
  },
  {
    "text": "contract definition phase is where multiple parties kind of haggle and you know collaborate you need something that",
    "start": "2617520",
    "end": "2623010"
  },
  {
    "text": "is collaborative so it needs to be on the browser which is why either you need something like MPs on the browser which",
    "start": "2623010",
    "end": "2629760"
  },
  {
    "text": "we're building different story or you need a different technology which is why Martin implemented all of this enclosure",
    "start": "2629760",
    "end": "2635250"
  },
  {
    "text": "and you know closure script blah blah blah browser web front-end so it's just different goals it's clear that for",
    "start": "2635250",
    "end": "2642030"
  },
  {
    "text": "something like that to go into production it's not going to be MPs right but that's not my goal right now",
    "start": "2642030",
    "end": "2649700"
  },
  {
    "text": "okay anybody else",
    "start": "2651530",
    "end": "2655640"
  },
  {
    "text": "yeah yeah yeah yeah so so just to repeat",
    "start": "2675180",
    "end": "2687960"
  },
  {
    "text": "the question for the video I guess what do I think about languages that are",
    "start": "2687960",
    "end": "2693620"
  },
  {
    "text": "found assigned you correctly closer to kind of prose text actual readable",
    "start": "2693620",
    "end": "2698910"
  },
  {
    "text": "sentences and I think this is a this difficult for several reasons if you let",
    "start": "2698910",
    "end": "2705540"
  },
  {
    "text": "people just write text and try to parse out the semantics this is tough I mean",
    "start": "2705540",
    "end": "2711660"
  },
  {
    "text": "this is prose analysis semantic recovery specifically for contracts that's a bad",
    "start": "2711660",
    "end": "2716760"
  },
  {
    "text": "idea because you want to be sure what something means and so that's not the way to go so you'd have to restrict the kind of",
    "start": "2716760",
    "end": "2722520"
  },
  {
    "text": "sentences people can write you have to give a very narrow or well-defined structured language and there's a whole",
    "start": "2722520",
    "end": "2728370"
  },
  {
    "text": "community in the requirements space for a constrained natural language would do",
    "start": "2728370",
    "end": "2733560"
  },
  {
    "text": "exactly that for requirements which is a superset of these kind of contracts so I think that could work we have for",
    "start": "2733560",
    "end": "2741360"
  },
  {
    "text": "example just one little example in kernel F we can associate sentence",
    "start": "2741360",
    "end": "2747300"
  },
  {
    "text": "fragments with functions so instead of calling function add parens a comma B",
    "start": "2747300",
    "end": "2753020"
  },
  {
    "text": "you can write add the numbers a and B and then when you call it you write this",
    "start": "2753020",
    "end": "2759090"
  },
  {
    "text": "little fragment and so this makes function calls read like a powerful",
    "start": "2759090",
    "end": "2764160"
  },
  {
    "text": "sentence right that's only one little step in this direction so I think this is feasible but it it it it the",
    "start": "2764160",
    "end": "2771990"
  },
  {
    "text": "questions how far you go I've seen languages where when you compare two numbers you actually write blah blah",
    "start": "2771990",
    "end": "2779010"
  },
  {
    "text": "blah is greater than blah blah blah instead of using the symbol and so I",
    "start": "2779010",
    "end": "2784650"
  },
  {
    "text": "think there needs to be a good compromise between templated natural text and symbolic ways of describing",
    "start": "2784650",
    "end": "2791580"
  },
  {
    "text": "things that we all know from grade school essentially so the Dutch tax",
    "start": "2791580",
    "end": "2798060"
  },
  {
    "text": "agency uses a very much sentence reading language for describing texts and public",
    "start": "2798060",
    "end": "2804840"
  },
  {
    "text": "benefit rules and it works but it's highly structured you can only only you can basically express nested",
    "start": "2804840",
    "end": "2811990"
  },
  {
    "text": "if/then/else decisions right I am not so sure how well this scales to all the use",
    "start": "2811990",
    "end": "2817540"
  },
  {
    "text": "cases we need on the other hand if you are able to formalize contracts into a",
    "start": "2817540",
    "end": "2823300"
  },
  {
    "text": "limited language from permission and obligation and time window and event you",
    "start": "2823300",
    "end": "2828970"
  },
  {
    "text": "know like I don't know 15 or 20 language constructs then of course you could provide a prose text like syntax for",
    "start": "2828970",
    "end": "2835809"
  },
  {
    "text": "those so certainly worth experimenting all right all right",
    "start": "2835809",
    "end": "2842319"
  },
  {
    "text": "cops'll thank you very much Marcus sure Thanks [Applause]",
    "start": "2842319",
    "end": "2851390"
  }
]