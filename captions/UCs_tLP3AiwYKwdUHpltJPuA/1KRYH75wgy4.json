[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "what next Systems skill and I don't peddle any product so I won't be doing any of that but what it will be sharing",
    "start": "3090",
    "end": "8760"
  },
  {
    "text": "with you is experience I've had over the last 20 years trying to build systems that scale effectively I'm gonna go into",
    "start": "8760",
    "end": "15900"
  },
  {
    "text": "it and the perspective alkane I've learned because I've actually run my own company I put my own money into it and",
    "start": "15900",
    "end": "22170"
  },
  {
    "text": "lost it and it gives you a very different perspective on how you just play with technology for what you want to do so we're not just gonna go and",
    "start": "22170",
    "end": "29250"
  },
  {
    "text": "build rows and rows of boxes with things in them what's more interesting to me is",
    "start": "29250",
    "end": "34489"
  },
  {
    "text": "how you do something like this how do you start with like a small corner shop and turn it into the largest shopping",
    "start": "34489",
    "end": "42600"
  },
  {
    "text": "mall in Europe I used to work next to this shopping mall in London and what's really behind it is it's all",
    "start": "42600",
    "end": "50280"
  },
  {
    "start": "50000",
    "end": "146000"
  },
  {
    "text": "about cost it's not actually a technology problem that's much more cost problem and I'm gonna talk a lot about",
    "start": "50280",
    "end": "55559"
  },
  {
    "text": "how the cost filter through the technology so what does it mean to scale well if you look at the axis on this we",
    "start": "55559",
    "end": "63750"
  },
  {
    "text": "want to look at volume my volume can be units of work transactions amount the data process whatever you want it to be",
    "start": "63750",
    "end": "69240"
  },
  {
    "text": "but you want to increase volume well as you increase volume what you want to",
    "start": "69240",
    "end": "74700"
  },
  {
    "text": "happen is not have your costs go through the roof because that is not scaling scaling is where whenever you increase",
    "start": "74700",
    "end": "80970"
  },
  {
    "text": "your volumes you keep your cost reasonable so the red line this is",
    "start": "80970",
    "end": "86190"
  },
  {
    "text": "probably bad but it's probably bad for certain volumes so if you're just doing a small scale thing like I out using",
    "start": "86190",
    "end": "92070"
  },
  {
    "text": "another analogy is like forget the shopping for a second imagine building a bridge if I want to build a bridge that",
    "start": "92070",
    "end": "97500"
  },
  {
    "text": "goes across a little stream at the bottom of my garden a little bit of wood is probably fine and the wood is not",
    "start": "97500",
    "end": "103500"
  },
  {
    "text": "gonna scale to go across a great expanse between two islands and I'll use different things so that might be fine",
    "start": "103500",
    "end": "109380"
  },
  {
    "text": "but it won't scale up but when we start looking at proper scale true scalability people will talk",
    "start": "109380",
    "end": "117390"
  },
  {
    "text": "about in the linear sense it's like the blue line but I'd actually argue from a commercial point of view that's not very",
    "start": "117390",
    "end": "123780"
  },
  {
    "text": "good if your volumes are going up and your costs for chemical and up almost",
    "start": "123780",
    "end": "128879"
  },
  {
    "text": "equal in stab yeah it's okay but you should be getting economies of Steel so",
    "start": "128879",
    "end": "134220"
  },
  {
    "text": "you want to be looking more at the green line as you're going up and so when you start thinking about stuff and I'm",
    "start": "134220",
    "end": "139620"
  },
  {
    "text": "talking about skill cost is so important and gotta look at what are the costs that make up what you do",
    "start": "139620",
    "end": "145520"
  },
  {
    "text": "so what makes up costs well it comes down to typically two things there's fixed costs and news variable costs and",
    "start": "145520",
    "end": "152250"
  },
  {
    "start": "146000",
    "end": "272000"
  },
  {
    "text": "fixed costs and things that you must sink and it could be like development effort upfront it could be buying kit",
    "start": "152250",
    "end": "158250"
  },
  {
    "text": "and putting it in a data center it might be building that data center itself but before you take those jumps you need to",
    "start": "158250",
    "end": "164640"
  },
  {
    "text": "work with the business to understand what is the volume you're gonna be dealing with and it's the collaborative",
    "start": "164640",
    "end": "170190"
  },
  {
    "text": "effort when we're dealing with this because then you can work out do I go for a variable cost model like do I put",
    "start": "170190",
    "end": "175350"
  },
  {
    "text": "this on Amazon ec2 or do I actually build my own data center from scratch if I've got no idea how many transactions",
    "start": "175350",
    "end": "182580"
  },
  {
    "text": "I'm processing I might as well just gas so work with the business to work out what that's going to be and be sort of a",
    "start": "182580",
    "end": "189690"
  },
  {
    "text": "word that there are things like both best kinds you can do and you start purchasing and any sort of skill so prepare for that and think about it in",
    "start": "189690",
    "end": "195990"
  },
  {
    "text": "the future so can a typical question I would ask of anyone is if you add another node to",
    "start": "195990",
    "end": "202590"
  },
  {
    "text": "your system how many more units of work or transactions or whatever do you get out of that",
    "start": "202590",
    "end": "209090"
  },
  {
    "text": "unfortunately when I go in to work with many people this is almost the response I get no one has a clue",
    "start": "209239",
    "end": "215450"
  },
  {
    "text": "if you don't actually know how many units of work can be done by a given",
    "start": "215450",
    "end": "220920"
  },
  {
    "text": "node or part of your system how do you even know how to skill well you can just throw hardware at the problem which is",
    "start": "220920",
    "end": "227940"
  },
  {
    "text": "the thing that's thrown around our industry a lot and I think it's a little bit of a shame because it is just",
    "start": "227940",
    "end": "233640"
  },
  {
    "text": "effectively like burning money if you it's okay that it does cost a lot to develop stuff but do you know if the",
    "start": "233640",
    "end": "240840"
  },
  {
    "text": "cost of where that is to develop is actually later the greater or less than the cost of actually buying the hardware",
    "start": "240840",
    "end": "246630"
  },
  {
    "text": "if you know that it's a very easy decision if you don't know it's not so easy and well how do we get to doing",
    "start": "246630",
    "end": "254250"
  },
  {
    "text": "some of this so I'm going to just jump into the meat of this which I'm going to go through it if it guidelines that I",
    "start": "254250",
    "end": "259650"
  },
  {
    "text": "kind of know often apply quite often when I'm working on projects thicker than the scale they're not set in stone they're not",
    "start": "259650",
    "end": "266820"
  },
  {
    "text": "rules I don't believe there's rules in anything but let's go into the guidelines and what's important so first up I'm a great",
    "start": "266820",
    "end": "275550"
  },
  {
    "start": "272000",
    "end": "393000"
  },
  {
    "text": "believer in that the model for the business would be at the core of what you do and this may seem strange in a",
    "start": "275550",
    "end": "281729"
  },
  {
    "text": "scalability talk but I think this is absolutely critical if you're gonna build anything for a business start off",
    "start": "281729",
    "end": "287520"
  },
  {
    "text": "with the core model great work through the likes of Eric Evans to me and driven design with alistair cockburn been doing",
    "start": "287520",
    "end": "293129"
  },
  {
    "text": "on hexagonal architectures it's all but get the pure application at the center keep it free from all sorts of",
    "start": "293129",
    "end": "299879"
  },
  {
    "text": "infrastructure build that and measure that on its own can that skill and that",
    "start": "299879",
    "end": "305490"
  },
  {
    "text": "work independent of all the other things we wrap around it and you'll probably",
    "start": "305490",
    "end": "310620"
  },
  {
    "text": "find that it can and you'll probably find that you can get really good clean code by taking that sort of approach",
    "start": "310620",
    "end": "316069"
  },
  {
    "text": "well in the hexagonal architecture approach well how do they then persist that well you provide an adopter that",
    "start": "316069",
    "end": "323460"
  },
  {
    "text": "persists it right that's one of the design approaches and not I'm not going to in a detail about how to do that but also our gavin's talks about using",
    "start": "323460",
    "end": "330569"
  },
  {
    "text": "repository designs for how you persist stuff and not where you can get around a persistence side well how do I get data",
    "start": "330569",
    "end": "336539"
  },
  {
    "text": "coming in you're gonna layer things and you're gonna have adopters and channels to bring the data into you so you think",
    "start": "336539",
    "end": "342210"
  },
  {
    "text": "let's get the core model together let's test it let's make sure it works correctly it is what the business",
    "start": "342210",
    "end": "347729"
  },
  {
    "text": "require I can then feed it with data and then I can see that see if Li I can then",
    "start": "347729",
    "end": "353520"
  },
  {
    "text": "work out what all of the characteristics to make that skill but it's important to get that core model correct and don't in",
    "start": "353520",
    "end": "360180"
  },
  {
    "text": "fact it with infrastructure for how do I see if something how did I do something so I'm probably good for heretic if",
    "start": "360180",
    "end": "366899"
  },
  {
    "text": "somebody starts in use an ORM I just run away screaming because you're just mixing concerns at that point and you're",
    "start": "366899",
    "end": "374250"
  },
  {
    "text": "gonna really struggle with scaling because you've just limited all of your options if you have a pure clean model",
    "start": "374250",
    "end": "379560"
  },
  {
    "text": "and then you have I see a repository pattern that you can choose to store it in somewhere you can then choose to swap",
    "start": "379560",
    "end": "385560"
  },
  {
    "text": "the storage however you want to do that and you've got those options and that way you can work and scale your system",
    "start": "385560",
    "end": "393139"
  },
  {
    "start": "393000",
    "end": "768000"
  },
  {
    "text": "so I mentioned we need a performance test and profile I think this is absolutely critical how many people here",
    "start": "393139",
    "end": "401069"
  },
  {
    "text": "grow on a profiler at least even once a week very very few",
    "start": "401069",
    "end": "408190"
  },
  {
    "text": "how do you know your code even does how do you get a feel for what its gonna perform like the understanding it",
    "start": "408190",
    "end": "415130"
  },
  {
    "text": "there's a good quote back from one of the Microsoft press I while ago saying that if you're gonna develop systems you",
    "start": "415130",
    "end": "422180"
  },
  {
    "text": "should all walk through it in a debugger and there's something I took on a fund it was very very valuable write your",
    "start": "422180",
    "end": "427310"
  },
  {
    "text": "code right do you so write your test write your code run your tests step through it in a debugger and so amazing",
    "start": "427310",
    "end": "433070"
  },
  {
    "text": "the things you see it gives you a whole reinforced picture of the model and how it works same thing happens with a",
    "start": "433070",
    "end": "439340"
  },
  {
    "text": "profiler you start to understand the characteristics your system you develop a much better relationship with your",
    "start": "439340",
    "end": "444800"
  },
  {
    "text": "system and just understand and get a feel for it but writing good performance",
    "start": "444800",
    "end": "450080"
  },
  {
    "text": "test is hard I find that the common problem that most people do with their performance tests is they'll write them",
    "start": "450080",
    "end": "456560"
  },
  {
    "text": "write their system run a performance test and said my systems not fast enough more often than not I find the",
    "start": "456560",
    "end": "462440"
  },
  {
    "text": "performance issues actually in the tests rather than in the target code so how do you address that well first thing do",
    "start": "462440",
    "end": "469940"
  },
  {
    "text": "test first development and this really modders is even more for performance test than it does for a normal unit test",
    "start": "469940",
    "end": "476120"
  },
  {
    "text": "is you write it against the blank something that just returns straight away with the false answer or even just",
    "start": "476120",
    "end": "481820"
  },
  {
    "text": "a random answer and then see if your performance test can run fast enough for what you want to do then plug in the",
    "start": "481820",
    "end": "488120"
  },
  {
    "text": "real code because you know at this stage whether your performance test is fast enough it's not you need to go back and",
    "start": "488120",
    "end": "493520"
  },
  {
    "text": "work on that there's lots of common mistakes people make they'll also do things like only",
    "start": "493520",
    "end": "499490"
  },
  {
    "text": "testing the same customer of the same product or the same entity of whatever type over and over again what's going to",
    "start": "499490",
    "end": "505490"
  },
  {
    "text": "happen it's gonna be hard in cash it's not going to give you a realistic view of the real world well how do you find",
    "start": "505490",
    "end": "511790"
  },
  {
    "text": "that realistic view ideally you take data from production you should know your production",
    "start": "511790",
    "end": "518120"
  },
  {
    "text": "characteristics and then have your tasks influenced by that if you're starting out and you're new but at least talk to",
    "start": "518120",
    "end": "523640"
  },
  {
    "text": "your business people and find out what they are expecting the characteristics you can guess you can be wrong at that",
    "start": "523640",
    "end": "529130"
  },
  {
    "text": "stage but at least you're working on some sort of model that you can evolve and understand over time",
    "start": "529130",
    "end": "535360"
  },
  {
    "text": "what's really important of especially when you start digging into something you got a performance problem",
    "start": "535360",
    "end": "540930"
  },
  {
    "text": "it's Theory of Constraints quite often people will look out of profilers I put and they'll see the",
    "start": "540930",
    "end": "547199"
  },
  {
    "text": "thing the second or third gone I know how to deal with that easier than the number one problem",
    "start": "547199",
    "end": "552259"
  },
  {
    "text": "that's a very common thing it's so easy just be tempted into the thing you know",
    "start": "552259",
    "end": "557850"
  },
  {
    "text": "how to deal with the code you're comfortable with the part of the system you're comfortable with but actually the",
    "start": "557850",
    "end": "562920"
  },
  {
    "text": "number one thing if you fix it you may find a two and three and four all just disappear because they were just a an",
    "start": "562920",
    "end": "569190"
  },
  {
    "text": "artifact of the first problem so always fix the first and the largest problem",
    "start": "569190",
    "end": "574500"
  },
  {
    "text": "that comes up and you just find that the characteristics completely change after that so it's a simple rule to apply but",
    "start": "574500",
    "end": "580199"
  },
  {
    "text": "that's one you should do and human behavior for whatever reason people start picking the easier ones that they",
    "start": "580199",
    "end": "585870"
  },
  {
    "text": "think are further dying in fact that if we have performance",
    "start": "585870",
    "end": "591000"
  },
  {
    "text": "tests and we have all of this data and we have realistic models we can start making sensible economic decisions",
    "start": "591000",
    "end": "598100"
  },
  {
    "text": "forward optimize so like optimization being rid of all evil there is a lot of",
    "start": "598100",
    "end": "603269"
  },
  {
    "text": "truth in that but it's a big difference between that knowing the capabilities of your systems and knowing what you want",
    "start": "603269",
    "end": "609029"
  },
  {
    "text": "to achieve so if you find your twenty thirty percent off your target and",
    "start": "609029",
    "end": "614760"
  },
  {
    "text": "you're gonna be going live you need to fix that at that point well how do I fix that do I spend a bit more and hardware",
    "start": "614760",
    "end": "621060"
  },
  {
    "text": "or do I spend a bit of time actually optimizing the system if I know the",
    "start": "621060",
    "end": "626250"
  },
  {
    "text": "costs of adding another node to the system and I can roughly estimate the time I'm gonna put into it I can make",
    "start": "626250",
    "end": "632069"
  },
  {
    "text": "that call you may also factor into that risk if it looks like it's gonna be very",
    "start": "632069",
    "end": "637079"
  },
  {
    "text": "complicated and risky to make those changes to the system it not be much better to just add the node but make",
    "start": "637079",
    "end": "642569"
  },
  {
    "text": "sensible decisions based upon the economics and the risks that you're handling I thought given stage",
    "start": "642569",
    "end": "649938"
  },
  {
    "text": "algorithm behavior this is a really interesting one I see lots of people produce systems and the test case size",
    "start": "650930",
    "end": "659160"
  },
  {
    "text": "going through a system is one and you think really",
    "start": "659160",
    "end": "664339"
  },
  {
    "text": "incredibly common one of my first experience is going out and consulting",
    "start": "664339",
    "end": "670740"
  },
  {
    "text": "was back around 95 96 one of the first internet banks I've been doing a lot of work internally on products and started",
    "start": "670740",
    "end": "677250"
  },
  {
    "text": "going outside to work and consultants him one of my first gigs because I've been working on the performance stuff internally was to go into this large",
    "start": "677250",
    "end": "683220"
  },
  {
    "text": "Bank who's having problems that whenever the switch doll and I just kept crashing and I went through he reviewed the code",
    "start": "683220",
    "end": "689790"
  },
  {
    "text": "reviewed the tests and being quite young and naive at the time I said to their board did you test this with any more",
    "start": "689790",
    "end": "696360"
  },
  {
    "text": "than one person and all the heads went died and that's pretty much what had happened",
    "start": "696360",
    "end": "702350"
  },
  {
    "text": "and so this is the sort of dawn of the internet and people realized in the scale what can happen they spent a lot",
    "start": "702350",
    "end": "708810"
  },
  {
    "text": "of money on TV advertising campaigns that huge loads come hit the system and it just fell over over and over again",
    "start": "708810",
    "end": "715279"
  },
  {
    "text": "and a lot of the flaws that there had made was they didn't know the algorithm behavior of their system and they had",
    "start": "715279",
    "end": "722250"
  },
  {
    "text": "some N squared and n cubed problems as load hit their system with response time",
    "start": "722250",
    "end": "727320"
  },
  {
    "text": "just went up a hockey stick so the end up was a she's over here rather than nice order one things down here so when",
    "start": "727320",
    "end": "734880"
  },
  {
    "text": "you start looking at the behavior of your system what is the behavior under certain loads and understanding those",
    "start": "734880",
    "end": "741480"
  },
  {
    "text": "characteristics now we can all go wide if we can get so much air transaction",
    "start": "741480",
    "end": "747360"
  },
  {
    "text": "per second out of a node and if we've got no contention which we'll talk about that lets you go wide but is that the",
    "start": "747360",
    "end": "752970"
  },
  {
    "text": "answer is in itself especially when considering cost how much transactions can we get through a node so how do we",
    "start": "752970",
    "end": "759750"
  },
  {
    "text": "improve that and make it better and a lot of that quite often is dealing with the algorithms we're using in the orders",
    "start": "759750",
    "end": "766290"
  },
  {
    "text": "of complexity that's in there we need to understand the hardware that's under that I'll I'll talk about",
    "start": "766290",
    "end": "772709"
  },
  {
    "start": "768000",
    "end": "868000"
  },
  {
    "text": "that a little bit more but one point out sort of may ignite it's not very well known but I think a lot of the future as",
    "start": "772709",
    "end": "778980"
  },
  {
    "text": "we go multi-core and we're dealing with large memory space it's a thing called cache oblivious algorithms it's a whole",
    "start": "778980",
    "end": "784649"
  },
  {
    "text": "talk in its own right I'd recommend anyone go on google for that and look into it it's really really interesting",
    "start": "784649",
    "end": "791010"
  },
  {
    "text": "this but hi we have memory hierarchies and we have multi-core how do we decompose those problems and chunk our",
    "start": "791010",
    "end": "797640"
  },
  {
    "text": "way through them in a memory friendly way to get out them and it actually can work very well for many different",
    "start": "797640",
    "end": "803430"
  },
  {
    "text": "problem sets large data on ice but the one killer that happens so often",
    "start": "803430",
    "end": "809850"
  },
  {
    "text": "I'll bring it out this is a special point is unbounded queries now how often",
    "start": "809850",
    "end": "815760"
  },
  {
    "text": "do you see on sites where people are to give me all of the transactions I've done on my account give me every unit of",
    "start": "815760",
    "end": "823680"
  },
  {
    "text": "something that has been sold somewhere in the world those queries can just go on and on and on for a while where the",
    "start": "823680",
    "end": "830160"
  },
  {
    "text": "start getting spectacularly bad is if there's a nested query in that so you query a lot of things and then based on",
    "start": "830160",
    "end": "835800"
  },
  {
    "text": "results is that your query and again you can end up with huge problems so how do you solve that well that's bound or",
    "start": "835800",
    "end": "842460"
  },
  {
    "text": "queries so that any unit of work has a maximum upper bind and so I only want to",
    "start": "842460",
    "end": "849390"
  },
  {
    "text": "bring back a hundred rows if I'm going to go to a database for example or just even query in anything in the system",
    "start": "849390",
    "end": "855750"
  },
  {
    "text": "bound their mind so you deal with in manageable chunks that can be all motorised and cost it up and then that",
    "start": "855750",
    "end": "861810"
  },
  {
    "text": "way we can start working out higher algorithms scale and what are the chunks of work that are actually going through those I",
    "start": "861810",
    "end": "869090"
  },
  {
    "start": "868000",
    "end": "955000"
  },
  {
    "text": "mentioned contention this is the biggest killer when it comes to scalability and",
    "start": "869090",
    "end": "874830"
  },
  {
    "text": "it happens in the large and the small what's really interesting is the",
    "start": "874830",
    "end": "879960"
  },
  {
    "text": "techniques used to manage scalability are off our contention are often the",
    "start": "879960",
    "end": "885240"
  },
  {
    "text": "biggest cause of contention themselves within the system locks being an example quite often you'll see small chunks of",
    "start": "885240",
    "end": "892590"
  },
  {
    "text": "work that really only are a few hundred or a few thousand processor cycles to do",
    "start": "892590",
    "end": "897870"
  },
  {
    "text": "but they're surrounded with a lock and it's contended and that lock is probably",
    "start": "897870",
    "end": "903780"
  },
  {
    "text": "our Dean many millions of processor cycles as it does contacts which is the kernel the deal with it",
    "start": "903780",
    "end": "910580"
  },
  {
    "text": "so whenever you're dealing stuff you've got to look at what does the management overhead cost in what you're doing and",
    "start": "910580",
    "end": "917660"
  },
  {
    "text": "once you've got any contention points you get huge queues behind them and that's what's going to cause the",
    "start": "917660",
    "end": "923460"
  },
  {
    "text": "scalability so the key to a shared nothing architecture is have no contention points so you don't have",
    "start": "923460",
    "end": "929340"
  },
  {
    "text": "these single database that everything goes to don't have the single load balancer that everything goes through because they're always going to be a",
    "start": "929340",
    "end": "935760"
  },
  {
    "text": "contention point and sassoon with getting to your day itself not Kanna for anyone who's actually",
    "start": "935760",
    "end": "942450"
  },
  {
    "text": "looked inside the code of the disruptor this was an interesting lesson for me is that the disruptor was sort of given",
    "start": "942450",
    "end": "949620"
  },
  {
    "text": "birth out of the need to develop something that fought contention or unlocks and queues and",
    "start": "949620",
    "end": "955670"
  },
  {
    "start": "955000",
    "end": "1153000"
  },
  {
    "text": "given the problem said that we had a tell max I find it worked really really well but now it's kind of exploded and",
    "start": "955670",
    "end": "962400"
  },
  {
    "text": "loads of people are using it in other wares and often without as much control over the hardware as they had so in the",
    "start": "962400",
    "end": "969330"
  },
  {
    "text": "small - how you use the disruptor you had to claim a slot you put your data into the slot and then you publish the",
    "start": "969330",
    "end": "976170"
  },
  {
    "text": "fact that that data is available then the consumers can take it now how you do",
    "start": "976170",
    "end": "981390"
  },
  {
    "text": "that publishing process it's got an internal thing called the cursor the problem that was happening when you've",
    "start": "981390",
    "end": "987240"
  },
  {
    "text": "got multiple threads putting in at the same time is the cursor becomes a point of contention and it's the one",
    "start": "987240",
    "end": "992670"
  },
  {
    "text": "weaknesses of anybody's the news that can disrupt her with lots and lots of concurrent threads hitting it because as",
    "start": "992670",
    "end": "999090"
  },
  {
    "text": "you claimed you the end of waiting for other people to move the cursor forward and whereas it's a lock free algorithm",
    "start": "999090",
    "end": "1006590"
  },
  {
    "text": "it's not a weird free algorithm and again it doesn't have a fixed cost for the number of steps to do with that so",
    "start": "1006590",
    "end": "1012680"
  },
  {
    "text": "there's been a lot of work since that to move that forward and I'm gonna be releasing some new cues later in the",
    "start": "1012680",
    "end": "1018830"
  },
  {
    "text": "year through a different open source initiative that completely removes that issue because what I've worked out how",
    "start": "1018830",
    "end": "1024079"
  },
  {
    "text": "to do is how to take that connect contention point out I've got completely linear scalability now with doing that",
    "start": "1024080",
    "end": "1030110"
  },
  {
    "text": "the ideas that is also feeding back into the disrupter and there's going to be a version three that's going to start",
    "start": "1030110",
    "end": "1035209"
  },
  {
    "text": "dealing with those sort of issues as well they're getting interesting things about picking up on some of that is we",
    "start": "1035209",
    "end": "1040280"
  },
  {
    "text": "also improve lots of other things along the way but fighting the contention so that's an example in the micro we've had",
    "start": "1040280",
    "end": "1046280"
  },
  {
    "text": "loads of other examples in the past with things like false sharing so you don't even realize you're having contention",
    "start": "1046280",
    "end": "1052730"
  },
  {
    "text": "memory is moved around and what's known as cache lines and there's 64 bytes at a time and you can find you could two",
    "start": "1052730",
    "end": "1058760"
  },
  {
    "text": "variables sitting in the same cache line with separate threads updating them and your point of contention then is the",
    "start": "1058760",
    "end": "1064430"
  },
  {
    "text": "memory subsystem moving there's cache lines between different cores so it can be hidden that's the micro well what",
    "start": "1064430",
    "end": "1070580"
  },
  {
    "text": "what's in the macro quite often you see is this your database this is a classic problem and even worse shared tables",
    "start": "1070580",
    "end": "1077220"
  },
  {
    "text": "within those databases how do you get rid of that problem well if you put a service in front of the database and you",
    "start": "1077220",
    "end": "1083669"
  },
  {
    "text": "only talk to it via that service you've got lots of ways of know removing a lot",
    "start": "1083669",
    "end": "1089190"
  },
  {
    "text": "of our contention for example you don't need to read into the database the service can actually cache the data out",
    "start": "1089190",
    "end": "1095279"
  },
  {
    "text": "of that the service can be looking well how do I shard that out and eliminate the contention being across different",
    "start": "1095279",
    "end": "1102690"
  },
  {
    "text": "products users entities whatever it happens to be so think of it what are the tension points in your system and",
    "start": "1102690",
    "end": "1108840"
  },
  {
    "text": "eliminate them many people will suggest use a load balancer as a way of scaling your system it does give you certain",
    "start": "1108840",
    "end": "1115740"
  },
  {
    "text": "characteristics and they also did certain things at a point in time and what often things are moving forward so",
    "start": "1115740",
    "end": "1121529"
  },
  {
    "text": "a load balancer sits right in front of all your web servers and channels your traffic 3 typically does two useful",
    "start": "1121529",
    "end": "1127350"
  },
  {
    "text": "things for you it doesn't any others but two major ones quite often is do an SSL offloads so it's dealing with the",
    "start": "1127350",
    "end": "1133440"
  },
  {
    "text": "encryption and having specialized hardware to do that ever since then the healin processor which is nearly 4 years",
    "start": "1133440",
    "end": "1139679"
  },
  {
    "text": "ago now we've had support for cryptographic instructions inside modern",
    "start": "1139679",
    "end": "1145110"
  },
  {
    "text": "processors so we can be doing that local if you're running open SSL on the list versus the Linux they're just",
    "start": "1145110",
    "end": "1150779"
  },
  {
    "text": "automatically using that and it's available to you other things is doing is connection",
    "start": "1150779",
    "end": "1156210"
  },
  {
    "start": "1153000",
    "end": "1213000"
  },
  {
    "text": "multiplexing TC Feast actually getting better and better all of the time so",
    "start": "1156210",
    "end": "1161510"
  },
  {
    "text": "it's dealing with those problems but it's not a point of contention and it's also a point that has very different",
    "start": "1161510",
    "end": "1167309"
  },
  {
    "text": "skills and so you're teams aren't skilling the same way as well because one of the ways to make it your team",
    "start": "1167309",
    "end": "1172799"
  },
  {
    "text": "skill skill avast is have very similar skills and very similar technologies that everybody can use you're gonna",
    "start": "1172799",
    "end": "1178710"
  },
  {
    "text": "weird technology sitting over on the side you've now got a contention point in how your team works as well as a",
    "start": "1178710",
    "end": "1185279"
  },
  {
    "text": "detention point in your architecture and so avoiding specialized Hardware unless",
    "start": "1185279",
    "end": "1191100"
  },
  {
    "text": "it's really really given you a big advantage will also help scalability in your development efforts itself",
    "start": "1191100",
    "end": "1197299"
  },
  {
    "text": "well then how do I deal with a whole farm the servers you may ask well as",
    "start": "1197299",
    "end": "1202320"
  },
  {
    "text": "part of the boot start processes you can act can get a Rian's of servers you can connect to and your clients can then",
    "start": "1202320",
    "end": "1207580"
  },
  {
    "text": "just choose and all of a sudden you've not got a problem that federated self and skills are much much better",
    "start": "1207580",
    "end": "1213149"
  },
  {
    "start": "1213000",
    "end": "1277000"
  },
  {
    "text": "and so I think it's it's really valid exercise to just walk your architecture",
    "start": "1213149",
    "end": "1218830"
  },
  {
    "text": "kind of end-to-end and see do I have single points of contention and then as you fly load with your load test and you",
    "start": "1218830",
    "end": "1226029"
  },
  {
    "text": "start profiling those hotspots will soon start to light up and you'll start seeing if they're an issue they're not",
    "start": "1226029",
    "end": "1231759"
  },
  {
    "text": "so getting them right well how do we often get hot spots like that either for system well one of the ways we easy to",
    "start": "1231759",
    "end": "1238149"
  },
  {
    "text": "do is put a queue in front of it rather than have things bang on it and littles law is a beautiful little piece",
    "start": "1238149",
    "end": "1244929"
  },
  {
    "text": "of mathematics incredibly simple and well worth sort of exploring understanding but a simple way to think",
    "start": "1244929",
    "end": "1250929"
  },
  {
    "text": "about it is if any execution you'd be a threat of process a node of some",
    "start": "1250929",
    "end": "1257019"
  },
  {
    "text": "description takes a period of time say that period of time is acts to do a piece of work on average and you have a",
    "start": "1257019",
    "end": "1263980"
  },
  {
    "text": "queue in front of it and if your queue is got 10 items in it the last item is",
    "start": "1263980",
    "end": "1269379"
  },
  {
    "text": "going to have to wait an axe before it actually gets its work complete and so you can start predicting the response",
    "start": "1269379",
    "end": "1275409"
  },
  {
    "text": "times of your systems and having the queues arounds kind of interesting but most people quite often",
    "start": "1275409",
    "end": "1282519"
  },
  {
    "start": "1277000",
    "end": "1401000"
  },
  {
    "text": "don't think about queues in their system the accuser everywhere whether you realize it or not queues are there I",
    "start": "1282519",
    "end": "1289059"
  },
  {
    "text": "would say embrace them and just deal with the issues that come with them and also understand them and get the",
    "start": "1289059",
    "end": "1295179"
  },
  {
    "text": "benefits so he said what I say of queues or everywhere well let's say I'm not going to put a queue in front or",
    "start": "1295179",
    "end": "1300519"
  },
  {
    "text": "something but I'm gonna put a lock around it what do you think happens when multiple threads could access the same",
    "start": "1300519",
    "end": "1307120"
  },
  {
    "text": "thing that's protected by a lock one gets it the others all stop they're put",
    "start": "1307120",
    "end": "1312669"
  },
  {
    "text": "onto a queue by the operating system to be scheduled to run at a later stage and woken up at a huge cost leaving your",
    "start": "1312669",
    "end": "1319629"
  },
  {
    "text": "process address space having your caches polluted haven't we woke up in rishi angel may be scheduled again on a",
    "start": "1319629",
    "end": "1325809"
  },
  {
    "text": "different core at a later stage this is all very expensive and in the meantime making no progress",
    "start": "1325809",
    "end": "1332460"
  },
  {
    "text": "take the other approaches let's say your systems are synchronous and you've got a queue is you hand the piece of work over",
    "start": "1332460",
    "end": "1338470"
  },
  {
    "text": "to the Qt get done you go off and do something else you're busy you're useful you can be scheduled in the same place",
    "start": "1338470",
    "end": "1344020"
  },
  {
    "text": "and have a thread the other side doing a piece of work so here's a typical system that you'll see it's you typically have",
    "start": "1344020",
    "end": "1350560"
  },
  {
    "text": "D it where's dealing with the outside world and your customers and you typically have some sort of transaction service grossly simplified there could",
    "start": "1350560",
    "end": "1356830"
  },
  {
    "text": "be many more layers many more ways of splitting that out but we usually have a network stack with approval threads",
    "start": "1356830",
    "end": "1362770"
  },
  {
    "text": "taking things in those pieces of work typically at the",
    "start": "1362770",
    "end": "1368650"
  },
  {
    "text": "gateways you're applying border security protocol translation turn it into something useful you're going to do internally so it goes onto Network stack",
    "start": "1368650",
    "end": "1376060"
  },
  {
    "text": "again to arrive over to your transaction service when you do your piece of work whatever that happens to be which may",
    "start": "1376060",
    "end": "1382780"
  },
  {
    "text": "end up updating storage but whether you model these queues or not they're gonna",
    "start": "1382780",
    "end": "1388060"
  },
  {
    "text": "exist as you could write to your network you're gonna be queueing are you gonna",
    "start": "1388060",
    "end": "1393370"
  },
  {
    "text": "read from the network you're gonna be queueing if you've got a thread pool here as you go to submit jobs to it",
    "start": "1393370",
    "end": "1399070"
  },
  {
    "text": "you're gonna queue I'm the even bring those keys out so you can see them once you can see",
    "start": "1399070",
    "end": "1407200"
  },
  {
    "text": "them and you're managing them you can start doing interesting things first really important thing is bind them if",
    "start": "1407200",
    "end": "1414370"
  },
  {
    "text": "you put a lock in front to something and it's got no bind what can happen is the queue can grow and just keep growing and",
    "start": "1414370",
    "end": "1421120"
  },
  {
    "text": "growing and growing indefinitely now the problem most people will probably see is their system blows up",
    "start": "1421120",
    "end": "1427180"
  },
  {
    "text": "with out of out of memory error but the problem happens web before that that's just the final cause it's like having a",
    "start": "1427180",
    "end": "1434260"
  },
  {
    "text": "nasty disease in and dying of pneumonia it's actually the nasty disease the getting the first thing you want to watch out about and the nasty disease",
    "start": "1434260",
    "end": "1441250"
  },
  {
    "text": "here is your cash overruns so as you're adding things to the queue so I've got a",
    "start": "1441250",
    "end": "1446710"
  },
  {
    "text": "cure and it's building up and so it's chugging along is getting bigger and bigger sooner or later that queue",
    "start": "1446710",
    "end": "1452020"
  },
  {
    "text": "doesn't fit in your cash then what happens is as you're removing in a last in first out manner oh so",
    "start": "1452020",
    "end": "1460030"
  },
  {
    "text": "they're first in first out manner the thing that's going to be picked up by the consumer has been sitting so long",
    "start": "1460030",
    "end": "1467170"
  },
  {
    "text": "it's actually been evicted out of your cash and so your consumer that isn't catching No is getting cache misses and",
    "start": "1467170",
    "end": "1474680"
  },
  {
    "text": "the world has got even worse very quickly then it slows down even more and in the Kudus grows on a rapid red",
    "start": "1474680",
    "end": "1482450"
  },
  {
    "text": "filling memory and the whole world it's not so good anymore better thing to do is keep the queue",
    "start": "1482450",
    "end": "1490400"
  },
  {
    "text": "binded cuz on then also you can honor a response time characteristic cuz you also don't give that horrible response",
    "start": "1490400",
    "end": "1496460"
  },
  {
    "text": "time experience to end users so I gonna say I want to keep my response time",
    "start": "1496460",
    "end": "1501560"
  },
  {
    "text": "within a given bind I can work that out given littles law given the queue size what it should be",
    "start": "1501560",
    "end": "1507670"
  },
  {
    "text": "now what happens when my cue felt what you should do then is apply back pressure so you don't accept any more",
    "start": "1507670",
    "end": "1514820"
  },
  {
    "text": "units of work and you apply back pressure back so in this case let's say the storage system isn't keeping up and this threads kind of right well if it's",
    "start": "1514820",
    "end": "1522680"
  },
  {
    "text": "blocking in this dates that's fine because this queue then is gonna back up now if this queue backs up it's gonna",
    "start": "1522680",
    "end": "1529340"
  },
  {
    "text": "fill and then this thread is not gonna be able to DQ anymore network packets so it's gonna put back pressure to here",
    "start": "1529340",
    "end": "1535700"
  },
  {
    "text": "which means that this thread can no longer in queue and you no more network packets which then fills that key",
    "start": "1535700",
    "end": "1543550"
  },
  {
    "text": "which stalls these threads which eventually stops consuming from the network which eventually stops no new",
    "start": "1543550",
    "end": "1551240"
  },
  {
    "text": "work coming into the system that's the better experience for end users to keep processing and deny new",
    "start": "1551240",
    "end": "1559130"
  },
  {
    "start": "1553000",
    "end": "1657000"
  },
  {
    "text": "input rather than just have your system crash because at least you're still offering service you're offering good",
    "start": "1559130",
    "end": "1565520"
  },
  {
    "text": "service up to your maximum capacity I like the analogy of I'm running a coffee shop or something I'll only allow in so",
    "start": "1565520",
    "end": "1572150"
  },
  {
    "text": "many people and then at that point I'll say come back later please now let's come back later please and this will it",
    "start": "1572150",
    "end": "1579590"
  },
  {
    "text": "could be a message to the user like a 503 and HP response sent servers busy",
    "start": "1579590",
    "end": "1584840"
  },
  {
    "text": "come back again later but at least everybody's in there is getting a good experience and it's all working",
    "start": "1584840",
    "end": "1591670"
  },
  {
    "text": "now in fact I've got all these queues and we know the average time it takes to process something",
    "start": "1591670",
    "end": "1598060"
  },
  {
    "text": "we can actually work out really interesting things like what is the average response time the users actually",
    "start": "1598060",
    "end": "1603200"
  },
  {
    "text": "getting in the system how many transactions per second are we dealing with is the real of which things are",
    "start": "1603200",
    "end": "1609350"
  },
  {
    "text": "going through queue so making the first class concepts gives you a lot of insight into what your system is doing",
    "start": "1609350",
    "end": "1615500"
  },
  {
    "text": "I'm bringing them right also makes things nicely decoupled and easy to model and Caston so if I want to just",
    "start": "1615500",
    "end": "1622309"
  },
  {
    "text": "low test this lot as an individual component well I can just throw in and out of these two case works really",
    "start": "1622309",
    "end": "1628730"
  },
  {
    "text": "nicely and that way I can get faster feedback cycles as we all know that one",
    "start": "1628730",
    "end": "1633830"
  },
  {
    "text": "of the most important things with agile or lean methodologies is fast feedback cycles applied and all levels of what",
    "start": "1633830",
    "end": "1641120"
  },
  {
    "text": "you work so I can get much faster feedback cycles if I just have to run pass over and over on this rather than",
    "start": "1641120",
    "end": "1647059"
  },
  {
    "text": "end to end once I've isolated the problem but I can also test end to end as well but I've got the choices I've",
    "start": "1647059",
    "end": "1654530"
  },
  {
    "text": "got the ability to do this now in a night I can also sound full things going",
    "start": "1654530",
    "end": "1659750"
  },
  {
    "start": "1657000",
    "end": "1695000"
  },
  {
    "text": "through I can out tracers and different things to know what's going on it's so important to know what's going on in",
    "start": "1659750",
    "end": "1664940"
  },
  {
    "text": "your production systems when you want to work out if you need to scale and then you can start taking this data for things like capacity planning because",
    "start": "1664940",
    "end": "1671750"
  },
  {
    "text": "capacity planning quite often people will look at well what's the memory utilization what's the CPU utilization",
    "start": "1671750",
    "end": "1676940"
  },
  {
    "text": "what's our i/o utilizes these are useful things but they're not enough it's actually even more powerful the further",
    "start": "1676940",
    "end": "1683630"
  },
  {
    "text": "you come up the stack because that's what's really cowling about everything else that's on me if you're finding your response times and your cues are filling",
    "start": "1683630",
    "end": "1690140"
  },
  {
    "text": "up you know you've got an underlying problem much much quicker and you can deal with it",
    "start": "1690140",
    "end": "1696220"
  },
  {
    "text": "so kind of interesting one on this this is a problem I'm seeing over and over again and I kind of call it the curse of",
    "start": "1696220",
    "end": "1702620"
  },
  {
    "text": "logging libraries littles law great example of high queueing theory works on dolls law",
    "start": "1702620",
    "end": "1709370"
  },
  {
    "text": "another great description of high parallel computing can work and what is the parallel limiting component I spend",
    "start": "1709370",
    "end": "1716420"
  },
  {
    "text": "a lot of my time helping people scale systems and one of the biggest problems is usually logging",
    "start": "1716420",
    "end": "1723190"
  },
  {
    "text": "happens over and over again it's just me one of the biggest limiting factors and so I spent a lot of time looking inside",
    "start": "1723190",
    "end": "1728929"
  },
  {
    "text": "most of the common login frameworks sort of log4j log to forge a log bag does",
    "start": "1728929",
    "end": "1736580"
  },
  {
    "text": "Marty put slf in front of it the built-in JDK log all the diverse ones they all pretty much did the same thing",
    "start": "1736580",
    "end": "1742190"
  },
  {
    "text": "internally and they are a perfect exercise in how to screw up systems design and disregard littles law Nam",
    "start": "1742190",
    "end": "1749480"
  },
  {
    "text": "dolls law by changing how we do logging massive",
    "start": "1749480",
    "end": "1755929"
  },
  {
    "start": "1751000",
    "end": "1834000"
  },
  {
    "text": "changes can happen in our systems and this is one of the open source projects I'm currently tackling the case",
    "start": "1755929",
    "end": "1761919"
  },
  {
    "text": "logging on contended single thread with nothing else going on in the system",
    "start": "1761919",
    "end": "1768049"
  },
  {
    "text": "through the normal JDK logger takes 16 microseconds on a very fast processor",
    "start": "1768049",
    "end": "1773720"
  },
  {
    "text": "with an SSD underneath it on average that is horrendous 16 microseconds you",
    "start": "1773720",
    "end": "1780139"
  },
  {
    "text": "are two threads to it you up to 35 micro seconds on average it's not even getting",
    "start": "1780139",
    "end": "1785809"
  },
  {
    "text": "caught air cuz the skill is getting worse you start adding ear threads and",
    "start": "1785809",
    "end": "1790820"
  },
  {
    "text": "you're wearing the hundreds of microseconds and they're all queuing up to basically log and then you get all",
    "start": "1790820",
    "end": "1797509"
  },
  {
    "text": "sorts of really nasty characteristics so if you're the unlucky thread that fills the buffer then has to be flushed down",
    "start": "1797509",
    "end": "1803389"
  },
  {
    "text": "to disk everything else is behind it because the whole thing's rock with a lock you get the sawtooth of latency and",
    "start": "1803389",
    "end": "1809480"
  },
  {
    "text": "everybody behind it suffers in the tail you reach the end of the log and you",
    "start": "1809480",
    "end": "1814580"
  },
  {
    "text": "need to roll it guess what happens everybody in the Hat in the queue suffers again and how it happens really",
    "start": "1814580",
    "end": "1821090"
  },
  {
    "text": "simple design approaches can fix this and can get much better but it is the perfect unti pattern to how to build a",
    "start": "1821090",
    "end": "1827389"
  },
  {
    "text": "scalable system just look inside what loggers do and do the opposite and you'll probably do better",
    "start": "1827389",
    "end": "1834820"
  },
  {
    "start": "1834000",
    "end": "1858000"
  },
  {
    "text": "the thing is we need to log it's important it should become a first-class concept and we should bring it up to the",
    "start": "1835149",
    "end": "1841700"
  },
  {
    "text": "top like I've even seen systems whereby people have protected their code with his debug enabled around them I run a",
    "start": "1841700",
    "end": "1849799"
  },
  {
    "text": "profiler and find out in many cases 18% of total CPU time was spent calling is",
    "start": "1849799",
    "end": "1855049"
  },
  {
    "text": "debug and evil it's crazy let's get better",
    "start": "1855049",
    "end": "1862480"
  },
  {
    "start": "1858000",
    "end": "1949000"
  },
  {
    "text": "so what's one great way of eliminating contention in our systems well",
    "start": "1862480",
    "end": "1868610"
  },
  {
    "text": "separating reading and writing is a really really useful thing because it's so often we'll put a great",
    "start": "1868610",
    "end": "1876440"
  },
  {
    "text": "big lock or a management system to avoid contention around our our core data our",
    "start": "1876440",
    "end": "1881600"
  },
  {
    "text": "core model that we want to read or write to those reads should not be impacting",
    "start": "1881600",
    "end": "1887419"
  },
  {
    "text": "the rights that are going on get so often they are so if we can separate them we can have both sets a traffic",
    "start": "1887419",
    "end": "1893419"
  },
  {
    "text": "flowing completely freely well how can we do that a really good technique I'll",
    "start": "1893419",
    "end": "1898610"
  },
  {
    "text": "find is using event sourcing and CQRS command chimeric command query",
    "start": "1898610",
    "end": "1903700"
  },
  {
    "text": "responsibility segregation and what we do with that is the changes that are",
    "start": "1903700",
    "end": "1908870"
  },
  {
    "text": "happening to one model we have a stream of events that go elsewhere and we can rebuild that model many many times over",
    "start": "1908870",
    "end": "1916100"
  },
  {
    "text": "and over again I think about back when I said let's build the model completely independent of all the infrastructure",
    "start": "1916100",
    "end": "1922760"
  },
  {
    "text": "and it's not tangled into it no I we have a model we can run anywhere if we've put the same stream of events into",
    "start": "1922760",
    "end": "1929809"
  },
  {
    "text": "that model we can rebuild it all those models can answer loads and loads of different queries as many as we want in",
    "start": "1929809",
    "end": "1937220"
  },
  {
    "text": "a very very scalable fashion and even if we get down this diesel well how do I get the data to all of those if you",
    "start": "1937220",
    "end": "1943669"
  },
  {
    "text": "don't take that step there's multicast and all sorts of other means of getting data out very fast to many different",
    "start": "1943669",
    "end": "1948860"
  },
  {
    "text": "ways so we've no separate little reads and writes writes are still an interesting",
    "start": "1948860",
    "end": "1955010"
  },
  {
    "start": "1949000",
    "end": "2053000"
  },
  {
    "text": "problem or one of the biggest issues with writes is if you're actually doing",
    "start": "1955010",
    "end": "1960289"
  },
  {
    "text": "updates or replacements and I think the world are starting to realize now that doing updates in place is a very",
    "start": "1960289",
    "end": "1968299"
  },
  {
    "text": "difficult thing to get right and get the concurrency right on it's much easier to have worm style storage where data is",
    "start": "1968299",
    "end": "1975230"
  },
  {
    "text": "immutable and you create a new version like de Tomac is a good example of this is deed as effectively facts like where",
    "start": "1975230",
    "end": "1982340"
  },
  {
    "text": "I live know is the property of my address and the time now if I move house",
    "start": "1982340",
    "end": "1988360"
  },
  {
    "text": "my old address is still completely valid why do I want to update my address field I should be writing a new address with a",
    "start": "1988360",
    "end": "1995240"
  },
  {
    "text": "new date from which I started but so when I want to query where do I currently live I want to look at what is",
    "start": "1995240",
    "end": "2001780"
  },
  {
    "text": "the current address that hasn't been superseded by another address not by having those sort of append-only",
    "start": "2001780",
    "end": "2008640"
  },
  {
    "text": "to style structures it's so much easier to start dealing with the concurrency issues if you go down to exceed of this",
    "start": "2008640",
    "end": "2015360"
  },
  {
    "text": "I know my sequel and Oracle very well I know many other databases have similar characteristics and a lot of the new",
    "start": "2015360",
    "end": "2021750"
  },
  {
    "text": "column stores and no sequel databases are doing this as well if you write append-only you can get much much better",
    "start": "2021750",
    "end": "2028950"
  },
  {
    "text": "throughput so in Oracle you can hint a query to be append-only and so when",
    "start": "2028950",
    "end": "2034260"
  },
  {
    "text": "you're doing an insert and what it doesn't do is it doesn't try to find space within the table it goes right to the end to the high-water mark and",
    "start": "2034260",
    "end": "2040290"
  },
  {
    "text": "writes after that and if it's writing after the high-water mark on a table any queries that are currently running will",
    "start": "2040290",
    "end": "2046440"
  },
  {
    "text": "always get a read consistent view so it doesn't interfere with running queries my sequel can do exactly the same thing",
    "start": "2046440",
    "end": "2053450"
  },
  {
    "start": "2053000",
    "end": "2119000"
  },
  {
    "text": "so thinking in those sort of app and only immutable structures works incredibly well it also works incredibly",
    "start": "2053450",
    "end": "2060628"
  },
  {
    "text": "well when you look at the underlying hardware that is running on disks do very well sequentially spinning disk can",
    "start": "2060629",
    "end": "2067230"
  },
  {
    "text": "read and write phenomenal amount of data sequentially and so that's kind of great and you're out in them SSDs have got a",
    "start": "2067230",
    "end": "2072870"
  },
  {
    "text": "lot more performance but also they have issues with updates SSDs give you completely random read",
    "start": "2072870",
    "end": "2080250"
  },
  {
    "text": "access when it comes to write if you override part of a file that's currently there it has to actually mark that data",
    "start": "2080250",
    "end": "2087300"
  },
  {
    "text": "as to be garbage collected and then other kids space outs were and writes that data in and because the way the",
    "start": "2087300",
    "end": "2094860"
  },
  {
    "text": "work is you can read and write a for care page at a time but if you want to read something you've got to raise a",
    "start": "2094860",
    "end": "2100230"
  },
  {
    "text": "whole block because they're organized into an array and the the blocks are two megabytes in size so if you're gonna run",
    "start": "2100230",
    "end": "2106560"
  },
  {
    "text": "modifying all of the time you very quickly we write an SSD whereas if you just write append only to",
    "start": "2106560",
    "end": "2113160"
  },
  {
    "text": "go through a really fast really friendly and you don't even have all that GC cycles going on hurting you in the",
    "start": "2113160",
    "end": "2118290"
  },
  {
    "text": "background so it's append-only also important to cache",
    "start": "2118290",
    "end": "2123800"
  },
  {
    "text": "caching is the way to get into anything quite quickly and so stuff that's really really important to cache also tell a",
    "start": "2123800",
    "end": "2129720"
  },
  {
    "text": "story of a client I had earlier this year who had an incredibly peaky problem",
    "start": "2129720",
    "end": "2134910"
  },
  {
    "text": "they were selling things online and most of the traffic happened on a Sunday night around holidays the rest the time it was",
    "start": "2134910",
    "end": "2141539"
  },
  {
    "text": "really really quiet and to deal with this problem they start throwing technology I think this is the disease",
    "start": "2141539",
    "end": "2147930"
  },
  {
    "text": "of many developers that I call CV driven development so they started off with",
    "start": "2147930",
    "end": "2153829"
  },
  {
    "text": "they had Python it kind of worked needed to scale they had post grads and then to",
    "start": "2153829",
    "end": "2159299"
  },
  {
    "text": "end the back-end to store the data and did then move from that well let's put memcache in front but nothing's a little",
    "start": "2159299",
    "end": "2164849"
  },
  {
    "text": "bit of the problem well the work started getting really really complicated so let's work let's put this work out to a",
    "start": "2164849",
    "end": "2169859"
  },
  {
    "text": "form and install G unicorn well G unicorn couldn't work so well with memcache the installed Redis and so all",
    "start": "2169859",
    "end": "2176700"
  },
  {
    "text": "the data starts getting copied around all of this different things and this was getting bigger and bigger and bigger and more complex and I just sat down",
    "start": "2176700",
    "end": "2182759"
  },
  {
    "text": "done a quick calculation and realized all of the reference data for their catalog fitted into a few hundred",
    "start": "2182759",
    "end": "2189119"
  },
  {
    "text": "megabytes no one had sat down and done that calculation as they get rid of all of this",
    "start": "2189119",
    "end": "2196019"
  },
  {
    "start": "2190000",
    "end": "2233000"
  },
  {
    "text": "technology read it at a Postgres whenever you start and just cash it in all of the notes it hardly ever changed",
    "start": "2196019",
    "end": "2202339"
  },
  {
    "text": "and what they did do is you use memcache then is just a way of coordinating between the nodes where the nodes would",
    "start": "2202339",
    "end": "2208380"
  },
  {
    "text": "pole occasionally and there's just a flag set in memcache to say whether you needed to reap all your cash tied",
    "start": "2208380",
    "end": "2214140"
  },
  {
    "text": "because it happens so infrequently and they're able to run off that system went a whole lot faster and also scale",
    "start": "2214140",
    "end": "2219960"
  },
  {
    "text": "perfectly because they're just all read out to this the odd in a new node on peak so we end up running an elastic",
    "start": "2219960",
    "end": "2225690"
  },
  {
    "text": "cluster whereby whenever the pigs happen you spun up new nodes they just read out the cache data Nick it just all handled",
    "start": "2225690",
    "end": "2231480"
  },
  {
    "text": "requests absolutely no problem so thinking about that don't get hung up in",
    "start": "2231480",
    "end": "2236579"
  },
  {
    "start": "2233000",
    "end": "2270000"
  },
  {
    "text": "technology just go back and be simple and the simple stuff works really well as I mentioned fact-based data works",
    "start": "2236579",
    "end": "2242609"
  },
  {
    "text": "really well as well because we don't have to invalidate at that you don't have to invalidate a cache when you're dealing with fact-based data at any",
    "start": "2242609",
    "end": "2249720"
  },
  {
    "text": "given point in time that fact is valid at a later point in time another fact is valid but you don't need to delete that",
    "start": "2249720",
    "end": "2255809"
  },
  {
    "text": "old data we have so much memory so much storage now take those sorts of approaches you can eventually garbage",
    "start": "2255809",
    "end": "2262440"
  },
  {
    "text": "collect and purge if that's an issue it's so easy to drop a table trunk editable whatever updating individual",
    "start": "2262440",
    "end": "2268680"
  },
  {
    "text": "rows is incredibly expensive and also for many business problems quite often perfect is not the right",
    "start": "2268680",
    "end": "2275410"
  },
  {
    "start": "2270000",
    "end": "2304000"
  },
  {
    "text": "answer you go through a booking process hey you can read availability on hotel",
    "start": "2275410",
    "end": "2282520"
  },
  {
    "text": "rooms you can read availability on a flight you can read availability and in most things for logistic systems and if the 20 you read it there's like 100 or",
    "start": "2282520",
    "end": "2289270"
  },
  {
    "text": "so things left and even later do you need to reread again just attempt the transaction and at that point it can",
    "start": "2289270",
    "end": "2295270"
  },
  {
    "text": "feel the cost availability is gone in which case you can choose to teach your guys don't try to keep perfect and up-to-date at all time there's a lot of",
    "start": "2295270",
    "end": "2302290"
  },
  {
    "text": "things we can play with but mechanical sympathy is kind of one",
    "start": "2302290",
    "end": "2308380"
  },
  {
    "start": "2304000",
    "end": "2336000"
  },
  {
    "text": "of my big passions and it's kind of driven by just knowing the infrastructure and what you can get out",
    "start": "2308380",
    "end": "2314380"
  },
  {
    "text": "of it whenever I started Lmax I got in an old team that I had worked with and they",
    "start": "2314380",
    "end": "2321190"
  },
  {
    "text": "built part of our front end that was customer facing as web traffic and we",
    "start": "2321190",
    "end": "2326410"
  },
  {
    "text": "run on some profile and we run the tests on it and this says I'm really pride we've got 800 requests a second for each",
    "start": "2326410",
    "end": "2333430"
  },
  {
    "text": "note that's just not good enough and they're like what do you mean that's pretty good that's as good as we see",
    "start": "2333430",
    "end": "2339550"
  },
  {
    "start": "2336000",
    "end": "2384000"
  },
  {
    "text": "else were and they didn't see where I was coming from as as well if I actually look at what's going on the network's",
    "start": "2339550",
    "end": "2346540"
  },
  {
    "text": "back the whole infrastructure coming right up through the app server that we're hopping to using I know from previous measurements could handle on",
    "start": "2346540",
    "end": "2352870"
  },
  {
    "text": "that hardware thirty-seven thousand requests a second so yet hundred not",
    "start": "2352870",
    "end": "2358420"
  },
  {
    "text": "actually that good really what he's doing with the rest of it and they just run the profiler we found a couple of",
    "start": "2358420",
    "end": "2363880"
  },
  {
    "text": "hotspots and we will fix them and put them right but being a were of the capabilities of the platform that's",
    "start": "2363880",
    "end": "2370240"
  },
  {
    "text": "underneath makes it really powerful for knowing what you're gonna get out of it I like to think of this just the scene",
    "start": "2370240",
    "end": "2376060"
  },
  {
    "text": "was like if I was a structural engineer I would be fired if I dunno the tensile",
    "start": "2376060",
    "end": "2381430"
  },
  {
    "text": "strength of steel the compression strength of concrete if I'm gonna start building stuff you don't need to know",
    "start": "2381430",
    "end": "2387550"
  },
  {
    "start": "2384000",
    "end": "2424000"
  },
  {
    "text": "how to go on make concrete you don't need to know how to go and make a net work hard but you should know what it",
    "start": "2387550",
    "end": "2393430"
  },
  {
    "text": "gives you should know the characteristics of what it has and so when it comes to things like writing",
    "start": "2393430",
    "end": "2398890"
  },
  {
    "text": "those low tests and performance tests I write them for the infrastructure as well so I know what it is then I know if",
    "start": "2398890",
    "end": "2404350"
  },
  {
    "text": "I update a driver if I update a third party come opponent on all of the sudden things have changed I can find it fast",
    "start": "2404350",
    "end": "2411610"
  },
  {
    "text": "feedback cycles and get and I know what is going on and you can also then sensibly capacity plan for your software",
    "start": "2411610",
    "end": "2418480"
  },
  {
    "text": "on top of the 52 is going to do I think it's also really important to know what happens when it breaks",
    "start": "2418480",
    "end": "2424740"
  },
  {
    "start": "2424000",
    "end": "2460000"
  },
  {
    "text": "so as you load test things to the point of breaking does it fall apart",
    "start": "2424740",
    "end": "2430110"
  },
  {
    "text": "or does it sort of follow curve I just can't take any more and continues",
    "start": "2430110",
    "end": "2435340"
  },
  {
    "text": "nice and flat that's actually quite a nice user experience some things are",
    "start": "2435340",
    "end": "2440530"
  },
  {
    "text": "designed very well away so as I talked earlier but queues and back pressure if you designed like that you get that nice",
    "start": "2440530",
    "end": "2446740"
  },
  {
    "text": "characteristic you come up to maximum capacity and you continue a maximum capacity and you deny new requests but",
    "start": "2446740",
    "end": "2452710"
  },
  {
    "text": "everything else gets processed at the same rate much better than going from bang and",
    "start": "2452710",
    "end": "2458140"
  },
  {
    "text": "falling off after a dare curve you find that out but testing things to breaking point so do it with your own",
    "start": "2458140",
    "end": "2465310"
  },
  {
    "start": "2460000",
    "end": "2482000"
  },
  {
    "text": "code do it with third-party components is there it's actually quite good fun it's a really good way of firing up",
    "start": "2465310",
    "end": "2470470"
  },
  {
    "text": "people in the team and giving them some funds and passion and what they're doing and they learn awful lot and your code",
    "start": "2470470",
    "end": "2477550"
  },
  {
    "text": "and the system's all gets so solid as a result of doing these type of things a",
    "start": "2477550",
    "end": "2483180"
  },
  {
    "start": "2482000",
    "end": "2500000"
  },
  {
    "text": "really interesting one I find Kenneth here at the bottom is when you get failures and your god hot suave",
    "start": "2483180",
    "end": "2489130"
  },
  {
    "text": "components what's the behavior when the replica takes over because quite often people test feel",
    "start": "2489130",
    "end": "2497020"
  },
  {
    "text": "over in different scenarios usually when there's no load in their system it's really important to test those at",
    "start": "2497020",
    "end": "2503980"
  },
  {
    "start": "2500000",
    "end": "2522000"
  },
  {
    "text": "the point of stress because quite often fun you get cascading failures and systems and it's usually under extreme",
    "start": "2503980",
    "end": "2510310"
  },
  {
    "text": "stress so if you find something that overheats and the thermals cause a problem it's usually when it's under",
    "start": "2510310",
    "end": "2516430"
  },
  {
    "text": "extreme load it's not going to happen whenever it's just sitting there idle not doing very much",
    "start": "2516430",
    "end": "2522420"
  },
  {
    "start": "2522000",
    "end": "2600000"
  },
  {
    "text": "so then I kind of finish with a very different sort of point and that is avoid being commercial I'm a group",
    "start": "2523110",
    "end": "2531130"
  },
  {
    "text": "believing you should understand the business you're working on because if you understand the business you",
    "start": "2531130",
    "end": "2536200"
  },
  {
    "text": "understand the demands of that business what are the character six-two what your systems going to be used if you get",
    "start": "2536200",
    "end": "2542180"
  },
  {
    "text": "passionate about that and knowing about it it just informed so many of your decisions so much better about how the",
    "start": "2542180",
    "end": "2548900"
  },
  {
    "text": "system should work how your low tests should work by different things work and quite often defying people working",
    "start": "2548900",
    "end": "2555560"
  },
  {
    "text": "with the business and often not working very very well or as well as there could be and I've got a kind of golden rule",
    "start": "2555560",
    "end": "2562340"
  },
  {
    "text": "that some of my teams is and any interaction with the business no matter what they ask for no is not a valid",
    "start": "2562340",
    "end": "2569510"
  },
  {
    "text": "answer because it's not it's it's really unfair for just saying no you can say",
    "start": "2569510",
    "end": "2574940"
  },
  {
    "text": "yes we can do it and here's the consequences of doing that those consequences might be very difficult to",
    "start": "2574940",
    "end": "2580250"
  },
  {
    "text": "deal with but that's an informed respectful conversation just saying no and pushing back get you into a way of",
    "start": "2580250",
    "end": "2586760"
  },
  {
    "text": "working with the business that you don't find out all the things that you need to know like what other demands the systems",
    "start": "2586760",
    "end": "2592280"
  },
  {
    "text": "gonna put on you what are is gonna happen next month for month after so you're kind of ready for dealing with",
    "start": "2592280",
    "end": "2597350"
  },
  {
    "text": "that so breaking down those barriers there's some really simple things you can do to how building those",
    "start": "2597350",
    "end": "2604430"
  },
  {
    "start": "2600000",
    "end": "2647000"
  },
  {
    "text": "relationships and getting and working right like a classic one is get your team leads - just make sure they're",
    "start": "2604430",
    "end": "2610490"
  },
  {
    "text": "going have a regular coffee with their counterparts on the business side understanding their problems what",
    "start": "2610490",
    "end": "2615560"
  },
  {
    "text": "they're facing and making sure you're building great software that actually suits with their innate eat together",
    "start": "2615560",
    "end": "2621110"
  },
  {
    "text": "it's a really primal thing seriously it sounds so dumb if you work",
    "start": "2621110",
    "end": "2628400"
  },
  {
    "text": "and you go and get a sandwich you come back to your desk and you don't even eat with your own team never mind your",
    "start": "2628400",
    "end": "2633650"
  },
  {
    "text": "extended team in the business I find you probably got quite a dysfunctional company that doesn't work anywhere near",
    "start": "2633650",
    "end": "2639200"
  },
  {
    "text": "as well as a team that spend time together care about each other and just do some of the primal things like just",
    "start": "2639200",
    "end": "2645590"
  },
  {
    "text": "having meals when you do that you quite often find informal structures grow that work",
    "start": "2645590",
    "end": "2653000"
  },
  {
    "start": "2647000",
    "end": "2691000"
  },
  {
    "text": "really really well for building that team's sort of philosophy and the best way to get something done is by",
    "start": "2653000",
    "end": "2658640"
  },
  {
    "text": "influence rather than Authority and working through all of that and especially on the non-functional side of",
    "start": "2658640",
    "end": "2664520"
  },
  {
    "text": "things you really need to do that in a kind of subtle way because it's it's a give-and-take and no one really knows",
    "start": "2664520",
    "end": "2670310"
  },
  {
    "text": "the right answer so you've got to work together it's like what is the gonna be at the end of this year you need to work",
    "start": "2670310",
    "end": "2676730"
  },
  {
    "text": "with the business you need to know what they've got plans coming up on product promotion on marketing just what ideas",
    "start": "2676730",
    "end": "2682700"
  },
  {
    "text": "the guys for the sales pipeline and then you can start working on that together with them I think it's kind of final",
    "start": "2682700",
    "end": "2688310"
  },
  {
    "text": "point this key to getting this have fun I'm actually doing a lot of us doing the",
    "start": "2688310",
    "end": "2693440"
  },
  {
    "start": "2691000",
    "end": "2750000"
  },
  {
    "text": "things like breaking the system right in the task knowing how it's doing getting the numbers up and graphing and working with the business and having fun it",
    "start": "2693440",
    "end": "2700220"
  },
  {
    "text": "really helps improve it and I had people talk about them because performance is a great thing that you can go and get",
    "start": "2700220",
    "end": "2705500"
  },
  {
    "text": "public talks and stuff from now on so getting people so haven't worked out how to drive the Linux TCP stack to handle",
    "start": "2705500",
    "end": "2712340"
  },
  {
    "text": "and million concurrent connections makes a great talk but you learn so much doing that and you'll write much better",
    "start": "2712340",
    "end": "2717590"
  },
  {
    "text": "systems as a result so in that point I'll finish and take questions",
    "start": "2717590",
    "end": "2723730"
  },
  {
    "start": "2750000",
    "end": "2803000"
  },
  {
    "text": "yes it it pledged to the first point that I made that we want to work at what",
    "start": "2750420",
    "end": "2756340"
  },
  {
    "text": "is the economics per node when if you're not having lots of management overhead like lock contention and managing that",
    "start": "2756340",
    "end": "2762280"
  },
  {
    "text": "you can work out quite well what is the total number of units of work you can do",
    "start": "2762280",
    "end": "2767350"
  },
  {
    "text": "per second or per cycle on your machine so that gives you a really good metric the thing you've got to mix in with that",
    "start": "2767350",
    "end": "2772810"
  },
  {
    "text": "is the ability to shard so if it's just the read style of kiss will you just",
    "start": "2772810",
    "end": "2777820"
  },
  {
    "text": "send the stream of events elsewhere and you CQRS the right side you have to shard so you want to look at well how do",
    "start": "2777820",
    "end": "2784000"
  },
  {
    "text": "I show am i dated I should have showed up a customer buy product by Dale type whatever it's usually one of those three",
    "start": "2784000",
    "end": "2789610"
  },
  {
    "text": "dimensions I had a friend of mine a few years ago coined the phrase of saying everything in the business world breaks",
    "start": "2789610",
    "end": "2796270"
  },
  {
    "text": "down the people's stuff and deals and you can usually chard by one of those dimensions and it scales up nicely I do",
    "start": "2796270",
    "end": "2804190"
  },
  {
    "start": "2803000",
    "end": "2905000"
  },
  {
    "text": "do login I write my own logging and I find this to be a common thing so I",
    "start": "2804190",
    "end": "2810160"
  },
  {
    "text": "quite often unfixing performance problems logging is usually one of the first things I am fixing for people so",
    "start": "2810160",
    "end": "2816960"
  },
  {
    "text": "what's this face and probably before the end of this year there will be a new high performance logging framework",
    "start": "2816960",
    "end": "2822670"
  },
  {
    "text": "available my goal is to have it completely low touch sort of sub hundred nanoseconds cost for",
    "start": "2822670",
    "end": "2830470"
  },
  {
    "text": "log message with no contention issues but also people to do nice things like when we start running in clustered",
    "start": "2830470",
    "end": "2837100"
  },
  {
    "text": "environments especially virtualized you typically don't have local storage so you don't want to be trying to use",
    "start": "2837100",
    "end": "2842200"
  },
  {
    "text": "traditional logging mechanisms that that's these so having the ability to send logs back to a central aggregation",
    "start": "2842200",
    "end": "2847210"
  },
  {
    "text": "point and deal with them efficiently and deal with them in a very friendly way because a lot of people who write",
    "start": "2847210",
    "end": "2852220"
  },
  {
    "text": "loggers tend to have very little machine affinity or sympathy going on so whenever I'm logging through large",
    "start": "2852220",
    "end": "2858910"
  },
  {
    "text": "batches of data I want to apply adaptive Bachchan's more botching to what's going on so if I get a burst of traffic going",
    "start": "2858910",
    "end": "2865660"
  },
  {
    "text": "through will underline in things like say the Linux file system I can use things like sand file so I can map so",
    "start": "2865660",
    "end": "2872229"
  },
  {
    "text": "it's a memory map data that I've written a lot of data into across to a file for archiving I don't - a socket the sand",
    "start": "2872229",
    "end": "2878289"
  },
  {
    "text": "elsewhere and those sort of things are going to start becoming available because everybody's just doing these",
    "start": "2878289",
    "end": "2884199"
  },
  {
    "text": "sorts of things over and over again and Finance for - everybody I know ends up building a framework that does something",
    "start": "2884199",
    "end": "2890079"
  },
  {
    "text": "like this but it's happening elsewhere - anyone who's got significant volumes that can't use the traditional login",
    "start": "2890079",
    "end": "2896140"
  },
  {
    "text": "methods thank you very much [Applause]",
    "start": "2896140",
    "end": "2904150"
  }
]