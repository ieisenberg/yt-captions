[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "Welcome to GOTO Unscripted. We are here \nat the GOTO Conference in the wonderful,   fabulous Amsterdam. Today I'm joined \nby Ben Ellerby. Ben, welcome to GOTO. ",
    "start": "13840",
    "end": "23119"
  },
  {
    "text": "Thanks so much for having me.\nAbsolutely. So you are into   transformation. You are helping customers go \ninto the cloud. You work for Elias, which is  ",
    "start": "23120",
    "end": "30880"
  },
  {
    "start": "25000",
    "end": "192000"
  },
  {
    "text": "a consultancy. What are people's journeys to the \ncloud? And I know you talk about modern cloud.  ",
    "start": "30880",
    "end": "36160"
  },
  {
    "text": "What does that mean? What are the struggles \npeople are having and how are you helping?  I mean, I think everyone's sort of at a different \npoint on that journey. I think a lot of people  ",
    "start": "36160",
    "end": "43719"
  },
  {
    "text": "have, you know, lift and shifted to the cloud, \nbut are still wanting to get even more return on   investment. Some people have kind of stayed \nback and waited to see how things go in the  ",
    "start": "43720",
    "end": "50680"
  },
  {
    "text": "cloud landscape. And they're now looking to make \nthat move. I've worked with the airlines that have   moved from fully on-premise to fully serviced and \nevent-driven in AWS. And I've also worked with  ",
    "start": "50680",
    "end": "59640"
  },
  {
    "text": "organizations that have lifted and shifted to AWS, \nbut are then trying to get even more benefits,   trying to break down monoliths, trying to \nrestructure teams and trying really to focus  ",
    "start": "59640",
    "end": "67479"
  },
  {
    "text": "on reducing total cost of ownership. But also \nfocusing on the time to value, the time from  ",
    "start": "67480",
    "end": "72600"
  },
  {
    "text": "an idea in the organization to customer feedback \nin production. What are the barriers to that and   how can they use cloud to reduce that time?\nI mean, it seems like for some companies that  ",
    "start": "72600",
    "end": "82120"
  },
  {
    "text": "can be quite a journey and that can be long. \nAnd I'm sure there are many sorts of hills,   valleys, and pitfalls that they're going \nthrough. How do people sort of start to  ",
    "start": "82120",
    "end": "90080"
  },
  {
    "text": "even think or to work out what they need to do \nor, you know, where do they start the journey?  I think, unfortunately, a lot of them see it as a \nprogram with a fixed date where everything shuts  ",
    "start": "90080",
    "end": "99320"
  },
  {
    "text": "down in our data center and everything's on in \nthe cloud or we stop having our monolith and   then we have all of our beautiful microservices. \nAnd that big bang approach is ill-advised. I've  ",
    "start": "99320",
    "end": "108640"
  },
  {
    "text": "seen it fail many times and often it creates \na lot of frustration, a lot of waste. Instead,   I'm a big proponent of a more agile approach, a \nstrangler fig pattern. And I often am an advocate  ",
    "start": "108640",
    "end": "118560"
  },
  {
    "text": "of the framework, minimum viable migrations.\nJust strangler fig. Can you explain what   strangler fig is for people who may not know?\nStrangler fig is a pattern coming out of Martin  ",
    "start": "118560",
    "end": "128200"
  },
  {
    "text": "Fowler. And it refers to the strangler fig, which \nis a plant in Australia that wraps around a tree  ",
    "start": "128200",
    "end": "135080"
  },
  {
    "text": "and slowly breaks it down. And I think the \nimportant part is taking it piece by piece.  ",
    "start": "135080",
    "end": "140600"
  },
  {
    "text": "Rather than taking the whole, taking slices. And I \nthink Martin Fowler regrets strangler fig because   it sounds so aggressive. We're going to strangle \nthe monolith. But instead, it's actually how do we  ",
    "start": "140600",
    "end": "150000"
  },
  {
    "text": "gradually decompose the monolith? And I'm a big \nadvocate of taking those vertical slices, saying,  ",
    "start": "150000",
    "end": "155920"
  },
  {
    "text": "okay, we've got a really complex e-commerce \nsystem, built for 20 years. I'm struggling.   It's on-premise. Let's take payments. Let's \nbreak it out. Let's move it into the cloud.  ",
    "start": "155920",
    "end": "163800"
  },
  {
    "text": "And let's have two systems living in parallel \nand gradually break it down. And in that way,   you can release something in eight weeks and see \nif it works. Test assumptions. Pull risk forwards.  ",
    "start": "163800",
    "end": "172720"
  },
  {
    "text": "Rather than have a two-year modernization program \nwith a big day where everyone is very nervous. You   flick the switch and then we realize there \nwas a big issue. We didn't test something,  ",
    "start": "172720",
    "end": "180560"
  },
  {
    "text": "and we have to roll back. I think instead we need \nto take it as iterative and evolutionary. And I   think that's key because it's not just moving to \nthe cloud. It's moving to the modern cloud. And  ",
    "start": "180560",
    "end": "188319"
  },
  {
    "text": "of course, the modern cloud is going to always \nchange. It's the very nature of being modern. So what is a modern cloud? What would you \nthink about or define the modern cloud? ",
    "start": "188320",
    "end": "195840"
  },
  {
    "start": "192000",
    "end": "596000"
  },
  {
    "text": "It's a big question. I think modern cloud is right \nnow the move to seeing compute and storage and  ",
    "start": "195840",
    "end": "203280"
  },
  {
    "text": "other fundamental building blocks as a utility \nor a commodity. To trust the cloud provider to   run your computer for you and really focus on your \ndifferentiating value, your application code. And  ",
    "start": "203280",
    "end": "214600"
  },
  {
    "text": "also using things like Cognito for authentication \ninstead of building it yourself. Trusting the   cloud provider, using the cloud provider. But then \nthere is a challenge in just writing your bespoke  ",
    "start": "214600",
    "end": "223640"
  },
  {
    "text": "code. The cloud is building these things at scale. \nThere has to be a bridge between them. And then   there's still some complexity there. Over time, \nI think they'll get even simpler. But right now,  ",
    "start": "223640",
    "end": "232120"
  },
  {
    "text": "I think it's building event-driven architectures, \nbuilding serverless and moving undifferentiated   heavy lifting to the cloud provider and focusing \nyour company on its differentiating value. ",
    "start": "232120",
    "end": "242480"
  },
  {
    "text": "But moving to that is a big change for \norganizations that typically have a monolith,   typically have built a lot of stuff themselves. \nAnd it's saying goodbye to some of that stuff,  ",
    "start": "242480",
    "end": "250120"
  },
  {
    "text": "which is difficult. But it's also breaking down \nsystems that have been built over decades by   multiple teams. So the path to the modern \ncloud is hard. But I think what the modern  ",
    "start": "250120",
    "end": "257640"
  },
  {
    "text": "cloud is right now is quite clear. But it's \ngoing to change. It's going to evolve. So I   think your approach to adopt modern cloud today \nhas to be an approach to adopt modern cloud in  ",
    "start": "257640",
    "end": "265440"
  },
  {
    "text": "10 years. It has to be an evolutionary approach \nwhere you gradually move pieces to what are the   modern parts rather than have a one-step jump \nfrom not modern to modern. If that makes sense. ",
    "start": "265440",
    "end": "275520"
  },
  {
    "text": "YI know you're a big proponent of serverless. \nWhat are the objections when people are   starting this journey and they, you know, \nthere's obviously an implicit trust to hand,  ",
    "start": "275520",
    "end": "284080"
  },
  {
    "text": "you know, trust over to a cloud provider to \nprovide these kinds of managed services. What   kind of things do people get tripped up with \nand how would you help them understand that? ",
    "start": "284080",
    "end": "294560"
  },
  {
    "text": "I often get dropped into organizations or me \nand my team get dropped into organizations   that have started a journey to modernize \nor about to start a journey to modernize  ",
    "start": "294560",
    "end": "301240"
  },
  {
    "text": "and are struggling to actually get results. And \noften, you know, it's the classic stuff of is  ",
    "start": "301240",
    "end": "306639"
  },
  {
    "text": "there buy in? Does the board agree? Does \nthe product team and the tech team have a   joint vision? Is there joint resourcing? \nWhat's the plan? So a lot of it's that. ",
    "start": "306640",
    "end": "314440"
  },
  {
    "text": "So now that's technical. That's a, you \nknow, people and organizational thing.  Unfortunately. A lot of my job \nhas become fixing people... ",
    "start": "314440",
    "end": "320426"
  },
  {
    "text": "Psychological.\n...and organizations, which is,   you know, not necessarily what my computer \nscience background helps with. But until you  ",
    "start": "320426",
    "end": "326800"
  },
  {
    "text": "get that right, none of the technology changes \nreally matter. So a lot of it's getting the sort   of socio part in place. A lot of it's getting a \ntechnical part in place. And we join that together  ",
    "start": "326800",
    "end": "335680"
  },
  {
    "text": "in what I call the serverless staircase, which is \nsort of a socio-technical blueprint for adopting   cloud. and that starts with getting...\nSo social technical. So, you know,  ",
    "start": "335680",
    "end": "342000"
  },
  {
    "text": "talking about the people and the technology \ntogether to migrate and modernize.  To the horror of engineers, yes.\nOkay. ",
    "start": "342000",
    "end": "348000"
  },
  {
    "text": "And that staircase for me is getting the vision \nright. So what is the North Star we're working   towards and aligning an organization on that.\nSo is that when you're talking about, you know,  ",
    "start": "348000",
    "end": "354840"
  },
  {
    "text": "when there's not alignment with the \nboard and things like that, is that,   you know, having a North Star vision with \nyour company that you know the end state  ",
    "start": "354840",
    "end": "361680"
  },
  {
    "text": "you're heading towards and have that clear.\nExactly. And getting product and tech to work   together on the end state as one team. The second \npart then is really making sure you have the right  ",
    "start": "361680",
    "end": "370840"
  },
  {
    "text": "topology. This is the architectural topology, what \nyou're trying to get to, but also what is the team   topology, the structure of teams to facilitate \nyou to get there. Then it's how do you change  ",
    "start": "370840",
    "end": "379920"
  },
  {
    "text": "an organization's skill set? So how do you provide \npsychological safety? How do you provide learning   paths? Learning service is a big step for someone \nwho's been doing a lot of sort of monolithic work  ",
    "start": "379920",
    "end": "389080"
  },
  {
    "text": "in, you know, maybe a legacy JAR in the framework \nfor a long time. It's a big step change and it's  ",
    "start": "389080",
    "end": "394159"
  },
  {
    "text": "a big change for traditional infortunes as well.\nAnd then it's really how do we take a progressive   approach. That NPM. That structure that I talked \nabout. That is step four. How do we take vertical  ",
    "start": "394160",
    "end": "402760"
  },
  {
    "text": "slices and show results in eight weeks, rather \nthan the mistake lots of people make, saying,   in two year's time, it's all going to be done. \nFlip the switch and it doesn't work. And then  ",
    "start": "402760",
    "end": "410720"
  },
  {
    "text": "finally, the most boring parts, but the most \nimportant part, governance. How do you have   tech and product working together to measure \nthe progress of a modernization, to see the  ",
    "start": "410720",
    "end": "419800"
  },
  {
    "text": "impact on DORA metrics, to see the impact on \ntime to value, to see the impact on total cost   of ownership and to measure that over time?\nThat's interesting. So those are not,  ",
    "start": "419800",
    "end": "428720"
  },
  {
    "text": "because lots of people think of governance \nas controls and security and auditors and all   this kind of thing. But you're actually seeing \ngovernance from a software delivery perspective  ",
    "start": "428720",
    "end": "436840"
  },
  {
    "text": "and sort of being agile and DORA metrics and \nthat kind of thing, which is interesting.  I mean, all the other stuff is \nimportant, it has to happen. ",
    "start": "436840",
    "end": "442680"
  },
  {
    "text": "It's included as well.\nBut I think for a modernization,   if you're trying to move an organization, make \nhuge changes, decouple a monolith, break up teams,  ",
    "start": "442680",
    "end": "451720"
  },
  {
    "text": "restructure, maybe move product into teams \ndirectly. It's a huge change. And I think   the organization needs to see the results and \nalso needs to make sure the results are actually  ",
    "start": "451720",
    "end": "459400"
  },
  {
    "text": "happening. And that's the North Star. It's a \nstaircase, but it's also kind of a certain.   You define the vision. So you need to actually \ncheck you're moving towards that vision. But yeah,  ",
    "start": "459400",
    "end": "467680"
  },
  {
    "text": "I think it's a lot of actually making sure the \nreturn on investment is felt and seen throughout   a modernization, not just expected at the end. \nAnd that's why I focus on the actual tangible  ",
    "start": "467680",
    "end": "476680"
  },
  {
    "text": "business outcome, reduce total cost of ownership, \ndecrease time to value. We have to measure that   through modernization, not just at the end.\nSo what kind of things do you measure that  ",
    "start": "476680",
    "end": "485160"
  },
  {
    "text": "you would put into this sort of feedback loop?\nIt depends. It depends on what the vision is.   If it's time to value, there are proxies. There \nis a deployment frequency is a really good proxy.  ",
    "start": "485160",
    "end": "494159"
  },
  {
    "text": "It's not perfect. You can still measure time \nto value. It's a little bit complicated. But   things like deployment frequency are a good \nway of doing it. Or for other organizations,  ",
    "start": "494160",
    "end": "501800"
  },
  {
    "text": "the North Star is really having downtime issues \nimpacting SLAs. A great sort of proxy to that is  ",
    "start": "501800",
    "end": "507400"
  },
  {
    "text": "MTTR, Mean Time to Recover. How quickly, when's \nan incident, do you recover? This has a financial   impact because nearly any organization can \nput a dollar value on an hour of downtime. ",
    "start": "507400",
    "end": "516880"
  },
  {
    "text": "I was once working with a travel company and \nthere was, I think, 300,000 per hour of downtime  ",
    "start": "516880",
    "end": "522240"
  },
  {
    "text": "in lost revenue. That's a good impact when their \ndowntime was, their Mean Time to Recover was 14  ",
    "start": "522240",
    "end": "528480"
  },
  {
    "text": "hours. Bringing that down to 20 minutes, that's \na huge financial saving that the commercial team,   the product team can get behind. And then \nthe engineers who've been working hard on  ",
    "start": "528480",
    "end": "536920"
  },
  {
    "text": "modernization are not seen as the people who \naren't delivering features and working on the   IT project, but they're the people delivering \nhuge financial benefits to the organization. So  ",
    "start": "536920",
    "end": "545639"
  },
  {
    "text": "there's some examples, I guess, of proxies to that \noverall North Star that we're working towards. ",
    "start": "545640",
    "end": "550920"
  },
  {
    "text": "And then you talked about the sort of people \norganization and changing the organizational   structure and maybe putting product in teams and \neverything. I mean, that sounds like quite an  ",
    "start": "550920",
    "end": "560320"
  },
  {
    "text": "emotive and complex thing to do in a company \nbecause it's not just moving tech around and   changing libraries and doing stuff in \nthe cloud. How do people approach that  ",
    "start": "560320",
    "end": "569760"
  },
  {
    "text": "with that psychological safety that you mentioned?\nI think a lot of people don't and it's a lot of  ",
    "start": "569760",
    "end": "575160"
  },
  {
    "text": "the cause for failure. I think starting on the \nright note is key. I think taking small steps  ",
    "start": "575160",
    "end": "580519"
  },
  {
    "text": "helps a lot. It's no longer we're going to rework \neverything. I say, we're going to take payments.   We're going to move it to a more modern tech \nstack. It's going to introduce our Mean Time  ",
    "start": "580520",
    "end": "586800"
  },
  {
    "text": "to Recover. It's going to have this business \nimpact. Yes, these individuals are going to   move to be a different type of team. They're \ngoing to move to work in a different way and  ",
    "start": "586800",
    "end": "593720"
  },
  {
    "text": "we're going to see the benefits. And then everyone \nsees, okay, no, that worked. Let's do it again. Are there ways to sort of incentivize teams \nand people to sort of be excited about this  ",
    "start": "593720",
    "end": "600280"
  },
  {
    "start": "596000",
    "end": "877000"
  },
  {
    "text": "change? I mean, how would people do that?\nI think engineers are excited to learn new  ",
    "start": "600280",
    "end": "605600"
  },
  {
    "text": "technology. It's fun and exciting, but they \nneed to feel safe in doing it. If they're in  ",
    "start": "605600",
    "end": "611399"
  },
  {
    "text": "an organization where the product or commercial \nteams are yelling at them because they're not  ",
    "start": "611400",
    "end": "616640"
  },
  {
    "text": "delivering features fast enough. And I'm saying, \nand now you need to go learn a new tech stack.   And then you're going to rebuild the stuff you've \nalready built. And then you can build the features  ",
    "start": "616640",
    "end": "623000"
  },
  {
    "text": "that you're being yelled at for. Well, there's \nno way they want to do that. So I think it's   making sure the organization gives them the space, \nthe time, the resources, the access to experts,  ",
    "start": "623000",
    "end": "631200"
  },
  {
    "text": "the pair program with them to make them, \nto help them to understand the technology.  So it's making sure there's a psychological \nsafety in place and it's tying people together  ",
    "start": "631200",
    "end": "639360"
  },
  {
    "text": "to that North Star vision. That governance \nnot only to look at what's happening and   make sure we're going to succeed, but also \nto communicate throughout the organization,  ",
    "start": "639360",
    "end": "646080"
  },
  {
    "text": "to show the wins and celebrate the efforts. I \nthink it comes down to safety and resourcing  ",
    "start": "646080",
    "end": "651600"
  },
  {
    "text": "more than it does ever encouraging an engineer \nto learn something new because nearly every   engineer is an engineer because they like learning \nsomething new. That's never really the challenge. ",
    "start": "651600",
    "end": "659240"
  },
  {
    "text": "I mean, you being a proponent of serverless \nand, you know, event-driven architectures is   also a different architectural model. You talked \nabout sort of costing and this kind of thing. Is  ",
    "start": "659960",
    "end": "668959"
  },
  {
    "text": "going through this journey a financial viable \nthing. Anything that's change, anything that's   new is going to impact the way, you know, \nit costs to change. Is the benefit at the  ",
    "start": "668960",
    "end": "678680"
  },
  {
    "text": "end generally worth it or how would you sort of \nsell that part of doing this Upfront Investment? ",
    "start": "678680",
    "end": "684320"
  },
  {
    "text": "Well, as a consultant working in space, I'd \nsay the benefits are definitely worth it.  Of course, yeah.\nBut no, I think the benefits are worth  ",
    "start": "684320",
    "end": "689640"
  },
  {
    "text": "it. And if they're not, then you don't have the \nvision. You don't start doing it. I think you   need to be clear on what the benefits are.\nSo being clear on that North Star in the  ",
    "start": "689640",
    "end": "696600"
  },
  {
    "text": "very beginning to even understand \nwhether you even do this journey.  Exactly. And then yeah, cost is an interesting \nquestion, right? Because there's the cost of  ",
    "start": "696600",
    "end": "703680"
  },
  {
    "text": "the new architecture that's serverless. You've \ngot to work with teams to explain FinOps. How,  ",
    "start": "703680",
    "end": "709320"
  },
  {
    "text": "you know, the cost of using something will vary as \na parent paper use model and the fact also paying  ",
    "start": "709320",
    "end": "714960"
  },
  {
    "text": "for some things to be baked in. We're paying for \nscalability to be baked in. We're not doing that   ourselves. There's a whole education piece \nabout total cost of ownership that a CFO of  ",
    "start": "714960",
    "end": "722800"
  },
  {
    "text": "an organization that just typically has had \nIT as a line item. It needs some work to get  ",
    "start": "722800",
    "end": "728320"
  },
  {
    "text": "them solving that journey. But they often if you \nsort of explain it in terms of CAPEX and OPEX,   they often quickly understand. So I think it's \nhelping the organization understand the cost  ",
    "start": "728320",
    "end": "736600"
  },
  {
    "text": "profile of what they're moving to, helping \nthe organization to understand the cost   of what they're doing, and then helping them \nunderstand the end outputs. Any modernization  ",
    "start": "736600",
    "end": "745600"
  },
  {
    "text": "project takes time. That's the biggest cost.\nOne thing I typically do with organizations   that are working on their sort of case for \nmodernization. So it's often a board paper  ",
    "start": "745600",
    "end": "754480"
  },
  {
    "text": "for the executive team of large organizations \nto apply what I call an NFP model, new feature  ",
    "start": "754480",
    "end": "760000"
  },
  {
    "text": "productivity. So we sort of come up with a proxy. \nOkay, an average developer is currently 0.7 times  ",
    "start": "760000",
    "end": "766520"
  },
  {
    "text": "productive because the baseline is one, when \nthings were good at the start of the company,   when there wasn't as complexity when we were \nsmall, we were a fast team. But there's a lot  ",
    "start": "766520",
    "end": "773680"
  },
  {
    "text": "of tight coupling in the monolithic system \nthat's slowing them down. Added on to that,   there might be a failed modernization program \nin place which drops that down to 0.5. We then  ",
    "start": "773680",
    "end": "782480"
  },
  {
    "text": "multiply that by the number of engineers \ndelivering in that in that environment.   And we can have a proxy for productivity.\nNow then we can model at the end stage  ",
    "start": "782480",
    "end": "790600"
  },
  {
    "text": "with everyone working this fully serverless event \ndriven utopia. We can look at studies. We can look   at past experience and we see about a 33% increase \nin efficiency. So we're moving up to 1.33. Now in  ",
    "start": "790600",
    "end": "801399"
  },
  {
    "text": "the interim, we're not just going in one day, \nnow we're 1.33. We're going to put some people   on modernizing, some people on learning, some \npeople on rebuilding. So new feature productivity  ",
    "start": "801400",
    "end": "810440"
  },
  {
    "text": "is going to dip a little bit. But then it's going \nto move back up and we actually model that as a   graph. And those graphs are very useful way to \ntalk about different scenarios. Do you want to  ",
    "start": "810440",
    "end": "817360"
  },
  {
    "text": "start with putting all 60 of your engineers on \nthe modernization effort and drop NFP down? No,   the product team is going to be very frustrated.\nDo you want to take five people, move them to a  ",
    "start": "817360",
    "end": "825560"
  },
  {
    "text": "good level of productivity, then take another five \npeople and actually level that drop down? You can   bring in external people to help also level that. \nBut I think it's important to model that out and  ",
    "start": "825560",
    "end": "834640"
  },
  {
    "text": "get tech and product to agree on the scenario they \nwant to go through when it comes to productivity.   Because yes, modernization is expensive. \nYes, you might use some consultants. Yes,  ",
    "start": "834640",
    "end": "842440"
  },
  {
    "text": "you're going to spend some money on cloud and \nyour on-premise is going to be an overlap. And   cloud providers have funding programs that can \nhelp with that. But I think the key thing is the  ",
    "start": "842440",
    "end": "850360"
  },
  {
    "text": "productivity is a distraction to the organization. \nAnd that's how we apply that NFP model to try   and map that out and try and decrease the impact \nproductivity throughout the modernization program. ",
    "start": "850360",
    "end": "859440"
  },
  {
    "text": "That's interesting. So it's a very structured \napproach rather than just throwing engineers at   the problem or even throwing product managers \nat the problem. All at once you're going to do  ",
    "start": "859440",
    "end": "867200"
  },
  {
    "text": "the situative approach on the tech and also on the \npeople to modernize. Modernize the people as well.  We said that it's a people issue, but we're still \nengineers. So it's a pretty mathematical approach.",
    "start": "867200",
    "end": "876320"
  },
  {
    "start": "877000",
    "end": "1297000"
  },
  {
    "text": "You mentioned enough about microservices and \nmonoliths and breaking that kind of down. What   are you seeing customers doing for that? \nBecause there also is a bit of a backlash  ",
    "start": "878360",
    "end": "887320"
  },
  {
    "text": "against microservices, whether people have gone \ntoo crazy on microservices or not. You know,  ",
    "start": "887320",
    "end": "892960"
  },
  {
    "text": "what is it even nowadays in 2024, you know, 10 \nyears of microservices. I spoke to Sam Newman  ",
    "start": "892960",
    "end": "899040"
  },
  {
    "text": "yesterday and he was writing the microservices \nbook 10 years ago. So he said it made him feel   old. But yeah, the microservices journey. What \ndo people think about that now? And when can  ",
    "start": "899040",
    "end": "908279"
  },
  {
    "text": "it go wrong? And what would the reasons be \nfor doing microservices in the modern cloud? ",
    "start": "908280",
    "end": "914680"
  },
  {
    "text": "I think, you know, microservices somewhat feel \nlike second nature to us in engineering. But when   we're talking about, you know, companies that \nare moving to modernize to solve time to value,  ",
    "start": "914680",
    "end": "924720"
  },
  {
    "text": "for instance. The time it takes from an idea, you \nknow, in the organization to customer feedback and   production. They're frustrated by how slow things \nare taking to build. And that's often due to a  ",
    "start": "924720",
    "end": "933160"
  },
  {
    "text": "monolithic code base or monolithic system. But \nit's not due to the fact it's a monolith. It's due   to the fact it's a monolith that was built quickly \nand iteratively and the company's changed a lot.  ",
    "start": "933160",
    "end": "942399"
  },
  {
    "text": "And the domain modeling maybe wasn't done at the \nstart. And also the domain has changed. It might   have been a company that X that now does Y and \nthere's a load of legacy code for X that sort of  ",
    "start": "942400",
    "end": "951240"
  },
  {
    "text": "is kind of used in Y. But it's all very confusing.\nOne of the ways we try and show this to teams,  ",
    "start": "951240",
    "end": "957360"
  },
  {
    "text": "because obviously, you know, it's their baby. \nThey built it. Some of them were there at the   start. We're not trying to say the monolith that \nthey built is bad. It's to become legacies to have  ",
    "start": "957360",
    "end": "965280"
  },
  {
    "text": "succeeded. If the company failed, it wouldn't \nbe legacy. It wouldn't exist. The legacy is a   success of what they did. But it's time for sort \nof the next chapter of that. And typically, what  ",
    "start": "965280",
    "end": "975079"
  },
  {
    "text": "we do is analyze the code base. So we take the \ncommit history of everyone in the organization,   and we group it into the teams that they're in. \nWe then model that over time and we can build  ",
    "start": "975080",
    "end": "983680"
  },
  {
    "text": "a model where you can see the code base. You \ncan see the different areas, maybe in Django,   the different modules. And you can see little dots \nof color depending on which team made changes. And  ",
    "start": "983680",
    "end": "993760"
  },
  {
    "text": "if you see an area where all the dots are green \nfrom one team, it's fine. One team is making   changes to one area. Highly effective. If you see \nan area with dots of lots of different colors,  ",
    "start": "993760",
    "end": "1002240"
  },
  {
    "text": "it's a huge friction. It's a lot of stepping \non each other's toes. When we show that picture   back to the teams that are working, they're \nlike, oh yeah, no, it's always painful to  ",
    "start": "1002240",
    "end": "1008040"
  },
  {
    "text": "touch that. Oh, I never touched that. You know, \nwe don't actually touch that. We rebuilt it over   here because we didn't want to tell them. \nBut actually, no, that bit's a nightmare. ",
    "start": "1008040",
    "end": "1013880"
  },
  {
    "text": "So I think it's important to look at the \nmonolith or the, you know, the monolithic system  ",
    "start": "1013880",
    "end": "1019240"
  },
  {
    "text": "that an organization has when you're looking to \nmove them to something else. To value that it   was really good, but also to show where the pain \npoints are and not talk about them theoretically,  ",
    "start": "1019240",
    "end": "1028799"
  },
  {
    "text": "but talk to a team and show them, remember when \nyou tried to do that commit last year and it was   a nightmare. Well, it's because everyone else is \nmaking these commits at the same time. So really,  ",
    "start": "1028800",
    "end": "1038000"
  },
  {
    "text": "visualizing the monolith structure and the \ninteraction modes on the monolith, overlaying   the current team structure, and then showing a new \nway in which that team structure will be different  ",
    "start": "1038000",
    "end": "1045920"
  },
  {
    "text": "and how those dots would be non-overlapping. It's \na really down-to-earth way to show engineers the  ",
    "start": "1045920",
    "end": "1052440"
  },
  {
    "text": "benefits of moving to a decomposed system.\nAnd I'm not saying an organization of 5  ",
    "start": "1052440",
    "end": "1058120"
  },
  {
    "text": "engineers needs 20 microservices. I'm \nsaying an organization of 200 engineers   probably needs more than one service to work \nit. And yes, you can scale a monolith. And yes,  ",
    "start": "1058120",
    "end": "1066559"
  },
  {
    "text": "you can structure an amazing monolith. If you \nstart fresh and try to think about a monolith  ",
    "start": "1066560",
    "end": "1071640"
  },
  {
    "text": "that's going to structure that many teams, \nbut that's not what people are doing. And the   cognitive load on teams now is just too high. \nAnd that's the big move to decomposition. Yes,  ",
    "start": "1071640",
    "end": "1079960"
  },
  {
    "text": "you get independent scalability. Yes, you reduce \nblast radius. Yes, you can reduce the scope of   things like PCI DSS. But largely, you're reducing \nthe amount of things someone has to think about  ",
    "start": "1079960",
    "end": "1088440"
  },
  {
    "text": "when they're trying to build their future. And \nthat's really what I try and move people towards   seeing. It's not about moving to microservices. \nIt's about making the job of the teams easier. ",
    "start": "1088440",
    "end": "1097040"
  },
  {
    "text": "I think that is a fantastic point. People get \nvery focused on the size of the microservice   or the size of the monolith when it's actually got \nnothing to do about that. It's sort of independent  ",
    "start": "1097040",
    "end": "1105320"
  },
  {
    "text": "deplorable to be able to evolve the system.\nExactly.  So, I mean, did talk about the \nsize of monoliths and size of  ",
    "start": "1105320",
    "end": "1111800"
  },
  {
    "text": "microservices. What do people get wrong?\nLots. I think people say, okay, well,  ",
    "start": "1111800",
    "end": "1118600"
  },
  {
    "text": "our code base has these modules. They're now \neach microservices and let's build that. And  ",
    "start": "1118600",
    "end": "1124640"
  },
  {
    "text": "we had this way of looking at, you know, our \ndata modeling. And that's how we're going to   do it in the new system. Modernizing the system, \ndecomposing monolith, moving to an event-driven  ",
    "start": "1124640",
    "end": "1131760"
  },
  {
    "text": "architecture. It's your unique opportunity to \ndo DDD right for the domain that you're in now.  So DDD, domain-driven design?\nDomain-driven design, yeah, exactly. And  ",
    "start": "1131760",
    "end": "1139920"
  },
  {
    "text": "it may have been used at the start of the company \nor the start of the system, but the system has   changed over time. It's a good time to reset and \nthink about what is a customer? What is an order?  ",
    "start": "1139920",
    "end": "1149080"
  },
  {
    "text": "What is a payment method? And event storming, I'm \na big fan of. It's an extension to domain-driven  ",
    "start": "1149080",
    "end": "1154480"
  },
  {
    "text": "design. Putting lots of post notes on a whiteboard \ninvolving both the tech and the business.  That's a critical part. It's not a tech \nthing. It's actually the tech people,  ",
    "start": "1154480",
    "end": "1161799"
  },
  {
    "text": "maybe for the very first time are understanding, \noh, this is what our business model is. They're   normally working in their team doing their \ntech kind of thing. And the business does  ",
    "start": "1161800",
    "end": "1169600"
  },
  {
    "text": "a lot more in understanding the bigger picture.\nIt's interesting, right, because that forces us   to step back and look at the whole system. It's \na very painful week of workshops. Best to do in  ",
    "start": "1169600",
    "end": "1177880"
  },
  {
    "text": "person, sometimes remote, which is quite painful. \nBut when you do it in person and you look back,   it's really complicated. The cognitive load \nis really high. God, this is huge. But then  ",
    "start": "1177880",
    "end": "1186080"
  },
  {
    "text": "the point is we're only looking at it all \ntogether once to agree on our language,   to agree on the areas of the system, \nto agree on the responsibilities,  ",
    "start": "1186080",
    "end": "1193919"
  },
  {
    "text": "to agree on the events which become the sort of \ninterface between systems. Then we never have   to look at that big picture again. That's \nnot true. You need to redo this periodically. ",
    "start": "1193920",
    "end": "1202480"
  },
  {
    "text": "But then you can focus on your area. You don't \nhave to think about all the complexity around   it. So I think it's interesting. I'm proposing \nreducing cognitive load by taking a step back and  ",
    "start": "1202480",
    "end": "1210919"
  },
  {
    "text": "looking at everything. So we have a high cognitive \nload to then drop it way back down and have that   split up. But yeah, I think what people don't \nget right is assuming that the way they modeled  ",
    "start": "1210920",
    "end": "1220080"
  },
  {
    "text": "a domain in the past is necessarily the right way \nto model their domain going forwards. And it's   a unique opportunity to get it right. Because \nthe split up of your banded context, the split  ",
    "start": "1220080",
    "end": "1229040"
  },
  {
    "text": "up of your systems will lead to the split up of \nyour teams applying the reverse Conway maneuver   to make sure that we get the right organization \nfor the architecture that we want. This is the  ",
    "start": "1229040",
    "end": "1237040"
  },
  {
    "text": "core time to get that domain modeling correct.\nTo reverse Conway, I mean Conway's law about   your software architecture is built basically on \nthe way that your team is organized. And reversing  ",
    "start": "1237040",
    "end": "1245960"
  },
  {
    "text": "that is deciding on your architecture and then \nformulating your teams to help deliver that.  Exactly. \"Team Topologies\" by Matthew Skelton \ncomes in detail. It's a really great technique  ",
    "start": "1245960",
    "end": "1255040"
  },
  {
    "text": "and we use it with almost every organization we're \nmodernizing. But yeah, if you have two teams that  ",
    "start": "1255040",
    "end": "1260240"
  },
  {
    "text": "you sort of run separately, we use all together \na two-system architecture. So let's think about  ",
    "start": "1260240",
    "end": "1265480"
  },
  {
    "text": "the systems that we want to have, the teams that \nwe want to have, sorry, the architects we want to   have. And then let's map our teams and structure \nour teams around that. And then that team has a  ",
    "start": "1265480",
    "end": "1274040"
  },
  {
    "text": "reduced cognitive load because all it has to think \nabout is bookings, let's say. And it's working   in a system that only deals with bookings. The \ncode is simpler. And yes, it interacts with the  ",
    "start": "1274040",
    "end": "1281840"
  },
  {
    "text": "parts of the system. But through an event-driven \narchitecture, there's not tight coupling. There's   no temporal coupling. It's not a request response. \nBut instead they're pushing out events. And I  ",
    "start": "1281840",
    "end": "1288960"
  },
  {
    "text": "think that the other thing people don't value \nenough is getting that event schema, the structure   of those events correct and basing them off \nthe business domain, not the technical domain.",
    "start": "1288960",
    "end": "1296880"
  },
  {
    "text": "I think that as soon as people in my \nexperience do event-driven architectures,   that's the sort of first hurdle. Everyone's going,  ",
    "start": "1296880",
    "end": "1302280"
  },
  {
    "start": "1297000",
    "end": "1977000"
  },
  {
    "text": "what do I put in my event? How do I structure \nmy event? And, you know, lots of things about   coupling and decoupling and everything. But \nthe consumer and producers do need to know  ",
    "start": "1302280",
    "end": "1312760"
  },
  {
    "text": "about each other in some kind of coupling. \nSo any sort of advice on event structure? ",
    "start": "1312760",
    "end": "1318520"
  },
  {
    "text": "I think event storming is a good way to get your \nlist of candidate events. We have a blog article,   EventBridge Storming, where we apply that to \nEventBridge and we go further and build out the  ",
    "start": "1319320",
    "end": "1326679"
  },
  {
    "text": "event schema. I think it's good to have somewhere \nto put your event schema. The schema registry for   EventBridge is an example in AWS. There are other \nways to do it. But making sure it's discoverable.  ",
    "start": "1326680",
    "end": "1335440"
  },
  {
    "text": "The idea is that the marketing team, if they want \nto send an email after someone buys something,   they shouldn't have to go to the payments team to \nfigure out at what point in the code to trigger  ",
    "start": "1335440",
    "end": "1343400"
  },
  {
    "text": "that. They should just look up payment success.\nOh, that's an event. Okay, when that event   happens, we're going to trigger this. There's no \ncommunication between the two teams. The events  ",
    "start": "1343400",
    "end": "1353600"
  },
  {
    "text": "are the interface. But I think it's key then \nto think about events globally at the start,  ",
    "start": "1354320",
    "end": "1359679"
  },
  {
    "text": "to work really hard on a really good \nevent schema that people agree with,   rather than let every team to the ad-hoc it and \nthen be like, okay, in a few months, we'll look  ",
    "start": "1359680",
    "end": "1367000"
  },
  {
    "text": "across and make sure we sort of move things \nmore in line. That doesn't work. You need to   get it. It's one of the few things that you really \nneed to try and get right globally at the start. ",
    "start": "1367000",
    "end": "1375279"
  },
  {
    "text": "And that is hard. I mean, even \nin the Netherlands and PostNL,   the Dutch Postal Service, Luke van Donkers Goedd \nhas done a huge amount of work on explaining their  ",
    "start": "1375280",
    "end": "1383960"
  },
  {
    "text": "whole sort of event system and schemas and \neverything. And they've got a very formalized   system of registering events. And they've got \nto, you know, the structure's got to all be in  ",
    "start": "1383960",
    "end": "1392480"
  },
  {
    "text": "a certain kind of way. And then that's far. Once \nthat schema is well defined, the consumers then  ",
    "start": "1392480",
    "end": "1397799"
  },
  {
    "text": "have amazing flexibility to use those events \nbecause they know it's within their structure.  And there's, you know, lots of views about, you \nknow, fad events, thin events, and how are you  ",
    "start": "1397800",
    "end": "1405960"
  },
  {
    "text": "going to do it. But I think the key is doing \nit one way. Find that across all events,   having a good discoverability of those events and \nsome sort of schema registry. And yeah, having,  ",
    "start": "1405960",
    "end": "1414720"
  },
  {
    "text": "you know, really, really leaning into the fact \nthat services should master their own data. So,  ",
    "start": "1414720",
    "end": "1420600"
  },
  {
    "text": "yeah, maybe the marketing system needs to \nsend emails. So it needs to know my name,   but it doesn't need to call some service to get \nmy name. It can listen to the events about user  ",
    "start": "1420600",
    "end": "1430120"
  },
  {
    "text": "data changing. Now, this was a little bit complex \nbecause it's PII data and there are other aspects   of that. But the key thing is here it can \nmanage its own projection of that data. It  ",
    "start": "1430120",
    "end": "1437799"
  },
  {
    "text": "doesn't have to have coupling. I think people \nare always like always because data duplication   is wrong. Never want to duplicate data. If you \nnever duplicate data, you add huge constraints  ",
    "start": "1437800",
    "end": "1447080"
  },
  {
    "text": "on communication and coupling overhead.\nAnd it's a temporary duplication of data  ",
    "start": "1447080",
    "end": "1452799"
  },
  {
    "text": "because a microservice is going to receive \nan email address and a name to send an email.   But once that email is sent, it doesn't \nneed to necessarily retain that data. ",
    "start": "1452800",
    "end": "1460560"
  },
  {
    "text": "So it can and it can't. But yes, it doesn't \nnecessarily have to. I think people are terrified   of data duplication. I understand why. I think \nwe need to think about why we're so scared of  ",
    "start": "1460560",
    "end": "1469160"
  },
  {
    "text": "it. And yet temporary data duplication to enable \nus to send an email. Not necessarily a bad thing.  ",
    "start": "1469160",
    "end": "1475560"
  },
  {
    "text": "And even longer-lived data duplication can \nwork because data duplication is better than  ",
    "start": "1475560",
    "end": "1480840"
  },
  {
    "text": "communication at scale. Obviously, it depends \non what sort of data. Your bank balance is   very bad to duplicate. But some less important \naspects of data can be duplicated if you think  ",
    "start": "1480840",
    "end": "1490160"
  },
  {
    "text": "about the outcomes. This is when we go back \nto organizations that are trying to modernize   towards this. This is moving towards a new type \nof cloud. This is moving towards event-driven  ",
    "start": "1490160",
    "end": "1497480"
  },
  {
    "text": "architecture. This is moving towards eventual \nconsistency and it's moving towards changing   how they think about data. This is why people \nstruggle. So I think a lot of it is trying  ",
    "start": "1497480",
    "end": "1504000"
  },
  {
    "text": "to break down those problems and give people a \npath because it's a lot to think about at once.",
    "start": "1504000",
    "end": "1509400"
  },
  {
    "text": "Just a shout out to an ex-colleague of mine, \nDavid Boyne, who's written an open-source   tool called Event Catalog, you know, just for \nunderstanding and all those kind of events.  ",
    "start": "1509400",
    "end": "1517000"
  },
  {
    "text": "We were speaking earlier about cognitive \nload with developers and, you know, this   mythical 10x engineer. And especially if you're \nin the cloud and you're doing serverless. Well,  ",
    "start": "1517000",
    "end": "1525039"
  },
  {
    "text": "the engineer is going to know everything \nfrom front end to managing Kafka queues at   the bottom and the code and deployments and CICD \npipelines security and the whole thing. And I know  ",
    "start": "1525040",
    "end": "1534240"
  },
  {
    "text": "you're a sort of big proponent of helping people \nunderstand how platforms work in organizations,  ",
    "start": "1534240",
    "end": "1539800"
  },
  {
    "text": "particularly with serverless. Some of those \npeople don't understand why you would need a   platform team or platform capabilities. if you \nare using serverless. The cloud provider just  ",
    "start": "1539800",
    "end": "1548680"
  },
  {
    "text": "does it all. Yeah. What are your thoughts on that?\nYeah, no, I see that challenge a lot. And to be   honest, five years ago, I was probably more in \nthat camp. Well, you know, the cloud provider is  ",
    "start": "1548680",
    "end": "1557360"
  },
  {
    "text": "our platform. And yes, it's shared responsibility \nmodel. The cloud provider is your platform. You're   consuming computer's utility. But it would take \nS3, an S3 bucket. It might be the security and  ",
    "start": "1557360",
    "end": "1567040"
  },
  {
    "text": "compliance says it needs to apply some encryption \nstandards and you need to stop anyone ever making   an S3 bucket public. This will make sense. But how \ndo we enable our stream-aligned teams to be able  ",
    "start": "1567040",
    "end": "1575160"
  },
  {
    "text": "to do that correctly? In the past, you know, \nwe've moved, sorry, we've moved to a mode in  ",
    "start": "1575160",
    "end": "1581160"
  },
  {
    "text": "which it's much simpler to build applications \nat scale than it ever has been. Computers are   resource. Storage is a utility. It's easy to \nconsume. But also our teams look very different. ",
    "start": "1581160",
    "end": "1590440"
  },
  {
    "text": "We have, you know, we don't have a database expert \nand a networking expert and a security expert on   the team. We have a few full stack developers with \na bit of a backlog and a dream trying to make all  ",
    "start": "1590440",
    "end": "1599560"
  },
  {
    "text": "of this work. So we need to reduce the cognitive \nload to build systems at scale. Yes, some things   are easier, but we need to enable those teams. \nSo I typically see my platform team sitting  ",
    "start": "1599560",
    "end": "1607440"
  },
  {
    "text": "between the cloud providers platform and those \nstream-aligned teams if we borrow the terms from   team topologies. And providing things that enable \nthose stream-aligned teams to move faster. So,  ",
    "start": "1607440",
    "end": "1616040"
  },
  {
    "text": "for instance, building CDK constructs, CDK cloud \ndevelopment kits, it's an infrastructure as code  ",
    "start": "1616040",
    "end": "1621800"
  },
  {
    "text": "solution from AWS, well, open source, but from \nAWS that enables people to build in familiar  ",
    "start": "1621800",
    "end": "1627680"
  },
  {
    "text": "programming languages like TypeScript. I often \nhave platform teams building CDK constructs,   L2 plus constructs. So between level two and level \nthree that enable their stream-aligned teams to  ",
    "start": "1627680",
    "end": "1636920"
  },
  {
    "text": "move quicker by giving them building blocks with…\nSo these are little package building blocks that   they do with all their best practices \nbuilt in and they're kind of things  ",
    "start": "1636920",
    "end": "1643320"
  },
  {
    "text": "which their developers can consume.\nAnd that's their company specific best   practices. That company might have, you know, some \nrules around S3 buckets and how they want to store  ",
    "start": "1643320",
    "end": "1650000"
  },
  {
    "text": "them and how they want to encrypt them. That's \nfine. But they need to make a company bucket,   whether it's airline buckets or whatever it \nmight be. But that's then consumed by the  ",
    "start": "1650000",
    "end": "1658440"
  },
  {
    "text": "stream-aligned teams and used as a building \nblock, which means it's almost pre approved,   which means you can roll back some ideas of change \napproval boards and some top down and kicking  ",
    "start": "1658440",
    "end": "1666400"
  },
  {
    "text": "stuff back way far in the development process. Of \ncourse, some top down controls are still needed,   but it sort of inverts that relationship. It's not \ntop down imposing. It's more bottom up enabling. ",
    "start": "1666400",
    "end": "1676240"
  },
  {
    "text": "And that is the platform as a product. Those \nconstructs of the product, their version,   they're released on something like NPM privately. \nAnd then they're consumed by those stream-aligned  ",
    "start": "1676240",
    "end": "1684039"
  },
  {
    "text": "teams. And it can be an inner source model. \nThose stream-aligned teams can make changes.   But the code is owned by the platform team. \nThat is their product to the stream-aligned  ",
    "start": "1684040",
    "end": "1691880"
  },
  {
    "text": "teams. So yes, AWS and other cloud providers \nhave made it super simple to work, you know,   to build applications at scale. We are then \nputting a little bit more customization,  ",
    "start": "1691880",
    "end": "1700120"
  },
  {
    "text": "giving building blocks and those building blocks \nare then used by the stream-aligned teams. So it's   a thin layer. It's important not to try and build \nyour own platform. Use what the cloud provider's  ",
    "start": "1700120",
    "end": "1708279"
  },
  {
    "text": "giving you. But add the level of customization you \nneed to help those teams meet the needs of your   organization. And that's the key part that I see.\nI can think of platform teams doing a huge number  ",
    "start": "1708280",
    "end": "1719279"
  },
  {
    "text": "of things because you've got API design and \neven all the schemas we're talking about for   events and where logs go and observability and \nmonitoring and there's a huge amount that the  ",
    "start": "1719280",
    "end": "1728600"
  },
  {
    "text": "cognitive load can be taken off the developers \nto concentrate on their little business domain.   And the common platform can sort things out.\nEncapsulation and abstraction that come with  ",
    "start": "1728600",
    "end": "1737360"
  },
  {
    "text": "familiar programming, that enables us to \ndo all of that. To build observability into   every Lambda function, to apply some best \npractices on events and really to sort of,  ",
    "start": "1737360",
    "end": "1747200"
  },
  {
    "text": "yes, it's visible to the stream-aligned team. They \ncan click through the code. They can see what the   construct does. They don't have to. That's the \nbig shift. They don't have to. So when they're  ",
    "start": "1747200",
    "end": "1755760"
  },
  {
    "text": "trying to build their rest API. They don't have \nto think about the thousand things that need to   get right. They just have to think about the \napplication code they're writing this custom  ",
    "start": "1755760",
    "end": "1762640"
  },
  {
    "text": "to their application that they're building. \nAnd of course, they need to understand and   have some awareness of the other parts that \nare in play. They don't have to do all that  ",
    "start": "1762640",
    "end": "1770960"
  },
  {
    "text": "work because the platform team is enabling them.\nI think those platform teams are even starting to  ",
    "start": "1770960",
    "end": "1776799"
  },
  {
    "text": "take on more things, even in terms of, you know, \ncost profiling and other kind of things where you   wouldn't necessarily think of that as a platform \nteam capability, but understanding your costs  ",
    "start": "1776800",
    "end": "1786919"
  },
  {
    "text": "and understanding scale and reliability and all \nthose kind of things as a sort of within a central   service within these different teams. I think it's \nalso a new way that platform teams can be useful. ",
    "start": "1786920",
    "end": "1796840"
  },
  {
    "text": "I've seen it's on the platform teams that we run. \nOne of them recently built a FinOps construct,   a CDK construct that you deploy inside of your \nservice, and it builds a CloudWatch dashboard  ",
    "start": "1796840",
    "end": "1806240"
  },
  {
    "text": "with all the metrics we think are important around \nFinOps. Now that stream-aligned team can configure   them, but they don't have to think about what they \nare to start with. All the tagging has already  ",
    "start": "1806240",
    "end": "1813240"
  },
  {
    "text": "been done because they've used the constructs of \nthe Lambda function. They've used the constructs   of the DynamoDB. It's all well tagged. It's all \nwell brought up to observability and thought  ",
    "start": "1813240",
    "end": "1821000"
  },
  {
    "text": "and design has been put into that dashboard for \nthat team to use. That team can still customize   it. But yeah, FinOps is a responsibility \nof all teams. It's a responsibility of the  ",
    "start": "1821000",
    "end": "1829440"
  },
  {
    "text": "platform team to give the teams the tools to be \nempowered to leverage that information. But yes,  ",
    "start": "1829440",
    "end": "1835480"
  },
  {
    "text": "there is also the education piece for teams to \nunderstand FinOps. And that's where more enabling   teams come into play and how do you make sure that \nyou have subject matter experts around FinOps? But  ",
    "start": "1835480",
    "end": "1843440"
  },
  {
    "text": "the platform team is giving the tools to teams \nto do things the right way. You then need to   make sure that teams want to do things the right \nway and use those building blocks. But typically,  ",
    "start": "1843440",
    "end": "1851800"
  },
  {
    "text": "engineers want to do things the right way. \nIf there is a building block, they're going   to want to use it because they see the value, \nbut they would never have had the time to put a  ",
    "start": "1851800",
    "end": "1858600"
  },
  {
    "text": "FinOps dashboard and do the backlog and modernize \nand learn new technology all at the same time. ",
    "start": "1858600",
    "end": "1864039"
  },
  {
    "text": "And I know platform teams can also get into \ntrouble as well because you can have enormous   platform teams that land up being blockers \nand land up being the sort of bottleneck of  ",
    "start": "1864040",
    "end": "1873240"
  },
  {
    "text": "things. How do people structure platform teams? \nI know there are different thoughts of having a   big platform team or multiple different platform \nteams. How would you suggest people approach that? ",
    "start": "1873240",
    "end": "1882200"
  },
  {
    "text": "Yes, it's a good point. The platform team being a \nbottleneck is a big thing everyone is scared of,   especially in the modernization as we were \ntalking about earlier. What you don't want  ",
    "start": "1882200",
    "end": "1889120"
  },
  {
    "text": "to do in that big bang approach is say, cool, \nwe've got a platform team. We've got these six   stream-aligned teams. We need to get this done in \neight months. Everyone goes and everyone's like,  ",
    "start": "1889120",
    "end": "1895680"
  },
  {
    "text": "well, we don't have any constructs. The \nplatform team hasn't done anything. Okay,   we're going to build some stuff. We'll use the \nplatform team stuff later. The platform team  ",
    "start": "1895680",
    "end": "1900720"
  },
  {
    "text": "builds the stuff. Obviously, it never gets used. \nThere's huge debates, huge fights. Everyone blames   the platform team. It's not a great start.\nSo if you're looking to modernize and move  ",
    "start": "1900720",
    "end": "1908120"
  },
  {
    "text": "towards this structure, give your platform team \na head start. It's probably the easiest win. Let   them get a bit ahead. I think then it's important \nto have an inner source model. So the team really  ",
    "start": "1908120",
    "end": "1917120"
  },
  {
    "text": "wants to have support for Aurora serverless V2 \nthat the platform team hasn't yet built in. Well,  ",
    "start": "1917120",
    "end": "1922520"
  },
  {
    "text": "the team can build that construct. They can \nmake the pull request. That has to be merged   in by the platform team. The platform team \nwill have subject matter experts and security  ",
    "start": "1922520",
    "end": "1929080"
  },
  {
    "text": "and networking. They'll be able to approve \nit and they'll be able to own it and not  ",
    "start": "1929080",
    "end": "1934559"
  },
  {
    "text": "run the architecture that you're building but \nmaintain the building block that you are using. ",
    "start": "1934560",
    "end": "1939880"
  },
  {
    "text": "But the inner source model is one way \nto do it. Letting the team get ahead of   time is another way to do it. And not \ntaking on too much. Really be like,  ",
    "start": "1939880",
    "end": "1946880"
  },
  {
    "text": "okay, the cloud provider is our platform. We're \njust adding our company specific logic on top. ",
    "start": "1946880",
    "end": "1953305"
  },
  {
    "text": "Customizations.\nCustomizations on top. And that's the key,   not to take on too much responsibility. To keep \nyour platform thin, but a thin layer on top of  ",
    "start": "1953305",
    "end": "1960639"
  },
  {
    "text": "something that evolves and changes and making \nsure you keep up to date with those evolutions   and those changes. I think that's key. The inner \nsource is probably the approach where they can  ",
    "start": "1960640",
    "end": "1969360"
  },
  {
    "text": "see the code and request changes to the code, \nbut that ownership is still with the platform   team. That's probably the way you can have some \nmore dynamic resourcing of that platform team.",
    "start": "1969360",
    "end": "1977320"
  },
  {
    "start": "1977000",
    "end": "2574000"
  },
  {
    "text": "So just casting your eye maybe in a crystal ball \ninto the future. The modern cloud and serverless  ",
    "start": "1977320",
    "end": "1982639"
  },
  {
    "text": "is continually evolving. But where do you see new \ninnovations and cool things coming down the pipe  ",
    "start": "1982640",
    "end": "1988440"
  },
  {
    "text": "or at least hoping they're going to be coming down \nthe pipe to take advantage of? Could be Gen AI,   could be not, but, you know, that's the whole...\nI feel like there's almost an obligation to  ",
    "start": "1989240",
    "end": "1997360"
  },
  {
    "text": "mention Gen AI. Gen AI is interesting, of course, \nand it's all the stuff everyone's talking about.  ",
    "start": "1997360",
    "end": "2002880"
  },
  {
    "text": "One of the areas we're actually seeing real \napplications of the work that we do is in   the automation of modernization of legacy code \nbases. So moving an old JAR application to a new  ",
    "start": "2002880",
    "end": "2013560"
  },
  {
    "text": "version of Java, moving from an old framework \nto a new version of a framework. For legacy,   a scale that some enterprises have 60,000 \napplications running an old version of Java. Who  ",
    "start": "2013560",
    "end": "2023200"
  },
  {
    "text": "has the time and the bandwidth? And most people...\nWe're even understanding that code. So selecting  ",
    "start": "2023200",
    "end": "2028840"
  },
  {
    "text": "a code and using a Gen AI model to \nsay, just explain what this code is,   what's the input, what's the output, what's \nthe transformation happening? And then at  ",
    "start": "2028840",
    "end": "2035400"
  },
  {
    "text": "least you know what's going on rather than \nhaving to understand the oldy-crufty stuff.  Exactly. It's useful for that. And also \nwhat we're experimenting with when code  ",
    "start": "2035400",
    "end": "2043000"
  },
  {
    "text": "bases have a high level of testing is to \nmove things back to the abstract syntax   tree. And then to do a transformation from \nan AST of one version or one language to  ",
    "start": "2043000",
    "end": "2053440"
  },
  {
    "text": "an AST of another. And we found that because \nGenerative AI models are changed on Excel...  This is a whole other language \nyou are moving between… ",
    "start": "2053440",
    "end": "2059720"
  },
  {
    "text": "We're experimenting with moving between \nlanguages. But because it's trained on XML,   it's quite good at XML manipulations. We found \nthat worked quite well. It works on languages.  ",
    "start": "2059720",
    "end": "2068200"
  },
  {
    "text": "It's working-ish on languages where there's \nloads of examples. The issue is some of these   organizations are asking for modernization of \nversions of languages that are not popular online,  ",
    "start": "2068200",
    "end": "2077919"
  },
  {
    "text": "that are not popular on Stack Overflow, that \nthere aren't great examples of, or not popular   on GitHub. So we're also working on how to provide \nmore context to these models? How do we build a  ",
    "start": "2077920",
    "end": "2087960"
  },
  {
    "text": "bit of a rag system with good examples?\nSend them to Magdeline. Awesome.  Exactly. So automatic sort of code modernization, \nI think, is one of the super exciting parts  ",
    "start": "2087960",
    "end": "2096000"
  },
  {
    "text": "because, yes, we're looking to modernize how \npeople build new applications and the applications   that are touched a lot. But sometimes they're \ncalling it layers and layers and layers of legacy  ",
    "start": "2096000",
    "end": "2104040"
  },
  {
    "text": "that needs to be moved. And there is a critical \nneed to move. And we're seeing an automatic way  ",
    "start": "2104040",
    "end": "2109320"
  },
  {
    "text": "of doing that with large language models as being \na really interesting use case. Of course, people   are using coding assistance. That all makes sense. \nBut can we get to the point where we could say,  ",
    "start": "2109320",
    "end": "2118400"
  },
  {
    "text": "we're just going to upgrade the language of \na well-tested code base all in one and it's   going to move across? I think we're not as far \naway from that as we might think. Some of the  ",
    "start": "2118400",
    "end": "2126240"
  },
  {
    "text": "other use cases, I think, we're further \naway than some people might be saying.  Other than Gen AI, we've ticked our box with \nthat and any conference talk we need to mention  ",
    "start": "2126240",
    "end": "2133400"
  },
  {
    "text": "Gen AI. But other than that, what sort of \nfuture things are you looking forward to? ",
    "start": "2133400",
    "end": "2138720"
  },
  {
    "text": "I think it's interesting to see how modern \nplatform teams evolve and how they leverage   things like IDPs, developer portals. \nHow there can be better discoverability  ",
    "start": "2138720",
    "end": "2147240"
  },
  {
    "text": "and more productization of what platform \nteams do. And that's really interesting.  Is that the discoverability of your \ntemplates and your blueprints and even  ",
    "start": "2147240",
    "end": "2154200"
  },
  {
    "text": "a list of your NPM modules that you may have \ncreated or the CDK constructs or anything,   your API, the schemas or anything like that?\nI think it's bidirectional discoverability.  ",
    "start": "2154200",
    "end": "2163600"
  },
  {
    "text": "I think it's helping stream-aligned \nteams to discover what you've got to   offer. Also helping the platform team see \nwhat the stream-aligned teams are up to. ",
    "start": "2163600",
    "end": "2169160"
  },
  {
    "text": "And what they're using, consuming.\nWhat's that random thing? We didn't   have a template for that. Not saying stop. \nSaying if everyone's trying to do this thing,  ",
    "start": "2169160",
    "end": "2174920"
  },
  {
    "text": "why don't we build a construct that helps them? \nSo I think it's discoverable in both ways. I   think it's a core building block four. And I'm \nseeing lots of people try different things. And I  ",
    "start": "2174920",
    "end": "2183400"
  },
  {
    "text": "think it's a space that's going to evolve a lot in \nthe next few years. So IDPs keep a strong eye on   how people are adopting topologies at scale. And \nevent-driven architectures, I think people are  ",
    "start": "2183400",
    "end": "2192000"
  },
  {
    "text": "really, there's a resurgence and I think \nit's interesting to see the new patterns,   the new tooling. You mentioned David Boyd's \nevents catalog tool. We're using that. It's  ",
    "start": "2192000",
    "end": "2198920"
  },
  {
    "text": "really exciting to see that move forwards.\nSo what's causing the resurgence in   event-driven architectures you think?\nThat's a good question. I think it feels  ",
    "start": "2198920",
    "end": "2206800"
  },
  {
    "text": "like a resurgence in event-driven architectures \nand domain-driven design. And I think it's because   we've moved to...we've solved a lot of the \nchallenges around compute and storage. And  ",
    "start": "2206800",
    "end": "2214720"
  },
  {
    "text": "they're becoming more of a utility or commodity. \nWe are now focused on how do we structure teams   for fast flow? We talked from team topologies. \nAnd how do we lower time to value? And how do  ",
    "start": "2214720",
    "end": "2223600"
  },
  {
    "text": "we lower the cost of ownership? And some of \nthat is a structure of stream aligned teams   to work effectively in reducing cognitive \nload. But to reduce cognitive load, you need  ",
    "start": "2223600",
    "end": "2230160"
  },
  {
    "text": "independent areas of the system with independent \nteams, reduce blast radius, and reduce the amount   of things you have to think about.\nNow, if there's a synchronous request  ",
    "start": "2230160",
    "end": "2236760"
  },
  {
    "text": "response between microservices, that's a \nlot of coupling. That's what we've seen,   right? People are negative on microservices \nfor many reasons. But one of them is the  ",
    "start": "2236760",
    "end": "2243599"
  },
  {
    "text": "amount of sort of tight coupling across Temple \nand other types of coupling between systems.   Event-driven architectures that are asynchronous \njust push the event out. Other people will respond  ",
    "start": "2243600",
    "end": "2253480"
  },
  {
    "text": "to it. It's eventually consistent. That is a \nway I feel to reduce cognitive load while also  ",
    "start": "2253480",
    "end": "2259440"
  },
  {
    "text": "getting the benefits of splitting up teams.\nSorry, to reduce coupling while also getting  ",
    "start": "2259440",
    "end": "2264640"
  },
  {
    "text": "the benefits of splitting up teams and reducing \ncognitive load. And, you know, an event broker is  ",
    "start": "2264640",
    "end": "2271119"
  },
  {
    "text": "not a new thing. If we think about the enterprise \nservice bus and SOA, like we've done this before  ",
    "start": "2271120",
    "end": "2277680"
  },
  {
    "text": "as an industry. But I think running an ESB was \na privilege. Well, not if you ask the teams,  ",
    "start": "2277680",
    "end": "2283200"
  },
  {
    "text": "but it was something that huge organizations \ncould do. It was very complicated. I can now   spin up an event bridge in 30 seconds. I think \nit's also some of the event backbones that  ",
    "start": "2283200",
    "end": "2291880"
  },
  {
    "text": "enable it to do this and now also coming out as a \ncommodity, as utility. And that enables companies  ",
    "start": "2291880",
    "end": "2297160"
  },
  {
    "text": "of any scale to start to work in this way.\nJulian Wood:, I think that's true as well.   I think, I mean, specifically I work in the \nserverless space. And those integration patterns,  ",
    "start": "2297160",
    "end": "2305640"
  },
  {
    "text": "which are, you know, from Gregor Hohpe, 20 years \nold and they, you know, entirely valid today.   But it was really hard to build those enterprise \nservice buses or use different patterns because  ",
    "start": "2305640",
    "end": "2313040"
  },
  {
    "text": "you had to model your system and had you sort of \nhad one enterprise service bus and you had to shoe  ",
    "start": "2313040",
    "end": "2318160"
  },
  {
    "text": "on everything in it. Nowadays, you can, you know, \nif whether you're doing Pub/Sub or fan-out or,   you know, a whole bunch of different patterns, \nget together, all these kind of things. It's so  ",
    "start": "2318160",
    "end": "2326400"
  },
  {
    "text": "much easier to do in a serverless way because \nas you say, 30 seconds, you can spin it up. But then even older products are evolving. I mean, \neven something like Kafka is, you know, super  ",
    "start": "2326400",
    "end": "2334720"
  },
  {
    "text": "hugely used and they're adding, you know, far more \ninnovative things for be able to use Kafka from,  ",
    "start": "2334720",
    "end": "2340599"
  },
  {
    "text": "you know, reinventing the storage mechanisms and \nhaving sort of queuing capabilities. So I think   there's sort of research, people are understanding \nthat the patterns are super helpful and a sort  ",
    "start": "2340600",
    "end": "2348839"
  },
  {
    "text": "of serverless way of building these makes it \nfar more easier to use more of the patterns   and not have to worry about this feature bloat.\nYeah, managing Kafka is a big change in how you  ",
    "start": "2348840",
    "end": "2358440"
  },
  {
    "text": "can actually manage to use some of these things. \nAnd I think it's also important to say that,   you know, I think a lot of people, when there \nwas started this resurgence in event-driven,  ",
    "start": "2358440",
    "end": "2366400"
  },
  {
    "text": "event-sourcing, same thing. If we're \ngoing to be event-driven, we're going to   do event-sourcing. I think event-sourcing can \nbe very complicated and costly and is useful  ",
    "start": "2366400",
    "end": "2374880"
  },
  {
    "text": "for some use cases, but not every use case.\nI think people are moving towards event-driven   architectures, but not necessarily moving \ntowards event-sourcing. So I think it was  ",
    "start": "2374880",
    "end": "2381240"
  },
  {
    "text": "important for people to realize they could use \nevents without taking an event-sourced approach   because the learning curve is a lot lower, the \ninvestments a lot lower and the results are a  ",
    "start": "2381240",
    "end": "2389400"
  },
  {
    "text": "lot faster with a pure event-driven approach. Of \ncourse, event-sourcing is useful for some things,   financial data, great, audit trail, great, \nit's not needed for every application.  ",
    "start": "2389400",
    "end": "2397320"
  },
  {
    "text": "You asked one thing I was interested \nabout in the future of, you know,   where cloud's going. How about yourself? \nWhere are you? What are you excited about? ",
    "start": "2398920",
    "end": "2405120"
  },
  {
    "text": "I'm sort of happy that serverless has \nbeen around forever. And, you know,   we often talk about the start of serverless, you \nknow, when Lambda came out, which is, you know,  ",
    "start": "2406080",
    "end": "2413880"
  },
  {
    "text": "10 years ago, which is the same time as Kubernetes \ncame out. You can see sort of different approaches   to solve distributed computing problems. But I \noften do say, you know, serverless was way before  ",
    "start": "2413880",
    "end": "2423280"
  },
  {
    "text": "then. In fact, all of the major cloud vendors \ncame out with a serverless model where you just  ",
    "start": "2423280",
    "end": "2428520"
  },
  {
    "text": "consume things via an API over the internet and \nthat could be a queue, it could be storage and,   you know, talking Amazon, we've got SQS and \nS3 and the concept to actually rent virtual  ",
    "start": "2428520",
    "end": "2438240"
  },
  {
    "text": "machines only came later. And that's not just \nan AWS thing, it's for sort of all of them. They're sort of jokingly say that the cloud was \nsort of born serverless. And so I think that's  ",
    "start": "2438240",
    "end": "2446120"
  },
  {
    "text": "just going to continue. And certainly serverless \nas a term has been very much diluted and,   you know, anyone with marketing money is jumping \non the bandwagon. Luckily, they've got Gen AI  ",
    "start": "2446120",
    "end": "2455000"
  },
  {
    "text": "to now focus on. So I think serverless is just \nused by so many companies. It will just continue   to evolve and, you know, a cloud provider or, \nyou know, even companies behind the scenes  ",
    "start": "2455000",
    "end": "2464200"
  },
  {
    "text": "are just going to iterate, are going to evolve.\nIt's going to be faster, it's going to be cheaper,   it's going to be more simple to use, more \nfunctionality. And I think we're in this  ",
    "start": "2464200",
    "end": "2471240"
  },
  {
    "text": "phase now where we're not having to sort of \ntell people that serverless isn't a gimmicky  ",
    "start": "2471240",
    "end": "2476520"
  },
  {
    "text": "kind of thing and massive production workloads \nare being built on it. And I'm sort of hoping   the realization phase we're at is just people \nare going to get on with it and build with it  ",
    "start": "2476520",
    "end": "2485160"
  },
  {
    "text": "and just have success with it. And then under \nthe hood, because you are giving over some of   your operational control to a cloud provider, \nthey can do the best job they can to just  ",
    "start": "2485160",
    "end": "2493280"
  },
  {
    "text": "make things better, faster, cheaper and do more.\nAnd I guess while we're talking about buzz terms,  ",
    "start": "2493280",
    "end": "2499000"
  },
  {
    "text": "buzz words, Edge computes. How do you \nsee that playing into this future?  I think that is going to be interesting. \nI think there's a lot of work with that,  ",
    "start": "2499000",
    "end": "2507920"
  },
  {
    "text": "which is interesting. People needing more, needing \nless latency, building more global applications,  ",
    "start": "2507920",
    "end": "2513599"
  },
  {
    "text": "compute power going towards the Edge. And people \nare going to wanting to be running functions or  ",
    "start": "2514720",
    "end": "2521080"
  },
  {
    "text": "containers or things like that at the Edge. And \nthen there's the gravity question of where is   the data? And so sure, you can have your data \nin the central place and something connecting  ",
    "start": "2521080",
    "end": "2530640"
  },
  {
    "text": "from the Edge, but that's going to add latency.\nSo I see a sort of push and pull dynamic of maybe   more data moving towards the Edge and more sort \nof data services moving towards the Edge. And that  ",
    "start": "2530640",
    "end": "2539440"
  },
  {
    "text": "means, well, more things need to work around \nwith the data. So maybe there's going to be   AI modeling or analytics or this kind of thing \nmoving to the Edge. So I definitely think with  ",
    "start": "2539440",
    "end": "2549760"
  },
  {
    "text": "network bandwidth, where you can always just throw \nmore bandwidth at the problem, there are going to   be more and more services that are going to be \nmoving towards the Edge. How that is managed,  ",
    "start": "2549760",
    "end": "2557720"
  },
  {
    "text": "what becomes the difference between public cloud, \nprivate cloud, hybrid cloud. I think it all sort   of merges in some kind of thing. But yeah, I think \nthat is exciting if you can have truly globally  ",
    "start": "2557720",
    "end": "2566480"
  },
  {
    "text": "distributed applications with data, compute and \nall the kind of things in multiple locations.  ",
    "start": "2566480",
    "end": "2572080"
  },
  {
    "text": "Yeah, I think that's a whole new world to explore.\nThen in 10 years, we can do this conversation and   talk about all the pitfalls of Edge computers.\nExactly. Well, you're a consultant,  ",
    "start": "2572080",
    "end": "2578920"
  },
  {
    "start": "2574000",
    "end": "2612000"
  },
  {
    "text": "you'll be able to help.\nOnce we've done generative AI, we'll move on.  Exactly. Ben, thanks so much for your time \ntoday. A great encapsulation of the... I love  ",
    "start": "2578920",
    "end": "2587000"
  },
  {
    "text": "talking about socio-technological thing. We \nspoke a lot about people and things. So yeah,   good luck with all your future transformations. \nI know you are helping your clients in a  ",
    "start": "2587000",
    "end": "2594480"
  },
  {
    "text": "great way. So thanks for talking to us.\nThanks so much. See you back in London.",
    "start": "2594480",
    "end": "2607119"
  }
]