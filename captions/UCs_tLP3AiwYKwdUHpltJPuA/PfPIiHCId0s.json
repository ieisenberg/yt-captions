[
  {
    "start": "0",
    "end": "34000"
  },
  {
    "text": "[Applause] thank you thank you so much for the introduction I mean I'm so excited to be",
    "start": "2520",
    "end": "8440"
  },
  {
    "text": "here this is my first time at Yao my first time in Australia so far I've managed not to get horribly sunburned so",
    "start": "8440",
    "end": "14879"
  },
  {
    "text": "that's a win by my book okay so just a little introduction my name is jako um",
    "start": "14879",
    "end": "21000"
  },
  {
    "text": "if you've talked to me you might have noticed I'm a bit of a functional programming nerd I never shut up about it um the thing I'm most proud about is",
    "start": "21000",
    "end": "28920"
  },
  {
    "text": "I'm part of glims Co team so I'm helping with its development but what is glim well if you go to its website you'll",
    "start": "28920",
    "end": "35399"
  },
  {
    "start": "34000",
    "end": "163000"
  },
  {
    "text": "discover that glim is a friendly language for building typ save systems that scale so there's quite a bit to",
    "start": "35399",
    "end": "42160"
  },
  {
    "text": "unpack in just a single sentence it's not every day that we hear the objective friendly referring to a programming",
    "start": "42160",
    "end": "48239"
  },
  {
    "text": "language also type save so glim is a statically typed language with a strong",
    "start": "48239",
    "end": "54280"
  },
  {
    "text": "robust type system and finally scaling that's interesting glim has some quite",
    "start": "54280",
    "end": "59559"
  },
  {
    "text": "interesting tricks to allows us to develop systems that are ready for a distributed and concurrent world so my",
    "start": "59559",
    "end": "66520"
  },
  {
    "text": "job today will be to guide you through this journey you're going to be reading and I will be writing which is scary",
    "start": "66520",
    "end": "73400"
  },
  {
    "text": "quite a bit of glim code um and I think that's where the most fun is for you not",
    "start": "73400",
    "end": "79080"
  },
  {
    "text": "for me writing it um because you get to see what the language looks like in practice what you can do with it in what",
    "start": "79080",
    "end": "84920"
  },
  {
    "text": "half an hour or whatever much time it might take me um but this being a code",
    "start": "84920",
    "end": "91320"
  },
  {
    "text": "Centric Journey it has to start with the most classic of the examples that is an L word uh bear with me um so here we are",
    "start": "91320",
    "end": "99040"
  },
  {
    "text": "defining a GD function this takes in a name and prints a gting to standard output to do that it's calling the print",
    "start": "99040",
    "end": "106119"
  },
  {
    "text": "line function coming from the io module so when you see IO dot name of a",
    "start": "106119",
    "end": "111159"
  },
  {
    "text": "function we are calling a function from that module and then we have the main the entry point of our program here to",
    "start": "111159",
    "end": "116960"
  },
  {
    "text": "do something that is just one step above simply printing a message we are using this great function to print a greeting",
    "start": "116960",
    "end": "123640"
  },
  {
    "text": "for each item in a list and so we'll see Hello Lucy and hello Y and if you've add",
    "start": "123640",
    "end": "130440"
  },
  {
    "text": "any exposure to mainstream languages like JavaScript for example the syntax might be quite reminiscent of those and",
    "start": "130440",
    "end": "137800"
  },
  {
    "text": "that's by Design gam is designed to be a language that's easy to pick up and learn and so the syntax doesn't have to",
    "start": "137800",
    "end": "144480"
  },
  {
    "text": "work against you when you're learning something new it doesn't have to get in the way of you learning so you might",
    "start": "144480",
    "end": "150400"
  },
  {
    "text": "have a good hunch of what is going on here even if these are your first lines of glim code",
    "start": "150400",
    "end": "155800"
  },
  {
    "text": "ever but so far so good but this is not an exciting example we're just printing",
    "start": "155800",
    "end": "161040"
  },
  {
    "text": "a string and I promised you an exciting Journey so what are we actually going to be doing today well we will be building",
    "start": "161040",
    "end": "167159"
  },
  {
    "start": "163000",
    "end": "427000"
  },
  {
    "text": "something that I think we can all agree is on a whole different level than just printing a string that is we will be",
    "start": "167159",
    "end": "172519"
  },
  {
    "text": "building a server we take in uh client requests and produce some responses with",
    "start": "172519",
    "end": "179120"
  },
  {
    "text": "some HD ml maybe we want to template it reading some data from a database so now",
    "start": "179120",
    "end": "184480"
  },
  {
    "text": "we need to talk to a database that's a whole based on its own and we maybe want",
    "start": "184480",
    "end": "189519"
  },
  {
    "text": "logging we want this server to be highly available and to sustain the high highest of",
    "start": "189519",
    "end": "196319"
  },
  {
    "text": "workloads but before we get into the fun and shiny code Snippets I think it's",
    "start": "196319",
    "end": "201959"
  },
  {
    "text": "better to just take a step back and be a bit far from the code because when we look at a code snippet there's actually",
    "start": "201959",
    "end": "208159"
  },
  {
    "text": "so much more that doesn't meet the for example how did we get there how does one even get started with a new",
    "start": "208159",
    "end": "214480"
  },
  {
    "text": "project what do I need to know to scuff a new project how do I run my code my",
    "start": "214480",
    "end": "219680"
  },
  {
    "text": "tests how do I do that in CI even more importantly how do I start with",
    "start": "219680",
    "end": "225200"
  },
  {
    "text": "something that I can turn into an MVP that I can then put in production with confidence that I'm not breaking",
    "start": "225200",
    "end": "232159"
  },
  {
    "text": "everything and so to get started we'll start from the very beginning and have a look at what it looks like to create a",
    "start": "232159",
    "end": "238760"
  },
  {
    "text": "new project so once you've installed uh the glim binary you'll get a lot of things out of",
    "start": "238760",
    "end": "245560"
  },
  {
    "text": "the box and that's because we think that gam has to give you the best developer experience there is so for example if",
    "start": "245560",
    "end": "252280"
  },
  {
    "text": "you need to get started with a new project that's as simple as running gam new Yao and you're good to go the",
    "start": "252280",
    "end": "259160"
  },
  {
    "text": "project is taken care of automatically and let's have a look at what's inside",
    "start": "259160",
    "end": "265680"
  },
  {
    "text": "okay so maybe we can make this a bit bigger the project structure is pretty",
    "start": "265680",
    "end": "271080"
  },
  {
    "text": "straightforward we have a source folder and a test folder in the source we have our main the entry point of the program",
    "start": "271080",
    "end": "277240"
  },
  {
    "text": "what if we want to run this again glim comes with a a build tool builtin into",
    "start": "277240",
    "end": "282600"
  },
  {
    "text": "the tool chain so if you want to run your code that's as simple as glim run it's going to compile your code your",
    "start": "282600",
    "end": "289400"
  },
  {
    "text": "dependencies and you're good to go what about tests now well say no more glim",
    "start": "289400",
    "end": "294600"
  },
  {
    "text": "test and again you're good to go and I hope you can appreciate how fast the compiler is",
    "start": "294600",
    "end": "300280"
  },
  {
    "text": "one thing I love to do is to set up a file Watcher to run my test every time I change something in my code and the",
    "start": "300280",
    "end": "307320"
  },
  {
    "text": "feedback is basically immediate because the compiler has been designed to do incremental compilation and so as you",
    "start": "307320",
    "end": "313840"
  },
  {
    "text": "change little bits and pieces in your code and you save and you rerun your tests the feedback is basically uh",
    "start": "313840",
    "end": "319880"
  },
  {
    "text": "immediate and so we can do this sort of dddd driven development where we can get",
    "start": "319880",
    "end": "325199"
  },
  {
    "text": "an immediate feedback when we are doing something when we are experimenting with an API or trying to figure out what our",
    "start": "325199",
    "end": "331319"
  },
  {
    "text": "code is doing and I cannot understate how good it is to not have to wait",
    "start": "331319",
    "end": "337080"
  },
  {
    "text": "seconds or even minutes for your code to compile get and get some feedback and get something running building",
    "start": "337080",
    "end": "344680"
  },
  {
    "text": "things okay this is fun and maybe just a bit exciting but we are building a",
    "start": "344680",
    "end": "349960"
  },
  {
    "text": "server so we are going to be needing quite the advanced pieces of software we will need an HTTP server possibly we",
    "start": "349960",
    "end": "357479"
  },
  {
    "text": "would like to have a web framework to make things e easier for us we need a way to talk to our database to debug",
    "start": "357479",
    "end": "363919"
  },
  {
    "text": "things to log things and so I'm a mediocre developer I cannot possibly",
    "start": "363919",
    "end": "369240"
  },
  {
    "text": "build that in what time I have left so we're going to be using dependencies but that laads down a",
    "start": "369240",
    "end": "375199"
  },
  {
    "text": "treacherous path how do I deal with my dependencies and sometimes that can be quite painful because I need to figure",
    "start": "375199",
    "end": "382080"
  },
  {
    "text": "out the package manager I need to use what kind of configuration file I need maybe I will copy that from my previous",
    "start": "382080",
    "end": "388840"
  },
  {
    "text": "Project without actually looking at it crossing my fingers that it just works um that's not the best developer",
    "start": "388840",
    "end": "394960"
  },
  {
    "text": "experience we can ask more for our languages and so what glim does it comes",
    "start": "394960",
    "end": "400000"
  },
  {
    "text": "with a package manager built in into the tool chain again so if you need to add a new dependency again that's just as",
    "start": "400000",
    "end": "406479"
  },
  {
    "text": "simple as doing glim add and your dependencies here I'm adding uh Wisp and",
    "start": "406479",
    "end": "412199"
  },
  {
    "text": "Mist that are respectively gleams own web framework and HTTP server and again",
    "start": "412199",
    "end": "418680"
  },
  {
    "text": "once you do that you're good to go you can just start using it in your",
    "start": "418680",
    "end": "423879"
  },
  {
    "text": "project and I think wisp so gleim's own web framework is a great example of",
    "start": "426280",
    "end": "431879"
  },
  {
    "start": "427000",
    "end": "672000"
  },
  {
    "text": "gim's philosophy because that really sips into the ecosystem at large Gleim",
    "start": "431879",
    "end": "437599"
  },
  {
    "text": "is meant to be a language that is simple that is easy to pick up and to do that Gleim is a language with no hidden magic",
    "start": "437599",
    "end": "445160"
  },
  {
    "text": "what do I mean by that well sometimes a language allows us to get really smart smart but most of the times we can when",
    "start": "445160",
    "end": "452879"
  },
  {
    "text": "we can get smart well we can get too smart for our own good and so it's fun trying to fit as many things as possible",
    "start": "452879",
    "end": "459479"
  },
  {
    "text": "into a single incredibly thirst line of code but while the code writing feels quite empowering and we feel super",
    "start": "459479",
    "end": "465680"
  },
  {
    "text": "powerful when we go back to it even what a week later the code reading starts",
    "start": "465680",
    "end": "471080"
  },
  {
    "text": "getting worse and worse because it's hard to understand what is going on when the code relies on some hidden shared",
    "start": "471080",
    "end": "477240"
  },
  {
    "text": "knowledge between me the me of the past and the compiler and so Gleim tries to go to the other side of the trade-off",
    "start": "477240",
    "end": "484520"
  },
  {
    "text": "Gleim is an explicit language a language where you can read your code and what is there is what is going on there's no",
    "start": "484520",
    "end": "491240"
  },
  {
    "text": "hidden magic no hidden control flow um no uh implicit casts null pointers",
    "start": "491240",
    "end": "497759"
  },
  {
    "text": "unchecked exceptions and so on and this really reflects in glimps",
    "start": "497759",
    "end": "504039"
  },
  {
    "text": "own Frameworks and libraries whisp for example is a simple framework that",
    "start": "504039",
    "end": "509080"
  },
  {
    "text": "doesn't rely on confusing magic and just stays close to this idea of just using",
    "start": "509080",
    "end": "514760"
  },
  {
    "text": "function calls so let's have a look at some code the main idea in wisp is we",
    "start": "514760",
    "end": "520000"
  },
  {
    "text": "that we have endlers a endler basically is a function that takes in a request from a client and has to return a",
    "start": "520000",
    "end": "526640"
  },
  {
    "text": "response that we then send back to the client so we can just focus on that while the framework is taking care of",
    "start": "526640",
    "end": "532720"
  },
  {
    "text": "all the other uh little details of HTTP communication so here what we're doing",
    "start": "532720",
    "end": "538320"
  },
  {
    "text": "is we are building a good all our coded HTML string we're turning that into a string tree that is a data structure",
    "start": "538320",
    "end": "544399"
  },
  {
    "text": "used by wisp to efficiently build a response that is then sent back to the client with a status code of 200 and if",
    "start": "544399",
    "end": "551920"
  },
  {
    "text": "you've done any JavaScript you might already be familiar with this kind of code um but glim also has some really",
    "start": "551920",
    "end": "557880"
  },
  {
    "text": "nice feature to allow for code that is easier to read and also nicer to write for example we don't really care about",
    "start": "557880",
    "end": "564240"
  },
  {
    "text": "those variable names we don't really care that that is called HTML and body and so on what we care about is this",
    "start": "564240",
    "end": "570000"
  },
  {
    "text": "pipeline of Transformations and so gleam has a nice pipe operator that does exactly that it takes what comes before",
    "start": "570000",
    "end": "576600"
  },
  {
    "text": "it and passes it as the first argument to the function next and so instead of having to come up with different name",
    "start": "576600",
    "end": "582880"
  },
  {
    "text": "which is the hardest problem in computer science we can just focus on this pipeline of Transformations and so we",
    "start": "582880",
    "end": "589320"
  },
  {
    "text": "see we start with a string that is turned into a string tree and finally into an HDML",
    "start": "589320",
    "end": "595200"
  },
  {
    "text": "response so far so good but what if we want logging of course any serious server has to do that and again we do",
    "start": "595200",
    "end": "602600"
  },
  {
    "text": "not want to stray from this idea of just using functions and in wisp that is other function we call that middleware",
    "start": "602600",
    "end": "609720"
  },
  {
    "text": "because it's adding some capabilities to our request sendler in this case we are calling the built-in log request",
    "start": "609720",
    "end": "615600"
  },
  {
    "text": "function to the Wisp Library we pass in the request that we want to be logged and then we have to pass it a call back",
    "start": "615600",
    "end": "622079"
  },
  {
    "text": "to tell it what to do next after logging the request and so it has to build that response we are going to be sending back",
    "start": "622079",
    "end": "627920"
  },
  {
    "text": "to the client and again a thing you might hear from time to time in glimps community is all",
    "start": "627920",
    "end": "634240"
  },
  {
    "text": "you need is data and functions and I think you will see this throughout the entire talk we do not stray from this",
    "start": "634240",
    "end": "640399"
  },
  {
    "text": "idea that we can build complex and Incredibly powerful software by just using these two basic building",
    "start": "640399",
    "end": "647360"
  },
  {
    "text": "blocks but now what if our server has to talk to an external service what if it",
    "start": "647360",
    "end": "652399"
  },
  {
    "text": "has to talk to a datab base or read a file or something else entirely something that could go wrong in a",
    "start": "652399",
    "end": "657880"
  },
  {
    "text": "myriad of ways and sometimes the failure might not actually be recoverable we",
    "start": "657880",
    "end": "663040"
  },
  {
    "text": "don't want the client to be hanging so we want to rescue recover from those crashes and send automatically a 500",
    "start": "663040",
    "end": "670200"
  },
  {
    "text": "internal server error response so uh I have a project",
    "start": "670200",
    "end": "677800"
  },
  {
    "start": "672000",
    "end": "900000"
  },
  {
    "text": "here this is the code I was showing you so pretty straightforward what if we",
    "start": "678160",
    "end": "685279"
  },
  {
    "text": "want to recover from crashes well we add another middle which is again just a function call and we have um uh language",
    "start": "685279",
    "end": "694079"
  },
  {
    "text": "server integration that is um really useful because it's telling us what we can use what the functions at our",
    "start": "694079",
    "end": "700639"
  },
  {
    "text": "disposal are what's the documentation show all the things we have syntax highlighting of course um and again",
    "start": "700639",
    "end": "708079"
  },
  {
    "text": "rescue crashes just takes a callback telling it what to run and what to rescue from so if something goes wrong",
    "start": "708079",
    "end": "714959"
  },
  {
    "text": "inside it well it's going to automatically take care of that",
    "start": "714959",
    "end": "720079"
  },
  {
    "text": "so let's try and run this again glim run compiler pretty fast and we are up and",
    "start": "720079",
    "end": "725399"
  },
  {
    "text": "running hello y go yes this is going to be really confusing for the people at",
    "start": "725399",
    "end": "730680"
  },
  {
    "text": "home but uh come to me later um and you see it's being logged on the terminal",
    "start": "730680",
    "end": "737160"
  },
  {
    "text": "great so we are logging things we are rescuing from crashes so that clients are not left hanging so it's becoming",
    "start": "737160",
    "end": "744120"
  },
  {
    "text": "quite powerful and we could keep adding more mware more stuff to make it even better but the those of you with a Keen",
    "start": "744120",
    "end": "750160"
  },
  {
    "text": "Eye might have noticed a kind of alarming pattern as we add more callbacks as we keep growing this kind",
    "start": "750160",
    "end": "757240"
  },
  {
    "text": "of cack based API our code start assume assuming a sort of triangle shape we",
    "start": "757240",
    "end": "762920"
  },
  {
    "text": "call it Pyramid of Doom for a reason that is not a really nice sounding name and that's fair because it makes our",
    "start": "762920",
    "end": "769360"
  },
  {
    "text": "code harder to read and as we add more CS more mare the code is getting nested",
    "start": "769360",
    "end": "775000"
  },
  {
    "text": "and nested and nested until it is unreadable so how does glim solve this",
    "start": "775000",
    "end": "780360"
  },
  {
    "text": "without straying from this idea that again it's just uh data and functions",
    "start": "780360",
    "end": "785720"
  },
  {
    "text": "well to show you that I let the language server help me because Gams language server is really capable and can do some",
    "start": "785720",
    "end": "792680"
  },
  {
    "text": "pretty powerful code actions for us and here it's going to rewrite our code",
    "start": "792680",
    "end": "798199"
  },
  {
    "text": "so let me first rewrite this and even if you have no idea what is going on here I",
    "start": "798199",
    "end": "803839"
  },
  {
    "text": "think you can appreciate how the Pyramid of Doom disappeared so that is quite interesting what is is going on here um",
    "start": "803839",
    "end": "811760"
  },
  {
    "text": "this used keyword is what allows glim to do this basically what is happening here is it's taking everything that comes",
    "start": "811760",
    "end": "818120"
  },
  {
    "text": "after it and passing it as the body of an anonymous function to the function",
    "start": "818120",
    "end": "823800"
  },
  {
    "text": "that is on the right hand side of the use so this is exactly the same thing as",
    "start": "823800",
    "end": "829519"
  },
  {
    "text": "the code we had before it's just a mere syntactic transformation but at the same time it's getting rid of this pyramid of",
    "start": "829519",
    "end": "836800"
  },
  {
    "text": "Tomb allowing us to have powerful call back based apis without the problem of our code becoming unreadable and we",
    "start": "836800",
    "end": "843519"
  },
  {
    "text": "could keep adding more and more things and as you can see the indentation doesn't grow but arguably this is glam's",
    "start": "843519",
    "end": "850959"
  },
  {
    "text": "most complex feature and there's always that kind of feature we haven't heard of before when we are learning a new",
    "start": "850959",
    "end": "856600"
  },
  {
    "text": "language that we might get hung up on and the language server is here to help so if you dive into a glim code base",
    "start": "856600",
    "end": "863560"
  },
  {
    "text": "that you've never read before and you see that and maybe that's quite confusing because you can figure out what is going on",
    "start": "863560",
    "end": "869680"
  },
  {
    "text": "you can just ask the language server to do the opposite and rewrite it as uh the",
    "start": "869680",
    "end": "876360"
  },
  {
    "text": "equivalent callback based version so you don't have to get stuck on something just because maybe the feature is not",
    "start": "876360",
    "end": "882519"
  },
  {
    "text": "totally clear to you you can just have the language server rewrite it and ah now I see it it's just a callback I can",
    "start": "882519",
    "end": "889399"
  },
  {
    "text": "rewrite it again using use sorry for the tongue",
    "start": "889399",
    "end": "894880"
  },
  {
    "text": "twisting okay",
    "start": "894880",
    "end": "898880"
  },
  {
    "start": "900000",
    "end": "1113000"
  },
  {
    "text": "great now uh an HTML string are coded in the code is fun and all but we usually",
    "start": "900720",
    "end": "906720"
  },
  {
    "text": "need something quite more powerful and to do this in Gleim we can use luster",
    "start": "906720",
    "end": "912040"
  },
  {
    "text": "that has another is another library that has a functional declarative API to",
    "start": "912040",
    "end": "917079"
  },
  {
    "text": "Define HTML documents and so we can use it here to render an HTML document on",
    "start": "917079",
    "end": "922480"
  },
  {
    "text": "the server and then serve it to the client what does that look like well we start with our our coded string",
    "start": "922480",
    "end": "929680"
  },
  {
    "text": "and this is how you would do it in luster again it's just a function call we're calling the H1 function coming",
    "start": "929680",
    "end": "936600"
  },
  {
    "text": "from Luster's uh library and unsurprisingly that is going to produce an H1 HTML element it takes two lists as",
    "start": "936600",
    "end": "946360"
  },
  {
    "text": "input a list of um attributes and a list of children here the only children of",
    "start": "946360",
    "end": "952199"
  },
  {
    "text": "the H1 element is the text hello ya and again this is just a function",
    "start": "952199",
    "end": "958240"
  },
  {
    "text": "call we do not need to do this with macros we do not need to do this by embedding an entirely different language",
    "start": "958240",
    "end": "964880"
  },
  {
    "text": "inside gam with its own rules and its own inner workings and while if we are",
    "start": "964880",
    "end": "970759"
  },
  {
    "text": "used to working in a different way maybe with something like jsx this might come at a surp as a surprise at first my",
    "start": "970759",
    "end": "978279"
  },
  {
    "text": "recommendation is just give it a try because once it clicks once you realize",
    "start": "978279",
    "end": "983319"
  },
  {
    "text": "that it's just functions at the end of the day it's the most exhilarating feelings because now now all your ideas",
    "start": "983319",
    "end": "990360"
  },
  {
    "text": "about how you should structure your code how you should organize your code how you should refactor it to make it more",
    "start": "990360",
    "end": "996040"
  },
  {
    "text": "readable more understandable and make it better applies just as easily to your",
    "start": "996040",
    "end": "1001399"
  },
  {
    "text": "HTML producing code because it's not an embedded DSL with its own rules that you",
    "start": "1001399",
    "end": "1006920"
  },
  {
    "text": "have to learn a new every time you try it and it's hard to move around the refactoring story here is a breath and",
    "start": "1006920",
    "end": "1013279"
  },
  {
    "text": "so just give that a try it might feel unusual at first but it's just the best and so for example let's say I want to",
    "start": "1013279",
    "end": "1019759"
  },
  {
    "text": "show some blue sky accounts it's all the rage now um so I'm splitting this into",
    "start": "1019759",
    "end": "1026199"
  },
  {
    "text": "functions because for me this makes it more readable and I have a function that displays just a single account as a list",
    "start": "1026199",
    "end": "1032839"
  },
  {
    "text": "item so it has some text it has a link again pretty straightforward and then",
    "start": "1032839",
    "end": "1037918"
  },
  {
    "text": "I'm reusing this function and applying it to a list of accounts to produce an",
    "start": "1037919",
    "end": "1043079"
  },
  {
    "text": "unordered list and so now I can reuse these little Snippets of code to produce",
    "start": "1043079",
    "end": "1048120"
  },
  {
    "text": "different elements and the refactoring story is pretty simple I can just maybe pull things out in a function give that",
    "start": "1048120",
    "end": "1055039"
  },
  {
    "text": "a name because that helps me read my code and make it better comment it if I need to and so",
    "start": "1055039",
    "end": "1061679"
  },
  {
    "text": "on and of course this doesn't stop here maybe server side rendering is great if",
    "start": "1061679",
    "end": "1067720"
  },
  {
    "text": "you're just getting started if you need an MVP that you want to show to your pointy her boss to just show something",
    "start": "1067720",
    "end": "1073400"
  },
  {
    "text": "on the screen but as your application grow and your needs grow you might want",
    "start": "1073400",
    "end": "1078960"
  },
  {
    "text": "something more advanced you might want for example client side interaction you want an application that doesn't have to",
    "start": "1078960",
    "end": "1084080"
  },
  {
    "text": "do a round trip to the server every night you every time you need to change something and luster as you covered",
    "start": "1084080",
    "end": "1090880"
  },
  {
    "text": "because it also has a way to have interactive client side Rich",
    "start": "1090880",
    "end": "1096000"
  },
  {
    "text": "applications and so you don't have to do a round trip to the server every single time you can have an application that",
    "start": "1096000",
    "end": "1101280"
  },
  {
    "text": "leaves even when there's no internet connection and it has other great things I cannot possibly cover all of those in",
    "start": "1101280",
    "end": "1107919"
  },
  {
    "text": "this talk but do check it out it's an amazing project and now we get to the database",
    "start": "1107919",
    "end": "1116039"
  },
  {
    "start": "1113000",
    "end": "1194000"
  },
  {
    "text": "that is that is quite painful so how do we talk to a database well how many of you have used an",
    "start": "1116039",
    "end": "1121520"
  },
  {
    "text": "omm oh God I see quite quite a good amount of hands so the thing is the omm",
    "start": "1121520",
    "end": "1127480"
  },
  {
    "text": "way of doing this is it tries to hide the SQL as much as possible shielding",
    "start": "1127480",
    "end": "1133039"
  },
  {
    "text": "the developer from having to write any SQL at all and so it will try to Wrangle and figure out the best possible query",
    "start": "1133039",
    "end": "1139799"
  },
  {
    "text": "to fetch your data possibly not over fetching things um we know that is quite hard possibly not hitting the database",
    "start": "1139799",
    "end": "1146480"
  },
  {
    "text": "too many times we know that is quite OD as well um but usually that is the orm",
    "start": "1146480",
    "end": "1152159"
  },
  {
    "text": "way but the way I like to do things and the way I'm trying to push the game Community towards is by just embracing",
    "start": "1152159",
    "end": "1159919"
  },
  {
    "text": "the sequel what does that mean well there's no denying that SQL is an",
    "start": "1159919",
    "end": "1165000"
  },
  {
    "text": "amazing query language and there's no point in trying to hide it and try to Shield as developers from writing SQL we",
    "start": "1165000",
    "end": "1171640"
  },
  {
    "text": "might just as well embrace it and embrace its full power and I think a testament to this is the fact that every",
    "start": "1171640",
    "end": "1177480"
  },
  {
    "text": "omm has to have a sort of Escape at to write row equal queries because we need",
    "start": "1177480",
    "end": "1183600"
  },
  {
    "text": "that at the end of the day when things starts getting complex that n plus1 query problem that over fetching problem",
    "start": "1183600",
    "end": "1189640"
  },
  {
    "text": "is really hard to solve unless we are doing the thing with SQL and so uh what",
    "start": "1189640",
    "end": "1195400"
  },
  {
    "start": "1194000",
    "end": "1229000"
  },
  {
    "text": "we can do in gim is use a library called squirrel I might be a bit biased I'm the author of the library so don't trust me",
    "start": "1195400",
    "end": "1202559"
  },
  {
    "text": "on that but it's really good um and again what's the approach here it's just plain old SQL files we do not need a",
    "start": "1202559",
    "end": "1210360"
  },
  {
    "text": "complex a complex obstruction a custom DSL that's limiting Us in what we can do with SQL and then having a sort of",
    "start": "1210360",
    "end": "1217000"
  },
  {
    "text": "Escape Edge because it's of course limited this sounds a bit and wavy and",
    "start": "1217000",
    "end": "1222600"
  },
  {
    "text": "I'm waving my hands a lot not just because I'm Italian so what does this look like in practice",
    "start": "1222600",
    "end": "1230080"
  },
  {
    "start": "1229000",
    "end": "1714000"
  },
  {
    "text": "well let me stop",
    "start": "1230080",
    "end": "1233919"
  },
  {
    "text": "this okay here is the code I was showing you earlier maybe I could make that a bit bigger is that better okay um before",
    "start": "1237679",
    "end": "1246720"
  },
  {
    "text": "we move to the sequel just let me show you another amazing uh developer experience tidbitting Lim did you notice",
    "start": "1246720",
    "end": "1253679"
  },
  {
    "text": "that to-do keyword that is a keyword in the language that you can just slap everywhere to make the comp comper happy",
    "start": "1253679",
    "end": "1259120"
  },
  {
    "text": "to make your code compile and you can just move forward that is the best thing for developer experience because when",
    "start": "1259120",
    "end": "1265960"
  },
  {
    "text": "you're figuring things out when you need to figure stuff out maybe the API is not totally clear to you or maybe you're",
    "start": "1265960",
    "end": "1272600"
  },
  {
    "text": "just getting a feeling for how your code should look like well it's super important not to get hung on the details",
    "start": "1272600",
    "end": "1278960"
  },
  {
    "text": "on the little minutia that you need to figure out maybe to what fetch the accounts from the database we don't need",
    "start": "1278960",
    "end": "1284480"
  },
  {
    "text": "that now we can just focus on the code we want to write and get to the details later and the compiler here is our",
    "start": "1284480",
    "end": "1291600"
  },
  {
    "text": "friend again acting as a sort of PA programmer is telling us wait this code is incomplete um it will crush if you",
    "start": "1291600",
    "end": "1298279"
  },
  {
    "text": "try and run it get back to it before you run your code just really nice little bit of",
    "start": "1298279",
    "end": "1304120"
  },
  {
    "text": "developer experience here so getting back to SQL and squirrel what does this look like well we are just writing SQL",
    "start": "1304120",
    "end": "1311360"
  },
  {
    "text": "so as you might have noticed this is a SQL file and squirrel decides to have a",
    "start": "1311360",
    "end": "1318600"
  },
  {
    "text": "convention over configuration approach so every time you dive in a different code base you know where to look at you",
    "start": "1318600",
    "end": "1323919"
  },
  {
    "text": "know that the SQL files are going to be there if it's using squirrel and we are",
    "start": "1323919",
    "end": "1328960"
  },
  {
    "text": "just writing SQL there's nothing magical here so the nice thing is by embracing",
    "start": "1328960",
    "end": "1334120"
  },
  {
    "text": "it we are just writing a SQL file we get syntax highlighting we can format our code automatically we can if we get",
    "start": "1334120",
    "end": "1341400"
  },
  {
    "text": "tired about this maybe we don't want to use squirel anymore maybe we don't want to use gleam I would be really sad but",
    "start": "1341400",
    "end": "1346640"
  },
  {
    "text": "maybe you want to move to another different thing intire you just have the files there you can copy those to a new project you're not",
    "start": "1346640",
    "end": "1353679"
  },
  {
    "text": "getting locked in into a specific omm that is limiting you and now it's really hard to get the queries out of what it's",
    "start": "1353679",
    "end": "1361400"
  },
  {
    "text": "doing maybe let's try and make this just a t more complex uh just to show you",
    "start": "1361400",
    "end": "1366919"
  },
  {
    "text": "something that is not a simple select so maybe we want all the accounts in a one month uh window of time so we can say",
    "start": "1366919",
    "end": "1373720"
  },
  {
    "text": "where the account. joined um is between",
    "start": "1373720",
    "end": "1379240"
  },
  {
    "text": "and here maybe I don't know the date yet so I can take that as a query parameter um and we go one month prior",
    "start": "1379240",
    "end": "1387120"
  },
  {
    "text": "to that wait let me format this bit better",
    "start": "1387120",
    "end": "1392799"
  },
  {
    "text": "and the date itself and I think that it's impossible to deny that SQL is just",
    "start": "1392799",
    "end": "1398880"
  },
  {
    "text": "an amazing query language to do this kind of data wrangling so we're good to go we've",
    "start": "1398880",
    "end": "1403960"
  },
  {
    "text": "written our query and now what do we do with squirel well we can just run squirel after a it to our development",
    "start": "1403960",
    "end": "1409880"
  },
  {
    "text": "dependencies and just like that it has generated the glim code that we need to run that query um in our Glen",
    "start": "1409880",
    "end": "1418279"
  },
  {
    "text": "project so getting back to our router here we can call now the sequal do list",
    "start": "1418279",
    "end": "1426000"
  },
  {
    "text": "accounts function that is taking two arguments let's forget about those for now and",
    "start": "1426000",
    "end": "1432000"
  },
  {
    "text": "that's it that's how we run a SQL quitting glim and that is type save again that is checked against the",
    "start": "1432000",
    "end": "1437720"
  },
  {
    "text": "database making sure that it respects your schema and it has the correct types so that it is impossible to mess up at",
    "start": "1437720",
    "end": "1444000"
  },
  {
    "text": "run time now getting back to those arguments um the first thing is of",
    "start": "1444000",
    "end": "1449559"
  },
  {
    "text": "course we need a database connection we cannot come up with that out of th air and second well the second argument do",
    "start": "1449559",
    "end": "1456919"
  },
  {
    "text": "you know what that is the date we had a query parameter in our query and squirel",
    "start": "1456919",
    "end": "1461960"
  },
  {
    "text": "is smart enough to figure that we need that as a parameter and give that the correct type so here we have to build a",
    "start": "1461960",
    "end": "1468480"
  },
  {
    "text": "eight maybe let's make it today I don't want to mess this up it's the 10th okay",
    "start": "1468480",
    "end": "1474159"
  },
  {
    "text": "and we're good to go so we need to Fed in that query parameter otherwise it's not going to run but squirrel knows that",
    "start": "1474159",
    "end": "1480159"
  },
  {
    "text": "and the compiler will make sure that we pass that in now what well we see another yellow",
    "start": "1480159",
    "end": "1486760"
  },
  {
    "text": "squiggly line under our code and it's telling us hey buddy this this result is",
    "start": "1486760",
    "end": "1492159"
  },
  {
    "text": "unused well the thing is you don't want to ignore that you've made a call to a database and just throwing away all that",
    "start": "1492159",
    "end": "1498720"
  },
  {
    "text": "work is quite wasteful so what do we do with the results well we P match on those so you can think of pter matching",
    "start": "1498720",
    "end": "1505080"
  },
  {
    "text": "as a sort of a switch statement but way more powerful um basically that allows",
    "start": "1505080",
    "end": "1511279"
  },
  {
    "text": "us to take a different action based on the shape of some data a sort of if else",
    "start": "1511279",
    "end": "1516399"
  },
  {
    "text": "but again a bit more expressive here and what do we need to put in there well",
    "start": "1516399",
    "end": "1521440"
  },
  {
    "text": "again we can ask the language server we don't have to be slowed down by not knowing something so the language server",
    "start": "1521440",
    "end": "1527520"
  },
  {
    "text": "knows loads of about our code and can help us here so we can just ask it to add all the missing patterns and it kind",
    "start": "1527520",
    "end": "1534520"
  },
  {
    "text": "of makes sense right when we're talking to a database two things might happen things might go wrong and we get an",
    "start": "1534520",
    "end": "1540159"
  },
  {
    "text": "error back or things might be okay and we get a result back so what do we do if",
    "start": "1540159",
    "end": "1545360"
  },
  {
    "text": "we get an error well we can send back a maybe internal server error for now I don't really care about dealing with",
    "start": "1545360",
    "end": "1551320"
  },
  {
    "text": "that now but if things are okay we can get a hold of that result the thing that",
    "start": "1551320",
    "end": "1557240"
  },
  {
    "text": "the database returns the list of all the rows that were fetched by the query and so we can just",
    "start": "1557240",
    "end": "1564000"
  },
  {
    "text": "like that view all the",
    "start": "1564000",
    "end": "1568240"
  },
  {
    "text": "accounts done so we can uncomment our code here finally what is an account you",
    "start": "1569640",
    "end": "1575600"
  },
  {
    "text": "might ask well that again was generated automatically by squirrel it's a row returned by the list accounts query and",
    "start": "1575600",
    "end": "1582559"
  },
  {
    "text": "it has exactly the data we were asking for so it's impossible to over fetch things unknowingly you you know when you",
    "start": "1582559",
    "end": "1588640"
  },
  {
    "text": "use an Noam and you do get something and then it loads gigabytes of data and",
    "start": "1588640",
    "end": "1594360"
  },
  {
    "text": "megabytes of data that's quite bad here it's just loading the thing that are in",
    "start": "1594360",
    "end": "1599640"
  },
  {
    "text": "our select list so it's impossible to um unknowingly mess things up and over",
    "start": "1599640",
    "end": "1604760"
  },
  {
    "text": "fetch data and then we can uncomment this code here and look at that another red",
    "start": "1604760",
    "end": "1611799"
  },
  {
    "text": "squiggle what is going on here well as I've told you and if you've been to Chris talk yesterday you know it the",
    "start": "1611799",
    "end": "1618679"
  },
  {
    "text": "compiler is like having a dialogue with us it's like having a pair programmer by our side who's telling us what to do",
    "start": "1618679",
    "end": "1625600"
  },
  {
    "text": "next what might go wrong with our code and how to fix it and here it's smart enough to understand that well maybe",
    "start": "1625600",
    "end": "1631799"
  },
  {
    "text": "that is a typo there is no display num in our account that is actually a display name and so we can fix it and",
    "start": "1631799",
    "end": "1640240"
  },
  {
    "text": "just like that we are good to go what is uh the type of view accounts you might",
    "start": "1640240",
    "end": "1645960"
  },
  {
    "text": "ask well we can again Ask the language server to generate that for us automatically and so you see the",
    "start": "1645960",
    "end": "1651960"
  },
  {
    "text": "accounts must be a list of those rows and it returns an HTML",
    "start": "1651960",
    "end": "1657200"
  },
  {
    "text": "element okay we're good to go we have no warnings we have no errors we've had this kind of dialogue with this really",
    "start": "1657200",
    "end": "1663080"
  },
  {
    "text": "helpful and thorough per programmer we've reached a solution that might work let's try and run this and see what is",
    "start": "1663080",
    "end": "1668840"
  },
  {
    "text": "going on here so again we connect to the thing and look at that some lovely Blue Sky",
    "start": "1668840",
    "end": "1675279"
  },
  {
    "text": "accounts sorry I had to do the Shamel plug here",
    "start": "1675279",
    "end": "1680360"
  },
  {
    "text": "um okay and so as you can see we can still embrace the SQL and not compromise",
    "start": "1680360",
    "end": "1687320"
  },
  {
    "text": "on type safety and developer experience if writing the SQL means writing a",
    "start": "1687320",
    "end": "1693120"
  },
  {
    "text": "hardcoded string in your code well that is not the best developer experience but if you can just use a plain old SQL file",
    "start": "1693120",
    "end": "1699360"
  },
  {
    "text": "and get nice code that is types safe idiomatic and you can just reuse in your codebase well I'd argue that that's a",
    "start": "1699360",
    "end": "1705840"
  },
  {
    "text": "great developer experience and again SQL is the best query language there is there's no denying",
    "start": "1705840",
    "end": "1713200"
  },
  {
    "text": "it so how can gim do all of this how can we have a server that can sustain the",
    "start": "1713519",
    "end": "1720200"
  },
  {
    "start": "1714000",
    "end": "1893000"
  },
  {
    "text": "highest workloads even under the 99th percentile of workloads that can work in",
    "start": "1720200",
    "end": "1725600"
  },
  {
    "text": "a concurrent distributed setting uh talk to a database at at the same time having",
    "start": "1725600",
    "end": "1731120"
  },
  {
    "text": "an interactive application that runs on the browser well the trick here is that",
    "start": "1731120",
    "end": "1736159"
  },
  {
    "text": "glim can compile down to two amaz run times for starters it can compile to JavaScript so you can run GLE everywhere",
    "start": "1736159",
    "end": "1743159"
  },
  {
    "text": "JavaScript runs which is well everywhere basically um and that's really nice",
    "start": "1743159",
    "end": "1748600"
  },
  {
    "text": "because what if you need to run your gleen code on the browser well you can compile it to JavaScript bundle it and you're good to go you need maybe an AWS",
    "start": "1748600",
    "end": "1757080"
  },
  {
    "text": "worker or something compile it to JavaScript and again you're good to go at the same time though gleam compiles",
    "start": "1757080",
    "end": "1763240"
  },
  {
    "text": "down to erlang another language that runs on the amazing beam how many of you have heard of the beam okay quite a few",
    "start": "1763240",
    "end": "1771360"
  },
  {
    "text": "hands that's lovely um so what is the beam well the beam is an amazing runtime",
    "start": "1771360",
    "end": "1777200"
  },
  {
    "text": "that has been developed since the 80s and was born to address the very specific needs of a very specific",
    "start": "1777200",
    "end": "1783640"
  },
  {
    "text": "industry you might have heard of edicson the Telecom industry and at the time they had to make telephone switches and",
    "start": "1783640",
    "end": "1791000"
  },
  {
    "text": "they had some really strange constraints there because those had to be well first of all fall tolerant you don't want a",
    "start": "1791000",
    "end": "1797720"
  },
  {
    "text": "phone switch to randomly die and then you have to send someone go fix the phone switch and they had to work under",
    "start": "1797720",
    "end": "1804919"
  },
  {
    "text": "highly distributed and concurrent settings handling many phone calls at the same time if phone switches only",
    "start": "1804919",
    "end": "1811399"
  },
  {
    "text": "handled a single phone call at a time well I don't think phones would have really taken off um and so the beam has",
    "start": "1811399",
    "end": "1819640"
  },
  {
    "text": "been built with these ideas baked into the virtual machine into the",
    "start": "1819640",
    "end": "1824679"
  },
  {
    "text": "runtime with this idea of having full tolerant systems systems that can communicate across the net that can work",
    "start": "1824679",
    "end": "1830760"
  },
  {
    "text": "in a distributed setting exchanging messages and that might have been like",
    "start": "1830760",
    "end": "1836799"
  },
  {
    "text": "Niche needs at the time like of only Ericson but if you think about it full",
    "start": "1836799",
    "end": "1842159"
  },
  {
    "text": "tolerance distribution concurrency well that's a given nowadays we want all our systems to have these kind of properties",
    "start": "1842159",
    "end": "1849320"
  },
  {
    "text": "and so by compiling down to the irang and running on the beam we can leverage this amazing runtime that has been",
    "start": "1849320",
    "end": "1855799"
  },
  {
    "text": "batttle tested for the past 30 plus years and has been worked on like crazy",
    "start": "1855799",
    "end": "1861000"
  },
  {
    "text": "and so Gleim can do this really nice thing where you have your backand that's written in gim and compiles to lling and",
    "start": "1861000",
    "end": "1867159"
  },
  {
    "text": "runs on the beam and talks to a front end that is compiled to JavaScript and can run on the",
    "start": "1867159",
    "end": "1873000"
  },
  {
    "text": "browser so we have also a really nice story of full stock web development where you might have um an application",
    "start": "1873000",
    "end": "1880080"
  },
  {
    "text": "running on the client in GLE a server in gim and maybe some common code that's",
    "start": "1880080",
    "end": "1886039"
  },
  {
    "text": "shared between the two by using the same language we gain this amazing",
    "start": "1886039",
    "end": "1892080"
  },
  {
    "text": "power okay I think it's time to start wrapping things up so glim is a language designed to be simple designed to be",
    "start": "1892080",
    "end": "1898840"
  },
  {
    "start": "1893000",
    "end": "2050000"
  },
  {
    "text": "easy to pick up and productive with notice how I've never told you that glim is functional I had really no need to",
    "start": "1898840",
    "end": "1905159"
  },
  {
    "text": "tell you it has two basic building blocks it has functions and data but when we talk about functional languages",
    "start": "1905159",
    "end": "1912200"
  },
  {
    "text": "those might be quite scary at first but as you might have noticed glim is pretty much approachable and as a famili syntax",
    "start": "1912200",
    "end": "1918880"
  },
  {
    "text": "that helps you learn and understand what is going on as you're learning the language it has great error messages you",
    "start": "1918880",
    "end": "1924919"
  },
  {
    "text": "can talk with the compiler the compiler is not here to tell you that something is wrong if you messed up horribly the",
    "start": "1924919",
    "end": "1931200"
  },
  {
    "text": "compiler is here to help you build a system that just works figuring out all the little mistakes that might go on and",
    "start": "1931200",
    "end": "1937200"
  },
  {
    "text": "all the little things you need to take care of that doesn't have to stop here though developer experience is so much",
    "start": "1937200",
    "end": "1943279"
  },
  {
    "text": "more than just having a powerful language developer experience is mainly tooling",
    "start": "1943279",
    "end": "1948360"
  },
  {
    "text": "and so gleam comes with some amazing tools out of the box it comes with a compiler a build tool to run your code",
    "start": "1948360",
    "end": "1955320"
  },
  {
    "text": "and your test a package manager to manage your dependencies so you don't have to worry about what the best one is",
    "start": "1955320",
    "end": "1961880"
  },
  {
    "text": "or what configuration file to use it also comes with a built-in formatter you might have noticed as I was typing the",
    "start": "1961880",
    "end": "1968320"
  },
  {
    "text": "code was being Rewritten in a nice way so you don't have to lose hours of bike shedding with your co-workers about",
    "start": "1968320",
    "end": "1974880"
  },
  {
    "text": "where curly brace should be I don't know why but we developers love to to talk about that horrible um and finally and",
    "start": "1974880",
    "end": "1983080"
  },
  {
    "text": "most importantly gleam comes with a built-in language server and editor integration so if your editor can speak",
    "start": "1983080",
    "end": "1989360"
  },
  {
    "text": "the language server protocol which is basically every editor vs code Zed terminal based editors you're pretty",
    "start": "1989360",
    "end": "1995600"
  },
  {
    "text": "much good to go you've installed the gleam binaries and you can start getting productive and get those amazing Cod auctions I showed you earlier and so",
    "start": "1995600",
    "end": "2002519"
  },
  {
    "text": "much more so I started by describing gam as friendly type safe and and scalable",
    "start": "2002519",
    "end": "2009000"
  },
  {
    "text": "but if I had to use just a single word well that would be productive gim is a",
    "start": "2009000",
    "end": "2014279"
  },
  {
    "text": "productive language a language where you can get things done at the same time with a great developer experience a",
    "start": "2014279",
    "end": "2020760"
  },
  {
    "text": "quote I really love comes from a Community member that's putting gam in production aen and she says looking at",
    "start": "2020760",
    "end": "2028039"
  },
  {
    "text": "my gleam coat makes me feel calm luster and gleam make my heart rate go down",
    "start": "2028039",
    "end": "2034000"
  },
  {
    "text": "which I think is the best thing we can say about a programming language have you ever felt that way developing",
    "start": "2034000",
    "end": "2039519"
  },
  {
    "text": "software and putting software in production I don't know it's not a really common feeling I guess so I think",
    "start": "2039519",
    "end": "2045840"
  },
  {
    "text": "that's a pretty good compliment to receive and I'm quite happy that people are liking it so our journey might end here but",
    "start": "2045840",
    "end": "2053878"
  },
  {
    "start": "2050000",
    "end": "2062000"
  },
  {
    "text": "that doesn't mean that your journey with gleam has to stop here so if you think this is interesting if you want to give",
    "start": "2053879",
    "end": "2059720"
  },
  {
    "text": "a more in-depth look well the best place to get started is the language tool so",
    "start": "2059720",
    "end": "2065040"
  },
  {
    "start": "2062000",
    "end": "2091000"
  },
  {
    "text": "to get started with gim you do not even need to install it you just go to to. gl. run and since glim compiles to",
    "start": "2065040",
    "end": "2071760"
  },
  {
    "text": "JavaScript this will run glim in your browser as you type it you can go through the entire language and again",
    "start": "2071760",
    "end": "2077679"
  },
  {
    "text": "being this simple it will probably just take what a couple of evenings to see all there is to know to the language and",
    "start": "2077679",
    "end": "2083760"
  },
  {
    "text": "you can just get started doing things if you're more like the code cut person and you like doing small exercises well we",
    "start": "2083760",
    "end": "2091118"
  },
  {
    "start": "2091000",
    "end": "2109000"
  },
  {
    "text": "also have an official exorcism track with loads of exercises and if you don't know exorcism it's this amazing platform",
    "start": "2091119",
    "end": "2097118"
  },
  {
    "text": "for learning new languages not just gleam um where you can do code catas and",
    "start": "2097119",
    "end": "2103079"
  },
  {
    "text": "get feedback from other people that have solved the same problems as you and also we have an official Discord",
    "start": "2103079",
    "end": "2110079"
  },
  {
    "start": "2109000",
    "end": "2132000"
  },
  {
    "text": "server uh so if you feel like you get stuck and you don't know how to do something if you have any comment any",
    "start": "2110079",
    "end": "2116520"
  },
  {
    "text": "suggestion to improve the language to make things better or if you want to just hang around and maybe see what",
    "start": "2116520",
    "end": "2123200"
  },
  {
    "text": "there is to Gleim well please join I always hang in there so if you want to have a chart even after the conference I",
    "start": "2123200",
    "end": "2129079"
  },
  {
    "text": "would love to and so this is it this was our code Centric journey into the glim language",
    "start": "2129079",
    "end": "2136280"
  },
  {
    "start": "2132000",
    "end": "2150000"
  },
  {
    "text": "my name is jako the Little Star you see here is Lucy glam's own mascot and I want to thank you so much for coming",
    "start": "2136280",
    "end": "2142720"
  },
  {
    "text": "here and listening to this talk",
    "start": "2142720",
    "end": "2146680"
  }
]