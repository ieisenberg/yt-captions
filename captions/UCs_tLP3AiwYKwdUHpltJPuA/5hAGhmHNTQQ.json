[
  {
    "start": "0",
    "end": "71000"
  },
  {
    "text": "welcome to this talk about yeah well Vector databases so uh yeah my name is",
    "start": "12240",
    "end": "19000"
  },
  {
    "text": "Alexander it's a little bit of a tricky last name are there any Greek people here by any chance okay so well two",
    "start": "19000",
    "end": "25000"
  },
  {
    "text": "people that can pronounce my last name so that's it's something um I have a couple Hobbies I like bouldering uh from",
    "start": "25000",
    "end": "31160"
  },
  {
    "text": "time to time I have way too expensive Magic the Gathering collection um and I really like to play",
    "start": "31160",
    "end": "37360"
  },
  {
    "text": "video games are there any Gamers sitting here oh is a good amount makes me happy",
    "start": "37360",
    "end": "43520"
  },
  {
    "text": "at least some of my jokes might land then um I I said I work at a consultancy",
    "start": "43520",
    "end": "49000"
  },
  {
    "text": "in the Netherlands called J driven we're a very small group like uh 30 people and",
    "start": "49000",
    "end": "54039"
  },
  {
    "text": "we're all Java backend system Engineers uh so I mostly work on backend systems",
    "start": "54039",
    "end": "59359"
  },
  {
    "text": "uh and stuff like that uh um and at the moment I work for root scanner.com small",
    "start": "59359",
    "end": "65400"
  },
  {
    "text": "startup in rdam so well that's pretty much all I have to say about me so let's uh dive into what this talk so might",
    "start": "65400",
    "end": "73640"
  },
  {
    "start": "71000",
    "end": "139000"
  },
  {
    "text": "some of you might remember like roughly one and a half year ago it was like Aid day chbt got released to the world and",
    "start": "73640",
    "end": "81360"
  },
  {
    "text": "everybody got to play with it right I was one of those people and you know I started playing I was like whoa this",
    "start": "81360",
    "end": "86640"
  },
  {
    "text": "kind of cool how does this work can I make it myself how hard can it be well uh quite hard uh and you need a",
    "start": "86640",
    "end": "93439"
  },
  {
    "text": "couple million Venture Capital which I didn't have I still don't have by the way uh so uh by then after doing some",
    "start": "93439",
    "end": "101040"
  },
  {
    "text": "research I found one term that kept coming back uh when it came to llms uh",
    "start": "101040",
    "end": "106600"
  },
  {
    "text": "and the and the generative Ai and that was Vector databases um and that was some kind of",
    "start": "106600",
    "end": "113000"
  },
  {
    "text": "Technology all those systems use underwater to be able to find data quickly uh so I started digging into",
    "start": "113000",
    "end": "119680"
  },
  {
    "text": "that started playing around making some demos making some proof of concepts for myself try to really understand how it",
    "start": "119680",
    "end": "126200"
  },
  {
    "text": "works and that's basically what I want to show you today and I hopefully you know inspire you to do the same and work with a tech and who know maybe one of",
    "start": "126200",
    "end": "132560"
  },
  {
    "text": "you will be the one that re revolutionizes our industry in the coming years all right so before we talk about",
    "start": "132560",
    "end": "138760"
  },
  {
    "text": "Vector databases there's one very important uh well word there that everybody needs to understand vectors um",
    "start": "138760",
    "end": "146720"
  },
  {
    "start": "139000",
    "end": "300000"
  },
  {
    "text": "are there any mathematicians sitting here one person maybe okay so if I say something stupid feel free to correct me",
    "start": "146720",
    "end": "153760"
  },
  {
    "text": "uh because I'm not a mathematician um if you look vectors up there are mathemat they're mathematical construct um and",
    "start": "153760",
    "end": "161760"
  },
  {
    "text": "you typically will see a letter with an arrow on top of it and that is how you uh write a vector uh in",
    "start": "161760",
    "end": "168920"
  },
  {
    "text": "math uh and vectors are actually very good at encoding uh certain uh length",
    "start": "168920",
    "end": "174159"
  },
  {
    "text": "and direction that is what they are used for um so well if you have work work in",
    "start": "174159",
    "end": "180159"
  },
  {
    "text": "games be 2D or 3D games you most definitely used uh a vector construct",
    "start": "180159",
    "end": "185720"
  },
  {
    "text": "somewhere in your code to Def Define the position of things in your world um or",
    "start": "185720",
    "end": "192200"
  },
  {
    "text": "you know uh in geospatial systems you could say that vectors are used to you know Define where something",
    "start": "192200",
    "end": "198840"
  },
  {
    "text": "is uh but in this case we don't use vectors necessarily like this we use them more um well just to encode data",
    "start": "198840",
    "end": "208319"
  },
  {
    "text": "and vectors have a certain dimensional so this is a vector with two Dimensions uh and this is a vector with",
    "start": "208319",
    "end": "213920"
  },
  {
    "text": "three dimensions and this is a vector with eight Dimensions um and I'll just assume most of you or all of you are",
    "start": "213920",
    "end": "220519"
  },
  {
    "text": "software Engineers to some degree and if you see this uh you might immediately think hey but this is just an array of",
    "start": "220519",
    "end": "226599"
  },
  {
    "text": "numbers which is entirely true so vectors are basically an array of uh",
    "start": "226599",
    "end": "231959"
  },
  {
    "text": "floating uh Point numbers or integers it depends um and the dimensionality is",
    "start": "231959",
    "end": "237519"
  },
  {
    "text": "basically the length of the array so if I say uh a vector has a dimensionality of uh",
    "start": "237519",
    "end": "243200"
  },
  {
    "text": "1,24 that means it is an array of 1,24 numbers right so pretty easy so",
    "start": "243200",
    "end": "250879"
  },
  {
    "text": "far um so how do we use these vectors well in 2013 uh the first paper was",
    "start": "250879",
    "end": "256759"
  },
  {
    "text": "released by Google on how they were vectorizing data so basically they grabbed a piece of text like this and",
    "start": "256759",
    "end": "263320"
  },
  {
    "text": "they made a vector representation of that piece of text uh and a couple years later they",
    "start": "263320",
    "end": "269440"
  },
  {
    "text": "started to do that with for example uh images um so they grabbed an image and",
    "start": "269440",
    "end": "275759"
  },
  {
    "text": "they vectorized that image uh to have you know the vector representation or",
    "start": "275759",
    "end": "281560"
  },
  {
    "text": "so-called embedding uh and right now we are in a state where or in a state where sound",
    "start": "281560",
    "end": "288120"
  },
  {
    "text": "has been vectorized uh 3D models are being vectorized Point clouds etc etc",
    "start": "288120",
    "end": "294440"
  },
  {
    "text": "etc so we try we are like in a in a gold rush of just vectorize everything we see",
    "start": "294440",
    "end": "300440"
  },
  {
    "start": "300000",
    "end": "395000"
  },
  {
    "text": "all right uh and that this vectorization happens through uh machine learning models or machine learned models uh and",
    "start": "300440",
    "end": "307880"
  },
  {
    "text": "these vectorization techniques are called embedding models so uh you might have seen it somewhere that open AI has",
    "start": "307880",
    "end": "314120"
  },
  {
    "text": "an embedding endpoint or hugging phase has an embedding endpoint the these embedding endpoints are basically um",
    "start": "314120",
    "end": "321080"
  },
  {
    "text": "apis that you can call send your data and you will be getting the vectorization of the data back that's",
    "start": "321080",
    "end": "327360"
  },
  {
    "text": "pretty much uh all it is um there are a lot of vectorization techniques out there there are a lot of",
    "start": "327360",
    "end": "332919"
  },
  {
    "text": "models out there um it's as I said it started like roughly 11 years ago with",
    "start": "332919",
    "end": "338680"
  },
  {
    "text": "vort Tove uh by Google a couple years later glove also um was released but",
    "start": "338680",
    "end": "345080"
  },
  {
    "text": "those the first iterations had a big problem and that is that they didn't understand context so a word with",
    "start": "345080",
    "end": "351000"
  },
  {
    "text": "different meanings in different context always had the same vectorization which made it really hard to use right because",
    "start": "351000",
    "end": "357039"
  },
  {
    "text": "you know you might get all kinds of different uh inaccurate results and then uh 5 years ago I think six years ago uh",
    "start": "357039",
    "end": "364319"
  },
  {
    "text": "the transforming Revolution happened uh and Transformer models became mainstream",
    "start": "364319",
    "end": "369520"
  },
  {
    "text": "and Transformer models like ber and later clip which is a multimodal uh model uh that more on that later they",
    "start": "369520",
    "end": "376400"
  },
  {
    "text": "could actually understand context so a word with different meanings in different context did had a different",
    "start": "376400",
    "end": "382000"
  },
  {
    "text": "Vector representation uh and that really all is what allowed these llm the Gen",
    "start": "382000",
    "end": "387840"
  },
  {
    "text": "applications to you know give correct answers based on",
    "start": "387840",
    "end": "392960"
  },
  {
    "text": "context all right so that was the vector part of the vector database um everybody",
    "start": "392960",
    "end": "399759"
  },
  {
    "start": "395000",
    "end": "772000"
  },
  {
    "text": "knows what a database is right who was at um kot yesterday about the history of",
    "start": "399759",
    "end": "405960"
  },
  {
    "text": "data management a lot of you so I won't I I",
    "start": "405960",
    "end": "411560"
  },
  {
    "text": "I'm not necessarily saying I'm agreeing with everything was that was said here that keynote uh but it was a very",
    "start": "411560",
    "end": "418160"
  },
  {
    "text": "interesting one uh so data what is a vector database um it is really a purpose-built database it has one",
    "start": "418160",
    "end": "424360"
  },
  {
    "text": "purpose and one purpose only I tried to use it with for different purposes but trust me it has one purpose and that",
    "start": "424360",
    "end": "430240"
  },
  {
    "text": "purpose is to store an index High dimensional vectors that is what it was built to do and that is what they do",
    "start": "430240",
    "end": "436680"
  },
  {
    "text": "very very well uh so yeah I I I said hey I thought hey can I use it as as a Time",
    "start": "436680",
    "end": "442080"
  },
  {
    "text": "series can I use it as a event store uh you name it you can but you shouldn't",
    "start": "442080",
    "end": "447960"
  },
  {
    "text": "because writing to a vector database actually relatively slow and you really don't want to do that uh real time so to",
    "start": "447960",
    "end": "455000"
  },
  {
    "text": "say um and this is the most important part and this is for example that post chis out of the box doesn't give you you",
    "start": "455000",
    "end": "461560"
  },
  {
    "text": "have to install all kinds of extensions for it uh the indexing happens using",
    "start": "461560",
    "end": "467919"
  },
  {
    "text": "nearest neighbor search algorithms so not a b tree or anything like that it uses all kinds of um uh algorithms that",
    "start": "467919",
    "end": "476080"
  },
  {
    "text": "calculate which Vector is nearest to the vector I'm searching for and of course",
    "start": "476080",
    "end": "481199"
  },
  {
    "text": "you can store all kinds of metad data associated with your vector objects so when you get your vect your vector",
    "start": "481199",
    "end": "487240"
  },
  {
    "text": "objects uh out you can actually use that metadata to build your front ends and stuff like that all right so let's say",
    "start": "487240",
    "end": "496440"
  },
  {
    "text": "um a very Tech illiterate manager comes to you and is like I've been hearing about this thing Vector databases",
    "start": "496440",
    "end": "501479"
  },
  {
    "text": "everybody's talking about it we should use it what is it and then you can be like well at least what I said is that",
    "start": "501479",
    "end": "508319"
  },
  {
    "text": "it's a database that facil effortless and Swift semantic search on your data and there's one keyword here which is",
    "start": "508319",
    "end": "514640"
  },
  {
    "text": "semantic so if you need effortless and Swift search on your data you Pro probably use elastic or something like",
    "start": "514640",
    "end": "520000"
  },
  {
    "text": "that right but if you really need semantic search like context aware search then uh you could start looking",
    "start": "520000",
    "end": "526680"
  },
  {
    "text": "at the vector database uh as a solution uh all right so right now",
    "start": "526680",
    "end": "532399"
  },
  {
    "text": "they're mostly used at as a backing uh database for AI systems uh but that does",
    "start": "532399",
    "end": "538640"
  },
  {
    "text": "but a vector database itself doesn't have to do anything with AI so like the",
    "start": "538640",
    "end": "543760"
  },
  {
    "text": "vectorization that are stored in a vector database are often um generated",
    "start": "543760",
    "end": "549079"
  },
  {
    "text": "by Machine uh learned models but the vector database is really just a very very smart um application that is very",
    "start": "549079",
    "end": "557959"
  },
  {
    "text": "good at indexing uh numbers and finding those numbers as quickly as possible uh",
    "start": "557959",
    "end": "564079"
  },
  {
    "text": "so there's no machine learning models in the vector database uh no llms embedded",
    "start": "564079",
    "end": "569200"
  },
  {
    "text": "in the machine in the vector database nothing like that it's just very uh high-end uh application to store and get",
    "start": "569200",
    "end": "576600"
  },
  {
    "text": "numbers out pretty much so when we talk about databases there's one thing that is very important",
    "start": "576600",
    "end": "583680"
  },
  {
    "text": "uh and that is how it is indexed right or how indexing happens in those in in the database at least that is to me very",
    "start": "583680",
    "end": "590839"
  },
  {
    "text": "important uh of course you can uh every database has its own way of indexing uh",
    "start": "590839",
    "end": "596320"
  },
  {
    "text": "every database vendor or you can write your own of course if you're very advanc uh linear search for example so when you",
    "start": "596320",
    "end": "602480"
  },
  {
    "text": "enter a vector in the in the database it will do a it will check its distance with all other records in the database",
    "start": "602480",
    "end": "609160"
  },
  {
    "text": "and position it accordingly as you might think that doesn't scale very well uh so",
    "start": "609160",
    "end": "614279"
  },
  {
    "text": "then we have things like K nearest Neighbors which might some of you might have heard about pretty popular",
    "start": "614279",
    "end": "619800"
  },
  {
    "text": "algorithm shout out to Spotify for appro approximate nearest neighbors oh yeah uh",
    "start": "619800",
    "end": "625000"
  },
  {
    "text": "anoy and the followup is called Voyager and a personal favorite favorite",
    "start": "625000",
    "end": "630079"
  },
  {
    "text": "hierarchical navigable small worlds um I would never have thought that I would have a favorite algorithm but here we",
    "start": "630079",
    "end": "637600"
  },
  {
    "text": "are um and all this indexing happens with",
    "start": "637600",
    "end": "642920"
  },
  {
    "text": "so-called uh distance metrics uh so you can have you can choose pretty much uh",
    "start": "642920",
    "end": "648079"
  },
  {
    "text": "you get a standard with every database but you can choose what you want so for example ukian distance or similarity um",
    "start": "648079",
    "end": "655079"
  },
  {
    "text": "who here has doesn't know what the distance or similarity differ is it's",
    "start": "655079",
    "end": "660320"
  },
  {
    "text": "okay I didn't know either uh so um distance when you're asking for distance",
    "start": "660320",
    "end": "666519"
  },
  {
    "text": "or you checking for distance you're basically asking okay how uh uh how far away are two objects from each other and",
    "start": "666519",
    "end": "673120"
  },
  {
    "text": "if you're asking for similarity you're asking how close are two objects to each other now I know what you're thinking what this guy is saying he's it's",
    "start": "673120",
    "end": "679399"
  },
  {
    "text": "exactly the same different word same meaning but what's important to know is",
    "start": "679399",
    "end": "684560"
  },
  {
    "text": "uh when the distance is close to zero two objects are very close to each other and if the sari is close to one two",
    "start": "684560",
    "end": "690680"
  },
  {
    "text": "objects are very close to each other so it's like inverted it's a math tricks to make the calculations faster pretty much",
    "start": "690680",
    "end": "697200"
  },
  {
    "text": "uh then you can of course use Manhattan distance dot product all kinds of distance met I mean if you want you can",
    "start": "697200",
    "end": "702320"
  },
  {
    "text": "come up with your own distance metric call it Alex distance I don't know and then um it will work as long as",
    "start": "702320",
    "end": "709560"
  },
  {
    "text": "everything works with the with the same distance metric uh what's really important to",
    "start": "709560",
    "end": "714720"
  },
  {
    "text": "understand is that these distance and indexing uh distance calculations and indexing always happen within the same",
    "start": "714720",
    "end": "720240"
  },
  {
    "text": "Vector space so when you want start putting uh Vector objects in your",
    "start": "720240",
    "end": "726200"
  },
  {
    "text": "database you have to define a vector space for each of these objects and you can that do that by schema or by table",
    "start": "726200",
    "end": "733480"
  },
  {
    "text": "by object by Json um every database has its own way of doing something like this",
    "start": "733480",
    "end": "740000"
  },
  {
    "text": "uh but they do this mostly to force you to always check vectors against each",
    "start": "740000",
    "end": "745440"
  },
  {
    "text": "other with the same dimensionality so do not so so that you don't put vectors with 512 dimensions in the same Vector",
    "start": "745440",
    "end": "752880"
  },
  {
    "text": "space as Vector di Vector with 384 Dimensions because mathematically it is",
    "start": "752880",
    "end": "759480"
  },
  {
    "text": "possible to do this calculation but the results are not going to be very accurate and it's going to be a little",
    "start": "759480",
    "end": "764720"
  },
  {
    "text": "bit iiy so they're just okay we'll just do it like this and uh have people uh",
    "start": "764720",
    "end": "771199"
  },
  {
    "text": "use the same dimensionality all right so now um if you if being a and reading the",
    "start": "771199",
    "end": "779800"
  },
  {
    "start": "772000",
    "end": "1052000"
  },
  {
    "text": "term Vector space I was like well I can probably make actually make Vector space how hard can it",
    "start": "779800",
    "end": "784959"
  },
  {
    "text": "be so I grabbed all the vectors in one of my data points or in my in my schemas",
    "start": "784959",
    "end": "791480"
  },
  {
    "text": "and figured I'll make a little space out of it so this is one this planet is one vector uh object in the database right",
    "start": "791480",
    "end": "798959"
  },
  {
    "text": "now uh and if you fly around you'll find you'll see more objects more planets now",
    "start": "798959",
    "end": "804600"
  },
  {
    "text": "I'll be the first person to say that this is not the most userfriendly way of looking at your data",
    "start": "804600",
    "end": "810639"
  },
  {
    "text": "but it's definitely the most fun way to look at your data um but what's really interesting so",
    "start": "810639",
    "end": "818079"
  },
  {
    "text": "these are all the objects uh what's really interesting to see uh and that is",
    "start": "818079",
    "end": "823519"
  },
  {
    "text": "exactly what you're searching for is you see clusters being formed or groupings and that b basically means all these",
    "start": "823519",
    "end": "830079"
  },
  {
    "text": "objects have semantically uh a meaning that is close to each",
    "start": "830079",
    "end": "835160"
  },
  {
    "text": "other uh so for example this is uh a compound uh bow a little bit spoiler for",
    "start": "835160",
    "end": "841199"
  },
  {
    "text": "what is to come I guess and this is a crossbow so the a compound bow and a crossbow came pretty close to each other",
    "start": "841199",
    "end": "847800"
  },
  {
    "text": "in the database so semantically they have a similar meaning and that is exactly what Vector databases do very",
    "start": "847800",
    "end": "853639"
  },
  {
    "text": "well um they ensure that things uh that semantically are pretty close to each",
    "start": "853639",
    "end": "859680"
  },
  {
    "text": "other end up pretty close to each other in the vector space so when you search for bow it will come somewhere in",
    "start": "859680",
    "end": "866519"
  },
  {
    "text": "between and will return one of the objects um",
    "start": "866519",
    "end": "871040"
  },
  {
    "text": "okay so the vector datab base landscape is pretty Dynamic right now so there is",
    "start": "872000",
    "end": "877079"
  },
  {
    "text": "a gold rush of well startups trying to create Vector databases uh I think these are the by",
    "start": "877079",
    "end": "884920"
  },
  {
    "text": "now the ones that have really cemented them themselves as the most used or the biggest",
    "start": "884920",
    "end": "890279"
  },
  {
    "text": "ones um uh and by now of course all the big database vendors also have a vector",
    "start": "890279",
    "end": "896800"
  },
  {
    "text": "store uh solution so Azure has its own Vector store AWS has its own Vector",
    "start": "896800",
    "end": "902320"
  },
  {
    "text": "store Neo j a graph database also has a vector store for their notes which is",
    "start": "902320",
    "end": "908560"
  },
  {
    "text": "interesting um what's really interesting for you guys I think is that uh",
    "start": "908560",
    "end": "913839"
  },
  {
    "text": "everything on your right side right side is open source and on your left side is",
    "start": "913839",
    "end": "919480"
  },
  {
    "text": "closed Source um elastic search was always a little bit interesting because",
    "start": "919480",
    "end": "924839"
  },
  {
    "text": "they are like we are open but not really psych um but yeah they are close Source",
    "start": "924839",
    "end": "930319"
  },
  {
    "text": "you'll you can look at the source code for the vector store the same with redish it's part of the reddish stack so",
    "start": "930319",
    "end": "935519"
  },
  {
    "text": "you cannot look at the source code uh for post SQL you can download PG Vector",
    "start": "935519",
    "end": "941160"
  },
  {
    "text": "uh it's an extension uh plugin uh and then you can store your vectors in it um what's really cool is some of",
    "start": "941160",
    "end": "949199"
  },
  {
    "text": "these databases offer so-called built-in embeddings that means they often spin up a a Docker image next to the database if",
    "start": "949199",
    "end": "955880"
  },
  {
    "text": "you run it and then if you do uh insertions uh to the database it will uh",
    "start": "955880",
    "end": "961519"
  },
  {
    "text": "the database will automatically uh embed your data and put it in the database for you so you don't have to do calls to",
    "start": "961519",
    "end": "967880"
  },
  {
    "text": "open AI or hugging phas to get your vector embeddings you can just grab your",
    "start": "967880",
    "end": "973360"
  },
  {
    "text": "uh string data your textual data or image data just throw it to the database and they will take care of everything so",
    "start": "973360",
    "end": "979720"
  },
  {
    "text": "that's pretty cool um of course uh uh they all want to earn money somehow uh so a lot of them",
    "start": "979720",
    "end": "986480"
  },
  {
    "text": "offer managed Services you can use super base for for example for PG Vector managed service um I was looking around",
    "start": "986480",
    "end": "994440"
  },
  {
    "text": "and it's still a little bit expensive because it's pretty high on the hype cycle right now so uh it's not uh it",
    "start": "994440",
    "end": "1001480"
  },
  {
    "text": "will cost you a little bit uh especially the pay you go um plans um but uh yeah",
    "start": "1001480",
    "end": "1008959"
  },
  {
    "text": "it's pretty nice to have uh I would say uh and of course you want to know how you can query all these databases well",
    "start": "1008959",
    "end": "1016600"
  },
  {
    "text": "of course uh python is King AI land right so all of them have a python",
    "start": "1016600",
    "end": "1022360"
  },
  {
    "text": "client uh some of them have a rest API that you can call to query some of them have a JavaScript client uh or a",
    "start": "1022360",
    "end": "1029918"
  },
  {
    "text": "CLI uh some of them you can do through SQL like PG Vector for example and besta",
    "start": "1029919",
    "end": "1035319"
  },
  {
    "text": "you can qu through yql does anybody know yql I think it stands for Yahoo quering",
    "start": "1035319",
    "end": "1042079"
  },
  {
    "text": "language and it's the first time I ever heard of it and it was very interesting to see that somebody chose for this as",
    "start": "1042079",
    "end": "1047760"
  },
  {
    "text": "their qu language all right so that is a little bit how the landscape is so let's just",
    "start": "1047760",
    "end": "1054360"
  },
  {
    "start": "1052000",
    "end": "1274000"
  },
  {
    "text": "get onto you know uh implementing our own search um so for our stack I'll be",
    "start": "1054360",
    "end": "1059799"
  },
  {
    "text": "using uh vv8 for persistence I have a uh spring boot cotlin back end uh cotlin",
    "start": "1059799",
    "end": "1068400"
  },
  {
    "text": "because it's by far the super the most Superior language of the gvm change change my mind and then on the front end",
    "start": "1068400",
    "end": "1075480"
  },
  {
    "text": "I have uh Unity uh 3D does anybody know Unity 3D okay so for the ones that don't know",
    "start": "1075480",
    "end": "1082720"
  },
  {
    "text": "uh it's a game engine so uh you you saw a little sneak peek of it just now so that's what we're",
    "start": "1082720",
    "end": "1089559"
  },
  {
    "text": "going to be using as a front end it's a little bit of a um let's say a bad boy in game engine land nowadays they try to",
    "start": "1089559",
    "end": "1096320"
  },
  {
    "text": "entify their product uh so to say uh but I'm pretty pretty uh proficient with it",
    "start": "1096320",
    "end": "1102960"
  },
  {
    "text": "so I stuck with it and uh I still don't pay money so I'll never and I will never do damn it okay uh so uh y",
    "start": "1102960",
    "end": "1111480"
  },
  {
    "text": "vb8 um it's completely open source it was really nice for me I just could go",
    "start": "1111480",
    "end": "1116880"
  },
  {
    "text": "into the code and just read what was happening um it's model so it's uh when",
    "start": "1116880",
    "end": "1122840"
  },
  {
    "text": "you say hey I want an embedding model next to uh next to the database you can just",
    "start": "1122840",
    "end": "1128559"
  },
  {
    "text": "change the docker image and it will pull that model and then you can just query and you can see how different models",
    "start": "1128559",
    "end": "1134720"
  },
  {
    "text": "interact with your code uh and their documentation in Java client is actually pretty decent um the amount of water Fox",
    "start": "1134720",
    "end": "1142200"
  },
  {
    "text": "per minute was pretty low so that was pretty nice uh and what's what's really",
    "start": "1142200",
    "end": "1147559"
  },
  {
    "text": "interesting for me it's I could just run the whole stack offline and if you're supposed to give a presentation like",
    "start": "1147559",
    "end": "1153240"
  },
  {
    "text": "this then it's really nice if you who don't have a internet dependency all right so the architecture",
    "start": "1153240",
    "end": "1160039"
  },
  {
    "text": "is uh of the demos is actually pretty simple so un is going to be calling through rest H uh rest apis my uh spring",
    "start": "1160039",
    "end": "1169200"
  },
  {
    "text": "boot back end and to the vv8 client Library it's going to be calling uh the docker images where vv8 is any",
    "start": "1169200",
    "end": "1175320"
  },
  {
    "text": "Architects sitting here do you like my",
    "start": "1175320",
    "end": "1181200"
  },
  {
    "text": "architecture so I've had the I've had the comment like why don't you just go through through the front end directly",
    "start": "1181280",
    "end": "1187679"
  },
  {
    "text": "to the docker containers right because it's rest HTTP anyway so you could do that well to that I say I'm a backend",
    "start": "1187679",
    "end": "1194799"
  },
  {
    "text": "developer and adding abstraction layers is literally what I do for a living so that is what I did here as",
    "start": "1194799",
    "end": "1201600"
  },
  {
    "text": "well all right so for today I'm going to be using coin distance for our uh",
    "start": "1201600",
    "end": "1206840"
  },
  {
    "text": "distance metric and hle navigable small worlds for indexing uh and some B bird",
    "start": "1206840",
    "end": "1212200"
  },
  {
    "text": "resent 50 and clip models uh to vectorize all the data but how that looks uh like we'll see in a little bit",
    "start": "1212200",
    "end": "1219240"
  },
  {
    "text": "uh the coin distance um uh notation looks like this which is one minus the",
    "start": "1219240",
    "end": "1225600"
  },
  {
    "text": "co similarity makes sense and the co similarity is this pretty much but I think what's really interesting for you",
    "start": "1225600",
    "end": "1232280"
  },
  {
    "text": "people is that uh if it comes back 0.0 that means that two vectors are identical and if come back comes back",
    "start": "1232280",
    "end": "1239559"
  },
  {
    "text": "2.0 that means that two vectors are opposite to each other um so let's say we have a Java class and a C class and",
    "start": "1239559",
    "end": "1247039"
  },
  {
    "text": "you vectorize both then it's going to be zero because c s everything from Java",
    "start": "1247039",
    "end": "1254760"
  },
  {
    "text": "or so they say and then if it's uh let's say say if we have a Javascript file or script and",
    "start": "1254760",
    "end": "1261200"
  },
  {
    "text": "a Java class and vectorize those two it zero that you're doing some really funky",
    "start": "1261200",
    "end": "1267039"
  },
  {
    "text": "things with uh with Java but uh hopefully closer to two um yeah uh hierarchical Naval small",
    "start": "1267039",
    "end": "1275799"
  },
  {
    "start": "1274000",
    "end": "1464000"
  },
  {
    "text": "worlds are a little bit trickier to explain so I tried doing it like this so",
    "start": "1275799",
    "end": "1281840"
  },
  {
    "text": "let's say these are all the data that we want to be putting in our Vector database uh so what happens is every",
    "start": "1281840",
    "end": "1288840"
  },
  {
    "text": "single time that you uh insert something in the database it's going to do a so-called proximity scan so with a",
    "start": "1288840",
    "end": "1295640"
  },
  {
    "text": "within a certain range it's going to look around it uh and it's going to connect itself in our case you can",
    "start": "1295640",
    "end": "1301039"
  },
  {
    "text": "change this number of course it's going to connect to itself to the it's three closest neighbors so like this you get",
    "start": "1301039",
    "end": "1308520"
  },
  {
    "text": "an adjacency graph neighbor graph friendship graph it has like 10 different names because we're really",
    "start": "1308520",
    "end": "1313600"
  },
  {
    "text": "good at naming things here on industry um but yeah so you're basically building a",
    "start": "1313600",
    "end": "1319080"
  },
  {
    "text": "a graph of the three closest objects to uh well whatever is entering entered",
    "start": "1319080",
    "end": "1326159"
  },
  {
    "text": "last uh then there's a random chance I think in our case it's roughly 60% that",
    "start": "1326159",
    "end": "1332679"
  },
  {
    "text": "one data point is going to be uh duplicated in a higher layer and that second layer uh exactly the same will",
    "start": "1332679",
    "end": "1340080"
  },
  {
    "text": "happen so if it's duplicated in a higher layer again it's going to do a proximity scan and we build another uh adjacency",
    "start": "1340080",
    "end": "1347159"
  },
  {
    "text": "graph on top of our base graph and then there's an even lower chance that it's",
    "start": "1347159",
    "end": "1352960"
  },
  {
    "text": "going to be duplicated in a third layer and in our case we are have we use three layers but you can go all the way to 100",
    "start": "1352960",
    "end": "1359120"
  },
  {
    "text": "if you want uh and then we have um uh an even less dense graph on the top so as",
    "start": "1359120",
    "end": "1366120"
  },
  {
    "text": "you can see we have a multi- graph uh structure uh where the topmost layer",
    "start": "1366120",
    "end": "1373640"
  },
  {
    "text": "is less dense than the bottom uh layer right so let's say we do a search and this is where our search Vector enters",
    "start": "1373640",
    "end": "1380720"
  },
  {
    "text": "that means that this is the object that we want to return and then uh from the top uh the same entry point all the time",
    "start": "1380720",
    "end": "1388200"
  },
  {
    "text": "we're going to uh go navigate to the closest Noe in that layer to our",
    "start": "1388200",
    "end": "1393640"
  },
  {
    "text": "destination and then use that node as entry point in the more dense layer and",
    "start": "1393640",
    "end": "1399000"
  },
  {
    "text": "then again go to the closest node and then use that as an entry point and then go all the way to eventually in the",
    "start": "1399000",
    "end": "1405039"
  },
  {
    "text": "bottom layer and find the vector that we're searching for as you can see like this we skip a lot of steps and we skip",
    "start": "1405039",
    "end": "1412400"
  },
  {
    "text": "a lot of jumps uh so you are sacrificing a little bit of data duplication for",
    "start": "1412400",
    "end": "1418640"
  },
  {
    "text": "Speed and uh algorithms like this is what really allows these Vector databases to find uh vectors within",
    "start": "1418640",
    "end": "1427919"
  },
  {
    "text": "milliseconds in uh multi-million uh Vector spaces pretty much so again from",
    "start": "1427919",
    "end": "1435080"
  },
  {
    "text": "all the top uh from the top same entry point all the way to the vector closest",
    "start": "1435080",
    "end": "1441039"
  },
  {
    "text": "to where you want to go you use this at the entry point go in the second layer go closest which is only one jump here",
    "start": "1441039",
    "end": "1447520"
  },
  {
    "text": "in this case and then again go closest and then we actually find what we're searching for so it's pretty",
    "start": "1447520",
    "end": "1453880"
  },
  {
    "text": "cool uh in my opinion very creative way of you know solving this uh issue that we're",
    "start": "1453880",
    "end": "1459559"
  },
  {
    "text": "having uh all right uh who recognizes this and yeah what is it it's the Matrix",
    "start": "1459559",
    "end": "1468200"
  },
  {
    "start": "1464000",
    "end": "1720000"
  },
  {
    "text": "ah that make me so happy when people recognize this yes it's the Matrix uh so",
    "start": "1468200",
    "end": "1474480"
  },
  {
    "text": "from the original anybody has not seen the original Matrix oh good so there is",
    "start": "1474480",
    "end": "1480760"
  },
  {
    "text": "this awesome scene right where Neo is like need guns lots of guns and then uh",
    "start": "1480760",
    "end": "1486559"
  },
  {
    "text": "but there is a plot hole here they G they send him a lot of guns but how is he ever going to find the weapon he's",
    "start": "1486559",
    "end": "1491919"
  },
  {
    "text": "searching for so we're going to help him uh so we have a little CSV uh with uh three properties the name",
    "start": "1491919",
    "end": "1499799"
  },
  {
    "text": "of the weapon the type of the weapon and the range of the weapon so for example name Excalibur type is short and the",
    "start": "1499799",
    "end": "1505360"
  },
  {
    "text": "range is short and when you uh vectorize this basically what happens is it will",
    "start": "1505360",
    "end": "1511279"
  },
  {
    "text": "uh concat everything uh join everything uh lower string and then you will get a string like weapon Excalibur short sword",
    "start": "1511279",
    "end": "1518000"
  },
  {
    "text": "and that is what's going to be vectorized to the database to 384 Dimensions now if you want you can also",
    "start": "1518000",
    "end": "1524960"
  },
  {
    "text": "choose to vectorize for example the property name so in that case you would have weapon uh name Excalibur uh range",
    "start": "1524960",
    "end": "1532399"
  },
  {
    "text": "short type sort uh but in in our case we don't do that we just vectorize the",
    "start": "1532399",
    "end": "1537760"
  },
  {
    "text": "values uh that we have there so this is a very uh",
    "start": "1537760",
    "end": "1543679"
  },
  {
    "text": "simple uh data set uh so if you look at it uh this is like uh 50 entries and",
    "start": "1543679",
    "end": "1551520"
  },
  {
    "text": "that's about it all right so let's see um",
    "start": "1551520",
    "end": "1558799"
  },
  {
    "text": "so I know you might be confused it's like you're watching the movie right",
    "start": "1558799",
    "end": "1564480"
  },
  {
    "text": "now Trinity is like uh no one has ever done this Neo is very confident which",
    "start": "1565480",
    "end": "1571080"
  },
  {
    "text": "made me very happy because the scene after is amazing you know when he goes in the elevator and uh the Techno music",
    "start": "1571080",
    "end": "1577080"
  },
  {
    "text": "starts blasting and then starts doing all kinds of uh spins um so uh maybe a little bit of weird",
    "start": "1577080",
    "end": "1584000"
  },
  {
    "text": "question does somebody have a favorite weapon",
    "start": "1584000",
    "end": "1588520"
  },
  {
    "text": "a Glock sorry there he is a Glock with a",
    "start": "1591000",
    "end": "1596480"
  },
  {
    "text": "missing texture uh but yeah so we're searching for a Glock uh and we found a Glock thankfully",
    "start": "1596480",
    "end": "1603360"
  },
  {
    "text": "had this one in my database and if you look at the distance uh it is here you",
    "start": "1603360",
    "end": "1608960"
  },
  {
    "text": "can see it is 0.29 uh so a Glock with the Glock that I",
    "start": "1608960",
    "end": "1614960"
  },
  {
    "text": "have in the database uh is like 0.2 from each other so relative close and uh I",
    "start": "1614960",
    "end": "1622279"
  },
  {
    "text": "have a cut off of 0.9 so only return return results if they're within a",
    "start": "1622279",
    "end": "1627520"
  },
  {
    "text": "distance of 0.9 from each other um but yeah what's really nice for example you can do um a Japanese",
    "start": "1627520",
    "end": "1636440"
  },
  {
    "text": "weapon and then you get an odachi which is in case actually a Japanese weapon so",
    "start": "1636440",
    "end": "1642360"
  },
  {
    "text": "I nowhere in the data set I say okay nochi is a Japanese weapon etc etc etc",
    "start": "1642360",
    "end": "1647480"
  },
  {
    "text": "the ization model uh the embedding model knew okay on aachi context Japan etc etc",
    "start": "1647480",
    "end": "1653919"
  },
  {
    "text": "and then when I search for Japan they end up close to the database and what's",
    "start": "1653919",
    "end": "1658960"
  },
  {
    "text": "really nice about database uh is that um you never really know uh what you're",
    "start": "1658960",
    "end": "1665679"
  },
  {
    "text": "going to get out of it to me that's beautiful you know a little bit of gambling adct addict otherwise I",
    "start": "1665679",
    "end": "1670720"
  },
  {
    "text": "wouldn't be into Magic the Gathering um but yeah so given the same input you",
    "start": "1670720",
    "end": "1676480"
  },
  {
    "text": "will always get the same output so if I do for uh for example uh uh baz uh",
    "start": "1676480",
    "end": "1681640"
  },
  {
    "text": "something explosive explosive you get an RPG which is indeed",
    "start": "1681640",
    "end": "1688039"
  },
  {
    "text": "very explosive um and every time if I keep quering this you will always get an",
    "start": "1688039",
    "end": "1693760"
  },
  {
    "text": "RPG you so giving the same input you always get the same output but you are never sure what that output going to be",
    "start": "1693760",
    "end": "1699480"
  },
  {
    "text": "so even if had an RPG or something called something explosive in the database you cannot be sure that that is",
    "start": "1699480",
    "end": "1705720"
  },
  {
    "text": "what you're going to match with to me that's beautiful but I can understand that it has uh brings its complications",
    "start": "1705720",
    "end": "1711279"
  },
  {
    "text": "with it all right but yeah this is of course a very",
    "start": "1711279",
    "end": "1716600"
  },
  {
    "text": "simple data set very small so we can go a little bit uh bigger um anybody here",
    "start": "1716600",
    "end": "1721720"
  },
  {
    "start": "1720000",
    "end": "2032000"
  },
  {
    "text": "that plays Dungeons and Dragons a couple people okay nice uh if you do not res resonate with Dungeons",
    "start": "1721720",
    "end": "1728399"
  },
  {
    "text": "and Dragons just every time I say wizard just think Harry Potter a little bit the same okay so we",
    "start": "1728399",
    "end": "1735880"
  },
  {
    "text": "have a wizard or Dumbledore in this case uh he's a little bit forgetful he's",
    "start": "1735880",
    "end": "1741159"
  },
  {
    "text": "strolling in the woods uh and at some point he's being he's going to be attacked by a thug and uh we need to",
    "start": "1741159",
    "end": "1747760"
  },
  {
    "text": "help him memorize spells uh to defeat this Thug uh so what I did is I uh",
    "start": "1747760",
    "end": "1754360"
  },
  {
    "text": "grabbed a data set of all the dungeon dragon spells from the player's handbook um and put in in the",
    "start": "1754360",
    "end": "1760799"
  },
  {
    "text": "database uh and then through a bird model hopefully we can find something uh that we're searching for uh so if you",
    "start": "1760799",
    "end": "1767720"
  },
  {
    "text": "look at this data set as you can see it's a little bit more extensive than what we were just using so a lot of text",
    "start": "1767720",
    "end": "1773080"
  },
  {
    "text": "a lot of spells um uh and basically we're putting it",
    "start": "1773080",
    "end": "1780640"
  },
  {
    "text": "mostly as this in the database so uh because it's a CSV file and CSV files",
    "start": "1780640",
    "end": "1786720"
  },
  {
    "text": "are really kind of meant to be um uh uh read by comp understood by",
    "start": "1786720",
    "end": "1792519"
  },
  {
    "text": "computers right not necessarily humans we made a description that is very semantic so uh this spell can be casted",
    "start": "1792519",
    "end": "1798840"
  },
  {
    "text": "by these classes this is the level of the spell um this is the Magic School Etc ET the material cost is this and",
    "start": "1798840",
    "end": "1805799"
  },
  {
    "text": "this so it's a very semantic piece of text uh describing all the properties uh of the spell so and then we put that in",
    "start": "1805799",
    "end": "1812559"
  },
  {
    "text": "the database and hopefully make it easier to match and then we're telling",
    "start": "1812559",
    "end": "1817960"
  },
  {
    "text": "uh vv8 uh and basically all the database vendors can do something similar you say",
    "start": "1817960",
    "end": "1823679"
  },
  {
    "text": "okay all these uh properties I don't want you to vectorize them I only want you to vectorize the name and the",
    "start": "1823679",
    "end": "1829440"
  },
  {
    "text": "description of the of this spell uh but do save this properties so when you get",
    "start": "1829440",
    "end": "1835679"
  },
  {
    "text": "out uh if you find the object you can you still have the properties and you can still use them for whatever you want",
    "start": "1835679",
    "end": "1840880"
  },
  {
    "text": "to do all right uh has anybody played balers Gate",
    "start": "1840880",
    "end": "1847840"
  },
  {
    "text": "3 very good game very good game right it's basically the same",
    "start": "1847840",
    "end": "1854000"
  },
  {
    "text": "right okay so this is our our Wizard and uh is Ambush by Thug uh so the dungeon",
    "start": "1854000",
    "end": "1860880"
  },
  {
    "text": "dragon players do you have a favorite spell Fireball Fireball the",
    "start": "1860880",
    "end": "1866519"
  },
  {
    "text": "classic F fire and indeed you you get a fireable",
    "start": "1866519",
    "end": "1873519"
  },
  {
    "text": "uh right or Firebolt or biot techniques all three have to do something with fire of course then you can cast cast it and",
    "start": "1873519",
    "end": "1882480"
  },
  {
    "text": "death and then we can bring him back to keep doing this endlessly so internal torment so that's pretty fun uh so",
    "start": "1882480",
    "end": "1890399"
  },
  {
    "text": "anything else that somebody might want to",
    "start": "1890399",
    "end": "1895760"
  },
  {
    "text": "sorry I hori will think I I I I I can't",
    "start": "1895760",
    "end": "1901559"
  },
  {
    "text": "hear you very well so I just wrote something but that is this is the Bea",
    "start": "1901559",
    "end": "1908919"
  },
  {
    "text": "the beauty of uh Vector databases you can always send something and you'll get",
    "start": "1908919",
    "end": "1913960"
  },
  {
    "text": "something what you going to get I don't know",
    "start": "1913960",
    "end": "1918960"
  },
  {
    "text": "um uh apparently something with demons and then again well the same particle",
    "start": "1919200",
    "end": "1924440"
  },
  {
    "text": "effect and etc etc uh but you can do something uh explosive and I know I made",
    "start": "1924440",
    "end": "1930080"
  },
  {
    "text": "a lot of typos doesn't matter uh Vector databases don't care again you can make",
    "start": "1930080",
    "end": "1935440"
  },
  {
    "text": "tyos whatever uh you do not necessarily get EXA exactly what you're searching for but uh uh you're always sure to get",
    "start": "1935440",
    "end": "1945720"
  },
  {
    "text": "something um but yeah so the big issue here is why results are you know a bit",
    "start": "1945720",
    "end": "1951799"
  },
  {
    "text": "varying is that I just grabb this big chunk of text and just put it in the",
    "start": "1951799",
    "end": "1957720"
  },
  {
    "text": "database so to increase results you can think about okay uh text splitting so you split your text in smaller segments",
    "start": "1957720",
    "end": "1964279"
  },
  {
    "text": "and but you still reference the same object in the background and things like that so then it makes it a little bit",
    "start": "1964279",
    "end": "1969919"
  },
  {
    "text": "easier to match because if you have huge chunk of text and you put it in database like that the more words uh a user is is",
    "start": "1969919",
    "end": "1977919"
  },
  {
    "text": "going to type and typically these embedding models are pretty smart so they filter out words like uh the and",
    "start": "1977919",
    "end": "1983519"
  },
  {
    "text": "things like that but the more things so I want to cast something",
    "start": "1983519",
    "end": "1990600"
  },
  {
    "text": "super uh super cool and awesome you know",
    "start": "1990600",
    "end": "1995760"
  },
  {
    "text": "stuff like that um it's a lot of words added context to the search that really",
    "start": "1995760",
    "end": "2001120"
  },
  {
    "text": "can diminish the amount the results you get back so uh what I'm trying to say is",
    "start": "2001120",
    "end": "2008960"
  },
  {
    "text": "here um don't expect to just be able to grab your tabular data export it to CSV",
    "start": "2008960",
    "end": "2015000"
  },
  {
    "text": "and put it in the in the vector database you probably need to do some uh create some data ingestion pipeline that where",
    "start": "2015000",
    "end": "2020840"
  },
  {
    "text": "you you know split your data or the text in your data or you format it reformat",
    "start": "2020840",
    "end": "2026159"
  },
  {
    "text": "it create a semantic meaning things like that all right so uh that's text and all",
    "start": "2026159",
    "end": "2032799"
  },
  {
    "start": "2032000",
    "end": "2331000"
  },
  {
    "text": "so that's pretty nice uh but how about images anybody that has played this",
    "start": "2032799",
    "end": "2039399"
  },
  {
    "text": "uh on the Nintendo on the Nintendo 64 this game is so weird to me you you",
    "start": "2039399",
    "end": "2045880"
  },
  {
    "text": "are on rail so you're basically sitting on a train and you're going around an island and all you do is take pictures",
    "start": "2045880",
    "end": "2051919"
  },
  {
    "text": "of Pokemon and throw apples at them it is so but it was hugely popular",
    "start": "2051919",
    "end": "2058320"
  },
  {
    "text": "and still is the switch port or the switch re-release was also a huge very popular so obviously we're going to make",
    "start": "2058320",
    "end": "2065240"
  },
  {
    "text": "it ourselves how hard can it be so we have have as cetch him uh that whenever he sees a Pokemon flips his hat and then",
    "start": "2065240",
    "end": "2072440"
  },
  {
    "text": "we're going to take a picture uh of the of a Pokemon that we see and through a resent 50 model uh ho hopefully uh match",
    "start": "2072440",
    "end": "2081839"
  },
  {
    "text": "the Pokemon that we're looking for oh uh spoiler spoiler spoiler",
    "start": "2081839",
    "end": "2088118"
  },
  {
    "text": "okay so um yeah so this is Ash just like in",
    "start": "2089599",
    "end": "2095960"
  },
  {
    "text": "the anime uh we're walking around walking",
    "start": "2095960",
    "end": "2101119"
  },
  {
    "text": "around uh who knows which Pokemon this is you're not very enthusiastic yes it's",
    "start": "2101119",
    "end": "2109359"
  },
  {
    "text": "Pikachu no Pokemon Masters sitting here uh anybody Pikachu right will it show",
    "start": "2109359",
    "end": "2116359"
  },
  {
    "text": "Pikachu yes it is Pikachu yeah um how about this",
    "start": "2116359",
    "end": "2124000"
  },
  {
    "text": "one I hear P it let's see if the database agrees no I'm sorry it's galad",
    "start": "2124000",
    "end": "2131280"
  },
  {
    "text": "galade galad or uh if I look from here still",
    "start": "2131280",
    "end": "2137960"
  },
  {
    "text": "galad and how about uh from here uh now it's scaron or scarm",
    "start": "2137960",
    "end": "2145599"
  },
  {
    "text": "Mori uh so you can see that was probably not entirely right and some of you might",
    "start": "2145599",
    "end": "2151720"
  },
  {
    "text": "think what what what your demo is broken man what the hell um so which one is this",
    "start": "2151720",
    "end": "2159800"
  },
  {
    "text": "yeah uh no it's aren",
    "start": "2159800",
    "end": "2165960"
  },
  {
    "text": "h so uh if we take a look at the data set",
    "start": "2165960",
    "end": "2171119"
  },
  {
    "text": "so I have a CSV file with uh a certain amount of Pokemon 721 it's more than 160",
    "start": "2171119",
    "end": "2177920"
  },
  {
    "text": "I know uh and then I have a set of icons Uh Oh wrong",
    "start": "2177920",
    "end": "2185520"
  },
  {
    "text": "icon uh so this uh and this is for example Bulbasaur and",
    "start": "2185520",
    "end": "2191359"
  },
  {
    "text": "all the icons look exactly like this so it's a white background with a very like",
    "start": "2191359",
    "end": "2196560"
  },
  {
    "text": "a flat 2D cartoon uh image of the Pokemon and they're all 300 by",
    "start": "2196560",
    "end": "2202040"
  },
  {
    "text": "300 um so that they you might now you might be thinking okay but how come that",
    "start": "2202040",
    "end": "2208119"
  },
  {
    "text": "you found Pikachu and then you have trouble finding the rest uh this is what the camera sees uh you can see it on the",
    "start": "2208119",
    "end": "2214760"
  },
  {
    "text": "bottom right um and there is a certain type of yellow that the camera sees uh",
    "start": "2214760",
    "end": "2220480"
  },
  {
    "text": "any guesses what kind of yellow this is It's Pikachu yellow because when uh",
    "start": "2220480",
    "end": "2226400"
  },
  {
    "text": "when a model doesn't really understand the context of an image it will default",
    "start": "2226400",
    "end": "2231800"
  },
  {
    "text": "to shapes and colors so and the model I use doesn't understand Pokemon and I",
    "start": "2231800",
    "end": "2237680"
  },
  {
    "text": "couldn't find a model that understood really understood Pokemon I guess everybody's afraid of Nintendo suing",
    "start": "2237680",
    "end": "2244000"
  },
  {
    "text": "them um but so uh uh I created a camera that does see the Pokemon as is but with",
    "start": "2244000",
    "end": "2250960"
  },
  {
    "text": "a yellow background so that it matches and you might have realized that other Pokemon still matched a little bit of",
    "start": "2250960",
    "end": "2257480"
  },
  {
    "text": "the yellow like Aran uh of the yellow um",
    "start": "2257480",
    "end": "2262520"
  },
  {
    "text": "tinted Pokemon uh so that is a little bit of a hack to get it somewhat working if I really want to get completely",
    "start": "2262520",
    "end": "2268920"
  },
  {
    "text": "working I could for example train my own model to understand Pokémon uh which",
    "start": "2268920",
    "end": "2274079"
  },
  {
    "text": "typically cost quite a lot of money for the gpus so uh as Roy far said previous session I'm",
    "start": "2274079",
    "end": "2280880"
  },
  {
    "text": "also Dutch so I don't like spending money but what you could Al what I could",
    "start": "2280880",
    "end": "2287480"
  },
  {
    "text": "also do for example is use more reference pictures so take uh pictures",
    "start": "2287480",
    "end": "2292800"
  },
  {
    "text": "uh of the 3D models I have in my world from different angles put them put that in the",
    "start": "2292800",
    "end": "2298680"
  },
  {
    "text": "database um and use that to cross reference with a Pokemon I'm searching for so those are different ways to you",
    "start": "2298680",
    "end": "2306119"
  },
  {
    "text": "know make sure you can still find the data you're searching for but again do not don't think you can just put in all",
    "start": "2306119",
    "end": "2312560"
  },
  {
    "text": "the images you have in the database and it's going to be fine especially if you have Imaging that is uh a little bit",
    "start": "2312560",
    "end": "2319240"
  },
  {
    "text": "abstract or context that is not necessarily cookie cutter so more than just cats or dogs uh then it can be a",
    "start": "2319240",
    "end": "2327480"
  },
  {
    "text": "bit tricky to find what you're searching for all right um so our wizard is very",
    "start": "2327480",
    "end": "2335160"
  },
  {
    "start": "2331000",
    "end": "2604000"
  },
  {
    "text": "forgetful so he's ambushed again uh walked a circle and came back we're",
    "start": "2335160",
    "end": "2340880"
  },
  {
    "text": "going to try to make things a little bit more gamey this uh this time so we're going to do the same searches uh grab",
    "start": "2340880",
    "end": "2347319"
  },
  {
    "text": "the name of a spell but this time we're going to try and find Icons uh that match uh the name of the spell and we",
    "start": "2347319",
    "end": "2354400"
  },
  {
    "text": "can do that through the use of a clip model or so-called multimodel uh model",
    "start": "2354400",
    "end": "2360839"
  },
  {
    "text": "multimodel model she said that 10 times um so what those can multimodal models",
    "start": "2360839",
    "end": "2367000"
  },
  {
    "text": "can do is they can grab uh images and text and vectorize them in the same Vector space and that means you can",
    "start": "2367000",
    "end": "2372800"
  },
  {
    "text": "cross reference each other so you can cross reference uh for text using an image or for image using text or uh uh",
    "start": "2372800",
    "end": "2380280"
  },
  {
    "text": "and combinations between the two um so if you look we use the same",
    "start": "2380280",
    "end": "2386720"
  },
  {
    "text": "dungeon dragons data set uh let me close this and if you look at the icons uh",
    "start": "2386720",
    "end": "2391920"
  },
  {
    "text": "basically this is all the icons I just put as is in the database they're pretty good quality 256x",
    "start": "2391920",
    "end": "2399319"
  },
  {
    "text": "256 uh you know game uh RPG esque icons uh very angry man uh I bought this",
    "start": "2399319",
    "end": "2407400"
  },
  {
    "text": "like 12 years ago of a Humble Bundle where you can buy game assets for pretty cheap uh back then my mother looked at",
    "start": "2407400",
    "end": "2414079"
  },
  {
    "text": "me and like you're wasting your money uh who is wasting their money",
    "start": "2414079",
    "end": "2419960"
  },
  {
    "text": "now so at least I I can say that I finally after 10 years I got to use those icons",
    "start": "2422040",
    "end": "2428440"
  },
  {
    "text": "okay so uh well a fireball is a very uh uh standard one and so we do a search",
    "start": "2428440",
    "end": "2436960"
  },
  {
    "text": "and we go search for Fireball we match with a fireball we grab the name of the spell Fireball match it again in the",
    "start": "2436960",
    "end": "2443800"
  },
  {
    "text": "icon uh Vector space and well I mean you could argue that this is indeed an icon",
    "start": "2443800",
    "end": "2448839"
  },
  {
    "text": "of a fireball right and then uh of course uh this time if we cast it we can",
    "start": "2448839",
    "end": "2454640"
  },
  {
    "text": "actually see there we go and uh I I always try to",
    "start": "2454640",
    "end": "2462480"
  },
  {
    "text": "show an explosion when I give a session so this is my explosion codea reached anything that somebody else",
    "start": "2462480",
    "end": "2469240"
  },
  {
    "text": "wants to try you can try to break my demo",
    "start": "2469240",
    "end": "2473240"
  },
  {
    "text": "even a word",
    "start": "2474359",
    "end": "2478960"
  },
  {
    "text": "Gill I mean not how the spell works but still",
    "start": "2479680",
    "end": "2485440"
  },
  {
    "text": "efficient so uh yeah so let's see if uh what",
    "start": "2485440",
    "end": "2490920"
  },
  {
    "text": "happens with it and now you see fireworks so it's a different particle effect and if you do",
    "start": "2490920",
    "end": "2497240"
  },
  {
    "text": "a a poison for example you get protection for poison and then we can",
    "start": "2497240",
    "end": "2503359"
  },
  {
    "text": "kill them by protecting them and then it's poison",
    "start": "2503359",
    "end": "2510520"
  },
  {
    "text": "Splash so what's really nice for me and um I I I didn't do any labeling with the",
    "start": "2510520",
    "end": "2516800"
  },
  {
    "text": "icons didn't do anything like that I just put them in the vector database I send in a a word and I get back an icon",
    "start": "2516800",
    "end": "2524200"
  },
  {
    "text": "and then suddenly especially work well with games or I assume it has other applications as well I can just grab for",
    "start": "2524200",
    "end": "2530640"
  },
  {
    "text": "example the average color in this case of the icon and then use a particle effect that matches that color of that",
    "start": "2530640",
    "end": "2537040"
  },
  {
    "text": "icon so like that you can otherwise I would have to label everything create particle effects that match every color",
    "start": "2537040",
    "end": "2542520"
  },
  {
    "text": "and etc etc I like this very um cool flow and Easy Flow to just create",
    "start": "2542520",
    "end": "2548960"
  },
  {
    "text": "multiple particle effects and stuff like that a favorite of mine is um I want to",
    "start": "2548960",
    "end": "2555559"
  },
  {
    "text": "confuse them with",
    "start": "2555559",
    "end": "2560119"
  },
  {
    "text": "JavaScript and then you get distort [Laughter]",
    "start": "2561240",
    "end": "2567480"
  },
  {
    "text": "value I laughed so hard when this when I saw this I mean ill loser script and identify they match pretty well but",
    "start": "2567480",
    "end": "2573960"
  },
  {
    "text": "distort value that was just spot on uh and of course we can cast this and",
    "start": "2573960",
    "end": "2579359"
  },
  {
    "text": "then uh it is oh again um and then if you just do JavaScript",
    "start": "2579359",
    "end": "2585400"
  },
  {
    "text": "for example uh you get web which is also very",
    "start": "2585400",
    "end": "2591440"
  },
  {
    "text": "funny um oh he whoa he flew up very high all",
    "start": "2591440",
    "end": "2597559"
  },
  {
    "text": "right so that's enough eternal torment uh for the poor",
    "start": "2597559",
    "end": "2602839"
  },
  {
    "text": "fellow um yeah so any metal met heads",
    "start": "2602839",
    "end": "2608040"
  },
  {
    "start": "2604000",
    "end": "2863000"
  },
  {
    "text": "sitting here great me as well do you anybody of the metal heads recognizes",
    "start": "2608040",
    "end": "2614000"
  },
  {
    "text": "this death clock and what's the cartoon called do you know Metalocalypse yeah",
    "start": "2614000",
    "end": "2620079"
  },
  {
    "text": "that's the one anybody that really hates metal music okay so I apologize for the",
    "start": "2620079",
    "end": "2626040"
  },
  {
    "text": "following two to three minutes so yeah this is deathclock uh",
    "start": "2626040",
    "end": "2631119"
  },
  {
    "text": "from the cartoon Metalocalypse uh they have a song it's the Duncan Hills Coffee jingle uh in my",
    "start": "2631119",
    "end": "2637440"
  },
  {
    "text": "opinion it's like the uh the worldwide Anthem international anthem for coffee",
    "start": "2637440",
    "end": "2644079"
  },
  {
    "text": "uh opinions may vary uh so there is a little bit of an",
    "start": "2644079",
    "end": "2649640"
  },
  {
    "text": "issue with metal music right so um they tend to grunt a lot and when they grunt",
    "start": "2649640",
    "end": "2656520"
  },
  {
    "text": "you don't really understand the words you really need to you know be have a trained ear almost to understand what",
    "start": "2656520",
    "end": "2662880"
  },
  {
    "text": "they're saying um so if you want to you know s or so try to find the lyrics or",
    "start": "2662880",
    "end": "2669160"
  },
  {
    "text": "whatever it's a little bit difficult so we're going to try to make the our own Shazam for metal music so what I did is",
    "start": "2669160",
    "end": "2675480"
  },
  {
    "text": "I grabbed open AI whisper which is an transcribing uh model that uh the input",
    "start": "2675480",
    "end": "2681040"
  },
  {
    "text": "is audio and the output are the lyrics arguably so uh and then I put in the",
    "start": "2681040",
    "end": "2687400"
  },
  {
    "text": "database uh I put like uh a couple of hundred",
    "start": "2687400",
    "end": "2692880"
  },
  {
    "text": "songs uh with lyrics so I have for example uh songs by Beyonce uh not very",
    "start": "2692880",
    "end": "2699319"
  },
  {
    "text": "metal arguably uh Billy ish cplay the Lady Gaga also very metal um and I have three",
    "start": "2699319",
    "end": "2707000"
  },
  {
    "text": "metal songs in there I have enter sment by Metallica most of you should at least have heard this one once in your life uh",
    "start": "2707000",
    "end": "2714599"
  },
  {
    "text": "through the fire in the Flames by Dragon Force if you ever played guitar hero you definitely know this song it was the",
    "start": "2714599",
    "end": "2720040"
  },
  {
    "text": "bane of your existence at least it was the bane of my existence with Guitar Hero and the the Duncan Hills Coffee",
    "start": "2720040",
    "end": "2725520"
  },
  {
    "text": "jingle uh with the lyrics and B every half a second we're going to be querying",
    "start": "2725520",
    "end": "2731240"
  },
  {
    "text": "the database using the transcribed lyrics trying to find the song We're searching for so who thinks we're going",
    "start": "2731240",
    "end": "2736920"
  },
  {
    "text": "to find the song that we're searching for oh very pessimistic I learned",
    "start": "2736920",
    "end": "2743200"
  },
  {
    "text": "yesterday that this says something about you uh who thinks no way Jose you won't",
    "start": "2743200",
    "end": "2752359"
  },
  {
    "text": "find it no uh okay who thinks it depends",
    "start": "2752359",
    "end": "2758640"
  },
  {
    "text": "you can't you just can't change a software engineer can you okay so uh I'm",
    "start": "2761119",
    "end": "2766319"
  },
  {
    "text": "going to play the audio now um it's transcribing the song takes a little bit",
    "start": "2766319",
    "end": "2772119"
  },
  {
    "text": "uh on your right side you will see the actual lyrics on the left side uh the transcribed lyrics folks",
    "start": "2772119",
    "end": "2779720"
  },
  {
    "text": "like and on the top you can see what we're matching with so we are matching with Ed here",
    "start": "2779720",
    "end": "2785920"
  },
  {
    "text": "now Taylor's R Lady Gaga Very",
    "start": "2785920",
    "end": "2791558"
  },
  {
    "text": "Metal again [Music]",
    "start": "2791640",
    "end": "2799000"
  },
  {
    "text": "beyon C play I guess they have a guitar so I don't know if G uses a",
    "start": "2799000",
    "end": "2807839"
  },
  {
    "text": "guitar I mean the most speit is very warm so you going to get some",
    "start": "2807839",
    "end": "2815440"
  },
  {
    "text": "now B alone okay",
    "start": "2815440",
    "end": "2820160"
  },
  {
    "text": "okay and what's really funny to me and I don't really know why the guitar solo",
    "start": "2822400",
    "end": "2828119"
  },
  {
    "text": "every time without fail is Ed Sheran and I don't know why I guess has a very highish Voice or",
    "start": "2828119",
    "end": "2834590"
  },
  {
    "text": "[Music] something so yeah uh at",
    "start": "2834590",
    "end": "2839900"
  },
  {
    "text": "[Music] Chiran so yeah as you saw uh",
    "start": "2839900",
    "end": "2847400"
  },
  {
    "text": "we did not find what we were searching for uh so yeah the ones that said no way",
    "start": "2847400",
    "end": "2854079"
  },
  {
    "text": "Jose the three people that took the that try that took the gamble you were correct um and to that I have to say",
    "start": "2854079",
    "end": "2861440"
  },
  {
    "text": "this when Skynet Rises you know when AI you know starts take over and uh uh the",
    "start": "2861440",
    "end": "2866800"
  },
  {
    "start": "2863000",
    "end": "2893000"
  },
  {
    "text": "war breaks out if we just start to grunt to each other they will just have no idea what we're talking",
    "start": "2866800",
    "end": "2873280"
  },
  {
    "text": "about and it easy War to win so yeah thank thank you very much",
    "start": "2873280",
    "end": "2880279"
  }
]