[
  {
    "start": "0",
    "end": "133000"
  },
  {
    "text": "(inspiring jingle music)",
    "start": "658",
    "end": "4074"
  },
  {
    "text": "(scattered applause) - Hello, everyone. Okay, cool, the mic's working.",
    "start": "10331",
    "end": "15388"
  },
  {
    "text": "So, yes, welcome to this talk about efficient Android layouts. If you've never met me before,",
    "start": "15388",
    "end": "20837"
  },
  {
    "text": "I've been doing Android\ndrawup for about seven years, first the Travel App company, the Expedia,",
    "start": "20837",
    "end": "25988"
  },
  {
    "text": "then currently at Trello. As per usual, my thing doesn't work.",
    "start": "25989",
    "end": "31625"
  },
  {
    "text": "All right, I'm gonna give\nmy presentation over here. You know, you can click to\nengage, to rate sessions,",
    "start": "31625",
    "end": "37453"
  },
  {
    "text": "and ask questions, of which\nI will probably then answer the questions at the end if you ask them. Anyways, so this talks about\nefficient Android layouts,",
    "start": "37453",
    "end": "45585"
  },
  {
    "text": "and when I was writing\nit, what I found that I was really interested\nin wasn't so much so the efficiency in terms of performance,",
    "start": "45585",
    "end": "52265"
  },
  {
    "text": "but the efficiency in terms\nof leverage that you have as a developer, and so I\nstarted thinking about it",
    "start": "52265",
    "end": "58488"
  },
  {
    "text": "in the way that Archimedes\nwas referring to, like, how fulcrums work, where,\nlike, if you just give him a proper place to stand,\nhe can move the Earth,",
    "start": "58488",
    "end": "66911"
  },
  {
    "text": "and so that's sort of\nthe focus of this talk, is like, how to get the most leverage as a developer, because\na lot of Android teams are fairly small, and you're\nasked to do a lot of things.",
    "start": "66911",
    "end": "74528"
  },
  {
    "text": "And so in my case, it\nwould be if you give me a a standing desk, I will\nwrite you an Android app, and I hope that you're\nnot expecting me to make",
    "start": "74528",
    "end": "81145"
  },
  {
    "text": "any more terrible jokes this entire time, 'cause it won't happen. So, this is really just kind\nof a mish-mash of things,",
    "start": "81145",
    "end": "88000"
  },
  {
    "text": "there's no narrative, so\nI'm just trying to cover up the fact that I have no transition here. Let's talk about ViewGroups.",
    "start": "88000",
    "end": "93869"
  },
  {
    "text": "In particular, picking ViewGroups, which ViewGroup are you gonna use for any particular layout,\nand I think the main thing",
    "start": "93869",
    "end": "99274"
  },
  {
    "text": "is the simpler the ViewGroup\nyou can get away with, generally, the better,\nbecause the more complex ones",
    "start": "99274",
    "end": "105770"
  },
  {
    "text": "require a lot more\nmaintenance, and you can run into a lot more bugs, and so\non the higher end of things, I'd say probably RelativeLayout's\none of the most complex.",
    "start": "105770",
    "end": "113893"
  },
  {
    "text": "ConstraintLayout is yet to\nbe seen, but it looks like it's probably going to be more complex than RelativeLayout\nwhen it's finally done.",
    "start": "113893",
    "end": "119832"
  },
  {
    "text": "Somewhere in the middle\nof there is LinearLayout, and then down there at\nthe bottom is FrameLayout, which is one my favorites,\nbecause it's so simple.",
    "start": "119832",
    "end": "126768"
  },
  {
    "text": "And there's a lot of\nother views in between, but these are the main building blocks for most applications.",
    "start": "126768",
    "end": "131635"
  },
  {
    "text": "So RelativeLayout and ConstraintLayout, they sort of occupy the same\nspace in Android right now, which is that they position\nviews relative to each other,",
    "start": "132662",
    "end": "140666"
  },
  {
    "start": "133000",
    "end": "181000"
  },
  {
    "text": "and RelativeLayout's sort\nof limited in this regard, but it's what we've had\nsince the beginning,",
    "start": "140666",
    "end": "145920"
  },
  {
    "text": "whereas ConstraintLayout\nis new and can do, like, all these amazing things, but there's some key\nproblems with both of them",
    "start": "145920",
    "end": "151137"
  },
  {
    "text": "besides the fact that\nthey're fairly complex. One of them is that\nRelativeLayout is fairly slow, and then the issue with ConstraintLayout",
    "start": "151137",
    "end": "157422"
  },
  {
    "text": "is that it's fairly\nalpha-ish at the moment. They haven't officially released it yet, So there's alpha out on Maven\ncentral, but a few times",
    "start": "157422",
    "end": "164741"
  },
  {
    "text": "they've completely changed\nthe API around, so it's not necessarily production ready.",
    "start": "164741",
    "end": "169836"
  },
  {
    "text": "I mean, you could play around\nwith it now, and you could use it if you want, but\nyou're gonna end up with some of that cutting-edge\nproblems that you end up when",
    "start": "171054",
    "end": "178194"
  },
  {
    "text": "you're trying to experimental technology. LinearLayout is great,\nstacking views vertically and",
    "start": "178195",
    "end": "183509"
  },
  {
    "start": "181000",
    "end": "338000"
  },
  {
    "text": "horizontally, you can distribute\nthe weight, so this is a simple view, so rows are stacked\nvertically, and then also",
    "start": "183509",
    "end": "189709"
  },
  {
    "text": "I distributed the weight between those two spinners equally. I'm actually fairly okay\nwith nested linear layouts",
    "start": "189709",
    "end": "195661"
  },
  {
    "text": "as an opposition to\nRelativeLayout, and I actually, last time I told someone\nthis, this was like by far",
    "start": "195661",
    "end": "203008"
  },
  {
    "text": "the biggest question that\nI got, is everyone coming to me later saying, \"But\nI love my RelativeLayouts,",
    "start": "203008",
    "end": "208142"
  },
  {
    "text": "that's all I use, I was then that nested\nLinearLayouts are the worst things in existence and\nso I can't believe that",
    "start": "208142",
    "end": "213797"
  },
  {
    "text": "you just said that.\" SO to head off that\nquestion that I was going to be getting on the sessions\nthing, is that LinearLayouts",
    "start": "213798",
    "end": "220179"
  },
  {
    "text": "are sometimes slow. So if you use layout wait,\nand you nest them pretty deep, then they an get\npretty slow, but that's only",
    "start": "220179",
    "end": "225662"
  },
  {
    "text": "a sometimes thing, whereas\nby opposition, RelativeLayout always has to do two\npasses, it's always slow.",
    "start": "225662",
    "end": "232256"
  },
  {
    "text": "So the hope is that\neventually ConstraintLayout will be our savior and\nsave us from the situation",
    "start": "232256",
    "end": "237788"
  },
  {
    "text": "of having to decide\nbetween the two of them. But in the meantime, I\nthink really what's most important is just to focus on profiling.",
    "start": "237788",
    "end": "244312"
  },
  {
    "text": "So whatever layout that you\ndo end up with just turn on profile GPU rendering,\nand see if things are",
    "start": "244312",
    "end": "250580"
  },
  {
    "text": "running fast enough on\nwhatever test device that you're using, hopefully like a really slow one. And if you've never used\nprofile GPU rendering,",
    "start": "250580",
    "end": "257177"
  },
  {
    "text": "I highly recommend Googling\nthat and looking into that, 'cause then you\nget these nice bars that show you whether or not you're hitting",
    "start": "257177",
    "end": "262898"
  },
  {
    "text": "60 frames a second, and\nwhat sort of things you're spending too much time on if you don't. But really I talked about\nall that, so I can talk",
    "start": "262898",
    "end": "269643"
  },
  {
    "text": "about FrameLayout, which\nis my favorite layout in the world, because it's\nso incredibly simple.",
    "start": "269643",
    "end": "274708"
  },
  {
    "text": "All it can do is position things based on the parent bounds. So that is, you can position\nthings inside the center",
    "start": "274708",
    "end": "280968"
  },
  {
    "text": "of the FrameLayout, or you\ncan position things on one of the eight cardinal\ndirections of the FrameLayout.",
    "start": "280968",
    "end": "286648"
  },
  {
    "text": "Wait, am I getting that right? Yeah, eight. So, but there's a lot\nyou can do with this.",
    "start": "286648",
    "end": "292211"
  },
  {
    "text": "It turns out that a lot of\nlayouts, if you just wanna have like say, a simple\nprogress bar in the center of some large screen,\nlike that's a FrameLayout,",
    "start": "292211",
    "end": "298778"
  },
  {
    "text": "you don't have to do\nanything complicated with RelativeLayout or what have you. It's also really great as a\nsimple layout for overlapping",
    "start": "298778",
    "end": "305693"
  },
  {
    "text": "views, so if you need two\nviews to be on top of each other, FrameLayout is a\ngreat container for that.",
    "start": "305693",
    "end": "311495"
  },
  {
    "text": "It's also good for things like\nclickable item backgrounds, so if you have some image that\ntakes up a very small amount",
    "start": "311495",
    "end": "317296"
  },
  {
    "text": "of space, but if you wanna\nhave multiple views that compose a single thing that\nyou click, it's good to have",
    "start": "317296",
    "end": "323614"
  },
  {
    "text": "like a FrameLayout as the\nparent of that, that can actually have the click\ndetection so when you click on it, it actually looks\nlike something is happening.",
    "start": "323614",
    "end": "329917"
  },
  {
    "text": "So a good example of this,\nlike in the Trello application, is the notification bar\nin the upper right corner. So this always present on\nthe screen, it's a single",
    "start": "329917",
    "end": "339069"
  },
  {
    "start": "338000",
    "end": "620000"
  },
  {
    "text": "FrameLayout, and there's\na icon inside of it that, that white icon is always\npresent, and then if you have unread messages, it'll\nput that little red thing",
    "start": "339069",
    "end": "345775"
  },
  {
    "text": "on top of it. And so, the white icon\ncentered and the red icon is actually pegged to the\nupper right corner, but then",
    "start": "345775",
    "end": "353117"
  },
  {
    "text": "you can use the margin or\nto push it in so it doesn't just ram up against the sides.",
    "start": "353118",
    "end": "358465"
  },
  {
    "text": "And on top of all of that,\nI can just have these views be very simply positioned,\nand then pair with clickable",
    "start": "358465",
    "end": "363894"
  },
  {
    "text": "item background behind\nthat, so when you actually click on it something happens. Another thing I really like\nusing FrameLayouts for is",
    "start": "363894",
    "end": "370652"
  },
  {
    "text": "what I'm calling \"toggle\ncontainers\", so if you have two different states that\nyou toggle between, sometimes",
    "start": "370652",
    "end": "375901"
  },
  {
    "text": "you just have a single view\nthat you actually change, sometimes I've found it\nmore handy to have multiple",
    "start": "375901",
    "end": "380965"
  },
  {
    "text": "views that you can switch between. And so a FrameLayout's a good\nway to contain two things in exactly the same spot,\nand then toggle between them.",
    "start": "380965",
    "end": "388320"
  },
  {
    "text": "So a good example of\nthat in the Trello app is the avatar view. So this is whenever you\nrepresent a member of a card",
    "start": "388320",
    "end": "396134"
  },
  {
    "text": "or something like that, if\nthe user has their avatar Seth and we wanna show\nthat, if they've never taken",
    "start": "396134",
    "end": "402127"
  },
  {
    "text": "a picture, then we wanna\nshow their initials. And so it's essentially\nchoosing between an image view or a text view.",
    "start": "402127",
    "end": "408820"
  },
  {
    "text": "Littler fancier versions\nof which that allow you to render a circle, but\nbasically lets you toggle between these two.",
    "start": "408820",
    "end": "414883"
  },
  {
    "text": "So the avatar view brings\nup the next thing I wanna talk about, which is view reuse. We use this avatar view\nall over the application,",
    "start": "416204",
    "end": "423387"
  },
  {
    "text": "so these are just three\nscreens, like the Trello board, a open Trello card,\nsome activity on the side,",
    "start": "423387",
    "end": "428595"
  },
  {
    "text": "and there's actually I\nthink, three or four other locations we use an avatar\nview within the application.",
    "start": "428595",
    "end": "433834"
  },
  {
    "text": "And so the question\nbecomes, how do I reuse this in multiple places\nwithout having to rewrite the code everywhere, 'cause\nthat would be kind of dumb.",
    "start": "433834",
    "end": "440217"
  },
  {
    "text": "So the most obvious way is to use something called an include.",
    "start": "440217",
    "end": "445548"
  },
  {
    "text": "So if you've never seen\nit before, the include tag allows you to point to a\ndirect layout, and then it's",
    "start": "445548",
    "end": "452185"
  },
  {
    "text": "as if that layout was just\ncopy and pasted into the code right there. And you can't modify much\nof what you're including,",
    "start": "452185",
    "end": "458959"
  },
  {
    "text": "but you can modify any of\nthe layout params, that's any of the things that starts\nwith layout_, so that's a nice way to be able to\ninclude something that may",
    "start": "458959",
    "end": "465584"
  },
  {
    "text": "have been may have been\nmatch-paired, but you don't quite want it to be in the end. But the problem here is\nthat okay, you get the XML",
    "start": "465584",
    "end": "472105"
  },
  {
    "text": "in every single location,\nbut you don't get any of the logic. So now I have to come up\nwith some way to then apply",
    "start": "472105",
    "end": "477188"
  },
  {
    "text": "like, find these particular\nviews that were in the include, and then add\nthe logic for actually binding that to the view.",
    "start": "477188",
    "end": "483796"
  },
  {
    "text": "So what I actually prefer these days is using custom view. So with a custom view, I\ncall, instead of include,",
    "start": "483796",
    "end": "491090"
  },
  {
    "text": "I actually just have the\nview in reference directly, and then you need to write\nthe actual custom view",
    "start": "491090",
    "end": "497409"
  },
  {
    "text": "itself, but it's not very\nhard, because this isn't a custom view that's\ndoing custom drawing or anything like that, it's\njust taking the place",
    "start": "497409",
    "end": "503597"
  },
  {
    "text": "of what would have been in that include. And so with this custom\navatar view, I'm extending Framelayout, so I'm saying\nthe topmost is gonna be",
    "start": "503597",
    "end": "510757"
  },
  {
    "text": "a Framelayout, remember\nI'm toggling between the two states. I've got an image view\nand a text view, and then inside of a constructor\nitself, it actually inflates",
    "start": "510757",
    "end": "518060"
  },
  {
    "text": "all the views that are underneath it. So I don't need to, as a\nparent using avatar view, I don't have to worry\nabout what's inside of it.",
    "start": "518061",
    "end": "525024"
  },
  {
    "text": "It's handling all of that for me. And then I can have this\none nice bind method where I take my member object\nand figure out whether I",
    "start": "525024",
    "end": "530906"
  },
  {
    "text": "should be loading an\nicon or loading the text. So this makes my life a lot easier.",
    "start": "530906",
    "end": "536213"
  },
  {
    "text": "One thing worth noting\nthough, if you're using this sort of custom\nview setup, this is like a very hand-wavy version of what would",
    "start": "536213",
    "end": "543834"
  },
  {
    "text": "be the included XML. But if you include the\nXML like this, you end up with a view hierarchy\nthat looks like this.",
    "start": "544746",
    "end": "550603"
  },
  {
    "text": "You wend up with an\navatarview on the top, it's a FrameLayout, and then it inflates\nanother FrameLayout, which",
    "start": "550603",
    "end": "556661"
  },
  {
    "text": "then has the text view and image view. So obviously, this middle\nFrameLayout is pointless,",
    "start": "556661",
    "end": "562048"
  },
  {
    "text": "we don't really need it,\nthe lint check in Android is particularly harsh when\nyou do this, something like",
    "start": "562048",
    "end": "567785"
  },
  {
    "text": "\"has no reason to live\"\nor something like that, \"has no reason to exist\".",
    "start": "567785",
    "end": "573236"
  },
  {
    "text": "So we wanna get rid of\nthat, and the way that we do that is through a layout inflator trick.",
    "start": "573236",
    "end": "578595"
  },
  {
    "text": "Which is normally when\nyou're using layout inflator, everywhere you'll see it,\nthere'll be a third parameter there, and it'll be false.",
    "start": "578595",
    "end": "585032"
  },
  {
    "text": "And that's because most of\nthe time that's what you want. But in this one particular\ncase, you want it to be true, which happens to be the default.",
    "start": "585032",
    "end": "591419"
  },
  {
    "text": "And when it's true, what\nhappens is that the XML that's inflated tries\nto attach itself to the view group that you passed\nin as the second parameter.",
    "start": "591419",
    "end": "599597"
  },
  {
    "text": "In this case, it's this. And then in the XML, if\nyou use something called",
    "start": "599597",
    "end": "604683"
  },
  {
    "text": "the merge tag instead of a\nFrameLayout, what happens is, it tries to then\nmerge these views into the",
    "start": "604683",
    "end": "609988"
  },
  {
    "text": "parent view group without any interstitial frame layout. And then so you end up\nwith the hierarchy that",
    "start": "609988",
    "end": "616146"
  },
  {
    "text": "you actually want no unnecessary\nFrameLayouts involved. A third view-specific piece\nof advice I had to do is",
    "start": "616146",
    "end": "624161"
  },
  {
    "start": "620000",
    "end": "862000"
  },
  {
    "text": "with custom drawing. So this is useful in cases\nof, particularly complex views, you can can save\na lot of time by just",
    "start": "624161",
    "end": "630415"
  },
  {
    "text": "drawing yourself instead\nof trying to figure out how to wedge these\nviews into what you want",
    "start": "630415",
    "end": "635834"
  },
  {
    "text": "it to look like into normal views. So a good example of this\nin the Trello app is the labels, so there's these\ngreen and blue and red",
    "start": "636877",
    "end": "644516"
  },
  {
    "text": "and yellow and purple labels that are on these cards. So when we first had the\nTrello app out, there was like",
    "start": "644516",
    "end": "650396"
  },
  {
    "text": "six colors, and that was\nit, that was the most you could apply to any card. And whoever was working\non it back in the day",
    "start": "650396",
    "end": "656674"
  },
  {
    "text": "did not know about custom\ndrawing, and decided that those would just be six views. So that meant that every\nsingle card potentially",
    "start": "656674",
    "end": "662640"
  },
  {
    "text": "have six views inflated. But then later on, Trello\nchanged this, that it allowed any number of labels to be\ndrawn, so then you could",
    "start": "662640",
    "end": "669591"
  },
  {
    "text": "end up with this nightmare\nscenario, where every single card could have dozens of\nlabels on them if someone's",
    "start": "669591",
    "end": "675611"
  },
  {
    "text": "going really crazy. And then we were talking\nabout recycling those views, it just gets really slow,\nand if you talk about",
    "start": "675611",
    "end": "682278"
  },
  {
    "text": "putting something like this\non a tablet, it gets really, really slow because you\ncan see even more cards, and it's rendering even more views.",
    "start": "682278",
    "end": "688959"
  },
  {
    "text": "So it was much simpler, then\nto just take all of those views that were being\nrendered, and instead, have one",
    "start": "688959",
    "end": "694684"
  },
  {
    "text": "custom view that draws\nreally simple shapes. So there's sort of two steps\nto it, and custom views",
    "start": "694684",
    "end": "702186"
  },
  {
    "text": "used to be very intimidating\nto me, I used to be very scared of custom views,\n'cause I thought they looked really hard, but they really are not.",
    "start": "702186",
    "end": "708720"
  },
  {
    "text": "And the first step is just\ntelling the custom view how big it should be. That is, how much space\ndoes it need to take up?",
    "start": "708720",
    "end": "715673"
  },
  {
    "text": "'Cause I have my label\nview, which is really nice, but no one knows exactly\nhow much space it's going to take up.",
    "start": "715674",
    "end": "721614"
  },
  {
    "text": "So on measure is what you\nuse to tell any parent view group how much space you need. And it turns out, a lot of\nthe times, you can actually",
    "start": "721614",
    "end": "728897"
  },
  {
    "text": "skip this whole step entirely. And the reason I say that\nis because in any view, you can specify, \"I want this\nview to be 48 dp by 48 dp.\"",
    "start": "728897",
    "end": "737293"
  },
  {
    "text": "If it turns out that your\ncustom view is just always going to be the same size,\nlike skip this entirely, just define it in your\nXML, and you don't have to",
    "start": "737293",
    "end": "744271"
  },
  {
    "text": "worry about that. In this particular case\nbecause the size varies based on the number of labels, I\nhad to write my own measure.",
    "start": "744271",
    "end": "751447"
  },
  {
    "text": "And so a quick way of going\ngoing through onMeasure, the message signature that\ngets called, you have these",
    "start": "751447",
    "end": "757517"
  },
  {
    "text": "width measureSpec, and\nheight measureSpec, which was sort of confusing to me\nat first, but it turns out that these are just packed integers.",
    "start": "757517",
    "end": "763712"
  },
  {
    "text": "So it's a single integer\nthat, these two parameters basically take the place\nof four parameters,",
    "start": "763712",
    "end": "768894"
  },
  {
    "text": "which is that a width\nmode in size and a height mode in size. So the size is just a dimension\nvalue, the mode though",
    "start": "768894",
    "end": "776388"
  },
  {
    "text": "is telling you how it wants you to handle that particular size that it passed. And there's three different\nMeasureSpecs for the mode.",
    "start": "776388",
    "end": "783783"
  },
  {
    "text": "One is exactly, which\nmeans the parent view group wants you to be this exact size. The other is at_most, so\nit take up as much space",
    "start": "783783",
    "end": "790477"
  },
  {
    "text": "as possible, and undefined\nmeans you get to define whatever ideal width you\nwould like in the situation.",
    "start": "790477",
    "end": "796866"
  },
  {
    "text": "And so your typical onMeasure\nlooks something like this, where you grab,\nand this is just for the",
    "start": "796866",
    "end": "801977"
  },
  {
    "text": "width, and then you\nwould copy the same code for the height. You'd grab the mode and the\nsize, if the measure spec",
    "start": "801977",
    "end": "808567"
  },
  {
    "text": "is exactly, you probably\njust wanna pass back the size that it gave you. You don't wanna screw\nup the parent view group",
    "start": "808567",
    "end": "814785"
  },
  {
    "text": "too much, or else it might get confused. Otherwise, calculate what\nyour desired width is,",
    "start": "814785",
    "end": "820158"
  },
  {
    "text": "and if the width spec\nis at most, then make sure that whatever your\ndesire width is not larger than that size.",
    "start": "820158",
    "end": "826459"
  },
  {
    "text": "Otherwise, if it's undefined, you just get to pick whatever desired width you want.",
    "start": "826459",
    "end": "831604"
  },
  {
    "text": "Then, once you've done\nthis for both the width and the height, you are\nby contract required to call set measure set\ndimension, in order to tell",
    "start": "831604",
    "end": "838959"
  },
  {
    "text": "the view what you decided\nfor the width and height. 'Cause there's no return\nvalue for onMeasure,",
    "start": "838959",
    "end": "844696"
  },
  {
    "text": "you just actually have to\ncall this measure at the end. So that's measuring how big\nthe view is, and the second",
    "start": "844696",
    "end": "849774"
  },
  {
    "text": "is onDraw, and this one\nis pretty simple, it just gives you a canvas, and you draw. And so I'm gonna leave this\nup to you, because what am",
    "start": "849774",
    "end": "855794"
  },
  {
    "text": "I gonna say about canvas? This is not a talk\nabout how to use canvas.",
    "start": "855794",
    "end": "862331"
  },
  {
    "start": "862000",
    "end": "907000"
  },
  {
    "text": "Another thing worth considering,\nis maybe in some cases, you don't actually need a\ncustom view, you could just",
    "start": "862331",
    "end": "867411"
  },
  {
    "text": "write your own custom drawable. And the advantage here\nis there you could take this custom-written code and\napply it to any different view.",
    "start": "867411",
    "end": "874269"
  },
  {
    "text": "So that's good if you\nwant so me special custom background of sorts.",
    "start": "874269",
    "end": "879356"
  },
  {
    "text": "In that case, onmeasure\njust becomes something like get intrinsic height\nand get intrinsic width on a drawable, and then\nondraw becomes draw.",
    "start": "879356",
    "end": "886433"
  },
  {
    "text": "But again, I don't wanna\nspent do much time on this, you can research more about\nit later, I highly recommend",
    "start": "886433",
    "end": "891521"
  },
  {
    "text": "Cyril Motier gave a talk\nabout Android drawables a few years ago, and I highly\nrecommend that talk if",
    "start": "891521",
    "end": "897830"
  },
  {
    "text": "you wanna learn more about that later. And I'll be posting these\nslides too, if you wanna get the links.",
    "start": "897830",
    "end": "902298"
  },
  {
    "text": "Alright, styles, let's\nmove away from views, well, not that far from views. But talk about kind of\nanother layer above views,",
    "start": "903215",
    "end": "909805"
  },
  {
    "start": "907000",
    "end": "987000"
  },
  {
    "text": "which is styles. So if you are applying XML to a view, this view has no style.",
    "start": "909805",
    "end": "916863"
  },
  {
    "text": "Not because it's uncool,\nbut because there is no style tag on it. And then, if you have a\nstyle, all it does is I'm",
    "start": "916863",
    "end": "923516"
  },
  {
    "text": "creating some style\nresources, which has the same attribute inside of it,\nand then the view itself then applies that style on\ntop of whatever, actually,",
    "start": "923516",
    "end": "931131"
  },
  {
    "text": "the style's applied first\nand then whatever attributes are applied on top of it. But essentially then, in\nthe same way that includes",
    "start": "931131",
    "end": "938164"
  },
  {
    "text": "or taking layout XML and\njust stuffing it into a view group, styles\nbasically take a bunch of",
    "start": "938164",
    "end": "944250"
  },
  {
    "text": "attributes and stuff it into a view. And so where is this useful? It's very efficient when\nyou need to style a bunch",
    "start": "944250",
    "end": "950985"
  },
  {
    "text": "of what I call, semantically\nidentical views the same way. And so what I mean by\nsemantically-identically is that each view does exactly the\nsame thing in your hierarchy.",
    "start": "950985",
    "end": "959834"
  },
  {
    "text": "So a good example of this\nis a calculator, because in a calculator you want all\nthese buttons, or at least",
    "start": "959835",
    "end": "965790"
  },
  {
    "text": "the main number ones to look the same. Another way to put it is\nthat all the style views should change at once.",
    "start": "965791",
    "end": "972205"
  },
  {
    "text": "So whenever you wanna change something. So if I wanna change the\ntext size of one of those buttons, my expectation\nis that all of them",
    "start": "972205",
    "end": "978720"
  },
  {
    "text": "change at once. So that saves me a whole bundle of time. I see a lot of people\nthough, myself in the past,",
    "start": "978720",
    "end": "984863"
  },
  {
    "text": "especially, misusing styles\nin very inefficient ways, ways that end up biting\nyou in the long-run.",
    "start": "984863",
    "end": "990789"
  },
  {
    "start": "987000",
    "end": "1097000"
  },
  {
    "text": "And one way is single-use\nstyles, so that is you have a view that's representing\na style, and that style's only used once.",
    "start": "990789",
    "end": "996618"
  },
  {
    "text": "I feel like that's just\nextra work that didn't need to be there. Some people really like\nseparating all this code",
    "start": "996618",
    "end": "1001990"
  },
  {
    "text": "out, but it's so easy to refactor\nlater and create a style. There's even a refactoring\noption in Android Studio",
    "start": "1001990",
    "end": "1007510"
  },
  {
    "text": "that lets you do this. So, not really necessary. But more importantly, is\nwhere you have two views",
    "start": "1007510",
    "end": "1013206"
  },
  {
    "text": "that are coincidentally\nusing the same attributes. So I've got these two text\nviews, and I say, \"Oh look,",
    "start": "1013206",
    "end": "1019230"
  },
  {
    "text": "they're using the same text\ncolor and text color hint, great, I'll use a style here.\" But if you look at the ids,\nyou can tell that these",
    "start": "1019230",
    "end": "1025082"
  },
  {
    "text": "two mean something very\ndifferent from each other, one's supposed to be\ntitle, and one's the body. And so what happens is, suppose later on I",
    "start": "1025082",
    "end": "1032480"
  },
  {
    "text": "decide, \"Oh I want the title to be like a different color.\" Well, if I change the color\nof the title now, that",
    "start": "1032481",
    "end": "1038641"
  },
  {
    "text": "also incidentally changes the body. And so this style which\nwas supposed to be handy",
    "start": "1038641",
    "end": "1044482"
  },
  {
    "text": "is now just a hindrance,\nbecause it's very hard to modify that style without having some unintended consequences later.",
    "start": "1044483",
    "end": "1050914"
  },
  {
    "text": "I liken this to in Java,\nimagine I have two constants, one is like the number\nof columns I'm gonna show",
    "start": "1050914",
    "end": "1056586"
  },
  {
    "text": "in some grid. And the other is the\nnumber of retries I'll do in some http request if it fails.",
    "start": "1056586",
    "end": "1063858"
  },
  {
    "text": "And so I think, \"Aw, these\nare the same value, I'm gonna optimize this and\nhave a single constant.\"",
    "start": "1063858",
    "end": "1069327"
  },
  {
    "text": "And problematic for two\nreasons, one is that three is already a constant,\nbut the other is I've lost",
    "start": "1069327",
    "end": "1074359"
  },
  {
    "text": "all semantic meaning. These meant something\nvery different; if I wanna increase the number of\nretries for http, suddenly now",
    "start": "1074359",
    "end": "1081639"
  },
  {
    "text": "I've changed how my UI\nlooks as well, incidentally. So that's mistakes people\ncan make with styles.",
    "start": "1081639",
    "end": "1087878"
  },
  {
    "text": "So themes are sort of\nlike styles on steroids. Styles you can apply to individual views.",
    "start": "1089277",
    "end": "1094853"
  },
  {
    "text": "Themes are essentially things that you can apply to multiple views at once. And so that can be a\nview group, it can be an",
    "start": "1096014",
    "end": "1104615"
  },
  {
    "start": "1097000",
    "end": "1214000"
  },
  {
    "text": "activity, or it can be\nthe entire application. It allows you to apply\ndefault styles as well,",
    "start": "1104615",
    "end": "1111846"
  },
  {
    "text": "so if I come up with, I\nwant all of my buttons to look slightly different\nacross the app, without themes",
    "start": "1111847",
    "end": "1119147"
  },
  {
    "text": "I would have to go take that\nstyle and actually add it to all of my XML. Whereas with themes I can\nsay, I would just like to",
    "start": "1120879",
    "end": "1127080"
  },
  {
    "text": "have a default style for all\nbuttons, and it automatically gets inflated for everything.",
    "start": "1127081",
    "end": "1132159"
  },
  {
    "text": "And then the last lazy\nthing that it helps you with, at least in the context\nof my talk, it allows you to configure your system-created views.",
    "start": "1132159",
    "end": "1138456"
  },
  {
    "text": "So if you've got popup windows\nor toolbars or something that the system creates,\nand that's one fewer thing",
    "start": "1138456",
    "end": "1143601"
  },
  {
    "text": "you have to create. But before you could theme\non a view level, there was",
    "start": "1143601",
    "end": "1148783"
  },
  {
    "text": "a lot of problems with oh, I\nhave to create some attributes that affect just this one\nweird popup, but then it screws",
    "start": "1148783",
    "end": "1154884"
  },
  {
    "text": "up another part of my app. But it's very useful for\nconfiguring just things that the system will create.",
    "start": "1154885",
    "end": "1162049"
  },
  {
    "text": "So there's three ways to apply\nit, you can apply it like I said to the entire\napplication, you can apply it to individual activity, if you\ndo that, it ends up overriding",
    "start": "1162050",
    "end": "1169464"
  },
  {
    "text": "whatever's in the application. And on top of that, you can\napply to an individual view. And in the view case, it\nends up actually overlaying,",
    "start": "1169464",
    "end": "1176942"
  },
  {
    "text": "so you can just overlay\nlike a few changes to it, an individual views theme.",
    "start": "1176942",
    "end": "1182488"
  },
  {
    "text": "And the view themeing is very, very handy. I don't know if anyone\nhere's worked in the days of Holo probably\nremembers that there was a",
    "start": "1182488",
    "end": "1191045"
  },
  {
    "text": "holo.light.width action\nbar, and that was because there was no way to theme\njust the action bar part",
    "start": "1191046",
    "end": "1196298"
  },
  {
    "text": "of the screen differently. So you have to say in the\ntheme, I want to define most of the screen to be\nlight, but I want this one",
    "start": "1196298",
    "end": "1202352"
  },
  {
    "text": "part of it to be dark. Whereas nowadays, you can\nsay, \"I would like just",
    "start": "1202352",
    "end": "1207449"
  },
  {
    "text": "a light theme,\" and then\nmanually apply a dark theme to the tool bar itself, so it\nmakes things so much easier.",
    "start": "1207449",
    "end": "1215213"
  },
  {
    "start": "1214000",
    "end": "1579000"
  },
  {
    "text": "So in terms of theming, I\nhighly-recommend people look into AppCompat, which is\none of the support libraries that Google puts out.",
    "start": "1215213",
    "end": "1221602"
  },
  {
    "text": "If you're not already using\nit, amongst other things it makes theming a lot easier. For one thing, it gives you\nmaterial on all devices,",
    "start": "1221602",
    "end": "1228512"
  },
  {
    "text": "like that's the latest\ndesign language from Google, and without this, there's\na lot of subtle differences",
    "start": "1228512",
    "end": "1235771"
  },
  {
    "text": "between Holo and Material,\nin terms of spacing, and also in terms of just the visual metaphors",
    "start": "1235771",
    "end": "1241367"
  },
  {
    "text": "that they're using. And so it's so much easier\nto start from one single baseline, and then theme from there.",
    "start": "1241368",
    "end": "1248699"
  },
  {
    "text": "Another thing is, it gives\nyou all these baseline themes and styles. So you might wanna change\nthe default look of all",
    "start": "1248699",
    "end": "1254203"
  },
  {
    "text": "your buttons, but you don't\nwanna have to actually go and define a style,\nwhich defines every single attribute that a button has to have.",
    "start": "1254203",
    "end": "1261354"
  },
  {
    "text": "You just wanna take the main\none and tweak it a little bit, like add a little padding\nto all of your buttons. And so AppCompat makes\nit easy then, to take the",
    "start": "1261354",
    "end": "1268273"
  },
  {
    "text": "AppCompat button style\nand extend from that, and then modify it. Without that, it becomes\nsort of a nightmare,",
    "start": "1268274",
    "end": "1273712"
  },
  {
    "text": "especially between Holo and Material. And the third really\nimportant thing it enables",
    "start": "1273712",
    "end": "1278723"
  },
  {
    "text": "is that it allows you to do\nview theming pre-Lollipop, in XML, and that was one\nof my favorite things, because Lollipop had this\nview theming which seemed",
    "start": "1278723",
    "end": "1286596"
  },
  {
    "text": "really cool, but I was\nlike, \"Oh, but you can't get it backported.\" They actually did manage\nto backport that all",
    "start": "1286596",
    "end": "1292117"
  },
  {
    "text": "the way back to I think,\nsome API that you shouldn't even be using anymore. I think 11.",
    "start": "1292117",
    "end": "1297417"
  },
  {
    "text": "Sorry people who are\nstill having to support apps on 11. So a few examples of things\nyou can do with themes,",
    "start": "1297417",
    "end": "1304014"
  },
  {
    "text": "the one that gets touted\neverywhere is the color theming, so in this case,\ninstead of having to use",
    "start": "1304014",
    "end": "1309938"
  },
  {
    "text": "individual drawables for\neverything, I can just set up colors, and most of the\nthings in Android will just",
    "start": "1309938",
    "end": "1317487"
  },
  {
    "text": "get colored automatically. So bam, it's like a broad\nbrushstroke you can make.",
    "start": "1317488",
    "end": "1324281"
  },
  {
    "text": "These are some examples of\napplying default styles. So, just in case you've\nnever seen this before,",
    "start": "1324281",
    "end": "1330621"
  },
  {
    "text": "so for example the top line,\ndefines the button style for the entire application,\nso that gets applied",
    "start": "1330621",
    "end": "1336060"
  },
  {
    "text": "to every button. The spinner item style is\nhandy because what if I just wanna use the built-in\nspinner item layout",
    "start": "1336061",
    "end": "1342368"
  },
  {
    "text": "row that Android provides,\nbut I still wanna style it a little bit,\nI can use that here. Text appearance is nice\nbecause then the text",
    "start": "1342368",
    "end": "1350029"
  },
  {
    "text": "appearance can apply to\ntext views, and then you can still apply another\nstyle on top of that.",
    "start": "1350030",
    "end": "1357735"
  },
  {
    "text": "Another useful thing you\ncan do with themes is that you can set up\nattributes which are then",
    "start": "1357735",
    "end": "1364230"
  },
  {
    "text": "referenced in your XML. So in these case selectable\nitem background, which is like one of my favorite\nattributes, if you refer to it",
    "start": "1364230",
    "end": "1372677"
  },
  {
    "text": "with that ?attribute/ instead\nof the @drawable that you normally use, then it\nderives that value from the",
    "start": "1372677",
    "end": "1378313"
  },
  {
    "text": "theme instead of going to it directly. So why is this useful,\nif you happen to have an app that supports\nmultiple themes, it makes it",
    "start": "1378313",
    "end": "1384886"
  },
  {
    "text": "very easy then to swap\nbetween those values, but more importantly, your system\nmight have multiple",
    "start": "1384886",
    "end": "1390776"
  },
  {
    "text": "ideas of what a selectable\nitem backgrounds it's, because pre-Lollipop, here\nwasn't any Ripple drawables.",
    "start": "1390776",
    "end": "1397959"
  },
  {
    "text": "It was just usually just\na flat color that you changed to whenever you\nclick on something, whereas post-Lollipop, you wanna\nhave these ripples because",
    "start": "1397959",
    "end": "1404111"
  },
  {
    "text": "it looks really cool. And so if you use a\nselectable item background, then the theme can\nautomatically figure out which one it wants to take.",
    "start": "1404111",
    "end": "1411247"
  },
  {
    "text": "Alright, I'm gonna do a\nquick water break before I move on to the next section.",
    "start": "1411248",
    "end": "1415441"
  },
  {
    "text": "Sorry. Alright, resources, so,\nresources are you know,",
    "start": "1416568",
    "end": "1422863"
  },
  {
    "text": "all the things that go\ninto your app that aren't just pure Java code. And before I can talk about\nresources, I wanna talk",
    "start": "1425260",
    "end": "1430424"
  },
  {
    "text": "about device configurations. So if we look at this\nscreenshot there's like a whole bunch of things that one\ncan derive about it in terms",
    "start": "1430425",
    "end": "1437021"
  },
  {
    "text": "of its configuration. So for example, I can say\nit's in portrait orientation, it's got a height of 731\ndensity in a pint of pixels,",
    "start": "1437021",
    "end": "1444411"
  },
  {
    "text": "it's got a width of 411\nof them, it's a Nexus 6p, so it's got a density of\nxxxhdpi, it happens to",
    "start": "1444411",
    "end": "1452779"
  },
  {
    "text": "be in English right\nnow, the English locale, so it's showing English U.S.\nand it's version 24 'cause",
    "start": "1452779",
    "end": "1458920"
  },
  {
    "text": "it's running the latest n builds. So these are all things that\nthe Android system knows",
    "start": "1458920",
    "end": "1465762"
  },
  {
    "text": "about the device, and you\ncan query this all manually on your own if you want,\nbut actually with resources",
    "start": "1465762",
    "end": "1470995"
  },
  {
    "text": "you can just have it select\nthings automatically. And some of these device\nthings will change throughout",
    "start": "1470995",
    "end": "1477783"
  },
  {
    "text": "execution, some of them won't. So portrait vs. landscape,\nunless you're locking your orientation, that\ncan change very rapidly.",
    "start": "1477784",
    "end": "1484808"
  },
  {
    "text": "You change the locale,\npeople probably won't change that often, but they can change\nit while your app's running.",
    "start": "1484808",
    "end": "1490343"
  },
  {
    "text": "And then some things like the\ndensity and what operating system version probably\naren't going to be changing",
    "start": "1490343",
    "end": "1495960"
  },
  {
    "text": "while you're running your app. So what sort of things do\nyou wanna vary on this? Well landscape versus\nportrait, I think is a classic",
    "start": "1495960",
    "end": "1502667"
  },
  {
    "text": "example, because it usually\npresents a different mode of operation. The built-in calculator\napp, when it's in portrait,",
    "start": "1502667",
    "end": "1509755"
  },
  {
    "text": "only shows four rows, but\nwhen it's got more space to stretch out, it can\npossibly show some of the more cool functions, just by default.",
    "start": "1509755",
    "end": "1517664"
  },
  {
    "text": "Locale is a very easy one,\nyou wanna have your app translated in a different\nlanguages, you just have",
    "start": "1517664",
    "end": "1523930"
  },
  {
    "text": "have it select different\ntext strings based on the locale, so on the left it's\nin English, on the right",
    "start": "1523930",
    "end": "1528994"
  },
  {
    "text": "it's in Japanese. You can have things break\non the width of the screen,",
    "start": "1528994",
    "end": "1534768"
  },
  {
    "text": "so on the phone the card\nwhen it's opened is small enough that it just decides\nto take up the full width,",
    "start": "1534768",
    "end": "1540306"
  },
  {
    "text": "whereas at some point, if\nthe device gets large enough, it just looks kind of\nridiculous having it be full",
    "start": "1540306",
    "end": "1545601"
  },
  {
    "text": "width, and so we start\nhaving a break point at some moment with width. And another example of that\nwould be like our search",
    "start": "1545602",
    "end": "1553188"
  },
  {
    "text": "results, we have the staggered\ngrid view, and again, on the wide tablet it\nwouldn't make sense to have a single column, it makes\nsense to fill it up as much",
    "start": "1553188",
    "end": "1559930"
  },
  {
    "text": "as possible, and so we can\nvary the number of columns based on that. And then also on the mobile\nphone you can see the top",
    "start": "1559930",
    "end": "1566871"
  },
  {
    "text": "result is some small board\ndisplay, because it's a small device, whereas on the\nlarger tablet, we can show",
    "start": "1566871",
    "end": "1573679"
  },
  {
    "text": "the nice big rectangle, which\nwould look nicer if that actually had a background, but whatever.",
    "start": "1573680",
    "end": "1579714"
  },
  {
    "start": "1579000",
    "end": "1733000"
  },
  {
    "text": "So you could do this all\nin Java code like I said earlier, but it's a lot\neasier if you just leverage the resource qualifier system.",
    "start": "1579714",
    "end": "1586395"
  },
  {
    "text": "And what this system does\nis you define alternative resources for different\ndevice configuration and then",
    "start": "1586395",
    "end": "1591667"
  },
  {
    "text": "at run time Android will\nautomatically pick the correct resource based on\nthe device configuration.",
    "start": "1591667",
    "end": "1597953"
  },
  {
    "text": "So it's go through an\nquery everything and figure out which of the resources\nyou defined makes most sense in this situation.",
    "start": "1597953",
    "end": "1604297"
  },
  {
    "text": "And so you define this by\nthe names of the folders, so in your resources directory\nif you have something",
    "start": "1604297",
    "end": "1610495"
  },
  {
    "text": "that's just the default\nvalues, that means it has no resource qualifiers attached\nto it, it's the default fallback in all cases.",
    "start": "1610495",
    "end": "1617595"
  },
  {
    "text": "Whereas if you do a single\ndash and then a resource qualifier, so this one has\none resource qualifier,",
    "start": "1617595",
    "end": "1622700"
  },
  {
    "text": "it's xxxhdpi, and you can\nhave multiple qualifiers if you want. You can actually apply\nas many qualifiers as you",
    "start": "1622700",
    "end": "1629153"
  },
  {
    "text": "want to a single value,\nalthough usually it isn't handy if you do it to\nmany different values. And one other thing worth\nnoting is that if you do",
    "start": "1629154",
    "end": "1636033"
  },
  {
    "text": "have multiple qualifiers, they\nhave to go in a particular order, so look up the\ndocumentation, the documentation",
    "start": "1636033",
    "end": "1641821"
  },
  {
    "text": "has this huge table of all\nthe different qualifiers that you can use, and you have\nto put them in the order",
    "start": "1641821",
    "end": "1647855"
  },
  {
    "text": "of that table for Android\nto parse it correctly. So that same documentation page also lists",
    "start": "1647855",
    "end": "1655513"
  },
  {
    "text": "out the algorithm, but\npretty much it's just like a process of elimination. It tries to find the most\nspecific resource, given the",
    "start": "1655513",
    "end": "1663303"
  },
  {
    "text": "current configuration. So imagine I start with some\nvalue, and I've got something",
    "start": "1663303",
    "end": "1668535"
  },
  {
    "text": "in values with smallest\nwidth 600dp, smallest width means that regardless of\norientation, what is the smallest",
    "start": "1668535",
    "end": "1676094"
  },
  {
    "text": "width that you can possibly\nhave for the device, which is useful for figuring out\nkind of the device class,",
    "start": "1676094",
    "end": "1681153"
  },
  {
    "text": "like tablet versus phone. And it also has to be in portrait. So then it would select\nfrom this if those are true,",
    "start": "1681153",
    "end": "1688581"
  },
  {
    "text": "but if it turns out one\nor the other isn't true, then it'll start looking\nto see other things it can eliminate.",
    "start": "1688581",
    "end": "1693797"
  },
  {
    "text": "So then it'll look maybe\nfor just the single sw 600 dp, oh, it turns out\nthe phone doesn't qualify",
    "start": "1693797",
    "end": "1700412"
  },
  {
    "text": "for that, so then it'll see\nis the phone in portrait, and if it doesn't qualify\nfor that, then it'll fall back to the base values here.",
    "start": "1700412",
    "end": "1707429"
  },
  {
    "text": "So that's why it's hand\nto have a default value for everything, the only\nthing you don't really need a default value for is\ndrawables because the way",
    "start": "1707430",
    "end": "1715176"
  },
  {
    "text": "that Android works it'll\nautomatically scale if you don't have something in the right directory. So if you only have xxxhdpi\nassets and your device",
    "start": "1715176",
    "end": "1724633"
  },
  {
    "text": "happens to be mpi, it'll\njust scale everything down, which isn't great\nperformance-wise, 'cause having to do all that extra work,\nbut at least you don't have",
    "start": "1724633",
    "end": "1731116"
  },
  {
    "text": "to worry about that when\nyou're developing quickly. So in terms of using resource\nqualifiers in the correct",
    "start": "1731116",
    "end": "1737028"
  },
  {
    "start": "1733000",
    "end": "2104000"
  },
  {
    "text": "way, what I think is important is to think of these resources as code. In particular, to think of\neach resource that you're",
    "start": "1737028",
    "end": "1743841"
  },
  {
    "text": "inserting somewhere as a\nparameter to some method function, a method or function,\nand that the parameter's determined based on the\ndevice configuration.",
    "start": "1743842",
    "end": "1751643"
  },
  {
    "text": "So for example, if you're\nthinking about this in terms of code, the code on the\nleft is insane and dumb",
    "start": "1751644",
    "end": "1757096"
  },
  {
    "text": "because I'd have to write\na new square function per number that I want to square,\nwhereas the one on the right",
    "start": "1757096",
    "end": "1763034"
  },
  {
    "text": "has this parameter. So you wanna think of it\nmore in terms of the things on the right. So one simple example, on\nthat I like to use a lot,",
    "start": "1763035",
    "end": "1771298"
  },
  {
    "text": "is actually letting the\nresource qualifier system determine some Boolean logic for me.",
    "start": "1771298",
    "end": "1777298"
  },
  {
    "text": "So this is a simple one\nwhere I basically just wanna know whether it's in portrait or not. Yes, you could query this\nfrom resources fairly",
    "start": "1777298",
    "end": "1783280"
  },
  {
    "text": "easily, but this is just an example. So I could say, \"By default,\nis portrait is false,",
    "start": "1783280",
    "end": "1788850"
  },
  {
    "text": "and then in particular,\nwhen it is in portrait, then it's true.\" And then I can get this Boolean value out.",
    "start": "1788850",
    "end": "1794622"
  },
  {
    "text": "But this is really handy\nif you have multiple different configurations\nand multiple ways that that Boolean could run, it\ncould do all that calculation",
    "start": "1794623",
    "end": "1801301"
  },
  {
    "text": "for you, you don't have to think about it. A more classic example is\nusing it for different layouts.",
    "start": "1801301",
    "end": "1808335"
  },
  {
    "text": "So I could say I'm gonna\ncall set content view, and I have these three different\nversions of layout, one that's",
    "start": "1808335",
    "end": "1814760"
  },
  {
    "text": "the default, one that shows\nup in landscape orientation, and one that shows up\nin portrait orientation. And I made this slide far\nbefore I realized it's very",
    "start": "1814760",
    "end": "1821730"
  },
  {
    "text": "improbably to actually end\nup ever without it being in landscape or portrait,\nyou'd have to have a square screen for that.",
    "start": "1821730",
    "end": "1827979"
  },
  {
    "text": "But basically, it's select\nthe right one of these, but would be more clever,\n'cause this you'll probably",
    "start": "1827979",
    "end": "1833743"
  },
  {
    "text": "end up with some duplicated code. 'Cause chances are,\nthere's not that much that changes between portrait\nand landscape, so it's then",
    "start": "1833743",
    "end": "1841024"
  },
  {
    "text": "if you can use that code\nreuse, the include, and then it can switch on just that\npart of the code that changes.",
    "start": "1841025",
    "end": "1847542"
  },
  {
    "text": "So I've got my LinearLayout,\nand inside of it somewhere there's an include, and\nthat's the only part that",
    "start": "1847542",
    "end": "1853027"
  },
  {
    "text": "changes based on orientation. So now I can have a single\nactivity main, and I can have a layout that's the\ndefault one, and then the",
    "start": "1853027",
    "end": "1860019"
  },
  {
    "text": "layout that just modifies in the portrait. Along the same lines, let's\nlook inside that include,",
    "start": "1860019",
    "end": "1866792"
  },
  {
    "text": "suppose both those includes\nhave text view which are supposed to be pretty much\nthe same thing, but all that they really modify on\nis what the text size is.",
    "start": "1866792",
    "end": "1875094"
  },
  {
    "text": "But this again, this\nseems kind of like a waste to have two different\nlayouts here, if all I really wanna modify is the text size.",
    "start": "1875094",
    "end": "1881195"
  },
  {
    "text": "So here what I can do is I can\nthen reference a dimension, and then that dimension can\nbe then determined based",
    "start": "1881195",
    "end": "1886837"
  },
  {
    "text": "on the qualifiers as well. And then to take this even a\nstep further, let's suppose",
    "start": "1886837",
    "end": "1892747"
  },
  {
    "text": "we have style somewhere in\nthe application, that's the same sort of thing, all\nthat modified is the text size, so I can again,\nhave this be a dimension,",
    "start": "1892747",
    "end": "1901131"
  },
  {
    "text": "but now this style can\nbe applied all over the the application instead\nof applying that dimension",
    "start": "1901131",
    "end": "1906543"
  },
  {
    "text": "trick to just one particular view. So in this example, I have\nan activity main on top,",
    "start": "1906543",
    "end": "1911564"
  },
  {
    "text": "and then by default to go\nto to one include, but if it happens to be in portrait,\nit'll go to a different include.",
    "start": "1911564",
    "end": "1918664"
  },
  {
    "text": "Both of those include a\ntext view, which is supposed to be ostensibly the same\nbetween both, so they use",
    "start": "1918664",
    "end": "1924143"
  },
  {
    "text": "the same style. And then that style, based\non the current configuration determines what the text size is.",
    "start": "1924143",
    "end": "1931028"
  },
  {
    "text": "So you can really go\npretty deep with this and write very little\nduplicated code between all",
    "start": "1931029",
    "end": "1936114"
  },
  {
    "text": "of your layouts, if all that\nyou're doing is changing things based on device configuration. And as an aside, this is\nwhy generally speaking,",
    "start": "1936114",
    "end": "1942812"
  },
  {
    "text": "you shouldn't override\nconfig changes on Android. That's a pretty common beginner way to get around the problem of, oh,\nI rotate my phone and then",
    "start": "1942812",
    "end": "1949748"
  },
  {
    "text": "my activity got destroyed\nand I didn't want that to happen, 'cause where\ndid my all my data go?",
    "start": "1949749",
    "end": "1954835"
  },
  {
    "text": "And then someone says,\n\"Hey, if you just override config changes, everything\nworks out, and all of your data stays around.\"",
    "start": "1954835",
    "end": "1960843"
  },
  {
    "text": "there's two problems with\nthat, one is that it doesn't necessarily help you because\nyou probably only override config changes for orientation\nchanges, but there's",
    "start": "1960843",
    "end": "1968091"
  },
  {
    "text": "a lot of other ways that\nthe configuration could change on the fly. But for two, it means that\nyou bypass this system",
    "start": "1968091",
    "end": "1973776"
  },
  {
    "text": "entirely, cause you're\nbasically telling the Android system, \"I've got this,\ndon't worry about it.\"",
    "start": "1973776",
    "end": "1980455"
  },
  {
    "text": "This whole resource\nqualifier system is a major part of the reason why\nwhen you rotate your phone, the activity gets\ndestroyed and recreated again,",
    "start": "1980455",
    "end": "1987015"
  },
  {
    "text": "because it wants you to\nre-inflate everything, because when you re inflate everything\nsomething might have",
    "start": "1987015",
    "end": "1992939"
  },
  {
    "text": "changed based on selecting\na different layout. Alright, drawables, so\nthis is, let's see how much",
    "start": "1992939",
    "end": "2000323"
  },
  {
    "text": "time I have, good. Alright, so drawables is\nthe last section I wanna talk about, and I wanna\noutline sort of a nightmare",
    "start": "2000323",
    "end": "2006882"
  },
  {
    "text": "scenario that you may or\nmay not have gone through. I certainly gone through this, many times. So imagine I'm interacting\nwith design, and they",
    "start": "2006882",
    "end": "2013065"
  },
  {
    "text": "send me a mock-up of a new screen. And in particular this is\nthe login screen, and they",
    "start": "2013065",
    "end": "2018132"
  },
  {
    "text": "wanted to add this login\nwith SSL thing at the bottom. So then I look at this,\nand I start working on it,",
    "start": "2018132",
    "end": "2025422"
  },
  {
    "text": "but then I tell design, \"I\nneed this asset, 'cause I'm not good at design or\nanything, I need you to give this to me.\" So design says, \"Okay, sure, no problem.\"",
    "start": "2025422",
    "end": "2031624"
  },
  {
    "text": "So they send you over a\nzip file, you unzip it, and you get this one file\nthat is who knows how big this is supposed to be.",
    "start": "2031624",
    "end": "2037279"
  },
  {
    "text": "So you tell design. \"Okay,\nthis isn't enough, I need more than this, I need one in\nall the different densities.\"",
    "start": "2037279",
    "end": "2042499"
  },
  {
    "text": "And design says, \"Oh sure,\"\nthey go do some research on how that works, and\nthen they send you back a file like this, and a\nzip that contains this.",
    "start": "2042499",
    "end": "2049761"
  },
  {
    "text": "So now you've got all\nthe assets that you need, but then you have to go\nthrough an rename everything and put it in the right\nfolders, and then import",
    "start": "2049761",
    "end": "2055836"
  },
  {
    "text": "into your project, it's\nkind of just a pain. And that's a real pain\nto do with every asset, and then the kicker on\ntop of all of this is that",
    "start": "2055837",
    "end": "2061896"
  },
  {
    "text": "at the very end, design\nsays, \"Actually, I wanna tweak the color, and here's\na new set of assets.\" And so now you have to go\nthrough this whole process",
    "start": "2061896",
    "end": "2069101"
  },
  {
    "text": "again, and it's a\ngigantic pain in the ass. So my recommendation here,\nI've been working with",
    "start": "2069101",
    "end": "2075742"
  },
  {
    "text": "the design team at Trello,\nand we figured out a whole bunch of ways to reduce\nall of this pain and all this friction.",
    "start": "2075743",
    "end": "2081762"
  },
  {
    "text": "And it's just made things\nso much simpler, and it's basically to think of assets\nas code, as much as possible.",
    "start": "2081762",
    "end": "2087365"
  },
  {
    "text": "Don't think of them as\nbitmaps that you get from",
    "start": "2087365",
    "end": "2091365"
  },
  {
    "text": "design as much as you can,\nthink of it as things that you can execute in your application. Because then it's so much\nfaster to tweak and change",
    "start": "2093192",
    "end": "2100946"
  },
  {
    "text": "things on the fly. So the first example of this\nis drawable XML, which has",
    "start": "2100946",
    "end": "2106412"
  },
  {
    "start": "2104000",
    "end": "2155000"
  },
  {
    "text": "been in Android since the very beginning. And drawable XML are\nresources that you can define,",
    "start": "2106412",
    "end": "2112084"
  },
  {
    "text": "you can do things like draw\nsimple shapes, you can do things like set up state\nselectors, so that's where",
    "start": "2112084",
    "end": "2118372"
  },
  {
    "text": "if you press a button and\nit looks slightly different, that's a state selector. You can use it as a layer\nlist, and this is really",
    "start": "2118372",
    "end": "2124475"
  },
  {
    "text": "handy because if you have\ntwo drawables that you actually wanna layer on top\nof each other with multiple states in between both of\nthem, you might have thought,",
    "start": "2124475",
    "end": "2131536"
  },
  {
    "text": "\"Okay, now I need to design\nto composite all of these images for me.\" Actually, you can just set\nup a layer list, and then",
    "start": "2131537",
    "end": "2137080"
  },
  {
    "text": "change the two layers\nindependently, you get that nice composition going on. So a detailed example for\nthis are the login buttons",
    "start": "2137080",
    "end": "2144801"
  },
  {
    "text": "that I worked on once. And so these login\nbuttons are entirely done through drawable XML.",
    "start": "2144801",
    "end": "2151618"
  },
  {
    "text": "So the first step to making\nthese login buttons work is that I need to create that button outline.",
    "start": "2151618",
    "end": "2159125"
  },
  {
    "start": "2155000",
    "end": "2274000"
  },
  {
    "text": "And the button outline\nitself is just its own file. So we're not worrying about\nthe click state right now.",
    "start": "2159125",
    "end": "2165702"
  },
  {
    "text": "And it uses a shape drawable,\nthe first important part is you can tell it what type\nof shape you want, you can",
    "start": "2165702",
    "end": "2173024"
  },
  {
    "text": "also make ovals and stuff like that. But you're limited to very\nsimple shapes with drawable XML.",
    "start": "2173024",
    "end": "2179111"
  },
  {
    "text": "I wanna say that it's mostly\nfilled with transparent space, in fact, that should\nbe the default, but on some older versions of Android\nit was not defaulting to",
    "start": "2179111",
    "end": "2186671"
  },
  {
    "text": "transparent for solid, I\ndon't remember exactly why. Then I do want that white\noutline though, so I give it",
    "start": "2186671",
    "end": "2193835"
  },
  {
    "text": "a stroke, which then\ndetermines that outline, and I would like to have\na small radius on it so it gets that nice little pretty button look.",
    "start": "2193835",
    "end": "2202138"
  },
  {
    "text": "So that's just creating the\noutline, the blue actually comes from the background\nof the entire screen, I just put it there 'cause otherwise\nit would be really hard",
    "start": "2202138",
    "end": "2208832"
  },
  {
    "text": "to see with my white\nbackground on the slides. So then we need to add\nsome behavior to it.",
    "start": "2208832",
    "end": "2215296"
  },
  {
    "text": "When I click it, I wanna\nactually be able to tell that I clicked it, and so\nwe need to add a selector to it, which you can see\nin this beautiful little",
    "start": "2215296",
    "end": "2221263"
  },
  {
    "text": "two frame GIF. And so the way that I'm doing\nthis is actually layering a selector on top of that\noutline I just talked about.",
    "start": "2221263",
    "end": "2228685"
  },
  {
    "text": "So I'm using a layer list,\nand that layer list allows me to take two drawables and\nput one on top of the other.",
    "start": "2228685",
    "end": "2235747"
  },
  {
    "text": "And I'm saying the top layer\nis that outline that I just showed you, that's the\nprevious code that I showed you, is what's going on top.,",
    "start": "2235747",
    "end": "2241630"
  },
  {
    "text": "So that's always going to be drawn. And then the other layer is\na selector, and the selector just has two states in it,\nand one of those states",
    "start": "2241630",
    "end": "2248607"
  },
  {
    "text": "is when it's pressed,\nthen I want you to draw this other shape. So again, I'm using another\nshape drawable in order",
    "start": "2248607",
    "end": "2255878"
  },
  {
    "text": "to determine what should\nbe drawn inside of it, and in this case it's a\nlittle simpler, 'cause I can just say, \"I want you to\nhave a solid color, but then",
    "start": "2255878",
    "end": "2261976"
  },
  {
    "text": "again, also have the\ncorner so it doesn't end up bleeding out of the corners.\" And then when it's not pressed\nand in the default state,",
    "start": "2261976",
    "end": "2267873"
  },
  {
    "text": "then it'll just be transparent. So that's great an all, but\nthen in version 21 of Android they added these nice ripple\ndrawables which look really",
    "start": "2267874",
    "end": "2275715"
  },
  {
    "start": "2274000",
    "end": "2317000"
  },
  {
    "text": "pretty and doing that\nrequires a while different set of code.",
    "start": "2275715",
    "end": "2280495"
  },
  {
    "text": "And so for that, you end\nup using something that's a ripple XML, something\nwe added in version 21.",
    "start": "2281615",
    "end": "2287013"
  },
  {
    "text": "And that inside there is\nwhere you say what the color of the ripple should be.",
    "start": "2287013",
    "end": "2292681"
  },
  {
    "text": "And then after that, I add,\nokay, I still have the same button outline as what's\nactually being drawn in that",
    "start": "2292681",
    "end": "2297783"
  },
  {
    "text": "ripple, but then the last\npart of this is that I define a mask. And that mask basically\nsays, \"This is the outline",
    "start": "2297783",
    "end": "2304586"
  },
  {
    "text": "of where the ripple should appear.\" And so then the actual\nsolid color inside of it doesn't really matter, it's\njust the fact that this",
    "start": "2304586",
    "end": "2311469"
  },
  {
    "text": "drawable will draw to this\nparticular area that matters. And so I was able to get\naway with all of this and",
    "start": "2311469",
    "end": "2318556"
  },
  {
    "start": "2317000",
    "end": "2348000"
  },
  {
    "text": "have a different version for\ndifferent versions of Android, by using the resource\nqualifier system, so at the bottom there's this outline\nthat I'm always going",
    "start": "2318556",
    "end": "2325903"
  },
  {
    "text": "to be using, but then the\ndefault button uses the state selector, which will always\nwork all the way back to version one of Android, I think.",
    "start": "2325903",
    "end": "2332551"
  },
  {
    "text": "And then drawable v.21\nfor that ripple drawable, I can use there.",
    "start": "2332551",
    "end": "2337828"
  },
  {
    "text": "So drawable XML, a fairly good\nway to skip a lot of work.",
    "start": "2337828",
    "end": "2341994"
  },
  {
    "text": "And then I just had to ask\ndesign for the colors, I didn't have to ask them for\nanything else in particular.",
    "start": "2343041",
    "end": "2349004"
  },
  {
    "start": "2348000",
    "end": "2427000"
  },
  {
    "text": "Vector drawables, so like\nI said, the shape drawables lets you draw very simple\nshapes, nothing complicated. Vector drawables lets\nyou do any sort of vector",
    "start": "2349004",
    "end": "2356452"
  },
  {
    "text": "drawing you want, or most\nvector drawing that you want. And so it allows you to do\nvery complex shapes, and",
    "start": "2356452",
    "end": "2362621"
  },
  {
    "text": "the advantage here to\nusing a vector is that you don't have to then worry\nabout density of the screen all that much.",
    "start": "2362621",
    "end": "2368627"
  },
  {
    "text": "'Cause before I was having\nto get these PNGs from design that was in all\nthe different densities,",
    "start": "2368627",
    "end": "2373878"
  },
  {
    "text": "here they can just give\nyou a single vector, and then it's automatically\ndrawn at whatever's the best resolution for that screen.",
    "start": "2373878",
    "end": "2380911"
  },
  {
    "text": "So that's a huge\ntime-saver, but there is one problem with the way that Android",
    "start": "2380911",
    "end": "2386025"
  },
  {
    "text": "implemented vector drawable. Oh, so another point is\nthat vector drawables were added recently in\nAndroid, but there was",
    "start": "2386025",
    "end": "2392208"
  },
  {
    "text": "a back compatible library\nin the support libraries for using vectors all\nthe way back to I think, 14 or something like that.",
    "start": "2392208",
    "end": "2397579"
  },
  {
    "text": "But there is a big problem\nwith the way that Android did it, which is that they\ncame up with their own vector drawable format\nthat is not actually SVG.",
    "start": "2397580",
    "end": "2405351"
  },
  {
    "text": "And if your designers are\nanything like my designers, they know how to speak SVG\nreally well, all of their",
    "start": "2405351",
    "end": "2411211"
  },
  {
    "text": "tool know how to output in\nSVG, and none of them know how to output as vector drawables.",
    "start": "2411211",
    "end": "2417449"
  },
  {
    "text": "So you need some way to\nconvert these SVGs that your designers are giving you into\nvector drawables in the app.",
    "start": "2417449",
    "end": "2424321"
  },
  {
    "text": "So there's sort of two ways\nof doing that, yeah, sad design, there's two ways of doing this.",
    "start": "2424321",
    "end": "2429821"
  },
  {
    "start": "2427000",
    "end": "2587000"
  },
  {
    "text": "And one is in Android Studio\nyou can say, \"I want a new vector asset,\" and that'll\nbring up this nice little",
    "start": "2429821",
    "end": "2435666"
  },
  {
    "text": "wizard, and then you can\npass in the SVG and it'll convert that into a vector\ndrawable as best it can.",
    "start": "2435666",
    "end": "2442494"
  },
  {
    "text": "There are some SVGs that\nit doesn't work very well with and won't convert.",
    "start": "2442495",
    "end": "2447900"
  },
  {
    "text": "So that's good, but I still\nam even lazier than this, because I don't wanna have\nto go through a wizard",
    "start": "2447900",
    "end": "2453606"
  },
  {
    "text": "every time I import a new asset. So instead, we wrote his\nbefore all the vector drawable",
    "start": "2453606",
    "end": "2459524"
  },
  {
    "text": "back compat stuff happened,\nbut we're still using it, which is this Android plugin that we",
    "start": "2459524",
    "end": "2464559"
  },
  {
    "text": "wrote called Victor. And what Victor does, is you\ndefine any number of source sets, anywhere that you have\nyour SVGs, and it'll just",
    "start": "2464560",
    "end": "2471365"
  },
  {
    "text": "slurp all those up, and\nthen output something that the system can render.",
    "start": "2471365",
    "end": "2476740"
  },
  {
    "text": "And for awhile it just output\nPNGs but then eventually we were able to get to\nactually grab the code that",
    "start": "2476740",
    "end": "2482477"
  },
  {
    "text": "is in this new vector\nasset stuff and then use that to convert it straight\ninto vector drawables.",
    "start": "2482477",
    "end": "2487690"
  },
  {
    "text": "So that's great because\nactually with Trello, our designers have their\nown Git repository, which is",
    "start": "2487690",
    "end": "2493109"
  },
  {
    "text": "where they put all of their\ncompiled SVGs, and then we can just have that as a\nGit submodule, and import it, and then we just have\nto update a commit pointer",
    "start": "2493109",
    "end": "2501851"
  },
  {
    "text": "to get new assets from\ndesign, that's great. And then so the last thing\nI'd like to say about",
    "start": "2502763",
    "end": "2510341"
  },
  {
    "text": "drawables that has really\nsaved a lot of time recently, is that difference\nbetween skeuomorphic and flat design.",
    "start": "2510341",
    "end": "2516140"
  },
  {
    "text": "So skeumorphic design\nis where you have things that look exactly like what\nthey're supposed to be, and so on the left is Andie\nGraph, which is an app",
    "start": "2516140",
    "end": "2523928"
  },
  {
    "text": "that my friend wrote,\nwhich makes your phone act exactly like any TI-83, Ti-84, whatever,",
    "start": "2523928",
    "end": "2530370"
  },
  {
    "text": "and look exactly like it. So it looks very realistic,\nthat's very skeumorphic, whereas on the right you\nhave the normal calculator,",
    "start": "2530370",
    "end": "2536885"
  },
  {
    "text": "which is flat, and every\nbutton is just this flat color. And what's really nice\nhere is that as nice as the",
    "start": "2536885",
    "end": "2543555"
  },
  {
    "text": "thing on the left looks, on\nthe right all the icons and all the text is just a flat color.",
    "start": "2543555",
    "end": "2548622"
  },
  {
    "text": "And what that means is\nthat it's very easy to tint those colors and change them on the fly.",
    "start": "2548622",
    "end": "2554108"
  },
  {
    "text": "With the buttons on the\nleft, it would be very hard to tint them in any way\nthat would be reasonable.",
    "start": "2554108",
    "end": "2560236"
  },
  {
    "text": "So actually, in the Trello\napp, all of our assets are flat black colors. So they're black on alpha,\nand then in code, we take",
    "start": "2560236",
    "end": "2568809"
  },
  {
    "text": "any of those, and tint it\nwhatever color we want. And so that's super-handy\nfrom the perspective of",
    "start": "2568809",
    "end": "2574692"
  },
  {
    "text": "design, because they don't\nhave to create multiple assets for whatever color they want. Every time they wanna change\nthe colors, we can just say,",
    "start": "2574692",
    "end": "2582140"
  },
  {
    "text": "\"Oh, that's easy, let's\ngo change it in code,\" and then we're done. So in terms of tinting\nimages, there's sort of a few",
    "start": "2582140",
    "end": "2588721"
  },
  {
    "start": "2587000",
    "end": "2859000"
  },
  {
    "text": "ways to do it, one is to\ndo it via XML, but besides the fact that image view\nhas had this tint attribute",
    "start": "2588721",
    "end": "2594970"
  },
  {
    "text": "forever, which doesn't\nquite work all that well, it's not backwards compatible. It got added into recent\nversions of Android to be",
    "start": "2594970",
    "end": "2602278"
  },
  {
    "text": "able to tint drawables in\nXML, but they haven't figured out any way to actually\nbackport that functionality.",
    "start": "2602278",
    "end": "2607701"
  },
  {
    "text": "So I ended up doing\nactually most of the tinting in code, it's very simple\nwith image view and drawables,",
    "start": "2607701",
    "end": "2615153"
  },
  {
    "text": "you can call set colorfilter,\nand then you just pass in the color. And then it turns out that\nfor a black icon on alpha,",
    "start": "2615154",
    "end": "2623153"
  },
  {
    "text": "you wanna use the Porter/Duff\nmode of source in. That's actually why the\nXML imageview of the tint",
    "start": "2623153",
    "end": "2629004"
  },
  {
    "text": "attribute there, I don't\nlike it very much, 'cause it uses a Porter/Duff mode\nthat isn't compatible. I think you have to create\nwhite icons on alpha,",
    "start": "2629004",
    "end": "2635669"
  },
  {
    "text": "which we're not doing at the moment. Now if you want a really\ncomprehensive solution,",
    "start": "2635669",
    "end": "2640898"
  },
  {
    "text": "this exists in the support\nlibraries is drawable compat, and with that you\nactually wrap the drawable, and then you can call set\ntint, or set tint list",
    "start": "2640898",
    "end": "2648367"
  },
  {
    "text": "on that wrapped drawable. And main advantage that\nhas over just calling color filter directly is that\nit can handle tint lists,",
    "start": "2648367",
    "end": "2656398"
  },
  {
    "text": "so you can have multiple\ndifferent selected states for that wrapped drawable\nin color, and you can",
    "start": "2656398",
    "end": "2663375"
  },
  {
    "text": "tint all of it equally. But since we're not\nactually using that in the app, we don't end up doing\nthat very often, and so",
    "start": "2663375",
    "end": "2669576"
  },
  {
    "text": "set color filter's just a\nfaster, easier way of doing it. Anyways, so that was all that I've got.",
    "start": "2669576",
    "end": "2677118"
  },
  {
    "text": "This was a slide I was\ntold to put up as well, to let us know what you\nthink, click the happy face",
    "start": "2677118",
    "end": "2682601"
  },
  {
    "text": "if you liked it or the sad\nface if didn't like it. And thanks very much for\ncoming to listen to the talk,",
    "start": "2682602",
    "end": "2688543"
  },
  {
    "text": "the middle link is to my\nblog, where I've written more about some of these\nthings and then some",
    "start": "2688543",
    "end": "2694436"
  },
  {
    "text": "parts of this talk were\ntaken from other talks that were more detailed,\nin particularly the styles and themes, I went into\nmuch more detail on that.",
    "start": "2694436",
    "end": "2701120"
  },
  {
    "text": "So you can look at my old\nspeaker deck to find those talks if you're more\ninterested in learning some of the more nitty-gritty details there.",
    "start": "2701121",
    "end": "2708187"
  },
  {
    "text": "And thank you very much. (audience applause)",
    "start": "2708187",
    "end": "2712928"
  },
  {
    "text": "Were there any questions? - Yes, actually there\nwas one of them, and the question was, whether\nperformance was lost in virtual",
    "start": "2714890",
    "end": "2721911"
  },
  {
    "text": "machines and the. My take on it is that,\nwell, the question might",
    "start": "2721911",
    "end": "2727557"
  },
  {
    "text": "mean that if you use like an\nemulator, and you're doing this, you'll have a slide\nwith the graphics performance",
    "start": "2727558",
    "end": "2734904"
  },
  {
    "text": "in different layouts, will\nit affect emulators, do you know that, if? - So yeah, so let's see here.",
    "start": "2734904",
    "end": "2741297"
  },
  {
    "text": "- I guess that's what-- - I think you're talking about this one-- - [Interviewer] (Mumbles) Yeah.",
    "start": "2741298",
    "end": "2746571"
  },
  {
    "text": "Could you actually find\nout that your layout are kind of--",
    "start": "2746571",
    "end": "2751806"
  },
  {
    "text": "- Through an emulator? No, I'd use a real device for this. - [Interviewer] Yeah,\nyou'd use a real device. - Yeah so I wouldn't, for\nthings like profiling,",
    "start": "2751806",
    "end": "2757985"
  },
  {
    "text": "the emulator can really\nmake things awkward because",
    "start": "2757985",
    "end": "2762152"
  },
  {
    "text": "it could be the case that\nyou have this GPU, if you're working on a Windows desktop\nor something, you're gonna have a GPU that's bigger than your phone,",
    "start": "2763156",
    "end": "2769673"
  },
  {
    "text": "running the rendering. And that's gonna throw things\noff a little bit, obviously. Or it could be the case that\nwhatever, I think it used",
    "start": "2769673",
    "end": "2777673"
  },
  {
    "text": "to be that it was translating\nfrom ARM into x86, and then that would be really\nslow, and so all the CPU",
    "start": "2777673",
    "end": "2782868"
  },
  {
    "text": "operations would be really slow. Basically yeah, I would use\nan actual device for all sort of profiling purposes.",
    "start": "2782868",
    "end": "2789385"
  },
  {
    "text": "- Okay, and do you, you touched upon this new ConstraintLayout,\nis that something you played with or?",
    "start": "2790841",
    "end": "2797398"
  },
  {
    "text": "- Yeah, I played with ConstraintLayout. - You believe it's the savior, or? - I hope so, 'cause it\ndoes a lot of things",
    "start": "2797398",
    "end": "2803133"
  },
  {
    "text": "that, it's sort of like this\ncomposite of RelativeLayout and LinearLayout right now,\nthat allows you to create",
    "start": "2803133",
    "end": "2809109"
  },
  {
    "text": "very complex layouts without\nhaving too much nesting. And so the hope is that\nyou'll be able to create",
    "start": "2809109",
    "end": "2814876"
  },
  {
    "text": "these complex layouts without\nmuch nesting, and that through the constraint\nsystem, it can better figure",
    "start": "2814876",
    "end": "2820577"
  },
  {
    "text": "out what are the more\nperforming way to lay things out quickly. So I'm hoping that it\nsaves us from having to",
    "start": "2820577",
    "end": "2827088"
  },
  {
    "text": "use RelativeLayout more often. (laughs) - [Interviewer] Yeah, I think\nyou have more questions.",
    "start": "2827088",
    "end": "2833036"
  },
  {
    "text": "Please come down and talk\nwith them afterwards. - Yeah. - [Interviewer] But thank you\nvery much, Dan, and remember",
    "start": "2833036",
    "end": "2838724"
  },
  {
    "text": "to rate the session and I\ncan see some of the speakers here from the Android track,\nso thank you very much,",
    "start": "2838724",
    "end": "2843750"
  },
  {
    "text": "it has been a pleasure. And yeah, please give him a hand. (audience applause) - Thank you.",
    "start": "2843750",
    "end": "2848620"
  }
]