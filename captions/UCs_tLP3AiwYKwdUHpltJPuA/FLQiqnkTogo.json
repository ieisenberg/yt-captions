[
  {
    "start": "0",
    "end": "134000"
  },
  {
    "text": "[Music]",
    "start": "960",
    "end": "8889"
  },
  {
    "text": "so thank you everyone for coming today obviously just as we said I'm Alex",
    "start": "13679",
    "end": "20039"
  },
  {
    "text": "Stewart I'm a Solutions engineer at Confluence so we will come to the whole",
    "start": "20039",
    "end": "25199"
  },
  {
    "text": "Kafka Park later but what we really want to share today is some of the learnings we've seen as a",
    "start": "25199",
    "end": "30900"
  },
  {
    "text": "company that practically exists because of that adoption of event driven architectures",
    "start": "30900",
    "end": "38000"
  },
  {
    "text": "and like was just mentioned I started as a 22 year old working on mainframes",
    "start": "38160",
    "end": "44879"
  },
  {
    "text": "there was a 30 under 30 list but it definitely wasn't forbes's um it was IBM's",
    "start": "44879",
    "end": "51120"
  },
  {
    "text": "and we were driven by data arrest so I worked at a credit bureau and every",
    "start": "51120",
    "end": "56640"
  },
  {
    "text": "single night every single week a big chunk of data was brought from all of",
    "start": "56640",
    "end": "62399"
  },
  {
    "text": "the banks you know all of the people loaning out money to people",
    "start": "62399",
    "end": "67740"
  },
  {
    "text": "ultimately to be processed against some simple static query and sometimes eda's",
    "start": "67740",
    "end": "75420"
  },
  {
    "text": "Heritage is actually very much driven by the challenges we saw you know that talk that was just on sometimes it's good to",
    "start": "75420",
    "end": "82140"
  },
  {
    "text": "have those tight couplings but when you have a big chunky black Mainframe sitting in a Data",
    "start": "82140",
    "end": "88920"
  },
  {
    "text": "Center and that data is inaccessible it would take months years to build new",
    "start": "88920",
    "end": "93960"
  },
  {
    "text": "applications so reflecting on how those old databases",
    "start": "93960",
    "end": "99840"
  },
  {
    "text": "you know they're still very much focused on dealing with these big problems where we may have an application that needs to",
    "start": "99840",
    "end": "107700"
  },
  {
    "text": "answer a very specific query around a static question",
    "start": "107700",
    "end": "112979"
  },
  {
    "text": "but populating that interacting with it is typically going to be quite slow potentially daily",
    "start": "112979",
    "end": "119700"
  },
  {
    "text": "and it's ultimately because in data arrest we're being driven by the analysis coming to the data store we're",
    "start": "119700",
    "end": "127500"
  },
  {
    "text": "looking at the the data but not necessarily why the data change happened",
    "start": "127500",
    "end": "134660"
  },
  {
    "start": "134000",
    "end": "199000"
  },
  {
    "text": "and that's fundamentally driven by the shift that we've seen in the software",
    "start": "135360",
    "end": "140760"
  },
  {
    "text": "world around us if you think back to ordering a taxi 30",
    "start": "140760",
    "end": "145860"
  },
  {
    "text": "years ago you probably called up a a taxi rank you asked them when a taxi",
    "start": "145860",
    "end": "153360"
  },
  {
    "text": "would be available I need to get to the cinema at 6 pm and they add it to a static data store",
    "start": "153360",
    "end": "158879"
  },
  {
    "text": "they can't develop particularly well off that there's not a lot of enrichment because they're only going to find out",
    "start": "158879",
    "end": "164040"
  },
  {
    "text": "at the end of the day that a particular taxi driver was sitting around not doing",
    "start": "164040",
    "end": "169440"
  },
  {
    "text": "anything between jobs compare that to your Uber or Lyft or equivalent today where looking at the",
    "start": "169440",
    "end": "176280"
  },
  {
    "text": "flow of data coming through the events like traffic like the availability of",
    "start": "176280",
    "end": "181379"
  },
  {
    "text": "drivers like the number of people trying to book we're moving away from thinking like",
    "start": "181379",
    "end": "186720"
  },
  {
    "text": "humans with our architectures I'm beginning to think more like software",
    "start": "186720",
    "end": "193500"
  },
  {
    "text": "so data has become really the center of our business",
    "start": "193500",
    "end": "198860"
  },
  {
    "start": "199000",
    "end": "294000"
  },
  {
    "text": "and really that's because software cares about events probably the first thing anyone here",
    "start": "201000",
    "end": "206459"
  },
  {
    "text": "who's had to code in the past has written is hello world and hello world is creating an event it's a print line",
    "start": "206459",
    "end": "214440"
  },
  {
    "text": "and as we all know events are just the things that are happening in our business that could be from iot sensors",
    "start": "214440",
    "end": "221099"
  },
  {
    "text": "it could be cyber security interactions in our Network or it could be more important things",
    "start": "221099",
    "end": "227400"
  },
  {
    "text": "like healthcare records customer interactions with our app all of these events are presenting",
    "start": "227400",
    "end": "234239"
  },
  {
    "text": "streams of data that model the operation of our organization",
    "start": "234239",
    "end": "240720"
  },
  {
    "text": "each of these streams are events that we will publish once like a human would",
    "start": "240720",
    "end": "246120"
  },
  {
    "text": "asking a question but there are many other parts of an organization that are going to want to",
    "start": "246120",
    "end": "251280"
  },
  {
    "text": "act on these to process them to understand what they actually mean",
    "start": "251280",
    "end": "256859"
  },
  {
    "text": "ultimately a data emotion platform is thinking about those streams those",
    "start": "256859",
    "end": "262079"
  },
  {
    "text": "sequences of events and focusing on how we can act upon them operate on them and analyze all those",
    "start": "262079",
    "end": "269400"
  },
  {
    "text": "events as they occur obviously the act of doing this is stream processing",
    "start": "269400",
    "end": "275460"
  },
  {
    "text": "and the result is itself more events coming back to the idea of where those couplings are",
    "start": "275460",
    "end": "281940"
  },
  {
    "text": "and in turn those events can be consumed as well by other stream processes or",
    "start": "281940",
    "end": "287520"
  },
  {
    "text": "picked up by other Technologies in our ecosystem like microservices or databases",
    "start": "287520",
    "end": "294740"
  },
  {
    "start": "294000",
    "end": "375000"
  },
  {
    "text": "so coincidentally uh very similar to one of the examples that was given upstairs I think",
    "start": "295440",
    "end": "301860"
  },
  {
    "text": "we've probably all seen an event kind of process like this before pretty tightly coupled where I'm going",
    "start": "301860",
    "end": "309479"
  },
  {
    "text": "to my e-commerce website and I'm running a sales transaction",
    "start": "309479",
    "end": "314820"
  },
  {
    "text": "it's a pretty basic but technically event oriented process",
    "start": "314820",
    "end": "320580"
  },
  {
    "text": "so my first event is my purchase request hopefully I'm making sure there's",
    "start": "320580",
    "end": "325800"
  },
  {
    "text": "actually some inventory there and not just shooting That Into The Ether",
    "start": "325800",
    "end": "330900"
  },
  {
    "text": "that's then going to produce an item reservation and from there account services uh",
    "start": "330900",
    "end": "337080"
  },
  {
    "text": "probably going to want to update to say that we want to take some funds away my",
    "start": "337080",
    "end": "343080"
  },
  {
    "text": "shipping team probably want to update to say that they're going to deliver this",
    "start": "343080",
    "end": "348900"
  },
  {
    "text": "so I have all of these services that see value from the same event",
    "start": "348900",
    "end": "354419"
  },
  {
    "text": "and of course they themselves May produce events so my Logistics team may",
    "start": "354419",
    "end": "359880"
  },
  {
    "text": "call out to a distributor or a delivery company to say hey we have 10 items can",
    "start": "359880",
    "end": "367139"
  },
  {
    "text": "we order a bigger truck but we can look at these as events or",
    "start": "367139",
    "end": "374520"
  },
  {
    "text": "alternately consider them more as event commands",
    "start": "374520",
    "end": "381840"
  },
  {
    "start": "375000",
    "end": "467000"
  },
  {
    "text": "so these commands are us asking to fulfill a service and again you probably",
    "start": "381840",
    "end": "387000"
  },
  {
    "text": "saw something like this upstairs before there's certain scenarios where it's",
    "start": "387000",
    "end": "392520"
  },
  {
    "text": "pretty valuable just have a broker that's handling those commands as they're passed back and forth so a purchase request is handled by my",
    "start": "392520",
    "end": "400440"
  },
  {
    "text": "purchase service that knows I need to issue a command to my inventory",
    "start": "400440",
    "end": "405960"
  },
  {
    "text": "but the risk here is how that broker in the middle is beginning to tie these",
    "start": "405960",
    "end": "411000"
  },
  {
    "text": "together so in a very API driven world for example this can get complicated quite quickly",
    "start": "411000",
    "end": "417500"
  },
  {
    "text": "my inventory system is kind of a bottleneck that's limiting my account",
    "start": "417500",
    "end": "423240"
  },
  {
    "text": "team from actually processing the next order because all of these are tied so closely",
    "start": "423240",
    "end": "429479"
  },
  {
    "text": "together and it's probably quite in line with Conway's law so we're going to build",
    "start": "429479",
    "end": "435539"
  },
  {
    "text": "systems that act the same way as our businesses traditionally were that big credit bureau I used to work",
    "start": "435539",
    "end": "442139"
  },
  {
    "text": "for definitely was slowed down because each business credit versus personal",
    "start": "442139",
    "end": "448020"
  },
  {
    "text": "credit versus marketing off that data were very separate silos",
    "start": "448020",
    "end": "453539"
  },
  {
    "text": "and we see that on a more micro versus macro level here where my accounts team probably don't",
    "start": "453539",
    "end": "460080"
  },
  {
    "text": "care too much about my inventory as long as there's orders coming through",
    "start": "460080",
    "end": "466580"
  },
  {
    "start": "467000",
    "end": "596000"
  },
  {
    "text": "but when we conceptually move to an event oriented approach we start thinking in a very different",
    "start": "468720",
    "end": "475139"
  },
  {
    "text": "manner so when a purchase happens at Timex an",
    "start": "475139",
    "end": "480900"
  },
  {
    "text": "event occurs and I want this to be a record that persists not just fired and forgotten",
    "start": "480900",
    "end": "488280"
  },
  {
    "text": "but something I can come back and reference if there was some audit reason but perhaps more realistically what",
    "start": "488280",
    "end": "495000"
  },
  {
    "text": "happens if my inventory system crashes the orders come through and I don't want",
    "start": "495000",
    "end": "500220"
  },
  {
    "text": "my accounting and Logistics to be impacted by the inability to check that",
    "start": "500220",
    "end": "505620"
  },
  {
    "text": "the app is running for example because it's durably persisted it doesn't matter I can just replay from",
    "start": "505620",
    "end": "512459"
  },
  {
    "text": "where that data was and any process that needs to handle",
    "start": "512459",
    "end": "517500"
  },
  {
    "text": "these events can then act on them and use them however they need",
    "start": "517500",
    "end": "522659"
  },
  {
    "text": "if they can't keep up with that service the fact that they are more Loosely coupled means that they won't crash or become",
    "start": "522659",
    "end": "529680"
  },
  {
    "text": "overwhelmed instead they can stay where they are in that backlog catching up on",
    "start": "529680",
    "end": "535860"
  },
  {
    "text": "that Delta that they've missed out on and we can even bring more services based on the knowledge of where they",
    "start": "535860",
    "end": "541860"
  },
  {
    "text": "were up to so maybe having a kubernetes cluster that we can scale to play catch-up in that scenario",
    "start": "541860",
    "end": "549000"
  },
  {
    "text": "we're not equally allocating and holding resources that are underutilized",
    "start": "549000",
    "end": "556140"
  },
  {
    "text": "we just have what we need when we need it to deal with the scale of the problems that we're trying to solve",
    "start": "556140",
    "end": "563339"
  },
  {
    "text": "so in the case of this event-driven approach ultimately we're taking advantage of",
    "start": "563339",
    "end": "569100"
  },
  {
    "text": "that persistence to deal better with the scale of our events but also the systems underneath",
    "start": "569100",
    "end": "576300"
  },
  {
    "text": "and we can't really know how fast those bottom processes those bottom services",
    "start": "576300",
    "end": "581399"
  },
  {
    "text": "are going to do and this is the other benefits of tearing apart",
    "start": "581399",
    "end": "587820"
  },
  {
    "text": "um the the linking here by having that persistence that I can begin to decouple my producers and my consumers",
    "start": "587820",
    "end": "596000"
  },
  {
    "start": "596000",
    "end": "664000"
  },
  {
    "text": "because when we move to a model where we can asynchronously handle events",
    "start": "597120",
    "end": "602399"
  },
  {
    "text": "it's natural to move to that Paradigm where the producers and consumers are decoupled",
    "start": "602399",
    "end": "609060"
  },
  {
    "text": "so the event producer's job is just to produce those events it shouldn't need to know potentially or care who receives",
    "start": "609060",
    "end": "616620"
  },
  {
    "text": "them with the exception of obvious security requirements and",
    "start": "616620",
    "end": "622820"
  },
  {
    "text": "specific encryption perhaps but when the command pattern that my",
    "start": "622820",
    "end": "628560"
  },
  {
    "text": "purchase process needs to know what other services are being issued to it",
    "start": "628560",
    "end": "634140"
  },
  {
    "text": "I can move to this event driven approach where as soon as I need to add a new service maybe I have a fraud team who",
    "start": "634140",
    "end": "641760"
  },
  {
    "text": "want to look at people who are pushing through new orders I'm no longer tied to some Central database that is now locked up because",
    "start": "641760",
    "end": "649079"
  },
  {
    "text": "my Logistics team and my notification team are querying that static resource",
    "start": "649079",
    "end": "654540"
  },
  {
    "text": "instead I have the scalability here to build out more bring in more and",
    "start": "654540",
    "end": "659820"
  },
  {
    "text": "coordinate with other teams through that single backbone",
    "start": "659820",
    "end": "664279"
  },
  {
    "start": "664000",
    "end": "757000"
  },
  {
    "text": "so bringing that to the the bigger picture here in that modern architecture one that is",
    "start": "666959",
    "end": "672600"
  },
  {
    "text": "event driven we will use data at rest still of course but begin to take advantage of that data",
    "start": "672600",
    "end": "679980"
  },
  {
    "text": "in motion of those event streams and combining them effectively is obviously very critical",
    "start": "679980",
    "end": "687300"
  },
  {
    "text": "so all of those event changes that accumulate a change in state essentially even from a database",
    "start": "687300",
    "end": "694200"
  },
  {
    "text": "can be used to answer the big questions in our business things that still require a daily a weekly View",
    "start": "694200",
    "end": "702980"
  },
  {
    "text": "but the commands and the events that happen more widely can be spread to where they need to go as quickly as",
    "start": "703260",
    "end": "708839"
  },
  {
    "text": "possible whether that's an event driven application whether that's the streaming analytics services",
    "start": "708839",
    "end": "715879"
  },
  {
    "text": "and that means we can begin to look at problems differently as well I mentioned security very briefly before",
    "start": "716459",
    "end": "723300"
  },
  {
    "text": "it's obviously great to look at weeks worth of Vlogs to find a hacker who's come in and interacted with our service",
    "start": "723300",
    "end": "730620"
  },
  {
    "text": "but what about if I run a bank and I'm looking at mobile applications and actually can I collect data from a",
    "start": "730620",
    "end": "737700"
  },
  {
    "text": "mobile phone to figure out that this user is not touching their screen but",
    "start": "737700",
    "end": "742800"
  },
  {
    "text": "they do seem to be making transactions using window data here on those events May actually give me better insight to",
    "start": "742800",
    "end": "749760"
  },
  {
    "text": "the interaction versus looking for specific security flags that I see along the way",
    "start": "749760",
    "end": "756200"
  },
  {
    "start": "757000",
    "end": "830000"
  },
  {
    "text": "and this provides a really nice segue to talking about Kafka and confluent",
    "start": "757079",
    "end": "763740"
  },
  {
    "text": "so probably goes without saying you've seen us on the sponsor board confluenter here today because we are a",
    "start": "763740",
    "end": "771180"
  },
  {
    "text": "company that was built around that need to move away from static data and look",
    "start": "771180",
    "end": "777060"
  },
  {
    "text": "closer at events our founder was working at LinkedIn I'm sure you've all used the",
    "start": "777060",
    "end": "782880"
  },
  {
    "text": "recommendation engine on LinkedIn before and coming to events like this the last",
    "start": "782880",
    "end": "788459"
  },
  {
    "text": "thing I want is to be recommended everyone I met a customer yesterday I want to add one of the folks in this",
    "start": "788459",
    "end": "795720"
  },
  {
    "text": "room and then suddenly have it changed to say who else is working with them who should I interact with",
    "start": "795720",
    "end": "802019"
  },
  {
    "text": "because there is Real Time relatable information that we can process at a",
    "start": "802019",
    "end": "807899"
  },
  {
    "text": "scale there's hundreds of people here today I think where I need to process all of that",
    "start": "807899",
    "end": "813540"
  },
  {
    "text": "going through to understand and then over the last 10 to 12 years and eight odd years since confluent was",
    "start": "813540",
    "end": "820980"
  },
  {
    "text": "founded Apache Kafka has ultimately become the backbone of many event-driven systems",
    "start": "820980",
    "end": "827399"
  },
  {
    "text": "around the world",
    "start": "827399",
    "end": "830240"
  },
  {
    "start": "830000",
    "end": "962000"
  },
  {
    "text": "and we were talking about persistence a short while ago so for those who may not",
    "start": "832440",
    "end": "837480"
  },
  {
    "text": "be familiar with Kafka and how it works as the center point of many event-driven",
    "start": "837480",
    "end": "844380"
  },
  {
    "text": "architectures it's ultimately and most importantly an",
    "start": "844380",
    "end": "849720"
  },
  {
    "text": "event record system so using append only logs I'm able to write my data in a",
    "start": "849720",
    "end": "856860"
  },
  {
    "text": "distributed manner that gives me the ability to firstly write incredibly fast we have customers",
    "start": "856860",
    "end": "863760"
  },
  {
    "text": "in the monitoring space who are writing tens of gigabytes a second of data to Kafka clusters",
    "start": "863760",
    "end": "870600"
  },
  {
    "text": "but equally have complete separation from my consumption as well",
    "start": "870600",
    "end": "875760"
  },
  {
    "text": "so we can see there on this consumer offset basis I'm no longer locking up a table",
    "start": "875760",
    "end": "881160"
  },
  {
    "text": "blocking an API port instead I'm for each consumer recording",
    "start": "881160",
    "end": "887040"
  },
  {
    "text": "from my specific offset that I'm up to while also being able to write to that same topic as well",
    "start": "887040",
    "end": "893339"
  },
  {
    "text": "so introducing massive parallelism which is obviously critically important to an event-driven system as I increase its",
    "start": "893339",
    "end": "900180"
  },
  {
    "text": "adoption across an organization",
    "start": "900180",
    "end": "904220"
  },
  {
    "text": "is that persistence that distribution and that scalability the means we're no longer just working",
    "start": "905399",
    "end": "911639"
  },
  {
    "text": "with a queue of events firing and forgetting as we pass requests between",
    "start": "911639",
    "end": "916920"
  },
  {
    "text": "different services but dealing with a true event store and that can begin to allow us to think",
    "start": "916920",
    "end": "923820"
  },
  {
    "text": "very differently about how we deploy our architecture because ultimately real time and storage",
    "start": "923820",
    "end": "930779"
  },
  {
    "text": "persistent can exist in the same system so we can",
    "start": "930779",
    "end": "936180"
  },
  {
    "text": "really begin to make that event data a first-class citizen it's no longer a",
    "start": "936180",
    "end": "941940"
  },
  {
    "text": "database and a message queue the traditional Lambda architecture where I then need to put a broker that becomes a",
    "start": "941940",
    "end": "948720"
  },
  {
    "text": "bottleneck at the end depending on what I want to consume but actually using both those systems in",
    "start": "948720",
    "end": "955380"
  },
  {
    "text": "a single point of contact in parallel or what we call the Kappa architecture",
    "start": "955380",
    "end": "963079"
  },
  {
    "start": "962000",
    "end": "999000"
  },
  {
    "text": "now I'm sure there's some great experts speaking today",
    "start": "964740",
    "end": "970019"
  },
  {
    "text": "um just listening to what was upstairs was already quite insightful",
    "start": "970019",
    "end": "975480"
  },
  {
    "text": "so one of the things we wanted to really pull out is where we've seen great principles that have been adopted for",
    "start": "975480",
    "end": "982980"
  },
  {
    "text": "event-driven systems especially using Kafka of course and using confluence",
    "start": "982980",
    "end": "988800"
  },
  {
    "text": "and how we can actually apply those to make a a marked change in the processes",
    "start": "988800",
    "end": "994560"
  },
  {
    "text": "that we build along the way and one of the first of those comes back",
    "start": "994560",
    "end": "1000680"
  },
  {
    "start": "999000",
    "end": "1274000"
  },
  {
    "text": "to a message that I just kind of talked about which is how should we treat event",
    "start": "1000680",
    "end": "1007279"
  },
  {
    "text": "data there's always the risk with some of the older systems that people have used in",
    "start": "1007279",
    "end": "1014000"
  },
  {
    "text": "this architecture the the event is used but it's still considered a second-class citizen",
    "start": "1014000",
    "end": "1020600"
  },
  {
    "text": "there's still a greater importance on the static data that may be sitting somewhere else",
    "start": "1020600",
    "end": "1027079"
  },
  {
    "text": "when you're building your first MVP your simple deployment that may not be such a concern if I just",
    "start": "1027079",
    "end": "1033980"
  },
  {
    "text": "need to get data from this database to this micro service treating the function as the first class",
    "start": "1033980",
    "end": "1041360"
  },
  {
    "text": "citizen is probably going to be fine but as I see a wider adoption as we",
    "start": "1041360",
    "end": "1047298"
  },
  {
    "text": "spread out the business as we begin to move towards having domains of event data",
    "start": "1047299",
    "end": "1053419"
  },
  {
    "text": "I have to lift up the value of that event itself",
    "start": "1053419",
    "end": "1059480"
  },
  {
    "text": "it's ultimately a bit of a rejection of the data warehouse or data lake or ETL",
    "start": "1059480",
    "end": "1066260"
  },
  {
    "text": "process because it moves some responsibility back to the services that I'm building",
    "start": "1066260",
    "end": "1071539"
  },
  {
    "text": "and the teams who build them to actually find Value themselves in the data",
    "start": "1071539",
    "end": "1077120"
  },
  {
    "text": "product that they are exposing to the rest of the business it's moving that onus to have a",
    "start": "1077120",
    "end": "1082580"
  },
  {
    "text": "well-defined format to have guarantees of what you're offering and ultimately event streams become an",
    "start": "1082580",
    "end": "1090320"
  },
  {
    "text": "excellent opportunity to build out on this architecture",
    "start": "1090320",
    "end": "1095360"
  },
  {
    "text": "because it means that even if my service is impacted it's obviously already written to that persistent event layer",
    "start": "1095360",
    "end": "1103940"
  },
  {
    "text": "that I am still exposing to the rest of the business so if my micro service my",
    "start": "1103940",
    "end": "1109220"
  },
  {
    "text": "Lambda function does fall down because I've already written to a Kafka Topic in",
    "start": "1109220",
    "end": "1115039"
  },
  {
    "text": "confluent clouds for example the fraud team are still able to consume up to the point that the data is written",
    "start": "1115039",
    "end": "1121520"
  },
  {
    "text": "despite my microservice maybe not being available",
    "start": "1121520",
    "end": "1126340"
  },
  {
    "text": "and event streams like I said form the very core of this architecture enabling",
    "start": "1126919",
    "end": "1131960"
  },
  {
    "text": "those systems to communicate but they also give us some extra control around how we can provide discovery",
    "start": "1131960",
    "end": "1139640"
  },
  {
    "text": "how we can easily publish and consume this data and ultimately build out those",
    "start": "1139640",
    "end": "1145039"
  },
  {
    "text": "fundamental components for how we interact with our event streams",
    "start": "1145039",
    "end": "1151000"
  },
  {
    "text": "so to bring this back to our earlier example of our order system",
    "start": "1152660",
    "end": "1158000"
  },
  {
    "text": "we can begin to think about how we would actually change from that initial broker",
    "start": "1158000",
    "end": "1163340"
  },
  {
    "text": "model in the middle to something where Alice and Joe as owners of their specific domains of",
    "start": "1163340",
    "end": "1170240"
  },
  {
    "text": "their specific functions can begin to renegotiate how they actually share their data",
    "start": "1170240",
    "end": "1177260"
  },
  {
    "text": "so we have Joe sitting down at the bottom there and maybe Joe's starting to get some bad",
    "start": "1177260",
    "end": "1182780"
  },
  {
    "text": "order data from Alice you know what should he do here if we were just tying This Together",
    "start": "1182780",
    "end": "1189500"
  },
  {
    "text": "quite tightly with apis Joe may have a bit of a problem Alice is going to have to",
    "start": "1189500",
    "end": "1195200"
  },
  {
    "text": "ultimately tell him a quick fix or even worse if we have a data warehouse in the",
    "start": "1195200",
    "end": "1200360"
  },
  {
    "text": "middle we're probably going to have to change Alice's ETL process going in and then whatever",
    "start": "1200360",
    "end": "1206120"
  },
  {
    "text": "Joe is using to extract that data from my data warehouse as well",
    "start": "1206120",
    "end": "1211899"
  },
  {
    "text": "Joe may be able to actually change his ETL process",
    "start": "1212299",
    "end": "1217340"
  },
  {
    "text": "but the problem there is that's only really fixing the data for Joe so my",
    "start": "1217340",
    "end": "1222380"
  },
  {
    "text": "team in Billing and recommendations are still going to be getting that bad data",
    "start": "1222380",
    "end": "1227960"
  },
  {
    "text": "so a much better approach here is actually for Alice to be responsible for those issues in the older domain",
    "start": "1227960",
    "end": "1235280"
  },
  {
    "text": "so that everyone in the organization can benefit from the change",
    "start": "1235280",
    "end": "1241100"
  },
  {
    "text": "but we do need to make sure that Alice and Joe can communicate quickly on this obviously in the classic people process",
    "start": "1241100",
    "end": "1248539"
  },
  {
    "text": "and Technology triangle we need to make sure that we're following good CI CD patterns we have",
    "start": "1248539",
    "end": "1255559"
  },
  {
    "text": "good Communications in our organization to make sure that these teams can collaborate and work together properly",
    "start": "1255559",
    "end": "1263059"
  },
  {
    "text": "but Alice must also be a responsible data owner and be able to make such changes quickly",
    "start": "1263059",
    "end": "1269419"
  },
  {
    "text": "so that her data continues to be good quality",
    "start": "1269419",
    "end": "1273880"
  },
  {
    "start": "1274000",
    "end": "1468000"
  },
  {
    "text": "and that ties in very well with the second rule hopefully if you've been using events up",
    "start": "1274880",
    "end": "1282080"
  },
  {
    "text": "till now whether that's over an API or something like Kafka",
    "start": "1282080",
    "end": "1287299"
  },
  {
    "text": "you've made sure that there is good quality a format in that data that you're presenting",
    "start": "1287299",
    "end": "1294140"
  },
  {
    "text": "so schemas are really really useful for this in Confluence world we support Avro",
    "start": "1294140",
    "end": "1300320"
  },
  {
    "text": "and protobuf and Json but more widely in an event driven",
    "start": "1300320",
    "end": "1306140"
  },
  {
    "text": "architecture having well-defined data is critical especially as you scale from those early",
    "start": "1306140",
    "end": "1313340"
  },
  {
    "text": "first MVP projects to having multiple lines of business interact around an",
    "start": "1313340",
    "end": "1318919"
  },
  {
    "text": "event driven architecture having comments and descriptors that can",
    "start": "1318919",
    "end": "1324500"
  },
  {
    "text": "give people context of what this data actually is strong typing to make sure I don't end",
    "start": "1324500",
    "end": "1330440"
  },
  {
    "text": "up having Alice break the inventory system by sending the wrong type of field inside her data",
    "start": "1330440",
    "end": "1339140"
  },
  {
    "text": "and having the ability to build classes and test cases around this to make sure everything's working properly",
    "start": "1339140",
    "end": "1345140"
  },
  {
    "text": "are going to be critical steps along the way and Confluence schema registry",
    "start": "1345140",
    "end": "1351020"
  },
  {
    "text": "makes it really easy to integrate with a wide number of serializers and deserializers across a number of",
    "start": "1351020",
    "end": "1357740"
  },
  {
    "text": "different languages to handle this out the box",
    "start": "1357740",
    "end": "1362200"
  },
  {
    "text": "but one of the big drivers of course with event driven architecture is that",
    "start": "1364340",
    "end": "1369919"
  },
  {
    "text": "we are beginning to make our data much more exposed to a wider organization",
    "start": "1369919",
    "end": "1375140"
  },
  {
    "text": "we're tying in more services ultimately we're changing and evolving",
    "start": "1375140",
    "end": "1380720"
  },
  {
    "text": "faster so as well as treating our data as a",
    "start": "1380720",
    "end": "1386179"
  },
  {
    "text": "first-class citizen we also need to think about how that data can begin to evolve",
    "start": "1386179",
    "end": "1393500"
  },
  {
    "text": "so just like a rest API if we do need to make a change",
    "start": "1393500",
    "end": "1399860"
  },
  {
    "text": "we want to make sure that anyone using the old API isn't going to be affected it's exactly the same using schemas with",
    "start": "1399860",
    "end": "1405980"
  },
  {
    "text": "Kafka and begin to consider what those demands could be as we change understanding",
    "start": "1405980",
    "end": "1412700"
  },
  {
    "text": "where we can potentially pull out things like default values or remove values along the way",
    "start": "1412700",
    "end": "1420640"
  },
  {
    "text": "so some examples there just to set a little context if my business is",
    "start": "1420799",
    "end": "1425900"
  },
  {
    "text": "expanding we've had a really strong growth product using AWS managed",
    "start": "1425900",
    "end": "1430940"
  },
  {
    "text": "Services we're going to spin up in EU West 2 or something after successfully",
    "start": "1430940",
    "end": "1436460"
  },
  {
    "text": "deploying an island I may have to start adding a country code so actually should I begin to consider",
    "start": "1436460",
    "end": "1444320"
  },
  {
    "text": "the backwards and forwards compatibility of my data so the downstream consumers",
    "start": "1444320",
    "end": "1449780"
  },
  {
    "text": "aren't going to be impacted by this new country code that I've added along the way",
    "start": "1449780",
    "end": "1456080"
  },
  {
    "text": "or the flip side here what happens if I have a a user field that contains pii",
    "start": "1456080",
    "end": "1462740"
  },
  {
    "text": "and as I move into new markets I may need to pull that data out",
    "start": "1462740",
    "end": "1468220"
  },
  {
    "start": "1468000",
    "end": "1580000"
  },
  {
    "text": "and that pii piece at the bottom comes to another concern that",
    "start": "1470419",
    "end": "1476059"
  },
  {
    "text": "really is critical to building out as you expand an event-driven architecture",
    "start": "1476059",
    "end": "1482299"
  },
  {
    "text": "there will be breaking schema changes it could be due to changes in the domains",
    "start": "1482299",
    "end": "1487820"
  },
  {
    "text": "of data that you have it could be that data was structured",
    "start": "1487820",
    "end": "1492860"
  },
  {
    "text": "incorrectly when it was first built or there may just be ways that you decide to create a new offering inside a",
    "start": "1492860",
    "end": "1502159"
  },
  {
    "text": "domain that already exists to reflect changes in your environment",
    "start": "1502159",
    "end": "1507400"
  },
  {
    "text": "but we're a persistent data layer at Kafka so how can we handle this",
    "start": "1508340",
    "end": "1513760"
  },
  {
    "text": "well part of this comes back to actually knowing who is consuming our data how is",
    "start": "1514640",
    "end": "1520340"
  },
  {
    "text": "this data being interacted with and skipping to those Evolution points that we talked about before within our",
    "start": "1520340",
    "end": "1526220"
  },
  {
    "text": "schemas when data is a product you also have to have that communication in place to make",
    "start": "1526220",
    "end": "1533120"
  },
  {
    "text": "sure that the organization is aware and familiar with what these changes could be when",
    "start": "1533120",
    "end": "1538340"
  },
  {
    "text": "they impact them so are you going to let them know ahead of time alert them as part of processes",
    "start": "1538340",
    "end": "1545659"
  },
  {
    "text": "or treat that data product like a real product and get feedback from those teams you interact with",
    "start": "1545659",
    "end": "1552440"
  },
  {
    "text": "this is definitely somewhere where we see customers who've moved to this architecture really shift how they're",
    "start": "1552440",
    "end": "1559640"
  },
  {
    "text": "thinking moving away like I said earlier with Conway's law because you used to think in an old way",
    "start": "1559640",
    "end": "1566659"
  },
  {
    "text": "of having silos doesn't mean we have to now otherwise we'll build an inefficient event driven architecture",
    "start": "1566659",
    "end": "1574100"
  },
  {
    "text": "and just to show that quickly in context",
    "start": "1574100",
    "end": "1578919"
  },
  {
    "text": "so one of the ways I may want to actually approach this is how do I make this data more discoverable to my",
    "start": "1579559",
    "end": "1587059"
  },
  {
    "start": "1580000",
    "end": "1719000"
  },
  {
    "text": "colleagues so they can understand what's going on and that could be by using my schema",
    "start": "1587059",
    "end": "1593059"
  },
  {
    "text": "here so we're in confluent Cloud as I build out my schema the main via",
    "start": "1593059",
    "end": "1599179"
  },
  {
    "text": "need to understand the history but also begin to create some understanding of that data as it flows",
    "start": "1599179",
    "end": "1605720"
  },
  {
    "text": "through so I have a credit application example here and as we can see I have my most recent",
    "start": "1605720",
    "end": "1613220"
  },
  {
    "text": "version of my schema but I may also have tag some of that data as it's been produced so for",
    "start": "1613220",
    "end": "1618919"
  },
  {
    "text": "example my customer ID here I may want people to know that this is data that we don't necessarily want to",
    "start": "1618919",
    "end": "1625220"
  },
  {
    "text": "share externally and if I were to add a new field inside of here perhaps region",
    "start": "1625220",
    "end": "1631159"
  },
  {
    "text": "by allowing my colleagues in the analytics part of the business for",
    "start": "1631159",
    "end": "1636380"
  },
  {
    "text": "example to be able to go in and see where I've had those changes they can know their consumer on the other side is",
    "start": "1636380",
    "end": "1642679"
  },
  {
    "text": "seeing changes in that data and build an application around it and ultimately begin to communicate",
    "start": "1642679",
    "end": "1648799"
  },
  {
    "text": "around those changes as they happen but equally having that context that we'll come back to later to know that",
    "start": "1648799",
    "end": "1655340"
  },
  {
    "text": "this is an integer or this is a string so you can only perform certain actions",
    "start": "1655340",
    "end": "1661220"
  },
  {
    "text": "on it and having that extra metadata available as well so this is private data this",
    "start": "1661220",
    "end": "1667100"
  },
  {
    "text": "shouldn't be exposed to a public app ultimately making sure we have processes around how we govern that data",
    "start": "1667100",
    "end": "1676059"
  },
  {
    "text": "and that's where schemas do help us ensure that we are appropriately",
    "start": "1676340",
    "end": "1681700"
  },
  {
    "text": "interacting with our data so when I've added that new field like we said I can",
    "start": "1681700",
    "end": "1687020"
  },
  {
    "text": "make sure that all of my consumers operate correctly that's about the technology here of how",
    "start": "1687020",
    "end": "1694460"
  },
  {
    "text": "do I make sure that we're checking those schemas along the way but also negotiating with my data",
    "start": "1694460",
    "end": "1701240"
  },
  {
    "text": "customers making sure I can spin out that stream over time so that if there",
    "start": "1701240",
    "end": "1706400"
  },
  {
    "text": "is anyone who's consuming the old data with a consumer that will break that we maintain that persistence until they've",
    "start": "1706400",
    "end": "1713000"
  },
  {
    "text": "caught up and consumed and how to ultimately shut it down properly and eventually update our producer",
    "start": "1713000",
    "end": "1721120"
  },
  {
    "start": "1719000",
    "end": "1879000"
  },
  {
    "text": "and that relationship does come down to how do I create and Empower a governing",
    "start": "1721760",
    "end": "1727580"
  },
  {
    "text": "body in my business if you're taking the Spotify model of having",
    "start": "1727580",
    "end": "1733659"
  },
  {
    "text": "tribes working on these products then because we're taking a step away",
    "start": "1733659",
    "end": "1738860"
  },
  {
    "text": "from maybe having a essential data warehouse where all of this data is left and a data warehousing team who",
    "start": "1738860",
    "end": "1745279"
  },
  {
    "text": "processes it actually having a data owner within that business can mean that we can begin to",
    "start": "1745279",
    "end": "1751400"
  },
  {
    "text": "decentralize that data model and build around the applications themselves",
    "start": "1751400",
    "end": "1757460"
  },
  {
    "text": "it departs from a more traditional gatekeeper idea we do still have our",
    "start": "1757460",
    "end": "1763520"
  },
  {
    "text": "nice little SRE sitting and running our event streaming system but their responsibility is to make sure",
    "start": "1763520",
    "end": "1771020"
  },
  {
    "text": "that that data is available to everyone not to be a gatekeeper that slows down",
    "start": "1771020",
    "end": "1776600"
  },
  {
    "text": "the process of exposing that data to other bits of the organization",
    "start": "1776600",
    "end": "1781659"
  },
  {
    "text": "it comes back kind of again to the idea of aligning with how our business used",
    "start": "1782360",
    "end": "1788240"
  },
  {
    "text": "to work and then understanding how as we change the architecture are our very",
    "start": "1788240",
    "end": "1793340"
  },
  {
    "text": "product runs on how can we also change the processes and into personal",
    "start": "1793340",
    "end": "1798980"
  },
  {
    "text": "interactions that happen around it and some example of those decisions",
    "start": "1798980",
    "end": "1807140"
  },
  {
    "text": "um I pulled a couple of these from speaking to a Neo Bank recently who is making this transition across from one",
    "start": "1807140",
    "end": "1814100"
  },
  {
    "text": "big Central database to building their entire Bank on an event driven architecture",
    "start": "1814100",
    "end": "1820340"
  },
  {
    "text": "is thinking about how they are designing that data also going as far as looking at how it's",
    "start": "1820340",
    "end": "1826159"
  },
  {
    "text": "monitored as well how can I understand the relationship between the producers and consumers in my system",
    "start": "1826159",
    "end": "1833779"
  },
  {
    "text": "considering Access Control like was mentioned earlier just because we are Loosely coupled in the",
    "start": "1833779",
    "end": "1841220"
  },
  {
    "text": "application sense doesn't mean we should be Loosely coupled in our kind of data",
    "start": "1841220",
    "end": "1846860"
  },
  {
    "text": "sense we may want to make sure only certain individuals who have an agreed contract can actually consume that data",
    "start": "1846860",
    "end": "1854059"
  },
  {
    "text": "that obviously ties to our data policies and then having our system of",
    "start": "1854059",
    "end": "1859760"
  },
  {
    "text": "improvement over time this should be as agile as creating your micro Services is",
    "start": "1859760",
    "end": "1865700"
  },
  {
    "text": "so are there any data concerns in the business that we fail to address where have we seen problems in this particular",
    "start": "1865700",
    "end": "1872120"
  },
  {
    "text": "setup and dealing with those pain points allows you to build a much stronger product around those events that you've",
    "start": "1872120",
    "end": "1878840"
  },
  {
    "text": "built and when that's been built out this now",
    "start": "1878840",
    "end": "1884659"
  },
  {
    "start": "1879000",
    "end": "1921000"
  },
  {
    "text": "means you can provide a much stronger self-service system for actually accessing that event data",
    "start": "1884659",
    "end": "1891799"
  },
  {
    "text": "you know new applications may have to be in containers",
    "start": "1891799",
    "end": "1897039"
  },
  {
    "text": "um or have a certain way of interacting maybe all data is going to flow through",
    "start": "1897080",
    "end": "1902179"
  },
  {
    "text": "confluent cloud or for another event service that you're using",
    "start": "1902179",
    "end": "1907340"
  },
  {
    "text": "but it's about building those paved roads so that you can understand what's happening along the way",
    "start": "1907340",
    "end": "1914360"
  },
  {
    "text": "and having processes in place for building out pocs and just making it as",
    "start": "1914360",
    "end": "1919580"
  },
  {
    "text": "easy as possible to reduce the toil and the overhead and part of that at the end of the day",
    "start": "1919580",
    "end": "1926659"
  },
  {
    "start": "1921000",
    "end": "2196000"
  },
  {
    "text": "will be how do I make this data easy to discover and to use for individuals",
    "start": "1926659",
    "end": "1932059"
  },
  {
    "text": "so again I've probably been logged out once more but in the example we have here if I",
    "start": "1932059",
    "end": "1939200"
  },
  {
    "text": "just jump back to my environment I actually want everyone in my business to be able to understand what data we have",
    "start": "1939200",
    "end": "1946760"
  },
  {
    "text": "and where it's flowing so data governance can become just as important in my event-driven",
    "start": "1946760",
    "end": "1952880"
  },
  {
    "text": "architecture as the event itself so where I have here an example",
    "start": "1952880",
    "end": "1958399"
  },
  {
    "text": "if I just go up to the AWS example here I have a credit application happening",
    "start": "1958399",
    "end": "1963640"
  },
  {
    "text": "coming from a along the service I have an old Credit Reporting Agency database",
    "start": "1963640",
    "end": "1970700"
  },
  {
    "text": "I don't want to have 15 connections coming through from Equifax and Experian",
    "start": "1970700",
    "end": "1976340"
  },
  {
    "text": "I want one topic that everybody else can reference when they process this it streamlines by way of interacting and it",
    "start": "1976340",
    "end": "1983299"
  },
  {
    "text": "means I can respond to that data change in real time without necessarily having to go through a broker",
    "start": "1983299",
    "end": "1989600"
  },
  {
    "text": "but if there is an issue in my credit applications how can I go back and",
    "start": "1989600",
    "end": "1994820"
  },
  {
    "text": "explore that data and that's where taking this architecture here where we have our",
    "start": "1994820",
    "end": "2001480"
  },
  {
    "text": "Lambda and our SQL database and we're then using uh K SQL to process that",
    "start": "2001480",
    "end": "2007419"
  },
  {
    "text": "information you can see how where I have that Source data",
    "start": "2007419",
    "end": "2012760"
  },
  {
    "text": "I filtered out the data that's relevant we talked about that pii and sensitive data that I had before",
    "start": "2012760",
    "end": "2018820"
  },
  {
    "text": "so I can make sure that actually I end up only exposing data that's relevant to certain teams so down here I should have",
    "start": "2018820",
    "end": "2026620"
  },
  {
    "text": "my approved loans in my credit business",
    "start": "2026620",
    "end": "2031720"
  },
  {
    "text": "because I've been able to filter that data create a data product that's actually relevant to my teams",
    "start": "2031720",
    "end": "2036940"
  },
  {
    "text": "and if there is a issue that happens when someone's trying to use this data I",
    "start": "2036940",
    "end": "2043240"
  },
  {
    "text": "understand tracing back maybe where there was an incorrect k-sql statement where I've added some persistence in the",
    "start": "2043240",
    "end": "2051040"
  },
  {
    "text": "Kafka table you can see there to deal with the processing statefully along the way",
    "start": "2051040",
    "end": "2058138"
  },
  {
    "text": "and what this also means is as you may be able to pick out I have some connectors set up so when I actually",
    "start": "2059740",
    "end": "2065500"
  },
  {
    "text": "want to consume this data it's in a way that's available to everyone my legacy database that may have been hard to",
    "start": "2065500",
    "end": "2071740"
  },
  {
    "text": "access before Canal really quickly be plugged in because I'm using a redshift connector",
    "start": "2071740",
    "end": "2077760"
  },
  {
    "text": "and I've given my colleagues over in bi a access to",
    "start": "2077760",
    "end": "2084940"
  },
  {
    "text": "that data through oh I've been logged out of AWS never mind access to that data",
    "start": "2084940",
    "end": "2091898"
  },
  {
    "text": "via redshift that they're then pushing through quick site so now they can actually quickly see",
    "start": "2091899",
    "end": "2097540"
  },
  {
    "text": "with a real-time update if that data is coming through what is actually happening with our",
    "start": "2097540",
    "end": "2102880"
  },
  {
    "text": "loans so it looks like of our successful loans the data that was actually relevant to them in this architecture",
    "start": "2102880",
    "end": "2109359"
  },
  {
    "text": "we've been able to expose that to show it looks like at the moment tough housing market maybe there's not many",
    "start": "2109359",
    "end": "2115599"
  },
  {
    "text": "mortgages but we are seeing a lot of personal loans and credit card usage this has been exposed from the same data",
    "start": "2115599",
    "end": "2123339"
  },
  {
    "text": "source that we had sitting on the left but filtered out and cleaned to be a relevant product to their domain while",
    "start": "2123339",
    "end": "2130300"
  },
  {
    "text": "still being discoverable and accessible through that Kafka view we had before",
    "start": "2130300",
    "end": "2135940"
  },
  {
    "text": "and as we covered there that benefit of the historical data does mean recoverability is in there as well",
    "start": "2135940",
    "end": "2142440"
  },
  {
    "text": "should I be a consumer should my bi team have an issue they're no longer limited",
    "start": "2142440",
    "end": "2148180"
  },
  {
    "text": "having to wait to access that next monthly push or weekly push for my",
    "start": "2148180",
    "end": "2153880"
  },
  {
    "text": "credit bureau we pulled all that data out of the credit bureau's database it's in a",
    "start": "2153880",
    "end": "2159040"
  },
  {
    "text": "stream and they can now reconsume and reprocess if there are mistakes along the way",
    "start": "2159040",
    "end": "2165220"
  },
  {
    "text": "that's really great these days because this is getting pretty cheap but as we design a persistence layer for",
    "start": "2165220",
    "end": "2172359"
  },
  {
    "text": "our events we do have to consider where is that data stored how long is it needed are there tools like infinite",
    "start": "2172359",
    "end": "2179380"
  },
  {
    "text": "storage and tiered storage with the confluent offerings that allow me the ability to store this",
    "start": "2179380",
    "end": "2184960"
  },
  {
    "text": "much longer in scenarios where that persistence is important",
    "start": "2184960",
    "end": "2190000"
  },
  {
    "text": "and like we said K SQL can make it much easier to access that data",
    "start": "2190000",
    "end": "2196660"
  },
  {
    "start": "2196000",
    "end": "2315000"
  },
  {
    "text": "and again those connectors we shouldn't be rebuilding",
    "start": "2196660",
    "end": "2202240"
  },
  {
    "text": "um you know roam in a day here we should be trying to find the repeatable pieces that already exist so",
    "start": "2202240",
    "end": "2208599"
  },
  {
    "text": "across all of aws's streaming services as well take advantage of those pre-built",
    "start": "2208599",
    "end": "2214720"
  },
  {
    "text": "connectors take advantage of pieces in the open source Community to have the repeatability and accelerate our",
    "start": "2214720",
    "end": "2221260"
  },
  {
    "text": "adoption of that data to bring from these sources that may otherwise have been alienated previously",
    "start": "2221260",
    "end": "2227560"
  },
  {
    "text": "just by the bottleneck that was created in their system",
    "start": "2227560",
    "end": "2232079"
  },
  {
    "text": "and perhaps the irony is that actually having this real-time data will",
    "start": "2233740",
    "end": "2239020"
  },
  {
    "text": "ultimately allow you to empower those batch systems as well it makes it",
    "start": "2239020",
    "end": "2244900"
  },
  {
    "text": "significantly easier to expose the data if I have multiple batch systems that",
    "start": "2244900",
    "end": "2249940"
  },
  {
    "text": "need to process it and I can basically just invert the reality that a database is a change log",
    "start": "2249940",
    "end": "2257020"
  },
  {
    "text": "telling me to do a certain crud statement that is then an event that I can respond",
    "start": "2257020",
    "end": "2263200"
  },
  {
    "text": "to and add to somewhere else so a creating my database can also be a create sitting somewhere else in my data",
    "start": "2263200",
    "end": "2269619"
  },
  {
    "text": "warehouse as I load it up along the way but still something that can be used potentially by my microservices to kick",
    "start": "2269619",
    "end": "2276339"
  },
  {
    "text": "off a process as well so to close out there",
    "start": "2276339",
    "end": "2281740"
  },
  {
    "text": "hopefully you've picked up those titles along the way but if you haven't these are where we've",
    "start": "2281740",
    "end": "2288040"
  },
  {
    "text": "really recognized that the key principles for building event driven systems those people who've been able to",
    "start": "2288040",
    "end": "2294579"
  },
  {
    "text": "move from the the early stage designs the simple move away from what was to a",
    "start": "2294579",
    "end": "2301660"
  },
  {
    "text": "simple event driven project to being able to actually expand an event-driven architecture across an",
    "start": "2301660",
    "end": "2308260"
  },
  {
    "text": "organization um so I think everyone's finished taking photos so",
    "start": "2308260",
    "end": "2313839"
  },
  {
    "text": "with that I'd like to say thank you and we'll be opening the floor to questions",
    "start": "2313839",
    "end": "2320400"
  },
  {
    "start": "2315000",
    "end": "2338000"
  },
  {
    "text": "great",
    "start": "2321520",
    "end": "2323880"
  }
]