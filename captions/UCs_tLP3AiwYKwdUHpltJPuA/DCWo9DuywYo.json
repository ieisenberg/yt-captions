[
  {
    "text": "thank you",
    "start": "0",
    "end": "2120"
  },
  {
    "text": "[Music]",
    "start": "4740",
    "end": "7828"
  },
  {
    "text": "a few years ago I was involved in",
    "start": "13980",
    "end": "16198"
  },
  {
    "text": "writing something called the reactive",
    "start": "16199",
    "end": "17699"
  },
  {
    "text": "Manifesto",
    "start": "17699",
    "end": "18960"
  },
  {
    "text": "this was in part based on the experience",
    "start": "18960",
    "end": "21539"
  },
  {
    "text": "of my team building a financial exchange",
    "start": "21539",
    "end": "24060"
  },
  {
    "text": "and coming up with what was to us a",
    "start": "24060",
    "end": "26939"
  },
  {
    "text": "fairly Innovative approach to its",
    "start": "26939",
    "end": "28740"
  },
  {
    "text": "architecture",
    "start": "28740",
    "end": "30060"
  },
  {
    "text": "this was the nicest big system that I've",
    "start": "30060",
    "end": "32460"
  },
  {
    "text": "ever worked on or seen I've spoken about",
    "start": "32460",
    "end": "35040"
  },
  {
    "text": "aspects of this before",
    "start": "35040",
    "end": "37020"
  },
  {
    "text": "but the architecture that we ended up",
    "start": "37020",
    "end": "39000"
  },
  {
    "text": "with was really close to a specialized",
    "start": "39000",
    "end": "42000"
  },
  {
    "text": "form of an actor-based system",
    "start": "42000",
    "end": "45300"
  },
  {
    "text": "it's a weird name for an approach and I",
    "start": "45300",
    "end": "47940"
  },
  {
    "text": "think that it's not as widely known as",
    "start": "47940",
    "end": "49920"
  },
  {
    "text": "perhaps it should be but I think that",
    "start": "49920",
    "end": "52379"
  },
  {
    "text": "perhaps the time for actor-based systems",
    "start": "52379",
    "end": "54899"
  },
  {
    "text": "might be coming again",
    "start": "54899",
    "end": "57180"
  },
  {
    "text": "this is an interestingly different way",
    "start": "57180",
    "end": "59399"
  },
  {
    "text": "to think about problems and for many",
    "start": "59399",
    "end": "61500"
  },
  {
    "text": "classes of systems it solves a lot of",
    "start": "61500",
    "end": "63660"
  },
  {
    "text": "otherwise very difficult problems",
    "start": "63660",
    "end": "66119"
  },
  {
    "text": "so what are actors and how do they help",
    "start": "66119",
    "end": "69240"
  },
  {
    "text": "us to build great systems",
    "start": "69240",
    "end": "72798"
  },
  {
    "text": "foreign",
    "start": "73860",
    "end": "76860"
  },
  {
    "text": "hi I'm Dave Farley of continuous",
    "start": "79320",
    "end": "81720"
  },
  {
    "text": "delivery welcome to my channel and if",
    "start": "81720",
    "end": "83939"
  },
  {
    "text": "you haven't been here before please do",
    "start": "83939",
    "end": "85740"
  },
  {
    "text": "hit subscribe and if you enjoy the",
    "start": "85740",
    "end": "87659"
  },
  {
    "text": "content today hit like as well",
    "start": "87659",
    "end": "90360"
  },
  {
    "text": "many of today's real world software as a",
    "start": "90360",
    "end": "93119"
  },
  {
    "text": "service applications are event driven",
    "start": "93119",
    "end": "95540"
  },
  {
    "text": "actor-based applications analyzing huge",
    "start": "95540",
    "end": "98579"
  },
  {
    "text": "amounts of data from real-time event",
    "start": "98579",
    "end": "100619"
  },
  {
    "text": "sources swim is an open source Java",
    "start": "100619",
    "end": "104340"
  },
  {
    "text": "runtime which lets you easily create an",
    "start": "104340",
    "end": "106439"
  },
  {
    "text": "actor for each Event Source each actor",
    "start": "106439",
    "end": "109520"
  },
  {
    "text": "continuously analyzes events and streams",
    "start": "109520",
    "end": "112619"
  },
  {
    "text": "its insights to other actors that link",
    "start": "112619",
    "end": "114360"
  },
  {
    "text": "to it",
    "start": "114360",
    "end": "115619"
  },
  {
    "text": "swim applications run at CPU and memory",
    "start": "115619",
    "end": "118740"
  },
  {
    "text": "speed so millions of times faster than",
    "start": "118740",
    "end": "121259"
  },
  {
    "text": "disk and are resilient and scalable",
    "start": "121259",
    "end": "124680"
  },
  {
    "text": "go to swimos.org to learn more and",
    "start": "124680",
    "end": "127920"
  },
  {
    "text": "there's a link in the description below",
    "start": "127920",
    "end": "129599"
  },
  {
    "text": "if you'd like to explore",
    "start": "129599",
    "end": "132300"
  },
  {
    "text": "the idea of organizing systems around",
    "start": "132300",
    "end": "135420"
  },
  {
    "text": "collections of actors is a surprisingly",
    "start": "135420",
    "end": "137879"
  },
  {
    "text": "old one it was first mentioned in 1973",
    "start": "137879",
    "end": "141300"
  },
  {
    "text": "and like lots of ideas in computer",
    "start": "141300",
    "end": "143760"
  },
  {
    "text": "science it was first thought of in the",
    "start": "143760",
    "end": "146099"
  },
  {
    "text": "context of AI research at the time",
    "start": "146099",
    "end": "148680"
  },
  {
    "text": "the AI link though I think is a bit",
    "start": "148680",
    "end": "151020"
  },
  {
    "text": "confusing because this is really quite a",
    "start": "151020",
    "end": "153000"
  },
  {
    "text": "low level kind of thing in some ways",
    "start": "153000",
    "end": "154980"
  },
  {
    "text": "actors are primarily an approach to",
    "start": "154980",
    "end": "157379"
  },
  {
    "text": "dealing with concurrency",
    "start": "157379",
    "end": "158940"
  },
  {
    "text": "they are simple but a powerfully",
    "start": "158940",
    "end": "161280"
  },
  {
    "text": "effective way of organizing our work",
    "start": "161280",
    "end": "163739"
  },
  {
    "text": "that allows us to almost effortlessly",
    "start": "163739",
    "end": "166800"
  },
  {
    "text": "parallelize it",
    "start": "166800",
    "end": "168480"
  },
  {
    "text": "but they do need us to think a little",
    "start": "168480",
    "end": "170519"
  },
  {
    "text": "differently about how we organize our",
    "start": "170519",
    "end": "172560"
  },
  {
    "text": "code to achieve that",
    "start": "172560",
    "end": "174599"
  },
  {
    "text": "as I've said many times here concurrency",
    "start": "174599",
    "end": "176940"
  },
  {
    "text": "is one of the really difficult problems",
    "start": "176940",
    "end": "178800"
  },
  {
    "text": "in software it's the root of nearly",
    "start": "178800",
    "end": "180959"
  },
  {
    "text": "everything that makes our job genuinely",
    "start": "180959",
    "end": "183120"
  },
  {
    "text": "difficult when we have information in",
    "start": "183120",
    "end": "185819"
  },
  {
    "text": "multiple places which copies correct",
    "start": "185819",
    "end": "187800"
  },
  {
    "text": "which one is the most up-to-date if I",
    "start": "187800",
    "end": "190319"
  },
  {
    "text": "change my copy how do we change yours",
    "start": "190319",
    "end": "192480"
  },
  {
    "text": "too how do we join up the work that your",
    "start": "192480",
    "end": "195000"
  },
  {
    "text": "code is doing with mine",
    "start": "195000",
    "end": "197099"
  },
  {
    "text": "these are the problems at the heart of",
    "start": "197099",
    "end": "199680"
  },
  {
    "text": "computing actually it goes deeper than",
    "start": "199680",
    "end": "202560"
  },
  {
    "text": "that these are the problems at the heart",
    "start": "202560",
    "end": "204659"
  },
  {
    "text": "of dealing with information in any form",
    "start": "204659",
    "end": "207239"
  },
  {
    "text": "all of these problems are just as",
    "start": "207239",
    "end": "209459"
  },
  {
    "text": "relevant to information on Bits of Paper",
    "start": "209459",
    "end": "211379"
  },
  {
    "text": "as to the contents of our database",
    "start": "211379",
    "end": "213720"
  },
  {
    "text": "databases or services",
    "start": "213720",
    "end": "216239"
  },
  {
    "text": "actors don't solve all of these problems",
    "start": "216239",
    "end": "218580"
  },
  {
    "text": "automatically but they allow us to write",
    "start": "218580",
    "end": "221159"
  },
  {
    "text": "code that can ignore them to a large",
    "start": "221159",
    "end": "223260"
  },
  {
    "text": "extent or at least reduce their impact",
    "start": "223260",
    "end": "225720"
  },
  {
    "text": "and that's quite a big win",
    "start": "225720",
    "end": "228239"
  },
  {
    "text": "so what is an actor",
    "start": "228239",
    "end": "231000"
  },
  {
    "text": "technically an actor is a universal",
    "start": "231000",
    "end": "234239"
  },
  {
    "text": "primitive for concurrent computation in",
    "start": "234239",
    "end": "237599"
  },
  {
    "text": "practice what this means is that an",
    "start": "237599",
    "end": "240060"
  },
  {
    "text": "actor is a single threaded piece of code",
    "start": "240060",
    "end": "242940"
  },
  {
    "text": "information comes into an actor is",
    "start": "242940",
    "end": "245700"
  },
  {
    "text": "processed on a single thread and then",
    "start": "245700",
    "end": "248099"
  },
  {
    "text": "information is sent out from the actor",
    "start": "248099",
    "end": "250140"
  },
  {
    "text": "again",
    "start": "250140",
    "end": "251040"
  },
  {
    "text": "if you want an actor to do two things",
    "start": "251040",
    "end": "252959"
  },
  {
    "text": "you wait for it to complete the first",
    "start": "252959",
    "end": "254939"
  },
  {
    "text": "before it's allowed to start work on the",
    "start": "254939",
    "end": "256859"
  },
  {
    "text": "second",
    "start": "256859",
    "end": "257780"
  },
  {
    "text": "these inputs and outputs are described",
    "start": "257780",
    "end": "260280"
  },
  {
    "text": "as messages and these messages are the",
    "start": "260280",
    "end": "263040"
  },
  {
    "text": "only communication that's allowed no",
    "start": "263040",
    "end": "265440"
  },
  {
    "text": "shared data no backdoor access all",
    "start": "265440",
    "end": "268380"
  },
  {
    "text": "inflammation Flows In to and out of an",
    "start": "268380",
    "end": "271620"
  },
  {
    "text": "actor as a message",
    "start": "271620",
    "end": "273600"
  },
  {
    "text": "if a message arrives while the actor is",
    "start": "273600",
    "end": "276000"
  },
  {
    "text": "busy",
    "start": "276000",
    "end": "277020"
  },
  {
    "text": "the message is queued up until the ACT",
    "start": "277020",
    "end": "279120"
  },
  {
    "text": "is ready to work on it",
    "start": "279120",
    "end": "280979"
  },
  {
    "text": "for some implementations these cures are",
    "start": "280979",
    "end": "283259"
  },
  {
    "text": "sometimes called an actor's mailbox this",
    "start": "283259",
    "end": "285900"
  },
  {
    "text": "is a all lovely and simple an active",
    "start": "285900",
    "end": "288419"
  },
  {
    "text": "waits for a message does something",
    "start": "288419",
    "end": "290220"
  },
  {
    "text": "useful and then transmits another",
    "start": "290220",
    "end": "291960"
  },
  {
    "text": "message in response",
    "start": "291960",
    "end": "294300"
  },
  {
    "text": "notice I haven't said anything about how",
    "start": "294300",
    "end": "297720"
  },
  {
    "text": "the actor Works internally",
    "start": "297720",
    "end": "299759"
  },
  {
    "text": "except that from the outside the input",
    "start": "299759",
    "end": "302340"
  },
  {
    "text": "processing and output happen in sequence",
    "start": "302340",
    "end": "305460"
  },
  {
    "text": "in response to a message an actor can do",
    "start": "305460",
    "end": "308220"
  },
  {
    "text": "three things create more actors send",
    "start": "308220",
    "end": "311340"
  },
  {
    "text": "messages to other actors or designate",
    "start": "311340",
    "end": "313979"
  },
  {
    "text": "what to do with the next message when it",
    "start": "313979",
    "end": "316080"
  },
  {
    "text": "arrives",
    "start": "316080",
    "end": "316979"
  },
  {
    "text": "mostly this last one means it changes",
    "start": "316979",
    "end": "319560"
  },
  {
    "text": "the state of the actor so yes actors are",
    "start": "319560",
    "end": "322979"
  },
  {
    "text": "can be and are usually stateful",
    "start": "322979",
    "end": "326039"
  },
  {
    "text": "the really nice thing about this as a",
    "start": "326039",
    "end": "329100"
  },
  {
    "text": "programming model is that a single actor",
    "start": "329100",
    "end": "331860"
  },
  {
    "text": "processing a single message is a",
    "start": "331860",
    "end": "333840"
  },
  {
    "text": "deterministic thing",
    "start": "333840",
    "end": "335699"
  },
  {
    "text": "given a starting State and a message",
    "start": "335699",
    "end": "338340"
  },
  {
    "text": "we'll always end up with the same",
    "start": "338340",
    "end": "340500"
  },
  {
    "text": "results it's single threaded after all",
    "start": "340500",
    "end": "343080"
  },
  {
    "text": "so these things are incredibly testable",
    "start": "343080",
    "end": "346680"
  },
  {
    "text": "so what's the difference between a",
    "start": "346680",
    "end": "348900"
  },
  {
    "text": "method or function call and a message",
    "start": "348900",
    "end": "351020"
  },
  {
    "text": "well there's no return value for a",
    "start": "351020",
    "end": "353880"
  },
  {
    "text": "message the response from a of an actor",
    "start": "353880",
    "end": "357060"
  },
  {
    "text": "to a message is one or more of the",
    "start": "357060",
    "end": "359820"
  },
  {
    "text": "things that I've already mentioned a",
    "start": "359820",
    "end": "361800"
  },
  {
    "text": "Changing State another message or more",
    "start": "361800",
    "end": "363900"
  },
  {
    "text": "actors",
    "start": "363900",
    "end": "365160"
  },
  {
    "text": "technically the important Point here is",
    "start": "365160",
    "end": "368639"
  },
  {
    "text": "that in sending a message the sender",
    "start": "368639",
    "end": "370800"
  },
  {
    "text": "does not transfer the thread of",
    "start": "370800",
    "end": "372660"
  },
  {
    "text": "execution onto the receiver",
    "start": "372660",
    "end": "375360"
  },
  {
    "text": "this seemingly simple technical step has",
    "start": "375360",
    "end": "379380"
  },
  {
    "text": "a lot of really nice consequences",
    "start": "379380",
    "end": "382259"
  },
  {
    "text": "it means that an actor can send a",
    "start": "382259",
    "end": "384900"
  },
  {
    "text": "message and then continue doing useful",
    "start": "384900",
    "end": "386880"
  },
  {
    "text": "work without waiting for any kind of",
    "start": "386880",
    "end": "388620"
  },
  {
    "text": "response",
    "start": "388620",
    "end": "389759"
  },
  {
    "text": "it also means that a different actor can",
    "start": "389759",
    "end": "392280"
  },
  {
    "text": "handle the response to the one that",
    "start": "392280",
    "end": "394020"
  },
  {
    "text": "initiated the action if needed actors",
    "start": "394020",
    "end": "397139"
  },
  {
    "text": "are decoupled from one another in both",
    "start": "397139",
    "end": "399180"
  },
  {
    "text": "time and location",
    "start": "399180",
    "end": "401699"
  },
  {
    "text": "the location part is really interesting",
    "start": "401699",
    "end": "404220"
  },
  {
    "text": "too the computer science of actors talks",
    "start": "404220",
    "end": "407220"
  },
  {
    "text": "about their addressability but",
    "start": "407220",
    "end": "409139"
  },
  {
    "text": "addressability doesn't necessarily mean",
    "start": "409139",
    "end": "411360"
  },
  {
    "text": "fixed addressing",
    "start": "411360",
    "end": "413039"
  },
  {
    "text": "this is rather like the difference",
    "start": "413039",
    "end": "414300"
  },
  {
    "text": "between an old landline style phone and",
    "start": "414300",
    "end": "417539"
  },
  {
    "text": "what we call a phone now in the old days",
    "start": "417539",
    "end": "420479"
  },
  {
    "text": "if you called somebody you knew where",
    "start": "420479",
    "end": "423120"
  },
  {
    "text": "they were because where they were in",
    "start": "423120",
    "end": "425400"
  },
  {
    "text": "space because they were answering the",
    "start": "425400",
    "end": "427259"
  },
  {
    "text": "phone",
    "start": "427259",
    "end": "428039"
  },
  {
    "text": "the route to their phone was fixed by",
    "start": "428039",
    "end": "430620"
  },
  {
    "text": "the landline",
    "start": "430620",
    "end": "431759"
  },
  {
    "text": "now when you call someone they could be",
    "start": "431759",
    "end": "434039"
  },
  {
    "text": "anywhere",
    "start": "434039",
    "end": "435060"
  },
  {
    "text": "actors need a way to communicate and",
    "start": "435060",
    "end": "437880"
  },
  {
    "text": "something needs to do the same job as",
    "start": "437880",
    "end": "440220"
  },
  {
    "text": "the mobile phone network to locate them",
    "start": "440220",
    "end": "442440"
  },
  {
    "text": "but that could be fixed like the",
    "start": "442440",
    "end": "445319"
  },
  {
    "text": "landline or like the mobile phone system",
    "start": "445319",
    "end": "447660"
  },
  {
    "text": "entirely dynamic",
    "start": "447660",
    "end": "449699"
  },
  {
    "text": "it can also be point-to-point or",
    "start": "449699",
    "end": "452039"
  },
  {
    "text": "broadcast",
    "start": "452039",
    "end": "453300"
  },
  {
    "text": "if the addressing is based on topics",
    "start": "453300",
    "end": "455940"
  },
  {
    "text": "that actors are interested in for",
    "start": "455940",
    "end": "457740"
  },
  {
    "text": "example like publish And subscribe",
    "start": "457740",
    "end": "459840"
  },
  {
    "text": "messaging",
    "start": "459840",
    "end": "461520"
  },
  {
    "text": "then the actors can join and leave",
    "start": "461520",
    "end": "463680"
  },
  {
    "text": "conversations when they need to",
    "start": "463680",
    "end": "466680"
  },
  {
    "text": "so now we have this potentially",
    "start": "466680",
    "end": "468479"
  },
  {
    "text": "massively parallel decoupled",
    "start": "468479",
    "end": "471319"
  },
  {
    "text": "decentralized time and location",
    "start": "471319",
    "end": "473360"
  },
  {
    "text": "independent model for computing",
    "start": "473360",
    "end": "476340"
  },
  {
    "text": "all based on the simplest of simple",
    "start": "476340",
    "end": "479220"
  },
  {
    "text": "programming models take some input",
    "start": "479220",
    "end": "481440"
  },
  {
    "text": "process it send some output",
    "start": "481440",
    "end": "484199"
  },
  {
    "text": "listen for a message process it and",
    "start": "484199",
    "end": "486360"
  },
  {
    "text": "respond in any of those three ways",
    "start": "486360",
    "end": "489539"
  },
  {
    "text": "oh and there's no shared data anywhere",
    "start": "489539",
    "end": "493080"
  },
  {
    "text": "no concurrency Primitives like Lux or",
    "start": "493080",
    "end": "495419"
  },
  {
    "text": "synchronization blocks at least",
    "start": "495419",
    "end": "497160"
  },
  {
    "text": "non-visible to the actor there may be",
    "start": "497160",
    "end": "499620"
  },
  {
    "text": "some cleverness in the infrastructure",
    "start": "499620",
    "end": "501180"
  },
  {
    "text": "but from the actor's perspective no shed",
    "start": "501180",
    "end": "503819"
  },
  {
    "text": "state of any kind",
    "start": "503819",
    "end": "505319"
  },
  {
    "text": "as I said originally this was designed",
    "start": "505319",
    "end": "507960"
  },
  {
    "text": "as a model for low-level concurrency",
    "start": "507960",
    "end": "510900"
  },
  {
    "text": "later developments like erlang",
    "start": "510900",
    "end": "513180"
  },
  {
    "text": "introduced more ideas ideas like the",
    "start": "513180",
    "end": "516060"
  },
  {
    "text": "supervision systems once that actors are",
    "start": "516060",
    "end": "518820"
  },
  {
    "text": "decoupled in time errors don't",
    "start": "518820",
    "end": "521339"
  },
  {
    "text": "automatically propagate",
    "start": "521339",
    "end": "523200"
  },
  {
    "text": "this is a good thing it means that we",
    "start": "523200",
    "end": "525540"
  },
  {
    "text": "can deal with them differently and",
    "start": "525540",
    "end": "527820"
  },
  {
    "text": "depending on the nature of the error if",
    "start": "527820",
    "end": "530100"
  },
  {
    "text": "there's a problem processing a message",
    "start": "530100",
    "end": "531720"
  },
  {
    "text": "but the actor is still fine then it",
    "start": "531720",
    "end": "534120"
  },
  {
    "text": "could send a new message indicating the",
    "start": "534120",
    "end": "535980"
  },
  {
    "text": "error or perhaps create a new actor to",
    "start": "535980",
    "end": "538560"
  },
  {
    "text": "deal with it if the actor is broken",
    "start": "538560",
    "end": "540720"
  },
  {
    "text": "because of some unexpected problem of",
    "start": "540720",
    "end": "543300"
  },
  {
    "text": "some kind this is a different kind of",
    "start": "543300",
    "end": "545339"
  },
  {
    "text": "failure and in this case we could",
    "start": "545339",
    "end": "547140"
  },
  {
    "text": "designate a supervisor whose job it is",
    "start": "547140",
    "end": "550019"
  },
  {
    "text": "to monitor what's going on and decide",
    "start": "550019",
    "end": "552959"
  },
  {
    "text": "what to do when things go wrong",
    "start": "552959",
    "end": "555180"
  },
  {
    "text": "it could stop a stalled process or start",
    "start": "555180",
    "end": "558420"
  },
  {
    "text": "a new one for example",
    "start": "558420",
    "end": "560820"
  },
  {
    "text": "there are some small differences but",
    "start": "560820",
    "end": "563640"
  },
  {
    "text": "this is very similar to the reactive",
    "start": "563640",
    "end": "565560"
  },
  {
    "text": "systems that are described in the",
    "start": "565560",
    "end": "567060"
  },
  {
    "text": "reactive Manifesto",
    "start": "567060",
    "end": "569040"
  },
  {
    "text": "all this stuff adds up to a the most",
    "start": "569040",
    "end": "572040"
  },
  {
    "text": "robust programming model for programming",
    "start": "572040",
    "end": "574200"
  },
  {
    "text": "complex distributed systems that we have",
    "start": "574200",
    "end": "576899"
  },
  {
    "text": "this is how things like telecoms",
    "start": "576899",
    "end": "579420"
  },
  {
    "text": "exchanges work the Ericsson class 5",
    "start": "579420",
    "end": "582120"
  },
  {
    "text": "voice switch works exactly in this way",
    "start": "582120",
    "end": "584580"
  },
  {
    "text": "built with erlang an actor-based",
    "start": "584580",
    "end": "586860"
  },
  {
    "text": "programming language",
    "start": "586860",
    "end": "588360"
  },
  {
    "text": "this is also how my team built one of",
    "start": "588360",
    "end": "590880"
  },
  {
    "text": "the world's highest performance",
    "start": "590880",
    "end": "591899"
  },
  {
    "text": "Financial exchanges a few years ago the",
    "start": "591899",
    "end": "594300"
  },
  {
    "text": "actor model is widely used in big",
    "start": "594300",
    "end": "596459"
  },
  {
    "text": "complex systems that value reliability",
    "start": "596459",
    "end": "598920"
  },
  {
    "text": "high performance or the elegantly simple",
    "start": "598920",
    "end": "601860"
  },
  {
    "text": "programming model highly",
    "start": "601860",
    "end": "604200"
  },
  {
    "text": "I think that this approach has some",
    "start": "604200",
    "end": "606899"
  },
  {
    "text": "really interesting properties of value",
    "start": "606899",
    "end": "609360"
  },
  {
    "text": "far beyond esoteric use cases actors are",
    "start": "609360",
    "end": "613320"
  },
  {
    "text": "already used in a lot of mainstream",
    "start": "613320",
    "end": "615480"
  },
  {
    "text": "applications the Xbox game Titan 4 for",
    "start": "615480",
    "end": "618660"
  },
  {
    "text": "example uses actors based on the Orleans",
    "start": "618660",
    "end": "620700"
  },
  {
    "text": "framework and Twitter is built on akka",
    "start": "620700",
    "end": "623720"
  },
  {
    "text": "another actor-based framework but still",
    "start": "623720",
    "end": "627120"
  },
  {
    "text": "I think it's a less widely thought of",
    "start": "627120",
    "end": "629399"
  },
  {
    "text": "than perhaps it should be",
    "start": "629399",
    "end": "631560"
  },
  {
    "text": "let's just recap that list of properties",
    "start": "631560",
    "end": "634620"
  },
  {
    "text": "that I mentioned earlier",
    "start": "634620",
    "end": "636480"
  },
  {
    "text": "we have a massively parallel decoupled",
    "start": "636480",
    "end": "639920"
  },
  {
    "text": "decentralized time and location",
    "start": "639920",
    "end": "641959"
  },
  {
    "text": "independent model for computing here",
    "start": "641959",
    "end": "645000"
  },
  {
    "text": "all based on the simplest of programming",
    "start": "645000",
    "end": "648240"
  },
  {
    "text": "models",
    "start": "648240",
    "end": "649620"
  },
  {
    "text": "does that sound familiar at all",
    "start": "649620",
    "end": "652019"
  },
  {
    "text": "doesn't that rather sound like the sort",
    "start": "652019",
    "end": "654420"
  },
  {
    "text": "of thing that we might want to use the",
    "start": "654420",
    "end": "656160"
  },
  {
    "text": "cloud for but with the benefit of this",
    "start": "656160",
    "end": "658440"
  },
  {
    "text": "simple programming model",
    "start": "658440",
    "end": "660500"
  },
  {
    "text": "we are moving or have moved in the",
    "start": "660500",
    "end": "663720"
  },
  {
    "text": "direction of a much more decentralized",
    "start": "663720",
    "end": "666120"
  },
  {
    "text": "world of computing",
    "start": "666120",
    "end": "668220"
  },
  {
    "text": "we create small pieces of code that",
    "start": "668220",
    "end": "670740"
  },
  {
    "text": "respond to events and process them",
    "start": "670740",
    "end": "673079"
  },
  {
    "text": "serverless functions tied to an event",
    "start": "673079",
    "end": "675060"
  },
  {
    "text": "stream for example",
    "start": "675060",
    "end": "677160"
  },
  {
    "text": "web services responding to requests",
    "start": "677160",
    "end": "680640"
  },
  {
    "text": "in implementation most of these are",
    "start": "680640",
    "end": "683579"
  },
  {
    "text": "still tied to a request response kind of",
    "start": "683579",
    "end": "686399"
  },
  {
    "text": "model for computing and certainly models",
    "start": "686399",
    "end": "689279"
  },
  {
    "text": "of computing like the function as a",
    "start": "689279",
    "end": "691200"
  },
  {
    "text": "service of serverless are often seen as",
    "start": "691200",
    "end": "693899"
  },
  {
    "text": "the best implemented as stateless",
    "start": "693899",
    "end": "696000"
  },
  {
    "text": "systems",
    "start": "696000",
    "end": "697500"
  },
  {
    "text": "but what if they weren't",
    "start": "697500",
    "end": "699720"
  },
  {
    "text": "what if these things were all actors",
    "start": "699720",
    "end": "702079"
  },
  {
    "text": "well the first gain would be that that",
    "start": "702079",
    "end": "706260"
  },
  {
    "text": "we wouldn't really care where the",
    "start": "706260",
    "end": "708600"
  },
  {
    "text": "processing took place",
    "start": "708600",
    "end": "710519"
  },
  {
    "text": "we could leave that as a problem for the",
    "start": "710519",
    "end": "713279"
  },
  {
    "text": "messaging infrastructure if my actor",
    "start": "713279",
    "end": "716220"
  },
  {
    "text": "needed to talk to yours I could write",
    "start": "716220",
    "end": "718920"
  },
  {
    "text": "the code so that I sent send a message",
    "start": "718920",
    "end": "721200"
  },
  {
    "text": "that you receive",
    "start": "721200",
    "end": "723120"
  },
  {
    "text": "if your actor was running on the same",
    "start": "723120",
    "end": "725100"
  },
  {
    "text": "machine as mine",
    "start": "725100",
    "end": "726959"
  },
  {
    "text": "the message could be a local call that",
    "start": "726959",
    "end": "729240"
  },
  {
    "text": "the infrastructure would detect the fact",
    "start": "729240",
    "end": "731160"
  },
  {
    "text": "that it was local and communicate using",
    "start": "731160",
    "end": "733980"
  },
  {
    "text": "local Technologies to make that fast and",
    "start": "733980",
    "end": "737100"
  },
  {
    "text": "efficient and simple",
    "start": "737100",
    "end": "739380"
  },
  {
    "text": "on the other hand if your actor was",
    "start": "739380",
    "end": "741540"
  },
  {
    "text": "running somewhere else the message",
    "start": "741540",
    "end": "743839"
  },
  {
    "text": "Remains the Same from my point of view",
    "start": "743839",
    "end": "746279"
  },
  {
    "text": "when I send it and from your point of",
    "start": "746279",
    "end": "748019"
  },
  {
    "text": "view when you receive it but the",
    "start": "748019",
    "end": "749820"
  },
  {
    "text": "infrastructure and then communicates",
    "start": "749820",
    "end": "751800"
  },
  {
    "text": "across the wide area network and gets",
    "start": "751800",
    "end": "753779"
  },
  {
    "text": "the information to you sometime later",
    "start": "753779",
    "end": "756180"
  },
  {
    "text": "and everything still works as before",
    "start": "756180",
    "end": "759120"
  },
  {
    "text": "so the actors remain are both unchanged",
    "start": "759120",
    "end": "763320"
  },
  {
    "text": "this is a problem for the communications",
    "start": "763320",
    "end": "765120"
  },
  {
    "text": "infrastructure rather like your mobile",
    "start": "765120",
    "end": "766980"
  },
  {
    "text": "phone answering my call whether you're",
    "start": "766980",
    "end": "769560"
  },
  {
    "text": "sitting next to me or on the opposite",
    "start": "769560",
    "end": "771540"
  },
  {
    "text": "side of the planet",
    "start": "771540",
    "end": "773160"
  },
  {
    "text": "I've spoken here before in the context",
    "start": "773160",
    "end": "775740"
  },
  {
    "text": "of reactive systems about how systems",
    "start": "775740",
    "end": "778079"
  },
  {
    "text": "like this achieve a fantastic separation",
    "start": "778079",
    "end": "781019"
  },
  {
    "text": "between the essential complexity of our",
    "start": "781019",
    "end": "783480"
  },
  {
    "text": "systems and their accidental complexity",
    "start": "783480",
    "end": "786779"
  },
  {
    "text": "this seems to me like a great tool a",
    "start": "786779",
    "end": "789540"
  },
  {
    "text": "great opportunity for the creators of",
    "start": "789540",
    "end": "791820"
  },
  {
    "text": "the public Cloud systems that we",
    "start": "791820",
    "end": "793980"
  },
  {
    "text": "increasingly depend upon",
    "start": "793980",
    "end": "796079"
  },
  {
    "text": "they could raise the level of",
    "start": "796079",
    "end": "797880"
  },
  {
    "text": "abstraction to further generalize the",
    "start": "797880",
    "end": "800880"
  },
  {
    "text": "technical features of our systems while",
    "start": "800880",
    "end": "803579"
  },
  {
    "text": "allowing active Builders us to more",
    "start": "803579",
    "end": "806820"
  },
  {
    "text": "clearly focus on the essential job at",
    "start": "806820",
    "end": "809279"
  },
  {
    "text": "hand writing code that solves the",
    "start": "809279",
    "end": "811560"
  },
  {
    "text": "problems for our users or writing code",
    "start": "811560",
    "end": "813779"
  },
  {
    "text": "that I use is enjoy while not needing to",
    "start": "813779",
    "end": "816360"
  },
  {
    "text": "worry too much about threads and",
    "start": "816360",
    "end": "817920"
  },
  {
    "text": "processes locks clustering or even",
    "start": "817920",
    "end": "820320"
  },
  {
    "text": "persistence at the point when we write",
    "start": "820320",
    "end": "822420"
  },
  {
    "text": "the and test our actors",
    "start": "822420",
    "end": "825180"
  },
  {
    "text": "you can take this idea a very long way",
    "start": "825180",
    "end": "828540"
  },
  {
    "text": "when we built our exchange our services",
    "start": "828540",
    "end": "831480"
  },
  {
    "text": "knew nothing about our infrastructure",
    "start": "831480",
    "end": "834060"
  },
  {
    "text": "nothing there was no compromise in the",
    "start": "834060",
    "end": "837360"
  },
  {
    "text": "design of the interface to one of our",
    "start": "837360",
    "end": "839820"
  },
  {
    "text": "services no additional functions were",
    "start": "839820",
    "end": "842339"
  },
  {
    "text": "demanded by the infrastructure all of",
    "start": "842339",
    "end": "845339"
  },
  {
    "text": "The Accidental complexity of message",
    "start": "845339",
    "end": "847380"
  },
  {
    "text": "delivery message persistence clustering",
    "start": "847380",
    "end": "850500"
  },
  {
    "text": "failover load balancing",
    "start": "850500",
    "end": "853260"
  },
  {
    "text": "sharing of data and so on were external",
    "start": "853260",
    "end": "856980"
  },
  {
    "text": "to the services themselves",
    "start": "856980",
    "end": "859740"
  },
  {
    "text": "as ever there are costs to this model",
    "start": "859740",
    "end": "862980"
  },
  {
    "text": "perhaps the most complex one is how do",
    "start": "862980",
    "end": "865860"
  },
  {
    "text": "you migrate state",
    "start": "865860",
    "end": "867540"
  },
  {
    "text": "if my actor is stateful and I want to",
    "start": "867540",
    "end": "870420"
  },
  {
    "text": "change its internal representation",
    "start": "870420",
    "end": "872820"
  },
  {
    "text": "how do I do that",
    "start": "872820",
    "end": "874620"
  },
  {
    "text": "if my messages are assured in delivery",
    "start": "874620",
    "end": "877260"
  },
  {
    "text": "that means that they're persisted",
    "start": "877260",
    "end": "879839"
  },
  {
    "text": "somewhere so if I want to change the",
    "start": "879839",
    "end": "882180"
  },
  {
    "text": "structure of a message how do I do that",
    "start": "882180",
    "end": "885899"
  },
  {
    "text": "and the other problem is if I need to",
    "start": "885899",
    "end": "888540"
  },
  {
    "text": "coordinate the actions of multiple",
    "start": "888540",
    "end": "890399"
  },
  {
    "text": "actors in some way to ensure that their",
    "start": "890399",
    "end": "893160"
  },
  {
    "text": "data is consistent then how do we do",
    "start": "893160",
    "end": "895620"
  },
  {
    "text": "that",
    "start": "895620",
    "end": "897180"
  },
  {
    "text": "all of these are solved problems and",
    "start": "897180",
    "end": "900120"
  },
  {
    "text": "usually supported in some way by the",
    "start": "900120",
    "end": "902339"
  },
  {
    "text": "infrastructure provided by your",
    "start": "902339",
    "end": "904760"
  },
  {
    "text": "infrastructure supplier snapshotting and",
    "start": "904760",
    "end": "907920"
  },
  {
    "text": "Replay for the first example message",
    "start": "907920",
    "end": "910260"
  },
  {
    "text": "migration or phased interface changes",
    "start": "910260",
    "end": "912540"
  },
  {
    "text": "for the second perhaps and distributed",
    "start": "912540",
    "end": "914699"
  },
  {
    "text": "consensus protocols like raft for the",
    "start": "914699",
    "end": "916980"
  },
  {
    "text": "Third",
    "start": "916980",
    "end": "918740"
  },
  {
    "text": "my crystal ball is no clearer than yours",
    "start": "918740",
    "end": "922620"
  },
  {
    "text": "so I don't know if the cloud Builders",
    "start": "922620",
    "end": "924720"
  },
  {
    "text": "will take this route",
    "start": "924720",
    "end": "926100"
  },
  {
    "text": "there's been some talk recently of",
    "start": "926100",
    "end": "928740"
  },
  {
    "text": "stateful serverless approaches and",
    "start": "928740",
    "end": "932040"
  },
  {
    "text": "provision of those kinds of services",
    "start": "932040",
    "end": "934740"
  },
  {
    "text": "that's they sound very intriguing but",
    "start": "934740",
    "end": "938160"
  },
  {
    "text": "they are pretty early on in the stage of",
    "start": "938160",
    "end": "940079"
  },
  {
    "text": "development so far certainly with my",
    "start": "940079",
    "end": "943019"
  },
  {
    "text": "bias these may be interpreted as",
    "start": "943019",
    "end": "945660"
  },
  {
    "text": "representing an actor-based approach but",
    "start": "945660",
    "end": "948600"
  },
  {
    "text": "I think that actors are a fascinating",
    "start": "948600",
    "end": "950760"
  },
  {
    "text": "approach to Computing in general and",
    "start": "950760",
    "end": "952980"
  },
  {
    "text": "provide us with a powerful but simple",
    "start": "952980",
    "end": "955019"
  },
  {
    "text": "model allowing us to build genuinely",
    "start": "955019",
    "end": "957420"
  },
  {
    "text": "complex but extremely robust systems",
    "start": "957420",
    "end": "960420"
  },
  {
    "text": "while focusing primarily on the problem",
    "start": "960420",
    "end": "962940"
  },
  {
    "text": "that's in front of us rather than the",
    "start": "962940",
    "end": "965279"
  },
  {
    "text": "technical Plumbing",
    "start": "965279",
    "end": "966959"
  },
  {
    "text": "actors do this better than any other",
    "start": "966959",
    "end": "969300"
  },
  {
    "text": "approach that I know of they allow us to",
    "start": "969300",
    "end": "972000"
  },
  {
    "text": "focus on the essential parts of the",
    "start": "972000",
    "end": "973920"
  },
  {
    "text": "problem that we're working on while",
    "start": "973920",
    "end": "976139"
  },
  {
    "text": "deferring and often generalizing the",
    "start": "976139",
    "end": "978120"
  },
  {
    "text": "more technical bits",
    "start": "978120",
    "end": "979740"
  },
  {
    "text": "I think that this is a very strong",
    "start": "979740",
    "end": "981420"
  },
  {
    "text": "candidate for an even more widely used",
    "start": "981420",
    "end": "984240"
  },
  {
    "text": "programming model in the future it's",
    "start": "984240",
    "end": "986820"
  },
  {
    "text": "certainly one to watch",
    "start": "986820",
    "end": "989160"
  },
  {
    "text": "thank you very much for watching",
    "start": "989160",
    "end": "992600"
  },
  {
    "text": "foreign",
    "start": "993420",
    "end": "995720"
  }
]