[
  {
    "start": "0",
    "end": "37000"
  },
  {
    "text": "[Music]",
    "start": "3520",
    "end": "7840"
  },
  {
    "text": "so good morning everyone and welcome to this session on prioritizing technical",
    "start": "13030",
    "end": "19700"
  },
  {
    "text": "depth this is a broad topic and I have a lot of stuff to cover for you today so I",
    "start": "19700",
    "end": "25310"
  },
  {
    "text": "want us to jump right in and start by covering the forces we have to balance when building large-scale software",
    "start": "25310",
    "end": "31519"
  },
  {
    "text": "systems and I do think that these forces are wery well captured in something called Lehman's loss of soft revolution",
    "start": "31519",
    "end": "38469"
  },
  {
    "start": "37000",
    "end": "199000"
  },
  {
    "text": "so let me ask you how many of you have heard about Lehman's loss not so many",
    "start": "38469",
    "end": "45770"
  },
  {
    "text": "that's good I got something new for you it's perfect so Lehman's law they are pretty",
    "start": "45770",
    "end": "51980"
  },
  {
    "text": "fascinating because they are old they were written down in 1970s early 1980s and they are not that well known so I",
    "start": "51980",
    "end": "58850"
  },
  {
    "text": "tried to do my best to popularize them and today I want to show just two of those laws to you here now so let's",
    "start": "58850",
    "end": "65690"
  },
  {
    "text": "start with the first law and see if it resonates with your experience so the first law of software evolution is the",
    "start": "65690",
    "end": "71810"
  },
  {
    "text": "law of continuous change will Lehman says that the system has to continuously evolve and adapt or it will become",
    "start": "71810",
    "end": "79130"
  },
  {
    "text": "progressively less useful over time do you recognize this yeah this is the",
    "start": "79130",
    "end": "85909"
  },
  {
    "text": "right reason where we keep adding new stuff new features to existing products because we need to keep them relevant we",
    "start": "85909",
    "end": "91640"
  },
  {
    "text": "need to respond to competitors and user needs what I want you to do now is to",
    "start": "91640",
    "end": "97700"
  },
  {
    "text": "note that in the second law of software evolution we have some kind of conflict some kind of tension between these two",
    "start": "97700",
    "end": "103250"
  },
  {
    "text": "laws because the second law is the law of increasing complexity well Lima claims that as a system",
    "start": "103250",
    "end": "110600"
  },
  {
    "text": "evolves its complexity will increase unless we actively try to reduce it so",
    "start": "110600",
    "end": "118790"
  },
  {
    "text": "do you see the tension between these two laws on one hand we have to continuously evolve an adapter system but as we do",
    "start": "118790",
    "end": "125630"
  },
  {
    "text": "its complexity will increase which makes it harder and harder to respond to change so this is a vicious circle that",
    "start": "125630",
    "end": "133370"
  },
  {
    "text": "we need to break and the problem is when we fail to do that we tend to see the",
    "start": "133370",
    "end": "139700"
  },
  {
    "text": "symptoms more than root cause and we tend to say the symptoms differently depending on who we",
    "start": "139700",
    "end": "145569"
  },
  {
    "text": "are what our role is so what most business leaders and technical leaders",
    "start": "145569",
    "end": "150879"
  },
  {
    "text": "tend to see is symptoms on a road map we might experience long lead times it",
    "start": "150879",
    "end": "156790"
  },
  {
    "text": "simply takes longer longer to implement a new feature we might also note this as a consequence a lack of predictability",
    "start": "156790",
    "end": "163690"
  },
  {
    "text": "that is it becomes incredibly hard to guess how long it's going to take to",
    "start": "163690",
    "end": "168700"
  },
  {
    "text": "implement a particular story what our end users tend to see are symptoms on",
    "start": "168700",
    "end": "175420"
  },
  {
    "text": "the external quality of the code they tend to see this they tend to see bugs",
    "start": "175420",
    "end": "180700"
  },
  {
    "text": "and the real issues tend to remain largely hidden an optic so how can we",
    "start": "180700",
    "end": "189310"
  },
  {
    "text": "shine a light on issues like code quality and technical depth well one",
    "start": "189310",
    "end": "195010"
  },
  {
    "text": "obvious way of doing this is to start to quantify technical depth right we could",
    "start": "195010",
    "end": "200019"
  },
  {
    "start": "199000",
    "end": "296000"
  },
  {
    "text": "simply put a number on it and see for depth grows or shrinks so this is something I've seen done many many times",
    "start": "200019",
    "end": "207030"
  },
  {
    "text": "so as part of my day job what I do is I work with code analysis so I go to different organizations I analyze the",
    "start": "207030",
    "end": "213310"
  },
  {
    "text": "code I try to give my recommendations and when I start to do this it's little bit more than four years ago now one of",
    "start": "213310",
    "end": "220359"
  },
  {
    "text": "the first clients are visited they had done something pretty fascinating prior to my arrival they had used the tool",
    "start": "220359",
    "end": "226840"
  },
  {
    "text": "capable of quantifying technical depth based on how the source code looked so",
    "start": "226840",
    "end": "232180"
  },
  {
    "text": "they had taken this tool and thrown it at their 15-year old codebase and this",
    "start": "232180",
    "end": "238329"
  },
  {
    "text": "tool reported that on your 15 year old codebase you have accumulated 4,000",
    "start": "238329",
    "end": "245049"
  },
  {
    "text": "years of technical depth now for",
    "start": "245049",
    "end": "251319"
  },
  {
    "text": "Francaise years of technical depth I always like to put things into perspective so 4,000 years ago that was",
    "start": "251319",
    "end": "257409"
  },
  {
    "text": "here that's the start of record and history through the invention of writing",
    "start": "257409",
    "end": "262770"
  },
  {
    "text": "so on a side note I always get curious what kind of programming language do they use most likely a Fortran right",
    "start": "262770",
    "end": "270070"
  },
  {
    "text": "yeah so anyway I want to point out that and well aware that those 4,000 years of",
    "start": "270070",
    "end": "277690"
  },
  {
    "text": "technical depth it grew in parallel by having hundreds of developers work in the codebase so it might actually be accurate the",
    "start": "277690",
    "end": "284460"
  },
  {
    "text": "question is how useful is it how do you act upon their data so this is where it",
    "start": "284460",
    "end": "293949"
  },
  {
    "text": "starts to become dangerous because this is also something experienced in many different organizations when you try to",
    "start": "293949",
    "end": "300220"
  },
  {
    "start": "296000",
    "end": "512000"
  },
  {
    "text": "quantify technical depth based on how the source code looks or any properties of the code but tends to happen is that",
    "start": "300220",
    "end": "306400"
  },
  {
    "text": "the first time you do that you end up with lots of information right you may",
    "start": "306400",
    "end": "312190"
  },
  {
    "text": "have thousands of potential problems in your code base quality sheis so how do you act upon that mass of data well the",
    "start": "312190",
    "end": "320349"
  },
  {
    "text": "first thing that happens is that we start to look at the different categories so we might think that maybe the tool recommends some recommendations",
    "start": "320349",
    "end": "327039"
  },
  {
    "text": "right so let's skip them went on time any time to improve something here and then we see warnings all right maybe",
    "start": "327039",
    "end": "332979"
  },
  {
    "text": "they are not that important right so let's push them to the side and with them focused on the most severe category",
    "start": "332979",
    "end": "338190"
  },
  {
    "text": "and even we do that I've seen lots of existing applications we're running a",
    "start": "338190",
    "end": "343630"
  },
  {
    "text": "static analysis produces like five six seven thousand major ratios and at some",
    "start": "343630",
    "end": "350680"
  },
  {
    "text": "point the symptoms of technical depth they tend to become too pressing so doing as Asia needs to act upon it and",
    "start": "350680",
    "end": "356530"
  },
  {
    "text": "the way many organizations tend to act upon this is by putting our quantitative goal on it so maybe they say things like",
    "start": "356530",
    "end": "363940"
  },
  {
    "text": "alright we have 7,000 major ratios let's invest three months into bringing that",
    "start": "363940",
    "end": "369310"
  },
  {
    "text": "down to 5,000 and when I hear something like that I always always advise against",
    "start": "369310",
    "end": "376180"
  },
  {
    "text": "it because to me go from 7,000 major ratios down to 5,000 you know it's a",
    "start": "376180",
    "end": "382090"
  },
  {
    "text": "little bit like choosing to jump from their fifth instead of the seventh floor it's most likely not a good idea and the",
    "start": "382090",
    "end": "389139"
  },
  {
    "text": "reason I say that is because we really have to consider what kind of behavior we reinforce by putting our quantitative",
    "start": "389139",
    "end": "396159"
  },
  {
    "text": "goal on technical depth because what is going to happen well with the",
    "start": "396159",
    "end": "402460"
  },
  {
    "text": "quantitative goal people like us developers we're going to optimize for what we are being measured on",
    "start": "402460",
    "end": "408100"
  },
  {
    "text": "so that most likely means that we're going to pick not only the simplest tasks but we are going to pick toss that",
    "start": "408100",
    "end": "414190"
  },
  {
    "text": "we are comfortable with that we are familiar with and that also means that",
    "start": "414190",
    "end": "419470"
  },
  {
    "text": "we lack the most important aspect of technical left we lack the business impact there's no link to the business",
    "start": "419470",
    "end": "426370"
  },
  {
    "text": "impact in a quantitative goal so I think that trying to put the quantitative goal",
    "start": "426370",
    "end": "433720"
  },
  {
    "text": "on technical depth I think it's actually dangerous right in the best-case scenario you're just wasting time but",
    "start": "433720",
    "end": "440140"
  },
  {
    "text": "what's more problematic is that you miss an opportunity to invest your time into doing something that could really really",
    "start": "440140",
    "end": "446470"
  },
  {
    "text": "have an impact on your business so what I want to show you now is that",
    "start": "446470",
    "end": "451980"
  },
  {
    "text": "quantifying technical depth it's possible it might be interesting it's",
    "start": "451980",
    "end": "457120"
  },
  {
    "text": "most likely the pressive but it's not actionable and okay this is going to be",
    "start": "457120",
    "end": "471040"
  },
  {
    "text": "interesting no tweets please yeah all right so",
    "start": "471040",
    "end": "482050"
  },
  {
    "text": "trying to get back on track quantify technical depth is not necessarily",
    "start": "482050",
    "end": "487630"
  },
  {
    "text": "actionable and at the same time it's really important because we need to",
    "start": "487630",
    "end": "492700"
  },
  {
    "text": "oversee this trade-off when we need to balance improving assisting code versus",
    "start": "492700",
    "end": "497710"
  },
  {
    "text": "adding new features right so it's an important topic that we need to stress but how do we do it how do we prioritize",
    "start": "497710",
    "end": "504340"
  },
  {
    "text": "it well those of you who might have been to one of my previous sessions or maybe",
    "start": "504340",
    "end": "510400"
  },
  {
    "text": "even read one of my books you know that I'm a big big big big fan of version",
    "start": "510400",
    "end": "516700"
  },
  {
    "start": "512000",
    "end": "564000"
  },
  {
    "text": "control data I know we all have our hobbies right this one is mine and the",
    "start": "516700",
    "end": "523089"
  },
  {
    "text": "reason I'm so fascinated by version control is because version control data is a wonderful data source and I find it",
    "start": "523089",
    "end": "530740"
  },
  {
    "text": "so fascinating that in the software industry we have been using version control for decades and we have used",
    "start": "530740",
    "end": "535960"
  },
  {
    "text": "this mainly as some kind of over complicated backup system and occasionally as a collaboration tool but",
    "start": "535960",
    "end": "543220"
  },
  {
    "text": "in doing so we have built up this wonderful data source so what I'm going to do today is to show you some case",
    "start": "543220",
    "end": "549280"
  },
  {
    "text": "studies and how we can apply version control data to prioritize technical depth and I want to start by showing",
    "start": "549280",
    "end": "555460"
  },
  {
    "text": "your system a real word code base that I think a lot of you might actually carry around in your pocket as I speak I'm",
    "start": "555460",
    "end": "563080"
  },
  {
    "text": "talking about this I'm talking about Android more specifically I want us to look at the part of Android known as the",
    "start": "563080",
    "end": "569650"
  },
  {
    "start": "564000",
    "end": "1003000"
  },
  {
    "text": "platform framework base so the platform framework base in Android it's a big big code base right 3 million lines of code",
    "start": "569650",
    "end": "576420"
  },
  {
    "text": "lots of developers and the visualization you see here is something I call a",
    "start": "576420",
    "end": "581710"
  },
  {
    "text": "hotspot analysis so I want to walk you through this so you know what you see",
    "start": "581710",
    "end": "587220"
  },
  {
    "text": "the first thing I want you to focus on are those large blue circles you see the",
    "start": "587220",
    "end": "592420"
  },
  {
    "text": "ones that link on screen there each one of those represents a top level",
    "start": "592420",
    "end": "597640"
  },
  {
    "text": "component a top-level folder so this is a hierarchical structure that follows the folder structure of your code",
    "start": "597640",
    "end": "605360"
  },
  {
    "text": "now it's also interactive so we can zoom in to any level of detail we're interested in and when we get to a",
    "start": "605360",
    "end": "612739"
  },
  {
    "text": "lowest level we see that each file with source code is represented as a circle and we see that the circles have",
    "start": "612739",
    "end": "619910"
  },
  {
    "text": "different size so let's have a look at those dimensions so the number one",
    "start": "619910",
    "end": "628699"
  },
  {
    "text": "hotspot in android right now is something called an activity manager service isn't that a beautiful name",
    "start": "628699",
    "end": "636429"
  },
  {
    "text": "right let's consider that for a moment right activity could be something from the problem domain but then we have two",
    "start": "636429",
    "end": "643129"
  },
  {
    "text": "more or less non descriptive words manager and service that each one and isolation indicates a unit with low",
    "start": "643129",
    "end": "648920"
  },
  {
    "text": "cohesion and will combine them right I'm curious what we're going to find inside",
    "start": "648920",
    "end": "654199"
  },
  {
    "text": "this one because we are going to look into it now let's get the dimensions",
    "start": "654199",
    "end": "659959"
  },
  {
    "text": "here you see that the files have different size the circles that's because size is used to represent code",
    "start": "659959",
    "end": "666079"
  },
  {
    "text": "complexity now how do you measure something like code complexity that is",
    "start": "666079",
    "end": "671600"
  },
  {
    "text": "how hard is that code for human to understand well you might have heard about things like cyclomatic complexity",
    "start": "671600",
    "end": "677989"
  },
  {
    "text": "how stats volume metrics and truth is you can use any of those metrics that you have easy access to because what",
    "start": "677989",
    "end": "684619"
  },
  {
    "text": "they all have in common is that they're equally bad it turns out if you look at",
    "start": "684619",
    "end": "689989"
  },
  {
    "text": "the research just controlling for the number of lines of code means that those more elaborate metrics don't add any",
    "start": "689989",
    "end": "696529"
  },
  {
    "text": "further predictive value so what I tend to use is just the number of lines of code because this let me repeat it this",
    "start": "696529",
    "end": "704209"
  },
  {
    "text": "is not the important dimension when prioritizing technical depth and the",
    "start": "704209",
    "end": "709759"
  },
  {
    "text": "reason I say this is because code complexity has this property that it code complexity is only a problem when",
    "start": "709759",
    "end": "716029"
  },
  {
    "text": "we need to deal with it right so we need to figure out all right we have some potentially complex code do we actually",
    "start": "716029",
    "end": "722779"
  },
  {
    "text": "have to work with it and this is data that we can pull out of a version control system we can look at things",
    "start": "722779",
    "end": "729290"
  },
  {
    "text": "like the change frequency how often do a developer go into that code and make a modification to it and we can simply",
    "start": "729290",
    "end": "736160"
  },
  {
    "text": "count the number of commits and in the technical depth terminology I like to view code complexity as a",
    "start": "736160",
    "end": "742650"
  },
  {
    "text": "principle that's the loan we have taken on however the change frequency that's",
    "start": "742650",
    "end": "748380"
  },
  {
    "text": "what I use as a proxy for interest rate and when we combine these two we're",
    "start": "748380",
    "end": "753930"
  },
  {
    "text": "capable for dint fiying hot spots that is complicated code that we have to work with often so at this point we need to",
    "start": "753930",
    "end": "762750"
  },
  {
    "text": "dig a little bit deeper and actually look at the code and what I tend to prioritize when talking about technical",
    "start": "762750",
    "end": "769110"
  },
  {
    "text": "depth are a number of predictors of code that's not only going to be expensive to",
    "start": "769110",
    "end": "774390"
  },
  {
    "text": "maintain but also at risk for the effects and what I tend to find and what",
    "start": "774390",
    "end": "781080"
  },
  {
    "text": "I tend to look for are things like cohesion right if you have too many responsibilities stuffed into that",
    "start": "781080",
    "end": "786510"
  },
  {
    "text": "module it's going to have many reasons to change and as a consequence it's going to attract many different",
    "start": "786510",
    "end": "792060"
  },
  {
    "text": "developers which might lead to coordination issues in that code also look for certain low-level patterns like",
    "start": "792060",
    "end": "799200"
  },
  {
    "text": "for example deeply nested logic right you know if statements inside if statements inside if statements do you",
    "start": "799200",
    "end": "806010"
  },
  {
    "text": "know how many percentage of all the effects come from the constructs like that alone roughly twenty percent right",
    "start": "806010",
    "end": "813330"
  },
  {
    "text": "so I tend to look at the code and I try to form an opinion if this is a likely",
    "start": "813330",
    "end": "819870"
  },
  {
    "text": "to be a big problem in this case I can spoil it and say that yes that code",
    "start": "819870",
    "end": "825660"
  },
  {
    "text": "takes all of those boxes so what I do next is that I try to figure out all right",
    "start": "825660",
    "end": "831589"
  },
  {
    "text": "maybe this code is a hotspot the cost organization already knows about it so",
    "start": "831589",
    "end": "836670"
  },
  {
    "text": "maybe the developers are doing a lot of work in that part of the code because they're refactoring and improving it to",
    "start": "836670",
    "end": "843720"
  },
  {
    "text": "answer that question we can use a different technique that I call complexity trends so what I do here is",
    "start": "843720",
    "end": "849570"
  },
  {
    "text": "to simply go to their birth control data and I pull out each Easter egg revision of that piece of code and then I measure",
    "start": "849570",
    "end": "855780"
  },
  {
    "text": "the code complexity typically using in one of the simpler metrics like cyclomatic complexity or nested logic",
    "start": "855780",
    "end": "861420"
  },
  {
    "text": "something like that and plot it over time and for reference that's the red line the blue line is simply the",
    "start": "861420",
    "end": "867630"
  },
  {
    "text": "accumulation of lines of code so when view this graph we see that the number",
    "start": "867630",
    "end": "874290"
  },
  {
    "text": "of lines of code seems to grow steadily which might be a problem in itself but it's definitely a worry worrying sign",
    "start": "874290",
    "end": "881010"
  },
  {
    "text": "when the complexity seems to increase at an even steeper rate so what this means",
    "start": "881010",
    "end": "886380"
  },
  {
    "text": "if we take a step back is that we have a piece of code that we need to work with all the time that code has some quality",
    "start": "886380",
    "end": "892800"
  },
  {
    "text": "problems and when we work with it it gets worse and worse and worse so this is the kind of code we need to act upon",
    "start": "892800",
    "end": "900440"
  },
  {
    "text": "now let's put some numbers on it the activity manager service hotspot",
    "start": "900440",
    "end": "906350"
  },
  {
    "text": "consists of roughly 20,000 lines of code it had 74 developers contributing to the",
    "start": "906350",
    "end": "913500"
  },
  {
    "text": "same file just over the past three months at the same time we did saw that",
    "start": "913500",
    "end": "919830"
  },
  {
    "text": "previous slide indicated that this is code that we really should reflect the",
    "start": "919830",
    "end": "925020"
  },
  {
    "text": "right that's likely to be a very big payoff here because we work with it all the time so who would like to have that",
    "start": "925020",
    "end": "930900"
  },
  {
    "text": "refactoring task a few brave souls that's good I would actually advise",
    "start": "930900",
    "end": "938670"
  },
  {
    "text": "against it because I think it's dangerous to take on refactoring and read the science at that scale because",
    "start": "938670",
    "end": "945210"
  },
  {
    "text": "what's very likely to happen is that if you look at that second number it's it's nothing to do with the code but look at",
    "start": "945210",
    "end": "950520"
  },
  {
    "text": "the number of developers touching that code so it's going to happen if we decide to refactor this they are going",
    "start": "950520",
    "end": "955740"
  },
  {
    "text": "to branch out you're going to work on that branch for two months and you're never ever going to be able to deliver",
    "start": "955740",
    "end": "960900"
  },
  {
    "text": "it back because in the mean times your colleagues have been adding lots of new features to the code right remember the",
    "start": "960900",
    "end": "966810"
  },
  {
    "text": "law of continuing change so we need to do better we need to come up with much",
    "start": "966810",
    "end": "972150"
  },
  {
    "text": "more specific refactoring insights and to do that I use a technique I call hot spots x-ray so what I do here is that",
    "start": "972150",
    "end": "980420"
  },
  {
    "text": "when I come across a large hot spot like that I take it that code and a parse it",
    "start": "980420",
    "end": "985680"
  },
  {
    "text": "into separate functions and methods then I look at the version control data and see where do each commit it over time",
    "start": "985680",
    "end": "991920"
  },
  {
    "text": "and I sum it up and I get hot spots on a function level let's have a look at that",
    "start": "991920",
    "end": "999420"
  },
  {
    "text": "let's do an x-ray of activity manager service",
    "start": "999420",
    "end": "1005050"
  },
  {
    "start": "1003000",
    "end": "1181000"
  },
  {
    "text": "now this is what I tend to use to select the first prioritized refactoring and in",
    "start": "1005100",
    "end": "1012640"
  },
  {
    "text": "this case we see that the hot spot on a function level inside activity manager service is a method called handle",
    "start": "1012640",
    "end": "1018130"
  },
  {
    "text": "message we see that handle message has been modified 96 times just over the",
    "start": "1018130",
    "end": "1023980"
  },
  {
    "text": "past year so roughly twice a week some of the developers inside that code if we",
    "start": "1023980",
    "end": "1030069"
  },
  {
    "text": "look at the lines of code of that method we see that it consists of 500 lines that's a lot for a single method isn't",
    "start": "1030069",
    "end": "1037540"
  },
  {
    "text": "it it is it is but it's much less than 20,000 lines of code which was size of a",
    "start": "1037540",
    "end": "1044800"
  },
  {
    "text": "total hotspot and it's definitely less than three million lines of code which were sized to a total code base so more",
    "start": "1044800",
    "end": "1051730"
  },
  {
    "text": "important we are now on a level where we can start to act upon this information and do a focused refactoring based on",
    "start": "1051730",
    "end": "1058060"
  },
  {
    "text": "data from are we as an organization actually works with the code so I want",
    "start": "1058060",
    "end": "1068320"
  },
  {
    "text": "to show you some statistics to explain where hotspots work so well to prioritize technical depth the main",
    "start": "1068320",
    "end": "1074470"
  },
  {
    "text": "reason they work so well is because all code really isn't equal so please have a",
    "start": "1074470",
    "end": "1079660"
  },
  {
    "text": "look at the following graphs this is some of the most important data I'm going to show you today what you see",
    "start": "1079660",
    "end": "1085210"
  },
  {
    "text": "here are examples from three different systems but they all show the same kind",
    "start": "1085210",
    "end": "1090429"
  },
  {
    "text": "of data on the x-axis you have each file in the system and those files are sorted",
    "start": "1090429",
    "end": "1097510"
  },
  {
    "text": "according to the change frequency that is how many commits so much work can be done in each one of the files and the",
    "start": "1097510",
    "end": "1102910"
  },
  {
    "text": "number of commits is what you see on the y-axis now if you look at those free",
    "start": "1102910",
    "end": "1108250"
  },
  {
    "text": "examples you see I've used an example some free completely different code bases targeting different domains within",
    "start": "1108250",
    "end": "1115390"
  },
  {
    "text": "different languages but different developers different organizations different life time span everything is",
    "start": "1115390",
    "end": "1120400"
  },
  {
    "text": "different and yet they all show exactly the same distribution they show a",
    "start": "1120400",
    "end": "1126070"
  },
  {
    "text": "power-law distribution and this is something I found in every single codebase that I've ever analyzed and a",
    "start": "1126070",
    "end": "1132820"
  },
  {
    "text": "problem analyzed around 250 300 code bases but now so this seems to be the",
    "start": "1132820",
    "end": "1138010"
  },
  {
    "text": "way that software evolves and this is important to us because what this means is that",
    "start": "1138010",
    "end": "1144339"
  },
  {
    "text": "most of our code is going to be here in the long tail so it's code that's rarely",
    "start": "1144339",
    "end": "1149349"
  },
  {
    "text": "if ever touched so unless we have some very specific contextual knowledge",
    "start": "1149349",
    "end": "1155259"
  },
  {
    "text": "spending time refactoring code in the long tail is usually not a good investment in the short term most of our",
    "start": "1155259",
    "end": "1162099"
  },
  {
    "text": "development activity around our hand is going to be in a very small part of the code base at the head of the curb and",
    "start": "1162099",
    "end": "1167579"
  },
  {
    "text": "that's what hotspots do for us they help us identify those intersections between",
    "start": "1167579",
    "end": "1173679"
  },
  {
    "text": "high development activity and technical depth at odd spots do one more thing for",
    "start": "1173679",
    "end": "1180399"
  },
  {
    "text": "us and what they do is to help us put code quality into context and last year",
    "start": "1180399",
    "end": "1189279"
  },
  {
    "start": "1181000",
    "end": "1311000"
  },
  {
    "text": "I published a book called software design x-rays and I want to show you my favorite chapter of that book I'm really",
    "start": "1189279",
    "end": "1195999"
  },
  {
    "text": "happy with the title here I claimed that your best bug fix is time and what I did",
    "start": "1195999",
    "end": "1202690"
  },
  {
    "text": "here was that I looked at some research and what the researchers have done is that they simply looked at different",
    "start": "1202690",
    "end": "1208869"
  },
  {
    "text": "modules that solve similar problems and then they looked at the age perspective and they found out that code that's been",
    "start": "1208869",
    "end": "1216159"
  },
  {
    "text": "stable for one year has roughly one-third fewer defect the facts than",
    "start": "1216159",
    "end": "1222190"
  },
  {
    "text": "code that has been modified recently and this is fascinating because what it means to us is basically that from a",
    "start": "1222190",
    "end": "1228789"
  },
  {
    "text": "quality perspective from the external quality perspective old code is good",
    "start": "1228789",
    "end": "1234190"
  },
  {
    "text": "code and the reason I say that is because code grows old for two different",
    "start": "1234190",
    "end": "1240009"
  },
  {
    "text": "reasons first of all it might simply be that it it's unused right it's dead code",
    "start": "1240009",
    "end": "1245949"
  },
  {
    "text": "and that code is some of the best code you can have because you can simply delete it right it's always a win to delete code or code",
    "start": "1245949",
    "end": "1255729"
  },
  {
    "text": "grows old because it's stable maybe it's still hard to understand it could be",
    "start": "1255729",
    "end": "1262029"
  },
  {
    "text": "potentially hard to maintain but what is there is likely to have been debugged into functionality it's been battle",
    "start": "1262029",
    "end": "1268749"
  },
  {
    "text": "tested it's been proving it and you use and it just were and using hotspots you can ensure it",
    "start": "1268749",
    "end": "1275560"
  },
  {
    "text": "stays that way because hotspots help you sort your codebase into stable parts versus the more volatile parts so that",
    "start": "1275560",
    "end": "1283090"
  },
  {
    "text": "you can focus or limit the time on the parts of the code where you're likely to have the largest effect now when we talk",
    "start": "1283090",
    "end": "1294400"
  },
  {
    "text": "about technical depth we also need to touch up on legacy code I have found",
    "start": "1294400",
    "end": "1299950"
  },
  {
    "text": "that quite often those two concepts are used interchangeably but legacy code is something different technical depth is",
    "start": "1299950",
    "end": "1307240"
  },
  {
    "text": "not legacy code so let's take a step back and see what legacy code actually is and the definition I use for legacy",
    "start": "1307240",
    "end": "1315430"
  },
  {
    "start": "1311000",
    "end": "1466000"
  },
  {
    "text": "code consists of two different parts because I view code as legacy if that",
    "start": "1315430",
    "end": "1321940"
  },
  {
    "text": "code lacks in quality to some degree and more important we didn't write ourselves",
    "start": "1321940",
    "end": "1328980"
  },
  {
    "text": "if we take those two boxes what we have is legacy code now let me share a story",
    "start": "1328980",
    "end": "1337510"
  },
  {
    "text": "with you so this is something that happened maybe one and a half year ago I",
    "start": "1337510",
    "end": "1343360"
  },
  {
    "text": "did some work with a client and I got on site and I work with one of their teams",
    "start": "1343360",
    "end": "1348910"
  },
  {
    "text": "and that team they were responsible for two different code bases so we need a hot spot analysis on them and we start",
    "start": "1348910",
    "end": "1355840"
  },
  {
    "text": "to review the code we start to discuss the design and what we found was that both of those code bases they looked",
    "start": "1355840",
    "end": "1361540"
  },
  {
    "text": "pretty good because those hot spots any one of them that we picked up it looked pretty good right easy to follow easy to",
    "start": "1361540",
    "end": "1368530"
  },
  {
    "text": "extend wonderful so everyone was happy but then someone shared the information",
    "start": "1368530",
    "end": "1374380"
  },
  {
    "text": "that you know what we actually have one more code base error that we are responsible for so I said ah perfect",
    "start": "1374380",
    "end": "1380950"
  },
  {
    "text": "let's bring it up and do a hotspot analysis so that one too yeah but you know it's it's a complete",
    "start": "1380950",
    "end": "1387970"
  },
  {
    "text": "mess I said how even more interesting right let's bring it up and let's have a look at it so we did so we did a hotspot",
    "start": "1387970",
    "end": "1395230"
  },
  {
    "text": "analysis of code base number three and guess what I found it looked really",
    "start": "1395230",
    "end": "1402160"
  },
  {
    "text": "really good it looked as good as the two other codebases there",
    "start": "1402160",
    "end": "1408149"
  },
  {
    "text": "was virtually no difference in terms of internal equality and this was",
    "start": "1408149",
    "end": "1413639"
  },
  {
    "text": "surprising to everyone there me included until we realized that what had actually",
    "start": "1413639",
    "end": "1419039"
  },
  {
    "text": "happened was that those two code bases the first more - they were written by the team themselves the third one that",
    "start": "1419039",
    "end": "1426719"
  },
  {
    "text": "one was implemented by a different part of the organization a different apartment and this team have simply",
    "start": "1426719",
    "end": "1431879"
  },
  {
    "text": "inherited that code so the reason that code was deemed as complicated and hard",
    "start": "1431879",
    "end": "1437129"
  },
  {
    "text": "to understand had nothing at all to do with any properties of the code it was just unfamiliarity and this made",
    "start": "1437129",
    "end": "1446639"
  },
  {
    "text": "me thinking that ease of understanding is also about system mastery how well",
    "start": "1446639",
    "end": "1452729"
  },
  {
    "text": "duh do we know our code and that got me thinking how quick can we take our current code base and turn it into",
    "start": "1452729",
    "end": "1458879"
  },
  {
    "text": "legacy code what do we need to do let's find out by doing a case study before I",
    "start": "1458879",
    "end": "1467189"
  },
  {
    "start": "1466000",
    "end": "1494000"
  },
  {
    "text": "do that case study we need a way to reason about system mastery and knowledge distribution and what I'm",
    "start": "1467189",
    "end": "1473429"
  },
  {
    "text": "going to use now is that I'm going to return to the gate logs because looking at git we can get this kind of social",
    "start": "1473429",
    "end": "1479549"
  },
  {
    "text": "data we can simply identify the main developer behind each module and the main developer is simply the person has",
    "start": "1479549",
    "end": "1484619"
  },
  {
    "text": "written most of the code and we can sum that up right so let me show you a",
    "start": "1484619",
    "end": "1490559"
  },
  {
    "text": "different code base we rip through our java code base let's have a look at our net code base so this might be a code",
    "start": "1490559",
    "end": "1497369"
  },
  {
    "start": "1494000",
    "end": "1715000"
  },
  {
    "text": "base that a lot of you are familiar with as users this is asp.net core NBC from Microsoft is anyone using that framework",
    "start": "1497369",
    "end": "1504719"
  },
  {
    "text": "right now are lots of you like 10% maybe cool so in speed of not embassies of",
    "start": "1504719",
    "end": "1511799"
  },
  {
    "text": "simply a framework for Microsoft for building dynamic web applications and the visualization you see here it's the",
    "start": "1511799",
    "end": "1518339"
  },
  {
    "text": "same results asian-style as we used for the hotspots it's something called enclosure diagrams but now the colors",
    "start": "1518339",
    "end": "1524249"
  },
  {
    "text": "carry a different meaning because blue simply means that these are parts of the code that's written by people who are",
    "start": "1524249",
    "end": "1530099"
  },
  {
    "text": "currently contributing to that code base so people are now part of the team the",
    "start": "1530099",
    "end": "1535589"
  },
  {
    "text": "different shades of grey those are our black holes in terms of system mastery",
    "start": "1535589",
    "end": "1540840"
  },
  {
    "text": "so these are parts of the code where the main developer no longer works for us",
    "start": "1540840",
    "end": "1546080"
  },
  {
    "text": "right and what I did now was that I",
    "start": "1546080",
    "end": "1552680"
  },
  {
    "text": "identified one main contributor to that codebase a single person a person who",
    "start": "1552680",
    "end": "1558150"
  },
  {
    "text": "works for Microsoft full-time on that codebase not pretended what's going to happen if that single person leaves I",
    "start": "1558150",
    "end": "1564690"
  },
  {
    "text": "mean after all there are like 180 contributors in total so for sure a single person shouldn't make that big a",
    "start": "1564690",
    "end": "1571170"
  },
  {
    "text": "difference well let's have a look at the visualization to the right see the red",
    "start": "1571170",
    "end": "1577950"
  },
  {
    "text": "areas there that's the part of the code where we lose the majority of the detail knowledge if a single developer leaves",
    "start": "1577950",
    "end": "1587300"
  },
  {
    "text": "should we be worried yes we should and this is not a fluke this is something I",
    "start": "1587690",
    "end": "1595020"
  },
  {
    "text": "see consistently across many many code bases in the industry the interesting thing is that once we start to measure",
    "start": "1595020",
    "end": "1601020"
  },
  {
    "text": "and visualize it like that we can actually use this data proactively so let's say this happened let's say that",
    "start": "1601020",
    "end": "1606720"
  },
  {
    "text": "that person I just made up that scenario for all that I know that person is still contributing but let's say they were",
    "start": "1606720",
    "end": "1613080"
  },
  {
    "text": "really going to live what I wouldn't do in that case if this was my project my code base is that I would use the time",
    "start": "1613080",
    "end": "1620430"
  },
  {
    "text": "that I have left with them maybe they have two weeks one month until actually leave so what I would do is first of all",
    "start": "1620430",
    "end": "1626610"
  },
  {
    "text": "I would look for entire of packages where we tend to lose the knowledge so",
    "start": "1626610",
    "end": "1631710"
  },
  {
    "text": "in this case you might see here there's a package called integration tests where we seem to lose the mayority of the",
    "start": "1631710",
    "end": "1638190"
  },
  {
    "text": "knowledge I don't know maybe integration tests are important to us if that's the",
    "start": "1638190",
    "end": "1644010"
  },
  {
    "text": "case what I would do is I would look at the other people who have written rest of the code and I would talk to them and would check or you're comfortable in",
    "start": "1644010",
    "end": "1650340"
  },
  {
    "text": "taking over the maintenance and ownership of this package what I would also do is that I would start to",
    "start": "1650340",
    "end": "1656070"
  },
  {
    "text": "correlate this social data with our technical metrics in particular I would start to look for hotspots where we lose",
    "start": "1656070",
    "end": "1662430"
  },
  {
    "text": "knowledge because a hotspot is a signal of relevance so if it's a hotspot it",
    "start": "1662430",
    "end": "1668280"
  },
  {
    "text": "means it's very likely that we will continue to work with that part of the code and it had some quality issues then that's a",
    "start": "1668280",
    "end": "1675329"
  },
  {
    "text": "big off-boarding risk to us so what I would do if I find stuff like that like an abandoned hot spots is that that will",
    "start": "1675329",
    "end": "1681389"
  },
  {
    "text": "pair together the person living with someone that's gone staying and I would have them refactor that hot spots together so that we mitigate an upcoming",
    "start": "1681389",
    "end": "1689039"
  },
  {
    "text": "of boarding risk so what offense of",
    "start": "1689039",
    "end": "1694139"
  },
  {
    "text": "fascinating about this is that there's so much more to code complexity than just properties of the code and in",
    "start": "1694139",
    "end": "1700109"
  },
  {
    "text": "particular only social factors like knowledge distribution a system or three they influence how we perceive a code",
    "start": "1700109",
    "end": "1706199"
  },
  {
    "text": "base and in particular we tend to overestimate the complexity of unfamiliar code now I have much more",
    "start": "1706199",
    "end": "1715109"
  },
  {
    "start": "1715000",
    "end": "1860000"
  },
  {
    "text": "stuff that I want to share with you but before I do that let me share the kind of tools I used to do this kind of",
    "start": "1715109",
    "end": "1721169"
  },
  {
    "text": "analysis in case you want to try it on your own code base now you have to remember this is a still a pretty young",
    "start": "1721169",
    "end": "1727709"
  },
  {
    "text": "field when I start to do this kind of analysis maybe nine ten years ago there weren't any tools available that could",
    "start": "1727709",
    "end": "1733889"
  },
  {
    "text": "do the kind of analysis I wanted to do so to write my own and I open sourced my",
    "start": "1733889",
    "end": "1739019"
  },
  {
    "text": "first tool suite it's available my github page and I still do the",
    "start": "1739019",
    "end": "1744029"
  },
  {
    "text": "occasional maintenance of it is called code matt it's completely free and could do most of the analyzes that i show you",
    "start": "1744029",
    "end": "1750179"
  },
  {
    "text": "today what I'm working on right now is something called a code scene so code",
    "start": "1750179",
    "end": "1756389"
  },
  {
    "text": "sin is an automated service for all of this it's entirely free for open source projects so if you work in that space",
    "start": "1756389",
    "end": "1762539"
  },
  {
    "text": "consider to have a look at it and support it now what I also find so",
    "start": "1762539",
    "end": "1768359"
  },
  {
    "text": "fascinating is that you can get really really far with just a git client and there I have many examples in my book",
    "start": "1768359",
    "end": "1775079"
  },
  {
    "text": "but I want to show you my absolute favorite did you know that with git log and a minor self flag you can specify a",
    "start": "1775079",
    "end": "1782429"
  },
  {
    "text": "function inside a file and have it traced evolution of that function that's",
    "start": "1782429",
    "end": "1788699"
  },
  {
    "text": "basically like an simple x-ray directly from your command line now",
    "start": "1788699",
    "end": "1795300"
  },
  {
    "text": "you're going to get the links at the end as well for now I want to scale up some",
    "start": "1795300",
    "end": "1802830"
  },
  {
    "text": "of the stuff we have talked about and see how we can analyze technical depth and non-code properties in",
    "start": "1802830",
    "end": "1809150"
  },
  {
    "text": "micro-services so let me ask you how",
    "start": "1809150",
    "end": "1815430"
  },
  {
    "text": "many of you work on a micro service system so it's like maybe 20 percent",
    "start": "1815430",
    "end": "1822180"
  },
  {
    "text": "maybe it's a significant chunk a fund is really really fascinating because when I",
    "start": "1822180",
    "end": "1827760"
  },
  {
    "text": "start to work with code analysis four years ago most organizations that are",
    "start": "1827760",
    "end": "1833550"
  },
  {
    "text": "visited they had some kind of legacy migration plan they were talking about micro services they have started to do",
    "start": "1833550",
    "end": "1838860"
  },
  {
    "text": "the first explorations but almost no one had them in operation today micro",
    "start": "1838860",
    "end": "1844440"
  },
  {
    "text": "services or mainstream and this is interesting to us because what it basically means is that tomorrow's",
    "start": "1844440",
    "end": "1850710"
  },
  {
    "text": "legacy systems are going to be micro services so let's stay a step ahead and",
    "start": "1850710",
    "end": "1856440"
  },
  {
    "text": "see how we can make sense of micro services now when applying these",
    "start": "1856440",
    "end": "1862320"
  },
  {
    "start": "1860000",
    "end": "2005000"
  },
  {
    "text": "techniques that I've shown you to micro services we tend to run into a number of challenges some of them are practical",
    "start": "1862320",
    "end": "1868710"
  },
  {
    "text": "like micro services they are written to be polyglot code bases right they also tend to be distributed in multiple git",
    "start": "1868710",
    "end": "1875070"
  },
  {
    "text": "repositories but those are pretty easy to address and I'm going to show you how",
    "start": "1875070",
    "end": "1880170"
  },
  {
    "text": "it looks soon what I find more fascinating is that in a micro service architecture the most important aspects",
    "start": "1880170",
    "end": "1886920"
  },
  {
    "text": "are not necessarily properties of the code but properties of the system what",
    "start": "1886920",
    "end": "1892710"
  },
  {
    "text": "do I mean by that well what I mean is that in a micro service architecture code quality definitely matters it does",
    "start": "1892710",
    "end": "1899400"
  },
  {
    "text": "in all systems but what's even more important or what does the connections between the services look like how do",
    "start": "1899400",
    "end": "1905850"
  },
  {
    "text": "they communicate and collaborate and also what does the people's eyes look",
    "start": "1905850",
    "end": "1910890"
  },
  {
    "text": "like what does the team coupling look like do we have dependencies between people so let's see how we can address",
    "start": "1910890",
    "end": "1918300"
  },
  {
    "text": "that and let's start by having a look at the system called spinnaker so spinnaker",
    "start": "1918300",
    "end": "1924840"
  },
  {
    "text": "is a continuous delivery platform developed by Netflix and now Google it's",
    "start": "1924840",
    "end": "1931560"
  },
  {
    "text": "a micro service system and it consists of approximately 45 different git repositories each one of them",
    "start": "1931560",
    "end": "1938070"
  },
  {
    "text": "encapsulating one or more micro services and what you see here is a hotspot analysis of spinnaker so each one of",
    "start": "1938070",
    "end": "1945960"
  },
  {
    "text": "those top-level bubbles is now on an entire service right separate get red",
    "start": "1945960",
    "end": "1951150"
  },
  {
    "text": "bow and the way I do this in practice is simpler I run a hotspot analysis for",
    "start": "1951150",
    "end": "1956550"
  },
  {
    "text": "each one of the git repositories and then I just combine them in the visualization another thing I want to",
    "start": "1956550",
    "end": "1963960"
  },
  {
    "text": "point out and this is also why I'm such a big fan of version control it's that spinnaker is implemented in",
    "start": "1963960",
    "end": "1971220"
  },
  {
    "text": "many different programming languages seven different languages and a fascinating thing with the hotspot",
    "start": "1971220",
    "end": "1976530"
  },
  {
    "text": "analysis is since it's used it uses version control later it's actually language neutral so we can visualize",
    "start": "1976530",
    "end": "1983490"
  },
  {
    "text": "hotspots even in polyglot systems and get a holistic overview of them however",
    "start": "1983490",
    "end": "1989340"
  },
  {
    "text": "I have found that in micro service systems and we can of course use this to identify hotspots right we see a big one",
    "start": "1989340",
    "end": "1995730"
  },
  {
    "text": "there to your left but I have found that in micro service systems the interesting unit interesting level of analysis tends",
    "start": "1995730",
    "end": "2002930"
  },
  {
    "text": "to be the service boundaries so what I tend to do is I take all contributions to a single service and I simply sum",
    "start": "2002930",
    "end": "2010670"
  },
  {
    "start": "2005000",
    "end": "2120000"
  },
  {
    "text": "them up and visualize hotspots on the micro service level so this is data that",
    "start": "2010670",
    "end": "2018680"
  },
  {
    "text": "we can use to detect services that seem to grow too complex like Dec here which might be an indication of low",
    "start": "2018680",
    "end": "2025280"
  },
  {
    "text": "cohesion and maybe too many responsibilities stuffed into a service so this might be a starting point but I",
    "start": "2025280",
    "end": "2032210"
  },
  {
    "text": "do think that we need to do better because a hotspot analysis won't help us in answering what's happening between",
    "start": "2032210",
    "end": "2039170"
  },
  {
    "text": "the services what about their boundaries so we need to do a dependency analysis",
    "start": "2039170",
    "end": "2045050"
  },
  {
    "text": "for micro services and this is our dependency view looks between the micro",
    "start": "2045050",
    "end": "2051710"
  },
  {
    "text": "services in spinnaker and I'm going to show you how I do this calculation we're",
    "start": "2051710",
    "end": "2057889"
  },
  {
    "text": "going to return to this graph in just a minute so how do you get the dependencies",
    "start": "2057890",
    "end": "2063579"
  },
  {
    "text": "between microservices they are located in different git repositories right there's usually no direct communication",
    "start": "2063579",
    "end": "2069628"
  },
  {
    "text": "depends in between them they tend to be decoupled by networks and message buses and whatnot so what I use is I look at",
    "start": "2069629",
    "end": "2077888"
  },
  {
    "text": "coupling based on a collective intelligence of the contributing developers I use a concept called change",
    "start": "2077889",
    "end": "2083919"
  },
  {
    "text": "coupling so we'll change coupling what I do is a simply look at when we implement",
    "start": "2083919",
    "end": "2089500"
  },
  {
    "text": "a new feature what kind of stuff has to be might be modified in order to fulfill that feature and in this example you see",
    "start": "2089500",
    "end": "2098800"
  },
  {
    "text": "a simple system with just three different micro-services we see that when implementing new features the",
    "start": "2098800",
    "end": "2103809"
  },
  {
    "text": "subscription service and sign-up service tend to be changed together so if this is a trend that would continue then I",
    "start": "2103809",
    "end": "2110380"
  },
  {
    "text": "note that there has to be some kind of relationship between a sign-up service and a subscription service because they",
    "start": "2110380",
    "end": "2115690"
  },
  {
    "text": "keep changing together right so this is what I did for spinnaker as well so the",
    "start": "2115690",
    "end": "2122710"
  },
  {
    "start": "2120000",
    "end": "2212000"
  },
  {
    "text": "dependencies you see here are the dependencies of change it's the impact of change is to change coupling now how",
    "start": "2122710",
    "end": "2130990"
  },
  {
    "text": "do you read this data well the different labels that you see each one of them represents a service and the connections",
    "start": "2130990",
    "end": "2136930"
  },
  {
    "text": "between them represents the change coupling the colors of the links represents the trend so red in this case",
    "start": "2136930",
    "end": "2145510"
  },
  {
    "text": "shows a change capting dependency that is growing stronger right so that coupling is stronger now than it was a",
    "start": "2145510",
    "end": "2152589"
  },
  {
    "text": "month ago and when interpreting this data I see that there seems to be a",
    "start": "2152589",
    "end": "2158109"
  },
  {
    "text": "cluster of microservices in the upper right corner that tend to be changed together but what immediately draws my",
    "start": "2158109",
    "end": "2165099"
  },
  {
    "text": "attention is this connection between bakery and Rosco whatever those micro services are and if this was a system",
    "start": "2165099",
    "end": "2173470"
  },
  {
    "text": "that was under my responsibility what I would be interested in was to find out",
    "start": "2173470",
    "end": "2178930"
  },
  {
    "text": "what does the team demand should look like because it's a big difference if those two services are owned by the same",
    "start": "2178930",
    "end": "2185770"
  },
  {
    "text": "team or if they are developed and owned by two independent teams because in the",
    "start": "2185770",
    "end": "2191650"
  },
  {
    "text": "later case what this would mean is a lot of potential coordination and communication overhead in particular since that",
    "start": "2191650",
    "end": "2199390"
  },
  {
    "text": "dependence is increasing in strength and by uncovering this we can start to",
    "start": "2199390",
    "end": "2205119"
  },
  {
    "text": "answer one of the most common questions I get when I talk to clients and that",
    "start": "2205119",
    "end": "2211030"
  },
  {
    "text": "question is should we use component or feature teams you know we kind of tried both and none of them really seems to",
    "start": "2211030",
    "end": "2217900"
  },
  {
    "start": "2212000",
    "end": "2279000"
  },
  {
    "text": "work so the reason for this it's because in an architecture with tight coupling",
    "start": "2217900",
    "end": "2225460"
  },
  {
    "text": "we try to change coupling between different parts of the codebase if we try to go with something like component",
    "start": "2225460",
    "end": "2230800"
  },
  {
    "text": "or domain teams what tends to happen is that we get very very long lead times it",
    "start": "2230800",
    "end": "2236410"
  },
  {
    "text": "simply takes a long time to respond to change because we need to coordinate across the team boundaries so maybe we",
    "start": "2236410",
    "end": "2245140"
  },
  {
    "text": "decide to switch to feature teams instead and again in a tightly coupled architecture what tends to happen with",
    "start": "2245140",
    "end": "2251920"
  },
  {
    "text": "feature teams is that the whole system turns into gigantic coordination bottleneck which is an even worse",
    "start": "2251920",
    "end": "2258670"
  },
  {
    "text": "problem to have and I don't think there's an easy fix to this because I",
    "start": "2258670",
    "end": "2264520"
  },
  {
    "text": "think that the question of component versus feature teams it's simply the wrong question to ask because we cannot",
    "start": "2264520",
    "end": "2270400"
  },
  {
    "text": "fix what is fundamentally an architectural issue with organizational changes so what do we need to do instead",
    "start": "2270400",
    "end": "2277530"
  },
  {
    "text": "well we need to strive for locality of change so let me try to explain that by",
    "start": "2277530",
    "end": "2284710"
  },
  {
    "start": "2279000",
    "end": "2593000"
  },
  {
    "text": "reading one of the best quotes I know about this subject it's from a new book by Jean Kim called a Unicom project",
    "start": "2284710",
    "end": "2290410"
  },
  {
    "text": "really good book you really recommend it and in that book Jean Kim says that simplicity is important because it",
    "start": "2290410",
    "end": "2297040"
  },
  {
    "text": "enables locality and locality in our code is what keeps system loosely coupled enabling us to deliver features",
    "start": "2297040",
    "end": "2303820"
  },
  {
    "text": "faster so what's fascinating about this is that locality of change it's not just",
    "start": "2303820",
    "end": "2310090"
  },
  {
    "text": "a technical property it's something that's fundamental to the business as well its locality on all levels that",
    "start": "2310090",
    "end": "2316060"
  },
  {
    "text": "help us meet fingers do things like time to market to explore new features to do experiments and locality of change",
    "start": "2316060",
    "end": "2323470"
  },
  {
    "text": "implies an alignment between our architecture our organization our",
    "start": "2323470",
    "end": "2328839"
  },
  {
    "text": "teams and the business problem we are trying to solve and using a change",
    "start": "2328839",
    "end": "2334450"
  },
  {
    "text": "capping analysis like that we can identify dependencies that violate the",
    "start": "2334450",
    "end": "2339969"
  },
  {
    "text": "locality of change principle now once we have identified those so here we have",
    "start": "2339969",
    "end": "2345729"
  },
  {
    "text": "Roscoe and bakery for example once we have identified those we need to dig deeper and make this information actionable and try to find insights into",
    "start": "2345729",
    "end": "2352900"
  },
  {
    "text": "why does this happened and so far I have",
    "start": "2352900",
    "end": "2358329"
  },
  {
    "text": "ripped through a number of open-source code bases so I think it's at this point it's only fair that I start to criticize",
    "start": "2358329",
    "end": "2365109"
  },
  {
    "text": "my own code so let's have a look at the system I worked with a couple of years",
    "start": "2365109",
    "end": "2370210"
  },
  {
    "text": "ago this is part of what later became codes in so what's fascinating with",
    "start": "2370210",
    "end": "2376599"
  },
  {
    "text": "change coupling is that you can do it in any level of detail you want and what I",
    "start": "2376599",
    "end": "2382569"
  },
  {
    "text": "do when I find a dependency between different architectural elements is that I do the same change capping analysis on",
    "start": "2382569",
    "end": "2387849"
  },
  {
    "text": "a file level and again we are in version control wonderland so we can do language",
    "start": "2387849",
    "end": "2393880"
  },
  {
    "text": "neutral analyzes so in this case we see we have a dependency between a piece of code implement in JavaScript part of the",
    "start": "2393880",
    "end": "2400660"
  },
  {
    "text": "front-end that changes together with some closure code running on a back-end now when I saw this and did this",
    "start": "2400660",
    "end": "2408640"
  },
  {
    "text": "analysis the first time I get surprised and the reason I got surprised is because I happen to know that the code",
    "start": "2408640",
    "end": "2414759"
  },
  {
    "text": "is actually structured this way there is some distance it's a kind of architectural distance between the two",
    "start": "2414759",
    "end": "2421539"
  },
  {
    "text": "units that change together one of them is front-end code in one gate repository",
    "start": "2421539",
    "end": "2427660"
  },
  {
    "text": "and the other one is part of the actual analysis stuff that pulls out data from git and does some calculations on it but",
    "start": "2427660",
    "end": "2434349"
  },
  {
    "text": "as you see there is some architectural distance between them so this was surprising to me and as you know",
    "start": "2434349",
    "end": "2440410"
  },
  {
    "text": "surprise is never a good thing in a software architecture right might well be one of the most important most",
    "start": "2440410",
    "end": "2447069"
  },
  {
    "text": "expensive things you can put into it so what I did when I found this was that in",
    "start": "2447069",
    "end": "2453069"
  },
  {
    "text": "order to make this actionable I wanted to figure out okay so I know this relationship between the files but what",
    "start": "2453069",
    "end": "2459130"
  },
  {
    "text": "functions actually change together so I did an x-ray and now says here as well and I want to show you",
    "start": "2459130",
    "end": "2465459"
  },
  {
    "text": "how it looks so what I found here was a",
    "start": "2465459",
    "end": "2471390"
  },
  {
    "text": "JavaScript function that changed together with simple specific function in their closure back-end and what I",
    "start": "2471390",
    "end": "2478599"
  },
  {
    "text": "found so fascinating was that when I looked at the code I figured out that the backend code what it did was actually took some data from get did",
    "start": "2478599",
    "end": "2485920"
  },
  {
    "text": "some calculations on it and then it populated a result structure and each time I added something to that result",
    "start": "2485920",
    "end": "2492519"
  },
  {
    "text": "structure I had a predictable change in the user interface as well to visualize it so I",
    "start": "2492519",
    "end": "2498640"
  },
  {
    "text": "know what you're thinking not really a price winning design maybe not so I focus on myself and I thought how can I",
    "start": "2498640",
    "end": "2505089"
  },
  {
    "text": "avoid having those two files coupled to each other the lifetime is coupled so forth maybe we can do something like you",
    "start": "2505089",
    "end": "2511599"
  },
  {
    "text": "know like composite your eyes maybe we can have some intelligent view models that kind of knows how to render",
    "start": "2511599",
    "end": "2517689"
  },
  {
    "text": "themselves and yes we could and if we would implement that that change",
    "start": "2517689",
    "end": "2523059"
  },
  {
    "text": "dependency would actually go away but I don't think that's the right approach",
    "start": "2523059",
    "end": "2529079"
  },
  {
    "text": "because I think by doing that we would again be patching our symptoms and of the real root cause and the reason I say",
    "start": "2529079",
    "end": "2535900"
  },
  {
    "text": "this is because what we have here is a worried classic dependency it's a classic producer-consumer",
    "start": "2535900",
    "end": "2541509"
  },
  {
    "text": "relationship right so it's very common and when I think about it",
    "start": "2541509",
    "end": "2548319"
  },
  {
    "text": "a little bit deeper I kind of realize that those two modules the reason they",
    "start": "2548319",
    "end": "2554289"
  },
  {
    "text": "are kept in separate repositories the reason they're implemented in different programming languages is entirely",
    "start": "2554289",
    "end": "2560049"
  },
  {
    "text": "accidental one of them happens to be code that executes in a web browser so we want it to be JavaScript and the",
    "start": "2560049",
    "end": "2566799"
  },
  {
    "text": "other one is something that executes on a server but that separation is purely accidental it has nothing at all to do",
    "start": "2566799",
    "end": "2572499"
  },
  {
    "text": "with the actual business problem we are trying to solve so I thought what about putting them together let them be part",
    "start": "2572499",
    "end": "2581140"
  },
  {
    "text": "of the same logical component and enable locality of change so I want to leave",
    "start": "2581140",
    "end": "2589119"
  },
  {
    "text": "you with the fact here before I take questions because I do think that in a time to come we need to take this stuff",
    "start": "2589119",
    "end": "2595790"
  },
  {
    "start": "2593000",
    "end": "2686000"
  },
  {
    "text": "and let features Drive architectural building blocks not technology and if we",
    "start": "2595790",
    "end": "2601100"
  },
  {
    "text": "managed to align the boundaries in our architecture of the concepts from the problem domain then we're enabling",
    "start": "2601100",
    "end": "2607580"
  },
  {
    "text": "locality of change which in turn benefits not only lead times but also things like teen coupling and teamwork",
    "start": "2607580",
    "end": "2614170"
  },
  {
    "text": "so locality of change is an enabler and I do think that behaviour code analysis",
    "start": "2614170",
    "end": "2621350"
  },
  {
    "text": "and these techniques for prioritizing technical depth have a place here because they give you insights that you",
    "start": "2621350",
    "end": "2626930"
  },
  {
    "text": "cannot get from the code alone if you look at the code we cannot see change coupling we cannot see social properties",
    "start": "2626930",
    "end": "2632270"
  },
  {
    "text": "and we really really need them to be able to scale up with our systems so the",
    "start": "2632270",
    "end": "2638720"
  },
  {
    "text": "main use case I see for this analysis is that they don't necessarily solve any direct problems what they do is that the",
    "start": "2638720",
    "end": "2645110"
  },
  {
    "text": "help us focus our expertise and our attention to the parts of the system they are likely to need it the most",
    "start": "2645110",
    "end": "2651140"
  },
  {
    "text": "and if you want to read more on this I have my new book software design x-rays",
    "start": "2651140",
    "end": "2656330"
  },
  {
    "text": "I blog regularly at temper calm and Adam Thornhill calm and I'll be hanging",
    "start": "2656330",
    "end": "2662870"
  },
  {
    "text": "around for today and tomorrow so if you have any questions after the talk and be more than happy to discuss",
    "start": "2662870",
    "end": "2668570"
  },
  {
    "text": "it with you now I just want to take this opportunity and say thanks a lot for",
    "start": "2668570",
    "end": "2674060"
  },
  {
    "text": "showing up at my session thanks a lot for listening to me and may the code be with you thank you",
    "start": "2674060",
    "end": "2680970"
  },
  {
    "text": "[Applause]",
    "start": "2680970",
    "end": "2687270"
  }
]