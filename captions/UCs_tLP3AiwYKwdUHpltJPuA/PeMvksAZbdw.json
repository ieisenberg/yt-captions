[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "[Music]",
    "start": "970",
    "end": "7838"
  },
  {
    "text": "hi there",
    "start": "15599",
    "end": "16240"
  },
  {
    "text": "my name is director life and i work as a",
    "start": "16240",
    "end": "18480"
  },
  {
    "text": "developer advocate for ground vm team",
    "start": "18480",
    "end": "20560"
  },
  {
    "text": "for collabs at oracle",
    "start": "20560",
    "end": "23920"
  },
  {
    "text": "i'm very happy to see all of you here",
    "start": "24080",
    "end": "26480"
  },
  {
    "text": "and this is session that go to chicago",
    "start": "26480",
    "end": "28720"
  },
  {
    "text": "and we're going to talk about maximizing",
    "start": "28720",
    "end": "30240"
  },
  {
    "text": "performance with granville",
    "start": "30240",
    "end": "32558"
  },
  {
    "text": "without further ado let's jump into the",
    "start": "32559",
    "end": "34719"
  },
  {
    "text": "slides and then proceed to the demos and",
    "start": "34719",
    "end": "36880"
  },
  {
    "text": "to the questions",
    "start": "36880",
    "end": "45840"
  },
  {
    "text": "maximizing performance with grandview",
    "start": "47120",
    "end": "49360"
  },
  {
    "text": "before we start",
    "start": "49360",
    "end": "50559"
  },
  {
    "text": "this is a technical session so please do",
    "start": "50559",
    "end": "52559"
  },
  {
    "text": "not make any foregoing business",
    "start": "52559",
    "end": "54719"
  },
  {
    "text": "decisions",
    "start": "54719",
    "end": "55360"
  },
  {
    "text": "based on the contents of this",
    "start": "55360",
    "end": "56840"
  },
  {
    "text": "presentation",
    "start": "56840",
    "end": "58399"
  },
  {
    "text": "thank you graeme i hope you've heard of",
    "start": "58399",
    "end": "61760"
  },
  {
    "start": "60000",
    "end": "220000"
  },
  {
    "text": "it",
    "start": "61760",
    "end": "62239"
  },
  {
    "text": "it's a high performance public virtual",
    "start": "62239",
    "end": "65119"
  },
  {
    "text": "machine",
    "start": "65119",
    "end": "66000"
  },
  {
    "text": "that can support many languages it",
    "start": "66000",
    "end": "68880"
  },
  {
    "text": "naturally supports",
    "start": "68880",
    "end": "69920"
  },
  {
    "text": "the jvm languages such as java and scala",
    "start": "69920",
    "end": "72320"
  },
  {
    "text": "and kotlin and groovy enclosure",
    "start": "72320",
    "end": "74479"
  },
  {
    "text": "and we also have support for javascript",
    "start": "74479",
    "end": "76159"
  },
  {
    "text": "and python and ruby and",
    "start": "76159",
    "end": "78240"
  },
  {
    "text": "r uh and webassembly and",
    "start": "78240",
    "end": "81520"
  },
  {
    "text": "llvm bitcode for native languages",
    "start": "81520",
    "end": "84799"
  },
  {
    "text": "it's a it's a polyglot vm so it can",
    "start": "84799",
    "end": "87040"
  },
  {
    "text": "execute program in",
    "start": "87040",
    "end": "88159"
  },
  {
    "text": "all those languages and it also wants to",
    "start": "88159",
    "end": "90880"
  },
  {
    "text": "be higher performance so at the heart of",
    "start": "90880",
    "end": "92640"
  },
  {
    "text": "the graphing project is the graphion jit",
    "start": "92640",
    "end": "94640"
  },
  {
    "text": "compiler",
    "start": "94640",
    "end": "95759"
  },
  {
    "text": "that can both optimize the java byte",
    "start": "95759",
    "end": "98560"
  },
  {
    "text": "code",
    "start": "98560",
    "end": "99040"
  },
  {
    "text": "for the jvm based languages and also",
    "start": "99040",
    "end": "102000"
  },
  {
    "text": "plays",
    "start": "102000",
    "end": "102640"
  },
  {
    "text": "a vital part for optimizing the the",
    "start": "102640",
    "end": "105439"
  },
  {
    "text": "other languages we support",
    "start": "105439",
    "end": "106880"
  },
  {
    "text": "at runtime so for java applications",
    "start": "106880",
    "end": "110799"
  },
  {
    "text": "graphion can offer you two ways to",
    "start": "110799",
    "end": "113360"
  },
  {
    "text": "execute them",
    "start": "113360",
    "end": "114799"
  },
  {
    "text": "it can run with the jet compiler in the",
    "start": "114799",
    "end": "116880"
  },
  {
    "text": "normal jeep mode",
    "start": "116880",
    "end": "118000"
  },
  {
    "text": "which is very similar to what you get",
    "start": "118000",
    "end": "119600"
  },
  {
    "text": "when you run your java application",
    "start": "119600",
    "end": "121200"
  },
  {
    "text": "on the open jdk build right you use",
    "start": "121200",
    "end": "124240"
  },
  {
    "text": "java utility from the distribution and",
    "start": "124240",
    "end": "126159"
  },
  {
    "text": "you just",
    "start": "126159",
    "end": "127360"
  },
  {
    "text": "specify which classes you want to",
    "start": "127360",
    "end": "128959"
  },
  {
    "text": "execute and it runs",
    "start": "128959",
    "end": "130800"
  },
  {
    "text": "and it it starts the jvm with the java",
    "start": "130800",
    "end": "133520"
  },
  {
    "text": "hotspot virtual machine",
    "start": "133520",
    "end": "134959"
  },
  {
    "text": "but in the graviem's case the top tier",
    "start": "134959",
    "end": "137760"
  },
  {
    "text": "optimizing compiler",
    "start": "137760",
    "end": "139280"
  },
  {
    "text": "is replaced with the browser compiler",
    "start": "139280",
    "end": "141200"
  },
  {
    "text": "and that can give you an immense",
    "start": "141200",
    "end": "143200"
  },
  {
    "text": "performance boost and there is also an",
    "start": "143200",
    "end": "145440"
  },
  {
    "text": "option to compile",
    "start": "145440",
    "end": "146560"
  },
  {
    "text": "applications ahead of time and we'll",
    "start": "146560",
    "end": "148080"
  },
  {
    "text": "cover that in the second part of this",
    "start": "148080",
    "end": "150000"
  },
  {
    "text": "application of this presentation",
    "start": "150000",
    "end": "153519"
  },
  {
    "text": "why would you like better performance",
    "start": "153519",
    "end": "155360"
  },
  {
    "text": "right chris newman here on twitter says",
    "start": "155360",
    "end": "157360"
  },
  {
    "text": "that",
    "start": "157360",
    "end": "157840"
  },
  {
    "text": "when his developers are writing code",
    "start": "157840",
    "end": "160000"
  },
  {
    "text": "that that should be performance",
    "start": "160000",
    "end": "162720"
  },
  {
    "text": "aware of the performance implications",
    "start": "162720",
    "end": "164800"
  },
  {
    "text": "right there should be no functional or",
    "start": "164800",
    "end": "167280"
  },
  {
    "text": "object orientation features used",
    "start": "167280",
    "end": "170480"
  },
  {
    "text": "right the code should be as simple as",
    "start": "170480",
    "end": "172160"
  },
  {
    "text": "possible because",
    "start": "172160",
    "end": "173519"
  },
  {
    "text": "it needs to be cast and of course",
    "start": "173519",
    "end": "176959"
  },
  {
    "text": "this this sentiment makes makes us a",
    "start": "176959",
    "end": "180080"
  },
  {
    "text": "little bit sad at the ground liam team",
    "start": "180080",
    "end": "182560"
  },
  {
    "text": "because as the team that creates a",
    "start": "182560",
    "end": "184640"
  },
  {
    "text": "runtime we think that the abstractions",
    "start": "184640",
    "end": "187040"
  },
  {
    "text": "for",
    "start": "187040",
    "end": "187680"
  },
  {
    "text": "uh for free a code should not come with",
    "start": "187680",
    "end": "190879"
  },
  {
    "text": "the performance overhead",
    "start": "190879",
    "end": "192400"
  },
  {
    "text": "right the code that is that looks like",
    "start": "192400",
    "end": "195280"
  },
  {
    "text": "the code that you would",
    "start": "195280",
    "end": "196239"
  },
  {
    "text": "want to write and maintain right",
    "start": "196239",
    "end": "198560"
  },
  {
    "text": "functional code",
    "start": "198560",
    "end": "199519"
  },
  {
    "text": "using objects calling methods",
    "start": "199519",
    "end": "202800"
  },
  {
    "text": "should behave as well as the code that",
    "start": "202800",
    "end": "205920"
  },
  {
    "text": "you manually optimize to be low level",
    "start": "205920",
    "end": "209200"
  },
  {
    "text": "and gravion makes this",
    "start": "209200",
    "end": "212239"
  },
  {
    "text": "much closer to the reality thing that",
    "start": "212239",
    "end": "214799"
  },
  {
    "text": "you would expect",
    "start": "214799",
    "end": "216879"
  },
  {
    "text": "it's fairly easy to you to check it out",
    "start": "216879",
    "end": "219760"
  },
  {
    "text": "so you get started with the chromium",
    "start": "219760",
    "end": "221360"
  },
  {
    "start": "220000",
    "end": "276000"
  },
  {
    "text": "you go to the downloads page on the",
    "start": "221360",
    "end": "223360"
  },
  {
    "text": "website cranium.org",
    "start": "223360",
    "end": "224959"
  },
  {
    "text": "download and then you download the",
    "start": "224959",
    "end": "227599"
  },
  {
    "text": "archive",
    "start": "227599",
    "end": "228159"
  },
  {
    "text": "and then you unpack this archive and",
    "start": "228159",
    "end": "230319"
  },
  {
    "text": "then you put the grammar on the path",
    "start": "230319",
    "end": "233040"
  },
  {
    "text": "which is what you do with it with any uh",
    "start": "233040",
    "end": "236400"
  },
  {
    "text": "jdk distribution nowadays right and then",
    "start": "236400",
    "end": "238640"
  },
  {
    "text": "you export gravity and home and you can",
    "start": "238640",
    "end": "241200"
  },
  {
    "text": "also print java home",
    "start": "241200",
    "end": "242400"
  },
  {
    "text": "to the same directory uh and then you",
    "start": "242400",
    "end": "245599"
  },
  {
    "text": "run your application formally using the",
    "start": "245599",
    "end": "247360"
  },
  {
    "text": "java utility which will be",
    "start": "247360",
    "end": "248959"
  },
  {
    "text": "in the uh bin directory of",
    "start": "248959",
    "end": "252840"
  },
  {
    "text": "graphim and this is a very compatible",
    "start": "252840",
    "end": "255040"
  },
  {
    "text": "mode right",
    "start": "255040",
    "end": "255680"
  },
  {
    "text": "it runs hotspot vm so it runs the the",
    "start": "255680",
    "end": "258720"
  },
  {
    "text": "the same garbage collection that you",
    "start": "258720",
    "end": "260239"
  },
  {
    "text": "would run for running open gtk but the",
    "start": "260239",
    "end": "262400"
  },
  {
    "text": "top tier",
    "start": "262400",
    "end": "263040"
  },
  {
    "text": "optimizing jit compiler right the the",
    "start": "263040",
    "end": "265520"
  },
  {
    "text": "the component that",
    "start": "265520",
    "end": "266960"
  },
  {
    "text": "makes the application go fast is",
    "start": "266960",
    "end": "269120"
  },
  {
    "text": "replaced with the granulom compiler",
    "start": "269120",
    "end": "270720"
  },
  {
    "text": "enabled by default",
    "start": "270720",
    "end": "273280"
  },
  {
    "text": "so that makes your application faster",
    "start": "273280",
    "end": "276160"
  },
  {
    "start": "276000",
    "end": "413000"
  },
  {
    "text": "how much faster you ask",
    "start": "276160",
    "end": "278000"
  },
  {
    "text": "reasonably faster so if we here i would",
    "start": "278000",
    "end": "281360"
  },
  {
    "text": "like to point out",
    "start": "281360",
    "end": "283440"
  },
  {
    "text": "a benchmark suit called renaissance but",
    "start": "283440",
    "end": "286000"
  },
  {
    "text": "it's a it's a newer benchmark sheet that",
    "start": "286000",
    "end": "288240"
  },
  {
    "text": "consists of individual benchmarks uh",
    "start": "288240",
    "end": "291280"
  },
  {
    "text": "from different projects you can see",
    "start": "291280",
    "end": "292800"
  },
  {
    "text": "there are some",
    "start": "292800",
    "end": "293759"
  },
  {
    "text": "stream based benchmarks and some rx",
    "start": "293759",
    "end": "296560"
  },
  {
    "text": "extension reactive",
    "start": "296560",
    "end": "297759"
  },
  {
    "text": "extremes extensions and there was some",
    "start": "297759",
    "end": "299759"
  },
  {
    "text": "new 4g",
    "start": "299759",
    "end": "301120"
  },
  {
    "text": "uh analytics which is a very very memory",
    "start": "301120",
    "end": "303759"
  },
  {
    "text": "heavy",
    "start": "303759",
    "end": "304320"
  },
  {
    "text": "workload and there there was some scala",
    "start": "304320",
    "end": "307039"
  },
  {
    "text": "delties the scholar compiler and there",
    "start": "307039",
    "end": "308720"
  },
  {
    "text": "was some",
    "start": "308720",
    "end": "309680"
  },
  {
    "text": "right those are newer libraries which",
    "start": "309680",
    "end": "311440"
  },
  {
    "text": "were not as popular",
    "start": "311440",
    "end": "313039"
  },
  {
    "text": "maybe 10 15 years ago when when some",
    "start": "313039",
    "end": "316000"
  },
  {
    "text": "other benchmark suits were created",
    "start": "316000",
    "end": "318160"
  },
  {
    "text": "so these would would resemble the",
    "start": "318160",
    "end": "321520"
  },
  {
    "text": "modern java code that you write and use",
    "start": "321520",
    "end": "323919"
  },
  {
    "text": "much more than maybe some other",
    "start": "323919",
    "end": "325199"
  },
  {
    "text": "benchmark suits",
    "start": "325199",
    "end": "326960"
  },
  {
    "text": "so take a look at that and here on the",
    "start": "326960",
    "end": "329120"
  },
  {
    "text": "graph you can see that on average",
    "start": "329120",
    "end": "331520"
  },
  {
    "text": "grammar outperforms the normal open gdk",
    "start": "331520",
    "end": "335680"
  },
  {
    "text": "setup",
    "start": "335680",
    "end": "337120"
  },
  {
    "text": "approximately by 1 30 which is",
    "start": "337120",
    "end": "340240"
  },
  {
    "text": "which is a a non-trivial result",
    "start": "340240",
    "end": "344080"
  },
  {
    "text": "and before we get into benchmark uh",
    "start": "344080",
    "end": "347440"
  },
  {
    "text": "analysis uh i want to tell you this",
    "start": "347440",
    "end": "350320"
  },
  {
    "text": "right",
    "start": "350320",
    "end": "350639"
  },
  {
    "text": "so more benchmarks are always a good",
    "start": "350639",
    "end": "352960"
  },
  {
    "text": "idea",
    "start": "352960",
    "end": "354240"
  },
  {
    "text": "right the more benchmarks you want the",
    "start": "354240",
    "end": "356880"
  },
  {
    "text": "more benchmarks you analyze",
    "start": "356880",
    "end": "358720"
  },
  {
    "text": "the better you can understand what are",
    "start": "358720",
    "end": "360880"
  },
  {
    "text": "the implications for the real world",
    "start": "360880",
    "end": "362639"
  },
  {
    "text": "are of course you have to be very",
    "start": "362639",
    "end": "364720"
  },
  {
    "text": "careful with conclusions right you",
    "start": "364720",
    "end": "366160"
  },
  {
    "text": "cannot just extrapolate from a single",
    "start": "366160",
    "end": "367919"
  },
  {
    "text": "danger",
    "start": "367919",
    "end": "368400"
  },
  {
    "text": "because that doesn't make much sense",
    "start": "368400",
    "end": "370720"
  },
  {
    "text": "right and in this number",
    "start": "370720",
    "end": "372000"
  },
  {
    "text": "like 30 percent faster does it mean that",
    "start": "372000",
    "end": "374560"
  },
  {
    "text": "it will",
    "start": "374560",
    "end": "375039"
  },
  {
    "text": "be this much faster on your workload no",
    "start": "375039",
    "end": "377600"
  },
  {
    "text": "it's not it could be",
    "start": "377600",
    "end": "378800"
  },
  {
    "text": "it could be a lower balance it could be",
    "start": "378800",
    "end": "380400"
  },
  {
    "text": "an upper bound it could be like a",
    "start": "380400",
    "end": "382400"
  },
  {
    "text": "a number uh that doesn't",
    "start": "382400",
    "end": "385919"
  },
  {
    "text": "mean much for your particular workload",
    "start": "385919",
    "end": "388720"
  },
  {
    "text": "but what it means",
    "start": "388720",
    "end": "390080"
  },
  {
    "text": "it means that you should absolutely take",
    "start": "390080",
    "end": "392080"
  },
  {
    "text": "a look at that it's a non-trivial",
    "start": "392080",
    "end": "393759"
  },
  {
    "text": "performance boost",
    "start": "393759",
    "end": "394800"
  },
  {
    "text": "so you should you should get interested",
    "start": "394800",
    "end": "396880"
  },
  {
    "text": "about this and then you should try",
    "start": "396880",
    "end": "398560"
  },
  {
    "text": "growling",
    "start": "398560",
    "end": "399199"
  },
  {
    "text": "on your code or like a sample code that",
    "start": "399199",
    "end": "402080"
  },
  {
    "text": "resembles your code",
    "start": "402080",
    "end": "403840"
  },
  {
    "text": "because only then you will see the",
    "start": "403840",
    "end": "406000"
  },
  {
    "text": "results that you can get",
    "start": "406000",
    "end": "408479"
  },
  {
    "text": "having said all that i'm going to show",
    "start": "408479",
    "end": "409759"
  },
  {
    "text": "you another benchmark i'm going to show",
    "start": "409759",
    "end": "412000"
  },
  {
    "text": "you another",
    "start": "412000",
    "end": "412880"
  },
  {
    "text": "micro benchmark which hopefully will",
    "start": "412880",
    "end": "415919"
  },
  {
    "start": "413000",
    "end": "647000"
  },
  {
    "text": "illustrate the point of uh being able to",
    "start": "415919",
    "end": "420000"
  },
  {
    "text": "optimize more highly high-level abstract",
    "start": "420000",
    "end": "423120"
  },
  {
    "text": "code",
    "start": "423120",
    "end": "423759"
  },
  {
    "text": "better than other compilers so it's a",
    "start": "423759",
    "end": "426400"
  },
  {
    "text": "micro benchmark so don't take it",
    "start": "426400",
    "end": "428400"
  },
  {
    "text": "don't take it super seriously here uh",
    "start": "428400",
    "end": "431199"
  },
  {
    "text": "and it's fairly small what we do",
    "start": "431199",
    "end": "433199"
  },
  {
    "text": "is we compute the hash code of of some",
    "start": "433199",
    "end": "436240"
  },
  {
    "text": "fields",
    "start": "436240",
    "end": "437759"
  },
  {
    "text": "so in the raw version we manually",
    "start": "437759",
    "end": "440800"
  },
  {
    "text": "optimize it",
    "start": "440800",
    "end": "441680"
  },
  {
    "text": "to use low level mass so we know that",
    "start": "441680",
    "end": "444160"
  },
  {
    "text": "this those are just printer fields so we",
    "start": "444160",
    "end": "446080"
  },
  {
    "text": "can just",
    "start": "446080",
    "end": "446960"
  },
  {
    "text": "uh multiply them by by a constant and",
    "start": "446960",
    "end": "450960"
  },
  {
    "text": "shift them and add them together to get",
    "start": "450960",
    "end": "452800"
  },
  {
    "text": "an integer hash code",
    "start": "452800",
    "end": "455280"
  },
  {
    "text": "now the normal version how you and i",
    "start": "455280",
    "end": "457199"
  },
  {
    "text": "would write this code normally in our",
    "start": "457199",
    "end": "459039"
  },
  {
    "text": "applications",
    "start": "459039",
    "end": "459840"
  },
  {
    "text": "would be just to call objects.hash",
    "start": "459840",
    "end": "462160"
  },
  {
    "text": "function and pass all the data in it",
    "start": "462160",
    "end": "465120"
  },
  {
    "text": "if you don't know what it does it",
    "start": "465120",
    "end": "467199"
  },
  {
    "text": "creates a variety",
    "start": "467199",
    "end": "468479"
  },
  {
    "text": "of the objects and then it calls to",
    "start": "468479",
    "end": "471199"
  },
  {
    "text": "erase hashcode with that array",
    "start": "471199",
    "end": "474639"
  },
  {
    "text": "natalie ray is checked for null and then",
    "start": "474639",
    "end": "477280"
  },
  {
    "text": "iterate it",
    "start": "477280",
    "end": "478080"
  },
  {
    "text": "and the actual mathematical uh",
    "start": "478080",
    "end": "481759"
  },
  {
    "text": "operation is kind of the same so we l",
    "start": "481759",
    "end": "483919"
  },
  {
    "text": "integrate the",
    "start": "483919",
    "end": "484800"
  },
  {
    "text": "array and we multiply by 31 and then we",
    "start": "484800",
    "end": "487680"
  },
  {
    "text": "add the values together",
    "start": "487680",
    "end": "490960"
  },
  {
    "text": "and then we'll return that so the code",
    "start": "491039",
    "end": "493280"
  },
  {
    "text": "is doing the same thing",
    "start": "493280",
    "end": "494720"
  },
  {
    "text": "but object.hash much more abstracted",
    "start": "494720",
    "end": "497919"
  },
  {
    "text": "away",
    "start": "497919",
    "end": "498479"
  },
  {
    "text": "version of the same operation right",
    "start": "498479",
    "end": "500639"
  },
  {
    "text": "there's an array creation there is a",
    "start": "500639",
    "end": "502720"
  },
  {
    "text": "null check the reiteration of the array",
    "start": "502720",
    "end": "505680"
  },
  {
    "text": "can growl vm",
    "start": "505680",
    "end": "506720"
  },
  {
    "text": "run this code with a similar performance",
    "start": "506720",
    "end": "509039"
  },
  {
    "text": "as the raw version",
    "start": "509039",
    "end": "510639"
  },
  {
    "text": "let's check it out let's check it out i",
    "start": "510639",
    "end": "512880"
  },
  {
    "text": "have a terminal here",
    "start": "512880",
    "end": "514399"
  },
  {
    "text": "and i can tell you that uh",
    "start": "514399",
    "end": "518399"
  },
  {
    "text": "oh boy which java that my java comes",
    "start": "518399",
    "end": "521839"
  },
  {
    "text": "from the gravity and distribution",
    "start": "521839",
    "end": "523680"
  },
  {
    "text": "and you can see that this is a uh",
    "start": "523680",
    "end": "527440"
  },
  {
    "text": "java 8 based version right so it is",
    "start": "527440",
    "end": "530160"
  },
  {
    "text": "based on the javascript vm",
    "start": "530160",
    "end": "532399"
  },
  {
    "text": "coming from qualium and i will run this",
    "start": "532399",
    "end": "534560"
  },
  {
    "text": "benchmark",
    "start": "534560",
    "end": "535680"
  },
  {
    "text": "uh with java minus jar target",
    "start": "535680",
    "end": "539440"
  },
  {
    "text": "benchmarks uh jar and then what we do",
    "start": "539440",
    "end": "542959"
  },
  {
    "text": "objects hash right uh we want this is a",
    "start": "542959",
    "end": "546880"
  },
  {
    "text": "micro benchmark so it will run for 20",
    "start": "546880",
    "end": "548880"
  },
  {
    "text": "seconds",
    "start": "548880",
    "end": "549680"
  },
  {
    "text": "uh i don't want to claim that this is a",
    "start": "549680",
    "end": "551440"
  },
  {
    "text": "rigorous result or a rigorous",
    "start": "551440",
    "end": "553360"
  },
  {
    "text": "performance uh evaluation environment",
    "start": "553360",
    "end": "555920"
  },
  {
    "text": "though it runs on a",
    "start": "555920",
    "end": "557200"
  },
  {
    "text": "particularly leafy machine which uh",
    "start": "557200",
    "end": "560720"
  },
  {
    "text": "not the super large but it has like",
    "start": "560720",
    "end": "563440"
  },
  {
    "text": "threads and it has a lot of ram memory",
    "start": "563440",
    "end": "565839"
  },
  {
    "text": "and so on",
    "start": "565839",
    "end": "566959"
  },
  {
    "text": "so what i want you to",
    "start": "566959",
    "end": "570080"
  },
  {
    "text": "look at is the numbers here",
    "start": "570080",
    "end": "573279"
  },
  {
    "text": "right so what we see is that the score",
    "start": "573279",
    "end": "576320"
  },
  {
    "text": "the score for the abstracted version is",
    "start": "576320",
    "end": "579440"
  },
  {
    "text": "very similar to the score for the raw",
    "start": "579440",
    "end": "581519"
  },
  {
    "text": "version",
    "start": "581519",
    "end": "583120"
  },
  {
    "text": "right they're practically uh equal",
    "start": "583120",
    "end": "586880"
  },
  {
    "text": "especially giving the the the scorer",
    "start": "586880",
    "end": "589920"
  },
  {
    "text": "for uh such a short benchmark run",
    "start": "589920",
    "end": "593440"
  },
  {
    "text": "right what it means that the the gravim",
    "start": "593440",
    "end": "595600"
  },
  {
    "text": "the code",
    "start": "595600",
    "end": "596560"
  },
  {
    "text": "that is more abstract and the good that",
    "start": "596560",
    "end": "598240"
  },
  {
    "text": "you want to maintain in your code base",
    "start": "598240",
    "end": "600640"
  },
  {
    "text": "performs the same as the code that you",
    "start": "600640",
    "end": "602640"
  },
  {
    "text": "manually optimize",
    "start": "602640",
    "end": "604959"
  },
  {
    "text": "this means that you don't have to get",
    "start": "604959",
    "end": "607519"
  },
  {
    "text": "rid of the abstractions",
    "start": "607519",
    "end": "610000"
  },
  {
    "text": "which is a very very good benefit i",
    "start": "610000",
    "end": "612399"
  },
  {
    "text": "won't i won't",
    "start": "612399",
    "end": "613279"
  },
  {
    "text": "run this benchmark on any other jvm",
    "start": "613279",
    "end": "616720"
  },
  {
    "text": "i don't want to start the benchmark war",
    "start": "616720",
    "end": "619279"
  },
  {
    "text": "here",
    "start": "619279",
    "end": "619760"
  },
  {
    "text": "but i would just want to tell you that",
    "start": "619760",
    "end": "622000"
  },
  {
    "text": "the normally if you run this on low",
    "start": "622000",
    "end": "623680"
  },
  {
    "text": "conjugate you will see a much lower",
    "start": "623680",
    "end": "625519"
  },
  {
    "text": "score for the abstract",
    "start": "625519",
    "end": "626560"
  },
  {
    "text": "version right it will regress as you",
    "start": "626560",
    "end": "628959"
  },
  {
    "text": "introduce new abstractions",
    "start": "628959",
    "end": "630880"
  },
  {
    "text": "so this is this is this is an",
    "start": "630880",
    "end": "633120"
  },
  {
    "text": "illustration",
    "start": "633120",
    "end": "634000"
  },
  {
    "text": "of the abstractions coming without",
    "start": "634000",
    "end": "636560"
  },
  {
    "text": "performance penalty",
    "start": "636560",
    "end": "638079"
  },
  {
    "text": "uh when you run your code on the ground",
    "start": "638079",
    "end": "640160"
  },
  {
    "text": "vm",
    "start": "640160",
    "end": "642079"
  },
  {
    "text": "let's go back to the slides quickly",
    "start": "642079",
    "end": "644640"
  },
  {
    "text": "right",
    "start": "644640",
    "end": "645200"
  },
  {
    "text": "uh let's talk about ahead of time",
    "start": "645200",
    "end": "648399"
  },
  {
    "start": "647000",
    "end": "801000"
  },
  {
    "text": "compilation versus",
    "start": "648399",
    "end": "649920"
  },
  {
    "text": "running with a gen so ahead of time",
    "start": "649920",
    "end": "652480"
  },
  {
    "text": "compilation",
    "start": "652480",
    "end": "653120"
  },
  {
    "text": "is an interesting concept it can give",
    "start": "653120",
    "end": "655120"
  },
  {
    "text": "you some performance benefits",
    "start": "655120",
    "end": "656399"
  },
  {
    "text": "but you need to understand what we're",
    "start": "656399",
    "end": "658240"
  },
  {
    "text": "talking about so normally when we talk",
    "start": "658240",
    "end": "660240"
  },
  {
    "text": "about",
    "start": "660240",
    "end": "660560"
  },
  {
    "text": "jet the jit setup is optimized for peak",
    "start": "660560",
    "end": "663680"
  },
  {
    "text": "throughput",
    "start": "663680",
    "end": "664240"
  },
  {
    "text": "so when the code is warmed up and",
    "start": "664240",
    "end": "666000"
  },
  {
    "text": "everything is compiled",
    "start": "666000",
    "end": "667519"
  },
  {
    "text": "then it will run absolutely as a beast",
    "start": "667519",
    "end": "670320"
  },
  {
    "text": "it will run",
    "start": "670320",
    "end": "671040"
  },
  {
    "text": "really really good and obviously the",
    "start": "671040",
    "end": "674240"
  },
  {
    "text": "tail latency will be quite good because",
    "start": "674240",
    "end": "675839"
  },
  {
    "text": "the peak throughput is is is really nice",
    "start": "675839",
    "end": "679120"
  },
  {
    "text": "so the aot optimizes in a different",
    "start": "679120",
    "end": "681680"
  },
  {
    "text": "dimension",
    "start": "681680",
    "end": "682560"
  },
  {
    "text": "so when you compile your hood a head",
    "start": "682560",
    "end": "684000"
  },
  {
    "text": "code ahead of time you cannot apply all",
    "start": "684000",
    "end": "686160"
  },
  {
    "text": "the speculative optimizations that jit",
    "start": "686160",
    "end": "687920"
  },
  {
    "text": "has",
    "start": "687920",
    "end": "688399"
  },
  {
    "text": "access to right so you might not see the",
    "start": "688399",
    "end": "691200"
  },
  {
    "text": "big throughput as great",
    "start": "691200",
    "end": "692800"
  },
  {
    "text": "but you will get a better startup speed",
    "start": "692800",
    "end": "694959"
  },
  {
    "text": "because you don't need to warp things up",
    "start": "694959",
    "end": "696880"
  },
  {
    "text": "you get a much better memory footprint",
    "start": "696880",
    "end": "699519"
  },
  {
    "text": "because you don't have to allocate",
    "start": "699519",
    "end": "700959"
  },
  {
    "text": "memory for digital purposes",
    "start": "700959",
    "end": "703440"
  },
  {
    "text": "and you can get a much smaller packaging",
    "start": "703440",
    "end": "705120"
  },
  {
    "text": "numbers",
    "start": "705120",
    "end": "706560"
  },
  {
    "text": "luckily you don't have to choose with",
    "start": "706560",
    "end": "708399"
  },
  {
    "text": "the guarantee because",
    "start": "708399",
    "end": "709600"
  },
  {
    "text": "drawing offers you both choices there is",
    "start": "709600",
    "end": "711600"
  },
  {
    "text": "a way to run it with a jet",
    "start": "711600",
    "end": "713519"
  },
  {
    "text": "and there is a way to run as ahead of",
    "start": "713519",
    "end": "715120"
  },
  {
    "text": "time compiled application",
    "start": "715120",
    "end": "717040"
  },
  {
    "text": "there's the utility called native",
    "start": "717040",
    "end": "718320"
  },
  {
    "text": "english and you can feed your classes",
    "start": "718320",
    "end": "719920"
  },
  {
    "text": "into that",
    "start": "719920",
    "end": "720800"
  },
  {
    "text": "and then it will encourage the classes",
    "start": "720800",
    "end": "722399"
  },
  {
    "text": "compile them and output the platform",
    "start": "722399",
    "end": "724240"
  },
  {
    "text": "dependent binary for you",
    "start": "724240",
    "end": "726959"
  },
  {
    "text": "it will run under the closed world",
    "start": "726959",
    "end": "728959"
  },
  {
    "text": "assumption which is very important",
    "start": "728959",
    "end": "731040"
  },
  {
    "text": "right it will ask you to provide all the",
    "start": "731040",
    "end": "732959"
  },
  {
    "text": "byte codes that will ever be executed on",
    "start": "732959",
    "end": "734959"
  },
  {
    "text": "the ground only in this application",
    "start": "734959",
    "end": "737279"
  },
  {
    "text": "this will make possible to have",
    "start": "737279",
    "end": "738720"
  },
  {
    "text": "aggressive optimizations that will",
    "start": "738720",
    "end": "740720"
  },
  {
    "text": "otherwise",
    "start": "740720",
    "end": "742399"
  },
  {
    "text": "will require some speculation but",
    "start": "742399",
    "end": "745760"
  },
  {
    "text": "it will also disable the loading new",
    "start": "745760",
    "end": "747519"
  },
  {
    "text": "classes at random because it needs to",
    "start": "747519",
    "end": "749120"
  },
  {
    "text": "see all the bytecode",
    "start": "749120",
    "end": "750240"
  },
  {
    "text": "that will ever run that will allow us to",
    "start": "750240",
    "end": "753360"
  },
  {
    "text": "remove the jit facility and when you",
    "start": "753360",
    "end": "756160"
  },
  {
    "text": "start the application not allocate",
    "start": "756160",
    "end": "757839"
  },
  {
    "text": "memory for jit",
    "start": "757839",
    "end": "758880"
  },
  {
    "text": "whatsoever bringing the memory footprint",
    "start": "758880",
    "end": "761279"
  },
  {
    "text": "much lower",
    "start": "761279",
    "end": "763279"
  },
  {
    "text": "i think i've seen the examples of native",
    "start": "763279",
    "end": "765040"
  },
  {
    "text": "images volume native images running with",
    "start": "765040",
    "end": "767360"
  },
  {
    "text": "as low as like consuming four megabytes",
    "start": "767360",
    "end": "769440"
  },
  {
    "text": "of ram",
    "start": "769440",
    "end": "771040"
  },
  {
    "text": "which is a great result so what happens",
    "start": "771040",
    "end": "773360"
  },
  {
    "text": "in background",
    "start": "773360",
    "end": "774240"
  },
  {
    "text": "is it takes your application it takes",
    "start": "774240",
    "end": "776240"
  },
  {
    "text": "your libraries it takes the classes from",
    "start": "776240",
    "end": "778079"
  },
  {
    "text": "jdk that you're using",
    "start": "778079",
    "end": "779279"
  },
  {
    "text": "it takes the gc and some other runtime",
    "start": "779279",
    "end": "781920"
  },
  {
    "text": "implementation bits from the project",
    "start": "781920",
    "end": "783839"
  },
  {
    "text": "uh within gravia and it will",
    "start": "783839",
    "end": "787760"
  },
  {
    "text": "take all the java code initialize the",
    "start": "787760",
    "end": "789839"
  },
  {
    "text": "classes",
    "start": "789839",
    "end": "790880"
  },
  {
    "text": "create the object graph compile the code",
    "start": "790880",
    "end": "793680"
  },
  {
    "text": "take the snapshot of the heap",
    "start": "793680",
    "end": "795360"
  },
  {
    "text": "and then write it out in the native",
    "start": "795360",
    "end": "797680"
  },
  {
    "text": "battery",
    "start": "797680",
    "end": "798959"
  },
  {
    "text": "let me show you how it works if i go",
    "start": "798959",
    "end": "802160"
  },
  {
    "start": "801000",
    "end": "1047000"
  },
  {
    "text": "back to my application here",
    "start": "802160",
    "end": "803920"
  },
  {
    "text": "uh i can i can show you a different a",
    "start": "803920",
    "end": "807040"
  },
  {
    "text": "different example",
    "start": "807040",
    "end": "808240"
  },
  {
    "text": "so i hear what i have here is a",
    "start": "808240",
    "end": "810800"
  },
  {
    "text": "micronaut",
    "start": "810800",
    "end": "811440"
  },
  {
    "text": "application it's a micro not application",
    "start": "811440",
    "end": "814160"
  },
  {
    "text": "it's a macro node is a framework for",
    "start": "814160",
    "end": "816079"
  },
  {
    "text": "applications",
    "start": "816079",
    "end": "816880"
  },
  {
    "text": "so what we can do here is we can have a",
    "start": "816880",
    "end": "819839"
  },
  {
    "text": "controller",
    "start": "819839",
    "end": "820560"
  },
  {
    "text": "and our controller will simulate",
    "start": "820560",
    "end": "822160"
  },
  {
    "text": "business logic by computing prime",
    "start": "822160",
    "end": "823839"
  },
  {
    "text": "numbers",
    "start": "823839",
    "end": "825199"
  },
  {
    "text": "right what it will do it will",
    "start": "825199",
    "end": "828880"
  },
  {
    "text": "just accept the hdb queries right and",
    "start": "828880",
    "end": "831920"
  },
  {
    "text": "then it will compute the prime numbers",
    "start": "831920",
    "end": "833600"
  },
  {
    "text": "and then it will return the the sequence",
    "start": "833600",
    "end": "836399"
  },
  {
    "text": "of",
    "start": "836399",
    "end": "836800"
  },
  {
    "text": "uh integer so longs back to the browser",
    "start": "836800",
    "end": "841199"
  },
  {
    "text": "this is what we're going to see and i'm",
    "start": "841199",
    "end": "843279"
  },
  {
    "text": "going to start this application",
    "start": "843279",
    "end": "845760"
  },
  {
    "text": "uh in my terminal right here right so",
    "start": "845760",
    "end": "848720"
  },
  {
    "text": "you can see",
    "start": "848720",
    "end": "849279"
  },
  {
    "text": "this is a normal uh application and then",
    "start": "849279",
    "end": "853120"
  },
  {
    "text": "i've built it before so whatever can do",
    "start": "853120",
    "end": "855040"
  },
  {
    "text": "i can run it between my with my with my",
    "start": "855040",
    "end": "858079"
  },
  {
    "text": "java right and so just no cheating see",
    "start": "858079",
    "end": "861680"
  },
  {
    "text": "which java this is still my java and i",
    "start": "861680",
    "end": "864639"
  },
  {
    "text": "also",
    "start": "864639",
    "end": "865600"
  },
  {
    "text": "can show you that my native image",
    "start": "865600",
    "end": "867519"
  },
  {
    "text": "utility sits",
    "start": "867519",
    "end": "868880"
  },
  {
    "text": "in the same thing in the same",
    "start": "868880",
    "end": "870480"
  },
  {
    "text": "distribution right i can",
    "start": "870480",
    "end": "872480"
  },
  {
    "text": "it's it's available by the same path so",
    "start": "872480",
    "end": "875519"
  },
  {
    "text": "what you can do now i can do java minus",
    "start": "875519",
    "end": "877519"
  },
  {
    "text": "jar",
    "start": "877519",
    "end": "878480"
  },
  {
    "text": "build slash lips micro nut example",
    "start": "878480",
    "end": "881920"
  },
  {
    "text": "old jar it's an application it starts",
    "start": "881920",
    "end": "885519"
  },
  {
    "text": "uh it starts it's a local host it takes",
    "start": "885519",
    "end": "888560"
  },
  {
    "text": "a little bit more than one half seconds",
    "start": "888560",
    "end": "891680"
  },
  {
    "text": "to start",
    "start": "891680",
    "end": "892880"
  },
  {
    "text": "and i can do if i click split my screen",
    "start": "892880",
    "end": "896800"
  },
  {
    "text": "i can curl right i can curl the",
    "start": "896800",
    "end": "902240"
  },
  {
    "text": "local host",
    "start": "902240",
    "end": "903300"
  },
  {
    "text": "[Music]",
    "start": "903300",
    "end": "905279"
  },
  {
    "text": "i will curl the localhost",
    "start": "905279",
    "end": "909120"
  },
  {
    "text": "8080 primes and say we'll compute the",
    "start": "909120",
    "end": "912320"
  },
  {
    "text": "price from two",
    "start": "912320",
    "end": "913360"
  },
  {
    "text": "to a hundred to ten",
    "start": "913360",
    "end": "916399"
  },
  {
    "text": "from t to ten or from two to hundred",
    "start": "916399",
    "end": "920639"
  },
  {
    "text": "we get and we see the prime's numbers",
    "start": "920639",
    "end": "922399"
  },
  {
    "text": "back",
    "start": "922399",
    "end": "923680"
  },
  {
    "text": "so this is the application and if we",
    "start": "923680",
    "end": "927839"
  },
  {
    "text": "if we try the the",
    "start": "927839",
    "end": "931920"
  },
  {
    "text": "memory usage of this application gps",
    "start": "931920",
    "end": "935040"
  },
  {
    "text": "uh we see that twenty eight three",
    "start": "935040",
    "end": "938399"
  },
  {
    "text": "nine if we see the memory requirements",
    "start": "938399",
    "end": "940480"
  },
  {
    "text": "for this uh",
    "start": "940480",
    "end": "941920"
  },
  {
    "text": "then with the huge small utility twenty",
    "start": "941920",
    "end": "945600"
  },
  {
    "text": "eight three nine you can see that it",
    "start": "945600",
    "end": "947920"
  },
  {
    "text": "takes approximately without any",
    "start": "947920",
    "end": "949360"
  },
  {
    "text": "configuration",
    "start": "949360",
    "end": "950079"
  },
  {
    "text": "it takes approximately 400 megabytes of",
    "start": "950079",
    "end": "952000"
  },
  {
    "text": "ram which is quite a bit for the for the",
    "start": "952000",
    "end": "954160"
  },
  {
    "text": "small application",
    "start": "954160",
    "end": "955519"
  },
  {
    "text": "right so what i can do here",
    "start": "955519",
    "end": "958560"
  },
  {
    "text": "is i can of course uh stop this",
    "start": "958560",
    "end": "961920"
  },
  {
    "text": "application",
    "start": "961920",
    "end": "962880"
  },
  {
    "text": "and i have compiled this uh application",
    "start": "962880",
    "end": "966560"
  },
  {
    "text": "into your platform binary we're using",
    "start": "966560",
    "end": "968480"
  },
  {
    "text": "native image by using native image",
    "start": "968480",
    "end": "970399"
  },
  {
    "text": "commands and",
    "start": "970399",
    "end": "971040"
  },
  {
    "text": "feeding it the uh the",
    "start": "971040",
    "end": "974560"
  },
  {
    "text": "jar file right it is a 60 megabyte file",
    "start": "974560",
    "end": "978480"
  },
  {
    "text": "which is not uh as little as a jar file",
    "start": "978480",
    "end": "981279"
  },
  {
    "text": "but it doesn't depend",
    "start": "981279",
    "end": "982000"
  },
  {
    "text": "on the jvm right so i can do",
    "start": "982000",
    "end": "985839"
  },
  {
    "text": "microsoft uh micros example",
    "start": "985839",
    "end": "989440"
  },
  {
    "text": "right you can see that this my current",
    "start": "989440",
    "end": "991120"
  },
  {
    "text": "example file is linked",
    "start": "991120",
    "end": "992800"
  },
  {
    "text": "across the to the operating system",
    "start": "992800",
    "end": "995839"
  },
  {
    "text": "libraries",
    "start": "995839",
    "end": "997519"
  },
  {
    "text": "so what i'm going to run this now i'm",
    "start": "997519",
    "end": "999360"
  },
  {
    "text": "going to run this microphone example",
    "start": "999360",
    "end": "1001040"
  },
  {
    "text": "and it starts and it starts you can see",
    "start": "1001040",
    "end": "1003440"
  },
  {
    "text": "in a working 22",
    "start": "1003440",
    "end": "1005519"
  },
  {
    "text": "milliseconds and it can do the core",
    "start": "1005519",
    "end": "1007600"
  },
  {
    "text": "thing again",
    "start": "1007600",
    "end": "1008560"
  },
  {
    "text": "right and it runs and it responds really",
    "start": "1008560",
    "end": "1010399"
  },
  {
    "text": "fast because it doesn't require warming",
    "start": "1010399",
    "end": "1012079"
  },
  {
    "text": "up",
    "start": "1012079",
    "end": "1012880"
  },
  {
    "text": "uh and if i look at the at the",
    "start": "1012880",
    "end": "1018000"
  },
  {
    "text": "uh at the memory right at the memory",
    "start": "1018160",
    "end": "1020240"
  },
  {
    "text": "command for the micro nut",
    "start": "1020240",
    "end": "1022000"
  },
  {
    "text": "uh process then you can see it's 47",
    "start": "1022000",
    "end": "1024240"
  },
  {
    "text": "megabytes",
    "start": "1024240",
    "end": "1025839"
  },
  {
    "text": "this is a as a spectacular result and i",
    "start": "1025839",
    "end": "1028319"
  },
  {
    "text": "can put this file into a very minimal",
    "start": "1028319",
    "end": "1030319"
  },
  {
    "text": "docker image",
    "start": "1030319",
    "end": "1031438"
  },
  {
    "text": "uh and have the container that will",
    "start": "1031439",
    "end": "1033520"
  },
  {
    "text": "start almost instantly",
    "start": "1033520",
    "end": "1035760"
  },
  {
    "text": "and and have these startup times and",
    "start": "1035760",
    "end": "1037520"
  },
  {
    "text": "memory consumption of",
    "start": "1037520",
    "end": "1038959"
  },
  {
    "text": "services written in go or node.js or",
    "start": "1038959",
    "end": "1042079"
  },
  {
    "text": "similar languages so this is a great way",
    "start": "1042079",
    "end": "1044720"
  },
  {
    "text": "to run your applications",
    "start": "1044720",
    "end": "1047678"
  },
  {
    "start": "1047000",
    "end": "1077000"
  },
  {
    "text": "here's we we have a graph that that",
    "start": "1047679",
    "end": "1050240"
  },
  {
    "text": "shows the difference between",
    "start": "1050240",
    "end": "1052240"
  },
  {
    "text": "uh the aot uh execution mode and with",
    "start": "1052240",
    "end": "1055919"
  },
  {
    "text": "the jet",
    "start": "1055919",
    "end": "1056640"
  },
  {
    "text": "and you can see the main thing is you",
    "start": "1056640",
    "end": "1058960"
  },
  {
    "text": "saw the differences in memory",
    "start": "1058960",
    "end": "1060400"
  },
  {
    "text": "consumption",
    "start": "1060400",
    "end": "1061280"
  },
  {
    "text": "but also the cpu consumption when you",
    "start": "1061280",
    "end": "1063280"
  },
  {
    "text": "run in legit mode",
    "start": "1063280",
    "end": "1065039"
  },
  {
    "text": "it has quite a bit of cpu usage on the",
    "start": "1065039",
    "end": "1067919"
  },
  {
    "text": "startup and warm-up",
    "start": "1067919",
    "end": "1070880"
  },
  {
    "text": "granum console is a large ecosystem and",
    "start": "1071120",
    "end": "1073440"
  },
  {
    "text": "the growing ecosystem of",
    "start": "1073440",
    "end": "1074799"
  },
  {
    "text": "libraries that support native images",
    "start": "1074799",
    "end": "1076720"
  },
  {
    "text": "including spring boot",
    "start": "1076720",
    "end": "1078400"
  },
  {
    "start": "1077000",
    "end": "1185000"
  },
  {
    "text": "where the active work is happening to",
    "start": "1078400",
    "end": "1080400"
  },
  {
    "text": "support the gravity of nature images",
    "start": "1080400",
    "end": "1082559"
  },
  {
    "text": "and the benefits that it gives you are",
    "start": "1082559",
    "end": "1085039"
  },
  {
    "text": "almost universal across",
    "start": "1085039",
    "end": "1086640"
  },
  {
    "text": "all supported frameworks so if it uses",
    "start": "1086640",
    "end": "1089679"
  },
  {
    "text": "native image",
    "start": "1089679",
    "end": "1090640"
  },
  {
    "text": "it will start up really fast and it will",
    "start": "1090640",
    "end": "1093120"
  },
  {
    "text": "have a much slower",
    "start": "1093120",
    "end": "1094559"
  },
  {
    "text": "much lower memory footprint than",
    "start": "1094559",
    "end": "1097760"
  },
  {
    "text": "running on on on jdk",
    "start": "1097760",
    "end": "1101520"
  },
  {
    "text": "brother has a large project there are",
    "start": "1101520",
    "end": "1103280"
  },
  {
    "text": "several parts which are production-ready",
    "start": "1103280",
    "end": "1104960"
  },
  {
    "text": "and several parts like other language",
    "start": "1104960",
    "end": "1106960"
  },
  {
    "text": "support uh which is more experimental",
    "start": "1106960",
    "end": "1110080"
  },
  {
    "text": "so uh if you use something in the",
    "start": "1110080",
    "end": "1113840"
  },
  {
    "text": "production ready column like",
    "start": "1113840",
    "end": "1115280"
  },
  {
    "text": "java or gmail languages to javascript or",
    "start": "1115280",
    "end": "1117360"
  },
  {
    "text": "node.js or the native image bits",
    "start": "1117360",
    "end": "1119520"
  },
  {
    "text": "or the tooling like profiler from visual",
    "start": "1119520",
    "end": "1122400"
  },
  {
    "text": "vm",
    "start": "1122400",
    "end": "1123280"
  },
  {
    "text": "you can do that and people are running",
    "start": "1123280",
    "end": "1125600"
  },
  {
    "text": "that introduction and it is stable",
    "start": "1125600",
    "end": "1127360"
  },
  {
    "text": "and mature right the other components",
    "start": "1127360",
    "end": "1130080"
  },
  {
    "text": "like running python code",
    "start": "1130080",
    "end": "1131600"
  },
  {
    "text": "might be less less less so",
    "start": "1131600",
    "end": "1135200"
  },
  {
    "text": "twitter is using the compiler uh",
    "start": "1135200",
    "end": "1137200"
  },
  {
    "text": "grounding compiler in production of the",
    "start": "1137200",
    "end": "1138960"
  },
  {
    "text": "scanner microservices",
    "start": "1138960",
    "end": "1140559"
  },
  {
    "text": "portal cloud uses uh volume for",
    "start": "1140559",
    "end": "1143760"
  },
  {
    "text": "improving performance of their certain",
    "start": "1143760",
    "end": "1145840"
  },
  {
    "text": "services",
    "start": "1145840",
    "end": "1146880"
  },
  {
    "text": "uh nvidia uh collaborated with",
    "start": "1146880",
    "end": "1150559"
  },
  {
    "text": "was it for on the language that uh uses",
    "start": "1150559",
    "end": "1153919"
  },
  {
    "text": "gravim",
    "start": "1153919",
    "end": "1154559"
  },
  {
    "text": "to expose gpu kernels uh",
    "start": "1154559",
    "end": "1157919"
  },
  {
    "text": "on top of ground vm there is of course",
    "start": "1157919",
    "end": "1160160"
  },
  {
    "text": "an oracle product",
    "start": "1160160",
    "end": "1161600"
  },
  {
    "text": "based on ground vm called oracle runway",
    "start": "1161600",
    "end": "1163520"
  },
  {
    "text": "enterprise edition that you can",
    "start": "1163520",
    "end": "1165360"
  },
  {
    "text": "look into if you would like to and then",
    "start": "1165360",
    "end": "1167520"
  },
  {
    "text": "of course what you can do now",
    "start": "1167520",
    "end": "1169600"
  },
  {
    "text": "is you can check out and see the",
    "start": "1169600",
    "end": "1172880"
  },
  {
    "text": "the project follow us ask us questions",
    "start": "1172880",
    "end": "1176400"
  },
  {
    "text": "and participate in the growlium",
    "start": "1176400",
    "end": "1177919"
  },
  {
    "text": "ecosystem",
    "start": "1177919",
    "end": "1179919"
  },
  {
    "text": "thank you",
    "start": "1179919",
    "end": "1186320"
  }
]