[
  {
    "start": "0",
    "end": "125000"
  },
  {
    "text": "[Music]",
    "start": "6990",
    "end": "10108"
  },
  {
    "text": "thank you all very very much for coming um quick context um what is this talk so",
    "start": "12400",
    "end": "18480"
  },
  {
    "text": "um at one level it's going to be a kubernetes overview so if you know all the kubernetes things um you can",
    "start": "18480",
    "end": "24039"
  },
  {
    "text": "probably find a better talk to watch um that said I also am going to talk about kind of context of of where this kind of",
    "start": "24039",
    "end": "31000"
  },
  {
    "text": "fits in um and touch a little bit on when you have this collection of",
    "start": "31000",
    "end": "36600"
  },
  {
    "text": "containers spread across machines where do you put your stuff where do you store your data uh things like that so let's",
    "start": "36600",
    "end": "43480"
  },
  {
    "text": "get started so hi I'm Brian dorsy um you can catch me on the internet um I try to",
    "start": "43480",
    "end": "49640"
  },
  {
    "text": "get my name everywhere turns out there's lots of Bri androes in the world but I'm going to try to get my name and all the",
    "start": "49640",
    "end": "54760"
  },
  {
    "text": "places this is goto con so I thought we'd do a little Choose Your Own Adventure",
    "start": "54760",
    "end": "60320"
  },
  {
    "text": "um and we'll how many people have started a container",
    "start": "60320",
    "end": "65400"
  },
  {
    "text": "themselves okay we're skipping okay I will put you through containers uh old Way New Way containers all this stuff",
    "start": "65400",
    "end": "75200"
  },
  {
    "text": "um one thing I think is really relevant is these um I just want to kind of touch",
    "start": "75200",
    "end": "81600"
  },
  {
    "text": "on containers are these isolated layers of the images that we run the containers",
    "start": "81600",
    "end": "87079"
  },
  {
    "text": "from are these isolated uh collections of files um and this is just a really really powerful um thing you know that",
    "start": "87079",
    "end": "93759"
  },
  {
    "text": "we're all very excited about but one of the things I think is is interesting is how it changes the timing of where you",
    "start": "93759",
    "end": "99840"
  },
  {
    "text": "run into problems and so in some ways this pushes a lot of the integration",
    "start": "99840",
    "end": "105360"
  },
  {
    "text": "problems up into your continuous integration your your build system and I think that's really powerful so you can",
    "start": "105360",
    "end": "111079"
  },
  {
    "text": "kind of thinking think of it as early binding um rather than late binding in your production machines um so I think",
    "start": "111079",
    "end": "118240"
  },
  {
    "text": "that's interesting so containers are awesome we're all in uh let's run lots of them everywhere um and that's where",
    "start": "118240",
    "end": "125360"
  },
  {
    "start": "125000",
    "end": "480000"
  },
  {
    "text": "kubernetes comes in so it's I think we're at this",
    "start": "125360",
    "end": "131160"
  },
  {
    "text": "interesting point where we have uh something new uh that we can add to our our our architectural decisions our",
    "start": "131160",
    "end": "137640"
  },
  {
    "text": "problem solving when you have a problem and trying to work through things so we've got so we've got physical computers we can go grab a bunch of",
    "start": "137640",
    "end": "143000"
  },
  {
    "text": "computers and we can connect the network cables and do them uh we can use Virtual computers uh virtual machines um and the",
    "start": "143000",
    "end": "149160"
  },
  {
    "text": "apis there almost exactly like the virtual machines right you've got uh give me a computer put a disc in it",
    "start": "149160",
    "end": "154400"
  },
  {
    "text": "connect these two networks together that sort of thing or we can jump all the way to platforms of service stuff and give",
    "start": "154400",
    "end": "160640"
  },
  {
    "text": "me your code and I'll promise to run it and scale it but you have to write it in a particular way to match you know",
    "start": "160640",
    "end": "166120"
  },
  {
    "text": "Heroku style or app engine style or you know whatever the platforms the service gives you and I'm super excited in this",
    "start": "166120",
    "end": "173319"
  },
  {
    "text": "like in the last year or so um there's many many options now",
    "start": "173319",
    "end": "178440"
  },
  {
    "text": "for this this Middle Ground of when you want to treat a whole group of machines",
    "start": "178440",
    "end": "183560"
  },
  {
    "text": "as one logical computer and you want to run your containers on lots of the machines treat them as one um but you",
    "start": "183560",
    "end": "190400"
  },
  {
    "text": "want to be working closer to the actual software you have um so that's where we're at and that's what kubernetes is",
    "start": "190400",
    "end": "196920"
  },
  {
    "text": "it's one of these container schedulers orchestrators uh these pieces so um it",
    "start": "196920",
    "end": "202760"
  },
  {
    "text": "is Greek for Helmsman um I'm going to probably do this wrong but I think the",
    "start": "202760",
    "end": "208680"
  },
  {
    "text": "original Greek there's probably in the room is something more like kubernetes but it came out of the west",
    "start": "208680",
    "end": "214760"
  },
  {
    "text": "coast of the United States so it's kubernetes sorry um it runs and manages",
    "start": "214760",
    "end": "222000"
  },
  {
    "text": "containers um it it is inspired by Google running lots of containers in",
    "start": "222000",
    "end": "227840"
  },
  {
    "text": "production um and now that it's been an open source project for a year and a half it's it's grown into meeting the",
    "start": "227840",
    "end": "234400"
  },
  {
    "text": "needs of a much wider group than just kind of Google um but it's definitely inspired by patterns that we work at",
    "start": "234400",
    "end": "240599"
  },
  {
    "text": "Google um you can run it in multiple different Cloud environments you can run it on your own computers um it supports",
    "start": "240599",
    "end": "247280"
  },
  {
    "text": "of course Docker but also you know rocket and you know the appc stuff and",
    "start": "247280",
    "end": "252400"
  },
  {
    "text": "that sort of stuff 100% open source uh open source for reals if you will um",
    "start": "252400",
    "end": "257519"
  },
  {
    "text": "it's up on GitHub the issues are there like you can go watch people argue over the code um and the focus is manage",
    "start": "257519",
    "end": "265960"
  },
  {
    "text": "applications not just machines so this is the slide everything that Google runs in containers there's probably a little",
    "start": "265960",
    "end": "271199"
  },
  {
    "text": "Aster there somewhere but but basically everything that you've ever uh interacted with Google wise is running",
    "start": "271199",
    "end": "277400"
  },
  {
    "text": "in a container somewhere in the data center so all you know gmail search maps",
    "start": "277400",
    "end": "282479"
  },
  {
    "text": "um including if you use things from Google Cloud platform so virtual machines those are also actually running",
    "start": "282479",
    "end": "287840"
  },
  {
    "text": "in containers um so it's containers kind of all the way down and we launched",
    "start": "287840",
    "end": "293560"
  },
  {
    "text": "probably more than this now but over two billion containers per week um that's carefully worded we launch two ion",
    "start": "293560",
    "end": "299919"
  },
  {
    "text": "containers a week um and so you can think of kubernetes as a toolkit for helping you",
    "start": "299919",
    "end": "306800"
  },
  {
    "text": "deal with the things you run into in distributed systems regularly so there's a bunch of stuff that comes up over and",
    "start": "306800",
    "end": "311880"
  },
  {
    "text": "over and over how do the pieces find each other um how do you log consistently how do you debug how do you",
    "start": "311880",
    "end": "317520"
  },
  {
    "text": "keep things running how do you figure out where the things should should run um to be most efficient um one of the",
    "start": "317520",
    "end": "324039"
  },
  {
    "text": "big reasons to do something like a cluster wide scheduling system is to drive up efficient and redu costs um and",
    "start": "324039",
    "end": "332880"
  },
  {
    "text": "you know just better easier management of the things all this stuff and all of these pieces are built into kubernetes",
    "start": "332880",
    "end": "338560"
  },
  {
    "text": "and help you run your applications so let's start with a",
    "start": "338560",
    "end": "344319"
  },
  {
    "text": "cluster um and this could be and and I want to kind of break this up because most of the talk I'm going to spend on",
    "start": "344319",
    "end": "350199"
  },
  {
    "text": "kind of using kubernetes but there's this the if you decide like if this Talk's inspiring and you're like yes I'm",
    "start": "350199",
    "end": "355560"
  },
  {
    "text": "going to go play with it you get to this startup part and this can be challenging um so kind of separate out the getting a",
    "start": "355560",
    "end": "362680"
  },
  {
    "text": "cluster running from using uh a kuber's cluster so you need to get a cluster",
    "start": "362680",
    "end": "367840"
  },
  {
    "text": "somehow um you can use cloud resources you can use your own computers uh you",
    "start": "367840",
    "end": "372919"
  },
  {
    "text": "will need an overlay Network for the networking and you'll see why in a few moments um you can run it on some",
    "start": "372919",
    "end": "379720"
  },
  {
    "text": "raspberry pies there's some great demos online of people running kubernetes on raspberries um it it runs in lots and",
    "start": "379720",
    "end": "386280"
  },
  {
    "text": "lots of places um and you know kind of gratuitous usual graph um you've got a",
    "start": "386280",
    "end": "392960"
  },
  {
    "text": "master it speaks rest HTTP um to you and the commandline tools",
    "start": "392960",
    "end": "398400"
  },
  {
    "text": "and the web uh uis and then there is a process running on each of the nodes so",
    "start": "398400",
    "end": "404039"
  },
  {
    "text": "the virtual machines or wherever you're running this that is the cuet and it talks to Docker or whatever your",
    "start": "404039",
    "end": "409280"
  },
  {
    "text": "container technology you're using and makes sure that everything is in the state that the cluster wants it to be",
    "start": "409280",
    "end": "416120"
  },
  {
    "text": "in um and just to be cre so you can grab the slides later um you essentially",
    "start": "416120",
    "end": "422680"
  },
  {
    "text": "export you know an environment variable to say this is the provider I want to use and you can do the uh what I find",
    "start": "422680",
    "end": "429919"
  },
  {
    "text": "kind of awkward uh curl SSH pipe to bash or you could save that and look at the",
    "start": "429919",
    "end": "435160"
  },
  {
    "text": "file and decide to do it yourself um and we have lots of recipes in fact",
    "start": "435160",
    "end": "441400"
  },
  {
    "text": "arguably too many recipes for how to set up a cluster um and we offer a hosted version as well that I'll talk about so",
    "start": "441400",
    "end": "450319"
  },
  {
    "text": "what it looks like to actually use this so now we're switching over into the kind of using mode so if you have an",
    "start": "450319",
    "end": "455879"
  },
  {
    "text": "image somewhere um this is for example the standard engine X image that's up on dockerhub you can in one line run two",
    "start": "455879",
    "end": "464080"
  },
  {
    "text": "copies of that image somewhere in your cluster and not even need to care or know where those guys are",
    "start": "464080",
    "end": "471599"
  },
  {
    "text": "um so let's actually just go do that okay so we'll go to demo mode this",
    "start": "471599",
    "end": "476919"
  },
  {
    "text": "is this is live hi um so in the top here I have oh let's",
    "start": "476919",
    "end": "484080"
  },
  {
    "start": "480000",
    "end": "750000"
  },
  {
    "text": "actually copy this out this will be",
    "start": "484080",
    "end": "487680"
  },
  {
    "text": "exciting you know when you get in demos you're like I should have done that a different way that's me right now okay",
    "start": "489800",
    "end": "496520"
  },
  {
    "text": "so I ran that command and immediately we could wow that was okay good um it goes to pending and then running down below",
    "start": "496520",
    "end": "501960"
  },
  {
    "text": "and in the bottom half I'm actually just running the command line tool for cetes cube control um in a watch Loop so I'm",
    "start": "501960",
    "end": "510120"
  },
  {
    "text": "actually just running it once a second three times want to show at the top which pods are running which replication",
    "start": "510120",
    "end": "517039"
  },
  {
    "text": "controllers and which services and so we're going to see this over and over throughout the talk um but basically at the top we've got containers that are",
    "start": "517039",
    "end": "523080"
  },
  {
    "text": "running so I just started two containers there um and those are good to go and so",
    "start": "523080",
    "end": "528200"
  },
  {
    "text": "we can we can say actually I wanted to have more of those um so we're going to scale this",
    "start": "528200",
    "end": "535640"
  },
  {
    "text": "controller replication controller it's called my engine X and we",
    "start": "535640",
    "end": "542959"
  },
  {
    "text": "want I don't know four of those something like that um so we talked to the the master it says oh hey um four is",
    "start": "543600",
    "end": "551399"
  },
  {
    "text": "more than two I actually only have two running let me start the new ones and get up and ready to go so that's a a",
    "start": "551399",
    "end": "557279"
  },
  {
    "text": "very quick um kind of feel for what it looks like to actually use this and and",
    "start": "557279",
    "end": "563079"
  },
  {
    "text": "these these containers are up and they're running the configuration of what's supposed to be the state there is",
    "start": "563079",
    "end": "569680"
  },
  {
    "text": "now in the server in in the cluster and so if something happens to one of these containers and they crash they'll get",
    "start": "569680",
    "end": "576079"
  },
  {
    "text": "restarted even if I'm asleep um and it's constantly um and we'll talk about this",
    "start": "576079",
    "end": "582040"
  },
  {
    "text": "more but it's constantly checking to say I've I've asked for four of them um and how many are actually there and the like",
    "start": "582040",
    "end": "589279"
  },
  {
    "text": "so this is a pod of whales and this is a pod of containers I guess um",
    "start": "589279",
    "end": "595839"
  },
  {
    "text": "so if you guys were here for the previous talk um a a pod is a collection of containers that are tightly bound um",
    "start": "595839",
    "end": "603160"
  },
  {
    "text": "we are we strongly believe that this is a very very valuable abstraction to add into the mix um what this gives you this",
    "start": "603160",
    "end": "610760"
  },
  {
    "text": "is the unit of scheduling in kubernetes this is the the atom um one of these",
    "start": "610760",
    "end": "616440"
  },
  {
    "text": "always gets scheduled uh on one machine and from the perspective of the",
    "start": "616440",
    "end": "621839"
  },
  {
    "text": "containers inside the Pod all of the other containers are on the same logical host so they can talk",
    "start": "621839",
    "end": "627519"
  },
  {
    "text": "to local host networking they can do IPC they can see the same volumes the same disc volumes but other pods on the same",
    "start": "627519",
    "end": "634560"
  },
  {
    "text": "host can't see the same things so this gives you some really nice properties uh for example if a whole bunch of your",
    "start": "634560",
    "end": "640240"
  },
  {
    "text": "containers your pods use listen on Port 80 you can schedule multiple pods on the",
    "start": "640240",
    "end": "646000"
  },
  {
    "text": "same physical host that all use port 80 because every pod gets its own IP address in the cluster so every pod has",
    "start": "646000",
    "end": "653560"
  },
  {
    "text": "its own IP address you the pods can talk to each other directly over IPS if you want to um",
    "start": "653560",
    "end": "660040"
  },
  {
    "text": "and so that's this idea so we have this this little unit and um if you miss the talk I highly recommend uh seeing the",
    "start": "660040",
    "end": "666560"
  },
  {
    "text": "the previous talk on container patterns uh so check out his slides online so you can use this for any",
    "start": "666560",
    "end": "673480"
  },
  {
    "text": "scenario where you have containers processes that need to work together",
    "start": "673480",
    "end": "678560"
  },
  {
    "text": "directly they need to be talking to the same files to the same you know Local Host sockets that sort of thing um you",
    "start": "678560",
    "end": "685000"
  },
  {
    "text": "know this example here is you know for example if you were going to have a you know a nodejs app or a static file",
    "start": "685000",
    "end": "691360"
  },
  {
    "text": "serving app and you wanted it to pull out the actual contents from somewhere else live as it was coming down so you have these containers that are the",
    "start": "691360",
    "end": "697639"
  },
  {
    "text": "images are static but when they start up they pull down and kind of bootstrap the latest content um so this would be an",
    "start": "697639",
    "end": "703959"
  },
  {
    "text": "example of kind of um separating those concerns the concerns of pulling out the data and serving the data up so I'll be",
    "start": "703959",
    "end": "711720"
  },
  {
    "text": "one example so the way these pods talk to each other every pod logically has it has its own IP address within the",
    "start": "711720",
    "end": "717959"
  },
  {
    "text": "cluster and they can speak directly to each other um and we essentially you",
    "start": "717959",
    "end": "723680"
  },
  {
    "text": "know in most environments do IP tables and router firewall you know router forwarding rules to make this all happen",
    "start": "723680",
    "end": "730920"
  },
  {
    "text": "um but you can also use flannel weave open V switch um and if you're running",
    "start": "730920",
    "end": "735959"
  },
  {
    "text": "in AWS or Google Cloud the cloud environment can help you out and make this fast um and like I said that means",
    "start": "735959",
    "end": "742399"
  },
  {
    "text": "you don't have to worry about conflicting port numbers between your pods um so how do you see so if we do",
    "start": "742399",
    "end": "749360"
  },
  {
    "text": "this and they can all talk to each other we've constructed this this network this logical Network within the cluster how",
    "start": "749360",
    "end": "755240"
  },
  {
    "start": "750000",
    "end": "1015000"
  },
  {
    "text": "do you get things make them available outside the cluster um and you do it with uh Expose and expose creates a",
    "start": "755240",
    "end": "763320"
  },
  {
    "text": "service so in kubernetes so service is kind of an overloaded word but a kubernetes service is basically a load",
    "start": "763320",
    "end": "769639"
  },
  {
    "text": "balancer that is aware of exactly where all the pods are for that service and",
    "start": "769639",
    "end": "774839"
  },
  {
    "text": "knows how to route traffic specifically to them so if pods are these ephemeral pieces they come and go our containers",
    "start": "774839",
    "end": "781839"
  },
  {
    "text": "we don't have anything um longed in them we can just reschedule them put them on different computers find keeping track",
    "start": "781839",
    "end": "788199"
  },
  {
    "text": "of their IPs is a challenge but the service has a static IP address and a",
    "start": "788199",
    "end": "793519"
  },
  {
    "text": "DNS entry uh inside the cluster and so this is the primary mechanism for kind of service Discovery uh between things",
    "start": "793519",
    "end": "800560"
  },
  {
    "text": "in kubernetes um so it looks something like",
    "start": "800560",
    "end": "805639"
  },
  {
    "text": "this uh you you basically have a service definition and then it's automatically updated with where where the pieces are",
    "start": "805639",
    "end": "812600"
  },
  {
    "text": "um because it is part of the kubernetes cluster um so that you have this",
    "start": "812600",
    "end": "818079"
  },
  {
    "text": "combination of stable service endpoints and ephemeral pods coming and going uh",
    "start": "818079",
    "end": "824480"
  },
  {
    "text": "the service can in fact even exist before there are any pods connected to it um so you can have you know you won't",
    "start": "824480",
    "end": "830880"
  },
  {
    "text": "ever get any response back but you can you can find out its IP address and connect to it um and so clients are",
    "start": "830880",
    "end": "838120"
  },
  {
    "text": "always in most cases uh talking to a service endpoint rather than the the",
    "start": "838120",
    "end": "844240"
  },
  {
    "text": "actual pods directly and we stitch all of these things together in kubernetes with",
    "start": "844240",
    "end": "849680"
  },
  {
    "text": "labels so labels are simply key value pairs that you can put on anything so we",
    "start": "849680",
    "end": "855240"
  },
  {
    "text": "can put them on pods we can put them on Services any of the parts of kubernetes uh you can put a a label on them and",
    "start": "855240",
    "end": "861839"
  },
  {
    "text": "labels are the only grouping mechanism in kubernetes so you basically make a",
    "start": "861839",
    "end": "866880"
  },
  {
    "text": "query against labels to do things so for example if you wanted to draw a dashboard of how things were going on",
    "start": "866880",
    "end": "872920"
  },
  {
    "text": "with your front ends um you have your pods you can go ahead and set labels say",
    "start": "872920",
    "end": "878120"
  },
  {
    "text": "okay this is a type front end and we'll do a selector query and get all the data for the type equals front end and you",
    "start": "878120",
    "end": "885680"
  },
  {
    "text": "could also have a different graph somewhere that was like oh all the version tws we actually want to show on one graph and they might refer to the",
    "start": "885680",
    "end": "892120"
  },
  {
    "text": "same pods or different ones but all the version two labels will come back and show uh this is actually how the",
    "start": "892120",
    "end": "897160"
  },
  {
    "text": "services are connected to the pods as well when the the Ser the service has a selector and when those labels match",
    "start": "897160",
    "end": "904199"
  },
  {
    "text": "that's how it knows which pods to actually Route traffic to um so this you",
    "start": "904199",
    "end": "909519"
  },
  {
    "text": "know very nicely addresses this need to connect things without having strict coupling of one person owns the other",
    "start": "909519",
    "end": "916160"
  },
  {
    "text": "side or what have you um or needs to know about it ahead of time and this is how replication controllers work as well",
    "start": "916160",
    "end": "922360"
  },
  {
    "text": "so replication controllers are uh primary Concept in kubernetes and it's",
    "start": "922360",
    "end": "927399"
  },
  {
    "text": "it's this control Loop that you set up and give it a template for how to create a pod and how many",
    "start": "927399",
    "end": "934519"
  },
  {
    "text": "pods should be running and under the covers when I ran this command over here um it actually created both the original",
    "start": "934519",
    "end": "942639"
  },
  {
    "text": "two pods and this replication controller implicitly when I made that run command",
    "start": "942639",
    "end": "948440"
  },
  {
    "text": "and the replication controller is what actually does this work of making sure there's always two or always four pods",
    "start": "948440",
    "end": "954279"
  },
  {
    "text": "running to do the work um so they basically live in a loop where they look at the real world look at the uh desired",
    "start": "954279",
    "end": "961680"
  },
  {
    "text": "State and make whatever changes they need to make to make the real world look like that um so this is a very nice",
    "start": "961680",
    "end": "969120"
  },
  {
    "text": "decoupling of needs there um and this is primarily for long running processes so",
    "start": "969120",
    "end": "974959"
  },
  {
    "text": "if you've got things like web front ends you've got caching servers you know things that are meant to be always",
    "start": "974959",
    "end": "980639"
  },
  {
    "text": "running uh log collectors things like that and and it looks kind of something",
    "start": "980639",
    "end": "986360"
  },
  {
    "text": "like this it it checks and says okay I'm how many do I actually have got three",
    "start": "986360",
    "end": "991480"
  },
  {
    "text": "I'm supposed to have four let me start one and then just sits there and does this Loop logically kind of forever",
    "start": "991480",
    "end": "998800"
  },
  {
    "text": "um so this is what uh gives you fewer Pages at night um or at least if you",
    "start": "998800",
    "end": "1006839"
  },
  {
    "text": "write software like I do that you know sometimes you haven't track down all of the failures um this will kind of keep",
    "start": "1006839",
    "end": "1012399"
  },
  {
    "text": "it keep it going while you sleep um so what does this look like um so I I did",
    "start": "1012399",
    "end": "1018480"
  },
  {
    "start": "1015000",
    "end": "1143000"
  },
  {
    "text": "this this one already but we can uh we can just we basically have a big stereo",
    "start": "1018480",
    "end": "1024199"
  },
  {
    "text": "knob where we can tell the replication controller how many we want to have want to have two and it will say oh now we're",
    "start": "1024199",
    "end": "1032400"
  },
  {
    "text": "supposed to have two and it will go down um and this gives you this this Direct Control of how many of each of these are",
    "start": "1032400",
    "end": "1039798"
  },
  {
    "text": "supposed to be running um and in lines and boxes it looks something like this",
    "start": "1039799",
    "end": "1045480"
  },
  {
    "text": "you've got the actual controller template and the actual labels on the pods and in",
    "start": "1045480",
    "end": "1051760"
  },
  {
    "text": "this case uh we would have a service as well connected to that",
    "start": "1051760",
    "end": "1057080"
  },
  {
    "text": "um in fact I think what I'm going to do here",
    "start": "1057080",
    "end": "1062279"
  },
  {
    "text": "is I'm going to clean this up a little",
    "start": "1065080",
    "end": "1069279"
  },
  {
    "text": "bit and we will play with some other fun",
    "start": "1070160",
    "end": "1077240"
  },
  {
    "text": "stuff as this goes and then when I change it to four um it notices that and adds the the",
    "start": "1077240",
    "end": "1082880"
  },
  {
    "text": "four new pods so we can use this just as a straight scaling piece but we can also use it for some other fun patterns so I",
    "start": "1082880",
    "end": "1089960"
  },
  {
    "text": "don't know if you've heard of a canary pattern where like you've got a bunch of workers and then you get a new version of your app and you want to try it I",
    "start": "1089960",
    "end": "1097480"
  },
  {
    "text": "mean you've tested it already right but you want to try it in production right and so you want to have some small percentage of your traffic go to the",
    "start": "1097480",
    "end": "1103120"
  },
  {
    "text": "canary and you want to watch the logs really carefully and see how it works and then you want to be able to roll back if something bad happened so you",
    "start": "1103120",
    "end": "1108559"
  },
  {
    "text": "can use replication controllers to make it very easy to do a canary roll out um",
    "start": "1108559",
    "end": "1114440"
  },
  {
    "text": "so we have the same kind of setup we've got our primary version here ready to go and then you start version two with a",
    "start": "1114440",
    "end": "1121159"
  },
  {
    "text": "replication controller if it's set to one and you're good to go",
    "start": "1121159",
    "end": "1126400"
  },
  {
    "text": "um and so if you are happy with that then you can kind of leave it be you can",
    "start": "1126400",
    "end": "1131840"
  },
  {
    "text": "add more remove them it's very easy to pull that back out um and you if you",
    "start": "1131840",
    "end": "1137600"
  },
  {
    "text": "decide you like it you can do what's called a rolling up update where you add more of these so um and this is such a",
    "start": "1137600",
    "end": "1144240"
  },
  {
    "start": "1143000",
    "end": "1639000"
  },
  {
    "text": "useful thing we've actually built it into both the the front end tool and now uh there's a deployments piece built",
    "start": "1144240",
    "end": "1151360"
  },
  {
    "text": "into the master API so you can tell the master you want to roll between versions um and that looks something like this",
    "start": "1151360",
    "end": "1158000"
  },
  {
    "text": "and we're going to do a more involved demo here so uh basically it goes you",
    "start": "1158000",
    "end": "1163080"
  },
  {
    "text": "have two knobs and so you you end up turning up one and turning down the other bit by bit and eventually all of",
    "start": "1163080",
    "end": "1169480"
  },
  {
    "text": "your traffic is being served by the new piece so let's let's look at that for",
    "start": "1169480",
    "end": "1176039"
  },
  {
    "text": "real [Music] uh",
    "start": "1176039",
    "end": "1183280"
  },
  {
    "text": "awesome",
    "start": "1183280",
    "end": "1186280"
  },
  {
    "text": "okay in fact okay so we have I'm going to show you a guestbook app because this",
    "start": "1190760",
    "end": "1195840"
  },
  {
    "text": "is you know what we have to do uh so this is a PHP app it's PHP uh we're",
    "start": "1195840",
    "end": "1201600"
  },
  {
    "text": "actually using MySQL and some memcache um and make make a whole app here um and",
    "start": "1201600",
    "end": "1209080"
  },
  {
    "text": "I'm going to go ahead and start the I'm going to show you these files in",
    "start": "1209080",
    "end": "1214520"
  },
  {
    "text": "just a moment but one so the the first versions The First Command lines I was showing you",
    "start": "1214520",
    "end": "1220679"
  },
  {
    "text": "were basically interactive talking to the cluster right run run me this image and just make me some stuff but in",
    "start": "1220679",
    "end": "1226559"
  },
  {
    "text": "production that's not really what you want you want config figuration checked in uh safe somewhere right so I'm going",
    "start": "1226559",
    "end": "1231720"
  },
  {
    "text": "to actually create some items from um a front end service and we'll look at that",
    "start": "1231720",
    "end": "1238480"
  },
  {
    "text": "and also the front end uh replication controller so what these files look",
    "start": "1238480",
    "end": "1247600"
  },
  {
    "text": "like so this is a yam do I don't know is that visible up",
    "start": "1248520",
    "end": "1253600"
  },
  {
    "text": "there um that basically you know sorry it's very very simple",
    "start": "1253600",
    "end": "1259360"
  },
  {
    "text": "um the key part is this is our name we're going to expose Port 80 from",
    "start": "1259360",
    "end": "1267080"
  },
  {
    "text": "Port 80 and we're going to the selector so the query we're going to use we're",
    "start": "1267080",
    "end": "1272440"
  },
  {
    "text": "going to look for all the pods that are labeled front end and this next demo uh",
    "start": "1272440",
    "end": "1277640"
  },
  {
    "text": "app name so I've given these labels and set that up and created this service um that was the first command I run and so",
    "start": "1277640",
    "end": "1283600"
  },
  {
    "text": "we have a new service down here that's called front end um one extra little fun",
    "start": "1283600",
    "end": "1289559"
  },
  {
    "text": "bit in here is I said type load balancer and this kicks off and tells kubernetes that we want this to be an external",
    "start": "1289559",
    "end": "1296559"
  },
  {
    "text": "outside of the cluster load balancer and since I'm running this on um container engine and Google Cloud this actually",
    "start": "1296559",
    "end": "1302520"
  },
  {
    "text": "means we're going to configure the Google Cloud load balancer which is basically Google's data center level",
    "start": "1302520",
    "end": "1307760"
  },
  {
    "text": "load balancers which is super fun so I can be on the same load balancer that runs Gmail and YouTube um and actually",
    "start": "1307760",
    "end": "1314720"
  },
  {
    "text": "get that um to distribute the traffic to my VMS um and then the",
    "start": "1314720",
    "end": "1321480"
  },
  {
    "text": "other file we ran here is the replication controller and",
    "start": "1321480",
    "end": "1327080"
  },
  {
    "text": "so this contains how many replicas we want to run of our front end uh that's",
    "start": "1327080",
    "end": "1333720"
  },
  {
    "text": "here and the selector so that we know which pods are are part of our group",
    "start": "1333720",
    "end": "1339720"
  },
  {
    "text": "it's actually the same as the service and the template for making a new pod",
    "start": "1339720",
    "end": "1344840"
  },
  {
    "text": "when the time comes so whenever it needs to make a new pod for whatever reason it will use this template to create it um",
    "start": "1344840",
    "end": "1350679"
  },
  {
    "text": "and the key bit right here is we're pointing at a Docker image in the Google",
    "start": "1350679",
    "end": "1356600"
  },
  {
    "text": "container registry um and it's it's in this project name next demo 42 the image",
    "start": "1356600",
    "end": "1362240"
  },
  {
    "text": "is named PHP guestbook and the version so colon then it's tagged Docker wise V1",
    "start": "1362240",
    "end": "1368720"
  },
  {
    "text": "and that's his name and it uses Port 80 so we've done all that bit um and down",
    "start": "1368720",
    "end": "1374520"
  },
  {
    "text": "here we can see the front end load balancer got set up with an IP",
    "start": "1374520",
    "end": "1379720"
  },
  {
    "text": "so we should be able to hit this IP address and this is the",
    "start": "1379720",
    "end": "1386640"
  },
  {
    "text": "dangerous part of the thing people can read the small uh bit down",
    "start": "1386640",
    "end": "1392039"
  },
  {
    "text": "there hello I can say even hello Berlin if I",
    "start": "1392039",
    "end": "1398240"
  },
  {
    "text": "can spell correctly yay and you can hit that same IP address and put script tags in there",
    "start": "1398240",
    "end": "1405600"
  },
  {
    "text": "and all kinds of fun stuff and see how that that turns out out um so we've got",
    "start": "1405600",
    "end": "1410960"
  },
  {
    "text": "this um and then we can say Cube CTL so actually let me I'm going to go",
    "start": "1410960",
    "end": "1417279"
  },
  {
    "text": "ahead I've got this um little extension that will refresh the page every second",
    "start": "1417279",
    "end": "1422600"
  },
  {
    "text": "so that's going to start flickering in the background and updating as other people are are adding things and hey looks like Emoji",
    "start": "1422600",
    "end": "1428919"
  },
  {
    "text": "Works um and so we can actually scale the replication controller named front",
    "start": "1428919",
    "end": "1435480"
  },
  {
    "text": "end and set replicas equal to six for example um and",
    "start": "1435480",
    "end": "1443279"
  },
  {
    "text": "we can start new replicas get them in serving traffic and and everybody in the audience and myself who's sitting here",
    "start": "1443279",
    "end": "1449400"
  },
  {
    "text": "refreshing the site just stays up and keeps working um we can drop it back",
    "start": "1449400",
    "end": "1454960"
  },
  {
    "text": "down to three um have fun with the whole deal so that's neat but as soon as you get",
    "start": "1454960",
    "end": "1461480"
  },
  {
    "text": "something working there's always a feature request right and this is kind of a a dull site we want to make it",
    "start": "1461480",
    "end": "1468559"
  },
  {
    "text": "better right so I got the request to make the site better and my uh design",
    "start": "1468559",
    "end": "1474600"
  },
  {
    "text": "skills are perhaps lacking but um I've got a new version of the site that's come out of my um continuous integration",
    "start": "1474600",
    "end": "1483159"
  },
  {
    "text": "system and it it's pushed up into the Container registry and it's called Green so we've got this guy here and so what",
    "start": "1483159",
    "end": "1490840"
  },
  {
    "text": "I'm going to do is uh try to remember the exact command line which I",
    "start": "1490840",
    "end": "1497360"
  },
  {
    "text": "won't so we're going to we're going to do a little",
    "start": "1497360",
    "end": "1503360"
  },
  {
    "text": "trickery so I'm going to run Cube control rolling update the front end uh",
    "start": "1503360",
    "end": "1509559"
  },
  {
    "text": "the update period here which is cut off the screen um I'm setting to 1 second",
    "start": "1509559",
    "end": "1516080"
  },
  {
    "text": "which is not a normal thing to do in production so the update period is how long to wait between uh steps here um",
    "start": "1516080",
    "end": "1522480"
  },
  {
    "text": "set it to 1 second and then I'm going to Rolling upgrade to this new IM image",
    "start": "1522480",
    "end": "1528039"
  },
  {
    "text": "called green and what's happening here now is it's managing the two dials for us so",
    "start": "1528039",
    "end": "1534120"
  },
  {
    "text": "I've got the site up and running and I'm slowly changing the traffic over to the new version of the app uh while while",
    "start": "1534120",
    "end": "1541520"
  },
  {
    "text": "it's running um and it looks like I've messed up the view there let's",
    "start": "1541520",
    "end": "1551720"
  },
  {
    "text": "see so we can see the um the in progress controller that it made has a big long",
    "start": "1552960",
    "end": "1558600"
  },
  {
    "text": "name and the the new um pods have this name just to kind of make sure that",
    "start": "1558600",
    "end": "1564000"
  },
  {
    "text": "they've got stuff going there and we've got all kinds of hacking going on on the site fantastic um some some of the",
    "start": "1564000",
    "end": "1569840"
  },
  {
    "text": "things worked and some of them don't um and and we're basically just turning these these knobs one up and one down as",
    "start": "1569840",
    "end": "1575919"
  },
  {
    "text": "we go and then when the last one goes away uh we should by the time the last",
    "start": "1575919",
    "end": "1581399"
  },
  {
    "text": "one goes away we should see the new version um when when it actually switches depends on you know kind of",
    "start": "1581399",
    "end": "1587720"
  },
  {
    "text": "which the pods connected to and hey we got the new version so that's amazing",
    "start": "1587720",
    "end": "1593039"
  },
  {
    "text": "right thank you um so the thing that I find really awesome about this besides",
    "start": "1593039",
    "end": "1600000"
  },
  {
    "text": "my incredible design skills um is that so we you know we migrate our live site",
    "start": "1600000",
    "end": "1605960"
  },
  {
    "text": "up right but if we decide we don't like this anymore we can actually migrate",
    "start": "1605960",
    "end": "1611279"
  },
  {
    "text": "back using the exact same process so since we've got this isolated file system these containers under the covers",
    "start": "1611279",
    "end": "1617559"
  },
  {
    "text": "you know forward and back is actually exactly the same process so if you decide later that you don't like you",
    "start": "1617559",
    "end": "1623600"
  },
  {
    "text": "know you don't like that you can actually switch this back to version one and you know we can rolling upgrade that",
    "start": "1623600",
    "end": "1628799"
  },
  {
    "text": "back and I won't make you like watch that but we can come back to it uh later",
    "start": "1628799",
    "end": "1634039"
  },
  {
    "text": "um and hopefully you guys won't completely uh destroy my my account there um so also just recently added and",
    "start": "1634039",
    "end": "1642799"
  },
  {
    "start": "1639000",
    "end": "1720000"
  },
  {
    "text": "this is still in beta we have autoscaling and auto scaling right now",
    "start": "1642799",
    "end": "1647919"
  },
  {
    "text": "is based on the CPU usage of the pods um so you can basically set up a scale",
    "start": "1647919",
    "end": "1654600"
  },
  {
    "text": "Target um which says you know if too much too many if the pods are over 50% we need to increase the number of PODS",
    "start": "1654600",
    "end": "1660480"
  },
  {
    "text": "that are running in our cluster and so what we do is we're actually using C advisor I don't know if you're familiar",
    "start": "1660480",
    "end": "1666760"
  },
  {
    "text": "with that to like get all the metrics out of the running containers pushing that up through this app called heapster which Aggregates all of these and then",
    "start": "1666760",
    "end": "1673519"
  },
  {
    "text": "we actually know relatively close to real time exactly what's going on on with all the",
    "start": "1673519",
    "end": "1679000"
  },
  {
    "text": "containers across the whole cluster and so we can set rules basically that says hey if you know we have pods that are",
    "start": "1679000",
    "end": "1685919"
  },
  {
    "text": "you know over 50% which our rule says we need more pods and then instead of me turning the dial we have a robot turn",
    "start": "1685919",
    "end": "1692760"
  },
  {
    "text": "the dial and you know so we can actually have the scale Target Drive how many",
    "start": "1692760",
    "end": "1699320"
  },
  {
    "text": "pods are actually running in our cluster um so the currently CPU is the is the one that's there we're definitely",
    "start": "1699320",
    "end": "1705000"
  },
  {
    "text": "working on more uh more options for you know the actual thresholds to do that",
    "start": "1705000",
    "end": "1710720"
  },
  {
    "text": "and including you know pushing your own metrics through heapster and using that to drive the auto scaling um so that's",
    "start": "1710720",
    "end": "1717600"
  },
  {
    "text": "there and all kinds of other fun stuff there so you guys have probably noticed that",
    "start": "1717600",
    "end": "1723679"
  },
  {
    "start": "1720000",
    "end": "1744000"
  },
  {
    "text": "almost every uh demo of containers is is using some like very simple like web",
    "start": "1723679",
    "end": "1729760"
  },
  {
    "text": "server or stateless app or uh other things like and most of these demos were",
    "start": "1729760",
    "end": "1734880"
  },
  {
    "text": "as well um technically my my SQL is actually backed by something that lives",
    "start": "1734880",
    "end": "1740279"
  },
  {
    "text": "but I'm going to blow it away um but but almost all the demos are are stateless",
    "start": "1740279",
    "end": "1746600"
  },
  {
    "start": "1744000",
    "end": "1807000"
  },
  {
    "text": "right and and I have questions about this and also I think as an industry we're trying to kind of resolve this",
    "start": "1746600",
    "end": "1752880"
  },
  {
    "text": "right it's it's clear that there's these really fun uh they great advantages to keeping all the state out of your",
    "start": "1752880",
    "end": "1758960"
  },
  {
    "text": "containers you can then treat them like these disposable things but you build apps to keep track of things right so at",
    "start": "1758960",
    "end": "1765679"
  },
  {
    "text": "some point we've got to like manage this data and we we really care about it",
    "start": "1765679",
    "end": "1770720"
  },
  {
    "text": "um that said I I think this is I'd love to hear anybody who has a different",
    "start": "1770720",
    "end": "1776799"
  },
  {
    "text": "opinion I think in a cluster of all these ephemeral containers we have to keep the state out of the container or",
    "start": "1776799",
    "end": "1783399"
  },
  {
    "text": "at least out of any one container um at a bare minimum um and and probably just out of",
    "start": "1783399",
    "end": "1789880"
  },
  {
    "text": "all the containers so if that's the case what do we do here um and I'd like to",
    "start": "1789880",
    "end": "1795360"
  },
  {
    "text": "share three of the patterns that I've seen so far um and some examples of people using that and I'd love to hear if you run",
    "start": "1795360",
    "end": "1802200"
  },
  {
    "text": "into anything that doesn't fit into one of these patterns that would be very interesting um but before we get to",
    "start": "1802200",
    "end": "1808519"
  },
  {
    "start": "1807000",
    "end": "1874000"
  },
  {
    "text": "that Docker has volumes and kubernetes has volumes as well and they're kind of it's kind of a superet of the things you",
    "start": "1808519",
    "end": "1814360"
  },
  {
    "text": "can do in Docker so when you've got this pod it has some local dis available if",
    "start": "1814360",
    "end": "1819960"
  },
  {
    "text": "you configure it that way so you can do things like a temporary empty directory you know that just you know lives and",
    "start": "1819960",
    "end": "1825640"
  },
  {
    "text": "dies with the Pod so you can kind of have scratch space um you can if you want to you can break",
    "start": "1825640",
    "end": "1831279"
  },
  {
    "text": "out and put files on your host machines um it's up to you then to figure out where which machine those are on as you",
    "start": "1831279",
    "end": "1837200"
  },
  {
    "text": "get scheduled on different nodes or use uh some of the tools in kubernetes to make sure you always get scheduled on",
    "start": "1837200",
    "end": "1842519"
  },
  {
    "text": "the same node um and then you lose flexibility there um you can also use",
    "start": "1842519",
    "end": "1847760"
  },
  {
    "text": "you know NFS if you have managed to create a really reliable NFS system um or you can plug into Icey so you can do",
    "start": "1847760",
    "end": "1855760"
  },
  {
    "text": "that if you've got an Icey system um or if you if you're running in a cloud provider that has a block storage",
    "start": "1855760",
    "end": "1861440"
  },
  {
    "text": "Service uh you can use that so we have plugins for um EBS and for um our Google",
    "start": "1861440",
    "end": "1869880"
  },
  {
    "text": "Cloud um Block store so we need we probably need some storage",
    "start": "1869880",
    "end": "1877480"
  },
  {
    "start": "1874000",
    "end": "1919000"
  },
  {
    "text": "so we're going to come back that's why I hit this here so we're going to come back to these guys so I think the three big options for how to store state in a",
    "start": "1877480",
    "end": "1884799"
  },
  {
    "text": "system that's made up of all these ephemeral containers is just you're already putting it somewhere",
    "start": "1884799",
    "end": "1891240"
  },
  {
    "text": "you have a database team probably perhaps keep doing what you're already doing right like run your database the",
    "start": "1891240",
    "end": "1897120"
  },
  {
    "text": "way you know how to do it and it's safe um and connect to it from inside the cluster so one option is just straight",
    "start": "1897120",
    "end": "1903519"
  },
  {
    "text": "up it's outside the cluster you run the database you know as you",
    "start": "1903519",
    "end": "1909639"
  },
  {
    "text": "know as yeah I'm not going to make the joke uh anyway so you just run the DAT B",
    "start": "1909639",
    "end": "1914720"
  },
  {
    "text": "the way you've been doing it um so that's one option another option is that you take",
    "start": "1914720",
    "end": "1919919"
  },
  {
    "start": "1919000",
    "end": "1974000"
  },
  {
    "text": "something that really wants to run on one computer all the time and you kind of swap the storage",
    "start": "1919919",
    "end": "1925240"
  },
  {
    "text": "out from underneath it so that by the time it comes up wherever it comes up it thinks it's on the same machine all the",
    "start": "1925240",
    "end": "1930559"
  },
  {
    "text": "time and so this is where having a block store set up in your environment something like seph or you know the the",
    "start": "1930559",
    "end": "1937480"
  },
  {
    "text": "block stores in your cloud provider are really really handy because kubernetes knows how to take a block store and",
    "start": "1937480",
    "end": "1944000"
  },
  {
    "text": "connect it to the host and Plum it up through the container through the pods before it starts the pods so you can",
    "start": "1944000",
    "end": "1951039"
  },
  {
    "text": "actually and that's the way this MySQL was running you can basically set up a",
    "start": "1951039",
    "end": "1956080"
  },
  {
    "text": "volume that is always available to one POD at a time um and and make that work",
    "start": "1956080",
    "end": "1963639"
  },
  {
    "text": "so you can do that um and you know there may be some latency things but it works in a a wide variety of cases and it's a",
    "start": "1963639",
    "end": "1969559"
  },
  {
    "text": "good way to adapt systems that already exist um and then the third option is to",
    "start": "1969559",
    "end": "1976360"
  },
  {
    "start": "1974000",
    "end": "2026000"
  },
  {
    "text": "do something it's very aw aare of this world of things coming and going that's cluster native so I'm thinking of things",
    "start": "1976360",
    "end": "1982880"
  },
  {
    "text": "like Cassandra Rea um it's it's very new but cockroach DB um things of this",
    "start": "1982880",
    "end": "1990039"
  },
  {
    "text": "nature which are already distributed systems they're aware of the fact that nodes come and go um in a kubernetes",
    "start": "1990039",
    "end": "1997240"
  },
  {
    "text": "environment the nodes are going to come and go faster than they're used to so there's there may be some extra things you want to do and we've got a an",
    "start": "1997240",
    "end": "2003760"
  },
  {
    "text": "ongoing example that we're working on with data Stacks in the examples folder of retes on how to do some of that",
    "start": "2003760",
    "end": "2009600"
  },
  {
    "text": "plumbing um but you can use databases that are aware of the fact that they're",
    "start": "2009600",
    "end": "2014919"
  },
  {
    "text": "on multiple machines so I think that's your three options so basically like keep it out of the cluster adapt it to",
    "start": "2014919",
    "end": "2020880"
  },
  {
    "text": "the cluster or use something that's aware of being in clusters um another",
    "start": "2020880",
    "end": "2026360"
  },
  {
    "start": "2026000",
    "end": "2059000"
  },
  {
    "text": "option here in the kind of cluster native space is called vitess I don't know if you guys have heard of this it's",
    "start": "2026360",
    "end": "2032320"
  },
  {
    "text": "an open source project from Google it's the system that's been serving all the YouTube database traff on my SQL since",
    "start": "2032320",
    "end": "2040159"
  },
  {
    "text": "2011 um and so this does all the hard work of sharting and setting up",
    "start": "2040159",
    "end": "2046720"
  },
  {
    "text": "replication and things for MySQL um and they have kubernetes configurations included with that um so that may be",
    "start": "2046720",
    "end": "2053760"
  },
  {
    "text": "something to look into there's another kind of State uh so",
    "start": "2053760",
    "end": "2060000"
  },
  {
    "start": "2059000",
    "end": "2146000"
  },
  {
    "text": "if we're going to keep all the configuration out of our of our containers right how do we",
    "start": "2060000",
    "end": "2067440"
  },
  {
    "text": "get them them connected to our secure services to our databases to our apis we",
    "start": "2067440",
    "end": "2072599"
  },
  {
    "text": "need some way of getting the the actual stuff in there um and one way of doing it is environment variables um",
    "start": "2072599",
    "end": "2078960"
  },
  {
    "text": "kubernetes has decided to go with something that we think is a little bit more secure environment variables are",
    "start": "2078960",
    "end": "2085200"
  },
  {
    "text": "very intros spectable uh on purpose um so we have this concept of a named",
    "start": "2085200",
    "end": "2091280"
  },
  {
    "text": "secret and basically the cluster admin can configure named secrets and the",
    "start": "2091280",
    "end": "2098800"
  },
  {
    "text": "if you have permission the the the Pod templates so the replication controllers or the Pod Creations you basically say I",
    "start": "2098800",
    "end": "2105680"
  },
  {
    "text": "want to mix this named secret into my file system in this location so that I I",
    "start": "2105680",
    "end": "2111000"
  },
  {
    "text": "know that in you know SL whatever is my password uh every time I start up and",
    "start": "2111000",
    "end": "2117000"
  },
  {
    "text": "it's up to the cluster environment you know the cluster admin to configure what passwords are actually there in that",
    "start": "2117000",
    "end": "2123400"
  },
  {
    "text": "spot um so this lives all in temps it never hits disc on any of the nodes um",
    "start": "2123400",
    "end": "2130320"
  },
  {
    "text": "if you turn the machines off it all goes away um but this is a mechanism for getting that configuration of secret",
    "start": "2130320",
    "end": "2137599"
  },
  {
    "text": "information in there um we also have environment variables and labels and you know that kind of stuff that you can use",
    "start": "2137599",
    "end": "2143160"
  },
  {
    "text": "for other config so kubernetes uh was open sourced",
    "start": "2143160",
    "end": "2148480"
  },
  {
    "text": "in June 2014 so we're approaching a year and a half old it hit 10 um this year we",
    "start": "2148480",
    "end": "2154880"
  },
  {
    "text": "hit 11 last month and uh we have a hosted version of this that's called",
    "start": "2154880",
    "end": "2159960"
  },
  {
    "text": "container engine as part of a Google Cloud platform um it's already in use by several uh platforms to service folks so",
    "start": "2159960",
    "end": "2168000"
  },
  {
    "text": "the red hat uh open shift folks actually tore out their kind of orchestration layer and put kubernetes in under the uh",
    "start": "2168000",
    "end": "2174280"
  },
  {
    "text": "under there they've been extremely active contributors to the project um also Das and Stratos and I think there's",
    "start": "2174280",
    "end": "2181760"
  },
  {
    "text": "another that I'm forgetting um that are that are using kubernetes uh building kind of a more userfriendly",
    "start": "2181760",
    "end": "2189000"
  },
  {
    "text": "or sometimes more adjusted to certain environments uh platforms and then there's multiple distributions so if you",
    "start": "2189000",
    "end": "2195200"
  },
  {
    "text": "want to run this on your own machines uh coros tectonic you're going to hear next from mesos folks uh definitely stick",
    "start": "2195200",
    "end": "2202079"
  },
  {
    "text": "around for that on how kubernetes and meos fit together uh working towards a one two release so I just wanted to",
    "start": "2202079",
    "end": "2208200"
  },
  {
    "text": "quickly show um if so separating out this like setting up a cluster from",
    "start": "2208200",
    "end": "2213599"
  },
  {
    "text": "using the cluster I think it's kind of hard to tell whether you care enough to set one up in like your environment",
    "start": "2213599",
    "end": "2219400"
  },
  {
    "text": "until you've used it a bit so I strongly recommend using container engine Google",
    "start": "2219400",
    "end": "2225079"
  },
  {
    "text": "container engine to set up a cluster to play with wherever you plan on running it in long term it's definitely",
    "start": "2225079",
    "end": "2231119"
  },
  {
    "text": "definitely the easiest way to just get a cluster up and by easy I mean you hit this button you give it a",
    "start": "2231119",
    "end": "2237760"
  },
  {
    "text": "name and pick where you want to run it so we probably want to run it in Europe U Pick the size machines how many of",
    "start": "2237760",
    "end": "2244440"
  },
  {
    "text": "those machines and hit the button and 3 four 4 minutes later you have a cluster that's ready to go so this is my",
    "start": "2244440",
    "end": "2251680"
  },
  {
    "text": "recommendation for how to play with kubernetes wherever you plan on running it uh long term uh kuber is completely",
    "start": "2251680",
    "end": "2258440"
  },
  {
    "text": "open source for reals uh please if this is something interesting to you take a look at it um fill issues if you run",
    "start": "2258440",
    "end": "2266040"
  },
  {
    "start": "2259000",
    "end": "2289000"
  },
  {
    "text": "into any trouble when you get started um trying to play with it if you've got use cases where it doesn't work for you for",
    "start": "2266040",
    "end": "2273040"
  },
  {
    "text": "whatever reason we'd love to hear about that um the reason kubernetes is uh in",
    "start": "2273040",
    "end": "2278400"
  },
  {
    "text": "the place it is right now is because of the open source Community um that that's grown around it um it's been amazing so",
    "start": "2278400",
    "end": "2286680"
  },
  {
    "text": "please please join us um there and I'd like you to think about like the",
    "start": "2286680",
    "end": "2292280"
  },
  {
    "text": "applications you have uh the things you're doing right now and where they kind of fit in the abstractions you know",
    "start": "2292280",
    "end": "2299480"
  },
  {
    "text": "do they run on physical machines do they run on Virtual machines is it time for a",
    "start": "2299480",
    "end": "2304800"
  },
  {
    "text": "cluster of containers using path or do different parts of the app actually be a more natural fit in different parts of",
    "start": "2304800",
    "end": "2310319"
  },
  {
    "text": "it you know a really common pattern we see for Google Cloud customers is to put part of the app an app engine just that",
    "start": "2310319",
    "end": "2317079"
  },
  {
    "text": "just does HP requests boom boom boom boom boom and then another big part is all going to be off on Virtual machines",
    "start": "2317079",
    "end": "2322119"
  },
  {
    "text": "so think about your applications and how how they fit and I really think you have a new kind of architectural Choice uh",
    "start": "2322119",
    "end": "2329440"
  },
  {
    "text": "new Option at least U let's say option uh to think about so thank you all very",
    "start": "2329440",
    "end": "2335079"
  },
  {
    "text": "very much that's the end of the talk",
    "start": "2335079",
    "end": "2339440"
  },
  {
    "start": "2339000",
    "end": "2509000"
  },
  {
    "text": "Brian and we have questions we have a number of questions excellent first question is about replica controllers uh",
    "start": "2343599",
    "end": "2350800"
  },
  {
    "text": "there actually two questions one is are replica controllers like a single point of failure and why is the replica",
    "start": "2350800",
    "end": "2357000"
  },
  {
    "text": "controller separate from the schedular or is it actually not an actual separate component okay so let's do the first one",
    "start": "2357000",
    "end": "2363119"
  },
  {
    "text": "of theirs is a replication controller a single pointer failure um the replication control is a logical uh is a",
    "start": "2363119",
    "end": "2370319"
  },
  {
    "text": "logical thing it's it's part of the kubernetes cluster um it's actually",
    "start": "2370319",
    "end": "2375720"
  },
  {
    "text": "implemented at as a single process on the master so there is a master that is",
    "start": "2375720",
    "end": "2381319"
  },
  {
    "text": "a single point of failure that's implementing the replication controller um that said um you know the the whole",
    "start": "2381319",
    "end": "2387520"
  },
  {
    "text": "back end for that is at CD so there's a strong uh deterministic consensus protocol behind that and there are",
    "start": "2387520",
    "end": "2394040"
  },
  {
    "text": "definitely people already uh running multiple Masters you know in standby",
    "start": "2394040",
    "end": "2399200"
  },
  {
    "text": "mode um so you can have you know multiple processes ready to do the work on different physical machines there",
    "start": "2399200",
    "end": "2404880"
  },
  {
    "text": "also if something does go wrong since we have the um the kind of detailed",
    "start": "2404880",
    "end": "2410640"
  },
  {
    "text": "management pushed out to all of the nodes if you lose the master for some period of time the current configuration",
    "start": "2410640",
    "end": "2416839"
  },
  {
    "text": "just stays all the networking keeps working um the services stay working if individual containers die they get",
    "start": "2416839",
    "end": "2423160"
  },
  {
    "text": "restarted um the system stays going it's just that you can't change it until you have a master to talk to uh there so the",
    "start": "2423160",
    "end": "2430560"
  },
  {
    "text": "second question was uh is the replica controller separate from the Schuler but I presume schedule is also running in",
    "start": "2430560",
    "end": "2436680"
  },
  {
    "text": "the in the master as well yeah so it it is it is separate um so and and very",
    "start": "2436680",
    "end": "2442400"
  },
  {
    "text": "much on purpose because it's pluggable so we have new controllers now uh so for example we have a jobs controller that",
    "start": "2442400",
    "end": "2447560"
  },
  {
    "text": "is specifically designed to help you do batch workloads so if you want to make sure that a thousand copies of this",
    "start": "2447560",
    "end": "2453359"
  },
  {
    "text": "container run even if some of them fail like don't care which machines they're on the batch job controllers there for",
    "start": "2453359",
    "end": "2458599"
  },
  {
    "text": "you so the replication controller what it does is it just it's actually a process that's just talking to the",
    "start": "2458599",
    "end": "2464200"
  },
  {
    "text": "kubernetes apis so you if you want to make the the special phase of the moon controller",
    "start": "2464200",
    "end": "2472240"
  },
  {
    "text": "that does more process pods when the moon's in a certain phase or what have you you can totally do that uh using the",
    "start": "2472240",
    "end": "2477400"
  },
  {
    "text": "same apis that replication controller does so uh yes schedule are separate and when you request to kubernetes give me a",
    "start": "2477400",
    "end": "2483640"
  },
  {
    "text": "new pod then theer kicks in and decides where to put that um and and it's mostly kind of spreading the workout right now",
    "start": "2483640",
    "end": "2489680"
  },
  {
    "text": "but as we get more metrics plugged in through the heapster work they're actively working on uh doing this kind",
    "start": "2489680",
    "end": "2494720"
  },
  {
    "text": "of multi- dimensional Tetris game of finding out where the best place to put a podt is for memory dis you know CPU",
    "start": "2494720",
    "end": "2501760"
  },
  {
    "text": "all the things um next question is related to",
    "start": "2501760",
    "end": "2506800"
  },
  {
    "text": "the presentation itself uh the the source code of the application and the command line uh calls that you did are",
    "start": "2506800",
    "end": "2513160"
  },
  {
    "start": "2509000",
    "end": "2729000"
  },
  {
    "text": "they part of the slides as well or you have a they are in the slides and and I will in fact so I I will do a live",
    "start": "2513160",
    "end": "2522000"
  },
  {
    "text": "pointer um but also kind of add them there as well so this is the kubernetes GitHub repo um 11,000 Stars 21,000",
    "start": "2522000",
    "end": "2532440"
  },
  {
    "text": "commits um and there's an example folder here the uh the example that I did was",
    "start": "2532440",
    "end": "2539680"
  },
  {
    "text": "the guestbook example okay so you can you can run this guest book example yourself I think this this example might",
    "start": "2539680",
    "end": "2545760"
  },
  {
    "text": "be slightly newer than the exact version that I ran and and the the amazing",
    "start": "2545760",
    "end": "2551359"
  },
  {
    "text": "update to the design is not here okay uh next question um someone",
    "start": "2551359",
    "end": "2559440"
  },
  {
    "text": "asked how much Manpower how much time is actually needed to get really up to speed from zero to have kind of enough",
    "start": "2559440",
    "end": "2566040"
  },
  {
    "text": "kubernetes understanding to run a or set up and run a successful uh kubernetes set up so how much time is do you need",
    "start": "2566040",
    "end": "2573680"
  },
  {
    "text": "to actually kind of get started with kubernetes I think um there's a two parts to that question I",
    "start": "2573680",
    "end": "2580319"
  },
  {
    "text": "think the more complicated part is actually um getting the experience to",
    "start": "2580319",
    "end": "2585760"
  },
  {
    "text": "kind of run a cluster in production well there's there's lots of challenges that are really outside of kubernetes there",
    "start": "2585760",
    "end": "2591359"
  },
  {
    "text": "around networks and uh you know keeping everything happy there um for kubernetes",
    "start": "2591359",
    "end": "2597599"
  },
  {
    "text": "itself for like building an application that's going to run in kubernetes I think if you spent several days with the",
    "start": "2597599",
    "end": "2604720"
  },
  {
    "text": "concepts and work through some of the examples you would be in a really really good place to begin porting you know one",
    "start": "2604720",
    "end": "2610079"
  },
  {
    "text": "of your applications um in fact probably within the first day um definitely look",
    "start": "2610079",
    "end": "2615680"
  },
  {
    "text": "look at the different concepts the things you really need I talked about in this talk you need pods you need replication controllers and you need",
    "start": "2615680",
    "end": "2621880"
  },
  {
    "text": "services and and you need to have some process that you've made a Docker image",
    "start": "2621880",
    "end": "2627520"
  },
  {
    "text": "of that list is not a port or something you know that does something outside of the the container and if you have those",
    "start": "2627520",
    "end": "2633319"
  },
  {
    "text": "things you can probably actually already go and look at some of the examples and make a config that runs them or",
    "start": "2633319",
    "end": "2638760"
  },
  {
    "text": "literally just run the cube control run command that I did that creates the configs for you the the very first",
    "start": "2638760",
    "end": "2643920"
  },
  {
    "text": "command that's in the slides yeah cool um question to canaries uh when you do",
    "start": "2643920",
    "end": "2651359"
  },
  {
    "text": "canaries how do you make sure that the user gets back the same uh version of",
    "start": "2651359",
    "end": "2656960"
  },
  {
    "text": "the service the same label of the service right does the load balancer do sticky sessions or so um we're doing so",
    "start": "2656960",
    "end": "2664599"
  },
  {
    "text": "it depends on the load balancer you're using to get into the kubernetes cluster and then um kubernetes itself does some",
    "start": "2664599",
    "end": "2672160"
  },
  {
    "text": "some work there so it's a little it's a little bit complex it's not um so if you want to",
    "start": "2672160",
    "end": "2679880"
  },
  {
    "text": "make sure let's say how how let's say how we do this um if you're just running a",
    "start": "2679880",
    "end": "2686920"
  },
  {
    "text": "default setup on container engine on Google Cloud the Google Cloud load",
    "start": "2686920",
    "end": "2691960"
  },
  {
    "text": "balancer will use client IP affinity and that will get you to a specific node",
    "start": "2691960",
    "end": "2698440"
  },
  {
    "text": "which then also will kind of use some Affinity to get you to the same pod um",
    "start": "2698440",
    "end": "2706119"
  },
  {
    "text": "but it depending on the environment you're running in that may not be the case so um if you need to make sure for",
    "start": "2706119",
    "end": "2712680"
  },
  {
    "text": "your app that you always hit the version two and you want to do that um it may",
    "start": "2712680",
    "end": "2718359"
  },
  {
    "text": "make sense to actually add two services so you add a second service for that and give it a different like subdomain name",
    "start": "2718359",
    "end": "2723640"
  },
  {
    "text": "or what have you um and then you can ensure that the traffic hits there um okay in that way cool uh two",
    "start": "2723640",
    "end": "2729680"
  },
  {
    "start": "2729000",
    "end": "3040000"
  },
  {
    "text": "configuration questions uh one is is there a declarative way to control",
    "start": "2729680",
    "end": "2735000"
  },
  {
    "text": "replication controllers uh similar uh to an Bor CFG",
    "start": "2735000",
    "end": "2740440"
  },
  {
    "text": "update oh and the other question which is also configuration uh dependent is um",
    "start": "2740440",
    "end": "2749359"
  },
  {
    "text": "how does the fixed information about number of replicas in the in the um",
    "start": "2749359",
    "end": "2756319"
  },
  {
    "text": "configuration y file uh relate to the auto scaling but I think they're just entries for auto scaling yeah kind of",
    "start": "2756319",
    "end": "2762480"
  },
  {
    "text": "the same same thing here so this is one version of the declarative representation of a replication",
    "start": "2762480",
    "end": "2768440"
  },
  {
    "text": "controller and um I'll I can't really address the board config aspect of that",
    "start": "2768440",
    "end": "2773640"
  },
  {
    "text": "question um but this is um defining how",
    "start": "2773640",
    "end": "2778720"
  },
  {
    "text": "a replication controller should be when it's pushed up into a kubernetes cluster",
    "start": "2778720",
    "end": "2783960"
  },
  {
    "text": "um as far as how that relates to the actual value of for example the",
    "start": "2783960",
    "end": "2789839"
  },
  {
    "text": "number of replicas especially if you've got if I've changed them later or you're using autoscaling um this version you",
    "start": "2789839",
    "end": "2796400"
  },
  {
    "text": "would have checked in somewhere and you push it out when you create the the initial replication controller and then",
    "start": "2796400",
    "end": "2801800"
  },
  {
    "text": "over time the system will adjust you know to match the actual load that's there um so if you if you wanted to feed",
    "start": "2801800",
    "end": "2810200"
  },
  {
    "text": "that back somehow into your actual kind of default configs you'd need to add um to pull this config back down",
    "start": "2810200",
    "end": "2817400"
  },
  {
    "text": "and and kind of check it back in and diff it um this is a yaml document we're looking at here the actual API speaks",
    "start": "2817400",
    "end": "2824119"
  },
  {
    "text": "Jason you can make Cube control spit out uh the raw uh Json or yaml converted",
    "start": "2824119",
    "end": "2831160"
  },
  {
    "text": "version of the document that comes back from the rest API so if you want to pull",
    "start": "2831160",
    "end": "2836240"
  },
  {
    "text": "down what the server knows of the current state and get that out as one of these documents that you could check in",
    "start": "2836240",
    "end": "2842280"
  },
  {
    "text": "you can do that uh from Cube control that's good to know um question around",
    "start": "2842280",
    "end": "2848040"
  },
  {
    "text": "security uh so one question I have actually is can you limit visibility of",
    "start": "2848040",
    "end": "2853599"
  },
  {
    "text": "uh the shared secrets to a single container within a pot or is it always the whole pot because otherwise you can",
    "start": "2853599",
    "end": "2859240"
  },
  {
    "text": "use like some evil injection thing to access actually file system totally um so we're we're working to improve the",
    "start": "2859240",
    "end": "2866480"
  },
  {
    "text": "granularity of security for sure uh right now the security in kubernetes uh",
    "start": "2866480",
    "end": "2871640"
  },
  {
    "text": "is very kind of uh cluster level there's also a concept of Nam spaces so like all",
    "start": "2871640",
    "end": "2877520"
  },
  {
    "text": "the stuff I did was in this default namespace you can have different slices of the same cluster that are namespaced",
    "start": "2877520",
    "end": "2883760"
  },
  {
    "text": "apart from each other and they have their own services and replication controllers and pods and all that sort of stuff um and there's some security",
    "start": "2883760",
    "end": "2889880"
  },
  {
    "text": "stuff there if you need the very granular Security today um I definitely",
    "start": "2889880",
    "end": "2895920"
  },
  {
    "text": "recommend taking a look at what some of the red hat Enterprise folks are doing with security they've they've mixed the security in with their existing",
    "start": "2895920",
    "end": "2902680"
  },
  {
    "text": "Enterprise you know stuff and and that should be of Interest I think okay sorry",
    "start": "2902680",
    "end": "2909200"
  },
  {
    "text": "little and um last question is about um at the end you showed how to spin up a",
    "start": "2909200",
    "end": "2914640"
  },
  {
    "text": "cluster uh for such a setup and the question is uh all the instances had the same size uh in in your example uh but I",
    "start": "2914640",
    "end": "2923520"
  },
  {
    "text": "think that might be controllable which sizes um are all the instances the same size so yes uh when you when you create",
    "start": "2923520",
    "end": "2930799"
  },
  {
    "text": "it by default um in fact unless you go out of your way to uh kind of create your own instances manually and join",
    "start": "2930799",
    "end": "2937119"
  },
  {
    "text": "them into a cluster all of the scripts that create you know kubernetes clusters will create homogeneous clusters um so",
    "start": "2937119",
    "end": "2943640"
  },
  {
    "text": "you've got a couple options um we actually think in almost all the cases",
    "start": "2943640",
    "end": "2948920"
  },
  {
    "text": "that's really what you want but if you have physical machines that are already different um and you need to use them",
    "start": "2948920",
    "end": "2954799"
  },
  {
    "text": "differently you can actually label them you can label the actual nodes and you can create um constraints on the the",
    "start": "2954799",
    "end": "2962040"
  },
  {
    "text": "deployment docs that you make to say that you know for example um I need to be on a node that has a good GPU and so",
    "start": "2962040",
    "end": "2968839"
  },
  {
    "text": "you can label the nodes with gpus and then you can actually label your your pod templates saying you know requires a",
    "start": "2968839",
    "end": "2974680"
  },
  {
    "text": "GPU um it's not strictly answering that question but but basically we normally do homogeneous uh machines Mak sense um",
    "start": "2974680",
    "end": "2982119"
  },
  {
    "text": "and it helps with scheduling a lot um that will if that's really important to you like definitely talk to me",
    "start": "2982119",
    "end": "2987720"
  },
  {
    "text": "afterwards and we'll try to get that into the mix yeah and a question related to that uh do you have an example of a",
    "start": "2987720",
    "end": "2993599"
  },
  {
    "text": "declarative uh deployment uh script where you find kind of which kind of machines you want to to run your cluster",
    "start": "2993599",
    "end": "2999839"
  },
  {
    "text": "on uh I online somewhere yeah so we have scripts for creating cluster um and",
    "start": "2999839",
    "end": "3007720"
  },
  {
    "text": "there are you know are some yeah I should probably chat with that person afterwards like the actual",
    "start": "3007720",
    "end": "3013799"
  },
  {
    "text": "cluster setup is kind of a different space okay cool yeah that's it uh I think for questions oh no",
    "start": "3013799",
    "end": "3020960"
  },
  {
    "text": "there's uh I think you answered all the other ones",
    "start": "3020960",
    "end": "3027160"
  },
  {
    "text": "don't forget to R to talk thank you all very very much and for awesome questions thank you Brian it was really impressive",
    "start": "3027160",
    "end": "3033440"
  },
  {
    "text": "talk and yep",
    "start": "3033440",
    "end": "3038520"
  }
]