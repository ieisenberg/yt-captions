[
  {
    "start": "0",
    "end": "146000"
  },
  {
    "text": "[Music]",
    "start": "3520",
    "end": "7840"
  },
  {
    "text": "so welcome to building HTTP API SDKs that really are a kit it's kind of",
    "start": "12730",
    "end": "20540"
  },
  {
    "text": "unfortunate that we got stuck with the term SDK for client API libraries it's",
    "start": "20540",
    "end": "27680"
  },
  {
    "text": "not a great name but I mean it stands for a software development kit so if we're gonna call it that we should",
    "start": "27680",
    "end": "33650"
  },
  {
    "text": "actually make sure that what we are building is really a kit and that is the essence of this talk I also call it HTTP",
    "start": "33650",
    "end": "42380"
  },
  {
    "text": "API some people use the term REST API but I don't use that term because I'm a recovering hyper media addict my name is",
    "start": "42380",
    "end": "51020"
  },
  {
    "text": "Darrell Miller and I worked for Microsoft as a program manager in the Microsoft graph Devex team I'm also an",
    "start": "51020",
    "end": "58280"
  },
  {
    "text": "editor of the open API specification so if you have questions about open API feel free to reach out to me offline the",
    "start": "58280",
    "end": "64878"
  },
  {
    "text": "Microsoft graph is a unified API to the Microsoft 365 data that describes the",
    "start": "64879",
    "end": "69950"
  },
  {
    "text": "patterns of productivity identity and security in an organization you can tell it wasn't a developer or an engineer",
    "start": "69950",
    "end": "76820"
  },
  {
    "text": "that wrote that spiel but that's what it is in more layman's terms it is an API",
    "start": "76820",
    "end": "83240"
  },
  {
    "text": "that allows you to access all kinds of data if you have an office 365 tenant or",
    "start": "83240",
    "end": "89509"
  },
  {
    "text": "you're a hotmail or Windows Live or whatever it's called this week user outlook comm you can access your files",
    "start": "89509",
    "end": "95600"
  },
  {
    "text": "your devices your groups your contacts your alerts your message is and if you're part of a larger organization",
    "start": "95600",
    "end": "101810"
  },
  {
    "text": "using 365 you can get access to all of that data but all of the connections",
    "start": "101810",
    "end": "107900"
  },
  {
    "text": "between that data and find out the files that people around you are working with the people who you collaborate with and",
    "start": "107900",
    "end": "115040"
  },
  {
    "text": "this is why it's called Microsoft graph everybody says oh you're doing graphic you all know we are looking into it we",
    "start": "115040",
    "end": "121460"
  },
  {
    "text": "may even put a graph QL front-end on it at some point but it isn't currently a graph QL there are probably over 2000",
    "start": "121460",
    "end": "131030"
  },
  {
    "text": "api's in this or sir resources across",
    "start": "131030",
    "end": "136849"
  },
  {
    "text": "the API for 50 different service teams so it's a big p.i but this talk is not about Microsoft",
    "start": "136849",
    "end": "143310"
  },
  {
    "text": "graph it's about SDKs and part of my role at Microsoft is to deliver SDKs for",
    "start": "143310",
    "end": "151710"
  },
  {
    "start": "146000",
    "end": "146000"
  },
  {
    "text": "the Microsoft graph we currently develop in seven different languages there's a couple of other languages you'd like to",
    "start": "151710",
    "end": "157950"
  },
  {
    "text": "adopt also and this chart kind of shows the growth that we've had over the last 15 months of usage of our SDKs and sorry",
    "start": "157950",
    "end": "167280"
  },
  {
    "text": "there are no numbers here marketing get a little sensitive and random employees",
    "start": "167280",
    "end": "172590"
  },
  {
    "text": "share growth numbers so the point that I really want to make is just to kind of",
    "start": "172590",
    "end": "178020"
  },
  {
    "text": "show is we are the different colors represent different languages that we",
    "start": "178020",
    "end": "183510"
  },
  {
    "text": "support and if you look at the gray and the yellow and the black these are the SDKs that we've actually been spending",
    "start": "183510",
    "end": "190500"
  },
  {
    "text": "some time really trying to refactor the architecture and we are seeing some encouraging progress in those particular",
    "start": "190500",
    "end": "198830"
  },
  {
    "text": "SDKs the ones the other ones that aren't showing any growth we really haven't had much opportunity to do so anything other",
    "start": "198830",
    "end": "205260"
  },
  {
    "text": "than really bug fixes spawning Microsoft to suit people assume that Microsoft",
    "start": "205260",
    "end": "210330"
  },
  {
    "text": "kind of has infinite resources to be able to spend more stuff but when you divide that by an infinite number of projects that we're currently working on",
    "start": "210330",
    "end": "216690"
  },
  {
    "text": "we often don't have many more resources than your average startup so it leads us",
    "start": "216690",
    "end": "222330"
  },
  {
    "text": "to two questions if I mean we saw big",
    "start": "222330",
    "end": "227580"
  },
  {
    "text": "growth in the SDK usage but we're still a long way from everybody using our SDKs",
    "start": "227580",
    "end": "233970"
  },
  {
    "text": "so why isn't everybody using the SDK and what can be done to encourage usage of",
    "start": "233970",
    "end": "241410"
  },
  {
    "text": "SDK and just as a little side note those two icons were picked by artificial",
    "start": "241410",
    "end": "248070"
  },
  {
    "text": "intelligence based on the text that is in those messages so I'm pretty sure where our jobs fairly safe for a little",
    "start": "248070",
    "end": "254790"
  },
  {
    "text": "bit longer although the in giving serving Winer to people to convince them to use our SDKs",
    "start": "254790",
    "end": "260940"
  },
  {
    "text": "has some interesting idea the question is why isn't everybody using our SDKs",
    "start": "260940",
    "end": "268740"
  },
  {
    "text": "well come on yeah how do you feel about SDKs",
    "start": "268740",
    "end": "280090"
  },
  {
    "text": "for api's I kind of feel much like people's opinions on Vegemite they tend",
    "start": "280090",
    "end": "285910"
  },
  {
    "text": "to fall into one of two categories Penn well either the other love them or they",
    "start": "285910",
    "end": "294910"
  },
  {
    "text": "hate them and it's either I'm not gonna use our API unless you have an SDK just it that's it",
    "start": "294910",
    "end": "300010"
  },
  {
    "text": "nope not gonna use it at all or it's I don't want you're thinking a SDK I know how to make HTTP calls I don't want to",
    "start": "300010",
    "end": "306400"
  },
  {
    "text": "use all your stuff all right and even API providers who really would rather not have to spend all the time",
    "start": "306400",
    "end": "312490"
  },
  {
    "text": "and effort in building those SDKs there's still that set of customers who were like I'm not gonna use it unless you have an SDK for me personally I",
    "start": "312490",
    "end": "319870"
  },
  {
    "text": "never really liked them I've sort of been in the second camp of the haters and I spent years trying to figure out a",
    "start": "319870",
    "end": "326830"
  },
  {
    "text": "way that I could build them work you know because I know there's some value in there there's certain things that we",
    "start": "326830",
    "end": "333100"
  },
  {
    "text": "shouldn't have to rebuild time and time and time again so when I got the chance at Microsoft to make SDK is the way I",
    "start": "333100",
    "end": "340120"
  },
  {
    "text": "think they should be made I jumped at it and I think the problem is some people",
    "start": "340120",
    "end": "346290"
  },
  {
    "text": "feel SDKs make them really limited they constrained because there is no",
    "start": "346290",
    "end": "351820"
  },
  {
    "text": "flexibility in the SDKs and the reason there is no flexibility in many SDKs",
    "start": "351820",
    "end": "357310"
  },
  {
    "text": "that are built is because they're designed primarily for a single use case it's the getting started experience or",
    "start": "357310",
    "end": "364930"
  },
  {
    "text": "what or how my dev rel friends like to call time to first call that onboarding experience we've got to get people",
    "start": "364930",
    "end": "371050"
  },
  {
    "text": "quickly to use our API so they start getting value out of it of this expression of Microsoft which is five",
    "start": "371050",
    "end": "377140"
  },
  {
    "text": "minutes to Wow and designing showing how simple and easy something is yeah yeah",
    "start": "377140",
    "end": "384550"
  },
  {
    "text": "it's really critical but the problem is is when your goal is to build something really simple",
    "start": "384550",
    "end": "390550"
  },
  {
    "text": "sometimes flexibility pays the price because flexibility introduces a certain",
    "start": "390550",
    "end": "395980"
  },
  {
    "text": "amount of complexity and then there's the other challenge with SDKs it's not",
    "start": "395980",
    "end": "401770"
  },
  {
    "text": "like we're just building one we have to build a whole bunch of them like we're building seven",
    "start": "401770",
    "end": "406870"
  },
  {
    "text": "we should really probably be building nine because our developers work on many",
    "start": "406870",
    "end": "412360"
  },
  {
    "text": "different platforms and the fact that you've got to build that many languages probably means you're gonna end up going",
    "start": "412360",
    "end": "419650"
  },
  {
    "text": "down the code generation path and you",
    "start": "419650",
    "end": "424900"
  },
  {
    "start": "422000",
    "end": "422000"
  },
  {
    "text": "end up with software that's built by a machine and cogeneration is really a",
    "start": "424900",
    "end": "430870"
  },
  {
    "text": "double-edged sword it can make some things really really easy but it also",
    "start": "430870",
    "end": "436330"
  },
  {
    "text": "makes it really easy to make poorly architected code because you can just churn it out and supporting",
    "start": "436330",
    "end": "444310"
  },
  {
    "text": "cross-platform especially with a code generator type solution often means only supporting the lowest common denominator",
    "start": "444310",
    "end": "451350"
  },
  {
    "text": "features and now there are SDK code generators out there there's a number of",
    "start": "451350",
    "end": "456400"
  },
  {
    "text": "different than theirs even services out there where you can take your API description language and you can upload",
    "start": "456400",
    "end": "461560"
  },
  {
    "text": "it to the service and they'll spit out a bunch of SDK isn't there you go you've got it and so your manager is like well",
    "start": "461560",
    "end": "467289"
  },
  {
    "text": "I don't need to hire any devs to do this I can just generate them and hand them out to our customers but what that ends",
    "start": "467289",
    "end": "473320"
  },
  {
    "text": "up doing is generating really poor and inflexible SDKs and it ends up with the",
    "start": "473320",
    "end": "482320"
  },
  {
    "text": "developer in a situation of they try and use it it works for some of their cases and then they hit an edge case ah it",
    "start": "482320",
    "end": "490660"
  },
  {
    "text": "doesn't work for this scenario okay well I'll go back and I'll use my native libraries for this and then they have to build a bunch of infrastructure to do",
    "start": "490660",
    "end": "496780"
  },
  {
    "text": "that and then it's like well if I'm doing the using my own infrastructure for that call why am i pulling in this",
    "start": "496780",
    "end": "503110"
  },
  {
    "text": "extra dependency and that as well just use my infrastructure for everything so",
    "start": "503110",
    "end": "512409"
  },
  {
    "text": "the second question was what can we do to encourage usage what we need is a",
    "start": "512409",
    "end": "521500"
  },
  {
    "text": "real kit so developers can pick and choose the parts that they want to use",
    "start": "521500",
    "end": "528660"
  },
  {
    "text": "so new users get this fully streamlined approach and the folks who are building",
    "start": "528660",
    "end": "534130"
  },
  {
    "text": "commercial products who need to eke out every little bit of performance and reliability they can get under the cover",
    "start": "534130",
    "end": "540490"
  },
  {
    "text": "and they can use just the parts that they want to use so that they don't have to build those parts themselves users",
    "start": "540490",
    "end": "546940"
  },
  {
    "text": "need to have choices so what we're gonna look at now is the approach that we've",
    "start": "546940",
    "end": "552250"
  },
  {
    "text": "been working on in the Microsoft for graph team where we have done a bunch of refactoring and I was fairly lucky when",
    "start": "552250",
    "end": "557980"
  },
  {
    "text": "I joined the teams the SDKs weren't bad they just didn't have that flexibility and we were able to introduce some",
    "start": "557980",
    "end": "563980"
  },
  {
    "text": "architectural seems that allowed you to pick and choose the parts that you want",
    "start": "563980",
    "end": "569280"
  },
  {
    "text": "without really making any breaking changes so one of the first principles",
    "start": "569280",
    "end": "578020"
  },
  {
    "start": "575000",
    "end": "575000"
  },
  {
    "text": "when we start in a particular language is we look into what is the de facto",
    "start": "578020",
    "end": "583930"
  },
  {
    "text": "native client on a particular platform dotnet it's most likely HP client or",
    "start": "583930",
    "end": "589840"
  },
  {
    "text": "maybe people using RESP sharp we built",
    "start": "589840",
    "end": "595750"
  },
  {
    "text": "it on top of HP client if you go into Android and Java we used okay HTTP and PHP we use guzzle you pick what the",
    "start": "595750",
    "end": "603610"
  },
  {
    "text": "developers have already sort of picked because that is what they're familiar with so then if they if they're using",
    "start": "603610",
    "end": "609730"
  },
  {
    "text": "that library how do we add value well one really nice concept is the notion middleware and many sdk many HP",
    "start": "609730",
    "end": "618640"
  },
  {
    "text": "libraries out there support the notion of putting middleware in java they call them interceptors it's it's a way of",
    "start": "618640",
    "end": "625780"
  },
  {
    "text": "kind of putting behind that native interface a bunch of capabilities for cross-cutting concerns we're gonna dig",
    "start": "625780",
    "end": "632830"
  },
  {
    "text": "into all of these boxes a little bit deeper but just as an overview from with middleware is you can't gotta set up",
    "start": "632830",
    "end": "639130"
  },
  {
    "text": "this pipeline and in some things it's a Russian doll model and it's a bit ugly to set up so we created a client factory",
    "start": "639130",
    "end": "644560"
  },
  {
    "text": "that helps you just create a native client library as you're used to using but with the middleware that is set up",
    "start": "644560",
    "end": "651460"
  },
  {
    "text": "for our particular API already pre-configured for you we also find that",
    "start": "651460",
    "end": "658060"
  },
  {
    "text": "across a particular API although you may be serving who knows what kind of domain",
    "start": "658060",
    "end": "663100"
  },
  {
    "text": "there's usually a lot of common patterns collections batching paging multi-part",
    "start": "663100",
    "end": "669340"
  },
  {
    "text": "content and you can create some common content objects that help you construct the payloads something else we've done and",
    "start": "669340",
    "end": "676180"
  },
  {
    "text": "also on the response side there's certain standard patterns that you do",
    "start": "676180",
    "end": "681490"
  },
  {
    "text": "when you get receive a response how you deal with 404 is how you deal with 406 is all this kind of stuff you can",
    "start": "681490",
    "end": "687370"
  },
  {
    "text": "encapsulate that and put it inside a response handler and these blue boxes what we call our core library that we",
    "start": "687370",
    "end": "694180"
  },
  {
    "text": "layer on top and if you just want to use our core library go for it that's fine and it's really nice because if",
    "start": "694180",
    "end": "699730"
  },
  {
    "text": "somebody's already started working with the native life they have an existing app they can retrofit this in to their",
    "start": "699730",
    "end": "706240"
  },
  {
    "text": "existing app fairly easily but there's still more value that we can add and this is where it comes to the",
    "start": "706240",
    "end": "711850"
  },
  {
    "text": "cogeneration layer and we tend to start with kind of this service client which is a domain specific API specific",
    "start": "711850",
    "end": "719079"
  },
  {
    "text": "language native interface for all those common use cases and along with that of course we generate the API models to",
    "start": "719079",
    "end": "725410"
  },
  {
    "text": "help you build payloads and then we also build a set of things that we called request builders which are classes that",
    "start": "725410",
    "end": "732490"
  },
  {
    "text": "help you construct that URI construct the necessary headers in the request and",
    "start": "732490",
    "end": "738160"
  },
  {
    "text": "potentially also the payload if you're going to send that over and then there's a cherry on top we have this notion of",
    "start": "738160",
    "end": "744010"
  },
  {
    "text": "tasks which support scenarios where there's a coordinated set of HTTP",
    "start": "744010",
    "end": "750820"
  },
  {
    "text": "requests that achieve some particular goal so how does this kind of fit into a",
    "start": "750820",
    "end": "759250"
  },
  {
    "text": "flow of how we actually make a call well if you're going for the full experience you you create an instance of your",
    "start": "759250",
    "end": "764860"
  },
  {
    "start": "760000",
    "end": "760000"
  },
  {
    "text": "service the library client and under the covers it uses the client factory to create an instance of the native HTTP",
    "start": "764860",
    "end": "771279"
  },
  {
    "text": "client library for that particular platform and then when we build a request we use a combination the request",
    "start": "771279",
    "end": "778149"
  },
  {
    "text": "builders and maybe common content and maybe API models and we construct a native HP request and send it along to",
    "start": "778149",
    "end": "784959"
  },
  {
    "text": "the HTV client object which then gets passed along the wire through the middleware pipeline to the service does",
    "start": "784959",
    "end": "790360"
  },
  {
    "text": "its thing comes back as a request through the middleware pipeline we add more value on there and then we bring",
    "start": "790360",
    "end": "796000"
  },
  {
    "text": "that response back and we have a response Handler and also obviously API models for mapping to the the return",
    "start": "796000",
    "end": "802420"
  },
  {
    "text": "payload and potentially common content if we're getting paged collections of things",
    "start": "802420",
    "end": "807640"
  },
  {
    "text": "and again tasks is something that can assets on top there in order to perform those higher-level concepts so what does",
    "start": "807640",
    "end": "815680"
  },
  {
    "text": "that look like in code so here's the c-sharp experience like justjust I just",
    "start": "815680",
    "end": "821440"
  },
  {
    "start": "818000",
    "end": "818000"
  },
  {
    "text": "want to get my data I don't want to do anything clever I just want it I want my five minutes to WoW experience so we",
    "start": "821440",
    "end": "828130"
  },
  {
    "text": "knew up a graph service client we have to pass it in a north provider so there's some both to credentials and",
    "start": "828130",
    "end": "834490"
  },
  {
    "text": "identifiers that need to be passed in we'll talk a little bit more about in a moment and then we make a call to our",
    "start": "834490",
    "end": "842829"
  },
  {
    "text": "graph client in order to construct that request we've got a fluent interface it allows you to kind of dart through and",
    "start": "842829",
    "end": "848980"
  },
  {
    "text": "discover it in this case I'm saying I want me doc messages which is my email messages in my inbox and I create the",
    "start": "848980",
    "end": "855730"
  },
  {
    "text": "request object and then I said all the query parameters I want the top 100 requests and I'm gonna project just",
    "start": "855730",
    "end": "863079"
  },
  {
    "text": "return back the subject lines we don't want to actually bring back all the stuff and then I'm gonna make a get",
    "start": "863079",
    "end": "868720"
  },
  {
    "text": "request on this thing and that goes off and it makes that request and returns you back Jason which then gets surrett",
    "start": "868720",
    "end": "876130"
  },
  {
    "text": "deserialized into a strongly typed collection to use your messages collection page it's rather elderly",
    "start": "876130",
    "end": "882459"
  },
  {
    "text": "class name so yes what happens when you co generate code you sometimes generate ugly artifacts but it's a pager messages",
    "start": "882459",
    "end": "889180"
  },
  {
    "text": "that you'll be able to page through that's what it looks like in c-sharp that's what it looks like in Java graph",
    "start": "889180",
    "end": "895570"
  },
  {
    "text": "service client builder it's slightly different I was written by somebody who knows Java",
    "start": "895570",
    "end": "900750"
  },
  {
    "text": "much better than I do but in essence the architectural components there are the",
    "start": "900750",
    "end": "907930"
  },
  {
    "text": "same it looks a little bit different but hopefully it is a more idiomatic experience for Java developers um",
    "start": "907930",
    "end": "916440"
  },
  {
    "text": "forgive me most of my examples are c-sharp I got a a JavaScript one later",
    "start": "916440",
    "end": "922120"
  },
  {
    "text": "on that all of the architectural characteristics that I described through",
    "start": "922120",
    "end": "928510"
  },
  {
    "text": "these talks should be available in dotnet Java JavaScript and objective-c and hopefully soon in PHP and Python and",
    "start": "928510",
    "end": "936250"
  },
  {
    "text": "go hopefully so there's the really easy experience",
    "start": "936250",
    "end": "941500"
  },
  {
    "text": "but that's building a graph client with just the default behavior what happens if I want to inject some of my own",
    "start": "941500",
    "end": "947560"
  },
  {
    "text": "behavior I want to add a new piece of middleware into the experience so here",
    "start": "947560",
    "end": "952690"
  },
  {
    "start": "950000",
    "end": "950000"
  },
  {
    "text": "we have a little bit more setup code here where I am going off and well if",
    "start": "952690",
    "end": "959830"
  },
  {
    "text": "you go a little further down the code you can still see this graph service client but now I'm passing in an HTTP",
    "start": "959830",
    "end": "965530"
  },
  {
    "text": "client an instance that I've pre-configured and I'm using my graph client factory here to create that",
    "start": "965530",
    "end": "973980"
  },
  {
    "text": "instance of that HTTP client and I pass into it a set of handlers and I can go",
    "start": "973980",
    "end": "979810"
  },
  {
    "text": "and get the default handlers using graph client factory create default handlers and I pass in the auth provider as I did",
    "start": "979810",
    "end": "985780"
  },
  {
    "text": "previously to my graph servers client but then I added in our Kaos handler",
    "start": "985780",
    "end": "990880"
  },
  {
    "text": "which we curiously called the chaos giraffe handler because chaos monkey was already taken and it insert injects a",
    "start": "990880",
    "end": "997450"
  },
  {
    "text": "bunch of random failures that are kind of hard to generate on the on the client",
    "start": "997450",
    "end": "1003870"
  },
  {
    "text": "side and allows us to users to test our application to see whether the resilient",
    "start": "1003870",
    "end": "1008910"
  },
  {
    "text": "to failure so a very easy way of just injecting a little bit of middleware into that process so let's talk a little",
    "start": "1008910",
    "end": "1018000"
  },
  {
    "text": "bit more about middleware and the kinds of things that you can do with middleware so we start off with our",
    "start": "1018000",
    "end": "1026699"
  },
  {
    "text": "application we have an HTTP client we're calling a service with the request and response and we can stick a whole bunch",
    "start": "1026700",
    "end": "1032550"
  },
  {
    "text": "pieces of middleware in there we can do authorization handling that goes off and gets a token for us we can do redirect",
    "start": "1032550",
    "end": "1039839"
  },
  {
    "text": "handling a lot of libraries have built-in redirect handling we had its there automatically in dotnet but it has",
    "start": "1039840",
    "end": "1045360"
  },
  {
    "text": "by default this funny behavior where if you redirect like drops the auth token",
    "start": "1045360",
    "end": "1051690"
  },
  {
    "text": "completely so then people build their own and they go and they carry the auth token with them and then they forget oh",
    "start": "1051690",
    "end": "1056970"
  },
  {
    "text": "maybe I shouldn't carry the auth token over when it's to redirect to a completely different domain so we built",
    "start": "1056970",
    "end": "1063060"
  },
  {
    "text": "a safe redirect handler that will not leak tokens to other domains I built caching handlers before that fit",
    "start": "1063060",
    "end": "1069270"
  },
  {
    "text": "into this pattern we haven't yet plugged it into our infrastructure it's something we want to do I retry handling for handling the 429",
    "start": "1069270",
    "end": "1076120"
  },
  {
    "text": "throttling it sucks to have to deal with that yourself as an app developer why can't we just have a piece of middleware",
    "start": "1076120",
    "end": "1081730"
  },
  {
    "text": "that sits there waits for those status codes to come back looks at the retry after header delays and then retries the",
    "start": "1081730",
    "end": "1088750"
  },
  {
    "text": "request after that appropriate delay so it's a simplistic model I'll talk a bit more about the more sophisticated side",
    "start": "1088750",
    "end": "1094929"
  },
  {
    "text": "of that in a moment but there's a few other pieces that go to support this",
    "start": "1094929",
    "end": "1101620"
  },
  {
    "text": "middleware chain we talked before about the auth provider so the auth provider",
    "start": "1101620",
    "end": "1106990"
  },
  {
    "text": "is what actually goes off and gets the token for us in order so that our oath handler can actually put it in the",
    "start": "1106990",
    "end": "1113380"
  },
  {
    "text": "appropriate place in our request message and we defer that to a third party well",
    "start": "1113380",
    "end": "1118630"
  },
  {
    "text": "well you we use a Microsoft library for it you can defer it to whatever the third-party OAuth handler because I",
    "start": "1118630",
    "end": "1124240"
  },
  {
    "text": "don't recommend people rewriting their own code for this kind of stuff unless they really have to but obviously that",
    "start": "1124240",
    "end": "1130360"
  },
  {
    "text": "all for that Ulf provided when it gets tokens it'll get Refresh tokens you kind of want to store those somewhere so we",
    "start": "1130360",
    "end": "1136630"
  },
  {
    "text": "abstracted away kind of a storage provider for this middleware and it actually has a bunch of uses redirect",
    "start": "1136630",
    "end": "1142779"
  },
  {
    "text": "handling get a permanent redirect why bother keep getting a permanent redirect store it away in a cache so",
    "start": "1142779",
    "end": "1149200"
  },
  {
    "text": "that next time somebody tries to make a request so that thing that you know you previously got a permanent redirect for",
    "start": "1149200",
    "end": "1154570"
  },
  {
    "text": "redirect automatically they don't make the round trip obviously caching handlers need storage providers there's",
    "start": "1154570",
    "end": "1159789"
  },
  {
    "text": "a whole bunch of other value that you can add around this infrastructure and I mentioned our retry handling was very",
    "start": "1159789",
    "end": "1165340"
  },
  {
    "text": "simplistic when you start getting multiple requests going to the same resource you get a 429 on the first one",
    "start": "1165340",
    "end": "1171820"
  },
  {
    "text": "another request comes in it's like ooh hey that request looks awfully like that other one that we just got throttled on",
    "start": "1171820",
    "end": "1179289"
  },
  {
    "text": "maybe I won't even bother making that request now I'll add it to the queue and we'll bill defer instead of keep",
    "start": "1179289",
    "end": "1184960"
  },
  {
    "text": "hammering the server going hey I need this other person's set of email and",
    "start": "1184960",
    "end": "1190299"
  },
  {
    "text": "this other person set of email and it's like whoa no no you you've already hit your cap for this particular scenario so",
    "start": "1190299",
    "end": "1197169"
  },
  {
    "text": "having a request queue is something else that we want to build into this infrastructure and the last little piece",
    "start": "1197169",
    "end": "1204580"
  },
  {
    "text": "of information here is when you set up this middle or",
    "start": "1204580",
    "end": "1210519"
  },
  {
    "text": "pipeline there are set of kind of default behaviors how many times we do redirects how many times we do retries",
    "start": "1210519",
    "end": "1216659"
  },
  {
    "text": "how big the storage do you use and where do you store the caching information and",
    "start": "1216659",
    "end": "1222929"
  },
  {
    "text": "sometimes you actually want to change that on the per request basis so we package along with the request a little",
    "start": "1222929",
    "end": "1229899"
  },
  {
    "text": "piece an object we called request context with a bunch of middleware controls it'll allow you to change that",
    "start": "1229899",
    "end": "1235720"
  },
  {
    "text": "behavior on the fly on a particular per request call and so how does that look",
    "start": "1235720",
    "end": "1242399"
  },
  {
    "start": "1242000",
    "end": "1242000"
  },
  {
    "text": "so carrying on with our fluent API is you make the call but as part of that",
    "start": "1242399",
    "end": "1248950"
  },
  {
    "text": "whole request builder process we've got some additional with maximum redirects",
    "start": "1248950",
    "end": "1253989"
  },
  {
    "text": "with max retry and we don't just have with retry at this many number of times",
    "start": "1253989",
    "end": "1259029"
  },
  {
    "text": "you can actually say with right at this time period because we can store some state in those pieces of middleware we",
    "start": "1259029",
    "end": "1265239"
  },
  {
    "text": "can keep track of how long we've spent retrying so you can just say retry up to three minutes that might be one call it",
    "start": "1265239",
    "end": "1271929"
  },
  {
    "text": "might be seven calls it depends on how long the retry after is from the server",
    "start": "1271929",
    "end": "1277029"
  },
  {
    "text": "but the client can actually say yeah this is how long it makes sense for a my application to actually wait and retry",
    "start": "1277029",
    "end": "1283529"
  },
  {
    "text": "but with scopes passes through to our off provider and that allows us to do what we call incremental consent",
    "start": "1283529",
    "end": "1289690"
  },
  {
    "text": "you know you download that app and it asks you for to consent to these things it gives you this laundry list of all",
    "start": "1289690",
    "end": "1294999"
  },
  {
    "text": "these things that it actually wants to access on your behalf and you're like that why I just want to see the weather",
    "start": "1294999",
    "end": "1300700"
  },
  {
    "text": "why do you want to know who all my friends are right so this allows you to say on a particular request oh if the",
    "start": "1300700",
    "end": "1307659"
  },
  {
    "text": "user navigates to this part of the application where we need this additional consent then we can axe ask",
    "start": "1307659",
    "end": "1313480"
  },
  {
    "text": "for these additional scopes and with user assertion is very useful for the on",
    "start": "1313480",
    "end": "1318850"
  },
  {
    "text": "behalf of flow where you get some kind of token coming in from some other service that has already done the off",
    "start": "1318850",
    "end": "1325480"
  },
  {
    "text": "and you take that token and you want to translate it into a new token that can be called the backend API and that",
    "start": "1325480",
    "end": "1330909"
  },
  {
    "text": "allows you to identify who the user who's making that call and then do other certain things sometimes retry policies",
    "start": "1330909",
    "end": "1338379"
  },
  {
    "text": "are per user so you need to know who the so this is with our kind of service",
    "start": "1338379",
    "end": "1343570"
  },
  {
    "text": "library type of pattern obviously to be true to our principles you need to be",
    "start": "1343570",
    "end": "1350259"
  },
  {
    "text": "able to do this natively too so a little bit more ugly code but here we have",
    "start": "1350259",
    "end": "1355929"
  },
  {
    "start": "1351000",
    "end": "1351000"
  },
  {
    "text": "we're creating our HTTP client upfront we're manufacturing an HTTP request",
    "start": "1355929",
    "end": "1361269"
  },
  {
    "text": "message just completely manually at this point and then we can go and dig in with",
    "start": "1361269",
    "end": "1366669"
  },
  {
    "text": "an extension method to access the request context here and set the middleware options and yeah it's not as",
    "start": "1366669",
    "end": "1373720"
  },
  {
    "text": "pretty we can probably add some additional extension methods to make this a little cleaner but the point being is even if you're not using that",
    "start": "1373720",
    "end": "1380379"
  },
  {
    "text": "service library because you've decided that that two Meg's have generated code that we produce is just not appropriate",
    "start": "1380379",
    "end": "1386200"
  },
  {
    "text": "for your particular environment you can just use the core you still get all these kind of capabilities and you send",
    "start": "1386200",
    "end": "1392230"
  },
  {
    "text": "the request off to the HTTP client using the standard Sunday sink and it will go through all that middleware pipeline and",
    "start": "1392230",
    "end": "1398980"
  },
  {
    "text": "apply those per request options just as if you're using our really user friendly service library approach which brings me",
    "start": "1398980",
    "end": "1410350"
  },
  {
    "text": "to another pattern which is something",
    "start": "1410350",
    "end": "1415960"
  },
  {
    "text": "that I kind of learned from the dotnet space in the way that the the HP client library was built is they make an",
    "start": "1415960",
    "end": "1421720"
  },
  {
    "text": "explicit distinction between the HP request and response and content HP",
    "start": "1421720",
    "end": "1428980"
  },
  {
    "text": "content and some people are not big fans of it but this is really how the actual HP spec is designed if you look at how",
    "start": "1428980",
    "end": "1435639"
  },
  {
    "text": "it's laid out and how content headers are designed there is quite a distinction architectural and really the",
    "start": "1435639",
    "end": "1442450"
  },
  {
    "text": "request is the packaging and the content could be anything and it is allowed to evolve over time and this is one",
    "start": "1442450",
    "end": "1448899"
  },
  {
    "text": "fundamental difference between HTTP and RPC in RPC when you design design a",
    "start": "1448899",
    "end": "1454899"
  },
  {
    "text": "signature of an RPC method you describe all of the parameters explicitly in that",
    "start": "1454899",
    "end": "1461379"
  },
  {
    "text": "method call whereas the content in HP request is allowed to evolve separately",
    "start": "1461379",
    "end": "1466710"
  },
  {
    "text": "and we can take advantage of that in dotnet there happens to be a specific class called HP content in other",
    "start": "1466710",
    "end": "1473289"
  },
  {
    "start": "1467000",
    "end": "1467000"
  },
  {
    "text": "allowing which is sometimes it's a stream or a string and that's fine you can create a",
    "start": "1473289",
    "end": "1479260"
  },
  {
    "text": "wrapper class that adds semantics around that concept content and there's omits",
    "start": "1479260",
    "end": "1484330"
  },
  {
    "text": "the format whatever happens to go over the wire there's all kinds of scenarios if you do long-running operations and",
    "start": "1484330",
    "end": "1491110"
  },
  {
    "text": "you want to do a 202 to a location header you can build a status monitor content because unfortunately nobody",
    "start": "1491110",
    "end": "1496390"
  },
  {
    "text": "standardized what that thing looks like multi-part contents are standardized if you use web hooks subscribing and the",
    "start": "1496390",
    "end": "1503620"
  },
  {
    "text": "web hook responses you can standardize what those things are and encapsulate that behavior so a developer doesn't",
    "start": "1503620",
    "end": "1510130"
  },
  {
    "text": "have to figure out exactly how to construct that JSON or XML or llamó payload that you're sending over the",
    "start": "1510130",
    "end": "1516370"
  },
  {
    "text": "wire yeah nobody realizes yeah I'm all over the wire but I don't know why Eric",
    "start": "1516370",
    "end": "1523780"
  },
  {
    "text": "content batch content there's a whole bunch of scenarios collection content and I mentioned graph QL you could",
    "start": "1523780",
    "end": "1529690"
  },
  {
    "text": "completely abstract away banking graph QL requests because it's purely the economy because graph QL doesn't say",
    "start": "1529690",
    "end": "1535180"
  },
  {
    "text": "anything about how you use HTTP so the request is completely independent you",
    "start": "1535180",
    "end": "1540340"
  },
  {
    "text": "can encapsulate all the behavior in one of these kind of content objects so how",
    "start": "1540340",
    "end": "1545590"
  },
  {
    "text": "does this look this is how we do batch requests we have to service library",
    "start": "1545590",
    "end": "1551560"
  },
  {
    "start": "1546000",
    "end": "1546000"
  },
  {
    "text": "requests at the top here where we're growing and requesting for some users information and we're also going in",
    "start": "1551560",
    "end": "1560920"
  },
  {
    "text": "looking for all of the events that are on this this Nighy calendar",
    "start": "1560920",
    "end": "1566980"
  },
  {
    "text": "but we're going to send those things as a single request over the wire so we create our batch request content here",
    "start": "1566980",
    "end": "1574210"
  },
  {
    "text": "and then we add the two requests as batch request steps and then in a single",
    "start": "1574210",
    "end": "1580180"
  },
  {
    "text": "request we send over the batch request content now two things that are",
    "start": "1580180",
    "end": "1585730"
  },
  {
    "text": "important here is I'm sending our high-level service library notion of a request in here I could just as easily",
    "start": "1585730",
    "end": "1592830"
  },
  {
    "text": "create a native HTP request message because we have overloads that allow you to accept those standard HTTP request",
    "start": "1592830",
    "end": "1599590"
  },
  {
    "text": "messages into those batch requests step methods and the other thing is actually",
    "start": "1599590",
    "end": "1606160"
  },
  {
    "text": "our graph API supports two different formats for batch it supports adjacent format and it supports",
    "start": "1606160",
    "end": "1611850"
  },
  {
    "text": "a multi-part content and they have different value propositions different scenarios where one works better than",
    "start": "1611850",
    "end": "1618179"
  },
  {
    "text": "the other we can completely hide that we could put a flag on here that you could",
    "start": "1618179",
    "end": "1623640"
  },
  {
    "text": "just say please use Jason please use the multi-part or we could detect when it's",
    "start": "1623640",
    "end": "1629970"
  },
  {
    "text": "better to use one versus the other and we can just completely abstract away",
    "start": "1629970",
    "end": "1635040"
  },
  {
    "text": "those details of how you actually construct the payload and modeling these things as content has some other",
    "start": "1635040",
    "end": "1642350"
  },
  {
    "text": "interesting benefits HP has a notion",
    "start": "1642350",
    "end": "1647790"
  },
  {
    "text": "called content encoding and content objects become composable so let's say I",
    "start": "1647790",
    "end": "1653850"
  },
  {
    "text": "have this object which is a Content collection and let's say it is a very large",
    "start": "1653850",
    "end": "1659150"
  },
  {
    "text": "collection of objects that I'm gonna read dynamically so I actually want to stream that over the wire I can put the",
    "start": "1659150",
    "end": "1665910"
  },
  {
    "text": "content collection inside screaming content to let the streaming content deal with chunking coding it and sending",
    "start": "1665910",
    "end": "1671580"
  },
  {
    "text": "it over the wire in little bits is to have a multi-part content and that",
    "start": "1671580",
    "end": "1677220"
  },
  {
    "text": "content is very compressible I can wrap that inside a compress content object I could put anything inside that",
    "start": "1677220",
    "end": "1683700"
  },
  {
    "text": "compressed content object I've got completely reusable composable content models I can nest as much as I want",
    "start": "1683700",
    "end": "1690990"
  },
  {
    "text": "let's say I want to sign or encrypt that content I can wrap that and then but",
    "start": "1690990",
    "end": "1696690"
  },
  {
    "text": "signing an encryption we've got that we need the signature we need to put that somewhere well this is where it comes back down to there are content headers",
    "start": "1696690",
    "end": "1704160"
  },
  {
    "text": "and then there are request headers and we can actually model those content headers attached to those pieces of",
    "start": "1704160",
    "end": "1710010"
  },
  {
    "text": "content so that we can set the signing header in that content and it kind of is",
    "start": "1710010",
    "end": "1715110"
  },
  {
    "text": "a single unit and when we attach it to the request and we send it down our pipeline it's gonna just do the right",
    "start": "1715110",
    "end": "1721140"
  },
  {
    "text": "thing when it gets to the end of our pipeline there's one more interesting example and this is a little",
    "start": "1721140",
    "end": "1726929"
  },
  {
    "text": "forward-looking signing an encrypting of content over stream content well if the signature",
    "start": "1726929",
    "end": "1733260"
  },
  {
    "text": "goes out in a header that's a little tricky because the headers go out before the body so if I'm sending out the",
    "start": "1733260",
    "end": "1740220"
  },
  {
    "text": "headers and then I send out dreaming chunks how am I ever gonna put the signature in it because the headers",
    "start": "1740220",
    "end": "1745559"
  },
  {
    "text": "have already gone out well they figured this out years ago in the HP spec there's a thing called trailers but",
    "start": "1745559",
    "end": "1752249"
  },
  {
    "text": "nobody ever really implemented them until fairly recently more on the HP to",
    "start": "1752249",
    "end": "1758220"
  },
  {
    "text": "can time frame they're putting they the browsers now support trailers and I'm",
    "start": "1758220",
    "end": "1763860"
  },
  {
    "text": "expecting to see more and more support for trailer headers because it's really important for being able to do this kind",
    "start": "1763860",
    "end": "1770279"
  },
  {
    "text": "of signing hashing of streamed content",
    "start": "1770279",
    "end": "1775369"
  },
  {
    "text": "which brings us to response handlers response handling is about encapsulating",
    "start": "1776629",
    "end": "1784860"
  },
  {
    "text": "the behavior for handling HTTP responses and this is probably one of the least",
    "start": "1784860",
    "end": "1791129"
  },
  {
    "text": "explored areas but one that I think has probably the most potential to change",
    "start": "1791129",
    "end": "1796649"
  },
  {
    "text": "the way we build apps that call HTTP like the really simple naive case is we",
    "start": "1796649",
    "end": "1804869"
  },
  {
    "start": "1802000",
    "end": "1802000"
  },
  {
    "text": "allow you let's say you've made some kind of request using completely native library and then you'd like to get that",
    "start": "1804869",
    "end": "1812100"
  },
  {
    "text": "response and bring it back into your set of domain objects well you can do up a",
    "start": "1812100",
    "end": "1817409"
  },
  {
    "text": "response handler here and then just call the handle response method on it and it",
    "start": "1817409",
    "end": "1822629"
  },
  {
    "text": "will deserialize it'll check all the status codes do the regular normal thing as you would if you'd use the main",
    "start": "1822629",
    "end": "1828210"
  },
  {
    "text": "service library and it will bring you back a strongly type thing you need to know what kind of object that you made a",
    "start": "1828210",
    "end": "1834389"
  },
  {
    "text": "request for but often you do already know that so this is a simple case of",
    "start": "1834389",
    "end": "1840179"
  },
  {
    "text": "just going back the other way instead of going from the service library down to native coming back from native back up",
    "start": "1840179",
    "end": "1846659"
  },
  {
    "text": "to the service library layer there's another value to response handlers and",
    "start": "1846659",
    "end": "1853429"
  },
  {
    "text": "we actually just are just working on this response handler at the moment we",
    "start": "1853429",
    "end": "1858749"
  },
  {
    "start": "1855000",
    "end": "1855000"
  },
  {
    "text": "have this notion in graph called delta queries and the idea is that if you have",
    "start": "1858749",
    "end": "1864600"
  },
  {
    "text": "a collection of things that you want to monitor over time you can make a second request to that collection with a",
    "start": "1864600",
    "end": "1871109"
  },
  {
    "text": "special key and say only give me back the values that have changed now the problem is the way it gives you",
    "start": "1871109",
    "end": "1878370"
  },
  {
    "text": "back them that the only the things that have changed is it returns back prop",
    "start": "1878370",
    "end": "1884390"
  },
  {
    "text": "properties in the Jason if it has changed if it hasn't changed it just doesn't return the property back",
    "start": "1884390",
    "end": "1890990"
  },
  {
    "text": "unfortunately when we deserialize that into strong types whether or not the",
    "start": "1890990",
    "end": "1896040"
  },
  {
    "text": "property was there or not whether the property was there with the null value we don't see a difference in our",
    "start": "1896040",
    "end": "1902850"
  },
  {
    "text": "strongly up strong objects so we were losing information to know which properties did and did not change so we",
    "start": "1902850",
    "end": "1910380"
  },
  {
    "text": "figured out okay well we can build this daily response handler it does a little bit of pre deserializing and goes and",
    "start": "1910380",
    "end": "1916290"
  },
  {
    "text": "inspects Jason and figures out exactly which properties did change but it's expensive to do for every single",
    "start": "1916290",
    "end": "1921840"
  },
  {
    "text": "scenario so we said okay well we'll just build a different response handler and we'll use this in the cases that we're",
    "start": "1921840",
    "end": "1928230"
  },
  {
    "text": "making Delta and it's really important for us to know exactly which properties did change now with code generation",
    "start": "1928230",
    "end": "1935550"
  },
  {
    "text": "model if we know that we're making a delta regress we could probably map this delta response handler in automatically",
    "start": "1935550",
    "end": "1941070"
  },
  {
    "text": "so magically if you're doing a delta call you'll automatically get that extra information but you won't pay the price",
    "start": "1941070",
    "end": "1946800"
  },
  {
    "text": "for that extra deserialization step if you are not making a delta call so I",
    "start": "1946800",
    "end": "1953790"
  },
  {
    "text": "think there's going to be other scenarios where we're going to end up building different types of response",
    "start": "1953790",
    "end": "1959040"
  },
  {
    "text": "handlers for different scenarios and well what happens if we take this to the",
    "start": "1959040",
    "end": "1967140"
  },
  {
    "text": "logical extreme and allow me to join him a little bit for the moment this is",
    "start": "1967140",
    "end": "1972450"
  },
  {
    "start": "1969000",
    "end": "1969000"
  },
  {
    "text": "something experimental do where this what I call a response machine I've done with everybody's familiar there is a",
    "start": "1972450",
    "end": "1977700"
  },
  {
    "text": "thing called the HTTP machine that's that somebody designed this big state machine and it basically told you how to",
    "start": "1977700",
    "end": "1984480"
  },
  {
    "text": "take an incoming request and then process it on the server side and this is kind of the other way around is how",
    "start": "1984480",
    "end": "1990750"
  },
  {
    "text": "to take an HP response and process it on the client side so what you do is you",
    "start": "1990750",
    "end": "1996210"
  },
  {
    "text": "build this class called response machine and you provided a whole bunch of response handlers that are going to be",
    "start": "1996210",
    "end": "2001760"
  },
  {
    "text": "matched based on certain characteristics of the response status content type link",
    "start": "2001760",
    "end": "2007130"
  },
  {
    "text": "relation I told you was a bit of a hypermedia freak but there's ways of working around",
    "start": "2007130",
    "end": "2012530"
  },
  {
    "text": "that even without using hypermedia but the content ID is the same so then what",
    "start": "2012530",
    "end": "2018049"
  },
  {
    "text": "happens is you get you make a request to the API and then at some point later on",
    "start": "2018049",
    "end": "2023210"
  },
  {
    "text": "you get a response back and you hand the response off to the response machine the response machine has some kind of",
    "start": "2023210",
    "end": "2029179"
  },
  {
    "text": "dispatcher that dispatches that response to the particular the appropriate response Handler and then those response",
    "start": "2029179",
    "end": "2036650"
  },
  {
    "text": "hat alerts go back and update the application state again on the hypermedia theme if anybody's ever heard",
    "start": "2036650",
    "end": "2043100"
  },
  {
    "text": "of hypermedia as the engine of application state that nobody's actually ever figured out how to implement other",
    "start": "2043100",
    "end": "2048200"
  },
  {
    "text": "than web browsers this is one way of actually implementing that concept and",
    "start": "2048200",
    "end": "2054070"
  },
  {
    "start": "2054000",
    "end": "2054000"
  },
  {
    "text": "this is kind of what it might look like in code you have some kind of view model",
    "start": "2054070",
    "end": "2060500"
  },
  {
    "text": "that represents your application State or your UI state at that particular point in time you define a response",
    "start": "2060500",
    "end": "2067128"
  },
  {
    "text": "machine that says well if you get a successful response that contains a user go and put it here in the view model and",
    "start": "2067129",
    "end": "2073540"
  },
  {
    "text": "if you get a successful response for a calendar go put it here in the calendar and you can set up all the property",
    "start": "2073540",
    "end": "2079878"
  },
  {
    "text": "binding and binding to the UI so that as soon as you set that user you automatically will refresh the UI and",
    "start": "2079879",
    "end": "2086929"
  },
  {
    "text": "get that information on client error go do this on server error go do that you",
    "start": "2086929",
    "end": "2092000"
  },
  {
    "text": "could narrow it down to on this kind of status code go and do this on this kind of status code go and do that but what",
    "start": "2092000",
    "end": "2099590"
  },
  {
    "text": "are really interesting things is if you look at those last three lines of code if you're familiar with dotnet",
    "start": "2099590",
    "end": "2106119"
  },
  {
    "text": "conventions there's no async on those because those aren't async anymore those are",
    "start": "2106119",
    "end": "2112220"
  },
  {
    "text": "synchronous fire-and-forget methods so I made the request to go get the information about me while that was",
    "start": "2112220",
    "end": "2118160"
  },
  {
    "text": "still executing because it will go off asynchronously I'm immediately going and",
    "start": "2118160",
    "end": "2123920"
  },
  {
    "text": "getting a request to the calendar I'm immediately going and getting requests to drive I have three parallel requests that are going out all at the same time",
    "start": "2123920",
    "end": "2130450"
  },
  {
    "text": "now that maybe have been a problem in the HP 1.1 world but in HP - and HP 3",
    "start": "2130450",
    "end": "2137240"
  },
  {
    "text": "where you can have multiplex trains and you can do lots of requests Oh",
    "start": "2137240",
    "end": "2142550"
  },
  {
    "text": "a single connection and there's no head-of-line blocking this all the Sun starts to get to be a really interesting",
    "start": "2142550",
    "end": "2148430"
  },
  {
    "text": "pattern and I'm convinced that this could be mapped really nicely to the",
    "start": "2148430",
    "end": "2154070"
  },
  {
    "text": "whole reactive style of programming that many people are adopting in driving you",
    "start": "2154070",
    "end": "2160220"
  },
  {
    "text": "eyes these days but that's still a little bit of a dream one thing that",
    "start": "2160220",
    "end": "2166100"
  },
  {
    "text": "isn't is our notion of tasks and my",
    "start": "2166100",
    "end": "2171380"
  },
  {
    "text": "apologies to the dotnet folks for overloading the term tasks we tried i've",
    "start": "2171380",
    "end": "2176510"
  },
  {
    "text": "called these various things in the past goals missions but they sounded really hokey so we settled on tasks and the the",
    "start": "2176510",
    "end": "2184580"
  },
  {
    "text": "idea is raising this level of abstraction you use the cruise control in the car to tell it how fast you want",
    "start": "2184580",
    "end": "2191540"
  },
  {
    "text": "to go and then it worries about pressing the brake pedal and the accelerator pedal for you all right tasks or",
    "start": "2191540",
    "end": "2197750"
  },
  {
    "text": "components that allow you to achieve some kind of scenario that are common in",
    "start": "2197750",
    "end": "2203090"
  },
  {
    "text": "your API by simply providing the necessary inputs and letting the task make the HTTP calls on your behalf and",
    "start": "2203090",
    "end": "2210470"
  },
  {
    "text": "maybe you can pause it you can interrupt it you can listen to events from it so you end up with something that kind of",
    "start": "2210470",
    "end": "2215810"
  },
  {
    "text": "looks like this is some kind of task it general will have some kind of state as to where it is in its objective and it",
    "start": "2215810",
    "end": "2223340"
  },
  {
    "text": "has an instance of either your HTTP client library or the service client library and it will go and make requests",
    "start": "2223340",
    "end": "2229580"
  },
  {
    "text": "and you can listen to events that happen as this is doing the thing for you you",
    "start": "2229580",
    "end": "2236600"
  },
  {
    "text": "obviously provided some input you can take some actions one example this is a Java for my JavaScript API is we have a",
    "start": "2236600",
    "end": "2246740"
  },
  {
    "start": "2240000",
    "end": "2240000"
  },
  {
    "text": "page iterator task so I mentioned before when you go and get a list message you only get the first page there's a link to the second page going and getting the",
    "start": "2246740",
    "end": "2254660"
  },
  {
    "text": "link and then walking the next items and then going and getting a link making that call it's pain so here we just set",
    "start": "2254660",
    "end": "2260900"
  },
  {
    "text": "up this notion an iterator we go get that first page and we set up a callback",
    "start": "2260900",
    "end": "2266900"
  },
  {
    "text": "that we say we want this callback to execute on every single item on every",
    "start": "2266900",
    "end": "2272420"
  },
  {
    "text": "single page we hand that first page over the page iterate and say go do your thing and call a callback for every",
    "start": "2272420",
    "end": "2278430"
  },
  {
    "text": "single item and it will iterate across we do have a return true in our callback",
    "start": "2278430",
    "end": "2285480"
  },
  {
    "text": "which actually allows us to conditionally stop the iteration and then maybe later on restart it so it",
    "start": "2285480",
    "end": "2292619"
  },
  {
    "text": "allows us to do all kinds of clever things like if you are getting pages back of a certain size but you're passing information on to another",
    "start": "2292619",
    "end": "2298829"
  },
  {
    "text": "service that wants a batch size in a different size you can pull the data out page by page but then put it in another",
    "start": "2298829",
    "end": "2304859"
  },
  {
    "text": "collection exit out make the call to the other service and then go back and restart the iterator and we have a bunch",
    "start": "2304859",
    "end": "2311369"
  },
  {
    "text": "of other ideas for these kind of tasks we use it for doing large file uploads that are resumable the file storage",
    "start": "2311369",
    "end": "2319320"
  },
  {
    "text": "mechanism and graph allows you to specify content ranges we were very naughty we invented the idea of using it",
    "start": "2319320",
    "end": "2326430"
  },
  {
    "text": "for updates when you're really only supposed to use it for downloads but it works and it allows you to take a file",
    "start": "2326430",
    "end": "2333030"
  },
  {
    "text": "and slice it into individual pieces and then send all those pieces independently if one of them fails you can resend that",
    "start": "2333030",
    "end": "2339450"
  },
  {
    "text": "piece and we just think capsulate that inside of a task so do we have answers",
    "start": "2339450",
    "end": "2349680"
  },
  {
    "start": "2347000",
    "end": "2347000"
  },
  {
    "text": "to our questions why isn't everybody using the SDK I think a lot of it is",
    "start": "2349680",
    "end": "2357569"
  },
  {
    "text": "past experiences we've assumed that we can rely completely on the code",
    "start": "2357569",
    "end": "2362940"
  },
  {
    "text": "generators in order to generate like that's all that's what we need to do and",
    "start": "2362940",
    "end": "2369180"
  },
  {
    "text": "there hasn't been a lot of investment in the code generators that are out there in the public domain and it would be",
    "start": "2369180",
    "end": "2375690"
  },
  {
    "text": "great to see more community effort coalesce around some standard code generators that do this job a lot better",
    "start": "2375690",
    "end": "2382910"
  },
  {
    "text": "the unfortunate result is what a lot of people do end up generating are fairly",
    "start": "2382910",
    "end": "2388020"
  },
  {
    "text": "inflexible and it's hard to get management to buy in because it's hard",
    "start": "2388020",
    "end": "2393450"
  },
  {
    "text": "to build a team where you've got people with experience in all those different",
    "start": "2393450",
    "end": "2398700"
  },
  {
    "text": "languages and then get PM's or managers to actually understand all the challenges across those different",
    "start": "2398700",
    "end": "2404460"
  },
  {
    "text": "languages and then try and do things in a consistent way one of the first decisions I made when I",
    "start": "2404460",
    "end": "2410100"
  },
  {
    "text": "they're right oh yeah you have to manage the PHP which I know nothing about the Ruby which I know nothing in the path",
    "start": "2410100",
    "end": "2415380"
  },
  {
    "text": "maybe one day Python and go and I'm like and Java and JavaScript it's like I need",
    "start": "2415380",
    "end": "2420750"
  },
  {
    "text": "some kind of consistency in order to be able to work with the devs in order to be able to direct them in how I think",
    "start": "2420750",
    "end": "2427800"
  },
  {
    "text": "this thing needs to be built because if every single SDK is built in a completely different way then I'm gonna",
    "start": "2427800",
    "end": "2434670"
  },
  {
    "text": "go insane so I think I think for us this has been a really good first step and",
    "start": "2434670",
    "end": "2439740"
  },
  {
    "text": "I've got a lot of positive feedback we do have all this stuff out in the public I'll share a link in a minute what I",
    "start": "2439740",
    "end": "2447210"
  },
  {
    "text": "think we can do to encourage usage of SDKs is make sure all those parts of the SDK are optional",
    "start": "2447210",
    "end": "2453360"
  },
  {
    "text": "it's opt-in use the parts that you want to use don't worry if somebody doesn't",
    "start": "2453360",
    "end": "2458850"
  },
  {
    "text": "use all of the pieces that is I think we have to give developers choices so my",
    "start": "2458850",
    "end": "2465750"
  },
  {
    "text": "name is Darrell Miller I am on twitter at darrell underscore Miller there is my link to our github repo that has all of",
    "start": "2465750",
    "end": "2473910"
  },
  {
    "text": "our design documentation that we build all of these graph SDKs and this is",
    "start": "2473910",
    "end": "2479070"
  },
  {
    "text": "going to be a continuing ongoing process so I would look forward to hearing",
    "start": "2479070",
    "end": "2484530"
  },
  {
    "text": "feedback from you and please remember to rate this session and I think I have",
    "start": "2484530",
    "end": "2490740"
  },
  {
    "text": "time for questions if there are any questions [Applause]",
    "start": "2490740",
    "end": "2498280"
  },
  {
    "text": "you",
    "start": "2498280",
    "end": "2500340"
  }
]