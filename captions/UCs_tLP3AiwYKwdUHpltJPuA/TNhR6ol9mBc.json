[
  {
    "text": "[Music] [Applause]",
    "start": "6990",
    "end": "14280"
  },
  {
    "text": "okay hello so the conference asked me to come and talk about some of the interesting stuff that's making its way into the CSS specs and there's a whole",
    "start": "14280",
    "end": "22279"
  },
  {
    "text": "heap of really interesting things kind of Just landing in browsers at the moment and coming really soon and so",
    "start": "22279",
    "end": "27560"
  },
  {
    "text": "this talk really is just a very quick collection of things and and various examples of things that I think are",
    "start": "27560",
    "end": "33120"
  },
  {
    "text": "interesting uh some of which are actually very usable now and others are kind of just on the",
    "start": "33120",
    "end": "39079"
  },
  {
    "text": "horizon one of the many hats I wear is as an invited expert the CSS working",
    "start": "39079",
    "end": "44160"
  },
  {
    "text": "group um however this slide are some of the other things I'm involved with and while I'm really interested in all of",
    "start": "44160",
    "end": "49600"
  },
  {
    "text": "this new stuff my kind of day job is as co-founder of a Content management system product and so I have to deal",
    "start": "49600",
    "end": "55840"
  },
  {
    "text": "with all of the old browsers like everybody else there's certainly no Ivory Towers here and so as we go along",
    "start": "55840",
    "end": "60879"
  },
  {
    "text": "I'll be explaining the status of browser support for all of these things and ways to kind of deal with old",
    "start": "60879",
    "end": "67159"
  },
  {
    "text": "browsers so I'm going to start with really my favorite subject in CSS and really the reason why I'm on the CSS",
    "start": "67960",
    "end": "73840"
  },
  {
    "text": "working group at all and that's layout and this is a module which if you've used Flex box at all you will be",
    "start": "73840",
    "end": "80479"
  },
  {
    "text": "familiar with although you might not have heard of its name box alignment level three because it appears that for",
    "start": "80479",
    "end": "86680"
  },
  {
    "text": "a very very long time vertical centering has been the hardest problem in web",
    "start": "86680",
    "end": "91960"
  },
  {
    "text": "design and so this is what uh box alignment and flex box as well are",
    "start": "91960",
    "end": "97360"
  },
  {
    "text": "solving so a lot of the reasons we're using Flex box is basically to get that vertical alignment um I quite often end",
    "start": "97360",
    "end": "103880"
  },
  {
    "text": "up turning something into a flex container just so that I can align the things inside it and this is how we do that in flexbox um we're using the Align",
    "start": "103880",
    "end": "111759"
  },
  {
    "text": "items and justify content properties here to to Center the image vertically and horizontally and those properties",
    "start": "111759",
    "end": "117640"
  },
  {
    "text": "are part of the flexbox spec and if you do this you'll end up with something like",
    "start": "117640",
    "end": "124520"
  },
  {
    "text": "this and we can have Flex layouts and we can align things all around that layout so here I've got a flex container the",
    "start": "124520",
    "end": "130039"
  },
  {
    "text": "height of which is defined by the tall image and we're aligning the other items against it so we're using a line self",
    "start": "130039",
    "end": "138000"
  },
  {
    "text": "and we're aligning the individual items on the cross axis so for Flex box we've got a line self Center Flex start and",
    "start": "138000",
    "end": "144680"
  },
  {
    "text": "flex end so Flex box is really cool and so",
    "start": "144680",
    "end": "150120"
  },
  {
    "text": "what we've done is we've got those properties that do alignment in Flex box and they've been taken out and put into",
    "start": "150120",
    "end": "155599"
  },
  {
    "text": "this new specification called box alignment and what box alignment lets us do is then apply those properties to",
    "start": "155599",
    "end": "161800"
  },
  {
    "text": "other parts of layout which ultimately might mean you could float an item and still use those alignment properties",
    "start": "161800",
    "end": "167680"
  },
  {
    "text": "with it rather than having to turn it into a flex container so that's pretty cool so we've got these uh properties",
    "start": "167680",
    "end": "173720"
  },
  {
    "text": "that are part of box alignment and we have alignment and also things like space distribution",
    "start": "173720",
    "end": "180080"
  },
  {
    "text": "and these are the properties so we've got justify content align content justify self align self justify items",
    "start": "180080",
    "end": "186400"
  },
  {
    "text": "and align items so while we haven't got to a point where we can use this stuff",
    "start": "186400",
    "end": "191959"
  },
  {
    "text": "on block layout yet we can't use it when we float something or position something there is a specification where we've",
    "start": "191959",
    "end": "198200"
  },
  {
    "text": "started to use these properties already and that's CSS grid layout now",
    "start": "198200",
    "end": "203840"
  },
  {
    "text": "I've got practically a full day workshop which deals with CSS grid layout it's a brand new specification I can talk about",
    "start": "203840",
    "end": "209319"
  },
  {
    "text": "it all day and do uh I'll not now but I'm going to show you some kind of edited highlights of",
    "start": "209319",
    "end": "215599"
  },
  {
    "text": "that so sticking with alignment this is how grid implements the Box alignment",
    "start": "215599",
    "end": "220680"
  },
  {
    "text": "specification so I'm actually creating the exact same layout I had for Flex box this time with grid I'm saying display",
    "start": "220680",
    "end": "227840"
  },
  {
    "text": "grid rather than display flex and then I'm setting up a four column layout I'm using the repeat syntax so I'm saying",
    "start": "227840",
    "end": "234079"
  },
  {
    "text": "repeat four times a one fraction unit column that 1fr is interesting unit it's",
    "start": "234079",
    "end": "240519"
  },
  {
    "text": "a Flex unit a fraction unit that defines a fraction of the available space in the grid container so if we have four 1fr",
    "start": "240519",
    "end": "248680"
  },
  {
    "text": "units they each have uh one equal part of the space we split the space into",
    "start": "248680",
    "end": "253720"
  },
  {
    "text": "four and then here I'm using a line self Center a line self start rather than Flex start and a line self end to align",
    "start": "253720",
    "end": "261919"
  },
  {
    "text": "the items inside their grid areas which gives us the same layout as the flex",
    "start": "261919",
    "end": "266960"
  },
  {
    "text": "layout but this time we're using grid and box align alignment within grid and these URLs here when you get the slides",
    "start": "266960",
    "end": "273199"
  },
  {
    "text": "at the end you can click through and they're all code pens you can have a look and play around with the",
    "start": "273199",
    "end": "278960"
  },
  {
    "text": "code so what's the difference with grid and flex box grid layout has been designed as a fit for purpose layout",
    "start": "278960",
    "end": "286320"
  },
  {
    "text": "method really for the first time for the web and it's designed to work alongside other layout methods including",
    "start": "286320",
    "end": "292320"
  },
  {
    "text": "flexbox and the difference is really that it's for two-dimensional layouts and that's laying things out both as a",
    "start": "292320",
    "end": "297880"
  },
  {
    "text": "row and a column at the same time so to use grid as in the previous",
    "start": "297880",
    "end": "305000"
  },
  {
    "text": "example we say display grid and then we Define some columns and optionally some rows so here I'm defining three columns",
    "start": "305000",
    "end": "312360"
  },
  {
    "text": "all of One fraction unit and we've got the grid Gap property and that's going to define a 10 pixel",
    "start": "312360",
    "end": "318919"
  },
  {
    "text": "gutter between those tracks uh you can also use grid column Gap and grid row Gap to define those",
    "start": "318919",
    "end": "324840"
  },
  {
    "text": "individually and then if I have a set of items and they're inside that parent which I've said display grid on they're",
    "start": "324840",
    "end": "331639"
  },
  {
    "text": "going to lay themselves out on the grid that I've defined one in each cell of the",
    "start": "331639",
    "end": "336680"
  },
  {
    "text": "grid now if you try and get this kind of display using Flex box which many of you may have tried to",
    "start": "336680",
    "end": "343800"
  },
  {
    "text": "do already you say display Flex you let the items wrap and then we're using um a",
    "start": "343800",
    "end": "349039"
  },
  {
    "text": "flex basis of one of 250 pixels and saying grow and Shrink from that now",
    "start": "349039",
    "end": "354240"
  },
  {
    "text": "because flexbox is one-dimensional you get this so although it's wrapping onto",
    "start": "354240",
    "end": "359360"
  },
  {
    "text": "the next next line each line each row in Flex boox or column if you're working by columns becomes its own Flex container",
    "start": "359360",
    "end": "366039"
  },
  {
    "text": "so that space distributions happening across the row there we get onto the second row we've only got two cards and",
    "start": "366039",
    "end": "371720"
  },
  {
    "text": "so they just split the space between them and that's the difference really between grid and flexbox grid would keep",
    "start": "371720",
    "end": "377360"
  },
  {
    "text": "those things strictly in their column tracks the nice thing with flex box",
    "start": "377360",
    "end": "384039"
  },
  {
    "text": "though is if we made this screen wider um and there was more space we could get more of those Imes would fit up uh next",
    "start": "384039",
    "end": "391440"
  },
  {
    "text": "to each other that's a pretty nice thing because we can have multiple numbers of flexible columns inside a container and",
    "start": "391440",
    "end": "398319"
  },
  {
    "text": "we can actually do this with grid as well although it does involve a fairly baffling looking",
    "start": "398319",
    "end": "404560"
  },
  {
    "text": "syntax so here I'm creating my grid I'm using this autofill keyword in the repeat rather than using a value rather",
    "start": "404560",
    "end": "411840"
  },
  {
    "text": "than saying repeat four times I'm saying autofill so I'd like grid to fill as",
    "start": "411840",
    "end": "417759"
  },
  {
    "text": "many column tracks as will fit into to my container and then I'm using this minmax thing so I'm saying make those",
    "start": "417759",
    "end": "424759"
  },
  {
    "text": "column tracks a minimum of 200 pixels but a maximum of one fraction unit the",
    "start": "424759",
    "end": "430840"
  },
  {
    "text": "effect of that because the fraction unit shares out all available space we get as many 200 pixel column traes will fit",
    "start": "430840",
    "end": "437360"
  },
  {
    "text": "then the available space is distributed equally amongst the columns which basically gives us the ability to have a",
    "start": "437360",
    "end": "443560"
  },
  {
    "text": "flexible container with as many columns of between 200 200 pixels and then the",
    "start": "443560",
    "end": "449160"
  },
  {
    "text": "rest is sort of shared out with it which is pretty neat it allows the strict sort of rows and columns layout but as many",
    "start": "449160",
    "end": "456759"
  },
  {
    "text": "columns as fit so minmax that minmax thing has been",
    "start": "456759",
    "end": "462080"
  },
  {
    "text": "creased for grid layout because we need a way of doing that kind of track sizing and it turns out it solves all sorts of",
    "start": "462080",
    "end": "467599"
  },
  {
    "text": "interesting problems here's one so this is the uh toots plus website a tutorial",
    "start": "467599",
    "end": "474599"
  },
  {
    "text": "website and they've got one of these kind of um boxy layouts on the home page",
    "start": "474599",
    "end": "480280"
  },
  {
    "text": "which you kind of see all over the place used for navigation the problem with these things is that in the real world a",
    "start": "480280",
    "end": "487400"
  },
  {
    "text": "lot of content comes out of content Management systems and the content editor comes along and the designers",
    "start": "487400",
    "end": "492479"
  },
  {
    "text": "thought well I'll just have two lines of content there but they've got something really important to say that it needs a",
    "start": "492479",
    "end": "498520"
  },
  {
    "text": "whole paragraph and so they put that in it breaks the layout in this case it's all overlapping which isn't ideal and I",
    "start": "498520",
    "end": "505319"
  },
  {
    "text": "wondered if I could sort of do this kind of layout with grid and solve that sort of problem and it turns out that I can",
    "start": "505319",
    "end": "513518"
  },
  {
    "text": "this is the layout that I created I've got the three break points which match the example that I was I was looking at",
    "start": "513519",
    "end": "519719"
  },
  {
    "text": "and we've got a sort of mobile width and a wider width here and then a far wider one but again we've got this thing where",
    "start": "519719",
    "end": "525240"
  },
  {
    "text": "we've got these fixed height blocks and that's part of the design that even if there's a little bit of text in you still want the the block to show enough",
    "start": "525240",
    "end": "532640"
  },
  {
    "text": "of the image but what we want is that tolerance for extra content to get in",
    "start": "532640",
    "end": "537920"
  },
  {
    "text": "there to at least not break even if that's not the design that I wanted and so here's what we do so as",
    "start": "537920",
    "end": "545320"
  },
  {
    "text": "you can see on the right hand um the S top right block about angry people at Bloom fiestas has got quite a bit more",
    "start": "545320",
    "end": "551760"
  },
  {
    "text": "text than we expected and it's expanded down and what's happened is the entire",
    "start": "551760",
    "end": "557000"
  },
  {
    "text": "row has expanded and so the two images next have also got more space in there and they've been able to expand as well",
    "start": "557000",
    "end": "563720"
  },
  {
    "text": "so we're able to have a minimum size for our track of 150 pixels tall um but",
    "start": "563720",
    "end": "569640"
  },
  {
    "text": "expand out if more content gets in and that's done by again using minmax so",
    "start": "569640",
    "end": "575959"
  },
  {
    "text": "here I'm saying make my my tracks a minimum of 150 pixels tall and a maximum",
    "start": "575959",
    "end": "581839"
  },
  {
    "text": "of Auto and auto will resolve to the content if it's not get any other any other height applied so it will make",
    "start": "581839",
    "end": "588480"
  },
  {
    "text": "enough space for whatever gets put into that box now it might be that the",
    "start": "588480",
    "end": "593519"
  },
  {
    "text": "designer would then come along and say oh take out some of that that Mark that content because I want those to look",
    "start": "593519",
    "end": "598760"
  },
  {
    "text": "nice and neat but at least it doesn't break and it all lines up at the bottom of the of the image so that's pretty",
    "start": "598760",
    "end": "604000"
  },
  {
    "text": "cool um you can have a look at the example the code links in my slides and there's a few little things in there",
    "start": "604000",
    "end": "610120"
  },
  {
    "text": "which are quite interesting about grid layout that you might like to have a look",
    "start": "610120",
    "end": "615000"
  },
  {
    "text": "at so I'll stay with grid a little bit longer and just talk a bit about the autop placement algorithm because that's",
    "start": "615279",
    "end": "621600"
  },
  {
    "text": "also something else that's very cool that's in Grid layout now you've already seen when we declare grid and we turn",
    "start": "621600",
    "end": "627959"
  },
  {
    "text": "something into a grid all of the child elements lay themselves out on that grid which is just like with flex box if you",
    "start": "627959",
    "end": "634279"
  },
  {
    "text": "say display Flex all the items inside become Flex items so we can play around",
    "start": "634279",
    "end": "639639"
  },
  {
    "text": "with this ability and we can start creating some rules for different items so that they act differently when grid",
    "start": "639639",
    "end": "645760"
  },
  {
    "text": "comes across them so I was uh remembering the",
    "start": "645760",
    "end": "652000"
  },
  {
    "text": "glorious days when we only had 216 colors to play with and so I created a",
    "start": "652000",
    "end": "657120"
  },
  {
    "text": "list of those web safe colors uh inside uh just an unordered list with a class",
    "start": "657120",
    "end": "662279"
  },
  {
    "text": "of colors and I'm going to lay those out as a grid so again I'm using the ability to",
    "start": "662279",
    "end": "668000"
  },
  {
    "text": "create as many columns this time with a minimum of 80 pixels and we're going to create them with a a height of of 80",
    "start": "668000",
    "end": "674720"
  },
  {
    "text": "pixels as well as a minimum so I get little square boxes and grid will lay out the items like this which is quite",
    "start": "674720",
    "end": "681880"
  },
  {
    "text": "pretty but I can start playing around with this I'm adding some classes I've",
    "start": "681880",
    "end": "687279"
  },
  {
    "text": "decided that the white and the black um squares on the grid are actually going to take up a full row so I'm",
    "start": "687279",
    "end": "693639"
  },
  {
    "text": "saying start those if you come across one with a class of white start it on grid column line one so in the this here",
    "start": "693639",
    "end": "700600"
  },
  {
    "text": "you can see grid column line one that's the start line and minus one is the end line on the grid um in a left to right",
    "start": "700600",
    "end": "707639"
  },
  {
    "text": "language then line one is your left hand line and minus one is the far right it' be swapped over if you were working in a",
    "start": "707639",
    "end": "713920"
  },
  {
    "text": "right to left language and I'm saying start that after grid Row three grid row line three and then we're doing the same",
    "start": "713920",
    "end": "719880"
  },
  {
    "text": "with the black one I've also got some which I've asked to span column track so we're going to end up with some larger",
    "start": "719880",
    "end": "725839"
  },
  {
    "text": "blocks on my grid which gives me this and we've got",
    "start": "725839",
    "end": "731040"
  },
  {
    "text": "these kind of big gaps in the grid and there's these sort of black bits are basically gaps in the grid as grid is laying these things out because it's",
    "start": "731040",
    "end": "738600"
  },
  {
    "text": "going to go through the source and it lies out things and it comes across one that's too big to fit on the end of a row and so it'll just drop down to the",
    "start": "738600",
    "end": "744839"
  },
  {
    "text": "next row and then it'll carry on until it finds another one that's too big and then it'll drop down so we end up with",
    "start": "744839",
    "end": "750120"
  },
  {
    "text": "these kind of gaps in the grid which is kind of what you'd normally want you tend to want your Source order to stay",
    "start": "750120",
    "end": "756680"
  },
  {
    "text": "in the order that you put it in your document unless we add the grid autof",
    "start": "756680",
    "end": "761959"
  },
  {
    "text": "flow property with a value of DSE and that will mean that grid will back fill",
    "start": "761959",
    "end": "768639"
  },
  {
    "text": "the gaps as grid progresses forward laying the items out it comes across one that doesn't fit and so it drops onto",
    "start": "768639",
    "end": "775120"
  },
  {
    "text": "the next line but the next time it finds one that will fit in that Gap it it'll pick it up take it out of source order",
    "start": "775120",
    "end": "781320"
  },
  {
    "text": "and put it into the space so you get a nice tightly packed uh display of boxes",
    "start": "781320",
    "end": "787240"
  },
  {
    "text": "which is great as long as you're displaying something that doesn't have a logical order it would not be so cool",
    "start": "787240",
    "end": "793320"
  },
  {
    "text": "for your forms and it kind of highlights an issue that I like to drop in and just make",
    "start": "793320",
    "end": "799040"
  },
  {
    "text": "people aware of that with all of this the grid layout particularly but with flexbox 2 there is a very real ability",
    "start": "799040",
    "end": "806360"
  },
  {
    "text": "to mess up the sort of logical order of your your document um and in the spec",
    "start": "806360",
    "end": "812880"
  },
  {
    "text": "for both grid and flexbox it says that any reordering either with autop placement or because you're just setting",
    "start": "812880",
    "end": "818279"
  },
  {
    "text": "the columns and and so on it's only a visual thing it doesn't affect the logical order of your document so in",
    "start": "818279",
    "end": "824079"
  },
  {
    "text": "terms of accessibility you need to make sure the logical order of your documents make sense even though we've got all",
    "start": "824079",
    "end": "829440"
  },
  {
    "text": "this amazing ability to start to move things around um I think it's really a discussion that we're only just starting",
    "start": "829440",
    "end": "835560"
  },
  {
    "text": "to have with grid um because the grid isn't actually live in any browsers yet",
    "start": "835560",
    "end": "840920"
  },
  {
    "text": "this is grid by example.com browsers which is my website of grid examples I have an awful lot of them um if you go",
    "start": "840920",
    "end": "849160"
  },
  {
    "text": "there you can see the status currently in browsers grid has been developed behind browser Flags if anyone has",
    "start": "849160",
    "end": "855920"
  },
  {
    "text": "worked with flexbox you may be aware that we kind of ended up with three versions of flexbox in browsers and this",
    "start": "855920",
    "end": "862240"
  },
  {
    "text": "was a large nuisance to all of us um and this is because flexbox was developed",
    "start": "862240",
    "end": "867320"
  },
  {
    "text": "with um prefixes vendor prefix es and the spec changed after browsers implemented and so we ended up with the",
    "start": "867320",
    "end": "873440"
  },
  {
    "text": "sort of messy versions of flexbox grid layout has been developed for in fact",
    "start": "873440",
    "end": "878480"
  },
  {
    "text": "the last five years or so it's been developed behind browser Flags there was an early Microsoft implementation the",
    "start": "878480",
    "end": "884480"
  },
  {
    "text": "spec came from Microsoft originally so in I 10 11 and Edge there is a kind of",
    "start": "884480",
    "end": "890040"
  },
  {
    "text": "older version of grid layout um we've now got in Firefox and in blink so in",
    "start": "890040",
    "end": "895240"
  },
  {
    "text": "chrom and Opera um we've got a really good and also in Safar technical preview we've got a really",
    "start": "895240",
    "end": "900880"
  },
  {
    "text": "good implementation of grid it is quite likely that come first quarter of next",
    "start": "900880",
    "end": "906120"
  },
  {
    "text": "year it's going to ship in those browsers at which point about 70% of people viewing the average website is",
    "start": "906120",
    "end": "912040"
  },
  {
    "text": "probably going to have grid support and it's kind of done if you enable experimental web platform features Flags",
    "start": "912040",
    "end": "917959"
  },
  {
    "text": "in Chrome it's all there all my examples work you can have a play around with",
    "start": "917959",
    "end": "923680"
  },
  {
    "text": "it so in flexbox and in the current implementations of grid layout elements",
    "start": "924240",
    "end": "930199"
  },
  {
    "text": "need to be a direct child of the element that you say display Flex or display grid on to become Flex or grid",
    "start": "930199",
    "end": "938240"
  },
  {
    "text": "items now grid layout does have a method sort of baked into the spec to enable",
    "start": "938240",
    "end": "944319"
  },
  {
    "text": "subgrid support so you could say that something was a sub Grid in which case it could use the grid defined sort of",
    "start": "944319",
    "end": "950480"
  },
  {
    "text": "further up the tree which would be very nice enable us to kind of create a a grid and then the child items and also",
    "start": "950480",
    "end": "957800"
  },
  {
    "text": "the children of those items could sit on the same grid that would be nice no one has yet implemented it it's quite likely",
    "start": "957800",
    "end": "964720"
  },
  {
    "text": "that that will get pushed into level two of the spec um because no one's implementing it but there is another",
    "start": "964720",
    "end": "971120"
  },
  {
    "text": "value of display which can kind of get round this problem it's already been implemented in Firefox and it's called",
    "start": "971120",
    "end": "977800"
  },
  {
    "text": "display contents what display contents does is",
    "start": "977800",
    "end": "984240"
  },
  {
    "text": "it stops an element generating any boxes so the effect of that is it means that a",
    "start": "984240",
    "end": "989800"
  },
  {
    "text": "child that is a you know a direct child element of something which is set to display grid or display Flex um the sort",
    "start": "989800",
    "end": "996160"
  },
  {
    "text": "of boxes it would generate would disappear and so its children could then be treated as Grid or Flex items which",
    "start": "996160",
    "end": "1002040"
  },
  {
    "text": "sounds very very strange indeed uh and is much easier to see if you s play with an",
    "start": "1002040",
    "end": "1008959"
  },
  {
    "text": "example so here's some markup I've got a div with a class of rapper it's got some direct children the H1 is a direct child",
    "start": "1008959",
    "end": "1016360"
  },
  {
    "text": "the paragraphs that block quote um and so is the unordered list with a class of images however the LI items inside are",
    "start": "1016360",
    "end": "1024199"
  },
  {
    "text": "not a direct child so they're not going to be affected by display grid being applied to",
    "start": "1024199",
    "end": "1031480"
  },
  {
    "text": "rapper so this is what I'm doing I'm creating this two column grid and I'm setting those direct children the H1 the",
    "start": "1031480",
    "end": "1037880"
  },
  {
    "text": "paragraphs to span right across the grid um the block quote has got a class of inset so it goes in column column after",
    "start": "1037880",
    "end": "1044798"
  },
  {
    "text": "column one and the following paragraph goes after column line two and this gives us this sort of thing you can see",
    "start": "1044799",
    "end": "1051280"
  },
  {
    "text": "the the two columns above of of the quote and the text next to it and then we've got those images which are inside",
    "start": "1051280",
    "end": "1057280"
  },
  {
    "text": "a list uh and so they don't lay out on the grid what I'd like them to do is line up underneath the other columns but",
    "start": "1057280",
    "end": "1063360"
  },
  {
    "text": "because they're not direct children they're not going to do that unless I use display",
    "start": "1063360",
    "end": "1068600"
  },
  {
    "text": "contents so we've got that UL with a class of images we say display contents",
    "start": "1068600",
    "end": "1074480"
  },
  {
    "text": "and the effect of that is that the UL is no longer in the Dom for display purposes it just sort of",
    "start": "1074480",
    "end": "1080120"
  },
  {
    "text": "vanishes and we end up being able to lay those items out Auto placement will'll just place them on the grid very very",
    "start": "1080120",
    "end": "1086120"
  },
  {
    "text": "useful you can use this already for Flex items um it works in Firefox and very",
    "start": "1086120",
    "end": "1092520"
  },
  {
    "text": "nicely Chrome have said that they're going to implement it as well so we're getting that into browsers uh I would",
    "start": "1092520",
    "end": "1099080"
  },
  {
    "text": "love to see proper sub grid support land in browsers for grid as well uh but this may well get us some of the way a lot of",
    "start": "1099080",
    "end": "1105840"
  },
  {
    "text": "the use cases that people have I think are probably solved by display cont contents certainly something to watch uh",
    "start": "1105840",
    "end": "1111240"
  },
  {
    "text": "in the future as that gets more browser",
    "start": "1111240",
    "end": "1115120"
  },
  {
    "text": "support So moving away from Big layout things um I'd like to talk a little bit about CSS shapes because it's a really",
    "start": "1116640",
    "end": "1123400"
  },
  {
    "text": "nice little specification and it's something that can work as an enhancement pretty",
    "start": "1123400",
    "end": "1129640"
  },
  {
    "text": "well the shapes spec came from Adobe originally it was one of their",
    "start": "1129640",
    "end": "1134840"
  },
  {
    "text": "specifications um and it defines an ability for us to float text in a curved",
    "start": "1134840",
    "end": "1140520"
  },
  {
    "text": "line or a line other than a sort of rectangular box so to use shapes you have to float",
    "start": "1140520",
    "end": "1147480"
  },
  {
    "text": "your item it can only be the level one spec can only be applied to floats so here I've got um an image here with a",
    "start": "1147480",
    "end": "1154240"
  },
  {
    "text": "class of balloon which I have floated left and given a width and then I've used this shape outside property which",
    "start": "1154240",
    "end": "1160960"
  },
  {
    "text": "is what's defined in the spec and I'm saying Circle 50% which gives me this",
    "start": "1160960",
    "end": "1167840"
  },
  {
    "text": "which is pretty nice you don't need to wrap things around an image you tend to see all the examples",
    "start": "1167840",
    "end": "1173840"
  },
  {
    "text": "have things wrapped around images but you don't need to do that uh you could float you need to float something so you",
    "start": "1173840",
    "end": "1179000"
  },
  {
    "text": "could float some generated content so here I'm just generating some content setting it to display block floating it",
    "start": "1179000",
    "end": "1184799"
  },
  {
    "text": "left giving it a width and a height and using shape outside again which gives me this so you can",
    "start": "1184799",
    "end": "1192919"
  },
  {
    "text": "kind of have these curved lines without needing to to put an image in there",
    "start": "1192919",
    "end": "1199520"
  },
  {
    "text": "as well as shapes you can use clip path it's it's different from a different specification but the nice thing about",
    "start": "1200320",
    "end": "1205520"
  },
  {
    "text": "the clip path uh property is it takes the same values as shapes do so once you've worked out what your shape is uh",
    "start": "1205520",
    "end": "1212799"
  },
  {
    "text": "you can also use clip path to clip away anything around say the image that you're curving your text around so here",
    "start": "1212799",
    "end": "1219159"
  },
  {
    "text": "I'm using my shape and this time I'm using the ellipse function you can also use a polygon there to create really",
    "start": "1219159",
    "end": "1224520"
  },
  {
    "text": "wacky shapes if you want to um and then I'm using um web clip which you need at the moment and clip path with the same",
    "start": "1224520",
    "end": "1232799"
  },
  {
    "text": "values and that gives us this and so that image is essentially rectangular",
    "start": "1232799",
    "end": "1237880"
  },
  {
    "text": "and we've just clipped away the the content around it you sort of see this kind of thing I've seen it done like",
    "start": "1237880",
    "end": "1244000"
  },
  {
    "text": "conference websites or anywhere where you've got um like little avatars of people and they're all square and you",
    "start": "1244000",
    "end": "1249559"
  },
  {
    "text": "float them and you wrap the text around and then if you've got shapes you make them circular and wrap the text around",
    "start": "1249559",
    "end": "1254919"
  },
  {
    "text": "in a in a curve which is a really nice enhancement because it's not going to matter if people don't have the support",
    "start": "1254919",
    "end": "1260000"
  },
  {
    "text": "for shapes they're going to get the square image it's going to be floated it'll be fine if you've got the support",
    "start": "1260000",
    "end": "1265159"
  },
  {
    "text": "then it's going to curve round this is the current browser support for the shape spec pretty good",
    "start": "1265159",
    "end": "1272159"
  },
  {
    "text": "um Firefox have said they're going to implement it so hopefully we'll get it",
    "start": "1272159",
    "end": "1277279"
  },
  {
    "text": "soon as well in Firefox um and as say it's a sort of thing that you could Implement people",
    "start": "1277279",
    "end": "1283559"
  },
  {
    "text": "will see if they've got Chrome if they're using Safari and then when um",
    "start": "1283559",
    "end": "1288600"
  },
  {
    "text": "fir Fox updates those people will also see it it's probably not going to break anything as long as you're fairly",
    "start": "1288600",
    "end": "1294440"
  },
  {
    "text": "careful you don't end up with for instance if you're clipping Tech clipping content away from an image and you've got stuff laid over it there's a",
    "start": "1294440",
    "end": "1300919"
  },
  {
    "text": "chance you could end up with something unreadable so those the kind of situations you need to be careful if using shapes but CSS has come up with a",
    "start": "1300919",
    "end": "1309840"
  },
  {
    "text": "solution for this browser support issue has anyone here used modernizer or",
    "start": "1309840",
    "end": "1315159"
  },
  {
    "text": "know what modernizer is yeah okay so CSS feature queries is essentially",
    "start": "1315159",
    "end": "1321640"
  },
  {
    "text": "modernizer the ability to detect support for a CSS feature but instead of using",
    "start": "1321640",
    "end": "1327120"
  },
  {
    "text": "JavaScript to do that we can do that right inside our",
    "start": "1327120",
    "end": "1332200"
  },
  {
    "text": "CSS and we're using this at supports rule it's a conditional group rule it's",
    "start": "1332320",
    "end": "1337440"
  },
  {
    "text": "a bit like media queries and in this case though instead of testing how wide the viewport is we're testing whether",
    "start": "1337440",
    "end": "1343799"
  },
  {
    "text": "the user agent uh declares that it supports a CSS property and value",
    "start": "1343799",
    "end": "1349200"
  },
  {
    "text": "pair which means that we can write a stylesheet that checks for support of a new CSS feature before using it which",
    "start": "1349200",
    "end": "1357720"
  },
  {
    "text": "means you can kind of do two things and you can overwrite stuff you've done earlier for older browsers after checking for support the thing with",
    "start": "1357720",
    "end": "1365080"
  },
  {
    "text": "feature queries is they've got fantastic browser support so your modern browsers all",
    "start": "1365080",
    "end": "1372000"
  },
  {
    "text": "support feature queries which means that nothing new is going to come into CSS",
    "start": "1372000",
    "end": "1377159"
  },
  {
    "text": "from this day forwards that you can't use feature query to check whether it's there or not which is pretty cool so you",
    "start": "1377159",
    "end": "1382840"
  },
  {
    "text": "can use this to implement new CSS without causing a problem for older",
    "start": "1382840",
    "end": "1390159"
  },
  {
    "text": "browsers so this is how you use it here I am checking to see if the browser has",
    "start": "1390159",
    "end": "1395440"
  },
  {
    "text": "support for grid layout so I'm saying at supports display grid if we've got grid layout do stuff for grid",
    "start": "1395440",
    "end": "1403080"
  },
  {
    "text": "layout you can test multiple things as well so here I'm checking for display",
    "start": "1403080",
    "end": "1408200"
  },
  {
    "text": "grid and also shape outside Circle the fact that we're using",
    "start": "1408200",
    "end": "1413320"
  },
  {
    "text": "property value pairs is really useful because if you know that a browser has got support for part of a spec but not",
    "start": "1413320",
    "end": "1419640"
  },
  {
    "text": "all of it which may happen for instance a browser might ship subgrid support in Grid layout um you can just be looking",
    "start": "1419640",
    "end": "1426480"
  },
  {
    "text": "for you could look for display sub grid if you were looking for that part of the spec um you're not looking for the",
    "start": "1426480",
    "end": "1431960"
  },
  {
    "text": "entire spec because very rarely do browsers actually ship with a completed specification so if even if you you know",
    "start": "1431960",
    "end": "1437880"
  },
  {
    "text": "if you just know that something isn't implemented you can look for it it's a really nice way to test for",
    "start": "1437880",
    "end": "1443480"
  },
  {
    "text": "support now when I showed you the uh chart of compatibility for this",
    "start": "1443480",
    "end": "1449039"
  },
  {
    "text": "obviously this isn't supported in older versions of IE but that doesn't really matter because what we do is when we use",
    "start": "1449039",
    "end": "1455240"
  },
  {
    "text": "feature queries you write your CSS for the old browsers or for the non-supporting browsers then you do your",
    "start": "1455240",
    "end": "1461039"
  },
  {
    "text": "feature query and then you overwrite anything that you don't need and then do your new stuff so here with the balloon um",
    "start": "1461039",
    "end": "1469000"
  },
  {
    "text": "example from earlier I'm going to give it a border and some padding for my non-shape supporting browsers I test for",
    "start": "1469000",
    "end": "1475840"
  },
  {
    "text": "support and then I do I get rid of that border and the padding and then I do my shape stuff inside the feature query",
    "start": "1475840",
    "end": "1482559"
  },
  {
    "text": "it's very much like when we uh do media queries and we do something for mobile devices and then we go to our wider",
    "start": "1482559",
    "end": "1489320"
  },
  {
    "text": "layout and maybe we take off some of that stuff and do some other things pretty much the same idea and if we've",
    "start": "1489320",
    "end": "1495000"
  },
  {
    "text": "got support we get our nice clipped shape and if we don't get support we",
    "start": "1495000",
    "end": "1500080"
  },
  {
    "text": "have this we don't have any problems it's a good way of making sure that your new CSS doesn't potentially cause",
    "start": "1500080",
    "end": "1505919"
  },
  {
    "text": "problems for your older browsers and I think they're a really exciting thing to start using and there's absolutely no",
    "start": "1505919",
    "end": "1512480"
  },
  {
    "text": "reason why you can't start using feature queries now to test for support of newer stuff um and they're just brilliant for",
    "start": "1512480",
    "end": "1520159"
  },
  {
    "text": "creating these sort of websites that can enhance themselves as their platform improves underneath them which is what's",
    "start": "1520159",
    "end": "1526159"
  },
  {
    "text": "happening you know with Evergreen browsers you know you know every other week someone's browser is going to update and they're going to get some new",
    "start": "1526159",
    "end": "1531760"
  },
  {
    "text": "stuff um and feature queries let you sort of respond to that and build sites and applications that cope with that",
    "start": "1531760",
    "end": "1540158"
  },
  {
    "text": "reality so something with very little support but which is pretty neat is initial letter um I think probably most",
    "start": "1541760",
    "end": "1549320"
  },
  {
    "text": "people doing front- end development and design at some point try to do like a proper drop caps effect um and it's a",
    "start": "1549320",
    "end": "1556440"
  },
  {
    "text": "task that really isn't very easy despite the fact that CSS is a very well supported first letter pseudo class it's",
    "start": "1556440",
    "end": "1562200"
  },
  {
    "text": "quite difficult to get a really nice drop caps effect um or it was until we got initial",
    "start": "1562200",
    "end": "1568240"
  },
  {
    "text": "letter so this is defined in the CSS inline layout model specification and it's Let's us create",
    "start": "1568240",
    "end": "1575120"
  },
  {
    "text": "proper initial letters in our documents so here's how we use it I'm",
    "start": "1575120",
    "end": "1581279"
  },
  {
    "text": "targeting here the paragraph directly after an H1 and I'm setting the initial letter of that paragraph to bold and to",
    "start": "1581279",
    "end": "1588000"
  },
  {
    "text": "be four lines tall so that's the first value there four I'm saying four lines",
    "start": "1588000",
    "end": "1593840"
  },
  {
    "text": "the second value dictates whether the initial letter is completely in line with the content or kind of sticks out the top of the content so I'm saying",
    "start": "1593840",
    "end": "1600640"
  },
  {
    "text": "that it should be three lines embedded into the content it's four lines tall three lines embedded which gives us this",
    "start": "1600640",
    "end": "1607679"
  },
  {
    "text": "so you can see how that W is four lines tall but one of the lines is kind of stuck out the top of the content so you can play around with that you could have",
    "start": "1607679",
    "end": "1613720"
  },
  {
    "text": "it completely inside if you wanted now if there's not support for that",
    "start": "1613720",
    "end": "1619240"
  },
  {
    "text": "then we'll get this nothing will happen because that's how CSS works if a if a browser doesn't support something it",
    "start": "1619240",
    "end": "1625000"
  },
  {
    "text": "just doesn't do anything um so that's pretty much fine as long as you don't want to do anything else to the initial",
    "start": "1625000",
    "end": "1631480"
  },
  {
    "text": "letter which browsers do support because this is currently Safari 9 and up only",
    "start": "1631480",
    "end": "1637320"
  },
  {
    "text": "it is currently being implemented in Firefox so if you were just going to make a big letter and it doesn't isn't",
    "start": "1637320",
    "end": "1643720"
  },
  {
    "text": "supported that's fine but perhaps you want to start playing around and doing some additional styling here I'm doing",
    "start": "1643720",
    "end": "1651279"
  },
  {
    "text": "some uh styling I'm adding a background image and messing about with CSS shapes",
    "start": "1651279",
    "end": "1656559"
  },
  {
    "text": "now the initial letter property is going to be ignored but all that other stuff is not going to be ignored because most browsers support the pseudo class and so",
    "start": "1656559",
    "end": "1663840"
  },
  {
    "text": "we get this sort of thing going on that's not ideal but we've already got a solution we've got feature queries so we",
    "start": "1663840",
    "end": "1670919"
  },
  {
    "text": "can test for that initial letter support and then put the CSS for it inside a feature query so we do this we check for",
    "start": "1670919",
    "end": "1678760"
  },
  {
    "text": "support of initial letter and if we have got support we get",
    "start": "1678760",
    "end": "1685159"
  },
  {
    "text": "this which probably isn't a lot better but I'm not a designer so that's but you can see that you can test for the",
    "start": "1685159",
    "end": "1691120"
  },
  {
    "text": "support and then do what you want so feature queries if you take one thing away feature queries they really are",
    "start": "1691120",
    "end": "1697039"
  },
  {
    "text": "your new best friend you can start using these",
    "start": "1697039",
    "end": "1701200"
  },
  {
    "text": "things staying with content writing modes now when I joined the CSS working",
    "start": "1702200",
    "end": "1708919"
  },
  {
    "text": "group um what I hadn't realized is that actually most of the discussions most of the time are about um the direction of",
    "start": "1708919",
    "end": "1716240"
  },
  {
    "text": "things being written so it turns out it's very complicated um whether things go from left to right or right to left",
    "start": "1716240",
    "end": "1722360"
  },
  {
    "text": "or top to bottom or whether you have um content which is mixed some of it going from right to left and some of it going from top to bottom and it's very very",
    "start": "1722360",
    "end": "1728559"
  },
  {
    "text": "complicated and many many amazing discussions occur about",
    "start": "1728559",
    "end": "1733760"
  },
  {
    "text": "writing modes and there's this whole specification to deal with writing modes but you don't just need to use these for",
    "start": "1733760",
    "end": "1740519"
  },
  {
    "text": "creating Lang text in other languages you can use them to play around with text in which you know your own language",
    "start": "1740519",
    "end": "1748039"
  },
  {
    "text": "so obviously I'm using English which is a left to right language and I've got a heading here and I've decided that I'd",
    "start": "1748039",
    "end": "1754640"
  },
  {
    "text": "quite like to have my heading tipped over on the side um and displayed down the side of the document and I can do",
    "start": "1754640",
    "end": "1760880"
  },
  {
    "text": "that with a combination of grid and writing modes so I'm doing a few things here",
    "start": "1760880",
    "end": "1767720"
  },
  {
    "text": "I've set my wrapper to display grid I'm creating a two column grid with a grid",
    "start": "1767720",
    "end": "1773200"
  },
  {
    "text": "Gap and then on my H1 I'm saying writing mode vertical RL I'm also using",
    "start": "1773200",
    "end": "1778559"
  },
  {
    "text": "transform to flip it over and and aligning the text and putting it after grid column line",
    "start": "1778559",
    "end": "1785440"
  },
  {
    "text": "one which gives me this so that's kind of a neat trick but the other place",
    "start": "1785440",
    "end": "1790880"
  },
  {
    "text": "where this sort of thing is quite useful uh I was sent an example by someone who wanted to know how I would do a layout",
    "start": "1790880",
    "end": "1796440"
  },
  {
    "text": "with grid and it had a bunch of um buttons that were down the side and the",
    "start": "1796440",
    "end": "1801600"
  },
  {
    "text": "text was sort of flipped over so the text was actually sort of down the side of the button um and you do that with",
    "start": "1801600",
    "end": "1806760"
  },
  {
    "text": "writing modes so you can create a kind of application UI with the text on its side again using the writing mode spec",
    "start": "1806760",
    "end": "1812919"
  },
  {
    "text": "so that's a fairly neat spec pretty good support better support than you would",
    "start": "1812919",
    "end": "1821120"
  },
  {
    "text": "imagine so a couple of things that you might expect to find in a pre-processor",
    "start": "1824200",
    "end": "1829279"
  },
  {
    "text": "rather than as native CSS I think the reason most of us started using pre-processors or the",
    "start": "1829279",
    "end": "1836080"
  },
  {
    "text": "reason we consider it you know the first thing we think is it'd be really nice to have variables in my CSS I am fed up",
    "start": "1836080",
    "end": "1842320"
  },
  {
    "text": "with searching and replacing through all these CSS files to find the colors or the fonts or whatever it is and so you",
    "start": "1842320",
    "end": "1848039"
  },
  {
    "text": "use a pre-processor like SAS or less so you can use variables so we've started we've brought",
    "start": "1848039",
    "end": "1854120"
  },
  {
    "text": "these into the CSS specs now and the spec that deals with variables is called custom",
    "start": "1854120",
    "end": "1860360"
  },
  {
    "text": "properties so custom properties it means that authors can defi define properties you can set them up and then you can use",
    "start": "1860360",
    "end": "1866799"
  },
  {
    "text": "them in your CSS files here's a simple example so here",
    "start": "1866799",
    "end": "1873360"
  },
  {
    "text": "I'm just setting up some colors I've got a primary color which I've set to Blue and secondary to Orange and then in my",
    "start": "1873360",
    "end": "1878720"
  },
  {
    "text": "H1 instead of having the color I say VAR and then I choose my custom property",
    "start": "1878720",
    "end": "1884799"
  },
  {
    "text": "that I would like to use something that's pretty cool is you can",
    "start": "1884799",
    "end": "1889880"
  },
  {
    "text": "use feature queries to test for them so you can test if you've got support for those custom properties before you use",
    "start": "1889880",
    "end": "1896399"
  },
  {
    "text": "them which means that you could you could have defaults and then overwrite them with your custom properties if you",
    "start": "1896399",
    "end": "1902799"
  },
  {
    "text": "know that you have support which is pretty neat and that's just a link to to that",
    "start": "1902799",
    "end": "1910399"
  },
  {
    "text": "example so you can have a look at that later getting there other than Edge",
    "start": "1910399",
    "end": "1917360"
  },
  {
    "text": "there's something we need to chase for um but yeah again reasonable support it's getting there we've got quite a bit",
    "start": "1917360",
    "end": "1923639"
  },
  {
    "text": "of support for this stuff and so the other thing that we do",
    "start": "1923639",
    "end": "1930200"
  },
  {
    "text": "in with pre-processors is we add things up we do basic mathematics and you might think well why",
    "start": "1930200",
    "end": "1937880"
  },
  {
    "text": "bother most of us are probably using SAS or L at this point why bother doing this stuff in CSS the key thing about the",
    "start": "1937880",
    "end": "1945039"
  },
  {
    "text": "calc function in CSS that lets us do this basic mathem itics is that you can mix length units you can't do something",
    "start": "1945039",
    "end": "1952840"
  },
  {
    "text": "like in your pre-processor you can't say take 20 pixels away from 50% because you",
    "start": "1952840",
    "end": "1957919"
  },
  {
    "text": "don't know at the time you run that pre-processor you don't know what 50% 50% of what you know how big is it um so",
    "start": "1957919",
    "end": "1964360"
  },
  {
    "text": "you can't do that whereas with Cal in CSS you can actually do that you can mix the",
    "start": "1964360",
    "end": "1969799"
  },
  {
    "text": "units so I've got a very quick example of that um got some uh boxes here and",
    "start": "1969799",
    "end": "1976240"
  },
  {
    "text": "inside they've got another div nested inside them um just so we can play around with some Heights and see how",
    "start": "1976240",
    "end": "1982240"
  },
  {
    "text": "this works so I've defined a height for two of them the first one is just going to",
    "start": "1982240",
    "end": "1988320"
  },
  {
    "text": "take the height of the content so it's whatever content is in",
    "start": "1988320",
    "end": "1993080"
  },
  {
    "text": "there and then this targets all of those inner divs everything inside box and",
    "start": "1994440",
    "end": "1999639"
  },
  {
    "text": "what we're saying for its height is that it should be 50% of its container minus 20 pixels",
    "start": "1999639",
    "end": "2008960"
  },
  {
    "text": "and we get this so the minus 20 pixels is to deal with the fact the box is absolutely positioned from the bottom",
    "start": "2009639",
    "end": "2014840"
  },
  {
    "text": "there so so if we said 50% it would be taller than actual 50% because we've not taken into account that 20 pixels so by",
    "start": "2014840",
    "end": "2022559"
  },
  {
    "text": "removing the 20 pixels on the height we get these half height boxes somewhere elsewhere Cal's very useful is",
    "start": "2022559",
    "end": "2028399"
  },
  {
    "text": "positioning background images making sure that they actually um defined the right way from the bottom um you can use",
    "start": "2028399",
    "end": "2035200"
  },
  {
    "text": "it for that but anyway you need to mix units in your CSS Cal is incredibly",
    "start": "2035200",
    "end": "2040880"
  },
  {
    "text": "handy and it's got really good browser support you can pretty much use",
    "start": "2040880",
    "end": "2046519"
  },
  {
    "text": "this um and so so that's something that you can be starting to use um you know I",
    "start": "2046519",
    "end": "2052679"
  },
  {
    "text": "think if you've got stuff that's pretty much Absolut you can do it in your pre-processor but there are you places",
    "start": "2052679",
    "end": "2058040"
  },
  {
    "text": "where it can be really handy to to roll that actually into your live",
    "start": "2058040",
    "end": "2062878"
  },
  {
    "text": "CSS so as well as looking at stuff with doing in pre-processes and and sort of taking ideas from that we're starting to",
    "start": "2065399",
    "end": "2072200"
  },
  {
    "text": "see things in CSS that we've done like forever with JavaScript you know for years and years we've been doing certain",
    "start": "2072200",
    "end": "2077919"
  },
  {
    "text": "things with JavaScript that are now starting to go into native specs which just means they're going to be more",
    "start": "2077919",
    "end": "2083040"
  },
  {
    "text": "performant if it's a native CSS thing rather than having to happen in JavaScript it's going to it's pretty much going to work a lot nicer so this",
    "start": "2083040",
    "end": "2090040"
  },
  {
    "text": "is one of those things this is a new value of the position property sticky so sticky positioning is when you've got",
    "start": "2090040",
    "end": "2096760"
  },
  {
    "text": "something positioned in your document and you start scrolling and it Scrolls fine with the text just as normal and",
    "start": "2096760",
    "end": "2102800"
  },
  {
    "text": "then when it hits at the top of the viewport it stays put and the text Scrolls underneath it common thing for",
    "start": "2102800",
    "end": "2108240"
  },
  {
    "text": "like navigation and so on can start in the middle of your document get to the top and and then start",
    "start": "2108240",
    "end": "2114839"
  },
  {
    "text": "scrolling so it's a bit different to sort of having something static which then starts in a place and always stays",
    "start": "2114839",
    "end": "2120960"
  },
  {
    "text": "there you've got that nice effect of it moving first and then staying so this is how we do that I've got a list of",
    "start": "2120960",
    "end": "2128400"
  },
  {
    "text": "elements with um definition terms followed by multiple definition and I",
    "start": "2128400",
    "end": "2133800"
  },
  {
    "text": "want the terms to stick as as we scroll so all we need to do for that is",
    "start": "2133800",
    "end": "2140240"
  },
  {
    "text": "say position sticky and then we say top zero and that means that I want it to to get stuck when it hits the top of the",
    "start": "2140240",
    "end": "2145800"
  },
  {
    "text": "viewport rather than part way up you could have a value there if you wanted it to stick a bit further down and we",
    "start": "2145800",
    "end": "2151800"
  },
  {
    "text": "get this sort of thing happening so you can see as they hit the top they stick",
    "start": "2151800",
    "end": "2158880"
  },
  {
    "text": "and the things scroll underneath them so that's a fairly neat effect to say it's something that we've been doing with JavaScript for a long time",
    "start": "2158880",
    "end": "2166280"
  },
  {
    "text": "anyway and there's your browser support it is coming into Chrome as you can see future versions of chrome have it h it's",
    "start": "2166280",
    "end": "2172760"
  },
  {
    "text": "in Canary certainly and it's it's flagged in um in other chromes it's also",
    "start": "2172760",
    "end": "2177800"
  },
  {
    "text": "a good candidate to polyfill you can polyfill this we're already doing this with JavaScript so it's a a pretty good candidate to you know just use um",
    "start": "2177800",
    "end": "2184760"
  },
  {
    "text": "position sticky if it's there and if not use some JavaScript to fake it or you could just leave it out if a browser",
    "start": "2184760",
    "end": "2190440"
  },
  {
    "text": "doesn't support position sticky it nothing's going to happen it's just going to scroll as normal which in you know in that kind of case would be",
    "start": "2190440",
    "end": "2196440"
  },
  {
    "text": "absolutely fine and scroll snapping this is a very",
    "start": "2196440",
    "end": "2203400"
  },
  {
    "text": "interesting spec um so this is the sort of thing when you're scrolling through an interface um the left to right to",
    "start": "2203400",
    "end": "2210480"
  },
  {
    "text": "bottom you've got something it's more like an app perhaps once you get past a certain point the scrollable item kind",
    "start": "2210480",
    "end": "2216440"
  },
  {
    "text": "of jumps to the next pain um so you get that nice effect you're not kind of having to kind of scroll it into view",
    "start": "2216440",
    "end": "2221720"
  },
  {
    "text": "and then try and get it lined up it's going to jump to where it expected to be and there's a new CSS specification that",
    "start": "2221720",
    "end": "2227800"
  },
  {
    "text": "deals with scroll snapping it's at candidate recommendation status but it has very",
    "start": "2227800",
    "end": "2234359"
  },
  {
    "text": "very recently changed so the code that works currently in browsers is not the final stuff that we'll be using for",
    "start": "2234359",
    "end": "2240119"
  },
  {
    "text": "scroll snapping uh which is pretty much the way of brand new specifications until things get to candidate",
    "start": "2240119",
    "end": "2246359"
  },
  {
    "text": "recommendation um they're kind of up for grabs things might change um and which is why things are typically happening",
    "start": "2246359",
    "end": "2252520"
  },
  {
    "text": "behind browser Flags these days so we can kind of mess around with them and and figure out the best way to do",
    "start": "2252520",
    "end": "2259200"
  },
  {
    "text": "things so patchy browser support and I say the stuff that is implemented is a",
    "start": "2259240",
    "end": "2264280"
  },
  {
    "text": "slightly older spec but this is pretty cool and it's kind of nice to see how this works so this demo currently Works",
    "start": "2264280",
    "end": "2271760"
  },
  {
    "text": "in Firefox um the changes to the spec lose the scroll snap destination and combine the scroll snap points y",
    "start": "2271760",
    "end": "2278640"
  },
  {
    "text": "property into scroll snap type but it's it's roughly similar to what you will see so you can have a play with the",
    "start": "2278640",
    "end": "2285240"
  },
  {
    "text": "example and you can see you're sort of pulling it you you drag that over and you drag it over and until it gets past",
    "start": "2285240",
    "end": "2291079"
  },
  {
    "text": "the midpoint and then it snaps into place so it's quite a nice effect especially if you're building something which wants to behave more like an app",
    "start": "2291079",
    "end": "2299280"
  },
  {
    "text": "and we can go the other way so you can scroll on the y- AIS again this is the old",
    "start": "2299280",
    "end": "2304839"
  },
  {
    "text": "spec um so then you just can drag up down until you go over the midpoint and it then jumps up so quite a nice thing I",
    "start": "2304839",
    "end": "2312680"
  },
  {
    "text": "think quite a nice example of how stuff that we're trying to do we're doing with JavaScript often in not a great way or",
    "start": "2312680",
    "end": "2318079"
  },
  {
    "text": "not abely performant way is coming into the CSS specs um so that we can sort of",
    "start": "2318079",
    "end": "2323280"
  },
  {
    "text": "try and use that in a better way which really leads me on to I've",
    "start": "2323280",
    "end": "2328960"
  },
  {
    "text": "shown you a whole bunch of stuff here that's pretty new and some of it only works in one browser you know the and",
    "start": "2328960",
    "end": "2334119"
  },
  {
    "text": "scroll snapping still needs updating and I've shown you how CSS gives you a method to deal with lack of",
    "start": "2334119",
    "end": "2340680"
  },
  {
    "text": "support but especially with kind of big layout methods we need those in all the browsers for us to be able to rely on",
    "start": "2340680",
    "end": "2345960"
  },
  {
    "text": "them you're not going to risk your entire layout on something which only has support in one browser and poly",
    "start": "2345960",
    "end": "2351440"
  },
  {
    "text": "filling your whole layout isn't likely to result in a very good sort of end result for for you or your or your users",
    "start": "2351440",
    "end": "2357960"
  },
  {
    "text": "but the thing is that we as web developers can do an awful lot to encourage adoption of these features by",
    "start": "2357960",
    "end": "2364480"
  },
  {
    "text": "browsers tell browser vendors that you want this stuff raise bugs against stuff",
    "start": "2364480",
    "end": "2369800"
  },
  {
    "text": "that is not working add your vote to things like the edge user voice site you know if you want shapes in Edge go and",
    "start": "2369800",
    "end": "2376640"
  },
  {
    "text": "tell them also if you can see a good use case for these features and you can't",
    "start": "2376640",
    "end": "2382560"
  },
  {
    "text": "use them because they're not supported in a certain browser write about it talk about it um you know make sure it gets",
    "start": "2382560",
    "end": "2389400"
  },
  {
    "text": "out there so when browser vs are looking you know do web developers care about this stuff if they can only find me",
    "start": "2389400",
    "end": "2396319"
  },
  {
    "text": "writing about grid then they're not they're not going to go and Implement stuff so I think that's the important thing is that there is noise about this",
    "start": "2396319",
    "end": "2402520"
  },
  {
    "text": "stuff and if we all sit there and say well I can't use it so I'm not even going to look at it we don't get them",
    "start": "2402520",
    "end": "2409160"
  },
  {
    "text": "and so it really is very very important to make your thoughts known with the browser vendors and just out there on",
    "start": "2409160",
    "end": "2414640"
  },
  {
    "text": "your blog or on medium or wherever you write stuff on Twitter um so that they know that there is call for it and that",
    "start": "2414640",
    "end": "2420240"
  },
  {
    "text": "if they implement it developers are going to be like Yay we've got it and we can build more stuff that's really",
    "start": "2420240",
    "end": "2425760"
  },
  {
    "text": "important and also with my CSS working group hat on if you see any of this featur these features",
    "start": "2425760",
    "end": "2432319"
  },
  {
    "text": "and think that the CSS working group have totally lost the plot then let us know if you have a use case that isn't",
    "start": "2432319",
    "end": "2438960"
  },
  {
    "text": "solved by some new CSS specification let us know we want to know about it or just",
    "start": "2438960",
    "end": "2444599"
  },
  {
    "text": "write about it and you know just tweet about it because we're watching um I when when we have conversations on the",
    "start": "2444599",
    "end": "2450119"
  },
  {
    "text": "weekly call or the face to faces quite often the question is asked what do web developers what do authors actually",
    "start": "2450119",
    "end": "2456119"
  },
  {
    "text": "think about this feature do they want it are they using it are they having problems with it what do they think it should be called a lot of",
    "start": "2456119",
    "end": "2462680"
  },
  {
    "text": "the discussions are about just like what should we call this thing and we never know um and so you know I'll be on a",
    "start": "2462680",
    "end": "2468359"
  },
  {
    "text": "call Googling to see if anybody has written about this yet and creating you know creating lists of that stuff so if",
    "start": "2468359",
    "end": "2474079"
  },
  {
    "text": "you're out there writing about it and writing about the use cases you've got it definitely gets listened to and it",
    "start": "2474079",
    "end": "2480079"
  },
  {
    "text": "literally can be three or four people writing about something can mean it gets implemented and you know gets put into a",
    "start": "2480079",
    "end": "2485720"
  },
  {
    "text": "specification because you find there aren't that many people writing about early stage CSS so you can get your",
    "start": "2485720",
    "end": "2491760"
  },
  {
    "text": "voice heard um and particularly if you're someone who like writes JavaScript and things and you you're building stuff which is you know",
    "start": "2491760",
    "end": "2498560"
  },
  {
    "text": "interesting and could be solved natively we'd like to know about that um all of the CSS specifications",
    "start": "2498560",
    "end": "2505400"
  },
  {
    "text": "are now discussed on GitHub they were moved this year to GitHub out of the horrendous mailing list that I could",
    "start": "2505400",
    "end": "2510520"
  },
  {
    "text": "never encourage anybody to go and look at uh it really was like something out of the 90s um it's now all on GitHub",
    "start": "2510520",
    "end": "2516200"
  },
  {
    "text": "where every other open source project is so you can come along you can search for different specifications and you can see",
    "start": "2516200",
    "end": "2522599"
  },
  {
    "text": "which issues are raised which a lot of those come up during the calls and we we put them on there you can even raise new",
    "start": "2522599",
    "end": "2527760"
  },
  {
    "text": "issues yourself you know if particularly if a spec is you know not a final spec you know let us know if you think things",
    "start": "2527760",
    "end": "2533640"
  },
  {
    "text": "are called stupid things or whatever or if it's not doing something you need because it may well get uh discussed and",
    "start": "2533640",
    "end": "2539920"
  },
  {
    "text": "brought up and you really are you know sort doing your future self a favor by doing this stuff because in a year in",
    "start": "2539920",
    "end": "2545640"
  },
  {
    "text": "two years it's going to be out there in browsers things are happening very very quickly these days and you can actually",
    "start": "2545640",
    "end": "2551280"
  },
  {
    "text": "really influence that and speaking for myself you know I'm not affiliated to a browser vendor I do all my CS working",
    "start": "2551280",
    "end": "2557520"
  },
  {
    "text": "group stuff really as kind of like a weird hobby um but I really enjoy it I get a lot from contributing to this",
    "start": "2557520",
    "end": "2563880"
  },
  {
    "text": "stuff and actually finding out the inner workings of it all it's been really interesting so it's it's kind of interesting just to listen in if there's",
    "start": "2563880",
    "end": "2570440"
  },
  {
    "text": "particular specs you're interested in go follow them on GitHub and and please do do offer your thoughts we'd really like",
    "start": "2570440",
    "end": "2576240"
  },
  {
    "text": "to hear them so all of my slides and code and so on are at that link thank",
    "start": "2576240",
    "end": "2581359"
  },
  {
    "text": "you very much for [Applause]",
    "start": "2581359",
    "end": "2591960"
  },
  {
    "text": "listening any",
    "start": "2591960",
    "end": "2595318"
  },
  {
    "text": "questions everyone watch out this very hot room then I have one um which is um",
    "start": "2604760",
    "end": "2610760"
  },
  {
    "text": "you mentioned that the the CSS queries um allows for checking for the availability of your features um but I'm",
    "start": "2610760",
    "end": "2617520"
  },
  {
    "text": "unsure what your recommendation regarding grid layout actually is uh do you suggest to just play with it now or",
    "start": "2617520",
    "end": "2624920"
  },
  {
    "text": "use it now to just be ready when things started when is the good time to start",
    "start": "2624920",
    "end": "2630000"
  },
  {
    "text": "using those very Advanced things right I mean so so Grid's an interesting one because it's all kind of there but we",
    "start": "2630000",
    "end": "2635520"
  },
  {
    "text": "can't unless you're not going to tell users to um take off an experimental web platform features flag um the thing with",
    "start": "2635520",
    "end": "2642319"
  },
  {
    "text": "grid is it's very likely that it's going to end up in browsers early next year but that can't be guarantees you know",
    "start": "2642319",
    "end": "2647760"
  },
  {
    "text": "any browser could decide that there was some showstopper with performance or something and not ship it until later in the year um I think it's certainly worth",
    "start": "2647760",
    "end": "2655200"
  },
  {
    "text": "starting to learn now because when it does ship it's going to land pretty much complete across those browsers um so",
    "start": "2655200",
    "end": "2662520"
  },
  {
    "text": "there's a good chance and particularly if you know you've got a use case for that the mentation in Chrome",
    "start": "2662520",
    "end": "2667920"
  },
  {
    "text": "interestingly has been paid for by Bloomberg they paid the open source consultancy of garia to develop it and",
    "start": "2667920",
    "end": "2673839"
  },
  {
    "text": "and put it into blink so they obviously have a use for it and probably very keen to see it out there um so it's certainly",
    "start": "2673839",
    "end": "2680359"
  },
  {
    "text": "worth having a look at it's a big spec there's a lot to it and if you can start to get a head start and understanding grid um it'll be useful to you certainly",
    "start": "2680359",
    "end": "2687040"
  },
  {
    "text": "in a year's time um it's not something what even once it is in brows it's not something I would suggest poly filling",
    "start": "2687040",
    "end": "2693400"
  },
  {
    "text": "what I would suggest is that you start to use it for components um grid is brilliant for laying out little",
    "start": "2693400",
    "end": "2698920"
  },
  {
    "text": "components and like really tweaking the alignment and getting a nice display of stuff um and when you work on a kind of",
    "start": "2698920",
    "end": "2704520"
  },
  {
    "text": "micro level it's easier to fall back to a simpler display for things that don't support and once we're talking about 70",
    "start": "2704520",
    "end": "2710920"
  },
  {
    "text": "80% of people having grid which we could well have by through next year um you",
    "start": "2710920",
    "end": "2716280"
  },
  {
    "text": "know it makes more sense to start you know use feature queries detect for support of grid do a nicer layout you know enhancing a planer one I think",
    "start": "2716280",
    "end": "2723000"
  },
  {
    "text": "generally using stuff as an enhancement as much as possible rather than trying to do any nasty kind of poly filling of this stuff is probably a better",
    "start": "2723000",
    "end": "2729480"
  },
  {
    "text": "idea thank you yes um when I do feature testing in",
    "start": "2729480",
    "end": "2736640"
  },
  {
    "text": "JavaScript I can lazy load content whereas like if I do an ad import inside an ad supports it would get loaded every",
    "start": "2736640",
    "end": "2743200"
  },
  {
    "text": "single single time is there a thought in the spec how how user agents have to",
    "start": "2743200",
    "end": "2748359"
  },
  {
    "text": "deal with that I'm not sure I don't think so I think that's yeah that's something you you could do I don't",
    "start": "2748359",
    "end": "2753920"
  },
  {
    "text": "there's anything in the spec that particularly would deal with that um um yeah that's an interesting",
    "start": "2753920",
    "end": "2759800"
  },
  {
    "text": "interesting thought we should talk about that",
    "start": "2759800",
    "end": "2764680"
  },
  {
    "text": "okay any more questions okay and thanks a lot Rachel",
    "start": "2765119",
    "end": "2771880"
  },
  {
    "text": "thank you [Applause]",
    "start": "2771880",
    "end": "2780609"
  }
]