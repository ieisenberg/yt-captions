[
  {
    "start": "0",
    "end": "69000"
  },
  {
    "text": "okie doke so I'm Connell um I want to talk about what's become a",
    "start": "480",
    "end": "7379"
  },
  {
    "text": "really central theme for me in uh in software design I've been doing mostly",
    "start": "7379",
    "end": "14099"
  },
  {
    "text": "language and Library design for uh well for a very long time since early 80s I think",
    "start": "14099",
    "end": "19560"
  },
  {
    "text": "and a few years ago it became much more clear to me what it was I was doing and it was a it was sort",
    "start": "19560",
    "end": "27000"
  },
  {
    "text": "of a lucky accident that I'm very grateful for to have stumbled across this pattern which really came kind of out of code",
    "start": "27000",
    "end": "32758"
  },
  {
    "text": "poetry I was trying to formulate a semantics for functional reactive programming and",
    "start": "32759",
    "end": "39480"
  },
  {
    "text": "I know I started noticing some patterns and rewriting my expression um not so it would mean something",
    "start": "39480",
    "end": "44520"
  },
  {
    "text": "different but so that it would uh feel more poetic more sort of balanced",
    "start": "44520",
    "end": "50160"
  },
  {
    "text": "and symmetric and uh Duality is becoming more cleanly expressed and that kind of thing so it",
    "start": "50160",
    "end": "56340"
  },
  {
    "text": "was a kind of an aesthetic exercise that led to what's now my central",
    "start": "56340",
    "end": "62480"
  },
  {
    "text": "consciously Central Paradigm for doing uh Library design I call it denotational",
    "start": "62480",
    "end": "67619"
  },
  {
    "text": "design so I want to start out um by talking about what I see is the as",
    "start": "67619",
    "end": "75960"
  },
  {
    "start": "69000",
    "end": "117000"
  },
  {
    "text": "the main job of a software designer which is to build abstractions so what",
    "start": "75960",
    "end": "82439"
  },
  {
    "text": "do we build we build programs but I don't think we build programs mainly the program in the sense is something you can run",
    "start": "82439",
    "end": "88320"
  },
  {
    "text": "for every program that I make what's really more powerful in my output what's",
    "start": "88320",
    "end": "93659"
  },
  {
    "text": "more reusable what's a more value is the libraries I create so they're the components that in which I build",
    "start": "93659",
    "end": "99060"
  },
  {
    "text": "programs so every time I do programming I'm really looking for what are abstractions that are a great fit if I",
    "start": "99060",
    "end": "105180"
  },
  {
    "text": "can already find these abstractions supported off the shelf in some Library I'll use them but most often I'm fairly dissatisfied with the building blocks",
    "start": "105180",
    "end": "112500"
  },
  {
    "text": "and so um so I want to build my own abstractions and I'm going to build a particular application on top",
    "start": "112500",
    "end": "118979"
  },
  {
    "start": "117000",
    "end": "183000"
  },
  {
    "text": "so this is a quote I like very much from a man I respect very much Edgar Dykstra and he said the purpose of abstraction",
    "start": "118979",
    "end": "125219"
  },
  {
    "text": "is not to be vague so sometimes people use the word abstract I mean kind of vague but Dexter",
    "start": "125219",
    "end": "130739"
  },
  {
    "text": "doesn't mean it that way and I certainly don't mean it that way rather than to be vague it's to create a whole new semantic level in which one can be",
    "start": "130739",
    "end": "137160"
  },
  {
    "text": "absolutely precise okay so we can be precise and low level",
    "start": "137160",
    "end": "144840"
  },
  {
    "text": "can be precise without being abstract but then it's quite complicated and you",
    "start": "144840",
    "end": "149940"
  },
  {
    "text": "know our cognitive abilities we'll soon reach our limit before we realize our aspirations It's a Wonderful paper by",
    "start": "149940",
    "end": "155940"
  },
  {
    "text": "Dykstra called The Humble programmer I think it was a turing award lecture I highly recommend",
    "start": "155940",
    "end": "161099"
  },
  {
    "text": "talking about how we can use our abilities and by by walking into the project humbly realizing that I'm going",
    "start": "161099",
    "end": "167879"
  },
  {
    "text": "to reach my cognitive limitations quite soon then it informs the choices I want to make I want to use abstractions that",
    "start": "167879",
    "end": "174060"
  },
  {
    "text": "allow me to continue making progress even though I have a brain that has to fit in a skull",
    "start": "174060",
    "end": "179099"
  },
  {
    "text": "that has to pass through a woman's pelvis at some point all right",
    "start": "179099",
    "end": "184280"
  },
  {
    "start": "183000",
    "end": "290000"
  },
  {
    "text": "so I suggest there are three goals you know I think of these as my three main goals when I'm doing a software project",
    "start": "184379",
    "end": "190739"
  },
  {
    "text": "so one is I want to build abstractions and I want to make implementations of those abstractions and then I want",
    "start": "190739",
    "end": "196860"
  },
  {
    "text": "documentation that clearly expresses what how to use those abstractions well powerfully dependably and so on and I've",
    "start": "196860",
    "end": "204239"
  },
  {
    "text": "jotted down some qualities that I associate with these these three goals so I want my abstractions to be precise",
    "start": "204239",
    "end": "211019"
  },
  {
    "text": "elegant and reusable okay I'm going to talk about Precision a lot",
    "start": "211019",
    "end": "218879"
  },
  {
    "text": "and it's not that I think that Precision is a is an end unto itself",
    "start": "218879",
    "end": "224340"
  },
  {
    "text": "it's not it's really these other things like elegance and reusability the reason I harp onto Precision is because it's so",
    "start": "224340",
    "end": "230340"
  },
  {
    "text": "easy to fool ourselves and precision is what keeps us out keeps us away from doing that",
    "start": "230340",
    "end": "236480"
  },
  {
    "text": "my implementation I'd like it to be fast right but I don't want just fast I",
    "start": "236480",
    "end": "241620"
  },
  {
    "text": "wanted to be correct right I care about what I implement right by writing no code I've written a",
    "start": "241620",
    "end": "247440"
  },
  {
    "text": "very fast implementation but it's not going to satisfy any interesting uh requirements",
    "start": "247440",
    "end": "252840"
  },
  {
    "text": "and of course I want my program my implementation to be maintainable I want them to sort of capture and hold my insights",
    "start": "252840",
    "end": "259680"
  },
  {
    "text": "and so somebody when coming back me later or somebody else can understand what I",
    "start": "259680",
    "end": "265860"
  },
  {
    "text": "understood and putting them together and then the documentation should also",
    "start": "265860",
    "end": "271020"
  },
  {
    "text": "be simple and it should be clear and accurate so one way to make things simple is to make",
    "start": "271020",
    "end": "277919"
  },
  {
    "text": "them inaccurate I can tell you a simple story that isn't true and at some point I'm going to harm you by doing that",
    "start": "277919",
    "end": "285500"
  },
  {
    "text": "so I want to be I want to tell the truth and do so simply",
    "start": "285660",
    "end": "290699"
  },
  {
    "start": "290000",
    "end": "354000"
  },
  {
    "text": "okay so I'm going to say something that maybe a little jarring which is that the",
    "start": "290699",
    "end": "295800"
  },
  {
    "text": "state of the kind of state commonly practiced state of the art and software is something that is is uh it's precise",
    "start": "295800",
    "end": "301139"
  },
  {
    "text": "only about how not about what okay and I think maybe there's a historical accident",
    "start": "301139",
    "end": "307979"
  },
  {
    "text": "that uh it's it's kind of the nature of our tool our computer tool that we have",
    "start": "307979",
    "end": "313440"
  },
  {
    "text": "to speak to it unambiguously but it's only a tool for how it's only a tool for for sort of half of",
    "start": "313440",
    "end": "320880"
  },
  {
    "text": "what we're talking about or some fraction we're talking about and and this uh it opposes a requirement",
    "start": "320880",
    "end": "326340"
  },
  {
    "text": "of precision on us on ambiguity and the what which to me is much more",
    "start": "326340",
    "end": "332639"
  },
  {
    "text": "important than the how it's a more fundamental part of the game the tool doesn't impose that on us and precision",
    "start": "332639",
    "end": "339000"
  },
  {
    "text": "is hard and hard becomes unpleasant so I think just for this kind of",
    "start": "339000",
    "end": "344460"
  },
  {
    "text": "historical accident we've developed willingness and abilities to be precise",
    "start": "344460",
    "end": "349680"
  },
  {
    "text": "about house",
    "start": "349680",
    "end": "352580"
  },
  {
    "start": "354000",
    "end": "384000"
  },
  {
    "text": "and so um so Wolfgang Polly came out with this description which I think applies to most software development",
    "start": "356520",
    "end": "362880"
  },
  {
    "text": "which is it's not only is it not right it's not even wrong okay",
    "start": "362880",
    "end": "368220"
  },
  {
    "text": "so it's not even wrong because there's no there's no clear question it's like an answer without a question",
    "start": "368220",
    "end": "374100"
  },
  {
    "text": "so that's what I would say software without a specification is an answer without a question is it right is it wrong",
    "start": "374100",
    "end": "380039"
  },
  {
    "text": "we don't even know what it means so it's not even wrong I would say",
    "start": "380039",
    "end": "385979"
  },
  {
    "start": "384000",
    "end": "562000"
  },
  {
    "text": "and why does this matter and I love this quote from Bertrand Russell so everything is vague to a degree you do not realize until you've tried to make",
    "start": "385979",
    "end": "392699"
  },
  {
    "text": "it precise so Bertrand Russell in case you don't know devoted years and years of his life",
    "start": "392699",
    "end": "398940"
  },
  {
    "text": "this was his life mission to make things precise that people didn't really understand were vague so he found",
    "start": "398940",
    "end": "405000"
  },
  {
    "text": "himself in the European mathematical community and was uncomfortable with the",
    "start": "405000",
    "end": "410940"
  },
  {
    "text": "level of precision that was accepted in the day and he started poking at you",
    "start": "410940",
    "end": "416759"
  },
  {
    "text": "know professors and other practicing mathematicians and they weren't really very receptive",
    "start": "416759",
    "end": "422900"
  },
  {
    "text": "um they didn't like having it pointed out that that uh the conclusions they were drawing were perhaps not sound as",
    "start": "423660",
    "end": "430259"
  },
  {
    "text": "they were based on uh perhaps unsound foundations",
    "start": "430259",
    "end": "435440"
  },
  {
    "text": "um so it doesn't have to do with software well you might not you might not want to",
    "start": "435840",
    "end": "441900"
  },
  {
    "text": "write down a clear specification because you're comfortable you think I basically know what I'm doing I've got this kind",
    "start": "441900",
    "end": "446940"
  },
  {
    "text": "of assignment I've had a chat with my co-workers or my boss or just internally in my head I basically know what it's",
    "start": "446940",
    "end": "452580"
  },
  {
    "text": "for now let's get to the real work and do an implementation well I want to suggest is what Bertrand",
    "start": "452580",
    "end": "458280"
  },
  {
    "text": "Russell points out here which is that if you think you know what you're doing but you haven't made precise you're probably",
    "start": "458280",
    "end": "464099"
  },
  {
    "text": "wrong or you're very likely wrong because the imprecisions",
    "start": "464099",
    "end": "470220"
  },
  {
    "text": "don't come to the surface until you've really tried to make them precise so don't be reassured by a kind of informal",
    "start": "470220",
    "end": "475919"
  },
  {
    "text": "like I pretty much know what I'm doing it's time to go on and I want to suggest that Supply is really particularly in computer",
    "start": "475919",
    "end": "483180"
  },
  {
    "text": "programming and and there's this uh old old quote my demos that needs he says",
    "start": "483180",
    "end": "489419"
  },
  {
    "text": "what we wish we readily believe what we wish that we readily believe as a",
    "start": "489419",
    "end": "494520"
  },
  {
    "text": "software developer when I'm in the mode of trying to get something done which is a lot of the",
    "start": "494520",
    "end": "499560"
  },
  {
    "text": "time sometimes I'm I'm like trying to understand or I'm trying to experience art or something when I'm in the mode of trying to accomplish a goal",
    "start": "499560",
    "end": "506160"
  },
  {
    "text": "then um then what the idea that my program might not be correct or I might not even",
    "start": "506160",
    "end": "512279"
  },
  {
    "text": "understand what the question means is it odds with my desire to move on to the next thing",
    "start": "512279",
    "end": "517440"
  },
  {
    "text": "right I'm going to take a break I might want to get a raise I might just want to do you know other things that are more interesting so I wish that my program",
    "start": "517440",
    "end": "523320"
  },
  {
    "text": "were correct that means I'm like I'm re I'm what I readily believe that it's correct",
    "start": "523320",
    "end": "530040"
  },
  {
    "text": "so I'm suggesting we have a built-in bias to ignore the possibility that we don't even",
    "start": "530040",
    "end": "536459"
  },
  {
    "text": "understand what the question is so not even is it a possibility",
    "start": "536459",
    "end": "541680"
  },
  {
    "text": "as Burke and Russell pointed out that there's an important vagary hiding",
    "start": "541680",
    "end": "546839"
  },
  {
    "text": "but also I think there's a we have an internal psychological bias that makes it quite likely",
    "start": "546839",
    "end": "552720"
  },
  {
    "text": "so that's my pitch for precision not because Precision is important in itself because it's a way to help us not fool",
    "start": "552720",
    "end": "559440"
  },
  {
    "text": "ourselves and we have a tendency to fool ourselves okay",
    "start": "559440",
    "end": "564779"
  },
  {
    "start": "562000",
    "end": "828000"
  },
  {
    "text": "so um I prefer interactive talks to monologues even if I'm the monologist",
    "start": "564779",
    "end": "572779"
  },
  {
    "text": "so absolutely questions whatever please please pipe up",
    "start": "572779",
    "end": "579480"
  },
  {
    "text": "uh if you raise your hand I don't see you then just shout or something all right so",
    "start": "579480",
    "end": "585120"
  },
  {
    "text": "um so we're in this community that we call functional programming and that term has",
    "start": "585120",
    "end": "590519"
  },
  {
    "text": "been around for quite a while and a 1966 Peter Landon published a seminal paper the next 700 programming",
    "start": "590519",
    "end": "597779"
  },
  {
    "text": "languages and in this paper he points out that this term that was being used even at",
    "start": "597779",
    "end": "602940"
  },
  {
    "text": "the time functional programming is really ill-defined it's this fuzzy term along with uh what non-procedural I",
    "start": "602940",
    "end": "610320"
  },
  {
    "text": "think was one and declarative is another and uh and if you've ever used the",
    "start": "610320",
    "end": "616800"
  },
  {
    "text": "internet right particularly programming language communities programmers blogs and that kind of thing you might have seen people",
    "start": "616800",
    "end": "622980"
  },
  {
    "text": "arguing over whose language is more functional is Scala really a functional language",
    "start": "622980",
    "end": "630060"
  },
  {
    "text": "uh his list for scheme functional is Haskell with i o functional I poked",
    "start": "630060",
    "end": "635279"
  },
  {
    "text": "around that one and what I see is it's easy to start these conversations and it's very hard",
    "start": "635279",
    "end": "642060"
  },
  {
    "text": "to get anywhere helpful and I think that Peter Lannon explained in his 1966 paper why that was and it's",
    "start": "642060",
    "end": "648540"
  },
  {
    "text": "because these terms are not well defined and he recommended an alternative and this is what I recommend so I would say",
    "start": "648540",
    "end": "655860"
  },
  {
    "text": "I would say deprecate the term functional and let's talk about something that has a clear meaning",
    "start": "655860",
    "end": "661620"
  },
  {
    "text": "and then revisit all these conversations if we still want to revisit about whose language is functional and who's not and",
    "start": "661620",
    "end": "667380"
  },
  {
    "text": "how to be more in that direction and Peter Landon suggested term denotated me to find it having three properties one",
    "start": "667380",
    "end": "673800"
  },
  {
    "text": "is that is that we have a nested expression structure so it's Expressions within Expressions okay so you'll",
    "start": "673800",
    "end": "679980"
  },
  {
    "text": "recognize that and the second is that every expression denotes something so now really kind of getting to the",
    "start": "679980",
    "end": "685680"
  },
  {
    "text": "heart of things it's not just syntax so expression structured nesting is a syntactic property but that expressions",
    "start": "685680",
    "end": "692220"
  },
  {
    "text": "mean something denote something that he put it and that something depends only on the",
    "start": "692220",
    "end": "698700"
  },
  {
    "text": "denotations of the sub-expressions so these are his three properties of what he calls denotative language or",
    "start": "698700",
    "end": "704940"
  },
  {
    "text": "denotative programming Style and and these three properties in particular third one he says it gives us",
    "start": "704940",
    "end": "711839"
  },
  {
    "text": "a test for whether the notation is genuinely functional or merely masquerading",
    "start": "711839",
    "end": "717240"
  },
  {
    "text": "so that's why sometimes I I kind of poke around and say maybe that's functional but it's not genuinely functional and",
    "start": "717240",
    "end": "722880"
  },
  {
    "text": "this is what I mean",
    "start": "722880",
    "end": "725600"
  },
  {
    "text": "to what we think thanks yeah so the question is uh",
    "start": "734540",
    "end": "739620"
  },
  {
    "text": "um so when Landon is saying denotation and and like today when I'm saying denotation and you know due to digital",
    "start": "739620",
    "end": "745440"
  },
  {
    "text": "semantics are we talking about the same thing yes we're talking about the same thing yeah so this paper was published in 1966 there was early work by Chris",
    "start": "745440",
    "end": "752880"
  },
  {
    "text": "strachy at that time what he called denotational semantics yeah and Peter Landon if you haven't heard of Peter",
    "start": "752880",
    "end": "759060"
  },
  {
    "text": "Landon um Peter Landon is one of the one of the few really kind of founding fathers",
    "start": "759060",
    "end": "765200"
  },
  {
    "text": "founding parents of our discipline and not just a functional programming but of understanding function of understanding",
    "start": "765200",
    "end": "771660"
  },
  {
    "text": "programming languages so Peter land is extremely important figure in our history and made",
    "start": "771660",
    "end": "778079"
  },
  {
    "text": "contributions for instance Peter Landon is the one who realized hey wait a minute Lambda calculus and programming have something to do with each other",
    "start": "778079",
    "end": "784740"
  },
  {
    "text": "okay Peter Landon figured out he designed something called The sccd Machine this is like how can we actually",
    "start": "784740",
    "end": "790440"
  },
  {
    "text": "evaluate Lambda expressions with a machine yes this is so like we take this so",
    "start": "790440",
    "end": "796079"
  },
  {
    "text": "deeply for granted um Peter Landon was on the algol committee",
    "start": "796079",
    "end": "801959"
  },
  {
    "text": "uh and that was where he noticed and he wrote a famous paper called I think a correspondence between churches between Al gold 68 and Church's notation",
    "start": "801959",
    "end": "808440"
  },
  {
    "text": "something like that and that's where he was like realizing and then um and then he wrote this paper which is which is",
    "start": "808440",
    "end": "814320"
  },
  {
    "text": "this is the seminal paper on the idea of domain-specific embedded languages",
    "start": "814320",
    "end": "820740"
  },
  {
    "text": "this paper gave rise I believe to scheme ML and Haskell among other languages so",
    "start": "820740",
    "end": "827160"
  },
  {
    "text": "very influential all right so that's the idea of denotative programming",
    "start": "827160",
    "end": "833040"
  },
  {
    "start": "828000",
    "end": "1135000"
  },
  {
    "text": "and it and it it's a clearer question if you ask is is Scala functional",
    "start": "833040",
    "end": "840360"
  },
  {
    "text": "it's a non-question right because function doesn't mean anything but it's Scala denotative well that's a much more",
    "start": "840360",
    "end": "845700"
  },
  {
    "text": "interesting question the question is can we give a semantics to it in this compositional style the",
    "start": "845700",
    "end": "851339"
  },
  {
    "text": "meaning of an expression depends on the meaning of its components and if so what does it look like and are we happy with the results and if we're happy with them celebrate",
    "start": "851339",
    "end": "858060"
  },
  {
    "text": "if we're not happy let's steer so denotational Design This is a term that I came up with a few years ago",
    "start": "858060",
    "end": "865980"
  },
  {
    "text": "it's the subject of this workshop and here's a little pitch as a commercial so denotational design I think is like a",
    "start": "865980",
    "end": "872820"
  },
  {
    "text": "wonderful natural fit for functional programming for particularly this",
    "start": "872820",
    "end": "877920"
  },
  {
    "text": "programming in which we understand specifications in a clear way and it has these properties I'm claiming",
    "start": "877920",
    "end": "884540"
  },
  {
    "text": "so it gives us precise simple and compelling specifications",
    "start": "884540",
    "end": "890300"
  },
  {
    "text": "IT addresses both the use of a library language so to speak and its",
    "start": "891000",
    "end": "897060"
  },
  {
    "text": "implementation but it doesn't entangle them so it's entirely clear about what a language means without distracting us",
    "start": "897060",
    "end": "903000"
  },
  {
    "text": "with implementation concerns and it entirely defines what it means for an implementation to be correct or not",
    "start": "903000",
    "end": "908940"
  },
  {
    "text": "it's correct if and only if if its outcome agrees exactly with the denotation doesn't mean they have to work at all",
    "start": "908940",
    "end": "915420"
  },
  {
    "text": "similarly in fact denotations don't work they just are implementations do denotations are",
    "start": "915420",
    "end": "924079"
  },
  {
    "text": "it relates nicely to a set of abstractions that have come out of mathematics for the last few hundred",
    "start": "924800",
    "end": "930060"
  },
  {
    "text": "years which we've also been using in some Modern typed functional programming language like Haskell and Scala so",
    "start": "930060",
    "end": "936240"
  },
  {
    "text": "standard algebraic abstractions things like functor and monoid and implicative and things like that foldable traversable amount and",
    "start": "936240",
    "end": "943139"
  },
  {
    "text": "if you follow this principle wherever you follow this principle what I'm suggesting to you and if I don't",
    "start": "943139",
    "end": "949440"
  },
  {
    "text": "convince you during this talk I want you to challenge me on it so what I'm claiming is that is that when you where",
    "start": "949440",
    "end": "954720"
  },
  {
    "text": "you apply this principle you do not have abstraction links okay",
    "start": "954720",
    "end": "959940"
  },
  {
    "text": "and another way to say this I mentioned earlier today is that if you try to apply this principle and you reach a",
    "start": "959940",
    "end": "965339"
  },
  {
    "text": "point where it just doesn't work you have an abstraction leak and that's very useful information it tells me",
    "start": "965339",
    "end": "971040"
  },
  {
    "text": "where my abstraction leaks are I redesign I eliminate the extraction leak and do it by finding a way to use this",
    "start": "971040",
    "end": "977519"
  },
  {
    "text": "principle and these abstractions they're not so a standard abstraction like functor or",
    "start": "977519",
    "end": "983399"
  },
  {
    "text": "monoid it's a set of operations but those operations have properties so they're laws if you use this methodology",
    "start": "983399",
    "end": "989639"
  },
  {
    "text": "the laws will hold you cannot use this methodology and make an ins and",
    "start": "989639",
    "end": "995540"
  },
  {
    "text": "Define an instance for which the laws don't hold okay and sometimes",
    "start": "995540",
    "end": "1002660"
  },
  {
    "text": "and to give you examples today sometimes this process will also lead you to a correct implementation so in addition to",
    "start": "1002660",
    "end": "1009320"
  },
  {
    "text": "giving you a specification that you can use you can derive a correct implementation it may not be the most",
    "start": "1009320",
    "end": "1015560"
  },
  {
    "text": "efficient implementation but definitely be correct and if you have a more efficient implementation in mind then it offers a",
    "start": "1015560",
    "end": "1022220"
  },
  {
    "text": "path or it suggests that there is a path to look for how do I get to my efficient implementation from the specification by",
    "start": "1022220",
    "end": "1029720"
  },
  {
    "text": "uh sort of correctness preserving steps how do I kind of calculate even if it takes some Ingenuity and creativity",
    "start": "1029720",
    "end": "1036860"
  },
  {
    "text": "Okay so let's see how we're doing on time 140 that's great",
    "start": "1036860",
    "end": "1044120"
  },
  {
    "text": "um all right so so this is what I'm going to talk about today I want to give you one example that I intend to give rather slowly and thoroughly",
    "start": "1044120",
    "end": "1051500"
  },
  {
    "text": "and it is a kind of um something I want to invite you to participate in okay so",
    "start": "1051500",
    "end": "1056660"
  },
  {
    "text": "this this part is not so much a talk has a seminar or something like that for us",
    "start": "1056660",
    "end": "1062360"
  },
  {
    "text": "to investigate together how we might do a a library design and the library design in particular is one for imagery",
    "start": "1062360",
    "end": "1067460"
  },
  {
    "text": "for image synthesis it was something based on the example came from something I did in the around the year 2000.",
    "start": "1067460",
    "end": "1073880"
  },
  {
    "text": "so we'll go through this process and I hope you get a feel for uh what it is",
    "start": "1073880",
    "end": "1079100"
  },
  {
    "text": "like for me to do to apply the notational design",
    "start": "1079100",
    "end": "1084460"
  },
  {
    "text": "and a hopefully fun example and then I'll show you some pretty pictures which you know maybe I'll share",
    "start": "1084620",
    "end": "1090080"
  },
  {
    "text": "the pretty pictures first and then we reflect and say what you know what are the principles that we",
    "start": "1090080",
    "end": "1095780"
  },
  {
    "text": "used and then and then I have a few more smaller examples hopefully give you some",
    "start": "1095780",
    "end": "1101600"
  },
  {
    "text": "sense of this isn't just a one-off thing okay",
    "start": "1101600",
    "end": "1106760"
  },
  {
    "text": "so oh and absolutely discussion participation questions objections uh moral indignation whatever",
    "start": "1106760",
    "end": "1114740"
  },
  {
    "text": "whatever it is you have uh I invite it and I'm I'm explicitly not asking you to",
    "start": "1114740",
    "end": "1121039"
  },
  {
    "text": "believe anything I say today okay I don't want you to believe anything I",
    "start": "1121039",
    "end": "1126320"
  },
  {
    "text": "say because I say it I want you to try it on and see if it's",
    "start": "1126320",
    "end": "1131720"
  },
  {
    "text": "how it feels to you which is what I did okay so an example I want to talk about",
    "start": "1131720",
    "end": "1139400"
  },
  {
    "start": "1135000",
    "end": "1247000"
  },
  {
    "text": "is is image synthesis and manipulation okay",
    "start": "1139400",
    "end": "1144760"
  },
  {
    "text": "so that's the assignment you know we get some it's either your hobby or uh or you",
    "start": "1145100",
    "end": "1151280"
  },
  {
    "text": "just joined a group and that's the goal we want to have some kind of groovy",
    "start": "1151280",
    "end": "1157880"
  },
  {
    "text": "um a flexible fun to use uh library for doing image manipulation",
    "start": "1157880",
    "end": "1165500"
  },
  {
    "text": "okay um we want it to be efficient too but I don't think I'm going to get into that",
    "start": "1165500",
    "end": "1171260"
  },
  {
    "text": "in fact my library that I did this is extremely efficient it runs insanely fast",
    "start": "1171260",
    "end": "1177460"
  },
  {
    "text": "all right so a couple of questions is where do we even start so like where this",
    "start": "1178039",
    "end": "1183679"
  },
  {
    "text": "team say a product development team and this is this is our uh this is our edict image census manipulation Library high",
    "start": "1183679",
    "end": "1190820"
  },
  {
    "text": "level fun to use so how do we start how do we define success okay",
    "start": "1190820",
    "end": "1196940"
  },
  {
    "text": "so any thoughts on how we start on this project I'm assuming some of you are",
    "start": "1196940",
    "end": "1203360"
  },
  {
    "text": "programmers okay yeah so what are the things we're",
    "start": "1203360",
    "end": "1210080"
  },
  {
    "text": "going to be manipulating so so imagery well let's get more specific than that",
    "start": "1210080",
    "end": "1215120"
  },
  {
    "text": "okay so what kind of things and then what is success well",
    "start": "1215120",
    "end": "1221860"
  },
  {
    "text": "that's probably very tightly related to this question what kind of things are you know so what kind of functionality so when we implement this functionality",
    "start": "1221900",
    "end": "1227840"
  },
  {
    "text": "and provide it conveniently correctly maybe that's success",
    "start": "1227840",
    "end": "1233780"
  },
  {
    "text": "we might understand better these questions as we come come back to them so what is it we're trying to build I",
    "start": "1233780",
    "end": "1239660"
  },
  {
    "text": "want to suggest we can do this brainstorming what kind of operations um I don't think this phase is",
    "start": "1239660",
    "end": "1245299"
  },
  {
    "text": "terrifically Illuminating so I just kind of threw out a bunch here so this is kind of functionality I",
    "start": "1245299",
    "end": "1251720"
  },
  {
    "start": "1247000",
    "end": "1501000"
  },
  {
    "text": "would imagine would come out of either you know kind of a clear requirements statement or that we would brainstorm so",
    "start": "1251720",
    "end": "1257299"
  },
  {
    "text": "some way of getting stuff into the system manipulation out of the system so if",
    "start": "1257299",
    "end": "1263840"
  },
  {
    "text": "it's purely synthetic imagery it's going to be not nothing interesting at all coming in right from the from the outside if I'm going to do some kind of",
    "start": "1263840",
    "end": "1271700"
  },
  {
    "text": "manipulation of given imagery well I'm going to want to import something from maybe some standard file formats and I'm",
    "start": "1271700",
    "end": "1277520"
  },
  {
    "text": "going to do all my manipulation and then in the end I'm going to want to give something out",
    "start": "1277520",
    "end": "1283220"
  },
  {
    "text": "so maybe I have some kind of import export kind of thing and those are just the end points",
    "start": "1283220",
    "end": "1288320"
  },
  {
    "text": "now all the interesting stuff is in the middle",
    "start": "1288320",
    "end": "1293140"
  },
  {
    "text": "so one thing that comes up a lot in spatial transformation I mean in image manipulation is spatial transformation",
    "start": "1293900",
    "end": "1299419"
  },
  {
    "text": "so that can be things like translate scale rotate okay these are all linear and affine",
    "start": "1299419",
    "end": "1306679"
  },
  {
    "text": "Transformations are called but there are also interesting things like like doing a Twist in the middle or a bulge or",
    "start": "1306679",
    "end": "1312860"
  },
  {
    "text": "something like that and I think I said I would show you some pictures",
    "start": "1312860",
    "end": "1318020"
  },
  {
    "text": "so let's pretend that this is part of our information we get about what we're trying to do let's see",
    "start": "1318020",
    "end": "1324500"
  },
  {
    "text": "did I do I still have it in here wow that's really weird Zoom there we go",
    "start": "1324500",
    "end": "1330380"
  },
  {
    "text": "let's see where are you all right let me just try this uh connell.net",
    "start": "1330380",
    "end": "1336400"
  },
  {
    "text": "uh let's say gallery",
    "start": "1336400",
    "end": "1340179"
  },
  {
    "text": "Gallery there we go okay so here are a bunch of pictures that I made a long time ago with this language",
    "start": "1341419",
    "end": "1348340"
  },
  {
    "text": "foreign but not really these aren't the pictures that I described these are croppings and",
    "start": "1348340",
    "end": "1353480"
  },
  {
    "text": "samplings of the pictures I described okay so these are things that I know how to put on the web these are the kind of things that might be exported and each",
    "start": "1353480",
    "end": "1359480"
  },
  {
    "text": "of these are linked to a much higher rest version okay so there's a kind of playful",
    "start": "1359480",
    "end": "1364700"
  },
  {
    "text": "exploration of image synthesis all of these are uh are collections of like lots of",
    "start": "1364700",
    "end": "1371900"
  },
  {
    "text": "lots of uh examples yay internet access",
    "start": "1371900",
    "end": "1377000"
  },
  {
    "text": "there we go so these are maybe gives you some sort of a feel as you can see my own bias is not toward kind of",
    "start": "1377000",
    "end": "1384559"
  },
  {
    "text": "practical problems solving advertisements or something like that but uh but you know more playful kind of",
    "start": "1384559",
    "end": "1390860"
  },
  {
    "text": "stuff okay that sort of thing",
    "start": "1390860",
    "end": "1396460"
  },
  {
    "text": "all right so in some of these examples I went through them very fast but there's kind of bulges that happen like a",
    "start": "1397760",
    "end": "1403159"
  },
  {
    "text": "magnifying glass effect some there are spirally things happening okay what you",
    "start": "1403159",
    "end": "1408860"
  },
  {
    "text": "might think of as as I had something linear and then I wrapped it up in a spiral that went infinitely out and",
    "start": "1408860",
    "end": "1414500"
  },
  {
    "text": "infinitely in that kind of thing so there are all these interesting non-athphine and then there's like turning things inside out makes",
    "start": "1414500",
    "end": "1419900"
  },
  {
    "text": "beautiful pictures then there's cropping I've got some",
    "start": "1419900",
    "end": "1425059"
  },
  {
    "text": "image and I just want to like maybe crop a circular region out of it or some other funny shape that's another thing",
    "start": "1425059",
    "end": "1430280"
  },
  {
    "text": "that comes up a lot there's this monochrome image this may sound kind of silly but it's actually",
    "start": "1430280",
    "end": "1435440"
  },
  {
    "text": "quite useful I may just want an image as a red you know just red now that's not likely to be my final",
    "start": "1435440",
    "end": "1442039"
  },
  {
    "text": "output unless maybe I'm a modern artist or something but still not likely even in that case but combined with cropping and",
    "start": "1442039",
    "end": "1449360"
  },
  {
    "text": "overlaying and things like that it's darn useful so another operation is overlay if I",
    "start": "1449360",
    "end": "1454520"
  },
  {
    "text": "have two images all right I put one of them in front of the other one so that shows up quite a lot uh you know",
    "start": "1454520",
    "end": "1461240"
  },
  {
    "text": "reality in our image systems are doing that all the time and I'm looking out here and there's all kinds of overlays happening and then there's blending I",
    "start": "1461240",
    "end": "1468559"
  },
  {
    "text": "may have two images and I want some sort of blend between the two maybe it's some kind of linear interpolation or",
    "start": "1468559",
    "end": "1473960"
  },
  {
    "text": "something like that some Midway point between the two and then there are area operations which are like uh blurring",
    "start": "1473960",
    "end": "1480320"
  },
  {
    "text": "and sharpening so I might have an image and I want all of it or some part of it to be blurred or I might want to exaggerate",
    "start": "1480320",
    "end": "1486740"
  },
  {
    "text": "transitions sharpening it and there's all kinds of other toys various geometric things uh funny shapes and",
    "start": "1486740",
    "end": "1495440"
  },
  {
    "text": "then smooth gradients and things like that so this is the kind of thing that we'd like to be able to express",
    "start": "1495440",
    "end": "1502360"
  },
  {
    "start": "1501000",
    "end": "1634000"
  },
  {
    "text": "all right so",
    "start": "1502780",
    "end": "1506960"
  },
  {
    "text": "so we're going to Define an API that's going to be used in some language we get to choose a functional language",
    "start": "1510679",
    "end": "1517700"
  },
  {
    "text": "maybe we're told to maybe we get to choosing ourselves so I want to talk about designing functional apis",
    "start": "1517700",
    "end": "1525140"
  },
  {
    "text": "so what kind of things show up in a functional API",
    "start": "1525140",
    "end": "1530179"
  },
  {
    "text": "I don't mean what kind of functionality I mean what",
    "start": "1530179",
    "end": "1535840"
  },
  {
    "text": "um okay",
    "start": "1536240",
    "end": "1538840"
  },
  {
    "text": "okay so there's observation that transforms our monoid so um yes transforms are mono in an",
    "start": "1541299",
    "end": "1548299"
  },
  {
    "text": "interesting sort of way and I want to suggest uh we come back to that when we think about how can we elegantly",
    "start": "1548299",
    "end": "1553880"
  },
  {
    "text": "structure and absolutely yeah so",
    "start": "1553880",
    "end": "1559760"
  },
  {
    "text": "um so in a functional language uh well in an imperative API",
    "start": "1559760",
    "end": "1566179"
  },
  {
    "text": "the operations are going to be about how to make up State initialize it and side effect it",
    "start": "1566179",
    "end": "1572000"
  },
  {
    "text": "okay I've looked at a lot of imperative Imaging apis and they're like that build",
    "start": "1572000",
    "end": "1579080"
  },
  {
    "text": "up some graphic state set some brushes you know all this kind",
    "start": "1579080",
    "end": "1584720"
  },
  {
    "text": "of stuff modify some output that's being you know accumulated maybe it's on the screen or",
    "start": "1584720",
    "end": "1590000"
  },
  {
    "text": "an off-screen buffer so it's all about creating initializing modifying State",
    "start": "1590000",
    "end": "1597039"
  },
  {
    "text": "releasing state that kind of thing okay functional apis are not like that functional apis",
    "start": "1597039",
    "end": "1602720"
  },
  {
    "text": "we want to describe things that are and then building blocks for combining them",
    "start": "1602720",
    "end": "1608000"
  },
  {
    "text": "so we're going to have instead of state and operations on it we're going to have",
    "start": "1608000",
    "end": "1613159"
  },
  {
    "text": "types and values of those types just because that's that's the kind of programming that we do",
    "start": "1613159",
    "end": "1620240"
  },
  {
    "text": "so a good question to ask is what types are going to be involved",
    "start": "1620240",
    "end": "1626539"
  },
  {
    "text": "okay we don't yet have to know what those types mean we can be a little fuzzy about it because this is a process of clarifying",
    "start": "1626539",
    "end": "1632299"
  },
  {
    "text": "our ideas so",
    "start": "1632299",
    "end": "1638240"
  },
  {
    "text": "this is an example of taking this this the previous slide don't and starting to give it some concrete",
    "start": "1638299",
    "end": "1645200"
  },
  {
    "text": "shape some concrete a specific shape and again so far this is just the API it's not what anything means and certainly",
    "start": "1645200",
    "end": "1650539"
  },
  {
    "text": "not how they implement it so we might have a Type image all right so imperative apis don't have",
    "start": "1650539",
    "end": "1657080"
  },
  {
    "text": "a Type image or if they do they mean something off out of a file or something like that and they don't mean in a compositional sense",
    "start": "1657080",
    "end": "1664279"
  },
  {
    "text": "but we instead of composing side effects we're composing images it's a functional language so the idea",
    "start": "1664279",
    "end": "1671059"
  },
  {
    "text": "of rendering or displaying or updating the screen is not even part of the API we're just talking about what the images",
    "start": "1671059",
    "end": "1676460"
  },
  {
    "text": "are so each of those operations that I mentioned in the previous slide",
    "start": "1676460",
    "end": "1683299"
  },
  {
    "text": "right it's going to show up somewhere as an operation with a type",
    "start": "1683299",
    "end": "1689659"
  },
  {
    "text": "so overlay for instance is something that takes two images and gives an image in an imperative API you don't see",
    "start": "1689659",
    "end": "1695840"
  },
  {
    "text": "overlay you see a couple of pieces of code that do side effects one of them",
    "start": "1695840",
    "end": "1701240"
  },
  {
    "text": "being executed after the other that's how overlay shows up in imperative API in our API",
    "start": "1701240",
    "end": "1708460"
  },
  {
    "text": "over is overlay is an actual operation in it and it is about the creation or",
    "start": "1708460",
    "end": "1714200"
  },
  {
    "text": "the expression of the overlay of two images it doesn't mean it goes anywhere doesn't mean it modifies anything yet",
    "start": "1714200",
    "end": "1720919"
  },
  {
    "text": "for instance we might never use a result or we might use it more than once or we might transform it somewhere before before it shows up",
    "start": "1720919",
    "end": "1727279"
  },
  {
    "text": "so that's overlay and then there's transformation right if I have an image I might want a bigger",
    "start": "1727279",
    "end": "1734299"
  },
  {
    "text": "version of that same image or or a version somewhere else or a version that's been interestingly warped",
    "start": "1734299",
    "end": "1741020"
  },
  {
    "text": "and so that's what transformation does that's what Transformations are for so let me send this transform operation",
    "start": "1741020",
    "end": "1747500"
  },
  {
    "text": "does it make sense so far familiar okay cropping also we want to crop an image",
    "start": "1747500",
    "end": "1754039"
  },
  {
    "text": "we need to describe some shape and I'll call that a region so",
    "start": "1754039",
    "end": "1759080"
  },
  {
    "text": "um what I mean by image what I mean by region want to pay transform all this is going to become clear and that's and",
    "start": "1759080",
    "end": "1764899"
  },
  {
    "text": "that that's the creative process here uh and then a monochrome image I just",
    "start": "1764899",
    "end": "1770779"
  },
  {
    "text": "say what I just give it a color let me get an image of that color now you might expect me to say a color",
    "start": "1770779",
    "end": "1776360"
  },
  {
    "text": "and I don't know how big it is or something like that but uh we'll come back to that question",
    "start": "1776360",
    "end": "1782000"
  },
  {
    "text": "if we have enough arguments here",
    "start": "1782000",
    "end": "1785380"
  },
  {
    "text": "you're wondering why monochrome doesn't say give me a color add an image and I'll give you an image oh what would",
    "start": "1797120",
    "end": "1802880"
  },
  {
    "text": "that operation intuitively what would it mean informally",
    "start": "1802880",
    "end": "1808179"
  },
  {
    "text": "[Music] um oh I see I have an image and I want you to make that image red or something like",
    "start": "1809410",
    "end": "1815899"
  },
  {
    "text": "that oh yeah yeah yeah that's interesting so so here's a question um which we're going to kind of just put",
    "start": "1815899",
    "end": "1821840"
  },
  {
    "text": "up in the air uh can we describe that operation at a quick build that have simpler parts",
    "start": "1821840",
    "end": "1828440"
  },
  {
    "text": "yeah so one of my goals I'll Make That explicit is I wanted to find the simplest possible building blocks",
    "start": "1828440",
    "end": "1835460"
  },
  {
    "text": "if I have something that is somewhat complex operation I'd really like to make it not be primitive but definable",
    "start": "1835460",
    "end": "1840980"
  },
  {
    "text": "out of simpler pieces why so that I have a simpler set of Primitives that I have to figure out what they mean and how to",
    "start": "1840980",
    "end": "1847100"
  },
  {
    "text": "implement them like Rob Robbie's talk this morning is keynote about this macro system it's",
    "start": "1847100",
    "end": "1852559"
  },
  {
    "text": "very nice to have a small set of language Primitives this is part of the ethos of scheme very small set of of",
    "start": "1852559",
    "end": "1857840"
  },
  {
    "text": "language Primitives and then the ability to Define build and Define richer things in terms of simpler things and that",
    "start": "1857840",
    "end": "1864559"
  },
  {
    "text": "means that my core is quite simple and implementation of those more complex things can be quite simple by",
    "start": "1864559",
    "end": "1870559"
  },
  {
    "text": "translation or if you want that's just a specification you get more efficient implementation that sense looks like Auburn is a",
    "start": "1870559",
    "end": "1878299"
  },
  {
    "text": "particular case of one more General",
    "start": "1878299",
    "end": "1881980"
  },
  {
    "text": "okay so already some critique of this API",
    "start": "1885520",
    "end": "1891380"
  },
  {
    "text": "overly that sounds a bit ad hoc aren't there other ways to combine images besides this one and maybe there's maybe",
    "start": "1891380",
    "end": "1897200"
  },
  {
    "text": "this one could be built out of something simpler and more General is that a fair yes and and I completely agree",
    "start": "1897200",
    "end": "1903440"
  },
  {
    "text": "so so what I'm uh what I'm doing here and absolutely welcome what you're doing",
    "start": "1903440",
    "end": "1908480"
  },
  {
    "text": "you're just you're getting a little ahead which is fine this is participatory this this is your talk this is this is our session together",
    "start": "1908480",
    "end": "1913940"
  },
  {
    "text": "yeah so so we could throw all of all these ideas up and then critique them or",
    "start": "1913940",
    "end": "1920600"
  },
  {
    "text": "we could critique them when we throw them up it doesn't matter it may be it may there be some",
    "start": "1920600",
    "end": "1925640"
  },
  {
    "text": "personality issues like I'll get really offended if you challenge you know my ID or something but I actually won't so we",
    "start": "1925640",
    "end": "1931820"
  },
  {
    "text": "don't need to do that yeah so already overly sounds suspiciously specialized",
    "start": "1931820",
    "end": "1938779"
  },
  {
    "text": "okay and in these last two we're just by getting information in and out of the system so but it's important I'm not assuming",
    "start": "1938779",
    "end": "1946039"
  },
  {
    "text": "that bitmap and image is the same thing so what I'm assuming is that there's this thing called bitmap which is like a",
    "start": "1946039",
    "end": "1951260"
  },
  {
    "text": "JPEG or who knows it's just it it's this kind of array of pixels which you know have some kind of bit depth and that",
    "start": "1951260",
    "end": "1957200"
  },
  {
    "text": "kind of thing assuming there's going to be some stuff outside that we're going to want to bring some information in do cool stuff and also after we've done",
    "start": "1957200",
    "end": "1962720"
  },
  {
    "text": "cool stuff I'm going to put out into okay but I don't want to assume that that's what we mean by image",
    "start": "1962720",
    "end": "1969200"
  },
  {
    "text": "and we'll discuss their very good reasons to not make that choice so now let's talk about how to implement",
    "start": "1969200",
    "end": "1977919"
  },
  {
    "start": "1972000",
    "end": "2290000"
  },
  {
    "text": "let's not talk about Hannah plant okay so uh I enjoy implementation I'm",
    "start": "1977919",
    "end": "1985940"
  },
  {
    "text": "guessing you enjoy implementation when you wouldn't be here okay but this this is a it's it's not a",
    "start": "1985940",
    "end": "1991520"
  },
  {
    "text": "good first question because in part because it's not a well-defined question",
    "start": "1991520",
    "end": "1997519"
  },
  {
    "text": "all right how is it answer what is the question how do we Implement what how to",
    "start": "1997519",
    "end": "2003820"
  },
  {
    "text": "implement this no this is I we don't even know what this means what's an image these are just kind of intuitive",
    "start": "2003820",
    "end": "2009399"
  },
  {
    "text": "and formal ideas so let's be more clear about what these mean and then ask the question of how to implement",
    "start": "2009399",
    "end": "2014919"
  },
  {
    "text": "does that make sense or let me put it differently is there is that was there anybody who",
    "start": "2014919",
    "end": "2020440"
  },
  {
    "text": "would like to go more into you know more about the separation between",
    "start": "2020440",
    "end": "2025539"
  },
  {
    "text": "uh why we would want to make something more clear other than how to implement it at this point",
    "start": "2025539",
    "end": "2031799"
  },
  {
    "text": "um I don't hear it talked about a lot anymore this distinction between specification implementation",
    "start": "2032260",
    "end": "2038518"
  },
  {
    "text": "identify symmetries",
    "start": "2040240",
    "end": "2043440"
  },
  {
    "text": "are you asking am I sort of content with this API is that what you're asking",
    "start": "2047820",
    "end": "2053980"
  },
  {
    "text": "I'm just making a guess I don't think I'm right I'm just trying to",
    "start": "2053980",
    "end": "2058200"
  },
  {
    "text": "how they would be used okay by symmetry is do you mean",
    "start": "2061419",
    "end": "2069339"
  },
  {
    "text": "um maybe there's some structure that I realized I could refactor",
    "start": "2069339",
    "end": "2074800"
  },
  {
    "text": "or or do you mean something like visual symmetries I'm guessing you don't but maybe you do",
    "start": "2074800",
    "end": "2080820"
  },
  {
    "text": "yeah yeah so understanding maybe the the the set of images that are expressible",
    "start": "2082300",
    "end": "2087520"
  },
  {
    "text": "in this form I think I'm not converging but I'm",
    "start": "2087520",
    "end": "2093339"
  },
  {
    "text": "roughly infinitely patient about about trying to understand whether",
    "start": "2093339",
    "end": "2098500"
  },
  {
    "text": "you are wanting to say okay okay come back to it and say oh now",
    "start": "2098500",
    "end": "2103960"
  },
  {
    "text": "I know how to get this through your thick skull cuddle all right so how to implement no",
    "start": "2103960",
    "end": "2110760"
  },
  {
    "text": "different question okay what to implement okay",
    "start": "2110760",
    "end": "2116260"
  },
  {
    "text": "and we did not just say what to implement in any precise way so let's get let's let's get more precise",
    "start": "2116260",
    "end": "2121780"
  },
  {
    "text": "Okay so the question is what is operations mean",
    "start": "2121780",
    "end": "2127180"
  },
  {
    "text": "okay what do you what do I mean by mean right that's the question and I hope that gets much clearer",
    "start": "2127180",
    "end": "2134079"
  },
  {
    "text": "there's a more fundamental question which is what do the types mean once I know what the types mean then I",
    "start": "2134079",
    "end": "2140380"
  },
  {
    "text": "can at least understand the question of what do the operations mean because the operations say over takes two images and",
    "start": "2140380",
    "end": "2146200"
  },
  {
    "text": "gives an image we can't possibly talk about what over means without understanding what an image is right because it because it's a function on",
    "start": "2146200",
    "end": "2152200"
  },
  {
    "text": "images and gives an image so this is the central question doing the API design we're going to put",
    "start": "2152200",
    "end": "2158619"
  },
  {
    "text": "I know some types okay types of values because we're doing functional programming and type functional programming in particular",
    "start": "2158619",
    "end": "2164980"
  },
  {
    "text": "and then we want to say what the operations mean",
    "start": "2164980",
    "end": "2168900"
  },
  {
    "text": "okay so let me see if I got you and I want to encourage people to sit closer",
    "start": "2177220",
    "end": "2184000"
  },
  {
    "text": "for two reasons one is to be more included in the others for me to hear you more easily if you don't want to do that I'll just try harder to hear",
    "start": "2184000",
    "end": "2190300"
  },
  {
    "text": "so I think what you're asking is when you say mean do you mean how to implement them and if you don't mean that what do you mean okay thanks okay",
    "start": "2190300",
    "end": "2198900"
  },
  {
    "text": "yeah so I absolutely do not I do not intend to say",
    "start": "2198940",
    "end": "2204099"
  },
  {
    "text": "um how do we represent the types or how do we implement the operations so that would be a confusion what I really mean",
    "start": "2204099",
    "end": "2209320"
  },
  {
    "text": "is to clearly specify I want to give some formal specification somehow",
    "start": "2209320",
    "end": "2214599"
  },
  {
    "text": "that tells me that tells me as an implementer exactly what it means um",
    "start": "2214599",
    "end": "2220960"
  },
  {
    "text": "it's not that it tells me whether my implementation is correct or not it tells me what it would mean from implementation to be correct or not that",
    "start": "2220960",
    "end": "2227260"
  },
  {
    "text": "defines correctness then I know what to aim for okay it also tells me the breadth so I",
    "start": "2227260",
    "end": "2233560"
  },
  {
    "text": "want to be constrained enough I know what correctness is I don't want to be over constrained because I don't want to be told how to implement something",
    "start": "2233560",
    "end": "2238680"
  },
  {
    "text": "because I may have a lot of ideas and in here I'll maybe touch on some of the",
    "start": "2238680",
    "end": "2243700"
  },
  {
    "text": "ways I've implemented this vastly different from each other okay so I don't want to be constrained in implementation or representation I do",
    "start": "2243700",
    "end": "2250599"
  },
  {
    "text": "want to get very clear about something about the specification and there's a particular style of specification and",
    "start": "2250599",
    "end": "2256660"
  },
  {
    "text": "that's the one that I'm talking about today which is a denotational and I'll show you super soon what that looks like",
    "start": "2256660",
    "end": "2262480"
  },
  {
    "text": "I'm so sorry it's freezing in here right right I think it's even worse for you",
    "start": "2262480",
    "end": "2268480"
  },
  {
    "text": "than for me there it's blowing here and yeah it's I don't",
    "start": "2268480",
    "end": "2273820"
  },
  {
    "text": "so I appreciate you hanging in if you have to leave if your face turns blue I won't be offended",
    "start": "2273820",
    "end": "2279339"
  },
  {
    "text": "okay so a central question for me is what types are there and what do they mean what is a mathematical model that I",
    "start": "2279339",
    "end": "2287440"
  },
  {
    "text": "can use to think about those types in a precise way all right so here it said so far the central type",
    "start": "2287440",
    "end": "2295119"
  },
  {
    "start": "2290000",
    "end": "2368000"
  },
  {
    "text": "of interest is image there were some other types transforms colors regions okay so let's start with one let's start",
    "start": "2295119",
    "end": "2301480"
  },
  {
    "text": "with images so what is an image okay",
    "start": "2301480",
    "end": "2306820"
  },
  {
    "text": "okay so before answering that question what kind what do we want out of that uh out of an answer okay and I'm suggesting",
    "start": "2306820",
    "end": "2312760"
  },
  {
    "text": "these three properties I want that my mathematical model to be adequate",
    "start": "2312760",
    "end": "2318040"
  },
  {
    "text": "if it's not adequate then I can't express the things I want to express right either I want to or my users it",
    "start": "2318040",
    "end": "2323560"
  },
  {
    "text": "has to be simple why does it have to be simple it's because I'm basically not very smart I mean I'm smarter than a",
    "start": "2323560",
    "end": "2330400"
  },
  {
    "text": "mouse right but I'm hopefully not as smart as my children will be you know and so on in all of us collectively so I",
    "start": "2330400",
    "end": "2337780"
  },
  {
    "text": "have very limited ability so I need the the uh the specification to be simple",
    "start": "2337780",
    "end": "2343060"
  },
  {
    "text": "enough that I can reason practically and reliably",
    "start": "2343060",
    "end": "2348540"
  },
  {
    "text": "and then precision and why so that I really have Simplicity and adequacy not",
    "start": "2348579",
    "end": "2354940"
  },
  {
    "text": "just think I do so Precision is all about helping me not fool myself because I'm psychologically",
    "start": "2354940",
    "end": "2362460"
  },
  {
    "text": "inclined to fool myself so Precision is a coping mechanism okay",
    "start": "2362460",
    "end": "2369480"
  },
  {
    "start": "2368000",
    "end": "2700000"
  },
  {
    "text": "all right so now let's go back to this question what an image is so",
    "start": "2370300",
    "end": "2377099"
  },
  {
    "text": "so this is a collaboration what is an image okay and um",
    "start": "2378280",
    "end": "2385119"
  },
  {
    "text": "I want lots of bad suggestions I want lots of stupid ideas okay what I really",
    "start": "2385119",
    "end": "2390460"
  },
  {
    "text": "mean is you know please don't be shy about making suggestions because every suggestions Illuminating either for",
    "start": "2390460",
    "end": "2396460"
  },
  {
    "text": "strength or its weaknesses or both okay I apologize for flashing my answer",
    "start": "2396460",
    "end": "2401680"
  },
  {
    "text": "which I didn't mean to bias you with okay when I've done this exercise people have quite a variety of intuitions",
    "start": "2401680",
    "end": "2409540"
  },
  {
    "text": "it's what oh a matrix of pixels sure totally so by matrix pixel item you mean some kind of",
    "start": "2409540",
    "end": "2416020"
  },
  {
    "text": "rectangular regularly you know spaced a collection of pixels and a pixel is",
    "start": "2416020",
    "end": "2423960"
  },
  {
    "text": "yeah is that colors or maybe something that represents like 24-bit values there to be interpreted certainly yeah so",
    "start": "2425619",
    "end": "2431200"
  },
  {
    "text": "that's a very common answer so it could be an array or Matrix pixels other",
    "start": "2431200",
    "end": "2437338"
  },
  {
    "text": "ah okay so already we're getting criticism",
    "start": "2440980",
    "end": "2446160"
  },
  {
    "text": "from the very start programmers yeah so so maybe there's a little bit of",
    "start": "2446500",
    "end": "2452560"
  },
  {
    "text": "a discrete uh bias here that we might want to question",
    "start": "2452560",
    "end": "2457740"
  },
  {
    "text": "that's right that's fine I'm just working on it",
    "start": "2464700",
    "end": "2468960"
  },
  {
    "text": "okay yeah so a sort of functioning view yeah yeah and uh last year I talked",
    "start": "2474960",
    "end": "2481420"
  },
  {
    "text": "about this before I talked about FRP so nobody made that suggestion but uh but",
    "start": "2481420",
    "end": "2487420"
  },
  {
    "text": "that's certainly one possibility as absurd as it sounds anybody else",
    "start": "2487420",
    "end": "2493900"
  },
  {
    "text": "you'll see I'm joking please",
    "start": "2493900",
    "end": "2499060"
  },
  {
    "text": "a way of collecting and saving light sure yeah absolutely and so we might think that it's a way that might be an",
    "start": "2501160",
    "end": "2508420"
  },
  {
    "text": "algorithm a function a recipe something like that yeah so um uh not to hurl insults or something",
    "start": "2508420",
    "end": "2516220"
  },
  {
    "text": "but but an object-oriented sort of perspective might be about it's an interface that has some kind of",
    "start": "2516220",
    "end": "2521619"
  },
  {
    "text": "operations yeah okay other thoughts",
    "start": "2521619",
    "end": "2528180"
  },
  {
    "text": "yeah sure so an image might be represented by a collection of shapes so for instance in something like a PDF and",
    "start": "2533020",
    "end": "2539260"
  },
  {
    "text": "PostScript yes it's so PDF and post script are all about image synthesis and manipulation and they're all about",
    "start": "2539260",
    "end": "2545800"
  },
  {
    "text": "geometry so so it could be some shape some some other words descriptions okay and then",
    "start": "2545800",
    "end": "2554220"
  },
  {
    "text": "poorly tall yeah yeah scene graph the",
    "start": "2558400",
    "end": "2564160"
  },
  {
    "text": "um oh it's cold in here that's all that was no I worked in computer Graphics it wasn't a shiver of disgust so yeah",
    "start": "2564160",
    "end": "2570940"
  },
  {
    "text": "absolutely it could be some kind of data structury thing which contains in it some kind of descriptions of objects two",
    "start": "2570940",
    "end": "2578440"
  },
  {
    "text": "or three-dimensional some uh some description of lights and cameras so",
    "start": "2578440",
    "end": "2583900"
  },
  {
    "text": "kind of uh kind of some information out of which one can synthesize an image",
    "start": "2583900",
    "end": "2590859"
  },
  {
    "text": "and a lot of particularly 3D apis are that way",
    "start": "2590859",
    "end": "2595800"
  },
  {
    "text": "oh oh that sounds like a poet's answer to me so so Dick's uh Dick's",
    "start": "2607119",
    "end": "2614200"
  },
  {
    "text": "contribution is yeah an image is is a is a short line or a short body of text that conjures",
    "start": "2614200",
    "end": "2620740"
  },
  {
    "text": "at what in someone's mind ah conjures a picture in the reader's mind I see I might recursively ask you",
    "start": "2620740",
    "end": "2627760"
  },
  {
    "text": "what a picture is and wonder if you're going to tell me a conjures an image in the reader's mind but uh but I won't do that",
    "start": "2627760",
    "end": "2633339"
  },
  {
    "text": "thank you yeah absolutely so again it's something that's like evocative in a sort of more poetic end of the spectrum",
    "start": "2633339",
    "end": "2640420"
  },
  {
    "text": "uh than a like a a 3D scene graph API kind of a thing",
    "start": "2640420",
    "end": "2645819"
  },
  {
    "text": "okay yeah so",
    "start": "2645819",
    "end": "2650220"
  },
  {
    "text": "uh-huh cool so here's the here's an interesting",
    "start": "2663940",
    "end": "2670660"
  },
  {
    "text": "perspective is that maybe we were a little too focused on color",
    "start": "2670660",
    "end": "2676119"
  },
  {
    "text": "so an image is being sort of color over discrete and uh continuous and finite",
    "start": "2676119",
    "end": "2681880"
  },
  {
    "text": "infinite whatever space maybe there are other things as well that may we want to array over space maybe it's the over",
    "start": "2681880",
    "end": "2687640"
  },
  {
    "text": "spaceness that matters more yeah okay so",
    "start": "2687640",
    "end": "2694079"
  },
  {
    "text": "so we can take all of these suggestions if we're doing kind of classic brainstorming write them up on the board",
    "start": "2694660",
    "end": "2700180"
  },
  {
    "text": "we have our uh our our goals which I suggested here and we can evaluate them all and see where they lead",
    "start": "2700180",
    "end": "2707440"
  },
  {
    "text": "if we leave out Precision we're not going to get a very accurate estimate of where they leave lead because for",
    "start": "2707440",
    "end": "2712900"
  },
  {
    "text": "instance simplicity many ideas are simple only because they're uh they're not",
    "start": "2712900",
    "end": "2719859"
  },
  {
    "text": "precise and when made precise they become quite complex or let's not becoming complex their complexity becomes apparent",
    "start": "2719859",
    "end": "2726160"
  },
  {
    "text": "cold sorry my God all right so my personal answer which especially if",
    "start": "2726160",
    "end": "2731800"
  },
  {
    "text": "you've been listening me talk about FRP is is perhaps somewhat predictable so",
    "start": "2731800",
    "end": "2737740"
  },
  {
    "text": "uh So my answer is it's an assignment of colors to 2D locations and I'll be more clear what I mean by that",
    "start": "2737740",
    "end": "2744520"
  },
  {
    "text": "so this is sort of the same answer or in a less specific form than uh an array or",
    "start": "2744520",
    "end": "2750700"
  },
  {
    "text": "a you know Matrix of pixels so that's a you know an array is that's an assignment for every slot in my array",
    "start": "2750700",
    "end": "2757540"
  },
  {
    "text": "you know I I sign one color to it okay but at least kind of a little more open-ended what the shape of the",
    "start": "2757540",
    "end": "2763960"
  },
  {
    "text": "container is okay now",
    "start": "2763960",
    "end": "2770740"
  },
  {
    "text": "if we start with this intuition okay and and then we then want to make it",
    "start": "2770740",
    "end": "2776440"
  },
  {
    "text": "precise so that we can understand the implications of it we could do this to every idea that we've talked about and",
    "start": "2776440",
    "end": "2781839"
  },
  {
    "text": "some of them we might learn very early what some of these limitations are and that that's that's extremely fruitful part of this uh exercise",
    "start": "2781839",
    "end": "2788859"
  },
  {
    "text": "so let's make this precise and and here's the form in which I do it this is the denotational form okay so we have a",
    "start": "2788859",
    "end": "2796240"
  },
  {
    "text": "function I'm calling it mu mu is supposed to suggest meaning right so so mu is a meaning function and the",
    "start": "2796240",
    "end": "2804339"
  },
  {
    "text": "idea is that I want to say what an image means or give you a model for think for",
    "start": "2804339",
    "end": "2810280"
  },
  {
    "text": "relating to images by it's a mapping so mu is a mapping from images to something",
    "start": "2810280",
    "end": "2815859"
  },
  {
    "text": "and that's something I'm saying is a assignment of colors to locations and there's a simple precise way to say that",
    "start": "2815859",
    "end": "2822220"
  },
  {
    "text": "which is the function from location to colors okay",
    "start": "2822220",
    "end": "2827400"
  },
  {
    "text": "now over here on the on the right so on the left of this main Arrow is the type we're interested in on the right is",
    "start": "2828760",
    "end": "2835119"
  },
  {
    "text": "another type now for the most part you can think of that type as being what we mean by functions",
    "start": "2835119",
    "end": "2841180"
  },
  {
    "text": "in Haskell okay well I really mean is mathematical functions",
    "start": "2841180",
    "end": "2847119"
  },
  {
    "text": "which is what we mean by functions in Haskell but it's not what we mean by functions in most other languages like",
    "start": "2847119",
    "end": "2852700"
  },
  {
    "text": "an ml function a list function a Scala function is it a function because it has side effects I mean really a",
    "start": "2852700",
    "end": "2858220"
  },
  {
    "text": "mathematical function so you can either think of as a math function or you can think of as a kind of a function of",
    "start": "2858220",
    "end": "2863380"
  },
  {
    "text": "purely functional language but it's kind of important to make that distinction because it doesn't have to be implementable",
    "start": "2863380",
    "end": "2868540"
  },
  {
    "text": "okay because we're never going to implement mu we're just going to use it to understand our library design and",
    "start": "2868540",
    "end": "2873760"
  },
  {
    "text": "evaluate it as it emerges okay so what image was just one type",
    "start": "2873760",
    "end": "2879940"
  },
  {
    "text": "okay I'm not saying that you should somehow know why this is a good choice we're going to look at it I think",
    "start": "2879940",
    "end": "2887079"
  },
  {
    "text": "and then we can examine alternatives so what about regions well",
    "start": "2887079",
    "end": "2892599"
  },
  {
    "text": "anybody have an idea what a region might mean",
    "start": "2892599",
    "end": "2897180"
  },
  {
    "text": "locations to what uh to opacity interesting ah okay yeah",
    "start": "2898780",
    "end": "2904420"
  },
  {
    "text": "so we might also talk about opacity over space all right any other thoughts",
    "start": "2904420",
    "end": "2911200"
  },
  {
    "text": "a list of locations yeah that's actually quite common they used in awful image I",
    "start": "2911200",
    "end": "2916720"
  },
  {
    "text": "don't mean this awful suggestion what I mean is it so happens that a lot of the image uh let me strike the word novel",
    "start": "2916720",
    "end": "2923440"
  },
  {
    "text": "that's that choice shows up in a lot of them often in a kind of compressed form it may be like a set of rectangles or",
    "start": "2923440",
    "end": "2928660"
  },
  {
    "text": "something that's quite common a function from location to Boolean",
    "start": "2928660",
    "end": "2934000"
  },
  {
    "text": "quite similar suggestion as well yeah okay same suggestion yeah okay and then",
    "start": "2934000",
    "end": "2942119"
  },
  {
    "text": "all right sure cannibal Union of polygon so I might I might have some Primitives uh for for uh describing my regions like",
    "start": "2942700",
    "end": "2951099"
  },
  {
    "text": "polygons and then I might mean uh a bunch of them a union of them",
    "start": "2951099",
    "end": "2956140"
  },
  {
    "text": "perhaps countable interesting choice accountable uh there was one more suggestion okay",
    "start": "2956140",
    "end": "2962859"
  },
  {
    "text": "all right so this is my choice this is one of them which is I mean it's a function from",
    "start": "2962859",
    "end": "2969640"
  },
  {
    "text": "locations to booleans and if you know this but function to Boolean is isomorphic to",
    "start": "2969640",
    "end": "2976000"
  },
  {
    "text": "another mathematical notion that we use a lot if you notice which is set",
    "start": "2976000",
    "end": "2982839"
  },
  {
    "text": "so a function from location to Boolean is the same as set of locations something called characteristic function",
    "start": "2982839",
    "end": "2988780"
  },
  {
    "text": "particularly math a while ago like I did so another model is to say a region the meaning of a region is a set of",
    "start": "2988780",
    "end": "2994780"
  },
  {
    "text": "locations because that's very similar to a suggestion a list of locations all right so we could also say it's a set of",
    "start": "2994780",
    "end": "3001380"
  },
  {
    "text": "polygons but a set of polygons is a more is more complex it's maybe more efficient but oh wait a",
    "start": "3001380",
    "end": "3008700"
  },
  {
    "text": "minute wait we're not talking about efficiency that's a non-issue yet we may want to represent our set by a",
    "start": "3008700",
    "end": "3014460"
  },
  {
    "text": "collection of polygons for instance good",
    "start": "3014460",
    "end": "3021319"
  },
  {
    "text": "image",
    "start": "3031260",
    "end": "3034260"
  },
  {
    "text": "okay let me try to get what you're saying so one was an ID and the other was a",
    "start": "3037319",
    "end": "3043140"
  },
  {
    "text": "kind of motivation for it I think okay so I might say that a region is a function from uh it's something that",
    "start": "3043140",
    "end": "3049859"
  },
  {
    "text": "takes an image and a point and a point and it",
    "start": "3049859",
    "end": "3055260"
  },
  {
    "text": "an image and a location and says yeah so it either says there's nothing here or there is something here and this",
    "start": "3055260",
    "end": "3061680"
  },
  {
    "text": "is what color there is okay so that would be some kind of relationship between like a region and image right I",
    "start": "3061680",
    "end": "3067260"
  },
  {
    "text": "would hope that something like that because it involves both could be describable in terms of simpler pieces",
    "start": "3067260",
    "end": "3072420"
  },
  {
    "text": "so let's see if that's the case",
    "start": "3072420",
    "end": "3076338"
  },
  {
    "text": "oh I see okay so yeah yeah yes let me try and tie this idea suppose we had a",
    "start": "3081119",
    "end": "3086520"
  },
  {
    "text": "notion of of a region which is just a set of locations in other words a function from locations to Let Me Maybe",
    "start": "3086520",
    "end": "3092880"
  },
  {
    "text": "that's not obvious to everybody so the the equivalency of those two Notions is um I can if I have a function from",
    "start": "3092880",
    "end": "3098640"
  },
  {
    "text": "locations to bools I can think of it as a set a set is just is this a question of are you in or are you out and that's",
    "start": "3098640",
    "end": "3103980"
  },
  {
    "text": "the question that locationable answers so if I have a set I can form a function just by saying are you in the set or not",
    "start": "3103980",
    "end": "3110220"
  },
  {
    "text": "if I have uh see if I have the function I can form the set if I have the set I can form the",
    "start": "3110220",
    "end": "3115559"
  },
  {
    "text": "function by asking the question given any location are you in it if so yes if not no so um so given this",
    "start": "3115559",
    "end": "3124800"
  },
  {
    "text": "what I'm saying is a simpler notion of regions yeah we can I think take that region",
    "start": "3124800",
    "end": "3130920"
  },
  {
    "text": "interesting okay so we can ask questions like um what is the set of all points in",
    "start": "3130920",
    "end": "3138720"
  },
  {
    "text": "space that have some color or what's it said about points and base they have a particular color I'm not sure we get to",
    "start": "3138720",
    "end": "3144119"
  },
  {
    "text": "the expression of what you were suggesting that's interesting we might come back to it",
    "start": "3144119",
    "end": "3149400"
  },
  {
    "text": "okay so here are a couple of models and this is the style that I mean of giving a meaning to image once we have once we",
    "start": "3149400",
    "end": "3157740"
  },
  {
    "text": "choose some now we can go back to the operations and say what do they mean on the meanings what are they how did",
    "start": "3157740",
    "end": "3164339"
  },
  {
    "text": "the operations how those operations work as if they were on meanings of images rather than images themselves so an",
    "start": "3164339",
    "end": "3170520"
  },
  {
    "text": "image is going to be some data type it's going to have some representation some runtime existence",
    "start": "3170520",
    "end": "3175559"
  },
  {
    "text": "the meaning is going to be a mathematical model we'll have no runtime representation no runtime existence but",
    "start": "3175559",
    "end": "3182160"
  },
  {
    "text": "it'll tell us what it means for these Opera what these operations mean it'll give us a specification as I hope we'll",
    "start": "3182160",
    "end": "3187920"
  },
  {
    "text": "see so given yes please",
    "start": "3187920",
    "end": "3193700"
  },
  {
    "start": "3188000",
    "end": "3261000"
  },
  {
    "text": "no thank you why didn't I just not use a set",
    "start": "3197520",
    "end": "3202039"
  },
  {
    "text": "I haven't thought about that question in a while and um absolutely I found myself explaining",
    "start": "3205680",
    "end": "3212220"
  },
  {
    "text": "this this idea of region as a characteristic function in terms of the set so I think that tells you and me now",
    "start": "3212220",
    "end": "3219119"
  },
  {
    "text": "that I think about it the deceptic set definitions it feels a little more natural a Region's a set of points",
    "start": "3219119",
    "end": "3224700"
  },
  {
    "text": "that's it um so um so let me change my mind and say a",
    "start": "3224700",
    "end": "3229740"
  },
  {
    "text": "region is going to be a set of points then I'll change my mind again back to this one okay that does seem more",
    "start": "3229740",
    "end": "3235559"
  },
  {
    "text": "natural let's do that instead yes thank you so yes I don't mean",
    "start": "3235559",
    "end": "3242099"
  },
  {
    "text": "something of type set in Haskell for instance which is finite I don't even mean",
    "start": "3242099",
    "end": "3248520"
  },
  {
    "text": "um countable sets because I want to say like a disc is a region and it says uncountable well I'm",
    "start": "3248520",
    "end": "3255059"
  },
  {
    "text": "getting ahead of myself it's got a lot in it okay so yeah I mean set in the mathematical sense",
    "start": "3255059",
    "end": "3261300"
  },
  {
    "start": "3261000",
    "end": "3599000"
  },
  {
    "text": "okay so now given this model yes absolutely",
    "start": "3261300",
    "end": "3266960"
  },
  {
    "text": "okay so um so there's an awful lot of sets",
    "start": "3283920",
    "end": "3290240"
  },
  {
    "text": "awful lot of sets maybe more sets than I really am interested in using",
    "start": "3291720",
    "end": "3297059"
  },
  {
    "text": "there's definitely more sets than I can possibly Express in any language right that's one of the things that",
    "start": "3297059",
    "end": "3303359"
  },
  {
    "text": "Cantor it's a core layer of Cancer's work in the 1800s yeah so set seems",
    "start": "3303359",
    "end": "3309119"
  },
  {
    "text": "maybe awfully ambitious or awfully sloppy depending on you I think about it I really may want a much smaller yeah so",
    "start": "3309119",
    "end": "3315180"
  },
  {
    "text": "am I tracking yeah yeah absolutely so one of the things one of the trade-offs I make is I might make the the",
    "start": "3315180",
    "end": "3321359"
  },
  {
    "text": "denotations less precise in other words have a room for a lot more than I can express in order to make them simpler",
    "start": "3321359",
    "end": "3327359"
  },
  {
    "text": "and we might we might come back to that if there's interest and talk about that trade-off so just a moment",
    "start": "3327359",
    "end": "3333920"
  },
  {
    "text": "huh interesting so so will we need will we",
    "start": "3346980",
    "end": "3352079"
  },
  {
    "text": "need some properties of sets which is going to restrict the kind of sets we can talk about for instance measurability and measurability might be",
    "start": "3352079",
    "end": "3358319"
  },
  {
    "text": "actually quite relevant to our ability to render something because we're going to render in pixels and pixels cover",
    "start": "3358319",
    "end": "3364680"
  },
  {
    "text": "entire areas yeah and and if we want something like the integral of a",
    "start": "3364680",
    "end": "3370200"
  },
  {
    "text": "function over the area or something like that then measurability is going to come into play some form of measurability",
    "start": "3370200",
    "end": "3375599"
  },
  {
    "text": "yeah so I don't know we'll see great question",
    "start": "3375599",
    "end": "3380720"
  },
  {
    "text": "[Music]",
    "start": "3388260",
    "end": "3391369"
  },
  {
    "text": "yeah yeah okay so",
    "start": "3396420",
    "end": "3399980"
  },
  {
    "text": "um",
    "start": "3404880",
    "end": "3406880"
  },
  {
    "text": "yeah yeah yeah okay so so I'm going to try and paraphrase and then you tell me if I",
    "start": "3413040",
    "end": "3418859"
  },
  {
    "text": "got it or not all right so again there's an awful lot of sets and some of them have really",
    "start": "3418859",
    "end": "3424319"
  },
  {
    "text": "weird shapes even Indescribable shapes and uh we're not going to want most of",
    "start": "3424319",
    "end": "3429599"
  },
  {
    "text": "them we're not going to want and most important most of them we can't want right assuming that we're finite we",
    "start": "3429599",
    "end": "3435839"
  },
  {
    "text": "can't even want them we can't imagine them what is that saying",
    "start": "3435839",
    "end": "3440960"
  },
  {
    "text": "reality is not only Stranger than we imagine it's stranger than we can imagine so that's kind of one of these things that's a Terence McKenna quote I",
    "start": "3440960",
    "end": "3448020"
  },
  {
    "text": "like um so if I'm saying arbitrary sets that may put us into a position of having to",
    "start": "3448020",
    "end": "3454980"
  },
  {
    "text": "support some really weird stuff uh and not take advantage of some",
    "start": "3454980",
    "end": "3460140"
  },
  {
    "text": "properties that are quite useful in implementation like rectangularity finance things like that yeah yeah great",
    "start": "3460140",
    "end": "3466500"
  },
  {
    "text": "Okay so when we implement we will have a representation of regions and it won't",
    "start": "3466500",
    "end": "3473640"
  },
  {
    "text": "be what we're talking about now it'll be something else or it might be who knows it might be",
    "start": "3473640",
    "end": "3479099"
  },
  {
    "text": "some kind of set of rectangles or something like that then we'll have to figure out if every one of the operations on regions",
    "start": "3479099",
    "end": "3485579"
  },
  {
    "text": "preserves that property okay and we haven't talked about what operation another reason we're going to have yet so we're not even ready for",
    "start": "3485579",
    "end": "3490980"
  },
  {
    "text": "that conversation okay so right now in specification what I'm shooting for is Simplicity and precision",
    "start": "3490980",
    "end": "3498020"
  },
  {
    "text": "and and adequacy and what I haven't tried to shoot for is minimality like restrictiveness I didn't",
    "start": "3498020",
    "end": "3504540"
  },
  {
    "text": "include that one and later in the implementation game that become may become super important and it'll inform",
    "start": "3504540",
    "end": "3510839"
  },
  {
    "text": "it'll inform our choice of vocabulary which operations we're going to allow we can imagine operations that we wouldn't",
    "start": "3510839",
    "end": "3516900"
  },
  {
    "text": "know how to implement or we can imagine Implement operation that we wouldn't know how to implement efficiently enough",
    "start": "3516900",
    "end": "3522059"
  },
  {
    "text": "that would be fun to use the system I didn't mention this but this system when I implement it a few times is",
    "start": "3522059",
    "end": "3527579"
  },
  {
    "text": "interactive like I have this declared a way of specifying gui's and Sliders and",
    "start": "3527579",
    "end": "3534660"
  },
  {
    "text": "interaction and so on and these images have to run in real time for it to be fun so that was like very important to me",
    "start": "3534660",
    "end": "3540599"
  },
  {
    "text": "um and and so because of that some operations I didn't implement",
    "start": "3540599",
    "end": "3547200"
  },
  {
    "text": "and that and that and that's where this kind of restrictiveness comes in but the denotation of region was still set of",
    "start": "3547200",
    "end": "3553680"
  },
  {
    "text": "points okay it's just that there's junk in that denotation meaning there's a lot of",
    "start": "3553680",
    "end": "3558839"
  },
  {
    "text": "stuff in there that nothing I express will uh will will be described in",
    "start": "3558839",
    "end": "3565279"
  },
  {
    "text": "so when we on so we said what an image means one candidate and we may discover now in this next step some flaws and we",
    "start": "3565619",
    "end": "3571980"
  },
  {
    "text": "may want to backtrack okay and also if this exercise hopefully will give you a sense of what it would be like to",
    "start": "3571980",
    "end": "3577020"
  },
  {
    "text": "explore some of these other things like uh set of shapes and cameras and lights and so on or some arbitrary procedure for",
    "start": "3577020",
    "end": "3584640"
  },
  {
    "text": "you know displaying things on a screen this is what the what the process looks",
    "start": "3584640",
    "end": "3590040"
  },
  {
    "text": "like so now I'm giving a denotation so first it was of the types image and region I'm",
    "start": "3590040",
    "end": "3595260"
  },
  {
    "text": "giving a denotation of the operations okay so the meaning of the over function",
    "start": "3595260",
    "end": "3600420"
  },
  {
    "text": "over is going to take two images which here I'm calling top and Bot one top the one at bottom front back I",
    "start": "3600420",
    "end": "3606780"
  },
  {
    "text": "guess there's another way to look at it I'm going to say that it's so it's going to be a function so I'm just I'm right",
    "start": "3606780",
    "end": "3611880"
  },
  {
    "text": "now I'm just going to start writing things down that type check because I'm really not using imagination here I'm kind of running on rote so it's going to",
    "start": "3611880",
    "end": "3618180"
  },
  {
    "text": "be a function so I'm just going to write Lambda p okay I'm kind of generating code and type checking at the same time and using",
    "start": "3618180",
    "end": "3623460"
  },
  {
    "text": "the type my mental type Checker to help me generate code okay so it's going to be a function of P",
    "start": "3623460",
    "end": "3629339"
  },
  {
    "text": "and then the idea of overlay is that it's it's a function that I give it I",
    "start": "3629339",
    "end": "3634380"
  },
  {
    "text": "tell it what location I'm interested in remember this isn't the implementation okay it's just a description for for every location P I'm interested in we",
    "start": "3634380",
    "end": "3641160"
  },
  {
    "text": "want to sample the top image at p and the bottom image at p and then we want to combine them the two colors",
    "start": "3641160",
    "end": "3647940"
  },
  {
    "text": "and I'm going to presume an operation called over C which is an overlay on colors so I'm defining Overland images",
    "start": "3647940",
    "end": "3653579"
  },
  {
    "text": "in terms of a simpler operation Overland colors so this is the form here and in this",
    "start": "3653579",
    "end": "3659040"
  },
  {
    "text": "form it's it's important to me that you understand this form because this is the thing that shows up over and over again",
    "start": "3659040",
    "end": "3665040"
  },
  {
    "text": "bringing the meaning of the use of an operation so over of top bot",
    "start": "3665040",
    "end": "3670920"
  },
  {
    "text": "and top and Bot remember our images also so I want to find the meaning of the overlay in terms of the meanings",
    "start": "3670920",
    "end": "3677339"
  },
  {
    "text": "of the two arguments these are argument images that's the compositional style",
    "start": "3677339",
    "end": "3682799"
  },
  {
    "text": "okay so if I know what the meaning of top is it's going to be a function from location so let's apply that function to",
    "start": "3682799",
    "end": "3688920"
  },
  {
    "text": "P similarly for bot I'm going to hit two colors and then I'm presume that I have some operation over C which I've",
    "start": "3688920",
    "end": "3695819"
  },
  {
    "text": "suggested down here now for cropping",
    "start": "3695819",
    "end": "3701280"
  },
  {
    "text": "yes absolutely questions please okay so p is this P Lambda P okay so the",
    "start": "3701280",
    "end": "3709260"
  },
  {
    "text": "meaning of an of an image so over if topbot is an image meaning Maps images to functions",
    "start": "3709260",
    "end": "3716579"
  },
  {
    "text": "so I'm starting to write down that function Lambda p got it okay so if I had if the semantic",
    "start": "3716579",
    "end": "3723059"
  },
  {
    "text": "model were an array of pixels then I would have done something more like a comprehension notation or something I",
    "start": "3723059",
    "end": "3728819"
  },
  {
    "text": "would have said it is it's the array that at location i j has this kind of thing and then you'd see like Lambda i j",
    "start": "3728819",
    "end": "3735240"
  },
  {
    "text": "or something or something you know array IJ or something good",
    "start": "3735240",
    "end": "3741680"
  },
  {
    "text": "is it a function because we will always be a function or because that should be an image and an image happens to be a",
    "start": "3744540",
    "end": "3751380"
  },
  {
    "text": "function of allocation thank you thank you so the question is I think",
    "start": "3751380",
    "end": "3757079"
  },
  {
    "text": "um mu of overlay equals Lambda p is is the Lambda P come out of the like denotation",
    "start": "3757079",
    "end": "3762660"
  },
  {
    "text": "is that why I'm talking about a function to all denotations of functions or is it because we've said that mean that the meaning of an image is a function it's",
    "start": "3762660",
    "end": "3769200"
  },
  {
    "text": "the latter okay it's because we've said that we've chosen the meaning of a image to be a function if we chose it to be",
    "start": "3769200",
    "end": "3774900"
  },
  {
    "text": "something else we wouldn't say Lambda P here P would be yeah so p is our location",
    "start": "3774900",
    "end": "3780599"
  },
  {
    "text": "here and the only reason Lambda P shows up is that we say is that we say we're going to try out this idea that the",
    "start": "3780599",
    "end": "3785880"
  },
  {
    "text": "meaning of an image is a function okay P for location sorry P for Point that's why I chose P it could have said",
    "start": "3785880",
    "end": "3792299"
  },
  {
    "text": "Lambda L sorry but that little confusion made a little less obvious okay",
    "start": "3792299",
    "end": "3798200"
  },
  {
    "text": "something is still not clear please ask this is pretty this is pretty foundational okay so now let's look at cropping yes",
    "start": "3799680",
    "end": "3807420"
  },
  {
    "text": "yes good yes",
    "start": "3807420",
    "end": "3813380"
  },
  {
    "text": "ah yes we do okay so the question is do I have to say what oversea means yes or",
    "start": "3814500",
    "end": "3820079"
  },
  {
    "text": "I haven't told you the whole story I've said so so right now I'm not telling you what overseas but I have to in order for",
    "start": "3820079",
    "end": "3825780"
  },
  {
    "text": "this definition to be a definition so overseat does have a there's no we have to get into what's uh what is a",
    "start": "3825780",
    "end": "3832500"
  },
  {
    "text": "color and then how do we overlay two colors yeah and there's a formula it's a little bit of a weighted average kind of",
    "start": "3832500",
    "end": "3838140"
  },
  {
    "text": "thing and then we get into colors do they have transparencies or not and so on so I think I'm not going to talk about that but we absolutely have to",
    "start": "3838140",
    "end": "3843599"
  },
  {
    "text": "talk about in order for this to be a complete story yes",
    "start": "3843599",
    "end": "3849299"
  },
  {
    "text": "okay so meaning of an image is location of color meaning if a region is a set of",
    "start": "3850380",
    "end": "3856440"
  },
  {
    "text": "locations or maybe location Abu they're in a convertible but we'll see what's more convenient I was going to say efficient but it's not at all what I'm",
    "start": "3856440",
    "end": "3862319"
  },
  {
    "text": "in them it can be okay so now let's look at cropping an image by a region",
    "start": "3862319",
    "end": "3868140"
  },
  {
    "text": "and what I mean is intuitively I've got this image and I have some region I'm going to show it",
    "start": "3868140",
    "end": "3874380"
  },
  {
    "text": "like this as if it were simple but it doesn't have to be simple at all it's just a set of points and now the result",
    "start": "3874380",
    "end": "3879599"
  },
  {
    "text": "of cropping a region by image is an image so the meaning has to be a function from",
    "start": "3879599",
    "end": "3884760"
  },
  {
    "text": "locations from points whatever points are I don't mean any distinction between those two words",
    "start": "3884760",
    "end": "3890880"
  },
  {
    "text": "so what do we do well given a point I can ask two questions what color is the image at that point and it and I can say",
    "start": "3890880",
    "end": "3897359"
  },
  {
    "text": "is that point in the region or not those are the two things I can do with the point with the ingredients I have so",
    "start": "3897359",
    "end": "3903240"
  },
  {
    "text": "I'm going to ask both of those questions so here I'm asking is the point in the region",
    "start": "3903240",
    "end": "3908460"
  },
  {
    "text": "so I could have said is p an element of mu of region okay that I think now in",
    "start": "3908460",
    "end": "3914280"
  },
  {
    "text": "retrospect I wish I'd said it that way but I didn't so because I wrote Because I described it as a kind of function",
    "start": "3914280",
    "end": "3919559"
  },
  {
    "text": "from points to uh Boolean I'm going to say it this way the meaning of region is",
    "start": "3919559",
    "end": "3925380"
  },
  {
    "text": "a function from locations to booleans so I apply that to a location I get a Boolean so that's why this type checks",
    "start": "3925380",
    "end": "3930720"
  },
  {
    "text": "so if the point is in the region then what is the value of the image at that",
    "start": "3930720",
    "end": "3935880"
  },
  {
    "text": "point okay otherwise the color clear okay well okay now we're getting into talking",
    "start": "3935880",
    "end": "3942180"
  },
  {
    "text": "about colors maybe there's a cheat that I've assumed there's something called clear or another way to say is or else",
    "start": "3942180",
    "end": "3948960"
  },
  {
    "text": "what it would be nothing right well I need a way then for nothing to be a color",
    "start": "3948960",
    "end": "3955200"
  },
  {
    "text": "so for compositionality of imagery it's very useful if images can be invisible",
    "start": "3955200",
    "end": "3962520"
  },
  {
    "text": "in some places and it's even more useful if they can be partially invisible partially transparent in some places so this idea",
    "start": "3962520",
    "end": "3969420"
  },
  {
    "text": "about function from locations to opacity absolutely a valuable idea and it shows up in colors in the type of colors",
    "start": "3969420",
    "end": "3977040"
  },
  {
    "text": "because then we can say oversea understands about opacity question",
    "start": "3977040",
    "end": "3983299"
  },
  {
    "text": "thank you I'm glad you asked that question and I apologize A little sloppy here I've defined I have two functions",
    "start": "3984780",
    "end": "3991559"
  },
  {
    "text": "they're both called mu and they have different types often they're different functions right",
    "start": "3991559",
    "end": "3996780"
  },
  {
    "text": "yeah sorry about that um uh I could have said mu sub image in",
    "start": "3996780",
    "end": "4002359"
  },
  {
    "text": "mu sub region or I could say mu belong to some type hypothetical type class of course it's",
    "start": "4002359",
    "end": "4007819"
  },
  {
    "text": "not going to be implemented so it doesn't really matter okay so you can imagine it's just this discipline that says for every type not for everyone for",
    "start": "4007819",
    "end": "4014660"
  },
  {
    "text": "some types we're going to say uh what their meaning is or this type and we're going to define the MU function yeah so these are two different mues",
    "start": "4014660",
    "end": "4020960"
  },
  {
    "text": "thank you I really have no logical relationship to each other they have kind of a",
    "start": "4020960",
    "end": "4026480"
  },
  {
    "text": "methodological relationship to each other all right so even just just looking into",
    "start": "4026480",
    "end": "4031760"
  },
  {
    "text": "cropping is suggestion I don't mean this is obvious this I think took people who did image programming a long time to",
    "start": "4031760",
    "end": "4038420"
  },
  {
    "text": "realize that colors with partial transparency is a darn good idea it makes for uh it it allows us to talk",
    "start": "4038420",
    "end": "4046220"
  },
  {
    "text": "about overlaying that or things have holes in them and where things are partially transparent uh uh well I don't",
    "start": "4046220",
    "end": "4053000"
  },
  {
    "text": "have slides like that but Rob Robbie this morning had had some nice transparencies in this slide",
    "start": "4053000",
    "end": "4058339"
  },
  {
    "text": "so two images one with partial transparency over the other one so we already see composition Happening",
    "start": "4058339",
    "end": "4064339"
  },
  {
    "text": "Here we have how did we get the transparency how do we build that maybe there's a monochrome thing maybe there's some kind",
    "start": "4064339",
    "end": "4070640"
  },
  {
    "text": "of font rendering thing right going on and there's some photo that he took and imported so there's already some composition going on which you could",
    "start": "4070640",
    "end": "4076039"
  },
  {
    "text": "imagine happening and being expressed in a language and then here's a very simple one monochrome",
    "start": "4076039",
    "end": "4082220"
  },
  {
    "text": "so a monochrome image I have to give it a color C and it gives me an image I",
    "start": "4082220",
    "end": "4087260"
  },
  {
    "text": "mean the image is a function from locations to colors so given a location what color",
    "start": "4087260",
    "end": "4092960"
  },
  {
    "text": "C so it's a constant function now this may seem weird like what what",
    "start": "4092960",
    "end": "4098900"
  },
  {
    "text": "are the boundaries in this shape or something like that",
    "start": "4098900",
    "end": "4103480"
  },
  {
    "text": "but that's where cropping comes in so I could have said monochrome image I have to give it a region",
    "start": "4104239",
    "end": "4110719"
  },
  {
    "text": "and a color but I'm not going to because I want my API to be as simple as orthogonal as",
    "start": "4110719",
    "end": "4116238"
  },
  {
    "text": "possible I want each operation to do as little as it possibly can and rely on the other operations to help us out",
    "start": "4116239",
    "end": "4122900"
  },
  {
    "text": "now I can build some convenience functions you might say well if they're all so austere it's going to be pretty convenient I'd rather have a function",
    "start": "4122900",
    "end": "4128480"
  },
  {
    "text": "with five knobs on it so I can just set the knobs instead of composing things if you want that to find that yourself on",
    "start": "4128480",
    "end": "4134120"
  },
  {
    "text": "top of this primitive set and we won't have to do a complex investigation of what it means",
    "start": "4134120",
    "end": "4141380"
  },
  {
    "text": "because we'll know what it means by translation by macro expansion in a sense",
    "start": "4141380",
    "end": "4146420"
  },
  {
    "text": "okay and then this transformation and we'll talk about that in a minute",
    "start": "4146420",
    "end": "4151580"
  },
  {
    "text": "so and I want to make this point note the compositionality of mu okay so this",
    "start": "4151580",
    "end": "4156920"
  },
  {
    "text": "compositionality is one of the Key properties of the denotational Style and",
    "start": "4156920",
    "end": "4162258"
  },
  {
    "text": "what I mean by the composition is that the meaning of a composition right the meaning of an application is defined in",
    "start": "4162259",
    "end": "4169699"
  },
  {
    "text": "terms of only the meanings of the components okay so I didn't ask any question at all on the right hand side",
    "start": "4169699",
    "end": "4175880"
  },
  {
    "text": "about top and Bot other than mu so no information can get out other than through the semantic function",
    "start": "4175880",
    "end": "4182600"
  },
  {
    "text": "so it can't matter what day of the week it is when you're into this picture",
    "start": "4182600",
    "end": "4187699"
  },
  {
    "text": "if so day of the week would have to be an explicit argument and so on there'd be a computation that's made explicit",
    "start": "4187699",
    "end": "4193520"
  },
  {
    "text": "can't have to do with the representation oh that's a really important one the day of the week's a bit of an absurd example",
    "start": "4193520",
    "end": "4198980"
  },
  {
    "text": "but you might imagine well this thing it means well I don't know uh count the number of operations used to express the",
    "start": "4198980",
    "end": "4205640"
  },
  {
    "text": "image and then draw a picture of that number or something like that no you can't because number of operations is",
    "start": "4205640",
    "end": "4212179"
  },
  {
    "text": "not part of the meaning of an image meaning of an image only as function from locations of colors so this is a",
    "start": "4212179",
    "end": "4217940"
  },
  {
    "text": "really a severe restriction on the kinds of things we can say and it's what allows us to have simple mathematically",
    "start": "4217940",
    "end": "4224659"
  },
  {
    "text": "precise reasoning what's up inner part like Vermont color",
    "start": "4224659",
    "end": "4232640"
  },
  {
    "text": "is that hint meaning of app type is some",
    "start": "4232640",
    "end": "4239140"
  },
  {
    "text": "ah thank you yeah that's great so um I have a color argument I didn't say",
    "start": "4239900",
    "end": "4246500"
  },
  {
    "text": "Mew of it um who knows what I'm going to do with the transform I'm going to say move it",
    "start": "4246500",
    "end": "4252440"
  },
  {
    "text": "or something else so so what's happening there does that mean it's kind of a predefined or something like that",
    "start": "4252440",
    "end": "4258380"
  },
  {
    "text": "um I guess that is what it means it means",
    "start": "4258380",
    "end": "4265100"
  },
  {
    "text": "that it doesn't have any interesting meaning structure and that yeah it just kind of is what it is",
    "start": "4265100",
    "end": "4273020"
  },
  {
    "text": "um colors are interesting and they deserve better treatment than that yes that is",
    "start": "4273020",
    "end": "4279800"
  },
  {
    "text": "what it means but you're pointing it out makes me uncomfortable about the choice I made",
    "start": "4279800",
    "end": "4285080"
  },
  {
    "text": "it's great that's great yeah and we can see things like that hey you didn't apply mu here we weren't using the",
    "start": "4285080",
    "end": "4291679"
  },
  {
    "text": "denotational discipline maybe that question would come up maybe it wouldn't maybe we'd March ahead and forget something pretty important because",
    "start": "4291679",
    "end": "4297980"
  },
  {
    "text": "colors are actually pretty interesting data type okay so notice the compositionality here",
    "start": "4297980",
    "end": "4305000"
  },
  {
    "text": "now I'm just going to make the compositionally more explicit I'm just refactoring nothing happened here but standard refactoring okay so here I can",
    "start": "4305000",
    "end": "4312620"
  },
  {
    "text": "see mu of over top bot well it's got a on the right hand side some mu of top and mu of Bot I want to take all of that",
    "start": "4312620",
    "end": "4318320"
  },
  {
    "text": "other context out of there and write it as Mu of over top bot is some unknown",
    "start": "4318320",
    "end": "4323420"
  },
  {
    "text": "function to be defined of mule of top and mule of Bot all I'm doing is some refactoring",
    "start": "4323420",
    "end": "4329540"
  },
  {
    "text": "taking what it is that when I say has to be a function of the meanings I'm making that function explicit by giving a",
    "start": "4329540",
    "end": "4335360"
  },
  {
    "text": "definition so I've just factored some code some definition out here",
    "start": "4335360",
    "end": "4341420"
  },
  {
    "text": "so this is exactly the same thing if you in line up this definition over exactly what I said before so I just uninlined",
    "start": "4341420",
    "end": "4347120"
  },
  {
    "text": "that's takes a little bit more creativity and I just did it to make this compositionality more explicit",
    "start": "4347120",
    "end": "4354020"
  },
  {
    "text": "okay so it's an unnecessary step and I wanted to emphasize the",
    "start": "4354020",
    "end": "4359500"
  },
  {
    "text": "compositionality all right so now we've already got I've already gotten some great uh criticism",
    "start": "4359500",
    "end": "4365719"
  },
  {
    "text": "so far uh and and that that's a great thing to do at this stage Okay so we've designed",
    "start": "4365719",
    "end": "4371000"
  },
  {
    "text": "an API now let's try to improve it okay and one way we can improve it is to make it simpler and say this other thing is",
    "start": "4371000",
    "end": "4377060"
  },
  {
    "text": "maybe a special case of something that's more General and often when we make things more General we make them simpler because",
    "start": "4377060",
    "end": "4383300"
  },
  {
    "text": "we've removed the particular particularities okay not only have we made them more simple but we've",
    "start": "4383300",
    "end": "4389000"
  },
  {
    "text": "suggested a lot of interesting things that we can say that's what I mean by more General",
    "start": "4389000",
    "end": "4394040"
  },
  {
    "text": "okay so let's look at let's consider region so I just talked about uh transforming uh I just talk about",
    "start": "4394040",
    "end": "4400460"
  },
  {
    "text": "imagery and one of the operations is transforming but don't we want to transform regions too all right if I've got some interesting",
    "start": "4400460",
    "end": "4406280"
  },
  {
    "text": "shapes I might want to move them around and transform them and so on okay so already I'm realizing oh dear",
    "start": "4406280",
    "end": "4413480"
  },
  {
    "text": "I'm going to have some redundancy in my implementation because I'm going to have images and regions and they're both",
    "start": "4413480",
    "end": "4419480"
  },
  {
    "text": "going to do some transformation so we have to have these two transform image transform region also if we look at the semantic",
    "start": "4419480",
    "end": "4426800"
  },
  {
    "text": "functions and this is really why I I chose this characteristic function rather than set up so function to Bool",
    "start": "4426800",
    "end": "4432500"
  },
  {
    "text": "instead of set so it's premature I realized that that these two actually",
    "start": "4432500",
    "end": "4438080"
  },
  {
    "text": "look fairly similar too I want a similar operation and they look kind of similar and it may have been less obvious if I'd",
    "start": "4438080",
    "end": "4443659"
  },
  {
    "text": "made this kind of better choice of choosing set of location at the beginning might have said oh they're",
    "start": "4443659",
    "end": "4449060"
  },
  {
    "text": "entirely different one's a function from locations there's a set of locations and then I remember oh wait a minute I learned a long time ago in math class",
    "start": "4449060",
    "end": "4454880"
  },
  {
    "text": "that sets a set of locations and a function from location to Bool is the same kind of",
    "start": "4454880",
    "end": "4461060"
  },
  {
    "text": "thing they're interconvertible so maybe instead of saying a set of of points I want to say",
    "start": "4461060",
    "end": "4466219"
  },
  {
    "text": "function from points to bools now these two look more alike ah interesting they have they they're going to share at",
    "start": "4466219",
    "end": "4472400"
  },
  {
    "text": "least one operation and their and their meanings are kind of similar maybe we can",
    "start": "4472400",
    "end": "4477560"
  },
  {
    "text": "generalize and unify regions and images okay so that's an idea",
    "start": "4477560",
    "end": "4484280"
  },
  {
    "text": "all right and then we also have this operation uh well overlay yes and",
    "start": "4484280",
    "end": "4489440"
  },
  {
    "text": "someone point this already that um overlays just one point-wise operation you might want to apply there",
    "start": "4489440",
    "end": "4495739"
  },
  {
    "text": "are other things like taking a linear interpolation that's a different point wise operation so I realized oh I made some of these these uh Primitives to",
    "start": "4495739",
    "end": "4503000"
  },
  {
    "text": "specific to ad hoc trying to trying to generalize them allow them to do so take out some of the",
    "start": "4503000",
    "end": "4508699"
  },
  {
    "text": "specialness about like color combination for instance",
    "start": "4508699",
    "end": "4513800"
  },
  {
    "text": "all right so so just let's generalize instead of saying an image which is a single type let's say an",
    "start": "4513800",
    "end": "4520340"
  },
  {
    "text": "image of a let's make it be parameterized and we'll make it be parameterized by its output which is",
    "start": "4520340",
    "end": "4525500"
  },
  {
    "text": "exactly what you suggested which say maybe the essence of an image there really is nothing with colors maybe it's just orthogonal Notions",
    "start": "4525500",
    "end": "4532820"
  },
  {
    "text": "so maybe we Define an image as something that's special spatially varying and one",
    "start": "4532820",
    "end": "4538040"
  },
  {
    "text": "of the things we find a very over space is color another thing might be an opacity value",
    "start": "4538040",
    "end": "4543440"
  },
  {
    "text": "this was also suggested another thing might want it might be a Boolean which is equivalent to a region",
    "start": "4543440",
    "end": "4548600"
  },
  {
    "text": "okay and then who knows what else turned out images of images is very interesting it turns out images of functions is very",
    "start": "4548600",
    "end": "4554960"
  },
  {
    "text": "very interesting images of angles you can rotate an image by a spatially",
    "start": "4554960",
    "end": "4560960"
  },
  {
    "text": "varying angle it's very bizarre and wonderful and we get all of these possibilities by",
    "start": "4560960",
    "end": "4566480"
  },
  {
    "text": "making this one generalization to say instead of having color hardwired in we're going to have it be a parameter so",
    "start": "4566480",
    "end": "4572179"
  },
  {
    "text": "now I'm going to talk about image c as a shorthand for a color valued image",
    "start": "4572179",
    "end": "4577840"
  },
  {
    "text": "and now our operations can get much more General so a transform instead of just transforming uh color images it",
    "start": "4578480",
    "end": "4584659"
  },
  {
    "text": "transforms the image of an image of a to an image of a if a is color we get",
    "start": "4584659",
    "end": "4591260"
  },
  {
    "text": "a color image transformation if image of Boolean we get a region transformation that's great we just unified",
    "start": "4591260",
    "end": "4597640"
  },
  {
    "text": "we just not only unified two operations but we allowed infinitely many other operations right which is transforming",
    "start": "4597640",
    "end": "4604219"
  },
  {
    "text": "images of other things and then the uh what was it the cropping",
    "start": "4604219",
    "end": "4610219"
  },
  {
    "text": "remember there was a conditional in there so we can generalize cropping as well to say to a conditional we have an image",
    "start": "4610219",
    "end": "4617360"
  },
  {
    "text": "full of booleans which is a region right and an image of a and another image of a",
    "start": "4617360",
    "end": "4622940"
  },
  {
    "text": "we can at every Point use the Boolean image to decide which of the other two images to sample so in other words for",
    "start": "4622940",
    "end": "4628580"
  },
  {
    "text": "every point if it's in the region choose uh choose image a if it's not choose image B",
    "start": "4628580",
    "end": "4634400"
  },
  {
    "text": "okay and as a special case if one of the images is the empty image we get cropping",
    "start": "4634400",
    "end": "4640159"
  },
  {
    "text": "okay so this is a nice generalization so cropping is a special case of conditional that's great there are other",
    "start": "4640159",
    "end": "4646640"
  },
  {
    "text": "things we could do with conditional",
    "start": "4646640",
    "end": "4649900"
  },
  {
    "text": "okay so um there are some other operations and",
    "start": "4653239",
    "end": "4658400"
  },
  {
    "text": "now I'm trying to remember oh yes so uh remember the monochrome image that was a",
    "start": "4658400",
    "end": "4663620"
  },
  {
    "text": "constant well that had color right wired into it so it took a color well now that we're generalizing it doesn't even be a",
    "start": "4663620",
    "end": "4669440"
  },
  {
    "text": "color I give it an A and it gives us an image of a and it's of course going to be that that value everywhere",
    "start": "4669440",
    "end": "4674480"
  },
  {
    "text": "and then there are some other operations and lift 2 is a generalization of overlay",
    "start": "4674480",
    "end": "4679820"
  },
  {
    "text": "okay so overlay remember took two in two color images",
    "start": "4679820",
    "end": "4685219"
  },
  {
    "text": "and then it it used the color overlay operation to combine them okay well if",
    "start": "4685219",
    "end": "4690739"
  },
  {
    "text": "we want to generalize we can't wire color combination in because that would be monomorphic that would just give us",
    "start": "4690739",
    "end": "4696500"
  },
  {
    "text": "an operation of color images well that's fine maybe maybe that's all we get but no we can say let's make the overlay of",
    "start": "4696500",
    "end": "4702800"
  },
  {
    "text": "color thing an explicit argument so we generalize overlay to lift two so",
    "start": "4702800",
    "end": "4708199"
  },
  {
    "text": "lift 2 applied to the function that combines two colors which I called over C that is that is how we're going to",
    "start": "4708199",
    "end": "4714739"
  },
  {
    "text": "Define over on color images okay so so over on color is super useful",
    "start": "4714739",
    "end": "4720679"
  },
  {
    "text": "becomes a special case of applying some binary function",
    "start": "4720679",
    "end": "4725620"
  },
  {
    "text": "sometimes we want to do apply a function to just one image every point in the image we apply function that's lift one",
    "start": "4725840",
    "end": "4731239"
  },
  {
    "text": "and of course you can imagine there's lots more so specializing we took the so now we have these things that were",
    "start": "4731239",
    "end": "4736940"
  },
  {
    "text": "Primitives now we Define them either in terms of something that is just a more polymorphic version or Define them in",
    "start": "4736940",
    "end": "4743420"
  },
  {
    "text": "terms of something that's more than a polymorphic conversion I can like lift two lift two plus uh you know a function",
    "start": "4743420",
    "end": "4748760"
  },
  {
    "text": "the overlay function oh and then conditional itself which was a generalization we can generalize",
    "start": "4748760",
    "end": "4754100"
  },
  {
    "text": "further so can so Khan is itself a lift three of the if the nails function",
    "start": "4754100",
    "end": "4760719"
  },
  {
    "text": "if the nails takes a bull an a to an a it takes a bull and an a and an A and gives you an a",
    "start": "4760940",
    "end": "4766040"
  },
  {
    "text": "okay if we need to lift three of that if we apply it over space we get conned but we can do a lot of other things over",
    "start": "4766040",
    "end": "4771920"
  },
  {
    "text": "space okay all righty so",
    "start": "4771920",
    "end": "4779480"
  },
  {
    "text": "um I want to go briefly through yeah",
    "start": "4779480",
    "end": "4783880"
  },
  {
    "text": "can we smooth an image you mean like some kind of blurring thing",
    "start": "4786340",
    "end": "4791780"
  },
  {
    "text": "yeah thanks yeah so with this API can we do some kind of blurry smoothie thing no we",
    "start": "4791780",
    "end": "4797420"
  },
  {
    "text": "cannot so with the semantic model of a an image as a function from space yes we can we",
    "start": "4797420",
    "end": "4804020"
  },
  {
    "text": "can do some kind of integration right to convolution or something like that so the semantic model allows it the API",
    "start": "4804020",
    "end": "4810800"
  },
  {
    "text": "doesn't yet allow it so that's nice that we haven't prevented it we haven't enabled it yet",
    "start": "4810800",
    "end": "4816800"
  },
  {
    "text": "so absolutely that's the kind of thing we wanted an API so then we're going to add some more operations and and it's",
    "start": "4816800",
    "end": "4822199"
  },
  {
    "text": "really important that we haven't defined uh the semantic model so narrowly as to",
    "start": "4822199",
    "end": "4827239"
  },
  {
    "text": "preclude it thanks",
    "start": "4827239",
    "end": "4830678"
  },
  {
    "text": "yes",
    "start": "4836719",
    "end": "4839140"
  },
  {
    "text": "it's not useful that it's clear that fmap is useful yeah yeah you're right",
    "start": "4845300",
    "end": "4852520"
  },
  {
    "text": "yeah yeah very interesting so um so earlier we talked about some of these types are a little worryingly Rich",
    "start": "4865100",
    "end": "4871520"
  },
  {
    "text": "they seem to suggest capabilities that would be impossible to implement or",
    "start": "4871520",
    "end": "4876980"
  },
  {
    "text": "super expensive to implement or something like that yeah yeah so so I said at the time well we're",
    "start": "4876980",
    "end": "4884239"
  },
  {
    "text": "gonna we're gonna make restriction by limiting the express notice our API and that's going to then allow some operations to have efficient rep you",
    "start": "4884239",
    "end": "4891679"
  },
  {
    "text": "know of use of some efficient operations use of some fission implementations but now if I'm going to say that lift 0 1",
    "start": "4891679",
    "end": "4897080"
  },
  {
    "text": "and 2 are part of the API I've LED in an awful lot now we can talk now we're talking about arbitrary mathematical",
    "start": "4897080",
    "end": "4903020"
  },
  {
    "text": "functions really arbitrary functions expressible in a programming language and maybe that's letting in too much",
    "start": "4903020",
    "end": "4908719"
  },
  {
    "text": "yeah that's a great question realization",
    "start": "4908719",
    "end": "4914960"
  },
  {
    "text": "yeah yeah yeah that's great yeah that's a great point so this is this is this is",
    "start": "4914960",
    "end": "4920420"
  },
  {
    "text": "the API doing this language design yeah this is a really important issue I want expressiveness and I kind of want",
    "start": "4920420",
    "end": "4926239"
  },
  {
    "text": "restrictiveness I want strictness so I can so I know how to implement it and I complement efficiently I want expressiveness so people do all kinds of",
    "start": "4926239",
    "end": "4932480"
  },
  {
    "text": "weird things and my job as a language designer right API designer is is to",
    "start": "4932480",
    "end": "4937640"
  },
  {
    "text": "kind of straddle this fence of if I can't implement it officially it's not going to be fun to use or maybe not",
    "start": "4937640",
    "end": "4943580"
  },
  {
    "text": "useful to use but if I restrict it too much it's not going to be it's also not going to be fun to use and in particular",
    "start": "4943580",
    "end": "4950540"
  },
  {
    "text": "um I'm not I hope I'm not my only user and certainly the me of today is not my only user I want to use this tomorrow",
    "start": "4950540",
    "end": "4956239"
  },
  {
    "text": "and tomorrow I'm going to have Inspirations I didn't have today and if I hand it to you you're going to have Inspirations that I will never have so I",
    "start": "4956239",
    "end": "4962300"
  },
  {
    "text": "really want something that's more expressive than I know how to use",
    "start": "4962300",
    "end": "4967000"
  },
  {
    "text": "while still being implementable in a way that is uh that that's kind of workable so that's a kind of creative tension",
    "start": "4967400",
    "end": "4975400"
  },
  {
    "text": "but the problem",
    "start": "4987020",
    "end": "4990100"
  },
  {
    "text": "yeah yeah so what did I say about crop yeah crop is in crop has empty image and I haven't really said what that means",
    "start": "4992120",
    "end": "4998120"
  },
  {
    "text": "but I'll tell you what I had in mind when I wrote it was specifically a color valued image and so crop here is maybe",
    "start": "4998120",
    "end": "5003400"
  },
  {
    "text": "not as Express as expressive as you might like because there may be other things you want to crop so maybe maybe",
    "start": "5003400",
    "end": "5009699"
  },
  {
    "text": "um we can't describe everything there should be some kind of empty like thing but we want to talk about more than",
    "start": "5009699",
    "end": "5015040"
  },
  {
    "text": "images probably more than color images probably so we'll come back to this thing of what kind of how can we get",
    "start": "5015040",
    "end": "5020560"
  },
  {
    "text": "more expressiveness than color images um but but restricted enough so that we",
    "start": "5020560",
    "end": "5026080"
  },
  {
    "text": "know what the empty is that will come to that yeah this is great yeah this is exactly what I do that's exactly what I do except it's",
    "start": "5026080",
    "end": "5033159"
  },
  {
    "text": "more fun for me today because you're with me we're talking about these issues together",
    "start": "5033159",
    "end": "5038520"
  },
  {
    "text": "yeah so spatial transformation I think I'm just kind of keeping on the time",
    "start": "5038620",
    "end": "5044199"
  },
  {
    "text": "here I think we go to 350 right 120 two and a half hours 350.",
    "start": "5044199",
    "end": "5049840"
  },
  {
    "text": "um I also don't want to assume that you folks have that much longer and expense attention span than I do that we",
    "start": "5049840",
    "end": "5057880"
  },
  {
    "text": "can just kind of keep marching in a fast pace here so uh so a spatial transformation so",
    "start": "5057880",
    "end": "5065500"
  },
  {
    "text": "there's another type so we have images we have regions and we had transforms okay so let's ask again",
    "start": "5065500",
    "end": "5071020"
  },
  {
    "text": "what's a transform and what I mean by that is not how it's implemented or represented or anything like that but what is a mathematical model that I can",
    "start": "5071020",
    "end": "5077860"
  },
  {
    "text": "help use to define what my API is about and remember one of the operations",
    "start": "5077860",
    "end": "5083320"
  },
  {
    "text": "perhaps the only one but probably not that I'm going to do with the transform is to transform an image",
    "start": "5083320",
    "end": "5089320"
  },
  {
    "text": "okay because I like compositionality all right I'm going to want to have more operations that create transforms",
    "start": "5089320",
    "end": "5097540"
  },
  {
    "text": "and somebody already hinted that this transform of monoid yeah well there's going to be other things as well so any",
    "start": "5097540",
    "end": "5103659"
  },
  {
    "text": "thoughts on what a transform means what's a simple precise mathematical model",
    "start": "5103659",
    "end": "5109679"
  },
  {
    "text": "function from location to locations yeah sure yeah if you were Graphics programmers I would",
    "start": "5112780",
    "end": "5118840"
  },
  {
    "text": "have expected you to say a matrix and then I would have scoffed",
    "start": "5118840",
    "end": "5124560"
  },
  {
    "text": "I worked with Graphics programmers and they have this bizarre characteristic that they write programs that are full",
    "start": "5124560",
    "end": "5130900"
  },
  {
    "text": "of lovely math and they write programs they write papers that are full of lovely mathematic programs that look like Fortran",
    "start": "5130900",
    "end": "5137679"
  },
  {
    "text": "and we know that programming is math okay so I don't need to write my math",
    "start": "5137679",
    "end": "5144159"
  },
  {
    "text": "and my programs in such different languages as those two okay so",
    "start": "5144159",
    "end": "5150040"
  },
  {
    "text": "um so for instance Graphics programmers think that transforms are matrices but",
    "start": "5150040",
    "end": "5155560"
  },
  {
    "text": "they're not matrices are one representation of some transforms",
    "start": "5155560",
    "end": "5160900"
  },
  {
    "text": "but a simpler and much more General now we're back to this tension again simpler much more generalist to say uh",
    "start": "5160900",
    "end": "5167739"
  },
  {
    "text": "okay a simple much more General is to say transforms are a function from locations locations period that's it",
    "start": "5167739",
    "end": "5173800"
  },
  {
    "text": "that's way more expressive than matrices okay it is",
    "start": "5173800",
    "end": "5179500"
  },
  {
    "text": "um it's simpler in the sense of there's less to the type right than matrices",
    "start": "5179500",
    "end": "5184600"
  },
  {
    "text": "it's much more General because it could describe arbitrary Transformations bins warps all kinds of strange",
    "start": "5184600",
    "end": "5190540"
  },
  {
    "text": "non-invertible things all kinds of stuff okay so maybe we've gone too far here",
    "start": "5190540",
    "end": "5196540"
  },
  {
    "text": "we'll find out again too far is some combination of",
    "start": "5196540",
    "end": "5204520"
  },
  {
    "text": "it's just not useful which is actually a judgment call we're not okay we're not qualified to make",
    "start": "5204520",
    "end": "5210159"
  },
  {
    "text": "because it's about the future and other people it's about the imagination of our species and whatever species uh other",
    "start": "5210159",
    "end": "5215560"
  },
  {
    "text": "species picks up this Library um and uh to an efficient well",
    "start": "5215560",
    "end": "5222219"
  },
  {
    "text": "all right let's work on that let's try to make it efficient and I was able to make this quite efficient",
    "start": "5222219",
    "end": "5229560"
  },
  {
    "text": "lives",
    "start": "5231880",
    "end": "5234540"
  },
  {
    "text": "so huh interesting so location location is the same type is that what you mean",
    "start": "5238199",
    "end": "5243760"
  },
  {
    "text": "maybe maybe I want one to be 2D in the 3D or I want some weird discrete and",
    "start": "5243760",
    "end": "5249159"
  },
  {
    "text": "continuous or who knows yeah absolutely yeah this really draws out into sharper Leaf I've made a choice here and it may",
    "start": "5249159",
    "end": "5255159"
  },
  {
    "text": "be a lousy choice that spatial that transforms uh uh uh",
    "start": "5255159",
    "end": "5260340"
  },
  {
    "text": "transforms the same type of locations so I can't change the shape I can't map uh",
    "start": "5260340",
    "end": "5265900"
  },
  {
    "text": "I might have donut images right so so the the domain is the domain of a donut right like we were just talking about",
    "start": "5265900",
    "end": "5272500"
  },
  {
    "text": "instead of the domain of of a plane yeah so so this is quite restrictive and uh",
    "start": "5272500",
    "end": "5278199"
  },
  {
    "text": "and it may not be the best choice and in fact it's unnecessarily restrictive and",
    "start": "5278199",
    "end": "5283600"
  },
  {
    "text": "in a sense a better choice would be to make images parameterized not only by their range",
    "start": "5283600",
    "end": "5288940"
  },
  {
    "text": "but their domain at that point they're just functions arbitrary functions what's kind of interesting too so there's another little trade-off there",
    "start": "5288940",
    "end": "5294940"
  },
  {
    "text": "yeah but absolutely and so in fact some of the operations as an ABIA in this API make perfect sense for 3D instead of 2D",
    "start": "5294940",
    "end": "5301900"
  },
  {
    "text": "for volumetric images and others don't that's very interesting and what is it",
    "start": "5301900",
    "end": "5307000"
  },
  {
    "text": "that makes some appropriate in others all of those questions I think are answerable by looking directly at these",
    "start": "5307000",
    "end": "5312639"
  },
  {
    "text": "types not even the definitions of the means of the operation but just the types",
    "start": "5312639",
    "end": "5318580"
  },
  {
    "text": "themselves okay so so to say what now what does it",
    "start": "5318580",
    "end": "5323620"
  },
  {
    "text": "mean to transform an image I've got a transform which means a function from locations locations all right and I've",
    "start": "5323620",
    "end": "5330040"
  },
  {
    "text": "got so that's here we go and I have an image which means a function from location's image and the",
    "start": "5330040",
    "end": "5335260"
  },
  {
    "text": "compositionality means that the meaning is going to be some function transform mass of these two meanings okay",
    "start": "5335260",
    "end": "5342100"
  },
  {
    "text": "so I don't end up having to really Factor this I'm just again emphasizing this is our job this was inevitable it",
    "start": "5342100",
    "end": "5347679"
  },
  {
    "text": "had the answer it has to have this shape through compositionality now what we're left with is deciding this and so what kind of thing can transform",
    "start": "5347679",
    "end": "5356920"
  },
  {
    "text": "SB well it's got a type check right so this is what I do a lot I write down",
    "start": "5356920",
    "end": "5363639"
  },
  {
    "text": "a type and I say what could possibly type check and there's this thing which is the more",
    "start": "5363639",
    "end": "5369340"
  },
  {
    "text": "polymorphic my type is the fewer programs can type check this one isn't polymorphic at all so that's no help",
    "start": "5369340",
    "end": "5376179"
  },
  {
    "text": "if I followed Joseph's suggestion this thing would be more polymorphic and there really would",
    "start": "5376179",
    "end": "5381520"
  },
  {
    "text": "be only one thing I could write and it would be the right thing so that's another reason actually to make this generalization is because if once I did",
    "start": "5381520",
    "end": "5388120"
  },
  {
    "text": "I couldn't get this wrong and then I might say I don't really want that generalization but I already know what the right answer would be thanks to it",
    "start": "5388120",
    "end": "5394840"
  },
  {
    "text": "yeah so if you and particularly if you take this approach but even if you don't if it futs around there's only one",
    "start": "5394840",
    "end": "5401739"
  },
  {
    "text": "reasonable thing I apologize for using that word",
    "start": "5401739",
    "end": "5406380"
  },
  {
    "text": "you could decide not to use uh H at all okay",
    "start": "5408940",
    "end": "5415120"
  },
  {
    "text": "right so the meaning of transforming an image is the image okay I don't think any of those will be",
    "start": "5415120",
    "end": "5420460"
  },
  {
    "text": "satisfied with that it wouldn't be nearly as useful operation right so I'm",
    "start": "5420460",
    "end": "5425980"
  },
  {
    "text": "not going to do that so what I can do if I look at the types of things is is the Transformer okay is I'm going to be",
    "start": "5425980",
    "end": "5432219"
  },
  {
    "text": "given a point P that's in in the you know the domain of the of the resulting image",
    "start": "5432219",
    "end": "5437440"
  },
  {
    "text": "I can apply my function from locations of color to it directly and I'll get a color and then I have no use for this",
    "start": "5437440",
    "end": "5442840"
  },
  {
    "text": "guy so I don't want to do that so instead I'm going to apply my spatial transform to the point and then I'm going to sample the image at that point",
    "start": "5442840",
    "end": "5450840"
  },
  {
    "text": "so if you look around there are very few things that type check and this is the only one that I think any of us would really like",
    "start": "5450940",
    "end": "5456699"
  },
  {
    "text": "there's actually another one that type checks it's better which is that we want to apply the inverse of H",
    "start": "5456699",
    "end": "5463600"
  },
  {
    "text": "I want to buy the inverse transformation that turns out to actually be the right thing",
    "start": "5463600",
    "end": "5468820"
  },
  {
    "text": "except that I don't know how to do it right I might say ah I really I really want",
    "start": "5468820",
    "end": "5475060"
  },
  {
    "text": "inverse there's a quite there's a fairly subtle reason for that it's this see if I can explain this easily well okay I'm",
    "start": "5475060",
    "end": "5481480"
  },
  {
    "text": "going to explain this informally have you seen the movie Honey I Shrunk the Kids",
    "start": "5481480",
    "end": "5486880"
  },
  {
    "text": "or the Dual movie The Amazing 50-foot woman or something like that okay Honey",
    "start": "5486880",
    "end": "5493060"
  },
  {
    "text": "I Shrunk the Kids is about the kids get hit get blasted by a shrinking Ray that I think their dad invented Rick Moranis",
    "start": "5493060",
    "end": "5499960"
  },
  {
    "text": "and their experiences that the world gets bigger right so then they find themselves battling these giant ants and",
    "start": "5499960",
    "end": "5506800"
  },
  {
    "text": "the cat and things like that and having to scale you know stairs and you know Blades of grass you know this tall and",
    "start": "5506800",
    "end": "5512260"
  },
  {
    "text": "that kind of thing so so making them small made their perception of the world larger",
    "start": "5512260",
    "end": "5519340"
  },
  {
    "text": "if the machine instead was a clockwise spinner their perception was would be that the world spun counterclockwise if",
    "start": "5519340",
    "end": "5524739"
  },
  {
    "text": "the machine was a left mover or South mover their experience would be that the world moved North okay so I'm not giving you a a precise",
    "start": "5524739",
    "end": "5533320"
  },
  {
    "text": "explanation but if you fiddle with it you fiddle with the implications you'll see that in order to transform an image to",
    "start": "5533320",
    "end": "5540639"
  },
  {
    "text": "scale it up what I have to do is scale the sample points down you play with it you'll get it",
    "start": "5540639",
    "end": "5547060"
  },
  {
    "text": "there's a phenomenon called a covariance okay there's a hint that that will want",
    "start": "5547060",
    "end": "5553719"
  },
  {
    "text": "a covariant sort of thing one of these inverting backwards the conjugated kind of things and that's the fact that we're",
    "start": "5553719",
    "end": "5559179"
  },
  {
    "text": "transforming location and locations are in the domain not the range of the",
    "start": "5559179",
    "end": "5564280"
  },
  {
    "text": "denotation whenever that happens things are going to go backwards okay so so we could say is ah I've made this",
    "start": "5564280",
    "end": "5572920"
  },
  {
    "text": "function from locations locations too rich because I'm going to need to invert it I have to restrict myself to invertible functions",
    "start": "5572920",
    "end": "5578920"
  },
  {
    "text": "and then I might say oh I guess I'll go back to matrices no I don't want to go back to matrices a lot of other invertible functions we can you know",
    "start": "5578920",
    "end": "5584260"
  },
  {
    "text": "work on how you know what's the class of interval functions and how we preserve them and actually that that's a fine uh doable uh route so we could do that I'm",
    "start": "5584260",
    "end": "5591639"
  },
  {
    "text": "doing something else instead which is I'm requiring that this transform be given backwards to begin with it's a",
    "start": "5591639",
    "end": "5597940"
  },
  {
    "text": "little inconvenient it actually adds really useful expressiveness it allows us friends to do infinite tiling and allows us to use",
    "start": "5597940",
    "end": "5604960"
  },
  {
    "text": "non-invertible functions which are quite useful so it's a bit of a trade-off okay really what's going to really what",
    "start": "5604960",
    "end": "5612159"
  },
  {
    "text": "I chose to do is I chose to Define some some specializations that do specific Transformations and I Define them in",
    "start": "5612159",
    "end": "5618940"
  },
  {
    "text": "terms of manually inverted versions so to so the function that scales up an image forms a scaling down transform and",
    "start": "5618940",
    "end": "5626500"
  },
  {
    "text": "applies this transform thingy to it so not entirely proud of it",
    "start": "5626500",
    "end": "5632380"
  },
  {
    "text": "all right oh now we get to a fundamental question there's one type that we haven't defined",
    "start": "5632380",
    "end": "5638920"
  },
  {
    "text": "which is locations so it's fundamentally important to the semantic model eventually we got to say",
    "start": "5638920",
    "end": "5645940"
  },
  {
    "text": "what it is and here now we're starting to work with locations now it becomes important to say what locations are",
    "start": "5645940",
    "end": "5652120"
  },
  {
    "text": "and a habitual programmer's answer would be a pair of ins",
    "start": "5652120",
    "end": "5658179"
  },
  {
    "text": "all right but that programmer isn't going to come up with a composable API",
    "start": "5658179",
    "end": "5663580"
  },
  {
    "text": "because you can't express rotations or scaling by non-integral amounts",
    "start": "5663580",
    "end": "5671800"
  },
  {
    "text": "right rotations so it's the desire and and in a way no",
    "start": "5671800",
    "end": "5677260"
  },
  {
    "text": "no it's fine I have a bitmap I have a art program I can import my bitmap I can",
    "start": "5677260",
    "end": "5682480"
  },
  {
    "text": "rotate it by whatever angle I want I can write it out okay so we know it's possible to implement something called",
    "start": "5682480",
    "end": "5688600"
  },
  {
    "text": "rotation but that's something called rotation has a very complex implementation and has a very complex specification",
    "start": "5688600",
    "end": "5695139"
  },
  {
    "text": "which is even worse and the reason it does is that is the pixels don't line up I have these pixels",
    "start": "5695139",
    "end": "5701620"
  },
  {
    "text": "in my if locations are if it's a grid right maybe still be infinite grid but",
    "start": "5701620",
    "end": "5706719"
  },
  {
    "text": "if I have these locations um once I do a rotation those pixels move onto non-locations right they're no",
    "start": "5706719",
    "end": "5713320"
  },
  {
    "text": "longer have integral coordinates except for a very small set of Transformations like Rotation by 90 degrees",
    "start": "5713320",
    "end": "5720840"
  },
  {
    "text": "so no problem I'm a hacker I'll just write some some interpolation code",
    "start": "5722080",
    "end": "5727900"
  },
  {
    "text": "okay so I'm going to interpolate results and I'm going to fill up all these pixels okay well that's complicated it's",
    "start": "5727900",
    "end": "5733659"
  },
  {
    "text": "not only complex it's not only complicated to implement it's complicated to specify and it's arbitrary what interpolation of owning",
    "start": "5733659",
    "end": "5739300"
  },
  {
    "text": "is linear cubic quadratic kind of funny other thing shabby Chef who knows what",
    "start": "5739300",
    "end": "5744520"
  },
  {
    "text": "kind of thing okay we could go down any of those routes and they're all going to have this kind",
    "start": "5744520",
    "end": "5750219"
  },
  {
    "text": "of feeling of arbitrariness and if anyone wants to really understand what we've done they have to understand these",
    "start": "5750219",
    "end": "5755800"
  },
  {
    "text": "details and not only that no nice mathematical properties will hold okay so for instance I would like it to",
    "start": "5755800",
    "end": "5762760"
  },
  {
    "text": "be the case if if I have an arbitrary image and I rotate it by pi over 3 radians and I wrote out by negative pi over 3",
    "start": "5762760",
    "end": "5769600"
  },
  {
    "text": "radians I get exactly the same image I'd like to say that Rotation by fee composer Association my negative fee",
    "start": "5769600",
    "end": "5776620"
  },
  {
    "text": "equals the identity that will not be the case if I use any of these complex interpolation kind of",
    "start": "5776620",
    "end": "5783040"
  },
  {
    "text": "things if I want to be able to say I'm going to take an image and zoom out by a trillion",
    "start": "5783040",
    "end": "5790060"
  },
  {
    "text": "and zoom in by a trillion it'd be nice to say that those two Transformations are inverses it won't be the case if we",
    "start": "5790060",
    "end": "5797139"
  },
  {
    "text": "use some kind of a discrete representation we're going to zoom out by a trillion you'll get nothing",
    "start": "5797139",
    "end": "5804280"
  },
  {
    "text": "or a little bit of non-transparent in one place and you zoom back in of course you won't get the original image so",
    "start": "5804280",
    "end": "5810580"
  },
  {
    "text": "that's why not to use discrete also I'm suggesting we don't use finite",
    "start": "5810580",
    "end": "5816760"
  },
  {
    "text": "y for very similar reasons I might want to move something out of the finite",
    "start": "5816760",
    "end": "5822880"
  },
  {
    "text": "window and move it back in right move it out it's gone and move it back in it's still gone that kind of thing or again zooming in",
    "start": "5822880",
    "end": "5829239"
  },
  {
    "text": "and out so discreetness is harmful to simple",
    "start": "5829239",
    "end": "5834400"
  },
  {
    "text": "composability I find that this is harmful with simple composability it's exactly the same",
    "start": "5834400",
    "end": "5839560"
  },
  {
    "text": "reasons as a functional record programming uses uh infinite continuous time okay so this is my answer locations are",
    "start": "5839560",
    "end": "5846100"
  },
  {
    "text": "functions in two-dimensional continuous space infinite continuous space",
    "start": "5846100",
    "end": "5851739"
  },
  {
    "text": "and it's in order to have composability with very simple precise meaning and that's not just important",
    "start": "5851739",
    "end": "5858460"
  },
  {
    "text": "for precision Geeks it's important for any user they might not walk in and say hey I wanted my trigonometric identities",
    "start": "5858460",
    "end": "5865480"
  },
  {
    "text": "to hold and they don't but that's just because they don't have the language for saying that",
    "start": "5865480",
    "end": "5873040"
  },
  {
    "text": "they'll still get unexpected results they just might not be able to articulate their disappointment or confusion",
    "start": "5873040",
    "end": "5880440"
  },
  {
    "text": "they won't have to because we won't give them we don't set up the circumstances in which they'll be confused okay",
    "start": "5880719",
    "end": "5886719"
  },
  {
    "text": "so why continuous and infinite I talked about this",
    "start": "5886719",
    "end": "5892300"
  },
  {
    "text": "for functional reactive program it's exactly the same reasons last year I had this talk reversed I",
    "start": "5892300",
    "end": "5897820"
  },
  {
    "text": "talked about for space and then I said function reacting programming it's exactly the same reasons I did that intentionally because",
    "start": "5897820",
    "end": "5904060"
  },
  {
    "text": "people I think are used to vector graphics I mean it's something you've looked at you can see oh yeah scalable",
    "start": "5904060",
    "end": "5909100"
  },
  {
    "text": "Graphics I get that that's really useful continuous time notice more more people bulk at that",
    "start": "5909100",
    "end": "5915699"
  },
  {
    "text": "it's impossible it's absurd it's unused it's not useful and so on no it's exactly the same so I usually present",
    "start": "5915699",
    "end": "5922900"
  },
  {
    "text": "talk about space first Shields don't go up you know quite so quickly and and rigidly and say by the",
    "start": "5922900",
    "end": "5929920"
  },
  {
    "text": "way time is exactly the same benefits",
    "start": "5929920",
    "end": "5934198"
  },
  {
    "text": "uh yeah it's a great question okay so let's make a conscious choice about that and this is actually a great time to do",
    "start": "5935980",
    "end": "5942219"
  },
  {
    "text": "that so uh 302 we're going to 350. uh",
    "start": "5942219",
    "end": "5947500"
  },
  {
    "text": "let's see what what else do we want so let me describe to you what it was what it is I will talk about and then we'll",
    "start": "5947500",
    "end": "5952960"
  },
  {
    "text": "make a decision together about a break thanks and if I were in your shoes I would be wanting a break so I won't I",
    "start": "5952960",
    "end": "5958900"
  },
  {
    "text": "won't be offended I'll understand on the other hand I hope you're also as curious as uh as I might be",
    "start": "5958900",
    "end": "5964900"
  },
  {
    "text": "all right so what we're going to talk about next is is how to further improve the API by throwing out some of these",
    "start": "5964900",
    "end": "5971860"
  },
  {
    "text": "things so we we came with the API we simplified and generalized it now I want to make it even more regular by throwing",
    "start": "5971860",
    "end": "5978460"
  },
  {
    "text": "away some of the pieces and replacing by the standard abstractions if you came to my keynote I hinted at it if you came to my",
    "start": "5978460",
    "end": "5985360"
  },
  {
    "text": "30-minute session earlier today I talked about explicitly that's exactly what it is",
    "start": "5985360",
    "end": "5990699"
  },
  {
    "text": "we're going to talk about we can use standard abstractions that we can then reshape the semantics to be of a very",
    "start": "5990699",
    "end": "5996820"
  },
  {
    "text": "regular form Less ad hoc very regular form which is this homomorphism thing and then and then go through some more",
    "start": "5996820",
    "end": "6002940"
  },
  {
    "text": "much simpler examples much more quickly it'll hopefully give you an idea of the breadth of some of the bread I don't",
    "start": "6002940",
    "end": "6008340"
  },
  {
    "text": "know what the full breadth of this methodology is it's something that I'm exploring right now okay so",
    "start": "6008340",
    "end": "6013679"
  },
  {
    "text": "um so uh who would like a breaking for how long and we have so information we",
    "start": "6013679",
    "end": "6019980"
  },
  {
    "text": "have a 47 minutes including break",
    "start": "6019980",
    "end": "6025739"
  },
  {
    "text": "okay so we designed an API this is of course rushed through really",
    "start": "6025739",
    "end": "6031380"
  },
  {
    "text": "we would explore all these other options more deeply we don't have enough time to do that I'm",
    "start": "6031380",
    "end": "6037560"
  },
  {
    "text": "sorry um it would be Illuminating to do it more deeply",
    "start": "6037560",
    "end": "6042780"
  },
  {
    "text": "and of course there are all kinds of other operations you know to explore and and then you know look for what",
    "start": "6042780",
    "end": "6048719"
  },
  {
    "text": "implication that they have this fascinating uh tension about you know generality uh",
    "start": "6048719",
    "end": "6056699"
  },
  {
    "text": "what implementability and expressiveness that kind of thing we would want to explore much more deeply and so on so",
    "start": "6056699",
    "end": "6062100"
  },
  {
    "text": "this will give you kind of a taste it's a bit of an artificial uh exercise but but I hope it taste of the of the",
    "start": "6062100",
    "end": "6068880"
  },
  {
    "text": "experience of course you've done Lots I assume you've done lots of software design talking about kind of from a denotational perspective",
    "start": "6068880",
    "end": "6076620"
  },
  {
    "text": "okay so we designed a domain specific vocabulary that's how we do right that's a domain specific vocabulary an embedded",
    "start": "6077460",
    "end": "6083460"
  },
  {
    "text": "language so we're done let me go home um oh wait we wanted to make some improvements okay so we did the improvements that we go home but I want",
    "start": "6083460",
    "end": "6090360"
  },
  {
    "text": "to suggest let's hang around a little bit longer and look at this question of can we can",
    "start": "6090360",
    "end": "6096239"
  },
  {
    "text": "we give up can we let go of more of the vocabulary we defined in exchange for",
    "start": "6096239",
    "end": "6101400"
  },
  {
    "text": "something standard and we reuse standard vocabularies I talked about this bore I'll just kind of quickly recap why would we want to",
    "start": "6101400",
    "end": "6108480"
  },
  {
    "text": "if we use standard vocabulary we get to leverage things that people already know okay they already know the names and the",
    "start": "6108480",
    "end": "6115440"
  },
  {
    "text": "types of these operations that's a hint they also know some properties of the",
    "start": "6115440",
    "end": "6120960"
  },
  {
    "text": "operations okay well when I say they know them I mean we know we have to",
    "start": "6120960",
    "end": "6126179"
  },
  {
    "text": "Define ours that so that they're Law Abiding and they are they are able to",
    "start": "6126179",
    "end": "6131580"
  },
  {
    "text": "expect it so they can expect that laws hold um and those laws are fairly",
    "start": "6131580",
    "end": "6137520"
  },
  {
    "text": "constraining on what kinds of things can be functioned applicative and so on okay",
    "start": "6137520",
    "end": "6142619"
  },
  {
    "text": "and then and then there's a whole ecosystem support so for instance in Haskell I assume this is true of scholar",
    "start": "6142619",
    "end": "6147900"
  },
  {
    "text": "scholar Z or something like that um there are these classes and uh um",
    "start": "6147900",
    "end": "6152940"
  },
  {
    "text": "well class is an interface which means it has two sides all right it's this thing in between two sides so there's",
    "start": "6152940",
    "end": "6158219"
  },
  {
    "text": "the implementations that they're the inhabitants in the words of the uh interface and then there are the uses of",
    "start": "6158219",
    "end": "6164100"
  },
  {
    "text": "the interface and some functionality is in our library that uses that only uses",
    "start": "6164100",
    "end": "6169980"
  },
  {
    "text": "these interfaces so we've got some polymorphic functionality so for instance uh if we have if we know",
    "start": "6169980",
    "end": "6175739"
  },
  {
    "text": "something is a monoid then we can take a list of them and we can combine them all together okay so that function needed to be a",
    "start": "6175739",
    "end": "6183480"
  },
  {
    "text": "primitive of the monoid class I think it so happens it is for efficient implementability but it has a default so",
    "start": "6183480",
    "end": "6189239"
  },
  {
    "text": "so there are some operations that one can Define that only uh go through uh a",
    "start": "6189239",
    "end": "6195179"
  },
  {
    "text": "certain interface that means they're polymorphic over so that means that there's some functionality out there in libraries",
    "start": "6195179",
    "end": "6201020"
  },
  {
    "text": "that if I Implement functor instead of make up my own name I can use that code",
    "start": "6201020",
    "end": "6207480"
  },
  {
    "text": "with my new type so there's some Library code that didn't know about my type",
    "start": "6207480",
    "end": "6212940"
  },
  {
    "text": "in my type and then I Implement those interfaces now that Library code works with my time so that's when my ecosystem",
    "start": "6212940",
    "end": "6218040"
  },
  {
    "text": "support let me get kind of multiplicative power we get all these uh all these uh generic",
    "start": "6218040",
    "end": "6225600"
  },
  {
    "text": "module classes in other words polymorphic assuming some some class constraints over here and then we got all these class instances over here and",
    "start": "6225600",
    "end": "6232500"
  },
  {
    "text": "we get to multiply them we get to use all these combinations the laws themselves so each class comes",
    "start": "6232500",
    "end": "6241800"
  },
  {
    "text": "with laws that laws give me a sanity check even if I weren't particularly motivated to implement function to",
    "start": "6241800",
    "end": "6248520"
  },
  {
    "text": "provide a functor instance for my type if I do then it raises the question of do I",
    "start": "6248520",
    "end": "6255179"
  },
  {
    "text": "satisfy the laws if I don't I could say no problem I'll just back off and not call it a functor",
    "start": "6255179",
    "end": "6260940"
  },
  {
    "text": "but I think what I'd rather do is say huh maybe I can improve my design",
    "start": "6260940",
    "end": "6266400"
  },
  {
    "text": "in such a way that does satisfy the laws so the laws are a really good sign they're a sanity check they're they're a",
    "start": "6266400",
    "end": "6272340"
  },
  {
    "text": "guidance there's something that I call a dow check Okay so",
    "start": "6272340",
    "end": "6278600"
  },
  {
    "text": "I said before I want to minimize invention and that's one reason to use standard vocabulary",
    "start": "6279840",
    "end": "6285860"
  },
  {
    "text": "one reason to minimize invention is that the Universe has some pretty good ideas",
    "start": "6286080",
    "end": "6291380"
  },
  {
    "text": "mathematicians have picked up on some of those ideas right and grappled with them and look for patterns and so on and",
    "start": "6291380",
    "end": "6296639"
  },
  {
    "text": "whether you say it's the mathematicians or the universe or whatever there's something there's some some source of inevitability or some patterns",
    "start": "6296639",
    "end": "6303780"
  },
  {
    "text": "that are out there and I want to tap into them so as much as I as much as I find that I",
    "start": "6303780",
    "end": "6309600"
  },
  {
    "text": "can use these abstract patterns it means that I'm in a flow I'm in the Dow okay rather than being in my cleverness",
    "start": "6309600",
    "end": "6316860"
  },
  {
    "text": "which is fun too but it's not as sort of Deep uh",
    "start": "6316860",
    "end": "6323179"
  },
  {
    "text": "Broad and Powerful so and then as as I hope we'll see we",
    "start": "6323179",
    "end": "6329699"
  },
  {
    "text": "get specification and laws for free that's a big payoff all righty so standard vocabulary and",
    "start": "6329699",
    "end": "6336360"
  },
  {
    "text": "Haskell means tight classes um it's really about abstract algebra and",
    "start": "6336360",
    "end": "6342780"
  },
  {
    "text": "Haskell abstract algebra shows up in a recognizable form of these things we call tech classes that really come from",
    "start": "6342780",
    "end": "6348060"
  },
  {
    "text": "mathematics not from not from Haskell so of course they're not a Haskell thing they may show up in Scala for instance",
    "start": "6348060",
    "end": "6354480"
  },
  {
    "text": "in a way that's also easily recognizable but they also show up in scheme that has no you know static type system",
    "start": "6354480",
    "end": "6359820"
  },
  {
    "text": "already a bunch of them if you use a racket but still if you if we keep them in mind",
    "start": "6359820",
    "end": "6365940"
  },
  {
    "text": "we can apply them to other languages it's very convenient and Haskell because Haskell will tell us exactly yes you are you know going through the interface in",
    "start": "6365940",
    "end": "6372060"
  },
  {
    "text": "a type consistent way or not all right so let's look at some",
    "start": "6372060",
    "end": "6377940"
  },
  {
    "text": "interfaces and one that I always like to start with is monoid I like monoid start with monoid rather",
    "start": "6377940",
    "end": "6384600"
  },
  {
    "text": "than functor Mona duplicative because it's it's a simpler thing it's a it's a monoids are types right whereas functors",
    "start": "6384600",
    "end": "6392280"
  },
  {
    "text": "are type families type Constructors so monoid has two operations and has what we call them",
    "start": "6392280",
    "end": "6397860"
  },
  {
    "text": "empty and pin I personally really don't like these names because they're",
    "start": "6397860",
    "end": "6402960"
  },
  {
    "text": "well they're hard to say and they're they sound concrete which helps people for those cases and harms them for other",
    "start": "6402960",
    "end": "6409739"
  },
  {
    "text": "cases things are not mapendi but that's what I'm going to call them okay so we have this empty of Type M so in so we're",
    "start": "6409739",
    "end": "6417119"
  },
  {
    "text": "saying something's a mono if it has two operations m is a mono it has these two operations empty and mapind and these",
    "start": "6417119",
    "end": "6422280"
  },
  {
    "text": "are the types okay but it's not just that it's laws okay sadly our type system and Haskell isn't",
    "start": "6422280",
    "end": "6429000"
  },
  {
    "text": "expressive enough that these laws are enforced by the compiler that's a bummer when we have a more expressive type system if you had dependent types then",
    "start": "6429000",
    "end": "6434400"
  },
  {
    "text": "absolutely the compiler will verify something's really genuinely satisfy the laws that shows up and dependent type says",
    "start": "6434400",
    "end": "6440760"
  },
  {
    "text": "you have to include proofs encoded as uh as a values in a dependent type system",
    "start": "6440760",
    "end": "6446040"
  },
  {
    "text": "so there are the laws all right why do laws matter so this is this is",
    "start": "6446040",
    "end": "6452400"
  },
  {
    "text": "one reason laws matter because they allow compositional reasoning in other words they allow decomposition of",
    "start": "6452400",
    "end": "6457560"
  },
  {
    "text": "reasoning so I want to do some reasoning and I and so I think algebra has",
    "start": "6457560",
    "end": "6464040"
  },
  {
    "text": "discovered things like monoid and group and ring and that kind of thing exactly in order to do some reusable reasoning",
    "start": "6464040",
    "end": "6469380"
  },
  {
    "text": "it's the same value we want reusable code they want reusable proofs it's really the same kind of thing",
    "start": "6469380",
    "end": "6476699"
  },
  {
    "text": "so by defining these abstract interfaces and their laws the laws enable us to do some reasoning that applies for all uh",
    "start": "6476699",
    "end": "6484080"
  },
  {
    "text": "for all monoids for instance so that's the mark that's done over here",
    "start": "6484080",
    "end": "6489119"
  },
  {
    "text": "I prove that my type is a monoid now that reasoning applies to my type that's",
    "start": "6489119",
    "end": "6494639"
  },
  {
    "text": "what I'm talking about we allow compositional reasoning so lots and lots of reuse of the",
    "start": "6494639",
    "end": "6499679"
  },
  {
    "text": "reasoning that happens about monoids in general Okay so uh what my knowledge have we seen today",
    "start": "6499679",
    "end": "6506699"
  },
  {
    "text": "have we seen any monoids well I'm not talking about is image of",
    "start": "6506699",
    "end": "6512040"
  },
  {
    "text": "monoid because I um uh because that's what we're about to decide but we've",
    "start": "6512040",
    "end": "6517619"
  },
  {
    "text": "seen semantics and those semantics are going to be suggestive so",
    "start": "6517619",
    "end": "6524880"
  },
  {
    "text": "you can forget everything I said in that last sentence if it's not helpful it didn't sound very helpful to me so what",
    "start": "6524880",
    "end": "6530040"
  },
  {
    "text": "kind of monoids have we seen today I want mono it's not what kind of",
    "start": "6530040",
    "end": "6536699"
  },
  {
    "text": "monoids so",
    "start": "6536699",
    "end": "6540440"
  },
  {
    "text": "there we go so color the color type that there's the completely transparent color",
    "start": "6543000",
    "end": "6548900"
  },
  {
    "text": "and then there's the color overlay operation so is that so is that is the",
    "start": "6548900",
    "end": "6555600"
  },
  {
    "text": "empty color the identity for that operation and is that operation associative",
    "start": "6555600",
    "end": "6560699"
  },
  {
    "text": "um well we can't answer that question because I didn't tell you what uh I didn't tell you you know what color is and how how that how overseas defined",
    "start": "6560699",
    "end": "6567840"
  },
  {
    "text": "but yes yeah absolutely okay",
    "start": "6567840",
    "end": "6573320"
  },
  {
    "text": "okay so do you mean images okay yeah so so uh so a possibility is images",
    "start": "6579480",
    "end": "6584760"
  },
  {
    "text": "themselves with the overlay operation and then what might an identity be",
    "start": "6584760",
    "end": "6590060"
  },
  {
    "text": "yeah yeah the entirely transparent entirely invisible image yeah that's a great question and the answer is yes as",
    "start": "6590940",
    "end": "6597840"
  },
  {
    "text": "we'll see yes given a specific implementation all",
    "start": "6597840",
    "end": "6603119"
  },
  {
    "text": "right well it doesn't so the question is given",
    "start": "6603119",
    "end": "6608219"
  },
  {
    "text": "us a specific implementation no because we're not asking about implementations it's going to be a meaning question but",
    "start": "6608219",
    "end": "6614400"
  },
  {
    "text": "given a certain meaning",
    "start": "6614400",
    "end": "6617178"
  },
  {
    "text": "uh yeah yeah yeah okay so",
    "start": "6624300",
    "end": "6628520"
  },
  {
    "text": "great yeah great great great great these are wonderful questions",
    "start": "6631020",
    "end": "6636659"
  },
  {
    "text": "um so the question as I understood it is uh are you talking about is the implementation associative",
    "start": "6636659",
    "end": "6643560"
  },
  {
    "text": "um or is the meaning associative or are we are we saying we want associativity so let's come up with implementation",
    "start": "6643560",
    "end": "6648960"
  },
  {
    "text": "that is associative okay so what I say is this um",
    "start": "6648960",
    "end": "6655040"
  },
  {
    "text": "uh I don't want to say let's come up with an associative implementation what I want to say is let's come up with a correct implementation",
    "start": "6655380",
    "end": "6662219"
  },
  {
    "text": "okay correct meaning it it is consistent with the denotation okay and then ask",
    "start": "6662219",
    "end": "6667380"
  },
  {
    "text": "about the denotation are you associative so I think what we like is we we like that we'd like these denotations",
    "start": "6667380",
    "end": "6673199"
  },
  {
    "text": "particularly image overlay to be associative I don't want to say I like it so much that if I thought I'm wrong I'm going to",
    "start": "6673199",
    "end": "6679080"
  },
  {
    "text": "have a temper tantrum or I'm going to change what overlay means or something like that I'm just saying it's a desirable property okay and it's a property of the",
    "start": "6679080",
    "end": "6685560"
  },
  {
    "text": "denotation and if it's true of the denotation then it will be true of our type",
    "start": "6685560",
    "end": "6691739"
  },
  {
    "text": "yeah and that pattern things that are true of the denotation are true of our type that's the central theme Here",
    "start": "6691739",
    "end": "6699020"
  },
  {
    "text": "yeah yeah so we're going to guide our meanings early on and then the meanings will guide the implementation we don't",
    "start": "6701100",
    "end": "6706199"
  },
  {
    "text": "want the meanings to have nice properties and therefore the implementations if they're correct must have those properties because correct means they agree with",
    "start": "6706199",
    "end": "6712679"
  },
  {
    "text": "the denotation so are we deciding overly will be",
    "start": "6712679",
    "end": "6718739"
  },
  {
    "text": "associative I think what I'm saying is it's a very appealing property it sounds like a really good candidate and I",
    "start": "6718739",
    "end": "6724380"
  },
  {
    "text": "happen to know the answer is yes it will be okay but if I didn't know the answer I would",
    "start": "6724380",
    "end": "6730199"
  },
  {
    "text": "allow myself to desire to be true but not so strongly to Blind me to whether it's true or not or whether it would",
    "start": "6730199",
    "end": "6735780"
  },
  {
    "text": "have harmful implications for it to be true I happen to know that it is true and harmfully yeah but I don't I",
    "start": "6735780",
    "end": "6743219"
  },
  {
    "text": "wouldn't want to say it's you know associativity or die yeah thanks uh well great uh let's start",
    "start": "6743219",
    "end": "6750719"
  },
  {
    "text": "over here and then I'm going to scan left or right",
    "start": "6750719",
    "end": "6754580"
  },
  {
    "text": "okay so so interesting ideas about how we might get to color being associative",
    "start": "6768739",
    "end": "6773940"
  },
  {
    "text": "so two questions in Flight one is is the color with overlay Associated there's image overly associative and and the",
    "start": "6773940",
    "end": "6779520"
  },
  {
    "text": "answer will turn out to be yes image overlay is because color is and we'll see how that's the case and then and",
    "start": "6779520",
    "end": "6784739"
  },
  {
    "text": "then what you're saying is that is that there's a technique I think what you're saying there's a technique for proving",
    "start": "6784739",
    "end": "6789840"
  },
  {
    "text": "associativity which is to look at something in terms of function composition which we know to be associativity so we think of color as",
    "start": "6789840",
    "end": "6796020"
  },
  {
    "text": "maybe a color is a functioning like thing well color is a functioning like thing it's not entirely color surface",
    "start": "6796020",
    "end": "6801360"
  },
  {
    "text": "properties and so on but color one of the aspects of a surface is what it does to light certain light hits it another",
    "start": "6801360",
    "end": "6808380"
  },
  {
    "text": "light leaves it so like transmission emission and trans something the other",
    "start": "6808380",
    "end": "6814860"
  },
  {
    "text": "word what goes through and what doesn't yeah okay so that sounds like a functioning like thing and that may explain why uh why color overlay is",
    "start": "6814860",
    "end": "6821880"
  },
  {
    "text": "associative I never thought of that before I love that idea it might indeed explain it and it feels right because",
    "start": "6821880",
    "end": "6827280"
  },
  {
    "text": "because when we put something on top of the other color is going to go through light's going to go through one change go through the other and change that",
    "start": "6827280",
    "end": "6833580"
  },
  {
    "text": "sounds very function composition to me cool okay and scan from left to right",
    "start": "6833580",
    "end": "6841400"
  },
  {
    "text": "uh yeah yeah yeah so uh-huh yeah so so there are some",
    "start": "6843679",
    "end": "6851040"
  },
  {
    "text": "Transformations which are monoidal also like I can translate and translate right",
    "start": "6851040",
    "end": "6856440"
  },
  {
    "text": "if I can translate and then translate and then translate right so if I do three translations which two I do",
    "start": "6856440",
    "end": "6861900"
  },
  {
    "text": "together and I'm not talking about changing the order that sounds like it's probably associate yes it's associative yeah it's associative for a more for a",
    "start": "6861900",
    "end": "6869760"
  },
  {
    "text": "simple reason which is exactly this reason which you can think of you can think of translation as a function",
    "start": "6869760",
    "end": "6875400"
  },
  {
    "text": "all right and and you can think of multiple translations as function composition and if you do that",
    "start": "6875400",
    "end": "6880860"
  },
  {
    "text": "successfully it has to be Associated because uh composition is associative a function composition and that's really",
    "start": "6880860",
    "end": "6886440"
  },
  {
    "text": "the same game as we're playing here now that I think of it which is we can explain things like translation in terms",
    "start": "6886440",
    "end": "6891780"
  },
  {
    "text": "of some model and then use the problem that model happens to be a function and use properties of that model like associativity to back up to show that",
    "start": "6891780",
    "end": "6898800"
  },
  {
    "text": "that our other model so even if even if uh translation weren't conceptualized as",
    "start": "6898800",
    "end": "6904500"
  },
  {
    "text": "a function from location equation it could be and that would explain why it's why these kind of combinations are associative",
    "start": "6904500",
    "end": "6910199"
  },
  {
    "text": "Okay so",
    "start": "6910199",
    "end": "6913639"
  },
  {
    "text": "you know yeah yeah so so far all this",
    "start": "6937380",
    "end": "6942420"
  },
  {
    "text": "Precision has gone to what to none of it's gone to hell and um I'm now the image and I'm getting like worried about",
    "start": "6942420",
    "end": "6948179"
  },
  {
    "text": "what am I you know using time in such a way the time that we have in such a way that we'll get to an example of how",
    "start": "6948179",
    "end": "6955080"
  },
  {
    "text": "um I will try to get to an example of how and I'll keep an eye on the time and yes it's absolutely true yeah so okay",
    "start": "6955080",
    "end": "6963440"
  },
  {
    "text": "yes yes",
    "start": "6968100",
    "end": "6971719"
  },
  {
    "text": "okay so um so so there's this earlier point that that that transforms some",
    "start": "6975560",
    "end": "6980639"
  },
  {
    "text": "cells from a monoid okay and and if you look at the meaning of a Transformers function from",
    "start": "6980639",
    "end": "6985679"
  },
  {
    "text": "locations locations okay that that kind of thing always forms a monoid function from a to a forms a monoid the identity",
    "start": "6985679",
    "end": "6991739"
  },
  {
    "text": "is the the identity function is the identity of the monoid and composition is the associative operation so what",
    "start": "6991739",
    "end": "6997980"
  },
  {
    "text": "happens if we say it's no longer a location location it's two different types of locations well from one I know it doesn't even have the right type it",
    "start": "6997980",
    "end": "7003619"
  },
  {
    "text": "can't form a monoid it will form a category interesting too well a category is just like a monoid",
    "start": "7003619",
    "end": "7010219"
  },
  {
    "text": "with type uh annotations kind of a domain and range so it's exactly the same thing has identity and",
    "start": "7010219",
    "end": "7015260"
  },
  {
    "text": "associativity",
    "start": "7015260",
    "end": "7017800"
  },
  {
    "text": "yes",
    "start": "7027020",
    "end": "7029440"
  },
  {
    "text": "okay",
    "start": "7042020",
    "end": "7044800"
  },
  {
    "text": "yeah okay so if if if I impose my will or desire or something this monoidness",
    "start": "7055300",
    "end": "7061940"
  },
  {
    "text": "that is you know it's attractive to me then well that's going to restrain the possibilities",
    "start": "7061940",
    "end": "7067760"
  },
  {
    "text": "okay so I maybe I'm throwing out some other possibilities and I'm getting monoid so how do I make the cost benefit",
    "start": "7067760",
    "end": "7073520"
  },
  {
    "text": "trade up or something like that and I I think I'm going to give you a simple answer and I I think it's really an overly simplistic answer but maybe maybe",
    "start": "7073520",
    "end": "7079639"
  },
  {
    "text": "it's helpful for now which is to say let's not worry about the monoidness let's let's not kind of use it as a",
    "start": "7079639",
    "end": "7085580"
  },
  {
    "text": "gravity well to move toward lesson said just think about the denotations and try to keep them simple and precise and then",
    "start": "7085580",
    "end": "7091940"
  },
  {
    "text": "ask given those denotations which we came up with independent of monoidness",
    "start": "7091940",
    "end": "7097219"
  },
  {
    "text": "are they monoids or not if we get some near-misses we'll go back",
    "start": "7097219",
    "end": "7103040"
  },
  {
    "text": "and say maybe you know maybe the monogamous is appealing enough to shift it a bit and then when we do then we'll",
    "start": "7103040",
    "end": "7108800"
  },
  {
    "text": "ask the question is it actually maybe better or not worse it was that did I improve things rather than make a sacrifice things like that",
    "start": "7108800",
    "end": "7114199"
  },
  {
    "text": "so okay so so uh the image monoid yes",
    "start": "7114199",
    "end": "7120139"
  },
  {
    "text": "absolutely so one of them is the transparent everywhere image which here I'm calling lift zero of clear so clear",
    "start": "7120139",
    "end": "7126199"
  },
  {
    "text": "as a color and then the associative operation is is over okay now but remember",
    "start": "7126199",
    "end": "7132980"
  },
  {
    "text": "this image C is a special case of image of a so what about monoids what is there are",
    "start": "7132980",
    "end": "7140300"
  },
  {
    "text": "other types of images rather than color image and monoid also Maybe okay and the answer is yes",
    "start": "7140300",
    "end": "7147800"
  },
  {
    "text": "it for every monoid a images of a is a monoid",
    "start": "7147800",
    "end": "7153260"
  },
  {
    "text": "okay so the reason that image that color image is from the monoid is the colors",
    "start": "7153260",
    "end": "7158540"
  },
  {
    "text": "formed a monoid okay that's what I meant about yes they're both monoids and color image the monoi because yes okay and",
    "start": "7158540",
    "end": "7165380"
  },
  {
    "text": "this is the definition and you know look at that they go oh that's a very regular looking definition look at that and that that's to me",
    "start": "7165380",
    "end": "7172880"
  },
  {
    "text": "comforting I like things to look pretty because it means maybe it wasn't my idea",
    "start": "7172880",
    "end": "7178639"
  },
  {
    "text": "so maybe it's actually a good idea all right um do these instances to satisfy the",
    "start": "7178639",
    "end": "7184520"
  },
  {
    "text": "monoi laws all right well that's something we have to check spell it out go through the steps try to check it all",
    "start": "7184520",
    "end": "7190280"
  },
  {
    "text": "right um yes we don't do that okay pretend we did this work",
    "start": "7190280",
    "end": "7195800"
  },
  {
    "text": "in a couple of minutes we'll see why we could have saved ourselves all that work okay but I've come back from the past",
    "start": "7195800",
    "end": "7201260"
  },
  {
    "text": "and tell you that now I came back from the future tell you that now all right so another class is functor",
    "start": "7201260",
    "end": "7207139"
  },
  {
    "text": "a so functor F has so f is a functor if it has this operation F map and this is its type",
    "start": "7207139",
    "end": "7213139"
  },
  {
    "text": "you give it an A to B and it gives you a function of F of a is to F of B's so I I'm you know this is often written",
    "start": "7213139",
    "end": "7218780"
  },
  {
    "text": "without the second set of parentheses okay so images well image has the right",
    "start": "7218780",
    "end": "7224780"
  },
  {
    "text": "kind if we hadn't generalized image you know to like image of a then we couldn't",
    "start": "7224780",
    "end": "7230659"
  },
  {
    "text": "even ask this question it wouldn't even have the right kind now it does now it's parameterized now we can ask God Is it a",
    "start": "7230659",
    "end": "7236000"
  },
  {
    "text": "functor okay well yes it is here's this operation we called lift one now we also had this conversation about well maybe",
    "start": "7236000",
    "end": "7242060"
  },
  {
    "text": "you put too much power in there if you take that power away you take funkter away so yeah we'll see uh we'll come back later and find out",
    "start": "7242060",
    "end": "7248719"
  },
  {
    "text": "how much of a hit to our ability to make a for instance an efficient",
    "start": "7248719",
    "end": "7253940"
  },
  {
    "text": "implementation and I think the answer for me is really none that I could notice but again that's coming back from",
    "start": "7253940",
    "end": "7259400"
  },
  {
    "text": "the future all right so does this one satisfy laws okay that would be an exercise to go through",
    "start": "7259400",
    "end": "7265280"
  },
  {
    "text": "the answer is yes but and I have to tell you what that means",
    "start": "7265280",
    "end": "7271040"
  },
  {
    "text": "um laws in algebra are usually equational laws",
    "start": "7271040",
    "end": "7276560"
  },
  {
    "text": "okay so there's there's a law for fmap there's actually two of them yeah they're two laws for a map there's",
    "start": "7276560",
    "end": "7282619"
  },
  {
    "text": "three laws for monoid so let's look at the monoid law again okay the monoid laws",
    "start": "7282619",
    "end": "7287960"
  },
  {
    "text": "are equalities so when I say that a law holds you should say what are you even talking",
    "start": "7287960",
    "end": "7294080"
  },
  {
    "text": "about what's equality okay so in order for a lot for the",
    "start": "7294080",
    "end": "7299540"
  },
  {
    "text": "question of do the laws hold to be satisfied in order for in order to understand what the question means we",
    "start": "7299540",
    "end": "7305119"
  },
  {
    "text": "have to say what equality means side note every time I hear somebody say the eye ammonia it really bugs me for a",
    "start": "7305119",
    "end": "7311599"
  },
  {
    "text": "variety of reasons and one reason is because it doesn't mean anything because monad has laws equality is not defined",
    "start": "7311599",
    "end": "7317960"
  },
  {
    "text": "on i o so every time you hear somebody say or some voice inside you say the io monad",
    "start": "7317960",
    "end": "7325040"
  },
  {
    "text": "maybe you'll question that it's not even wrong is what I'm suggesting",
    "start": "7325040",
    "end": "7331239"
  },
  {
    "text": "it's not even wrong because it's not denotative or denotative we know what equality means",
    "start": "7331400",
    "end": "7337300"
  },
  {
    "text": "many other deep more deeply harmful consequences of non-denotative",
    "start": "7337820",
    "end": "7343119"
  },
  {
    "text": "programming all right so uh so do we have applicative applicative has pure and",
    "start": "7343119",
    "end": "7349820"
  },
  {
    "text": "that this kind of funny apply e operation if you've got an F of functions and an F of arguments you get",
    "start": "7349820",
    "end": "7355280"
  },
  {
    "text": "F of B's sorry I could have parenthesized this to be consistent with the previous slide doesn't matter",
    "start": "7355280",
    "end": "7361040"
  },
  {
    "text": "all right so do we have pure and this guy yes pure is what I call lift zero well",
    "start": "7361040",
    "end": "7367580"
  },
  {
    "text": "what I mean is here's a candidate that type checks okay we still have to prove whether the law",
    "start": "7367580",
    "end": "7373699"
  },
  {
    "text": "is hold or not to do that we still have to decide what equality means does anybody have an idea what equality should mean on images",
    "start": "7373699",
    "end": "7381699"
  },
  {
    "text": "yeah yeah so for every location they agree with with the color at that location yeah",
    "start": "7388400",
    "end": "7394659"
  },
  {
    "text": "ah yeah yeah oh oh yeah yeah so um but also have to be defined over the same kind of regions so",
    "start": "7400219",
    "end": "7406820"
  },
  {
    "text": "um our model is that is that images are defined over every point in two space okay all images are defined everywhere",
    "start": "7406820",
    "end": "7414320"
  },
  {
    "text": "but colors have partial or full transparency so rather than saying that",
    "start": "7414320",
    "end": "7420920"
  },
  {
    "text": "image is just some kind of exists over some region we say exists everywhere and somewhere it's really pretty uninteresting",
    "start": "7420920",
    "end": "7426800"
  },
  {
    "text": "okay so a suggestion is that we give a what's called an extensional definition of equality which says the two images",
    "start": "7426800",
    "end": "7433040"
  },
  {
    "text": "agree if they agree at every point which means that which means the colors are equilateral point so assuming we",
    "start": "7433040",
    "end": "7439400"
  },
  {
    "text": "have a notion of color equality which I'll just ask you to assume for now",
    "start": "7439400",
    "end": "7444860"
  },
  {
    "text": "yes thank you another way to say what I said is it's exactly the same as function inequality well isn't that",
    "start": "7444860",
    "end": "7451219"
  },
  {
    "text": "interesting because the denotation of an image is a function so what we're saying is",
    "start": "7451219",
    "end": "7457340"
  },
  {
    "text": "is that is it equality on images is denotational equality in other words two",
    "start": "7457340",
    "end": "7462619"
  },
  {
    "text": "images are equal if and only if their meanings are equal and we know what equality means for their meanings",
    "start": "7462619",
    "end": "7469159"
  },
  {
    "text": "equality and function is extensional meaning it's equality at every point in",
    "start": "7469159",
    "end": "7474380"
  },
  {
    "text": "the in the domain so this is another example of I want to ask a question in my type I look at its meaning and I ask",
    "start": "7474380",
    "end": "7481040"
  },
  {
    "text": "the same question and its meaning and that gives me the question that gives me the answer that I'm looking for and as long as I do this kind of patterns where",
    "start": "7481040",
    "end": "7487639"
  },
  {
    "text": "I go over from like to my type I ask the claim question the analogous question is meaning and then I use a consistent",
    "start": "7487639",
    "end": "7493520"
  },
  {
    "text": "answer I'll get very nice properties for instance every property that you expect for equality holds its uh you",
    "start": "7493520",
    "end": "7500480"
  },
  {
    "text": "know symmetric reflexive transitive you know that kind of thing for instance will hold because it holds in the",
    "start": "7500480",
    "end": "7506119"
  },
  {
    "text": "semantic domain so that's the same game over and over okay all right so so we get an",
    "start": "7506119",
    "end": "7512599"
  },
  {
    "text": "applicative instance maybe but I'm just claiming hand waving claiming that the laws hold so remember that that's I",
    "start": "7512599",
    "end": "7517699"
  },
  {
    "text": "think I owe you or we owe each other and then given these definitions then I",
    "start": "7517699",
    "end": "7522800"
  },
  {
    "text": "don't know if you know this but applicative has these convenience functions lift A2 lift A3 and so on they're just defined in terms of fmap",
    "start": "7522800",
    "end": "7529340"
  },
  {
    "text": "and this guy and another name for fmap is this is the affix operator so these are definitions of lift A2 lift A3 and",
    "start": "7529340",
    "end": "7535460"
  },
  {
    "text": "so on so do they satisfy the laws okay that's a debt we have right now",
    "start": "7535460",
    "end": "7542599"
  },
  {
    "text": "putting off this debt because instead of doing a lot of work now we're going to do a very little work later",
    "start": "7542599",
    "end": "7547719"
  },
  {
    "text": "okay so now let's look at the semantics of images again",
    "start": "7547719",
    "end": "7553420"
  },
  {
    "text": "so so this is something we already said the meaning of ah okay so let's look at the monoid",
    "start": "7553520",
    "end": "7559340"
  },
  {
    "text": "instance so all I've done is renamed before I had a set of Epsilon I actually",
    "start": "7559340",
    "end": "7564500"
  },
  {
    "text": "don't remember if I gave it the name but the the invisible everywhere image I'd like lift zero of clear or something",
    "start": "7564500",
    "end": "7569599"
  },
  {
    "text": "like that and we have overlay which now instead of calling it over I'm calling them a pinned so I've done is I've thrown away",
    "start": "7569599",
    "end": "7575719"
  },
  {
    "text": "two maybe operations out of my API and replace them by two familiar operations",
    "start": "7575719",
    "end": "7581360"
  },
  {
    "text": "and now I'm just rephrasing the semantics because I've just renamed them so the meaning of of this guy is going",
    "start": "7581360",
    "end": "7588260"
  },
  {
    "text": "to be the function that at every Point p is empty it's the invisible color so that's the invisible image that's the",
    "start": "7588260",
    "end": "7593780"
  },
  {
    "text": "invisible color except we're not just doing color right now we're doing for any monoid so as",
    "start": "7593780",
    "end": "7599960"
  },
  {
    "text": "long as so uh an image over a is as long as a is a monoid then this empty is well",
    "start": "7599960",
    "end": "7606800"
  },
  {
    "text": "defined and this combining the pinned is well defined and we're going to use those two guys to define the semantics",
    "start": "7606800",
    "end": "7612860"
  },
  {
    "text": "of of uh the monode instance for images so that's what's happening here this is",
    "start": "7612860",
    "end": "7619340"
  },
  {
    "text": "really something I already showed you I'm just using different terminology and and generalize from colors to arbitrary monoids",
    "start": "7619340",
    "end": "7625760"
  },
  {
    "text": "okay so there's a mod there's a mono distance here's a functor instance",
    "start": "7625760",
    "end": "7632780"
  },
  {
    "text": "so all I'm doing again is I'm just I'm just taking the the definition that I gave before I'm sorry it was like many",
    "start": "7632780",
    "end": "7637940"
  },
  {
    "text": "slides ago in an hour ago or whatever but if you go back and you look I'm just changing the names of things and doing a",
    "start": "7637940",
    "end": "7643460"
  },
  {
    "text": "little bit of refactoring there's no new information here the meaning of fmap f over the image",
    "start": "7643460",
    "end": "7649880"
  },
  {
    "text": "okay oh I left out a mu here so sorry this should say a mu of image at p and",
    "start": "7649880",
    "end": "7657679"
  },
  {
    "text": "this should say mu of image here this is a typo fix the typo",
    "start": "7657679",
    "end": "7662840"
  },
  {
    "text": "all right so I'm just saying that what I said before and here's applicative",
    "start": "7662840",
    "end": "7668119"
  },
  {
    "text": "darn I did it again okay so the meaning of pure is Lambda p",
    "start": "7668119",
    "end": "7673159"
  },
  {
    "text": "a so this is the constant this is the monochrome image except more generally and the meaning of a",
    "start": "7673159",
    "end": "7679300"
  },
  {
    "text": "application thingy is again I forgot the MU here and here apologies",
    "start": "7679300",
    "end": "7684679"
  },
  {
    "text": "so I'm going to sample the function valued image okay when we get to applicative we have",
    "start": "7684679",
    "end": "7690800"
  },
  {
    "text": "function valued images here so I'm going to take the function valued image and Sample it a p to get a function out I'm",
    "start": "7690800",
    "end": "7696139"
  },
  {
    "text": "going to take the argument value damage to sample that P to get an argument out put the mues in that's where the sampling really comes in",
    "start": "7696139",
    "end": "7701900"
  },
  {
    "text": "and then we're going to apply the function at that point to the argument at that point we'll get a result at that point",
    "start": "7701900",
    "end": "7707659"
  },
  {
    "text": "so is it actually useful to have function valued images well it's useful for saying this but that's not really an",
    "start": "7707659",
    "end": "7714080"
  },
  {
    "text": "answer right because we didn't really need to say this but yeah it is actually pretty useful",
    "start": "7714080",
    "end": "7719780"
  },
  {
    "text": "we can also look at a couple of other interfaces monad and common ad okay okay I'm giving the joiny version rather than",
    "start": "7719780",
    "end": "7725960"
  },
  {
    "text": "the Bindy version it's the one I almost always prefer so return well we already talked about pure pure and return the",
    "start": "7725960",
    "end": "7731420"
  },
  {
    "text": "same thing so ignore that so join means if we have uh",
    "start": "7731420",
    "end": "7737179"
  },
  {
    "text": "okay all right all right so now I'm now what I'm looking at is what am I really trying to say here oh I'm just trying to",
    "start": "7737179",
    "end": "7742280"
  },
  {
    "text": "tell you what the abstract interfaces of these two classes what these two classes are except I'm giving you the join version so monad and Como net has a pure",
    "start": "7742280",
    "end": "7750139"
  },
  {
    "text": "return that injects an a into an F of a and join takes an F of f of a down to an F of a",
    "start": "7750139",
    "end": "7755780"
  },
  {
    "text": "and if I have F of f of f of f of a I just apply a few joins to it eventually I get an F of a and then I can't go any",
    "start": "7755780",
    "end": "7762260"
  },
  {
    "text": "further yes exactly coma net does exactly this uh the the Dual thing if I have an F of a I can get",
    "start": "7762260",
    "end": "7769099"
  },
  {
    "text": "an A out of it instead of if I have an A I can get F of a out of it and co-join takes an F makes an F of f of a okay if",
    "start": "7769099",
    "end": "7776060"
  },
  {
    "text": "I had a few times I get F of f of a and there are laws that hold and these",
    "start": "7776060",
    "end": "7781580"
  },
  {
    "text": "operations particularly the co-monet operation is actually super useful it means I can take uh if if my image has",
    "start": "7781580",
    "end": "7788599"
  },
  {
    "text": "this my image status inhabits this class it means I can take an image and",
    "start": "7788599",
    "end": "7794599"
  },
  {
    "text": "generate an image of images now what would I want to do with that well it turns out that the common ad",
    "start": "7794599",
    "end": "7799760"
  },
  {
    "text": "that is inevitably implied by the denotation what it does is it takes my whole image",
    "start": "7799760",
    "end": "7806659"
  },
  {
    "text": "and then at every point in space it will take the entire image and shift it so",
    "start": "7806659",
    "end": "7812420"
  },
  {
    "text": "that that point is the origin okay so actually give a difference so it'll be an image of images and those",
    "start": "7812420",
    "end": "7818719"
  },
  {
    "text": "images over space are all going to be different because they're all going to be shiftings of the original into the most convenient possible coordinate",
    "start": "7818719",
    "end": "7824900"
  },
  {
    "text": "system once we get there we can do something like a game of life cellular automata but of course continuous not discrete",
    "start": "7824900",
    "end": "7831020"
  },
  {
    "text": "that's very groovy it gives a super convenient way for every point then to look at its neighborhood region",
    "start": "7831020",
    "end": "7837500"
  },
  {
    "text": "okay and look at as much or little of it as it wants we give it all of it we give an entire",
    "start": "7837500",
    "end": "7842540"
  },
  {
    "text": "infinite image and then saying go crazy sample it once 100 times sample it over a finite region some kind",
    "start": "7842540",
    "end": "7849020"
  },
  {
    "text": "of convolution who knows so super useful all right",
    "start": "7849020",
    "end": "7854679"
  },
  {
    "text": "okay so let's see what I want to do here",
    "start": "7855679",
    "end": "7860800"
  },
  {
    "text": "um now we can do I'm just going to abbreviate here now we can do some refactoring and we can take our original",
    "start": "7861739",
    "end": "7867800"
  },
  {
    "text": "specification okay this is the minor specification I just that I just shared and now we can",
    "start": "7867800",
    "end": "7873739"
  },
  {
    "text": "say this code really math reminds me of something this actually what happened I",
    "start": "7873739",
    "end": "7879440"
  },
  {
    "text": "like to say this this looks so familiar I got a function and then something applied to P my pin something applied to",
    "start": "7879440",
    "end": "7886340"
  },
  {
    "text": "P I've seen that somewhere where have I seen that I'm poking around in the Prelude or in the standard",
    "start": "7886340",
    "end": "7892940"
  },
  {
    "text": "library and I find this oh my God function is a monoid",
    "start": "7892940",
    "end": "7898460"
  },
  {
    "text": "when its range is a monoid and these are the definitions which looks an awful lot like this",
    "start": "7898460",
    "end": "7904520"
  },
  {
    "text": "okay and then I just do a little bit of refactoring so all I did is I took this code and this knowledge and this isn't",
    "start": "7904520",
    "end": "7912139"
  },
  {
    "text": "code this is math but I took this knowledge and I refactored so the bottom code is equivalent to the first one",
    "start": "7912139",
    "end": "7917420"
  },
  {
    "text": "given the definition of empty for functions and mapend for",
    "start": "7917420",
    "end": "7922820"
  },
  {
    "text": "functions okay so this is the kind of package I started to notice that the more I teased on the",
    "start": "7922820",
    "end": "7929000"
  },
  {
    "text": "more I found that they show up everywhere if I look for them and when they don't show up it's my bug I have to go back and fix my API my language",
    "start": "7929000",
    "end": "7935599"
  },
  {
    "text": "design and specification so what we find here is that the meaning of memtheism empty the meaning of mapend",
    "start": "7935599",
    "end": "7942920"
  },
  {
    "text": "is mapend of the meanings that has a name so in other words mu distributes it with",
    "start": "7942920",
    "end": "7950480"
  },
  {
    "text": "the monoid operations and that has a name which is it's a modern homomorphism okay and I thought this was just cute",
    "start": "7950480",
    "end": "7956360"
  },
  {
    "text": "the first time I saw it and then I saw it happen again and again and now I know that it must happen everywhere or I have",
    "start": "7956360",
    "end": "7961940"
  },
  {
    "text": "a bug in my design so if we look at the functor specification we do a similar sort of thing we can say that looks a bit",
    "start": "7961940",
    "end": "7968119"
  },
  {
    "text": "familiar well I mean this one you really have to go looking for to say is there something more familiar than function",
    "start": "7968119",
    "end": "7973820"
  },
  {
    "text": "composition so it's not really more familiar it's just that it's the functional composition also shows up in the functor instance of functions boom",
    "start": "7973820",
    "end": "7980960"
  },
  {
    "text": "that means I can re-express this like this this is actually the first case of this I've found",
    "start": "7980960",
    "end": "7986540"
  },
  {
    "text": "so meaning of fmap is fmap of the meanings in other words it's a functor",
    "start": "7986540",
    "end": "7991880"
  },
  {
    "text": "homomorphism which has another name which is naturality that",
    "start": "7991880",
    "end": "7998260"
  },
  {
    "text": "naturality yeah yeah you'll hear that coming up that's that's the functor morphism",
    "start": "7998260",
    "end": "8003579"
  },
  {
    "text": "so then I went then I went looking for it after I saw two of them maybe the next one I discovered was the applicative actually and I looked at",
    "start": "8003579",
    "end": "8009400"
  },
  {
    "text": "this and I thought now that I've seen also somewhere it's in the applicative instance for functions it's not exactly",
    "start": "8009400",
    "end": "8015820"
  },
  {
    "text": "this it's something slightly more General now I can refactor and see this meaning a pure is pure the meaning of the apply e thing is apply you think of",
    "start": "8015820",
    "end": "8022420"
  },
  {
    "text": "the meanings so it's an applicative morphism it works for it works for monad it works",
    "start": "8022420",
    "end": "8029079"
  },
  {
    "text": "for Como and Ed we don't have foldables and traversables that would be interesting we don't have",
    "start": "8029079",
    "end": "8034900"
  },
  {
    "text": "multiple traversables because I guess it's continuous there's too much maybe we could have Traverse those won't be some kind of integral thing I'm not",
    "start": "8034900",
    "end": "8040300"
  },
  {
    "text": "really sure all right so it's late to this principle that I call the the semantic type",
    "start": "8040300",
    "end": "8045699"
  },
  {
    "text": "classmorphism principle and this is one way of saying it the instance's meaning follows the meanings instance okay so",
    "start": "8045699",
    "end": "8053320"
  },
  {
    "text": "the instances meaning is here here's the meanings instance here",
    "start": "8053320",
    "end": "8058719"
  },
  {
    "text": "so maybe that doesn't help that doesn't often seem to help people but this is what it is precisely",
    "start": "8058719",
    "end": "8065380"
  },
  {
    "text": "so every type acts like its meaning is another way to say it so when I tell you think of a image as a function from",
    "start": "8065380",
    "end": "8071800"
  },
  {
    "text": "points I'm telling you the truth in other words if you think of it that",
    "start": "8071800",
    "end": "8078460"
  },
  {
    "text": "way everything you can deduce is true okay it's not like think of it this way",
    "start": "8078460",
    "end": "8083500"
  },
  {
    "text": "and come back later when you have problems and I'll tell you what's actually true now this is really what's true",
    "start": "8083500",
    "end": "8088540"
  },
  {
    "text": "so it means that if that's my story there is no abstraction link there's no way that you can find out",
    "start": "8088540",
    "end": "8094300"
  },
  {
    "text": "that that behaviors are anything other than uh functions of of point of R2 okay",
    "start": "8094300",
    "end": "8101560"
  },
  {
    "text": "they're not functions of R2 there's some piece of code with the representation an",
    "start": "8101560",
    "end": "8107260"
  },
  {
    "text": "implementation maybe running a CPU a GPU and fpga or whatever but you cannot ask any question that",
    "start": "8107260",
    "end": "8114099"
  },
  {
    "text": "that tells the difference between them that's what I mean by free of abstraction leaks",
    "start": "8114099",
    "end": "8119698"
  },
  {
    "text": "the laws necessarily hold and there's a simple kind of regular sort of proof structure",
    "start": "8120880",
    "end": "8127420"
  },
  {
    "text": "so what we want to prove is that these laws hold necessarily from the uh from",
    "start": "8127420",
    "end": "8132940"
  },
  {
    "text": "the homomorphisms if equality is semantic in other words things are equilif and only if their",
    "start": "8132940",
    "end": "8138040"
  },
  {
    "text": "meanings are equal and and that I think is is kind of the only right choice okay the proofs are actually quite",
    "start": "8138040",
    "end": "8144520"
  },
  {
    "text": "simple we're going for semantic equality we're going from mu of a my pandempty is equal to Mu of a okay so in other words",
    "start": "8144520",
    "end": "8151780"
  },
  {
    "text": "a empty is equal to a because their meanings are equal okay so the",
    "start": "8151780",
    "end": "8157239"
  },
  {
    "text": "distributive property the homomorphism property says that mu goes inside when someone goes inside a little bit then we",
    "start": "8157239",
    "end": "8162280"
  },
  {
    "text": "get to U and we get this kind of thing mu of a and append empty and then we use the the property so when",
    "start": "8162280",
    "end": "8169000"
  },
  {
    "text": "I say laws for free what I really mean is they're already paid for the laws hold in the semantic domain so if I know",
    "start": "8169000",
    "end": "8174280"
  },
  {
    "text": "the semantic domain is a monoi then I know the laws hold the law is holding",
    "start": "8174280",
    "end": "8179679"
  },
  {
    "text": "together with the humble measure morphism property get those semantic equality means that the laws have to",
    "start": "8179679",
    "end": "8184900"
  },
  {
    "text": "hold for my type so these proofs always go through I'm giving you proofs but they have to go through",
    "start": "8184900",
    "end": "8190119"
  },
  {
    "text": "there's nothing about imagery except the homomorphism property that makes these",
    "start": "8190119",
    "end": "8196598"
  },
  {
    "text": "laws go through okay so a bunch of other examples I talk about FRP",
    "start": "8196599",
    "end": "8203580"
  },
  {
    "text": "okay so a bunch of other examples some of them are in my blog there'll be in these notes I'm happy to talk with you",
    "start": "8206679",
    "end": "8212920"
  },
  {
    "text": "I'm just going to kind of whiz through them uh a type of uniform pairs",
    "start": "8212920",
    "end": "8218018"
  },
  {
    "text": "okay so done with imagery I think she's going to kind of give you a whirlwind of other examples uniform pairs there's a simple",
    "start": "8218019",
    "end": "8225700"
  },
  {
    "text": "denotational model for them I don't expect it to be obvious but you can think of uniform pairs as a function",
    "start": "8225700",
    "end": "8231880"
  },
  {
    "text": "from booleans okay because it was a f a false F of true right so they're so so they're",
    "start": "8231880",
    "end": "8239320"
  },
  {
    "text": "um if I have a function from booleans I can get two pieces of information out of it what it is for false and what it is for true same with a pairing and two",
    "start": "8239321",
    "end": "8246219"
  },
  {
    "text": "pieces of information the fact that function from uh satisfies uh monitored functional applicative",
    "start": "8246219",
    "end": "8252580"
  },
  {
    "text": "monad tells me exactly what those instances have to be for for pairs assuming that",
    "start": "8252580",
    "end": "8258460"
  },
  {
    "text": "interpretation all right",
    "start": "8258460",
    "end": "8264098"
  },
  {
    "text": "um all right so there we go another example is so we just follow these all through and they all work",
    "start": "8264099",
    "end": "8269920"
  },
  {
    "text": "and that effect was streams so the infinite streams the stream is like a list with no nil so it's infinite",
    "start": "8269920",
    "end": "8276399"
  },
  {
    "text": "only there's also a a way to think about streams which is a function from natural numbers okay functions from natural",
    "start": "8276400",
    "end": "8283540"
  },
  {
    "text": "numbers it's a monoid functor replicative monad and so on and so",
    "start": "8283540",
    "end": "8288880"
  },
  {
    "text": "streams are too so if you look in a stream library and you look at the instances you'll find out you do this you do some of the work at the homework",
    "start": "8288880",
    "end": "8295240"
  },
  {
    "text": "you'll find out that they're exactly consistent so if we didn't know what streams were and we had the idea of some",
    "start": "8295240",
    "end": "8301300"
  },
  {
    "text": "representation of a function from Naturals streams would be invented for us and we",
    "start": "8301300",
    "end": "8306340"
  },
  {
    "text": "know exactly what the instances have to be these two examples are special cases of something called tries or memo tries",
    "start": "8306340",
    "end": "8313540"
  },
  {
    "text": "they're data representations of functions and they also always turn out to have to have these nice Properties by",
    "start": "8313540",
    "end": "8320080"
  },
  {
    "text": "thinking of them as functions we get the law we get the specification by implementing them as data structures we",
    "start": "8320080",
    "end": "8325359"
  },
  {
    "text": "get efficient memoization and this is an example of it's not examples abstract example of how you can",
    "start": "8325360",
    "end": "8331899"
  },
  {
    "text": "calculate a correct implementation because in this case the meaning function has an inverse",
    "start": "8331900",
    "end": "8337240"
  },
  {
    "text": "okay you look out you'll find that has an inverse whenever the meaning function has an inverse we can then uh solve so",
    "start": "8337240",
    "end": "8344859"
  },
  {
    "text": "we can write down the isomorphism homomorphism properties and then solve them for the operations",
    "start": "8344860",
    "end": "8350800"
  },
  {
    "text": "so uh never mind that's not that's not important uh there's another long",
    "start": "8350800",
    "end": "8356558"
  },
  {
    "text": "example which I wasn't planning going into anyway which is linear Transformations so if you represent linear Transformations as matrices",
    "start": "8356559",
    "end": "8363340"
  },
  {
    "text": "and you say that's a representation the meaning is a function that happens to be linear",
    "start": "8363340",
    "end": "8369000"
  },
  {
    "text": "then by using the notational design we can we can know exactly what composition of matrices has to mean it has to mean",
    "start": "8369040",
    "end": "8375399"
  },
  {
    "text": "function composition and we can prove that matrix multiplication is the right thing",
    "start": "8375400",
    "end": "8381160"
  },
  {
    "text": "instead of just taking somebody's word for matrix multiplication is an implementation of function composition",
    "start": "8381160",
    "end": "8386500"
  },
  {
    "text": "if you say the meaning of a matrix is a function that happens to be linear so you can actually derive I have a blog",
    "start": "8386500",
    "end": "8393399"
  },
  {
    "text": "post called reimagine matrices it's about that so anyway I think it's a good place to stop mainly because I've gone a",
    "start": "8393399",
    "end": "8400720"
  },
  {
    "text": "couple minutes over again um uh I don't actually know when the bus",
    "start": "8400720",
    "end": "8407560"
  },
  {
    "text": "comes just think there'll probably be at least two hopefully I'm around for questions",
    "start": "8407560",
    "end": "8413680"
  },
  {
    "text": "and I hope you enjoyed the seminar got something I'd love to hear from you I'm",
    "start": "8413680",
    "end": "8419320"
  },
  {
    "text": "happy to take any questions particularly uh well any questions but if you're",
    "start": "8419320",
    "end": "8424479"
  },
  {
    "text": "interested in trying to apply these ideas to some problem domain I love kicking around those kind of questions so thanks",
    "start": "8424479",
    "end": "8431180"
  },
  {
    "text": "[Applause]",
    "start": "8431180",
    "end": "8437299"
  }
]