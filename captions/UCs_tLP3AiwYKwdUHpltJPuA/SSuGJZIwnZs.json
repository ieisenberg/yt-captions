[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "[Music]",
    "start": "960",
    "end": "8889"
  },
  {
    "text": "so today I'm gonna talk about inner development loop with Java on kubernetes",
    "start": "12360",
    "end": "18840"
  },
  {
    "text": "I work as a software architect at systematic in aurus in particular I work",
    "start": "18840",
    "end": "25080"
  },
  {
    "text": "on healthcare related projects I'm really passionate about anything Java spring Cloud native I also wrote a book",
    "start": "25080",
    "end": "32040"
  },
  {
    "text": "about that it's called Cloud native spring in action and I'm a big supporter of Open Source Technologies I like contributing",
    "start": "32040",
    "end": "38219"
  },
  {
    "text": "whenever I can to Java and spring related projects but also in general to Cloud native projects",
    "start": "38219",
    "end": "45660"
  },
  {
    "start": "45000",
    "end": "115000"
  },
  {
    "text": "so inner development Loop what does it mean well we are talking about here about how",
    "start": "45660",
    "end": "53760"
  },
  {
    "text": "as developers we approach the development of a new feature or perhaps fixing a bug so if you think about what",
    "start": "53760",
    "end": "60480"
  },
  {
    "text": "you do when you sit down at your desk and you have to implement this new feature exciting feature to deliver to",
    "start": "60480",
    "end": "66900"
  },
  {
    "text": "your customers we have a first phase where we code something perhaps using",
    "start": "66900",
    "end": "72060"
  },
  {
    "text": "test driven development we implement this new feature eventually we want to run the application",
    "start": "72060",
    "end": "77400"
  },
  {
    "text": "and test that everything is as we expect it to be and if necessary even do some",
    "start": "77400",
    "end": "84299"
  },
  {
    "text": "debugging now all these activities we repeat them continuously it's a loop",
    "start": "84299",
    "end": "89880"
  },
  {
    "text": "it's a loop that we Implement locally in order to do our development work",
    "start": "89880",
    "end": "96060"
  },
  {
    "text": "and the reason why I'm talking about either development Loop is that depending on how we approach this Loop",
    "start": "96060",
    "end": "102180"
  },
  {
    "text": "how we implement it the Technologies we use the processes we use to build new",
    "start": "102180",
    "end": "107520"
  },
  {
    "text": "feature or the organization we have around us then there is an effect on our",
    "start": "107520",
    "end": "113280"
  },
  {
    "text": "experience as Developers and that's what we call developer experience now I think after the last",
    "start": "113280",
    "end": "119520"
  },
  {
    "start": "115000",
    "end": "378000"
  },
  {
    "text": "couple of years we can say that developer experience is one of the new buzzwords in our field and they really",
    "start": "119520",
    "end": "125880"
  },
  {
    "text": "don't like buzzwords I like to define words and be sure that",
    "start": "125880",
    "end": "131039"
  },
  {
    "text": "everyone agrees on a common meeting meaning and developer experience is nothing new even if now you hear a lot",
    "start": "131039",
    "end": "138000"
  },
  {
    "text": "talking about that and my favorite definition comes from a research paper from two Engineers from the University",
    "start": "138000",
    "end": "144540"
  },
  {
    "text": "of Helsinki and what they write about developer experience is that can be",
    "start": "144540",
    "end": "149640"
  },
  {
    "text": "defined as a means for capturing how developers think and feel about their activities within their working",
    "start": "149640",
    "end": "156000"
  },
  {
    "text": "environments think and feel and why is that important it's important because we assume we",
    "start": "156000",
    "end": "162239"
  },
  {
    "text": "imply that an improvement of the developer experience has positive impacts on characteristics such as",
    "start": "162239",
    "end": "168300"
  },
  {
    "text": "sustained team and project performance I really like this definition because there's nothing about technology here",
    "start": "168300",
    "end": "175200"
  },
  {
    "text": "it's even about feelings as developers think about working in a very noisy",
    "start": "175200",
    "end": "180239"
  },
  {
    "text": "environment you're trying to focus but there's a lot of noise in your room your",
    "start": "180239",
    "end": "185400"
  },
  {
    "text": "IDE is showing all red lines because you can't find your third party dependencies",
    "start": "185400",
    "end": "190860"
  },
  {
    "text": "and suddenly dogger crashes that doesn't work and it gets so much frustrating how",
    "start": "190860",
    "end": "197280"
  },
  {
    "text": "many of you can relate it to these like I mean sometimes it's just too much we",
    "start": "197280",
    "end": "202560"
  },
  {
    "text": "want to focus on the business logic we want to provide value but we are impeded we are get frustrated and ultimately",
    "start": "202560",
    "end": "210840"
  },
  {
    "text": "what we're talking about here is the delivery of value so if we can improve the developer",
    "start": "210840",
    "end": "217080"
  },
  {
    "text": "experience automatically we can improve the way we deliver value we deliver",
    "start": "217080",
    "end": "222140"
  },
  {
    "text": "higher value to our customers to our business and as developers we feel better so feelings are also important",
    "start": "222140",
    "end": "228959"
  },
  {
    "text": "here because I'm much more comfortable working when everything in my environment works fine and I can focus",
    "start": "228959",
    "end": "235200"
  },
  {
    "text": "on solving the problem that I'm trying to solve in that moment",
    "start": "235200",
    "end": "240260"
  },
  {
    "text": "the problem with developer experience as we usually talk about nowadays is that",
    "start": "241500",
    "end": "247080"
  },
  {
    "text": "we focus a lot on tools but tools are not enough and in the definition there was nothing about tools",
    "start": "247080",
    "end": "253640"
  },
  {
    "text": "besides using technology to solve this problem we also need to have in place the right processes and right practices",
    "start": "253640",
    "end": "260280"
  },
  {
    "text": "that can support the usage of that technology and ultimately we read we",
    "start": "260280",
    "end": "265800"
  },
  {
    "text": "need the right organization surrounding us and supporting us in what we are doing",
    "start": "265800",
    "end": "271040"
  },
  {
    "text": "supporting those processes having people educated to support those processes",
    "start": "271040",
    "end": "277440"
  },
  {
    "text": "ultimately developer experience is a culture and we can apply this model I really like it because we can apply this",
    "start": "277440",
    "end": "283020"
  },
  {
    "text": "to so many things think about security all right I buy this product for",
    "start": "283020",
    "end": "288900"
  },
  {
    "text": "security that's the technology Circle I'm done no because then in the organizational Circle there's an",
    "start": "288900",
    "end": "295020"
  },
  {
    "text": "employee that doesn't know about email scams and then click on a link and then suddenly run somewhere spread out",
    "start": "295020",
    "end": "301199"
  },
  {
    "text": "in your organization technology is not enough or think about microservices oh",
    "start": "301199",
    "end": "306780"
  },
  {
    "text": "it's great with the cloud we get all these great technology available we just click button we have everything we could",
    "start": "306780",
    "end": "313020"
  },
  {
    "text": "possibly imagine yeah right but if your processes are wrong if you are",
    "start": "313020",
    "end": "319280"
  },
  {
    "text": "not shipping up your teams and your organization to work with uh self uh",
    "start": "319280",
    "end": "326220"
  },
  {
    "text": "yeah so autonomous independent teams with well-defined boundaries around your microservices that will not work and how",
    "start": "326220",
    "end": "333780"
  },
  {
    "text": "many cases we heard about migrations to microservices failing and that's because of this because we too much focus on the",
    "start": "333780",
    "end": "340860"
  },
  {
    "text": "technology Circle but if organization and processes don't catch up then whatever we are doing fail",
    "start": "340860",
    "end": "347759"
  },
  {
    "text": "technology is not enough now having said that today I'm going to",
    "start": "347759",
    "end": "352919"
  },
  {
    "text": "talk about technology a lot and I'm gonna showcase different tools",
    "start": "352919",
    "end": "357960"
  },
  {
    "text": "and they can really help with your developer experience but I have to warn you that just using these tools will not",
    "start": "357960",
    "end": "364680"
  },
  {
    "text": "solve the entire problem you also need the right processes and the red organization around these tools",
    "start": "364680",
    "end": "371340"
  },
  {
    "text": "so don't try them by themselves and then think that the problem is solved",
    "start": "371340",
    "end": "377479"
  },
  {
    "start": "378000",
    "end": "420000"
  },
  {
    "text": "so Technologies are in place we're going to talk about those specifically I won't talk much about processes and",
    "start": "379199",
    "end": "385259"
  },
  {
    "text": "organization but what are the goals what are we trying to achieve here first of all I want to achieve a rapid and",
    "start": "385259",
    "end": "391500"
  },
  {
    "text": "continuous feedback loop as a developer I want to do that while also having reduced cognitive load I don't want to",
    "start": "391500",
    "end": "398699"
  },
  {
    "text": "learn 20 new things that are not related to the problem I'm solving within my application",
    "start": "398699",
    "end": "404639"
  },
  {
    "text": "and also I would like the solution to be part of a clear path to production we",
    "start": "404639",
    "end": "410220"
  },
  {
    "text": "can solve the problem on the developer environment without considering the rest without considering the whole path to",
    "start": "410220",
    "end": "416639"
  },
  {
    "text": "production and we start with a baseline with a",
    "start": "416639",
    "end": "422280"
  },
  {
    "start": "420000",
    "end": "445000"
  },
  {
    "text": "cloud native application so without kubernetes without containers let's see what's an initial way of shaping up this",
    "start": "422280",
    "end": "429539"
  },
  {
    "text": "developer experience and then from there we're going to see all the challenges that we get when we go to kubernetes and",
    "start": "429539",
    "end": "435960"
  },
  {
    "text": "now how can we mitigate those and solve some of them",
    "start": "435960",
    "end": "441139"
  },
  {
    "text": "so I'm going to use a spring boot application but this really works with any job application and in general",
    "start": "442440",
    "end": "448560"
  },
  {
    "start": "445000",
    "end": "571000"
  },
  {
    "text": "whatever the application language or framework you're using these concepts are still applicable I have here a very",
    "start": "448560",
    "end": "455220"
  },
  {
    "text": "simple spring boot application it's a web application I have the main method where I initialize the application and",
    "start": "455220",
    "end": "461759"
  },
  {
    "text": "then I expose an API I have two endpoints the root endpoint a return and",
    "start": "461759",
    "end": "467220"
  },
  {
    "text": "welcome message and the books endpoint that returns a list of books and the book is a record",
    "start": "467220",
    "end": "474720"
  },
  {
    "text": "so let's give it a try I've run the application I'm running it locally on my",
    "start": "474720",
    "end": "481199"
  },
  {
    "text": "jvm so what I can do now here is I'm testing that it works I'm running on port 8080",
    "start": "481199",
    "end": "488099"
  },
  {
    "text": "so let's try the root endpoint perfect and the books endpoint",
    "start": "488099",
    "end": "494460"
  },
  {
    "text": "and it works so at this point I want to add a new book to the list",
    "start": "494460",
    "end": "499979"
  },
  {
    "text": "so let's do that let's all add the silmarillion book",
    "start": "499979",
    "end": "506599"
  },
  {
    "text": "all right now what is happening under the hood is that the application is",
    "start": "506879",
    "end": "512820"
  },
  {
    "text": "doing a live reload so it realizes that something changed and I don't have to do anything so if but if I call the end",
    "start": "512820",
    "end": "519060"
  },
  {
    "text": "point again the book is there now so my Springwood application keeps running and monitoring for changes so if",
    "start": "519060",
    "end": "526440"
  },
  {
    "text": "I do a change again because the book is actually titled the silmarillion and the save then you can see that the",
    "start": "526440",
    "end": "533339"
  },
  {
    "text": "application realizes that there have been modifications in the class path and the application is automatically",
    "start": "533339",
    "end": "539279"
  },
  {
    "text": "reloaded let's give it a try perfect so this is a quite nice inner",
    "start": "539279",
    "end": "546720"
  },
  {
    "text": "development Loop we get a very fast feedback loop I can run the application once at the beginning of my session and",
    "start": "546720",
    "end": "552600"
  },
  {
    "text": "I don't have to touch it anymore because it's continuously reloaded I can debug it I can test that everything works and",
    "start": "552600",
    "end": "560100"
  },
  {
    "text": "it's just great this will be our Baseline of a good developer experience",
    "start": "560100",
    "end": "568680"
  },
  {
    "text": "and if we look a bit at the history before Cloud native applications we started with traditional applications",
    "start": "568680",
    "end": "575100"
  },
  {
    "start": "571000",
    "end": "632000"
  },
  {
    "text": "where we would have still a runtime environment like it's a javital machine we would have a middleware like an",
    "start": "575100",
    "end": "581820"
  },
  {
    "text": "application server we would have the application package test War file or ear file",
    "start": "581820",
    "end": "587519"
  },
  {
    "text": "and now with Cloud native applications we work directly on the runtime and applications are self-contained",
    "start": "587519",
    "end": "594779"
  },
  {
    "text": "so we package them as jar artifacts their self their executable jar files",
    "start": "594779",
    "end": "600660"
  },
  {
    "text": "they don't have any external dependency except the Java runtime environment",
    "start": "600660",
    "end": "606180"
  },
  {
    "text": "and we improved a lot the developer experience because in the traditional model the feedback loop was quite slow",
    "start": "606180",
    "end": "614040"
  },
  {
    "text": "we improved it a lot and if we consider also the cognitive load it's actually getting smaller with Cloud native",
    "start": "614040",
    "end": "620580"
  },
  {
    "text": "applications because we don't have the burden also as developers to run and maintain this application server locally",
    "start": "620580",
    "end": "626339"
  },
  {
    "text": "when we are working on new features or fixing bugs so all is good",
    "start": "626339",
    "end": "631680"
  },
  {
    "text": "but then came containers and things started getting a bit more challenging",
    "start": "631680",
    "end": "637380"
  },
  {
    "start": "632000",
    "end": "660000"
  },
  {
    "text": "so of course containers are great they were with Docker especially a real game changer in our industry but that also",
    "start": "637380",
    "end": "645240"
  },
  {
    "text": "meant that developers got additional tasks now because now your application cannot be a jar artifact anymore it",
    "start": "645240",
    "end": "652200"
  },
  {
    "text": "should be a container so what do we do we write a Docker file",
    "start": "652200",
    "end": "657860"
  },
  {
    "start": "660000",
    "end": "790000"
  },
  {
    "text": "and then perhaps we go online and we find out how to do that",
    "start": "660660",
    "end": "667440"
  },
  {
    "text": "and we come up with something like this very simple Docker file",
    "start": "667440",
    "end": "675019"
  },
  {
    "text": "like this where we are basing the image on the open jdk version 17 from The",
    "start": "675360",
    "end": "680519"
  },
  {
    "text": "Tamarind distribution we are uploading the jar artifact that we had from the cloud native application and then we are",
    "start": "680519",
    "end": "687240"
  },
  {
    "text": "running it that's great it works it's fine writing Docker files is simple however writing",
    "start": "687240",
    "end": "694680"
  },
  {
    "text": "Docker files for production is definitely not simple like this is not production ready I don't want this",
    "start": "694680",
    "end": "701279"
  },
  {
    "text": "in production so I started looking into it and I realized that performance is really not",
    "start": "701279",
    "end": "706500"
  },
  {
    "text": "good putting jar files like this one inside an image is actually an anti-pattern what I want to do is expand",
    "start": "706500",
    "end": "712560"
  },
  {
    "text": "the jar files and distribute all the classes into layers",
    "start": "712560",
    "end": "717660"
  },
  {
    "text": "and springwoods also helps with that because I can extract the jar files and put",
    "start": "717660",
    "end": "723180"
  },
  {
    "text": "different layers with different classes so that if I'm changing my own code I",
    "start": "723180",
    "end": "728459"
  },
  {
    "text": "don't have to rebuild and put in the image also all the third party dependencies that doesn't make sense",
    "start": "728459",
    "end": "733680"
  },
  {
    "text": "this helps not only locally to speed up my feedback loop but it also helps helps",
    "start": "733680",
    "end": "739260"
  },
  {
    "text": "in production because it means that we are only when we do a rolling upgrade we only have to download a small layer so",
    "start": "739260",
    "end": "746220"
  },
  {
    "text": "if you're in the public Cloud that you're paying for how much data you're using that's also",
    "start": "746220",
    "end": "751579"
  },
  {
    "text": "how you can optimize your costs there but then you read that Docker is not",
    "start": "751579",
    "end": "757620"
  },
  {
    "text": "secure because it runs containers in root mode so we have to do something about that new iteration let's run the",
    "start": "757620",
    "end": "765180"
  },
  {
    "text": "process in a non-root user and this can this continue going on and",
    "start": "765180",
    "end": "770700"
  },
  {
    "text": "on and trying to optimize this Docker file and it's not even stopping there because once we have the first version then we",
    "start": "770700",
    "end": "777899"
  },
  {
    "text": "have to maintain it and since this will be in our application source code it means that developers will be responsible for it",
    "start": "777899",
    "end": "785100"
  },
  {
    "text": "and that's not really nice because what we are talking about here is that we",
    "start": "785100",
    "end": "790740"
  },
  {
    "start": "790000",
    "end": "814000"
  },
  {
    "text": "have moved from application servers to Cloud native and that was good but now",
    "start": "790740",
    "end": "795959"
  },
  {
    "text": "we get more time in our feedback loop because we also have to add this step to build the container image and then we",
    "start": "795959",
    "end": "802620"
  },
  {
    "text": "added more cognitive load we have the docker files so one thing we can do in order to at",
    "start": "802620",
    "end": "809700"
  },
  {
    "text": "least reduce the amount of this extra cognitive load that we get as developers is using something like Cloud native",
    "start": "809700",
    "end": "814980"
  },
  {
    "start": "814000",
    "end": "862000"
  },
  {
    "text": "buildbox it's a specification it's hosted the cloud native Computing foundation and what it does is that it",
    "start": "814980",
    "end": "822360"
  },
  {
    "text": "converts your source code into container images that are production ready without running a Docker file",
    "start": "822360",
    "end": "829500"
  },
  {
    "text": "so it works it's a polyglot tool it works for different languages and Frameworks so actually it's not just for",
    "start": "829500",
    "end": "835620"
  },
  {
    "text": "spring boot or just for Java but you can use it with your go application or dotnet and whatever you have as input it",
    "start": "835620",
    "end": "843540"
  },
  {
    "text": "figures out how to better containerize that source code taking into account security secure compliance policies",
    "start": "843540",
    "end": "851040"
  },
  {
    "text": "performance and the output is a container image that you can use in production",
    "start": "851040",
    "end": "857000"
  },
  {
    "text": "one way to use cloud native buildbacks is to use its own CLI is called pack",
    "start": "859019",
    "end": "864240"
  },
  {
    "start": "862000",
    "end": "912000"
  },
  {
    "text": "so I can say pack build and then point to my source code but when using spring",
    "start": "864240",
    "end": "871260"
  },
  {
    "text": "boot that's actually integrated within Springwood itself both for Gradle and Maven so if I go to the source code",
    "start": "871260",
    "end": "877500"
  },
  {
    "text": "again let's move to these other folder here",
    "start": "877500",
    "end": "882600"
  },
  {
    "text": "and open the terminal now I can do let me pull this up I can do Gradle boot",
    "start": "882600",
    "end": "891660"
  },
  {
    "text": "build image and I get a container image out of it which is great we reduce the cognitive",
    "start": "891660",
    "end": "898440"
  },
  {
    "text": "load I don't have to write a Docker file and I get something that is more production ready without having too much",
    "start": "898440",
    "end": "904560"
  },
  {
    "text": "to consider that myself and that's great",
    "start": "904560",
    "end": "912079"
  },
  {
    "start": "912000",
    "end": "930000"
  },
  {
    "text": "so for a while maybe we are fine we start running things on docker things get still a bit slower compared",
    "start": "913019",
    "end": "920579"
  },
  {
    "text": "to before but overall at least if we can get rid of the docker file maintenance",
    "start": "920579",
    "end": "926519"
  },
  {
    "text": "yeah I'm quite happy about it but then comes kubernetes",
    "start": "926519",
    "end": "932820"
  },
  {
    "start": "930000",
    "end": "1052000"
  },
  {
    "text": "you know things get really really complicated because once again application servers",
    "start": "932820",
    "end": "939120"
  },
  {
    "text": "we improve things a lot with Cloud native and in the Java system we have great modern Frameworks to work with",
    "start": "939120",
    "end": "944519"
  },
  {
    "text": "Cloud native applications things got a little worse with containers but now with kubernetes what",
    "start": "944519",
    "end": "951360"
  },
  {
    "text": "we have is a runtime environment that is a container runtime we have a middleware again that's",
    "start": "951360",
    "end": "958199"
  },
  {
    "text": "kubernetes we went back to having a middleware we have our container",
    "start": "958199",
    "end": "963420"
  },
  {
    "text": "and once again our feedback loop got slow",
    "start": "963420",
    "end": "969360"
  },
  {
    "text": "so it looks like we did the improve a lot and if you look at the cognitive load it became even worse than how we",
    "start": "969360",
    "end": "976260"
  },
  {
    "text": "started compared to how things were with application servers so wait a second there's something wrong",
    "start": "976260",
    "end": "982320"
  },
  {
    "text": "here so why is everyone moving to kubernetes if this is the picture like this looks",
    "start": "982320",
    "end": "988320"
  },
  {
    "text": "very very bad well kubernetes of course provides a lot",
    "start": "988320",
    "end": "994139"
  },
  {
    "text": "a lot of benefits so if you have a use case for it you start moving to kubernetes but usually that is driven",
    "start": "994139",
    "end": "1001100"
  },
  {
    "text": "more from an operational point of view about deployment about orchestration and",
    "start": "1001100",
    "end": "1006440"
  },
  {
    "text": "too often we forget about Developers so we improve things to standardized",
    "start": "1006440",
    "end": "1012259"
  },
  {
    "text": "deployments we have now a secure environment kubernetes is the operating system of the cloud like Cloud agnostic",
    "start": "1012259",
    "end": "1018620"
  },
  {
    "text": "it's really great but then we forget about Developers because all usually the discussion is",
    "start": "1018620",
    "end": "1025339"
  },
  {
    "text": "after the developer push changes to a git repository what about before that",
    "start": "1025339",
    "end": "1031819"
  },
  {
    "text": "what about the developer work to produce value to deliver that value to customers",
    "start": "1031819",
    "end": "1037938"
  },
  {
    "text": "and of course we have to look into that that's why developer experience in the last couple of years became so important",
    "start": "1037939",
    "end": "1043100"
  },
  {
    "text": "in the cloud native space because suddenly we realized oh wait developers are there too",
    "start": "1043100",
    "end": "1049760"
  },
  {
    "text": "so what can we do there we can use tilt",
    "start": "1049760",
    "end": "1055660"
  },
  {
    "start": "1052000",
    "end": "1060000"
  },
  {
    "text": "so let's move back to the code we have we can achieve a container image",
    "start": "1057559",
    "end": "1063799"
  },
  {
    "start": "1060000",
    "end": "1296000"
  },
  {
    "text": "using buildbox then we have the burden of creating some",
    "start": "1063799",
    "end": "1069260"
  },
  {
    "text": "kubernetes configuration files for example I won't go too much into detail",
    "start": "1069260",
    "end": "1074299"
  },
  {
    "text": "to this this can also be auto-generated actually a deployment object that we",
    "start": "1074299",
    "end": "1079580"
  },
  {
    "text": "want to create in order to tell kubernetes how to deploy our application we need a service object to expose the",
    "start": "1079580",
    "end": "1085880"
  },
  {
    "text": "application inside the cluster and we need an Ingress so that from outside the cluster we can access the application so",
    "start": "1085880",
    "end": "1092660"
  },
  {
    "text": "if we had to do all these things manually every time we make a change we have to compile the application we have",
    "start": "1092660",
    "end": "1099200"
  },
  {
    "text": "to build a container image we have to push that container image inside the cluster and then we have to apply this",
    "start": "1099200",
    "end": "1106220"
  },
  {
    "text": "manifest to the cluster so that the application is deployed and that would be over and over again and suddenly our",
    "start": "1106220",
    "end": "1113360"
  },
  {
    "text": "feedback loop is just so slow and we get so frustrated about this the developer",
    "start": "1113360",
    "end": "1119000"
  },
  {
    "text": "experience is really bad with tilt we can automate all these steps and Achieve",
    "start": "1119000",
    "end": "1124880"
  },
  {
    "text": "that continuous development approach that we had initially with our Baseline",
    "start": "1124880",
    "end": "1130039"
  },
  {
    "text": "when working with a plain Cloud native applications so what I can do here I have a tilt file",
    "start": "1130039",
    "end": "1136880"
  },
  {
    "text": "that I used to configure tilt",
    "start": "1136880",
    "end": "1141580"
  },
  {
    "text": "there it is so it's actually quite straightforward because we are telling tilt to use the",
    "start": "1142039",
    "end": "1148039"
  },
  {
    "text": "command that we would use manually use Gradle boot build image to build an image we want to enable the live update",
    "start": "1148039",
    "end": "1154820"
  },
  {
    "text": "feature that I showcased earlier and then we are pointing tilt to our",
    "start": "1154820",
    "end": "1160780"
  },
  {
    "text": "manifest for the application in order to deploy it on kubernetes and also we are",
    "start": "1160780",
    "end": "1165860"
  },
  {
    "text": "asking tilt please expose the application to my local machine so I can",
    "start": "1165860",
    "end": "1171320"
  },
  {
    "text": "access it through localhost and if you ever work with a Docker compost this would feel very natural",
    "start": "1171320",
    "end": "1177740"
  },
  {
    "text": "because I can just say tilt up and that tilt takes care of the rest",
    "start": "1177740",
    "end": "1182960"
  },
  {
    "text": "compile the application containerize it deploy it and keep monitoring my code so",
    "start": "1182960",
    "end": "1188059"
  },
  {
    "text": "that every change is automatically reflected in the cluster and on top of that we even get a nice GUI interface",
    "start": "1188059",
    "end": "1197840"
  },
  {
    "text": "let me zoom in a bit so we have the book service here and",
    "start": "1197840",
    "end": "1203240"
  },
  {
    "text": "what is happening now under the hood is actually those steps that I would do manually on my local machine",
    "start": "1203240",
    "end": "1208580"
  },
  {
    "text": "when that is done I can access the application and after that I can forget",
    "start": "1208580",
    "end": "1213980"
  },
  {
    "text": "about it I run tilt up and then I keep working on my application like I did initially without Docker and without",
    "start": "1213980",
    "end": "1220580"
  },
  {
    "text": "kubernetes so there it is my application is running we can give it a try",
    "start": "1220580",
    "end": "1226760"
  },
  {
    "text": "it's exposed through 8080 I have that so let's try to change that and see how it's reflected inside the cluster",
    "start": "1226760",
    "end": "1234620"
  },
  {
    "text": "without having to do anything manually so I go here let's change the message",
    "start": "1234620",
    "end": "1242720"
  },
  {
    "text": "so I heard that they're thinking the Hub is to heisengard",
    "start": "1242720",
    "end": "1247600"
  },
  {
    "text": "yes we can see that in the GUI file changed have been detected so if I",
    "start": "1249320",
    "end": "1256640"
  },
  {
    "text": "call the application again there it is",
    "start": "1256640",
    "end": "1261740"
  },
  {
    "text": "so I'm running inside the container that is deployed on a kubernetes cluster but",
    "start": "1261740",
    "end": "1267140"
  },
  {
    "text": "as a developer I'm getting the same exact experience I get when I work without those Technologies",
    "start": "1267140",
    "end": "1273919"
  },
  {
    "text": "so instead of running Gradle boot run for example running the jar file I'm running tilt up",
    "start": "1273919",
    "end": "1279440"
  },
  {
    "text": "but the experience is very comparable",
    "start": "1279440",
    "end": "1284019"
  },
  {
    "text": "so I'm a bit less worried about that with tilt still not good but let's move on",
    "start": "1286640",
    "end": "1293900"
  },
  {
    "text": "we have this we there's actually another tool is called scaffold that works in a similar way that doesn't have a GUI but",
    "start": "1293900",
    "end": "1301880"
  },
  {
    "start": "1296000",
    "end": "1329000"
  },
  {
    "text": "you can check it out if you want to use that it's slightly different in a way that you configure it because tilt uses",
    "start": "1301880",
    "end": "1308900"
  },
  {
    "text": "python with scaffold you would have to use yaml to configure scaffold",
    "start": "1308900",
    "end": "1314240"
  },
  {
    "text": "um so yeah both can give you this continuous deployment flow",
    "start": "1314240",
    "end": "1319640"
  },
  {
    "text": "but so far I've been talking about trying to achieve this feedback loop on top of kubernetes directly from my",
    "start": "1319640",
    "end": "1325940"
  },
  {
    "text": "machine however there are other options there is a tool called telepresence that let that",
    "start": "1325940",
    "end": "1331820"
  },
  {
    "start": "1329000",
    "end": "1426000"
  },
  {
    "text": "lets me let me basically create a bridge from my local machine to a cluster by",
    "start": "1331820",
    "end": "1338059"
  },
  {
    "text": "doing this I have a cluster where the main entire system is running and then in my local machine I have my",
    "start": "1338059",
    "end": "1346159"
  },
  {
    "text": "application running as standard Java application on my jvm and with telepresence what happens is that every",
    "start": "1346159",
    "end": "1352700"
  },
  {
    "text": "time my application is called it's actually going through the cluster so there's a proxy every time my",
    "start": "1352700",
    "end": "1358460"
  },
  {
    "text": "application is called instead of going to the instance running in the cluster it goes to my local machine so this is",
    "start": "1358460",
    "end": "1365179"
  },
  {
    "text": "useful both for feature development but it's also useful in case of debugging and troubleshooting",
    "start": "1365179",
    "end": "1371240"
  },
  {
    "text": "because you can connect to whatever cluster you have perhaps in a test environment or staging environment and",
    "start": "1371240",
    "end": "1376400"
  },
  {
    "text": "just redirect the traffic for the one application you're working with for example book service in my case and then",
    "start": "1376400",
    "end": "1382520"
  },
  {
    "text": "work locally without having Docker or kubernetes installed anywhere you will just run on on the jvm on your local",
    "start": "1382520",
    "end": "1389240"
  },
  {
    "text": "machine so having said that we if we go back to",
    "start": "1389240",
    "end": "1395720"
  },
  {
    "text": "the goals we had at the beginning we kind of addressed the first goal we",
    "start": "1395720",
    "end": "1401000"
  },
  {
    "text": "have a quite fast iteration Loop fast feedback loop as developers using tilt or scaffold",
    "start": "1401000",
    "end": "1407960"
  },
  {
    "text": "we have reduced the amount of cognitive load we don't have a Docker file but still we have at least three kubernetes",
    "start": "1407960",
    "end": "1415039"
  },
  {
    "text": "manifest that's a lot of yaml even if we generate them automatically still we have to maintain them and then how are",
    "start": "1415039",
    "end": "1421880"
  },
  {
    "text": "they related to the whole path to production so that's why I want to talk about K",
    "start": "1421880",
    "end": "1427280"
  },
  {
    "start": "1426000",
    "end": "1493000"
  },
  {
    "text": "native now now K native is a project also hosted at the cloud native Computing Foundation to build uh to",
    "start": "1427280",
    "end": "1434539"
  },
  {
    "text": "extend kubernetes and build platforms on top of kubernetes among the other things it provides serverless capabilities so",
    "start": "1434539",
    "end": "1441020"
  },
  {
    "text": "if you want to work with serverless and functions k-native does that on top of kubernetes it provides event-driven",
    "start": "1441020",
    "end": "1447980"
  },
  {
    "text": "capabilities so if you do data streaming you can use K native as well that's not possible in playing kubernetes and for",
    "start": "1447980",
    "end": "1456620"
  },
  {
    "text": "developers it's helpful because it exposes more user-friendly or developer friendly abstractions",
    "start": "1456620",
    "end": "1464480"
  },
  {
    "text": "I want to mention here Kelsey Hightower because he defines K native in a very",
    "start": "1464480",
    "end": "1470059"
  },
  {
    "text": "nice way he wrote in a tweet last year that if kubernetes is the electrical grid then K native is its light switch",
    "start": "1470059",
    "end": "1476720"
  },
  {
    "text": "and I think that's really great and really captures what is K native and I I mean it's probably the first",
    "start": "1476720",
    "end": "1483020"
  },
  {
    "text": "thing I install on any cluster I don't want to interact directly with kubernetes I want to work with K native and",
    "start": "1483020",
    "end": "1489440"
  },
  {
    "text": "I'll show you why because now I can get those three manifests I had before",
    "start": "1489440",
    "end": "1495500"
  },
  {
    "start": "1493000",
    "end": "1677000"
  },
  {
    "text": "first let me do a tilt down that's how you stop your continuous deployment Loop",
    "start": "1495500",
    "end": "1500720"
  },
  {
    "text": "here and if I move to K native",
    "start": "1500720",
    "end": "1506360"
  },
  {
    "text": "I deleted all those manifests and now I have one single manifest it's much simpler as a developer I have",
    "start": "1506360",
    "end": "1513080"
  },
  {
    "text": "to point to an image I have to expose my container port and I can add some",
    "start": "1513080",
    "end": "1518659"
  },
  {
    "text": "additional configuration that is actually not required the only thing required is the image",
    "start": "1518659",
    "end": "1524600"
  },
  {
    "text": "and I can do it from the CLI as well so I'll move to a different cluster now",
    "start": "1524600",
    "end": "1532820"
  },
  {
    "text": "and I'm gonna show that all right so I can say km that's the CLI",
    "start": "1532820",
    "end": "1540140"
  },
  {
    "text": "from K native service create the name of the service",
    "start": "1540140",
    "end": "1545299"
  },
  {
    "text": "book service km and then the image",
    "start": "1545299",
    "end": "1551419"
  },
  {
    "text": "so I have previously pushed an image on my GitHub container registry and I think",
    "start": "1551419",
    "end": "1556880"
  },
  {
    "text": "it's called this",
    "start": "1556880",
    "end": "1559900"
  },
  {
    "text": "all right so what how what is happening now is that that file that I showed earlier is automatically generated and",
    "start": "1563659",
    "end": "1570020"
  },
  {
    "text": "you can see from the CLI that this actually resembles a lot the docker CLI it's even easier because you don't have",
    "start": "1570020",
    "end": "1576020"
  },
  {
    "text": "to specify the port if you're using a standard Port so you don't have to expose it explicitly",
    "start": "1576020",
    "end": "1583700"
  },
  {
    "text": "and there it is not only it's deployed not only is exposed within the cluster not only is exposed outside the cluster",
    "start": "1585260",
    "end": "1592940"
  },
  {
    "text": "but they even get a very convenient and nice URL that now I can use to call the",
    "start": "1592940",
    "end": "1598159"
  },
  {
    "text": "application and you can do that too because it's on the public internet so I send an HTTP request and there it is",
    "start": "1598159",
    "end": "1604700"
  },
  {
    "text": "welcome to the book service so as a developer I'm happy about that",
    "start": "1604700",
    "end": "1611860"
  },
  {
    "text": "nice",
    "start": "1614179",
    "end": "1616840"
  },
  {
    "text": "yes now at this point we talked a lot about what happens on our local environment when we work but in some companies you",
    "start": "1620419",
    "end": "1627500"
  },
  {
    "text": "might be you might be adopting some processes requiring you to open a pull request requiring someone to manually",
    "start": "1627500",
    "end": "1634039"
  },
  {
    "text": "test the code in the pull request before being able to deliver that",
    "start": "1634039",
    "end": "1639980"
  },
  {
    "text": "now that depending on the process it might also be a problem that we need to address and solve in the in this",
    "start": "1639980",
    "end": "1647559"
  },
  {
    "text": "Vision about developer experience that's also part of it because if it becomes",
    "start": "1647559",
    "end": "1652820"
  },
  {
    "text": "very difficult in order to get our feature out there then we are really uh slowing down the the pace that we have",
    "start": "1652820",
    "end": "1660620"
  },
  {
    "text": "the flow that we have to deliver value because as long as our changes are not in production they are useless they",
    "start": "1660620",
    "end": "1666799"
  },
  {
    "text": "don't deliver any value so of course we want to go to production faster and if we have a pull request based process in",
    "start": "1666799",
    "end": "1673580"
  },
  {
    "text": "order to deliver a new feature we want to automate that as well and one way of doing that is using Argo CD Now Argo CD",
    "start": "1673580",
    "end": "1680179"
  },
  {
    "start": "1677000",
    "end": "1708000"
  },
  {
    "text": "you might have heard of it because you can do continuous deployment with it using a github's approach but there's a",
    "start": "1680179",
    "end": "1686480"
  },
  {
    "text": "very nice feature that is not that much known that lets you configure some",
    "start": "1686480",
    "end": "1692840"
  },
  {
    "text": "temporary environment provisioning so that whenever you create a pull request automatically you get a temporary",
    "start": "1692840",
    "end": "1699620"
  },
  {
    "text": "environment in kubernetes with your application deployed so",
    "start": "1699620",
    "end": "1704659"
  },
  {
    "text": "let me show you what I mean I have here a repository it's called music service",
    "start": "1704659",
    "end": "1710840"
  },
  {
    "start": "1708000",
    "end": "1811000"
  },
  {
    "text": "the application and I have my current Branch where I'm",
    "start": "1710840",
    "end": "1716779"
  },
  {
    "text": "developing new feature you can see that this is one commit ahead of the main branch so now what I can do is open a",
    "start": "1716779",
    "end": "1723500"
  },
  {
    "text": "pull request and I create the pull request then maybe I have some colleagues looking at the",
    "start": "1723500",
    "end": "1729320"
  },
  {
    "text": "pull request and reviewing that but in the meantime I also want a tester to manually test the new functionality well",
    "start": "1729320",
    "end": "1735559"
  },
  {
    "text": "if I look in Argo there it is in a couple of seconds a new environment has",
    "start": "1735559",
    "end": "1741559"
  },
  {
    "text": "been provisioned automatically in a new namespace called go to cph that",
    "start": "1741559",
    "end": "1747980"
  },
  {
    "text": "is the name of my branch the application is running is exposed and adopting all",
    "start": "1747980",
    "end": "1753559"
  },
  {
    "text": "the nice features I have in the cluster that I also use in production so I have also this environment parity",
    "start": "1753559",
    "end": "1760279"
  },
  {
    "text": "my colleagues can have a look I can have a look as well and when I'm done if I",
    "start": "1760279",
    "end": "1765740"
  },
  {
    "text": "merge the pull request or I close the pull request perhaps I want to reject it",
    "start": "1765740",
    "end": "1771380"
  },
  {
    "text": "because in this case I just changed the readme file and that was a very uh not useful change so let's say I want to",
    "start": "1771380",
    "end": "1777919"
  },
  {
    "text": "close it no that will not go in production I close the pull request",
    "start": "1777919",
    "end": "1783140"
  },
  {
    "text": "and what happens is that argocd will unprovision the environment automatically it's temporary we don't",
    "start": "1783140",
    "end": "1789020"
  },
  {
    "text": "want it to stick around especially if we are in the public Cloud that we pay a lot of money to deploy applications we",
    "start": "1789020",
    "end": "1796159"
  },
  {
    "text": "really want this feature there we don't want containers that are hanging around in the cluster just consuming our money",
    "start": "1796159",
    "end": "1804639"
  },
  {
    "text": "all right so if we go ahead and review the goals",
    "start": "1807679",
    "end": "1813620"
  },
  {
    "start": "1811000",
    "end": "2086000"
  },
  {
    "text": "that we have addressed so far the first goal rapid and continuous feedback loop I must say",
    "start": "1813620",
    "end": "1820580"
  },
  {
    "text": "that I'm quite okay with using tilt and not having to do all those steps manually myself",
    "start": "1820580",
    "end": "1827120"
  },
  {
    "text": "I know that okay with the cognitive load I don't have to maintain Docker files I don't have to maintain kubernetes",
    "start": "1827120",
    "end": "1833120"
  },
  {
    "text": "manifest but still even if I'm using K native I have too much responsibilities",
    "start": "1833120",
    "end": "1838580"
  },
  {
    "text": "on my side as a developer and then I still can't see the this clear path to production because once we have",
    "start": "1838580",
    "end": "1845840"
  },
  {
    "text": "our manifest in our git repository then what happens in production probably we need to change the configuration we need",
    "start": "1845840",
    "end": "1852679"
  },
  {
    "text": "to integrate it and bind it with external services for example all of that is missing so how can we interact",
    "start": "1852679",
    "end": "1860179"
  },
  {
    "text": "also with other colleagues in different teams in our project in order to achieve",
    "start": "1860179",
    "end": "1865640"
  },
  {
    "text": "that configuration management we really don't need it locally and we don't want to",
    "start": "1865640",
    "end": "1871279"
  },
  {
    "text": "deal with it locally I don't want maybe to use Helm locally that's something additional really like Carvel for",
    "start": "1871279",
    "end": "1878240"
  },
  {
    "text": "configuration management it provides kubernetes native package management options but again as a kubernetes",
    "start": "1878240",
    "end": "1886039"
  },
  {
    "text": "Enthusiast or Cloud native Enthusiast I really like that I like working with it but if I'm sitting on my desk working on",
    "start": "1886039",
    "end": "1893480"
  },
  {
    "text": "a feature I don't want to hear any of that I just want to focus on delivering value on my feature even if I like those",
    "start": "1893480",
    "end": "1900640"
  },
  {
    "text": "tools I like those Technologies and I'm aware of where my application will be",
    "start": "1900640",
    "end": "1906140"
  },
  {
    "text": "deployed eventually that's that's important in general as a developer right we want to know the constraints of",
    "start": "1906140",
    "end": "1911779"
  },
  {
    "text": "the environment where we are deploying our applications that's an important info when we clarify and design our",
    "start": "1911779",
    "end": "1918860"
  },
  {
    "text": "Solutions if we don't know the constraints of the environment then probably our design will not be that",
    "start": "1918860",
    "end": "1923899"
  },
  {
    "text": "good but what I want to do as a developer take all these tools and remove them all maybe I'm fine with",
    "start": "1923899",
    "end": "1931700"
  },
  {
    "text": "keeping filled that I'm okay with and then introduce a platform and of course I'm not dealing with the",
    "start": "1931700",
    "end": "1938840"
  },
  {
    "text": "platform myself as a developer but maybe in my team there's going to be a platform team offering a platform as a",
    "start": "1938840",
    "end": "1944659"
  },
  {
    "text": "service to me as a developer to my team as a product team and all those tools",
    "start": "1944659",
    "end": "1950059"
  },
  {
    "text": "will actually be responsibility of the platform team to configure to maintain and to keep",
    "start": "1950059",
    "end": "1956120"
  },
  {
    "text": "them running and then we need some kind of interface",
    "start": "1956120",
    "end": "1961580"
  },
  {
    "text": "and what we like as developers is a self-service API if I have to open a jira ticket to get",
    "start": "1961580",
    "end": "1968000"
  },
  {
    "text": "some service that is not the cloud even if it's on the cloud like jira ticket and the clouder opposite things I want a",
    "start": "1968000",
    "end": "1975919"
  },
  {
    "text": "self-service API I click a button I send a command and I want something provisioned for me automatically",
    "start": "1975919",
    "end": "1983059"
  },
  {
    "text": "so we kind of need this way of calling or consuming the services provided by",
    "start": "1983059",
    "end": "1988640"
  },
  {
    "text": "the platform and also within the platform itself we need a way to combine all these tools",
    "start": "1988640",
    "end": "1994399"
  },
  {
    "text": "like the platform team needs a way to glue them all together and offer to us as developers a very nice experience",
    "start": "1994399",
    "end": "2001059"
  },
  {
    "text": "there are different ways of doing that uh one way that I'm going to talk about is using a cartographer",
    "start": "2001059",
    "end": "2008440"
  },
  {
    "text": "cartographer is a very nice tool for doing this so you can see that now tilt is gonna interact with the platform via",
    "start": "2008440",
    "end": "2015760"
  },
  {
    "text": "cartographer and then what happens in the platform is responsibility of the platform team",
    "start": "2015760",
    "end": "2021940"
  },
  {
    "text": "so instead of using Cloud native buildbacks directly on our local machine even if it's easy perhaps with spring",
    "start": "2021940",
    "end": "2028600"
  },
  {
    "text": "boot it's built in then all of that is moved to the platform so locally I don't have to build the container image I",
    "start": "2028600",
    "end": "2035080"
  },
  {
    "text": "don't have to deal with manifest configuration Argo CD all of that will",
    "start": "2035080",
    "end": "2040419"
  },
  {
    "text": "be part of the platform and cartographer offers this framework",
    "start": "2040419",
    "end": "2045519"
  },
  {
    "text": "to build they're called Golden paths to production so as a platform like I want as a",
    "start": "2045519",
    "end": "2052839"
  },
  {
    "text": "developer a platform that offers me a very easy way to go to production and",
    "start": "2052839",
    "end": "2058898"
  },
  {
    "text": "the concept of golden path is that the platform can offer some paved path or a",
    "start": "2058899",
    "end": "2064419"
  },
  {
    "text": "pre-approved path to go to production based on what you're working with perhaps we have a golden path for web",
    "start": "2064419",
    "end": "2070118"
  },
  {
    "text": "application one for functions one for event-driven applications",
    "start": "2070119",
    "end": "2075520"
  },
  {
    "text": "and the amount of information or cognitive load for developers is extremely is extremely low let's have a",
    "start": "2075520",
    "end": "2082839"
  },
  {
    "text": "look at that so now I have a cluster with",
    "start": "2082839",
    "end": "2089740"
  },
  {
    "start": "2086000",
    "end": "2345000"
  },
  {
    "text": "the platform installed like all these tools are glued together with the",
    "start": "2089740",
    "end": "2095378"
  },
  {
    "text": "um with cartographer",
    "start": "2095379",
    "end": "2099540"
  },
  {
    "text": "all right so if we go back to the application I even deleted the K native manifest now",
    "start": "2100780",
    "end": "2109599"
  },
  {
    "text": "I don't need to run Docker locally to build a container image that's done inside the cluster that's also an",
    "start": "2109599",
    "end": "2116440"
  },
  {
    "text": "additional benefit but I have introduced something new here",
    "start": "2116440",
    "end": "2123339"
  },
  {
    "text": "this is the API the contract that we have between developers and the platform it's called a workload in cartographer",
    "start": "2123339",
    "end": "2130839"
  },
  {
    "text": "and in the workload we can specify what kind of golden path we want to consume",
    "start": "2130839",
    "end": "2135940"
  },
  {
    "text": "from the platform in this case it's a web application and then I Define information that only",
    "start": "2135940",
    "end": "2142060"
  },
  {
    "text": "me as a developer know about this because it's special to my current application",
    "start": "2142060",
    "end": "2147640"
  },
  {
    "text": "that is the git URL this is where to find the source code for my application",
    "start": "2147640",
    "end": "2153220"
  },
  {
    "text": "I can provide additional configuration if I wanted to I don't need to but perhaps about",
    "start": "2153220",
    "end": "2159400"
  },
  {
    "text": "me using Java 17 or resource limits and requests on the container that is not",
    "start": "2159400",
    "end": "2165700"
  },
  {
    "text": "needed the only thing that is needed is the git URL",
    "start": "2165700",
    "end": "2171160"
  },
  {
    "text": "this workload work is used both locally when I do my feedback loop but also",
    "start": "2171160",
    "end": "2178720"
  },
  {
    "text": "across the value chain until production until we get to production so let me",
    "start": "2178720",
    "end": "2185140"
  },
  {
    "text": "show you this no one folder up so I still have tilt I",
    "start": "2185140",
    "end": "2190660"
  },
  {
    "text": "have a tilt file configuration that now is using the workload file instead of calling boot build image and my manifest",
    "start": "2190660",
    "end": "2197260"
  },
  {
    "text": "and I can say tilt up again now would look like after running this",
    "start": "2197260",
    "end": "2204339"
  },
  {
    "text": "that everything looks the same as before but nothing is happening on my machine now everything happens in the cluster",
    "start": "2204339",
    "end": "2211420"
  },
  {
    "text": "and if we look in the cluster I can see that my application is running",
    "start": "2211420",
    "end": "2217960"
  },
  {
    "text": "there it's even running with https I get certificate provision automatically for",
    "start": "2217960",
    "end": "2225280"
  },
  {
    "text": "every application I'm running so if I send the request we can see that is there welcome to eisenguard",
    "start": "2225280",
    "end": "2232960"
  },
  {
    "text": "let's try the feedback loop right so go to the application",
    "start": "2232960",
    "end": "2239220"
  },
  {
    "text": "Java class welcome to eisenguard to eisengard to eisengard yeah",
    "start": "2240040",
    "end": "2248759"
  },
  {
    "text": "and Save now everything is reloaded you still get the GUI by the way I'm not using that",
    "start": "2249520",
    "end": "2255640"
  },
  {
    "text": "now but uh no no I have from Visual Studio code here a",
    "start": "2255640",
    "end": "2263200"
  },
  {
    "text": "nice link to that yeah it's not shown here anyway so we still have the GUI I can follow all the",
    "start": "2263200",
    "end": "2268480"
  },
  {
    "text": "process there but let's see how fast it is and it's not the first but I can show",
    "start": "2268480",
    "end": "2273820"
  },
  {
    "text": "you what is happening under the hood I have a lot of those actions that",
    "start": "2273820",
    "end": "2280780"
  },
  {
    "text": "before we're running on my machine now they're running in the cluster now I won't go too much into the detail here",
    "start": "2280780",
    "end": "2286359"
  },
  {
    "text": "but the main information is the source code that is coming from my local machine and it is continuously refreshed",
    "start": "2286359",
    "end": "2293859"
  },
  {
    "text": "I have the supply chain configuration this is my golden path to production where my image is built using kpac which",
    "start": "2293859",
    "end": "2302380"
  },
  {
    "text": "is a kubernetes native implementation of cloud native buildbox I have a convention service this is",
    "start": "2302380",
    "end": "2308920"
  },
  {
    "text": "quite interesting because since the platform can tell that my application is a spring boot application",
    "start": "2308920",
    "end": "2314980"
  },
  {
    "text": "it applies automatically all Springwood specific configuration like exposing the actuator endpoints enabling the graceful",
    "start": "2314980",
    "end": "2322300"
  },
  {
    "text": "shutdown all of that is done automatically I don't have to do that if you have a go Application then the",
    "start": "2322300",
    "end": "2327579"
  },
  {
    "text": "conventions will be different so this is what we call an application aware platform",
    "start": "2327579",
    "end": "2334200"
  },
  {
    "text": "and then finally the URL so we're still using K native and they get https as well",
    "start": "2334240",
    "end": "2341099"
  },
  {
    "text": "all right so we did all of this for improving our experience as",
    "start": "2343839",
    "end": "2350800"
  },
  {
    "start": "2345000",
    "end": "2493000"
  },
  {
    "text": "developers of course but as I said this is all about delivering value better and faster",
    "start": "2350800",
    "end": "2356440"
  },
  {
    "text": "from code to production so we talked a lot about the developer experience with",
    "start": "2356440",
    "end": "2361540"
  },
  {
    "text": "this how we interact with this path to production specifically the inner development Loop",
    "start": "2361540",
    "end": "2367720"
  },
  {
    "text": "but once we go and move to this model where we have a platform offering to",
    "start": "2367720",
    "end": "2373960"
  },
  {
    "text": "developers a self-service API and a lot of services out of the box then we also",
    "start": "2373960",
    "end": "2379119"
  },
  {
    "text": "achieve not only reduced cognitive load but separation of concerns because now application operators can",
    "start": "2379119",
    "end": "2385780"
  },
  {
    "text": "provide their expertise and apply their skills to the path to production to the platform",
    "start": "2385780",
    "end": "2391359"
  },
  {
    "text": "Security Experts same thing if I build my container image locally how can the",
    "start": "2391359",
    "end": "2397119"
  },
  {
    "text": "security expert in my company make sure that I'm compliant with all the company policies you can do that because that's",
    "start": "2397119",
    "end": "2404200"
  },
  {
    "text": "distributed across thousands of git repositories but now we have one single place where we can do this and now the",
    "start": "2404200",
    "end": "2410560"
  },
  {
    "text": "path to production that I showed that's not specific to my application I can create whatever application I want in",
    "start": "2410560",
    "end": "2418000"
  },
  {
    "text": "Spring Boot and just by using that label this is the web golden path then the",
    "start": "2418000",
    "end": "2424000"
  },
  {
    "text": "whole chain will be the same so it's a reusable thing so you can quickly bootstrap new",
    "start": "2424000",
    "end": "2429040"
  },
  {
    "text": "applications without having any additional cost from that point of view you don't have to set up new pipelines you don't have to set up new",
    "start": "2429040",
    "end": "2435280"
  },
  {
    "text": "environments the platform takes care of that and finally of course we have platform Engineers that glue all these tools",
    "start": "2435280",
    "end": "2441640"
  },
  {
    "text": "together are responsible for maintaining them but it's really nice to have this clear separation of concerns these are",
    "start": "2441640",
    "end": "2447579"
  },
  {
    "text": "not necessarily different people I'm more talking about them as personas but",
    "start": "2447579",
    "end": "2453520"
  },
  {
    "text": "it's important to have this distinction and clear responsibility also for me like working on with",
    "start": "2453520",
    "end": "2459099"
  },
  {
    "text": "different hats when I'm wearing the developer hat I'm just want to focus on",
    "start": "2459099",
    "end": "2464520"
  },
  {
    "text": "what I'm doing like the new feature I'm working on even if I know about kubernetes I don't want to deal with",
    "start": "2464520",
    "end": "2469780"
  },
  {
    "text": "kubernetes directly when I'm building a new feature if I'm wearing the cloud native",
    "start": "2469780",
    "end": "2475240"
  },
  {
    "text": "Enthusiast hat I'm all for it yeah let's let's play kubernetes but not when when",
    "start": "2475240",
    "end": "2480900"
  },
  {
    "text": "building features",
    "start": "2480900",
    "end": "2484380"
  },
  {
    "text": "yes one thing I want to show you",
    "start": "2487960",
    "end": "2493119"
  },
  {
    "start": "2493000",
    "end": "2544000"
  },
  {
    "text": "is that once we have this golden path we can Define some templates so for example",
    "start": "2493119",
    "end": "2498700"
  },
  {
    "text": "on Springwood on GitHub I have a golden path for spring boot web applications so",
    "start": "2498700",
    "end": "2504160"
  },
  {
    "text": "every time I want to build a new web application I use this template template here create a new repository and I get",
    "start": "2504160",
    "end": "2510880"
  },
  {
    "text": "automatically that cartographer configuration you can see here we have the workload file",
    "start": "2510880",
    "end": "2516940"
  },
  {
    "text": "and even better than this in a platform now it's very common to use backstage this developer portal solution it's open",
    "start": "2516940",
    "end": "2524380"
  },
  {
    "text": "source it's been built by Spotify you have a very nice user interface graphical user interface with the",
    "start": "2524380",
    "end": "2531220"
  },
  {
    "text": "concept of golden path built in that's something that comes from Spotify so we can even improve further the developer",
    "start": "2531220",
    "end": "2537760"
  },
  {
    "text": "experience here",
    "start": "2537760",
    "end": "2540599"
  },
  {
    "text": "yes so we went through the three these three main goals I focused a lot on",
    "start": "2542800",
    "end": "2547900"
  },
  {
    "start": "2544000",
    "end": "2553000"
  },
  {
    "text": "Technologies as I mentioned earlier but let's not forget about the other two circles just as a reference for the",
    "start": "2547900",
    "end": "2553960"
  },
  {
    "start": "2553000",
    "end": "2610000"
  },
  {
    "text": "organizational part I really recommend the theme topologies book that helps you define and design organization",
    "start": "2553960",
    "end": "2560820"
  },
  {
    "text": "to achieve this fast flow so the concept of platform team product team that is",
    "start": "2560820",
    "end": "2566500"
  },
  {
    "text": "called stream model and team and how they should collaborate between each other that's that's an important part no",
    "start": "2566500",
    "end": "2571960"
  },
  {
    "text": "zero ticket that's not the cloud that's not a good developer experience we want something better so if you're interested",
    "start": "2571960",
    "end": "2578680"
  },
  {
    "text": "into that I recommend reading this book regarding processes to quote they Farley",
    "start": "2578680",
    "end": "2584200"
  },
  {
    "text": "like we know no best no better engineering practice than continuous",
    "start": "2584200",
    "end": "2589359"
  },
  {
    "text": "delivery to build better software faster so continuous delivery is always actual always current book always valuable",
    "start": "2589359",
    "end": "2596560"
  },
  {
    "text": "and next to that I can also recommend the devops handbook and the accelerate handbook about how to",
    "start": "2596560",
    "end": "2603240"
  },
  {
    "text": "deal with that part of the circle about processes and practices because without that these technologies will not work",
    "start": "2603240",
    "end": "2611880"
  },
  {
    "start": "2610000",
    "end": "2626000"
  },
  {
    "text": "foreign",
    "start": "2611920",
    "end": "2614578"
  }
]