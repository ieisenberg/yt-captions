[
  {
    "start": "0",
    "end": "100000"
  },
  {
    "text": "[Music]",
    "start": "970",
    "end": "7838"
  },
  {
    "text": "yeah so thank you everyone for being here and then this is kind of weird it's weird",
    "start": "13389",
    "end": "19610"
  },
  {
    "text": "for me to be sitting in my room doing a keynote a lot of nice staging of Italian",
    "start": "19610",
    "end": "25430"
  },
  {
    "text": "Chicago I really appreciate all of you being here I mean at these times I know",
    "start": "25430",
    "end": "31189"
  },
  {
    "text": "that sometimes it's hard for me to motivate to myself to roll everything",
    "start": "31189",
    "end": "37070"
  },
  {
    "text": "that's going on to continue doing my day work so being here learning something new while the world is in a very unclear",
    "start": "37070",
    "end": "43609"
  },
  {
    "text": "situation is really awesome and you should give yourself a huge high-five just for being here this morning so in",
    "start": "43609",
    "end": "52129"
  },
  {
    "text": "this talk we're going to talk about how microservices evolved so we've been like",
    "start": "52129",
    "end": "57589"
  },
  {
    "text": "the collective we the world wild we have been doing micro services for more or",
    "start": "57589",
    "end": "62749"
  },
  {
    "text": "less eight years now and so it seems like a good time to kind of stop in with you what did we learn whatever macro",
    "start": "62749",
    "end": "69830"
  },
  {
    "text": "services like when we started what were the problems how did we solve them what is the state of the art of micro",
    "start": "69830",
    "end": "75650"
  },
  {
    "text": "services today and what they really hope to see in the future and a conference who we use a lot of micro services to",
    "start": "75650",
    "end": "82280"
  },
  {
    "text": "run our cloud so I'm going to speak a bit toward our experience and also a lot of our customers using Kafka and",
    "start": "82280",
    "end": "89090"
  },
  {
    "text": "confluent cloud to run micro services so I'll also share some things that I",
    "start": "89090",
    "end": "94310"
  },
  {
    "text": "learned from the way our customers do things so we said let's go all the way",
    "start": "94310",
    "end": "101060"
  },
  {
    "start": "100000",
    "end": "472000"
  },
  {
    "text": "back to the beginning we used to have monoliths right we used to have this one",
    "start": "101060",
    "end": "106430"
  },
  {
    "text": "big up to the trend a website and TOEFL database took to the other database indeed everything had all the business",
    "start": "106430",
    "end": "112490"
  },
  {
    "text": "logic in it was just one gigantic up and at some point we figured out that it's",
    "start": "112490",
    "end": "118550"
  },
  {
    "text": "complex it's difficult to maintain if you have to do a release you it takes forever because you have to coordinate",
    "start": "118550",
    "end": "124700"
  },
  {
    "text": "gazillion different teams every change has to be tightly controlled it's we suspect that it's slowing us",
    "start": "124700",
    "end": "130879"
  },
  {
    "text": "down a lot and we suspected that there is a better way of doing things and the",
    "start": "130879",
    "end": "135950"
  },
  {
    "text": "better way we suspected is to take this big monolith and break it down into the self-contained units called micro",
    "start": "135950",
    "end": "142180"
  },
  {
    "text": "services these units had their own context of execution they had their own a public API say were represented",
    "start": "142180",
    "end": "150610"
  },
  {
    "text": "something that the business wants to do and team owned won all of them and the",
    "start": "150610",
    "end": "156310"
  },
  {
    "text": "idea was that you own those micro services you can evolve them independently you can move faster and to",
    "start": "156310",
    "end": "162490"
  },
  {
    "text": "a pretty good extent it worked we had those things and we could move faster we",
    "start": "162490",
    "end": "168310"
  },
  {
    "text": "could deploy independently we could be much more agile on our execution but you",
    "start": "168310",
    "end": "175210"
  },
  {
    "text": "can't literally like no services in Ireland you can't completely get away from the fact that it used to be a",
    "start": "175210",
    "end": "181810"
  },
  {
    "text": "monolith and we broke it into pieces so what we really have is those macro services that need to talk to each other",
    "start": "181810",
    "end": "188320"
  },
  {
    "text": "right I mean you can do everything your own you have to send requests and get responses from other micro services what",
    "start": "188320",
    "end": "196180"
  },
  {
    "text": "of us do it using REST API so you have",
    "start": "196180",
    "end": "201940"
  },
  {
    "text": "arrest and phone normally you send JSON and you say okay I have our order can",
    "start": "201940",
    "end": "207190"
  },
  {
    "text": "you please validate thank you it's a valid order fantastic do I have enough stuff in the inventory yes I do",
    "start": "207190",
    "end": "212980"
  },
  {
    "text": "fantastic and this thing again to a great extent who worked well for a while",
    "start": "212980",
    "end": "218620"
  },
  {
    "text": "but who started discovering problems with that model and so the really basic",
    "start": "218620",
    "end": "226660"
  },
  {
    "text": "thing of doing synchronous request response communication basically led us",
    "start": "226660",
    "end": "231850"
  },
  {
    "text": "to pretty tight coupling between services in some ways I fell explore in",
    "start": "231850",
    "end": "237670"
  },
  {
    "text": "a second and this almost brought us all the way back to where we were so that's",
    "start": "237670",
    "end": "243640"
  },
  {
    "text": "the single people call distributed model it's at times you have micro services but you have all the problems of",
    "start": "243640",
    "end": "250000"
  },
  {
    "text": "morality of having to coordinate all the teams of being doing those big band releases and a lot of the fragility that",
    "start": "250000",
    "end": "256359"
  },
  {
    "text": "comes along so let's drive a bit deeper into some of those problems the first",
    "start": "256359",
    "end": "263530"
  },
  {
    "text": "one is that some of us made a mistake of exposing too many of the micro services",
    "start": "263530",
    "end": "268780"
  },
  {
    "text": "directly to customers which basically leads to a point where evolving",
    "start": "268780",
    "end": "273889"
  },
  {
    "text": "becomes really hard the other problem is that you kind of have really you have to",
    "start": "273889",
    "end": "280580"
  },
  {
    "text": "be a pretty good architect to architect micro-services environments and very few",
    "start": "280580",
    "end": "286310"
  },
  {
    "text": "people voted to write for the first time and one of the things that happens is who the question of who's responsible",
    "start": "286310",
    "end": "292729"
  },
  {
    "text": "for what right the whole point of micro-services was at each type of service is only responsible for itself but if you send a response to another",
    "start": "292729",
    "end": "299599"
  },
  {
    "text": "service and it doesn't respond what now right so you kind of have to somehow",
    "start": "299599",
    "end": "307879"
  },
  {
    "text": "take responsibility for the at least the other service not being available and being able to still do something",
    "start": "307879",
    "end": "313460"
  },
  {
    "text": "intelligent and there's no fee now sailors every team basically ends up sorting a lot of those common problems",
    "start": "313460",
    "end": "319580"
  },
  {
    "text": "on their own and again we kind of evolved it into shared infrastructure but this shared infrastructure sometimes",
    "start": "319580",
    "end": "325430"
  },
  {
    "text": "bring back the monolith problems so we have some issues around who is",
    "start": "325430",
    "end": "331400"
  },
  {
    "text": "responsible for what and what which functionality goes where the other thing",
    "start": "331400",
    "end": "338779"
  },
  {
    "text": "is that we haven't completely missed our changes if I'm the inventory service and",
    "start": "338779",
    "end": "345469"
  },
  {
    "text": "a lot of people are looking for inventory but I don't really know who they are and I don't exactly know what",
    "start": "345469",
    "end": "350930"
  },
  {
    "text": "part of the functionality to depend on so making changes even with good ideas and good contracts which are tricky in",
    "start": "350930",
    "end": "357199"
  },
  {
    "text": "themselves is not as simple as it sounds and you still need to do a lot of validation around that and we want to",
    "start": "357199",
    "end": "367310"
  },
  {
    "text": "move independent suppose it I'm a brilliant engineer and I have a great idea for a new shared service I can't",
    "start": "367310",
    "end": "373819"
  },
  {
    "text": "independently put it out there I need to go around and convince everyone to use my service and it also has been a super",
    "start": "373819",
    "end": "387889"
  },
  {
    "text": "effect word I can't really prove that what I did is valuable because nobody is using it and I can't really convince",
    "start": "387889",
    "end": "393830"
  },
  {
    "text": "anyone to use it because I can prove this valuable like I need to ask you for a share of your time in order to base a",
    "start": "393830",
    "end": "401899"
  },
  {
    "text": "proves of my service is valuable but you're a busy person everyone here is busy so just getting your time to",
    "start": "401899",
    "end": "407360"
  },
  {
    "text": "experiment with my service becomes really hard so we're not quite as independent as we'd like to think and we",
    "start": "407360",
    "end": "413690"
  },
  {
    "text": "can't quite move fast as small units as we'd like to sing and then the last",
    "start": "413690",
    "end": "420470"
  },
  {
    "text": "thing is that I think we discovered over time is that using HTTP and JSON as a",
    "start": "420470",
    "end": "425660"
  },
  {
    "text": "means of communication especially when it becomes a high bandwidth communication is actually pretty slow",
    "start": "425660",
    "end": "431270"
  },
  {
    "text": "and very compute intensive I think there is a website of how much carbon people",
    "start": "431270",
    "end": "436760"
  },
  {
    "text": "are using because our using JSON and it's a more efficient way of civilization and it's kind of a joke but",
    "start": "436760",
    "end": "443810"
  },
  {
    "text": "you know Jason may be killing our planet and so we should be a bit mindful about",
    "start": "443810",
    "end": "449270"
  },
  {
    "text": "what we are using and how we're using in the overhead of our communication and",
    "start": "449270",
    "end": "455030"
  },
  {
    "text": "we're going to talk about all these problems and how we solve them like all of these problems are to an extent",
    "start": "455030",
    "end": "461570"
  },
  {
    "text": "solved by now so we're going to look at except politics politics it's not really",
    "start": "461570",
    "end": "468080"
  },
  {
    "text": "eversource we're going to basically look at that we have all those problems we really could be doing a lot better and I",
    "start": "468080",
    "end": "475610"
  },
  {
    "start": "472000",
    "end": "790000"
  },
  {
    "text": "would just want to share some patterns that enabled us to do a lot better so",
    "start": "475610",
    "end": "481610"
  },
  {
    "text": "very nice virtually meeting illness virtually shake hands I'm going Shapira",
    "start": "481610",
    "end": "486830"
  },
  {
    "text": "I've been in the moving data between",
    "start": "486830",
    "end": "491950"
  },
  {
    "text": "services and databases for about 20 years in different capacities right now",
    "start": "491950",
    "end": "498200"
  },
  {
    "text": "I'm an engineering manager it confronts my team is adapting Kafka to run on the cloud which involves basically making",
    "start": "498200",
    "end": "506060"
  },
  {
    "text": "Kafka more cloud natives and it was before which is quite fun I worked a lot",
    "start": "506060",
    "end": "511100"
  },
  {
    "text": "back when I was doing engineering and of managing I worked a lot on Apache Kafka I wrote a book or two and I'm still",
    "start": "511100",
    "end": "518780"
  },
  {
    "text": "waiting quite a lot about our experiences if you follow me on Twitter if you follow me on twitter you also",
    "start": "518780",
    "end": "525080"
  },
  {
    "text": "have a sneak peek towards presentation so let's stop who is the first super",
    "start": "525080",
    "end": "532310"
  },
  {
    "text": "useful pattern it's the first because as a user of any service in the",
    "start": "532310",
    "end": "538500"
  },
  {
    "text": "that'll be literally the first thing you'll run into so remember we talked",
    "start": "538500",
    "end": "544110"
  },
  {
    "text": "about clients that know too much that you have a client that actually is a",
    "start": "544110",
    "end": "549660"
  },
  {
    "text": "word that you have a return service and you have an inventory service and you have order service and like you're maybe",
    "start": "549660",
    "end": "557370"
  },
  {
    "text": "JavaScript is aware of it maybe your mobile app is aware of all of it and this is too much because it makes me",
    "start": "557370",
    "end": "563880"
  },
  {
    "text": "make changes almost impossible remember the first one of clients clients are impossible to change you have especially",
    "start": "563880",
    "end": "570600"
  },
  {
    "text": "on mobile clients you have to go through up stores you have people don't really upgrade everyone hates upgrading you",
    "start": "570600",
    "end": "576810"
  },
  {
    "text": "never know when they'll add words you have to support the old version forever so it's really having clients that are",
    "start": "576810",
    "end": "581850"
  },
  {
    "text": "having deep awareness of your API is an infrastructure and makes any changes any",
    "start": "581850",
    "end": "587310"
  },
  {
    "text": "hope of agility really really and not as",
    "start": "587310",
    "end": "593010"
  },
  {
    "text": "good as we'd like let's put it that way where we got matter services maybe we didn't get the benefits so to make",
    "start": "593010",
    "end": "601020"
  },
  {
    "text": "things even waters it also means if the cloud stuff to everyone it means if",
    "start": "601020",
    "end": "606480"
  },
  {
    "text": "everyone is responsible for handing communication with the plant especially authentication encryption all those",
    "start": "606480",
    "end": "612150"
  },
  {
    "text": "things you or everyone suddenly responsible for that means that my app has to worry about things it really",
    "start": "612150",
    "end": "618630"
  },
  {
    "text": "shouldn't have to worry about and it's a lot of again redundant code and we don't work being done in our organization and",
    "start": "618630",
    "end": "625850"
  },
  {
    "text": "I actually am interviewing people now and the number of people that would who",
    "start": "625850",
    "end": "633180"
  },
  {
    "text": "worked on solving exactly this problem is quite high and the solution is quite canonical you put an API get way in",
    "start": "633180",
    "end": "641190"
  },
  {
    "text": "front of it and better be clients only know about the API gateway they don't",
    "start": "641190",
    "end": "646230"
  },
  {
    "text": "need to know about everything else is they don't need to know about eyepiece or DNS names or even the internal API so",
    "start": "646230",
    "end": "653670"
  },
  {
    "text": "you get more freedom to resolve the internal api's as long as the API ghetto is consistent authentication is done in",
    "start": "653670",
    "end": "659610"
  },
  {
    "text": "one place it's also much more performance friendly because you intend to gate once and then you have those",
    "start": "659610",
    "end": "665140"
  },
  {
    "text": "much more efficient so this is a really really nice pattern by now it is super",
    "start": "665140",
    "end": "672190"
  },
  {
    "text": "super popular I don't think I know a single service that doesn't have an API",
    "start": "672190",
    "end": "677410"
  },
  {
    "text": "gateway of sorts and you get really good thing so you guys authentication I talked a bit about that you get routing",
    "start": "677410",
    "end": "684310"
  },
  {
    "text": "I talked about that like the clients doesn't know you need to know who are the services where they see it what their DNS names etc you also get rate",
    "start": "684310",
    "end": "692019"
  },
  {
    "text": "limiting and you get it sometimes if you use the right API I get my events per endpoint which is really good like some",
    "start": "692019",
    "end": "698920"
  },
  {
    "text": "operations shouldn't be done all that often and you don't really and you want",
    "start": "698920",
    "end": "704800"
  },
  {
    "text": "to be able to say okay if someone tried to create an account they should not be able to create another account in the",
    "start": "704800",
    "end": "711190"
  },
  {
    "text": "next I don't know they our etc if someone tried to post a comment on a",
    "start": "711190",
    "end": "719440"
  },
  {
    "text": "blog probably prevent them from doing another one for a minute or two just to make sure they're not spamming etc super",
    "start": "719440",
    "end": "725740"
  },
  {
    "text": "useful and then logging in analytics especially other close like who is actually seeing what are they accessing",
    "start": "725740",
    "end": "731519"
  },
  {
    "text": "and which endpoint is most popular you have this central point where you can get a lot of information super super",
    "start": "731519",
    "end": "738459"
  },
  {
    "text": "awesome there is a risk in having something that is too awesome inside your organization the risk is that",
    "start": "738459",
    "end": "744880"
  },
  {
    "text": "everyone wants to use it it's so convenient it gives you very stable api's it gives you routing it gives you",
    "start": "744880",
    "end": "752050"
  },
  {
    "text": "rate limiting the risk is up every single micro-services who want to poke who fear the api get we even to each",
    "start": "752050",
    "end": "758410"
  },
  {
    "text": "other and that's probably because suddenly this is the big bottleneck and",
    "start": "758410",
    "end": "763779"
  },
  {
    "text": "also the people who run the API gateway now are in get a lot of internal request for api's so they become this one big",
    "start": "763779",
    "end": "771130"
  },
  {
    "text": "engineering dependency all of it is not what we were trying to do when we broke",
    "start": "771130",
    "end": "776260"
  },
  {
    "text": "herself up into micro services suddenly their api gateways at risk of becoming the new monolith",
    "start": "776260",
    "end": "781390"
  },
  {
    "text": "we don't want that and but it's worthwhile sinking world war didn't it",
    "start": "781390",
    "end": "786820"
  },
  {
    "text": "come from and the faculty is a real major means that we need to come up with",
    "start": "786820",
    "end": "793390"
  },
  {
    "start": "790000",
    "end": "1218000"
  },
  {
    "text": "a real solution and if you ever heard the term service message and ask Baga do they exist and why would I want",
    "start": "793390",
    "end": "800340"
  },
  {
    "text": "one because I think it's been around for two three years but I think a lot of people are still kind of on the fence",
    "start": "800340",
    "end": "805560"
  },
  {
    "text": "whether they need a service missional so we don't talk a bit about what service mesh isn't why",
    "start": "805560",
    "end": "810810"
  },
  {
    "text": "and it's basically service mesh is your distributed internal API gateway so if",
    "start": "810810",
    "end": "816690"
  },
  {
    "text": "you look at API gateway it does what we call north-south traffic this is traffic that comes from outside your business",
    "start": "816690",
    "end": "825240"
  },
  {
    "text": "from asan you turn central usually but sometimes just from outside you're maybe kubernetes cluster and it goes through",
    "start": "825240",
    "end": "832710"
  },
  {
    "text": "the API ghetto and it kind of goes deep if you think from top down into your",
    "start": "832710",
    "end": "838140"
  },
  {
    "text": "micro services and then the responses trickle back up and so we want to take",
    "start": "838140",
    "end": "844830"
  },
  {
    "text": "this really useful north-south traffic and applied to what we call east-west traffic east-west traffic is all the",
    "start": "844830",
    "end": "851490"
  },
  {
    "text": "traffic between the micro services in this organization and first of all you can see that there is an offworlder and",
    "start": "851490",
    "end": "857820"
  },
  {
    "text": "it's a lot more distributed like it is a mesh everyone talks for everyone else it's very difficult to control who talks",
    "start": "857820",
    "end": "864210"
  },
  {
    "text": "to up and you don't really want everything to go through the sector but bottleneck for reasons that I just",
    "start": "864210",
    "end": "869520"
  },
  {
    "text": "mentioned so we need a way to allow those good patterns of handling routing",
    "start": "869520",
    "end": "876630"
  },
  {
    "text": "and rate limiting and logging and all those centralized functions in a distributed fashion and the way we did",
    "start": "876630",
    "end": "883860"
  },
  {
    "text": "that is with what we now call sidecars so sad heart and is basically what you",
    "start": "883860",
    "end": "892290"
  },
  {
    "text": "think of as a component of the application that is not produce a separate service but it's a separate",
    "start": "892290",
    "end": "898680"
  },
  {
    "text": "mini container it next to the main containers it does every single micro",
    "start": "898680",
    "end": "904560"
  },
  {
    "text": "service the fastest in a separate container means that you get escalation encapsulation and think about it is a",
    "start": "904560",
    "end": "912210"
  },
  {
    "text": "library that grown its own environment I would say so the idea is that you can",
    "start": "912210",
    "end": "921210"
  },
  {
    "text": "deploy this side card next to every macro service and unlike a library that",
    "start": "921210",
    "end": "927570"
  },
  {
    "text": "it's because it's stone surface it's language agnostic so I can write a sidecar in go and",
    "start": "927570",
    "end": "934380"
  },
  {
    "text": "deploy it next to the Java applications the rest applications they won't repeat never see PHP application all of them",
    "start": "934380",
    "end": "941460"
  },
  {
    "text": "can get the same Sarkar which really reduces the overhead of the company",
    "start": "941460",
    "end": "947310"
  },
  {
    "text": "trying to maintain micro-services in many languages which is really nice and now we have this church functionalities",
    "start": "947310",
    "end": "953490"
  },
  {
    "text": "it is just replicated across the organization and the y side cars normally work in specially if necessary",
    "start": "953490",
    "end": "959910"
  },
  {
    "text": "like you have sidecar for a lot of things we have side cars for collecting logs side cars for monitoring but if you",
    "start": "959910",
    "end": "966990"
  },
  {
    "text": "look at cycles and so for service mesh the way they work is that they're basically a small proxy our small",
    "start": "966990",
    "end": "974040"
  },
  {
    "text": "gateway attached to every one of the services and this would need service",
    "start": "974040",
    "end": "979170"
  },
  {
    "text": "talks it actually sings that it's talking to itself so my service is talking to port 70-72",
    "start": "979170",
    "end": "985560"
  },
  {
    "text": "on localhost and for 70-72 in localhost is routed via the proxy and the proxy",
    "start": "985560",
    "end": "994080"
  },
  {
    "text": "has enough intelligence to know where to draw those endpoints to oh I'm talking to - orders it has to go there I'm",
    "start": "994080",
    "end": "1001340"
  },
  {
    "text": "talking to - inventory it has to go over there so this proxy is responsible for service",
    "start": "1001340",
    "end": "1007220"
  },
  {
    "text": "discovery it's responsible for the real thing it can do right limiting and can do logging who is talking to who it's",
    "start": "1007220",
    "end": "1013820"
  },
  {
    "text": "really really one of the more useful things that they've got added poor architectures over the last few years so",
    "start": "1013820",
    "end": "1022010"
  },
  {
    "text": "we're any big fans I'm going to show you two examples like more specific examples",
    "start": "1022010",
    "end": "1027740"
  },
  {
    "text": "of how those sidecar proxies really became they're useful things that allow",
    "start": "1027740",
    "end": "1033800"
  },
  {
    "text": "you to get all the benefits of API get well without the decentralized a control point so one way is service",
    "start": "1033800",
    "end": "1042350"
  },
  {
    "text": "discovery so you know sometimes services change IPS or even something you change",
    "start": "1042350",
    "end": "1048350"
  },
  {
    "text": "the unis names for various reasons and this can become an issue especially didn't like DNS with fresh tiles are not",
    "start": "1048350",
    "end": "1055070"
  },
  {
    "text": "really what we want them to be so we actually want to wait to very quickly let services know that a piece of change",
    "start": "1055070",
    "end": "1061600"
  },
  {
    "text": "so there is a proxy so discovering usually by talking to a",
    "start": "1061600",
    "end": "1068690"
  },
  {
    "text": "centralized mayor like a control plane sto is a fairly popular one and they say",
    "start": "1068690",
    "end": "1075000"
  },
  {
    "text": "those have a service discovery databases control exceeding one of those and it's",
    "start": "1075000",
    "end": "1081360"
  },
  {
    "text": "like a mini DNS just for my application so it's asks hey I need to talk to a",
    "start": "1081360",
    "end": "1086700"
  },
  {
    "text": "slash order service and who is the order where is the order service today and I",
    "start": "1086700",
    "end": "1092640"
  },
  {
    "text": "get the IP and at Oakland and my app doesn't have to know all along my app is only talking to local boss so I can",
    "start": "1092640",
    "end": "1099330"
  },
  {
    "text": "really quickly deploy those changes of location across really huge micro-services fleet without anyone",
    "start": "1099330",
    "end": "1106620"
  },
  {
    "text": "actually touching there up in any way so that's pretty useful but we're headed for a while I mean Dennis's are not",
    "start": "1106620",
    "end": "1112290"
  },
  {
    "text": "exactly new thing a better example is rate-limiting remembers that some",
    "start": "1112290",
    "end": "1118620"
  },
  {
    "text": "applications don't have the best retry logic in the world some of them are all",
    "start": "1118620",
    "end": "1123660"
  },
  {
    "text": "I got a failure let me reach right over and over every millisecond forever and",
    "start": "1123660",
    "end": "1128970"
  },
  {
    "text": "if you have a lot of them you can actually like have what we call it thundering herd problem like one of the",
    "start": "1128970",
    "end": "1134400"
  },
  {
    "text": "microservices have a tiny small blip in its performance but now everyone is retrying every millisecond forever so",
    "start": "1134400",
    "end": "1142170"
  },
  {
    "text": "it's kind of like it just the small problem just gets worse and worse and the poor micro service can never recover",
    "start": "1142170",
    "end": "1147510"
  },
  {
    "text": "because it's drowning in traffic but if we have those proxies ever were",
    "start": "1147510",
    "end": "1152670"
  },
  {
    "text": "controlled by a centralized control plane we can actually either we're ahead",
    "start": "1152670",
    "end": "1158250"
  },
  {
    "text": "of time because we were smart or during the incidents if we discover the problem",
    "start": "1158250",
    "end": "1163440"
  },
  {
    "text": "a bit late basically say hey you know only rate limit only allow or we try once",
    "start": "1163440",
    "end": "1171030"
  },
  {
    "text": "every second and this will allow the services has tiny little racial to",
    "start": "1171030",
    "end": "1176550"
  },
  {
    "text": "recover without running and the clients may never know that 99% of the retries",
    "start": "1176550",
    "end": "1182550"
  },
  {
    "text": "got silently dropped by proxy so this tool is super useful way to send your",
    "start": "1182550",
    "end": "1188430"
  },
  {
    "text": "services and because one of the things about services is you never know how many clients will need to call you and",
    "start": "1188430",
    "end": "1194810"
  },
  {
    "text": "we'll talk about that in a moment as it could be a autoscale mechanisms so you really want",
    "start": "1194810",
    "end": "1201600"
  },
  {
    "text": "somewhere to control those retries clients like the person who wrote a clan doesn't know that there are 50,000",
    "start": "1201600",
    "end": "1208140"
  },
  {
    "text": "copies of itself and if my Kokiri tries every millisecond you will have 50,000",
    "start": "1208140",
    "end": "1213960"
  },
  {
    "text": "three tries every minute now the",
    "start": "1213960",
    "end": "1219150"
  },
  {
    "start": "1218000",
    "end": "1415000"
  },
  {
    "text": "patterns that they want to talk about definitely collection of patterns like when we talk about people ask me what is event driven programming event",
    "start": "1219150",
    "end": "1226440"
  },
  {
    "text": "architectures we're busily looking at a fairly large collection of patterns I'm going to kind of give you a warrant rule",
    "start": "1226440",
    "end": "1233010"
  },
  {
    "text": "because I believe that this is one of the most important things to master is someone who is designing microservices",
    "start": "1233010",
    "end": "1240180"
  },
  {
    "text": "architectures so I'm going to kind of give you some tests of how useful this can be so remember we talked about",
    "start": "1240180",
    "end": "1247350"
  },
  {
    "text": "making that making changes it's really really risky because you really don't always know who is calling you and what",
    "start": "1247350",
    "end": "1253770"
  },
  {
    "text": "they expect and we also talked about how difficult it can be to add new services",
    "start": "1253770",
    "end": "1260420"
  },
  {
    "text": "because you kind of need to convince people to use your service and you can it's really hard because if nobody using",
    "start": "1260420",
    "end": "1267060"
  },
  {
    "text": "your how can you convince other people that it's useful and we're looking for a pattern to reverse this problem",
    "start": "1267060",
    "end": "1274590"
  },
  {
    "text": "basically so we took their whole request response architecture and we flip it",
    "start": "1274590",
    "end": "1280680"
  },
  {
    "text": "inside out upside down on its head if we look at request driven architectures",
    "start": "1280680",
    "end": "1286530"
  },
  {
    "text": "there is basically two types of communication as an app either tell another micro service to do something",
    "start": "1286530",
    "end": "1293820"
  },
  {
    "text": "I'm sending a command hey go validate this order hey you tell me if there is",
    "start": "1293820",
    "end": "1302040"
  },
  {
    "text": "enough in the inventory and all questions so again you tell me if it's enough in inventory it's a question like",
    "start": "1302040",
    "end": "1308580"
  },
  {
    "text": "how many of item I do we have left kind of thing so other you get information by",
    "start": "1308580",
    "end": "1315240"
  },
  {
    "text": "asking very specific questions and getting very specific responses all you're telling other services what they",
    "start": "1315240",
    "end": "1321780"
  },
  {
    "text": "should do and hopefully instructions everything correctly so what they should do is clearly in their domain and what",
    "start": "1321780",
    "end": "1328050"
  },
  {
    "text": "you do is clean your domain not always the case we a lot of cases where you actually need",
    "start": "1328050",
    "end": "1333670"
  },
  {
    "text": "too much information the other app because sometimes like you know you're busy they say oh we can do your job for",
    "start": "1333670",
    "end": "1340059"
  },
  {
    "text": "you if you just give us a bit more information in the report we've seen a lot of leakage of responsibilities",
    "start": "1340059",
    "end": "1345429"
  },
  {
    "text": "happens that way we flipped it on its head and we said what if it's",
    "start": "1345429",
    "end": "1350620"
  },
  {
    "text": "event-driven what if every service doesn't really only communicates by",
    "start": "1350620",
    "end": "1357250"
  },
  {
    "text": "telling the other services things that it knows about the world so those are",
    "start": "1357250",
    "end": "1363660"
  },
  {
    "text": "events oh I heard that we just got an order for i/o I heard I'm the inventory",
    "start": "1363660",
    "end": "1372669"
  },
  {
    "text": "service and we now only have ten of items and left everyone keeps always",
    "start": "1372669",
    "end": "1380530"
  },
  {
    "text": "broadcasting four important facts about their slice of the world they don't tell us as what to do others are independent",
    "start": "1380530",
    "end": "1387100"
  },
  {
    "text": "macro services they can make their own decisions and you don't really need to ask questions because you can listen to",
    "start": "1387100",
    "end": "1392500"
  },
  {
    "text": "facts and gather your the knowledge that is relevant for you and you no longer",
    "start": "1392500",
    "end": "1398200"
  },
  {
    "text": "have to ask questions and this is incredibly powerful and well I'm going",
    "start": "1398200",
    "end": "1404679"
  },
  {
    "text": "to walk you through an example showing how powerful it is like it's one of those simple concept that is so simple and then kind of opens a whole new world",
    "start": "1404679",
    "end": "1412600"
  },
  {
    "text": "of architectures to you so the first thing that you have to remember like as",
    "start": "1412600",
    "end": "1417940"
  },
  {
    "start": "1415000",
    "end": "1803000"
  },
  {
    "text": "one of the takeaways about event-driven is that events are fast things about the",
    "start": "1417940",
    "end": "1423160"
  },
  {
    "text": "world and they can act as triggers like oh when I see this fact I have to do something about it okay so it's a way of",
    "start": "1423160",
    "end": "1430600"
  },
  {
    "text": "replicating information and a way of triggering action let's make it a bit",
    "start": "1430600",
    "end": "1435880"
  },
  {
    "text": "more concrete and we'll walk through an example so let's say that they have a small web service running a small shop",
    "start": "1435880",
    "end": "1443169"
  },
  {
    "text": "online maybe named after a river in South America and that's a the time servicing",
    "start": "1443169",
    "end": "1449890"
  },
  {
    "text": "a request to buy an iPad so lively we have a web server it gets an order order",
    "start": "1449890",
    "end": "1456130"
  },
  {
    "text": "to where by an iPod he talks to the order service it says hey I need to buy an iPad and",
    "start": "1456130",
    "end": "1464010"
  },
  {
    "text": "the iPad is fantastic please I have an iPod the order service",
    "start": "1464010",
    "end": "1469720"
  },
  {
    "text": "is fantastic I validated the China inventory we have an iPod he talks to the shipping service it says hey can you",
    "start": "1469720",
    "end": "1475480"
  },
  {
    "text": "ship an iPad to this customer streaming services fantastic but who is this customer talks to the customer service",
    "start": "1475480",
    "end": "1481480"
  },
  {
    "text": "customer service sends back information about the customer we pull out the address and machine so far so normal",
    "start": "1481480",
    "end": "1487870"
  },
  {
    "text": "like I think pretty much everyone in this conference can probably hug this in about 60 minutes during a job interview",
    "start": "1487870",
    "end": "1496500"
  },
  {
    "text": "but what if you but if we did a bit deeper if we didn't be on the job interview we have some issues right like",
    "start": "1496500",
    "end": "1504040"
  },
  {
    "text": "what if the shipping service is down does it means that I have the order service has to continuously retry shape",
    "start": "1504040",
    "end": "1510549"
  },
  {
    "text": "does means that the order gets dropped please get persistent somewhere and then someone else it's very entering what",
    "start": "1510549",
    "end": "1516669"
  },
  {
    "text": "would be the flow and like how much is the order service responsible for the",
    "start": "1516669",
    "end": "1522010"
  },
  {
    "text": "shipping service being available so what if instead of this request response",
    "start": "1522010",
    "end": "1527320"
  },
  {
    "text": "panel we used invents and in this example were using events as a trigger as a way to notify and cause actions to",
    "start": "1527320",
    "end": "1535330"
  },
  {
    "text": "follow so let's say that we submit an order and instead of the order service calling the shipping service it just",
    "start": "1535330",
    "end": "1542230"
  },
  {
    "text": "wrote this big fact that hey I got a new order to a huge log of events so",
    "start": "1542230",
    "end": "1548650"
  },
  {
    "text": "everyone in organization that cares to know about new orders from the shipping service to the inventory service to",
    "start": "1548650",
    "end": "1555419"
  },
  {
    "text": "let's say analytics they all know that this thing happened in the shipping service reads the event and says oh I",
    "start": "1555419",
    "end": "1563380"
  },
  {
    "text": "have a new order and guess I am it looks validated ABS I have to chip it and the",
    "start": "1563380",
    "end": "1569260"
  },
  {
    "text": "nice thing is that if the shipping service is down right now no worries it will come back in 30 minutes it will get",
    "start": "1569260",
    "end": "1574840"
  },
  {
    "text": "the event and it will do it in 30 minutes and customers especially when it comes to shipping it don't really care",
    "start": "1574840",
    "end": "1580480"
  },
  {
    "text": "if it takes you 30 minutes to extra to ship the order I mean it's like they",
    "start": "1580480",
    "end": "1586360"
  },
  {
    "text": "delivery at best anyway so that's fine so you basically can kind of hide an event",
    "start": "1586360",
    "end": "1591490"
  },
  {
    "text": "from pretty much everyone in a really nice way and you also get a nice lot of older orders it happened over time you",
    "start": "1591490",
    "end": "1598060"
  },
  {
    "text": "can do really a lot of analytics how long did it take each order to shape etc",
    "start": "1598060",
    "end": "1603690"
  },
  {
    "text": "now the shipments are we still need to talk to the customer service and get the",
    "start": "1603690",
    "end": "1608820"
  },
  {
    "text": "address is there a way we can work around that and at this point we need to",
    "start": "1608820",
    "end": "1615460"
  },
  {
    "text": "know that events are also shared facts about the world so images of the",
    "start": "1615460",
    "end": "1621550"
  },
  {
    "text": "customer and both to the website and says hey I moved from San Jose",
    "start": "1621550",
    "end": "1626890"
  },
  {
    "text": "California to when let's say Boulder Colorado and the customer service",
    "start": "1626890",
    "end": "1633630"
  },
  {
    "text": "customer this is an important new fact about the world I will write it to our",
    "start": "1633630",
    "end": "1639580"
  },
  {
    "text": "shirt log of facts about world where everyone can subscribe to it and the",
    "start": "1639580",
    "end": "1644650"
  },
  {
    "text": "shipping service will definitely subscribe to change of address because shipping service only cares about two",
    "start": "1644650",
    "end": "1650260"
  },
  {
    "text": "things orders and the world customer Water Center so it definitely we listen",
    "start": "1650260",
    "end": "1655660"
  },
  {
    "text": "to those change of address it's all very so old database or cache",
    "start": "1655660",
    "end": "1660880"
  },
  {
    "text": "of every single customer and words in it it doesn't even take that far space you get this small minute that local",
    "start": "1660880",
    "end": "1667180"
  },
  {
    "text": "database that gives you this information and get person it doesn't get out of",
    "start": "1667180",
    "end": "1673720"
  },
  {
    "text": "that it gets constantly refreshed with new facts from customer service being",
    "start": "1673720",
    "end": "1678850"
  },
  {
    "text": "published to Sherlock so you have this small local database with all the other",
    "start": "1678850",
    "end": "1683890"
  },
  {
    "text": "cells shipping service is now actually independent the way we always wanted micro services to be it can check its",
    "start": "1683890",
    "end": "1691150"
  },
  {
    "text": "local database hang where is fantastic let me send it over and this is really",
    "start": "1691150",
    "end": "1697110"
  },
  {
    "text": "huge for different service kind of owning everything it's entire context of",
    "start": "1697110",
    "end": "1702340"
  },
  {
    "text": "execution everything it needs to operate so you can see how event-driven",
    "start": "1702340",
    "end": "1707710"
  },
  {
    "text": "basically gives us a lot more independence it gives us independence from other services failures and it",
    "start": "1707710",
    "end": "1713320"
  },
  {
    "text": "gives us independence from other services being kind of a remote database for us so every just again just one step",
    "start": "1713320",
    "end": "1722860"
  },
  {
    "text": "closer to our micro service now this is well if you haven't noticed",
    "start": "1722860",
    "end": "1729940"
  },
  {
    "text": "as the subject I'm super passionate about so I spent basically three years",
    "start": "1729940",
    "end": "1735129"
  },
  {
    "text": "of my life just going around talking to customers and users and people accuse conferences about Oh sputters and like",
    "start": "1735129",
    "end": "1743470"
  },
  {
    "text": "especially if you look you talk at more old-school conferences like let's say or",
    "start": "1743470",
    "end": "1749080"
  },
  {
    "text": "a can opener where people are horrified like how long do word can we have a database like a separate database for",
    "start": "1749080",
    "end": "1756009"
  },
  {
    "text": "each micro service well first of all if you're running on Oracle he probably shouldn't I'm not going to take any",
    "start": "1756009",
    "end": "1761019"
  },
  {
    "text": "responsibility for your budget but I mean they're a very small lightweight it doesn't even have to be a full-blown",
    "start": "1761019",
    "end": "1766840"
  },
  {
    "text": "database it can be something like locks will be like a local name key value",
    "start": "1766840",
    "end": "1772210"
  },
  {
    "text": "store can be maybe a cloud key value store we don't really have like it",
    "start": "1772210",
    "end": "1779590"
  },
  {
    "text": "doesn't have to be full-blown database for each micro-service and people also",
    "start": "1779590",
    "end": "1784599"
  },
  {
    "text": "worry about things like divergence like what if things go out of thing well it's safe right we're all reading from the",
    "start": "1784599",
    "end": "1791080"
  },
  {
    "text": "same stream of events but you can really have your own version of that you can it",
    "start": "1791080",
    "end": "1796479"
  },
  {
    "text": "reduces dependencies you have much lower legacy really good reasons to think about it okay",
    "start": "1796479",
    "end": "1803220"
  },
  {
    "start": "1803000",
    "end": "1870000"
  },
  {
    "text": "so the other thing to remember the second big takeaway is that if you look at different macro services they're",
    "start": "1804129",
    "end": "1810399"
  },
  {
    "text": "stateful they own their own state and because they're maybe slightly short on",
    "start": "1810399",
    "end": "1816190"
  },
  {
    "text": "time they also allow you to add new micro services and shows your value faster because if you were having a",
    "start": "1816190",
    "end": "1824259"
  },
  {
    "text": "great new pricing service you can just plug it in to read from the same shared source of event and maybe publish prices",
    "start": "1824259",
    "end": "1830830"
  },
  {
    "text": "as anything kind of have shuttle prices that you can compare it really allows you to evolve the macro system by adding",
    "start": "1830830",
    "end": "1836950"
  },
  {
    "text": "more and more micro services on top of this shared log so you don't really have to convince other people to do something",
    "start": "1836950",
    "end": "1843429"
  },
  {
    "text": "you can just get the data you need you don't have to wait for them to call you which solves a lot of the",
    "start": "1843429",
    "end": "1849840"
  },
  {
    "text": "interdependence politics problem now the other thing to keep in mind is",
    "start": "1849840",
    "end": "1856289"
  },
  {
    "text": "schemas when we move to a request response world to event driven world we",
    "start": "1856289",
    "end": "1863400"
  },
  {
    "text": "basically move to a world where it's not really api's it's now events and the",
    "start": "1863400",
    "end": "1871620"
  },
  {
    "start": "1870000",
    "end": "2002000"
  },
  {
    "text": "middle is not a message like just because we change the way that we are",
    "start": "1871620",
    "end": "1877250"
  },
  {
    "text": "communicating and we start communicating via logos events doesn't mean that anything changed about the contents that",
    "start": "1877250",
    "end": "1883440"
  },
  {
    "text": "were communicating so we have those messages and they have this kind of nice",
    "start": "1883440",
    "end": "1889110"
  },
  {
    "text": "same layout you probably familiar with us but you're also trying to kind of",
    "start": "1889110",
    "end": "1894929"
  },
  {
    "text": "solve the problems that Jason may not be the most effective thing in the world and it just really has very little",
    "start": "1894929",
    "end": "1901230"
  },
  {
    "text": "validation like if you someone removes the field it's very easy not to notice until it's too late",
    "start": "1901230",
    "end": "1906750"
  },
  {
    "text": "and an event was written that will break things forever and it happens a lot of",
    "start": "1906750",
    "end": "1912659"
  },
  {
    "text": "time like you have this JSON and it has user idea it has a time table and everyone kind of assumes it's time stamp",
    "start": "1912659",
    "end": "1918299"
  },
  {
    "text": "use of time log and then someone smart decide to change it to a string and",
    "start": "1918299",
    "end": "1923720"
  },
  {
    "text": "everything down the line immediately breaks but it will not break until the battle was already written in the wrong",
    "start": "1923720",
    "end": "1930120"
  },
  {
    "text": "format which is a huge problem you really need that those schemas of the",
    "start": "1930120",
    "end": "1937080"
  },
  {
    "text": "events are really your new API and you need to be very very careful validating them and making sure that when you make",
    "start": "1937080",
    "end": "1943590"
  },
  {
    "text": "a change everyone is aware immediately you don't want to wait until someone pulls the wrong dependency or someone",
    "start": "1943590",
    "end": "1949980"
  },
  {
    "text": "just deploys the wrong thing in order to break your entire system it's really hard to recover to that at the kafka",
    "start": "1949980",
    "end": "1957809"
  },
  {
    "text": "ecosystem we have schema registries where people kind of register all the schemas confluent schema registry now",
    "start": "1957809",
    "end": "1964710"
  },
  {
    "text": "supports schemas in overall Jason and protobuf so you can really pick your poison with micro-services protobufs are",
    "start": "1964710",
    "end": "1971580"
  },
  {
    "text": "quite nice because they have good support in all those languages and there are many more efficient than most json",
    "start": "1971580",
    "end": "1977730"
  },
  {
    "text": "implementations maybe not all of them so you register or your schemas and if you have all the",
    "start": "1977730",
    "end": "1983669"
  },
  {
    "text": "schemas in one place you can basically every change can be validated is it still go",
    "start": "1983669",
    "end": "1989179"
  },
  {
    "text": "to the schema database and wanna check is it still compatible maybe do it via maven plugin is my schema still compare",
    "start": "1989179",
    "end": "1996049"
  },
  {
    "text": "bus you can really checks it check those compatibility and on the entire line now",
    "start": "1996049",
    "end": "2002619"
  },
  {
    "start": "2002000",
    "end": "2083000"
  },
  {
    "text": "the latest and coolest thing in the world of micro services is service basically we got tired of having to",
    "start": "2002619",
    "end": "2010509"
  },
  {
    "text": "deploy having to take responsibility for machines we wanted just our logic we",
    "start": "2010509",
    "end": "2016179"
  },
  {
    "text": "didn't even want containers your parents can also be a pain so imagine just running your logic your macro services",
    "start": "2016179",
    "end": "2021549"
  },
  {
    "text": "logic as a function you get an event magically runs sends a response and the",
    "start": "2021549",
    "end": "2027970"
  },
  {
    "text": "nice thing is that if you don't get an event it magically doesn't run which means you don't pay for it this stuff",
    "start": "2027970",
    "end": "2033879"
  },
  {
    "text": "these days when we're looking at the recession service is actually more attractive than ever and if you have one",
    "start": "2033879",
    "end": "2041259"
  },
  {
    "text": "of those businesses that have a surging demand because everyone is fine - I check your inventory in the warehouse do",
    "start": "2041259",
    "end": "2047349"
  },
  {
    "text": "you have toilet paper today you can actually scale the service platforms",
    "start": "2047349",
    "end": "2052779"
  },
  {
    "text": "will allow you to scale automatically so you don't even have to worry about that really really fantastic stuff and also",
    "start": "2052779",
    "end": "2059980"
  },
  {
    "text": "quite familiar because basically you get events and you respond to them is what",
    "start": "2059980",
    "end": "2066010"
  },
  {
    "text": "are micro even driven micro services did all along only one thing is missing",
    "start": "2066010",
    "end": "2071398"
  },
  {
    "text": "we're missing our states which I just talked about how useful it is to have your local state those service functions",
    "start": "2071399",
    "end": "2078608"
  },
  {
    "text": "are ephemeral they come and go you don't have their own local database what what",
    "start": "2078609",
    "end": "2084669"
  },
  {
    "text": "do we do well we get things right so we really really want state for a lot of",
    "start": "2084669",
    "end": "2091329"
  },
  {
    "text": "really good results and the way we do it now is to store it in a cloud database",
    "start": "2091329",
    "end": "2096608"
  },
  {
    "text": "DynamoDB one of those things it's not ideal it can get really expensive we can",
    "start": "2096609",
    "end": "2102880"
  },
  {
    "text": "do some optimizations to make it slightly less expensive for some state micro services don't get those service",
    "start": "2102880",
    "end": "2109029"
  },
  {
    "text": "functions don't get thrown away immediately so if it's for some state for nearby functions not really awesome",
    "start": "2109029",
    "end": "2115510"
  },
  {
    "text": "but better than nothing we really want our own behavior back we want this shirt stream of events we",
    "start": "2115510",
    "end": "2121250"
  },
  {
    "text": "want to be able to get notifications for our state and really to control our own destiny once again so we're kind of",
    "start": "2121250",
    "end": "2130279"
  },
  {
    "text": "looking in this kind of architecture where we've have a local database that will keep getting updated by other",
    "start": "2130279",
    "end": "2136039"
  },
  {
    "text": "services by a shared database by all kinds of direction and we can really",
    "start": "2136039",
    "end": "2141589"
  },
  {
    "text": "update each other states and this is basically what we see is the future",
    "start": "2141589",
    "end": "2148480"
  },
  {
    "text": "Microsoft has a bit of it they call it durable functions definitely worth",
    "start": "2148480",
    "end": "2153980"
  },
  {
    "text": "checking out we think that having surveillance with state is kind of where",
    "start": "2153980",
    "end": "2159559"
  },
  {
    "text": "every other efforts came into we want it we are still looking for a way to really",
    "start": "2159559",
    "end": "2165799"
  },
  {
    "text": "trigger those updates with events updates 3 getting events just updated",
    "start": "2165799",
    "end": "2170869"
  },
  {
    "text": "states don't necessarily get a response and really getting those unified view of having a shared log that everyone gets",
    "start": "2170869",
    "end": "2177260"
  },
  {
    "text": "updates from so yeah single finished",
    "start": "2177260",
    "end": "2182450"
  },
  {
    "text": "right on time to be weird return of where did we start all the problems",
    "start": "2182450",
    "end": "2189049"
  },
  {
    "text": "resolved and forms we are looking to solve soon",
    "start": "2189049",
    "end": "2193088"
  }
]