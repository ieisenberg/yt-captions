[
  {
    "text": "so uh I think in in Revenge for a I've I've argued quite vehemently for",
    "start": "6440",
    "end": "15040"
  },
  {
    "text": "something I call computational diversity and um I I guess you can uh blame the PC um",
    "start": "15040",
    "end": "25080"
  },
  {
    "text": "if this is off the topic of uh functional programming as you know it um",
    "start": "25080",
    "end": "31000"
  },
  {
    "text": "but from my point of view uh um I'm pleased to represent and probably",
    "start": "31000",
    "end": "36840"
  },
  {
    "text": "misrepresent um a uh a strange functional programming",
    "start": "36840",
    "end": "45079"
  },
  {
    "text": "Planet uh for most people Far Far Away uh which I've come to call Vector",
    "start": "45079",
    "end": "50760"
  },
  {
    "text": "functional programming just because rebranding uh sometimes",
    "start": "50760",
    "end": "56600"
  },
  {
    "text": "helps um and uh",
    "start": "56719",
    "end": "61920"
  },
  {
    "text": "so and the uh originally I thought this talk there",
    "start": "62280",
    "end": "67360"
  },
  {
    "text": "was some juggling in the schedule was going to follow Dean so U Dean and I last summer uh when we were working",
    "start": "67360",
    "end": "74840"
  },
  {
    "text": "together uh got really fed up with the term Big Data uh so we've agreed to you",
    "start": "74840",
    "end": "80520"
  },
  {
    "text": "know Dean's trademark copius data as in fact most people who have big",
    "start": "80520",
    "end": "86799"
  },
  {
    "text": "data or say they have don't um normally a talk on Vector",
    "start": "86799",
    "end": "92159"
  },
  {
    "text": "functional array programming begins and ends with some amazing examples right",
    "start": "92159",
    "end": "99200"
  },
  {
    "text": "where there's a you know some you know exciting program from primes to The Game",
    "start": "99200",
    "end": "105640"
  },
  {
    "text": "of Life presented in a few characters and demoed and uh it is usually Applause",
    "start": "105640",
    "end": "113600"
  },
  {
    "text": "wow and a lot of WTF uh going out of the room um last",
    "start": "113600",
    "end": "118759"
  },
  {
    "text": "summer harmes and I Harm's a frequent speaker of the Chicago area who's an avid J user",
    "start": "118759",
    "end": "126680"
  },
  {
    "text": "and Chris who's both a J and K user um we talked and we said you know the part",
    "start": "126680",
    "end": "132440"
  },
  {
    "text": "of the problem with this is that people just go away kind of oh yeah I saw that um sort of curious and",
    "start": "132440",
    "end": "139680"
  },
  {
    "text": "interesting um so we've kind of changed our approach so we won't be doing any amazing demos or looking a lot of code",
    "start": "139680",
    "end": "146440"
  },
  {
    "text": "I'm going to try and talk about why people um in particular why uh We've",
    "start": "146440",
    "end": "151959"
  },
  {
    "text": "selected um array programming or vector programming as the uh",
    "start": "151959",
    "end": "158319"
  },
  {
    "text": "tool um of choice and I'm going to look at fairly",
    "start": "158319",
    "end": "164519"
  },
  {
    "text": "quickly at array languages there's fortunately there's not a lot of them um and they're similar but different then",
    "start": "164519",
    "end": "171560"
  },
  {
    "text": "I'll talk about uh a particular dialect of vector functional programming uh the",
    "start": "171560",
    "end": "176920"
  },
  {
    "text": "one that we use most frequently in fact it's one we use pretty pretty much exclusively for the last 5 six years and",
    "start": "176920",
    "end": "183440"
  },
  {
    "text": "I'll talk a little bit about uh big data and U try and convince you that before",
    "start": "183440",
    "end": "189280"
  },
  {
    "text": "you stick everything into Jason and force the rest of the world have to parse it um to do any kind of",
    "start": "189280",
    "end": "195519"
  },
  {
    "text": "interesting work um um that querying is important and fortunately I'm in an",
    "start": "195519",
    "end": "201080"
  },
  {
    "text": "audience that actually understands that you know basically uh most operations uh functional operations are",
    "start": "201080",
    "end": "208680"
  },
  {
    "text": "essentially can be you looked as a form of query link probably being the most graphically known example",
    "start": "208680",
    "end": "216080"
  },
  {
    "text": "but um so basically for the last six or",
    "start": "216080",
    "end": "221200"
  },
  {
    "text": "so years we've been charted by a uh a large uh government organization to help",
    "start": "221200",
    "end": "227799"
  },
  {
    "text": "them build tools for analysts and the tools uh the big",
    "start": "227799",
    "end": "235159"
  },
  {
    "text": "problem is that they have lots of tools that are good at working at large amounts of batch",
    "start": "235159",
    "end": "240920"
  },
  {
    "text": "data um you know typically batch is an old term um and usually you you",
    "start": "240920",
    "end": "246760"
  },
  {
    "text": "associate the word job with it U and so when you hear the word job I sort of have nightmares and since I heard that",
    "start": "246760",
    "end": "254159"
  },
  {
    "text": "with Hadoop I was very suspicious um so they have lots of that",
    "start": "254159",
    "end": "259880"
  },
  {
    "text": "stuff and they have lots of computing power but what they don't have is tools that allow uh their people to kind of",
    "start": "259880",
    "end": "266120"
  },
  {
    "text": "think in their data so our challenge is exploring a fairly narrow space of",
    "start": "266120",
    "end": "271280"
  },
  {
    "text": "people we call thinkers um many of whom don't think of themselves in fact deny",
    "start": "271280",
    "end": "276720"
  },
  {
    "text": "that they know anything about programming and definitely don't consider themselves software Engineers or anything else so they know Finance",
    "start": "276720",
    "end": "283120"
  },
  {
    "text": "biology law um lots of other things and they most of them can sort of program in",
    "start": "283120",
    "end": "288360"
  },
  {
    "text": "something script you know they are things like that so they're they're you know people who understand that",
    "start": "288360",
    "end": "294520"
  },
  {
    "text": "Computing is valuable and use it but they they don't really want to be writing programs and so our job has been",
    "start": "294520",
    "end": "302160"
  },
  {
    "text": "basic basically to provide them interactive tools for thinking in you know really interactively in you know",
    "start": "302160",
    "end": "309440"
  },
  {
    "text": "tens to hundreds of terabytes you know which is sort of a small not medium amount of data right probably more than",
    "start": "309440",
    "end": "317880"
  },
  {
    "text": "most companies in Australia have by an order of magnitude um thinker data sets are by",
    "start": "317880",
    "end": "324600"
  },
  {
    "text": "very nature I don't know whether you're familiar with the book bad on the bad Data Book um but basically the quote",
    "start": "324600",
    "end": "331120"
  },
  {
    "text": "from it essentially I think says it all you know 80% of data science don't tell",
    "start": "331120",
    "end": "336960"
  },
  {
    "text": "anyone is actually getting the data and cleaning it into a form where you can usably do anything with it you 10% is",
    "start": "336960",
    "end": "344639"
  },
  {
    "text": "spent doing data science and then 10% is trying to print figure out how to present it to management so they",
    "start": "344639",
    "end": "349720"
  },
  {
    "text": "understand it um the characteristics of real data sets are they have that",
    "start": "349720",
    "end": "356199"
  },
  {
    "text": "they're really quite messy and they're highly variable um the data sets that we use um actually",
    "start": "356199",
    "end": "363319"
  },
  {
    "text": "have time in them and uh somewhat shockingly uh most languages do not have",
    "start": "363319",
    "end": "369520"
  },
  {
    "text": "any kind of robust notion of time or time data types and the databases if",
    "start": "369520",
    "end": "374639"
  },
  {
    "text": "they know about time um they do something really sophisticated like representing characters or something",
    "start": "374639",
    "end": "379880"
  },
  {
    "text": "like that um um data real data has",
    "start": "379880",
    "end": "385199"
  },
  {
    "text": "missing values and out of band values if you have sensors um some people step on",
    "start": "385199",
    "end": "390680"
  },
  {
    "text": "the sensor when the hikers go through the bush um uh or you know they just jam",
    "start": "390680",
    "end": "397199"
  },
  {
    "text": "and so you get out of bound values and you get missing data so to actually work with data it's nice to have encodings",
    "start": "397199",
    "end": "403280"
  },
  {
    "text": "like this the other issue is that in the world we work in um the data has",
    "start": "403280",
    "end": "409520"
  },
  {
    "text": "uncertainty associated with it uh which is typically represented with some sort of uh likelihood function and so it's",
    "start": "409520",
    "end": "417639"
  },
  {
    "text": "very important to be able to compute overall these forms I mean we like to be able to try and make reliable decisions",
    "start": "417639",
    "end": "424360"
  },
  {
    "text": "which actually don't assume that just because uh you get a certain data set with a certain value that that value is",
    "start": "424360",
    "end": "430800"
  },
  {
    "text": "actually can be interpreted as truth or",
    "start": "430800",
    "end": "435879"
  },
  {
    "text": "negative um so if you actually look at sort of data languages uh a data language is a language that's basically",
    "start": "435879",
    "end": "443039"
  },
  {
    "text": "uh together with the data as opposed to a language uh where there's a database",
    "start": "443039",
    "end": "448440"
  },
  {
    "text": "or some sort of store and a language that talks to it most systems today uh",
    "start": "448440",
    "end": "454639"
  },
  {
    "text": "other than sort of SQL um well in fact many SQL implementations run a lot of the SQL",
    "start": "454639",
    "end": "461639"
  },
  {
    "text": "code in the client um as opposed to actually running it in the server",
    "start": "461639",
    "end": "468199"
  },
  {
    "text": "itself U vera for example which is a popular column store for click data um",
    "start": "468199",
    "end": "474400"
  },
  {
    "text": "it does store data in columns and it's actually quite fast with the columns but you still have to move the data in into",
    "start": "474400",
    "end": "479639"
  },
  {
    "text": "the client side memory or into the into the separate process to actually run your program against it that turns out",
    "start": "479639",
    "end": "486199"
  },
  {
    "text": "to be a little bit of a performance problem and so I mean if you're in computer science you know there's a",
    "start": "486199",
    "end": "492159"
  },
  {
    "text": "wonderful way to do language design you start with a few simple and elegate abstractions in the case of hcll of",
    "start": "492159",
    "end": "498560"
  },
  {
    "text": "course pure function execution and there's only functions all the way down and everything that's type with type",
    "start": "498560",
    "end": "504039"
  },
  {
    "text": "inference which is a found Fantastic Model which over the last 20 years is proving to be be even more and more",
    "start": "504039",
    "end": "511000"
  },
  {
    "text": "powerful you know especially in in the current decade I think hcal is going to really have its impact and it's very",
    "start": "511000",
    "end": "518120"
  },
  {
    "text": "exciting um there's usually a dynamic by object I mean the things that are",
    "start": "518120",
    "end": "523640"
  },
  {
    "text": "represented not necessarily an object right functions or whatever and there's a garbage collector and the you know the",
    "start": "523640",
    "end": "530360"
  },
  {
    "text": "good news is is very elegant and if you're really lucky it has a met Meta Meta architecture which can slow it down",
    "start": "530360",
    "end": "536240"
  },
  {
    "text": "even more and make it harder to understand um so you we have a wonderful model here the problem is um it it you",
    "start": "536240",
    "end": "543279"
  },
  {
    "text": "know to get Java fast enough no midly it wasn't a well-designed language um it",
    "start": "543279",
    "end": "548560"
  },
  {
    "text": "was an evolved language there's $2 billion in roughly 10 years of investment by IBM and uh Oracle loan and",
    "start": "548560",
    "end": "556440"
  },
  {
    "text": "it still can't do closures tail recursion or tag",
    "start": "556440",
    "end": "561680"
  },
  {
    "text": "bits um and it will do closures but don't trust them if you're a functional",
    "start": "561680",
    "end": "567200"
  },
  {
    "text": "programmer at least for a couple years um now the bottomup approach is kind of",
    "start": "567200",
    "end": "572760"
  },
  {
    "text": "the engineering approach and I confess that I'm an electrical engineer and I also didn't have very much time to do this so one of the one of the nice",
    "start": "572760",
    "end": "579200"
  },
  {
    "text": "things about engineering is time is your friend so basically you have to get something done quickly then that",
    "start": "579200",
    "end": "584279"
  },
  {
    "text": "constraints your choice and constraints is the real secret to getting things done in life from my perspective so if",
    "start": "584279",
    "end": "591480"
  },
  {
    "text": "you want something to be fast then you know computers actually only like rectangles I'm sorry you know pages on",
    "start": "591480",
    "end": "599600"
  },
  {
    "text": "dis you know pages in memory pages in Cache things in registers The Wider the",
    "start": "599600",
    "end": "606240"
  },
  {
    "text": "better um so in the end if you want something to go fast you know you have to make it into rectangles",
    "start": "606240",
    "end": "613240"
  },
  {
    "text": "sorry um so uh our decision was well why don't we just start with everything",
    "start": "613240",
    "end": "618720"
  },
  {
    "text": "that's in rectangles that makes it easier reduces the semantic distance now the bad news",
    "start": "618720",
    "end": "624480"
  },
  {
    "text": "of course is that this gives you languages which are not as easy to abstract because you have to convert",
    "start": "624480",
    "end": "630720"
  },
  {
    "text": "your problem into rectangles right so you're forced to think this way which is",
    "start": "630720",
    "end": "636200"
  },
  {
    "text": "very frustrating and so our challenge was really trying to find tools that would help uh normal people uh basically",
    "start": "636200",
    "end": "643680"
  },
  {
    "text": "think in rectangles and this is very much like trying to program a GPU in a general",
    "start": "643680",
    "end": "649160"
  },
  {
    "text": "way so that led us to Vector functional programming I won't go into this detail but basically array virtual machines are",
    "start": "649160",
    "end": "656480"
  },
  {
    "text": "much faster and much simpler than object virtual machines and that's one of the reason that's the reason we selected them they're much",
    "start": "656480",
    "end": "662440"
  },
  {
    "text": "smaller they're much faster they're much easier to to they essentially naturally align with a column store so most of the",
    "start": "662440",
    "end": "669160"
  },
  {
    "text": "impedance problems that you have with object models and so on just",
    "start": "669160",
    "end": "674680"
  },
  {
    "text": "disappear um serialization in particular is a joy serialization essentially is a",
    "start": "674680",
    "end": "679880"
  },
  {
    "text": "count and the vector right so you know says well do you support protocol",
    "start": "679880",
    "end": "685440"
  },
  {
    "text": "bubbers and S said well why would I want to I already have the world's fastest",
    "start": "685440",
    "end": "690480"
  },
  {
    "text": "serialization format none um so we can slow it down so that's",
    "start": "690480",
    "end": "697800"
  },
  {
    "text": "basically why and data parallelism is you know really trivially implemented",
    "start": "697800",
    "end": "703240"
  },
  {
    "text": "and so you get and paralis beyond that requires all the other things actors or",
    "start": "703240",
    "end": "708639"
  },
  {
    "text": "um other things so um the question is of course well why wouldn't why would you choose this",
    "start": "708639",
    "end": "715519"
  },
  {
    "text": "over sorry that's what I wanted um over",
    "start": "715519",
    "end": "720800"
  },
  {
    "text": "a lazy functional BM well part of it is we were just ignorant uh in the sense we",
    "start": "720800",
    "end": "725920"
  },
  {
    "text": "you know this started six years ago in this state and the other thing is the the the techniques were building a fast",
    "start": "725920",
    "end": "733360"
  },
  {
    "text": "hasal and you know we didn't know about manual and all this great PhD students were doing all this stuff so uh and we",
    "start": "733360",
    "end": "740000"
  },
  {
    "text": "also want a very interactive environment and sort of build on a commercial platform so we basically went for this",
    "start": "740000",
    "end": "746560"
  },
  {
    "text": "and we went for something with fixed type because that restri reduces the abstractions what we find is the more",
    "start": "746560",
    "end": "752959"
  },
  {
    "text": "abstraction mechanisms you put in code the more code bloat you get and the more overhead and you you know you you",
    "start": "752959",
    "end": "759560"
  },
  {
    "text": "there's this promise of refactoring but there's no serious refactoring tools for any any decent amount of code",
    "start": "759560",
    "end": "765160"
  },
  {
    "text": "refactoring is a you know a barar trick promised by people who talk about it but",
    "start": "765160",
    "end": "770279"
  },
  {
    "text": "no one with a serious code base is able to refactor it because there is no tool support for doing that um and I I'll",
    "start": "770279",
    "end": "776600"
  },
  {
    "text": "dare say that's still true uh even for elegant languages like hosal or forclosure and so on there are no tools",
    "start": "776600",
    "end": "784480"
  },
  {
    "text": "serious tools for large amounts of code um the other thing is the libraries",
    "start": "784480",
    "end": "789800"
  },
  {
    "text": "are implemented by smart people not by people who are figuring out how to have a different kind of collection for hash",
    "start": "789800",
    "end": "795320"
  },
  {
    "text": "Maps or concurrent hashmaps every release with bad implementations",
    "start": "795320",
    "end": "800639"
  },
  {
    "text": "um one of the problems of building building libraries in your own language",
    "start": "800639",
    "end": "805800"
  },
  {
    "text": "is that you would get into a conflict between the library and the runtime because often the runtime needs to know",
    "start": "805800",
    "end": "811399"
  },
  {
    "text": "like the bad serialization in Java Java can never do serialization properly because the VM needs to provide you",
    "start": "811399",
    "end": "818160"
  },
  {
    "text": "minimal support to support serialization efficiently you don't need a lot but you cannot do serialization well just as a",
    "start": "818160",
    "end": "826120"
  },
  {
    "text": "library so there are some issues there um again we're looking to efficiently",
    "start": "826120",
    "end": "831800"
  },
  {
    "text": "exploit the hardware and reactive will show us how well that can be done but in",
    "start": "831800",
    "end": "837079"
  },
  {
    "text": "general um Hardware doesn't do lazy things all that well it really likes them to be fairly imperative when it",
    "start": "837079",
    "end": "843680"
  },
  {
    "text": "comes there and the runtime is considerably simpler than a lazy language",
    "start": "843680",
    "end": "850079"
  },
  {
    "text": "um I'm sure these problems will be addressed and solved and you know people like add manual or leading the way and",
    "start": "850079",
    "end": "856880"
  },
  {
    "text": "um I look forward to seeing those sorts of things so way back in time um two",
    "start": "856880",
    "end": "862000"
  },
  {
    "text": "characters um uh particular um uh bov",
    "start": "862000",
    "end": "868320"
  },
  {
    "text": "and Iris and uh came up with this idea of a of a programming language and it was really to describe the hardware it",
    "start": "868320",
    "end": "875160"
  },
  {
    "text": "was essentially a hardware description language for the 370 computers and it accidentally escaped uh because it was",
    "start": "875160",
    "end": "882480"
  },
  {
    "text": "the only way you could do interactive programming in those days your choice was Fortran Cobalt or APL and you know",
    "start": "882480",
    "end": "888279"
  },
  {
    "text": "if you were a thinker there was no way you know you would have any other choice and uh it's a wonderful book that really",
    "start": "888279",
    "end": "895279"
  },
  {
    "text": "gives you an idea U Donald MC MRE really talks about the",
    "start": "895279",
    "end": "901240"
  },
  {
    "text": "motivation for the hieroglyphics of APL um there is a whole U Vector system out",
    "start": "901240",
    "end": "907440"
  },
  {
    "text": "there um in some galaxy far far away and they probably they do breathe oxygen we",
    "start": "907440",
    "end": "913120"
  },
  {
    "text": "know that um uh Ken Iverson U there a wonderful guy called trenchard Moore who",
    "start": "913120",
    "end": "919680"
  },
  {
    "text": "in a keynote in 19 1980 1979 um brilliantly described everything",
    "start": "919680",
    "end": "926800"
  },
  {
    "text": "in the universe as nested a everything from architecture to biology",
    "start": "926800",
    "end": "932720"
  },
  {
    "text": "and so on it's a wonderful wonderful talk and that's spawn Ang languages like UNL and",
    "start": "932720",
    "end": "938480"
  },
  {
    "text": "apl2 and APL plus which you know original vctor languages only dealt with",
    "start": "938480",
    "end": "944199"
  },
  {
    "text": "n-dimensional uh arrays this allowed you to Nest arrays inside arrays and uh um in particular that",
    "start": "944199",
    "end": "953000"
  },
  {
    "text": "spond another of things and of course people sort of said well you know there's some good ideas here but I only",
    "start": "953000",
    "end": "958240"
  },
  {
    "text": "need a subset of them and you can talk to the people who did s andr mat lab Pine numerics octave and you'll see that",
    "start": "958240",
    "end": "965319"
  },
  {
    "text": "they're all inspired from some and more recently Julia for example which is a",
    "start": "965319",
    "end": "970480"
  },
  {
    "text": "new kind of R um Ken left IBM and decided that he",
    "start": "970480",
    "end": "977199"
  },
  {
    "text": "wanted to do a no language which was much more powerful uh which he called um",
    "start": "977199",
    "end": "983279"
  },
  {
    "text": "J and U uh which is sort of considered to be the cisk um uh Vector",
    "start": "983279",
    "end": "991319"
  },
  {
    "text": "language and then Arthur Whitney went off he actually wrote The Interpreter for Ken because Ken was kind of like his",
    "start": "991319",
    "end": "998040"
  },
  {
    "text": "adopted father and Ken didn't understand C so Arthur wrote The Interpreter for J and said Ken this is wonderful but just",
    "start": "998040",
    "end": "1004079"
  },
  {
    "text": "too complicated for me so he has the risk language of the risk family",
    "start": "1004079",
    "end": "1009480"
  },
  {
    "text": "K and you know there's various other languages based on this so just to",
    "start": "1009480",
    "end": "1015199"
  },
  {
    "text": "really terrify you this is exactly what you want on your iPad right nice thing now is I can put an APL keyboard on my",
    "start": "1015199",
    "end": "1021959"
  },
  {
    "text": "iPad and the good news is I can tweet whole applications to other people",
    "start": "1021959",
    "end": "1028918"
  },
  {
    "text": "right um the the little picture touch and tweet is actually a project done by",
    "start": "1028919",
    "end": "1034480"
  },
  {
    "text": "some students at The hassa pler Institute basically for remote workers that have handheld devices were who are",
    "start": "1034480",
    "end": "1041480"
  },
  {
    "text": "actually working on complicated Power Systems and the problem is on the power system they're out in the field and they",
    "start": "1041480",
    "end": "1046678"
  },
  {
    "text": "have to ask ask pretty hard questions like how much power is flowing through these which of these things are live",
    "start": "1046679",
    "end": "1052400"
  },
  {
    "text": "which can I disconnect and so and what they do is they talk to someone at the other end who's really good and they're doing queries and answering questions",
    "start": "1052400",
    "end": "1059400"
  },
  {
    "text": "and shooting them Maps but this is there's a lot of mistakes with the voice over and things like that so basically",
    "start": "1059400",
    "end": "1065480"
  },
  {
    "text": "we Proto they prototype something that actually let you Sally write query programs on your handheld just by moving",
    "start": "1065480",
    "end": "1072240"
  },
  {
    "text": "glyphs it's really quite effective for their application um of course APL is known",
    "start": "1072240",
    "end": "1078320"
  },
  {
    "text": "for you know this is John scholes you very popular video on The Game of Life um there's been many other you uh things",
    "start": "1078320",
    "end": "1087039"
  },
  {
    "text": "to do this sedok is another favorite you know how many characters can you do it and it's well known in in the vector",
    "start": "1087039",
    "end": "1093120"
  },
  {
    "text": "language community that we we don't know about klocks we only have line you know characters how many characters is your",
    "start": "1093120",
    "end": "1099720"
  },
  {
    "text": "program right um so these things have very",
    "start": "1099720",
    "end": "1105320"
  },
  {
    "text": "efficient languages and the badge of honor um you know you can go to Steve ador's",
    "start": "1105320",
    "end": "1111360"
  },
  {
    "text": "website is is a no stinking Loop so basically you know if you're really good",
    "start": "1111360",
    "end": "1116760"
  },
  {
    "text": "Vector programmer you have no Loops in your code no explicit Loops which is kind of true of most functional",
    "start": "1116760",
    "end": "1122840"
  },
  {
    "text": "programmers right you can do everything's with maps and function application and so on and some of you",
    "start": "1122840",
    "end": "1129559"
  },
  {
    "text": "may have heard of uh patterns uh popularized by Eric gamma and so on but",
    "start": "1129559",
    "end": "1136559"
  },
  {
    "text": "the first paper on patterns is actually uh a paper by Alan Peis who was a a",
    "start": "1136559",
    "end": "1143799"
  },
  {
    "text": "giant who died Too Young in computer science uh on lyrical programming and",
    "start": "1143799",
    "end": "1149280"
  },
  {
    "text": "basically idioms you know most patterns um you know the patterns that are found",
    "start": "1149280",
    "end": "1154520"
  },
  {
    "text": "in the patterns book are actually just idioms in a reasonable language unfortunately there most of them are",
    "start": "1154520",
    "end": "1160760"
  },
  {
    "text": "stolen from functional programming languages it didn't have them so we had to teach all this goop to",
    "start": "1160760",
    "end": "1166039"
  },
  {
    "text": "object-oriented programmers but maper of course being the most fashionable pattern",
    "start": "1166039",
    "end": "1173120"
  },
  {
    "text": "today so this has been along for around for some time and there's now a movie",
    "start": "1173120",
    "end": "1178919"
  },
  {
    "text": "being made by Katherine lwell whose father was one of the great implementers uh called chasing men that stare at AR",
    "start": "1178919",
    "end": "1185240"
  },
  {
    "text": "Rays is not out yet um and people who look at these people talk about one of the challenges that's been getting",
    "start": "1185240",
    "end": "1191280"
  },
  {
    "text": "because we're losing a whole generation of people who thought this way uh and there is still a strong Community but",
    "start": "1191280",
    "end": "1197200"
  },
  {
    "text": "the whole way you think in terms of vector programming is not well understood and appreciated so what",
    "start": "1197200",
    "end": "1203080"
  },
  {
    "text": "Catherine's been trying to do this but some people talk about lycal or idiomatic programming since they",
    "start": "1203080",
    "end": "1208120"
  },
  {
    "text": "actually move things around in shapes they think sort of visual visually call them shape shifters or",
    "start": "1208120",
    "end": "1214280"
  },
  {
    "text": "Transformers um all sorts of things some people think they're just line noise generators right they look at the",
    "start": "1214280",
    "end": "1220360"
  },
  {
    "text": "characters coming out um but in practice um this is a very different way of",
    "start": "1220360",
    "end": "1226320"
  },
  {
    "text": "thinking there are a bunch of common features for Vector languages uh they're generally",
    "start": "1226320",
    "end": "1232120"
  },
  {
    "text": "applicative and expression oriented they're imperative and they have assign but but most of the computation really",
    "start": "1232120",
    "end": "1238039"
  },
  {
    "text": "is just a uh data flow transformation so it's very functional for the most part and um you know the problem is that when",
    "start": "1238039",
    "end": "1246039"
  },
  {
    "text": "people start they decide they want to write their whole program in one line um so we generally recommend that people",
    "start": "1246039",
    "end": "1252480"
  },
  {
    "text": "Begin by having quite a few little assignments in there and then um you know collapse and fold those back up uh",
    "start": "1252480",
    "end": "1259080"
  },
  {
    "text": "very simple there's a large library of built-in generalized operations um in most these language there's no local and",
    "start": "1259080",
    "end": "1265960"
  },
  {
    "text": "Global scope for us that's very important because we want to be able to take queries and push them from a cloud-based system right out to sensors",
    "start": "1265960",
    "end": "1273440"
  },
  {
    "text": "so it allows us to very easily distribute computations to the site where they need to be so if the sensor needs to sit there and compute the",
    "start": "1273440",
    "end": "1279679"
  },
  {
    "text": "average with a little bit of power and then get you know Sunburst and actually send up and transmit a packet it can",
    "start": "1279679",
    "end": "1285960"
  },
  {
    "text": "transmit the average because it can't hold all the data um and you know the programmer here",
    "start": "1285960",
    "end": "1293279"
  },
  {
    "text": "is clearly a consumer you don't tend to you know you need really efficient operations are actually built under the",
    "start": "1293279",
    "end": "1299480"
  },
  {
    "text": "hood in you know machine code um probably using C under the misbelief",
    "start": "1299480",
    "end": "1304559"
  },
  {
    "text": "that you actually know what c is doing as a programming language today um the good news is they're all",
    "start": "1304559",
    "end": "1310799"
  },
  {
    "text": "similar but the bad news is they're all quite different um so programming in one",
    "start": "1310799",
    "end": "1316480"
  },
  {
    "text": "uh is still a context switch it's going to take you at least a month to go from one to the",
    "start": "1316480",
    "end": "1322320"
  },
  {
    "text": "other in general you you know since it's functional you use the usual thing for",
    "start": "1322320",
    "end": "1327400"
  },
  {
    "text": "doing this U uh you know there's conditional assignment uh the uh",
    "start": "1327400",
    "end": "1333840"
  },
  {
    "text": "language like K of a very generalized operation of a men which is essentially like a scatter gather operation so you",
    "start": "1333840",
    "end": "1339720"
  },
  {
    "text": "can basically you know position things arbitrarily into an arbitrary structure in a single assignment and do that",
    "start": "1339720",
    "end": "1346080"
  },
  {
    "text": "conditionally um uh in particular over and scan are",
    "start": "1346080",
    "end": "1351279"
  },
  {
    "text": "heavily used in fact over and over and scan are actually used in K to implement do and wild Loops there is actually no",
    "start": "1351279",
    "end": "1358000"
  },
  {
    "text": "native do W Loops everything is done with over and scan uh basically which you know s iterate until the fix point",
    "start": "1358000",
    "end": "1364600"
  },
  {
    "text": "and then stop so and things like recursion and pointer water most of the",
    "start": "1364600",
    "end": "1369799"
  },
  {
    "text": "operations there are actually sort of done bottom up recursively a sort of unnatural style for some people but",
    "start": "1369799",
    "end": "1375640"
  },
  {
    "text": "extremely Elegant Style for some people say not not for you",
    "start": "1375640",
    "end": "1381559"
  },
  {
    "text": "at um but it's not the way you do it in school typically so it's not the naive algorithm right and so U so they're very",
    "start": "1381559",
    "end": "1389039"
  },
  {
    "text": "very fast but there's only kind of one way to do it and that's the way you do it you do it with a scan and you know",
    "start": "1389039",
    "end": "1395240"
  },
  {
    "text": "that solves sort of all problems so um and this gives you a lot of",
    "start": "1395240",
    "end": "1401400"
  },
  {
    "text": "expressive power um I think it's very important some you know people sort of think of",
    "start": "1401400",
    "end": "1406960"
  },
  {
    "text": "this is these are these AP operators and you're throwing them up in the air and slicing and dicing them and the and the",
    "start": "1406960",
    "end": "1412200"
  },
  {
    "text": "solution lands on the table so and that's the only thing I could get all the all these array guys to agree on",
    "start": "1412200",
    "end": "1417600"
  },
  {
    "text": "yeah that's the way we think um so you know if you want to",
    "start": "1417600",
    "end": "1422799"
  },
  {
    "text": "learn this one of the classic problems people go out you can download Jay or download K uh kdb and try either one of",
    "start": "1422799",
    "end": "1429840"
  },
  {
    "text": "them for free um uh this is not going to be something you",
    "start": "1429840",
    "end": "1435720"
  },
  {
    "text": "learn at home in a weekend it's an investment most people the way",
    "start": "1435720",
    "end": "1442159"
  },
  {
    "text": "they learn it's very much the way you learn scheme or you know the little lisper in essentially you do you",
    "start": "1442159",
    "end": "1448120"
  },
  {
    "text": "practice a lot of exercises so you really the first thing you learn is how to do collection programming I would say",
    "start": "1448120",
    "end": "1454120"
  },
  {
    "text": "and so you become comfortable with the idioms and after you've done those for a month or so then you actually think",
    "start": "1454120",
    "end": "1460520"
  },
  {
    "text": "about writing programs but until you're comfortable with the idioms U the the terminology getting way so the first",
    "start": "1460520",
    "end": "1466520"
  },
  {
    "text": "thing is to kind of do your cata so you still know how to do the moves right and know where the keyboard shortcuts are",
    "start": "1466520",
    "end": "1473039"
  },
  {
    "text": "you don't need many keyboard shortcuts here because you know just typing the program is the shortest way to type it",
    "start": "1473039",
    "end": "1479480"
  },
  {
    "text": "um so you learn the nouns and verbs and the adverbs the ways of the idioms of it",
    "start": "1479480",
    "end": "1485000"
  },
  {
    "text": "um you focus on Expressions that shape and transform data and although I'm not a hll um haven't had the privilege of",
    "start": "1485000",
    "end": "1492480"
  },
  {
    "text": "programming anything but trivial things in high school this seems to be very much in the same Spirit of the high",
    "start": "1492480",
    "end": "1497679"
  },
  {
    "text": "school community and the broader functional programming you write many uh",
    "start": "1497679",
    "end": "1503000"
  },
  {
    "text": "small functions you don't focus on trying to do the smallest one um but unfortunately is a disease in an",
    "start": "1503000",
    "end": "1509399"
  },
  {
    "text": "expression oriented language as soon as you know how to do this you go oh yeah and it folds back up so we've been",
    "start": "1509399",
    "end": "1515960"
  },
  {
    "text": "doing some interesting tooling that let you put comments inside the expressions and slide over the Expressions so you",
    "start": "1515960",
    "end": "1521840"
  },
  {
    "text": "can actually comment what's happening at each operation because you tend to get these very Den codes we've been looking",
    "start": "1521840",
    "end": "1527440"
  },
  {
    "text": "at things like that we we build an ID like light table that exposes exposes the flow of computations and things like",
    "start": "1527440",
    "end": "1533440"
  },
  {
    "text": "that to try so we're trying to experiment with how to make expression languages sort of more consumable than most software engineering like uh",
    "start": "1533440",
    "end": "1540320"
  },
  {
    "text": "because one of the big criticisms of a lot of this code is you can't read it afterwards um and you can't read the",
    "start": "1540320",
    "end": "1547120"
  },
  {
    "text": "Java code either but that doesn't seem to bother people I guess when you have to page",
    "start": "1547120",
    "end": "1552919"
  },
  {
    "text": "through it you say it must be doing a lot for you and start with you know it's okay to",
    "start": "1552919",
    "end": "1558360"
  },
  {
    "text": "use Loops to begin with you know you don't feel like you need to spank yourself because you're using a loop or something like that or you're doing",
    "start": "1558360",
    "end": "1564279"
  },
  {
    "text": "assignments um and as you sort of build up with these Kata then you can start to actually write more interesting",
    "start": "1564279",
    "end": "1571960"
  },
  {
    "text": "programs and um you I I know some people after Lambda Jam Chicago who did this",
    "start": "1571960",
    "end": "1577559"
  },
  {
    "text": "and they actually you know have said I've gotten further with this before last time I just quit because I couldn't",
    "start": "1577559",
    "end": "1582720"
  },
  {
    "text": "learn it in 3 hours like every other programming language um the particular language you use is actually uh called Q",
    "start": "1582720",
    "end": "1590000"
  },
  {
    "text": "which is a DSL based for finance people on top of a u Vector functional language",
    "start": "1590000",
    "end": "1595760"
  },
  {
    "text": "called K and you can see it has its own uh vocabulary and list some of the words",
    "start": "1595760",
    "end": "1602240"
  },
  {
    "text": "you'll recognize but some of them are different like pointer chasing is a scan",
    "start": "1602240",
    "end": "1607880"
  },
  {
    "text": "kind of pattern for doing things adverbs are just a way to compose things um you",
    "start": "1607880",
    "end": "1613799"
  },
  {
    "text": "know those um U you know enumerations are way for dealing with large sets of values of",
    "start": "1613799",
    "end": "1620520"
  },
  {
    "text": "keys because um in general you want characters to go away and encode everything as integers",
    "start": "1620520",
    "end": "1626159"
  },
  {
    "text": "inside symbols and so on I don't plan to go through these um this is a I know you",
    "start": "1626159",
    "end": "1631799"
  },
  {
    "text": "may know Dennis chass he's a professor at um NYU but he writes the uh",
    "start": "1631799",
    "end": "1636840"
  },
  {
    "text": "Scientific American puzzles column and uh this is a a you know basically U just",
    "start": "1636840",
    "end": "1643840"
  },
  {
    "text": "a a quote from Dennis um Dennis is an avid uh uh K user he doesn't even use Q",
    "start": "1643840",
    "end": "1651279"
  },
  {
    "text": "right sort of only sissies use Q most normal people use Q because K's just too",
    "start": "1651279",
    "end": "1657960"
  },
  {
    "text": "strange so the person who did this is a is a probably one of the brightest",
    "start": "1657960",
    "end": "1663320"
  },
  {
    "text": "developers I know and Arthur Whitney um whose uh father was basically",
    "start": "1663320",
    "end": "1669840"
  },
  {
    "text": "a Harvard roommate of Ken eers Iverson's and A+ was his first language which was",
    "start": "1669840",
    "end": "1675799"
  },
  {
    "text": "really done at Morgan Stanley uh dealing with fisted fixed assets uh it's been open source since then he wrote The",
    "start": "1675799",
    "end": "1682960"
  },
  {
    "text": "Interpreter for Ken Iverson's J language and U Roger huie who's the",
    "start": "1682960",
    "end": "1689960"
  },
  {
    "text": "principal implementor for Jay still testifies that you know yeah he would not be able to understand Jay if it",
    "start": "1689960",
    "end": "1696399"
  },
  {
    "text": "weren't for Arthur's initial interpreter which um is still there um even though it was written in an afternoon it's",
    "start": "1696399",
    "end": "1702760"
  },
  {
    "text": "still the core of the J language and then Arthur then has built a whole series of languages um",
    "start": "1702760",
    "end": "1709360"
  },
  {
    "text": "uh over the time and the nice thing about every version of K is it's incompatible with the previous version because he actually is is one of",
    "start": "1709360",
    "end": "1717080"
  },
  {
    "text": "those few people that actually looks and figures out what should be taken out and changed and doesn't make a commitment to",
    "start": "1717080",
    "end": "1722640"
  },
  {
    "text": "the Past um this works really well if you have a small hostage customer",
    "start": "1722640",
    "end": "1729480"
  },
  {
    "text": "base which in the case of kdb they do you basically you're doing if you're",
    "start": "1729880",
    "end": "1734960"
  },
  {
    "text": "doing derivatives and hedge funds then it's a tool of choice for them um but",
    "start": "1734960",
    "end": "1740279"
  },
  {
    "text": "it's actually an excellent model because um he's made some real breakthroughs with each level and trying making making",
    "start": "1740279",
    "end": "1747120"
  },
  {
    "text": "things backward compatibility would prevent those sorts of things now the nice thing I did convince him with q q",
    "start": "1747120",
    "end": "1753440"
  },
  {
    "text": "is order sit a level above this so Q actually the Q level is what most people in finance use and it's actually stable",
    "start": "1753440",
    "end": "1760880"
  },
  {
    "text": "over time so and he recently he's implemented an operating system Kos and K4 um and uh you know just as an example",
    "start": "1760880",
    "end": "1769399"
  },
  {
    "text": "you can see how more how much more friendly it is to write sodoku in Q",
    "start": "1769399",
    "end": "1774760"
  },
  {
    "text": "versus in K it's just a lot bigger so there's key basically it's",
    "start": "1774760",
    "end": "1781080"
  },
  {
    "text": "sort of keyword syntax added to that um and this is sort of one of a typical",
    "start": "1781080",
    "end": "1786159"
  },
  {
    "text": "Arthur uh keynote I don't know what I'm going to talk about so I think I'll write some code so he decided it would",
    "start": "1786159",
    "end": "1792120"
  },
  {
    "text": "you know he looked at gnu and all these other things and said Gee everybody who builds an operating system SS to be an",
    "start": "1792120",
    "end": "1797519"
  },
  {
    "text": "editor so I should write an editor and he looked at them and the smallest one he could find that was useful was about 800 k bytes uh I think I can't remember",
    "start": "1797519",
    "end": "1805480"
  },
  {
    "text": "whe that's with the libraries or without the libraries it doesn't matter uh this is a complete text editor uh written in K I think it's",
    "start": "1805480",
    "end": "1813159"
  },
  {
    "text": "about 78 characters whatever we call um so it's an extremely expressive uh and",
    "start": "1813159",
    "end": "1820600"
  },
  {
    "text": "dense uh language um it's very simpler I'm getting to the end of my talk so I'll go",
    "start": "1820600",
    "end": "1826679"
  },
  {
    "text": "on it basically has n verbs and adverbs ver is a way to basically uh just",
    "start": "1826679",
    "end": "1831919"
  },
  {
    "text": "compose compose functions into new ones and the nice thing is that when you",
    "start": "1831919",
    "end": "1837320"
  },
  {
    "text": "combine it with essentially an SQL dialect ksql is much simpler because it does implicit joins and implicit group",
    "start": "1837320",
    "end": "1845080"
  },
  {
    "text": "eyes so that basically has the size of typical SQL queries right off the bat",
    "start": "1845080",
    "end": "1850120"
  },
  {
    "text": "and the nice thing is you can put a function in any position so you have a tur complete very powerful environment",
    "start": "1850120",
    "end": "1856440"
  },
  {
    "text": "um and basically you can e make dsls by surfacing new things I mean like the select is actually syntactic sugar for",
    "start": "1856440",
    "end": "1862440"
  },
  {
    "text": "that you know question mark table condition you know whereby that's the actual K code",
    "start": "1862440",
    "end": "1869200"
  },
  {
    "text": "underneath but and so you can do very simple sort of things like this um it's got the",
    "start": "1869200",
    "end": "1877360"
  },
  {
    "text": "basic thing is a the complete virtual machine with obbc TCP IP the web server",
    "start": "1877360",
    "end": "1883639"
  },
  {
    "text": "and everything like that it's about 80 K bytes the source code for the virtual machine and the object code are almost",
    "start": "1883639",
    "end": "1889880"
  },
  {
    "text": "the same size that's not easy to do folks um and",
    "start": "1889880",
    "end": "1895720"
  },
  {
    "text": "so it's a complete running platform and you just bring it up and that's sort of a very typical that's a pretty comp you want to write that vwap query uh using",
    "start": "1895720",
    "end": "1903399"
  },
  {
    "text": "most other systems it's pretty complicated and the good thing is it executes with really really pretty good",
    "start": "1903399",
    "end": "1909240"
  },
  {
    "text": "conform performance the only thing we need to add is some of that neat stuff that U Ed was talking about and that's",
    "start": "1909240",
    "end": "1915200"
  },
  {
    "text": "where it's going so let me just wrap up here um this is stolen from Dean this is word",
    "start": "1915200",
    "end": "1920720"
  },
  {
    "text": "count and scalding you can see his talk here it is in Hive and that's basically the Q code below and it's going to be a",
    "start": "1920720",
    "end": "1927360"
  },
  {
    "text": "lot faster um and I won't go in so the good",
    "start": "1927360",
    "end": "1933159"
  },
  {
    "text": "news is it's really productive very fast uh bad news is it's not really all that",
    "start": "1933159",
    "end": "1939840"
  },
  {
    "text": "well documented there's three errors you know domain type and range um",
    "start": "1939840",
    "end": "1948639"
  },
  {
    "text": "um there is the shaped system it' be nice to have one that would help people reason about more complicated programs",
    "start": "1948639",
    "end": "1954279"
  },
  {
    "text": "in practice most of the programs that people write in finance are actually pretty simple they're much more like scripts um uh the thing is that after",
    "start": "1954279",
    "end": "1963320"
  },
  {
    "text": "you use it um even our even our UI guy now is completely ruined because he",
    "start": "1963320",
    "end": "1968399"
  },
  {
    "text": "doesn't understand why we're doing a UI for these people when it's so easy for them just to be able to type uh uh you",
    "start": "1968399",
    "end": "1974720"
  },
  {
    "text": "know Q code in he says this is so easy why do we have this right now which is really disgusting cuz he's a brilliant",
    "start": "1974720",
    "end": "1980760"
  },
  {
    "text": "UI designer so I'll finish is essentially you know the nice thing is that you know",
    "start": "1980760",
    "end": "1987559"
  },
  {
    "text": "you can get a lot done in a few lines of code and so you know it really saves you a lot of the trouble of high ceremony",
    "start": "1987559",
    "end": "1993919"
  },
  {
    "text": "languages um the challenges of using dense expression languages from a software engineering point of view is",
    "start": "1993919",
    "end": "2000000"
  },
  {
    "text": "still a challenges but there are ways to write this code very literately and we're exploring things and embed documentation let you query it let you",
    "start": "2000000",
    "end": "2007120"
  },
  {
    "text": "look visually the execution path to try and get past that criticism and we are seeing the spread of this language out",
    "start": "2007120",
    "end": "2013440"
  },
  {
    "text": "of Niche things now into others by essenti underneath is basically a a vector functional it's basically a",
    "start": "2013440",
    "end": "2019960"
  },
  {
    "text": "scheme interpreter where the lists are represented as vectors it's not with that form thanks I'm over my time",
    "start": "2019960",
    "end": "2027799"
  }
]