[
  {
    "start": "0",
    "end": "67000"
  },
  {
    "text": "Welcome to another episode of the GOTO Book\nClub. My name is Stefan Hofer. I am a consultant and coach, and I model domains,\nbusiness processes, and software architecture",
    "start": "4110",
    "end": "15360"
  },
  {
    "text": "using different notations and diagramming\ntechniques. I have also written a book about one, \"Domain\nStorytelling,\" and I had the pleasure of being",
    "start": "15360",
    "end": "22660"
  },
  {
    "text": "interviewed for this channel. Today, I am the interviewer, and I could not\nhave asked for a better book to discuss.",
    "start": "22660",
    "end": "29930"
  },
  {
    "text": "Today we are going to discuss \"Creating Software\nwith Modern Diagramming Techniques, Build",
    "start": "29930",
    "end": "35860"
  },
  {
    "text": "Better Software with Mermaid.\" The author is Ashley Peacock. Ashley, welcome to the GOTO Book Club.",
    "start": "35860",
    "end": "42660"
  },
  {
    "text": "Do you want to introduce yourself to our viewers? Hi, I'm Ashley Peacock.",
    "start": "42660",
    "end": "47810"
  },
  {
    "text": "I live in the UK. I'm a staff-level software engineer for a\nUK insurance company.",
    "start": "47810",
    "end": "54790"
  },
  {
    "text": "I've been diagramming for a very long time. And as Stefan said, I wrote a book all about\nit called \"Creating Software with Modern Diagramming",
    "start": "54790",
    "end": "63789"
  },
  {
    "text": "Techniques.\" Awesome. So let's talk about diagrams and not just\ndrawing diagrams by hand, which is probably",
    "start": "63789",
    "end": "75590"
  },
  {
    "start": "67000",
    "end": "546000"
  },
  {
    "text": "the most natural way to approach diagramming,\nbut also diagrams as code.",
    "start": "75590",
    "end": "82880"
  },
  {
    "text": "That is a concept that I believe has become\nquite popular in the last couple of years,",
    "start": "82880",
    "end": "88439"
  },
  {
    "text": "and you built your book around this concept\nor the notation, the tooling you use is built",
    "start": "88440",
    "end": "93520"
  },
  {
    "text": "around that. Can you give us an introduction to diagramming\nas code for someone who is not familiar with that concept yet?",
    "start": "93520",
    "end": "99960"
  },
  {
    "text": "Sure. So historically, if you wanted to draw a diagram,\nyou might reach for a tool like Visio or more",
    "start": "99960",
    "end": "107890"
  },
  {
    "text": "modern ones, draw.io, diagrams.net is really\npopular these days, and you essentially use",
    "start": "107890",
    "end": "114630"
  },
  {
    "text": "the UI to draw boxes, lines, label the lines,\nand so forth.",
    "start": "114630",
    "end": "120570"
  },
  {
    "text": "That works well, so if you're just getting\nstarted, but it has problems.",
    "start": "120570",
    "end": "125900"
  },
  {
    "text": "For one, it can be a little slow, but the\nother kind of problem comes from the fact",
    "start": "125900",
    "end": "132410"
  },
  {
    "text": "that it's not machine-readable. So if you ever look at the format that that\ndiagram is saved in, you won't be able to",
    "start": "132410",
    "end": "141520"
  },
  {
    "text": "read it, right? You can't diff it. You can't version control it. So what diagrams as code does is it allows\nyou to write your diagrams as you would write",
    "start": "141520",
    "end": "152400"
  },
  {
    "text": "HTML, for example. So there's a simple markup, and it takes that\nmarkup and converts it into an image, effectively.",
    "start": "152400",
    "end": "161580"
  },
  {
    "text": "It's the simple way to put it. And do you still have control over the layout\nthen, or is that completely generated by the",
    "start": "161580",
    "end": "169810"
  },
  {
    "text": "tooling? It depends on which tooling you use.",
    "start": "169810",
    "end": "176230"
  },
  {
    "text": "In some, you have more control than others,\nso a really kind of modern one is called D3,",
    "start": "176230",
    "end": "181530"
  },
  {
    "text": "and that gives you a lot of control over the\nlayout, but it's more similar to writing code than it is diagrams as code.",
    "start": "181530",
    "end": "187860"
  },
  {
    "text": "It's still diagrams as code, but it's more\nlike writing, you know, Java or C-sharp.",
    "start": "187860",
    "end": "194010"
  },
  {
    "text": "With tools like Mermaid, for example, the\nnotation is super simple, and you do have",
    "start": "194010",
    "end": "199769"
  },
  {
    "text": "some control over the layout, but perhaps\nnot as much as you might like.",
    "start": "199769",
    "end": "205771"
  },
  {
    "text": "You might kind of have to have an acceptance\nthat it might not look as pretty as if you",
    "start": "205771",
    "end": "211290"
  },
  {
    "text": "drew it by hand, but that's the trade-off\nyou make for having ease of creating the diagram",
    "start": "211290",
    "end": "217730"
  },
  {
    "text": "and, you know, version control and all these\nthings. So I guess it's like most things in software\nengineering, it's a trade-off.",
    "start": "217730",
    "end": "223489"
  },
  {
    "text": "So less control, but less, moving stuff, a\npixel to the left or the right, so that's",
    "start": "223490",
    "end": "230410"
  },
  {
    "text": "then one of the advantages if it's generated,\nright? Yes. One of the other benefits is, you know, you\ncan also store this.",
    "start": "230410",
    "end": "240190"
  },
  {
    "text": "By store, I mean, if you're storing on draw.io,\nfor example, it's stuck in draw.io.",
    "start": "240190",
    "end": "248060"
  },
  {
    "text": "So if we work together and you leave the company\nand go somewhere else and it's on your draw.io account and you leave, suddenly we no longer\nhave access to that diagram.",
    "start": "248060",
    "end": "257600"
  },
  {
    "text": "Perhaps it's quite common for companies to\nkind of wipe people's Google accounts and so forth, whereas if you've stored that somewhere\nelse because, you know, it's just text, it's",
    "start": "257600",
    "end": "267600"
  },
  {
    "text": "readily available and much more accessible. All right. That's great. Now, you apply these diagrams as a code approach\nto several different diagram types and notations",
    "start": "267600",
    "end": "278840"
  },
  {
    "text": "in your book. Can you give us a brief overview before we\ngo into the technical details of how Mermaid",
    "start": "278840",
    "end": "284380"
  },
  {
    "text": "works? Can you give us a brief overview of which\ndiagram types and notations you choose which",
    "start": "284380",
    "end": "289490"
  },
  {
    "text": "are covered in your book? I'll go with three because I cover a few more\nin the book, but I think the three main ones",
    "start": "289490",
    "end": "295940"
  },
  {
    "text": "that I use most commonly and the three I find\nmost useful in no particular order.",
    "start": "295940",
    "end": "302210"
  },
  {
    "text": "The first one would be a sequence diagram. So this is how you model interactions between\neither it can be services or it can be kind",
    "start": "302210",
    "end": "309430"
  },
  {
    "text": "of people if you like. So people in like a business process, for\nexample. And the way it works is you have essentially\nkind of nodes.",
    "start": "309430",
    "end": "316440"
  },
  {
    "text": "So you'd have kind of maybe two here and lines\ngoing between them and it just shows the interactions",
    "start": "316440",
    "end": "323000"
  },
  {
    "text": "between those things. So let's take, if you're building, let's say\na service, let's say an application that allows",
    "start": "323000",
    "end": "332490"
  },
  {
    "text": "users to sign in, and you wanna model that\nsign-in flow. You might have, you know, the front end that\nmakes an API call to the backend with, you",
    "start": "332490",
    "end": "340690"
  },
  {
    "text": "know, the credentials for the user. And the backend might respond with, you know,\nthe 200 okay, for example, in the happy path.",
    "start": "340690",
    "end": "348050"
  },
  {
    "text": "The sequence diagram allows you to model those\nflows in a way that's kind of very visual",
    "start": "348050",
    "end": "355210"
  },
  {
    "text": "and very easy to understand. The second one would be the C4 model.",
    "start": "355210",
    "end": "364620"
  },
  {
    "text": "And that's written or created by Simon Brown. And it's a way to model your software architecture.",
    "start": "364620",
    "end": "370000"
  },
  {
    "text": "So it can be quite hard to model your software\narchitecture sometimes, or describe it sometimes,",
    "start": "370000",
    "end": "378210"
  },
  {
    "text": "or, you know, show it to other people, right? It can be complicated. You know, so it's a very nice way to get different\nviews of your architecture.",
    "start": "378210",
    "end": "389340"
  },
  {
    "text": "So there are four different views in the C4\nmodel so that's where the C4 comes from.",
    "start": "389340",
    "end": "394500"
  },
  {
    "text": "The first one, I'm gonna cover two of them\nbecause I think the latter two are not quite as used as much, but the first one is called\ncontext.",
    "start": "394500",
    "end": "399560"
  },
  {
    "text": "And it's a very, very high-level view of your\narchitecture. So it's meant to be non-technical. It would just be systems and how they interact\nwith each other.",
    "start": "399560",
    "end": "407789"
  },
  {
    "text": "So it gives you a very good glance at what\neach system is doing in the architecture.",
    "start": "407789",
    "end": "412940"
  },
  {
    "text": "You can give it the responsibilities of each\nservice in the architecture and the users that are using those services.",
    "start": "412940",
    "end": "419110"
  },
  {
    "text": "And then the next view down would be container,\nwhich is described as the single deployable",
    "start": "419110",
    "end": "424909"
  },
  {
    "text": "units. So if you had, let's say, a backend service\nthat's built using Rails and you had a MongoDB",
    "start": "424910",
    "end": "435190"
  },
  {
    "text": "database, those would be two containers. And then you would describe the interactions\nbetween those.",
    "start": "435190",
    "end": "440449"
  },
  {
    "text": "And then the other two, you drill more down. So you go into, like, components, which are,\nlike, namespaces or modules.",
    "start": "440450",
    "end": "446550"
  },
  {
    "text": "And then you can go into classes. But you're then getting really, really into\ndetail. So I don't normally do those.",
    "start": "446550",
    "end": "452010"
  },
  {
    "text": "Okay. Great. So we have two sequence diagrams and a C4\nmodel, which itself is like a set of abstractions",
    "start": "452010",
    "end": "459919"
  },
  {
    "text": "and diagram types. And what's the third one that you want to\ndiscuss?",
    "start": "459919",
    "end": "465780"
  },
  {
    "text": "So the last one would be the domain model\ndiagram. And that's kind of how it sounds really.",
    "start": "465780",
    "end": "471569"
  },
  {
    "text": "It's a way of describing the problem domain\nthat your software is working in.",
    "start": "471569",
    "end": "477190"
  },
  {
    "text": "So if we take this recording, for example,\nwe're recording on a bit of software, and",
    "start": "477190",
    "end": "483639"
  },
  {
    "text": "you might have, you know, participants might\nbe something in your domain. After we're finished, you might have a recording\nthat will be something in your domain.",
    "start": "483639",
    "end": "491889"
  },
  {
    "text": "You have speakers and so forth in your domain. You have all these domain entities, and it's\njust a way of documenting, you know, what's",
    "start": "491890",
    "end": "500409"
  },
  {
    "text": "in your domain in a diagram and describing\nthe relations between them. So does each participant have many recordings\nor one recording?",
    "start": "500409",
    "end": "509430"
  },
  {
    "text": "And so forth, things like that. So if I want to categorize those three notations\nor diagram types, sequence diagrams are defined",
    "start": "509430",
    "end": "520740"
  },
  {
    "text": "in the UML. So it's like very formally defined, right? C4 is more like a set of abstractions.",
    "start": "520740",
    "end": "528399"
  },
  {
    "text": "Different notations are possible, and it's\ndefined by Simon Brown. And the last one, the domain models, that's\nmore like a free form, not defined, there's",
    "start": "528399",
    "end": "541060"
  },
  {
    "text": "no standard for that, right? That'd be correct, yeah. Okay. So that means that Mermaid, the tooling that\nyou describe in your book, can do all of that.",
    "start": "541060",
    "end": "551660"
  },
  {
    "start": "546000",
    "end": "1014000"
  },
  {
    "text": "So it's a broad spectrum from formally defined\nmodel languages to, like, free-form modeling.",
    "start": "551660",
    "end": "557490"
  },
  {
    "text": "Everything is possible with that tooling. Would you agree with that? Yes.",
    "start": "557490",
    "end": "563050"
  },
  {
    "text": "I think it has a kind of base set of diagram\ntypes that it supports.",
    "start": "563050",
    "end": "568149"
  },
  {
    "text": "So it doesn't have, you know, a domain model\ndiagram type, but it does have something called",
    "start": "568149",
    "end": "574019"
  },
  {
    "text": "a flowchart. And the flowchart is kind of like the most\ngeneric diagram type you get in Mermaid.",
    "start": "574019",
    "end": "583089"
  },
  {
    "text": "So you can kind of do whatever you like with\nit. So if you have a diagram that doesn't fit\ninto the normal types, I would use a flowchart.",
    "start": "583090",
    "end": "588970"
  },
  {
    "text": "So in the case of the book, I use a flowchart\nfor the C4 model, and I use it for the domain",
    "start": "588970",
    "end": "595490"
  },
  {
    "text": "model diagram. Mermaid is adding support for the C4 diagram\nslowly into it so it has, like, the native",
    "start": "595490",
    "end": "603940"
  },
  {
    "text": "syntax. So you could use that now. It only supports I think, one, the kind of\nhighest-level context diagram at the moment.",
    "start": "603940",
    "end": "613029"
  },
  {
    "text": "And it also uses the, I think it's PlantUML\nnotation. So to me, it's a lot more complicated than\nnormal Mermaid because you have to learn a",
    "start": "613029",
    "end": "622800"
  },
  {
    "text": "different notation, which is the PlantUML\nnotation. And, finally, the sequence diagram is natively\nsupported so that's kind of its diagram type",
    "start": "622800",
    "end": "631320"
  },
  {
    "text": "in Mermaid with its kind of syntax. But if anyone's ever used, you know, UML,\nit uses the syntax for UML.",
    "start": "631320",
    "end": "641029"
  },
  {
    "text": "Okay. Great. So, now, we've started to touch on the topic\nof Mermaid itself.",
    "start": "641029",
    "end": "647480"
  },
  {
    "text": "So from diagrams as code, we move now to one\nspecific tooling to create diagrams from code",
    "start": "647480",
    "end": "657250"
  },
  {
    "text": "and that is Mermaid. So how does Mermaid work? Can you give us an overview of what is required\nto use it?",
    "start": "657250",
    "end": "663760"
  },
  {
    "text": "Well, you need JavaScript. So it's primarily written in, I think, JavaScript\nand TypeScript.",
    "start": "663760",
    "end": "670870"
  },
  {
    "text": "So it has the kind of... I think it was the first one that I used that\nwas easy to run pretty much everywhere, right?",
    "start": "670870",
    "end": "678580"
  },
  {
    "text": "Because JavaScript runs everywhere. It runs in your browser. You can run it on the Edge.",
    "start": "678580",
    "end": "684139"
  },
  {
    "text": "You can run it on servers. You can run it anywhere, right? If you look at historically, some of the kind\nof perhaps problems with prior ones...",
    "start": "684139",
    "end": "694850"
  },
  {
    "text": "So if you take the main one, it probably was\nPlantUML. And that had all the kind of same diagram\ntypes that Mermaid has, but it was written",
    "start": "694850",
    "end": "704980"
  },
  {
    "text": "in Java, which, you know, Java's a fine language,\nbut it doesn't run everywhere, right?",
    "start": "704980",
    "end": "710190"
  },
  {
    "text": "You need to make sure Java is installed. You can't just run it in the browser. It doesn't run in the browser.",
    "start": "710190",
    "end": "715420"
  },
  {
    "text": "So Mermaid kind of has this big selling point\nthat it's super easy to run wherever you want.",
    "start": "715420",
    "end": "721500"
  },
  {
    "text": "And to explain kind of what it is, it's, you\nknow, a tool for creating diagrams as code.",
    "start": "721500",
    "end": "729240"
  },
  {
    "text": "The documentation is good. So you'd be able to go on there, look through\nall the diagram types, and you'd very quickly",
    "start": "729240",
    "end": "736459"
  },
  {
    "text": "be able to create diagrams from the examples\nwritten in the docs and create all these different types of diagrams.",
    "start": "736459",
    "end": "745020"
  },
  {
    "text": "Then it will take what you write. There's, like, a live editor, so you can do\nit live and it'll update it live.",
    "start": "745020",
    "end": "751839"
  },
  {
    "text": "And then you can export images from the diagram\nif you want.",
    "start": "751839",
    "end": "756890"
  },
  {
    "text": "And then there are some other things you can\ndo that are kind of its big selling points.",
    "start": "756890",
    "end": "762190"
  },
  {
    "text": "So if I understand it correctly, Mermaid defines\na markup language, or you would call it a",
    "start": "762190",
    "end": "769449"
  },
  {
    "text": "domain-specific language for describing the\ndiagrams in the form of code.",
    "start": "769449",
    "end": "774560"
  },
  {
    "text": "And then there's a tooling that's also called\nMermaid to create the actual visual diagrams",
    "start": "774560",
    "end": "781160"
  },
  {
    "text": "out of that code. So I could probably write Mermaid diagrams\nin my favorite text editor, and then just",
    "start": "781160",
    "end": "788540"
  },
  {
    "text": "apply the tools and have them generate the\ndiagrams. Is that correct?",
    "start": "788540",
    "end": "795339"
  },
  {
    "text": "The Mermaid library on GitHub has many different\nkinds of parts to it. And one of them would be, for example, like,\na CLI tool.",
    "start": "795339",
    "end": "802639"
  },
  {
    "text": "So if you want to, you could, you know, write\na diagram in Mermaid and then use the CLI",
    "start": "802639",
    "end": "808440"
  },
  {
    "text": "on your, you know, command line to generate\nthe images. Like I said, there's a live editor that, again,\nis part of the Mermaid package.",
    "start": "808440",
    "end": "814990"
  },
  {
    "text": "It's all kind of open-source.  So there is a live editor. That's maybe nice for actually creating the\ndiagrams for the first versions maybe so I",
    "start": "814990",
    "end": "823760"
  },
  {
    "text": "can see, like, live. If I enter this line of code, this is how\nit's going to be rendered, which is nice for",
    "start": "823760",
    "end": "831519"
  },
  {
    "text": "Modular. But once I have the actual DSL file, I could,\nlike, integrate the generation of documentation",
    "start": "831519",
    "end": "838600"
  },
  {
    "text": "into my build process because there are CLI\ntools available. Is that correct? Yes, you definitely could.",
    "start": "838600",
    "end": "846180"
  },
  {
    "text": "The other kind of big selling point that I\nwould say is probably the main reason I started using it is a lot of engineers these days,\nuse GitHub or GitLab, for example.",
    "start": "846180",
    "end": "856720"
  },
  {
    "text": "They're probably the main two kinds of version\ncontrol providers. And while being able to do it with the CLI\nis nice, doing it in the live editor is nice.",
    "start": "856720",
    "end": "867130"
  },
  {
    "text": "If you export an image out of these tools,\nwhich you could do with draw.io, right? And you want to store it in version control.",
    "start": "867130",
    "end": "873550"
  },
  {
    "text": "So let's say you want to put your architecture\ndiagrams in your README or in your repository",
    "start": "873550",
    "end": "880310"
  },
  {
    "text": "with your code, right? Which is a nice place to put your diagrams\nthat relate to your code. So you might put your domain model in there.",
    "start": "880310",
    "end": "885430"
  },
  {
    "text": "You might put your architecture diagram, and\nyour C4 model in there. Now, if you put an image in there, that's\nfine.",
    "start": "885430",
    "end": "891720"
  },
  {
    "text": "That's better than having nothing at all. But what will happen, as I said earlier, is\nif you leave and you create that diagram,",
    "start": "891720",
    "end": "897910"
  },
  {
    "text": "I have to go and try and find that file. And if I can't find that file, because you\nprobably didn't commit it to version control,",
    "start": "897910",
    "end": "905779"
  },
  {
    "text": "I'm gonna have to either redraw the diagram\nif I wanna update it, which could take ages,",
    "start": "905779",
    "end": "911410"
  },
  {
    "text": "or probably more likely I can't be bothered\nbecause I can't find this diagram to recreate",
    "start": "911410",
    "end": "917129"
  },
  {
    "text": "it. So with GitHub, GitLab, and some others, you\ncan take the Mermaid markup, so the simple",
    "start": "917130",
    "end": "924060"
  },
  {
    "text": "markup, put it in GitHub, you know, in code\ntags with Mermaid. So the three backticks with Mermaid.",
    "start": "924060",
    "end": "931029"
  },
  {
    "text": "And then when that markdown file is viewed\non GitHub in the browser or GitLab, it will",
    "start": "931029",
    "end": "937850"
  },
  {
    "text": "render that diagram for you with no work. So then you have your single source of truth\nfor your diagram stored in your code repository.",
    "start": "937850",
    "end": "945040"
  },
  {
    "text": "And whenever anyone wants to view it, it will\nrender it for you without any kind of work",
    "start": "945040",
    "end": "950750"
  },
  {
    "text": "whatsoever. So that sort of integration, as I said, it's\na big selling point.",
    "start": "950750",
    "end": "956410"
  },
  {
    "text": "But speaking of selling, you said open-source,\nso I don't need to buy Mermaid, right?",
    "start": "956410",
    "end": "963170"
  },
  {
    "text": "No, it's all open-source, so anyone can contribute. There's a product they sell on the side, basically,\nthe people that kind of wrote it for you to",
    "start": "963170",
    "end": "972870"
  },
  {
    "text": "kind of store your diagrams if you want. But the main primary library is all open-source\nand anyone can contribute, anyone can use",
    "start": "972870",
    "end": "980480"
  },
  {
    "text": "it. And it's gone beyond GitLab and GitHub, you\nknow, tools that you probably use like Jira,",
    "start": "980480",
    "end": "988220"
  },
  {
    "text": "Notion, Trello, and many, many others. They all have kind of Mermaid plugins that\nyou can use.",
    "start": "988220",
    "end": "997269"
  },
  {
    "text": "That's cool. So everybody is free to build their plugins\nor their tooling using the Mermaid DSL.",
    "start": "997270",
    "end": "1004950"
  },
  {
    "text": "And then every Mermaid diagram would also\nwork with that plugin or that tooling that",
    "start": "1004950",
    "end": "1010709"
  },
  {
    "text": "you've built on your own, right? Exactly. Okay. That's good. Do you know how long a Mermaid has been around?",
    "start": "1010709",
    "end": "1017090"
  },
  {
    "start": "1014000",
    "end": "1400000"
  },
  {
    "text": "I'm asking because, you know, sometimes diagrams\nor notations change, get extended, maybe it's",
    "start": "1017090",
    "end": "1022310"
  },
  {
    "text": "not compatible always. So do you have any experience? Do the old diagrams created with other versions\nstill work?",
    "start": "1022310",
    "end": "1029900"
  },
  {
    "text": "How is that? So far, I've not had a diagram of mine break.",
    "start": "1029900",
    "end": "1035240"
  },
  {
    "text": "So I think they're very careful to ensure\nbackward compatibility.",
    "start": "1035240",
    "end": "1040319"
  },
  {
    "text": "I think especially since they've been on,\nyou know, GitHub, for example, I think it would be a bad look if they suddenly broke,\nyou know, tens of thousands, hundreds of thousands.",
    "start": "1040320",
    "end": "1049429"
  },
  {
    "text": "I don't know how many diagrams have been created\non GitHub but I assume it's very, very high. As I said, it's a big selling point, I think,\nis the GitHub and GitLab integration.",
    "start": "1049429",
    "end": "1058570"
  },
  {
    "text": "So I think if they would wanna look after\nthat integration, I think.",
    "start": "1058570",
    "end": "1063789"
  },
  {
    "text": "They do add new ones. So, like I said, they're constantly adding\nnew diagram types.",
    "start": "1063789",
    "end": "1070930"
  },
  {
    "text": "So besides kind of the ones I talked about,\nyou get, you know, class diagrams for, you know, modeling your code.",
    "start": "1070930",
    "end": "1076899"
  },
  {
    "text": "You can even do things like, you know, Gantt\ncharts if you wanna structure your kind of releases or something like that.",
    "start": "1076900",
    "end": "1082690"
  },
  {
    "text": "They have kind of mind maps for, like, ideation,\nand they're adding kind of new ones all the time.",
    "start": "1082690",
    "end": "1088431"
  },
  {
    "text": "In terms of how long it's been around, I can't\nremember when it was released.",
    "start": "1088431",
    "end": "1094909"
  },
  {
    "text": "It's not, like, old-old. I would say, it's probably been around for\nI think about five years, but I wouldn't wanna",
    "start": "1094909",
    "end": "1101759"
  },
  {
    "text": "be quoted on it. It's still relatively new. And it does have a very active kind of contributor\nbase on GitHub.",
    "start": "1101760",
    "end": "1112140"
  },
  {
    "text": "So it is very well maintained. I think the PlantUML has been around for a\nbit longer.",
    "start": "1112140",
    "end": "1118500"
  },
  {
    "text": "So that's another diagram as code approach\nthat you mentioned earlier.",
    "start": "1118500",
    "end": "1124540"
  },
  {
    "text": "It owned its language and its tooling.",
    "start": "1124540",
    "end": "1130470"
  },
  {
    "text": "That's one I've used before. Another tooling, another diagramming language\nthat I've used before for the C4 model is",
    "start": "1130470",
    "end": "1140890"
  },
  {
    "text": "Structurizr, the tooling by Simon Brown. I'm sure there are other toolings out there\nthat I haven't used before.",
    "start": "1140890",
    "end": "1150460"
  },
  {
    "text": "Do you want to compare them a little bit with\nMermaid? So you brought up a point already with the\nGitHub integration.",
    "start": "1150460",
    "end": "1157049"
  },
  {
    "text": "So maybe that's the selling point, as you\ncalled it, for Mermaid. But maybe you can expand on that a little\nbit.",
    "start": "1157049",
    "end": "1164150"
  },
  {
    "text": "I would say that the differentiator is kind\nof the fact that it's available on GitHub",
    "start": "1164150",
    "end": "1169659"
  },
  {
    "text": "is its biggest selling point for sure. But besides that, I think earlier on I talked\nabout how, you know, PlantUML is written in",
    "start": "1169659",
    "end": "1176950"
  },
  {
    "text": "Java, which means that you can't just run\nanywhere, right? The setup is not easy. You know, you find things online, you know,\nfor editing PlantUML.",
    "start": "1176950",
    "end": "1185790"
  },
  {
    "text": "But if you actually wanna kind of run it locally,\nfor example, in your IDE, there are probably",
    "start": "1185790",
    "end": "1191220"
  },
  {
    "text": "plugins for it, but it's gonna be a bit more\nannoying. You have to install Java, and so forth. With Mermaid, you don't have to do that.",
    "start": "1191220",
    "end": "1198230"
  },
  {
    "text": "The DSL is, like, if you use PlantUML, for\nexample, and you haven't heard of Mermaid before, and you're interested in trying Mermaid,\nif you want to migrate, the syntax is identical",
    "start": "1198230",
    "end": "1209990"
  },
  {
    "text": "because it's UML syntax for at least for the\nmost part for Mermaid. So you'd probably be able to take all your\ndiagrams written in PlantUML and just put",
    "start": "1209990",
    "end": "1218700"
  },
  {
    "text": "them in Mermaid and maybe a few minor tweaks\nand everything would just kind of work. So then you get the benefits of Mermaid without\nany pain of migration really.",
    "start": "1218700",
    "end": "1228929"
  },
  {
    "text": "Structurizr is specifically made for the C4\nmodel, and it has its kind of DSL that is",
    "start": "1228929",
    "end": "1234899"
  },
  {
    "text": "specific to that. I've used it a little bit. I think it's slightly different because it's\na modeling tool, right?",
    "start": "1234900",
    "end": "1244429"
  },
  {
    "text": "So if you were creating a backend service\nthat was called, I don't know, I'm gonna call",
    "start": "1244429",
    "end": "1251760"
  },
  {
    "text": "it \"the backend\" because I'm terrible at thinking\nnames, like most engineers. In the Structurizr DSL, you would define the\nbackend service and you might say it's a Ruby",
    "start": "1251760",
    "end": "1261990"
  },
  {
    "text": "on Rails service and you'd find that once\nand then anywhere you use it, you just kind of reference that model because you've made\nthat model for that thing.",
    "start": "1261990",
    "end": "1272870"
  },
  {
    "text": "With Mermaid, it's just a simple DSL, right? So you'd have to maybe if you're doing two\nversions of the C4 model that I talked about,",
    "start": "1272870",
    "end": "1279669"
  },
  {
    "text": "the content and the container, you would have\nduplication between the two. And if you want to change the name of one\nthing and all of them, you'd have to go change",
    "start": "1279670",
    "end": "1286280"
  },
  {
    "text": "it all, and so forth. However, if you wanted to model, because modeling\nis slightly different, if you want to use",
    "start": "1286280",
    "end": "1294690"
  },
  {
    "text": "that model as I spoke about, you can do it\nin Structurizr and then you can export it",
    "start": "1294690",
    "end": "1300210"
  },
  {
    "text": "to a bunch of different languages. So you can export it to Mermaid, or you can\nexport it to PlantUML.",
    "start": "1300210",
    "end": "1306440"
  },
  {
    "text": "I think it does D3 these days. It does all sorts. So while it is its own DSL and it's very specific\nto the C4 model, you can still get Mermaid,",
    "start": "1306440",
    "end": "1315140"
  },
  {
    "text": "you know, from that tool if you wanted to\nthen put in version control, for example.",
    "start": "1315140",
    "end": "1321610"
  },
  {
    "text": "Okay. That's good. And if you have a diagrams-as-code approach\nlike with Mermaid, refactoring doesn't sound",
    "start": "1321610",
    "end": "1330900"
  },
  {
    "text": "as scary anymore. Renaming stuff is a lot easier if you have\nit in your IDE, maybe some support there.",
    "start": "1330900",
    "end": "1337970"
  },
  {
    "text": "You check it into your repository, and everything\nis fine.",
    "start": "1337970",
    "end": "1343100"
  },
  {
    "text": "And you know that it still works, right? If you're using GitHub, for example, you could...",
    "start": "1343100",
    "end": "1349410"
  },
  {
    "text": "You know, when you raise the PR, you just\nclick view file and you'll see it all looks fine. And one of the other kind of, you know, let's\nsay, me and you're working on improving or",
    "start": "1349410",
    "end": "1359940"
  },
  {
    "text": "changing our domain model that we work on\ntogether, you might request a broadcast.",
    "start": "1359940",
    "end": "1365320"
  },
  {
    "text": "But if you're doing, you know, draw.io or\nsomething where the format is completely unreadable, or just an image, it's really hard to diff\nan image, right?",
    "start": "1365320",
    "end": "1373690"
  },
  {
    "text": "You can look at it if it's quite big, it can\nbe hard to see the nuances in it. Whereas with Mermaid because it's just text,\nyou would easily see what I changed.",
    "start": "1373690",
    "end": "1383049"
  },
  {
    "text": "You know, like you just said, if you rename\nsomething and maybe I missed one or something,",
    "start": "1383050",
    "end": "1388440"
  },
  {
    "text": "you would easily be able to see in the diff\nthat I missed it, most likely anyway, because it's just text, but you're used to kind of\nreviewing diffs in that way, right?",
    "start": "1388440",
    "end": "1396908"
  },
  {
    "text": "So, yeah, it's really easy to. Now, as I said, I've used a little bit of\nPlantUML and Structurizr before, so I found",
    "start": "1396909",
    "end": "1404080"
  },
  {
    "start": "1400000",
    "end": "1835000"
  },
  {
    "text": "it easy to transition to Mermaid. I had never tried Mermaid before I read the\nbook.",
    "start": "1404080",
    "end": "1412029"
  },
  {
    "text": "So your book does a very nice job in guiding\nreaders, step by step to applying Mermaid,",
    "start": "1412030",
    "end": "1419380"
  },
  {
    "text": "you know, starting simple. You have your first diagram, like with, I\ndon't know, three or five lines of code, and",
    "start": "1419380",
    "end": "1426260"
  },
  {
    "text": "then expand on that. And then you go through the different notations\nthat you've described.",
    "start": "1426260",
    "end": "1432299"
  },
  {
    "text": "And we see, like, okay, some have, like, their\ndiagram type, like, native support and others",
    "start": "1432299",
    "end": "1441059"
  },
  {
    "text": "use a more general one and then you adapt\nit to your needs. So that is easy to follow in your book.",
    "start": "1441059",
    "end": "1447039"
  },
  {
    "text": "I would assume that also people who have never\nused a diagrams-as-code approach before will",
    "start": "1447039",
    "end": "1454000"
  },
  {
    "text": "have an easy time getting started with Mermaid\nif they read your book and follow the examples",
    "start": "1454000",
    "end": "1460080"
  },
  {
    "text": "in there. I think that's the general feedback I've had,\nI think especially because engineers, as you",
    "start": "1460080",
    "end": "1465480"
  },
  {
    "text": "know, they're used to writing complicated\ncode and a simple text-based market is pretty easy for anyone to grasp.",
    "start": "1465480",
    "end": "1471820"
  },
  {
    "text": "So, yeah, I think it's pretty easy to get\nup to speed with. Cool. So I'm curious, why did you decide to write\na book about Mermaid in diagrams as code?",
    "start": "1471820",
    "end": "1484480"
  },
  {
    "text": "There's quite good documentation also online\nregarding the tooling.",
    "start": "1484480",
    "end": "1490860"
  },
  {
    "text": "So why the book? What got you there to make this decision?",
    "start": "1490860",
    "end": "1497460"
  },
  {
    "text": "It's a lot of effort to write a book. It is. I think many years ago.",
    "start": "1497460",
    "end": "1502490"
  },
  {
    "text": "I remember, I guess everyone that does diagrams\nmaybe has that kind of epiphany moment where they kind of realize the kind of power of\na diagram, I'm sure you have your own.",
    "start": "1502490",
    "end": "1510250"
  },
  {
    "text": "And I hadn't written any diagrams before,\nI didn't know what UML was, but I was trying",
    "start": "1510250",
    "end": "1515340"
  },
  {
    "text": "to explain things at work, and no one was\ngetting it. And I maybe couldn't even explain it that\nwell myself, which is probably why they weren't",
    "start": "1515340",
    "end": "1521880"
  },
  {
    "text": "getting it, but I was kind of just throwing\nkind of words if you like. And I drew a very bad diagram, you know, it\nwouldn't have been based on any type of diagram",
    "start": "1521880",
    "end": "1529419"
  },
  {
    "text": "I knew because I didn't know anything. But then everyone suddenly got it, and I got\nit better and I could explain it better. So, at that point, and this was many, many\nyears ago, I could kind of see the power of",
    "start": "1529420",
    "end": "1538580"
  },
  {
    "text": "diagrams. I think I don't remember when I saw Mermaid\nthe first time, but I kind of saw it and thought,",
    "start": "1538580",
    "end": "1545820"
  },
  {
    "text": "\"Oh wow. This is kind of cool.\" And I started playing around with it. And I had a look at the diagramming books.",
    "start": "1545820",
    "end": "1553419"
  },
  {
    "text": "I was curious if there was a book on Mermaid,\nfor example. And even just looking at diagramming books,\nthere hadn't been one written for, like, 15",
    "start": "1553420",
    "end": "1561240"
  },
  {
    "text": "or 20 years, something ridiculous like that,\nthe last one. I don't know, I think it was, like, Uncle\nBob or someone, who wrote one a long time",
    "start": "1561240",
    "end": "1568080"
  },
  {
    "text": "ago, all about kind of UML, for example. And things have moved forward a long way since\nthat time.",
    "start": "1568080",
    "end": "1574919"
  },
  {
    "text": "So I thought, you know, lots of things have\nchanged. You know, I'll write a book, you know, it\nseems like there's a gap for that for more",
    "start": "1574920",
    "end": "1582250"
  },
  {
    "text": "modern, newer engineers. They're probably not gonna wanna read a book\nabout UML because while UML is very good,",
    "start": "1582250",
    "end": "1589080"
  },
  {
    "text": "it has a bit of a kind of old-school reputation,\nI would say. I don't think it's rare you kind of work with\nsomeone, they kind of work without a UML diagram",
    "start": "1589080",
    "end": "1597649"
  },
  {
    "text": "these days, right? But at least with Mermaid, it makes it seem\na little bit more cool, a bit more kind of easier to use.",
    "start": "1597649",
    "end": "1602900"
  },
  {
    "text": "You don't have to draw. It's an easier sell if you like, is probably\nwhy I wrote the book and just to kind of bring",
    "start": "1602900",
    "end": "1609059"
  },
  {
    "text": "it up to modern speed I guess. So my takeaway here is that Mermaid makes\nUML look cool again?",
    "start": "1609059",
    "end": "1615510"
  },
  {
    "text": "There you go, you could say that. Okay. But actually, it's about more than UML or\nyour book is about more than UML.",
    "start": "1615510",
    "end": "1623990"
  },
  {
    "text": "This is something that I think is a benefit\nover just reading online documentation that",
    "start": "1623990",
    "end": "1630751"
  },
  {
    "text": "is provided for the tooling because you have\nan opinion on what diagrams and what notations",
    "start": "1630751",
    "end": "1637870"
  },
  {
    "text": "to use and when to use them. So you made a conscious choice of which diagram\ntypes to include in your book and describe",
    "start": "1637870",
    "end": "1645408"
  },
  {
    "text": "them with Mermaid. So maybe let's go back from the concrete tooling\nwith Mermaid a little bit to the topic of",
    "start": "1645409",
    "end": "1652898"
  },
  {
    "text": "diagramming and modeling in general. So you had the sequence diagram, you had the\nC4 model for architecture, and the domain",
    "start": "1652899",
    "end": "1663240"
  },
  {
    "text": "model. Why these? And not some other...",
    "start": "1663240",
    "end": "1669370"
  },
  {
    "text": "Why not BPNN or whatever? So I think when I wrote the book, and this\npartly comes from the publisher, Pragmatic,",
    "start": "1669370",
    "end": "1677840"
  },
  {
    "text": "they like it to be kind of hands-on and you\nknow, as you go through the book, it should model kind of real-world things.",
    "start": "1677840",
    "end": "1683570"
  },
  {
    "text": "And there should be kinds of activities for\npeople to do because if you kind of read a book and don't do anything, you don't learn\nas much if there are activities for you to",
    "start": "1683570",
    "end": "1692220"
  },
  {
    "text": "do during the book. And then if you go and do them, it kind of\nreinforces that learning.",
    "start": "1692220",
    "end": "1698309"
  },
  {
    "text": "So that's their general approach. And I've never written a book before, so I\nwas very happy with all their kind of guidance",
    "start": "1698309",
    "end": "1703539"
  },
  {
    "text": "and their direction. But as you kind of go through the book, I\nkind of tried to make it like you would do",
    "start": "1703539",
    "end": "1712250"
  },
  {
    "text": "your day job if you were building a brand-new\nservice and you'd go through different stages,",
    "start": "1712250",
    "end": "1718970"
  },
  {
    "text": "right? A business requirement comes up for you to\ndo this thing and you realize, you know, maybe you're starting to work in a brand-new domain.",
    "start": "1718970",
    "end": "1725350"
  },
  {
    "text": "So, you know, the first thing you're gonna\nneed to do is understand the domain with a domain or a diagram. So the first chapter is on domain modeling\nand drawing a domain model.",
    "start": "1725350",
    "end": "1735120"
  },
  {
    "text": "You then might want to talk about the sequence\nflows, you know, understand the interactions",
    "start": "1735120",
    "end": "1742600"
  },
  {
    "text": "that you have going on in your systems. That could be people or services and kind\nof understanding a very high level because",
    "start": "1742600",
    "end": "1748880"
  },
  {
    "text": "sequence diagrams are super high level. The interactions and how your system is gonna\ntalk to your current existing systems, for",
    "start": "1748880",
    "end": "1754820"
  },
  {
    "text": "example, and then see how that plays in. And then again, you might then define your\narchitecture with the C4 model, for example.",
    "start": "1754820",
    "end": "1764370"
  },
  {
    "text": "And then I think it goes into things like,\nyou might decide how you want to structure your code base.",
    "start": "1764370",
    "end": "1770289"
  },
  {
    "text": "So you might reach for class diagrams, and\nyou don't need to model, you know, all of the classes that you're ever gonna write because\nthat's gonna take a very long time.",
    "start": "1770289",
    "end": "1778990"
  },
  {
    "text": "You might just kind of play around with how\nyou wanna kinda organize your code with a class diagram.",
    "start": "1778990",
    "end": "1785049"
  },
  {
    "text": "And, similarly, you can also use class diagrams\nfor refactoring. So, you know, if you jumped forward six months,\nyou might need to do some refactoring.",
    "start": "1785049",
    "end": "1794070"
  },
  {
    "text": "You're gonna have maybe loads of classes at\nplay and maybe it's becoming a little bit, you know, tricky.",
    "start": "1794070",
    "end": "1799510"
  },
  {
    "text": "Maybe you made a bit of a mess somewhere and\nyou just wanna understand how everything fits together. So you draw a class diagram, and you can kind\nof very quickly and easily rearrange them",
    "start": "1799510",
    "end": "1807240"
  },
  {
    "text": "with Mermaid. So it's one of its, you know, another one\nof its selling points. You can iterate quickly.",
    "start": "1807240",
    "end": "1812440"
  },
  {
    "text": "So if you're doing a domain model and you\nwant to try out different names or different",
    "start": "1812440",
    "end": "1817940"
  },
  {
    "text": "relationships, you could do that, you know,\nin a few minutes versus if you're a meeting with someone and you've got to draw the boxes\nand move them all around.",
    "start": "1817940",
    "end": "1825800"
  },
  {
    "text": "It's gonna be really painful both for the\nperson and everyone watching while they move these things around versus you can quickly\niterate on with things with Mermaid.",
    "start": "1825800",
    "end": "1834580"
  },
  {
    "text": "Before, you said you researched other and\nalso older books on this topic of diagramming",
    "start": "1834580",
    "end": "1842370"
  },
  {
    "start": "1835000",
    "end": "2057000"
  },
  {
    "text": "and modeling, some even, like, 20 years old.",
    "start": "1842370",
    "end": "1849049"
  },
  {
    "text": "If we were 20 years from now and some new\ndeveloper was, you know, exploring what the",
    "start": "1849049",
    "end": "1859360"
  },
  {
    "text": "forefathers wrote 20 years ago and they would\ndiscover your book, I wonder if Mermaid will",
    "start": "1859360",
    "end": "1867030"
  },
  {
    "text": "still be around in 20 years. Well, maybe it's a completely different version. And, you know, the DSL code might not be valid\nanymore.",
    "start": "1867030",
    "end": "1876510"
  },
  {
    "text": "Nevertheless, I would argue that your book\nwould still have value because it's not just",
    "start": "1876510",
    "end": "1883320"
  },
  {
    "text": "about Mermaid. It's about those diagramming techniques and\nalso when to apply them.",
    "start": "1883320",
    "end": "1888789"
  },
  {
    "text": "There's some advice there, even if you don't\nuse Mermaid itself, maybe some other tooling.",
    "start": "1888789",
    "end": "1897138"
  },
  {
    "text": "Yes, the listings of code, of course, they\nonly make sense with Mermaid. But there's some more general advice there\nfor how to use diagramming to build better",
    "start": "1897139",
    "end": "1907309"
  },
  {
    "text": "software. So that's what I like about your book. Thank you very much.",
    "start": "1907309",
    "end": "1912898"
  },
  {
    "text": "Maybe if you jump forward to those 20 years\nin the future and what things might look like,",
    "start": "1912899",
    "end": "1918429"
  },
  {
    "text": "I think one thing that's starting to happen,\nit hasn't kind of quite got that yet, is it would be cool if you could draw these diagrams\nand you could turn those diagrams into real",
    "start": "1918429",
    "end": "1927570"
  },
  {
    "text": "things. So this is starting to happen a little bit. I can't remember the name of the tool. It's escaping me now. But there's one way you can draw things on\nlike AWS using their stuff and it will take",
    "start": "1927570",
    "end": "1936090"
  },
  {
    "text": "that diagram and deploy it in AWS. I saw it kind of the other day and these days,\nlet's say, you like the idea of Mermaid, but",
    "start": "1936090",
    "end": "1945799"
  },
  {
    "text": "you don't wanna learn syntax. Everyone these days knows about ChatGPT, and\nChatGPT is an expert on Mermaid.",
    "start": "1945799",
    "end": "1952659"
  },
  {
    "text": "So, you know, the other day, literally yesterday,\nI was working on something with some friends",
    "start": "1952659",
    "end": "1958010"
  },
  {
    "text": "just from a side project. And we were talking about, you know, how you\ndesign the database. And that's one of the diagram types I forgot\nto mention you can use an empty relationship",
    "start": "1958010",
    "end": "1967540"
  },
  {
    "text": "diagram to model your kind of database using\nMermaid that's the diagram type. And we were kind of just talking about it\nout loud.",
    "start": "1967540",
    "end": "1976120"
  },
  {
    "text": "And one of the guys, you know, he couldn't\nquite grasp what we got to, because we now",
    "start": "1976120",
    "end": "1981149"
  },
  {
    "text": "had like seven, eight, nine tables. So he drew out on paper, but I was like, \"Well,\nwe could just we could just draw it with Mermaid.\"",
    "start": "1981149",
    "end": "1988138"
  },
  {
    "text": "And I just told, you know, ChatGPT, I said,\n\"Here are the tables, here are their relations.\" And, you know, in 30 seconds, I had a diagram\nthat I didn't even have to learn or draw anything",
    "start": "1988139",
    "end": "1997169"
  },
  {
    "text": "from Mermaid. It did it for me. So I think that it's really powerful.",
    "start": "1997169",
    "end": "2002190"
  },
  {
    "text": "So that's one way from, you know, a description\nto a formal architecture diagram.",
    "start": "2002190",
    "end": "2009500"
  },
  {
    "text": "But he also said, you know, from a diagram\nto running software.",
    "start": "2009500",
    "end": "2015560"
  },
  {
    "text": "So maybe we'll see a rebirth of the model\nwith an architectural or model-driven development.",
    "start": "2015560",
    "end": "2022000"
  },
  {
    "text": "So that was my opinion.",
    "start": "2022000",
    "end": "2027650"
  },
  {
    "text": "Interesting approach, like 20 years ago, but\nnever really, at least not in general purpose,",
    "start": "2027650",
    "end": "2036050"
  },
  {
    "text": "software development kept the promises that\nwere made with that.",
    "start": "2036050",
    "end": "2041590"
  },
  {
    "text": "But maybe with the new tooling and AI, it\ndeserves a second chance.",
    "start": "2041590",
    "end": "2047778"
  },
  {
    "text": "Who knows? So I'll see a new book on the horizon by Ashley\nPeacock.",
    "start": "2047779",
    "end": "2054490"
  },
  {
    "text": "Okay, Ashley, is there anything else that\nyou want to mention that we haven't discussed",
    "start": "2054490",
    "end": "2061970"
  },
  {
    "start": "2057000",
    "end": "2133000"
  },
  {
    "text": "yet? No, I don't think so. I think if you're interested in the topic,\nyou're interested in the book, it's available, you know, on Amazon, \"Creating Software with\nModern Diagramming Techniques.\"",
    "start": "2061970",
    "end": "2070828"
  },
  {
    "text": "You can go get it today. And I hope you enjoy Mermaid.",
    "start": "2070829",
    "end": "2080388"
  },
  {
    "text": "Thank you. Great. I enjoyed talking ",
    "start": "2080389",
    "end": "2101630"
  },
  {
    "text": "to you and enjoyed your book. And, yeah, I'm looking forward to your next\none.",
    "start": "2101630",
    "end": "2131259"
  }
]