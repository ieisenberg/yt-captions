[
  {
    "start": "0",
    "end": "102000"
  },
  {
    "text": "[Music]",
    "start": "3500",
    "end": "7820"
  },
  {
    "text": "thank you thank you um right I was at a dinner party last week which is actually",
    "start": "12240",
    "end": "17520"
  },
  {
    "text": "a terribly middle class introduction to a talk I was at a dinner party last week right and um we got into the topic of",
    "start": "17520",
    "end": "24680"
  },
  {
    "text": "what you're doing next week and I said I'm going to Copenhagen they said what are you doing in Copenhagen I said I'm",
    "start": "24680",
    "end": "30320"
  },
  {
    "text": "going to give a talk at a conference he said what's the talk about it's a non-technical dinner party",
    "start": "30320",
    "end": "36480"
  },
  {
    "text": "have you ever been to those right and so like okay so we have this thing in",
    "start": "36480",
    "end": "42600"
  },
  {
    "text": "Computing that lets us check whether our systems are correct and that sounds like a good thing right and but but we the",
    "start": "42600",
    "end": "51879"
  },
  {
    "text": "talk is about how as well as doing that there's this whole other class of things that's useful it does and people don't",
    "start": "51879",
    "end": "57559"
  },
  {
    "text": "seem to realize that it can do that as well and they kind of glazed over right as as",
    "start": "57559",
    "end": "64799"
  },
  {
    "text": "people do when you're talking technical at them and I tried my best but so I just want to say before we begin thank",
    "start": "64799",
    "end": "71000"
  },
  {
    "text": "you all for being the target audience for this talk um thank you for giving me 40",
    "start": "71000",
    "end": "77200"
  },
  {
    "text": "minutes to explain what the heck I'm on about and thank you all for being sober that was another difference assuming you",
    "start": "77200",
    "end": "83479"
  },
  {
    "text": "are still all sober um maybe you're not I don't know it's been a three-day conference it's a",
    "start": "83479",
    "end": "88759"
  },
  {
    "text": "Friday before we get started I am talking about type systems so uh oh so",
    "start": "88759",
    "end": "94200"
  },
  {
    "text": "my clicker has already broken because it's not statically typed ah screw it ah there we go so talking about type",
    "start": "94200",
    "end": "102840"
  },
  {
    "start": "102000",
    "end": "125000"
  },
  {
    "text": "systems let's have a disclaimer this is not a static typing is better than",
    "start": "102840",
    "end": "108159"
  },
  {
    "text": "Dynamic typing holy war talk they've already those arguments have been done to death I not bashing any languages I",
    "start": "108159",
    "end": "115000"
  },
  {
    "text": "am saying here's an opportunity we may not have looked at in static typing",
    "start": "115000",
    "end": "120079"
  },
  {
    "text": "right um so let's have a little story about type",
    "start": "120079",
    "end": "126799"
  },
  {
    "start": "125000",
    "end": "239000"
  },
  {
    "text": "systems we know the correctness story what I would like to tell you is",
    "start": "126799",
    "end": "132360"
  },
  {
    "text": "that there are other things types do as well as checking correctness they allow",
    "start": "132360",
    "end": "137400"
  },
  {
    "text": "us to talk about code in very very nice ways they allow us to talk about code",
    "start": "137400",
    "end": "143280"
  },
  {
    "text": "and what it does succinctly and expressively and because of the machine",
    "start": "143280",
    "end": "148959"
  },
  {
    "text": "that's checking them accurately I'm going to go into this a bit but one of the things a type system",
    "start": "148959",
    "end": "154519"
  },
  {
    "text": "does from a certain point of view is give you documentation and the kind of documentation it gives you is guaranteed",
    "start": "154519",
    "end": "162360"
  },
  {
    "text": "to be up toate and accurate and I know of no other system in the whole of software",
    "start": "162360",
    "end": "169080"
  },
  {
    "text": "engineering that can make that guarantee so we are going to look at",
    "start": "169080",
    "end": "174879"
  },
  {
    "text": "some ways that types can help you communicate with the rest of your team they're not just about talking to the",
    "start": "174879",
    "end": "180599"
  },
  {
    "text": "compiler they're about talking to other developers also talking to other developers now but also in the",
    "start": "180599",
    "end": "187879"
  },
  {
    "text": "future uh type wear types of documentation they are correct documentation that will survive you",
    "start": "187879",
    "end": "194080"
  },
  {
    "text": "leaving the company they are correct documentation that will greet you as you join another company there is so much to",
    "start": "194080",
    "end": "200440"
  },
  {
    "text": "get from that code when you've got accurate documentation that's cheap to",
    "start": "200440",
    "end": "205879"
  },
  {
    "text": "maintain and and I'm going to go into this a bit another thing it can do it be documentation that's so succinct and",
    "start": "205879",
    "end": "212519"
  },
  {
    "text": "expressive that it helps you analyze your code and look for better ways to write code in a way that uh a picture a",
    "start": "212519",
    "end": "221840"
  },
  {
    "text": "uml diagram a Gant chart ain't going to give you so what kind of things can we",
    "start": "221840",
    "end": "229000"
  },
  {
    "text": "communicate with type systems I think there are three big fundamental ones and that's the core of",
    "start": "229000",
    "end": "234200"
  },
  {
    "text": "this talk the first thing you can do with a type system is describe stuff",
    "start": "234200",
    "end": "240920"
  },
  {
    "start": "239000",
    "end": "682000"
  },
  {
    "text": "in software how do we describe data how do we do it let me give you some wrong answers we don't do it like",
    "start": "240920",
    "end": "248920"
  },
  {
    "text": "this for a while Consultants were telling us that this would be the way we describe data Forever This is XML but",
    "start": "248920",
    "end": "254439"
  },
  {
    "text": "it's soap a special flavor of XML that's particularly hard to",
    "start": "254439",
    "end": "259440"
  },
  {
    "text": "swallow um right this this does describe data very accurately the reason I think",
    "start": "259440",
    "end": "267560"
  },
  {
    "text": "it failed is it's actively hostile to humans this may be utf8 but you ain't",
    "start": "267560",
    "end": "273240"
  },
  {
    "text": "meant to write it and you ain't meant to read it this might as well be binary right soap failed despite being good at",
    "start": "273240",
    "end": "281000"
  },
  {
    "text": "describing data it failed because it didn't communicate to humans what did we do",
    "start": "281000",
    "end": "287000"
  },
  {
    "text": "instead the thing that succeeded was this Jason as a way of describing data",
    "start": "287000",
    "end": "293360"
  },
  {
    "text": "like it love it hate it whatever this is the de facto way we describe data the",
    "start": "293360",
    "end": "300000"
  },
  {
    "text": "internet this is our de facto way of communicating to the rest of the world's computers the problem with it is it",
    "start": "300000",
    "end": "307759"
  },
  {
    "text": "doesn't describe data not in the way I'm trying to talk about it what it does is",
    "start": "307759",
    "end": "313199"
  },
  {
    "text": "specify a value right but look at this value this is okay I can see this is an",
    "start": "313199",
    "end": "319080"
  },
  {
    "text": "order ID for 3155 let's say Crona right there's a lot this doesn't tell me",
    "start": "319080",
    "end": "326680"
  },
  {
    "text": "like payment method is Visa so is a valid value there also",
    "start": "326680",
    "end": "331800"
  },
  {
    "text": "MasterCard American Express cash Dave promised he owed",
    "start": "331800",
    "end": "339160"
  },
  {
    "text": "me we have no idea and I can send you a million of these Json packets and you",
    "start": "339160",
    "end": "344800"
  },
  {
    "text": "still won't know because it describes a specific value it doesn't describe the",
    "start": "344800",
    "end": "350039"
  },
  {
    "text": "shape of data let me give you one more thing that isn't good at describing data and this",
    "start": "350039",
    "end": "355960"
  },
  {
    "text": "may be the most dangerous controversial thing I'm going to say Java at least it didn't used to be it's getting better",
    "start": "355960",
    "end": "362720"
  },
  {
    "text": "but a while back Java was also actively hostile to describing data you were you",
    "start": "362720",
    "end": "368560"
  },
  {
    "text": "weren't supposed to describe data data didn't really exist without methods if you tried to Define just data in Java",
    "start": "368560",
    "end": "377319"
  },
  {
    "text": "you were a bad Java programmer and you would be sent off to the gags for object",
    "start": "377319",
    "end": "383560"
  },
  {
    "text": "orientation things have got better with records but I don't think they would have got better I don't think we would",
    "start": "385240",
    "end": "391120"
  },
  {
    "text": "have got records without some inspiration from other languages so let me tell you what I think is the best way",
    "start": "391120",
    "end": "398199"
  },
  {
    "text": "we currently have today of describing data and if you're if you've programmed",
    "start": "398199",
    "end": "403919"
  },
  {
    "text": "in Swift or you like rust these ideas may have begun to percolate you may have heard this wonderful term algebraic data",
    "start": "403919",
    "end": "411960"
  },
  {
    "text": "types I'm going to try and explain to you what they are and why I think they're great and maybe along the way",
    "start": "411960",
    "end": "417800"
  },
  {
    "text": "I'll tell you why they're called algebraic which is clearly not a word that came from the marketing department right",
    "start": "417800",
    "end": "424240"
  },
  {
    "text": "thoughtworks didn't call them algebraic data types that's come from the academics right so there are two and a",
    "start": "424240",
    "end": "431440"
  },
  {
    "text": "bit parts to Al algebraic data types dead simple the first one is an idea",
    "start": "431440",
    "end": "437120"
  },
  {
    "text": "you've already seen in just about every programming language for the type system ever it's called a product type right",
    "start": "437120",
    "end": "443240"
  },
  {
    "text": "and it's easy it's a struct it's a record it's the thing that says an order",
    "start": "443240",
    "end": "448319"
  },
  {
    "text": "is this and this this and this you merge together several data types to get a new",
    "start": "448319",
    "end": "454720"
  },
  {
    "text": "one right and it's an and product type is an and why is it why is it called",
    "start": "454720",
    "end": "460360"
  },
  {
    "text": "Product type because the number of possible values for an order is all the possible values for order ID all the",
    "start": "460360",
    "end": "466800"
  },
  {
    "text": "possible values for string multiplied by all the possible values for INT multiplied by all the possible values of",
    "start": "466800",
    "end": "471960"
  },
  {
    "text": "payment method this is a really large type when you think about it that way but the main thing you need to think",
    "start": "471960",
    "end": "477560"
  },
  {
    "text": "about this is a way of anding data types together if I emphasize the fact that",
    "start": "477560",
    "end": "483440"
  },
  {
    "text": "it's an and some of you are going to think where's the or of course you are right there is an A and slightly fewer a",
    "start": "483440",
    "end": "491720"
  },
  {
    "text": "slightly smaller subset of languages have an A and it's called an enum right",
    "start": "491720",
    "end": "497080"
  },
  {
    "text": "we call this an enum in most languages you can say clothing size is small or",
    "start": "497080",
    "end": "502919"
  },
  {
    "text": "medium or large or extra large or go away to a specialist shop right the one",
    "start": "502919",
    "end": "508879"
  },
  {
    "text": "you'll always see in textbooks is club's heart spades diamonds that's my first",
    "start": "508879",
    "end": "515839"
  },
  {
    "text": "enum two very familiar Concepts the big deal with algebraic data types and where",
    "start": "515880",
    "end": "522120"
  },
  {
    "text": "some languages really missed an opportunity I think is the free",
    "start": "522120",
    "end": "527200"
  },
  {
    "text": "combination of the two ideas you can mix and match you can Nest ANS and ores to",
    "start": "527200",
    "end": "533320"
  },
  {
    "text": "your heart's content if you saw Diana mellon's talk",
    "start": "533320",
    "end": "539000"
  },
  {
    "text": "yesterday this is the end this is this is the end of the ends and ores right when you mix these things together",
    "start": "539000",
    "end": "545000"
  },
  {
    "text": "freely you get so much power so this is a data type order",
    "start": "545000",
    "end": "550240"
  },
  {
    "text": "response a purchase can be successful and we'll get a new order or payment failed and we get a payment provider",
    "start": "550240",
    "end": "557320"
  },
  {
    "text": "identifier and some failure message or there was a network error and I got a",
    "start": "557320",
    "end": "562600"
  },
  {
    "text": "status code probably 404 or 500 and a message right that is",
    "start": "562600",
    "end": "569839"
  },
  {
    "text": "10 lines of code I think that tells me an awful lot about this business and",
    "start": "569839",
    "end": "575240"
  },
  {
    "text": "their domain what they're doing what they think can go wrong which error cases they think are important right",
    "start": "575240",
    "end": "583040"
  },
  {
    "text": "sure they're hoping that purchases will be successful but they're planning for when the payment provider has problems",
    "start": "583040",
    "end": "589160"
  },
  {
    "text": "and for when the network goes down and those are two very different classes of error when I look at this data type I",
    "start": "589160",
    "end": "596320"
  },
  {
    "text": "feel like I'm looking into a hologram of a large part of the system let me get I've made this example up I",
    "start": "596320",
    "end": "603079"
  },
  {
    "text": "think it's relatable but I've made it up let me give you an actual real world example of some code I wrote with",
    "start": "603079",
    "end": "609000"
  },
  {
    "text": "this so this this algebraic data type it",
    "start": "609000",
    "end": "614880"
  },
  {
    "text": "has uh heat map items can get loaded and you get an array of heat map items the",
    "start": "614880",
    "end": "621079"
  },
  {
    "text": "map camera can move around and that will tell you the new latitude and longitude you can toggle whether or not you're",
    "start": "621079",
    "end": "626519"
  },
  {
    "text": "showing the heat maps and then there is some payment things things right so you can you can begin a payment you can",
    "start": "626519",
    "end": "633680"
  },
  {
    "text": "complete a payment and get a stripe token you can get an error from stripe you can record a payment this is actual",
    "start": "633680",
    "end": "640320"
  },
  {
    "text": "code and if you looked at this long enough you could probably guess that this and it actually is this is the we",
    "start": "640320",
    "end": "646959"
  },
  {
    "text": "were in the business of selling valuable heat map information to companies and it",
    "start": "646959",
    "end": "652880"
  },
  {
    "text": "was actually the price of property and commercial property around different systems I can see that all in about 10",
    "start": "652880",
    "end": "658560"
  },
  {
    "text": "lines of code I can make predictions about what tools we'll need we were using Google Maps that shouldn't surprise you uh I can",
    "start": "658560",
    "end": "665839"
  },
  {
    "text": "make predictions about what's going to go wrong I can tell you that we only supported one payment provider because",
    "start": "665839",
    "end": "671560"
  },
  {
    "text": "we were a startup and one payment would have been a huge transformational success so we didn't bother putting in",
    "start": "671560",
    "end": "678399"
  },
  {
    "text": "two yet um oh just by looking about 10 lines",
    "start": "678399",
    "end": "685639"
  },
  {
    "start": "682000",
    "end": "908000"
  },
  {
    "text": "of code you can begin to see what the business is out just I I don't know of",
    "start": "685639",
    "end": "691680"
  },
  {
    "text": "any other system that's that succinct and expressive and tells me things about the failure cases of the software as",
    "start": "691680",
    "end": "698440"
  },
  {
    "text": "well as the business ideas maybe maybe um if I look at databased",
    "start": "698440",
    "end": "706680"
  },
  {
    "text": "schema tables that will tell me some of the business ideas it rarely tells me about the failure cases this tells me everything the first thing I do when",
    "start": "706680",
    "end": "713440"
  },
  {
    "text": "going to a new company using these types of languages is I just look at the data types because I can read so much about",
    "start": "713440",
    "end": "720440"
  },
  {
    "text": "what they're thinking and what they're planning so the next thing that that's",
    "start": "720440",
    "end": "726320"
  },
  {
    "text": "describing data and I think that's a foundational piece the next thing we try and do above describing data is describe",
    "start": "726320",
    "end": "733600"
  },
  {
    "text": "the relationships between different kinds of data and this is me deliberately not saying the word",
    "start": "733600",
    "end": "739480"
  },
  {
    "text": "functions right functions it's the relationship between the thing you've got and the thing you'd like to get",
    "start": "739480",
    "end": "746800"
  },
  {
    "text": "that's what a function is or it's a contract if I give you one of these will you give me an order ID back",
    "start": "746800",
    "end": "753160"
  },
  {
    "text": "right in order to describe this I'm going to sneak in some Hol I'm going to teach you some has scho notation because",
    "start": "753160",
    "end": "759600"
  },
  {
    "text": "I think it's the best notation for communicating these ideas so slight",
    "start": "759600",
    "end": "764800"
  },
  {
    "text": "segue here's some JavaScript code you can withdraw if you give me a user ID",
    "start": "764800",
    "end": "770040"
  },
  {
    "text": "and an amount right I've started with JavaScript because just about everyone will admit they can just about read it",
    "start": "770040",
    "end": "776079"
  },
  {
    "text": "you know it's a universal language whether you like it or not let's add in some types I'm going to",
    "start": "776079",
    "end": "781800"
  },
  {
    "text": "switch over to Java and I get public string withdraw string user ID int amount and then the body",
    "start": "781800",
    "end": "789519"
  },
  {
    "text": "right in haskal land how do we change that the first thing we do is we just",
    "start": "789519",
    "end": "795320"
  },
  {
    "text": "look at the types so public throw that concept away user ID and amount those",
    "start": "795320",
    "end": "800680"
  },
  {
    "text": "are names that's an implementation detail they're somewhere else they're probably on the line immediately below",
    "start": "800680",
    "end": "806399"
  },
  {
    "text": "but we're talking about the types next small transformation we make is the",
    "start": "806399",
    "end": "812880"
  },
  {
    "text": "return type is at the start we put it at the end this to me if if I have one Hill I",
    "start": "812880",
    "end": "819160"
  },
  {
    "text": "will die on one thing I'm absolutely certain is correct it's that the thing at returns should be at the end right",
    "start": "819160",
    "end": "826079"
  },
  {
    "text": "cuz cuz that's how we read time right I give you those things and you get the thing if I had a time",
    "start": "826079",
    "end": "833199"
  },
  {
    "text": "machine I would go back to when C was being written and I would queue up with all the other time travelers who wants",
    "start": "833199",
    "end": "839600"
  },
  {
    "text": "to talk about null pointer exceptions and when it's my turn I'll say yeah null pointer except can we also",
    "start": "839600",
    "end": "845079"
  },
  {
    "text": "put the thing at the end at the end that would be good okay okay we're almost at has school the",
    "start": "845079",
    "end": "851920"
  },
  {
    "text": "rest is just syntactic sugar we look at the types and we do that a withdrawal is something that takes a string and an",
    "start": "851920",
    "end": "858399"
  },
  {
    "text": "integer and at the end we'll return a string the thing at the end is the thing you get back this is code it's writable",
    "start": "858399",
    "end": "867800"
  },
  {
    "text": "code it's also am I'm going to use the ew I am it's an equation it's an",
    "start": "867800",
    "end": "874480"
  },
  {
    "text": "equation that describes a fundamental relationship it's succinct notation that says hey here's some stuff I need to",
    "start": "874480",
    "end": "881759"
  },
  {
    "text": "provide you one of those if you can give me this and this I can give you that",
    "start": "881759",
    "end": "887199"
  },
  {
    "text": "it's a very succinct way of describing a process I don't know any other process",
    "start": "887199",
    "end": "892680"
  },
  {
    "text": "documentation methodology that is this concise that programmers will actually write",
    "start": "892680",
    "end": "899959"
  },
  {
    "text": "so let's dive into describing relationships I'm going to give you some examples um to bounce around languages",
    "start": "899959",
    "end": "905440"
  },
  {
    "text": "it's the same syntax I'm going to give these in Elm because this is where I have some nice approachable real world examples that have actually come up in",
    "start": "905440",
    "end": "912240"
  },
  {
    "start": "908000",
    "end": "1429000"
  },
  {
    "text": "real code so some Elm type signatures I was working on uh it's a functional",
    "start": "912240",
    "end": "918800"
  },
  {
    "text": "frontend programming language I was working on a website we had this little small nice self-contained thing I can",
    "start": "918800",
    "end": "924959"
  },
  {
    "text": "talk about that went wrong I wanted to generate create some",
    "start": "924959",
    "end": "930199"
  },
  {
    "text": "um icons right on the page and we use this glyph icons thing and the thing about glyph icons is you create a span",
    "start": "930199",
    "end": "937079"
  },
  {
    "text": "or a div with a CSS class of glyph icon and glyph icon hyphen name of the icon",
    "start": "937079",
    "end": "943279"
  },
  {
    "text": "you want it magically turns it into that which is my theme for a Friday afternoon",
    "start": "943279",
    "end": "950440"
  },
  {
    "text": "talk so I wrote this code um easy how do you get an icon class give me a name",
    "start": "951480",
    "end": "956519"
  },
  {
    "text": "I'll give you those two strings it's just a little helper function all right uh I let me show you the type",
    "start": "956519",
    "end": "963519"
  },
  {
    "text": "signature for that because um I can actually ask the compiler to give me the type signature it will give me back",
    "start": "963519",
    "end": "969600"
  },
  {
    "text": "string to string give me a string that's the name I'll give you back a string that's the CSS classes you want right",
    "start": "969600",
    "end": "977000"
  },
  {
    "text": "that seems like a reasonable relationship to describe in code certainly a very common relationship to describe in code it's the world's worst",
    "start": "977000",
    "end": "985639"
  },
  {
    "text": "type signature it's the world's vaguest type signature this is a ridiculous type signature here's a thing you can go away",
    "start": "985639",
    "end": "992360"
  },
  {
    "text": "with if you ever see this type signature ever again in your career it's probably either a string library or it's wrong",
    "start": "992360",
    "end": "1000440"
  },
  {
    "text": "right because what string to string which function is that what is Fu in",
    "start": "1000440",
    "end": "1006600"
  },
  {
    "text": "this uh it's icon class I've just told you it's icon class but it's also to Upper and to lower it's reverse and it's",
    "start": "1006600",
    "end": "1015399"
  },
  {
    "text": "abbreviate give me a string and I'll give you a string back that is the type signat of chat",
    "start": "1015399",
    "end": "1020720"
  },
  {
    "text": "GPT right I mean it is it is um actually if you give me a string there was a guy",
    "start": "1020720",
    "end": "1027520"
  },
  {
    "text": "in the 1940s or 50s who proved that if you give me a string then he can do any",
    "start": "1027520",
    "end": "1032720"
  },
  {
    "text": "computable function the type signature string to string is all of",
    "start": "1032720",
    "end": "1037760"
  },
  {
    "text": "computing so it's so desperately vague and if I'd been smarter back when I wrote that code I would have looked at",
    "start": "1037760",
    "end": "1043959"
  },
  {
    "text": "string to string and realized something is fishy here there's so much that can go wrong",
    "start": "1043959",
    "end": "1049799"
  },
  {
    "text": "potentially I could give this the name of an icon and I could get back any computable function at least as far as",
    "start": "1049799",
    "end": "1055640"
  },
  {
    "text": "the type signature is concerned let me tell you two things that actually went wrong with this",
    "start": "1055640",
    "end": "1060960"
  },
  {
    "text": "code um the first is someone mistyped user a nothing displays of course they",
    "start": "1060960",
    "end": "1067200"
  },
  {
    "text": "did of course they did of course that happened right um the other is uh so wrong input",
    "start": "1067200",
    "end": "1075039"
  },
  {
    "text": "the other is string to string the problem with string to string is you can call it on its self and we got this situation where",
    "start": "1075039",
    "end": "1082320"
  },
  {
    "text": "someone accidentally called icon class on icon class and got this whole thing",
    "start": "1082320",
    "end": "1087520"
  },
  {
    "text": "and I don't know which glyph icon it tried to show whether it tried to show user or the glyph icon project glyph",
    "start": "1087520",
    "end": "1094120"
  },
  {
    "text": "icon or if it just exploded but it was broken and I should have seen it from the type signature and if I can teach",
    "start": "1094120",
    "end": "1100000"
  },
  {
    "text": "you how to read type signatures you can spot these errors before you even try to run them so how can we fix this it's a",
    "start": "1100000",
    "end": "1108000"
  },
  {
    "text": "vague type signal we can fix it by being more specific right so we can replace",
    "start": "1108000",
    "end": "1113679"
  },
  {
    "text": "this one with something like something specific give me an icon and I'll give",
    "start": "1113679",
    "end": "1118960"
  },
  {
    "text": "you back some HTML that's what I was really driving at if I can communicate that to the compiler the rest should be",
    "start": "1118960",
    "end": "1125600"
  },
  {
    "text": "just a simple matter of programming so I did that I took that type signature I",
    "start": "1125600",
    "end": "1130799"
  },
  {
    "text": "implemented it and I ended up with something that was reliable right the whole universe of inputs is user heart",
    "start": "1130799",
    "end": "1137480"
  },
  {
    "text": "and glass very small Universe of inputs very small",
    "start": "1137480",
    "end": "1142600"
  },
  {
    "text": "potential footprint for things I can control here it's easy to read it's easy",
    "start": "1142600",
    "end": "1147960"
  },
  {
    "text": "to write if I want to extend it that's going to be trivial but for now I can see the whole world in one line of",
    "start": "1147960",
    "end": "1155200"
  },
  {
    "text": "code and the output is guaranteed to be something that can't be called in itself that is sensible to send out to the web",
    "start": "1155200",
    "end": "1162919"
  },
  {
    "text": "right so the type signature not only reveals the structure",
    "start": "1162919",
    "end": "1168760"
  },
  {
    "text": "of code which is a good thing in itself but it can also flag up problems and when you see the problem is",
    "start": "1168760",
    "end": "1176960"
  },
  {
    "text": "I've tried to express an idea and I didn't express it clearly it suggests how we can structure",
    "start": "1176960",
    "end": "1183200"
  },
  {
    "text": "a solution by being more clear right clarifies what we're trying",
    "start": "1183200",
    "end": "1188240"
  },
  {
    "text": "to do and what we're not trying to do by excluding the whole universe and narrowing down on the",
    "start": "1188240",
    "end": "1195640"
  },
  {
    "text": "problem let me give you another example this is also World code it's quite similar but it's going to let me",
    "start": "1195640",
    "end": "1200960"
  },
  {
    "text": "introduce a couple more ideas so this is from the same code base you will be familiar with this idea you've got a",
    "start": "1200960",
    "end": "1208320"
  },
  {
    "text": "website there's a URI um and we're going to try and turn that user entered URI",
    "start": "1208320",
    "end": "1214280"
  },
  {
    "text": "into the name of the page we want to show so if you go to SL account you get the dashboard and if you go to SL",
    "start": "1214280",
    "end": "1219679"
  },
  {
    "text": "account settings you get the settings page slash takes you to the front page anything else should",
    "start": "1219679",
    "end": "1226080"
  },
  {
    "text": "404 look at the type signature for this one and fear it's string to string again",
    "start": "1226080",
    "end": "1232919"
  },
  {
    "text": "so there's definitely something wrong this is too vast but the input",
    "start": "1232919",
    "end": "1238600"
  },
  {
    "text": "string that's actually correct that's something the user can enter right so it",
    "start": "1238600",
    "end": "1244200"
  },
  {
    "text": "has to be any possible string they can enter I can't change that one can change something about the return",
    "start": "1244200",
    "end": "1250400"
  },
  {
    "text": "type so I'm going to set up a view which is a finite Universe of things this can",
    "start": "1250400",
    "end": "1255520"
  },
  {
    "text": "return I look at this type signature now and say oh okay so there's an infinite number of possible inputs but a small",
    "start": "1255520",
    "end": "1262760"
  },
  {
    "text": "finite understandable number of outputs um that sounds like dealing with",
    "start": "1262760",
    "end": "1270000"
  },
  {
    "text": "users right it does it sounds like okay they could tell me almost anything I'm",
    "start": "1270000",
    "end": "1275279"
  },
  {
    "text": "going to try and narrow that down to something specific um we rewrote the code to look",
    "start": "1275279",
    "end": "1280919"
  },
  {
    "text": "like this right um pattern matching another great",
    "start": "1280919",
    "end": "1286799"
  },
  {
    "text": "idea um so that's",
    "start": "1286799",
    "end": "1292880"
  },
  {
    "text": "great taken a type signature narrowed it down communic taking a bad type signature it's communicated Badness to",
    "start": "1292880",
    "end": "1300120"
  },
  {
    "text": "me got a better type signature and I can use that to drive better code and explain the code to my",
    "start": "1300120",
    "end": "1307039"
  },
  {
    "text": "colleagues I also get a new colleague from this if the language is doing it right I get a new colleague which is the",
    "start": "1307039",
    "end": "1315080"
  },
  {
    "text": "compiler and I don't want to get too much into correctness but but when you can communicate to a computer in a way",
    "start": "1315080",
    "end": "1323320"
  },
  {
    "text": "that communicates with your colleagues and the computer your computer can almost become",
    "start": "1323320",
    "end": "1328799"
  },
  {
    "text": "a colleague so I wrote this code this was actually something I wrote on along the",
    "start": "1328799",
    "end": "1334840"
  },
  {
    "text": "way and my colleague the compiler looks at this and says well and you've got you over here you",
    "start": "1334840",
    "end": "1342960"
  },
  {
    "text": "said that there are four different kinds of view but over here you've said there are only three different kinds of view",
    "start": "1342960",
    "end": "1348520"
  },
  {
    "text": "you to worry about and the compiler say well you've made two assumptions which one's right is there a discrepancy there",
    "start": "1348520",
    "end": "1355600"
  },
  {
    "text": "and it tells me very helpfully this is why I picked Elm for these examples it has beautiful error messages it tells me",
    "start": "1355600",
    "end": "1361640"
  },
  {
    "text": "I'm missing a case right it's it's read my documentation too and understood something about it so I get compiler",
    "start": "1361640",
    "end": "1369520"
  },
  {
    "text": "help as a bonus and the nice I want I want to",
    "start": "1369520",
    "end": "1375080"
  },
  {
    "text": "throw in this idea the nice things about having a compiler as um as a colleague",
    "start": "1375080",
    "end": "1383279"
  },
  {
    "text": "is they're not as smart as your other colleagues but they're more thorough right it's great a computer",
    "start": "1383279",
    "end": "1391400"
  },
  {
    "text": "will tirelessly go and check all the code for all the assumptions you've ever made provided you give it the",
    "start": "1391400",
    "end": "1396440"
  },
  {
    "text": "information to work with Okay for time I'm going to jump to",
    "start": "1396440",
    "end": "1401559"
  },
  {
    "text": "the next big idea so describing stuff describing relationships these ideas are are",
    "start": "1401559",
    "end": "1408720"
  },
  {
    "text": "percolating or have percolated into mainstream languages there's one more big idea that I don't think we've got on",
    "start": "1408720",
    "end": "1415240"
  },
  {
    "text": "top of yet that I hope soon will percolate into the mainstream and it's the idea",
    "start": "1415240",
    "end": "1422159"
  },
  {
    "text": "that stuff and relationships happen in a context we execute code in an execution",
    "start": "1422159",
    "end": "1429760"
  },
  {
    "start": "1429000",
    "end": "1966000"
  },
  {
    "text": "context so let me show you three functions here is show greeting takes a",
    "start": "1429760",
    "end": "1434880"
  },
  {
    "text": "user gives you back a string fetch user give me user ID I'll give you back a user create invoice order ID user ID",
    "start": "1434880",
    "end": "1442960"
  },
  {
    "text": "give you back a PDF these are all happening in a context",
    "start": "1442960",
    "end": "1448360"
  },
  {
    "text": "right and I'm going to get into this but let me show you the notation for it first languages like hasle and Elman",
    "start": "1448360",
    "end": "1455600"
  },
  {
    "text": "friends let you not only to say what the relationship is between specific types of data but the context in which they",
    "start": "1455600",
    "end": "1462760"
  },
  {
    "text": "happen so I can write this code in hcll I can say withdrawal is something that takes a that needs a US us ID and an",
    "start": "1462760",
    "end": "1469240"
  },
  {
    "text": "amount and we'll provide you with a withdrawal ID provided you give it the",
    "start": "1469240",
    "end": "1474720"
  },
  {
    "text": "execution context of being able to access a database",
    "start": "1474720",
    "end": "1481320"
  },
  {
    "text": "right because it doesn't happen in a vacuum you may you can almost see that",
    "start": "1481320",
    "end": "1487200"
  },
  {
    "text": "if I give you a user ID and an amount in order to create a withdrawal ID there's going to be some kind of databas is",
    "start": "1487200",
    "end": "1493720"
  },
  {
    "text": "thing to happen or maybe some kind of webbish thing but this makes it explicit so let me go back to my examples and",
    "start": "1493720",
    "end": "1500320"
  },
  {
    "text": "talk about explicit versions of the context in which they're running show grating takes a user",
    "start": "1500320",
    "end": "1506399"
  },
  {
    "text": "returns a string probably should just be that simple it's going to say hello Dave right it's very simple function fetch",
    "start": "1506399",
    "end": "1513679"
  },
  {
    "text": "user takes a user ID gives you back a user in the context of accessing the web",
    "start": "1513679",
    "end": "1521840"
  },
  {
    "text": "right it won't run unless you can give it the context of accessing the web create invoice similarly takes a",
    "start": "1521840",
    "end": "1529520"
  },
  {
    "text": "user ID and an order ID and it will create you a PDF provided it can access the",
    "start": "1529520",
    "end": "1535399"
  },
  {
    "text": "database if we build the context into this description of our software we can",
    "start": "1535399",
    "end": "1541039"
  },
  {
    "text": "reveal some dependencies like depends on the web depends on the database because the computer is",
    "start": "1541039",
    "end": "1547559"
  },
  {
    "text": "checking that these things are accurate and that's as far as I want to go into correctness but you it's a documentation",
    "start": "1547559",
    "end": "1554919"
  },
  {
    "text": "that you can trust in so far as it does that not only does it reveal what your software",
    "start": "1554919",
    "end": "1560240"
  },
  {
    "text": "depends on but what it doesn't depend on right creating an invoice doesn't need",
    "start": "1560240",
    "end": "1566760"
  },
  {
    "text": "HTTP access so if I'm worried about sending user data over the internet I",
    "start": "1566760",
    "end": "1574159"
  },
  {
    "text": "have one function of those three where I should actually worry about it because the other two are guaranteed not to",
    "start": "1574159",
    "end": "1579600"
  },
  {
    "text": "operate in that kind of context if the compiler checks it's true we can learn something we can depend on",
    "start": "1579600",
    "end": "1586720"
  },
  {
    "text": "but also as long as this documentation these type signatures are accurate they we can",
    "start": "1586720",
    "end": "1594159"
  },
  {
    "text": "start to look at them and analyze them as though someone had handed us a document that was up to- date and true",
    "start": "1594159",
    "end": "1599480"
  },
  {
    "text": "and guaranteed to be so so let's have a look at um let's have",
    "start": "1599480",
    "end": "1604640"
  },
  {
    "text": "a look at the uh create invoice one I think that's an interesting one so you",
    "start": "1604640",
    "end": "1609880"
  },
  {
    "text": "probably have an intuition about how this software is going to work because you're all experienced software people create invoice takes an order ID and a",
    "start": "1609880",
    "end": "1616880"
  },
  {
    "text": "user ID goes to the database and generates a PDF I can sort of see how",
    "start": "1616880",
    "end": "1623360"
  },
  {
    "text": "that code is going to work just from that description which is a good thing I see a problem with",
    "start": "1623360",
    "end": "1629919"
  },
  {
    "text": "this what is it about creating an invoice that needs full access to a",
    "start": "1629919",
    "end": "1636559"
  },
  {
    "text": "database I'm not sure it does I with the right with the right tools with the right language I can make this a better",
    "start": "1636559",
    "end": "1643039"
  },
  {
    "text": "type signature I can say actually this code just needs the cont",
    "start": "1643039",
    "end": "1648240"
  },
  {
    "text": "text of being able to read the database if I if I've got a language that lets me Express that idea I can put",
    "start": "1648240",
    "end": "1655279"
  },
  {
    "text": "that into the code and know it's true for all time and I can learn things like somebody",
    "start": "1655279",
    "end": "1662360"
  },
  {
    "text": "says oh the database is getting overloaded I want to spin out a readon database do you know any code that's",
    "start": "1662360",
    "end": "1668799"
  },
  {
    "text": "going to work on the readon database yes I do are you sure even more sure than if",
    "start": "1668799",
    "end": "1675039"
  },
  {
    "text": "I checked it myself because I'm a fallible human the computers checked it for me and said this is code that only",
    "start": "1675039",
    "end": "1681840"
  },
  {
    "text": "needs read access this is obviously also a security Improvement this isn't going to",
    "start": "1681840",
    "end": "1687600"
  },
  {
    "text": "accidentally delete the database because the computer's checked that it can't and I know that just from reading the",
    "start": "1687600",
    "end": "1694120"
  },
  {
    "text": "documentation which is accurate and up toate guaranteed by looking at a type",
    "start": "1694120",
    "end": "1700559"
  },
  {
    "text": "signature and saying hang on is that the right type signature for this code you can start to tame the complexity of a",
    "start": "1700559",
    "end": "1706799"
  },
  {
    "text": "system you can reduce it foot footprint narrow it scope make a smaller context that's more",
    "start": "1706799",
    "end": "1712200"
  },
  {
    "text": "impropriate but you can also do something else by looking at this same type signature I think we can do something which we've been told to do",
    "start": "1712200",
    "end": "1719399"
  },
  {
    "text": "for years but we never been told how I think maybe there's some people at this conference will tell me I've been",
    "start": "1719399",
    "end": "1725200"
  },
  {
    "text": "telling you for 20 years how to do this but hey um it lets you decouple some",
    "start": "1725200",
    "end": "1730559"
  },
  {
    "text": "context look at this code right create invoice takes an order ID and a user ID",
    "start": "1730559",
    "end": "1736880"
  },
  {
    "text": "reads the database and generates a PDF that kind of bugs me that's a very",
    "start": "1736880",
    "end": "1744320"
  },
  {
    "text": "complex relationship takes two identifiers Magic on the database and",
    "start": "1744320",
    "end": "1750120"
  },
  {
    "text": "returns a PDF that seems like it's abbreviating several steps I would like to rewrite",
    "start": "1750120",
    "end": "1757279"
  },
  {
    "text": "this code it makes me uneasy I'm going to I'm going to refactor this code into to much simpler functions fetch invoice",
    "start": "1757279",
    "end": "1764960"
  },
  {
    "text": "order ID user ID reads the database and gets you invoice which I check the other file and",
    "start": "1764960",
    "end": "1771519"
  },
  {
    "text": "know I know an invoice is just an and of order and user right and then I have a separate function that takes an invoice",
    "start": "1771519",
    "end": "1778519"
  },
  {
    "text": "generates a PDF same task accomplished but I look at this and say okay I think I know how",
    "start": "1778519",
    "end": "1786440"
  },
  {
    "text": "fetch invoice is implemented I think it's going to do select star from user where user ID equals select uh star from",
    "start": "1786440",
    "end": "1794279"
  },
  {
    "text": "order where order ID equals and just return that mush together",
    "start": "1794279",
    "end": "1800039"
  },
  {
    "text": "testing databases is hard and miserable for so many reasons but this might not",
    "start": "1800159",
    "end": "1805760"
  },
  {
    "text": "actually need that much testing because it's pretty simple there's two select Stars where right I find that code hard",
    "start": "1805760",
    "end": "1813760"
  },
  {
    "text": "to test but I also find it doesn't need that much testing meanwhile create",
    "start": "1813760",
    "end": "1819480"
  },
  {
    "text": "invoice that seems like a much more complicated piece of code particularly",
    "start": "1819480",
    "end": "1825799"
  },
  {
    "text": "because not only did the software develop have an opinion on it but marketing and finance have an opinion on",
    "start": "1825799",
    "end": "1831519"
  },
  {
    "text": "it uh and the graphic designers have an opinion everyone's got an opinion on everyone in the company has a second has",
    "start": "1831519",
    "end": "1837279"
  },
  {
    "text": "an opinion on this second type signature it's going to be really complicated to get right and it's going to change every",
    "start": "1837279",
    "end": "1843120"
  },
  {
    "text": "time we change our logo a bit or the layout but it's easy to test because it",
    "start": "1843120",
    "end": "1848480"
  },
  {
    "text": "has no external context dependencies it's a pure function if you'll let me use that term it's just the",
    "start": "1848480",
    "end": "1854559"
  },
  {
    "text": "transformation of one kind of data into another I look at the two functions and I say hard to test easy to get right",
    "start": "1854559",
    "end": "1862279"
  },
  {
    "text": "hard to get right but easy to test I feel a lot better about these two functions than one at the top and I re",
    "start": "1862279",
    "end": "1869159"
  },
  {
    "text": "and I get that just by looking at the first function and saying that looks like it's doing a lot of work right type",
    "start": "1869159",
    "end": "1876600"
  },
  {
    "text": "signatures are the only tool I've ever found that communicate to me where I need decoupling and how I might do it",
    "start": "1876600",
    "end": "1884600"
  },
  {
    "text": "and I've been told for decades that decoupling is great but not how to do it on my code base and where to find",
    "start": "1884600",
    "end": "1891440"
  },
  {
    "text": "Opportunities For",
    "start": "1891440",
    "end": "1894200"
  },
  {
    "text": "It uh yes I've already said that so how are we doing for time we're coming up a",
    "start": "1897799",
    "end": "1902960"
  },
  {
    "text": "little fast so we're going to have time for questions good right so let me sum up",
    "start": "1902960",
    "end": "1910519"
  },
  {
    "text": "those three big Parts a good type system will do three things for you a good",
    "start": "1910519",
    "end": "1915840"
  },
  {
    "text": "modern type system of the the kind that's gradually percolating and I'm trying to make it percolate more it will",
    "start": "1915840",
    "end": "1922559"
  },
  {
    "text": "let you describe things it will let you describe the relationships between things and the context in which they",
    "start": "1922559",
    "end": "1929399"
  },
  {
    "text": "happen to your computer and to your colleagues and from a certain point of view that is the whole of",
    "start": "1929399",
    "end": "1936600"
  },
  {
    "text": "programming right or certainly it's the whole of communicating about",
    "start": "1936600",
    "end": "1941679"
  },
  {
    "text": "programming there are stakeholder discussions that people from thoughtworks can tell you about and",
    "start": "1941679",
    "end": "1946799"
  },
  {
    "text": "that's not my domain my domain is computerss but a good type system should",
    "start": "1946799",
    "end": "1951919"
  },
  {
    "text": "be able to do this because this is the whole of the story we need to be able to tell when we're in the programming",
    "start": "1951919",
    "end": "1959398"
  },
  {
    "text": "mode so great Chris these seems like interesting ideas I want to explore them",
    "start": "1959600",
    "end": "1965399"
  },
  {
    "text": "more where do I go next this is my chance to do some end of talk",
    "start": "1965399",
    "end": "1970880"
  },
  {
    "start": "1966000",
    "end": "2144000"
  },
  {
    "text": "propaganda here are four languages I would commend to you that uh explore these ideas there Haskell Elm pure",
    "start": "1970880",
    "end": "1978600"
  },
  {
    "text": "script and Unison um hascal is the one you go to if",
    "start": "1978600",
    "end": "1984200"
  },
  {
    "text": "you want loads and loads of books about it it's the OG for a lot of these ideas it's also the one you want if you want",
    "start": "1984200",
    "end": "1991039"
  },
  {
    "text": "to take these ideas and see how far they can possibly go in computer science which may be a goal Elm is the",
    "start": "1991039",
    "end": "1999159"
  },
  {
    "text": "one you pick if you like the sound of these ideas and you want the easiest possible Learning Journey to getting the",
    "start": "1999159",
    "end": "2005320"
  },
  {
    "text": "big parts of the ideas in your head Elm is the most programmer friendly language",
    "start": "2005320",
    "end": "2010799"
  },
  {
    "text": "I've ever encountered it's Creator put a lot of effort into that and it paid off so if you just want if you want to learn",
    "start": "2010799",
    "end": "2016360"
  },
  {
    "text": "functional programming all these ideas start there pure script I mention because that's probably my go-to",
    "start": "2016360",
    "end": "2022120"
  },
  {
    "text": "language these days it's hascal with some of the crft shaved off and it runs",
    "start": "2022120",
    "end": "2028200"
  },
  {
    "text": "on the back end and in the browser so I can do lots of fun things with it and the last one is Unison which takes these",
    "start": "2028200",
    "end": "2035000"
  },
  {
    "text": "ideas and it's the one you go to if you want all these ideas plus some really interesting ideas about how we",
    "start": "2035000",
    "end": "2040480"
  },
  {
    "text": "collaborate on software but you can also get them just by looking at the languages you're",
    "start": "2040480",
    "end": "2045960"
  },
  {
    "text": "probably already using um these these ideas as I've kept saying are coming up in languages like typescript rust Swift",
    "start": "2045960",
    "end": "2053398"
  },
  {
    "text": "you can find them in gleam which is a very nice programming language if some of these ideas are",
    "start": "2053399",
    "end": "2058720"
  },
  {
    "text": "already familiar to you and you want to go even further let me recommend two books there is type driven development",
    "start": "2058720",
    "end": "2064839"
  },
  {
    "text": "with Idis which introduces a fourth concept of can we describe how things are used",
    "start": "2064839",
    "end": "2071720"
  },
  {
    "text": "up over time I've chosen not to go into that one right but but Idris what is a",
    "start": "2071720",
    "end": "2078520"
  },
  {
    "text": "is an exploration playground for is there more we can do with type signatures when we think about a",
    "start": "2078520",
    "end": "2084200"
  },
  {
    "text": "changing system over time and there's the book thinking with types if you're asking yourself the",
    "start": "2084200",
    "end": "2090839"
  },
  {
    "text": "question what okay I can express a lot of things with these ideas how far can I",
    "start": "2090839",
    "end": "2096240"
  },
  {
    "text": "push that how much information can I shove into the type system you would be amazed you will probably need to lie",
    "start": "2096240",
    "end": "2102520"
  },
  {
    "text": "down afterwards um next bit of propaganda and",
    "start": "2102520",
    "end": "2108960"
  },
  {
    "text": "coming to the end I just quickly say um if you would like to hear more from me if you're not already sick of the sound",
    "start": "2108960",
    "end": "2114920"
  },
  {
    "text": "of my voice if you'd like to hear more I'm going to pitch my podcast at you um",
    "start": "2114920",
    "end": "2120000"
  },
  {
    "text": "it's called developer voices this week's episode is on building full snack web applications with luster and gleam which",
    "start": "2120000",
    "end": "2127720"
  },
  {
    "text": "gives you the best of functional frontend programming and typed actors on",
    "start": "2127720",
    "end": "2133119"
  },
  {
    "text": "the erlang beam in one that's this this week's episode it's cool uh with Haley",
    "start": "2133119",
    "end": "2139000"
  },
  {
    "text": "Thompson who's wonderful enough propaganda thank you very much",
    "start": "2139000",
    "end": "2146880"
  }
]