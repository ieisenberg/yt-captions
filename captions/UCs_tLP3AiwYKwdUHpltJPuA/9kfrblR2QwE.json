[
  {
    "text": "he uh hi everyone my name is Mike jalis",
    "start": "799",
    "end": "3719"
  },
  {
    "text": "and today I'm going to be talking about",
    "start": "3719",
    "end": "6439"
  },
  {
    "text": "Onyx uh so I am the person who created",
    "start": "6439",
    "end": "9320"
  },
  {
    "text": "Onyx I started working on it about a",
    "start": "9320",
    "end": "12200"
  },
  {
    "text": "year and a half two years ago and I'm",
    "start": "12200",
    "end": "14519"
  },
  {
    "text": "just totally delighted with the",
    "start": "14519",
    "end": "16039"
  },
  {
    "text": "progression in terms of how far it's",
    "start": "16039",
    "end": "17400"
  },
  {
    "text": "come and and the community support and",
    "start": "17400",
    "end": "19199"
  },
  {
    "text": "all those things so thank you for coming",
    "start": "19199",
    "end": "21439"
  },
  {
    "text": "uh so I've spent the majority of my",
    "start": "21439",
    "end": "22960"
  },
  {
    "text": "career almost my entire software",
    "start": "22960",
    "end": "25000"
  },
  {
    "text": "engineering career writing uh products",
    "start": "25000",
    "end": "27720"
  },
  {
    "text": "for uh distributed data processing",
    "start": "27720",
    "end": "30000"
  },
  {
    "text": "worked in uh realtime streaming for the",
    "start": "30000",
    "end": "31800"
  },
  {
    "text": "financial sector I've done uh business",
    "start": "31800",
    "end": "34000"
  },
  {
    "text": "intelligence batch analytics uh I've",
    "start": "34000",
    "end": "36320"
  },
  {
    "text": "done pharmaceutical data warehousing uh",
    "start": "36320",
    "end": "38719"
  },
  {
    "text": "ETL data syncing I've done all these",
    "start": "38719",
    "end": "40680"
  },
  {
    "text": "things and used the majority of the",
    "start": "40680",
    "end": "42280"
  },
  {
    "text": "modern tooling and I was profoundly",
    "start": "42280",
    "end": "45000"
  },
  {
    "text": "disappointed um with the way that those",
    "start": "45000",
    "end": "47160"
  },
  {
    "text": "tools uh are exposed to the developer",
    "start": "47160",
    "end": "49520"
  },
  {
    "text": "and the model that you work in I just",
    "start": "49520",
    "end": "51280"
  },
  {
    "text": "wasn't getting uh the good enough return",
    "start": "51280",
    "end": "54320"
  },
  {
    "text": "on my investment uh so I had to build",
    "start": "54320",
    "end": "56960"
  },
  {
    "text": "something else to to do this myself and",
    "start": "56960",
    "end": "58840"
  },
  {
    "text": "I had to be able to do everything that I",
    "start": "58840",
    "end": "60199"
  },
  {
    "text": "was doing before all those things that I",
    "start": "60199",
    "end": "61680"
  },
  {
    "text": "just mentioned so this is a uh Onyx is a",
    "start": "61680",
    "end": "64400"
  },
  {
    "text": "cloud scale distributed data processing",
    "start": "64400",
    "end": "66400"
  },
  {
    "text": "platform with a core piece to do this",
    "start": "66400",
    "end": "68920"
  },
  {
    "text": "this compute model and then supporting",
    "start": "68920",
    "end": "70799"
  },
  {
    "text": "tooling around it and the main idea",
    "start": "70799",
    "end": "73119"
  },
  {
    "text": "about Onyx is that we've taken the",
    "start": "73119",
    "end": "75040"
  },
  {
    "text": "traditional Computing model that you",
    "start": "75040",
    "end": "76400"
  },
  {
    "text": "find in map reduce spark storm and all",
    "start": "76400",
    "end": "78680"
  },
  {
    "text": "those other things uh and we we split it",
    "start": "78680",
    "end": "80840"
  },
  {
    "text": "apart into smaller building blocks um",
    "start": "80840",
    "end": "82799"
  },
  {
    "text": "ones that can be recomposed and put back",
    "start": "82799",
    "end": "84840"
  },
  {
    "text": "together for more flexible robust",
    "start": "84840",
    "end": "87040"
  },
  {
    "text": "programs uh another goal of Onyx is to",
    "start": "87040",
    "end": "89920"
  },
  {
    "text": "to offer a hybrid batch and streaming",
    "start": "89920",
    "end": "91640"
  },
  {
    "text": "API um via the exact the exact same API",
    "start": "91640",
    "end": "95240"
  },
  {
    "text": "mirrored that you would be using",
    "start": "95240",
    "end": "96560"
  },
  {
    "text": "otherwise uh we're finding more and more",
    "start": "96560",
    "end": "98360"
  },
  {
    "text": "in applications that you're going to",
    "start": "98360",
    "end": "99399"
  },
  {
    "text": "need both of these things to be",
    "start": "99399",
    "end": "100840"
  },
  {
    "text": "successful to be truly fault tolerant uh",
    "start": "100840",
    "end": "102880"
  },
  {
    "text": "at your data application Level so this",
    "start": "102880",
    "end": "104680"
  },
  {
    "text": "was a goal we were trying to tackle in",
    "start": "104680",
    "end": "107040"
  },
  {
    "text": "terms of its design uh Onyx is",
    "start": "107040",
    "end": "109000"
  },
  {
    "text": "masterless and this is almost fully",
    "start": "109000",
    "end": "111000"
  },
  {
    "text": "unique among uh other Platforms in this",
    "start": "111000",
    "end": "113719"
  },
  {
    "text": "space and we're going to talk mostly",
    "start": "113719",
    "end": "115240"
  },
  {
    "text": "about why masterless is kind of",
    "start": "115240",
    "end": "117200"
  },
  {
    "text": "important today um and probably of",
    "start": "117200",
    "end": "119119"
  },
  {
    "text": "interest to this room is that it's",
    "start": "119119",
    "end": "120280"
  },
  {
    "text": "closure all the way down it's written in",
    "start": "120280",
    "end": "122200"
  },
  {
    "text": "100% closure and primarily intended to",
    "start": "122200",
    "end": "124000"
  },
  {
    "text": "be consumed in closure even though we",
    "start": "124000",
    "end": "126039"
  },
  {
    "text": "have stories for the languages this is",
    "start": "126039",
    "end": "127880"
  },
  {
    "text": "really a sweet",
    "start": "127880",
    "end": "130479"
  },
  {
    "text": "spot so this talk is going to be divided",
    "start": "130760",
    "end": "133000"
  },
  {
    "text": "into two parts very briefly I'm going to",
    "start": "133000",
    "end": "134920"
  },
  {
    "text": "cover the API value proposition and why",
    "start": "134920",
    "end": "136720"
  },
  {
    "text": "you want to use it as a developer and",
    "start": "136720",
    "end": "138200"
  },
  {
    "text": "what it what it gives you uh but we're",
    "start": "138200",
    "end": "139840"
  },
  {
    "text": "really going to do a deep dive about",
    "start": "139840",
    "end": "141000"
  },
  {
    "text": "that in the workshop and you're going to",
    "start": "141000",
    "end": "142000"
  },
  {
    "text": "learn how to use it and things like that",
    "start": "142000",
    "end": "144080"
  },
  {
    "text": "most of the talk is going to be about",
    "start": "144080",
    "end": "145239"
  },
  {
    "text": "the design and how Onyx actually works",
    "start": "145239",
    "end": "146720"
  },
  {
    "text": "because I don't get to talk about that",
    "start": "146720",
    "end": "148040"
  },
  {
    "text": "very frequently um and it's really",
    "start": "148040",
    "end": "150200"
  },
  {
    "text": "something you ought to know if you're",
    "start": "150200",
    "end": "151200"
  },
  {
    "text": "going to take this into",
    "start": "151200",
    "end": "153360"
  },
  {
    "text": "production so let's talk about the API a",
    "start": "153360",
    "end": "155800"
  },
  {
    "text": "little bit um I like to talk about uh",
    "start": "155800",
    "end": "158080"
  },
  {
    "text": "moving my data in terms of workflows we",
    "start": "158080",
    "end": "160120"
  },
  {
    "text": "like to draw these out as directed a",
    "start": "160120",
    "end": "161480"
  },
  {
    "text": "cyclic graphs and picture our data",
    "start": "161480",
    "end": "163400"
  },
  {
    "text": "moving along these edges in the graph so",
    "start": "163400",
    "end": "165400"
  },
  {
    "text": "at the top we might be reading some",
    "start": "165400",
    "end": "166480"
  },
  {
    "text": "tweets or some metrics and then applying",
    "start": "166480",
    "end": "168440"
  },
  {
    "text": "any number of Transformations and",
    "start": "168440",
    "end": "169800"
  },
  {
    "text": "aggregations in the middle and then",
    "start": "169800",
    "end": "171319"
  },
  {
    "text": "writing our results in the end to some",
    "start": "171319",
    "end": "173000"
  },
  {
    "text": "kind of uh storage",
    "start": "173000",
    "end": "174519"
  },
  {
    "text": "medium in Onyx we model this structure",
    "start": "174519",
    "end": "177200"
  },
  {
    "text": "directly using a vector of vectors and",
    "start": "177200",
    "end": "179040"
  },
  {
    "text": "this is called the work workflow in your",
    "start": "179040",
    "end": "180760"
  },
  {
    "text": "Onyx job the keywords are tasks and you",
    "start": "180760",
    "end": "183440"
  },
  {
    "text": "see the mapping from left to right is a",
    "start": "183440",
    "end": "185640"
  },
  {
    "text": "source task to a destination task this",
    "start": "185640",
    "end": "188319"
  },
  {
    "text": "is strictly capturing the structure of",
    "start": "188319",
    "end": "190120"
  },
  {
    "text": "your computation and this is one of the",
    "start": "190120",
    "end": "191640"
  },
  {
    "text": "first things we take out of the the",
    "start": "191640",
    "end": "193080"
  },
  {
    "text": "larger complected Computing model it's",
    "start": "193080",
    "end": "195280"
  },
  {
    "text": "really important to isolate this but",
    "start": "195280",
    "end": "198000"
  },
  {
    "text": "structure is not enough we have to",
    "start": "198000",
    "end": "200040"
  },
  {
    "text": "relate it to context for what these tax",
    "start": "200040",
    "end": "202920"
  },
  {
    "text": "excuse me tasks actually",
    "start": "202920",
    "end": "205239"
  },
  {
    "text": "mean and the catalog is going to provide",
    "start": "205239",
    "end": "207400"
  },
  {
    "text": "that context for every entry in the",
    "start": "207400",
    "end": "209439"
  },
  {
    "text": "catalog every task you're going to give",
    "start": "209439",
    "end": "211799"
  },
  {
    "text": "it a name so it corresponds to a",
    "start": "211799",
    "end": "213519"
  },
  {
    "text": "particular",
    "start": "213519",
    "end": "214599"
  },
  {
    "text": "entry and we give it some functional and",
    "start": "214599",
    "end": "216840"
  },
  {
    "text": "nonfunctional parameters for example in",
    "start": "216840",
    "end": "219000"
  },
  {
    "text": "the lower one in the parse payload task",
    "start": "219000",
    "end": "220760"
  },
  {
    "text": "this is something that's functional and",
    "start": "220760",
    "end": "222319"
  },
  {
    "text": "presumably transformative we bind it to",
    "start": "222319",
    "end": "224760"
  },
  {
    "text": "a function specifically we give it a",
    "start": "224760",
    "end": "226959"
  },
  {
    "text": "fully qualified namespace keyword that",
    "start": "226959",
    "end": "229040"
  },
  {
    "text": "we resolve to a closure function on the",
    "start": "229040",
    "end": "230599"
  },
  {
    "text": "class path at run time in your cluster",
    "start": "230599",
    "end": "232439"
  },
  {
    "text": "we presume this is going to be there and",
    "start": "232439",
    "end": "233680"
  },
  {
    "text": "we look it up and then we could as you",
    "start": "233680",
    "end": "235720"
  },
  {
    "text": "see we give it other parameters like a",
    "start": "235720",
    "end": "236879"
  },
  {
    "text": "batching size and you can do all kinds",
    "start": "236879",
    "end": "238159"
  },
  {
    "text": "of tuning at this point",
    "start": "238159",
    "end": "241480"
  },
  {
    "text": "uh in terms of actually doing these",
    "start": "241480",
    "end": "242840"
  },
  {
    "text": "Transformations this is straight closure",
    "start": "242840",
    "end": "245400"
  },
  {
    "text": "um we're going to resolve a normal",
    "start": "245400",
    "end": "246680"
  },
  {
    "text": "closure function that's going to take a",
    "start": "246680",
    "end": "248439"
  },
  {
    "text": "map and it's going to return a map we",
    "start": "248439",
    "end": "250480"
  },
  {
    "text": "call these Maps segments for a specific",
    "start": "250480",
    "end": "252280"
  },
  {
    "text": "reason but you notice that there's no",
    "start": "252280",
    "end": "253959"
  },
  {
    "text": "this isn't a macro there's no like",
    "start": "253959",
    "end": "255560"
  },
  {
    "text": "surrounding context or like it doesn't",
    "start": "255560",
    "end": "257799"
  },
  {
    "text": "need to be in any specific place this is",
    "start": "257799",
    "end": "259919"
  },
  {
    "text": "a plain closure function and this is",
    "start": "259919",
    "end": "261880"
  },
  {
    "text": "really important because these are the",
    "start": "261880",
    "end": "263479"
  },
  {
    "text": "three Primitives that you use to build",
    "start": "263479",
    "end": "264880"
  },
  {
    "text": "Onyx programs you use workflows",
    "start": "264880",
    "end": "267240"
  },
  {
    "text": "cataloges and functions the API is but",
    "start": "267240",
    "end": "270039"
  },
  {
    "text": "this is the trend we're aggressively",
    "start": "270039",
    "end": "271800"
  },
  {
    "text": "using data structures to be able to be",
    "start": "271800",
    "end": "274360"
  },
  {
    "text": "uh significantly more flexible than a",
    "start": "274360",
    "end": "276479"
  },
  {
    "text": "lot of other",
    "start": "276479",
    "end": "278400"
  },
  {
    "text": "platforms and that's kind of it for",
    "start": "278400",
    "end": "280800"
  },
  {
    "text": "using the API we're building on these",
    "start": "280800",
    "end": "282479"
  },
  {
    "text": "Primitives all the time and despite them",
    "start": "282479",
    "end": "284680"
  },
  {
    "text": "being very simple this is incredibly",
    "start": "284680",
    "end": "286800"
  },
  {
    "text": "effective and that's that's actually all",
    "start": "286800",
    "end": "288639"
  },
  {
    "text": "I have to say about the API for now",
    "start": "288639",
    "end": "289800"
  },
  {
    "text": "we're going to learn how to use it more",
    "start": "289800",
    "end": "290759"
  },
  {
    "text": "in depth later um but for right now I",
    "start": "290759",
    "end": "292919"
  },
  {
    "text": "want to talk about how we do messaging",
    "start": "292919",
    "end": "295039"
  },
  {
    "text": "in onyx",
    "start": "295039",
    "end": "298199"
  },
  {
    "text": "so when I talk about messaging I'm",
    "start": "299800",
    "end": "301440"
  },
  {
    "text": "talking about peer-to-peer asynchronous",
    "start": "301440",
    "end": "303560"
  },
  {
    "text": "communication uh this is direct and",
    "start": "303560",
    "end": "305639"
  },
  {
    "text": "we're guaranteeing that messes messages",
    "start": "305639",
    "end": "307479"
  },
  {
    "text": "will eventually be processed by the Onyx",
    "start": "307479",
    "end": "310199"
  },
  {
    "text": "cluster so the way that we went about",
    "start": "310199",
    "end": "312520"
  },
  {
    "text": "this was actually by directly adopting",
    "start": "312520",
    "end": "315479"
  },
  {
    "text": "um the algorithm from Storm if you're",
    "start": "315479",
    "end": "317160"
  },
  {
    "text": "familiar with that so as I know this",
    "start": "317160",
    "end": "319560"
  },
  {
    "text": "algorithm was invented by Nathan Mars a",
    "start": "319560",
    "end": "321639"
  },
  {
    "text": "bunch of years ago and so my hat is off",
    "start": "321639",
    "end": "323319"
  },
  {
    "text": "to him this is all his work I'm just uh",
    "start": "323319",
    "end": "325479"
  },
  {
    "text": "reproducing it and and showing you how",
    "start": "325479",
    "end": "327039"
  },
  {
    "text": "it's done and and the genius in this",
    "start": "327039",
    "end": "329680"
  },
  {
    "text": "algorithm is that for every message",
    "start": "329680",
    "end": "331319"
  },
  {
    "text": "that's floating through your cluster uh",
    "start": "331319",
    "end": "333280"
  },
  {
    "text": "we're only using 20 bytes in memory on",
    "start": "333280",
    "end": "336199"
  },
  {
    "text": "something that we call an acing Damon um",
    "start": "336199",
    "end": "339280"
  },
  {
    "text": "to uh track the state in arbitrarily",
    "start": "339280",
    "end": "342120"
  },
  {
    "text": "long workflows so no matter how long or",
    "start": "342120",
    "end": "344240"
  },
  {
    "text": "dense your workflow is we're only going",
    "start": "344240",
    "end": "345840"
  },
  {
    "text": "to use 20 bytes per message and the",
    "start": "345840",
    "end": "347680"
  },
  {
    "text": "implication is that you can have",
    "start": "347680",
    "end": "348759"
  },
  {
    "text": "hundreds of millions of messages pending",
    "start": "348759",
    "end": "350360"
  },
  {
    "text": "on finishing in your cluster",
    "start": "350360",
    "end": "353440"
  },
  {
    "text": "concurrently so uh that's a little fuzzy",
    "start": "353440",
    "end": "355880"
  },
  {
    "text": "but I'll put it into a better context if",
    "start": "355880",
    "end": "358520"
  },
  {
    "text": "we have a workflow like we had for this",
    "start": "358520",
    "end": "361039"
  },
  {
    "text": "workflow is mapped to a specific",
    "start": "361039",
    "end": "363120"
  },
  {
    "text": "topology if you will peers are the",
    "start": "363120",
    "end": "365360"
  },
  {
    "text": "Agents of execution in Onyx and they",
    "start": "365360",
    "end": "367319"
  },
  {
    "text": "sign up for tasks so as a pier grabs a",
    "start": "367319",
    "end": "370039"
  },
  {
    "text": "task it's receiving sub segments from an",
    "start": "370039",
    "end": "372080"
  },
  {
    "text": "upstream pier and it's directly emitting",
    "start": "372080",
    "end": "374880"
  },
  {
    "text": "transformed or aggregated segments to",
    "start": "374880",
    "end": "376919"
  },
  {
    "text": "Downstream peers this is in broker they",
    "start": "376919",
    "end": "379039"
  },
  {
    "text": "don't go through thirdparty",
    "start": "379039",
    "end": "379919"
  },
  {
    "text": "communication this is actually how we go",
    "start": "379919",
    "end": "381800"
  },
  {
    "text": "fast because it's just point-to-point",
    "start": "381800",
    "end": "384400"
  },
  {
    "text": "communication so what do I mean when I",
    "start": "384400",
    "end": "386160"
  },
  {
    "text": "say like sending a message through a",
    "start": "386160",
    "end": "387479"
  },
  {
    "text": "cluster um we like to think of these",
    "start": "387479",
    "end": "389800"
  },
  {
    "text": "segments is turning themselves into",
    "start": "389800",
    "end": "391720"
  },
  {
    "text": "trees when a message or a segment",
    "start": "391720",
    "end": "394160"
  },
  {
    "text": "initially enters the cluster we call",
    "start": "394160",
    "end": "395880"
  },
  {
    "text": "this the root segment because it's a",
    "start": "395880",
    "end": "397280"
  },
  {
    "text": "little bit special so if a task receives",
    "start": "397280",
    "end": "399720"
  },
  {
    "text": "a segment presumably it's going to emit",
    "start": "399720",
    "end": "401759"
  },
  {
    "text": "zero or more segments so say task T gets",
    "start": "401759",
    "end": "404759"
  },
  {
    "text": "this payload and produces two more",
    "start": "404759",
    "end": "406240"
  },
  {
    "text": "segments",
    "start": "406240",
    "end": "407960"
  },
  {
    "text": "Downstream a downstream tasks can choose",
    "start": "407960",
    "end": "410520"
  },
  {
    "text": "to either um just not emit anything else",
    "start": "410520",
    "end": "413000"
  },
  {
    "text": "and they're done because they're leaves",
    "start": "413000",
    "end": "414479"
  },
  {
    "text": "in the workflow or they can emit more",
    "start": "414479",
    "end": "416919"
  },
  {
    "text": "segments as we see once we we",
    "start": "416919",
    "end": "419759"
  },
  {
    "text": "successfully processed all these",
    "start": "419759",
    "end": "421080"
  },
  {
    "text": "segments and done whatever we need to do",
    "start": "421080",
    "end": "422720"
  },
  {
    "text": "be it talking to a database or writing",
    "start": "422720",
    "end": "424879"
  },
  {
    "text": "to a web stock or whatever we call this",
    "start": "424879",
    "end": "427080"
  },
  {
    "text": "segment tree fully processed and this is",
    "start": "427080",
    "end": "429199"
  },
  {
    "text": "the guarantee in Onyx we're eventually",
    "start": "429199",
    "end": "431080"
  },
  {
    "text": "going to process all the nodes in this",
    "start": "431080",
    "end": "432520"
  },
  {
    "text": "tree and we need to have the",
    "start": "432520",
    "end": "433720"
  },
  {
    "text": "infrastructure behind it to make sure",
    "start": "433720",
    "end": "435120"
  },
  {
    "text": "that we're really going to do",
    "start": "435120",
    "end": "437759"
  },
  {
    "text": "this so how can we guarantee that well",
    "start": "437759",
    "end": "441360"
  },
  {
    "text": "this algorithm is it's actually very",
    "start": "441360",
    "end": "442879"
  },
  {
    "text": "simple but it's a little uh tricky to",
    "start": "442879",
    "end": "444879"
  },
  {
    "text": "explain so I'll try to go slowly the",
    "start": "444879",
    "end": "447520"
  },
  {
    "text": "root segment is assigned a random 64-bit",
    "start": "447520",
    "end": "450199"
  },
  {
    "text": "sequence this is an uncoordinated",
    "start": "450199",
    "end": "452360"
  },
  {
    "text": "assignment we generate it um in",
    "start": "452360",
    "end": "454639"
  },
  {
    "text": "isolation and the chances of later",
    "start": "454639",
    "end": "456720"
  },
  {
    "text": "collisions with different numbers is",
    "start": "456720",
    "end": "457919"
  },
  {
    "text": "very low because this number is so so",
    "start": "457919",
    "end": "459800"
  },
  {
    "text": "dense and dependent on its position in",
    "start": "459800",
    "end": "461479"
  },
  {
    "text": "the tree we take this sequence and we",
    "start": "461479",
    "end": "464599"
  },
  {
    "text": "assign it to the track state this is on",
    "start": "464599",
    "end": "466800"
  },
  {
    "text": "a different machine in memory this is",
    "start": "466800",
    "end": "468319"
  },
  {
    "text": "that 20 by thing I was talking about and",
    "start": "468319",
    "end": "470479"
  },
  {
    "text": "we we directly correlate that to the",
    "start": "470479",
    "end": "472360"
  },
  {
    "text": "state for the first stage the the",
    "start": "472360",
    "end": "474319"
  },
  {
    "text": "brackets is showing the succession of",
    "start": "474319",
    "end": "475720"
  },
  {
    "text": "the state as we go along so when a",
    "start": "475720",
    "end": "478400"
  },
  {
    "text": "segment produces new segments we assign",
    "start": "478400",
    "end": "481000"
  },
  {
    "text": "those new segments their own random",
    "start": "481000",
    "end": "482639"
  },
  {
    "text": "64-bit IDs and we update the state now",
    "start": "482639",
    "end": "486280"
  },
  {
    "text": "it's not obvious why the state is this",
    "start": "486280",
    "end": "488560"
  },
  {
    "text": "particular value now so we have to go",
    "start": "488560",
    "end": "490840"
  },
  {
    "text": "back and and roll back and uh look at it",
    "start": "490840",
    "end": "493319"
  },
  {
    "text": "a little bit more carefully so the first",
    "start": "493319",
    "end": "495759"
  },
  {
    "text": "segment segment one the root segment had",
    "start": "495759",
    "end": "497759"
  },
  {
    "text": "a particular bit sequence which directly",
    "start": "497759",
    "end": "500240"
  },
  {
    "text": "corresponded to the first state the",
    "start": "500240",
    "end": "503199"
  },
  {
    "text": "second state is the result of uh using",
    "start": "503199",
    "end": "506759"
  },
  {
    "text": "the exclusive or operation it takes us",
    "start": "506759",
    "end": "509520"
  },
  {
    "text": "parameters the previous state the",
    "start": "509520",
    "end": "511759"
  },
  {
    "text": "segment that has been acknowledged as",
    "start": "511759",
    "end": "513440"
  },
  {
    "text": "completed which is the root segment in",
    "start": "513440",
    "end": "515080"
  },
  {
    "text": "this case and the bit sequences of all",
    "start": "515080",
    "end": "517640"
  },
  {
    "text": "the new segments that it created if you",
    "start": "517640",
    "end": "519959"
  },
  {
    "text": "exclusive or all four of these things",
    "start": "519959",
    "end": "521719"
  },
  {
    "text": "together you notice that the first two",
    "start": "521719",
    "end": "523760"
  },
  {
    "text": "cancel out because anything exclusive or",
    "start": "523760",
    "end": "525839"
  },
  {
    "text": "itself is zero and this is the",
    "start": "525839",
    "end": "527440"
  },
  {
    "text": "fundamental compacting property that",
    "start": "527440",
    "end": "529160"
  },
  {
    "text": "lets us stay around 20 bytes for the",
    "start": "529160",
    "end": "530880"
  },
  {
    "text": "entire track state so the rule is uh",
    "start": "530880",
    "end": "534080"
  },
  {
    "text": "whenever you finish a segment send the",
    "start": "534080",
    "end": "536000"
  },
  {
    "text": "acknowledged bit sequence plus any new",
    "start": "536000",
    "end": "538360"
  },
  {
    "text": "bit sequences and excl exclusive or all",
    "start": "538360",
    "end": "540120"
  },
  {
    "text": "those together with the previous state",
    "start": "540120",
    "end": "541680"
  },
  {
    "text": "and you'll get some sort of compaction",
    "start": "541680",
    "end": "543120"
  },
  {
    "text": "going on so we'll keep going to to",
    "start": "543120",
    "end": "545600"
  },
  {
    "text": "demonstrate what's eventually going to",
    "start": "545600",
    "end": "546839"
  },
  {
    "text": "happen so uh as these segments complete",
    "start": "546839",
    "end": "549800"
  },
  {
    "text": "and keep in mind that this is",
    "start": "549800",
    "end": "550839"
  },
  {
    "text": "distributed concurrent on different",
    "start": "550839",
    "end": "552120"
  },
  {
    "text": "machines so they're going to be",
    "start": "552120",
    "end": "552880"
  },
  {
    "text": "happening at different times and these",
    "start": "552880",
    "end": "554399"
  },
  {
    "text": "operations are going to commute so it's",
    "start": "554399",
    "end": "555959"
  },
  {
    "text": "okay um this segment happens to not",
    "start": "555959",
    "end": "558320"
  },
  {
    "text": "generate any new segments after we've",
    "start": "558320",
    "end": "560440"
  },
  {
    "text": "completed it so green means we've",
    "start": "560440",
    "end": "562160"
  },
  {
    "text": "acknowledged it we update the track",
    "start": "562160",
    "end": "564240"
  },
  {
    "text": "state to negative 135 etc etc um and we",
    "start": "564240",
    "end": "567320"
  },
  {
    "text": "see that this is a really simple",
    "start": "567320",
    "end": "568440"
  },
  {
    "text": "operation we just take the bit sequence",
    "start": "568440",
    "end": "570680"
  },
  {
    "text": "that was applied to this segment and",
    "start": "570680",
    "end": "572360"
  },
  {
    "text": "then we exclusive or against the",
    "start": "572360",
    "end": "573640"
  },
  {
    "text": "previous state and you'll notice that",
    "start": "573640",
    "end": "575959"
  },
  {
    "text": "this phenomenon now happens that the the",
    "start": "575959",
    "end": "578320"
  },
  {
    "text": "new track state is directly equal to the",
    "start": "578320",
    "end": "581640"
  },
  {
    "text": "um the bit sequence on the leftmost Node",
    "start": "581640",
    "end": "583880"
  },
  {
    "text": "in the tree and that's because the top",
    "start": "583880",
    "end": "585800"
  },
  {
    "text": "node and the rightmost node have had",
    "start": "585800",
    "end": "587720"
  },
  {
    "text": "their bit sequence IDs sent to the aing",
    "start": "587720",
    "end": "590160"
  },
  {
    "text": "Damon exactly twice so they've canceled",
    "start": "590160",
    "end": "592399"
  },
  {
    "text": "out leaving only the unacknowledged bit",
    "start": "592399",
    "end": "595240"
  },
  {
    "text": "sequence left in the aing Damon because",
    "start": "595240",
    "end": "597600"
  },
  {
    "text": "all these values are exclusively or",
    "start": "597600",
    "end": "599360"
  },
  {
    "text": "ially there's no chance of a race",
    "start": "599360",
    "end": "601040"
  },
  {
    "text": "condition happening where it sort of",
    "start": "601040",
    "end": "602640"
  },
  {
    "text": "sees like half a value or something like",
    "start": "602640",
    "end": "606240"
  },
  {
    "text": "that and you probably get the idea but",
    "start": "607720",
    "end": "609839"
  },
  {
    "text": "it's interesting to to plow all the way",
    "start": "609839",
    "end": "611160"
  },
  {
    "text": "to the end it creates two new segments",
    "start": "611160",
    "end": "613839"
  },
  {
    "text": "assign them random 64-bit",
    "start": "613839",
    "end": "615760"
  },
  {
    "text": "IDs uh eventually we're going to we",
    "start": "615760",
    "end": "617959"
  },
  {
    "text": "acknowledge that segment and you see the",
    "start": "617959",
    "end": "619320"
  },
  {
    "text": "direct again the first two arguments to",
    "start": "619320",
    "end": "621600"
  },
  {
    "text": "bit exclusive or are the same so they're",
    "start": "621600",
    "end": "623360"
  },
  {
    "text": "going to cancel out and you're going to",
    "start": "623360",
    "end": "624240"
  },
  {
    "text": "get a new track state and you're going",
    "start": "624240",
    "end": "625640"
  },
  {
    "text": "to use those three uh three expressions",
    "start": "625640",
    "end": "628120"
  },
  {
    "text": "and uh EXO them",
    "start": "628120",
    "end": "631320"
  },
  {
    "text": "together um now let's say that the lower",
    "start": "631440",
    "end": "633720"
  },
  {
    "text": "right one completes you see the",
    "start": "633720",
    "end": "635200"
  },
  {
    "text": "phenomenon again where the one on the",
    "start": "635200",
    "end": "636959"
  },
  {
    "text": "left is actually equal to the track",
    "start": "636959",
    "end": "639000"
  },
  {
    "text": "state because all the other nodes have",
    "start": "639000",
    "end": "640760"
  },
  {
    "text": "had their bit sequences sent to the",
    "start": "640760",
    "end": "642760"
  },
  {
    "text": "acing",
    "start": "642760",
    "end": "643920"
  },
  {
    "text": "Damon finally um that was basically what",
    "start": "643920",
    "end": "646920"
  },
  {
    "text": "I just said finally you're going to get",
    "start": "646920",
    "end": "648240"
  },
  {
    "text": "to the last one and you're going to get",
    "start": "648240",
    "end": "649760"
  },
  {
    "text": "a value of zero and the reason is that",
    "start": "649760",
    "end": "652600"
  },
  {
    "text": "we take the previous state negative 9177",
    "start": "652600",
    "end": "655320"
  },
  {
    "text": "Etc and we exclusive or against the last",
    "start": "655320",
    "end": "657880"
  },
  {
    "text": "segment at this point every segment in",
    "start": "657880",
    "end": "661440"
  },
  {
    "text": "the segment tree has had its value sent",
    "start": "661440",
    "end": "663120"
  },
  {
    "text": "to the acting Damon twice hence",
    "start": "663120",
    "end": "664959"
  },
  {
    "text": "everything has been exclusively ordered",
    "start": "664959",
    "end": "666360"
  },
  {
    "text": "itself twice so we get zero and zero is",
    "start": "666360",
    "end": "668519"
  },
  {
    "text": "the magic value that we're looking for",
    "start": "668519",
    "end": "670360"
  },
  {
    "text": "that's how we we can know for sure that",
    "start": "670360",
    "end": "672600"
  },
  {
    "text": "the whole tree has been",
    "start": "672600",
    "end": "674839"
  },
  {
    "text": "processed and you might ask well what",
    "start": "674839",
    "end": "677040"
  },
  {
    "text": "happens if there's a failure because of",
    "start": "677040",
    "end": "678639"
  },
  {
    "text": "course that's going to",
    "start": "678639",
    "end": "681200"
  },
  {
    "text": "happen um let's say a p disconnects when",
    "start": "681200",
    "end": "683440"
  },
  {
    "text": "it's processing a segment it was able to",
    "start": "683440",
    "end": "685000"
  },
  {
    "text": "receive it but it was not able to emit",
    "start": "685000",
    "end": "686560"
  },
  {
    "text": "it and say that I've completed this",
    "start": "686560",
    "end": "688160"
  },
  {
    "text": "specific segment",
    "start": "688160",
    "end": "689760"
  },
  {
    "text": "what's actually happening is that the",
    "start": "689760",
    "end": "690880"
  },
  {
    "text": "root segment is a little bit special",
    "start": "690880",
    "end": "693240"
  },
  {
    "text": "it's hanging on to that segment and it's",
    "start": "693240",
    "end": "695240"
  },
  {
    "text": "waiting for the acing Damon to send in a",
    "start": "695240",
    "end": "696880"
  },
  {
    "text": "message saying I found your message ID",
    "start": "696880",
    "end": "699800"
  },
  {
    "text": "which is held um consistently throughout",
    "start": "699800",
    "end": "702360"
  },
  {
    "text": "the tree they all share a common",
    "start": "702360",
    "end": "703720"
  },
  {
    "text": "identifier and if it doesn't hear that",
    "start": "703720",
    "end": "705680"
  },
  {
    "text": "within the preconfigured time say 60",
    "start": "705680",
    "end": "707959"
  },
  {
    "text": "seconds it's just going to replay that",
    "start": "707959",
    "end": "709720"
  },
  {
    "text": "segment Tre all the way through and this",
    "start": "709720",
    "end": "711920"
  },
  {
    "text": "is why Onyx is an at least once data",
    "start": "711920",
    "end": "714040"
  },
  {
    "text": "processing system because it heals",
    "start": "714040",
    "end": "715720"
  },
  {
    "text": "Itself by replaying so functions need to",
    "start": "715720",
    "end": "718200"
  },
  {
    "text": "be ID impotent to deal with with",
    "start": "718200",
    "end": "720639"
  },
  {
    "text": "this and then you might ask well what",
    "start": "720639",
    "end": "722760"
  },
  {
    "text": "happens if the root segment dies well",
    "start": "722760",
    "end": "725600"
  },
  {
    "text": "this algorithm presumes a special",
    "start": "725600",
    "end": "727560"
  },
  {
    "text": "property of your input storage in that",
    "start": "727560",
    "end": "729959"
  },
  {
    "text": "uh most cues have some sort of take a",
    "start": "729959",
    "end": "731839"
  },
  {
    "text": "message and then acknowledge it when you",
    "start": "731839",
    "end": "733120"
  },
  {
    "text": "put it back on the Queue or or when you",
    "start": "733120",
    "end": "734959"
  },
  {
    "text": "you are actually finished and you take",
    "start": "734959",
    "end": "736000"
  },
  {
    "text": "it off the queue and if you disconnect",
    "start": "736000",
    "end": "737720"
  },
  {
    "text": "the message goes back on the Queue so",
    "start": "737720",
    "end": "739560"
  },
  {
    "text": "this is what's happening at the root if",
    "start": "739560",
    "end": "741040"
  },
  {
    "text": "you pull off a message and the root node",
    "start": "741040",
    "end": "742560"
  },
  {
    "text": "dies the message just goes back on the",
    "start": "742560",
    "end": "744519"
  },
  {
    "text": "Queue or whatever related storage that",
    "start": "744519",
    "end": "746160"
  },
  {
    "text": "can simulate that and another Pier is",
    "start": "746160",
    "end": "748079"
  },
  {
    "text": "going to pick it up and then replay the",
    "start": "748079",
    "end": "749399"
  },
  {
    "text": "whole tree so you have fault tolerance",
    "start": "749399",
    "end": "751320"
  },
  {
    "text": "at every level in this processing",
    "start": "751320",
    "end": "755000"
  },
  {
    "text": "system okay so that was messaging and",
    "start": "755000",
    "end": "757839"
  },
  {
    "text": "direct communication and I don't want to",
    "start": "757839",
    "end": "759440"
  },
  {
    "text": "conflate that what with what I'm going",
    "start": "759440",
    "end": "760720"
  },
  {
    "text": "to talk about next we're going to talk",
    "start": "760720",
    "end": "763199"
  },
  {
    "text": "about coordination now so in messaging",
    "start": "763199",
    "end": "766560"
  },
  {
    "text": "peers talk specifically to one another",
    "start": "766560",
    "end": "769240"
  },
  {
    "text": "and they only use segments to",
    "start": "769240",
    "end": "771079"
  },
  {
    "text": "communicate the rest of onyx's design is",
    "start": "771079",
    "end": "773480"
  },
  {
    "text": "about",
    "start": "773480",
    "end": "774519"
  },
  {
    "text": "coordination and uh it's a masterless",
    "start": "774519",
    "end": "777000"
  },
  {
    "text": "approach with a log Centric design and",
    "start": "777000",
    "end": "779399"
  },
  {
    "text": "as opposed to using Storm's work here",
    "start": "779399",
    "end": "781519"
  },
  {
    "text": "this is almost entirely my own work of",
    "start": "781519",
    "end": "783160"
  },
  {
    "text": "which I'm I'm very proud because this is",
    "start": "783160",
    "end": "784959"
  },
  {
    "text": "unique and it's gonna leverage",
    "start": "784959",
    "end": "787160"
  },
  {
    "text": "zookeepers Primitives to get its job",
    "start": "787160",
    "end": "789880"
  },
  {
    "text": "done so its architecture from a",
    "start": "789880",
    "end": "792160"
  },
  {
    "text": "different angle looks like this peers do",
    "start": "792160",
    "end": "794360"
  },
  {
    "text": "not talk to one another unless they have",
    "start": "794360",
    "end": "796199"
  },
  {
    "text": "segments to talk to segments to send",
    "start": "796199",
    "end": "798040"
  },
  {
    "text": "over the wire otherwise everything is",
    "start": "798040",
    "end": "800079"
  },
  {
    "text": "going through zookeeper everything and",
    "start": "800079",
    "end": "802360"
  },
  {
    "text": "that's really important so if we look at",
    "start": "802360",
    "end": "804959"
  },
  {
    "text": "this from the perspective of a a",
    "start": "804959",
    "end": "806560"
  },
  {
    "text": "particular Pier um a Pier is going to",
    "start": "806560",
    "end": "809560"
  },
  {
    "text": "boot up and it's going to give itself uh",
    "start": "809560",
    "end": "812240"
  },
  {
    "text": "an empty replica all peers have a",
    "start": "812240",
    "end": "814680"
  },
  {
    "text": "replica which is starts out as an empty",
    "start": "814680",
    "end": "817240"
  },
  {
    "text": "closure",
    "start": "817240",
    "end": "819639"
  },
  {
    "text": "map the log is a sequence of entries",
    "start": "821440",
    "end": "824760"
  },
  {
    "text": "these entries are closure functions to",
    "start": "824760",
    "end": "827000"
  },
  {
    "text": "be applied to the replica which means",
    "start": "827000",
    "end": "828959"
  },
  {
    "text": "that the replica has specific State",
    "start": "828959",
    "end": "830800"
  },
  {
    "text": "succession",
    "start": "830800",
    "end": "831800"
  },
  {
    "text": "semantics so at any given point in time",
    "start": "831800",
    "end": "834320"
  },
  {
    "text": "the replica is immutable as a specific",
    "start": "834320",
    "end": "836600"
  },
  {
    "text": "uh as a specific logical clock value",
    "start": "836600",
    "end": "840279"
  },
  {
    "text": "um and we're continuously starting at",
    "start": "840279",
    "end": "842120"
  },
  {
    "text": "zero and applying these log entries to",
    "start": "842120",
    "end": "843680"
  },
  {
    "text": "the replica one at a time and these",
    "start": "843680",
    "end": "846320"
  },
  {
    "text": "entries these functions that we're",
    "start": "846320",
    "end": "847680"
  },
  {
    "text": "applying are pure deterministic",
    "start": "847680",
    "end": "849440"
  },
  {
    "text": "functions they're going to be the same",
    "start": "849440",
    "end": "851120"
  },
  {
    "text": "as of any particular entry so if",
    "start": "851120",
    "end": "853600"
  },
  {
    "text": "multiple peers read up from Zero Entry",
    "start": "853600",
    "end": "855959"
  },
  {
    "text": "zero to entry four they're all going to",
    "start": "855959",
    "end": "858120"
  },
  {
    "text": "have the same replica and this is a",
    "start": "858120",
    "end": "859920"
  },
  {
    "text": "super critical property for",
    "start": "859920",
    "end": "863240"
  },
  {
    "text": "correctness so the interface uh to the",
    "start": "863880",
    "end": "867079"
  },
  {
    "text": "log and to the replica is actually only",
    "start": "867079",
    "end": "868680"
  },
  {
    "text": "four functions three of which are are",
    "start": "868680",
    "end": "871000"
  },
  {
    "text": "pure so a pure can either uh take a log",
    "start": "871000",
    "end": "874480"
  },
  {
    "text": "entry and apply it to its replica and",
    "start": "874480",
    "end": "876600"
  },
  {
    "text": "give it a new replica it can take the",
    "start": "876600",
    "end": "878880"
  },
  {
    "text": "difference between two replicas to tell",
    "start": "878880",
    "end": "880199"
  },
  {
    "text": "me what happened between two points in",
    "start": "880199",
    "end": "882160"
  },
  {
    "text": "time it can take an entry and append new",
    "start": "882160",
    "end": "885839"
  },
  {
    "text": "entries to the end of the log as a",
    "start": "885839",
    "end": "887600"
  },
  {
    "text": "reaction and the only side affecting",
    "start": "887600",
    "end": "891000"
  },
  {
    "text": "function that it can perform is",
    "start": "891000",
    "end": "892880"
  },
  {
    "text": "literally to perform side effects based",
    "start": "892880",
    "end": "894680"
  },
  {
    "text": "on an entry we've isolated that in a",
    "start": "894680",
    "end": "896680"
  },
  {
    "text": "specific part of this design and this is",
    "start": "896680",
    "end": "899399"
  },
  {
    "text": "um quite powerful to use in",
    "start": "899399",
    "end": "901920"
  },
  {
    "text": "practice so when a peer boots up it",
    "start": "901920",
    "end": "904040"
  },
  {
    "text": "starts reading um it starts at entry",
    "start": "904040",
    "end": "905959"
  },
  {
    "text": "zero and then proceeds entry 1 two 3 and",
    "start": "905959",
    "end": "908079"
  },
  {
    "text": "you see its replica uh its closure map",
    "start": "908079",
    "end": "910959"
  },
  {
    "text": "being updated and the replica serves as",
    "start": "910959",
    "end": "914160"
  },
  {
    "text": "a view of the cluster some structural",
    "start": "914160",
    "end": "916160"
  },
  {
    "text": "information telling you who's doing what",
    "start": "916160",
    "end": "918199"
  },
  {
    "text": "and and um other nons segment Behavior",
    "start": "918199",
    "end": "922040"
  },
  {
    "text": "if you will and all these peers are",
    "start": "922040",
    "end": "924639"
  },
  {
    "text": "doing this at the same time they're",
    "start": "924639",
    "end": "926240"
  },
  {
    "text": "reading it independent timelines this",
    "start": "926240",
    "end": "927839"
  },
  {
    "text": "isn't like peers one two and three all",
    "start": "927839",
    "end": "930199"
  },
  {
    "text": "have to be on Entry one and then entry",
    "start": "930199",
    "end": "931720"
  },
  {
    "text": "two and entry three they're just going",
    "start": "931720",
    "end": "933040"
  },
  {
    "text": "to boot up and zip along at at any given",
    "start": "933040",
    "end": "935160"
  },
  {
    "text": "rate and presumably some of them are",
    "start": "935160",
    "end": "936680"
  },
  {
    "text": "going to lag behind and that's fine but",
    "start": "936680",
    "end": "939199"
  },
  {
    "text": "the trick is that as of you know entry",
    "start": "939199",
    "end": "941480"
  },
  {
    "text": "four if if all three peers happen to be",
    "start": "941480",
    "end": "944240"
  },
  {
    "text": "there they're all going to have the same",
    "start": "944240",
    "end": "945440"
  },
  {
    "text": "value because these are pure",
    "start": "945440",
    "end": "946480"
  },
  {
    "text": "deterministic",
    "start": "946480",
    "end": "948440"
  },
  {
    "text": "functions and as I was saying before",
    "start": "948440",
    "end": "950279"
  },
  {
    "text": "this is just an example if you read an",
    "start": "950279",
    "end": "951959"
  },
  {
    "text": "entry you append entries this is a",
    "start": "951959",
    "end": "954079"
  },
  {
    "text": "reactive thing so what's really an",
    "start": "954079",
    "end": "957240"
  },
  {
    "text": "important part of uh this design is that",
    "start": "957240",
    "end": "961480"
  },
  {
    "text": "peers these agents of execution don't",
    "start": "961480",
    "end": "963839"
  },
  {
    "text": "just decide to do things of their own",
    "start": "963839",
    "end": "965360"
  },
  {
    "text": "accord without informing others they",
    "start": "965360",
    "end": "967319"
  },
  {
    "text": "actually read things that might",
    "start": "967319",
    "end": "969040"
  },
  {
    "text": "influence them to do something and then",
    "start": "969040",
    "end": "970880"
  },
  {
    "text": "append an entry as a proposal to the end",
    "start": "970880",
    "end": "972800"
  },
  {
    "text": "of the log the peer doesn't even do",
    "start": "972800",
    "end": "975279"
  },
  {
    "text": "anything when it proposes it actually",
    "start": "975279",
    "end": "977120"
  },
  {
    "text": "has to play forward to the entries that",
    "start": "977120",
    "end": "978880"
  },
  {
    "text": "it appended before it can make a",
    "start": "978880",
    "end": "980079"
  },
  {
    "text": "decision and the reason that that's",
    "start": "980079",
    "end": "981800"
  },
  {
    "text": "important because is because all peers",
    "start": "981800",
    "end": "983600"
  },
  {
    "text": "will get to that proposed entry and come",
    "start": "983600",
    "end": "985759"
  },
  {
    "text": "to the same decision that that peer",
    "start": "985759",
    "end": "987720"
  },
  {
    "text": "would have made anyway because because",
    "start": "987720",
    "end": "989040"
  },
  {
    "text": "they're sharing pure",
    "start": "989040",
    "end": "990600"
  },
  {
    "text": "functions so it's like everybody knows",
    "start": "990600",
    "end": "992639"
  },
  {
    "text": "what everybody else is",
    "start": "992639",
    "end": "995480"
  },
  {
    "text": "doing um so there's two very interesting",
    "start": "995600",
    "end": "998560"
  },
  {
    "text": "ways to look at how we use the log and",
    "start": "998560",
    "end": "1000560"
  },
  {
    "text": "that's how we add and remove peers to",
    "start": "1000560",
    "end": "1002279"
  },
  {
    "text": "the cluster so if new machines come",
    "start": "1002279",
    "end": "1004040"
  },
  {
    "text": "online or come offline how do we handle",
    "start": "1004040",
    "end": "1005680"
  },
  {
    "text": "that because there's no Central",
    "start": "1005680",
    "end": "1008680"
  },
  {
    "text": "master well what we do is we keep um",
    "start": "1008680",
    "end": "1013319"
  },
  {
    "text": "information in the replica this is a",
    "start": "1013319",
    "end": "1015399"
  },
  {
    "text": "very small part of the replica um as a",
    "start": "1015399",
    "end": "1017920"
  },
  {
    "text": "logical clock value 45 um we call this",
    "start": "1017920",
    "end": "1021120"
  },
  {
    "text": "the",
    "start": "1021120",
    "end": "1021920"
  },
  {
    "text": "pairs and Onyx uses a ring Centric",
    "start": "1021920",
    "end": "1024839"
  },
  {
    "text": "approach to doing uh failure detection",
    "start": "1024839",
    "end": "1027798"
  },
  {
    "text": "so those arrows denote that Pier 1 for",
    "start": "1027799",
    "end": "1030558"
  },
  {
    "text": "example is watching Pier 4 for",
    "start": "1030559",
    "end": "1033480"
  },
  {
    "text": "failure um so if uh it fails it it can",
    "start": "1033480",
    "end": "1037280"
  },
  {
    "text": "sort of do something about it and this",
    "start": "1037280",
    "end": "1038880"
  },
  {
    "text": "is um a onetoone mapping Everyone's",
    "start": "1038880",
    "end": "1040959"
  },
  {
    "text": "Watching only one other person so we",
    "start": "1040959",
    "end": "1042438"
  },
  {
    "text": "always try to maintain the ring so Pier",
    "start": "1042439",
    "end": "1045199"
  },
  {
    "text": "five shows up it's like hey I want to",
    "start": "1045199",
    "end": "1046319"
  },
  {
    "text": "join your cluster cool Pier five starts",
    "start": "1046319",
    "end": "1049120"
  },
  {
    "text": "by writing a log entry to the end and",
    "start": "1049120",
    "end": "1050919"
  },
  {
    "text": "says hey I'm a new guy check me",
    "start": "1050919",
    "end": "1052880"
  },
  {
    "text": "out and um based on a hashing function",
    "start": "1052880",
    "end": "1056880"
  },
  {
    "text": "let's say Pier One is kind of the chosen",
    "start": "1056880",
    "end": "1059200"
  },
  {
    "text": "one to uh react to Pier five with some",
    "start": "1059200",
    "end": "1062559"
  },
  {
    "text": "side effects and actually attach a watch",
    "start": "1062559",
    "end": "1065080"
  },
  {
    "text": "via zookeeper to Pier",
    "start": "1065080",
    "end": "1067240"
  },
  {
    "text": "five uh everyone else knows that Pier",
    "start": "1067240",
    "end": "1070120"
  },
  {
    "text": "one is the one who's supposed to do that",
    "start": "1070120",
    "end": "1071760"
  },
  {
    "text": "based on these peer deterministic",
    "start": "1071760",
    "end": "1073000"
  },
  {
    "text": "functions that are going to Hash the",
    "start": "1073000",
    "end": "1074080"
  },
  {
    "text": "current nodes together and figure out",
    "start": "1074080",
    "end": "1075400"
  },
  {
    "text": "whose turn it is as a reaction to this",
    "start": "1075400",
    "end": "1078360"
  },
  {
    "text": "happening Pier One is going to write",
    "start": "1078360",
    "end": "1079840"
  },
  {
    "text": "another log entry this is a three-phase",
    "start": "1079840",
    "end": "1082600"
  },
  {
    "text": "join this was the prepare phase when",
    "start": "1082600",
    "end": "1085159"
  },
  {
    "text": "Pier One writes a new log entry saying",
    "start": "1085159",
    "end": "1087080"
  },
  {
    "text": "all right I've added the watch to Pier",
    "start": "1087080",
    "end": "1088440"
  },
  {
    "text": "five cool we're ready to go we enter the",
    "start": "1088440",
    "end": "1090440"
  },
  {
    "text": "accept phase Pier five reads this",
    "start": "1090440",
    "end": "1093120"
  },
  {
    "text": "because it's looking for this entry to",
    "start": "1093120",
    "end": "1094520"
  },
  {
    "text": "to uh occur and as a reaction or as a",
    "start": "1094520",
    "end": "1097159"
  },
  {
    "text": "side effect it's going to add a watch to",
    "start": "1097159",
    "end": "1099240"
  },
  {
    "text": "Pier 4 and if you look at the shapes now",
    "start": "1099240",
    "end": "1101679"
  },
  {
    "text": "we have the ring as before but we've",
    "start": "1101679",
    "end": "1103679"
  },
  {
    "text": "also uh created a triangle on the",
    "start": "1103679",
    "end": "1105880"
  },
  {
    "text": "outside and you see what we're about to",
    "start": "1105880",
    "end": "1107600"
  },
  {
    "text": "do because Pier five is now going to",
    "start": "1107600",
    "end": "1108960"
  },
  {
    "text": "write a log entry and say I've been",
    "start": "1108960",
    "end": "1110480"
  },
  {
    "text": "accepted into the cluster and if you",
    "start": "1110480",
    "end": "1112080"
  },
  {
    "text": "look at the replica towards the bottom",
    "start": "1112080",
    "end": "1113440"
  },
  {
    "text": "we have this information logged it's",
    "start": "1113440",
    "end": "1115200"
  },
  {
    "text": "stable on all peers and it's uh local",
    "start": "1115200",
    "end": "1118440"
  },
  {
    "text": "replica um finally Pier One is going to",
    "start": "1118440",
    "end": "1121799"
  },
  {
    "text": "read this log entry and it's going to",
    "start": "1121799",
    "end": "1123240"
  },
  {
    "text": "drop its extraneous link to Pier four",
    "start": "1123240",
    "end": "1125679"
  },
  {
    "text": "creating the full circle again so we've",
    "start": "1125679",
    "end": "1127320"
  },
  {
    "text": "just taken it made a little triangle on",
    "start": "1127320",
    "end": "1128720"
  },
  {
    "text": "the outside and then widened it back up",
    "start": "1128720",
    "end": "1131080"
  },
  {
    "text": "um and so it fires its side effects and",
    "start": "1131080",
    "end": "1132880"
  },
  {
    "text": "at that point all the pairs have",
    "start": "1132880",
    "end": "1134600"
  },
  {
    "text": "rebalanced and you have a completed ring",
    "start": "1134600",
    "end": "1136760"
  },
  {
    "text": "again this is fairly efficient to uh",
    "start": "1136760",
    "end": "1139799"
  },
  {
    "text": "join large numberb of peers together it",
    "start": "1139799",
    "end": "1141919"
  },
  {
    "text": "can you know turn through about a",
    "start": "1141919",
    "end": "1143240"
  },
  {
    "text": "thousand of them in a couple seconds",
    "start": "1143240",
    "end": "1144919"
  },
  {
    "text": "it's quite quick and it can handle the",
    "start": "1144919",
    "end": "1146600"
  },
  {
    "text": "case where any um peer can fail at any",
    "start": "1146600",
    "end": "1150440"
  },
  {
    "text": "given time it will abort and back off",
    "start": "1150440",
    "end": "1152080"
  },
  {
    "text": "and retry especially if you have large",
    "start": "1152080",
    "end": "1154280"
  },
  {
    "text": "numbers of peers trying to join at the",
    "start": "1154280",
    "end": "1155720"
  },
  {
    "text": "same time who can't um you know stably",
    "start": "1155720",
    "end": "1158880"
  },
  {
    "text": "connect and form those sort of triangles",
    "start": "1158880",
    "end": "1160360"
  },
  {
    "text": "that you need so there's no contention",
    "start": "1160360",
    "end": "1162000"
  },
  {
    "text": "because this is strictly ordered",
    "start": "1162000",
    "end": "1165840"
  },
  {
    "text": "now that we've talked about that failure",
    "start": "1168960",
    "end": "1170679"
  },
  {
    "text": "detection is actually very easy because",
    "start": "1170679",
    "end": "1172559"
  },
  {
    "text": "you know in the replica who's watching",
    "start": "1172559",
    "end": "1174400"
  },
  {
    "text": "who if Pier five suddenly kicks the",
    "start": "1174400",
    "end": "1177240"
  },
  {
    "text": "bucket Pier One had a watch on pier five",
    "start": "1177240",
    "end": "1179559"
  },
  {
    "text": "so it knows when it goes down what Pier",
    "start": "1179559",
    "end": "1182400"
  },
  {
    "text": "One Can Do Is Write an entry to the end",
    "start": "1182400",
    "end": "1184559"
  },
  {
    "text": "of log and say ah I see Pier five has",
    "start": "1184559",
    "end": "1186280"
  },
  {
    "text": "gone",
    "start": "1186280",
    "end": "1187159"
  },
  {
    "text": "down because we know who's watching who",
    "start": "1187159",
    "end": "1190159"
  },
  {
    "text": "Pier One can inference who Pier five was",
    "start": "1190159",
    "end": "1192400"
  },
  {
    "text": "watching and it can literally tighten",
    "start": "1192400",
    "end": "1194280"
  },
  {
    "text": "the ring so when that log entry comes",
    "start": "1194280",
    "end": "1196400"
  },
  {
    "text": "down Pier One is going to fire some side",
    "start": "1196400",
    "end": "1198799"
  },
  {
    "text": "effects and then just close the ring",
    "start": "1198799",
    "end": "1200240"
  },
  {
    "text": "over to Pier four and then the the ring",
    "start": "1200240",
    "end": "1202799"
  },
  {
    "text": "is is totally um healed",
    "start": "1202799",
    "end": "1205360"
  },
  {
    "text": "again uh another very perceptive",
    "start": "1205360",
    "end": "1207960"
  },
  {
    "text": "question is what happens if two",
    "start": "1207960",
    "end": "1209600"
  },
  {
    "text": "consecutive nodes in the ring fail this",
    "start": "1209600",
    "end": "1211760"
  },
  {
    "text": "is actually really easy because we run",
    "start": "1211760",
    "end": "1213039"
  },
  {
    "text": "through the same thing again Pier one",
    "start": "1213039",
    "end": "1214799"
  },
  {
    "text": "knows that Pier five was watching Pier",
    "start": "1214799",
    "end": "1216240"
  },
  {
    "text": "four so it writes the log entry and",
    "start": "1216240",
    "end": "1218280"
  },
  {
    "text": "eventually closes over and then it just",
    "start": "1218280",
    "end": "1220360"
  },
  {
    "text": "repeats the cycle again except this time",
    "start": "1220360",
    "end": "1222360"
  },
  {
    "text": "Pier One immediately notices that p 4 is",
    "start": "1222360",
    "end": "1224280"
  },
  {
    "text": "down so it writes a corresponding log",
    "start": "1224280",
    "end": "1226120"
  },
  {
    "text": "entry saying oh P four is down we should",
    "start": "1226120",
    "end": "1228159"
  },
  {
    "text": "do something about it Pier 1 reads this",
    "start": "1228159",
    "end": "1230840"
  },
  {
    "text": "and reacts knowing that Pier 4 is",
    "start": "1230840",
    "end": "1232280"
  },
  {
    "text": "watching Pier 3 and then just tightens",
    "start": "1232280",
    "end": "1233520"
  },
  {
    "text": "the ring again so you can uh have very",
    "start": "1233520",
    "end": "1235919"
  },
  {
    "text": "like catastrophic failures where half",
    "start": "1235919",
    "end": "1237480"
  },
  {
    "text": "exactly half your ring fails and a pier",
    "start": "1237480",
    "end": "1239600"
  },
  {
    "text": "is just going to continually do reads",
    "start": "1239600",
    "end": "1241440"
  },
  {
    "text": "and writs to zookeeper and churn through",
    "start": "1241440",
    "end": "1243360"
  },
  {
    "text": "the bad uh peers and evict them and this",
    "start": "1243360",
    "end": "1245840"
  },
  {
    "text": "is also um pretty quick even if you had",
    "start": "1245840",
    "end": "1248480"
  },
  {
    "text": "a really nasty case of like a specific",
    "start": "1248480",
    "end": "1251000"
  },
  {
    "text": "part of the Ring being chopped",
    "start": "1251000",
    "end": "1252840"
  },
  {
    "text": "off so this log approach is fantastic um",
    "start": "1252840",
    "end": "1256400"
  },
  {
    "text": "I I really like it that we came up with",
    "start": "1256400",
    "end": "1258000"
  },
  {
    "text": "this um and we use generative testing",
    "start": "1258000",
    "end": "1260159"
  },
  {
    "text": "extensively to ensure that this is",
    "start": "1260159",
    "end": "1261799"
  },
  {
    "text": "correct and what we do actually is we",
    "start": "1261799",
    "end": "1263720"
  },
  {
    "text": "seed a number of log entries we",
    "start": "1263720",
    "end": "1265559"
  },
  {
    "text": "pre-create these to simulate scenarios",
    "start": "1265559",
    "end": "1267760"
  },
  {
    "text": "that we're interested in such as peers",
    "start": "1267760",
    "end": "1269480"
  },
  {
    "text": "coming online and then rapidly dying at",
    "start": "1269480",
    "end": "1271080"
  },
  {
    "text": "specific points in time and then we",
    "start": "1271080",
    "end": "1272960"
  },
  {
    "text": "bring up some peers and allow them to",
    "start": "1272960",
    "end": "1274720"
  },
  {
    "text": "react to all these log entries and we",
    "start": "1274720",
    "end": "1277120"
  },
  {
    "text": "wait until no one has any more um",
    "start": "1277120",
    "end": "1279320"
  },
  {
    "text": "entries to append to the log we assume",
    "start": "1279320",
    "end": "1281200"
  },
  {
    "text": "all activity has seized at that",
    "start": "1281200",
    "end": "1282919"
  },
  {
    "text": "point at that point we collect the",
    "start": "1282919",
    "end": "1284880"
  },
  {
    "text": "entire log and then we zip it up and get",
    "start": "1284880",
    "end": "1287760"
  },
  {
    "text": "a final replic",
    "start": "1287760",
    "end": "1289120"
  },
  {
    "text": "and perform property based assertions on",
    "start": "1289120",
    "end": "1291120"
  },
  {
    "text": "that and this is awesome because it",
    "start": "1291120",
    "end": "1293600"
  },
  {
    "text": "actually creates your program like a",
    "start": "1293600",
    "end": "1295039"
  },
  {
    "text": "time machine because you're able to move",
    "start": "1295039",
    "end": "1296799"
  },
  {
    "text": "back and forth between the log entries",
    "start": "1296799",
    "end": "1298559"
  },
  {
    "text": "and look for uh states that are leading",
    "start": "1298559",
    "end": "1300279"
  },
  {
    "text": "you into something like weird um and",
    "start": "1300279",
    "end": "1303080"
  },
  {
    "text": "you'll see how this looks so uh if we",
    "start": "1303080",
    "end": "1305080"
  },
  {
    "text": "were to run a generative test and we",
    "start": "1305080",
    "end": "1306679"
  },
  {
    "text": "collected the log and we had five",
    "start": "1306679",
    "end": "1307919"
  },
  {
    "text": "entries say we'd run through all the",
    "start": "1307919",
    "end": "1309880"
  },
  {
    "text": "entries on a replica and get a final",
    "start": "1309880",
    "end": "1311559"
  },
  {
    "text": "replica and perform our assertions and",
    "start": "1311559",
    "end": "1313919"
  },
  {
    "text": "sometimes that works just fine all our",
    "start": "1313919",
    "end": "1315840"
  },
  {
    "text": "assertions pass and we're happy but",
    "start": "1315840",
    "end": "1318320"
  },
  {
    "text": "sometimes s these assertions fail what",
    "start": "1318320",
    "end": "1321080"
  },
  {
    "text": "we do at this point is that we roll all",
    "start": "1321080",
    "end": "1323200"
  },
  {
    "text": "the way back to the function one with",
    "start": "1323200",
    "end": "1325520"
  },
  {
    "text": "the uh empty",
    "start": "1325520",
    "end": "1326760"
  },
  {
    "text": "replica and then via a reppel I Just",
    "start": "1326760",
    "end": "1329120"
  },
  {
    "text": "Step through each entry and I look at",
    "start": "1329120",
    "end": "1330600"
  },
  {
    "text": "the replica and I look for where things",
    "start": "1330600",
    "end": "1332200"
  },
  {
    "text": "are starting to go bad so usually you go",
    "start": "1332200",
    "end": "1334400"
  },
  {
    "text": "through a few functions that looks okay",
    "start": "1334400",
    "end": "1336600"
  },
  {
    "text": "that transition looked fine ah I found",
    "start": "1336600",
    "end": "1339760"
  },
  {
    "text": "the bad",
    "start": "1339760",
    "end": "1341080"
  },
  {
    "text": "transition now all I have to do is roll",
    "start": "1341080",
    "end": "1343600"
  },
  {
    "text": "back one entry patch The Code test it",
    "start": "1343600",
    "end": "1346720"
  },
  {
    "text": "make a unit test because this is a uh a",
    "start": "1346720",
    "end": "1349240"
  },
  {
    "text": "test of a perer function from a closure",
    "start": "1349240",
    "end": "1351520"
  },
  {
    "text": "map to a closure map get that running",
    "start": "1351520",
    "end": "1354039"
  },
  {
    "text": "make sure that transition passes again",
    "start": "1354039",
    "end": "1355600"
  },
  {
    "text": "and then just plow all the way forwards",
    "start": "1355600",
    "end": "1357240"
  },
  {
    "text": "and then my bug is fixed and I do this",
    "start": "1357240",
    "end": "1359799"
  },
  {
    "text": "hundreds of millions of times on our",
    "start": "1359799",
    "end": "1361360"
  },
  {
    "text": "build and we find things we find really",
    "start": "1361360",
    "end": "1363799"
  },
  {
    "text": "weird things that we would never find",
    "start": "1363799",
    "end": "1365760"
  },
  {
    "text": "without this kind of technique um so log",
    "start": "1365760",
    "end": "1369520"
  },
  {
    "text": "based approaches are really great and",
    "start": "1369520",
    "end": "1370840"
  },
  {
    "text": "you should probably consider them for",
    "start": "1370840",
    "end": "1371880"
  },
  {
    "text": "your designs if there's there's room for",
    "start": "1371880",
    "end": "1373320"
  },
  {
    "text": "this kind of thing I think this is a",
    "start": "1373320",
    "end": "1374720"
  },
  {
    "text": "largely unexplored",
    "start": "1374720",
    "end": "1377200"
  },
  {
    "text": "territory um but you know it keeps",
    "start": "1377200",
    "end": "1379240"
  },
  {
    "text": "getting better because uh our our",
    "start": "1379240",
    "end": "1381120"
  },
  {
    "text": "scheduling algorithms that we use since",
    "start": "1381120",
    "end": "1382880"
  },
  {
    "text": "there's no master peers need to decide",
    "start": "1382880",
    "end": "1384840"
  },
  {
    "text": "what work they're going to do those are",
    "start": "1384840",
    "end": "1386480"
  },
  {
    "text": "pure functions every time a new job",
    "start": "1386480",
    "end": "1388279"
  },
  {
    "text": "shows up or a peer adds or is removed",
    "start": "1388279",
    "end": "1390679"
  },
  {
    "text": "from the cluster um the entire scheduler",
    "start": "1390679",
    "end": "1393880"
  },
  {
    "text": "of uh schedule rather of who is",
    "start": "1393880",
    "end": "1395799"
  },
  {
    "text": "executing what uh is rebalanced um and",
    "start": "1395799",
    "end": "1399360"
  },
  {
    "text": "it's done in such a manner that we can",
    "start": "1399360",
    "end": "1401200"
  },
  {
    "text": "take a static snapshot of the cluster",
    "start": "1401200",
    "end": "1403440"
  },
  {
    "text": "and then uh look at really like strange",
    "start": "1403440",
    "end": "1405880"
  },
  {
    "text": "scenarios of what would happen if there",
    "start": "1405880",
    "end": "1407120"
  },
  {
    "text": "were uh like weird numbers of peers in",
    "start": "1407120",
    "end": "1410000"
  },
  {
    "text": "like very large numbers of jobs how",
    "start": "1410000",
    "end": "1411520"
  },
  {
    "text": "would our schedule",
    "start": "1411520",
    "end": "1414320"
  },
  {
    "text": "react other things we use that are a",
    "start": "1415880",
    "end": "1417720"
  },
  {
    "text": "little bit more advanced U for example",
    "start": "1417720",
    "end": "1420080"
  },
  {
    "text": "is a coordinated garbage collector",
    "start": "1420080",
    "end": "1422080"
  },
  {
    "text": "algorithm called blade and it's actually",
    "start": "1422080",
    "end": "1424240"
  },
  {
    "text": "um a scenario where peers are guessing",
    "start": "1424240",
    "end": "1426960"
  },
  {
    "text": "when they're about to garbage collect",
    "start": "1426960",
    "end": "1428559"
  },
  {
    "text": "and when they are they put a message on",
    "start": "1428559",
    "end": "1430720"
  },
  {
    "text": "the end of a log and use it as a",
    "start": "1430720",
    "end": "1432000"
  },
  {
    "text": "primitive broadcast system and tell",
    "start": "1432000",
    "end": "1433760"
  },
  {
    "text": "people tell other peers to stop sending",
    "start": "1433760",
    "end": "1435799"
  },
  {
    "text": "messages to them while they GC because",
    "start": "1435799",
    "end": "1437760"
  },
  {
    "text": "if a peer GC CES wallet getting messages",
    "start": "1437760",
    "end": "1440279"
  },
  {
    "text": "your latency is going to shoot way up",
    "start": "1440279",
    "end": "1441760"
  },
  {
    "text": "because that might be a pause of like",
    "start": "1441760",
    "end": "1442919"
  },
  {
    "text": "one or two seconds and for some people",
    "start": "1442919",
    "end": "1444600"
  },
  {
    "text": "that's just totally",
    "start": "1444600",
    "end": "1445760"
  },
  {
    "text": "unacceptable after it's GC it can put a",
    "start": "1445760",
    "end": "1447799"
  },
  {
    "text": "message back on the log saying I'm game",
    "start": "1447799",
    "end": "1449640"
  },
  {
    "text": "start sending me messages again it's the",
    "start": "1449640",
    "end": "1451919"
  },
  {
    "text": "same with back pressure we have some",
    "start": "1451919",
    "end": "1453240"
  },
  {
    "text": "really sophisticated uh techniques to",
    "start": "1453240",
    "end": "1454880"
  },
  {
    "text": "deal with this but they're mostly using",
    "start": "1454880",
    "end": "1456679"
  },
  {
    "text": "high water marks and putting messages on",
    "start": "1456679",
    "end": "1458320"
  },
  {
    "text": "the log um when they're they the volume",
    "start": "1458320",
    "end": "1461120"
  },
  {
    "text": "of messages that they're receiving is",
    "start": "1461120",
    "end": "1462880"
  },
  {
    "text": "higher than the amount of messages that",
    "start": "1462880",
    "end": "1464320"
  },
  {
    "text": "they're able to emit so they're able to",
    "start": "1464320",
    "end": "1466120"
  },
  {
    "text": "dynamically adjust by communicating with",
    "start": "1466120",
    "end": "1468399"
  },
  {
    "text": "stream peers telling them to clamp down",
    "start": "1468399",
    "end": "1470120"
  },
  {
    "text": "on the amount of data um that they're",
    "start": "1470120",
    "end": "1472200"
  },
  {
    "text": "emitting towards them and then",
    "start": "1472200",
    "end": "1473240"
  },
  {
    "text": "incrementally increase as they go along",
    "start": "1473240",
    "end": "1475919"
  },
  {
    "text": "and this is a user level thing um there",
    "start": "1475919",
    "end": "1477760"
  },
  {
    "text": "are extensions and apis for integrating",
    "start": "1477760",
    "end": "1480080"
  },
  {
    "text": "with the log and one of the great things",
    "start": "1480080",
    "end": "1481760"
  },
  {
    "text": "that you can do is create Cloud watch",
    "start": "1481760",
    "end": "1483480"
  },
  {
    "text": "alarms based on um information in the",
    "start": "1483480",
    "end": "1486520"
  },
  {
    "text": "replica as you're getting entries so if",
    "start": "1486520",
    "end": "1488840"
  },
  {
    "text": "you have uh too many jobs that aren't",
    "start": "1488840",
    "end": "1490600"
  },
  {
    "text": "being worked on make a cloudwatch alarm",
    "start": "1490600",
    "end": "1492440"
  },
  {
    "text": "and auto scale your Onyx cluster you can",
    "start": "1492440",
    "end": "1494480"
  },
  {
    "text": "do this there's there's an API for this",
    "start": "1494480",
    "end": "1496080"
  },
  {
    "text": "kind of thing um you can really run wild",
    "start": "1496080",
    "end": "1498520"
  },
  {
    "text": "all the possibilities",
    "start": "1498520",
    "end": "1500799"
  },
  {
    "text": "here so a lot of people ask uh what kind",
    "start": "1500799",
    "end": "1503600"
  },
  {
    "text": "of state is Onyx in is is it ready can I",
    "start": "1503600",
    "end": "1505399"
  },
  {
    "text": "use it and uh I think it's it's stable",
    "start": "1505399",
    "end": "1508279"
  },
  {
    "text": "enough to be to be used it has yet to be",
    "start": "1508279",
    "end": "1510360"
  },
  {
    "text": "truly battle tested like with things",
    "start": "1510360",
    "end": "1512520"
  },
  {
    "text": "like storm and Spark um but in my my",
    "start": "1512520",
    "end": "1515440"
  },
  {
    "text": "opinion you should you can probably take",
    "start": "1515440",
    "end": "1517039"
  },
  {
    "text": "this to production just fine um we have",
    "start": "1517039",
    "end": "1519840"
  },
  {
    "text": "uh plugins for talking very well to",
    "start": "1519840",
    "end": "1521480"
  },
  {
    "text": "datomic SQL Kafka our RS3 support is",
    "start": "1521480",
    "end": "1524480"
  },
  {
    "text": "okay um but there's a lot of mediums",
    "start": "1524480",
    "end": "1526520"
  },
  {
    "text": "that you can talk to quite easily uh",
    "start": "1526520",
    "end": "1528679"
  },
  {
    "text": "Onyx emits a vast amount of metrics to",
    "start": "1528679",
    "end": "1530760"
  },
  {
    "text": "its own dashboard and arbitrary streams",
    "start": "1530760",
    "end": "1532600"
  },
  {
    "text": "so you can hook into graphite we have uh",
    "start": "1532600",
    "end": "1535120"
  },
  {
    "text": "an automated Cloud benchmarking Suite",
    "start": "1535120",
    "end": "1537279"
  },
  {
    "text": "that runs in AWS every time we release",
    "start": "1537279",
    "end": "1539200"
  },
  {
    "text": "we take performance very very seriously",
    "start": "1539200",
    "end": "1541080"
  },
  {
    "text": "and we don't want any regressions so we",
    "start": "1541080",
    "end": "1542679"
  },
  {
    "text": "always test things like this and we",
    "start": "1542679",
    "end": "1544720"
  },
  {
    "text": "really do have production grade",
    "start": "1544720",
    "end": "1545960"
  },
  {
    "text": "performance right now uh this was our",
    "start": "1545960",
    "end": "1548320"
  },
  {
    "text": "last Benchmark of Onyx um this is five",
    "start": "1548320",
    "end": "1552120"
  },
  {
    "text": "uh c4x large ec2 instances on AWS uh",
    "start": "1552120",
    "end": "1556039"
  },
  {
    "text": "churning out consistently this at test",
    "start": "1556039",
    "end": "1558520"
  },
  {
    "text": "ran actually for a couple hours half a",
    "start": "1558520",
    "end": "1560600"
  },
  {
    "text": "million messages a second uh totally",
    "start": "1560600",
    "end": "1563120"
  },
  {
    "text": "fine didn't experience any any blips and",
    "start": "1563120",
    "end": "1566000"
  },
  {
    "text": "the next release that we're coming out",
    "start": "1566000",
    "end": "1567159"
  },
  {
    "text": "with in uh the next few weeks pretty",
    "start": "1567159",
    "end": "1569279"
  },
  {
    "text": "much blows us out of the water because",
    "start": "1569279",
    "end": "1570640"
  },
  {
    "text": "we have some new advances so we really",
    "start": "1570640",
    "end": "1572600"
  },
  {
    "text": "are moving up and this is already",
    "start": "1572600",
    "end": "1574360"
  },
  {
    "text": "certainly good enough to be using for",
    "start": "1574360",
    "end": "1575919"
  },
  {
    "text": "for most use",
    "start": "1575919",
    "end": "1577440"
  },
  {
    "text": "cases uh so that's all I have uh if you",
    "start": "1577440",
    "end": "1579679"
  },
  {
    "text": "want to try it uh there's a linin",
    "start": "1579679",
    "end": "1581200"
  },
  {
    "text": "template that will instantly drop you",
    "start": "1581200",
    "end": "1582720"
  },
  {
    "text": "into a really nice environment with like",
    "start": "1582720",
    "end": "1585120"
  },
  {
    "text": "um hot code reloading and baked in",
    "start": "1585120",
    "end": "1587000"
  },
  {
    "text": "idioms and things like this so this will",
    "start": "1587000",
    "end": "1588559"
  },
  {
    "text": "get you off the ground really really",
    "start": "1588559",
    "end": "1589760"
  },
  {
    "text": "fast um you can check it out on GitHub",
    "start": "1589760",
    "end": "1591760"
  },
  {
    "text": "where on as an organization or just just",
    "start": "1591760",
    "end": "1594080"
  },
  {
    "text": "come talk to us in gter uh we really",
    "start": "1594080",
    "end": "1596039"
  },
  {
    "text": "like talking to everyone uh that's all I",
    "start": "1596039",
    "end": "1598480"
  },
  {
    "text": "got",
    "start": "1598480",
    "end": "1600919"
  },
  {
    "text": "thanks any",
    "start": "1605679",
    "end": "1608880"
  },
  {
    "text": "questions we have a a garbage collection",
    "start": "1610960",
    "end": "1613240"
  },
  {
    "text": "API um presumably there won't be you",
    "start": "1613240",
    "end": "1616120"
  },
  {
    "text": "know for a smaller cluster that's",
    "start": "1616120",
    "end": "1617520"
  },
  {
    "text": "running for a few hours you'll have like",
    "start": "1617520",
    "end": "1618679"
  },
  {
    "text": "a few hundred entries so performance of",
    "start": "1618679",
    "end": "1620600"
  },
  {
    "text": "the log isn't even critical but if you",
    "start": "1620600",
    "end": "1622000"
  },
  {
    "text": "run it for weeks and weeks you can just",
    "start": "1622000",
    "end": "1623440"
  },
  {
    "text": "call a GC function and what actually",
    "start": "1623440",
    "end": "1625480"
  },
  {
    "text": "happens is that uh the GC mechanism will",
    "start": "1625480",
    "end": "1627919"
  },
  {
    "text": "go in and delete log entries and then",
    "start": "1627919",
    "end": "1630279"
  },
  {
    "text": "figure out what the replica should be as",
    "start": "1630279",
    "end": "1632080"
  },
  {
    "text": "of that point and then store it in a",
    "start": "1632080",
    "end": "1633399"
  },
  {
    "text": "place so someone can immediately go to",
    "start": "1633399",
    "end": "1635039"
  },
  {
    "text": "the replica and then start moving",
    "start": "1635039",
    "end": "1638120"
  },
  {
    "text": "along else",
    "start": "1638120",
    "end": "1642120"
  },
  {
    "text": "um that's so this is probably one of the",
    "start": "1649279",
    "end": "1651159"
  },
  {
    "text": "reasons that like I I I like going with",
    "start": "1651159",
    "end": "1653360"
  },
  {
    "text": "zookeeper is because that zookeeper is a",
    "start": "1653360",
    "end": "1655919"
  },
  {
    "text": "strongly consistent uh data",
    "start": "1655919",
    "end": "1658679"
  },
  {
    "text": "store um never really thought about it",
    "start": "1658679",
    "end": "1661799"
  },
  {
    "text": "in terms of slip brings usually think",
    "start": "1661799",
    "end": "1663240"
  },
  {
    "text": "about that in terms of like databases um",
    "start": "1663240",
    "end": "1666960"
  },
  {
    "text": "but",
    "start": "1666960",
    "end": "1668159"
  },
  {
    "text": "um sorry I lost my train of",
    "start": "1668159",
    "end": "1672120"
  },
  {
    "text": "thought yeah I'll get back to you on",
    "start": "1672360",
    "end": "1674240"
  },
  {
    "text": "that one sorry any else",
    "start": "1674240",
    "end": "1678600"
  },
  {
    "text": "yeah so one of the things we're on 06",
    "start": "1683039",
    "end": "1684760"
  },
  {
    "text": "right now uh 07 is going to feature a",
    "start": "1684760",
    "end": "1686960"
  },
  {
    "text": "Java",
    "start": "1686960",
    "end": "1688080"
  },
  {
    "text": "interface and um Beyond 07 we're looking",
    "start": "1688080",
    "end": "1691039"
  },
  {
    "text": "at ways to break outside of the jvm and",
    "start": "1691039",
    "end": "1693000"
  },
  {
    "text": "one of the the first things I want to do",
    "start": "1693000",
    "end": "1694720"
  },
  {
    "text": "is is try to look at the story for uh",
    "start": "1694720",
    "end": "1697080"
  },
  {
    "text": "Ruby because there's a lot of hurting",
    "start": "1697080",
    "end": "1698480"
  },
  {
    "text": "rails programmers out there um and you",
    "start": "1698480",
    "end": "1701080"
  },
  {
    "text": "know one of the things we can do is take",
    "start": "1701080",
    "end": "1702240"
  },
  {
    "text": "the same approach as storm like you can",
    "start": "1702240",
    "end": "1703519"
  },
  {
    "text": "use uh standard IO to like ship segments",
    "start": "1703519",
    "end": "1706440"
  },
  {
    "text": "back and forth very fast on the local",
    "start": "1706440",
    "end": "1707799"
  },
  {
    "text": "interface",
    "start": "1707799",
    "end": "1708880"
  },
  {
    "text": "uh I'm not sure exactly what we're going",
    "start": "1708880",
    "end": "1710000"
  },
  {
    "text": "to do yet but it's it'll probably be",
    "start": "1710000",
    "end": "1711320"
  },
  {
    "text": "something like",
    "start": "1711320",
    "end": "1713799"
  },
  {
    "text": "that oh yes it's me and uh I have a",
    "start": "1720279",
    "end": "1723279"
  },
  {
    "text": "partner Lucas Brad street who actually",
    "start": "1723279",
    "end": "1724880"
  },
  {
    "text": "works on this full-time uh and either",
    "start": "1724880",
    "end": "1727679"
  },
  {
    "text": "him or I or both of us are available for",
    "start": "1727679",
    "end": "1731559"
  },
  {
    "text": "Consulting cool thanks everybody",
    "start": "1732720",
    "end": "1737240"
  }
]