[
  {
    "start": "0",
    "end": "37000"
  },
  {
    "text": "thank you very much it's it's great to be here um so I would like to talk a bit about the research we've been doing uh",
    "start": "12599",
    "end": "19640"
  },
  {
    "text": "with my me and my collaborators over the last few years on a style of software",
    "start": "19640",
    "end": "24880"
  },
  {
    "text": "that we call local first software which I'll explain in a moment and also an open",
    "start": "24880",
    "end": "30480"
  },
  {
    "text": "implementation uh a library that allows you to build this type of software called automerge so the background of",
    "start": "30480",
    "end": "36600"
  },
  {
    "text": "this is web apps basically and so you will be familiar with the traditional form of building web apps which is like",
    "start": "36600",
    "end": "44039"
  },
  {
    "start": "37000",
    "end": "421000"
  },
  {
    "text": "if you think the sort of early 2000s era uh the web server would send some HTML",
    "start": "44039",
    "end": "49480"
  },
  {
    "text": "to the client the client being the web browser uh the web browser would render that HTML the user types some stuff into",
    "start": "49480",
    "end": "55480"
  },
  {
    "text": "a form makes an HTML form post HTTP form post back to the the server and the",
    "start": "55480",
    "end": "61000"
  },
  {
    "text": "server sends back some more HTML to render the next page and as you know",
    "start": "61000",
    "end": "66119"
  },
  {
    "text": "very few web apps actually still work this way nowadays nowadays we've decided that actually it's too clunky to reload",
    "start": "66119",
    "end": "72520"
  },
  {
    "text": "the entire page every single time people developed single page uh web apps which means that there's a huge Gob of",
    "start": "72520",
    "end": "78680"
  },
  {
    "text": "JavaScript sitting on the client side and uh actually the UI is typically",
    "start": "78680",
    "end": "83880"
  },
  {
    "text": "being rendered by that JavaScript when the JavaScript wants some data from the server it queries a rest API if you want",
    "start": "83880",
    "end": "89880"
  },
  {
    "text": "want to save some data to the server it posts it to a rest API and uh otherwise",
    "start": "89880",
    "end": "95560"
  },
  {
    "text": "a lot of the interaction just happens in the web browser and now this has enabled a really excellent uh set of real-time",
    "start": "95560",
    "end": "102759"
  },
  {
    "text": "collaborative applications like Google Docs or figma or the web-based versions of Microsoft Office and so on which uh",
    "start": "102759",
    "end": "110759"
  },
  {
    "text": "you know allow you to um have several people editing a document at the same time you can see other users cursors and",
    "start": "110759",
    "end": "117640"
  },
  {
    "text": "as they type something it appears immediately on on other people's screens all of that is super convenient and it's",
    "start": "117640",
    "end": "123039"
  },
  {
    "text": "enabled by this kind of architecture of having a big client side",
    "start": "123039",
    "end": "128080"
  },
  {
    "text": "app however there are also some big problems with this way of building web",
    "start": "128080",
    "end": "133280"
  },
  {
    "text": "apps and one of them is just simply the complexity of it so let's think of all",
    "start": "133280",
    "end": "138760"
  },
  {
    "text": "the layers that are involved in actually building this kind of Rich uh real-time",
    "start": "138760",
    "end": "144360"
  },
  {
    "text": "collaborative piece of software uh on the client side the what the browser is rendering is the content",
    "start": "144360",
    "end": "150959"
  },
  {
    "text": "of the HTML Dom representing the current contents of the page and that Dom is manipulated by some JavaScript so you've",
    "start": "150959",
    "end": "157800"
  },
  {
    "text": "got some JavaScript which maintains its own state of the application and then uses maybe react or something else uh to",
    "start": "157800",
    "end": "165120"
  },
  {
    "text": "render itself into the Dom but then if you want to uh store some data well that",
    "start": "165120",
    "end": "170840"
  },
  {
    "text": "storage has to be on the server and so the JavaScript has got to talk via rest API um in order to uh contact the server",
    "start": "170840",
    "end": "178959"
  },
  {
    "text": "and store the data there so it's got to the JavaScript has got to convert its own State into an HTTP request and it's",
    "start": "178959",
    "end": "184680"
  },
  {
    "text": "got to take the response that receives and turn it back into javascript's application state but now on the server",
    "start": "184680",
    "end": "191959"
  },
  {
    "text": "side well that rest API has to be implemented somehow and most likely you will have some sort of server side",
    "start": "191959",
    "end": "198120"
  },
  {
    "text": "framework uh in which you've got some model objects representing the current state of the application from the",
    "start": "198120",
    "end": "204000"
  },
  {
    "text": "Surfers point of view um these model objects may be written in a different programming language from the front end",
    "start": "204000",
    "end": "209879"
  },
  {
    "text": "might be JavaScript as well but either way it's probably a separate implementation that takes these HTTP",
    "start": "209879",
    "end": "215159"
  },
  {
    "text": "requests incoming through the rest API converts them into some inmemory State and then if you want to save that well",
    "start": "215159",
    "end": "222040"
  },
  {
    "text": "it's somehow got to convert these uh backend side model objects into some",
    "start": "222040",
    "end": "227239"
  },
  {
    "text": "data that can be represented in a database for example using an object relational mapper to store that data into a SQL database and the SQL database",
    "start": "227239",
    "end": "234760"
  },
  {
    "text": "then is some way of essentially giving you a data model on top of some pers persistent storage if you think about it",
    "start": "234760",
    "end": "240720"
  },
  {
    "text": "this is just complete Insanity we've got six different representations of the same information spread across client",
    "start": "240720",
    "end": "248040"
  },
  {
    "text": "and server and huge amounts of code are devoted purely to converting data from one representation into another",
    "start": "248040",
    "end": "254360"
  },
  {
    "text": "representation and are otherwise doing very little of value and if you think",
    "start": "254360",
    "end": "260000"
  },
  {
    "text": "about it this is really not if you were just starting with a clean room architectural implementation today I'm",
    "start": "260000",
    "end": "266280"
  },
  {
    "text": "sure this is not what you would design uh as a sensible sane way of implementing software so that is one",
    "start": "266280",
    "end": "273639"
  },
  {
    "text": "problem let's talk about another problem in the current way how we build web at",
    "start": "273639",
    "end": "279560"
  },
  {
    "text": "um and that is to do with timing and so let's say you've got uh some nice user",
    "start": "279560",
    "end": "285280"
  },
  {
    "text": "interface including a button and when the user presses that button some data should be stored on the server or maybe",
    "start": "285280",
    "end": "291560"
  },
  {
    "text": "some data should be queried and so what happens is you've got some JavaScript code that register an event handler on",
    "start": "291560",
    "end": "297840"
  },
  {
    "text": "that uh on that button and when the user clicks the button that JavaScript code fires and maybe that sends some HTTP",
    "start": "297840",
    "end": "304720"
  },
  {
    "text": "request over the internet and then on the backend server well you know there will be some API that handles that it'll",
    "start": "304720",
    "end": "310400"
  },
  {
    "text": "maybe talk to a database blah blah blah Etc and at some point well the response",
    "start": "310400",
    "end": "315720"
  },
  {
    "text": "will go back to the client but what is the client doing in the meantime well the client is probably showing a spinner",
    "start": "315720",
    "end": "321720"
  },
  {
    "text": "and it's spinning and spinning and spinning and spinning and at some point",
    "start": "321720",
    "end": "327199"
  },
  {
    "text": "then finally the response comes back from the ser and uh it'll fire some JavaScript code",
    "start": "327199",
    "end": "332720"
  },
  {
    "text": "to handle the response and then it updates the user interface to say okay thumbs up everything is fine okay we",
    "start": "332720",
    "end": "338880"
  },
  {
    "text": "stored the data on the server now this is kind of painful because you know you're waiting for this really slow",
    "start": "338880",
    "end": "344840"
  },
  {
    "text": "roundt trip to take place and that spinner is kind of annoying so people came up with this genius idea of let's",
    "start": "344840",
    "end": "351120"
  },
  {
    "text": "actually not show the spinner let's just show okay immediately and that makes the user interface feel so much more live",
    "start": "351120",
    "end": "358039"
  },
  {
    "text": "and interactive and responsive because you click the button and it immediately says okay and we can call this",
    "start": "358039",
    "end": "363120"
  },
  {
    "text": "optimistic UI and this works fine as long as your HTTP request is reliable",
    "start": "363120",
    "end": "369919"
  },
  {
    "text": "the problem is just what happens if uh you know you send this HTTP request and the user is actually on some unreliable",
    "start": "369919",
    "end": "376800"
  },
  {
    "text": "coffee shop Wi-Fi or maybe they're on a train uh going through a tunnel and who",
    "start": "376800",
    "end": "382440"
  },
  {
    "text": "knows maybe the HTP request got through maybe didn't maybe the response got lost we don't really know at some point the",
    "start": "382440",
    "end": "388960"
  },
  {
    "text": "request times out and now the application is in this awkward situation where it's saying well hm we already",
    "start": "388960",
    "end": "395240"
  },
  {
    "text": "said it was okay in the user interface and now we have to kind of tread back and say oh actually sorry it wasn't okay",
    "start": "395240",
    "end": "401280"
  },
  {
    "text": "after all your data didn't get saved we're not quite sure what what state the system is in um somehow wave up our",
    "start": "401280",
    "end": "408319"
  },
  {
    "text": "hands and say there's an error and this is not really great either so this is again not really how you would design",
    "start": "408319",
    "end": "414880"
  },
  {
    "text": "software if you were building it from scratch nowadays",
    "start": "414880",
    "end": "419919"
  },
  {
    "text": "so let's think about a better way of building this type of uh web",
    "start": "419919",
    "end": "424960"
  },
  {
    "start": "421000",
    "end": "1070000"
  },
  {
    "text": "applications and this is really uh the core idea of local first software which is an idea that uh we published my",
    "start": "424960",
    "end": "432199"
  },
  {
    "text": "collaborators and I published in this article you see the URL here on the bottom uh a couple of years ago uh we",
    "start": "432199",
    "end": "438319"
  },
  {
    "text": "tried to articulate this idea that has been going around our heads for for a while and in that article we tried to",
    "start": "438319",
    "end": "445080"
  },
  {
    "text": "nail down the idea I won't go through the whole details of the article you can read it if you like but I will just give",
    "start": "445080",
    "end": "450520"
  },
  {
    "text": "you the the core uh premise of it and that is that in the traditional way of",
    "start": "450520",
    "end": "456360"
  },
  {
    "text": "building web apps really the server's data storage is all that matters the client doesn't it's",
    "start": "456360",
    "end": "463520"
  },
  {
    "text": "assumed not really to have any data storage at all the client is just a web browser it's essentially stateless and",
    "start": "463520",
    "end": "470360"
  },
  {
    "text": "uh that means if you want to store some data if it hasn't been stored on the server effectively it didn't happen uh",
    "start": "470360",
    "end": "476159"
  },
  {
    "text": "so the server is the primary storage for all data and client is at best a cache",
    "start": "476159",
    "end": "481639"
  },
  {
    "text": "and this is the traditional web app model and what we're saying in local first software is let's try to invert",
    "start": "481639",
    "end": "487800"
  },
  {
    "text": "that model and say actually no we can have persistent storage on the client why not you know the client it even if",
    "start": "487800",
    "end": "494720"
  },
  {
    "text": "it's a mobile phone or if it's a web browser there is now persistent storage in those things and uh the primary data",
    "start": "494720",
    "end": "501599"
  },
  {
    "text": "storage is now going to be our client side storage and then a server still exists but it's really just a backup",
    "start": "501599",
    "end": "508120"
  },
  {
    "text": "mechanism so that if you use your client the server storage is still there and it's a data synchronization mechanism so",
    "start": "508120",
    "end": "514000"
  },
  {
    "text": "that if you want to access the data from multiple devices well the server is a convenient way for getting the data from",
    "start": "514000",
    "end": "519919"
  },
  {
    "text": "one device to another but what matters is the client storage and the server storage is",
    "start": "519919",
    "end": "525320"
  },
  {
    "text": "secondary and so this is you know it might just seem like a trivial change in perspective but it turns out that if you",
    "start": "525320",
    "end": "532040"
  },
  {
    "text": "adopt this change in perspective it really fundamentally changes the relationship between the client and the",
    "start": "532040",
    "end": "537680"
  },
  {
    "text": "server and therefore fundamentally changes the type of software architecture that we can build so going",
    "start": "537680",
    "end": "543399"
  },
  {
    "text": "back to this example where the user clicks a button in a local first model uh in the first instance the data would",
    "start": "543399",
    "end": "550000"
  },
  {
    "text": "only be stored locally on the user's own device and that is going to be fast and it's not going to fail because there's",
    "start": "550000",
    "end": "556000"
  },
  {
    "text": "no network between the user and their storage so the user can just store some data in the local device and the event",
    "start": "556000",
    "end": "562839"
  },
  {
    "text": "handler as soon as it's stored it locally can update the user interface saying yes it's okay and this will be",
    "start": "562839",
    "end": "568040"
  },
  {
    "text": "true it really has been stored and then in the background there is a data synchronization process which will take",
    "start": "568040",
    "end": "574399"
  },
  {
    "text": "any data that has been written to local storage and it syncs it to a server and if any data is changed on the server",
    "start": "574399",
    "end": "580839"
  },
  {
    "text": "maybe because another user updated it that sync protocol will also bring it to the client and also render the user",
    "start": "580839",
    "end": "586959"
  },
  {
    "text": "interface in order to reflect those changes that have happened the key thing is that this synchronization protocol is",
    "start": "586959",
    "end": "592519"
  },
  {
    "text": "now a background process and the user interface doesn't need to wait for it now moreover in terms of this pile of",
    "start": "592519",
    "end": "599839"
  },
  {
    "text": "complexity that we have with current web app development let me point out that in this model here there are some parts of",
    "start": "599839",
    "end": "606920"
  },
  {
    "text": "the system that you would Implement yourself and some which are just off the-shelf software so the HTML Dom in",
    "start": "606920",
    "end": "612160"
  },
  {
    "text": "the web browser that's just off the shelf software you don't you don't write your own web browser typically and",
    "start": "612160",
    "end": "617320"
  },
  {
    "text": "likewise the database and its persistent storage that's typically ofto shell software you just use postes or MySQL or",
    "start": "617320",
    "end": "623440"
  },
  {
    "text": "whatever you like as your database um You probably won't Implement your own database but all of the in between are",
    "start": "623440",
    "end": "630000"
  },
  {
    "text": "stuff that you would Implement yourself so like your JavaScript application State your server side model objects",
    "start": "630000",
    "end": "635519"
  },
  {
    "text": "your conversion to and from the uh rest API data model those were things you would have to implement yourself with",
    "start": "635519",
    "end": "642639"
  },
  {
    "text": "the local first model one of the things that's really exciting there is that we can just massively reduce the number of",
    "start": "642639",
    "end": "648839"
  },
  {
    "text": "layers that you have to write yourself because this data synchronization and",
    "start": "648839",
    "end": "654440"
  },
  {
    "text": "storage layer that I talked about so writing some data to local storage under client and then syncing it with the",
    "start": "654440",
    "end": "660519"
  },
  {
    "text": "server in the background all of that storage and synchronization is generic uh code which you can just use an",
    "start": "660519",
    "end": "666720"
  },
  {
    "text": "existing open source implementation and you don't have to implement that stuff yourself so the only parts that you",
    "start": "666720",
    "end": "671959"
  },
  {
    "text": "would have to implement yourself is now actually this uh client side application state that talks to the uh talks to the",
    "start": "671959",
    "end": "680760"
  },
  {
    "text": "rendering talks to the HTML Dom for rendering purposes of the UI and it talks to this uh open source framework",
    "start": "680760",
    "end": "688360"
  },
  {
    "text": "for storage synchronization and that is it you don't have to write your own backend and this",
    "start": "688360",
    "end": "693959"
  },
  {
    "text": "is really crucial because if you don't have to write your own back end that means you don't have to operate your own",
    "start": "693959",
    "end": "699399"
  },
  {
    "text": "B back end you don't need a 247 team of people who carry pages and are willing to be woken up at 3 in the morning",
    "start": "699399",
    "end": "705200"
  },
  {
    "text": "because your backend has gone down because the backend still exists but you can Outsource it to some company that",
    "start": "705200",
    "end": "710480"
  },
  {
    "text": "enjoys running backends and so this is at least the the theory this is the vision for the future at the moment this",
    "start": "710480",
    "end": "716959"
  },
  {
    "text": "is not yet really fully realized because it's still only just coming out of research but what I want is in for the",
    "start": "716959",
    "end": "722880"
  },
  {
    "text": "coming years for local first software to be commoditized in such a way that essentially you can focus just on",
    "start": "722880",
    "end": "729279"
  },
  {
    "text": "writing the client side logic and then the uh the sying service uh is just an",
    "start": "729279",
    "end": "735560"
  },
  {
    "text": "offto shelf service that you can just subscribe to something for Chief and somebody else will run that for",
    "start": "735560",
    "end": "741000"
  },
  {
    "text": "you so comparing the traditional model of cloud software to this uh vision of",
    "start": "741000",
    "end": "747360"
  },
  {
    "text": "local first software that I've articulated there are a couple of key differences that come to mind uh one is",
    "start": "747360",
    "end": "753839"
  },
  {
    "text": "in terms of real-time collaboration so if you want Google Docs style as one user types something the other user",
    "start": "753839",
    "end": "760360"
  },
  {
    "text": "immediately sees it you can Implement that with Cloud Ser cloud services and your uh your own rest apis and so on but",
    "start": "760360",
    "end": "767440"
  },
  {
    "text": "it's quite hard work uh you know there's a lot of specialist libraries you need to use a lot of the web Frameworks don't",
    "start": "767440",
    "end": "773440"
  },
  {
    "text": "really have good support for this type of uh data exchange you know the web",
    "start": "773440",
    "end": "778560"
  },
  {
    "text": "frame work will say here's a websocket have fun with the websocket figure out how to use it yourself you have to do a",
    "start": "778560",
    "end": "784240"
  },
  {
    "text": "huge amount of lifting yourself in order to actually get something approximating real-time collaboration whereas in local",
    "start": "784240",
    "end": "790440"
  },
  {
    "text": "first software the data synchronization process that can be real time and the process for updating the user interface",
    "start": "790440",
    "end": "797800"
  },
  {
    "text": "based on changes happening that needs to be there anyway and so it's actually much easier to implement this time type",
    "start": "797800",
    "end": "803720"
  },
  {
    "text": "of real-time collaboration in the local first model another big difference is offline support you know if you're",
    "start": "803720",
    "end": "810360"
  },
  {
    "text": "relying on a server as your primary data storage and you can't reach the server because you're on a train going through",
    "start": "810360",
    "end": "815680"
  },
  {
    "text": "a tunnel then well your software just does not work offline the user can't continue working while they are",
    "start": "815680",
    "end": "821560"
  },
  {
    "text": "disconnected from the internet whereas if your data storage is local on the user's own device yes the user can",
    "start": "821560",
    "end": "827320"
  },
  {
    "text": "continue working and when they come back online well the data sync protocol will just pick up and sync all the work that",
    "start": "827320",
    "end": "833040"
  },
  {
    "text": "the user has done in the metime while they were offline and so local first software makes it just so much easier to",
    "start": "833040",
    "end": "838160"
  },
  {
    "text": "make software that works offline next problem with Cloud software is from the user's point of view if the",
    "start": "838160",
    "end": "844600"
  },
  {
    "text": "user invests years of their life in using your app to write some document or",
    "start": "844600",
    "end": "850199"
  },
  {
    "text": "whatever the work they are doing and then the cloud service shuts down because it's a an early stage startup",
    "start": "850199",
    "end": "856720"
  },
  {
    "text": "that runs out of money or because Google decides that you have violated the terms of service and they're going to lock you",
    "start": "856720",
    "end": "862519"
  },
  {
    "text": "out of your account you lose all of the data because you don't have a copy of the data on your own device all of your",
    "start": "862519",
    "end": "868360"
  },
  {
    "text": "data storage is on the cloud if you lose access to that cloud account all of your data is gone and that is really terrible",
    "start": "868360",
    "end": "873759"
  },
  {
    "text": "from a user's point of view at least with local first software there's some software running on your own device and",
    "start": "873759",
    "end": "879720"
  },
  {
    "text": "data storage is on your own device so even if you get locked out of any cloud service that is being used you still got",
    "start": "879720",
    "end": "886480"
  },
  {
    "text": "at least a copy of the data there locally and you can continue using that and then finally what I said",
    "start": "886480",
    "end": "893279"
  },
  {
    "text": "earlier with this Cloud software you have to run your own backend because the back end runs your own application code",
    "start": "893279",
    "end": "900079"
  },
  {
    "text": "and that means you have all of the overheads of having a backend team and having people on call and so on and it's",
    "start": "900079",
    "end": "905639"
  },
  {
    "text": "just really expensive whereas with local first software the syncing service is just a generic piece of infrastructure",
    "start": "905639",
    "end": "912000"
  },
  {
    "text": "just like a database that you wouldn't write that yourself you would just uh use an off-the-shelf piece of",
    "start": "912000",
    "end": "918199"
  },
  {
    "text": "software now I want to be realistic here and I don't want to say that local first software is amazing and it's great for",
    "start": "918199",
    "end": "923279"
  },
  {
    "text": "everything I think there are certain applications certain types of software for which it's a good fit and others for",
    "start": "923279",
    "end": "929120"
  },
  {
    "text": "which it's not a good fit and so I want to just be totally clear and open on where I think those strengths and",
    "start": "929120",
    "end": "935120"
  },
  {
    "text": "weaknesses lie where I feel local first software is a good fit is things that I",
    "start": "935120",
    "end": "941040"
  },
  {
    "text": "think of as file editing so in a like traditional desktop software point of view it would be the type of uh software",
    "start": "941040",
    "end": "947519"
  },
  {
    "text": "where you open it up in a piece of software you open up some file on your file system you edit it you save it",
    "start": "947519",
    "end": "952959"
  },
  {
    "text": "again afterwards and that applies to a fairly large class of software you know it's it's text editors and web process",
    "start": "952959",
    "end": "958560"
  },
  {
    "text": "processes but it's also spreadsheets and slides for presentations it's vector graphics and bit map Graphics it's video",
    "start": "958560",
    "end": "965639"
  },
  {
    "text": "editing it's music editing it's CAD software for engineering so like building electric circuits and so on all",
    "start": "965639",
    "end": "972560"
  },
  {
    "text": "of those types of software fit really well with a local first model where it's just the user has some data that the",
    "start": "972560",
    "end": "979519"
  },
  {
    "text": "user themselves created and the user wants to edit that data in whatever way they want another type of software where",
    "start": "979519",
    "end": "986040"
  },
  {
    "text": "local first works well is broadly speaking productivity software and what I mean with that is sort of note taking",
    "start": "986040",
    "end": "993360"
  },
  {
    "text": "to- do to-do apps issue trackers uh and those types of software where it's you",
    "start": "993360",
    "end": "999160"
  },
  {
    "text": "know a team collaborating on something but again it's essentially user created data that the user wants to be able to",
    "start": "999160",
    "end": "1005920"
  },
  {
    "text": "update in whatever way they like the places where local first does not fit well is primarily where where there's",
    "start": "1005920",
    "end": "1013560"
  },
  {
    "text": "some sort of real world resource involved and so for example if it's a bank account uh well the bank maintains",
    "start": "1013560",
    "end": "1020480"
  },
  {
    "text": "the authoritative state of that bank account and if the user edits the state of their bank account to add an extra",
    "start": "1020480",
    "end": "1026319"
  },
  {
    "text": "zero to their account balance the bank is not going to be interested in that because the your bank account is not a",
    "start": "1026319",
    "end": "1031600"
  },
  {
    "text": "collaboratively editable document right uh the the users's in edits to this data are of no interest to the bank because",
    "start": "1031600",
    "end": "1038038"
  },
  {
    "text": "it doesn't change how much money you actually have in your account likewise if it's like physical inventory what the",
    "start": "1038039",
    "end": "1044480"
  },
  {
    "text": "objects on a shelf are not going to be affected by some edit that a user makes to some file and so for these types of",
    "start": "1044480",
    "end": "1050760"
  },
  {
    "text": "software there's naturally an authority that maintains the primary copy of the data and for that it's best to just use",
    "start": "1050760",
    "end": "1057000"
  },
  {
    "text": "a traditional cloud service keep things as they are local first is not a good fit for this type of software so local",
    "start": "1057000",
    "end": "1062679"
  },
  {
    "text": "first is basically good for the types of software where the user can edit the data in whatever way they",
    "start": "1062679",
    "end": "1068679"
  },
  {
    "text": "like okay let's talk make this practical so far it's all being kind of high futing ideas so let's talk about a real",
    "start": "1068679",
    "end": "1075960"
  },
  {
    "start": "1070000",
    "end": "1546000"
  },
  {
    "text": "implementation that you can use uh in order to actually build local first software if you want to experiment with",
    "start": "1075960",
    "end": "1081840"
  },
  {
    "text": "this and so in particular I want to talk about this Library called automerge uh",
    "start": "1081840",
    "end": "1086880"
  },
  {
    "text": "which uh I and my colleagues have been working on for several years and what it does is it provides",
    "start": "1086880",
    "end": "1093640"
  },
  {
    "text": "you essentially ajacent like data model you can think of it a bit like a a client side database uh an inmemory",
    "start": "1093640",
    "end": "1100400"
  },
  {
    "text": "database that allows the client to maintain the state of some application",
    "start": "1100400",
    "end": "1105960"
  },
  {
    "text": "and to update that state and any updates that you make are synced to any other users who also have a copy of that data",
    "start": "1105960",
    "end": "1113000"
  },
  {
    "text": "and so let's take as an example a to-do list and imagine this is a to-do list that is synced between you and your",
    "start": "1113000",
    "end": "1118280"
  },
  {
    "text": "colleagues or between you and your partner or so across multiple devices and so you could represent a",
    "start": "1118280",
    "end": "1124280"
  },
  {
    "text": "to-do list for example as this kind of Json document here so I've got two items on this to-do list buy milk and Water to",
    "start": "1124280",
    "end": "1130919"
  },
  {
    "text": "plants and for each item there is a flag called done which indicates whether",
    "start": "1130919",
    "end": "1135960"
  },
  {
    "text": "you've checked the box or not on whether it has been done or not okay super minimalist but it'll get the idea across",
    "start": "1135960",
    "end": "1142559"
  },
  {
    "text": "and the way you can update this um this to-do list now is using this JavaScript",
    "start": "1142559",
    "end": "1149120"
  },
  {
    "text": "API there are also apis in other languages but I'll just show the JavaScript uh version and the idea is you have this um",
    "start": "1149120",
    "end": "1158000"
  },
  {
    "text": "you let's say you want to update the value of one of these done fields to true because the user has pressed the",
    "start": "1158000",
    "end": "1164760"
  },
  {
    "text": "checkbox and now you want to reflect that state in this updated Json document",
    "start": "1164760",
    "end": "1170320"
  },
  {
    "text": "and so let's say that watering the plant has been done and so this done field wants to be updated from false to true",
    "start": "1170320",
    "end": "1176720"
  },
  {
    "text": "and the way you would do that is in the JavaScript down here you have this doc. todos square brackets one DOD equals",
    "start": "1176720",
    "end": "1184120"
  },
  {
    "text": "true uh just very straightforward mutable API uh for modifying the text uh",
    "start": "1184120",
    "end": "1189200"
  },
  {
    "text": "modifying this Jason document this uh automerge API though works with this",
    "start": "1189200",
    "end": "1194559"
  },
  {
    "text": "function called autom merge. change and the idea is that you pass in the current state of the Json document and you get",
    "start": "1194559",
    "end": "1200520"
  },
  {
    "text": "back a new state and so it's actually immutable even though it's using this mutable API internally um what What's",
    "start": "1200520",
    "end": "1206960"
  },
  {
    "text": "Happening Here is this is actually an JavaScript proxy object that intercepts any mutations that are made and Records",
    "start": "1206960",
    "end": "1212760"
  },
  {
    "text": "exactly what was changed so that it can propagate those changes to any other users who also have a copy of this to-do",
    "start": "1212760",
    "end": "1219679"
  },
  {
    "text": "list and so that it can then merge any changes from different users together so",
    "start": "1219679",
    "end": "1224880"
  },
  {
    "text": "you pass in the current state you get back a new state when you call merge. change you can also attach optionally if",
    "start": "1224880",
    "end": "1231039"
  },
  {
    "text": "you want a human readable message to this you can think of this very much as like a commit message in a git",
    "start": "1231039",
    "end": "1236760"
  },
  {
    "text": "repository so you make some change and then you add a descriptive change a descriptive message uh describing what",
    "start": "1236760",
    "end": "1243400"
  },
  {
    "text": "has changed that message has no effect on the actual behavior of the library that's only if you then later want to go back and inspect what has changed uh",
    "start": "1243400",
    "end": "1250880"
  },
  {
    "text": "over time you can look at the edit history and those messages those human readable messages might be useful to you",
    "start": "1250880",
    "end": "1256360"
  },
  {
    "text": "then and then uh inside this callback as I said you have this uh mutation API",
    "start": "1256360",
    "end": "1262200"
  },
  {
    "text": "that you can use to describe in what way you want this Json object to change so this is one way how you might update the",
    "start": "1262200",
    "end": "1268679"
  },
  {
    "text": "document by setting the done field to True another thing that you might do to the same document is to add a new item",
    "start": "1268679",
    "end": "1274960"
  },
  {
    "text": "to the to the to-do list and in this say case let's say here I need to do the laundry and so I'm going to do doc. too.",
    "start": "1274960",
    "end": "1282600"
  },
  {
    "text": "push uh this JavaScript object here and uh this is going to add a new item to",
    "start": "1282600",
    "end": "1288960"
  },
  {
    "text": "this to-dos array so to-do do push is just the JavaScript API for appending an",
    "start": "1288960",
    "end": "1294320"
  },
  {
    "text": "item to the end of an array and that causes this new item to be added here so",
    "start": "1294320",
    "end": "1299440"
  },
  {
    "text": "hopefully this is all pretty straightforward um it's just you know as as you would expect uh Json object",
    "start": "1299440",
    "end": "1306159"
  },
  {
    "text": "manipulations to behave now what makes autom interesting is that these uh these",
    "start": "1306159",
    "end": "1312640"
  },
  {
    "text": "objects are stored locally on your own device but there's also this sync protocol that syncs any changes with",
    "start": "1312640",
    "end": "1318039"
  },
  {
    "text": "with a server and with other users and so this means now you might have multiple users which start off with the",
    "start": "1318039",
    "end": "1323919"
  },
  {
    "text": "same document and user a updates the document to set water watering the plant",
    "start": "1323919",
    "end": "1329880"
  },
  {
    "text": "to be done and independently on a different device a different user B",
    "start": "1329880",
    "end": "1335919"
  },
  {
    "text": "updates the to-do list to add du laundry to this and so now you've got this kind",
    "start": "1335919",
    "end": "1341120"
  },
  {
    "text": "of Divergence you can think of it in git terms like commits happening on two separate branches and these branch then",
    "start": "1341120",
    "end": "1348400"
  },
  {
    "text": "need to be merged back together again and so in git well this kind of merge if",
    "start": "1348400",
    "end": "1353880"
  },
  {
    "text": "you've got these merges happening close together this would probably be a manual merge conflict that you would have to resolve but with auto merge what we",
    "start": "1353880",
    "end": "1361200"
  },
  {
    "text": "wanted is that in as many cases as possible there's no manual conflict resolution but rather it should merge",
    "start": "1361200",
    "end": "1368400"
  },
  {
    "text": "these things automatically hence the name automerge and so what Auto merge does is when you when these two users",
    "start": "1368400",
    "end": "1374640"
  },
  {
    "text": "run the sync protocol and they exchange their modific apption to this uh well we",
    "start": "1374640",
    "end": "1380240"
  },
  {
    "text": "merge it together in the way you would probably expect which is the watering plants is still done and the item to do",
    "start": "1380240",
    "end": "1386919"
  },
  {
    "text": "the laundry has been added to the list and these things can be merged cleanly because you know they're updating",
    "start": "1386919",
    "end": "1392240"
  },
  {
    "text": "different objects and so there's no problem in merging these really and uh and in general any type of",
    "start": "1392240",
    "end": "1402080"
  },
  {
    "text": "uh updates that the users might make concurrently can always be merged by uh Auto merge automatically there's only",
    "start": "1402080",
    "end": "1408320"
  },
  {
    "text": "one case that can't really be handled and that is if multiple users independently update the same key within",
    "start": "1408320",
    "end": "1415039"
  },
  {
    "text": "the same object and in that case you know automerge doesn't know which of",
    "start": "1415039",
    "end": "1420480"
  },
  {
    "text": "those values it should choose it chooses one of them arbitrarily to be the default value but it keeps all of the",
    "start": "1420480",
    "end": "1426640"
  },
  {
    "text": "different values that the users have set and so then if you want a conflict resolution user interface that allows",
    "start": "1426640",
    "end": "1432559"
  },
  {
    "text": "the user to choose which of these values they actually wanted you can have that but if it's not that important so for",
    "start": "1432559",
    "end": "1438200"
  },
  {
    "text": "example if it's say um a graphics application where a box could have this XY coordinate or that XY coordinate",
    "start": "1438200",
    "end": "1445960"
  },
  {
    "text": "different users might drag the same box to different positions but maybe you know which exact position it's in",
    "start": "1445960",
    "end": "1452039"
  },
  {
    "text": "doesn't matter too much as long as all users end up with the same state and in that case you might just choose to pick",
    "start": "1452039",
    "end": "1457799"
  },
  {
    "text": "one of the XY positions arbitrarily but uh in general it is possible also to do",
    "start": "1457799",
    "end": "1463799"
  },
  {
    "text": "this manual conflict resolution If U multiple users update the same value in the same object but that's really the",
    "start": "1463799",
    "end": "1470200"
  },
  {
    "text": "only case that needs to be handled automatically and everything else which is like inserting and deleting items from lists um updating uh keys in a map",
    "start": "1470200",
    "end": "1479600"
  },
  {
    "text": "or um also deleting keys and we're increasingly adding other types of operations as well they can be merged",
    "start": "1479600",
    "end": "1487000"
  },
  {
    "text": "automatically another type of uh edit that auto merge can merge automatically",
    "start": "1487000",
    "end": "1492960"
  },
  {
    "text": "is text editing and so this is coming back to the Google Docs style example again um you can imagine users having a",
    "start": "1492960",
    "end": "1500039"
  },
  {
    "text": "text both users start off with the same text Hello exclamation mark and the red user at the top edits the text by",
    "start": "1500039",
    "end": "1506520"
  },
  {
    "text": "inserting the word world before the exclamation mark and concurrently on a",
    "start": "1506520",
    "end": "1511720"
  },
  {
    "text": "different branch the blue user the bottom inserts a smiley face after the exclamation mark and again these edits",
    "start": "1511720",
    "end": "1518399"
  },
  {
    "text": "might happen offline but when the users come back online they run the sync protocol they exchange their edits and",
    "start": "1518399",
    "end": "1524039"
  },
  {
    "text": "we want everyone to end up in the same state and we want no edits to be lost in this process and again automerge will",
    "start": "1524039",
    "end": "1530120"
  },
  {
    "text": "handle this automatically in the way you would hopefully expect so that is we have the word world before the",
    "start": "1530120",
    "end": "1536360"
  },
  {
    "text": "exclamation mark and the smiley face after the exclamation mark which seems like the most sensible way of merging",
    "start": "1536360",
    "end": "1542320"
  },
  {
    "text": "these edits together and so that's really the general idea of what what Auto merge can do the way this is done",
    "start": "1542320",
    "end": "1549039"
  },
  {
    "start": "1546000",
    "end": "1912000"
  },
  {
    "text": "is uh in research we call this a conflict free replicated data type or crdt for short and this is essentially a",
    "start": "1549039",
    "end": "1556320"
  },
  {
    "text": "family of data structures that allow these kind of concurrent updates by different users and which provide",
    "start": "1556320",
    "end": "1562080"
  },
  {
    "text": "built-in algorithms for merging them back together again and the properties that this merge provides us is that well",
    "start": "1562080",
    "end": "1569440"
  },
  {
    "text": "if multiple edits happen we try to preserve all of those edits as much as possible we try to not throw away any",
    "start": "1569440",
    "end": "1575159"
  },
  {
    "text": "user input um but if two different users have seen the same edits then they must",
    "start": "1575159",
    "end": "1580360"
  },
  {
    "text": "be in the same state even if they actually saw the edits in a different order so I first saw my edits and then",
    "start": "1580360",
    "end": "1586520"
  },
  {
    "text": "saw my colleagues edits later whereas my colleague first saw their own edits and they saw my edits later and nevertheless",
    "start": "1586520",
    "end": "1593559"
  },
  {
    "text": "no matter in which order we see each other's edits everyone should end up in the same state um you can have branching",
    "start": "1593559",
    "end": "1599440"
  },
  {
    "text": "and merging very much like in git except rather than this manual conflict resolution we have automatic merging as",
    "start": "1599440",
    "end": "1606000"
  },
  {
    "text": "much as possible as I explained and one thing which is quite exciting which we are increasingly working on is actually",
    "start": "1606000",
    "end": "1614039"
  },
  {
    "text": "allowing this kind of branching and merging to be exposed to users as well well and so uh we for example got an",
    "start": "1614039",
    "end": "1621279"
  },
  {
    "text": "experimental text editor which we called upwelling which uh allows you to",
    "start": "1621279",
    "end": "1626399"
  },
  {
    "text": "essentially do like a pull request for a rich text document so the idea is then",
    "start": "1626399",
    "end": "1631559"
  },
  {
    "text": "that you might have a user goes off on a branch makes a bunch of suggested edits to a document and then does a sort of",
    "start": "1631559",
    "end": "1638760"
  },
  {
    "text": "pull request like thing asking their co-workers to review the edits that they've made and merge it in if they",
    "start": "1638760",
    "end": "1645679"
  },
  {
    "text": "like and you could imagine doing similar thing for graphics software or for spreadsheets or why do we not have this",
    "start": "1645679",
    "end": "1651880"
  },
  {
    "text": "kind of suggestion workflow that as software developers we use git and we use these pull requests as ways of being",
    "start": "1651880",
    "end": "1659399"
  },
  {
    "text": "able to review each other's work and merge it in when it's ready really we should be trying to integrate those",
    "start": "1659399",
    "end": "1664760"
  },
  {
    "text": "similar kind of branching and merging and diffing and Version Control features into all sorts of different types of",
    "start": "1664760",
    "end": "1671360"
  },
  {
    "text": "application software and that's why we're trying to go with automerge okay so the way autom merg is",
    "start": "1671360",
    "end": "1677600"
  },
  {
    "text": "implemented is as uh a rust library and you can use it through a rust uh API if",
    "start": "1677600",
    "end": "1683200"
  },
  {
    "text": "you like but the idea is that rust is super portable and so for example we can compile it to web assembly and then have",
    "start": "1683200",
    "end": "1689240"
  },
  {
    "text": "a JavaScript and typescript wrapper around it so you can use that uh for building web apps for example um but we",
    "start": "1689240",
    "end": "1695799"
  },
  {
    "text": "can also have a c API and that's used for having bindings to other languages such as go there's a swift API so that",
    "start": "1695799",
    "end": "1703080"
  },
  {
    "text": "you can build iOS apps there's a Java API which you can use to build Android apps and the idea is that you can then",
    "start": "1703080",
    "end": "1709240"
  },
  {
    "text": "have a crossplatform apps that uh you know run on all of the platforms and they can all interoperate",
    "start": "1709240",
    "end": "1715559"
  },
  {
    "text": "with each other because they all speak the same data model data format and they all speak the same sync protocol for",
    "start": "1715559",
    "end": "1721159"
  },
  {
    "text": "exchanging edits with each other however automerge is really just an inmemory data structure library and",
    "start": "1721159",
    "end": "1728760"
  },
  {
    "text": "so uh for any IO to happen so if you want to actually persist the data or if you want to send it over Network there's",
    "start": "1728760",
    "end": "1735159"
  },
  {
    "text": "a separate companion Library called autom mer repo which handles the storage and networking and so in particular",
    "start": "1735159",
    "end": "1742440"
  },
  {
    "text": "storage could be different things depending on which platform you're running and if you're in a web browser you might be using index DB if you're in",
    "start": "1742440",
    "end": "1748720"
  },
  {
    "text": "a file system in node you might be writing to the local file system if you're on a mobile OS you might be using",
    "start": "1748720",
    "end": "1754159"
  },
  {
    "text": "the storage o uh storage apis provided by that OS and so this is plugable then",
    "start": "1754159",
    "end": "1759840"
  },
  {
    "text": "you can just use whatever storage is available on the platform that you're on uh and likewise for networking you know",
    "start": "1759840",
    "end": "1765600"
  },
  {
    "text": "if you want to go via a websocket server that's fine if you want to sync while peer-to-peer via web RTC connection",
    "start": "1765600",
    "end": "1772159"
  },
  {
    "text": "that's fine if you want to use a plain TCP connection that's fine uh really any kind of way of getting the updates from",
    "start": "1772159",
    "end": "1778559"
  },
  {
    "text": "one user to another uh will work with automerge a little bit of history of how",
    "start": "1778559",
    "end": "1783919"
  },
  {
    "text": "this uh Library came to be um so I started working on it in maybe 2017 or so and for the first couple of years it",
    "start": "1783919",
    "end": "1790720"
  },
  {
    "text": "was very much a research prototype so it had extremely bad performance extremely high memory use uh and extremely large",
    "start": "1790720",
    "end": "1797480"
  },
  {
    "text": "file sizes but it allowed us to work out like what sort of apis do we like what",
    "start": "1797480",
    "end": "1802880"
  },
  {
    "text": "is the programming model how do you build applications on top of this kind of uh substrate and then in the last few",
    "start": "1802880",
    "end": "1809559"
  },
  {
    "text": "years we've increasingly productionize uh professionalized this project and so",
    "start": "1809559",
    "end": "1815480"
  },
  {
    "text": "uh in the version 1.0 we introduced a compressed data format a binary data",
    "start": "1815480",
    "end": "1820880"
  },
  {
    "text": "format which uh is just has vastly smaller file sizes than what the previous versions of automerge had and",
    "start": "1820880",
    "end": "1827480"
  },
  {
    "text": "we introduced a a new synchronization protocol in version two we moved from a",
    "start": "1827480",
    "end": "1832559"
  },
  {
    "text": "JavaScript implementation to a rust implementation and as part of that performance increased massively we've",
    "start": "1832559",
    "end": "1838799"
  },
  {
    "text": "been investing much more in performance and we've now got uh one person working full-time funded by the community uh to",
    "start": "1838799",
    "end": "1846600"
  },
  {
    "text": "do software engineering on this project and several other members of the community who are contributing a lot to the project so it's no longer just like",
    "start": "1846600",
    "end": "1853960"
  },
  {
    "text": "me hacking on this weird academic prototype but it's it's actually now production quality software and",
    "start": "1853960",
    "end": "1859279"
  },
  {
    "text": "Commercial support is available should you want to put it in into production apps and uh the version 2.1 which should",
    "start": "1859279",
    "end": "1867240"
  },
  {
    "text": "uh yeah 2.1 which should be coming out roughly anytime now adds a few interesting features so in particular it",
    "start": "1867240",
    "end": "1873880"
  },
  {
    "text": "adds support for Rich text that is text with formatting um so this sort of idea",
    "start": "1873880",
    "end": "1879399"
  },
  {
    "text": "of Google docs is moving ever closer um but you can use it for all sorts of other types of applications as well um",
    "start": "1879399",
    "end": "1886480"
  },
  {
    "text": "2.1 support for automerge repo the storage and networking library that I mentioned and further import performance",
    "start": "1886480",
    "end": "1894399"
  },
  {
    "text": "improvements okay so I thought in the last section of this talk I might just give you one particular example of the",
    "start": "1894399",
    "end": "1901039"
  },
  {
    "text": "merging algorithms that we've considered uh and I thought I would talk a little bit about rich text since that's a new",
    "start": "1901039",
    "end": "1907279"
  },
  {
    "text": "feature and uh it sort of exemplifies the types of problems that occur when",
    "start": "1907279",
    "end": "1912960"
  },
  {
    "start": "1912000",
    "end": "2413000"
  },
  {
    "text": "you've got multiple users concurrently editing some data and the algorithm talk about is something that we published in",
    "start": "1912960",
    "end": "1919120"
  },
  {
    "text": "this article in 2021 uh peritext is the name of the algorithm and the idea is",
    "start": "1919120",
    "end": "1926360"
  },
  {
    "text": "really to answer the question how do we best represent text with formatting in",
    "start": "1926360",
    "end": "1932159"
  },
  {
    "text": "such a way that multiple users can update it independently from each other and we can merge those edits together in",
    "start": "1932159",
    "end": "1938039"
  },
  {
    "text": "a way that makes sense and if you're thinking about how do you represent Rich Text well your first instinct might be",
    "start": "1938039",
    "end": "1944039"
  },
  {
    "text": "to represent it as a tree because the HTML Dom is a tree and so why don't we just adopt the same data representation",
    "start": "1944039",
    "end": "1950960"
  },
  {
    "text": "so we could have in this example here we have a text document consisting of just a single paragraph with the text the fox",
    "start": "1950960",
    "end": "1958480"
  },
  {
    "text": "jumped and let's say that user a wants to make the word jumped bold and user B",
    "start": "1958480",
    "end": "1965320"
  },
  {
    "text": "wants to make the word jumped italic and those two edits happen concurrently independently from each other on two",
    "start": "1965320",
    "end": "1971200"
  },
  {
    "text": "different devices and now we want to ask well what happens when we sync these things up and we merge them together",
    "start": "1971200",
    "end": "1978039"
  },
  {
    "text": "and there are crdts for tree data structures that you could use for this kind of thing and the way they would work is they say well you added a bold",
    "start": "1978039",
    "end": "1985639"
  },
  {
    "text": "node and you moved the text jumped into that bold node and you also added an italic node and you moved the text",
    "start": "1985639",
    "end": "1992279"
  },
  {
    "text": "jumped into the italic node so I'm going to preserve the fact that you added both a bold node and an italic node and we're",
    "start": "1992279",
    "end": "1998960"
  },
  {
    "text": "going to have the text jumped in each of those nodes and the result is now that the word jumped has become duplicated",
    "start": "1998960",
    "end": "2004120"
  },
  {
    "text": "the text is now the fox bold jumped is metallic jumped and that's kind of weird",
    "start": "2004120",
    "end": "2009320"
  },
  {
    "text": "we don't really want that we changed only the formatting we did not want any text to be duplicated so it seems like",
    "start": "2009320",
    "end": "2014519"
  },
  {
    "text": "representing the data as a tree is not really the right way of doing it let's try an alternative let's try",
    "start": "2014519",
    "end": "2020120"
  },
  {
    "text": "representing the data as markup instead so we could have text with some inline characters that tell us this is the",
    "start": "2020120",
    "end": "2026000"
  },
  {
    "text": "beginning of a bold span and this is the end of a bold span uh and so it could be like",
    "start": "2026000",
    "end": "2031639"
  },
  {
    "text": "literally HTML with angle brackets or you could imagine some sort of uh special marker character that are",
    "start": "2031639",
    "end": "2037399"
  },
  {
    "text": "embedded in in the string in some way whatever way you do it let's say that the user a on the top wants to edit this",
    "start": "2037399",
    "end": "2044080"
  },
  {
    "text": "document and unbold the first three words of this text so that it's now just totally nonbold the fox jumped over the",
    "start": "2044080",
    "end": "2051040"
  },
  {
    "text": "dog whereas user B wants to unbold only the word Fox and so the way you would",
    "start": "2051040",
    "end": "2057760"
  },
  {
    "text": "implement the unbaling Everything Is by removing the two bold uh characters so",
    "start": "2057760",
    "end": "2063919"
  },
  {
    "text": "the start Bold and The End bold marker the way you would unbold just as single word is by inserting a end bold before",
    "start": "2063919",
    "end": "2070480"
  },
  {
    "text": "fox and a start bold after Fox what happens when we merge these things together now well it's kind of messy",
    "start": "2070480",
    "end": "2077720"
  },
  {
    "text": "because the two originally green uh markers so the start bold at the end at",
    "start": "2077720",
    "end": "2082960"
  },
  {
    "text": "the start of the string and the end bolt after jumped those two have been deleted by user a whereas user B has inserted",
    "start": "2082960",
    "end": "2089960"
  },
  {
    "text": "two new uh things an end bold before fox and a start bold after Fox so now we",
    "start": "2089960",
    "end": "2095919"
  },
  {
    "text": "have an end bold before before a start bold in the final merge document which that's kind of weird but okay we could ignore that but now we have a start bold",
    "start": "2095919",
    "end": "2103160"
  },
  {
    "text": "before jumped and now the entire rest of the document has become bold and that's really weird as well because the user",
    "start": "2103160",
    "end": "2109640"
  },
  {
    "text": "was just changing some formatting on the first few words of the uh the first few words of the document why has now the",
    "start": "2109640",
    "end": "2115560"
  },
  {
    "text": "entire rest of the document become bold this is really weird Behavior Uh and we think this is really not good behavior",
    "start": "2115560",
    "end": "2122040"
  },
  {
    "text": "either so this means representing data the rich text as markup does not seem to",
    "start": "2122040",
    "end": "2127560"
  },
  {
    "text": "be a really good idea either okay let's try a third attempt let's try really",
    "start": "2127560",
    "end": "2134079"
  },
  {
    "text": "stupid way let's say every single character has a bold flag or non-bold flag attached to it and we'll just",
    "start": "2134079",
    "end": "2140320"
  },
  {
    "text": "thought that independently for every single character and okay that's probably going to be inefficient but maybe we can find ways of compressing",
    "start": "2140320",
    "end": "2145520"
  },
  {
    "text": "the data whatever way just assume for now that we are just going to attach the formatting to every single character and",
    "start": "2145520",
    "end": "2151359"
  },
  {
    "text": "so in this case if jumped is bold we're just going to have a bold flagged on the j a bold flagged on the U a bold flag on",
    "start": "2151359",
    "end": "2157480"
  },
  {
    "text": "the m and so on okay now besides bold and italic one thing that we want Rich text to be able",
    "start": "2157480",
    "end": "2164000"
  },
  {
    "text": "to represent is comments because you know like in Google Docs you can Mark some text select some text and then put",
    "start": "2164000",
    "end": "2170040"
  },
  {
    "text": "a comment into sidebar and we want that kind of thing as well so let's say for example you attach the comment also to",
    "start": "2170040",
    "end": "2176440"
  },
  {
    "text": "each individual character so let's say here the user a has once to ask the question which Fox and attach this",
    "start": "2176440",
    "end": "2182800"
  },
  {
    "text": "comment to the first two words of the document concurrently the user B wants",
    "start": "2182800",
    "end": "2188079"
  },
  {
    "text": "to insert the word Brown before Fox Now what happens when we merge these things",
    "start": "2188079",
    "end": "2194119"
  },
  {
    "text": "well now when the user B typed Brown there was no comment attached to the characters of brown and so therefore the",
    "start": "2194119",
    "end": "2200920"
  },
  {
    "text": "merged state will now have the comment split into two separate spans where the",
    "start": "2200920",
    "end": "2207680"
  },
  {
    "text": "and fox have comment attached to it but the word Brown has no comment attached to it because you know there was no",
    "start": "2207680",
    "end": "2212880"
  },
  {
    "text": "comment there at the time when those characters were inserted and this is is kind of messy as well okay we could kind of try to maybe",
    "start": "2212880",
    "end": "2219520"
  },
  {
    "text": "patch over it by closing the Gap now the algorithm gets quite fiddly and we have to convince ourselves that it's actually",
    "start": "2219520",
    "end": "2225280"
  },
  {
    "text": "correct and there other edge cases also which I don't have time to talk about which are kind of annoying and so just",
    "start": "2225280",
    "end": "2231520"
  },
  {
    "text": "overall it seems like this approach of attaching per character properties is not really great either and so this",
    "start": "2231520",
    "end": "2238000"
  },
  {
    "text": "finally brings us to the approach that we adopted for peritext and this approach actually seems to work quite",
    "start": "2238000",
    "end": "2243800"
  },
  {
    "text": "well finally uh so this is the fourth ATT and it works like this we just have the",
    "start": "2243800",
    "end": "2250040"
  },
  {
    "text": "text the plain text with no embedded stuff um just as a flat string and then",
    "start": "2250040",
    "end": "2256000"
  },
  {
    "text": "separately outside of the text we can attach annotations uh to spans of text",
    "start": "2256000",
    "end": "2261640"
  },
  {
    "text": "and say from this character up to this character is bold and let's say we start off with",
    "start": "2261640",
    "end": "2267880"
  },
  {
    "text": "this document here where A and B start off in the same state and we're just going to say the whole whole document is",
    "start": "2267880",
    "end": "2272960"
  },
  {
    "text": "bold for now and crucially we're going to attach a Tim stamp to that Bolding operation was saying this uh span of",
    "start": "2272960",
    "end": "2280359"
  },
  {
    "text": "text was marked bold at a particular point in time now let's say that the user a then decides to unbold the the",
    "start": "2280359",
    "end": "2288680"
  },
  {
    "text": "second and third word word of this text so the remains bold and fox jumped is",
    "start": "2288680",
    "end": "2293760"
  },
  {
    "text": "unbold the way we do this is we do not change the fact that it used to be previously bold so the T1 bold span",
    "start": "2293760",
    "end": "2301800"
  },
  {
    "text": "remains there we don't delete it but we add an additional formatting an",
    "start": "2301800",
    "end": "2307079"
  },
  {
    "text": "saying Fox and jumped are now unbolded and we have a time stamp T2 on that and T2 happened later so T2 is greater than",
    "start": "2307079",
    "end": "2314359"
  },
  {
    "text": "T1 and this tells us that for the second and third word of the text the unbold overrides the previous bold and this now",
    "start": "2314359",
    "end": "2321640"
  },
  {
    "text": "gives us this kind of temporal ordering that we needed in order to figure out what happens when multiple things happen",
    "start": "2321640",
    "end": "2328640"
  },
  {
    "text": "concurrently let's happen let's say on user B user B decided to Mark the third",
    "start": "2328640",
    "end": "2334200"
  },
  {
    "text": "word jumped as italic and that has has a time stamp of T3 on this operation and",
    "start": "2334200",
    "end": "2339760"
  },
  {
    "text": "now we can finally merge those things in a sensible way because the way we merge is it we just keep all of the",
    "start": "2339760",
    "end": "2345560"
  },
  {
    "text": "annotations that have been created we don't delete the annotations ever and this is fine because you know the number",
    "start": "2345560",
    "end": "2351119"
  },
  {
    "text": "of formatting annotations in a typical textt will not actually be that great and so it's fine to just store them",
    "start": "2351119",
    "end": "2356800"
  },
  {
    "text": "forever and in this case we know that the must be bold because it was once bolded and never unbolded the word Fox",
    "start": "2356800",
    "end": "2363800"
  },
  {
    "text": "must be unbold because it was first bolded and then unbolded by T2 which is greater than T1 and the word jumped must",
    "start": "2363800",
    "end": "2372000"
  },
  {
    "text": "be non-bold because it was unbolded by D2 and it was italicized by T3 and so",
    "start": "2372000",
    "end": "2377960"
  },
  {
    "text": "this finally gives us a good algorithm for merging these uh Rich Text edits together and that's really all that I",
    "start": "2377960",
    "end": "2384880"
  },
  {
    "text": "have time to talk about today so that is uh the view of automerge this Rich Text",
    "start": "2384880",
    "end": "2390040"
  },
  {
    "text": "algorithm is now implemented as part of Auto merge and we're also adding bindings to text editors like pros",
    "start": "2390040",
    "end": "2396880"
  },
  {
    "text": "mirror for example which allow you to actually build collaboration software including these rich text features um",
    "start": "2396880",
    "end": "2404079"
  },
  {
    "text": "but you can you know you can build many other types of of data on top of this general purpose Json model as well and",
    "start": "2404079",
    "end": "2411839"
  },
  {
    "text": "uh if you're interested any any more of that uh there's details on the automerge website um various academic Publications",
    "start": "2411839",
    "end": "2418720"
  },
  {
    "start": "2413000",
    "end": "2420000"
  },
  {
    "text": "that I've worked on over the years which describe various algorithms that go into this and a huge thank you to the members",
    "start": "2418720",
    "end": "2424480"
  },
  {
    "start": "2420000",
    "end": "2445000"
  },
  {
    "text": "of the automerge community who've put a huge amount of work into actually implementing these things in practice",
    "start": "2424480",
    "end": "2429640"
  },
  {
    "text": "over the last [Applause]",
    "start": "2429640",
    "end": "2436849"
  },
  {
    "text": "years",
    "start": "2443480",
    "end": "2446480"
  }
]