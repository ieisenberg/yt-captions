[
  {
    "text": "right so hello can you all hear me all",
    "start": "6640",
    "end": "8719"
  },
  {
    "text": "good all right so yes I'm Sydney I am",
    "start": "8719",
    "end": "10559"
  },
  {
    "text": "not Tony Morris um and yeah and so today",
    "start": "10559",
    "end": "13000"
  },
  {
    "text": "I'll be sharing some experiences about",
    "start": "13000",
    "end": "15000"
  },
  {
    "text": "our our journey of exper sourcing and",
    "start": "15000",
    "end": "17000"
  },
  {
    "text": "cqrs From The Trenches or really it",
    "start": "17000",
    "end": "19199"
  },
  {
    "text": "means events events everywhere um so",
    "start": "19199",
    "end": "22519"
  },
  {
    "text": "over the last year U the team I've been",
    "start": "22519",
    "end": "24359"
  },
  {
    "text": "working with has been rebuilding a core",
    "start": "24359",
    "end": "25840"
  },
  {
    "text": "part of our identity platform U to run",
    "start": "25840",
    "end": "27800"
  },
  {
    "text": "an AWS by using event sourcing and QRS",
    "start": "27800",
    "end": "31199"
  },
  {
    "text": "um so we've got an initial version in",
    "start": "31199",
    "end": "32398"
  },
  {
    "text": "dog FR now it's been running quite",
    "start": "32399",
    "end": "33640"
  },
  {
    "text": "smoothly for the last few months and",
    "start": "33640",
    "end": "35200"
  },
  {
    "text": "we're currently actively building up the",
    "start": "35200",
    "end": "36559"
  },
  {
    "text": "production scale of that um I guess one",
    "start": "36559",
    "end": "39160"
  },
  {
    "text": "of the things we found when I was",
    "start": "39160",
    "end": "40719"
  },
  {
    "text": "building the system was there's not a",
    "start": "40719",
    "end": "42320"
  },
  {
    "text": "lot of documentation about how you",
    "start": "42320",
    "end": "44000"
  },
  {
    "text": "actually build a system like a real",
    "start": "44000",
    "end": "46239"
  },
  {
    "text": "actual real system and um hopefully by",
    "start": "46239",
    "end": "48640"
  },
  {
    "text": "sharing some of the experiences",
    "start": "48640",
    "end": "49600"
  },
  {
    "text": "learnings today hopefully we'll fill",
    "start": "49600",
    "end": "51199"
  },
  {
    "text": "that void in a little bit um before we",
    "start": "51199",
    "end": "54039"
  },
  {
    "text": "get started so I guess quick show of",
    "start": "54039",
    "end": "55640"
  },
  {
    "text": "hands who here is all into event",
    "start": "55640",
    "end": "57559"
  },
  {
    "text": "sourcing is using it now or loves it",
    "start": "57559",
    "end": "60239"
  },
  {
    "text": "okay oh that's actually that's good good",
    "start": "60239",
    "end": "62079"
  },
  {
    "text": "numbers um who here kind of knows about",
    "start": "62079",
    "end": "63920"
  },
  {
    "text": "it it's sort of deant all righty and who",
    "start": "63920",
    "end": "66560"
  },
  {
    "text": "here doesn't know anything at all about",
    "start": "66560",
    "end": "68880"
  },
  {
    "text": "okay all righty so I might quickly run",
    "start": "68880",
    "end": "70720"
  },
  {
    "text": "through some what event sourcing is and",
    "start": "70720",
    "end": "72080"
  },
  {
    "text": "then we'll jump into actually how we",
    "start": "72080",
    "end": "73360"
  },
  {
    "text": "build things all righty so in the",
    "start": "73360",
    "end": "76159"
  },
  {
    "text": "traditional world you have a database",
    "start": "76159",
    "end": "78080"
  },
  {
    "text": "you have databas table with records um",
    "start": "78080",
    "end": "80360"
  },
  {
    "text": "and you know when you do changes to it",
    "start": "80360",
    "end": "82799"
  },
  {
    "text": "you update them in place right so you",
    "start": "82799",
    "end": "85200"
  },
  {
    "text": "don't actually have any transaction logs",
    "start": "85200",
    "end": "87200"
  },
  {
    "text": "exposed to end users so what event",
    "start": "87200",
    "end": "89560"
  },
  {
    "text": "sourcing does is exposes those",
    "start": "89560",
    "end": "91640"
  },
  {
    "text": "transaction logs as as to users or",
    "start": "91640",
    "end": "94320"
  },
  {
    "text": "consumers as I guess a business level",
    "start": "94320",
    "end": "96600"
  },
  {
    "text": "transaction log so you can see here as",
    "start": "96600",
    "end": "98439"
  },
  {
    "text": "we make changes we're actually storing",
    "start": "98439",
    "end": "100680"
  },
  {
    "text": "events instead right and the way we",
    "start": "100680",
    "end": "103000"
  },
  {
    "text": "reconstitute the original table we",
    "start": "103000",
    "end": "104600"
  },
  {
    "text": "wanted is by essentially replay those",
    "start": "104600",
    "end": "106439"
  },
  {
    "text": "events in order so you can see there's a",
    "start": "106439",
    "end": "108759"
  },
  {
    "text": "sequence number essentially so events",
    "start": "108759",
    "end": "111119"
  },
  {
    "text": "basically are sequenced um within an",
    "start": "111119",
    "end": "113399"
  },
  {
    "text": "event stream and they're I guess",
    "start": "113399",
    "end": "118000"
  },
  {
    "text": "flexibly typed as well so the really",
    "start": "118000",
    "end": "119399"
  },
  {
    "text": "nice thing about that is to store these",
    "start": "119399",
    "end": "121200"
  },
  {
    "text": "events all we really need is a key value",
    "start": "121200",
    "end": "122960"
  },
  {
    "text": "store that supports conditional rights",
    "start": "122960",
    "end": "125520"
  },
  {
    "text": "and you know you can you can use any",
    "start": "125520",
    "end": "127000"
  },
  {
    "text": "kind of really highly scalable data",
    "start": "127000",
    "end": "128920"
  },
  {
    "text": "store for that like Dynamo or react and",
    "start": "128920",
    "end": "131000"
  },
  {
    "text": "so",
    "start": "131000",
    "end": "131920"
  },
  {
    "text": "forth but not only can you actually get",
    "start": "131920",
    "end": "134280"
  },
  {
    "text": "one view of this data you can actually",
    "start": "134280",
    "end": "135680"
  },
  {
    "text": "get lots of different views so if I have",
    "start": "135680",
    "end": "137120"
  },
  {
    "text": "a new schema particularly tune schema we",
    "start": "137120",
    "end": "139440"
  },
  {
    "text": "can do that or we can shove into any",
    "start": "139440",
    "end": "141280"
  },
  {
    "text": "other data store we want so forget",
    "start": "141280",
    "end": "142879"
  },
  {
    "text": "procress they shove into elastic search",
    "start": "142879",
    "end": "144400"
  },
  {
    "text": "for",
    "start": "144400",
    "end": "145160"
  },
  {
    "text": "example so that's this is all good and",
    "start": "145160",
    "end": "147160"
  },
  {
    "text": "well but how do we actually why would we",
    "start": "147160",
    "end": "148920"
  },
  {
    "text": "actually want to use it so this is the",
    "start": "148920",
    "end": "150760"
  },
  {
    "text": "how do you sell it to your boss slide",
    "start": "150760",
    "end": "152480"
  },
  {
    "text": "right um so and we use you know identity",
    "start": "152480",
    "end": "155920"
  },
  {
    "text": "system as an example so we're St talking",
    "start": "155920",
    "end": "157920"
  },
  {
    "text": "about storing users groups and",
    "start": "157920",
    "end": "159760"
  },
  {
    "text": "memberships right so specifically though",
    "start": "159760",
    "end": "162680"
  },
  {
    "text": "we actually want to provide you know",
    "start": "162680",
    "end": "164800"
  },
  {
    "text": "detail I guess performant views for",
    "start": "164800",
    "end": "167159"
  },
  {
    "text": "different views for this data right so",
    "start": "167159",
    "end": "168440"
  },
  {
    "text": "you might want to search for users you",
    "start": "168440",
    "end": "169840"
  },
  {
    "text": "might able to retrieve by emails um and",
    "start": "169840",
    "end": "172480"
  },
  {
    "text": "these need to be really really",
    "start": "172480",
    "end": "173879"
  },
  {
    "text": "performant for us right so high volume",
    "start": "173879",
    "end": "175599"
  },
  {
    "text": "reads low latency reads rights are not",
    "start": "175599",
    "end": "177640"
  },
  {
    "text": "so important but you think about it you",
    "start": "177640",
    "end": "179519"
  },
  {
    "text": "want to able to re authenticate and",
    "start": "179519",
    "end": "181200"
  },
  {
    "text": "authorize users you need to do that",
    "start": "181200",
    "end": "182800"
  },
  {
    "text": "really quickly otherwise we can't use",
    "start": "182800",
    "end": "184120"
  },
  {
    "text": "your softare no one can use our software",
    "start": "184120",
    "end": "186879"
  },
  {
    "text": "right and event souring is really good",
    "start": "186879",
    "end": "188360"
  },
  {
    "text": "for this because we can generate we can",
    "start": "188360",
    "end": "190400"
  },
  {
    "text": "generate any kind of any number of views",
    "start": "190400",
    "end": "192040"
  },
  {
    "text": "we want um they can be different data",
    "start": "192040",
    "end": "193720"
  },
  {
    "text": "stores so we can tune those views as",
    "start": "193720",
    "end": "195480"
  },
  {
    "text": "much as we need to so we can build a",
    "start": "195480",
    "end": "197200"
  },
  {
    "text": "system that kind of works for now and we",
    "start": "197200",
    "end": "198840"
  },
  {
    "text": "realize oh we need elastic search in the",
    "start": "198840",
    "end": "200599"
  },
  {
    "text": "future that's fine we can add that and",
    "start": "200599",
    "end": "202480"
  },
  {
    "text": "scale out when we need to all using the",
    "start": "202480",
    "end": "204280"
  },
  {
    "text": "same underlying events",
    "start": "204280",
    "end": "206280"
  },
  {
    "text": "sourcing so the other thing we also need",
    "start": "206280",
    "end": "208319"
  },
  {
    "text": "to do is provide incremental",
    "start": "208319",
    "end": "209760"
  },
  {
    "text": "sychronization so change events to",
    "start": "209760",
    "end": "211480"
  },
  {
    "text": "Downstream consumers and we also get",
    "start": "211480",
    "end": "213560"
  },
  {
    "text": "asked for audit Trails as well right um",
    "start": "213560",
    "end": "216599"
  },
  {
    "text": "and you think about these These are",
    "start": "216599",
    "end": "217680"
  },
  {
    "text": "change events which are the events in",
    "start": "217680",
    "end": "219599"
  },
  {
    "text": "our event stream so we can easily derive",
    "start": "219599",
    "end": "221640"
  },
  {
    "text": "the information we need from our event",
    "start": "221640",
    "end": "223159"
  },
  {
    "text": "stream for free",
    "start": "223159",
    "end": "225159"
  },
  {
    "text": "essentially um and obviously for any",
    "start": "225159",
    "end": "227720"
  },
  {
    "text": "system we build these days we talk about",
    "start": "227720",
    "end": "229000"
  },
  {
    "text": "high availability you know fail over",
    "start": "229000",
    "end": "230519"
  },
  {
    "text": "between regions and so forth and the",
    "start": "230519",
    "end": "232360"
  },
  {
    "text": "nice thing about um event sourcing is",
    "start": "232360",
    "end": "234239"
  },
  {
    "text": "that because the data is immutable it's",
    "start": "234239",
    "end": "236200"
  },
  {
    "text": "really easy to copy data from one region",
    "start": "236200",
    "end": "238319"
  },
  {
    "text": "to the other and if you really tricky",
    "start": "238319",
    "end": "240400"
  },
  {
    "text": "about things if you set up you know your",
    "start": "240400",
    "end": "241879"
  },
  {
    "text": "sequence numbers correctly and you use",
    "start": "241879",
    "end": "243319"
  },
  {
    "text": "cdts you can actually get B you can get",
    "start": "243319",
    "end": "245400"
  },
  {
    "text": "multi-active active region systems",
    "start": "245400",
    "end": "247560"
  },
  {
    "text": "working not easily but",
    "start": "247560",
    "end": "250480"
  },
  {
    "text": "simply um and the other nice thing is we",
    "start": "250480",
    "end": "252879"
  },
  {
    "text": "talked about um how to replay these",
    "start": "252879",
    "end": "255319"
  },
  {
    "text": "events Inu new schemers but imagine you",
    "start": "255319",
    "end": "257639"
  },
  {
    "text": "want to change a read schema right",
    "start": "257639",
    "end": "259680"
  },
  {
    "text": "typically you you think oh well I can to",
    "start": "259680",
    "end": "261320"
  },
  {
    "text": "run a SQL updates on my live production",
    "start": "261320",
    "end": "263400"
  },
  {
    "text": "data right that's pretty scary but with",
    "start": "263400",
    "end": "265720"
  },
  {
    "text": "event sourcing we can just run we can",
    "start": "265720",
    "end": "268560"
  },
  {
    "text": "create a new schema replay events into",
    "start": "268560",
    "end": "270639"
  },
  {
    "text": "that test it out all offline and we're",
    "start": "270639",
    "end": "273120"
  },
  {
    "text": "happy we can switch it over and Bob's",
    "start": "273120",
    "end": "275120"
  },
  {
    "text": "your uncle um and a nice thing from a",
    "start": "275120",
    "end": "276919"
  },
  {
    "text": "coding perspective is we our code only",
    "start": "276919",
    "end": "279080"
  },
  {
    "text": "need to handle one version of that read",
    "start": "279080",
    "end": "281160"
  },
  {
    "text": "schema right we don't have to worry",
    "start": "281160",
    "end": "282400"
  },
  {
    "text": "about oh if it's this schema read this",
    "start": "282400",
    "end": "284199"
  },
  {
    "text": "way otherwise read that way so that",
    "start": "284199",
    "end": "286000"
  },
  {
    "text": "really simplifies our",
    "start": "286000",
    "end": "287479"
  },
  {
    "text": "code and from a developers perspective",
    "start": "287479",
    "end": "290720"
  },
  {
    "text": "we like testing with production data",
    "start": "290720",
    "end": "292240"
  },
  {
    "text": "right especially we need to fix",
    "start": "292240",
    "end": "293240"
  },
  {
    "text": "production bugs right and so with event",
    "start": "293240",
    "end": "295120"
  },
  {
    "text": "sourcing to do that it's really easy we",
    "start": "295120",
    "end": "296759"
  },
  {
    "text": "just literally copy the the production",
    "start": "296759",
    "end": "298320"
  },
  {
    "text": "events into a isolated system",
    "start": "298320",
    "end": "300280"
  },
  {
    "text": "replay them and we can keep on replaying",
    "start": "300280",
    "end": "302240"
  },
  {
    "text": "them until we find the bug and fix it",
    "start": "302240",
    "end": "303919"
  },
  {
    "text": "and we can prove it's actually fixed um",
    "start": "303919",
    "end": "306800"
  },
  {
    "text": "so hopefully by sitting this you can you",
    "start": "306800",
    "end": "308840"
  },
  {
    "text": "feel motivated that yeah okay this",
    "start": "308840",
    "end": "310160"
  },
  {
    "text": "actually might be something good for us",
    "start": "310160",
    "end": "311960"
  },
  {
    "text": "um and the nice thing about this is this",
    "start": "311960",
    "end": "313440"
  },
  {
    "text": "is how we can sold it to our bosses to",
    "start": "313440",
    "end": "315120"
  },
  {
    "text": "say hey this actually something we need",
    "start": "315120",
    "end": "316440"
  },
  {
    "text": "to to look at especially for such a",
    "start": "316440",
    "end": "317960"
  },
  {
    "text": "critical part of our",
    "start": "317960",
    "end": "319520"
  },
  {
    "text": "system all right so let's actually get",
    "start": "319520",
    "end": "321280"
  },
  {
    "text": "into the interesting stuff on how we",
    "start": "321280",
    "end": "322319"
  },
  {
    "text": "actually build the thing um note that I",
    "start": "322319",
    "end": "324840"
  },
  {
    "text": "haven't talked anything about cqrs yet",
    "start": "324840",
    "end": "327360"
  },
  {
    "text": "and the reason is we didn't actually",
    "start": "327360",
    "end": "328759"
  },
  {
    "text": "start with cqrs in mind um we kind of",
    "start": "328759",
    "end": "331560"
  },
  {
    "text": "evolved our architecture to the get",
    "start": "331560",
    "end": "333199"
  },
  {
    "text": "there just out of necessity so what do I",
    "start": "333199",
    "end": "335600"
  },
  {
    "text": "mean by that um so to begin with we",
    "start": "335600",
    "end": "338840"
  },
  {
    "text": "started simple right we just want on a",
    "start": "338840",
    "end": "340199"
  },
  {
    "text": "monolithic app that does you know users",
    "start": "340199",
    "end": "342440"
  },
  {
    "text": "groups memberships um only using event",
    "start": "342440",
    "end": "344880"
  },
  {
    "text": "sourcing that was I guess one of the key",
    "start": "344880",
    "end": "346560"
  },
  {
    "text": "pieces of infrastructure we wanted and",
    "start": "346560",
    "end": "348600"
  },
  {
    "text": "so if you think about okay let we want",
    "start": "348600",
    "end": "350199"
  },
  {
    "text": "to add a user so what happens you right",
    "start": "350199",
    "end": "352000"
  },
  {
    "text": "so you get events coming in requests",
    "start": "352000",
    "end": "354000"
  },
  {
    "text": "coming in we hit our save API which",
    "start": "354000",
    "end": "356440"
  },
  {
    "text": "generates the events we want they get",
    "start": "356440",
    "end": "358000"
  },
  {
    "text": "saved to our event stream wrapper around",
    "start": "358000",
    "end": "359639"
  },
  {
    "text": "around Dynamo DB simple so to read",
    "start": "359639",
    "end": "362759"
  },
  {
    "text": "things we have this these query views",
    "start": "362759",
    "end": "365000"
  },
  {
    "text": "which which essentially in memory",
    "start": "365000",
    "end": "366759"
  },
  {
    "text": "snapshots of particularly tuned to the",
    "start": "366759",
    "end": "369520"
  },
  {
    "text": "kind of queries that we need to support",
    "start": "369520",
    "end": "371199"
  },
  {
    "text": "in our API and to populate those we do",
    "start": "371199",
    "end": "374400"
  },
  {
    "text": "it lazily by you know honor requests or",
    "start": "374400",
    "end": "376599"
  },
  {
    "text": "specific requests we can just read",
    "start": "376599",
    "end": "379120"
  },
  {
    "text": "streams of events out of Dynamo replay",
    "start": "379120",
    "end": "381240"
  },
  {
    "text": "them to update our snapshots and memory",
    "start": "381240",
    "end": "383039"
  },
  {
    "text": "and then put results back so that was",
    "start": "383039",
    "end": "385720"
  },
  {
    "text": "like a Alpha version so to speak um but",
    "start": "385720",
    "end": "388680"
  },
  {
    "text": "we quickly realized",
    "start": "388680",
    "end": "390240"
  },
  {
    "text": "we kind of need to separate the rights",
    "start": "390240",
    "end": "392160"
  },
  {
    "text": "from the reads right so from a coding",
    "start": "392160",
    "end": "393840"
  },
  {
    "text": "perspective um we found that there's a",
    "start": "393840",
    "end": "395720"
  },
  {
    "text": "lot of conflicts um because you know we",
    "start": "395720",
    "end": "397680"
  },
  {
    "text": "we assume data models were the same",
    "start": "397680",
    "end": "399120"
  },
  {
    "text": "between the writes and the reads they",
    "start": "399120",
    "end": "400599"
  },
  {
    "text": "shouldn't be and so why don't we make",
    "start": "400599",
    "end": "402319"
  },
  {
    "text": "that explicit so we actually had this",
    "start": "402319",
    "end": "405000"
  },
  {
    "text": "explicit separ separation between",
    "start": "405000",
    "end": "407479"
  },
  {
    "text": "command and query so hence command query",
    "start": "407479",
    "end": "409680"
  },
  {
    "text": "separation in our code base so commands",
    "start": "409680",
    "end": "412319"
  },
  {
    "text": "and queries have completely different",
    "start": "412319",
    "end": "413440"
  },
  {
    "text": "data models the only thing they really",
    "start": "413440",
    "end": "415160"
  },
  {
    "text": "share is their events as an API between",
    "start": "415160",
    "end": "417800"
  },
  {
    "text": "them so the other require we had was",
    "start": "417800",
    "end": "420400"
  },
  {
    "text": "well you know we have multiple event",
    "start": "420400",
    "end": "421759"
  },
  {
    "text": "streams we want to be able to query",
    "start": "421759",
    "end": "423840"
  },
  {
    "text": "across data across multiple event",
    "start": "423840",
    "end": "425319"
  },
  {
    "text": "streams in a single view of that data",
    "start": "425319",
    "end": "427800"
  },
  {
    "text": "right and we also had to store that in",
    "start": "427800",
    "end": "430080"
  },
  {
    "text": "postgress um so how do we solve that",
    "start": "430080",
    "end": "432960"
  },
  {
    "text": "well we kind of split up the query view",
    "start": "432960",
    "end": "435199"
  },
  {
    "text": "logic into two bits one is the actual",
    "start": "435199",
    "end": "437240"
  },
  {
    "text": "just queries so SQL queries um and we",
    "start": "437240",
    "end": "440120"
  },
  {
    "text": "also introduced the thing called a query",
    "start": "440120",
    "end": "441400"
  },
  {
    "text": "synchronizer which sole job is to get",
    "start": "441400",
    "end": "444160"
  },
  {
    "text": "notified of changes whenever you write",
    "start": "444160",
    "end": "446000"
  },
  {
    "text": "events um and then suck those events out",
    "start": "446000",
    "end": "448599"
  },
  {
    "text": "of Dynamo and propagate those to",
    "start": "448599",
    "end": "450919"
  },
  {
    "text": "postgress so that was kind of like our",
    "start": "450919",
    "end": "452800"
  },
  {
    "text": "beta",
    "start": "452800",
    "end": "453759"
  },
  {
    "text": "version but remember we talked about",
    "start": "453759",
    "end": "455960"
  },
  {
    "text": "providing incremental sync for",
    "start": "455960",
    "end": "457160"
  },
  {
    "text": "Downstream systems so how do we do that",
    "start": "457160",
    "end": "459520"
  },
  {
    "text": "we kind of want to somehow expose this",
    "start": "459520",
    "end": "462720"
  },
  {
    "text": "this notification bit and this Dynamo",
    "start": "462720",
    "end": "464639"
  },
  {
    "text": "stream to external consumers and so to",
    "start": "464639",
    "end": "467440"
  },
  {
    "text": "do that we started introducing an event",
    "start": "467440",
    "end": "469919"
  },
  {
    "text": "boss right so we're using Kinesis in AWS",
    "start": "469919",
    "end": "472520"
  },
  {
    "text": "so think of big message uh replicated",
    "start": "472520",
    "end": "474680"
  },
  {
    "text": "message log and uh we're using Dynamo DB",
    "start": "474680",
    "end": "478120"
  },
  {
    "text": "streams this is a relatively new feature",
    "start": "478120",
    "end": "480000"
  },
  {
    "text": "um and we to basically provide change",
    "start": "480000",
    "end": "481720"
  },
  {
    "text": "events on our Dynamo tables we use a",
    "start": "481720",
    "end": "483960"
  },
  {
    "text": "Lambda to take those events out",
    "start": "483960",
    "end": "485479"
  },
  {
    "text": "transform them back into our nice",
    "start": "485479",
    "end": "486879"
  },
  {
    "text": "formats and then shove them onto our",
    "start": "486879",
    "end": "488479"
  },
  {
    "text": "Kinesis stream for Downstream consumers",
    "start": "488479",
    "end": "491039"
  },
  {
    "text": "um obviously one of them would be our",
    "start": "491039",
    "end": "492360"
  },
  {
    "text": "query synchronizer so we can get rid of",
    "start": "492360",
    "end": "493879"
  },
  {
    "text": "that impr",
    "start": "493879",
    "end": "495800"
  },
  {
    "text": "process um topic Notifier kind of thing",
    "start": "495800",
    "end": "498360"
  },
  {
    "text": "we had and we can also now extend it to",
    "start": "498360",
    "end": "501280"
  },
  {
    "text": "say a search service so we can have",
    "start": "501280",
    "end": "503000"
  },
  {
    "text": "additional",
    "start": "503000",
    "end": "504599"
  },
  {
    "text": "consumers like other",
    "start": "504599",
    "end": "507319"
  },
  {
    "text": "applications right so this is kind of",
    "start": "507319",
    "end": "509000"
  },
  {
    "text": "where we try to get to now we're",
    "start": "509000",
    "end": "510240"
  },
  {
    "text": "actively building this out I guess but",
    "start": "510240",
    "end": "511879"
  },
  {
    "text": "what we really want to get to is say",
    "start": "511879",
    "end": "513839"
  },
  {
    "text": "well look this event bus is more than",
    "start": "513839",
    "end": "516039"
  },
  {
    "text": "just for this core application right how",
    "start": "516039",
    "end": "517839"
  },
  {
    "text": "do we turn this into the event bus for",
    "start": "517839",
    "end": "520120"
  },
  {
    "text": "our platform so to speak so let's say",
    "start": "520120",
    "end": "523039"
  },
  {
    "text": "you know we have a groups application we",
    "start": "523039",
    "end": "525640"
  },
  {
    "text": "can add separate user profiles to it and",
    "start": "525640",
    "end": "527680"
  },
  {
    "text": "other things to it just through the same",
    "start": "527680",
    "end": "529720"
  },
  {
    "text": "mechanism shove it through Dynamo",
    "start": "529720",
    "end": "531440"
  },
  {
    "text": "through to Al Kinesis stream and then we",
    "start": "531440",
    "end": "533720"
  },
  {
    "text": "can have all our queries no it's coming",
    "start": "533720",
    "end": "536959"
  },
  {
    "text": "out from that um and other nice thing",
    "start": "536959",
    "end": "539760"
  },
  {
    "text": "about that is we can then extend it to",
    "start": "539760",
    "end": "541480"
  },
  {
    "text": "say well we have an internal event BS",
    "start": "541480",
    "end": "543680"
  },
  {
    "text": "where we you know within the identity",
    "start": "543680",
    "end": "545040"
  },
  {
    "text": "team we can have our own query nodes um",
    "start": "545040",
    "end": "548320"
  },
  {
    "text": "and also Downstream we can have an",
    "start": "548320",
    "end": "549800"
  },
  {
    "text": "external event bus which is basically a",
    "start": "549800",
    "end": "551640"
  },
  {
    "text": "nice sort it has a different API it's a",
    "start": "551640",
    "end": "553640"
  },
  {
    "text": "different API it's a different life",
    "start": "553640",
    "end": "554839"
  },
  {
    "text": "cycle right so allows flexibility",
    "start": "554839",
    "end": "557000"
  },
  {
    "text": "between um to allows us to change our",
    "start": "557000",
    "end": "558839"
  },
  {
    "text": "events when we need to without affecting",
    "start": "558839",
    "end": "560600"
  },
  {
    "text": "Downstream",
    "start": "560600",
    "end": "561600"
  },
  {
    "text": "customers so this is kind of what we",
    "start": "561600",
    "end": "563720"
  },
  {
    "text": "want to get to and you can start of see",
    "start": "563720",
    "end": "565480"
  },
  {
    "text": "we also we had the command query",
    "start": "565480",
    "end": "566800"
  },
  {
    "text": "separation within the application and we",
    "start": "566800",
    "end": "568839"
  },
  {
    "text": "started to see that whole command query",
    "start": "568839",
    "end": "570920"
  },
  {
    "text": "cqrs in the entire architecture and we",
    "start": "570920",
    "end": "573800"
  },
  {
    "text": "kind of evolved to it we didn't really",
    "start": "573800",
    "end": "575160"
  },
  {
    "text": "set out to do it to begin with right so",
    "start": "575160",
    "end": "577839"
  },
  {
    "text": "let's make this a little bit more",
    "start": "577839",
    "end": "578680"
  },
  {
    "text": "concrete with some code so let me start",
    "start": "578680",
    "end": "581399"
  },
  {
    "text": "with um our core application so um it's",
    "start": "581399",
    "end": "584160"
  },
  {
    "text": "a typical application it's got the three",
    "start": "584160",
    "end": "585560"
  },
  {
    "text": "stacks uh three layers you know web",
    "start": "585560",
    "end": "587560"
  },
  {
    "text": "service and data access um and we've",
    "start": "587560",
    "end": "589880"
  },
  {
    "text": "actually split we actually split up our",
    "start": "589880",
    "end": "591360"
  },
  {
    "text": "Command and query into to specific",
    "start": "591360",
    "end": "594160"
  },
  {
    "text": "modules um so we're actually using a",
    "start": "594160",
    "end": "596760"
  },
  {
    "text": "free the free co-product um comos prod",
    "start": "596760",
    "end": "599720"
  },
  {
    "text": "of patent after watching Runar talk on",
    "start": "599720",
    "end": "602040"
  },
  {
    "text": "reasonably priced mon ads um highly",
    "start": "602040",
    "end": "604040"
  },
  {
    "text": "recommended um and so what we have is in",
    "start": "604040",
    "end": "607800"
  },
  {
    "text": "our data access layer we have our",
    "start": "607800",
    "end": "609760"
  },
  {
    "text": "individual algebras right so commands",
    "start": "609760",
    "end": "611519"
  },
  {
    "text": "and query modules have their own",
    "start": "611519",
    "end": "612920"
  },
  {
    "text": "algebras for saving and retrieving users",
    "start": "612920",
    "end": "615200"
  },
  {
    "text": "and so forth and they have their own",
    "start": "615200",
    "end": "617079"
  },
  {
    "text": "interpreters all right um our service",
    "start": "617079",
    "end": "619760"
  },
  {
    "text": "layer then composes those or sequences",
    "start": "619760",
    "end": "621760"
  },
  {
    "text": "those operations up into a a general",
    "start": "621760",
    "end": "623920"
  },
  {
    "text": "sort of high level composite algebra um",
    "start": "623920",
    "end": "626200"
  },
  {
    "text": "so you think about adding user you the",
    "start": "626200",
    "end": "628160"
  },
  {
    "text": "logic would be search for usern name",
    "start": "628160",
    "end": "630200"
  },
  {
    "text": "make sure there's nothing already",
    "start": "630200",
    "end": "631440"
  },
  {
    "text": "existing and then try to save it then",
    "start": "631440",
    "end": "634360"
  },
  {
    "text": "our web tier we just sort of do the",
    "start": "634360",
    "end": "636040"
  },
  {
    "text": "routing and run uh and just yeah run it",
    "start": "636040",
    "end": "639160"
  },
  {
    "text": "using our composite interpreter so where",
    "start": "639160",
    "end": "641680"
  },
  {
    "text": "do our events fit in right so there's",
    "start": "641680",
    "end": "643839"
  },
  {
    "text": "two bits right so",
    "start": "643839",
    "end": "645639"
  },
  {
    "text": "firstly it's in our um it's in our",
    "start": "645639",
    "end": "648480"
  },
  {
    "text": "Command interpreters right so this is",
    "start": "648480",
    "end": "651480"
  },
  {
    "text": "our interpreter it's basically actual",
    "start": "651480",
    "end": "653279"
  },
  {
    "text": "transform from the command operations or",
    "start": "653279",
    "end": "655959"
  },
  {
    "text": "algebra into some result type to do",
    "start": "655959",
    "end": "657920"
  },
  {
    "text": "things right and so the main logic in",
    "start": "657920",
    "end": "660320"
  },
  {
    "text": "here is working out what streams do I",
    "start": "660320",
    "end": "663160"
  },
  {
    "text": "save in and what events to save in right",
    "start": "663160",
    "end": "666399"
  },
  {
    "text": "and that's the the extent of in the the",
    "start": "666399",
    "end": "668839"
  },
  {
    "text": "right side that's where we decide how",
    "start": "668839",
    "end": "671560"
  },
  {
    "text": "our how our events are structured",
    "start": "671560",
    "end": "673680"
  },
  {
    "text": "anything above it we don't really care",
    "start": "673680",
    "end": "675600"
  },
  {
    "text": "about about the",
    "start": "675600",
    "end": "677560"
  },
  {
    "text": "events right so the second part to it is",
    "start": "677560",
    "end": "680200"
  },
  {
    "text": "obviously getting things into our",
    "start": "680200",
    "end": "681639"
  },
  {
    "text": "databases and query views right and",
    "start": "681639",
    "end": "683800"
  },
  {
    "text": "that's taken care of by our query",
    "start": "683800",
    "end": "685920"
  },
  {
    "text": "synchronizer um and so the way we're",
    "start": "685920",
    "end": "688320"
  },
  {
    "text": "modeling our event streams uh is using",
    "start": "688320",
    "end": "690720"
  },
  {
    "text": "Sky stream events or SK stream streams",
    "start": "690720",
    "end": "693839"
  },
  {
    "text": "of events right which is kind of nice",
    "start": "693839",
    "end": "695800"
  },
  {
    "text": "because it it wraps up all the quering",
    "start": "695800",
    "end": "697680"
  },
  {
    "text": "Dynamo and Imagination and so forth and",
    "start": "697680",
    "end": "701160"
  },
  {
    "text": "because it's just um a scet stream or a",
    "start": "701160",
    "end": "704560"
  },
  {
    "text": "query synchronizer is is a scaled stream",
    "start": "704560",
    "end": "706639"
  },
  {
    "text": "channel right an effectful channel that",
    "start": "706639",
    "end": "708160"
  },
  {
    "text": "we write our events through so the",
    "start": "708160",
    "end": "710920"
  },
  {
    "text": "typical logic of a query synchronizer",
    "start": "710920",
    "end": "712880"
  },
  {
    "text": "let's say you know you got relational",
    "start": "712880",
    "end": "714639"
  },
  {
    "text": "database would be first step try to",
    "start": "714639",
    "end": "717480"
  },
  {
    "text": "increment the uh the stream states that",
    "start": "717480",
    "end": "720000"
  },
  {
    "text": "we store locally so obviously each query",
    "start": "720000",
    "end": "721959"
  },
  {
    "text": "view has to know which events it's up to",
    "start": "721959",
    "end": "724880"
  },
  {
    "text": "um so that might be the start of a",
    "start": "724880",
    "end": "726480"
  },
  {
    "text": "transaction and if we're able to",
    "start": "726480",
    "end": "728800"
  },
  {
    "text": "increment our sequence number locally",
    "start": "728800",
    "end": "730639"
  },
  {
    "text": "then do the processing otherwise roll",
    "start": "730639",
    "end": "732720"
  },
  {
    "text": "back because chances are there's another",
    "start": "732720",
    "end": "734120"
  },
  {
    "text": "node that's come in and beat us to it",
    "start": "734120",
    "end": "736839"
  },
  {
    "text": "all right so that's the query",
    "start": "736839",
    "end": "738160"
  },
  {
    "text": "synchronizer but how do we hook that up",
    "start": "738160",
    "end": "739639"
  },
  {
    "text": "to you know Alesis Stream So Kinesis um",
    "start": "739639",
    "end": "743000"
  },
  {
    "text": "if you guys use the Kinesis client",
    "start": "743000",
    "end": "744480"
  },
  {
    "text": "Library basically all you need to",
    "start": "744480",
    "end": "746320"
  },
  {
    "text": "provide is a effectful function from a",
    "start": "746320",
    "end": "748399"
  },
  {
    "text": "list of events",
    "start": "748399",
    "end": "749720"
  },
  {
    "text": "that does something with them right so",
    "start": "749720",
    "end": "751720"
  },
  {
    "text": "we have a couple of choices there so",
    "start": "751720",
    "end": "753440"
  },
  {
    "text": "firstly we can just sort and emit those",
    "start": "753440",
    "end": "756160"
  },
  {
    "text": "events as in scaled stream or we can",
    "start": "756160",
    "end": "758519"
  },
  {
    "text": "actually choose to read the read the",
    "start": "758519",
    "end": "760480"
  },
  {
    "text": "events from Dynamo themselves um and",
    "start": "760480",
    "end": "762760"
  },
  {
    "text": "reading the events from Dynam is",
    "start": "762760",
    "end": "763760"
  },
  {
    "text": "actually quite nice because it handles",
    "start": "763760",
    "end": "765120"
  },
  {
    "text": "the bootstrapping problem right so um if",
    "start": "765120",
    "end": "767680"
  },
  {
    "text": "you guys use Kinesis or CFA there is a",
    "start": "767680",
    "end": "769440"
  },
  {
    "text": "limited amount of events you can store",
    "start": "769440",
    "end": "771560"
  },
  {
    "text": "in event stream like a few days it's",
    "start": "771560",
    "end": "773320"
  },
  {
    "text": "configurable um so obviously you need",
    "start": "773320",
    "end": "776040"
  },
  {
    "text": "but beyond that you need to provide that",
    "start": "776040",
    "end": "777360"
  },
  {
    "text": "kind of initial bootstrap of of a view",
    "start": "777360",
    "end": "779959"
  },
  {
    "text": "right so whereas if you read all the",
    "start": "779959",
    "end": "781240"
  },
  {
    "text": "data out of Dynamo you can sort of get",
    "start": "781240",
    "end": "783480"
  },
  {
    "text": "all the D data you want from the",
    "start": "783480",
    "end": "786160"
  },
  {
    "text": "beginning of",
    "start": "786160",
    "end": "787680"
  },
  {
    "text": "time um so once we had that streamer",
    "start": "787680",
    "end": "790199"
  },
  {
    "text": "events we can just simply pass it",
    "start": "790199",
    "end": "791440"
  },
  {
    "text": "through to our query synchronizer and",
    "start": "791440",
    "end": "793120"
  },
  {
    "text": "you know and just run",
    "start": "793120",
    "end": "794480"
  },
  {
    "text": "it all right so that's our code let's",
    "start": "794480",
    "end": "797120"
  },
  {
    "text": "just step back up a little bit to more I",
    "start": "797120",
    "end": "799639"
  },
  {
    "text": "guess the design aspects um and I guess",
    "start": "799639",
    "end": "802279"
  },
  {
    "text": "one of the things that uh we spent a lot",
    "start": "802279",
    "end": "804000"
  },
  {
    "text": "of time on was how do how do these",
    "start": "804000",
    "end": "805440"
  },
  {
    "text": "events look like right and I think one",
    "start": "805440",
    "end": "807240"
  },
  {
    "text": "of the principles we applied was these",
    "start": "807240",
    "end": "808880"
  },
  {
    "text": "events events are an API and so when we",
    "start": "808880",
    "end": "810959"
  },
  {
    "text": "start designing apis we start thinking",
    "start": "810959",
    "end": "813560"
  },
  {
    "text": "what do consumers want to use okay and",
    "start": "813560",
    "end": "816240"
  },
  {
    "text": "also as producers what do we want",
    "start": "816240",
    "end": "818480"
  },
  {
    "text": "consumers to do what things do we want",
    "start": "818480",
    "end": "820279"
  },
  {
    "text": "them to do things like processing things",
    "start": "820279",
    "end": "822480"
  },
  {
    "text": "ently so how do we kind of encourage",
    "start": "822480",
    "end": "824560"
  },
  {
    "text": "that",
    "start": "824560",
    "end": "825560"
  },
  {
    "text": "behavior right so one of the things we",
    "start": "825560",
    "end": "827639"
  },
  {
    "text": "decided between was okay well at these",
    "start": "827639",
    "end": "829320"
  },
  {
    "text": "events we have a couple of styles we can",
    "start": "829320",
    "end": "830720"
  },
  {
    "text": "choose between we can say you know we",
    "start": "830720",
    "end": "832759"
  },
  {
    "text": "can do insert update style events versus",
    "start": "832759",
    "end": "835240"
  },
  {
    "text": "set payload style events so when I say",
    "start": "835240",
    "end": "837600"
  },
  {
    "text": "insert update I mean okay well when I'm",
    "start": "837600",
    "end": "839360"
  },
  {
    "text": "creating a user I have an ad user event",
    "start": "839360",
    "end": "841920"
  },
  {
    "text": "um and when I update them I sa an update",
    "start": "841920",
    "end": "844160"
  },
  {
    "text": "event with just basically a Delta right",
    "start": "844160",
    "end": "847240"
  },
  {
    "text": "whereas with set events essentially",
    "start": "847240",
    "end": "849240"
  },
  {
    "text": "we're just setting things right so they",
    "start": "849240",
    "end": "850839"
  },
  {
    "text": "might be on a per field basis or maybe",
    "start": "850839",
    "end": "852720"
  },
  {
    "text": "on a in a slightly larger payload basis",
    "start": "852720",
    "end": "855880"
  },
  {
    "text": "but when I update a user literally is",
    "start": "855880",
    "end": "858199"
  },
  {
    "text": "just another set right you can't tell",
    "start": "858199",
    "end": "859720"
  },
  {
    "text": "the difference so the one thing it's",
    "start": "859720",
    "end": "862720"
  },
  {
    "text": "really nice about this insert update",
    "start": "862720",
    "end": "864519"
  },
  {
    "text": "model is that it fits really nice with",
    "start": "864519",
    "end": "865959"
  },
  {
    "text": "the whole rest you know crud stuff right",
    "start": "865959",
    "end": "868079"
  },
  {
    "text": "create up dates um and you can use patch",
    "start": "868079",
    "end": "870920"
  },
  {
    "text": "sort it's really easy to do that um the",
    "start": "870920",
    "end": "873399"
  },
  {
    "text": "problem is though it actually assumes",
    "start": "873399",
    "end": "874920"
  },
  {
    "text": "there's an insert before an object or",
    "start": "874920",
    "end": "876320"
  },
  {
    "text": "there's that implicit assumption right",
    "start": "876320",
    "end": "877880"
  },
  {
    "text": "that there is one insert before any",
    "start": "877880",
    "end": "879720"
  },
  {
    "text": "number of updates um and it's very easy",
    "start": "879720",
    "end": "883800"
  },
  {
    "text": "for consumers to say well I have an",
    "start": "883800",
    "end": "885759"
  },
  {
    "text": "insert event I'm going to translate that",
    "start": "885759",
    "end": "887480"
  },
  {
    "text": "to an insert SQL statement I have an",
    "start": "887480",
    "end": "889800"
  },
  {
    "text": "update event I'm going to translate that",
    "start": "889800",
    "end": "891279"
  },
  {
    "text": "straight into an update SQL statement",
    "start": "891279",
    "end": "893040"
  },
  {
    "text": "and there's no handling of any kind of",
    "start": "893040",
    "end": "894440"
  },
  {
    "text": "errors on the on the on the consumer",
    "start": "894440",
    "end": "896600"
  },
  {
    "text": "side and so we actually hit some",
    "start": "896600",
    "end": "898519"
  },
  {
    "text": "problems with that right because you",
    "start": "898519",
    "end": "900079"
  },
  {
    "text": "know there there may be some cases where",
    "start": "900079",
    "end": "901639"
  },
  {
    "text": "you got contention where you have",
    "start": "901639",
    "end": "903120"
  },
  {
    "text": "multiple rights of or multiple inserts",
    "start": "903120",
    "end": "906120"
  },
  {
    "text": "for the same user so for example if",
    "start": "906120",
    "end": "908639"
  },
  {
    "text": "we're creating a user and we have an",
    "start": "908639",
    "end": "910279"
  },
  {
    "text": "external ID for the user uh we may if",
    "start": "910279",
    "end": "913160"
  },
  {
    "text": "they happen to be having two concurrent",
    "start": "913160",
    "end": "914680"
  },
  {
    "text": "requests to create that same use at the",
    "start": "914680",
    "end": "916279"
  },
  {
    "text": "same time and we don't use any",
    "start": "916279",
    "end": "917720"
  },
  {
    "text": "transaction locking which I will get to",
    "start": "917720",
    "end": "920120"
  },
  {
    "text": "um then you potentially might have two",
    "start": "920120",
    "end": "922240"
  },
  {
    "text": "insert events but that's not actually a",
    "start": "922240",
    "end": "924199"
  },
  {
    "text": "problem right because you know if you",
    "start": "924199",
    "end": "926480"
  },
  {
    "text": "just you can you can because they're in",
    "start": "926480",
    "end": "928160"
  },
  {
    "text": "order you can choose CH which one's",
    "start": "928160",
    "end": "929440"
  },
  {
    "text": "going to win and you can ignore one or",
    "start": "929440",
    "end": "931160"
  },
  {
    "text": "you can you can mun them together right",
    "start": "931160",
    "end": "933120"
  },
  {
    "text": "you shouldn't have to fall",
    "start": "933120",
    "end": "934800"
  },
  {
    "text": "over so we can kind of deal with that by",
    "start": "934800",
    "end": "937639"
  },
  {
    "text": "encouraging identif processing on our",
    "start": "937639",
    "end": "940079"
  },
  {
    "text": "consumer Side by using sets because we",
    "start": "940079",
    "end": "942480"
  },
  {
    "text": "can't tell if we've had an insert or an",
    "start": "942480",
    "end": "944319"
  },
  {
    "text": "update afterwards um we just have no",
    "start": "944319",
    "end": "947079"
  },
  {
    "text": "choice but to process it as an upsert um",
    "start": "947079",
    "end": "951199"
  },
  {
    "text": "and to be honest it kind of makes our",
    "start": "951199",
    "end": "952519"
  },
  {
    "text": "code on the on the quer on the consumer",
    "start": "952519",
    "end": "954399"
  },
  {
    "text": "side Lot simpler right because you just",
    "start": "954399",
    "end": "955759"
  },
  {
    "text": "have to think about sets it is an upsert",
    "start": "955759",
    "end": "957880"
  },
  {
    "text": "you don't have to worry about multiple",
    "start": "957880",
    "end": "959800"
  },
  {
    "text": "cases um but we do have to bear in mind",
    "start": "959800",
    "end": "962279"
  },
  {
    "text": "that the size of the set payloads are",
    "start": "962279",
    "end": "964160"
  },
  {
    "text": "actually quite important right because",
    "start": "964160",
    "end": "965440"
  },
  {
    "text": "if they're too big what ends up",
    "start": "965440",
    "end": "966959"
  },
  {
    "text": "happening is you end up reading an old",
    "start": "966959",
    "end": "968680"
  },
  {
    "text": "view of the data and then updating a",
    "start": "968680",
    "end": "971199"
  },
  {
    "text": "field and save the entire payload again",
    "start": "971199",
    "end": "973000"
  },
  {
    "text": "which obviously means you can possibly",
    "start": "973000",
    "end": "974680"
  },
  {
    "text": "overwrite non-conflicting changes so",
    "start": "974680",
    "end": "976720"
  },
  {
    "text": "what we end up doing is having really",
    "start": "976720",
    "end": "978120"
  },
  {
    "text": "small set events um and to be honest the",
    "start": "978120",
    "end": "980240"
  },
  {
    "text": "way we model things events are you know",
    "start": "980240",
    "end": "982519"
  },
  {
    "text": "maybe one or two fields at most we",
    "start": "982519",
    "end": "984360"
  },
  {
    "text": "basically choose the field the fields",
    "start": "984360",
    "end": "986160"
  },
  {
    "text": "we're going to modify together and save",
    "start": "986160",
    "end": "987959"
  },
  {
    "text": "it as one one one big",
    "start": "987959",
    "end": "989959"
  },
  {
    "text": "payload so that's what we kind of do um",
    "start": "989959",
    "end": "993120"
  },
  {
    "text": "so the next question we sort of",
    "start": "993120",
    "end": "995199"
  },
  {
    "text": "struggled with um was or had arguments",
    "start": "995199",
    "end": "997519"
  },
  {
    "text": "about is um is how many streams do we",
    "start": "997519",
    "end": "1000680"
  },
  {
    "text": "have right so we so you know the",
    "start": "1000680",
    "end": "1002759"
  },
  {
    "text": "original example we had a single stream",
    "start": "1002759",
    "end": "1004240"
  },
  {
    "text": "where all events can go into and that's",
    "start": "1004240",
    "end": "1006720"
  },
  {
    "text": "kind of nice because you can can do",
    "start": "1006720",
    "end": "1008800"
  },
  {
    "text": "transactions and consistent resolution",
    "start": "1008800",
    "end": "1010959"
  },
  {
    "text": "there right so with you know a single",
    "start": "1010959",
    "end": "1013240"
  },
  {
    "text": "stream you can say I only I I can I",
    "start": "1013240",
    "end": "1016240"
  },
  {
    "text": "using the condition condition of Rights",
    "start": "1016240",
    "end": "1018279"
  },
  {
    "text": "you can say",
    "start": "1018279",
    "end": "1020360"
  },
  {
    "text": "confirm that I'm the only writer to this",
    "start": "1020360",
    "end": "1022120"
  },
  {
    "text": "stream so that means I can essentially",
    "start": "1022120",
    "end": "1024000"
  },
  {
    "text": "lock it and I have a transaction it's",
    "start": "1024000",
    "end": "1025760"
  },
  {
    "text": "course transaction but it is still a",
    "start": "1025760",
    "end": "1027199"
  },
  {
    "text": "transaction so that you know people are",
    "start": "1027199",
    "end": "1028798"
  },
  {
    "text": "happy with transactions um or",
    "start": "1028799",
    "end": "1031280"
  },
  {
    "text": "alternatively I can say well because the",
    "start": "1031280",
    "end": "1033000"
  },
  {
    "text": "events are all in order I replayed them",
    "start": "1033000",
    "end": "1034600"
  },
  {
    "text": "order I have a guarantee way of",
    "start": "1034600",
    "end": "1036520"
  },
  {
    "text": "resolving things I can choose the first",
    "start": "1036520",
    "end": "1038079"
  },
  {
    "text": "one wins or the last one wins the",
    "start": "1038079",
    "end": "1040798"
  },
  {
    "text": "problem with this of course is when you",
    "start": "1040799",
    "end": "1042199"
  },
  {
    "text": "have one when you have lock and you have",
    "start": "1042199",
    "end": "1044280"
  },
  {
    "text": "one way of doing one sort of stream of",
    "start": "1044280",
    "end": "1046280"
  },
  {
    "text": "doing things you have contention right",
    "start": "1046280",
    "end": "1047959"
  },
  {
    "text": "you only have one rar one reader",
    "start": "1047959",
    "end": "1049720"
  },
  {
    "text": "essentially so with multiple streams",
    "start": "1049720",
    "end": "1051960"
  },
  {
    "text": "allows you to sh of throughput right it",
    "start": "1051960",
    "end": "1053559"
  },
  {
    "text": "gives you the ability to basically scale",
    "start": "1053559",
    "end": "1055000"
  },
  {
    "text": "it as much as you need to so I guess the",
    "start": "1055000",
    "end": "1057679"
  },
  {
    "text": "rules that we were applying was",
    "start": "1057679",
    "end": "1060360"
  },
  {
    "text": "basically split as much as you can right",
    "start": "1060360",
    "end": "1062960"
  },
  {
    "text": "so put event independent events on",
    "start": "1062960",
    "end": "1064520"
  },
  {
    "text": "different streams if two different users",
    "start": "1064520",
    "end": "1066520"
  },
  {
    "text": "want to update their own display names",
    "start": "1066520",
    "end": "1068200"
  },
  {
    "text": "why do they need to content they're two",
    "start": "1068200",
    "end": "1070120"
  },
  {
    "text": "different people just let them write",
    "start": "1070120",
    "end": "1071760"
  },
  {
    "text": "when they need",
    "start": "1071760",
    "end": "1072720"
  },
  {
    "text": "to um and also remember that when you",
    "start": "1072720",
    "end": "1075120"
  },
  {
    "text": "split streams you have a couple of",
    "start": "1075120",
    "end": "1076440"
  },
  {
    "text": "Dimensions there right so you can choose",
    "start": "1076440",
    "end": "1078000"
  },
  {
    "text": "to split by event type or entity type so",
    "start": "1078000",
    "end": "1080600"
  },
  {
    "text": "maybe user events versus group events",
    "start": "1080600",
    "end": "1082760"
  },
  {
    "text": "but also by our unique IDs so imagine",
    "start": "1082760",
    "end": "1085840"
  },
  {
    "text": "you can have per user use event streams",
    "start": "1085840",
    "end": "1089280"
  },
  {
    "text": "it gives you a little bit more",
    "start": "1089280",
    "end": "1090159"
  },
  {
    "text": "flexibility",
    "start": "1090159",
    "end": "1091360"
  },
  {
    "text": "there coming back to the to transaction",
    "start": "1091360",
    "end": "1093880"
  },
  {
    "text": "topic so I guess one of the things you",
    "start": "1093880",
    "end": "1095400"
  },
  {
    "text": "really need to we found we need to do",
    "start": "1095400",
    "end": "1097280"
  },
  {
    "text": "was really question what transactions",
    "start": "1097280",
    "end": "1099840"
  },
  {
    "text": "what constraints what uniqueness",
    "start": "1099840",
    "end": "1101320"
  },
  {
    "text": "constraints do you really need okay just",
    "start": "1101320",
    "end": "1103320"
  },
  {
    "text": "because the existing system has them",
    "start": "1103320",
    "end": "1105200"
  },
  {
    "text": "doesn't mean they're actually business",
    "start": "1105200",
    "end": "1106880"
  },
  {
    "text": "requirements okay and that's really",
    "start": "1106880",
    "end": "1109120"
  },
  {
    "text": "important because that allows you to",
    "start": "1109120",
    "end": "1110520"
  },
  {
    "text": "reduce your scope of your work and make",
    "start": "1110520",
    "end": "1111960"
  },
  {
    "text": "things a lot simpler now if you do",
    "start": "1111960",
    "end": "1114640"
  },
  {
    "text": "actually do want to have kind of that",
    "start": "1114640",
    "end": "1116159"
  },
  {
    "text": "transactionality so you want to have",
    "start": "1116159",
    "end": "1117960"
  },
  {
    "text": "unique emails you kind of have to have",
    "start": "1117960",
    "end": "1119520"
  },
  {
    "text": "some locking on that that's fine you can",
    "start": "1119520",
    "end": "1121559"
  },
  {
    "text": "kind of use a more hierarchical stream",
    "start": "1121559",
    "end": "1123440"
  },
  {
    "text": "approach right so for example we have an",
    "start": "1123440",
    "end": "1125320"
  },
  {
    "text": "event stream that has all all user",
    "start": "1125320",
    "end": "1127440"
  },
  {
    "text": "emails only but everything else we put",
    "start": "1127440",
    "end": "1129840"
  },
  {
    "text": "on per user streams because you know we",
    "start": "1129840",
    "end": "1131559"
  },
  {
    "text": "don't care about them so that means you",
    "start": "1131559",
    "end": "1133240"
  },
  {
    "text": "know we want to update an email which",
    "start": "1133240",
    "end": "1135480"
  },
  {
    "text": "may which doesn't happen that often",
    "start": "1135480",
    "end": "1137679"
  },
  {
    "text": "that's fine right you know it's there's",
    "start": "1137679",
    "end": "1139120"
  },
  {
    "text": "a bit of contention there but that's",
    "start": "1139120",
    "end": "1140320"
  },
  {
    "text": "okay everything else we can we can",
    "start": "1140320",
    "end": "1141840"
  },
  {
    "text": "perform as much as we need",
    "start": "1141840",
    "end": "1143760"
  },
  {
    "text": "to um and the last thing to remember is",
    "start": "1143760",
    "end": "1147039"
  },
  {
    "text": "I mean events are immutable um but you",
    "start": "1147039",
    "end": "1149600"
  },
  {
    "text": "can sort of change them you can change",
    "start": "1149600",
    "end": "1151039"
  },
  {
    "text": "schemas over time right you can split",
    "start": "1151039",
    "end": "1152559"
  },
  {
    "text": "you can join streams it's not",
    "start": "1152559",
    "end": "1154480"
  },
  {
    "text": "necessarily trivial but it is possible",
    "start": "1154480",
    "end": "1157120"
  },
  {
    "text": "so you know just bear it in mind there",
    "start": "1157120",
    "end": "1158320"
  },
  {
    "text": "is flexibility",
    "start": "1158320",
    "end": "1159600"
  },
  {
    "text": "there now I've kind of touched on this a",
    "start": "1159600",
    "end": "1161679"
  },
  {
    "text": "little bit",
    "start": "1161679",
    "end": "1163240"
  },
  {
    "text": "um yeah we kind of touch on this a",
    "start": "1163240",
    "end": "1165039"
  },
  {
    "text": "little bit around transactions right and",
    "start": "1165039",
    "end": "1166880"
  },
  {
    "text": "consistency right and whenever we start",
    "start": "1166880",
    "end": "1168799"
  },
  {
    "text": "into the whole distributor system",
    "start": "1168799",
    "end": "1170000"
  },
  {
    "text": "especially with something like cqrs you",
    "start": "1170000",
    "end": "1172400"
  },
  {
    "text": "kind of have to let go of these Concepts",
    "start": "1172400",
    "end": "1174240"
  },
  {
    "text": "a bit and getting people to let go of",
    "start": "1174240",
    "end": "1175840"
  },
  {
    "text": "those Concepts is quite difficult right",
    "start": "1175840",
    "end": "1178400"
  },
  {
    "text": "but it has some specific implications",
    "start": "1178400",
    "end": "1180159"
  },
  {
    "text": "how you design your system so let's",
    "start": "1180159",
    "end": "1182360"
  },
  {
    "text": "start with how queer reviews get",
    "start": "1182360",
    "end": "1184080"
  },
  {
    "text": "populated so you think about um",
    "start": "1184080",
    "end": "1187559"
  },
  {
    "text": "critically when we have these events",
    "start": "1187559",
    "end": "1189799"
  },
  {
    "text": "streams there's no ordering of of events",
    "start": "1189799",
    "end": "1192440"
  },
  {
    "text": "between event streams they're completely",
    "start": "1192440",
    "end": "1194039"
  },
  {
    "text": "independent that's why we get the",
    "start": "1194039",
    "end": "1195080"
  },
  {
    "text": "performance out of them all right so",
    "start": "1195080",
    "end": "1198080"
  },
  {
    "text": "what this means is a single field in",
    "start": "1198080",
    "end": "1200120"
  },
  {
    "text": "your query view can only be updated by a",
    "start": "1200120",
    "end": "1202559"
  },
  {
    "text": "single event stream so single event",
    "start": "1202559",
    "end": "1204480"
  },
  {
    "text": "stream might update multiple fields or",
    "start": "1204480",
    "end": "1206240"
  },
  {
    "text": "multiple table so we actually have it on",
    "start": "1206240",
    "end": "1207760"
  },
  {
    "text": "a per table level but you can only have",
    "start": "1207760",
    "end": "1210240"
  },
  {
    "text": "one field or if you choose one table",
    "start": "1210240",
    "end": "1212280"
  },
  {
    "text": "update it by a single event stream",
    "start": "1212280",
    "end": "1214320"
  },
  {
    "text": "otherwi that way you can at least",
    "start": "1214320",
    "end": "1215640"
  },
  {
    "text": "guarantee a or you you know you can get",
    "start": "1215640",
    "end": "1218280"
  },
  {
    "text": "a a consistent result for a particular",
    "start": "1218280",
    "end": "1220480"
  },
  {
    "text": "value or",
    "start": "1220480",
    "end": "1222039"
  },
  {
    "text": "field um it also means you have to throw",
    "start": "1222039",
    "end": "1224679"
  },
  {
    "text": "away your foreign key constraints right",
    "start": "1224679",
    "end": "1226000"
  },
  {
    "text": "they don't add any value here right the",
    "start": "1226000",
    "end": "1227960"
  },
  {
    "text": "reason being if you have your ref you're",
    "start": "1227960",
    "end": "1229960"
  },
  {
    "text": "referring to a value that's on another",
    "start": "1229960",
    "end": "1231600"
  },
  {
    "text": "stream there's no guarantee that that",
    "start": "1231600",
    "end": "1233520"
  },
  {
    "text": "stream's going to be replayed by the",
    "start": "1233520",
    "end": "1234679"
  },
  {
    "text": "time you insert your value okay so that",
    "start": "1234679",
    "end": "1237960"
  },
  {
    "text": "does mean your your consumer side and",
    "start": "1237960",
    "end": "1239559"
  },
  {
    "text": "your joins or whatever table you know",
    "start": "1239559",
    "end": "1241320"
  },
  {
    "text": "what joins on your SQL table you have to",
    "start": "1241320",
    "end": "1242760"
  },
  {
    "text": "be smart and you have to make that",
    "start": "1242760",
    "end": "1244039"
  },
  {
    "text": "decision as to what does it mean for an",
    "start": "1244039",
    "end": "1245919"
  },
  {
    "text": "entity to exist do I need to join what",
    "start": "1245919",
    "end": "1247880"
  },
  {
    "text": "happens if you know the value doesn't",
    "start": "1247880",
    "end": "1249440"
  },
  {
    "text": "exist do I make a dummy value do I just",
    "start": "1249440",
    "end": "1250840"
  },
  {
    "text": "say no that entity doesn't exist at all",
    "start": "1250840",
    "end": "1253039"
  },
  {
    "text": "um you need to think about it but yeah",
    "start": "1253039",
    "end": "1255080"
  },
  {
    "text": "there are no fore key constraints this",
    "start": "1255080",
    "end": "1256679"
  },
  {
    "text": "is actually a hard one to get rid of",
    "start": "1256679",
    "end": "1257760"
  },
  {
    "text": "because people were so I need to have",
    "start": "1257760",
    "end": "1259360"
  },
  {
    "text": "referential integrity",
    "start": "1259360",
    "end": "1261440"
  },
  {
    "text": "everywhere um the other thing is on that",
    "start": "1261440",
    "end": "1264840"
  },
  {
    "text": "note so uniqueness and data constraints",
    "start": "1264840",
    "end": "1267120"
  },
  {
    "text": "really we should be enforcing them on",
    "start": "1267120",
    "end": "1268240"
  },
  {
    "text": "the right okay there's no point having",
    "start": "1268240",
    "end": "1270039"
  },
  {
    "text": "unique indices and check constraints",
    "start": "1270039",
    "end": "1272440"
  },
  {
    "text": "stuff on your on your SQL scheme right",
    "start": "1272440",
    "end": "1274279"
  },
  {
    "text": "because it's after the fact the events",
    "start": "1274279",
    "end": "1275799"
  },
  {
    "text": "have been written why make your career",
    "start": "1275799",
    "end": "1277840"
  },
  {
    "text": "views sort of fragile and brittle um",
    "start": "1277840",
    "end": "1281200"
  },
  {
    "text": "when you should put well yeah when you",
    "start": "1281200",
    "end": "1283039"
  },
  {
    "text": "if you want those kind of business",
    "start": "1283039",
    "end": "1284200"
  },
  {
    "text": "constraints enforce them on the command",
    "start": "1284200",
    "end": "1286799"
  },
  {
    "text": "side",
    "start": "1286799",
    "end": "1289039"
  },
  {
    "text": "all right so that's quer so coming back",
    "start": "1289039",
    "end": "1291360"
  },
  {
    "text": "to transactions and consistency so I",
    "start": "1291360",
    "end": "1293440"
  },
  {
    "text": "mean one of the nice things about event",
    "start": "1293440",
    "end": "1295480"
  },
  {
    "text": "sourcing over just traditional just you",
    "start": "1295480",
    "end": "1297679"
  },
  {
    "text": "know distribute systems is you have the",
    "start": "1297679",
    "end": "1299640"
  },
  {
    "text": "on distribute data is you have kind of",
    "start": "1299640",
    "end": "1301400"
  },
  {
    "text": "the option of doing transactions in and",
    "start": "1301400",
    "end": "1303559"
  },
  {
    "text": "consistency I guess we call this concept",
    "start": "1303559",
    "end": "1305880"
  },
  {
    "text": "of um called tokens in a sense right so",
    "start": "1305880",
    "end": "1308400"
  },
  {
    "text": "a way of",
    "start": "1308400",
    "end": "1310120"
  },
  {
    "text": "saying for a given entity or view of the",
    "start": "1310120",
    "end": "1312799"
  },
  {
    "text": "entity at a particular point in time we",
    "start": "1312799",
    "end": "1314919"
  },
  {
    "text": "can sort of denote what we if we recall",
    "start": "1314919",
    "end": "1317799"
  },
  {
    "text": "what sequence numberb for what streams",
    "start": "1317799",
    "end": "1319480"
  },
  {
    "text": "that view represents we can use that to",
    "start": "1319480",
    "end": "1322039"
  },
  {
    "text": "sort of identify provide some level of",
    "start": "1322039",
    "end": "1324640"
  },
  {
    "text": "transactionality and consistency for",
    "start": "1324640",
    "end": "1326400"
  },
  {
    "text": "people so what I mean so for example",
    "start": "1326400",
    "end": "1329120"
  },
  {
    "text": "user Homer we have a you know it has a",
    "start": "1329120",
    "end": "1330840"
  },
  {
    "text": "username and so forth at a point in time",
    "start": "1330840",
    "end": "1332840"
  },
  {
    "text": "it gets data from an all user stream and",
    "start": "1332840",
    "end": "1335120"
  },
  {
    "text": "this particular view has um is at",
    "start": "1335120",
    "end": "1337960"
  },
  {
    "text": "sequence number 100 for that all user",
    "start": "1337960",
    "end": "1339559"
  },
  {
    "text": "stream um and on the per user Homer",
    "start": "1339559",
    "end": "1342039"
  },
  {
    "text": "stream it he's up to seqence number 23",
    "start": "1342039",
    "end": "1344520"
  },
  {
    "text": "so what we do is we pass that back to",
    "start": "1344520",
    "end": "1346720"
  },
  {
    "text": "consumers in our rest API of our core",
    "start": "1346720",
    "end": "1348240"
  },
  {
    "text": "application",
    "start": "1348240",
    "end": "1349039"
  },
  {
    "text": "as an eag right um and so whenever a",
    "start": "1349039",
    "end": "1351880"
  },
  {
    "text": "consumer wants to do any transactions or",
    "start": "1351880",
    "end": "1354000"
  },
  {
    "text": "have enforced any things like read after",
    "start": "1354000",
    "end": "1355840"
  },
  {
    "text": "right consistency we can pass them back",
    "start": "1355840",
    "end": "1357919"
  },
  {
    "text": "through so for conditional rights we can",
    "start": "1357919",
    "end": "1360039"
  },
  {
    "text": "say well I can say ensure for rights I",
    "start": "1360039",
    "end": "1363000"
  },
  {
    "text": "can ensure that your students must be at",
    "start": "1363000",
    "end": "1364960"
  },
  {
    "text": "this point in time otherwise you know",
    "start": "1364960",
    "end": "1366440"
  },
  {
    "text": "the right will fail right or transaction",
    "start": "1366440",
    "end": "1368679"
  },
  {
    "text": "in a",
    "start": "1368679",
    "end": "1369679"
  },
  {
    "text": "sense uh we can also say well career",
    "start": "1369679",
    "end": "1373039"
  },
  {
    "text": "view I want to pass this token in make",
    "start": "1373039",
    "end": "1374720"
  },
  {
    "text": "sure that your career viiew is updated",
    "start": "1374720",
    "end": "1376279"
  },
  {
    "text": "to at least this point in time um and",
    "start": "1376279",
    "end": "1378600"
  },
  {
    "text": "sort of that gives you that consistency",
    "start": "1378600",
    "end": "1380400"
  },
  {
    "text": "view if you wish at the expense of",
    "start": "1380400",
    "end": "1382159"
  },
  {
    "text": "latency right and availability um and of",
    "start": "1382159",
    "end": "1385080"
  },
  {
    "text": "course being an eag you can kind of use",
    "start": "1385080",
    "end": "1386520"
  },
  {
    "text": "it for caching as a primitive level",
    "start": "1386520",
    "end": "1388000"
  },
  {
    "text": "caching at least as well which is kind",
    "start": "1388000",
    "end": "1389159"
  },
  {
    "text": "of nifty so as an example that kind of",
    "start": "1389159",
    "end": "1391840"
  },
  {
    "text": "comes up a lot is let's say we have a",
    "start": "1391840",
    "end": "1393520"
  },
  {
    "text": "user you have group and you want to add",
    "start": "1393520",
    "end": "1395600"
  },
  {
    "text": "a user to a group right so the logic",
    "start": "1395600",
    "end": "1397799"
  },
  {
    "text": "should be that you know the user in",
    "start": "1397799",
    "end": "1399320"
  },
  {
    "text": "group must exist so how do we enforce",
    "start": "1399320",
    "end": "1401440"
  },
  {
    "text": "that so you have a client you have our",
    "start": "1401440",
    "end": "1403760"
  },
  {
    "text": "core application we create a user core",
    "start": "1403760",
    "end": "1406400"
  },
  {
    "text": "returns a token for that user create a",
    "start": "1406400",
    "end": "1408159"
  },
  {
    "text": "group",
    "start": "1408159",
    "end": "1409240"
  },
  {
    "text": "token return that token for a group um",
    "start": "1409240",
    "end": "1411679"
  },
  {
    "text": "and we say when we want add use to a",
    "start": "1411679",
    "end": "1413200"
  },
  {
    "text": "group we pass through the two tokens we",
    "start": "1413200",
    "end": "1414840"
  },
  {
    "text": "get to say please make sure we are at",
    "start": "1414840",
    "end": "1417400"
  },
  {
    "text": "least we are at least reading data at",
    "start": "1417400",
    "end": "1420279"
  },
  {
    "text": "these tokens and then you can perform",
    "start": "1420279",
    "end": "1422080"
  },
  {
    "text": "your business logic all right so the cor",
    "start": "1422080",
    "end": "1424559"
  },
  {
    "text": "will then ensure the query ensure the",
    "start": "1424559",
    "end": "1427240"
  },
  {
    "text": "query Sy is up to that point do the",
    "start": "1427240",
    "end": "1429159"
  },
  {
    "text": "logic say yes my user and group exists",
    "start": "1429159",
    "end": "1431159"
  },
  {
    "text": "if so great we do the right and then we",
    "start": "1431159",
    "end": "1433840"
  },
  {
    "text": "return an updated token if we need to",
    "start": "1433840",
    "end": "1436559"
  },
  {
    "text": "all right so we kind of get to the the",
    "start": "1436559",
    "end": "1438559"
  },
  {
    "text": "end um so what are the the key takeaways",
    "start": "1438559",
    "end": "1441760"
  },
  {
    "text": "here um so one of things uh I guess we I",
    "start": "1441760",
    "end": "1445400"
  },
  {
    "text": "regret doing is um not starting small",
    "start": "1445400",
    "end": "1447520"
  },
  {
    "text": "enough so I really do say so event",
    "start": "1447520",
    "end": "1449559"
  },
  {
    "text": "sourcing first try first time you try",
    "start": "1449559",
    "end": "1452240"
  },
  {
    "text": "and doing it start really small find",
    "start": "1452240",
    "end": "1454039"
  },
  {
    "text": "your domain shrink it even more question",
    "start": "1454039",
    "end": "1456960"
  },
  {
    "text": "everything right challenge everything",
    "start": "1456960",
    "end": "1458679"
  },
  {
    "text": "just because existing system does it",
    "start": "1458679",
    "end": "1460320"
  },
  {
    "text": "doesn't mean you should be doing it um",
    "start": "1460320",
    "end": "1462120"
  },
  {
    "text": "and this actually has implication your",
    "start": "1462120",
    "end": "1463320"
  },
  {
    "text": "team as well right so your team needs to",
    "start": "1463320",
    "end": "1465720"
  },
  {
    "text": "be willing to challenge it you need to",
    "start": "1465720",
    "end": "1467000"
  },
  {
    "text": "get the right people on your team to say",
    "start": "1467000",
    "end": "1468200"
  },
  {
    "text": "hey",
    "start": "1468200",
    "end": "1469360"
  },
  {
    "text": "look why do we need these requirements",
    "start": "1469360",
    "end": "1472399"
  },
  {
    "text": "do we you know and they need to be",
    "start": "1472399",
    "end": "1473919"
  },
  {
    "text": "willing to try things out okay that's",
    "start": "1473919",
    "end": "1475760"
  },
  {
    "text": "really",
    "start": "1475760",
    "end": "1476840"
  },
  {
    "text": "important um the second thing is yeah",
    "start": "1476840",
    "end": "1479559"
  },
  {
    "text": "that whole incremental architecture",
    "start": "1479559",
    "end": "1480880"
  },
  {
    "text": "approach was actually really nice for us",
    "start": "1480880",
    "end": "1482279"
  },
  {
    "text": "because you know we introduced the",
    "start": "1482279",
    "end": "1483880"
  },
  {
    "text": "concept of EV sourcing to begin with and",
    "start": "1483880",
    "end": "1485919"
  },
  {
    "text": "then slowly sort of spiked out cqrs and",
    "start": "1485919",
    "end": "1489159"
  },
  {
    "text": "introduced you know sort of gradually to",
    "start": "1489159",
    "end": "1491039"
  },
  {
    "text": "people on the ride for us right so the",
    "start": "1491039",
    "end": "1492240"
  },
  {
    "text": "guys who were a little bit more",
    "start": "1492240",
    "end": "1493279"
  },
  {
    "text": "resistant they sort of started to get",
    "start": "1493279",
    "end": "1494679"
  },
  {
    "text": "along okay then this is starting to make",
    "start": "1494679",
    "end": "1496279"
  },
  {
    "text": "sense right um if we were to say we're",
    "start": "1496279",
    "end": "1498520"
  },
  {
    "text": "building cqrs and event sourcing right",
    "start": "1498520",
    "end": "1500159"
  },
  {
    "text": "from the beginning um I think we would",
    "start": "1500159",
    "end": "1501520"
  },
  {
    "text": "have been sort of kicked out the",
    "start": "1501520",
    "end": "1504240"
  },
  {
    "text": "door um in terms of actual design I",
    "start": "1504240",
    "end": "1507279"
  },
  {
    "text": "think yeah thinking events as an API is",
    "start": "1507279",
    "end": "1508840"
  },
  {
    "text": "really important so you know set events",
    "start": "1508840",
    "end": "1510279"
  },
  {
    "text": "small payloads split event streams get",
    "start": "1510279",
    "end": "1512840"
  },
  {
    "text": "that just do that to begin with um yeah",
    "start": "1512840",
    "end": "1515679"
  },
  {
    "text": "we had a lot of discussions around that",
    "start": "1515679",
    "end": "1517159"
  },
  {
    "text": "but be comfortable to split all right",
    "start": "1517159",
    "end": "1519480"
  },
  {
    "text": "gives you the performance you don't have",
    "start": "1519480",
    "end": "1520600"
  },
  {
    "text": "to come and revisit it later",
    "start": "1520600",
    "end": "1522360"
  },
  {
    "text": "on and finally I mean although there are",
    "start": "1522360",
    "end": "1525279"
  },
  {
    "text": "those transactions and consistency",
    "start": "1525279",
    "end": "1526720"
  },
  {
    "text": "tokens to handle consistency um to be",
    "start": "1526720",
    "end": "1529360"
  },
  {
    "text": "honest we kind of have to live we have",
    "start": "1529360",
    "end": "1531120"
  },
  {
    "text": "to get comfortable with these weekly",
    "start": "1531120",
    "end": "1532640"
  },
  {
    "text": "transaction semantics and eventual",
    "start": "1532640",
    "end": "1534200"
  },
  {
    "text": "consistency right we just need to cap",
    "start": "1534200",
    "end": "1535919"
  },
  {
    "text": "theum tells to do that um just get",
    "start": "1535919",
    "end": "1538840"
  },
  {
    "text": "comfortable with it so couple things",
    "start": "1538840",
    "end": "1541440"
  },
  {
    "text": "I'll leave you with so I was at a recent",
    "start": "1541440",
    "end": "1543480"
  },
  {
    "text": "uh at a y night with Martin Fowler",
    "start": "1543480",
    "end": "1545240"
  },
  {
    "text": "recently and you know he talking about",
    "start": "1545240",
    "end": "1546279"
  },
  {
    "text": "event sourcing I was like yes you know",
    "start": "1546279",
    "end": "1547880"
  },
  {
    "text": "he's talking about event sourcing and",
    "start": "1547880",
    "end": "1549440"
  },
  {
    "text": "one of the things that I remember him",
    "start": "1549440",
    "end": "1550399"
  },
  {
    "text": "saying this is me Loosely paraphrasing",
    "start": "1550399",
    "end": "1552159"
  },
  {
    "text": "him was we as a community really should",
    "start": "1552159",
    "end": "1554039"
  },
  {
    "text": "be using event sourcing more than we do",
    "start": "1554039",
    "end": "1556080"
  },
  {
    "text": "right it's a really important concept",
    "start": "1556080",
    "end": "1557720"
  },
  {
    "text": "it's actually not that complicated it's",
    "start": "1557720",
    "end": "1559080"
  },
  {
    "text": "pretty simple but it's really powerful",
    "start": "1559080",
    "end": "1560480"
  },
  {
    "text": "right so you might not apply it",
    "start": "1560480",
    "end": "1562080"
  },
  {
    "text": "everywhere but applying to the core",
    "start": "1562080",
    "end": "1563600"
  },
  {
    "text": "parts of your various systems could add",
    "start": "1563600",
    "end": "1565000"
  },
  {
    "text": "you give you a lot of business",
    "start": "1565000",
    "end": "1566880"
  },
  {
    "text": "value um and the last thing I'll leave",
    "start": "1566880",
    "end": "1568760"
  },
  {
    "text": "you with is so we've so last year we",
    "start": "1568760",
    "end": "1571320"
  },
  {
    "text": "talked about our Event Source Library so",
    "start": "1571320",
    "end": "1573279"
  },
  {
    "text": "we've obviously be involving that over",
    "start": "1573279",
    "end": "1574640"
  },
  {
    "text": "the last year so feel free to check that",
    "start": "1574640",
    "end": "1576640"
  },
  {
    "text": "out and um yeah um happy that answer any",
    "start": "1576640",
    "end": "1580399"
  },
  {
    "text": "questions",
    "start": "1580399",
    "end": "1583240"
  },
  {
    "text": "[Applause]",
    "start": "1583240",
    "end": "1587950"
  }
]