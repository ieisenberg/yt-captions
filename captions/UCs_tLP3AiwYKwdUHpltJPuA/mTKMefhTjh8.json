[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "(uplifting music)",
    "start": "0",
    "end": "3183"
  },
  {
    "text": "- Hello everybody, thank\nyou for joining me today. My name is Alex Dima, I'm\na senior software engineer",
    "start": "10836",
    "end": "18084"
  },
  {
    "text": "on the Visual Studio\nCode team at Microsoft. We're working out of Zurich,\nand today I would like to",
    "start": "18084",
    "end": "25324"
  },
  {
    "text": "tell you a little bit about some of the lessons we've\nlearned while developing",
    "start": "25325",
    "end": "31264"
  },
  {
    "text": "and shipping Visual Studio code. And I will try to give some insights into what we've been doing\nand to what we've learned,",
    "start": "31264",
    "end": "39005"
  },
  {
    "text": "and hopefully this would also help you in what you're doing as well.",
    "start": "39005",
    "end": "44066"
  },
  {
    "text": "Yeah, first a reminder to rate the talk.",
    "start": "46146",
    "end": "49805"
  },
  {
    "text": "So this is basically Visual Studio code. I'm sorry if you cannot\nreally see it that well.",
    "start": "51572",
    "end": "57090"
  },
  {
    "text": "This is what we ship every month, and I hope you know actually\nquite a lot about it",
    "start": "57090",
    "end": "63629"
  },
  {
    "start": "60000",
    "end": "128000"
  },
  {
    "text": "from Eric's talk earlier. In reality, we actually\nship two different things.",
    "start": "63630",
    "end": "69602"
  },
  {
    "text": "So we Visual Studio code, which\nis more or less a web app.",
    "start": "69602",
    "end": "74168"
  },
  {
    "text": "So it's an app built using JavaScript, built using no Node.js API\nbuilt on top of a browser API,",
    "start": "76289",
    "end": "84582"
  },
  {
    "text": "and they all come in\nthe shape of Electron, Electron basically consisting of a merger",
    "start": "86386",
    "end": "91758"
  },
  {
    "text": "between Chromium and Node.js. But at the same time, we ship a library",
    "start": "91758",
    "end": "96796"
  },
  {
    "text": "which we call the Monaco Editor,\nwhich more or less contains the thing in red over there.",
    "start": "96796",
    "end": "102224"
  },
  {
    "text": "We take that thing out of our product and we ship it separately\nas a JavaScript library",
    "start": "102224",
    "end": "109075"
  },
  {
    "text": "that can run in any modern web browser. So if you have an app\nwhere you're showing code,",
    "start": "109075",
    "end": "115981"
  },
  {
    "text": "you can actually, even\ntoday, go on NPM and fetch the Monaco editor node module.",
    "start": "115982",
    "end": "122455"
  },
  {
    "text": "I'm still working on the documentation, so it's still a work\nin progress, but yeah.",
    "start": "122455",
    "end": "126943"
  },
  {
    "start": "128000",
    "end": "361000"
  },
  {
    "text": "So that's what we do today,\nbut we didn't start doing that, and we actually started since\nquite a number of years.",
    "start": "129762",
    "end": "137036"
  },
  {
    "text": "Actually, since the autumn of 2011. And back at the time, as Eric mentioned,",
    "start": "137036",
    "end": "144293"
  },
  {
    "text": "we were given the mission\nto redefine and create a developer experience\nor development tools",
    "start": "144293",
    "end": "151885"
  },
  {
    "text": "that work in the browser. So at the time, we actually\nstarted in JavaScript.",
    "start": "151885",
    "end": "157650"
  },
  {
    "text": "Our patterns were consisting more or less of trying to create classes\nwhere in JavaScript,",
    "start": "160769",
    "end": "166766"
  },
  {
    "text": "you would use prototypical\ninheritance and so on. So we would literally\nsay function my class,",
    "start": "166766",
    "end": "173540"
  },
  {
    "text": "myclass.prototype.foo equals something. So we would all right idiomatic JavaScript",
    "start": "173540",
    "end": "179546"
  },
  {
    "text": "to try to create some sort\nof classes and patterns and types in our source code.",
    "start": "179546",
    "end": "184951"
  },
  {
    "text": "One thing we got right from the beginning is that we jumped straight on promises",
    "start": "184951",
    "end": "190156"
  },
  {
    "text": "as a way to abstract away\nasynchronicity, right? So whenever we built something in the UI,",
    "start": "190156",
    "end": "197163"
  },
  {
    "text": "whenever we had to compute something, so for example you move your\nmouse over a piece of text",
    "start": "197163",
    "end": "202235"
  },
  {
    "text": "and we have to show you a hover, so whenever we do that, we\nbuilt the UI code in such a way",
    "start": "202235",
    "end": "208007"
  },
  {
    "text": "that in the end, the UI code makes a call, and that call returns a promise",
    "start": "208007",
    "end": "213112"
  },
  {
    "text": "with the actual thing to show. So this was actually a\nbig win for us because whenever we changed architectures,\nwhenever we moved away",
    "start": "213112",
    "end": "221132"
  },
  {
    "text": "from running only in\nthe browser to running in this Electron environment, we could just substitute\nthe implementation",
    "start": "221132",
    "end": "228194"
  },
  {
    "text": "of the hover providers. And instead of executing\nthem in a web worker,",
    "start": "228194",
    "end": "233333"
  },
  {
    "text": "all of a sudden we could\njust spawn a process and do it in a separate process. And we had literally zero\nchanges to our UI code.",
    "start": "233333",
    "end": "240936"
  },
  {
    "text": "So I was actually, from the beginning, I'm a hardcore JavaScript programmer",
    "start": "242909",
    "end": "248937"
  },
  {
    "text": "so I actually love JavaScript. And any project I start, I\nimmediately start in JavaScript.",
    "start": "248937",
    "end": "256678"
  },
  {
    "text": "But at the same time we\nwere starting at Microsoft, what became to be the TypeScript compiler,",
    "start": "258423",
    "end": "265498"
  },
  {
    "text": "this little team, they\nalso started something. They called it at the time,\nthey called it Strada,",
    "start": "265498",
    "end": "271004"
  },
  {
    "text": "and it was still an experiment as far as they were concerned. And they were also\nlooking for early adopters",
    "start": "271004",
    "end": "277210"
  },
  {
    "text": "of their compiler. I was a big skeptic, so\nactually I tried to stay away from it for as long as I could.",
    "start": "277210",
    "end": "284417"
  },
  {
    "text": "But then at one point I actually\nunderstood their promise, which is that of basically giving you",
    "start": "284417",
    "end": "292892"
  },
  {
    "text": "the necessary tooling to be\nable to write and maintain a large application that,\nat the end of the day,",
    "start": "292892",
    "end": "300933"
  },
  {
    "text": "executes in JavaScript. JavaScript, as far as I'm concerned,",
    "start": "300933",
    "end": "306339"
  },
  {
    "text": "and you guys know as well,\nactually fulfills the promise made by Java, if you would like. You really write your code once",
    "start": "306339",
    "end": "313146"
  },
  {
    "text": "and it really executes everywhere. However, if you keep on\nadding people to a team,",
    "start": "313146",
    "end": "320186"
  },
  {
    "text": "or if your code is growing and growing and you have multiple pieces that you need",
    "start": "320186",
    "end": "325224"
  },
  {
    "text": "to stitch together, at one point, you're gonna be",
    "start": "325224",
    "end": "330520"
  },
  {
    "text": "a little bit scared to make changes. So I personally wrote\nlots and lots of tests",
    "start": "331898",
    "end": "337367"
  },
  {
    "text": "to cover my code, but\nthen every now and then I will need to change\nsomething in someone else's, like I just need oh, now they're\ncalling me in a weird way,",
    "start": "338404",
    "end": "346512"
  },
  {
    "text": "let me fix it up a little bit. And every time I would do this I would get a little bit nervous because\nI was never really confident",
    "start": "346512",
    "end": "353886"
  },
  {
    "text": "that the changes I do are\nreally gonna work in the end. So that's actually one of the things",
    "start": "353886",
    "end": "360359"
  },
  {
    "text": "that TypeScript tries to help with, which is it's actually trying to give you",
    "start": "360359",
    "end": "365664"
  },
  {
    "start": "361000",
    "end": "1113000"
  },
  {
    "text": "an extra layer of security. More specifically, it protects\nyou against your own stupid.",
    "start": "365665",
    "end": "370803"
  },
  {
    "text": "So how should I say this? It's more like a safety net. I see it as a safety net\nand as a set of tools",
    "start": "370803",
    "end": "379112"
  },
  {
    "text": "that allow me to be more productive. TypeScript, unlike many other languages,",
    "start": "379112",
    "end": "386237"
  },
  {
    "text": "does eventually compile\ndown to JavaScript. But it is a superset of JavaScript. So what does that mean?",
    "start": "387553",
    "end": "393760"
  },
  {
    "text": "That means that any\nJavaScript you can write is actually TypeScript as well. So TypeScript just adds some\noptional syntactical constructs",
    "start": "393760",
    "end": "402001"
  },
  {
    "text": "such as type annotations and interfaces, and generally makes authoring\nJavaScript code more pleasant.",
    "start": "402001",
    "end": "409189"
  },
  {
    "text": "All of these things, they\nmostly come only with benefits as they allow you to have\nrich tooling at compile time.",
    "start": "411144",
    "end": "418850"
  },
  {
    "text": "And all the TypeScript\nat the end of the day compiles down to JavaScript. So at runtime, there's\nzero cost associated",
    "start": "418851",
    "end": "425190"
  },
  {
    "text": "with writing your code in TypeScript.",
    "start": "425191",
    "end": "428712"
  },
  {
    "text": "Okay, so I would introduce a little bit how TypeScript works,",
    "start": "431130",
    "end": "436669"
  },
  {
    "text": "and I hope you get to see my screen. So here I will just\nlaunch Visual Studio code",
    "start": "436669",
    "end": "443475"
  },
  {
    "text": "over a simple folder, which\ncontains just a single file. I hope you can read it.",
    "start": "443476",
    "end": "449849"
  },
  {
    "text": "And this one simply contains\na method that sorts an array.",
    "start": "449849",
    "end": "453636"
  },
  {
    "text": "And for each member of the\narray, it does a compare on that array name.",
    "start": "455321",
    "end": "460526"
  },
  {
    "text": "Now as I said, any\nJavaScript is a TypeScript. So if I just go ahead and\nrename this .js to .ts,",
    "start": "460526",
    "end": "467806"
  },
  {
    "text": "besides the thing in the\ncorner here that tells me that this is now TypeScript, nothing really has changed, right?",
    "start": "469202",
    "end": "474874"
  },
  {
    "text": "Because this is all valid TypeScript. However, you see at this\npoint that if you just",
    "start": "474874",
    "end": "480407"
  },
  {
    "text": "keep only the JavaScript subset\nof the TypeScript language, you don't really get a\nlot out of it, right?",
    "start": "481641",
    "end": "487753"
  },
  {
    "text": "So TypeScript is good, and they know that there's a method, sortByName.",
    "start": "487753",
    "end": "492392"
  },
  {
    "text": "And they know that it takes an argument, but they have no clue what\nthis method is supposed to take",
    "start": "493659",
    "end": "499264"
  },
  {
    "text": "and what this method\nis supposed to return. So I can just pass in five,\nand they will be happy with it.",
    "start": "499265",
    "end": "504537"
  },
  {
    "text": "Now the true value of TypeScript comes in once you begin a little\nbit to decorate your code",
    "start": "504537",
    "end": "510576"
  },
  {
    "text": "with a little bit of explanation, which would also help you in the future. So for example I have here a snippet",
    "start": "510576",
    "end": "518221"
  },
  {
    "text": "that actually the sortByName function is supposed to take an\narray of person, right?",
    "start": "520152",
    "end": "526726"
  },
  {
    "text": "So I will just add it over here. And all of a sudden, not\nonly did I communicate this",
    "start": "526726",
    "end": "532298"
  },
  {
    "text": "to myself in the future or my teammates, that this function should be called with an array of persons,\nbut all of a sudden",
    "start": "532298",
    "end": "538671"
  },
  {
    "text": "you see TypeScript lighting up and it's already beginning\nto show us some problems",
    "start": "538671",
    "end": "543675"
  },
  {
    "text": "with our code, right, which otherwise, as far as we were concerned,\nlooked perfectly reasonable and it would just fail at runtime.",
    "start": "543676",
    "end": "551450"
  },
  {
    "text": "Now what's interesting about\nthis is that you don't have to pollute your code and right\nat each and every location",
    "start": "551450",
    "end": "556589"
  },
  {
    "text": "the type of your variables. So for example, result is\ninferred to be a person array.",
    "start": "556589",
    "end": "563114"
  },
  {
    "text": "You don't need to say it again,\noh result is a person array. Or basically, here, x and\ny, when you call sort,",
    "start": "564030",
    "end": "570336"
  },
  {
    "text": "they already know that x\nand y should be a person so you don't need to do\nanything there either. So all of a sudden you\nget all these rich typing",
    "start": "570336",
    "end": "577643"
  },
  {
    "text": "only by just, more or less, explaining what the argument is passed it.",
    "start": "577643",
    "end": "582982"
  },
  {
    "text": "Even better, they already know\nwhat your function returns, which is, given a person array,\nit returns a person array.",
    "start": "582982",
    "end": "589121"
  },
  {
    "text": "Now this is basically\nkeeping safe from stupid,",
    "start": "589121",
    "end": "593037"
  },
  {
    "text": "like you would just run the\ncompiler and it has errors. So you would not ship your code. But the true power of TypeScript comes in",
    "start": "594297",
    "end": "600499"
  },
  {
    "text": "when you wanna work, right? So when you would just\ntype now, they already know that x has a member called\nname, and name is a string.",
    "start": "600499",
    "end": "609240"
  },
  {
    "text": "So I can do localCompare, and\nI can compare with y.name. So if you do this from the beginning,",
    "start": "609241",
    "end": "615647"
  },
  {
    "text": "this mistake wouldn't even have happened because you would just\nautocomplete localeCompare, and it's not localCompare, right?",
    "start": "615648",
    "end": "622288"
  },
  {
    "text": "It's just a typo. So I can fix this, and now it's happy. Of course it's not entirely\nhappy as I give it a five.",
    "start": "622288",
    "end": "631591"
  },
  {
    "text": "So I can, for example,\ngive it an empty array. And yeah, basically\nthis looks a lot better.",
    "start": "631591",
    "end": "638269"
  },
  {
    "text": "Now what we can do is\nwe can try to generate. I mean, so far all you've\nseen, all these squiggles,",
    "start": "638270",
    "end": "644376"
  },
  {
    "text": "they were just inside the editor, right? Nothing was really happening. You still cannot see\nthe result of your work.",
    "start": "644377",
    "end": "651410"
  },
  {
    "text": "But if you just, for example,\nrun the TypeScript compiler and I will just launch\nit to watch this file,",
    "start": "651410",
    "end": "657202"
  },
  {
    "text": "it will automatically\ngenerate next to this ts file the JavaScript file, right?",
    "start": "658624",
    "end": "664263"
  },
  {
    "text": "And as I said before, this is\na hundred percent your code.",
    "start": "664263",
    "end": "667908"
  },
  {
    "text": "The only thing that happens is that these type annotations are dropped. So there's no more colon, person array.",
    "start": "669368",
    "end": "676368"
  },
  {
    "text": "Also, the interface we\nuse to describe this just disappears as\nJavaScript does not have",
    "start": "677243",
    "end": "683015"
  },
  {
    "text": "such a construct. Now the nice thing about\nthis is that you can use,",
    "start": "683015",
    "end": "688420"
  },
  {
    "text": "for example, constructs\nwhich may be not all JavaScript runtimes have.",
    "start": "688421",
    "end": "694592"
  },
  {
    "text": "So if I now use a lambda function here, TypeScript will down level compile it",
    "start": "694593",
    "end": "700666"
  },
  {
    "text": "to a normal function. So you can make your\ncode nice and beautiful and use new, ECMAScript 6",
    "start": "700666",
    "end": "707125"
  },
  {
    "text": "or maybe ECMAScript 7 already features and still down level compile it to run",
    "start": "707125",
    "end": "712723"
  },
  {
    "text": "in any environment that\nJavaScript runs in. Another interesting thing,\nwhich I said about it,",
    "start": "713813",
    "end": "721754"
  },
  {
    "text": "so let me for example in here create something.",
    "start": "721754",
    "end": "727493"
  },
  {
    "text": "Now as you see, when I do Control + Space, they know I'm supposed to give\nin an age because a person has to have an age according\nto my definition of it.",
    "start": "727493",
    "end": "735148"
  },
  {
    "text": "Let me make this even more complicated. So this is just, for example,",
    "start": "736735",
    "end": "742441"
  },
  {
    "text": "how a class gets down\nlevel compiled, right? So since ECMAScript 5, it\nonly came out in ECMAScript 6",
    "start": "742441",
    "end": "748694"
  },
  {
    "text": "that you can actually use the\nclass syntax in JavaScript. They down level compile it\nto the idiomatic JavaScript",
    "start": "750116",
    "end": "756222"
  },
  {
    "text": "you would have written by\nmaking function Greeter, Greeter.prototype.greet and so on.",
    "start": "756222",
    "end": "762628"
  },
  {
    "text": "Something which is very\nimportant to recognize, and here let me just stage these files that you get to see the diff,",
    "start": "762628",
    "end": "769333"
  },
  {
    "text": "is that right now I can just,\nfor example, go on this name and I can just say, right click, rename.",
    "start": "769333",
    "end": "776909"
  },
  {
    "text": "I can call it full name. And all of a sudden,\nTypeScript knows to change",
    "start": "776909",
    "end": "782615"
  },
  {
    "text": "exactly the locations it must. So if you look at the diff,\nit basically left alone",
    "start": "782615",
    "end": "788409"
  },
  {
    "text": "this name over here because\nit knew that this name is not having anything to\ndo with the interface person",
    "start": "790489",
    "end": "797496"
  },
  {
    "text": "or with the rest of the code, right? So it's pretty cool that you\ncan now make a refactoring in your code and have the\nconfidence that your code",
    "start": "797496",
    "end": "804803"
  },
  {
    "text": "is still executing the correct way. One last thing I wanted\nto show you on this sample",
    "start": "804803",
    "end": "813864"
  },
  {
    "text": "is so if I now run TSE minus in it, this basically creates\na ts conflict.json file.",
    "start": "813864",
    "end": "821620"
  },
  {
    "text": "And more or less, this\ncontains instructions for the compiler, right? It tells it the module\nsystem I'm using for my code",
    "start": "821620",
    "end": "828893"
  },
  {
    "text": "is CommonJS, and it says\nexclude some folders from it, which in this case they\ndon't really matter.",
    "start": "828893",
    "end": "835634"
  },
  {
    "text": "But now if I run the\nwatch, I can for example, say oh look, I know for a\nfact that I'm not targeting",
    "start": "836535",
    "end": "845410"
  },
  {
    "text": "any ECMAScript 5, right? I know for a fact I'm not\njust targeting any browser. I know I'm targeting\nnode version six and up.",
    "start": "845411",
    "end": "853018"
  },
  {
    "text": "So I can just say node\nversion six supports ECMAScript 6, I can\njust change this to a 6.",
    "start": "853018",
    "end": "858290"
  },
  {
    "text": "And what will happen is\nthat, oh sorry I mistyped,",
    "start": "858290",
    "end": "862660"
  },
  {
    "text": "let me do it again, is that\nnow they generate the code by keeping the native syntax\nthat ECMAScript 6 brings in.",
    "start": "863781",
    "end": "871103"
  },
  {
    "text": "So now they do use a\nclass when you write it because node actually supports\nit starting version six.",
    "start": "871103",
    "end": "877543"
  },
  {
    "text": "They do use lambda functions and so on. So all the time, your code can be nice",
    "start": "877543",
    "end": "885193"
  },
  {
    "text": "and can be already up to\nthe latest ECMAScript spec, and you can still have it run\nin any environment you have.",
    "start": "885193",
    "end": "892496"
  },
  {
    "text": "Now let me close this\nfor a second and maybe show you something a little\nbit more interesting.",
    "start": "893392",
    "end": "899971"
  },
  {
    "text": "Here I also have the same sort of idea. I mean, the idea behind it is the same.",
    "start": "905170",
    "end": "911070"
  },
  {
    "text": "Can we just try to wake this guy up. Yeah okay, light looks more happy.",
    "start": "914560",
    "end": "922153"
  },
  {
    "text": "So for example here, this code is using destructuring, right? So there's a function\ncalled point that it gets",
    "start": "922153",
    "end": "929728"
  },
  {
    "text": "passed in two numbers. This is the new, this is\nnew ECMAScript 6 syntax",
    "start": "929728",
    "end": "935534"
  },
  {
    "text": "that you can just create a literal. So that actually means what\nyou see here on the right.",
    "start": "935534",
    "end": "941473"
  },
  {
    "text": "And you can also use the\nstructuring to extract the individual properties of an object.",
    "start": "941473",
    "end": "948550"
  },
  {
    "text": "And TypeScript also down\nlevel compiles that for you. To actually run it, I have to do the same.",
    "start": "948550",
    "end": "954620"
  },
  {
    "text": "Should result in the same diff. Now what's interesting and what\nTypeScript already supports",
    "start": "954620",
    "end": "961126"
  },
  {
    "text": "is basically async and await. So if you do use promises,",
    "start": "961126",
    "end": "966402"
  },
  {
    "text": "you can now write your code a lot nicer. So the idea behind this example\nis that there's a function",
    "start": "967800",
    "end": "974306"
  },
  {
    "text": "called delay, and that\nreturns a new promise. I'll get in a second to why\nthe squiggles are there.",
    "start": "974306",
    "end": "980878"
  },
  {
    "text": "This one returns a new promise, and this promise would just resolve itself",
    "start": "980879",
    "end": "986232"
  },
  {
    "text": "after a number of milliseconds. Now what's nice about\nthis is that for example",
    "start": "987086",
    "end": "992691"
  },
  {
    "text": "the function ping inside a\nloop calls 10 times the delay",
    "start": "992691",
    "end": "996545"
  },
  {
    "text": "and waits each time for\nthis delay to occur. And after each of those,\nit basically logs the ping.",
    "start": "997896",
    "end": "1004303"
  },
  {
    "text": "And then the function\nmain is just awaiting the whole thing to happen. Now the squiggles you get here are because",
    "start": "1004303",
    "end": "1011276"
  },
  {
    "text": "of a missing feature that\nTypeScript has on the road map. So right now they cannot\ndown level compile",
    "start": "1011276",
    "end": "1017967"
  },
  {
    "text": "async and await to ECMAScript 5. Because if you look at the generated code, so let me fix it and let\nit know that I am in fact",
    "start": "1019318",
    "end": "1026758"
  },
  {
    "text": "targeting ECMAScript 6, so now the errors should\ngo away eventually.",
    "start": "1026759",
    "end": "1035733"
  },
  {
    "text": "Okay, there they go. So the reason they cannot\ndownloadable compile yet",
    "start": "1035733",
    "end": "1041173"
  },
  {
    "text": "to ECMAScript 5 is\nbecause they actually use generator functions behind the scenes",
    "start": "1041173",
    "end": "1048547"
  },
  {
    "text": "together with the new yield keyword to implement this behavior\nand leave your code",
    "start": "1048547",
    "end": "1056054"
  },
  {
    "text": "more or less top-down, right? You write it top-down, they have to mangle it a little bit",
    "start": "1056054",
    "end": "1061627"
  },
  {
    "text": "so they wrap it inside a\nhelper called a waiter. But at the end of the day, your code stays",
    "start": "1061627",
    "end": "1067533"
  },
  {
    "text": "the same way you wrote it. Okay, so that's that. I hope that was a really brief\nintroduction to TypeScript.",
    "start": "1067533",
    "end": "1074573"
  },
  {
    "text": "So okay.",
    "start": "1074573",
    "end": "1076602"
  },
  {
    "text": "Now one of the things\nwhich we did not get right from the beginning were\nbasically dependencies. So we failed, we utterly\nfailed to keep track",
    "start": "1081780",
    "end": "1090189"
  },
  {
    "text": "of what each JavaScript file needs and what it provides, right? So that's the basic rule.",
    "start": "1091523",
    "end": "1098056"
  },
  {
    "text": "If you wanna have a good\nsystem, you should have a way to know what each of your\nfile needs to run correctly",
    "start": "1098056",
    "end": "1104269"
  },
  {
    "text": "and what it can offer to\nanyone else built on top of it. And we totally sucked and\nwe totally failed at this",
    "start": "1104269",
    "end": "1109975"
  },
  {
    "text": "at the beginning. And one of the reasons for that is because we were using Namespaces, right?",
    "start": "1109975",
    "end": "1115714"
  },
  {
    "start": "1113000",
    "end": "1189000"
  },
  {
    "text": "So you were using, well\nNamespaces being a very fancy word for globals.",
    "start": "1115714",
    "end": "1121553"
  },
  {
    "text": "So for example, in a\ncertain file we would just reach onto this, I call\nit Namespace.Util.Strings",
    "start": "1121553",
    "end": "1129035"
  },
  {
    "text": "and defined a new method\non this Namespace. However, the problem here is\nthat there's no correlation",
    "start": "1129928",
    "end": "1135466"
  },
  {
    "text": "between the file that actually does this and the Namespace that's\nactually being defined, right? So here I could call the file Strings.js.",
    "start": "1135467",
    "end": "1144309"
  },
  {
    "text": "I could call the file Utils.js, but the problem is that nobody in my team",
    "start": "1145366",
    "end": "1151083"
  },
  {
    "text": "would know where to actually\nfind the implementation of the trim function, right? They might be using it everywhere,",
    "start": "1151083",
    "end": "1156788"
  },
  {
    "text": "but they wouldn't necessarily know unless you're really careful about it. They wouldn't necessarily\nknow which file on disk",
    "start": "1156788",
    "end": "1162895"
  },
  {
    "text": "they should go open and\nchange so that they can change this method. So renaming files was a huge pain.",
    "start": "1162895",
    "end": "1170402"
  },
  {
    "text": "Renaming Namespaces was\nsomething we never did because we wouldn't know\nwhere they are all used.",
    "start": "1170402",
    "end": "1176642"
  },
  {
    "text": "And of course if you just\ntried to do a string search, as you saw before with\nthe name case, right,",
    "start": "1176642",
    "end": "1181647"
  },
  {
    "text": "you would just hit so\nmany different locations you wouldn't know which one\nis a false positive or not.",
    "start": "1181647",
    "end": "1187436"
  },
  {
    "text": "So yeah, I guess this\nis a fun way to depict, depict what I think was our\ndependency graph at the time.",
    "start": "1188987",
    "end": "1197302"
  },
  {
    "start": "1189000",
    "end": "1220000"
  },
  {
    "text": "But regardless, so back\nthen we had our source split up into client and server.",
    "start": "1198497",
    "end": "1203735"
  },
  {
    "text": "So we would have this\ntiny little Node.js server that would serve up all the contents and it would know how\nto read files from disk,",
    "start": "1203735",
    "end": "1210976"
  },
  {
    "text": "write files to disk and so on, but most of the code was client side. So most of the code was\nrunning inside the browser.",
    "start": "1210976",
    "end": "1218417"
  },
  {
    "text": "Now for Node.js, it is a given, right? Everybody that does Node.js uses CommonJS",
    "start": "1218417",
    "end": "1223789"
  },
  {
    "start": "1220000",
    "end": "1387000"
  },
  {
    "text": "as a module system. And this is great. I mean, it's great that Node came out",
    "start": "1223789",
    "end": "1230262"
  },
  {
    "text": "with something like\nthis from the beginning. However, there is a little subtle catch which many people are not aware of.",
    "start": "1230262",
    "end": "1236868"
  },
  {
    "text": "So for example, how do you\nthink Node evaluates this code that you've written, right?",
    "start": "1236868",
    "end": "1242240"
  },
  {
    "text": "So what they do is when\nthey load up my module.js is they will more or less\nread this file from disk.",
    "start": "1242240",
    "end": "1249548"
  },
  {
    "text": "Yeah, they do a little bit\nof wrapping where they add the dir name and so on, but then they will go on and evaluate.",
    "start": "1249548",
    "end": "1255454"
  },
  {
    "text": "And as part of evaluation,\nyou see the problematic line over here is that they\nbasically have to make",
    "start": "1255454",
    "end": "1263028"
  },
  {
    "text": "an implementation of\nthis require function. And if you step in and step\nin and keep on stepping,",
    "start": "1263028",
    "end": "1269368"
  },
  {
    "text": "like until you really reach\nthe meat of this require, you will see at the end of the day",
    "start": "1269368",
    "end": "1274539"
  },
  {
    "text": "it does an FS read file\nsync or equivalent, right? So it will literally\nblock the VM execution,",
    "start": "1274539",
    "end": "1279978"
  },
  {
    "text": "the JavaScript VM will be blocked until it goes to disk and\ntries to read this file out.",
    "start": "1279978",
    "end": "1286184"
  },
  {
    "text": "And why does it do that? Because that's how the\ncode is written, right? So the code at this point, when this require function returns,",
    "start": "1286184",
    "end": "1292591"
  },
  {
    "text": "it should very well return\nwhatever is exported from that other file.",
    "start": "1292591",
    "end": "1298063"
  },
  {
    "text": "So CommonJS is great because\nyou get to tell exactly in a file this is what I need\nand this is what I give to you",
    "start": "1298063",
    "end": "1305704"
  },
  {
    "text": "in the form of the export. But basically, the problem with it is that it's very suitable for\nrunning on a server maybe",
    "start": "1305704",
    "end": "1312744"
  },
  {
    "text": "where you have local disk access, right? You cannot do this in a browser. You cannot expect to ship this code up",
    "start": "1312744",
    "end": "1319317"
  },
  {
    "text": "and then in here do basically\nasynchronous XHR request to try to fetch your dependency.",
    "start": "1319317",
    "end": "1324923"
  },
  {
    "text": "So that's basically at the time, when we looked into it,\nthat's also when AMD came out.",
    "start": "1324923",
    "end": "1332430"
  },
  {
    "text": "So AMD stands for asynchronous\nmodule definition. And the only real difference in the code",
    "start": "1332431",
    "end": "1338603"
  },
  {
    "text": "is that all the dependencies\nof the actual code",
    "start": "1338603",
    "end": "1342322"
  },
  {
    "text": "are in a way extracted\noutside in an array. So what this means is\nwhen you actually look at",
    "start": "1343709",
    "end": "1349548"
  },
  {
    "text": "and run this code, you can\ncapture, yeah, this is the code I need to execute inside this function,",
    "start": "1349548",
    "end": "1356755"
  },
  {
    "text": "and these are the\ndependencies I need to fulfill before executing that code. So basically, if you\nwrite a loader like that",
    "start": "1356755",
    "end": "1365097"
  },
  {
    "text": "you can then asynchronously\nfetch this dependency ID. And once you have that and\nonce you have resolved that,",
    "start": "1365097",
    "end": "1371403"
  },
  {
    "text": "that's when you can actually\nrun the actual code. So we actually stuck up with AMD,",
    "start": "1371403",
    "end": "1377142"
  },
  {
    "text": "and I will give some more\nexamples why we find that useful. So this is from a time when",
    "start": "1377142",
    "end": "1382881"
  },
  {
    "text": "there was no other module system, right? There was CommonJS and basically AMD.",
    "start": "1382881",
    "end": "1389102"
  },
  {
    "start": "1387000",
    "end": "1427000"
  },
  {
    "text": "Okay, yeah before that, the\ngood thing about TypeScript is that it actually supports\nthat you can compile",
    "start": "1389102",
    "end": "1395443"
  },
  {
    "text": "your JavaScript to either one of the two, or even something they call UMD,",
    "start": "1396461",
    "end": "1401466"
  },
  {
    "text": "universal module definitions. So in TypeScript, you\njust use the new format for dependency that will come\nup in ECMAScript 7, I think.",
    "start": "1401466",
    "end": "1410709"
  },
  {
    "text": "So you just write your code normally, there's no spaghetti,\nthere's no define function, there's no nastiness.",
    "start": "1410709",
    "end": "1416281"
  },
  {
    "text": "And then you just, by\nthe flick of an option as I showed you there\nin the TS config.json, you make it compile and it\ngenerates CommonJS looking code",
    "start": "1416281",
    "end": "1424523"
  },
  {
    "text": "or AMD looking code. One of the advantages of\nAMD, which we began to",
    "start": "1424523",
    "end": "1432830"
  },
  {
    "start": "1427000",
    "end": "1547000"
  },
  {
    "text": "benefit from early on, is the lazy code loading. So one of the things\nwe do is, for example,",
    "start": "1432831",
    "end": "1439938"
  },
  {
    "text": "if you open this up and\nyou know we ship with like 30 languages, right?",
    "start": "1439938",
    "end": "1445473"
  },
  {
    "text": "We have PHP, C#, I don't even\nknow them, Ruby and so on. Like, there's just so many of them. And you know what would\nbe really, really, stupid",
    "start": "1445473",
    "end": "1452317"
  },
  {
    "text": "is that if you would open a txt file, all of a sudden you will\nload those 30 languages just because they're there,",
    "start": "1452317",
    "end": "1460025"
  },
  {
    "text": "and try to start them up\njust in case they're needed. So what we're actually doing is",
    "start": "1460025",
    "end": "1465564"
  },
  {
    "text": "we split our code up or\nwe have a sort of like a contribution system\nwhere on the one hand,",
    "start": "1465564",
    "end": "1472671"
  },
  {
    "text": "something which is most\nlike, I don't know, 30 bytes or whatever, when\nyou minify it and so on,",
    "start": "1472671",
    "end": "1479009"
  },
  {
    "text": "this just describes to the system that there is a language called PHP,",
    "start": "1479010",
    "end": "1484481"
  },
  {
    "text": "which should kick in\nonce you open a PHP file or a PHP4 file or a PHP5 file.",
    "start": "1484482",
    "end": "1491056"
  },
  {
    "text": "And once you do that, once\nyou actually do open it, then you should load the\nmodule at blah, blah, blah",
    "start": "1491056",
    "end": "1498362"
  },
  {
    "text": "and instantiate the class\ncalled blah, blah, blah. So basically, when you open a text file,",
    "start": "1498363",
    "end": "1503902"
  },
  {
    "text": "the only thing that is loaded\nis this piece over here. And then only later,\nwhen you open a PHP file",
    "start": "1503902",
    "end": "1511309"
  },
  {
    "text": "does the entire PHP thing get loaded. And this, yeah, okay, sorry.",
    "start": "1511309",
    "end": "1516348"
  },
  {
    "text": "So it might look that\nit's smaller but in fact this is lots of code over\nthere to actually implement PHP",
    "start": "1516348",
    "end": "1522854"
  },
  {
    "text": "and all the semantics and\nall the coloring and so on. Yeah.",
    "start": "1522854",
    "end": "1528827"
  },
  {
    "text": "So yeah, we like to think of\nit like an iceberg, right? Like we have a little part\nwhich gets synchronously loaded",
    "start": "1528827",
    "end": "1534266"
  },
  {
    "text": "that describes, that the\nother part should kick in at one point or another.",
    "start": "1534266",
    "end": "1539871"
  },
  {
    "text": "And then hopefully,\nthe large piece of code that actually knows how to\ndo PHP is only lazily loaded.",
    "start": "1539871",
    "end": "1546261"
  },
  {
    "start": "1547000",
    "end": "1644000"
  },
  {
    "text": "Another thing which we do\nis we take advantage of AMD loader plugins.",
    "start": "1547913",
    "end": "1554319"
  },
  {
    "text": "So whenever we write our code, by now it's all done in TypeScript, we can just have like, oh sorry,",
    "start": "1554319",
    "end": "1562318"
  },
  {
    "text": "besides the regular\ndependencies, we can just write a dependency to the CSS\nthat this file needs.",
    "start": "1563161",
    "end": "1570502"
  },
  {
    "text": "So for example, this is just like, I just took some lines\nfrom the code that renders the current line highlight.",
    "start": "1570502",
    "end": "1576574"
  },
  {
    "text": "So when you move around in the editor, we render a little highlight\nof the current line. Now how this highlight works\nis that in the end of the day,",
    "start": "1576574",
    "end": "1583882"
  },
  {
    "text": "it creates a dom node and\nit sets a certain class name on this dom node, and then\nit maintains it, right?",
    "start": "1583882",
    "end": "1588987"
  },
  {
    "text": "If you move your cursor up and\ndown, it moves up and down. But essentially, it's just a\ndom node with the class name.",
    "start": "1588987",
    "end": "1595393"
  },
  {
    "text": "And of course to make\nthings nice, you wanna put the styling of your app\noutside of the JavaScript",
    "start": "1595393",
    "end": "1602267"
  },
  {
    "text": "or TypeScript code, so\nyou put in a CSS file. So now, whenever we end\nup loading this file",
    "start": "1602267",
    "end": "1608540"
  },
  {
    "text": "called currentLineHighlight.ts, this dependency will show up. We will actually invoke the AMD CSS plugin",
    "start": "1608540",
    "end": "1617119"
  },
  {
    "text": "which is indicated by this bang over here. So we will load first\nthe plugin called vs css",
    "start": "1619050",
    "end": "1624856"
  },
  {
    "text": "and then pass to it as an\nargument the rest of the thing. And the rest of the thing\nis more or less the path",
    "start": "1624856",
    "end": "1631096"
  },
  {
    "text": "how to find the CSS file. So we actually make use of\nthis both at development time",
    "start": "1631096",
    "end": "1636601"
  },
  {
    "text": "when you wanna run something. And we also make use of it when we bundle.",
    "start": "1636601",
    "end": "1642474"
  },
  {
    "text": "So that's one thing we do and we actually keep on\ndoing since a very long time.",
    "start": "1642474",
    "end": "1650081"
  },
  {
    "start": "1644000",
    "end": "1829000"
  },
  {
    "text": "And if you wanna take away\nsomething with you today is maybe you should\nreally look into bundling",
    "start": "1650081",
    "end": "1656554"
  },
  {
    "text": "and minifying your code, even\nif it runs on the server side, which sounds so stupid but it's true.",
    "start": "1656554",
    "end": "1662460"
  },
  {
    "text": "So for example, this is the startup time of Visual Studio code.",
    "start": "1662460",
    "end": "1668933"
  },
  {
    "text": "This is split up into three. So the first piece is\nbasically just a given. That's just Electron.",
    "start": "1668933",
    "end": "1674372"
  },
  {
    "text": "It takes a little while to start up, it needs to load 40 megabytes of goodness. We love that, we wanna\nhave all the APIs of HTML5.",
    "start": "1674372",
    "end": "1682427"
  },
  {
    "text": "We wanna have all the APIs of Node. It's what it is, right? It's a given cost start. It's basically the same cost",
    "start": "1682427",
    "end": "1688752"
  },
  {
    "text": "when you open Chrome, for example. There is a certain cost until\nJavaScript finally kicks in.",
    "start": "1688753",
    "end": "1694375"
  },
  {
    "text": "The one at the end is just logic, is just some code which\nrenders the first time",
    "start": "1697195",
    "end": "1704502"
  },
  {
    "text": "things start up. And the thing in the middle\nis the actual time spent in loading and evaluating the code.",
    "start": "1704502",
    "end": "1711385"
  },
  {
    "text": "The first one is when we run with maybe a thousand different files. So this is all locally, right?",
    "start": "1713478",
    "end": "1719550"
  },
  {
    "text": "Everybody says you\nshould bundle and minify because each bite you\nsent over the wire cost.",
    "start": "1719551",
    "end": "1725051"
  },
  {
    "text": "Each request you make to the\nserver has a certain latency, and you should try to minimize those.",
    "start": "1726024",
    "end": "1731096"
  },
  {
    "text": "But this is all running locally, it's all running off of my SSD. So what I found very interesting\nis that simply by bundling",
    "start": "1731096",
    "end": "1738236"
  },
  {
    "text": "all the files into one, you\nactually get quite a benefit. So this is all the same code.",
    "start": "1738236",
    "end": "1743841"
  },
  {
    "text": "You end up shipping the same thing, you don't even change\nanything in your code. It's just a matter of how you package it.",
    "start": "1743842",
    "end": "1750600"
  },
  {
    "text": "And then we thought oh\nyeah, let's just put it all in one bundle and not minify it.",
    "start": "1751483",
    "end": "1756658"
  },
  {
    "text": "Why minify it, right? Maybe people want to edit and\nlook and debug it and so on.",
    "start": "1756658",
    "end": "1762684"
  },
  {
    "text": "But then even minifying helps, and I left it here as a\nlink at the end as a hint.",
    "start": "1762685",
    "end": "1769733"
  },
  {
    "text": "I don't know if you knew\nthis but for example, V8, if you have a function like at one point",
    "start": "1769733",
    "end": "1775740"
  },
  {
    "text": "you can go on a function\nand say function.toString, right, and this shows\nyou more or less the body",
    "start": "1775740",
    "end": "1782045"
  },
  {
    "text": "of the function. Now if the body of the function\nis over 600 characters,",
    "start": "1782046",
    "end": "1787619"
  },
  {
    "text": "that function will never\nget in line anywhere regardless how many times you call it,",
    "start": "1787619",
    "end": "1794392"
  },
  {
    "text": "like maybe you have a big fat\nloop of going to 10 million and you call the single\nfunction that adds two numbers.",
    "start": "1794392",
    "end": "1801665"
  },
  {
    "text": "That function will never get in line if it's over 600 characters in size. It's just a number.",
    "start": "1801666",
    "end": "1807848"
  },
  {
    "text": "The V8 guys came up with\nit and they ship with it and they don't care. But basically, if you minify your code,",
    "start": "1807848",
    "end": "1813344"
  },
  {
    "text": "and it sounds so stupid, right? You just minify your\ncode, it will more or less extract the comments, it will make all",
    "start": "1813344",
    "end": "1819350"
  },
  {
    "text": "the identifiers smaller and you might have a very good chance that all of a sudden, a function which was not in\nline before, is now in line.",
    "start": "1819350",
    "end": "1826937"
  },
  {
    "text": "So yeah. Yeah, after we finished\nand after we actually moved",
    "start": "1826937",
    "end": "1832263"
  },
  {
    "start": "1829000",
    "end": "2079000"
  },
  {
    "text": "all our code to AMD, we\nwere very happy about it.",
    "start": "1832263",
    "end": "1835855"
  },
  {
    "text": "Okay, so this is more or\nless the basics, right? Like, we finally, after a while,\nwe figured out the basics,",
    "start": "1838590",
    "end": "1844408"
  },
  {
    "text": "which is like yeah, manager\ndependency, duh, of course. I don't know, use good\nabstractions like promises",
    "start": "1844409",
    "end": "1851983"
  },
  {
    "text": "and classes and so on, of course. And at one point, our code just\nkept on growing and growing.",
    "start": "1851983",
    "end": "1857021"
  },
  {
    "text": "I mean, you'll notice in\nthe end, I don't even know because at this point we were split into so many repositories that I\ndon't even know, I just gave up.",
    "start": "1857021",
    "end": "1864095"
  },
  {
    "text": "I didn't feel like\nwriting a script that goes and pull sources from different repos",
    "start": "1864095",
    "end": "1869367"
  },
  {
    "text": "and tries to eliminate the tests and so on to figure that out.",
    "start": "1869367",
    "end": "1874806"
  },
  {
    "text": "So as we kept on growing, I actually gave up my",
    "start": "1874806",
    "end": "1880666"
  },
  {
    "text": "huge anti-TypeScript opinion. And the reason for that, so\nthis is actually a funny story.",
    "start": "1881512",
    "end": "1888152"
  },
  {
    "text": "So I don't know if you\nwere paying attention in Eric's talk this morning,\nbut we basically now",
    "start": "1888152",
    "end": "1894325"
  },
  {
    "text": "ship with Internet Explorer,\nstarting with IE 11 and what they now call Edge.",
    "start": "1894325",
    "end": "1900331"
  },
  {
    "text": "So when you do F12, if\nyou've ever have done that, you can debug your\nJavaScript in there, right?",
    "start": "1900331",
    "end": "1906337"
  },
  {
    "text": "So that's actually our component. And one of the things they\nasked for is that people,",
    "start": "1906337",
    "end": "1912010"
  },
  {
    "text": "when they do that, sometimes people, they end up maybe stepping by accident inside jQuery.min, right?",
    "start": "1912010",
    "end": "1918950"
  },
  {
    "text": "Now jQuery.min is not the worst file, but it's a file that contains everything",
    "start": "1918950",
    "end": "1925723"
  },
  {
    "text": "on the first line, right? So we were like yeah,\nyeah, just take our code,",
    "start": "1925723",
    "end": "1930928"
  },
  {
    "text": "our code is awesome. The first thing they\ntried, it failed miserably. And then I was going home crying.",
    "start": "1930928",
    "end": "1937360"
  },
  {
    "text": "But basically, what I realized\nis I had all of a sudden, between my view code and\nbetween my model code,",
    "start": "1938736",
    "end": "1944375"
  },
  {
    "text": "so the editor is split\nup into sort of like a viewmodel controller sort of thing where in the model,\nwhich keeps the buffer,",
    "start": "1944375",
    "end": "1951049"
  },
  {
    "text": "I just have like an array of lines. And in this case, for\njQuery min, I had an array",
    "start": "1951049",
    "end": "1956854"
  },
  {
    "text": "of one line. It was just like a very long string. And I realized I\nactually, all of a sudden,",
    "start": "1956854",
    "end": "1963027"
  },
  {
    "text": "needed to plug in something\nin between the view and the model, right? I needed to plug in what\nis now in the source,",
    "start": "1963027",
    "end": "1970201"
  },
  {
    "text": "and it's called the view model. And now, what this view\nmodel does is it basically transforms the model and\nsplit this huge one line",
    "start": "1970201",
    "end": "1979410"
  },
  {
    "text": "into multiple lines, which\nokay, so in plain people talk it's called word wrapping.",
    "start": "1979410",
    "end": "1985483"
  },
  {
    "text": "So I was just building it up, right? But it's more or less when\nyou have a long line, right?",
    "start": "1985483",
    "end": "1990554"
  },
  {
    "text": "And you've seen this in\nall the editors you use. At one point, the code will\nwrap if you wanted to, right? Or it could wrap at the\nlevel of the viewport",
    "start": "1990555",
    "end": "1999256"
  },
  {
    "text": "or it basically maybe wraps\nafter a certain number and so on. But basically, I had to\nintroduce all of a sudden",
    "start": "1999256",
    "end": "2006204"
  },
  {
    "text": "in all this view code,\nwhich was already like tinkered and optimized, I\nhad to completely replace",
    "start": "2006204",
    "end": "2011876"
  },
  {
    "text": "the data structures that it\nno longer goes to the model but it goes to a view\nmodel which has the chance",
    "start": "2011876",
    "end": "2017382"
  },
  {
    "text": "to do something with the actual\ntext to make things better. So instead of spending\nthree weeks doing that,",
    "start": "2017382",
    "end": "2024455"
  },
  {
    "text": "I spent three weeks going to TypeScript and more or less two,\nthree days doing that",
    "start": "2024455",
    "end": "2030094"
  },
  {
    "text": "because it was a lot easier\nonce I was converting my code to TypeScript, it\nwas a lot easier to see",
    "start": "2030094",
    "end": "2036167"
  },
  {
    "text": "what sort of data\nstructures my view needs. And then I would just\nimplement them and provide them",
    "start": "2036167",
    "end": "2042039"
  },
  {
    "text": "through this view model. Yeah, I think this is my speed.",
    "start": "2042039",
    "end": "2047812"
  },
  {
    "text": "I don't know if this is\nreally important like yeah. And okay, we also have\nsome team-specific rules.",
    "start": "2047812",
    "end": "2052816"
  },
  {
    "text": "So for example, we try\nto put return types. Like as I showed earlier,\nthat TypeScript can guess it.",
    "start": "2052817",
    "end": "2060224"
  },
  {
    "text": "But at one point, you're\nactually gonna burn a little bit of CPU. Like if you have a large,\nlarge project and you let it",
    "start": "2060224",
    "end": "2066496"
  },
  {
    "text": "infer everything, it's\ngonna like take a while to infer everything. So we try to help it\nout by actually putting",
    "start": "2066496",
    "end": "2072702"
  },
  {
    "text": "the return types on\npublic methods and so on. And yeah, just doc the\nstaff and TS link it.",
    "start": "2072703",
    "end": "2079645"
  },
  {
    "start": "2079000",
    "end": "2128000"
  },
  {
    "text": "Yeah, this is an example\nalso that basically, this is from my code.",
    "start": "2081112",
    "end": "2087644"
  },
  {
    "text": "So this is supposed to say statMarkerId, but in JavaScript it's\nperfectly fine to say delete",
    "start": "2087644",
    "end": "2092989"
  },
  {
    "text": "the key undefined, right? So I had a range, and statMarkerId",
    "start": "2094519",
    "end": "2100117"
  },
  {
    "text": "did not exist on this range. So this would evaluate to undefined. And then the code would just\nsay delete object of undefined,",
    "start": "2100117",
    "end": "2108406"
  },
  {
    "text": "and that's perfectly fine. As far as JavaScript is\nconcerned, that's perfectly fine. And this was causing\nlike quite a memory leak",
    "start": "2108406",
    "end": "2114078"
  },
  {
    "text": "because every time you\nwould type, I would like make a little marker\nto remember something. I don't exactly know what\nbut every time you type,",
    "start": "2114078",
    "end": "2120485"
  },
  {
    "text": "I would have one of these\nguys leaking, right, and I had no clue about it\nuntil I converted my code.",
    "start": "2120485",
    "end": "2125751"
  },
  {
    "start": "2128000",
    "end": "2220000"
  },
  {
    "text": "Another thing, which I\nfound interesting, is that what you can do with TypeScript is you can",
    "start": "2128759",
    "end": "2135366"
  },
  {
    "text": "basically compile, so\nimagine now you're two teams or maybe you're two different projects.",
    "start": "2135366",
    "end": "2140571"
  },
  {
    "text": "So for example we consume,\nfrom the TypeScript guys, we consume this typescriptServices.js\nthat they produce.",
    "start": "2140571",
    "end": "2147945"
  },
  {
    "text": "That's just like a big fat JavaScript file and you can throw to it TypeScript,",
    "start": "2147945",
    "end": "2153084"
  },
  {
    "text": "you can throw to a JavaScript\nand it will just tell you all sorts of goodness about it. That's basically how the\ndemos I showed before",
    "start": "2153084",
    "end": "2160525"
  },
  {
    "text": "in the editor work. We more or less take the\nbuffer that you're typing, throw it inside this smartness.",
    "start": "2160525",
    "end": "2166297"
  },
  {
    "text": "They're really smart guys,\nthey know what they're doing, and they just come back\nand offer suggestions. They offer hovers and so on based on it.",
    "start": "2166297",
    "end": "2172937"
  },
  {
    "text": "And we do that by them\nbasically shipping to us a bundled minified JavaScript file",
    "start": "2172937",
    "end": "2179076"
  },
  {
    "text": "accompanied by a DTS, which\nmore or less describes what is inside that JavaScript.",
    "start": "2179076",
    "end": "2184881"
  },
  {
    "text": "And conceptually, this DTS, that's the API that we, between our projects, have.",
    "start": "2184882",
    "end": "2191022"
  },
  {
    "text": "So if they make up a new version,\nwe will get both new files and we will just compile\nagainst the new DTS",
    "start": "2191022",
    "end": "2198129"
  },
  {
    "text": "and we'll just get errors\nwherever they have decided to drop a certain method\nor to rename it or so on.",
    "start": "2198129",
    "end": "2204368"
  },
  {
    "text": "We do the same when we\nship the Monaco editor, this thing that is a library\nand runs in a browser.",
    "start": "2204368",
    "end": "2209974"
  },
  {
    "text": "And we also do the same\nwhenever you're in an extension, you get a vscode.d.ts that\ndescribes to you the API",
    "start": "2209974",
    "end": "2216647"
  },
  {
    "text": "of TS code on top of which you can build. There's something also cool\nthat TypeScript supports.",
    "start": "2216647",
    "end": "2223287"
  },
  {
    "start": "2220000",
    "end": "2678000"
  },
  {
    "text": "They're called decorators. In this case, they're\nconstructor decorators",
    "start": "2223287",
    "end": "2229626"
  },
  {
    "text": "and we use them to\nactually get really nice service injection. So what they do in this case,",
    "start": "2230621",
    "end": "2237914"
  },
  {
    "text": "this is basically an action in the editor. It's the action that, if\nyou press F12 at one point,",
    "start": "2237914",
    "end": "2244241"
  },
  {
    "text": "it asks someone smarter than it. And after the promise\nreturns, it can actually jump",
    "start": "2244241",
    "end": "2249647"
  },
  {
    "text": "to the definition of a certain symbol. So you would do this on a\nfunction, it would jump you",
    "start": "2249647",
    "end": "2255653"
  },
  {
    "text": "to the place where the\nfunction is implemented. And then we actually use these decorators",
    "start": "2255653",
    "end": "2263347"
  },
  {
    "text": "to signalize that we\nshould inject some services to this action. In this case, I will just\nfocus on the message service.",
    "start": "2264362",
    "end": "2271402"
  },
  {
    "text": "So later in this code, it\ndid not all fit in here. This action, if something\nbad happens like a bubu,",
    "start": "2271402",
    "end": "2278943"
  },
  {
    "text": "like an error, it actually calls\ninside this message service and says show error.",
    "start": "2278943",
    "end": "2285282"
  },
  {
    "text": "Now what this means is\nwhen you run VS code, we have an implementation\nof the message service",
    "start": "2285282",
    "end": "2292056"
  },
  {
    "text": "that shows a little drop\ndown at the top, right? So here, imagine I was\nwriting my cool Fibonacci code",
    "start": "2292056",
    "end": "2298361"
  },
  {
    "text": "and then I was saying go to\ndefinition, it didn't work. It always works by this, which is fake.",
    "start": "2298362",
    "end": "2304835"
  },
  {
    "text": "And then it would just\nshow a message at the top. Now the same code that I've shown,",
    "start": "2304835",
    "end": "2309899"
  },
  {
    "text": "which is this go to definition action, is also shipping with the Monaco editor, which is the library that\nruns in the browser, right?",
    "start": "2309899",
    "end": "2317882"
  },
  {
    "text": "All of a sudden here,\nwe do not own the UI. We do not own the exterior of the editor. So we don't know how this\nmessage should be shown",
    "start": "2317882",
    "end": "2324955"
  },
  {
    "text": "in the app. So the default implementation we ship with of the message service is\njust this stupid console log.",
    "start": "2324955",
    "end": "2331395"
  },
  {
    "text": "But of course we have ways\nfor people that integrate us to substitute that\nimplementation with their own.",
    "start": "2331395",
    "end": "2337702"
  },
  {
    "text": "And finally, inside the\ntest, here I had to do a little bit of paint art to\ncut them out so that they fit,",
    "start": "2337702",
    "end": "2344542"
  },
  {
    "text": "we basically say if the\nmessage service inside the test ever gets to show an error\nmessage, let the test fail.",
    "start": "2344542",
    "end": "2351508"
  },
  {
    "text": "So yeah, okay.",
    "start": "2352650",
    "end": "2354522"
  },
  {
    "text": "Two more recent times. So we are actually built\non top of Electron, and I would like to show you a little bit,",
    "start": "2358498",
    "end": "2364462"
  },
  {
    "text": "have any of you heard before of Electron? Okay, cool, nice. So I hope you will not\nfind it too boring then,",
    "start": "2364462",
    "end": "2373170"
  },
  {
    "text": "but it's easy. Okay, let me stop the other things.",
    "start": "2373170",
    "end": "2378233"
  },
  {
    "text": "Okay, so here I have a\nminimal Electron app. So what is Electron?",
    "start": "2386793",
    "end": "2392523"
  },
  {
    "text": "Electron is basically a very nice marriage of Chromium and Node.js.",
    "start": "2392523",
    "end": "2397661"
  },
  {
    "text": "And how they work is that\nyou give them a script, in this case it's this main.js,\nI will show you in a second.",
    "start": "2397661",
    "end": "2405469"
  },
  {
    "text": "Oh, okay. Sorry about that.",
    "start": "2405469",
    "end": "2412110"
  },
  {
    "text": "Hey, okay, sorry about that. So this is main.js.",
    "start": "2416425",
    "end": "2422008"
  },
  {
    "text": "This is basically where\nI define the entry point to this example. This is a minimal Electron example.",
    "start": "2422008",
    "end": "2428626"
  },
  {
    "text": "So what it does is it uses their API, which comes in form of this\nmodule called Electron.",
    "start": "2428626",
    "end": "2434031"
  },
  {
    "text": "And then once the app is\nready, so usually you would say document on ready, but\nin this case it's more",
    "start": "2434031",
    "end": "2439170"
  },
  {
    "text": "complicated, right? It basically creates a new browser window. It says that's your\nwidth, that's your height.",
    "start": "2439170",
    "end": "2445409"
  },
  {
    "text": "And in this browser window, it will load the file index.html.",
    "start": "2445409",
    "end": "2452583"
  },
  {
    "text": "And then once it's closed, it's closed; and once it's closed, it\nquits or something like that. So that's how you should read that.",
    "start": "2452583",
    "end": "2458588"
  },
  {
    "text": "Inside the index.html, that's where you actually have,",
    "start": "2458589",
    "end": "2464420"
  },
  {
    "text": "that's where you finally\nget both the browser API and the Node API. This main.js is basically\na driver of these windows.",
    "start": "2464420",
    "end": "2472741"
  },
  {
    "text": "So you know how Chrome,\nif you launch Chrome and you open a new tab,\nthey make a new process? And you open a new tab,\nthey make a new process?",
    "start": "2473737",
    "end": "2480744"
  },
  {
    "text": "So how this all works is that\nthey have a main process, which is basically an Electron\ndriven by this main.js;",
    "start": "2480744",
    "end": "2487918"
  },
  {
    "text": "and that process is always\nthere and that's the process that communicates to the OS. And that's the process\nthat owns like the buttons,",
    "start": "2487918",
    "end": "2495059"
  },
  {
    "text": "the menus and so on. And then you have each render process, which is more or less\nwhat it gets rendered",
    "start": "2495059",
    "end": "2500998"
  },
  {
    "text": "inside a document. So let me just try to run it. I would even show you here.",
    "start": "2500998",
    "end": "2506566"
  },
  {
    "text": "Hopefully that works.",
    "start": "2506566",
    "end": "2508476"
  },
  {
    "text": "So this is a really simple example. It just says hello world. But I wanted to show that\nalready, when I launch it, right,",
    "start": "2513224",
    "end": "2522253"
  },
  {
    "text": "there's a main process and then, and this you can recognize like it has...",
    "start": "2522253",
    "end": "2527430"
  },
  {
    "text": "Okay, it's hard to read, sorry about that. It basically says main.js. And then this one is a renderer process,",
    "start": "2527430",
    "end": "2533630"
  },
  {
    "text": "which is the marriage\nof the HTML and Node.",
    "start": "2533631",
    "end": "2537538"
  },
  {
    "text": "Now to better prove that\nthis is really a marriage made in heaven, inside this renderer.js",
    "start": "2539817",
    "end": "2545856"
  },
  {
    "text": "I've let some code in. And I hope your eyes are\nnot bleeding right now because yeah, on this line,\nwe are actually making",
    "start": "2547395",
    "end": "2554818"
  },
  {
    "text": "a dom element. And on the next line,\nwe are using Node API to fill that element in, right?",
    "start": "2554818",
    "end": "2561759"
  },
  {
    "text": "So you should never do this at home. But that's actually one of the cool stuff, oh why did I kill it, of Electron.",
    "start": "2561759",
    "end": "2569099"
  },
  {
    "text": "So now this thing runs and it just prints its own source code. But this just shows how they allow you",
    "start": "2569099",
    "end": "2576037"
  },
  {
    "text": "to work together and have\nsomething which is both HTML and Node.js. So this is great if you're\nlike if you know JavaScript,",
    "start": "2576038",
    "end": "2583614"
  },
  {
    "text": "you know HTML5, you know Node, all of a sudden you can build a rich app and ship it very easily.",
    "start": "2583614",
    "end": "2590952"
  },
  {
    "text": "One thing I wanted to point out is that this main.js is\na very important process.",
    "start": "2590952",
    "end": "2598750"
  },
  {
    "text": "So inside this main.js, you should not do what I'm about to do now,\nwhich is more or less",
    "start": "2598750",
    "end": "2605073"
  },
  {
    "text": "it's a set interval. And what it's doing is\nits computing Fibonacci,",
    "start": "2606870",
    "end": "2612443"
  },
  {
    "text": "which is always good to compute. Everybody loves that. And the number its\ncomputing on grows, right?",
    "start": "2612443",
    "end": "2618882"
  },
  {
    "text": "So this is more or less exponential in big o notation and so on.",
    "start": "2618882",
    "end": "2624221"
  },
  {
    "text": "So if you now run this, what will happen is, you\nsee as I'm moving the mouse,",
    "start": "2624221",
    "end": "2631061"
  },
  {
    "text": "at one point you see how the\nthing, okay, it's hard to see. Maybe we already lost it.",
    "start": "2631061",
    "end": "2636813"
  },
  {
    "text": "But at this point the\nwhole thing goes down because how Electron inherits\nthe process architecture",
    "start": "2636813",
    "end": "2643841"
  },
  {
    "text": "of Chromium, so this main\nprocess, if it's now super busy, it will basically bring\ndown everything with it",
    "start": "2643841",
    "end": "2651015"
  },
  {
    "text": "because even a mouse move actually goes to the main process, and then the mouse move is sent over",
    "start": "2651015",
    "end": "2657254"
  },
  {
    "text": "to the renderer process where\nyou actually get a chance to do something. And if your main process is\nbusy, your app is sort of dead.",
    "start": "2657254",
    "end": "2665162"
  },
  {
    "text": "So this is just a little bit to motivate. Okay, thank you. I know why I did this. I deserve.",
    "start": "2665162",
    "end": "2672636"
  },
  {
    "text": "This is just a little bit to motivate what we do in Visual Studio code.",
    "start": "2672636",
    "end": "2679176"
  },
  {
    "start": "2678000",
    "end": "3081000"
  },
  {
    "text": "So as I said before, this\nis basically what we get from Electron, Electron\ngets this from Chromium.",
    "start": "2679176",
    "end": "2685616"
  },
  {
    "text": "And once you run it, you get\na main process over here. And for each window you\nopen, similar how in Chrome",
    "start": "2685616",
    "end": "2692155"
  },
  {
    "text": "you open a new tab you get\na new renderer process. Now what we've done is that\nas I've shown you before,",
    "start": "2692156",
    "end": "2699096"
  },
  {
    "text": "it's very dangerous to do\nactually anything in that one because if you, by\naccident, have something",
    "start": "2699096",
    "end": "2705469"
  },
  {
    "text": "which is a little bit\ncomplex or a little bit maybe takes two seconds, all\nof a sudden all your windows",
    "start": "2705469",
    "end": "2711909"
  },
  {
    "text": "might not get the UI events and so on. So we actually create a new process",
    "start": "2711909",
    "end": "2717815"
  },
  {
    "text": "where we do things such\nas checking for updates, because this is something that\nimpacts the entire product.",
    "start": "2717815",
    "end": "2723454"
  },
  {
    "text": "Or we do things such as\nmanaging extensions and so on. We have other processes.",
    "start": "2723454",
    "end": "2730529"
  },
  {
    "text": "So for each renderer process,\nwe create an extension host. And we also launch on-demand processes.",
    "start": "2730529",
    "end": "2735732"
  },
  {
    "text": "Like if you do a search,\nwe will launch a process, it will quickly search on\nthe folder you have open and give back the results and so on.",
    "start": "2735732",
    "end": "2743407"
  },
  {
    "text": "Yeah, we also have web workers. So this is all making the\nthing very complicated",
    "start": "2743407",
    "end": "2748579"
  },
  {
    "text": "because each one of these processes, they have a different\nexecution environment.",
    "start": "2748579",
    "end": "2753683"
  },
  {
    "text": "So the blue ones are Node. The dark blue one is Node\nand a little bit of Electron.",
    "start": "2753684",
    "end": "2761393"
  },
  {
    "text": "The purple one is Node\nand Electron and HTML5. The green one is just\nJavaScript and web worker API.",
    "start": "2761394",
    "end": "2768866"
  },
  {
    "text": "So today we don't have a\ngreat solution for this. So it's still something\nwe're trying to figure out.",
    "start": "2768866",
    "end": "2775005"
  },
  {
    "text": "But we do use a folder\npath name-based convention sort of thing. So we have code under Common,\nunder Node, under browser",
    "start": "2775005",
    "end": "2781612"
  },
  {
    "text": "and so on. Another quick demo, I'll try to hurry up.",
    "start": "2781612",
    "end": "2787379"
  },
  {
    "text": "This is basically how\ndo we actually develop Visual Studio code.",
    "start": "2788233",
    "end": "2794024"
  },
  {
    "text": "So okay, I hope you get\nto see it this time.",
    "start": "2794024",
    "end": "2797485"
  },
  {
    "text": "So basically, to develop\nVisual Studio code, you more or less clone the VS called repo. You do npm install conceptionally,",
    "start": "2801632",
    "end": "2808939"
  },
  {
    "text": "and then just run gulp watch,\nwhich is just something I've already done before\nbecause I don't want you",
    "start": "2808939",
    "end": "2814077"
  },
  {
    "text": "to be bored today. And one of the things\nwe've invested in is that once you launch the sculpt\nwatch, it takes a little bit",
    "start": "2814077",
    "end": "2821285"
  },
  {
    "text": "to warm up. So it's like takes maybe 30, 40 seconds. But then every little change\nyou do becomes incremental.",
    "start": "2821285",
    "end": "2827791"
  },
  {
    "text": "So if I do changes inside\nthe VS code TypeScript code,",
    "start": "2827791",
    "end": "2831489"
  },
  {
    "text": "this guy to the bottom kicks in. And just like that, like\nin under a second or so, it basically has compiled\nand generated the JavaScript.",
    "start": "2833639",
    "end": "2840804"
  },
  {
    "text": "This is something which\nwe found very valuable. Like this cycle of typing\nsomething and then being able",
    "start": "2840804",
    "end": "2846810"
  },
  {
    "text": "to run it the next second\nis very important for us. So to actually run it, we just\nhave in here a script/code.",
    "start": "2846810",
    "end": "2855046"
  },
  {
    "text": "And then this runs Visual Studio code in development mode, right? It runs out of the sources.",
    "start": "2856712",
    "end": "2862893"
  },
  {
    "text": "It's not package, it's not bundled, it allows us to do nice\ndebugging and so on.",
    "start": "2862893",
    "end": "2868378"
  },
  {
    "text": "One of the things I wanted to do here is, and it's of course motivated\nby an interesting thing...",
    "start": "2870334",
    "end": "2879058"
  },
  {
    "text": "So I don't know if you've seen this page. So at one point, when I\nregistered for the go-to thing,",
    "start": "2881545",
    "end": "2887985"
  },
  {
    "text": "they asked me to give a\nfun tagline about myself. So I thought okay, what's\ncooler than drinking beer,",
    "start": "2887985",
    "end": "2894024"
  },
  {
    "text": "which I love to drink, right? And apparently, in the\nmeantime, they renamed the field to say what company you work for.",
    "start": "2894024",
    "end": "2899963"
  },
  {
    "text": "So that's why I'm the guy that\nsays my job is to drink beer, which is a great job.",
    "start": "2899963",
    "end": "2906036"
  },
  {
    "text": "So I thought then I just do a demo which actually shows I'm a\nbeer drinker professionally.",
    "start": "2906036",
    "end": "2911675"
  },
  {
    "text": "So here I will just make a little change to some CSS of course, and\nI'll just do the right thing",
    "start": "2911675",
    "end": "2919983"
  },
  {
    "text": "such that when you refresh, now, all of a sudden, you get beer",
    "start": "2919983",
    "end": "2925355"
  },
  {
    "text": "in your editor background\neverywhere, right? So this is just the best. Who needs to read code? You can just say oh I could not read it",
    "start": "2925355",
    "end": "2931561"
  },
  {
    "text": "because of the beer. So yeah, that's a tiny change. Something else, which I wanted to show,",
    "start": "2931561",
    "end": "2938502"
  },
  {
    "text": "and that's something we care and we do. So let me just bind these keys again.",
    "start": "2938502",
    "end": "2946954"
  },
  {
    "text": "So this just adds some\ncommands, which I have locally. We don't ship this because it's\njust some performance test.",
    "start": "2952015",
    "end": "2959178"
  },
  {
    "text": "And now it just bounds them to F2, F3, F4. So what they do is they do\nlots of stuff like the F3.",
    "start": "2959178",
    "end": "2966096"
  },
  {
    "text": "Okay, I have to refresh to get it, sorry. So if I now press F3, it's\njust a performance test",
    "start": "2966096",
    "end": "2972169"
  },
  {
    "text": "that I run every now and\nthen, which is just acting as if you would just\nhold down the cursor down",
    "start": "2972169",
    "end": "2977741"
  },
  {
    "text": "and just like scroll down, right? And this is one of the things\nthat we use to profile, and we try to really put an emphasis",
    "start": "2977741",
    "end": "2985949"
  },
  {
    "text": "on making our editor performance. So let me remove a little\nbit the background.",
    "start": "2985949",
    "end": "2992071"
  },
  {
    "text": "But basically, what we do, and this is the one I\nactually like the most,",
    "start": "2992071",
    "end": "2997574"
  },
  {
    "text": "is the F4 one. And I hope (mumbles) see that.",
    "start": "2997574",
    "end": "3002799"
  },
  {
    "text": "So this is me usually working, right? So you see my productivity\ngoing up like crazy? But this is just a test\nwhich is more or less",
    "start": "3002799",
    "end": "3009873"
  },
  {
    "text": "typing out an entire file. And usually, how I run\nthis of course is I open up developer tools and I\nprofile it and then I try",
    "start": "3009873",
    "end": "3016713"
  },
  {
    "text": "to dig into what's happening. So that being said, this\nis actually something",
    "start": "3016713",
    "end": "3023065"
  },
  {
    "text": "which I wanted to share. It might or might not help\nyou in your day-to-day life,",
    "start": "3024121",
    "end": "3029226"
  },
  {
    "text": "but I wanted to share this\ntechnique that we end up doing in the editor. So this is actually\ncalled virtual scrolling.",
    "start": "3030617",
    "end": "3038468"
  },
  {
    "text": "And what I captured here\nis, on the one side, I'm scrolling inside the\neditor; and on the other side,",
    "start": "3038468",
    "end": "3044508"
  },
  {
    "text": "I have shown the developer\ntools, the Dom nodes, right? And you see, okay, I try\nto do it very slowly that",
    "start": "3044508",
    "end": "3050447"
  },
  {
    "text": "as you scroll the lines\ndown, the old lines go up. They get pushed and\nthen eventually removed.",
    "start": "3050447",
    "end": "3056486"
  },
  {
    "text": "So you get to see that they\nget removed at the top. And new ones come in,\nand you see they have",
    "start": "3056486",
    "end": "3061491"
  },
  {
    "text": "this nice animation which\nshows you which ones are fresh and so on. So this is all very\ngood, this is of course",
    "start": "3061491",
    "end": "3068598"
  },
  {
    "text": "something which we had. Of course this doesn't really help you if you have a really, really long line,",
    "start": "3068598",
    "end": "3073637"
  },
  {
    "text": "like the F12 guys asked us to fix. But it does have some\ninteresting problems of its own.",
    "start": "3073637",
    "end": "3080410"
  },
  {
    "text": "So maybe the guys in the\nfirst row can read it. Do you actually know what this is?",
    "start": "3080410",
    "end": "3088218"
  },
  {
    "start": "3081000",
    "end": "3096000"
  },
  {
    "text": "This is jQuery, but it's not\nhere because it's jQuery. This is jQuery minified, right? So as I was saying, this is actually,",
    "start": "3088218",
    "end": "3095558"
  },
  {
    "start": "3096000",
    "end": "3141000"
  },
  {
    "text": "if you show this to any guy\nwho's written an editor, they will tell you to\ngo out please because this is just the worst\nyou could do, right?",
    "start": "3096938",
    "end": "3103834"
  },
  {
    "text": "Because at one point,\nif you think about it, when we have to render\nthis; and we render it as each little different color text,",
    "start": "3103834",
    "end": "3112542"
  },
  {
    "text": "we make a span out of it. So we do create a Dom\nnode, and it's a span. And for example, jQuery\nmin in the first 42 lines,",
    "start": "3112542",
    "end": "3120549"
  },
  {
    "text": "it generates, we need to\nrender like 3,500 tokens. Meanwhile, a normal file, like\nthis is jQuery non-minified,",
    "start": "3120550",
    "end": "3129427"
  },
  {
    "text": "is yeah, only 280 tokens because mostly they have a lot of comments, which I love,",
    "start": "3129427",
    "end": "3134770"
  },
  {
    "text": "because they're all green, which\nmeans performance is great. So write comments in your code.",
    "start": "3134770",
    "end": "3139748"
  },
  {
    "start": "3141000",
    "end": "3205000"
  },
  {
    "text": "But basically, the problem we were having, and something which I was\ndoing, is I was profiling this and trying to see how it goes.",
    "start": "3141104",
    "end": "3148211"
  },
  {
    "text": "So even though the frame rate was up, the CPU time was quite high as well.",
    "start": "3148211",
    "end": "3153661"
  },
  {
    "text": "And one thing I would\nrecommend is to get to know the tools you have. So I don't know if you ever used this one,",
    "start": "3155118",
    "end": "3160524"
  },
  {
    "text": "this enabled pane flashing. This one gets to show to you what actually",
    "start": "3160524",
    "end": "3166905"
  },
  {
    "text": "Chrome paints on each frame. And after enabling this, I\ncould see that on each time",
    "start": "3166905",
    "end": "3172969"
  },
  {
    "text": "you were scrolling, Chrome\nwould paint the whole thing. And one of the reason it\nwas doing that is because as part of scrolling, I was\njust moving the position",
    "start": "3172969",
    "end": "3181065"
  },
  {
    "text": "of the Dom nodes, right? I was just saying position\nis now minus five. Okay, we have to cut it short.",
    "start": "3181065",
    "end": "3187551"
  },
  {
    "text": "Anyhow we used, in the end, translate3d. Yeah, these are some links.",
    "start": "3187551",
    "end": "3194024"
  },
  {
    "text": "And yeah, thank you for\nlistening to me today. Yeah.\n(audience applause)",
    "start": "3194024",
    "end": "3200629"
  }
]