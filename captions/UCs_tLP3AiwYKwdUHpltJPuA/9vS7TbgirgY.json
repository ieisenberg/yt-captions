[
  {
    "start": "0",
    "end": "76000"
  },
  {
    "text": "[Music]",
    "start": "2570",
    "end": "10170"
  },
  {
    "text": "so hi I'm Randy sha um and I wanted to talk about pragmatic microservices um",
    "start": "12480",
    "end": "17640"
  },
  {
    "text": "and this talk sort of came out of I've spent the last couple of years evangelizing microservices I've worked at Google and eBay so a bunch of",
    "start": "17640",
    "end": "24480"
  },
  {
    "text": "environments where we did microservices a lot um and then it became clear that everybody was talking about how great microser are but nobody was talking",
    "start": "24480",
    "end": "31320"
  },
  {
    "text": "about how to make the decision to go to microservices and to give people a sort of principled way of deciding whether to",
    "start": "31320",
    "end": "37840"
  },
  {
    "text": "uh go in that direction or stay with what they have so how many people are already on a microservices architecture",
    "start": "37840",
    "end": "42920"
  },
  {
    "text": "in the room surprising amount so maybe a quarter of the people so this talk is more for the three quarters than for the",
    "start": "42920",
    "end": "48879"
  },
  {
    "text": "one quarter cool so this uh like I said I used to work for Google and for eBay and",
    "start": "48879",
    "end": "55879"
  },
  {
    "text": "um a lot of the things that uh I going to talk about here came out of conversations that went something like this so I I live in Silicon Valley and I",
    "start": "55879",
    "end": "63199"
  },
  {
    "text": "advise a bunch of startups and conversations would go hey Randy tell us how you did stuff at Google and eBay and",
    "start": "63199",
    "end": "68920"
  },
  {
    "text": "I'd say sure I'll be very happy to tell you but you have to promise me not to do it at least not yet so uh large scale",
    "start": "68920",
    "end": "77880"
  },
  {
    "start": "76000",
    "end": "202000"
  },
  {
    "text": "architectures that uh that are the sort of poster children of microservices evolve they didn't uh appear as",
    "start": "77880",
    "end": "84680"
  },
  {
    "text": "microservices in the beginning so to take an example from eBay depending on how you account ebays on about its fifth",
    "start": "84680",
    "end": "91520"
  },
  {
    "text": "generation of its architecture so it famously started as a monolithic Pearl application that the founder wrote in a",
    "start": "91520",
    "end": "97520"
  },
  {
    "text": "3-day weekend in 1995 it then moved to a monolithic C++ application that at its",
    "start": "97520",
    "end": "103640"
  },
  {
    "text": "worst was 3.4 million lines of code in a single dll so please don't do that um it",
    "start": "103640",
    "end": "110640"
  },
  {
    "text": "then migrated to uh a Java based uh a Java based uh infrastructure which was",
    "start": "110640",
    "end": "116479"
  },
  {
    "text": "partitioned but not really microservices a bunch of parallel applications and finally I think it's fair to characterize the current eBay as a",
    "start": "116479",
    "end": "123560"
  },
  {
    "text": "microservices architecture so Twitter went through a similar Evolution so depending on how you count Twitter's on",
    "start": "123560",
    "end": "129399"
  },
  {
    "text": "about its third generation of its infrastructure so it started famously as a monolithic rails application which my",
    "start": "129399",
    "end": "135200"
  },
  {
    "text": "Twitter friends tell me was nicknamed the monal which I thought was quite clever um it then moved to uh pulling",
    "start": "135200",
    "end": "141519"
  },
  {
    "text": "out a bunch of the front end into JavaScript a bunch of the backend into Services mostly written in Scola and now",
    "start": "141519",
    "end": "146879"
  },
  {
    "text": "Twitter is mostly is a PO is a polyglot set of microservices and Amazon has gone",
    "start": "146879",
    "end": "152319"
  },
  {
    "text": "through a similar Evolution there not so so clear there aren't so many so clear a distinction between the the um",
    "start": "152319",
    "end": "159120"
  },
  {
    "text": "architecture uh sort of boundaries but um it started out as a monolithic C++",
    "start": "159120",
    "end": "164560"
  },
  {
    "text": "application uh a bunch of services written mostly in Java and Scola um and now Amazon can be characterized as again",
    "start": "164560",
    "end": "171319"
  },
  {
    "text": "a set of polyglot microservices so there are two things to notice here one is that companies at Large Scale ultimately",
    "start": "171319",
    "end": "177519"
  },
  {
    "text": "end up evolving to microservices absolutely true and it's absolutely the right choice for them at large scale but",
    "start": "177519",
    "end": "183239"
  },
  {
    "text": "none of them started that way right so I think the key thing to take away and what I want to leave you with is",
    "start": "183239",
    "end": "189000"
  },
  {
    "text": "thinking about the is the steps along the way in the evolution and making the right choice for where you are now or",
    "start": "189000",
    "end": "195080"
  },
  {
    "text": "another way to ask the pro ask the question is are microservices really the right solution for every problem and I",
    "start": "195080",
    "end": "200519"
  },
  {
    "text": "think the answer is no so to break it down I wanted to talk first about some mon monolithic architectures then I",
    "start": "200519",
    "end": "207400"
  },
  {
    "start": "202000",
    "end": "229000"
  },
  {
    "text": "wanted to talk about some of the characteristics of microservice architectures then I want to talk about the re architecture decision how is it",
    "start": "207400",
    "end": "213959"
  },
  {
    "text": "and when when are we going to make the decision to re architect potentially and finally I want to give you some suggestions from successful re",
    "start": "213959",
    "end": "220200"
  },
  {
    "text": "architectures that I've been involved with about some tactics and strategies you can use to make that re architecture",
    "start": "220200",
    "end": "225720"
  },
  {
    "text": "successful um so first I want to talk about monoliths so we like to uh we like",
    "start": "225720",
    "end": "232720"
  },
  {
    "start": "229000",
    "end": "313000"
  },
  {
    "text": "to feel sometimes that monoliths are bad and we should feel ashamed of them um but as as as you heard a moment ago all",
    "start": "232720",
    "end": "239040"
  },
  {
    "text": "those companies that we've heard of and maybe used every day all started as a monolith and there are actually uh real",
    "start": "239040",
    "end": "245120"
  },
  {
    "text": "advantages to having a monolithic approach right it's certainly simple at first it's a very simple Approach at",
    "start": "245120",
    "end": "251000"
  },
  {
    "text": "small scale all the latencies within a monolithic application are in process so",
    "start": "251000",
    "end": "256160"
  },
  {
    "text": "it's it's quite fast um typically it's a single code base and a single deployment unit so that has some nice uh",
    "start": "256160",
    "end": "262360"
  },
  {
    "text": "operational simplicities um and it's very resource efficient at small scale",
    "start": "262360",
    "end": "267440"
  },
  {
    "text": "there are lots of cons that come along with monoliths too mostly that occur at larger scale so the coordination",
    "start": "267440",
    "end": "273160"
  },
  {
    "text": "overhead grows uh substantially as your team size grows and rodrigue's excellent uh presentation about zolando earlier",
    "start": "273160",
    "end": "279759"
  },
  {
    "text": "today gave some really crisp examples of that um there's poor enforcement of modularity with which Adrien pointed out",
    "start": "279759",
    "end": "285960"
  },
  {
    "text": "in the keynote this morning so there's nothing that's going to help that's going to force you to be properly moduled between individual components",
    "start": "285960",
    "end": "292160"
  },
  {
    "text": "and a monolith um it also you you also get poor scaling so typically in a",
    "start": "292160",
    "end": "297520"
  },
  {
    "text": "monolithic application you only get the vertical scaling option you don't have the opport the option to break it up",
    "start": "297520",
    "end": "302960"
  },
  {
    "text": "into smaller horizontal pieces and finally the monolith tends to be a single point of failure both in terms of",
    "start": "302960",
    "end": "308440"
  },
  {
    "text": "bugs and in terms of sort of operational",
    "start": "308440",
    "end": "312880"
  },
  {
    "start": "313000",
    "end": "413000"
  },
  {
    "text": "availability but when when you have a monolithic architecture maybe the most sort of Monolithic aspect of it tends to",
    "start": "313680",
    "end": "320199"
  },
  {
    "text": "be the database um and this is actually something that my current company stitchfix in the US is wrestling with right now so uh the pros of having a",
    "start": "320199",
    "end": "328360"
  },
  {
    "text": "monolithic database are again that it's very it's very simple it's simple to have everything all in one place join",
    "start": "328360",
    "end": "334919"
  },
  {
    "text": "queries where we want to join multiple entities together and get and do queries across uh M multiple tables are very",
    "start": "334919",
    "end": "340800"
  },
  {
    "text": "easy in uh in a monolithic database you get the benefit of transactions so uh",
    "start": "340800",
    "end": "347440"
  },
  {
    "text": "that actually has some really nice uh really nice properties uh makes makes life a lot easier certainly um and then",
    "start": "347440",
    "end": "352919"
  },
  {
    "text": "again it's very resource efficient at small scale but uh but the and the problems that are uh that that uh happen",
    "start": "352919",
    "end": "360360"
  },
  {
    "text": "with a monolithic database tend to again happen at larger scale so the database tends to be a coupling point for your",
    "start": "360360",
    "end": "366199"
  },
  {
    "text": "team over time um it tends to be tends at larger scale it becomes a performance",
    "start": "366199",
    "end": "371360"
  },
  {
    "text": "and a scalability bottleneck it can be diff difficult to tune a monolithic database properly right if a database is",
    "start": "371360",
    "end": "377479"
  },
  {
    "text": "doing lots of different things uh as Adrien pointed out in the keynote if it's really your kitchen syn then it's",
    "start": "377479",
    "end": "382840"
  },
  {
    "text": "hard to get uh hard to tune it for any one particular use case when you're using it for uh bulk reads uh large",
    "start": "382840",
    "end": "390520"
  },
  {
    "text": "scale queries fast read reads and writes of individual records um all those things are you know different tuning uh",
    "start": "390520",
    "end": "397240"
  },
  {
    "text": "would would would uh leverage different um tuning approaches um and are difficult and if you have one that's one",
    "start": "397240",
    "end": "402800"
  },
  {
    "text": "database that's doing it all um it's difficult to to tune it uh in a global way uh and then finally the monolithic",
    "start": "402800",
    "end": "408919"
  },
  {
    "text": "database becomes a single point of failure but if you're in a monolithic situation you can um set yourself up for",
    "start": "408919",
    "end": "415080"
  },
  {
    "start": "413000",
    "end": "729000"
  },
  {
    "text": "Success even without moving to microservices so one of the things that I strongly recommend is exploiting the",
    "start": "415080",
    "end": "420720"
  },
  {
    "text": "natural partitions in your problem right so lots of different problems problem areas that we face every day and our uh",
    "start": "420720",
    "end": "427560"
  },
  {
    "text": "naturally partition into into separate areas so if you're writing an e-commerce site like eBay that naturally partitions",
    "start": "427560",
    "end": "434599"
  },
  {
    "text": "into the buyer side and the seller side if you're riding a ride sharing application like Uber or Lyft that",
    "start": "434599",
    "end": "440759"
  },
  {
    "text": "naturally partitions into the rider side and the driver side um and similarly search engines naturally partition into",
    "start": "440759",
    "end": "447879"
  },
  {
    "text": "the crawler the indexer and the query engine um so and the next thing that you",
    "start": "447879",
    "end": "453400"
  },
  {
    "text": "can do is uh force yourself and force your team to have the discipline around keeping modular boundaries within",
    "start": "453400",
    "end": "459919"
  },
  {
    "text": "components so you know I'm old enough to have no hair anymore and 25 years ago we",
    "start": "459919",
    "end": "465280"
  },
  {
    "text": "didn't have microservices but we did have modularity right so it's definitely possible even in a system where there's",
    "start": "465280",
    "end": "471520"
  },
  {
    "text": "one application or one binary to have modular divisions between individual components um and that internal",
    "start": "471520",
    "end": "478159"
  },
  {
    "text": "componentization gives a lot of the the cognitive benefits of dividing of um",
    "start": "478159",
    "end": "483560"
  },
  {
    "text": "Distributing into microservices and also as you want as you decide to move to something more like microservices it",
    "start": "483560",
    "end": "489960"
  },
  {
    "text": "makes those individual components easy to modify or replace with a remote service and then the final thing uh that",
    "start": "489960",
    "end": "496919"
  },
  {
    "text": "that is critical I think to sort of a healthy monolith is the ability to do continuous delivery in other words the",
    "start": "496919",
    "end": "503000"
  },
  {
    "text": "ability to do rapid improvements uh rapid releases to um to the code and",
    "start": "503000",
    "end": "508840"
  },
  {
    "text": "that allows you to rapidly evolve the monolith and it also as we'll see in a moment allows you to rapidly evolve from",
    "start": "508840",
    "end": "515479"
  },
  {
    "text": "a monolithic approach into microservices if that's the way that you end up uh wanting to go okay so that was a little that was a",
    "start": "515479",
    "end": "523518"
  },
  {
    "text": "brief tour of monoliths and now I want to talk about uh microservice architectures so it's a bit funny that",
    "start": "523519",
    "end": "529320"
  },
  {
    "text": "we haven't we've gone alwayss talking about microservices today but um but I guess we haven't really defined them so",
    "start": "529320",
    "end": "535440"
  },
  {
    "text": "to me the important characteristics of a microservice are that it be single person purpose that it have a simple",
    "start": "535440",
    "end": "541760"
  },
  {
    "text": "well- defined interface and that uh that the individual uh services in a microservices architecture be modular",
    "start": "541760",
    "end": "549120"
  },
  {
    "text": "and independent of each other and something that we'll talk about a little bit later is in order to be really",
    "start": "549120",
    "end": "554160"
  },
  {
    "text": "successful um by contrast to the monolithic database that's may be shared with lots of different parts of the",
    "start": "554160",
    "end": "559360"
  },
  {
    "text": "system in order for microservices to really be successful we need The Individual Services to own their own",
    "start": "559360",
    "end": "565519"
  },
  {
    "text": "isolated persistence so now you might look at you might look at something like this and",
    "start": "565519",
    "end": "570680"
  },
  {
    "text": "say uh this is a new idea well you know the idea the word microservices is relatively new it's only a couple of",
    "start": "570680",
    "end": "576920"
  },
  {
    "text": "years old but the concept of dividing a system into these individual um uh",
    "start": "576920",
    "end": "581959"
  },
  {
    "text": "independently cooperating components is uh is quite old um and to my mind",
    "start": "581959",
    "end": "587760"
  },
  {
    "text": "microservices despite the fanciness of the word are nothing more than a service oriented architecture done",
    "start": "587760",
    "end": "594440"
  },
  {
    "text": "properly so uh I want to talk now a little bit about the sort of pros and cons to",
    "start": "594440",
    "end": "600120"
  },
  {
    "text": "microservices so uh each so one of the nice nice advantages of a microservices",
    "start": "600120",
    "end": "605440"
  },
  {
    "text": "approach is that each individual unit is simple um so that's the idea of the microservice it's a very simple",
    "start": "605440",
    "end": "611240"
  },
  {
    "text": "individual component you you can now independently scale you can uh independently scale them and they can",
    "start": "611240",
    "end": "616959"
  },
  {
    "text": "have independent performance uh characteristics you can also uh I think this is less well appreciated you",
    "start": "616959",
    "end": "623600"
  },
  {
    "text": "because the microservices are small and independent it's a lot easier to independently test and independently",
    "start": "623600",
    "end": "628640"
  },
  {
    "text": "deploy them I mean that can be a real advantage in a in a large scale system and then finally um because",
    "start": "628640",
    "end": "634839"
  },
  {
    "text": "microservices are single purpose it allows us to potentially optimally tune the performance of that particular part",
    "start": "634839",
    "end": "640880"
  },
  {
    "text": "of the system so we can introduce caching for example behind the behind the service interface in or introduce",
    "start": "640880",
    "end": "646800"
  },
  {
    "text": "the a more appropriate data structure data storage mechanism which allows us to tune the performance of that",
    "start": "646800",
    "end": "652040"
  },
  {
    "text": "particular part of the system uh optimally some of the cons of microservices are um that each",
    "start": "652040",
    "end": "659639"
  },
  {
    "text": "individual unit is simple but now you have lots of different cooperating units and the complexity of the system has",
    "start": "659639",
    "end": "665360"
  },
  {
    "text": "changed so it's now now we have individual simple uh simple units but some of the complexity of that system",
    "start": "665360",
    "end": "670720"
  },
  {
    "text": "has moved toward uh the interactions between the units and and if we don't have really good monitoring as I'll talk",
    "start": "670720",
    "end": "676480"
  },
  {
    "text": "about in a moment that's going to be a place where operationally and sort of development wise we're going to be blind",
    "start": "676480",
    "end": "682160"
  },
  {
    "text": "to those complexities so we've also in in microservices now replaced those in",
    "start": "682160",
    "end": "688120"
  },
  {
    "text": "process latencies now with Network latencies so now we need to be a lot more careful with um making calls in",
    "start": "688120",
    "end": "693720"
  },
  {
    "text": "parallel making calls asynchronously um dealing with all the issues of long of relatively longer",
    "start": "693720",
    "end": "699680"
  },
  {
    "text": "latencies um between uh uh for the calls than we might be used to if everything was all in process uh we've lost the",
    "start": "699680",
    "end": "706680"
  },
  {
    "text": "ability to do transactions there are lots of things we can talk about uh separately if you'd like about ways we",
    "start": "706680",
    "end": "712560"
  },
  {
    "text": "can get some of the some of the uh nice benefits of transactions back but you don't get them in a nice easy free way",
    "start": "712560",
    "end": "718959"
  },
  {
    "text": "um and microservices also are a situation where we require a lot more sophisticated tooling and a lot more uh",
    "start": "718959",
    "end": "725079"
  },
  {
    "text": "dependency management than we're than we're used to with a monolith so one of the things I want to",
    "start": "725079",
    "end": "730800"
  },
  {
    "start": "729000",
    "end": "763000"
  },
  {
    "text": "talk about now are some of the prerequisites for being successful with microservices and you'll see some some",
    "start": "730800",
    "end": "737279"
  },
  {
    "text": "major parallels with what rodrig talked about earlier this afternoon um uh",
    "start": "737279",
    "end": "742680"
  },
  {
    "text": "because uh he's actually he's actually really lived it so um I first want to talk about process maturity then I want",
    "start": "742680",
    "end": "749320"
  },
  {
    "text": "to talk about organizational maturity and finally operational uh maturity and I think if you don't have all these",
    "start": "749320",
    "end": "754720"
  },
  {
    "text": "these pieces in place that you should work on dealing with these pieces before moving to something uh before moving to",
    "start": "754720",
    "end": "761519"
  },
  {
    "text": "microservices so the first area I wanted to talk about is in process maturity um and here I want to highlight the idea of",
    "start": "761519",
    "end": "768000"
  },
  {
    "start": "763000",
    "end": "887000"
  },
  {
    "text": "continuous delivery so it's a nice to have in the monolithic world it's an absolute requirement when we're in uh a",
    "start": "768000",
    "end": "773959"
  },
  {
    "text": "microservices world so what we need to have happen before we can successfully deploy a microservices approach Ro is to",
    "start": "773959",
    "end": "779880"
  },
  {
    "text": "have a really repeatable deployment pipeline where we have lowrisk push button deployment it's really easy maybe",
    "start": "779880",
    "end": "786839"
  },
  {
    "text": "one line in a command line or a button in a UI um that allows us to do a really Rapid Release Cadence so we're able to",
    "start": "786839",
    "end": "793480"
  },
  {
    "text": "release potentially mult multiple times a day and also uh critically allow allow",
    "start": "793480",
    "end": "798680"
  },
  {
    "text": "us both to uh to roll back and to recover when those deployments don't work uh don't work",
    "start": "798680",
    "end": "804079"
  },
  {
    "text": "well the other aspect of continuous delivery that's important here is is to have a strong emphasis around automated",
    "start": "804079",
    "end": "810399"
  },
  {
    "text": "testing and all of the uh all of the places that I know that have um really",
    "start": "810399",
    "end": "815519"
  },
  {
    "text": "done well with microservices have adopted automated testing um straight away so it's important here that the",
    "start": "815519",
    "end": "821880"
  },
  {
    "text": "developers are writing the tests and and code at the same time so as I'm not done",
    "start": "821880",
    "end": "828519"
  },
  {
    "text": "with my feature or my change to the system until I've both written the code that implements the feature and also",
    "start": "828519",
    "end": "833920"
  },
  {
    "text": "written the code that tests the feature um it's less important to me whether it's test driven or test first um but",
    "start": "833920",
    "end": "840720"
  },
  {
    "text": "I'm not done with that with that uh piece of work until it's both uh written works and and it's tested um and this",
    "start": "840720",
    "end": "847839"
  },
  {
    "text": "allows this gives us the confidence to make risky changes to the software and to release it um many potentially",
    "start": "847839",
    "end": "854600"
  },
  {
    "text": "multiple times a day um and then the last element here of continuous delivery is um continuous integration so by",
    "start": "854600",
    "end": "863120"
  },
  {
    "text": "definition a microservices architecture is a is a system where there are lots of cooperating components lots of lots of",
    "start": "863120",
    "end": "870040"
  },
  {
    "text": "individual microservices flying around so it's important that we be able to test the interaction of those system",
    "start": "870040",
    "end": "875519"
  },
  {
    "text": "components before we do deployments so we can do we can understand that those interactions are going to work correctly",
    "start": "875519",
    "end": "880880"
  },
  {
    "text": "in a safe way before we uh before we deploy it so after process maturity I want to",
    "start": "880880",
    "end": "887240"
  },
  {
    "start": "887000",
    "end": "984000"
  },
  {
    "text": "talk about organizational maturity and I want to mention again the same thing that rodrig mentioned earlier about",
    "start": "887240",
    "end": "892320"
  },
  {
    "text": "Conway's law so as you heard earlier the organiza Conway uh said in 1968 that",
    "start": "892320",
    "end": "898600"
  },
  {
    "text": "essentially the organization of software uh of a software organization constrains the architecture that we're going to",
    "start": "898600",
    "end": "904560"
  },
  {
    "text": "that we're going to produce and in particular the design of the system is going to be a reflection of the communication paths within the",
    "start": "904560",
    "end": "911440"
  },
  {
    "text": "organization so he meant this as a descriptive situation he was describing the scene that he saw in a bunch of",
    "start": "911440",
    "end": "918079"
  },
  {
    "text": "organizations that he' worked with um and um but what he noted is that the uh",
    "start": "918079",
    "end": "924959"
  },
  {
    "text": "a modular system A system that H something like microservices actually requires a modular organization um and",
    "start": "924959",
    "end": "933160"
  },
  {
    "text": "so when we have small independent teams that are able to operate autonomously",
    "start": "933160",
    "end": "938800"
  },
  {
    "text": "that g that ends up leading more directly to more flexible and uh composable systems whereas when we have",
    "start": "938800",
    "end": "945120"
  },
  {
    "text": "monolithic teams that are quite that are large and interdependent that ends up leading to more monolithic more",
    "start": "945120",
    "end": "950240"
  },
  {
    "text": "interdependent systems so it's it's a direct there's a direct relationship between the organizational structure or",
    "start": "950240",
    "end": "955319"
  },
  {
    "text": "the organizational architecture you have and the software architecture that you're going to be able to produce and",
    "start": "955319",
    "end": "960639"
  },
  {
    "text": "so we can use this not just in a descriptive way but also in a normative way meaning we can in order to get the",
    "start": "960639",
    "end": "966560"
  },
  {
    "text": "system that we want we can we need to engineer the organization so um one of",
    "start": "966560",
    "end": "971880"
  },
  {
    "text": "the things that I strongly recommend is if you're considering moving to microservices one of the first things you should consider doing is breaking up",
    "start": "971880",
    "end": "978079"
  },
  {
    "text": "your organization into smaller pieces that parallel the services that you want to build so a little more detail on that I",
    "start": "978079",
    "end": "985839"
  },
  {
    "start": "984000",
    "end": "1094000"
  },
  {
    "text": "like to talk about this I like I like to talk about the microservices organization in the form of service teams and this is a this is a term that",
    "start": "985839",
    "end": "993360"
  },
  {
    "text": "we used at Google um Amazon and Netflix also uh also talk about these things similarly so individual individual",
    "start": "993360",
    "end": "1000839"
  },
  {
    "text": "service teams are aligned with particular domains of the business so each team has a clear well- defined set",
    "start": "1000839",
    "end": "1007240"
  },
  {
    "text": "of responsibility and an individual team is typically responsible for one service or a small set of related Services um",
    "start": "1007240",
    "end": "1014600"
  },
  {
    "text": "those teams tend to be cross functional so and what we're trying to get here is that is that the team is self-sufficient",
    "start": "1014600",
    "end": "1020639"
  },
  {
    "text": "the team is basically able to get its job done um without needing to uh involve lots of other uh teams in a in",
    "start": "1020639",
    "end": "1028520"
  },
  {
    "text": "lots of having to talk with lots of other teams in a very high bandwidth way now obviously every team no team is able",
    "start": "1028520",
    "end": "1035720"
  },
  {
    "text": "to do everything on its own it should rely on other teams to provide you know supporting services supporting libraries",
    "start": "1035720",
    "end": "1041798"
  },
  {
    "text": "and supporting tools but that's more of a hands-off uh relationship um but then and and most of the work that an",
    "start": "1041799",
    "end": "1048120"
  },
  {
    "text": "individual team need to do um is is isolated within within the boundary of the",
    "start": "1048120",
    "end": "1053280"
  },
  {
    "text": "team and then the other important discipline here is that teams should have end-to-end ownership of the",
    "start": "1053280",
    "end": "1058320"
  },
  {
    "text": "software that they build right so the team owns the service uh all the way from design through to development",
    "start": "1058320",
    "end": "1064960"
  },
  {
    "text": "through to deployment all the way to retirement so when I started in software it used to be that our team was done",
    "start": "1064960",
    "end": "1071120"
  },
  {
    "text": "when we threw the code over the wall to the operations team now that was a terrible situation for both the development side and the operations side",
    "start": "1071120",
    "end": "1078600"
  },
  {
    "text": "now now a team is only done when the service that they're providing is no longer being used by anybody right a",
    "start": "1078600",
    "end": "1084760"
  },
  {
    "text": "team is only done when a service is retired um and this very much parallels the devops philosophy of you build it",
    "start": "1084760",
    "end": "1091120"
  },
  {
    "text": "you run it so the last prerequisite that I want to talk about is an operational maturity",
    "start": "1091120",
    "end": "1097200"
  },
  {
    "start": "1094000",
    "end": "1158000"
  },
  {
    "text": "around monitoring so in order to be successful with microservices we really need to have a strong practice within",
    "start": "1097200",
    "end": "1103320"
  },
  {
    "text": "our organization of De highly detailed end to-end monitoring of production systems um and what we need here is the",
    "start": "1103320",
    "end": "1110360"
  },
  {
    "text": "ability to detect and alert on issues that occur anywhere uh in the system uh",
    "start": "1110360",
    "end": "1116000"
  },
  {
    "text": "and the way to the way to understand whether we've got that or not the sort of the metric that you can use is we",
    "start": "1116000",
    "end": "1121200"
  },
  {
    "text": "need to be able to have sufficient monitoring in order to be able to remotely diagnose issues that occur in",
    "start": "1121200",
    "end": "1126760"
  },
  {
    "text": "production without having to um log into the individual machine um so the thing",
    "start": "1126760",
    "end": "1132440"
  },
  {
    "text": "that I like to say here is if you ever have to SSH into a machine to debug a problem it's because your monitoring has",
    "start": "1132440",
    "end": "1138080"
  },
  {
    "text": "failed you so that's a bit about microser the",
    "start": "1138080",
    "end": "1144200"
  },
  {
    "text": "microservice architecture and um and some of the ways that we can be successful with microservices now I want",
    "start": "1144200",
    "end": "1150919"
  },
  {
    "text": "to talk about the decision process that we would go through to move potentially from a monolithic system into",
    "start": "1150919",
    "end": "1157080"
  },
  {
    "text": "microservices so uh I want to ask the question why are we going to rearchitecturing",
    "start": "1157080",
    "end": "1164360"
  },
  {
    "start": "1158000",
    "end": "1510000"
  },
  {
    "text": "so the first reason that we re architect tends to be around velocity or um uh or",
    "start": "1168960",
    "end": "1174600"
  },
  {
    "text": "in rodri's example from zando we talked about this in in terms of an innovation so here the reason why we would we would",
    "start": "1174600",
    "end": "1181960"
  },
  {
    "text": "change is because our time to Market is being constrained by the the lack of",
    "start": "1181960",
    "end": "1187320"
  },
  {
    "text": "isolation or the coupling that we find from uh in the monolith also another",
    "start": "1187320",
    "end": "1192480"
  },
  {
    "text": "example is that teams could be stepping on each other's toes while trying to get their work done right so teams are no",
    "start": "1192480",
    "end": "1198159"
  },
  {
    "text": "longer able to develop independently because the because the interactions within the monolith are um are too",
    "start": "1198159",
    "end": "1205640"
  },
  {
    "text": "difficult to deal with um and then also the other uh the other metric is how long does it take for new Engineers uh",
    "start": "1205640",
    "end": "1213120"
  },
  {
    "text": "joining your team to be productive or more precisely how long does it take new Engineers to be able to feel safe that",
    "start": "1213120",
    "end": "1219200"
  },
  {
    "text": "they can check something in without breaking something right um so uh in",
    "start": "1219200",
    "end": "1225320"
  },
  {
    "text": "addition to Velocity uh often times other organizations will uh think about it from a scaling perspective right so",
    "start": "1225320",
    "end": "1232159"
  },
  {
    "text": "uh there will there may come a time when vertical scaling of the monolith no longer works so it's it's no longer",
    "start": "1232159",
    "end": "1238480"
  },
  {
    "text": "enough to scale to the load that we that we're experiencing um and that parts of the system might need to scale at",
    "start": "1238480",
    "end": "1244000"
  },
  {
    "text": "different rates from others um this was certainly something that we experienced at eBay where um pieces lots of",
    "start": "1244000",
    "end": "1250520"
  },
  {
    "text": "different pieces of the system would scale at wildly different rates than uh than other parts and so while when it",
    "start": "1250520",
    "end": "1256880"
  },
  {
    "text": "was in a monolithic situation we were were kind of constrained and when we had a a a an architecture where things were",
    "start": "1256880",
    "end": "1262760"
  },
  {
    "text": "more divided it was a lot easier to be able to do those to scale those different parts of the system",
    "start": "1262760",
    "end": "1268440"
  },
  {
    "text": "independently and then the last reason to think about re architecting is uh is uh deployment so uh parts of the system",
    "start": "1268440",
    "end": "1276159"
  },
  {
    "text": "might need to be deployed independently of other uh of others because maybe they're on a different life cycle so",
    "start": "1276159",
    "end": "1281720"
  },
  {
    "text": "some parts of the system tend to evolve really quickly other parts of the system are more stable and evolve more slowly",
    "start": "1281720",
    "end": "1287159"
  },
  {
    "text": "um and uh it may be that the monolithic release Cadence is um is too slow or",
    "start": "1287159",
    "end": "1293240"
  },
  {
    "text": "it's too complicated or it's too risky so that can be other uh other sort decision criteria that you would use to",
    "start": "1293240",
    "end": "1298799"
  },
  {
    "text": "think about whether to move from a more monolithic approach into um into microservices so as an engineer I look",
    "start": "1298799",
    "end": "1306840"
  },
  {
    "text": "at this and I go well if I'm already going to be end up in microservices why don't I just start there right um what",
    "start": "1306840",
    "end": "1313120"
  },
  {
    "text": "and isn't the fact that I have to rearchitecturing",
    "start": "1313120",
    "end": "1317600"
  },
  {
    "text": "um I actually like to think of it a different way where I like to think of getting to re architect a system is more",
    "start": "1319440",
    "end": "1325640"
  },
  {
    "text": "a sign of success than it is a sign of failure and why do I say that there are",
    "start": "1325640",
    "end": "1331279"
  },
  {
    "text": "there are lots of system there are lots of startups in the world 90% of them fail there are lots of systems in the world 90% of them aren't appropriate for",
    "start": "1331279",
    "end": "1338559"
  },
  {
    "text": "microservices because they're too small or they're too simple um when we get to the point that we want to re",
    "start": "1338559",
    "end": "1345159"
  },
  {
    "text": "rearchitecturing an older an older architecture into a",
    "start": "1345159",
    "end": "1350240"
  },
  {
    "text": "newer architecture that often that's a sign that the business model that we're pursuing is really successful right it",
    "start": "1350240",
    "end": "1357240"
  },
  {
    "text": "means that we're doing something that people actually care about and typically we have the resources in order to apply",
    "start": "1357240",
    "end": "1363000"
  },
  {
    "text": "to uh to doing the re architecture so this I you know I I can't say often",
    "start": "1363000",
    "end": "1368159"
  },
  {
    "text": "enough to the startups that I that I um that I advise th this point of re architecture is really a sign of um of a",
    "start": "1368159",
    "end": "1376400"
  },
  {
    "text": "successful trajectory more than more than a problem and if you don't believe me again we can think about the examples",
    "start": "1376400",
    "end": "1383279"
  },
  {
    "text": "that I showed earlier the ebays the Amazon the twitters of the world every single one of those uh you know",
    "start": "1383279",
    "end": "1389400"
  },
  {
    "text": "well-known applications that we use all the time has gone through one of these uh architectural evolutions and no",
    "start": "1389400",
    "end": "1395320"
  },
  {
    "text": "system that I can think of of any company I've ever heard of has the same architecture today as they did when they",
    "start": "1395320",
    "end": "1401400"
  },
  {
    "text": "started so the other way I like to think about this is uh if you don't end up regretting your early technology",
    "start": "1401400",
    "end": "1407799"
  },
  {
    "text": "decisions you probably over-engineered and there may well have been another Twitter competitor that rather than",
    "start": "1407799",
    "end": "1413960"
  },
  {
    "text": "doing something really simple with rails started out building a great distributed system that was going to scale them for",
    "start": "1413960",
    "end": "1419720"
  },
  {
    "text": "the next five or 10 years you know there's a reason why we've never heard of that how heard of that company there's a reason why we've never heard",
    "start": "1419720",
    "end": "1425720"
  },
  {
    "text": "of the eBay competitor or Amazon competitor that started out building a distributed system rather than a",
    "start": "1425720",
    "end": "1431200"
  },
  {
    "text": "monolith it's because the companies that were successful focused on meeting the needs of their customers finding a",
    "start": "1431200",
    "end": "1437559"
  },
  {
    "text": "finding a business model model um making sure they had product Market fit and uh and moving forward in a in a sort of",
    "start": "1437559",
    "end": "1444520"
  },
  {
    "text": "evolutionary way rather than over engineering from the beginning so the last section that I",
    "start": "1444520",
    "end": "1451120"
  },
  {
    "text": "want to talk about here is okay Randy I do feel like I'm in the situation where I want to rearchitecturing",
    "start": "1451120",
    "end": "1458600"
  },
  {
    "text": "[Music]",
    "start": "1458930",
    "end": "1462099"
  },
  {
    "text": "start with is do not do it as a big bang um and Martin fower has a wonderful quote here which I love which is the",
    "start": "1468480",
    "end": "1474559"
  },
  {
    "text": "only thing a big bang migration guarantees is a big bang um so much rather I I much uh would",
    "start": "1474559",
    "end": "1483120"
  },
  {
    "text": "much more strongly recommend think uh thinking about an uh re architecture as an incremental step so how can we keep",
    "start": "1483120",
    "end": "1488960"
  },
  {
    "text": "the current system uh system running and at the same time move incrementally over um from uh from one thing from an old",
    "start": "1488960",
    "end": "1496440"
  },
  {
    "text": "architecture to a new architecture uh and the analogy to distributed systems is a rearch a re architecture is more a",
    "start": "1496440",
    "end": "1502679"
  },
  {
    "text": "rolling update than it is a blue green deployment does that make sense what I'm saying okay um great so um how would we",
    "start": "1502679",
    "end": "1512399"
  },
  {
    "start": "1510000",
    "end": "1725000"
  },
  {
    "text": "approach incremental migration um so the Step Zero that I often recommend to",
    "start": "1512399",
    "end": "1517840"
  },
  {
    "text": "people that I work with is do a pilot implementation first to convince yourself that the new architecture",
    "start": "1517840",
    "end": "1524039"
  },
  {
    "text": "whether it's microservices or whatever is going to work for your for your problem domain and within your",
    "start": "1524039",
    "end": "1530360"
  },
  {
    "text": "organization and what I recommend is that we is that you choose an initial endtoend vertical experience and migrate",
    "start": "1530360",
    "end": "1536760"
  },
  {
    "text": "that thing um rather than taking an individual piece to start with um the",
    "start": "1536760",
    "end": "1542120"
  },
  {
    "text": "reason that we want to do this sort of pilot is we want we want to take the opportunity to learn and to adjust um uh",
    "start": "1542120",
    "end": "1549320"
  },
  {
    "text": "as we as we are doing this new architecture um we also want to demonstrate the feasibility and uh",
    "start": "1549320",
    "end": "1556039"
  },
  {
    "text": "within our organization and gain the confidence that we can we can have this work with our technology team uh with",
    "start": "1556039",
    "end": "1561120"
  },
  {
    "text": "our technology stack and with our business problem um we also at the same time we want to bound our investment and",
    "start": "1561120",
    "end": "1567080"
  },
  {
    "text": "our risk so we don't want to do a big bang uh re architecture straight away and at the same time if we if we choose",
    "start": "1567080",
    "end": "1573440"
  },
  {
    "text": "a real customer problem we're actually providing real customer value while we're doing this re architecture so",
    "start": "1573440",
    "end": "1579480"
  },
  {
    "text": "that's a that's the Step Zero and actually this initial step tends to often be the hardest because this is the",
    "start": "1579480",
    "end": "1584600"
  },
  {
    "text": "time when we're actually learning how to do the things in a new way and we're actually bu building out the basic sort of building blocks the basic",
    "start": "1584600",
    "end": "1590799"
  },
  {
    "text": "capabilities in order to uh uh in order to move to microservices so once we've",
    "start": "1590799",
    "end": "1596159"
  },
  {
    "text": "done that now we should take an incremental approach to migrating the rest of the system and my my strong",
    "start": "1596159",
    "end": "1601600"
  },
  {
    "text": "suggestion is that we actually think about it from what's the most important business value and sort of what's the",
    "start": "1601600",
    "end": "1608440"
  },
  {
    "text": "most important part of the system and try to do that first um and that seems counterintuitive that might it seems",
    "start": "1608440",
    "end": "1614960"
  },
  {
    "text": "like maybe that's a maybe that's a risky approach um but this is actually what this is",
    "start": "1614960",
    "end": "1620000"
  },
  {
    "text": "exactly what we did at eBay where um we sort of looked at all the pages on the site and reverse sorted them by",
    "start": "1620000",
    "end": "1627000"
  },
  {
    "text": "contribution to revenue and we rearchitecturing",
    "start": "1627000",
    "end": "1631399"
  },
  {
    "text": "anyway um it also maximizes the near-term benefit and then the sort of the near-term payoff that we get from",
    "start": "1648200",
    "end": "1654320"
  },
  {
    "text": "the investment in the re architecture and it also forces us to confront and solve a bunch of the hard problems that",
    "start": "1654320",
    "end": "1660000"
  },
  {
    "text": "we would face earlier on in the cycle rather than waiting till the end to face uh the real difficult challenges um and",
    "start": "1660000",
    "end": "1668120"
  },
  {
    "text": "um the other interesting thing which also came out of the eBay experience is that it may be that as you keep going",
    "start": "1668120",
    "end": "1674720"
  },
  {
    "text": "down uh from sort of highest business value to lowest business value you may end up having a monolith that stays",
    "start": "1674720",
    "end": "1681000"
  },
  {
    "text": "around forever so when I left eBay eBay had been doing the its re architecture",
    "start": "1681000",
    "end": "1686600"
  },
  {
    "text": "for six or seven years when I left in 2011 at that time there were still pages",
    "start": "1686600",
    "end": "1691960"
  },
  {
    "text": "that were on that previous version two of the architecture but those pages were the were the pages that really nobody",
    "start": "1691960",
    "end": "1697200"
  },
  {
    "text": "cared about they never changed they weren't getting much traffic um and so we we could we had by doing the sort of",
    "start": "1697200",
    "end": "1704320"
  },
  {
    "text": "um biggest solve the biggest problem first and then leave the rest to later it allowed us to kind of migrate those",
    "start": "1704320",
    "end": "1711200"
  },
  {
    "text": "um those other Pages or those other pieces of the site very opportunistically um and allow and forced us to think carefully about where",
    "start": "1711200",
    "end": "1718159"
  },
  {
    "text": "was the most business value we could get from this re architecture investment rather than doing the easy stuff",
    "start": "1718159",
    "end": "1724399"
  },
  {
    "text": "first so now a bit a bit of tactics about carving up the monolith itself so",
    "start": "1724399",
    "end": "1731919"
  },
  {
    "start": "1725000",
    "end": "1953000"
  },
  {
    "text": "um the first thing I like to suggest is that we look for or or potentially um uh",
    "start": "1731919",
    "end": "1737519"
  },
  {
    "text": "potentially factor in order to create a seam within the monolith so we found",
    "start": "1737519",
    "end": "1742559"
  },
  {
    "text": "this area that can be sort of uh separated from the rest of the monolith um and again often there's a lot of work",
    "start": "1742559",
    "end": "1748120"
  },
  {
    "text": "associated with refactoring to make this be the case so then the next thing we want to do is wall that off behind an",
    "start": "1748120",
    "end": "1753880"
  },
  {
    "text": "interface and all the all the interactions to that uh that component are going are going through that",
    "start": "1753880",
    "end": "1758960"
  },
  {
    "text": "interface but it's still in process with the monolith so the next thing we want to do if we don't already have strong",
    "start": "1758960",
    "end": "1764519"
  },
  {
    "text": "automated tests around this area we want to write a bunch of automated tests around that particular component and",
    "start": "1764519",
    "end": "1769960"
  },
  {
    "text": "only after that do we want to we want to move the implementation of that component out into its own remote service and uh and replace it with a uh",
    "start": "1769960",
    "end": "1778120"
  },
  {
    "text": "with a sort of microservice and then we want to rinse and repeat every time I give this talk this",
    "start": "1778120",
    "end": "1784399"
  },
  {
    "text": "seem I I I have the feeling that this seems too overly simplistic but every other architect every other re",
    "start": "1784399",
    "end": "1790399"
  },
  {
    "text": "architecture approach um that's sort of more complicated or has more steps than this I found not not to work as well as",
    "start": "1790399",
    "end": "1797360"
  },
  {
    "text": "this approach it's it's very simple but it's very step byep and it's very sort of uh procedural and and allows us to",
    "start": "1797360",
    "end": "1804399"
  },
  {
    "text": "make uh make lots of forward progress so the final thing that I want",
    "start": "1804399",
    "end": "1809919"
  },
  {
    "text": "to uh mention here are some Annie patterns that uh as we're moving to services that we might uh that we might",
    "start": "1809919",
    "end": "1815840"
  },
  {
    "text": "run into um and so the first one I want to talk about is by contrast to the",
    "start": "1815840",
    "end": "1821559"
  },
  {
    "text": "microservice the the Annie pattern here is I like to call the mega service um and this is a service where it has a",
    "start": "1821559",
    "end": "1828559"
  },
  {
    "text": "really over Brad area of responsibility so it's not single purpose it's not um",
    "start": "1828559",
    "end": "1834399"
  },
  {
    "text": "it's not a well-defined small interface with a with a small surface area um and",
    "start": "1834399",
    "end": "1839840"
  },
  {
    "text": "those uh those types of Mega Services tend to be really difficult to change uh really difficult to evolve um and it",
    "start": "1839840",
    "end": "1846360"
  },
  {
    "text": "also U makes it um it leads to very unsustainable amounts of dependency so",
    "start": "1846360",
    "end": "1851720"
  },
  {
    "text": "you know that service that does quite a lot is has lots of Upstream dependencies on other services or applications and",
    "start": "1851720",
    "end": "1857200"
  },
  {
    "text": "lots of Downstream dependencies as well so don't do that and by the way as",
    "start": "1857200",
    "end": "1862600"
  },
  {
    "text": "a as a side as a side note I think lots of the failures that uh our industry had",
    "start": "1862600",
    "end": "1868720"
  },
  {
    "text": "in uh when first trying to move to service oriented architectures came because we built services that were too",
    "start": "1868720",
    "end": "1874600"
  },
  {
    "text": "over broad right that was that certainly was my experience um and so one of the",
    "start": "1874600",
    "end": "1879880"
  },
  {
    "text": "reasons why I think the the industry has correctly shifted toward thinking about",
    "start": "1879880",
    "end": "1885159"
  },
  {
    "text": "Services as microservices is is trying trying to avoid that problem trying not to build services that have over Brad",
    "start": "1885159",
    "end": "1891880"
  },
  {
    "text": "areas of responsibility that are essentially other little mini mini monoliths in our system so the next Annie pattern that I",
    "start": "1891880",
    "end": "1899480"
  },
  {
    "text": "uh that I want to uh talk about is something that I call the Leaky abstraction service so the idea here is",
    "start": "1899480",
    "end": "1905760"
  },
  {
    "text": "that when when producing the interface the service provider didn't think about it from the perspective of the customer",
    "start": "1905760",
    "end": "1912320"
  },
  {
    "text": "but only thought about it from the perspective of what was it going to take the provider to produce like essentially",
    "start": "1912320",
    "end": "1917639"
  },
  {
    "text": "the essentially leaking implementation details of the service into the interface um and there are lots of",
    "start": "1917639",
    "end": "1923399"
  },
  {
    "text": "reasons not to do this most most powerfully um it's because this consumer's model of the service often",
    "start": "1923399",
    "end": "1930320"
  },
  {
    "text": "tends to be a lot simpler so the consumers um the consumer's approach tends to be more abstract uh and tends",
    "start": "1930320",
    "end": "1936799"
  },
  {
    "text": "to be a lot simpler than the the implementation um and also as a service provider if we leak our implementation",
    "start": "1936799",
    "end": "1943679"
  },
  {
    "text": "model into the interface that makes it really difficult for us to change it um which constrains the ability our ability",
    "start": "1943679",
    "end": "1950080"
  },
  {
    "text": "to evolve that service over time so the last thing I want to talk about last anti pattern that I want to",
    "start": "1950080",
    "end": "1956200"
  },
  {
    "start": "1953000",
    "end": "2065000"
  },
  {
    "text": "talk about here is shared persistence so when we have a situation where we have a",
    "start": "1956200",
    "end": "1962639"
  },
  {
    "text": "nice interface at the microservice level but we share a the database or some other persistence mechanism with other",
    "start": "1962639",
    "end": "1969360"
  },
  {
    "text": "services or other applications that actually breaks completely breaks the encapsulation of the interface that we",
    "start": "1969360",
    "end": "1975880"
  },
  {
    "text": "Expos to our clients and it actually encourages uh or at least allows uh other parts of the system to kind of",
    "start": "1975880",
    "end": "1982120"
  },
  {
    "text": "make backdoor violations of the interface uh behind our back sort of directly in the database or directly in",
    "start": "1982120",
    "end": "1988000"
  },
  {
    "text": "the persistent store um and what that ends up leading to is is a is a very unhealthy coupling but that you that's",
    "start": "1988000",
    "end": "1995360"
  },
  {
    "text": "near invisible very unhealthy coupling between those two services that are kind of also that are sharing that same um",
    "start": "1995360",
    "end": "2001960"
  },
  {
    "text": "back end uh and this was this was one of the main reasons why uh eBay's first 4A",
    "start": "2001960",
    "end": "2007880"
  },
  {
    "text": "service oriented architecture around 2008 was a was a big failure um in the",
    "start": "2007880",
    "end": "2012960"
  },
  {
    "text": "end it has worked out fine um because they've approached it in a different way but in but in 2008 um the eBay uh the",
    "start": "2012960",
    "end": "2020600"
  },
  {
    "text": "Approach at eBay was to partition the application tier so there were lots of applications that were you know here's",
    "start": "2020600",
    "end": "2026159"
  },
  {
    "text": "here's selling and here's buying and here's search and all nice nice partitioning of the of the application",
    "start": "2026159",
    "end": "2031440"
  },
  {
    "text": "tier and they did a decent job also of partitioning the service tier so here were services around authentication here",
    "start": "2031440",
    "end": "2037399"
  },
  {
    "text": "were serves around checkout or billing um but the the underlying databases",
    "start": "2037399",
    "end": "2043679"
  },
  {
    "text": "underneath those Services were still shared so what happened was in practice nobody used the services or the service",
    "start": "2043679",
    "end": "2050320"
  },
  {
    "text": "interfaces they just continued to go directly to the databases where they always had been and the services ATT um",
    "start": "2050320",
    "end": "2055760"
  },
  {
    "text": "all the effort that we put into building really nice clean Services um ended up being um being wasted",
    "start": "2055760",
    "end": "2062720"
  },
  {
    "text": "effort okay so in conclusion I think it's I think it's fair to say as Wonder",
    "start": "2062720",
    "end": "2067800"
  },
  {
    "start": "2065000",
    "end": "2657000"
  },
  {
    "text": "f as microservices are particularly at Large Scale I want I want to leave you with the idea that microservices may not",
    "start": "2067800",
    "end": "2073440"
  },
  {
    "text": "be for you if you have a simple system right if you have a small team of",
    "start": "2073440",
    "end": "2079520"
  },
  {
    "text": "developers if you're not able to invest in a bunch of those prerequisites that I mentioned before in can't invest in",
    "start": "2079520",
    "end": "2086040"
  },
  {
    "text": "continuous delivery can't invest in monitoring are unable to change their organization around small service",
    "start": "2086040",
    "end": "2091839"
  },
  {
    "text": "teams and most importantly microservices aren't for you if they don't solve the problems that you actually have",
    "start": "2091839",
    "end": "2098960"
  },
  {
    "text": "so thank you very",
    "start": "2098960",
    "end": "2101640"
  },
  {
    "text": "much so I think we have a few Pro a few moments Yeah we actually had a lot of questions great all right far away and",
    "start": "2107119",
    "end": "2113480"
  },
  {
    "text": "I'll be here the rest of the conference too so we can yeah so go up and talk to them afterwards if you don't get your question in here um so there seems to be",
    "start": "2113480",
    "end": "2122119"
  },
  {
    "text": "some confusion about why you would say don't do microservices from the get-go",
    "start": "2122119",
    "end": "2127880"
  },
  {
    "text": "because why would you suggest that you should make a monolith from the start and let me just interpret some of that",
    "start": "2127880",
    "end": "2134800"
  },
  {
    "text": "because I I think the word is actually or the problem is the word monolith here because that indicates something large",
    "start": "2134800",
    "end": "2142320"
  },
  {
    "text": "and usually applications are not from the start right yeah right no that's that's an excellent point um yeah the",
    "start": "2142320",
    "end": "2148760"
  },
  {
    "text": "why would I not just move to microservices because when you have 10 users or 100 users or a thousand users",
    "start": "2148760",
    "end": "2155240"
  },
  {
    "text": "you shouldn't be spending your time building a distributed system you should be spending time building the application that your that your users",
    "start": "2155240",
    "end": "2161400"
  },
  {
    "text": "actually need to use so it's a matter of um opportunity cost it's a matter of",
    "start": "2161400",
    "end": "2167359"
  },
  {
    "text": "what should what's the most important thing I can spend my development resources and my machine resources on right now um and in the early stages of",
    "start": "2167359",
    "end": "2175040"
  },
  {
    "text": "a company or an application it's right it's completely wrong to think about uh",
    "start": "2175040",
    "end": "2181720"
  },
  {
    "text": "building something that's going to be five years down the road or 10 years down the road um th",
    "start": "2181720",
    "end": "2188440"
  },
  {
    "text": "you know startups that work that way don't tend to don't tend to work out uh",
    "start": "2188440",
    "end": "2193520"
  },
  {
    "text": "another question is so you just mentioned that you shouldn't do integration through the database right",
    "start": "2193520",
    "end": "2200079"
  },
  {
    "text": "but in the beginning of your talk you said that you guys had that problem right now oh yeah so once you're in that",
    "start": "2200079",
    "end": "2205800"
  },
  {
    "text": "so one of the one of the challenges of moving from the monolithic approach into microservices is that you have to start",
    "start": "2205800",
    "end": "2211680"
  },
  {
    "text": "to sever those integration points within the database um again the the idea in",
    "start": "2211680",
    "end": "2217680"
  },
  {
    "text": "the early when you think about it as different life cycles different life cycles of a person or different life",
    "start": "2217680",
    "end": "2223359"
  },
  {
    "text": "cycles of a company um in the early stages you don't uh you you shouldn't try to solve the problems that are only",
    "start": "2223359",
    "end": "2230160"
  },
  {
    "text": "going to come later on um so the the in the early stage when again you're trying to figure out whether you have a",
    "start": "2230160",
    "end": "2236040"
  },
  {
    "text": "business model whether you have product Market fit or whether your application is actually going to be used by uh by",
    "start": "2236040",
    "end": "2241160"
  },
  {
    "text": "your users you should focus on you should make it as easy as possible to to move forward and often with small at",
    "start": "2241160",
    "end": "2247839"
  },
  {
    "text": "small scale that's a monolithic application with monolithic databases and then if you should be so lucky as to",
    "start": "2247839",
    "end": "2254599"
  },
  {
    "text": "have uh to end up having a much larger scale uh situation um that's the",
    "start": "2254599",
    "end": "2260040"
  },
  {
    "text": "appropriate time to invest in uh in that longer term approach and the investment that you would make earlier on in my",
    "start": "2260040",
    "end": "2266640"
  },
  {
    "text": "personal opinion is um is is not the best use of your time and resources okay we also had quite a lot",
    "start": "2266640",
    "end": "2273720"
  },
  {
    "text": "of uh questions about testing and how to actually do it in practice because you mentioned that you should build a test",
    "start": "2273720",
    "end": "2280280"
  },
  {
    "text": "harness around a component in your application that you would rip out and make into a micros service but at that",
    "start": "2280280",
    "end": "2286400"
  },
  {
    "text": "point uh the tests that you do could be unit tests and all of a sudden they might be interface tests instead",
    "start": "2286400",
    "end": "2294920"
  },
  {
    "text": "right uh I think I see what you're asking so I mean you're asking generally about testing um and um a so as we as we",
    "start": "2294920",
    "end": "2303440"
  },
  {
    "text": "put that as we introduce that interface around the component that we're about to pull out what we wanted what we're",
    "start": "2303440",
    "end": "2309079"
  },
  {
    "text": "trying to achieve with testing here is to make sure that in pulling it out we haven't broken anything right and um the",
    "start": "2309079",
    "end": "2316000"
  },
  {
    "text": "best way to do that honestly the only way to do that is to write tests that exercise that component up front ahead",
    "start": "2316000",
    "end": "2322800"
  },
  {
    "text": "of time before moving it if we wait till move if we M wait to write tests uh uh",
    "start": "2322800",
    "end": "2329000"
  },
  {
    "text": "after we've already sort of extracted it that's too late because we don't know we we can't know uh whether we've changed",
    "start": "2329000",
    "end": "2334560"
  },
  {
    "text": "Behavior or not so you have you have to do that um earlier on so while while we're on the topic of changing behavior",
    "start": "2334560",
    "end": "2341920"
  },
  {
    "text": "um so say that you have a couple of microservices how do you test that if",
    "start": "2341920",
    "end": "2347680"
  },
  {
    "text": "you change one of them that they are still compatible how do you how do you test several microservices at the time",
    "start": "2347680",
    "end": "2354760"
  },
  {
    "text": "yeah right uh it's like Adrien was saying a moment ago it's sort of Defense in depth but testing in depth so um the",
    "start": "2354760",
    "end": "2361800"
  },
  {
    "text": "first thing that we can do to test a microservice is to test to test that component in isolation right so to write",
    "start": "2361800",
    "end": "2368440"
  },
  {
    "text": "write tests um against the interface uh directly and to the extent that we have other services that that microservice",
    "start": "2368440",
    "end": "2374920"
  },
  {
    "text": "interacts with we should mock them out and this is something that we did um super heavily at Google where um we",
    "start": "2374920",
    "end": "2381720"
  },
  {
    "text": "every time we would build a service we would spend most of our effort uh our testing effort around testing that",
    "start": "2381720",
    "end": "2388000"
  },
  {
    "text": "service in isolation and then mocking out the interactions that that that that system had with uh that that uh service",
    "start": "2388000",
    "end": "2393760"
  },
  {
    "text": "had with other parts of the system and that and that has that all that's is easy because you're doing it in",
    "start": "2393760",
    "end": "2399280"
  },
  {
    "text": "isolation but it also allows you to simulate lots of failure modes that would never occur or would only rarely",
    "start": "2399280",
    "end": "2405000"
  },
  {
    "text": "occur in real life right something that happens you know one in a million or one in a billion times in production that's",
    "start": "2405000",
    "end": "2410560"
  },
  {
    "text": "really hard to simulate by running it a billion times but it's super easy to simulate it with by mocking out that uh",
    "start": "2410560",
    "end": "2417599"
  },
  {
    "text": "that uh interacting service there so then the next so that's at the at the service level then the next the next",
    "start": "2417599",
    "end": "2424560"
  },
  {
    "text": "level up is sort of an integration test where we could test the test the system um test a running system uh altoe um and",
    "start": "2424560",
    "end": "2431880"
  },
  {
    "text": "that allows you to do more in end to end related stuff one more thing I'll say about here",
    "start": "2431880",
    "end": "2437280"
  },
  {
    "text": "you didn't it's not really about testing but the the critical discipline that you need to have in terms of making sure",
    "start": "2437280",
    "end": "2443000"
  },
  {
    "text": "service interactions continue to work is backward compatibility and forward compatibility of the interfaces right so",
    "start": "2443000",
    "end": "2449280"
  },
  {
    "text": "the critical discipline is that if my service a is talking to service B service B should be able to work to be",
    "start": "2449280",
    "end": "2455640"
  },
  {
    "text": "able to um modify s and deploy independently but that only works if the if the deployments that service B does",
    "start": "2455640",
    "end": "2462200"
  },
  {
    "text": "don't break the interface that I'm expecting um so that's almost you know that's that's almost the Step Zero",
    "start": "2462200",
    "end": "2467520"
  },
  {
    "text": "that's before testing does it make sense what I'm talking about okay uh there's been a lot of talk about uh domain",
    "start": "2467520",
    "end": "2474319"
  },
  {
    "text": "driven design in relation with microservices is that something you've used yourself or is that something you",
    "start": "2474319",
    "end": "2480280"
  },
  {
    "text": "consider when you design microservices yeah I think domain driven design is super powerful in microservices I don't",
    "start": "2480280",
    "end": "2486119"
  },
  {
    "text": "think you I don't think it's a requirement but um uh but Eric Evans approach particularly to bounded context",
    "start": "2486119",
    "end": "2492280"
  },
  {
    "text": "is a really wonderful way of thinking about uh it's a a wonderful kind of architectural discipline and",
    "start": "2492280",
    "end": "2498520"
  },
  {
    "text": "Architectural philosophy to uh to apply to services so I I think domain driven design works very well with",
    "start": "2498520",
    "end": "2504160"
  },
  {
    "text": "microservices is it is it a requirement I don't think so but it's super powerful and if you're already a fan of it you",
    "start": "2504160",
    "end": "2510240"
  },
  {
    "text": "should uh microservices will be a lot easier for it so final question it's in",
    "start": "2510240",
    "end": "2515440"
  },
  {
    "text": "relation to distributed trans transactions M so you rip out a couple of components from your application and",
    "start": "2515440",
    "end": "2521839"
  },
  {
    "text": "then you realize oh we actually need a transaction across this is that already too late or can you use something like",
    "start": "2521839",
    "end": "2528760"
  },
  {
    "text": "distributed uh transactions and are there any good tools for that yeah sure um this is a this is a talk in itself um",
    "start": "2528760",
    "end": "2536200"
  },
  {
    "text": "well obviously if you've ripped something out and then decide you need a transaction well that is too late but but you're thinking about it whoever is",
    "start": "2536200",
    "end": "2542079"
  },
  {
    "text": "the questioner like you're thinking about it ahead of time so I'm sure you won't wait till that time to figure it out um yeah that's that that's a",
    "start": "2542079",
    "end": "2547880"
  },
  {
    "text": "challenge because as soon as as soon as you have um as soon as you have split the Persistence of a thing between two",
    "start": "2547880",
    "end": "2555559"
  },
  {
    "text": "uh two databases for example um the transactions become challenge a challenge distributed transactions I",
    "start": "2555559",
    "end": "2562480"
  },
  {
    "text": "really I really don't like um for reasons I'm happy to talk about offline there are a serious availability and",
    "start": "2562480",
    "end": "2568680"
  },
  {
    "text": "scalability bottleneck um but uh but you can do techniques around um",
    "start": "2568680",
    "end": "2575440"
  },
  {
    "text": "reconciliation of changes uh that have sort of you basically have to asynchronously",
    "start": "2575440",
    "end": "2581720"
  },
  {
    "text": "uh uh introduce the consistency sort of after the fact um and I'm happy to talk",
    "start": "2581720",
    "end": "2587960"
  },
  {
    "text": "with people afterward because there's sort of a lot more complexity than I'm able to do in one sentence um but I'll",
    "start": "2587960",
    "end": "2594319"
  },
  {
    "text": "give the quick example of when um when banks are doing uh transactions between",
    "start": "2594319",
    "end": "2601960"
  },
  {
    "text": "Banks like they don't do distributed transactions right when Deutsche Bank and Bank of America are doing a current",
    "start": "2601960",
    "end": "2607079"
  },
  {
    "text": "currency trade that's not a distributed transaction that's something where they uh they do the transactions during the",
    "start": "2607079",
    "end": "2613119"
  },
  {
    "text": "trading day and then they reconcile at night does that make sense they sort they they send each other files I saw",
    "start": "2613119",
    "end": "2619119"
  },
  {
    "text": "these 999,999 transactions oh I see I saw these aund a million transactions and",
    "start": "2619119",
    "end": "2625520"
  },
  {
    "text": "they and they reconcile so that's one of many approaches that one can take to getting the getting the same uh",
    "start": "2625520",
    "end": "2632160"
  },
  {
    "text": "consistency uh effects of transactions while in at the same time having to dependent components that um uh that",
    "start": "2632160",
    "end": "2640040"
  },
  {
    "text": "aren't transactionally bounded hope that was helpful thank you Randy great thanks",
    "start": "2640040",
    "end": "2648520"
  }
]