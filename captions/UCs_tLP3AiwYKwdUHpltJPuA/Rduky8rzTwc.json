[
  {
    "start": "0",
    "end": "416000"
  },
  {
    "text": "[Music] thank you very much what an awesome",
    "start": "6990",
    "end": "12630"
  },
  {
    "text": "introduction so let's get started like I said I'm going to talk about resilience engineering in a microservice",
    "start": "12630",
    "end": "18480"
  },
  {
    "text": "landscape that's what we do at Bolcom but first let me introduce myself my name is Marie Sian I've been a Java",
    "start": "18480",
    "end": "25890"
  },
  {
    "text": "developer for over 10 years and currently I'm a hands-on lead architect at a bullet comm so for those who are",
    "start": "25890",
    "end": "33780"
  },
  {
    "text": "not familiar with bullet comm very quickly becomes one of the most popular web shops and the Netherlands and in",
    "start": "33780",
    "end": "39870"
  },
  {
    "text": "Belgium and we have about 8 28 million visits per month sell about 14 million",
    "start": "39870",
    "end": "45899"
  },
  {
    "text": "products - about seven active million active customers and I have about 1200",
    "start": "45899",
    "end": "52020"
  },
  {
    "text": "colleagues and as I 350 in the IT department so what am I going to talk",
    "start": "52020",
    "end": "59699"
  },
  {
    "text": "about first what is resilience and why do we need that what do we care then",
    "start": "59699",
    "end": "64860"
  },
  {
    "text": "we're going to see how history is going to help us in that area and implement it all for us and then we're going to take",
    "start": "64860",
    "end": "71189"
  },
  {
    "text": "a look at some resilience techniques via an interactive demo I'm gonna see what happens if you don't apply those",
    "start": "71189",
    "end": "76320"
  },
  {
    "text": "resilience techniques and the difference when you do finally I will get some tips and tricks that we learned at both calm",
    "start": "76320",
    "end": "84930"
  },
  {
    "text": "and we'll look at some operational stuff and some general experiences so end with",
    "start": "84930",
    "end": "90329"
  },
  {
    "text": "a wrap-up so what is resilience so it's the ability of a substance or a object",
    "start": "90329",
    "end": "96689"
  },
  {
    "text": "to spring back into shape or the capacity to recover quickly from difficulties well that's real world like",
    "start": "96689",
    "end": "102240"
  },
  {
    "text": "for instance of bungee cords like if if you're jumping and the cord stretches then that cord is really resilient",
    "start": "102240",
    "end": "109259"
  },
  {
    "text": "against those tensile strengths and but when it returns back to shape well it's",
    "start": "109259",
    "end": "115380"
  },
  {
    "text": "it's really resilient against that so that's cool or like you and your colleague are sick you take only two or",
    "start": "115380",
    "end": "121920"
  },
  {
    "text": "three days to recover and he takes about a week you could say that you are more resilient against the flu for instance",
    "start": "121920",
    "end": "127439"
  },
  {
    "text": "than he is but we're in an ID system",
    "start": "127439",
    "end": "133150"
  },
  {
    "text": "so what does it mean for IT well it's the ability of a system to handle unexpected unexpected situations without",
    "start": "133150",
    "end": "140650"
  },
  {
    "text": "user noticing preferably or at least with a graceful degradation of service and really important that needs to be",
    "start": "140650",
    "end": "148420"
  },
  {
    "text": "able to automatically recover as if it never happens you don't want to restart your application just because some error",
    "start": "148420",
    "end": "154359"
  },
  {
    "text": "occurred so that can be a really broad definition so what I'm now going to talk",
    "start": "154359",
    "end": "162609"
  },
  {
    "text": "about is this situation where you have an application like the bullet Camacho webshop which is still a monolithic",
    "start": "162609",
    "end": "169030"
  },
  {
    "text": "thing and it talks to about 40 back-end services and it does that via rest",
    "start": "169030",
    "end": "174299"
  },
  {
    "text": "direct calls and it's mostly still a bit of a blocking architecture and in those",
    "start": "174299",
    "end": "181209"
  },
  {
    "text": "cases you need certain resilience techniques so if you're in the eventbus situation or a messaging system then you",
    "start": "181209",
    "end": "187060"
  },
  {
    "text": "probably need something else or you need little less of these techniques so why",
    "start": "187060",
    "end": "192670"
  },
  {
    "text": "do we need it so failures in today's systems certainly with a lot of Microsoft microservices",
    "start": "192670",
    "end": "201599"
  },
  {
    "text": "interesting that are it's not you exceptional its normal it happens a lot certainly if you have a lot of systems a",
    "start": "201720",
    "end": "208299"
  },
  {
    "text": "lot of things can happen let's see this this helps a bit okay so for instance",
    "start": "208299",
    "end": "216489"
  },
  {
    "text": "what what does complexity mean at both gone well we have more than 50 user facing applications which are talking to",
    "start": "216489",
    "end": "223269"
  },
  {
    "text": "about 120 back-end services and about 60 IT teams that are messing with that so",
    "start": "223269",
    "end": "229299"
  },
  {
    "text": "you can already expect a lot of problems occurring there you know we need to be",
    "start": "229299",
    "end": "234400"
  },
  {
    "text": "resilient against that so what can happen well one of those back-end services would simply fail and go down",
    "start": "234400",
    "end": "240599"
  },
  {
    "text": "or maybe that team implemented a new version and it's version the new version has certain box or if it's even not",
    "start": "240599",
    "end": "247659"
  },
  {
    "text": "backwards compatible but it can also be the network that can degrade or fail but",
    "start": "247659",
    "end": "253540"
  },
  {
    "text": "it can also be your own application having issues with that new client library that you're using to connect to the back-end service and the most worse",
    "start": "253540",
    "end": "260079"
  },
  {
    "text": "thing that can happen is that a back-end service becomes slow and the reason is that latency so it",
    "start": "260079",
    "end": "266460"
  },
  {
    "text": "it can it's infectious you can spread through your whole microservice landscape even to parts that don't",
    "start": "266460",
    "end": "272580"
  },
  {
    "text": "really have anything directly to do with the system that is actually slow and it will demonstrate that later on in the",
    "start": "272580",
    "end": "278009"
  },
  {
    "text": "demo so we need to be resilient and this is an example of Texas in 2008 where a",
    "start": "278009",
    "end": "284910"
  },
  {
    "text": "hurricane came by Hurricane Ike and this was a nice neighborhood on the coast and only one house is really built to",
    "start": "284910",
    "end": "291990"
  },
  {
    "text": "withstand those hurricane conditions and well of the rest is the result you see here so like I said I have a demo",
    "start": "291990",
    "end": "301650"
  },
  {
    "text": "running it's actually running on my machine now and it's a mini service",
    "start": "301650",
    "end": "307169"
  },
  {
    "text": "landscape so we have this fake web shop and it has a product list page and I'll",
    "start": "307169",
    "end": "312870"
  },
  {
    "text": "probably switch those products and it talks to a product service to get those products and if you click on a product",
    "start": "312870",
    "end": "318419"
  },
  {
    "text": "you get to the product detail page and it talks to the product service to get its product details but also to review",
    "start": "318419",
    "end": "325169"
  },
  {
    "text": "service to get a number of reviews this is the example shop so it's really nice",
    "start": "325169",
    "end": "332250"
  },
  {
    "text": "proud of it I like to see we can we can click on it let me see and I has a",
    "start": "332250",
    "end": "337530"
  },
  {
    "text": "couple of freebies oh nice",
    "start": "337530",
    "end": "341150"
  },
  {
    "text": "and in my demo I can start messing with the review service so I can make it slow",
    "start": "343460",
    "end": "349110"
  },
  {
    "text": "I can make it fail I can turn it off and we're going to see what happens to the rest of the webshop when I do that",
    "start": "349110",
    "end": "357169"
  },
  {
    "text": "but first I'm going to talk about how I'm going to also going to protect it like I said we're going to use history",
    "start": "357169",
    "end": "363690"
  },
  {
    "text": "for that and this works is a library built by Netflix and it is there to protect you",
    "start": "363690",
    "end": "368909"
  },
  {
    "text": "against latency and fault-tolerance faults and it provides a means to be you",
    "start": "368909",
    "end": "375570"
  },
  {
    "text": "know graceful in your failures and it measures about everything it does which",
    "start": "375570",
    "end": "380639"
  },
  {
    "text": "is gives you a great insight and we'll see that later as well and it's fairly easy to use and there are similar",
    "start": "380639",
    "end": "387060"
  },
  {
    "text": "libraries on different languages or even different versions on the JVM you should",
    "start": "387060",
    "end": "392820"
  },
  {
    "text": "check them out but this is all based on history so in hysterics where do you put",
    "start": "392820",
    "end": "398190"
  },
  {
    "text": "in history well you put it in the applique that you're trying to protect so here is going to try to protect the back shop",
    "start": "398190",
    "end": "403560"
  },
  {
    "text": "and we're going to put it in front of the client library so the client library adds mostly in HTTP clients and every",
    "start": "403560",
    "end": "410790"
  },
  {
    "text": "call to the HTTP client is going to go through his legs first when History X has this flow of doing",
    "start": "410790",
    "end": "418950"
  },
  {
    "start": "416000",
    "end": "622000"
  },
  {
    "text": "things to give that protection and you don't need to remember this flow now we'll walk through it during the",
    "start": "418950",
    "end": "424080"
  },
  {
    "text": "presentation so let's start with the most basic stuff and this the history command TS which command is that what it",
    "start": "424080",
    "end": "430230"
  },
  {
    "text": "is encapsulating your call to the resource and if that everything is fine it will return the result to your",
    "start": "430230",
    "end": "436020"
  },
  {
    "text": "application and if we look at the most basic way how you implement that and there are less bloated ways to do it but",
    "start": "436020",
    "end": "442560"
  },
  {
    "text": "we're not going to look at that now but this is the most basic way to do it is that you create a Khmer class which",
    "start": "442560",
    "end": "449340"
  },
  {
    "text": "extends the history commands in this case returns a list of reduce you give it fields for everything it needs to do",
    "start": "449340",
    "end": "455070"
  },
  {
    "text": "the 2d a call and then you create a constructor to get all those fields into it and you implement one method called",
    "start": "455070",
    "end": "462780"
  },
  {
    "text": "the run and in that one you simply do the call to the client so here we have a review client says get reviews and you",
    "start": "462780",
    "end": "469230"
  },
  {
    "text": "provide it with the product ID and it's return to a list so you do this for every endpoint not one command for a",
    "start": "469230",
    "end": "476580"
  },
  {
    "text": "whole service no for every endpoint and if you want to do this in a non-blocking style because it is blocking then you",
    "start": "476580",
    "end": "482010"
  },
  {
    "text": "can implement the history of the observable command but I'm not gonna look at that as well there is a lot of",
    "start": "482010",
    "end": "488580"
  },
  {
    "text": "good documentation on there so he can you can take a look at yourself but first how do you execute it so you",
    "start": "488580",
    "end": "495840"
  },
  {
    "text": "create a new command provided that everything it needs and you say execute and this is the synchronous and blocking",
    "start": "495840",
    "end": "501180"
  },
  {
    "text": "manner and you do this every time you want to do a call you're not gonna reuse this command it's a bit weird but just",
    "start": "501180",
    "end": "507810"
  },
  {
    "text": "how Netflix works mystics works if you want to do in an asynchronous blogging",
    "start": "507810",
    "end": "513330"
  },
  {
    "text": "manner with a future then you can do that you do you create the command say dot Q and then you get a future and you",
    "start": "513330",
    "end": "519030"
  },
  {
    "text": "do your thing with it it's rather a normal future it's not a computable future so you can probably forget about",
    "start": "519030",
    "end": "525990"
  },
  {
    "text": "it we also have the asynchronous manner using rx Java and then in that case you",
    "start": "525990",
    "end": "533370"
  },
  {
    "text": "say dot observe you get an observable of the list of reviews and you do your thing with your observable and this is our ex Java 1",
    "start": "533370",
    "end": "540390"
  },
  {
    "text": "there is no support yet for rxjava 2 or 4 react or if you're interested hopefully at some point it will start",
    "start": "540390",
    "end": "546600"
  },
  {
    "text": "with history 2 and it will it will have that support you can also do a streaming",
    "start": "546600",
    "end": "551930"
  },
  {
    "text": "where it's it's similar but then you implement that hystrix observable commands and here you see again dot",
    "start": "551930",
    "end": "559200"
  },
  {
    "text": "observe but now you get a callback for every review that comes over you don't have a list anymore again here back",
    "start": "559200",
    "end": "566070"
  },
  {
    "text": "pressures not supported too bad but to be honest often you don't need that if",
    "start": "566070",
    "end": "571890"
  },
  {
    "text": "you're in this style of application so don't worry so let's look at these",
    "start": "571890",
    "end": "577980"
  },
  {
    "text": "resilience techniques that history gives us first the fallback",
    "start": "577980",
    "end": "583620"
  },
  {
    "text": "so the fallback is the way to gracefully fail and windows in the past wasn't that graceful",
    "start": "583620",
    "end": "588780"
  },
  {
    "text": "we all know this scream right so the goal of the fallback is to try to give",
    "start": "588780",
    "end": "595170"
  },
  {
    "text": "the user which can also be a different system to give the best to give the best possible experience when your system is",
    "start": "595170",
    "end": "601140"
  },
  {
    "text": "having issues you know that in several ways and a couple of examples are you you hide the feature it's very simple",
    "start": "601140",
    "end": "607730"
  },
  {
    "text": "you use a default which is called the static fallback or you try to get an alternative which is called a stopped",
    "start": "607730",
    "end": "613650"
  },
  {
    "text": "fallback or a fallback via network and not always a fallback makes sense and",
    "start": "613650",
    "end": "618690"
  },
  {
    "text": "we'll look at that in a couple of slides so where does it happen in this scheme",
    "start": "618690",
    "end": "624030"
  },
  {
    "start": "622000",
    "end": "876000"
  },
  {
    "text": "so we have this call to the resource and when it fails which can be an exception",
    "start": "624030",
    "end": "629540"
  },
  {
    "text": "then we go to the fallback so the fallback if it's implemented and it",
    "start": "629540",
    "end": "634800"
  },
  {
    "text": "doesn't fail itself then we're doing the fallback very simple if the for work",
    "start": "634800",
    "end": "640350"
  },
  {
    "text": "itself throws an exception or you don't have a fallback then we will turn the exception as normal so now let's look at",
    "start": "640350",
    "end": "647970"
  },
  {
    "text": "the demo shop again so we're going to look a lot of these graphs to see what is happening within the webshop so here",
    "start": "647970",
    "end": "654630"
  },
  {
    "text": "we have the about a detail page and the number of requests it's getting and the same thing for the list page and below",
    "start": "654630",
    "end": "660750"
  },
  {
    "text": "we have the distribution of reviews over all the detail pages so we see that most of them have about three reviews",
    "start": "660750",
    "end": "667860"
  },
  {
    "text": "and if I go to the shop again then we can see if I go with the first products that it has three reviews oh nice so now",
    "start": "667860",
    "end": "675600"
  },
  {
    "text": "let's see what happens if I turn off the webshop and to prove that's actually something that's running on my machine I",
    "start": "675600",
    "end": "681600"
  },
  {
    "text": "have the spring good application that I'm simply going to kill and now we see arrows are happening it's not that nice",
    "start": "681600",
    "end": "689010"
  },
  {
    "text": "so if you go to the webshop again and I",
    "start": "689010",
    "end": "694860"
  },
  {
    "text": "click on the first product then we this is not what we want like we don't want to give the user this experience this is",
    "start": "694860",
    "end": "701220"
  },
  {
    "text": "not really nice too bad so my demo set up like I said I can enable and disable",
    "start": "701220",
    "end": "707640"
  },
  {
    "text": "certain historic features so let's unable to fall back in this case now we see oh all the calls are",
    "start": "707640",
    "end": "714480"
  },
  {
    "text": "successful again all nice but the review distribution is zero we have no reviews",
    "start": "714480",
    "end": "719579"
  },
  {
    "text": "nowhere so we go back to the demo shop go to the first product and indeed it",
    "start": "719579",
    "end": "725339"
  },
  {
    "text": "works again but we don't have any reviews so this is a really basic example of a fallback another example",
    "start": "725339",
    "end": "732690"
  },
  {
    "text": "that we also apply a bullet comb we have a lot of them now but this is an example that's called a stopped fallback and",
    "start": "732690",
    "end": "739140"
  },
  {
    "text": "it's about this title page on a on a product list page that we have this title actually comes from service and",
    "start": "739140",
    "end": "745290"
  },
  {
    "text": "the service uses the category that you're on and the filters that you have",
    "start": "745290",
    "end": "750540"
  },
  {
    "text": "applied within your search to determine which title in which text it wants to display so what happens when that",
    "start": "750540",
    "end": "756990"
  },
  {
    "text": "service simply is down or slow or whatever we simply fall back to something that we gave the command which",
    "start": "756990",
    "end": "763890"
  },
  {
    "text": "was that category and we simply show the category title it's it's really easy but",
    "start": "763890",
    "end": "769020"
  },
  {
    "text": "the customer probably won't notice so like I said not always a fallback makes",
    "start": "769020",
    "end": "776070"
  },
  {
    "text": "sense and a couple of situations where you don't want to fall back it's for",
    "start": "776070",
    "end": "781290"
  },
  {
    "text": "instance for a write operation it would be really awkward if you would say to a user that you accepted this order when",
    "start": "781290",
    "end": "787500"
  },
  {
    "text": "you actually didn't because there was a failure so it you simply want to inform your customer that that it failed you",
    "start": "787500",
    "end": "793740"
  },
  {
    "text": "know you don't want to lie in that case but it can also be if you're starting some bets job or something else",
    "start": "793740",
    "end": "800510"
  },
  {
    "text": "in the background you want to inform that that didn't work and we've also noticed that within a",
    "start": "800510",
    "end": "807500"
  },
  {
    "text": "back-end service so certainly more the core services it's really hard to define a decent fallback so often what we do in",
    "start": "807500",
    "end": "814279"
  },
  {
    "text": "a back-end service is we don't have a fallback we simply still throw an hour or we give at the fallback or a partial",
    "start": "814279",
    "end": "821329"
  },
  {
    "text": "results the data and give some meta data back that informs about you know okay here is some data but it's not 100%",
    "start": "821329",
    "end": "828500"
  },
  {
    "text": "correct maybe you want to do something with that at least you fail fast that's",
    "start": "828500",
    "end": "834410"
  },
  {
    "text": "really important you're you're not going to wait for late timeouts and other things so where do you implement this",
    "start": "834410",
    "end": "842630"
  },
  {
    "text": "fall back again we have this get reviews command and hystrix commands that",
    "start": "842630",
    "end": "848180"
  },
  {
    "text": "extends Ezra's command and you add this get fallback methods that's it and in",
    "start": "848180",
    "end": "853370"
  },
  {
    "text": "this case we're returning an empty list it's really simple what if you don't",
    "start": "853370",
    "end": "859250"
  },
  {
    "text": "have a fallback as well in that case his fix will throw away his weeks runtime exception so you want to catch that",
    "start": "859250",
    "end": "865279"
  },
  {
    "text": "somewhere and to get the actual exception you say exception get caused",
    "start": "865279",
    "end": "872199"
  },
  {
    "text": "so next thing latency so every call to",
    "start": "872199",
    "end": "878510"
  },
  {
    "start": "876000",
    "end": "1006000"
  },
  {
    "text": "the resource is being monitored on how long it's running so and when it's",
    "start": "878510",
    "end": "884120"
  },
  {
    "text": "running too long you will get a timeout and if the time what happens then it will try to do the fallback and well the",
    "start": "884120",
    "end": "889850"
  },
  {
    "text": "rest you know so again back to our demo in this case I'm going to any fallbacks",
    "start": "889850",
    "end": "897019"
  },
  {
    "text": "I won't do any timeouts let's see what happens in the when we do that so let me",
    "start": "897019",
    "end": "902029"
  },
  {
    "text": "increase the latency to one and a half to two seconds so we see a couple of things for one",
    "start": "902029",
    "end": "908269"
  },
  {
    "text": "we're not processed we're not handling so many requests anymore everything is",
    "start": "908269",
    "end": "913490"
  },
  {
    "text": "becoming slow because this is the client latency you see here so we get a latency of more than seven seconds for the",
    "start": "913490",
    "end": "920060"
  },
  {
    "text": "clients and here below we see the thread usage and we see that the product",
    "start": "920060",
    "end": "925699"
  },
  {
    "text": "details page is now using more than or 49:47 threats it's not that good to be",
    "start": "925699",
    "end": "933680"
  },
  {
    "text": "honest I intentionally limited my system that is not using so many threats at a normal system would do because I don't want the",
    "start": "933680",
    "end": "939620"
  },
  {
    "text": "thing to catch fire so it has a limit of 50 threats so this isn't really this",
    "start": "939620",
    "end": "945590"
  },
  {
    "text": "isn't really good right so let me first make it recover okay",
    "start": "945590",
    "end": "953000"
  },
  {
    "text": "now simply set a timeout for one second and enable it again",
    "start": "953000",
    "end": "958250"
  },
  {
    "text": "oh now we see what's happening because well after a second we get an error and",
    "start": "958250",
    "end": "965360"
  },
  {
    "text": "I don't have to fall back enabled but we see that the the time that your customer is now waiting is a lot less it's still",
    "start": "965360",
    "end": "971570"
  },
  {
    "text": "I'm a big amount it's two seconds but that's because we're still having a lot of threat usage and that's what I'm",
    "start": "971570",
    "end": "978440"
  },
  {
    "text": "gonna talk about next and that is we want to prevent that and to prevent that we're gonna use Bock heading and low",
    "start": "978440",
    "end": "984890"
  },
  {
    "text": "chatting so here we have a ship and it has pockets so if that Titanic was one of the first but they didn't really",
    "start": "984890",
    "end": "990680"
  },
  {
    "text": "implement it correctly later ships it was more successful but the bulkheads are these well Blockheads",
    "start": "990680",
    "end": "997970"
  },
  {
    "text": "in the ship that prevented from sinking when you have a hole because the water can't flow throughout the whole ship",
    "start": "997970",
    "end": "1005310"
  },
  {
    "text": "where do we have this bulkhead in the schedule Wow if you're executing the commands before that we go to the",
    "start": "1005670",
    "end": "1011650"
  },
  {
    "text": "resource call we have a semaphore or a thread pool and that's going to limit the number of concurrent calls you have",
    "start": "1011650",
    "end": "1018700"
  },
  {
    "text": "to the route to the resource so let's say we set it to 10 that means that if 10 calls is our are in this area here",
    "start": "1018700",
    "end": "1025390"
  },
  {
    "text": "reticle resource then the 11th comes in and we're going to reject it and when we reject it we're again going to go to the",
    "start": "1025390",
    "end": "1031870"
  },
  {
    "text": "fallback so again a lot of graphs",
    "start": "1031870",
    "end": "1037650"
  },
  {
    "text": "product detail requests the latency of the product detail page the distribution",
    "start": "1037650",
    "end": "1042910"
  },
  {
    "text": "now also the list page and the list page latency and a threat usage so now if I",
    "start": "1042910",
    "end": "1049510"
  },
  {
    "text": "increase the latency I'm gonna go and increase it really really high to 5",
    "start": "1049510",
    "end": "1055780"
  },
  {
    "text": "seconds we see something interesting happening so ok that the product detail",
    "start": "1055780",
    "end": "1062020"
  },
  {
    "text": "page will become slow we know but we also see that the product list page is becoming slow",
    "start": "1062020",
    "end": "1067440"
  },
  {
    "text": "really slow actually that's weird because the product list page is not doing anything with the review service but all the threats are being used by",
    "start": "1067440",
    "end": "1076770"
  },
  {
    "text": "the product detail page so yeah this is bad and this is where the whole",
    "start": "1076770",
    "end": "1082260"
  },
  {
    "text": "cascading effect comes in and even if I set it to one second so let me recover",
    "start": "1082260",
    "end": "1087510"
  },
  {
    "text": "it quickly set it to a second try it again",
    "start": "1087510",
    "end": "1095810"
  },
  {
    "text": "even now I give it a bit but even now we",
    "start": "1098180",
    "end": "1103290"
  },
  {
    "text": "see that a broad list page is becoming slow we're using not as much threads anymore but still yeah it's affecting the rest",
    "start": "1103290",
    "end": "1111270"
  },
  {
    "text": "of the system so this is where this cascading effect comes in so let's say we have this landscape with a couple of",
    "start": "1111270",
    "end": "1118200"
  },
  {
    "text": "services and the root service becomes slow it has a lot of latency then of",
    "start": "1118200",
    "end": "1123240"
  },
  {
    "text": "course you can expect a direct effect on all the services that are calling it directly but because all those",
    "start": "1123240",
    "end": "1131400"
  },
  {
    "text": "connection pools are filling up in those other services if they don't apply any resiliency you will see that all the",
    "start": "1131400",
    "end": "1138900"
  },
  {
    "text": "other endpoints also become slow well then it explodes so you have a big problem of course this",
    "start": "1138900",
    "end": "1145680"
  },
  {
    "text": "is only when you have a really high load on your system and you don't have any things like caching or other mitigating",
    "start": "1145680",
    "end": "1152360"
  },
  {
    "text": "parts in there which which make it less worse but this is not like the perfect storm so we can protect against it using",
    "start": "1152360",
    "end": "1161670"
  },
  {
    "text": "a bog heading so let's enable bog",
    "start": "1161670",
    "end": "1166920"
  },
  {
    "text": "heading say ten threats timeout on one second again it's fine give it a huge",
    "start": "1166920",
    "end": "1174000"
  },
  {
    "text": "amount of latency and enable that so now",
    "start": "1174000",
    "end": "1180120"
  },
  {
    "text": "we see a huge difference yeah okay the product detail page we still have those errors and I can you know fix it with",
    "start": "1180120",
    "end": "1185430"
  },
  {
    "text": "the fallback but it's not slower than a second but the list page is not affected",
    "start": "1185430",
    "end": "1191760"
  },
  {
    "text": "doesn't care there are still enough threads left in the system to handle those requests so this is this is huge",
    "start": "1191760",
    "end": "1198660"
  },
  {
    "text": "this is important so I talked about that you have to that",
    "start": "1198660",
    "end": "1204330"
  },
  {
    "start": "1201000",
    "end": "1351000"
  },
  {
    "text": "you have semaphores or threat pools so with thread pools I want to talk about the difference and you can have both",
    "start": "1204330",
    "end": "1210299"
  },
  {
    "text": "with Erics at the end per command you can choose so if you're gonna choose",
    "start": "1210299",
    "end": "1215730"
  },
  {
    "text": "four threats it has a couple of advantages versus semaphores so when you use threats the calling threats you can",
    "start": "1215730",
    "end": "1222059"
  },
  {
    "text": "always walk away if the time what happens it can simply continue with its other work and no problem and history",
    "start": "1222059",
    "end": "1228600"
  },
  {
    "text": "can also try to interrupt its own threats that is just doing the call to that client and I hope that the client",
    "start": "1228600",
    "end": "1233970"
  },
  {
    "text": "will will quit doing its thing the disadvantage however is that every",
    "start": "1233970",
    "end": "1240000"
  },
  {
    "text": "threat adds a little bit of computational overhead and memory usage but to be honest we do this a lot within",
    "start": "1240000",
    "end": "1246419"
  },
  {
    "text": "our webshop we have more than 40 thread pools and we notice nothing we have no problems with this it's just fine a more",
    "start": "1246419",
    "end": "1255539"
  },
  {
    "text": "bigger disadvantage is that a thread pool is harder to tune because a thread pool can be shared by multiple commands",
    "start": "1255539",
    "end": "1263210"
  },
  {
    "text": "so semaphores they are awesome because they have a very low overhead and",
    "start": "1263210",
    "end": "1268669"
  },
  {
    "text": "they're also easier to tune because every command has its own semaphore always however it he'll of course has a",
    "start": "1268669",
    "end": "1275460"
  },
  {
    "text": "number of disadvantages it only limits the concurrent calls but it doesn't",
    "start": "1275460",
    "end": "1280649"
  },
  {
    "text": "fully isolate so the calling threat it can't walk away because it's the same threat it needs to wait until our client",
    "start": "1280649",
    "end": "1286350"
  },
  {
    "text": "is finished and interrupting is also no possibility in that case so that's why",
    "start": "1286350",
    "end": "1294029"
  },
  {
    "text": "when you want recommendation then I would recommend starting with threat isolation except when the threat usage",
    "start": "1294029",
    "end": "1301740"
  },
  {
    "text": "is really the the overhead is really too high or using a client where you are you",
    "start": "1301740",
    "end": "1308250"
  },
  {
    "text": "know a client that you trust and that you can do client of a request based timeouts on and if you're in a more",
    "start": "1308250",
    "end": "1316139"
  },
  {
    "text": "asynchronous non-blocking environment using this fixed observable command then you are using the semaphore by default",
    "start": "1316139",
    "end": "1321870"
  },
  {
    "text": "because then mostly the client is doing the threat handling that's fine so before we going to the last",
    "start": "1321870",
    "end": "1330049"
  },
  {
    "text": "resilience technique halt with circuit breakers I wanted to look at metrics that history is exposing so this is an",
    "start": "1330049",
    "end": "1336600"
  },
  {
    "text": "example of one command from the history dashboard and it gives you a lot of",
    "start": "1336600",
    "end": "1341970"
  },
  {
    "text": "information like latency information for that commands the number of calls that",
    "start": "1341970",
    "end": "1347250"
  },
  {
    "text": "were successful or failures and also a cluster view so what does it mean within",
    "start": "1347250",
    "end": "1353100"
  },
  {
    "start": "1351000",
    "end": "1435000"
  },
  {
    "text": "our overview so all these different parts of history are generating these",
    "start": "1353100",
    "end": "1358649"
  },
  {
    "text": "metrics and they are simply reported to the outside world you can use that and I",
    "start": "1358649",
    "end": "1364140"
  },
  {
    "text": "want to give you an example of the actual bullet going back show up at this moment so this is this is what is",
    "start": "1364140",
    "end": "1369389"
  },
  {
    "text": "actually happening on our shop this is this overview of all the commands and you can scroll through it you see we",
    "start": "1369389",
    "end": "1375149"
  },
  {
    "text": "have humongous amount of them and this",
    "start": "1375149",
    "end": "1380370"
  },
  {
    "text": "is a live view and mainly just use to give a feeling of what is happening with your system if you want to doing more",
    "start": "1380370",
    "end": "1386250"
  },
  {
    "text": "analysis you can go to more history or a historical view we use kevanna for that",
    "start": "1386250",
    "end": "1391909"
  },
  {
    "text": "and hopefully loads yeah so here we see an overview of what is happening with",
    "start": "1391909",
    "end": "1398100"
  },
  {
    "text": "this command this day today so we have a number of executions we see some",
    "start": "1398100",
    "end": "1403110"
  },
  {
    "text": "failures coming by timeouts and we see the latencies coming by well this is really useful because you get an",
    "start": "1403110",
    "end": "1408659"
  },
  {
    "text": "completely new overview of what your system is seeing versus its back-end",
    "start": "1408659",
    "end": "1414330"
  },
  {
    "text": "services so now I need to yeah okay so",
    "start": "1414330",
    "end": "1420210"
  },
  {
    "text": "these metrics are really useful and you can use them for monitoring and alerting but they're also used for the circuit",
    "start": "1420210",
    "end": "1425610"
  },
  {
    "text": "breaker and the circuit breaker is like a fuse in a fuse box if it's closed it will that's a current",
    "start": "1425610",
    "end": "1430889"
  },
  {
    "text": "through but if it opens then it won't let anything through and you don't have power where it does this thing fit in so",
    "start": "1430889",
    "end": "1438350"
  },
  {
    "start": "1435000",
    "end": "1604000"
  },
  {
    "text": "you execute the command and then the first thing is going to look is at the circuit breaker and the circuit breaker determines by looking at the health of",
    "start": "1438350",
    "end": "1446580"
  },
  {
    "text": "the resource if it is open or not and if it's unhealthy then it will open and",
    "start": "1446580",
    "end": "1452130"
  },
  {
    "text": "everything will short-circuit to the fall bank so how does this look how does",
    "start": "1452130",
    "end": "1458370"
  },
  {
    "text": "this work so we have three states closed open and half open when it's closed everything is fine but when we see too",
    "start": "1458370",
    "end": "1464700"
  },
  {
    "text": "many failures which by default is 50% of all calls if they're a failure then it will open",
    "start": "1464700",
    "end": "1470310"
  },
  {
    "text": "and everything will really feel fast because everything will go to the phobic immediately but we need to automatically",
    "start": "1470310",
    "end": "1476700"
  },
  {
    "text": "recover so sometimes it will try one request I think every couple of seconds and then then it comes into the",
    "start": "1476700",
    "end": "1483030"
  },
  {
    "text": "half-open states and when at one request fails we'll go back to open but when it succeeds we'll go we'll close the",
    "start": "1483030",
    "end": "1489750"
  },
  {
    "text": "circuit breaker immediately so last demo",
    "start": "1489750",
    "end": "1494870"
  },
  {
    "text": "again all the the graphs page requests product detail latency distribution",
    "start": "1494870",
    "end": "1501470"
  },
  {
    "text": "request for list page but now we also have a circuit breaker overview and again it's the thread usage so now let's",
    "start": "1501470",
    "end": "1509220"
  },
  {
    "text": "immediately enable certain resiliency things but not a circuit breaker yet oh",
    "start": "1509220",
    "end": "1516840"
  },
  {
    "text": "not this one let's make it a little bit slow so we see now is that the error",
    "start": "1516840",
    "end": "1525240"
  },
  {
    "text": "percentage of the circuit the command is going up and up and up but because I",
    "start": "1525240",
    "end": "1531300"
  },
  {
    "text": "haven't enabled a circuit breaker yet it's still closed you know and we still see this threat usage of ten threats",
    "start": "1531300",
    "end": "1538160"
  },
  {
    "text": "yeah so what happens when we now unable the circuit breaker well as well a near",
    "start": "1539090",
    "end": "1545370"
  },
  {
    "text": "immediately open but the big difference here is in the threat usage all the",
    "start": "1545370",
    "end": "1550560"
  },
  {
    "text": "threats you know they're gone are not being used because the historic thread circuit breaker says well this this",
    "start": "1550560",
    "end": "1555960"
  },
  {
    "text": "thing is not healthy and not even going to try to call it and because it's not even going to try to call it the backend",
    "start": "1555960",
    "end": "1562170"
  },
  {
    "text": "service actually has a breathing room to recover it's a nice side effect but also",
    "start": "1562170",
    "end": "1567390"
  },
  {
    "text": "every customer hitting these commands you know they will get awesome performance it's perfect so when we",
    "start": "1567390",
    "end": "1575780"
  },
  {
    "text": "reduce the latency again let's say to 20% then this should start recovering in",
    "start": "1575780",
    "end": "1583680"
  },
  {
    "text": "a second yeah so we see oh the circuit breaker closed again we still have a",
    "start": "1583680",
    "end": "1589200"
  },
  {
    "text": "little error percentage left okay so",
    "start": "1589200",
    "end": "1594210"
  },
  {
    "text": "these are all the things that history is doing now that for us now let's get into some tips and tricks that we encountered",
    "start": "1594210",
    "end": "1599580"
  },
  {
    "text": "well well well well building us into our systems so",
    "start": "1599580",
    "end": "1604680"
  },
  {
    "text": "first make sure when you start with this from the beginning that you set up monitoring a lower thing because if your",
    "start": "1604680",
    "end": "1610830"
  },
  {
    "text": "circuit breakers are open then you the only way to know that is because customers starts complaining that",
    "start": "1610830",
    "end": "1616650"
  },
  {
    "text": "certain features simply are not working or are always empty or whatever you know if you have a fallback so you need that",
    "start": "1616650",
    "end": "1622170"
  },
  {
    "text": "monitoring to discover what is going on in your system and we actually split it",
    "start": "1622170",
    "end": "1627510"
  },
  {
    "text": "up in to certain types of monitoring we have critical and non-critical commands because certain commands like for us",
    "start": "1627510",
    "end": "1633720"
  },
  {
    "text": "searching in our webshop if you don't have that then our webshop doesn't really do a lot we make them critical",
    "start": "1633720",
    "end": "1639990"
  },
  {
    "text": "which means if those circuit breakers open or the failure rate is too high then our ops guys and the team",
    "start": "1639990",
    "end": "1645630"
  },
  {
    "text": "responsible we immediately get getting messages hey guys you need to do something but certain things like",
    "start": "1645630",
    "end": "1651140"
  },
  {
    "text": "reviews they're not critical enough that we want to wake up somebody in the",
    "start": "1651140",
    "end": "1656370"
  },
  {
    "text": "middle of the night so in that case is just a non critical service and we get a warning screen somewhere on them on a",
    "start": "1656370",
    "end": "1661920"
  },
  {
    "text": "monitoring screen or whatever so another thing is don't forget to configure those",
    "start": "1661920",
    "end": "1667740"
  },
  {
    "text": "clients those HTTP clients because they have also timeout settings you still need to set them correctly and also the",
    "start": "1667740",
    "end": "1674730"
  },
  {
    "text": "connection pools need to be big enough to be able to handle all the requests this is something that is often forgotten at our company so why is it",
    "start": "1674730",
    "end": "1683340"
  },
  {
    "text": "important so here you have a normal execution where you have an application threat calling the history command on",
    "start": "1683340",
    "end": "1689250"
  },
  {
    "text": "that same threat and it's going to start this history threat and do the actual call to the resource if the resource is",
    "start": "1689250",
    "end": "1696630"
  },
  {
    "text": "slow in its timing outs on the historic level but the time it has not decently been set on the client then that history",
    "start": "1696630",
    "end": "1703890"
  },
  {
    "text": "threat is still being used it can't be released until the client simply while it is done so this will cause",
    "start": "1703890",
    "end": "1712340"
  },
  {
    "text": "unnecessary load shedding if you don't configure this correctly and with",
    "start": "1712340",
    "end": "1718590"
  },
  {
    "text": "semaphores is even worse because it semaphores this calling threat can't walk away so you will still have this",
    "start": "1718590",
    "end": "1725520"
  },
  {
    "text": "whole latency problem well less because you're limiting via debug heading",
    "start": "1725520",
    "end": "1731730"
  },
  {
    "text": "yeah but it's it's not good so two things you can do you can make his sex",
    "start": "1731730",
    "end": "1738090"
  },
  {
    "text": "time out of the client timeout before hystrix does that's fine the only thing is his fix won't know",
    "start": "1738090",
    "end": "1744149"
  },
  {
    "text": "that it is a timeout causing this so it will simply return an exception and the metrics you also see it just as a normal",
    "start": "1744149",
    "end": "1749880"
  },
  {
    "text": "failure if you make the client the timeout just after his risk then history",
    "start": "1749880",
    "end": "1754889"
  },
  {
    "text": "will understand hey this was a timeout how nice and it will also register that as a timeout but you can also do a",
    "start": "1754889",
    "end": "1762539"
  },
  {
    "text": "different thing and it is implement a hook because history is really pluggable",
    "start": "1762539",
    "end": "1767690"
  },
  {
    "text": "and what we do is we have this map this mapping function is time of exception",
    "start": "1767690",
    "end": "1772740"
  },
  {
    "text": "and it knows all these common Java timeout exceptions and it will map it to a history timer exception and that way",
    "start": "1772740",
    "end": "1779220"
  },
  {
    "text": "his switch also knows oh this was a timeout and this makes a lot easier it doesn't really matter anymore anymore",
    "start": "1779220",
    "end": "1784649"
  },
  {
    "text": "who times out first it's always registered as a timeout and another",
    "start": "1784649",
    "end": "1791130"
  },
  {
    "text": "trick is what you can do is make the client timeout always have the same time orders to command because then you need",
    "start": "1791130",
    "end": "1796830"
  },
  {
    "text": "to configure one time model unless so what you can do in your history command is get the properties of that commands",
    "start": "1796830",
    "end": "1803549"
  },
  {
    "text": "you can get the execution time or the milliseconds they really love their long method names you get the value of that",
    "start": "1803549",
    "end": "1809370"
  },
  {
    "text": "they simply pass it along to your client you client must be able to deal with requests based time on settings though",
    "start": "1809370",
    "end": "1815490"
  },
  {
    "text": "not not all not all do the same thing is it retries some clients tend to do",
    "start": "1815490",
    "end": "1822269"
  },
  {
    "text": "retries automatically you need to be careful with that you don't want to have too many because then you have the same effect as having a really long time out",
    "start": "1822269",
    "end": "1829139"
  },
  {
    "text": "setting for your clients so what if you really want to have retries do it most",
    "start": "1829139",
    "end": "1836010"
  },
  {
    "text": "one if the second one fails then something is probably really wrong with your system and well let it fail next",
    "start": "1836010",
    "end": "1845190"
  },
  {
    "text": "thing a commands groups and thread pools have names and those names are really important here you need them for",
    "start": "1845190",
    "end": "1851399"
  },
  {
    "text": "configuring your commands so they need to be unique but also you see them everywhere in your monitoring systems",
    "start": "1851399",
    "end": "1856950"
  },
  {
    "text": "and your loading systems so you need to be really descriptive and tell what that",
    "start": "1856950",
    "end": "1862379"
  },
  {
    "text": "command is doing so we do is we incorporate the service ID to",
    "start": "1862379",
    "end": "1867570"
  },
  {
    "text": "the the short name of a service what we're calling and the command name and the command name should always say what",
    "start": "1867570",
    "end": "1872790"
  },
  {
    "text": "a command is doing so for instance we have this pcs service product content service which gives product information we have this medical product by ID if",
    "start": "1872790",
    "end": "1879900"
  },
  {
    "text": "you see that in a monitoring system then you immediately know what is going on",
    "start": "1879900",
    "end": "1885169"
  },
  {
    "text": "tuning really quickly when you're tuning is really important for history you need",
    "start": "1886679",
    "end": "1892200"
  },
  {
    "text": "to do that you can't ignore it and certainly if you have high loads or long latencies and you should be tuning based",
    "start": "1892200",
    "end": "1898080"
  },
  {
    "text": "on production information and you need to behave a unit on the behavior of the",
    "start": "1898080",
    "end": "1903450"
  },
  {
    "text": "resource and not be not on what you would like the timeout to be so if you have a survey research that you're",
    "start": "1903450",
    "end": "1911070"
  },
  {
    "text": "calling and it's normal behaviors to have a timeout of one second then that needs to be the timeout for your commands but if you don't want to wait a",
    "start": "1911070",
    "end": "1917580"
  },
  {
    "text": "second but maybe only half a second then you need to add an extra layer of timeouts around that and say oh it won't",
    "start": "1917580",
    "end": "1923700"
  },
  {
    "text": "only want to wait a second half a second else the timeout will always give arrows because you're what thinks that the",
    "start": "1923700",
    "end": "1930870"
  },
  {
    "text": "resources are healthy and again don't forget the time as it declines so I have",
    "start": "1930870",
    "end": "1937440"
  },
  {
    "text": "this overview of different formulas for these timeout settings and concurrent",
    "start": "1937440",
    "end": "1942780"
  },
  {
    "text": "concurrency settings I'm not going to go through them now if you download the slides you can take a look at them and",
    "start": "1942780",
    "end": "1948030"
  },
  {
    "text": "as similar ones are also on the historic s-- wiki so you can take a look at there",
    "start": "1948030",
    "end": "1953130"
  },
  {
    "text": "as well and for the client timeouts something I noticed is the connect",
    "start": "1953130",
    "end": "1959549"
  },
  {
    "text": "timeout people tend to set that to seconds a connect timeout is when you the timeout if you need of the time a",
    "start": "1959549",
    "end": "1966150"
  },
  {
    "text": "service needs to connect from one service to another service service but not to deal with the actual call often",
    "start": "1966150",
    "end": "1974520"
  },
  {
    "text": "within our network 100 milliseconds is already a very long time so issue you",
    "start": "1974520",
    "end": "1981299"
  },
  {
    "text": "can use that or even lower if you go into another network it can be a different thing in that case measure",
    "start": "1981299",
    "end": "1986549"
  },
  {
    "text": "these settings before you're setting it to seconds and for the Reta timeout",
    "start": "1986549",
    "end": "1991650"
  },
  {
    "text": "we've already seen it when you're not using retries you can set it to the command time out and if your using",
    "start": "1991650",
    "end": "1996929"
  },
  {
    "text": "retries one retry you can okay take the 99.5% I'll resource",
    "start": "1996929",
    "end": "2003289"
  },
  {
    "text": "latency oh it should be the plus the median resource latency because you",
    "start": "2003289",
    "end": "2009559"
  },
  {
    "text": "expect the second call to succeed so small things about operations when",
    "start": "2009559",
    "end": "2015679"
  },
  {
    "start": "2012000",
    "end": "2199000"
  },
  {
    "text": "you're having run it when you're running is on production you will see jitter and failure you already saw that an example",
    "start": "2015679",
    "end": "2021739"
  },
  {
    "text": "on from the board convex shop there will always be some timeouts and that can",
    "start": "2021739",
    "end": "2026869"
  },
  {
    "text": "because of garbage collection or maybe a new machine is starting up and it's warming up or you can have different",
    "start": "2026869",
    "end": "2032090"
  },
  {
    "text": "payload sizes or sometimes the payload size is simply to bake and it takes too long to handle and some many other",
    "start": "2032090",
    "end": "2038119"
  },
  {
    "text": "reasons so for example this is the PCs service again and it handles about",
    "start": "2038119",
    "end": "2044529"
  },
  {
    "text": "200,000 requests in 30 seconds what do you see that it also has about 250",
    "start": "2044529",
    "end": "2049669"
  },
  {
    "text": "timeouts in that case and when History X is starting to report failure a circuit",
    "start": "2049669",
    "end": "2056118"
  },
  {
    "text": "breakers prince is open then don't overreact by trying to retune that circuit breaker immediately first see",
    "start": "2056119",
    "end": "2063408"
  },
  {
    "text": "what is going on determine if it's not really a problem in the backend service and if you determine that everything is",
    "start": "2063409",
    "end": "2069500"
  },
  {
    "text": "fine with the backend system yet then maybe you want to do a reach you in session so some global experiences at",
    "start": "2069500",
    "end": "2077750"
  },
  {
    "text": "both comm it already prevented a lot of small outages and a couple of big ones",
    "start": "2077750",
    "end": "2083148"
  },
  {
    "text": "and because of that we sleep a lot better now so it really helps our",
    "start": "2083149",
    "end": "2090108"
  },
  {
    "text": "operations guys are really happy with this and history in itself is a great",
    "start": "2090109",
    "end": "2095839"
  },
  {
    "text": "library although it's starting to get a little bit outdated but in general it does its job well it integrates really",
    "start": "2095839",
    "end": "2102230"
  },
  {
    "text": "well with our tools because it's pluggable and it's easy to learn and implement however tuning is often",
    "start": "2102230",
    "end": "2110599"
  },
  {
    "text": "overlooked by our teams and it's not trivial if you if you're going to do that so we often see incorrect timeout",
    "start": "2110599",
    "end": "2116089"
  },
  {
    "text": "settings or thread pool sizes that are too big and the client is also often forgotten so things to watch out for if",
    "start": "2116089",
    "end": "2123170"
  },
  {
    "text": "you're if you're doing is and in the end it was probably mostly an organizational",
    "start": "2123170",
    "end": "2129049"
  },
  {
    "text": "challenge than a technical one so we we have a lot of teams so we had to train them we had to make the business understand",
    "start": "2129049",
    "end": "2135290"
  },
  {
    "text": "that these fallbacks are important and better than big failure messages but in the end I think it really was worth it",
    "start": "2135290",
    "end": "2142040"
  },
  {
    "text": "and it probably saves a lot of money of saves already a lot of money with these big outages so to wrap up failures are",
    "start": "2142040",
    "end": "2151910"
  },
  {
    "text": "really not the exception we need to we need to deal with them they are normal so we need to be resilient against those",
    "start": "2151910",
    "end": "2157220"
  },
  {
    "text": "failures and a couple of techniques that we've seen to be more resilient is to",
    "start": "2157220",
    "end": "2162890"
  },
  {
    "text": "implement these fall backs manage timeouts carefully also for the clients use block heading alo chatting to",
    "start": "2162890",
    "end": "2169940"
  },
  {
    "text": "prevent that resource hijacking and add circuit breaker to skip those few tacos to services that aren't healthy in any",
    "start": "2169940",
    "end": "2176420"
  },
  {
    "text": "case and adding resilience in the end doesn't really need to be really hard",
    "start": "2176420",
    "end": "2184130"
  },
  {
    "text": "certainly not with libraries that do it all for you so that's it I'm not sure",
    "start": "2184130",
    "end": "2191839"
  },
  {
    "text": "how much time I have for questions but",
    "start": "2191839",
    "end": "2195430"
  }
]