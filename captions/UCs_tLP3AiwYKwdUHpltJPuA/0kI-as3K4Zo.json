[
  {
    "start": "0",
    "end": "81000"
  },
  {
    "text": "I'm Lars from the GOTO team. And I'm joined today by Anjana Vakil from\nObservable.",
    "start": "13920",
    "end": "19820"
  },
  {
    "text": "How are you doing Anjana? Hi, doing well. Thank you.",
    "start": "19820",
    "end": "25150"
  },
  {
    "text": "Yes, hanging in there. Yeah, I think we all are. What is it that you do?",
    "start": "25150",
    "end": "31130"
  },
  {
    "text": "I just briefly mentioned that you're with\nObservable. But do you wanna tell us what you do professionally?",
    "start": "31130",
    "end": "36820"
  },
  {
    "text": "I work as a developer advocate at Observable. Observable makes a platform for doing data\nvisualization and all kinds of other stuff",
    "start": "36820",
    "end": "45890"
  },
  {
    "text": "in the browser. We make an interactive JavaScript Notebook\nenvironment that's reactive, that allows you",
    "start": "45890",
    "end": "52680"
  },
  {
    "text": "to really quickly prototype data visualizations. You can take advantage of a huge community\nof others that are creating really cool visualizations,",
    "start": "52680",
    "end": "62690"
  },
  {
    "text": "art, interactive articles and all kinds of\ncool stuff. As a developer advocate, I work with the community\nto try and help get folks up and running with",
    "start": "62690",
    "end": "72810"
  },
  {
    "text": "the platform and learning new skills. And also to bring back feedback from the user\ncommunity to the team and make the product",
    "start": "72810",
    "end": "80938"
  },
  {
    "text": "better. That sounds really interesting. I'll have to spend a little bit more time\ndigging into it.",
    "start": "80939",
    "end": "88460"
  },
  {
    "start": "81000",
    "end": "538000"
  },
  {
    "text": "So I'm here talking to you today about functional\nprogramming. ",
    "start": "88460",
    "end": "93609"
  },
  {
    "text": "I love talking about functional programming. Actually, I wanna start somewhere else.",
    "start": "93609",
    "end": "102770"
  },
  {
    "text": "You have a background in linguistics and philosophy,\nright? So how do you go from linguistics and philosophy\nto computer science?",
    "start": "102770",
    "end": "109820"
  },
  {
    "text": "And how do you think that has affected the\nway that you think about programming and how",
    "start": "109820",
    "end": "116479"
  },
  {
    "text": "you develop software? I had a pretty wandering path. I majored in philosophy in college, and I\nwas always really fascinated by foreign languages,",
    "start": "116479",
    "end": "130179"
  },
  {
    "text": "by the different ways that humans can express\nthemselves and by the kind of philosophical",
    "start": "130179",
    "end": "135810"
  },
  {
    "text": "questions that raises around what is being,\nand what is identity, and what is meaning",
    "start": "135810",
    "end": "142209"
  },
  {
    "text": "and these kinds of big picture things. I've always been a big fan of that kind of\nbig-picture thinking.",
    "start": "142209",
    "end": "148730"
  },
  {
    "text": "I really was motivated by wanting to learn\nas much about the world as possible, wanting",
    "start": "148730",
    "end": "153790"
  },
  {
    "text": "to learn as many different languages as possible. I ended up getting into teaching English as\na foreign language for a long time.",
    "start": "153790",
    "end": "160680"
  },
  {
    "text": "It took a lot of years, spending time around\nthe world, teaching different folks English",
    "start": "160680",
    "end": "167599"
  },
  {
    "text": "as a foreign language. Eventually, I got really interested in the\nfield of linguistics, in the scientific study",
    "start": "167599",
    "end": "173560"
  },
  {
    "text": "of language, how it works, how we learn it\nand how different languages do things differently.",
    "start": "173560",
    "end": "180430"
  },
  {
    "text": "I found out that there was a field called\ncomputational linguistics, which I did not know existed until late in my life.",
    "start": "180430",
    "end": "188549"
  },
  {
    "text": "I found this super fascinating. Computational linguistics is basically a big\numbrella term.",
    "start": "188549",
    "end": "193970"
  },
  {
    "text": "It refers to a lot of different stuff. Everything from using computational methods,\nand data, linguistic data, statistics, machine",
    "start": "193970",
    "end": "206370"
  },
  {
    "text": "learning and similar, to understand language\nbetter. On the other hand, to use that knowledge to\ncreate better language technologies.",
    "start": "206370",
    "end": "217280"
  },
  {
    "text": "Things like speech recognition, which I was\nparticularly focused on, or text-to-speech synthesis or language modeling, predictive\ntexts when you type in words on your phone,",
    "start": "217280",
    "end": "227640"
  },
  {
    "text": "all of that kind of human language technology. I just found that field super fascinating. I went back to grad school to study that.",
    "start": "227640",
    "end": "234800"
  },
  {
    "text": "And in the course of doing that, I had to\nlearn to program. I really started doing more software development\nthrough the course of studying computational",
    "start": "234800",
    "end": "243939"
  },
  {
    "text": "linguistics, and I basically fell in love\nwith the software. I found I really enjoyed writing the code\nand the software that I needed to do my linguistics",
    "start": "243939",
    "end": "253480"
  },
  {
    "text": "research a little bit more than I enjoyed\ndoing the actual linguistics research. So I gradually moved into the software field\nand from there, I just found I really had",
    "start": "253480",
    "end": "264090"
  },
  {
    "text": "a passion for helping people learn different\ntopics in computer science, especially in",
    "start": "264090",
    "end": "271080"
  },
  {
    "text": "programming paradigms. That's my kind of philosophical, big picture\nthinking about what does it all mean, and",
    "start": "271080",
    "end": "278910"
  },
  {
    "text": "what is the world? It really kind of connected when I learned\nabout different programming paradigms and",
    "start": "278910",
    "end": "286230"
  },
  {
    "text": "different ways of conceiving of a programming\nlanguage. Getting a little bit into programming language\ntheory and ideas of different ways we can",
    "start": "286230",
    "end": "296310"
  },
  {
    "text": "conceive of a computer program, what it is,\nwhat it's made up of, and how those things",
    "start": "296310",
    "end": "302200"
  },
  {
    "text": "interact with each other. I think that philosophical background, and\nthis idea of “There are different ways we",
    "start": "302200",
    "end": "308400"
  },
  {
    "text": "can say things and do things” from my linguistics\nexperience really informed the lens that I",
    "start": "308400",
    "end": "314560"
  },
  {
    "text": "have on thinking about different programming\nlanguages and the different ways that we can",
    "start": "314560",
    "end": "320220"
  },
  {
    "text": "develop mental models to think about computers\nand computing and writing programs.",
    "start": "320220",
    "end": "330250"
  },
  {
    "text": "It's really fascinating to think about. I think one thing from one of your conference\ntalks that I saw some time ago really stuck",
    "start": "330250",
    "end": "338440"
  },
  {
    "text": "with me. If I remember correctly, you said that programming\nlanguages are more for communicating with",
    "start": "338440",
    "end": "347990"
  },
  {
    "text": "other people and it's just a side effect that\nwe have computers running those instructions.",
    "start": "347990",
    "end": "353940"
  },
  {
    "text": "I think that was a really interesting observation\nand I guess that's your linguistics background showing through a little bit there as well.",
    "start": "353940",
    "end": "360780"
  },
  {
    "text": "A little bit, but I can't take credit for\nthat idea.",
    "start": "360780",
    "end": "365910"
  },
  {
    "text": "It's certainly something that folks have discovered\nthrough decades of computing, seeing how software",
    "start": "365910",
    "end": "373520"
  },
  {
    "text": "evolves and how systems develop and grow. And that essentially, over time the act of\ndoing computing and of advancing the state",
    "start": "373520",
    "end": "384770"
  },
  {
    "text": "of the art, of creating ever more complex\nprograms, ends up really being more about the people that are involved than the computers.",
    "start": "384770",
    "end": "391289"
  },
  {
    "text": "There’s this amazing quote about humans\nand computers. I wanna say it's in \"Structure and Interpretation\nof Computer Programs\" but I could be wrong",
    "start": "391290",
    "end": "399110"
  },
  {
    "text": "about that. It says: \"[...]programs must be written for\npeople to read, and only incidentally for",
    "start": "399110",
    "end": "410090"
  },
  {
    "text": "machines to execute.\" It's only incidentally, a sort of side effect,\nthat you can run it on the computer and execute",
    "start": "410090",
    "end": "416970"
  },
  {
    "text": "your program as intended.",
    "start": "416970",
    "end": "422060"
  },
  {
    "text": "I think this is something that people much\nsmarter than me have said and thought, in the past.",
    "start": "422060",
    "end": "428050"
  },
  {
    "text": "And I couldn't agree more. I think what's really fascinating about the\npractice of software development and the practice",
    "start": "428050",
    "end": "437220"
  },
  {
    "text": "of creating really complex programs that can\nbe maintained over time, that are readable,",
    "start": "437220",
    "end": "444760"
  },
  {
    "text": "that are understandable to other people, is\nreally understanding how we all understand",
    "start": "444760",
    "end": "450060"
  },
  {
    "text": "code. And trying to make code that's easier to grasp,\ngiven a particular mental model of how things",
    "start": "450060",
    "end": "459970"
  },
  {
    "text": "are working. That's a huge problem and something we're\nall gonna be working on for many decades to",
    "start": "459970",
    "end": "467340"
  },
  {
    "text": "come, I'm sure. But it's something that I find fascinating,\nreally thinking about.",
    "start": "467340",
    "end": "474169"
  },
  {
    "text": "Computers are simple beings, they do what\nwe tell them. They don't really care how we say it, or what\nart we use to say it with.",
    "start": "474170",
    "end": "480590"
  },
  {
    "text": "They don't really care about an elegant program\nthat expresses its ideas in simple mental",
    "start": "480590",
    "end": "488180"
  },
  {
    "text": "concepts. They just care about the instructions we're\ngiving them and what they're supposed to do.",
    "start": "488180",
    "end": "494550"
  },
  {
    "text": "But as humans it can make a huge difference. If we're looking at some machine code in binary,\nthat's not very useful for us in terms of",
    "start": "494550",
    "end": "503380"
  },
  {
    "text": "changing it and morphing it to our use cases\nover time as they change.",
    "start": "503380",
    "end": "508960"
  },
  {
    "text": "Whereas, if we can write code that is expressed\nin such a way that it's easy for a newcomer",
    "start": "508960",
    "end": "515959"
  },
  {
    "text": "to the codebase to understand, that it's easy\nfor someone to remember what they wrote 10",
    "start": "515959",
    "end": "521010"
  },
  {
    "text": "years later, then we can create really powerful,\nexpressive systems that are made up not just",
    "start": "521010",
    "end": "528959"
  },
  {
    "text": "of the code itself, but also of the humans\nthat are touching that code, reading it, working",
    "start": "528959",
    "end": "534600"
  },
  {
    "text": "with it and having to maintain it.",
    "start": "534600",
    "end": "540389"
  },
  {
    "start": "538000",
    "end": "793000"
  },
  {
    "text": "I completely agree. I mean, it's one of these things: the more\ntime I spend writing code, the less I'm starting",
    "start": "540389",
    "end": "547970"
  },
  {
    "text": "to care about performance and correctness\nand things like that. And the more I care about: Is it easy to read?",
    "start": "547970",
    "end": "554319"
  },
  {
    "text": "Do I understand it? Will I understand it next week? Will the new guy that we're onboarding understand\nit?",
    "start": "554319",
    "end": "560519"
  },
  {
    "text": "Will I need to be around to maintain this\nor could other people take over this code? Those sorts of factors are becoming much more\nfront and center for me.",
    "start": "560519",
    "end": "568110"
  },
  {
    "text": "So I completely agree with you there.",
    "start": "568110",
    "end": "573389"
  },
  {
    "text": "Exactly. And I think of it as factoring that into when\nwe're thinking about the performance of our",
    "start": "573389",
    "end": "578639"
  },
  {
    "text": "code. There's a great talk by the developer of this\ngame Braid if anybody's played that, where",
    "start": "578639",
    "end": "586300"
  },
  {
    "text": "he talks about the human performance factor. There's a measure of performance for your\ncode where we're talking about how much time",
    "start": "586300",
    "end": "595889"
  },
  {
    "text": "does the program take to run? How much space does it use and memory? But there's also the question of how much\ntime did it take you to write that code?",
    "start": "595889",
    "end": "603199"
  },
  {
    "text": "How much time did it take you to make an update\nwhen you needed to? So what is that human performance factor?",
    "start": "603199",
    "end": "610100"
  },
  {
    "text": "And I think that's an interesting lens to\ntake on, reconsidering how we frame writing",
    "start": "610100",
    "end": "616610"
  },
  {
    "text": "performant code. If it's performant for the human side, as\nwell as the machine side, then we're doing",
    "start": "616610",
    "end": "622420"
  },
  {
    "text": "great. Is that Jonathan Blow by any chance I think? Yes, exactly.",
    "start": "622420",
    "end": "627640"
  },
  {
    "text": "Thank you. Right. It rang a bell when you mentioned the game\nBraid. He has a lot of interesting points I think.",
    "start": "627640",
    "end": "636760"
  },
  {
    "text": "We're getting a bit into the weeds here, but\nI hope you don't mind. Please, just here to chat. Yeah, exactly.",
    "start": "636760",
    "end": "641939"
  },
  {
    "text": "That's the thing that we’re doing. Hallway nerd out is what we're doing right\nnow. I mean when you mentioned human performance,\nit reminds me a little bit of another speaker",
    "start": "641939",
    "end": "652569"
  },
  {
    "text": "that we've had at our conferences a few times\nbefore, Adam Tornhill. His whole idea is that all of the data we\nhave in Git is also kind of social data.",
    "start": "652569",
    "end": "662420"
  },
  {
    "text": "It tells you who worked in which files when,\nand how often are we needing to change this",
    "start": "662420",
    "end": "667910"
  },
  {
    "text": "file. Based on that information, you can tell a\nlot about the codebase and the people working on it.",
    "start": "667910",
    "end": "673769"
  },
  {
    "text": "And use that as a sort of guiding factor to\nfigure out which parts of the code are really",
    "start": "673769",
    "end": "680019"
  },
  {
    "text": "complex and need to be changed often. Maybe that's a good place to focus when you\nwanna refactor.",
    "start": "680019",
    "end": "685310"
  },
  {
    "text": "Whereas let's say you have this other part\nof the code that is messy, people might scuff their noses at it.",
    "start": "685310",
    "end": "691279"
  },
  {
    "text": "But you know what, it never needed to be changed,\nit changes once every few years or so. So it's okay.",
    "start": "691279",
    "end": "697089"
  },
  {
    "text": "But sort of considering the social factor\nof the information we have in Git, I think,",
    "start": "697089",
    "end": "702980"
  },
  {
    "text": "is a really fascinating concept as well. Absolutely. I couldn't agree more.",
    "start": "702980",
    "end": "708360"
  },
  {
    "text": "At Observable, we're doing data visualization\na lot and it's really fascinating what you",
    "start": "708360",
    "end": "715680"
  },
  {
    "text": "can see. The GitHub API gives you so much information\nabout different open source projects.",
    "start": "715680",
    "end": "720790"
  },
  {
    "text": "So much of this information about who is involved,\nwhich files are changing, which areas are",
    "start": "720790",
    "end": "727889"
  },
  {
    "text": "kind of under active, in development, and\nwhich are more stabilized, as you say. And then being able to pull that into a visual\nrepresentation, where you can navigate through",
    "start": "727889",
    "end": "738319"
  },
  {
    "text": "and see who touches which part of the codebase,\nwhich files are associated with which people and which parts of this are moving quickly,\nand which parts are stable.",
    "start": "738319",
    "end": "749899"
  },
  {
    "text": "Being able to visually see that is also a\nreally great tool, especially when you're getting started in a new code base, trying\nto orient yourself.",
    "start": "749899",
    "end": "756628"
  },
  {
    "text": "Trying to understand: What's the context here? What's been going on?",
    "start": "756629",
    "end": "762040"
  },
  {
    "text": "Being able to look at that all with your eyeballs,\ninstead of having to read through logs.",
    "start": "762040",
    "end": "767190"
  },
  {
    "text": "It's a real leg up in terms of understanding\na codebase and understanding how it functions.",
    "start": "767190",
    "end": "773449"
  },
  {
    "text": "And the human side of that is the entire thing\nyou need to understand there.",
    "start": "773449",
    "end": "778959"
  },
  {
    "text": "So yeah, I couldn't agree more. All right, I think that was a really fun tangent\nbut it's actually not what I was here to talk",
    "start": "778959",
    "end": "787959"
  },
  {
    "text": "to you about, although I think we could keep\ntalking about this for a long time. Sure.",
    "start": "787959",
    "end": "793029"
  },
  {
    "start": "793000",
    "end": "1262000"
  },
  {
    "text": "Let’s steer things back towards functional\nprogramming. Definitely, yes.",
    "start": "793029",
    "end": "798060"
  },
  {
    "text": "One of the questions I wanted to ask you:\nWhat defines a functional language?",
    "start": "798060",
    "end": "805680"
  },
  {
    "text": "And then something you said, which rang really\ntrue with me is that it might make more sense",
    "start": "805680",
    "end": "813279"
  },
  {
    "text": "to say, what features support a functional\nprogramming style? What features do you think a language needs\nin order to support functional programming?",
    "start": "813279",
    "end": "825610"
  },
  {
    "text": "Great questions. The way I think about a functional language\nis a language that supports functional programming.",
    "start": "825610",
    "end": "833769"
  },
  {
    "text": "Where if we understand functional programming,\nthere's a couple of different ways to think about it.",
    "start": "833769",
    "end": "838930"
  },
  {
    "text": "The way I usually think about it is programming\nwith only pure functions. Pure functions being functions that take inputs\nand produce outputs.",
    "start": "838930",
    "end": "847868"
  },
  {
    "text": "So they take in arguments and they return\na return value. And that is all they do. They don't have any other side effects.",
    "start": "847869",
    "end": "853740"
  },
  {
    "text": "So they're not changing anything else in the\nworld, or in the program except returning their return value.",
    "start": "853740",
    "end": "860779"
  },
  {
    "text": "Another way people often think about it is\nprogramming without state. So instead of having values change over time\nin your program, and thinking about what the",
    "start": "860779",
    "end": "869980"
  },
  {
    "text": "values are at any given moment, and how they\nneed to change, given things happening in the world, is thinking about it in terms of\ndata transformation, of data coming in and",
    "start": "869980",
    "end": "879759"
  },
  {
    "text": "data going out. And there's really only the process of turning\nthat in data to that out data and not any",
    "start": "879759",
    "end": "887170"
  },
  {
    "text": "other kind of work to be done, not any other\nstate to be changed. So regardless of how you choose to think about\nfunctional programming, a functional language",
    "start": "887170",
    "end": "896220"
  },
  {
    "text": "is one that supports doing that. You've got your pure functional languages,\nwhich completely constrain you, to working",
    "start": "896220",
    "end": "904910"
  },
  {
    "text": "in that functional paradigm. You are not allowed to have impure functions,\nyou are not allowed to have state in your",
    "start": "904910",
    "end": "912990"
  },
  {
    "text": "programs in a pure functional language. And then you have what we could think of as\nmulti-paradigm languages where you can do",
    "start": "912990",
    "end": "921420"
  },
  {
    "text": "functional programming if you would like to. And it has features that support that, for\nexample, first-class functions.",
    "start": "921420",
    "end": "929190"
  },
  {
    "text": "So you need to be able to take functions and\ntreat them as any kind of data that you would",
    "start": "929190",
    "end": "936820"
  },
  {
    "text": "have as strings or booleans or what have you. You can take them as inputs to other functions,\nyou can return them as outputs.",
    "start": "936820",
    "end": "943889"
  },
  {
    "text": "They're just items in the world that you can\nwork with. Having first-class functions is really important.",
    "start": "943889",
    "end": "951449"
  },
  {
    "text": "Sometimes having certain utilities can make\nthings really easy like being able to do things",
    "start": "951449",
    "end": "957310"
  },
  {
    "text": "like mapping and filtering over arrays or\ncollections of data instead of having to use",
    "start": "957310",
    "end": "964160"
  },
  {
    "text": "for loops or while loops to do stateful iteration. So with these types of features, if a language\nhas them, but doesn't necessarily force you",
    "start": "964160",
    "end": "972440"
  },
  {
    "text": "to use them, we can still think of it as a\nfunctional language because you can program functionally in it.",
    "start": "972440",
    "end": "978009"
  },
  {
    "text": "I'm thinking of languages like JavaScript,\nor Python, or Scala or F#, or these languages",
    "start": "978009",
    "end": "985110"
  },
  {
    "text": "where you can choose to work in a functional\nlanguage. They often have nice things, like anonymous\nfunctions, like lambda functions, things like",
    "start": "985110",
    "end": "992899"
  },
  {
    "text": "that, that make it really easy to work in\na functional style.",
    "start": "992899",
    "end": "998248"
  },
  {
    "text": "But you can also do things more imperatively\nif you would like at times.",
    "start": "998249",
    "end": "1003839"
  },
  {
    "text": "I think in terms of these languages that support\nmultiple paradigms, that's always a really great thing to my mind because it allows you\nto choose the right tool for the job.",
    "start": "1003839",
    "end": "1014139"
  },
  {
    "text": "However, a lot of people that are working\non problems that are especially well-framed",
    "start": "1014139",
    "end": "1020740"
  },
  {
    "text": "as data transformation problems are huge fans\nof working in pure functional languages.",
    "start": "1020740",
    "end": "1026780"
  },
  {
    "text": "So not only do I have the features I need\nto do functional programming but also the language is keeping me honest.",
    "start": "1026780",
    "end": "1032579"
  },
  {
    "text": "It's keeping me from needing to discipline\nmyself to write my code functionally.",
    "start": "1032579",
    "end": "1039669"
  },
  {
    "text": "It's doing the discipline for me, and I don't\nhave to worry about it. I do actually like that because then I don't\nhave to keep tabs on myself and make sure",
    "start": "1039670",
    "end": "1049070"
  },
  {
    "text": "that I am using the more functional features\nand not ending up veering towards a more imperative",
    "start": "1049070",
    "end": "1054980"
  },
  {
    "text": "style. Pure functional languages are great for that\nbecause I would say they have this added feature of you having no choice, an added feature\nof forcing yourself to live by the functional",
    "start": "1054980",
    "end": "1068180"
  },
  {
    "text": "worldview, as it were. I think personally, I fall more in the second\ncamp, but for different reasons.",
    "start": "1068180",
    "end": "1076730"
  },
  {
    "text": "I like having constraints. The same way that if a menu at the restaurant\nhas too many options, then I'm paralyzed and",
    "start": "1076730",
    "end": "1084720"
  },
  {
    "text": "I don't actually know what to order. But if the language has opinions on how to\ndo things, then it's easy for me to follow",
    "start": "1084720",
    "end": "1091090"
  },
  {
    "text": "the rules. It's easy for me to keep things consistent. And I think for me, more importantly, it's\neasy to be consistent with how other developers",
    "start": "1091090",
    "end": "1097650"
  },
  {
    "text": "are doing things. Where in the multi-paradigm language, say\nsomething like Kotlin, where you can also",
    "start": "1097650",
    "end": "1104500"
  },
  {
    "text": "do things in different ways, you might have\nDeveloper A who's really into functional languages, so he only does things one way, and then you\nhave Developer B who's maybe doing things",
    "start": "1104500",
    "end": "1113120"
  },
  {
    "text": "more object-oriented or procedural. And I can see that becoming a bit of a mess\nif you're not disciplined.",
    "start": "1113120",
    "end": "1121860"
  },
  {
    "text": "Definitely. So I personally prefer the opinionated constraint\nlanguage.",
    "start": "1121860",
    "end": "1129230"
  },
  {
    "text": "My day-to-day life, like my weapon of choice\nthese days, is Elixir which I really like. So nice and pragmatic, like it's not one of\nthose ivory tower theoretical functional languages.",
    "start": "1129230",
    "end": "1144400"
  },
  {
    "text": "It's functional but without me needing to\nthink too much about it, which I like.",
    "start": "1144400",
    "end": "1151630"
  },
  {
    "text": "I've heard really great things about Elixir. I haven't worked with it too much myself. But everything that I've learned about it\nand how it works is fascinating.",
    "start": "1151630",
    "end": "1158250"
  },
  {
    "text": "And the larger kind of Erlang world from which\nit springs is just, I think, a really amazing",
    "start": "1158250",
    "end": "1165750"
  },
  {
    "text": "way of thinking about programming. I'm a big fan and I definitely agree.",
    "start": "1165750",
    "end": "1171930"
  },
  {
    "text": "It also depends on what you're doing. As always, the cliché but also true maxim\nof programming is always it depends, right?",
    "start": "1171930",
    "end": "1184770"
  },
  {
    "text": "Especially when you're working on a large\nproject with many different people that might have a lot of different opinions, as you say,\nlike having the language or other kinds of",
    "start": "1184770",
    "end": "1195300"
  },
  {
    "text": "systems of enforcing rules, style, all those\nkinds of things. There it can be really helpful just to cut\ndown on going back and forth on those little",
    "start": "1195300",
    "end": "1205440"
  },
  {
    "text": "questions of preference. But I think also, there are times where if\nyou're working on something where perhaps",
    "start": "1205440",
    "end": "1212610"
  },
  {
    "text": "you're trying to solve different types of\nproblems in the same codebase, being able to move back and forth between different paradigms\nthat fit better or worse and the problem that",
    "start": "1212610",
    "end": "1224030"
  },
  {
    "text": "you're trying to solve within a single codebase,\nwithin a single language so that, you know,",
    "start": "1224030",
    "end": "1229420"
  },
  {
    "text": "other folks on your team don't necessarily\nneed to go out and learn a whole new stack. It can be useful.",
    "start": "1229420",
    "end": "1235690"
  },
  {
    "text": "But again it's a matter of trade-offs. So depending on how big your team is, depending\non how complex the program is, I think the",
    "start": "1235690",
    "end": "1244580"
  },
  {
    "text": "choices are always going to depend. But I totally hear you. And I totally agree that especially when you're\nworking with a lot of different people, having",
    "start": "1244580",
    "end": "1253059"
  },
  {
    "text": "really enforced opinions that the language\nwill make sure everyone has to follow can",
    "start": "1253060",
    "end": "1259330"
  },
  {
    "text": "be extremely useful. Yeah. So what do you think are some of the benefits\nof programming in a functional way?",
    "start": "1259330",
    "end": "1269279"
  },
  {
    "start": "1262000",
    "end": "1518000"
  },
  {
    "text": "So for me the main thing is predictability.",
    "start": "1269280",
    "end": "1276000"
  },
  {
    "text": "It is so hard, in a stateful imperative program,\nto know exactly what the world is gonna look",
    "start": "1276000",
    "end": "1284190"
  },
  {
    "text": "like when you run this code. You can have your tests, you can say, \"All\nright, if the world looks like this, and this",
    "start": "1284190",
    "end": "1292020"
  },
  {
    "text": "and this then does this run correctly?\" You can think about all of those edge cases\nas you're programming, you can think about",
    "start": "1292020",
    "end": "1299570"
  },
  {
    "text": "what if that thing is undefined, or what if\nthis thing is a different size than I was",
    "start": "1299570",
    "end": "1305149"
  },
  {
    "text": "expecting it to be? But you have to do all of that work to think\nabout all of those ways that the world can",
    "start": "1305150",
    "end": "1310440"
  },
  {
    "text": "be and you're never gonna do it perfectly. You're never going to think about everything. And your test suite is never gonna capture\nall of the different configurations the world",
    "start": "1310440",
    "end": "1319980"
  },
  {
    "text": "can be in. So if your program is stateful, and depends\non that, then you're gonna have bugs.",
    "start": "1319980",
    "end": "1328490"
  },
  {
    "text": "You're not gonna be able to predict what your\nprogram is going to do in a certain given situation.",
    "start": "1328490",
    "end": "1334330"
  },
  {
    "text": "In functional programming every function is\nkind of simple, in the sense that it takes",
    "start": "1334330",
    "end": "1343269"
  },
  {
    "text": "input and it gives you an output. And if you give it the same input, it's always\ngonna give you the same output.",
    "start": "1343270",
    "end": "1348700"
  },
  {
    "text": "It becomes very predictable, it becomes very\neasy to know if these are my inputs, this",
    "start": "1348700",
    "end": "1355350"
  },
  {
    "text": "is what my output is gonna be. So that becomes easy to test, it becomes easy\nto enforce in some functional languages that",
    "start": "1355350",
    "end": "1362810"
  },
  {
    "text": "enforce things like strict typing. You can already know that it's not gonna be\nundefined.",
    "start": "1362810",
    "end": "1369669"
  },
  {
    "text": "That's not ever gonna happen in this case\nbecause my type system has made sure of that.",
    "start": "1369670",
    "end": "1375210"
  },
  {
    "text": "You can essentially narrow down to what you\nneed to think about to this one function.",
    "start": "1375210",
    "end": "1380890"
  },
  {
    "text": "You can test this one function, you can think\nabout the performance of this one function.",
    "start": "1380890",
    "end": "1387040"
  },
  {
    "text": "And you can know that no matter what else\nis going on in the world, these are the inputs it's gonna get, this is the output it's gonna\ngive.",
    "start": "1387040",
    "end": "1393920"
  },
  {
    "text": "And that's predictable, that's not gonna change\nbecause it doesn't depend on any state. The consequences for debugging, testing, maintaining,\nchanging and refactoring code are just amazing",
    "start": "1393920",
    "end": "1405790"
  },
  {
    "text": "there because if I know what the outputs are\nsupposed to be, for any given input, then",
    "start": "1405790",
    "end": "1411500"
  },
  {
    "text": "I can take this one little modular function\nout. I can replace it with another one that's more\nperformant, or easier to read, or whatever",
    "start": "1411500",
    "end": "1421050"
  },
  {
    "text": "so much more easily. And I can predict the types of bugs I'm going\nto encounter. I can make sure I'm handling all of my edge\ncases, in many cases especially in pure functional",
    "start": "1421050",
    "end": "1430409"
  },
  {
    "text": "languages. Languages will even complain to you and say,\n\"Hey, you didn't handle this one case in your",
    "start": "1430410",
    "end": "1435440"
  },
  {
    "text": "function, you got to handle it.\" You just get so much more work done for you,\nbasically, by the language or by the environment",
    "start": "1435440",
    "end": "1444360"
  },
  {
    "text": "than when you're trying to work in a stateful\nway, and when you're trying to imagine how",
    "start": "1444360",
    "end": "1449500"
  },
  {
    "text": "everything is going to be if that makes sense. It fits very well with my own observations.",
    "start": "1449500",
    "end": "1455940"
  },
  {
    "text": "I made the switch from object-oriented to\nfunctional probably four or five years ago",
    "start": "1455940",
    "end": "1461549"
  },
  {
    "text": "now. Trying to reflect back on what has changed\nin my brain in that time, I think the biggest",
    "start": "1461550",
    "end": "1468810"
  },
  {
    "text": "thing is that I have to fit less stuff in\nmy mind at a time.",
    "start": "1468810",
    "end": "1475110"
  },
  {
    "text": "You mentioned the main thing you have to care\nabout in a functional language, or when you're doing functional programming is just what\nare my inputs, and what am I supposed to return.",
    "start": "1475110",
    "end": "1483990"
  },
  {
    "text": "I don't have to think about this other thing\nor sometimes another thread can go in and",
    "start": "1483990",
    "end": "1489580"
  },
  {
    "text": "change that underneath me. That combination of having stuff be immutable\nand only caring about your inputs, I can't",
    "start": "1489580",
    "end": "1502230"
  },
  {
    "text": "imagine going back. I think just how much I can focus on the function\nat hand, like you mentioned, there is such",
    "start": "1502230",
    "end": "1511750"
  },
  {
    "text": "a difference in how I think about programming\nnow that I would find it hard to go back.",
    "start": "1511750",
    "end": "1518800"
  },
  {
    "start": "1518000",
    "end": "1705000"
  },
  {
    "text": "I think it's really interesting the way it\nchanges how you approach the act of programming.",
    "start": "1518800",
    "end": "1525100"
  },
  {
    "text": "I totally agree in terms of having to keep\nless stuff in your head.",
    "start": "1525100",
    "end": "1530340"
  },
  {
    "text": "That's the amazing thing about it. And then there are other consequences as well,\nfor example, when you have these programs",
    "start": "1530340",
    "end": "1537640"
  },
  {
    "text": "that are just framing things in terms of inputs\nand outputs. And don't really rely on a lot of states,\ndon't rely on a lot of other parts of the",
    "start": "1537640",
    "end": "1544440"
  },
  {
    "text": "program, then things get a lot easier to break\napart and scale up.",
    "start": "1544440",
    "end": "1551440"
  },
  {
    "text": "You can put the same function on a bunch of\ndifferent servers. And it's all running just as fine as opposed\nto trying to take this big, massive, clunky",
    "start": "1551440",
    "end": "1560270"
  },
  {
    "text": "system that depends on a bunch of other services\nrunning, and try and get it to scale up.",
    "start": "1560270",
    "end": "1565710"
  },
  {
    "text": "Or you can work on those performance issues,\nlike, we said. You can narrow it down to say, \"Okay, I have\nthese inputs and these outputs, but I could",
    "start": "1565710",
    "end": "1574690"
  },
  {
    "text": "be doing it a little faster. Let me rewrite this function.\" So I think, there's a lot of other kinds of\npractical consequences.",
    "start": "1574690",
    "end": "1580340"
  },
  {
    "text": "But I totally agree that in terms of the day-to-day\nlife of a programmer, it just makes your brain",
    "start": "1580340",
    "end": "1588350"
  },
  {
    "text": "hurt less once you go through the initial\npain of the change in thinking that you need",
    "start": "1588350",
    "end": "1595140"
  },
  {
    "text": "to. I'm personally a big fan of working in as\nmany different paradigms as possible, essentially.",
    "start": "1595140",
    "end": "1602550"
  },
  {
    "text": "Or at least I like to learn a little bit about\ndifferent paradigms, even if I don't work in them a ton.",
    "start": "1602550",
    "end": "1608770"
  },
  {
    "text": "Personally, I think it's really a fun exercise\nand a fun way to stretch your brain and give",
    "start": "1608770",
    "end": "1614630"
  },
  {
    "text": "your neurons a bit of a workout to think about\ndifferent ways of conceiving of programming",
    "start": "1614630",
    "end": "1620090"
  },
  {
    "text": "and of the different types of things you'd\nneed to pay attention to when programming.",
    "start": "1620090",
    "end": "1625450"
  },
  {
    "text": "Learning a little bit about logic programming,\nlet's say, which is another declarative paradigm. Or learning a little bit about how, for example,\nErlang and the BEAM work.",
    "start": "1625450",
    "end": "1635400"
  },
  {
    "text": "And the kind of more actor-based or sort of\nentity-based kind of programming.",
    "start": "1635400",
    "end": "1641090"
  },
  {
    "text": "I think learning about those different types\nof thinking about programming can also be really beneficial, even if you don't work\nin them every day.",
    "start": "1641090",
    "end": "1647990"
  },
  {
    "text": "Then when you go back to your kind of home\nbase language, or paradigm, it can help you",
    "start": "1647990",
    "end": "1654679"
  },
  {
    "text": "really appreciate why it is that you're writing\nthe code in this way, and what benefits you",
    "start": "1654680",
    "end": "1660870"
  },
  {
    "text": "get. And also keep in mind the struggles that you\nhave, when you run up against those points",
    "start": "1660870",
    "end": "1667450"
  },
  {
    "text": "where you really feel like you're bashing\nyour head against the wall, and not getting a lot of traction. It can be useful to have other spaces to go\nand kind of zoom out and say, \"Hey, wait a",
    "start": "1667450",
    "end": "1678770"
  },
  {
    "text": "minute, maybe I'm formulating this problem\nthe wrong way. Maybe in order to do this well, in this paradigm,\nI need to formulate it in a way that works",
    "start": "1678770",
    "end": "1686269"
  },
  {
    "text": "best for this paradigm.\" So I think it's great to switch paradigms\nfrom time to time, whether it's just on a",
    "start": "1686270",
    "end": "1693629"
  },
  {
    "text": "hobby project, or going to a conference talk\nand listening to something new, listening",
    "start": "1693630",
    "end": "1698880"
  },
  {
    "text": "about a different way of doing it. I think it's a really good exercise and makes\nus all better programmers at the end of the",
    "start": "1698880",
    "end": "1705660"
  },
  {
    "start": "1705000",
    "end": "2010000"
  },
  {
    "text": "day. I completely agree. I think it's also one of the things that I\nsee more and more of, cross-pollination between",
    "start": "1705660",
    "end": "1713350"
  },
  {
    "text": "different languages and different communities. One of the things that I was wanting to ask\nyou is also, I see more and more languages",
    "start": "1713350",
    "end": "1721940"
  },
  {
    "text": "adopting functional features. And more and more languages these days, I\nfeel are treating functional programming as",
    "start": "1721940",
    "end": "1728510"
  },
  {
    "text": "a first-class citizen, at least the ones that\nI've been paying attention to.",
    "start": "1728510",
    "end": "1733680"
  },
  {
    "text": "They all seem inspired by functional programming\nin one way or another.",
    "start": "1733680",
    "end": "1738710"
  },
  {
    "text": "But functional programming has been around\nfor a long, long time, so why do you think that that is happening now?",
    "start": "1738710",
    "end": "1743929"
  },
  {
    "text": "Or maybe it's been happening before and I\njust didn't notice? Since I came from a different background,\nI haven't been in the computer science world",
    "start": "1743930",
    "end": "1754899"
  },
  {
    "text": "all that long. But my understanding is that functional programming\nhas been around since the '30s.",
    "start": "1754900",
    "end": "1763250"
  },
  {
    "text": "It's been around since Alonzo Church, the\nLambda calculus, all of that stuff. But I think it was always really appreciated\nin the academic world for its beautiful mathematical",
    "start": "1763250",
    "end": "1773990"
  },
  {
    "text": "properties and consistency. And so it was always kind of embraced academically.",
    "start": "1773990",
    "end": "1781480"
  },
  {
    "text": "But when it came to working practically with\ncomputers and humans and the things humans",
    "start": "1781480",
    "end": "1789299"
  },
  {
    "text": "love to do with computers, you have a problem,\nright? Because the world has states like humans have\nideas that change over time.",
    "start": "1789300",
    "end": "1799190"
  },
  {
    "text": "Humans have bank accounts that they want to\nchange over time. Humans have things that they want to do in\nthe world.",
    "start": "1799190",
    "end": "1806500"
  },
  {
    "text": "And all of those end up being side effects. You can't do anything in a functional language\nbesides return an output.",
    "start": "1806500",
    "end": "1814210"
  },
  {
    "text": "So how do you deal with practical, real-world\nside effects? I think the academic languages had been developed\nto not really have to worry about that problem,",
    "start": "1814210",
    "end": "1824460"
  },
  {
    "text": "and to just show that the kind of mathematical\nand logical properties were there, and investigate",
    "start": "1824460",
    "end": "1831000"
  },
  {
    "text": "those and kind of advance the thinking there. they, I think, took a few decades, several\ndecades, to figure out, \"Okay, is there a",
    "start": "1831000",
    "end": "1840279"
  },
  {
    "text": "way we can then hook this up to the real world,\ntake the side effect-y things that we need",
    "start": "1840280",
    "end": "1845440"
  },
  {
    "text": "to do, wrap them in something functional,\nwhich then we can isolate the side effects",
    "start": "1845440",
    "end": "1851539"
  },
  {
    "text": "on sort of the outermost surface of the program,\nand keep the inner workings of the program all purely functional?\"",
    "start": "1851540",
    "end": "1858700"
  },
  {
    "text": "I think it wasn't until the last maybe 10\nor 20 years that really practical functional",
    "start": "1858700",
    "end": "1864980"
  },
  {
    "text": "programming became something that was doable\nin a mainstream way, that was performant enough",
    "start": "1864980",
    "end": "1874630"
  },
  {
    "text": "to actually write programs in, that had the\ncapabilities that real-world programmers needed.",
    "start": "1874630",
    "end": "1880980"
  },
  {
    "text": "And then, of course, you have a transition\nperiod of it starting to trickle out from",
    "start": "1880980",
    "end": "1887330"
  },
  {
    "text": "the academic world, and make its way gradually\ninto kind of everyday programming as it were.",
    "start": "1887330",
    "end": "1895830"
  },
  {
    "text": "And then other languages, as you say, start\nto notice, \"Hmm, this functional thing, it really does have a lot of benefits.",
    "start": "1895830",
    "end": "1902210"
  },
  {
    "text": "So maybe let's start making it a little easier\nto do a little bit of functional programming",
    "start": "1902210",
    "end": "1908270"
  },
  {
    "text": "in our environment that we're working in.\" Whether it be an object-oriented one, or just\nstrictly imperative or procedural one.",
    "start": "1908270",
    "end": "1917320"
  },
  {
    "text": "Being able to make functions first class,\nlet's make it so that you can return a function",
    "start": "1917320",
    "end": "1923679"
  },
  {
    "text": "from another function. And then you can start to build all kinds\nof stuff with these higher-order functions.",
    "start": "1923680",
    "end": "1929600"
  },
  {
    "text": "Or let's create anonymous functions, let's\nadd lambdas. And make sure that people don't have to define\nthis whole big, complicated kind of function",
    "start": "1929600",
    "end": "1938330"
  },
  {
    "text": "object or what have you. We do that for them, we just let them write\na little, tiny one-liner function to do the",
    "start": "1938330",
    "end": "1944480"
  },
  {
    "text": "things that they wanna do. Let's add utility methods like mapping and\nfiltering and reducing and stuff like that.",
    "start": "1944480",
    "end": "1950310"
  },
  {
    "text": "I think that that process of slow trickle\nout from the theoretical world where functional",
    "start": "1950310",
    "end": "1956480"
  },
  {
    "text": "programming is this beautiful, elegant system\nthat has all these amazing mathematical properties",
    "start": "1956480",
    "end": "1963760"
  },
  {
    "text": "to become something that you can actually\ndo work in, that just took us a while as a",
    "start": "1963760",
    "end": "1969710"
  },
  {
    "text": "community. And it's still an ongoing process. I think we're still in that trickling out\nphase.",
    "start": "1969710",
    "end": "1975940"
  },
  {
    "text": "I'll be curious to see in 10 years and 20\nyears how much has functional programming",
    "start": "1975940",
    "end": "1982780"
  },
  {
    "text": "taken over? How much have people bought into the benefits,\nthe ease on your mental strain, as it were,",
    "start": "1982781",
    "end": "1994730"
  },
  {
    "text": "and the security and performance and kind\nof maintainability and predictability guarantees",
    "start": "1994730",
    "end": "2002750"
  },
  {
    "text": "that you get from it? I would not be surprised if we see the needle\nmove even more in the functional direction.",
    "start": "2002750",
    "end": "2010290"
  },
  {
    "start": "2010000",
    "end": "2748000"
  },
  {
    "text": "That I agree with you and I think that's where\nwe're headed. Or that's where I hope we're headed.",
    "start": "2010290",
    "end": "2017580"
  },
  {
    "text": "Because for me, at least personally, before\nI made the transition, so to speak, functional",
    "start": "2017580",
    "end": "2026159"
  },
  {
    "text": "programming was always shrouded in a sense\nof academia and mystery.",
    "start": "2026160",
    "end": "2031890"
  },
  {
    "text": "I had this impression that \"Oh, to do functional\nprogramming, I need a Ph.D. in math. And I need to know what a monad is and what\na functor is.",
    "start": "2031890",
    "end": "2039440"
  },
  {
    "text": "And I need to know what algebraic data types\nare. And it was this ivory tower sort of thing\nthat seems unapproachable.",
    "start": "2039440",
    "end": "2048040"
  },
  {
    "text": "I think that's what I've seen happen with\nthe newer languages. It is that they've just made it more approachable,\nmore friendly and I still don't know what",
    "start": "2048040",
    "end": "2058050"
  },
  {
    "text": "a monad is. I couldn't explain it to you. I still don't know what a functor is, but\nI'm sure under the hood, I'm probably using",
    "start": "2058050",
    "end": "2063759"
  },
  {
    "text": "them. Does that match your observations or what\ndo you think?",
    "start": "2063760",
    "end": "2069898"
  },
  {
    "text": "Totally, and I think that was my impression,\ntoo. When I first learned that functional programming\nwas a thing, it sounded very scary when I",
    "start": "2069899",
    "end": "2076520"
  },
  {
    "text": "started googling it or, you know, looking\nit up on DuckDuckGo, as you will. I was overwhelmed by all of the academic jargon.",
    "start": "2076520",
    "end": "2086578"
  },
  {
    "text": "I had somewhat of an academic background so\nthat even for someone who's been used to looking",
    "start": "2086579",
    "end": "2093010"
  },
  {
    "text": "at white papers all day, and reading formulas\nall day, it's still really dense and not that",
    "start": "2093010",
    "end": "2100849"
  },
  {
    "text": "approachable. Part of that is that there are some mathematically\ncomplex ideas in there.",
    "start": "2100849",
    "end": "2109609"
  },
  {
    "text": "But another part of it that I think we all\nas a community can decide to overcome is a",
    "start": "2109609",
    "end": "2116578"
  },
  {
    "text": "problem that's a bit more generally pervasive\nin computer science and in software development, which is this kind of exclusive attitude that\nfolks have had to certain types of knowledge.",
    "start": "2116579",
    "end": "2132960"
  },
  {
    "text": "This kind of gatekeeping of, “I learned\nthis, and I struggled to learn it, and I felt",
    "start": "2132960",
    "end": "2140499"
  },
  {
    "text": "stupid along the way, and I felt not good\nenough, and I felt insecure.” “Then I finally got to a place where I was\nable to pass the coding interview and get",
    "start": "2140499",
    "end": "2152500"
  },
  {
    "text": "a job at this place, or I was able to write\na Haskell program, or whatever the thing was",
    "start": "2152500",
    "end": "2158049"
  },
  {
    "text": "that I did, and now I feel special. And now I wanna keep you from having that\nsame special feeling because I had to suffer",
    "start": "2158049",
    "end": "2166009"
  },
  {
    "text": "and struggle to get it. So I'm going to make it seem as difficult\nas possible and make you feel as small and",
    "start": "2166010",
    "end": "2174609"
  },
  {
    "text": "as worthless as possible, trying to learn\nthis because that's how I felt when I was",
    "start": "2174609",
    "end": "2180190"
  },
  {
    "text": "learning it. And I am going to keep that going for the\nnext generation, as it were, of programmers.”",
    "start": "2180190",
    "end": "2187240"
  },
  {
    "text": "I think we can do so much better than that,\nyou know. We can think like, \"Yes, okay, as a community,\nwe spent decades, a century basically, grappling",
    "start": "2187240",
    "end": "2198190"
  },
  {
    "text": "with these concepts, wrapping our heads around\nthem, struggling to understand what they meant,",
    "start": "2198190",
    "end": "2203660"
  },
  {
    "text": "and how we could use them for practical programming\npurposes. We struggled as a community, and as individuals\nwe struggled, and we felt stupid, and we had",
    "start": "2203660",
    "end": "2214380"
  },
  {
    "text": "to go through all of this hard work to understand\nthis stuff. But now we understand it and now we can explain\nit to you.",
    "start": "2214380",
    "end": "2222499"
  },
  {
    "text": "And now we can show you that it's actually\nreally simple in terms of the core ideas that",
    "start": "2222499",
    "end": "2228380"
  },
  {
    "text": "you need to be productive in this paradigm. And that anyone can do it, just like anyone\ncan do programming.",
    "start": "2228380",
    "end": "2235020"
  },
  {
    "text": "Period.” I think we have a wider problem that mirrors\nthat same structure with gatekeeping around",
    "start": "2235020",
    "end": "2241440"
  },
  {
    "text": "programming and this idea that you need to\nbe some kind of genius, some kind of a whiz",
    "start": "2241440",
    "end": "2247349"
  },
  {
    "text": "kid that spends 26 hours a day on your computer\nor only in the terminal writing everything",
    "start": "2247349",
    "end": "2255569"
  },
  {
    "text": "in cryptic, three-word phrases.",
    "start": "2255569",
    "end": "2261329"
  },
  {
    "text": "I think that we have the same problem in terms\nof programming, in general, of gatekeeping",
    "start": "2261329",
    "end": "2267269"
  },
  {
    "text": "and trying to keep people out, trying to make\npeople think that you need a Ph.D. to do it, or that, you know, you need to be Bill Gates\nor somebody, you know, sort of sitting at",
    "start": "2267269",
    "end": "2278180"
  },
  {
    "text": "home in the basement in Seattle somewhere,\nwriting code all the time.",
    "start": "2278180",
    "end": "2283568"
  },
  {
    "text": "I think it's a bigger problem we can all solve\nin terms of welcoming new people in and helping",
    "start": "2283569",
    "end": "2290640"
  },
  {
    "text": "people to not have the struggles that we had\nwhen we were trying to wrap our heads around this and trying to help them get to the end\ngoal as quickly as possible and as easily",
    "start": "2290640",
    "end": "2302248"
  },
  {
    "text": "as possible. And help give people the confidence to know\nthat, yes, some of these are complex, this",
    "start": "2302249",
    "end": "2308019"
  },
  {
    "text": "will hurt your brain a little bit, but it's\ndoable. You can do it, you can learn these concepts,\nyou can become a productive programmer, you",
    "start": "2308019",
    "end": "2316390"
  },
  {
    "text": "can get a job in this field. You can belong here in the world of functional\nprogramming, in the world of programming,",
    "start": "2316390",
    "end": "2323030"
  },
  {
    "text": "in general. I think that's something that we can all decide\nto do better.",
    "start": "2323030",
    "end": "2328538"
  },
  {
    "text": "I think we can all benefit from having more\npeople join the field with as many different",
    "start": "2328539",
    "end": "2335309"
  },
  {
    "text": "backgrounds as possible. Absolutely. I don't remember where I heard this, unfortunately,\nbut there was a study done that showed that",
    "start": "2335309",
    "end": "2348619"
  },
  {
    "text": "having a language background, rather than\na mathematical background, was a bigger predictor",
    "start": "2348619",
    "end": "2355109"
  },
  {
    "text": "of programming ability down the line. Understanding language was more important\nthan understanding mathematics.",
    "start": "2355109",
    "end": "2362799"
  },
  {
    "text": "And I think that kind of goes against a lot\nof the conventional thinking around programming",
    "start": "2362799",
    "end": "2368210"
  },
  {
    "text": "for the last many decades. Interesting. I have heard that about music, for example.",
    "start": "2368210",
    "end": "2374829"
  },
  {
    "text": "Having a background in music theory is really\nhelpful for programming. I've known several programmers that came from\nthe music world.",
    "start": "2374830",
    "end": "2383980"
  },
  {
    "text": "I didn't realize when I was studying philosophy,\nand I was studying things like formal logic and systems of grammars and things like that,\nthat that was the core of what I needed to",
    "start": "2383980",
    "end": "2397700"
  },
  {
    "text": "become more proficient with programming, it\nwas sort of the logical side of it. I think there are so many fields where there\nare directly transferable skills.",
    "start": "2397700",
    "end": "2408568"
  },
  {
    "text": "And again the deeper you get into software\ndevelopment, the more it becomes clear that",
    "start": "2408569",
    "end": "2413720"
  },
  {
    "text": "it's about humans and how humans think and\nlearn and communicate with each other.",
    "start": "2413720",
    "end": "2420640"
  },
  {
    "text": "Understanding some of the psychology behind\nthat, understanding things like language acquisition,",
    "start": "2420640",
    "end": "2427818"
  },
  {
    "text": "ways that people relate to each other, and\nthe types of attention issues that people",
    "start": "2427819",
    "end": "2434509"
  },
  {
    "text": "have and the types of memory issues that people\nhave is very important. I think there are so many different perspectives\nthat we can take on doing software development",
    "start": "2434509",
    "end": "2443730"
  },
  {
    "text": "that agree that the more people we have doing\nthis stuff, the better the systems will get.",
    "start": "2443730",
    "end": "2450109"
  },
  {
    "text": "And let's be honest, we all have a lot of\ncode that could be way better than it is.",
    "start": "2450109",
    "end": "2455940"
  },
  {
    "text": "We have systems that are running the financial\nservices of the world or the airplanes of",
    "start": "2455940",
    "end": "2463068"
  },
  {
    "text": "the world, we have so much code in our world\nthat can be so much better.",
    "start": "2463069",
    "end": "2468339"
  },
  {
    "text": "And we have all this code that hasn't been\nwritten yet to serve the problems and the needs of so much bigger and wider kinds of\ngroups of humanity, of the population, that",
    "start": "2468339",
    "end": "2479490"
  },
  {
    "text": "we need all the programmers we can get from\nas many different places and backgrounds as possible. So totally agree, more programmers, the more,\nthe better.",
    "start": "2479490",
    "end": "2489808"
  },
  {
    "text": "Yes, I would like to agree with that. But also just to  ack for a second, when\nyou mentioned functional programming becoming",
    "start": "2489809",
    "end": "2500099"
  },
  {
    "text": "more approachable over time. I think that's time to toot the horn of my\nlanguage of choice a little bit.",
    "start": "2500100",
    "end": "2507019"
  },
  {
    "text": "I think that one of Elixir's greatest strengths\nwas that they managed to make Erlang approachable",
    "start": "2507019",
    "end": "2512430"
  },
  {
    "text": "because the things that make Elixir great\nand where the strength is coming from, are",
    "start": "2512430",
    "end": "2521119"
  },
  {
    "text": "the Erlang parts.They're not new things. They just made it more approachable. They added some syntactic sugar and they made\nsure that the error messages are helpful.",
    "start": "2521119",
    "end": "2529430"
  },
  {
    "text": "They made the onboarding experience for new\nusers much nicer and friendlier. And I think that's one of the biggest reasons\nwhy Elixir has become successful.",
    "start": "2529430",
    "end": "2540730"
  },
  {
    "text": "It's still a small language, a bit of a niche\nlanguage. It doesn't have the user base that some of\nthe other languages have but I think that",
    "start": "2540730",
    "end": "2548308"
  },
  {
    "text": "was one of their main victories: they made\nErlang approachable. Yes, I've definitely heard that as well.",
    "start": "2548309",
    "end": "2556009"
  },
  {
    "text": "And I think it's amazing to see folks taking\nreally good ideas, and then making them even",
    "start": "2556009",
    "end": "2562420"
  },
  {
    "text": "easier for people to access and use. That is awesome and so great to see.",
    "start": "2562420",
    "end": "2567760"
  },
  {
    "text": "I think some other languages have done this\nreally well for example, Elm comes to mind.",
    "start": "2567760",
    "end": "2573359"
  },
  {
    "text": "A purely functional front-end language that\nhas just such an amazing kind of dialog with",
    "start": "2573359",
    "end": "2580390"
  },
  {
    "text": "the compiler, the error messages that it gives\nyou, it's almost like you're having a conversation with it. And it's like, \"Hey, I think you forgot this\nthing, or this isn't working.",
    "start": "2580390",
    "end": "2588029"
  },
  {
    "text": "And here's why. And let me point you to something you can\nread about it.\" What I've heard of a lot of beginners coming\nto languages like Elm, like Elixir is this",
    "start": "2588029",
    "end": "2603260"
  },
  {
    "text": "feeling that you can think of the process\nof writing code as something where you're",
    "start": "2603260",
    "end": "2610420"
  },
  {
    "text": "fighting with the computer, you're fighting\nwith the compiler to run and to put your code",
    "start": "2610420",
    "end": "2615869"
  },
  {
    "text": "together, or you can think of it as something\ncollaborative, where it's like me, and this language, we are working together to try and\nsolve a problem.",
    "start": "2615869",
    "end": "2623130"
  },
  {
    "text": "And I think the languages that are making\nthings approachable, are really doubling down on that latter approach of really trying to\nthink of the language as like a pal for the",
    "start": "2623130",
    "end": "2633089"
  },
  {
    "text": "programmer, and not something that the programmer\nhas to struggle against and suffer to make work and understand.",
    "start": "2633089",
    "end": "2640720"
  },
  {
    "text": "I think there are some really great examples\nout there of this happening. And a lot of languages are also in the process\nof making that even better.",
    "start": "2640720",
    "end": "2649930"
  },
  {
    "text": "I think a lot of the stuff that's been added\nto, let's say, JavaScript, in the last five",
    "start": "2649930",
    "end": "2655950"
  },
  {
    "text": "years, has made approaching that language\na lot easier.",
    "start": "2655950",
    "end": "2661650"
  },
  {
    "text": "And I think functional programming has something\nto do with it because sometimes functional programming is a much simpler, easier way\nto get started.",
    "start": "2661650",
    "end": "2668630"
  },
  {
    "text": "That's why languages like Scheme were created\nas a teaching language. Lisp-y teaching language, that can help people\njust learn the fundamentals of programming",
    "start": "2668630",
    "end": "2678210"
  },
  {
    "text": "happens to be in functional programming, it's\ngreat. There are fewer things, concepts to learn\nin a sense because you really just need functions.",
    "start": "2678210",
    "end": "2687960"
  },
  {
    "text": "And that gets a little bit more complex, of\ncourse, but you can start small and build",
    "start": "2687960",
    "end": "2693900"
  },
  {
    "text": "your way up. And so languages like Clojure, for example,\nis a really great language.",
    "start": "2693900",
    "end": "2699798"
  },
  {
    "text": "I participated several years back in ClojureBridge,\nwhich is this amazing initiative to teach",
    "start": "2699799",
    "end": "2706140"
  },
  {
    "text": "women and non-binary folks how to code for\nthe first time in Clojure. In Clojure there's not a lot of syntax to\nlearn, it's all parentheses.",
    "start": "2706140",
    "end": "2715119"
  },
  {
    "text": "So that's cool. I think functional programming and functional\nlanguages can make not just functional programming",
    "start": "2715119",
    "end": "2723299"
  },
  {
    "text": "easier for people to understand and work with,\nbut programming, in general. It's really awesome to see all of these languages\nthat are intended to be a kind of stepping",
    "start": "2723299",
    "end": "2732160"
  },
  {
    "text": "stone into the vast wide world of all of the\ncomputing that take a functional approach",
    "start": "2732160",
    "end": "2737890"
  },
  {
    "text": "because it can be really helpful for beginners,\nand for folks who are just trying to wrap their heads around a few things that make\nthem productive.",
    "start": "2737890",
    "end": "2745050"
  },
  {
    "text": "And I think functional programming is great\nfor that.",
    "start": "2745050",
    "end": "2752940"
  },
  {
    "start": "2748000",
    "end": "3176000"
  },
  {
    "text": "My gut feeling is that if you don't have any\npreconceived notions of what programming is",
    "start": "2752940",
    "end": "2758220"
  },
  {
    "text": "like, then I imagine approaching a functional\nlanguage being easier than some of the alternatives.",
    "start": "2758220",
    "end": "2763890"
  },
  {
    "text": "And the only reason why it took me a while\nto get started was I think that I had some",
    "start": "2763890",
    "end": "2769431"
  },
  {
    "text": "stuff I had to unlearn. I had some habits I had to change and some\nneural pathways had to be rewired in my brain.",
    "start": "2769431",
    "end": "2777859"
  },
  {
    "text": "But coming in blind, I think can really be\neasier. It brings me to my last question for you.",
    "start": "2777859",
    "end": "2784900"
  },
  {
    "text": "Do you have any tips for people who want to\nstart with functional programming?",
    "start": "2784900",
    "end": "2790730"
  },
  {
    "text": "The main thing with functional programming\nis to not think about the fancy jargon, and",
    "start": "2790730",
    "end": "2802660"
  },
  {
    "text": "all of the monads and functors, and things\nlike that, and not the hardcore impression",
    "start": "2802660",
    "end": "2808518"
  },
  {
    "text": "that people have of some of these languages,\nlike Haskell and whatnot, but to start thinking",
    "start": "2808519",
    "end": "2815809"
  },
  {
    "text": "about what your program is trying to do in\nterms of data transformation.",
    "start": "2815809",
    "end": "2821040"
  },
  {
    "text": "For me, that was the hardest, and also most\ncrucial step, I think.",
    "start": "2821040",
    "end": "2827240"
  },
  {
    "text": "To wrap my head around functional programming\nwas not so much memorizing syntax or memorizing",
    "start": "2827240",
    "end": "2834289"
  },
  {
    "text": "what a pure function is. But really starting to think about programs\nin terms of data coming in, and data going",
    "start": "2834289",
    "end": "2844440"
  },
  {
    "text": "out.  And so that's an exercise that we can do without\nsitting in front of a computer.",
    "start": "2844440",
    "end": "2850259"
  },
  {
    "text": "We don't have to be looking at our code to\ndo that. I think this is something that we can work\non when you're trying to reforge those neural",
    "start": "2850259",
    "end": "2858960"
  },
  {
    "text": "pathways or change your way of thinking about\nit. It’s thinking about, “I'm trying to build\nthis app.",
    "start": "2858960",
    "end": "2868970"
  },
  {
    "text": "I want it to do X, Y, and Z. How can I stop thinking about that in terms\nof when the world looks this way, and someone",
    "start": "2868970",
    "end": "2877529"
  },
  {
    "text": "does this, this happens? How can I think about it in terms of, here's\nsome input that's coming in, that's all of",
    "start": "2877529",
    "end": "2884338"
  },
  {
    "text": "the crucial data that I need to do some calculation. And here's the output that I'm going to return.”",
    "start": "2884339",
    "end": "2891990"
  },
  {
    "text": "More so than trying to unlock the mystery\nof what a monad is, I think it's more important",
    "start": "2891990",
    "end": "2898500"
  },
  {
    "text": "to really think about how you're conceiving\nthe problem that you're trying to solve.",
    "start": "2898500",
    "end": "2904470"
  },
  {
    "text": "If you can teach yourself to think about it\nin terms of data coming in, and data going",
    "start": "2904470",
    "end": "2909779"
  },
  {
    "text": "out. And how you can link up a lot of those little\n“data comes into this one and goes out of",
    "start": "2909779",
    "end": "2915130"
  },
  {
    "text": "this one and into this one and out of that\none”. How you can link those data transformation\nproblems up to solve your use case of what",
    "start": "2915130",
    "end": "2924880"
  },
  {
    "text": "you're trying to do. For me, that was sort of something that I\nprobably should have practiced more instead",
    "start": "2924880",
    "end": "2931069"
  },
  {
    "text": "of jumping right into trying to learn about\na bunch of language features and things like that.",
    "start": "2931069",
    "end": "2936290"
  },
  {
    "text": "I think that was the harder part. My main tip for anyone learning anything is\nto find people who are doing it too, to find",
    "start": "2936290",
    "end": "2946109"
  },
  {
    "text": "your community. And to find folks who are also struggling\nwith the same things that you're struggling",
    "start": "2946109",
    "end": "2951369"
  },
  {
    "text": "with. Now as we mention it, functional programming\nhas become so popular and so mainstream and",
    "start": "2951369",
    "end": "2958670"
  },
  {
    "text": "has appeared in so many different contexts,\nincluding a lot of beginner programming contexts, that it's relatively easy to find folks who\nare at a similar stage in their learning journey",
    "start": "2958670",
    "end": "2969318"
  },
  {
    "text": "and are working with the same types of technology\nas you. Whether it's a matter of finding meetups,\ngoing to conferences, finding online communities. ",
    "start": "2969319",
    "end": "2978508"
  },
  {
    "text": "For me, it was finding a community called\nthe Recurse Center in New York City which is an amazing programming community of folks\nwho are doing a self-directed learning journey,",
    "start": "2978509",
    "end": "2988999"
  },
  {
    "text": "working on advancing themselves as programmers\nat whatever stage in their learning they are.",
    "start": "2988999",
    "end": "2994849"
  },
  {
    "text": "This is just this amazing community in New\nYork that I would love for folks to go check out and read about.",
    "start": "2994849",
    "end": "3000740"
  },
  {
    "text": "That for me was a community that really unlocked\nso much. It taught me what functional programming is\nand why it's interesting and why it's useful",
    "start": "3000740",
    "end": "3008299"
  },
  {
    "text": "and how to do it. I think the main tip I would give anyone,\nand this is not just if you're trying to learn",
    "start": "3008299",
    "end": "3015170"
  },
  {
    "text": "functional programming, but if you're trying\nto learn programming, object-oriented programming,",
    "start": "3015170",
    "end": "3020900"
  },
  {
    "text": "performance, SRE, whatever it is, find community.",
    "start": "3020900",
    "end": "3026160"
  },
  {
    "text": "Find people, who you can be yourself with,\nwho you can ask questions that you might be",
    "start": "3026160",
    "end": "3032078"
  },
  {
    "text": "nervous to ask, and who can share their learnings\nwith you, and who you can share your learnings",
    "start": "3032079",
    "end": "3038130"
  },
  {
    "text": "with because I think that's also a really\namazing learning tool, being able to help somebody else out once you've gone through\na struggle.",
    "start": "3038130",
    "end": "3046049"
  },
  {
    "text": "Like that moment, right after you've struggled\nand bashed your head against something and finally broken through to understanding.",
    "start": "3046049",
    "end": "3053920"
  },
  {
    "text": "That is the perfect moment to help somebody\nelse out who's one step behind in that process.",
    "start": "3053920",
    "end": "3060180"
  },
  {
    "text": "Yeah, find people, find community, share what\nyou're learning, I think that's the number",
    "start": "3060180",
    "end": "3065298"
  },
  {
    "text": "one thing I would recommend. Thanks for that. I think those are really good tips. I can only agree that the best way of learning\nis to teach.",
    "start": "3065299",
    "end": "3073260"
  },
  {
    "text": "Just saying things out loud sometimes makes\nyou realize some of the things you were just",
    "start": "3073260",
    "end": "3081270"
  },
  {
    "text": "silently assuming. Absolutely.",
    "start": "3081270",
    "end": "3086970"
  },
  {
    "text": "This is why I do what I do, essentially. This is why I love teaching. This is why I love going to conferences and\ngiving conference talks and things like that.",
    "start": "3086970",
    "end": "3095070"
  },
  {
    "text": "For me, it is the best way to solidify my\nown learning.",
    "start": "3095070",
    "end": "3100200"
  },
  {
    "text": "I think it's really great. It goes back to the point of functional programming\nbecoming more accessible.",
    "start": "3100200",
    "end": "3107070"
  },
  {
    "text": "I'm always reminded of Feynman's quote of\n\"You don't understand a topic or a concept",
    "start": "3107070",
    "end": "3114359"
  },
  {
    "text": "well enough unless you can explain it to a\nroom of freshmen, first-year students in a",
    "start": "3114359",
    "end": "3120038"
  },
  {
    "text": "single semester.\" If you can't explain it to a beginner or to\nsomeone who knows nothing about it, then you",
    "start": "3120039",
    "end": "3130069"
  },
  {
    "text": "don't understand it well enough. And you need to go back and work on your own\nunderstanding. I totally live and die by that.",
    "start": "3130069",
    "end": "3135088"
  },
  {
    "text": "I think that's an amazing way of thinking\nabout things. And I think it's something that the functional\nprogramming community could also take to heart.",
    "start": "3135089",
    "end": "3141549"
  },
  {
    "text": "If people are still struggling to understand\nhow to work with these concepts or how they're",
    "start": "3141549",
    "end": "3147670"
  },
  {
    "text": "valuable or what the kind of meaning of various\njargon terms is, that means we can all do",
    "start": "3147670",
    "end": "3154088"
  },
  {
    "text": "a better job of communicating it. I think that's something that we, as a collective\nfrom beginners to career-long experts can",
    "start": "3154089",
    "end": "3163338"
  },
  {
    "text": "all work on individually. How can we make this easier for someone else\nto understand?",
    "start": "3163339",
    "end": "3168979"
  },
  {
    "text": "How can I help save somebody else the mental\nstruggle that I went through trying to wrap",
    "start": "3168979",
    "end": "3174279"
  },
  {
    "text": "my head around this? Well, I hope that this conversation achieves\nthat for somebody out there reading.",
    "start": "3174279",
    "end": "3180798"
  },
  {
    "start": "3176000",
    "end": "3247000"
  },
  {
    "text": "Yes, and thank you so much for the chat. It's amazing to talk, to catch up and just\nto have a little bit of nerd-out time on all",
    "start": "3180799",
    "end": "3190240"
  },
  {
    "text": "of these great topics. So thank you so much for bringing me on. I wanna thank you for taking the time to talk\nwith me.",
    "start": "3190240",
    "end": "3197400"
  },
  {
    "text": "And I hope that I get to see you at a conference\nin person at some time in the not too far,",
    "start": "3197400",
    "end": "3203359"
  },
  {
    "text": "too distant future. Absolutely. Definitely, hoping for that and really looking\nforward to seeing folks in person again and",
    "start": "3203359",
    "end": "3211390"
  },
  {
    "text": "getting to really dig into these exciting\nphilosophical questions of what is programming",
    "start": "3211390",
    "end": "3220160"
  },
  {
    "text": "and how do we do it better, and how do we\nteach it better? It's just amazing. Really hope to continue the conversation in\nperson sometime soon.",
    "start": "3220160",
    "end": "3229059"
  },
  {
    "text": "Me too. Well, thank you very much. Thank you.",
    "start": "3229059",
    "end": "3231940"
  }
]