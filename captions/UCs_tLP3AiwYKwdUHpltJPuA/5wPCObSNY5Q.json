[
  {
    "start": "0",
    "end": "62000"
  },
  {
    "text": "um I'm talking about toek and how DX Mets for us and and my name is cobas I'm",
    "start": "12759",
    "end": "19800"
  },
  {
    "text": "founded veg like 11 years ago and maintained it for a long time and then I",
    "start": "19800",
    "end": "25400"
  },
  {
    "text": "joined verel and worked on next chairs which is like a framework for developing web",
    "start": "25400",
    "end": "30920"
  },
  {
    "text": "applications and since like one year I'm working on toeg which basically means",
    "start": "30920",
    "end": "35960"
  },
  {
    "text": "building a new kind of a successor for web a new version which is better and",
    "start": "35960",
    "end": "41200"
  },
  {
    "text": "today I want to talk about like a few motivation the motivations why I did did",
    "start": "41200",
    "end": "46840"
  },
  {
    "text": "that or why we did that and what what's our approach in this space and what",
    "start": "46840",
    "end": "52280"
  },
  {
    "text": "challenges we accur with JavaScript and rust and yeah and some kind of new ideas",
    "start": "52280",
    "end": "58960"
  },
  {
    "text": "we had in mind and and what the future will be about so we start with the like",
    "start": "58960",
    "end": "64080"
  },
  {
    "start": "62000",
    "end": "527000"
  },
  {
    "text": "motivation about this project so like we we worked Al while I'm working on nextjs we trying to optimize um nextjs to be be",
    "start": "64080",
    "end": "72360"
  },
  {
    "text": "more thex Focus improve the develop experience of it like performance and that stuff and we hit a lot of",
    "start": "72360",
    "end": "77720"
  },
  {
    "text": "challenges with that like one of the main challenge was performance um so basically we we spent like one year",
    "start": "77720",
    "end": "85079"
  },
  {
    "text": "about like optimizing weback with nechs and like eventually we hit some limits where we can't really optimize weback",
    "start": "85079",
    "end": "91840"
  },
  {
    "text": "further and yeah we can't really improve the performance more and especially when",
    "start": "91840",
    "end": "97240"
  },
  {
    "text": "like it it was fine for smaller mid-range applications but especially when grower with larger applications",
    "start": "97240",
    "end": "102960"
  },
  {
    "text": "like HMR gets really slow gets slower and we we our goal was like at least",
    "start": "102960",
    "end": "108680"
  },
  {
    "text": "below one second and yeah we can get yeah it can get get up to like 10 seconds for last application that was",
    "start": "108680",
    "end": "114680"
  },
  {
    "text": "not acceptable for us um yeah reason for that was mostly bookkeeping and kind C",
    "start": "114680",
    "end": "120000"
  },
  {
    "text": "restoring from cash overhead and which kind of grows deep into the architecture of weback so this was a problem and",
    "start": "120000",
    "end": "127960"
  },
  {
    "text": "similar problem occurred with like production builds where like builds get slow when when applications grow like",
    "start": "127960",
    "end": "134680"
  },
  {
    "text": "that's kind of bad and you actually there are some problems with with JavaScript um as language um like",
    "start": "134680",
    "end": "142000"
  },
  {
    "text": "JavaScript singles read so it's like hard to use multi spread use all for your course to actually build stuff and",
    "start": "142000",
    "end": "148680"
  },
  {
    "text": "um yeah the was is not really that well suited for building high performance",
    "start": "148680",
    "end": "153760"
  },
  {
    "text": "applications like is there some implied overhead of fting JavaScript application we can't go really deep into lowlevel",
    "start": "153760",
    "end": "160560"
  },
  {
    "text": "optimizations of a performance yeah we tried to replace some parts of of wec",
    "start": "160560",
    "end": "166879"
  },
  {
    "text": "and next is with this native code like we replace the paa with um swc which is",
    "start": "166879",
    "end": "173080"
  },
  {
    "text": "a r based paa which works well and but only because like the API surface between passing a file file and",
    "start": "173080",
    "end": "180840"
  },
  {
    "text": "transforming a file and getting it to web was only like passing a string back and forth but it that works well but if",
    "start": "180840",
    "end": "187400"
  },
  {
    "text": "it want to replace deeper parts of veg you basally have to sterilize larger",
    "start": "187400",
    "end": "192440"
  },
  {
    "text": "object structures and that the overhead of this sterilization cost was between the languages was too high and we tried",
    "start": "192440",
    "end": "198599"
  },
  {
    "text": "it but it it just was too higher than passing it in in JavaScript and so it was like not really possible to",
    "start": "198599",
    "end": "205000"
  },
  {
    "text": "partially replace um stuff with Native stuff it it was possible for some application for some parts but not for",
    "start": "205000",
    "end": "212080"
  },
  {
    "text": "like the bigger things um another challenge was like in",
    "start": "212080",
    "end": "217560"
  },
  {
    "text": "next there's and we basically don't do like only a client side bundle we we do",
    "start": "217560",
    "end": "223000"
  },
  {
    "text": "client side code we have server side code we have um different kind of server side code we have like middleb code",
    "start": "223000",
    "end": "228799"
  },
  {
    "text": "which runs on edge workers we have um code that runs on AWS lers we have uh",
    "start": "228799",
    "end": "234519"
  },
  {
    "text": "code that's for serers side render we have codes that Rend server compos so different kind of environments we want",
    "start": "234519",
    "end": "239799"
  },
  {
    "text": "one to one codes uh a code in your application and one problem was like we",
    "start": "239799",
    "end": "245159"
  },
  {
    "text": "needed multiple weback compilers we need one compiler for clients on code one for servers that code one for Server actions",
    "start": "245159",
    "end": "251879"
  },
  {
    "text": "like all the different kind of environments needed different compilers because webc was not able to um to",
    "start": "251879",
    "end": "258160"
  },
  {
    "text": "handle this code uh these different environments in one compiler easily and this resulted in that there's",
    "start": "258160",
    "end": "265720"
  },
  {
    "text": "a lot of communication orchestration needed between these compilers like we have to make sure that server compiler",
    "start": "265720",
    "end": "272199"
  },
  {
    "text": "execute before client compiler and then this causes this to re reun and it's a lot of O station work and that has an",
    "start": "272199",
    "end": "279280"
  },
  {
    "text": "overhead and especially is a source of Errors like we can there are some RTE conditions we had where like it's not",
    "start": "279280",
    "end": "286759"
  },
  {
    "text": "correct running in the correct order and everything runs in parallel and whatever um resulted in slow lless and resulted",
    "start": "286759",
    "end": "293000"
  },
  {
    "text": "in errors and it's a source of pain and for internet development it actually slowed down like the development a lot",
    "start": "293000",
    "end": "298960"
  },
  {
    "text": "because you have to take care and test all this kind of weird interactions between different",
    "start": "298960",
    "end": "304639"
  },
  {
    "text": "compilers it also made it different to harder to implement newer patterns where",
    "start": "304639",
    "end": "310080"
  },
  {
    "text": "we want to have even more uh transitions between environments like we added",
    "start": "310080",
    "end": "315240"
  },
  {
    "text": "server actions which is like some kind of FC call from client side code you",
    "start": "315240",
    "end": "320400"
  },
  {
    "text": "have your server component calling into yeah client side code calling into server accents again so you have more",
    "start": "320400",
    "end": "325960"
  },
  {
    "text": "transitions in the graph and that really makes it difficult like to to embrace or",
    "start": "325960",
    "end": "331120"
  },
  {
    "text": "innovate on these kind of new patterns you want to have in in web",
    "start": "331120",
    "end": "336440"
  },
  {
    "text": "applications basically like basically making it kind of a technical limit where we can innovate or like improve",
    "start": "336440",
    "end": "344080"
  },
  {
    "text": "our kind of application development flow um with with",
    "start": "344080",
    "end": "349360"
  },
  {
    "text": "wec um on wec side there's um larger DX challenge which is like the",
    "start": "349360",
    "end": "355160"
  },
  {
    "text": "configuration it was really overwhelming it's like there a lot of configuration options and users often write it once",
    "start": "355160",
    "end": "362479"
  },
  {
    "text": "don't understand it and like it's like staying there and and yeah there's um",
    "start": "362479",
    "end": "367720"
  },
  {
    "text": "kind of weird source of Errors because you have some configuration added like",
    "start": "367720",
    "end": "372880"
  },
  {
    "text": "10 years ago or or two years ago and then like say like causing errors",
    "start": "372880",
    "end": "378360"
  },
  {
    "text": "because of this configuration eded configuration options copied from the interet to years ago or something um",
    "start": "378360",
    "end": "385080"
  },
  {
    "text": "there also problem with like it has two really low level default so it's like",
    "start": "385080",
    "end": "390720"
  },
  {
    "text": "webc is more lowlevel tool so you have to add like your stuff on top of it um",
    "start": "390720",
    "end": "396440"
  },
  {
    "text": "which CA also that that people have a lot of configuration and that's also kind of problem because you actually",
    "start": "396440",
    "end": "403560"
  },
  {
    "text": "want it like in it was fine like when web was created like 10 years or 5 years",
    "start": "403560",
    "end": "410080"
  },
  {
    "text": "ago but nowadays like the the web EOS system like um maybe settled down a",
    "start": "410080",
    "end": "415520"
  },
  {
    "text": "little bit on what other kind of common tools like typescript or like a Zas or",
    "start": "415520",
    "end": "421440"
  },
  {
    "text": "that kind of tools are more standard device and you you actually expect it to be the working out of the box instead of",
    "start": "421440",
    "end": "427759"
  },
  {
    "text": "like you have to add them on top of something so that's kind yeah yeah nowadays it's my kind of a problem in VB",
    "start": "427759",
    "end": "434759"
  },
  {
    "text": "configuration that you have to add this kind of default um which should be out of the",
    "start": "434759",
    "end": "440360"
  },
  {
    "text": "box um there was also some challenges regarding nextjs so nextjs also had this",
    "start": "440360",
    "end": "446520"
  },
  {
    "text": "kind of special mode for lambdas so basically it in lambdas it it does it",
    "start": "446520",
    "end": "451919"
  },
  {
    "text": "try to you can you can just copy like all your code into a Lambda and execute it but then you get this really big code",
    "start": "451919",
    "end": "458240"
  },
  {
    "text": "base with all of your not modules and that's kind of not what you want to so next has this mode that only like it",
    "start": "458240",
    "end": "464840"
  },
  {
    "text": "follows the graph of your function and only copies like that files of node modules that are needed for the Lambda",
    "start": "464840",
    "end": "472400"
  },
  {
    "text": "um which kind to make sense but I Al it couldn't use weback for that because web is basic a bundler bundles together and",
    "start": "472400",
    "end": "480319"
  },
  {
    "text": "in in these cases you don't Al in many cases not just executed code and can't",
    "start": "480319",
    "end": "486479"
  },
  {
    "text": "be bundled because native code or kind of weird patterns in this kind of things",
    "start": "486479",
    "end": "491800"
  },
  {
    "text": "that basically not aware of being bundled um in contrast to CL that code and in this case we like nexts couldn't",
    "start": "491800",
    "end": "499599"
  },
  {
    "text": "use weeg and basically implemented its own tool had an additional tool which",
    "start": "499599",
    "end": "504960"
  },
  {
    "text": "just follows the graph and copies over the code to the Lambda which is a source",
    "start": "504960",
    "end": "510080"
  },
  {
    "text": "of inconsistency because like um wec bundle code and this kind of nft is",
    "start": "510080",
    "end": "515440"
  },
  {
    "text": "called the tool was um but was resolved and traced",
    "start": "515440",
    "end": "520880"
  },
  {
    "text": "in different ways and that causes inconsistencies which you want to",
    "start": "520880",
    "end": "526360"
  },
  {
    "start": "527000",
    "end": "665000"
  },
  {
    "text": "avoid so all all these changes led to the the like idea of like writing a new",
    "start": "527480",
    "end": "534080"
  },
  {
    "text": "bundler writing a new tool um to take care of like these challenges making a bit better um Improvement of that but",
    "start": "534080",
    "end": "541079"
  },
  {
    "text": "also really huge investment it's like maybe two years uh like what you need",
    "start": "541079",
    "end": "547160"
  },
  {
    "text": "for building such a tool and is it really worth for just a little bit of DX improvements and we think it is is worth",
    "start": "547160",
    "end": "555160"
  },
  {
    "text": "it and we also can make a sure that it's really worth it by like having some kind of additional ideas that make it really",
    "start": "555160",
    "end": "562519"
  },
  {
    "text": "beneficial from writing a new tools like we could enable a few new features like make it easier to to like make better",
    "start": "562519",
    "end": "570160"
  },
  {
    "text": "optimizations make um smarter bundling techniques which which we can use um it",
    "start": "570160",
    "end": "577200"
  },
  {
    "text": "also should enable like internal speed up of the development so we can Implement features faster in next shares",
    "start": "577200",
    "end": "584200"
  },
  {
    "text": "Implement new ideas new workflows in an easier way and the basic idea of that",
    "start": "584200",
    "end": "590839"
  },
  {
    "text": "tool is that we want to make a tool that works for the next 10 years similar to webtech was which was exactly 10 years",
    "start": "590839",
    "end": "597000"
  },
  {
    "text": "old when we started with that and and 10 years is pretty long in web",
    "start": "597000",
    "end": "602160"
  },
  {
    "text": "development so if you take a look what happens like the last 10 years it was like small applications with with like",
    "start": "602160",
    "end": "608560"
  },
  {
    "text": "100 maybe 100 of files of JavaScript which is not really lot stuff and",
    "start": "608560",
    "end": "614440"
  },
  {
    "text": "nowadays we have 10 thousands of modules inpt applications which like even more",
    "start": "614440",
    "end": "620040"
  },
  {
    "text": "if you multiply it by server client code and that kind of stuff so it's really grow and if you like exate that for the",
    "start": "620040",
    "end": "626600"
  },
  {
    "text": "next 10 years we could expect like maybe millions of modules and code a lot of",
    "start": "626600",
    "end": "632200"
  },
  {
    "text": "lights of code in web applications so we we really want to create something that is is working for the next 10 years",
    "start": "632200",
    "end": "638760"
  },
  {
    "text": "maybe not not in the current state but at least it has the potential to be easily adapted to like the growing",
    "start": "638760",
    "end": "644600"
  },
  {
    "text": "number of modules the the requirements of the next 10 years so we want to make a really good new architecture good",
    "start": "644600",
    "end": "650680"
  },
  {
    "text": "architecture that is suited for for that and especially performance VI which was",
    "start": "650680",
    "end": "656079"
  },
  {
    "text": "I I think the main challenge in in adapting web p over the last 10",
    "start": "656079",
    "end": "662040"
  },
  {
    "text": "years so in the end you want we really want to build this accessor to WebEx which like web 10 years to 10 years like",
    "start": "663920",
    "end": "671480"
  },
  {
    "start": "665000",
    "end": "675000"
  },
  {
    "text": "kind of our IDE yeah so that that's why we come came up",
    "start": "671480",
    "end": "676519"
  },
  {
    "start": "675000",
    "end": "924000"
  },
  {
    "text": "with some kind of goals for this kind of project so one one goal was like um we want to make it like general purpose we",
    "start": "676519",
    "end": "683600"
  },
  {
    "text": "we want to start with with next as first customer um but in the end the goal is",
    "start": "683600",
    "end": "689040"
  },
  {
    "text": "to make it general purpose for all Frameworks or for like similar web which is also general purpose and usable for",
    "start": "689040",
    "end": "696120"
  },
  {
    "text": "everyone and in this kind of sense we want to make it as similar as VB really",
    "start": "696120",
    "end": "701560"
  },
  {
    "text": "flexible maybe not that much but at least a lot flexibility in in in in to",
    "start": "701560",
    "end": "707720"
  },
  {
    "text": "back also and we also want to make some",
    "start": "707720",
    "end": "713040"
  },
  {
    "text": "improvements to the graph building um so we want to make it a more Flex in sent of what can be in the graph",
    "start": "713040",
    "end": "719839"
  },
  {
    "text": "this comes back to the patterns where we have client server client server code inter Le and you the graph should be",
    "start": "719839",
    "end": "726920"
  },
  {
    "text": "flexible enough to cover this case so should it shouldn't be needed to make to use different compilers just for",
    "start": "726920",
    "end": "732760"
  },
  {
    "text": "different lments it should be one in one graph and um this also enables a lot of more potential like you can optimize",
    "start": "732760",
    "end": "739720"
  },
  {
    "text": "between this kind of environments like the client is using this export from the server and then you can do tree Shing",
    "start": "739720",
    "end": "746800"
  },
  {
    "text": "between graphs and and that kind of stuff Ena new kind of features and makes also makes development much easier",
    "start": "746800",
    "end": "752600"
  },
  {
    "text": "because you don't need the orchestration between different compilers and it's just one graph that covers all of",
    "start": "752600",
    "end": "760240"
  },
  {
    "text": "it um and the biggest goals were regarding performance because that where",
    "start": "760240",
    "end": "765399"
  },
  {
    "text": "repex suffered the most and our approach or our goal here was like and we want to",
    "start": "765399",
    "end": "771600"
  },
  {
    "text": "focus really down on incremental builds so making incremental builds as fast as possible and and we we B had this like",
    "start": "771600",
    "end": "777760"
  },
  {
    "text": "kind of goal in the mind and that incremental build should be independent of application size so so",
    "start": "777760",
    "end": "783240"
  },
  {
    "text": "basically if you to do like an incremental build maybe from um file change or like or in production and it",
    "start": "783240",
    "end": "790160"
  },
  {
    "text": "should only like um scale regarding to the size of the change like maybe What",
    "start": "790160",
    "end": "795480"
  },
  {
    "text": "affected of the application but not of the whole application so if you have millions of modules and only change one",
    "start": "795480",
    "end": "802079"
  },
  {
    "text": "of these it should be as fast as like changing one module in application of hundreds of modules at least it's a goal",
    "start": "802079",
    "end": "809240"
  },
  {
    "text": "it's like really hard to do um yeah basically with this",
    "start": "809240",
    "end": "814839"
  },
  {
    "text": "incremental idea we also had this idea of being incremental first so like make",
    "start": "814839",
    "end": "820160"
  },
  {
    "text": "like if we have a bundler with where incremental builds are really fast we also want to make sure that like every",
    "start": "820160",
    "end": "825920"
  },
  {
    "text": "build is incremental or at least most of the builds are incremental so that's why we invested in in like te ideas of like",
    "start": "825920",
    "end": "833320"
  },
  {
    "text": "persistent caching so you don't have if you restart your server it should keep the cach and also remote caching and",
    "start": "833320",
    "end": "839040"
  },
  {
    "text": "also the for for production builds um using persistent caching or remote",
    "start": "839040",
    "end": "844120"
  },
  {
    "text": "caching and that kind of stuff it's also um little bit difficult to design it in",
    "start": "844120",
    "end": "850399"
  },
  {
    "text": "a way or a little bit interesting to design it in a way that like every piece of the bundler is really incremental so",
    "start": "850399",
    "end": "857279"
  },
  {
    "text": "every everything even if you like do an optimization figure out the modules and that kind of stuff um like every",
    "start": "857279",
    "end": "864399"
  },
  {
    "text": "operation in the kind of process should be incremental incrementally aware and be incrementally cached and",
    "start": "864399",
    "end": "870880"
  },
  {
    "text": "incrementally computed um another idea or goal was um",
    "start": "870880",
    "end": "877759"
  },
  {
    "text": "to make it also Lazy by default in the case where you don't have a cach maybe you're starting your def server for the",
    "start": "877759",
    "end": "883920"
  },
  {
    "text": "first time um at all and then we should also be lazy so",
    "start": "883920",
    "end": "889880"
  },
  {
    "text": "if you only request like one page or one Javascript file or one bundle then we",
    "start": "889880",
    "end": "895000"
  },
  {
    "text": "only want to compute that that kind of file or this kind of page and don't do anything else in the application so",
    "start": "895000",
    "end": "901279"
  },
  {
    "text": "basically Lazy by default and everything should be lazy and we only really build what we actually",
    "start": "901279",
    "end": "907279"
  },
  {
    "text": "need um yeah one obvious goal is is also use multi sing like if you uh like yeah",
    "start": "907279",
    "end": "914720"
  },
  {
    "text": "JavaScript was single that was a problem and nowadays like every computer has like tons of CPUs and we want to really",
    "start": "914720",
    "end": "921440"
  },
  {
    "text": "leverage all of this power so that where Story begins we",
    "start": "921440",
    "end": "926959"
  },
  {
    "start": "924000",
    "end": "1025000"
  },
  {
    "text": "started with um I kind of prototype of this kind of of a kind of new architecture which is basically",
    "start": "926959",
    "end": "933519"
  },
  {
    "text": "incremental first design and it was really working really well it was really super incrementally fast and we was",
    "start": "933519",
    "end": "940720"
  },
  {
    "text": "really surprised that it's working that well and from them that prototype of um",
    "start": "940720",
    "end": "945759"
  },
  {
    "text": "we basically split split it off like a new team from the next sh team and like",
    "start": "945759",
    "end": "951600"
  },
  {
    "text": "um to build like a new bundler tool Peg and we build it in three layers which",
    "start": "951600",
    "end": "958360"
  },
  {
    "text": "you see here and so one one layer was like we we build everything on top of",
    "start": "958360",
    "end": "963519"
  },
  {
    "text": "rust mainly because s swc is built in Rust and you want to really integrate",
    "start": "963519",
    "end": "969000"
  },
  {
    "text": "well with it and without having Ser realization cost between languages but also because rust is a great language to",
    "start": "969000",
    "end": "975279"
  },
  {
    "text": "use multiple CPUs and it's also really type sa safe and um good to develop a",
    "start": "975279",
    "end": "981560"
  },
  {
    "text": "larger application and performance um is also really great in in R and easy to",
    "start": "981560",
    "end": "987199"
  },
  {
    "text": "write performance code and on top of rust we built this turbo called engine called turbo engine which is like the",
    "start": "987199",
    "end": "992800"
  },
  {
    "text": "incremental computation engine which I tell more about later it's basically",
    "start": "992800",
    "end": "998920"
  },
  {
    "text": "incremental computation engine which takes care of all this incremental building stuff and on top of this engine",
    "start": "998920",
    "end": "1005880"
  },
  {
    "text": "we built turbopack which is like the funder itself a general purp funder and",
    "start": "1005880",
    "end": "1011720"
  },
  {
    "text": "on top of turbopack we build like a next CH or next CH integration for toek which",
    "start": "1011720",
    "end": "1018720"
  },
  {
    "text": "is then yeah basically using top to instead of yeah so our approach um regarding the",
    "start": "1018720",
    "end": "1028280"
  },
  {
    "start": "1025000",
    "end": "1793000"
  },
  {
    "text": "goals um for like a general purpose bundler was this kind of splitting between layers like we also split like",
    "start": "1028280",
    "end": "1035480"
  },
  {
    "text": "toop code into a different repository than the next code to make it really separated and force us to make toek",
    "start": "1035480",
    "end": "1043558"
  },
  {
    "text": "general purpose and not trying to avoid leaking next specific",
    "start": "1043559",
    "end": "1049480"
  },
  {
    "text": "into toeg to make it at least eventually general purpose and public and",
    "start": "1049480",
    "end": "1056200"
  },
  {
    "text": "reusable um this also leads to like us like it forces also us to make it kind",
    "start": "1056200",
    "end": "1061880"
  },
  {
    "text": "of flu in system for because next need to use the plin system to integrate with or bring next specific stuff into",
    "start": "1061880",
    "end": "1069320"
  },
  {
    "text": "toek and our goal for that and also for like a general purpose and flexible tool",
    "start": "1069320",
    "end": "1075240"
  },
  {
    "text": "was to make a plugin system that is split into two parts like you can eventually you can should be able to",
    "start": "1075240",
    "end": "1081640"
  },
  {
    "text": "write plugins in rust or in JavaScript and rust to make it you make it able to",
    "start": "1081640",
    "end": "1087200"
  },
  {
    "text": "like write high performance code if you really care or it's if it's necessary for your plugin which probably rarely is",
    "start": "1087200",
    "end": "1093919"
  },
  {
    "text": "but if it's rary you should be able to write a r plugin which is in really performant um integrated into to and for",
    "start": "1093919",
    "end": "1101480"
  },
  {
    "text": "the common case I think you should be able to write ra which is a lot easier",
    "start": "1101480",
    "end": "1107440"
  },
  {
    "text": "to write and also more approachable for the average um web developer um then you",
    "start": "1107440",
    "end": "1113280"
  },
  {
    "text": "write plugins in JavaScript and should have like similar power maybe not so so low level but at least really similar",
    "start": "1113280",
    "end": "1119919"
  },
  {
    "text": "power to R backin but it's easier to write and should also work um yeah we",
    "start": "1119919",
    "end": "1127039"
  },
  {
    "text": "also have some kind of internal currently internal configuration which is like allows you to like configure",
    "start": "1127039",
    "end": "1133880"
  },
  {
    "text": "toeg in a way in example next configuring is using a configuration to control to P it's currently internal but",
    "start": "1133880",
    "end": "1141320"
  },
  {
    "text": "we we want to make it public but I think we we like I think we should more spend",
    "start": "1141320",
    "end": "1146559"
  },
  {
    "text": "more time in making a good public API public configuration before like making it public so we I think we need some",
    "start": "1146559",
    "end": "1153840"
  },
  {
    "text": "time to think about it too because once you make it public you it's harder to change and you people don't want you to",
    "start": "1153840",
    "end": "1159880"
  },
  {
    "text": "change it so um once we figure it out we we make it a public configuration and then it should be usable similar to weic",
    "start": "1159880",
    "end": "1170240"
  },
  {
    "text": "so regarding the graph um we wanted to make a really flexible graph and so to to achieve that we we got away from this",
    "start": "1171120",
    "end": "1179039"
  },
  {
    "text": "kind of idea of there a compiler with some configuration so we basically avoided Global configuration at all so",
    "start": "1179039",
    "end": "1186159"
  },
  {
    "text": "there's only like local configuration which means you have an entry point and then you attach some configuration for",
    "start": "1186159",
    "end": "1192880"
  },
  {
    "text": "that for that and then the the configuration is basically attached to the graph it's sa and it follows the",
    "start": "1192880",
    "end": "1199480"
  },
  {
    "text": "graph and once you transition between environments like from server to client you can change the configuration at that",
    "start": "1199480",
    "end": "1205679"
  },
  {
    "text": "point or use different configuration and then like this is basically attached to the graph so basically not there's a",
    "start": "1205679",
    "end": "1211880"
  },
  {
    "text": "compiler with global information but instead there's a graph and every note you have some kind of configuration",
    "start": "1211880",
    "end": "1217240"
  },
  {
    "text": "applied to that and can change it any time and transition between different configurations and different",
    "start": "1217240",
    "end": "1223159"
  },
  {
    "text": "environments and that makes it really flexible to use this kind of graph we also wanted do something similar with",
    "start": "1223159",
    "end": "1229480"
  },
  {
    "text": "like if you have some kind of config file like maybe TS config or some kind of to config which doesn't exist yet and",
    "start": "1229480",
    "end": "1236520"
  },
  {
    "text": "it should be also be able to apply that locally so like if you have a file basally instead of having like a global",
    "start": "1236520",
    "end": "1243720"
  },
  {
    "text": "to Peg config CH or whatever it basically will pull the configuration at",
    "start": "1243720",
    "end": "1249880"
  },
  {
    "text": "at the folder level so any file you can put it like anywhere in your folder in your monoo and then it only applies to",
    "start": "1249880",
    "end": "1256240"
  },
  {
    "text": "like that Z folder and that kind of stuff so everything local configurate configuration by default and it should",
    "start": "1256240",
    "end": "1262480"
  },
  {
    "text": "make it more flexible in how things are configured and more flexible even to",
    "start": "1262480",
    "end": "1268200"
  },
  {
    "text": "like also yeah to to do use different configurations at different parts of the",
    "start": "1268200",
    "end": "1273679"
  },
  {
    "text": "application um yeah also in regard of monos where you often have different",
    "start": "1273679",
    "end": "1279520"
  },
  {
    "text": "packages split between teams and they might might have different configuration choices and yeah that should also enable",
    "start": "1279520",
    "end": "1285559"
  },
  {
    "text": "that kind of thing yeah the diff different most difficult",
    "start": "1285559",
    "end": "1291520"
  },
  {
    "text": "thing was like performance approach and yeah we want to have this incremental kind of thing thing so we we built this",
    "start": "1291520",
    "end": "1299200"
  },
  {
    "text": "um new architecture called turbo engine and it's basically built on top of",
    "start": "1299200",
    "end": "1304520"
  },
  {
    "text": "reactive programming Concepts um so reactive programming is something like um you have some kind of function or um",
    "start": "1304520",
    "end": "1310760"
  },
  {
    "text": "and then it basally automatically tracks if you read some value that this depends",
    "start": "1310760",
    "end": "1317080"
  },
  {
    "text": "on that value and then if this value changes then it will recompute that function so basically it builds a graph",
    "start": "1317080",
    "end": "1323480"
  },
  {
    "text": "out of your application the dependency graph and then you can follow that and use this graph to like recompute stuff",
    "start": "1323480",
    "end": "1330600"
  },
  {
    "text": "and basically react on changes on that stuff um it's also memorized by default",
    "start": "1330600",
    "end": "1337279"
  },
  {
    "text": "so every function you execute is only executed once and basic cached by default so this makes easy to cat and",
    "start": "1337279",
    "end": "1344799"
  },
  {
    "text": "this reactive programming approach with dependency tracking between values and functions also make it able to like give",
    "start": "1344799",
    "end": "1352080"
  },
  {
    "text": "you cash in validation by default so by tracking all the values you can easily if something changeed follow the graph",
    "start": "1352080",
    "end": "1357919"
  },
  {
    "text": "invalidates the right caches and easy easily granularly cach stuff instead",
    "start": "1357919",
    "end": "1363799"
  },
  {
    "text": "having instead of having like this broader range caching that it's which is",
    "start": "1363799",
    "end": "1368960"
  },
  {
    "text": "in R so I I had a kind of um demo for not a demo but a kind of graph for that",
    "start": "1368960",
    "end": "1375919"
  },
  {
    "text": "like you can imagine this is a compilation it's probably larger but um yeah it's basally a bunch of like it's",
    "start": "1375919",
    "end": "1383240"
  },
  {
    "text": "only like for reference not not really that M doesn't really matter what the content is but it's like you have this",
    "start": "1383240",
    "end": "1389840"
  },
  {
    "text": "graph of different functions calling each other and having dependencies between each other and maybe just",
    "start": "1389840",
    "end": "1396159"
  },
  {
    "text": "initial compilation you compile every function and while doing that you track",
    "start": "1396159",
    "end": "1401279"
  },
  {
    "text": "the dependency between this function like um if you think about like no",
    "start": "1401279",
    "end": "1409240"
  },
  {
    "text": "um like passing OS script um yeah like if you want to get some references of a",
    "start": "1409240",
    "end": "1414640"
  },
  {
    "text": "module oh this um then you have to execute pass types scrip function and",
    "start": "1414640",
    "end": "1419799"
  },
  {
    "text": "then you also depend on the result of That So like um in this case like and",
    "start": "1419799",
    "end": "1425720"
  },
  {
    "text": "passing typescript depends on reading the file so in this case you have to depend graph between all the function",
    "start": "1425720",
    "end": "1431440"
  },
  {
    "text": "calls and also maybe multiple of that and the funny thing that happens is if",
    "start": "1431440",
    "end": "1437919"
  },
  {
    "text": "in the case of a file change like let's assume that this read file changes and",
    "start": "1437919",
    "end": "1444039"
  },
  {
    "text": "and you want to do an incremental compilation do use that by everything is cached just sitting around memorized and",
    "start": "1444039",
    "end": "1450840"
  },
  {
    "text": "nothing to do but in once the file changed you basically reexecute this kind of function and then you propagate",
    "start": "1450840",
    "end": "1457360"
  },
  {
    "text": "the change through the graph by following the dependency graphs and um in the end the the graph eventually",
    "start": "1457360",
    "end": "1464240"
  },
  {
    "text": "convert converges to like a new state where everything is updated and you can",
    "start": "1464240",
    "end": "1470399"
  },
  {
    "text": "also do some funny things like this where like you reexecute this function but you see the result has not changed",
    "start": "1470399",
    "end": "1476399"
  },
  {
    "text": "by compar to the old value and in this case you don't have to propagate the change to to um to the uh dependent task",
    "start": "1476399",
    "end": "1484760"
  },
  {
    "text": "so this is like eventually consistent thing of propagating the whole system to",
    "start": "1484760",
    "end": "1490000"
  },
  {
    "text": "a new state and the good thing on that is you basically don't have to touch any of the gray nodes you it's just it could",
    "start": "1490000",
    "end": "1496520"
  },
  {
    "text": "be like millions of that and but you like if the file changed you only follow the the few edges in the",
    "start": "1496520",
    "end": "1504480"
  },
  {
    "text": "graph and you you change like applying the change to the graph Bas only depends",
    "start": "1504480",
    "end": "1509520"
  },
  {
    "text": "on the like size of the change or of the affected graph and not of the whole",
    "start": "1509520",
    "end": "1514919"
  },
  {
    "text": "graph and that's the whole idea about like making incremental incremental builds independent of application",
    "start": "1514919",
    "end": "1523320"
  },
  {
    "text": "size so back to the slide um yeah yeah it's maybe it's not that easy but",
    "start": "1523840",
    "end": "1531279"
  },
  {
    "text": "you also have to be keep while writing code in the system you also have to keep in mind that like this is incremental so",
    "start": "1531279",
    "end": "1537880"
  },
  {
    "text": "you it would be a mistake to use one function to work the whole graph then",
    "start": "1537880",
    "end": "1543360"
  },
  {
    "text": "you will be like dependent on application size again so you need to be a little bit aware of that your function",
    "start": "1543360",
    "end": "1550080"
  },
  {
    "text": "might be re-executed and that you keep your functions small and not working",
    "start": "1550080",
    "end": "1555159"
  },
  {
    "text": "whole graph or working a lot of stuff um you also keep have to keep",
    "start": "1555159",
    "end": "1561159"
  },
  {
    "text": "persistency in mind so like um as you want to be persistent on remote cachable",
    "start": "1561159",
    "end": "1566720"
  },
  {
    "text": "um you make must must make sure that like your your results are realizable",
    "start": "1566720",
    "end": "1572080"
  },
  {
    "text": "and if they are not they are not remote the cach so you maybe that's it's possible and we do it for a bunch of",
    "start": "1572080",
    "end": "1578440"
  },
  {
    "text": "things like the EST we don't cach thatly but yeah you have to be aware of that",
    "start": "1578440",
    "end": "1584159"
  },
  {
    "text": "and make sure that you you keep that in mind um yeah another thing we do is like",
    "start": "1584159",
    "end": "1590360"
  },
  {
    "text": "a lot of benchmarking infrastructure profiling infrastructure to really make sure that uh we stay like fast and um",
    "start": "1590360",
    "end": "1598240"
  },
  {
    "text": "our builds are really and our incremented builds are not dependent on the size H we also want to like expose",
    "start": "1598240",
    "end": "1605399"
  },
  {
    "text": "this kind of tracing benchmarking infrastructure to the user so we want to give the user more insight what like how",
    "start": "1605399",
    "end": "1612880"
  },
  {
    "text": "this how the build behaves so that like historically you don't have like a lot of tools to really see what's slow your",
    "start": "1612880",
    "end": "1619919"
  },
  {
    "text": "application and we only really want to make it able to like see this kind of graph and see what what the time is",
    "start": "1619919",
    "end": "1626760"
  },
  {
    "text": "spent and like and make a like a use useful visualization of this kind of graph and the timing spent in each",
    "start": "1626760",
    "end": "1633440"
  },
  {
    "text": "function and that kind of stuff and yeah there's also some kind of",
    "start": "1633440",
    "end": "1640120"
  },
  {
    "text": "changes or approaches regarding performance in to itself so this the previous thing was mostly too engine now",
    "start": "1640120",
    "end": "1646880"
  },
  {
    "text": "it's to p and here it's mostly like The Lazy by default idea so we we just",
    "start": "1646880",
    "end": "1654159"
  },
  {
    "text": "basically want to avoid like like having a modu graph in our system or having a a",
    "start": "1654159",
    "end": "1660440"
  },
  {
    "text": "structure that repres represents a modu graph because a mod graph would be like scaling by application size so updating",
    "start": "1660440",
    "end": "1667840"
  },
  {
    "text": "that um or like would be also like depending on application size we we instead of having like this large graph",
    "start": "1667840",
    "end": "1674919"
  },
  {
    "text": "we instead like use like implicit graph approach where you have nodes and you",
    "start": "1674919",
    "end": "1680399"
  },
  {
    "text": "like reading or getting the children of one Noe is a function you can execute and as every function is memorized and",
    "start": "1680399",
    "end": "1688519"
  },
  {
    "text": "like incremental it also benefits from to engine Bally like working the graph",
    "start": "1688519",
    "end": "1695519"
  },
  {
    "text": "just Rec just uh recompute the uh compute the graph and this way like it's",
    "start": "1695519",
    "end": "1702159"
  },
  {
    "text": "like similar to like an implicit graph and not having one structure for the whole graph",
    "start": "1702159",
    "end": "1709320"
  },
  {
    "text": "yeah also um the kind of tricky thing is like we basally want to avoid Global",
    "start": "1709320",
    "end": "1714880"
  },
  {
    "text": "Information like any kind of Global Information would require to work the graph or the whole graph and that would",
    "start": "1714880",
    "end": "1720919"
  },
  {
    "text": "break the lazy thing because working the whole graph need to like evaluate or like compute the whole graph and that's",
    "start": "1720919",
    "end": "1727240"
  },
  {
    "text": "not lazy um so um we tried or we we avoided any kind of oral information in",
    "start": "1727240",
    "end": "1732760"
  },
  {
    "text": "development builds so you you can't really um Global in",
    "start": "1732760",
    "end": "1737960"
  },
  {
    "text": "could be something like how often is the module imported or which are the parents of one module um and that kind of",
    "start": "1737960",
    "end": "1744840"
  },
  {
    "text": "information we we can't really get that so we need to like restructure some of the",
    "start": "1744840",
    "end": "1751360"
  },
  {
    "text": "algorithm um to basically avoid this information and can just do stuff",
    "start": "1751360",
    "end": "1756480"
  },
  {
    "text": "without this information this requires some refactoring but in the end yeah we we had this and it has some tradeoff",
    "start": "1756480",
    "end": "1763600"
  },
  {
    "text": "where you made things worse because yeah you don't have this information about other things in the graph and you have",
    "start": "1763600",
    "end": "1771000"
  },
  {
    "text": "to rely on some Holistics to like d duplicate between stuff um but in the",
    "start": "1771000",
    "end": "1776600"
  },
  {
    "text": "end it seemed to work really well and yeah that's kind of the challenges here",
    "start": "1776600",
    "end": "1783399"
  },
  {
    "text": "Al similar thing to to mention Benchmark and profiling is really important to ensure that everything is working",
    "start": "1783399",
    "end": "1792080"
  },
  {
    "text": "well so that was the about now the challenges one of the biggest uh one of",
    "start": "1792120",
    "end": "1797919"
  },
  {
    "start": "1793000",
    "end": "2516000"
  },
  {
    "text": "the Bigg challenges I think was like rust like basically most of the team members were not new in writing rust",
    "start": "1797919",
    "end": "1804640"
  },
  {
    "text": "code at all including me so I I never wrote rust code before so I barely learned rust while writing this project",
    "start": "1804640",
    "end": "1811000"
  },
  {
    "text": "and it's it's it's can be hard it's like new language different paradigmas and",
    "start": "1811000",
    "end": "1818679"
  },
  {
    "text": "especially with with tobo engine which is this incremental way it's like a different way of writing rcod it's like",
    "start": "1818679",
    "end": "1824720"
  },
  {
    "text": "similar to a diff different language on top of W and and yeah it's like a little",
    "start": "1824720",
    "end": "1830480"
  },
  {
    "text": "bit hard to to learn and slow down maybe like new members turning on the team",
    "start": "1830480",
    "end": "1837559"
  },
  {
    "text": "yeah but there was also some other challenges in Rust um like the development process um the rust is",
    "start": "1837559",
    "end": "1844559"
  },
  {
    "text": "really slow to compile especially when coming from the yavas scope world where everything is like like interpreted and",
    "start": "1844559",
    "end": "1851880"
  },
  {
    "text": "start application doesn't need any pre-compilation step or maybe a minimal pre-compilation step um so that's really",
    "start": "1851880",
    "end": "1859760"
  },
  {
    "text": "slowing down at least me in in development if you have have to wait a bunch of seconds or maybe multiple",
    "start": "1859760",
    "end": "1866600"
  },
  {
    "text": "minutes to R compile your application just to start it that's really",
    "start": "1866600",
    "end": "1872200"
  },
  {
    "text": "annoying but on the other hand it it makes it easier to review pquest because rust is really strongly type checks so",
    "start": "1872200",
    "end": "1879720"
  },
  {
    "text": "if your coworker submits the proquest you can be sure that every type is",
    "start": "1879720",
    "end": "1884799"
  },
  {
    "text": "correct in this if the CI is passing of course is correct in this it's prob because you you can barely skim over",
    "start": "1884799",
    "end": "1892080"
  },
  {
    "text": "like all the import statement all the type adjustments or whatever um and you can concentrate on the logic changed in",
    "start": "1892080",
    "end": "1898919"
  },
  {
    "text": "the Pro request and that it makes it much easier to review Pro request compared to JavaScript where you had to",
    "start": "1898919",
    "end": "1905360"
  },
  {
    "text": "review every type and every like is this really safe type say like oh yeah basic",
    "start": "1905360",
    "end": "1912799"
  },
  {
    "text": "it's easier to review um especially as R is more the B and writing so it's like good that's easier to",
    "start": "1912799",
    "end": "1919480"
  },
  {
    "text": "read um yeah the build build process is also problem for the production build in",
    "start": "1919480",
    "end": "1925720"
  },
  {
    "text": "R so um like it it there was a while where it took like one and a half hour",
    "start": "1925720",
    "end": "1931840"
  },
  {
    "text": "to compile a new version of next sh because like the rust compilation step",
    "start": "1931840",
    "end": "1937919"
  },
  {
    "text": "took so long um yeah that's annoying and really problematic and but the problem",
    "start": "1937919",
    "end": "1944360"
  },
  {
    "text": "was like it's running on get up actions and that not the fastest one So eventually we rep placed the CCI with",
    "start": "1944360",
    "end": "1951480"
  },
  {
    "text": "faster missions and then it was faster but this was really annoying for a while",
    "start": "1951480",
    "end": "1957240"
  },
  {
    "text": "um yeah so also comes down to the deployment process um yeah basically in",
    "start": "1957240",
    "end": "1962760"
  },
  {
    "text": "JavaScript world you just write in JavaScript code publish an mpm package and it's just working everywhere um but",
    "start": "1962760",
    "end": "1970360"
  },
  {
    "text": "in in in the native world you basically have to compile binaries for every platform you want to support and as is",
    "start": "1970360",
    "end": "1976559"
  },
  {
    "text": "open source you probably like you want to support every platform so it's like I think it's like six different platform",
    "start": "1976559",
    "end": "1982440"
  },
  {
    "text": "you want to compile every like the deploy the build process is not the easiest one you have to compile on",
    "start": "1982440",
    "end": "1987639"
  },
  {
    "text": "Windows on Mac on on Linux and on different platforms and with different uh VMS and Docker images it's like super",
    "start": "1987639",
    "end": "1994519"
  },
  {
    "text": "complicated and yeah yeah annoying and",
    "start": "1994519",
    "end": "1999679"
  },
  {
    "text": "it also holds in larger binaries like I think it's currently hundreds of Mega 100 megabytes about like a to is not",
    "start": "1999679",
    "end": "2007880"
  },
  {
    "text": "super optimized yet but yeah it's much larger from download perspective compared to like code which is a lot",
    "start": "2007880",
    "end": "2016080"
  },
  {
    "text": "smaller at least compressed better yeah so yeah that's problematic and it's also",
    "start": "2016080",
    "end": "2023960"
  },
  {
    "text": "like is problem especially problematic if you want to write like for okay we we",
    "start": "2023960",
    "end": "2029639"
  },
  {
    "text": "handled that kind of process that's fine it's working but if you want to users be able to publish rust native ins for to",
    "start": "2029639",
    "end": "2038440"
  },
  {
    "text": "they also have to go through the whole process like they have to build it for different platforms and deploy it in a",
    "start": "2038440",
    "end": "2044440"
  },
  {
    "text": "similar s similar way as we do and yeah that's could be a lot of pain for for",
    "start": "2044440",
    "end": "2050158"
  },
  {
    "text": "the plugin developers there could is a possibility to use the web assembly based plugins",
    "start": "2050159",
    "end": "2057040"
  },
  {
    "text": "but it's not yeah it's make it easier to like have this build deployment process and but it's also fast slower and that's",
    "start": "2057040",
    "end": "2065240"
  },
  {
    "text": "could be a problem and there so different challenges regarding some stuff in Rust is not compilable to web",
    "start": "2065240",
    "end": "2070800"
  },
  {
    "text": "assembly and that kind of thing um yeah so it's a tradeoff and yeah and",
    "start": "2070800",
    "end": "2075839"
  },
  {
    "text": "especially if you if you want to write a r plugin you probably care about performance or or the JavaScript plugin",
    "start": "2075839",
    "end": "2082398"
  },
  {
    "text": "is not enough for you so it's probably not like good enough to write a web",
    "start": "2082399",
    "end": "2087878"
  },
  {
    "text": "assembly plugin which would be slower yeah that's why JavaScript PL is",
    "start": "2087879",
    "end": "2094398"
  },
  {
    "text": "much easier and um is also really really important for us and because it's easier to write easier to build easier to",
    "start": "2094399",
    "end": "2100000"
  },
  {
    "text": "deploy um yeah but there are other challenges regarding cash viation",
    "start": "2100000",
    "end": "2105680"
  },
  {
    "text": "example like in in Rust you have like really due to the type system you have really tight control you you can't",
    "start": "2105680",
    "end": "2111640"
  },
  {
    "text": "easily import Global State and you can't easily import from modu scope variables",
    "start": "2111640",
    "end": "2117000"
  },
  {
    "text": "and that kind of stuff in JavaScript you can just like access Global State Globes",
    "start": "2117000",
    "end": "2122359"
  },
  {
    "text": "everywhere and yeah leak State and yeah basic break in cach invalidation in",
    "start": "2122359",
    "end": "2128359"
  },
  {
    "text": "weird ways if you don't be careful which is much harder in in yeah so it's yeah",
    "start": "2128359",
    "end": "2134560"
  },
  {
    "text": "little bit tricky um so technically um config files are also kind of reascript",
    "start": "2134560",
    "end": "2141960"
  },
  {
    "text": "plugins like if you have an um maybe not a t config but like a anything. JS",
    "start": "2141960",
    "end": "2148040"
  },
  {
    "text": "config a config.js file then it's it can like it's basically executed in njz it",
    "start": "2148040",
    "end": "2153640"
  },
  {
    "text": "can import other files and it's basically similar to like Yas like and and the challenge here is like we we",
    "start": "2153640",
    "end": "2160000"
  },
  {
    "text": "want to make caching validation working for that or caching working for that and incremental builds working for that you",
    "start": "2160000",
    "end": "2165800"
  },
  {
    "text": "so we have to really if this file has changed we have to reexecute it but not only if this file has changed but also",
    "start": "2165800",
    "end": "2172520"
  },
  {
    "text": "like if the contct file is importing another file and if this is not importing another file and this",
    "start": "2172520",
    "end": "2177640"
  },
  {
    "text": "transitively imported file is changed then we have to re like weo invalidate",
    "start": "2177640",
    "end": "2183480"
  },
  {
    "text": "the cach of the cont file so we really have to follow the graph of config file similar to what a bundler is doing so",
    "start": "2183480",
    "end": "2189720"
  },
  {
    "text": "like that's Al cool that we can do",
    "start": "2189720",
    "end": "2194078"
  },
  {
    "text": "that yeah um another challenge was this turbo engine design um so we basically",
    "start": "2194839",
    "end": "2200520"
  },
  {
    "text": "built this cool graph of all the tasks in the application and yeah this also",
    "start": "2200520",
    "end": "2206240"
  },
  {
    "text": "leads to problems because this graph can be really large it's like millions of tasks in a graph and then you have like",
    "start": "2206240",
    "end": "2211920"
  },
  {
    "text": "like even more dependency edges between them and that leads to perform performance problems because you have to",
    "start": "2211920",
    "end": "2218319"
  },
  {
    "text": "do graph operations in like a graph of millions of nodes and that yeah it's like not the easiest you have to be",
    "start": "2218319",
    "end": "2224560"
  },
  {
    "text": "really careful in doing that um without like um creating artificial performance",
    "start": "2224560",
    "end": "2230839"
  },
  {
    "text": "problems due to the way the graph is built and that kind of stuff um it Al",
    "start": "2230839",
    "end": "2236760"
  },
  {
    "text": "also has a problem of memo footprint like the graph of millions of notes to store is has a cost and yeah that's a",
    "start": "2236760",
    "end": "2244119"
  },
  {
    "text": "problem and we we working on reducing that but but currently it's like a big problem in in toek and yeah we it",
    "start": "2244119",
    "end": "2252319"
  },
  {
    "text": "probably will be tackled by persistance because then we can like put some of the",
    "start": "2252319",
    "end": "2257480"
  },
  {
    "text": "graph into this F system basically swapping out uh the the the graph and",
    "start": "2257480",
    "end": "2263599"
  },
  {
    "text": "that could could reduce the memor footprint um yeah also the kind of",
    "start": "2263599",
    "end": "2269280"
  },
  {
    "text": "memorization system like memorizing every function is also like contributing",
    "start": "2269280",
    "end": "2274800"
  },
  {
    "text": "to the memor footprint like storing every value in the application is obviously Bally memo leak in the kind of",
    "start": "2274800",
    "end": "2280839"
  },
  {
    "text": "thing um so we all working or we had we have a system which is a kind of garbage",
    "start": "2280839",
    "end": "2286160"
  },
  {
    "text": "collection system so throwing away values that they computed before and that kind of works well because like in",
    "start": "2286160",
    "end": "2292560"
  },
  {
    "text": "our system where like you execute a function it's memorized by default and then this is kind of um that's a system",
    "start": "2292560",
    "end": "2298920"
  },
  {
    "text": "you can just throw away any task any anytime and then like the next time it's",
    "start": "2298920",
    "end": "2304839"
  },
  {
    "text": "accessed it just recomputed it only has a performance cost but you can throw away everything if you want to so it in",
    "start": "2304839",
    "end": "2311640"
  },
  {
    "text": "the end if everything is working as it plan to plan it to be it will just like",
    "start": "2311640",
    "end": "2318040"
  },
  {
    "text": "have a memory limit and then it will throw away everything that's below the memory limit and we keep below the",
    "start": "2318040",
    "end": "2324240"
  },
  {
    "text": "memory limit or not maybe not throwing away but like maybe stabilizing to dist",
    "start": "2324240",
    "end": "2329400"
  },
  {
    "text": "hopefully or throwing it away um yeah another challenge with tu",
    "start": "2329400",
    "end": "2336200"
  },
  {
    "text": "engine was like consistency like I I said it before with a graph you have this uh like file change bubbling",
    "start": "2336200",
    "end": "2342599"
  },
  {
    "text": "through the graph eventually eventually con propagating to like an updated state",
    "start": "2342599",
    "end": "2347680"
  },
  {
    "text": "of the graph but this eventually propagating is sometimes a problem because like if a request comes in you",
    "start": "2347680",
    "end": "2354800"
  },
  {
    "text": "don't want to like maybe respond with stale data Maybe had propagated um to",
    "start": "2354800",
    "end": "2360359"
  },
  {
    "text": "the updated data and then respond with good data you always want to respond with updated data you you never want to",
    "start": "2360359",
    "end": "2366640"
  },
  {
    "text": "respond with stale data on a request and that would be weird and yeah um so so we",
    "start": "2366640",
    "end": "2372599"
  },
  {
    "text": "we have have to tackle this problem but by offering also like instead of only having this",
    "start": "2372599",
    "end": "2379240"
  },
  {
    "text": "eventual consistent read kind of thing we also want to add some points of the graph like requests and we want to uh",
    "start": "2379240",
    "end": "2386200"
  },
  {
    "text": "like respond with some strongly consistent readed values so like we want to like wait for the graph to be",
    "start": "2386200",
    "end": "2393040"
  },
  {
    "text": "propagated until this point and then respond with the value and that's also a little bit difficult because you don't",
    "start": "2393040",
    "end": "2399160"
  },
  {
    "text": "want to work the whole graph because then it's it's dependent on application size that's not what we want so we want",
    "start": "2399160",
    "end": "2406920"
  },
  {
    "text": "to we want to come up with a clever um optimization technique or structure to",
    "start": "2406920",
    "end": "2412920"
  },
  {
    "text": "like like wait for the graph to be propagated um until this point and then",
    "start": "2412920",
    "end": "2418040"
  },
  {
    "text": "respond with it so like strongly consistent reads um yeah but on the",
    "start": "2418040",
    "end": "2423880"
  },
  {
    "text": "other side we also want to have some kind of um like inactive active kind of state of",
    "start": "2423880",
    "end": "2430760"
  },
  {
    "text": "nodes like um like if you like have this request coming in responding with",
    "start": "2430760",
    "end": "2436040"
  },
  {
    "text": "something and like it's done and then the file is changed we don't want to",
    "start": "2436040",
    "end": "2441640"
  },
  {
    "text": "propagate the value to the request because that's unnecessary the request is already handled so we don't want to",
    "start": "2441640",
    "end": "2447880"
  },
  {
    "text": "like eagerly propagate the values to the graph so we also have like a state of",
    "start": "2447880",
    "end": "2453079"
  },
  {
    "text": "active Nets or in inactive and active for noes like some of of them are active because you're watching them over web",
    "start": "2453079",
    "end": "2459359"
  },
  {
    "text": "socket and some of them are inactive because you like in the past to like",
    "start": "2459359",
    "end": "2464480"
  },
  {
    "text": "serve the request with that and you currently no no request is coming in um and and this also avoids like overco",
    "start": "2464480",
    "end": "2471200"
  },
  {
    "text": "Computing so like we don't want to over compute inactive values we only want to",
    "start": "2471200",
    "end": "2476240"
  },
  {
    "text": "propagate the graph until the graph like as long as the graph is active and don't propagate into inactive stuff yeah and",
    "start": "2476240",
    "end": "2484200"
  },
  {
    "text": "there also B contributes to the problem of responding with stale data where the request comes in and only then the graph",
    "start": "2484200",
    "end": "2491079"
  },
  {
    "text": "is flect is active because then the request is handled and it starts propagating at this",
    "start": "2491079",
    "end": "2497640"
  },
  {
    "text": "point yeah yeah it's I think we we have a approach to handle that but I think",
    "start": "2497640",
    "end": "2503800"
  },
  {
    "text": "it's not the best one it's working but there's also some performance problems with that so I I think we we want to",
    "start": "2503800",
    "end": "2511800"
  },
  {
    "text": "rethink that um yeah but it's fine for now",
    "start": "2511800",
    "end": "2517480"
  },
  {
    "start": "2516000",
    "end": "2864000"
  },
  {
    "text": "so new ideas um so in the past we we we",
    "start": "2517480",
    "end": "2522839"
  },
  {
    "text": "like we we do linting but linting is often only on like on file level or maybe like in port or stuff but I think",
    "start": "2522839",
    "end": "2529680"
  },
  {
    "text": "we can use like the mod graph for for linting or you can all use all the",
    "start": "2529680",
    "end": "2535079"
  },
  {
    "text": "graphers for for linting stuff like and maybe in the M graph you could some something like um files from that folder",
    "start": "2535079",
    "end": "2542880"
  },
  {
    "text": "must not be imported from that folder like to enforce architect actually um",
    "start": "2542880",
    "end": "2548000"
  },
  {
    "text": "designs U and Bas make clever smarter lens based on your architecture of your",
    "start": "2548000",
    "end": "2553800"
  },
  {
    "text": "application um also to provide like safety guarantees like this is secur",
    "start": "2553800",
    "end": "2559880"
  },
  {
    "text": "sensitive code and you you must not be imported from client side code or something like that",
    "start": "2559880",
    "end": "2566119"
  },
  {
    "text": "um yeah so we want to point more linting um another problem regarding especially",
    "start": "2566119",
    "end": "2571960"
  },
  {
    "text": "regarding warnings is that users are often overwhelmed with warnings like sometimes they are none but often",
    "start": "2571960",
    "end": "2579040"
  },
  {
    "text": "there are like millions of them and then you the users don't read them like skip over them and it's not not really useful",
    "start": "2579040",
    "end": "2585800"
  },
  {
    "text": "so we want to like have some better like visualization for warnings maybe in kind",
    "start": "2585800",
    "end": "2590880"
  },
  {
    "text": "of UI instead of printing everything from the console uh and often users are",
    "start": "2590880",
    "end": "2596640"
  },
  {
    "text": "only interested in like new warnings that like occurred while they doing changes like yeah they often don't care",
    "start": "2596640",
    "end": "2604079"
  },
  {
    "text": "about like like the millions of existing warnings um so we want really want to",
    "start": "2604079",
    "end": "2609520"
  },
  {
    "text": "find better visualization for that um we also have some new ideas",
    "start": "2609520",
    "end": "2614920"
  },
  {
    "text": "regarding a build introspection so like I I I teas it before like we really want",
    "start": "2614920",
    "end": "2619960"
  },
  {
    "text": "you to like look into this graphs and like inspect them and you can really",
    "start": "2619960",
    "end": "2625319"
  },
  {
    "text": "find valuable information from that like in the model graph if you like this small module Imports like millions of",
    "start": "2625319",
    "end": "2631400"
  },
  {
    "text": "other modules you might want to look into that or in the output graph is if you lay loading like or not or eagerly",
    "start": "2631400",
    "end": "2638119"
  },
  {
    "text": "loading like tens of megabytes of code then that might not be good and in the",
    "start": "2638119",
    "end": "2643280"
  },
  {
    "text": "build graph if like like 90% of the build time spent in like compiling this",
    "start": "2643280",
    "end": "2649440"
  },
  {
    "text": "third party package then you might want to do something about that so this the",
    "start": "2649440",
    "end": "2655800"
  },
  {
    "text": "the graph contains really useful information and introspection might be really useful for that um but it's often",
    "start": "2655800",
    "end": "2663720"
  },
  {
    "text": "difficult for users to like even if they seon graph is to like understand what's the right action to do like what's",
    "start": "2663720",
    "end": "2670240"
  },
  {
    "text": "what's what what what can I do for that and what what should I do and I think we",
    "start": "2670240",
    "end": "2676079"
  },
  {
    "text": "need a really better view of you have to take or you should take this action this is a proposed action to do that or to",
    "start": "2676079",
    "end": "2682839"
  },
  {
    "text": "fix that and yeah and this kind of",
    "start": "2682839",
    "end": "2687880"
  },
  {
    "text": "introspections especially valuable in like if you have a Pulver cast based",
    "start": "2687880",
    "end": "2693000"
  },
  {
    "text": "approach where you can actually like show like the diff of the proquest as",
    "start": "2693000",
    "end": "2698559"
  },
  {
    "text": "introspection of the graph and that's really useful we also want to give you more",
    "start": "2698559",
    "end": "2705520"
  },
  {
    "text": "control over the build like it's it sometimes it happens that you have",
    "start": "2705520",
    "end": "2710599"
  },
  {
    "text": "errors that or problem that only uh appears in in a in a production only like in a production build and not in",
    "start": "2710599",
    "end": "2716559"
  },
  {
    "text": "your Dev server build and yeah it's really hard to deag this kind of problem because like you you have this minified",
    "start": "2716559",
    "end": "2723680"
  },
  {
    "text": "code and no Source maps and you you really can't really debug stuff without",
    "start": "2723680",
    "end": "2728760"
  },
  {
    "text": "reading Liber code and that's yeah hard to do so I I really imagine a world",
    "start": "2728760",
    "end": "2734440"
  },
  {
    "text": "where you have the dev server and have a slider where you can slide between Dev and production build and enable",
    "start": "2734440",
    "end": "2740240"
  },
  {
    "text": "optimizations based on that and then you can just debug your production version of your application in your Dev server",
    "start": "2740240",
    "end": "2747520"
  },
  {
    "text": "with some optimization turned out B turn like move the slider until your problem",
    "start": "2747520",
    "end": "2754880"
  },
  {
    "text": "disappears and then use a yeah you basic can get a version where you have to just",
    "start": "2754880",
    "end": "2760359"
  },
  {
    "text": "see your problem but still have a lot of possibility to Deb um there's also more um um",
    "start": "2760359",
    "end": "2769280"
  },
  {
    "text": "possibility of optimizations I talked before that um yeah that's currently",
    "start": "2769280",
    "end": "2775079"
  },
  {
    "text": "basic modules are the lowest level of optimization we like we we can optimize",
    "start": "2775079",
    "end": "2780119"
  },
  {
    "text": "some exports of this these modules but it's basically the lowest unit of the optimization but we we can do better we",
    "start": "2780119",
    "end": "2787240"
  },
  {
    "text": "we can split up modules into statements and and um and declarations and use this",
    "start": "2787240",
    "end": "2794400"
  },
  {
    "text": "as optimization Bas build a graph of a much larger graph of of statements and",
    "start": "2794400",
    "end": "2799559"
  },
  {
    "text": "declarations and optimize between them and yeah also some of the",
    "start": "2799559",
    "end": "2806119"
  },
  {
    "text": "optimizations are limited by the spec specification so in in example if you import some code you it has to be",
    "start": "2806119",
    "end": "2812240"
  },
  {
    "text": "executed or side effect in this code has to be exe have to be executed Ed and so",
    "start": "2812240",
    "end": "2817480"
  },
  {
    "text": "there are some possibilities to offer opt outs for package Outdoors like setex FS is one option of that and we could",
    "start": "2817480",
    "end": "2824400"
  },
  {
    "text": "add more for lazy evaluation and that that should be able to offer more",
    "start": "2824400",
    "end": "2830400"
  },
  {
    "text": "optimizations and and so last slide uh there are also some optimizations",
    "start": "2830400",
    "end": "2836480"
  },
  {
    "text": "opportunities in different environments like currently we often focused on web",
    "start": "2836480",
    "end": "2841800"
  },
  {
    "text": "performance optimization web web development a web on the Cent code but",
    "start": "2841800",
    "end": "2846839"
  },
  {
    "text": "there's potential for special optimizations for Lambda code and for",
    "start": "2846839",
    "end": "2852160"
  },
  {
    "text": "code in Edge workers and lambdas in example you you know that uh no J execut",
    "start": "2852160",
    "end": "2857319"
  },
  {
    "text": "code and it's yeah you can do special optimizations for on edge workers it's a single bundle and",
    "start": "2857319",
    "end": "2864000"
  },
  {
    "start": "2864000",
    "end": "2892000"
  },
  {
    "text": "yeah so thanks for listening to that it's really long um I hope you learned",
    "start": "2864000",
    "end": "2869920"
  },
  {
    "text": "something new and thanks for coming",
    "start": "2869920",
    "end": "2877720"
  }
]