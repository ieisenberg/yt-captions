[
  {
    "start": "0",
    "end": "124000"
  },
  {
    "text": "hello everyone um so myself and Sheen have come together uh we want to talk about operating event driven",
    "start": "13120",
    "end": "20199"
  },
  {
    "text": "architectures um there's a lot of kind of challenges around it and that's kind of why we've come together to talk about",
    "start": "20199",
    "end": "26320"
  },
  {
    "text": "it um firstly I'd like to introduce my colleague and Mentor Sheen BRZ who many",
    "start": "26320",
    "end": "31679"
  },
  {
    "text": "of you in the room may know um he works with me he's an engineering lead um at",
    "start": "31679",
    "end": "37399"
  },
  {
    "text": "the LEGO Group along with myself um as a senior engineer um and also he became a",
    "start": "37399",
    "end": "44000"
  },
  {
    "text": "serverless hero in 2020 because of his huge passion for servus and adventure",
    "start": "44000",
    "end": "49199"
  },
  {
    "text": "and architectures and he's been creating and innovating ever since and also some great news is that",
    "start": "49199",
    "end": "57600"
  },
  {
    "text": "this year he came out with cist development AWS um his book and that was",
    "start": "57600",
    "end": "63039"
  },
  {
    "text": "along with our colleague Luke hedger um it's B I call it the serverless Bible",
    "start": "63039",
    "end": "68280"
  },
  {
    "text": "because it's basically the go-to for everything serverless whether you're learning or whether you're experienced",
    "start": "68280",
    "end": "73680"
  },
  {
    "text": "and and rumor has it they'll be giving out some fre copies later so I'll tell you a bit more about that at the end now",
    "start": "73680",
    "end": "80720"
  },
  {
    "text": "handing over to she thanks so Sarah Hamilton and if you notice her you know",
    "start": "80720",
    "end": "88200"
  },
  {
    "text": "teure handle you will know how much passionate she is with serverless a serverless her and uh the reason why we",
    "start": "88200",
    "end": "95799"
  },
  {
    "text": "decided to give this talk together is because sarup brings tons of experience",
    "start": "95799",
    "end": "101360"
  },
  {
    "text": "in terms of testing sness testing even to an architecture she has written blogs",
    "start": "101360",
    "end": "106880"
  },
  {
    "text": "she has spoke at sess days paries in the past about you know testing event in",
    "start": "106880",
    "end": "111960"
  },
  {
    "text": "architecture and also she's uh the chapter expert in the book talking about",
    "start": "111960",
    "end": "118200"
  },
  {
    "text": "the testing aspects of ser so Sarah Hamilton for you right so today's agenda is simple so",
    "start": "118200",
    "end": "128000"
  },
  {
    "start": "124000",
    "end": "255000"
  },
  {
    "text": "we'll just briefly touch on the elements of ADA and some of the challenges we",
    "start": "128000",
    "end": "133959"
  },
  {
    "text": "face and I will hand over to Sarah to take you through to the different",
    "start": "133959",
    "end": "139519"
  },
  {
    "text": "aspects of challenges and how we can try and mitigate or overcome some of the",
    "start": "139519",
    "end": "145360"
  },
  {
    "text": "challenges and then we will kind of close the session uh with some kind of of you know maybe controversial thoughts",
    "start": "145360",
    "end": "151879"
  },
  {
    "text": "on QA Q's role in servers and those sort of things right who was here for the",
    "start": "151879",
    "end": "160080"
  },
  {
    "text": "2022 sist sorry Ed day um right just a",
    "start": "160080",
    "end": "165480"
  },
  {
    "text": "few hands okay so I was here speaking about event architecture and uh its",
    "start": "165480",
    "end": "172280"
  },
  {
    "text": "impact at an Enterprise skin now I might have you know said one or two jokes but",
    "start": "172280",
    "end": "179920"
  },
  {
    "text": "one of my colleagues he later said at the office she have you ever tried standup ComEd comedian I was like I",
    "start": "179920",
    "end": "188640"
  },
  {
    "text": "wasn't sure where he said you know you're really in true sense or you just making it up now because I know genetically this",
    "start": "188640",
    "end": "197200"
  },
  {
    "text": "is not a comic phase and this is not a comedy piece right every conference I go",
    "start": "197200",
    "end": "202519"
  },
  {
    "text": "to I mean for today I just travel from home I usually stand in front of the mirror in the morning before I go to the",
    "start": "202519",
    "end": "209000"
  },
  {
    "text": "conference and smile and say Sheen smile smile because this is a grumpy face but",
    "start": "209000",
    "end": "215040"
  },
  {
    "text": "I do know few people who make us smile so they always work in p and they make",
    "start": "215040",
    "end": "224360"
  },
  {
    "text": "us you know love smile all sorts of things but beyond the comedy they work",
    "start": "224360",
    "end": "229879"
  },
  {
    "text": "as a pair so when they work as a pair there is mutual respect they give enough",
    "start": "229879",
    "end": "236120"
  },
  {
    "text": "space for each other they understand you know each other's kind of language and",
    "start": "236120",
    "end": "242480"
  },
  {
    "text": "that's what makes them successful in their you know what they do that's fine",
    "start": "242480",
    "end": "247760"
  },
  {
    "text": "but this is not a comedy show this is kind of you know event one so let's switch over to uh the current topic of",
    "start": "247760",
    "end": "254439"
  },
  {
    "text": "today so if you check uh event or modern application for example you have",
    "start": "254439",
    "end": "261959"
  },
  {
    "start": "255000",
    "end": "600000"
  },
  {
    "text": "serverless comput you have containers all sorts of containers and so many",
    "start": "261959",
    "end": "268160"
  },
  {
    "text": "other things API is events and messages and all sorts of things moving around",
    "start": "268160",
    "end": "273600"
  },
  {
    "text": "because Business from The Business Point of View we need to bring in all these",
    "start": "273600",
    "end": "279039"
  },
  {
    "text": "abilities to our application now it doesn't even have cost because I",
    "start": "279039",
    "end": "284800"
  },
  {
    "text": "couldn't find a proper word that fits in this sort of you know ability way so this is the challenge we have in modern",
    "start": "284800",
    "end": "292520"
  },
  {
    "text": "kind of you know systems to say for example if you take",
    "start": "292520",
    "end": "297720"
  },
  {
    "text": "extensibility we need to build system such a way that we can extend it how do we do that we think in terms of",
    "start": "297720",
    "end": "304320"
  },
  {
    "text": "modularity or modules so when we have observ how do you do that because I",
    "start": "304320",
    "end": "310120"
  },
  {
    "text": "always say that observing something in a pond is May better or easier than",
    "start": "310120",
    "end": "317240"
  },
  {
    "text": "absorbing the whole ocean so that sort of things that we need to kind of think",
    "start": "317240",
    "end": "322319"
  },
  {
    "text": "in terms of building modern event applications so this is where a duo or a",
    "start": "322319",
    "end": "329240"
  },
  {
    "text": "pair come in to kind of help us you know make all these things happen luckily in",
    "start": "329240",
    "end": "338000"
  },
  {
    "text": "20122 reinvent keynote Verner vas C of misson he said it so he said the modern",
    "start": "338000",
    "end": "349000"
  },
  {
    "text": "you know application building basic architecture principles or concepts",
    "start": "349000",
    "end": "354880"
  },
  {
    "text": "asynchrony and you these two play can kind of you know par act to make our",
    "start": "354880",
    "end": "362800"
  },
  {
    "text": "systems behave and also make us build the systems the right way so before we",
    "start": "362800",
    "end": "369960"
  },
  {
    "text": "you know look too much into some of the challenges Let's uh just simply setting",
    "start": "369960",
    "end": "375280"
  },
  {
    "text": "the scene if you are someone you know new to EV driven architecture and uh",
    "start": "375280",
    "end": "381120"
  },
  {
    "text": "asynchronous uh behaviors so let's start with a simple synchronous um uh you know",
    "start": "381120",
    "end": "387520"
  },
  {
    "text": "application or communication so two Services here one consumer a",
    "start": "387520",
    "end": "392720"
  },
  {
    "text": "consumes you know service B it could be like uh you asking the price of a",
    "start": "392720",
    "end": "398000"
  },
  {
    "text": "product or a you know stock level or something so this is a synchronous communication because you as a user",
    "start": "398000",
    "end": "404199"
  },
  {
    "text": "behind the say a e-commerce website waiting there to get the price okay",
    "start": "404199",
    "end": "409680"
  },
  {
    "text": "because this needs to happen there and then good let's look at a different scenario so here two",
    "start": "409680",
    "end": "416840"
  },
  {
    "text": "services and say service d is like a payment service provider payment service",
    "start": "416840",
    "end": "422840"
  },
  {
    "text": "okay so service C in this case is uh say shipping or order fulfillment so what it",
    "start": "422840",
    "end": "430319"
  },
  {
    "text": "does is like uh so you already kind of you know authorize the payments before shipping they need to now transfer the",
    "start": "430319",
    "end": "436720"
  },
  {
    "text": "funds from your account to retailers account so they submit you know the servic submits hundreds of payment IDs",
    "start": "436720",
    "end": "444160"
  },
  {
    "text": "to service D service D will go out to the banks and the card providers to kind of transfer the the money the way they",
    "start": "444160",
    "end": "450960"
  },
  {
    "text": "do is like every so often it submits a batch of IDs like hundreds or thousands",
    "start": "450960",
    "end": "457199"
  },
  {
    "text": "depending on how busy it other business is so we have a problem now service",
    "start": "457199",
    "end": "465120"
  },
  {
    "text": "cannot wait there waiting for service D to process all the payments and",
    "start": "465120",
    "end": "471199"
  },
  {
    "text": "everything so what happens is service D provides a status endpoint a typical you",
    "start": "471199",
    "end": "477280"
  },
  {
    "text": "know command query stuff so service C keeps pulling okay to check whether the",
    "start": "477280",
    "end": "484440"
  },
  {
    "text": "payments been kind of transferred etc etc service has a problem not one",
    "start": "484440",
    "end": "489840"
  },
  {
    "text": "problem multiple problems so for example how soon should we start polling after",
    "start": "489840",
    "end": "496360"
  },
  {
    "text": "submitting a batch after a minutes 5 minutes 1 hour don't know now how",
    "start": "496360",
    "end": "502479"
  },
  {
    "text": "frequently you should keep asking you know what is going on where are you where is the payment Etc every second",
    "start": "502479",
    "end": "508840"
  },
  {
    "text": "every 5 Seconds second every hour again you know hard and then how long how many",
    "start": "508840",
    "end": "515080"
  },
  {
    "text": "times should it ask now you multiply this with number of batches happening",
    "start": "515080",
    "end": "521080"
  },
  {
    "text": "same day so D might have given a batch ID and then all the different payment",
    "start": "521080",
    "end": "526200"
  },
  {
    "text": "IDs so though this is like asynchronous kind of situation but we have an issue",
    "start": "526200",
    "end": "532720"
  },
  {
    "text": "we have a problem so bring in EV one so now we are pushing the responsibility",
    "start": "532720",
    "end": "539800"
  },
  {
    "text": "over to D so C is kind of you know sitting back and relaxing because D now",
    "start": "539800",
    "end": "546760"
  },
  {
    "text": "notifies C when something happens this is the typical simple event driven",
    "start": "546760",
    "end": "552560"
  },
  {
    "text": "architecture in action so in this situation C just reacts when it gets",
    "start": "552560",
    "end": "559079"
  },
  {
    "text": "notified it could be individual payments or it could be the batch it doesn't",
    "start": "559079",
    "end": "564120"
  },
  {
    "text": "matter so and also you can you can you know think of asynchronous when it comes",
    "start": "564120",
    "end": "570079"
  },
  {
    "text": "to messaging right so a service pushes certain messages to a queue it's",
    "start": "570079",
    "end": "576240"
  },
  {
    "text": "completely kind of decoupled or Loosely coupled and the other service picks it up and processes so this is like a you",
    "start": "576240",
    "end": "583399"
  },
  {
    "text": "know the event architecture as synchr in you know one page okay so what is you",
    "start": "583399",
    "end": "590519"
  },
  {
    "text": "know event architecture it's a simple thing like where events kind of Drive",
    "start": "590519",
    "end": "595640"
  },
  {
    "text": "the action but things happen as synchronously now if you think of um",
    "start": "595640",
    "end": "600880"
  },
  {
    "start": "600000",
    "end": "845000"
  },
  {
    "text": "event architecture simple thing you might have heard many times today there are four main elements so there is a",
    "start": "600880",
    "end": "607839"
  },
  {
    "text": "event producer and there is a event carrier and there are bunch of consumers",
    "start": "607839",
    "end": "613800"
  },
  {
    "text": "so they all kind of consume and events so this is kind of the four basic things",
    "start": "613800",
    "end": "621040"
  },
  {
    "text": "you will hear again and again when we talk about Eda so in terms of a producer",
    "start": "621040",
    "end": "627320"
  },
  {
    "text": "who is a producer someone who ious uh event so there are certain things that",
    "start": "627320",
    "end": "633880"
  },
  {
    "text": "you hear when it comes to a producer I know in the David day in the morning keynote he said you know producers",
    "start": "633880",
    "end": "640480"
  },
  {
    "text": "should never know about the consumers that is also the case in most cases unless it's kind of you know your",
    "start": "640480",
    "end": "646160"
  },
  {
    "text": "colleagues team as a consumer sitting across so there are there are certain things that we need to you know put in",
    "start": "646160",
    "end": "652680"
  },
  {
    "text": "place for the bment of the architecture and similarly consumers have responsibil",
    "start": "652680",
    "end": "659680"
  },
  {
    "text": "as well for example consumers cannot expect you know one one once delivery",
    "start": "659680",
    "end": "666519"
  },
  {
    "text": "they can expect you know the duplicate so they should be in a position to take care of those things um as as they",
    "start": "666519",
    "end": "673320"
  },
  {
    "text": "consume uh events so one of the patterns very common is like um consumers as they",
    "start": "673320",
    "end": "679279"
  },
  {
    "text": "receive the events they often store the event temporarily before processing",
    "start": "679279",
    "end": "684560"
  },
  {
    "text": "there is a name for it called a storage first pattern Eric who is you know Johnson who is you know came up with the",
    "start": "684560",
    "end": "691480"
  },
  {
    "text": "name this is similar to the Inbox and outbox pattern so these are the things that we need to consider when we you",
    "start": "691480",
    "end": "698079"
  },
  {
    "text": "know build consumers for consumers in the even to1 architecture so then we",
    "start": "698079",
    "end": "703800"
  },
  {
    "text": "have the typical carriers this is this is not as different names event broker or a carrier or a event bus or Bridge",
    "start": "703800",
    "end": "711720"
  },
  {
    "text": "etc etc but the point is that this is like the transport you publish the",
    "start": "711720",
    "end": "716800"
  },
  {
    "text": "events onto a medium and it gets to different consumers as as required and",
    "start": "716800",
    "end": "722200"
  },
  {
    "text": "of course you can do you know filtering and Transformations and um you know various other things depending on the",
    "start": "722200",
    "end": "728800"
  },
  {
    "text": "capabilities of things that comes to takes us to the events so again you",
    "start": "728800",
    "end": "734839"
  },
  {
    "text": "heard many times even is something that already happens but what I want to",
    "start": "734839",
    "end": "740560"
  },
  {
    "text": "briefly bring to your attention is um something uh Dave touched on earlier",
    "start": "740560",
    "end": "746000"
  },
  {
    "text": "keynote is designing uh the events the importance why you should give the",
    "start": "746000",
    "end": "751760"
  },
  {
    "text": "importance to uh the events when you structure your",
    "start": "751760",
    "end": "757279"
  },
  {
    "text": "events so this is basically a simple event event P event schema so the detail",
    "start": "757959",
    "end": "765480"
  },
  {
    "text": "part on the left the blue one is where we can supply our payload any Json data",
    "start": "765480",
    "end": "773800"
  },
  {
    "text": "object we can dump there but it would make sense for your growth of your",
    "start": "773800",
    "end": "780680"
  },
  {
    "text": "architecture to think and bring some structure so the way I propose this I",
    "start": "780680",
    "end": "787000"
  },
  {
    "text": "been kind of proposing this structure from uh since the days of even Bridge um",
    "start": "787000",
    "end": "792360"
  },
  {
    "text": "is to separate out into metadata and data section what that will allow us to",
    "start": "792360",
    "end": "798519"
  },
  {
    "text": "do is like uh add some of the metadata sort of aspects of the event separate",
    "start": "798519",
    "end": "805560"
  },
  {
    "text": "out from the as actual the insance data that is is the data element so here you",
    "start": "805560",
    "end": "811040"
  },
  {
    "text": "can supply the event ID or your own um say event version for example you can",
    "start": "811040",
    "end": "817320"
  },
  {
    "text": "also say TTL Valu so for example the downstream consumers they know that okay",
    "start": "817320",
    "end": "822760"
  },
  {
    "text": "this event must be persisted say I don't know 100 days or whatever so all these",
    "start": "822760",
    "end": "828040"
  },
  {
    "text": "kind of information can be you know passed across as part of the metadata whereas the you know the data aspect is",
    "start": "828040",
    "end": "835279"
  },
  {
    "text": "basically your order details your customer data etc etc okay so that's all to do with uh the",
    "start": "835279",
    "end": "842440"
  },
  {
    "text": "basics of event driven architecture now let's move to the complexities again you",
    "start": "842440",
    "end": "848320"
  },
  {
    "start": "845000",
    "end": "1136000"
  },
  {
    "text": "hear the word you already heard the word as part of the keyot complexities it is there in modern system it is there in",
    "start": "848320",
    "end": "855680"
  },
  {
    "text": "human architecture it's kind of you know you cannot deny but why do we do that",
    "start": "855680",
    "end": "862040"
  },
  {
    "text": "why if there is complexity why event driven architecture is still favorable",
    "start": "862040",
    "end": "867079"
  },
  {
    "text": "or favorit of many organizations there are reasons but before we get there let's look at",
    "start": "867079",
    "end": "873519"
  },
  {
    "text": "complexities so accumulated versus distributed has anyone read this",
    "start": "873519",
    "end": "878680"
  },
  {
    "text": "book good so I'm not going to talk the content of the book but I just love the",
    "start": "878680",
    "end": "883880"
  },
  {
    "text": "picture or the you know the the picture of the book it basically explains",
    "start": "883880",
    "end": "889560"
  },
  {
    "text": "accumulated versus distributed complexity there if you look carefully now what do I mean by accumulated say",
    "start": "889560",
    "end": "897000"
  },
  {
    "text": "typical monolith I'm not talking about theere a monolith application in the past we built modules and you know all",
    "start": "897000",
    "end": "904480"
  },
  {
    "text": "sorts of things think that way now what we usually say is model looks so simple",
    "start": "904480",
    "end": "911639"
  },
  {
    "text": "right because externally it's so simple everything is within a particular kind",
    "start": "911639",
    "end": "918320"
  },
  {
    "text": "of you know uh module or you wrap things around but what it is doing is it's",
    "start": "918320",
    "end": "924720"
  },
  {
    "text": "hiding the complexity inside okay so that is not visible and because it's not",
    "start": "924720",
    "end": "931360"
  },
  {
    "text": "visible we just say oh you know it's this is all fine only Engineers you know",
    "start": "931360",
    "end": "936959"
  },
  {
    "text": "fight against these complexities know that is all hidden inside whereas if you",
    "start": "936959",
    "end": "942440"
  },
  {
    "text": "look at a distributed architecture where it's so obvious that",
    "start": "942440",
    "end": "948839"
  },
  {
    "text": "it's so complicated to look from outside because we have Services distributed all",
    "start": "948839",
    "end": "955000"
  },
  {
    "text": "around so here is a bounded context that has bunch of microservices there is the payments boundary C that has bunch of",
    "start": "955000",
    "end": "961839"
  },
  {
    "text": "microservices then they all communicate bya even bu or other Brokers and all sorts of things but the fact is if you",
    "start": "961839",
    "end": "969920"
  },
  {
    "text": "look internally in each of those services or microservices it's so simple because",
    "start": "969920",
    "end": "978040"
  },
  {
    "text": "they all you know usually single purpose do one thing they have their own kind of",
    "start": "978040",
    "end": "984000"
  },
  {
    "text": "individual deployment pipeline it's kind of so simple this is one of the reason s",
    "start": "984000",
    "end": "989560"
  },
  {
    "text": "why allows us to satisfy some of those abilities that I mentioned earlier on so",
    "start": "989560",
    "end": "997519"
  },
  {
    "text": "it exist complex exists and it exists because we",
    "start": "997519",
    "end": "1003079"
  },
  {
    "text": "need to achieve all these abilities that's fine but how do we do that on the other side of the spectrum",
    "start": "1003079",
    "end": "1010839"
  },
  {
    "text": "we have these things coming along incremental and iterative developer",
    "start": "1010839",
    "end": "1016199"
  },
  {
    "text": "velocity we need to kind of keep moving fast fast flow go go go and then for",
    "start": "1016199",
    "end": "1022480"
  },
  {
    "text": "that we set up automated pipelines and then we can deploy any time any day any",
    "start": "1022480",
    "end": "1028480"
  },
  {
    "text": "number okay so keeps going and then to support that we have all these kind of",
    "start": "1028480",
    "end": "1034959"
  },
  {
    "text": "you know cool things alerting alarms and recoverability etc etc because business",
    "start": "1034959",
    "end": "1041640"
  },
  {
    "text": "and operational and development needs all kind of pushing us towards to to do",
    "start": "1041640",
    "end": "1047038"
  },
  {
    "text": "this right now the problem is this is all fine so",
    "start": "1047039",
    "end": "1054080"
  },
  {
    "text": "your team busy pushing out a feature then you see some blip on your dashboard",
    "start": "1054080",
    "end": "1061960"
  },
  {
    "text": "there is a problem with a service in production you switch over there to fix that problem while you still need to",
    "start": "1061960",
    "end": "1068720"
  },
  {
    "text": "push this you know fixes and things to other services out to production so it becomes a kind of a you know challenging",
    "start": "1068720",
    "end": "1076440"
  },
  {
    "text": "agge and that's why it it's more like a juggling so you are kind of always know",
    "start": "1076440",
    "end": "1083440"
  },
  {
    "text": "developing something fixing something pushing pushing out something etc etc I cannot juggle how how many of you can",
    "start": "1083440",
    "end": "1090600"
  },
  {
    "text": "juggle at least three balls again well just a few now it may look simple and",
    "start": "1090600",
    "end": "1097520"
  },
  {
    "text": "funny especially when you go to a kids's birthday party or something but I know it's not it's not it is kind of a",
    "start": "1097520",
    "end": "1104840"
  },
  {
    "text": "challenging act right to have that you need to have the right balance so if we",
    "start": "1104840",
    "end": "1112400"
  },
  {
    "text": "take this concept forward so we have all these you know complexities that we list",
    "start": "1112400",
    "end": "1120280"
  },
  {
    "text": "we also need to satisfy business and other goals to bring in everything else",
    "start": "1120280",
    "end": "1126280"
  },
  {
    "text": "for the business so that means we have to have a balance what we call a square",
    "start": "1126280",
    "end": "1134559"
  },
  {
    "text": "of balance so hand over to Sarah she will explain everything about how can",
    "start": "1134559",
    "end": "1141120"
  },
  {
    "start": "1136000",
    "end": "2541000"
  },
  {
    "text": "you balance this thanks so there's this concept called the",
    "start": "1141120",
    "end": "1146960"
  },
  {
    "text": "square of balance which our colleague Luke came up with and it's all described in the book as well and it really",
    "start": "1146960",
    "end": "1152679"
  },
  {
    "text": "summarizes quite nicely um how you might want to operate your system and the fact",
    "start": "1152679",
    "end": "1157840"
  },
  {
    "text": "that especially with synchronous um systems that it used to kind of be the",
    "start": "1157840",
    "end": "1164120"
  },
  {
    "text": "test would kind of catch a lot of things and you would need all of the other that I'm about to explain as well",
    "start": "1164120",
    "end": "1169480"
  },
  {
    "text": "um but this becomes particularly important in event driven architectures because of the asynchronous nature of it",
    "start": "1169480",
    "end": "1175679"
  },
  {
    "text": "so without further Ado the first one is to test your system so you want to have",
    "start": "1175679",
    "end": "1183159"
  },
  {
    "text": "comprehensive tests but you don't want to over test because you're likely going to want to test on the deployed",
    "start": "1183159",
    "end": "1189360"
  },
  {
    "text": "infrastructure and by doing this it's going to be quite time consuming in your cicd which is why it needs to be",
    "start": "1189360",
    "end": "1196200"
  },
  {
    "text": "balanced with um delivery where also because of um you've CH",
    "start": "1196200",
    "end": "1203320"
  },
  {
    "text": "probably chosen serverless in order to move quickly as a development team as well so you want to uh continue to",
    "start": "1203320",
    "end": "1209520"
  },
  {
    "text": "deliver quickly um but also have well tested systems and you also want to balance",
    "start": "1209520",
    "end": "1216159"
  },
  {
    "text": "this um with your observability so that if things do go wrong which they absolutely will um that you get notified",
    "start": "1216159",
    "end": "1224520"
  },
  {
    "text": "ASAP and then when things do go wrong you also want to be able to recover it's really key that you treat all of these",
    "start": "1224520",
    "end": "1230720"
  },
  {
    "text": "quite equally um and today we're going to focus on test and observe there's a",
    "start": "1230720",
    "end": "1237400"
  },
  {
    "text": "lot to say um but in the interest of time let's go deeper into testing and",
    "start": "1237400",
    "end": "1243799"
  },
  {
    "text": "observability so firstly starting out with testing which is kind of my area that I enjoy to work on um so testing",
    "start": "1244200",
    "end": "1252720"
  },
  {
    "text": "strategies tend to be quite different with asynchronous architectures uh versus traditional synchronous",
    "start": "1252720",
    "end": "1258080"
  },
  {
    "text": "architectur and the first reason and probably the most key reason is due to unpredictable",
    "start": "1258080",
    "end": "1264679"
  },
  {
    "text": "latency um so you can't predict how long an event is going to take to go through your system and you really need to",
    "start": "1264679",
    "end": "1270840"
  },
  {
    "text": "factor that into your testing strategy um and the second one is also",
    "start": "1270840",
    "end": "1276799"
  },
  {
    "text": "distributed systems so you're going to have lots of different services and you might consider um deploying different ones in",
    "start": "1276799",
    "end": "1284159"
  },
  {
    "text": "order to do an end to end test um but as we'll kind of describe as we go through this talk that might not be the right",
    "start": "1284159",
    "end": "1290080"
  },
  {
    "text": "thing to do and so traditionally you might have done an endtoend test to see do I get a 200 back some my service",
    "start": "1290080",
    "end": "1297720"
  },
  {
    "text": "which might include a whole big modelin um but realistically with a distributed",
    "start": "1297720",
    "end": "1303360"
  },
  {
    "text": "system you will have to jump through quite a lot of Hoops in order to perform that simple",
    "start": "1303360",
    "end": "1308679"
  },
  {
    "text": "test and then the next one is deciding what to test as I've already kind of described",
    "start": "1308679",
    "end": "1314330"
  },
  {
    "text": "[Music] um if you have a test every single thing it's going to be really time consuming",
    "start": "1314330",
    "end": "1319799"
  },
  {
    "text": "and that's going to really hold your delivery um so you need to kind of be quite picky about it so moving on into",
    "start": "1319799",
    "end": "1327840"
  },
  {
    "text": "um what Thea traditional testing pyramid looks like so we're all probably quite",
    "start": "1327840",
    "end": "1332880"
  },
  {
    "text": "familiar with this at the bottom we have unit tests and I'm not going to cover this too much because it's pretty much",
    "start": "1332880",
    "end": "1338120"
  },
  {
    "text": "exactly the same as if it were a syus architecture um testing your business logic and mocking out third parties and",
    "start": "1338120",
    "end": "1346080"
  },
  {
    "text": "just basically just testing business logic so we'll kind of leave that as it is and this should be totally",
    "start": "1346080",
    "end": "1351720"
  },
  {
    "text": "comprehensive um whether you're a startup or an Enterprise it's super easy and especially with Co code tools now um",
    "start": "1351720",
    "end": "1359200"
  },
  {
    "text": "there's no excuse really not to have your unit tests and they run so quickly then we move on to integration",
    "start": "1359200",
    "end": "1365320"
  },
  {
    "text": "testing which is my favorite um I think this covers things really nicely and",
    "start": "1365320",
    "end": "1370600"
  },
  {
    "text": "we'll talk about this quite a lot but we're going to work from the top down and put a question mark on endtoend",
    "start": "1370600",
    "end": "1377039"
  },
  {
    "text": "testing um and as I've already described that can be um quite challenging with",
    "start": "1377039",
    "end": "1382600"
  },
  {
    "text": "distributed systems so firstly before we decide on",
    "start": "1382600",
    "end": "1388240"
  },
  {
    "text": "whether we use an integration test or endtoend test we need to describe um think about what we actually want to",
    "start": "1388240",
    "end": "1394000"
  },
  {
    "text": "test and how we're going to test it so firstly we want to identify our",
    "start": "1394000",
    "end": "1399400"
  },
  {
    "text": "business critical flows and that's going to mean a lot of different things to different people but we'll try to kind",
    "start": "1399400",
    "end": "1405000"
  },
  {
    "text": "of narrow that down so let's take a system uh where we have a cart service and we have a front",
    "start": "1405000",
    "end": "1412640"
  },
  {
    "text": "end and the front end communicates with the cart service and you can see that if an order's been placed then",
    "start": "1412640",
    "end": "1418480"
  },
  {
    "text": "synchronously there'll be a network request the cart service and in the meantime the front end's going to have",
    "start": "1418480",
    "end": "1424679"
  },
  {
    "text": "some sort of a loading screen whilst it's long polling the cart service so the cart service is providing an API and",
    "start": "1424679",
    "end": "1431240"
  },
  {
    "text": "all of these systems are decco the cart service talks asynchronously to the marketing payments",
    "start": "1431240",
    "end": "1437880"
  },
  {
    "text": "and Rewards systems and they all don't know about each other and this is kind of what",
    "start": "1437880",
    "end": "1443400"
  },
  {
    "text": "we're going to work with uh for the next few slides and then the payment system when",
    "start": "1443400",
    "end": "1449960"
  },
  {
    "text": "that talks to its third party and says yeah okay it's going to send an asynchronous event back to the cart",
    "start": "1449960",
    "end": "1455039"
  },
  {
    "text": "service and then the long polling is going to succeed and the payment goes through in a happy",
    "start": "1455039",
    "end": "1461400"
  },
  {
    "text": "path so business criticality is different for every team um but for the",
    "start": "1461400",
    "end": "1467200"
  },
  {
    "text": "business as a whole I think is pretty clear that a payments outage would be uh pretty catastrophic because we can't",
    "start": "1467200",
    "end": "1473799"
  },
  {
    "text": "just retry that um the user is sat there waiting for this to succeed a rewards outage would not be",
    "start": "1473799",
    "end": "1481440"
  },
  {
    "text": "great it'd be a bad customer experience because the points wouldn't update on the points page but we can handle that",
    "start": "1481440",
    "end": "1488200"
  },
  {
    "text": "with error handling and it's kind of a medium severity and then a marketing",
    "start": "1488200",
    "end": "1493600"
  },
  {
    "text": "outage um well if the if the customer doesn't get an email that it's not ideal",
    "start": "1493600",
    "end": "1499279"
  },
  {
    "text": "but it's quite indirect profit loss so as a business that's how you can kind of frame it but within the individual",
    "start": "1499279",
    "end": "1505919"
  },
  {
    "text": "domains if you're in the marketing team you probably going to want to Define your business critical paths as a team",
    "start": "1505919",
    "end": "1512399"
  },
  {
    "text": "um which would be that the main flow should work but we're going to focus on",
    "start": "1512399",
    "end": "1517600"
  },
  {
    "text": "payments and the critical flows as a whole system so as you can see I've kind of",
    "start": "1517600",
    "end": "1525919"
  },
  {
    "text": "outlined where I think the main one should be because the customer is going to be directly affected and the test you may think um",
    "start": "1525919",
    "end": "1535480"
  },
  {
    "text": "let's test that the cart service returns successfully that we get a",
    "start": "1535480",
    "end": "1541360"
  },
  {
    "text": "200 but what is this actually testing if we wrote that test and just said hit this API what do we get back it's",
    "start": "1541360",
    "end": "1549159"
  },
  {
    "text": "testing that the cart service is working as expected it's testing that the payment service is working as expected",
    "start": "1549159",
    "end": "1555720"
  },
  {
    "text": "and it's also testing the third party stripe and um this is obviously a very basic architecture but just to kind of",
    "start": "1555720",
    "end": "1561360"
  },
  {
    "text": "describe you've got an API and then the event bridges are talking to each other and then we've got our third",
    "start": "1561360",
    "end": "1567440"
  },
  {
    "text": "party and I kind of think this is quite problematic um for many reasons the",
    "start": "1567440",
    "end": "1573320"
  },
  {
    "text": "first one being that there's a huge overhead in deploying both services in order to just perform this simple",
    "start": "1573320",
    "end": "1579679"
  },
  {
    "text": "test nextly there's then we coupling the services for the test originally we've",
    "start": "1579679",
    "end": "1585279"
  },
  {
    "text": "decided to go with a distributed system for the benefits that we get from that but now in the test we're deploying both",
    "start": "1585279",
    "end": "1591399"
  },
  {
    "text": "of them together and so then there's a blurred responsibility between the teams like",
    "start": "1591399",
    "end": "1596559"
  },
  {
    "text": "who actually owns this test who's going to maintain it um it to me it's not clear whether it should be the C team or",
    "start": "1596559",
    "end": "1603120"
  },
  {
    "text": "the payments team given that both need to be deployed um poor visibility of the",
    "start": "1603120",
    "end": "1609200"
  },
  {
    "text": "problem so if it is because payments has having an issue the endtoend test isn't really telling us anything so the huge",
    "start": "1609200",
    "end": "1616640"
  },
  {
    "text": "amount of overhead for that um is problematic and then we're also testing",
    "start": "1616640",
    "end": "1622240"
  },
  {
    "text": "the third party which we have no control of and it's also going to be a huge",
    "start": "1622240",
    "end": "1627520"
  },
  {
    "text": "amount of time in the CI Pipeline and so that's when I would",
    "start": "1627520",
    "end": "1632760"
  },
  {
    "text": "probably say ENT to end test might not be your best bet um on a side note you may consider if you're a bigger business",
    "start": "1632760",
    "end": "1639679"
  },
  {
    "text": "using Spight Cyprus or playright to kind of test it from the front end but um we're going to focus on the back",
    "start": "1639679",
    "end": "1646600"
  },
  {
    "text": "endend so if we break it down a bit further and we look at the two systems we can see I've added a bit more detail",
    "start": "1646600",
    "end": "1652000"
  },
  {
    "text": "to the cart service and we can see the payment service is using a step",
    "start": "1652000",
    "end": "1657279"
  },
  {
    "text": "function and so what we need to look at is the cart service needs to think what is the critical path for us and that's",
    "start": "1657279",
    "end": "1663440"
  },
  {
    "text": "going to be the API Gateway um whatever needs to happen in the middle that it puts the correct event onto the event",
    "start": "1663440",
    "end": "1669720"
  },
  {
    "text": "bridge and then we also have a critical path for the payments team where it receives an event and certain things",
    "start": "1669720",
    "end": "1676360"
  },
  {
    "text": "should happen um and this is very much an example um but it could be that the correct event ends up in Dynamo DB that",
    "start": "1676360",
    "end": "1684120"
  },
  {
    "text": "the step function is successful or that as you can see in this diagram we're saying that a um a success event needs",
    "start": "1684120",
    "end": "1692399"
  },
  {
    "text": "to be put back onto the event Bridge so that the cart service can then be aware um that it was",
    "start": "1692399",
    "end": "1699080"
  },
  {
    "text": "successful so to break this down for the cart service the test that we want to perform",
    "start": "1699200",
    "end": "1705320"
  },
  {
    "text": "is that if I send a valid um event that API Gateway then does a valid",
    "start": "1705320",
    "end": "1710360"
  },
  {
    "text": "transformed event end up on the eventbridge and how would we test",
    "start": "1710360",
    "end": "1716360"
  },
  {
    "text": "that so the challenge that we have here is that you can't directly interrogate",
    "start": "1716360",
    "end": "1721399"
  },
  {
    "text": "the event Bridge um for the correct event so say for example we have we're",
    "start": "1721399",
    "end": "1726440"
  },
  {
    "text": "using all AWS SDK in order to interrogate things such as Dynamo DB in",
    "start": "1726440",
    "end": "1731480"
  },
  {
    "text": "the next example but a vridge you can't do that so the test would be um and you",
    "start": "1731480",
    "end": "1738919"
  },
  {
    "text": "have to think about it kind of as almost an architecture in itself when you're designing these",
    "start": "1738919",
    "end": "1744720"
  },
  {
    "text": "tests so in the test we'll make a post to the the API Gateway on a deployed um",
    "start": "1744720",
    "end": "1750640"
  },
  {
    "text": "stack and then we're going to also before that has an sqsq um deployed that's just for the",
    "start": "1750640",
    "end": "1758480"
  },
  {
    "text": "test with an event Bridge rules so that we can then interrogate the SQ and receive the message from there um and in",
    "start": "1758480",
    "end": "1766039"
  },
  {
    "text": "case anyone is particularly interested there was a post that I wrote three years ago still seems relevant um and",
    "start": "1766039",
    "end": "1773080"
  },
  {
    "text": "that's kind of how to do this so I wasn't digging too deep into this um but also shout out to alios who I can see",
    "start": "1773080",
    "end": "1780159"
  },
  {
    "text": "Ben all the way at the back um helped out on this um a few years ago so uh do",
    "start": "1780159",
    "end": "1785320"
  },
  {
    "text": "take a look but the point here is that testing asynchronous architectures you really do",
    "start": "1785320",
    "end": "1791640"
  },
  {
    "text": "have to think quite deeply about adding extra um extra services times and is it",
    "start": "1791640",
    "end": "1799360"
  },
  {
    "text": "worth it so let's have a look at the payment service which in this example is a bit",
    "start": "1799360",
    "end": "1804799"
  },
  {
    "text": "more complicated so we have different test scenarios that we could decide on so uh when I send a valid event to the",
    "start": "1804799",
    "end": "1811799"
  },
  {
    "text": "event bridge is the transformed event does it end up in Dynamo DV secondly when I trigger the step fun",
    "start": "1811799",
    "end": "1819360"
  },
  {
    "text": "uh the step function with a valid event is the step function successful and thirdly when I send a",
    "start": "1819360",
    "end": "1826240"
  },
  {
    "text": "valid event to the event Bridge do I then get a successful message back on the event brid and I'm certainly not",
    "start": "1826240",
    "end": "1831600"
  },
  {
    "text": "saying that you should write all three but they're just different things that you might",
    "start": "1831600",
    "end": "1836840"
  },
  {
    "text": "consider so this may seem fairly overwhelming I probably should have um put some animation but for number one uh",
    "start": "1838039",
    "end": "1846200"
  },
  {
    "text": "what we're going to want to do is send a valid event onto the real event Bridge we'll have all this deployed before um",
    "start": "1846200",
    "end": "1853679"
  },
  {
    "text": "we've started and we'll use aw ssdk to interrogate Dynamo",
    "start": "1853679",
    "end": "1859399"
  },
  {
    "text": "DB and then for number two we're going to use the describe execution command from the step function um ads SDK and",
    "start": "1859399",
    "end": "1868519"
  },
  {
    "text": "for the third one we're going to do the exactly the same thing uh that we just did the previous one and deploy the sqsq",
    "start": "1868519",
    "end": "1874480"
  },
  {
    "text": "to interrogate the abridge so to dig into that a bit",
    "start": "1874480",
    "end": "1880000"
  },
  {
    "text": "further uh for the first one we're going to trigger the eventage and then perform",
    "start": "1880000",
    "end": "1885240"
  },
  {
    "text": "the get item um on the Dynamo table and then assert that the item is",
    "start": "1885240",
    "end": "1892559"
  },
  {
    "text": "correct but the challenge here with the asynchronous architectures is how do we wait for the item to arrive in",
    "start": "1892559",
    "end": "1898679"
  },
  {
    "text": "Dynamo and the reality is that you do just have to put some kind of clever",
    "start": "1898679",
    "end": "1904000"
  },
  {
    "text": "weight in there um and you want to make sure that your tests aren't flaky because that's going to cause you more",
    "start": "1904000",
    "end": "1909159"
  },
  {
    "text": "time as well um and so no one needs to kind of read through all of this but the",
    "start": "1909159",
    "end": "1914760"
  },
  {
    "text": "point is is when we do the get item from Dynamo the nicest way that I've kind of found of doing this is by using a",
    "start": "1914760",
    "end": "1920799"
  },
  {
    "text": "recursive function um so you can see that we're actually passing the get item",
    "start": "1920799",
    "end": "1926480"
  },
  {
    "text": "from sorry it's a query command from Dynamo um in order to keep trying until",
    "start": "1926480",
    "end": "1933279"
  },
  {
    "text": "the item arrives in Dynamo and so the retry function with back off would look",
    "start": "1933279",
    "end": "1938919"
  },
  {
    "text": "something like this um and essentially I mean you can see kind we put in",
    "start": "1938919",
    "end": "1944200"
  },
  {
    "text": "different console logs because it's quite a nice experience when you see it happening um in your",
    "start": "1944200",
    "end": "1949780"
  },
  {
    "text": "[Music] terminal and the way this works is we've kind of said well five times seems to",
    "start": "1949780",
    "end": "1955559"
  },
  {
    "text": "work every time and we rarely ever get failures um so you need to kind of like",
    "start": "1955559",
    "end": "1961080"
  },
  {
    "text": "iterate on these and make sure that they're not becoming flaky because it is difficult with the time that you have to",
    "start": "1961080",
    "end": "1967480"
  },
  {
    "text": "wait sometimes so then secondly what's the",
    "start": "1967480",
    "end": "1973480"
  },
  {
    "text": "step function successful um so what you're going to want to do is trigger the step function",
    "start": "1973480",
    "end": "1980000"
  },
  {
    "text": "directly um using a valid event and then perform the describe execution and",
    "start": "1980000",
    "end": "1986240"
  },
  {
    "text": "assert that the step function was successful and any outputs that you want are there and there's another challenge",
    "start": "1986240",
    "end": "1992519"
  },
  {
    "text": "here is that as you can see down here when you have lots of different step functions happening um it's hard to",
    "start": "1992519",
    "end": "1999639"
  },
  {
    "text": "actually go and interrogate the one that is the test um so how we've kind of combed this",
    "start": "1999639",
    "end": "2007360"
  },
  {
    "text": "is by by actually passing in um a name when you trigger the step function so",
    "start": "2007360",
    "end": "2013919"
  },
  {
    "text": "you can generate a uid or something else um and then execute the state machine",
    "start": "2013919",
    "end": "2020080"
  },
  {
    "text": "and then you can get the execution using the Arn and you can use that uid with",
    "start": "2020080",
    "end": "2025880"
  },
  {
    "text": "some various things um in order to get it and",
    "start": "2025880",
    "end": "2031400"
  },
  {
    "text": "[Music] so the next part is again and you can",
    "start": "2031400",
    "end": "2038320"
  },
  {
    "text": "see the way that we've done it here is just to if the execution status is running then you just need to wait and",
    "start": "2038320",
    "end": "2044159"
  },
  {
    "text": "use a recursive function in order to get the succeeded version and you kind of need to decide is it worth it and if",
    "start": "2044159",
    "end": "2050280"
  },
  {
    "text": "it's on the critical path then it probably is worth it um and so there's a there is a reason",
    "start": "2050280",
    "end": "2057839"
  },
  {
    "text": "why I chose to D directly invoke the step function rather than putting the event onto the event Bridge first um",
    "start": "2057839",
    "end": "2065480"
  },
  {
    "text": "which seems to cut out and probably isn't ideal that step and it's because",
    "start": "2065480",
    "end": "2070960"
  },
  {
    "text": "then you can't pass in the name and so what you would have to do is kind of do a bit of an awkward fetching of lots of",
    "start": "2070960",
    "end": "2078040"
  },
  {
    "text": "different step functions and interrogate each one until you get the correct one which is definitely not ideal in my",
    "start": "2078040",
    "end": "2086638"
  },
  {
    "text": "opinion and so the third one is if I put an event onto the event Bri then do I",
    "start": "2086639",
    "end": "2092358"
  },
  {
    "text": "get a success event back and so as you can imagine it's triggering the event Bridge uh recursively uh performing a",
    "start": "2092359",
    "end": "2099880"
  },
  {
    "text": "receive message on the sqsq that we've deployed and asserting that the event",
    "start": "2099880",
    "end": "2104920"
  },
  {
    "text": "was correct and so at the end of all of this",
    "start": "2104920",
    "end": "2110920"
  },
  {
    "text": "you need to make sure that you're cleaning all of these resources up in particular the sqsq because you want to",
    "start": "2110920",
    "end": "2116359"
  },
  {
    "text": "end up with tons of resources if you don't do this every time your CI",
    "start": "2116359",
    "end": "2122079"
  },
  {
    "text": "runs and so a question that you may be asking is should third party Services be",
    "start": "2122280",
    "end": "2127760"
  },
  {
    "text": "locked because as I described earlier um we don't really want to test that stripe",
    "start": "2127760",
    "end": "2133480"
  },
  {
    "text": "is working because we just can't control that and the answer is kind of",
    "start": "2133480",
    "end": "2138560"
  },
  {
    "text": "frustrating it really does depend um and I will share my opinion after a few",
    "start": "2138560",
    "end": "2144680"
  },
  {
    "text": "slides um and so what we can do in order to mock third party Services we have the",
    "start": "2144680",
    "end": "2152480"
  },
  {
    "text": "reality which is Lambda calling stripe I would hope the stripe is of most of the T time so a dis a reason why you might",
    "start": "2152480",
    "end": "2161000"
  },
  {
    "text": "mock as well as not testing the code that you don't own is it may block your",
    "start": "2161000",
    "end": "2167359"
  },
  {
    "text": "developer workflow um because if stripe is failing and you your CI pipeline",
    "start": "2167359",
    "end": "2174480"
  },
  {
    "text": "relies on that then that affects your delivery so you may want to consider setting up uh mock end points which",
    "start": "2174480",
    "end": "2181520"
  },
  {
    "text": "return realistic um responses and you might have heard of an open source to",
    "start": "2181520",
    "end": "2187760"
  },
  {
    "text": "called Wok to do this and it runs on a Docker container they also have an A",
    "start": "2187760",
    "end": "2193079"
  },
  {
    "text": "seress offering um but it's based on Java which is not my language of choice",
    "start": "2193079",
    "end": "2198520"
  },
  {
    "text": "so there's a lot of kind of complexity around um setting this up so it is powerful but you need to",
    "start": "2198520",
    "end": "2205880"
  },
  {
    "text": "decide if it's worth it for you and so if we have a look at this table that I've built up you want to",
    "start": "2205880",
    "end": "2212920"
  },
  {
    "text": "only test code that you have control of so mocking third parties is a great option um and no mo isn't going to do",
    "start": "2212920",
    "end": "2220520"
  },
  {
    "text": "this now you also want to have low overhead or low cost but if you're having these uh servers spun up then it",
    "start": "2220520",
    "end": "2228240"
  },
  {
    "text": "has to R like ec2 or ECS and if you're going to do one per um mocked third",
    "start": "2228240",
    "end": "2234880"
  },
  {
    "text": "party then that could become quite costly and not just from the ECS cost but also from",
    "start": "2234880",
    "end": "2240240"
  },
  {
    "text": "time and mock also need to be kept up to date uh which can be a bit of a pain um",
    "start": "2240240",
    "end": "2246520"
  },
  {
    "text": "and could be kind of sidelined and then you also I mean a key",
    "start": "2246520",
    "end": "2252319"
  },
  {
    "text": "reason why you might want to mock is the ability to test failure scenarios which of course I've gone through all those",
    "start": "2252319",
    "end": "2258400"
  },
  {
    "text": "nice happy paths but often the error handling and things like that are left neglected and can break without you",
    "start": "2258400",
    "end": "2264480"
  },
  {
    "text": "knowing so that's a huge reason to test uh to mock unhappy responses from third",
    "start": "2264480",
    "end": "2270560"
  },
  {
    "text": "parties so if it's worth it to you then um yeah that's a really big reason to do",
    "start": "2270560",
    "end": "2277160"
  },
  {
    "text": "it and then of course if you are having issues with your third parties then you",
    "start": "2277160",
    "end": "2285079"
  },
  {
    "text": "um you're going to have problems in your cicd if your third party going down in your test R them so that's a good reason",
    "start": "2285079",
    "end": "2291960"
  },
  {
    "text": "for mocking so no no one ever asks my opinion but I'll give my opinion so um I",
    "start": "2291960",
    "end": "2299920"
  },
  {
    "text": "think it I would say unless you're a pretty big Enterprise with maybe some dedicated people to work on this stuff",
    "start": "2299920",
    "end": "2306920"
  },
  {
    "text": "then I probably wouldn't do it um if you have a really unreliable third party and it's slowing you down then maybe you",
    "start": "2306920",
    "end": "2312920"
  },
  {
    "text": "should change third party um yeah quite familiar with that problem",
    "start": "2312920",
    "end": "2319880"
  },
  {
    "text": "um and so I would kind of say maybe it's worth it if you have the time and resources to be investing in it um and",
    "start": "2319880",
    "end": "2327480"
  },
  {
    "text": "also especially when we we're coming at this from a servess p perspective and now you're asking people to deploy",
    "start": "2327480",
    "end": "2333599"
  },
  {
    "text": "Docker containers it can feel like a huge overhead on the Developers",
    "start": "2333599",
    "end": "2339440"
  },
  {
    "text": "and so moving on from testing um this is a long old um speech but basically you",
    "start": "2340319",
    "end": "2347480"
  },
  {
    "text": "can't actually catch everything without testing in production um and this was",
    "start": "2347480",
    "end": "2352680"
  },
  {
    "text": "again Luke's quote from the book and so we must observe in order to",
    "start": "2352680",
    "end": "2358800"
  },
  {
    "text": "recover and so you really do need to get observability right you don't want to",
    "start": "2358800",
    "end": "2363960"
  },
  {
    "text": "have too much of it so you want at a glance dashboard so just have the really important stuff on One",
    "start": "2363960",
    "end": "2370480"
  },
  {
    "text": "dashboard um Regular alert refinements are key because you might find that you",
    "start": "2370480",
    "end": "2375720"
  },
  {
    "text": "have too many alerts or not enough alerts and it needs to continually be refined over over time uh maybe every",
    "start": "2375720",
    "end": "2383079"
  },
  {
    "text": "two weeks or every month and you only want critical alerts because all too many times do I see",
    "start": "2383079",
    "end": "2389119"
  },
  {
    "text": "people ignoring alerts and noise I mean it happens to us all the time so we have like a Dumping Ground uh teams channel",
    "start": "2389119",
    "end": "2396440"
  },
  {
    "text": "for just all erors and then we have like a key one that we should um really pay attention",
    "start": "2396440",
    "end": "2401760"
  },
  {
    "text": "to and then you also want to have um it's called capability alerting so you",
    "start": "2401760",
    "end": "2406839"
  },
  {
    "text": "don't want three alerts going off at the same time for the same problem you want to try and like combine those into one",
    "start": "2406839",
    "end": "2412680"
  },
  {
    "text": "alert and the whole reason is just so that you don't start ignoring things and so if we want to Zone in on a",
    "start": "2412680",
    "end": "2420280"
  },
  {
    "text": "problem in production um firstly we need to have awareness that's key so alerts are your",
    "start": "2420280",
    "end": "2426040"
  },
  {
    "text": "best friend and then we also want to have visibility so as soon as we've got the alert we want to head to the add a",
    "start": "2426040",
    "end": "2432359"
  },
  {
    "text": "glance dashboard and check what the problem is and then we need to have some",
    "start": "2432359",
    "end": "2437480"
  },
  {
    "text": "understanding so that's when traces and logs come into play and then we'll have a diagnosis and hopefully that's going",
    "start": "2437480",
    "end": "2443359"
  },
  {
    "text": "to help us to recover really quickly and so if we have a look at step",
    "start": "2443359",
    "end": "2448560"
  },
  {
    "text": "one awareness a classic scenario is cloud watch logs that are streamed into",
    "start": "2448560",
    "end": "2454240"
  },
  {
    "text": "an observability tool and then a web hook to notify say teams or slack or",
    "start": "2454240",
    "end": "2459280"
  },
  {
    "text": "whatever uh you choose and a good example of how that might look and one that we have is like",
    "start": "2459280",
    "end": "2466400"
  },
  {
    "text": "high 500s on API Gateway and a great thing about this is there's a link to go directly to the",
    "start": "2466400",
    "end": "2472720"
  },
  {
    "text": "dashboard and so for visibility um the quick link shows the problem we can see the the problem is",
    "start": "2472720",
    "end": "2479760"
  },
  {
    "text": "over so we don't need to panic too much in this scenario um and then we go to the",
    "start": "2479760",
    "end": "2486119"
  },
  {
    "text": "service dashboard that it fact and we see API Gateway errors on the same one we see the Lambda error breakdown and we",
    "start": "2486119",
    "end": "2492319"
  },
  {
    "text": "can see that it did make it through to the Lambda wasn't just stopped at the API",
    "start": "2492319",
    "end": "2498240"
  },
  {
    "text": "Gateway and then because I know that there's a third party involved in the Lambda go check the third party response",
    "start": "2498240",
    "end": "2505079"
  },
  {
    "text": "time we can see that that was a peak and so I'm pretty sure that it was the third party that was a problem but if we check",
    "start": "2505079",
    "end": "2510760"
  },
  {
    "text": "the logs then we can see that there was a timeout um likely due to the third party and so at that point you then go",
    "start": "2510760",
    "end": "2516880"
  },
  {
    "text": "contact the third party and see if that was the issue so just to summarize we've had",
    "start": "2516880",
    "end": "2524440"
  },
  {
    "text": "test and observe and if anyone's interested then come and chat to us about recovery and deliver um all four",
    "start": "2524440",
    "end": "2531040"
  },
  {
    "text": "needs to be balanced out really well in order to operate uh nicely I appreciate we don't have a huge amount of time but",
    "start": "2531040",
    "end": "2537520"
  },
  {
    "text": "I'm going to ask Sheen um you wrote an article on um what the role of a QA is",
    "start": "2537520",
    "end": "2546480"
  },
  {
    "start": "2541000",
    "end": "2750000"
  },
  {
    "text": "in all of this because we've kind of talked about this but who is actually responsible um so do",
    "start": "2546480",
    "end": "2552559"
  },
  {
    "text": "you want to give your thoughts on that Sheen um yes so this is like a debatable",
    "start": "2552559",
    "end": "2558520"
  },
  {
    "text": "uh topic so how many of you from a team where there is no dedicated QA",
    "start": "2558520",
    "end": "2565440"
  },
  {
    "text": "engineer excellent thank you there's so many so I've been like observing how",
    "start": "2565440",
    "end": "2571760"
  },
  {
    "text": "backend teams especially in the event server ler operate and many times I see",
    "start": "2571760",
    "end": "2579520"
  },
  {
    "text": "there is no impact to the engineering team when the dedicated Q engineer goes",
    "start": "2579520",
    "end": "2585680"
  },
  {
    "text": "on holiday or they move to a different team and they find a long gap before",
    "start": "2585680",
    "end": "2590880"
  },
  {
    "text": "they fill in the you know the Gap and also then I looked at certain teams",
    "start": "2590880",
    "end": "2595960"
  },
  {
    "text": "where where on purpose they operate without a you know QA engineer so that's kind of the basis for",
    "start": "2595960",
    "end": "2604920"
  },
  {
    "text": "uh this this article that I wrote where I kind of debate few things you know why",
    "start": "2604920",
    "end": "2611480"
  },
  {
    "text": "where it benefits or where it you know like status quo because in the past we had a QA engineer or we have to have a Q",
    "start": "2611480",
    "end": "2618559"
  },
  {
    "text": "engineer but there are certain situations so that's kind of the background why I wrote uh this uh this",
    "start": "2618559",
    "end": "2626839"
  },
  {
    "text": "article so do you feel that we need a QA engineer in the team yeah so so it's",
    "start": "2626839",
    "end": "2634920"
  },
  {
    "text": "always like it depends so I say yes or no or depends or maybe",
    "start": "2634920",
    "end": "2644640"
  },
  {
    "text": "or the right answer could be all of the above I say this because it depends on",
    "start": "2644640",
    "end": "2651440"
  },
  {
    "text": "your team setup and the domain you focus on say you are a full stack with user",
    "start": "2651440",
    "end": "2657640"
  },
  {
    "text": "experience element then I think it makes you know sense to have a dedicated uh Q",
    "start": "2657640",
    "end": "2662960"
  },
  {
    "text": "engineer because you know you don't want your uses get impacted similar to you",
    "start": "2662960",
    "end": "2669000"
  },
  {
    "text": "know when you operate in kind of a shared environment whether it's the account or domain I I wouldn't recommend",
    "start": "2669000",
    "end": "2675400"
  },
  {
    "text": "sharing a domain or bounded context between two teams that brings all sorts of trouble and then often in a regulated",
    "start": "2675400",
    "end": "2682319"
  },
  {
    "text": "environment where you need to really scrutinize before you push anything out",
    "start": "2682319",
    "end": "2687480"
  },
  {
    "text": "to your customers or production so these are of the situations where it you know it it may benefit but in a typical kind",
    "start": "2687480",
    "end": "2695200"
  },
  {
    "text": "of you know microservice building common situations you can experiment without Q",
    "start": "2695200",
    "end": "2701720"
  },
  {
    "text": "engineer so that poses the question then whose responsibility is",
    "start": "2701720",
    "end": "2708680"
  },
  {
    "text": "quality it's everyone's responsibility yes indeed it is",
    "start": "2708680",
    "end": "2713720"
  },
  {
    "text": "everyone's responsibility quality is everyone's responsibility similar to how we are pushing the security all the way",
    "start": "2713720",
    "end": "2719720"
  },
  {
    "text": "to the left quality also going that way because it starts when you know when you",
    "start": "2719720",
    "end": "2724960"
  },
  {
    "text": "start off concepting your know ideas because QA should be part of how when",
    "start": "2724960",
    "end": "2730160"
  },
  {
    "text": "you design when you discuss when you review it's always there it's not just like you know when you when you raise",
    "start": "2730160",
    "end": "2736240"
  },
  {
    "text": "your PR to act as a PR gate or something it's always there and uh for that matter",
    "start": "2736240",
    "end": "2742559"
  },
  {
    "text": "it's not just Eda quality is everyone's responsibility",
    "start": "2742559",
    "end": "2747880"
  },
  {
    "text": "everywhere thank you everyone for joining and thanks to Ed for having those um so there is Sheen's book",
    "start": "2747880",
    "end": "2754480"
  },
  {
    "start": "2750000",
    "end": "2783000"
  },
  {
    "text": "signing directly after this downstairs I believe that there's 33 copies and maybe",
    "start": "2754480",
    "end": "2760200"
  },
  {
    "text": "about 20 or 40% off so worth going down and getting your hands on a copy it's a good read um but yeah thank you thank",
    "start": "2760200",
    "end": "2767760"
  },
  {
    "text": "you",
    "start": "2767760",
    "end": "2770760"
  }
]