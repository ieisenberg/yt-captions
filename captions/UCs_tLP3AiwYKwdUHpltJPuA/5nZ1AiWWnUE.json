[
  {
    "text": "hello everyone I'm George you may know",
    "start": "10719",
    "end": "12679"
  },
  {
    "text": "me from yesterday or any other Lambda",
    "start": "12679",
    "end": "14440"
  },
  {
    "text": "Jam that's ever happened",
    "start": "14440",
    "end": "16760"
  },
  {
    "text": "um uh so this talk is entitled comma",
    "start": "16760",
    "end": "20160"
  },
  {
    "text": "police I couldn't resist the radio head",
    "start": "20160",
    "end": "22840"
  },
  {
    "text": "pun uh but it was either going to be",
    "start": "22840",
    "end": "24800"
  },
  {
    "text": "that or Comm chameleon",
    "start": "24800",
    "end": "28640"
  },
  {
    "text": "but your reaction just told me I picked",
    "start": "31160",
    "end": "32719"
  },
  {
    "text": "the right",
    "start": "32719",
    "end": "33800"
  },
  {
    "text": "one all right so we've got all this data",
    "start": "33800",
    "end": "36600"
  },
  {
    "text": "it's in all these data formats these",
    "start": "36600",
    "end": "39000"
  },
  {
    "text": "ones right and probably some others but",
    "start": "39000",
    "end": "40840"
  },
  {
    "text": "it's all we've got all this data right",
    "start": "40840",
    "end": "43640"
  },
  {
    "text": "and where did we put it we put it in",
    "start": "43640",
    "end": "45960"
  },
  {
    "text": "text and that's where these data formats",
    "start": "45960",
    "end": "48199"
  },
  {
    "text": "come in we've got all this data in text",
    "start": "48199",
    "end": "50120"
  },
  {
    "text": "in formats and we need to deal with it",
    "start": "50120",
    "end": "52280"
  },
  {
    "text": "because text isn't very useful we need",
    "start": "52280",
    "end": "53719"
  },
  {
    "text": "to like get good stuff out of there in",
    "start": "53719",
    "end": "55680"
  },
  {
    "text": "order to be able to do cool things make",
    "start": "55680",
    "end": "57480"
  },
  {
    "text": "lots of money so um um this is the the",
    "start": "57480",
    "end": "63320"
  },
  {
    "text": "problem uh I've written a library called",
    "start": "63320",
    "end": "66400"
  },
  {
    "text": "SV for doing separated values often",
    "start": "66400",
    "end": "69280"
  },
  {
    "text": "separated by commas not necessarily they",
    "start": "69280",
    "end": "71200"
  },
  {
    "text": "could be separated by your favorite uni",
    "start": "71200",
    "end": "73439"
  },
  {
    "text": "code character so comma pipe poo",
    "start": "73439",
    "end": "76159"
  },
  {
    "text": "Emoji whatever you'd",
    "start": "76159",
    "end": "78159"
  },
  {
    "text": "like uh and I'm going to talk about a",
    "start": "78159",
    "end": "80640"
  },
  {
    "text": "whole bunch of things that are that I",
    "start": "80640",
    "end": "82079"
  },
  {
    "text": "think are very good about it um that I'd",
    "start": "82079",
    "end": "84119"
  },
  {
    "text": "like to see in other libraries or that",
    "start": "84119",
    "end": "85640"
  },
  {
    "text": "that people could improve again uh and",
    "start": "85640",
    "end": "88320"
  },
  {
    "text": "I'll tell you about some bad things",
    "start": "88320",
    "end": "89560"
  },
  {
    "text": "about it that you can avoid so hopefully",
    "start": "89560",
    "end": "91880"
  },
  {
    "text": "you'll you'll pick up some extra tricks",
    "start": "91880",
    "end": "94240"
  },
  {
    "text": "to to use in your library or uh to use",
    "start": "94240",
    "end": "98479"
  },
  {
    "text": "to help you choose which libraries to",
    "start": "98479",
    "end": "99960"
  },
  {
    "text": "use like you think oh George had a",
    "start": "99960",
    "end": "101680"
  },
  {
    "text": "really good idea with that I'm going to",
    "start": "101680",
    "end": "102759"
  },
  {
    "text": "look for that in a library or like",
    "start": "102759",
    "end": "104240"
  },
  {
    "text": "George is crazy I'm going to avoid",
    "start": "104240",
    "end": "106240"
  },
  {
    "text": "anything like his rubbish uh but either",
    "start": "106240",
    "end": "108640"
  },
  {
    "text": "way I",
    "start": "108640",
    "end": "110920"
  },
  {
    "text": "win so it's CSV it's very popular for",
    "start": "111040",
    "end": "114719"
  },
  {
    "text": "like data science everyone's doing that",
    "start": "114719",
    "end": "116240"
  },
  {
    "text": "I think uh and there's this document",
    "start": "116240",
    "end": "119399"
  },
  {
    "text": "called f c",
    "start": "119399",
    "end": "120759"
  },
  {
    "text": "4180 um yeah um so I think what happened",
    "start": "120759",
    "end": "126000"
  },
  {
    "text": "here is a bunch of Fortran programmers",
    "start": "126000",
    "end": "127880"
  },
  {
    "text": "started putting commas between texts and",
    "start": "127880",
    "end": "130440"
  },
  {
    "text": "they all did it very slightly",
    "start": "130440",
    "end": "131680"
  },
  {
    "text": "differently in a sort of Tower of Babel",
    "start": "131680",
    "end": "133520"
  },
  {
    "text": "kind of thing uh and then they said oh",
    "start": "133520",
    "end": "136080"
  },
  {
    "text": "no all our comma separated values are a",
    "start": "136080",
    "end": "138080"
  },
  {
    "text": "little bit different let's write a",
    "start": "138080",
    "end": "140000"
  },
  {
    "text": "document to standardize on and then they",
    "start": "140000",
    "end": "142599"
  },
  {
    "text": "won't be so they wrote a document to",
    "start": "142599",
    "end": "144599"
  },
  {
    "text": "standardize on and all the comma",
    "start": "144599",
    "end": "146360"
  },
  {
    "text": "separated values are still a little bit",
    "start": "146360",
    "end": "147879"
  },
  {
    "text": "different",
    "start": "147879",
    "end": "150879"
  },
  {
    "text": "um so the general structure of a library",
    "start": "151000",
    "end": "154640"
  },
  {
    "text": "for handling one of these data formats",
    "start": "154640",
    "end": "156560"
  },
  {
    "text": "is there's text and then we pause the",
    "start": "156560",
    "end": "159959"
  },
  {
    "text": "text and in the middle we get this",
    "start": "159959",
    "end": "161920"
  },
  {
    "text": "intermediate uh CSV data structure so",
    "start": "161920",
    "end": "164280"
  },
  {
    "text": "this is uh kind of like a a syntax tree",
    "start": "164280",
    "end": "166720"
  },
  {
    "text": "for the",
    "start": "166720",
    "end": "167959"
  },
  {
    "text": "CSV uh format and then from there we do",
    "start": "167959",
    "end": "170879"
  },
  {
    "text": "what I call decoding so we pull",
    "start": "170879",
    "end": "174040"
  },
  {
    "text": "out sorry we pull out these domain",
    "start": "174040",
    "end": "177959"
  },
  {
    "text": "specific user data types that we find",
    "start": "177959",
    "end": "180040"
  },
  {
    "text": "that we're actually interested",
    "start": "180040",
    "end": "181680"
  },
  {
    "text": "in okay and so I will try to be very",
    "start": "181680",
    "end": "184440"
  },
  {
    "text": "consistent with my vocabulary of paing",
    "start": "184440",
    "end": "186280"
  },
  {
    "text": "and",
    "start": "186280",
    "end": "188519"
  },
  {
    "text": "decoding and drinking water",
    "start": "190239",
    "end": "194280"
  },
  {
    "text": "um and and then we need to go the other",
    "start": "194280",
    "end": "197680"
  },
  {
    "text": "way as well so we have our data types",
    "start": "197680",
    "end": "201120"
  },
  {
    "text": "and we need a CSV out of them so we",
    "start": "201120",
    "end": "203920"
  },
  {
    "text": "encode to a CSV data structure and then",
    "start": "203920",
    "end": "205760"
  },
  {
    "text": "we print that data structure to text",
    "start": "205760",
    "end": "209879"
  },
  {
    "text": "uh this is one way we could design a",
    "start": "209879",
    "end": "211680"
  },
  {
    "text": "library in very broad Strokes or we",
    "start": "211680",
    "end": "213599"
  },
  {
    "text": "could do this we could skip the",
    "start": "213599",
    "end": "214640"
  },
  {
    "text": "intermediate data structure all together",
    "start": "214640",
    "end": "216560"
  },
  {
    "text": "and just say PA and decode in one go",
    "start": "216560",
    "end": "220200"
  },
  {
    "text": "right um or and then on on the other",
    "start": "220200",
    "end": "222680"
  },
  {
    "text": "side just encode and print so take my",
    "start": "222680",
    "end": "224360"
  },
  {
    "text": "data types and make text happen right",
    "start": "224360",
    "end": "227400"
  },
  {
    "text": "without an intermediate data",
    "start": "227400",
    "end": "230480"
  },
  {
    "text": "structure sorry um anyway so in SV we've",
    "start": "232200",
    "end": "237480"
  },
  {
    "text": "got we we chose the former method we've",
    "start": "237480",
    "end": "239480"
  },
  {
    "text": "got",
    "start": "239480",
    "end": "240239"
  },
  {
    "text": "we've got these very strict phases that",
    "start": "240239",
    "end": "242000"
  },
  {
    "text": "are separated from each other we pause",
    "start": "242000",
    "end": "243560"
  },
  {
    "text": "we decode we encode we print so we do",
    "start": "243560",
    "end": "245640"
  },
  {
    "text": "have an intermediate data",
    "start": "245640",
    "end": "247959"
  },
  {
    "text": "structure okay and there are benefits to",
    "start": "247959",
    "end": "249920"
  },
  {
    "text": "both sides there's a bunch of stuff we",
    "start": "249920",
    "end": "251159"
  },
  {
    "text": "lose out",
    "start": "251159",
    "end": "253519"
  },
  {
    "text": "on oh dear all right",
    "start": "253840",
    "end": "257359"
  },
  {
    "text": "um so for",
    "start": "257359",
    "end": "259280"
  },
  {
    "text": "example uh if you just go directly from",
    "start": "259280",
    "end": "261519"
  },
  {
    "text": "text to data types without an",
    "start": "261519",
    "end": "262800"
  },
  {
    "text": "intermediate CSV representation you're",
    "start": "262800",
    "end": "264919"
  },
  {
    "text": "obviously not going to allocate an",
    "start": "264919",
    "end": "266320"
  },
  {
    "text": "intermediate CSV representation so you",
    "start": "266320",
    "end": "268440"
  },
  {
    "text": "save on memory usage and allocate memory",
    "start": "268440",
    "end": "270080"
  },
  {
    "text": "takes time so you save on time uh it's",
    "start": "270080",
    "end": "272479"
  },
  {
    "text": "much easier to do streaming with an",
    "start": "272479",
    "end": "273960"
  },
  {
    "text": "approach like",
    "start": "273960",
    "end": "275280"
  },
  {
    "text": "this but we get some really interesting",
    "start": "275280",
    "end": "277680"
  },
  {
    "text": "opportunities that come up if we do make",
    "start": "277680",
    "end": "279160"
  },
  {
    "text": "an intermediate data structure and in",
    "start": "279160",
    "end": "280639"
  },
  {
    "text": "particular if we make a very pedantic",
    "start": "280639",
    "end": "282479"
  },
  {
    "text": "one um",
    "start": "282479",
    "end": "284960"
  },
  {
    "text": "so I think we have the potential to do",
    "start": "284960",
    "end": "287199"
  },
  {
    "text": "better errors um you could do good",
    "start": "287199",
    "end": "289560"
  },
  {
    "text": "errors with the direct approach as well",
    "start": "289560",
    "end": "290919"
  },
  {
    "text": "I think but I haven't explored that very",
    "start": "290919",
    "end": "292199"
  },
  {
    "text": "much um you can if you've got this",
    "start": "292199",
    "end": "295600"
  },
  {
    "text": "intermediate structure that's keeping",
    "start": "295600",
    "end": "297080"
  },
  {
    "text": "around all this information from paing",
    "start": "297080",
    "end": "301319"
  },
  {
    "text": "um sorry um you can make all these",
    "start": "302400",
    "end": "304880"
  },
  {
    "text": "decisions based on that structure that",
    "start": "304880",
    "end": "306240"
  },
  {
    "text": "would otherwise kind of be thrown away",
    "start": "306240",
    "end": "308919"
  },
  {
    "text": "um and you can manipulate the",
    "start": "308919",
    "end": "311160"
  },
  {
    "text": "intermediate structure itself and then",
    "start": "311160",
    "end": "313680"
  },
  {
    "text": "just print that thing back out without",
    "start": "313680",
    "end": "315080"
  },
  {
    "text": "even going to data types so I'm going to",
    "start": "315080",
    "end": "317520"
  },
  {
    "text": "elaborate on all of these things",
    "start": "317520",
    "end": "318680"
  },
  {
    "text": "throughout the talk and hopefully you'll",
    "start": "318680",
    "end": "320960"
  },
  {
    "text": "find them",
    "start": "320960",
    "end": "322360"
  },
  {
    "text": "cool so here's a different workflow in",
    "start": "322360",
    "end": "325319"
  },
  {
    "text": "this case where this is what I just",
    "start": "325319",
    "end": "327160"
  },
  {
    "text": "alluded to so we start with text we pass",
    "start": "327160",
    "end": "328840"
  },
  {
    "text": "it into a CSV data structure and then we",
    "start": "328840",
    "end": "331400"
  },
  {
    "text": "just manipulate the CSV data structure",
    "start": "331400",
    "end": "333280"
  },
  {
    "text": "itself directly we don't need to extract",
    "start": "333280",
    "end": "334880"
  },
  {
    "text": "out types of like our stuff we can just",
    "start": "334880",
    "end": "338680"
  },
  {
    "text": "manipulate the CSV",
    "start": "338680",
    "end": "341840"
  },
  {
    "text": "itself and then print that back",
    "start": "342160",
    "end": "345479"
  },
  {
    "text": "out so here's a CSV document and this",
    "start": "345479",
    "end": "348479"
  },
  {
    "text": "one's pretty atrocious um it's got some",
    "start": "348479",
    "end": "351840"
  },
  {
    "text": "single quotes for quoting things it's",
    "start": "351840",
    "end": "353960"
  },
  {
    "text": "got some double quotes for quoting",
    "start": "353960",
    "end": "355280"
  },
  {
    "text": "things some things are unquoted it's",
    "start": "355280",
    "end": "357520"
  },
  {
    "text": "like it's a total mess of quotes and",
    "start": "357520",
    "end": "359360"
  },
  {
    "text": "needs to be sorted out",
    "start": "359360",
    "end": "361840"
  },
  {
    "text": "immediately so here's the code to fix",
    "start": "361840",
    "end": "363919"
  },
  {
    "text": "that uh don't worry about the details",
    "start": "363919",
    "end": "366400"
  },
  {
    "text": "but in Broad Strokes I'll tell you what",
    "start": "366400",
    "end": "367479"
  },
  {
    "text": "it says this uses traversals from the",
    "start": "367479",
    "end": "369599"
  },
  {
    "text": "lens library to say Target every",
    "start": "369599",
    "end": "373280"
  },
  {
    "text": "position where there could be a quote in",
    "start": "373280",
    "end": "375080"
  },
  {
    "text": "the document and then this function",
    "start": "375080",
    "end": "376680"
  },
  {
    "text": "fixed quote says where there could be a",
    "start": "376680",
    "end": "378840"
  },
  {
    "text": "quote make sure there's a double quote",
    "start": "378840",
    "end": "380199"
  },
  {
    "text": "there okay and because we've composed",
    "start": "380199",
    "end": "382360"
  },
  {
    "text": "these traversals to Target every quote",
    "start": "382360",
    "end": "384280"
  },
  {
    "text": "in the document we just say run this",
    "start": "384280",
    "end": "386160"
  },
  {
    "text": "function that fixes the quotes every",
    "start": "386160",
    "end": "387919"
  },
  {
    "text": "quote in the document gets fixed so",
    "start": "387919",
    "end": "389599"
  },
  {
    "text": "turned this a horrible one into this",
    "start": "389599",
    "end": "392759"
  },
  {
    "text": "we've got all these quotes and they're",
    "start": "392759",
    "end": "393880"
  },
  {
    "text": "all double",
    "start": "393880",
    "end": "395319"
  },
  {
    "text": "quotes but what's really important about",
    "start": "395319",
    "end": "397400"
  },
  {
    "text": "this process that you might have missed",
    "start": "397400",
    "end": "398960"
  },
  {
    "text": "is there's a space after the comma after",
    "start": "398960",
    "end": "401960"
  },
  {
    "text": "George all right and in the process of",
    "start": "401960",
    "end": "404440"
  },
  {
    "text": "fixing all the quotes we have not messed",
    "start": "404440",
    "end": "406360"
  },
  {
    "text": "up the",
    "start": "406360",
    "end": "407599"
  },
  {
    "text": "spacing you can't see it but these are",
    "start": "407599",
    "end": "410759"
  },
  {
    "text": "carriage return line feed new line",
    "start": "410759",
    "end": "412440"
  },
  {
    "text": "terminated lines and they are still in",
    "start": "412440",
    "end": "415199"
  },
  {
    "text": "both of these document carriage return",
    "start": "415199",
    "end": "417080"
  },
  {
    "text": "line",
    "start": "417080",
    "end": "418039"
  },
  {
    "text": "feed Okay so when I fix all my quotes I",
    "start": "418039",
    "end": "420879"
  },
  {
    "text": "don't want to clobber everything else",
    "start": "420879",
    "end": "422479"
  },
  {
    "text": "about the",
    "start": "422479",
    "end": "423639"
  },
  {
    "text": "document so our intermediate data",
    "start": "423639",
    "end": "425720"
  },
  {
    "text": "structure is really pedantic about",
    "start": "425720",
    "end": "427759"
  },
  {
    "text": "keeping quoting information spacing",
    "start": "427759",
    "end": "429280"
  },
  {
    "text": "information new line information right",
    "start": "429280",
    "end": "432639"
  },
  {
    "text": "then you can write you can write these",
    "start": "432639",
    "end": "434639"
  },
  {
    "text": "functions that fix every quote and",
    "start": "434639",
    "end": "436919"
  },
  {
    "text": "everything else is the",
    "start": "436919",
    "end": "439720"
  },
  {
    "text": "same so you can use this to write these",
    "start": "442879",
    "end": "445960"
  },
  {
    "text": "custom sort of sanitization programs or",
    "start": "445960",
    "end": "448639"
  },
  {
    "text": "the these custom CSV linters you can go",
    "start": "448639",
    "end": "451800"
  },
  {
    "text": "through and ask the question is every",
    "start": "451800",
    "end": "453280"
  },
  {
    "text": "quote a double quote you can you know",
    "start": "453280",
    "end": "455720"
  },
  {
    "text": "you you don't have to just change quotes",
    "start": "455720",
    "end": "457280"
  },
  {
    "text": "you can say I hate carriage return line",
    "start": "457280",
    "end": "459080"
  },
  {
    "text": "feed let's do Line Feed all the way baby",
    "start": "459080",
    "end": "462000"
  },
  {
    "text": "right you can do",
    "start": "462000",
    "end": "463919"
  },
  {
    "text": "that I think like I think there are a",
    "start": "463919",
    "end": "466120"
  },
  {
    "text": "lot of people out there doing data",
    "start": "466120",
    "end": "467400"
  },
  {
    "text": "science not at L jam and they're doing",
    "start": "467400",
    "end": "470000"
  },
  {
    "text": "it like with python or r or Julia",
    "start": "470000",
    "end": "471800"
  },
  {
    "text": "because they've got these really mature",
    "start": "471800",
    "end": "473159"
  },
  {
    "text": "ecosystems full of tools right that that",
    "start": "473159",
    "end": "475680"
  },
  {
    "text": "Hol doesn't have or has in some form um",
    "start": "475680",
    "end": "479280"
  },
  {
    "text": "but like I can't get up here in 25",
    "start": "479280",
    "end": "481479"
  },
  {
    "text": "minutes and convince them to use H for",
    "start": "481479",
    "end": "482879"
  },
  {
    "text": "their data science just yet right I",
    "start": "482879",
    "end": "485360"
  },
  {
    "text": "think in a few years hopefully we will",
    "start": "485360",
    "end": "487240"
  },
  {
    "text": "but uh but what I can do is say look",
    "start": "487240",
    "end": "489680"
  },
  {
    "text": "you've got your python data pipeline or",
    "start": "489680",
    "end": "491479"
  },
  {
    "text": "whatever and you're calling like I don't",
    "start": "491479",
    "end": "494240"
  },
  {
    "text": "like like my Python",
    "start": "494240",
    "end": "496800"
  },
  {
    "text": "library. and then CSV turns into stuff",
    "start": "496800",
    "end": "500319"
  },
  {
    "text": "and then hopefully it's good right what",
    "start": "500319",
    "end": "502879"
  },
  {
    "text": "you could do is use my library to define",
    "start": "502879",
    "end": "505560"
  },
  {
    "text": "a really strict set of CSV lters and",
    "start": "505560",
    "end": "508039"
  },
  {
    "text": "sanitization tools put that at the front",
    "start": "508039",
    "end": "510919"
  },
  {
    "text": "keep your existing data pipeline but for",
    "start": "510919",
    "end": "513240"
  },
  {
    "text": "the actual data cleaning bit before the",
    "start": "513240",
    "end": "515039"
  },
  {
    "text": "interesting stuff happens you've got",
    "start": "515039",
    "end": "516399"
  },
  {
    "text": "this boring data cleaning job do that in",
    "start": "516399",
    "end": "518880"
  },
  {
    "text": "high school and then pass it to the same",
    "start": "518880",
    "end": "520800"
  },
  {
    "text": "pipeline you're already",
    "start": "520800",
    "end": "522200"
  },
  {
    "text": "using I think there's a big opportunity",
    "start": "522200",
    "end": "524399"
  },
  {
    "text": "there that I hope people will use this",
    "start": "524399",
    "end": "526920"
  },
  {
    "text": "for so that's why I have this",
    "start": "526920",
    "end": "529120"
  },
  {
    "text": "intermediate data structure in the",
    "start": "529120",
    "end": "530399"
  },
  {
    "text": "middle and that's why it keeps all",
    "start": "530399",
    "end": "532080"
  },
  {
    "text": "information like quotes and new lines",
    "start": "532080",
    "end": "533240"
  },
  {
    "text": "and",
    "start": "533240",
    "end": "535320"
  },
  {
    "text": "spaces but that's not the the main",
    "start": "535320",
    "end": "537640"
  },
  {
    "text": "reason people would use a house school",
    "start": "537640",
    "end": "538880"
  },
  {
    "text": "library for CS CV they would use it to",
    "start": "538880",
    "end": "541160"
  },
  {
    "text": "decode so they would say all right pause",
    "start": "541160",
    "end": "543480"
  },
  {
    "text": "the text give me the CSV data struction",
    "start": "543480",
    "end": "545079"
  },
  {
    "text": "now decode get types out of there right",
    "start": "545079",
    "end": "548200"
  },
  {
    "text": "like real types like types that I care",
    "start": "548200",
    "end": "549760"
  },
  {
    "text": "about that I can use so I want to show",
    "start": "549760",
    "end": "552360"
  },
  {
    "text": "you what that looks like uh in",
    "start": "552360",
    "end": "554519"
  },
  {
    "text": "SV we've got a data type for decoders",
    "start": "554519",
    "end": "556880"
  },
  {
    "text": "it's called decode it has two type",
    "start": "556880",
    "end": "558920"
  },
  {
    "text": "parameters s and a s is the string type",
    "start": "558920",
    "end": "560959"
  },
  {
    "text": "which is usually B string uh that we're",
    "start": "560959",
    "end": "563600"
  },
  {
    "text": "decoding from and a is the thing we're",
    "start": "563600",
    "end": "565880"
  },
  {
    "text": "decoding to",
    "start": "565880",
    "end": "569279"
  },
  {
    "text": "sorry I'm a bit sick",
    "start": "571399",
    "end": "574160"
  },
  {
    "text": "um uh so we've",
    "start": "574160",
    "end": "576240"
  },
  {
    "text": "got um all these primitive",
    "start": "576240",
    "end": "580240"
  },
  {
    "text": "decoders goodness me we've got all these",
    "start": "584040",
    "end": "586440"
  },
  {
    "text": "primitive",
    "start": "586440",
    "end": "587880"
  },
  {
    "text": "decas and now we need ways to stitch",
    "start": "587880",
    "end": "589880"
  },
  {
    "text": "them together we will stitch them",
    "start": "589880",
    "end": "591440"
  },
  {
    "text": "together using funter applicative and",
    "start": "591440",
    "end": "594079"
  },
  {
    "text": "ALT alt is nearly alternative if you",
    "start": "594079",
    "end": "595560"
  },
  {
    "text": "know what alternative is pretend it says",
    "start": "595560",
    "end": "596880"
  },
  {
    "text": "that so we've got these Primitives and",
    "start": "596880",
    "end": "598839"
  },
  {
    "text": "combinators",
    "start": "598839",
    "end": "600399"
  },
  {
    "text": "and we stitch together de codas that way",
    "start": "600399",
    "end": "601839"
  },
  {
    "text": "let's see what it looks",
    "start": "601839",
    "end": "603640"
  },
  {
    "text": "like so here's our CSV from before after",
    "start": "603640",
    "end": "606519"
  },
  {
    "text": "we fixed all the quotes we didn't really",
    "start": "606519",
    "end": "608800"
  },
  {
    "text": "need to but we did you know we've got",
    "start": "608800",
    "end": "611480"
  },
  {
    "text": "persons they have names and ages it's",
    "start": "611480",
    "end": "614120"
  },
  {
    "text": "the best example in the world and I use",
    "start": "614120",
    "end": "615760"
  },
  {
    "text": "it every",
    "start": "615760",
    "end": "616680"
  },
  {
    "text": "year I'm going to use a better one next",
    "start": "616680",
    "end": "621839"
  },
  {
    "text": "time uh so a person has a name and an",
    "start": "621839",
    "end": "624399"
  },
  {
    "text": "age text an INT we ride a Dakota by",
    "start": "624399",
    "end": "626600"
  },
  {
    "text": "getting the text then getting the in",
    "start": "626600",
    "end": "628920"
  },
  {
    "text": "calling the person Constructor and using",
    "start": "628920",
    "end": "630480"
  },
  {
    "text": "applicative to stitch it all",
    "start": "630480",
    "end": "633320"
  },
  {
    "text": "together here's another CSV file um",
    "start": "633320",
    "end": "636279"
  },
  {
    "text": "you've probably seen ones like this out",
    "start": "636279",
    "end": "637600"
  },
  {
    "text": "in the wild well we've got just variable",
    "start": "637600",
    "end": "639079"
  },
  {
    "text": "numbers of",
    "start": "639079",
    "end": "640440"
  },
  {
    "text": "columns",
    "start": "640440",
    "end": "643440"
  },
  {
    "text": "so so some people have a first name and",
    "start": "643440",
    "end": "645680"
  },
  {
    "text": "a last name and then an age but uh have",
    "start": "645680",
    "end": "648079"
  },
  {
    "text": "you seen the article of like all these",
    "start": "648079",
    "end": "650040"
  },
  {
    "text": "nonsense things programmers believe",
    "start": "650040",
    "end": "651519"
  },
  {
    "text": "about names so some people just have one",
    "start": "651519",
    "end": "653959"
  },
  {
    "text": "name right and and some people have you",
    "start": "653959",
    "end": "656959"
  },
  {
    "text": "know one really long name or they've got",
    "start": "656959",
    "end": "658720"
  },
  {
    "text": "two names in separate fields or they may",
    "start": "658720",
    "end": "660720"
  },
  {
    "text": "even just have like two names in One",
    "start": "660720",
    "end": "662800"
  },
  {
    "text": "field with a space it's CSV we do",
    "start": "662800",
    "end": "665639"
  },
  {
    "text": "whatever we want um so we can make a",
    "start": "665639",
    "end": "669160"
  },
  {
    "text": "data type that says well maybe a person",
    "start": "669160",
    "end": "671040"
  },
  {
    "text": "has one name or they have two names in",
    "start": "671040",
    "end": "673160"
  },
  {
    "text": "this",
    "start": "673160",
    "end": "675079"
  },
  {
    "text": "document and then we can use this",
    "start": "675079",
    "end": "676880"
  },
  {
    "text": "applicative style here to say well look",
    "start": "676880",
    "end": "679279"
  },
  {
    "text": "for a text and then an INT but if that's",
    "start": "679279",
    "end": "681120"
  },
  {
    "text": "not what you find instead look for two",
    "start": "681120",
    "end": "682959"
  },
  {
    "text": "texts and then an INT and that's what",
    "start": "682959",
    "end": "685320"
  },
  {
    "text": "this combinator over here is doing with",
    "start": "685320",
    "end": "686720"
  },
  {
    "text": "the with the exclamation mark in it",
    "start": "686720",
    "end": "689480"
  },
  {
    "text": "and then we can get a person out whether",
    "start": "689480",
    "end": "692040"
  },
  {
    "text": "they've got one or two names so I really",
    "start": "692040",
    "end": "693880"
  },
  {
    "text": "like this applicative style of of of",
    "start": "693880",
    "end": "695839"
  },
  {
    "text": "composition of",
    "start": "695839",
    "end": "698240"
  },
  {
    "text": "decoders decode is also a profunctor so",
    "start": "698240",
    "end": "700920"
  },
  {
    "text": "if you went to my talk last year at",
    "start": "700920",
    "end": "702320"
  },
  {
    "text": "lamba Jam you know what a pro funter is",
    "start": "702320",
    "end": "704000"
  },
  {
    "text": "decode is one of",
    "start": "704000",
    "end": "705360"
  },
  {
    "text": "those all right um and you'll say well",
    "start": "705360",
    "end": "708760"
  },
  {
    "text": "what's the benefit we get out of it",
    "start": "708760",
    "end": "710000"
  },
  {
    "text": "being profunctor",
    "start": "710000",
    "end": "711600"
  },
  {
    "text": "so if we've got a decod that takes a",
    "start": "711600",
    "end": "713720"
  },
  {
    "text": "bite string and turns it into an A but",
    "start": "713720",
    "end": "716240"
  },
  {
    "text": "we don't have a bite string we've got a",
    "start": "716240",
    "end": "717959"
  },
  {
    "text": "text right if you're a high school",
    "start": "717959",
    "end": "720040"
  },
  {
    "text": "programmer you've been traumatized by",
    "start": "720040",
    "end": "721760"
  },
  {
    "text": "different string types all over the shop",
    "start": "721760",
    "end": "723560"
  },
  {
    "text": "doing all these crazy different things",
    "start": "723560",
    "end": "726120"
  },
  {
    "text": "um but we know how to turn a text into a",
    "start": "726120",
    "end": "728600"
  },
  {
    "text": "b",
    "start": "728600",
    "end": "730480"
  },
  {
    "text": "string so what we do is we use dap from",
    "start": "730480",
    "end": "732839"
  },
  {
    "text": "Pro funter to uh to map over the input",
    "start": "732839",
    "end": "737279"
  },
  {
    "text": "with this function to say get the uh get",
    "start": "737279",
    "end": "740320"
  },
  {
    "text": "the bite string or get the text turn it",
    "start": "740320",
    "end": "742120"
  },
  {
    "text": "into a bite string feed that to the",
    "start": "742120",
    "end": "743440"
  },
  {
    "text": "other decoder now this whole thing is a",
    "start": "743440",
    "end": "745040"
  },
  {
    "text": "decoder that works on text",
    "start": "745040",
    "end": "748920"
  },
  {
    "text": "um so a lot of other libraries use type",
    "start": "749399",
    "end": "751760"
  },
  {
    "text": "classes for this so they they don't have",
    "start": "751760",
    "end": "754519"
  },
  {
    "text": "a I've got an applicative combinator",
    "start": "754519",
    "end": "756240"
  },
  {
    "text": "Style with and but a lot of a lot of",
    "start": "756240",
    "end": "758600"
  },
  {
    "text": "libraries are using a type class for",
    "start": "758600",
    "end": "760120"
  },
  {
    "text": "this so you might ask why not a type",
    "start": "760120",
    "end": "762600"
  },
  {
    "text": "class well a decoder is something that I",
    "start": "762600",
    "end": "764959"
  },
  {
    "text": "want to manipulate I want to build a few",
    "start": "764959",
    "end": "768079"
  },
  {
    "text": "Primitives some ways to manipulate them",
    "start": "768079",
    "end": "770480"
  },
  {
    "text": "some",
    "start": "770480",
    "end": "771399"
  },
  {
    "text": "combinators and also there are many",
    "start": "771399",
    "end": "773320"
  },
  {
    "text": "different ways to decode the same thing",
    "start": "773320",
    "end": "775560"
  },
  {
    "text": "there are lots of ways that a Boolean",
    "start": "775560",
    "end": "777079"
  },
  {
    "text": "could be encoded a Boolean could be like",
    "start": "777079",
    "end": "779760"
  },
  {
    "text": "a capital y or a capital N or it could",
    "start": "779760",
    "end": "782320"
  },
  {
    "text": "be like a one or a zero or like yes or",
    "start": "782320",
    "end": "785040"
  },
  {
    "text": "no or true or false capital letters",
    "start": "785040",
    "end": "787000"
  },
  {
    "text": "lowercase",
    "start": "787000",
    "end": "788240"
  },
  {
    "text": "letters if I would use a type class",
    "start": "788240",
    "end": "790279"
  },
  {
    "text": "based approach I would have to think of",
    "start": "790279",
    "end": "791480"
  },
  {
    "text": "every way that anyone could ever encod a",
    "start": "791480",
    "end": "793199"
  },
  {
    "text": "Boolean or I would have to prescribe",
    "start": "793199",
    "end": "796079"
  },
  {
    "text": "your booleans look like this and I",
    "start": "796079",
    "end": "798120"
  },
  {
    "text": "didn't want to do that uh so I just made",
    "start": "798120",
    "end": "800600"
  },
  {
    "text": "it data types that you can build",
    "start": "800600",
    "end": "801800"
  },
  {
    "text": "yourself and Stitch",
    "start": "801800",
    "end": "804279"
  },
  {
    "text": "together um here's a good function it's",
    "start": "804279",
    "end": "806920"
  },
  {
    "text": "called ignore failure and it says",
    "start": "806920",
    "end": "810480"
  },
  {
    "text": "says um it says uh given this decoder",
    "start": "810480",
    "end": "814600"
  },
  {
    "text": "try to run it on the column if it fails",
    "start": "814600",
    "end": "818240"
  },
  {
    "text": "just return nothing in maybe so don't",
    "start": "818240",
    "end": "820120"
  },
  {
    "text": "like don't stop the decoding process",
    "start": "820120",
    "end": "821800"
  },
  {
    "text": "just keep going but put nothing there so",
    "start": "821800",
    "end": "824839"
  },
  {
    "text": "here are some inss not actually um we've",
    "start": "824839",
    "end": "828880"
  },
  {
    "text": "got 3 4 8.8 one and null null is",
    "start": "828880",
    "end": "832279"
  },
  {
    "text": "everyone's favorite",
    "start": "832279",
    "end": "833600"
  },
  {
    "text": "int uh but if we and if we use ignore",
    "start": "833600",
    "end": "836079"
  },
  {
    "text": "failure we can say then we get back you",
    "start": "836079",
    "end": "839199"
  },
  {
    "text": "know just three just four nothing just",
    "start": "839199",
    "end": "840639"
  },
  {
    "text": "one nothing so we just get nothing",
    "start": "840639",
    "end": "842920"
  },
  {
    "text": "wherever it failed to get an INT",
    "start": "842920",
    "end": "845639"
  },
  {
    "text": "basically um and this thing has the type",
    "start": "845639",
    "end": "848680"
  },
  {
    "text": "decode sa to decode s maybe a if we were",
    "start": "848680",
    "end": "851880"
  },
  {
    "text": "using a type class based approach this",
    "start": "851880",
    "end": "853440"
  },
  {
    "text": "would be an excellent candidate for the",
    "start": "853440",
    "end": "855079"
  },
  {
    "text": "maybe instance for that type class but",
    "start": "855079",
    "end": "857639"
  },
  {
    "text": "it's one of three combinators of that",
    "start": "857639",
    "end": "859399"
  },
  {
    "text": "type in the library and I didn't want to",
    "start": "859399",
    "end": "860839"
  },
  {
    "text": "pick",
    "start": "860839",
    "end": "861920"
  },
  {
    "text": "one",
    "start": "861920",
    "end": "863639"
  },
  {
    "text": "um so we we've got a bunch of different",
    "start": "863639",
    "end": "866000"
  },
  {
    "text": "combinators with the same type with",
    "start": "866000",
    "end": "867199"
  },
  {
    "text": "different semantics and if I were use a",
    "start": "867199",
    "end": "869360"
  },
  {
    "text": "type class based approach I would often",
    "start": "869360",
    "end": "870680"
  },
  {
    "text": "have to pick one of them and say this is",
    "start": "870680",
    "end": "872000"
  },
  {
    "text": "the blessed one so um I'm sort of",
    "start": "872000",
    "end": "877279"
  },
  {
    "text": "vigorously depending defending my not",
    "start": "877279",
    "end": "879399"
  },
  {
    "text": "type class based approach here because",
    "start": "879399",
    "end": "881639"
  },
  {
    "text": "everyone else is using type classes for",
    "start": "881639",
    "end": "883000"
  },
  {
    "text": "this nearly but like I love type classes",
    "start": "883000",
    "end": "885279"
  },
  {
    "text": "so much I compos last year I gave a talk",
    "start": "885279",
    "end": "886959"
  },
  {
    "text": "about why type classes are the best",
    "start": "886959",
    "end": "888199"
  },
  {
    "text": "thing in the universe so I'm not against",
    "start": "888199",
    "end": "890519"
  },
  {
    "text": "type classes right I think there are",
    "start": "890519",
    "end": "892800"
  },
  {
    "text": "lots of things they're really useful for",
    "start": "892800",
    "end": "894639"
  },
  {
    "text": "and",
    "start": "894639",
    "end": "895560"
  },
  {
    "text": "I'm at this time I'm leaning against",
    "start": "895560",
    "end": "898480"
  },
  {
    "text": "using them for this task so I want to be",
    "start": "898480",
    "end": "901120"
  },
  {
    "text": "really clear about that because type",
    "start": "901120",
    "end": "902279"
  },
  {
    "text": "classes are the best thing in the",
    "start": "902279",
    "end": "905199"
  },
  {
    "text": "universe all right so let's pass some",
    "start": "906600",
    "end": "908560"
  },
  {
    "text": "more CSV now that we're getting good at",
    "start": "908560",
    "end": "910240"
  },
  {
    "text": "it you know we got to keep going um here",
    "start": "910240",
    "end": "913519"
  },
  {
    "text": "are some conferences these are really",
    "start": "913519",
    "end": "915040"
  },
  {
    "text": "good ones so we've got um we had compose",
    "start": "915040",
    "end": "918440"
  },
  {
    "text": "con last year and we had there'll be a",
    "start": "918440",
    "end": "920880"
  },
  {
    "text": "compose comp this year we had lamba Jam",
    "start": "920880",
    "end": "922480"
  },
  {
    "text": "last year there'll be a Lander Jam this",
    "start": "922480",
    "end": "924079"
  },
  {
    "text": "year presumably this this is a lot",
    "start": "924079",
    "end": "926360"
  },
  {
    "text": "longer I couldn't find like what date",
    "start": "926360",
    "end": "927639"
  },
  {
    "text": "Lander Jam was in 2014 or whatever but",
    "start": "927639",
    "end": "930440"
  },
  {
    "text": "you know I could have put it in here um",
    "start": "930440",
    "end": "933680"
  },
  {
    "text": "we've got this date format and it's like",
    "start": "933680",
    "end": "936040"
  },
  {
    "text": "y y y y mmdd um and we could just say",
    "start": "936040",
    "end": "938880"
  },
  {
    "text": "string or whatever but that's not cool",
    "start": "938880",
    "end": "942040"
  },
  {
    "text": "strings are not cool we're going to",
    "start": "942040",
    "end": "943759"
  },
  {
    "text": "destroy them wherever we see them put",
    "start": "943759",
    "end": "945240"
  },
  {
    "text": "something good there instead um so",
    "start": "945240",
    "end": "947639"
  },
  {
    "text": "there's a library called data. time it's",
    "start": "947639",
    "end": "949240"
  },
  {
    "text": "a pun on time because time is a",
    "start": "949240",
    "end": "951279"
  },
  {
    "text": "herb uh and this gives us a year month",
    "start": "951279",
    "end": "954600"
  },
  {
    "text": "day",
    "start": "954600",
    "end": "955600"
  },
  {
    "text": "type okay uh and so we can write a data",
    "start": "955600",
    "end": "958639"
  },
  {
    "text": "type for our uh conference uh CSV rose",
    "start": "958639",
    "end": "962839"
  },
  {
    "text": "that has a text for the name of the",
    "start": "962839",
    "end": "964040"
  },
  {
    "text": "conference and then a year month day now",
    "start": "964040",
    "end": "966959"
  },
  {
    "text": "we can decode text pretty easily we've",
    "start": "966959",
    "end": "968440"
  },
  {
    "text": "done it on previous slides but how are",
    "start": "968440",
    "end": "969680"
  },
  {
    "text": "we going to decode a year month",
    "start": "969680",
    "end": "972279"
  },
  {
    "text": "day I don't know but I do know how to PA",
    "start": "972279",
    "end": "975720"
  },
  {
    "text": "one so uh the time Library gives us a",
    "start": "975720",
    "end": "980639"
  },
  {
    "text": "paa written with the atop paing library",
    "start": "980639",
    "end": "984440"
  },
  {
    "text": "for paing a year month day given a a",
    "start": "984440",
    "end": "987160"
  },
  {
    "text": "bite string",
    "start": "987160",
    "end": "989040"
  },
  {
    "text": "and in SV we've got a way to build a",
    "start": "989040",
    "end": "991600"
  },
  {
    "text": "decoda out of a paa from your favorite",
    "start": "991600",
    "end": "995680"
  },
  {
    "text": "hasool paing",
    "start": "995680",
    "end": "997680"
  },
  {
    "text": "Library so if you've got a paa for your",
    "start": "997680",
    "end": "1000079"
  },
  {
    "text": "data type you you can just get a decoda",
    "start": "1000079",
    "end": "1001959"
  },
  {
    "text": "for it for free which is pretty cool so",
    "start": "1001959",
    "end": "1005279"
  },
  {
    "text": "we'll do that we'll call the Autopac uh",
    "start": "1005279",
    "end": "1008360"
  },
  {
    "text": "function from SV and it will we'll turn",
    "start": "1008360",
    "end": "1010160"
  },
  {
    "text": "that paa from the time Library into a",
    "start": "1010160",
    "end": "1011639"
  },
  {
    "text": "Dakota and now we can decode the",
    "start": "1011639",
    "end": "1013519"
  },
  {
    "text": "conference",
    "start": "1013519",
    "end": "1015920"
  },
  {
    "text": "CV which is pretty cool",
    "start": "1015959",
    "end": "1020519"
  },
  {
    "text": "another thing SV does is SV uses error",
    "start": "1020639",
    "end": "1023600"
  },
  {
    "text": "values not error messages error values",
    "start": "1023600",
    "end": "1028160"
  },
  {
    "text": "so this is an error value or this is",
    "start": "1028160",
    "end": "1030000"
  },
  {
    "text": "part of it there's a bunch more",
    "start": "1030000",
    "end": "1031199"
  },
  {
    "text": "Constructors but it's we've got all",
    "start": "1031199",
    "end": "1033760"
  },
  {
    "text": "these Constructors that tell us what the",
    "start": "1033760",
    "end": "1036199"
  },
  {
    "text": "error was so unexpected end of row says",
    "start": "1036199",
    "end": "1039400"
  },
  {
    "text": "I needed there to be another column but",
    "start": "1039400",
    "end": "1041000"
  },
  {
    "text": "there wasn't expected end of row says I",
    "start": "1041000",
    "end": "1044839"
  },
  {
    "text": "thought the row would end here but there",
    "start": "1044839",
    "end": "1046959"
  },
  {
    "text": "are three more columns so here's what",
    "start": "1046959",
    "end": "1049160"
  },
  {
    "text": "they",
    "start": "1049160",
    "end": "1050120"
  },
  {
    "text": "were right uh then we've got some really",
    "start": "1050120",
    "end": "1052840"
  },
  {
    "text": "boring generic ones that say just bad",
    "start": "1052840",
    "end": "1054520"
  },
  {
    "text": "pars or whatever and that just is a",
    "start": "1054520",
    "end": "1055840"
  },
  {
    "text": "string but and there's a bunch of other",
    "start": "1055840",
    "end": "1057720"
  },
  {
    "text": "ones I don't want to fully explain but",
    "start": "1057720",
    "end": "1060400"
  },
  {
    "text": "the thing is we've got this we've got",
    "start": "1060400",
    "end": "1061960"
  },
  {
    "text": "this data type that that describes what",
    "start": "1061960",
    "end": "1064480"
  },
  {
    "text": "kind of error occurred and then we can",
    "start": "1064480",
    "end": "1067000"
  },
  {
    "text": "do something about it so if you've got a",
    "start": "1067000",
    "end": "1069559"
  },
  {
    "text": "string for an error when an error",
    "start": "1069559",
    "end": "1071600"
  },
  {
    "text": "happens the only thing you can do is",
    "start": "1071600",
    "end": "1074360"
  },
  {
    "text": "show the string to the user and say here",
    "start": "1074360",
    "end": "1076039"
  },
  {
    "text": "you go I guess you could reverse the",
    "start": "1076039",
    "end": "1078400"
  },
  {
    "text": "string or do do whatever else but you",
    "start": "1078400",
    "end": "1080600"
  },
  {
    "text": "know you probably wouldn't",
    "start": "1080600",
    "end": "1082600"
  },
  {
    "text": "um but I can write a function that says",
    "start": "1082600",
    "end": "1085520"
  },
  {
    "text": "run this decoda and if errors happen",
    "start": "1085520",
    "end": "1088919"
  },
  {
    "text": "call this function to build a new",
    "start": "1088919",
    "end": "1091120"
  },
  {
    "text": "decoder and you know carry on or or do",
    "start": "1091120",
    "end": "1095240"
  },
  {
    "text": "whatever right so we can we can look at",
    "start": "1095240",
    "end": "1097919"
  },
  {
    "text": "errors inspect what kind of Errors have",
    "start": "1097919",
    "end": "1099720"
  },
  {
    "text": "occurred and do something depending on",
    "start": "1099720",
    "end": "1103320"
  },
  {
    "text": "that whereas if our errors were a string",
    "start": "1103320",
    "end": "1106360"
  },
  {
    "text": "we would have to like put our errors in",
    "start": "1106360",
    "end": "1108840"
  },
  {
    "text": "a string and then write a paraa for our",
    "start": "1108840",
    "end": "1111360"
  },
  {
    "text": "string that was our error message to",
    "start": "1111360",
    "end": "1112880"
  },
  {
    "text": "figure out what kind of error occurred",
    "start": "1112880",
    "end": "1114280"
  },
  {
    "text": "if we wanted to like recover from errors",
    "start": "1114280",
    "end": "1116520"
  },
  {
    "text": "we won't do that we'll do",
    "start": "1116520",
    "end": "1119240"
  },
  {
    "text": "this",
    "start": "1119240",
    "end": "1120840"
  },
  {
    "text": "um and SV has error values",
    "start": "1120840",
    "end": "1126640"
  },
  {
    "text": "plural so rather than using the the",
    "start": "1126640",
    "end": "1130039"
  },
  {
    "text": "famous either data type for errors SV",
    "start": "1130039",
    "end": "1132799"
  },
  {
    "text": "uses this data type called validation",
    "start": "1132799",
    "end": "1135600"
  },
  {
    "text": "validation goes like this data",
    "start": "1135600",
    "end": "1137240"
  },
  {
    "text": "validation EA equals failure e or",
    "start": "1137240",
    "end": "1139799"
  },
  {
    "text": "success a and you'll say George that's",
    "start": "1139799",
    "end": "1142120"
  },
  {
    "text": "just",
    "start": "1142120",
    "end": "1143360"
  },
  {
    "text": "either you're crazy",
    "start": "1143360",
    "end": "1146679"
  },
  {
    "text": "but I am but it's",
    "start": "1146679",
    "end": "1150440"
  },
  {
    "text": "not so the difference between either an",
    "start": "1150919",
    "end": "1154919"
  },
  {
    "text": "and uh and validation is in the",
    "start": "1154919",
    "end": "1157360"
  },
  {
    "text": "applicative instance so validation has",
    "start": "1157360",
    "end": "1160240"
  },
  {
    "text": "an applicative instance with a",
    "start": "1160240",
    "end": "1161640"
  },
  {
    "text": "semi-group constraint on E and what it",
    "start": "1161640",
    "end": "1164640"
  },
  {
    "text": "does is it uses that semi-group",
    "start": "1164640",
    "end": "1166600"
  },
  {
    "text": "constraint to append your errors",
    "start": "1166600",
    "end": "1168520"
  },
  {
    "text": "together",
    "start": "1168520",
    "end": "1170080"
  },
  {
    "text": "so if multiple errors happen you get all",
    "start": "1170080",
    "end": "1171960"
  },
  {
    "text": "of",
    "start": "1171960",
    "end": "1172960"
  },
  {
    "text": "them so we use uh we just get that",
    "start": "1172960",
    "end": "1175720"
  },
  {
    "text": "decode error type from the previous",
    "start": "1175720",
    "end": "1177320"
  },
  {
    "text": "slide wrap it in a non-empty list which",
    "start": "1177320",
    "end": "1179799"
  },
  {
    "text": "is a semi-",
    "start": "1179799",
    "end": "1181159"
  },
  {
    "text": "group and now we can run all our",
    "start": "1181159",
    "end": "1184320"
  },
  {
    "text": "decoders multiple ones can fail and we",
    "start": "1184320",
    "end": "1187120"
  },
  {
    "text": "get back all the errors that occurred",
    "start": "1187120",
    "end": "1189799"
  },
  {
    "text": "has this ever happened to",
    "start": "1189799",
    "end": "1192280"
  },
  {
    "text": "you you're typing away doing something",
    "start": "1192280",
    "end": "1194919"
  },
  {
    "text": "maybe you're writing a program maybe",
    "start": "1194919",
    "end": "1196320"
  },
  {
    "text": "something else you're typing away and",
    "start": "1196320",
    "end": "1197600"
  },
  {
    "text": "you hit go and the computer says sorry",
    "start": "1197600",
    "end": "1201480"
  },
  {
    "text": "there was an error on line",
    "start": "1201480",
    "end": "1203840"
  },
  {
    "text": "56 you say oh that's fine I've made a",
    "start": "1203840",
    "end": "1206760"
  },
  {
    "text": "mistake silly me thanks computer all",
    "start": "1206760",
    "end": "1208679"
  },
  {
    "text": "right 56 oh there's the problem fix it",
    "start": "1208679",
    "end": "1210679"
  },
  {
    "text": "all right",
    "start": "1210679",
    "end": "1213039"
  },
  {
    "text": "go sorry there was an error on line",
    "start": "1213039",
    "end": "1216520"
  },
  {
    "text": "57 oh okay all right fix line 57 there",
    "start": "1216520",
    "end": "1220440"
  },
  {
    "text": "we go all right go right sorry line 58",
    "start": "1220440",
    "end": "1226600"
  },
  {
    "text": "error right that's so not cool you can't",
    "start": "1226600",
    "end": "1229840"
  },
  {
    "text": "iterate that way you like fix one thing",
    "start": "1229840",
    "end": "1232400"
  },
  {
    "text": "and then another thing pops up just like",
    "start": "1232400",
    "end": "1234080"
  },
  {
    "text": "you could have told me all three lines",
    "start": "1234080",
    "end": "1235559"
  },
  {
    "text": "had errors on them and then I've would",
    "start": "1235559",
    "end": "1236799"
  },
  {
    "text": "have fixed them in once and I wouldn't",
    "start": "1236799",
    "end": "1238600"
  },
  {
    "text": "have had to press the button",
    "start": "1238600",
    "end": "1241320"
  },
  {
    "text": "again and that's what I'm going for",
    "start": "1241320",
    "end": "1245279"
  },
  {
    "text": "here so now let's have a really bad",
    "start": "1250400",
    "end": "1254000"
  },
  {
    "text": "attempt at pausing something so I can",
    "start": "1254000",
    "end": "1255640"
  },
  {
    "text": "demonstrate how good my errors are",
    "start": "1255640",
    "end": "1259000"
  },
  {
    "text": "here are three",
    "start": "1259000",
    "end": "1260440"
  },
  {
    "text": "strings let's pause them as two",
    "start": "1260440",
    "end": "1264480"
  },
  {
    "text": "ins so we'll write our decoder by",
    "start": "1265559",
    "end": "1267880"
  },
  {
    "text": "getting the int decoder and using it",
    "start": "1267880",
    "end": "1269880"
  },
  {
    "text": "twice and using applicative to put it in",
    "start": "1269880",
    "end": "1271360"
  },
  {
    "text": "the two",
    "start": "1271360",
    "end": "1272919"
  },
  {
    "text": "Constructor okay and now let's pause",
    "start": "1272919",
    "end": "1275080"
  },
  {
    "text": "that file see what happens errors happen",
    "start": "1275080",
    "end": "1278559"
  },
  {
    "text": "but in a good way so this says right I",
    "start": "1278559",
    "end": "1282480"
  },
  {
    "text": "couldn't pass the string a as an INT",
    "start": "1282480",
    "end": "1284240"
  },
  {
    "text": "that was a bad decode I couldn't pass",
    "start": "1284240",
    "end": "1287080"
  },
  {
    "text": "the string b as an INT that was a bad",
    "start": "1287080",
    "end": "1289520"
  },
  {
    "text": "decode and I hit an unexpected end of",
    "start": "1289520",
    "end": "1292120"
  },
  {
    "text": "row there were too many fields there was",
    "start": "1292120",
    "end": "1294080"
  },
  {
    "text": "one too many fields and its contents was",
    "start": "1294080",
    "end": "1297679"
  },
  {
    "text": "C that's everything wrong with our",
    "start": "1297679",
    "end": "1300200"
  },
  {
    "text": "attempt to to pause that file or to",
    "start": "1300200",
    "end": "1302640"
  },
  {
    "text": "decode that file",
    "start": "1302640",
    "end": "1305159"
  },
  {
    "text": "rather uh and some of it is too stringy",
    "start": "1305159",
    "end": "1307440"
  },
  {
    "text": "for my liking but it's a lot better than",
    "start": "1307440",
    "end": "1309960"
  },
  {
    "text": "you know a lot of other",
    "start": "1309960",
    "end": "1311440"
  },
  {
    "text": "things and I'm pretty happy with that",
    "start": "1311440",
    "end": "1313480"
  },
  {
    "text": "and I could handle this so I could I",
    "start": "1313480",
    "end": "1315320"
  },
  {
    "text": "could say well if there are bad decodes",
    "start": "1315320",
    "end": "1317440"
  },
  {
    "text": "I can't do a lot about that but maybe if",
    "start": "1317440",
    "end": "1319039"
  },
  {
    "text": "I only had the unexpected end of row",
    "start": "1319039",
    "end": "1320880"
  },
  {
    "text": "problem I could handle it in some other",
    "start": "1320880",
    "end": "1323039"
  },
  {
    "text": "way so I'm pretty happy with that as an",
    "start": "1323039",
    "end": "1326720"
  },
  {
    "text": "error uh and you'll say all right well",
    "start": "1326720",
    "end": "1328679"
  },
  {
    "text": "that's decoding that's One Direction",
    "start": "1328679",
    "end": "1330320"
  },
  {
    "text": "what about what about if I've got all my",
    "start": "1330320",
    "end": "1332240"
  },
  {
    "text": "hll data types and I need to make CSV",
    "start": "1332240",
    "end": "1334360"
  },
  {
    "text": "out of them well for that I would use",
    "start": "1334360",
    "end": "1336520"
  },
  {
    "text": "encoding I would encode to a CSV data",
    "start": "1336520",
    "end": "1338400"
  },
  {
    "text": "structure and then I would print the",
    "start": "1338400",
    "end": "1339360"
  },
  {
    "text": "data structure to text printing the data",
    "start": "1339360",
    "end": "1341480"
  },
  {
    "text": "structure to text is pretty boring and I",
    "start": "1341480",
    "end": "1343080"
  },
  {
    "text": "don't have much to say about it but I",
    "start": "1343080",
    "end": "1344360"
  },
  {
    "text": "will tell you all about",
    "start": "1344360",
    "end": "1346520"
  },
  {
    "text": "encoding so so we've got a data type for",
    "start": "1346520",
    "end": "1350279"
  },
  {
    "text": "encoding like we do with decoding",
    "start": "1350279",
    "end": "1352559"
  },
  {
    "text": "decoding was an applicative and I assume",
    "start": "1352559",
    "end": "1354760"
  },
  {
    "text": "you were all at my talk yesterday and so",
    "start": "1354760",
    "end": "1356760"
  },
  {
    "text": "you won't be surprised that I have these",
    "start": "1356760",
    "end": "1358960"
  },
  {
    "text": "Primitives as well you won't be",
    "start": "1358960",
    "end": "1360240"
  },
  {
    "text": "surprised that encoding is a",
    "start": "1360240",
    "end": "1362360"
  },
  {
    "text": "contravariant functor that's divisible",
    "start": "1362360",
    "end": "1364640"
  },
  {
    "text": "and",
    "start": "1364640",
    "end": "1365559"
  },
  {
    "text": "decidable so if you went to my talk",
    "start": "1365559",
    "end": "1367720"
  },
  {
    "text": "yesterday on divisible and decidable",
    "start": "1367720",
    "end": "1369760"
  },
  {
    "text": "functors and you came out of it thinking",
    "start": "1369760",
    "end": "1371799"
  },
  {
    "text": "oh that was full of lots of nonsense",
    "start": "1371799",
    "end": "1373720"
  },
  {
    "text": "madeup toy examples I've used it in my",
    "start": "1373720",
    "end": "1376279"
  },
  {
    "text": "CSV library and you can go and look at",
    "start": "1376279",
    "end": "1378080"
  },
  {
    "text": "that and that's really helpful because I",
    "start": "1378080",
    "end": "1380159"
  },
  {
    "text": "don't have time to explain those type",
    "start": "1380159",
    "end": "1381480"
  },
  {
    "text": "classes",
    "start": "1381480",
    "end": "1383400"
  },
  {
    "text": "now all right but we use uh we use",
    "start": "1383400",
    "end": "1386240"
  },
  {
    "text": "contravariant divisible and decidable to",
    "start": "1386240",
    "end": "1388640"
  },
  {
    "text": "compose together our encoders to split",
    "start": "1388640",
    "end": "1390440"
  },
  {
    "text": "up our data type and then you know put",
    "start": "1390440",
    "end": "1393919"
  },
  {
    "text": "it into columns effectively and we've",
    "start": "1393919",
    "end": "1396440"
  },
  {
    "text": "got semigroup as well and that's that's",
    "start": "1396440",
    "end": "1397919"
  },
  {
    "text": "helpful we've got all these Primitives",
    "start": "1397919",
    "end": "1400400"
  },
  {
    "text": "uh they'd be the ones you'd expect so",
    "start": "1400400",
    "end": "1401960"
  },
  {
    "text": "like like put an INT there or whatever a",
    "start": "1401960",
    "end": "1405039"
  },
  {
    "text": "really interesting one is encode of",
    "start": "1405039",
    "end": "1406799"
  },
  {
    "text": "which says given a so given a prism from",
    "start": "1406799",
    "end": "1409520"
  },
  {
    "text": "s to a so like if an S might be an A and",
    "start": "1409520",
    "end": "1412679"
  },
  {
    "text": "you know how to encode an a I'll tell",
    "start": "1412679",
    "end": "1414279"
  },
  {
    "text": "you how to encode an S right in fact",
    "start": "1414279",
    "end": "1417520"
  },
  {
    "text": "it's much more General than that and it",
    "start": "1417520",
    "end": "1418799"
  },
  {
    "text": "doesn't have to be a prism it has to be",
    "start": "1418799",
    "end": "1420159"
  },
  {
    "text": "like a a getting essay or something uh",
    "start": "1420159",
    "end": "1423000"
  },
  {
    "text": "so it works with lots of Optics but what",
    "start": "1423000",
    "end": "1424919"
  },
  {
    "text": "you can do is you can like if you came",
    "start": "1424919",
    "end": "1427200"
  },
  {
    "text": "out of my talk yesterday and thought",
    "start": "1427200",
    "end": "1428520"
  },
  {
    "text": "well divisible and decidable or rubbish",
    "start": "1428520",
    "end": "1430440"
  },
  {
    "text": "I hate them for some reason then you'd",
    "start": "1430440",
    "end": "1433240"
  },
  {
    "text": "be able to use this and not have to use",
    "start": "1433240",
    "end": "1435320"
  },
  {
    "text": "those combinators then you'd be able to",
    "start": "1435320",
    "end": "1437159"
  },
  {
    "text": "like say you have already have all these",
    "start": "1437159",
    "end": "1438600"
  },
  {
    "text": "prisms lying around for you or some type",
    "start": "1438600",
    "end": "1440640"
  },
  {
    "text": "you could just use encode of with all",
    "start": "1440640",
    "end": "1442000"
  },
  {
    "text": "your prisms and semi-group them all",
    "start": "1442000",
    "end": "1443400"
  },
  {
    "text": "together it would be very cool so we've",
    "start": "1443400",
    "end": "1446600"
  },
  {
    "text": "got encoding and it's a divisible",
    "start": "1446600",
    "end": "1448440"
  },
  {
    "text": "decidable contravariant",
    "start": "1448440",
    "end": "1450880"
  },
  {
    "text": "functor uh and it works pretty well and",
    "start": "1450880",
    "end": "1452960"
  },
  {
    "text": "I'm pretty happy about",
    "start": "1452960",
    "end": "1454919"
  },
  {
    "text": "it uh so everyone in the audience right",
    "start": "1454919",
    "end": "1459880"
  },
  {
    "text": "or at least like I think a lot of you",
    "start": "1459880",
    "end": "1462039"
  },
  {
    "text": "I've been talking about all these cool",
    "start": "1462039",
    "end": "1463520"
  },
  {
    "text": "features and like oh I've got more",
    "start": "1463520",
    "end": "1464919"
  },
  {
    "text": "errors than you or whatever and you're",
    "start": "1464919",
    "end": "1466960"
  },
  {
    "text": "like I don't care",
    "start": "1466960",
    "end": "1468960"
  },
  {
    "text": "nothing you've said so far matters",
    "start": "1468960",
    "end": "1470640"
  },
  {
    "text": "George you've got a CSV library right is",
    "start": "1470640",
    "end": "1473640"
  },
  {
    "text": "it fast that's the only thing that",
    "start": "1473640",
    "end": "1475840"
  },
  {
    "text": "matters I don't care if it like works or",
    "start": "1475840",
    "end": "1478360"
  },
  {
    "text": "is useful for anything else is it",
    "start": "1478360",
    "end": "1481200"
  },
  {
    "text": "fast preferably blazing",
    "start": "1481200",
    "end": "1485039"
  },
  {
    "text": "fast and I've got an answer for you",
    "start": "1485039",
    "end": "1490398"
  },
  {
    "text": "no so I've done some",
    "start": "1492640",
    "end": "1496279"
  },
  {
    "text": "benchmarks so this library is only like",
    "start": "1496320",
    "end": "1498840"
  },
  {
    "text": "I've just put up the first version",
    "start": "1498840",
    "end": "1500120"
  },
  {
    "text": "recently and then I haven't had time to",
    "start": "1500120",
    "end": "1501880"
  },
  {
    "text": "fix any of the problems with it because",
    "start": "1501880",
    "end": "1503200"
  },
  {
    "text": "I've been writing talks about",
    "start": "1503200",
    "end": "1506240"
  },
  {
    "text": "it",
    "start": "1507760",
    "end": "1509559"
  },
  {
    "text": "uh uh and and so so I but I did do some",
    "start": "1509559",
    "end": "1513320"
  },
  {
    "text": "benchmarks like I was I was happy to",
    "start": "1513320",
    "end": "1515200"
  },
  {
    "text": "release something that was dog slow as",
    "start": "1515200",
    "end": "1517520"
  },
  {
    "text": "long as I know just how horribly slow it",
    "start": "1517520",
    "end": "1519960"
  },
  {
    "text": "is so I did some benchmarks I used",
    "start": "1519960",
    "end": "1523559"
  },
  {
    "text": "Hedgehog to generate a a 100,000 line",
    "start": "1523559",
    "end": "1526120"
  },
  {
    "text": "CSV file uh it's it's it's got texts and",
    "start": "1526120",
    "end": "1529520"
  },
  {
    "text": "ins and doubles and product types and",
    "start": "1529520",
    "end": "1531520"
  },
  {
    "text": "some types so it's not just like just a",
    "start": "1531520",
    "end": "1533760"
  },
  {
    "text": "big block of text right I think like it",
    "start": "1533760",
    "end": "1536440"
  },
  {
    "text": "wouldn't be very good if I just",
    "start": "1536440",
    "end": "1537320"
  },
  {
    "text": "Benchmark based on like getting text out",
    "start": "1537320",
    "end": "1539000"
  },
  {
    "text": "of a CSV so I've got all these different",
    "start": "1539000",
    "end": "1540799"
  },
  {
    "text": "data",
    "start": "1540799",
    "end": "1541600"
  },
  {
    "text": "types and I benchmarked SVS against",
    "start": "1541600",
    "end": "1545480"
  },
  {
    "text": "cassava which is kind of the dominant",
    "start": "1545480",
    "end": "1547399"
  },
  {
    "text": "Hol library at the moment and is oh",
    "start": "1547399",
    "end": "1550080"
  },
  {
    "text": "they're a Wi-Fi cool um and and cassava",
    "start": "1550080",
    "end": "1553799"
  },
  {
    "text": "is kind of the thing everyone's using so",
    "start": "1553799",
    "end": "1555159"
  },
  {
    "text": "if I'm going to Benchmark I'd better",
    "start": "1555159",
    "end": "1557080"
  },
  {
    "text": "compare myself to cassava or or no one",
    "start": "1557080",
    "end": "1559159"
  },
  {
    "text": "will care um sv's paa is in is actually",
    "start": "1559159",
    "end": "1563840"
  },
  {
    "text": "par polymorphic in paa culator library",
    "start": "1563840",
    "end": "1567120"
  },
  {
    "text": "so if you like Trifecta you can use",
    "start": "1567120",
    "end": "1568960"
  },
  {
    "text": "Trifecta or if you like pek you can use",
    "start": "1568960",
    "end": "1571279"
  },
  {
    "text": "pek I instantiated adop because it gives",
    "start": "1571279",
    "end": "1573919"
  },
  {
    "text": "me the best results on The Benchmark um",
    "start": "1573919",
    "end": "1577840"
  },
  {
    "text": "so here's our Benchmark blue is SV and",
    "start": "1577840",
    "end": "1579960"
  },
  {
    "text": "red is cassava lower is better um if you",
    "start": "1579960",
    "end": "1583840"
  },
  {
    "text": "PA and decode your CSV using SV we like",
    "start": "1583840",
    "end": "1587640"
  },
  {
    "text": "4 and a half half times slower which is",
    "start": "1587640",
    "end": "1589640"
  },
  {
    "text": "really atrocious it's like 4 and a half",
    "start": "1589640",
    "end": "1591720"
  },
  {
    "text": "seconds instead of less than",
    "start": "1591720",
    "end": "1593360"
  },
  {
    "text": "one but remembering the beginning of the",
    "start": "1593360",
    "end": "1596440"
  },
  {
    "text": "talk I chose to really fiercely separate",
    "start": "1596440",
    "end": "1599799"
  },
  {
    "text": "the sections we PA and then we decode we",
    "start": "1599799",
    "end": "1603080"
  },
  {
    "text": "don't like PA and decode all mingled",
    "start": "1603080",
    "end": "1604880"
  },
  {
    "text": "into one thing so I can separate out I",
    "start": "1604880",
    "end": "1607279"
  },
  {
    "text": "can say well how good's Mya and how",
    "start": "1607279",
    "end": "1609279"
  },
  {
    "text": "good's my decoding and it turns out my",
    "start": "1609279",
    "end": "1611760"
  },
  {
    "text": "decoding is like pretty much more or",
    "start": "1611760",
    "end": "1613679"
  },
  {
    "text": "less the same speed as cassava and my",
    "start": "1613679",
    "end": "1615840"
  },
  {
    "text": "pza is terrible",
    "start": "1615840",
    "end": "1618880"
  },
  {
    "text": "right so I'm going to go home from",
    "start": "1618880",
    "end": "1620000"
  },
  {
    "text": "Lander jam and probably take a day off",
    "start": "1620000",
    "end": "1621679"
  },
  {
    "text": "tomorrow because I'm pretty sick but",
    "start": "1621679",
    "end": "1623200"
  },
  {
    "text": "after that I'll work on fixing up the",
    "start": "1623200",
    "end": "1625720"
  },
  {
    "text": "performance of my paa in the meantime",
    "start": "1625720",
    "end": "1628960"
  },
  {
    "text": "just use my package SV cassava that gets",
    "start": "1628960",
    "end": "1632000"
  },
  {
    "text": "kava's fast paa puts on sv's decoding",
    "start": "1632000",
    "end": "1635200"
  },
  {
    "text": "and then it's pretty",
    "start": "1635200",
    "end": "1638039"
  },
  {
    "text": "fast so that's the that's probably the",
    "start": "1639360",
    "end": "1641720"
  },
  {
    "text": "biggest benefit I've had out of my",
    "start": "1641720",
    "end": "1643679"
  },
  {
    "text": "decision to like strictly separate these",
    "start": "1643679",
    "end": "1645559"
  },
  {
    "text": "phases is if one of them's really",
    "start": "1645559",
    "end": "1647559"
  },
  {
    "text": "rubbish I can just borrow someone",
    "start": "1647559",
    "end": "1651440"
  },
  {
    "text": "else's um so I've spent most of the talk",
    "start": "1652600",
    "end": "1655520"
  },
  {
    "text": "talking about how good the library is",
    "start": "1655520",
    "end": "1657440"
  },
  {
    "text": "with the Benchmark I'm showing you it's",
    "start": "1657440",
    "end": "1658840"
  },
  {
    "text": "like not perfect so I've got one slide",
    "start": "1658840",
    "end": "1661039"
  },
  {
    "text": "to cover the rest of it just really",
    "start": "1661039",
    "end": "1662000"
  },
  {
    "text": "quickly about how bad it is uh we can't",
    "start": "1662000",
    "end": "1664760"
  },
  {
    "text": "decode based on column names it's all",
    "start": "1664760",
    "end": "1666440"
  },
  {
    "text": "positional like the third column is a",
    "start": "1666440",
    "end": "1668080"
  },
  {
    "text": "string and the fourth column is an INT",
    "start": "1668080",
    "end": "1670200"
  },
  {
    "text": "uh but nobody wants to write that way",
    "start": "1670200",
    "end": "1671760"
  },
  {
    "text": "everyone wants to say there's a column",
    "start": "1671760",
    "end": "1674039"
  },
  {
    "text": "named average and it's a double or",
    "start": "1674039",
    "end": "1676600"
  },
  {
    "text": "there's a column named name and it's a",
    "start": "1676600",
    "end": "1679279"
  },
  {
    "text": "string right and then Stitch these",
    "start": "1679279",
    "end": "1681159"
  },
  {
    "text": "things together they don't want to use",
    "start": "1681159",
    "end": "1682559"
  },
  {
    "text": "positional like oh I have to remember",
    "start": "1682559",
    "end": "1684360"
  },
  {
    "text": "the third one is that the average or the",
    "start": "1684360",
    "end": "1686320"
  },
  {
    "text": "max I don't know uh we can't do that yet",
    "start": "1686320",
    "end": "1689159"
  },
  {
    "text": "I think I know how to do it so I'm going",
    "start": "1689159",
    "end": "1690600"
  },
  {
    "text": "to try and do that um I told you about",
    "start": "1690600",
    "end": "1694000"
  },
  {
    "text": "how great all my errors were but they",
    "start": "1694000",
    "end": "1696559"
  },
  {
    "text": "don't actually tell you what line",
    "start": "1696559",
    "end": "1697960"
  },
  {
    "text": "they're",
    "start": "1697960",
    "end": "1700200"
  },
  {
    "text": "from so I gave this example of like oh",
    "start": "1701399",
    "end": "1704000"
  },
  {
    "text": "line 56 you've got an error and I said",
    "start": "1704000",
    "end": "1705919"
  },
  {
    "text": "oh my stuff's way better because we give",
    "start": "1705919",
    "end": "1707200"
  },
  {
    "text": "you three errors but they don't tell you",
    "start": "1707200",
    "end": "1708679"
  },
  {
    "text": "what lines they're on so that really",
    "start": "1708679",
    "end": "1711559"
  },
  {
    "text": "needs to be sorted out um we don't have",
    "start": "1711559",
    "end": "1714519"
  },
  {
    "text": "any form of streaming so if your CSV is",
    "start": "1714519",
    "end": "1716640"
  },
  {
    "text": "like 5 gabes then don't use this Library",
    "start": "1716640",
    "end": "1720960"
  },
  {
    "text": "yet uh and as you seen on the previous",
    "start": "1720960",
    "end": "1723480"
  },
  {
    "text": "slide performance needs work in a bunch",
    "start": "1723480",
    "end": "1726080"
  },
  {
    "text": "of areas really but in particular in",
    "start": "1726080",
    "end": "1727799"
  },
  {
    "text": "paing so there are a whole bunch of",
    "start": "1727799",
    "end": "1729480"
  },
  {
    "text": "limitations that mean you might not want",
    "start": "1729480",
    "end": "1730919"
  },
  {
    "text": "to use this now uh you might want to I",
    "start": "1730919",
    "end": "1733519"
  },
  {
    "text": "don't know uh but I couldn't just get up",
    "start": "1733519",
    "end": "1736840"
  },
  {
    "text": "and give a talk about my",
    "start": "1736840",
    "end": "1738679"
  },
  {
    "text": "like horribly slow library with a bunch",
    "start": "1738679",
    "end": "1740399"
  },
  {
    "text": "of missing features that everyone cares",
    "start": "1740399",
    "end": "1741760"
  },
  {
    "text": "about and not mention all these things",
    "start": "1741760",
    "end": "1743840"
  },
  {
    "text": "so there they are in one slide brush",
    "start": "1743840",
    "end": "1745919"
  },
  {
    "text": "past really",
    "start": "1745919",
    "end": "1746960"
  },
  {
    "text": "quickly uh maybe you'd like to help me",
    "start": "1746960",
    "end": "1749519"
  },
  {
    "text": "with some of those things so you can",
    "start": "1749519",
    "end": "1752080"
  },
  {
    "text": "come and put a pull request into SV if",
    "start": "1752080",
    "end": "1754039"
  },
  {
    "text": "you want otherwise I'll keep working on",
    "start": "1754039",
    "end": "1755880"
  },
  {
    "text": "it so don't feel too stressed",
    "start": "1755880",
    "end": "1760640"
  },
  {
    "text": "uh but if you're like way better than I",
    "start": "1761000",
    "end": "1763720"
  },
  {
    "text": "am at high school then please do come",
    "start": "1763720",
    "end": "1764960"
  },
  {
    "text": "and help uh or if you have like this",
    "start": "1764960",
    "end": "1767640"
  },
  {
    "text": "crazy CSV with all these different line",
    "start": "1767640",
    "end": "1769559"
  },
  {
    "text": "endings and all these different single",
    "start": "1769559",
    "end": "1771880"
  },
  {
    "text": "quotes and nonsense and my separator is",
    "start": "1771880",
    "end": "1774279"
  },
  {
    "text": "the askip Poo Emoji or the the uni code",
    "start": "1774279",
    "end": "1777480"
  },
  {
    "text": "rather um then send me your CSV file and",
    "start": "1777480",
    "end": "1780960"
  },
  {
    "text": "say hey can SV do this and maybe it",
    "start": "1780960",
    "end": "1783640"
  },
  {
    "text": "can't and I'll change the library and",
    "start": "1783640",
    "end": "1784840"
  },
  {
    "text": "fix it so you can talk to me about all",
    "start": "1784840",
    "end": "1787760"
  },
  {
    "text": "that stuff I have some references and",
    "start": "1787760",
    "end": "1790120"
  },
  {
    "text": "that's the end of the talk",
    "start": "1790120",
    "end": "1793720"
  }
]