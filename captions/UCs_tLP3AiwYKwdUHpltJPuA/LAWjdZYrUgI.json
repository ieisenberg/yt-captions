[
  {
    "start": "0",
    "end": "88000"
  },
  {
    "text": "[Music]",
    "start": "5870",
    "end": "11370"
  },
  {
    "text": "fantastic well look good afternoon everyone and thank you for coming to my talk on Serv architectures I know that",
    "start": "11799",
    "end": "19359"
  },
  {
    "text": "I'm the last man standing between you the final keynote and the party um so",
    "start": "19359",
    "end": "25000"
  },
  {
    "text": "look I'll try to be quick I'll try to be light um and hopefully make it fun for you",
    "start": "25000",
    "end": "30880"
  },
  {
    "text": "um we have a few notable guests in the audience like Martin so that doesn't make me nervous at all um but look I",
    "start": "30880",
    "end": "38600"
  },
  {
    "text": "will tell you a story about my serous startup and I will tell you some of the",
    "start": "38600",
    "end": "44360"
  },
  {
    "text": "lessons that we learned where we succeeded and where we failed I think that a serous approach to architecture",
    "start": "44360",
    "end": "52280"
  },
  {
    "text": "is the future but it is also not a silver bullet in all circumstances there",
    "start": "52280",
    "end": "57480"
  },
  {
    "text": "are some interesting problems that still need to be solved but it is an unbelievable accelerator if",
    "start": "57480",
    "end": "63680"
  },
  {
    "text": "you use it wisely so just quick question before I start who has heard or used of AWS Lambda excellent I think we've done",
    "start": "63680",
    "end": "70880"
  },
  {
    "text": "this before what about Azure functions yep that's the usual response",
    "start": "70880",
    "end": "75960"
  },
  {
    "text": "that I get um this is recorded right oh um what about IBM open whisk yeah um and",
    "start": "75960",
    "end": "85360"
  },
  {
    "text": "what about Google Cloud functions cool okay",
    "start": "85360",
    "end": "90520"
  },
  {
    "start": "88000",
    "end": "165000"
  },
  {
    "text": "so look my name is Peter barski and I'm VP of engineering um at a company called",
    "start": "90520",
    "end": "96040"
  },
  {
    "text": "a cloud Guru and our mission is to teach the world cloud computing so I'm also",
    "start": "96040",
    "end": "102680"
  },
  {
    "text": "the head organizer of a conference dedicated to serverless architectures and Technologies and this Ser this",
    "start": "102680",
    "end": "108680"
  },
  {
    "text": "conference is called Ser con so both Chris and Mike who presented just before me actually attended and presented at",
    "start": "108680",
    "end": "116039"
  },
  {
    "text": "servus con last week so this is how much both of them love servus you know after",
    "start": "116039",
    "end": "121920"
  },
  {
    "text": "that conference they immediately came here to present to you today so thank you to those guys they are amazing um I",
    "start": "121920",
    "end": "129399"
  },
  {
    "text": "have a background in computer science I got a PhD in compai in 2008 I worked as",
    "start": "129399",
    "end": "134760"
  },
  {
    "text": "a consultant in melbour Australia for a number of years I worked for the defense Science and Technology organization and",
    "start": "134760",
    "end": "141840"
  },
  {
    "text": "the United Nations in New York uh my interest is in Cloud software",
    "start": "141840",
    "end": "147480"
  },
  {
    "text": "architecture and over the past couple of years I've spent quite a lot of time kind of trying to understand what this",
    "start": "147480",
    "end": "153879"
  },
  {
    "text": "servess thing is all about and finally I'm the author of this book um it is",
    "start": "153879",
    "end": "159040"
  },
  {
    "text": "called servs architectures on AWS so if you are interested come and talk to me after um my talk so let me set just a",
    "start": "159040",
    "end": "167280"
  },
  {
    "start": "165000",
    "end": "245000"
  },
  {
    "text": "little bit of context um before we go any further so here's a little story",
    "start": "167280",
    "end": "172400"
  },
  {
    "text": "about our startup so at the start of 2015 we put some courses on ud.com",
    "start": "172400",
    "end": "180640"
  },
  {
    "text": "uh teaching people about AWS right and helping them to achieve certification so",
    "start": "180640",
    "end": "186000"
  },
  {
    "text": "the whole thing went a little bit crazy a lot of people seem to like our courses",
    "start": "186000",
    "end": "191840"
  },
  {
    "text": "and so after a while we decided to build our own online training platform we",
    "start": "191840",
    "end": "197360"
  },
  {
    "text": "think that learning is a social thing and so we wanted to build the best possible place online um for training we",
    "start": "197360",
    "end": "205560"
  },
  {
    "text": "wanted to provide interactive discussions gamification and just you know make kind",
    "start": "205560",
    "end": "210840"
  },
  {
    "text": "of learning and training a lot of fun and so in 18 months we have scaled to",
    "start": "210840",
    "end": "216599"
  },
  {
    "text": "200,000 Engineers globally across 140 countries at any given time there can be",
    "start": "216599",
    "end": "222920"
  },
  {
    "text": "thousands of people using our platform watching videos doing quizzes interacting with each other all in real",
    "start": "222920",
    "end": "229400"
  },
  {
    "text": "time and so our system is completely event driven and push-based going to the",
    "start": "229400",
    "end": "235239"
  },
  {
    "text": "talk um to the keynote this morning this means that as people interact",
    "start": "235239",
    "end": "240560"
  },
  {
    "text": "these interactions are pushed immediately to all the devices",
    "start": "240560",
    "end": "245760"
  },
  {
    "text": "worldwide and we don't run a single server not one not anywhere in fact our",
    "start": "245760",
    "end": "252959"
  },
  {
    "text": "hosting bill is almost non-existent and I'll tell you what it is a little bit later and so the main point that I want",
    "start": "252959",
    "end": "258799"
  },
  {
    "text": "to bring across to you is that what we have built is not just like a toy application it is a fully fledged reach",
    "start": "258799",
    "end": "266560"
  },
  {
    "text": "web application in production that powers that you know with thousands of um",
    "start": "266560",
    "end": "272400"
  },
  {
    "text": "simultaneous users at the moment now there are other examples that I can tell you about other serverless systems like",
    "start": "272400",
    "end": "277960"
  },
  {
    "text": "Expedia that um triggers 1.2 billion service requests a month finra the",
    "start": "277960",
    "end": "285080"
  },
  {
    "text": "financial industry regulatory Authority processes half a trillion um validations",
    "start": "285080",
    "end": "291120"
  },
  {
    "text": "of stocks stock trades every day um so on and so forth so uh there are a lot of",
    "start": "291120",
    "end": "297360"
  },
  {
    "start": "296000",
    "end": "381000"
  },
  {
    "text": "examples so look this wouldn't be a talk on serverless if I didn't tell you what",
    "start": "297360",
    "end": "302639"
  },
  {
    "text": "serverless is right I think this is a tradition um I have to say yes there are servers absolutely y so here is my",
    "start": "302639",
    "end": "310919"
  },
  {
    "text": "definition um of serverless so number one a system is serverless if obviously",
    "start": "310919",
    "end": "317080"
  },
  {
    "text": "there are no service for you to manage or administer instead you use an Emeral",
    "start": "317080",
    "end": "322800"
  },
  {
    "text": "compute service that given a small piece of code like a function will execute It For You On",
    "start": "322800",
    "end": "328479"
  },
  {
    "text": "Demand right so Some people prefer to use to call that function as a service which is totally",
    "start": "328479",
    "end": "334639"
  },
  {
    "text": "understandable next serverless applications typically use third party services to help with tasks such as",
    "start": "334639",
    "end": "342120"
  },
  {
    "text": "authentication database file storage and so on and we can call that backend as a",
    "start": "342120",
    "end": "348319"
  },
  {
    "text": "service look obviously um it isn't mandatory to use third party Services uh",
    "start": "348319",
    "end": "354080"
  },
  {
    "text": "but we find that a lot of ser serverless applications do finally there are certain patterns",
    "start": "354080",
    "end": "360800"
  },
  {
    "text": "and architectures which are common to serverless systems so for example big",
    "start": "360800",
    "end": "365960"
  },
  {
    "text": "powerful front ends that communicate directly with other services using Json web tokens serverless applications are",
    "start": "365960",
    "end": "373280"
  },
  {
    "text": "typically event driven and so on and I will talk more about these patents and",
    "start": "373280",
    "end": "378840"
  },
  {
    "text": "architectures um a little bit further on so in my view serverless is a theme",
    "start": "378840",
    "end": "386199"
  },
  {
    "start": "381000",
    "end": "394000"
  },
  {
    "text": "right it's an approach to building software and it's made out it's made out",
    "start": "386199",
    "end": "391240"
  },
  {
    "text": "of uh compute and patterns so this is interesting just this morning um I had a look at the",
    "start": "391240",
    "end": "397759"
  },
  {
    "start": "394000",
    "end": "416000"
  },
  {
    "text": "thought Works technology radar um and it is really cool so they put seress architectures under trial which means",
    "start": "397759",
    "end": "404720"
  },
  {
    "text": "that this uh approach to kind of software design is mature enough for",
    "start": "404720",
    "end": "410400"
  },
  {
    "text": "teams to begin trialing um and exploring in more depth so that is very",
    "start": "410400",
    "end": "417039"
  },
  {
    "start": "416000",
    "end": "467000"
  },
  {
    "text": "cool um let me talk about aw us Lambda um just for a minute so Lambda is",
    "start": "417039",
    "end": "424039"
  },
  {
    "text": "Amazon's serverless compute uh service and it's definitely leading the game right now and it works very simply right",
    "start": "424039",
    "end": "431919"
  },
  {
    "text": "so you create a function zip it up upload to Lambda and Lambda will execute",
    "start": "431919",
    "end": "438000"
  },
  {
    "text": "that function for you um in response to some event right it could be an HTTP",
    "start": "438000",
    "end": "443720"
  },
  {
    "text": "request or it could be a file placed in a sree bucket so an event will happen",
    "start": "443720",
    "end": "448879"
  },
  {
    "text": "and that can trigger Lambda function that can do some processing so I say that Lambda is",
    "start": "448879",
    "end": "456560"
  },
  {
    "text": "groundbreaking and it's as big a shift forward for cloud computing as as free",
    "start": "456560",
    "end": "462440"
  },
  {
    "text": "was for cloud storage and in fact if you think about it the two are very very",
    "start": "462440",
    "end": "468319"
  },
  {
    "start": "467000",
    "end": "563000"
  },
  {
    "text": "similar so Lambda is to compute what s PR is for storage s PR deals in objects",
    "start": "468319",
    "end": "474800"
  },
  {
    "text": "for storage right you provide an object and S3 stores it you don't know how you",
    "start": "474800",
    "end": "480599"
  },
  {
    "text": "don't know where and you don't care there are no drives to concern yourself with there's no such thing as a dis",
    "start": "480599",
    "end": "486720"
  },
  {
    "text": "space not enough space no such thing as too much unused space these Concepts do",
    "start": "486720",
    "end": "492800"
  },
  {
    "text": "not exist at all you cannot over provision or underprovision storage",
    "start": "492800",
    "end": "498319"
  },
  {
    "text": "capacity in s3e it is just what you want it to be S free stores and charges you exactly uh",
    "start": "498319",
    "end": "507560"
  },
  {
    "text": "what you give it nothing more nothing less so if you look at Lambda it's the same thing right Lambda deals in functions uh",
    "start": "507560",
    "end": "515200"
  },
  {
    "text": "for execution you provide function code and Lambda executes it for you in demand",
    "start": "515200",
    "end": "520360"
  },
  {
    "text": "you don't know how and you don't know where you don't really care there are no virtual machines for you to think about",
    "start": "520360",
    "end": "526760"
  },
  {
    "text": "no such thing as a server Farm capacity too many idling service not enough",
    "start": "526760",
    "end": "532240"
  },
  {
    "text": "service to meet demand no scaling groups these Concepts do not exist at all for",
    "start": "532240",
    "end": "537279"
  },
  {
    "text": "you so you cannot over provision or underprovision compute capacity with",
    "start": "537279",
    "end": "543079"
  },
  {
    "text": "Lambda that's interesting it is just what you want it to be and Lambda",
    "start": "543079",
    "end": "548120"
  },
  {
    "text": "executes and charges you for exactly um what you execute so nothing more nothing",
    "start": "548120",
    "end": "553839"
  },
  {
    "text": "less so this is why I think that Lambda is the next level for cloud computing and it's as big a shift f for compute as",
    "start": "553839",
    "end": "561040"
  },
  {
    "text": "S3 was for storage but Lambda isn't the only player in town right so we have other",
    "start": "561040",
    "end": "567839"
  },
  {
    "start": "563000",
    "end": "588000"
  },
  {
    "text": "serverless compute Technologies we have Microsoft Azure functions we have Google",
    "start": "567839",
    "end": "573200"
  },
  {
    "text": "cloud functions we have IBM open whisk we have all zero web task so other Cloud",
    "start": "573200",
    "end": "579040"
  },
  {
    "text": "vendors are jumping onto this as well because I think they are seeing something here they seeing maybe the",
    "start": "579040",
    "end": "585720"
  },
  {
    "text": "future in some way kind of while we were building our",
    "start": "585720",
    "end": "593440"
  },
  {
    "start": "588000",
    "end": "618000"
  },
  {
    "text": "platform we came up with a number of principles uh for Ser AC iectures that I",
    "start": "593440",
    "end": "600560"
  },
  {
    "text": "kind of want to share with you and I would love to hear your feedback does this resonate with you do you think that",
    "start": "600560",
    "end": "606640"
  },
  {
    "text": "they're right do you think that they're wrong so after this please let me know what you think and I will kind of just",
    "start": "606640",
    "end": "612600"
  },
  {
    "text": "quickly mention each principle and then I will illustrate with an example from our own",
    "start": "612600",
    "end": "618560"
  },
  {
    "start": "618000",
    "end": "715000"
  },
  {
    "text": "system so I guess look this is probably the most important um principle if",
    "start": "618560",
    "end": "623760"
  },
  {
    "text": "you're going to build service applications right use a compute service to execute code on demand AKA don't run",
    "start": "623760",
    "end": "632000"
  },
  {
    "text": "a server and this is probably the most important principle um look you don't",
    "start": "632000",
    "end": "637880"
  },
  {
    "text": "want to run or manage a server if you don't need to right your goal is usually to solve an interesting problem it's not",
    "start": "637880",
    "end": "645279"
  },
  {
    "text": "to patch apach you or install another security update you can run you can write",
    "start": "645279",
    "end": "652160"
  },
  {
    "text": "functions to carry out almost any task you can read and write through data source you can perform a computation you",
    "start": "652160",
    "end": "658639"
  },
  {
    "text": "can do pretty much anything you want another cool thing about service like Lambda is that you are only paying for",
    "start": "658639",
    "end": "665480"
  },
  {
    "text": "the time that you code executes that means you are built in milliseconds not hours and this can massively reduce your",
    "start": "665480",
    "end": "673920"
  },
  {
    "text": "hosting costs yes there are exceptions yeah but you are not paying for service",
    "start": "673920",
    "end": "679720"
  },
  {
    "text": "to sit around idling waiting for request to come through and it's interesting that in fact due to a generous free tier",
    "start": "679720",
    "end": "688240"
  },
  {
    "text": "um that AWS provides we haven't actually paid for Lambda as yet so don't tell",
    "start": "688240",
    "end": "694200"
  },
  {
    "text": "Amazon it's C in the audience please don't say anything okay",
    "start": "694200",
    "end": "699760"
  },
  {
    "text": "um and that's for 200,000 users who are hitting the system so that's kind of interesting um of course there will be",
    "start": "699760",
    "end": "706639"
  },
  {
    "text": "scenarios where you may need a server I totally understand you know um but you know try to minimize your dependency on",
    "start": "706639",
    "end": "714399"
  },
  {
    "text": "Service as much as possible so look here's a BAS basic use",
    "start": "714399",
    "end": "719800"
  },
  {
    "text": "case where your where Lambda serves as a backend for let's say a web application",
    "start": "719800",
    "end": "726360"
  },
  {
    "text": "so you have a client it could be a web application it could be a mobile app um a request comes through to the API",
    "start": "726360",
    "end": "732120"
  },
  {
    "text": "Gateway which is another service provided by Amazon API Gateway inbox the",
    "start": "732120",
    "end": "737519"
  },
  {
    "text": "right Lambda function that Lambda function can process your request it can call out to other services it can talk",
    "start": "737519",
    "end": "743760"
  },
  {
    "text": "to say Dynamo DB or really to anything you want it doesn't have to talk to",
    "start": "743760",
    "end": "749240"
  },
  {
    "text": "Services only within AWS you can call out anywhere you want it can generate a",
    "start": "749240",
    "end": "754800"
  },
  {
    "text": "response and then send that response back to the client so your client doesn't actually know that it's talking",
    "start": "754800",
    "end": "761000"
  },
  {
    "text": "to a serverless system um security can be taken care of",
    "start": "761000",
    "end": "767519"
  },
  {
    "text": "at the API Gateway level or at each function um so I would suggest doing",
    "start": "767519",
    "end": "772880"
  },
  {
    "start": "772000",
    "end": "808000"
  },
  {
    "text": "both but again depends on your requirements so here's another scenario so I call this computers glue so this is",
    "start": "772880",
    "end": "779639"
  },
  {
    "text": "where you use lender functions to glue other services together so you might",
    "start": "779639",
    "end": "784680"
  },
  {
    "text": "have some storage like file storage in s free you might have um a simple notification service or I don't know um",
    "start": "784680",
    "end": "793120"
  },
  {
    "text": "relational database and you can glue these Services together and you can create awesome scalable pipelines where",
    "start": "793120",
    "end": "801279"
  },
  {
    "text": "you push data across perform certain operations and you can do it all in an event driven style and I'll show you an",
    "start": "801279",
    "end": "807880"
  },
  {
    "text": "example in just a minute um number two write single purpose",
    "start": "807880",
    "end": "814480"
  },
  {
    "start": "808000",
    "end": "880000"
  },
  {
    "text": "stateless functions um as software Engineers you know we are aware of the",
    "start": "814480",
    "end": "819639"
  },
  {
    "text": "single responsibility principle right a function that does one thing is more",
    "start": "819639",
    "end": "824839"
  },
  {
    "text": "testable it is more robust it leads to fewer side effects um and by composing and",
    "start": "824839",
    "end": "831160"
  },
  {
    "text": "combining functions and services in a loose orchestration you can build complex backend systems that are still",
    "start": "831160",
    "end": "837600"
  },
  {
    "text": "understandable and easy to manage also a granular function with a well- defined interface is also more likely to",
    "start": "837600",
    "end": "844759"
  },
  {
    "text": "be reused within your serverless architecture when you write code um for",
    "start": "844759",
    "end": "851000"
  },
  {
    "text": "say a Lambda function remember to create it in a stateless style you must not assume that any",
    "start": "851000",
    "end": "857360"
  },
  {
    "text": "resources um will kind of survive bit beyond the immediate session so",
    "start": "857360",
    "end": "863079"
  },
  {
    "text": "statelessness is very powerful and it is actually that magic source that makes um",
    "start": "863079",
    "end": "869279"
  },
  {
    "text": "Lambda and other computer services possible it allows these platforms to",
    "start": "869279",
    "end": "874920"
  },
  {
    "text": "quickly scale to handle that ever changing number of incoming events or",
    "start": "874920",
    "end": "881079"
  },
  {
    "start": "880000",
    "end": "937000"
  },
  {
    "text": "requests and look often it is very hard to know where the granularity of a function should be right you make",
    "start": "881079",
    "end": "887600"
  },
  {
    "text": "something too granular and then you have you know an explosion of functions that you need to manage called it's a",
    "start": "887600",
    "end": "892880"
  },
  {
    "text": "nightmare and then you ignore granularity and you've created Min monoliths also better idea and look it",
    "start": "892880",
    "end": "900720"
  },
  {
    "text": "takes time I think to kind of understand where the right granularity should be um",
    "start": "900720",
    "end": "907120"
  },
  {
    "text": "we've tried to focus on giving each function one purpose um there's other thinking that says that each Lambda",
    "start": "907120",
    "end": "913839"
  },
  {
    "text": "function should do zero or one data Transformations but no more and so Paul",
    "start": "913839",
    "end": "919800"
  },
  {
    "text": "Johnston suggested that when you write a Lambda function only do zero or one data",
    "start": "919800",
    "end": "925360"
  },
  {
    "text": "Transformations so that's interesting to keep in mind but for example in our system we have functions um that allow",
    "start": "925360",
    "end": "932959"
  },
  {
    "text": "users to submit questions and comment on our forums or submit answers on our",
    "start": "932959",
    "end": "938199"
  },
  {
    "text": "forums we have a function that allows a person to vote up and down question on",
    "start": "938199",
    "end": "943360"
  },
  {
    "text": "our forums we have a little slackbot called Guru bot that informs our lecturers how much money they have made",
    "start": "943360",
    "end": "950639"
  },
  {
    "text": "um each day uh we have a function that's responsible for taking payments and we",
    "start": "950639",
    "end": "956000"
  },
  {
    "text": "have a function that grants um users access to restricted",
    "start": "956000",
    "end": "961759"
  },
  {
    "start": "960000",
    "end": "994000"
  },
  {
    "text": "files um third principle and this is my favorite it's about designing push-based",
    "start": "962240",
    "end": "968079"
  },
  {
    "text": "event driven pipelines and look they are powerful and they allow you to extend your",
    "start": "968079",
    "end": "974600"
  },
  {
    "text": "architecture really simply and they look like magic so an event driven pipeline in my nomenclature is basically this um",
    "start": "974600",
    "end": "983120"
  },
  {
    "text": "it you kick off an event and that event continues to propagate further without",
    "start": "983120",
    "end": "988399"
  },
  {
    "text": "any add additional user input so very simple one event triggers another",
    "start": "988399",
    "end": "993639"
  },
  {
    "text": "event um so here is a very basic example we use a no SQL database called Firebase",
    "start": "993639",
    "end": "1001680"
  },
  {
    "start": "994000",
    "end": "1046000"
  },
  {
    "text": "and it is a realtime streaming database which uses web sockets so changes made",
    "start": "1001680",
    "end": "1007560"
  },
  {
    "text": "to the database are synced to all clients in real time so you make a",
    "start": "1007560",
    "end": "1012600"
  },
  {
    "text": "little change in Firebase and all all of those changes are pushed to all web browsers connected um to our",
    "start": "1012600",
    "end": "1019920"
  },
  {
    "text": "website so in this example a user I think that's me um submits a comment",
    "start": "1019920",
    "end": "1025438"
  },
  {
    "text": "which goes to the API Gateway API Gateway invokes a Lambda function that",
    "start": "1025439",
    "end": "1030880"
  },
  {
    "text": "Lambda function makes a change to our um Firebase database and that change is",
    "start": "1030880",
    "end": "1037240"
  },
  {
    "text": "immediately pushed to all clients that's kind of cool totally",
    "start": "1037240",
    "end": "1042480"
  },
  {
    "text": "event driven there's no polling everything is kind of push based and happens one by one you could technically",
    "start": "1042480",
    "end": "1048438"
  },
  {
    "start": "1046000",
    "end": "1066000"
  },
  {
    "text": "even see simplify that further you could have Peter update Firebase directly from",
    "start": "1048439",
    "end": "1054760"
  },
  {
    "text": "the browser and have that pushed to all um connected clients now this may not be",
    "start": "1054760",
    "end": "1061520"
  },
  {
    "text": "a good idea in all circumstances but there are circumstances where this actually works",
    "start": "1061520",
    "end": "1067240"
  },
  {
    "start": "1066000",
    "end": "1182000"
  },
  {
    "text": "too so here's a simplified example of our video trans coding pipeline we allow",
    "start": "1067240",
    "end": "1073440"
  },
  {
    "text": "our lectures to upload videos so there Rec call the course awesome we allow",
    "start": "1073440",
    "end": "1078520"
  },
  {
    "text": "them to to upload the video which then gets transcoded to 20 different formats",
    "start": "1078520",
    "end": "1084480"
  },
  {
    "text": "so a video can be transcoded to 72p then 0p hls webm Etc and so here's what",
    "start": "1084480",
    "end": "1091320"
  },
  {
    "text": "happens so our user so our lecturer from their browser uploads the file straight",
    "start": "1091320",
    "end": "1097240"
  },
  {
    "text": "to S3 right there's no intermediate server there so file goes to S3 once the file",
    "start": "1097240",
    "end": "1104200"
  },
  {
    "text": "is uploaded that automatically invokes a Lambda function which goes hey there's a new file in the bucket cool that Lambda",
    "start": "1104200",
    "end": "1112520"
  },
  {
    "text": "function then sets up an elastic transcod the job elastic transcoder is",
    "start": "1112520",
    "end": "1117679"
  },
  {
    "text": "another service in AWS which can transcode video videos to different formats so elastic transcoder receives",
    "start": "1117679",
    "end": "1125280"
  },
  {
    "text": "this new job and goes hey awesome let me do this processing it spends let's say half an hour working and producing these",
    "start": "1125280",
    "end": "1133200"
  },
  {
    "text": "new files the new transported files are then placed in another bucket",
    "start": "1133200",
    "end": "1139400"
  },
  {
    "text": "now that pushes an event onto the SNS topic that we have which then triggers",
    "start": "1139400",
    "end": "1147039"
  },
  {
    "text": "basically tends out and triggers a number of other Lambda functions that we have one of those Lambda functions goes",
    "start": "1147039",
    "end": "1153400"
  },
  {
    "text": "hey cool there's a new transor file it updates our Firebase database and all users basically in real",
    "start": "1153400",
    "end": "1160919"
  },
  {
    "text": "time receive that update so a new thing or notification pops up or they see kind",
    "start": "1160919",
    "end": "1166280"
  },
  {
    "text": "of a new lesson added um to the list of lessons that they have um and this happens basically as quickly as possible",
    "start": "1166280",
    "end": "1173880"
  },
  {
    "text": "so there's no polling there's no refreshing this is all push based kind of end to end that is really cool and it",
    "start": "1173880",
    "end": "1181000"
  },
  {
    "text": "works very well so this one this principle gets me in a lot of trouble always and I get a",
    "start": "1181000",
    "end": "1189159"
  },
  {
    "text": "lot of debates um and anyway I'll be very interested in hearing what you have",
    "start": "1189159",
    "end": "1194679"
  },
  {
    "text": "to say about this if you are creating a web a with cous architectures for",
    "start": "1194679",
    "end": "1201640"
  },
  {
    "text": "example I would suggest to you to create P more powerful front",
    "start": "1201640",
    "end": "1207280"
  },
  {
    "text": "ends so what do I mean by that so let's think about a traditional prettier approach so you have a web browser which",
    "start": "1207280",
    "end": "1214080"
  },
  {
    "text": "is your presentation tier you have your web server which is your logic tier and the database data tier and so this",
    "start": "1214080",
    "end": "1220480"
  },
  {
    "text": "layering keeps a nice separation of concerns but it becomes very tedious to maintain and improve and it gets even",
    "start": "1220480",
    "end": "1227919"
  },
  {
    "text": "worse in the World Of Reach single page applications so let's have a look at",
    "start": "1227919",
    "end": "1233400"
  },
  {
    "start": "1230000",
    "end": "1280000"
  },
  {
    "text": "this you know you are all familiar with this approach right so in a single page app you have your whole framework in the",
    "start": "1233400",
    "end": "1239720"
  },
  {
    "text": "browser with use routing maybe controllers if you use angular Services components your spa talks over the",
    "start": "1239720",
    "end": "1248360"
  },
  {
    "text": "wire um and sends messages to your server right there you have to authorize",
    "start": "1248360",
    "end": "1253919"
  },
  {
    "text": "all calls validate input patch models from the database apply business logic",
    "start": "1253919",
    "end": "1259080"
  },
  {
    "text": "so on and so forth and then if you have to add a new feature you may have to go",
    "start": "1259080",
    "end": "1264280"
  },
  {
    "text": "and touch each of those layers and I worked on project that had 10 layers I",
    "start": "1264280",
    "end": "1270799"
  },
  {
    "text": "had managers and proxies and all kinds of things and adding a button becomes",
    "start": "1270799",
    "end": "1276000"
  },
  {
    "text": "really really difficult which isn't a lot of fun but with the explosion of",
    "start": "1276000",
    "end": "1283080"
  },
  {
    "start": "1280000",
    "end": "1328000"
  },
  {
    "text": "cloud-based services and great security mechanisms like force JWT",
    "start": "1283080",
    "end": "1289159"
  },
  {
    "text": "SLE something new becomes possible your front-end app can talk directly and",
    "start": "1289159",
    "end": "1295720"
  },
  {
    "text": "securely to a number of cloud enabled Services it is really",
    "start": "1295720",
    "end": "1301720"
  },
  {
    "text": "interesting and you can even talk directly to a database and that may not",
    "start": "1301720",
    "end": "1307679"
  },
  {
    "text": "be a bad thing in some circumstances but this makes it possible",
    "start": "1307679",
    "end": "1312760"
  },
  {
    "text": "to remove the middleman um it's interesting that this new model means that most of your data",
    "start": "1312760",
    "end": "1320120"
  },
  {
    "text": "transformation and business logic could actually be moved to the front end right",
    "start": "1320120",
    "end": "1325880"
  },
  {
    "text": "but of course you know we are sensible people and we understand that there are a lot of actions that cannot be",
    "start": "1325880",
    "end": "1331600"
  },
  {
    "start": "1328000",
    "end": "1373000"
  },
  {
    "text": "performed in the front end right you know there are security concerns that you have to think about privacy concerns",
    "start": "1331600",
    "end": "1337720"
  },
  {
    "text": "yes and for that you do have to still use something like um AWS Lambda to",
    "start": "1337720",
    "end": "1343760"
  },
  {
    "text": "execute code in a protected manner so for example let's say I want to notify",
    "start": "1343760",
    "end": "1349640"
  },
  {
    "text": "all subscribers of my system that um there's a new Forum post you would never",
    "start": "1349640",
    "end": "1354720"
  },
  {
    "text": "ever ever do that from the front end right it can fail you may have issues",
    "start": "1354720",
    "end": "1359840"
  },
  {
    "text": "it's insecure you cannot load other people's email addresses into somebody's browser that's a big no no so for that",
    "start": "1359840",
    "end": "1366480"
  },
  {
    "text": "you would use a Lambda function right you would use you would execute that action um from a protected function so",
    "start": "1366480",
    "end": "1375240"
  },
  {
    "start": "1373000",
    "end": "1398000"
  },
  {
    "text": "you get to something like this right you have a lot of richness in your front end you can talk possibly straight to your",
    "start": "1375240",
    "end": "1382440"
  },
  {
    "text": "database maybe and you can invoke Cloud functions when you need to perform",
    "start": "1382440",
    "end": "1387520"
  },
  {
    "text": "certain protected actions now again this works for a web application you know",
    "start": "1387520",
    "end": "1393880"
  },
  {
    "text": "this isn't going to work if you're building an API um for example and again I'd be very interested",
    "start": "1393880",
    "end": "1400559"
  },
  {
    "start": "1398000",
    "end": "1465000"
  },
  {
    "text": "in hearing your thoughts after this and now the fifth uh principle is about",
    "start": "1400559",
    "end": "1406799"
  },
  {
    "text": "using third party services and look we all know that there are companies that dedicate 100% of their",
    "start": "1406799",
    "end": "1413600"
  },
  {
    "text": "time to doing some very specific things very well so you have o zero that do",
    "start": "1413600",
    "end": "1419840"
  },
  {
    "text": "they do authentication and authorization you have S3 for file storage Cloud front",
    "start": "1419840",
    "end": "1424880"
  },
  {
    "text": "for CDN distribution Firebase for data um strip and PayPal for",
    "start": "1424880",
    "end": "1430279"
  },
  {
    "text": "payments um each of these companies do what they do very very",
    "start": "1430279",
    "end": "1436279"
  },
  {
    "text": "well um so you can pick up a lot of feed a lot of speed by Outsourcing some of",
    "start": "1436279",
    "end": "1442039"
  },
  {
    "text": "the work that you have to do and then you can focus on your cor product which gives you that additional acceleration",
    "start": "1442039",
    "end": "1448360"
  },
  {
    "text": "now again this is easier for me to say because you know I work in a startup so we can do this it's a green field",
    "start": "1448360",
    "end": "1453400"
  },
  {
    "text": "project you may be working you know in a different environment in an Enterprise and you may not be able to use third",
    "start": "1453400",
    "end": "1459320"
  },
  {
    "text": "party Services I totally understand again it's just a principle that I kind of wanted to share with",
    "start": "1459320",
    "end": "1465559"
  },
  {
    "start": "1465000",
    "end": "1650000"
  },
  {
    "text": "you so why did we choose to build a c system rather than that traditional web",
    "start": "1465559",
    "end": "1471240"
  },
  {
    "text": "server approach and what benefits has it brought us well first of all number one",
    "start": "1471240",
    "end": "1477000"
  },
  {
    "text": "rapid time to Market so early early on we were very resource constrained and we",
    "start": "1477000",
    "end": "1482799"
  },
  {
    "text": "didn't have a big team and kind of all of our funding was from our cash flow and we had four weeks to build our",
    "start": "1482799",
    "end": "1489640"
  },
  {
    "text": "entire system from scratch and this included signups payments post video",
    "start": "1489640",
    "end": "1494679"
  },
  {
    "text": "delivery delivery practice exams discussion forums so on and so forth basically you know all the LMS features",
    "start": "1494679",
    "end": "1501840"
  },
  {
    "text": "you would expect and if we had taken that traditional web server approach I",
    "start": "1501840",
    "end": "1507840"
  },
  {
    "text": "believe we would have never made it and we wouldn't have had the business we have",
    "start": "1507840",
    "end": "1513080"
  },
  {
    "text": "today secondly we needed to scale fast and effortlessly when we decided to",
    "start": "1513080",
    "end": "1518600"
  },
  {
    "text": "build our platform we already had tens of thousands of users on ud.com scaling",
    "start": "1518600",
    "end": "1524320"
  },
  {
    "text": "uh taking our courses so we knew that when we launch our platform we would need to scale",
    "start": "1524320",
    "end": "1531399"
  },
  {
    "text": "really really quickly we wouldn't have that typical kind of slow trickle startup thing where we gradually acquire",
    "start": "1531399",
    "end": "1538000"
  },
  {
    "text": "users we would need to scale quickly um and we also knew that we would have very",
    "start": "1538000",
    "end": "1543440"
  },
  {
    "text": "large spikes during sales periods like Black Friday and so for example Black Friday 2016 our load was 40 times our",
    "start": "1543440",
    "end": "1553000"
  },
  {
    "text": "regular day right so we uh did 40 times as much business as we do during a",
    "start": "1553000",
    "end": "1558480"
  },
  {
    "text": "normal day um and it's amazing that our system like we didn't need to do anything we didn't need to provision any",
    "start": "1558480",
    "end": "1564960"
  },
  {
    "text": "additional kind of compute capacity the platform scaled for us we also wanted to offer a disruptive",
    "start": "1564960",
    "end": "1574320"
  },
  {
    "text": "business model right we're doing something different instead of paying like thousands of dollars in personal",
    "start": "1574320",
    "end": "1580919"
  },
  {
    "text": "training in person training um our customers pay like $29 for a course and",
    "start": "1580919",
    "end": "1586720"
  },
  {
    "text": "they keep it forever right it's just one purchase Lifetime exess and I don't",
    "start": "1586720",
    "end": "1593600"
  },
  {
    "text": "think we could have done it without uh Lambda and AWS because Lambda as I said to you",
    "start": "1593600",
    "end": "1600159"
  },
  {
    "text": "before um we only pay for the time that our Lambda function executes and ler executes once when our",
    "start": "1600159",
    "end": "1608559"
  },
  {
    "text": "user goes to take a course um and that's that and I think and again I know that",
    "start": "1608559",
    "end": "1614559"
  },
  {
    "text": "this is recorded but I think it costs us roughly 14 cents to deliver a course to",
    "start": "1614559",
    "end": "1622399"
  },
  {
    "text": "a user once a user buys that course and most of the cost is actually",
    "start": "1622399",
    "end": "1628720"
  },
  {
    "text": "in the um data delivery right this is so",
    "start": "1628720",
    "end": "1633760"
  },
  {
    "text": "that's kind of very interesting and this allows us to not charge those kind of",
    "start": "1633760",
    "end": "1638960"
  },
  {
    "text": "ongoing feeds um That Others May charge and this has really enabled our business",
    "start": "1638960",
    "end": "1645360"
  },
  {
    "text": "model and fueled the growth of our business cost is",
    "start": "1645360",
    "end": "1650520"
  },
  {
    "start": "1650000",
    "end": "1794000"
  },
  {
    "text": "disrupted and look one of the advantages to the serverless approach is that existing applications can be gradually",
    "start": "1650520",
    "end": "1659080"
  },
  {
    "text": "reimplemented to seress architecture so if you're faced with a monolithic code",
    "start": "1659080",
    "end": "1664360"
  },
  {
    "text": "base you can gradually just pull it apart write te it apart and create Lambda functions that your application",
    "start": "1664360",
    "end": "1671600"
  },
  {
    "text": "can communicate with serus doesn't have to be an all or nothing proposition so",
    "start": "1671600",
    "end": "1677600"
  },
  {
    "text": "this system have to be a hybrid but that's okay that's totally fine um",
    "start": "1677600",
    "end": "1683279"
  },
  {
    "text": "you'll still get a lot of benefits um some cons look it is not for",
    "start": "1683279",
    "end": "1690360"
  },
  {
    "text": "everyone services like Lambda run out of a public Cloud so if you're building a",
    "start": "1690360",
    "end": "1695559"
  },
  {
    "text": "mission critical application like a patient life support system for example",
    "start": "1695559",
    "end": "1700720"
  },
  {
    "text": "then you may require a higher level of performance and reliability than a public Cloud can provide um obviously",
    "start": "1700720",
    "end": "1707559"
  },
  {
    "text": "there's service levels and um customization AWS has slas for certain",
    "start": "1707559",
    "end": "1712880"
  },
  {
    "text": "things but not for others so you have to consider that as well is reliability offered by AWS good enough for you it's",
    "start": "1712880",
    "end": "1720799"
  },
  {
    "text": "good enough for our business but it may or may not work for your business there",
    "start": "1720799",
    "end": "1726399"
  },
  {
    "text": "is that other issue of when the Locking and I totally agree with Mike that the",
    "start": "1726399",
    "end": "1734679"
  },
  {
    "text": "when locking issue is not in the Lambda functions Lambda functions are easy to P across",
    "start": "1734679",
    "end": "1741279"
  },
  {
    "text": "you can wrap your Lambda function in an Express framework and run it on your own server it's not a big deal the issue are",
    "start": "1741279",
    "end": "1748799"
  },
  {
    "text": "the other services that you may integrate with in a public cloud like AWS how are you going to P across sree",
    "start": "1748799",
    "end": "1756320"
  },
  {
    "text": "and Kinesis and Dynamo TB and all the other services that your serverless application could be using so that's",
    "start": "1756320",
    "end": "1763440"
  },
  {
    "text": "something you have to consider um and of course decentralization you know if you move",
    "start": "1763440",
    "end": "1768919"
  },
  {
    "text": "from a monolithic approach to a more decentralized uh servess approach you",
    "start": "1768919",
    "end": "1774799"
  },
  {
    "text": "know you're not automatically reducing the complexity of your system not at all in fact the distributed nature um of the",
    "start": "1774799",
    "end": "1782000"
  },
  {
    "text": "solution can introduce its own challenges because now you are making remote rather than impr process calls",
    "start": "1782000",
    "end": "1788919"
  },
  {
    "text": "and so you need to handle failures and latency across a network like you would with say",
    "start": "1788919",
    "end": "1795200"
  },
  {
    "start": "1794000",
    "end": "1853000"
  },
  {
    "text": "microservices of course there are a lot of PRS um why you would go with a serverless",
    "start": "1795200",
    "end": "1800440"
  },
  {
    "text": "approach the big one is no more servers to manage so you don't need to think about server configuration and",
    "start": "1800440",
    "end": "1806240"
  },
  {
    "text": "management patching maintenance all of that is taken care of by the vendor and",
    "start": "1806240",
    "end": "1811960"
  },
  {
    "text": "let's say Amazon in our case looks after the health of the of its Fleet of",
    "start": "1811960",
    "end": "1817320"
  },
  {
    "text": "service and it has to make sure that capacity is provisioned for",
    "start": "1817320",
    "end": "1823159"
  },
  {
    "text": "us um versatility um we have found that servess architectures are very versatile",
    "start": "1823159",
    "end": "1828600"
  },
  {
    "text": "so we have built backends we have built event pipelines we process a lot of data we have chatbots that we've built um you",
    "start": "1828600",
    "end": "1836240"
  },
  {
    "text": "can do all kinds of things and you can do them really quickly low cost um I've said this to you before you are only",
    "start": "1836240",
    "end": "1843600"
  },
  {
    "text": "paying while your user is doing something useful if your user isn't using your system that then you're not",
    "start": "1843600",
    "end": "1850039"
  },
  {
    "text": "paying anything so that's interesting whoops sorry I jumped across",
    "start": "1850039",
    "end": "1858638"
  },
  {
    "text": "um and of course you know um there's um scalability flexibility and we have",
    "start": "1859440",
    "end": "1865399"
  },
  {
    "text": "found that our system actually has less code which is",
    "start": "1865399",
    "end": "1873240"
  },
  {
    "start": "1871000",
    "end": "1951000"
  },
  {
    "text": "interesting so we kind of built our system and it was awesome and it",
    "start": "1873320",
    "end": "1879039"
  },
  {
    "text": "scaled but we realized something about our architecture yes it was servess but",
    "start": "1879039",
    "end": "1886720"
  },
  {
    "text": "it was actually a serverless mon why well it's because we had one",
    "start": "1886720",
    "end": "1894679"
  },
  {
    "text": "database fase and everything was coupled to it so all of our Lambda functions",
    "start": "1894679",
    "end": "1900639"
  },
  {
    "text": "would write to this database which was okay it got us to Market you know um it",
    "start": "1900639",
    "end": "1907480"
  },
  {
    "text": "created our business but it presented a number of challenges first of all we wanted to",
    "start": "1907480",
    "end": "1914399"
  },
  {
    "text": "bring in a mobile app and that was hard to do we didn't really have a verion",
    "start": "1914399",
    "end": "1920200"
  },
  {
    "text": "consistent uh consistent API we also used cloud formation for the",
    "start": "1920200",
    "end": "1926600"
  },
  {
    "text": "AWS parts of our system but there was no cloud formation for Firebase right it's a Google product it's made by another",
    "start": "1926600",
    "end": "1933679"
  },
  {
    "text": "vendor that was hard to manage and how would we kind of scale from a few",
    "start": "1933679",
    "end": "1941039"
  },
  {
    "text": "developers that we had to 10 to 10 developers 2050 without everybody kind of stepping",
    "start": "1941039",
    "end": "1947399"
  },
  {
    "text": "over one another um and dealing with a single code base and a database so this is what we have right",
    "start": "1947399",
    "end": "1954120"
  },
  {
    "start": "1951000",
    "end": "1966000"
  },
  {
    "text": "we have kind of our cool little serverless system uh we have our LDA",
    "start": "1954120",
    "end": "1959240"
  },
  {
    "text": "functions we have our database and everything works okay but how do we grow",
    "start": "1959240",
    "end": "1965000"
  },
  {
    "text": "where do we go from here so we decided to move to a microservices style",
    "start": "1965000",
    "end": "1971880"
  },
  {
    "start": "1966000",
    "end": "2120000"
  },
  {
    "text": "architecture so where each distinct business domain is represented by",
    "start": "1971880",
    "end": "1977200"
  },
  {
    "text": "separate Microsoft service and each microservice is responsible for its own",
    "start": "1977200",
    "end": "1982559"
  },
  {
    "text": "view of the world it has its own database and its own API and this has",
    "start": "1982559",
    "end": "1988080"
  },
  {
    "text": "allowed us to achieve acceleration with highly focused teams that that own and",
    "start": "1988080",
    "end": "1993799"
  },
  {
    "text": "are accountable for one particular aspect of the system and it allows us to actually scale various parts of our",
    "start": "1993799",
    "end": "2000639"
  },
  {
    "text": "system separately so we can allocate different read and write throughput um",
    "start": "2000639",
    "end": "2005760"
  },
  {
    "text": "capabilities to Dynamo DB depending on the different levels of demand that we may",
    "start": "2005760",
    "end": "2011519"
  },
  {
    "text": "experience and so here's a very simple example right so this is our learning record service so we have a request it",
    "start": "2011519",
    "end": "2018440"
  },
  {
    "text": "comes through the API Gateway for that particular micros service um there's a",
    "start": "2018440",
    "end": "2023880"
  },
  {
    "text": "little Lambda function just above the API Gateway that's our custom authorizer it authenticates the request then the",
    "start": "2023880",
    "end": "2030159"
  },
  {
    "text": "API Gateway um invokes a Lambda function that Lambda function writes something to",
    "start": "2030159",
    "end": "2036440"
  },
  {
    "text": "our source of Truth which is Dynamo DB which is a Dynamo DB table in this",
    "start": "2036440",
    "end": "2042720"
  },
  {
    "text": "example so again every microservice has its own database but the action of runting",
    "start": "2042720",
    "end": "2048679"
  },
  {
    "text": "something to that Dynamo DB table invokes another Lambda function which then goes and updates Firebase which is",
    "start": "2048679",
    "end": "2056000"
  },
  {
    "text": "as you remember our old Firebase that we used which is coupled to our user",
    "start": "2056000",
    "end": "2061200"
  },
  {
    "text": "interface but now Firebase is basically used as a materialized view that drives",
    "start": "2061200",
    "end": "2067240"
  },
  {
    "text": "our UI why there are no smarts in this database we don't do anything really",
    "start": "2067240",
    "end": "2073720"
  },
  {
    "text": "with it we update the database we denormalize everything and that simply updates our UI so what happens is again",
    "start": "2073720",
    "end": "2081599"
  },
  {
    "text": "we have our source of Truth which is our Dynamo DB table for this particular micros service and then we have Firebase",
    "start": "2081599",
    "end": "2088040"
  },
  {
    "text": "which is that materialized view which drives our UI and again everything is push based and then driven as soon as a",
    "start": "2088040",
    "end": "2095358"
  },
  {
    "text": "change is made to Firebase everything updates we also use algolia which is an awesome search service that you can use to kind",
    "start": "2095359",
    "end": "2102760"
  },
  {
    "text": "of provide search capability um for your application I actually implemented um",
    "start": "2102760",
    "end": "2109280"
  },
  {
    "text": "Cloud search um on AWS and don't go there um don't don't try it um again",
    "start": "2109280",
    "end": "2117480"
  },
  {
    "text": "sorry Chris if you here so there you go um and when you",
    "start": "2117480",
    "end": "2123359"
  },
  {
    "start": "2120000",
    "end": "2167000"
  },
  {
    "text": "think about it we've migrated from this serous monolithic architecture",
    "start": "2123359",
    "end": "2128560"
  },
  {
    "text": "to microservices without actually having to think about infrastructure we haven't",
    "start": "2128560",
    "end": "2134200"
  },
  {
    "text": "had to think about server provisioning or web forms or load balances we changed",
    "start": "2134200",
    "end": "2139839"
  },
  {
    "text": "our architecture by changing a gml file in a serus framework so we use a product",
    "start": "2139839",
    "end": "2145880"
  },
  {
    "text": "called serverless framework which allows us to kind of organize orchestrate and",
    "start": "2145880",
    "end": "2152119"
  },
  {
    "text": "deploy our entire application in one go and yeah so we defined our",
    "start": "2152119",
    "end": "2157800"
  },
  {
    "text": "architecture in that one file number of files and we hit deploy and our system",
    "start": "2157800",
    "end": "2164720"
  },
  {
    "text": "can be created um at h of a",
    "start": "2164720",
    "end": "2168920"
  },
  {
    "start": "2167000",
    "end": "2245000"
  },
  {
    "text": "button one other thing to think about when going serverless um managed",
    "start": "2170839",
    "end": "2177200"
  },
  {
    "text": "services are moving targets right you are building against a set of managed",
    "start": "2177200",
    "end": "2182960"
  },
  {
    "text": "services so for example Firebase made their old version obsolete which forced",
    "start": "2182960",
    "end": "2189280"
  },
  {
    "text": "us to upgrade suddenly node 0.1 support was dropped by AWS Lambda and that",
    "start": "2189280",
    "end": "2196520"
  },
  {
    "text": "forced us to upgrade we had no other choice right Amazon said sorry guys we're turning off support for node",
    "start": "2196520",
    "end": "2203280"
  },
  {
    "text": "0.1 tomorrow and well it wasn't tomorrow we had a couple of months to do it but we had to do it um so you have to",
    "start": "2203280",
    "end": "2210560"
  },
  {
    "text": "consider that um we had a bug uh bug um",
    "start": "2210560",
    "end": "2215640"
  },
  {
    "text": "that showed up in our deployment because or zero so another service that we use",
    "start": "2215640",
    "end": "2220920"
  },
  {
    "text": "introduced a library change like a minor version and that had a bug in it and",
    "start": "2220920",
    "end": "2226400"
  },
  {
    "text": "that forced our application to have a bug so yeah look it sounds amazing that",
    "start": "2226400",
    "end": "2232079"
  },
  {
    "text": "you know you can um create all these services and Lambda functions and have this awesome",
    "start": "2232079",
    "end": "2237640"
  },
  {
    "text": "scalable architecture and you can but you do have to consider and think about the kind of um the E Parts as",
    "start": "2237640",
    "end": "2246400"
  },
  {
    "start": "2245000",
    "end": "2347000"
  },
  {
    "text": "well um um so look I want to tell you that this is a",
    "start": "2246400",
    "end": "2253280"
  },
  {
    "text": "worthwhile thing to have a look at this is fun even if you do it in your own Spare Time create a Lambda function hook",
    "start": "2253280",
    "end": "2260480"
  },
  {
    "text": "it up to something create a serverless chatboard it is really just fun to do",
    "start": "2260480",
    "end": "2265880"
  },
  {
    "text": "and I think you will realize as you work with it more and more you will see kind of the power that you get from it and",
    "start": "2265880",
    "end": "2272800"
  },
  {
    "text": "you will I think identify aspects in your day-to-day job where you could use a approach as well um so I run a",
    "start": "2272800",
    "end": "2281400"
  },
  {
    "text": "conference called serverless cont and we are going to have videos from all the speakers who attended um our most recent",
    "start": "2281400",
    "end": "2288839"
  },
  {
    "text": "conference which was last week um on YouTube so you can just go to video",
    "start": "2288839",
    "end": "2294079"
  },
  {
    "text": "doc.io and you'll see all the um videos there um we'll have a number of great",
    "start": "2294079",
    "end": "2301160"
  },
  {
    "text": "Talks by people like Mike um for example um charity Mages um Chris um we just",
    "start": "2301160",
    "end": "2308200"
  },
  {
    "text": "presented before as well Tim Wagner who's the head of the servess team um",
    "start": "2308200",
    "end": "2313480"
  },
  {
    "text": "AWS so great talks you will see lots of different perspectives debates this is",
    "start": "2313480",
    "end": "2319560"
  },
  {
    "text": "still a very new area every one of you can still become a Pioneer can be a Pioneer in this and",
    "start": "2319560",
    "end": "2327040"
  },
  {
    "text": "like Mike said we haven't discovered all the patents and all the architectures",
    "start": "2327040",
    "end": "2332440"
  },
  {
    "text": "that we can deal with this approach so I kind of urge you get into it build",
    "start": "2332440",
    "end": "2338000"
  },
  {
    "text": "something share with the community blog about it because you can be that next Pioneer you the next dyra that kind of",
    "start": "2338000",
    "end": "2345599"
  },
  {
    "text": "leads us forward um I didn't know how much time I would have when I thought maybe you know",
    "start": "2345599",
    "end": "2351640"
  },
  {
    "start": "2347000",
    "end": "2376000"
  },
  {
    "text": "all run I would have too much time left so I added a couple of pictures from the conference so we did it um this",
    "start": "2351640",
    "end": "2358319"
  },
  {
    "text": "Conference was held at the Zack theater in Austin Texas so Mike performed on stage and I hope he enjoyed the",
    "start": "2358319",
    "end": "2364520"
  },
  {
    "text": "experience it's kind of weird being on stage and having everybody up in front of you um so here's another",
    "start": "2364520",
    "end": "2373079"
  },
  {
    "text": "picture here's another picture that's po um final plug we do a number of",
    "start": "2373079",
    "end": "2379800"
  },
  {
    "start": "2376000",
    "end": "2387000"
  },
  {
    "text": "workshops on Ser archit servess architecture so if you interest if you are interested please come and talk to",
    "start": "2379800",
    "end": "2385200"
  },
  {
    "text": "me um and look that's it this stuff is fun um so look get your hands diry build",
    "start": "2385200",
    "end": "2392920"
  },
  {
    "text": "something small go with it and yeah give it a try thank you for listening",
    "start": "2392920",
    "end": "2399460"
  },
  {
    "text": "[Applause]",
    "start": "2399460",
    "end": "2408750"
  }
]