[
  {
    "text": "[Music]",
    "start": "3550",
    "end": "7840"
  },
  {
    "text": "hi guys thanks does it work yeah okay",
    "start": "14980",
    "end": "20599"
  },
  {
    "text": "thanks to be here for these last slots I know that has been a long day for you I will be trying to be as entertaining as",
    "start": "20599",
    "end": "26840"
  },
  {
    "text": "possible if not they just feel free to like those of a bit before the party no worries I'm Nicola Frankel I am a big",
    "start": "26840",
    "end": "35570"
  },
  {
    "text": "cutting fan like I starting like some years ago I wanted to teach myself on droids and I mean if you are live been",
    "start": "35570",
    "end": "42980"
  },
  {
    "text": "doing on droids coming from like back-end server like it's really a pain",
    "start": "42980",
    "end": "48129"
  },
  {
    "text": "because the API is very low level and so I try to search for something that could",
    "start": "48129",
    "end": "54050"
  },
  {
    "text": "help me doing better code and then iPhone Catalan I stopped Android but I'm still doing like cutting on the back end",
    "start": "54050",
    "end": "60679"
  },
  {
    "text": "and also I've been a being cut like spring user since a lot of time I work",
    "start": "60679",
    "end": "66740"
  },
  {
    "text": "for a company called exascale we are cloud providers with company European provider who are already using the cloud",
    "start": "66740",
    "end": "74510"
  },
  {
    "text": "here right now a couple of hands not that many Amazon yeah Google Microsoft",
    "start": "74510",
    "end": "85070"
  },
  {
    "text": "Azure ok I just be very like cautious",
    "start": "85070",
    "end": "90110"
  },
  {
    "text": "and anything else any other cloud provider who is using eggs yeah eggs or scale thank you very much",
    "start": "90110",
    "end": "98439"
  },
  {
    "text": "yeah be very cautious when you use a cloud provider especially if it's an American one because you might not know",
    "start": "98439",
    "end": "105049"
  },
  {
    "text": "but there is something called the cloud act which mean that's when you contract with an American company they are",
    "start": "105049",
    "end": "110780"
  },
  {
    "text": "subject to the Kawada Act so they can disclose the data I mean legally they must get the data from the data center",
    "start": "110780",
    "end": "117530"
  },
  {
    "text": "and give it to the US governments with their governments requested and it applies anywhere in the world it's like",
    "start": "117530",
    "end": "123890"
  },
  {
    "text": "GDP or you don't care where you are in the world if you are European citizen you are covered like data center they",
    "start": "123890",
    "end": "129619"
  },
  {
    "text": "are the same so be very cautious about the data and especially the privacy because if you are responsible for the",
    "start": "129619",
    "end": "135440"
  },
  {
    "text": "privacy for your customer and your that I goes away then you might be liable anyway this talk is about spring and",
    "start": "135440",
    "end": "143530"
  },
  {
    "text": "configuration management so who here is a spring buuut developer okay so I don't need to",
    "start": "143530",
    "end": "152209"
  },
  {
    "text": "repeat all that stuff you know everything right and the the most",
    "start": "152209",
    "end": "157459"
  },
  {
    "text": "important part of that slide then is like convention of a configuration like",
    "start": "157459",
    "end": "164599"
  },
  {
    "text": "you might remember before spring boots you were doing spring project and when",
    "start": "164599",
    "end": "171200"
  },
  {
    "text": "you did spring project what I did at least was I crafted my palm my lovely",
    "start": "171200",
    "end": "176900"
  },
  {
    "text": "pump I crafted it by hand and then I had to align every dependency and every",
    "start": "176900",
    "end": "182629"
  },
  {
    "text": "version and sometimes I even have yeah you know you feel my pain right I had to exclude some stuff and to",
    "start": "182629",
    "end": "189739"
  },
  {
    "text": "realign the version well I told my team guy yeah just take a break come back tomorrow or the day after",
    "start": "189739",
    "end": "195620"
  },
  {
    "text": "I will craft the poem I will write a simple use case and then you can come and we can all work together and spring",
    "start": "195620",
    "end": "201590"
  },
  {
    "text": "boot came and everybody is happy and now we can just go to start dot spring dot IO we create our project five minutes",
    "start": "201590",
    "end": "207439"
  },
  {
    "text": "it's done right and we are super happy aren't we yes",
    "start": "207439",
    "end": "215260"
  },
  {
    "text": "but then people are never happy actually and so some of you of us of the",
    "start": "215480",
    "end": "223069"
  },
  {
    "text": "community say but you do it's too magical it works and I don't understand why and",
    "start": "223069",
    "end": "231379"
  },
  {
    "text": "of course if it doesn't work because bug happened then you are a bit like sad",
    "start": "231379",
    "end": "236900"
  },
  {
    "text": "because it's very hard to find that the root cause because you don't understand how that work and most of the problem",
    "start": "236900",
    "end": "243470"
  },
  {
    "text": "comes from annotation I mean when Java 5 was released then came a notation and",
    "start": "243470",
    "end": "250670"
  },
  {
    "text": "what every time something new happens people there rush to it they want to use",
    "start": "250670",
    "end": "255890"
  },
  {
    "text": "it because they want would have to have it on their resume a and everybody wants to use the latest and greatest and",
    "start": "255890",
    "end": "260900"
  },
  {
    "text": "spring is no exception so when actually is like Java 5 was delivered then they",
    "start": "260900",
    "end": "266300"
  },
  {
    "text": "use annotations everywhere and instead of the really really bad XML there are",
    "start": "266300",
    "end": "271610"
  },
  {
    "text": "very very nice annotations right but now",
    "start": "271610",
    "end": "277850"
  },
  {
    "text": "it's not so cool anymore so we want to remove annotations and let's do a demo",
    "start": "277850",
    "end": "283370"
  },
  {
    "text": "for that because I don't like slides anyway ok I have created on stop dot",
    "start": "283370",
    "end": "293210"
  },
  {
    "text": "spring dot IO I have created a project and this is not very like very hot",
    "start": "293210",
    "end": "301460"
  },
  {
    "text": "project is just light spring data GPA like spring web MVC like some cotton",
    "start": "301460",
    "end": "309919"
  },
  {
    "text": "library but normal cotton libraries and just the database embedded database",
    "start": "309919",
    "end": "315380"
  },
  {
    "text": "because I'm using GPI you will be using h2 they are perhaps some places left if you don't want to sit on the floor or",
    "start": "315380",
    "end": "322010"
  },
  {
    "text": "just stand up could you please raise your hand if there is a free seat next to you so that the gentleman can sit",
    "start": "322010",
    "end": "328280"
  },
  {
    "text": "nicely thank you very much that's much appreciated thank you no worries",
    "start": "328280",
    "end": "337060"
  },
  {
    "text": "so here I have this like property file that tells me that I won't win that my",
    "start": "337240",
    "end": "343070"
  },
  {
    "text": "man Jackson my Jason and I can like initialize my data",
    "start": "343070",
    "end": "349460"
  },
  {
    "text": "at the start of the application and otherwise who here has never done any",
    "start": "349460",
    "end": "356270"
  },
  {
    "text": "Coughlin's well Wow like 80% of the room",
    "start": "356270",
    "end": "361729"
  },
  {
    "text": "okay so I will like describe what I'm doing but no worries it's like Java but",
    "start": "361729",
    "end": "367220"
  },
  {
    "text": "better cut off that place I will be",
    "start": "367220",
    "end": "372280"
  },
  {
    "text": "recorded it's very bad for me anyway so here this is a simple class I add an",
    "start": "372280",
    "end": "378889"
  },
  {
    "text": "annotation which you know because you know spring boots have here the",
    "start": "378889",
    "end": "384580"
  },
  {
    "text": "difference between Java and Kirkland is that like Kotlin allows to have top level function because in Java",
    "start": "384580",
    "end": "391820"
  },
  {
    "text": "everything must be inside a cloth right everything so even if it doesn't make any sense because when you start having",
    "start": "391820",
    "end": "398330"
  },
  {
    "text": "static methods I mean having them inside of class is just like a different name space but doesn't make any sense but in",
    "start": "398330",
    "end": "406460"
  },
  {
    "text": "coupling you can either have top level function it's not something original you can do that in Scala as well but here",
    "start": "406460",
    "end": "412280"
  },
  {
    "text": "it's it's the same okay also I can have multiple classes inside the same file",
    "start": "412280",
    "end": "419509"
  },
  {
    "text": "like amazing amazing and and a worse I can have multiple public classes inside",
    "start": "419509",
    "end": "426289"
  },
  {
    "text": "the same file which is not a lot in Java that's very cool for demos sometimes not",
    "start": "426289",
    "end": "431840"
  },
  {
    "text": "so that grades if you want to put everything into the same file but again it's always a matter of appreciation",
    "start": "431840",
    "end": "437300"
  },
  {
    "text": "because here for example would be very stupid do as disk to have this class into a single file because there is",
    "start": "437300",
    "end": "443120"
  },
  {
    "text": "nothing so we can put stuff into the same file by default if you don't",
    "start": "443120",
    "end": "449719"
  },
  {
    "text": "specify it everything is public so here everything is public and I have a",
    "start": "449719",
    "end": "456530"
  },
  {
    "text": "controller so again like pure spring I have a rest controller I in continue you",
    "start": "456530",
    "end": "463550"
  },
  {
    "text": "conflate the declaration of the class and the primary constructor just like in Scala so here I'm doing the",
    "start": "463550",
    "end": "471080"
  },
  {
    "text": "same and I'm injecting the person repository because again this is a constructor then I have a get mapping",
    "start": "471080",
    "end": "477320"
  },
  {
    "text": "and a get mapping flag for person get mapping for a specific person here I'm",
    "start": "477320",
    "end": "482930"
  },
  {
    "text": "using a little trick I am using like this is",
    "start": "482930",
    "end": "490060"
  },
  {
    "text": "what I should write but because it's a one-liner I can remove the return",
    "start": "490060",
    "end": "497840"
  },
  {
    "text": "keyword and remove the braces again this",
    "start": "497840",
    "end": "503840"
  },
  {
    "text": "is very much like Scala if you have done a nice color there is no black magic and",
    "start": "503840",
    "end": "508930"
  },
  {
    "text": "also here it's smart enough like to understand that the type can be inferred",
    "start": "508930",
    "end": "515930"
  },
  {
    "text": "I mean now that you are if you are using Java 11 you know that the Java compiler becomes very smart because it can infer",
    "start": "515930",
    "end": "523640"
  },
  {
    "text": "the type of local variables yeah finally but I mean the compile of the Java",
    "start": "523640",
    "end": "530150"
  },
  {
    "text": "compiler by default is not very small because it doesn't infer a lot of stuff but compiler can be made so that they",
    "start": "530150",
    "end": "536660"
  },
  {
    "text": "can understand the type and in most cases for this one-liner for example it doesn't make a lot of sense to specify",
    "start": "536660",
    "end": "542780"
  },
  {
    "text": "the type the type explicitly then I add this class person which is an entity it",
    "start": "542780",
    "end": "548300"
  },
  {
    "text": "has an ID and here the good stuff is that I don't need to declare getters and setters is just like gin they are",
    "start": "548300",
    "end": "555470"
  },
  {
    "text": "generated for us it's a bit like Lombok and here I have a default value meaning",
    "start": "555470",
    "end": "561740"
  },
  {
    "text": "that if I omit this setter then I will have a default value I'm sorry there is",
    "start": "561740",
    "end": "568820"
  },
  {
    "text": "no setter because those are evolved so I need to provide this value at a construction time and here it's just",
    "start": "568820",
    "end": "575720"
  },
  {
    "text": "bring that a GPA meaning that I'm using I'm inheriting from paging and sorting",
    "start": "575720",
    "end": "581120"
  },
  {
    "text": "repository so at runtime I will have like the default methods and I can call them just like like fine all and find",
    "start": "581120",
    "end": "588020"
  },
  {
    "text": "buy eggs this is not white spring magic its spring data magic right so let's",
    "start": "588020",
    "end": "596300"
  },
  {
    "text": "start this and you will see that again it's very simple",
    "start": "596300",
    "end": "602830"
  },
  {
    "text": "any questions about this codebase I mean it's I don't think that's very special",
    "start": "605520",
    "end": "613649"
  },
  {
    "text": "so here I can do localhost person and then I've got all persons and I will",
    "start": "613649",
    "end": "619470"
  },
  {
    "text": "just make that a little smaller no I cannot and then I can have the raw data and if I want just like ID number one I",
    "start": "619470",
    "end": "627270"
  },
  {
    "text": "will do that right nice great and of course the",
    "start": "627270",
    "end": "635580"
  },
  {
    "text": "people who are like not happy about magic they find a lot of magic here and",
    "start": "635580",
    "end": "640770"
  },
  {
    "text": "again magic is in annotations and the problem of annotation is a real one the thing is",
    "start": "640770",
    "end": "646380"
  },
  {
    "text": "when I'm reading a code base there is like implicit understanding of that code",
    "start": "646380",
    "end": "653370"
  },
  {
    "text": "base and explicit if I don't understand something in a code base I can use an IDE control click and III find where a",
    "start": "653370",
    "end": "661649"
  },
  {
    "text": "function is has been defined if I call a function if I do that with a notation it",
    "start": "661649",
    "end": "667290"
  },
  {
    "text": "doesn't work the notation doesn't know about its annotation processors and",
    "start": "667290",
    "end": "673579"
  },
  {
    "text": "that's the real problem so instead of reading the code you read the documentation which for me is fine but",
    "start": "673579",
    "end": "680579"
  },
  {
    "text": "for some people is not so the point is how can we remove as many annotations as",
    "start": "680579",
    "end": "688140"
  },
  {
    "text": "possible so where do we get the most annotations in the controller so the",
    "start": "688140",
    "end": "697860"
  },
  {
    "text": "controller is actually a very like low-hanging fruit if you remember the controller then we can basically remove",
    "start": "697860",
    "end": "704700"
  },
  {
    "text": "three annotations okay so let's do that and we've like Spring Framework five we",
    "start": "704700",
    "end": "715500"
  },
  {
    "text": "have something called the route so if we add a beam that has this rotor function",
    "start": "715500",
    "end": "724860"
  },
  {
    "text": "stuff and now I will need to import everything manually because ID doesn't know how to do it it looks much nicer",
    "start": "724860",
    "end": "732750"
  },
  {
    "text": "now and last year I was here at cotton conf",
    "start": "732750",
    "end": "741170"
  },
  {
    "text": "and I did the same talk with like different conclusion and different",
    "start": "741170",
    "end": "746480"
  },
  {
    "text": "issues last year in order to use the roots you had to be reactive you had to",
    "start": "746480",
    "end": "754700"
  },
  {
    "text": "be reactive and personally I think that reactive makes sense in some cases but",
    "start": "754700",
    "end": "760550"
  },
  {
    "text": "in some other cases well in all cases it makes the code harder to debug much",
    "start": "760550",
    "end": "766550"
  },
  {
    "text": "harder to debug so I'm not saying you shouldn't do it I'm saying you should be aware that it might cause problem and so",
    "start": "766550",
    "end": "774250"
  },
  {
    "text": "again a cutting conf the problem was we had to go reactive the whole way but now right now I'm",
    "start": "774250",
    "end": "782450"
  },
  {
    "text": "using the 5.2 dot and three I think let",
    "start": "782450",
    "end": "789680"
  },
  {
    "text": "me check sorry - the 200m free spin",
    "start": "789680",
    "end": "795320"
  },
  {
    "text": "boots we can use web Athan the functional way to do spring MVC meaning",
    "start": "795320",
    "end": "805279"
  },
  {
    "text": "that we can still be doing our own stuff but using an API that is functional",
    "start": "805279",
    "end": "812510"
  },
  {
    "text": "without being reactive right that is",
    "start": "812510",
    "end": "818149"
  },
  {
    "text": "okay it's perhaps if you are not used to it it makes the stuff harder to read but",
    "start": "818149",
    "end": "823399"
  },
  {
    "text": "at least everything is explicit here because here we can check the end of function what it doesn't blah blah blah",
    "start": "823399",
    "end": "828820"
  },
  {
    "text": "so this is the first part now we can remove that and then we will add another",
    "start": "828820",
    "end": "836149"
  },
  {
    "text": "root here that's there and now I can",
    "start": "836149",
    "end": "847100"
  },
  {
    "text": "remove the controller and finally I will compile it and because I'm using spring",
    "start": "847100",
    "end": "853610"
  },
  {
    "text": "dev tools then it tries to like reload the class pass and it doesn't work but I",
    "start": "853610",
    "end": "859910"
  },
  {
    "text": "don't care because then you know about spring dev tools who knows about it okay",
    "start": "859910",
    "end": "866360"
  },
  {
    "text": "if you are using spring boots you should know well even spring but spring you should know about it means that you",
    "start": "866360",
    "end": "872060"
  },
  {
    "text": "they are like two class loaders one is about the libraries the other is about your own code so when the hot-swap from",
    "start": "872060",
    "end": "880010"
  },
  {
    "text": "the JVM doesn't work it will just scratch your own class class loader",
    "start": "880010",
    "end": "885170"
  },
  {
    "text": "and it will keep the class loader of the libraries which means that actually you start very very fast now if we try again",
    "start": "885170",
    "end": "893090"
  },
  {
    "text": "it's the same results I don't want to",
    "start": "893090",
    "end": "898370"
  },
  {
    "text": "try to print it okay so we just remove three annotations it's pretty cool right",
    "start": "898370",
    "end": "907510"
  },
  {
    "text": "but we added one more it's not that cool",
    "start": "907510",
    "end": "913690"
  },
  {
    "text": "okay next is perhaps you will tell me",
    "start": "913690",
    "end": "919940"
  },
  {
    "text": "that this is not super great we are like conflating the routine and what you",
    "start": "919940",
    "end": "928700"
  },
  {
    "text": "actually do so perhaps it would be a great stuff to like have a dedicated",
    "start": "928700",
    "end": "934520"
  },
  {
    "text": "piece of code for that let's do that and in my web FN or before like reactive it",
    "start": "934520",
    "end": "947150"
  },
  {
    "text": "was called a handler so I used the same like a name but it's not reactive",
    "start": "947150",
    "end": "952850"
  },
  {
    "text": "anymore and here I just need to create a handler so what I will do I will do",
    "start": "952850",
    "end": "958130"
  },
  {
    "text": "something like that no something like that I will convert to block body and I",
    "start": "958130",
    "end": "965840"
  },
  {
    "text": "will create you're my handler person",
    "start": "965840",
    "end": "971930"
  },
  {
    "text": "angler so that's something that is cool so in Kotlin you don't need to write new",
    "start": "971930",
    "end": "977120"
  },
  {
    "text": "every time because new is always the same yeah I'm I'm super lazy I'm sorry",
    "start": "977120",
    "end": "983630"
  },
  {
    "text": "for that and red one and I and you read",
    "start": "983630",
    "end": "993550"
  },
  {
    "text": "okay so for Kathleen this is this is actually a lambda and if I write it's",
    "start": "997630",
    "end": "1003959"
  },
  {
    "text": "the really long way I will write it something like that server requests no",
    "start": "1003959",
    "end": "1010139"
  },
  {
    "text": "you don't want to do that I will write",
    "start": "1010139",
    "end": "1015810"
  },
  {
    "text": "it like that and I can give it any name I want but again it's about inference so",
    "start": "1015810",
    "end": "1023569"
  },
  {
    "text": "here it knows that we are passing it's like a server request that I T is was",
    "start": "1023569",
    "end": "1030659"
  },
  {
    "text": "server requests because read one play requires a request so it tells me that",
    "start": "1030659",
    "end": "1037380"
  },
  {
    "text": "sorry it's not necessary if you want you can tell it but it's not necessary and by default the parameter is name I see",
    "start": "1037380",
    "end": "1044579"
  },
  {
    "text": "just like in groovy so it reads like",
    "start": "1044579",
    "end": "1050280"
  },
  {
    "text": "that and at this point we can also like",
    "start": "1050280",
    "end": "1055740"
  },
  {
    "text": "say we can have a reference if you prefer reference so just just like in",
    "start": "1055740",
    "end": "1063450"
  },
  {
    "text": "Java okay now it looks a bit better here it shouldn't be a war it should be well",
    "start": "1063450",
    "end": "1069809"
  },
  {
    "text": "because we want the stuff to be immutable and it looks bit better right",
    "start": "1069809",
    "end": "1076549"
  },
  {
    "text": "okay thing is that stuff here it's still",
    "start": "1076549",
    "end": "1083340"
  },
  {
    "text": "the Java API and Java API well it's a",
    "start": "1083340",
    "end": "1090390"
  },
  {
    "text": "bit let's say boilerplate here we can do",
    "start": "1090390",
    "end": "1096630"
  },
  {
    "text": "better and actually we can do better without introducing anything new into",
    "start": "1096630",
    "end": "1102179"
  },
  {
    "text": "our dependency because since framework version 5 of spring there is like a root",
    "start": "1102179",
    "end": "1109230"
  },
  {
    "text": "or DSL just for cuddling so even if you don't use it there is the root or DSL so",
    "start": "1109230",
    "end": "1115620"
  },
  {
    "text": "instead of using those routes here we will use the root or DSL",
    "start": "1115620",
    "end": "1123200"
  },
  {
    "text": "is exactly the same code but using the Coughlin API looks much better right",
    "start": "1124039",
    "end": "1134499"
  },
  {
    "text": "now we can remove that and we can try to",
    "start": "1134950",
    "end": "1143359"
  },
  {
    "text": "compile again to check that everything works as expected because I'm like",
    "start": "1143359",
    "end": "1152779"
  },
  {
    "text": "adding stuff with annotation and removing stuff with validation of course what's web doesn't work that well but so",
    "start": "1152779",
    "end": "1161539"
  },
  {
    "text": "everything still works good can we do",
    "start": "1161539",
    "end": "1167479"
  },
  {
    "text": "better yeah question obviously is yes the",
    "start": "1167479",
    "end": "1173269"
  },
  {
    "text": "problem that we have right now is this annotation dislike being annotation it's",
    "start": "1173269",
    "end": "1178580"
  },
  {
    "text": "I mean probably you have a lot of bin annotations in your configuration file",
    "start": "1178580",
    "end": "1183859"
  },
  {
    "text": "and again you don't know how they are handled by which annotation processor",
    "start": "1183859",
    "end": "1189019"
  },
  {
    "text": "and we would like to make everything explicit and for that what we can do is",
    "start": "1189019",
    "end": "1197169"
  },
  {
    "text": "we can use just like the reason like a route or DSL we can use the beautyrx so",
    "start": "1197859",
    "end": "1203659"
  },
  {
    "text": "again it's part of frame of the frame framework version 5 and inside we can",
    "start": "1203659",
    "end": "1210559"
  },
  {
    "text": "just like create a new deal and put our",
    "start": "1210559",
    "end": "1219529"
  },
  {
    "text": "route stuff so now we have two issues the first one",
    "start": "1219529",
    "end": "1227930"
  },
  {
    "text": "is how do we pass the repository and the",
    "start": "1227930",
    "end": "1233690"
  },
  {
    "text": "second issue is how do we call this function how do we call this function",
    "start": "1233690",
    "end": "1242080"
  },
  {
    "text": "very easily like that again this is the",
    "start": "1242080",
    "end": "1248300"
  },
  {
    "text": "culling yourself in action and now how do we pass the repository I will write",
    "start": "1248300",
    "end": "1256430"
  },
  {
    "text": "magic and I will explain the magic ooh",
    "start": "1256430",
    "end": "1260650"
  },
  {
    "text": "yeah that's very big magic but at least here I can click and say what does it do",
    "start": "1268540",
    "end": "1273950"
  },
  {
    "text": "and I will explain everything still making sure that everything works yes",
    "start": "1273950",
    "end": "1281050"
  },
  {
    "text": "okay how does that stuff works",
    "start": "1281050",
    "end": "1286870"
  },
  {
    "text": "I can like define the beam of type",
    "start": "1293440",
    "end": "1298510"
  },
  {
    "text": "person and ler and say in the context get me a beam of type person repository",
    "start": "1298510",
    "end": "1306780"
  },
  {
    "text": "you wouldn't find very strange that's actually what you are doing in general",
    "start": "1306780",
    "end": "1312179"
  },
  {
    "text": "yes okay so the only thing here is that",
    "start": "1312179",
    "end": "1317620"
  },
  {
    "text": "context is like internal so I cannot",
    "start": "1317620",
    "end": "1322929"
  },
  {
    "text": "Exorcist myself but this is what ref does ref does the context that get beam",
    "start": "1322929",
    "end": "1331030"
  },
  {
    "text": "of the type which is super cool so here",
    "start": "1331030",
    "end": "1336970"
  },
  {
    "text": "that you understand ok yes good and now",
    "start": "1336970",
    "end": "1344679"
  },
  {
    "text": "imagine that in Java you could write something like that and imagine that we",
    "start": "1344679",
    "end": "1355600"
  },
  {
    "text": "would have ref I'd generics you could write that yes",
    "start": "1355600",
    "end": "1363280"
  },
  {
    "text": "the problem is in Java generics are not written into the byte code which means",
    "start": "1363280",
    "end": "1369309"
  },
  {
    "text": "we don't have Wi-Fi generic meaning that we need to write every time pass the",
    "start": "1369309",
    "end": "1374679"
  },
  {
    "text": "parameter that's bad right now imagine that if I told you that cotton has",
    "start": "1374679",
    "end": "1380679"
  },
  {
    "text": "reified generics would be pretty cool",
    "start": "1380679",
    "end": "1386100"
  },
  {
    "text": "and actually they do so here instead of",
    "start": "1386159",
    "end": "1392260"
  },
  {
    "text": "saying ref of person repository you see it's in light gray I can just say Ref",
    "start": "1392260",
    "end": "1397620"
  },
  {
    "text": "why because person and learn like requires a person repository and when we",
    "start": "1397620",
    "end": "1404110"
  },
  {
    "text": "have really fight generics here we are verified generic there is only one",
    "start": "1404110",
    "end": "1411429"
  },
  {
    "text": "condition for that must be inlined because of course in the bytecode it is",
    "start": "1411429",
    "end": "1418510"
  },
  {
    "text": "the same by code as in Java so we cannot have really refined generics and in line",
    "start": "1418510",
    "end": "1425890"
  },
  {
    "text": "just mean that you copy this like snippet of code everywhere so you know where you copy that it's the",
    "start": "1425890",
    "end": "1432260"
  },
  {
    "text": "required class type and now you also",
    "start": "1432260",
    "end": "1443300"
  },
  {
    "text": "understand that right this is not magic anymore the next step is basically you",
    "start": "1443300",
    "end": "1452000"
  },
  {
    "text": "can say I want to beam of type person annular reified in line meaning that we",
    "start": "1452000",
    "end": "1461030"
  },
  {
    "text": "know that it will be person endler it will do the new and it will inject the",
    "start": "1461030",
    "end": "1467540"
  },
  {
    "text": "required dependency",
    "start": "1467540",
    "end": "1470560"
  },
  {
    "text": "so here if I want here I that's what I personally would rights because I don't",
    "start": "1476940",
    "end": "1484440"
  },
  {
    "text": "like my beans every bin to be named I want beans to be like anonymous when possible but just to show you I would",
    "start": "1484440",
    "end": "1491999"
  },
  {
    "text": "create a bill which is a person handler",
    "start": "1491999",
    "end": "1498710"
  },
  {
    "text": "for son and learn oops and here I can just say I will just say",
    "start": "1498710",
    "end": "1509940"
  },
  {
    "text": "ref of type person in law because here I",
    "start": "1509940",
    "end": "1515159"
  },
  {
    "text": "cannot infer the type I must say I want a dependency of type person it's a bit",
    "start": "1515159",
    "end": "1523679"
  },
  {
    "text": "far-fetched or everything still everyone still following me big is perfect okay",
    "start": "1523679",
    "end": "1530789"
  },
  {
    "text": "where did you stop I will just get back",
    "start": "1530789",
    "end": "1535398"
  },
  {
    "text": "ok here are you still following me on this person endler and I say because",
    "start": "1538129",
    "end": "1546119"
  },
  {
    "text": "person in law requires a person repository I say find me the bin that is",
    "start": "1546119",
    "end": "1552419"
  },
  {
    "text": "of the right type and because of refight generics in line then it gets me the",
    "start": "1552419",
    "end": "1557789"
  },
  {
    "text": "person repository works for you ok perfect here anywhere I can do that",
    "start": "1557789",
    "end": "1567149"
  },
  {
    "text": "manually I can create a type of type person and law that requires a ref Here",
    "start": "1567149",
    "end": "1577679"
  },
  {
    "text": "I am being anonymous here I have like a bin that can be accessible because it's",
    "start": "1577679",
    "end": "1583289"
  },
  {
    "text": "top level and what I can say is instead of like injecting directly this and it",
    "start": "1583289",
    "end": "1590940"
  },
  {
    "text": "knows it's of type like person repository I'm using the exact same",
    "start": "1590940",
    "end": "1596690"
  },
  {
    "text": "method but I'm using the generic type saying hey please inject me the type of",
    "start": "1596690",
    "end": "1603090"
  },
  {
    "text": "bill person and learn that I need again it's ref ref I generate it will not do",
    "start": "1603090",
    "end": "1610310"
  },
  {
    "text": "contacts dot get beam of type person analog and that person endler has been declared here so far so good",
    "start": "1610310",
    "end": "1618980"
  },
  {
    "text": "okay and now because I'm very very lazy person I'm just using the feature of",
    "start": "1618980",
    "end": "1627470"
  },
  {
    "text": "shrink that it creates it can create bins of any class if we can provide the",
    "start": "1627470",
    "end": "1633200"
  },
  {
    "text": "right dependency so here instead of like printing that manually I just tell him a",
    "start": "1633200",
    "end": "1639340"
  },
  {
    "text": "create a bin of type person an allure so it will do the new for me well actually",
    "start": "1639340",
    "end": "1645140"
  },
  {
    "text": "there is no new because it Scotland but it will instantiate it for us but then",
    "start": "1645140",
    "end": "1650210"
  },
  {
    "text": "it will require a bin of diapers and repository but it's in the context so",
    "start": "1650210",
    "end": "1655400"
  },
  {
    "text": "context dot get bin and take it and inject it and it's done this it was just",
    "start": "1655400",
    "end": "1665540"
  },
  {
    "text": "to show you how it can be done I again I wouldn't recommend doing that because here it's it's used only on this",
    "start": "1665540",
    "end": "1672140"
  },
  {
    "text": "line and I prefer my beans to be like an animus if possible but and let's let's I",
    "start": "1672140",
    "end": "1678890"
  },
  {
    "text": "prove that it works",
    "start": "1678890",
    "end": "1682330"
  },
  {
    "text": "and it still works and now we have one",
    "start": "1692820",
    "end": "1700160"
  },
  {
    "text": "annotation I'm not counting this one",
    "start": "1700160",
    "end": "1705780"
  },
  {
    "text": "because this is GPA this is not spring boot this is how GPA works and we still",
    "start": "1705780",
    "end": "1710880"
  },
  {
    "text": "have this magic that spring data GPA does stuff beyond your back can we do",
    "start": "1710880",
    "end": "1718080"
  },
  {
    "text": "goof can we go further would you like to go further yes to be honest me I'm pretty",
    "start": "1718080",
    "end": "1725220"
  },
  {
    "text": "happy with that but some of you might say yeah but we still have a notation",
    "start": "1725220",
    "end": "1730590"
  },
  {
    "text": "and we had a notation so okay for that I",
    "start": "1730590",
    "end": "1736020"
  },
  {
    "text": "must stop this application and I will",
    "start": "1736020",
    "end": "1741090"
  },
  {
    "text": "just continue my presentation promise I will come back to the presentation",
    "start": "1741090",
    "end": "1746340"
  },
  {
    "text": "afterwards and if we want to go further",
    "start": "1746340",
    "end": "1752250"
  },
  {
    "text": "there is something called spring foo who knows about spring foo a few hands and",
    "start": "1752250",
    "end": "1758720"
  },
  {
    "text": "spring foo is not because it's kung foo it's because it means functional it's",
    "start": "1758720",
    "end": "1763860"
  },
  {
    "text": "just fun fun play on words last year this initiative was like duplicated to",
    "start": "1763860",
    "end": "1771420"
  },
  {
    "text": "have something called Kofu so spring foo in cotton and spring foo in in in Java called Jeff Jeff who has been completely",
    "start": "1771420",
    "end": "1778140"
  },
  {
    "text": "stopped they won't go further because yeah you've got all the benefits of this nice functional writing style only if",
    "start": "1778140",
    "end": "1785490"
  },
  {
    "text": "you do cotton as you saw between the router and the roots you can be very",
    "start": "1785490",
    "end": "1791220"
  },
  {
    "text": "nice and very concise using cutting with Java it's still a lot of boilerplate code this stuff is experimental really",
    "start": "1791220",
    "end": "1800660"
  },
  {
    "text": "it's not meant to be using production it's just used to make nice demo and to",
    "start": "1800660",
    "end": "1807600"
  },
  {
    "text": "say a we will use it and this the guy with behind that is Sebastien de leurs",
    "start": "1807600",
    "end": "1812610"
  },
  {
    "text": "so he's working in Springwood team is ill of Scotland and basically he he",
    "start": "1812610",
    "end": "1819090"
  },
  {
    "text": "wants to push that forward and basically the code for configuration is just that",
    "start": "1819090",
    "end": "1825210"
  },
  {
    "text": "it is an incubator again experimental where they will try to do stuff and if",
    "start": "1825210",
    "end": "1834290"
  },
  {
    "text": "something is worthwhile and people like it they will put it into the main",
    "start": "1834290",
    "end": "1840630"
  },
  {
    "text": "framework did they don't like it or it doesn't work that much then it will stay",
    "start": "1840630",
    "end": "1846330"
  },
  {
    "text": "there or perhaps be removed and the whole point of Kofu is to be explicit or",
    "start": "1846330",
    "end": "1853890"
  },
  {
    "text": "sorry is to be explicit no more annotation none zero zilch",
    "start": "1853890",
    "end": "1863610"
  },
  {
    "text": "no no proxy explicit again because how",
    "start": "1863610",
    "end": "1872910"
  },
  {
    "text": "do you handle transactions well you put an annotation in creates a proxy and bla bla",
    "start": "1872910",
    "end": "1878010"
  },
  {
    "text": "no here we are using functional for transaction functions for transaction like transaction it's just a wrapper",
    "start": "1878010",
    "end": "1885030"
  },
  {
    "text": "that wraps your code and that's the",
    "start": "1885030",
    "end": "1890520"
  },
  {
    "text": "whole point of Kofu that you have normal magic everything is explicit one does",
    "start": "1890520",
    "end": "1897450"
  },
  {
    "text": "the side effect that is very beneficial is that since you can like check the",
    "start": "1897450",
    "end": "1903690"
  },
  {
    "text": "code everywhere so does growl VM meaning that if you",
    "start": "1903690",
    "end": "1910500"
  },
  {
    "text": "like migrates your code to Kofu and you try to rally Phi it the growl vm",
    "start": "1910500",
    "end": "1919890"
  },
  {
    "text": "compiler the native image engine will be able to follow the path and to transform",
    "start": "1919890",
    "end": "1926310"
  },
  {
    "text": "your spring boot application into a native image without any further configuration like if you try to do that",
    "start": "1926310",
    "end": "1933810"
  },
  {
    "text": "with like spring boot application written with a notation you would need to write a big big JSON file to tell a",
    "start": "1933810",
    "end": "1940920"
  },
  {
    "text": "you must keep that and keep that and keep that and key who knows about gravy and I am just talking but ok so I need",
    "start": "1940920",
    "end": "1948090"
  },
  {
    "text": "to explain what girl VM is well grass vm first is just a label around a lot of stuff one of them is substrate vm and",
    "start": "1948090",
    "end": "1956100"
  },
  {
    "text": "substrate vm is a super cool initiative that is able to take a drawer or a classifier",
    "start": "1956100",
    "end": "1962400"
  },
  {
    "text": "where to take byte codes and transform it into a native image and perhaps you",
    "start": "1962400",
    "end": "1967500"
  },
  {
    "text": "have heard about Quercus or about micro nodes and basically they are using roll",
    "start": "1967500",
    "end": "1972600"
  },
  {
    "text": "VM to do that so you write your Quercus application or you write your micro note",
    "start": "1972600",
    "end": "1977790"
  },
  {
    "text": "application and in the end you've got a native executable that is very very fast",
    "start": "1977790",
    "end": "1983040"
  },
  {
    "text": "at start at time because basically you don't need to do reflection because it has or or everything has been done at",
    "start": "1983040",
    "end": "1989730"
  },
  {
    "text": "Build time so having said that can we do",
    "start": "1989730",
    "end": "1997590"
  },
  {
    "text": "can we migrate our application to spring foo well we can but it's not free",
    "start": "1997590",
    "end": "2006250"
  },
  {
    "text": "nothing is free in life because now",
    "start": "2006250",
    "end": "2014380"
  },
  {
    "text": "I need to do reactive again meaning that now right now if I want my application",
    "start": "2018240",
    "end": "2026009"
  },
  {
    "text": "to use Kofu I need to be reactive Sebastian is working on that right now",
    "start": "2026009",
    "end": "2031220"
  },
  {
    "text": "but so far you cannot use spring data a GP repositories with Kofu and so here",
    "start": "2031220",
    "end": "2038909"
  },
  {
    "text": "I'm using spring data a 2 GB C and I'm using the earth with BBC h2 so I'm still",
    "start": "2038909",
    "end": "2044429"
  },
  {
    "text": "keeping the same database obviously but then I lose everything",
    "start": "2044429",
    "end": "2050099"
  },
  {
    "text": "like right now my application is completely different I don't have any",
    "start": "2050099",
    "end": "2057780"
  },
  {
    "text": "more class to speak about I don't have any annotation nothing I need to use or",
    "start": "2057780",
    "end": "2067408"
  },
  {
    "text": "2 DB C explicitly spring data",
    "start": "2067409",
    "end": "2073290"
  },
  {
    "text": "repositories ok they were magic but they helped me a lot goodbye I need to think",
    "start": "2073290",
    "end": "2081300"
  },
  {
    "text": "about reactive all the time so block optional to actually like trigger stuff",
    "start": "2081300",
    "end": "2088250"
  },
  {
    "text": "even the fact that to initialize my repository before I an import bot squad",
    "start": "2088250",
    "end": "2094020"
  },
  {
    "text": "which was basically just like run at stop sometime it doesn't exist here I need to have a listener and to actually",
    "start": "2094020",
    "end": "2101010"
  },
  {
    "text": "write code to initialize my application and that's funny because here I have",
    "start": "2101010",
    "end": "2106349"
  },
  {
    "text": "initialize that creates the table itself and then I have like the stuff to insert",
    "start": "2106349",
    "end": "2112890"
  },
  {
    "text": "the data here it's the same that I showed you I need to declare a bin of",
    "start": "2112890",
    "end": "2119940"
  },
  {
    "text": "type person repository and here add enough person endler then for every",
    "start": "2119940",
    "end": "2125700"
  },
  {
    "text": "light let's say scope domain of my",
    "start": "2125700",
    "end": "2130890"
  },
  {
    "text": "application I have a dedicated DSL here I have a web MVC DSL which is again",
    "start": "2130890",
    "end": "2139049"
  },
  {
    "text": "strange because the rest is reactive but here I can still use by the fan but ok",
    "start": "2139049",
    "end": "2144530"
  },
  {
    "text": "and this is the stuff that I showed you before and just I will remove that",
    "start": "2144530",
    "end": "2151420"
  },
  {
    "text": "and it's not a spring with application anymore it's just a simple application",
    "start": "2151420",
    "end": "2159060"
  },
  {
    "text": "it's just a main function now if I run",
    "start": "2159060",
    "end": "2165100"
  },
  {
    "text": "it it starts very fast right because",
    "start": "2165100",
    "end": "2173410"
  },
  {
    "text": "again there is no annotation or whatever",
    "start": "2173410",
    "end": "2177270"
  },
  {
    "text": "but now because there is no application or property and if there was one it's not read by default because no magic I",
    "start": "2183220",
    "end": "2190770"
  },
  {
    "text": "don't have the formatting to have the formatting I can do that and the good",
    "start": "2190770",
    "end": "2198310"
  },
  {
    "text": "thing because there is a good good sign about that is here since it's a DSL",
    "start": "2198310",
    "end": "2205200"
  },
  {
    "text": "everything is explicit and so my IDE can check what properties and what functions",
    "start": "2209520",
    "end": "2216790"
  },
  {
    "text": "are available in this object so if I",
    "start": "2216790",
    "end": "2222190"
  },
  {
    "text": "restart it I know again no clock no double classloader or whatever it's just everything by hand",
    "start": "2222190",
    "end": "2229680"
  },
  {
    "text": "okay",
    "start": "2239479",
    "end": "2242479"
  },
  {
    "text": "so if you want to remove magic well there is a cliff path for you the first",
    "start": "2246830",
    "end": "2253170"
  },
  {
    "text": "to remove all controller and you migrate routes the second is you remove your",
    "start": "2253170",
    "end": "2259290"
  },
  {
    "text": "beans and you use the bean DSL and you",
    "start": "2259290",
    "end": "2264510"
  },
  {
    "text": "don't need to be reactive anymore so you can have your web MVC dot F and stuff",
    "start": "2264510",
    "end": "2271620"
  },
  {
    "text": "and continue working as you work right now you can debug as easily and be happy",
    "start": "2271620",
    "end": "2278970"
  },
  {
    "text": "about all what you know and of course the main takeaways that spring would",
    "start": "2278970",
    "end": "2284550"
  },
  {
    "text": "love scuttling and it's going to continue because it's really a great language thank for your attention you",
    "start": "2284550",
    "end": "2291000"
  },
  {
    "text": "can read my blog you can follow me on Twitter and more importantly if you have any problems that you didn't digest",
    "start": "2291000",
    "end": "2297990"
  },
  {
    "text": "because I might have been a bit fast then you can take the repository and you can play and change it and see how it",
    "start": "2297990",
    "end": "2305400"
  },
  {
    "text": "works by yourself and perhaps now there are like six minutes for questions [Applause]",
    "start": "2305400",
    "end": "2317419"
  }
]