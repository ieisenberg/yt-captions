[
  {
    "text": "[Music]",
    "start": "2550",
    "end": "10080"
  },
  {
    "text": "good afternoon thank you for coming to adventures in Elm we're going to explore this",
    "start": "10080",
    "end": "15679"
  },
  {
    "text": "programming language today we're going to Journey from Hello World to almost",
    "start": "15679",
    "end": "21000"
  },
  {
    "text": "the peak of the elm architecture and along the way you'll",
    "start": "21000",
    "end": "26119"
  },
  {
    "text": "see what makes this programming language different and how this programing language has made me different because",
    "start": "26119",
    "end": "32599"
  },
  {
    "text": "there's a lot of things in Elm that have surprised me and made me question some",
    "start": "32599",
    "end": "37760"
  },
  {
    "text": "of my core ideas of what is good code as we go through Elm you'll see not",
    "start": "37760",
    "end": "44680"
  },
  {
    "text": "only the programming language but the architecture that is inside Elm so even if you never use Elm itself the",
    "start": "44680",
    "end": "52399"
  },
  {
    "text": "architecture is indicative of a lot of other architectures that are emerging",
    "start": "52399",
    "end": "57680"
  },
  {
    "text": "these days both in distributed systems and in the web so I think you'll find this pretty useful I'm",
    "start": "57680",
    "end": "64320"
  },
  {
    "text": "gatron I work at stripe and stripe reminds me of elm because they're both",
    "start": "64320",
    "end": "71040"
  },
  {
    "text": "taking something really hard and making it so easy that it's possible where it wasn't before in the case of elm that is",
    "start": "71040",
    "end": "80360"
  },
  {
    "text": "um development in the browser um and apps that do really complicated things",
    "start": "80360",
    "end": "86720"
  },
  {
    "text": "without pain and are maintainable in the case of striping payments we make it possible for people to build websites",
    "start": "86720",
    "end": "92560"
  },
  {
    "text": "and start accepting payments without waiting two months for approval by a bank which is really awesome at stripe I",
    "start": "92560",
    "end": "99759"
  },
  {
    "text": "do not write Elm I write in Ruby Scala go python bash whatever needs done",
    "start": "99759",
    "end": "105759"
  },
  {
    "text": "because my passion as a developer is to take a system that's useful and make it even more useful so I'll maintain",
    "start": "105759",
    "end": "112640"
  },
  {
    "text": "whatever as a maintenance developer I really really really appreciate Elm",
    "start": "112640",
    "end": "118640"
  },
  {
    "text": "because it's not JavaScript and it really focuses",
    "start": "118640",
    "end": "124360"
  },
  {
    "text": "on my feelings as a person both right now while I'm writing the code and also",
    "start": "124360",
    "end": "130920"
  },
  {
    "text": "later when I'm reading the code and when I'm changing the code I love that about",
    "start": "130920",
    "end": "138720"
  },
  {
    "text": "it the first thing of two that El lets me do that I couldn't do before or",
    "start": "138720",
    "end": "144120"
  },
  {
    "text": "wouldn't be bothered to is perfectly functional programming and by functional programming I pretty much mean data in",
    "start": "144120",
    "end": "150239"
  },
  {
    "text": "data out it means I have a function that's the green box it receives some parameters which are data it produces",
    "start": "150239",
    "end": "156840"
  },
  {
    "text": "some output which is data and that's it nothing changes in the world around it",
    "start": "156840",
    "end": "162000"
  },
  {
    "text": "and every time you give the same data you get the same results so this is like supremely testable reproducible",
    "start": "162000",
    "end": "169920"
  },
  {
    "text": "predictable that's like awesome but it turns out to be really hard to do in most programming scenarios",
    "start": "169920",
    "end": "177840"
  },
  {
    "text": "100% Elm code is a 100% perfectly functional and what surprises me is that",
    "start": "177840",
    "end": "185400"
  },
  {
    "text": "it it does that in the UI and I'm like what because this is what UI code looks",
    "start": "185400",
    "end": "191680"
  },
  {
    "text": "like to me in my experience with like Java Swing apps and and how do we",
    "start": "191680",
    "end": "197360"
  },
  {
    "text": "reconcile these two when my friend Richard told me about Elm when we were like sitting next to each other at a",
    "start": "197360",
    "end": "202680"
  },
  {
    "text": "wedding I was like what are you talking about how can you be both perfectly function and functional and UI well",
    "start": "202680",
    "end": "209920"
  },
  {
    "text": "conceptually it's kind of like this your code is a function of everything that",
    "start": "209920",
    "end": "215200"
  },
  {
    "text": "has ever happened that you care about everything the server has ever said to you every button the user has pushed and",
    "start": "215200",
    "end": "222920"
  },
  {
    "text": "the output is what you want the UI to look like right now not the actual UI but data that says I wish the UI look",
    "start": "222920",
    "end": "231640"
  },
  {
    "text": "like this and then Elm says oh you want the UI to look like that well okay right",
    "start": "231640",
    "end": "236680"
  },
  {
    "text": "now it looks like this so I'm going to do these like super performance optimized minimal updates and make it",
    "start": "236680",
    "end": "242640"
  },
  {
    "text": "look exactly like you wanted and then it'll say oh hey something else happened there's a new everything that matters",
    "start": "242640",
    "end": "248360"
  },
  {
    "text": "and you'll say oh I wish it looked like this and Elm will just make it happen now Elm is not the only",
    "start": "248360",
    "end": "254120"
  },
  {
    "text": "programming language currently that uses this particular Paradigm on this side of",
    "start": "254120",
    "end": "260639"
  },
  {
    "text": "making expressing the user interface's data and then the framework underneath",
    "start": "260639",
    "end": "265720"
  },
  {
    "text": "makes that makes the web page actually look like that the most popular example is react so react inside JavaScript",
    "start": "265720",
    "end": "274400"
  },
  {
    "text": "Works in a similar fashion it's not the same code but it's similar ideas where you output what you want the the do to",
    "start": "274400",
    "end": "282240"
  },
  {
    "text": "look like is data and react makes it actually look like that and in fact if you use the Redux library on top of that",
    "start": "282240",
    "end": "290919"
  },
  {
    "text": "then you're using the elm architecture because Redux the architecture of it is entirely based on Elm so see even if you",
    "start": "290919",
    "end": "298759"
  },
  {
    "text": "don't use Elm you can still use El there's other ways to um write that",
    "start": "298759",
    "end": "305360"
  },
  {
    "text": "same architecture you can do it in closure script and scala.js both of which compil to JavaScript this by the",
    "start": "305360",
    "end": "311960"
  },
  {
    "text": "way is Discord Discord is a character in My Little Pony and he's my favorite character because uh Discord can",
    "start": "311960",
    "end": "319639"
  },
  {
    "text": "manipulate reality and he can make any of his whims come true he can change anything about the world but most of",
    "start": "319639",
    "end": "327199"
  },
  {
    "text": "what he does is make chaos so he represents",
    "start": "327199",
    "end": "332720"
  },
  {
    "text": "JavaScript to know to do closure script and Scola JS you really these are these are pretty much layers on top of",
    "start": "333639",
    "end": "340759"
  },
  {
    "text": "JavaScript for Elm you need to know very little JavaScript very little because",
    "start": "340759",
    "end": "347919"
  },
  {
    "text": "conceptually Elm is not trying to be a JavaScript transpiler the fact that it",
    "start": "347919",
    "end": "353120"
  },
  {
    "text": "compiles to JavaScript now is an implementation detail once web assembly is a thing Elm will compile to web",
    "start": "353120",
    "end": "358600"
  },
  {
    "text": "assembly and Elm is more than just a language",
    "start": "358600",
    "end": "363960"
  },
  {
    "text": "it's a whole language system so one of the things that makes it possible for me",
    "start": "363960",
    "end": "369680"
  },
  {
    "text": "to do UI programming I'm totally a backend developer um and have been for like 15",
    "start": "369680",
    "end": "375000"
  },
  {
    "text": "years but I don't have to learn the entire JavaScript ecosystem I don't need",
    "start": "375000",
    "end": "380840"
  },
  {
    "text": "Gulp and Grunt and node and okay well maybe I do a little bit of mpm um but I",
    "start": "380840",
    "end": "386840"
  },
  {
    "text": "don't need phantomjs and the thousand thousand things that we build our JavaScript apps out of I only need the",
    "start": "386840",
    "end": "394400"
  },
  {
    "text": "elm language system and that's much smaller because it's",
    "start": "394400",
    "end": "399520"
  },
  {
    "text": "young so that's one way that Elm makes it possible for me to do UI when I couldn't before it really lowers that",
    "start": "399520",
    "end": "405599"
  },
  {
    "text": "barrier the other thing is is that it lets me do UI without hating",
    "start": "405599",
    "end": "411039"
  },
  {
    "text": "myself because in Elm you cannot in your El code it is impossible to get",
    "start": "411039",
    "end": "417080"
  },
  {
    "text": "undefined as not a function that cannot happen in El all errors are compile",
    "start": "417080",
    "end": "422800"
  },
  {
    "text": "errors you see them your users do not now you can still have bugs you can have",
    "start": "422800",
    "end": "428360"
  },
  {
    "text": "messed up your logic and have told it to do the right wrong thing but you can't access a field that doesn't exist you",
    "start": "428360",
    "end": "434120"
  },
  {
    "text": "can't try to call undefine I hate this error it's such a nightmare this is not",
    "start": "434120",
    "end": "439599"
  },
  {
    "text": "what I want JavaScript I want to know what were you trying to find where did it come from and Elm compile errors give",
    "start": "439599",
    "end": "446080"
  },
  {
    "text": "me that on the functional side there's another nightmare that Elm saves",
    "start": "446080",
    "end": "451919"
  },
  {
    "text": "me from and that is learning hasool so this is Michael Bernstein",
    "start": "451919",
    "end": "459080"
  },
  {
    "text": "describing his experience of years his his like three years of learning",
    "start": "459080",
    "end": "466360"
  },
  {
    "text": "hll well Elm is a language of compassion and Evan who writes Elm he doesn't want",
    "start": "466360",
    "end": "473159"
  },
  {
    "text": "you to endure years of misery and self-doubt just to use this",
    "start": "473159",
    "end": "478319"
  },
  {
    "text": "language Elm is a language of the people it's an enlightened language it wants the greatest good for the greatest",
    "start": "478319",
    "end": "484680"
  },
  {
    "text": "number and I don't mean the greatest number of people who are smart smart enough to have chosen to learn category",
    "start": "484680",
    "end": "492400"
  },
  {
    "text": "Theory I mean people who exist in the world today a lot of JavaScript developers a lot of backend developers",
    "start": "492400",
    "end": "498400"
  },
  {
    "text": "like me and plenty of people who have not done development yet Elm is for us so um Elm is in the same family of",
    "start": "498400",
    "end": "507360"
  },
  {
    "text": "languages as hul it they're both ml languages so it shares some",
    "start": "507360",
    "end": "512640"
  },
  {
    "text": "characteristics Elm has instances of manad like list and maybe but it does",
    "start": "512640",
    "end": "519518"
  },
  {
    "text": "not have the generic bonad it has parameterized types when you have a list",
    "start": "519519",
    "end": "524640"
  },
  {
    "text": "you have a list of something like generics and Java but it does not have higher kinded types what even are those",
    "start": "524640",
    "end": "531480"
  },
  {
    "text": "the point is you don't have to care I mean I've dealt with higher kinded types in Scala but really they're",
    "start": "531480",
    "end": "538880"
  },
  {
    "text": "they're El whenever there's a feature in the language Evan considers okay how",
    "start": "538880",
    "end": "544839"
  },
  {
    "text": "useful is this and how much complexity does it add to learning the language and if it adds a lot of complexity and you",
    "start": "544839",
    "end": "551720"
  },
  {
    "text": "can you can not use it if you're just willing to type a little more ah my fingers",
    "start": "551720",
    "end": "558279"
  },
  {
    "text": "work and I'd rather do a little more work with my fingers and less work with my brain because I want to be able to",
    "start": "558279",
    "end": "564279"
  },
  {
    "text": "save my decision power for my actual business logic and what I want my program to",
    "start": "564279",
    "end": "569880"
  },
  {
    "text": "do all right and when I come back and I read that code I want to be able to figure out what it's doing without",
    "start": "569880",
    "end": "575120"
  },
  {
    "text": "understanding all of those language features okay speaking of language features I'm going to do live coding but",
    "start": "575120",
    "end": "580560"
  },
  {
    "text": "it would be rude to do that without going over the syntax so you know what the symbols are that I'm typing okay so",
    "start": "580560",
    "end": "587079"
  },
  {
    "text": "Elm syntax in a nutshell this is a function definition the function name is",
    "start": "587079",
    "end": "592120"
  },
  {
    "text": "substring and it has two parameters quantity and strength implementation omitted I can call that function by by",
    "start": "592120",
    "end": "599680"
  },
  {
    "text": "supplying the parameters uh so here I'm defining a value peeler location that is",
    "start": "599680",
    "end": "606079"
  },
  {
    "text": "the result of substring with three and STL 48 this represents like a like a machine name like a server that happens",
    "start": "606079",
    "end": "612800"
  },
  {
    "text": "to be in the St Louis data center it's number 48 um notice that there's no commas here",
    "start": "612800",
    "end": "620240"
  },
  {
    "text": "or like parentheses you just line the parameters up and they March into the function in a list however here's a list",
    "start": "620240",
    "end": "627399"
  },
  {
    "text": "literal it's got the square braces around it and there are commas between list items okay Elm is a very statically",
    "start": "627399",
    "end": "634839"
  },
  {
    "text": "typed language it does all its magic U It's Magic like not having any errors by checking types you don't have to declare",
    "start": "634839",
    "end": "642320"
  },
  {
    "text": "the types though it'll do type inference but if you want to declare the types and I almost always do one for readability",
    "start": "642320",
    "end": "647639"
  },
  {
    "text": "and two so the compiler can give me the error in like the most localized location where I messed it",
    "start": "647639",
    "end": "653399"
  },
  {
    "text": "up uh you do that like right before the the equals is providing the definition and the colon can provide the type and",
    "start": "653399",
    "end": "660399"
  },
  {
    "text": "this is a weird looking type so this is a function type and it represents a function such that if you give me an INT",
    "start": "660399",
    "end": "668360"
  },
  {
    "text": "then I will give you something such that if you give me a string then it will give you a",
    "start": "668360",
    "end": "673760"
  },
  {
    "text": "string so the two parameters are here and here and then the result is the last thing and this represents that functions",
    "start": "673760",
    "end": "680800"
  },
  {
    "text": "in Elm are all curried that means you can think of a function as every function has one parameter it just might",
    "start": "680800",
    "end": "688120"
  },
  {
    "text": "happen to return a function that has another parameter and so on what that means is you don't have to",
    "start": "688120",
    "end": "695920"
  },
  {
    "text": "you never have to supply all the parameters in order to call a function so I can define a function location code",
    "start": "695920",
    "end": "703240"
  },
  {
    "text": "AS substring where the quantity is three but that other string is not specified so the the type of location code is a",
    "start": "703240",
    "end": "710320"
  },
  {
    "text": "function of string string because you've got this int okay and you're left with a string to string so that's like the the",
    "start": "710320",
    "end": "717120"
  },
  {
    "text": "meaning of this weird function type declaration syntax all right and then this has the",
    "start": "717120",
    "end": "723959"
  },
  {
    "text": "type of string and the list the the list here is a type list",
    "start": "723959",
    "end": "730480"
  },
  {
    "text": "string so list isn't a type by itself it needs a type parameter you have to tell",
    "start": "730480",
    "end": "735880"
  },
  {
    "text": "it what kind of thing is in the list and there can only be one kind of thing in the list and it can't be any or object",
    "start": "735880",
    "end": "741800"
  },
  {
    "text": "because those aren't things in now you have to commit to a type that's going to be in the list and they all have to be",
    "start": "741800",
    "end": "747600"
  },
  {
    "text": "that and this case I've got a list of strings um we'll see in a few seconds how to put things of disparate types in",
    "start": "747600",
    "end": "753040"
  },
  {
    "text": "a list okay one other function call syntax thing there's this other way of calling",
    "start": "753040",
    "end": "759120"
  },
  {
    "text": "a function that you can take the last parameter that you're going to pass start with that and use this pipe",
    "start": "759120",
    "end": "765120"
  },
  {
    "text": "operator to send it through the function so these two syntaxes are equivalent and",
    "start": "765120",
    "end": "770480"
  },
  {
    "text": "you can think of it as the pipe operator in Unix like if you grap for something and pipe that through sort or whatever",
    "start": "770480",
    "end": "777399"
  },
  {
    "text": "um it's great for chaining functions together okay given that we have this",
    "start": "777399",
    "end": "785000"
  },
  {
    "text": "location code from string to string and these are things of string well I would like to be more specific than just",
    "start": "785000",
    "end": "790880"
  },
  {
    "text": "string I I consider string almost a code smell especially in Java so I can give",
    "start": "790880",
    "end": "797600"
  },
  {
    "text": "it a type Alias and I can give it a name and I can say location code is equivalent to string this isn't going to",
    "start": "797600",
    "end": "803480"
  },
  {
    "text": "find me compile erors because they're really equivalent but I can change string to location code everywhere I",
    "start": "803480",
    "end": "808519"
  },
  {
    "text": "mean location code and this is really expressive I like that and super easy the type Alias is not creating a",
    "start": "808519",
    "end": "815360"
  },
  {
    "text": "new type it's just giving a name to a type and that's even more useful when we have more complicated types such as records so records are you know think",
    "start": "815360",
    "end": "821639"
  },
  {
    "text": "like JavaScript objects except you're never going to accidentally call a field that's not there because the compiler",
    "start": "821639",
    "end": "827120"
  },
  {
    "text": "won't let you um so it has members and those members each have a specific type as well I could construct something of",
    "start": "827120",
    "end": "834519"
  },
  {
    "text": "type machine here by using equal signs to provide values for each of the fields",
    "start": "834519",
    "end": "839800"
  },
  {
    "text": "and if I declare this as a machine then the compiler will say oh a machine has this and this and if I didn't provide",
    "start": "839800",
    "end": "845519"
  },
  {
    "text": "that and that then I'd get a compile error immediately and not runtime error all right but maybe I want to make make",
    "start": "845519",
    "end": "853440"
  },
  {
    "text": "up my machine out of like I don't know some stuff that I calculate ahead of time so I want to calculate my location",
    "start": "853440",
    "end": "860440"
  },
  {
    "text": "in my num and then return them in here in um the record well in Elm there's no",
    "start": "860440",
    "end": "868160"
  },
  {
    "text": "such thing a statement including assignment statements there are only",
    "start": "868160",
    "end": "874440"
  },
  {
    "text": "Expressions so I can't say send the message over there and return this you",
    "start": "874440",
    "end": "880600"
  },
  {
    "text": "don't do that you don't do that but you often do want to give things names so for assignment in particular you can use",
    "start": "880600",
    "end": "887199"
  },
  {
    "text": "a let expression or a let block and the let says okay here come some names I'm",
    "start": "887199",
    "end": "892360"
  },
  {
    "text": "just going to give names to things and you do that and then you can use those names in the single expression that is",
    "start": "892360",
    "end": "898759"
  },
  {
    "text": "the body of the function every function body is a single expression that returns",
    "start": "898759",
    "end": "905279"
  },
  {
    "text": "data that is how it's perfectly functional and it it it took me a while to get my brain to work that way and as",
    "start": "905279",
    "end": "912600"
  },
  {
    "text": "advantageous to learn a new way to think um and most importantly it's completely",
    "start": "912600",
    "end": "918079"
  },
  {
    "text": "testable okay uh type aases do not create new types they only give names to",
    "start": "918079",
    "end": "923160"
  },
  {
    "text": "existing types however you can create a new type with a type keyword and this is creating a union type",
    "start": "923160",
    "end": "929120"
  },
  {
    "text": "so say I'm getting some messages in from somewhere and each one is going to contain either the location code or the",
    "start": "929120",
    "end": "935800"
  },
  {
    "text": "number of the machine and I'll put those together later if I want to put those two disparate types in a list then I can",
    "start": "935800",
    "end": "943120"
  },
  {
    "text": "create a union type machine data represents either of those things and it has like two kind of wrapper types it",
    "start": "943120",
    "end": "949240"
  },
  {
    "text": "can be either a location with a location code in it or it can be a number with an integer and I've created two",
    "start": "949240",
    "end": "955399"
  },
  {
    "text": "Constructors here that I can use to wrap strings to wrap numbers and",
    "start": "955399",
    "end": "960880"
  },
  {
    "text": "then they can go in the same list because this list of machine datm is either of those things and finally we're going to need",
    "start": "960880",
    "end": "968079"
  },
  {
    "text": "to be able to do something with those items in the list so we have to be able to get these values out of their little wrapper types there we do that with",
    "start": "968079",
    "end": "974720"
  },
  {
    "text": "pattern matching so maybe I have a function I'm making a function describe that can turn either kind of machine",
    "start": "974720",
    "end": "981279"
  },
  {
    "text": "data into a string for logging or something and I do that with a case statement so I say okay we're going to",
    "start": "981279",
    "end": "988199"
  },
  {
    "text": "we're going to swap based on what kind of thing datm is maybe it's a location in which case you'll you'll have a code",
    "start": "988199",
    "end": "994079"
  },
  {
    "text": "and you could put that in the string maybe it's a number you could put that in a string so each separate type that",
    "start": "994079",
    "end": "1000560"
  },
  {
    "text": "is a machine data gets converted to a string here okay so that's how you get",
    "start": "1000560",
    "end": "1005680"
  },
  {
    "text": "things in and out of your own types that you've defined time for some Hello",
    "start": "1005680",
    "end": "1011880"
  },
  {
    "text": "World okay here I have an empty s empty dire",
    "start": "1012079",
    "end": "1019839"
  },
  {
    "text": "can youall see this in the back okay good enough I'm going to start by making an",
    "start": "1019839",
    "end": "1027480"
  },
  {
    "text": "Elm module called hello and we'll try to make hello world out of this okay you",
    "start": "1027480",
    "end": "1033280"
  },
  {
    "text": "start with a module keyword you name it the same as the file and then you have to say which functions it exposes in",
    "start": "1033280",
    "end": "1039240"
  },
  {
    "text": "this case I'm going to expose main okay well usually in hello world you do like printland or something well",
    "start": "1039240",
    "end": "1045600"
  },
  {
    "text": "there's no printland in Elm that would be a statement that would be like effect we can only return data so um yeah maybe",
    "start": "1045600",
    "end": "1051919"
  },
  {
    "text": "we can just return hello world as a strength will that work o notice when I",
    "start": "1051919",
    "end": "1057480"
  },
  {
    "text": "hit save it like like moved my function down a little it loves whites space and",
    "start": "1057480",
    "end": "1063600"
  },
  {
    "text": "it moved this down that is being done by a tool called Elm format which is part of the elm language system Elm format",
    "start": "1063600",
    "end": "1071120"
  },
  {
    "text": "says Thou shalt not argue about white space or spacing or new lines white",
    "start": "1071120",
    "end": "1076760"
  },
  {
    "text": "space is important in Elm it's a significant white space language you shall not argue about spaces or tabs tab",
    "start": "1076760",
    "end": "1082640"
  },
  {
    "text": "is a syntax error um and you also sh argue about whether to indent with two or four",
    "start": "1082640",
    "end": "1088360"
  },
  {
    "text": "spaces you're just going to run on format and it's not going to whine at you like a stupid linter it's just going",
    "start": "1088360",
    "end": "1093840"
  },
  {
    "text": "to fix it so I've got the editor here is running Elm format on",
    "start": "1093840",
    "end": "1100200"
  },
  {
    "text": "Save okay if we go out here I have installed Elm on my computer which is",
    "start": "1100200",
    "end": "1105760"
  },
  {
    "text": "the only prerequisite for this well I Elm format and the editor plugin are",
    "start": "1105760",
    "end": "1110960"
  },
  {
    "text": "separate but I want to Elm make which means compile this module okay here is Elm being all like",
    "start": "1110960",
    "end": "1119799"
  },
  {
    "text": "functional programming on me when I ask it to do something it goes out and makes",
    "start": "1119799",
    "end": "1125640"
  },
  {
    "text": "decisions about what it should do and then it takes that data and presents it to me and says okay would you like me to",
    "start": "1125640",
    "end": "1132480"
  },
  {
    "text": "have these effects that I have decided are necessary well yes I would that's so polite of you El",
    "start": "1132480",
    "end": "1139280"
  },
  {
    "text": "okay now it downloads stuff and it actually did the compilation and we have a complaint because string is not",
    "start": "1139280",
    "end": "1146679"
  },
  {
    "text": "cromulent but it doesn't just say bad main type exit one",
    "start": "1146679",
    "end": "1152960"
  },
  {
    "text": "no in Elm the compile erors are very much designed to be your friend I can do",
    "start": "1152960",
    "end": "1158760"
  },
  {
    "text": "a lot of compile eror driven developments in Elm it gets me pretty far in this case for instance it doesn't",
    "start": "1158760",
    "end": "1165240"
  },
  {
    "text": "just say string is not okay it says you gave string but I need this this or this",
    "start": "1165240",
    "end": "1171559"
  },
  {
    "text": "so I need to Output either HTML data structure or SVG if I wanted to make a",
    "start": "1171559",
    "end": "1177039"
  },
  {
    "text": "picture or a program which we'll see later okay I'm going to choose HTML",
    "start": "1177039",
    "end": "1182840"
  },
  {
    "text": "because I want the simplest thing which is some static HTML that's what my Hello World should be in order to use that I",
    "start": "1182840",
    "end": "1189880"
  },
  {
    "text": "have to get um Elm package install Elm Lang colum HT",
    "start": "1189880",
    "end": "1198880"
  },
  {
    "text": "or HTML and you might be like wait a minute wait a minute I have to install a package just to like do anything with",
    "start": "1198880",
    "end": "1204480"
  },
  {
    "text": "the language yes yes you have to choose are you doing HTML or SVT because I'm",
    "start": "1204480",
    "end": "1209960"
  },
  {
    "text": "not going to incorporate the code for both automatically I'm going to try to keep your Javascript file smaller so we P one yes it's very",
    "start": "1209960",
    "end": "1217320"
  },
  {
    "text": "modular of of elm and we say Elm package is another member of the elm ecosystem",
    "start": "1217320",
    "end": "1222640"
  },
  {
    "text": "and it's important an important one let me um see if I can scroll that up or something",
    "start": "1222640",
    "end": "1229360"
  },
  {
    "text": "to make sure it's at the top okay Elm package install says go get it",
    "start": "1229360",
    "end": "1235159"
  },
  {
    "text": "and Elm does its thing where it's like okay I'm going to like look around and see what the situation is and tell you",
    "start": "1235159",
    "end": "1241440"
  },
  {
    "text": "what I need to do and the first thing it needs to do is El package.json is the",
    "start": "1241440",
    "end": "1246679"
  },
  {
    "text": "file which was created by that first El make I forgot to show you um that",
    "start": "1246679",
    "end": "1251720"
  },
  {
    "text": "contains all my dependencies and it wants to add me a new dependency to declare the one I just asked it to",
    "start": "1251720",
    "end": "1256919"
  },
  {
    "text": "install great notice that it wants to add that with the version range this is important so the L package",
    "start": "1256919",
    "end": "1265080"
  },
  {
    "text": "manager is the friend of the many and the enemy of the library author who just",
    "start": "1265080",
    "end": "1270919"
  },
  {
    "text": "wants to publish something in z.x because it won't let you publish in z.x when you publish a package to Elm you",
    "start": "1270919",
    "end": "1276600"
  },
  {
    "text": "are committing to an API and you will start with 10 which is ironic because the language",
    "start": "1276600",
    "end": "1283720"
  },
  {
    "text": "itself is in 0.17 but but still so you as a package",
    "start": "1283720",
    "end": "1290200"
  },
  {
    "text": "author you have to commit and when you make release a version you're committing to an API and Elm can be confident that",
    "start": "1290200",
    "end": "1297200"
  },
  {
    "text": "anything higher than the current version which is 10 because this just dropped two weeks ago and smaller than the next",
    "start": "1297200",
    "end": "1303279"
  },
  {
    "text": "major version is going to work with my code by work I mean compile that's",
    "start": "1303279",
    "end": "1308880"
  },
  {
    "text": "because the elm package manager enforces semantic versioning if Evan in his",
    "start": "1308880",
    "end": "1314200"
  },
  {
    "text": "publishment of HTML U makes a bug fix or performance enhancement he can release",
    "start": "1314200",
    "end": "1319240"
  },
  {
    "text": "101 that's fine but if he adds a new exposed method um then that has to be",
    "start": "1319240",
    "end": "1326720"
  },
  {
    "text": "110 it won't let him not increment the minor version and if he changes or",
    "start": "1326720",
    "end": "1332320"
  },
  {
    "text": "deletes any exposed type or function then that is 2.0 or he can't release it",
    "start": "1332320",
    "end": "1338919"
  },
  {
    "text": "at all so the API is held steady by the elm package manager which is aware of",
    "start": "1338919",
    "end": "1344679"
  },
  {
    "text": "the types that your modules have exposed pain for it oh it also like enforces",
    "start": "1344679",
    "end": "1350159"
  },
  {
    "text": "that you have documentation around all exposed methods and the and like at the top of the file and a whole bunch of things that you're like oh I just wanted",
    "start": "1350159",
    "end": "1356200"
  },
  {
    "text": "to publish this but no because what matters is not the one person publishing as much as the hopefully thousands of",
    "start": "1356200",
    "end": "1362520"
  },
  {
    "text": "people using it right so Elm package manager is my friend and I can do like ranges of",
    "start": "1362520",
    "end": "1368279"
  },
  {
    "text": "versions in this way if like I've got this in my Elm package and somebody Imports my library and also Imports",
    "start": "1368279",
    "end": "1375360"
  },
  {
    "text": "another library that depends on HTML 113 or higher then fine those are",
    "start": "1375360",
    "end": "1380640"
  },
  {
    "text": "overlapping ranges Elm can resolve that we're happy if the Landress didn't overlap it wouldn't let me import those",
    "start": "1380640",
    "end": "1386240"
  },
  {
    "text": "two so you can't mess up your transitive dependencies okay yes El you may add",
    "start": "1386240",
    "end": "1391679"
  },
  {
    "text": "that to my package.json and then you may download it and when it downloads it it also gets the transitive dependency",
    "start": "1391679",
    "end": "1398440"
  },
  {
    "text": "virtual Dom and I'm going to have both of those in my uh well in my Elm stuff",
    "start": "1398440",
    "end": "1405840"
  },
  {
    "text": "directory which is where Elm mistakes all that don't commit Elm stuff do commit",
    "start": "1405840",
    "end": "1412279"
  },
  {
    "text": "Elm package this is a definition this is build output uh right so I'm going to have",
    "start": "1412279",
    "end": "1417520"
  },
  {
    "text": "virtual Dom in my El stuff but I'm not going to be able to call functions in",
    "start": "1417520",
    "end": "1422799"
  },
  {
    "text": "Virtual Dom from my code it won't see them it'll be like that's not a thing I",
    "start": "1422799",
    "end": "1428200"
  },
  {
    "text": "if if I'm going to call virtual Dom functions for my code I have to declare it as my dependency and put it in my Elm",
    "start": "1428200",
    "end": "1433919"
  },
  {
    "text": "package so no sneaky transitive dependency use in Elm I like that it's",
    "start": "1433919",
    "end": "1439679"
  },
  {
    "text": "very very declarative and specific okay so now we have the elm HTML package we can use it we can import",
    "start": "1439679",
    "end": "1449120"
  },
  {
    "text": "HTML and Maine can return the simplest one which is HTML text okay this might",
    "start": "1449120",
    "end": "1455039"
  },
  {
    "text": "actually work I'll make good it compiles and now what we get is an index",
    "start": "1455039",
    "end": "1462200"
  },
  {
    "text": "stud HTML by default the M compiler outputs index stud HTML because that is the fastest path to the web",
    "start": "1462200",
    "end": "1469960"
  },
  {
    "text": "page we'll open it hello world",
    "start": "1469960",
    "end": "1475520"
  },
  {
    "text": "yay and we can inspect it and you'll see that the body contains a tiny piece of JavaScript",
    "start": "1475520",
    "end": "1482640"
  },
  {
    "text": "there's a bunch more in the head uh that says Elm hello full screen which calls the elm to populate",
    "start": "1482640",
    "end": "1491640"
  },
  {
    "text": "the rest of the body with that simple piece of text okay to illustrate how how this",
    "start": "1491640",
    "end": "1500600"
  },
  {
    "text": "translation Works a little more I'm going to put that in a div a div has a list of attributes which is empty and a",
    "start": "1500600",
    "end": "1507480"
  },
  {
    "text": "list of children which is just this and we can we're sure this is going",
    "start": "1507480",
    "end": "1512720"
  },
  {
    "text": "to work now not open compile refresh okay so now it says",
    "start": "1512720",
    "end": "1521240"
  },
  {
    "text": "hello world exclamation point and it also you can see the div right here um so that there's a very direct",
    "start": "1521240",
    "end": "1528279"
  },
  {
    "text": "translation between the data structure that your program is outputting and the HTML that appears in your page in fact",
    "start": "1528279",
    "end": "1534520"
  },
  {
    "text": "it's so direct that there is such a thing as the HTML to Elm program wherein",
    "start": "1534520",
    "end": "1539960"
  },
  {
    "text": "you can like just type stuff um or paste your HTML in",
    "start": "1539960",
    "end": "1545880"
  },
  {
    "text": "here and uh it it appears in Elm for you",
    "start": "1545880",
    "end": "1551200"
  },
  {
    "text": "and then you can copy the elm and stick it in your code so if you want to like convert a web page to Elm you can just",
    "start": "1551200",
    "end": "1556960"
  },
  {
    "text": "start with the direct translation this also is an expression of one of my principles that I've had",
    "start": "1556960",
    "end": "1563799"
  },
  {
    "text": "the question is code generation I used to think that was dirty but then it kind of occurred to me that I like",
    "start": "1563799",
    "end": "1570200"
  },
  {
    "text": "compilers so code generation isn't bad and in fact in Elm there's a habit",
    "start": "1570200",
    "end": "1577279"
  },
  {
    "text": "of generating some code to start with I do not put code generation in my build",
    "start": "1577279",
    "end": "1582559"
  },
  {
    "text": "step unless I'm count the compil um but I do generate the code to start with and then I'll go tweak it stuff like uh",
    "start": "1582559",
    "end": "1589840"
  },
  {
    "text": "serialization and deserialization to Json um in like high school or schola",
    "start": "1589840",
    "end": "1594919"
  },
  {
    "text": "you use type classes to make that really succinct Elm doesn't have type classes because those are really complicated um",
    "start": "1594919",
    "end": "1601440"
  },
  {
    "text": "so instead you make the serialization code really explicit which can be a pain",
    "start": "1601440",
    "end": "1607039"
  },
  {
    "text": "but hey there's a Json El to Json or what there's another one of these programs that generates the",
    "start": "1607039",
    "end": "1612240"
  },
  {
    "text": "serialization code for me and then when I want to change it I just change it it's no big deal so code generation not",
    "start": "1612240",
    "end": "1617960"
  },
  {
    "text": "such a bad thing I you think about I do also do a lot of code generation in Java with intellig and the IDE can do that",
    "start": "1617960",
    "end": "1624679"
  },
  {
    "text": "I'm not there yet in the L Mighty e button could be okay right so HTML is a pretty direct",
    "start": "1624679",
    "end": "1631679"
  },
  {
    "text": "translation I'm going to refactor this a little I'm going to make a view method that outputs this and then I'll",
    "start": "1631679",
    "end": "1637520"
  },
  {
    "text": "just call that from Main make sure that compiles if it compiles it's going to work that's",
    "start": "1637520",
    "end": "1644000"
  },
  {
    "text": "usually true in all where's my page there it is now I want this view function is",
    "start": "1644000",
    "end": "1652039"
  },
  {
    "text": "currently of the type HTML except in the new version of Alum",
    "start": "1652039",
    "end": "1657760"
  },
  {
    "text": "17 HTML has a type parameter you have to tell it what kind of thing would you get",
    "start": "1657760",
    "end": "1664360"
  },
  {
    "text": "back into your program if they clicked a button or typed in a form field or stuff",
    "start": "1664360",
    "end": "1670519"
  },
  {
    "text": "like that uh so you have to give it a type of some type of that I or I could just say like never because that doesn't",
    "start": "1670519",
    "end": "1677159"
  },
  {
    "text": "happen here here and I and that'll still work um",
    "start": "1677159",
    "end": "1682559"
  },
  {
    "text": "oh and I could qualify that and say html. HTML but that's annoying okay",
    "start": "1682559",
    "end": "1688799"
  },
  {
    "text": "we've got that but this isn't what I want I want to respond to the world around me I want my view function to",
    "start": "1688799",
    "end": "1694960"
  },
  {
    "text": "be uh based on the mouse position maybe that's something that I could get in it's a mouse position to HTML",
    "start": "1694960",
    "end": "1702360"
  },
  {
    "text": "of yeah it happens to work if I tell it that if you push a but but you you'd get",
    "start": "1702360",
    "end": "1708559"
  },
  {
    "text": "this type back but you don't actually push button so it doesn't happen point is we get the mouse position which is a",
    "start": "1708559",
    "end": "1713600"
  },
  {
    "text": "record with X and Y in it I can do record destructuring in the argument list and then I can say things",
    "start": "1713600",
    "end": "1720919"
  },
  {
    "text": "like x equal two string X you have to do the conversion explicitly it is not going to",
    "start": "1720919",
    "end": "1727799"
  },
  {
    "text": "typ cast for you y equals and then we'll add the",
    "start": "1727799",
    "end": "1733960"
  },
  {
    "text": "Y to string Y and then this way we we will be able to have a page that in some",
    "start": "1733960",
    "end": "1739600"
  },
  {
    "text": "way reacts to the world um so we should have X's X and Y",
    "start": "1739600",
    "end": "1746399"
  },
  {
    "text": "and then uh for starters let's just pass in Z 0 so we can check whether this",
    "start": "1746399",
    "end": "1753240"
  },
  {
    "text": "works okay compile oh we got an error message uh well okay this is one error",
    "start": "1753240",
    "end": "1759880"
  },
  {
    "text": "message we can't find mouse position fine import Mouse and mouse is another of those things that you don't need in",
    "start": "1759880",
    "end": "1766960"
  },
  {
    "text": "every Elm program so it's not going to give it to you by default Elm package install Elm L",
    "start": "1766960",
    "end": "1773919"
  },
  {
    "text": "Mouse do that yes yes download the things thank you",
    "start": "1773919",
    "end": "1780519"
  },
  {
    "text": "Wi-Fi and now we get the compile error I",
    "start": "1780519",
    "end": "1786480"
  },
  {
    "text": "wanted come here and I wanted to show you this because this is my favorite compile error um type mismatch actually",
    "start": "1786480",
    "end": "1793799"
  },
  {
    "text": "I that's not quite true it's my second favorite compile eror because my first favorite is if you have circular",
    "start": "1793799",
    "end": "1800240"
  },
  {
    "text": "dependencies you get aards so that's my number one favorite compiler but number two is this one and",
    "start": "1800240",
    "end": "1808679"
  },
  {
    "text": "that's for personal reasons because um Evan cares so much about the compile",
    "start": "1808679",
    "end": "1814120"
  },
  {
    "text": "eror is helping you that there's a whole repository dedicated to um tell me how to make this compile error better how",
    "start": "1814120",
    "end": "1821000"
  },
  {
    "text": "could a compile ER that you got have been more helpful to you and in my case I'm switching between languages so often",
    "start": "1821000",
    "end": "1827640"
  },
  {
    "text": "that yeah okay so I tried to use plus as string concatenation but plus is for light numbers um and and so when I get this I",
    "start": "1827640",
    "end": "1835399"
  },
  {
    "text": "have to go look up oh how do this drink in catenation and Elm so Evan was like oh I I submitted the issue to the the",
    "start": "1835399",
    "end": "1842000"
  },
  {
    "text": "repository and he said this is a really common error I'm going to add a special case in the compiler to make the lives",
    "start": "1842000",
    "end": "1849120"
  },
  {
    "text": "better so down here at the bottom it says you need to use Plus+ operator not plus to append strings and",
    "start": "1849120",
    "end": "1855200"
  },
  {
    "text": "L so now that to say give me a trip to the documentation rather frequently and",
    "start": "1855200",
    "end": "1860440"
  },
  {
    "text": "I'm happy and I can do plus plus so it doesn't just tell me that I was wrong it says here's what was wrong I think it",
    "start": "1860440",
    "end": "1867159"
  },
  {
    "text": "might be because of this maybe you should try this thing over here and then we do try that thing over",
    "start": "1867159",
    "end": "1873320"
  },
  {
    "text": "here and it compiles and we can refresh and we get uh 0 0 because we had a",
    "start": "1873320",
    "end": "1878399"
  },
  {
    "text": "constant okay it is time to actually respond to the actual Mouse",
    "start": "1878399",
    "end": "1884120"
  },
  {
    "text": "position and for that we need something other than an HTML we need a program we need our main to return a",
    "start": "1884120",
    "end": "1891480"
  },
  {
    "text": "program okay main you're going to be a program program also has a type",
    "start": "1891480",
    "end": "1897559"
  },
  {
    "text": "parameter it is the type of the arguments that you expect to get from JavaScript when your program is inote so",
    "start": "1897559",
    "end": "1903639"
  },
  {
    "text": "in this case I don't need anything back I'm just going to use an empty record and the components of my program",
    "start": "1903639",
    "end": "1910440"
  },
  {
    "text": "I'm going to express as a record so there's going to be a view function we know about that and there's going to be an initial",
    "start": "1910440",
    "end": "1918960"
  },
  {
    "text": "value of that Mouse position which is this and then the interesting bit is",
    "start": "1918960",
    "end": "1924799"
  },
  {
    "text": "there's going to be an input source and that comes from the mouse package it's Mouse moves and that's going to supply",
    "start": "1924799",
    "end": "1932159"
  },
  {
    "text": "the mouse position and what Elm is going to do with this program is it's going to",
    "start": "1932159",
    "end": "1937200"
  },
  {
    "text": "take start with the initial one pass that to the view to get the initial picture but then every time it gets a",
    "start": "1937200",
    "end": "1942799"
  },
  {
    "text": "signal for Mouse moves every time I move the mouse it's going to have a new value of the mouse position position and it's",
    "start": "1942799",
    "end": "1947840"
  },
  {
    "text": "going to pass that into my view function and produce the new version of The View and then it's going to do its magic to update the existing view to what I",
    "start": "1947840",
    "end": "1953639"
  },
  {
    "text": "wanted it to be okay the usual way of creating a program getting that that",
    "start": "1953639",
    "end": "1960200"
  },
  {
    "text": "program type is to call HTML app in this case program with Flats that's the most",
    "start": "1960200",
    "end": "1965639"
  },
  {
    "text": "complicated kind of program you can make in Elm okay but I don't want to start with the most complicated kind of program I kind of want to build up to it",
    "start": "1965639",
    "end": "1971720"
  },
  {
    "text": "so I kind of cheated and I made I made a a module",
    "start": "1971720",
    "end": "1978880"
  },
  {
    "text": "that will just let me convert this simplest program components that I want",
    "start": "1978880",
    "end": "1986039"
  },
  {
    "text": "into a HTML app program with flags so that's going to be input or view from",
    "start": "1986039",
    "end": "1992000"
  },
  {
    "text": "one input and I'm going to bring this file in from git save we're going to need the",
    "start": "1992000",
    "end": "1999050"
  },
  {
    "text": "[Music] programator and I'm going to bring in my little pay no attention to the function",
    "start": "1999050",
    "end": "2004760"
  },
  {
    "text": "behind the curtain",
    "start": "2004760",
    "end": "2008960"
  },
  {
    "text": "all right let's compile this oh sweet it did compile okay so now we have a program that should respond to something",
    "start": "2010960",
    "end": "2017399"
  },
  {
    "text": "it starts out at 0 but as soon as I move the mouse yay things",
    "start": "2017399",
    "end": "2022520"
  },
  {
    "text": "[Music] change okay so now we have Elm that",
    "start": "2022520",
    "end": "2027559"
  },
  {
    "text": "moves I want to talk about modularity in Elm and how I do like subc components and how I do some code organization in",
    "start": "2027559",
    "end": "2034760"
  },
  {
    "text": "order to do that I need more than one compon component on the screen and also this web page does not have nearly",
    "start": "2034760",
    "end": "2040880"
  },
  {
    "text": "enough pictures next is add some",
    "start": "2040880",
    "end": "2046320"
  },
  {
    "text": "pictures my assets commit has",
    "start": "2046320",
    "end": "2051480"
  },
  {
    "text": "images okay now we have three pictures of my daughter and we will go minut okay the",
    "start": "2051480",
    "end": "2059599"
  },
  {
    "text": "view becomes just the position view so position is one component in this web page in real life it would get its own",
    "start": "2059599",
    "end": "2066398"
  },
  {
    "text": "file for this method but it's small enough this function but it's small enough and this is a demo it's staying",
    "start": "2066399",
    "end": "2072118"
  },
  {
    "text": "here we're also going to have a picture view which is also a mouse position to",
    "start": "2072119",
    "end": "2079398"
  },
  {
    "text": "HTML and the picture view it only cares about the EXP position or will for now we can ask it",
    "start": "2079960",
    "end": "2088520"
  },
  {
    "text": "to make an image the image has no children but it has one attribute HTML",
    "start": "2088520",
    "end": "2094118"
  },
  {
    "text": "attributes it's an image no it's a source attribute and that accepts a string which is the name of the",
    "start": "2094119",
    "end": "2103000"
  },
  {
    "text": "file and I need to import HTML attributes impr",
    "start": "2103200",
    "end": "2111760"
  },
  {
    "text": "import okay let that compile no cannot find Variable View",
    "start": "2112880",
    "end": "2120119"
  },
  {
    "text": "right because I need to write the view function the top level view function that combines these two so there we get",
    "start": "2120119",
    "end": "2126359"
  },
  {
    "text": "the mouse pointer and we create a div that puts these two things together we get the position",
    "start": "2126359",
    "end": "2133480"
  },
  {
    "text": "view that gets to know about the mouse position we get the picture view that gets to know about the mouse position",
    "start": "2133480",
    "end": "2140680"
  },
  {
    "text": "and now we have the view function again compiles all right well okay we that's",
    "start": "2140680",
    "end": "2147520"
  },
  {
    "text": "technically a picture but it's not very pretty so we clearly need some CSS lxly I approach the CSS okay so by",
    "start": "2147520",
    "end": "2156960"
  },
  {
    "text": "all the compiler outputs index.html in real life I never wanted to do that I want my own index.html please so I'm",
    "start": "2156960",
    "end": "2163520"
  },
  {
    "text": "going to delete yours and I'm going to create my own and I'm going to paste the basics in",
    "start": "2163520",
    "end": "2170760"
  },
  {
    "text": "there where's my thing with a star is um okay so here's a basic HTML file",
    "start": "2170760",
    "end": "2177720"
  },
  {
    "text": "which references the CSS to use element here I need to add two things um the",
    "start": "2177720",
    "end": "2183880"
  },
  {
    "text": "script source to I'm going to have the compiler put it in lmjs instead of",
    "start": "2183880",
    "end": "2189640"
  },
  {
    "text": "index.html and in then body all I need is that little script",
    "start": "2189640",
    "end": "2195078"
  },
  {
    "text": "tag go here give the script tag now go away and in there I will put el. hello",
    "start": "2196119",
    "end": "2202079"
  },
  {
    "text": "because that's my module. full screen because I want it to be the full screen you can do element part of your screen you don't have to commit to everything",
    "start": "2202079",
    "end": "2209480"
  },
  {
    "text": "but here we'll do full screen okay that's it except that I now have to",
    "start": "2209480",
    "end": "2215280"
  },
  {
    "text": "compile and I'll specify that I want the output to go to lm. JS and then it won't",
    "start": "2215280",
    "end": "2221200"
  },
  {
    "text": "overwrite my index. h2l which will be nice of it I also need that CSS file",
    "start": "2221200",
    "end": "2226880"
  },
  {
    "text": "check out okay okay this is my word",
    "start": "2226880",
    "end": "2235240"
  },
  {
    "text": "yay okay the mouse POS the position is so responding to the mouse you see my",
    "start": "2235240",
    "end": "2240880"
  },
  {
    "text": "daughter this is Linda better known as deer pointing up let's make the picture respond to the",
    "start": "2240880",
    "end": "2248200"
  },
  {
    "text": "mouse pointer because that makes it way more fun maybe oh let's see what's the middle the middle is about 200 okay so",
    "start": "2248200",
    "end": "2255720"
  },
  {
    "text": "let's say if x is less than 200 then I want to",
    "start": "2255720",
    "end": "2264480"
  },
  {
    "text": "use um we'll go deer left and I'm going to put this in an image",
    "start": "2264480",
    "end": "2272319"
  },
  {
    "text": "file um equal sign just I have to put this in a let block so we can let the",
    "start": "2272319",
    "end": "2277720"
  },
  {
    "text": "image file equal this uh um yeah it equals D left but you can",
    "start": "2277720",
    "end": "2285240"
  },
  {
    "text": "never have an if without an else because in either cases it has to return the same type because it's only data so if",
    "start": "2285240",
    "end": "2291560"
  },
  {
    "text": "always has an else and in this case we'll have the right so it's one or the other oh that failed which mean format",
    "start": "2291560",
    "end": "2299640"
  },
  {
    "text": "failed which means it doesn't compile the compiler will give me an actual useful error you have",
    "start": "2299640",
    "end": "2305520"
  },
  {
    "text": "a um2 I have an extra",
    "start": "2305520",
    "end": "2312040"
  },
  {
    "text": "then oh thank you yeah that that would make a lot more sense thanks all right",
    "start": "2312359",
    "end": "2320280"
  },
  {
    "text": "yay okay she says point over there no no point over there no not point over there",
    "start": "2320280",
    "end": "2326359"
  },
  {
    "text": "no point over there okay cool so so now the picture",
    "start": "2326359",
    "end": "2332400"
  },
  {
    "text": "and the position are both responding to the mouse movement uh there's some refactoring that that I feel the need",
    "start": "2332400",
    "end": "2338880"
  },
  {
    "text": "for here because um Pretend This is complicated business logic and I really",
    "start": "2338880",
    "end": "2345240"
  },
  {
    "text": "don't want that in my view that's that's not the function that my business logic",
    "start": "2345240",
    "end": "2350359"
  },
  {
    "text": "belongs in I would really rather my view be like well what direction do we want to point",
    "start": "2350359",
    "end": "2357720"
  },
  {
    "text": "and if it's left then we'll use that picture and if it's right then we'll use that picture that's what I'd like to",
    "start": "2357720",
    "end": "2364960"
  },
  {
    "text": "write and I would like just receive the direction instead of the X so I I could do that if instead of the",
    "start": "2364960",
    "end": "2372880"
  },
  {
    "text": "mouse position I got like a custom type we'll call it model and we'll make a type Alias for it and this represents",
    "start": "2372880",
    "end": "2379200"
  },
  {
    "text": "like my application State my like business important application state so the model it can still have the X and Y",
    "start": "2379200",
    "end": "2386119"
  },
  {
    "text": "position because the position view will need that uh but then it can also have the direction which is well what is it",
    "start": "2386119",
    "end": "2392400"
  },
  {
    "text": "okay it's a direction I can make that up a Direction is either left or",
    "start": "2392400",
    "end": "2399560"
  },
  {
    "text": "right yeah yeah yeah that's the code I'd like to have for my view function in order to do that I will have to have",
    "start": "2399560",
    "end": "2406440"
  },
  {
    "text": "something that converts the mouse pointer the current value of the mouse",
    "start": "2406440",
    "end": "2413440"
  },
  {
    "text": "position to um my model and in this case uh we will just",
    "start": "2413440",
    "end": "2420720"
  },
  {
    "text": "say okay well we got the mouse position in as a message so we can get its X we",
    "start": "2420720",
    "end": "2427880"
  },
  {
    "text": "can get it Y and we'll need to come up with some",
    "start": "2427880",
    "end": "2433280"
  },
  {
    "text": "direction and we can do that in a let block and here we will say dur equals",
    "start": "2433280",
    "end": "2439160"
  },
  {
    "text": "and now we get to say if x is less than 200 then left else right so we don't",
    "start": "2439160",
    "end": "2445560"
  },
  {
    "text": "have to know how to display left and right but we just have the business concept that she's pointing to the left",
    "start": "2445560",
    "end": "2450720"
  },
  {
    "text": "or she's pointing to the right that's great okay a couple other details now I've got the this decide",
    "start": "2450720",
    "end": "2457079"
  },
  {
    "text": "method my view goes from model to HTML they both need to do that and the last",
    "start": "2457079",
    "end": "2463480"
  },
  {
    "text": "thing is to bring that lovely decide method into the program",
    "start": "2463480",
    "end": "2468720"
  },
  {
    "text": "flow I can do that in the program flow up here there's a mechanism for that in",
    "start": "2468720",
    "end": "2476839"
  },
  {
    "text": "my case I'm just going to say and decide because I have a function for this particular set of um",
    "start": "2476839",
    "end": "2485240"
  },
  {
    "text": "configuration and that might actually work so now we're going from the input which is the mouse moves to the decide",
    "start": "2485240",
    "end": "2491440"
  },
  {
    "text": "oh except our initial model here it no longer has enough information this is",
    "start": "2491440",
    "end": "2497760"
  },
  {
    "text": "not an initial message it's an initial State and so we need to provide a",
    "start": "2497760",
    "end": "2503200"
  },
  {
    "text": "direction how about up well we'll use that up picture again okay well if up is going to be a direction then better add",
    "start": "2503200",
    "end": "2509920"
  },
  {
    "text": "a case here and if I add a case here the compiler will complain if I don't handle it down here so we need another one of",
    "start": "2509920",
    "end": "2517560"
  },
  {
    "text": "these that goes up and shows up and it doesn't like me and the",
    "start": "2517560",
    "end": "2524359"
  },
  {
    "text": "compiler will tell me why cannot find variable X okay because I think it's like message. X or",
    "start": "2524359",
    "end": "2530520"
  },
  {
    "text": "something at that point yeah good enough see can't access",
    "start": "2530520",
    "end": "2535960"
  },
  {
    "text": "something I don't have all right Dera now what do you do okay she starts pointing up it's 0 0 that's the initial",
    "start": "2535960",
    "end": "2542040"
  },
  {
    "text": "State and as soon as I move the mouse yay the decisions are made and deer points over here no over there okay good",
    "start": "2542040",
    "end": "2550280"
  },
  {
    "text": "job deer okay so now we have the decide and",
    "start": "2550280",
    "end": "2555800"
  },
  {
    "text": "we're we're making decisions separately from The View and I like that but we're still only responding to the position",
    "start": "2555800",
    "end": "2562359"
  },
  {
    "text": "that we have or the the most recent message that we've received the current Mouse position we're not responding to",
    "start": "2562359",
    "end": "2568119"
  },
  {
    "text": "everything that has ever happened that I might care about okay let's say we don't want deer",
    "start": "2568119",
    "end": "2574680"
  },
  {
    "text": "to just respond to the mouse move Movement we want to like click a button to make her turn left or",
    "start": "2574680",
    "end": "2580640"
  },
  {
    "text": "right that'll give us another source of input to make a button okay we need this",
    "start": "2580640",
    "end": "2588480"
  },
  {
    "text": "we'll go down to the picture view and instead of just an image will need a div it has no attributes it has some",
    "start": "2588480",
    "end": "2595599"
  },
  {
    "text": "children which include the image but also include a button the button will have",
    "start": "2595599",
    "end": "2602760"
  },
  {
    "text": "the child of text that says left and it needs an onclick",
    "start": "2602760",
    "end": "2609319"
  },
  {
    "text": "event so when I when I ask it to have an onclick event that on click event takes",
    "start": "2609319",
    "end": "2615599"
  },
  {
    "text": "as an argument the message that it should send back well what I really want it to send back is left I would like to",
    "start": "2615599",
    "end": "2624079"
  },
  {
    "text": "say we could we might return a Direction but the problem is all the incoming",
    "start": "2624079",
    "end": "2629559"
  },
  {
    "text": "messages that are going to hit my decide message need to be the same my decide function need to be the same type and",
    "start": "2629559",
    "end": "2636319"
  },
  {
    "text": "left and mouse position are two disparate types so I better create a union type okay how about how about",
    "start": "2636319",
    "end": "2641839"
  },
  {
    "text": "instead of just left I say Point left that would be cool that would like make sense did I make a comma no put one in",
    "start": "2641839",
    "end": "2649359"
  },
  {
    "text": "here and we'll go ahead and make the uh right button as well and it's going to",
    "start": "2649359",
    "end": "2654760"
  },
  {
    "text": "say point right that would make sense and Elm format has added a bunch",
    "start": "2654760",
    "end": "2660520"
  },
  {
    "text": "of vertical space okay now I have two buttons that want to go left or right I need to be able to return custom message",
    "start": "2660520",
    "end": "2667160"
  },
  {
    "text": "type which can be either a direction or a mouse position so fine I can have points in a direction",
    "start": "2667160",
    "end": "2674720"
  },
  {
    "text": "or hey that Mouse moved and it went over here Mouse",
    "start": "2674720",
    "end": "2680680"
  },
  {
    "text": "position great so now all my htmls is returning messages you are returning a",
    "start": "2680680",
    "end": "2686480"
  },
  {
    "text": "message well you don't return anything but if you did it would be a message my disde method no longer takes just a",
    "start": "2686480",
    "end": "2692920"
  },
  {
    "text": "mouse position it can have either of the these messages and it can decide what to do",
    "start": "2692920",
    "end": "2700680"
  },
  {
    "text": "based on well it might get just a point in a direction in which case skin",
    "start": "2700680",
    "end": "2708880"
  },
  {
    "text": "rocket uh we will well I'm not going to know what x is and I'm not going to know what Y is but at least I know what",
    "start": "2708880",
    "end": "2715440"
  },
  {
    "text": "direction to point and at this point if we get a mouse",
    "start": "2715440",
    "end": "2721800"
  },
  {
    "text": "move then we well we know what x is position X and we know what Y is but we",
    "start": "2721800",
    "end": "2730319"
  },
  {
    "text": "don't know what direction to go how about oh we default that's up okay one",
    "start": "2730319",
    "end": "2737040"
  },
  {
    "text": "other thing we need to do is to make sure everything that we get in is a message I'm going to tell them send the",
    "start": "2737040",
    "end": "2743640"
  },
  {
    "text": "mouse. move move information through the mouse move",
    "start": "2743640",
    "end": "2748960"
  },
  {
    "text": "Constructor for the message and now we should get start with",
    "start": "2748960",
    "end": "2756119"
  },
  {
    "text": "a model we get two different types of messages from buttons or from the mouse move let's see what derer",
    "start": "2756119",
    "end": "2762599"
  },
  {
    "text": "does first we need to import HTML documents that's",
    "start": "2762599",
    "end": "2767760"
  },
  {
    "text": "easy",
    "start": "2767760",
    "end": "2770760"
  },
  {
    "text": "maybe um yeah okay so that didn't work what",
    "start": "2774800",
    "end": "2781160"
  },
  {
    "text": "where's my oh I totally didn't I just do that um I've got dur okay what line is",
    "start": "2781160",
    "end": "2788240"
  },
  {
    "text": "that 31 um Direction equals oh I called it",
    "start": "2788240",
    "end": "2795119"
  },
  {
    "text": "Direction all right got",
    "start": "2795119",
    "end": "2798960"
  },
  {
    "text": "that and here we go yay there's buttons but if I click the button it forgets the mouse position otherwise it forgets that",
    "start": "2800280",
    "end": "2807160"
  },
  {
    "text": "poo bummer um great so what I need is for my decide",
    "start": "2807160",
    "end": "2814280"
  },
  {
    "text": "function to have have an additional argument which is the previous value of the model and this will be previous such",
    "start": "2814280",
    "end": "2822440"
  },
  {
    "text": "that direction is that and I can get the direction out of the previous that'll be so convenient fortunately this is also",
    "start": "2822440",
    "end": "2829839"
  },
  {
    "text": "baked into the elm architecture well it's not fortunate it's just this is how it actually works well previous do",
    "start": "2829839",
    "end": "2837040"
  },
  {
    "text": "Direction and this gets to be called update and at this point we're very",
    "start": "2837040",
    "end": "2843319"
  },
  {
    "text": "close to the Natural Elm AR architecture except that we only have one input and",
    "start": "2843319",
    "end": "2848559"
  },
  {
    "text": "we don't do anything in JavaScript um",
    "start": "2848559",
    "end": "2856359"
  },
  {
    "text": "make uh I need Chrome and I need to refresh okay deer okay we can move the",
    "start": "2857960",
    "end": "2863359"
  },
  {
    "text": "mouse we can click lefta it remembers the pointer it remembers the position we can click right yay",
    "start": "2863359",
    "end": "2870680"
  },
  {
    "text": "okay um the only other things between here and the elm architecture are that",
    "start": "2870680",
    "end": "2876559"
  },
  {
    "text": "the init would take the flags as an argument the input can vary based on the model you can decide that later and both",
    "start": "2876559",
    "end": "2884160"
  },
  {
    "text": "the input in it and update can pass things commands requests out to",
    "start": "2884160",
    "end": "2890119"
  },
  {
    "text": "JavaScript and the um yeah I wanted to talk about code structure but I don't really have time",
    "start": "2892280",
    "end": "2899000"
  },
  {
    "text": "really all the components have each of these pieces and get organized into files and get assembled into main they",
    "start": "2899000",
    "end": "2905040"
  },
  {
    "text": "not going to show you program because out of time um one thing I've noticed is that I",
    "start": "2905040",
    "end": "2911880"
  },
  {
    "text": "can't send messages like I would in an actor model but I can just call functions from the other modules and",
    "start": "2911880",
    "end": "2917839"
  },
  {
    "text": "that violates encapsulation but that has suddenly become okay now because if I change",
    "start": "2917839",
    "end": "2923000"
  },
  {
    "text": "something here it the compiler will protect me and will make sure everything is fine so I make much larger pieces and",
    "start": "2923000",
    "end": "2931480"
  },
  {
    "text": "I'm safe because of the types and the immutability and they're not as in capsulated but it works",
    "start": "2931480",
    "end": "2937680"
  },
  {
    "text": "out um also I've given up on wanting my code to sound natural to read like",
    "start": "2937680",
    "end": "2944079"
  },
  {
    "text": "English I don't want it to read like English I want it to read like code doing Ruby now I'm not happy with it",
    "start": "2944079",
    "end": "2949200"
  },
  {
    "text": "well I'm not happy with the language I'm very happy with the work it's really fun so I much prefer the structure and",
    "start": "2949200",
    "end": "2954640"
  },
  {
    "text": "explicitness of elm there there's no inheritance there's no magic at all",
    "start": "2954640",
    "end": "2961160"
  },
  {
    "text": "there's no type classes there is nothing sneaky happening every function call goes exactly one place so I really think",
    "start": "2961160",
    "end": "2968599"
  },
  {
    "text": "we could get a lot more out of our editors this is my like gut feeling of the elm ecosystem status at this point",
    "start": "2968599",
    "end": "2975440"
  },
  {
    "text": "um the community is really good there's a lot of meetups including in Chicago oh in the first Elm conferences in",
    "start": "2975440",
    "end": "2980559"
  },
  {
    "text": "September in St Louis as a pre-conference to strange Loop call for proposals going out soon uh but",
    "start": "2980559",
    "end": "2986960"
  },
  {
    "text": "generally it's it's a lot of fun and the architecture has value",
    "start": "2986960",
    "end": "2992920"
  },
  {
    "text": "outside here's my favorite picture okay this is Q he's a character in Star Trek",
    "start": "2992920",
    "end": "2999400"
  },
  {
    "text": "who can also Bend reality to his whim and I feel like in Elm I get to live in",
    "start": "2999400",
    "end": "3005119"
  },
  {
    "text": "Q's world I get to live in Star Trek the Next Generation where I can like get a cup of tea out of a thing in the wall",
    "start": "3005119",
    "end": "3010720"
  },
  {
    "text": "whenever I want can even remember what that thing is called um I get to live in the future where everything is organized",
    "start": "3010720",
    "end": "3017000"
  },
  {
    "text": "and makes sense and now and then if I really need a pony I can just read through this portal and shake hands with",
    "start": "3017000",
    "end": "3024440"
  },
  {
    "text": "JavaScript so this is this is what Elm has done for me it allows me to live in the future",
    "start": "3024440",
    "end": "3030000"
  },
  {
    "text": "and make pretty UI um I'm jessitron if you want to learn",
    "start": "3030000",
    "end": "3035480"
  },
  {
    "text": "Elm go here the guide at Elm Lang um the code for this presentation is on",
    "start": "3035480",
    "end": "3040799"
  },
  {
    "text": "GitHub um stripe is hiring of course but not for",
    "start": "3040799",
    "end": "3046319"
  },
  {
    "text": "Elm thank",
    "start": "3046319",
    "end": "3049520"
  },
  {
    "text": "you",
    "start": "3054440",
    "end": "3057440"
  }
]