[
  {
    "start": "0",
    "end": "13000"
  },
  {
    "text": "[Music]",
    "start": "3510",
    "end": "7529"
  },
  {
    "text": "great thank you so today what I want to talk about is some of the things that",
    "start": "10850",
    "end": "18060"
  },
  {
    "start": "13000",
    "end": "135000"
  },
  {
    "text": "we've learned from the history of Java and how some of those lessons can guide",
    "start": "18060",
    "end": "25349"
  },
  {
    "text": "us to in dealing with the problems that we face as an industry",
    "start": "25349",
    "end": "32340"
  },
  {
    "text": "today I'll talk a bit about some of the things that I'm working on now and",
    "start": "32340",
    "end": "38899"
  },
  {
    "text": "hopefully we'll have time for questions and discussion Java of course started",
    "start": "38899",
    "end": "47460"
  },
  {
    "text": "out as a simple clean language it was arguably too simple I remember I",
    "start": "47460",
    "end": "55140"
  },
  {
    "text": "embraced Java fairly early back in probably 96 and I really wanted to get",
    "start": "55140",
    "end": "62340"
  },
  {
    "text": "back to C++ looking back I kind of wonder about that now I've actually been very very glad as it turned out to leave",
    "start": "62340",
    "end": "69360"
  },
  {
    "text": "C++ behind but I remember thinking at the time well this is not really a proper language and of course you look",
    "start": "69360",
    "end": "75690"
  },
  {
    "text": "at Java one dot oh they deliberately left out some of the things that were problems in C++ and some of the other",
    "start": "75690",
    "end": "83340"
  },
  {
    "text": "object-oriented languages but you know there weren't inner classes there wasn't JDBC there really it was very very",
    "start": "83340",
    "end": "90720"
  },
  {
    "text": "limited obviously Java 1.1 changed that profoundly and Java suddenly became",
    "start": "90720",
    "end": "98700"
  },
  {
    "text": "really a pretty compelling language for building business applications and it",
    "start": "98700",
    "end": "104250"
  },
  {
    "text": "was still fairly simple and clean of course sun rectified the simple and clean thing",
    "start": "104250",
    "end": "111090"
  },
  {
    "text": "by introducing j2ee after that it was anything but simple and it was anything",
    "start": "111090",
    "end": "116820"
  },
  {
    "text": "but clean and fortunately Java had such a massive tailwind behind it that for",
    "start": "116820",
    "end": "123689"
  },
  {
    "text": "quite a number of years people adopted Java because they felt they had to not",
    "start": "123689",
    "end": "129450"
  },
  {
    "text": "because it was particularly simple or claimed to use in the era of j2ee so how",
    "start": "129450",
    "end": "135959"
  },
  {
    "start": "135000",
    "end": "560000"
  },
  {
    "text": "many people remember the early years things like EJB 1.1",
    "start": "135959",
    "end": "142260"
  },
  {
    "text": "deployment descriptors fortunately all dear there are still quite a few people who were traumatized it was not nice it",
    "start": "142260",
    "end": "151200"
  },
  {
    "text": "was not nice for a number of reasons one of the reasons it was not nice is that",
    "start": "151200",
    "end": "158280"
  },
  {
    "text": "the java part was fine but it was kind of hard to find the java you typically had hundreds and hundreds of lines of",
    "start": "158280",
    "end": "164640"
  },
  {
    "text": "deployment descriptors you were forced to write multiple artifacts for every",
    "start": "164640",
    "end": "169920"
  },
  {
    "text": "single method it just became really hard to focus on the business code so the",
    "start": "169920",
    "end": "178260"
  },
  {
    "text": "java part was fun it was just everything else that sucked and sucked pretty massively",
    "start": "178260",
    "end": "184970"
  },
  {
    "text": "fortunately Enterprise Java was saved from itself not by the big vendors but",
    "start": "184970",
    "end": "193739"
  },
  {
    "text": "by the open-source community and that certainly was a very exciting thing to",
    "start": "193739",
    "end": "199290"
  },
  {
    "text": "be part of when really open source gradually provided all these amazing",
    "start": "199290",
    "end": "207389"
  },
  {
    "text": "things so it started off pretty simply I remember when I was first writing Java",
    "start": "207389",
    "end": "212669"
  },
  {
    "text": "apps everyone was writing logging frameworks I don't know how many I've written every Java developer back then",
    "start": "212669",
    "end": "218910"
  },
  {
    "text": "wrote a logging framework suddenly log4j turned up and log4j was arguably not",
    "start": "218910",
    "end": "227669"
  },
  {
    "text": "perfect in fact there's a lot of argument about that which is why there's probably about 75 logging frameworks in",
    "start": "227669",
    "end": "233069"
  },
  {
    "text": "Java but it was way better than building",
    "start": "233069",
    "end": "238709"
  },
  {
    "text": "your own logging for every application so that was certainly one of the first",
    "start": "238709",
    "end": "246000"
  },
  {
    "text": "open-source projects that I remember popping up almost everywhere then of course there was struts struts was both",
    "start": "246000",
    "end": "253590"
  },
  {
    "text": "very important in positive and also deeply deeply terrible it really was",
    "start": "253590",
    "end": "260099"
  },
  {
    "text": "very badly designed struts 1.0 for example insisting on using a control of",
    "start": "260099",
    "end": "266280"
  },
  {
    "text": "superclass versus an interface very bad choice as Ted newid once said concrete",
    "start": "266280",
    "end": "274800"
  },
  {
    "text": "inheritance is the last thing you want to burn up in Java it was the first thing that struts",
    "start": "274800",
    "end": "280020"
  },
  {
    "text": "burned up so struts was imperfect but it was incredibly important because",
    "start": "280020",
    "end": "286050"
  },
  {
    "text": "suddenly people could adopt reasonable practices for building web apps and they",
    "start": "286050",
    "end": "292110"
  },
  {
    "text": "could do it in a consistent manner using open source then of course we got to the",
    "start": "292110",
    "end": "297570"
  },
  {
    "text": "two things that really changed the world of j2e and they were spring and",
    "start": "297570",
    "end": "303000"
  },
  {
    "text": "hibernate and it's worth reflecting on",
    "start": "303000",
    "end": "308610"
  },
  {
    "text": "both why they were successful in particular why Spring was successful and",
    "start": "308610",
    "end": "315530"
  },
  {
    "text": "what weak lessons we can draw from that going forward so the biggest single",
    "start": "315530",
    "end": "321240"
  },
  {
    "text": "thing that spring did was it addressed testability when we looked at the EJB",
    "start": "321240",
    "end": "326930"
  },
  {
    "text": "1.1 world the biggest challenge was not only that there was an awful lot of",
    "start": "326930",
    "end": "333540"
  },
  {
    "text": "ceremony in writing anything but it was totally untestable you wanted to test",
    "start": "333540",
    "end": "339330"
  },
  {
    "text": "business logic in an EJB good luck it was almost impossible so spring and pico",
    "start": "339330",
    "end": "347370"
  },
  {
    "text": "container and later juice with inversion of control dependency injection meant",
    "start": "347370",
    "end": "355140"
  },
  {
    "text": "that you could put your business logic in pojos and you could actually test it",
    "start": "355140",
    "end": "361310"
  },
  {
    "text": "that testability was a really big deal testability is about the most important",
    "start": "361310",
    "end": "369060"
  },
  {
    "text": "thing well maybe not the single most important thing but well up there in the",
    "start": "369060",
    "end": "374100"
  },
  {
    "text": "most important things you need in developing software in my experience the",
    "start": "374100",
    "end": "380540"
  },
  {
    "text": "shorter your round trips are in terms of getting feedback on what you're doing",
    "start": "380540",
    "end": "385940"
  },
  {
    "text": "the better the result you're going to accomplish and the faster you're going",
    "start": "385940",
    "end": "391470"
  },
  {
    "text": "to accomplish it so suddenly you didn't need to deploy to an app server anymore",
    "start": "391470",
    "end": "396720"
  },
  {
    "text": "to test things you could actually get feedback on your business logic literally as you coded it and of course",
    "start": "396720",
    "end": "403110"
  },
  {
    "text": "this was the era where we were also seeing agile processes and you know",
    "start": "403110",
    "end": "408510"
  },
  {
    "text": "test-driven development take over so testability was probably the single biggest win in my experience",
    "start": "408510",
    "end": "415979"
  },
  {
    "text": "whenever we see technologies that sacrifice testability that's a really",
    "start": "415979",
    "end": "421139"
  },
  {
    "text": "bad sign that's a warning sign that something is wrong and you should really",
    "start": "421139",
    "end": "426300"
  },
  {
    "text": "go back and rethink it in fact one of the things that first struck me when I",
    "start": "426300",
    "end": "432419"
  },
  {
    "text": "was working on the first version of spring was that there was something",
    "start": "432419",
    "end": "437460"
  },
  {
    "text": "wrong with TDD because TDD was not applicable to j2ee apps and then",
    "start": "437460",
    "end": "443520"
  },
  {
    "text": "suddenly I thought maybe that's the wrong way around maybe there's something wrong with j2ee if you cannot apply TDD",
    "start": "443520",
    "end": "453960"
  },
  {
    "text": "I am personally a very big believer in TDD as I said the earlier you get",
    "start": "453960",
    "end": "459330"
  },
  {
    "text": "feedback through testing the better other things that spring did that were",
    "start": "459330",
    "end": "465000"
  },
  {
    "text": "important was that it provided consistency and here we have to thank",
    "start": "465000",
    "end": "471870"
  },
  {
    "text": "Juergen hurler who is the present lead of the Spring Framework and has been the lead of spring since about 2005 Jurgen",
    "start": "471870",
    "end": "479940"
  },
  {
    "text": "is obsessed with consistency at first I couldn't believe the amount of effort he",
    "start": "479940",
    "end": "485639"
  },
  {
    "text": "put into consistent naming of methods and functions and classes I think years",
    "start": "485639",
    "end": "492810"
  },
  {
    "text": "later we've seen just how much that pays off because it makes it possible to understand different pieces of the",
    "start": "492810",
    "end": "499199"
  },
  {
    "text": "framework that you might not yet have used so in other words that consistent",
    "start": "499199",
    "end": "505469"
  },
  {
    "text": "approach was a big part of the value but fundamentally the reason that spring and",
    "start": "505469",
    "end": "511590"
  },
  {
    "text": "hibernate successfully revolutionised j2ee was they went in a totally",
    "start": "511590",
    "end": "516599"
  },
  {
    "text": "different direction from what the major vendors were pushing back then the the",
    "start": "516599",
    "end": "522690"
  },
  {
    "text": "emphasis from the larger vendors was essentially tools that drew pretty pictures so for example remember",
    "start": "522690",
    "end": "529320"
  },
  {
    "text": "rational rows remember all those things that could like the MDI apps that were",
    "start": "529320",
    "end": "534959"
  },
  {
    "text": "very popular in the mid-2000s so there was really a vendor driven push towards",
    "start": "534959",
    "end": "541079"
  },
  {
    "text": "drawing pretty pictures this kind of all let's not think about code it's much better to work at a higher level than",
    "start": "541079",
    "end": "547020"
  },
  {
    "text": "code and you know essentially the people who write code are these kind of you",
    "start": "547020",
    "end": "552870"
  },
  {
    "text": "know code monkeys they're they're are uninteresting people compared to the glorious architects with their modeling",
    "start": "552870",
    "end": "559170"
  },
  {
    "text": "tools spring and hibernate took a totally different tack their tech was you know what job is pretty damn good",
    "start": "559170",
    "end": "565830"
  },
  {
    "start": "560000",
    "end": "692000"
  },
  {
    "text": "why don't we just let people write Java and make sure that it's same it was that",
    "start": "565830",
    "end": "571200"
  },
  {
    "text": "insight that oversaw the next significant big idea in simplification",
    "start": "571200",
    "end": "577080"
  },
  {
    "text": "and that big idea came from outside the Java community that big idea came from",
    "start": "577080",
    "end": "582890"
  },
  {
    "text": "rails so certainly using spring and hibernate in the early years was dramatically better than writing EJB but",
    "start": "582890",
    "end": "591150"
  },
  {
    "text": "this dog there was quite a bit of XML there was still certainly things that were verbose and not ideal rails brought",
    "start": "591150",
    "end": "601740"
  },
  {
    "text": "to bear the interesting insight that you really wanted convention over",
    "start": "601740",
    "end": "608640"
  },
  {
    "text": "configuration that had two benefits firstly it got rid of a lot of",
    "start": "608640",
    "end": "614550"
  },
  {
    "text": "configuration because it just wasn't necessary and secondly it enforced consistency which proved to be really",
    "start": "614550",
    "end": "621570"
  },
  {
    "text": "really useful so it meant the different apps were structured the same way this",
    "start": "621570",
    "end": "626670"
  },
  {
    "text": "was something I remember looking at from the outside in 2005-2006 thinking yeah",
    "start": "626670",
    "end": "633330"
  },
  {
    "text": "this is pretty cool and we made various efforts to try to bring that to the Java community that were unsuccessful they",
    "start": "633330",
    "end": "641610"
  },
  {
    "text": "were unsuccessful because back then the Java community had the enterprise",
    "start": "641610",
    "end": "647130"
  },
  {
    "text": "disease of everyone thinking that their app and their team was profoundly special so you couldn't really get any",
    "start": "647130",
    "end": "655410"
  },
  {
    "text": "uptake on the convention over configuration kind of approach because everyone wanted to build this wonderful",
    "start": "655410",
    "end": "661950"
  },
  {
    "text": "special snowflake of an app in Java and so although it was clearly a great idea",
    "start": "661950",
    "end": "667920"
  },
  {
    "text": "there were two problems one was that people in Java really had this very heavy enterprise mindset which was",
    "start": "667920",
    "end": "674130"
  },
  {
    "text": "different from the mindset of the rails community and secondly there was the fact that Java apps were just way too big so quite",
    "start": "674130",
    "end": "681440"
  },
  {
    "text": "reasonably if you were writing a 10 million line Java app it is more complex",
    "start": "681440",
    "end": "686900"
  },
  {
    "text": "than a typical rails app so there was actually a grain of truth however the",
    "start": "686900",
    "end": "693530"
  },
  {
    "start": "692000",
    "end": "712000"
  },
  {
    "text": "move towards cloud native and micro services meant that these insights from rails suddenly became relevant to the",
    "start": "693530",
    "end": "700070"
  },
  {
    "text": "Java community and this is where essentially spring boot took those insights and brought them to Java and I",
    "start": "700070",
    "end": "709250"
  },
  {
    "text": "think the result is pretty damn beautiful where you end up with very",
    "start": "709250",
    "end": "715610"
  },
  {
    "start": "712000",
    "end": "806000"
  },
  {
    "text": "little configuration the focus is totally on the Java code it really takes that idea of hey programming code is a",
    "start": "715610",
    "end": "724400"
  },
  {
    "text": "beautiful thing it's the most powerful way we've found to express business",
    "start": "724400",
    "end": "729560"
  },
  {
    "text": "logic let's focus on that and get everything out of the way so really it",
    "start": "729560",
    "end": "734690"
  },
  {
    "text": "was that move towards cloud not even fragmenting applications that made it",
    "start": "734690",
    "end": "739880"
  },
  {
    "text": "possible for Java to enjoy the same benefits however it did come at a cost",
    "start": "739880",
    "end": "748790"
  },
  {
    "text": "so spring boot works beautifully say if you have a twenty you know five hundred",
    "start": "748790",
    "end": "755260"
  },
  {
    "text": "twenty thousand line Java app and that is the reality of even today's",
    "start": "755260",
    "end": "761150"
  },
  {
    "text": "enterprises they're increasingly moving away from the small number of multi-million line apps to a very large",
    "start": "761150",
    "end": "769670"
  },
  {
    "text": "or insanely large well mind-blowing ly large number of relatively small apps so",
    "start": "769670",
    "end": "777950"
  },
  {
    "text": "on the one hand the apps are simple enough that they can benefit from conventions on the other hand there are",
    "start": "777950",
    "end": "786170"
  },
  {
    "text": "an awful lot of them so unfortunately this seems to be a characteristic of our",
    "start": "786170",
    "end": "791570"
  },
  {
    "text": "industry and possibly life in general that whenever you successfully banish one form of complexity it creates",
    "start": "791570",
    "end": "799670"
  },
  {
    "text": "another bottleneck right you get rid of one problem it shows up somewhere else",
    "start": "799670",
    "end": "805190"
  },
  {
    "text": "so now we have a very large",
    "start": "805190",
    "end": "810690"
  },
  {
    "text": "of applications to get to production we have a very large number of source repositories some people go down the",
    "start": "810690",
    "end": "817710"
  },
  {
    "text": "mono repo rip that has its problems as well so we've got a different class of",
    "start": "817710",
    "end": "822960"
  },
  {
    "text": "problems that firstly is necessary to get to a cloud native world but secondly",
    "start": "822960",
    "end": "831420"
  },
  {
    "text": "is partly the consequence of solving some of the complexity problems in java",
    "start": "831420",
    "end": "837150"
  },
  {
    "text": "apps so if we look at where we are now as an industry I would say that language",
    "start": "837150",
    "end": "844530"
  },
  {
    "start": "839000",
    "end": "874000"
  },
  {
    "text": "doesn't matter that much I've never really been a believer in the language",
    "start": "844530",
    "end": "849720"
  },
  {
    "text": "Wars I really cannot get excited by debates",
    "start": "849720",
    "end": "855090"
  },
  {
    "text": "about you know Java versus scholar versus c-sharp versus closure or",
    "start": "855090",
    "end": "861600"
  },
  {
    "text": "whatever because I think that the biggest wins and challenges that we face and not to do with language like",
    "start": "861600",
    "end": "868710"
  },
  {
    "text": "realistically if you look at where we are now vs. 15 years ago it's very easy",
    "start": "868710",
    "end": "875520"
  },
  {
    "start": "874000",
    "end": "936000"
  },
  {
    "text": "to create these relatively small apps that we need to create it honestly",
    "start": "875520",
    "end": "881310"
  },
  {
    "text": "doesn't matter that much whether you use spring whether you use another Java framework whether you use",
    "start": "881310",
    "end": "887550"
  },
  {
    "text": "node whether you use Django or whatever there are a bunch of really good choices",
    "start": "887550",
    "end": "892890"
  },
  {
    "text": "and compared to 15 years ago it almost doesn't matter which one you use in terms of the simplicity and elegance",
    "start": "892890",
    "end": "901740"
  },
  {
    "text": "that you'll get sure there are differences around performance there's differences around security and the",
    "start": "901740",
    "end": "907740"
  },
  {
    "text": "integrations available for those stacks but they're all fundamentally pretty good ways of building applications and",
    "start": "907740",
    "end": "915480"
  },
  {
    "text": "that is not where the complexity is any more the principle complexity is that we",
    "start": "915480",
    "end": "923490"
  },
  {
    "text": "have an awful lot of applications and that is actually proving as painful as",
    "start": "923490",
    "end": "929670"
  },
  {
    "text": "it used to be back in the j2ee days so",
    "start": "929670",
    "end": "936870"
  },
  {
    "start": "936000",
    "end": "1019000"
  },
  {
    "text": "our back in the era of early j2ee we didn't even have the term continuous delivery right CD",
    "start": "936870",
    "end": "944010"
  },
  {
    "text": "arose a bit later and initially CD was thinking about those big apps right how",
    "start": "944010",
    "end": "951990"
  },
  {
    "text": "we deliver those big apps rather than when they've been fragmented when they've been splintered into hundreds of",
    "start": "951990",
    "end": "958200"
  },
  {
    "text": "smaller apps so as the application on",
    "start": "958200",
    "end": "964350"
  },
  {
    "text": "the one hand the application architecture is improved on the other the deployment infrastructure is",
    "start": "964350",
    "end": "971040"
  },
  {
    "text": "improved so once upon a time we deployed really big complex heavyweight apps to",
    "start": "971040",
    "end": "978170"
  },
  {
    "text": "even heavier weight application service so you took your multi million lines of",
    "start": "978170",
    "end": "985050"
  },
  {
    "text": "Java code and you deployed it to WebSphere which was probably an order of magnitude bigger and that has totally",
    "start": "985050",
    "end": "995850"
  },
  {
    "text": "changed right in firstly we had the error of virtualization where service",
    "start": "995850",
    "end": "1002000"
  },
  {
    "text": "could be provisioned very quickly you didn't need a forklift to provision a server then we realized that even in",
    "start": "1002000",
    "end": "1007430"
  },
  {
    "text": "many cases even a virtual machine is too heavyweight and we got containers then we got kubernetes etcetera to manage",
    "start": "1007430",
    "end": "1013880"
  },
  {
    "text": "containers we also have PA's solutions like hiroko Heroku and cloud foundry so",
    "start": "1013880",
    "end": "1024069"
  },
  {
    "text": "while on the one hand our applications got way better on the other hand our",
    "start": "1024069",
    "end": "1029480"
  },
  {
    "text": "deployment options for them got way better as well but in the middle nothing",
    "start": "1029480",
    "end": "1034970"
  },
  {
    "text": "very much happened to continuous delivery so essentially we had the first",
    "start": "1034970",
    "end": "1040040"
  },
  {
    "text": "wave of CI solutions that you know arose in the late 2000s and they were all fit",
    "start": "1040040",
    "end": "1047510"
  },
  {
    "text": "they were and are all fairly similar so they're based on the notion of a",
    "start": "1047510",
    "end": "1052850"
  },
  {
    "text": "pipeline a pipeline per project and the pipeline typically being defined in",
    "start": "1052850",
    "end": "1058520"
  },
  {
    "text": "gamal or some kind of dsl and that really hasn't changed there hasn't been",
    "start": "1058520",
    "end": "1065059"
  },
  {
    "text": "a lot of innovation in that space in the last ten years and I would argue that",
    "start": "1065059",
    "end": "1070160"
  },
  {
    "text": "while on the one hand application development has gotten really good and the deployment options are really pretty",
    "start": "1070160",
    "end": "1077030"
  },
  {
    "text": "great there programable you can work with them in an agile manner now what is in the middle of how our apps get from the left to the",
    "start": "1077030",
    "end": "1084110"
  },
  {
    "text": "right just hasn't enjoyed that kind of benefit and I would say that is probably",
    "start": "1084110",
    "end": "1091850"
  },
  {
    "start": "1089000",
    "end": "1371000"
  },
  {
    "text": "a biggest single challenge as an industry today certainly when you look",
    "start": "1091850",
    "end": "1099650"
  },
  {
    "text": "at where Java is in terms of simplification its quietly making",
    "start": "1099650",
    "end": "1105470"
  },
  {
    "text": "progress it's maybe not quick enough but you look at things like for example local type inferences anyone using the",
    "start": "1105470",
    "end": "1113210"
  },
  {
    "text": "local type inference in Java nah it's that is a really important feature",
    "start": "1113210",
    "end": "1120220"
  },
  {
    "text": "particularly if you work with it in other languages you realize that just removing that noise is great and I also",
    "start": "1120220",
    "end": "1128150"
  },
  {
    "text": "like the way that it is just local in Java I think actually that was a pretty good choice similarly you know we've",
    "start": "1128150",
    "end": "1135620"
  },
  {
    "text": "just had a bunch of improvements over the years that have made Java",
    "start": "1135620",
    "end": "1141640"
  },
  {
    "text": "significantly nicer even like things like static inputs that may seem minor but enable you to write significantly",
    "start": "1141640",
    "end": "1148610"
  },
  {
    "text": "more readable code so I would say in the language level Java is certainly not the",
    "start": "1148610",
    "end": "1154760"
  },
  {
    "text": "problem it would be great to see it adopt some of the features of more modern languages but certainly the",
    "start": "1154760",
    "end": "1160820"
  },
  {
    "text": "irritations we have for example over Java's lack of proper interpolated or multi-line strings they're relatively",
    "start": "1160820",
    "end": "1169520"
  },
  {
    "text": "minor compared to wrestling with the problem of getting all these apps to production whether they're written in",
    "start": "1169520",
    "end": "1175280"
  },
  {
    "text": "Java or anything else and when you think",
    "start": "1175280",
    "end": "1180620"
  },
  {
    "text": "about the reality that we have in our delivery turns out we've recreated a lot",
    "start": "1180620",
    "end": "1187280"
  },
  {
    "text": "of those same types of problems that we had in the era of j2ee so for example testability if you have",
    "start": "1187280",
    "end": "1196550"
  },
  {
    "text": "your pipelines in Yemma how do you test",
    "start": "1196550",
    "end": "1202160"
  },
  {
    "text": "them you know essentially you have lost that ability just as in the EJB days",
    "start": "1202160",
    "end": "1208340"
  },
  {
    "text": "where there was no way except throwing the thing under the application server to test your deployment descriptor we've",
    "start": "1208340",
    "end": "1214040"
  },
  {
    "text": "got the same kind of problem secondly in the j2ee era we had a problem with",
    "start": "1214040",
    "end": "1220220"
  },
  {
    "text": "duplication remember the EJB home interface the EJB remote interface in",
    "start": "1220220",
    "end": "1225560"
  },
  {
    "text": "the EJB implementation so you would have to say the same thing",
    "start": "1225560",
    "end": "1230900"
  },
  {
    "text": "multiple times we're actually doing that again so across let's suppose you've got a",
    "start": "1230900",
    "end": "1236180"
  },
  {
    "text": "thousand services to deploy suppose 700 is spring 200 and note and a hundred of",
    "start": "1236180",
    "end": "1242180"
  },
  {
    "text": "various other things you probably have a thousand distinct pipelines with massive",
    "start": "1242180",
    "end": "1248690"
  },
  {
    "text": "duplication in reality you probably have three to five pipelines right probably",
    "start": "1248690",
    "end": "1254720"
  },
  {
    "text": "most of the spring apps are going to be much the same most of the node apps should be deployed in much the same manner and you shouldn't be like saying",
    "start": "1254720",
    "end": "1262520"
  },
  {
    "text": "the same thing in every different repository so this really comes to the",
    "start": "1262520",
    "end": "1271070"
  },
  {
    "text": "question of whether or not Emel is the new XML I would argue that ya mole not",
    "start": "1271070",
    "end": "1279260"
  },
  {
    "text": "only evidences virtually everything that was bad about the old XML XML but it's",
    "start": "1279260",
    "end": "1284810"
  },
  {
    "text": "found some new things as well so firstly when XML first appeared there was a rush",
    "start": "1284810",
    "end": "1292220"
  },
  {
    "text": "to use it for everything and obviously I am NOT innocent in this regard I was responsible for quite a lot of XML but I",
    "start": "1292220",
    "end": "1301730"
  },
  {
    "text": "mean some of that was appropriate but certainly XML was used for many things for which it was not appropriate yellow",
    "start": "1301730",
    "end": "1308720"
  },
  {
    "text": "is very much going the same way the difference is that yeah Mille is",
    "start": "1308720",
    "end": "1313880"
  },
  {
    "text": "significantly worse than XML yeah mall is moderately readable it's a",
    "start": "1313880",
    "end": "1321020"
  },
  {
    "text": "bit more readable in XML a little bit less verbose but it also has some",
    "start": "1321020",
    "end": "1326290"
  },
  {
    "text": "bizarre peculiarities so for example there's a site called no yeah Mille comm",
    "start": "1326290",
    "end": "1334220"
  },
  {
    "text": "that's well worth a look one of the things they point out which is relevant and Scandinavia is let's suppose you",
    "start": "1334220",
    "end": "1340010"
  },
  {
    "text": "want to have a list of countries in llamó you might include Norway",
    "start": "1340010",
    "end": "1345440"
  },
  {
    "text": "in the list of countries and you might abbreviate it in oh because that's the",
    "start": "1345440",
    "end": "1350480"
  },
  {
    "text": "country code so you might have for example sa DK n Oh in a list that evaluates to the string sa the string DK",
    "start": "1350480",
    "end": "1358670"
  },
  {
    "text": "and false which is exactly what you'd expect similarly I'm sure we've all",
    "start": "1358670",
    "end": "1365330"
  },
  {
    "text": "encountered the problems in yellow with the bizarre treatment of white space I",
    "start": "1365330",
    "end": "1371110"
  },
  {
    "start": "1371000",
    "end": "1406000"
  },
  {
    "text": "guess I've been teaching my younger son Python I can kind of appreciate the",
    "start": "1371110",
    "end": "1378260"
  },
  {
    "text": "prescriptive formatting in Python and why that kind of makes sense in Python but applying that to a configuration",
    "start": "1378260",
    "end": "1384590"
  },
  {
    "text": "format I don't know that that to me is a bit baffling and scary so essentially as",
    "start": "1384590",
    "end": "1392600"
  },
  {
    "text": "an industry we are doing with yema what we did with XML and we're doing it as",
    "start": "1392600",
    "end": "1399790"
  },
  {
    "text": "unquestioningly as we did with XML it's like everything has to be in yellow and",
    "start": "1399790",
    "end": "1407050"
  },
  {
    "text": "certainly there are many examples of this of which delivery is probably the",
    "start": "1407050",
    "end": "1412700"
  },
  {
    "text": "most obvious and I think we really should be aware that the same kind of",
    "start": "1412700",
    "end": "1419660"
  },
  {
    "text": "insights that helped with spring and hibernate and rails move j2ee forward",
    "start": "1419660",
    "end": "1425480"
  },
  {
    "text": "might be relevant today and that fundamental insight that you know code",
    "start": "1425480",
    "end": "1431300"
  },
  {
    "text": "in modern programming languages is pretty compelling I think we should look",
    "start": "1431300",
    "end": "1437870"
  },
  {
    "text": "at the excessive overuse of y ml and ask the question of is this the best way to",
    "start": "1437870",
    "end": "1442970"
  },
  {
    "text": "communicate and could we communicate better in code so this is fundamentally",
    "start": "1442970",
    "end": "1449450"
  },
  {
    "text": "what I have been working on for the last couple of years at atomist it's the idea",
    "start": "1449450",
    "end": "1456290"
  },
  {
    "text": "of what if we took a spring-like approach to delivery what if we try to",
    "start": "1456290",
    "end": "1462530"
  },
  {
    "text": "address those problems of duplication those problems of inappropriate use of",
    "start": "1462530",
    "end": "1468520"
  },
  {
    "text": "configuration in the same way by bringing to bear code so I'm going to",
    "start": "1468520",
    "end": "1474440"
  },
  {
    "text": "give you a quick demo of some of what we can do for Java and spring and hopefully have some time for",
    "start": "1474440",
    "end": "1483880"
  },
  {
    "text": "questions so there are essentially three novel ideas that we have around delivery",
    "start": "1483880",
    "end": "1492360"
  },
  {
    "start": "1485000",
    "end": "1528000"
  },
  {
    "text": "firstly to get rid of that problem of duplication to have an event hub so",
    "start": "1492360",
    "end": "1500920"
  },
  {
    "text": "instead of every project having its own pipeline why don't we just funnel events",
    "start": "1500920",
    "end": "1507220"
  },
  {
    "text": "like for example there was a commit on a particular project and a push why don't we funnel that through a central event",
    "start": "1507220",
    "end": "1513760"
  },
  {
    "text": "hub as you can see here again we're trying to do what spring did and bring",
    "start": "1513760",
    "end": "1520780"
  },
  {
    "text": "basically the idea of programming languages and computer science in place of drawing pretty pictures secondly we",
    "start": "1520780",
    "end": "1530320"
  },
  {
    "start": "1528000",
    "end": "1592000"
  },
  {
    "text": "have a rich model clearly one of the good things about having multiple pipelines in your projects is that they",
    "start": "1530320",
    "end": "1538240"
  },
  {
    "text": "inherit they implicitly have a context right so you know that's one good thing about having your a thousand pipelines",
    "start": "1538240",
    "end": "1544270"
  },
  {
    "text": "that the pipeline in each project knows where it is it knows what kind of",
    "start": "1544270",
    "end": "1549280"
  },
  {
    "text": "project that is there's another way to do it which we think which is is better which is to you know in the same way as",
    "start": "1549280",
    "end": "1556450"
  },
  {
    "text": "springboard a consistent approach to have a model behind it where you can for",
    "start": "1556450",
    "end": "1561490"
  },
  {
    "text": "example when you see a push you can find out what kind of project you're dealing with like is it a spring project is it a",
    "start": "1561490",
    "end": "1567910"
  },
  {
    "text": "node project and thirdly we fully embrace using code rather than relying",
    "start": "1567910",
    "end": "1575470"
  },
  {
    "text": "on configuration or gooeys so we are",
    "start": "1575470",
    "end": "1581950"
  },
  {
    "text": "trying to build what we think of as the API for software this by the way is",
    "start": "1581950",
    "end": "1587290"
  },
  {
    "text": "open-source and I'll show you later how you can run it totally an open source so",
    "start": "1587290",
    "end": "1593230"
  },
  {
    "start": "1592000",
    "end": "1782000"
  },
  {
    "text": "let me demonstrate what this is like in practice so what I'm going to do is we",
    "start": "1593230",
    "end": "1600370"
  },
  {
    "text": "are strong believers in atomist in chat opps how many people are using slack how many",
    "start": "1600370",
    "end": "1609310"
  },
  {
    "text": "people would say they do some form of chat ops we find chat ups very compelling you",
    "start": "1609310",
    "end": "1617879"
  },
  {
    "text": "don't need to use slack to use atomists but we think that by the slack or Microsoft teams is a great experience",
    "start": "1617879",
    "end": "1625499"
  },
  {
    "text": "it's not about the particular product so much as the capabilities the beautiful",
    "start": "1625499",
    "end": "1632249"
  },
  {
    "text": "thing about chat ops is so long as you can avoid BOTS drowning you in spam you",
    "start": "1632249",
    "end": "1638909"
  },
  {
    "text": "have this ability for people to join communities of interest so for example I",
    "start": "1638909",
    "end": "1644100"
  },
  {
    "text": "am in the channels in our slack teams that I care about like channels",
    "start": "1644100",
    "end": "1649230"
  },
  {
    "text": "associated with particular projects channels associated with discussing particular topics if I get sick of a",
    "start": "1649230",
    "end": "1655409"
  },
  {
    "text": "particular project or I'm not working on that project anymore I leave the channel if I'm not working on a particular",
    "start": "1655409",
    "end": "1661320"
  },
  {
    "text": "project but I think it's important I go join the channel that works really really well okay so one of the things",
    "start": "1661320",
    "end": "1668429"
  },
  {
    "text": "that Adams does is allow you to automate a bunch of things using slack commands",
    "start": "1668429",
    "end": "1678239"
  },
  {
    "text": "you can also access this through a web interface or using Microsoft teams but",
    "start": "1678239",
    "end": "1684419"
  },
  {
    "text": "there's this fundamental idea of being able to write an automation that is a command and access that through some",
    "start": "1684419",
    "end": "1693239"
  },
  {
    "text": "form of interface remember how I said one of the things that we're trying to create is a consistent model so we think",
    "start": "1693239",
    "end": "1701340"
  },
  {
    "text": "that delivery shouldn't just be about a pipeline per repo that is just basically",
    "start": "1701340",
    "end": "1707730"
  },
  {
    "text": "a fairly limited set of possible steps and calling out the batch scripts you",
    "start": "1707730",
    "end": "1713039"
  },
  {
    "text": "should work with the model that is powerful enough to enable you to do things like create projects modify code",
    "start": "1713039",
    "end": "1719519"
  },
  {
    "text": "in projects inspect projects for certain behaviors so when I type in create",
    "start": "1719519",
    "end": "1726899"
  },
  {
    "text": "spring it's going to go to the atomist event hub and eventually call out to",
    "start": "1726899",
    "end": "1735269"
  },
  {
    "text": "what we call a software delivery machine so in this case this is running right here on my laptop and the events will",
    "start": "1735269",
    "end": "1742559"
  },
  {
    "text": "come down and be processed on that normally of course you'd run and you know kubernetes or wherever you",
    "start": "1742559",
    "end": "1748560"
  },
  {
    "text": "deploy your apps so I'm going to type in create spring and we will say we'll call",
    "start": "1748560",
    "end": "1756870"
  },
  {
    "text": "it go to cop one actually should be CPH in it and now it's going to walk me",
    "start": "1756870",
    "end": "1766410"
  },
  {
    "text": "through a number of questions so for example what maven group do I want and",
    "start": "1766410",
    "end": "1773600"
  },
  {
    "text": "what package name do I want so see pH so",
    "start": "1773600",
    "end": "1783210"
  },
  {
    "start": "1782000",
    "end": "1863000"
  },
  {
    "text": "this is of course something that you could already automate how many people automate creating spring projects using",
    "start": "1783210",
    "end": "1790260"
  },
  {
    "text": "this wow that's surprisingly low it's better than creating them by hand it's",
    "start": "1790260",
    "end": "1796410"
  },
  {
    "text": "not as good as using atomists but it's way better than creating them by hand so spring initializer basically enables",
    "start": "1796410",
    "end": "1803220"
  },
  {
    "text": "you to plug in similar information and magically get a new project created for",
    "start": "1803220",
    "end": "1809940"
  },
  {
    "text": "you as a zip file this is certainly better than doing what a lot of people",
    "start": "1809940",
    "end": "1815280"
  },
  {
    "text": "do which is by copying the most recently created project and like deleting the bits that are irrelevant because it",
    "start": "1815280",
    "end": "1821730"
  },
  {
    "text": "gives you a consistent baseline so although the questions that are asked",
    "start": "1821730",
    "end": "1826740"
  },
  {
    "text": "by Adam it seems similar the approach is very very different so spring initializer is written in a",
    "start": "1826740",
    "end": "1834270"
  },
  {
    "text": "mixture of Java and some template language I can't remember which one it is and if as you want to change what it",
    "start": "1834270",
    "end": "1842670"
  },
  {
    "text": "emits you can fork the project and change the source code by hand the only",
    "start": "1842670",
    "end": "1850110"
  },
  {
    "text": "problem is when you do that you won't know whether or not the generated projects will even compile because you",
    "start": "1850110",
    "end": "1855330"
  },
  {
    "text": "may have screwed something up so you won't know until you actually generate a new project and see whether it builds",
    "start": "1855330",
    "end": "1863010"
  },
  {
    "start": "1863000",
    "end": "1971000"
  },
  {
    "text": "and passes its test our approach is really quite different we use a general",
    "start": "1863010",
    "end": "1868590"
  },
  {
    "text": "approach which is not limited to spring where we start with what we call the",
    "start": "1868590",
    "end": "1873960"
  },
  {
    "text": "seed project it's just a normal github or bitbucket project wherever you keep",
    "start": "1873960",
    "end": "1879600"
  },
  {
    "text": "your sauce control and it works by cloning that",
    "start": "1879600",
    "end": "1884880"
  },
  {
    "text": "thing transforming it and giving you a new project so if you actually look here",
    "start": "1884880",
    "end": "1889920"
  },
  {
    "text": "at how this is defined you can see that it is defined in code remember that I",
    "start": "1889920",
    "end": "1897000"
  },
  {
    "text": "said we like code so here we have some typescript code that creates what we",
    "start": "1897000",
    "end": "1904110"
  },
  {
    "text": "call a generator command so here it has a name it has an intent so create spring",
    "start": "1904110",
    "end": "1911280"
  },
  {
    "text": "that's what I'd type into slack or Microsoft teams it has a number of parameters that you defined it specifies",
    "start": "1911280",
    "end": "1918870"
  },
  {
    "text": "a starting point and you can compute that dynamically or any way you like and then it specifies a number of transforms",
    "start": "1918870",
    "end": "1926040"
  },
  {
    "text": "which are essentially functions on the project so you can have as many of these",
    "start": "1926040",
    "end": "1931080"
  },
  {
    "text": "as you want and you can have as many seed projects as you want this is all",
    "start": "1931080",
    "end": "1936890"
  },
  {
    "text": "available in open source so you can go to animist and you know create your own seed projects and do this without a",
    "start": "1936890",
    "end": "1943770"
  },
  {
    "text": "missed open source as well as for using a server the service so to verify how this works I'm going to go into the seed",
    "start": "1943770",
    "end": "1956220"
  },
  {
    "text": "project itself and you can see here it says hello demo on Wednesday well it's",
    "start": "1956220",
    "end": "1964860"
  },
  {
    "text": "not Wednesday so what I'm going to do is say hello Copenhagen and commit the",
    "start": "1964860",
    "end": "1977190"
  },
  {
    "start": "1971000",
    "end": "2032000"
  },
  {
    "text": "changes you'll see that something will happen now in my software delivery",
    "start": "1977190",
    "end": "1983280"
  },
  {
    "text": "machine so remember that I said that the model involves instead of a conventional",
    "start": "1983280",
    "end": "1989640"
  },
  {
    "text": "CI approach we've got one pipeline per repo the model involves events from the organization being forwarded to our",
    "start": "1989640",
    "end": "1996930"
  },
  {
    "text": "event hub and therefore processed so let's have a look at what's happening here we should see some ActiveX to",
    "start": "1996930",
    "end": "2004460"
  },
  {
    "text": "anything I have a slack channel for that so I can't show you that in slack but let's go ahead now and commit commit",
    "start": "2004460",
    "end": "2012110"
  },
  {
    "text": "this submit the creation command and it should work from that latest master of",
    "start": "2012110",
    "end": "2021710"
  },
  {
    "text": "the seed project so here you can say that it's you can see that it's cloning the starting point and here is our new",
    "start": "2021710",
    "end": "2032840"
  },
  {
    "start": "2032000",
    "end": "2080000"
  },
  {
    "text": "project it's got the name we suggested when i refresh here you'll see see those",
    "start": "2032840",
    "end": "2038780"
  },
  {
    "text": "github topics that appeared here that is also the result of an event handler",
    "start": "2038780",
    "end": "2044900"
  },
  {
    "text": "across our organization so for example there was an event for a push there was also another special event that said",
    "start": "2044900",
    "end": "2051320"
  },
  {
    "text": "this was the first push that we've seen for this repository which caused a listener to say oh let's go and have a",
    "start": "2051320",
    "end": "2057830"
  },
  {
    "text": "look and see if we can see what's in this and it determined that there's Java spring bird spring and maven all of this",
    "start": "2057830",
    "end": "2065899"
  },
  {
    "text": "is code based so here it's suggesting that we create a channel let's let it",
    "start": "2065900",
    "end": "2072139"
  },
  {
    "text": "create the slack channel and jump over there and see what we see",
    "start": "2072140",
    "end": "2079940"
  },
  {
    "text": "so you will see here that it has what we call goals so for example it already",
    "start": "2079940",
    "end": "2086090"
  },
  {
    "start": "2080000",
    "end": "2118000"
  },
  {
    "text": "built and in fact it has already deployed locally so here is the app",
    "start": "2086090",
    "end": "2094820"
  },
  {
    "text": "already deployed again very different approach to delivery so whereas",
    "start": "2094820",
    "end": "2101030"
  },
  {
    "text": "traditionally you would have had to put in a CI file to get anything to happen",
    "start": "2101030",
    "end": "2107150"
  },
  {
    "text": "with this we have policies in our team that say whenever I see a new spring",
    "start": "2107150",
    "end": "2113300"
  },
  {
    "text": "boot application let's go through these steps it's also suggested that we might",
    "start": "2113300",
    "end": "2121160"
  },
  {
    "start": "2118000",
    "end": "2136000"
  },
  {
    "text": "want to have a Cloud Foundry manifest a dermis supports a bunch of things for deployment including kubernetes which is",
    "start": "2121160",
    "end": "2127580"
  },
  {
    "text": "probably the most popular choice but this particular demo is set up for Cloud",
    "start": "2127580",
    "end": "2135020"
  },
  {
    "text": "Foundry and when I press that button it will run another slack command so you'll",
    "start": "2135020",
    "end": "2141680"
  },
  {
    "start": "2136000",
    "end": "2167000"
  },
  {
    "text": "see my local machine is getting busy here and it's actually created",
    "start": "2141680",
    "end": "2147200"
  },
  {
    "text": "a pull request for me remember that I said that as would spring this notion of",
    "start": "2147200",
    "end": "2153230"
  },
  {
    "text": "consistency is really important so Adam esteems to give you a framework for",
    "start": "2153230",
    "end": "2158420"
  },
  {
    "text": "doing the kind of things that matter in automating your software delivery clearly the continuous delivery flow",
    "start": "2158420",
    "end": "2164570"
  },
  {
    "text": "matters a great deal but so does the",
    "start": "2164570",
    "end": "2170000"
  },
  {
    "start": "2167000",
    "end": "2198000"
  },
  {
    "text": "ability to both understand the code and configuration in your projects and affect change to it so you know many",
    "start": "2170000",
    "end": "2176480"
  },
  {
    "text": "things are driven through get you've probably heard the term get ops so here",
    "start": "2176480",
    "end": "2182240"
  },
  {
    "text": "we have animist able to affect the delivery of this project by suggesting a",
    "start": "2182240",
    "end": "2188599"
  },
  {
    "text": "Cloud Foundry manifest as you can say it's pretty bog-standard Cloud Foundry manifest but it does contain the name of",
    "start": "2188599",
    "end": "2197260"
  },
  {
    "text": "the repo how did it get that well not actually the name of the repo the name of the app it looked inside the maven",
    "start": "2197260",
    "end": "2204500"
  },
  {
    "start": "2198000",
    "end": "2246000"
  },
  {
    "text": "pom file so let's merge this pull request which by the way we can do here",
    "start": "2204500",
    "end": "2210790"
  },
  {
    "text": "right Natomas and then we will see some different goals so here we just had one",
    "start": "2210790",
    "end": "2218630"
  },
  {
    "text": "two three four five goals when this PR merges we should say a different set of",
    "start": "2218630",
    "end": "2227990"
  },
  {
    "text": "goals unless it's possible that slack has gone down again which did happen a",
    "start": "2227990",
    "end": "2234770"
  },
  {
    "text": "little earlier let's give slack a moment and while we're figuring out whether we",
    "start": "2234770",
    "end": "2240319"
  },
  {
    "text": "have to go to our web interface I'll show you how all of this works in code",
    "start": "2240319",
    "end": "2246170"
  },
  {
    "start": "2246000",
    "end": "2351000"
  },
  {
    "text": "so the core of the software delivery machine is event handlers so in our",
    "start": "2246170",
    "end": "2254810"
  },
  {
    "text": "machine we can add a bunch of listeners",
    "start": "2254810",
    "end": "2260030"
  },
  {
    "text": "so for example I can add listeners to a first push I can add listeners to a new",
    "start": "2260030",
    "end": "2267740"
  },
  {
    "text": "issue being created I can add issues to a new channel being created the whole",
    "start": "2267740",
    "end": "2275390"
  },
  {
    "text": "notion is based around what we now understand to be good more",
    "start": "2275390",
    "end": "2281170"
  },
  {
    "text": "software development practice event-based and I would argue following you know the",
    "start": "2281170",
    "end": "2289130"
  },
  {
    "text": "lessons of spring and hibernate and rails actually using code in place of",
    "start": "2289130",
    "end": "2294589"
  },
  {
    "text": "thinking that you can get by with something like Gamal or XML so let's say",
    "start": "2294589",
    "end": "2300920"
  },
  {
    "text": "how these goals were handled and I think",
    "start": "2300920",
    "end": "2306530"
  },
  {
    "text": "that slack is probably down so I might go to our web interface and have a look",
    "start": "2306530",
    "end": "2313250"
  },
  {
    "text": "at what happened here so",
    "start": "2313250",
    "end": "2317349"
  },
  {
    "text": "okay so yes this has actually executed",
    "start": "2324410",
    "end": "2331650"
  },
  {
    "text": "goals and it was offering to deploy it to Cloud Foundry but unfortunately I",
    "start": "2331650",
    "end": "2336810"
  },
  {
    "text": "can't see it quite as clearly as I would like",
    "start": "2336810",
    "end": "2342000"
  },
  {
    "text": "without slack so we'll see if that comes back maybe it's this one oh here we are so that's yep so okay let's go back here",
    "start": "2342000",
    "end": "2353550"
  },
  {
    "start": "2351000",
    "end": "2441000"
  },
  {
    "text": "and see how these rules were driven so here you can see there are rules for",
    "start": "2353550",
    "end": "2360840"
  },
  {
    "text": "things like auto fixes push impact analysis code inspection build and also",
    "start": "2360840",
    "end": "2366720"
  },
  {
    "text": "for deployment the most important single event that we handle is the push so a",
    "start": "2366720",
    "end": "2376110"
  },
  {
    "text": "push is something that we enable you to handle via declaring rules what we call",
    "start": "2376110",
    "end": "2384150"
  },
  {
    "text": "push rules these get evaluated and merged together so for example when it",
    "start": "2384150",
    "end": "2390420"
  },
  {
    "text": "says a Cloud Foundry manifest it does additional stuff versus when it doesn't",
    "start": "2390420",
    "end": "2398790"
  },
  {
    "text": "see a Cloud Foundry manifest so in other words adding that Cloud Foundry manifest",
    "start": "2398790",
    "end": "2404880"
  },
  {
    "text": "made a different mated handle the repo differently - if it hadn't seen it so",
    "start": "2404880",
    "end": "2413970"
  },
  {
    "text": "how do these things look well remember I've been talked about the value of code and the value of a model so the cloud",
    "start": "2413970",
    "end": "2423990"
  },
  {
    "text": "has Cloud Foundry manifest check we could actually write in code and it would look something like this",
    "start": "2423990",
    "end": "2431870"
  },
  {
    "start": "2441000",
    "end": "2614000"
  },
  {
    "text": "so we have a comprehensive model that allows you things like you can look at",
    "start": "2441140",
    "end": "2448350"
  },
  {
    "text": "who made that push what branch was it on also what are the contents of the",
    "start": "2448350",
    "end": "2456480"
  },
  {
    "text": "project so you know if you're familiar probably with CI tools where you can",
    "start": "2456480",
    "end": "2463320"
  },
  {
    "text": "specify regular expression patterns for branches in y mo in this case you can do",
    "start": "2463320",
    "end": "2469650"
  },
  {
    "text": "things in typescript or JavaScript code and that's really really powerful why is",
    "start": "2469650",
    "end": "2477900"
  },
  {
    "text": "that really powerful well when you look for example at using you know yeah mall",
    "start": "2477900",
    "end": "2483030"
  },
  {
    "text": "or some kind of internal DSL or even XML typically you're limited to the",
    "start": "2483030",
    "end": "2490280"
  },
  {
    "text": "extensibility that has been foreseen by the designer of that tall so for example",
    "start": "2490280",
    "end": "2498300"
  },
  {
    "text": "there's a bunch of things that you can do including calling out to bash in virtually all CI solutions but",
    "start": "2498300",
    "end": "2505290"
  },
  {
    "text": "eventually you hit a limit limit you're either going to have to write an external script and call it in which",
    "start": "2505290",
    "end": "2510810"
  },
  {
    "text": "case you don't really need have a good model or you're going to have to write a plugin that specific for the tool you",
    "start": "2510810",
    "end": "2519540"
  },
  {
    "text": "don't have the ability to express arbitrary behaviors this is important",
    "start": "2519540",
    "end": "2525780"
  },
  {
    "text": "because as I said earlier on I think programming languages are one of the",
    "start": "2525780",
    "end": "2531270"
  },
  {
    "text": "best ways probably the best way we know to express behavior so you know one of",
    "start": "2531270",
    "end": "2539850"
  },
  {
    "text": "the key insights of the j2ee era was that we realized that like MDA wasn't",
    "start": "2539850",
    "end": "2548100"
  },
  {
    "text": "going to cut it trying to sweep that early complexity of j2ee under the carpet by you know having fancy UI",
    "start": "2548100",
    "end": "2555030"
  },
  {
    "text": "builders all those kind of things that was not going to cut it what you needed to do was empower people to write code",
    "start": "2555030",
    "end": "2562280"
  },
  {
    "text": "in a way that was effective and was not",
    "start": "2562280",
    "end": "2567540"
  },
  {
    "text": "you know buried in massive ceremony so when you focus on doing things in",
    "start": "2567540",
    "end": "2574609"
  },
  {
    "text": "code with a nice model behind it suddenly you unleash the power of seven",
    "start": "2574609",
    "end": "2582109"
  },
  {
    "text": "decades of brilliant people people from Alan Turing Grace Hopper Dijkstra so",
    "start": "2582109",
    "end": "2589730"
  },
  {
    "text": "many brilliant people have been responsible for modern computer science and modern programming languages not to",
    "start": "2589730",
    "end": "2596089"
  },
  {
    "text": "mention the you know open source communities that have brought us all this amazing functionality so because",
    "start": "2596089",
    "end": "2602540"
  },
  {
    "text": "here we're working with node there's a whole bunch of stuff that we have that's",
    "start": "2602540",
    "end": "2609230"
  },
  {
    "text": "available to us from node so any of the",
    "start": "2609230",
    "end": "2616700"
  },
  {
    "text": "things that I want to say about my delivery here these rules apply to the",
    "start": "2616700",
    "end": "2622820"
  },
  {
    "text": "whole of my organization so for example here you can see when push satisfied x'",
    "start": "2622820",
    "end": "2630020"
  },
  {
    "text": "we've got a little function here for not material change is material change and",
    "start": "2630020",
    "end": "2635060"
  },
  {
    "text": "it enables us to look inside the project and say well you know if you didn't change any of these kind of files like a",
    "start": "2635060",
    "end": "2640940"
  },
  {
    "text": "Java file or a y ml filer an XML file or a properties file or an HTML file we're",
    "start": "2640940",
    "end": "2647000"
  },
  {
    "text": "probably not going to have to go and blow away your containers okay so",
    "start": "2647000",
    "end": "2652400"
  },
  {
    "text": "hopefully I've encouraged you to think about delivery you know the fact that",
    "start": "2652400",
    "end": "2659359"
  },
  {
    "text": "how our application development is simplified and become way better over the years how our deployment to things",
    "start": "2659359",
    "end": "2666349"
  },
  {
    "text": "like kubernetes and Cloud Foundry has become much better how we get our apps from A to B I would argue has not gone",
    "start": "2666349",
    "end": "2675770"
  },
  {
    "text": "forward that much I hope you consider the benefits of a code based approach",
    "start": "2675770",
    "end": "2683210"
  },
  {
    "text": "and ask this question in general as you know whenever you find yourself facing a",
    "start": "2683210",
    "end": "2688760"
  },
  {
    "text": "500 line yeah more fail is this the right way to do it finally the idea of",
    "start": "2688760",
    "end": "2696740"
  },
  {
    "text": "per organization delivery rules versus pipeline per repo",
    "start": "2696740",
    "end": "2704330"
  },
  {
    "text": "finally I would hope you'd be interested to check out atomist we have both an",
    "start": "2704330",
    "end": "2709460"
  },
  {
    "text": "open source of open source projects and a service so if you go to Adam is calm",
    "start": "2709460",
    "end": "2715160"
  },
  {
    "text": "and follow the getting started or develop a link you will see those things",
    "start": "2715160",
    "end": "2720890"
  },
  {
    "text": "so personally in the last couple of years I've written very little Java I",
    "start": "2720890",
    "end": "2726080"
  },
  {
    "text": "have written predominantly typescript I absolutely love typescript",
    "start": "2726080",
    "end": "2731930"
  },
  {
    "text": "I think typescript is one of the two most exciting languages out there at the moment I think the other one is Kotlin I",
    "start": "2731930",
    "end": "2739970"
  },
  {
    "text": "think Kotlin is also very very important but one other thing that I've found is",
    "start": "2739970",
    "end": "2745430"
  },
  {
    "text": "that typescript is really pretty easy to embrace if you come from a Java background if you come from a Java",
    "start": "2745430",
    "end": "2751760"
  },
  {
    "text": "background you're trying to go just to R or JavaScript it's gotten easier since es6 but it's still it's still a bit",
    "start": "2751760",
    "end": "2759410"
  },
  {
    "text": "weird whereas typescript gives you excellent tooling it gives you really nice type",
    "start": "2759410",
    "end": "2766820"
  },
  {
    "text": "system there's a lot of things that you'll be familiar with and that's why we chose typescript for our code driven",
    "start": "2766820",
    "end": "2776150"
  },
  {
    "text": "model thank you",
    "start": "2776150",
    "end": "2781119"
  },
  {
    "text": "you",
    "start": "2783630",
    "end": "2785690"
  }
]