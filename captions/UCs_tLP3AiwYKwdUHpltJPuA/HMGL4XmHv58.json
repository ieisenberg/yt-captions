[
  {
    "start": "0",
    "end": "213000"
  },
  {
    "text": "Okay, Laurentiu, one thing that I wanted to \nmake sure we had plenty of time to discuss   because there are a lot of things that we \ncould talk about for a long, long time.  ",
    "start": "212400",
    "end": "220800"
  },
  {
    "start": "213000",
    "end": "885000"
  },
  {
    "text": "And I look forward to doing more of that. But I \nwanna make sure we don't give too short a time to  ",
    "start": "220800",
    "end": "225840"
  },
  {
    "text": "your book “Spring Start Here”. I've \nread the entire book. I liked the   book because it covers things very well, and \nI'm curious about several choices you make.  ",
    "start": "233600",
    "end": "245280"
  },
  {
    "text": "I always say that, as an author, some \nof the hardest things you do author  ",
    "start": "245280",
    "end": "252240"
  },
  {
    "text": "are to decide what goes into a book, what does not \ngo into a book. How do you address the things that  ",
    "start": "252240",
    "end": "259440"
  },
  {
    "text": "you put into the book and the weight that you give \neach one? And then, of course, that's all before  ",
    "start": "259440",
    "end": "264400"
  },
  {
    "text": "how you explain a particular concept or how to \ndo something. So, a lot of times it's a matter  ",
    "start": "264960",
    "end": "271039"
  },
  {
    "text": "of you recognizing that while many other books are \nout on the market that can address that topic or  ",
    "start": "271040",
    "end": "277520"
  },
  {
    "text": "some portion of that topic, maybe they haven't \ncovered it in the way that you would necessarily  ",
    "start": "278800",
    "end": "283840"
  },
  {
    "text": "choose to do that. I have a lot of questions for \nyou. I mean, none of them are necessarily that  ",
    "start": "283840",
    "end": "289520"
  },
  {
    "text": "mind-bending, I guess. But I love the fact that \nyou started, again, this goes back to the authors'  ",
    "start": "289520",
    "end": "298720"
  },
  {
    "text": "choices, not with the perspective of Spring Boot \nspecifically, but Spring, just Spring in general.",
    "start": "298720",
    "end": "304320"
  },
  {
    "text": "Let's just start it there. Why did \nyou start with Spring in general when  ",
    "start": "309040",
    "end": "315680"
  },
  {
    "text": "there are a lot of Spring Boot applications out \nthere. Why did you start with Spring in general?  Yes. Indeed, as you already said, there \nare plenty of books on specific subjects,  ",
    "start": "318880",
    "end": "330320"
  },
  {
    "text": "like in the case of Java, you will find dozens of \nbooks on Java fundamentals. In the case of Spring,  ",
    "start": "330320",
    "end": "335760"
  },
  {
    "text": "you have out there a lot of books on Spring \nfundamentals, and on Spring in general, and so on.  ",
    "start": "335760",
    "end": "342320"
  },
  {
    "text": "But the difference between them is the way they \nare structured, what kind of information goes in?  ",
    "start": "342960",
    "end": "350880"
  },
  {
    "text": "How is it structured by the author? \nWhat kind of examples do you have?  ",
    "start": "352720",
    "end": "360560"
  },
  {
    "text": "And I think that's important because people \nthink differently. We are different. So  ",
    "start": "360560",
    "end": "366639"
  },
  {
    "text": "it's good that there are multiple books on the \nsame topic. They don't compete with one another.  ",
    "start": "366640",
    "end": "372160"
  },
  {
    "text": "In some cases, they are complementary and in some \ncases, someone might think this is a great book.  ",
    "start": "372160",
    "end": "378720"
  },
  {
    "text": "Somebody else might think that this is not the way \nthey would more efficiently learn, for example,  ",
    "start": "379280",
    "end": "385840"
  },
  {
    "text": "Spring, and they will choose a different book.\nSo if anyone thinks about writing a book,  ",
    "start": "385840",
    "end": "393360"
  },
  {
    "text": "for example, on a specific topic and they find out \nthat there are already books out there, I would  ",
    "start": "393360",
    "end": "399680"
  },
  {
    "text": "first advise them not to be afraid to write a book \nthat looks differently, because that makes sense.  ",
    "start": "399680",
    "end": "405199"
  },
  {
    "text": "The way I chose to write this book is to \nintroduce Spring fundamentals first of   all. I started with the Spring context and \nI didn't necessarily start with an example  ",
    "start": "408400",
    "end": "420240"
  },
  {
    "text": "because, in my perspective, the book has been \ndesigned for someone who might not even have  ",
    "start": "420960",
    "end": "427759"
  },
  {
    "text": "touched a framework before, when they start with \nthe book. So I had my students in mind. I'm also  ",
    "start": "428640",
    "end": "436720"
  },
  {
    "text": "teaching the faculty, and usually, my students \nwhen they start a fundamentals course in Spring,  ",
    "start": "436720",
    "end": "445200"
  },
  {
    "text": "they have no idea about what the framework is. And \nthat's why you will find, in Chapter 1 in my case,  ",
    "start": "445200",
    "end": "451360"
  },
  {
    "text": "an explanation of why you should use a \nframework, when you should use a framework and   when you shouldn't use a framework because \nit's also important to know when you should  ",
    "start": "451360",
    "end": "460000"
  },
  {
    "text": "find alternatives. And for this purpose, \nI didn't want to introduce the student,  ",
    "start": "460000",
    "end": "467600"
  },
  {
    "text": "the reader, in this case, to one application \nwith something that already has a lot of things  ",
    "start": "467600",
    "end": "474080"
  },
  {
    "text": "behind the scenes such as Spring Boot. So I left \nSpring Boot 4 somewhere in the middle of the book,  ",
    "start": "474080",
    "end": "480159"
  },
  {
    "text": "and I started very, very soft with what \nthe context is, what beans are, how you  ",
    "start": "480160",
    "end": "488560"
  },
  {
    "text": "configure beans, different ways to configure \nbeans, dependency injection, aspect-oriented  ",
    "start": "488560",
    "end": "494720"
  },
  {
    "text": "programming, so inversion of control in general.\nAnd this is a large part of the whole book. It's  ",
    "start": "494720",
    "end": "501600"
  },
  {
    "text": "six chapters, and it's only the very fundamentals \nof Spring. So how do you build data based on this  ",
    "start": "501600",
    "end": "510080"
  },
  {
    "text": "foundation that is called Spring framework? \nAnd then in the second part of the book, when  ",
    "start": "510080",
    "end": "516000"
  },
  {
    "text": "the reader already knows the very basics, \nunderstands what the framework is, what Spring is,  ",
    "start": "517280",
    "end": "523920"
  },
  {
    "text": "how to configure the most basic parts of this \nframework, then I start with real applications.  ",
    "start": "525840",
    "end": "533200"
  },
  {
    "text": "We'll have some code here, of course, but they \nare still examples. You can't have a whole real   application in a book, but you can have examples \nthat are very close to what a real application  ",
    "start": "533760",
    "end": "543600"
  },
  {
    "text": "looks like or parts of a real application.\nYeah. And you bring up just an excellent point.  ",
    "start": "543600",
    "end": "549839"
  },
  {
    "text": "I wrote a book and released it at the beginning of \nlast year. I knew going in because I'd co-authored  ",
    "start": "551920",
    "end": "557680"
  },
  {
    "text": "a couple of other ones, that no book is going \nto fit every person correctly. And that's what  ",
    "start": "557680",
    "end": "564720"
  },
  {
    "text": "I always tell people. But I think it's sobering, \nisn't it? When you release a book, some people  ",
    "start": "564720",
    "end": "570720"
  },
  {
    "text": "just go, \"This is awesome. This is exactly what I \nwas looking for.\" And someone else goes, \"Eh, you  ",
    "start": "571760",
    "end": "576800"
  },
  {
    "text": "know, I like this other book better. Sorry about \nthat.\" And I always tell people don't worry about   that because everyone is different. I may speak \nto you specifically in the way you need to hear,  ",
    "start": "576800",
    "end": "586160"
  },
  {
    "text": "or I may completely miss it. That's fine. \nThere are a lot of people out there.",
    "start": "586720",
    "end": "590399"
  },
  {
    "text": "I think one of the things that your book does well \nis, again, you have to choose where you come in.  ",
    "start": "591840",
    "end": "597360"
  },
  {
    "text": "You have to choose the assumptions you're making, \nand your assumptions or your bar is pretty low.  ",
    "start": "597360",
    "end": "602399"
  },
  {
    "text": "You're assuming that people are coming into \nframeworks fresh. And that's another thing,  ",
    "start": "602400",
    "end": "608160"
  },
  {
    "text": "I think we forget because you've been in \nthis industry a long time. I've been in   this industry for a long time. And we tend to \nnormalize, right? So we think that everybody we  ",
    "start": "609920",
    "end": "620240"
  },
  {
    "text": "speak with is at the same level as we are. And \nmany people are far above us and many people  ",
    "start": "620240",
    "end": "626560"
  },
  {
    "text": "are far below us. And I don't say that as far \nas posturing. It's just that we're all very  ",
    "start": "626560",
    "end": "632480"
  },
  {
    "text": "well versed in some things and complete noobs \nin others, and we will always be in technology.",
    "start": "632480",
    "end": "638399"
  },
  {
    "text": "So you have to remember that there are \na lot of people coming into any topic  ",
    "start": "638400",
    "end": "644560"
  },
  {
    "text": "completely new to that topic. It doesn't mean that \nthey're not super sharp in other topics. Maybe  ",
    "start": "645120",
    "end": "650720"
  },
  {
    "text": "they can teach us a ton of stuff in other topics, \nbut they may be new to Spring. They have never  ",
    "start": "650720",
    "end": "655680"
  },
  {
    "text": "encountered Spring Framework. They've never \ndealt with Spring Boot, or Spring Data or   Spring Security or any of those things, and \nthey just have been handed a project, or they're  ",
    "start": "656960",
    "end": "665840"
  },
  {
    "text": "looking to work on a project, that involves \nSpring, and they're starting fresh. I think one   of the things that you do well is that you come \nin with very few assumptions. It's like, \"Look,  ",
    "start": "666640",
    "end": "677439"
  },
  {
    "text": "we're gonna be working with Java. Let's talk about \nwhat a framework is. Let's talk about what Spring   Framework is and what it does. And let's start \nwith small bites.\" Which I love. I love that.",
    "start": "678240",
    "end": "688240"
  },
  {
    "text": "And then, just to give anybody who may be reading \nthis, who hasn't seen the book, a little bit of   background, the first section is fundamentals, \nthe second section is implementation. So  ",
    "start": "688240",
    "end": "696960"
  },
  {
    "text": "Laurentiu does a really good job. And I'll brag \non you here for a minute. I hope I don't embarrass   you too much. You do a really good job of \nsetting the table and then showing how to  ",
    "start": "697520",
    "end": "708320"
  },
  {
    "text": "implement these things in real-world apps. I just \nwanna cover the chapter headings, \"Spring in the  ",
    "start": "708880",
    "end": "714640"
  },
  {
    "text": "Real World,\" \"Why Should We use Frameworks?\", \n\"The Spring Ecosystem,\" things like that.  ",
    "start": "714640",
    "end": "719680"
  },
  {
    "text": "And then \"The Spring Context: Defining Beans,\" \nright, \"Wiring Beans,\" \"Using Abstractions,\"  ",
    "start": "719680",
    "end": "726640"
  },
  {
    "text": "\"Beans, Scopes, and Life Cycles,\" and \"Using \nAspects with Spring AOP,\" aspect-oriented   programming. And these are things that when \nyou look at this if you're coming in fresh,  ",
    "start": "727520",
    "end": "736879"
  },
  {
    "text": "I can see that that would be a lot of stuff. But \nyou approach things in really nice bite-sized  ",
    "start": "736880",
    "end": "742080"
  },
  {
    "text": "chunks. And that's just the first section. And \nthen you get into how you apply those. And I'll  ",
    "start": "742080",
    "end": "747840"
  },
  {
    "text": "get into that in a moment, but this, I have to \nsay this, is a nice breakdown in terms of an  ",
    "start": "747840",
    "end": "753440"
  },
  {
    "text": "introduction to the concepts that you would need \nto become familiar with to throw around the Spring  ",
    "start": "753440",
    "end": "761840"
  },
  {
    "text": "Framework in ways that will put it to work for \nyou because that's why we use frameworks, right? ",
    "start": "761840",
    "end": "766800"
  },
  {
    "text": "Exactly, so I think that looking at people who \ntry to start learning a framework in general,  ",
    "start": "767440",
    "end": "776960"
  },
  {
    "text": "they get confused at the beginning about all \nof the abstractions that a framework brings  ",
    "start": "776960",
    "end": "782880"
  },
  {
    "text": "in. And especially now with the latest versions \nof Spring, you just declare a variable if you  ",
    "start": "782880",
    "end": "791360"
  },
  {
    "text": "handle the project, as you said, and say it uses \nsome other technologies, like Lombok, for example,  ",
    "start": "791360",
    "end": "798240"
  },
  {
    "text": "then it has an annotation about the class or \nlocks constructor and it has a variable declared.   And then suddenly out of nowhere, that variable \nthat field has a value. How can you understand  ",
    "start": "798240",
    "end": "809440"
  },
  {
    "text": "that if you never worked in Spring and never \nused Lombok? Maybe you never used Lombok,  ",
    "start": "809440",
    "end": "815280"
  },
  {
    "text": "you might easily understand that Lombok adds there \nsomehow magically  a constructor, okay? But then  ",
    "start": "816320",
    "end": "822640"
  },
  {
    "text": "where is that variable still getting that value?\nSo it might happen as a starter with a framework,  ",
    "start": "822640",
    "end": "831280"
  },
  {
    "text": "even as an experienced developer, because you \nmight have years already with Java development,   but you might have used either different \nframeworks where it was more obvious what happens,  ",
    "start": "832240",
    "end": "842880"
  },
  {
    "text": "like say, Google Guice, for example, where you \nhave a specific declaration for the injection.   Or you might not have used the tool for an \napplication framework, you might have simply  ",
    "start": "843600",
    "end": "852720"
  },
  {
    "text": "used Java Standard Edition because there are still \na lot of applications that don't use frameworks.   They are old but they are not changed. They are \njust maintained with the existing technologies.  ",
    "start": "852720",
    "end": "867120"
  },
  {
    "text": "And the idea is to make things as smooth \nas possible for someone who starts  ",
    "start": "868560",
    "end": "875760"
  },
  {
    "text": "now having very little knowledge or not at all \nabout frameworks or Spring. So that was the idea.",
    "start": "875760",
    "end": "885280"
  },
  {
    "start": "885000",
    "end": "1177000"
  },
  {
    "text": "That just brings back so many thoughts and so \nmany memories, because I think about when someone  ",
    "start": "886320",
    "end": "892240"
  },
  {
    "text": "comes new to Spring, and I say Spring specifically \nbecause that's what we're talking about. But,   again, as you mentioned, it's not alone in this \nregard. It's probably the most obvious example,  ",
    "start": "892240",
    "end": "901839"
  },
  {
    "text": "though. My background was hugely Java Enterprise \nEdition, Java EE. And when you come into Spring,  ",
    "start": "901840",
    "end": "913840"
  },
  {
    "text": "it's, I use the term tongue-in-cheek, jarring, \nright? Because you are not used to what’s  ",
    "start": "913840",
    "end": "920080"
  },
  {
    "text": "there. There are so many things that \nare handled for you by the framework.  ",
    "start": "921120",
    "end": "924480"
  },
  {
    "text": "You think you know code, and you do, and \nthen you come into a Spring brownfield  ",
    "start": "926240",
    "end": "932880"
  },
  {
    "text": "application. Someone's created it and \nthey hand it to you and say, \"Okay,   we need you to come up to speed on this.\" You look \naround and go, \"Where is this stuff being created?  ",
    "start": "932880",
    "end": "939120"
  },
  {
    "text": "How did this happen? How do I peek into this \nand debug this? Because I'm just seeing this  ",
    "start": "941360",
    "end": "948480"
  },
  {
    "text": "instance, this object is auto-injected \ninto my stuff. And now, where do I find  ",
    "start": "949520",
    "end": "955760"
  },
  {
    "text": "this? How did this happen?\" And maybe there \nis just a property defined. And it's like,  ",
    "start": "955760",
    "end": "962240"
  },
  {
    "text": "maybe there's no property defined. It's \njust a matter of what's on your classpath.   And once you learn all of that, I think \nyou start to see a huge amount of value. ",
    "start": "962240",
    "end": "970560"
  },
  {
    "text": "I assume you had a similar path or similar \ntrajectory where you came into Spring   where you were used to doing things very \nmethodically, very, I don't wanna say boilerplate,  ",
    "start": "972400",
    "end": "984080"
  },
  {
    "text": "but there was a lot of code to do something \nand then all of a sudden, it just vanished?  Yeah. So similar to your case, I started with Java \nEE a long time ago. I was pretty comfortable with  ",
    "start": "984880",
    "end": "998400"
  },
  {
    "text": "the architectural style of Java EE, where \nyou have this application server, and you  ",
    "start": "999600",
    "end": "1005199"
  },
  {
    "text": "were simply creating some kind of web archives, \nand you were simply deploying those web archives.  ",
    "start": "1005200",
    "end": "1011200"
  },
  {
    "text": "It looked very logical in terms of you knew who is \ncontrolling and what is controlling. So you knew  ",
    "start": "1012240",
    "end": "1018720"
  },
  {
    "text": "that your work contains your classes, \nwhich are the control classes,   and you knew that you have an application \nserver GlassFish, or whatever you had,  ",
    "start": "1019360",
    "end": "1028400"
  },
  {
    "text": "and that was the one controlling. So the \ninversion of control was, in my perspective,  ",
    "start": "1028400",
    "end": "1034560"
  },
  {
    "text": "a lot easier to see when I was using this kind of \narchitectural approach that Java EE at that time  ",
    "start": "1034560",
    "end": "1041360"
  },
  {
    "text": "was using. But when I moved to Spring, suddenly \nit was something inside my application that was  ",
    "start": "1041360",
    "end": "1049600"
  },
  {
    "text": "still controlling my application. So I found that \npretty difficult to grasp at the very beginning. ",
    "start": "1049600",
    "end": "1055919"
  },
  {
    "text": "Right.\nBecause if you have something   in your application like if we were still having \ndependencies for the VAR files, I will say I added  ",
    "start": "1055920",
    "end": "1063840"
  },
  {
    "text": "a dependency for my VAR file. I was expecting \nthat my class and logic in my classes control  ",
    "start": "1063840",
    "end": "1071120"
  },
  {
    "text": "the logic in those libraries, use somehow those \nobjects to implement business cases. When I  ",
    "start": "1071120",
    "end": "1078559"
  },
  {
    "text": "changed to Spring, I didn't see a container \nanymore whether it was still the dependency but  ",
    "start": "1078560",
    "end": "1085520"
  },
  {
    "text": "somehow from inside the dependency it looked like \nit was controlling my classes. So that was one of  ",
    "start": "1085520",
    "end": "1091600"
  },
  {
    "text": "the things that I found difficult to understand \nwhen I started with Spring. And it controls  ",
    "start": "1091600",
    "end": "1099200"
  },
  {
    "text": "the classes in the same way as it was happening \nin the Java EEs, right? So you still have  ",
    "start": "1099840",
    "end": "1104960"
  },
  {
    "text": "your own we call them aspects in Spring, they were \ninterceptors in Java EE. We still have dependency  ",
    "start": "1104960",
    "end": "1111039"
  },
  {
    "text": "injection, we just change some annotations and \nof course, the bean lifecycle is a bit different.  ",
    "start": "1111040",
    "end": "1115760"
  },
  {
    "text": "It means the same thing but it looks a bit \ndifferent. And it created some difficulties  ",
    "start": "1116880",
    "end": "1123840"
  },
  {
    "text": "at the beginning when I started with that.\nSure. Yeah, and I don't mean to minimize   any of the similar constructs or like the managed \nbeans and things like that. And this is I think  ",
    "start": "1123840",
    "end": "1136720"
  },
  {
    "text": "one of the other things that are nice about your \nbook. You use bridge learning. So you take someone  ",
    "start": "1136720",
    "end": "1142480"
  },
  {
    "text": "from where they are and you carry them to where \nthey need to be. But I do think that it was,  ",
    "start": "1142480",
    "end": "1149200"
  },
  {
    "text": "I don't wanna say a paradigm shift, because, \nagain, there are some complementary concepts,   but it was falling off of a learning \ncliff for me because it was kind of  ",
    "start": "1151040",
    "end": "1161440"
  },
  {
    "text": "a huge shift in just the level or maybe the \ncompleteness of the landscape within Spring.  ",
    "start": "1161440",
    "end": "1169440"
  },
  {
    "text": "I'm trying to think of better words to \nsay it and I'm just coming up empty. But proceeding on through the book. In the \nsecond portion, the implementation, you  ",
    "start": "1170880",
    "end": "1182720"
  },
  {
    "start": "1177000",
    "end": "1545000"
  },
  {
    "text": "launch into understanding Spring Boot \nand Spring MVC, which I'm particularly   excited about obviously, implementing \nweb apps to Spring Boot and Spring MVC,  ",
    "start": "1183440",
    "end": "1192800"
  },
  {
    "text": "Spring web scopes, REST services, REST endpoints. \nAnd then we'll get into some of the other things  ",
    "start": "1193600",
    "end": "1199039"
  },
  {
    "text": "here momentarily, but I just want to pause \nfor a moment and chat about Spring Boot,   because Spring Boot, I think, was a huge paradigm \nshift, again, with Spring Framework because it  ",
    "start": "1199040",
    "end": "1210480"
  },
  {
    "text": "focused a lot more on deployment, deployability, \nand how you would deploy applications. ",
    "start": "1210480",
    "end": "1215840"
  },
  {
    "text": "Yes.  Any thoughts on that? Yeah, so Spring Boot changed a lot in my \nperspective. I started with Spring when  ",
    "start": "1215840",
    "end": "1224799"
  },
  {
    "text": "there was no Spring Boot out there. And \nnow, you don't think about Spring without  ",
    "start": "1224800",
    "end": "1233040"
  },
  {
    "text": "thinking about Spring Boot. And the book I wrote, \n\"Spring, Start Here,\" definitely doesn't cover,  ",
    "start": "1233680",
    "end": "1240000"
  },
  {
    "text": "but a very small part of Spring Boot. So my plan \nwasn't covering Spring Boot in the second part,  ",
    "start": "1240560",
    "end": "1246800"
  },
  {
    "text": "it was still Spring, and I still discuss the very \nfundamentals, so you will find discussions about  ",
    "start": "1246800",
    "end": "1251840"
  },
  {
    "text": "beans, web scopes, as you already said. I \nobviously did refer to your book because I  ",
    "start": "1252640",
    "end": "1259920"
  },
  {
    "text": "really enjoyed reading your book, \"Spring Boot up \nand Running.\" So, as a second step, if you started  ",
    "start": "1259920",
    "end": "1269680"
  },
  {
    "text": "with, \"Spring, Start Here,\" then the second one \nto go deeper into Spring Boot would definitely   be \"Spring Boot up and Running,\" by Mark Heckler.\nBut now going back to the question. Spring Boot  ",
    "start": "1269680",
    "end": "1284640"
  },
  {
    "text": "changed my perspective on natural evolution \nin software development because if you take a  ",
    "start": "1284640",
    "end": "1293120"
  },
  {
    "text": "timeline you see Java EE, with application servers \nthey were kind of this monolithic approach, at  ",
    "start": "1293120",
    "end": "1302400"
  },
  {
    "text": "least the way they were at that time. So as \nan architectural style, they were linked to  ",
    "start": "1302400",
    "end": "1312320"
  },
  {
    "text": "the monolithic approach of deploying applications. \nYou had a very large container, and you just put  ",
    "start": "1312320",
    "end": "1318880"
  },
  {
    "text": "your applications in there. That's the GlassFish. \nYou have a glass and you have the fish inside. ",
    "start": "1319520",
    "end": "1326880"
  },
  {
    "text": "But now we find, at least on what concerns \nthe server-side, we are progressing  ",
    "start": "1327520",
    "end": "1334480"
  },
  {
    "text": "to a more sort of service-oriented \napproach throughout time and then   to micro-services and then to serverless but \nthat's another story. The idea is the following.  ",
    "start": "1334480",
    "end": "1344080"
  },
  {
    "text": "The more you progress in architectural styles \npoint of view to service-oriented because we  ",
    "start": "1344880",
    "end": "1350960"
  },
  {
    "text": "have more requests, and we need to deploy \nthem in a different way using Kubernetes and   orchestrators and technologies like \nthis, putting them in containers, though,  ",
    "start": "1350960",
    "end": "1360159"
  },
  {
    "text": "the more you have to recreate again and again \nthe skeleton of a new application. So years ago  ",
    "start": "1360160",
    "end": "1368640"
  },
  {
    "text": "when I was using Java EE, I didn't have to \ncreate so many applications again and again   because I had one. It was a monolithic approach \nand I was just making it once and then years,  ",
    "start": "1374800",
    "end": "1384320"
  },
  {
    "text": "everyone working over the same application.\nMy students and I, at that time, had trouble.  ",
    "start": "1384960",
    "end": "1395360"
  },
  {
    "text": "And that was a real pain when in the \nclass we have to discuss, for example,  ",
    "start": "1395360",
    "end": "1401040"
  },
  {
    "text": "building web applications with Spring because, \nin class, you have to create a lot of projects,  ",
    "start": "1401760",
    "end": "1407040"
  },
  {
    "text": "you have to create a lot of examples. So in order \nto create one example with one endpoint and prove   how it works, a simple REST endpoint or whatever \nyou're building, you have to spend 30 minutes  ",
    "start": "1407040",
    "end": "1417680"
  },
  {
    "text": "just configuring the application. So nobody \nunderstood us at that point because usually,  ",
    "start": "1418240",
    "end": "1424720"
  },
  {
    "text": "in the real world, you didn't \nneed to build applications. ",
    "start": "1424720",
    "end": "1430559"
  },
  {
    "text": "But once this started to happen in the real world, \nbecause now suddenly, you have multiple services,  ",
    "start": "1430560",
    "end": "1435760"
  },
  {
    "text": "so today, you build a microservice, tomorrow \nyou might need to build another one, then it's  ",
    "start": "1435760",
    "end": "1441840"
  },
  {
    "text": "starting to become a pain as well. And this is \nwhere Spring Boot is going to save us because  ",
    "start": "1441840",
    "end": "1448080"
  },
  {
    "text": "we also observed at the same time \nwhile recreating a new project that  ",
    "start": "1450240",
    "end": "1454640"
  },
  {
    "text": "sometimes... Not sometimes actually, very often, \nin most cases, we do configure the same thing. So  ",
    "start": "1455280",
    "end": "1464480"
  },
  {
    "text": "what we did figure out actually is that we have a \nconvention that in most cases, we have 90% or even  ",
    "start": "1464480",
    "end": "1471919"
  },
  {
    "text": "more of the things that we are doing, are usually \nthe same. And this is what's called a convention. ",
    "start": "1471920",
    "end": "1477280"
  },
  {
    "text": "And what Spring Boot introduces is the convention \nof our configuration approach, which means we  ",
    "start": "1477280",
    "end": "1483280"
  },
  {
    "text": "from the framework or project, in this case, \ndecide which is the convention based on the  ",
    "start": "1483920",
    "end": "1490160"
  },
  {
    "text": "community decision. So the community says, \"99% of \nthe cases is Hibernate.\" Okay, Spring Boot, this  ",
    "start": "1490160",
    "end": "1498000"
  },
  {
    "text": "is the convention. We configure an “out of the \nbox Hibernate.” If we see the dependency in your  ",
    "start": "1498000",
    "end": "1503360"
  },
  {
    "text": "com XML in the CLASSPATH. We configure such \na dependency, as a convention. You can still  ",
    "start": "1503360",
    "end": "1511120"
  },
  {
    "text": "change it, you can customize it. Maybe \nHibernate is not your choice. Maybe you   want to use Eclipse League, that's good. But \nsince 99% of the users are with Hibernate,  ",
    "start": "1511840",
    "end": "1522640"
  },
  {
    "text": "why not give them that out of the \nbox without forcing them to write  ",
    "start": "1522640",
    "end": "1528560"
  },
  {
    "text": "I don’t know how many lines of code \nand then to configure that dependency?   And that was just an example with Hibernate. \nBut that's the same going to be with all of the  ",
    "start": "1529600",
    "end": "1540000"
  },
  {
    "text": "technologies out there that \nare part of the convention. And of course, that's one of the biggest things \nthat we see in Spring Boot. But there are a lot  ",
    "start": "1541680",
    "end": "1550080"
  },
  {
    "start": "1545000",
    "end": "2092000"
  },
  {
    "text": "of other advantages out there, which are again, \nlinked to how the software architecture evolved.  ",
    "start": "1550080",
    "end": "1557360"
  },
  {
    "text": "Like, for example, the actuator. Why is an \nactuator needed? Many years ago, there was  ",
    "start": "1557360",
    "end": "1562799"
  },
  {
    "text": "no such thing as an actuator. If something \ndidn't go, well, it was 3am, doesn't matter,  ",
    "start": "1562800",
    "end": "1568640"
  },
  {
    "text": "someone was on call, you called them to restart \nthe application. That's how, well at least at  ",
    "start": "1568640",
    "end": "1575200"
  },
  {
    "text": "that time, in many cases, it was happening. Now \nwe evolved a lot we don't do that anymore. We have  ",
    "start": "1575200",
    "end": "1581919"
  },
  {
    "text": "an endpoint or a different approach in which \nanother software called an orchestrator figures  ",
    "start": "1581920",
    "end": "1588000"
  },
  {
    "text": "out if the application is not working anymore \nand if the problem can be solved with a restart,  ",
    "start": "1588000",
    "end": "1593520"
  },
  {
    "text": "so it automatically destroys and recreates \na container and restarts the application.  It was important at that time to call \nsomeone at 3am to do the restart. But now,  ",
    "start": "1593520",
    "end": "1604720"
  },
  {
    "text": "it's done automatically and they don't have to \nbother someone, or at least not so often as it  ",
    "start": "1604720",
    "end": "1610480"
  },
  {
    "text": "was happening many years ago. And one of the \nadvantages as well, and that will be the last  ",
    "start": "1610480",
    "end": "1619760"
  },
  {
    "text": "one because I already talked too much, is, for \nexample, having all the startups. You know, one of  ",
    "start": "1619760",
    "end": "1625440"
  },
  {
    "text": "the problems we have is dependency compatibility. \nSo we have a lot of libraries that we use.  ",
    "start": "1625440",
    "end": "1633919"
  },
  {
    "text": "And if they are completely independent, one of \nanother then they might become incompatible.  ",
    "start": "1633920",
    "end": "1640080"
  },
  {
    "text": "And when you just increase the version of \na library, because you want something new   that you need to use from that library, and then \nfigure out the other libraries don't work anymore.  ",
    "start": "1640080",
    "end": "1648560"
  },
  {
    "text": "So if you have something that at least gives \nyou some comfort in, you have only to increase  ",
    "start": "1650000",
    "end": "1657040"
  },
  {
    "text": "one number and then automatically it increases \nbehind the scenes, whatever are the numbers needed  ",
    "start": "1657040",
    "end": "1662720"
  },
  {
    "text": "in the versions to make things work, then it's \nof course, more comfortable and easier than  ",
    "start": "1662720",
    "end": "1668960"
  },
  {
    "text": "having to do that yourself. So there are \nso many ways in which Spring Boot changed   the way we work. I think it is basically \none of the best tools we have at the moment.",
    "start": "1668960",
    "end": "1681120"
  },
  {
    "text": "Yeah, and you know, it's interesting because \nso many things that you said kind of point me   and just ring bells in the back of my head because  ",
    "start": "1681120",
    "end": "1687360"
  },
  {
    "text": "it seems like when folks first get exposed \nto Spring and more specifically Spring Boot,  ",
    "start": "1688080",
    "end": "1692880"
  },
  {
    "text": "they either just love it, I mean, just out of \nthe gate, \"This is amazing,\" or they really  ",
    "start": "1694080",
    "end": "1700880"
  },
  {
    "text": "recoil and think, \"Oh, this is, I don't know, I \nmean, this is a lot of magic.\" You know, we talk  ",
    "start": "1700880",
    "end": "1706720"
  },
  {
    "text": "about opinions in the Spring community and how \nit's an opinionated approach and an opinionated   framework. \"Feels a little overwhelming.\" And \nagain, I relate, I completely relate to that.  ",
    "start": "1706720",
    "end": "1717280"
  },
  {
    "text": "To some degree, although I was pretty excited \nforgot about it once I saw the possibilities.  But I think especially if you've been around long \nenough to have gone through the other side of it,  ",
    "start": "1717920",
    "end": "1728480"
  },
  {
    "text": "as many of us are. You know, we don't necessarily \njump right into Spring Boot from university.  ",
    "start": "1729440",
    "end": "1734080"
  },
  {
    "text": "We have a circuitous path to get there. Maybe \nwe've maintained a Java EE, or now Jakarta EE,  ",
    "start": "1734960",
    "end": "1741440"
  },
  {
    "text": "application, although there are still a lot of \nplain and simple Java EE applications out there  ",
    "start": "1742000",
    "end": "1747200"
  },
  {
    "text": "and will be for a long time because of inertia, \nright, and older versions of Spring Framework  ",
    "start": "1747200",
    "end": "1752880"
  },
  {
    "text": "applications from forever ago that are just being \nmaintained, of course, like everything else. But I think it's important to remember for those \nwho might be a little nervous or kind of hesitant  ",
    "start": "1752880",
    "end": "1764560"
  },
  {
    "text": "about the number of opinions, the number of \nopinions, and the number of things that it   does for you, I don't know if you ever worked \nin a corporate or a large organization type  ",
    "start": "1764560",
    "end": "1774400"
  },
  {
    "text": "of environment. I suspect you have because you \nmentioned university, so, I mean, I know you've   done several things that are both really good and \nreally terrible. You know, it's like all of us.  ",
    "start": "1774400",
    "end": "1783840"
  },
  {
    "text": "You know, we have those high points and low. But \nmany times in large organizations, they have some  ",
    "start": "1783840",
    "end": "1789919"
  },
  {
    "text": "kind of a, I don't want to call it a starter or \na wizard, but you have some procedure or process.",
    "start": "1789920",
    "end": "1796800"
  },
  {
    "text": "Sometimes it's very automated, \nsometimes it's not automated at all,   that when you want to create a new Java EE, \nJakarta EE, Spring Framework application,  ",
    "start": "1796800",
    "end": "1805919"
  },
  {
    "text": "I'm thinking back years ago to a company \nthat I worked for, that they would have,  ",
    "start": "1806480",
    "end": "1814240"
  },
  {
    "text": "and actually multiple now that I'm thinking \nabout it. They would have a way to create a   new Java EE application, which meant that certain \ndependencies had to go into every application,  ",
    "start": "1814800",
    "end": "1825440"
  },
  {
    "text": "there was a certain order of steps that you \nhad to do to generate or that's overstating it,  ",
    "start": "1825440",
    "end": "1831600"
  },
  {
    "text": "to create a new project that was blessed, that \nwas approved by the company that would get you the  ",
    "start": "1831600",
    "end": "1839440"
  },
  {
    "text": "things you needed to tie into the network, to tie \ninto the platform that was a deployment platform,  ",
    "start": "1839440",
    "end": "1846399"
  },
  {
    "text": "I guess, for lack of a better way to put it. \nAnd you had to follow these 72 easy steps to  ",
    "start": "1846400",
    "end": "1853760"
  },
  {
    "text": "accomplish this. And Spring Boot took us from \ndoing that, and I think that's where a lot of   corporate developers got really excited, because \ninstead of going through this very tedious,  ",
    "start": "1853760",
    "end": "1863039"
  },
  {
    "text": "long process to accomplish these things and get \nan application that you could build and actually  ",
    "start": "1863040",
    "end": "1869440"
  },
  {
    "text": "deploy, not painlessly, but it would fit into \nthe portfolio of applications your company ran.  ",
    "start": "1869440",
    "end": "1877440"
  },
  {
    "text": "Spring Boot gave you the ability to do that in \njust a few seconds using the Spring Initializr.",
    "start": "1877440",
    "end": "1883279"
  },
  {
    "text": "Yeah.\nAnd it does a lot of the same things,   but it does them so much better, right?\nAnd then probably the most important is that  ",
    "start": "1883280",
    "end": "1890880"
  },
  {
    "text": "when you have a thousand enterprises, they might \nhave, as you said, their own documentation on  ",
    "start": "1890880",
    "end": "1898800"
  },
  {
    "text": "how to do it. But they're still different. So \nthere are still one thousand ways of doing that. ",
    "start": "1898800",
    "end": "1904080"
  },
  {
    "text": "Yes.\nMaybe there are one thousand good ways of   doing that. But if you change you as a developer, \nfrom one enterprise to another which happens,  ",
    "start": "1904080",
    "end": "1912240"
  },
  {
    "text": "then you have to again, relearn how to do that \nin that second enterprise. But now, if you have  ",
    "start": "1913680",
    "end": "1921680"
  },
  {
    "text": "something provided by the community and it's \nunique for all of them, then it automatically  ",
    "start": "1921680",
    "end": "1927360"
  },
  {
    "text": "becomes a lot easier for us to work with.\nYes, and that was another thing, and I'm  ",
    "start": "1927360",
    "end": "1933200"
  },
  {
    "text": "glad you brought that up. Because when I went \nfrom a large, private enterprise to a large  ",
    "start": "1933200",
    "end": "1938320"
  },
  {
    "text": "public organization that I worked with for a \nnumber of years, it was that exact scenario.  ",
    "start": "1938320",
    "end": "1944880"
  },
  {
    "text": "You had a completely different sequence of steps \nto get to where you can start an application.  ",
    "start": "1945440",
    "end": "1952000"
  },
  {
    "text": "And now literally you have the Spring Initializr. \nAnd of course, the Spring Initializr is   customizable. Organizations can tailor that to a \nspecific thing. But so much of that work is done.  ",
    "start": "1952720",
    "end": "1963120"
  },
  {
    "text": "And you mentioned this and explained this so well \nin the book, that you're looking at capabilities,   not in, \"Okay, these are the 17 libraries \nthat I need to add to do what I need to do  ",
    "start": "1966160",
    "end": "1975680"
  },
  {
    "text": "for this application. Well, do I need to do \nthis or do I not? Add it just to be safe.\" ",
    "start": "1975680",
    "end": "1980800"
  },
  {
    "text": "No, with Spring Boot you have a capability. \nDo you want to create a web application?  ",
    "start": "1980800",
    "end": "1986400"
  },
  {
    "text": "Then add this capability, and that capability has \nthese libraries, these components that it uses and  ",
    "start": "1986400",
    "end": "1994480"
  },
  {
    "text": "they're version synchronized. So I don't have to \nworry about, \"Well, let's see. This looks like the  ",
    "start": "1994480",
    "end": "1999600"
  },
  {
    "text": "current version of this library. I'll add that. \nAnd this looks like the current version of that   library and I'll add that. Why isn't it working?\" \nWell, because library C is at version 8, and when  ",
    "start": "1999600",
    "end": "2010160"
  },
  {
    "text": "it was tested in your organization, it was tested \nat version 6.2. So now, what do you do? Do you go  ",
    "start": "2010160",
    "end": "2015520"
  },
  {
    "text": "back to 6.2? Well, no, there are security concerns \nthat were raised. Now, what do I do? How do I make   this work together? And it's terrible. But \nwhen you don't know any different, it's what  ",
    "start": "2015520",
    "end": "2025279"
  },
  {
    "text": "you're used to. So I think that's why some people \nimmediately jump on Spring Boot and some people   are a little nervous about it, because, like, \n\"Can it be covering all this ground really well,  ",
    "start": "2025280",
    "end": "2033919"
  },
  {
    "text": "if it does it like that versus taking, you know, \ntwo weeks to create a new project?\" I don't know. ",
    "start": "2033920",
    "end": "2039040"
  },
  {
    "text": "Anyway, yeah. And that's why when I \nwas reading your book, I felt like  ",
    "start": "2041440",
    "end": "2047519"
  },
  {
    "text": "you and I were sharing a brain because I \nfeel like there are a lot of things here that   are common experiences. And I think that's not \nspecific to us. I think so many in the community  ",
    "start": "2048960",
    "end": "2059120"
  },
  {
    "text": "have gone through these same things, or if \nthey haven't experienced them personally,  ",
    "start": "2059120",
    "end": "2064879"
  },
  {
    "text": "they've seen them at close enough distance. \nEven if you haven't been in an auto accident,  ",
    "start": "2064880",
    "end": "2070639"
  },
  {
    "text": "you've probably driven by one and thought, \n\"Wow, that looks horrible.\" Well, you know,   that's the same thing when you're dealing \nwith certain software development constructs,  ",
    "start": "2070640",
    "end": "2079600"
  },
  {
    "text": "you may not necessarily have suffered through \nthem yourself, but you've seen them close   enough to know that they're a problem and you \ndon't want anything to do with them, right?",
    "start": "2079600",
    "end": "2085760"
  },
  {
    "text": "So you covered data sources, and I \nlike that you start with the JDBC  ",
    "start": "2089520",
    "end": "2096159"
  },
  {
    "start": "2092000",
    "end": "2677000"
  },
  {
    "text": "template and go from templates to \nrepositories. I think that's just   brilliant and that's something that I strongly \nencourage people to do for understanding.  ",
    "start": "2096160",
    "end": "2104240"
  },
  {
    "text": "And data persistence, transactions, testing. \nI wanna come back to testing. I don't want   to jump into that just yet. But the data side \nof things. Let's talk about that a little bit.  ",
    "start": "2109200",
    "end": "2120880"
  },
  {
    "text": "How did you decide to include that? How did \nyou decide how you wanted to approach that?  So first of all about the data source, we don't \nhave an application without having a way to  ",
    "start": "2122960",
    "end": "2136000"
  },
  {
    "text": "persist with the data, or, in most cases, we don't \nhave. So as a developer, you most likely can avoid  ",
    "start": "2136000",
    "end": "2143520"
  },
  {
    "text": "having to work with a database. And the subject \nis very complex so it's no way you can treat it  ",
    "start": "2143520",
    "end": "2150720"
  },
  {
    "text": "in one chapter of a book, it's even no way you \ncan fit it in one book, it's maybe a shelf. But  ",
    "start": "2150720",
    "end": "2156480"
  },
  {
    "text": "because you have relational databases, and then \nall the kinds of no SQL technologies, Cassandra,  ",
    "start": "2157040",
    "end": "2162560"
  },
  {
    "text": "Mongo, Redis, and so on, and so forth. So what I \ndid is, still thinking about the target audience  ",
    "start": "2163280",
    "end": "2171360"
  },
  {
    "text": "of the book, I started with beginners, people \nwho might not have used Spring at all, people who  ",
    "start": "2171360",
    "end": "2181280"
  },
  {
    "text": "might even not have used an application framework \nat all. So then I decided to go with the very  ",
    "start": "2181280",
    "end": "2187520"
  },
  {
    "text": "basic stuff also from the data source point \nof view, which is relational databases. ",
    "start": "2188800",
    "end": "2195200"
  },
  {
    "text": "And now there are two things in my perspective \nthat someone now needs to be aware of when  ",
    "start": "2196080",
    "end": "2202960"
  },
  {
    "text": "starting with Spring, first of all, is directly \nusing the template over the standard of JDBC  ",
    "start": "2202960",
    "end": "2210800"
  },
  {
    "text": "which if someone might have even worked in an \napplication that doesn't use a framework at all,  ",
    "start": "2212240",
    "end": "2218880"
  },
  {
    "text": "they might have been unlucky enough to use \nthose prepared statement results have stopped,  ",
    "start": "2218880",
    "end": "2224000"
  },
  {
    "text": "in which, in order to write a very short SELECT \nquery, you have to write 20 lines of code,  ",
    "start": "2225280",
    "end": "2232000"
  },
  {
    "text": "and in which you have to, of course, treat \nsequel exception with an empty cache.   And is not that it should be that of course, \nthat is what usually happens in any kind of  ",
    "start": "2232000",
    "end": "2245040"
  },
  {
    "text": "such applications. So JDBC template, first of all, \none of the things I really liked many years ago,  ",
    "start": "2245040",
    "end": "2252560"
  },
  {
    "text": "and I started working with it is that it minimizes \nthe amount of code you need. So you simply need to  ",
    "start": "2252560",
    "end": "2258720"
  },
  {
    "text": "only go with a mapper and the query. So it seems \nin parameters, so everything that's really needed,  ",
    "start": "2258720",
    "end": "2264560"
  },
  {
    "text": "you need to give them otherwise everything else \nis behind the scenes. Secondly, it changes the  ",
    "start": "2264560",
    "end": "2270480"
  },
  {
    "text": "checked exceptions into runtime exceptions. So \nit's a little bit easier to avoid the need of  ",
    "start": "2270480",
    "end": "2275600"
  },
  {
    "text": "creating an exception unless you \nreally want to do that because the   compiler doesn't force you anymore, to do that.\nSo that's where I started and I thought, first  ",
    "start": "2275600",
    "end": "2285120"
  },
  {
    "text": "of all, as a beginner, you need to understand \nwhat the data source is. And that's because, in  ",
    "start": "2285120",
    "end": "2291360"
  },
  {
    "text": "any real-world application, you don't use driver \nmanager to get the connection anymore and create   your own connection, you need to have that kind of \nan object managing your connections, which again,  ",
    "start": "2291360",
    "end": "2301120"
  },
  {
    "text": "going to data convention today in, if we use \nSpring Boot, it will be Hikari out of the box.  ",
    "start": "2301120",
    "end": "2306640"
  },
  {
    "text": "Then after you understand what the data source \nis, just go a step further and understand it's  ",
    "start": "2309360",
    "end": "2314800"
  },
  {
    "text": "templating over the JDBC that's provided by \nthe JDK, but you don't want to use that because  ",
    "start": "2314800",
    "end": "2320240"
  },
  {
    "text": "you want to have a simplistic approach and an \neasier to read and a more maintainable approach,  ",
    "start": "2320240",
    "end": "2327040"
  },
  {
    "text": "which is what Spring offers.\nAnd then the next thing,   the next step is to understand Spring Data. \nAnd Spring Data is this project, which is  ",
    "start": "2327040",
    "end": "2336000"
  },
  {
    "text": "a part of the Spring core system. And we use \nit very often today, which abstracts a lot  ",
    "start": "2336960",
    "end": "2343760"
  },
  {
    "text": "the persistence layer, it's an excellent way \nto implement the persistence layer because you  ",
    "start": "2343760",
    "end": "2351040"
  },
  {
    "text": "have to literally only write the query when \nyou need it. Sometimes you don't even need to   write the query but that's another story. \nThe idea and the difficulty I had here is  ",
    "start": "2352560",
    "end": "2361200"
  },
  {
    "text": "what do I use to prove how Spring Data works? And \nin 90% of the cases, people would have advised  ",
    "start": "2362000",
    "end": "2371040"
  },
  {
    "text": "them to use a Spring Data JPA. Spring Data is not \nonly one Spring Data, you have Spring Data JPA if  ",
    "start": "2371040",
    "end": "2377440"
  },
  {
    "text": "you really want to use the JPA implementation, it \nhas to be Data JDBC and then you have the reactive  ",
    "start": "2377440",
    "end": "2382960"
  },
  {
    "text": "Spring Data and then you have all the Spring \ndata for the families of multiple technologies. ",
    "start": "2382960",
    "end": "2389040"
  },
  {
    "text": "And I said no, I actually didn't take advice and I \nwent to Spring Data JDBC. And the reason why I did  ",
    "start": "2390560",
    "end": "2401280"
  },
  {
    "text": "that is that I realized, if I introduced Spring \nData JPA then I either have to at least teach the  ",
    "start": "2401280",
    "end": "2407760"
  },
  {
    "text": "reader a minimum of what JPA is and use the JPA \nimplementations such as Hibernate, for example,  ",
    "start": "2407760",
    "end": "2415760"
  },
  {
    "text": "or assume that they already know that which   if you think in terms of the subject of the \nbook, we wanted to focus on Spring, not any other  ",
    "start": "2416880",
    "end": "2428320"
  },
  {
    "text": "technology, I decided to use Spring Data JDBC, \njust to avoid introducing another framework that  ",
    "start": "2428320",
    "end": "2434800"
  },
  {
    "text": "might or might have not been already known by \nthe reader. Still, Spring Data is the same so the  ",
    "start": "2434800",
    "end": "2442960"
  },
  {
    "text": "hierarchy of interfaces that it posts to \ninterfaces is the same once you learn how  ",
    "start": "2445600",
    "end": "2451760"
  },
  {
    "text": "to use one of the Spring data, either \nit's JDBC, JPA, Mongo or Cassandra,  ",
    "start": "2451760",
    "end": "2458160"
  },
  {
    "text": "or another one from the NoSQL family, you \nstill understand and you will be able to adapt  ",
    "start": "2458160",
    "end": "2463839"
  },
  {
    "text": "your knowledge to use any of the others. So I \nchose Spring Data JDBC, just to eliminate one of  ",
    "start": "2463840",
    "end": "2470880"
  },
  {
    "text": "the requirements out of my book, considering it's \na book for at least beginners with frameworks.  ",
    "start": "2470880",
    "end": "2476880"
  },
  {
    "text": "That was a good point.\nI think in   you mentioning this, again, this is one of \nthe great things about a great conversation,  ",
    "start": "2478560",
    "end": "2485760"
  },
  {
    "text": "it reminds me a lot of the ceremony. Data \nis a great example of the amount of ceremony  ",
    "start": "2486400",
    "end": "2493839"
  },
  {
    "text": "that Spring Boot, and Spring Data in this specific \ninstance, gets rid of because there's no reason to  ",
    "start": "2494400",
    "end": "2500960"
  },
  {
    "text": "open and close connections, there's no reason \nto deal with driver manager because literally   every time you deal with a database, you do the \nsame sequence of steps in a Java EE, I'm thinking  ",
    "start": "2500960",
    "end": "2511120"
  },
  {
    "text": "back to the old days, or Jakarta EE application. \nYou have to get this connection. You have to deal  ",
    "start": "2511120",
    "end": "2516240"
  },
  {
    "text": "with certain things. You close out the connection. \nYou have to make sure that everything is clean.   But every time you deal with a data store, \nyou're doing that. So why wouldn't you want  ",
    "start": "2516240",
    "end": "2526720"
  },
  {
    "text": "certain opinions to be incorporated into your \napplication by the framework that handles that  ",
    "start": "2526720",
    "end": "2532080"
  },
  {
    "text": "for you? If you know that literally 100% of \nthe time, you're going to follow the same  ",
    "start": "2532080",
    "end": "2537280"
  },
  {
    "text": "few steps, bracketing what you actually want \nto accomplish, why wouldn't you want that to be  ",
    "start": "2537920",
    "end": "2543520"
  },
  {
    "text": "handled for you? There's literally zero variation \nin many of those cases. And in the very few  ",
    "start": "2543520",
    "end": "2550080"
  },
  {
    "text": "exceptions, expose a property or create \na bean and do things but it's so minimal. ",
    "start": "2550080",
    "end": "2555760"
  },
  {
    "text": "You get to that point and you start realizing, \nwow, that was one of the eye-opening things.  ",
    "start": "2557840",
    "end": "2563280"
  },
  {
    "text": "I talk about sometimes that we get numbed when \nwe go through a lot of ceremony and boilerplate  ",
    "start": "2565200",
    "end": "2571440"
  },
  {
    "text": "to do something the first time, it feels, \"That's \noverwhelming. That's a lot of stuff I'm having to   do just to issue this one update query when you're \nretrieving values.\"  But I go through all this  ",
    "start": "2571440",
    "end": "2585119"
  },
  {
    "text": "stuff to issue one statement. That's just crazy, \nand then to deal with what comes back, of course.  ",
    "start": "2585120",
    "end": "2590480"
  },
  {
    "text": "So the first time, it feels like \na lot of work. The second time,   it feels like a lot of work. But by the time \nyou do it, 10 or 20 or 50 times, it just seems  ",
    "start": "2591440",
    "end": "2600960"
  },
  {
    "text": "like the normal thing you have to do, right? \nThis is what we have to do. It's no big deal. But when you see that there's a way to \ncompletely strike all of that and you talk  ",
    "start": "2600960",
    "end": "2611040"
  },
  {
    "text": "about the conventions. In the book, you mentioned \nthe conventions of the method naming. And I don't   want to spoil the surprise. No spoilers for \nfolks who haven't read the book yet. But you  ",
    "start": "2611040",
    "end": "2620240"
  },
  {
    "text": "talk about different ways you can craft queries, \nor have the framework provide those queries based  ",
    "start": "2620240",
    "end": "2625280"
  },
  {
    "text": "on a convention, once again, convention over \nconfiguration, and it's breathtakingly simple  ",
    "start": "2625280",
    "end": "2630800"
  },
  {
    "text": "and deceptively powerful as well. And you start \nthinking, \"Why isn't everyone doing this?\" Yes. ",
    "start": "2633200",
    "end": "2638839"
  },
  {
    "text": "It also avoids tempting the developer \nto copy-paste a lot of lines of code.  Yes.\nOne of the things that was happening  ",
    "start": "2640080",
    "end": "2647600"
  },
  {
    "text": "when you were using the old fashioned JDBC way, or \nanyway, at least one of the ways where you write  ",
    "start": "2647600",
    "end": "2654400"
  },
  {
    "text": "multiple lines of code, what I've seen is that the \ndevelopers were tempted to just copy-paste them.  ",
    "start": "2654400",
    "end": "2662240"
  },
  {
    "text": "And when you copy-paste code, then, of course, \nwe already know that's not something you'd like,   usually to do, because you copy-paste faults as \nwell and yeah, we don't duplicate lines of code. ",
    "start": "2662240",
    "end": "2672000"
  },
  {
    "text": "Yeah, there's a lot of baggage \nthat comes along with that.   I don't feel like we would be doing this \nconversation justice if we didn't talk about  ",
    "start": "2672000",
    "end": "2682560"
  },
  {
    "start": "2677000",
    "end": "3098000"
  },
  {
    "text": "testing. And you cover testing in a chapter of \nyour book. Testing is one of those things like   you mentioned on data and several other topics, \nyou literally could, and people have and will,  ",
    "start": "2683920",
    "end": "2693760"
  },
  {
    "text": "write entire volumes about, and very valuable \nvolumes. But you have to address it in a way,  ",
    "start": "2693760",
    "end": "2699920"
  },
  {
    "text": "again, keeping the focus on, you know, \"Spring, \nStart Here,\" the person who is new to Spring. How  ",
    "start": "2699920",
    "end": "2705599"
  },
  {
    "text": "do you incorporate testing? How does it make sense \nto dip your toe into that water and to immediately  ",
    "start": "2705600",
    "end": "2711600"
  },
  {
    "text": "get value out of testing your Spring application? \nI mean, I don't have a specific question, but I'm  ",
    "start": "2711600",
    "end": "2720200"
  },
  {
    "text": "just curious what your thoughts were on testing. \nI notice you put it in the last chapter. This was  ",
    "start": "2722880",
    "end": "2728400"
  },
  {
    "text": "something I struggled with too because you want \nto cover it upfront. But if you cover it upfront,  ",
    "start": "2728400",
    "end": "2732559"
  },
  {
    "text": "do you feel like if you'd put it upfront it would \nhave kind of muddied certain concepts that you   wanted to highlight? I'm curious why at the end?\nYes. So that's a very good question that some  ",
    "start": "2735600",
    "end": "2745599"
  },
  {
    "text": "people already asked me. First of all, I didn't \nwant to end the book until I have something about  ",
    "start": "2745600",
    "end": "2756720"
  },
  {
    "text": "this thing there. So that's definitely something \nthat should exist, whether it's the first chapter   or the last chapter. In my perspective, \nI believe the reason I chose to put it in  ",
    "start": "2756720",
    "end": "2770319"
  },
  {
    "text": "one chapter, by itself, is because there are \nusually two ways of writing technical books.  ",
    "start": "2770320",
    "end": "2777520"
  },
  {
    "text": "Some authors, just accompany the code with unit \ntests in every chapter. So write the example,  ",
    "start": "2778560",
    "end": "2786160"
  },
  {
    "text": "provide the test for that example. And the second \napproach is where you just take the tests, and  ",
    "start": "2786160",
    "end": "2793200"
  },
  {
    "text": "you put them in one chapter, and all the others, \nthey don't have anything related to unit tests. ",
    "start": "2793200",
    "end": "2798720"
  },
  {
    "text": "So I chose the second one and when I chose the \nsecond approach, I was still thinking about  ",
    "start": "2798720",
    "end": "2804640"
  },
  {
    "text": "this student that is my target. First of all, \nI just considered at the very beginning, that  ",
    "start": "2804640",
    "end": "2819760"
  },
  {
    "text": "they don't know anything about this thing at all. \nIn my mind, I have this student, they don't know  ",
    "start": "2819760",
    "end": "2828800"
  },
  {
    "text": "anything, they don't even know what a unit test \nis. So if I give an example of a unit test, in  ",
    "start": "2828800",
    "end": "2836480"
  },
  {
    "text": "this first chapter, or the second chapter \nafter mentioning about for example,  ",
    "start": "2836480",
    "end": "2840720"
  },
  {
    "text": "how to create a bean, then creating a bean \nis already something they have to learn. If  ",
    "start": "2842800",
    "end": "2848800"
  },
  {
    "text": "you put them in a second subject, then it might \nbe overwhelming for them. I was afraid to make  ",
    "start": "2848800",
    "end": "2856080"
  },
  {
    "text": "the book for the target audience overwhelming. So \nI thought about what I did. I added the sidebar,  ",
    "start": "2856080",
    "end": "2861440"
  },
  {
    "text": "some summary in the first or the second chapter \nand I said, I created unit tests for you and the  ",
    "start": "2862880",
    "end": "2868960"
  },
  {
    "text": "book comes with 70 plus projects that I've studied \nthroughout the book. If you already know what  ",
    "start": "2868960",
    "end": "2875520"
  },
  {
    "text": "the unit test is, you might already know what \nthe unit or integration test is, then you will  ",
    "start": "2875520",
    "end": "2880960"
  },
  {
    "text": "find a unit tests with the project. So you can \njust stop now take a look at them and run them  ",
    "start": "2880960",
    "end": "2886400"
  },
  {
    "text": "because you already know what the unit the test \nis. But for all the others just read the subject  ",
    "start": "2886400",
    "end": "2892880"
  },
  {
    "text": "and then at some point, at the end of the \nbook, we will discuss testing and how to test   implementations and why the tests that we will \nfind in the projects look the way they look like.  ",
    "start": "2892880",
    "end": "2903760"
  },
  {
    "text": "So that's why I took this decision. \nIt was a difficult decision because I  ",
    "start": "2904480",
    "end": "2910480"
  },
  {
    "text": "don't think one approach is better than \nanother. I just went the way I felt. ",
    "start": "2910480",
    "end": "2916640"
  },
  {
    "text": "Yeah, and I didn't mean to put you on the \nspot because I struggled with that too,   but I do think it's important to remember what \nthe overwhelming focus of the book is, which is  ",
    "start": "2916640",
    "end": "2925360"
  },
  {
    "text": "Spring concepts. And your first whole section \nwas fundamentals. If it were a testing book,  ",
    "start": "2926800",
    "end": "2933760"
  },
  {
    "text": "you know, \"How to Do Spring Development Using \nTest-Driven Development,\" then that would   probably be front and center. You'd have \nthat with the first chapter and you'd use  ",
    "start": "2934400",
    "end": "2945119"
  },
  {
    "text": "that throughout the entire book. But I really do \nappreciate that you incorporated it without having  ",
    "start": "2945120",
    "end": "2951520"
  },
  {
    "text": "maybe overwhelmed the reader who's starting. You \nwere very aware of your target audience, which is   someone who's coming into Spring as someone new \nto Spring. It's a critical concept, but it's not  ",
    "start": "2953040",
    "end": "2965440"
  },
  {
    "text": "something you want to get in the way of explaining \nperhaps what dependency injection is, right? ",
    "start": "2965440",
    "end": "2971280"
  },
  {
    "text": "Yes, yes.\nCompletely agree.  And even the content of the last chapter was \nparticularly difficult to choose because as you  ",
    "start": "2971280",
    "end": "2978960"
  },
  {
    "text": "said some minutes ago, this thing is something \nthat, again, can be part of more than one book,  ",
    "start": "2978960",
    "end": "2986640"
  },
  {
    "text": "we have so many kinds of testing now, so many \nframeworks. You can do stopping testing, you can  ",
    "start": "2986640",
    "end": "2992559"
  },
  {
    "text": "do just integration testing, you can integrate \nwithout the database, you can do integration  ",
    "start": "2992560",
    "end": "2998480"
  },
  {
    "text": "tests with the database. I don't even know if \nI know all the options you have for testing.  ",
    "start": "2998480",
    "end": "3005520"
  },
  {
    "text": "I'm pretty sure I don't know all of them. So \nhow do you choose? I simply chose unit tests  ",
    "start": "3007280",
    "end": "3014800"
  },
  {
    "text": "versus Spring integration tests. And in the very \nbeginning, I wanted to have a third approach.  ",
    "start": "3014800",
    "end": "3020000"
  },
  {
    "text": "Being the fact that many examples of the book were \nabout web applications, I wanted to discuss also,  ",
    "start": "3021280",
    "end": "3027200"
  },
  {
    "text": "using mock MVC, and this in the contract. \nUnfortunately, I didn't have enough space  ",
    "start": "3027760",
    "end": "3033040"
  },
  {
    "text": "to integrate that subject also. But \nI tried at least to make a minimum  ",
    "start": "3033040",
    "end": "3040320"
  },
  {
    "text": "of explanation of what the test is, why is it \nnecessary? And people understand at least the  ",
    "start": "3040320",
    "end": "3047520"
  },
  {
    "text": "steps. You prepare the scenario, you call the \nmethod, and then you validate the assumptions.  ",
    "start": "3047520",
    "end": "3053840"
  },
  {
    "text": "And that was the plan of the last \nchapter, the one related to this. ",
    "start": "3054400",
    "end": "3060319"
  },
  {
    "text": "Yeah, and I think you did a great job with that. \nI also do appreciate that you mentioned you do   call-outs. So here's a book that you might want \nto check out. I know you probably didn't intend  ",
    "start": "3060320",
    "end": "3071119"
  },
  {
    "text": "for me to mention this, but your \"Spring Security\" \nbook is also out there, and I think that that's a  ",
    "start": "3072160",
    "end": "3078240"
  },
  {
    "text": "very valuable reference as well for folks to check \nout if they're looking to secure their Spring  ",
    "start": "3078240",
    "end": "3087200"
  },
  {
    "text": "applications. But that's something that you should \ntake note of because Laurentiu has also created  ",
    "start": "3087200",
    "end": "3093920"
  },
  {
    "text": "and written a superb volume about that as well. \nWe could probably go on forever. We will later.  ",
    "start": "3093920",
    "end": "3104559"
  },
  {
    "start": "3098000",
    "end": "3212000"
  },
  {
    "text": "But for this discussion, I do \nwant to point out to folks that   this is the book \"Spring Start Here\" by Laurentiu \nSpilca. Check it out. I just find it invaluable. ",
    "start": "3106240",
    "end": "3120720"
  },
  {
    "text": "And I think no matter where you are on your \nSpring journey, or development journey, or  ",
    "start": "3120720",
    "end": "3126320"
  },
  {
    "text": "career journey, I think this is a field that you \ncan never know everything about, and that's a good  ",
    "start": "3126320",
    "end": "3133040"
  },
  {
    "text": "thing. Because that gives us plenty of material, \nnew material and material presented in different  ",
    "start": "3133040",
    "end": "3139040"
  },
  {
    "text": "ways that we can make ourselves better. And I just \nthoroughly enjoyed this book. I hope folks will  ",
    "start": "3139040",
    "end": "3144800"
  },
  {
    "text": "check it out and enjoy it as well. But, Laurentiu, \nI will let you get back to your evening there and  ",
    "start": "3144800",
    "end": "3152000"
  },
  {
    "text": "we'll carry on in a different conversation. Thanks \nfor joining me. And thanks to the folks at GOTO  ",
    "start": "3152960",
    "end": "3159920"
  },
  {
    "text": "for providing this opportunity to chat in a little \nmore structured format than we might otherwise. ",
    "start": "3159920",
    "end": "3165920"
  },
  {
    "text": "Thank you very much, Mark Heckler. Thank you for \nhaving the opportunity of this discussion. And   guys, thank you again for reading our conversation \nhope you have an excellent time and a great time  ",
    "start": "3165920",
    "end": "3176640"
  },
  {
    "text": "for study for the year. Cheers.\nAlways a pleasure. Go, Spring!",
    "start": "3176640",
    "end": "3179039"
  }
]