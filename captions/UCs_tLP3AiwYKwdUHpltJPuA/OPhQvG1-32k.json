[
  {
    "text": "okay so welcome to the reactive Deep dive track what we want to do is spend the first session here where we're going",
    "start": "2440",
    "end": "8280"
  },
  {
    "text": "to present all four of us around different parts of what it means to build reactive applications and after",
    "start": "8280",
    "end": "15400"
  },
  {
    "text": "that you sort of think about questions that you want to ask interrupt us along the way that's also cool but we'll have",
    "start": "15400",
    "end": "20920"
  },
  {
    "text": "a second session where we'll go in we'll have a panel Q&A and we'll take questions from the audience as well as",
    "start": "20920",
    "end": "26320"
  },
  {
    "text": "we'll probably bicker and argue among ourselves for the fun of doing that the point of this is we want to talk",
    "start": "26320",
    "end": "32160"
  },
  {
    "text": "about what it means to build a reactive application so I want to start off with kind of why not why are we talking about",
    "start": "32160",
    "end": "39040"
  },
  {
    "text": "reactive applications right now and there's a couple of interesting things that that comes from we're now in an era",
    "start": "39040",
    "end": "46039"
  },
  {
    "text": "whereby we're building applications that are part of a channel and that channel",
    "start": "46039",
    "end": "51280"
  },
  {
    "text": "is the primary means by which people are doing business it's the primary means by which we get to Market there's you think",
    "start": "51280",
    "end": "57640"
  },
  {
    "text": "of many customers are connecting into services that like years ago they go to a shop or they deal with something in 9",
    "start": "57640",
    "end": "64799"
  },
  {
    "text": "to5 that is not the case anymore we tend to be having applications that are up three 365 days the year right around the",
    "start": "64799",
    "end": "72439"
  },
  {
    "text": "clock through holiday times and it can be at all sorts of extremes from it's",
    "start": "72439",
    "end": "77560"
  },
  {
    "text": "just shopping through the social networks to games to finance to Health Care these things are starting to change",
    "start": "77560",
    "end": "84079"
  },
  {
    "text": "so this era that we're now coming into is where the web channel is quite often the primary Channel by which people",
    "start": "84079",
    "end": "89920"
  },
  {
    "text": "people are doing business that means things are very different we don't like to come along to a website and it says",
    "start": "89920",
    "end": "95840"
  },
  {
    "text": "sorry we're down for maintenance or it's down all weekend as people are doing stuff we need to be up and available all",
    "start": "95840",
    "end": "102000"
  },
  {
    "text": "of the time we've also seen a change in Hardware particularly over the last 5 to",
    "start": "102000",
    "end": "108759"
  },
  {
    "text": "10 years the world of whereby we were ring software for a lot of uni processor",
    "start": "108759",
    "end": "114000"
  },
  {
    "text": "systems whereby every year to 18 months these things were doubling in speed",
    "start": "114000",
    "end": "119119"
  },
  {
    "text": "that's over we're now finding that CPUs are getting faster but at a very different rate from",
    "start": "119119",
    "end": "124920"
  },
  {
    "text": "before but more interestingly they're getting much more cores on them much more interesting things on the silicon",
    "start": "124920",
    "end": "131400"
  },
  {
    "text": "and this is an example of the latest Haswell EP Server chips this was just out a few weeks ago and we're looking at",
    "start": "131400",
    "end": "138280"
  },
  {
    "text": "18 cores on a single socket that's going to keep continuing within another few",
    "start": "138280",
    "end": "144120"
  },
  {
    "text": "years we're going to be getting 50 100 cores plus per socket from normal mainstream processor so that is",
    "start": "144120",
    "end": "151280"
  },
  {
    "text": "fundamentally changing how we're programming we need to take account of that we also have this world whereby",
    "start": "151280",
    "end": "157920"
  },
  {
    "text": "we're now deploying Services into the cloud that can be for simple things to begin with I've seen people do it for",
    "start": "157920",
    "end": "164040"
  },
  {
    "text": "like things like continuous integration but primarily now it's becoming a meanw of people doing business and we need to",
    "start": "164040",
    "end": "170159"
  },
  {
    "text": "do that efficiently so at times when we're busy we want to procure more servers at times we're not so busy let's",
    "start": "170159",
    "end": "176200"
  },
  {
    "text": "have left servers so we don't have those sort of builds it should be like like our electricity at home we should get",
    "start": "176200",
    "end": "181840"
  },
  {
    "text": "build for what we need but our software needs to cope with that and how it works",
    "start": "181840",
    "end": "187159"
  },
  {
    "text": "another thing that's really driving this is how our it infrastructure is working it used to be that you go to your it",
    "start": "187159",
    "end": "193360"
  },
  {
    "text": "systems people you ask for a new server and you maybe got one in four to six months this was really very poor service",
    "start": "193360",
    "end": "199480"
  },
  {
    "text": "insy organizations it is still happening today but we need to get over that and",
    "start": "199480",
    "end": "204560"
  },
  {
    "text": "that's why things like the cloud is becoming successful so people say well we got private Cloud well unless your",
    "start": "204560",
    "end": "209959"
  },
  {
    "text": "private cloud has an API where you can provision the server straight away you don't really have a private Cloud all",
    "start": "209959",
    "end": "215920"
  },
  {
    "text": "you've got is some internal infrastructure and people are adding things to their CV and how they're",
    "start": "215920",
    "end": "220959"
  },
  {
    "text": "working we also have lots of interesting technologies that are out there like many people are building things in J",
    "start": "220959",
    "end": "228120"
  },
  {
    "text": "reals node whatever it happens to be there's a major problem with a lot of these is they are just not good enough",
    "start": "228120",
    "end": "234959"
  },
  {
    "text": "for these applications that need to be running 24/7 they need to be able to tolerate node fa they need to support",
    "start": "234959",
    "end": "240680"
  },
  {
    "text": "hot up grid they need to be very responsive this is a different world we're entering and what we're starting",
    "start": "240680",
    "end": "247079"
  },
  {
    "text": "to see over and over again is a lot of these patterns are being discovered or",
    "start": "247079",
    "end": "252400"
  },
  {
    "text": "rediscovered some of the approaches we're going to talk about today are not new we don't claim to have any invention",
    "start": "252400",
    "end": "258639"
  },
  {
    "text": "here a lot of this stuff has been done for a large number of years so in the Telecom space people have been building",
    "start": "258639",
    "end": "265080"
  },
  {
    "text": "systems that would be reactive systems for decades they had to because of the uptime requirements they have to honor",
    "start": "265080",
    "end": "272120"
  },
  {
    "text": "those sort of requirements are going elsewhere I've been seeing this in gaming and finance and also of other",
    "start": "272120",
    "end": "277960"
  },
  {
    "text": "domains whereby these things have to be up all the time they have to be very fast they have to be very scalable as a",
    "start": "277960",
    "end": "283800"
  },
  {
    "text": "result they're all having similar patterns these architectures are all having similar patterns and how they're",
    "start": "283800",
    "end": "290039"
  },
  {
    "text": "designed and how they work so we got all these people sort of discovering this thing at the same time and what we want",
    "start": "290039",
    "end": "296600"
  },
  {
    "text": "to do is to still D what are some of the qualities of these systems we're seeing",
    "start": "296600",
    "end": "301680"
  },
  {
    "text": "and they're primarily very responsive they're not slow and clunky like some of",
    "start": "301680",
    "end": "306720"
  },
  {
    "text": "the applications we have been seeing they're incredibly resilient they can have nodes die all of the time and they",
    "start": "306720",
    "end": "313440"
  },
  {
    "text": "still keep offering a service in fact if you look at a very large scale offering from most people like take Netflix or",
    "start": "313440",
    "end": "319400"
  },
  {
    "text": "Google or Amazon or any of these people their systems are constantly in a state of being broken somewhere on their",
    "start": "319400",
    "end": "325120"
  },
  {
    "text": "Network there is more than one node that is currently broken they keep working they keep keep servicing user requests",
    "start": "325120",
    "end": "331280"
  },
  {
    "text": "they don't give up whenever some part of their system is down they keep working",
    "start": "331280",
    "end": "336400"
  },
  {
    "text": "they also are elastic and how they deal with it so we're not just talking about the ability to scale up also we're",
    "start": "336400",
    "end": "342120"
  },
  {
    "text": "scaling down a lot I've had clients whereby during a normal week you could",
    "start": "342120",
    "end": "347280"
  },
  {
    "text": "have run their service on a couple of laptops you reach the weekend they needed tens or hundreds of servers on",
    "start": "347280",
    "end": "354440"
  },
  {
    "text": "bank holiday weekends and some holiday weekends they're looking at thousands of servers for how they work you you need",
    "start": "354440",
    "end": "359919"
  },
  {
    "text": "to be able to scale up and scale down like that you cannot be running with thousands of servers all of the time when they're not being utilized these",
    "start": "359919",
    "end": "366720"
  },
  {
    "text": "are quite common patterns that we're seeing work but fundamentally under all of this like it's easy to make the",
    "start": "366720",
    "end": "372800"
  },
  {
    "text": "argument I want to have a system that's resilient I want a system that's responsive I want a system that's elastic well you know what it's not easy",
    "start": "372800",
    "end": "379800"
  },
  {
    "text": "to do that unless they're message driven and this is where we're actually fundamentally having to change we're",
    "start": "379800",
    "end": "385360"
  },
  {
    "text": "going to go through a lot of the properties of what it means to build a message driven system that gives you a lot of these",
    "start": "385360",
    "end": "391240"
  },
  {
    "text": "qualities so what's in Anum why reactive and why we're looking at n well you at",
    "start": "391240",
    "end": "397160"
  },
  {
    "text": "the one way it's the response to the current problem the fact that these sorts of systems are now becoming common",
    "start": "397160",
    "end": "403759"
  },
  {
    "text": "it's not just something that's done in odd parts of Finance or odd parts of healthcare odd parts of Telecom it's",
    "start": "403759",
    "end": "410680"
  },
  {
    "text": "exploding out of there it's becoming very much mainstream and how we're dealing with it but we also believe in",
    "start": "410680",
    "end": "416960"
  },
  {
    "text": "that we react to this in the same way that gel racks this stuff don't go for the inventing stuff before it's actually",
    "start": "416960",
    "end": "423160"
  },
  {
    "text": "needed this is kind of why this is appearing and why you do the minimal thing to get this right A lot of these systems are incredibly simple when done",
    "start": "423160",
    "end": "430560"
  },
  {
    "text": "well you don't put extra stuff inside them we've got a Manifesto where we're",
    "start": "430560",
    "end": "435720"
  },
  {
    "text": "trying to explain some of this we're just trying to give a name to this common set of patterns that we're seeing",
    "start": "435720",
    "end": "441720"
  },
  {
    "text": "and the common practices that are behind that so to take off one of the first uh",
    "start": "441720",
    "end": "448199"
  },
  {
    "text": "qualities that we're interested in is our systems responsive this is an area that I'm passionate about well what do",
    "start": "448199",
    "end": "453879"
  },
  {
    "text": "we mean by responsive is it has to behave in a quick efficient manner and",
    "start": "453879",
    "end": "458919"
  },
  {
    "text": "give the desired results for what is there if we just take the name this is we were having this joke earlier that",
    "start": "458919",
    "end": "464599"
  },
  {
    "text": "actually if we start to finding stuff in our industry can we at least start with people reading the dictionary before they give a name to something because",
    "start": "464599",
    "end": "471319"
  },
  {
    "text": "we've got so many things in our industry that are so misnamed so it kind of makes a nice start well what does it mean to",
    "start": "471319",
    "end": "477879"
  },
  {
    "text": "be responsive if we do not respond in a timely manner bad stuff",
    "start": "477879",
    "end": "483479"
  },
  {
    "text": "happens it can be very simple stuff through to users get fed up through",
    "start": "483479",
    "end": "489800"
  },
  {
    "text": "losing lots of money to the extremes of people dying but we're all on different",
    "start": "489800",
    "end": "495199"
  },
  {
    "text": "parts of the scale with this and we have to design systems that meet our actual needs but the one thing that is not good",
    "start": "495199",
    "end": "501599"
  },
  {
    "text": "is if systems don't respond in the desired time that we need them to they're not good they fail to meet their",
    "start": "501599",
    "end": "507159"
  },
  {
    "text": "desired needs now I i' like to look at responsive systems in one of three ways",
    "start": "507159",
    "end": "512959"
  },
  {
    "text": "first of all I want to start with the service itself and how it's deterministic and then go into talk about how service times impact the",
    "start": "512959",
    "end": "519399"
  },
  {
    "text": "overall responsiveness of something and what we can do about going parallel so when we want something to",
    "start": "519399",
    "end": "526120"
  },
  {
    "text": "respond in a good way first thing we started what's our service we're offering and it needs to be deterministic to be deterministic it's",
    "start": "526120",
    "end": "533120"
  },
  {
    "text": "the order of the algorithms that matter so back to good old computer science theory we need to look at our algorithms",
    "start": "533120",
    "end": "539160"
  },
  {
    "text": "work work out for the given input that we're seeing how long will it take to respond what is the dominating factor in",
    "start": "539160",
    "end": "545480"
  },
  {
    "text": "that this is back to Big O notation so for n number of products or n number of",
    "start": "545480",
    "end": "551040"
  },
  {
    "text": "customers or n number of whatever those things happen to be we need to respond in a timely manner and this comes back",
    "start": "551040",
    "end": "557720"
  },
  {
    "text": "to basic algorithm so knowing this stuff and how do you know how your system goes",
    "start": "557720",
    "end": "562920"
  },
  {
    "text": "well you can do code analysis and that's all really interesting but a much more interesting way is to actually measure",
    "start": "562920",
    "end": "568079"
  },
  {
    "text": "your systems don't just gas you got to measure a git way a measur system is in",
    "start": "568079",
    "end": "573519"
  },
  {
    "text": "the histogram so every every request that goes through your system measure",
    "start": "573519",
    "end": "578760"
  },
  {
    "text": "the response time and record that observation every single one don't sample cuz sampling hides so much you",
    "start": "578760",
    "end": "585680"
  },
  {
    "text": "can record in histograms incredibly cheaply now we're talking tens of nanc for some of the best histograms to",
    "start": "585680",
    "end": "592600"
  },
  {
    "text": "record observations in HDR histogram being a really good example of this and so if I record a system you end up with",
    "start": "592600",
    "end": "598920"
  },
  {
    "text": "a chart looks like this where you've got a number of observations happening for a",
    "start": "598920",
    "end": "604399"
  },
  {
    "text": "given time period or a given response time that's there we see a system here that is mostly responding in under one",
    "start": "604399",
    "end": "611399"
  },
  {
    "text": "millisecond but it's also responding further out so we got to avoid some of",
    "start": "611399",
    "end": "616480"
  },
  {
    "text": "the terms that will confuse people and the classic ones are the averages that people talk about so mode on this is",
    "start": "616480",
    "end": "623519"
  },
  {
    "text": "here that's the most common occurrence we also hear people talking about medium and the med median is the",
    "start": "623519",
    "end": "630600"
  },
  {
    "text": "middle of the entire range when you line everything up in order of units often we hear people talk about",
    "start": "630600",
    "end": "637399"
  },
  {
    "text": "mean this is the average this is the one you really want to avoid because it's very unhelpful like looking at this",
    "start": "637399",
    "end": "643079"
  },
  {
    "text": "graph mean tells me nothing about the most common occurrence and it tells me nothing about all of the outliers that",
    "start": "643079",
    "end": "649079"
  },
  {
    "text": "are really significant in the behavior of this so let's get used to measuring let's deal with things like this and",
    "start": "649079",
    "end": "655680"
  },
  {
    "text": "what starts becoming very clear when you're measuring a given service you will start to see that certain processes",
    "start": "655680",
    "end": "662040"
  },
  {
    "text": "and per certain threads in your thing will hog a resource mostly due to being",
    "start": "662040",
    "end": "667160"
  },
  {
    "text": "synchronous we got to get over this synchronous mindset that we keep having we hog resources I'm using the pig",
    "start": "667160",
    "end": "673839"
  },
  {
    "text": "because it's a Danish audience I thought it might appeal that you understand especially in the way into",
    "start": "673839",
    "end": "679440"
  },
  {
    "text": "alus is's a pretty strong symbol of that so we've got our our services how",
    "start": "679440",
    "end": "685320"
  },
  {
    "text": "do we then work out how it's going to respond well mostly this comes down to utilization cuz if you overutilize any service or",
    "start": "685320",
    "end": "692360"
  },
  {
    "text": "any resource you start getting an interesting effect you get this curing effect that happens so the more you",
    "start": "692360",
    "end": "699680"
  },
  {
    "text": "utilize something the higher the likelihood that it's already being used whenever you come to need it so if",
    "start": "699680",
    "end": "706000"
  },
  {
    "text": "something's underutilized you turn up at it there's nobody there you can easily use it if you're running at very high",
    "start": "706000",
    "end": "712200"
  },
  {
    "text": "utilization you turn up to use something there's going to be other users of that waiting and so designing a system you",
    "start": "712200",
    "end": "719760"
  },
  {
    "text": "want to keep it under sort of 60 to 70% utilization otherwise you get really",
    "start": "719760",
    "end": "724920"
  },
  {
    "text": "really poor response time so it's understanding some of the basic math behind this this is a 100y old Theory",
    "start": "724920",
    "end": "731399"
  },
  {
    "text": "and so fundamental to us designing systems yet most people aren't applying it so start thinking about how we",
    "start": "731399",
    "end": "737480"
  },
  {
    "text": "utilize our systems and make sure you keep the utilization relatively low and one of the best ways to do that is",
    "start": "737480",
    "end": "743199"
  },
  {
    "text": "having fast service times because the faster your service time the lower your utilization will be and you do that by",
    "start": "743199",
    "end": "749240"
  },
  {
    "text": "not hogging the resource and don't go synchronous you can also control Q",
    "start": "749240",
    "end": "755000"
  },
  {
    "text": "lengths and if you control a q length you can upper bound your response time",
    "start": "755000",
    "end": "760639"
  },
  {
    "text": "so if your cu's full you just reject in any more inputs that coming in you can keep to an slf response time you go oh",
    "start": "760639",
    "end": "768920"
  },
  {
    "text": "but that means you're rejecting things well look at the alternative you can take the approach of I'll let my cu's",
    "start": "768920",
    "end": "774839"
  },
  {
    "text": "fill and then if they're full I'll reject input and say politely to you users sorry we're busy please come back",
    "start": "774839",
    "end": "781040"
  },
  {
    "text": "later the alternative is you take in requests you let your cues grow unbounded eventually you run out of",
    "start": "781040",
    "end": "787160"
  },
  {
    "text": "memory you crash everybody's in the system gets a bad level of service you can't service anybody else coming in",
    "start": "787160",
    "end": "793199"
  },
  {
    "text": "because you're crashed and you're going to be down for a while it's not a good approach to have let's be professional",
    "start": "793199",
    "end": "798240"
  },
  {
    "text": "about this so coming on to the third and final point is we need to go parallel if",
    "start": "798240",
    "end": "803399"
  },
  {
    "text": "we want to break stuff up so if I can't make an individual task faster I need to break it up and to break it up and then",
    "start": "803399",
    "end": "810760"
  },
  {
    "text": "got to start worrying about two things many people will have heard of amal's Law and that's about how we can speed up",
    "start": "810760",
    "end": "817320"
  },
  {
    "text": "things by going parallel but it is restricted by which component of the algorithm is serial so if only 5% of",
    "start": "817320",
    "end": "824440"
  },
  {
    "text": "your algorithm serial you still canot get greater than a 20x speed up remember I started off by saying how processors",
    "start": "824440",
    "end": "831240"
  },
  {
    "text": "are changing how we're getting so many cores it's it is possible now to get multi hundred core processors and in the",
    "start": "831240",
    "end": "837920"
  },
  {
    "text": "future it's going to go going further and further this way so we have to build these things but amall is actually",
    "start": "837920",
    "end": "843759"
  },
  {
    "text": "giving you the optimistic view of the world Neil gther pointed out that measuring real world systems that is",
    "start": "843759",
    "end": "849680"
  },
  {
    "text": "very optimistic and we must also take account of the coherence cost as well as",
    "start": "849680",
    "end": "855079"
  },
  {
    "text": "the contention cost so for the things that are competing they need to be made coherent so that data has to be shared",
    "start": "855079",
    "end": "861160"
  },
  {
    "text": "and as soon as you add in that coherence cost it starts to dominate and we can see here in the graph where the bottom",
    "start": "861160",
    "end": "867079"
  },
  {
    "text": "line starts to tail off so even if we throw more processs at it it gets worse",
    "start": "867079",
    "end": "872199"
  },
  {
    "text": "so we have to look at our alums we've got to know where they're contended and we got to look at the cost of that",
    "start": "872199",
    "end": "877440"
  },
  {
    "text": "coherence so what this comes down to basically in most of our designs is if you have shared mutable State you're in",
    "start": "877440",
    "end": "884440"
  },
  {
    "text": "trouble in many ways it is The Crystal Method of programming you find yourself",
    "start": "884440",
    "end": "889639"
  },
  {
    "text": "going fast for a while and then all of a sudden things start going really wrong as it gets really complicated and gets",
    "start": "889639",
    "end": "895360"
  },
  {
    "text": "messed up you become like these po shells of people who basically lose their our teeth and want to die after a",
    "start": "895360",
    "end": "901399"
  },
  {
    "text": "while so how do we deal with this well we break down our work we break it down",
    "start": "901399",
    "end": "906480"
  },
  {
    "text": "into batches and we deal with it in pipelines and there's loads of really great ways of doing that and like talk",
    "start": "906480",
    "end": "912440"
  },
  {
    "text": "to us about this in the next section of the talk we can sort of break this down and explain some of what's going on",
    "start": "912440",
    "end": "917639"
  },
  {
    "text": "let's not bang on shared memory because it's a really really bad way to go the way I like to think about it is what's",
    "start": "917639",
    "end": "923639"
  },
  {
    "text": "happened to our industry is I think we're at a fork point whereby we have far too many hipsters but we really",
    "start": "923639",
    "end": "929759"
  },
  {
    "text": "should be giges we should be back to applying computer science and understanding what's going on and stop",
    "start": "929759",
    "end": "934800"
  },
  {
    "text": "just following the latest cool Trends we got to measure and we measure we find out what we need we apply science I",
    "start": "934800",
    "end": "942399"
  },
  {
    "text": "think it's one of the greatest inventions of the human race as a scientific method because if you apply to almost anything you eventually start",
    "start": "942399",
    "end": "949360"
  },
  {
    "text": "getting towards the right answer we got to start applying these great disc discoveries that we have and before I",
    "start": "949360",
    "end": "955040"
  },
  {
    "text": "leave you I'll give you one thought synchronous RPC I've been watching breing bod recently so you're getting",
    "start": "955040",
    "end": "961240"
  },
  {
    "text": "lots of drug references but it it has become the crack cocain of distributed programming",
    "start": "961240",
    "end": "967199"
  },
  {
    "text": "people are wanting to do it but once you start it you're screwed you're hooked for life you need to undo your brain",
    "start": "967199",
    "end": "972720"
  },
  {
    "text": "around some of this stuff and start learning up with things like message passing and going asynchronous because",
    "start": "972720",
    "end": "977800"
  },
  {
    "text": "you'll just be so liberated in the things that you can achieve one of them being you can much easier become",
    "start": "977800",
    "end": "983480"
  },
  {
    "text": "resilient",
    "start": "983480",
    "end": "986480"
  },
  {
    "text": "[Music] so in this um in this setting of uh",
    "start": "989860",
    "end": "995759"
  },
  {
    "text": "reactive systems reili is uh the second property or quality um that's really",
    "start": "995759",
    "end": "1002120"
  },
  {
    "text": "interesting and from my point of view a more interesting one uh of course this is not there's not like a a new",
    "start": "1002120",
    "end": "1010120"
  },
  {
    "text": "completely unified religion it's a new unified Church of reactive programming",
    "start": "1010120",
    "end": "1015440"
  },
  {
    "text": "this is many different things many different practices uh nich is coming together kind of realizing the same sets",
    "start": "1015440",
    "end": "1022440"
  },
  {
    "text": "of patterns uh and we're not all like Martin doing high frequency trading",
    "start": "1022440",
    "end": "1028480"
  },
  {
    "text": "systems um but um but it turns out this notion of resilience",
    "start": "1028480",
    "end": "1034079"
  },
  {
    "text": "is vastly uh more applicable and vastly applicable in lots of different places",
    "start": "1034079",
    "end": "1040000"
  },
  {
    "text": "and resilient if I if we just look it up in the dictionary here um I'll just read this out loud uh",
    "start": "1040000",
    "end": "1047319"
  },
  {
    "text": "resilient is a ble to become strong healthy or successful again after something bad",
    "start": "1047319",
    "end": "1053360"
  },
  {
    "text": "happens or able to return to an original shape after being pulled stretched bent",
    "start": "1053360",
    "end": "1060880"
  },
  {
    "text": "Etc um so here you get the idea this is very very exact term for uh a system",
    "start": "1060880",
    "end": "1068080"
  },
  {
    "text": "kind of coming back together after something bad happens or after the system is stressed or bent or whatnot uh",
    "start": "1068080",
    "end": "1074799"
  },
  {
    "text": "basically coming back uh recovering after some kind of uh fault or error or",
    "start": "1074799",
    "end": "1080600"
  },
  {
    "text": "stressful situation and and that's the second property I think and I think it's it's really something that's uh we're",
    "start": "1080600",
    "end": "1086520"
  },
  {
    "text": "going to see a lot more demand for um than uh than we have right now it's kind",
    "start": "1086520",
    "end": "1091600"
  },
  {
    "text": "of like security security is obviously something that has been demand for but with the last couple years uh of issues",
    "start": "1091600",
    "end": "1099080"
  },
  {
    "text": "and security and privacy Etc security has become so much more important the same thing with this as we continue",
    "start": "1099080",
    "end": "1106000"
  },
  {
    "text": "depending more and more on our it systems as as infrastructure um like at Tri Fork we",
    "start": "1106000",
    "end": "1112679"
  },
  {
    "text": "do um some Healthcare systems that are pretty critical uh that have to work around the clock um so there the it",
    "start": "1112679",
    "end": "1120520"
  },
  {
    "text": "system to some degree is is really is very important to um to do what you do",
    "start": "1120520",
    "end": "1126880"
  },
  {
    "text": "so bad things happen uh there are so many different kinds of bad things that can happen if we've look at kind of uh",
    "start": "1126880",
    "end": "1133720"
  },
  {
    "text": "back at the definition there they can be broken computer stuff can be broken computers memory discs Network routers",
    "start": "1133720",
    "end": "1139559"
  },
  {
    "text": "cables Etc things Break um and you know anything that can",
    "start": "1139559",
    "end": "1145720"
  },
  {
    "text": "possibly go wrong eventually does especially if you run it if you do it for a long enough time or have many enough things going on at the same time",
    "start": "1145720",
    "end": "1152440"
  },
  {
    "text": "eventually one of these things will go wrong uh things are stretched or",
    "start": "1152440",
    "end": "1157559"
  },
  {
    "text": "resource uh resources are over utilized memory compute ioad start capacity",
    "start": "1157559",
    "end": "1163080"
  },
  {
    "text": "congestion these things are pretty obvious um and all kinds of unforeseen",
    "start": "1163080",
    "end": "1168360"
  },
  {
    "text": "things happen happen uh you know things that you didn't think of when you wrote",
    "start": "1168360",
    "end": "1173440"
  },
  {
    "text": "the program uh as the programmer input validation configuration blah blah blah or just plain",
    "start": "1173440",
    "end": "1179480"
  },
  {
    "text": "bucks and the thing is you can't just expect",
    "start": "1179480",
    "end": "1184720"
  },
  {
    "text": "to buy a magic framework like j2e or whatnot uh that will you know if you",
    "start": "1184720",
    "end": "1192240"
  },
  {
    "text": "just use this technology uh and WR your little program in in that world all your problems are solved this the system the",
    "start": "1192240",
    "end": "1198840"
  },
  {
    "text": "framework the uh hardware setup whatever will take care of it for you these this is like just like with security it has",
    "start": "1198840",
    "end": "1205200"
  },
  {
    "text": "to be designed in it has you have to think of it up front it's really difficult to add security to a system",
    "start": "1205200",
    "end": "1211600"
  },
  {
    "text": "after it's built likewise it's very difficult to add resilience to the system after it's built so the the",
    "start": "1211600",
    "end": "1218720"
  },
  {
    "text": "primary um design pattern in this so that's now let's get back to what this",
    "start": "1218720",
    "end": "1224919"
  },
  {
    "text": "is about this is about people meeting with this realizing that there's a shared set of design patterns around",
    "start": "1224919",
    "end": "1230280"
  },
  {
    "text": "this and the the primary design pattern is this notion of bulkheads um in Danish it's Scotch so",
    "start": "1230280",
    "end": "1237840"
  },
  {
    "text": "it's so it's what splits is these vertical lines you see in a in a large ship here that make sure that if if",
    "start": "1237840",
    "end": "1243679"
  },
  {
    "text": "there's a fault in the hole that water won't spread to the entire hole right so",
    "start": "1243679",
    "end": "1251200"
  },
  {
    "text": "uh so these these guys I I wasn't part of doing the original um reactive uh",
    "start": "1251200",
    "end": "1258760"
  },
  {
    "text": "esto um and the original one at least had this diagram very much like this uh",
    "start": "1258760",
    "end": "1264840"
  },
  {
    "text": "which kind of reminds you of Titanic right um trouble on Titanic were was",
    "start": "1264840",
    "end": "1271440"
  },
  {
    "text": "that um these bulkheads didn't they weren't high enough they didn't really isolate the section so Water started",
    "start": "1271440",
    "end": "1276840"
  },
  {
    "text": "running over from one bulkhead AC to the next",
    "start": "1276840",
    "end": "1282520"
  },
  {
    "text": "so um the reason why I came into this was of course I mentioned this Healthcare stuff and I've been doing a",
    "start": "1282520",
    "end": "1288400"
  },
  {
    "text": "lot of llang and the the one Revelation that comes out of working with llang is it really gives you a notion of",
    "start": "1288400",
    "end": "1295880"
  },
  {
    "text": "isolation and and the Des the primary thing I'd like you to walk away from here with is to build resilient systems",
    "start": "1295880",
    "end": "1303679"
  },
  {
    "text": "you need to build isolation into them so that you can have your your system parts",
    "start": "1303679",
    "end": "1308919"
  },
  {
    "text": "of your system break independently so this is like uh with houses or",
    "start": "1308919",
    "end": "1314799"
  },
  {
    "text": "properties location location location the rules of resilience is really",
    "start": "1314799",
    "end": "1320000"
  },
  {
    "text": "isolate isolate isolate and you know frankly we're not used to doing that it's really something that has taken me",
    "start": "1320000",
    "end": "1326679"
  },
  {
    "text": "uh some time to get used to so uh From llang",
    "start": "1326679",
    "end": "1331919"
  },
  {
    "text": "perspective Joe Joe Armstrong who's one of the creators of uh erlang says to you",
    "start": "1331919",
    "end": "1338679"
  },
  {
    "text": "need at least two computers to build a reliable system namely one that can",
    "start": "1338679",
    "end": "1344600"
  },
  {
    "text": "observe the other they can observe each other and take over for each other other um so I would I would think you",
    "start": "1344600",
    "end": "1352559"
  },
  {
    "text": "know a better picture of uh a better way to look at this um resilience in terms",
    "start": "1352559",
    "end": "1358640"
  },
  {
    "text": "of ships would be something like this you know you would have the UNS syncable one and the UNS syncable two uh two",
    "start": "1358640",
    "end": "1365400"
  },
  {
    "text": "Titanics on the on the maiden journey and you'd have two guys standing here",
    "start": "1365400",
    "end": "1371720"
  },
  {
    "text": "looking making you observing whether the other ship was still afloat right so",
    "start": "1371720",
    "end": "1377440"
  },
  {
    "text": "this would be a much more resilient I think this is the primary design pattern of",
    "start": "1377440",
    "end": "1382520"
  },
  {
    "text": "resilience um they need at least two they need to observe each other but we can get back to that",
    "start": "1382520",
    "end": "1388120"
  },
  {
    "text": "discussion I think we agree on the fact that isolation is really important um so",
    "start": "1388120",
    "end": "1393440"
  },
  {
    "text": "maybe we could kind of amend amend the rule a bit and say we want to isolate isolate and make these faults observable",
    "start": "1393440",
    "end": "1399840"
  },
  {
    "text": "you need to have a way where when something bad happens somebody else will notice it so um there's a various sets",
    "start": "1399840",
    "end": "1406720"
  },
  {
    "text": "of Solutions in this space but they um one important thing I see as a common",
    "start": "1406720",
    "end": "1412240"
  },
  {
    "text": "thing is you make errors of faults first class um and you're very explicit about",
    "start": "1412240",
    "end": "1419559"
  },
  {
    "text": "ex show telling other people when something when something happens to explicit observation or it's sending",
    "start": "1419559",
    "end": "1426080"
  },
  {
    "text": "messages when things fail so um today in say Java where you have a one big heap",
    "start": "1426080",
    "end": "1432919"
  },
  {
    "text": "of Errors if something goes wrong that that that wrong could be completely entangled with a heap of java objects",
    "start": "1432919",
    "end": "1440559"
  },
  {
    "text": "that are already in a sorry state so you don't really know what happened there right but you want to make false",
    "start": "1440559",
    "end": "1446520"
  },
  {
    "text": "observable that's the second thing then there's um we're used to these various Notions",
    "start": "1446520",
    "end": "1454159"
  },
  {
    "text": "or units of isolation we have data centers we we have multiple data centers so we can have failover to another data",
    "start": "1454159",
    "end": "1460640"
  },
  {
    "text": "center we have racks or clusters or machines as units of failure uh so you can have one machine",
    "start": "1460640",
    "end": "1468600"
  },
  {
    "text": "fails you can have another one take over uh in terms of",
    "start": "1468600",
    "end": "1474000"
  },
  {
    "text": "software um which is the level below the line there we we used to thinking of in",
    "start": "1474000",
    "end": "1480640"
  },
  {
    "text": "terms of operating system processes being units of isolation nice and clean operating system process a Unix process",
    "start": "1480640",
    "end": "1487760"
  },
  {
    "text": "has its own memory space it can't kind of randomly um ruin another system process",
    "start": "1487760",
    "end": "1494480"
  },
  {
    "text": "running on the same operating system but we're really not used to having isolation at a more fine grain level",
    "start": "1494480",
    "end": "1500919"
  },
  {
    "text": "than that uh the software components uh the stuff that we used to",
    "start": "1500919",
    "end": "1505960"
  },
  {
    "text": "build software uh and that's what llang that's the kind of the tradition of llang is to have software components",
    "start": "1505960",
    "end": "1511440"
  },
  {
    "text": "that are also isolated just like operting system processes sorry um",
    "start": "1511440",
    "end": "1517679"
  },
  {
    "text": "and it's kind of uh when you when you when you start working with this you realize that actually it is true this",
    "start": "1517679",
    "end": "1524080"
  },
  {
    "text": "thing that uh software faults are actually transient you know when just like when Microsoft Word hangs on your",
    "start": "1524080",
    "end": "1530480"
  },
  {
    "text": "machine you just restart it and move on with your life and actually the same strategy works surprisingly well uh at",
    "start": "1530480",
    "end": "1539200"
  },
  {
    "text": "the software component level or the part of your application Level uh and you just have to see it uh and try it I",
    "start": "1539200",
    "end": "1547000"
  },
  {
    "text": "can't I can't I can't really um make a much better argument than that because it's something that doesn't feel natural",
    "start": "1547000",
    "end": "1553360"
  },
  {
    "text": "when you hear it for the first time but when you try it and look at it and see it in real life uh software components",
    "start": "1553360",
    "end": "1559679"
  },
  {
    "text": "can be restarted and you can actually get something meaningful out of it most in fact most errors uh that happen in",
    "start": "1559679",
    "end": "1565480"
  },
  {
    "text": "the software system are of this transient nature so",
    "start": "1565480",
    "end": "1570679"
  },
  {
    "text": "um so the thing you want to do to build a resilient system I'll amend my rule",
    "start": "1570679",
    "end": "1576240"
  },
  {
    "text": "set once again you want to isolate it you may want to make the faults observable and you want to have a way to",
    "start": "1576240",
    "end": "1582440"
  },
  {
    "text": "do clean restarts so you can restart the components from a known State um uh and",
    "start": "1582440",
    "end": "1590720"
  },
  {
    "text": "I think that's that's a place where you can if you want to learn more about this I think uh in terms of building software",
    "start": "1590720",
    "end": "1598000"
  },
  {
    "text": "components that are isolated um having some kind of actra system or",
    "start": "1598000",
    "end": "1603559"
  },
  {
    "text": "microprocess system like AKA has it or like llang has it I say the llang",
    "start": "1603559",
    "end": "1609240"
  },
  {
    "text": "version is better because they're more isolated um is uh you should go read about",
    "start": "1609240",
    "end": "1616559"
  },
  {
    "text": "patterns in context of actor system right so you have software components that are running together in the same",
    "start": "1616559",
    "end": "1623399"
  },
  {
    "text": "virtual machine uh and each of these components are properly encapsulated",
    "start": "1623399",
    "end": "1629760"
  },
  {
    "text": "just like um just like we thought of objects and all talked about objects should be encapsulating State Etc uh 10",
    "start": "1629760",
    "end": "1637679"
  },
  {
    "text": "20 years ago with actors you actually do that uh you handle faults outside these",
    "start": "1637679",
    "end": "1644360"
  },
  {
    "text": "so you have a you need to have a way act provide a way to to fail entirely right",
    "start": "1644360",
    "end": "1649679"
  },
  {
    "text": "so you can reboot an actor so instead of trying to repair some State repair oh there's some exceptions happened and",
    "start": "1649679",
    "end": "1656440"
  },
  {
    "text": "blah blah blah typically uh in typical Earline coding style at least you just don't deal with it you just kind of",
    "start": "1656440",
    "end": "1662880"
  },
  {
    "text": "restart the component uh and in most cases that actually works really nice and",
    "start": "1662880",
    "end": "1669519"
  },
  {
    "text": "then you can imagine once you have notion of restarting one component sometimes to restart a component you",
    "start": "1669519",
    "end": "1675240"
  },
  {
    "text": "also need to restart a couple other components because they dependent on one so there's strategies called supervising",
    "start": "1675240",
    "end": "1681559"
  },
  {
    "text": "strategies for how to manage kind of the recursion over restarting components so",
    "start": "1681559",
    "end": "1687760"
  },
  {
    "text": "there's a whole toolbox of things um surrounding",
    "start": "1687760",
    "end": "1693679"
  },
  {
    "text": "resilience uh that are patterns that exist out there they're not haven't",
    "start": "1693679",
    "end": "1698840"
  },
  {
    "text": "really ever seen them assembled uh in a in a coherent fashion across different technology they tend to descriptions of",
    "start": "1698840",
    "end": "1705640"
  },
  {
    "text": "this tend to be um uh surrounding a specific technology um but there's all",
    "start": "1705640",
    "end": "1711960"
  },
  {
    "text": "kinds of things like these right heartbeats a pendon file formats that",
    "start": "1711960",
    "end": "1717279"
  },
  {
    "text": "let you your data uh be use useful even even if your things crash in the middle",
    "start": "1717279",
    "end": "1722720"
  },
  {
    "text": "you can start up again there's various notion of actors and microprocessors component this notion of",
    "start": "1722720",
    "end": "1728279"
  },
  {
    "text": "component local resources you have in Earl you can assign memory limits or or",
    "start": "1728279",
    "end": "1734840"
  },
  {
    "text": "compute limits to individual components Within application as is said",
    "start": "1734840",
    "end": "1740120"
  },
  {
    "text": "supervisors we've seen circuit breakers none of this is new none of this is new but uh we're starting to see this being",
    "start": "1740120",
    "end": "1745600"
  },
  {
    "text": "used across wide range of things so when you know stuff is your stuff is isolated",
    "start": "1745600",
    "end": "1752279"
  },
  {
    "text": "you know you can just keep calm and let it crash um and that's really a big",
    "start": "1752279",
    "end": "1760039"
  },
  {
    "text": "relief okay so um we're moving on to uh the third quality uh property being",
    "start": "1760039",
    "end": "1767399"
  },
  {
    "text": "elastic",
    "start": "1767399",
    "end": "1770039"
  },
  {
    "text": "hello you still awake yay awesome all right so",
    "start": "1774240",
    "end": "1780080"
  },
  {
    "text": "elasticity so what does elastic mean well it means that something is capable",
    "start": "1780080",
    "end": "1788159"
  },
  {
    "text": "of ready change or expansion or contraction or able to be changed so",
    "start": "1788159",
    "end": "1794559"
  },
  {
    "text": "it's kind of fluffy but uh I think we sort of get the picture right and what we're going to talk about is",
    "start": "1794559",
    "end": "1800840"
  },
  {
    "text": "why this is important so here's a quick outline just to make sure that we",
    "start": "1800840",
    "end": "1806039"
  },
  {
    "text": "understand the order of stuff and let's just get going so why do we",
    "start": "1806039",
    "end": "1811840"
  },
  {
    "text": "need to be elastic so why would I want to do that well I think first and foremost the rules of the game has",
    "start": "1811840",
    "end": "1819080"
  },
  {
    "text": "changed right we we don't see that same kind of applications that we have done in the past so just to sort of enforce",
    "start": "1819080",
    "end": "1827159"
  },
  {
    "text": "what we've said before we've seen that back in the' 60s to '90s we had single machines right now we have",
    "start": "1827159",
    "end": "1833600"
  },
  {
    "text": "clusters of machines like we have a lot of machines but we don't Al also only",
    "start": "1833600",
    "end": "1839240"
  },
  {
    "text": "have single core machines but we have multicore processors so we start of see",
    "start": "1839240",
    "end": "1844720"
  },
  {
    "text": "how we sort of adding hardware and you know back in the days Ram was really",
    "start": "1844720",
    "end": "1850200"
  },
  {
    "text": "expensive you had to do a lot of optimization to make sure that everything fit into your memory but now",
    "start": "1850200",
    "end": "1855279"
  },
  {
    "text": "we can have I mean I have more RAM in myself cell phone that I did in my computer like 10 years ago and I don't",
    "start": "1855279",
    "end": "1861159"
  },
  {
    "text": "even know what to use it for we have expensive disc back in the past like",
    "start": "1861159",
    "end": "1866600"
  },
  {
    "text": "really expensive disc and now disc is super cheap so we can have a lot of disc and we had slow networks and now we",
    "start": "1866600",
    "end": "1874679"
  },
  {
    "text": "have fast networks so in the sort of before we had few concurrent users",
    "start": "1874679",
    "end": "1881279"
  },
  {
    "text": "perhaps you had a Mainframe or your workstation and you had like tens or hundreds of users perhaps even in the th",
    "start": "1881279",
    "end": "1888279"
  },
  {
    "text": "thousands but now you can have hundreds of thousands or even millions of users I mean if you're successful and you",
    "start": "1888279",
    "end": "1894399"
  },
  {
    "text": "release a new app and it goes viral you might even have tens of millions of users in a very short time but now I",
    "start": "1894399",
    "end": "1901600"
  },
  {
    "text": "mean that is that is something that we see it it it it's just happening all over and also having very little RAM and",
    "start": "1901600",
    "end": "1910960"
  },
  {
    "text": "very very expensive discs it means that we couldn't really capture that much data either we needed to be really",
    "start": "1910960",
    "end": "1916840"
  },
  {
    "text": "careful like do you really want to store this stuff like are you sure like it's going to cost you some and now we can",
    "start": "1916840",
    "end": "1922880"
  },
  {
    "text": "essentially store everything that we want to store we can store",
    "start": "1922880",
    "end": "1928760"
  },
  {
    "text": "everything also when something was slow in the past it was slow in sort of the",
    "start": "1928760",
    "end": "1934639"
  },
  {
    "text": "seconds or even like days but now we have latencies that are really really",
    "start": "1934639",
    "end": "1939880"
  },
  {
    "text": "short I mean if a website is slow and in which case slow means like less than a",
    "start": "1939880",
    "end": "1945120"
  },
  {
    "text": "second then people will move somewhere else so how do we do this like how do we get",
    "start": "1945120",
    "end": "1952720"
  },
  {
    "text": "the elastic stuff going well first we need scalability but what is scalability",
    "start": "1952720",
    "end": "1958240"
  },
  {
    "text": "like do we really understand what scalability means so one common misconception is the scalability versus",
    "start": "1958240",
    "end": "1964720"
  },
  {
    "text": "performance thing so scalability is about the relationship between your latency and",
    "start": "1964720",
    "end": "1971880"
  },
  {
    "text": "throughput or sort of your graph of in uh latency and throughput as you",
    "start": "1971880",
    "end": "1977159"
  },
  {
    "text": "increase your inputs but performance is about how long of a time it takes to do a single item",
    "start": "1977159",
    "end": "1985600"
  },
  {
    "text": "of that input so these are separate things so in the past when we were",
    "start": "1985600",
    "end": "1991039"
  },
  {
    "text": "talking about scaling up you so it was more about if we buy a fatter box with",
    "start": "1991039",
    "end": "1996720"
  },
  {
    "text": "the faster CPU that only had a single core then we would get a faster program",
    "start": "1996720",
    "end": "2002679"
  },
  {
    "text": "like we had a single threaded program and we just bought a faster CPU and",
    "start": "2002679",
    "end": "2007799"
  },
  {
    "text": "insta speed right insta speed sort of that was the scaling up we can just do that but I think right now it's more",
    "start": "2007799",
    "end": "2014840"
  },
  {
    "text": "about adding more cores to machine so a fatter machine is not a machine with a",
    "start": "2014840",
    "end": "2020760"
  },
  {
    "text": "faster CPU but it's one with more CPUs so is that the same thing are the are",
    "start": "2020760",
    "end": "2028760"
  },
  {
    "text": "the CPUs getting faster in terms of performance in raw sort of this core can do that work not that much so what is",
    "start": "2028760",
    "end": "2035440"
  },
  {
    "text": "scale out scale out tends to be all right so let's just buy more machines",
    "start": "2035440",
    "end": "2041000"
  },
  {
    "text": "let's just buy extra machines and make sure that our system can run on more machines so if we look at it if we have",
    "start": "2041000",
    "end": "2050000"
  },
  {
    "text": "these sort of data centers with clusters of machines with machines in them and",
    "start": "2050000",
    "end": "2055280"
  },
  {
    "text": "some sort of virtual machine some node that's running there that has threads that has CPUs that has caches and",
    "start": "2055280",
    "end": "2062158"
  },
  {
    "text": "everything is sort of nested a machine within a machine within a machine within a machine right it's sort of like that",
    "start": "2062159",
    "end": "2069919"
  },
  {
    "text": "so if you think about it buying a bigger machine with more cores is sort of the",
    "start": "2069919",
    "end": "2076679"
  },
  {
    "text": "same thing as buying more machines right it's more course but they're not just",
    "start": "2076679",
    "end": "2081800"
  },
  {
    "text": "not in the same machine but they are in another machine sort of the same [Music]",
    "start": "2081800",
    "end": "2086919"
  },
  {
    "text": "thing so what's interesting about scaling is not just we can buy infinite",
    "start": "2086919",
    "end": "2092320"
  },
  {
    "text": "amounts of hardware and just run our system on all machines at once at all time but it's about being able to",
    "start": "2092320",
    "end": "2099920"
  },
  {
    "text": "contract and scaling down and just using the hardware that we",
    "start": "2099920",
    "end": "2105440"
  },
  {
    "text": "need because if we can scale out then theoretically we should be able to scale in as well and this is about money it's",
    "start": "2105440",
    "end": "2112400"
  },
  {
    "text": "about not paying for stuff that you don't use right now so how can we do this so I think the first thing we need",
    "start": "2112400",
    "end": "2119400"
  },
  {
    "text": "to do is that we need to be asynchronous we need to d-shackle ourselves from the",
    "start": "2119400",
    "end": "2124480"
  },
  {
    "text": "synchronous thinking we need to have a boundary between components we need and this sort of ties",
    "start": "2124480",
    "end": "2130800"
  },
  {
    "text": "into the Isolation part as well because if we decouple two end points from each other they can also be isolated they",
    "start": "2130800",
    "end": "2138320"
  },
  {
    "text": "don't have this tight coupling and what what we also need to do is that we just",
    "start": "2138320",
    "end": "2143520"
  },
  {
    "text": "need to avoid blocking we need to make sure that even if we're sort of this is asynchronous but now I'm going to block",
    "start": "2143520",
    "end": "2151240"
  },
  {
    "text": "the current threat of execution until I get a reply and I'm going to wait forever because that's 10",
    "start": "2151240",
    "end": "2157640"
  },
  {
    "text": "tends to be what people do is that they wait forever what happens if that thing goes down never replies or somebody else",
    "start": "2157640",
    "end": "2163240"
  },
  {
    "text": "needs to use your thread you're just stuck there it doesn't",
    "start": "2163240",
    "end": "2168640"
  },
  {
    "text": "work what we also need to do is we need to divide and conquer we need to decouple our stuff we need to take our",
    "start": "2168640",
    "end": "2174880"
  },
  {
    "text": "problems and we need to sort of break them apart to see what can we do if we",
    "start": "2174880",
    "end": "2180160"
  },
  {
    "text": "take the individual pieces can we run this there and this there and this there or do we need to run them in one chunk",
    "start": "2180160",
    "end": "2186240"
  },
  {
    "text": "perhaps we don't we also can do something called pipelining which is uh what Martin",
    "start": "2186240",
    "end": "2192480"
  },
  {
    "text": "mentioned earlier which is we can think about the flow of communication and",
    "start": "2192480",
    "end": "2198480"
  },
  {
    "text": "Transformations within our system and designing that flow we think about so",
    "start": "2198480",
    "end": "2203560"
  },
  {
    "text": "that input comes in here it goes through some transformation then goes out there and comes in over there and does some",
    "start": "2203560",
    "end": "2209720"
  },
  {
    "text": "stuff so if we can sort of take a step back and think about this then it doesn't really matter if those stages of",
    "start": "2209720",
    "end": "2217240"
  },
  {
    "text": "trans formation live on the same machine or if that's just different functionality on multiple machines so if",
    "start": "2217240",
    "end": "2224119"
  },
  {
    "text": "we add more machines then we should be able to execute parts of it on other",
    "start": "2224119",
    "end": "2229640"
  },
  {
    "text": "machines also we need to share nothing we need to start having this shared",
    "start": "2230280",
    "end": "2235400"
  },
  {
    "text": "mutable State addiction we need to start thinking about individual components",
    "start": "2235400",
    "end": "2241760"
  },
  {
    "text": "that are isolated we can't reach into the brains of each other and read the thoughts and write thoughts into each",
    "start": "2241760",
    "end": "2248920"
  },
  {
    "text": "other's brains we need to start communicating instead and what's really important to",
    "start": "2248920",
    "end": "2254440"
  },
  {
    "text": "do that is something called location transparency it means that the component that I am talking to I don't want to",
    "start": "2254440",
    "end": "2262240"
  },
  {
    "text": "have an assumption where that component exists it shouldn't be hardcoded where",
    "start": "2262240",
    "end": "2267520"
  },
  {
    "text": "that component lives it should be an address so that I can send to it and it",
    "start": "2267520",
    "end": "2273560"
  },
  {
    "text": "doesn't matter if it currently lives on my machine or some other machine doesn't",
    "start": "2273560",
    "end": "2279880"
  },
  {
    "text": "matter and in order to sort of get the full picture we need to obtain metrics",
    "start": "2279880",
    "end": "2285200"
  },
  {
    "text": "we need to understand what our system is doing because when we have metrics and",
    "start": "2285200",
    "end": "2291400"
  },
  {
    "text": "when we start to see what's happening we can also use that we have information about the system itself so that ties",
    "start": "2291400",
    "end": "2299319"
  },
  {
    "text": "into the elastic part so when we have these pieces then we can do something called reactive elasticity if we have",
    "start": "2299319",
    "end": "2308200"
  },
  {
    "text": "metrics about what's currently happening within our system and we have a bit of a history of that then we can sort of okay",
    "start": "2308200",
    "end": "2314440"
  },
  {
    "text": "it looks like there's a lot of people coming in to buy stuff in the e-commerce store right now so we better spin up",
    "start": "2314440",
    "end": "2320359"
  },
  {
    "text": "some new machines to be able to handle that load we can sort of react to the",
    "start": "2320359",
    "end": "2325440"
  },
  {
    "text": "changes of our users or the behavior of our system but it's fairly frequent that",
    "start": "2325440",
    "end": "2332319"
  },
  {
    "text": "we can also do this in a predictive way if we know that Black Friday Friday is",
    "start": "2332319",
    "end": "2337960"
  },
  {
    "text": "going to be one of those days where we typically need 10,000 times as many machines as we usually do then perhaps",
    "start": "2337960",
    "end": "2344760"
  },
  {
    "text": "it doesn't work to be have reactive elasticity for that case because it might just take too long to spin up",
    "start": "2344760",
    "end": "2351000"
  },
  {
    "text": "10,000 new machines so perhaps we need to have a combination of both so reactive elasticity can even out",
    "start": "2351000",
    "end": "2359960"
  },
  {
    "text": "sort of unexpected tops and and and and sort of the falling Trends right so it",
    "start": "2359960",
    "end": "2365040"
  },
  {
    "text": "can sort of smooth things out but predict elasticity make sure that we can stay responsive and we can sort of",
    "start": "2365040",
    "end": "2371880"
  },
  {
    "text": "service the users while we were sort of heavily loaded so in",
    "start": "2371880",
    "end": "2377880"
  },
  {
    "text": "general we just need to become elastic so once we do we can profit out",
    "start": "2377880",
    "end": "2384920"
  },
  {
    "text": "of that we don't need to pay for Hardware that we're not using and we can pay for Hardware when we need it so that",
    "start": "2384920",
    "end": "2392319"
  },
  {
    "text": "ties into message driven",
    "start": "2392319",
    "end": "2396760"
  },
  {
    "text": "hello everyone so message driven is sort of a",
    "start": "2402599",
    "end": "2408359"
  },
  {
    "text": "uh a way of tying all these different pie traits together and get lets them",
    "start": "2408359",
    "end": "2413800"
  },
  {
    "text": "sort of bring what they can to the to the system and uh it's not really what",
    "start": "2413800",
    "end": "2419560"
  },
  {
    "text": "message passing provides it's actually what it makes harder or even impossible",
    "start": "2419560",
    "end": "2425000"
  },
  {
    "text": "um which is kind of an odd thing right we we usually think that there is something great that something brings",
    "start": "2425000",
    "end": "2431800"
  },
  {
    "text": "that you know makes a better makes it a better system but in the case of you know passing messages actually we take",
    "start": "2431800",
    "end": "2438680"
  },
  {
    "text": "away some of the things that we're used to we take away some tight coupling it's sort of like this right if your personal",
    "start": "2438680",
    "end": "2445800"
  },
  {
    "text": "space is violated and you want to get a little bit back you intentionally put a boundary there right you you you",
    "start": "2445800",
    "end": "2450880"
  },
  {
    "text": "basically push back a little bit and that's actually boundaries are good right so having that bound sort of",
    "start": "2450880",
    "end": "2457960"
  },
  {
    "text": "forces things it's a little bit like this uh this is a great book uh antifragile it basically talks about how",
    "start": "2457960",
    "end": "2464599"
  },
  {
    "text": "systems when they're stressed they develop coping mechanisms and those coping mechanisms are actually make form",
    "start": "2464599",
    "end": "2471040"
  },
  {
    "text": "a stronger system but you can also apply it in this case it's really about forc",
    "start": "2471040",
    "end": "2476480"
  },
  {
    "text": "decoupling and forced separation of concerns you know the when we think",
    "start": "2476480",
    "end": "2482119"
  },
  {
    "text": "about messaging and we think about using networks to sort of separate components or if we even think about going from",
    "start": "2482119",
    "end": "2488720"
  },
  {
    "text": "process to process where they can't do anything shared or if they have to they have to orchestrate it so that they can",
    "start": "2488720",
    "end": "2494800"
  },
  {
    "text": "share memory things like that what we really have is a binary boundary there's a binary boundary where we can't just",
    "start": "2494800",
    "end": "2501760"
  },
  {
    "text": "toss a real complex object across to something else we have to serialize it in some way that boundary oh that",
    "start": "2501760",
    "end": "2509280"
  },
  {
    "text": "boundary of actually us hitting that boundary like that uh or or actually",
    "start": "2509280",
    "end": "2514480"
  },
  {
    "text": "having the boundary where we have to think about that and those things AR more complex actually makes us think",
    "start": "2514480",
    "end": "2519880"
  },
  {
    "text": "about how we actually uh put those pieces together it's also an asynchronous boundary in other words we",
    "start": "2519880",
    "end": "2527160"
  },
  {
    "text": "can't just go and wait because it doesn't feel natural right how many of you are like web developers or UI",
    "start": "2527160",
    "end": "2534480"
  },
  {
    "text": "developers or have done any any web or UI development oh great great great so the idea of something that's",
    "start": "2534480",
    "end": "2540200"
  },
  {
    "text": "asynchronous should be something that you're pretty familiar with right things come in as events you think about you",
    "start": "2540200",
    "end": "2545800"
  },
  {
    "text": "know somebody clicking a menu item and then going off what happens if you're doing a UI and you initiate an action",
    "start": "2545800",
    "end": "2553599"
  },
  {
    "text": "and the UI freezes that could be good you know there may be things that you want to do that but often you'd like to",
    "start": "2553599",
    "end": "2559880"
  },
  {
    "text": "go off do that and then while that's being done do something else so that idea of asynchrony it may shock you that",
    "start": "2559880",
    "end": "2567720"
  },
  {
    "text": "you know a lot of us actually interact with uh developers who are really used to doing things synchronously you know",
    "start": "2567720",
    "end": "2574880"
  },
  {
    "text": "even things like accessing dis is a synchronous operation but it doesn't have to be it could be asynchronous so",
    "start": "2574880",
    "end": "2582000"
  },
  {
    "text": "when you actually Force this decoupling and you force actually thinking about things in a more asynchronous manner it",
    "start": "2582000",
    "end": "2588079"
  },
  {
    "text": "actually does lend to lots of different designs very K Ain to this is event",
    "start": "2588079",
    "end": "2594040"
  },
  {
    "text": "ordering and imp implied correlation so as events kind of happen the order which",
    "start": "2594040",
    "end": "2600280"
  },
  {
    "text": "they can happen especially among multiple different recipients these are things that protocols deal with all the",
    "start": "2600280",
    "end": "2605760"
  },
  {
    "text": "time but we also associate with you know all kinds of different systems once you start actually having an asynchronous",
    "start": "2605760",
    "end": "2611559"
  },
  {
    "text": "binary boundary in them you have to start thinking about the order that that happens uh the and order ordering can",
    "start": "2611559",
    "end": "2619880"
  },
  {
    "text": "happen where it's going to typically happen in this order but it may not it may happen in a slightly different order",
    "start": "2619880",
    "end": "2625119"
  },
  {
    "text": "and the more events you have and the more messages the more ordering kind of takes over and the correlation of those",
    "start": "2625119",
    "end": "2631720"
  },
  {
    "text": "things and the last thing is sort of Errors of messages they're really no",
    "start": "2631720",
    "end": "2636760"
  },
  {
    "text": "different so start thinking about you know the messages that are being used and using",
    "start": "2636760",
    "end": "2642720"
  },
  {
    "text": "messaging to actually uh you know pass back errors and and and do that",
    "start": "2642720",
    "end": "2647839"
  },
  {
    "text": "sometimes locally handling an err is the right way sometimes passing it along is a better way so really having these",
    "start": "2647839",
    "end": "2655079"
  },
  {
    "text": "things separated by an asynchronous boundary binary uh boundary basically facilitates these other traits because",
    "start": "2655079",
    "end": "2661319"
  },
  {
    "text": "what it does is it actually forces certain you know patterns on the system",
    "start": "2661319",
    "end": "2666800"
  },
  {
    "text": "that can take advantage of elastic make a system more responsive and make it",
    "start": "2666800",
    "end": "2672599"
  },
  {
    "text": "more resilient as well resiliency is a really key one here because when these things have an asynchronous binary",
    "start": "2672599",
    "end": "2678920"
  },
  {
    "text": "boundary they have an implied bulkhead between them right it's off if it's often really difficult to force in",
    "start": "2678920",
    "end": "2685640"
  },
  {
    "text": "things that would you know uh basically get over that bulkhead so let's take these these",
    "start": "2685640",
    "end": "2691680"
  },
  {
    "text": "traits in turn and sort of see a little bit deeper about how they sort of uh uh",
    "start": "2691680",
    "end": "2697240"
  },
  {
    "text": "uh how uh they're they're bolstered by uh message driven uh kind of approaches",
    "start": "2697240",
    "end": "2703280"
  },
  {
    "text": "well with responsive asynchron is built in right so now you know the reason why",
    "start": "2703280",
    "end": "2708559"
  },
  {
    "text": "uis uh you know are more mostly asynchronous is this is how we have evolved from responsiveness when we're",
    "start": "2708559",
    "end": "2715359"
  },
  {
    "text": "interacting with a human we want things to be responsive we want constant feedback and what we've seen is you",
    "start": "2715359",
    "end": "2721160"
  },
  {
    "text": "doing UI development is kind of evolved this way it's not a coincidence it's because this see tends to work",
    "start": "2721160",
    "end": "2727920"
  },
  {
    "text": "um synchronous calls if you think about think about the really bad uis that you see that pause when you do something",
    "start": "2727920",
    "end": "2735160"
  },
  {
    "text": "right we all would consider that to be an unresponsive UI the term responsive actually has an implied meaning in in UI",
    "start": "2735160",
    "end": "2742839"
  },
  {
    "text": "so you know the this is uh you know very closely tied to",
    "start": "2742839",
    "end": "2747960"
  },
  {
    "text": "it decoupling forces responsive design it just does so when things are more",
    "start": "2747960",
    "end": "2753680"
  },
  {
    "text": "decoupled from one another they're actually more responsive and naturally they just fall out omd's law in USL",
    "start": "2753680",
    "end": "2760839"
  },
  {
    "text": "which Martin mentioned you know has a tremendous uh impact here um as things",
    "start": "2760839",
    "end": "2766040"
  },
  {
    "text": "are more serialized they will slow down and that's only getting worse and it will not get any better in fact it's",
    "start": "2766040",
    "end": "2772319"
  },
  {
    "text": "going to make systems that now you know seem to be pretty responsive as you just start pouring more cores in if you're",
    "start": "2772319",
    "end": "2779400"
  },
  {
    "text": "not thinking about things asynchronously they're going to actually get slower than they are today which is kind of a frightening concept and that really",
    "start": "2779400",
    "end": "2786240"
  },
  {
    "text": "gives you the idea that contention and coherence are actually evil right they they're they're they're actually pretty",
    "start": "2786240",
    "end": "2792800"
  },
  {
    "text": "bad so have to start thinking about not having intention reducing the level of",
    "start": "2792800",
    "end": "2798040"
  },
  {
    "text": "coherence that is required in systems resiliency is extremely important I want",
    "start": "2798040",
    "end": "2803280"
  },
  {
    "text": "to Echo the the creston's comments that we have systems now that have to be up",
    "start": "2803280",
    "end": "2808760"
  },
  {
    "text": "247 or else they impact business 247 365 is the norm with a lot of systems that",
    "start": "2808760",
    "end": "2815640"
  },
  {
    "text": "have to deal with e-commerce if you're not there for a customer when they come they're going to go somewhere else that that's just what we expect as",
    "start": "2815640",
    "end": "2823319"
  },
  {
    "text": "consumers so even in retail space resiliency is",
    "start": "2823319",
    "end": "2829359"
  },
  {
    "text": "Paramount so boundaries and bulkheads go hand inand so forcing those things into",
    "start": "2829359",
    "end": "2835839"
  },
  {
    "text": "place often at a very uh you know A fine grain level actually gives us more",
    "start": "2835839",
    "end": "2841640"
  },
  {
    "text": "resilient systems supervisors and hierarchies you know also work very well with message",
    "start": "2841640",
    "end": "2848440"
  },
  {
    "text": "passing so observing something is a lot easier when you can just listen to the traffic between them uh you know an",
    "start": "2848440",
    "end": "2855400"
  },
  {
    "text": "observer that can just sit and non- obtrusively look at the system and just look at the communication between it can",
    "start": "2855400",
    "end": "2861359"
  },
  {
    "text": "tell if something is alive or not without having to actually be in the middle of the conversation also you know when you have",
    "start": "2861359",
    "end": "2868760"
  },
  {
    "text": "mess messages as a means of communication between components live peac Mill upgrade becomes something",
    "start": "2868760",
    "end": "2874520"
  },
  {
    "text": "which is possible erlang does this it's not you know totally easy uh but no",
    "start": "2874520",
    "end": "2880240"
  },
  {
    "text": "system really is when you have to think about upgrading in any in any real case also localized errors versus passing",
    "start": "2880240",
    "end": "2886839"
  },
  {
    "text": "errors around these things become a lot easier and a lot more and open up a world of possibilities when you think",
    "start": "2886839",
    "end": "2893400"
  },
  {
    "text": "from a more of a you know messaging uh sort of orientation elastic you know decoupling",
    "start": "2893400",
    "end": "2900160"
  },
  {
    "text": "is really key to scale uh and omdal law plays another really big uh role in here",
    "start": "2900160",
    "end": "2906440"
  },
  {
    "text": "and we can think of a lot of things like spin up spin down and in and out as you know it it becomes a lot easier when you",
    "start": "2906440",
    "end": "2912559"
  },
  {
    "text": "think of it from a message passing perspective as opposed to you know a shared mutable State perspective and",
    "start": "2912559",
    "end": "2918480"
  },
  {
    "text": "again contention is the enemy here coherence is also extremely bad because",
    "start": "2918480",
    "end": "2923680"
  },
  {
    "text": "you won't have something which is elastic when it has a lot of cont you know contention on State and when it has",
    "start": "2923680",
    "end": "2929160"
  },
  {
    "text": "to have a lot of coherence to operate correctly so you know the shared nothing",
    "start": "2929160",
    "end": "2934359"
  },
  {
    "text": "designs everything else these are you know the these are Central to that and being able to separate these things via",
    "start": "2934359",
    "end": "2940559"
  },
  {
    "text": "you know passing of just binary blobs is actually very important so just to sort of give you an idea of how we can take",
    "start": "2940559",
    "end": "2947200"
  },
  {
    "text": "even traditional blocking operations and sort of decouple them I thought this was you know give you an idea of how uh",
    "start": "2947200",
    "end": "2953359"
  },
  {
    "text": "different ways to do this rest is actually reactive uh a lot of times we think",
    "start": "2953359",
    "end": "2958760"
  },
  {
    "text": "about rest as being you know you send a request you block you wait for a response right just think of it from the",
    "start": "2958760",
    "end": "2963799"
  },
  {
    "text": "client's side um but you know if you break it down HTTP has a request it has",
    "start": "2963799",
    "end": "2969200"
  },
  {
    "text": "a response that's a message that's a message that's a message and that's a",
    "start": "2969200",
    "end": "2974480"
  },
  {
    "text": "message and I'm using the term message here very very Loosely right because you know from this perspective you can also",
    "start": "2974480",
    "end": "2980119"
  },
  {
    "text": "think of the request and response as you know the normal messages but I'm thinking actually these are messages these events that happen within this",
    "start": "2980119",
    "end": "2987559"
  },
  {
    "text": "sequence are messages you can even break it down into that into those kind of slots and you can do a lot of stuff",
    "start": "2987559",
    "end": "2994119"
  },
  {
    "text": "while you're waiting from or originally sending that request to getting that response back but you have a couple things to",
    "start": "2994119",
    "end": "3001280"
  },
  {
    "text": "think about and I I've taught for many years and as I have taught I've asked",
    "start": "3001280",
    "end": "3006400"
  },
  {
    "text": "students you know to sort of you know do things like this where they take something that's blocking and then make",
    "start": "3006400",
    "end": "3011440"
  },
  {
    "text": "it more asynchronous in nature and one of the things that typically happens is the cor the blocking that happens here",
    "start": "3011440",
    "end": "3018119"
  },
  {
    "text": "is usually because of correlation you want to send a request and you want the response you want those two things to be correlated so when you break them apart",
    "start": "3018119",
    "end": "3025040"
  },
  {
    "text": "and you make them asynchronous how do you actually do correlation that's a that's a real thing that is something",
    "start": "3025040",
    "end": "3030400"
  },
  {
    "text": "that people struggle with um so don't I need a wait to do that well the answer",
    "start": "3030400",
    "end": "3035799"
  },
  {
    "text": "is no I don't obviously need to how can I do this well if I assign say an ID a number put it into uh you know say a map",
    "start": "3035799",
    "end": "3044000"
  },
  {
    "text": "I then send my my request it lives for a time when a response comes back I just look it up and I now I have my",
    "start": "3044000",
    "end": "3049799"
  },
  {
    "text": "correlation simple as that right that's one way of doing it there's many different ways of doing things like this",
    "start": "3049799",
    "end": "3055760"
  },
  {
    "text": "and again none of of this is new um this is actually a long time ago we decided",
    "start": "3055760",
    "end": "3061119"
  },
  {
    "text": "that uh there should be a lot of web services standards so and I'm seriously meaning a lot of these if you want to",
    "start": "3061119",
    "end": "3067000"
  },
  {
    "text": "actually take a look at that uh that wiki page it's surprising how many web St web services standards we have and a",
    "start": "3067000",
    "end": "3074000"
  },
  {
    "text": "lot of times what they do a lot of them do this independently is they try to break the synchronous nature into",
    "start": "3074000",
    "end": "3079680"
  },
  {
    "text": "asynchronous and the way that we've done this traditionally is like this with a synchronous request and a synchronous",
    "start": "3079680",
    "end": "3085440"
  },
  {
    "text": "response and together H they're kind of request response async",
    "start": "3085440",
    "end": "3090480"
  },
  {
    "text": "but you know not totally but as close as we could normally get it without sort of going into the protocol HP and changing",
    "start": "3090480",
    "end": "3097839"
  },
  {
    "text": "some things in this case the protocol holds us back from going there all the whole way sort of give you an idea we",
    "start": "3097839",
    "end": "3104400"
  },
  {
    "text": "could keep going on about different types of things and just wanted to seed some questions and things for this but",
    "start": "3104400",
    "end": "3110400"
  },
  {
    "text": "you know there's a lot of mistakes um that uh protocol developers have done over the over the years um and not me",
    "start": "3110400",
    "end": "3117000"
  },
  {
    "text": "I'm I'm always perfect but that uh that that's very rare um and there's a lot of",
    "start": "3117000",
    "end": "3122839"
  },
  {
    "text": "best current practices things that have actually done really well so I just wanted to give you a smattering of things uh to think about um generating",
    "start": "3122839",
    "end": "3130160"
  },
  {
    "text": "new errors on air reception like if you're going to talk about sending messes errors as messages think about",
    "start": "3130160",
    "end": "3135599"
  },
  {
    "text": "this sequence you receive an error from someone and you generate an error and send it back and then they generate",
    "start": "3135599",
    "end": "3141240"
  },
  {
    "text": "another error and send it back to you does this ever stop potentially not so you have to think about you know what",
    "start": "3141240",
    "end": "3148280"
  },
  {
    "text": "what the sequence of you know do you handle errors and how you handle errors and do you generate certain types of",
    "start": "3148280",
    "end": "3153319"
  },
  {
    "text": "traffic um a good one on the good side is TCP reset TCP reset is like a get out",
    "start": "3153319",
    "end": "3159520"
  },
  {
    "text": "of jail free card for a TCP connection you know it just basically resets it gets rid of it and aborts it that",
    "start": "3159520",
    "end": "3165880"
  },
  {
    "text": "actually is really easy because now anything that doesn't work doesn't fit can cause it to abort it's a very simple",
    "start": "3165880",
    "end": "3172359"
  },
  {
    "text": "rule things like that where you think about what's the default behavior and how do I get out of this really really",
    "start": "3172359",
    "end": "3177760"
  },
  {
    "text": "quick it goes back to more of you know sort of failing fast kind of technique",
    "start": "3177760",
    "end": "3183119"
  },
  {
    "text": "State machines State machines are actually great they they're nice and simple and concise and they actually",
    "start": "3183119",
    "end": "3189319"
  },
  {
    "text": "make things a lot simpler to follow strict ordering requirements this",
    "start": "3189319",
    "end": "3194640"
  },
  {
    "text": "is one that always trips up protocol developers I get I'll ask just a simple question what happens when you have a",
    "start": "3194640",
    "end": "3202160"
  },
  {
    "text": "response in HTTP before you send a request",
    "start": "3202160",
    "end": "3207200"
  },
  {
    "text": "ordering may be important right it's allowed we can talk a little bit more",
    "start": "3207200",
    "end": "3212520"
  },
  {
    "text": "later that's one of Martin has pointed out to me but there's others from a lot of other a lot of other protocols um",
    "start": "3212520",
    "end": "3218920"
  },
  {
    "text": "sometimes protocol developers do assume a certain order when they shouldn't so you know again uh no uh uh not going to",
    "start": "3218920",
    "end": "3227079"
  },
  {
    "text": "judge on any of that so I think with that we'll take a little bit of a break",
    "start": "3227079",
    "end": "3232280"
  },
  {
    "text": "uh and we'll come back see what questions you guys have we'll talk a bit and uh we'll see in a bit and just to",
    "start": "3232280",
    "end": "3240880"
  },
  {
    "text": "get it started uh I would like to to ask you again about what your superpowers",
    "start": "3240880",
    "end": "3246880"
  },
  {
    "text": "are I think it's about time you share your superpowers with the audience so I my my official superpowers is I'm I'm",
    "start": "3246880",
    "end": "3253920"
  },
  {
    "text": "very good at making people shut up which is why I got this role today because it's it's extremely difficult to make",
    "start": "3253920",
    "end": "3259760"
  },
  {
    "text": "Ken shut up and but I found a way of not even making him coming here so uh let's",
    "start": "3259760",
    "end": "3265200"
  },
  {
    "text": "move to Martin what's your official superpower well besides being scared of",
    "start": "3265200",
    "end": "3270839"
  },
  {
    "text": "you ah put on the spot to be asked this well at University I had a bit of a",
    "start": "3270839",
    "end": "3276480"
  },
  {
    "text": "party trick that I was known for and that was to pick up a large glass of beer with my teeth and dar it in one go",
    "start": "3276480",
    "end": "3283559"
  },
  {
    "text": "it got me into all sorts of trouble I asked to f a beer um what",
    "start": "3283559",
    "end": "3291960"
  },
  {
    "text": "about you to um I feel an aircraft seat very well",
    "start": "3291960",
    "end": "3297880"
  },
  {
    "text": "maybe a little bit too [Laughter] well Victor all right so what's my",
    "start": "3297880",
    "end": "3305799"
  },
  {
    "text": "superpower um I'm the master of bad",
    "start": "3305799",
    "end": "3311559"
  },
  {
    "text": "analogies that is my superpower it's deadly thank you very much so uh if",
    "start": "3311559",
    "end": "3318040"
  },
  {
    "text": "anybody wants to share superpowers you can also use that for that but I think the floor is open you must have some",
    "start": "3318040",
    "end": "3324839"
  },
  {
    "text": "questions from the last hour to give to the",
    "start": "3324839",
    "end": "3329599"
  },
  {
    "text": "panel okay Eric what do they disagree",
    "start": "3332880",
    "end": "3340000"
  },
  {
    "text": "about where is cresten you must disagree about",
    "start": "3340000",
    "end": "3346079"
  },
  {
    "text": "something oh I I I know exactly what we disagree about all right because every developer disagrees on this",
    "start": "3346079",
    "end": "3352880"
  },
  {
    "text": "naming yeah naming is hard I think tabs versus spaces do we have somebody who prefers spaces",
    "start": "3352880",
    "end": "3359559"
  },
  {
    "text": "here look I'm a space guy VI oh emx versus VI oh yeah",
    "start": "3359559",
    "end": "3371760"
  },
  {
    "text": "emac Ed yeah I think one of the things that",
    "start": "3371760",
    "end": "3379078"
  },
  {
    "text": "[Music] will I think one of the things that many people will disagree about is how you do",
    "start": "3379270",
    "end": "3385119"
  },
  {
    "text": "things like resilience because it's usually how you combine it with other things so like we can have fun and we",
    "start": "3385119",
    "end": "3390920"
  },
  {
    "text": "can make fun of the the AA folk here for a bit but not really fair in some but",
    "start": "3390920",
    "end": "3396079"
  },
  {
    "text": "like you can have excellent resilient models but you often trade things off so I I would disagree with the supervisor",
    "start": "3396079",
    "end": "3402359"
  },
  {
    "text": "model for example I think it is a workable solution but I also think it's",
    "start": "3402359",
    "end": "3407960"
  },
  {
    "text": "one that doesn't work when you need to be responsive cuz when things start to go wrong it can take too long to realize",
    "start": "3407960",
    "end": "3415280"
  },
  {
    "text": "and the going up through a hierarchy to make a decision just like bureaucracy in an organization I think it's an example",
    "start": "3415280",
    "end": "3422240"
  },
  {
    "text": "of how humans apply bureaucracy and software it's Conway's law in action I",
    "start": "3422240",
    "end": "3428920"
  },
  {
    "text": "think there are better ways of achieving resilience without supervis our hierarchies I'm just going to step back",
    "start": "3428920",
    "end": "3435160"
  },
  {
    "text": "for a moment I don't know this guy I think I think I think we're on to",
    "start": "3435160",
    "end": "3442400"
  },
  {
    "text": "sub I think it depends on what you're optimizing for so the more you're willing to optimize for some specific",
    "start": "3442400",
    "end": "3449079"
  },
  {
    "text": "trait the more you might end up sacrificing or optimizing away for other",
    "start": "3449079",
    "end": "3455400"
  },
  {
    "text": "stuff so perfect fa tolerance can be hard to achieve but if that is what you",
    "start": "3455400",
    "end": "3462160"
  },
  {
    "text": "need to do if you're sending something to another planet for instance you might have to trade away responsiveness",
    "start": "3462160",
    "end": "3467799"
  },
  {
    "text": "because you can't really communicate with that satellite thing that's way out there so I think it's it's um how you",
    "start": "3467799",
    "end": "3476319"
  },
  {
    "text": "sort of place yourself in the in the in the graph of these traits for specific",
    "start": "3476319",
    "end": "3482319"
  },
  {
    "text": "implementations or specific systems yeah I I would challenge the viewer around it",
    "start": "3482319",
    "end": "3487720"
  },
  {
    "text": "that the model that's for resilience though it does work it's very much rooted in humans trying to be",
    "start": "3487720",
    "end": "3494280"
  },
  {
    "text": "intelligent and I think there's a danger in that if you look to Nature Nature",
    "start": "3494280",
    "end": "3499319"
  },
  {
    "text": "doesn't try to apply intelligence to be resilient or successful or adoptable complex adoptive systems show us that in",
    "start": "3499319",
    "end": "3506359"
  },
  {
    "text": "other ways like multiple ways of doing the same thing and picking the first to",
    "start": "3506359",
    "end": "3511400"
  },
  {
    "text": "succeed are often a much more successful strategy and a strategy that survives",
    "start": "3511400",
    "end": "3517079"
  },
  {
    "text": "many more failure modes including the failure mode of your bureaucracy",
    "start": "3517079",
    "end": "3522520"
  },
  {
    "text": "system okay and started sorry I was uh I'm running",
    "start": "3522880",
    "end": "3528240"
  },
  {
    "text": "at 100% utilization so there is there's some latencies every now and then yeah I'm not always responsive maybe we",
    "start": "3528240",
    "end": "3533799"
  },
  {
    "text": "should take another question that you grab the next question question from the gentleman in the blue there yeah i'",
    "start": "3533799",
    "end": "3539720"
  },
  {
    "text": "would like to hear um are there any examples like some open source projects or anything that uses some of those",
    "start": "3539720",
    "end": "3545960"
  },
  {
    "text": "principles you've been talking about question there uh actually this is",
    "start": "3545960",
    "end": "3552079"
  },
  {
    "text": "a a question I also got from several people walking out of here you know it was a it was a nice presentation you",
    "start": "3552079",
    "end": "3557599"
  },
  {
    "text": "guys did nobody could disagree with that I mean tell us something uh what what should we",
    "start": "3557599",
    "end": "3562839"
  },
  {
    "text": "do um are they here I don't know I'm not I'm not certain maybe some of them are",
    "start": "3562839",
    "end": "3568760"
  },
  {
    "text": "some of them are not um and of course there's stuff you can do um there was",
    "start": "3568760",
    "end": "3574640"
  },
  {
    "text": "that question and then there's a question so you're talking about all this messaging is does that mean we should just use message cues or message",
    "start": "3574640",
    "end": "3580720"
  },
  {
    "text": "queuing everywhere uh it's another question I got in the break here uh but let's take um the first one the of",
    "start": "3580720",
    "end": "3589119"
  },
  {
    "text": "course you can all go and and and write your stuff in earling and that's that's the right way to do it right",
    "start": "3589119",
    "end": "3594599"
  },
  {
    "text": "now and you're laughing uh you're not biased right I'm",
    "start": "3594599",
    "end": "3600160"
  },
  {
    "text": "a bit biased well I I um well I'm I I grew up as an object",
    "start": "3600160",
    "end": "3607200"
  },
  {
    "text": "head right uh I uh I've been programming Java for 15 years 20 years or something",
    "start": "3607200",
    "end": "3614480"
  },
  {
    "text": "like that um and realized I needed to learn something new I mean that's that's this",
    "start": "3614480",
    "end": "3621119"
  },
  {
    "text": "kind of thing I think llang is kind of like what small talk was to O in many ways probably",
    "start": "3621119",
    "end": "3626960"
  },
  {
    "text": "uh you know Small Talk was the first or one of the first really successful o",
    "start": "3626960",
    "end": "3632680"
  },
  {
    "text": "languages um that that gain widespread adoption and the many of the things in",
    "start": "3632680",
    "end": "3638319"
  },
  {
    "text": "oo were designed either in small talk or in simula uh of Scandinavia of course um",
    "start": "3638319",
    "end": "3645680"
  },
  {
    "text": "and even though those two weren't in themselves successful uh in terms of number of deployment Etc the people that",
    "start": "3645680",
    "end": "3652280"
  },
  {
    "text": "learned these things back when they went to school or took the time to learn later on they could use that experience",
    "start": "3652280",
    "end": "3658160"
  },
  {
    "text": "to be successful in so many other ways and apply the patterns that learned from there and so many other things so you",
    "start": "3658160",
    "end": "3663559"
  },
  {
    "text": "see the big C++ Frameworks were written by guys who did small talk first uh uh",
    "start": "3663559",
    "end": "3669280"
  },
  {
    "text": "so in so many different ways there's actually a lot to you can do by just read a book about llang or read a book",
    "start": "3669280",
    "end": "3675520"
  },
  {
    "text": "about AKA which is uh which is typ safe's attempt to copy earling into Java",
    "start": "3675520",
    "end": "3681799"
  },
  {
    "text": "land right you mean attempt to bring it into the next next",
    "start": "3681799",
    "end": "3688240"
  },
  {
    "text": "Millennia well well actually what K said leads very well up to a question that I got",
    "start": "3689280",
    "end": "3694760"
  },
  {
    "text": "over the app and that is um how do I get further resources on the topic now you just said read a book about erline but",
    "start": "3694760",
    "end": "3700880"
  },
  {
    "text": "are there other places that people can go to find resources here yeah absolutely I think there's there's",
    "start": "3700880",
    "end": "3706000"
  },
  {
    "text": "there's tons of resources out there but it's a really good question so I think there's there's both the getting some",
    "start": "3706000",
    "end": "3714279"
  },
  {
    "text": "some some experience like getting your hands dirty and try stuff out which is one approach which if that is your",
    "start": "3714279",
    "end": "3720319"
  },
  {
    "text": "approach I mean downloading a or downloading ear Lang or downloading something else that has these sort of",
    "start": "3720319",
    "end": "3725400"
  },
  {
    "text": "thoughts built into them makes a whole lot of sense but I would like to complement also having the books but",
    "start": "3725400",
    "end": "3731880"
  },
  {
    "text": "also looking at the history uh and as kesten said I mean object orientedness",
    "start": "3731880",
    "end": "3738520"
  },
  {
    "text": "and the actor model which is sort of what underpins both erling and and AKA",
    "start": "3738520",
    "end": "3744119"
  },
  {
    "text": "is in in essence very much the the the core of object orientation it's about",
    "start": "3744119",
    "end": "3750119"
  },
  {
    "text": "objects that communicate by sending messages and uh that's that's how small",
    "start": "3750119",
    "end": "3756000"
  },
  {
    "text": "talk was originally intended to be implemented but given the hardware requirements back then it was not",
    "start": "3756000",
    "end": "3761680"
  },
  {
    "text": "feasible so they had to sort of opt out of that so it's a very it's an old model",
    "start": "3761680",
    "end": "3767079"
  },
  {
    "text": "it's from 73 uh there's been a lot of Papers written on it but there's also",
    "start": "3767079",
    "end": "3772359"
  },
  {
    "text": "books both on erlang on AA and also sort of General uh message driven software",
    "start": "3772359",
    "end": "3779920"
  },
  {
    "text": "books that are useful and also a lot of conference talks I've done probably 20 AA talks the past years Kristen's",
    "start": "3779920",
    "end": "3787039"
  },
  {
    "text": "probably done a lot of airling talks there's probably tons of other airling and AA talks and other technologies that",
    "start": "3787039",
    "end": "3792279"
  },
  {
    "text": "might be more suitable to consume for for you guys so yeah I guess kind of",
    "start": "3792279",
    "end": "3797359"
  },
  {
    "text": "earling Ana some of the poster Childs that are out there the people know of but there's also other great work that's",
    "start": "3797359",
    "end": "3802640"
  },
  {
    "text": "been around the early work on tandem Non-Stop by Jim grah pot Howen covered a",
    "start": "3802640",
    "end": "3808279"
  },
  {
    "text": "lot of this uh and that sort just work went forward like I don't think you",
    "start": "3808279",
    "end": "3813400"
  },
  {
    "text": "actually need big Frameworks to do a lot of this and this is what is kind of odd is we're now in this world we think we",
    "start": "3813400",
    "end": "3819680"
  },
  {
    "text": "need big Frameworks to do everything replicated State machines if you look at the research on that it describes a lot",
    "start": "3819680",
    "end": "3826240"
  },
  {
    "text": "of what you need to do as an alternative those ways are good they're one way of doing it there's also other",
    "start": "3826240",
    "end": "3832279"
  },
  {
    "text": "ways and I think replicated State machines is a really good example of this so if you just write your plan",
    "start": "3832279",
    "end": "3837880"
  },
  {
    "text": "business logic in a language using no libraries at all just basic data structures and write your business logic",
    "start": "3837880",
    "end": "3844240"
  },
  {
    "text": "you put a queue in front of that and I mean an inmemory process queue really simple and a queue coming out of it okay",
    "start": "3844240",
    "end": "3851480"
  },
  {
    "text": "you've got some interesting problems now well how do I make this persistent well just a persistent log there are tools",
    "start": "3851480",
    "end": "3858680"
  },
  {
    "text": "out there will let you do that you can replicate that to more than one place and then you can run those so you can",
    "start": "3858680",
    "end": "3864760"
  },
  {
    "text": "start building this up from really simple Primitives we just are not thinking that way we've been conditioned",
    "start": "3864760",
    "end": "3870039"
  },
  {
    "text": "to think you need a great big j2e container where's the product that lets me do this it does raise questions like",
    "start": "3870039",
    "end": "3876400"
  },
  {
    "text": "okay how do I do hot upgrade well you're sending messages around those messages need to be versioned you need a support",
    "start": "3876400",
    "end": "3882760"
  },
  {
    "text": "message extension on that so you always add Fields you never take Fields away you start to learn these things over",
    "start": "3882760",
    "end": "3889279"
  },
  {
    "text": "time as you work in the area I think that there is good work out there it's hard to get it all together in one place",
    "start": "3889279",
    "end": "3896039"
  },
  {
    "text": "I think is the slight difficulty that we have at the moment so I this is all very",
    "start": "3896039",
    "end": "3901079"
  },
  {
    "text": "much convergent right uh so um so it's happening these years right getting into",
    "start": "3901079",
    "end": "3906640"
  },
  {
    "text": "the mainstream and I think that there's a lot of interest in in microservices which is also very much related to this",
    "start": "3906640",
    "end": "3912240"
  },
  {
    "text": "because these microservices naturally have apis or version uh versioned",
    "start": "3912240",
    "end": "3919160"
  },
  {
    "text": "message me messages or whatnot in front of them um so that's another aspect of",
    "start": "3919160",
    "end": "3924960"
  },
  {
    "text": "of it that also kind of leans this way I would say U microservices that's another",
    "start": "3924960",
    "end": "3930520"
  },
  {
    "text": "Hot Topic that everybody is I don't I don't know if if we look into the future there might be a next Generation",
    "start": "3930520",
    "end": "3936079"
  },
  {
    "text": "programming language that um kind of takes all these great ideas and is more",
    "start": "3936079",
    "end": "3941960"
  },
  {
    "text": "modern than llang and doesn't have this actess tacked onto the side like we have",
    "start": "3941960",
    "end": "3948480"
  },
  {
    "text": "in in AKA uh but actually has it has processes as as first class um",
    "start": "3948480",
    "end": "3956200"
  },
  {
    "text": "that might I could very well see that happen I mean we have uh Dart is trying to do that at least I don't think they",
    "start": "3956200",
    "end": "3962319"
  },
  {
    "text": "got it exactly right but um but it's go go well go is another contender in that",
    "start": "3962319",
    "end": "3969119"
  },
  {
    "text": "space right they have they have a shared memory system there like a uh mutable shared State uh basic assumption but",
    "start": "3969119",
    "end": "3977559"
  },
  {
    "text": "that's another that's also a step in the right direction and there's there is um what's it called milla's um rust yeah is",
    "start": "3977559",
    "end": "3985799"
  },
  {
    "text": "I think very interesting yeah and I think I would like to add as well like while I agree that you can handroll all",
    "start": "3985799",
    "end": "3992440"
  },
  {
    "text": "these things yourselves uh which I have done um I think you find it that it's very",
    "start": "3992440",
    "end": "3999000"
  },
  {
    "text": "common to see that you're repeating yourself when it comes to the application of these things so they all",
    "start": "3999000",
    "end": "4004880"
  },
  {
    "text": "the patterns for uh fanin operations like you're accepting multiple streams",
    "start": "4004880",
    "end": "4009960"
  },
  {
    "text": "of messages and you need to do something with them or the the the inverse where you're sending out um to multiple",
    "start": "4009960",
    "end": "4017400"
  },
  {
    "text": "recipients um they tend to be very very they're few but they tend to be really",
    "start": "4017400",
    "end": "4023680"
  },
  {
    "text": "reusable so there's a lot of value in not having Frameworks but really having",
    "start": "4023680",
    "end": "4029599"
  },
  {
    "text": "tool boxes where you can opt in to the tools that make sense for this specific",
    "start": "4029599",
    "end": "4034839"
  },
  {
    "text": "task tying back to like the circuit breaker pattern where you don't want to handroll it yourself perhaps but want to",
    "start": "4034839",
    "end": "4041559"
  },
  {
    "text": "have it as a tool in your toolbox um and also if you go having multi like having",
    "start": "4041559",
    "end": "4048400"
  },
  {
    "text": "an earling system that communicates with an AA system that communicates with some tandem system from the 80s or something",
    "start": "4048400",
    "end": "4055760"
  },
  {
    "text": "um it's the same kind of problems that we're solving it's communication it's",
    "start": "4055760",
    "end": "4061160"
  },
  {
    "text": "about coordination and making sure that the flow of information stays as it should so these different systems are",
    "start": "4061160",
    "end": "4069039"
  },
  {
    "text": "going to have the same kinds of Primitives built in to deal with these things because they are fundamental",
    "start": "4069039",
    "end": "4074680"
  },
  {
    "text": "problems so it's the toolbox approach I think is very very fitting in this case",
    "start": "4074680",
    "end": "4081079"
  },
  {
    "text": "because it it means that you can opt into what kinds of stuff that you need I think uh you know we learn by actually",
    "start": "4081079",
    "end": "4088119"
  },
  {
    "text": "trying things uh I know that myself if I want to learn a new language I actually have a you know uh something that I",
    "start": "4088119",
    "end": "4095079"
  },
  {
    "text": "actually write in the language and you know see how it fits and that's the same thing I've done for you know like 15 20",
    "start": "4095079",
    "end": "4102199"
  },
  {
    "text": "years uh you know to really learn a language it's a non- trivia exercise I actually write a small little mail",
    "start": "4102199",
    "end": "4107679"
  },
  {
    "text": "server it has a lot of different aspects to it um you know and uh this year I did",
    "start": "4107679",
    "end": "4113600"
  },
  {
    "text": "it and go it took me you know a little bit longer than an afternoon but it not too much longer so actually try",
    "start": "4113600",
    "end": "4120000"
  },
  {
    "text": "something you know if you are struggling with something where you're looking at uh say a refactor and you're like wow",
    "start": "4120000",
    "end": "4125920"
  },
  {
    "text": "I'd really like to separate these two things actually try to separate them put one on one server one on another connect",
    "start": "4125920",
    "end": "4131798"
  },
  {
    "text": "them with a TCP connection work through that see what what you get I mean you're",
    "start": "4131799",
    "end": "4137080"
  },
  {
    "text": "going to learn more by looking at that and trying to find solutions for it than you're going to probably learn uh you",
    "start": "4137080",
    "end": "4142798"
  },
  {
    "text": "know in just sort of reading through you know uh other things that are written you Pro by doing that you'll probably",
    "start": "4142799",
    "end": "4149278"
  },
  {
    "text": "encounter all kinds of edges and all kinds of different ways of doing it and that simple thought exercise even if you",
    "start": "4149279",
    "end": "4154480"
  },
  {
    "text": "don't actually carry it through or even use it you may find that there's some interesting things that you've had to think about by doing",
    "start": "4154480",
    "end": "4161040"
  },
  {
    "text": "it okay thank you I think we'll need to take some questions from the audience because the D are un stub today uh so",
    "start": "4161040",
    "end": "4167000"
  },
  {
    "text": "first we have helina question about the virtualization said earlier that",
    "start": "4167000",
    "end": "4173640"
  },
  {
    "text": "building [Music] reation but are there any some kind of",
    "start": "4173640",
    "end": "4179199"
  },
  {
    "text": "high performance virtual images window yeah machine they can use is it",
    "start": "4179199",
    "end": "4189560"
  },
  {
    "text": "abandoned okay so the question is can you apply virtualization to reactive applications I said yes you absolutely",
    "start": "4189560",
    "end": "4196719"
  },
  {
    "text": "can but you have to be aware of the consequences and what you're dealing with so for example whenever you're uh",
    "start": "4196719",
    "end": "4204040"
  },
  {
    "text": "setting up a virtual machine how you connect that to a network really matters for your responsiveness now if you're",
    "start": "4204040",
    "end": "4209760"
  },
  {
    "text": "not dealing with high throughput and low latency it's not such an issue if you're purely dealing with resilience and",
    "start": "4209760",
    "end": "4215920"
  },
  {
    "text": "elasticity that's probably fine but if your load is going up significantly or you just want to be efficient these",
    "start": "4215920",
    "end": "4222280"
  },
  {
    "text": "things start to matter what's nice is are our virtual machines now are greatly improving we went through the era of",
    "start": "4222280",
    "end": "4229159"
  },
  {
    "text": "having the likes of xan which is a very inefficient virtualization system we then went into KVM which was a big step",
    "start": "4229159",
    "end": "4235840"
  },
  {
    "text": "forward much better but now we're getting to things like containers like lxc and Docker it's getting much more",
    "start": "4235840",
    "end": "4241719"
  },
  {
    "text": "efficient now and so we're getting the ability to have really nice lightweight but also good quality containers but we",
    "start": "4241719",
    "end": "4248440"
  },
  {
    "text": "still just we we we need that ability to configure the io particularly but that's",
    "start": "4248440",
    "end": "4253640"
  },
  {
    "text": "the same in a native World it just is an extra step we're too often having the problem whereby people write to dis or",
    "start": "4253640",
    "end": "4260120"
  },
  {
    "text": "write to network and they're just unaware of what they're doing they're not configuring buffer sizes correctly",
    "start": "4260120",
    "end": "4265640"
  },
  {
    "text": "they're not configuring the routs through their operating system efficiently and we just need the responsibility of knowing that and",
    "start": "4265640",
    "end": "4272199"
  },
  {
    "text": "setting up and it's it's not a huge job it's just something we abdicate too",
    "start": "4272199",
    "end": "4277600"
  },
  {
    "text": "often but I guess that applies as well to all kinds of virtual machines especially you get the sort of an",
    "start": "4277600",
    "end": "4284400"
  },
  {
    "text": "aggregate effect if you're running a virtual machine within a virtualized operating system on some virtualized uh",
    "start": "4284400",
    "end": "4291840"
  },
  {
    "text": "Hardware on some virtualized Planet I don't know it's it Aggregates right so being aware of both the settings and",
    "start": "4291840",
    "end": "4299480"
  },
  {
    "text": "configuration that applies to achieve the goals that sort of are important for",
    "start": "4299480",
    "end": "4304760"
  },
  {
    "text": "that specific system I think uh that's the sort of general advice mhm yeah we",
    "start": "4304760",
    "end": "4310880"
  },
  {
    "text": "got another question from the gentleman over there what the difference between",
    "start": "4310880",
    "end": "4316239"
  },
  {
    "text": "toolbox and framework for me framework is just way",
    "start": "4316239",
    "end": "4321920"
  },
  {
    "text": "of collecting tools yeah it's it's a good question so I'll take a stab and let me see what the other guys say so",
    "start": "4321920",
    "end": "4328400"
  },
  {
    "text": "framework for me is something that sets the frame of your application it's something that you work within and",
    "start": "4328400",
    "end": "4334960"
  },
  {
    "text": "toolbox for me is something that you opt into when you need it so if you always have to live inside the frame no matter",
    "start": "4334960",
    "end": "4343360"
  },
  {
    "text": "where you if you need it or use it that's your your framework that's the thing that exists around you uh so",
    "start": "4343360",
    "end": "4350639"
  },
  {
    "text": "that's my personal definition not sure what the other guy say yeah exists around you you being the program of",
    "start": "4350639",
    "end": "4357040"
  },
  {
    "text": "course that you're writing right I mean I'm imagining I'm I'm the little guy not",
    "start": "4357040",
    "end": "4362239"
  },
  {
    "text": "physically you know you have that not physically no no but you know when you",
    "start": "4362239",
    "end": "4369719"
  },
  {
    "text": "don't you have that feeling when you're programming I'm sitting inside that program I'm writing and I imagine I'm pulling levers around so when you do",
    "start": "4369719",
    "end": "4376320"
  },
  {
    "text": "that and and and it's all around you then it's a framework but if there's something you can opt in and you can",
    "start": "4376320",
    "end": "4381840"
  },
  {
    "text": "have multiple of these typically you can only have one framework but you have multiple yes um libraries",
    "start": "4381840",
    "end": "4388960"
  },
  {
    "text": "or stuff like that toolboxes yeah okay thank you we got another one yeah um I'm",
    "start": "4388960",
    "end": "4395480"
  },
  {
    "text": "have been here for a long time and well the the question is where are the boundaries between these things is it",
    "start": "4395480",
    "end": "4401159"
  },
  {
    "text": "where where are they and and what's the difference between the levels of the operating system and the application",
    "start": "4401159",
    "end": "4407120"
  },
  {
    "text": "Level I think I think the the the answer to this",
    "start": "4407120",
    "end": "4413239"
  },
  {
    "text": "it lies in that what happens when you start do programming in this way is you think you end up thinking a lot about",
    "start": "4413239",
    "end": "4418440"
  },
  {
    "text": "protocols right protocols become very important uh and it's something we're not used to thinking that much about as",
    "start": "4418440",
    "end": "4425239"
  },
  {
    "text": "as programmers so there's a whole discipline of protocol design thinking in terms of actually sending data not",
    "start": "4425239",
    "end": "4432320"
  },
  {
    "text": "objects you're sending information that needs to get flattened and get get",
    "start": "4432320",
    "end": "4437719"
  },
  {
    "text": "reenacted on on the other side and whatnot so um so there's a lot of",
    "start": "4437719",
    "end": "4444120"
  },
  {
    "text": "practices and and experiences that we haven't really talked that much about but they come kind of out of this being",
    "start": "4444120",
    "end": "4449719"
  },
  {
    "text": "forced to write Pro protocols right so Todd talked about this uh some right um",
    "start": "4449719",
    "end": "4457719"
  },
  {
    "text": "so when you're forced to do that and that's kind of one of the core ideas uh you start thinking and many",
    "start": "4457719",
    "end": "4465280"
  },
  {
    "text": "different levels you start thinking differently right um Todd mentioned a few but just the fact that having um",
    "start": "4465280",
    "end": "4471520"
  },
  {
    "text": "having things be flattened um you need to have correlation ideas explicitly between there's a message coming in and",
    "start": "4471520",
    "end": "4478120"
  },
  {
    "text": "I know I need to know what what responses um you need you end up thinking about",
    "start": "4478120",
    "end": "4485600"
  },
  {
    "text": "things going two way we we're used to from the O and the old RPC is World",
    "start": "4485600",
    "end": "4491440"
  },
  {
    "text": "we're used to these calling in and getting a reply things are function",
    "start": "4491440",
    "end": "4496520"
  },
  {
    "text": "they're like functions that have a return value right so that's we use the same abstraction across the network but",
    "start": "4496520",
    "end": "4503000"
  },
  {
    "text": "when you go to protocols you suddenly realize that it it's a two-way street you don't just have an interface a set",
    "start": "4503000",
    "end": "4508800"
  },
  {
    "text": "of of of actions that you can call on a remote site it's actually there's a",
    "start": "4508800",
    "end": "4513880"
  },
  {
    "text": "conversation going on uh and so so the notion of protocol is like a two-way",
    "start": "4513880",
    "end": "4519639"
  },
  {
    "text": "interface and almost if you take a Java interface or CP interface that's a one one-way thing right you call it um with",
    "start": "4519639",
    "end": "4527159"
  },
  {
    "text": "a protocol you have you need to have a notion of a of a conversation right that's it's like a formal description of",
    "start": "4527159",
    "end": "4534400"
  },
  {
    "text": "what what is the kinds of conversations we can have here and I think that's a very profound thing that um we haven't",
    "start": "4534400",
    "end": "4539719"
  },
  {
    "text": "really talked that much about and I'm I only have this vague feeling of this this really changes something",
    "start": "4539719",
    "end": "4545719"
  },
  {
    "text": "significantly uh um it it does change a number of things I think the OSI model",
    "start": "4545719",
    "end": "4551600"
  },
  {
    "text": "is interesting so you got the for those who don't know there's seven layers OSI model it's everything from the midi that",
    "start": "4551600",
    "end": "4557159"
  },
  {
    "text": "you deal with the networking right up to your application stack uh if any was in my talk earlier one things I runed a",
    "start": "4557159",
    "end": "4563480"
  },
  {
    "text": "little bit about is how we use abstraction and how we misuse abstraction because with as dyra very",
    "start": "4563480",
    "end": "4569080"
  },
  {
    "text": "well pointed out abstraction is about being precise it's not about hiding it's not about being vague you add a layer of",
    "start": "4569080",
    "end": "4575440"
  },
  {
    "text": "abstraction to be more precise so if you take the OSI model if anybody's programmed in the financial space you",
    "start": "4575440",
    "end": "4581880"
  },
  {
    "text": "use a protocol called Fix financial instruments Exchange prot protol they have conflated different layers of this",
    "start": "4581880",
    "end": "4587960"
  },
  {
    "text": "so what this is this is basic good design you should have separation of concerns at any given layer and you",
    "start": "4587960",
    "end": "4594560"
  },
  {
    "text": "don't conflate concerns together because it causes problems so one of the things that they did within the fixed model is",
    "start": "4594560",
    "end": "4600600"
  },
  {
    "text": "they've got a sequencing protocol within their uh interaction it should be at",
    "start": "4600600",
    "end": "4606360"
  },
  {
    "text": "layer five it should be session only they made this available at layer seven",
    "start": "4606360",
    "end": "4611679"
  },
  {
    "text": "but they also didn't make it properly available so what happens is You' get session level layer five things",
    "start": "4611679",
    "end": "4618080"
  },
  {
    "text": "incrementing sequence counters that you need to know at layer seven and as a",
    "start": "4618080",
    "end": "4623239"
  },
  {
    "text": "result you cannot make a resilient system because you cannot detect loss and deal with it at the upper layer",
    "start": "4623239",
    "end": "4628960"
  },
  {
    "text": "seven this is Design This is really basic good design like getting back to",
    "start": "4628960",
    "end": "4634239"
  },
  {
    "text": "the basics of Designing protocols separating the concern knowing how these things work and I think once you start",
    "start": "4634239",
    "end": "4640920"
  },
  {
    "text": "getting into s sync things they go people ask about virtualization is the opp operating system a library like one",
    "start": "4640920",
    "end": "4646600"
  },
  {
    "text": "of the fundamental things with how we deal with operating systems is there synchronous apis this is one of our",
    "start": "4646600",
    "end": "4652159"
  },
  {
    "text": "performance issues so imagine you have an asynchronous API into an operating system like I'm sending packets to",
    "start": "4652159",
    "end": "4658600"
  },
  {
    "text": "network and then I'm getting responses I'm not send block send block that's",
    "start": "4658600",
    "end": "4663679"
  },
  {
    "text": "what's slowing us down we should just be able to send send send and then get responses of what's actually been",
    "start": "4663679",
    "end": "4669239"
  },
  {
    "text": "achieved and that's how we start getting things together that's the protocol and protocols go",
    "start": "4669239",
    "end": "4675440"
  },
  {
    "text": "Way Beyond just even messages apis like you deal with a file system you open a",
    "start": "4675440",
    "end": "4680679"
  },
  {
    "text": "file you do multiple reads or WR and then you close a file that is a protocol of interaction many people when they",
    "start": "4680679",
    "end": "4687400"
  },
  {
    "text": "design their apis don't document their protocol that's actually way more interesting than the API itself so I",
    "start": "4687400",
    "end": "4695800"
  },
  {
    "text": "think it's it's one of the fundamental things and I've had the pleasure of working Todd for a while and he pretty much only does protocols but it's great",
    "start": "4695800",
    "end": "4702480"
  },
  {
    "text": "to say that that's a normal way of thinking it should be standard for us instead we're just too busy learning the",
    "start": "4702480",
    "end": "4708560"
  },
  {
    "text": "latest version of angler JZ or whatever it happens to be which just is fluff it's fluff because it'll be gone",
    "start": "4708560",
    "end": "4714120"
  },
  {
    "text": "tomorrow like how many people can design a good protocol how many people really know what separation of concerns means",
    "start": "4714120",
    "end": "4720760"
  },
  {
    "text": "how do we decouple stuff what's cohesive the things that stay with you for life in this",
    "start": "4720760",
    "end": "4726800"
  },
  {
    "text": "industry it's a good idea to go to the Angela JS Presentation tomorrow I'm sorry I just have to intrude with some",
    "start": "4726800",
    "end": "4732400"
  },
  {
    "text": "questions um so we have a lot of questions so and",
    "start": "4732400",
    "end": "4737840"
  },
  {
    "text": "and there's some in the app and I know there's also somebody waiting in the audience but I'll just uh remember the app as well if processes should be",
    "start": "4737840",
    "end": "4743719"
  },
  {
    "text": "allowed to crash on a bad message are there any good patterns to avoid crashing repeatedly on the same message",
    "start": "4743719",
    "end": "4750080"
  },
  {
    "text": "or similar messages sorry I've dealt with this for",
    "start": "4750080",
    "end": "4755560"
  },
  {
    "text": "as a messaging vendor for uh 15 years uh poison messages um typically what",
    "start": "4755560",
    "end": "4763000"
  },
  {
    "text": "happens in a lot of guaranteed messaging systems is a poison message causes an infinite replay I'll give you an example",
    "start": "4763000",
    "end": "4769800"
  },
  {
    "text": "you receive a message you crash but you never acknowledged it so when you come back up you read that same message you",
    "start": "4769800",
    "end": "4775600"
  },
  {
    "text": "then crash you then start back up you read that same message you then crash um",
    "start": "4775600",
    "end": "4782320"
  },
  {
    "text": "the way that these things are dealt with is usually human intervention I wish that I was joking um people have done",
    "start": "4782320",
    "end": "4790520"
  },
  {
    "text": "all kinds of different things to try to avoid uh poison messages such as as you try too many times and then you give up",
    "start": "4790520",
    "end": "4798840"
  },
  {
    "text": "um the best way that I have seen to actually deal with this is actually to have uh the system understand that you",
    "start": "4798840",
    "end": "4806440"
  },
  {
    "text": "have tried this so many times I'm not going to let you try it again um the app",
    "start": "4806440",
    "end": "4812560"
  },
  {
    "text": "sometimes has to get out of the way and be made to get out of the way um so it's it's a difficult one but uh you know the",
    "start": "4812560",
    "end": "4819440"
  },
  {
    "text": "best thing I've seen is actually don't let the app process it have something else which can tell when this is",
    "start": "4819440",
    "end": "4825400"
  },
  {
    "text": "happening usually by observation and actually forbidding the application from processing it and then let a human after",
    "start": "4825400",
    "end": "4832520"
  },
  {
    "text": "that intervene and figure out what to do yeah I would add the the app approach to that is like I think you do that at a",
    "start": "4832520",
    "end": "4839120"
  },
  {
    "text": "network level but the mistake is how most people do error handling they they they litter their code with exception",
    "start": "4839120",
    "end": "4845120"
  },
  {
    "text": "handlers and then it becomes difficult I think you do two things you deal with SS locally if you can if you don't you let",
    "start": "4845120",
    "end": "4852880"
  },
  {
    "text": "them go right to the top and then you deal with them and you move State forward so I like to have a very top",
    "start": "4852880",
    "end": "4858320"
  },
  {
    "text": "level error Handler and if something's a poison message you mark it and you move on you make sure the top level can move",
    "start": "4858320",
    "end": "4864679"
  },
  {
    "text": "on your state and keep going if you've got stuff in between it's usually very",
    "start": "4864679",
    "end": "4870120"
  },
  {
    "text": "difficult to make the right decision and yet you see people have the catching exceptions catching exceptions doing",
    "start": "4870120",
    "end": "4876400"
  },
  {
    "text": "stuff ignoring them it's usually a smell if I I like to see an exception Handler right at the point of where you deal",
    "start": "4876400",
    "end": "4881760"
  },
  {
    "text": "with it or at the very top level if there's anything between Queen really got to question why so um so I'd like to",
    "start": "4881760",
    "end": "4889920"
  },
  {
    "text": "add another angle on this question too because in in llang land or the idiom",
    "start": "4889920",
    "end": "4894960"
  },
  {
    "text": "from llang not because it's lling you typically you typically create a new isolated session or something something",
    "start": "4894960",
    "end": "4902080"
  },
  {
    "text": "like that for every new user new every client every TCP connection has its own",
    "start": "4902080",
    "end": "4907840"
  },
  {
    "text": "process that isolates your interaction with that client um so because processes are",
    "start": "4907840",
    "end": "4915040"
  },
  {
    "text": "so lightweight you could just create a new isolated process for for every every socket uh and then the processing goes",
    "start": "4915040",
    "end": "4921440"
  },
  {
    "text": "on there so so the earling way to handle this would just be you have this poon",
    "start": "4921440",
    "end": "4926520"
  },
  {
    "text": "message would crash the process the client would lose its uh socket connection and would have to retry right",
    "start": "4926520",
    "end": "4933880"
  },
  {
    "text": "so that doesn't doesn't uh poison the rest of the system that would be a typical uh practical way of using doing",
    "start": "4933880",
    "end": "4941199"
  },
  {
    "text": "this uh in earling yeah I think we we do sort of the same thing in a as well I",
    "start": "4941199",
    "end": "4946800"
  },
  {
    "text": "mean it's about delegating risky operations to where they can f they can fail safely um I I I would also not",
    "start": "4946800",
    "end": "4954960"
  },
  {
    "text": "recommend to reprocess messages that are poisonous because they're they're poisonous so uh it's better to just send",
    "start": "4954960",
    "end": "4962360"
  },
  {
    "text": "them somewhere else where they can be either stored for later analysis or just dropping them and and and just going on",
    "start": "4962360",
    "end": "4969120"
  },
  {
    "text": "with life so I think those are the okay thank you then we have a question again from the gentlemen the dark blue I'd",
    "start": "4969120",
    "end": "4975960"
  },
  {
    "text": "like to hear I know that um a lot of the stuff you're talking about about messaging and message driven systems are",
    "start": "4975960",
    "end": "4983600"
  },
  {
    "text": "something that uh wolf and hope also have written a lot of things about but I was wondering why does it come back it's",
    "start": "4983600",
    "end": "4991639"
  },
  {
    "text": "something that we haven't that we had in a lot of years why is it relevant now",
    "start": "4991639",
    "end": "4997840"
  },
  {
    "text": "again I I think that um uh when we talk actually up here about me messaging",
    "start": "4997840",
    "end": "5004120"
  },
  {
    "text": "we're actually talking about many different things we're not just talking about something like JMS or uh mq or or",
    "start": "5004120",
    "end": "5011719"
  },
  {
    "text": "queing or even shared memory we're actually talking about all kinds of communication mechanisms with the basic",
    "start": "5011719",
    "end": "5019000"
  },
  {
    "text": "uh communication mechanism being a blob of data that's sent from one point to another it could be over shared memory",
    "start": "5019000",
    "end": "5025639"
  },
  {
    "text": "it could be over the network it could be um you know over all kinds of different",
    "start": "5025639",
    "end": "5032120"
  },
  {
    "text": "things uh so when we're we're we're we're we're kind of using messaging in a little different way when we talk",
    "start": "5032120",
    "end": "5037679"
  },
  {
    "text": "because it's there's so many broad options for how things communicate like how AA actually communicates internally",
    "start": "5037679",
    "end": "5044719"
  },
  {
    "text": "is actually different than how Airline communicates internally you know and uh what things like that Mark and Martin",
    "start": "5044719",
    "end": "5050600"
  },
  {
    "text": "and I are very familiar with in terms of shared memory uh lock free data structures Lock Free and weight free",
    "start": "5050600",
    "end": "5056120"
  },
  {
    "text": "data structures is very different than than those so we we sort of have you",
    "start": "5056120",
    "end": "5062000"
  },
  {
    "text": "know used message and message driven or Mage passing is sort of an overarching term but you're not limited anything",
    "start": "5062000",
    "end": "5069239"
  },
  {
    "text": "that Pro and another thing that kind of uh occurred to me while sort of putting together a couple of the slides was",
    "start": "5069239",
    "end": "5075760"
  },
  {
    "text": "anything that provides an asynchronous binary barrier is actually kind of",
    "start": "5075760",
    "end": "5081119"
  },
  {
    "text": "messaging so anything it gives you that uh it provides that in other words or it",
    "start": "5081119",
    "end": "5087239"
  },
  {
    "text": "forces you into that but it also you know anything that provides that kind of FS the same the same uh the same thing",
    "start": "5087239",
    "end": "5093960"
  },
  {
    "text": "but it so uh just to jump in the new thing here I think I read as the underlying current in this is that we",
    "start": "5093960",
    "end": "5100800"
  },
  {
    "text": "also we also now promoting in in process messaging right so the way you you",
    "start": "5100800",
    "end": "5106800"
  },
  {
    "text": "construct a program that you normally think of as running in one jvm for instance right you also think of the way",
    "start": "5106800",
    "end": "5114040"
  },
  {
    "text": "that components inside a single jvm talk together that would also be by means of",
    "start": "5114040",
    "end": "5119199"
  },
  {
    "text": "messaging so I think bringing it down to that level I think that's uh it's maybe",
    "start": "5119199",
    "end": "5125040"
  },
  {
    "text": "what's not obvious in our first presentation is actually that's the thing we Al we all have in common is we",
    "start": "5125040",
    "end": "5130400"
  },
  {
    "text": "we actually want to push messaging and all the nice patterns that Gregor H Hopey and all kinds of other people have",
    "start": "5130400",
    "end": "5136320"
  },
  {
    "text": "promoted all the way into the application so it's part of it I think Victor mentioned this and there's",
    "start": "5136320",
    "end": "5141920"
  },
  {
    "text": "another thing we we haven't mentioned so far but also shows this is CSP communicate and sequential processes",
    "start": "5141920",
    "end": "5147040"
  },
  {
    "text": "with the likes of go is beasted upon I started out programming transputers and not having shared memory is a great",
    "start": "5147040",
    "end": "5153719"
  },
  {
    "text": "thing to get us used to you communicate by passing messages you build your own local state like Victor says like we",
    "start": "5153719",
    "end": "5160239"
  },
  {
    "text": "don't go reach into each other's heads like I could ask you your name that's sending you a message to find out I",
    "start": "5160239",
    "end": "5166000"
  },
  {
    "text": "could also go over and crack open your skull find the neurons and represent your name and do that but actually when",
    "start": "5166000",
    "end": "5172320"
  },
  {
    "text": "we share data we so often do that in shared memory or via databases it's a very unclean way of doing it and it's",
    "start": "5172320",
    "end": "5179119"
  },
  {
    "text": "not scalable whereas if you just send a message you build your own model estate we've all got our own representation of",
    "start": "5179119",
    "end": "5185280"
  },
  {
    "text": "the world and we do that by stimulus going in and out we Design Systems like that it scales up much",
    "start": "5185280",
    "end": "5192560"
  },
  {
    "text": "better are you ready for another question that's one in the app how do these Concepts work with Concepts like",
    "start": "5192560",
    "end": "5198639"
  },
  {
    "text": "cqrs and invent sourcing you remember what cqrs is yeah I'll take that so command curity",
    "start": "5198639",
    "end": "5205080"
  },
  {
    "text": "responsib responsibility segregation so this is really nice there",
    "start": "5205080",
    "end": "5210360"
  },
  {
    "text": "one thing I like is to be able to serialize and in coming set of messages",
    "start": "5210360",
    "end": "5215560"
  },
  {
    "text": "events so this is the whole thing what's the difference between a message and an event well an event is something that happens at an instant in time a message",
    "start": "5215560",
    "end": "5222360"
  },
  {
    "text": "is a web transmitting that so actually I think messages are more interesting because you can transmit all sorts of",
    "start": "5222360",
    "end": "5227639"
  },
  {
    "text": "interesting things inside messages events are one of those things but let's say events are just things that are",
    "start": "5227639",
    "end": "5233199"
  },
  {
    "text": "happening in the world there are stimulus that's coming in they're all coming in as messages we serialize that",
    "start": "5233199",
    "end": "5239239"
  },
  {
    "text": "stream of messages from there we can rebuild whatever state we want this is the view of the world that we can all",
    "start": "5239239",
    "end": "5245920"
  },
  {
    "text": "have and so by doing that I can build a view of the world and if I take that",
    "start": "5245920",
    "end": "5251600"
  },
  {
    "text": "into a primary node wherever that happens to be I can mutate that I can build that model up I can then send that",
    "start": "5251600",
    "end": "5256920"
  },
  {
    "text": "to lots of other nodes because you can have one or more nodes being the central Truth for mutation but then others are",
    "start": "5256920",
    "end": "5264119"
  },
  {
    "text": "just all lagging that building another copy of the model you can then query that in any sort of way this fits very",
    "start": "5264119",
    "end": "5271159"
  },
  {
    "text": "well with that sort of model now there is a lot of conf confusion around what is event sourcing versus event driven",
    "start": "5271159",
    "end": "5278080"
  },
  {
    "text": "versus whatever I think it comes down fundamentally two things you either take",
    "start": "5278080",
    "end": "5283199"
  },
  {
    "text": "pure events messages whatever you call them in and from that you build a model",
    "start": "5283199",
    "end": "5288360"
  },
  {
    "text": "and that model then is built as a set of Deltas from that and so you've done that the other way some people talk about is",
    "start": "5288360",
    "end": "5294840"
  },
  {
    "text": "what you store is the actual mutation data itself and from there you you",
    "start": "5294840",
    "end": "5300080"
  },
  {
    "text": "change the model rather than build it on that I would caution people slightly if you're going into building resilience",
    "start": "5300080",
    "end": "5306280"
  },
  {
    "text": "systems that there is not so much research done on the idea of storing the Deltas up front because all of the work",
    "start": "5306280",
    "end": "5312920"
  },
  {
    "text": "on resilience you go back to what pot Howen and Jim Gray and all have done is you store the incoming events you keep",
    "start": "5312920",
    "end": "5318520"
  },
  {
    "text": "the steer machine and that way you can rebuild the same results as distributed State machines the other approach is you",
    "start": "5318520",
    "end": "5324239"
  },
  {
    "text": "do the mutations and you save the Delta afterwards that's what databases do there is a current wave on the web of",
    "start": "5324239",
    "end": "5330560"
  },
  {
    "text": "people saying well I'll stve what will actually change as an event now it's working in most cases but it",
    "start": "5330560",
    "end": "5337119"
  },
  {
    "text": "has nowhere near the analysis and research done on it for building highly resilient systems that those other two",
    "start": "5337119",
    "end": "5343159"
  },
  {
    "text": "have it's a bit like build your own security you don't just invent their stuff and it sort of works most of the",
    "start": "5343159",
    "end": "5348840"
  },
  {
    "text": "time you want to do stuff that's been peer reviewed well understood and then it's much more safe and",
    "start": "5348840",
    "end": "5356199"
  },
  {
    "text": "resilient anybody else in the panel wants to say something about cqrs and",
    "start": "5356560",
    "end": "5361960"
  },
  {
    "text": "events probably better to just try to get through the questions I can speak about this for hours the trouble",
    "start": "5361960",
    "end": "5369760"
  },
  {
    "text": "is we gotten through the questions that's good that's good then",
    "start": "5369760",
    "end": "5375560"
  },
  {
    "text": "we can we between them and beer but are there any questions from the",
    "start": "5375560",
    "end": "5380080"
  },
  {
    "text": "audience who wants beer okay there's one there what about eventual consistency",
    "start": "5382600",
    "end": "5387920"
  },
  {
    "text": "and the users point of view so you're talking about asany and we have to make sure that the users get a response at",
    "start": "5387920",
    "end": "5394880"
  },
  {
    "text": "the time but maybe you have some running process that take too long to end what do you do then uh personally I like to",
    "start": "5394880",
    "end": "5402320"
  },
  {
    "text": "break down any long running task into a set of small tasks that are all bounded on time and the great way to deal with",
    "start": "5402320",
    "end": "5408639"
  },
  {
    "text": "users is give them constant progress updates keeps them",
    "start": "5408639",
    "end": "5413760"
  },
  {
    "text": "happy I also think that it plays into the you know the sort of event sourcing model actually I I come at this in a",
    "start": "5413800",
    "end": "5420920"
  },
  {
    "text": "little different way I look at ordering and time is not being you know things are always strictly ordered eventual",
    "start": "5420920",
    "end": "5427679"
  },
  {
    "text": "consistency actually makes much more sense to me than any other type of you know transactional update so to me uh",
    "start": "5427679",
    "end": "5435400"
  },
  {
    "text": "you know a state has one other index to it time you know so state is bounded by",
    "start": "5435400",
    "end": "5440840"
  },
  {
    "text": "time I I think actually that as humans we actually understand this at a certain point if you query a system and you ask",
    "start": "5440840",
    "end": "5448080"
  },
  {
    "text": "them for the for the status we usually think of the latest status but and and to different people that may mean a",
    "start": "5448080",
    "end": "5454440"
  },
  {
    "text": "different time but if you attach time to it like a database read where you you",
    "start": "5454440",
    "end": "5459480"
  },
  {
    "text": "actually say What's the value of uh you know number of followers at a particular time that makes much more sense and so I",
    "start": "5459480",
    "end": "5466920"
  },
  {
    "text": "think by adding something like time to it you naturally make it so it's unambiguous and it's and you get rid of",
    "start": "5466920",
    "end": "5474280"
  },
  {
    "text": "some of the hairiness that is around consistency in that case so I mean and that maybe that's just the way I kind of",
    "start": "5474280",
    "end": "5479880"
  },
  {
    "text": "view it but I think it makes it cleaner yeah um for some reason we' we' warped our minds into thinking that the entire",
    "start": "5479880",
    "end": "5486520"
  },
  {
    "text": "world can be synchronized all the time right uh so lots of lots of these Frameworks uh we've seen over the last",
    "start": "5486520",
    "end": "5493440"
  },
  {
    "text": "20 years have tried to hide any kind of inconsistency so we've gotten used to this um this this world view where",
    "start": "5493440",
    "end": "5501000"
  },
  {
    "text": "everything should be consistent uh but I think uh it it's much more natural I",
    "start": "5501000",
    "end": "5506520"
  },
  {
    "text": "completely agree um so if you think of term of things in operations in terms of",
    "start": "5506520",
    "end": "5512080"
  },
  {
    "text": "sending letters to other people and responding to them if you have a if you have a catalog of things you can",
    "start": "5512080",
    "end": "5518199"
  },
  {
    "text": "buy uh you know that this was this catalog was printed sometime ago so maybe by the time I order uh the prices",
    "start": "5518199",
    "end": "5525239"
  },
  {
    "text": "have changed or whatnot there's lots of lots of these kind of if you think of of interactions with with other systems in",
    "start": "5525239",
    "end": "5532119"
  },
  {
    "text": "in terms of these physical things which it really is then then then I I think we",
    "start": "5532119",
    "end": "5537880"
  },
  {
    "text": "we truly believe it uh we we we understand it naturally um in many ways",
    "start": "5537880",
    "end": "5542960"
  },
  {
    "text": "you just have to kind of undo we we've been in the yeah it's like it's like another drug right of yeah I don't know",
    "start": "5542960",
    "end": "5550600"
  },
  {
    "text": "what kind of drug I'm not that much oh there's a lot that mess with time yeah there's a lot form it's the LSD of uh of",
    "start": "5550600",
    "end": "5558639"
  },
  {
    "text": "being in sync I would I would just like to add to that because I think that's important so if you have let's imagine",
    "start": "5558639",
    "end": "5564960"
  },
  {
    "text": "that you have a warehouse and you you deal with shipping things in and out so you have this system that's perfectly",
    "start": "5564960",
    "end": "5570760"
  },
  {
    "text": "transactional ass it completely consistent at all all time and you do an",
    "start": "5570760",
    "end": "5576760"
  },
  {
    "text": "inventory of your warehouse and then you see that somebody's stolen 50 of",
    "start": "5576760",
    "end": "5582280"
  },
  {
    "text": "something in there what's the system of Truth reality or your perfectly",
    "start": "5582280",
    "end": "5587679"
  },
  {
    "text": "consistent database there's actually a question",
    "start": "5587679",
    "end": "5593040"
  },
  {
    "text": "from the audience now you was talking about the",
    "start": "5593040",
    "end": "5598080"
  },
  {
    "text": "conversation between two corations of processes and you have the an",
    "start": "5598080",
    "end": "5606000"
  },
  {
    "text": "of catalog I will call it multicasting messages to a lot of",
    "start": "5606000",
    "end": "5613960"
  },
  {
    "text": "processes where do you see that kind of protocol in",
    "start": "5613960",
    "end": "5619960"
  },
  {
    "text": "in this application today is not often",
    "start": "5619960",
    "end": "5625440"
  },
  {
    "text": "used but could be saving a lot of resources",
    "start": "5625440",
    "end": "5631159"
  },
  {
    "text": "and so on and so on um multicast uh or selective broadcast",
    "start": "5631159",
    "end": "5637800"
  },
  {
    "text": "or something brings in a whole different set of things um and you know we have a",
    "start": "5637800",
    "end": "5643440"
  },
  {
    "text": "lot of experience uh in in in actually how protocols work on top of things like",
    "start": "5643440",
    "end": "5648760"
  },
  {
    "text": "multicast or broadcast um one thing that you don't have to worry too much about uh with with sort of uh just one oneto",
    "start": "5648760",
    "end": "5656000"
  },
  {
    "text": "one or or Point topoint communication is uh ordering so um for example you know",
    "start": "5656000",
    "end": "5662560"
  },
  {
    "text": "you send one message to a recipient you send a second one they usually you know pretty much are going to arrive one",
    "start": "5662560",
    "end": "5668199"
  },
  {
    "text": "after the other but if you're sending out to 100 different receivers and you send two different messages in the",
    "start": "5668199",
    "end": "5673639"
  },
  {
    "text": "general internet with something like multicast they can be in any order at different receivers so that that adds a",
    "start": "5673639",
    "end": "5680600"
  },
  {
    "text": "whole different level of Dimension I like to think of it this way unless you enforce ordering it's going to be random",
    "start": "5680600",
    "end": "5688440"
  },
  {
    "text": "for for those so there's a lot of different things um in fact there might be some something that Martin and I are",
    "start": "5688440",
    "end": "5694639"
  },
  {
    "text": "doing around this um that we've been working on recently but uh you know uh",
    "start": "5694639",
    "end": "5700679"
  },
  {
    "text": "I've actually been doing multicast protocols it's how I actually started getting into protocols uh reliable",
    "start": "5700679",
    "end": "5705960"
  },
  {
    "text": "broadcast reliable multicast um and maybe that's why I'm so twisted uh in certain ways uh thinking about ordering",
    "start": "5705960",
    "end": "5713040"
  },
  {
    "text": "thinking about that those kind of things at that level um but yeah there's a lot of different efficiencies that can be uh",
    "start": "5713040",
    "end": "5720239"
  },
  {
    "text": "received uh in fact uh some interesting work was just done um last week it's",
    "start": "5720239",
    "end": "5725400"
  },
  {
    "text": "starting in the next ietf there's a birds with feather session on um a way of doing a uh uh uh explicit multicast",
    "start": "5725400",
    "end": "5733639"
  },
  {
    "text": "in the general internet that's kind of unique I'd like to see how that progresses some mely interesting work so",
    "start": "5733639",
    "end": "5739800"
  },
  {
    "text": "it's not dead it keeps popping up here and there things keep progressing we'll see it's a great Tool uh it's just it",
    "start": "5739800",
    "end": "5747000"
  },
  {
    "text": "adds a few more dimensions of things that are a little bit tricky yeah it's I mean it is tricky to deal with right I",
    "start": "5747000",
    "end": "5752480"
  },
  {
    "text": "mean it's typically used within like clustering software or Discovery",
    "start": "5752480",
    "end": "5757679"
  },
  {
    "text": "software or as part of atomic broadcast mechanisms um so it's I mean there's",
    "start": "5757679",
    "end": "5764159"
  },
  {
    "text": "there's a lot of usage of it but it but it's It's tricky to deal with so it's it's in system",
    "start": "5764159",
    "end": "5770639"
  },
  {
    "text": "software it depends on what domain depending on which domain you're in for example it's very heavily used in",
    "start": "5770639",
    "end": "5777040"
  },
  {
    "text": "finance when you're sending out things like Market data you send it out from a source to many different gateways which",
    "start": "5777040",
    "end": "5782880"
  },
  {
    "text": "then send on to customers and so it is there it tends to be a more high-end commercial product so what Todd alluded",
    "start": "5782880",
    "end": "5789480"
  },
  {
    "text": "to is we've been collaborating on an open source project to bring a message transport talking of OSI model it will",
    "start": "5789480",
    "end": "5797119"
  },
  {
    "text": "be out there as a full uh layer 4 implementation that will be available and it will do unicast and multicast and",
    "start": "5797119",
    "end": "5804360"
  },
  {
    "text": "it will be very fast and very high throughput so good low latency good throughput we'll do unicast and we'll do",
    "start": "5804360",
    "end": "5810400"
  },
  {
    "text": "multicast so there will be something that people can start using we have time for one last question",
    "start": "5810400",
    "end": "5816000"
  },
  {
    "text": "before beer and I found one in the first part of this uh panel uh do I have to",
    "start": "5816000",
    "end": "5821560"
  },
  {
    "text": "teach my Java developers ear to be responsive I'm looking for Best Practices tools libraries for Java",
    "start": "5821560",
    "end": "5828040"
  },
  {
    "text": "developers and I don't know do you want to make a around Robin on that where we start with Victor and if you can make an",
    "start": "5828040",
    "end": "5833119"
  },
  {
    "text": "answer which is tweetable in 140 characters that would be great for the audience wow well no",
    "start": "5833119",
    "end": "5839800"
  },
  {
    "text": "pressure no",
    "start": "5839800",
    "end": "5843800"
  },
  {
    "text": "brilliant I think that no so let let me clarify I think as a Java developer I",
    "start": "5845280",
    "end": "5851080"
  },
  {
    "text": "think it's important that one does not have to learn a complete new language",
    "start": "5851080",
    "end": "5857040"
  },
  {
    "text": "and a complete new platform and a complete new paradigm of doing something at the same time because it tends to",
    "start": "5857040",
    "end": "5863560"
  },
  {
    "text": "create this huge threshold or barrier to entry so uh what's good about this case",
    "start": "5863560",
    "end": "5868719"
  },
  {
    "text": "is that AKA has is written in Scola The Scholar programming language but it has a Java as well so if you want to just",
    "start": "5868719",
    "end": "5875239"
  },
  {
    "text": "take things for a spin and try try it out and and sort of work work the reactive angle I think that's a very",
    "start": "5875239",
    "end": "5881920"
  },
  {
    "text": "good starting point it's not in 140 characters though well thank you anyway",
    "start": "5881920",
    "end": "5887599"
  },
  {
    "text": "Victor Kon 140 characters if I was forced on to the to the jvm platform um",
    "start": "5887599",
    "end": "5896199"
  },
  {
    "text": "of course you could also program llang in urang well that aside if you're in if",
    "start": "5896199",
    "end": "5903679"
  },
  {
    "text": "you were forced onto the jbn platform in real life I would rather program in the likes of closure or some such that",
    "start": "5903679",
    "end": "5910639"
  },
  {
    "text": "actually enforces the discipline of proper isolation and I think that's a more important aspect actually in many",
    "start": "5910639",
    "end": "5916760"
  },
  {
    "text": "ways than uh it's it's a thing that's more important to learn early uh than",
    "start": "5916760",
    "end": "5923320"
  },
  {
    "text": "getting used to so I would offer a language that has some notion of isolation properly and that's a good",
    "start": "5923320",
    "end": "5928520"
  },
  {
    "text": "thing to learn it has so much value um thank you let's move move on",
    "start": "5928520",
    "end": "5934840"
  },
  {
    "text": "to Mar okay well as someone who writes a lot of java and helps a lot of java",
    "start": "5934840",
    "end": "5939920"
  },
  {
    "text": "users you do need to reprogram their brains a little bit they've been brain damaged mostly by j2e and various other",
    "start": "5939920",
    "end": "5947360"
  },
  {
    "text": "Frameworks that are out there but once you get over it it's amazing one of the things I find quite useful is to build",
    "start": "5947360",
    "end": "5953239"
  },
  {
    "text": "prototypes with people and it's amazing how so many of those prototypes are mitted into production and totally",
    "start": "5953239",
    "end": "5958280"
  },
  {
    "text": "superseded the system that's there before been built in a fraction of the time uh give you a good quote uh I can't",
    "start": "5958280",
    "end": "5965360"
  },
  {
    "text": "use the full language cuz it's probably too colorful to be recorded but uh a person who's become a very good friend",
    "start": "5965360",
    "end": "5971080"
  },
  {
    "text": "of mine worked with me at elmax and some other previous companies and then he moved on to do some other things and I",
    "start": "5971080",
    "end": "5977679"
  },
  {
    "text": "got a call from him one night and he called me a bee and various other names and what he was saying is you have me",
    "start": "5977679",
    "end": "5984920"
  },
  {
    "text": "broken I cannot work anywhere else again having gone to working that way he liked",
    "start": "5984920",
    "end": "5990320"
  },
  {
    "text": "it so much he could not go back to working on J2 apps and other things like that because it actually it's it's so",
    "start": "5990320",
    "end": "5997719"
  },
  {
    "text": "fast it's not just the fact these things are resilient elastic skillable all those sorts of things responsive they're",
    "start": "5997719",
    "end": "6003960"
  },
  {
    "text": "so fast to develop coding that's the big win and actually it's easy to reason",
    "start": "6003960",
    "end": "6009000"
  },
  {
    "text": "about the code is easy to deal with it and people just turn stuff out and the business like you more afterwards",
    "start": "6009000",
    "end": "6015440"
  },
  {
    "text": "because it's it redefines a new relationship with them cuz you just you're taking out all of the things that",
    "start": "6015440",
    "end": "6020719"
  },
  {
    "text": "were in the way in many words it's just about stripping things back rather than adding things and I find this work",
    "start": "6020719",
    "end": "6027040"
  },
  {
    "text": "well thank you 114 a different number system from Martin and",
    "start": "6027040",
    "end": "6032080"
  },
  {
    "text": "TOD no pressure um I actually think that programming languages are like",
    "start": "6032080",
    "end": "6037560"
  },
  {
    "text": "instruments I agree with Rich hickey on this on this point programming languages are like uh instruments um you know we",
    "start": "6037560",
    "end": "6045599"
  },
  {
    "text": "get very comfortable with a certain instrument but to really expand a",
    "start": "6045599",
    "end": "6050760"
  },
  {
    "text": "musician's portfolio and what they can do and how think about music they actually take on other instruments they",
    "start": "6050760",
    "end": "6056599"
  },
  {
    "text": "take on other challenges other media right so I think actually we should perhaps think about letting you know",
    "start": "6056599",
    "end": "6063719"
  },
  {
    "text": "developers pick the language that they'd like to do they'd like to do a system in Python that's perfectly great and by by",
    "start": "6063719",
    "end": "6070639"
  },
  {
    "text": "separating these uh you know the components of a system and breaking them apart we actually can do that a lot",
    "start": "6070639",
    "end": "6076880"
  },
  {
    "text": "easier so if I had to tweet it I'd say I think programming languages should be considered more like instruments and we",
    "start": "6076880",
    "end": "6082560"
  },
  {
    "text": "should consider our more like musicians and try different instruments and expand our repertoire and not be afraid of it",
    "start": "6082560",
    "end": "6089560"
  },
  {
    "text": "in a tweet thank you very much that's close to 140 characters come",
    "start": "6089560",
    "end": "6095280"
  },
  {
    "text": "on well I think there's one more question but we have to take that over beer and honestly since the question is",
    "start": "6095280",
    "end": "6101320"
  },
  {
    "text": "what about.net it's probably best to take it over beer so thank you very much to the panel",
    "start": "6101320",
    "end": "6107840"
  }
]