[
  {
    "start": "0",
    "end": "160000"
  },
  {
    "text": "[Music]",
    "start": "3550",
    "end": "7840"
  },
  {
    "text": "hello hello can everyone hear us yeah good good okay so welcome to our session",
    "start": "16300",
    "end": "23060"
  },
  {
    "text": "this is how to build CQRS and event sourcing applications with axon and a",
    "start": "23060",
    "end": "29330"
  },
  {
    "text": "little bit of pivotal Cloud Foundry exactly so let's introduce ourselves so",
    "start": "29330",
    "end": "34789"
  },
  {
    "text": "my name's Ben wilcott I work for pivotal as part of the spring marketing team yes",
    "start": "34789",
    "end": "40789"
  },
  {
    "text": "Steven yes so I'm Steven I'm currently the excellent framework elite developer over at exonic like a large shared with",
    "start": "40789",
    "end": "47269"
  },
  {
    "text": "you guys and today we're going to give you talk about how to do X on a piece yeah yeah so you see Crescent even",
    "start": "47269",
    "end": "53449"
  },
  {
    "text": "sourcing bits yes so we've been working on this for a while we did some work together last year where we used CQRS an",
    "start": "53449",
    "end": "61519"
  },
  {
    "text": "event sourcing with axon and installed it on to Clare foundry and show to people how to do that today we're going",
    "start": "61519",
    "end": "68450"
  },
  {
    "text": "to give you kind of the edited highlights of that sort of a super quick version so let's get started right so",
    "start": "68450",
    "end": "74360"
  },
  {
    "text": "here we are with first fight is about axon framework so if can I have a show",
    "start": "74360",
    "end": "79850"
  },
  {
    "text": "of hands who's heard of axon framework in the room already okay a few people so it's quite a few haven't so axon",
    "start": "79850",
    "end": "85969"
  },
  {
    "text": "framework is essentially gives you a whole bunch of libraries that you can work with to build CQRS and event",
    "start": "85969",
    "end": "93409"
  },
  {
    "text": "sourcing applications it's got first-class support for the things that you need in those",
    "start": "93409",
    "end": "98420"
  },
  {
    "text": "applications things like aggregates commands queries events and we're going to show you some of that today in the",
    "start": "98420",
    "end": "105380"
  },
  {
    "text": "talk with a little bit of live coding as well so yeah that's that's something worth looking forward to obviously we're",
    "start": "105380",
    "end": "113119"
  },
  {
    "text": "running that on top of spring it's great for micro services for example so it works really well with this spring boot",
    "start": "113119",
    "end": "119950"
  },
  {
    "text": "it's open source to so go ahead check it out if you haven't seen it before",
    "start": "119950",
    "end": "125030"
  },
  {
    "text": "Oxana Keio is where you can find information about exon framework we're",
    "start": "125030",
    "end": "130340"
  },
  {
    "text": "also going to use an PCF but it's fair to say that you could build this application without PCF of course",
    "start": "130340",
    "end": "137340"
  },
  {
    "text": "so it's just that we need something that allows us to move quickly we've got a",
    "start": "137340",
    "end": "143130"
  },
  {
    "text": "very limited amount of time and that's something that Cloud Foundry excels at it lets developers move quickly so you",
    "start": "143130",
    "end": "149880"
  },
  {
    "text": "can get your application off your laptop and into the cloud in record time really so and we'll try and show you a little",
    "start": "149880",
    "end": "156870"
  },
  {
    "text": "tiny bit of that towards the end of the top that's correct yes hey sue Stephens you wanna give us some",
    "start": "156870",
    "end": "162780"
  },
  {
    "text": "information on seek us yes exactly thank you for that so prior to diving into the hands-on",
    "start": "162780",
    "end": "167819"
  },
  {
    "text": "introduction of what we're gonna do with actual framework I'd like to share a bit about the concepts we're gonna talk about so you know this talk is about",
    "start": "167819",
    "end": "174600"
  },
  {
    "text": "seeker s and even sourcing to give you a bit of a background is definitely beneficial so seeker s is an",
    "start": "174600",
    "end": "180269"
  },
  {
    "text": "abbreviation which stands for command query responsibility segregation and I really like to exemplify it with this",
    "start": "180269",
    "end": "185970"
  },
  {
    "text": "diagram we have here so it's very simple we have one app and we are segregated our situation into two separate clouds",
    "start": "185970",
    "end": "193019"
  },
  {
    "text": "and we have a dedicated client in there one of those clouds that's the command model it's on the left side it deals",
    "start": "193019",
    "end": "198510"
  },
  {
    "text": "mainly with the expressions of intent you have in your system to perform some operation so if you want to perform an",
    "start": "198510",
    "end": "205260"
  },
  {
    "text": "address change that's an operation you'd send to your command model in your command model will have the right fields",
    "start": "205260",
    "end": "210959"
  },
  {
    "text": "to decide whether it's okay to perform that operation at that point in time or not so that's what it deals with it's",
    "start": "210959",
    "end": "216390"
  },
  {
    "text": "not dealing with any requests for data you might have on a query side of your application so the right flower we have",
    "start": "216390",
    "end": "222750"
  },
  {
    "text": "here is our query model where you typically have your projections and it deals with answering questions you have as best as it can so if you need the",
    "start": "222750",
    "end": "231180"
  },
  {
    "text": "view of your UI directly you'll typically be with table per view or if you do tax based search or you need that",
    "start": "231180",
    "end": "237359"
  },
  {
    "text": "for some reason you'll introduce an elasticsearch instance and that will be your query model at that side of the equation it's really tailored to being",
    "start": "237359",
    "end": "243930"
  },
  {
    "text": "the best approach doing that like that now they're segregated you separate",
    "start": "243930",
    "end": "249359"
  },
  {
    "text": "those components into different situations different packages for example different micro services",
    "start": "249359",
    "end": "254519"
  },
  {
    "text": "whatever you see fit but they're still part of the same application so you need a way to synchronize the decisions which",
    "start": "254519",
    "end": "260340"
  },
  {
    "text": "have been made in your command model and get them over to the query model you need some format to do that now you",
    "start": "260340",
    "end": "266340"
  },
  {
    "text": "could do this with stored procedures or a shared database but I think it's nicer to do with an event-driven architecture in",
    "start": "266340",
    "end": "272670"
  },
  {
    "text": "play so we introduce events over here what that means is your command model will get a command that will decide",
    "start": "272670",
    "end": "279480"
  },
  {
    "text": "whether it's okay to perform the operation at that point in time or not and if it's okay it will notify the world through an event stating that yes",
    "start": "279480",
    "end": "286230"
  },
  {
    "text": "this operation has been taken into account and that events will then be used to propagate you anybody who's",
    "start": "286230",
    "end": "292110"
  },
  {
    "text": "interested in it into your query models to update the views but it will also be used in your karma model granted if that",
    "start": "292110",
    "end": "298890"
  },
  {
    "text": "data is needed to drive your decisions this brings us to the next concept which",
    "start": "298890",
    "end": "304020"
  },
  {
    "text": "is event sourcing so in essence that's that instead of storing the entire state",
    "start": "304020",
    "end": "309270"
  },
  {
    "text": "of your model in storing the separate deltas which constitutes the same end result of that model those deltas that",
    "start": "309270",
    "end": "315840"
  },
  {
    "text": "is what your events are I think a very nice simple example is get every commit",
    "start": "315840",
    "end": "321180"
  },
  {
    "text": "could be an event and the consistency of all those commits together get your codebase that's the end state of it of",
    "start": "321180",
    "end": "326670"
  },
  {
    "text": "it all but every separate change those are the deltas so it's a way of thinking about event sourcing we also have shown",
    "start": "326670",
    "end": "332730"
  },
  {
    "text": "it here in a diagram on the Left we have a regular croc based solution with a virtual wallet example which we'll come",
    "start": "332730",
    "end": "338490"
  },
  {
    "text": "to in our hands-on in session as well we have a wallet with an ID I'm the owner and I have got a thousand euros on it",
    "start": "338490",
    "end": "344850"
  },
  {
    "text": "fine so in an event sourcing way that would a little look a little bit like this so we have a creation event which",
    "start": "344850",
    "end": "350850"
  },
  {
    "text": "is where we introduce the ID and the owner there's nothing about balance at that point in time so if you'd only source",
    "start": "350850",
    "end": "356040"
  },
  {
    "text": "that event you all will have no amount it's just zero because you don't know that change yet it's not occurred yet",
    "start": "356040",
    "end": "361230"
  },
  {
    "text": "and then you have separate events for the deposit and your withdrawal to eventually constitute to the same state if you have in your crop based solution",
    "start": "361230",
    "end": "368100"
  },
  {
    "text": "on the left side of things now we've been talking a bit about commands events",
    "start": "368100",
    "end": "373650"
  },
  {
    "text": "and queries or what I think is very nice and we're gonna focus on in a hands-on session as well is that this can lead",
    "start": "373650",
    "end": "379170"
  },
  {
    "text": "you to focus on a message driven API so we have segregated our command model and",
    "start": "379170",
    "end": "384690"
  },
  {
    "text": "our query model kamaal models dealing with commands to perform some operation in the query model to answer questions and using",
    "start": "384690",
    "end": "391200"
  },
  {
    "text": "events is to synchronizing mechanism those could be regular API should call as a service well why not think of it as",
    "start": "391200",
    "end": "397560"
  },
  {
    "text": "actual messages so that you can later on segregate those components and have an ideal way to already propagate those",
    "start": "397560",
    "end": "403590"
  },
  {
    "text": "things your API so that's what I want to focus on and that's what we're going to show was well in the session but there are",
    "start": "403590",
    "end": "410550"
  },
  {
    "text": "different routing needs to all of them and I want to go over them each by each so commands have a single you route",
    "start": "410550",
    "end": "417719"
  },
  {
    "text": "those to a single unit and the idea behind that is if we take our wallet example if I want to deposit my money",
    "start": "417719",
    "end": "424439"
  },
  {
    "text": "from a wallet I need to tell that exact wallet to perform the operation I can't tell your wallet to deposit retrieve",
    "start": "424439",
    "end": "430650"
  },
  {
    "text": "money from mine so how it works you need to wrap that command to that exact instance because that's how you deal with that and you might have a return",
    "start": "430650",
    "end": "438449"
  },
  {
    "text": "result when you're dealing with typically that's just a success or if it fails an exception but that's it you",
    "start": "438449",
    "end": "443879"
  },
  {
    "text": "won't return a query result from that because that's different it's a different way of dealing with it and this is what we can introduce with",
    "start": "443879",
    "end": "450060"
  },
  {
    "text": "queries as well so queries are different in routing because I could ask somebody for a query or I get asked a group for a",
    "start": "450060",
    "end": "457500"
  },
  {
    "text": "thing or I could subscribe to results so if I'd asked Ben for his age I should ask Ben because he knows best he's",
    "start": "457500",
    "end": "463919"
  },
  {
    "text": "thought sort of unit to answering this question so but let's take the stage",
    "start": "463919",
    "end": "470759"
  },
  {
    "text": "that for a different form that after this we're going for drinks that's something I'd asked for everybody and then everybody can answer and I scatter",
    "start": "470759",
    "end": "477659"
  },
  {
    "text": "my query and I gather results to aggregate to a certain stage so this is a different way of thinking of it and",
    "start": "477659",
    "end": "483060"
  },
  {
    "text": "you'll get a more thorough result as well because you get a query model or a query response in that respect and",
    "start": "483060",
    "end": "488969"
  },
  {
    "text": "lastly we obviously also have events the notifications of things which have happened in the past and you typically",
    "start": "488969",
    "end": "494879"
  },
  {
    "text": "distribute those to everybody who's interested because events are history everybody should be allowed to know history so it should be shared with",
    "start": "494879",
    "end": "501479"
  },
  {
    "text": "everybody I think that's a logical way of thinking about it and when you're handling event you can do a couple of things like reacting with a command or",
    "start": "501479",
    "end": "507899"
  },
  {
    "text": "performing some other operation or updating your view models which we'll see in a couple so this is it for the",
    "start": "507899",
    "end": "514560"
  },
  {
    "text": "concepts I want oh no I got one last item up there so what I want to emphasize is that an event and a",
    "start": "514560",
    "end": "520409"
  },
  {
    "text": "messenger aren't the same thing so all three of these are messages whilst an event is a specific form of a message",
    "start": "520409",
    "end": "526769"
  },
  {
    "text": "and they do have different routing needs different responsibilities different expectations when you deal with that so",
    "start": "526769",
    "end": "532260"
  },
  {
    "text": "it's very important to not mix those two together it's different",
    "start": "532260",
    "end": "537400"
  },
  {
    "text": "now I come to the thing I was thinking we're going to which is actually the coding bit and we prepared an",
    "start": "537400",
    "end": "544310"
  },
  {
    "start": "540000",
    "end": "810000"
  },
  {
    "text": "application which is called our virtual wallet right and that's what we're gonna show I'm going to show how you can do",
    "start": "544310",
    "end": "550990"
  },
  {
    "text": "this with yeah and to make it a little bit less painful for everybody we've",
    "start": "550990",
    "end": "556760"
  },
  {
    "text": "we've done the edited highlights so so we're not going to show you much in the way of boilerplate creating pojos or",
    "start": "556760",
    "end": "563510"
  },
  {
    "text": "creating rest controllers it's all written in regular Springs so there",
    "start": "563510",
    "end": "568790"
  },
  {
    "text": "shouldn't be any surprises there but towards the end of this session you can follow a link to get all the code so you",
    "start": "568790",
    "end": "575060"
  },
  {
    "text": "can go and have a look at it at your leisure if you want to see more detail we'll just stick to the edited",
    "start": "575060",
    "end": "580640"
  },
  {
    "text": "highlights so exactly so we've prepared a lot of the things for you already as you can see you a regular spring boot",
    "start": "580640",
    "end": "585800"
  },
  {
    "text": "application not too exciting nothing specific in here to show you a couple of the dependencies so here we have the",
    "start": "585800",
    "end": "591440"
  },
  {
    "text": "axle spring boot starter which simplifies your lives by providing all the components you need when you're",
    "start": "591440",
    "end": "596780"
  },
  {
    "text": "dealing with an accent applications you'll get a command bus the query bus an event bus and all the other components you need to register your",
    "start": "596780",
    "end": "603260"
  },
  {
    "text": "messages you have and all the niceties we're dealing with this really well with spring boots so it's it's also",
    "start": "603260",
    "end": "609170"
  },
  {
    "text": "configuring itself it's aware of what else is going on inside that particular",
    "start": "609170",
    "end": "614720"
  },
  {
    "text": "application thanks to these dependencies correct great we're also going to use a",
    "start": "614720",
    "end": "619730"
  },
  {
    "text": "data API because we're going to store a query model we got start a weapon there to mirror our client or the UI bit we",
    "start": "619730",
    "end": "626690"
  },
  {
    "text": "had when we think about our command and query responsibility segregation where we also had a client that's what we're going to do which we're going to tackle",
    "start": "626690",
    "end": "633110"
  },
  {
    "text": "with the spring starter web you got an a memory database and we're going to do things with complan now the reason we're",
    "start": "633110",
    "end": "639320"
  },
  {
    "text": "doing things that content is what I'm going to show you right away here you can see the package structure and I hope",
    "start": "639320",
    "end": "644630"
  },
  {
    "text": "it's visible from the back this might be a bit small but the package I've now selected is the core API package and",
    "start": "644630",
    "end": "652340"
  },
  {
    "text": "what we're going to do is we're going to segregate all our things by packaging it in separate things so that at a later",
    "start": "652340",
    "end": "658010"
  },
  {
    "text": "stage you could retrieve it into a separate component if you want to now I'm focusing on the core API because we're going to do a message driven API",
    "start": "658010",
    "end": "664880"
  },
  {
    "text": "so this is where our messages will reside so firstly we all deal with commands because we're first going to",
    "start": "664880",
    "end": "670670"
  },
  {
    "text": "tackle our command model and we want to see what operations we're going to perform on a wallet now here we can see that we",
    "start": "670670",
    "end": "676219"
  },
  {
    "text": "deduced in this Coughlin file called commands that we're going to create a wallet and we're going to deposit some cash and",
    "start": "676219",
    "end": "682069"
  },
  {
    "text": "we're gonna withdraw some cash pretty simple for those not in the know about Kotlin by making this data class",
    "start": "682069",
    "end": "687909"
  },
  {
    "text": "automatically get an equals hash code a to string with all makes this this fueled immutable and that gives me a",
    "start": "687909",
    "end": "694549"
  },
  {
    "text": "very nice way of dealing with messages in one file instead of having separate files like you dev but you can do this",
    "start": "694549",
    "end": "700909"
  },
  {
    "text": "in Java as well you could do regular pojos absolutely no difference whatsoever not exactly right but we've",
    "start": "700909",
    "end": "707149"
  },
  {
    "text": "decided for the purpose of this demo to do it in cotton on the other hand when we handle our command we make a decision",
    "start": "707149",
    "end": "713899"
  },
  {
    "text": "but it's okay to perform that operation or not and we're going to notify the world that that operation has been taken",
    "start": "713899",
    "end": "718999"
  },
  {
    "text": "so we're gonna have direct mirrors at this scenario so we have a create wallet command which is mirrored with a wallet",
    "start": "718999",
    "end": "724789"
  },
  {
    "text": "created event we're gonna keep it a little simple for the purpose of this demo we also have a cash withdrawal and a guest is positive there's one thing I",
    "start": "724789",
    "end": "732019"
  },
  {
    "text": "want to emphasize on this and that events are past tense because it's something which has happened so you",
    "start": "732019",
    "end": "737569"
  },
  {
    "text": "model it as a past tense come on so the other hand our present tense yeah so yes",
    "start": "737569",
    "end": "744199"
  },
  {
    "text": "so the events are a statement of fact yes this has happened exactly yes that",
    "start": "744199",
    "end": "750409"
  },
  {
    "text": "brings it for the bits of the core API I wanted to show and now we're going to the Kamal model which we put in a separate package to emphasize that it's",
    "start": "750409",
    "end": "757309"
  },
  {
    "text": "separate from the other bits we're segregating it in a very simple manner at this plate place and we're gonna",
    "start": "757309",
    "end": "762379"
  },
  {
    "text": "start with a wallet so we have introduced a wallet as being our command model because we're dealing with a virtual wallet scenario and I'm going to",
    "start": "762379",
    "end": "769819"
  },
  {
    "text": "introduce the first specific excellent thing in here and I'm gonna annotate it with an aggregate like so as you can see",
    "start": "769819",
    "end": "777289"
  },
  {
    "text": "this is a spring stereotype which because we're in the spring boot scenario will give me all the auto wiring needs and introduce an aggregate",
    "start": "777289",
    "end": "784489"
  },
  {
    "text": "Factory and a repository and will notify the command buses that this guy can handle messages but firstly we're",
    "start": "784489",
    "end": "790879"
  },
  {
    "text": "introducing a DVD concept in air which is in aggregate so let me show you the very concise definition of what that is",
    "start": "790879",
    "end": "796929"
  },
  {
    "text": "an aggregate consists of a group of entities which in regard to data changes acts as a single unit there's an",
    "start": "796929",
    "end": "802909"
  },
  {
    "text": "external reference into that aggregate and there are consistency rules which apply to an element aggregate I think",
    "start": "802909",
    "end": "809090"
  },
  {
    "text": "you had a very nice way of showing that with I did your wallet out so he might you know brought my wallet if you if you",
    "start": "809090",
    "end": "817460"
  },
  {
    "start": "810000",
    "end": "860000"
  },
  {
    "text": "open it wallet you'll see in there usually some cash there'll be some cards you might have an identification thing",
    "start": "817460",
    "end": "824450"
  },
  {
    "text": "there driving license or something in that nature and that's basically an aggregation of things it's an",
    "start": "824450",
    "end": "830330"
  },
  {
    "text": "aggregation of some caches and aggregation of some cards it's some aggregation of an identity it's unique",
    "start": "830330",
    "end": "837440"
  },
  {
    "text": "and if I lose that wallet I lose it all together which I may have done",
    "start": "837440",
    "end": "843040"
  },
  {
    "text": "so yeah yeah yeah so essentially they're they're related to each other their",
    "start": "843040",
    "end": "850220"
  },
  {
    "text": "destiny is bound to each other yeah it can't exist without each other so if I",
    "start": "850220",
    "end": "857840"
  },
  {
    "text": "lose one and I lose everything for example like what we're going to focus on is this is the command side of",
    "start": "857840",
    "end": "863300"
  },
  {
    "start": "860000",
    "end": "1290000"
  },
  {
    "text": "our application is this guy we were dealing with commands now firstly I need to introduce a default constructor because that's needed by the framework",
    "start": "863300",
    "end": "869810"
  },
  {
    "text": "but secondly I'm gonna introduce a constructor for the create wallet command I'm gonna add an annotation call",
    "start": "869810",
    "end": "876110"
  },
  {
    "text": "that commands handler to it notifying the framework that this function is capable of handling to create wallet",
    "start": "876110",
    "end": "881750"
  },
  {
    "text": "command and we'll register this method to the command bus so as soon as somebody dispatches to create wallet",
    "start": "881750",
    "end": "887690"
  },
  {
    "text": "commands that the command bus knows where to route it to so that you don't have to know but cuz the framework does",
    "start": "887690",
    "end": "893150"
  },
  {
    "text": "that for you right so this is one of the inbuilt advantages of using a framework right away we're getting certain",
    "start": "893150",
    "end": "899330"
  },
  {
    "text": "behaviors out of the box just by using these annotations and these are all these annotations are designed to",
    "start": "899330",
    "end": "906110"
  },
  {
    "text": "support CQRS and later we'll see event sourcing as well when's that serious so",
    "start": "906110",
    "end": "911300"
  },
  {
    "text": "it saves you a lot of time you don't have to write all that boilerplate for yourself correctly now as we might have",
    "start": "911300",
    "end": "917930"
  },
  {
    "text": "guessed from our first secret slide on a command we're going to make a decision and we're gonna notify that that",
    "start": "917930",
    "end": "923900"
  },
  {
    "text": "decision has been made by publishing an event and we want to publish that events in the life cycle of an aggregate so",
    "start": "923900",
    "end": "929360"
  },
  {
    "text": "that's why I'm calling here the aggregate lifecycle we're just gonna dispatch the wallet created event because there's no real decision-making",
    "start": "929360",
    "end": "934970"
  },
  {
    "text": "logic in this constructor just now not just not yeah that's not we're going to focus on at",
    "start": "934970",
    "end": "940220"
  },
  {
    "text": "least in this demo mm-hmm and to do that we call a grated lifecycle or apply a new new wallet created events and we",
    "start": "940220",
    "end": "946850"
  },
  {
    "text": "need to provide a wallet ID which we can grab from those things and get them out let me remove that guy and we this so",
    "start": "946850",
    "end": "955190"
  },
  {
    "text": "this is pretty simple not doing anything exciting but there's one thing I also pointed out when we're talking aggregate",
    "start": "955190",
    "end": "960800"
  },
  {
    "text": "is that an aggregate has an external reference now this aggregate doesn't have the external reference defined yet",
    "start": "960800",
    "end": "967310"
  },
  {
    "text": "but it's gonna be the wallet ID so we need to source the wallet ID from the events republishing state for this",
    "start": "967310",
    "end": "973430"
  },
  {
    "text": "specific aggregate so the way to do that is by introducing an event sourcing handler for the wallet created event",
    "start": "973430",
    "end": "978680"
  },
  {
    "text": "like so so this is somewhat similar to the command handler annotation but now specifically for events and more",
    "start": "978680",
    "end": "985130"
  },
  {
    "text": "specifically so for sourcing that means that this handler will only handle events it has published in its own life",
    "start": "985130",
    "end": "991400"
  },
  {
    "text": "cycle because the only things are gonna handle is to rehydrate your own State to recreate yourself you're not going to",
    "start": "991400",
    "end": "997520"
  },
  {
    "text": "derive your state based on other events which aren't part of your deltas you only need your own deltas so those are",
    "start": "997520",
    "end": "1002920"
  },
  {
    "text": "the things you're gonna listen to to introduce an event sourcing handler here we're going to retrieve not the balance",
    "start": "1002920",
    "end": "1008920"
  },
  {
    "text": "we're gonna retrieve the wallet ID make it a field like so and make an actual",
    "start": "1008920",
    "end": "1016150"
  },
  {
    "text": "field and there's another thing I need to specify so this is our external reference into the aggregate but I need",
    "start": "1016150",
    "end": "1021910"
  },
  {
    "text": "to tell that this is the external reference into drag yet by making this the add aggregate identifier annotated",
    "start": "1021910",
    "end": "1027220"
  },
  {
    "text": "field right so these two methods together are giving us a way to essentially instantiate and initialize",
    "start": "1027220",
    "end": "1034150"
  },
  {
    "text": "this particular aggregate and is also a way for us to identify at run time so we",
    "start": "1034150",
    "end": "1040540"
  },
  {
    "text": "can say okay is this particular wallet yes exactly and that's going to be used so if we go back to our commands file",
    "start": "1040540",
    "end": "1048010"
  },
  {
    "text": "here we have to create wallet and here you can see there's nothing interesting there's a wallet ID in a balance but here we have one specific annotation to",
    "start": "1048010",
    "end": "1054580"
  },
  {
    "text": "specify that the wallet ID here that's the field for the come off the aggregate I want to get this come on - so that's",
    "start": "1054580",
    "end": "1060910"
  },
  {
    "text": "the target aggregate identifier yes so these commands are not used in initialization they are used later on",
    "start": "1060910",
    "end": "1067840"
  },
  {
    "text": "yes and because they used later on they're targeted towards a particular in instead of an aggregate because they're",
    "start": "1067840",
    "end": "1074370"
  },
  {
    "text": "no longer constructing it yes right and as they're no longer constructing it we're gonna make a regular command",
    "start": "1074370",
    "end": "1079980"
  },
  {
    "text": "handling functions over void for the deposit cash commands and we're gonna do",
    "start": "1079980",
    "end": "1085620"
  },
  {
    "text": "that we're gonna do aggregates a life cycle if my keyboard helps me out cash",
    "start": "1085620",
    "end": "1092100"
  },
  {
    "text": "deposit it we're gonna be pragmatic now and now we can retrieve the wallet idea state from the aggregate because we have",
    "start": "1092100",
    "end": "1097170"
  },
  {
    "text": "sourced that state and the previous event in a wallet created event so we can remove that and we need to get the",
    "start": "1097170",
    "end": "1103410"
  },
  {
    "text": "balance out of the command I'm gonna be a lazy programmer and copy this line and",
    "start": "1103410",
    "end": "1108810"
  },
  {
    "text": "do withdraw like so and I need to type",
    "start": "1108810",
    "end": "1114690"
  },
  {
    "text": "it right because no I it up okay with draw it's not doing it right it's",
    "start": "1114690",
    "end": "1123150"
  },
  {
    "text": "being mean yep so with draw cash come on",
    "start": "1123150",
    "end": "1131010"
  },
  {
    "text": "yes cash we're throwing come on yes there it is so it's quite simple but",
    "start": "1131010",
    "end": "1137580"
  },
  {
    "text": "as I pointed out when we're handling it come on we want to make a decision we're not really making decisions at this",
    "start": "1137580",
    "end": "1143250"
  },
  {
    "text": "stage we're just handling the command and publishing event that we've done that so I think it's fair to state that",
    "start": "1143250",
    "end": "1148620"
  },
  {
    "text": "we cannot withdraw money out of a virtual wallet if there's no money left if the balance is too low yeah so we'll",
    "start": "1148620",
    "end": "1154890"
  },
  {
    "text": "meet the balance as state in its aggregate now as we might have noticed from the wallet created event that's",
    "start": "1154890",
    "end": "1160230"
  },
  {
    "text": "where we introduced the first balance bit so let's retrieve that as a field from this guy by doing this making it",
    "start": "1160230",
    "end": "1168860"
  },
  {
    "text": "sing and actually making it a field I'm gonna copy that over I'm gonna do if the",
    "start": "1168860",
    "end": "1175230"
  },
  {
    "text": "balance is smaller than come on dog at amount then I don't want the performers",
    "start": "1175230",
    "end": "1181560"
  },
  {
    "text": "operation and at this stage I'm going to throw a insufficient funds exception to specify that this operation is okay to",
    "start": "1181560",
    "end": "1187890"
  },
  {
    "text": "perform and I also want to update our balance and I've made a life template for this to simplify my life so",
    "start": "1187890",
    "end": "1194160"
  },
  {
    "text": "introduced two events forcing handlers to update the balance to inquiry increment it than to decrement it now",
    "start": "1194160",
    "end": "1200130"
  },
  {
    "text": "this is the very basic notion of a command model this is what we this is this is it this is the model of replication of our wallet",
    "start": "1200130",
    "end": "1206520"
  },
  {
    "text": "virtual wallet so now we've shown you how to create this now I want to show you a bit about the client we're dealing",
    "start": "1206520",
    "end": "1213120"
  },
  {
    "text": "with so we've already provided a different package called UI which contains a separate controller which you",
    "start": "1213120",
    "end": "1219750"
  },
  {
    "text": "might have guessed is a regular spring rest controller because we're in spring ecosphere so it's a not a request",
    "start": "1219750",
    "end": "1226020"
  },
  {
    "text": "mapping for slash commands and we're publishing some commands for a regular create we're doing to create and deposit",
    "start": "1226020",
    "end": "1231660"
  },
  {
    "text": "and withdraw to show you a bit of what's happening we've also modeled the insufficient funds operation so that we",
    "start": "1231660",
    "end": "1237540"
  },
  {
    "text": "can see the exception going through and there's one bit to focus on here so I've been talking about the command buses the",
    "start": "1237540",
    "end": "1242760"
  },
  {
    "text": "means to get your commands from one side to another now that API is a bit verbose to work",
    "start": "1242760",
    "end": "1248130"
  },
  {
    "text": "with so we've provided you with a utility operation a command gateway which simplifies your life to actually",
    "start": "1248130",
    "end": "1253350"
  },
  {
    "text": "dispatching commands so this this class essentially is just going to be a test",
    "start": "1253350",
    "end": "1258960"
  },
  {
    "text": "it's just gonna exercise the commands that we've already told you about the one where we create a wallet the one",
    "start": "1258960",
    "end": "1264870"
  },
  {
    "text": "where we add some funds and take away some funds so it's not particularly realistic from their UI perspective but",
    "start": "1264870",
    "end": "1271260"
  },
  {
    "text": "it provides us with a way of testing the business logic that we've put in the",
    "start": "1271260",
    "end": "1277290"
  },
  {
    "text": "application including the fact that we shouldn't be able to withdraw funds if we don't have sufficient funds available",
    "start": "1277290",
    "end": "1283710"
  },
  {
    "text": "so we can now exercise that just using regular rest ok so that's what I'm doing",
    "start": "1283710",
    "end": "1289800"
  },
  {
    "text": "there now posting a regular commander we don't get anything in return because that endpoint was just a post and we're not giving anything back but I the key",
    "start": "1289800",
    "end": "1297120"
  },
  {
    "start": "1290000",
    "end": "1356000"
  },
  {
    "text": "now might have noticed the login callback instance here so that I'm logging the commands and infants were",
    "start": "1297120",
    "end": "1302790"
  },
  {
    "text": "you up here we also have an event logger to log our events in a very quick way lazy way of doing it but it gives us a",
    "start": "1302790",
    "end": "1308610"
  },
  {
    "text": "means to show that we're actually publishing a cash deposit it and withdraw cash come on so our things are",
    "start": "1308610",
    "end": "1314370"
  },
  {
    "text": "going through so that's nice so this bit actually works can also show the funds bit by adding that same thing we don't",
    "start": "1314370",
    "end": "1321360"
  },
  {
    "text": "see get anything in return by calling it but if we go up here we actually have our insufficient funds exception so our",
    "start": "1321360",
    "end": "1326820"
  },
  {
    "text": "decision-making logic is working as well so very brief recap then so we've got our command model we can issue it with",
    "start": "1326820",
    "end": "1333780"
  },
  {
    "text": "command commands from our test class and the Gateway is routing those and",
    "start": "1333780",
    "end": "1341240"
  },
  {
    "text": "instantiating our wallets if necessary and then applying those commands to",
    "start": "1341240",
    "end": "1346650"
  },
  {
    "text": "instances of that wallet and then events are being emitted out and anything that's interested in those events can",
    "start": "1346650",
    "end": "1352830"
  },
  {
    "text": "then do things with those events right and that's we're going to lean to next because now we've got our Mart model",
    "start": "1352830",
    "end": "1358290"
  },
  {
    "start": "1356000",
    "end": "1504000"
  },
  {
    "text": "we've got a set of simple client dealing with dispatching those commands into our karma model so a logical next step is",
    "start": "1358290",
    "end": "1364050"
  },
  {
    "text": "actually introducing our query Mahalo via and as you've seen I've already put my cursor on the query model",
    "start": "1364050",
    "end": "1370020"
  },
  {
    "text": "coughing follow-up here and I've quite deliberately put it in the core API and the reason for that is because there is",
    "start": "1370020",
    "end": "1376080"
  },
  {
    "text": "sources gonna query this wallet view within introduced so it's a query response so it's a thing you get back",
    "start": "1376080",
    "end": "1382440"
  },
  {
    "text": "out of actually issuing that query so it's a part of your API this is why I'm putting it here I'm not suggesting that",
    "start": "1382440",
    "end": "1388920"
  },
  {
    "text": "you should put entities up here this is just purpose of the demo to make it quick so typically I'll pull those together and have the entity in a",
    "start": "1388920",
    "end": "1395100"
  },
  {
    "text": "separate query package but for now this simplifies our lives a little so we have a wallet view also in complan",
    "start": "1395100",
    "end": "1402150"
  },
  {
    "text": "with a wallet ID in a balance very simple we've got a withdraw on a deposit method on it as you can see there java",
    "start": "1402150",
    "end": "1407730"
  },
  {
    "text": "persistence annotations on it to actually make it an entity ok so let me also show the query messages",
    "start": "1407730",
    "end": "1414450"
  },
  {
    "text": "so we also need a way to dispatch the queries to actually retrieve this information and these are very worrying because there's a final and there's a",
    "start": "1414450",
    "end": "1421110"
  },
  {
    "text": "find what by ID and the final doesn't have any contents because when you're doing a return all from a repository you",
    "start": "1421110",
    "end": "1427860"
  },
  {
    "text": "don't provide anything either it's just getting everything you have that's it so it's a very simple way of defining the",
    "start": "1427860",
    "end": "1433170"
  },
  {
    "text": "creating messages we have so different thing that the commands and events right now now actually let me show you the",
    "start": "1433170",
    "end": "1439950"
  },
  {
    "text": "query package we are Philip here I've got a very simple wall of you repository already ready so that's a JPI repository",
    "start": "1439950",
    "end": "1446310"
  },
  {
    "text": "using a spring data starter dependency to get that going and I've got a wallet for you projector",
    "start": "1446310",
    "end": "1453570"
  },
  {
    "text": "ready and there's a reason why I call this a wallet view projector so this is the class which will handle all the",
    "start": "1453570",
    "end": "1458850"
  },
  {
    "text": "wallet events and we're gonna project those events into a wallet view so while if you projector seemed like a logical",
    "start": "1458850",
    "end": "1465540"
  },
  {
    "text": "naming convention to me and as you can see there's a repository in there and reconstructed together and",
    "start": "1465540",
    "end": "1471749"
  },
  {
    "text": "it's a spring beam by annotating it with that component can I just mention as well for anyone who's not seen that",
    "start": "1471749",
    "end": "1477809"
  },
  {
    "text": "before so the repository bit that's basically spring giving you a default",
    "start": "1477809",
    "end": "1483719"
  },
  {
    "text": "Deo implementation just based on that interface so it really speeds up you get",
    "start": "1483719",
    "end": "1489029"
  },
  {
    "text": "automatically you get certain methods by default don't you like find all or fine",
    "start": "1489029",
    "end": "1494639"
  },
  {
    "text": "by ID so we're taking advantage of that so that we can move quickly in this presentation but by all means check that",
    "start": "1494639",
    "end": "1501659"
  },
  {
    "text": "out if you've not seen that before I got a not another life template ready",
    "start": "1501659",
    "end": "1507209"
  },
  {
    "start": "1504000",
    "end": "1782000"
  },
  {
    "text": "and as you might have guessed we're gonna introduce the wallet created event because we want to introduce our wallet for you we want to save it into a",
    "start": "1507209",
    "end": "1513509"
  },
  {
    "text": "repository which is a logical thing we can do we have a repository that's save a new wallet for you I'm gonna pull the",
    "start": "1513509",
    "end": "1519779"
  },
  {
    "text": "offense and get the wallet ID in a balance out of it and now we're essentially snooping on events we're",
    "start": "1519779",
    "end": "1526589"
  },
  {
    "text": "listening for them yeah and we're reacting to them yeah it's completely separate component to the ones that we",
    "start": "1526589",
    "end": "1532139"
  },
  {
    "text": "were looking at before yes yes it's a segregated thing it's still part of the same applications yeah seems same swear",
    "start": "1532139",
    "end": "1538319"
  },
  {
    "text": "but it's in a different package for now and we can move that out to somewhere different because the core API is the",
    "start": "1538319",
    "end": "1543539"
  },
  {
    "text": "sharing bit yes the core API is something you share with everybody who's interested and the query package can be",
    "start": "1543539",
    "end": "1548789"
  },
  {
    "text": "extracted whenever you need cool so when we notice those events happening we're",
    "start": "1548789",
    "end": "1553859"
  },
  {
    "text": "going to save into a regular JPA crud style repository yep okay correct so this is a basic event",
    "start": "1553859",
    "end": "1562440"
  },
  {
    "text": "handler and this is again different from the event sourcing handler this is handling any wallet create event because",
    "start": "1562440",
    "end": "1567719"
  },
  {
    "text": "this guy is projecting all the walls views which are in existence so it's interested in every event yeah for that much but I care and you say a",
    "start": "1567719",
    "end": "1575789"
  },
  {
    "text": "table of wallets yeah yes I've live template that the other two event handlers to make it quick so",
    "start": "1575789",
    "end": "1582479"
  },
  {
    "text": "I've got a cash withdrawal case they passed it and do a repository find buy ID which will return me an optional so",
    "start": "1582479",
    "end": "1588389"
  },
  {
    "text": "I'm doing if present and if the wall of you is present I will draw a deposit there man pretty simple because those",
    "start": "1588389",
    "end": "1593999"
  },
  {
    "text": "are the operation we do to update our query model when this occurs now we have got our",
    "start": "1593999",
    "end": "1599969"
  },
  {
    "text": "event handlers and we jackin our query Maul the wallet view we have another way to actually clear your",
    "start": "1599969",
    "end": "1605250"
  },
  {
    "text": "wallet to yet may I've shown the queries we've got a fine wallet query I'm gonna find all wallet screaming now what I",
    "start": "1605250",
    "end": "1611970"
  },
  {
    "text": "think is the best place to put those query handlers for now is as they're gonna be direct we're going to ask a",
    "start": "1611970",
    "end": "1617310"
  },
  {
    "text": "single component to answer that question like asking you for your age I should direct those to the authoritative unit",
    "start": "1617310",
    "end": "1622710"
  },
  {
    "text": "of that model so the query handlers that's the wallet view projector is in charge of updating a wallet view I feel",
    "start": "1622710",
    "end": "1628560"
  },
  {
    "text": "quite strongly that makes sense to put the query handler up here for now especially as it's quite a small file",
    "start": "1628560",
    "end": "1633780"
  },
  {
    "text": "it's not too big yet so let's put it in the same thing so that's going to do for demo purposes introduce a query handler",
    "start": "1633780",
    "end": "1639360"
  },
  {
    "text": "similarly to the command Handler and event handler annotations we have an add query Handler and as this is a spring",
    "start": "1639360",
    "end": "1644610"
  },
  {
    "text": "bean and we were a Springwood environment acts on will check for all the beans you have whether our message handling functions on that and register",
    "start": "1644610",
    "end": "1651000"
  },
  {
    "text": "dose to the right buses so if you have an event handler initative function it will be registered to the event bus similarly if you have a query handler",
    "start": "1651000",
    "end": "1657630"
  },
  {
    "text": "annotated function will be registered to the query bus so let's first do the fine",
    "start": "1657630",
    "end": "1665010"
  },
  {
    "text": "wallet and the return type will be a wallet view and we're going to do a fine wallet query and I'm gonna return",
    "start": "1665010",
    "end": "1671400"
  },
  {
    "text": "repository find by ID like so a new query wallet ID and I'm gonna be lazy",
    "start": "1671400",
    "end": "1679020"
  },
  {
    "text": "and not return to optional just gonna return null if it's not there simplifying my life and I'm gonna do",
    "start": "1679020",
    "end": "1684330"
  },
  {
    "text": "another query handler where I want to return all the wallet views so I'm gonna do a list all the wallet views like so",
    "start": "1684330",
    "end": "1690810"
  },
  {
    "text": "I'm gonna find all wallets query and on this we're just gonna do repository or find all very basic and this is it for",
    "start": "1690810",
    "end": "1699930"
  },
  {
    "text": "the projector so this is the bit we all want to emphasize on we wanted to emphasize on providing you the command",
    "start": "1699930",
    "end": "1705210"
  },
  {
    "text": "well in the query model just quickly glancing over the order bits because that feels a little bit about boilerplate to actually life go down mmm",
    "start": "1705210",
    "end": "1713490"
  },
  {
    "text": "now we also need a way to actually query these we need a way to dispatch the queries actually retrieve that in our",
    "start": "1713490",
    "end": "1719130"
  },
  {
    "text": "client so again we've got our UI package and here we have a wallet query controller as you might have guessed",
    "start": "1719130",
    "end": "1725130"
  },
  {
    "text": "again this is a rest controller now for a slash query and we got a gap one and a",
    "start": "1725130",
    "end": "1731580"
  },
  {
    "text": "gap all and there is a couple of things I want to point out so the query gateway up here will return",
    "start": "1731580",
    "end": "1738150"
  },
  {
    "text": "you a completable future because we're doing a direct query because you don't know when it's gonna be returned we're gonna focus on a synchronicity here",
    "start": "1738150",
    "end": "1743870"
  },
  {
    "text": "there's also a bet that we're not only providing the wallet query or the queries we've deduced but we're also",
    "start": "1743870",
    "end": "1749910"
  },
  {
    "text": "going to define the response type we have up here the way to do that in acts on is by using the response types static",
    "start": "1749910",
    "end": "1756930"
  },
  {
    "text": "functions instance of or multiple instances of now in our find wallet query we want a single instance so we do",
    "start": "1756930",
    "end": "1763410"
  },
  {
    "text": "the instance of a wallet view clause and the other one we have multiple instances of and lastly up here prior to actually",
    "start": "1763410",
    "end": "1770550"
  },
  {
    "text": "going to push this to pivotal cloud is that we're using a query gateway so again a convenience approach to",
    "start": "1770550",
    "end": "1776309"
  },
  {
    "text": "dispatching our queries rather than doing that with a bit more for both query bus right so I'm in a happy state",
    "start": "1776309",
    "end": "1783179"
  },
  {
    "text": "I'm gonna build my application so essentially that new control is just gonna give us a way to go away and query",
    "start": "1783179",
    "end": "1790470"
  },
  {
    "text": "against this table of all the wallets so this is separate from the wallets themselves if you like you know they're",
    "start": "1790470",
    "end": "1796559"
  },
  {
    "text": "part of our command model but here what we've done is we've built a projection",
    "start": "1796559",
    "end": "1802380"
  },
  {
    "text": "of all the things that have happened to all the wallets right exactly so yeah so",
    "start": "1802380",
    "end": "1807480"
  },
  {
    "text": "there's a bit you wanted to tell about what we're going to do with biffle cloud 5 yeah right yeah that's right so so now",
    "start": "1807480",
    "end": "1813540"
  },
  {
    "text": "we've built the application itself it's great that it's on this laptop and then it runs but it's even better if you can",
    "start": "1813540",
    "end": "1820950"
  },
  {
    "text": "all use it if it's out in the cloud so let's try and do that shall we so first",
    "start": "1820950",
    "end": "1826230"
  },
  {
    "text": "of all I'm not going to do this bit so in a cloud foundry it's it's got a really nice little",
    "start": "1826230",
    "end": "1832620"
  },
  {
    "text": "marketplace thing where you can do things like give me a database and developers can do that you don't need a",
    "start": "1832620",
    "end": "1838740"
  },
  {
    "text": "DBA you don't need to you know fill in a form or whatever you just go and do it at a command line but it's a high",
    "start": "1838740",
    "end": "1845429"
  },
  {
    "text": "availability database so it takes about five or six minutes to build and we don't really have the luxury of that",
    "start": "1845429",
    "end": "1850890"
  },
  {
    "text": "amount of time so I've done that in advance or in anticipation of this talk so I've done that bit already but the",
    "start": "1850890",
    "end": "1857460"
  },
  {
    "text": "bit that we are gonna show is a CF push so anyone in the room use CF push before",
    "start": "1857460",
    "end": "1863990"
  },
  {
    "text": "ok one two three so maybe about five six so as CF push is a wave you interacting with Cloud Foundry",
    "start": "1863990",
    "end": "1870290"
  },
  {
    "text": "so use a command-line tool tell it where your source code is and maybe you could",
    "start": "1870290",
    "end": "1876340"
  },
  {
    "text": "switch over soon and we'll have a look at that so what Stephens gonna do is he's going",
    "start": "1876340",
    "end": "1882200"
  },
  {
    "text": "to do a CF push it's gonna push all the bits of code that we've built to Cloud",
    "start": "1882200",
    "end": "1887660"
  },
  {
    "text": "Foundry using a manifest manifest looks something like this so it names the",
    "start": "1887660",
    "end": "1894440"
  },
  {
    "text": "application it says what style of application is in this case it's a java application it says where the jar is and",
    "start": "1894440",
    "end": "1901160"
  },
  {
    "text": "then it pushes that up to pivotal car foundry and cloud foundry then does all",
    "start": "1901160",
    "end": "1907790"
  },
  {
    "text": "the hard work in making that run in the cloud so it sets up the networking so it has a DNS entry and so that DNS entry is",
    "start": "1907790",
    "end": "1915200"
  },
  {
    "text": "available from outside it sorts out an operating system for it to run on which",
    "start": "1915200",
    "end": "1920990"
  },
  {
    "text": "is a hardened version of Ubuntu it puts a JVM on there it adds the application it calculates what the command line",
    "start": "1920990",
    "end": "1927980"
  },
  {
    "text": "should be to run it it hardens that by making sure that their security certificates are dealt with properly on",
    "start": "1927980",
    "end": "1934040"
  },
  {
    "text": "there it does a whole bunch of stuff it orchestrates that to then run on a",
    "start": "1934040",
    "end": "1939460"
  },
  {
    "text": "container somewhere in the cloud and that process takes about two minutes or",
    "start": "1939460",
    "end": "1944780"
  },
  {
    "text": "so and that's what you can see scrolling away behind me there yes so once that",
    "start": "1944780",
    "end": "1949850"
  },
  {
    "text": "process is finished the application becomes healthy as it is now and we get ourselves a route to that application so",
    "start": "1949850",
    "end": "1957110"
  },
  {
    "text": "we can now go and test it so that's what Stephens gonna do here so he's doing a HTTP POST wait I need to know what the",
    "start": "1957110",
    "end": "1964670"
  },
  {
    "text": "apps are oh yeah okay so so here's our apps we had a backup that we prepared earlier just in case the conference",
    "start": "1964670",
    "end": "1970880"
  },
  {
    "text": "Wi-Fi wasn't great but it seems fine so and Stephens going to do a post now to that command rest controller that we",
    "start": "1970880",
    "end": "1978080"
  },
  {
    "text": "created earlier and what you saw on the other side there is the log messages flying past as it went ahead and did",
    "start": "1978080",
    "end": "1986330"
  },
  {
    "text": "those commands on the application so we know it's working the answer you got",
    "start": "1986330",
    "end": "1991580"
  },
  {
    "text": "back was a 200 okay so we should have a bunch of wallets right yes we should so we can query that now with a query",
    "start": "1991580",
    "end": "1998660"
  },
  {
    "text": "controller so same thing again we do a ATP get post yeah but I'm introducing a",
    "start": "1998660",
    "end": "2006040"
  },
  {
    "text": "couple more commands to make there oh yeah it a bit more interesting oh I see sorry no that's fine I apologize so yes",
    "start": "2006040",
    "end": "2012910"
  },
  {
    "text": "Steven was also showing the fact that and it notices if you haven't got enough money in your wallets and you try and",
    "start": "2012910",
    "end": "2018490"
  },
  {
    "text": "take out more than you have which is good",
    "start": "2018490",
    "end": "2022950"
  },
  {
    "text": "yes thank you everybody oh yeah triple L on your wallet there there we go okay so here's our wallets",
    "start": "2025470",
    "end": "2032290"
  },
  {
    "text": "so we have three wallets on the get our wallets and then we can query an",
    "start": "2032290",
    "end": "2037420"
  },
  {
    "text": "individual wallet as well and if anyone's got a mobile phone they can do",
    "start": "2037420",
    "end": "2043960"
  },
  {
    "text": "that through that endpoint as well because it's available on the cloud so it's in production essentially an",
    "start": "2043960",
    "end": "2049060"
  },
  {
    "text": "awesome couple of minutes right so that's not bad as it goes so like we said it's a way of speeding things up so",
    "start": "2049060",
    "end": "2055360"
  },
  {
    "text": "we can you know essentially deliver more with less time which is good yes so were",
    "start": "2055360",
    "end": "2061120"
  },
  {
    "text": "next how does this help us so part of the reason that Steven and I first",
    "start": "2061120",
    "end": "2066520"
  },
  {
    "text": "started working together on this was to build a much more complicated example which which we did do is called the axon",
    "start": "2066520",
    "end": "2073030"
  },
  {
    "text": "trader you can find it axon trader dot CF apps dot IO there'll be a link at the",
    "start": "2073030",
    "end": "2079300"
  },
  {
    "text": "end of the slide day and essentially that's a more complicated example of",
    "start": "2079300",
    "end": "2084908"
  },
  {
    "text": "some of the things that we've shown you today so it covers three or four different models for example there's a",
    "start": "2084909",
    "end": "2090820"
  },
  {
    "text": "model around users and how users log in there's various other parts to the",
    "start": "2090820",
    "end": "2096850"
  },
  {
    "text": "application and it kind of looks something like this when we started so",
    "start": "2096850",
    "end": "2101920"
  },
  {
    "text": "it's got it's a trading application a bit like a stock trading application so",
    "start": "2101920",
    "end": "2107050"
  },
  {
    "text": "it's got companies in there it's got users who want to trade stocks it's got portfolios for those users and",
    "start": "2107050",
    "end": "2114010"
  },
  {
    "text": "it's got order books where the trades actually happen and in order to build that complicated example we went",
    "start": "2114010",
    "end": "2120970"
  },
  {
    "text": "straight away down the path of producing a monolith because it was really straightforward to do that and it's just",
    "start": "2120970",
    "end": "2128800"
  },
  {
    "text": "like we did just now yes and it allowed us to learn about the domain and learn about things that are important in the",
    "start": "2128800",
    "end": "2134530"
  },
  {
    "text": "domain as we went through the process of building the functionality out so at the",
    "start": "2134530",
    "end": "2141200"
  },
  {
    "text": "start of the process we had essentially two components a UI component and a",
    "start": "2141200",
    "end": "2146960"
  },
  {
    "text": "trader application which had in it all these different domains so we started",
    "start": "2146960",
    "end": "2152330"
  },
  {
    "text": "with a monolith but then over time we because we chosen to use axon and",
    "start": "2152330",
    "end": "2158540"
  },
  {
    "text": "because we had PCF and because we had split our application into these",
    "start": "2158540",
    "end": "2164810"
  },
  {
    "text": "separate parts it was very easy for us to then start to peel them away and",
    "start": "2164810",
    "end": "2170000"
  },
  {
    "text": "deploy them differently so that's what we did we took for example the",
    "start": "2170000",
    "end": "2175160"
  },
  {
    "text": "portfolio's in the order books and we created something that we called a trading engine which was more like a",
    "start": "2175160",
    "end": "2181460"
  },
  {
    "text": "micro service essentially so we could deal with the things that the UI had to do through the trader app but we could",
    "start": "2181460",
    "end": "2189650"
  },
  {
    "text": "deal with the trades themselves which was more heavy computationally for example and more needed more resources",
    "start": "2189650",
    "end": "2198590"
  },
  {
    "text": "we could deal with that in a separate component and we could use messaging to link the two together with events so the",
    "start": "2198590",
    "end": "2206780"
  },
  {
    "text": "things that we were talking about today where your command model can emit events and those events can be listened to by",
    "start": "2206780",
    "end": "2213320"
  },
  {
    "text": "any other part of the system we can start to take advantage of that by distributing the system and using a",
    "start": "2213320",
    "end": "2220160"
  },
  {
    "text": "messaging paradigm like rabbit or like Kafka or something like that to pass",
    "start": "2220160",
    "end": "2226040"
  },
  {
    "text": "these messages around all these distributed parts and that allows us to",
    "start": "2226040",
    "end": "2231380"
  },
  {
    "text": "scale it differently so for example if we're doing lots of queries we might move our query part out into its own",
    "start": "2231380",
    "end": "2238700"
  },
  {
    "text": "micro service we might scale that differently to how we'd scale the rest",
    "start": "2238700",
    "end": "2243800"
  },
  {
    "text": "of the application usually most applications have maybe 80% queries",
    "start": "2243800",
    "end": "2249290"
  },
  {
    "text": "maybe 20% commands on average so it makes sense that in production we could",
    "start": "2249290",
    "end": "2255470"
  },
  {
    "text": "scale those parts that deal with queries differently to how we scale the parts that deal with commands so it was a",
    "start": "2255470",
    "end": "2263660"
  },
  {
    "text": "really interesting process and I think it was very a lot of fun and also we got to try out some of these",
    "start": "2263660",
    "end": "2270180"
  },
  {
    "text": "things that you know perhaps are theoretical but actually in practice work really well so like I said the code",
    "start": "2270180",
    "end": "2277260"
  },
  {
    "text": "is all in available for that as well the axon trader and there'll be a link at the end of the slide deck so there is",
    "start": "2277260",
    "end": "2283650"
  },
  {
    "text": "one take away we still have there is there is yes so what's next yes so",
    "start": "2283650",
    "end": "2288690"
  },
  {
    "start": "2284000",
    "end": "2388000"
  },
  {
    "text": "what's next on this is that so like when Ben pointed out we're using the core API is the means to talk with our separate",
    "start": "2288690",
    "end": "2295710"
  },
  {
    "text": "components and as that brings us with a way to have those components location",
    "start": "2295710",
    "end": "2301440"
  },
  {
    "text": "transparent from one another they're not aware of where the other ones live we can remove those into separate applications separate repositories",
    "start": "2301440",
    "end": "2308160"
  },
  {
    "text": "separate teams whatever fits your need now we can use rabbit and spring cloud and other things to delegate those",
    "start": "2308160",
    "end": "2314160"
  },
  {
    "text": "messages but what we did with attack sonic is build a theme called axonal server and what we want to share with",
    "start": "2314160",
    "end": "2319320"
  },
  {
    "text": "you guys is that we're gonna do our best to bring axon server to PCF to make it",
    "start": "2319320",
    "end": "2324360"
  },
  {
    "text": "very simple that you just instantiate a axon server by calling CF create surface and you can tie it to the application",
    "start": "2324360",
    "end": "2331140"
  },
  {
    "text": "we've just shown and we could pull it out together in two separate applications and scale it differently as",
    "start": "2331140",
    "end": "2336390"
  },
  {
    "text": "the need arises that's our take be really cool yes yeah definitely looking",
    "start": "2336390",
    "end": "2342150"
  },
  {
    "text": "forward to that all right because he should make it really easy then for you to not only build your code but also consume some of the things that you also",
    "start": "2342150",
    "end": "2349290"
  },
  {
    "text": "need in order to support it when you make it yes distributed so you know the messaging and the databases and that",
    "start": "2349290",
    "end": "2355500"
  },
  {
    "text": "kind of stuff so yeah we're very much looking forward to that it's going to be good so let's quickly go to thanking",
    "start": "2355500",
    "end": "2362190"
  },
  {
    "text": "everybody for listening for about 40 minutes to us so you're the ref architecture for the action trader and",
    "start": "2362190",
    "end": "2368550"
  },
  {
    "text": "also the wallet demo if you want to go to there's a QR code and you can contact us on those things and if there are any",
    "start": "2368550",
    "end": "2373950"
  },
  {
    "text": "questions we'll take it with them all right thank you guys give them a big",
    "start": "2373950",
    "end": "2380280"
  },
  {
    "text": "round of applause first [Applause]",
    "start": "2380280",
    "end": "2389199"
  }
]