[
  {
    "text": "I'm super excited to talk to you about Walt and just kind of before we get",
    "start": "9670",
    "end": "15139"
  },
  {
    "text": "started how many people here have heard of Walt before okay a fair number how many people work",
    "start": "15139",
    "end": "20900"
  },
  {
    "text": "in some type of security related field including software engineering pull so",
    "start": "20900",
    "end": "28990"
  },
  {
    "text": "do not forget to engage and rate this session and ask questions on the go-to app so this is me",
    "start": "28990",
    "end": "37100"
  },
  {
    "text": "my name is Seth Fargo I'm a software engineer and open source advocated Hashi Corp so many people have heard of Hoshi",
    "start": "37100",
    "end": "42620"
  },
  {
    "text": "court before cool so this is our logo if you haven't heard of us before or seen",
    "start": "42620",
    "end": "48589"
  },
  {
    "text": "what we've done before but you might be familiar with some of the open-source projects that we make like vagrant",
    "start": "48589",
    "end": "53690"
  },
  {
    "text": "Packer surf console terraform and most recently volt so vagrant is a",
    "start": "53690",
    "end": "59389"
  },
  {
    "text": "development environment automation tool Packer is a build environment automation",
    "start": "59389",
    "end": "65000"
  },
  {
    "text": "tool surface low-level gossip protocols console service discovery and orchestration terraform is provisioning",
    "start": "65000",
    "end": "71360"
  },
  {
    "text": "infrastructure and then vault is managing secrets on both a small and large scale so let's talk about secret",
    "start": "71360",
    "end": "78650"
  },
  {
    "text": "management and I want to talk about secret management pre volt so for the",
    "start": "78650",
    "end": "84260"
  },
  {
    "text": "next let's say 10 minutes let's just assume vault doesn't exist and that this is six months ago before vault existed",
    "start": "84260",
    "end": "91690"
  },
  {
    "text": "what is a secret I think this this is different for every person like what do",
    "start": "91690",
    "end": "99290"
  },
  {
    "text": "you consider secret information I think there's some really obvious answers like database password but then there are",
    "start": "99290",
    "end": "107360"
  },
  {
    "text": "things that we consider sensitive that aren't necessarily secret right so would",
    "start": "107360",
    "end": "113390"
  },
  {
    "text": "you consider something like a customer phone number a secret piece of information probably not but it's",
    "start": "113390",
    "end": "121670"
  },
  {
    "text": "sensitive it could cause personal harm to that customer if that information is made",
    "start": "121670",
    "end": "127310"
  },
  {
    "text": "available so let's look at some examples when we talk about secret data we have some very obvious things like database",
    "start": "127310",
    "end": "134120"
  },
  {
    "text": "credentials SSL CA certs your you know AWS access keys",
    "start": "134120",
    "end": "139520"
  },
  {
    "text": "encryption keys even things less obvious like the Wi-Fi password or source",
    "start": "139520",
    "end": "144830"
  },
  {
    "text": "control and we do a really good job of keeping those secret we put them under lock and key we only share them with the",
    "start": "144830",
    "end": "151460"
  },
  {
    "text": "people that need have to have access to them but on the flips we have sensitive information which traditionally our",
    "start": "151460",
    "end": "157940"
  },
  {
    "text": "industry has not protected very well things like phone numbers your mother's maiden name why is that one so important",
    "start": "157940",
    "end": "164330"
  },
  {
    "text": "well that's the number one security question in the world email addresses",
    "start": "164330",
    "end": "170990"
  },
  {
    "text": "which we traditionally store in plain text so that we can grab those back out and send some marketing email the",
    "start": "170990",
    "end": "176270"
  },
  {
    "text": "marketing department really likes to have those emails available to them things like our data center locations",
    "start": "176270",
    "end": "181900"
  },
  {
    "text": "doesn't seem you know too terrible to have the data center oh yeah we're in",
    "start": "181900",
    "end": "188090"
  },
  {
    "text": "you know our customer personally identifiable information so things like",
    "start": "188090",
    "end": "194060"
  },
  {
    "text": "home addresses phone numbers anything that uniquely identifies a customer",
    "start": "194060",
    "end": "200350"
  },
  {
    "text": "possibly things like email and chat our slack our internal communications how",
    "start": "200350",
    "end": "205760"
  },
  {
    "text": "well do we secure those and more so how well do we protect them my laptop is sitting over there unlocked someone",
    "start": "205760",
    "end": "212150"
  },
  {
    "text": "could walk up press the Escape key and how difficult would it be for them to access my company email or my company",
    "start": "212150",
    "end": "218480"
  },
  {
    "text": "chat you know we've seen incidents where iPhones have been left at bars and it",
    "start": "218480",
    "end": "223640"
  },
  {
    "text": "happened to be the new version of the iPhone and that cost companies like Apple a lot of money because of the too",
    "start": "223640",
    "end": "230210"
  },
  {
    "text": "soon of a release so we need to do a better job of sensitive information keep it so I think as an industry we're",
    "start": "230210",
    "end": "236840"
  },
  {
    "text": "really good at this we have some pretty decent solutions around spirit management when it comes to what we",
    "start": "236840",
    "end": "243740"
  },
  {
    "text": "traditionally do use a secret but I think it's an industry that or unaware",
    "start": "243740",
    "end": "250040"
  },
  {
    "text": "of the way that we treat sensitivity I think to have a different definition and",
    "start": "250040",
    "end": "257540"
  },
  {
    "text": "I think this really is home for a number of people it doesn't matter whether the data is or sensitive I consider a piece of",
    "start": "257540",
    "end": "265050"
  },
  {
    "text": "information secret if releasing it would cause it to hit the news in some type of",
    "start": "265050",
    "end": "271350"
  },
  {
    "text": "negative way and I think one of the prime examples of that is most recently like Ashley Madison",
    "start": "271350",
    "end": "277169"
  },
  {
    "text": "so obviously Ashley Madison had some secret problems they made their database",
    "start": "277169",
    "end": "282300"
  },
  {
    "text": "accessible attackers were able to gain access to that database and as a result",
    "start": "282300",
    "end": "287490"
  },
  {
    "text": "they had a dump of the database that's obviously you've gone perfectly however",
    "start": "287490",
    "end": "293160"
  },
  {
    "text": "the information in that database was sensitive the names and contact information of the people who are",
    "start": "293160",
    "end": "299130"
  },
  {
    "text": "interested in having an affair was all just stored in plain text and I think",
    "start": "299130",
    "end": "304860"
  },
  {
    "text": "our systems are designed like this a little bit today I think most corporate enterprises look something like this we",
    "start": "304860",
    "end": "311640"
  },
  {
    "text": "have this giant external firewall that has maybe a few security gates but once",
    "start": "311640",
    "end": "316830"
  },
  {
    "text": "you're inside the you know the demilitarized zone once you're inside the military fort we don't have a lot of",
    "start": "316830",
    "end": "324570"
  },
  {
    "text": "secure controls of who can access what it's kind of like once you're in the",
    "start": "324570",
    "end": "329580"
  },
  {
    "text": "data center we trust all of the traffic and once we assume that everything comes from the application and I think we need",
    "start": "329580",
    "end": "336810"
  },
  {
    "text": "to design our data centers a little bit more like this where each individual component is not only surrounded by this",
    "start": "336810",
    "end": "343200"
  },
  {
    "text": "giant external firewall or series of firewalls but that each component is",
    "start": "343200",
    "end": "348810"
  },
  {
    "text": "doing validation each component says okay I trust the information you're giving me and I trust that I can",
    "start": "348810",
    "end": "354690"
  },
  {
    "text": "exchange information with you and that's kind of what SSL was built on was this trust model so let's talk about secret",
    "start": "354690",
    "end": "363060"
  },
  {
    "text": "management one point out so we have these secrets like database credentials",
    "start": "363060",
    "end": "368270"
  },
  {
    "text": "how do we get those into an application so traditionally the answer there has been you either hard-code them or you",
    "start": "368270",
    "end": "375720"
  },
  {
    "text": "use something like configuration management to lay them down at runtime but more importantly how do humans",
    "start": "375720",
    "end": "382350"
  },
  {
    "text": "acquire those secrets so you have operators and application engineers and they need to get access to those secrets",
    "start": "382350",
    "end": "387840"
  },
  {
    "text": "so that they can do their job they might need to be digging into the production database they might need to be relaying",
    "start": "387840",
    "end": "394500"
  },
  {
    "text": "something - perhaps reproduce a bug so that they can fix it on the software and how do we",
    "start": "394500",
    "end": "400470"
  },
  {
    "text": "invalidate those secrets so how do they get updated so if I hand you the database password how long is that good",
    "start": "400470",
    "end": "406230"
  },
  {
    "text": "for is that good until we rotate the database password what are the policies around rotating the database password",
    "start": "406230",
    "end": "411840"
  },
  {
    "text": "that comes to questions which is when we rotate the database password how do we",
    "start": "411840",
    "end": "416850"
  },
  {
    "text": "make sure that the humans and the applications have the new version and that they're still authorized to communicate with that database it's a",
    "start": "416850",
    "end": "423210"
  },
  {
    "text": "very unsolved problem right now and then lastly let's say something leaves the company there's a malicious",
    "start": "423210",
    "end": "429060"
  },
  {
    "text": "attack how do we all those spirits how do we make sure that even if our database credentials are leaked we have",
    "start": "429060",
    "end": "435600"
  },
  {
    "text": "the opportunity to shut everything down before the database dump can be acquired",
    "start": "435600",
    "end": "441110"
  },
  {
    "text": "so this is traditional secret management you just hard code it in the config",
    "start": "441110",
    "end": "447230"
  },
  {
    "text": "maybe you're using development variables if you're doing like a 12 factor app but",
    "start": "447230",
    "end": "452520"
  },
  {
    "text": "even then if someone gains access to the system they can just dump the environment so why isn't configuration",
    "start": "452520",
    "end": "459990"
  },
  {
    "text": "management a good solution for dropping off secrets well I think first and most importantly it's centrally stored so if",
    "start": "459990",
    "end": "466260"
  },
  {
    "text": "you're using something like chef or puppet or ansible or salt whether you're using like their server Edition so all",
    "start": "466260",
    "end": "472350"
  },
  {
    "text": "of your secrets are stored on the chef server or if you're just using the the freemium and where all your secrets are",
    "start": "472350",
    "end": "478560"
  },
  {
    "text": "stored on something like git or SCM so you're checking in secrets into a system",
    "start": "478560",
    "end": "484530"
  },
  {
    "text": "that wasn't actually designed to be secret so things like chef encrypted data bags have known vulnerabilities and",
    "start": "484530",
    "end": "491270"
  },
  {
    "text": "the community for example has come up with alternatives because of your vulnerability to each other so it's",
    "start": "491270",
    "end": "498870"
  },
  {
    "text": "proven that they're not a great solution for storing secrets or so the",
    "start": "498870",
    "end": "504300"
  },
  {
    "text": "authentication procedures with who can connects to the chef server connect with the puppet server is also not 100%",
    "start": "504300",
    "end": "511530"
  },
  {
    "text": "secure so it's possible for a rogue client to join a cluster and potentially",
    "start": "511530",
    "end": "516839"
  },
  {
    "text": "gain access to secrets that it shouldn't have access to just by pretending to be part of the cluster",
    "start": "516839",
    "end": "522599"
  },
  {
    "text": "writing out the secrets to a file and then reading them straight from disk it's eventually consistent",
    "start": "522599",
    "end": "528570"
  },
  {
    "text": "so if you're running chef or puppet on some type of interval it takes 15 minutes 30 minutes until that a",
    "start": "528570",
    "end": "536340"
  },
  {
    "text": "convergence change has happened so that means if right now you have a database breach and you need to completely change",
    "start": "536340",
    "end": "542280"
  },
  {
    "text": "all of your database passwords and rotate everything you have to wait 15 to 20 minutes or 30 minutes or you have to",
    "start": "542280",
    "end": "548520"
  },
  {
    "text": "force a configuration management run across your entire clock and this this poses lots of problems if you have a",
    "start": "548520",
    "end": "554250"
  },
  {
    "text": "number of servers for example you might be introducing a thundering heard problem you might not actually converge",
    "start": "554250",
    "end": "559800"
  },
  {
    "text": "and at some point your application is going to be communicating with bad database credentials until that",
    "start": "559800",
    "end": "564930"
  },
  {
    "text": "convergence happens there's no access controls or very little access controls",
    "start": "564930",
    "end": "570090"
  },
  {
    "text": "but more importantly there's no auditing around those access controls so who access to secret why did they access it",
    "start": "570090",
    "end": "575730"
  },
  {
    "text": "how long did they access it what did they use it for these are all questions that we asked and when we talk about I",
    "start": "575730",
    "end": "581790"
  },
  {
    "text": "know we're in the lean track but when we talk about rugged somebody said something two days ago that really",
    "start": "581790",
    "end": "587580"
  },
  {
    "text": "struck with me which is you're never really going to be able to prevent all of these attacks the the value is that",
    "start": "587580",
    "end": "594570"
  },
  {
    "text": "you want to make it so difficult that people choose a different and alternative route that hackers to",
    "start": "594570",
    "end": "599700"
  },
  {
    "text": "something different because you've made it so difficult for them to hack you technologically so they'll resort to something like a social engineering",
    "start": "599700",
    "end": "605580"
  },
  {
    "text": "attack instead when that happens auditing and access controls are super",
    "start": "605580",
    "end": "611010"
  },
  {
    "text": "important it's very important that you're able to track all of this because in the event of a security vulnerability",
    "start": "611010",
    "end": "616050"
  },
  {
    "text": "the last thing you ever want to have in a press release is we don't know what happened it's much better to come out",
    "start": "616050",
    "end": "623220"
  },
  {
    "text": "and say here's where our vulnerability was here's how we assay here's how we mitigated it and lastly there's no",
    "start": "623220",
    "end": "628770"
  },
  {
    "text": "support for revocation so if you delete the chef encrypted data bag or you know",
    "start": "628770",
    "end": "633810"
  },
  {
    "text": "remove the the puppet manifest all of the machines that have been provisioned already have access to that see its",
    "start": "633810",
    "end": "639590"
  },
  {
    "text": "historic Armin there's no way to revoke that so why not something like an online",
    "start": "639590",
    "end": "646560"
  },
  {
    "text": "date of it tolls you keeper of those types of things they're not designed so",
    "start": "646560",
    "end": "653730"
  },
  {
    "text": "at Hasek harp we believe in the UNIX philosophy which is do one thing and do it really well and you would never expect ls to create",
    "start": "653730",
    "end": "659730"
  },
  {
    "text": "a file for you and we like to take that same with our tools and things like post",
    "start": "659730",
    "end": "665040"
  },
  {
    "text": "graphs and console art designed to be a secret storage engine or if they do",
    "start": "665040",
    "end": "670980"
  },
  {
    "text": "those actors are very various opponents code they're typically stored in plain text a number of these have the ability",
    "start": "670980",
    "end": "677850"
  },
  {
    "text": "to be encrypted but they're not encrypted by default so that means that if you're using them for secret storage you have to go above and beyond with the",
    "start": "677850",
    "end": "684360"
  },
  {
    "text": "traditional setup just to get the added level of security that you need and then lastly a very few of them have any type",
    "start": "684360",
    "end": "690810"
  },
  {
    "text": "of auditing or revocation abilities built in you have to build custom Postgres extensions you have to write",
    "start": "690810",
    "end": "696360"
  },
  {
    "text": "tolling a round console to make that possible so another question is how do",
    "start": "696360",
    "end": "703050"
  },
  {
    "text": "we handle the secret sprawl which is in a large organization we talk about human humans",
    "start": "703050",
    "end": "708990"
  },
  {
    "text": "operators developers and machines having access grids how do we deal with the fact that there's secrets everywhere and",
    "start": "708990",
    "end": "715860"
  },
  {
    "text": "most importantly what do we do in the event of a compromised what is our break glass procedure so we see some anomalous",
    "start": "715860",
    "end": "722940"
  },
  {
    "text": "logs and think someone might have gained unauthorized access to one of our systems what do we do what does that",
    "start": "722940",
    "end": "728880"
  },
  {
    "text": "break glass procedure and most importantly how does that break glass procedure affect the rest of our",
    "start": "728880",
    "end": "733980"
  },
  {
    "text": "application the rest of our environment they're gonna take down production are we able to recover quickly and a lot of",
    "start": "733980",
    "end": "740940"
  },
  {
    "text": "the existing systems can't answer that question they don't know the attack surface they don't know who's accessing",
    "start": "740940",
    "end": "746430"
  },
  {
    "text": "a secret so it's difficult to have a break glass procedure so if we talk",
    "start": "746430",
    "end": "751650"
  },
  {
    "text": "about the state of the world prefault we have a lot of secret sprawl who has keys why do they have them what are they",
    "start": "751650",
    "end": "757080"
  },
  {
    "text": "using them for with very little auditing or visibility we have these decentralized key storage and",
    "start": "757080",
    "end": "763260"
  },
  {
    "text": "potentially multiple systems and lastly we have the this poorly defined grade",
    "start": "763260",
    "end": "768839"
  },
  {
    "text": "class procedure and in security it's kind of terrible to say it but you have",
    "start": "768839",
    "end": "774150"
  },
  {
    "text": "to optimize for the worst case scenario it's a field where the thing that can",
    "start": "774150",
    "end": "779339"
  },
  {
    "text": "happen will always happen best to optimize for those scenarios like the break loss procedures so let's talk",
    "start": "779339",
    "end": "786660"
  },
  {
    "text": "about secret management to point out we were really aware of a lot of these problems it was problems we were facing",
    "start": "786660",
    "end": "793620"
  },
  {
    "text": "internally so we maintain an application called Atlas anybody heard about what's before cool",
    "start": "793620",
    "end": "800410"
  },
  {
    "text": "so Atlas the way Atlas works is you have to give us your cloud credentials it's",
    "start": "800410",
    "end": "806560"
  },
  {
    "text": "pretty scary right like we're gonna provision your infrastructure and manage your infrastructure for you but as a result",
    "start": "806560",
    "end": "811900"
  },
  {
    "text": "you have to give us your clock credentials which means we have to create a system that you can trust us",
    "start": "811900",
    "end": "816910"
  },
  {
    "text": "enough to give us your GCE file or to give us your AWS access keys and that's",
    "start": "816910",
    "end": "822850"
  },
  {
    "text": "a difficult trusted build so instead of building some complex Postgres extensions and blogging about it we",
    "start": "822850",
    "end": "829090"
  },
  {
    "text": "decided to make a tool and we made that tool after talking to a number of customers and we realized that pretty",
    "start": "829090",
    "end": "836830"
  },
  {
    "text": "much everybody has very similar problems they're just thinking about them in different ways so we came up with a list",
    "start": "836830",
    "end": "842680"
  },
  {
    "text": "of goals the first goal was volt needed to be the single source of truth for secrets and volt could be backed by",
    "start": "842680",
    "end": "849970"
  },
  {
    "text": "another storage engine that you might be familiar with something like Postgres or console but vault itself needed to be",
    "start": "849970",
    "end": "855850"
  },
  {
    "text": "the entry point for ceilings we need to have programmatic application access so",
    "start": "855850",
    "end": "861010"
  },
  {
    "text": "tools like chef and puppet needed to be able to access those secrets via some type of authentication that proof access",
    "start": "861010",
    "end": "868270"
  },
  {
    "text": "to them but that whole process to be automated we can't have manual figuration in the modern world it",
    "start": "868270",
    "end": "874150"
  },
  {
    "text": "doesn't scale we needed also to have manual access though so operators need",
    "start": "874150",
    "end": "879820"
  },
  {
    "text": "to be able to go in and get a typical protocol or get an API access key they",
    "start": "879820",
    "end": "885100"
  },
  {
    "text": "can replay an attack or so that they can potentially debug some type of issue in production additionally it's not listed",
    "start": "885100",
    "end": "893230"
  },
  {
    "text": "here but developers might need access but they might need a different level of access so operators might have a full",
    "start": "893230",
    "end": "899080"
  },
  {
    "text": "open view of everything but developers can all access so here it's in the organization it had to be practical and",
    "start": "899080",
    "end": "906610"
  },
  {
    "text": "this was really open-ended but what it really boiled down to was that it had to work out of the box a lot of the",
    "start": "906610",
    "end": "912760"
  },
  {
    "text": "existing secret management systems were black boxes you deployed them and this is what you could do and it was very",
    "start": "912760",
    "end": "919390"
  },
  {
    "text": "much an entry point and you were done and out of that came the fact that it had to be open source and being open",
    "start": "919390",
    "end": "926260"
  },
  {
    "text": "source provides two advantages first it means that you can dive into the code right now and you could take a look and",
    "start": "926260",
    "end": "931750"
  },
  {
    "text": "you can find any security vulnerabilities that you might want and you can assess it most other security tools aren't open-source and they won't",
    "start": "931750",
    "end": "938440"
  },
  {
    "text": "provide you with the security assessment if one was done the second thing that came out of practical security was the",
    "start": "938440",
    "end": "944680"
  },
  {
    "text": "user experience so we put a lot of time and effort into the tool to make sure that it's easy to use out of the box but",
    "start": "944680",
    "end": "951069"
  },
  {
    "text": "scales to hundreds of thousands of devices or servers accessing secrets and lastly it had to be modern data center",
    "start": "951069",
    "end": "957699"
  },
  {
    "text": "friendly or as the term that I've had heard thrown around a number of times",
    "start": "957699",
    "end": "963130"
  },
  {
    "text": "here is that it had to be a cloud ready or a cloud ready application so what are",
    "start": "963130",
    "end": "969130"
  },
  {
    "text": "some of the features of vault vault is a secure secret storage mechanism and you",
    "start": "969130",
    "end": "974259"
  },
  {
    "text": "can use in memory which we can talk about a little bit console you can use a",
    "start": "974259",
    "end": "979420"
  },
  {
    "text": "file system based Postgres and we're adding more and more of the community is interested in more and more of there's a",
    "start": "979420",
    "end": "985779"
  },
  {
    "text": "zookeeper back-end now as well one thing that really separates vault from the interesting secret management tools is",
    "start": "985779",
    "end": "991810"
  },
  {
    "text": "that we have this notion of dynamic secrets so when you traditionally think about a storage a secret storage engine",
    "start": "991810",
    "end": "998410"
  },
  {
    "text": "you put secrets in and you pull them out you think it was something like LastPass one Operator to pass an operator type",
    "start": "998410",
    "end": "1004860"
  },
  {
    "text": "some secret an or copy and paste from a web form and they put it under this database type thing then when they want",
    "start": "1004860",
    "end": "1010740"
  },
  {
    "text": "to retrieve it there's apples around it they put password in that's the master password and they get the data out we",
    "start": "1010740",
    "end": "1017190"
  },
  {
    "text": "didn't think that was sustainable so we took a different approach so vault has the ability to create and dynamically",
    "start": "1017190",
    "end": "1024058"
  },
  {
    "text": "distribute secrets and I'll show a demo of that here in a little bit but basically with vault you can point vault",
    "start": "1024059",
    "end": "1030178"
  },
  {
    "text": "to a Postgres server you give alt root access to your Postgres database and you",
    "start": "1030179",
    "end": "1035579"
  },
  {
    "text": "tell it hey when somebody reads from this endpoint with an authorized token give them credentials and those",
    "start": "1035579",
    "end": "1040918"
  },
  {
    "text": "credentials have an expiration they have a renewal interval kind of like a TTL and they can be revoked at any time and",
    "start": "1040919",
    "end": "1047520"
  },
  {
    "text": "they can be revoked on a prefix at any time so what this means is operator is no longer have to work it'll enter a",
    "start": "1047520",
    "end": "1053309"
  },
  {
    "text": "ting secret vault can do that for them in fact the applications themselves can request unique database credentials so",
    "start": "1053309",
    "end": "1060480"
  },
  {
    "text": "if you imagine you're running a Python application or rails application five hundred servers each of those 500",
    "start": "1060480",
    "end": "1066930"
  },
  {
    "text": "servers can uniquely request database credentials and in the event of a compromise not only do you have the",
    "start": "1066930",
    "end": "1072690"
  },
  {
    "text": "auditing and Ackles in place but you have the ability to go back and find out exactly which server was compromised",
    "start": "1072690",
    "end": "1078120"
  },
  {
    "text": "based on the credentials that were used we needed built-in support for things like leasing renewal and revocation as",
    "start": "1078120",
    "end": "1084780"
  },
  {
    "text": "well as key rotation which was recently added we needed the auditing in the applicable MRP explained and lastly and",
    "start": "1084780",
    "end": "1092400"
  },
  {
    "text": "most importantly is we needed the ability to work with everything so initially we looked at something like gr",
    "start": "1092400",
    "end": "1097980"
  },
  {
    "text": "PC if you're from the PC M it's goes protocol for inter process communication and eventually we just settled on an",
    "start": "1097980",
    "end": "1105270"
  },
  {
    "text": "HTTP API and the reason for that is even though HTTP a guys are traditionally slower the the restful area is a bit",
    "start": "1105270",
    "end": "1113030"
  },
  {
    "text": "overblown at the moment modern tools and pretty much every language work with",
    "start": "1113030",
    "end": "1118650"
  },
  {
    "text": "some type of HTTP API in fact at the end of the day you can always resort to curl",
    "start": "1118650",
    "end": "1123810"
  },
  {
    "text": "to get secrets from vault and you can get that information out and JSON and pipe it to something like JQ but we also",
    "start": "1123810",
    "end": "1130500"
  },
  {
    "text": "have first-class support for things like Ruby so we have the wall trooper client there's a node.js client a Python client",
    "start": "1130500",
    "end": "1136400"
  },
  {
    "text": "the official go client and there's a rail client as well and the community is working on more and more so in order for",
    "start": "1136400",
    "end": "1144270"
  },
  {
    "text": "the POSIX flow we built the pinna environment we had a civil way to get",
    "start": "1144270",
    "end": "1151080"
  },
  {
    "text": "secrets so we chose an HTTP API for that as far as secret storage is concerned data is encrypted at transit and every",
    "start": "1151080",
    "end": "1158780"
  },
  {
    "text": "send stuff to the vault it is encrypted and it is encrypted on disk or in memory etc everything's 256 AES GCM we enforce",
    "start": "1158780",
    "end": "1168510"
  },
  {
    "text": "TLS 1.2 so no SSL v3 if you try to communicate with vault it's not",
    "start": "1168510",
    "end": "1173550"
  },
  {
    "text": "downgrade your SSL protocol it will just reject your request and then there's no",
    "start": "1173550",
    "end": "1179070"
  },
  {
    "text": "HSM required and this is both a positive and a negative and a lot of people have this notion that HSMs are like the",
    "start": "1179070",
    "end": "1185790"
  },
  {
    "text": "future and they add a whole lot of entropy we found that that's actually not true the end of the day you get more",
    "start": "1185790",
    "end": "1192440"
  },
  {
    "text": "a really good software algorithm as opposed to an HSM which adds very",
    "start": "1192440",
    "end": "1197920"
  },
  {
    "text": "little if any entropy to a system an entropy is important in secret generation so we don't yet have support",
    "start": "1197920",
    "end": "1204670"
  },
  {
    "text": "for HSMs we're going to add support for HSMs because the number of customers have requested it what we found is that",
    "start": "1204670",
    "end": "1210100"
  },
  {
    "text": "in showing them at the map we did typically change their mind because software to find out rhythm can actually",
    "start": "1210100",
    "end": "1216400"
  },
  {
    "text": "have more entropy so I had slides in",
    "start": "1216400",
    "end": "1222460"
  },
  {
    "text": "case my demo didn't work but I'm gonna switch to demo mode can we turn that off",
    "start": "1222460",
    "end": "1230280"
  },
  {
    "text": "so instead of instead of going through a",
    "start": "1236880",
    "end": "1242679"
  },
  {
    "text": "whole bunch of static slides that I would just actually show you false and so what I've done here is I've kind of",
    "start": "1242679",
    "end": "1248830"
  },
  {
    "text": "prepared a little script to set up vault for me this is just a Astra that I'm happy to show you so this is",
    "start": "1248830",
    "end": "1262840"
  },
  {
    "text": "just a batch script that's basically starting vault and creating a whole bunch of backends for me so you can see",
    "start": "1262840",
    "end": "1269320"
  },
  {
    "text": "that it's it has set up the AWS back-end the Postgres back-end the transit back-end etc so what I want to show you",
    "start": "1269320",
    "end": "1276730"
  },
  {
    "text": "is the very basic vault use case so I'm gonna tell Walt where I live or where",
    "start": "1276730",
    "end": "1285040"
  },
  {
    "text": "the vault server lives and now I can",
    "start": "1285040",
    "end": "1293140"
  },
  {
    "text": "check the vault so ass Turkey and then you can create",
    "start": "1293140",
    "end": "1301150"
  },
  {
    "text": "key holders use a Shamir secret sharing so this eliminates the whole one person",
    "start": "1301150",
    "end": "1307300"
  },
  {
    "text": "has access to everything so in the event of a compromise you can seal the vault and it requires a quorum of key holders",
    "start": "1307300",
    "end": "1314140"
  },
  {
    "text": "that are set up whenever vault is configured to unseal the vault so for example at carb there are five",
    "start": "1314140",
    "end": "1319809"
  },
  {
    "text": "people who have keys and I like to use the analogy if you've ever seen like a movie where people capture the President",
    "start": "1319809",
    "end": "1326260"
  },
  {
    "text": "and like three people have to like type in their access codes disarm the nuclear bomb that's actually",
    "start": "1326260",
    "end": "1331510"
  },
  {
    "text": "how vault works it's very very similar like five people have access codes and three people need to type them in in",
    "start": "1331510",
    "end": "1337900"
  },
  {
    "text": "order to unseal the vault and all of that's configurable at boot time you can have a hundred keys with",
    "start": "1337900",
    "end": "1342940"
  },
  {
    "text": "two people who need to unseal or you can have one key with one person who needs to unseal but we definitely recommend a",
    "start": "1342940",
    "end": "1349330"
  },
  {
    "text": "higher number than one and one I couldn't seal the vault right now and then unseal it but I don't want to do that instead I want to show you kind of",
    "start": "1349330",
    "end": "1355870"
  },
  {
    "text": "writing to the generic back end so by default without mounting anything vault behaves very similarly to something like",
    "start": "1355870",
    "end": "1362680"
  },
  {
    "text": "LastPass or one password so you have the ability to just write and it actually",
    "start": "1362680",
    "end": "1368020"
  },
  {
    "text": "just post command with Girl the tap well not with but like curl under the hood I can write up the two secret and then",
    "start": "1368020",
    "end": "1375970"
  },
  {
    "text": "then above a secret so in this case I'll write to foo and I can say data so all",
    "start": "1375970",
    "end": "1381790"
  },
  {
    "text": "of the all of the data that gets written",
    "start": "1381790",
    "end": "1388000"
  },
  {
    "text": "to the secret store is in a key equals value format and then I'll actually come back as JSON so if I did this right I",
    "start": "1388000",
    "end": "1395320"
  },
  {
    "text": "did the date it was written to and the way I can get that data back is the",
    "start": "1395320",
    "end": "1404050"
  },
  {
    "text": "exact opposite and you can see we get a little bit more information back than we did when we wrote the data so we get",
    "start": "1404050",
    "end": "1409390"
  },
  {
    "text": "this lease ID lease duration and whether the lease is renewable or not talk about renewable and a little bit because it'll",
    "start": "1409390",
    "end": "1414790"
  },
  {
    "text": "make more sense in a different context the lease ID and the lease duration actually uniquely identify this lease so",
    "start": "1414790",
    "end": "1421930"
  },
  {
    "text": "we have the ability to revoke this secret without actually knowing its contents so this means that we can",
    "start": "1421930",
    "end": "1427000"
  },
  {
    "text": "safely store that UUID somewhere else and in the event of a compromise we can revoke that UUID and vault we'll know",
    "start": "1427000",
    "end": "1433210"
  },
  {
    "text": "what secret it maps to so we don't have to know exactly that the secret is named foo all we need to know is the UID the",
    "start": "1433210",
    "end": "1440410"
  },
  {
    "text": "ability to output this as JSON which is",
    "start": "1440410",
    "end": "1445810"
  },
  {
    "text": "super useful for things like automation and a lot of the the scripts that I'll show you here today I use a tool called",
    "start": "1445810",
    "end": "1452530"
  },
  {
    "text": "JQ which will allow me to like pull the data out at zip for example and so this",
    "start": "1452530",
    "end": "1460660"
  },
  {
    "text": "is a really easy way to the data out of all put data into vault you can write you can't write files but",
    "start": "1460660",
    "end": "1469239"
  },
  {
    "text": "you can write from a file so if you have a bunch of K equals value pairs in a file you can use the app sign and vault",
    "start": "1469239",
    "end": "1475659"
  },
  {
    "text": "will read each of them in and create the value out of that so that's the generic backend it behaves very similarly with",
    "start": "1475659",
    "end": "1483039"
  },
  {
    "text": "one password you just give it a password at a particular key and then you get attributes back out cool so the next",
    "start": "1483039",
    "end": "1496899"
  },
  {
    "text": "thing I would like to show is the transit endpoint so how many people are familiar with Amazon's kms okay so the",
    "start": "1496899",
    "end": "1505330"
  },
  {
    "text": "transit endpoint behaves very similarly to Amazon's kms the notion is that vault",
    "start": "1505330",
    "end": "1510429"
  },
  {
    "text": "is going to maintain this encryption key so this is where vault acts as an encryption service and this is super",
    "start": "1510429",
    "end": "1516220"
  },
  {
    "text": "useful for things like web applications or client applications traditionally your web application needs to know the",
    "start": "1516220",
    "end": "1522429"
  },
  {
    "text": "encryption key so you have sensitive information maybe it's a credit card number even something like a phone number that you want to encrypt in the",
    "start": "1522429",
    "end": "1528909"
  },
  {
    "text": "database but you want to store that encryption key offline you don't want your web application having access to",
    "start": "1528909",
    "end": "1534820"
  },
  {
    "text": "the encryption keys because if someone compromises the database or the web application they have everything on one",
    "start": "1534820",
    "end": "1540039"
  },
  {
    "text": "you want to make the attack surface as distributed as possible so that multiple",
    "start": "1540039",
    "end": "1545859"
  },
  {
    "text": "systems have to be compromised in order to actually have a successful attack vault provides this encryption as a",
    "start": "1545859",
    "end": "1552519"
  },
  {
    "text": "service and the way it does this is through the transit back-end so vault is going to create an encryption key for us",
    "start": "1552519",
    "end": "1557799"
  },
  {
    "text": "and then all we do is we write data to vault and their response is the encrypted data and then we store that in",
    "start": "1557799",
    "end": "1564129"
  },
  {
    "text": "our database and at any time we want access to the unencrypted data we write",
    "start": "1564129",
    "end": "1569139"
  },
  {
    "text": "with the encrypted data and vault gives us back the unencrypted data assuming we're still authorized to do so so if",
    "start": "1569139",
    "end": "1576519"
  },
  {
    "text": "you have an application that is behaving roughly you can revoke that applications access and when it says hey decrypt the",
    "start": "1576519",
    "end": "1582879"
  },
  {
    "text": "secret vault just as now so what that means is your applications need to be resilient to that and if you're using",
    "start": "1582879",
    "end": "1589059"
  },
  {
    "text": "any of the official plugins they they're built in resilience is there it'll just return like the empty value and login",
    "start": "1589059",
    "end": "1595149"
  },
  {
    "text": "exception as opposed - like freaking out but I'll show you the application that I built today that will freak out just for the purposes of",
    "start": "1595149",
    "end": "1601360"
  },
  {
    "text": "the demo that shows you what happens whenever the key has been revoked so if",
    "start": "1601360",
    "end": "1606370"
  },
  {
    "text": "we take a look at the transit setup it's pretty straightforward I'm writing to",
    "start": "1606370",
    "end": "1614320"
  },
  {
    "text": "the transit encrypt demo with a plaintext value and then I'm gonna output that ciphertext value so I'm",
    "start": "1614320",
    "end": "1621669"
  },
  {
    "text": "gonna go ahead and run that and you can see we got back this kind of goggly goop",
    "start": "1621669",
    "end": "1627419"
  },
  {
    "text": "vault with a prefix anything that comes from the transit back-end in fact it'll prefix a lot of its secrets with an",
    "start": "1627419",
    "end": "1633909"
  },
  {
    "text": "indicator that says hey this is from vult and this is version zero of the cipher the next version of vault 0.3 is",
    "start": "1633909",
    "end": "1641380"
  },
  {
    "text": "going to support inline key rotation so that version of the cipher is super important so the next version of vault",
    "start": "1641380",
    "end": "1646480"
  },
  {
    "text": "if you want to rotate your key that the web application would say hey vault decrypt this data and if alt would say",
    "start": "1646480",
    "end": "1652029"
  },
  {
    "text": "oh this looks like the old safer I'm gonna decrypt it re encrypt it with the old key and I'll give you back not only",
    "start": "1652029",
    "end": "1658090"
  },
  {
    "text": "the plaintext value but the new ciphertext value that has the new encryption algorithm so this means you can do online key rotation without any",
    "start": "1658090",
    "end": "1665860"
  },
  {
    "text": "interruption in fact your developer maybe need aware of it so let's go look",
    "start": "1665860",
    "end": "1672100"
  },
  {
    "text": "at what this might look like in something like a rails application so I put together this little rails",
    "start": "1672100",
    "end": "1677980"
  },
  {
    "text": "application yesterday which stores all of my friends and their credit card numbers I don't know about you but I",
    "start": "1677980",
    "end": "1684130"
  },
  {
    "text": "really like to keep my friend's credit card numbers on on hand just in case I need to buy something on Amazon",
    "start": "1684130",
    "end": "1692010"
  },
  {
    "text": "okay I don't know why it's not working but",
    "start": "1709010",
    "end": "1713289"
  },
  {
    "text": "the demo gods are not with me this morning I can move on to the next one and hopefully figure out why this one's",
    "start": "1718770",
    "end": "1724740"
  },
  {
    "text": "not working but basically what I was going to show you is that the application will encrypt the data and",
    "start": "1724740",
    "end": "1730080"
  },
  {
    "text": "it'll store in the database it only in stores the encrypted value but we're able to get the plaintext value back by",
    "start": "1730080",
    "end": "1735600"
  },
  {
    "text": "querying fault but I have some other demos and that we can come back to this if there's time and so the next thing I",
    "start": "1735600",
    "end": "1741720"
  },
  {
    "text": "want to show you is the actual dynamic secret generation and this is where vault is very very different than any",
    "start": "1741720",
    "end": "1747179"
  },
  {
    "text": "secret management tool so let's take a look at something like post graphs so",
    "start": "1747179",
    "end": "1753809"
  },
  {
    "text": "here what I'm doing is I'm telling Postgres hey like I want you to give me",
    "start": "1753809",
    "end": "1759270"
  },
  {
    "text": "credentials but I'm doing laps through vault so in that setup script what I did was I I gave vault access to the",
    "start": "1759270",
    "end": "1766860"
  },
  {
    "text": "database kind of is the root user of the Postgres user which has the equivalent",
    "start": "1766860",
    "end": "1771960"
  },
  {
    "text": "of sudo and Postgres LAN that means it can create databases create users etc and it would be from the hook as path",
    "start": "1771960",
    "end": "1782000"
  },
  {
    "text": "you can mount multiple paths what I'm going to get back is a unique set of credentials that have a certain",
    "start": "1782000",
    "end": "1788100"
  },
  {
    "text": "expiration so I'll go ahead and run this just to show you what happens so you'll",
    "start": "1788100",
    "end": "1795659"
  },
  {
    "text": "notice that we got back the don't worry about the host but this is the username",
    "start": "1795659",
    "end": "1801179"
  },
  {
    "text": "and password that we got back from Postgres and then I just connected with Postgres so this is actually a remote",
    "start": "1801179",
    "end": "1806610"
  },
  {
    "text": "piece equal instance that's running on ec2 somewhere and I have the ability to",
    "start": "1806610",
    "end": "1813049"
  },
  {
    "text": "list all of the databases and this user actually only has read-only access so we",
    "start": "1813049",
    "end": "1818340"
  },
  {
    "text": "set up the template so that any credentials that get read from cred",
    "start": "1818340",
    "end": "1823860"
  },
  {
    "text": "slash read-only endpoint controls that are read-only you can imagine this is a scenario that's great for something like",
    "start": "1823860",
    "end": "1829740"
  },
  {
    "text": "application developers where they want to be able to go in and debug the database they want to inspect some values potentially diagnose an issue but",
    "start": "1829740",
    "end": "1836070"
  },
  {
    "text": "you don't want them to be able to do anything damaging you just want them to be able to read data so with their token",
    "start": "1836070",
    "end": "1841500"
  },
  {
    "text": "they might be Emily they'd be able to generate read-only values so I'm just",
    "start": "1841500",
    "end": "1848159"
  },
  {
    "text": "going to copy this here we will quit Postgres so I can read this",
    "start": "1848159",
    "end": "1856159"
  },
  {
    "text": "any number of times it will notice that the value we're getting back is",
    "start": "1856159",
    "end": "1861409"
  },
  {
    "text": "different every time so if you look at this username password it's constantly changing if I went into Postgres right",
    "start": "1861409",
    "end": "1867980"
  },
  {
    "text": "now and I list the users we would see a user for each of these now after I think",
    "start": "1867980",
    "end": "1874250"
  },
  {
    "text": "I said it for 15 minutes but whatever the least duration is if these secrets haven't renewed themselves",
    "start": "1874250",
    "end": "1880299"
  },
  {
    "text": "I'm sorry it's one day 3,600 if they haven't renewed themselves in that time",
    "start": "1880299",
    "end": "1886850"
  },
  {
    "text": "frame vault will revoke them so what that means is your application needs to have intelligence to say almost like a",
    "start": "1886850",
    "end": "1893240"
  },
  {
    "text": "TTL hey I'm still using this secret and it does that on some interval we recommend least duration over two so you",
    "start": "1893240",
    "end": "1899120"
  },
  {
    "text": "would renew every 1,800 seconds in this case instead of 3,600 so every 1800",
    "start": "1899120",
    "end": "1905179"
  },
  {
    "text": "seconds you have a background job that pings vault and says hey I'm still using this secret and that will reset kind of",
    "start": "1905179",
    "end": "1911090"
  },
  {
    "text": "the countdown clock if you will of this secret if that has zero there's two ways that that secret is revoked first of all",
    "start": "1911090",
    "end": "1918470"
  },
  {
    "text": "it uses a right ahead log so even in the event that something terrible would happen vault could rollback and the",
    "start": "1918470",
    "end": "1924409"
  },
  {
    "text": "issue of failure but we also create the Postgres user with an expiration so when",
    "start": "1924409",
    "end": "1930740"
  },
  {
    "text": "the back-end that supports it has the functionality vault we'll create the user with it if someone is able to",
    "start": "1930740",
    "end": "1938870"
  },
  {
    "text": "completely sabotage fault the Postgres user itself is created with I'll show",
    "start": "1938870",
    "end": "1948019"
  },
  {
    "text": "you here the valid until clause and that",
    "start": "1948019",
    "end": "1953470"
  },
  {
    "text": "expiration value comes from vault it's based off of that lease duration so that means that even if vault completely goes",
    "start": "1953470",
    "end": "1959570"
  },
  {
    "text": "offline I could completely tear down this particular vault instance Postgres will still expire those users after 3600",
    "start": "1959570",
    "end": "1966500"
  },
  {
    "text": "seconds so we have that double layer of security that even if vault itself is compromised the secrets can still be",
    "start": "1966500",
    "end": "1973009"
  },
  {
    "text": "revoked if the storage back-end supports it so for every every value that we're",
    "start": "1973009",
    "end": "1979610"
  },
  {
    "text": "getting back this is creating a new user and if I leave this run for an hour those users will all be volta vlog",
    "start": "1979610",
    "end": "1985780"
  },
  {
    "text": "you'll actually see over oak provoked and you could either wrinkles they're",
    "start": "1985780",
    "end": "1991390"
  },
  {
    "text": "taking place if the application is renewing so I think kind of the obvious",
    "start": "1991390",
    "end": "1997720"
  },
  {
    "text": "question that is how do we get these secrets on to like our application and",
    "start": "1997720",
    "end": "2002910"
  },
  {
    "text": "you have a couple ways so you could use something straight up like curl and grab the JSON output and put it on disk or we",
    "start": "2002910",
    "end": "2010710"
  },
  {
    "text": "have a tool which is console template which will actually allow us to open up",
    "start": "2010710",
    "end": "2017670"
  },
  {
    "text": "from vault directly into the filesystem and you can change the permissions on those files so that only the application",
    "start": "2017670",
    "end": "2024270"
  },
  {
    "text": "can read them you can also pull things into the environment with other tools that are not console template so if I",
    "start": "2024270",
    "end": "2030120"
  },
  {
    "text": "look at this console template basically what we're doing here is we're querying",
    "start": "2030120",
    "end": "2035760"
  },
  {
    "text": "vault for the passwords key and then we're grabbing the data at go-to so what",
    "start": "2035760",
    "end": "2044640"
  },
  {
    "text": "I'm going to do here is I have to actually create this password so I'll do",
    "start": "2044640",
    "end": "2049950"
  },
  {
    "text": "a vault right secret passwords what do we want our go-to password to be go to",
    "start": "2049950",
    "end": "2059220"
  },
  {
    "text": "London okay I'm doing this to prove to you that this isn't just some elaborate scheme that I've pre-recorded so now if",
    "start": "2059220",
    "end": "2067320"
  },
  {
    "text": "I run template dot H you can see it's actually pulling out that password but",
    "start": "2067320",
    "end": "2073379"
  },
  {
    "text": "obviously that was very quickly because it's communicating locally but if we change this password it'll automatically",
    "start": "2073380",
    "end": "2078990"
  },
  {
    "text": "update very similar to the edge term that happens in Kabul template with concept and the advantage here is that",
    "start": "2078990",
    "end": "2086580"
  },
  {
    "text": "consul template is actually doing that that lease renewal intergroup interval in the background for us so you could",
    "start": "2086580",
    "end": "2094050"
  },
  {
    "text": "actually replace this with something like reading from Postgres creds read-only so if I edit this and instead",
    "start": "2094050",
    "end": "2104820"
  },
  {
    "text": "of reading from secret passwords I could read from Postgres creds read-only and I",
    "start": "2104820",
    "end": "2114570"
  },
  {
    "text": "think it's username",
    "start": "2114570",
    "end": "2117830"
  },
  {
    "text": "I guess their own key but this is actually querying for new Postgres",
    "start": "2129240",
    "end": "2135720"
  },
  {
    "text": "credentials so every time this actually asks for a new value it'll get new",
    "start": "2135720",
    "end": "2141090"
  },
  {
    "text": "Postgres potentials but once it has the credentials it'll renew them so this means that your application could use something like",
    "start": "2141090",
    "end": "2146850"
  },
  {
    "text": "console template to request secrets assuming it has the proper authorization and then once it has the secret the like",
    "start": "2146850",
    "end": "2153570"
  },
  {
    "text": "something like console template or vault Riviere vault rails would be responsible for renewing it in the background and it",
    "start": "2153570",
    "end": "2158760"
  },
  {
    "text": "has built-in support for that so you don't have to worry about the complexity there hmm so this is great for something like you",
    "start": "2158760",
    "end": "2165630"
  },
  {
    "text": "imagine like a rails application you'd be writing out your your database yamo file so that you have the ability to",
    "start": "2165630",
    "end": "2171530"
  },
  {
    "text": "have dynamically generated secrets without the application needing to have all of this intricate knowledge of how",
    "start": "2171530",
    "end": "2176700"
  },
  {
    "text": "vault works you just give it a path you read from that path and you get secrets back so it looks like I'm actually rate",
    "start": "2176700",
    "end": "2184470"
  },
  {
    "text": "at time so we're not going to have a chance to go back to the template demo",
    "start": "2184470",
    "end": "2190170"
  },
  {
    "text": "but I'll get it working and tweet out the URL so that everybody can take a look at it and you can put your friends",
    "start": "2190170",
    "end": "2195600"
  },
  {
    "text": "credit card numbers in for me if you want it's totally optional I think I",
    "start": "2195600",
    "end": "2202170"
  },
  {
    "text": "don't know if we have time for questions Martin okay",
    "start": "2202170",
    "end": "2211550"
  },
  {
    "text": "Wow we have 20 minutes",
    "start": "2211550",
    "end": "2215300"
  },
  {
    "text": "well there are no questions in the app so I'm happy to take real-life questions yeah in the back some production a",
    "start": "2220820",
    "end": "2231770"
  },
  {
    "text": "minute you mean to repeat that okay uh the question was this was an impressive",
    "start": "2231770",
    "end": "2237050"
  },
  {
    "text": "talk thank you who's using vultan production this is a difficult question to answer because a",
    "start": "2237050",
    "end": "2244100"
  },
  {
    "text": "lot of the customers who are using vault that are impressive have asked not to be named there's a very large coupon",
    "start": "2244100",
    "end": "2251660"
  },
  {
    "text": "manufacturer that's based in the United States there are a number of financial",
    "start": "2251660",
    "end": "2257240"
  },
  {
    "text": "service firms that I will not mention expressed a lot of interest involved and I think the majority are now running it",
    "start": "2257240",
    "end": "2263120"
  },
  {
    "text": "in production a lot of the zero-point-three features are as a result of enterprises running this in",
    "start": "2263120",
    "end": "2269630"
  },
  {
    "text": "production we obviously use a vault in production atlases all of the keys that you add to Atlas are encrypted in vault",
    "start": "2269630",
    "end": "2275660"
  },
  {
    "text": "and I have a very detailed blog post about how that works on the architecture on the high score photograph' you're interested in reading like the",
    "start": "2275660",
    "end": "2282170"
  },
  {
    "text": "nitty-gritty technical details of how that exchange happens vault is a weird one so for other one source products a",
    "start": "2282170",
    "end": "2288740"
  },
  {
    "text": "lot of people are like yeah we totally use vagrant and you find when you get into the security space a lot of the a",
    "start": "2288740",
    "end": "2295820"
  },
  {
    "text": "lot of the ways that organizations protect themselves is by not telling what told using because that's a",
    "start": "2295820",
    "end": "2301940"
  },
  {
    "text": "potential attack vector so if I know that you're using LastPass I might be able to exploit the vulnerability the",
    "start": "2301940",
    "end": "2307100"
  },
  {
    "text": "same way that I know if I know you're using an unpatched version of open SSL I might be able to exploit vulnerabilities so they're very less open to talking",
    "start": "2307100",
    "end": "2313400"
  },
  {
    "text": "about who's using it I can say that on the day of release it had over 2,000",
    "start": "2313400",
    "end": "2318950"
  },
  {
    "text": "stars on github and it continues to grow it's one of our most quickly growing open source projects we hired a",
    "start": "2318950",
    "end": "2325220"
  },
  {
    "text": "full-time engineer to work on it so it's definitely popular it's used by a number of people I just can't really talk about",
    "start": "2325220",
    "end": "2330830"
  },
  {
    "text": "a lot of them other questions that I saw wasn't go ahead",
    "start": "2330830",
    "end": "2340589"
  },
  {
    "text": "so when you're talking about the dynamic secrets and stuff I guess you have to I mean you hit a couple of scripts there",
    "start": "2340589",
    "end": "2346809"
  },
  {
    "text": "it's not like I sort of took point that because I - I think we quite in Sun was going on so if I have my own database",
    "start": "2346809",
    "end": "2352839"
  },
  {
    "text": "and I want to like dynamic secrets obviously I've got a provide vault the way to create new secrets inside that",
    "start": "2352839",
    "end": "2358479"
  },
  {
    "text": "how do I do that yeah I did that in the setup script but I didn't really go",
    "start": "2358479",
    "end": "2366609"
  },
  {
    "text": "through it for two reasons so first of all the reason that I use scripts is because I can't type and talk at the",
    "start": "2366609",
    "end": "2373539"
  },
  {
    "text": "same time I've done it before and it doesn't work out very well so it's much easier for me just to instead of you",
    "start": "2373539",
    "end": "2379299"
  },
  {
    "text": "watching me typo 30 times it's so much smoother demo if I just have the scripts pre pre filled out but if we just go",
    "start": "2379299",
    "end": "2387009"
  },
  {
    "text": "through this file here or do I do it oh I didn't show the AWS demo so you can",
    "start": "2387009",
    "end": "2394269"
  },
  {
    "text": "dynamically generate AWS keys - but here's where I set up the back end so",
    "start": "2394269",
    "end": "2399579"
  },
  {
    "text": "these lines here and you can see what we're doing is so we mount the Postgres",
    "start": "2399579",
    "end": "2404769"
  },
  {
    "text": "back in and then I give it my connection",
    "start": "2404769",
    "end": "2409739"
  },
  {
    "text": "so we have a PostgreSQL back-end which is where you can store secrets and then we have a PostgreSQL secret back-end",
    "start": "2414689",
    "end": "2421479"
  },
  {
    "text": "that is how you can generate dynamic secrets from post graphs we've talked about renaming it but it's actually both",
    "start": "2421479",
    "end": "2427749"
  },
  {
    "text": "so you can use Postgres to store vault data the same way you could use the file",
    "start": "2427749",
    "end": "2432789"
  },
  {
    "text": "system or in memory but you can also use post press and we support my sequel uncas to dynamically generate secrets",
    "start": "2432789",
    "end": "2440619"
  },
  {
    "text": "using a vault so you give vault kind of the keys to the kingdom and you say hey manage Postgres credentials for me and you tell",
    "start": "2440619",
    "end": "2447160"
  },
  {
    "text": "vault how to do that so like if you go to this RDS instance you can login with the username vault and the password is",
    "start": "2447160",
    "end": "2453249"
  },
  {
    "text": "vault password obviously very secure and like I've configured all of this for you",
    "start": "2453249",
    "end": "2458679"
  },
  {
    "text": "and then you tell volts how to create the users so you're telling the ball at",
    "start": "2458679",
    "end": "2464499"
  },
  {
    "text": "the read-only point so when someone reads from read-only I want to create them a user and then I only grant them",
    "start": "2464499",
    "end": "2471929"
  },
  {
    "text": "select on all tables in the public schema so we're doing them to select instead of",
    "start": "2471929",
    "end": "2478540"
  },
  {
    "text": "the ability to modify tables and that's like postcard specific",
    "start": "2478540",
    "end": "2484690"
  },
  {
    "text": "right so the question is this template needs to be stored securely because it has the credentials to vault in general",
    "start": "2498420",
    "end": "2507099"
  },
  {
    "text": "you actually put this in a template an operator would configure by typing something into the configuring vault",
    "start": "2507099",
    "end": "2513420"
  },
  {
    "text": "there's there's a number of ways to configure vault internally we is private github repo that has our configuration",
    "start": "2513420",
    "end": "2520329"
  },
  {
    "text": "in it and then for like things like post graphs we have an out-of-band storage",
    "start": "2520329",
    "end": "2527140"
  },
  {
    "text": "engine that pulls that data in I'm at Reaper vision time but once it's",
    "start": "2527140",
    "end": "2532359"
  },
  {
    "text": "configured you no longer have to do this and even if vault is turned off if you're using a persistent back-end so",
    "start": "2532359",
    "end": "2537759"
  },
  {
    "text": "anything other than in-memory when it comes back online it knows all this information it's all encrypted at rest",
    "start": "2537759",
    "end": "2543000"
  },
  {
    "text": "so you only have to configure at once so ideally you would actually never put it in a template unless you were doing like",
    "start": "2543000",
    "end": "2549579"
  },
  {
    "text": "a disaster recovery thing I just made this template because watching me type all of this stuff out would have been",
    "start": "2549579",
    "end": "2555250"
  },
  {
    "text": "boring for you and very embarrassing for me I can show you the AWS backend if",
    "start": "2555250",
    "end": "2563109"
  },
  {
    "text": "you're interested in that that's actually super useful for developers so",
    "start": "2563109",
    "end": "2568539"
  },
  {
    "text": "what I have is a policy here if you're but yes it's just an IM policy for",
    "start": "2568539",
    "end": "2575200"
  },
  {
    "text": "developers so what I'm doing is in chart I'm forcing two-factor authentication so",
    "start": "2575200",
    "end": "2580990"
  },
  {
    "text": "I'm saying you cannot use our production infrastructure unless you have to factor off enabled pretty basic but point so",
    "start": "2580990",
    "end": "2588940"
  },
  {
    "text": "this allows anything on you to if the developer has you factor off and if I",
    "start": "2588940",
    "end": "2598230"
  },
  {
    "text": "will read AWS creds developer I'll get",
    "start": "2599039",
    "end": "2605920"
  },
  {
    "text": "back life access keys and so that's an eight if you're familiar with AWS that's",
    "start": "2605920",
    "end": "2611740"
  },
  {
    "text": "an access key ID and a secret access key and that has access to my personal ec2",
    "start": "2611740",
    "end": "2618549"
  },
  {
    "text": "or my personal AWS account please don't go Bitcoin mining if you have two-factor",
    "start": "2618549",
    "end": "2624160"
  },
  {
    "text": "authentication enabled which like the developer who actually requested these would need to have two-factor",
    "start": "2624160",
    "end": "2629559"
  },
  {
    "text": "authentication enabled or else it over object the actual creation at the ec2 level so the ami are the I am policy will",
    "start": "2629559",
    "end": "2637540"
  },
  {
    "text": "actually reject creation unless the user using these credentials has the two-factor authentication is a something",
    "start": "2637540",
    "end": "2655930"
  },
  {
    "text": "you could use for like a system that uploaded assets maybe it's like a CI server that compiles your JavaScript and",
    "start": "2655930",
    "end": "2662050"
  },
  {
    "text": "uploads it to some bucket on s3 you could have that system dynamically get secrets from the assets endpoint and the",
    "start": "2662050",
    "end": "2668830"
  },
  {
    "text": "only thing that you change there is instead of reading from creds developer you read from creds assets you get",
    "start": "2668830",
    "end": "2674140"
  },
  {
    "text": "different credentials back and these credentials one spot expire in one hour if they're not reviewed so I don't even",
    "start": "2674140",
    "end": "2680710"
  },
  {
    "text": "have to go delete them no just expire and when they expire they'll automatically be removed for me to be awesome",
    "start": "2680710",
    "end": "2685960"
  },
  {
    "text": "aunt furball other questions",
    "start": "2685960",
    "end": "2692880"
  },
  {
    "text": "do you yes so one thing I did not show because",
    "start": "2695190",
    "end": "2701720"
  },
  {
    "text": "it's really complicated and assumes you have kind of a deep knowledge of how PKI works is vault can actually act as a CA",
    "start": "2701720",
    "end": "2708780"
  },
  {
    "text": "so if you give vault a CA certificate people people or computers can request",
    "start": "2708780",
    "end": "2715670"
  },
  {
    "text": "certificates from vault and not only can they use that to authenticate with but you imagine most most organizations have",
    "start": "2715670",
    "end": "2722760"
  },
  {
    "text": "to distribute SSL certificates onto client machines if they're doing termination on something other than like",
    "start": "2722760",
    "end": "2727830"
  },
  {
    "text": "a load balancer and getting that information from vault as a CA is actually super helpful we do this",
    "start": "2727830",
    "end": "2733500"
  },
  {
    "text": "internally you can also enter Kate with vault using a certificate and so that's",
    "start": "2733500",
    "end": "2739830"
  },
  {
    "text": "the flip side of things so in addition to being able to generate certificates and then write those to disk you can actually authenticate with vault using a",
    "start": "2739830",
    "end": "2746490"
  },
  {
    "text": "certificate with my clients certificate exchange private public key those types of things you can authenticate with",
    "start": "2746490",
    "end": "2752940"
  },
  {
    "text": "vault using github that's how our internal stuff works so we have people who are in on github and only people who",
    "start": "2752940",
    "end": "2759660"
  },
  {
    "text": "are in team are able to have root access to vault everybody else has which is your developer app just of all which",
    "start": "2759660",
    "end": "2766530"
  },
  {
    "text": "means they're much smaller scope and you have full control over the apples that",
    "start": "2766530",
    "end": "2771600"
  },
  {
    "text": "you set up in volt and you just give it a policy and you tell it's all path based so if you don't want developers to",
    "start": "2771600",
    "end": "2777930"
  },
  {
    "text": "be able to touch the AWS back end it's denied by default so you can give them access to a particular point and as long",
    "start": "2777930",
    "end": "2785130"
  },
  {
    "text": "as their key fits within that role they'll have access to it the only exception is the root key or route",
    "start": "2785130",
    "end": "2791420"
  },
  {
    "text": "anyway so that's initial 5 or 100 or one",
    "start": "2791420",
    "end": "2797420"
  },
  {
    "text": "unfed rated access everything's logged and audited it but it's usually recommended that you take that root key",
    "start": "2797990",
    "end": "2803340"
  },
  {
    "text": "and you put it on like a USB Drive and a safe and then you give like a pending",
    "start": "2803340",
    "end": "2808590"
  },
  {
    "text": "patient about name password authentication to operators and you can still tie them to a pseudo policy but",
    "start": "2808590",
    "end": "2815730"
  },
  {
    "text": "they don't have that root credential which is like the keys to the kingdom",
    "start": "2815730",
    "end": "2820819"
  },
  {
    "text": "okay regarding revoking access of seniors potentials the quantity left is",
    "start": "2823290",
    "end": "2832780"
  },
  {
    "text": "a core work required and have it be reinstate okay so the question is with",
    "start": "2832780",
    "end": "2839380"
  },
  {
    "text": "regards to revoking secrets is quorum required the answer is is no I'll talk",
    "start": "2839380",
    "end": "2846070"
  },
  {
    "text": "about leader election in a second are ackles required so yes you have",
    "start": "2846070",
    "end": "2851860"
  },
  {
    "text": "so everything involved is a brief so the path is very specific so like Postgres",
    "start": "2851860",
    "end": "2857320"
  },
  {
    "text": "creds read-only you have to have access to either that element so you can revoke",
    "start": "2857320",
    "end": "2863080"
  },
  {
    "text": "a token that you're a key that you've created so I could revoke anything I created here I also happen to be logged",
    "start": "2863080",
    "end": "2868690"
  },
  {
    "text": "in as the root to vault right now so I can delete anything if I'm logged in as a developer I can delete things that",
    "start": "2868690",
    "end": "2874450"
  },
  {
    "text": "I've created and things that fall under my tree so there's a command called like",
    "start": "2874450",
    "end": "2879490"
  },
  {
    "text": "revoke tree and they that will literally revoke everything you've created but I can't revoke someone else's keys unless",
    "start": "2879490",
    "end": "2886120"
  },
  {
    "text": "I'm above them so it's very similar to like an organizational hierarchy in a way what was your third point no so once",
    "start": "2886120",
    "end": "2895360"
  },
  {
    "text": "they're deleted they're deleted you can generate new ones and the notion is that the same way we throw away",
    "start": "2895360",
    "end": "2900940"
  },
  {
    "text": "infrastructure talk about mutable infrastructure we throw away infrastructure we're starting to think about secrets the same way right we have",
    "start": "2900940",
    "end": "2907270"
  },
  {
    "text": "these dynamically generated secrets and we really don't care what the database password is as long as it's valid so if",
    "start": "2907270",
    "end": "2912610"
  },
  {
    "text": "you accidentally revoke a key you just reauthorize the access and the application will just generate new",
    "start": "2912610",
    "end": "2917920"
  },
  {
    "text": "credentials and you're like okay whatever it's a new password I don't care those passwords have a very high degree of entropy as far as is quorum",
    "start": "2917920",
    "end": "2925600"
  },
  {
    "text": "required and so vault will support hae mode or are you talking about quorum",
    "start": "2925600",
    "end": "2931630"
  },
  {
    "text": "about people or quorum about computers okay so no quorum of people is not",
    "start": "2931630",
    "end": "2937570"
  },
  {
    "text": "involved the only time a quorum of people is involved is when the vault is skilled it takes whatever the key threshold is",
    "start": "2937570",
    "end": "2943360"
  },
  {
    "text": "to unlock the vault as far as quorum goes with a chase of all it does support a che but it has to be backed by a",
    "start": "2943360",
    "end": "2949300"
  },
  {
    "text": "back-end that supports leader election so console zookeeper I think are the only two that can do a che",
    "start": "2949300",
    "end": "2955450"
  },
  {
    "text": "and it it's a very primitive h.a we're going to improve it in the future but you don't require a quorum to do",
    "start": "2955450",
    "end": "2962589"
  },
  {
    "text": "anything so one of them is elected a leader the followers will forward requests to the leader vault 0-3 we'll",
    "start": "2962589",
    "end": "2968980"
  },
  {
    "text": "have a few read requests that the follower is going to respond to to take the load off the leader but write",
    "start": "2968980",
    "end": "2974109"
  },
  {
    "text": "request fall forward to the leader if the leader goes down you know something",
    "start": "2974109",
    "end": "2979240"
  },
  {
    "text": "like council lock or zookeeper lock would just elect a new leader and then request will start right so it's a very",
    "start": "2979240",
    "end": "2987520"
  },
  {
    "text": "basic election algorithm but you're only ever writing to one server and right now",
    "start": "2987520",
    "end": "2992950"
  },
  {
    "text": "you'll only have a read from one server unless you're running on like vault Lasser other questions comments",
    "start": "2992950",
    "end": "3002250"
  },
  {
    "text": "complaints concerns",
    "start": "3002250",
    "end": "3005510"
  },
  {
    "text": "well I don't have anything else feel free to find me I'll be around for the",
    "start": "3008410",
    "end": "3013450"
  },
  {
    "text": "next like four or five hours and then I got to go catch a flight back to the US but feel free to ping me on Twitter or",
    "start": "3013450",
    "end": "3020380"
  },
  {
    "text": "you can email me I'm Seth mark on the internet I'm South Fargo at hash Gorp so if you have any questions or you want",
    "start": "3020380",
    "end": "3026410"
  },
  {
    "text": "follow-up I will publish the demo materials probably on github somewhere",
    "start": "3026410",
    "end": "3031869"
  },
  {
    "text": "and I'll tweet that link out shortly so if you're interested in diving in to my terrible shell scripts you're more than",
    "start": "3031869",
    "end": "3038259"
  },
  {
    "text": "welcome to do so cool thank you",
    "start": "3038259",
    "end": "3043259"
  },
  {
    "text": "you",
    "start": "3053130",
    "end": "3055190"
  }
]